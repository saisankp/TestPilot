{"test_class": {"identifier": "SQLExceptionTest", "superclass": "", "interfaces": "", "fields": [], "file": "agent/embedded/src/test/java/org/glowroot/agent/embedded/sql/SQLExceptionTest.java"}, "test_case": {"identifier": "testCallSetNextExceptionMultipleTimesOnSameSQLException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCallSetNextExceptionMultipleTimesOnSameSQLException() {\n        Throwable t1 = new Throwable();\n        Throwable t2 = new Throwable();\n        Throwable t3 = new Throwable();\n        SQLException e1 = new SQLException(t1);\n        SQLException e2 = new SQLException(t2);\n        SQLException e3 = new SQLException(t3);\n        e1.setNextException(e2);\n        e1.setNextException(e3);\n\n        List<Throwable> list = Lists.newArrayList(e1);\n        assertThat(list.get(0)).isEqualTo(e1);\n        assertThat(list.get(1)).isEqualTo(t1);\n        assertThat(list.get(2)).isEqualTo(e2);\n        assertThat(list.get(3)).isEqualTo(t2);\n        assertThat(list.get(4)).isEqualTo(e3);\n        assertThat(list.get(5)).isEqualTo(t3);\n    }", "signature": "void testCallSetNextExceptionMultipleTimesOnSameSQLException()", "full_signature": "@Test public void testCallSetNextExceptionMultipleTimesOnSameSQLException()", "class_method_signature": "SQLExceptionTest.testCallSetNextExceptionMultipleTimesOnSameSQLException()", "testcase": true, "constructor": false, "invocations": ["setNextException", "setNextException", "newArrayList", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "get"]}, "focal_class": {"identifier": "SQLException", "superclass": "extends Exception", "interfaces": "implements Iterable<Throwable>", "fields": [{"original_string": "private final @Nullable String sqlState;", "modifier": "private final @Nullable", "type": "String", "declarator": "sqlState", "var_name": "sqlState"}, {"original_string": "private final int errorCode;", "modifier": "private final", "type": "int", "declarator": "errorCode", "var_name": "errorCode"}, {"original_string": "private volatile @Nullable SQLException next;", "modifier": "private volatile @Nullable", "type": "SQLException", "declarator": "next", "var_name": "next"}], "methods": [{"identifier": "SQLException", "parameters": "(String message, @Nullable String sqlState, int errorCode)", "modifiers": "public", "return": "", "signature": " SQLException(String message, @Nullable String sqlState, int errorCode)", "full_signature": "public  SQLException(String message, @Nullable String sqlState, int errorCode)", "class_method_signature": "SQLException.SQLException(String message, @Nullable String sqlState, int errorCode)", "testcase": false, "constructor": true}, {"identifier": "SQLException", "parameters": "(String message, @Nullable String sqlState)", "modifiers": "public", "return": "", "signature": " SQLException(String message, @Nullable String sqlState)", "full_signature": "public  SQLException(String message, @Nullable String sqlState)", "class_method_signature": "SQLException.SQLException(String message, @Nullable String sqlState)", "testcase": false, "constructor": true}, {"identifier": "SQLException", "parameters": "(String message)", "modifiers": "public", "return": "", "signature": " SQLException(String message)", "full_signature": "public  SQLException(String message)", "class_method_signature": "SQLException.SQLException(String message)", "testcase": false, "constructor": true}, {"identifier": "SQLException", "parameters": "()", "modifiers": "public", "return": "", "signature": " SQLException()", "full_signature": "public  SQLException()", "class_method_signature": "SQLException.SQLException()", "testcase": false, "constructor": true}, {"identifier": "SQLException", "parameters": "(@Nullable Throwable cause)", "modifiers": "public", "return": "", "signature": " SQLException(@Nullable Throwable cause)", "full_signature": "public  SQLException(@Nullable Throwable cause)", "class_method_signature": "SQLException.SQLException(@Nullable Throwable cause)", "testcase": false, "constructor": true}, {"identifier": "SQLException", "parameters": "(String message, @Nullable Throwable cause)", "modifiers": "public", "return": "", "signature": " SQLException(String message, @Nullable Throwable cause)", "full_signature": "public  SQLException(String message, @Nullable Throwable cause)", "class_method_signature": "SQLException.SQLException(String message, @Nullable Throwable cause)", "testcase": false, "constructor": true}, {"identifier": "SQLException", "parameters": "(String message, @Nullable String sqlState, @Nullable Throwable cause)", "modifiers": "public", "return": "", "signature": " SQLException(String message, @Nullable String sqlState, @Nullable Throwable cause)", "full_signature": "public  SQLException(String message, @Nullable String sqlState, @Nullable Throwable cause)", "class_method_signature": "SQLException.SQLException(String message, @Nullable String sqlState, @Nullable Throwable cause)", "testcase": false, "constructor": true}, {"identifier": "SQLException", "parameters": "(String message, @Nullable String sqlState, int errorCode,\n            @Nullable Throwable cause)", "modifiers": "public", "return": "", "signature": " SQLException(String message, @Nullable String sqlState, int errorCode,\n            @Nullable Throwable cause)", "full_signature": "public  SQLException(String message, @Nullable String sqlState, int errorCode,\n            @Nullable Throwable cause)", "class_method_signature": "SQLException.SQLException(String message, @Nullable String sqlState, int errorCode,\n            @Nullable Throwable cause)", "testcase": false, "constructor": true}, {"identifier": "getSQLState", "parameters": "()", "modifiers": "public @Nullable", "return": "String", "signature": "String getSQLState()", "full_signature": "public @Nullable String getSQLState()", "class_method_signature": "SQLException.getSQLState()", "testcase": false, "constructor": false}, {"identifier": "getErrorCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getErrorCode()", "full_signature": "public int getErrorCode()", "class_method_signature": "SQLException.getErrorCode()", "testcase": false, "constructor": false}, {"identifier": "getNextException", "parameters": "()", "modifiers": "public @Nullable", "return": "SQLException", "signature": "SQLException getNextException()", "full_signature": "public @Nullable SQLException getNextException()", "class_method_signature": "SQLException.getNextException()", "testcase": false, "constructor": false}, {"identifier": "setNextException", "parameters": "(SQLException exception)", "modifiers": "public", "return": "void", "signature": "void setNextException(SQLException exception)", "full_signature": "public void setNextException(SQLException exception)", "class_method_signature": "SQLException.setNextException(SQLException exception)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Throwable>", "signature": "Iterator<Throwable> iterator()", "full_signature": "@Override public Iterator<Throwable> iterator()", "class_method_signature": "SQLException.iterator()", "testcase": false, "constructor": false}], "file": "agent/embedded/src/main/java/org/glowroot/agent/embedded/sql/SQLException.java"}, "focal_method": {"identifier": "setNextException", "parameters": "(SQLException exception)", "modifiers": "public", "return": "void", "body": "public void setNextException(SQLException exception) {\n        SQLException curr = this;\n        while (true) {\n            SQLException next = curr.next;\n            if (next == null) {\n                curr.next = exception;\n                return;\n            }\n            curr = next;\n        }\n    }", "signature": "void setNextException(SQLException exception)", "full_signature": "public void setNextException(SQLException exception)", "class_method_signature": "SQLException.setNextException(SQLException exception)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 16336212, "url": "https://github.com/glowroot/glowroot", "stars": 736, "created": "1/29/2014 5:25:58 AM +00:00", "updates": "2020-01-24T11:13:42+00:00", "fork": "False", "license": "licensed"}}