{"test_class": {"identifier": "MultiStringIndexerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Row[] rows = new Row[]{\n        Row.of(new Object[]{\"a\", 1L}),\n        Row.of(new Object[]{null, 1L}),\n        Row.of(new Object[]{\"b\", 1L}),\n        Row.of(new Object[]{\"b\", 3L}),\n\n    };", "modifier": "private static", "type": "Row[]", "declarator": "rows = new Row[]{\n        Row.of(new Object[]{\"a\", 1L}),\n        Row.of(new Object[]{null, 1L}),\n        Row.of(new Object[]{\"b\", 1L}),\n        Row.of(new Object[]{\"b\", 3L}),\n\n    }", "var_name": "rows"}, {"original_string": "private Map<String, Long> map1;", "modifier": "private", "type": "Map<String, Long>", "declarator": "map1", "var_name": "map1"}, {"original_string": "private Map<Long, Long> map2;", "modifier": "private", "type": "Map<Long, Long>", "declarator": "map2", "var_name": "map2"}], "file": "core/src/test/java/com/alibaba/alink/pipeline/dataproc/MultiStringIndexerTest.java"}, "test_case": {"identifier": "testMultiStringIndexer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMultiStringIndexer() throws Exception {\n        BatchOperator data = new MemSourceBatchOp(Arrays.asList(rows), new String[]{\"f0\", \"f1\"});\n\n        MultiStringIndexer stringIndexer = new MultiStringIndexer()\n            .setSelectedCols(\"f0\", \"f1\")\n            .setOutputCols(\"f0_index\", \"f1_index\")\n            .setHandleInvalid(\"skip\")\n            .setStringOrderType(\"frequency_desc\");\n\n        data = stringIndexer.fit(data).transform(data);\n        Assert.assertEquals(data.getColNames().length, 4);\n        List<Row> result = data.collect();\n        Assert.assertEquals(result.size(), 4);\n\n        result.forEach(row -> {\n            String token1 = (String) row.getField(0);\n            Long token2 = (Long) row.getField(1);\n            Assert.assertEquals(map1.get(token1), row.getField(2));\n            Assert.assertEquals(map2.get(token2), row.getField(3));\n        });\n    }", "signature": "void testMultiStringIndexer()", "full_signature": "@Test public void testMultiStringIndexer()", "class_method_signature": "MultiStringIndexerTest.testMultiStringIndexer()", "testcase": true, "constructor": false, "invocations": ["asList", "setStringOrderType", "setHandleInvalid", "setOutputCols", "setSelectedCols", "transform", "fit", "assertEquals", "getColNames", "collect", "assertEquals", "size", "forEach", "getField", "getField", "assertEquals", "get", "getField", "assertEquals", "get", "getField"]}, "focal_class": {"identifier": "MultiStringIndexer", "superclass": "extends Trainer<MultiStringIndexer, MultiStringIndexerModel>", "interfaces": "implements\n    MultiStringIndexerTrainParams<MultiStringIndexer>,\n    MultiStringIndexerPredictParams<MultiStringIndexer>", "fields": [], "methods": [{"identifier": "MultiStringIndexer", "parameters": "()", "modifiers": "public", "return": "", "signature": " MultiStringIndexer()", "full_signature": "public  MultiStringIndexer()", "class_method_signature": "MultiStringIndexer.MultiStringIndexer()", "testcase": false, "constructor": true}, {"identifier": "MultiStringIndexer", "parameters": "(Params params)", "modifiers": "public", "return": "", "signature": " MultiStringIndexer(Params params)", "full_signature": "public  MultiStringIndexer(Params params)", "class_method_signature": "MultiStringIndexer.MultiStringIndexer(Params params)", "testcase": false, "constructor": true}, {"identifier": "train", "parameters": "(BatchOperator in)", "modifiers": "@Override protected", "return": "BatchOperator", "signature": "BatchOperator train(BatchOperator in)", "full_signature": "@Override protected BatchOperator train(BatchOperator in)", "class_method_signature": "MultiStringIndexer.train(BatchOperator in)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/alibaba/alink/pipeline/dataproc/MultiStringIndexer.java"}, "focal_method": {"identifier": "MultiStringIndexer", "parameters": "()", "modifiers": "public", "return": "", "body": "public MultiStringIndexer() {\n        this(new Params());\n    }", "signature": " MultiStringIndexer()", "full_signature": "public  MultiStringIndexer()", "class_method_signature": "MultiStringIndexer.MultiStringIndexer()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 150938406, "url": "https://github.com/alibaba/Alink", "stars": 1923, "created": "9/30/2018 6:36:11 AM +00:00", "updates": "2020-01-27T10:24:34+00:00", "fork": "False", "license": "licensed"}}