{"test_class": {"identifier": "TransportUtilsTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "core/transport/src/test/java/hera/util/TransportUtilsTest.java"}, "test_case": {"identifier": "testParseToBlockHash", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testParseToBlockHash() {\n    final BytesValue expected = BytesValue.of(randomUUID().toString().getBytes());\n    final ByteString byteString = copyFrom(expected);\n    assertEquals(expected, parseToBlockHash(byteString).getBytesValue());\n  }", "signature": "void testParseToBlockHash()", "full_signature": "@Test public void testParseToBlockHash()", "class_method_signature": "TransportUtilsTest.testParseToBlockHash()", "testcase": true, "constructor": false, "invocations": ["of", "getBytes", "toString", "randomUUID", "copyFrom", "assertEquals", "getBytesValue", "parseToBlockHash"]}, "focal_class": {"identifier": "TransportUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "copyFrom", "parameters": "(final byte[] rawBytes)", "modifiers": "public static", "return": "ByteString", "signature": "ByteString copyFrom(final byte[] rawBytes)", "full_signature": "public static ByteString copyFrom(final byte[] rawBytes)", "class_method_signature": "TransportUtils.copyFrom(final byte[] rawBytes)", "testcase": false, "constructor": false}, {"identifier": "copyFrom", "parameters": "(final BytesValue bytesValue)", "modifiers": "public static", "return": "ByteString", "signature": "ByteString copyFrom(final BytesValue bytesValue)", "full_signature": "public static ByteString copyFrom(final BytesValue bytesValue)", "class_method_signature": "TransportUtils.copyFrom(final BytesValue bytesValue)", "testcase": false, "constructor": false}, {"identifier": "copyFrom", "parameters": "(final Aer aer)", "modifiers": "public static", "return": "ByteString", "signature": "ByteString copyFrom(final Aer aer)", "full_signature": "public static ByteString copyFrom(final Aer aer)", "class_method_signature": "TransportUtils.copyFrom(final Aer aer)", "testcase": false, "constructor": false}, {"identifier": "copyFrom", "parameters": "(final long longValue)", "modifiers": "public static", "return": "ByteString", "signature": "ByteString copyFrom(final long longValue)", "full_signature": "public static ByteString copyFrom(final long longValue)", "class_method_signature": "TransportUtils.copyFrom(final long longValue)", "testcase": false, "constructor": false}, {"identifier": "parseToBytesValue", "parameters": "(final ByteString bytesString)", "modifiers": "public static", "return": "BytesValue", "signature": "BytesValue parseToBytesValue(final ByteString bytesString)", "full_signature": "public static BytesValue parseToBytesValue(final ByteString bytesString)", "class_method_signature": "TransportUtils.parseToBytesValue(final ByteString bytesString)", "testcase": false, "constructor": false}, {"identifier": "parseToAer", "parameters": "(final byte[] rawAer)", "modifiers": "public static", "return": "Aer", "signature": "Aer parseToAer(final byte[] rawAer)", "full_signature": "public static Aer parseToAer(final byte[] rawAer)", "class_method_signature": "TransportUtils.parseToAer(final byte[] rawAer)", "testcase": false, "constructor": false}, {"identifier": "parseToAer", "parameters": "(final ByteString rawAer)", "modifiers": "public static", "return": "Aer", "signature": "Aer parseToAer(final ByteString rawAer)", "full_signature": "public static Aer parseToAer(final ByteString rawAer)", "class_method_signature": "TransportUtils.parseToAer(final ByteString rawAer)", "testcase": false, "constructor": false}, {"identifier": "parseToTxHash", "parameters": "(final ByteString byteString)", "modifiers": "public static", "return": "TxHash", "signature": "TxHash parseToTxHash(final ByteString byteString)", "full_signature": "public static TxHash parseToTxHash(final ByteString byteString)", "class_method_signature": "TransportUtils.parseToTxHash(final ByteString byteString)", "testcase": false, "constructor": false}, {"identifier": "parseToBlockHash", "parameters": "(final ByteString byteString)", "modifiers": "public static", "return": "BlockHash", "signature": "BlockHash parseToBlockHash(final ByteString byteString)", "full_signature": "public static BlockHash parseToBlockHash(final ByteString byteString)", "class_method_signature": "TransportUtils.parseToBlockHash(final ByteString byteString)", "testcase": false, "constructor": false}, {"identifier": "sha256AndEncodeHexa", "parameters": "(final String string)", "modifiers": "public static", "return": "String", "signature": "String sha256AndEncodeHexa(final String string)", "full_signature": "public static String sha256AndEncodeHexa(final String string)", "class_method_signature": "TransportUtils.sha256AndEncodeHexa(final String string)", "testcase": false, "constructor": false}, {"identifier": "sha256AndEncodeHexa", "parameters": "(final byte[] rawBytes)", "modifiers": "public static", "return": "String", "signature": "String sha256AndEncodeHexa(final byte[] rawBytes)", "full_signature": "public static String sha256AndEncodeHexa(final byte[] rawBytes)", "class_method_signature": "TransportUtils.sha256AndEncodeHexa(final byte[] rawBytes)", "testcase": false, "constructor": false}, {"identifier": "TransportUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " TransportUtils()", "full_signature": "private  TransportUtils()", "class_method_signature": "TransportUtils.TransportUtils()", "testcase": false, "constructor": true}], "file": "core/transport/src/main/java/hera/util/TransportUtils.java"}, "focal_method": {"identifier": "parseToBlockHash", "parameters": "(final ByteString byteString)", "modifiers": "public static", "return": "BlockHash", "body": "public static BlockHash parseToBlockHash(final ByteString byteString) {\n    if (null == byteString || ByteString.EMPTY == byteString) {\n      return BlockHash.of(BytesValue.EMPTY);\n    }\n    return BlockHash.of(BytesValue.of(byteString.toByteArray()));\n  }", "signature": "BlockHash parseToBlockHash(final ByteString byteString)", "full_signature": "public static BlockHash parseToBlockHash(final ByteString byteString)", "class_method_signature": "TransportUtils.parseToBlockHash(final ByteString byteString)", "testcase": false, "constructor": false, "invocations": ["of", "of", "of", "toByteArray"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}