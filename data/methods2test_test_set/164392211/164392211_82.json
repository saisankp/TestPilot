{"test_class": {"identifier": "IndexSorterTest", "superclass": "", "interfaces": "", "fields": [], "file": "dflib/src/test/java/com/nhl/dflib/sort/IndexSorterTest.java"}, "test_case": {"identifier": "testSortIndex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSortIndex() {\n        DataFrame df = DataFrame.newFrame(\"a\", \"b\").foldByRow(\n                1, \"x\",\n                2, \"y\",\n                1, \"z\",\n                0, \"a\",\n                1, \"x\");\n\n        IntSeries sortIndex = new IndexSorter(df).sortIndex(Sorters.sorter(1, true));\n        new IntSeriesAsserts(sortIndex).expectData(3, 0, 4, 1, 2);\n    }", "signature": "void testSortIndex()", "full_signature": "@Test public void testSortIndex()", "class_method_signature": "IndexSorterTest.testSortIndex()", "testcase": true, "constructor": false, "invocations": ["foldByRow", "newFrame", "sortIndex", "sorter", "expectData"]}, "focal_class": {"identifier": "IndexSorter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DataFrame dataFrame;", "modifier": "private", "type": "DataFrame", "declarator": "dataFrame", "var_name": "dataFrame"}, {"original_string": "private Supplier<int[]> indexBuilder;", "modifier": "private", "type": "Supplier<int[]>", "declarator": "indexBuilder", "var_name": "indexBuilder"}], "methods": [{"identifier": "sortIndex", "parameters": "(Series<T> s, Comparator<? super T> comparator)", "modifiers": "public static", "return": "IntSeries", "signature": "IntSeries sortIndex(Series<T> s, Comparator<? super T> comparator)", "full_signature": "public static IntSeries sortIndex(Series<T> s, Comparator<? super T> comparator)", "class_method_signature": "IndexSorter.sortIndex(Series<T> s, Comparator<? super T> comparator)", "testcase": false, "constructor": false}, {"identifier": "IndexSorter", "parameters": "(DataFrame dataFrame)", "modifiers": "public", "return": "", "signature": " IndexSorter(DataFrame dataFrame)", "full_signature": "public  IndexSorter(DataFrame dataFrame)", "class_method_signature": "IndexSorter.IndexSorter(DataFrame dataFrame)", "testcase": false, "constructor": true}, {"identifier": "IndexSorter", "parameters": "(DataFrame dataFrame, IntSeries rangeToSort)", "modifiers": "public", "return": "", "signature": " IndexSorter(DataFrame dataFrame, IntSeries rangeToSort)", "full_signature": "public  IndexSorter(DataFrame dataFrame, IntSeries rangeToSort)", "class_method_signature": "IndexSorter.IndexSorter(DataFrame dataFrame, IntSeries rangeToSort)", "testcase": false, "constructor": true}, {"identifier": "rowNumberSequence", "parameters": "(int h)", "modifiers": "public static", "return": "int[]", "signature": "int[] rowNumberSequence(int h)", "full_signature": "public static int[] rowNumberSequence(int h)", "class_method_signature": "IndexSorter.rowNumberSequence(int h)", "testcase": false, "constructor": false}, {"identifier": "sortIndex", "parameters": "(Comparator<RowProxy> comparator)", "modifiers": "public", "return": "IntSeries", "signature": "IntSeries sortIndex(Comparator<RowProxy> comparator)", "full_signature": "public IntSeries sortIndex(Comparator<RowProxy> comparator)", "class_method_signature": "IndexSorter.sortIndex(Comparator<RowProxy> comparator)", "testcase": false, "constructor": false}, {"identifier": "sort", "parameters": "(Comparator<RowProxy> comparator)", "modifiers": "public", "return": "DataFrame", "signature": "DataFrame sort(Comparator<RowProxy> comparator)", "full_signature": "public DataFrame sort(Comparator<RowProxy> comparator)", "class_method_signature": "IndexSorter.sort(Comparator<RowProxy> comparator)", "testcase": false, "constructor": false}, {"identifier": "rowIndexComparator", "parameters": "(Comparator<RowProxy> rowComparator)", "modifiers": "private", "return": "IntComparator", "signature": "IntComparator rowIndexComparator(Comparator<RowProxy> rowComparator)", "full_signature": "private IntComparator rowIndexComparator(Comparator<RowProxy> rowComparator)", "class_method_signature": "IndexSorter.rowIndexComparator(Comparator<RowProxy> rowComparator)", "testcase": false, "constructor": false}], "file": "dflib/src/main/java/com/nhl/dflib/sort/IndexSorter.java"}, "focal_method": {"identifier": "sortIndex", "parameters": "(Series<T> s, Comparator<? super T> comparator)", "modifiers": "public static", "return": "IntSeries", "body": "public static <T> IntSeries sortIndex(Series<T> s, Comparator<? super T> comparator) {\n        int[] mutableIndex = IndexSorter.rowNumberSequence(s.size());\n        IntComparator intComparator =  (i1, i2) -> comparator.compare(s.get(i1), s.get(i2));\n        IntTimSort.sort(mutableIndex, intComparator);\n        return new IntArraySeries(mutableIndex);\n    }", "signature": "IntSeries sortIndex(Series<T> s, Comparator<? super T> comparator)", "full_signature": "public static IntSeries sortIndex(Series<T> s, Comparator<? super T> comparator)", "class_method_signature": "IndexSorter.sortIndex(Series<T> s, Comparator<? super T> comparator)", "testcase": false, "constructor": false, "invocations": ["rowNumberSequence", "size", "compare", "get", "get", "sort"]}, "repository": {"repo_id": 164392211, "url": "https://github.com/nhl/dflib", "stars": 13, "created": "1/7/2019 7:07:58 AM +00:00", "updates": "2019-12-23T13:26:53+00:00", "fork": "False", "license": "licensed"}}