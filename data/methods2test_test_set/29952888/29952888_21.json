{"test_class": {"identifier": "JsonToCsvConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Inject\n    JsonToCsvConverter jsonToCsvConverter;", "modifier": "@Inject", "type": "JsonToCsvConverter", "declarator": "jsonToCsvConverter", "var_name": "jsonToCsvConverter"}], "file": "gae-studio/gae-studio-server/src/test/java/com/arcbees/gaestudio/server/util/JsonToCsvConverterTest.java"}, "test_case": {"identifier": "convertEasyJsonToCsv", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void convertEasyJsonToCsv() throws JSONException, IOException {\n        String jsonData = getJsonData();\n\n        String result = jsonToCsvConverter.convert(jsonData);\n\n        assertEquals(getCsvData(), result);\n    }", "signature": "void convertEasyJsonToCsv()", "full_signature": "@Test public void convertEasyJsonToCsv()", "class_method_signature": "JsonToCsvConverterTest.convertEasyJsonToCsv()", "testcase": true, "constructor": false, "invocations": ["getJsonData", "convert", "assertEquals", "getCsvData"]}, "focal_class": {"identifier": "JsonToCsvConverter", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "convert", "parameters": "(String jsonData)", "modifiers": "public", "return": "String", "signature": "String convert(String jsonData)", "full_signature": "public String convert(String jsonData)", "class_method_signature": "JsonToCsvConverter.convert(String jsonData)", "testcase": false, "constructor": false}, {"identifier": "extractFullPropertyMap", "parameters": "(JSONArray array)", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject extractFullPropertyMap(JSONArray array)", "full_signature": "private JSONObject extractFullPropertyMap(JSONArray array)", "class_method_signature": "JsonToCsvConverter.extractFullPropertyMap(JSONArray array)", "testcase": false, "constructor": false}, {"identifier": "updateFullPropertyMap", "parameters": "(JSONObject currentObjectPropertyMap, JSONObject fullPropertyMap)", "modifiers": "private", "return": "void", "signature": "void updateFullPropertyMap(JSONObject currentObjectPropertyMap, JSONObject fullPropertyMap)", "full_signature": "private void updateFullPropertyMap(JSONObject currentObjectPropertyMap, JSONObject fullPropertyMap)", "class_method_signature": "JsonToCsvConverter.updateFullPropertyMap(JSONObject currentObjectPropertyMap, JSONObject fullPropertyMap)", "testcase": false, "constructor": false}, {"identifier": "extractColumns", "parameters": "(JSONObject fullPropertyMap)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> extractColumns(JSONObject fullPropertyMap)", "full_signature": "private Set<String> extractColumns(JSONObject fullPropertyMap)", "class_method_signature": "JsonToCsvConverter.extractColumns(JSONObject fullPropertyMap)", "testcase": false, "constructor": false}, {"identifier": "buildColumnsLine", "parameters": "(Set<String> columns)", "modifiers": "private", "return": "String", "signature": "String buildColumnsLine(Set<String> columns)", "full_signature": "private String buildColumnsLine(Set<String> columns)", "class_method_signature": "JsonToCsvConverter.buildColumnsLine(Set<String> columns)", "testcase": false, "constructor": false}, {"identifier": "addSeparator", "parameters": "(Set<String> columns, String columnsResult, int counter)", "modifiers": "private", "return": "String", "signature": "String addSeparator(Set<String> columns, String columnsResult, int counter)", "full_signature": "private String addSeparator(Set<String> columns, String columnsResult, int counter)", "class_method_signature": "JsonToCsvConverter.addSeparator(Set<String> columns, String columnsResult, int counter)", "testcase": false, "constructor": false}, {"identifier": "buildDataLines", "parameters": "(JSONArray dataArray, JSONObject fullPropertyMap)", "modifiers": "private", "return": "String", "signature": "String buildDataLines(JSONArray dataArray, JSONObject fullPropertyMap)", "full_signature": "private String buildDataLines(JSONArray dataArray, JSONObject fullPropertyMap)", "class_method_signature": "JsonToCsvConverter.buildDataLines(JSONArray dataArray, JSONObject fullPropertyMap)", "testcase": false, "constructor": false}, {"identifier": "writeKeyData", "parameters": "(JSONObject currentObjectValue)", "modifiers": "private", "return": "String", "signature": "String writeKeyData(JSONObject currentObjectValue)", "full_signature": "private String writeKeyData(JSONObject currentObjectValue)", "class_method_signature": "JsonToCsvConverter.writeKeyData(JSONObject currentObjectValue)", "testcase": false, "constructor": false}, {"identifier": "generateColumnNamesFromPropertyMap", "parameters": "(String propertyName, JSONObject propertyMap)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> generateColumnNamesFromPropertyMap(String propertyName, JSONObject propertyMap)", "full_signature": "private Set<String> generateColumnNamesFromPropertyMap(String propertyName, JSONObject propertyMap)", "class_method_signature": "JsonToCsvConverter.generateColumnNamesFromPropertyMap(String propertyName, JSONObject propertyMap)", "testcase": false, "constructor": false}, {"identifier": "generateColumnNamesFromPropertyType", "parameters": "(String propertyName, JSONObject currentPropertyObject)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> generateColumnNamesFromPropertyType(String propertyName, JSONObject currentPropertyObject)", "full_signature": "private Set<String> generateColumnNamesFromPropertyType(String propertyName, JSONObject currentPropertyObject)", "class_method_signature": "JsonToCsvConverter.generateColumnNamesFromPropertyType(String propertyName, JSONObject currentPropertyObject)", "testcase": false, "constructor": false}, {"identifier": "generateColumns", "parameters": "(String propertyName, JSONObject currentPropertyObject)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> generateColumns(String propertyName, JSONObject currentPropertyObject)", "full_signature": "private Set<String> generateColumns(String propertyName, JSONObject currentPropertyObject)", "class_method_signature": "JsonToCsvConverter.generateColumns(String propertyName, JSONObject currentPropertyObject)", "testcase": false, "constructor": false}, {"identifier": "generateArrayColumnNames", "parameters": "(String propertyName, JSONArray array)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> generateArrayColumnNames(String propertyName, JSONArray array)", "full_signature": "private Set<String> generateArrayColumnNames(String propertyName, JSONArray array)", "class_method_signature": "JsonToCsvConverter.generateArrayColumnNames(String propertyName, JSONArray array)", "testcase": false, "constructor": false}, {"identifier": "generateGeoPtColumnNames", "parameters": "(String propertyName)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> generateGeoPtColumnNames(String propertyName)", "full_signature": "private Set<String> generateGeoPtColumnNames(String propertyName)", "class_method_signature": "JsonToCsvConverter.generateGeoPtColumnNames(String propertyName)", "testcase": false, "constructor": false}, {"identifier": "generateDataLineFromPropertyMap", "parameters": "(JSONObject propertyMap, JSONObject fullPropertyMap)", "modifiers": "private", "return": "String", "signature": "String generateDataLineFromPropertyMap(JSONObject propertyMap, JSONObject fullPropertyMap)", "full_signature": "private String generateDataLineFromPropertyMap(JSONObject propertyMap, JSONObject fullPropertyMap)", "class_method_signature": "JsonToCsvConverter.generateDataLineFromPropertyMap(JSONObject propertyMap, JSONObject fullPropertyMap)", "testcase": false, "constructor": false}, {"identifier": "writePropertyData", "parameters": "(String propertyName, JSONObject propertyMap)", "modifiers": "private", "return": "String", "signature": "String writePropertyData(String propertyName, JSONObject propertyMap)", "full_signature": "private String writePropertyData(String propertyName, JSONObject propertyMap)", "class_method_signature": "JsonToCsvConverter.writePropertyData(String propertyName, JSONObject propertyMap)", "testcase": false, "constructor": false}, {"identifier": "writeGeoData", "parameters": "(JSONObject geoPt)", "modifiers": "private", "return": "String", "signature": "String writeGeoData(JSONObject geoPt)", "full_signature": "private String writeGeoData(JSONObject geoPt)", "class_method_signature": "JsonToCsvConverter.writeGeoData(JSONObject geoPt)", "testcase": false, "constructor": false}, {"identifier": "writeArrayData", "parameters": "(JSONArray array)", "modifiers": "private", "return": "String", "signature": "String writeArrayData(JSONArray array)", "full_signature": "private String writeArrayData(JSONArray array)", "class_method_signature": "JsonToCsvConverter.writeArrayData(JSONArray array)", "testcase": false, "constructor": false}, {"identifier": "removeLastComma", "parameters": "(String arrayData)", "modifiers": "private", "return": "String", "signature": "String removeLastComma(String arrayData)", "full_signature": "private String removeLastComma(String arrayData)", "class_method_signature": "JsonToCsvConverter.removeLastComma(String arrayData)", "testcase": false, "constructor": false}, {"identifier": "writePropertyData", "parameters": "(JSONObject jsonObject)", "modifiers": "private", "return": "String", "signature": "String writePropertyData(JSONObject jsonObject)", "full_signature": "private String writePropertyData(JSONObject jsonObject)", "class_method_signature": "JsonToCsvConverter.writePropertyData(JSONObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "writeData", "parameters": "(JSONObject jsonObject)", "modifiers": "private", "return": "String", "signature": "String writeData(JSONObject jsonObject)", "full_signature": "private String writeData(JSONObject jsonObject)", "class_method_signature": "JsonToCsvConverter.writeData(JSONObject jsonObject)", "testcase": false, "constructor": false}], "file": "gae-studio/gae-studio-server/src/main/java/com/arcbees/gaestudio/server/util/JsonToCsvConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(String jsonData)", "modifiers": "public", "return": "String", "body": "public String convert(String jsonData) throws JSONException {\n        Set<String> columns;\n        JSONArray array = new JSONArray(jsonData);\n\n        JSONObject fullPropertyMap = extractFullPropertyMap(array);\n\n        columns = extractColumns(fullPropertyMap);\n\n        String csvResult = buildColumnsLine(columns);\n\n        csvResult += buildDataLines(array, fullPropertyMap);\n\n        return csvResult;\n    }", "signature": "String convert(String jsonData)", "full_signature": "public String convert(String jsonData)", "class_method_signature": "JsonToCsvConverter.convert(String jsonData)", "testcase": false, "constructor": false, "invocations": ["extractFullPropertyMap", "extractColumns", "buildColumnsLine", "buildDataLines"]}, "repository": {"repo_id": 29952888, "url": "https://github.com/ArcBees/gae-studio", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 21, "size": 11408, "license": "licensed"}}