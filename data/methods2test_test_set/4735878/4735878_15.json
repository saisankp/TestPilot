{"test_class": {"identifier": "CategorizedRealTest", "superclass": "", "interfaces": "", "fields": [], "file": "legend/src/test/java/org/orbisgis/legend/structure/categorize/CategorizedRealTest.java"}, "test_case": {"identifier": "testFiredTypeEvent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFiredTypeEvent() throws Exception{\n        RealAttribute vf = new RealAttribute(\"height\");\n        Categorize2Real c2s = new Categorize2Real(new RealLiteral(100.0),new RealLiteral(-15.0), vf);\n        CategorizedReal cs = new CategorizedReal(c2s);\n        DummyTypeListener tl = new DummyTypeListener();\n        cs.addListener(tl);\n        cs.setParameter(new RealLiteral(252.252));\n        assertTrue(tl.count == 1);\n        cs.setParameter(c2s);\n        assertTrue(tl.count == 2);\n    }", "signature": "void testFiredTypeEvent()", "full_signature": "@Test public void testFiredTypeEvent()", "class_method_signature": "CategorizedRealTest.testFiredTypeEvent()", "testcase": true, "constructor": false, "invocations": ["addListener", "setParameter", "assertTrue", "setParameter", "assertTrue"]}, "focal_class": {"identifier": "CategorizedReal", "superclass": "extends CategorizedLegend<Double>", "interfaces": "", "fields": [{"original_string": "private RealParameter parameter = new RealLiteral();", "modifier": "private", "type": "RealParameter", "declarator": "parameter = new RealLiteral()", "var_name": "parameter"}], "methods": [{"identifier": "CategorizedReal", "parameters": "(RealParameter sp)", "modifiers": "public", "return": "", "signature": " CategorizedReal(RealParameter sp)", "full_signature": "public  CategorizedReal(RealParameter sp)", "class_method_signature": "CategorizedReal.CategorizedReal(RealParameter sp)", "testcase": false, "constructor": true}, {"identifier": "getParameter", "parameters": "()", "modifiers": "@Override public", "return": "SeParameter", "signature": "SeParameter getParameter()", "full_signature": "@Override public SeParameter getParameter()", "class_method_signature": "CategorizedReal.getParameter()", "testcase": false, "constructor": false}, {"identifier": "setParameter", "parameters": "(RealParameter param)", "modifiers": "public", "return": "void", "signature": "void setParameter(RealParameter param)", "full_signature": "public void setParameter(RealParameter param)", "class_method_signature": "CategorizedReal.setParameter(RealParameter param)", "testcase": false, "constructor": false}, {"identifier": "getFallbackValue", "parameters": "()", "modifiers": "public", "return": "Double", "signature": "Double getFallbackValue()", "full_signature": "public Double getFallbackValue()", "class_method_signature": "CategorizedReal.getFallbackValue()", "testcase": false, "constructor": false}, {"identifier": "setFallbackValue", "parameters": "(Double value)", "modifiers": "public", "return": "void", "signature": "void setFallbackValue(Double value)", "full_signature": "public void setFallbackValue(Double value)", "class_method_signature": "CategorizedReal.setFallbackValue(Double value)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Double d)", "modifiers": "@Override public", "return": "Double", "signature": "Double get(Double d)", "full_signature": "@Override public Double get(Double d)", "class_method_signature": "CategorizedReal.get(Double d)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(Double d, Double v)", "modifiers": "@Override public", "return": "void", "signature": "void put(Double d, Double v)", "full_signature": "@Override public void put(Double d, Double v)", "class_method_signature": "CategorizedReal.put(Double d, Double v)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Double d)", "modifiers": "@Override public", "return": "Double", "signature": "Double remove(Double d)", "full_signature": "@Override public Double remove(Double d)", "class_method_signature": "CategorizedReal.remove(Double d)", "testcase": false, "constructor": false}, {"identifier": "getFromLower", "parameters": "(Double d)", "modifiers": "@Override public", "return": "Double", "signature": "Double getFromLower(Double d)", "full_signature": "@Override public Double getFromLower(Double d)", "class_method_signature": "CategorizedReal.getFromLower(Double d)", "testcase": false, "constructor": false}], "file": "legend/src/main/java/org/orbisgis/legend/structure/categorize/CategorizedReal.java"}, "focal_method": {"identifier": "setParameter", "parameters": "(RealParameter param)", "modifiers": "public", "return": "void", "body": "public void setParameter(RealParameter param) {\n        if(param instanceof RealLiteral){\n            parameter = param;\n            fireTypeChanged();\n        } else if(param instanceof Categorize2Real){\n            RealParameter rp = ((Categorize2Real) param).getLookupValue();\n            if(rp instanceof RealAttribute){\n                parameter = param;\n                field = ((RealAttribute) rp).getColumnName();\n                fireTypeChanged();\n            } else {\n                throw new IllegalArgumentException(\"The given RealParameter instance can't be recognized as a \" +\n                        \"valid CategorizedReal.\");\n            }\n        } else {\n            throw new IllegalArgumentException(\"The given RealParameter instance can't be recognized as a \" +\n                    \"valid CategorizedReal.\");\n        }\n    }", "signature": "void setParameter(RealParameter param)", "full_signature": "public void setParameter(RealParameter param)", "class_method_signature": "CategorizedReal.setParameter(RealParameter param)", "testcase": false, "constructor": false, "invocations": ["fireTypeChanged", "getLookupValue", "getColumnName", "fireTypeChanged"]}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}