{"test_class": {"identifier": "GroupedInfluxDbHttpSenderTest", "superclass": "", "interfaces": "", "fields": [], "file": "metrics-influxdb/src/test/java/com/izettle/metrics/influxdb/GroupedInfluxDbHttpSenderTest.java"}, "test_case": {"identifier": "shouldNotThrowException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldNotThrowException() throws Exception {\n        HttpServer server = HttpServer.create(new InetSocketAddress(10085), 0);\n        try {\n            server.createContext(\"/write\", new MyHandler());\n            server.setExecutor(null); // creates a default executor\n            server.start();\n            InfluxDbHttpSender influxDbHttpSender = new GroupedInfluxDbHttpSender(\n                \"http\",\n                \"localhost\",\n                10085,\n                \"testdb\",\n                \"asdf\",\n                TimeUnit.MINUTES,\n                1000,\n                1000,\n                \"\",\n                \"MyGroup\"\n            );\n            assertThat(influxDbHttpSender.getSerializer() != null);\n            assertThat(influxDbHttpSender.getWriteObject() != null);\n            assertThat(influxDbHttpSender.getTags().isEmpty());\n            assertThat(influxDbHttpSender.getWriteObject().getDatabase().equals(\"testdb\"));\n            assertThat(influxDbHttpSender.writeData(new byte[0]) == 0);\n            \n            influxDbHttpSender.flush();\n            \n        } catch (IOException e) {\n            throw new IOException(e);\n        } finally {\n            server.stop(0);\n        }\n    }", "signature": "void shouldNotThrowException()", "full_signature": "@Test public void shouldNotThrowException()", "class_method_signature": "GroupedInfluxDbHttpSenderTest.shouldNotThrowException()", "testcase": true, "constructor": false, "invocations": ["create", "createContext", "setExecutor", "start", "assertThat", "getSerializer", "assertThat", "getWriteObject", "assertThat", "isEmpty", "getTags", "assertThat", "equals", "getDatabase", "getWriteObject", "assertThat", "writeData", "flush", "stop"]}, "focal_class": {"identifier": "GroupedInfluxDbHttpSender", "superclass": "extends InfluxDbHttpSender", "interfaces": "", "fields": [{"original_string": "private final String groupMeasurement;", "modifier": "private final", "type": "String", "declarator": "groupMeasurement", "var_name": "groupMeasurement"}], "methods": [{"identifier": "GroupedInfluxDbHttpSender", "parameters": "(String protocol, String hostname, int port, String database, String authString,\n            TimeUnit timePrecision, int connectTimeout, int readTimeout, String measurementPrefix, String groupMeasurement)", "modifiers": "public", "return": "", "signature": " GroupedInfluxDbHttpSender(String protocol, String hostname, int port, String database, String authString,\n            TimeUnit timePrecision, int connectTimeout, int readTimeout, String measurementPrefix, String groupMeasurement)", "full_signature": "public  GroupedInfluxDbHttpSender(String protocol, String hostname, int port, String database, String authString,\n            TimeUnit timePrecision, int connectTimeout, int readTimeout, String measurementPrefix, String groupMeasurement)", "class_method_signature": "GroupedInfluxDbHttpSender.GroupedInfluxDbHttpSender(String protocol, String hostname, int port, String database, String authString,\n            TimeUnit timePrecision, int connectTimeout, int readTimeout, String measurementPrefix, String groupMeasurement)", "testcase": false, "constructor": true}, {"identifier": "writeData", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int writeData()", "full_signature": "@Override public int writeData()", "class_method_signature": "GroupedInfluxDbHttpSender.writeData()", "testcase": false, "constructor": false}], "file": "metrics-influxdb/src/main/java/com/izettle/metrics/influxdb/GroupedInfluxDbHttpSender.java"}, "focal_method": {"identifier": "writeData", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int writeData() throws Exception {\n        InfluxDbWriteObjectSerializer serializer = this.getSerializer();\n        InfluxDbWriteObject writeObject = this.getWriteObject();\n        String linestr = serializer.getGroupedLineProtocolString(writeObject, groupMeasurement);\n        final byte[] line = linestr.getBytes(UTF_8);\n        return super.writeData(line);\n    }", "signature": "int writeData()", "full_signature": "@Override public int writeData()", "class_method_signature": "GroupedInfluxDbHttpSender.writeData()", "testcase": false, "constructor": false, "invocations": ["getSerializer", "getWriteObject", "getGroupedLineProtocolString", "getBytes", "writeData"]}, "repository": {"repo_id": 43748389, "url": "https://github.com/iZettle/dropwizard-metrics-influxdb", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 82, "size": 272, "license": "licensed"}}