{"test_class": {"identifier": "KinClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String APP_ID = \"1a2c\";", "modifier": "private static final", "type": "String", "declarator": "APP_ID = \"1a2c\"", "var_name": "APP_ID"}, {"original_string": "@Rule\n    public ExpectedException expectedEx = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedEx = ExpectedException.none()", "var_name": "expectedEx"}, {"original_string": "@Mock\n    private TransactionSender mockTransactionSender;", "modifier": "@Mock\n    private", "type": "TransactionSender", "declarator": "mockTransactionSender", "var_name": "mockTransactionSender"}, {"original_string": "@Mock\n    private GeneralBlockchainInfoRetrieverImpl mockGeneralBlockchainInfoRetriever;", "modifier": "@Mock\n    private", "type": "GeneralBlockchainInfoRetrieverImpl", "declarator": "mockGeneralBlockchainInfoRetriever", "var_name": "mockGeneralBlockchainInfoRetriever"}, {"original_string": "@Mock\n    private AccountInfoRetriever mockAccountInfoRetriever;", "modifier": "@Mock\n    private", "type": "AccountInfoRetriever", "declarator": "mockAccountInfoRetriever", "var_name": "mockAccountInfoRetriever"}, {"original_string": "@Mock\n    private BlockchainEventsCreator mockBlockchainEventsCreator;", "modifier": "@Mock\n    private", "type": "BlockchainEventsCreator", "declarator": "mockBlockchainEventsCreator", "var_name": "mockBlockchainEventsCreator"}, {"original_string": "private KinClient kinClient;", "modifier": "private", "type": "KinClient", "declarator": "kinClient", "var_name": "kinClient"}, {"original_string": "private KeyStore fakeKeyStore;", "modifier": "private", "type": "KeyStore", "declarator": "fakeKeyStore", "var_name": "fakeKeyStore"}, {"original_string": "private Environment fakeEnvironment;", "modifier": "private", "type": "Environment", "declarator": "fakeEnvironment", "var_name": "fakeEnvironment"}], "file": "kin-sdk/kin-sdk-lib/src/test/java/kin/sdk/KinClientTest.java"}, "test_case": {"identifier": "getAccount_ExistingMultipleAccount", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getAccount_ExistingMultipleAccount() throws Exception {\n        KeyPair account1 = createRandomAccount();\n        KeyPair account2 = createRandomAccount();\n\n        fakeKeyStore = new FakeKeyStore(Arrays.asList(account1, account2));\n        kinClient = createNewKinClient();\n        KinAccount expectedAccount2 = kinClient.getAccount(1);\n        KinAccount expectedAccount1 = kinClient.getAccount(0);\n\n        assertNotNull(expectedAccount1);\n        assertNotNull(expectedAccount2);\n        assertThat(account1.getAccountId(), equalTo(expectedAccount1.getPublicAddress()));\n        assertThat(account2.getAccountId(), equalTo(expectedAccount2.getPublicAddress()));\n    }", "signature": "void getAccount_ExistingMultipleAccount()", "full_signature": "@Test public void getAccount_ExistingMultipleAccount()", "class_method_signature": "KinClientTest.getAccount_ExistingMultipleAccount()", "testcase": true, "constructor": false, "invocations": ["createRandomAccount", "createRandomAccount", "asList", "createNewKinClient", "getAccount", "getAccount", "assertNotNull", "assertNotNull", "assertThat", "getAccountId", "equalTo", "getPublicAddress", "assertThat", "getAccountId", "equalTo", "getPublicAddress"]}, "focal_class": {"identifier": "KinClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String STORE_NAME_PREFIX = \"KinKeyStore_\";", "modifier": "private static final", "type": "String", "declarator": "STORE_NAME_PREFIX = \"KinKeyStore_\"", "var_name": "STORE_NAME_PREFIX"}, {"original_string": "private final KinClientInternal kinClientInternal;", "modifier": "private final", "type": "KinClientInternal", "declarator": "kinClientInternal", "var_name": "kinClientInternal"}, {"original_string": "private final String storeKey;", "modifier": "private final", "type": "String", "declarator": "storeKey", "var_name": "storeKey"}, {"original_string": "private final BackupRestore backupRestore;", "modifier": "private final", "type": "BackupRestore", "declarator": "backupRestore", "var_name": "backupRestore"}], "methods": [{"identifier": "KinClient", "parameters": "(@NonNull Context context, @NonNull Environment environment, String appId)", "modifiers": "public", "return": "", "signature": " KinClient(@NonNull Context context, @NonNull Environment environment, String appId)", "full_signature": "public  KinClient(@NonNull Context context, @NonNull Environment environment, String appId)", "class_method_signature": "KinClient.KinClient(@NonNull Context context, @NonNull Environment environment, String appId)", "testcase": false, "constructor": true}, {"identifier": "KinClient", "parameters": "(@NonNull Context context, @NonNull Environment environment, @NonNull String appId, @NonNull String storeKey)", "modifiers": "public", "return": "", "signature": " KinClient(@NonNull Context context, @NonNull Environment environment, @NonNull String appId, @NonNull String storeKey)", "full_signature": "public  KinClient(@NonNull Context context, @NonNull Environment environment, @NonNull String appId, @NonNull String storeKey)", "class_method_signature": "KinClient.KinClient(@NonNull Context context, @NonNull Environment environment, @NonNull String appId, @NonNull String storeKey)", "testcase": false, "constructor": true}, {"identifier": "KinClient", "parameters": "(Environment environment, KeyStore keyStore, TransactionSender transactionSender,\n              AccountInfoRetriever accountInfoRetriever, GeneralBlockchainInfoRetrieverImpl generalBlockchainInfoRetriever,\n              BlockchainEventsCreator blockchainEventsCreator, BackupRestore backupRestore, String appId, String storeKey)", "modifiers": "@VisibleForTesting", "return": "", "signature": " KinClient(Environment environment, KeyStore keyStore, TransactionSender transactionSender,\n              AccountInfoRetriever accountInfoRetriever, GeneralBlockchainInfoRetrieverImpl generalBlockchainInfoRetriever,\n              BlockchainEventsCreator blockchainEventsCreator, BackupRestore backupRestore, String appId, String storeKey)", "full_signature": "@VisibleForTesting  KinClient(Environment environment, KeyStore keyStore, TransactionSender transactionSender,\n              AccountInfoRetriever accountInfoRetriever, GeneralBlockchainInfoRetrieverImpl generalBlockchainInfoRetriever,\n              BlockchainEventsCreator blockchainEventsCreator, BackupRestore backupRestore, String appId, String storeKey)", "class_method_signature": "KinClient.KinClient(Environment environment, KeyStore keyStore, TransactionSender transactionSender,\n              AccountInfoRetriever accountInfoRetriever, GeneralBlockchainInfoRetrieverImpl generalBlockchainInfoRetriever,\n              BlockchainEventsCreator blockchainEventsCreator, BackupRestore backupRestore, String appId, String storeKey)", "testcase": false, "constructor": true}, {"identifier": "createKeyStore", "parameters": "(Context context, String id)", "modifiers": "private", "return": "KeyStore", "signature": "KeyStore createKeyStore(Context context, String id)", "full_signature": "private KeyStore createKeyStore(Context context, String id)", "class_method_signature": "KinClient.createKeyStore(Context context, String id)", "testcase": false, "constructor": false}, {"identifier": "addAccount", "parameters": "()", "modifiers": "public @NonNull", "return": "KinAccount", "signature": "KinAccount addAccount()", "full_signature": "public @NonNull KinAccount addAccount()", "class_method_signature": "KinClient.addAccount()", "testcase": false, "constructor": false}, {"identifier": "importAccount", "parameters": "(@NonNull String exportedJson, @NonNull String passphrase)", "modifiers": "@NonNull public", "return": "KinAccount", "signature": "KinAccount importAccount(@NonNull String exportedJson, @NonNull String passphrase)", "full_signature": "@NonNull public KinAccount importAccount(@NonNull String exportedJson, @NonNull String passphrase)", "class_method_signature": "KinClient.importAccount(@NonNull String exportedJson, @NonNull String passphrase)", "testcase": false, "constructor": false}, {"identifier": "getAccount", "parameters": "(int index)", "modifiers": "public", "return": "KinAccount", "signature": "KinAccount getAccount(int index)", "full_signature": "public KinAccount getAccount(int index)", "class_method_signature": "KinClient.getAccount(int index)", "testcase": false, "constructor": false}, {"identifier": "hasAccount", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasAccount()", "full_signature": "public boolean hasAccount()", "class_method_signature": "KinClient.hasAccount()", "testcase": false, "constructor": false}, {"identifier": "getAccountCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getAccountCount()", "full_signature": "public int getAccountCount()", "class_method_signature": "KinClient.getAccountCount()", "testcase": false, "constructor": false}, {"identifier": "deleteAccount", "parameters": "(int index)", "modifiers": "public", "return": "boolean", "signature": "boolean deleteAccount(int index)", "full_signature": "public boolean deleteAccount(int index)", "class_method_signature": "KinClient.deleteAccount(int index)", "testcase": false, "constructor": false}, {"identifier": "clearAllAccounts", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearAllAccounts()", "full_signature": "public void clearAllAccounts()", "class_method_signature": "KinClient.clearAllAccounts()", "testcase": false, "constructor": false}, {"identifier": "getEnvironment", "parameters": "()", "modifiers": "public", "return": "Environment", "signature": "Environment getEnvironment()", "full_signature": "public Environment getEnvironment()", "class_method_signature": "KinClient.getEnvironment()", "testcase": false, "constructor": false}, {"identifier": "getMinimumFee", "parameters": "()", "modifiers": "public", "return": "Request<Long>", "signature": "Request<Long> getMinimumFee()", "full_signature": "public Request<Long> getMinimumFee()", "class_method_signature": "KinClient.getMinimumFee()", "testcase": false, "constructor": false}, {"identifier": "getMinimumFeeSync", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMinimumFeeSync()", "full_signature": "public long getMinimumFeeSync()", "class_method_signature": "KinClient.getMinimumFeeSync()", "testcase": false, "constructor": false}, {"identifier": "getAppId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAppId()", "full_signature": "public String getAppId()", "class_method_signature": "KinClient.getAppId()", "testcase": false, "constructor": false}, {"identifier": "getStoreKey", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStoreKey()", "full_signature": "public String getStoreKey()", "class_method_signature": "KinClient.getStoreKey()", "testcase": false, "constructor": false}], "file": "kin-sdk/kin-sdk-lib/src/main/java/kin/sdk/KinClient.java"}, "focal_method": {"identifier": "getAccount", "parameters": "(int index)", "modifiers": "public", "return": "KinAccount", "body": "public KinAccount getAccount(int index) {\n        return kinClientInternal.getAccount(index);\n    }", "signature": "KinAccount getAccount(int index)", "full_signature": "public KinAccount getAccount(int index)", "class_method_signature": "KinClient.getAccount(int index)", "testcase": false, "constructor": false, "invocations": ["getAccount"]}, "repository": {"repo_id": 156408389, "url": "https://github.com/kinecosystem/kin-sdk-android", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 9, "size": 3232, "license": "licensed"}}