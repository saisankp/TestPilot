{"test_class": {"identifier": "TestPrefixMatcher", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static ClassPool pool = ClassPool.getDefault();", "modifier": "private final static", "type": "ClassPool", "declarator": "pool = ClassPool.getDefault()", "var_name": "pool"}], "file": "com.gzoltar.core/src/test/java/com/gzoltar/core/instr/matchers/TestPrefixMatcher.java"}, "test_case": {"identifier": "testClassPrefixMatcher", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testClassPrefixMatcher() throws Exception {\n    PrefixMatcher prefixMatcher = new PrefixMatcher(\"org.gzoltar.examples.Abstract\");\n    CtClass ctClass = pool.get(AbstractClass.class.getCanonicalName());\n    assertTrue(prefixMatcher.matches(ctClass));\n  }", "signature": "void testClassPrefixMatcher()", "full_signature": "@Test public void testClassPrefixMatcher()", "class_method_signature": "TestPrefixMatcher.testClassPrefixMatcher()", "testcase": true, "constructor": false, "invocations": ["get", "getCanonicalName", "assertTrue", "matches"]}, "focal_class": {"identifier": "PrefixMatcher", "superclass": "", "interfaces": "implements IMatcher", "fields": [{"original_string": "private List<String> prefix = new LinkedList<String>();", "modifier": "private", "type": "List<String>", "declarator": "prefix = new LinkedList<String>()", "var_name": "prefix"}], "methods": [{"identifier": "PrefixMatcher", "parameters": "(final String... strings)", "modifiers": "public", "return": "", "signature": " PrefixMatcher(final String... strings)", "full_signature": "public  PrefixMatcher(final String... strings)", "class_method_signature": "PrefixMatcher.PrefixMatcher(final String... strings)", "testcase": false, "constructor": true}, {"identifier": "PrefixMatcher", "parameters": "(final List<String> strings)", "modifiers": "public", "return": "", "signature": " PrefixMatcher(final List<String> strings)", "full_signature": "public  PrefixMatcher(final List<String> strings)", "class_method_signature": "PrefixMatcher.PrefixMatcher(final List<String> strings)", "testcase": false, "constructor": true}, {"identifier": "matches", "parameters": "(final CtClass ctClass)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean matches(final CtClass ctClass)", "full_signature": "@Override public boolean matches(final CtClass ctClass)", "class_method_signature": "PrefixMatcher.matches(final CtClass ctClass)", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(final CtBehavior ctBehavior)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean matches(final CtBehavior ctBehavior)", "full_signature": "@Override public boolean matches(final CtBehavior ctBehavior)", "class_method_signature": "PrefixMatcher.matches(final CtBehavior ctBehavior)", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(final CtField ctField)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean matches(final CtField ctField)", "full_signature": "@Override public boolean matches(final CtField ctField)", "class_method_signature": "PrefixMatcher.matches(final CtField ctField)", "testcase": false, "constructor": false}, {"identifier": "matchesPrefix", "parameters": "(String name)", "modifiers": "private", "return": "boolean", "signature": "boolean matchesPrefix(String name)", "full_signature": "private boolean matchesPrefix(String name)", "class_method_signature": "PrefixMatcher.matchesPrefix(String name)", "testcase": false, "constructor": false}], "file": "com.gzoltar.core/src/main/java/com/gzoltar/core/instr/matchers/PrefixMatcher.java"}, "focal_method": {"identifier": "matches", "parameters": "(final CtClass ctClass)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean matches(final CtClass ctClass) {\n    return this.matchesPrefix(ctClass.getName());\n  }", "signature": "boolean matches(final CtClass ctClass)", "full_signature": "@Override public boolean matches(final CtClass ctClass)", "class_method_signature": "PrefixMatcher.matches(final CtClass ctClass)", "testcase": false, "constructor": false, "invocations": ["matchesPrefix", "getName"]}, "repository": {"repo_id": 139729058, "url": "https://github.com/GZoltar/gzoltar", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 30, "size": 2454, "license": "licensed"}}