{"test_class": {"identifier": "WorkspaceItemTest", "superclass": "extends AbstractUnitTest", "interfaces": "", "fields": [{"original_string": "private static final Logger log = Logger.getLogger(WorkspaceItemTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.getLogger(WorkspaceItemTest.class)", "var_name": "log"}, {"original_string": "private WorkspaceItem wi;", "modifier": "private", "type": "WorkspaceItem", "declarator": "wi", "var_name": "wi"}, {"original_string": "private Community owningCommunity;", "modifier": "private", "type": "Community", "declarator": "owningCommunity", "var_name": "owningCommunity"}, {"original_string": "private Collection collection;", "modifier": "private", "type": "Collection", "declarator": "collection", "var_name": "collection"}, {"original_string": "protected CommunityService communityService = ContentServiceFactory.getInstance().getCommunityService();", "modifier": "protected", "type": "CommunityService", "declarator": "communityService = ContentServiceFactory.getInstance().getCommunityService()", "var_name": "communityService"}, {"original_string": "protected CollectionService collectionService = ContentServiceFactory.getInstance().getCollectionService();", "modifier": "protected", "type": "CollectionService", "declarator": "collectionService = ContentServiceFactory.getInstance().getCollectionService()", "var_name": "collectionService"}, {"original_string": "protected EPersonService ePersonService = EPersonServiceFactory.getInstance().getEPersonService();", "modifier": "protected", "type": "EPersonService", "declarator": "ePersonService = EPersonServiceFactory.getInstance().getEPersonService()", "var_name": "ePersonService"}, {"original_string": "protected ItemService itemService = ContentServiceFactory.getInstance().getItemService();", "modifier": "protected", "type": "ItemService", "declarator": "itemService = ContentServiceFactory.getInstance().getItemService()", "var_name": "itemService"}, {"original_string": "protected WorkspaceItemService workspaceItemService = ContentServiceFactory.getInstance().getWorkspaceItemService();", "modifier": "protected", "type": "WorkspaceItemService", "declarator": "workspaceItemService = ContentServiceFactory.getInstance().getWorkspaceItemService()", "var_name": "workspaceItemService"}], "file": "dspace-api/src/test/java/org/dspace/content/WorkspaceItemTest.java"}, "test_case": {"identifier": "testSetMultipleTitles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetMultipleTitles() \n    {\n        wi.setMultipleTitles(true);\n        assertTrue(\"testSetMultipleTitles 0\", wi.hasMultipleTitles());\n    }", "signature": "void testSetMultipleTitles()", "full_signature": "@Test public void testSetMultipleTitles()", "class_method_signature": "WorkspaceItemTest.testSetMultipleTitles()", "testcase": true, "constructor": false, "invocations": ["setMultipleTitles", "assertTrue", "hasMultipleTitles"]}, "focal_class": {"identifier": "WorkspaceItem", "superclass": "", "interfaces": "implements InProgressSubmission, Serializable, ReloadableEntity<Integer>", "fields": [{"original_string": "@Id\n    @Column(name = \"workspace_item_id\", unique = true, nullable = false)\n    @GeneratedValue(strategy = GenerationType.SEQUENCE ,generator=\"workspaceitem_seq\")\n    @SequenceGenerator(name=\"workspaceitem_seq\", sequenceName=\"workspaceitem_seq\", allocationSize = 1)\n    private Integer workspaceItemId;", "modifier": "@Id\n    @Column(name = \"workspace_item_id\", unique = true, nullable = false)\n    @GeneratedValue(strategy = GenerationType.SEQUENCE ,generator=\"workspaceitem_seq\")\n    @SequenceGenerator(name=\"workspaceitem_seq\", sequenceName=\"workspaceitem_seq\", allocationSize = 1)\n    private", "type": "Integer", "declarator": "workspaceItemId", "var_name": "workspaceItemId"}, {"original_string": "@OneToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"item_id\")\n    private Item item;", "modifier": "@OneToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"item_id\")\n    private", "type": "Item", "declarator": "item", "var_name": "item"}, {"original_string": "@ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"collection_id\")\n    private Collection collection;", "modifier": "@ManyToOne(fetch = FetchType.LAZY)\n    @JoinColumn(name = \"collection_id\")\n    private", "type": "Collection", "declarator": "collection", "var_name": "collection"}, {"original_string": "@Column(name = \"multiple_titles\")\n    private boolean multipleTitles = false;", "modifier": "@Column(name = \"multiple_titles\")\n    private", "type": "boolean", "declarator": "multipleTitles = false", "var_name": "multipleTitles"}, {"original_string": "@Column(name = \"published_before\")\n    private boolean publishedBefore = false;", "modifier": "@Column(name = \"published_before\")\n    private", "type": "boolean", "declarator": "publishedBefore = false", "var_name": "publishedBefore"}, {"original_string": "@Column(name = \"multiple_files\")\n    private boolean multipleFiles = false;", "modifier": "@Column(name = \"multiple_files\")\n    private", "type": "boolean", "declarator": "multipleFiles = false", "var_name": "multipleFiles"}, {"original_string": "@Column(name = \"stage_reached\")\n    private Integer stageReached = -1;", "modifier": "@Column(name = \"stage_reached\")\n    private", "type": "Integer", "declarator": "stageReached = -1", "var_name": "stageReached"}, {"original_string": "@Column(name = \"page_reached\")\n    private Integer pageReached = -1;", "modifier": "@Column(name = \"page_reached\")\n    private", "type": "Integer", "declarator": "pageReached = -1", "var_name": "pageReached"}, {"original_string": "@ManyToMany(fetch = FetchType.LAZY)\n    @JoinTable(\n            name = \"epersongroup2workspaceitem\",\n            joinColumns = {@JoinColumn(name = \"workspace_item_id\") },\n            inverseJoinColumns = {@JoinColumn(name = \"eperson_group_id\") }\n    )\n    private final List<Group> supervisorGroups = new ArrayList<>();", "modifier": "@ManyToMany(fetch = FetchType.LAZY)\n    @JoinTable(\n            name = \"epersongroup2workspaceitem\",\n            joinColumns = {@JoinColumn(name = \"workspace_item_id\") },\n            inverseJoinColumns = {@JoinColumn(name = \"eperson_group_id\") }\n    )\n    private final", "type": "List<Group>", "declarator": "supervisorGroups = new ArrayList<>()", "var_name": "supervisorGroups"}], "methods": [{"identifier": "WorkspaceItem", "parameters": "()", "modifiers": "protected", "return": "", "signature": " WorkspaceItem()", "full_signature": "protected  WorkspaceItem()", "class_method_signature": "WorkspaceItem.WorkspaceItem()", "testcase": false, "constructor": true}, {"identifier": "getID", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getID()", "full_signature": "@Override public Integer getID()", "class_method_signature": "WorkspaceItem.getID()", "testcase": false, "constructor": false}, {"identifier": "getStageReached", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getStageReached()", "full_signature": "public int getStageReached()", "class_method_signature": "WorkspaceItem.getStageReached()", "testcase": false, "constructor": false}, {"identifier": "setStageReached", "parameters": "(int v)", "modifiers": "public", "return": "void", "signature": "void setStageReached(int v)", "full_signature": "public void setStageReached(int v)", "class_method_signature": "WorkspaceItem.setStageReached(int v)", "testcase": false, "constructor": false}, {"identifier": "getPageReached", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPageReached()", "full_signature": "public int getPageReached()", "class_method_signature": "WorkspaceItem.getPageReached()", "testcase": false, "constructor": false}, {"identifier": "setPageReached", "parameters": "(int v)", "modifiers": "public", "return": "void", "signature": "void setPageReached(int v)", "full_signature": "public void setPageReached(int v)", "class_method_signature": "WorkspaceItem.setPageReached(int v)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "WorkspaceItem.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "WorkspaceItem.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getItem", "parameters": "()", "modifiers": "@Override public", "return": "Item", "signature": "Item getItem()", "full_signature": "@Override public Item getItem()", "class_method_signature": "WorkspaceItem.getItem()", "testcase": false, "constructor": false}, {"identifier": "setItem", "parameters": "(Item item)", "modifiers": "", "return": "void", "signature": "void setItem(Item item)", "full_signature": " void setItem(Item item)", "class_method_signature": "WorkspaceItem.setItem(Item item)", "testcase": false, "constructor": false}, {"identifier": "getCollection", "parameters": "()", "modifiers": "@Override public", "return": "Collection", "signature": "Collection getCollection()", "full_signature": "@Override public Collection getCollection()", "class_method_signature": "WorkspaceItem.getCollection()", "testcase": false, "constructor": false}, {"identifier": "setCollection", "parameters": "(Collection collection)", "modifiers": "", "return": "void", "signature": "void setCollection(Collection collection)", "full_signature": " void setCollection(Collection collection)", "class_method_signature": "WorkspaceItem.setCollection(Collection collection)", "testcase": false, "constructor": false}, {"identifier": "getSubmitter", "parameters": "()", "modifiers": "@Override public", "return": "EPerson", "signature": "EPerson getSubmitter()", "full_signature": "@Override public EPerson getSubmitter()", "class_method_signature": "WorkspaceItem.getSubmitter()", "testcase": false, "constructor": false}, {"identifier": "hasMultipleFiles", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasMultipleFiles()", "full_signature": "@Override public boolean hasMultipleFiles()", "class_method_signature": "WorkspaceItem.hasMultipleFiles()", "testcase": false, "constructor": false}, {"identifier": "setMultipleFiles", "parameters": "(boolean b)", "modifiers": "@Override public", "return": "void", "signature": "void setMultipleFiles(boolean b)", "full_signature": "@Override public void setMultipleFiles(boolean b)", "class_method_signature": "WorkspaceItem.setMultipleFiles(boolean b)", "testcase": false, "constructor": false}, {"identifier": "hasMultipleTitles", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasMultipleTitles()", "full_signature": "@Override public boolean hasMultipleTitles()", "class_method_signature": "WorkspaceItem.hasMultipleTitles()", "testcase": false, "constructor": false}, {"identifier": "setMultipleTitles", "parameters": "(boolean b)", "modifiers": "@Override public", "return": "void", "signature": "void setMultipleTitles(boolean b)", "full_signature": "@Override public void setMultipleTitles(boolean b)", "class_method_signature": "WorkspaceItem.setMultipleTitles(boolean b)", "testcase": false, "constructor": false}, {"identifier": "isPublishedBefore", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isPublishedBefore()", "full_signature": "@Override public boolean isPublishedBefore()", "class_method_signature": "WorkspaceItem.isPublishedBefore()", "testcase": false, "constructor": false}, {"identifier": "setPublishedBefore", "parameters": "(boolean b)", "modifiers": "@Override public", "return": "void", "signature": "void setPublishedBefore(boolean b)", "full_signature": "@Override public void setPublishedBefore(boolean b)", "class_method_signature": "WorkspaceItem.setPublishedBefore(boolean b)", "testcase": false, "constructor": false}, {"identifier": "getSupervisorGroups", "parameters": "()", "modifiers": "public", "return": "List<Group>", "signature": "List<Group> getSupervisorGroups()", "full_signature": "public List<Group> getSupervisorGroups()", "class_method_signature": "WorkspaceItem.getSupervisorGroups()", "testcase": false, "constructor": false}, {"identifier": "removeSupervisorGroup", "parameters": "(Group group)", "modifiers": "", "return": "void", "signature": "void removeSupervisorGroup(Group group)", "full_signature": " void removeSupervisorGroup(Group group)", "class_method_signature": "WorkspaceItem.removeSupervisorGroup(Group group)", "testcase": false, "constructor": false}, {"identifier": "addSupervisorGroup", "parameters": "(Group group)", "modifiers": "", "return": "void", "signature": "void addSupervisorGroup(Group group)", "full_signature": " void addSupervisorGroup(Group group)", "class_method_signature": "WorkspaceItem.addSupervisorGroup(Group group)", "testcase": false, "constructor": false}], "file": "dspace-api/src/main/java/org/dspace/content/WorkspaceItem.java"}, "focal_method": {"identifier": "setMultipleTitles", "parameters": "(boolean b)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void setMultipleTitles(boolean b)\n    {\n        multipleTitles = b;\n    }", "signature": "void setMultipleTitles(boolean b)", "full_signature": "@Override public void setMultipleTitles(boolean b)", "class_method_signature": "WorkspaceItem.setMultipleTitles(boolean b)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 39038703, "url": "https://github.com/VTUL/vtechworks", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 112021, "license": "licensed"}}