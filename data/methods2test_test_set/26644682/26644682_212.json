{"test_class": {"identifier": "FolderAPITest", "superclass": "extends ApiServiceTestBase", "interfaces": "", "fields": [{"original_string": "private Folder home;", "modifier": "private", "type": "Folder", "declarator": "home", "var_name": "home"}], "file": "dataprep-api/src/test/java/org/talend/dataprep/api/service/FolderAPITest.java"}, "test_case": {"identifier": "should_return_conflict_on_non_empty_folder_remove", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_return_conflict_on_non_empty_folder_remove() throws IOException {\n        //given\n        createFolder(\"beer\", home.getId());\n        final Folder beer = getFolder(home.getId(), \"beer\");\n        final FolderEntry folderEntry = new FolderEntry(DATASET, \"6f8a54051bc454\");\n        createFolderEntry(folderEntry, beer.getId());\n\n        //when\n        final Response response = removeFolder(beer.getId());\n\n        //then\n        assertThat(response.getStatusCode(), is(409));\n        final String content = response.asString();\n        assertTrue(StringUtils.isNoneBlank(content));\n        assertTrue(content.contains(FolderErrorCodes.FOLDER_NOT_EMPTY.name()));\n\n        final List<Folder> folders = getFolderChildren(home.getId());\n        assertThat(folders, hasSize(1));\n    }", "signature": "void should_return_conflict_on_non_empty_folder_remove()", "full_signature": "@Test public void should_return_conflict_on_non_empty_folder_remove()", "class_method_signature": "FolderAPITest.should_return_conflict_on_non_empty_folder_remove()", "testcase": true, "constructor": false, "invocations": ["createFolder", "getId", "getFolder", "getId", "createFolderEntry", "getId", "removeFolder", "getId", "assertThat", "getStatusCode", "is", "asString", "assertTrue", "isNoneBlank", "assertTrue", "contains", "name", "getFolderChildren", "getId", "assertThat", "hasSize"]}, "focal_class": {"identifier": "FolderAPI", "superclass": "extends APIService", "interfaces": "", "fields": [], "methods": [{"identifier": "listFolders", "parameters": "(@RequestParam(required = false) String parentId)", "modifiers": "@RequestMapping(value = \"/api/folders\", method = GET) @ApiOperation(value = \"List folders. Optional filter on parent ID may be supplied.\", produces = APPLICATION_JSON_VALUE) @Timed public", "return": "ResponseEntity<StreamingResponseBody>", "signature": "ResponseEntity<StreamingResponseBody> listFolders(@RequestParam(required = false) String parentId)", "full_signature": "@RequestMapping(value = \"/api/folders\", method = GET) @ApiOperation(value = \"List folders. Optional filter on parent ID may be supplied.\", produces = APPLICATION_JSON_VALUE) @Timed public ResponseEntity<StreamingResponseBody> listFolders(@RequestParam(required = false) String parentId)", "class_method_signature": "FolderAPI.listFolders(@RequestParam(required = false) String parentId)", "testcase": false, "constructor": false}, {"identifier": "getTree", "parameters": "()", "modifiers": "@RequestMapping(value = \"/api/folders/tree\", method = GET) @ApiOperation(value = \"List all folders\", produces = APPLICATION_JSON_VALUE) @Timed public", "return": "StreamingResponseBody", "signature": "StreamingResponseBody getTree()", "full_signature": "@RequestMapping(value = \"/api/folders/tree\", method = GET) @ApiOperation(value = \"List all folders\", produces = APPLICATION_JSON_VALUE) @Timed public StreamingResponseBody getTree()", "class_method_signature": "FolderAPI.getTree()", "testcase": false, "constructor": false}, {"identifier": "getFolderAndHierarchyById", "parameters": "(@PathVariable(value = \"id\") final String id)", "modifiers": "@RequestMapping(value = \"/api/folders/{id}\", method = GET, produces = APPLICATION_JSON_VALUE) @ApiOperation(value = \"Get folder by id\", produces = APPLICATION_JSON_VALUE, notes = \"Get a folder by id\") @Timed public", "return": "ResponseEntity<StreamingResponseBody>", "signature": "ResponseEntity<StreamingResponseBody> getFolderAndHierarchyById(@PathVariable(value = \"id\") final String id)", "full_signature": "@RequestMapping(value = \"/api/folders/{id}\", method = GET, produces = APPLICATION_JSON_VALUE) @ApiOperation(value = \"Get folder by id\", produces = APPLICATION_JSON_VALUE, notes = \"Get a folder by id\") @Timed public ResponseEntity<StreamingResponseBody> getFolderAndHierarchyById(@PathVariable(value = \"id\") final String id)", "class_method_signature": "FolderAPI.getFolderAndHierarchyById(@PathVariable(value = \"id\") final String id)", "testcase": false, "constructor": false}, {"identifier": "addFolder", "parameters": "(@RequestParam(required = false) final String parentId,\n            @RequestParam final String path)", "modifiers": "@RequestMapping(value = \"/api/folders\", method = PUT) @ApiOperation(value = \"Add a folder.\", produces = APPLICATION_JSON_VALUE) @Timed public", "return": "StreamingResponseBody", "signature": "StreamingResponseBody addFolder(@RequestParam(required = false) final String parentId,\n            @RequestParam final String path)", "full_signature": "@RequestMapping(value = \"/api/folders\", method = PUT) @ApiOperation(value = \"Add a folder.\", produces = APPLICATION_JSON_VALUE) @Timed public StreamingResponseBody addFolder(@RequestParam(required = false) final String parentId,\n            @RequestParam final String path)", "class_method_signature": "FolderAPI.addFolder(@RequestParam(required = false) final String parentId,\n            @RequestParam final String path)", "testcase": false, "constructor": false}, {"identifier": "removeFolder", "parameters": "(@PathVariable final String id, final OutputStream output)", "modifiers": "@RequestMapping(value = \"/api/folders/{id}\", method = DELETE) @ApiOperation(value = \"Remove a Folder\") @Timed public", "return": "ResponseEntity<String>", "signature": "ResponseEntity<String> removeFolder(@PathVariable final String id, final OutputStream output)", "full_signature": "@RequestMapping(value = \"/api/folders/{id}\", method = DELETE) @ApiOperation(value = \"Remove a Folder\") @Timed public ResponseEntity<String> removeFolder(@PathVariable final String id, final OutputStream output)", "class_method_signature": "FolderAPI.removeFolder(@PathVariable final String id, final OutputStream output)", "testcase": false, "constructor": false}, {"identifier": "renameFolder", "parameters": "(@PathVariable final String id, @RequestBody final String newName)", "modifiers": "@RequestMapping(value = \"/api/folders/{id}/name\", method = PUT) @ApiOperation(value = \"Rename a Folder\") @Timed public", "return": "void", "signature": "void renameFolder(@PathVariable final String id, @RequestBody final String newName)", "full_signature": "@RequestMapping(value = \"/api/folders/{id}/name\", method = PUT) @ApiOperation(value = \"Rename a Folder\") @Timed public void renameFolder(@PathVariable final String id, @RequestBody final String newName)", "class_method_signature": "FolderAPI.renameFolder(@PathVariable final String id, @RequestBody final String newName)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(@RequestParam(required = false) final String name,\n            @RequestParam(required = false) final Boolean strict, @RequestParam(required = false) final String path)", "modifiers": "@RequestMapping(value = \"/api/folders/search\", method = GET, produces = APPLICATION_JSON_VALUE) @ApiOperation(value = \"Search Folders with parameter as part of the name\", produces = APPLICATION_JSON_VALUE) @Timed public", "return": "ResponseEntity<StreamingResponseBody>", "signature": "ResponseEntity<StreamingResponseBody> search(@RequestParam(required = false) final String name,\n            @RequestParam(required = false) final Boolean strict, @RequestParam(required = false) final String path)", "full_signature": "@RequestMapping(value = \"/api/folders/search\", method = GET, produces = APPLICATION_JSON_VALUE) @ApiOperation(value = \"Search Folders with parameter as part of the name\", produces = APPLICATION_JSON_VALUE) @Timed public ResponseEntity<StreamingResponseBody> search(@RequestParam(required = false) final String name,\n            @RequestParam(required = false) final Boolean strict, @RequestParam(required = false) final String path)", "class_method_signature": "FolderAPI.search(@RequestParam(required = false) final String name,\n            @RequestParam(required = false) final Boolean strict, @RequestParam(required = false) final String path)", "testcase": false, "constructor": false}, {"identifier": "listPreparationsByFolder", "parameters": "(\n            @PathVariable @ApiParam(name = \"id\", value = \"The destination to search preparations from.\") final String id, //\n            @ApiParam(value = \"Sort key (by name or date), defaults to 'date'.\") @RequestParam(defaultValue = \"creationDate\") final Sort sort, //\n            @ApiParam(value = \"Order for sort key (desc or asc), defaults to 'desc'.\") @RequestParam(defaultValue = \"desc\") final Order order)", "modifiers": "@RequestMapping(value = \"/api/folders/{id}/preparations\", method = RequestMethod.GET, produces = APPLICATION_JSON_VALUE) @ApiOperation(value = \"Get all preparations for a given id.\", notes = \"Returns the list of preparations for the given id the current user is allowed to see.\") @Timed public", "return": "PreparationsByFolder", "signature": "PreparationsByFolder listPreparationsByFolder(\n            @PathVariable @ApiParam(name = \"id\", value = \"The destination to search preparations from.\") final String id, //\n            @ApiParam(value = \"Sort key (by name or date), defaults to 'date'.\") @RequestParam(defaultValue = \"creationDate\") final Sort sort, //\n            @ApiParam(value = \"Order for sort key (desc or asc), defaults to 'desc'.\") @RequestParam(defaultValue = \"desc\") final Order order)", "full_signature": "@RequestMapping(value = \"/api/folders/{id}/preparations\", method = RequestMethod.GET, produces = APPLICATION_JSON_VALUE) @ApiOperation(value = \"Get all preparations for a given id.\", notes = \"Returns the list of preparations for the given id the current user is allowed to see.\") @Timed public PreparationsByFolder listPreparationsByFolder(\n            @PathVariable @ApiParam(name = \"id\", value = \"The destination to search preparations from.\") final String id, //\n            @ApiParam(value = \"Sort key (by name or date), defaults to 'date'.\") @RequestParam(defaultValue = \"creationDate\") final Sort sort, //\n            @ApiParam(value = \"Order for sort key (desc or asc), defaults to 'desc'.\") @RequestParam(defaultValue = \"desc\") final Order order)", "class_method_signature": "FolderAPI.listPreparationsByFolder(\n            @PathVariable @ApiParam(name = \"id\", value = \"The destination to search preparations from.\") final String id, //\n            @ApiParam(value = \"Sort key (by name or date), defaults to 'date'.\") @RequestParam(defaultValue = \"creationDate\") final Sort sort, //\n            @ApiParam(value = \"Order for sort key (desc or asc), defaults to 'desc'.\") @RequestParam(defaultValue = \"desc\") final Order order)", "testcase": false, "constructor": false}], "file": "dataprep-api/src/main/java/org/talend/dataprep/api/service/FolderAPI.java"}, "focal_method": {"identifier": "removeFolder", "parameters": "(@PathVariable final String id, final OutputStream output)", "modifiers": "@RequestMapping(value = \"/api/folders/{id}\", method = DELETE) @ApiOperation(value = \"Remove a Folder\") @Timed public", "return": "ResponseEntity<String>", "body": "@RequestMapping(value = \"/api/folders/{id}\", method = DELETE)\n    @ApiOperation(value = \"Remove a Folder\")\n    @Timed\n    public ResponseEntity<String> removeFolder(@PathVariable final String id, final OutputStream output) {\n        try {\n            return getCommand(RemoveFolder.class, id).execute();\n        } catch (Exception e) {\n            throw new TDPException(APIErrorCodes.UNABLE_TO_DELETE_FOLDER, e);\n        }\n    }", "signature": "ResponseEntity<String> removeFolder(@PathVariable final String id, final OutputStream output)", "full_signature": "@RequestMapping(value = \"/api/folders/{id}\", method = DELETE) @ApiOperation(value = \"Remove a Folder\") @Timed public ResponseEntity<String> removeFolder(@PathVariable final String id, final OutputStream output)", "class_method_signature": "FolderAPI.removeFolder(@PathVariable final String id, final OutputStream output)", "testcase": false, "constructor": false, "invocations": ["execute", "getCommand"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}