{"test_class": {"identifier": "DerivedFieldFunctionUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Function<Supplier<Expression>, DerivedField> derivedFieldCreator = supplier -> {\n        Expression expression = supplier.get();\n        DerivedField defineFunction = new DerivedField();\n        defineFunction.setName(FieldName.create(\"DERIVED_FIELD_\" + expression.getClass().getSimpleName()));\n        defineFunction.setExpression(expression);\n        return defineFunction;\n    };", "modifier": "private static final", "type": "Function<Supplier<Expression>, DerivedField>", "declarator": "derivedFieldCreator = supplier -> {\n        Expression expression = supplier.get();\n        DerivedField defineFunction = new DerivedField();\n        defineFunction.setName(FieldName.create(\"DERIVED_FIELD_\" + expression.getClass().getSimpleName()));\n        defineFunction.setExpression(expression);\n        return defineFunction;\n    }", "var_name": "derivedFieldCreator"}], "file": "kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/utils/DerivedFieldFunctionUtilsTest.java"}, "test_case": {"identifier": "getApplyMethodDeclaration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getApplyMethodDeclaration() {\n        MethodDeclaration retrieved = DerivedFieldFunctionUtils.getApplyMethodDeclaration(applySupplier.get(),\n                                                                                          OBJECT_CLASS, 3,\n                                                                                          DEFAULT_PARAMETERTYPE_MAP);\n        String expected = \"java.lang.Object Apply3(java.util.List<org.kie.pmml.commons.model.tuples.KiePMMLNameValue>\" +\n                \" param1) {\\n\" +\n                \"    java.lang.Object variableapplyVariableConstant1 = 34.6;\\n\" +\n                \"    java.util.Optional<org.kie.pmml.commons.model.tuples.KiePMMLNameValue> kiePMMLNameValue = param1\" +\n                \".stream().filter((org.kie.pmml.commons.model.tuples.KiePMMLNameValue lmbdParam) -> java.util.Objects\" +\n                \".equals(\\\"FIELD_REF\\\", lmbdParam.getName())).findFirst();\\n\" +\n                \"    java.lang.Object variableapplyVariableFieldRef2 = (java.lang.Object) kiePMMLNameValue.map(org\" +\n                \".kie.pmml.commons.model.tuples.KiePMMLNameValue::getValue).orElse(null);\\n\" +\n                \"    java.lang.Object applyVariable = this.FUNCTION_NAME(param1, variableapplyVariableConstant1, \" +\n                \"variableapplyVariableFieldRef2);\\n\" +\n                \"    return applyVariable;\\n\" +\n                \"}\";\n        assertEquals(expected, retrieved.toString());\n    }", "signature": "void getApplyMethodDeclaration()", "full_signature": "@Test public void getApplyMethodDeclaration()", "class_method_signature": "DerivedFieldFunctionUtilsTest.getApplyMethodDeclaration()", "testcase": true, "constructor": false, "invocations": ["getApplyMethodDeclaration", "get", "assertEquals", "toString"]}, "focal_class": {"identifier": "DerivedFieldFunctionUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "DerivedFieldFunctionUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " DerivedFieldFunctionUtils()", "full_signature": "private  DerivedFieldFunctionUtils()", "class_method_signature": "DerivedFieldFunctionUtils.DerivedFieldFunctionUtils()", "testcase": false, "constructor": true}, {"identifier": "getDerivedFieldsMethodMap", "parameters": "(final List<DerivedField> derivedFields,\n                                                                    final AtomicInteger arityCounter)", "modifiers": "static", "return": "Map<String, MethodDeclaration>", "signature": "Map<String, MethodDeclaration> getDerivedFieldsMethodMap(final List<DerivedField> derivedFields,\n                                                                    final AtomicInteger arityCounter)", "full_signature": "static Map<String, MethodDeclaration> getDerivedFieldsMethodMap(final List<DerivedField> derivedFields,\n                                                                    final AtomicInteger arityCounter)", "class_method_signature": "DerivedFieldFunctionUtils.getDerivedFieldsMethodMap(final List<DerivedField> derivedFields,\n                                                                    final AtomicInteger arityCounter)", "testcase": false, "constructor": false}, {"identifier": "getDerivedFieldMethodDeclaration", "parameters": "(final DerivedField derivedField,\n                                                              final AtomicInteger arityCounter)", "modifiers": "static", "return": "MethodDeclaration", "signature": "MethodDeclaration getDerivedFieldMethodDeclaration(final DerivedField derivedField,\n                                                              final AtomicInteger arityCounter)", "full_signature": "static MethodDeclaration getDerivedFieldMethodDeclaration(final DerivedField derivedField,\n                                                              final AtomicInteger arityCounter)", "class_method_signature": "DerivedFieldFunctionUtils.getDerivedFieldMethodDeclaration(final DerivedField derivedField,\n                                                              final AtomicInteger arityCounter)", "testcase": false, "constructor": false}, {"identifier": "getExpressionMethodDeclaration", "parameters": "(final Expression expression, final DataType dataType,\n                                                            final AtomicInteger arityCounter)", "modifiers": "static", "return": "MethodDeclaration", "signature": "MethodDeclaration getExpressionMethodDeclaration(final Expression expression, final DataType dataType,\n                                                            final AtomicInteger arityCounter)", "full_signature": "static MethodDeclaration getExpressionMethodDeclaration(final Expression expression, final DataType dataType,\n                                                            final AtomicInteger arityCounter)", "class_method_signature": "DerivedFieldFunctionUtils.getExpressionMethodDeclaration(final Expression expression, final DataType dataType,\n                                                            final AtomicInteger arityCounter)", "testcase": false, "constructor": false}, {"identifier": "getAggregatedMethodDeclaration", "parameters": "(final Aggregate aggregate,\n                                                            final ClassOrInterfaceType returnedType,\n                                                            final int methodArity,\n                                                            final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "modifiers": "static", "return": "MethodDeclaration", "signature": "MethodDeclaration getAggregatedMethodDeclaration(final Aggregate aggregate,\n                                                            final ClassOrInterfaceType returnedType,\n                                                            final int methodArity,\n                                                            final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "full_signature": "static MethodDeclaration getAggregatedMethodDeclaration(final Aggregate aggregate,\n                                                            final ClassOrInterfaceType returnedType,\n                                                            final int methodArity,\n                                                            final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "class_method_signature": "DerivedFieldFunctionUtils.getAggregatedMethodDeclaration(final Aggregate aggregate,\n                                                            final ClassOrInterfaceType returnedType,\n                                                            final int methodArity,\n                                                            final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "testcase": false, "constructor": false}, {"identifier": "getApplyMethodDeclaration", "parameters": "(final Apply apply,\n                                                       final ClassOrInterfaceType returnedType,\n                                                       final int methodArity,\n                                                       final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "modifiers": "static", "return": "MethodDeclaration", "signature": "MethodDeclaration getApplyMethodDeclaration(final Apply apply,\n                                                       final ClassOrInterfaceType returnedType,\n                                                       final int methodArity,\n                                                       final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "full_signature": "static MethodDeclaration getApplyMethodDeclaration(final Apply apply,\n                                                       final ClassOrInterfaceType returnedType,\n                                                       final int methodArity,\n                                                       final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "class_method_signature": "DerivedFieldFunctionUtils.getApplyMethodDeclaration(final Apply apply,\n                                                       final ClassOrInterfaceType returnedType,\n                                                       final int methodArity,\n                                                       final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "testcase": false, "constructor": false}, {"identifier": "getConstantMethodDeclaration", "parameters": "(final Constant constant,\n                                                          final ClassOrInterfaceType returnedType,\n                                                          final int methodArity,\n                                                          final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "modifiers": "static", "return": "MethodDeclaration", "signature": "MethodDeclaration getConstantMethodDeclaration(final Constant constant,\n                                                          final ClassOrInterfaceType returnedType,\n                                                          final int methodArity,\n                                                          final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "full_signature": "static MethodDeclaration getConstantMethodDeclaration(final Constant constant,\n                                                          final ClassOrInterfaceType returnedType,\n                                                          final int methodArity,\n                                                          final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "class_method_signature": "DerivedFieldFunctionUtils.getConstantMethodDeclaration(final Constant constant,\n                                                          final ClassOrInterfaceType returnedType,\n                                                          final int methodArity,\n                                                          final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "testcase": false, "constructor": false}, {"identifier": "getDiscretizeMethodDeclaration", "parameters": "(final Discretize discretize,\n                                                            final ClassOrInterfaceType returnedType,\n                                                            final int methodArity,\n                                                            final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "modifiers": "static", "return": "MethodDeclaration", "signature": "MethodDeclaration getDiscretizeMethodDeclaration(final Discretize discretize,\n                                                            final ClassOrInterfaceType returnedType,\n                                                            final int methodArity,\n                                                            final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "full_signature": "static MethodDeclaration getDiscretizeMethodDeclaration(final Discretize discretize,\n                                                            final ClassOrInterfaceType returnedType,\n                                                            final int methodArity,\n                                                            final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "class_method_signature": "DerivedFieldFunctionUtils.getDiscretizeMethodDeclaration(final Discretize discretize,\n                                                            final ClassOrInterfaceType returnedType,\n                                                            final int methodArity,\n                                                            final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "testcase": false, "constructor": false}, {"identifier": "getFieldRefMethodDeclaration", "parameters": "(final FieldRef fieldRef,\n                                                          final ClassOrInterfaceType returnedType,\n                                                          final int methodArity,\n                                                          final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "modifiers": "static", "return": "MethodDeclaration", "signature": "MethodDeclaration getFieldRefMethodDeclaration(final FieldRef fieldRef,\n                                                          final ClassOrInterfaceType returnedType,\n                                                          final int methodArity,\n                                                          final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "full_signature": "static MethodDeclaration getFieldRefMethodDeclaration(final FieldRef fieldRef,\n                                                          final ClassOrInterfaceType returnedType,\n                                                          final int methodArity,\n                                                          final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "class_method_signature": "DerivedFieldFunctionUtils.getFieldRefMethodDeclaration(final FieldRef fieldRef,\n                                                          final ClassOrInterfaceType returnedType,\n                                                          final int methodArity,\n                                                          final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "testcase": false, "constructor": false}, {"identifier": "getLagMethodDeclaration", "parameters": "(final Lag lag,\n                                                     final ClassOrInterfaceType returnedType,\n                                                     final int methodArity,\n                                                     final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "modifiers": "static", "return": "MethodDeclaration", "signature": "MethodDeclaration getLagMethodDeclaration(final Lag lag,\n                                                     final ClassOrInterfaceType returnedType,\n                                                     final int methodArity,\n                                                     final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "full_signature": "static MethodDeclaration getLagMethodDeclaration(final Lag lag,\n                                                     final ClassOrInterfaceType returnedType,\n                                                     final int methodArity,\n                                                     final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "class_method_signature": "DerivedFieldFunctionUtils.getLagMethodDeclaration(final Lag lag,\n                                                     final ClassOrInterfaceType returnedType,\n                                                     final int methodArity,\n                                                     final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "testcase": false, "constructor": false}, {"identifier": "getMapValuesMethodDeclaration", "parameters": "(final MapValues mapValues,\n                                                           final ClassOrInterfaceType returnedType,\n                                                           final int methodArity,\n                                                           final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "modifiers": "static", "return": "MethodDeclaration", "signature": "MethodDeclaration getMapValuesMethodDeclaration(final MapValues mapValues,\n                                                           final ClassOrInterfaceType returnedType,\n                                                           final int methodArity,\n                                                           final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "full_signature": "static MethodDeclaration getMapValuesMethodDeclaration(final MapValues mapValues,\n                                                           final ClassOrInterfaceType returnedType,\n                                                           final int methodArity,\n                                                           final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "class_method_signature": "DerivedFieldFunctionUtils.getMapValuesMethodDeclaration(final MapValues mapValues,\n                                                           final ClassOrInterfaceType returnedType,\n                                                           final int methodArity,\n                                                           final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "testcase": false, "constructor": false}, {"identifier": "getNormContinuousMethodDeclaration", "parameters": "(final NormContinuous normContinuous,\n                                                                final ClassOrInterfaceType returnedType,\n                                                                final int methodArity, Map<String,\n            ClassOrInterfaceType> parameterNameTypeMap)", "modifiers": "static", "return": "MethodDeclaration", "signature": "MethodDeclaration getNormContinuousMethodDeclaration(final NormContinuous normContinuous,\n                                                                final ClassOrInterfaceType returnedType,\n                                                                final int methodArity, Map<String,\n            ClassOrInterfaceType> parameterNameTypeMap)", "full_signature": "static MethodDeclaration getNormContinuousMethodDeclaration(final NormContinuous normContinuous,\n                                                                final ClassOrInterfaceType returnedType,\n                                                                final int methodArity, Map<String,\n            ClassOrInterfaceType> parameterNameTypeMap)", "class_method_signature": "DerivedFieldFunctionUtils.getNormContinuousMethodDeclaration(final NormContinuous normContinuous,\n                                                                final ClassOrInterfaceType returnedType,\n                                                                final int methodArity, Map<String,\n            ClassOrInterfaceType> parameterNameTypeMap)", "testcase": false, "constructor": false}, {"identifier": "getNormDiscreteMethodDeclaration", "parameters": "(final NormDiscrete normDiscrete,\n                                                              final ClassOrInterfaceType returnedType,\n                                                              final int methodArity,\n                                                              final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "modifiers": "static", "return": "MethodDeclaration", "signature": "MethodDeclaration getNormDiscreteMethodDeclaration(final NormDiscrete normDiscrete,\n                                                              final ClassOrInterfaceType returnedType,\n                                                              final int methodArity,\n                                                              final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "full_signature": "static MethodDeclaration getNormDiscreteMethodDeclaration(final NormDiscrete normDiscrete,\n                                                              final ClassOrInterfaceType returnedType,\n                                                              final int methodArity,\n                                                              final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "class_method_signature": "DerivedFieldFunctionUtils.getNormDiscreteMethodDeclaration(final NormDiscrete normDiscrete,\n                                                              final ClassOrInterfaceType returnedType,\n                                                              final int methodArity,\n                                                              final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "testcase": false, "constructor": false}, {"identifier": "getTextIndexMethodDeclaration", "parameters": "(final TextIndex textIndex,\n                                                           final ClassOrInterfaceType returnedType,\n                                                           final int methodArity,\n                                                           final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "modifiers": "static", "return": "MethodDeclaration", "signature": "MethodDeclaration getTextIndexMethodDeclaration(final TextIndex textIndex,\n                                                           final ClassOrInterfaceType returnedType,\n                                                           final int methodArity,\n                                                           final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "full_signature": "static MethodDeclaration getTextIndexMethodDeclaration(final TextIndex textIndex,\n                                                           final ClassOrInterfaceType returnedType,\n                                                           final int methodArity,\n                                                           final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "class_method_signature": "DerivedFieldFunctionUtils.getTextIndexMethodDeclaration(final TextIndex textIndex,\n                                                           final ClassOrInterfaceType returnedType,\n                                                           final int methodArity,\n                                                           final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "testcase": false, "constructor": false}], "file": "kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/utils/DerivedFieldFunctionUtils.java"}, "focal_method": {"identifier": "getApplyMethodDeclaration", "parameters": "(final Apply apply,\n                                                       final ClassOrInterfaceType returnedType,\n                                                       final int methodArity,\n                                                       final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "modifiers": "static", "return": "MethodDeclaration", "body": "static MethodDeclaration getApplyMethodDeclaration(final Apply apply,\n                                                       final ClassOrInterfaceType returnedType,\n                                                       final int methodArity,\n                                                       final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap) {\n        String methodName = String.format(METHOD_NAME_TEMPLATE, apply.getClass().getSimpleName(), methodArity);\n        return getApplyExpressionMethodDeclaration(methodName, apply, returnedType, parameterNameTypeMap);\n    }", "signature": "MethodDeclaration getApplyMethodDeclaration(final Apply apply,\n                                                       final ClassOrInterfaceType returnedType,\n                                                       final int methodArity,\n                                                       final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "full_signature": "static MethodDeclaration getApplyMethodDeclaration(final Apply apply,\n                                                       final ClassOrInterfaceType returnedType,\n                                                       final int methodArity,\n                                                       final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "class_method_signature": "DerivedFieldFunctionUtils.getApplyMethodDeclaration(final Apply apply,\n                                                       final ClassOrInterfaceType returnedType,\n                                                       final int methodArity,\n                                                       final LinkedHashMap<String, ClassOrInterfaceType> parameterNameTypeMap)", "testcase": false, "constructor": false, "invocations": ["format", "getSimpleName", "getClass", "getApplyExpressionMethodDeclaration"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}