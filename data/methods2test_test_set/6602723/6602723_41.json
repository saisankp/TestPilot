{"test_class": {"identifier": "TestWebMBeanAdapter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MBeanServer mockMBeanServer;", "modifier": "private", "type": "MBeanServer", "declarator": "mockMBeanServer", "var_name": "mockMBeanServer"}, {"original_string": "private MBeanStringSanitizer mockSanitizer;", "modifier": "private", "type": "MBeanStringSanitizer", "declarator": "mockSanitizer", "var_name": "mockSanitizer"}, {"original_string": "private WebMBeanAdapter webMBeanAdapter;", "modifier": "private", "type": "WebMBeanAdapter", "declarator": "webMBeanAdapter", "var_name": "webMBeanAdapter"}, {"original_string": "private ObjectName mockObjectName;", "modifier": "private", "type": "ObjectName", "declarator": "mockObjectName", "var_name": "mockObjectName"}, {"original_string": "private MBeanInfo mockMBeanInfo;", "modifier": "private", "type": "MBeanInfo", "declarator": "mockMBeanInfo", "var_name": "mockMBeanInfo"}, {"original_string": "private MBeanOperationInvoker mockMBeanOperationInvoker;", "modifier": "private", "type": "MBeanOperationInvoker", "declarator": "mockMBeanOperationInvoker", "var_name": "mockMBeanOperationInvoker"}, {"original_string": "private static final String ENCODING = \"UTF-8\";", "modifier": "private static final", "type": "String", "declarator": "ENCODING = \"UTF-8\"", "var_name": "ENCODING"}], "file": "jrugged-spring/src/test/java/org/fishwife/jrugged/spring/jmx/TestWebMBeanAdapter.java"}, "test_case": {"identifier": "testInvokeOperation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInvokeOperation() throws Exception {\n        String operationName = \"operation_name\";\n        expect(mockSanitizer.urlDecode(operationName, ENCODING)).andReturn(operationName);\n\n        MBeanOperationInfo mockOperation = createMock(MBeanOperationInfo.class);\n        MBeanOperationInfo[] operationList = new MBeanOperationInfo[1];\n        operationList[0] = mockOperation;\n        expect(mockMBeanInfo.getOperations()).andReturn(operationList);\n        expect(mockOperation.getName()).andReturn(operationName);\n\n        Map<String, String[]> parameterMap = new HashMap<String, String[]>();\n        Object value = new Object();\n        expect(mockMBeanOperationInvoker.invokeOperation(parameterMap)).andReturn(value);\n\n        String valueString = \"some_value\";\n        expect(mockSanitizer.escapeValue(value)).andReturn(valueString);\n\n        replay(mockMBeanServer, mockSanitizer, mockObjectName, mockMBeanInfo, mockOperation, mockMBeanOperationInvoker);\n\n        String invokeResult = webMBeanAdapter.invokeOperation(operationName, parameterMap);\n\n        assertEquals(valueString, invokeResult);\n        verify(mockMBeanServer, mockSanitizer, mockObjectName, mockMBeanInfo, mockOperation, mockMBeanOperationInvoker);\n    }", "signature": "void testInvokeOperation()", "full_signature": "@Test public void testInvokeOperation()", "class_method_signature": "TestWebMBeanAdapter.testInvokeOperation()", "testcase": true, "constructor": false, "invocations": ["andReturn", "expect", "urlDecode", "createMock", "andReturn", "expect", "getOperations", "andReturn", "expect", "getName", "andReturn", "expect", "invokeOperation", "andReturn", "expect", "escapeValue", "replay", "invokeOperation", "assertEquals", "verify"]}, "focal_class": {"identifier": "WebMBeanAdapter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MBeanServer mBeanServer;", "modifier": "private", "type": "MBeanServer", "declarator": "mBeanServer", "var_name": "mBeanServer"}, {"original_string": "private ObjectName objectName;", "modifier": "private", "type": "ObjectName", "declarator": "objectName", "var_name": "objectName"}, {"original_string": "private MBeanStringSanitizer sanitizer;", "modifier": "private", "type": "MBeanStringSanitizer", "declarator": "sanitizer", "var_name": "sanitizer"}, {"original_string": "private String encoding;", "modifier": "private", "type": "String", "declarator": "encoding", "var_name": "encoding"}, {"original_string": "private MBeanInfo mBeanInfo;", "modifier": "private", "type": "MBeanInfo", "declarator": "mBeanInfo", "var_name": "mBeanInfo"}], "methods": [{"identifier": "WebMBeanAdapter", "parameters": "(MBeanServer mBeanServer, String mBeanName, String encoding)", "modifiers": "public", "return": "", "signature": " WebMBeanAdapter(MBeanServer mBeanServer, String mBeanName, String encoding)", "full_signature": "public  WebMBeanAdapter(MBeanServer mBeanServer, String mBeanName, String encoding)", "class_method_signature": "WebMBeanAdapter.WebMBeanAdapter(MBeanServer mBeanServer, String mBeanName, String encoding)", "testcase": false, "constructor": true}, {"identifier": "getAttributeMetadata", "parameters": "()", "modifiers": "public", "return": "Map<String, MBeanAttributeInfo>", "signature": "Map<String, MBeanAttributeInfo> getAttributeMetadata()", "full_signature": "public Map<String, MBeanAttributeInfo> getAttributeMetadata()", "class_method_signature": "WebMBeanAdapter.getAttributeMetadata()", "testcase": false, "constructor": false}, {"identifier": "getOperationMetadata", "parameters": "()", "modifiers": "public", "return": "Map<String, MBeanOperationInfo>", "signature": "Map<String, MBeanOperationInfo> getOperationMetadata()", "full_signature": "public Map<String, MBeanOperationInfo> getOperationMetadata()", "class_method_signature": "WebMBeanAdapter.getOperationMetadata()", "testcase": false, "constructor": false}, {"identifier": "getOperationInfo", "parameters": "(String operationName)", "modifiers": "public", "return": "MBeanOperationInfo", "signature": "MBeanOperationInfo getOperationInfo(String operationName)", "full_signature": "public MBeanOperationInfo getOperationInfo(String operationName)", "class_method_signature": "WebMBeanAdapter.getOperationInfo(String operationName)", "testcase": false, "constructor": false}, {"identifier": "getAttributeValues", "parameters": "()", "modifiers": "public", "return": "Map<String,Object>", "signature": "Map<String,Object> getAttributeValues()", "full_signature": "public Map<String,Object> getAttributeValues()", "class_method_signature": "WebMBeanAdapter.getAttributeValues()", "testcase": false, "constructor": false}, {"identifier": "getAttributeValue", "parameters": "(String attributeName)", "modifiers": "public", "return": "String", "signature": "String getAttributeValue(String attributeName)", "full_signature": "public String getAttributeValue(String attributeName)", "class_method_signature": "WebMBeanAdapter.getAttributeValue(String attributeName)", "testcase": false, "constructor": false}, {"identifier": "invokeOperation", "parameters": "(String operationName, Map<String, String[]> parameterMap)", "modifiers": "public", "return": "String", "signature": "String invokeOperation(String operationName, Map<String, String[]> parameterMap)", "full_signature": "public String invokeOperation(String operationName, Map<String, String[]> parameterMap)", "class_method_signature": "WebMBeanAdapter.invokeOperation(String operationName, Map<String, String[]> parameterMap)", "testcase": false, "constructor": false}, {"identifier": "createMBeanStringSanitizer", "parameters": "()", "modifiers": "", "return": "MBeanStringSanitizer", "signature": "MBeanStringSanitizer createMBeanStringSanitizer()", "full_signature": " MBeanStringSanitizer createMBeanStringSanitizer()", "class_method_signature": "WebMBeanAdapter.createMBeanStringSanitizer()", "testcase": false, "constructor": false}, {"identifier": "createObjectName", "parameters": "(String name)", "modifiers": "", "return": "ObjectName", "signature": "ObjectName createObjectName(String name)", "full_signature": " ObjectName createObjectName(String name)", "class_method_signature": "WebMBeanAdapter.createObjectName(String name)", "testcase": false, "constructor": false}, {"identifier": "createMBeanOperationInvoker", "parameters": "(\n            MBeanServer mBeanServer, ObjectName objectName, MBeanOperationInfo operationInfo)", "modifiers": "", "return": "MBeanOperationInvoker", "signature": "MBeanOperationInvoker createMBeanOperationInvoker(\n            MBeanServer mBeanServer, ObjectName objectName, MBeanOperationInfo operationInfo)", "full_signature": " MBeanOperationInvoker createMBeanOperationInvoker(\n            MBeanServer mBeanServer, ObjectName objectName, MBeanOperationInfo operationInfo)", "class_method_signature": "WebMBeanAdapter.createMBeanOperationInvoker(\n            MBeanServer mBeanServer, ObjectName objectName, MBeanOperationInfo operationInfo)", "testcase": false, "constructor": false}], "file": "jrugged-spring/src/main/java/org/fishwife/jrugged/spring/jmx/WebMBeanAdapter.java"}, "focal_method": {"identifier": "invokeOperation", "parameters": "(String operationName, Map<String, String[]> parameterMap)", "modifiers": "public", "return": "String", "body": "public String invokeOperation(String operationName, Map<String, String[]> parameterMap)\n        throws JMException, UnsupportedEncodingException {\n        MBeanOperationInfo operationInfo = getOperationInfo(operationName);\n        MBeanOperationInvoker invoker = createMBeanOperationInvoker(mBeanServer, objectName, operationInfo);\n        return sanitizer.escapeValue(invoker.invokeOperation(parameterMap));\n    }", "signature": "String invokeOperation(String operationName, Map<String, String[]> parameterMap)", "full_signature": "public String invokeOperation(String operationName, Map<String, String[]> parameterMap)", "class_method_signature": "WebMBeanAdapter.invokeOperation(String operationName, Map<String, String[]> parameterMap)", "testcase": false, "constructor": false, "invocations": ["getOperationInfo", "createMBeanOperationInvoker", "escapeValue", "invokeOperation"]}, "repository": {"repo_id": 6602723, "url": "https://github.com/Comcast/jrugged", "language": "Java", "is_fork": false, "fork_count": 90, "stargazer_count": 236, "size": 1302, "license": "licensed"}}