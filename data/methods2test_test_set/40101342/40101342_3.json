{"test_class": {"identifier": "HbaseQueryImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "HbaseQuery hbaseQuery = new HbaseQueryImpl();", "modifier": "", "type": "HbaseQuery", "declarator": "hbaseQuery = new HbaseQueryImpl()", "var_name": "hbaseQuery"}], "file": "hbase-sql/src/test/java/org/apache/hadoop/hbase/ext/sql/impl/HbaseQueryImplTest.java"}, "test_case": {"identifier": "testLimit", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLimit() throws SQLSyntaxErrorException, IOException {\n        String sql = \"SELECT TIME_ID, AREA_NAME FROM report1 limit 3 offset 2\";\n        HbaseQuery hbaseQuery = new HbaseQueryImpl();\n        List<DynaBean> rows = hbaseQuery.select(sql);\n        printBean(rows);\n        Assert.assertEquals(3, rows.size());\n    }", "signature": "void testLimit()", "full_signature": "@Test public void testLimit()", "class_method_signature": "HbaseQueryImplTest.testLimit()", "testcase": true, "constructor": false, "invocations": ["select", "printBean", "assertEquals", "size"]}, "focal_class": {"identifier": "HbaseQueryImpl", "superclass": "", "interfaces": "implements HbaseQuery", "fields": [{"original_string": "private Configuration conf = HBaseConfiguration.create();", "modifier": "private", "type": "Configuration", "declarator": "conf = HBaseConfiguration.create()", "var_name": "conf"}], "methods": [{"identifier": "select", "parameters": "(String sql)", "modifiers": "@Override public", "return": "List<DynaBean>", "signature": "List<DynaBean> select(String sql)", "full_signature": "@Override public List<DynaBean> select(String sql)", "class_method_signature": "HbaseQueryImpl.select(String sql)", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(String sql, String startRow,\n            String stopRow)", "modifiers": "@Override public", "return": "List<DynaBean>", "signature": "List<DynaBean> select(String sql, String startRow,\n            String stopRow)", "full_signature": "@Override public List<DynaBean> select(String sql, String startRow,\n            String stopRow)", "class_method_signature": "HbaseQueryImpl.select(String sql, String startRow,\n            String stopRow)", "testcase": false, "constructor": false}, {"identifier": "parseSql", "parameters": "(String sql)", "modifiers": "private", "return": "SelectSqlVisitor", "signature": "SelectSqlVisitor parseSql(String sql)", "full_signature": "private SelectSqlVisitor parseSql(String sql)", "class_method_signature": "HbaseQueryImpl.parseSql(String sql)", "testcase": false, "constructor": false}], "file": "hbase-sql/src/main/java/org/apache/hadoop/hbase/ext/sql/impl/HbaseQueryImpl.java"}, "focal_method": {"identifier": "select", "parameters": "(String sql)", "modifiers": "@Override public", "return": "List<DynaBean>", "body": "@Override\n    public List<DynaBean> select(String sql) throws SQLSyntaxErrorException, IOException {\n        return select(sql, null, null);\n    }", "signature": "List<DynaBean> select(String sql)", "full_signature": "@Override public List<DynaBean> select(String sql)", "class_method_signature": "HbaseQueryImpl.select(String sql)", "testcase": false, "constructor": false, "invocations": ["select"]}, "repository": {"repo_id": 40101342, "url": "https://github.com/ufologist/hbase-sql", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 13, "size": 1604, "license": "licensed"}}