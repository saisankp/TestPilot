{"test_class": {"identifier": "DataSourceManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SOURCE_ID = \"someSourceId\";", "modifier": "private static final", "type": "String", "declarator": "SOURCE_ID = \"someSourceId\"", "var_name": "SOURCE_ID"}, {"original_string": "@Mocked private DataSourceRepository sourceRepository;", "modifier": "@Mocked private", "type": "DataSourceRepository", "declarator": "sourceRepository", "var_name": "sourceRepository"}, {"original_string": "@Mocked private Cache<DataRepository> dataRepositoryCache;", "modifier": "@Mocked private", "type": "Cache<DataRepository>", "declarator": "dataRepositoryCache", "var_name": "dataRepositoryCache"}, {"original_string": "@Mocked private DbConnectorFactory dbConnectorFactory;", "modifier": "@Mocked private", "type": "DbConnectorFactory", "declarator": "dbConnectorFactory", "var_name": "dbConnectorFactory"}, {"original_string": "@Mocked private RepositoryFactory repositoryFactory;", "modifier": "@Mocked private", "type": "RepositoryFactory", "declarator": "repositoryFactory", "var_name": "repositoryFactory"}, {"original_string": "@Mocked private ProcessorChainManager processorChainManager;", "modifier": "@Mocked private", "type": "ProcessorChainManager", "declarator": "processorChainManager", "var_name": "processorChainManager"}, {"original_string": "@Mocked private DataViewManager dataViewManager;", "modifier": "@Mocked private", "type": "DataViewManager", "declarator": "dataViewManager", "var_name": "dataViewManager"}, {"original_string": "@Mocked private NotificationManager notificationManager;", "modifier": "@Mocked private", "type": "NotificationManager", "declarator": "notificationManager", "var_name": "notificationManager"}, {"original_string": "@Mocked private DataRepository dataRepository;", "modifier": "@Mocked private", "type": "DataRepository", "declarator": "dataRepository", "var_name": "dataRepository"}, {"original_string": "private DataSource dataSource;", "modifier": "private", "type": "DataSource", "declarator": "dataSource", "var_name": "dataSource"}, {"original_string": "private DataSourceManager sourceManager;", "modifier": "private", "type": "DataSourceManager", "declarator": "sourceManager", "var_name": "sourceManager"}], "file": "server/src/test/java/org/jvalue/ods/data/DataSourceManagerTest.java"}, "test_case": {"identifier": "testAdd", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testAdd() {\n\t\tsourceManager.add(dataSource);\n\n\t\tnew Verifications() {{\n\t\t\trepositoryFactory.createSourceDataRepository(SOURCE_ID, (JsonPointer) any);\n\t\t\tsourceRepository.add(dataSource);\n\t\t}};\n\t}", "signature": "void testAdd()", "full_signature": "@Test public void testAdd()", "class_method_signature": "DataSourceManagerTest.testAdd()", "testcase": true, "constructor": false, "invocations": ["add", "createSourceDataRepository", "add"]}, "focal_class": {"identifier": "DataSourceManager", "superclass": "", "interfaces": "implements Managed", "fields": [{"original_string": "private final DataSourceRepository dataSourceRepository;", "modifier": "private final", "type": "DataSourceRepository", "declarator": "dataSourceRepository", "var_name": "dataSourceRepository"}, {"original_string": "private final Cache<DataRepository> dataRepositoryCache;", "modifier": "private final", "type": "Cache<DataRepository>", "declarator": "dataRepositoryCache", "var_name": "dataRepositoryCache"}, {"original_string": "private final DbConnectorFactory dbConnectorFactory;", "modifier": "private final", "type": "DbConnectorFactory", "declarator": "dbConnectorFactory", "var_name": "dbConnectorFactory"}, {"original_string": "private final RepositoryFactory repositoryFactory;", "modifier": "private final", "type": "RepositoryFactory", "declarator": "repositoryFactory", "var_name": "repositoryFactory"}, {"original_string": "private final ProcessorChainManager processorChainManager;", "modifier": "private final", "type": "ProcessorChainManager", "declarator": "processorChainManager", "var_name": "processorChainManager"}, {"original_string": "private final DataViewManager dataViewManager;", "modifier": "private final", "type": "DataViewManager", "declarator": "dataViewManager", "var_name": "dataViewManager"}, {"original_string": "private final NotificationManager notificationManager;", "modifier": "private final", "type": "NotificationManager", "declarator": "notificationManager", "var_name": "notificationManager"}], "methods": [{"identifier": "DataSourceManager", "parameters": "(\n\t\t\tDataSourceRepository dataSourceRepository,\n\t\t\tCache<DataRepository> dataRepositoryCache,\n\t\t\tDbConnectorFactory dbConnectorFactory,\n\t\t\tRepositoryFactory repositoryFactory,\n\t\t\tProcessorChainManager processorChainManager,\n\t\t\tDataViewManager dataViewManager,\n\t\t\tNotificationManager notificationManager)", "modifiers": "@Inject public", "return": "", "signature": " DataSourceManager(\n\t\t\tDataSourceRepository dataSourceRepository,\n\t\t\tCache<DataRepository> dataRepositoryCache,\n\t\t\tDbConnectorFactory dbConnectorFactory,\n\t\t\tRepositoryFactory repositoryFactory,\n\t\t\tProcessorChainManager processorChainManager,\n\t\t\tDataViewManager dataViewManager,\n\t\t\tNotificationManager notificationManager)", "full_signature": "@Inject public  DataSourceManager(\n\t\t\tDataSourceRepository dataSourceRepository,\n\t\t\tCache<DataRepository> dataRepositoryCache,\n\t\t\tDbConnectorFactory dbConnectorFactory,\n\t\t\tRepositoryFactory repositoryFactory,\n\t\t\tProcessorChainManager processorChainManager,\n\t\t\tDataViewManager dataViewManager,\n\t\t\tNotificationManager notificationManager)", "class_method_signature": "DataSourceManager.DataSourceManager(\n\t\t\tDataSourceRepository dataSourceRepository,\n\t\t\tCache<DataRepository> dataRepositoryCache,\n\t\t\tDbConnectorFactory dbConnectorFactory,\n\t\t\tRepositoryFactory repositoryFactory,\n\t\t\tProcessorChainManager processorChainManager,\n\t\t\tDataViewManager dataViewManager,\n\t\t\tNotificationManager notificationManager)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(DataSource source)", "modifiers": "public", "return": "void", "signature": "void add(DataSource source)", "full_signature": "public void add(DataSource source)", "class_method_signature": "DataSourceManager.add(DataSource source)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(DataSource source)", "modifiers": "public", "return": "void", "signature": "void remove(DataSource source)", "full_signature": "public void remove(DataSource source)", "class_method_signature": "DataSourceManager.remove(DataSource source)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "public", "return": "List<DataSource>", "signature": "List<DataSource> getAll()", "full_signature": "public List<DataSource> getAll()", "class_method_signature": "DataSourceManager.getAll()", "testcase": false, "constructor": false}, {"identifier": "findBySourceId", "parameters": "(String sourceId)", "modifiers": "public", "return": "DataSource", "signature": "DataSource findBySourceId(String sourceId)", "full_signature": "public DataSource findBySourceId(String sourceId)", "class_method_signature": "DataSourceManager.findBySourceId(String sourceId)", "testcase": false, "constructor": false}, {"identifier": "getDataRepository", "parameters": "(DataSource source)", "modifiers": "public", "return": "DataRepository", "signature": "DataRepository getDataRepository(DataSource source)", "full_signature": "public DataRepository getDataRepository(DataSource source)", "class_method_signature": "DataSourceManager.getDataRepository(DataSource source)", "testcase": false, "constructor": false}, {"identifier": "isValidSourceId", "parameters": "(String sourceId)", "modifiers": "public", "return": "boolean", "signature": "boolean isValidSourceId(String sourceId)", "full_signature": "public boolean isValidSourceId(String sourceId)", "class_method_signature": "DataSourceManager.isValidSourceId(String sourceId)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void start()", "full_signature": "@Override public void start()", "class_method_signature": "DataSourceManager.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "DataSourceManager.stop()", "testcase": false, "constructor": false}, {"identifier": "createDataRepository", "parameters": "(DataSource source)", "modifiers": "private", "return": "DataRepository", "signature": "DataRepository createDataRepository(DataSource source)", "full_signature": "private DataRepository createDataRepository(DataSource source)", "class_method_signature": "DataSourceManager.createDataRepository(DataSource source)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/jvalue/ods/data/DataSourceManager.java"}, "focal_method": {"identifier": "add", "parameters": "(DataSource source)", "modifiers": "public", "return": "void", "body": "public void add(DataSource source) {\n\t\tAssert.assertNotNull(source);\n\n\t\t// create data repository\n\t\tcreateDataRepository(source);\n\n\t\t// store source\n\t\tdataSourceRepository.add(source);\n\t}", "signature": "void add(DataSource source)", "full_signature": "public void add(DataSource source)", "class_method_signature": "DataSourceManager.add(DataSource source)", "testcase": false, "constructor": false, "invocations": ["assertNotNull", "createDataRepository", "add"]}, "repository": {"repo_id": 14989619, "url": "https://github.com/jvalue/open-data-service-v1", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 4525, "license": "licensed"}}