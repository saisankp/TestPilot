{"test_class": {"identifier": "ModelWizardTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TestInvokeStrategy myInvokeStrategy = new TestInvokeStrategy();", "modifier": "private", "type": "TestInvokeStrategy", "declarator": "myInvokeStrategy = new TestInvokeStrategy()", "var_name": "myInvokeStrategy"}, {"original_string": "@Rule\n  public BatchInvokerStrategyRule myStrategyRule = new BatchInvokerStrategyRule(myInvokeStrategy);", "modifier": "@Rule\n  public", "type": "BatchInvokerStrategyRule", "declarator": "myStrategyRule = new BatchInvokerStrategyRule(myInvokeStrategy)", "var_name": "myStrategyRule"}], "file": "wizard-model/testSrc/com/android/tools/idea/wizard/model/ModelWizardTest.java"}, "test_case": {"identifier": "cantCreateWizardWithoutAtLeastOneVisibleStep", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n  public void cantCreateWizardWithoutAtLeastOneVisibleStep() throws Exception {\n    DummyModel model = new DummyModel();\n    ModelWizard.Builder wizardBuilder = new ModelWizard.Builder();\n    // Creates parent, which creates child\n    GrandparentStep grandparentStep = new GrandparentStep(model);\n    grandparentStep.setShouldSkip();\n\n    wizardBuilder.addStep(grandparentStep);\n    wizardBuilder.build();\n  }", "signature": "void cantCreateWizardWithoutAtLeastOneVisibleStep()", "full_signature": "@Test(expected = IllegalStateException.class) public void cantCreateWizardWithoutAtLeastOneVisibleStep()", "class_method_signature": "ModelWizardTest.cantCreateWizardWithoutAtLeastOneVisibleStep()", "testcase": true, "constructor": false, "invocations": ["setShouldSkip", "addStep", "build"]}, "focal_class": {"identifier": "ModelWizard", "superclass": "", "interfaces": "implements Disposable", "fields": [{"original_string": "private final List<ModelWizardStep> mySteps;", "modifier": "private final", "type": "List<ModelWizardStep>", "declarator": "mySteps", "var_name": "mySteps"}, {"original_string": "private final Map<ModelWizardStep, ModelWizardStep> myStepOwners = new HashMap<>();", "modifier": "private final", "type": "Map<ModelWizardStep, ModelWizardStep>", "declarator": "myStepOwners = new HashMap<>()", "var_name": "myStepOwners"}, {"original_string": "private final BindingsManager myBindings = new BindingsManager();", "modifier": "private final", "type": "BindingsManager", "declarator": "myBindings = new BindingsManager()", "var_name": "myBindings"}, {"original_string": "private final BoolProperty myCanGoBack = new BoolValueProperty();", "modifier": "private final", "type": "BoolProperty", "declarator": "myCanGoBack = new BoolValueProperty()", "var_name": "myCanGoBack"}, {"original_string": "private final BoolProperty myCanGoForward = new BoolValueProperty();", "modifier": "private final", "type": "BoolProperty", "declarator": "myCanGoForward = new BoolValueProperty()", "var_name": "myCanGoForward"}, {"original_string": "private final BoolProperty myOnLastStep = new BoolValueProperty();", "modifier": "private final", "type": "BoolProperty", "declarator": "myOnLastStep = new BoolValueProperty()", "var_name": "myOnLastStep"}, {"original_string": "private final OptionalProperty<Action> myExtraAction = new OptionalValueProperty<>();", "modifier": "private final", "type": "OptionalProperty<Action>", "declarator": "myExtraAction = new OptionalValueProperty<>()", "var_name": "myExtraAction"}, {"original_string": "private final Stack<ModelWizardStep> myPrevSteps = new Stack<>();", "modifier": "private final", "type": "Stack<ModelWizardStep>", "declarator": "myPrevSteps = new Stack<>()", "var_name": "myPrevSteps"}, {"original_string": "private final TitleHeader myTitleHeader = new TitleHeader();", "modifier": "private final", "type": "TitleHeader", "declarator": "myTitleHeader = new TitleHeader()", "var_name": "myTitleHeader"}, {"original_string": "private final JPanel myContentPanel = new JPanel(new BorderLayout());", "modifier": "private final", "type": "JPanel", "declarator": "myContentPanel = new JPanel(new BorderLayout())", "var_name": "myContentPanel"}, {"original_string": "private final List<WizardListener> myWizardListeners = new ArrayList<>(1);", "modifier": "private final", "type": "List<WizardListener>", "declarator": "myWizardListeners = new ArrayList<>(1)", "var_name": "myWizardListeners"}, {"original_string": "@NotNull\n  private BooleanSupplier myCancelInterceptor = () -> false;", "modifier": "@NotNull\n  private", "type": "BooleanSupplier", "declarator": "myCancelInterceptor = () -> false", "var_name": "myCancelInterceptor"}, {"original_string": "private int myCurrIndex = -1;", "modifier": "private", "type": "int", "declarator": "myCurrIndex = -1", "var_name": "myCurrIndex"}], "methods": [{"identifier": "ModelWizard", "parameters": "(@NotNull Collection<ModelWizardStep> steps)", "modifiers": "private", "return": "", "signature": " ModelWizard(@NotNull Collection<ModelWizardStep> steps)", "full_signature": "private  ModelWizard(@NotNull Collection<ModelWizardStep> steps)", "class_method_signature": "ModelWizard.ModelWizard(@NotNull Collection<ModelWizardStep> steps)", "testcase": false, "constructor": true}, {"identifier": "canGoBack", "parameters": "()", "modifiers": "@NotNull public", "return": "ObservableBool", "signature": "ObservableBool canGoBack()", "full_signature": "@NotNull public ObservableBool canGoBack()", "class_method_signature": "ModelWizard.canGoBack()", "testcase": false, "constructor": false}, {"identifier": "canGoForward", "parameters": "()", "modifiers": "@NotNull public", "return": "ObservableBool", "signature": "ObservableBool canGoForward()", "full_signature": "@NotNull public ObservableBool canGoForward()", "class_method_signature": "ModelWizard.canGoForward()", "testcase": false, "constructor": false}, {"identifier": "onLastStep", "parameters": "()", "modifiers": "@NotNull public", "return": "ObservableBool", "signature": "ObservableBool onLastStep()", "full_signature": "@NotNull public ObservableBool onLastStep()", "class_method_signature": "ModelWizard.onLastStep()", "testcase": false, "constructor": false}, {"identifier": "getTitleHeader", "parameters": "()", "modifiers": "@NotNull public", "return": "TitleHeader", "signature": "TitleHeader getTitleHeader()", "full_signature": "@NotNull public TitleHeader getTitleHeader()", "class_method_signature": "ModelWizard.getTitleHeader()", "testcase": false, "constructor": false}, {"identifier": "setCancelInterceptor", "parameters": "(@NotNull BooleanSupplier cancelInterceptor)", "modifiers": "public", "return": "void", "signature": "void setCancelInterceptor(@NotNull BooleanSupplier cancelInterceptor)", "full_signature": "public void setCancelInterceptor(@NotNull BooleanSupplier cancelInterceptor)", "class_method_signature": "ModelWizard.setCancelInterceptor(@NotNull BooleanSupplier cancelInterceptor)", "testcase": false, "constructor": false}, {"identifier": "getPreferredFocusComponent", "parameters": "()", "modifiers": "@Nullable public", "return": "JComponent", "signature": "JComponent getPreferredFocusComponent()", "full_signature": "@Nullable public JComponent getPreferredFocusComponent()", "class_method_signature": "ModelWizard.getPreferredFocusComponent()", "testcase": false, "constructor": false}, {"identifier": "addStep", "parameters": "(@NotNull ModelWizardStep<?> step)", "modifiers": "private", "return": "void", "signature": "void addStep(@NotNull ModelWizardStep<?> step)", "full_signature": "private void addStep(@NotNull ModelWizardStep<?> step)", "class_method_signature": "ModelWizard.addStep(@NotNull ModelWizardStep<?> step)", "testcase": false, "constructor": false}, {"identifier": "getCurrentStep", "parameters": "()", "modifiers": "@VisibleForTesting @NotNull", "return": "ModelWizardStep", "signature": "ModelWizardStep getCurrentStep()", "full_signature": "@VisibleForTesting @NotNull ModelWizardStep getCurrentStep()", "class_method_signature": "ModelWizard.getCurrentStep()", "testcase": false, "constructor": false}, {"identifier": "getExtraAction", "parameters": "()", "modifiers": "@NotNull", "return": "ObservableOptional<Action>", "signature": "ObservableOptional<Action> getExtraAction()", "full_signature": "@NotNull ObservableOptional<Action> getExtraAction()", "class_method_signature": "ModelWizard.getExtraAction()", "testcase": false, "constructor": false}, {"identifier": "getContentPanel", "parameters": "()", "modifiers": "@NotNull public", "return": "JPanel", "signature": "JPanel getContentPanel()", "full_signature": "@NotNull public JPanel getContentPanel()", "class_method_signature": "ModelWizard.getContentPanel()", "testcase": false, "constructor": false}, {"identifier": "goForward", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean goForward()", "full_signature": "public boolean goForward()", "class_method_signature": "ModelWizard.goForward()", "testcase": false, "constructor": false}, {"identifier": "goBack", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean goBack()", "full_signature": "public boolean goBack()", "class_method_signature": "ModelWizard.goBack()", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void cancel()", "full_signature": "public void cancel()", "class_method_signature": "ModelWizard.cancel()", "testcase": false, "constructor": false}, {"identifier": "addResultListener", "parameters": "(@NotNull WizardListener listener)", "modifiers": "public", "return": "void", "signature": "void addResultListener(@NotNull WizardListener listener)", "full_signature": "public void addResultListener(@NotNull WizardListener listener)", "class_method_signature": "ModelWizard.addResultListener(@NotNull WizardListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeResultListener", "parameters": "(@NotNull WizardListener listener)", "modifiers": "public", "return": "void", "signature": "void removeResultListener(@NotNull WizardListener listener)", "full_signature": "public void removeResultListener(@NotNull WizardListener listener)", "class_method_signature": "ModelWizard.removeResultListener(@NotNull WizardListener listener)", "testcase": false, "constructor": false}, {"identifier": "isFinished", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFinished()", "full_signature": "public boolean isFinished()", "class_method_signature": "ModelWizard.isFinished()", "testcase": false, "constructor": false}, {"identifier": "ensureWizardIsRunning", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void ensureWizardIsRunning()", "full_signature": "private void ensureWizardIsRunning()", "class_method_signature": "ModelWizard.ensureWizardIsRunning()", "testcase": false, "constructor": false}, {"identifier": "handleFinished", "parameters": "(@NotNull WizardResult result)", "modifiers": "private", "return": "void", "signature": "void handleFinished(@NotNull WizardResult result)", "full_signature": "private void handleFinished(@NotNull WizardResult result)", "class_method_signature": "ModelWizard.handleFinished(@NotNull WizardResult result)", "testcase": false, "constructor": false}, {"identifier": "showCurrentStep", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void showCurrentStep()", "full_signature": "private void showCurrentStep()", "class_method_signature": "ModelWizard.showCurrentStep()", "testcase": false, "constructor": false}, {"identifier": "updateNavigationProperties", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updateNavigationProperties()", "full_signature": "private void updateNavigationProperties()", "class_method_signature": "ModelWizard.updateNavigationProperties()", "testcase": false, "constructor": false}, {"identifier": "shouldShowStep", "parameters": "(ModelWizardStep step)", "modifiers": "private", "return": "boolean", "signature": "boolean shouldShowStep(ModelWizardStep step)", "full_signature": "private boolean shouldShowStep(ModelWizardStep step)", "class_method_signature": "ModelWizard.shouldShowStep(ModelWizardStep step)", "testcase": false, "constructor": false}, {"identifier": "isOnLastVisibleStep", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isOnLastVisibleStep()", "full_signature": "private boolean isOnLastVisibleStep()", "class_method_signature": "ModelWizard.isOnLastVisibleStep()", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void dispose()", "full_signature": "@Override public void dispose()", "class_method_signature": "ModelWizard.dispose()", "testcase": false, "constructor": false}, {"identifier": "getListeners", "parameters": "()", "modifiers": "private", "return": "Iterable<WizardListener>", "signature": "Iterable<WizardListener> getListeners()", "full_signature": "private Iterable<WizardListener> getListeners()", "class_method_signature": "ModelWizard.getListeners()", "testcase": false, "constructor": false}], "file": "wizard-model/src/com/android/tools/idea/wizard/model/ModelWizard.java"}, "focal_method": {"identifier": "addStep", "parameters": "(@NotNull ModelWizardStep<?> step)", "modifiers": "private", "return": "void", "body": "private void addStep(@NotNull ModelWizardStep<?> step) {\n    mySteps.add(step);\n\n    for (ModelWizardStep subStep : step.createDependentSteps()) {\n      myStepOwners.put(subStep, step);\n      addStep(subStep);\n    }\n  }", "signature": "void addStep(@NotNull ModelWizardStep<?> step)", "full_signature": "private void addStep(@NotNull ModelWizardStep<?> step)", "class_method_signature": "ModelWizard.addStep(@NotNull ModelWizardStep<?> step)", "testcase": false, "constructor": false, "invocations": ["add", "createDependentSteps", "put", "addStep"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}