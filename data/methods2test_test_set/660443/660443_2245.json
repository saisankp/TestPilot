{"test_class": {"identifier": "MolecularFormulaSetTest", "superclass": "extends AbstractMolecularFormulaSetTest", "interfaces": "", "fields": [], "file": "base/silent/src/test/java/org/openscience/cdk/silent/MolecularFormulaSetTest.java"}, "test_case": {"identifier": "testMolecularFormulaSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMolecularFormulaSet() {\n        IMolecularFormulaSet mfS = new MolecularFormulaSet();\n        Assert.assertNotNull(mfS);\n    }", "signature": "void testMolecularFormulaSet()", "full_signature": "@Test public void testMolecularFormulaSet()", "class_method_signature": "MolecularFormulaSetTest.testMolecularFormulaSet()", "testcase": true, "constructor": false, "invocations": ["assertNotNull"]}, "focal_class": {"identifier": "MolecularFormulaSet", "superclass": "", "interfaces": "implements Iterable<IMolecularFormula>, IMolecularFormulaSet, Cloneable", "fields": [{"original_string": "private static final long       serialVersionUID = -2043178712150212550L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -2043178712150212550L", "var_name": "serialVersionUID"}, {"original_string": "private List<IMolecularFormula> components;", "modifier": "private", "type": "List<IMolecularFormula>", "declarator": "components", "var_name": "components"}], "methods": [{"identifier": "MolecularFormulaSet", "parameters": "()", "modifiers": "public", "return": "", "signature": " MolecularFormulaSet()", "full_signature": "public  MolecularFormulaSet()", "class_method_signature": "MolecularFormulaSet.MolecularFormulaSet()", "testcase": false, "constructor": true}, {"identifier": "MolecularFormulaSet", "parameters": "(IMolecularFormula formula)", "modifiers": "public", "return": "", "signature": " MolecularFormulaSet(IMolecularFormula formula)", "full_signature": "public  MolecularFormulaSet(IMolecularFormula formula)", "class_method_signature": "MolecularFormulaSet.MolecularFormulaSet(IMolecularFormula formula)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(IMolecularFormulaSet formulaSet)", "modifiers": "@Override public", "return": "void", "signature": "void add(IMolecularFormulaSet formulaSet)", "full_signature": "@Override public void add(IMolecularFormulaSet formulaSet)", "class_method_signature": "MolecularFormulaSet.add(IMolecularFormulaSet formulaSet)", "testcase": false, "constructor": false}, {"identifier": "addMolecularFormula", "parameters": "(IMolecularFormula formula)", "modifiers": "@Override public", "return": "void", "signature": "void addMolecularFormula(IMolecularFormula formula)", "full_signature": "@Override public void addMolecularFormula(IMolecularFormula formula)", "class_method_signature": "MolecularFormulaSet.addMolecularFormula(IMolecularFormula formula)", "testcase": false, "constructor": false}, {"identifier": "molecularFormulas", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<IMolecularFormula>", "signature": "Iterable<IMolecularFormula> molecularFormulas()", "full_signature": "@Override public Iterable<IMolecularFormula> molecularFormulas()", "class_method_signature": "MolecularFormulaSet.molecularFormulas()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<IMolecularFormula>", "signature": "Iterator<IMolecularFormula> iterator()", "full_signature": "@Override public Iterator<IMolecularFormula> iterator()", "class_method_signature": "MolecularFormulaSet.iterator()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "MolecularFormulaSet.size()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(IMolecularFormula formula)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(IMolecularFormula formula)", "full_signature": "@Override public boolean contains(IMolecularFormula formula)", "class_method_signature": "MolecularFormulaSet.contains(IMolecularFormula formula)", "testcase": false, "constructor": false}, {"identifier": "getMolecularFormula", "parameters": "(int position)", "modifiers": "@Override public", "return": "IMolecularFormula", "signature": "IMolecularFormula getMolecularFormula(int position)", "full_signature": "@Override public IMolecularFormula getMolecularFormula(int position)", "class_method_signature": "MolecularFormulaSet.getMolecularFormula(int position)", "testcase": false, "constructor": false}, {"identifier": "removeAllMolecularFormulas", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void removeAllMolecularFormulas()", "full_signature": "@Override public void removeAllMolecularFormulas()", "class_method_signature": "MolecularFormulaSet.removeAllMolecularFormulas()", "testcase": false, "constructor": false}, {"identifier": "removeMolecularFormula", "parameters": "(IMolecularFormula formula)", "modifiers": "@Override public", "return": "void", "signature": "void removeMolecularFormula(IMolecularFormula formula)", "full_signature": "@Override public void removeMolecularFormula(IMolecularFormula formula)", "class_method_signature": "MolecularFormulaSet.removeMolecularFormula(IMolecularFormula formula)", "testcase": false, "constructor": false}, {"identifier": "removeMolecularFormula", "parameters": "(int position)", "modifiers": "@Override public", "return": "void", "signature": "void removeMolecularFormula(int position)", "full_signature": "@Override public void removeMolecularFormula(int position)", "class_method_signature": "MolecularFormulaSet.removeMolecularFormula(int position)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object clone()", "full_signature": "@Override public Object clone()", "class_method_signature": "MolecularFormulaSet.clone()", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "()", "modifiers": "@Override public", "return": "IChemObjectBuilder", "signature": "IChemObjectBuilder getBuilder()", "full_signature": "@Override public IChemObjectBuilder getBuilder()", "class_method_signature": "MolecularFormulaSet.getBuilder()", "testcase": false, "constructor": false}], "file": "base/silent/src/main/java/org/openscience/cdk/silent/MolecularFormulaSet.java"}, "focal_method": {"identifier": "MolecularFormulaSet", "parameters": "()", "modifiers": "public", "return": "", "body": "public MolecularFormulaSet() {\n        components = new ArrayList<IMolecularFormula>();\n    }", "signature": " MolecularFormulaSet()", "full_signature": "public  MolecularFormulaSet()", "class_method_signature": "MolecularFormulaSet.MolecularFormulaSet()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}