{"test_class": {"identifier": "AssertionTest", "superclass": "", "interfaces": "", "fields": [], "file": "gollum-common/src/test/java/org/gollum/common/util/AssertionTest.java"}, "test_case": {"identifier": "nonPositive_ok", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void nonPositive_ok() throws Exception {\n        Assertion.nonPositive(0, \"number\");\n        Assertion.nonPositive(-1, \"number\");\n    }", "signature": "void nonPositive_ok()", "full_signature": "@Test public void nonPositive_ok()", "class_method_signature": "AssertionTest.nonPositive_ok()", "testcase": true, "constructor": false, "invocations": ["nonPositive", "nonPositive"]}, "focal_class": {"identifier": "Assertion", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "notNull", "parameters": "(T argument, String format, Object... args)", "modifiers": "public static", "return": "void", "signature": "void notNull(T argument, String format, Object... args)", "full_signature": "public static void notNull(T argument, String format, Object... args)", "class_method_signature": "Assertion.notNull(T argument, String format, Object... args)", "testcase": false, "constructor": false}, {"identifier": "notNullOrEmpty", "parameters": "(String argument, String name)", "modifiers": "public static", "return": "void", "signature": "void notNullOrEmpty(String argument, String name)", "full_signature": "public static void notNullOrEmpty(String argument, String name)", "class_method_signature": "Assertion.notNullOrEmpty(String argument, String name)", "testcase": false, "constructor": false}, {"identifier": "negative", "parameters": "(long number, String name)", "modifiers": "public static", "return": "void", "signature": "void negative(long number, String name)", "full_signature": "public static void negative(long number, String name)", "class_method_signature": "Assertion.negative(long number, String name)", "testcase": false, "constructor": false}, {"identifier": "positive", "parameters": "(long number, String name)", "modifiers": "public static", "return": "void", "signature": "void positive(long number, String name)", "full_signature": "public static void positive(long number, String name)", "class_method_signature": "Assertion.positive(long number, String name)", "testcase": false, "constructor": false}, {"identifier": "nonNegative", "parameters": "(long number, String name)", "modifiers": "public static", "return": "void", "signature": "void nonNegative(long number, String name)", "full_signature": "public static void nonNegative(long number, String name)", "class_method_signature": "Assertion.nonNegative(long number, String name)", "testcase": false, "constructor": false}, {"identifier": "nonPositive", "parameters": "(long number, String name)", "modifiers": "public static", "return": "void", "signature": "void nonPositive(long number, String name)", "full_signature": "public static void nonPositive(long number, String name)", "class_method_signature": "Assertion.nonPositive(long number, String name)", "testcase": false, "constructor": false}], "file": "gollum-common/src/main/java/org/gollum/common/util/Assertion.java"}, "focal_method": {"identifier": "nonPositive", "parameters": "(long number, String name)", "modifiers": "public static", "return": "void", "body": "public static void nonPositive(long number, String name) {\n        if (number > 0) {\n            throw new InvalidArgumentException(name + \" should be non-positive\");\n        }\n    }", "signature": "void nonPositive(long number, String name)", "full_signature": "public static void nonPositive(long number, String name)", "class_method_signature": "Assertion.nonPositive(long number, String name)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 115379439, "url": "https://github.com/hziee514/gollum", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 7, "size": 224, "license": "licensed"}}