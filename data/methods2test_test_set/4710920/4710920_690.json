{"test_class": {"identifier": "GenericEventListenerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EventDispatcher eventDispatcher;", "modifier": "private", "type": "EventDispatcher", "declarator": "eventDispatcher", "var_name": "eventDispatcher"}, {"original_string": "private MyGenericEventListener listener;", "modifier": "private", "type": "MyGenericEventListener", "declarator": "listener", "var_name": "listener"}], "file": "dubbo-common/src/test/java/org/apache/dubbo/event/GenericEventListenerTest.java"}, "test_case": {"identifier": "testOnEvent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnEvent() {\n        String value = \"Hello,World\";\n        EchoEvent echoEvent = new EchoEvent(value);\n        eventDispatcher.dispatch(echoEvent);\n        assertEquals(echoEvent, listener.getEchoEvent());\n        assertEquals(value, listener.getEchoEvent().getSource());\n    }", "signature": "void testOnEvent()", "full_signature": "@Test public void testOnEvent()", "class_method_signature": "GenericEventListenerTest.testOnEvent()", "testcase": true, "constructor": false, "invocations": ["dispatch", "assertEquals", "getEchoEvent", "assertEquals", "getSource", "getEchoEvent"]}, "focal_class": {"identifier": "GenericEventListener", "superclass": "", "interfaces": "implements EventListener<Event>", "fields": [{"original_string": "private final Method onEventMethod;", "modifier": "private final", "type": "Method", "declarator": "onEventMethod", "var_name": "onEventMethod"}, {"original_string": "private final Map<Class<?>, Set<Method>> handleEventMethods;", "modifier": "private final", "type": "Map<Class<?>, Set<Method>>", "declarator": "handleEventMethods", "var_name": "handleEventMethods"}], "methods": [{"identifier": "GenericEventListener", "parameters": "()", "modifiers": "protected", "return": "", "signature": " GenericEventListener()", "full_signature": "protected  GenericEventListener()", "class_method_signature": "GenericEventListener.GenericEventListener()", "testcase": false, "constructor": true}, {"identifier": "findOnEventMethod", "parameters": "()", "modifiers": "private", "return": "Method", "signature": "Method findOnEventMethod()", "full_signature": "private Method findOnEventMethod()", "class_method_signature": "GenericEventListener.findOnEventMethod()", "testcase": false, "constructor": false}, {"identifier": "findHandleEventMethods", "parameters": "()", "modifiers": "private", "return": "Map<Class<?>, Set<Method>>", "signature": "Map<Class<?>, Set<Method>> findHandleEventMethods()", "full_signature": "private Map<Class<?>, Set<Method>> findHandleEventMethods()", "class_method_signature": "GenericEventListener.findHandleEventMethods()", "testcase": false, "constructor": false}, {"identifier": "onEvent", "parameters": "(Event event)", "modifiers": "public final", "return": "void", "signature": "void onEvent(Event event)", "full_signature": "public final void onEvent(Event event)", "class_method_signature": "GenericEventListener.onEvent(Event event)", "testcase": false, "constructor": false}, {"identifier": "isHandleEventMethod", "parameters": "(Method method)", "modifiers": "private", "return": "boolean", "signature": "boolean isHandleEventMethod(Method method)", "full_signature": "private boolean isHandleEventMethod(Method method)", "class_method_signature": "GenericEventListener.isHandleEventMethod(Method method)", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/org/apache/dubbo/event/GenericEventListener.java"}, "focal_method": {"identifier": "onEvent", "parameters": "(Event event)", "modifiers": "public final", "return": "void", "body": "public final void onEvent(Event event) {\n        Class<?> eventClass = event.getClass();\n        handleEventMethods.getOrDefault(eventClass, emptySet()).forEach(method -> {\n            ThrowableConsumer.execute(method, m -> {\n                m.invoke(this, event);\n            });\n        });\n    }", "signature": "void onEvent(Event event)", "full_signature": "public final void onEvent(Event event)", "class_method_signature": "GenericEventListener.onEvent(Event event)", "testcase": false, "constructor": false, "invocations": ["getClass", "forEach", "getOrDefault", "emptySet", "execute", "invoke"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}