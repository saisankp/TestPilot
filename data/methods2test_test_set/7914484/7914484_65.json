{"test_class": {"identifier": "DomPoxMessageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DomPoxMessage message;", "modifier": "private", "type": "DomPoxMessage", "declarator": "message", "var_name": "message"}, {"original_string": "private Transformer transformer;", "modifier": "private", "type": "Transformer", "declarator": "transformer", "var_name": "transformer"}], "file": "spring-ws-core/src/test/java/org/springframework/ws/pox/dom/DomPoxMessageTest.java"}, "test_case": {"identifier": "testWriteTo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testWriteTo() throws Exception {\n\t\tString content = \"<root xmlns='http://www.springframework.org/spring-ws'>\" + \"<child/></root>\";\n\t\tStringSource source = new StringSource(content);\n\t\ttransformer.transform(source, message.getPayloadResult());\n\t\tByteArrayOutputStream os = new ByteArrayOutputStream();\n\t\tmessage.writeTo(os);\n\t\tassertXMLEqual(content, os.toString(\"UTF-8\"));\n\t}", "signature": "void testWriteTo()", "full_signature": "@Test public void testWriteTo()", "class_method_signature": "DomPoxMessageTest.testWriteTo()", "testcase": true, "constructor": false, "invocations": ["transform", "getPayloadResult", "writeTo", "assertXMLEqual", "toString"]}, "focal_class": {"identifier": "DomPoxMessage", "superclass": "", "interfaces": "implements PoxMessage", "fields": [{"original_string": "private final String contentType;", "modifier": "private final", "type": "String", "declarator": "contentType", "var_name": "contentType"}, {"original_string": "private final Document document;", "modifier": "private final", "type": "Document", "declarator": "document", "var_name": "document"}, {"original_string": "private final Transformer transformer;", "modifier": "private final", "type": "Transformer", "declarator": "transformer", "var_name": "transformer"}], "methods": [{"identifier": "DomPoxMessage", "parameters": "(Document document, Transformer transformer, String contentType)", "modifiers": "public", "return": "", "signature": " DomPoxMessage(Document document, Transformer transformer, String contentType)", "full_signature": "public  DomPoxMessage(Document document, Transformer transformer, String contentType)", "class_method_signature": "DomPoxMessage.DomPoxMessage(Document document, Transformer transformer, String contentType)", "testcase": false, "constructor": true}, {"identifier": "getDocument", "parameters": "()", "modifiers": "public", "return": "Document", "signature": "Document getDocument()", "full_signature": "public Document getDocument()", "class_method_signature": "DomPoxMessage.getDocument()", "testcase": false, "constructor": false}, {"identifier": "getPayloadResult", "parameters": "()", "modifiers": "@Override public", "return": "Result", "signature": "Result getPayloadResult()", "full_signature": "@Override public Result getPayloadResult()", "class_method_signature": "DomPoxMessage.getPayloadResult()", "testcase": false, "constructor": false}, {"identifier": "getPayloadSource", "parameters": "()", "modifiers": "@Override public", "return": "Source", "signature": "Source getPayloadSource()", "full_signature": "@Override public Source getPayloadSource()", "class_method_signature": "DomPoxMessage.getPayloadSource()", "testcase": false, "constructor": false}, {"identifier": "hasFault", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasFault()", "full_signature": "public boolean hasFault()", "class_method_signature": "DomPoxMessage.hasFault()", "testcase": false, "constructor": false}, {"identifier": "getFaultReason", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFaultReason()", "full_signature": "public String getFaultReason()", "class_method_signature": "DomPoxMessage.getFaultReason()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "DomPoxMessage.toString()", "testcase": false, "constructor": false}, {"identifier": "writeTo", "parameters": "(OutputStream outputStream)", "modifiers": "@Override public", "return": "void", "signature": "void writeTo(OutputStream outputStream)", "full_signature": "@Override public void writeTo(OutputStream outputStream)", "class_method_signature": "DomPoxMessage.writeTo(OutputStream outputStream)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/pox/dom/DomPoxMessage.java"}, "focal_method": {"identifier": "writeTo", "parameters": "(OutputStream outputStream)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void writeTo(OutputStream outputStream) throws IOException {\n\t\ttry {\n\t\t\tif (outputStream instanceof TransportOutputStream) {\n\t\t\t\tTransportOutputStream transportOutputStream = (TransportOutputStream) outputStream;\n\t\t\t\ttransportOutputStream.addHeader(TransportConstants.HEADER_CONTENT_TYPE, contentType);\n\t\t\t}\n\t\t\ttransformer.transform(getPayloadSource(), new StreamResult(outputStream));\n\t\t} catch (TransformerException ex) {\n\t\t\tthrow new DomPoxMessageException(\"Could write document: \" + ex.getMessage(), ex);\n\t\t}\n\t}", "signature": "void writeTo(OutputStream outputStream)", "full_signature": "@Override public void writeTo(OutputStream outputStream)", "class_method_signature": "DomPoxMessage.writeTo(OutputStream outputStream)", "testcase": false, "constructor": false, "invocations": ["addHeader", "transform", "getPayloadSource", "getMessage"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}