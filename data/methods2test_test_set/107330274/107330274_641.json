{"test_class": {"identifier": "DefaultEsClientTest", "superclass": "", "interfaces": "", "fields": [], "file": "titus-common-ext/elasticsearch/src/test/java/com/netflix/titus/ext/elasticsearch/DefaultEsClientTest.java"}, "test_case": {"identifier": "bulkIndexPayload", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void bulkIndexPayload() {\n        TestDoc testDoc1 = new TestDoc(\"id1\", \"Accepted\", Instant.now().getEpochSecond());\n        TestDoc testDoc2 = new TestDoc(\"id2\", \"Running\", Instant.now().getEpochSecond());\n        TestDoc testDoc3 = new TestDoc(\"id3\", \"Stopped\", Instant.now().getEpochSecond());\n\n        List<TestDoc> testDocs = Arrays.asList(testDoc1, testDoc2, testDoc3);\n\n        DefaultEsWebClientFactory defaultEsWebClientFactory = new DefaultEsWebClientFactory(getClientConfiguration());\n        DefaultEsClient<TestDoc> esClient = new DefaultEsClient<>(defaultEsWebClientFactory);\n        final String bulkIndexPayload = esClient.buildBulkIndexPayload(testDocs, \"titustasks\", \"default\");\n        assertThat(bulkIndexPayload).isNotNull();\n        assertThat(bulkIndexPayload).isNotEmpty();\n        final String[] payloadLines = bulkIndexPayload.split(\"\\n\");\n        assertThat(payloadLines.length).isEqualTo(testDocs.size() * 2);\n        String line1 = \"{\\\"index\\\":{\\\"_index\\\":\\\"titustasks\\\",\\\"_type\\\":\\\"default\\\",\\\"_id\\\":\\\"id1\\\"}}\";\n        String line2 = \"{\\\"index\\\":{\\\"_index\\\":\\\"titustasks\\\",\\\"_type\\\":\\\"default\\\",\\\"_id\\\":\\\"id2\\\"}}\";\n        String line3 = \"{\\\"index\\\":{\\\"_index\\\":\\\"titustasks\\\",\\\"_type\\\":\\\"default\\\",\\\"_id\\\":\\\"id3\\\"}}\";\n        assertThat(payloadLines[0]).isEqualTo(line1);\n        assertThat(payloadLines[2]).isEqualTo(line2);\n        assertThat(payloadLines[4]).isEqualTo(line3);\n    }", "signature": "void bulkIndexPayload()", "full_signature": "@Test public void bulkIndexPayload()", "class_method_signature": "DefaultEsClientTest.bulkIndexPayload()", "testcase": true, "constructor": false, "invocations": ["getEpochSecond", "now", "getEpochSecond", "now", "getEpochSecond", "now", "asList", "getClientConfiguration", "buildBulkIndexPayload", "isNotNull", "assertThat", "isNotEmpty", "assertThat", "split", "isEqualTo", "assertThat", "size", "isEqualTo", "assertThat", "isEqualTo", "assertThat", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "DefaultEsClient", "superclass": "", "interfaces": "implements EsClient<T>", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(DefaultEsClient.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(DefaultEsClient.class)", "var_name": "logger"}, {"original_string": "private final WebClient client;", "modifier": "private final", "type": "WebClient", "declarator": "client", "var_name": "client"}], "methods": [{"identifier": "DefaultEsClient", "parameters": "(EsWebClientFactory esWebClientFactory)", "modifiers": "public", "return": "", "signature": " DefaultEsClient(EsWebClientFactory esWebClientFactory)", "full_signature": "public  DefaultEsClient(EsWebClientFactory esWebClientFactory)", "class_method_signature": "DefaultEsClient.DefaultEsClient(EsWebClientFactory esWebClientFactory)", "testcase": false, "constructor": true}, {"identifier": "indexDocument", "parameters": "(T document, String indexName, String documentType)", "modifiers": "@Override public", "return": "Mono<EsIndexResp>", "signature": "Mono<EsIndexResp> indexDocument(T document, String indexName, String documentType)", "full_signature": "@Override public Mono<EsIndexResp> indexDocument(T document, String indexName, String documentType)", "class_method_signature": "DefaultEsClient.indexDocument(T document, String indexName, String documentType)", "testcase": false, "constructor": false}, {"identifier": "bulkIndexDocuments", "parameters": "(List<T> taskDocuments, String index, String type)", "modifiers": "@Override public", "return": "Mono<BulkEsIndexResp>", "signature": "Mono<BulkEsIndexResp> bulkIndexDocuments(List<T> taskDocuments, String index, String type)", "full_signature": "@Override public Mono<BulkEsIndexResp> bulkIndexDocuments(List<T> taskDocuments, String index, String type)", "class_method_signature": "DefaultEsClient.bulkIndexDocuments(List<T> taskDocuments, String index, String type)", "testcase": false, "constructor": false}, {"identifier": "findDocumentById", "parameters": "(String id, String index, String type,\n                                               ParameterizedTypeReference<EsRespSrc<T>> responseTypeRef)", "modifiers": "@Override public", "return": "Mono<EsRespSrc<T>>", "signature": "Mono<EsRespSrc<T>> findDocumentById(String id, String index, String type,\n                                               ParameterizedTypeReference<EsRespSrc<T>> responseTypeRef)", "full_signature": "@Override public Mono<EsRespSrc<T>> findDocumentById(String id, String index, String type,\n                                               ParameterizedTypeReference<EsRespSrc<T>> responseTypeRef)", "class_method_signature": "DefaultEsClient.findDocumentById(String id, String index, String type,\n                                               ParameterizedTypeReference<EsRespSrc<T>> responseTypeRef)", "testcase": false, "constructor": false}, {"identifier": "getTotalDocumentCount", "parameters": "(String index, String type)", "modifiers": "@Override public", "return": "Mono<EsRespCount>", "signature": "Mono<EsRespCount> getTotalDocumentCount(String index, String type)", "full_signature": "@Override public Mono<EsRespCount> getTotalDocumentCount(String index, String type)", "class_method_signature": "DefaultEsClient.getTotalDocumentCount(String index, String type)", "testcase": false, "constructor": false}, {"identifier": "buildBulkIndexPayload", "parameters": "(List<T> tasks, String index, String type)", "modifiers": "@VisibleForTesting", "return": "String", "signature": "String buildBulkIndexPayload(List<T> tasks, String index, String type)", "full_signature": "@VisibleForTesting String buildBulkIndexPayload(List<T> tasks, String index, String type)", "class_method_signature": "DefaultEsClient.buildBulkIndexPayload(List<T> tasks, String index, String type)", "testcase": false, "constructor": false}], "file": "titus-common-ext/elasticsearch/src/main/java/com/netflix/titus/ext/elasticsearch/DefaultEsClient.java"}, "focal_method": {"identifier": "buildBulkIndexPayload", "parameters": "(List<T> tasks, String index, String type)", "modifiers": "@VisibleForTesting", "return": "String", "body": "@VisibleForTesting\n    String buildBulkIndexPayload(List<T> tasks, String index, String type) {\n        StringBuilder sb = new StringBuilder();\n\n        final ObjectMapper mapper = CommonObjectMappers.jacksonDefaultMapper();\n\n        tasks.forEach(taskDocument -> {\n            final IndexHeader indexHeader = new IndexHeader(index, type, taskDocument.getId());\n            final IndexHeaderLine indexHeaderLine = new IndexHeaderLine(indexHeader);\n            try {\n                final String indexLine = mapper.writeValueAsString(indexHeaderLine);\n                sb.append(indexLine);\n                sb.append(\"\\n\");\n                final String fieldsLine = mapper.writeValueAsString(taskDocument);\n                sb.append(fieldsLine);\n                sb.append(\"\\n\");\n            } catch (JsonProcessingException e) {\n                logger.error(\"Exception in transforming taskDocument into JSON \", e);\n            }\n        });\n        return sb.toString();\n    }", "signature": "String buildBulkIndexPayload(List<T> tasks, String index, String type)", "full_signature": "@VisibleForTesting String buildBulkIndexPayload(List<T> tasks, String index, String type)", "class_method_signature": "DefaultEsClient.buildBulkIndexPayload(List<T> tasks, String index, String type)", "testcase": false, "constructor": false, "invocations": ["jacksonDefaultMapper", "forEach", "getId", "writeValueAsString", "append", "append", "writeValueAsString", "append", "append", "error", "toString"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}