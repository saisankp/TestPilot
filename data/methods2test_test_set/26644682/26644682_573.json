{"test_class": {"identifier": "AverageTest", "superclass": "extends OperationBaseTest", "interfaces": "", "fields": [], "file": "dataprep-transformation/src/test/java/org/talend/dataprep/transformation/aggregation/operation/AverageTest.java"}, "test_case": {"identifier": "shouldComputeAverage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldComputeAverage() {\n\n        AggregationResult result = new AggregationResult(Operator.AVERAGE);\n        aggregator.accept(getRow(\"toto\", \"10\"), result);\n        aggregator.accept(getRow(\"toto\", \"2\"), result);\n        aggregator.accept(getRow(\"toto\", \"3.6\"), result);\n        aggregator.accept(getRow(\"toto\", \"\"), result);\n        aggregator.accept(getRow(\"toto\", \"8.2\"), result);\n        aggregator.accept(getRow(\"tata\", \"10\"), result);\n        aggregator.accept(getRow(\"toto\", \"-8\"), result);\n        aggregator.accept(getRow(\"toto\", \"12.3\"), result);\n        aggregator.accept(getRow(\"tata\", \"5\"), result);\n\n        final Average.AverageContext toto = (Average.AverageContext) result.get(\"toto\");\n        assertEquals(4.683d, toto.getValue(), 0.001d);\n\n        final Average.AverageContext tata = (Average.AverageContext) result.get(\"tata\");\n        assertEquals(7.5d, tata.getValue(), 0);\n\n    }", "signature": "void shouldComputeAverage()", "full_signature": "@Test public void shouldComputeAverage()", "class_method_signature": "AverageTest.shouldComputeAverage()", "testcase": true, "constructor": false, "invocations": ["accept", "getRow", "accept", "getRow", "accept", "getRow", "accept", "getRow", "accept", "getRow", "accept", "getRow", "accept", "getRow", "accept", "getRow", "accept", "getRow", "get", "assertEquals", "getValue", "get", "assertEquals", "getValue"]}, "focal_class": {"identifier": "Average", "superclass": "extends AbstractAggregator", "interfaces": "implements Aggregator", "fields": [], "methods": [{"identifier": "Average", "parameters": "(String groupBy, String columnId)", "modifiers": "", "return": "", "signature": " Average(String groupBy, String columnId)", "full_signature": "  Average(String groupBy, String columnId)", "class_method_signature": "Average.Average(String groupBy, String columnId)", "testcase": false, "constructor": true}, {"identifier": "accept", "parameters": "(DataSetRow row, AggregationResult result)", "modifiers": "@Override public", "return": "void", "signature": "void accept(DataSetRow row, AggregationResult result)", "full_signature": "@Override public void accept(DataSetRow row, AggregationResult result)", "class_method_signature": "Average.accept(DataSetRow row, AggregationResult result)", "testcase": false, "constructor": false}, {"identifier": "normalize", "parameters": "(AggregationResult result)", "modifiers": "@Override public", "return": "void", "signature": "void normalize(AggregationResult result)", "full_signature": "@Override public void normalize(AggregationResult result)", "class_method_signature": "Average.normalize(AggregationResult result)", "testcase": false, "constructor": false}], "file": "dataprep-transformation/src/main/java/org/talend/dataprep/transformation/aggregation/operation/Average.java"}, "focal_method": {"identifier": "accept", "parameters": "(DataSetRow row, AggregationResult result)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void accept(DataSetRow row, AggregationResult result) {\n        final String key = row.get(groupBy);\n\n        // init the group by in the result\n        if (!result.contains(key)) {\n            result.put(key, new AverageContext());\n        }\n\n        final AverageContext context = (AverageContext) result.get(key);\n        context.process(row.get(columnId));\n    }", "signature": "void accept(DataSetRow row, AggregationResult result)", "full_signature": "@Override public void accept(DataSetRow row, AggregationResult result)", "class_method_signature": "Average.accept(DataSetRow row, AggregationResult result)", "testcase": false, "constructor": false, "invocations": ["get", "contains", "put", "get", "process", "get"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}