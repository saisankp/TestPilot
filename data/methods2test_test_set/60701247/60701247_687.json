{"test_class": {"identifier": "MemoryUsageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int STREAM_ID = 1;", "modifier": "private static final", "type": "int", "declarator": "STREAM_ID = 1", "var_name": "STREAM_ID"}, {"original_string": "private final FakeTimer myTimer = new FakeTimer();", "modifier": "private final", "type": "FakeTimer", "declarator": "myTimer = new FakeTimer()", "var_name": "myTimer"}, {"original_string": "private final FakeTransportService myService = new FakeTransportService(myTimer);", "modifier": "private final", "type": "FakeTransportService", "declarator": "myService = new FakeTransportService(myTimer)", "var_name": "myService"}, {"original_string": "@Rule public FakeGrpcChannel myGrpcChannel = new FakeGrpcChannel(\"MemoryUsageTEst\", myService);", "modifier": "@Rule public", "type": "FakeGrpcChannel", "declarator": "myGrpcChannel = new FakeGrpcChannel(\"MemoryUsageTEst\", myService)", "var_name": "myGrpcChannel"}, {"original_string": "private FakeIdeProfilerServices myIdeProfilerServices;", "modifier": "private", "type": "FakeIdeProfilerServices", "declarator": "myIdeProfilerServices", "var_name": "myIdeProfilerServices"}, {"original_string": "private StudioProfilers myProfilers;", "modifier": "private", "type": "StudioProfilers", "declarator": "myProfilers", "var_name": "myProfilers"}], "file": "profilers/testSrc/com/android/tools/profilers/memory/MemoryUsageTest.java"}, "test_case": {"identifier": "testNewPipelineGetData", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testNewPipelineGetData() {\n    MemoryUsage usage = new MemoryUsage(myProfilers);\n\n    RangedContinuousSeries rangedSeries = usage.getTotalMemorySeries();\n    Range range = rangedSeries.getXRange();\n\n    // Request full range\n    range.set(0, TimeUnit.SECONDS.toMicros(100));\n    List<SeriesData<Long>> series = rangedSeries.getSeries();\n    Truth.assertThat(series.size()).isEqualTo(10);\n    for (int i = 0; i < series.size(); i++) {\n      Truth.assertThat(series.get(i).value).isEqualTo(i * 10);\n    }\n\n    // Request negative to mid range\n    range.set(TimeUnit.SECONDS.toMicros(-50), TimeUnit.SECONDS.toMicros(45));\n    series = rangedSeries.getSeries();\n    Truth.assertThat(series.size()).isEqualTo(6);\n    for (int i = 0; i < series.size(); i++) {\n      Truth.assertThat(series.get(i).value).isEqualTo(i * 10);\n    }\n\n    // Request mid to high range\n    range.set(TimeUnit.SECONDS.toMicros(45), TimeUnit.SECONDS.toMicros(200));\n    series = rangedSeries.getSeries();\n    Truth.assertThat(series.size()).isEqualTo(6);\n    for (int i = 0; i < series.size(); i++) {\n      Truth.assertThat(series.get(i).value).isEqualTo((i + 4) * 10);\n    }\n  }", "signature": "void testNewPipelineGetData()", "full_signature": "@Test public void testNewPipelineGetData()", "class_method_signature": "MemoryUsageTest.testNewPipelineGetData()", "testcase": true, "constructor": false, "invocations": ["getTotalMemorySeries", "getXRange", "set", "toMicros", "getSeries", "isEqualTo", "assertThat", "size", "size", "isEqualTo", "assertThat", "get", "set", "toMicros", "toMicros", "getSeries", "isEqualTo", "assertThat", "size", "size", "isEqualTo", "assertThat", "get", "set", "toMicros", "toMicros", "getSeries", "isEqualTo", "assertThat", "size", "size", "isEqualTo", "assertThat", "get"]}, "focal_class": {"identifier": "MemoryUsage", "superclass": "extends LineChartModel", "interfaces": "", "fields": [{"original_string": "@NotNull private final Range myMemoryRange;", "modifier": "@NotNull private final", "type": "Range", "declarator": "myMemoryRange", "var_name": "myMemoryRange"}, {"original_string": "@NotNull private final RangedContinuousSeries myTotalMemorySeries;", "modifier": "@NotNull private final", "type": "RangedContinuousSeries", "declarator": "myTotalMemorySeries", "var_name": "myTotalMemorySeries"}], "methods": [{"identifier": "MemoryUsage", "parameters": "(@NotNull StudioProfilers profilers)", "modifiers": "public", "return": "", "signature": " MemoryUsage(@NotNull StudioProfilers profilers)", "full_signature": "public  MemoryUsage(@NotNull StudioProfilers profilers)", "class_method_signature": "MemoryUsage.MemoryUsage(@NotNull StudioProfilers profilers)", "testcase": false, "constructor": true}, {"identifier": "createLegacyRangedSeries", "parameters": "(@NotNull StudioProfilers profilers,\n                                                            @NotNull String name,\n                                                            @NotNull Range range,\n                                                            @NotNull Function<MemorySample, Long> getter)", "modifiers": "protected", "return": "RangedContinuousSeries", "signature": "RangedContinuousSeries createLegacyRangedSeries(@NotNull StudioProfilers profilers,\n                                                            @NotNull String name,\n                                                            @NotNull Range range,\n                                                            @NotNull Function<MemorySample, Long> getter)", "full_signature": "protected RangedContinuousSeries createLegacyRangedSeries(@NotNull StudioProfilers profilers,\n                                                            @NotNull String name,\n                                                            @NotNull Range range,\n                                                            @NotNull Function<MemorySample, Long> getter)", "class_method_signature": "MemoryUsage.createLegacyRangedSeries(@NotNull StudioProfilers profilers,\n                                                            @NotNull String name,\n                                                            @NotNull Range range,\n                                                            @NotNull Function<MemorySample, Long> getter)", "testcase": false, "constructor": false}, {"identifier": "createRangedSeries", "parameters": "(@NotNull StudioProfilers profilers,\n                                                      @NotNull String name,\n                                                      @NotNull Range range,\n                                                      int groupId,\n                                                      Function<List<Common.Event>, List<SeriesData<Long>>> dataExtractor)", "modifiers": "protected", "return": "RangedContinuousSeries", "signature": "RangedContinuousSeries createRangedSeries(@NotNull StudioProfilers profilers,\n                                                      @NotNull String name,\n                                                      @NotNull Range range,\n                                                      int groupId,\n                                                      Function<List<Common.Event>, List<SeriesData<Long>>> dataExtractor)", "full_signature": "protected RangedContinuousSeries createRangedSeries(@NotNull StudioProfilers profilers,\n                                                      @NotNull String name,\n                                                      @NotNull Range range,\n                                                      int groupId,\n                                                      Function<List<Common.Event>, List<SeriesData<Long>>> dataExtractor)", "class_method_signature": "MemoryUsage.createRangedSeries(@NotNull StudioProfilers profilers,\n                                                      @NotNull String name,\n                                                      @NotNull Range range,\n                                                      int groupId,\n                                                      Function<List<Common.Event>, List<SeriesData<Long>>> dataExtractor)", "testcase": false, "constructor": false}, {"identifier": "getMemoryRange", "parameters": "()", "modifiers": "@NotNull public", "return": "Range", "signature": "Range getMemoryRange()", "full_signature": "@NotNull public Range getMemoryRange()", "class_method_signature": "MemoryUsage.getMemoryRange()", "testcase": false, "constructor": false}, {"identifier": "getTotalMemorySeries", "parameters": "()", "modifiers": "@NotNull public", "return": "RangedContinuousSeries", "signature": "RangedContinuousSeries getTotalMemorySeries()", "full_signature": "@NotNull public RangedContinuousSeries getTotalMemorySeries()", "class_method_signature": "MemoryUsage.getTotalMemorySeries()", "testcase": false, "constructor": false}, {"identifier": "getTotalSeriesLabel", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getTotalSeriesLabel()", "full_signature": "protected String getTotalSeriesLabel()", "class_method_signature": "MemoryUsage.getTotalSeriesLabel()", "testcase": false, "constructor": false}], "file": "profilers/src/com/android/tools/profilers/memory/MemoryUsage.java"}, "focal_method": {"identifier": "getTotalMemorySeries", "parameters": "()", "modifiers": "@NotNull public", "return": "RangedContinuousSeries", "body": "@NotNull\n  public RangedContinuousSeries getTotalMemorySeries() {\n    return myTotalMemorySeries;\n  }", "signature": "RangedContinuousSeries getTotalMemorySeries()", "full_signature": "@NotNull public RangedContinuousSeries getTotalMemorySeries()", "class_method_signature": "MemoryUsage.getTotalMemorySeries()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}