{"test_class": {"identifier": "CaptureObjectLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CaptureObjectLoader myLoader = null;", "modifier": "private", "type": "CaptureObjectLoader", "declarator": "myLoader = null", "var_name": "myLoader"}], "file": "profilers/testSrc/com/android/tools/profilers/memory/CaptureObjectLoaderTest.java"}, "test_case": {"identifier": "loadCaptureBeforeStart", "parameters": "()", "modifiers": "@Test(expected = AssertionError.class) public", "return": "void", "body": "@Test(expected = AssertionError.class)\n  public void loadCaptureBeforeStart() throws Exception {\n    TestCaptureObject capture = new TestCaptureObject(new CountDownLatch(1), true, false);\n    myLoader.loadCapture(capture, null, null);\n  }", "signature": "void loadCaptureBeforeStart()", "full_signature": "@Test(expected = AssertionError.class) public void loadCaptureBeforeStart()", "class_method_signature": "CaptureObjectLoaderTest.loadCaptureBeforeStart()", "testcase": true, "constructor": false, "invocations": ["loadCapture"]}, "focal_class": {"identifier": "CaptureObjectLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Nullable private ExecutorService myExecutorService = null;", "modifier": "@Nullable private", "type": "ExecutorService", "declarator": "myExecutorService = null", "var_name": "myExecutorService"}, {"original_string": "@Nullable\n  private ListenableFutureTask<CaptureObject> myOutstandingLoadingTask = null;", "modifier": "@Nullable\n  private", "type": "ListenableFutureTask<CaptureObject>", "declarator": "myOutstandingLoadingTask = null", "var_name": "myOutstandingLoadingTask"}], "methods": [{"identifier": "loadCapture", "parameters": "(@NotNull CaptureObject captureObject,\n                                                     @Nullable Range queryRange,\n                                                     @Nullable Executor queryJoiner)", "modifiers": "@NotNull public", "return": "ListenableFuture<CaptureObject>", "signature": "ListenableFuture<CaptureObject> loadCapture(@NotNull CaptureObject captureObject,\n                                                     @Nullable Range queryRange,\n                                                     @Nullable Executor queryJoiner)", "full_signature": "@NotNull public ListenableFuture<CaptureObject> loadCapture(@NotNull CaptureObject captureObject,\n                                                     @Nullable Range queryRange,\n                                                     @Nullable Executor queryJoiner)", "class_method_signature": "CaptureObjectLoader.loadCapture(@NotNull CaptureObject captureObject,\n                                                     @Nullable Range queryRange,\n                                                     @Nullable Executor queryJoiner)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "CaptureObjectLoader.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "CaptureObjectLoader.stop()", "testcase": false, "constructor": false}, {"identifier": "cancelTask", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void cancelTask()", "full_signature": "private void cancelTask()", "class_method_signature": "CaptureObjectLoader.cancelTask()", "testcase": false, "constructor": false}], "file": "profilers/src/com/android/tools/profilers/memory/CaptureObjectLoader.java"}, "focal_method": {"identifier": "loadCapture", "parameters": "(@NotNull CaptureObject captureObject,\n                                                     @Nullable Range queryRange,\n                                                     @Nullable Executor queryJoiner)", "modifiers": "@NotNull public", "return": "ListenableFuture<CaptureObject>", "body": "@NotNull\n  public ListenableFuture<CaptureObject> loadCapture(@NotNull CaptureObject captureObject,\n                                                     @Nullable Range queryRange,\n                                                     @Nullable Executor queryJoiner) {\n    assert myExecutorService != null;\n    cancelTask();\n\n    ListenableFutureTask<CaptureObject> task =\n      ListenableFutureTask.create(() -> captureObject.load(queryRange, queryJoiner) ? captureObject : null);\n    myOutstandingLoadingTask = task;\n\n    Futures.addCallback(task, new FutureCallback<CaptureObject>() {\n      @Override\n      public void onSuccess(@Nullable CaptureObject result) {\n        removeTask();\n      }\n\n      @Override\n      public void onFailure(@NotNull Throwable ignored) {\n        removeTask();\n      }\n\n      private void removeTask() {\n        myOutstandingLoadingTask = null;\n      }\n    }, MoreExecutors.directExecutor());\n\n    myExecutorService.execute(task);\n    return task;\n  }", "signature": "ListenableFuture<CaptureObject> loadCapture(@NotNull CaptureObject captureObject,\n                                                     @Nullable Range queryRange,\n                                                     @Nullable Executor queryJoiner)", "full_signature": "@NotNull public ListenableFuture<CaptureObject> loadCapture(@NotNull CaptureObject captureObject,\n                                                     @Nullable Range queryRange,\n                                                     @Nullable Executor queryJoiner)", "class_method_signature": "CaptureObjectLoader.loadCapture(@NotNull CaptureObject captureObject,\n                                                     @Nullable Range queryRange,\n                                                     @Nullable Executor queryJoiner)", "testcase": false, "constructor": false, "invocations": ["cancelTask", "create", "load", "addCallback", "removeTask", "removeTask", "directExecutor", "execute"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}