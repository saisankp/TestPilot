{"test_class": {"identifier": "BoundsTest", "superclass": "", "interfaces": "", "fields": [], "file": "common/src/test/java/com/platypii/baseline/util/BoundsTest.java"}, "test_case": {"identifier": "expandBoundsOnce", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void expandBoundsOnce() {\n        Bounds bounds = new Bounds();\n        bounds.expandBounds(0, 0);\n\n        assertEquals(0, bounds.x.min, 0.01);\n        assertEquals(0, bounds.x.max, 0.01);\n        assertEquals(0, bounds.y.min, 0.01);\n        assertEquals(0, bounds.y.max, 0.01);\n    }", "signature": "void expandBoundsOnce()", "full_signature": "@Test public void expandBoundsOnce()", "class_method_signature": "BoundsTest.expandBoundsOnce()", "testcase": true, "constructor": false, "invocations": ["expandBounds", "assertEquals", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "Bounds", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TAG = \"Bounds\";", "modifier": "private static final", "type": "String", "declarator": "TAG = \"Bounds\"", "var_name": "TAG"}, {"original_string": "public final Range x = new Range();", "modifier": "public final", "type": "Range", "declarator": "x = new Range()", "var_name": "x"}, {"original_string": "public final Range y = new Range();", "modifier": "public final", "type": "Range", "declarator": "y = new Range()", "var_name": "y"}], "methods": [{"identifier": "set", "parameters": "(@NonNull Bounds copy)", "modifiers": "public", "return": "void", "signature": "void set(@NonNull Bounds copy)", "full_signature": "public void set(@NonNull Bounds copy)", "class_method_signature": "Bounds.set(@NonNull Bounds copy)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(double left, double top, double right, double bottom)", "modifiers": "public", "return": "void", "signature": "void set(double left, double top, double right, double bottom)", "full_signature": "public void set(double left, double top, double right, double bottom)", "class_method_signature": "Bounds.set(double left, double top, double right, double bottom)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reset()", "full_signature": "public void reset()", "class_method_signature": "Bounds.reset()", "testcase": false, "constructor": false}, {"identifier": "expandBounds", "parameters": "(double x0, double y0)", "modifiers": "public", "return": "void", "signature": "void expandBounds(double x0, double y0)", "full_signature": "public void expandBounds(double x0, double y0)", "class_method_signature": "Bounds.expandBounds(double x0, double y0)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@NonNull @Override public", "return": "String", "signature": "String toString()", "full_signature": "@NonNull @Override public String toString()", "class_method_signature": "Bounds.toString()", "testcase": false, "constructor": false}], "file": "common/src/main/java/com/platypii/baseline/util/Bounds.java"}, "focal_method": {"identifier": "expandBounds", "parameters": "(double x0, double y0)", "modifiers": "public", "return": "void", "body": "public void expandBounds(double x0, double y0) {\n        // Make sure it is finite, but NaN will be handled by Range\n        if (!Double.isInfinite(x0)) {\n            x.expand(x0);\n        }\n        if (!Double.isInfinite(y0)) {\n            y.expand(y0);\n        }\n    }", "signature": "void expandBounds(double x0, double y0)", "full_signature": "public void expandBounds(double x0, double y0)", "class_method_signature": "Bounds.expandBounds(double x0, double y0)", "testcase": false, "constructor": false, "invocations": ["isInfinite", "expand", "isInfinite", "expand"]}, "repository": {"repo_id": 4671935, "url": "https://github.com/platypii/BASElineFlightComputer", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 18, "size": 6949, "license": "licensed"}}