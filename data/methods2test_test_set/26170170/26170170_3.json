{"test_class": {"identifier": "GuestServiceTest", "superclass": "extends AbstractBasePersistenceTest", "interfaces": "", "fields": [{"original_string": "private GuestService guestService;", "modifier": "private", "type": "GuestService", "declarator": "guestService", "var_name": "guestService"}, {"original_string": "private static final Long WELL_KNOWN_ID = 9999L;", "modifier": "private static final", "type": "Long", "declarator": "WELL_KNOWN_ID = 9999L", "var_name": "WELL_KNOWN_ID"}], "file": "guest/src/test/java/org/koenighotze/jee7hotel/guest/business/GuestServiceTest.java"}, "test_case": {"identifier": "finding_all_guests_does_not_return_null", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void finding_all_guests_does_not_return_null() {\n        assertThat(guestService.getAllGuests()).isNotNull();\n    }", "signature": "void finding_all_guests_does_not_return_null()", "full_signature": "@Test public void finding_all_guests_does_not_return_null()", "class_method_signature": "GuestServiceTest.finding_all_guests_does_not_return_null()", "testcase": true, "constructor": false, "invocations": ["isNotNull", "assertThat", "getAllGuests"]}, "focal_class": {"identifier": "GuestService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(GuestService.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(GuestService.class.getName())", "var_name": "LOGGER"}, {"original_string": "@PersistenceContext\n    private EntityManager em;", "modifier": "@PersistenceContext\n    private", "type": "EntityManager", "declarator": "em", "var_name": "em"}, {"original_string": "private Event<Guest> guestEvents;", "modifier": "private", "type": "Event<Guest>", "declarator": "guestEvents", "var_name": "guestEvents"}], "methods": [{"identifier": "GuestService", "parameters": "()", "modifiers": "public", "return": "", "signature": " GuestService()", "full_signature": "public  GuestService()", "class_method_signature": "GuestService.GuestService()", "testcase": false, "constructor": true}, {"identifier": "GuestService", "parameters": "(@Background Event<Guest> guestEvents)", "modifiers": "@Inject public", "return": "", "signature": " GuestService(@Background Event<Guest> guestEvents)", "full_signature": "@Inject public  GuestService(@Background Event<Guest> guestEvents)", "class_method_signature": "GuestService.GuestService(@Background Event<Guest> guestEvents)", "testcase": false, "constructor": true}, {"identifier": "setEntityManager", "parameters": "(EntityManager em)", "modifiers": "public", "return": "void", "signature": "void setEntityManager(EntityManager em)", "full_signature": "public void setEntityManager(EntityManager em)", "class_method_signature": "GuestService.setEntityManager(EntityManager em)", "testcase": false, "constructor": false}, {"identifier": "saveGuest", "parameters": "(Guest guest)", "modifiers": "public", "return": "void", "signature": "void saveGuest(Guest guest)", "full_signature": "public void saveGuest(Guest guest)", "class_method_signature": "GuestService.saveGuest(Guest guest)", "testcase": false, "constructor": false}, {"identifier": "findSingleGuestById", "parameters": "(@PathParam(\"guestId\") Long guestId)", "modifiers": "public", "return": "Guest", "signature": "Guest findSingleGuestById(@PathParam(\"guestId\") Long guestId)", "full_signature": "public Guest findSingleGuestById(@PathParam(\"guestId\") Long guestId)", "class_method_signature": "GuestService.findSingleGuestById(@PathParam(\"guestId\") Long guestId)", "testcase": false, "constructor": false}, {"identifier": "getAllGuests", "parameters": "()", "modifiers": "public", "return": "List<Guest>", "signature": "List<Guest> getAllGuests()", "full_signature": "public List<Guest> getAllGuests()", "class_method_signature": "GuestService.getAllGuests()", "testcase": false, "constructor": false}, {"identifier": "findById", "parameters": "(@PathParam(\"guestId\") Long guestId)", "modifiers": "public", "return": "Optional<Guest>", "signature": "Optional<Guest> findById(@PathParam(\"guestId\") Long guestId)", "full_signature": "public Optional<Guest> findById(@PathParam(\"guestId\") Long guestId)", "class_method_signature": "GuestService.findById(@PathParam(\"guestId\") Long guestId)", "testcase": false, "constructor": false}, {"identifier": "updateGuestDetails", "parameters": "(Guest guest)", "modifiers": "public", "return": "Optional<Guest>", "signature": "Optional<Guest> updateGuestDetails(Guest guest)", "full_signature": "public Optional<Guest> updateGuestDetails(Guest guest)", "class_method_signature": "GuestService.updateGuestDetails(Guest guest)", "testcase": false, "constructor": false}, {"identifier": "findByPublicId", "parameters": "(String publicId)", "modifiers": "public", "return": "Optional<Guest>", "signature": "Optional<Guest> findByPublicId(String publicId)", "full_signature": "public Optional<Guest> findByPublicId(String publicId)", "class_method_signature": "GuestService.findByPublicId(String publicId)", "testcase": false, "constructor": false}, {"identifier": "deleteGuest", "parameters": "(@NotNull String publicId)", "modifiers": "public", "return": "boolean", "signature": "boolean deleteGuest(@NotNull String publicId)", "full_signature": "public boolean deleteGuest(@NotNull String publicId)", "class_method_signature": "GuestService.deleteGuest(@NotNull String publicId)", "testcase": false, "constructor": false}], "file": "guest/src/main/java/org/koenighotze/jee7hotel/guest/business/GuestService.java"}, "focal_method": {"identifier": "getAllGuests", "parameters": "()", "modifiers": "public", "return": "List<Guest>", "body": "public List<Guest> getAllGuests() {\n        CriteriaQuery<Guest> cq = this.em.getCriteriaBuilder().createQuery(Guest.class);\n        cq.select(cq.from(Guest.class));\n        return this.em.createQuery(cq).getResultList();\n    }", "signature": "List<Guest> getAllGuests()", "full_signature": "public List<Guest> getAllGuests()", "class_method_signature": "GuestService.getAllGuests()", "testcase": false, "constructor": false, "invocations": ["createQuery", "getCriteriaBuilder", "select", "from", "getResultList", "createQuery"]}, "repository": {"repo_id": 26170170, "url": "https://github.com/koenighotze/Hotel-Reservation-Tool", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 1659, "license": "licensed"}}