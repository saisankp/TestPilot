{"test_class": {"identifier": "LoggingStatisticCollectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(LoggingStatisticCollector.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(LoggingStatisticCollector.class)", "var_name": "logger"}], "file": "projects/copper-coreengine/src/test/java/org/copperengine/core/monitoring/LoggingStatisticCollectorTest.java"}, "test_case": {"identifier": "testPrint", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n    public final void testPrint() {\n        LoggingStatisticCollector collector = new LoggingStatisticCollector();\n        collector.submit(\"insertIntoA\", 100, 20, TimeUnit.MILLISECONDS);\n        collector.submit(\"insertIntoA\", 101, 21, TimeUnit.MILLISECONDS);\n        collector.submit(\"insertIntoA\", 102, 22, TimeUnit.MILLISECONDS);\n        collector.submit(\"insertIntoB45\", 102, 0, TimeUnit.MILLISECONDS);\n\n        String x = collector.print();\n        logger.debug(x);\n    }", "signature": "void testPrint()", "full_signature": "@Test public final void testPrint()", "class_method_signature": "LoggingStatisticCollectorTest.testPrint()", "testcase": true, "constructor": false, "invocations": ["submit", "submit", "submit", "submit", "print", "debug"]}, "focal_class": {"identifier": "LoggingStatisticCollector", "superclass": "", "interfaces": "implements RuntimeStatisticsCollector, StatisticsCollectorMXBean", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(LoggingStatisticCollector.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(LoggingStatisticCollector.class)", "var_name": "logger"}, {"original_string": "private static final Logger statLogger = LoggerFactory.getLogger(\"stat\");", "modifier": "private static final", "type": "Logger", "declarator": "statLogger = LoggerFactory.getLogger(\"stat\")", "var_name": "statLogger"}, {"original_string": "private Filter dataFilter = null;", "modifier": "private", "type": "Filter", "declarator": "dataFilter = null", "var_name": "dataFilter"}, {"original_string": "private int loggingIntervalSec = 15;", "modifier": "private", "type": "int", "declarator": "loggingIntervalSec = 15", "var_name": "loggingIntervalSec"}, {"original_string": "private boolean resetAfterLogging = false;", "modifier": "private", "type": "boolean", "declarator": "resetAfterLogging = false", "var_name": "resetAfterLogging"}, {"original_string": "private Thread thread;", "modifier": "private", "type": "Thread", "declarator": "thread", "var_name": "thread"}, {"original_string": "private boolean shutdown = false;", "modifier": "private", "type": "boolean", "declarator": "shutdown = false", "var_name": "shutdown"}, {"original_string": "private volatile Map<String, StatSet> map = new HashMap<String, StatSet>();", "modifier": "private volatile", "type": "Map<String, StatSet>", "declarator": "map = new HashMap<String, StatSet>()", "var_name": "map"}, {"original_string": "private final Object mutex = new Object();", "modifier": "private final", "type": "Object", "declarator": "mutex = new Object()", "var_name": "mutex"}], "methods": [{"identifier": "setLoggingIntervalSec", "parameters": "(int loggingIntervalSec)", "modifiers": "public", "return": "void", "signature": "void setLoggingIntervalSec(int loggingIntervalSec)", "full_signature": "public void setLoggingIntervalSec(int loggingIntervalSec)", "class_method_signature": "LoggingStatisticCollector.setLoggingIntervalSec(int loggingIntervalSec)", "testcase": false, "constructor": false}, {"identifier": "setResetAfterLogging", "parameters": "(boolean resetAfterLogging)", "modifiers": "public", "return": "void", "signature": "void setResetAfterLogging(boolean resetAfterLogging)", "full_signature": "public void setResetAfterLogging(boolean resetAfterLogging)", "class_method_signature": "LoggingStatisticCollector.setResetAfterLogging(boolean resetAfterLogging)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void start()", "full_signature": "public synchronized void start()", "class_method_signature": "LoggingStatisticCollector.start()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void shutdown()", "full_signature": "public synchronized void shutdown()", "class_method_signature": "LoggingStatisticCollector.shutdown()", "testcase": false, "constructor": false}, {"identifier": "submit", "parameters": "(String measurePointId, int elementCount, long elapsedTime, TimeUnit timeUnit)", "modifiers": "@Override public", "return": "void", "signature": "void submit(String measurePointId, int elementCount, long elapsedTime, TimeUnit timeUnit)", "full_signature": "@Override public void submit(String measurePointId, int elementCount, long elapsedTime, TimeUnit timeUnit)", "class_method_signature": "LoggingStatisticCollector.submit(String measurePointId, int elementCount, long elapsedTime, TimeUnit timeUnit)", "testcase": false, "constructor": false}, {"identifier": "print", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String print()", "full_signature": "public String print()", "class_method_signature": "LoggingStatisticCollector.print()", "testcase": false, "constructor": false}, {"identifier": "print", "parameters": "(String mpId)", "modifiers": "public", "return": "String", "signature": "String print(String mpId)", "full_signature": "public String print(String mpId)", "class_method_signature": "LoggingStatisticCollector.print(String mpId)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void log()", "full_signature": "private void log()", "class_method_signature": "LoggingStatisticCollector.log()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(StatSet ss)", "modifiers": "private", "return": "String", "signature": "String toString(StatSet ss)", "full_signature": "private String toString(StatSet ss)", "class_method_signature": "LoggingStatisticCollector.toString(StatSet ss)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reset()", "full_signature": "public void reset()", "class_method_signature": "LoggingStatisticCollector.reset()", "testcase": false, "constructor": false}, {"identifier": "queryAll", "parameters": "()", "modifiers": "@Override public", "return": "List<MeasurePointData>", "signature": "List<MeasurePointData> queryAll()", "full_signature": "@Override public List<MeasurePointData> queryAll()", "class_method_signature": "LoggingStatisticCollector.queryAll()", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(final StatSet ss, final MeasurePointData measurePointData)", "modifiers": "private", "return": "void", "signature": "void convert(final StatSet ss, final MeasurePointData measurePointData)", "full_signature": "private void convert(final StatSet ss, final MeasurePointData measurePointData)", "class_method_signature": "LoggingStatisticCollector.convert(final StatSet ss, final MeasurePointData measurePointData)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(String measurePointId)", "modifiers": "@Override public", "return": "MeasurePointData", "signature": "MeasurePointData query(String measurePointId)", "full_signature": "@Override public MeasurePointData query(String measurePointId)", "class_method_signature": "LoggingStatisticCollector.query(String measurePointId)", "testcase": false, "constructor": false}, {"identifier": "getDataFilter", "parameters": "()", "modifiers": "public", "return": "Filter", "signature": "Filter getDataFilter()", "full_signature": "public Filter getDataFilter()", "class_method_signature": "LoggingStatisticCollector.getDataFilter()", "testcase": false, "constructor": false}, {"identifier": "setDataFilter", "parameters": "(Filter dataFilter)", "modifiers": "public", "return": "void", "signature": "void setDataFilter(Filter dataFilter)", "full_signature": "public void setDataFilter(Filter dataFilter)", "class_method_signature": "LoggingStatisticCollector.setDataFilter(Filter dataFilter)", "testcase": false, "constructor": false}], "file": "projects/copper-coreengine/src/main/java/org/copperengine/core/monitoring/LoggingStatisticCollector.java"}, "focal_method": {"identifier": "print", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String print() {\n        final Map<String, StatSet> localMap = map;\n        final StringBuilder sb = new StringBuilder(1024);\n        final List<StatSet> list = new ArrayList<LoggingStatisticCollector.StatSet>(localMap.values());\n        Collections.sort(list, new Comparator<StatSet>() {\n            @Override\n            public int compare(StatSet o1, StatSet o2) {\n                return o1.mpId.compareToIgnoreCase(o2.mpId);\n            }\n        });\n        for (StatSet ss : list) {\n            sb.append(toString(ss));\n            sb.append(\"\\n\");\n        }\n        if (sb.length() > 0) {\n            sb.deleteCharAt(sb.length() - 1);\n        }\n        return sb.toString();\n    }", "signature": "String print()", "full_signature": "public String print()", "class_method_signature": "LoggingStatisticCollector.print()", "testcase": false, "constructor": false, "invocations": ["values", "sort", "compareToIgnoreCase", "append", "toString", "append", "length", "deleteCharAt", "length", "toString"]}, "repository": {"repo_id": 15008570, "url": "https://github.com/copper-engine/copper-engine", "language": "Java", "is_fork": false, "fork_count": 56, "stargazer_count": 169, "size": 122984, "license": "licensed"}}