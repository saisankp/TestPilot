{"test_class": {"identifier": "PropertiesLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String DB_PASSWORD = \"Test Password\";", "modifier": "public static final", "type": "String", "declarator": "DB_PASSWORD = \"Test Password\"", "var_name": "DB_PASSWORD"}, {"original_string": "private final String ENCRYPTED_PASSWORD = encrypt(DB_PASSWORD);", "modifier": "private final", "type": "String", "declarator": "ENCRYPTED_PASSWORD = encrypt(DB_PASSWORD)", "var_name": "ENCRYPTED_PASSWORD"}, {"original_string": "@Mock private CryptoService mockedCryptoService;", "modifier": "@Mock private", "type": "CryptoService", "declarator": "mockedCryptoService", "var_name": "mockedCryptoService"}, {"original_string": "@Rule public TemporaryFolder tempKeyStoreFolder = new TemporaryFolder();", "modifier": "@Rule public", "type": "TemporaryFolder", "declarator": "tempKeyStoreFolder = new TemporaryFolder()", "var_name": "tempKeyStoreFolder"}, {"original_string": "private PropertiesLoader fakeLoader;", "modifier": "private", "type": "PropertiesLoader", "declarator": "fakeLoader", "var_name": "fakeLoader"}], "file": "dbfit-java/core/src/test/java/dbfit/util/PropertiesLoaderTest.java"}, "test_case": {"identifier": "splitKeyValueSettingsLineTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void splitKeyValueSettingsLineTest() {\n        String[] keyval = PropertiesLoader.splitKeyVal(\"password=crap\");\n\n        assertEquals(\"password\", keyval[0]);\n        assertEquals(\"crap\", keyval[1]);\n    }", "signature": "void splitKeyValueSettingsLineTest()", "full_signature": "@Test public void splitKeyValueSettingsLineTest()", "class_method_signature": "PropertiesLoaderTest.splitKeyValueSettingsLineTest()", "testcase": true, "constructor": false, "invocations": ["splitKeyVal", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "PropertiesLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CryptoService crypto;", "modifier": "private", "type": "CryptoService", "declarator": "crypto", "var_name": "crypto"}], "methods": [{"identifier": "PropertiesLoader", "parameters": "(CryptoService cryptoService)", "modifiers": "public", "return": "", "signature": " PropertiesLoader(CryptoService cryptoService)", "full_signature": "public  PropertiesLoader(CryptoService cryptoService)", "class_method_signature": "PropertiesLoader.PropertiesLoader(CryptoService cryptoService)", "testcase": false, "constructor": true}, {"identifier": "PropertiesLoader", "parameters": "()", "modifiers": "public", "return": "", "signature": " PropertiesLoader()", "full_signature": "public  PropertiesLoader()", "class_method_signature": "PropertiesLoader.PropertiesLoader()", "testcase": false, "constructor": true}, {"identifier": "loadFromList", "parameters": "(List<String> lines)", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> loadFromList(List<String> lines)", "full_signature": "public Map<String, String> loadFromList(List<String> lines)", "class_method_signature": "PropertiesLoader.loadFromList(List<String> lines)", "testcase": false, "constructor": false}, {"identifier": "loadFromFile", "parameters": "(String path)", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> loadFromFile(String path)", "full_signature": "public Map<String, String> loadFromFile(String path)", "class_method_signature": "PropertiesLoader.loadFromFile(String path)", "testcase": false, "constructor": false}, {"identifier": "unwrapEncryptedValue", "parameters": "(String encValue)", "modifiers": "public static", "return": "String", "signature": "String unwrapEncryptedValue(String encValue)", "full_signature": "public static String unwrapEncryptedValue(String encValue)", "class_method_signature": "PropertiesLoader.unwrapEncryptedValue(String encValue)", "testcase": false, "constructor": false}, {"identifier": "parseValue", "parameters": "(String value)", "modifiers": "public", "return": "String", "signature": "String parseValue(String value)", "full_signature": "public String parseValue(String value)", "class_method_signature": "PropertiesLoader.parseValue(String value)", "testcase": false, "constructor": false}, {"identifier": "splitKeyVal", "parameters": "(String line)", "modifiers": "public static", "return": "String[]", "signature": "String[] splitKeyVal(String line)", "full_signature": "public static String[] splitKeyVal(String line)", "class_method_signature": "PropertiesLoader.splitKeyVal(String line)", "testcase": false, "constructor": false}, {"identifier": "isIgnorableLine", "parameters": "(String line)", "modifiers": "private", "return": "boolean", "signature": "boolean isIgnorableLine(String line)", "full_signature": "private boolean isIgnorableLine(String line)", "class_method_signature": "PropertiesLoader.isIgnorableLine(String line)", "testcase": false, "constructor": false}, {"identifier": "parseLine", "parameters": "(String line)", "modifiers": "private", "return": "String[]", "signature": "String[] parseLine(String line)", "full_signature": "private String[] parseLine(String line)", "class_method_signature": "PropertiesLoader.parseLine(String line)", "testcase": false, "constructor": false}], "file": "dbfit-java/core/src/main/java/dbfit/util/PropertiesLoader.java"}, "focal_method": {"identifier": "splitKeyVal", "parameters": "(String line)", "modifiers": "public static", "return": "String[]", "body": "public static String[] splitKeyVal(String line) {\n        return line.split(\"=\", 2);\n    }", "signature": "String[] splitKeyVal(String line)", "full_signature": "public static String[] splitKeyVal(String line)", "class_method_signature": "PropertiesLoader.splitKeyVal(String line)", "testcase": false, "constructor": false, "invocations": ["split"]}, "repository": {"repo_id": 7283919, "url": "https://github.com/dbfit/dbfit", "language": "Java", "is_fork": false, "fork_count": 83, "stargazer_count": 181, "size": 6978, "license": "licensed"}}