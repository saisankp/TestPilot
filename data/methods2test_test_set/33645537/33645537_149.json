{"test_class": {"identifier": "FindTheMissingNumberTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FindTheMissingNumber findMissingNumber;", "modifier": "private", "type": "FindTheMissingNumber", "declarator": "findMissingNumber", "var_name": "findMissingNumber"}], "file": "algs/src/test/java/com/github/pedrovgs/problem72/FindTheMissingNumberTest.java"}, "test_case": {"identifier": "shouldNotAcceptNullInstances", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class) public void shouldNotAcceptNullInstances() {\n    findMissingNumber.find(null);\n  }", "signature": "void shouldNotAcceptNullInstances()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void shouldNotAcceptNullInstances()", "class_method_signature": "FindTheMissingNumberTest.shouldNotAcceptNullInstances()", "testcase": true, "constructor": false, "invocations": ["find"]}, "focal_class": {"identifier": "FindTheMissingNumber", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "find", "parameters": "(int[] numbers)", "modifiers": "public", "return": "int", "signature": "int find(int[] numbers)", "full_signature": "public int find(int[] numbers)", "class_method_signature": "FindTheMissingNumber.find(int[] numbers)", "testcase": false, "constructor": false}, {"identifier": "calculateSum", "parameters": "(int[] numbers)", "modifiers": "private", "return": "int", "signature": "int calculateSum(int[] numbers)", "full_signature": "private int calculateSum(int[] numbers)", "class_method_signature": "FindTheMissingNumber.calculateSum(int[] numbers)", "testcase": false, "constructor": false}, {"identifier": "validateInput", "parameters": "(int[] numbers)", "modifiers": "private", "return": "void", "signature": "void validateInput(int[] numbers)", "full_signature": "private void validateInput(int[] numbers)", "class_method_signature": "FindTheMissingNumber.validateInput(int[] numbers)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem72/FindTheMissingNumber.java"}, "focal_method": {"identifier": "find", "parameters": "(int[] numbers)", "modifiers": "public", "return": "int", "body": "public int find(int[] numbers) {\n    validateInput(numbers);\n\n    int length = numbers.length;\n    int idealSum = length * (length + 1) / 2;\n    int sum = calculateSum(numbers);\n\n    int missingNumber = idealSum - sum;\n    return missingNumber;\n  }", "signature": "int find(int[] numbers)", "full_signature": "public int find(int[] numbers)", "class_method_signature": "FindTheMissingNumber.find(int[] numbers)", "testcase": false, "constructor": false, "invocations": ["validateInput", "calculateSum"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}