{"test_class": {"identifier": "HmsGenericUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/hms-util/src/test/java/com/vmware/vrack/hms/common/util/HmsGenericUtilTest.java"}, "test_case": {"identifier": "testMaskPassword", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMaskPassword()\n    {\n        ServerNode node = new ServerNode();\n        node.setNodeID( \"N1\" );\n        node.setIbIpAddress( \"1.2.3.4\" );\n        node.setOsUserName( \"root\" );\n        node.setOsPassword( \"root123\" );\n\n        List<EthernetController> ethernetControllerLst = new ArrayList<EthernetController>();\n        EthernetController ethernetController = new EthernetController();\n        ethernetController.setComponent( ServerComponent.CPU );\n        ComponentIdentifier componentIdentifier = new ComponentIdentifier();\n        componentIdentifier.setDescription( \"test\" );\n        ethernetController.setComponentIdentifier( componentIdentifier );\n        ethernetControllerLst.add( ethernetController );\n\n        node.setEthernetControllerList( ethernetControllerLst );\n\n        ServerNode copy = (ServerNode) HmsGenericUtil.maskPassword( node );\n\n        assertEquals( node.getNodeID(), \"N1\" );\n        assertEquals( node.getNodeID(), copy.getNodeID() );\n        assertEquals( node.getIbIpAddress(), \"1.2.3.4\" );\n        assertEquals( node.getIbIpAddress(), copy.getIbIpAddress() );\n        assertEquals( node.getOsUserName(), \"root\" );\n        assertEquals( node.getOsUserName(), copy.getOsUserName() );\n        assertEquals( node.getOsPassword(), \"root123\" );\n        assertNotEquals( node.getOsPassword(), copy.getOsPassword() );\n        assertEquals( copy.getOsPassword(), \"****\" );\n\n        List<EthernetController> ethernetControllerListOriginal = node.getEthernetControllerList();\n        List<EthernetController> ethernetControllerListCopy = copy.getEthernetControllerList();\n\n        assertEquals( ethernetControllerListOriginal.get( 0 ).getComponent(), ServerComponent.CPU );\n        assertEquals( ethernetControllerListOriginal.get( 0 ).getComponent(),\n                      ethernetControllerListCopy.get( 0 ).getComponent() );\n\n        assertEquals( ethernetControllerListOriginal.get( 0 ).getComponentIdentifier().getDescription(), \"test\" );\n        assertEquals( ethernetControllerListOriginal.get( 0 ).getComponentIdentifier().getDescription(),\n                      ethernetControllerListCopy.get( 0 ).getComponentIdentifier().getDescription() );\n    }", "signature": "void testMaskPassword()", "full_signature": "@Test public void testMaskPassword()", "class_method_signature": "HmsGenericUtilTest.testMaskPassword()", "testcase": true, "constructor": false, "invocations": ["setNodeID", "setIbIpAddress", "setOsUserName", "setOsPassword", "setComponent", "setDescription", "setComponentIdentifier", "add", "setEthernetControllerList", "maskPassword", "assertEquals", "getNodeID", "assertEquals", "getNodeID", "getNodeID", "assertEquals", "getIbIpAddress", "assertEquals", "getIbIpAddress", "getIbIpAddress", "assertEquals", "getOsUserName", "assertEquals", "getOsUserName", "getOsUserName", "assertEquals", "getOsPassword", "assertNotEquals", "getOsPassword", "getOsPassword", "assertEquals", "getOsPassword", "getEthernetControllerList", "getEthernetControllerList", "assertEquals", "getComponent", "get", "assertEquals", "getComponent", "get", "getComponent", "get", "assertEquals", "getDescription", "getComponentIdentifier", "get", "assertEquals", "getDescription", "getComponentIdentifier", "get", "getDescription", "getComponentIdentifier", "get"]}, "focal_class": {"identifier": "HmsGenericUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String MASK_DATA = \"****\";", "modifier": "private static final", "type": "String", "declarator": "MASK_DATA = \"****\"", "var_name": "MASK_DATA"}, {"original_string": "private static Logger logger = LoggerFactory.getLogger( HmsGenericUtil.class );", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger( HmsGenericUtil.class )", "var_name": "logger"}], "methods": [{"identifier": "maskPassword", "parameters": "( Object obj )", "modifiers": "public static", "return": "Object", "signature": "Object maskPassword( Object obj )", "full_signature": "public static Object maskPassword( Object obj )", "class_method_signature": "HmsGenericUtil.maskPassword( Object obj )", "testcase": false, "constructor": false}, {"identifier": "getBuildVersion", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getBuildVersion()", "full_signature": "public static String getBuildVersion()", "class_method_signature": "HmsGenericUtil.getBuildVersion()", "testcase": false, "constructor": false}, {"identifier": "getBaseResponse", "parameters": "( final Status status, final String errorMessage )", "modifiers": "public static", "return": "BaseResponse", "signature": "BaseResponse getBaseResponse( final Status status, final String errorMessage )", "full_signature": "public static BaseResponse getBaseResponse( final Status status, final String errorMessage )", "class_method_signature": "HmsGenericUtil.getBaseResponse( final Status status, final String errorMessage )", "testcase": false, "constructor": false}, {"identifier": "getBaseResponse", "parameters": "( final int statusCode, final String statusMessage,\n                                                final String errorMessage )", "modifiers": "public static", "return": "BaseResponse", "signature": "BaseResponse getBaseResponse( final int statusCode, final String statusMessage,\n                                                final String errorMessage )", "full_signature": "public static BaseResponse getBaseResponse( final int statusCode, final String statusMessage,\n                                                final String errorMessage )", "class_method_signature": "HmsGenericUtil.getBaseResponse( final int statusCode, final String statusMessage,\n                                                final String errorMessage )", "testcase": false, "constructor": false}, {"identifier": "sleepThread", "parameters": "( boolean isTaskCompleted, long sleepInterval )", "modifiers": "public static", "return": "void", "signature": "void sleepThread( boolean isTaskCompleted, long sleepInterval )", "full_signature": "public static void sleepThread( boolean isTaskCompleted, long sleepInterval )", "class_method_signature": "HmsGenericUtil.sleepThread( boolean isTaskCompleted, long sleepInterval )", "testcase": false, "constructor": false}, {"identifier": "parseJson", "parameters": "( String input )", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> parseJson( String input )", "full_signature": "public static Map<String, Object> parseJson( String input )", "class_method_signature": "HmsGenericUtil.parseJson( String input )", "testcase": false, "constructor": false}, {"identifier": "parseStringAsValueType", "parameters": "( final String content, Class<T> valueType )", "modifiers": "public static", "return": "T", "signature": "T parseStringAsValueType( final String content, Class<T> valueType )", "full_signature": "public static T parseStringAsValueType( final String content, Class<T> valueType )", "class_method_signature": "HmsGenericUtil.parseStringAsValueType( final String content, Class<T> valueType )", "testcase": false, "constructor": false}, {"identifier": "parseStringAsTypeReference", "parameters": "( final String content, TypeReference<T> typeRef )", "modifiers": "public static", "return": "T", "signature": "T parseStringAsTypeReference( final String content, TypeReference<T> typeRef )", "full_signature": "public static T parseStringAsTypeReference( final String content, TypeReference<T> typeRef )", "class_method_signature": "HmsGenericUtil.parseStringAsTypeReference( final String content, TypeReference<T> typeRef )", "testcase": false, "constructor": false}, {"identifier": "getPayload", "parameters": "( T object )", "modifiers": "public static", "return": "String", "signature": "String getPayload( T object )", "full_signature": "public static String getPayload( T object )", "class_method_signature": "HmsGenericUtil.getPayload( T object )", "testcase": false, "constructor": false}, {"identifier": "isHostReachable", "parameters": "( String ipAddress )", "modifiers": "public static", "return": "boolean", "signature": "boolean isHostReachable( String ipAddress )", "full_signature": "public static boolean isHostReachable( String ipAddress )", "class_method_signature": "HmsGenericUtil.isHostReachable( String ipAddress )", "testcase": false, "constructor": false}, {"identifier": "deleteLatestInventoryBackup", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void deleteLatestInventoryBackup()", "full_signature": "public static void deleteLatestInventoryBackup()", "class_method_signature": "HmsGenericUtil.deleteLatestInventoryBackup()", "testcase": false, "constructor": false}], "file": "modules/hms-util/src/main/java/com/vmware/vrack/hms/common/util/HmsGenericUtil.java"}, "focal_method": {"identifier": "maskPassword", "parameters": "( Object obj )", "modifiers": "public static", "return": "Object", "body": "public static Object maskPassword( Object obj )\n    {\n        if ( obj != null )\n        {\n            if ( obj instanceof HmsNode )\n            {\n                ServerNode copy = new ServerNode();\n                BeanUtils.copyProperties( obj, copy );\n                copy.setOsPassword( MASK_DATA );\n                copy.setManagementUserPassword( MASK_DATA );\n                return copy;\n            }\n            else if ( obj instanceof SwitchNode )\n            {\n                SwitchNode copy = new SwitchNode();\n                BeanUtils.copyProperties( obj, copy );\n                copy.setPassword( MASK_DATA );\n                return copy;\n            }\n        }\n        else\n        {\n            logger.warn( \"Null input provided\" );\n        }\n        return null;\n    }", "signature": "Object maskPassword( Object obj )", "full_signature": "public static Object maskPassword( Object obj )", "class_method_signature": "HmsGenericUtil.maskPassword( Object obj )", "testcase": false, "constructor": false, "invocations": ["copyProperties", "setOsPassword", "setManagementUserPassword", "copyProperties", "setPassword", "warn"]}, "repository": {"repo_id": 61566208, "url": "https://github.com/vmware-archive/OHMS", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 16092, "license": "licensed"}}