{"test_class": {"identifier": "HttpEntityWrapperTest", "superclass": "", "interfaces": "", "fields": [], "file": "volleyer/src/test/java/com/navercorp/volleyextensions/volleyer/multipart/HttpEntityWrapperTest.java"}, "test_case": {"identifier": "shouldCallWriteMethod", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldCallWriteMethod() throws IOException {\n\t\t// Given\n\t\tWritable writable = mock(Writable.class);\n\t\tHttpEntityWrapper wrapper = given(writable);\n\t\tOutputStream out = mock(OutputStream.class);\n\t\t// When\n\t\twrapper.writeTo(out);\n\t\t// Then\n\t\tverify(writable).write(out);\n\t}", "signature": "void shouldCallWriteMethod()", "full_signature": "@Test public void shouldCallWriteMethod()", "class_method_signature": "HttpEntityWrapperTest.shouldCallWriteMethod()", "testcase": true, "constructor": false, "invocations": ["mock", "given", "mock", "writeTo", "write", "verify"]}, "focal_class": {"identifier": "HttpEntityWrapper", "superclass": "", "interfaces": "implements HttpEntity", "fields": [{"original_string": "private static final int UNKNOWN_LENGTH = -1;", "modifier": "private static final", "type": "int", "declarator": "UNKNOWN_LENGTH = -1", "var_name": "UNKNOWN_LENGTH"}, {"original_string": "private Writable writable;", "modifier": "private", "type": "Writable", "declarator": "writable", "var_name": "writable"}], "methods": [{"identifier": "HttpEntityWrapper", "parameters": "(Writable writable)", "modifiers": "public", "return": "", "signature": " HttpEntityWrapper(Writable writable)", "full_signature": "public  HttpEntityWrapper(Writable writable)", "class_method_signature": "HttpEntityWrapper.HttpEntityWrapper(Writable writable)", "testcase": false, "constructor": true}, {"identifier": "isRepeatable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRepeatable()", "full_signature": "@Override public boolean isRepeatable()", "class_method_signature": "HttpEntityWrapper.isRepeatable()", "testcase": false, "constructor": false}, {"identifier": "isChunked", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isChunked()", "full_signature": "@Override public boolean isChunked()", "class_method_signature": "HttpEntityWrapper.isChunked()", "testcase": false, "constructor": false}, {"identifier": "getContentLength", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getContentLength()", "full_signature": "@Override public long getContentLength()", "class_method_signature": "HttpEntityWrapper.getContentLength()", "testcase": false, "constructor": false}, {"identifier": "getContentType", "parameters": "()", "modifiers": "@Override public", "return": "Header", "signature": "Header getContentType()", "full_signature": "@Override public Header getContentType()", "class_method_signature": "HttpEntityWrapper.getContentType()", "testcase": false, "constructor": false}, {"identifier": "getContentEncoding", "parameters": "()", "modifiers": "@Override public", "return": "Header", "signature": "Header getContentEncoding()", "full_signature": "@Override public Header getContentEncoding()", "class_method_signature": "HttpEntityWrapper.getContentEncoding()", "testcase": false, "constructor": false}, {"identifier": "getContent", "parameters": "()", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getContent()", "full_signature": "@Override public InputStream getContent()", "class_method_signature": "HttpEntityWrapper.getContent()", "testcase": false, "constructor": false}, {"identifier": "writeTo", "parameters": "(OutputStream outstream)", "modifiers": "@Override public", "return": "void", "signature": "void writeTo(OutputStream outstream)", "full_signature": "@Override public void writeTo(OutputStream outstream)", "class_method_signature": "HttpEntityWrapper.writeTo(OutputStream outstream)", "testcase": false, "constructor": false}, {"identifier": "isStreaming", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isStreaming()", "full_signature": "@Override public boolean isStreaming()", "class_method_signature": "HttpEntityWrapper.isStreaming()", "testcase": false, "constructor": false}, {"identifier": "consumeContent", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void consumeContent()", "full_signature": "@Override public void consumeContent()", "class_method_signature": "HttpEntityWrapper.consumeContent()", "testcase": false, "constructor": false}], "file": "volleyer/src/main/java/com/navercorp/volleyextensions/volleyer/multipart/HttpEntityWrapper.java"}, "focal_method": {"identifier": "writeTo", "parameters": "(OutputStream outstream)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void writeTo(OutputStream outstream) throws IOException {\n\t\twritable.write(outstream);\n\t}", "signature": "void writeTo(OutputStream outstream)", "full_signature": "@Override public void writeTo(OutputStream outstream)", "class_method_signature": "HttpEntityWrapper.writeTo(OutputStream outstream)", "testcase": false, "constructor": false, "invocations": ["write"]}, "repository": {"repo_id": 17432029, "url": "https://github.com/naver/volley-extensions", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 138, "size": 666, "license": "licensed"}}