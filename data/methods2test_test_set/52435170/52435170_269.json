{"test_class": {"identifier": "Neo4JDbFeatureExecutorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public TemporaryFolder tmpFolder = new TemporaryFolder();", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "tmpFolder = new TemporaryFolder()", "var_name": "tmpFolder"}, {"original_string": "@Mock\n    private FeatureResolver featureResolver;", "modifier": "@Mock\n    private", "type": "FeatureResolver", "declarator": "featureResolver", "var_name": "featureResolver"}, {"original_string": "@Mock\n    private Connection connection;", "modifier": "@Mock\n    private", "type": "Connection", "declarator": "connection", "var_name": "connection"}, {"original_string": "@Mock\n    private PreparedStatement ps;", "modifier": "@Mock\n    private", "type": "PreparedStatement", "declarator": "ps", "var_name": "ps"}, {"original_string": "@Mock\n    private ResultSet rs;", "modifier": "@Mock\n    private", "type": "ResultSet", "declarator": "rs", "var_name": "rs"}, {"original_string": "@Mock\n    private CleanupStrategy cleanupStrategy;", "modifier": "@Mock\n    private", "type": "CleanupStrategy", "declarator": "cleanupStrategy", "var_name": "cleanupStrategy"}, {"original_string": "@Mock\n    private DataSeedStrategy dataSeedStrategy;", "modifier": "@Mock\n    private", "type": "DataSeedStrategy", "declarator": "dataSeedStrategy", "var_name": "dataSeedStrategy"}, {"original_string": "@Mock\n    private CleanupStrategyExecutor<Connection, Graph<Node, Edge>> cleanupStrategyExecutor;", "modifier": "@Mock\n    private", "type": "CleanupStrategyExecutor<Connection, Graph<Node, Edge>>", "declarator": "cleanupStrategyExecutor", "var_name": "cleanupStrategyExecutor"}, {"original_string": "@Mock\n    private Neo4JOperation operation;", "modifier": "@Mock\n    private", "type": "Neo4JOperation", "declarator": "operation", "var_name": "operation"}, {"original_string": "@Mock\n    private ExpectedDataSets expectedDataSets;", "modifier": "@Mock\n    private", "type": "ExpectedDataSets", "declarator": "expectedDataSets", "var_name": "expectedDataSets"}, {"original_string": "private Neo4JDbFeatureExecutor featureExecutor;", "modifier": "private", "type": "Neo4JDbFeatureExecutor", "declarator": "featureExecutor", "var_name": "featureExecutor"}], "file": "neo4j/src/test/java/eu/drus/jpa/unit/neo4j/Neo4JDbFeatureExecutorTest.java"}, "test_case": {"identifier": "testApplyCustomScriptFeatureExecutionHandlesSQLExceptionsProperly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testApplyCustomScriptFeatureExecutionHandlesSQLExceptionsProperly() throws DbFeatureException, SQLException {\n        // GIVEN\n        when(ps.execute()).thenThrow(new SQLException(\"error\"));\n\n        // WHEN\n        final DbFeature<Connection> feature = featureExecutor.createApplyCustomScriptFeature(Arrays.asList(\"test.script\"));\n        assertThat(feature, notNullValue());\n\n        try {\n            feature.execute(connection);\n            fail(\"exception expected\");\n        } catch (final DbFeatureException e) {\n            // expected\n        }\n\n        // THEN\n        verify(connection).prepareStatement(any(String.class));\n        verify(ps).execute();\n        verify(ps).close();\n    }", "signature": "void testApplyCustomScriptFeatureExecutionHandlesSQLExceptionsProperly()", "full_signature": "@Test public void testApplyCustomScriptFeatureExecutionHandlesSQLExceptionsProperly()", "class_method_signature": "Neo4JDbFeatureExecutorTest.testApplyCustomScriptFeatureExecutionHandlesSQLExceptionsProperly()", "testcase": true, "constructor": false, "invocations": ["thenThrow", "when", "execute", "createApplyCustomScriptFeature", "asList", "assertThat", "notNullValue", "execute", "fail", "prepareStatement", "verify", "any", "execute", "verify", "close", "verify"]}, "focal_class": {"identifier": "Neo4JDbFeatureExecutor", "superclass": "extends AbstractDbFeatureExecutor<Graph<Node, Edge>, Connection>", "interfaces": "", "fields": [{"original_string": "private GraphElementFactory graphElementFactory;", "modifier": "private", "type": "GraphElementFactory", "declarator": "graphElementFactory", "var_name": "graphElementFactory"}], "methods": [{"identifier": "Neo4JDbFeatureExecutor", "parameters": "(final FeatureResolver featureResolver, final List<Class<?>> entityClasses)", "modifiers": "protected", "return": "", "signature": " Neo4JDbFeatureExecutor(final FeatureResolver featureResolver, final List<Class<?>> entityClasses)", "full_signature": "protected  Neo4JDbFeatureExecutor(final FeatureResolver featureResolver, final List<Class<?>> entityClasses)", "class_method_signature": "Neo4JDbFeatureExecutor.Neo4JDbFeatureExecutor(final FeatureResolver featureResolver, final List<Class<?>> entityClasses)", "testcase": false, "constructor": true}, {"identifier": "toUri", "parameters": "(final String path)", "modifiers": "private static", "return": "URI", "signature": "URI toUri(final String path)", "full_signature": "private static URI toUri(final String path)", "class_method_signature": "Neo4JDbFeatureExecutor.toUri(final String path)", "testcase": false, "constructor": false}, {"identifier": "loadDataSets", "parameters": "(final List<String> paths)", "modifiers": "@Override protected", "return": "List<Graph<Node, Edge>>", "signature": "List<Graph<Node, Edge>> loadDataSets(final List<String> paths)", "full_signature": "@Override protected List<Graph<Node, Edge>> loadDataSets(final List<String> paths)", "class_method_signature": "Neo4JDbFeatureExecutor.loadDataSets(final List<String> paths)", "testcase": false, "constructor": false}, {"identifier": "createCleanupFeature", "parameters": "(final CleanupStrategy cleanupStrategy,\n            final List<Graph<Node, Edge>> initialDataSets)", "modifiers": "@Override protected", "return": "DbFeature<Connection>", "signature": "DbFeature<Connection> createCleanupFeature(final CleanupStrategy cleanupStrategy,\n            final List<Graph<Node, Edge>> initialDataSets)", "full_signature": "@Override protected DbFeature<Connection> createCleanupFeature(final CleanupStrategy cleanupStrategy,\n            final List<Graph<Node, Edge>> initialDataSets)", "class_method_signature": "Neo4JDbFeatureExecutor.createCleanupFeature(final CleanupStrategy cleanupStrategy,\n            final List<Graph<Node, Edge>> initialDataSets)", "testcase": false, "constructor": false}, {"identifier": "createApplyCustomScriptFeature", "parameters": "(final List<String> scriptPaths)", "modifiers": "@Override protected", "return": "DbFeature<Connection>", "signature": "DbFeature<Connection> createApplyCustomScriptFeature(final List<String> scriptPaths)", "full_signature": "@Override protected DbFeature<Connection> createApplyCustomScriptFeature(final List<String> scriptPaths)", "class_method_signature": "Neo4JDbFeatureExecutor.createApplyCustomScriptFeature(final List<String> scriptPaths)", "testcase": false, "constructor": false}, {"identifier": "createSeedDataFeature", "parameters": "(final DataSeedStrategy dataSeedStrategy,\n            final List<Graph<Node, Edge>> initialDataSets)", "modifiers": "@Override protected", "return": "DbFeature<Connection>", "signature": "DbFeature<Connection> createSeedDataFeature(final DataSeedStrategy dataSeedStrategy,\n            final List<Graph<Node, Edge>> initialDataSets)", "full_signature": "@Override protected DbFeature<Connection> createSeedDataFeature(final DataSeedStrategy dataSeedStrategy,\n            final List<Graph<Node, Edge>> initialDataSets)", "class_method_signature": "Neo4JDbFeatureExecutor.createSeedDataFeature(final DataSeedStrategy dataSeedStrategy,\n            final List<Graph<Node, Edge>> initialDataSets)", "testcase": false, "constructor": false}, {"identifier": "createVerifyDataAfterFeature", "parameters": "(final ExpectedDataSets expectedDataSets)", "modifiers": "@Override protected", "return": "DbFeature<Connection>", "signature": "DbFeature<Connection> createVerifyDataAfterFeature(final ExpectedDataSets expectedDataSets)", "full_signature": "@Override protected DbFeature<Connection> createVerifyDataAfterFeature(final ExpectedDataSets expectedDataSets)", "class_method_signature": "Neo4JDbFeatureExecutor.createVerifyDataAfterFeature(final ExpectedDataSets expectedDataSets)", "testcase": false, "constructor": false}, {"identifier": "mergeGraphs", "parameters": "(final List<Graph<Node, Edge>> graphs)", "modifiers": "private", "return": "Graph<Node, Edge>", "signature": "Graph<Node, Edge> mergeGraphs(final List<Graph<Node, Edge>> graphs)", "full_signature": "private Graph<Node, Edge> mergeGraphs(final List<Graph<Node, Edge>> graphs)", "class_method_signature": "Neo4JDbFeatureExecutor.mergeGraphs(final List<Graph<Node, Edge>> graphs)", "testcase": false, "constructor": false}, {"identifier": "executeScript", "parameters": "(final String script, final Connection connection)", "modifiers": "private", "return": "void", "signature": "void executeScript(final String script, final Connection connection)", "full_signature": "private void executeScript(final String script, final Connection connection)", "class_method_signature": "Neo4JDbFeatureExecutor.executeScript(final String script, final Connection connection)", "testcase": false, "constructor": false}], "file": "neo4j/src/main/java/eu/drus/jpa/unit/neo4j/Neo4JDbFeatureExecutor.java"}, "focal_method": {"identifier": "createApplyCustomScriptFeature", "parameters": "(final List<String> scriptPaths)", "modifiers": "@Override protected", "return": "DbFeature<Connection>", "body": "@Override\n    protected DbFeature<Connection> createApplyCustomScriptFeature(final List<String> scriptPaths) {\n        return (final Connection connection) -> {\n            try {\n                for (final String scriptPath : scriptPaths) {\n                    executeScript(loadScript(scriptPath), connection);\n                }\n                connection.commit();\n            } catch (IOException | URISyntaxException | SQLException e) {\n                throw new DbFeatureException(\"Could not apply custom scripts feature\", e);\n            }\n        };\n    }", "signature": "DbFeature<Connection> createApplyCustomScriptFeature(final List<String> scriptPaths)", "full_signature": "@Override protected DbFeature<Connection> createApplyCustomScriptFeature(final List<String> scriptPaths)", "class_method_signature": "Neo4JDbFeatureExecutor.createApplyCustomScriptFeature(final List<String> scriptPaths)", "testcase": false, "constructor": false, "invocations": ["executeScript", "loadScript", "commit"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}