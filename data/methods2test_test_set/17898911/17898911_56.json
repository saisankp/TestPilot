{"test_class": {"identifier": "SelectorDisplayerTest", "superclass": "extends AbstractDisplayerTest", "interfaces": "", "fields": [], "file": "dashbuilder-client/dashbuilder-renderers/dashbuilder-renderer-default/src/test/java/org/dashbuilder/renderer/client/selector/SelectorDisplayerTest.java"}, "test_case": {"identifier": "testNullNotShown", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNullNotShown() {\n        DisplayerSettings departmentList = DisplayerSettingsFactory.newSelectorSettings()\n                .dataset(EXPENSES)\n                .group(COLUMN_DEPARTMENT)\n                .column(COLUMN_DEPARTMENT)\n                .column(COLUMN_ID, AggregateFunctionType.COUNT)\n                .buildSettings();\n\n        // Insert a null entry into the dataset\n        DataSet expensesDataSet = clientDataSetManager.getDataSet(EXPENSES);\n        int column = expensesDataSet.getColumnIndex(expensesDataSet.getColumnById(COLUMN_DEPARTMENT));\n        expensesDataSet.setValueAt(0, column, null);\n\n        // ... and make sure it's not shown\n        SelectorDisplayer presenter = createSelectorDisplayer(departmentList);\n        SelectorDisplayer.View view = presenter.getView();\n        presenter.draw();\n\n        verify(view, never()).addItem(anyString(), eq((String) null), anyBoolean());\n        verify(view, times(5)).addItem(anyString(), anyString(), eq(false));\n    }", "signature": "void testNullNotShown()", "full_signature": "@Test public void testNullNotShown()", "class_method_signature": "SelectorDisplayerTest.testNullNotShown()", "testcase": true, "constructor": false, "invocations": ["buildSettings", "column", "column", "group", "dataset", "newSelectorSettings", "getDataSet", "getColumnIndex", "getColumnById", "setValueAt", "createSelectorDisplayer", "getView", "draw", "addItem", "verify", "never", "anyString", "eq", "anyBoolean", "addItem", "verify", "times", "anyString", "anyString", "eq"]}, "focal_class": {"identifier": "SelectorDisplayer", "superclass": "extends AbstractGwtDisplayer<SelectorDisplayer.View>", "interfaces": "", "fields": [{"original_string": "protected View view;", "modifier": "protected", "type": "View", "declarator": "view", "var_name": "view"}, {"original_string": "protected boolean filterOn = false;", "modifier": "protected", "type": "boolean", "declarator": "filterOn = false", "var_name": "filterOn"}], "methods": [{"identifier": "SelectorDisplayer", "parameters": "()", "modifiers": "public", "return": "", "signature": " SelectorDisplayer()", "full_signature": "public  SelectorDisplayer()", "class_method_signature": "SelectorDisplayer.SelectorDisplayer()", "testcase": false, "constructor": true}, {"identifier": "SelectorDisplayer", "parameters": "(View view)", "modifiers": "@Inject public", "return": "", "signature": " SelectorDisplayer(View view)", "full_signature": "@Inject public  SelectorDisplayer(View view)", "class_method_signature": "SelectorDisplayer.SelectorDisplayer(View view)", "testcase": false, "constructor": true}, {"identifier": "getView", "parameters": "()", "modifiers": "@Override public", "return": "View", "signature": "View getView()", "full_signature": "@Override public View getView()", "class_method_signature": "SelectorDisplayer.getView()", "testcase": false, "constructor": false}, {"identifier": "createDisplayerConstraints", "parameters": "()", "modifiers": "@Override public", "return": "DisplayerConstraints", "signature": "DisplayerConstraints createDisplayerConstraints()", "full_signature": "@Override public DisplayerConstraints createDisplayerConstraints()", "class_method_signature": "SelectorDisplayer.createDisplayerConstraints()", "testcase": false, "constructor": false}, {"identifier": "createVisualization", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void createVisualization()", "full_signature": "@Override protected void createVisualization()", "class_method_signature": "SelectorDisplayer.createVisualization()", "testcase": false, "constructor": false}, {"identifier": "updateVisualization", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void updateVisualization()", "full_signature": "@Override protected void updateVisualization()", "class_method_signature": "SelectorDisplayer.updateVisualization()", "testcase": false, "constructor": false}, {"identifier": "onItemSelected", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onItemSelected()", "full_signature": "public void onItemSelected()", "class_method_signature": "SelectorDisplayer.onItemSelected()", "testcase": false, "constructor": false}, {"identifier": "onFilterEnabled", "parameters": "(Displayer displayer, DataSetGroup groupOp)", "modifiers": "@Override public", "return": "void", "signature": "void onFilterEnabled(Displayer displayer, DataSetGroup groupOp)", "full_signature": "@Override public void onFilterEnabled(Displayer displayer, DataSetGroup groupOp)", "class_method_signature": "SelectorDisplayer.onFilterEnabled(Displayer displayer, DataSetGroup groupOp)", "testcase": false, "constructor": false}, {"identifier": "onFilterReset", "parameters": "(Displayer displayer, List<DataSetGroup> groupOps)", "modifiers": "@Override public", "return": "void", "signature": "void onFilterReset(Displayer displayer, List<DataSetGroup> groupOps)", "full_signature": "@Override public void onFilterReset(Displayer displayer, List<DataSetGroup> groupOps)", "class_method_signature": "SelectorDisplayer.onFilterReset(Displayer displayer, List<DataSetGroup> groupOps)", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-renderers/dashbuilder-renderer-default/src/main/java/org/dashbuilder/renderer/client/selector/SelectorDisplayer.java"}, "focal_method": {"identifier": "getView", "parameters": "()", "modifiers": "@Override public", "return": "View", "body": "@Override\n    public View getView() {\n        return view;\n    }", "signature": "View getView()", "full_signature": "@Override public View getView()", "class_method_signature": "SelectorDisplayer.getView()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}