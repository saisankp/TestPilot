{"test_class": {"identifier": "ComputationExceptionBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FileSystem fileSystem;", "modifier": "private", "type": "FileSystem", "declarator": "fileSystem", "var_name": "fileSystem"}, {"original_string": "private Path workingDir;", "modifier": "private", "type": "Path", "declarator": "workingDir", "var_name": "workingDir"}, {"original_string": "private Path f1;", "modifier": "private", "type": "Path", "declarator": "f1", "var_name": "f1"}, {"original_string": "private Path f2;", "modifier": "private", "type": "Path", "declarator": "f2", "var_name": "f2"}], "file": "computation/src/test/java/com/powsybl/computation/ComputationExceptionBuilderTest.java"}, "test_case": {"identifier": "withCause", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void withCause() {\n        Exception cause = new RuntimeException(\"oops\");\n        ComputationException computationException = new ComputationExceptionBuilder(cause)\n                .build();\n        assertThat(computationException)\n                .hasCause(cause)\n                .hasMessageContaining(\"oops\")\n                .hasMessageContaining(\"RuntimeException\")\n                .hasStackTraceContaining(\"Caused by\")\n                .hasStackTraceContaining(\"oops\");\n    }", "signature": "void withCause()", "full_signature": "@Test public void withCause()", "class_method_signature": "ComputationExceptionBuilderTest.withCause()", "testcase": true, "constructor": false, "invocations": ["build", "hasStackTraceContaining", "hasStackTraceContaining", "hasMessageContaining", "hasMessageContaining", "hasCause", "assertThat"]}, "focal_class": {"identifier": "ComputationExceptionBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ComputationExceptionBuilder.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ComputationExceptionBuilder.class)", "var_name": "LOGGER"}, {"original_string": "private String message;", "modifier": "private", "type": "String", "declarator": "message", "var_name": "message"}, {"original_string": "private final Throwable cause;", "modifier": "private final", "type": "Throwable", "declarator": "cause", "var_name": "cause"}, {"original_string": "private final Map<String, String> outMsgByLogFileName = new HashMap<>();", "modifier": "private final", "type": "Map<String, String>", "declarator": "outMsgByLogFileName = new HashMap<>()", "var_name": "outMsgByLogFileName"}, {"original_string": "private final Map<String, String> errMsgByLogFileName = new HashMap<>();", "modifier": "private final", "type": "Map<String, String>", "declarator": "errMsgByLogFileName = new HashMap<>()", "var_name": "errMsgByLogFileName"}, {"original_string": "private final Map<String, byte[]> bytesByFileName = new HashMap<>();", "modifier": "private final", "type": "Map<String, byte[]>", "declarator": "bytesByFileName = new HashMap<>()", "var_name": "bytesByFileName"}], "methods": [{"identifier": "ComputationExceptionBuilder", "parameters": "()", "modifiers": "public", "return": "", "signature": " ComputationExceptionBuilder()", "full_signature": "public  ComputationExceptionBuilder()", "class_method_signature": "ComputationExceptionBuilder.ComputationExceptionBuilder()", "testcase": false, "constructor": true}, {"identifier": "ComputationExceptionBuilder", "parameters": "(Throwable cause)", "modifiers": "public", "return": "", "signature": " ComputationExceptionBuilder(Throwable cause)", "full_signature": "public  ComputationExceptionBuilder(Throwable cause)", "class_method_signature": "ComputationExceptionBuilder.ComputationExceptionBuilder(Throwable cause)", "testcase": false, "constructor": true}, {"identifier": "message", "parameters": "(@Nullable String message)", "modifiers": "public", "return": "ComputationExceptionBuilder", "signature": "ComputationExceptionBuilder message(@Nullable String message)", "full_signature": "public ComputationExceptionBuilder message(@Nullable String message)", "class_method_signature": "ComputationExceptionBuilder.message(@Nullable String message)", "testcase": false, "constructor": false}, {"identifier": "addOutLogIfExists", "parameters": "(@Nullable Path path)", "modifiers": "public", "return": "ComputationExceptionBuilder", "signature": "ComputationExceptionBuilder addOutLogIfExists(@Nullable Path path)", "full_signature": "public ComputationExceptionBuilder addOutLogIfExists(@Nullable Path path)", "class_method_signature": "ComputationExceptionBuilder.addOutLogIfExists(@Nullable Path path)", "testcase": false, "constructor": false}, {"identifier": "addOutLog", "parameters": "(String logName, @Nullable String log)", "modifiers": "public", "return": "ComputationExceptionBuilder", "signature": "ComputationExceptionBuilder addOutLog(String logName, @Nullable String log)", "full_signature": "public ComputationExceptionBuilder addOutLog(String logName, @Nullable String log)", "class_method_signature": "ComputationExceptionBuilder.addOutLog(String logName, @Nullable String log)", "testcase": false, "constructor": false}, {"identifier": "addErrLogIfExists", "parameters": "(@Nullable Path path)", "modifiers": "public", "return": "ComputationExceptionBuilder", "signature": "ComputationExceptionBuilder addErrLogIfExists(@Nullable Path path)", "full_signature": "public ComputationExceptionBuilder addErrLogIfExists(@Nullable Path path)", "class_method_signature": "ComputationExceptionBuilder.addErrLogIfExists(@Nullable Path path)", "testcase": false, "constructor": false}, {"identifier": "addErrLog", "parameters": "(String logName, @Nullable String log)", "modifiers": "public", "return": "ComputationExceptionBuilder", "signature": "ComputationExceptionBuilder addErrLog(String logName, @Nullable String log)", "full_signature": "public ComputationExceptionBuilder addErrLog(String logName, @Nullable String log)", "class_method_signature": "ComputationExceptionBuilder.addErrLog(String logName, @Nullable String log)", "testcase": false, "constructor": false}, {"identifier": "addFileIfExists", "parameters": "(@Nullable Path path)", "modifiers": "public", "return": "ComputationExceptionBuilder", "signature": "ComputationExceptionBuilder addFileIfExists(@Nullable Path path)", "full_signature": "public ComputationExceptionBuilder addFileIfExists(@Nullable Path path)", "class_method_signature": "ComputationExceptionBuilder.addFileIfExists(@Nullable Path path)", "testcase": false, "constructor": false}, {"identifier": "addBytes", "parameters": "(String key, byte[] bytes)", "modifiers": "public", "return": "ComputationExceptionBuilder", "signature": "ComputationExceptionBuilder addBytes(String key, byte[] bytes)", "full_signature": "public ComputationExceptionBuilder addBytes(String key, byte[] bytes)", "class_method_signature": "ComputationExceptionBuilder.addBytes(String key, byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "readFileToMap", "parameters": "(@Nullable Path path, Map<String, String> map)", "modifiers": "private", "return": "ComputationExceptionBuilder", "signature": "ComputationExceptionBuilder readFileToMap(@Nullable Path path, Map<String, String> map)", "full_signature": "private ComputationExceptionBuilder readFileToMap(@Nullable Path path, Map<String, String> map)", "class_method_signature": "ComputationExceptionBuilder.readFileToMap(@Nullable Path path, Map<String, String> map)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "ComputationException", "signature": "ComputationException build()", "full_signature": "public ComputationException build()", "class_method_signature": "ComputationExceptionBuilder.build()", "testcase": false, "constructor": false}], "file": "computation/src/main/java/com/powsybl/computation/ComputationExceptionBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "ComputationException", "body": "public ComputationException build() {\n        ComputationException exception;\n        if (message != null && cause != null) {\n            exception = new ComputationException(message, cause, outMsgByLogFileName, errMsgByLogFileName, bytesByFileName);\n        } else if (message != null) {\n            exception = new ComputationException(message, outMsgByLogFileName, errMsgByLogFileName, bytesByFileName);\n        } else if (cause != null) {\n            exception = new ComputationException(cause, outMsgByLogFileName, errMsgByLogFileName, bytesByFileName);\n        } else {\n            exception = new ComputationException(outMsgByLogFileName, errMsgByLogFileName, bytesByFileName);\n        }\n        return exception;\n    }", "signature": "ComputationException build()", "full_signature": "public ComputationException build()", "class_method_signature": "ComputationExceptionBuilder.build()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}