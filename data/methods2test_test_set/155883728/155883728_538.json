{"test_class": {"identifier": "RepositoryFacadeTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/jcrfacade/RepositoryFacadeTest.java"}, "test_case": {"identifier": "testGetDescriptorValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetDescriptorValue() {\n        final Repository mockRepository = mock(Repository.class);\n        final String key = \"SOME_KEY\";\n        final Value value = new SimpleValueFactory().createValue(\"SOME_VALUE\");\n        when(mockRepository.getDescriptorValue(anyString())).thenReturn(null);\n        when(mockRepository.getDescriptorValue(key)).thenReturn(value);\n        final RepositoryFacade facade = getFacade(mockRepository);\n        assertSame(\"should be same value\",\n                value, facade.getDescriptorValue(key));\n        assertNull(\"should be null\",\n                facade.getDescriptorValues(\"\"));\n        final RepositoryFacade facadeNull = getFacade(null);\n        assertNull(\"should be null for null\",\n                facadeNull.getDescriptorValue(key));\n    }", "signature": "void testGetDescriptorValue()", "full_signature": "@Test public void testGetDescriptorValue()", "class_method_signature": "RepositoryFacadeTest.testGetDescriptorValue()", "testcase": true, "constructor": false, "invocations": ["mock", "createValue", "thenReturn", "when", "getDescriptorValue", "anyString", "thenReturn", "when", "getDescriptorValue", "getFacade", "assertSame", "getDescriptorValue", "assertNull", "getDescriptorValues", "getFacade", "assertNull", "getDescriptorValue"]}, "focal_class": {"identifier": "RepositoryFacade", "superclass": "", "interfaces": "implements Repository", "fields": [{"original_string": "private final @Nullable Repository delegate;", "modifier": "private final @Nullable", "type": "Repository", "declarator": "delegate", "var_name": "delegate"}], "methods": [{"identifier": "RepositoryFacade", "parameters": "(final @Nullable Repository delegate)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public", "return": "", "signature": " RepositoryFacade(final @Nullable Repository delegate)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public  RepositoryFacade(final @Nullable Repository delegate)", "class_method_signature": "RepositoryFacade.RepositoryFacade(final @Nullable Repository delegate)", "testcase": false, "constructor": true}, {"identifier": "getDescriptorKeys", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getDescriptorKeys()", "full_signature": "@Override public String[] getDescriptorKeys()", "class_method_signature": "RepositoryFacade.getDescriptorKeys()", "testcase": false, "constructor": false}, {"identifier": "isStandardDescriptor", "parameters": "(String key)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isStandardDescriptor(String key)", "full_signature": "@Override public boolean isStandardDescriptor(String key)", "class_method_signature": "RepositoryFacade.isStandardDescriptor(String key)", "testcase": false, "constructor": false}, {"identifier": "isSingleValueDescriptor", "parameters": "(String key)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSingleValueDescriptor(String key)", "full_signature": "@Override public boolean isSingleValueDescriptor(String key)", "class_method_signature": "RepositoryFacade.isSingleValueDescriptor(String key)", "testcase": false, "constructor": false}, {"identifier": "getDescriptorValue", "parameters": "(String key)", "modifiers": "@Override public", "return": "Value", "signature": "Value getDescriptorValue(String key)", "full_signature": "@Override public Value getDescriptorValue(String key)", "class_method_signature": "RepositoryFacade.getDescriptorValue(String key)", "testcase": false, "constructor": false}, {"identifier": "getDescriptorValues", "parameters": "(String key)", "modifiers": "@Override public", "return": "Value[]", "signature": "Value[] getDescriptorValues(String key)", "full_signature": "@Override public Value[] getDescriptorValues(String key)", "class_method_signature": "RepositoryFacade.getDescriptorValues(String key)", "testcase": false, "constructor": false}, {"identifier": "getDescriptor", "parameters": "(String key)", "modifiers": "@Override public", "return": "String", "signature": "String getDescriptor(String key)", "full_signature": "@Override public String getDescriptor(String key)", "class_method_signature": "RepositoryFacade.getDescriptor(String key)", "testcase": false, "constructor": false}, {"identifier": "login", "parameters": "(Credentials credentials, String workspaceName)", "modifiers": "@Override public", "return": "Session", "signature": "Session login(Credentials credentials, String workspaceName)", "full_signature": "@Override public Session login(Credentials credentials, String workspaceName)", "class_method_signature": "RepositoryFacade.login(Credentials credentials, String workspaceName)", "testcase": false, "constructor": false}, {"identifier": "login", "parameters": "(Credentials credentials)", "modifiers": "@Override public", "return": "Session", "signature": "Session login(Credentials credentials)", "full_signature": "@Override public Session login(Credentials credentials)", "class_method_signature": "RepositoryFacade.login(Credentials credentials)", "testcase": false, "constructor": false}, {"identifier": "login", "parameters": "(String workspaceName)", "modifiers": "@Override public", "return": "Session", "signature": "Session login(String workspaceName)", "full_signature": "@Override public Session login(String workspaceName)", "class_method_signature": "RepositoryFacade.login(String workspaceName)", "testcase": false, "constructor": false}, {"identifier": "login", "parameters": "()", "modifiers": "@Override public", "return": "Session", "signature": "Session login()", "full_signature": "@Override public Session login()", "class_method_signature": "RepositoryFacade.login()", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/jcrfacade/RepositoryFacade.java"}, "focal_method": {"identifier": "getDescriptorValue", "parameters": "(String key)", "modifiers": "@Override public", "return": "Value", "body": "@Override\n    public Value getDescriptorValue(String key) {\n        return delegate != null ? delegate.getDescriptorValue(key) : null;\n    }", "signature": "Value getDescriptorValue(String key)", "full_signature": "@Override public Value getDescriptorValue(String key)", "class_method_signature": "RepositoryFacade.getDescriptorValue(String key)", "testcase": false, "constructor": false, "invocations": ["getDescriptorValue"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}