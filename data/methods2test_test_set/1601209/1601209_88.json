{"test_class": {"identifier": "GsonObjectMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GsonObjectMapper om = new GsonObjectMapper();", "modifier": "private", "type": "GsonObjectMapper", "declarator": "om = new GsonObjectMapper()", "var_name": "om"}], "file": "object-mapper-gson/src/test/java/kong/unirest/gson/GsonObjectMapperTest.java"}, "test_case": {"identifier": "canRead", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void canRead(){\n        TestMe test = om.readValue(\"{\\\"text\\\":\\\"foo\\\",\\\"nmbr\\\":42,\\\"another\\\":{\\\"text\\\":\\\"bar\\\",\\\"nmbr\\\":666}}\",\n                TestMe.class);\n\n        assertEquals(\"foo\", test.text);\n        assertEquals(42, test.nmbr.intValue());\n        assertEquals(\"bar\", test.another.text);\n        assertEquals(666, test.another.nmbr.intValue());\n        assertEquals(null, test.another.another);\n    }", "signature": "void canRead()", "full_signature": "@Test public void canRead()", "class_method_signature": "GsonObjectMapperTest.canRead()", "testcase": true, "constructor": false, "invocations": ["readValue", "assertEquals", "assertEquals", "intValue", "assertEquals", "assertEquals", "intValue", "assertEquals"]}, "focal_class": {"identifier": "GsonObjectMapper", "superclass": "", "interfaces": "implements ObjectMapper", "fields": [{"original_string": "private Gson om;", "modifier": "private", "type": "Gson", "declarator": "om", "var_name": "om"}], "methods": [{"identifier": "GsonObjectMapper", "parameters": "()", "modifiers": "public", "return": "", "signature": " GsonObjectMapper()", "full_signature": "public  GsonObjectMapper()", "class_method_signature": "GsonObjectMapper.GsonObjectMapper()", "testcase": false, "constructor": true}, {"identifier": "GsonObjectMapper", "parameters": "(Gson om)", "modifiers": "public", "return": "", "signature": " GsonObjectMapper(Gson om)", "full_signature": "public  GsonObjectMapper(Gson om)", "class_method_signature": "GsonObjectMapper.GsonObjectMapper(Gson om)", "testcase": false, "constructor": true}, {"identifier": "readValue", "parameters": "(String value, Class<T> valueType)", "modifiers": "@Override public", "return": "T", "signature": "T readValue(String value, Class<T> valueType)", "full_signature": "@Override public T readValue(String value, Class<T> valueType)", "class_method_signature": "GsonObjectMapper.readValue(String value, Class<T> valueType)", "testcase": false, "constructor": false}, {"identifier": "readValue", "parameters": "(String value, GenericType<T> genericType)", "modifiers": "@Override public", "return": "T", "signature": "T readValue(String value, GenericType<T> genericType)", "full_signature": "@Override public T readValue(String value, GenericType<T> genericType)", "class_method_signature": "GsonObjectMapper.readValue(String value, GenericType<T> genericType)", "testcase": false, "constructor": false}, {"identifier": "writeValue", "parameters": "(Object value)", "modifiers": "@Override public", "return": "String", "signature": "String writeValue(Object value)", "full_signature": "@Override public String writeValue(Object value)", "class_method_signature": "GsonObjectMapper.writeValue(Object value)", "testcase": false, "constructor": false}], "file": "object-mapper-gson/src/main/java/kong/unirest/gson/GsonObjectMapper.java"}, "focal_method": {"identifier": "readValue", "parameters": "(String value, Class<T> valueType)", "modifiers": "@Override public", "return": "T", "body": "@Override\n    public <T> T readValue(String value, Class<T> valueType) {\n        return om.fromJson(value, valueType);\n    }", "signature": "T readValue(String value, Class<T> valueType)", "full_signature": "@Override public T readValue(String value, Class<T> valueType)", "class_method_signature": "GsonObjectMapper.readValue(String value, Class<T> valueType)", "testcase": false, "constructor": false, "invocations": ["fromJson"]}, "repository": {"repo_id": 1601209, "url": "https://github.com/Kong/unirest-java", "stars": 1855, "created": "4/11/2011 9:19:53 PM +00:00", "updates": "2020-01-25T12:07:58+00:00", "fork": "False", "license": "licensed"}}