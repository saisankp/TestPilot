{"test_class": {"identifier": "HttpResponseHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "IQueue<ITask> taskQueue;", "modifier": "", "type": "IQueue<ITask>", "declarator": "taskQueue", "var_name": "taskQueue"}, {"original_string": "IReceiverChain receiverChain;", "modifier": "", "type": "IReceiverChain", "declarator": "receiverChain", "var_name": "receiverChain"}, {"original_string": "HttpResponseHandler responseHandler;", "modifier": "", "type": "HttpResponseHandler", "declarator": "responseHandler", "var_name": "responseHandler"}, {"original_string": "IMessageProcessingSequence messageProcessingSequence;", "modifier": "", "type": "IMessageProcessingSequence", "declarator": "messageProcessingSequence", "var_name": "messageProcessingSequence"}, {"original_string": "IMessageProcessor messageProcessor;", "modifier": "", "type": "IMessageProcessor", "declarator": "messageProcessor", "var_name": "messageProcessor"}, {"original_string": "FullHttpResponse response;", "modifier": "", "type": "FullHttpResponse", "declarator": "response", "var_name": "response"}, {"original_string": "IDeserializeStrategy strategy;", "modifier": "", "type": "IDeserializeStrategy", "declarator": "strategy", "var_name": "strategy"}, {"original_string": "HttpHeaders headers;", "modifier": "", "type": "HttpHeaders", "declarator": "headers", "var_name": "headers"}, {"original_string": "ChannelHandlerContext ctx;", "modifier": "", "type": "ChannelHandlerContext", "declarator": "ctx", "var_name": "ctx"}, {"original_string": "Object mapId;", "modifier": "", "type": "Object", "declarator": "mapId", "var_name": "mapId"}, {"original_string": "IChainStorage chainStorage;", "modifier": "", "type": "IChainStorage", "declarator": "chainStorage", "var_name": "chainStorage"}], "file": "CoreFeatures/HttpEndpoint/HttpResponseHandler/src/test/java/info/smart_tools/smartactors/http_endpoint/http_response_handler/HttpResponseHandlerTest.java"}, "test_case": {"identifier": "testNewTaskAddedToQueue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNewTaskAddedToQueue() throws InvalidArgumentException, DeserializationException, InterruptedException, ResponseHandlerException {\n        String chainName = \"chainName\";\n        when(response.headers()).thenReturn(headers);\n        when(headers.get(\"messageMapId\")).thenReturn(\"messageMap\");\n        when(strategy.deserialize(any())).thenReturn(new DSObject(\"{\\\"foo\\\": \\\"bar\\\"}\"));\n        responseHandler.handle(ctx, response);\n        verify(taskQueue, times(1)).put(any());\n    }", "signature": "void testNewTaskAddedToQueue()", "full_signature": "@Test public void testNewTaskAddedToQueue()", "class_method_signature": "HttpResponseHandlerTest.testNewTaskAddedToQueue()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "headers", "thenReturn", "when", "get", "thenReturn", "when", "deserialize", "any", "handle", "put", "verify", "times", "any"]}, "focal_class": {"identifier": "HttpResponseHandler", "superclass": "", "interfaces": "implements IResponseHandler<ChannelHandlerContext, FullHttpResponse>", "fields": [{"original_string": "private IQueue<ITask> taskQueue;", "modifier": "private", "type": "IQueue<ITask>", "declarator": "taskQueue", "var_name": "taskQueue"}, {"original_string": "private int stackDepth;", "modifier": "private", "type": "int", "declarator": "stackDepth", "var_name": "stackDepth"}, {"original_string": "private IReceiverChain receiverChain;", "modifier": "private", "type": "IReceiverChain", "declarator": "receiverChain", "var_name": "receiverChain"}, {"original_string": "private IObject request;", "modifier": "private", "type": "IObject", "declarator": "request", "var_name": "request"}, {"original_string": "private IFieldName messageFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "messageFieldName", "var_name": "messageFieldName"}, {"original_string": "private IFieldName contextFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "contextFieldName", "var_name": "contextFieldName"}, {"original_string": "private IFieldName httpResponseStatusCodeFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "httpResponseStatusCodeFieldName", "var_name": "httpResponseStatusCodeFieldName"}, {"original_string": "private IFieldName responseFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "responseFieldName", "var_name": "responseFieldName"}, {"original_string": "private IFieldName headersFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "headersFieldName", "var_name": "headersFieldName"}, {"original_string": "private IFieldName cookiesFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "cookiesFieldName", "var_name": "cookiesFieldName"}, {"original_string": "private IFieldName requestFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "requestFieldName", "var_name": "requestFieldName"}, {"original_string": "private IFieldName messageMapIdFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "messageMapIdFieldName", "var_name": "messageMapIdFieldName"}, {"original_string": "private IFieldName uuidFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "uuidFieldName", "var_name": "uuidFieldName"}, {"original_string": "private Object messageMapId;", "modifier": "private", "type": "Object", "declarator": "messageMapId", "var_name": "messageMapId"}, {"original_string": "private Object uuid;", "modifier": "private", "type": "Object", "declarator": "uuid", "var_name": "uuid"}, {"original_string": "private boolean isReceived;", "modifier": "private", "type": "boolean", "declarator": "isReceived", "var_name": "isReceived"}, {"original_string": "private IScope currentScope;", "modifier": "private", "type": "IScope", "declarator": "currentScope", "var_name": "currentScope"}], "methods": [{"identifier": "HttpResponseHandler", "parameters": "(final IQueue<ITask> taskQueue, final int stackDepth, final Object receiverChain,\n                               final IObject request, final IScope scope)", "modifiers": "public", "return": "", "signature": " HttpResponseHandler(final IQueue<ITask> taskQueue, final int stackDepth, final Object receiverChain,\n                               final IObject request, final IScope scope)", "full_signature": "public  HttpResponseHandler(final IQueue<ITask> taskQueue, final int stackDepth, final Object receiverChain,\n                               final IObject request, final IScope scope)", "class_method_signature": "HttpResponseHandler.HttpResponseHandler(final IQueue<ITask> taskQueue, final int stackDepth, final Object receiverChain,\n                               final IObject request, final IScope scope)", "testcase": false, "constructor": true}, {"identifier": "handle", "parameters": "(final ChannelHandlerContext ctx, final FullHttpResponse response)", "modifiers": "@Override public", "return": "void", "signature": "void handle(final ChannelHandlerContext ctx, final FullHttpResponse response)", "full_signature": "@Override public void handle(final ChannelHandlerContext ctx, final FullHttpResponse response)", "class_method_signature": "HttpResponseHandler.handle(final ChannelHandlerContext ctx, final FullHttpResponse response)", "testcase": false, "constructor": false}, {"identifier": "getEnvironment", "parameters": "(final FullHttpResponse response)", "modifiers": "private", "return": "IObject", "signature": "IObject getEnvironment(final FullHttpResponse response)", "full_signature": "private IObject getEnvironment(final FullHttpResponse response)", "class_method_signature": "HttpResponseHandler.getEnvironment(final FullHttpResponse response)", "testcase": false, "constructor": false}], "file": "CoreFeatures/HttpEndpoint/HttpResponseHandler/src/main/java/info/smart_tools/smartactors/http_endpoint/http_response_handler/HttpResponseHandler.java"}, "focal_method": {"identifier": "handle", "parameters": "(final ChannelHandlerContext ctx, final FullHttpResponse response)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void handle(final ChannelHandlerContext ctx, final FullHttpResponse response) throws ResponseHandlerException {\n        try {\n            ScopeProvider.setCurrentScope(currentScope);\n            IOC.resolve(Keys.getOrAdd(\"cancelTimerOnRequest\"), uuid);\n            isReceived = true;\n            FullHttpResponse responseCopy = response.copy();\n            ITask task = () -> {\n                try {\n                    IObject environment = getEnvironment(responseCopy);\n                    IMessageProcessingSequence processingSequence =\n                            IOC.resolve(Keys.getOrAdd(\"info.smart_tools.smartactors.message_processing_interfaces.message_processing.IMessageProcessingSequence\"), stackDepth, receiverChain);\n                    IMessageProcessor messageProcessor =\n                            IOC.resolve(Keys.getOrAdd(\"info.smart_tools.smartactors.message_processing_interfaces.message_processing.IMessageProcessor\"), taskQueue, processingSequence);\n                    IFieldName messageFieldName = null;\n                    messageFieldName = IOC.resolve(Keys.getOrAdd(\"info.smart_tools.smartactors.iobject.ifield_name.IFieldName\"), \"message\");\n                    IFieldName contextFieldName = IOC.resolve(Keys.getOrAdd(\"info.smart_tools.smartactors.iobject.ifield_name.IFieldName\"), \"context\");\n                    IObject message = (IObject) environment.getValue(messageFieldName);\n                    message.setValue(messageMapIdFieldName, messageMapId);\n                    IObject context = (IObject) environment.getValue(contextFieldName);\n                    messageProcessor.process(message, context);\n                } catch (ChangeValueException | ReadValueException | InvalidArgumentException | ResponseHandlerException |\n                        ResolutionException | MessageProcessorProcessException e) {\n                    throw new TaskExecutionException(e);\n                }\n            };\n            taskQueue.put(task);\n        } catch (ScopeProviderException | InterruptedException | ResolutionException e) {\n            throw new ResponseHandlerException(e);\n        }\n\n    }", "signature": "void handle(final ChannelHandlerContext ctx, final FullHttpResponse response)", "full_signature": "@Override public void handle(final ChannelHandlerContext ctx, final FullHttpResponse response)", "class_method_signature": "HttpResponseHandler.handle(final ChannelHandlerContext ctx, final FullHttpResponse response)", "testcase": false, "constructor": false, "invocations": ["setCurrentScope", "resolve", "getOrAdd", "copy", "getEnvironment", "resolve", "getOrAdd", "resolve", "getOrAdd", "resolve", "getOrAdd", "resolve", "getOrAdd", "getValue", "setValue", "getValue", "process", "put"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}