{"test_class": {"identifier": "TrustManagerProxyTest", "superclass": "", "interfaces": "", "fields": [], "file": "libs/java/cert_refresher/src/test/java/com/oath/auth/TrustManagerProxyTest.java"}, "test_case": {"identifier": "testTrustManagerProxyGetAcceptedIssuers", "parameters": "(@Mocked X509ExtendedTrustManager mockedTrustManager)", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTrustManagerProxyGetAcceptedIssuers(@Mocked X509ExtendedTrustManager mockedTrustManager) {\n        new Expectations() {{\n            mockedTrustManager.getAcceptedIssuers(); times = 1; result = null;\n        }};\n\n        TrustManagerProxy trustManagerProxy = new TrustManagerProxy(new TrustManager[]{mockedTrustManager});\n        assertNull(trustManagerProxy.getAcceptedIssuers());\n    }", "signature": "void testTrustManagerProxyGetAcceptedIssuers(@Mocked X509ExtendedTrustManager mockedTrustManager)", "full_signature": "@Test public void testTrustManagerProxyGetAcceptedIssuers(@Mocked X509ExtendedTrustManager mockedTrustManager)", "class_method_signature": "TrustManagerProxyTest.testTrustManagerProxyGetAcceptedIssuers(@Mocked X509ExtendedTrustManager mockedTrustManager)", "testcase": true, "constructor": false, "invocations": ["getAcceptedIssuers", "assertNull", "getAcceptedIssuers"]}, "focal_class": {"identifier": "TrustManagerProxy", "superclass": "extends X509ExtendedTrustManager", "interfaces": "", "fields": [{"original_string": "private volatile X509ExtendedTrustManager trustManager;", "modifier": "private volatile", "type": "X509ExtendedTrustManager", "declarator": "trustManager", "var_name": "trustManager"}], "methods": [{"identifier": "TrustManagerProxy", "parameters": "(TrustManager[] trustManagers)", "modifiers": "public", "return": "", "signature": " TrustManagerProxy(TrustManager[] trustManagers)", "full_signature": "public  TrustManagerProxy(TrustManager[] trustManagers)", "class_method_signature": "TrustManagerProxy.TrustManagerProxy(TrustManager[] trustManagers)", "testcase": false, "constructor": true}, {"identifier": "setTrustManager", "parameters": "(final TrustManager[] trustManagers)", "modifiers": "public", "return": "void", "signature": "void setTrustManager(final TrustManager[] trustManagers)", "full_signature": "public void setTrustManager(final TrustManager[] trustManagers)", "class_method_signature": "TrustManagerProxy.setTrustManager(final TrustManager[] trustManagers)", "testcase": false, "constructor": false}, {"identifier": "checkClientTrusted", "parameters": "(X509Certificate[] x509Certificates, String s)", "modifiers": "@Override public", "return": "void", "signature": "void checkClientTrusted(X509Certificate[] x509Certificates, String s)", "full_signature": "@Override public void checkClientTrusted(X509Certificate[] x509Certificates, String s)", "class_method_signature": "TrustManagerProxy.checkClientTrusted(X509Certificate[] x509Certificates, String s)", "testcase": false, "constructor": false}, {"identifier": "checkServerTrusted", "parameters": "(X509Certificate[] x509Certificates, String s)", "modifiers": "@Override public", "return": "void", "signature": "void checkServerTrusted(X509Certificate[] x509Certificates, String s)", "full_signature": "@Override public void checkServerTrusted(X509Certificate[] x509Certificates, String s)", "class_method_signature": "TrustManagerProxy.checkServerTrusted(X509Certificate[] x509Certificates, String s)", "testcase": false, "constructor": false}, {"identifier": "getAcceptedIssuers", "parameters": "()", "modifiers": "@Override public", "return": "X509Certificate[]", "signature": "X509Certificate[] getAcceptedIssuers()", "full_signature": "@Override public X509Certificate[] getAcceptedIssuers()", "class_method_signature": "TrustManagerProxy.getAcceptedIssuers()", "testcase": false, "constructor": false}, {"identifier": "checkClientTrusted", "parameters": "(X509Certificate[] chain, String authType, Socket socket)", "modifiers": "@Override public", "return": "void", "signature": "void checkClientTrusted(X509Certificate[] chain, String authType, Socket socket)", "full_signature": "@Override public void checkClientTrusted(X509Certificate[] chain, String authType, Socket socket)", "class_method_signature": "TrustManagerProxy.checkClientTrusted(X509Certificate[] chain, String authType, Socket socket)", "testcase": false, "constructor": false}, {"identifier": "checkClientTrusted", "parameters": "(X509Certificate[] chain, String authType, SSLEngine engine)", "modifiers": "@Override public", "return": "void", "signature": "void checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine engine)", "full_signature": "@Override public void checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine engine)", "class_method_signature": "TrustManagerProxy.checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine engine)", "testcase": false, "constructor": false}, {"identifier": "checkServerTrusted", "parameters": "(X509Certificate[] chain, String authType, Socket socket)", "modifiers": "@Override public", "return": "void", "signature": "void checkServerTrusted(X509Certificate[] chain, String authType, Socket socket)", "full_signature": "@Override public void checkServerTrusted(X509Certificate[] chain, String authType, Socket socket)", "class_method_signature": "TrustManagerProxy.checkServerTrusted(X509Certificate[] chain, String authType, Socket socket)", "testcase": false, "constructor": false}, {"identifier": "checkServerTrusted", "parameters": "(X509Certificate[] chain, String authType, SSLEngine engine)", "modifiers": "@Override public", "return": "void", "signature": "void checkServerTrusted(X509Certificate[] chain, String authType, SSLEngine engine)", "full_signature": "@Override public void checkServerTrusted(X509Certificate[] chain, String authType, SSLEngine engine)", "class_method_signature": "TrustManagerProxy.checkServerTrusted(X509Certificate[] chain, String authType, SSLEngine engine)", "testcase": false, "constructor": false}], "file": "libs/java/cert_refresher/src/main/java/com/oath/auth/TrustManagerProxy.java"}, "focal_method": {"identifier": "getAcceptedIssuers", "parameters": "()", "modifiers": "@Override public", "return": "X509Certificate[]", "body": "@Override\n    public X509Certificate[] getAcceptedIssuers() {\n        return trustManager.getAcceptedIssuers();\n    }", "signature": "X509Certificate[] getAcceptedIssuers()", "full_signature": "@Override public X509Certificate[] getAcceptedIssuers()", "class_method_signature": "TrustManagerProxy.getAcceptedIssuers()", "testcase": false, "constructor": false, "invocations": ["getAcceptedIssuers"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}