{"test_class": {"identifier": "RandomNumberTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RandomNumber rn = new RandomNumber();", "modifier": "private", "type": "RandomNumber", "declarator": "rn = new RandomNumber()", "var_name": "rn"}], "file": "descriptor/fingerprint/src/test/java/org/openscience/cdk/fingerprint/RandomNumberTest.java"}, "test_case": {"identifier": "testGenerateMersenneTwisterRandomNumber", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGenerateMersenneTwisterRandomNumber() {\n\n        Assert.assertEquals(\"Expected next random number to be 444\", 444,\n                rn.generateMersenneTwisterRandomNumber(1024, 42));\n        Assert.assertEquals(\"Expected next random number to be 748\", 748,\n                rn.generateMersenneTwisterRandomNumber(1024, 444));\n\n    }", "signature": "void testGenerateMersenneTwisterRandomNumber()", "full_signature": "@Test public void testGenerateMersenneTwisterRandomNumber()", "class_method_signature": "RandomNumberTest.testGenerateMersenneTwisterRandomNumber()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "generateMersenneTwisterRandomNumber", "assertEquals", "generateMersenneTwisterRandomNumber"]}, "focal_class": {"identifier": "RandomNumber", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long               serialVersionUID = 23345464573453571L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 23345464573453571L", "var_name": "serialVersionUID"}, {"original_string": "private transient final RandomGenerator rg               = new RandomAdaptor(new MersenneTwister());", "modifier": "private transient final", "type": "RandomGenerator", "declarator": "rg               = new RandomAdaptor(new MersenneTwister())", "var_name": "rg"}], "methods": [{"identifier": "generateMersenneTwisterRandomNumber", "parameters": "(int n, long seed)", "modifiers": "public", "return": "int", "signature": "int generateMersenneTwisterRandomNumber(int n, long seed)", "full_signature": "public int generateMersenneTwisterRandomNumber(int n, long seed)", "class_method_signature": "RandomNumber.generateMersenneTwisterRandomNumber(int n, long seed)", "testcase": false, "constructor": false}], "file": "descriptor/fingerprint/src/main/java/org/openscience/cdk/fingerprint/RandomNumber.java"}, "focal_method": {"identifier": "generateMersenneTwisterRandomNumber", "parameters": "(int n, long seed)", "modifiers": "public", "return": "int", "body": "public int generateMersenneTwisterRandomNumber(int n, long seed) {\n        rg.setSeed(seed);\n        return rg.nextInt(n);\n    }", "signature": "int generateMersenneTwisterRandomNumber(int n, long seed)", "full_signature": "public int generateMersenneTwisterRandomNumber(int n, long seed)", "class_method_signature": "RandomNumber.generateMersenneTwisterRandomNumber(int n, long seed)", "testcase": false, "constructor": false, "invocations": ["setSeed", "nextInt"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}