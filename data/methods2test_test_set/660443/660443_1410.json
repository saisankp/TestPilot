{"test_class": {"identifier": "SmartsPatternTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "IChemObjectBuilder bldr = SilentChemObjectBuilder.getInstance();", "modifier": "", "type": "IChemObjectBuilder", "declarator": "bldr = SilentChemObjectBuilder.getInstance()", "var_name": "bldr"}], "file": "tool/smarts/src/test/java/org/openscience/cdk/smarts/SmartsPatternTest.java"}, "test_case": {"identifier": "hasIsotope", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void hasIsotope() throws Exception {\n        Pattern ptrn = SmartsPattern.create(\"[!0]\");\n        assertFalse(ptrn.matches(smi(\"C\")));\n        assertTrue(ptrn.matches(smi(\"[12C]\")));\n        assertTrue(ptrn.matches(smi(\"[13C]\")));\n    }", "signature": "void hasIsotope()", "full_signature": "@Test public void hasIsotope()", "class_method_signature": "SmartsPatternTest.hasIsotope()", "testcase": true, "constructor": false, "invocations": ["create", "assertFalse", "matches", "smi", "assertTrue", "matches", "smi", "assertTrue", "matches", "smi"]}, "focal_class": {"identifier": "SmartsPattern", "superclass": "extends Pattern", "interfaces": "", "fields": [{"original_string": "private final IAtomContainer query;", "modifier": "private final", "type": "IAtomContainer", "declarator": "query", "var_name": "query"}, {"original_string": "private final Pattern        pattern;", "modifier": "private final", "type": "Pattern", "declarator": "pattern", "var_name": "pattern"}, {"original_string": "private boolean doPrep = true;", "modifier": "private", "type": "boolean", "declarator": "doPrep = true", "var_name": "doPrep"}, {"original_string": "private static final Aromaticity    arom = new Aromaticity(ElectronDonation.daylight(),\n                                                               Cycles.or(Cycles.all(), Cycles.relevant()));", "modifier": "private static final", "type": "Aromaticity", "declarator": "arom = new Aromaticity(ElectronDonation.daylight(),\n                                                               Cycles.or(Cycles.all(), Cycles.relevant()))", "var_name": "arom"}], "methods": [{"identifier": "SmartsPattern", "parameters": "(final String smarts, IChemObjectBuilder builder)", "modifiers": "private", "return": "", "signature": " SmartsPattern(final String smarts, IChemObjectBuilder builder)", "full_signature": "private  SmartsPattern(final String smarts, IChemObjectBuilder builder)", "class_method_signature": "SmartsPattern.SmartsPattern(final String smarts, IChemObjectBuilder builder)", "testcase": false, "constructor": true}, {"identifier": "prepare", "parameters": "(IAtomContainer target)", "modifiers": "public static", "return": "void", "signature": "void prepare(IAtomContainer target)", "full_signature": "public static void prepare(IAtomContainer target)", "class_method_signature": "SmartsPattern.prepare(IAtomContainer target)", "testcase": false, "constructor": false}, {"identifier": "setPrepare", "parameters": "(boolean doPrep)", "modifiers": "public", "return": "SmartsPattern", "signature": "SmartsPattern setPrepare(boolean doPrep)", "full_signature": "public SmartsPattern setPrepare(boolean doPrep)", "class_method_signature": "SmartsPattern.setPrepare(boolean doPrep)", "testcase": false, "constructor": false}, {"identifier": "match", "parameters": "(IAtomContainer container)", "modifiers": "@Override public", "return": "int[]", "signature": "int[] match(IAtomContainer container)", "full_signature": "@Override public int[] match(IAtomContainer container)", "class_method_signature": "SmartsPattern.match(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "matchAll", "parameters": "(final IAtomContainer target)", "modifiers": "@Override public", "return": "Mappings", "signature": "Mappings matchAll(final IAtomContainer target)", "full_signature": "@Override public Mappings matchAll(final IAtomContainer target)", "class_method_signature": "SmartsPattern.matchAll(final IAtomContainer target)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String smarts, IChemObjectBuilder builder)", "modifiers": "public static", "return": "SmartsPattern", "signature": "SmartsPattern create(String smarts, IChemObjectBuilder builder)", "full_signature": "public static SmartsPattern create(String smarts, IChemObjectBuilder builder)", "class_method_signature": "SmartsPattern.create(String smarts, IChemObjectBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String smarts)", "modifiers": "public static", "return": "SmartsPattern", "signature": "SmartsPattern create(String smarts)", "full_signature": "public static SmartsPattern create(String smarts)", "class_method_signature": "SmartsPattern.create(String smarts)", "testcase": false, "constructor": false}], "file": "tool/smarts/src/main/java/org/openscience/cdk/smarts/SmartsPattern.java"}, "focal_method": {"identifier": "create", "parameters": "(String smarts, IChemObjectBuilder builder)", "modifiers": "public static", "return": "SmartsPattern", "body": "public static SmartsPattern create(String smarts, IChemObjectBuilder builder) {\n        return new SmartsPattern(smarts, builder);\n    }", "signature": "SmartsPattern create(String smarts, IChemObjectBuilder builder)", "full_signature": "public static SmartsPattern create(String smarts, IChemObjectBuilder builder)", "class_method_signature": "SmartsPattern.create(String smarts, IChemObjectBuilder builder)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}