{"test_class": {"identifier": "TestInternalGrammarDocument", "superclass": "", "interfaces": "", "fields": [], "file": "org.jvoicexml/src/test/java/org/jvoicexml/interpreter/grammar/TestInternalGrammarDocument.java"}, "test_case": {"identifier": "testHashCodeInternal", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHashCodeInternal() throws Exception {\n        final VoiceXmlDocument doc1 = new VoiceXmlDocument();\n        final Vxml vxml1 = doc1.getVxml();\n        final Form form1 = vxml1.appendChild(Form.class);\n        final Grammar grammar1 = form1.appendChild(Grammar.class);\n        grammar1.setVersion(\"1.0\");\n        grammar1.setType(GrammarType.SRGS_XML);\n        final Rule rule1 = grammar1.appendChild(Rule.class);\n        final OneOf oneof1 = rule1.appendChild(OneOf.class);\n        final Item item11 = oneof1.appendChild(Item.class);\n        item11.addText(\"visa\");\n        final Item item12 = oneof1.appendChild(Item.class);\n        item12.addText(\"mastercard\");\n        final Item item13 = oneof1.appendChild(Item.class);\n        item13.addText(\"american express\");\n        final InternalGrammarDocument document1 = new InternalGrammarDocument(\n                grammar1);\n\n        final VoiceXmlDocument doc2 = new VoiceXmlDocument();\n        final Vxml vxml2 = doc2.getVxml();\n        final Form form2 = vxml2.appendChild(Form.class);\n        final Grammar grammar2 = form2.appendChild(Grammar.class);\n        grammar2.setVersion(\"1.0\");\n        grammar2.setType(GrammarType.SRGS_XML);\n        final Rule rule2 = grammar2.appendChild(Rule.class);\n        final OneOf oneof2 = rule2.appendChild(OneOf.class);\n        final Item item21 = oneof2.appendChild(Item.class);\n        item21.addText(\"visa\");\n        final Item item22 = oneof2.appendChild(Item.class);\n        item22.addText(\"mastercard\");\n        final Item item23 = oneof2.appendChild(Item.class);\n        item23.addText(\"american express\");\n        final InternalGrammarDocument document2 = new InternalGrammarDocument(\n                grammar2);\n        Assert.assertEquals(document1.hashCode(), document2.hashCode());\n    }", "signature": "void testHashCodeInternal()", "full_signature": "@Test public void testHashCodeInternal()", "class_method_signature": "TestInternalGrammarDocument.testHashCodeInternal()", "testcase": true, "constructor": false, "invocations": ["getVxml", "appendChild", "appendChild", "setVersion", "setType", "appendChild", "appendChild", "appendChild", "addText", "appendChild", "addText", "appendChild", "addText", "getVxml", "appendChild", "appendChild", "setVersion", "setType", "appendChild", "appendChild", "appendChild", "addText", "appendChild", "addText", "appendChild", "addText", "assertEquals", "hashCode", "hashCode"]}, "focal_class": {"identifier": "InternalGrammarDocument", "superclass": "", "interfaces": "implements GrammarDocument", "fields": [{"original_string": "private static final Logger LOGGER = LogManager\n            .getLogger(InternalGrammarDocument.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LogManager\n            .getLogger(InternalGrammarDocument.class)", "var_name": "LOGGER"}, {"original_string": "private static final int HASH_CODE_BASE = 13;", "modifier": "private static final", "type": "int", "declarator": "HASH_CODE_BASE = 13", "var_name": "HASH_CODE_BASE"}, {"original_string": "private static final int HASH_CODE_MULTIPLIER = 31;", "modifier": "private static final", "type": "int", "declarator": "HASH_CODE_MULTIPLIER = 31", "var_name": "HASH_CODE_MULTIPLIER"}, {"original_string": "private GrammarType type;", "modifier": "private", "type": "GrammarType", "declarator": "type", "var_name": "type"}, {"original_string": "private ModeType mode;", "modifier": "private", "type": "ModeType", "declarator": "mode", "var_name": "mode"}, {"original_string": "private String document;", "modifier": "private", "type": "String", "declarator": "document", "var_name": "document"}, {"original_string": "private final String charset;", "modifier": "private final", "type": "String", "declarator": "charset", "var_name": "charset"}, {"original_string": "private final byte[] buffer;", "modifier": "private final", "type": "byte[]", "declarator": "buffer", "var_name": "buffer"}, {"original_string": "private final Grammar grammar;", "modifier": "private final", "type": "Grammar", "declarator": "grammar", "var_name": "grammar"}, {"original_string": "private URI uri;", "modifier": "private", "type": "URI", "declarator": "uri", "var_name": "uri"}], "methods": [{"identifier": "InternalGrammarDocument", "parameters": "(final Grammar node)", "modifiers": "public", "return": "", "signature": " InternalGrammarDocument(final Grammar node)", "full_signature": "public  InternalGrammarDocument(final Grammar node)", "class_method_signature": "InternalGrammarDocument.InternalGrammarDocument(final Grammar node)", "testcase": false, "constructor": true}, {"identifier": "isCacheable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCacheable()", "full_signature": "@Override public boolean isCacheable()", "class_method_signature": "InternalGrammarDocument.isCacheable()", "testcase": false, "constructor": false}, {"identifier": "setURI", "parameters": "(final URI value)", "modifiers": "@Override public", "return": "void", "signature": "void setURI(final URI value)", "full_signature": "@Override public void setURI(final URI value)", "class_method_signature": "InternalGrammarDocument.setURI(final URI value)", "testcase": false, "constructor": false}, {"identifier": "getURI", "parameters": "()", "modifiers": "@Override public", "return": "URI", "signature": "URI getURI()", "full_signature": "@Override public URI getURI()", "class_method_signature": "InternalGrammarDocument.getURI()", "testcase": false, "constructor": false}, {"identifier": "getMediaType", "parameters": "()", "modifiers": "@Override public", "return": "GrammarType", "signature": "GrammarType getMediaType()", "full_signature": "@Override public GrammarType getMediaType()", "class_method_signature": "InternalGrammarDocument.getMediaType()", "testcase": false, "constructor": false}, {"identifier": "setMediaType", "parameters": "(final GrammarType grammartype)", "modifiers": "@Override public", "return": "void", "signature": "void setMediaType(final GrammarType grammartype)", "full_signature": "@Override public void setMediaType(final GrammarType grammartype)", "class_method_signature": "InternalGrammarDocument.setMediaType(final GrammarType grammartype)", "testcase": false, "constructor": false}, {"identifier": "isAscii", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAscii()", "full_signature": "@Override public boolean isAscii()", "class_method_signature": "InternalGrammarDocument.isAscii()", "testcase": false, "constructor": false}, {"identifier": "getBuffer", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] getBuffer()", "full_signature": "@Override public byte[] getBuffer()", "class_method_signature": "InternalGrammarDocument.getBuffer()", "testcase": false, "constructor": false}, {"identifier": "getDocument", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDocument()", "full_signature": "@Override public String getDocument()", "class_method_signature": "InternalGrammarDocument.getDocument()", "testcase": false, "constructor": false}, {"identifier": "getTextContent", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getTextContent()", "full_signature": "@Override public String getTextContent()", "class_method_signature": "InternalGrammarDocument.getTextContent()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "InternalGrammarDocument.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final GrammarDocument other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final GrammarDocument other)", "full_signature": "@Override public boolean equals(final GrammarDocument other)", "class_method_signature": "InternalGrammarDocument.equals(final GrammarDocument other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "InternalGrammarDocument.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getModeType", "parameters": "()", "modifiers": "@Override public", "return": "ModeType", "signature": "ModeType getModeType()", "full_signature": "@Override public ModeType getModeType()", "class_method_signature": "InternalGrammarDocument.getModeType()", "testcase": false, "constructor": false}, {"identifier": "setModeType", "parameters": "(final ModeType modeType)", "modifiers": "@Override public", "return": "void", "signature": "void setModeType(final ModeType modeType)", "full_signature": "@Override public void setModeType(final ModeType modeType)", "class_method_signature": "InternalGrammarDocument.setModeType(final ModeType modeType)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "InternalGrammarDocument.toString()", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/interpreter/grammar/InternalGrammarDocument.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int hashCode() {\n        final int prime = HASH_CODE_MULTIPLIER;\n        return prime * HASH_CODE_BASE + Arrays.hashCode(buffer);\n    }", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "InternalGrammarDocument.hashCode()", "testcase": false, "constructor": false, "invocations": ["hashCode"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}