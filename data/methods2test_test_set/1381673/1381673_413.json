{"test_class": {"identifier": "DecimalFunctionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DecimalFunction decimalFunction;", "modifier": "private", "type": "DecimalFunction", "declarator": "decimalFunction", "var_name": "decimalFunction"}], "file": "kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/runtime/functions/DecimalFunctionTest.java"}, "test_case": {"identifier": "invokeRoundingOdd", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invokeRoundingOdd() {\n        FunctionTestUtil.assertResult(decimalFunction.invoke(BigDecimal.valueOf(10.35), BigDecimal.ONE), BigDecimal.valueOf(10.4));\n    }", "signature": "void invokeRoundingOdd()", "full_signature": "@Test public void invokeRoundingOdd()", "class_method_signature": "DecimalFunctionTest.invokeRoundingOdd()", "testcase": true, "constructor": false, "invocations": ["assertResult", "invoke", "valueOf", "valueOf"]}, "focal_class": {"identifier": "DecimalFunction", "superclass": "extends BaseFEELFunction", "interfaces": "", "fields": [], "methods": [{"identifier": "DecimalFunction", "parameters": "()", "modifiers": "public", "return": "", "signature": " DecimalFunction()", "full_signature": "public  DecimalFunction()", "class_method_signature": "DecimalFunction.DecimalFunction()", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(@ParameterName( \"n\" ) BigDecimal n, @ParameterName( \"scale\" ) BigDecimal scale)", "modifiers": "public", "return": "FEELFnResult<BigDecimal>", "signature": "FEELFnResult<BigDecimal> invoke(@ParameterName( \"n\" ) BigDecimal n, @ParameterName( \"scale\" ) BigDecimal scale)", "full_signature": "public FEELFnResult<BigDecimal> invoke(@ParameterName( \"n\" ) BigDecimal n, @ParameterName( \"scale\" ) BigDecimal scale)", "class_method_signature": "DecimalFunction.invoke(@ParameterName( \"n\" ) BigDecimal n, @ParameterName( \"scale\" ) BigDecimal scale)", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/runtime/functions/DecimalFunction.java"}, "focal_method": {"identifier": "invoke", "parameters": "(@ParameterName( \"n\" ) BigDecimal n, @ParameterName( \"scale\" ) BigDecimal scale)", "modifiers": "public", "return": "FEELFnResult<BigDecimal>", "body": "public FEELFnResult<BigDecimal> invoke(@ParameterName( \"n\" ) BigDecimal n, @ParameterName( \"scale\" ) BigDecimal scale) {\n        if ( n == null ) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"n\", \"cannot be null\"));\n        }\n        if ( scale == null ) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"scale\", \"cannot be null\"));\n        }\n        \n        return FEELFnResult.ofResult( n.setScale( scale.intValue(), BigDecimal.ROUND_HALF_EVEN ) );\n    }", "signature": "FEELFnResult<BigDecimal> invoke(@ParameterName( \"n\" ) BigDecimal n, @ParameterName( \"scale\" ) BigDecimal scale)", "full_signature": "public FEELFnResult<BigDecimal> invoke(@ParameterName( \"n\" ) BigDecimal n, @ParameterName( \"scale\" ) BigDecimal scale)", "class_method_signature": "DecimalFunction.invoke(@ParameterName( \"n\" ) BigDecimal n, @ParameterName( \"scale\" ) BigDecimal scale)", "testcase": false, "constructor": false, "invocations": ["ofError", "ofError", "ofResult", "setScale", "intValue"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}