{"test_class": {"identifier": "IterationTest", "superclass": "", "interfaces": "", "fields": [], "file": "concurrency/src/test/java/com/insightfullogic/java8/examples/chapter3/IterationTest.java"}, "test_case": {"identifier": "evaluatedPrintOuts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void evaluatedPrintOuts() {\n        Iteration iteration = new Iteration();\n        iteration.internalCountArtistsFromLondonPrinted(SampleData.membersOfTheBeatles);\n    }", "signature": "void evaluatedPrintOuts()", "full_signature": "@Test public void evaluatedPrintOuts()", "class_method_signature": "IterationTest.evaluatedPrintOuts()", "testcase": true, "constructor": false, "invocations": ["internalCountArtistsFromLondonPrinted"]}, "focal_class": {"identifier": "Iteration", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "externalCountArtistsFromLondon", "parameters": "(List<Artist> allArtists)", "modifiers": "public", "return": "int", "signature": "int externalCountArtistsFromLondon(List<Artist> allArtists)", "full_signature": "public int externalCountArtistsFromLondon(List<Artist> allArtists)", "class_method_signature": "Iteration.externalCountArtistsFromLondon(List<Artist> allArtists)", "testcase": false, "constructor": false}, {"identifier": "externalCountArtistsFromLondonExpanded", "parameters": "(List<Artist> allArtists)", "modifiers": "public", "return": "int", "signature": "int externalCountArtistsFromLondonExpanded(List<Artist> allArtists)", "full_signature": "public int externalCountArtistsFromLondonExpanded(List<Artist> allArtists)", "class_method_signature": "Iteration.externalCountArtistsFromLondonExpanded(List<Artist> allArtists)", "testcase": false, "constructor": false}, {"identifier": "internalCountArtistsFromLondon", "parameters": "(List<Artist> allArtists)", "modifiers": "public", "return": "long", "signature": "long internalCountArtistsFromLondon(List<Artist> allArtists)", "full_signature": "public long internalCountArtistsFromLondon(List<Artist> allArtists)", "class_method_signature": "Iteration.internalCountArtistsFromLondon(List<Artist> allArtists)", "testcase": false, "constructor": false}, {"identifier": "filterArtistsFromLondon", "parameters": "(List<Artist> allArtists)", "modifiers": "public", "return": "void", "signature": "void filterArtistsFromLondon(List<Artist> allArtists)", "full_signature": "public void filterArtistsFromLondon(List<Artist> allArtists)", "class_method_signature": "Iteration.filterArtistsFromLondon(List<Artist> allArtists)", "testcase": false, "constructor": false}, {"identifier": "filterArtistsFromLondonPrinted", "parameters": "(List<Artist> allArtists)", "modifiers": "public", "return": "void", "signature": "void filterArtistsFromLondonPrinted(List<Artist> allArtists)", "full_signature": "public void filterArtistsFromLondonPrinted(List<Artist> allArtists)", "class_method_signature": "Iteration.filterArtistsFromLondonPrinted(List<Artist> allArtists)", "testcase": false, "constructor": false}, {"identifier": "internalCountArtistsFromLondonPrinted", "parameters": "(List<Artist> allArtists)", "modifiers": "public", "return": "long", "signature": "long internalCountArtistsFromLondonPrinted(List<Artist> allArtists)", "full_signature": "public long internalCountArtistsFromLondonPrinted(List<Artist> allArtists)", "class_method_signature": "Iteration.internalCountArtistsFromLondonPrinted(List<Artist> allArtists)", "testcase": false, "constructor": false}], "file": "concurrency/src/main/java/com/insightfullogic/java8/examples/chapter3/Iteration.java"}, "focal_method": {"identifier": "internalCountArtistsFromLondonPrinted", "parameters": "(List<Artist> allArtists)", "modifiers": "public", "return": "long", "body": "public long internalCountArtistsFromLondonPrinted(List<Artist> allArtists) {\n        // BEGIN internal_count_londoners_printed\nlong count = allArtists.stream()\n                       .filter(artist -> {\n                           System.out.println(artist.getName());\n                           return artist.isFrom(\"London\");\n                       })\n                       .count();\n        // END internal_count_londoners_printed\n        return count;\n    }", "signature": "long internalCountArtistsFromLondonPrinted(List<Artist> allArtists)", "full_signature": "public long internalCountArtistsFromLondonPrinted(List<Artist> allArtists)", "class_method_signature": "Iteration.internalCountArtistsFromLondonPrinted(List<Artist> allArtists)", "testcase": false, "constructor": false, "invocations": ["count", "filter", "stream", "println", "getName", "isFrom"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}