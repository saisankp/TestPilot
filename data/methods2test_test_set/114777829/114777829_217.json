{"test_class": {"identifier": "HttpFilterTest", "superclass": "", "interfaces": "", "fields": [], "file": "servlet/api/src/test/java/javax/servlet/http/HttpFilterTest.java"}, "test_case": {"identifier": "testDoFilter", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testDoFilter() throws Exception {\n        HttpServletRequest request = null;\n        HttpServletResponse response = null;\n        FilterChain chain = new TestFilterChain();\n        HttpFilter filter = new TestHttpFilter();\n        filter.doFilter(request, response, chain);\n    }", "signature": "void testDoFilter()", "full_signature": "@Test void testDoFilter()", "class_method_signature": "HttpFilterTest.testDoFilter()", "testcase": true, "constructor": false, "invocations": ["doFilter"]}, "focal_class": {"identifier": "HttpFilter", "superclass": "extends GenericFilter", "interfaces": "", "fields": [], "methods": [{"identifier": "doFilter", "parameters": "(ServletRequest request, ServletResponse response, FilterChain chain)", "modifiers": "@Override public", "return": "void", "signature": "void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)", "full_signature": "@Override public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)", "class_method_signature": "HttpFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain chain)", "testcase": false, "constructor": false}, {"identifier": "doFilter", "parameters": "(HttpServletRequest request, HttpServletResponse response, FilterChain chain)", "modifiers": "protected", "return": "void", "signature": "void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain)", "full_signature": "protected void doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain)", "class_method_signature": "HttpFilter.doFilter(HttpServletRequest request, HttpServletResponse response, FilterChain chain)", "testcase": false, "constructor": false}], "file": "servlet/api/src/main/java/javax/servlet/http/HttpFilter.java"}, "focal_method": {"identifier": "doFilter", "parameters": "(ServletRequest request, ServletResponse response, FilterChain chain)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)\n            throws IOException, ServletException {\n        if (request instanceof HttpServletRequest && response instanceof HttpServletResponse) {\n            HttpServletRequest httpServletRequest = (HttpServletRequest) request;\n            HttpServletResponse httpServletResponse = (HttpServletResponse) response;\n            this.doFilter(httpServletRequest, httpServletResponse, chain);\n        } else {\n            throw new ServletException(\"not a HTTP request or a HTTP response\");\n        }\n\n    }", "signature": "void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)", "full_signature": "@Override public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)", "class_method_signature": "HttpFilter.doFilter(ServletRequest request, ServletResponse response, FilterChain chain)", "testcase": false, "constructor": false, "invocations": ["doFilter"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}