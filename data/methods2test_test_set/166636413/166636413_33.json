{"test_class": {"identifier": "RegexUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "collect_app/src/test/java/org/odk/collect/android/utilities/RegexUtilsTest.java"}, "test_case": {"identifier": "normalizeFormNameTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void normalizeFormNameTest() {\n        assertNull(normalizeFormName(null, false));\n        assertEquals(\"Lorem\", normalizeFormName(\"Lorem\", false));\n        assertEquals(\"Lorem ipsum\", normalizeFormName(\"Lorem ipsum\", false));\n        assertEquals(\"Lorem ipsum\", normalizeFormName(\"Lorem\\nipsum\", false));\n        assertEquals(\"Lorem  ipsum\", normalizeFormName(\"Lorem\\n\\nipsum\", false));\n        assertEquals(\" Lorem ipsum \", normalizeFormName(\"\\nLorem\\nipsum\\n\", false));\n\n        assertNull(normalizeFormName(null, true));\n        assertNull(normalizeFormName(\"Lorem\", true));\n        assertNull(normalizeFormName(\"Lorem ipsum\", true));\n        assertEquals(\"Lorem ipsum\", normalizeFormName(\"Lorem\\nipsum\", true));\n        assertEquals(\"Lorem  ipsum\", normalizeFormName(\"Lorem\\n\\nipsum\", true));\n        assertEquals(\" Lorem ipsum \", normalizeFormName(\"\\nLorem\\nipsum\\n\", true));\n    }", "signature": "void normalizeFormNameTest()", "full_signature": "@Test public void normalizeFormNameTest()", "class_method_signature": "RegexUtilsTest.normalizeFormNameTest()", "testcase": true, "constructor": false, "invocations": ["assertNull", "normalizeFormName", "assertEquals", "normalizeFormName", "assertEquals", "normalizeFormName", "assertEquals", "normalizeFormName", "assertEquals", "normalizeFormName", "assertEquals", "normalizeFormName", "assertNull", "normalizeFormName", "assertNull", "normalizeFormName", "assertNull", "normalizeFormName", "assertEquals", "normalizeFormName", "assertEquals", "normalizeFormName", "assertEquals", "normalizeFormName"]}, "focal_class": {"identifier": "RegexUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CONTROL_CHAR_REGEX = \"[\\\\p{Cntrl}]\";", "modifier": "private static final", "type": "String", "declarator": "CONTROL_CHAR_REGEX = \"[\\\\p{Cntrl}]\"", "var_name": "CONTROL_CHAR_REGEX"}, {"original_string": "private static final Pattern CONTROL_CHAR_PATTERN = Pattern.compile(CONTROL_CHAR_REGEX);", "modifier": "private static final", "type": "Pattern", "declarator": "CONTROL_CHAR_PATTERN = Pattern.compile(CONTROL_CHAR_REGEX)", "var_name": "CONTROL_CHAR_PATTERN"}], "methods": [{"identifier": "RegexUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " RegexUtils()", "full_signature": "private  RegexUtils()", "class_method_signature": "RegexUtils.RegexUtils()", "testcase": false, "constructor": true}, {"identifier": "normalizeFormName", "parameters": "(String formName, boolean returnNullIfNothingChanged)", "modifiers": "public static", "return": "String", "signature": "String normalizeFormName(String formName, boolean returnNullIfNothingChanged)", "full_signature": "public static String normalizeFormName(String formName, boolean returnNullIfNothingChanged)", "class_method_signature": "RegexUtils.normalizeFormName(String formName, boolean returnNullIfNothingChanged)", "testcase": false, "constructor": false}], "file": "collect_app/src/main/java/org/odk/collect/android/utilities/RegexUtils.java"}, "focal_method": {"identifier": "normalizeFormName", "parameters": "(String formName, boolean returnNullIfNothingChanged)", "modifiers": "public static", "return": "String", "body": "public static String normalizeFormName(String formName, boolean returnNullIfNothingChanged) {\n        if (formName == null) {\n            return null;\n        }\n\n        Matcher matcher = CONTROL_CHAR_PATTERN.matcher(formName);\n        return matcher.find()\n                ? matcher.replaceAll(\" \")\n                : (returnNullIfNothingChanged ? null : formName);\n    }", "signature": "String normalizeFormName(String formName, boolean returnNullIfNothingChanged)", "full_signature": "public static String normalizeFormName(String formName, boolean returnNullIfNothingChanged)", "class_method_signature": "RegexUtils.normalizeFormName(String formName, boolean returnNullIfNothingChanged)", "testcase": false, "constructor": false, "invocations": ["matcher", "find", "replaceAll"]}, "repository": {"repo_id": 166636413, "url": "https://github.com/fieldsight/fieldsight-mobile", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 14, "size": 41030, "license": "licensed"}}