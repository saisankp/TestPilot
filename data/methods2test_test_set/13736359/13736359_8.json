{"test_class": {"identifier": "MultipleClientReportDownloaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MultipleClientReportDownloader multipleClientReportDownloader;", "modifier": "private", "type": "MultipleClientReportDownloader", "declarator": "multipleClientReportDownloader", "var_name": "multipleClientReportDownloader"}, {"original_string": "private ReportDefinition reportDefinition;", "modifier": "private", "type": "ReportDefinition", "declarator": "reportDefinition", "var_name": "reportDefinition"}], "file": "aw-reporting/src/test/java/com/google/api/ads/adwords/awreporting/downloader/MultipleClientReportDownloaderTest.java"}, "test_case": {"identifier": "testDownloadReports", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDownloadReports() throws ReportProcessingException {\n\n    AdWordsSession.Builder sessionBuilder =\n      new AdWordsSession.Builder().withEndpoint(\"http://www.google.com\")\n        .withDeveloperToken(\"DeveloperToken\")\n        .withClientCustomerId(\"123\")\n        .withUserAgent(\"UserAgent\")\n        .withOAuth2Credential(new GoogleCredential.Builder().build());\n\n    Set<Long> cids = ImmutableSet.of(1L, 2L, 3L, 4L, 5L);\n    Collection<File> results =\n        multipleClientReportDownloader.downloadReports(sessionBuilder, reportDefinition, cids);\n\n    assertEquals(cids.size(), results.size());\n  }", "signature": "void testDownloadReports()", "full_signature": "@Test public void testDownloadReports()", "class_method_signature": "MultipleClientReportDownloaderTest.testDownloadReports()", "testcase": true, "constructor": false, "invocations": ["withOAuth2Credential", "withUserAgent", "withClientCustomerId", "withDeveloperToken", "withEndpoint", "build", "of", "downloadReports", "assertEquals", "size", "size"]}, "focal_class": {"identifier": "MultipleClientReportDownloader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger =\n      LoggerFactory.getLogger(MultipleClientReportDownloader.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger =\n      LoggerFactory.getLogger(MultipleClientReportDownloader.class)", "var_name": "logger"}, {"original_string": "private static final String SEPARATOR = System.getProperty(\"line.separator\");", "modifier": "private static final", "type": "String", "declarator": "SEPARATOR = System.getProperty(\"line.separator\")", "var_name": "SEPARATOR"}, {"original_string": "private final int numThreads;", "modifier": "private final", "type": "int", "declarator": "numThreads", "var_name": "numThreads"}], "methods": [{"identifier": "MultipleClientReportDownloader", "parameters": "(int numThreads)", "modifiers": "public", "return": "", "signature": " MultipleClientReportDownloader(int numThreads)", "full_signature": "public  MultipleClientReportDownloader(int numThreads)", "class_method_signature": "MultipleClientReportDownloader.MultipleClientReportDownloader(int numThreads)", "testcase": false, "constructor": true}, {"identifier": "downloadReports", "parameters": "(\n      AdWordsSession.Builder sessionBuilder,\n      ReportDefinition reportDefinition,\n      Set<Long> clientCustomerIds)", "modifiers": "public", "return": "Collection<File>", "signature": "Collection<File> downloadReports(\n      AdWordsSession.Builder sessionBuilder,\n      ReportDefinition reportDefinition,\n      Set<Long> clientCustomerIds)", "full_signature": "public Collection<File> downloadReports(\n      AdWordsSession.Builder sessionBuilder,\n      ReportDefinition reportDefinition,\n      Set<Long> clientCustomerIds)", "class_method_signature": "MultipleClientReportDownloader.downloadReports(\n      AdWordsSession.Builder sessionBuilder,\n      ReportDefinition reportDefinition,\n      Set<Long> clientCustomerIds)", "testcase": false, "constructor": false}, {"identifier": "genCallableReportDownloader", "parameters": "(\n      ImmutableAdWordsSession session, ReportDefinition reportDefinition)", "modifiers": "protected", "return": "CallableReportDownloader", "signature": "CallableReportDownloader genCallableReportDownloader(\n      ImmutableAdWordsSession session, ReportDefinition reportDefinition)", "full_signature": "protected CallableReportDownloader genCallableReportDownloader(\n      ImmutableAdWordsSession session, ReportDefinition reportDefinition)", "class_method_signature": "MultipleClientReportDownloader.genCallableReportDownloader(\n      ImmutableAdWordsSession session, ReportDefinition reportDefinition)", "testcase": false, "constructor": false}], "file": "aw-reporting/src/main/java/com/google/api/ads/adwords/awreporting/downloader/MultipleClientReportDownloader.java"}, "focal_method": {"identifier": "downloadReports", "parameters": "(\n      AdWordsSession.Builder sessionBuilder,\n      ReportDefinition reportDefinition,\n      Set<Long> clientCustomerIds)", "modifiers": "public", "return": "Collection<File>", "body": "public Collection<File> downloadReports(\n      AdWordsSession.Builder sessionBuilder,\n      ReportDefinition reportDefinition,\n      Set<Long> clientCustomerIds)\n      throws ReportProcessingException {\n    ExecutorService executorService = Executors.newFixedThreadPool(numThreads);\n    Stopwatch stopwatch = Stopwatch.createStarted();\n    logger.info(\"Downloading {\" + reportDefinition.getReportType() + \"} reports...\");\n\n    List<Long> taskIds = Lists.newArrayList();\n    List<CallableReportDownloader> taskJobs = Lists.newArrayList();\n    Map<Long, String> failures = Maps.newHashMap();\n    ImmutableAdWordsSession session = null;\n    for (Long clientCustomerId : clientCustomerIds) {\n      try {\n        session = AdWordsSessionUtil.buildImmutableSessionForCid(sessionBuilder, clientCustomerId);\n      } catch (ValidationException e) {\n        logger.error(\"Failed to create valid adwords session for CID \" + clientCustomerId\n            + \", skipping it.\");\n        failures.put(clientCustomerId, e.getMessage());\n        continue;\n      }\n\n      taskIds.add(clientCustomerId);\n      taskJobs.add(genCallableReportDownloader(session, reportDefinition));\n    }\n\n    List<Future<File>> taskResults;\n    try {\n      //Note that invokeAll() returns results in the same sequence as input tasks.\n      taskResults = executorService.invokeAll(taskJobs);\n    } catch (InterruptedException e) {\n      throw new ReportProcessingException(\n        \"MultipleClientReportDownloader encounters InterruptedException.\", e);\n    }\n\n    List<File> results = Lists.newArrayList();\n    for (int i = 0; i < taskResults.size(); i++) {\n      try {\n        results.add(taskResults.get(i).get());\n      } catch (ExecutionException e) {\n        failures.put(taskIds.get(i), e.getMessage());\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new ReportProcessingException(\n            \"MultiClientReportDownloader encounters InterruptedException.\", e);\n      }\n    }\n\n    executorService.shutdown();\n    stopwatch.stop();\n\n    logger.info(\"Downloaded reports for \" + clientCustomerIds.size() + \" accounts in \"\n        + stopwatch.elapsed(TimeUnit.SECONDS) + \" seconds.\");\n    logger.info(\"Result: \" +  results.size() + \" successes, \" + failures.size() + \" failures.\");\n    if (!failures.isEmpty()) {\n      StringBuilder sb = new StringBuilder(\"*** Account IDs of download failures ***\");\n      sb.append(SEPARATOR);\n      sb.append(Joiner.on(SEPARATOR).withKeyValueSeparator(\": \").join(failures));\n      logger.error(sb.toString());\n    }\n\n    return results;\n  }", "signature": "Collection<File> downloadReports(\n      AdWordsSession.Builder sessionBuilder,\n      ReportDefinition reportDefinition,\n      Set<Long> clientCustomerIds)", "full_signature": "public Collection<File> downloadReports(\n      AdWordsSession.Builder sessionBuilder,\n      ReportDefinition reportDefinition,\n      Set<Long> clientCustomerIds)", "class_method_signature": "MultipleClientReportDownloader.downloadReports(\n      AdWordsSession.Builder sessionBuilder,\n      ReportDefinition reportDefinition,\n      Set<Long> clientCustomerIds)", "testcase": false, "constructor": false, "invocations": ["newFixedThreadPool", "createStarted", "info", "getReportType", "newArrayList", "newArrayList", "newHashMap", "buildImmutableSessionForCid", "error", "put", "getMessage", "add", "add", "genCallableReportDownloader", "invokeAll", "newArrayList", "size", "add", "get", "get", "put", "get", "getMessage", "interrupt", "currentThread", "shutdown", "stop", "info", "size", "elapsed", "info", "size", "size", "isEmpty", "append", "append", "join", "withKeyValueSeparator", "on", "error", "toString"]}, "repository": {"repo_id": 13736359, "url": "https://github.com/googleads/aw-reporting", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 120, "size": 5133, "license": "licensed"}}