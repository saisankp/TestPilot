{"test_class": {"identifier": "VectorToRasterProcessTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/unsupported/process-feature/src/test/java/org/geotools/process/vector/VectorToRasterProcessTest.java"}, "test_case": {"identifier": "rasterizePoints", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void rasterizePoints() throws Exception {\n        ReferencedEnvelope bounds = new ReferencedEnvelope(-10, 10, -20, 20, DefaultEngineeringCRS.GENERIC_2D);\n        Dimension gridDim = new Dimension(100, 100);\n        \n        SimpleFeatureCollection features = createPoints(bounds, gridDim);\n        \n        String covName = \"Test\";\n        ProgressListener monitor = null;\n\n        GridCoverage2D cov = VectorToRasterProcess.process(\n                features, \"value\", gridDim, bounds, covName, monitor);\n        \n        SimpleFeatureIterator iter = features.features();\n        int[] covValues = new int[1];\n        try {\n            while (iter.hasNext()) {\n                SimpleFeature feature = iter.next();\n                Coordinate coord = ((Geometry)feature.getDefaultGeometry()).getCoordinate();\n                Point2D worldPos = new Point2D.Double(coord.x, coord.y);\n                int value = (Integer) feature.getAttribute(\"value\");\n                \n                cov.evaluate(worldPos, covValues);\n                assertEquals(value, covValues[0]);\n            }\n        } finally {\n            iter.close();\n        }\n        \n    }", "signature": "void rasterizePoints()", "full_signature": "@Test public void rasterizePoints()", "class_method_signature": "VectorToRasterProcessTest.rasterizePoints()", "testcase": true, "constructor": false, "invocations": ["createPoints", "process", "features", "hasNext", "next", "getCoordinate", "getDefaultGeometry", "getAttribute", "evaluate", "assertEquals", "close"]}, "focal_class": {"identifier": "VectorToRasterProcess", "superclass": "", "interfaces": "implements VectorProcess", "fields": [{"original_string": "private static final int COORD_GRID_CHUNK_SIZE = 1000;", "modifier": "private static final", "type": "int", "declarator": "COORD_GRID_CHUNK_SIZE = 1000", "var_name": "COORD_GRID_CHUNK_SIZE"}, {"original_string": "private TransferType transferType;", "modifier": "private", "type": "TransferType", "declarator": "transferType", "var_name": "transferType"}, {"original_string": "private ValueSource valueSource;", "modifier": "private", "type": "ValueSource", "declarator": "valueSource", "var_name": "valueSource"}, {"original_string": "GridCoverage2D result;", "modifier": "", "type": "GridCoverage2D", "declarator": "result", "var_name": "result"}, {"original_string": "private Number minAttValue;", "modifier": "private", "type": "Number", "declarator": "minAttValue", "var_name": "minAttValue"}, {"original_string": "private Number maxAttValue;", "modifier": "private", "type": "Number", "declarator": "maxAttValue", "var_name": "maxAttValue"}, {"original_string": "private float nodataValue;", "modifier": "private", "type": "float", "declarator": "nodataValue", "var_name": "nodataValue"}, {"original_string": "private ReferencedEnvelope extent;", "modifier": "private", "type": "ReferencedEnvelope", "declarator": "extent", "var_name": "extent"}, {"original_string": "private Geometry extentGeometry;", "modifier": "private", "type": "Geometry", "declarator": "extentGeometry", "var_name": "extentGeometry"}, {"original_string": "private GridGeometry2D gridGeom;", "modifier": "private", "type": "GridGeometry2D", "declarator": "gridGeom", "var_name": "gridGeom"}, {"original_string": "private boolean transformFeatures;", "modifier": "private", "type": "boolean", "declarator": "transformFeatures", "var_name": "transformFeatures"}, {"original_string": "private MathTransform featureToRasterTransform;", "modifier": "private", "type": "MathTransform", "declarator": "featureToRasterTransform", "var_name": "featureToRasterTransform"}, {"original_string": "private int[] coordGridX = new int[COORD_GRID_CHUNK_SIZE];", "modifier": "private", "type": "int[]", "declarator": "coordGridX = new int[COORD_GRID_CHUNK_SIZE]", "var_name": "coordGridX"}, {"original_string": "private int[] coordGridY = new int[COORD_GRID_CHUNK_SIZE];", "modifier": "private", "type": "int[]", "declarator": "coordGridY = new int[COORD_GRID_CHUNK_SIZE]", "var_name": "coordGridY"}, {"original_string": "TiledImage image;", "modifier": "", "type": "TiledImage", "declarator": "image", "var_name": "image"}, {"original_string": "Graphics2D graphics;", "modifier": "", "type": "Graphics2D", "declarator": "graphics", "var_name": "graphics"}], "methods": [{"identifier": "process", "parameters": "(\n            SimpleFeatureCollection features,\n            Object attribute,\n            Dimension gridDim,\n            Envelope bounds,\n            String covName,\n            ProgressListener monitor)", "modifiers": "public static", "return": "GridCoverage2D", "signature": "GridCoverage2D process(\n            SimpleFeatureCollection features,\n            Object attribute,\n            Dimension gridDim,\n            Envelope bounds,\n            String covName,\n            ProgressListener monitor)", "full_signature": "public static GridCoverage2D process(\n            SimpleFeatureCollection features,\n            Object attribute,\n            Dimension gridDim,\n            Envelope bounds,\n            String covName,\n            ProgressListener monitor)", "class_method_signature": "VectorToRasterProcess.process(\n            SimpleFeatureCollection features,\n            Object attribute,\n            Dimension gridDim,\n            Envelope bounds,\n            String covName,\n            ProgressListener monitor)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(\n        @DescribeParameter(name = \"features\", description = \"Features to process\", min = 1, max = 1) SimpleFeatureCollection features,\n        @DescribeParameter(name = \"rasterWidth\", description = \"Width of the output grid in pixels\", min = 1, max = 1, minValue = 1) Integer rasterWidth,\n        @DescribeParameter(name = \"rasterHeight\", description = \"Height of the output grid in pixels\", min = 1, max = 1, minValue = 1) Integer rasterHeight,\n        @DescribeParameter(name = \"title\", description = \"Title to use for the output grid\", min = 0, max = 1, defaultValue = \"raster\" ) String title,\n        @DescribeParameter(name = \"attribute\", description = \"Attribute name to use for the raster cell values\", min = 1, max = 1) String attribute,\n        @DescribeParameter(name = \"bounds\", description = \"Bounding box of the area to rasterize\", min = 0, max = 1) Envelope bounds,\n        ProgressListener progressListener)", "modifiers": "@DescribeResult(name = \"result\", description = \"Rasterized grid\") public", "return": "GridCoverage2D", "signature": "GridCoverage2D execute(\n        @DescribeParameter(name = \"features\", description = \"Features to process\", min = 1, max = 1) SimpleFeatureCollection features,\n        @DescribeParameter(name = \"rasterWidth\", description = \"Width of the output grid in pixels\", min = 1, max = 1, minValue = 1) Integer rasterWidth,\n        @DescribeParameter(name = \"rasterHeight\", description = \"Height of the output grid in pixels\", min = 1, max = 1, minValue = 1) Integer rasterHeight,\n        @DescribeParameter(name = \"title\", description = \"Title to use for the output grid\", min = 0, max = 1, defaultValue = \"raster\" ) String title,\n        @DescribeParameter(name = \"attribute\", description = \"Attribute name to use for the raster cell values\", min = 1, max = 1) String attribute,\n        @DescribeParameter(name = \"bounds\", description = \"Bounding box of the area to rasterize\", min = 0, max = 1) Envelope bounds,\n        ProgressListener progressListener)", "full_signature": "@DescribeResult(name = \"result\", description = \"Rasterized grid\") public GridCoverage2D execute(\n        @DescribeParameter(name = \"features\", description = \"Features to process\", min = 1, max = 1) SimpleFeatureCollection features,\n        @DescribeParameter(name = \"rasterWidth\", description = \"Width of the output grid in pixels\", min = 1, max = 1, minValue = 1) Integer rasterWidth,\n        @DescribeParameter(name = \"rasterHeight\", description = \"Height of the output grid in pixels\", min = 1, max = 1, minValue = 1) Integer rasterHeight,\n        @DescribeParameter(name = \"title\", description = \"Title to use for the output grid\", min = 0, max = 1, defaultValue = \"raster\" ) String title,\n        @DescribeParameter(name = \"attribute\", description = \"Attribute name to use for the raster cell values\", min = 1, max = 1) String attribute,\n        @DescribeParameter(name = \"bounds\", description = \"Bounding box of the area to rasterize\", min = 0, max = 1) Envelope bounds,\n        ProgressListener progressListener)", "class_method_signature": "VectorToRasterProcess.execute(\n        @DescribeParameter(name = \"features\", description = \"Features to process\", min = 1, max = 1) SimpleFeatureCollection features,\n        @DescribeParameter(name = \"rasterWidth\", description = \"Width of the output grid in pixels\", min = 1, max = 1, minValue = 1) Integer rasterWidth,\n        @DescribeParameter(name = \"rasterHeight\", description = \"Height of the output grid in pixels\", min = 1, max = 1, minValue = 1) Integer rasterHeight,\n        @DescribeParameter(name = \"title\", description = \"Title to use for the output grid\", min = 0, max = 1, defaultValue = \"raster\" ) String title,\n        @DescribeParameter(name = \"attribute\", description = \"Attribute name to use for the raster cell values\", min = 1, max = 1) String attribute,\n        @DescribeParameter(name = \"bounds\", description = \"Bounding box of the area to rasterize\", min = 0, max = 1) Envelope bounds,\n        ProgressListener progressListener)", "testcase": false, "constructor": false}, {"identifier": "processFeature", "parameters": "(SimpleFeature feature, Object attribute)", "modifiers": "protected", "return": "void", "signature": "void processFeature(SimpleFeature feature, Object attribute)", "full_signature": "protected void processFeature(SimpleFeature feature, Object attribute)", "class_method_signature": "VectorToRasterProcess.processFeature(SimpleFeature feature, Object attribute)", "testcase": false, "constructor": false}, {"identifier": "getFeatureValue", "parameters": "(SimpleFeature feature, Object attribute)", "modifiers": "private", "return": "Number", "signature": "Number getFeatureValue(SimpleFeature feature, Object attribute)", "full_signature": "private Number getFeatureValue(SimpleFeature feature, Object attribute)", "class_method_signature": "VectorToRasterProcess.getFeatureValue(SimpleFeature feature, Object attribute)", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(\n            SimpleFeatureCollection features,\n            Object attribute,\n            Dimension gridDim,\n            Envelope bounds,\n            String covName,\n            ProgressListener monitor)", "modifiers": "private", "return": "GridCoverage2D", "signature": "GridCoverage2D convert(\n            SimpleFeatureCollection features,\n            Object attribute,\n            Dimension gridDim,\n            Envelope bounds,\n            String covName,\n            ProgressListener monitor)", "full_signature": "private GridCoverage2D convert(\n            SimpleFeatureCollection features,\n            Object attribute,\n            Dimension gridDim,\n            Envelope bounds,\n            String covName,\n            ProgressListener monitor)", "class_method_signature": "VectorToRasterProcess.convert(\n            SimpleFeatureCollection features,\n            Object attribute,\n            Dimension gridDim,\n            Envelope bounds,\n            String covName,\n            ProgressListener monitor)", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(SimpleFeatureCollection features,\n            Envelope bounds, Object attribute, Dimension gridDim )", "modifiers": "private", "return": "void", "signature": "void initialize(SimpleFeatureCollection features,\n            Envelope bounds, Object attribute, Dimension gridDim )", "full_signature": "private void initialize(SimpleFeatureCollection features,\n            Envelope bounds, Object attribute, Dimension gridDim )", "class_method_signature": "VectorToRasterProcess.initialize(SimpleFeatureCollection features,\n            Envelope bounds, Object attribute, Dimension gridDim )", "testcase": false, "constructor": false}, {"identifier": "setBounds", "parameters": "( SimpleFeatureCollection features, Envelope bounds)", "modifiers": "private", "return": "void", "signature": "void setBounds( SimpleFeatureCollection features, Envelope bounds)", "full_signature": "private void setBounds( SimpleFeatureCollection features, Envelope bounds)", "class_method_signature": "VectorToRasterProcess.setBounds( SimpleFeatureCollection features, Envelope bounds)", "testcase": false, "constructor": false}, {"identifier": "createImage", "parameters": "( Dimension gridDim )", "modifiers": "private", "return": "void", "signature": "void createImage( Dimension gridDim )", "full_signature": "private void createImage( Dimension gridDim )", "class_method_signature": "VectorToRasterProcess.createImage( Dimension gridDim )", "testcase": false, "constructor": false}, {"identifier": "flattenImage", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void flattenImage()", "full_signature": "private void flattenImage()", "class_method_signature": "VectorToRasterProcess.flattenImage()", "testcase": false, "constructor": false}, {"identifier": "flattenImageToInt", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void flattenImageToInt()", "full_signature": "private void flattenImageToInt()", "class_method_signature": "VectorToRasterProcess.flattenImageToInt()", "testcase": false, "constructor": false}, {"identifier": "flattenImageToFloat", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void flattenImageToFloat()", "full_signature": "private void flattenImageToFloat()", "class_method_signature": "VectorToRasterProcess.flattenImageToFloat()", "testcase": false, "constructor": false}, {"identifier": "drawGeometry", "parameters": "(Geometries geomType, Geometry geometry)", "modifiers": "private", "return": "void", "signature": "void drawGeometry(Geometries geomType, Geometry geometry)", "full_signature": "private void drawGeometry(Geometries geomType, Geometry geometry)", "class_method_signature": "VectorToRasterProcess.drawGeometry(Geometries geomType, Geometry geometry)", "testcase": false, "constructor": false}, {"identifier": "valueToColor", "parameters": "(Number value)", "modifiers": "private", "return": "Color", "signature": "Color valueToColor(Number value)", "full_signature": "private Color valueToColor(Number value)", "class_method_signature": "VectorToRasterProcess.valueToColor(Number value)", "testcase": false, "constructor": false}], "file": "modules/unsupported/process-feature/src/main/java/org/geotools/process/vector/VectorToRasterProcess.java"}, "focal_method": {"identifier": "process", "parameters": "(\n            SimpleFeatureCollection features,\n            Object attribute,\n            Dimension gridDim,\n            Envelope bounds,\n            String covName,\n            ProgressListener monitor)", "modifiers": "public static", "return": "GridCoverage2D", "body": "public static GridCoverage2D process(\n            SimpleFeatureCollection features,\n            Object attribute,\n            Dimension gridDim,\n            Envelope bounds,\n            String covName,\n            ProgressListener monitor) throws VectorToRasterException {\n\n        VectorToRasterProcess process = new VectorToRasterProcess();\n        return process.convert(features, attribute, gridDim, bounds, covName, monitor);\n    }", "signature": "GridCoverage2D process(\n            SimpleFeatureCollection features,\n            Object attribute,\n            Dimension gridDim,\n            Envelope bounds,\n            String covName,\n            ProgressListener monitor)", "full_signature": "public static GridCoverage2D process(\n            SimpleFeatureCollection features,\n            Object attribute,\n            Dimension gridDim,\n            Envelope bounds,\n            String covName,\n            ProgressListener monitor)", "class_method_signature": "VectorToRasterProcess.process(\n            SimpleFeatureCollection features,\n            Object attribute,\n            Dimension gridDim,\n            Envelope bounds,\n            String covName,\n            ProgressListener monitor)", "testcase": false, "constructor": false, "invocations": ["convert"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}