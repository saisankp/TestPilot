{"test_class": {"identifier": "DiffListenerAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DiffListenerAdapter adapter;", "modifier": "private", "type": "DiffListenerAdapter", "declarator": "adapter", "var_name": "adapter"}, {"original_string": "private DiffHandler handler;", "modifier": "private", "type": "DiffHandler", "declarator": "handler", "var_name": "handler"}], "file": "dbfit-java/core/src/test/java/dbfit/util/DiffListenerAdapterTest.java"}, "test_case": {"identifier": "shouldDelegateToEndCell", "parameters": "()", "modifiers": "@Test @SuppressWarnings(\"unchecked\") public", "return": "void", "body": "@Test\n    @SuppressWarnings(\"unchecked\")\n    public void shouldDelegateToEndCell() {\n        MatchResult res = createResult(DataCell.class);\n\n        adapter.onEvent(res);\n\n        verify(handler).endCell(res);\n        verify(handler, never()).endRow(any(MatchResult.class));\n        verify(handler, never()).endTable(any(MatchResult.class));\n    }", "signature": "void shouldDelegateToEndCell()", "full_signature": "@Test @SuppressWarnings(\"unchecked\") public void shouldDelegateToEndCell()", "class_method_signature": "DiffListenerAdapterTest.shouldDelegateToEndCell()", "testcase": true, "constructor": false, "invocations": ["createResult", "onEvent", "endCell", "verify", "endRow", "verify", "never", "any", "endTable", "verify", "never", "any"]}, "focal_class": {"identifier": "DiffListenerAdapter", "superclass": "", "interfaces": "implements DiffListener", "fields": [{"original_string": "private DiffHandler delegate;", "modifier": "private", "type": "DiffHandler", "declarator": "delegate", "var_name": "delegate"}], "methods": [{"identifier": "from", "parameters": "(final DiffHandler handler)", "modifiers": "public static", "return": "DiffListenerAdapter", "signature": "DiffListenerAdapter from(final DiffHandler handler)", "full_signature": "public static DiffListenerAdapter from(final DiffHandler handler)", "class_method_signature": "DiffListenerAdapter.from(final DiffHandler handler)", "testcase": false, "constructor": false}, {"identifier": "DiffListenerAdapter", "parameters": "()", "modifiers": "protected", "return": "", "signature": " DiffListenerAdapter()", "full_signature": "protected  DiffListenerAdapter()", "class_method_signature": "DiffListenerAdapter.DiffListenerAdapter()", "testcase": false, "constructor": true}, {"identifier": "DiffListenerAdapter", "parameters": "(final DiffHandler delegate)", "modifiers": "public", "return": "", "signature": " DiffListenerAdapter(final DiffHandler delegate)", "full_signature": "public  DiffListenerAdapter(final DiffHandler delegate)", "class_method_signature": "DiffListenerAdapter.DiffListenerAdapter(final DiffHandler delegate)", "testcase": false, "constructor": true}, {"identifier": "setDiffHandler", "parameters": "(final DiffHandler delegate)", "modifiers": "protected", "return": "void", "signature": "void setDiffHandler(final DiffHandler delegate)", "full_signature": "protected void setDiffHandler(final DiffHandler delegate)", "class_method_signature": "DiffListenerAdapter.setDiffHandler(final DiffHandler delegate)", "testcase": false, "constructor": false}, {"identifier": "onEvent", "parameters": "(final MatchResult res)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "void", "signature": "void onEvent(final MatchResult res)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public void onEvent(final MatchResult res)", "class_method_signature": "DiffListenerAdapter.onEvent(final MatchResult res)", "testcase": false, "constructor": false}], "file": "dbfit-java/core/src/main/java/dbfit/util/DiffListenerAdapter.java"}, "focal_method": {"identifier": "onEvent", "parameters": "(final MatchResult res)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "void", "body": "@Override\n    @SuppressWarnings(\"unchecked\")\n    public void onEvent(final MatchResult res) {\n        Class type = res.getType();\n\n        if (type.equals(DataCell.class)) {\n            delegate.endCell((MatchResult<DataCell, DataCell>) res);\n        } else if (type.equals(DataRow.class)) {\n            delegate.endRow((MatchResult<DataRow, DataRow>) res);\n        } else if (type.equals(DataTable.class)) {\n            delegate.endTable((MatchResult<DataTable, DataTable>) res);\n        } else {\n            throw new IllegalArgumentException(\"Unknown type: \" + res.getType());\n        }\n    }", "signature": "void onEvent(final MatchResult res)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public void onEvent(final MatchResult res)", "class_method_signature": "DiffListenerAdapter.onEvent(final MatchResult res)", "testcase": false, "constructor": false, "invocations": ["getType", "equals", "endCell", "equals", "endRow", "equals", "endTable", "getType"]}, "repository": {"repo_id": 7283919, "url": "https://github.com/dbfit/dbfit", "language": "Java", "is_fork": false, "fork_count": 83, "stargazer_count": 181, "size": 6978, "license": "licensed"}}