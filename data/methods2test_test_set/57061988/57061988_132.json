{"test_class": {"identifier": "PasswordBasedKeyProxyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PasswordBasedKeyProxy subject;", "modifier": "private", "type": "PasswordBasedKeyProxy", "declarator": "subject", "var_name": "subject"}, {"original_string": "private String password;", "modifier": "private", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "private PasswordEncryptionService encryptionService;", "modifier": "private", "type": "PasswordEncryptionService", "declarator": "encryptionService", "var_name": "encryptionService"}], "file": "components/encryption/src/test/java/org/cloudfoundry/credhub/services/PasswordBasedKeyProxyTest.java"}, "test_case": {"identifier": "generateSalt_usesCorrectSecureRandom", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void generateSalt_usesCorrectSecureRandom() {\n    final InternalEncryptionService mockEncryptionService = mock(InternalEncryptionService.class);\n    when(mockEncryptionService.getSecureRandom()).thenReturn(new SecureRandom());\n\n    subject = new PasswordBasedKeyProxy(\"some password\", 1, mockEncryptionService);\n    subject.generateSalt();\n\n    verify(mockEncryptionService).getSecureRandom();\n  }", "signature": "void generateSalt_usesCorrectSecureRandom()", "full_signature": "@Test public void generateSalt_usesCorrectSecureRandom()", "class_method_signature": "PasswordBasedKeyProxyTest.generateSalt_usesCorrectSecureRandom()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getSecureRandom", "generateSalt", "getSecureRandom", "verify"]}, "focal_class": {"identifier": "PasswordBasedKeyProxy", "superclass": "extends LunaKeyProxy", "interfaces": "implements KeyProxy", "fields": [{"original_string": "private final SecureRandom secureRandom;", "modifier": "private final", "type": "SecureRandom", "declarator": "secureRandom", "var_name": "secureRandom"}, {"original_string": "private String password;", "modifier": "private", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "private final int numIterations;", "modifier": "private final", "type": "int", "declarator": "numIterations", "var_name": "numIterations"}, {"original_string": "private List<Byte> salt;", "modifier": "private", "type": "List<Byte>", "declarator": "salt", "var_name": "salt"}], "methods": [{"identifier": "PasswordBasedKeyProxy", "parameters": "(final String password, final int numIterations, final InternalEncryptionService encryptionService)", "modifiers": "public", "return": "", "signature": " PasswordBasedKeyProxy(final String password, final int numIterations, final InternalEncryptionService encryptionService)", "full_signature": "public  PasswordBasedKeyProxy(final String password, final int numIterations, final InternalEncryptionService encryptionService)", "class_method_signature": "PasswordBasedKeyProxy.PasswordBasedKeyProxy(final String password, final int numIterations, final InternalEncryptionService encryptionService)", "testcase": false, "constructor": true}, {"identifier": "generateSalt", "parameters": "()", "modifiers": "public", "return": "List<Byte>", "signature": "List<Byte> generateSalt()", "full_signature": "public List<Byte> generateSalt()", "class_method_signature": "PasswordBasedKeyProxy.generateSalt()", "testcase": false, "constructor": false}, {"identifier": "deriveKey", "parameters": "()", "modifiers": "public", "return": "Key", "signature": "Key deriveKey()", "full_signature": "public Key deriveKey()", "class_method_signature": "PasswordBasedKeyProxy.deriveKey()", "testcase": false, "constructor": false}, {"identifier": "deriveKey", "parameters": "(final List<Byte> salt)", "modifiers": "public", "return": "Key", "signature": "Key deriveKey(final List<Byte> salt)", "full_signature": "public Key deriveKey(final List<Byte> salt)", "class_method_signature": "PasswordBasedKeyProxy.deriveKey(final List<Byte> salt)", "testcase": false, "constructor": false}, {"identifier": "getPassword", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPassword()", "full_signature": "public String getPassword()", "class_method_signature": "PasswordBasedKeyProxy.getPassword()", "testcase": false, "constructor": false}, {"identifier": "setPassword", "parameters": "(final String password)", "modifiers": "public", "return": "void", "signature": "void setPassword(final String password)", "full_signature": "public void setPassword(final String password)", "class_method_signature": "PasswordBasedKeyProxy.setPassword(final String password)", "testcase": false, "constructor": false}, {"identifier": "getSalt", "parameters": "()", "modifiers": "@Override public", "return": "List<Byte>", "signature": "List<Byte> getSalt()", "full_signature": "@Override public List<Byte> getSalt()", "class_method_signature": "PasswordBasedKeyProxy.getSalt()", "testcase": false, "constructor": false}, {"identifier": "matchesCanary", "parameters": "(final EncryptionKeyCanary canary)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean matchesCanary(final EncryptionKeyCanary canary)", "full_signature": "@Override public boolean matchesCanary(final EncryptionKeyCanary canary)", "class_method_signature": "PasswordBasedKeyProxy.matchesCanary(final EncryptionKeyCanary canary)", "testcase": false, "constructor": false}, {"identifier": "getKey", "parameters": "()", "modifiers": "@Override public", "return": "Key", "signature": "Key getKey()", "full_signature": "@Override public Key getKey()", "class_method_signature": "PasswordBasedKeyProxy.getKey()", "testcase": false, "constructor": false}], "file": "components/encryption/src/main/java/org/cloudfoundry/credhub/services/PasswordBasedKeyProxy.java"}, "focal_method": {"identifier": "generateSalt", "parameters": "()", "modifiers": "public", "return": "List<Byte>", "body": "public List<Byte> generateSalt() {\n    final byte[] salt = new byte[EncryptionConstants.SALT_SIZE];\n\n    secureRandom.nextBytes(salt);\n    secureRandom.nextBytes(salt);\n\n    return unmodifiableList(asList(ArrayUtils.toObject(salt)));\n  }", "signature": "List<Byte> generateSalt()", "full_signature": "public List<Byte> generateSalt()", "class_method_signature": "PasswordBasedKeyProxy.generateSalt()", "testcase": false, "constructor": false, "invocations": ["nextBytes", "nextBytes", "unmodifiableList", "asList", "toObject"]}, "repository": {"repo_id": 57061988, "url": "https://github.com/cloudfoundry-incubator/credhub", "stars": 167, "created": "4/25/2016 5:30:51 PM +00:00", "updates": "2020-01-27T21:31:19+00:00", "fork": "False", "license": "licensed"}}