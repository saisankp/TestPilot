{"test_class": {"identifier": "IsotopePatternManipulatorTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "tool/formula/src/test/java/org/openscience/cdk/formula/IsotopePatternManipulatorTest.java"}, "test_case": {"identifier": "testNormalize_IsotopePattern", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNormalize_IsotopePattern() {\n        IsotopePattern spExp = new IsotopePattern();\n        spExp.setMonoIsotope(new IsotopeContainer(156.07770, 2));\n        spExp.addIsotope(new IsotopeContainer(157.08059, 0.0006));\n        spExp.addIsotope(new IsotopeContainer(157.07503, 0.0002));\n        spExp.addIsotope(new IsotopeContainer(158.08135, 0.004));\n        spExp.setCharge(1);\n\n        IsotopePattern isoNorma = IsotopePatternManipulator.normalize(spExp);\n        List<IsotopeContainer> listISO = isoNorma.getIsotopes();\n        Assert.assertEquals(1, isoNorma.getMonoIsotope().getIntensity(), 0.00001);\n        Assert.assertEquals(1, listISO.get(0).getIntensity(), 0.00001);\n        Assert.assertEquals(0.0003, listISO.get(1).getIntensity(), 0.00001);\n        Assert.assertEquals(0.0001, listISO.get(2).getIntensity(), 0.00001);\n        Assert.assertEquals(0.002, listISO.get(3).getIntensity(), 0.00001);\n\n        Assert.assertEquals(156.07770, isoNorma.getMonoIsotope().getMass(), 0.00001);\n        Assert.assertEquals(156.07770, listISO.get(0).getMass(), 0.00001);\n        Assert.assertEquals(157.08059, listISO.get(1).getMass(), 0.00001);\n        Assert.assertEquals(157.07503, listISO.get(2).getMass(), 0.00001);\n        Assert.assertEquals(158.08135, listISO.get(3).getMass(), 0.00001);\n\n        Assert.assertEquals(1, isoNorma.getCharge(), 0.00001);\n\n    }", "signature": "void testNormalize_IsotopePattern()", "full_signature": "@Test public void testNormalize_IsotopePattern()", "class_method_signature": "IsotopePatternManipulatorTest.testNormalize_IsotopePattern()", "testcase": true, "constructor": false, "invocations": ["setMonoIsotope", "addIsotope", "addIsotope", "addIsotope", "setCharge", "normalize", "getIsotopes", "assertEquals", "getIntensity", "getMonoIsotope", "assertEquals", "getIntensity", "get", "assertEquals", "getIntensity", "get", "assertEquals", "getIntensity", "get", "assertEquals", "getIntensity", "get", "assertEquals", "getMass", "getMonoIsotope", "assertEquals", "getMass", "get", "assertEquals", "getMass", "get", "assertEquals", "getMass", "get", "assertEquals", "getMass", "get", "assertEquals", "getCharge"]}, "focal_class": {"identifier": "IsotopePatternManipulator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "normalize", "parameters": "(IsotopePattern isotopeP)", "modifiers": "public static", "return": "IsotopePattern", "signature": "IsotopePattern normalize(IsotopePattern isotopeP)", "full_signature": "public static IsotopePattern normalize(IsotopePattern isotopeP)", "class_method_signature": "IsotopePatternManipulator.normalize(IsotopePattern isotopeP)", "testcase": false, "constructor": false}, {"identifier": "sortAndNormalizedByIntensity", "parameters": "(IsotopePattern isotopeP)", "modifiers": "public static", "return": "IsotopePattern", "signature": "IsotopePattern sortAndNormalizedByIntensity(IsotopePattern isotopeP)", "full_signature": "public static IsotopePattern sortAndNormalizedByIntensity(IsotopePattern isotopeP)", "class_method_signature": "IsotopePatternManipulator.sortAndNormalizedByIntensity(IsotopePattern isotopeP)", "testcase": false, "constructor": false}, {"identifier": "sortByIntensity", "parameters": "(IsotopePattern isotopeP)", "modifiers": "public static", "return": "IsotopePattern", "signature": "IsotopePattern sortByIntensity(IsotopePattern isotopeP)", "full_signature": "public static IsotopePattern sortByIntensity(IsotopePattern isotopeP)", "class_method_signature": "IsotopePatternManipulator.sortByIntensity(IsotopePattern isotopeP)", "testcase": false, "constructor": false}, {"identifier": "sortByMass", "parameters": "(IsotopePattern isotopeP)", "modifiers": "public static", "return": "IsotopePattern", "signature": "IsotopePattern sortByMass(IsotopePattern isotopeP)", "full_signature": "public static IsotopePattern sortByMass(IsotopePattern isotopeP)", "class_method_signature": "IsotopePatternManipulator.sortByMass(IsotopePattern isotopeP)", "testcase": false, "constructor": false}], "file": "tool/formula/src/main/java/org/openscience/cdk/formula/IsotopePatternManipulator.java"}, "focal_method": {"identifier": "normalize", "parameters": "(IsotopePattern isotopeP)", "modifiers": "public static", "return": "IsotopePattern", "body": "public static IsotopePattern normalize(IsotopePattern isotopeP) {\n        IsotopeContainer isoHighest = null;\n\n        double biggestAbundance = 0;\n        /* Extraction of the isoContainer with the highest abundance */\n        for (IsotopeContainer isoContainer : isotopeP.getIsotopes()) {\n            double abundance = isoContainer.getIntensity();\n            if (biggestAbundance < abundance) {\n                biggestAbundance = abundance;\n                isoHighest = isoContainer;\n            }\n        }\n        /* Normalize */\n        IsotopePattern isoNormalized = new IsotopePattern();\n        for (IsotopeContainer isoContainer : isotopeP.getIsotopes()) {\n            double inten = isoContainer.getIntensity() / isoHighest.getIntensity();\n            IsotopeContainer icClone;\n            try {\n                icClone = (IsotopeContainer) isoContainer.clone();\n                icClone.setIntensity(inten);\n                if (isoHighest.equals(isoContainer))\n                    isoNormalized.setMonoIsotope(icClone);\n                else\n                    isoNormalized.addIsotope(icClone);\n\n            } catch (CloneNotSupportedException e) {\n                e.printStackTrace();\n            }\n\n        }\n        isoNormalized.setCharge(isotopeP.getCharge());\n        return isoNormalized;\n    }", "signature": "IsotopePattern normalize(IsotopePattern isotopeP)", "full_signature": "public static IsotopePattern normalize(IsotopePattern isotopeP)", "class_method_signature": "IsotopePatternManipulator.normalize(IsotopePattern isotopeP)", "testcase": false, "constructor": false, "invocations": ["getIsotopes", "getIntensity", "getIsotopes", "getIntensity", "getIntensity", "clone", "setIntensity", "equals", "setMonoIsotope", "addIsotope", "printStackTrace", "setCharge", "getCharge"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}