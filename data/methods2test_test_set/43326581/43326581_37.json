{"test_class": {"identifier": "FossologyHostKeyHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "FossologyHostKeyHandler fossologyHostKeyHandler;", "modifier": "", "type": "FossologyHostKeyHandler", "declarator": "fossologyHostKeyHandler", "var_name": "fossologyHostKeyHandler"}, {"original_string": "@Mock\n    FossologyFingerPrintRepository fossologyHostKeyConnector;", "modifier": "@Mock", "type": "FossologyFingerPrintRepository", "declarator": "fossologyHostKeyConnector", "var_name": "fossologyHostKeyConnector"}], "file": "backend/src/src-fossology/src/test/java/org/eclipse/sw360/fossology/handler/FossologyHostKeyHandlerTest.java"}, "test_case": {"identifier": "testGetFingerPrintsReturnEmptyOnFailure", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetFingerPrintsReturnEmptyOnFailure() throws Exception {\n\n        when(fossologyHostKeyConnector.getAll()).thenReturn(null);\n\n        assertThat(fossologyHostKeyHandler.getFingerPrints(),\n                is(emptyCollectionOf(FossologyHostFingerPrint.class)));\n\n        verify(fossologyHostKeyConnector).getAll();\n    }", "signature": "void testGetFingerPrintsReturnEmptyOnFailure()", "full_signature": "@Test public void testGetFingerPrintsReturnEmptyOnFailure()", "class_method_signature": "FossologyHostKeyHandlerTest.testGetFingerPrintsReturnEmptyOnFailure()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getAll", "assertThat", "getFingerPrints", "is", "emptyCollectionOf", "getAll", "verify"]}, "focal_class": {"identifier": "FossologyHostKeyHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final FossologyFingerPrintRepository fossologyHostKeyConnector;", "modifier": "private final", "type": "FossologyFingerPrintRepository", "declarator": "fossologyHostKeyConnector", "var_name": "fossologyHostKeyConnector"}], "methods": [{"identifier": "FossologyHostKeyHandler", "parameters": "(FossologyFingerPrintRepository fossologyHostKeyConnector)", "modifiers": "@Autowired public", "return": "", "signature": " FossologyHostKeyHandler(FossologyFingerPrintRepository fossologyHostKeyConnector)", "full_signature": "@Autowired public  FossologyHostKeyHandler(FossologyFingerPrintRepository fossologyHostKeyConnector)", "class_method_signature": "FossologyHostKeyHandler.FossologyHostKeyHandler(FossologyFingerPrintRepository fossologyHostKeyConnector)", "testcase": false, "constructor": true}, {"identifier": "getFingerPrints", "parameters": "()", "modifiers": "public", "return": "List<FossologyHostFingerPrint>", "signature": "List<FossologyHostFingerPrint> getFingerPrints()", "full_signature": "public List<FossologyHostFingerPrint> getFingerPrints()", "class_method_signature": "FossologyHostKeyHandler.getFingerPrints()", "testcase": false, "constructor": false}, {"identifier": "setFingerPrints", "parameters": "(List<FossologyHostFingerPrint> fingerPrints)", "modifiers": "public", "return": "RequestStatus", "signature": "RequestStatus setFingerPrints(List<FossologyHostFingerPrint> fingerPrints)", "full_signature": "public RequestStatus setFingerPrints(List<FossologyHostFingerPrint> fingerPrints)", "class_method_signature": "FossologyHostKeyHandler.setFingerPrints(List<FossologyHostFingerPrint> fingerPrints)", "testcase": false, "constructor": false}], "file": "backend/src/src-fossology/src/main/java/org/eclipse/sw360/fossology/handler/FossologyHostKeyHandler.java"}, "focal_method": {"identifier": "getFingerPrints", "parameters": "()", "modifiers": "public", "return": "List<FossologyHostFingerPrint>", "body": "public List<FossologyHostFingerPrint> getFingerPrints() throws TException {\n        final List<FossologyHostFingerPrint> fingerPrints = fossologyHostKeyConnector.getAll();\n        return nullToEmptyList(fingerPrints);\n    }", "signature": "List<FossologyHostFingerPrint> getFingerPrints()", "full_signature": "public List<FossologyHostFingerPrint> getFingerPrints()", "class_method_signature": "FossologyHostKeyHandler.getFingerPrints()", "testcase": false, "constructor": false, "invocations": ["getAll", "nullToEmptyList"]}, "repository": {"repo_id": 43326581, "url": "https://github.com/sw360/sw360portal", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 31, "size": 8770, "license": "licensed"}}