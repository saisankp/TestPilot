{"test_class": {"identifier": "DefaultDistributionSummaryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ManualClock clock = new ManualClock();", "modifier": "private final", "type": "ManualClock", "declarator": "clock = new ManualClock()", "var_name": "clock"}], "file": "client/lookout-core/src/test/java/com/alipay/lookout/core/DefaultDistributionSummaryTest.java"}, "test_case": {"identifier": "testRecord", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRecord() {\n        DistributionSummary t = new DefaultDistributionSummary(clock, NoopId.INSTANCE);\n        t.record(42);\n        Assert.assertEquals(t.count(), 1L);\n        Assert.assertEquals(t.totalAmount(), 42L);\n    }", "signature": "void testRecord()", "full_signature": "@Test public void testRecord()", "class_method_signature": "DefaultDistributionSummaryTest.testRecord()", "testcase": true, "constructor": false, "invocations": ["record", "assertEquals", "count", "assertEquals", "totalAmount"]}, "focal_class": {"identifier": "DefaultDistributionSummary", "superclass": "", "interfaces": "implements DistributionSummary", "fields": [{"original_string": "private final Clock      clock;", "modifier": "private final", "type": "Clock", "declarator": "clock", "var_name": "clock"}, {"original_string": "private final Id         id;", "modifier": "private final", "type": "Id", "declarator": "id", "var_name": "id"}, {"original_string": "private final AtomicLong count;", "modifier": "private final", "type": "AtomicLong", "declarator": "count", "var_name": "count"}, {"original_string": "private final AtomicLong totalAmount;", "modifier": "private final", "type": "AtomicLong", "declarator": "totalAmount", "var_name": "totalAmount"}], "methods": [{"identifier": "DefaultDistributionSummary", "parameters": "(Clock clock, Id id)", "modifiers": "", "return": "", "signature": " DefaultDistributionSummary(Clock clock, Id id)", "full_signature": "  DefaultDistributionSummary(Clock clock, Id id)", "class_method_signature": "DefaultDistributionSummary.DefaultDistributionSummary(Clock clock, Id id)", "testcase": false, "constructor": true}, {"identifier": "id", "parameters": "()", "modifiers": "@Override public", "return": "Id", "signature": "Id id()", "full_signature": "@Override public Id id()", "class_method_signature": "DefaultDistributionSummary.id()", "testcase": false, "constructor": false}, {"identifier": "record", "parameters": "(long amount)", "modifiers": "@Override public", "return": "void", "signature": "void record(long amount)", "full_signature": "@Override public void record(long amount)", "class_method_signature": "DefaultDistributionSummary.record(long amount)", "testcase": false, "constructor": false}, {"identifier": "measure", "parameters": "()", "modifiers": "@Override public", "return": "Indicator", "signature": "Indicator measure()", "full_signature": "@Override public Indicator measure()", "class_method_signature": "DefaultDistributionSummary.measure()", "testcase": false, "constructor": false}, {"identifier": "count", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long count()", "full_signature": "@Override public long count()", "class_method_signature": "DefaultDistributionSummary.count()", "testcase": false, "constructor": false}, {"identifier": "totalAmount", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long totalAmount()", "full_signature": "@Override public long totalAmount()", "class_method_signature": "DefaultDistributionSummary.totalAmount()", "testcase": false, "constructor": false}, {"identifier": "buckets", "parameters": "(long[] buckets)", "modifiers": "@Override public", "return": "void", "signature": "void buckets(long[] buckets)", "full_signature": "@Override public void buckets(long[] buckets)", "class_method_signature": "DefaultDistributionSummary.buckets(long[] buckets)", "testcase": false, "constructor": false}], "file": "client/lookout-core/src/main/java/com/alipay/lookout/core/DefaultDistributionSummary.java"}, "focal_method": {"identifier": "record", "parameters": "(long amount)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void record(long amount) {\n        if (amount >= 0) {\n            totalAmount.addAndGet(amount);\n            count.incrementAndGet();\n        }\n    }", "signature": "void record(long amount)", "full_signature": "@Override public void record(long amount)", "class_method_signature": "DefaultDistributionSummary.record(long amount)", "testcase": false, "constructor": false, "invocations": ["addAndGet", "incrementAndGet"]}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}