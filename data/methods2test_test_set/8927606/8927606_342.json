{"test_class": {"identifier": "WsdlTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final  Class<AbstractXmlValidator> implementation;", "modifier": "private final", "type": "Class<AbstractXmlValidator>", "declarator": "implementation", "var_name": "implementation"}], "file": "core/src/test/java/nl/nn/adapterframework/soap/WsdlTest.java"}, "test_case": {"identifier": "noroottag", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void noroottag() throws XMLStreamException, IOException, SAXException, ParserConfigurationException, URISyntaxException, ConfigurationException, NamingException {\n        PipeLine simple = mockPipeLine(\n            getXmlValidatorInstance(null, \"WsdlTest/test.xsd\", \"urn:webservice1 WsdlTest/test.xsd\"),\n            getXmlValidatorInstance(\"b\", \"WsdlTest/test.xsd\", \"urn:webservice1 WsdlTest/test.xsd\"), \"urn:webservice1\", \"TestRootTag\");\n        Wsdl wsdl = new Wsdl(simple);\n        wsdl.init();\n        test(wsdl, \"WsdlTest/noroottag.test.wsdl\");\n    }", "signature": "void noroottag()", "full_signature": "@Test public void noroottag()", "class_method_signature": "WsdlTest.noroottag()", "testcase": true, "constructor": false, "invocations": ["mockPipeLine", "getXmlValidatorInstance", "getXmlValidatorInstance", "init", "test"]}, "focal_class": {"identifier": "Wsdl", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected Logger log = LogUtil.getLogger(this);", "modifier": "protected", "type": "Logger", "declarator": "log = LogUtil.getLogger(this)", "var_name": "log"}, {"original_string": "protected static final String WSDL_NAMESPACE                 = \"http://schemas.xmlsoap.org/wsdl/\";", "modifier": "protected static final", "type": "String", "declarator": "WSDL_NAMESPACE                 = \"http://schemas.xmlsoap.org/wsdl/\"", "var_name": "WSDL_NAMESPACE"}, {"original_string": "protected static final String WSDL_NAMESPACE_PREFIX          = \"wsdl\";", "modifier": "protected static final", "type": "String", "declarator": "WSDL_NAMESPACE_PREFIX          = \"wsdl\"", "var_name": "WSDL_NAMESPACE_PREFIX"}, {"original_string": "protected static final String XSD_NAMESPACE                  = SchemaUtils.XSD;", "modifier": "protected static final", "type": "String", "declarator": "XSD_NAMESPACE                  = SchemaUtils.XSD", "var_name": "XSD_NAMESPACE"}, {"original_string": "protected static final String XSD_NAMESPACE_PREFIX           = \"xsd\";", "modifier": "protected static final", "type": "String", "declarator": "XSD_NAMESPACE_PREFIX           = \"xsd\"", "var_name": "XSD_NAMESPACE_PREFIX"}, {"original_string": "protected static final String WSDL_SOAP_NAMESPACE            = \"http://schemas.xmlsoap.org/wsdl/soap/\";", "modifier": "protected static final", "type": "String", "declarator": "WSDL_SOAP_NAMESPACE            = \"http://schemas.xmlsoap.org/wsdl/soap/\"", "var_name": "WSDL_SOAP_NAMESPACE"}, {"original_string": "protected static final String WSDL_SOAP_NAMESPACE_PREFIX     = \"soap\";", "modifier": "protected static final", "type": "String", "declarator": "WSDL_SOAP_NAMESPACE_PREFIX     = \"soap\"", "var_name": "WSDL_SOAP_NAMESPACE_PREFIX"}, {"original_string": "protected static final String WSDL_SOAP12_NAMESPACE          = \"http://schemas.xmlsoap.org/wsdl/soap12/\";", "modifier": "protected static final", "type": "String", "declarator": "WSDL_SOAP12_NAMESPACE          = \"http://schemas.xmlsoap.org/wsdl/soap12/\"", "var_name": "WSDL_SOAP12_NAMESPACE"}, {"original_string": "protected static final String WSDL_SOAP12_NAMESPACE_PREFIX   = \"soap12\";", "modifier": "protected static final", "type": "String", "declarator": "WSDL_SOAP12_NAMESPACE_PREFIX   = \"soap12\"", "var_name": "WSDL_SOAP12_NAMESPACE_PREFIX"}, {"original_string": "protected static final String SOAP_HTTP_NAMESPACE            = \"http://schemas.xmlsoap.org/soap/http\";", "modifier": "protected static final", "type": "String", "declarator": "SOAP_HTTP_NAMESPACE            = \"http://schemas.xmlsoap.org/soap/http\"", "var_name": "SOAP_HTTP_NAMESPACE"}, {"original_string": "protected static final String SOAP_JMS_NAMESPACE             = \"http://www.w3.org/2010/soapjms/\";", "modifier": "protected static final", "type": "String", "declarator": "SOAP_JMS_NAMESPACE             = \"http://www.w3.org/2010/soapjms/\"", "var_name": "SOAP_JMS_NAMESPACE"}, {"original_string": "protected static final String SOAP_JMS_NAMESPACE_PREFIX      = \"jms\";", "modifier": "protected static final", "type": "String", "declarator": "SOAP_JMS_NAMESPACE_PREFIX      = \"jms\"", "var_name": "SOAP_JMS_NAMESPACE_PREFIX"}, {"original_string": "protected static final String ESB_SOAP_JMS_NAMESPACE         = \"http://www.tibco.com/namespaces/ws/2004/soap/binding/JMS\";", "modifier": "protected static final", "type": "String", "declarator": "ESB_SOAP_JMS_NAMESPACE         = \"http://www.tibco.com/namespaces/ws/2004/soap/binding/JMS\"", "var_name": "ESB_SOAP_JMS_NAMESPACE"}, {"original_string": "protected static final String ESB_SOAP_JNDI_NAMESPACE        = \"http://www.tibco.com/namespaces/ws/2004/soap/apis/jndi\";", "modifier": "protected static final", "type": "String", "declarator": "ESB_SOAP_JNDI_NAMESPACE        = \"http://www.tibco.com/namespaces/ws/2004/soap/apis/jndi\"", "var_name": "ESB_SOAP_JNDI_NAMESPACE"}, {"original_string": "protected static final String ESB_SOAP_JNDI_NAMESPACE_PREFIX = \"jndi\";", "modifier": "protected static final", "type": "String", "declarator": "ESB_SOAP_JNDI_NAMESPACE_PREFIX = \"jndi\"", "var_name": "ESB_SOAP_JNDI_NAMESPACE_PREFIX"}, {"original_string": "protected static final String ESB_SOAP_TNS_BASE_URI          = \"http://nn.nl/WSDL\";", "modifier": "protected static final", "type": "String", "declarator": "ESB_SOAP_TNS_BASE_URI          = \"http://nn.nl/WSDL\"", "var_name": "ESB_SOAP_TNS_BASE_URI"}, {"original_string": "protected static final String TARGET_NAMESPACE_PREFIX        = \"tns\";", "modifier": "protected static final", "type": "String", "declarator": "TARGET_NAMESPACE_PREFIX        = \"tns\"", "var_name": "TARGET_NAMESPACE_PREFIX"}, {"original_string": "public static final String WSDL_EXTENSION                    = \".wsdl\";", "modifier": "public static final", "type": "String", "declarator": "WSDL_EXTENSION                    = \".wsdl\"", "var_name": "WSDL_EXTENSION"}, {"original_string": "protected static final List<String> excludeXsds = new ArrayList<String>();", "modifier": "protected static final", "type": "List<String>", "declarator": "excludeXsds = new ArrayList<String>()", "var_name": "excludeXsds"}, {"original_string": "private boolean indent = true;", "modifier": "private", "type": "boolean", "declarator": "indent = true", "var_name": "indent"}, {"original_string": "private boolean useIncludes = false;", "modifier": "private", "type": "boolean", "declarator": "useIncludes = false", "var_name": "useIncludes"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final String fileName;", "modifier": "private final", "type": "String", "declarator": "fileName", "var_name": "fileName"}, {"original_string": "private final PipeLine pipeLine;", "modifier": "private final", "type": "PipeLine", "declarator": "pipeLine", "var_name": "pipeLine"}, {"original_string": "private final IXmlValidator inputValidator;", "modifier": "private final", "type": "IXmlValidator", "declarator": "inputValidator", "var_name": "inputValidator"}, {"original_string": "private final IXmlValidator outputValidator;", "modifier": "private final", "type": "IXmlValidator", "declarator": "outputValidator", "var_name": "outputValidator"}, {"original_string": "private String webServiceListenerNamespace;", "modifier": "private", "type": "String", "declarator": "webServiceListenerNamespace", "var_name": "webServiceListenerNamespace"}, {"original_string": "private Set<XSD> inputXsds;", "modifier": "private", "type": "Set<XSD>", "declarator": "inputXsds", "var_name": "inputXsds"}, {"original_string": "private Set<XSD> outputXsds;", "modifier": "private", "type": "Set<XSD>", "declarator": "outputXsds", "var_name": "outputXsds"}, {"original_string": "private Set<XSD> xsds;", "modifier": "private", "type": "Set<XSD>", "declarator": "xsds", "var_name": "xsds"}, {"original_string": "private Set<XSD> rootXsds;", "modifier": "private", "type": "Set<XSD>", "declarator": "rootXsds", "var_name": "rootXsds"}, {"original_string": "private Map<String, Set<XSD>> xsdsGroupedByNamespace;", "modifier": "private", "type": "Map<String, Set<XSD>>", "declarator": "xsdsGroupedByNamespace", "var_name": "xsdsGroupedByNamespace"}, {"original_string": "private LinkedHashMap<XSD, String> prefixByXsd;", "modifier": "private", "type": "LinkedHashMap<XSD, String>", "declarator": "prefixByXsd", "var_name": "prefixByXsd"}, {"original_string": "private LinkedHashMap<String, String> namespaceByPrefix;", "modifier": "private", "type": "LinkedHashMap<String, String>", "declarator": "namespaceByPrefix", "var_name": "namespaceByPrefix"}, {"original_string": "private String inputRoot;", "modifier": "private", "type": "String", "declarator": "inputRoot", "var_name": "inputRoot"}, {"original_string": "private String outputRoot;", "modifier": "private", "type": "String", "declarator": "outputRoot", "var_name": "outputRoot"}, {"original_string": "private QName inputHeaderElement;", "modifier": "private", "type": "QName", "declarator": "inputHeaderElement", "var_name": "inputHeaderElement"}, {"original_string": "private boolean inputHeaderIsOptional = false;", "modifier": "private", "type": "boolean", "declarator": "inputHeaderIsOptional = false", "var_name": "inputHeaderIsOptional"}, {"original_string": "private QName inputBodyElement;", "modifier": "private", "type": "QName", "declarator": "inputBodyElement", "var_name": "inputBodyElement"}, {"original_string": "private QName outputHeaderElement;", "modifier": "private", "type": "QName", "declarator": "outputHeaderElement", "var_name": "outputHeaderElement"}, {"original_string": "private boolean outputHeaderIsOptional = false;", "modifier": "private", "type": "boolean", "declarator": "outputHeaderIsOptional = false", "var_name": "outputHeaderIsOptional"}, {"original_string": "private QName outputBodyElement;", "modifier": "private", "type": "QName", "declarator": "outputBodyElement", "var_name": "outputBodyElement"}, {"original_string": "private boolean httpActive = false;", "modifier": "private", "type": "boolean", "declarator": "httpActive = false", "var_name": "httpActive"}, {"original_string": "private boolean jmsActive = false;", "modifier": "private", "type": "boolean", "declarator": "jmsActive = false", "var_name": "jmsActive"}, {"original_string": "private final String targetNamespace;", "modifier": "private final", "type": "String", "declarator": "targetNamespace", "var_name": "targetNamespace"}, {"original_string": "private String targetNamespacePrefix = TARGET_NAMESPACE_PREFIX;", "modifier": "private", "type": "String", "declarator": "targetNamespacePrefix = TARGET_NAMESPACE_PREFIX", "var_name": "targetNamespacePrefix"}, {"original_string": "private String wsdlSoapNamespace = WSDL_SOAP_NAMESPACE;", "modifier": "private", "type": "String", "declarator": "wsdlSoapNamespace = WSDL_SOAP_NAMESPACE", "var_name": "wsdlSoapNamespace"}, {"original_string": "private String wsdlSoapPrefix = WSDL_SOAP_NAMESPACE_PREFIX;", "modifier": "private", "type": "String", "declarator": "wsdlSoapPrefix = WSDL_SOAP_NAMESPACE_PREFIX", "var_name": "wsdlSoapPrefix"}, {"original_string": "private boolean esbSoap = false;", "modifier": "private", "type": "boolean", "declarator": "esbSoap = false", "var_name": "esbSoap"}, {"original_string": "private String esbSoapBusinessDomain;", "modifier": "private", "type": "String", "declarator": "esbSoapBusinessDomain", "var_name": "esbSoapBusinessDomain"}, {"original_string": "private String esbSoapServiceName;", "modifier": "private", "type": "String", "declarator": "esbSoapServiceName", "var_name": "esbSoapServiceName"}, {"original_string": "private String esbSoapServiceContext;", "modifier": "private", "type": "String", "declarator": "esbSoapServiceContext", "var_name": "esbSoapServiceContext"}, {"original_string": "private String esbSoapServiceContextVersion;", "modifier": "private", "type": "String", "declarator": "esbSoapServiceContextVersion", "var_name": "esbSoapServiceContextVersion"}, {"original_string": "private String esbSoapOperationName;", "modifier": "private", "type": "String", "declarator": "esbSoapOperationName", "var_name": "esbSoapOperationName"}, {"original_string": "private String esbSoapOperationVersion;", "modifier": "private", "type": "String", "declarator": "esbSoapOperationVersion", "var_name": "esbSoapOperationVersion"}, {"original_string": "private String documentation;", "modifier": "private", "type": "String", "declarator": "documentation", "var_name": "documentation"}, {"original_string": "private List<String> warnings = new ArrayList<String>();", "modifier": "private", "type": "List<String>", "declarator": "warnings = new ArrayList<String>()", "var_name": "warnings"}], "methods": [{"identifier": "Wsdl", "parameters": "(PipeLine pipeLine)", "modifiers": "public", "return": "", "signature": " Wsdl(PipeLine pipeLine)", "full_signature": "public  Wsdl(PipeLine pipeLine)", "class_method_signature": "Wsdl.Wsdl(PipeLine pipeLine)", "testcase": false, "constructor": true}, {"identifier": "Wsdl", "parameters": "(PipeLine pipeLine, String generationInfo)", "modifiers": "public", "return": "", "signature": " Wsdl(PipeLine pipeLine, String generationInfo)", "full_signature": "public  Wsdl(PipeLine pipeLine, String generationInfo)", "class_method_signature": "Wsdl.Wsdl(PipeLine pipeLine, String generationInfo)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Wsdl.getName()", "testcase": false, "constructor": false}, {"identifier": "getFilename", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFilename()", "full_signature": "public String getFilename()", "class_method_signature": "Wsdl.getFilename()", "testcase": false, "constructor": false}, {"identifier": "getTargetNamespace", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTargetNamespace()", "full_signature": "public String getTargetNamespace()", "class_method_signature": "Wsdl.getTargetNamespace()", "testcase": false, "constructor": false}, {"identifier": "getDocumentation", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDocumentation()", "full_signature": "public String getDocumentation()", "class_method_signature": "Wsdl.getDocumentation()", "testcase": false, "constructor": false}, {"identifier": "setDocumentation", "parameters": "(String documentation)", "modifiers": "public", "return": "void", "signature": "void setDocumentation(String documentation)", "full_signature": "public void setDocumentation(String documentation)", "class_method_signature": "Wsdl.setDocumentation(String documentation)", "testcase": false, "constructor": false}, {"identifier": "isIndent", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isIndent()", "full_signature": "public boolean isIndent()", "class_method_signature": "Wsdl.isIndent()", "testcase": false, "constructor": false}, {"identifier": "setIndent", "parameters": "(boolean indent)", "modifiers": "public", "return": "void", "signature": "void setIndent(boolean indent)", "full_signature": "public void setIndent(boolean indent)", "class_method_signature": "Wsdl.setIndent(boolean indent)", "testcase": false, "constructor": false}, {"identifier": "isUseIncludes", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isUseIncludes()", "full_signature": "public boolean isUseIncludes()", "class_method_signature": "Wsdl.isUseIncludes()", "testcase": false, "constructor": false}, {"identifier": "setUseIncludes", "parameters": "(boolean useIncludes)", "modifiers": "public", "return": "void", "signature": "void setUseIncludes(boolean useIncludes)", "full_signature": "public void setUseIncludes(boolean useIncludes)", "class_method_signature": "Wsdl.setUseIncludes(boolean useIncludes)", "testcase": false, "constructor": false}, {"identifier": "getTargetNamespacePrefix", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTargetNamespacePrefix()", "full_signature": "public String getTargetNamespacePrefix()", "class_method_signature": "Wsdl.getTargetNamespacePrefix()", "testcase": false, "constructor": false}, {"identifier": "setTargetNamespacePrefix", "parameters": "(String targetNamespacePrefix)", "modifiers": "public", "return": "void", "signature": "void setTargetNamespacePrefix(String targetNamespacePrefix)", "full_signature": "public void setTargetNamespacePrefix(String targetNamespacePrefix)", "class_method_signature": "Wsdl.setTargetNamespacePrefix(String targetNamespacePrefix)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void init()", "full_signature": "public void init()", "class_method_signature": "Wsdl.init()", "testcase": false, "constructor": false}, {"identifier": "isHeaderOptional", "parameters": "(IXmlValidator xmlValidator)", "modifiers": "protected", "return": "boolean", "signature": "boolean isHeaderOptional(IXmlValidator xmlValidator)", "full_signature": "protected boolean isHeaderOptional(IXmlValidator xmlValidator)", "class_method_signature": "Wsdl.isHeaderOptional(IXmlValidator xmlValidator)", "testcase": false, "constructor": false}, {"identifier": "getXsds", "parameters": "(IXmlValidator xmlValidator)", "modifiers": "public", "return": "Set<XSD>", "signature": "Set<XSD> getXsds(IXmlValidator xmlValidator)", "full_signature": "public Set<XSD> getXsds(IXmlValidator xmlValidator)", "class_method_signature": "Wsdl.getXsds(IXmlValidator xmlValidator)", "testcase": false, "constructor": false}, {"identifier": "zip", "parameters": "(OutputStream stream, String servletName)", "modifiers": "public", "return": "void", "signature": "void zip(OutputStream stream, String servletName)", "full_signature": "public void zip(OutputStream stream, String servletName)", "class_method_signature": "Wsdl.zip(OutputStream stream, String servletName)", "testcase": false, "constructor": false}, {"identifier": "wsdl", "parameters": "(OutputStream out, String servlet)", "modifiers": "public", "return": "void", "signature": "void wsdl(OutputStream out, String servlet)", "full_signature": "public void wsdl(OutputStream out, String servlet)", "class_method_signature": "Wsdl.wsdl(OutputStream out, String servlet)", "testcase": false, "constructor": false}, {"identifier": "documentation", "parameters": "(XMLStreamWriter w)", "modifiers": "protected", "return": "void", "signature": "void documentation(XMLStreamWriter w)", "full_signature": "protected void documentation(XMLStreamWriter w)", "class_method_signature": "Wsdl.documentation(XMLStreamWriter w)", "testcase": false, "constructor": false}, {"identifier": "types", "parameters": "(XMLStreamWriter w)", "modifiers": "protected", "return": "void", "signature": "void types(XMLStreamWriter w)", "full_signature": "protected void types(XMLStreamWriter w)", "class_method_signature": "Wsdl.types(XMLStreamWriter w)", "testcase": false, "constructor": false}, {"identifier": "messages", "parameters": "(XMLStreamWriter w)", "modifiers": "protected", "return": "void", "signature": "void messages(XMLStreamWriter w)", "full_signature": "protected void messages(XMLStreamWriter w)", "class_method_signature": "Wsdl.messages(XMLStreamWriter w)", "testcase": false, "constructor": false}, {"identifier": "message", "parameters": "(XMLStreamWriter w, String root, Collection<QName> parts)", "modifiers": "protected", "return": "void", "signature": "void message(XMLStreamWriter w, String root, Collection<QName> parts)", "full_signature": "protected void message(XMLStreamWriter w, String root, Collection<QName> parts)", "class_method_signature": "Wsdl.message(XMLStreamWriter w, String root, Collection<QName> parts)", "testcase": false, "constructor": false}, {"identifier": "portType", "parameters": "(XMLStreamWriter w)", "modifiers": "protected", "return": "void", "signature": "void portType(XMLStreamWriter w)", "full_signature": "protected void portType(XMLStreamWriter w)", "class_method_signature": "Wsdl.portType(XMLStreamWriter w)", "testcase": false, "constructor": false}, {"identifier": "getSoapAction", "parameters": "(IListener listener)", "modifiers": "protected", "return": "String", "signature": "String getSoapAction(IListener listener)", "full_signature": "protected String getSoapAction(IListener listener)", "class_method_signature": "Wsdl.getSoapAction(IListener listener)", "testcase": false, "constructor": false}, {"identifier": "getLocation", "parameters": "(String defaultLocation)", "modifiers": "protected", "return": "String", "signature": "String getLocation(String defaultLocation)", "full_signature": "protected String getLocation(String defaultLocation)", "class_method_signature": "Wsdl.getLocation(String defaultLocation)", "testcase": false, "constructor": false}, {"identifier": "binding", "parameters": "(XMLStreamWriter w)", "modifiers": "protected", "return": "void", "signature": "void binding(XMLStreamWriter w)", "full_signature": "protected void binding(XMLStreamWriter w)", "class_method_signature": "Wsdl.binding(XMLStreamWriter w)", "testcase": false, "constructor": false}, {"identifier": "httpBinding", "parameters": "(XMLStreamWriter w, String namePrefix)", "modifiers": "protected", "return": "void", "signature": "void httpBinding(XMLStreamWriter w, String namePrefix)", "full_signature": "protected void httpBinding(XMLStreamWriter w, String namePrefix)", "class_method_signature": "Wsdl.httpBinding(XMLStreamWriter w, String namePrefix)", "testcase": false, "constructor": false}, {"identifier": "writeSoapOperation", "parameters": "(XMLStreamWriter w, IListener listener)", "modifiers": "protected", "return": "void", "signature": "void writeSoapOperation(XMLStreamWriter w, IListener listener)", "full_signature": "protected void writeSoapOperation(XMLStreamWriter w, IListener listener)", "class_method_signature": "Wsdl.writeSoapOperation(XMLStreamWriter w, IListener listener)", "testcase": false, "constructor": false}, {"identifier": "writeSoapHeader", "parameters": "(XMLStreamWriter w, String root, QName headerElement, boolean isHeaderOptional)", "modifiers": "protected", "return": "void", "signature": "void writeSoapHeader(XMLStreamWriter w, String root, QName headerElement, boolean isHeaderOptional)", "full_signature": "protected void writeSoapHeader(XMLStreamWriter w, String root, QName headerElement, boolean isHeaderOptional)", "class_method_signature": "Wsdl.writeSoapHeader(XMLStreamWriter w, String root, QName headerElement, boolean isHeaderOptional)", "testcase": false, "constructor": false}, {"identifier": "writeSoapBody", "parameters": "(XMLStreamWriter w, QName bodyElement)", "modifiers": "protected", "return": "void", "signature": "void writeSoapBody(XMLStreamWriter w, QName bodyElement)", "full_signature": "protected void writeSoapBody(XMLStreamWriter w, QName bodyElement)", "class_method_signature": "Wsdl.writeSoapBody(XMLStreamWriter w, QName bodyElement)", "testcase": false, "constructor": false}, {"identifier": "jmsBinding", "parameters": "(XMLStreamWriter w, String namePrefix)", "modifiers": "protected", "return": "void", "signature": "void jmsBinding(XMLStreamWriter w, String namePrefix)", "full_signature": "protected void jmsBinding(XMLStreamWriter w, String namePrefix)", "class_method_signature": "Wsdl.jmsBinding(XMLStreamWriter w, String namePrefix)", "testcase": false, "constructor": false}, {"identifier": "service", "parameters": "(XMLStreamWriter w, String servlet)", "modifiers": "protected", "return": "void", "signature": "void service(XMLStreamWriter w, String servlet)", "full_signature": "protected void service(XMLStreamWriter w, String servlet)", "class_method_signature": "Wsdl.service(XMLStreamWriter w, String servlet)", "testcase": false, "constructor": false}, {"identifier": "httpService", "parameters": "(XMLStreamWriter w, String servlet, String namePrefix)", "modifiers": "protected", "return": "void", "signature": "void httpService(XMLStreamWriter w, String servlet, String namePrefix)", "full_signature": "protected void httpService(XMLStreamWriter w, String servlet, String namePrefix)", "class_method_signature": "Wsdl.httpService(XMLStreamWriter w, String servlet, String namePrefix)", "testcase": false, "constructor": false}, {"identifier": "jmsService", "parameters": "(XMLStreamWriter w, JmsListener listener, String namePrefix)", "modifiers": "protected", "return": "void", "signature": "void jmsService(XMLStreamWriter w, JmsListener listener, String namePrefix)", "full_signature": "protected void jmsService(XMLStreamWriter w, JmsListener listener, String namePrefix)", "class_method_signature": "Wsdl.jmsService(XMLStreamWriter w, JmsListener listener, String namePrefix)", "testcase": false, "constructor": false}, {"identifier": "writeEsbSoapJndiContext", "parameters": "(XMLStreamWriter w, JmsListener listener)", "modifiers": "protected", "return": "void", "signature": "void writeEsbSoapJndiContext(XMLStreamWriter w, JmsListener listener)", "full_signature": "protected void writeEsbSoapJndiContext(XMLStreamWriter w, JmsListener listener)", "class_method_signature": "Wsdl.writeEsbSoapJndiContext(XMLStreamWriter w, JmsListener listener)", "testcase": false, "constructor": false}, {"identifier": "warnings", "parameters": "(XMLStreamWriter w)", "modifiers": "protected", "return": "void", "signature": "void warnings(XMLStreamWriter w)", "full_signature": "protected void warnings(XMLStreamWriter w)", "class_method_signature": "Wsdl.warnings(XMLStreamWriter w)", "testcase": false, "constructor": false}, {"identifier": "getPipeLine", "parameters": "()", "modifiers": "protected", "return": "PipeLine", "signature": "PipeLine getPipeLine()", "full_signature": "protected PipeLine getPipeLine()", "class_method_signature": "Wsdl.getPipeLine()", "testcase": false, "constructor": false}, {"identifier": "getRoot", "parameters": "(IXmlValidator xmlValidator)", "modifiers": "protected", "return": "String", "signature": "String getRoot(IXmlValidator xmlValidator)", "full_signature": "protected String getRoot(IXmlValidator xmlValidator)", "class_method_signature": "Wsdl.getRoot(IXmlValidator xmlValidator)", "testcase": false, "constructor": false}, {"identifier": "getRoot", "parameters": "(IXmlValidator xmlValidator, boolean outputMode)", "modifiers": "protected", "return": "String", "signature": "String getRoot(IXmlValidator xmlValidator, boolean outputMode)", "full_signature": "protected String getRoot(IXmlValidator xmlValidator, boolean outputMode)", "class_method_signature": "Wsdl.getRoot(IXmlValidator xmlValidator, boolean outputMode)", "testcase": false, "constructor": false}, {"identifier": "getRootElement", "parameters": "(Set<XSD> xsds, String root)", "modifiers": "protected", "return": "QName", "signature": "QName getRootElement(Set<XSD> xsds, String root)", "full_signature": "protected QName getRootElement(Set<XSD> xsds, String root)", "class_method_signature": "Wsdl.getRootElement(Set<XSD> xsds, String root)", "testcase": false, "constructor": false}, {"identifier": "getRootElement", "parameters": "(Set<XSD> xsds, String root, String namespace)", "modifiers": "protected", "return": "QName", "signature": "QName getRootElement(Set<XSD> xsds, String root, String namespace)", "full_signature": "protected QName getRootElement(Set<XSD> xsds, String root, String namespace)", "class_method_signature": "Wsdl.getRootElement(Set<XSD> xsds, String root, String namespace)", "testcase": false, "constructor": false}, {"identifier": "getHeaderElement", "parameters": "(IXmlValidator xmlValidator, Set<XSD> xsds)", "modifiers": "protected", "return": "QName", "signature": "QName getHeaderElement(IXmlValidator xmlValidator, Set<XSD> xsds)", "full_signature": "protected QName getHeaderElement(IXmlValidator xmlValidator, Set<XSD> xsds)", "class_method_signature": "Wsdl.getHeaderElement(IXmlValidator xmlValidator, Set<XSD> xsds)", "testcase": false, "constructor": false}, {"identifier": "getBodyElement", "parameters": "(IXmlValidator xmlValidator, Set<XSD> xsds, String type)", "modifiers": "protected", "return": "QName", "signature": "QName getBodyElement(IXmlValidator xmlValidator, Set<XSD> xsds, String type)", "full_signature": "protected QName getBodyElement(IXmlValidator xmlValidator, Set<XSD> xsds, String type)", "class_method_signature": "Wsdl.getBodyElement(IXmlValidator xmlValidator, Set<XSD> xsds, String type)", "testcase": false, "constructor": false}, {"identifier": "getBodyElement", "parameters": "(IXmlValidator xmlValidator, Set<XSD> xsds, String type, boolean outputMode)", "modifiers": "protected", "return": "QName", "signature": "QName getBodyElement(IXmlValidator xmlValidator, Set<XSD> xsds, String type, boolean outputMode)", "full_signature": "protected QName getBodyElement(IXmlValidator xmlValidator, Set<XSD> xsds, String type, boolean outputMode)", "class_method_signature": "Wsdl.getBodyElement(IXmlValidator xmlValidator, Set<XSD> xsds, String type, boolean outputMode)", "testcase": false, "constructor": false}, {"identifier": "warn", "parameters": "(String warning)", "modifiers": "protected", "return": "void", "signature": "void warn(String warning)", "full_signature": "protected void warn(String warning)", "class_method_signature": "Wsdl.warn(String warning)", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/soap/Wsdl.java"}, "focal_method": {"identifier": "init", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void init() throws IOException, XMLStreamException, ConfigurationException {\n        inputXsds = new HashSet<XSD>();\n        outputXsds = new HashSet<XSD>();\n        xsds = new HashSet<XSD>();\n        rootXsds = new HashSet<XSD>();\n        Set<XSD> inputRootXsds = new HashSet<XSD>();\n        inputRootXsds.addAll(getXsds(inputValidator));\n        rootXsds.addAll(inputRootXsds);\n        inputXsds.addAll(SchemaUtils.getXsdsRecursive(inputRootXsds));\n        xsds.addAll(inputXsds);\n        if (outputValidator != null) {\n            Set<XSD> outputRootXsds = new HashSet<XSD>();\n            outputRootXsds.addAll(getXsds(outputValidator));\n            rootXsds.addAll(outputRootXsds);\n            outputXsds.addAll(SchemaUtils.getXsdsRecursive(outputRootXsds));\n            xsds.addAll(outputXsds);\n        }\n        prefixByXsd = new LinkedHashMap<XSD, String>();\n        namespaceByPrefix = new LinkedHashMap<String, String>();\n        int prefixCount = 1;\n        xsdsGroupedByNamespace =\n                SchemaUtils.getXsdsGroupedByNamespace(xsds, true);\n        for (String namespace: xsdsGroupedByNamespace.keySet()) {\n            // When a schema has targetNamespace=\"http://www.w3.org/XML/1998/namespace\"\n            // it needs to be ignored as prefix xml is the only allowed prefix\n            // for namespace http://www.w3.org/XML/1998/namespace. The xml\n            // prefix doesn't have to be declared as the prefix xml is by\n            // definition bound to the namespace name http://www.w3.org/XML/1998/namespace\n            // (see http://www.w3.org/TR/xml-names/#ns-decl).\n            if (!\"http://www.w3.org/XML/1998/namespace\".equals(namespace)) {\n                for (XSD xsd: xsdsGroupedByNamespace.get(namespace)) {\n                    prefixByXsd.put(xsd, \"ns\" + prefixCount);\n                }\n                namespaceByPrefix.put(\"ns\" + prefixCount, namespace);\n                prefixCount++;\n            }\n        }\n        for (XSD xsd : xsds) {\n            if (StringUtils.isEmpty(xsd.getTargetNamespace())\n                    && !xsd.isAddNamespaceToSchema()) {\n                warn(\"XSD '\" + xsd\n                        + \"' doesn't have a targetNamespace and addNamespaceToSchema is false\");\n            }\n        }\n        inputRoot = getRoot(inputValidator);\n        inputHeaderElement = getHeaderElement(inputValidator, inputXsds);\n    \tinputHeaderIsOptional = isHeaderOptional(inputValidator);\n        inputBodyElement = getBodyElement(inputValidator, inputXsds, \"inputValidator\");\n        if (outputValidator != null) {\n            outputRoot = getRoot(outputValidator);\n            outputHeaderElement = getHeaderElement(outputValidator, outputXsds);\n        \toutputHeaderIsOptional = isHeaderOptional(outputValidator);\n            outputBodyElement = getBodyElement(outputValidator, outputXsds, \"outputValidator\");\n        }\n        for (IListener listener : WsdlUtils.getListeners(pipeLine.getAdapter())) {\n            if (listener instanceof WebServiceListener) {\n                httpActive = true;\n            } else if (listener instanceof JmsListener) {\n                jmsActive = true;\n            } else if (listener instanceof JavaListener) {\n            \tJavaListener jl = (JavaListener) listener;\n            \tif (jl.isHttpWsdl())\n            \thttpActive = true;\n            }\n        }\n    }", "signature": "void init()", "full_signature": "public void init()", "class_method_signature": "Wsdl.init()", "testcase": false, "constructor": false, "invocations": ["addAll", "getXsds", "addAll", "addAll", "getXsdsRecursive", "addAll", "addAll", "getXsds", "addAll", "addAll", "getXsdsRecursive", "addAll", "getXsdsGroupedByNamespace", "keySet", "equals", "get", "put", "put", "isEmpty", "getTargetNamespace", "isAddNamespaceToSchema", "warn", "getRoot", "getHeaderElement", "isHeaderOptional", "getBodyElement", "getRoot", "getHeaderElement", "isHeaderOptional", "getBodyElement", "getListeners", "getAdapter", "isHttpWsdl"]}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}