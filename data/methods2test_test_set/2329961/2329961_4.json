{"test_class": {"identifier": "TimberHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String logMessage = \"this is the log message\";", "modifier": "private static final", "type": "String", "declarator": "logMessage = \"this is the log message\"", "var_name": "logMessage"}, {"original_string": "private int serverListenPort;", "modifier": "private", "type": "int", "declarator": "serverListenPort", "var_name": "serverListenPort"}, {"original_string": "private Server server;", "modifier": "private", "type": "Server", "declarator": "server", "var_name": "server"}, {"original_string": "private ListLogHandler listLogHandler;", "modifier": "private", "type": "ListLogHandler", "declarator": "listLogHandler", "var_name": "listLogHandler"}, {"original_string": "private LogRecord rec;", "modifier": "private", "type": "LogRecord", "declarator": "rec", "var_name": "rec"}], "file": "timber/src/test/java/org/cloudname/timber/logger/TimberHandlerTest.java"}, "test_case": {"identifier": "testSimple", "parameters": "()", "modifiers": "@Test @Ignore public", "return": "void", "body": "@Test\n    @Ignore\n    public void testSimple() {\n        TimberHandler handler = new TimberHandler(\"myservice\", \"localhost\", serverListenPort);\n        handler.publish(rec);\n        assertEquals(1, listLogHandler.getEvents().size());\n    }", "signature": "void testSimple()", "full_signature": "@Test @Ignore public void testSimple()", "class_method_signature": "TimberHandlerTest.testSimple()", "testcase": true, "constructor": false, "invocations": ["publish", "assertEquals", "size", "getEvents"]}, "focal_class": {"identifier": "TimberHandler", "superclass": "extends Handler", "interfaces": "", "fields": [{"original_string": "private TimberClient client;", "modifier": "private", "type": "TimberClient", "declarator": "client", "var_name": "client"}, {"original_string": "private Converter converter;", "modifier": "private", "type": "Converter", "declarator": "converter", "var_name": "converter"}, {"original_string": "private String service;", "modifier": "private", "type": "String", "declarator": "service", "var_name": "service"}, {"original_string": "private String host;", "modifier": "private", "type": "String", "declarator": "host", "var_name": "host"}, {"original_string": "private int port;", "modifier": "private", "type": "int", "declarator": "port", "var_name": "port"}], "methods": [{"identifier": "TimberHandler", "parameters": "(String service, String host, int port)", "modifiers": "public", "return": "", "signature": " TimberHandler(String service, String host, int port)", "full_signature": "public  TimberHandler(String service, String host, int port)", "class_method_signature": "TimberHandler.TimberHandler(String service, String host, int port)", "testcase": false, "constructor": true}, {"identifier": "ensureLogserverConnection", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void ensureLogserverConnection()", "full_signature": "private void ensureLogserverConnection()", "class_method_signature": "TimberHandler.ensureLogserverConnection()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "TimberHandler.close()", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void flush()", "full_signature": "@Override public void flush()", "class_method_signature": "TimberHandler.flush()", "testcase": false, "constructor": false}, {"identifier": "publish", "parameters": "(LogRecord record)", "modifiers": "@Override public", "return": "void", "signature": "void publish(LogRecord record)", "full_signature": "@Override public void publish(LogRecord record)", "class_method_signature": "TimberHandler.publish(LogRecord record)", "testcase": false, "constructor": false}], "file": "timber/src/main/java/org/cloudname/timber/logger/TimberHandler.java"}, "focal_method": {"identifier": "publish", "parameters": "(LogRecord record)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void publish(LogRecord record) {\n        ensureLogserverConnection();\n        client.submitLogEvent(converter.convertFrom(record));\n    }", "signature": "void publish(LogRecord record)", "full_signature": "@Override public void publish(LogRecord record)", "class_method_signature": "TimberHandler.publish(LogRecord record)", "testcase": false, "constructor": false, "invocations": ["ensureLogserverConnection", "submitLogEvent", "convertFrom"]}, "repository": {"repo_id": 2329961, "url": "https://github.com/Cloudname/cloudname", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 21, "size": 26031, "license": "licensed"}}