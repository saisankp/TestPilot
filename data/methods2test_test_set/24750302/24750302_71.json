{"test_class": {"identifier": "PatchUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TestObject testObject;", "modifier": "private", "type": "TestObject", "declarator": "testObject", "var_name": "testObject"}], "file": "alien4cloud-common/src/test/java/alien4cloud/rest/utils/PatchUtilTest.java"}, "test_case": {"identifier": "check_a_patch_can_update_a_value", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void check_a_patch_can_update_a_value() throws Exception {\n        Map<String, String> patch = new HashMap<String, String>() {{\n            put(\"a\", \"2\");\n        }};\n\n        PatchUtil.setMap(testObject.getMap(), patch, true);\n\n        assertThat(testObject.getMap()).containsEntry(\"a\",\"2\").containsEntry(\"b\", \"2\");\n    }", "signature": "void check_a_patch_can_update_a_value()", "full_signature": "@Test public void check_a_patch_can_update_a_value()", "class_method_signature": "PatchUtilTest.check_a_patch_can_update_a_value()", "testcase": true, "constructor": false, "invocations": ["put", "setMap", "getMap", "containsEntry", "containsEntry", "assertThat", "getMap"]}, "focal_class": {"identifier": "PatchUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NULL = \"null\";", "modifier": "private static final", "type": "String", "declarator": "NULL = \"null\"", "var_name": "NULL"}], "methods": [{"identifier": "set", "parameters": "(Object instance, String fieldName, Object value, boolean patch)", "modifiers": "public static", "return": "boolean", "signature": "boolean set(Object instance, String fieldName, Object value, boolean patch)", "full_signature": "public static boolean set(Object instance, String fieldName, Object value, boolean patch)", "class_method_signature": "PatchUtil.set(Object instance, String fieldName, Object value, boolean patch)", "testcase": false, "constructor": false}, {"identifier": "setMap", "parameters": "(Map<A, B> instance, Map<A, B> newValues, boolean patch)", "modifiers": "public static", "return": "Map<A, B>", "signature": "Map<A, B> setMap(Map<A, B> instance, Map<A, B> newValues, boolean patch)", "full_signature": "public static Map<A, B> setMap(Map<A, B> instance, Map<A, B> newValues, boolean patch)", "class_method_signature": "PatchUtil.setMap(Map<A, B> instance, Map<A, B> newValues, boolean patch)", "testcase": false, "constructor": false}, {"identifier": "realValue", "parameters": "(T value)", "modifiers": "public static", "return": "T", "signature": "T realValue(T value)", "full_signature": "public static T realValue(T value)", "class_method_signature": "PatchUtil.realValue(T value)", "testcase": false, "constructor": false}], "file": "alien4cloud-common/src/main/java/alien4cloud/rest/utils/PatchUtil.java"}, "focal_method": {"identifier": "setMap", "parameters": "(Map<A, B> instance, Map<A, B> newValues, boolean patch)", "modifiers": "public static", "return": "Map<A, B>", "body": "public static <A, B> Map<A, B> setMap(Map<A, B> instance, Map<A, B> newValues, boolean patch) {\n        if (patch) {\n            if (newValues == null || newValues.size() == 0) {\n                return instance;\n            }\n        }\n\n        if (instance == null) {\n            instance = new HashMap<>();\n        }\n\n        if (patch) {\n            for (Map.Entry<A, B> entry : newValues.entrySet()) {\n                if (entry.getValue() == null || realValue(entry.getValue()) == null) {\n                    // remove\n                    instance.remove(entry.getKey());\n                } else {\n                    // add or update\n                    instance.put(entry.getKey(), entry.getValue());\n                }\n            }\n        } else {\n            instance.clear();\n            instance.putAll(safe(newValues));\n        }\n\n        return instance;\n    }", "signature": "Map<A, B> setMap(Map<A, B> instance, Map<A, B> newValues, boolean patch)", "full_signature": "public static Map<A, B> setMap(Map<A, B> instance, Map<A, B> newValues, boolean patch)", "class_method_signature": "PatchUtil.setMap(Map<A, B> instance, Map<A, B> newValues, boolean patch)", "testcase": false, "constructor": false, "invocations": ["size", "entrySet", "getValue", "realValue", "getValue", "remove", "getKey", "put", "getKey", "getValue", "clear", "putAll", "safe"]}, "repository": {"repo_id": 24750302, "url": "https://github.com/alien4cloud/alien4cloud", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 67, "size": 27647, "license": "licensed"}}