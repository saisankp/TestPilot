{"test_class": {"identifier": "PermutationTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "tool/group/src/test/java/org/openscience/cdk/group/PermutationTest.java"}, "test_case": {"identifier": "getOrbitTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getOrbitTest() {\n        Permutation p = new Permutation(4, 6, 1, 3, 2, 5, 0);\n        List<Integer> orbit = p.getOrbit(1);\n        Assert.assertEquals(5, orbit.size());\n        Assert.assertTrue(orbit.contains(1));\n    }", "signature": "void getOrbitTest()", "full_signature": "@Test public void getOrbitTest()", "class_method_signature": "PermutationTest.getOrbitTest()", "testcase": true, "constructor": false, "invocations": ["getOrbit", "assertEquals", "size", "assertTrue", "contains"]}, "focal_class": {"identifier": "Permutation", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final int[] values;", "modifier": "private final", "type": "int[]", "declarator": "values", "var_name": "values"}], "methods": [{"identifier": "Permutation", "parameters": "(int size)", "modifiers": "public", "return": "", "signature": " Permutation(int size)", "full_signature": "public  Permutation(int size)", "class_method_signature": "Permutation.Permutation(int size)", "testcase": false, "constructor": true}, {"identifier": "Permutation", "parameters": "(int... values)", "modifiers": "public", "return": "", "signature": " Permutation(int... values)", "full_signature": "public  Permutation(int... values)", "class_method_signature": "Permutation.Permutation(int... values)", "testcase": false, "constructor": true}, {"identifier": "Permutation", "parameters": "(Permutation other)", "modifiers": "public", "return": "", "signature": " Permutation(Permutation other)", "full_signature": "public  Permutation(Permutation other)", "class_method_signature": "Permutation.Permutation(Permutation other)", "testcase": false, "constructor": true}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Permutation.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Permutation.hashCode()", "testcase": false, "constructor": false}, {"identifier": "isIdentity", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isIdentity()", "full_signature": "public boolean isIdentity()", "class_method_signature": "Permutation.isIdentity()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "Permutation.size()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int index)", "modifiers": "public", "return": "int", "signature": "int get(int index)", "full_signature": "public int get(int index)", "class_method_signature": "Permutation.get(int index)", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "()", "modifiers": "public", "return": "int[]", "signature": "int[] getValues()", "full_signature": "public int[] getValues()", "class_method_signature": "Permutation.getValues()", "testcase": false, "constructor": false}, {"identifier": "firstIndexOfDifference", "parameters": "(Permutation other)", "modifiers": "public", "return": "int", "signature": "int firstIndexOfDifference(Permutation other)", "full_signature": "public int firstIndexOfDifference(Permutation other)", "class_method_signature": "Permutation.firstIndexOfDifference(Permutation other)", "testcase": false, "constructor": false}, {"identifier": "getOrbit", "parameters": "(int element)", "modifiers": "public", "return": "List<Integer>", "signature": "List<Integer> getOrbit(int element)", "full_signature": "public List<Integer> getOrbit(int element)", "class_method_signature": "Permutation.getOrbit(int element)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int index, int value)", "modifiers": "public", "return": "void", "signature": "void set(int index, int value)", "full_signature": "public void set(int index, int value)", "class_method_signature": "Permutation.set(int index, int value)", "testcase": false, "constructor": false}, {"identifier": "setTo", "parameters": "(Permutation other)", "modifiers": "public", "return": "void", "signature": "void setTo(Permutation other)", "full_signature": "public void setTo(Permutation other)", "class_method_signature": "Permutation.setTo(Permutation other)", "testcase": false, "constructor": false}, {"identifier": "multiply", "parameters": "(Permutation other)", "modifiers": "public", "return": "Permutation", "signature": "Permutation multiply(Permutation other)", "full_signature": "public Permutation multiply(Permutation other)", "class_method_signature": "Permutation.multiply(Permutation other)", "testcase": false, "constructor": false}, {"identifier": "invert", "parameters": "()", "modifiers": "public", "return": "Permutation", "signature": "Permutation invert()", "full_signature": "public Permutation invert()", "class_method_signature": "Permutation.invert()", "testcase": false, "constructor": false}, {"identifier": "toCycleString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toCycleString()", "full_signature": "public String toCycleString()", "class_method_signature": "Permutation.toCycleString()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Permutation.toString()", "testcase": false, "constructor": false}], "file": "tool/group/src/main/java/org/openscience/cdk/group/Permutation.java"}, "focal_method": {"identifier": "getOrbit", "parameters": "(int element)", "modifiers": "public", "return": "List<Integer>", "body": "public List<Integer> getOrbit(int element) {\n        List<Integer> orbit = new ArrayList<Integer>();\n        orbit.add(element);\n        int i = values[element];\n        while (i != element && orbit.size() < values.length) {\n            orbit.add(i);\n            i = values[i];\n        }\n        return orbit;\n    }", "signature": "List<Integer> getOrbit(int element)", "full_signature": "public List<Integer> getOrbit(int element)", "class_method_signature": "Permutation.getOrbit(int element)", "testcase": false, "constructor": false, "invocations": ["add", "size", "add"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}