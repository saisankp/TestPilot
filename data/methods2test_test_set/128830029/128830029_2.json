{"test_class": {"identifier": "ListenerRegistriesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ListenerRegistry<String, String> listenerRegistry;", "modifier": "@Mock\n    private", "type": "ListenerRegistry<String, String>", "declarator": "listenerRegistry", "var_name": "listenerRegistry"}], "file": "registry/src/test/java/ru/hyndo/sightmenu/registry/ListenerRegistriesTest.java"}, "test_case": {"identifier": "newImmutableListener", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void newImmutableListener() {\n        MutableClass id = new MutableClass(\"id\");\n        MutableClass listener = new MutableClass(\"listener\");\n        ListenerRegistry.RegisteredListener<MutableClass, MutableClass> registeredListener =\n                ListenerRegistries.newImmutableRegisteredListener(id, listener, new ListenerRegistries.ImmutableListenerProvider<MutableClass, MutableClass>() {\n                    @Override\n                    public MutableClass toImmutableIdentifier(MutableClass mutableClass) {\n                        return new MutableClass(mutableClass.a);\n                    }\n\n                    @Override\n                    public MutableClass toImmutableListener(MutableClass mutableClass) {\n                        return new MutableClass(mutableClass.a);\n                    }\n                });\n        assertEquals(\"id\", registeredListener.getIdentifier().a);\n        assertEquals(\"listener\", registeredListener.getListener().a);\n        id.a = \"changed\";\n        listener.a = \"changed\";\n        assertEquals(\"id\", registeredListener.getIdentifier().a);\n        assertEquals(\"listener\", registeredListener.getListener().a);\n    }", "signature": "void newImmutableListener()", "full_signature": "@Test public void newImmutableListener()", "class_method_signature": "ListenerRegistriesTest.newImmutableListener()", "testcase": true, "constructor": false, "invocations": ["newImmutableRegisteredListener", "assertEquals", "getIdentifier", "assertEquals", "getListener", "assertEquals", "getIdentifier", "assertEquals", "getListener"]}, "focal_class": {"identifier": "ListenerRegistries", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "copyOf", "parameters": "(ListenerRegistry<I, F> registry,\n                                                       Function<Map<I, ListenerRegistry.RegisteredListener<I, F>>, ListenerRegistry<I, F>> registryFactory)", "modifiers": "public static", "return": "ListenerRegistry<I, F>", "signature": "ListenerRegistry<I, F> copyOf(ListenerRegistry<I, F> registry,\n                                                       Function<Map<I, ListenerRegistry.RegisteredListener<I, F>>, ListenerRegistry<I, F>> registryFactory)", "full_signature": "public static ListenerRegistry<I, F> copyOf(ListenerRegistry<I, F> registry,\n                                                       Function<Map<I, ListenerRegistry.RegisteredListener<I, F>>, ListenerRegistry<I, F>> registryFactory)", "class_method_signature": "ListenerRegistries.copyOf(ListenerRegistry<I, F> registry,\n                                                       Function<Map<I, ListenerRegistry.RegisteredListener<I, F>>, ListenerRegistry<I, F>> registryFactory)", "testcase": false, "constructor": false}, {"identifier": "newImmutableRegisteredListener", "parameters": "(I identifier, F listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "modifiers": "public static", "return": "ListenerRegistry.RegisteredListener<I, F>", "signature": "ListenerRegistry.RegisteredListener<I, F> newImmutableRegisteredListener(I identifier, F listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "full_signature": "public static ListenerRegistry.RegisteredListener<I, F> newImmutableRegisteredListener(I identifier, F listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "class_method_signature": "ListenerRegistries.newImmutableRegisteredListener(I identifier, F listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "testcase": false, "constructor": false}, {"identifier": "newImmutableRegisteredListener", "parameters": "(ListenerRegistry.RegisteredListener<I, F> listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "modifiers": "public static", "return": "ListenerRegistry.RegisteredListener<I, F>", "signature": "ListenerRegistry.RegisteredListener<I, F> newImmutableRegisteredListener(ListenerRegistry.RegisteredListener<I, F> listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "full_signature": "public static ListenerRegistry.RegisteredListener<I, F> newImmutableRegisteredListener(ListenerRegistry.RegisteredListener<I, F> listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "class_method_signature": "ListenerRegistries.newImmutableRegisteredListener(ListenerRegistry.RegisteredListener<I, F> listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "testcase": false, "constructor": false}, {"identifier": "newRegisteredListener", "parameters": "(I id, F listener)", "modifiers": "public static", "return": "ListenerRegistry.RegisteredListener<I, F>", "signature": "ListenerRegistry.RegisteredListener<I, F> newRegisteredListener(I id, F listener)", "full_signature": "public static ListenerRegistry.RegisteredListener<I, F> newRegisteredListener(I id, F listener)", "class_method_signature": "ListenerRegistries.newRegisteredListener(I id, F listener)", "testcase": false, "constructor": false}, {"identifier": "newImmutableRegistry", "parameters": "(ListenerRegistry<I, F> registry)", "modifiers": "public static", "return": "ListenerRegistry<I, F>", "signature": "ListenerRegistry<I, F> newImmutableRegistry(ListenerRegistry<I, F> registry)", "full_signature": "public static ListenerRegistry<I, F> newImmutableRegistry(ListenerRegistry<I, F> registry)", "class_method_signature": "ListenerRegistries.newImmutableRegistry(ListenerRegistry<I, F> registry)", "testcase": false, "constructor": false}], "file": "registry/src/main/java/ru/hyndo/sightmenu/registry/ListenerRegistries.java"}, "focal_method": {"identifier": "newImmutableRegisteredListener", "parameters": "(I identifier, F listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "modifiers": "public static", "return": "ListenerRegistry.RegisteredListener<I, F>", "body": "public static <I, F> ListenerRegistry.RegisteredListener<I, F> newImmutableRegisteredListener(I identifier, F listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider) {\n        return new ImmutableRegisteredListener<>(identifier, listener, immutableListenerProvider);\n    }", "signature": "ListenerRegistry.RegisteredListener<I, F> newImmutableRegisteredListener(I identifier, F listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "full_signature": "public static ListenerRegistry.RegisteredListener<I, F> newImmutableRegisteredListener(I identifier, F listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "class_method_signature": "ListenerRegistries.newImmutableRegisteredListener(I identifier, F listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 128830029, "url": "https://github.com/hyndor/SightMenu", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 130, "license": "licensed"}}