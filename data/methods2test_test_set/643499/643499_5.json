{"test_class": {"identifier": "CsvWriterTest", "superclass": "", "interfaces": "", "fields": [], "file": "CodeSmells/src/csv/CsvWriterTest.java"}, "test_case": {"identifier": "testWriter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testWriter() {\n\t\tCsvWriter writer = new CsvWriter();\n\t\tString[][] lines = new String[][] {\n\t\t\t\tnew String[] {},\n\t\t\t\tnew String[] { \"only one field\" },\n\t\t\t\tnew String[] { \"two\", \"fields\" },\n\t\t\t\tnew String[] { \"\", \"contents\", \"several words included\" },\n\t\t\t\tnew String[] { \",\", \"embedded , commas, included\",\n\t\t\t\t\t\t\"trailing comma,\" },\n\t\t\t\tnew String[] { \"\\\"\", \"embedded \\\" quotes\",\n\t\t\t\t\t\t\"multiple \\\"\\\"\\\" quotes\\\"\\\"\" },\n\t\t\t\tnew String[] { \"mixed commas, and \\\"quotes\\\"\", \"simple field\" } };\n\n\t\t// Expected:\n\t\t// -- (empty line)\n\t\t// only one field\n\t\t// two,fields\n\t\t// ,contents,several words included\n\t\t// \",\",\"embedded , commas, included\",\"trailing comma,\"\n\t\t// \"\"\"\",\"embedded \"\" quotes\",\"multiple \"\"\"\"\"\" quotes\"\"\"\"\"\n\t\t// \"mixed commas, and \"\"quotes\"\"\",simple field\n\n\t\twriter.write(lines);\n\t}", "signature": "void testWriter()", "full_signature": "@Test public void testWriter()", "class_method_signature": "CsvWriterTest.testWriter()", "testcase": true, "constructor": false, "invocations": ["write"]}, "focal_class": {"identifier": "CsvWriter", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "CsvWriter", "parameters": "()", "modifiers": "public", "return": "", "signature": " CsvWriter()", "full_signature": "public  CsvWriter()", "class_method_signature": "CsvWriter.CsvWriter()", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(String[][] lines)", "modifiers": "public", "return": "void", "signature": "void write(String[][] lines)", "full_signature": "public void write(String[][] lines)", "class_method_signature": "CsvWriter.write(String[][] lines)", "testcase": false, "constructor": false}, {"identifier": "writeLine", "parameters": "(String[] fields)", "modifiers": "private", "return": "void", "signature": "void writeLine(String[] fields)", "full_signature": "private void writeLine(String[] fields)", "class_method_signature": "CsvWriter.writeLine(String[] fields)", "testcase": false, "constructor": false}, {"identifier": "writeField", "parameters": "(String field)", "modifiers": "private", "return": "void", "signature": "void writeField(String field)", "full_signature": "private void writeField(String field)", "class_method_signature": "CsvWriter.writeField(String field)", "testcase": false, "constructor": false}, {"identifier": "writeQuoted", "parameters": "(String field)", "modifiers": "private", "return": "void", "signature": "void writeQuoted(String field)", "full_signature": "private void writeQuoted(String field)", "class_method_signature": "CsvWriter.writeQuoted(String field)", "testcase": false, "constructor": false}], "file": "CodeSmells/src/csv/CsvWriter.java"}, "focal_method": {"identifier": "write", "parameters": "(String[][] lines)", "modifiers": "public", "return": "void", "body": "public void write(String[][] lines) {\n        for (int i = 0; i < lines.length; i++)\n            writeLine(lines[i]);\n    }", "signature": "void write(String[][] lines)", "full_signature": "public void write(String[][] lines)", "class_method_signature": "CsvWriter.write(String[][] lines)", "testcase": false, "constructor": false, "invocations": ["writeLine"]}, "repository": {"repo_id": 643499, "url": "https://github.com/unclebob/Welc", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 210, "license": "licensed"}}