{"test_class": {"identifier": "CityParserTest", "superclass": "extends AbstractSpecTest", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(CityParserTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(CityParserTest.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private CityParser parser;", "modifier": "@Autowired\n    private", "type": "CityParser", "declarator": "parser", "var_name": "parser"}], "file": "geoclient-parser/src/test/java/gov/nyc/doitt/gis/geoclient/parser/regex/CityParserTest.java"}, "test_case": {"identifier": "testParse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParse()\n    {\n        testParser(parser, LOGGER);\n    }", "signature": "void testParse()", "full_signature": "@Test public void testParse()", "class_method_signature": "CityParserTest.testParse()", "testcase": true, "constructor": false, "invocations": ["testParser"]}, "focal_class": {"identifier": "CityParser", "superclass": "extends AbstractRegexParser", "interfaces": "", "fields": [{"original_string": "private final Pattern cityPattern;", "modifier": "private final", "type": "Pattern", "declarator": "cityPattern", "var_name": "cityPattern"}, {"original_string": "private final Pattern cityAndNycPattern;", "modifier": "private final", "type": "Pattern", "declarator": "cityAndNycPattern", "var_name": "cityAndNycPattern"}, {"original_string": "private final Pattern cityAndStatePattern;", "modifier": "private final", "type": "Pattern", "declarator": "cityAndStatePattern", "var_name": "cityAndStatePattern"}], "methods": [{"identifier": "CityParser", "parameters": "(Set<String> cityNames)", "modifiers": "public", "return": "", "signature": " CityParser(Set<String> cityNames)", "full_signature": "public  CityParser(Set<String> cityNames)", "class_method_signature": "CityParser.CityParser(Set<String> cityNames)", "testcase": false, "constructor": true}, {"identifier": "parse", "parameters": "(ParseContext parseContext)", "modifiers": "@Override public", "return": "void", "signature": "void parse(ParseContext parseContext)", "full_signature": "@Override public void parse(ParseContext parseContext)", "class_method_signature": "CityParser.parse(ParseContext parseContext)", "testcase": false, "constructor": false}, {"identifier": "buildEndsWithCityAndNycPattern", "parameters": "(Set<String> cityNames)", "modifiers": "protected", "return": "Pattern", "signature": "Pattern buildEndsWithCityAndNycPattern(Set<String> cityNames)", "full_signature": "protected Pattern buildEndsWithCityAndNycPattern(Set<String> cityNames)", "class_method_signature": "CityParser.buildEndsWithCityAndNycPattern(Set<String> cityNames)", "testcase": false, "constructor": false}, {"identifier": "buildEndsWithCityAndStatePattern", "parameters": "(Set<String> cityNames)", "modifiers": "protected", "return": "Pattern", "signature": "Pattern buildEndsWithCityAndStatePattern(Set<String> cityNames)", "full_signature": "protected Pattern buildEndsWithCityAndStatePattern(Set<String> cityNames)", "class_method_signature": "CityParser.buildEndsWithCityAndStatePattern(Set<String> cityNames)", "testcase": false, "constructor": false}, {"identifier": "buildEndsWithCityPattern", "parameters": "(Set<String> cityNames)", "modifiers": "protected", "return": "Pattern", "signature": "Pattern buildEndsWithCityPattern(Set<String> cityNames)", "full_signature": "protected Pattern buildEndsWithCityPattern(Set<String> cityNames)", "class_method_signature": "CityParser.buildEndsWithCityPattern(Set<String> cityNames)", "testcase": false, "constructor": false}, {"identifier": "parseCityAndNyc", "parameters": "(ParseContext parseContext)", "modifiers": "private", "return": "boolean", "signature": "boolean parseCityAndNyc(ParseContext parseContext)", "full_signature": "private boolean parseCityAndNyc(ParseContext parseContext)", "class_method_signature": "CityParser.parseCityAndNyc(ParseContext parseContext)", "testcase": false, "constructor": false}, {"identifier": "parseCityAndState", "parameters": "(ParseContext parseContext)", "modifiers": "private", "return": "boolean", "signature": "boolean parseCityAndState(ParseContext parseContext)", "full_signature": "private boolean parseCityAndState(ParseContext parseContext)", "class_method_signature": "CityParser.parseCityAndState(ParseContext parseContext)", "testcase": false, "constructor": false}, {"identifier": "parseCity", "parameters": "(ParseContext parseContext)", "modifiers": "private", "return": "boolean", "signature": "boolean parseCity(ParseContext parseContext)", "full_signature": "private boolean parseCity(ParseContext parseContext)", "class_method_signature": "CityParser.parseCity(ParseContext parseContext)", "testcase": false, "constructor": false}], "file": "geoclient-parser/src/main/java/gov/nyc/doitt/gis/geoclient/parser/regex/CityParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(ParseContext parseContext)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void parse(ParseContext parseContext)\n    {\n        boolean found = parseCityAndNyc(parseContext);\n        if(!found){\n            found = parseCityAndState(parseContext);\n        }\n        if(!found)\n        {\n            found = parseCity(parseContext);\n        }\n    }", "signature": "void parse(ParseContext parseContext)", "full_signature": "@Override public void parse(ParseContext parseContext)", "class_method_signature": "CityParser.parse(ParseContext parseContext)", "testcase": false, "constructor": false, "invocations": ["parseCityAndNyc", "parseCityAndState", "parseCity"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}