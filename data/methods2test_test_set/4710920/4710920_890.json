{"test_class": {"identifier": "AbstractMethodBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/AbstractMethodBuilderTest.java"}, "test_case": {"identifier": "merger", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void merger() {\n        MethodBuilder builder = new MethodBuilder();\n        builder.merger(\"merger\");\n        Assertions.assertEquals(\"merger\", builder.build().getMerger());\n    }", "signature": "void merger()", "full_signature": "@Test void merger()", "class_method_signature": "AbstractMethodBuilderTest.merger()", "testcase": true, "constructor": false, "invocations": ["merger", "assertEquals", "getMerger", "build"]}, "focal_class": {"identifier": "AbstractMethodBuilder", "superclass": "extends AbstractBuilder<T, B>", "interfaces": "", "fields": [{"original_string": "protected Integer timeout;", "modifier": "protected", "type": "Integer", "declarator": "timeout", "var_name": "timeout"}, {"original_string": "protected Integer retries;", "modifier": "protected", "type": "Integer", "declarator": "retries", "var_name": "retries"}, {"original_string": "protected Integer actives;", "modifier": "protected", "type": "Integer", "declarator": "actives", "var_name": "actives"}, {"original_string": "protected String loadbalance;", "modifier": "protected", "type": "String", "declarator": "loadbalance", "var_name": "loadbalance"}, {"original_string": "protected Boolean async;", "modifier": "protected", "type": "Boolean", "declarator": "async", "var_name": "async"}, {"original_string": "protected Boolean sent;", "modifier": "protected", "type": "Boolean", "declarator": "sent", "var_name": "sent"}, {"original_string": "protected String mock;", "modifier": "protected", "type": "String", "declarator": "mock", "var_name": "mock"}, {"original_string": "protected String merger;", "modifier": "protected", "type": "String", "declarator": "merger", "var_name": "merger"}, {"original_string": "protected String cache;", "modifier": "protected", "type": "String", "declarator": "cache", "var_name": "cache"}, {"original_string": "protected String validation;", "modifier": "protected", "type": "String", "declarator": "validation", "var_name": "validation"}, {"original_string": "protected Map<String, String> parameters;", "modifier": "protected", "type": "Map<String, String>", "declarator": "parameters", "var_name": "parameters"}, {"original_string": "protected Integer forks;", "modifier": "protected", "type": "Integer", "declarator": "forks", "var_name": "forks"}], "methods": [{"identifier": "timeout", "parameters": "(Integer timeout)", "modifiers": "public", "return": "B", "signature": "B timeout(Integer timeout)", "full_signature": "public B timeout(Integer timeout)", "class_method_signature": "AbstractMethodBuilder.timeout(Integer timeout)", "testcase": false, "constructor": false}, {"identifier": "retries", "parameters": "(Integer retries)", "modifiers": "public", "return": "B", "signature": "B retries(Integer retries)", "full_signature": "public B retries(Integer retries)", "class_method_signature": "AbstractMethodBuilder.retries(Integer retries)", "testcase": false, "constructor": false}, {"identifier": "actives", "parameters": "(Integer actives)", "modifiers": "public", "return": "B", "signature": "B actives(Integer actives)", "full_signature": "public B actives(Integer actives)", "class_method_signature": "AbstractMethodBuilder.actives(Integer actives)", "testcase": false, "constructor": false}, {"identifier": "loadbalance", "parameters": "(String loadbalance)", "modifiers": "public", "return": "B", "signature": "B loadbalance(String loadbalance)", "full_signature": "public B loadbalance(String loadbalance)", "class_method_signature": "AbstractMethodBuilder.loadbalance(String loadbalance)", "testcase": false, "constructor": false}, {"identifier": "async", "parameters": "(Boolean async)", "modifiers": "public", "return": "B", "signature": "B async(Boolean async)", "full_signature": "public B async(Boolean async)", "class_method_signature": "AbstractMethodBuilder.async(Boolean async)", "testcase": false, "constructor": false}, {"identifier": "sent", "parameters": "(Boolean sent)", "modifiers": "public", "return": "B", "signature": "B sent(Boolean sent)", "full_signature": "public B sent(Boolean sent)", "class_method_signature": "AbstractMethodBuilder.sent(Boolean sent)", "testcase": false, "constructor": false}, {"identifier": "mock", "parameters": "(String mock)", "modifiers": "public", "return": "B", "signature": "B mock(String mock)", "full_signature": "public B mock(String mock)", "class_method_signature": "AbstractMethodBuilder.mock(String mock)", "testcase": false, "constructor": false}, {"identifier": "mock", "parameters": "(Boolean mock)", "modifiers": "public", "return": "B", "signature": "B mock(Boolean mock)", "full_signature": "public B mock(Boolean mock)", "class_method_signature": "AbstractMethodBuilder.mock(Boolean mock)", "testcase": false, "constructor": false}, {"identifier": "merger", "parameters": "(String merger)", "modifiers": "public", "return": "B", "signature": "B merger(String merger)", "full_signature": "public B merger(String merger)", "class_method_signature": "AbstractMethodBuilder.merger(String merger)", "testcase": false, "constructor": false}, {"identifier": "cache", "parameters": "(String cache)", "modifiers": "public", "return": "B", "signature": "B cache(String cache)", "full_signature": "public B cache(String cache)", "class_method_signature": "AbstractMethodBuilder.cache(String cache)", "testcase": false, "constructor": false}, {"identifier": "validation", "parameters": "(String validation)", "modifiers": "public", "return": "B", "signature": "B validation(String validation)", "full_signature": "public B validation(String validation)", "class_method_signature": "AbstractMethodBuilder.validation(String validation)", "testcase": false, "constructor": false}, {"identifier": "appendParameters", "parameters": "(Map<String, String> appendParameters)", "modifiers": "public", "return": "B", "signature": "B appendParameters(Map<String, String> appendParameters)", "full_signature": "public B appendParameters(Map<String, String> appendParameters)", "class_method_signature": "AbstractMethodBuilder.appendParameters(Map<String, String> appendParameters)", "testcase": false, "constructor": false}, {"identifier": "appendParameter", "parameters": "(String key, String value)", "modifiers": "public", "return": "B", "signature": "B appendParameter(String key, String value)", "full_signature": "public B appendParameter(String key, String value)", "class_method_signature": "AbstractMethodBuilder.appendParameter(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "forks", "parameters": "(Integer forks)", "modifiers": "public", "return": "B", "signature": "B forks(Integer forks)", "full_signature": "public B forks(Integer forks)", "class_method_signature": "AbstractMethodBuilder.forks(Integer forks)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(T instance)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "void", "signature": "void build(T instance)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public void build(T instance)", "class_method_signature": "AbstractMethodBuilder.build(T instance)", "testcase": false, "constructor": false}], "file": "dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/bootstrap/builders/AbstractMethodBuilder.java"}, "focal_method": {"identifier": "merger", "parameters": "(String merger)", "modifiers": "public", "return": "B", "body": "public B merger(String merger) {\n        this.merger = merger;\n        return getThis();\n    }", "signature": "B merger(String merger)", "full_signature": "public B merger(String merger)", "class_method_signature": "AbstractMethodBuilder.merger(String merger)", "testcase": false, "constructor": false, "invocations": ["getThis"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}