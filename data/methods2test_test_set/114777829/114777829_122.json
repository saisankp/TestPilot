{"test_class": {"identifier": "DefaultHttpHeaderManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "webapp/impl/src/test/java/cloud/piranha/webapp/impl/DefaultHttpHeaderManagerTest.java"}, "test_case": {"identifier": "testGetHeaders", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testGetHeaders() {\n        DefaultHttpHeaderManager manager = new DefaultHttpHeaderManager();\n        assertNotNull(manager.getHeaders(\"NAME\"));\n        assertFalse(manager.getHeaders(\"NAME\").hasMoreElements());\n    }", "signature": "void testGetHeaders()", "full_signature": "@Test void testGetHeaders()", "class_method_signature": "DefaultHttpHeaderManagerTest.testGetHeaders()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getHeaders", "assertFalse", "hasMoreElements", "getHeaders"]}, "focal_class": {"identifier": "DefaultHttpHeaderManager", "superclass": "", "interfaces": "implements HttpHeaderManager", "fields": [{"original_string": "protected final HashMap<String, DefaultHttpHeader> headers;", "modifier": "protected final", "type": "HashMap<String, DefaultHttpHeader>", "declarator": "headers", "var_name": "headers"}, {"original_string": "private Locale locale;", "modifier": "private", "type": "Locale", "declarator": "locale", "var_name": "locale"}], "methods": [{"identifier": "DefaultHttpHeaderManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultHttpHeaderManager()", "full_signature": "public  DefaultHttpHeaderManager()", "class_method_signature": "DefaultHttpHeaderManager.DefaultHttpHeaderManager()", "testcase": false, "constructor": true}, {"identifier": "addHeader", "parameters": "(String name, String value)", "modifiers": "@Override public", "return": "void", "signature": "void addHeader(String name, String value)", "full_signature": "@Override public void addHeader(String name, String value)", "class_method_signature": "DefaultHttpHeaderManager.addHeader(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "containsHeader", "parameters": "(String name)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsHeader(String name)", "full_signature": "@Override public boolean containsHeader(String name)", "class_method_signature": "DefaultHttpHeaderManager.containsHeader(String name)", "testcase": false, "constructor": false}, {"identifier": "getDateHeader", "parameters": "(String name)", "modifiers": "@Override public", "return": "long", "signature": "long getDateHeader(String name)", "full_signature": "@Override public long getDateHeader(String name)", "class_method_signature": "DefaultHttpHeaderManager.getDateHeader(String name)", "testcase": false, "constructor": false}, {"identifier": "getHeader", "parameters": "(String name)", "modifiers": "@Override public", "return": "String", "signature": "String getHeader(String name)", "full_signature": "@Override public String getHeader(String name)", "class_method_signature": "DefaultHttpHeaderManager.getHeader(String name)", "testcase": false, "constructor": false}, {"identifier": "getHeaderNames", "parameters": "()", "modifiers": "@Override public", "return": "Enumeration<String>", "signature": "Enumeration<String> getHeaderNames()", "full_signature": "@Override public Enumeration<String> getHeaderNames()", "class_method_signature": "DefaultHttpHeaderManager.getHeaderNames()", "testcase": false, "constructor": false}, {"identifier": "getHeaders", "parameters": "(String name)", "modifiers": "@Override public", "return": "Enumeration<String>", "signature": "Enumeration<String> getHeaders(String name)", "full_signature": "@Override public Enumeration<String> getHeaders(String name)", "class_method_signature": "DefaultHttpHeaderManager.getHeaders(String name)", "testcase": false, "constructor": false}, {"identifier": "getIntHeader", "parameters": "(String name)", "modifiers": "@Override public", "return": "int", "signature": "int getIntHeader(String name)", "full_signature": "@Override public int getIntHeader(String name)", "class_method_signature": "DefaultHttpHeaderManager.getIntHeader(String name)", "testcase": false, "constructor": false}, {"identifier": "setHeader", "parameters": "(String name, String value)", "modifiers": "@Override public", "return": "void", "signature": "void setHeader(String name, String value)", "full_signature": "@Override public void setHeader(String name, String value)", "class_method_signature": "DefaultHttpHeaderManager.setHeader(String name, String value)", "testcase": false, "constructor": false}], "file": "webapp/impl/src/main/java/cloud/piranha/webapp/impl/DefaultHttpHeaderManager.java"}, "focal_method": {"identifier": "getHeaders", "parameters": "(String name)", "modifiers": "@Override public", "return": "Enumeration<String>", "body": "@Override\n    public Enumeration<String> getHeaders(String name) {\n        Enumeration<String> result = Collections.enumeration(Collections.emptyList());\n        if (headers.containsKey(name.toUpperCase(locale))) {\n            result = headers.get(name.toUpperCase(locale)).getValues();\n        }\n        return result;\n    }", "signature": "Enumeration<String> getHeaders(String name)", "full_signature": "@Override public Enumeration<String> getHeaders(String name)", "class_method_signature": "DefaultHttpHeaderManager.getHeaders(String name)", "testcase": false, "constructor": false, "invocations": ["enumeration", "emptyList", "containsKey", "toUpperCase", "getValues", "get", "toUpperCase"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}