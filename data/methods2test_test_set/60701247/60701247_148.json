{"test_class": {"identifier": "MaterialDesignIconsTest", "superclass": "", "interfaces": "", "fields": [], "file": "android/testSrc/com/android/tools/idea/npw/assetstudio/MaterialDesignIconsTest.java"}, "test_case": {"identifier": "getBasenameToPathMapThrowsIllegalArgumentException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getBasenameToPathMapThrowsIllegalArgumentException() {\n        Function<String, List<String>> generator = mockGenerator();\n\n        Mockito.when(generator.apply(\"images/material_design_icons/device/\"))\n                .thenReturn(Collections.singletonList(\"ic_search_black_24dp.xml\"));\n\n        try {\n            MaterialDesignIcons.getBasenameToPathMap(generator);\n            fail();\n        } catch (IllegalArgumentException ignored) {\n        }\n    }", "signature": "void getBasenameToPathMapThrowsIllegalArgumentException()", "full_signature": "@Test public void getBasenameToPathMapThrowsIllegalArgumentException()", "class_method_signature": "MaterialDesignIconsTest.getBasenameToPathMapThrowsIllegalArgumentException()", "testcase": true, "constructor": false, "invocations": ["mockGenerator", "thenReturn", "when", "apply", "singletonList", "getBasenameToPathMap", "fail"]}, "focal_class": {"identifier": "MaterialDesignIcons", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_ICON_NAME = \"action/ic_android_black_24dp.xml\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_ICON_NAME = \"action/ic_android_black_24dp.xml\"", "var_name": "DEFAULT_ICON_NAME"}, {"original_string": "private static final String PATH = \"images/material_design_icons/\";", "modifier": "private static final", "type": "String", "declarator": "PATH = \"images/material_design_icons/\"", "var_name": "PATH"}, {"original_string": "private static final Pattern CATEGORY_PATTERN = Pattern.compile(PATH + \"(\\\\w+)/\");", "modifier": "private static final", "type": "Pattern", "declarator": "CATEGORY_PATTERN = Pattern.compile(PATH + \"(\\\\w+)/\")", "var_name": "CATEGORY_PATTERN"}], "methods": [{"identifier": "MaterialDesignIcons", "parameters": "()", "modifiers": "private", "return": "", "signature": " MaterialDesignIcons()", "full_signature": "private  MaterialDesignIcons()", "class_method_signature": "MaterialDesignIcons.MaterialDesignIcons()", "testcase": false, "constructor": true}, {"identifier": "getPathForBasename", "parameters": "(@NotNull String basename)", "modifiers": "@Nullable public static", "return": "String", "signature": "String getPathForBasename(@NotNull String basename)", "full_signature": "@Nullable public static String getPathForBasename(@NotNull String basename)", "class_method_signature": "MaterialDesignIcons.getPathForBasename(@NotNull String basename)", "testcase": false, "constructor": false}, {"identifier": "getBasenameToPathMap", "parameters": "(@NotNull Function<String, List<String>> generator)", "modifiers": "@NotNull @VisibleForTesting static", "return": "Map<String, String>", "signature": "Map<String, String> getBasenameToPathMap(@NotNull Function<String, List<String>> generator)", "full_signature": "@NotNull @VisibleForTesting static Map<String, String> getBasenameToPathMap(@NotNull Function<String, List<String>> generator)", "class_method_signature": "MaterialDesignIcons.getBasenameToPathMap(@NotNull Function<String, List<String>> generator)", "testcase": false, "constructor": false}, {"identifier": "getCategories", "parameters": "()", "modifiers": "@NotNull public static", "return": "Collection<String>", "signature": "Collection<String> getCategories()", "full_signature": "@NotNull public static Collection<String> getCategories()", "class_method_signature": "MaterialDesignIcons.getCategories()", "testcase": false, "constructor": false}, {"identifier": "getIconNames", "parameters": "(@NotNull String categoryName)", "modifiers": "@NotNull public static", "return": "List<String>", "signature": "List<String> getIconNames(@NotNull String categoryName)", "full_signature": "@NotNull public static List<String> getIconNames(@NotNull String categoryName)", "class_method_signature": "MaterialDesignIcons.getIconNames(@NotNull String categoryName)", "testcase": false, "constructor": false}, {"identifier": "getIcon", "parameters": "(@NotNull String iconName, @NotNull String categoryName)", "modifiers": "@NotNull public static", "return": "URL", "signature": "URL getIcon(@NotNull String iconName, @NotNull String categoryName)", "full_signature": "@NotNull public static URL getIcon(@NotNull String iconName, @NotNull String categoryName)", "class_method_signature": "MaterialDesignIcons.getIcon(@NotNull String iconName, @NotNull String categoryName)", "testcase": false, "constructor": false}, {"identifier": "getDefaultIcon", "parameters": "()", "modifiers": "@NotNull public static", "return": "URL", "signature": "URL getDefaultIcon()", "full_signature": "@NotNull public static URL getDefaultIcon()", "class_method_signature": "MaterialDesignIcons.getDefaultIcon()", "testcase": false, "constructor": false}, {"identifier": "getCategories", "parameters": "(@Nullable URL url)", "modifiers": "@VisibleForTesting static", "return": "Collection<String>", "signature": "Collection<String> getCategories(@Nullable URL url)", "full_signature": "@VisibleForTesting static Collection<String> getCategories(@Nullable URL url)", "class_method_signature": "MaterialDesignIcons.getCategories(@Nullable URL url)", "testcase": false, "constructor": false}, {"identifier": "getCategoriesFromFile", "parameters": "(@NotNull File file)", "modifiers": "@NotNull @VisibleForTesting static", "return": "Collection<String>", "signature": "Collection<String> getCategoriesFromFile(@NotNull File file)", "full_signature": "@NotNull @VisibleForTesting static Collection<String> getCategoriesFromFile(@NotNull File file)", "class_method_signature": "MaterialDesignIcons.getCategoriesFromFile(@NotNull File file)", "testcase": false, "constructor": false}, {"identifier": "getCategoriesFromJar", "parameters": "(@NotNull ZipFile jar)", "modifiers": "@NotNull @VisibleForTesting static", "return": "Collection<String>", "signature": "Collection<String> getCategoriesFromJar(@NotNull ZipFile jar)", "full_signature": "@NotNull @VisibleForTesting static Collection<String> getCategoriesFromJar(@NotNull ZipFile jar)", "class_method_signature": "MaterialDesignIcons.getCategoriesFromJar(@NotNull ZipFile jar)", "testcase": false, "constructor": false}, {"identifier": "getCategory", "parameters": "(@NotNull ZipEntry entry)", "modifiers": "@Nullable private static", "return": "String", "signature": "String getCategory(@NotNull ZipEntry entry)", "full_signature": "@Nullable private static String getCategory(@NotNull ZipEntry entry)", "class_method_signature": "MaterialDesignIcons.getCategory(@NotNull ZipEntry entry)", "testcase": false, "constructor": false}, {"identifier": "getIconDirectoryPath", "parameters": "(String categoryName)", "modifiers": "@NotNull private static", "return": "String", "signature": "String getIconDirectoryPath(String categoryName)", "full_signature": "@NotNull private static String getIconDirectoryPath(String categoryName)", "class_method_signature": "MaterialDesignIcons.getIconDirectoryPath(String categoryName)", "testcase": false, "constructor": false}, {"identifier": "getResourceUrl", "parameters": "(String iconPath)", "modifiers": "private static", "return": "URL", "signature": "URL getResourceUrl(String iconPath)", "full_signature": "private static URL getResourceUrl(String iconPath)", "class_method_signature": "MaterialDesignIcons.getResourceUrl(String iconPath)", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/npw/assetstudio/MaterialDesignIcons.java"}, "focal_method": {"identifier": "getBasenameToPathMap", "parameters": "(@NotNull Function<String, List<String>> generator)", "modifiers": "@NotNull @VisibleForTesting static", "return": "Map<String, String>", "body": "@NotNull\n  @VisibleForTesting\n  static Map<String, String> getBasenameToPathMap(@NotNull Function<String, List<String>> generator) {\n    ImmutableMap.Builder<String, String> builder = new ImmutableMap.Builder<>();\n    int dotXmlLength = DOT_XML.length();\n\n    for (String category : getCategories()) {\n      String path = PATH + category + '/';\n\n      for (String name : generator.apply(path)) {\n        builder.put(name.substring(0, name.length() - dotXmlLength), path + name);\n      }\n    }\n\n    return builder.build();\n  }", "signature": "Map<String, String> getBasenameToPathMap(@NotNull Function<String, List<String>> generator)", "full_signature": "@NotNull @VisibleForTesting static Map<String, String> getBasenameToPathMap(@NotNull Function<String, List<String>> generator)", "class_method_signature": "MaterialDesignIcons.getBasenameToPathMap(@NotNull Function<String, List<String>> generator)", "testcase": false, "constructor": false, "invocations": ["length", "getCategories", "apply", "put", "substring", "length", "build"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}