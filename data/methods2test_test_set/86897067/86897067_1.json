{"test_class": {"identifier": "RectGeofenceTest", "superclass": "", "interfaces": "", "fields": [], "file": "anymaps-base/src/test/java/com/car2go/maps/model/RectGeofenceTest.java"}, "test_case": {"identifier": "testOutside", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOutside() throws Exception {\n        assertFalse(createFence().contains(new LatLng(1.001, 0)));\n        assertFalse(createFence().contains(new LatLng(-1.001, 0)));\n        assertFalse(createFence().contains(new LatLng(0, 1.001)));\n        assertFalse(createFence().contains(new LatLng(0, -1.001)));\n    }", "signature": "void testOutside()", "full_signature": "@Test public void testOutside()", "class_method_signature": "RectGeofenceTest.testOutside()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "contains", "createFence", "assertFalse", "contains", "createFence", "assertFalse", "contains", "createFence", "assertFalse", "contains", "createFence"]}, "focal_class": {"identifier": "RectGeofence", "superclass": "", "interfaces": "implements Geofence", "fields": [{"original_string": "private final LatLng northWest;", "modifier": "private final", "type": "LatLng", "declarator": "northWest", "var_name": "northWest"}, {"original_string": "private final LatLng southEast;", "modifier": "private final", "type": "LatLng", "declarator": "southEast", "var_name": "southEast"}], "methods": [{"identifier": "RectGeofence", "parameters": "(LatLng northWest, LatLng southEast)", "modifiers": "public", "return": "", "signature": " RectGeofence(LatLng northWest, LatLng southEast)", "full_signature": "public  RectGeofence(LatLng northWest, LatLng southEast)", "class_method_signature": "RectGeofence.RectGeofence(LatLng northWest, LatLng southEast)", "testcase": false, "constructor": true}, {"identifier": "contains", "parameters": "(LatLng latLng)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(LatLng latLng)", "full_signature": "@Override public boolean contains(LatLng latLng)", "class_method_signature": "RectGeofence.contains(LatLng latLng)", "testcase": false, "constructor": false}], "file": "anymaps-base/src/main/java/com/car2go/maps/model/RectGeofence.java"}, "focal_method": {"identifier": "contains", "parameters": "(LatLng latLng)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean contains(LatLng latLng) {\n        double longitude = latLng.longitude;\n        double latitude = latLng.latitude;\n\n        double leftBorder = northWest.longitude;\n        double rightBorder = southEast.longitude;\n\n        double bottomBorder = southEast.latitude;\n        double topBorder = northWest.latitude;\n\n        return latitude >= bottomBorder && latitude <= topBorder && longitude >= leftBorder && longitude <= rightBorder;\n    }", "signature": "boolean contains(LatLng latLng)", "full_signature": "@Override public boolean contains(LatLng latLng)", "class_method_signature": "RectGeofence.contains(LatLng latLng)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 86897067, "url": "https://github.com/sharenowTech/AnyMaps", "language": "Java", "is_fork": false, "fork_count": 34, "stargazer_count": 163, "size": 19958, "license": "licensed"}}