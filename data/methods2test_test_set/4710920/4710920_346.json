{"test_class": {"identifier": "StatusUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-common/src/test/java/org/apache/dubbo/common/status/support/StatusUtilsTest.java"}, "test_case": {"identifier": "testGetSummaryStatus3", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSummaryStatus3() throws Exception {\n        Status status1 = new Status(Status.Level.OK);\n        Map<String, Status> statuses = new HashMap<String, Status>();\n        statuses.put(\"status1\", status1);\n        Status status = StatusUtils.getSummaryStatus(statuses);\n        assertThat(status.getLevel(), is(Status.Level.OK));\n        assertThat(status.getMessage(), isEmptyOrNullString());\n    }", "signature": "void testGetSummaryStatus3()", "full_signature": "@Test public void testGetSummaryStatus3()", "class_method_signature": "StatusUtilsTest.testGetSummaryStatus3()", "testcase": true, "constructor": false, "invocations": ["put", "getSummaryStatus", "assertThat", "getLevel", "is", "assertThat", "getMessage", "isEmptyOrNullString"]}, "focal_class": {"identifier": "StatusUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getSummaryStatus", "parameters": "(Map<String, Status> statuses)", "modifiers": "public static", "return": "Status", "signature": "Status getSummaryStatus(Map<String, Status> statuses)", "full_signature": "public static Status getSummaryStatus(Map<String, Status> statuses)", "class_method_signature": "StatusUtils.getSummaryStatus(Map<String, Status> statuses)", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/org/apache/dubbo/common/status/support/StatusUtils.java"}, "focal_method": {"identifier": "getSummaryStatus", "parameters": "(Map<String, Status> statuses)", "modifiers": "public static", "return": "Status", "body": "public static Status getSummaryStatus(Map<String, Status> statuses) {\n        Level level = Level.OK;\n        StringBuilder msg = new StringBuilder();\n        for (Map.Entry<String, Status> entry : statuses.entrySet()) {\n            String key = entry.getKey();\n            Status status = entry.getValue();\n            Level l = status.getLevel();\n            if (Level.ERROR.equals(l)) {\n                level = Level.ERROR;\n                if (msg.length() > 0) {\n                    msg.append(\",\");\n                }\n                msg.append(key);\n            } else if (Level.WARN.equals(l)) {\n                if (!Level.ERROR.equals(level)) {\n                    level = Level.WARN;\n                }\n                if (msg.length() > 0) {\n                    msg.append(\",\");\n                }\n                msg.append(key);\n            }\n        }\n        return new Status(level, msg.toString());\n    }", "signature": "Status getSummaryStatus(Map<String, Status> statuses)", "full_signature": "public static Status getSummaryStatus(Map<String, Status> statuses)", "class_method_signature": "StatusUtils.getSummaryStatus(Map<String, Status> statuses)", "testcase": false, "constructor": false, "invocations": ["entrySet", "getKey", "getValue", "getLevel", "equals", "length", "append", "append", "equals", "equals", "length", "append", "append", "toString"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}