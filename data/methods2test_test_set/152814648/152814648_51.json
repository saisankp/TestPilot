{"test_class": {"identifier": "DeltaReportTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String REFERENCE_BUILD_ID = \"refBuildId\";", "modifier": "private static final", "type": "String", "declarator": "REFERENCE_BUILD_ID = \"refBuildId\"", "var_name": "REFERENCE_BUILD_ID"}], "file": "plugin/src/test/java/io/jenkins/plugins/analysis/core/model/DeltaReportTest.java"}, "test_case": {"identifier": "shouldCreateIssuesStatistics", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldCreateIssuesStatistics() {\n        Run<?, ?> run = mock(Run.class);\n        when(run.getExternalizableId()).thenReturn(REFERENCE_BUILD_ID);\n\n        History history = mock(History.class);\n        when(history.getBuild()).thenReturn(Optional.of(run));\n\n        Issue issue = getIssue(\"issue\");\n        Issue fixedIssue = getIssue(\"fixedIssue\");\n        Issue newIssue = getIssue(\"newIssue\");\n        Issue error = getIssueWithSeverity(\"error\", Severity.ERROR);\n\n        Report referenceIssues = new Report();\n        referenceIssues.add(issue);\n        referenceIssues.add(fixedIssue);\n        when(history.getIssues()).thenReturn(referenceIssues);\n\n        Report report = new Report();\n        report.add(issue);\n        report.add(newIssue);\n        report.add(error);\n\n        IssuesStatistics compareIssuesStatistics = new IssuesStatisticsBuilder()\n                .setTotalNormalSize(2)\n                .setTotalErrorSize(1)\n                .setNewNormalSize(1)\n                .setNewErrorSize(1)\n                .setDeltaErrorSize(1)\n                .setFixedSize(1)\n                .build();\n\n        DeltaReport deltaReport = new DeltaReport(report, history, 0);\n        IssuesStatistics issuesStatistics = deltaReport.getStatistics();\n        IssuesStatisticsAssert.assertThat(issuesStatistics)\n                .isNotNull()\n                .isEqualToComparingFieldByField(compareIssuesStatistics);\n    }", "signature": "void shouldCreateIssuesStatistics()", "full_signature": "@Test void shouldCreateIssuesStatistics()", "class_method_signature": "DeltaReportTest.shouldCreateIssuesStatistics()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getExternalizableId", "mock", "thenReturn", "when", "getBuild", "of", "getIssue", "getIssue", "getIssue", "getIssueWithSeverity", "add", "add", "thenReturn", "when", "getIssues", "add", "add", "add", "build", "setFixedSize", "setDeltaErrorSize", "setNewErrorSize", "setNewNormalSize", "setTotalErrorSize", "setTotalNormalSize", "getStatistics", "isEqualToComparingFieldByField", "isNotNull", "assertThat"]}, "focal_class": {"identifier": "DeltaReport", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Report EMPTY_REPORT = new Report();", "modifier": "private static final", "type": "Report", "declarator": "EMPTY_REPORT = new Report()", "var_name": "EMPTY_REPORT"}, {"original_string": "private final Report allIssues;", "modifier": "private final", "type": "Report", "declarator": "allIssues", "var_name": "allIssues"}, {"original_string": "private final Report outstandingIssues;", "modifier": "private final", "type": "Report", "declarator": "outstandingIssues", "var_name": "outstandingIssues"}, {"original_string": "private final Report newIssues;", "modifier": "private final", "type": "Report", "declarator": "newIssues", "var_name": "newIssues"}, {"original_string": "private final Report fixedIssues;", "modifier": "private final", "type": "Report", "declarator": "fixedIssues", "var_name": "fixedIssues"}, {"original_string": "private final Report referenceIssues;", "modifier": "private final", "type": "Report", "declarator": "referenceIssues", "var_name": "referenceIssues"}, {"original_string": "private final String referenceBuildId;", "modifier": "private final", "type": "String", "declarator": "referenceBuildId", "var_name": "referenceBuildId"}], "methods": [{"identifier": "DeltaReport", "parameters": "(final Report report, final History history, final int currentBuildNumber)", "modifiers": "public", "return": "", "signature": " DeltaReport(final Report report, final History history, final int currentBuildNumber)", "full_signature": "public  DeltaReport(final Report report, final History history, final int currentBuildNumber)", "class_method_signature": "DeltaReport.DeltaReport(final Report report, final History history, final int currentBuildNumber)", "testcase": false, "constructor": true}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "DeltaReport.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "getReferenceBuildId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getReferenceBuildId()", "full_signature": "public String getReferenceBuildId()", "class_method_signature": "DeltaReport.getReferenceBuildId()", "testcase": false, "constructor": false}, {"identifier": "getAllIssues", "parameters": "()", "modifiers": "public", "return": "Report", "signature": "Report getAllIssues()", "full_signature": "public Report getAllIssues()", "class_method_signature": "DeltaReport.getAllIssues()", "testcase": false, "constructor": false}, {"identifier": "getOutstandingIssues", "parameters": "()", "modifiers": "public", "return": "Report", "signature": "Report getOutstandingIssues()", "full_signature": "public Report getOutstandingIssues()", "class_method_signature": "DeltaReport.getOutstandingIssues()", "testcase": false, "constructor": false}, {"identifier": "getNewIssues", "parameters": "()", "modifiers": "public", "return": "Report", "signature": "Report getNewIssues()", "full_signature": "public Report getNewIssues()", "class_method_signature": "DeltaReport.getNewIssues()", "testcase": false, "constructor": false}, {"identifier": "getFixedIssues", "parameters": "()", "modifiers": "public", "return": "Report", "signature": "Report getFixedIssues()", "full_signature": "public Report getFixedIssues()", "class_method_signature": "DeltaReport.getFixedIssues()", "testcase": false, "constructor": false}, {"identifier": "getStatistics", "parameters": "()", "modifiers": "public", "return": "IssuesStatistics", "signature": "IssuesStatistics getStatistics()", "full_signature": "public IssuesStatistics getStatistics()", "class_method_signature": "DeltaReport.getStatistics()", "testcase": false, "constructor": false}], "file": "plugin/src/main/java/io/jenkins/plugins/analysis/core/model/DeltaReport.java"}, "focal_method": {"identifier": "getStatistics", "parameters": "()", "modifiers": "public", "return": "IssuesStatistics", "body": "public IssuesStatistics getStatistics() {\n        IssuesStatisticsBuilder builder = new IssuesStatisticsBuilder();\n        builder.setTotalErrorSize(allIssues.getSizeOf(ERROR))\n                .setTotalHighSize(allIssues.getSizeOf(WARNING_HIGH))\n                .setTotalNormalSize(allIssues.getSizeOf(WARNING_NORMAL))\n                .setTotalLowSize(allIssues.getSizeOf(WARNING_LOW));\n        builder.setNewErrorSize(newIssues.getSizeOf(ERROR))\n                .setNewHighSize(newIssues.getSizeOf(WARNING_HIGH))\n                .setNewNormalSize(newIssues.getSizeOf(WARNING_NORMAL))\n                .setNewLowSize(newIssues.getSizeOf(WARNING_LOW));\n        builder.setFixedSize(fixedIssues.size());\n        if (!referenceBuildId.isEmpty()) {\n            builder.setDeltaErrorSize(allIssues.getSizeOf(ERROR) - referenceIssues.getSizeOf(ERROR))\n                    .setDeltaHighSize(allIssues.getSizeOf(WARNING_HIGH) - referenceIssues.getSizeOf(WARNING_HIGH))\n                    .setDeltaNormalSize(allIssues.getSizeOf(WARNING_NORMAL) - referenceIssues.getSizeOf(WARNING_NORMAL))\n                    .setDeltaLowSize(allIssues.getSizeOf(WARNING_LOW) - referenceIssues.getSizeOf(WARNING_LOW));\n        }\n        return builder.build();\n    }", "signature": "IssuesStatistics getStatistics()", "full_signature": "public IssuesStatistics getStatistics()", "class_method_signature": "DeltaReport.getStatistics()", "testcase": false, "constructor": false, "invocations": ["setTotalLowSize", "setTotalNormalSize", "setTotalHighSize", "setTotalErrorSize", "getSizeOf", "getSizeOf", "getSizeOf", "getSizeOf", "setNewLowSize", "setNewNormalSize", "setNewHighSize", "setNewErrorSize", "getSizeOf", "getSizeOf", "getSizeOf", "getSizeOf", "setFixedSize", "size", "isEmpty", "setDeltaLowSize", "setDeltaNormalSize", "setDeltaHighSize", "setDeltaErrorSize", "getSizeOf", "getSizeOf", "getSizeOf", "getSizeOf", "getSizeOf", "getSizeOf", "getSizeOf", "getSizeOf", "build"]}, "repository": {"repo_id": 152814648, "url": "https://github.com/jenkinsci/warnings-ng-plugin", "stars": 158, "created": "10/12/2018 10:41:36 PM +00:00", "updates": "2020-01-27T14:00:03+00:00", "fork": "False", "license": "licensed"}}