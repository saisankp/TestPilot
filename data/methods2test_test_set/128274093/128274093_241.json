{"test_class": {"identifier": "DeferredScalarSubscriberTest", "superclass": "", "interfaces": "", "fields": [], "file": "rxjava/src/test/java/io/reactivex/internal/subscribers/DeferredScalarSubscriberTest.java"}, "test_case": {"identifier": "error", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void error() {\n        TestSubscriber<Integer> ts = TestSubscriber.create(0L);\n        TestingDeferredScalarSubscriber ds = new TestingDeferredScalarSubscriber(ts);\n        ds.setupDownstream();\n\n        ts.assertNoValues();\n\n        ds.onError(new TestException());\n\n        ts.assertNoValues();\n        ts.assertError(TestException.class);\n        ts.assertNotComplete();\n    }", "signature": "void error()", "full_signature": "@Test public void error()", "class_method_signature": "DeferredScalarSubscriberTest.error()", "testcase": true, "constructor": false, "invocations": ["create", "setupDownstream", "assertNoValues", "onError", "assertNoValues", "assertError", "assertNotComplete"]}, "focal_class": {"identifier": "DeferredScalarSubscriber", "superclass": "extends DeferredScalarSubscription<R>", "interfaces": "implements FlowableSubscriber<T>", "fields": [{"original_string": "private static final long serialVersionUID = 2984505488220891551L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 2984505488220891551L", "var_name": "serialVersionUID"}, {"original_string": "protected Subscription s;", "modifier": "protected", "type": "Subscription", "declarator": "s", "var_name": "s"}, {"original_string": "protected boolean hasValue;", "modifier": "protected", "type": "boolean", "declarator": "hasValue", "var_name": "hasValue"}], "methods": [{"identifier": "DeferredScalarSubscriber", "parameters": "(Subscriber<? super R> actual)", "modifiers": "public", "return": "", "signature": " DeferredScalarSubscriber(Subscriber<? super R> actual)", "full_signature": "public  DeferredScalarSubscriber(Subscriber<? super R> actual)", "class_method_signature": "DeferredScalarSubscriber.DeferredScalarSubscriber(Subscriber<? super R> actual)", "testcase": false, "constructor": true}, {"identifier": "onSubscribe", "parameters": "(Subscription s)", "modifiers": "@Override public", "return": "void", "signature": "void onSubscribe(Subscription s)", "full_signature": "@Override public void onSubscribe(Subscription s)", "class_method_signature": "DeferredScalarSubscriber.onSubscribe(Subscription s)", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(Throwable t)", "modifiers": "@Override public", "return": "void", "signature": "void onError(Throwable t)", "full_signature": "@Override public void onError(Throwable t)", "class_method_signature": "DeferredScalarSubscriber.onError(Throwable t)", "testcase": false, "constructor": false}, {"identifier": "onComplete", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onComplete()", "full_signature": "@Override public void onComplete()", "class_method_signature": "DeferredScalarSubscriber.onComplete()", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void cancel()", "full_signature": "@Override public void cancel()", "class_method_signature": "DeferredScalarSubscriber.cancel()", "testcase": false, "constructor": false}], "file": "rxjava/src/main/java/io/reactivex/internal/subscribers/DeferredScalarSubscriber.java"}, "focal_method": {"identifier": "onError", "parameters": "(Throwable t)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onError(Throwable t) {\n        value = null;\n        actual.onError(t);\n    }", "signature": "void onError(Throwable t)", "full_signature": "@Override public void onError(Throwable t)", "class_method_signature": "DeferredScalarSubscriber.onError(Throwable t)", "testcase": false, "constructor": false, "invocations": ["onError"]}, "repository": {"repo_id": 128274093, "url": "https://github.com/artem-zinnatullin/error-prone-performance", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 13, "size": 22484, "license": "licensed"}}