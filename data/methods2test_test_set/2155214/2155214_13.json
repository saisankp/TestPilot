{"test_class": {"identifier": "PathTemplateFilterTest", "superclass": "", "interfaces": "", "fields": [], "file": "api/src/test/java/org/gatein/management/api/PathTemplateFilterTest.java"}, "test_case": {"identifier": "testFilterNoTemplate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testFilterNoTemplate()\n   {\n      PathTemplateFilter filter = PathTemplateFilter.create(\"foo\").include(\"bar\").build();\n      PathAddress address = PathAddress.pathAddress(\"blah\");\n\n      Assert.assertTrue(address.accepts(filter));\n   }", "signature": "void testFilterNoTemplate()", "full_signature": "@Test public void testFilterNoTemplate()", "class_method_signature": "PathTemplateFilterTest.testFilterNoTemplate()", "testcase": true, "constructor": false, "invocations": ["build", "include", "create", "pathAddress", "assertTrue", "accepts"]}, "focal_class": {"identifier": "PathTemplateFilter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PATH_TEMPLATE_REGEX = \"\\\\s*([\\\\w\\\\.-]*)\\\\s*:\\\\s*(!)?([^!]*)\";", "modifier": "private static final", "type": "String", "declarator": "PATH_TEMPLATE_REGEX = \"\\\\s*([\\\\w\\\\.-]*)\\\\s*:\\\\s*(!)?([^!]*)\"", "var_name": "PATH_TEMPLATE_REGEX"}, {"original_string": "private static final Pattern PATH_TEMPLATE_PATTERN = Pattern.compile(PATH_TEMPLATE_REGEX);", "modifier": "private static final", "type": "Pattern", "declarator": "PATH_TEMPLATE_PATTERN = Pattern.compile(PATH_TEMPLATE_REGEX)", "var_name": "PATH_TEMPLATE_PATTERN"}, {"original_string": "private static final String WILDCARD = \"*\";", "modifier": "private static final", "type": "String", "declarator": "WILDCARD = \"*\"", "var_name": "WILDCARD"}, {"original_string": "private static final PathTemplateFilter NO_OP_FILTER = new PathTemplateFilter()\n   {\n      @Override\n      FilteredAddress filter(PathAddress address)\n      {\n         return new FilteredAddress()\n         {\n            @Override\n            public boolean isFiltered()\n            {\n               return true;\n            }\n\n            @Override\n            public boolean matches()\n            {\n               return true;\n            }\n         };\n      }\n\n      @Override\n      public boolean hasPathTemplate(String pathTemplateName)\n      {\n         return false;\n      }\n   };", "modifier": "private static final", "type": "PathTemplateFilter", "declarator": "NO_OP_FILTER = new PathTemplateFilter()\n   {\n      @Override\n      FilteredAddress filter(PathAddress address)\n      {\n         return new FilteredAddress()\n         {\n            @Override\n            public boolean isFiltered()\n            {\n               return true;\n            }\n\n            @Override\n            public boolean matches()\n            {\n               return true;\n            }\n         };\n      }\n\n      @Override\n      public boolean hasPathTemplate(String pathTemplateName)\n      {\n         return false;\n      }\n   }", "var_name": "NO_OP_FILTER"}], "methods": [{"identifier": "filter", "parameters": "(PathAddress address)", "modifiers": "abstract", "return": "FilteredAddress", "signature": "FilteredAddress filter(PathAddress address)", "full_signature": "abstract FilteredAddress filter(PathAddress address)", "class_method_signature": "PathTemplateFilter.filter(PathAddress address)", "testcase": false, "constructor": false}, {"identifier": "hasPathTemplate", "parameters": "(String pathTemplateName)", "modifiers": "public abstract", "return": "boolean", "signature": "boolean hasPathTemplate(String pathTemplateName)", "full_signature": "public abstract boolean hasPathTemplate(String pathTemplateName)", "class_method_signature": "PathTemplateFilter.hasPathTemplate(String pathTemplateName)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(List<String> attributes)", "modifiers": "public static", "return": "PathTemplateFilter", "signature": "PathTemplateFilter parse(List<String> attributes)", "full_signature": "public static PathTemplateFilter parse(List<String> attributes)", "class_method_signature": "PathTemplateFilter.parse(List<String> attributes)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String pathTemplate)", "modifiers": "public static", "return": "Builder", "signature": "Builder create(String pathTemplate)", "full_signature": "public static Builder create(String pathTemplate)", "class_method_signature": "PathTemplateFilter.create(String pathTemplate)", "testcase": false, "constructor": false}], "file": "api/src/main/java/org/gatein/management/api/PathTemplateFilter.java"}, "focal_method": {"identifier": "create", "parameters": "(String pathTemplate)", "modifiers": "public static", "return": "Builder", "body": "public static Builder create(String pathTemplate)\n   {\n      return new BuilderImpl(pathTemplate);\n   }", "signature": "Builder create(String pathTemplate)", "full_signature": "public static Builder create(String pathTemplate)", "class_method_signature": "PathTemplateFilter.create(String pathTemplate)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2155214, "url": "https://github.com/gatein/gatein-management", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3383, "license": "licensed"}}