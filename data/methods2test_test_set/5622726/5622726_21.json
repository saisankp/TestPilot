{"test_class": {"identifier": "LocaleCodeSanitizerTest", "superclass": "", "interfaces": "", "fields": [], "file": "inputvalidation/src/test/java/com/switchfly/inputvalidation/sanitizer/LocaleCodeSanitizerTest.java"}, "test_case": {"identifier": "testExecute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecute() throws Exception {\n\n        LocaleCodeSanitizer localeCodeSanitizer = new LocaleCodeSanitizer();\n\n        assertEquals(\"en_US\", localeCodeSanitizer.execute(\"en_US\"));\n        assertEquals(\"en\", localeCodeSanitizer.execute(\"en\"));\n        assertEquals(\"fr_FR\", localeCodeSanitizer.execute(\"fr_FR\"));\n        assertEquals(\"en_US\", localeCodeSanitizer.execute(\"foo\"));\n        assertEquals(\"en_US\", localeCodeSanitizer.execute(\"<script>\"));\n        assertEquals(\"\", localeCodeSanitizer.execute(\"\"));\n        assertEquals(\" \", localeCodeSanitizer.execute(\" \"));\n        assertEquals(null, localeCodeSanitizer.execute(null));\n    }", "signature": "void testExecute()", "full_signature": "@Test public void testExecute()", "class_method_signature": "LocaleCodeSanitizerTest.testExecute()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute"]}, "focal_class": {"identifier": "LocaleCodeSanitizer", "superclass": "", "interfaces": "implements Sanitizer<String>", "fields": [{"original_string": "private static final Logger _logger = Logger.getLogger(CobrandNameSanitizer.class);", "modifier": "private static final", "type": "Logger", "declarator": "_logger = Logger.getLogger(CobrandNameSanitizer.class)", "var_name": "_logger"}], "methods": [{"identifier": "execute", "parameters": "(String content)", "modifiers": "@Override public", "return": "String", "signature": "String execute(String content)", "full_signature": "@Override public String execute(String content)", "class_method_signature": "LocaleCodeSanitizer.execute(String content)", "testcase": false, "constructor": false}, {"identifier": "getDefaultLocale", "parameters": "(String content)", "modifiers": "private", "return": "String", "signature": "String getDefaultLocale(String content)", "full_signature": "private String getDefaultLocale(String content)", "class_method_signature": "LocaleCodeSanitizer.getDefaultLocale(String content)", "testcase": false, "constructor": false}], "file": "inputvalidation/src/main/java/com/switchfly/inputvalidation/sanitizer/LocaleCodeSanitizer.java"}, "focal_method": {"identifier": "execute", "parameters": "(String content)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String execute(String content) {\n        if (StringUtils.isBlank(content)) {\n            return content;\n        }\n        Locale locale;\n        try {\n            locale = LocaleUtils.toLocale(content);\n        } catch (Exception e) {\n            return getDefaultLocale(content);\n        }\n        if (!Arrays.asList(Locale.getAvailableLocales()).contains(locale)) {\n            return getDefaultLocale(content);\n        }\n        return locale.toString();\n    }", "signature": "String execute(String content)", "full_signature": "@Override public String execute(String content)", "class_method_signature": "LocaleCodeSanitizer.execute(String content)", "testcase": false, "constructor": false, "invocations": ["isBlank", "toLocale", "getDefaultLocale", "contains", "asList", "getAvailableLocales", "getDefaultLocale", "toString"]}, "repository": {"repo_id": 5622726, "url": "https://github.com/switchfly/switchfly-java", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 752, "license": "licensed"}}