{"test_class": {"identifier": "SchemaTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<Authority> authorities;", "modifier": "private", "type": "List<Authority>", "declarator": "authorities", "var_name": "authorities"}], "file": "dhis-2/dhis-services/dhis-service-schema/src/test/java/org/hisp/dhis/schema/SchemaTest.java"}, "test_case": {"identifier": "isSecondaryMetadataObjectNot", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isSecondaryMetadataObjectNot()\n    {\n        Assert.assertFalse( new Schema( Metadata.class, \"singular\", \"plural\" ).isSecondaryMetadata() );\n    }", "signature": "void isSecondaryMetadataObjectNot()", "full_signature": "@Test public void isSecondaryMetadataObjectNot()", "class_method_signature": "SchemaTest.isSecondaryMetadataObjectNot()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isSecondaryMetadata"]}, "focal_class": {"identifier": "Schema", "superclass": "", "interfaces": "implements Ordered, Klass", "fields": [{"original_string": "private final Class<?> klass;", "modifier": "private final", "type": "Class<?>", "declarator": "klass", "var_name": "klass"}, {"original_string": "private final boolean identifiableObject;", "modifier": "private final", "type": "boolean", "declarator": "identifiableObject", "var_name": "identifiableObject"}, {"original_string": "private final boolean nameableObject;", "modifier": "private final", "type": "boolean", "declarator": "nameableObject", "var_name": "nameableObject"}, {"original_string": "private final boolean subscribableObject;", "modifier": "private final", "type": "boolean", "declarator": "subscribableObject", "var_name": "subscribableObject"}, {"original_string": "private final boolean embeddedObject;", "modifier": "private final", "type": "boolean", "declarator": "embeddedObject", "var_name": "embeddedObject"}, {"original_string": "private final String singular;", "modifier": "private final", "type": "String", "declarator": "singular", "var_name": "singular"}, {"original_string": "private final String plural;", "modifier": "private final", "type": "String", "declarator": "plural", "var_name": "plural"}, {"original_string": "private final boolean metadata;", "modifier": "private final", "type": "boolean", "declarator": "metadata", "var_name": "metadata"}, {"original_string": "private final boolean secondaryMetadata;", "modifier": "private final", "type": "boolean", "declarator": "secondaryMetadata", "var_name": "secondaryMetadata"}, {"original_string": "private String namespace;", "modifier": "private", "type": "String", "declarator": "namespace", "var_name": "namespace"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String displayName;", "modifier": "private", "type": "String", "declarator": "displayName", "var_name": "displayName"}, {"original_string": "private String collectionName;", "modifier": "private", "type": "String", "declarator": "collectionName", "var_name": "collectionName"}, {"original_string": "private Boolean shareable;", "modifier": "private", "type": "Boolean", "declarator": "shareable", "var_name": "shareable"}, {"original_string": "private boolean dataShareable;", "modifier": "private", "type": "boolean", "declarator": "dataShareable", "var_name": "dataShareable"}, {"original_string": "private String relativeApiEndpoint;", "modifier": "private", "type": "String", "declarator": "relativeApiEndpoint", "var_name": "relativeApiEndpoint"}, {"original_string": "private String apiEndpoint;", "modifier": "private", "type": "String", "declarator": "apiEndpoint", "var_name": "apiEndpoint"}, {"original_string": "private String href;", "modifier": "private", "type": "String", "declarator": "href", "var_name": "href"}, {"original_string": "private boolean persisted;", "modifier": "private", "type": "boolean", "declarator": "persisted", "var_name": "persisted"}, {"original_string": "private boolean defaultPrivate;", "modifier": "private", "type": "boolean", "declarator": "defaultPrivate", "var_name": "defaultPrivate"}, {"original_string": "private boolean implicitPrivateAuthority;", "modifier": "private", "type": "boolean", "declarator": "implicitPrivateAuthority", "var_name": "implicitPrivateAuthority"}, {"original_string": "private List<Authority> authorities = Lists.newArrayList();", "modifier": "private", "type": "List<Authority>", "declarator": "authorities = Lists.newArrayList()", "var_name": "authorities"}, {"original_string": "private Map<String, Property> propertyMap = Maps.newHashMap();", "modifier": "private", "type": "Map<String, Property>", "declarator": "propertyMap = Maps.newHashMap()", "var_name": "propertyMap"}, {"original_string": "private Map<String, Property> readableProperties = new HashMap<>();", "modifier": "private", "type": "Map<String, Property>", "declarator": "readableProperties = new HashMap<>()", "var_name": "readableProperties"}, {"original_string": "private Map<String, Property> persistedProperties = new HashMap<>();", "modifier": "private", "type": "Map<String, Property>", "declarator": "persistedProperties = new HashMap<>()", "var_name": "persistedProperties"}, {"original_string": "private Map<String, Property> nonPersistedProperties = new HashMap<>();", "modifier": "private", "type": "Map<String, Property>", "declarator": "nonPersistedProperties = new HashMap<>()", "var_name": "nonPersistedProperties"}, {"original_string": "private Map<String, Property> embeddedObjectProperties;", "modifier": "private", "type": "Map<String, Property>", "declarator": "embeddedObjectProperties", "var_name": "embeddedObjectProperties"}, {"original_string": "private Map<String, Property> analyticalObjectProperties;", "modifier": "private", "type": "Map<String, Property>", "declarator": "analyticalObjectProperties", "var_name": "analyticalObjectProperties"}, {"original_string": "@JsonIgnore\n    private transient volatile Map<AuthorityType, List<String>> cachedAuthoritiesByType;", "modifier": "@JsonIgnore\n    private transient volatile", "type": "Map<AuthorityType, List<String>>", "declarator": "cachedAuthoritiesByType", "var_name": "cachedAuthoritiesByType"}, {"original_string": "private int order = Ordered.LOWEST_PRECEDENCE;", "modifier": "private", "type": "int", "declarator": "order = Ordered.LOWEST_PRECEDENCE", "var_name": "order"}, {"original_string": "@SuppressWarnings( \"rawtypes\" )\n    private Set<Class> references;", "modifier": "@SuppressWarnings( \"rawtypes\" )\n    private", "type": "Set<Class>", "declarator": "references", "var_name": "references"}], "methods": [{"identifier": "Schema", "parameters": "( Class<?> klass, String singular, String plural )", "modifiers": "public", "return": "", "signature": " Schema( Class<?> klass, String singular, String plural )", "full_signature": "public  Schema( Class<?> klass, String singular, String plural )", "class_method_signature": "Schema.Schema( Class<?> klass, String singular, String plural )", "testcase": false, "constructor": true}, {"identifier": "getKlass", "parameters": "()", "modifiers": "@Override @JsonProperty @JacksonXmlProperty( isAttribute = true ) public", "return": "Class<?>", "signature": "Class<?> getKlass()", "full_signature": "@Override @JsonProperty @JacksonXmlProperty( isAttribute = true ) public Class<?> getKlass()", "class_method_signature": "Schema.getKlass()", "testcase": false, "constructor": false}, {"identifier": "isIdentifiableObject", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isIdentifiableObject()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isIdentifiableObject()", "class_method_signature": "Schema.isIdentifiableObject()", "testcase": false, "constructor": false}, {"identifier": "isNameableObject", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isNameableObject()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isNameableObject()", "class_method_signature": "Schema.isNameableObject()", "testcase": false, "constructor": false}, {"identifier": "isSubscribableObject", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isSubscribableObject()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isSubscribableObject()", "class_method_signature": "Schema.isSubscribableObject()", "testcase": false, "constructor": false}, {"identifier": "isEmbeddedObject", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isEmbeddedObject()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isEmbeddedObject()", "class_method_signature": "Schema.isEmbeddedObject()", "testcase": false, "constructor": false}, {"identifier": "getSingular", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "String", "signature": "String getSingular()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public String getSingular()", "class_method_signature": "Schema.getSingular()", "testcase": false, "constructor": false}, {"identifier": "getPlural", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "String", "signature": "String getPlural()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public String getPlural()", "class_method_signature": "Schema.getPlural()", "testcase": false, "constructor": false}, {"identifier": "isMetadata", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isMetadata()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isMetadata()", "class_method_signature": "Schema.isMetadata()", "testcase": false, "constructor": false}, {"identifier": "isSecondaryMetadata", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isSecondaryMetadata()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isSecondaryMetadata()", "class_method_signature": "Schema.isSecondaryMetadata()", "testcase": false, "constructor": false}, {"identifier": "getNamespace", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "String", "signature": "String getNamespace()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public String getNamespace()", "class_method_signature": "Schema.getNamespace()", "testcase": false, "constructor": false}, {"identifier": "setNamespace", "parameters": "( String namespace )", "modifiers": "public", "return": "void", "signature": "void setNamespace( String namespace )", "full_signature": "public void setNamespace( String namespace )", "class_method_signature": "Schema.setNamespace( String namespace )", "testcase": false, "constructor": false}, {"identifier": "getCollectionName", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "String", "signature": "String getCollectionName()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public String getCollectionName()", "class_method_signature": "Schema.getCollectionName()", "testcase": false, "constructor": false}, {"identifier": "setCollectionName", "parameters": "( String collectionName )", "modifiers": "public", "return": "void", "signature": "void setCollectionName( String collectionName )", "full_signature": "public void setCollectionName( String collectionName )", "class_method_signature": "Schema.setCollectionName( String collectionName )", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "String", "signature": "String getName()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public String getName()", "class_method_signature": "Schema.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "( String name )", "modifiers": "public", "return": "void", "signature": "void setName( String name )", "full_signature": "public void setName( String name )", "class_method_signature": "Schema.setName( String name )", "testcase": false, "constructor": false}, {"identifier": "getDisplayName", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "String", "signature": "String getDisplayName()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public String getDisplayName()", "class_method_signature": "Schema.getDisplayName()", "testcase": false, "constructor": false}, {"identifier": "setDisplayName", "parameters": "( String displayName )", "modifiers": "public", "return": "void", "signature": "void setDisplayName( String displayName )", "full_signature": "public void setDisplayName( String displayName )", "class_method_signature": "Schema.setDisplayName( String displayName )", "testcase": false, "constructor": false}, {"identifier": "isShareable", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isShareable()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isShareable()", "class_method_signature": "Schema.isShareable()", "testcase": false, "constructor": false}, {"identifier": "setShareable", "parameters": "( boolean shareable )", "modifiers": "public", "return": "void", "signature": "void setShareable( boolean shareable )", "full_signature": "public void setShareable( boolean shareable )", "class_method_signature": "Schema.setShareable( boolean shareable )", "testcase": false, "constructor": false}, {"identifier": "isDataShareable", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isDataShareable()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isDataShareable()", "class_method_signature": "Schema.isDataShareable()", "testcase": false, "constructor": false}, {"identifier": "setDataShareable", "parameters": "( boolean dataShareable )", "modifiers": "public", "return": "void", "signature": "void setDataShareable( boolean dataShareable )", "full_signature": "public void setDataShareable( boolean dataShareable )", "class_method_signature": "Schema.setDataShareable( boolean dataShareable )", "testcase": false, "constructor": false}, {"identifier": "getRelativeApiEndpoint", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "String", "signature": "String getRelativeApiEndpoint()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public String getRelativeApiEndpoint()", "class_method_signature": "Schema.getRelativeApiEndpoint()", "testcase": false, "constructor": false}, {"identifier": "setRelativeApiEndpoint", "parameters": "( String relativeApiEndpoint )", "modifiers": "public", "return": "void", "signature": "void setRelativeApiEndpoint( String relativeApiEndpoint )", "full_signature": "public void setRelativeApiEndpoint( String relativeApiEndpoint )", "class_method_signature": "Schema.setRelativeApiEndpoint( String relativeApiEndpoint )", "testcase": false, "constructor": false}, {"identifier": "getApiEndpoint", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "String", "signature": "String getApiEndpoint()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public String getApiEndpoint()", "class_method_signature": "Schema.getApiEndpoint()", "testcase": false, "constructor": false}, {"identifier": "setApiEndpoint", "parameters": "( String apiEndpoint )", "modifiers": "public", "return": "void", "signature": "void setApiEndpoint( String apiEndpoint )", "full_signature": "public void setApiEndpoint( String apiEndpoint )", "class_method_signature": "Schema.setApiEndpoint( String apiEndpoint )", "testcase": false, "constructor": false}, {"identifier": "haveApiEndpoint", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean haveApiEndpoint()", "full_signature": "public boolean haveApiEndpoint()", "class_method_signature": "Schema.haveApiEndpoint()", "testcase": false, "constructor": false}, {"identifier": "getHref", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "String", "signature": "String getHref()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public String getHref()", "class_method_signature": "Schema.getHref()", "testcase": false, "constructor": false}, {"identifier": "setHref", "parameters": "( String href )", "modifiers": "public", "return": "void", "signature": "void setHref( String href )", "full_signature": "public void setHref( String href )", "class_method_signature": "Schema.setHref( String href )", "testcase": false, "constructor": false}, {"identifier": "isPersisted", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isPersisted()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isPersisted()", "class_method_signature": "Schema.isPersisted()", "testcase": false, "constructor": false}, {"identifier": "setPersisted", "parameters": "( boolean persisted )", "modifiers": "public", "return": "void", "signature": "void setPersisted( boolean persisted )", "full_signature": "public void setPersisted( boolean persisted )", "class_method_signature": "Schema.setPersisted( boolean persisted )", "testcase": false, "constructor": false}, {"identifier": "isTranslatable", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isTranslatable()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isTranslatable()", "class_method_signature": "Schema.isTranslatable()", "testcase": false, "constructor": false}, {"identifier": "isFavoritable", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isFavoritable()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isFavoritable()", "class_method_signature": "Schema.isFavoritable()", "testcase": false, "constructor": false}, {"identifier": "isSubscribable", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isSubscribable()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isSubscribable()", "class_method_signature": "Schema.isSubscribable()", "testcase": false, "constructor": false}, {"identifier": "isDefaultPrivate", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isDefaultPrivate()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isDefaultPrivate()", "class_method_signature": "Schema.isDefaultPrivate()", "testcase": false, "constructor": false}, {"identifier": "setDefaultPrivate", "parameters": "( boolean defaultPrivate )", "modifiers": "public", "return": "void", "signature": "void setDefaultPrivate( boolean defaultPrivate )", "full_signature": "public void setDefaultPrivate( boolean defaultPrivate )", "class_method_signature": "Schema.setDefaultPrivate( boolean defaultPrivate )", "testcase": false, "constructor": false}, {"identifier": "isImplicitPrivateAuthority", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "signature": "boolean isImplicitPrivateAuthority()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isImplicitPrivateAuthority()", "class_method_signature": "Schema.isImplicitPrivateAuthority()", "testcase": false, "constructor": false}, {"identifier": "setImplicitPrivateAuthority", "parameters": "( boolean implicitPrivateAuthority )", "modifiers": "public", "return": "void", "signature": "void setImplicitPrivateAuthority( boolean implicitPrivateAuthority )", "full_signature": "public void setImplicitPrivateAuthority( boolean implicitPrivateAuthority )", "class_method_signature": "Schema.setImplicitPrivateAuthority( boolean implicitPrivateAuthority )", "testcase": false, "constructor": false}, {"identifier": "getAuthorities", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlElementWrapper( localName = \"authorities\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"authority\", namespace = DxfNamespaces.DXF_2_0 ) public", "return": "List<Authority>", "signature": "List<Authority> getAuthorities()", "full_signature": "@JsonProperty @JacksonXmlElementWrapper( localName = \"authorities\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"authority\", namespace = DxfNamespaces.DXF_2_0 ) public List<Authority> getAuthorities()", "class_method_signature": "Schema.getAuthorities()", "testcase": false, "constructor": false}, {"identifier": "setAuthorities", "parameters": "( List<Authority> authorities )", "modifiers": "public", "return": "void", "signature": "void setAuthorities( List<Authority> authorities )", "full_signature": "public void setAuthorities( List<Authority> authorities )", "class_method_signature": "Schema.setAuthorities( List<Authority> authorities )", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlElementWrapper( localName = \"properties\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"property\", namespace = DxfNamespaces.DXF_2_0 ) public", "return": "List<Property>", "signature": "List<Property> getProperties()", "full_signature": "@JsonProperty @JacksonXmlElementWrapper( localName = \"properties\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"property\", namespace = DxfNamespaces.DXF_2_0 ) public List<Property> getProperties()", "class_method_signature": "Schema.getProperties()", "testcase": false, "constructor": false}, {"identifier": "haveProperty", "parameters": "( String propertyName )", "modifiers": "public", "return": "boolean", "signature": "boolean haveProperty( String propertyName )", "full_signature": "public boolean haveProperty( String propertyName )", "class_method_signature": "Schema.haveProperty( String propertyName )", "testcase": false, "constructor": false}, {"identifier": "havePersistedProperty", "parameters": "( String propertyName )", "modifiers": "public", "return": "boolean", "signature": "boolean havePersistedProperty( String propertyName )", "full_signature": "public boolean havePersistedProperty( String propertyName )", "class_method_signature": "Schema.havePersistedProperty( String propertyName )", "testcase": false, "constructor": false}, {"identifier": "propertyByRole", "parameters": "( String role )", "modifiers": "public", "return": "Property", "signature": "Property propertyByRole( String role )", "full_signature": "public Property propertyByRole( String role )", "class_method_signature": "Schema.propertyByRole( String role )", "testcase": false, "constructor": false}, {"identifier": "getPropertyMap", "parameters": "()", "modifiers": "@JsonIgnore public", "return": "Map<String, Property>", "signature": "Map<String, Property> getPropertyMap()", "full_signature": "@JsonIgnore public Map<String, Property> getPropertyMap()", "class_method_signature": "Schema.getPropertyMap()", "testcase": false, "constructor": false}, {"identifier": "setPropertyMap", "parameters": "( Map<String, Property> propertyMap )", "modifiers": "public", "return": "void", "signature": "void setPropertyMap( Map<String, Property> propertyMap )", "full_signature": "public void setPropertyMap( Map<String, Property> propertyMap )", "class_method_signature": "Schema.setPropertyMap( Map<String, Property> propertyMap )", "testcase": false, "constructor": false}, {"identifier": "getReferences", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlElementWrapper( localName = \"references\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"reference\", namespace = DxfNamespaces.DXF_2_0 ) @SuppressWarnings( \"rawtypes\" ) public", "return": "Set<Class>", "signature": "Set<Class> getReferences()", "full_signature": "@JsonProperty @JacksonXmlElementWrapper( localName = \"references\", namespace = DxfNamespaces.DXF_2_0 ) @JacksonXmlProperty( localName = \"reference\", namespace = DxfNamespaces.DXF_2_0 ) @SuppressWarnings( \"rawtypes\" ) public Set<Class> getReferences()", "class_method_signature": "Schema.getReferences()", "testcase": false, "constructor": false}, {"identifier": "getReadableProperties", "parameters": "()", "modifiers": "public", "return": "Map<String, Property>", "signature": "Map<String, Property> getReadableProperties()", "full_signature": "public Map<String, Property> getReadableProperties()", "class_method_signature": "Schema.getReadableProperties()", "testcase": false, "constructor": false}, {"identifier": "getPersistedProperties", "parameters": "()", "modifiers": "public", "return": "Map<String, Property>", "signature": "Map<String, Property> getPersistedProperties()", "full_signature": "public Map<String, Property> getPersistedProperties()", "class_method_signature": "Schema.getPersistedProperties()", "testcase": false, "constructor": false}, {"identifier": "getNonPersistedProperties", "parameters": "()", "modifiers": "public", "return": "Map<String, Property>", "signature": "Map<String, Property> getNonPersistedProperties()", "full_signature": "public Map<String, Property> getNonPersistedProperties()", "class_method_signature": "Schema.getNonPersistedProperties()", "testcase": false, "constructor": false}, {"identifier": "getEmbeddedObjectProperties", "parameters": "()", "modifiers": "public", "return": "Map<String, Property>", "signature": "Map<String, Property> getEmbeddedObjectProperties()", "full_signature": "public Map<String, Property> getEmbeddedObjectProperties()", "class_method_signature": "Schema.getEmbeddedObjectProperties()", "testcase": false, "constructor": false}, {"identifier": "getAnalyticalObjectProperties", "parameters": "()", "modifiers": "public", "return": "Map<String, Property>", "signature": "Map<String, Property> getAnalyticalObjectProperties()", "full_signature": "public Map<String, Property> getAnalyticalObjectProperties()", "class_method_signature": "Schema.getAnalyticalObjectProperties()", "testcase": false, "constructor": false}, {"identifier": "addProperty", "parameters": "( Property property )", "modifiers": "public", "return": "void", "signature": "void addProperty( Property property )", "full_signature": "public void addProperty( Property property )", "class_method_signature": "Schema.addProperty( Property property )", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "( String name )", "modifiers": "@JsonIgnore public", "return": "Property", "signature": "Property getProperty( String name )", "full_signature": "@JsonIgnore public Property getProperty( String name )", "class_method_signature": "Schema.getProperty( String name )", "testcase": false, "constructor": false}, {"identifier": "getPersistedProperty", "parameters": "( String name )", "modifiers": "@JsonIgnore public", "return": "Property", "signature": "Property getPersistedProperty( String name )", "full_signature": "@JsonIgnore public Property getPersistedProperty( String name )", "class_method_signature": "Schema.getPersistedProperty( String name )", "testcase": false, "constructor": false}, {"identifier": "getAuthorityByType", "parameters": "( AuthorityType type )", "modifiers": "public", "return": "List<String>", "signature": "List<String> getAuthorityByType( AuthorityType type )", "full_signature": "public List<String> getAuthorityByType( AuthorityType type )", "class_method_signature": "Schema.getAuthorityByType( AuthorityType type )", "testcase": false, "constructor": false}, {"identifier": "getOrder", "parameters": "()", "modifiers": "@Override @JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "int", "signature": "int getOrder()", "full_signature": "@Override @JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public int getOrder()", "class_method_signature": "Schema.getOrder()", "testcase": false, "constructor": false}, {"identifier": "setOrder", "parameters": "( int order )", "modifiers": "public", "return": "void", "signature": "void setOrder( int order )", "full_signature": "public void setOrder( int order )", "class_method_signature": "Schema.setOrder( int order )", "testcase": false, "constructor": false}, {"identifier": "getUniqueProperties", "parameters": "()", "modifiers": "public", "return": "List<Property>", "signature": "List<Property> getUniqueProperties()", "full_signature": "public List<Property> getUniqueProperties()", "class_method_signature": "Schema.getUniqueProperties()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Schema.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "( Object obj )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals( Object obj )", "full_signature": "@Override public boolean equals( Object obj )", "class_method_signature": "Schema.equals( Object obj )", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Schema.toString()", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-schema/src/main/java/org/hisp/dhis/schema/Schema.java"}, "focal_method": {"identifier": "isSecondaryMetadata", "parameters": "()", "modifiers": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public", "return": "boolean", "body": "@JsonProperty\n    @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 )\n    public boolean isSecondaryMetadata()\n    {\n        return secondaryMetadata;\n    }", "signature": "boolean isSecondaryMetadata()", "full_signature": "@JsonProperty @JacksonXmlProperty( namespace = DxfNamespaces.DXF_2_0 ) public boolean isSecondaryMetadata()", "class_method_signature": "Schema.isSecondaryMetadata()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}