{"test_class": {"identifier": "AtomPlacerTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "tool/sdg/src/test/java/org/openscience/cdk/layout/AtomPlacerTest.java"}, "test_case": {"identifier": "triangleTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void triangleTest() {\n        List<IAtom> atoms = new ArrayList<IAtom>();\n        atoms.add(new Atom(\"C\"));\n        atoms.add(new Atom(\"C\"));\n        atoms.add(new Atom(\"C\"));\n        AtomPlacer placer = new AtomPlacer();\n        placer.populatePolygonCorners(atoms, new Point2d(0, 0), 0, 10, 10);\n        for (IAtom atom : atoms) {\n            Assert.assertNotNull(atom.getPoint2d());\n        }\n    }", "signature": "void triangleTest()", "full_signature": "@Test public void triangleTest()", "class_method_signature": "AtomPlacerTest.triangleTest()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "populatePolygonCorners", "assertNotNull", "getPoint2d"]}, "focal_class": {"identifier": "AtomPlacer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final double ANGLE_120 = Math.toRadians(120);", "modifier": "private static final", "type": "double", "declarator": "ANGLE_120 = Math.toRadians(120)", "var_name": "ANGLE_120"}, {"original_string": "public final static boolean debug = true;", "modifier": "public final static", "type": "boolean", "declarator": "debug = true", "var_name": "debug"}, {"original_string": "public static final String PRIORITY = \"Weight\";", "modifier": "public static final", "type": "String", "declarator": "PRIORITY = \"Weight\"", "var_name": "PRIORITY"}, {"original_string": "private static ILoggingTool logger = LoggingToolFactory.createLoggingTool(AtomPlacer.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(AtomPlacer.class)", "var_name": "logger"}, {"original_string": "IAtomContainer molecule = null;", "modifier": "", "type": "IAtomContainer", "declarator": "molecule = null", "var_name": "molecule"}], "methods": [{"identifier": "AtomPlacer", "parameters": "()", "modifiers": "public", "return": "", "signature": " AtomPlacer()", "full_signature": "public  AtomPlacer()", "class_method_signature": "AtomPlacer.AtomPlacer()", "testcase": false, "constructor": true}, {"identifier": "getMolecule", "parameters": "()", "modifiers": "public", "return": "IAtomContainer", "signature": "IAtomContainer getMolecule()", "full_signature": "public IAtomContainer getMolecule()", "class_method_signature": "AtomPlacer.getMolecule()", "testcase": false, "constructor": false}, {"identifier": "setMolecule", "parameters": "(IAtomContainer molecule)", "modifiers": "public", "return": "void", "signature": "void setMolecule(IAtomContainer molecule)", "full_signature": "public void setMolecule(IAtomContainer molecule)", "class_method_signature": "AtomPlacer.setMolecule(IAtomContainer molecule)", "testcase": false, "constructor": false}, {"identifier": "distributePartners", "parameters": "(IAtom atom, IAtomContainer placedNeighbours, Point2d sharedAtomsCenter,\n            IAtomContainer unplacedNeighbours, double bondLength)", "modifiers": "public", "return": "void", "signature": "void distributePartners(IAtom atom, IAtomContainer placedNeighbours, Point2d sharedAtomsCenter,\n            IAtomContainer unplacedNeighbours, double bondLength)", "full_signature": "public void distributePartners(IAtom atom, IAtomContainer placedNeighbours, Point2d sharedAtomsCenter,\n            IAtomContainer unplacedNeighbours, double bondLength)", "class_method_signature": "AtomPlacer.distributePartners(IAtom atom, IAtomContainer placedNeighbours, Point2d sharedAtomsCenter,\n            IAtomContainer unplacedNeighbours, double bondLength)", "testcase": false, "constructor": false}, {"identifier": "doAngleSnap", "parameters": "(IAtom atom, IAtomContainer placedNeighbours)", "modifiers": "private", "return": "boolean", "signature": "boolean doAngleSnap(IAtom atom, IAtomContainer placedNeighbours)", "full_signature": "private boolean doAngleSnap(IAtom atom, IAtomContainer placedNeighbours)", "class_method_signature": "AtomPlacer.doAngleSnap(IAtom atom, IAtomContainer placedNeighbours)", "testcase": false, "constructor": false}, {"identifier": "placeLinearChain", "parameters": "(IAtomContainer atomContainer, Vector2d initialBondVector, double bondLength)", "modifiers": "public", "return": "void", "signature": "void placeLinearChain(IAtomContainer atomContainer, Vector2d initialBondVector, double bondLength)", "full_signature": "public void placeLinearChain(IAtomContainer atomContainer, Vector2d initialBondVector, double bondLength)", "class_method_signature": "AtomPlacer.placeLinearChain(IAtomContainer atomContainer, Vector2d initialBondVector, double bondLength)", "testcase": false, "constructor": false}, {"identifier": "isTerminalD4", "parameters": "(IAtom atom)", "modifiers": "private", "return": "boolean", "signature": "boolean isTerminalD4(IAtom atom)", "full_signature": "private boolean isTerminalD4(IAtom atom)", "class_method_signature": "AtomPlacer.isTerminalD4(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getNextBondVector", "parameters": "(IAtom atom, IAtom previousAtom, Point2d distanceMeasure, boolean trans)", "modifiers": "public", "return": "Vector2d", "signature": "Vector2d getNextBondVector(IAtom atom, IAtom previousAtom, Point2d distanceMeasure, boolean trans)", "full_signature": "public Vector2d getNextBondVector(IAtom atom, IAtom previousAtom, Point2d distanceMeasure, boolean trans)", "class_method_signature": "AtomPlacer.getNextBondVector(IAtom atom, IAtom previousAtom, Point2d distanceMeasure, boolean trans)", "testcase": false, "constructor": false}, {"identifier": "populatePolygonCorners", "parameters": "(final List<IAtom> atoms,\n                                       final Point2d center,\n                                       final double thetaBeg,\n                                       final double thetaStep,\n                                       final double radius)", "modifiers": "public", "return": "void", "signature": "void populatePolygonCorners(final List<IAtom> atoms,\n                                       final Point2d center,\n                                       final double thetaBeg,\n                                       final double thetaStep,\n                                       final double radius)", "full_signature": "public void populatePolygonCorners(final List<IAtom> atoms,\n                                       final Point2d center,\n                                       final double thetaBeg,\n                                       final double thetaStep,\n                                       final double radius)", "class_method_signature": "AtomPlacer.populatePolygonCorners(final List<IAtom> atoms,\n                                       final Point2d center,\n                                       final double thetaBeg,\n                                       final double thetaStep,\n                                       final double radius)", "testcase": false, "constructor": false}, {"identifier": "partitionPartners", "parameters": "(IAtom atom, IAtomContainer unplacedPartners, IAtomContainer placedPartners)", "modifiers": "public", "return": "void", "signature": "void partitionPartners(IAtom atom, IAtomContainer unplacedPartners, IAtomContainer placedPartners)", "full_signature": "public void partitionPartners(IAtom atom, IAtomContainer unplacedPartners, IAtomContainer placedPartners)", "class_method_signature": "AtomPlacer.partitionPartners(IAtom atom, IAtomContainer unplacedPartners, IAtomContainer placedPartners)", "testcase": false, "constructor": false}, {"identifier": "getInitialLongestChain", "parameters": "(IAtomContainer molecule)", "modifiers": "static public", "return": "IAtomContainer", "signature": "IAtomContainer getInitialLongestChain(IAtomContainer molecule)", "full_signature": "static public IAtomContainer getInitialLongestChain(IAtomContainer molecule)", "class_method_signature": "AtomPlacer.getInitialLongestChain(IAtomContainer molecule)", "testcase": false, "constructor": false}, {"identifier": "getLongestUnplacedChain", "parameters": "(IAtomContainer molecule, IAtom startAtom)", "modifiers": "static public", "return": "IAtomContainer", "signature": "IAtomContainer getLongestUnplacedChain(IAtomContainer molecule, IAtom startAtom)", "full_signature": "static public IAtomContainer getLongestUnplacedChain(IAtomContainer molecule, IAtom startAtom)", "class_method_signature": "AtomPlacer.getLongestUnplacedChain(IAtomContainer molecule, IAtom startAtom)", "testcase": false, "constructor": false}, {"identifier": "breadthFirstSearch", "parameters": "(IAtomContainer ac, List<IAtom> sphere, IAtomContainer[] pathes)", "modifiers": "static public", "return": "void", "signature": "void breadthFirstSearch(IAtomContainer ac, List<IAtom> sphere, IAtomContainer[] pathes)", "full_signature": "static public void breadthFirstSearch(IAtomContainer ac, List<IAtom> sphere, IAtomContainer[] pathes)", "class_method_signature": "AtomPlacer.breadthFirstSearch(IAtomContainer ac, List<IAtom> sphere, IAtomContainer[] pathes)", "testcase": false, "constructor": false}, {"identifier": "listPlaced", "parameters": "(IAtomContainer ac)", "modifiers": "public", "return": "String", "signature": "String listPlaced(IAtomContainer ac)", "full_signature": "public String listPlaced(IAtomContainer ac)", "class_method_signature": "AtomPlacer.listPlaced(IAtomContainer ac)", "testcase": false, "constructor": false}, {"identifier": "listNumbers", "parameters": "(IAtomContainer mol, IAtomContainer ac)", "modifiers": "static public", "return": "String", "signature": "String listNumbers(IAtomContainer mol, IAtomContainer ac)", "full_signature": "static public String listNumbers(IAtomContainer mol, IAtomContainer ac)", "class_method_signature": "AtomPlacer.listNumbers(IAtomContainer mol, IAtomContainer ac)", "testcase": false, "constructor": false}, {"identifier": "listNumbers", "parameters": "(IAtomContainer mol, List<IAtom> ac)", "modifiers": "static public", "return": "String", "signature": "String listNumbers(IAtomContainer mol, List<IAtom> ac)", "full_signature": "static public String listNumbers(IAtomContainer mol, List<IAtom> ac)", "class_method_signature": "AtomPlacer.listNumbers(IAtomContainer mol, List<IAtom> ac)", "testcase": false, "constructor": false}, {"identifier": "allPlaced", "parameters": "(IAtomContainer ac)", "modifiers": "static public", "return": "boolean", "signature": "boolean allPlaced(IAtomContainer ac)", "full_signature": "static public boolean allPlaced(IAtomContainer ac)", "class_method_signature": "AtomPlacer.allPlaced(IAtomContainer ac)", "testcase": false, "constructor": false}, {"identifier": "markNotPlaced", "parameters": "(IAtomContainer ac)", "modifiers": "static public", "return": "void", "signature": "void markNotPlaced(IAtomContainer ac)", "full_signature": "static public void markNotPlaced(IAtomContainer ac)", "class_method_signature": "AtomPlacer.markNotPlaced(IAtomContainer ac)", "testcase": false, "constructor": false}, {"identifier": "markPlaced", "parameters": "(IAtomContainer ac)", "modifiers": "static public", "return": "void", "signature": "void markPlaced(IAtomContainer ac)", "full_signature": "static public void markPlaced(IAtomContainer ac)", "class_method_signature": "AtomPlacer.markPlaced(IAtomContainer ac)", "testcase": false, "constructor": false}, {"identifier": "getPlacedAtoms", "parameters": "(IAtomContainer ac)", "modifiers": "static public", "return": "IAtomContainer", "signature": "IAtomContainer getPlacedAtoms(IAtomContainer ac)", "full_signature": "static public IAtomContainer getPlacedAtoms(IAtomContainer ac)", "class_method_signature": "AtomPlacer.getPlacedAtoms(IAtomContainer ac)", "testcase": false, "constructor": false}, {"identifier": "copyPlaced", "parameters": "(IRing dest, IAtomContainer src)", "modifiers": "static", "return": "void", "signature": "void copyPlaced(IRing dest, IAtomContainer src)", "full_signature": "static void copyPlaced(IRing dest, IAtomContainer src)", "class_method_signature": "AtomPlacer.copyPlaced(IRing dest, IAtomContainer src)", "testcase": false, "constructor": false}, {"identifier": "getDegreeSum", "parameters": "(IAtomContainer ac, IAtomContainer superAC)", "modifiers": "static", "return": "int", "signature": "int getDegreeSum(IAtomContainer ac, IAtomContainer superAC)", "full_signature": "static int getDegreeSum(IAtomContainer ac, IAtomContainer superAC)", "class_method_signature": "AtomPlacer.getDegreeSum(IAtomContainer ac, IAtomContainer superAC)", "testcase": false, "constructor": false}, {"identifier": "prioritise", "parameters": "(IAtomContainer mol)", "modifiers": "static", "return": "void", "signature": "void prioritise(IAtomContainer mol)", "full_signature": "static void prioritise(IAtomContainer mol)", "class_method_signature": "AtomPlacer.prioritise(IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "prioritise", "parameters": "(IAtomContainer mol, int[][] adjList)", "modifiers": "static", "return": "void", "signature": "void prioritise(IAtomContainer mol, int[][] adjList)", "full_signature": "static void prioritise(IAtomContainer mol, int[][] adjList)", "class_method_signature": "AtomPlacer.prioritise(IAtomContainer mol, int[][] adjList)", "testcase": false, "constructor": false}, {"identifier": "getPriority", "parameters": "(IAtomContainer mol, int[][] adjList)", "modifiers": "static", "return": "int[]", "signature": "int[] getPriority(IAtomContainer mol, int[][] adjList)", "full_signature": "static int[] getPriority(IAtomContainer mol, int[][] adjList)", "class_method_signature": "AtomPlacer.getPriority(IAtomContainer mol, int[][] adjList)", "testcase": false, "constructor": false}, {"identifier": "isColinear", "parameters": "(IAtom atom, Iterable<IBond> bonds)", "modifiers": "static", "return": "boolean", "signature": "boolean isColinear(IAtom atom, Iterable<IBond> bonds)", "full_signature": "static boolean isColinear(IAtom atom, Iterable<IBond> bonds)", "class_method_signature": "AtomPlacer.isColinear(IAtom atom, Iterable<IBond> bonds)", "testcase": false, "constructor": false}, {"identifier": "shouldBeLinear", "parameters": "(IAtom atom, IAtomContainer molecule)", "modifiers": "@Deprecated static public", "return": "boolean", "signature": "boolean shouldBeLinear(IAtom atom, IAtomContainer molecule)", "full_signature": "@Deprecated static public boolean shouldBeLinear(IAtom atom, IAtomContainer molecule)", "class_method_signature": "AtomPlacer.shouldBeLinear(IAtom atom, IAtomContainer molecule)", "testcase": false, "constructor": false}, {"identifier": "newVector", "parameters": "(Tuple2d to, Tuple2d from)", "modifiers": "static", "return": "Vector2d", "signature": "Vector2d newVector(Tuple2d to, Tuple2d from)", "full_signature": "static Vector2d newVector(Tuple2d to, Tuple2d from)", "class_method_signature": "AtomPlacer.newVector(Tuple2d to, Tuple2d from)", "testcase": false, "constructor": false}], "file": "tool/sdg/src/main/java/org/openscience/cdk/layout/AtomPlacer.java"}, "focal_method": {"identifier": "populatePolygonCorners", "parameters": "(final List<IAtom> atoms,\n                                       final Point2d center,\n                                       final double thetaBeg,\n                                       final double thetaStep,\n                                       final double radius)", "modifiers": "public", "return": "void", "body": "public void populatePolygonCorners(final List<IAtom> atoms,\n                                       final Point2d center,\n                                       final double thetaBeg,\n                                       final double thetaStep,\n                                       final double radius) {\n        final int numAtoms = atoms.size();\n        double theta = thetaBeg;\n\n        logger.debug(\"populatePolygonCorners(numAtoms=\", numAtoms, \", center=\", center, \", thetaBeg=\", Math.toDegrees(thetaBeg), \", r=\", radius);\n\n        for (IAtom atom : atoms) {\n            theta += thetaStep;\n            double x = Math.cos(theta) * radius;\n            double y = Math.sin(theta) * radius;\n            double newX = x + center.x;\n            double newY = y + center.y;\n            atom.setPoint2d(new Point2d(newX, newY));\n            atom.setFlag(CDKConstants.ISPLACED, true);\n            logger.debug(\"populatePolygonCorners - angle=\", Math.toDegrees(theta), \", newX=\", newX, \", newY=\", newY);\n        }\n    }", "signature": "void populatePolygonCorners(final List<IAtom> atoms,\n                                       final Point2d center,\n                                       final double thetaBeg,\n                                       final double thetaStep,\n                                       final double radius)", "full_signature": "public void populatePolygonCorners(final List<IAtom> atoms,\n                                       final Point2d center,\n                                       final double thetaBeg,\n                                       final double thetaStep,\n                                       final double radius)", "class_method_signature": "AtomPlacer.populatePolygonCorners(final List<IAtom> atoms,\n                                       final Point2d center,\n                                       final double thetaBeg,\n                                       final double thetaStep,\n                                       final double radius)", "testcase": false, "constructor": false, "invocations": ["size", "debug", "toDegrees", "cos", "sin", "setPoint2d", "setFlag", "debug", "toDegrees"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}