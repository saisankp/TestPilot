{"test_class": {"identifier": "RequestLoggingFilterTest", "superclass": "extends AbstractUiTest", "interfaces": "", "fields": [{"original_string": "private static final String PAYLOAD_CONTENT = \"Test Body\";", "modifier": "private static final", "type": "String", "declarator": "PAYLOAD_CONTENT = \"Test Body\"", "var_name": "PAYLOAD_CONTENT"}], "file": "herd-code/herd-ui/src/test/java/org/finra/herd/ui/RequestLoggingFilterTest.java"}, "test_case": {"identifier": "testDoFilterMaxPayloadLength", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDoFilterMaxPayloadLength() throws Exception\n    {\n        RequestLoggingFilter requestLoggingFilter = new RequestLoggingFilter();\n        requestLoggingFilter.setMaxPayloadLength(4);\n\n        // Run the filter.\n        requestLoggingFilter.doFilter(createServletRequest(), createServletResponse(), createFilterChain());\n    }", "signature": "void testDoFilterMaxPayloadLength()", "full_signature": "@Test public void testDoFilterMaxPayloadLength()", "class_method_signature": "RequestLoggingFilterTest.testDoFilterMaxPayloadLength()", "testcase": true, "constructor": false, "invocations": ["setMaxPayloadLength", "doFilter", "createServletRequest", "createServletResponse", "createFilterChain"]}, "focal_class": {"identifier": "RequestLoggingFilter", "superclass": "extends OncePerRequestFilter", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(RequestLoggingFilter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(RequestLoggingFilter.class)", "var_name": "LOGGER"}, {"original_string": "public static final String DEFAULT_LOG_MESSAGE_PREFIX = \"HTTP Request [\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_LOG_MESSAGE_PREFIX = \"HTTP Request [\"", "var_name": "DEFAULT_LOG_MESSAGE_PREFIX"}, {"original_string": "public static final String DEFAULT_LOG_MESSAGE_SUFFIX = \"]\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_LOG_MESSAGE_SUFFIX = \"]\"", "var_name": "DEFAULT_LOG_MESSAGE_SUFFIX"}, {"original_string": "public static final String AFTER_REQUEST_LOG_MESSAGE_PREFIX = \"HerdTimingLog timingSource=HTTP \";", "modifier": "public static final", "type": "String", "declarator": "AFTER_REQUEST_LOG_MESSAGE_PREFIX = \"HerdTimingLog timingSource=HTTP \"", "var_name": "AFTER_REQUEST_LOG_MESSAGE_PREFIX"}, {"original_string": "private static final Integer DEFAULT_MAX_PAYLOAD_LENGTH = null;", "modifier": "private static final", "type": "Integer", "declarator": "DEFAULT_MAX_PAYLOAD_LENGTH = null", "var_name": "DEFAULT_MAX_PAYLOAD_LENGTH"}, {"original_string": "private boolean includeQueryString = true;", "modifier": "private", "type": "boolean", "declarator": "includeQueryString = true", "var_name": "includeQueryString"}, {"original_string": "private boolean includeClientInfo = true;", "modifier": "private", "type": "boolean", "declarator": "includeClientInfo = true", "var_name": "includeClientInfo"}, {"original_string": "private boolean includePayload = true;", "modifier": "private", "type": "boolean", "declarator": "includePayload = true", "var_name": "includePayload"}, {"original_string": "private Integer maxPayloadLength = DEFAULT_MAX_PAYLOAD_LENGTH;", "modifier": "private", "type": "Integer", "declarator": "maxPayloadLength = DEFAULT_MAX_PAYLOAD_LENGTH", "var_name": "maxPayloadLength"}, {"original_string": "private String logMessagePrefix = DEFAULT_LOG_MESSAGE_PREFIX;", "modifier": "private", "type": "String", "declarator": "logMessagePrefix = DEFAULT_LOG_MESSAGE_PREFIX", "var_name": "logMessagePrefix"}, {"original_string": "private String logMessageSuffix = DEFAULT_LOG_MESSAGE_SUFFIX;", "modifier": "private", "type": "String", "declarator": "logMessageSuffix = DEFAULT_LOG_MESSAGE_SUFFIX", "var_name": "logMessageSuffix"}], "methods": [{"identifier": "setIncludeQueryString", "parameters": "(boolean includeQueryString)", "modifiers": "public", "return": "void", "signature": "void setIncludeQueryString(boolean includeQueryString)", "full_signature": "public void setIncludeQueryString(boolean includeQueryString)", "class_method_signature": "RequestLoggingFilter.setIncludeQueryString(boolean includeQueryString)", "testcase": false, "constructor": false}, {"identifier": "isIncludeQueryString", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean isIncludeQueryString()", "full_signature": "protected boolean isIncludeQueryString()", "class_method_signature": "RequestLoggingFilter.isIncludeQueryString()", "testcase": false, "constructor": false}, {"identifier": "setIncludeClientInfo", "parameters": "(boolean includeClientInfo)", "modifiers": "public", "return": "void", "signature": "void setIncludeClientInfo(boolean includeClientInfo)", "full_signature": "public void setIncludeClientInfo(boolean includeClientInfo)", "class_method_signature": "RequestLoggingFilter.setIncludeClientInfo(boolean includeClientInfo)", "testcase": false, "constructor": false}, {"identifier": "isIncludeClientInfo", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean isIncludeClientInfo()", "full_signature": "protected boolean isIncludeClientInfo()", "class_method_signature": "RequestLoggingFilter.isIncludeClientInfo()", "testcase": false, "constructor": false}, {"identifier": "setIncludePayload", "parameters": "(boolean includePayload)", "modifiers": "public", "return": "void", "signature": "void setIncludePayload(boolean includePayload)", "full_signature": "public void setIncludePayload(boolean includePayload)", "class_method_signature": "RequestLoggingFilter.setIncludePayload(boolean includePayload)", "testcase": false, "constructor": false}, {"identifier": "isIncludePayload", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean isIncludePayload()", "full_signature": "protected boolean isIncludePayload()", "class_method_signature": "RequestLoggingFilter.isIncludePayload()", "testcase": false, "constructor": false}, {"identifier": "setMaxPayloadLength", "parameters": "(Integer maxPayloadLength)", "modifiers": "public", "return": "void", "signature": "void setMaxPayloadLength(Integer maxPayloadLength)", "full_signature": "public void setMaxPayloadLength(Integer maxPayloadLength)", "class_method_signature": "RequestLoggingFilter.setMaxPayloadLength(Integer maxPayloadLength)", "testcase": false, "constructor": false}, {"identifier": "getMaxPayloadLength", "parameters": "()", "modifiers": "protected", "return": "Integer", "signature": "Integer getMaxPayloadLength()", "full_signature": "protected Integer getMaxPayloadLength()", "class_method_signature": "RequestLoggingFilter.getMaxPayloadLength()", "testcase": false, "constructor": false}, {"identifier": "setLogMessagePrefix", "parameters": "(String logMessagePrefix)", "modifiers": "public", "return": "void", "signature": "void setLogMessagePrefix(String logMessagePrefix)", "full_signature": "public void setLogMessagePrefix(String logMessagePrefix)", "class_method_signature": "RequestLoggingFilter.setLogMessagePrefix(String logMessagePrefix)", "testcase": false, "constructor": false}, {"identifier": "setLogMessageSuffix", "parameters": "(String logMessageSuffix)", "modifiers": "public", "return": "void", "signature": "void setLogMessageSuffix(String logMessageSuffix)", "full_signature": "public void setLogMessageSuffix(String logMessageSuffix)", "class_method_signature": "RequestLoggingFilter.setLogMessageSuffix(String logMessageSuffix)", "testcase": false, "constructor": false}, {"identifier": "doFilterInternal", "parameters": "(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)", "modifiers": "@Override protected", "return": "void", "signature": "void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)", "full_signature": "@Override protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)", "class_method_signature": "RequestLoggingFilter.doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)", "testcase": false, "constructor": false}], "file": "herd-code/herd-ui/src/main/java/org/finra/herd/ui/RequestLoggingFilter.java"}, "focal_method": {"identifier": "setMaxPayloadLength", "parameters": "(Integer maxPayloadLength)", "modifiers": "public", "return": "void", "body": "public void setMaxPayloadLength(Integer maxPayloadLength)\n    {\n        this.maxPayloadLength = maxPayloadLength;\n    }", "signature": "void setMaxPayloadLength(Integer maxPayloadLength)", "full_signature": "public void setMaxPayloadLength(Integer maxPayloadLength)", "class_method_signature": "RequestLoggingFilter.setMaxPayloadLength(Integer maxPayloadLength)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}