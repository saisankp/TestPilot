{"test_class": {"identifier": "FromIterableStageFactoryTest", "superclass": "extends StageTestBase", "interfaces": "", "fields": [{"original_string": "private final FromIterableStageFactory factory = new FromIterableStageFactory();", "modifier": "private final", "type": "FromIterableStageFactory", "declarator": "factory = new FromIterableStageFactory()", "var_name": "factory"}], "file": "implementation/src/test/java/io/smallrye/reactive/streams/stages/FromIterableStageFactoryTest.java"}, "test_case": {"identifier": "createWithoutFunction", "parameters": "()", "modifiers": "@Test(expected = NullPointerException.class) public", "return": "void", "body": "@Test(expected = NullPointerException.class)\n    public void createWithoutFunction() {\n        factory.create(null, () -> null);\n    }", "signature": "void createWithoutFunction()", "full_signature": "@Test(expected = NullPointerException.class) public void createWithoutFunction()", "class_method_signature": "FromIterableStageFactoryTest.createWithoutFunction()", "testcase": true, "constructor": false, "invocations": ["create"]}, "focal_class": {"identifier": "FromIterableStageFactory", "superclass": "", "interfaces": "implements PublisherStageFactory<Stage.Of>", "fields": [], "methods": [{"identifier": "create", "parameters": "(Engine engine, Stage.Of stage)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "PublisherStage<O>", "signature": "PublisherStage<O> create(Engine engine, Stage.Of stage)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public PublisherStage<O> create(Engine engine, Stage.Of stage)", "class_method_signature": "FromIterableStageFactory.create(Engine engine, Stage.Of stage)", "testcase": false, "constructor": false}], "file": "implementation/src/main/java/io/smallrye/reactive/streams/stages/FromIterableStageFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(Engine engine, Stage.Of stage)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "PublisherStage<O>", "body": "@SuppressWarnings(\"unchecked\")\n    @Override\n    public <O> PublisherStage<O> create(Engine engine, Stage.Of stage) {\n        Iterable<O> elements = (Iterable<O>) Objects.requireNonNull(Objects.requireNonNull(stage).getElements());\n        return () -> Flowable.fromIterable(elements);\n    }", "signature": "PublisherStage<O> create(Engine engine, Stage.Of stage)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public PublisherStage<O> create(Engine engine, Stage.Of stage)", "class_method_signature": "FromIterableStageFactory.create(Engine engine, Stage.Of stage)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "getElements", "requireNonNull", "fromIterable"]}, "repository": {"repo_id": 139009007, "url": "https://github.com/smallrye/smallrye-reactive-streams-operators", "stars": 14, "created": "6/28/2018 11:27:21 AM +00:00", "updates": "2020-01-20T06:48:19+00:00", "fork": "False", "license": "licensed"}}