{"test_class": {"identifier": "TrivialEvaluateRuleTest", "superclass": "", "interfaces": "", "fields": [], "file": "cobol-custom-rules/src/test/java/com/mycompany/cobol/sample/checks/TrivialEvaluateRuleTest.java"}, "test_case": {"identifier": "testVisitNode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testVisitNode() {\n    TrivialEvaluateRule check = new TrivialEvaluateRule();\n    CobolCheckVerifier.verify(\n      new File(\"src/test/resources/checks/SRC/TrivialEvaluate.cbl\"),\n      check);\n  }", "signature": "void testVisitNode()", "full_signature": "@Test public void testVisitNode()", "class_method_signature": "TrivialEvaluateRuleTest.testVisitNode()", "testcase": true, "constructor": false, "invocations": ["verify"]}, "focal_class": {"identifier": "TrivialEvaluateRule", "superclass": "extends CobolCheck", "interfaces": "", "fields": [], "methods": [{"identifier": "init", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void init()", "full_signature": "@Override public void init()", "class_method_signature": "TrivialEvaluateRule.init()", "testcase": false, "constructor": false}, {"identifier": "visitNode", "parameters": "(AstNode evaluateNode)", "modifiers": "@Override public", "return": "void", "signature": "void visitNode(AstNode evaluateNode)", "full_signature": "@Override public void visitNode(AstNode evaluateNode)", "class_method_signature": "TrivialEvaluateRule.visitNode(AstNode evaluateNode)", "testcase": false, "constructor": false}], "file": "cobol-custom-rules/src/main/java/com/mycompany/cobol/sample/checks/TrivialEvaluateRule.java"}, "focal_method": {"identifier": "visitNode", "parameters": "(AstNode evaluateNode)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void visitNode(AstNode evaluateNode) {\n    List<AstNode> whenClauses = evaluateNode.getChildren(getCobolGrammar().evaluateWhen);\n    if (whenClauses.size() == 1) {\n      reportIssue(\"Change this EVALUATE into an IF statement.\").on(evaluateNode.getToken());\n    }\n  }", "signature": "void visitNode(AstNode evaluateNode)", "full_signature": "@Override public void visitNode(AstNode evaluateNode)", "class_method_signature": "TrivialEvaluateRule.visitNode(AstNode evaluateNode)", "testcase": false, "constructor": false, "invocations": ["getChildren", "getCobolGrammar", "size", "on", "reportIssue", "getToken"]}, "repository": {"repo_id": 71792401, "url": "https://github.com/SonarSource/sonar-custom-rules-examples", "language": "Java", "is_fork": false, "fork_count": 349, "stargazer_count": 156, "size": 190, "license": "licensed"}}