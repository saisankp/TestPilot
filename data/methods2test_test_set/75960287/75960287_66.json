{"test_class": {"identifier": "WorldMapTest", "superclass": "", "interfaces": "", "fields": [], "file": "Plan/common/src/test/java/com/djrapitops/plan/delivery/rendering/json/graphs/special/WorldMapTest.java"}, "test_case": {"identifier": "toGeolocationCountsCausesNoException", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void toGeolocationCountsCausesNoException() {\n        Map<String, Integer> geolocations = new HashMap<>();\n        geolocations.put(\"Finland\", 1);\n        geolocations.put(\"Sweden\", 1);\n        geolocations.put(\"Not Known\", 1);\n        geolocations.put(\"Local Machine\", 1);\n        geolocations.put(\"Denmark\", 2);\n\n        List<WorldMap.Entry> expected = Arrays.asList(\n                new WorldMap.Entry(\"SWE\", 1),\n                new WorldMap.Entry(\"DNK\", 2),\n                new WorldMap.Entry(\"FIN\", 1)\n        );\n        List<WorldMap.Entry> result = new WorldMap(geolocations).getEntries();\n        assertEquals(expected, result);\n    }", "signature": "void toGeolocationCountsCausesNoException()", "full_signature": "@Test void toGeolocationCountsCausesNoException()", "class_method_signature": "WorldMapTest.toGeolocationCountsCausesNoException()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "put", "asList", "getEntries", "assertEquals"]}, "focal_class": {"identifier": "WorldMap", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Map<String, Integer> geoCodeCounts;", "modifier": "private final", "type": "Map<String, Integer>", "declarator": "geoCodeCounts", "var_name": "geoCodeCounts"}], "methods": [{"identifier": "WorldMap", "parameters": "(PlayersMutator mutator)", "modifiers": "", "return": "", "signature": " WorldMap(PlayersMutator mutator)", "full_signature": "  WorldMap(PlayersMutator mutator)", "class_method_signature": "WorldMap.WorldMap(PlayersMutator mutator)", "testcase": false, "constructor": true}, {"identifier": "WorldMap", "parameters": "(Map<String, Integer> geolocationCounts)", "modifiers": "", "return": "", "signature": " WorldMap(Map<String, Integer> geolocationCounts)", "full_signature": "  WorldMap(Map<String, Integer> geolocationCounts)", "class_method_signature": "WorldMap.WorldMap(Map<String, Integer> geolocationCounts)", "testcase": false, "constructor": true}, {"identifier": "getGeoCodes", "parameters": "()", "modifiers": "private static", "return": "Map<String, String>", "signature": "Map<String, String> getGeoCodes()", "full_signature": "private static Map<String, String> getGeoCodes()", "class_method_signature": "WorldMap.getGeoCodes()", "testcase": false, "constructor": false}, {"identifier": "toGeoCodeCounts", "parameters": "(Map<String, Integer> geolocationCounts)", "modifiers": "private", "return": "Map<String, Integer>", "signature": "Map<String, Integer> toGeoCodeCounts(Map<String, Integer> geolocationCounts)", "full_signature": "private Map<String, Integer> toGeoCodeCounts(Map<String, Integer> geolocationCounts)", "class_method_signature": "WorldMap.toGeoCodeCounts(Map<String, Integer> geolocationCounts)", "testcase": false, "constructor": false}, {"identifier": "toGeoCodeCounts", "parameters": "(List<String> geoLocations)", "modifiers": "private", "return": "Map<String, Integer>", "signature": "Map<String, Integer> toGeoCodeCounts(List<String> geoLocations)", "full_signature": "private Map<String, Integer> toGeoCodeCounts(List<String> geoLocations)", "class_method_signature": "WorldMap.toGeoCodeCounts(List<String> geoLocations)", "testcase": false, "constructor": false}, {"identifier": "getEntries", "parameters": "()", "modifiers": "public", "return": "List<Entry>", "signature": "List<Entry> getEntries()", "full_signature": "public List<Entry> getEntries()", "class_method_signature": "WorldMap.getEntries()", "testcase": false, "constructor": false}], "file": "Plan/common/src/main/java/com/djrapitops/plan/delivery/rendering/json/graphs/special/WorldMap.java"}, "focal_method": {"identifier": "getEntries", "parameters": "()", "modifiers": "public", "return": "List<Entry>", "body": "public List<Entry> getEntries() {\n        return geoCodeCounts.entrySet().stream()\n                .filter(entry -> entry.getValue() != 0)\n                .map(e -> new Entry(e.getKey(), e.getValue()))\n                .collect(Collectors.toList());\n    }", "signature": "List<Entry> getEntries()", "full_signature": "public List<Entry> getEntries()", "class_method_signature": "WorldMap.getEntries()", "testcase": false, "constructor": false, "invocations": ["collect", "map", "filter", "stream", "entrySet", "getValue", "getKey", "getValue", "toList"]}, "repository": {"repo_id": 75960287, "url": "https://github.com/plan-player-analytics/Plan", "stars": 172, "created": "12/8/2016 5:34:11 PM +00:00", "updates": "2020-01-27T14:34:49+00:00", "fork": "False", "license": "licensed"}}