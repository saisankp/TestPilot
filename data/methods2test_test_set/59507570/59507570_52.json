{"test_class": {"identifier": "IncidentFormServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    IncidentFormServiceImpl incidentFormService;", "modifier": "@InjectMocks", "type": "IncidentFormServiceImpl", "declarator": "incidentFormService", "var_name": "incidentFormService"}, {"original_string": "@Mock\n    IncidentFormDao incidentFormDao;", "modifier": "@Mock", "type": "IncidentFormDao", "declarator": "incidentFormDao", "var_name": "incidentFormDao"}, {"original_string": "private String formForm = \"{\\n\" +\n            \"  \\\"Incidents\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"order\\\": 10,\\n\" +\n            \"      \\\"fields\\\": [\\n\" +\n            \"        {\\n\" +\n            \"          \\\"name\\\": \\\"incidentworker_name\\\",\\n\" +\n            \"          \\\"type\\\": \\\"text_field\\\",\\n\" +\n            \"          \\\"editable\\\": true,\\n\" +\n            \"          \\\"multi_select\\\": false,\\n\" +\n            \"          \\\"mobile_visible\\\":true,\\n\" +\n            \"          \\\"show_on_minify_form\\\":true,\\n\" +\n            \"          \\\"required\\\":false,\\n\" +\n            \"          \\\"display_name\\\": {\\n\" +\n            \"            \\\"en\\\": \\\"Field/Incident/Social Worker\\\"\\n\" +\n            \"          },\\n\" +\n            \"          \\\"help_text\\\": {\\n\" +\n            \"            \\\"en\\\": \\\"\\\"\\n\" +\n            \"          },\\n\" +\n            \"          \\\"option_strings_text\\\": {\\n\" +\n            \"            \\\"en\\\": []\\n\" +\n            \"          }\\n\" +\n            \"        }\\n\" +\n            \"      ],\\n\" +\n            \"      \\\"base_language\\\": \\\"en\\\",\\n\" +\n            \"      \\\"name\\\": {\\n\" +\n            \"        \\\"en\\\": \\\"Record Owner\\\"\\n\" +\n            \"      },\\n\" +\n            \"      \\\"help_text\\\": {\\n\" +\n            \"        \\\"en\\\": \\\"\\\"\\n\" +\n            \"      }\\n\" +\n            \"    }\\n\" +\n            \"  ]\\n\" +\n            \"}\";", "modifier": "private", "type": "String", "declarator": "formForm = \"{\\n\" +\n            \"  \\\"Incidents\\\": [\\n\" +\n            \"    {\\n\" +\n            \"      \\\"order\\\": 10,\\n\" +\n            \"      \\\"fields\\\": [\\n\" +\n            \"        {\\n\" +\n            \"          \\\"name\\\": \\\"incidentworker_name\\\",\\n\" +\n            \"          \\\"type\\\": \\\"text_field\\\",\\n\" +\n            \"          \\\"editable\\\": true,\\n\" +\n            \"          \\\"multi_select\\\": false,\\n\" +\n            \"          \\\"mobile_visible\\\":true,\\n\" +\n            \"          \\\"show_on_minify_form\\\":true,\\n\" +\n            \"          \\\"required\\\":false,\\n\" +\n            \"          \\\"display_name\\\": {\\n\" +\n            \"            \\\"en\\\": \\\"Field/Incident/Social Worker\\\"\\n\" +\n            \"          },\\n\" +\n            \"          \\\"help_text\\\": {\\n\" +\n            \"            \\\"en\\\": \\\"\\\"\\n\" +\n            \"          },\\n\" +\n            \"          \\\"option_strings_text\\\": {\\n\" +\n            \"            \\\"en\\\": []\\n\" +\n            \"          }\\n\" +\n            \"        }\\n\" +\n            \"      ],\\n\" +\n            \"      \\\"base_language\\\": \\\"en\\\",\\n\" +\n            \"      \\\"name\\\": {\\n\" +\n            \"        \\\"en\\\": \\\"Record Owner\\\"\\n\" +\n            \"      },\\n\" +\n            \"      \\\"help_text\\\": {\\n\" +\n            \"        \\\"en\\\": \\\"\\\"\\n\" +\n            \"      }\\n\" +\n            \"    }\\n\" +\n            \"  ]\\n\" +\n            \"}\"", "var_name": "formForm"}], "file": "app/src/test/java/org/unicef/rapidreg/service/impl/IncidentFormServiceImplTest.java"}, "test_case": {"identifier": "should_be_false_when_form_is_not_exist_in_db", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_be_false_when_form_is_not_exist_in_db() {\n        when(incidentFormDao.getIncidentForm(PrimeroAppConfiguration.MODULE_ID_GBV, PrimeroAppConfiguration.getApiBaseUrl())).thenReturn(null);\n        assertThat(incidentFormService.isReady(), is(false));\n        verify(incidentFormDao, times(1)).getIncidentForm(PrimeroAppConfiguration.MODULE_ID_GBV, PrimeroAppConfiguration.getApiBaseUrl());\n    }", "signature": "void should_be_false_when_form_is_not_exist_in_db()", "full_signature": "@Test public void should_be_false_when_form_is_not_exist_in_db()", "class_method_signature": "IncidentFormServiceImplTest.should_be_false_when_form_is_not_exist_in_db()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getIncidentForm", "getApiBaseUrl", "assertThat", "isReady", "is", "getIncidentForm", "verify", "times", "getApiBaseUrl"]}, "focal_class": {"identifier": "IncidentFormServiceImpl", "superclass": "", "interfaces": "implements IncidentFormService", "fields": [{"original_string": "public static final String TAG = IncidentFormService.class.getSimpleName();", "modifier": "public static final", "type": "String", "declarator": "TAG = IncidentFormService.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "private static final String ENG_VALUE = \"en\";", "modifier": "private static final", "type": "String", "declarator": "ENG_VALUE = \"en\"", "var_name": "ENG_VALUE"}, {"original_string": "public static final String SECTION_TYPE_OF_VIOLENCE = \"Type of Violence\";", "modifier": "public static final", "type": "String", "declarator": "SECTION_TYPE_OF_VIOLENCE = \"Type of Violence\"", "var_name": "SECTION_TYPE_OF_VIOLENCE"}, {"original_string": "public static final String SECTION_GBV_INCIDENT = \"GBV Incident\";", "modifier": "public static final", "type": "String", "declarator": "SECTION_GBV_INCIDENT = \"GBV Incident\"", "var_name": "SECTION_GBV_INCIDENT"}, {"original_string": "private static final String FIELD_INCIDENT_TYPE_OF_VIOLENCE = \"gbv_sexual_violence_type\";", "modifier": "private static final", "type": "String", "declarator": "FIELD_INCIDENT_TYPE_OF_VIOLENCE = \"gbv_sexual_violence_type\"", "var_name": "FIELD_INCIDENT_TYPE_OF_VIOLENCE"}, {"original_string": "private static final String FIELD_LOCATION_INCIDENT = \"incident_location\";", "modifier": "private static final", "type": "String", "declarator": "FIELD_LOCATION_INCIDENT = \"incident_location\"", "var_name": "FIELD_LOCATION_INCIDENT"}, {"original_string": "private IncidentFormDao incidentFormDao;", "modifier": "private", "type": "IncidentFormDao", "declarator": "incidentFormDao", "var_name": "incidentFormDao"}], "methods": [{"identifier": "IncidentFormServiceImpl", "parameters": "(IncidentFormDao incidentFormDao)", "modifiers": "public", "return": "", "signature": " IncidentFormServiceImpl(IncidentFormDao incidentFormDao)", "full_signature": "public  IncidentFormServiceImpl(IncidentFormDao incidentFormDao)", "class_method_signature": "IncidentFormServiceImpl.IncidentFormServiceImpl(IncidentFormDao incidentFormDao)", "testcase": false, "constructor": true}, {"identifier": "isReady", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isReady()", "full_signature": "public boolean isReady()", "class_method_signature": "IncidentFormServiceImpl.isReady()", "testcase": false, "constructor": false}, {"identifier": "getGBVTemplate", "parameters": "()", "modifiers": "@Override public", "return": "IncidentTemplateForm", "signature": "IncidentTemplateForm getGBVTemplate()", "full_signature": "@Override public IncidentTemplateForm getGBVTemplate()", "class_method_signature": "IncidentFormServiceImpl.getGBVTemplate()", "testcase": false, "constructor": false}, {"identifier": "getIncidentTemplateForm", "parameters": "(Blob form)", "modifiers": "private", "return": "IncidentTemplateForm", "signature": "IncidentTemplateForm getIncidentTemplateForm(Blob form)", "full_signature": "private IncidentTemplateForm getIncidentTemplateForm(Blob form)", "class_method_signature": "IncidentFormServiceImpl.getIncidentTemplateForm(Blob form)", "testcase": false, "constructor": false}, {"identifier": "saveOrUpdate", "parameters": "(IncidentForm incidentForm)", "modifiers": "public", "return": "void", "signature": "void saveOrUpdate(IncidentForm incidentForm)", "full_signature": "public void saveOrUpdate(IncidentForm incidentForm)", "class_method_signature": "IncidentFormServiceImpl.saveOrUpdate(IncidentForm incidentForm)", "testcase": false, "constructor": false}, {"identifier": "getViolenceTypeList", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getViolenceTypeList()", "full_signature": "@Override public List<String> getViolenceTypeList()", "class_method_signature": "IncidentFormServiceImpl.getViolenceTypeList()", "testcase": false, "constructor": false}, {"identifier": "getLocationList", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getLocationList()", "full_signature": "@Override public List<String> getLocationList()", "class_method_signature": "IncidentFormServiceImpl.getLocationList()", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/unicef/rapidreg/service/impl/IncidentFormServiceImpl.java"}, "focal_method": {"identifier": "isReady", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isReady() {\n        IncidentForm incidentForm = incidentFormDao.getIncidentForm(PrimeroAppConfiguration\n                .MODULE_ID_GBV, PrimeroAppConfiguration.getApiBaseUrl());\n        return incidentForm != null && incidentForm.getForm() != null;\n    }", "signature": "boolean isReady()", "full_signature": "public boolean isReady()", "class_method_signature": "IncidentFormServiceImpl.isReady()", "testcase": false, "constructor": false, "invocations": ["getIncidentForm", "getApiBaseUrl", "getForm"]}, "repository": {"repo_id": 59507570, "url": "https://github.com/UnicefNY/RapidReg", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 10753, "license": "Other"}}