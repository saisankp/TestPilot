{"test_class": {"identifier": "TicketAgentEndpointTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  private ApplicationContext applicationContext;", "modifier": "@Autowired\n  private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private MockWebServiceClient mockClient;", "modifier": "private", "type": "MockWebServiceClient", "declarator": "mockClient", "var_name": "mockClient"}], "file": "spring-ws-soap-header/src/test/java/com/codenotfound/ws/endpoint/TicketAgentEndpointTest.java"}, "test_case": {"identifier": "testListFlights", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testListFlights() {\n    Source requestEnvelope = new StringSource(\n        \"<SOAP-ENV:Envelope xmlns:SOAP-ENV=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\"\n            + \"<SOAP-ENV:Header>\"\n            + \"<ns3:listFlightsSoapHeaders xmlns:ns3=\\\"http://example.org/TicketAgent.xsd\\\">\"\n            + \"<isGoldClubMember>true</isGoldClubMember>\" + \"<clientId>abc123</clientId>\"\n            + \"</ns3:listFlightsSoapHeaders>\" + \"</SOAP-ENV:Header>\" + \"<SOAP-ENV:Body>\"\n            + \"<ns3:listFlightsRequest xmlns:ns3=\\\"http://example.org/TicketAgent.xsd\\\">\"\n            + \"</ns3:listFlightsRequest>\" + \"</SOAP-ENV:Body>\" + \"</SOAP-ENV:Envelope>\");\n\n    Source responsePayload =\n        new StringSource(\"<v1:listFlightsResponse xmlns:v1=\\\"http://example.org/TicketAgent.xsd\\\">\"\n            + \"<flightNumber>101</flightNumber>\" + \"<flightNumber>202</flightNumber>\"\n            + \"</v1:listFlightsResponse>\");\n\n    mockClient.sendRequest(withSoapEnvelope(requestEnvelope)).andExpect(payload(responsePayload));\n  }", "signature": "void testListFlights()", "full_signature": "@Test public void testListFlights()", "class_method_signature": "TicketAgentEndpointTest.testListFlights()", "testcase": true, "constructor": false, "invocations": ["andExpect", "sendRequest", "withSoapEnvelope", "payload"]}, "focal_class": {"identifier": "TicketAgentEndpoint", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(TicketAgentEndpoint.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(TicketAgentEndpoint.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "listFlights", "parameters": "(\n      @RequestPayload JAXBElement<TListFlights> request, @SoapHeader(\n          value = \"{http://example.org/TicketAgent.xsd}listFlightsSoapHeaders\") SoapHeaderElement soapHeaderElement)", "modifiers": "@SuppressWarnings(\"unchecked\") @PayloadRoot(namespace = \"http://example.org/TicketAgent.xsd\", localPart = \"listFlightsRequest\") @ResponsePayload public", "return": "JAXBElement<TFlightsResponse>", "signature": "JAXBElement<TFlightsResponse> listFlights(\n      @RequestPayload JAXBElement<TListFlights> request, @SoapHeader(\n          value = \"{http://example.org/TicketAgent.xsd}listFlightsSoapHeaders\") SoapHeaderElement soapHeaderElement)", "full_signature": "@SuppressWarnings(\"unchecked\") @PayloadRoot(namespace = \"http://example.org/TicketAgent.xsd\", localPart = \"listFlightsRequest\") @ResponsePayload public JAXBElement<TFlightsResponse> listFlights(\n      @RequestPayload JAXBElement<TListFlights> request, @SoapHeader(\n          value = \"{http://example.org/TicketAgent.xsd}listFlightsSoapHeaders\") SoapHeaderElement soapHeaderElement)", "class_method_signature": "TicketAgentEndpoint.listFlights(\n      @RequestPayload JAXBElement<TListFlights> request, @SoapHeader(\n          value = \"{http://example.org/TicketAgent.xsd}listFlightsSoapHeaders\") SoapHeaderElement soapHeaderElement)", "testcase": false, "constructor": false}], "file": "spring-ws-soap-header/src/main/java/com/codenotfound/ws/endpoint/TicketAgentEndpoint.java"}, "focal_method": {"identifier": "listFlights", "parameters": "(\n      @RequestPayload JAXBElement<TListFlights> request, @SoapHeader(\n          value = \"{http://example.org/TicketAgent.xsd}listFlightsSoapHeaders\") SoapHeaderElement soapHeaderElement)", "modifiers": "@SuppressWarnings(\"unchecked\") @PayloadRoot(namespace = \"http://example.org/TicketAgent.xsd\", localPart = \"listFlightsRequest\") @ResponsePayload public", "return": "JAXBElement<TFlightsResponse>", "body": "@SuppressWarnings(\"unchecked\")\n  @PayloadRoot(namespace = \"http://example.org/TicketAgent.xsd\", localPart = \"listFlightsRequest\")\n  @ResponsePayload\n  public JAXBElement<TFlightsResponse> listFlights(\n      @RequestPayload JAXBElement<TListFlights> request, @SoapHeader(\n          value = \"{http://example.org/TicketAgent.xsd}listFlightsSoapHeaders\") SoapHeaderElement soapHeaderElement) {\n    String clientId = \"unknown\";\n\n    try {\n      // create an unmarshaller\n      JAXBContext context = JAXBContext.newInstance(ObjectFactory.class);\n      Unmarshaller unmarshaller = context.createUnmarshaller();\n\n      // unmarshal the header from the specified source\n      JAXBElement<ListFlightsSoapHeaders> headers =\n          (JAXBElement<ListFlightsSoapHeaders>) unmarshaller\n              .unmarshal(soapHeaderElement.getSource());\n\n      // get the header values\n      ListFlightsSoapHeaders requestSoapHeaders = headers.getValue();\n      clientId = requestSoapHeaders.getClientId();\n    } catch (Exception e) {\n      LOGGER.error(\"error during unmarshalling of the SOAP headers\", e);\n    }\n\n    ObjectFactory factory = new ObjectFactory();\n    TFlightsResponse tFlightsResponse = factory.createTFlightsResponse();\n    tFlightsResponse.getFlightNumber().add(BigInteger.valueOf(101));\n\n    // add an extra flightNumber in the case of a clientId == abc123\n    if (\"abc123\".equals(clientId)) {\n      LOGGER.info(\"clientId == abc123\");\n      tFlightsResponse.getFlightNumber().add(BigInteger.valueOf(202));\n    }\n\n    return factory.createListFlightsResponse(tFlightsResponse);\n  }", "signature": "JAXBElement<TFlightsResponse> listFlights(\n      @RequestPayload JAXBElement<TListFlights> request, @SoapHeader(\n          value = \"{http://example.org/TicketAgent.xsd}listFlightsSoapHeaders\") SoapHeaderElement soapHeaderElement)", "full_signature": "@SuppressWarnings(\"unchecked\") @PayloadRoot(namespace = \"http://example.org/TicketAgent.xsd\", localPart = \"listFlightsRequest\") @ResponsePayload public JAXBElement<TFlightsResponse> listFlights(\n      @RequestPayload JAXBElement<TListFlights> request, @SoapHeader(\n          value = \"{http://example.org/TicketAgent.xsd}listFlightsSoapHeaders\") SoapHeaderElement soapHeaderElement)", "class_method_signature": "TicketAgentEndpoint.listFlights(\n      @RequestPayload JAXBElement<TListFlights> request, @SoapHeader(\n          value = \"{http://example.org/TicketAgent.xsd}listFlightsSoapHeaders\") SoapHeaderElement soapHeaderElement)", "testcase": false, "constructor": false, "invocations": ["newInstance", "createUnmarshaller", "unmarshal", "getSource", "getValue", "getClientId", "error", "createTFlightsResponse", "add", "getFlightNumber", "valueOf", "equals", "info", "add", "getFlightNumber", "valueOf", "createListFlightsResponse"]}, "repository": {"repo_id": 70767609, "url": "https://github.com/code-not-found/spring-ws", "language": "Java", "is_fork": false, "fork_count": 220, "stargazer_count": 68, "size": 161, "license": "licensed"}}