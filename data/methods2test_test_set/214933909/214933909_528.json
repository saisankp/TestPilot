{"test_class": {"identifier": "UserProjectDaoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    UserProjectDao userProjectDao;", "modifier": "@Autowired", "type": "UserProjectDao", "declarator": "userProjectDao", "var_name": "userProjectDao"}, {"original_string": "UserProject userProject;", "modifier": "", "type": "UserProject", "declarator": "userProject", "var_name": "userProject"}, {"original_string": "Paging<UserProject> paging;", "modifier": "", "type": "Paging<UserProject>", "declarator": "paging", "var_name": "paging"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/dao/UserProjectDaoTest.java"}, "test_case": {"identifier": "insertUserProject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void insertUserProject() throws Exception {\n        Long id = userProjectDao.insertUserProject(userProject);\n        System.out.println(\"insertUserProject :-------> \" + id);\n        Assert.assertTrue(id > 0);\n    }", "signature": "void insertUserProject()", "full_signature": "@Test public void insertUserProject()", "class_method_signature": "UserProjectDaoTest.insertUserProject()", "testcase": true, "constructor": false, "invocations": ["insertUserProject", "println", "assertTrue"]}, "focal_class": {"identifier": "UserProjectDao", "superclass": "extends BaseDao", "interfaces": "", "fields": [], "methods": [{"identifier": "insertUserProject", "parameters": "(UserProject userProject)", "modifiers": "public", "return": "Long", "signature": "Long insertUserProject(UserProject userProject)", "full_signature": "public Long insertUserProject(UserProject userProject)", "class_method_signature": "UserProjectDao.insertUserProject(UserProject userProject)", "testcase": false, "constructor": false}, {"identifier": "insertUserProjectList", "parameters": "(List<UserProject> userProjects)", "modifiers": "public", "return": "int[]", "signature": "int[] insertUserProjectList(List<UserProject> userProjects)", "full_signature": "public int[] insertUserProjectList(List<UserProject> userProjects)", "class_method_signature": "UserProjectDao.insertUserProjectList(List<UserProject> userProjects)", "testcase": false, "constructor": false}, {"identifier": "updateUserProject", "parameters": "(UserProject userProject)", "modifiers": "public", "return": "int", "signature": "int updateUserProject(UserProject userProject)", "full_signature": "public int updateUserProject(UserProject userProject)", "class_method_signature": "UserProjectDao.updateUserProject(UserProject userProject)", "testcase": false, "constructor": false}, {"identifier": "deleteUserProjectByProjectId", "parameters": "(Long project_id)", "modifiers": "public", "return": "int", "signature": "int deleteUserProjectByProjectId(Long project_id)", "full_signature": "public int deleteUserProjectByProjectId(Long project_id)", "class_method_signature": "UserProjectDao.deleteUserProjectByProjectId(Long project_id)", "testcase": false, "constructor": false}, {"identifier": "deleteByProjectAndUserIdS", "parameters": "(Long projectId, Set<Long> userIds)", "modifiers": "public", "return": "int", "signature": "int deleteByProjectAndUserIdS(Long projectId, Set<Long> userIds)", "full_signature": "public int deleteByProjectAndUserIdS(Long projectId, Set<Long> userIds)", "class_method_signature": "UserProjectDao.deleteByProjectAndUserIdS(Long projectId, Set<Long> userIds)", "testcase": false, "constructor": false}, {"identifier": "getUsersByProjectId", "parameters": "(Long projectId)", "modifiers": "public", "return": "List<UserProject>", "signature": "List<UserProject> getUsersByProjectId(Long projectId)", "full_signature": "public List<UserProject> getUsersByProjectId(Long projectId)", "class_method_signature": "UserProjectDao.getUsersByProjectId(Long projectId)", "testcase": false, "constructor": false}, {"identifier": "getMinUserProjectByProjectId", "parameters": "(Long project_id)", "modifiers": "public", "return": "UserProject", "signature": "UserProject getMinUserProjectByProjectId(Long project_id)", "full_signature": "public UserProject getMinUserProjectByProjectId(Long project_id)", "class_method_signature": "UserProjectDao.getMinUserProjectByProjectId(Long project_id)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/dao/UserProjectDao.java"}, "focal_method": {"identifier": "insertUserProject", "parameters": "(UserProject userProject)", "modifiers": "public", "return": "Long", "body": "public Long insertUserProject(UserProject userProject) throws SQLException {\n        if (userProject == null) {\n            return 0L;\n        }\n        this.getDasClient().insert(userProject, Hints.hints().setIdBack());\n        return userProject.getId();\n    }", "signature": "Long insertUserProject(UserProject userProject)", "full_signature": "public Long insertUserProject(UserProject userProject)", "class_method_signature": "UserProjectDao.insertUserProject(UserProject userProject)", "testcase": false, "constructor": false, "invocations": ["insert", "getDasClient", "setIdBack", "hints", "getId"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}