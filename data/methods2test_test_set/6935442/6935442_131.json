{"test_class": {"identifier": "TitleServiceDefaultTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ProgrammingModelFacetsJava8 programmingModel;", "modifier": "private", "type": "ProgrammingModelFacetsJava8", "declarator": "programmingModel", "var_name": "programmingModel"}, {"original_string": "private MetaModelContext metaModelContext;", "modifier": "private", "type": "MetaModelContext", "declarator": "metaModelContext", "var_name": "metaModelContext"}, {"original_string": "private TitleServiceDefault titleService;", "modifier": "private", "type": "TitleServiceDefault", "declarator": "titleService", "var_name": "titleService"}], "file": "core/metamodel/src/test/java/org/apache/isis/core/metamodel/services/title/TitleServiceDefaultTest.java"}, "test_case": {"identifier": "enum_shouldHonorTitleByMethod", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void enum_shouldHonorTitleByMethod() {\n\n        Object domainObject = FeaturedEnum.FIRST;\n\n        val title = titleService.titleOf(domainObject);\n        assertEquals(\"first\", title);\n\n    }", "signature": "void enum_shouldHonorTitleByMethod()", "full_signature": "@Test void enum_shouldHonorTitleByMethod()", "class_method_signature": "TitleServiceDefaultTest.enum_shouldHonorTitleByMethod()", "testcase": true, "constructor": false, "invocations": ["titleOf", "assertEquals"]}, "focal_class": {"identifier": "TitleServiceDefault", "superclass": "", "interfaces": "implements TitleService", "fields": [{"original_string": "private final WrapperFactory wrapperFactory;", "modifier": "private final", "type": "WrapperFactory", "declarator": "wrapperFactory", "var_name": "wrapperFactory"}, {"original_string": "private final SpecificationLoader specificationLoader;", "modifier": "private final", "type": "SpecificationLoader", "declarator": "specificationLoader", "var_name": "specificationLoader"}], "methods": [{"identifier": "TitleServiceDefault", "parameters": "(WrapperFactory wrapperFactory, SpecificationLoader specificationLoader)", "modifiers": "@Inject public", "return": "", "signature": " TitleServiceDefault(WrapperFactory wrapperFactory, SpecificationLoader specificationLoader)", "full_signature": "@Inject public  TitleServiceDefault(WrapperFactory wrapperFactory, SpecificationLoader specificationLoader)", "class_method_signature": "TitleServiceDefault.TitleServiceDefault(WrapperFactory wrapperFactory, SpecificationLoader specificationLoader)", "testcase": false, "constructor": true}, {"identifier": "titleOf", "parameters": "(final Object domainObject)", "modifiers": "@Override public", "return": "String", "signature": "String titleOf(final Object domainObject)", "full_signature": "@Override public String titleOf(final Object domainObject)", "class_method_signature": "TitleServiceDefault.titleOf(final Object domainObject)", "testcase": false, "constructor": false}, {"identifier": "iconNameOf", "parameters": "(final Object domainObject)", "modifiers": "@Override public", "return": "String", "signature": "String iconNameOf(final Object domainObject)", "full_signature": "@Override public String iconNameOf(final Object domainObject)", "class_method_signature": "TitleServiceDefault.iconNameOf(final Object domainObject)", "testcase": false, "constructor": false}, {"identifier": "unwrapped", "parameters": "(Object domainObject)", "modifiers": "private", "return": "Object", "signature": "Object unwrapped(Object domainObject)", "full_signature": "private Object unwrapped(Object domainObject)", "class_method_signature": "TitleServiceDefault.unwrapped(Object domainObject)", "testcase": false, "constructor": false}], "file": "core/metamodel/src/main/java/org/apache/isis/core/metamodel/services/title/TitleServiceDefault.java"}, "focal_method": {"identifier": "titleOf", "parameters": "(final Object domainObject)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String titleOf(final Object domainObject) {\n        \n        if(specificationLoader == null) { // simplified JUnit test support\n            return \"\" + domainObject;\n        }\n        \n        val pojo = unwrapped(domainObject);\n        val objectAdapter = ManagedObject.of(specificationLoader::loadSpecification, pojo);\n        if(EntityUtil.isDestroyed(objectAdapter)) {\n            return \"[DELETED]\";\n        } else {\n            return objectAdapter.getSpecification().getTitle(null, objectAdapter);\n        }\n    }", "signature": "String titleOf(final Object domainObject)", "full_signature": "@Override public String titleOf(final Object domainObject)", "class_method_signature": "TitleServiceDefault.titleOf(final Object domainObject)", "testcase": false, "constructor": false, "invocations": ["unwrapped", "of", "isDestroyed", "getTitle", "getSpecification"]}, "repository": {"repo_id": 6935442, "url": "https://github.com/apache/isis", "stars": 516, "created": "11/30/2012 8:00:24 AM +00:00", "updates": "2020-01-27T13:28:09+00:00", "fork": "False", "license": "licensed"}}