{"test_class": {"identifier": "PayloadRootSmartSoapEndpointInterceptorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EndpointInterceptor delegate;", "modifier": "private", "type": "EndpointInterceptor", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private String namespaceUri;", "modifier": "private", "type": "String", "declarator": "namespaceUri", "var_name": "namespaceUri"}, {"original_string": "private String localPart;", "modifier": "private", "type": "String", "declarator": "localPart", "var_name": "localPart"}, {"original_string": "private MessageContext messageContext;", "modifier": "private", "type": "MessageContext", "declarator": "messageContext", "var_name": "messageContext"}], "file": "spring-ws-core/src/test/java/org/springframework/ws/soap/server/endpoint/interceptor/PayloadRootSmartSoapEndpointInterceptorTest.java"}, "test_case": {"identifier": "shouldInterceptNamespaceUriNonMatch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldInterceptNamespaceUriNonMatch() throws Exception {\n\t\tPayloadRootSmartSoapEndpointInterceptor interceptor = new PayloadRootSmartSoapEndpointInterceptor(delegate,\n\t\t\t\t\"http://springframework.org/other\", null);\n\n\t\tboolean result = interceptor.shouldIntercept(messageContext, null);\n\t\tassertFalse(\"Interceptor should not apply\", result);\n\t}", "signature": "void shouldInterceptNamespaceUriNonMatch()", "full_signature": "@Test public void shouldInterceptNamespaceUriNonMatch()", "class_method_signature": "PayloadRootSmartSoapEndpointInterceptorTest.shouldInterceptNamespaceUriNonMatch()", "testcase": true, "constructor": false, "invocations": ["shouldIntercept", "assertFalse"]}, "focal_class": {"identifier": "PayloadRootSmartSoapEndpointInterceptor", "superclass": "extends DelegatingSmartSoapEndpointInterceptor", "interfaces": "", "fields": [{"original_string": "private TransformerHelper transformerHelper = new TransformerHelper();", "modifier": "private", "type": "TransformerHelper", "declarator": "transformerHelper = new TransformerHelper()", "var_name": "transformerHelper"}, {"original_string": "private final String namespaceUri;", "modifier": "private final", "type": "String", "declarator": "namespaceUri", "var_name": "namespaceUri"}, {"original_string": "private final String localPart;", "modifier": "private final", "type": "String", "declarator": "localPart", "var_name": "localPart"}], "methods": [{"identifier": "PayloadRootSmartSoapEndpointInterceptor", "parameters": "(EndpointInterceptor delegate, String namespaceUri, String localPart)", "modifiers": "public", "return": "", "signature": " PayloadRootSmartSoapEndpointInterceptor(EndpointInterceptor delegate, String namespaceUri, String localPart)", "full_signature": "public  PayloadRootSmartSoapEndpointInterceptor(EndpointInterceptor delegate, String namespaceUri, String localPart)", "class_method_signature": "PayloadRootSmartSoapEndpointInterceptor.PayloadRootSmartSoapEndpointInterceptor(EndpointInterceptor delegate, String namespaceUri, String localPart)", "testcase": false, "constructor": true}, {"identifier": "setTransformerHelper", "parameters": "(TransformerHelper transformerHelper)", "modifiers": "public", "return": "void", "signature": "void setTransformerHelper(TransformerHelper transformerHelper)", "full_signature": "public void setTransformerHelper(TransformerHelper transformerHelper)", "class_method_signature": "PayloadRootSmartSoapEndpointInterceptor.setTransformerHelper(TransformerHelper transformerHelper)", "testcase": false, "constructor": false}, {"identifier": "shouldIntercept", "parameters": "(WebServiceMessage request, Object endpoint)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean shouldIntercept(WebServiceMessage request, Object endpoint)", "full_signature": "@Override protected boolean shouldIntercept(WebServiceMessage request, Object endpoint)", "class_method_signature": "PayloadRootSmartSoapEndpointInterceptor.shouldIntercept(WebServiceMessage request, Object endpoint)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/soap/server/endpoint/interceptor/PayloadRootSmartSoapEndpointInterceptor.java"}, "focal_method": {"identifier": "shouldIntercept", "parameters": "(WebServiceMessage request, Object endpoint)", "modifiers": "@Override protected", "return": "boolean", "body": "@Override\n\tprotected boolean shouldIntercept(WebServiceMessage request, Object endpoint) {\n\t\ttry {\n\t\t\tQName payloadRootName = PayloadRootUtils.getPayloadRootQName(request.getPayloadSource(), transformerHelper);\n\t\t\tif (payloadRootName == null || !namespaceUri.equals(payloadRootName.getNamespaceURI())) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn !StringUtils.hasLength(localPart) || localPart.equals(payloadRootName.getLocalPart());\n\n\t\t} catch (TransformerException e) {\n\t\t\treturn false;\n\t\t}\n\t}", "signature": "boolean shouldIntercept(WebServiceMessage request, Object endpoint)", "full_signature": "@Override protected boolean shouldIntercept(WebServiceMessage request, Object endpoint)", "class_method_signature": "PayloadRootSmartSoapEndpointInterceptor.shouldIntercept(WebServiceMessage request, Object endpoint)", "testcase": false, "constructor": false, "invocations": ["getPayloadRootQName", "getPayloadSource", "equals", "getNamespaceURI", "hasLength", "equals", "getLocalPart"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}