{"test_class": {"identifier": "CHexConvertTest", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "routing-api/src/test/java/eco/data/m3/routing/api/utils/CHexConvertTest.java"}, "test_case": {"identifier": "testCHextConvert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCHextConvert(){\n        byte[] output = CHexConvert.hexStr2Bytes(\"3132333435363738393031323334353637383931\");\n        byte[] expect = {49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 49};\n\n        assertEquals(expect.length, output.length);\n        for(int i=0; i<expect.length; i++)\n            assertEquals(expect[i], output[i]);\n    }", "signature": "void testCHextConvert()", "full_signature": "@Test public void testCHextConvert()", "class_method_signature": "CHexConvertTest.testCHextConvert()", "testcase": true, "constructor": false, "invocations": ["hexStr2Bytes", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "CHexConvert", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "hexStr2Bytes", "parameters": "(String src)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hexStr2Bytes(String src)", "full_signature": "public static byte[] hexStr2Bytes(String src)", "class_method_signature": "CHexConvert.hexStr2Bytes(String src)", "testcase": false, "constructor": false}], "file": "routing-api/src/main/java/eco/data/m3/routing/api/utils/CHexConvert.java"}, "focal_method": {"identifier": "hexStr2Bytes", "parameters": "(String src)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] hexStr2Bytes(String src){  \n        src = src.trim().replace(\" \", \"\").toUpperCase(Locale.US);  \n \n        int m=0,n=0;  \n        int iLen=src.length()/2;  \n        byte[] ret = new byte[iLen];  \n          \n        for (int i = 0; i < iLen; i++){  \n            m=i*2+1;  \n            n=m+1;  \n            ret[i] = (byte)(Integer.decode(\"0x\"+ src.substring(i*2, m) + src.substring(m,n)) & 0xFF);  \n        }  \n        return ret;  \n    }", "signature": "byte[] hexStr2Bytes(String src)", "full_signature": "public static byte[] hexStr2Bytes(String src)", "class_method_signature": "CHexConvert.hexStr2Bytes(String src)", "testcase": false, "constructor": false, "invocations": ["toUpperCase", "replace", "trim", "length", "decode", "substring", "substring"]}, "repository": {"repo_id": 139111229, "url": "https://github.com/BlockchainDATA/M3", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 10, "size": 6148, "license": "licensed"}}