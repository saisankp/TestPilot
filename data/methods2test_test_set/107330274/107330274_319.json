{"test_class": {"identifier": "FarzonePodResourcePoolResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String FARZONE_ID = \"myFarzone\";", "modifier": "private static final", "type": "String", "declarator": "FARZONE_ID = \"myFarzone\"", "var_name": "FARZONE_ID"}, {"original_string": "private final DirectKubeConfiguration configuration = Archaius2Ext.newConfiguration(DirectKubeConfiguration.class,\n            \"titusMaster.directKube.farzones\", FARZONE_ID\n    );", "modifier": "private final", "type": "DirectKubeConfiguration", "declarator": "configuration = Archaius2Ext.newConfiguration(DirectKubeConfiguration.class,\n            \"titusMaster.directKube.farzones\", FARZONE_ID\n    )", "var_name": "configuration"}, {"original_string": "private final FarzonePodResourcePoolResolver resolver = new FarzonePodResourcePoolResolver(configuration);", "modifier": "private final", "type": "FarzonePodResourcePoolResolver", "declarator": "resolver = new FarzonePodResourcePoolResolver(configuration)", "var_name": "resolver"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/mesos/kubeapiserver/direct/resourcepool/FarzonePodResourcePoolResolverTest.java"}, "test_case": {"identifier": "testFarzoneJobAssignment", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFarzoneJobAssignment() {\n        List<ResourcePoolAssignment> result = resolver.resolve(newJob(FARZONE_ID));\n        assertThat(result).hasSize(1);\n        assertThat(result.get(0).getResourcePoolName()).isEqualTo(PodResourcePoolResolvers.RESOURCE_POOL_ELASTIC_FARZONE_PREFIX + FARZONE_ID);\n    }", "signature": "void testFarzoneJobAssignment()", "full_signature": "@Test public void testFarzoneJobAssignment()", "class_method_signature": "FarzonePodResourcePoolResolverTest.testFarzoneJobAssignment()", "testcase": true, "constructor": false, "invocations": ["resolve", "newJob", "hasSize", "assertThat", "isEqualTo", "assertThat", "getResourcePoolName", "get"]}, "focal_class": {"identifier": "FarzonePodResourcePoolResolver", "superclass": "", "interfaces": "implements PodResourcePoolResolver", "fields": [{"original_string": "private final DirectKubeConfiguration configuration;", "modifier": "private final", "type": "DirectKubeConfiguration", "declarator": "configuration", "var_name": "configuration"}], "methods": [{"identifier": "FarzonePodResourcePoolResolver", "parameters": "(DirectKubeConfiguration configuration)", "modifiers": "public", "return": "", "signature": " FarzonePodResourcePoolResolver(DirectKubeConfiguration configuration)", "full_signature": "public  FarzonePodResourcePoolResolver(DirectKubeConfiguration configuration)", "class_method_signature": "FarzonePodResourcePoolResolver.FarzonePodResourcePoolResolver(DirectKubeConfiguration configuration)", "testcase": false, "constructor": true}, {"identifier": "resolve", "parameters": "(Job<?> job)", "modifiers": "@Override public", "return": "List<ResourcePoolAssignment>", "signature": "List<ResourcePoolAssignment> resolve(Job<?> job)", "full_signature": "@Override public List<ResourcePoolAssignment> resolve(Job<?> job)", "class_method_signature": "FarzonePodResourcePoolResolver.resolve(Job<?> job)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/resourcepool/FarzonePodResourcePoolResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(Job<?> job)", "modifiers": "@Override public", "return": "List<ResourcePoolAssignment>", "body": "@Override\n    public List<ResourcePoolAssignment> resolve(Job<?> job) {\n        return KubeUtil.findFarzoneId(configuration, job).map(farzone -> {\n                    String resourcePoolName = PodResourcePoolResolvers.RESOURCE_POOL_ELASTIC_FARZONE_PREFIX + farzone;\n                    return Collections.singletonList(ResourcePoolAssignment.newBuilder()\n                            .withResourcePoolName(resourcePoolName)\n                            .withRule(String.format(\"Farzone %s assigned to resource pool %s\", farzone, resourcePoolName))\n                            .build()\n                    );\n                }\n        ).orElse(Collections.emptyList());\n    }", "signature": "List<ResourcePoolAssignment> resolve(Job<?> job)", "full_signature": "@Override public List<ResourcePoolAssignment> resolve(Job<?> job)", "class_method_signature": "FarzonePodResourcePoolResolver.resolve(Job<?> job)", "testcase": false, "constructor": false, "invocations": ["orElse", "map", "findFarzoneId", "singletonList", "build", "withRule", "withResourcePoolName", "newBuilder", "format", "emptyList"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}