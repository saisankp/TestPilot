{"test_class": {"identifier": "VersionIteratorFacadeTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/jcrfacade/version/VersionIteratorFacadeTest.java"}, "test_case": {"identifier": "testNextVersion", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNextVersion() throws Exception {\n        VersionIterator delegate = mock(VersionIterator.class);\n        VersionIteratorFacade<Session> facade = getFacade(delegate);\n        final Version value = mock(Version.class);\n        final String path = \"/correct/path\";\n        when(value.getPath()).thenReturn(path);\n        when(delegate.nextVersion()).thenReturn(value);\n        final Version fromFacade = facade.nextVersion();\n        assertEquals(\"same path\", path, fromFacade.getPath());\n        assertTrue(\"is facade\", fromFacade instanceof VersionFacade);\n    }", "signature": "void testNextVersion()", "full_signature": "@Test public void testNextVersion()", "class_method_signature": "VersionIteratorFacadeTest.testNextVersion()", "testcase": true, "constructor": false, "invocations": ["mock", "getFacade", "mock", "thenReturn", "when", "getPath", "thenReturn", "when", "nextVersion", "nextVersion", "assertEquals", "getPath", "assertTrue"]}, "focal_class": {"identifier": "VersionIteratorFacade", "superclass": "extends RangeIteratorFacade<VersionIterator>", "interfaces": "implements VersionIterator", "fields": [{"original_string": "private final @NotNull SessionFacade<S> session;", "modifier": "private final @NotNull", "type": "SessionFacade<S>", "declarator": "session", "var_name": "session"}], "methods": [{"identifier": "VersionIteratorFacade", "parameters": "(final @NotNull VersionIterator delegate,\n                                 final @NotNull SessionFacade<S> session)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public", "return": "", "signature": " VersionIteratorFacade(final @NotNull VersionIterator delegate,\n                                 final @NotNull SessionFacade<S> session)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public  VersionIteratorFacade(final @NotNull VersionIterator delegate,\n                                 final @NotNull SessionFacade<S> session)", "class_method_signature": "VersionIteratorFacade.VersionIteratorFacade(final @NotNull VersionIterator delegate,\n                                 final @NotNull SessionFacade<S> session)", "testcase": false, "constructor": true}, {"identifier": "nextVersion", "parameters": "()", "modifiers": "@Override public", "return": "Version", "signature": "Version nextVersion()", "full_signature": "@Override public Version nextVersion()", "class_method_signature": "VersionIteratorFacade.nextVersion()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object next()", "full_signature": "@Override public Object next()", "class_method_signature": "VersionIteratorFacade.next()", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/jcrfacade/version/VersionIteratorFacade.java"}, "focal_method": {"identifier": "nextVersion", "parameters": "()", "modifiers": "@Override public", "return": "Version", "body": "@Override\n    public Version nextVersion() {\n        Version internalVersion = delegate.nextVersion();\n        return new VersionFacade<>(internalVersion, session);\n    }", "signature": "Version nextVersion()", "full_signature": "@Override public Version nextVersion()", "class_method_signature": "VersionIteratorFacade.nextVersion()", "testcase": false, "constructor": false, "invocations": ["nextVersion"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}