{"test_class": {"identifier": "WorkItemRepositoryTest", "superclass": "extends AbstractBaseTest", "interfaces": "", "fields": [], "file": "jbpm-flow-builder/src/test/java/org/jbpm/process/workitem/WorkItemRepositoryTest.java"}, "test_case": {"identifier": "testGetWorkDefinitionsFromInvalidRepo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetWorkDefinitionsFromInvalidRepo() throws Exception {\n        Map<String, WorkDefinitionImpl> repoResults = WorkItemRepository.getWorkDefinitions(\"invlidrepo\");\n        assertNotNull(repoResults);\n        assertTrue(repoResults.isEmpty());\n    }", "signature": "void testGetWorkDefinitionsFromInvalidRepo()", "full_signature": "@Test public void testGetWorkDefinitionsFromInvalidRepo()", "class_method_signature": "WorkItemRepositoryTest.testGetWorkDefinitionsFromInvalidRepo()", "testcase": true, "constructor": false, "invocations": ["getWorkDefinitions", "assertNotNull", "assertTrue", "isEmpty"]}, "focal_class": {"identifier": "WorkItemRepository", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(WorkItemRepository.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(WorkItemRepository.class)", "var_name": "logger"}], "methods": [{"identifier": "getWorkDefinitions", "parameters": "(String path)", "modifiers": "public static", "return": "Map<String, WorkDefinitionImpl>", "signature": "Map<String, WorkDefinitionImpl> getWorkDefinitions(String path)", "full_signature": "public static Map<String, WorkDefinitionImpl> getWorkDefinitions(String path)", "class_method_signature": "WorkItemRepository.getWorkDefinitions(String path)", "testcase": false, "constructor": false}, {"identifier": "getWorkDefinitions", "parameters": "(String path, String[] definitionNames)", "modifiers": "public static", "return": "Map<String, WorkDefinitionImpl>", "signature": "Map<String, WorkDefinitionImpl> getWorkDefinitions(String path, String[] definitionNames)", "full_signature": "public static Map<String, WorkDefinitionImpl> getWorkDefinitions(String path, String[] definitionNames)", "class_method_signature": "WorkItemRepository.getWorkDefinitions(String path, String[] definitionNames)", "testcase": false, "constructor": false}, {"identifier": "getWorkDefinitions", "parameters": "(String path, String[] definitionNames, String widName)", "modifiers": "public static", "return": "Map<String, WorkDefinitionImpl>", "signature": "Map<String, WorkDefinitionImpl> getWorkDefinitions(String path, String[] definitionNames, String widName)", "full_signature": "public static Map<String, WorkDefinitionImpl> getWorkDefinitions(String path, String[] definitionNames, String widName)", "class_method_signature": "WorkItemRepository.getWorkDefinitions(String path, String[] definitionNames, String widName)", "testcase": false, "constructor": false}, {"identifier": "getAllWorkDefinitionsMap", "parameters": "(String directory, String widName)", "modifiers": "private static", "return": "List<Map<String, Object>>", "signature": "List<Map<String, Object>> getAllWorkDefinitionsMap(String directory, String widName)", "full_signature": "private static List<Map<String, Object>> getAllWorkDefinitionsMap(String directory, String widName)", "class_method_signature": "WorkItemRepository.getAllWorkDefinitionsMap(String directory, String widName)", "testcase": false, "constructor": false}, {"identifier": "getDirectories", "parameters": "(String path)", "modifiers": "private static", "return": "String[]", "signature": "String[] getDirectories(String path)", "full_signature": "private static String[] getDirectories(String path)", "class_method_signature": "WorkItemRepository.getDirectories(String path)", "testcase": false, "constructor": false}, {"identifier": "getWorkDefinitionsMapForSingleDir", "parameters": "(String parentPath, String widName)", "modifiers": "private static", "return": "List<Map<String, Object>>", "signature": "List<Map<String, Object>> getWorkDefinitionsMapForSingleDir(String parentPath, String widName)", "full_signature": "private static List<Map<String, Object>> getWorkDefinitionsMapForSingleDir(String parentPath, String widName)", "class_method_signature": "WorkItemRepository.getWorkDefinitionsMapForSingleDir(String parentPath, String widName)", "testcase": false, "constructor": false}, {"identifier": "getWorkDefinitionsMap", "parameters": "(String parentPath, String file)", "modifiers": "private static", "return": "List<Map<String, Object>>", "signature": "List<Map<String, Object>> getWorkDefinitionsMap(String parentPath, String file)", "full_signature": "private static List<Map<String, Object>> getWorkDefinitionsMap(String parentPath, String file)", "class_method_signature": "WorkItemRepository.getWorkDefinitionsMap(String parentPath, String file)", "testcase": false, "constructor": false}, {"identifier": "getWorkDefinitionsForPath", "parameters": "(String parentPath, String path, String file)", "modifiers": "private static", "return": "List<Map<String, Object>>", "signature": "List<Map<String, Object>> getWorkDefinitionsForPath(String parentPath, String path, String file)", "full_signature": "private static List<Map<String, Object>> getWorkDefinitionsForPath(String parentPath, String path, String file)", "class_method_signature": "WorkItemRepository.getWorkDefinitionsForPath(String parentPath, String path, String file)", "testcase": false, "constructor": false}], "file": "jbpm-flow-builder/src/main/java/org/jbpm/process/workitem/WorkItemRepository.java"}, "focal_method": {"identifier": "getWorkDefinitions", "parameters": "(String path)", "modifiers": "public static", "return": "Map<String, WorkDefinitionImpl>", "body": "public static Map<String, WorkDefinitionImpl> getWorkDefinitions(String path) {\n\t\treturn getWorkDefinitions(path, null, null);\n\t}", "signature": "Map<String, WorkDefinitionImpl> getWorkDefinitions(String path)", "full_signature": "public static Map<String, WorkDefinitionImpl> getWorkDefinitions(String path)", "class_method_signature": "WorkItemRepository.getWorkDefinitions(String path)", "testcase": false, "constructor": false, "invocations": ["getWorkDefinitions"]}, "repository": {"repo_id": 930571, "url": "https://github.com/kiegroup/jbpm", "stars": 1035, "created": "9/22/2010 1:19:52 PM +00:00", "updates": "2020-01-22T03:39:57+00:00", "fork": "False", "license": "licensed"}}