{"test_class": {"identifier": "KTableMapValuesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final private Serde<String> stringSerde = Serdes.String();", "modifier": "final private", "type": "Serde<String>", "declarator": "stringSerde = Serdes.String()", "var_name": "stringSerde"}, {"original_string": "private KStreamTestDriver driver = null;", "modifier": "private", "type": "KStreamTestDriver", "declarator": "driver = null", "var_name": "driver"}, {"original_string": "private File stateDir = null;", "modifier": "private", "type": "File", "declarator": "stateDir = null", "var_name": "stateDir"}], "file": "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableMapValuesTest.java"}, "test_case": {"identifier": "testSendingOldValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSendingOldValue() throws IOException {\n        KStreamBuilder builder = new KStreamBuilder();\n\n        String topic1 = \"topic1\";\n\n        KTableImpl<String, String, String> table1 =\n                (KTableImpl<String, String, String>) builder.table(stringSerde, stringSerde, topic1);\n        KTableImpl<String, String, Integer> table2 = (KTableImpl<String, String, Integer>) table1.mapValues(\n                new ValueMapper<String, Integer>() {\n                    @Override\n                    public Integer apply(String value) {\n                        return new Integer(value);\n                    }\n                });\n\n        table2.enableSendingOldValues();\n\n        MockProcessorSupplier<String, Integer> proc = new MockProcessorSupplier<>();\n\n        builder.addProcessor(\"proc\", proc, table2.name);\n\n        driver = new KStreamTestDriver(builder, stateDir, null, null);\n\n        assertTrue(table1.sendingOldValueEnabled());\n        assertTrue(table2.sendingOldValueEnabled());\n\n        driver.process(topic1, \"A\", \"01\");\n        driver.process(topic1, \"B\", \"01\");\n        driver.process(topic1, \"C\", \"01\");\n\n        proc.checkAndClearProcessResult(\"A:(1<-null)\", \"B:(1<-null)\", \"C:(1<-null)\");\n\n        driver.process(topic1, \"A\", \"02\");\n        driver.process(topic1, \"B\", \"02\");\n\n        proc.checkAndClearProcessResult(\"A:(2<-1)\", \"B:(2<-1)\");\n\n        driver.process(topic1, \"A\", \"03\");\n\n        proc.checkAndClearProcessResult(\"A:(3<-2)\");\n\n        driver.process(topic1, \"A\", null);\n\n        proc.checkAndClearProcessResult(\"A:(null<-3)\");\n    }", "signature": "void testSendingOldValue()", "full_signature": "@Test public void testSendingOldValue()", "class_method_signature": "KTableMapValuesTest.testSendingOldValue()", "testcase": true, "constructor": false, "invocations": ["table", "mapValues", "enableSendingOldValues", "addProcessor", "assertTrue", "sendingOldValueEnabled", "assertTrue", "sendingOldValueEnabled", "process", "process", "process", "checkAndClearProcessResult", "process", "process", "checkAndClearProcessResult", "process", "checkAndClearProcessResult", "process", "checkAndClearProcessResult"]}, "focal_class": {"identifier": "KTableMapValues", "superclass": "", "interfaces": "implements KTableProcessorSupplier<K, V, V1>", "fields": [{"original_string": "private final KTableImpl<K, ?, V> parent;", "modifier": "private final", "type": "KTableImpl<K, ?, V>", "declarator": "parent", "var_name": "parent"}, {"original_string": "private final ValueMapper<V, V1> mapper;", "modifier": "private final", "type": "ValueMapper<V, V1>", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "private boolean sendOldValues = false;", "modifier": "private", "type": "boolean", "declarator": "sendOldValues = false", "var_name": "sendOldValues"}], "methods": [{"identifier": "KTableMapValues", "parameters": "(KTableImpl<K, ?, V> parent, ValueMapper<V, V1> mapper)", "modifiers": "public", "return": "", "signature": " KTableMapValues(KTableImpl<K, ?, V> parent, ValueMapper<V, V1> mapper)", "full_signature": "public  KTableMapValues(KTableImpl<K, ?, V> parent, ValueMapper<V, V1> mapper)", "class_method_signature": "KTableMapValues.KTableMapValues(KTableImpl<K, ?, V> parent, ValueMapper<V, V1> mapper)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "()", "modifiers": "@Override public", "return": "Processor<K, Change<V>>", "signature": "Processor<K, Change<V>> get()", "full_signature": "@Override public Processor<K, Change<V>> get()", "class_method_signature": "KTableMapValues.get()", "testcase": false, "constructor": false}, {"identifier": "view", "parameters": "()", "modifiers": "@Override public", "return": "KTableValueGetterSupplier<K, V1>", "signature": "KTableValueGetterSupplier<K, V1> view()", "full_signature": "@Override public KTableValueGetterSupplier<K, V1> view()", "class_method_signature": "KTableMapValues.view()", "testcase": false, "constructor": false}, {"identifier": "enableSendingOldValues", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void enableSendingOldValues()", "full_signature": "@Override public void enableSendingOldValues()", "class_method_signature": "KTableMapValues.enableSendingOldValues()", "testcase": false, "constructor": false}, {"identifier": "computeValue", "parameters": "(V value)", "modifiers": "private", "return": "V1", "signature": "V1 computeValue(V value)", "full_signature": "private V1 computeValue(V value)", "class_method_signature": "KTableMapValues.computeValue(V value)", "testcase": false, "constructor": false}], "file": "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableMapValues.java"}, "focal_method": {"identifier": "enableSendingOldValues", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void enableSendingOldValues() {\n        parent.enableSendingOldValues();\n        sendOldValues = true;\n    }", "signature": "void enableSendingOldValues()", "full_signature": "@Override public void enableSendingOldValues()", "class_method_signature": "KTableMapValues.enableSendingOldValues()", "testcase": false, "constructor": false, "invocations": ["enableSendingOldValues"]}, "repository": {"repo_id": 135978112, "url": "https://github.com/anurnomeru/kafka-0.10.0.1-source-reading", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 2953, "license": "licensed"}}