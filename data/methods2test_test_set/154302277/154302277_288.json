{"test_class": {"identifier": "Iec60870AsduHandlerRegistryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Iec60870AsduHandlerRegistry iec60870AsduHandlerRegistry;", "modifier": "private", "type": "Iec60870AsduHandlerRegistry", "declarator": "iec60870AsduHandlerRegistry", "var_name": "iec60870AsduHandlerRegistry"}], "file": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/test/java/org/opensmartgridplatform/iec60870/Iec60870AsduHandlerRegistryTest.java"}, "test_case": {"identifier": "getHandlerShouldThrowExceptionWhenNotPresent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getHandlerShouldThrowExceptionWhenNotPresent() {\n        // Arrange\n        final ASduType typeId = ASduType.M_ME_TF_1;\n        final Class<?> expected = Iec60870AsduHandlerNotFoundException.class;\n\n        // Act\n        final Throwable actual = catchThrowable(() -> this.iec60870AsduHandlerRegistry.getHandler(typeId));\n\n        // Assert\n        assertThat(actual).isInstanceOf(expected);\n    }", "signature": "void getHandlerShouldThrowExceptionWhenNotPresent()", "full_signature": "@Test public void getHandlerShouldThrowExceptionWhenNotPresent()", "class_method_signature": "Iec60870AsduHandlerRegistryTest.getHandlerShouldThrowExceptionWhenNotPresent()", "testcase": true, "constructor": false, "invocations": ["catchThrowable", "getHandler", "isInstanceOf", "assertThat"]}, "focal_class": {"identifier": "Iec60870AsduHandlerRegistry", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(Iec60870AsduHandlerRegistry.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(Iec60870AsduHandlerRegistry.class)", "var_name": "LOGGER"}, {"original_string": "private final Map<ASduType, Iec60870AsduHandler> handlers = new EnumMap<>(ASduType.class);", "modifier": "private final", "type": "Map<ASduType, Iec60870AsduHandler>", "declarator": "handlers = new EnumMap<>(ASduType.class)", "var_name": "handlers"}], "methods": [{"identifier": "getHandler", "parameters": "(final ASduType asduType)", "modifiers": "public", "return": "Iec60870AsduHandler", "signature": "Iec60870AsduHandler getHandler(final ASduType asduType)", "full_signature": "public Iec60870AsduHandler getHandler(final ASduType asduType)", "class_method_signature": "Iec60870AsduHandlerRegistry.getHandler(final ASduType asduType)", "testcase": false, "constructor": false}, {"identifier": "registerHandler", "parameters": "(final ASduType asduType, final Iec60870AsduHandler handler)", "modifiers": "public", "return": "void", "signature": "void registerHandler(final ASduType asduType, final Iec60870AsduHandler handler)", "full_signature": "public void registerHandler(final ASduType asduType, final Iec60870AsduHandler handler)", "class_method_signature": "Iec60870AsduHandlerRegistry.registerHandler(final ASduType asduType, final Iec60870AsduHandler handler)", "testcase": false, "constructor": false}, {"identifier": "clearHandlers", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearHandlers()", "full_signature": "public void clearHandlers()", "class_method_signature": "Iec60870AsduHandlerRegistry.clearHandlers()", "testcase": false, "constructor": false}], "file": "osgp/protocol-adapter-iec60870/osgp-iec60870/src/main/java/org/opensmartgridplatform/iec60870/Iec60870AsduHandlerRegistry.java"}, "focal_method": {"identifier": "getHandler", "parameters": "(final ASduType asduType)", "modifiers": "public", "return": "Iec60870AsduHandler", "body": "public Iec60870AsduHandler getHandler(final ASduType asduType) throws Iec60870AsduHandlerNotFoundException {\n        if (!this.handlers.containsKey(asduType)) {\n            LOGGER.error(\"No ASDU handler found for ASDU type {}\", asduType);\n            throw new Iec60870AsduHandlerNotFoundException(asduType);\n        }\n        return this.handlers.get(asduType);\n    }", "signature": "Iec60870AsduHandler getHandler(final ASduType asduType)", "full_signature": "public Iec60870AsduHandler getHandler(final ASduType asduType)", "class_method_signature": "Iec60870AsduHandlerRegistry.getHandler(final ASduType asduType)", "testcase": false, "constructor": false, "invocations": ["containsKey", "error", "get"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}