{"test_class": {"identifier": "SSSRFinderTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [{"original_string": "private final ILoggingTool logger = LoggingToolFactory.createLoggingTool(SSSRFinderTest.class);", "modifier": "private final", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(SSSRFinderTest.class)", "var_name": "logger"}], "file": "legacy/src/test/java/org/openscience/cdk/ringsearch/SSSRFinderTest.java"}, "test_case": {"identifier": "testBuckyballSSSR", "parameters": "()", "modifiers": "@Category(SlowTest.class) @Test public", "return": "void", "body": "@Category(SlowTest.class)\n    @Test\n    public void testBuckyballSSSR() throws Exception {\n        IAtomContainer buckyball = createBuckyBall();\n        IRingSet ringSetSSSR = new SSSRFinder(buckyball).findSSSR();\n        ringCount(ringSetSSSR, 6, 19);\n        ringCount(ringSetSSSR, 5, 12);\n        Assert.assertFalse(\"Duplicate rings exist\", checkForDuplicateRingsInSet(ringSetSSSR));\n    }", "signature": "void testBuckyballSSSR()", "full_signature": "@Category(SlowTest.class) @Test public void testBuckyballSSSR()", "class_method_signature": "SSSRFinderTest.testBuckyballSSSR()", "testcase": true, "constructor": false, "invocations": ["createBuckyBall", "findSSSR", "ringCount", "ringCount", "assertFalse", "checkForDuplicateRingsInSet"]}, "focal_class": {"identifier": "SSSRFinder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IAtomContainer atomContainer;", "modifier": "private", "type": "IAtomContainer", "declarator": "atomContainer", "var_name": "atomContainer"}, {"original_string": "private CycleBasis     cycleBasis;", "modifier": "private", "type": "CycleBasis", "declarator": "cycleBasis", "var_name": "cycleBasis"}], "methods": [{"identifier": "SSSRFinder", "parameters": "(IAtomContainer container)", "modifiers": "public", "return": "", "signature": " SSSRFinder(IAtomContainer container)", "full_signature": "public  SSSRFinder(IAtomContainer container)", "class_method_signature": "SSSRFinder.SSSRFinder(IAtomContainer container)", "testcase": false, "constructor": true}, {"identifier": "findSSSR", "parameters": "()", "modifiers": "public", "return": "IRingSet", "signature": "IRingSet findSSSR()", "full_signature": "public IRingSet findSSSR()", "class_method_signature": "SSSRFinder.findSSSR()", "testcase": false, "constructor": false}, {"identifier": "findEssentialRings", "parameters": "()", "modifiers": "public", "return": "IRingSet", "signature": "IRingSet findEssentialRings()", "full_signature": "public IRingSet findEssentialRings()", "class_method_signature": "SSSRFinder.findEssentialRings()", "testcase": false, "constructor": false}, {"identifier": "findRelevantRings", "parameters": "()", "modifiers": "public", "return": "IRingSet", "signature": "IRingSet findRelevantRings()", "full_signature": "public IRingSet findRelevantRings()", "class_method_signature": "SSSRFinder.findRelevantRings()", "testcase": false, "constructor": false}, {"identifier": "findEquivalenceClasses", "parameters": "()", "modifiers": "public", "return": "List", "signature": "List findEquivalenceClasses()", "full_signature": "public List findEquivalenceClasses()", "class_method_signature": "SSSRFinder.findEquivalenceClasses()", "testcase": false, "constructor": false}, {"identifier": "getSSSRWeightVector", "parameters": "()", "modifiers": "public", "return": "int[]", "signature": "int[] getSSSRWeightVector()", "full_signature": "public int[] getSSSRWeightVector()", "class_method_signature": "SSSRFinder.getSSSRWeightVector()", "testcase": false, "constructor": false}, {"identifier": "getEquivalenceClassesSizeVector", "parameters": "()", "modifiers": "public", "return": "int[]", "signature": "int[] getEquivalenceClassesSizeVector()", "full_signature": "public int[] getEquivalenceClassesSizeVector()", "class_method_signature": "SSSRFinder.getEquivalenceClassesSizeVector()", "testcase": false, "constructor": false}, {"identifier": "cycleBasis", "parameters": "()", "modifiers": "private", "return": "CycleBasis", "signature": "CycleBasis cycleBasis()", "full_signature": "private CycleBasis cycleBasis()", "class_method_signature": "SSSRFinder.cycleBasis()", "testcase": false, "constructor": false}, {"identifier": "toRingSet", "parameters": "(IAtomContainer container, Collection cycles)", "modifiers": "private static", "return": "IRingSet", "signature": "IRingSet toRingSet(IAtomContainer container, Collection cycles)", "full_signature": "private static IRingSet toRingSet(IAtomContainer container, Collection cycles)", "class_method_signature": "SSSRFinder.toRingSet(IAtomContainer container, Collection cycles)", "testcase": false, "constructor": false}], "file": "legacy/src/main/java/org/openscience/cdk/ringsearch/SSSRFinder.java"}, "focal_method": {"identifier": "findSSSR", "parameters": "()", "modifiers": "public", "return": "IRingSet", "body": "public IRingSet findSSSR() {\n        if (atomContainer == null) {\n            return null;\n        }\n        IRingSet ringSet = toRingSet(atomContainer, cycleBasis().cycles());\n        //\t\tatomContainer.setProperty(CDKConstants.SMALLEST_RINGS, ringSet);\n        return ringSet;\n\n    }", "signature": "IRingSet findSSSR()", "full_signature": "public IRingSet findSSSR()", "class_method_signature": "SSSRFinder.findSSSR()", "testcase": false, "constructor": false, "invocations": ["toRingSet", "cycles", "cycleBasis"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}