{"test_class": {"identifier": "DynamicTableNameParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "mybatis-plus-extension/src/test/java/com/baomidou/mybatisplus/extension/parsers/DynamicTableNameParserTest.java"}, "test_case": {"identifier": "parser", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void parser() {\n        DynamicTableNameParser parser = new DynamicTableNameParser();\n        Map<String, ITableNameHandler> tableNameHandlerMap = new HashMap<>();\n        tableNameHandlerMap.put(\"t_user\",\n                // https://github.com/baomidou/mybatis-plus/issues/2411\n                (metaObject, sql, tableName) -> {\n                    if (\"t_user\".equals(tableName)) {\n                        return \"t_user_2019\";\n                    }\n                    return tableName;\n                });\n        parser.setTableNameHandlerMap(tableNameHandlerMap);\n\n        String before = \"select a.* from t_user a join t_userrole b on b.userid = a.gid\";\n        String after = \"select a.* from t_user_2019 a join t_userrole b on b.userid = a.gid\";\n        assertEquals(after, parser.parser(null, before).getSql());\n\n        before = \"select * from t_user\";\n        after = \"select * from t_user_2019\";\n        assertEquals(after, parser.parser(null, before).getSql());\n\n        before = \"insert into t_user(id,name) values('1','zhangsan')\";\n        after = \"insert into t_user_2019(id,name) values('1','zhangsan')\";\n        assertEquals(after, parser.parser(null, before).getSql());\n        before = \"select a.*,\\n\" +\n                \"        (select count(1) from t_user) as cnt\\n\" +\n                \"        from t_xxx a\";\n        after = \"select a.*,\\n\" +\n                \"        (select count(1) from t_user_2019) as cnt\\n\" +\n                \"        from t_xxx a\";\n        assertEquals(after, parser.parser(null, before).getSql());\n    }", "signature": "void parser()", "full_signature": "@Test void parser()", "class_method_signature": "DynamicTableNameParserTest.parser()", "testcase": true, "constructor": false, "invocations": ["put", "equals", "setTableNameHandlerMap", "assertEquals", "getSql", "parser", "assertEquals", "getSql", "parser", "assertEquals", "getSql", "parser", "assertEquals", "getSql", "parser"]}, "focal_class": {"identifier": "DynamicTableNameParser", "superclass": "", "interfaces": "implements ISqlParser", "fields": [{"original_string": "private Map<String, ITableNameHandler> tableNameHandlerMap;", "modifier": "private", "type": "Map<String, ITableNameHandler>", "declarator": "tableNameHandlerMap", "var_name": "tableNameHandlerMap"}], "methods": [{"identifier": "parser", "parameters": "(MetaObject metaObject, String sql)", "modifiers": "@Override public", "return": "SqlInfo", "signature": "SqlInfo parser(MetaObject metaObject, String sql)", "full_signature": "@Override public SqlInfo parser(MetaObject metaObject, String sql)", "class_method_signature": "DynamicTableNameParser.parser(MetaObject metaObject, String sql)", "testcase": false, "constructor": false}, {"identifier": "allowProcess", "parameters": "(MetaObject metaObject)", "modifiers": "public", "return": "boolean", "signature": "boolean allowProcess(MetaObject metaObject)", "full_signature": "public boolean allowProcess(MetaObject metaObject)", "class_method_signature": "DynamicTableNameParser.allowProcess(MetaObject metaObject)", "testcase": false, "constructor": false}], "file": "mybatis-plus-extension/src/main/java/com/baomidou/mybatisplus/extension/parsers/DynamicTableNameParser.java"}, "focal_method": {"identifier": "parser", "parameters": "(MetaObject metaObject, String sql)", "modifiers": "@Override public", "return": "SqlInfo", "body": "@Override\n    public SqlInfo parser(MetaObject metaObject, String sql) {\n        // fix-issue:https://gitee.com/baomidou/mybatis-plus/issues/I1K7Q1\n        // Assert.isFalse(CollectionUtils.isEmpty(tableNameHandlerMap), \"tableNameHandlerMap is empty.\");\n        if (allowProcess(metaObject)) {\n            TableNameParser parser = new TableNameParser(sql);\n            List<TableNameParser.SqlToken> names = new ArrayList<>();\n            parser.accept(names::add);\n            StringBuilder builder = new StringBuilder();\n            int last = 0;\n            for (TableNameParser.SqlToken name : names) {\n                int start = name.getStart();\n                if (start != last) {\n                    builder.append(sql, last, start);\n                    String value = name.getValue();\n                    ITableNameHandler handler = tableNameHandlerMap.get(value);\n                    if (handler != null) {\n                        builder.append(handler.dynamicTableName(metaObject, sql, value));\n                    } else {\n                        builder.append(value);\n                    }\n                }\n                last = name.getEnd();\n            }\n            if (last != sql.length()) {\n                builder.append(sql.substring(last));\n            }\n            return SqlInfo.of(builder.toString());\n        }\n        return null;\n    }", "signature": "SqlInfo parser(MetaObject metaObject, String sql)", "full_signature": "@Override public SqlInfo parser(MetaObject metaObject, String sql)", "class_method_signature": "DynamicTableNameParser.parser(MetaObject metaObject, String sql)", "testcase": false, "constructor": false, "invocations": ["allowProcess", "accept", "getStart", "append", "getValue", "get", "append", "dynamicTableName", "append", "getEnd", "length", "append", "substring", "of", "toString"]}, "repository": {"repo_id": 65987043, "url": "https://github.com/baomidou/mybatis-plus", "stars": 7720, "created": "8/18/2016 10:06:53 AM +00:00", "updates": "2020-01-27T08:09:51+00:00", "fork": "False", "license": "licensed"}}