{"test_class": {"identifier": "UploadDownloadRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Mock\n    private NotificationEventService notificationEventService;", "modifier": "@Mock\n    private", "type": "NotificationEventService", "declarator": "notificationEventService", "var_name": "notificationEventService"}, {"original_string": "@InjectMocks\n    private UploadDownloadRestController uploadDownloadRestController;", "modifier": "@InjectMocks\n    private", "type": "UploadDownloadRestController", "declarator": "uploadDownloadRestController", "var_name": "uploadDownloadRestController"}, {"original_string": "@Mock\n    private UploadDownloadService uploadDownloadService;", "modifier": "@Mock\n    private", "type": "UploadDownloadService", "declarator": "uploadDownloadService", "var_name": "uploadDownloadService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/UploadDownloadRestControllerTest.java"}, "test_case": {"identifier": "testInitiateUploadSingle", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInitiateUploadSingle()\n    {\n        // Create business object format keys.\n        BusinessObjectFormatKey sourceBusinessObjectFormatKey =\n            new BusinessObjectFormatKey(BDEF_NAMESPACE, BDEF_NAME, FORMAT_USAGE_CODE, FORMAT_FILE_TYPE_CODE, FORMAT_VERSION);\n        BusinessObjectFormatKey targetBusinessObjectFormatKey =\n            new BusinessObjectFormatKey(BDEF_NAMESPACE_2, BDEF_NAME_2, FORMAT_USAGE_CODE_2, FORMAT_FILE_TYPE_CODE_2, FORMAT_VERSION_2);\n\n        // Create a file object.\n        File file = new File(LOCAL_FILE, FILE_SIZE);\n\n        // Create a request.\n        UploadSingleInitiationRequest request = new UploadSingleInitiationRequest(sourceBusinessObjectFormatKey, targetBusinessObjectFormatKey,\n            Lists.newArrayList(new Attribute(ATTRIBUTE_NAME_1_MIXED_CASE, ATTRIBUTE_VALUE_1)), file, STORAGE_NAME);\n\n        // Create business object data keys.\n        BusinessObjectDataKey sourceBusinessObjectDataKey =\n            new BusinessObjectDataKey(BDEF_NAMESPACE, BDEF_NAME, FORMAT_USAGE_CODE, FORMAT_FILE_TYPE_CODE, FORMAT_VERSION, PARTITION_VALUE, SUBPARTITION_VALUES,\n                DATA_VERSION);\n        BusinessObjectDataKey targetBusinessObjectDataKey =\n            new BusinessObjectDataKey(BDEF_NAMESPACE_2, BDEF_NAME_2, FORMAT_USAGE_CODE_2, FORMAT_FILE_TYPE_CODE_2, FORMAT_VERSION_2, PARTITION_VALUE_2,\n                SUBPARTITION_VALUES_2, DATA_VERSION_2);\n\n        // Create a business object data objects.\n        BusinessObjectData sourceBusinessObjectData = new BusinessObjectData();\n        sourceBusinessObjectData.setId(ID);\n        sourceBusinessObjectData.setStatus(BDATA_STATUS);\n        sourceBusinessObjectData.setStorageUnits(Lists.newArrayList(\n            new StorageUnit(new Storage(STORAGE_NAME, STORAGE_PLATFORM_CODE, NO_ATTRIBUTES), NO_STORAGE_DIRECTORY, NO_STORAGE_FILES, STORAGE_UNIT_STATUS,\n                NO_STORAGE_UNIT_STATUS_HISTORY, NO_STORAGE_POLICY_TRANSITION_FAILED_ATTEMPTS, NO_RESTORE_EXPIRATION_ON)));\n        BusinessObjectData targetBusinessObjectData = new BusinessObjectData();\n        targetBusinessObjectData.setId(ID_2);\n        targetBusinessObjectData.setStatus(BDATA_STATUS_2);\n        targetBusinessObjectData.setStorageUnits(Lists.newArrayList(\n            new StorageUnit(new Storage(STORAGE_NAME_2, STORAGE_PLATFORM_CODE, NO_ATTRIBUTES), NO_STORAGE_DIRECTORY, NO_STORAGE_FILES, STORAGE_UNIT_STATUS_2,\n                NO_STORAGE_UNIT_STATUS_HISTORY, NO_STORAGE_POLICY_TRANSITION_FAILED_ATTEMPTS, NO_RESTORE_EXPIRATION_ON)));\n\n        // Create a response.\n        UploadSingleInitiationResponse response =\n            new UploadSingleInitiationResponse(sourceBusinessObjectData, targetBusinessObjectData, file, UUID_VALUE, AWS_ASSUMED_ROLE_ACCESS_KEY,\n                AWS_ASSUMED_ROLE_SECRET_KEY, AWS_ASSUMED_ROLE_SESSION_TOKEN, AWS_ASSUMED_ROLE_SESSION_EXPIRATION_TIME, AWS_KMS_KEY_ID, STORAGE_NAME);\n\n        // Mock the external calls.\n        when(uploadDownloadService.initiateUploadSingle(request)).thenReturn(response);\n        when(businessObjectDataHelper.getBusinessObjectDataKey(sourceBusinessObjectData)).thenReturn(sourceBusinessObjectDataKey);\n        when(businessObjectDataHelper.getBusinessObjectDataKey(targetBusinessObjectData)).thenReturn(targetBusinessObjectDataKey);\n\n        // Call the method under test.\n        UploadSingleInitiationResponse result = uploadDownloadRestController.initiateUploadSingle(request);\n\n        // Verify the external calls.\n        verify(uploadDownloadService).initiateUploadSingle(request);\n        verify(businessObjectDataHelper).getBusinessObjectDataKey(sourceBusinessObjectData);\n        verify(businessObjectDataHelper).getBusinessObjectDataKey(targetBusinessObjectData);\n        verify(notificationEventService)\n            .processBusinessObjectDataNotificationEventAsync(NotificationEventTypeEntity.EventTypesBdata.BUS_OBJCT_DATA_RGSTN, sourceBusinessObjectDataKey,\n                BDATA_STATUS, null);\n        verify(notificationEventService)\n            .processBusinessObjectDataNotificationEventAsync(NotificationEventTypeEntity.EventTypesBdata.BUS_OBJCT_DATA_STTS_CHG, sourceBusinessObjectDataKey,\n                BDATA_STATUS, null);\n        verify(notificationEventService)\n            .processStorageUnitNotificationEventAsync(NotificationEventTypeEntity.EventTypesStorageUnit.STRGE_UNIT_STTS_CHG, sourceBusinessObjectDataKey,\n                STORAGE_NAME, STORAGE_UNIT_STATUS, null);\n        verify(notificationEventService)\n            .processBusinessObjectDataNotificationEventAsync(NotificationEventTypeEntity.EventTypesBdata.BUS_OBJCT_DATA_RGSTN, targetBusinessObjectDataKey,\n                BDATA_STATUS_2, null);\n        verify(notificationEventService)\n            .processBusinessObjectDataNotificationEventAsync(NotificationEventTypeEntity.EventTypesBdata.BUS_OBJCT_DATA_STTS_CHG, targetBusinessObjectDataKey,\n                BDATA_STATUS_2, null);\n        verify(notificationEventService)\n            .processStorageUnitNotificationEventAsync(NotificationEventTypeEntity.EventTypesStorageUnit.STRGE_UNIT_STTS_CHG, targetBusinessObjectDataKey,\n                STORAGE_NAME_2, STORAGE_UNIT_STATUS_2, null);\n        verifyNoMoreInteractionsHelper();\n\n        // Validate the results.\n        assertEquals(response, result);\n    }", "signature": "void testInitiateUploadSingle()", "full_signature": "@Test public void testInitiateUploadSingle()", "class_method_signature": "UploadDownloadRestControllerTest.testInitiateUploadSingle()", "testcase": true, "constructor": false, "invocations": ["newArrayList", "setId", "setStatus", "setStorageUnits", "newArrayList", "setId", "setStatus", "setStorageUnits", "newArrayList", "thenReturn", "when", "initiateUploadSingle", "thenReturn", "when", "getBusinessObjectDataKey", "thenReturn", "when", "getBusinessObjectDataKey", "initiateUploadSingle", "initiateUploadSingle", "verify", "getBusinessObjectDataKey", "verify", "getBusinessObjectDataKey", "verify", "processBusinessObjectDataNotificationEventAsync", "verify", "processBusinessObjectDataNotificationEventAsync", "verify", "processStorageUnitNotificationEventAsync", "verify", "processBusinessObjectDataNotificationEventAsync", "verify", "processBusinessObjectDataNotificationEventAsync", "verify", "processStorageUnitNotificationEventAsync", "verify", "verifyNoMoreInteractionsHelper", "assertEquals"]}, "focal_class": {"identifier": "UploadDownloadRestController", "superclass": "extends HerdBaseController", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Autowired\n    private NotificationEventService notificationEventService;", "modifier": "@Autowired\n    private", "type": "NotificationEventService", "declarator": "notificationEventService", "var_name": "notificationEventService"}, {"original_string": "@Autowired\n    private UploadDownloadService uploadDownloadService;", "modifier": "@Autowired\n    private", "type": "UploadDownloadService", "declarator": "uploadDownloadService", "var_name": "uploadDownloadService"}], "methods": [{"identifier": "initiateUploadSingle", "parameters": "(@RequestBody UploadSingleInitiationRequest uploadSingleInitiationRequest)", "modifiers": "@RequestMapping(value = \"/upload/single/initiation\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_UPLOAD_POST) public", "return": "UploadSingleInitiationResponse", "signature": "UploadSingleInitiationResponse initiateUploadSingle(@RequestBody UploadSingleInitiationRequest uploadSingleInitiationRequest)", "full_signature": "@RequestMapping(value = \"/upload/single/initiation\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_UPLOAD_POST) public UploadSingleInitiationResponse initiateUploadSingle(@RequestBody UploadSingleInitiationRequest uploadSingleInitiationRequest)", "class_method_signature": "UploadDownloadRestController.initiateUploadSingle(@RequestBody UploadSingleInitiationRequest uploadSingleInitiationRequest)", "testcase": false, "constructor": false}, {"identifier": "initiateDownloadSingle", "parameters": "(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"businessObjectDefinitionName\") String businessObjectDefinitionName,\n        @PathVariable(\"businessObjectFormatUsage\") String businessObjectFormatUsage,\n        @PathVariable(\"businessObjectFormatFileType\") String businessObjectFormatFileType,\n        @PathVariable(\"businessObjectFormatVersion\") Integer businessObjectFormatVersion, @PathVariable(\"partitionValue\") String partitionValue,\n        @PathVariable(\"businessObjectDataVersion\") Integer businessObjectDataVersion)", "modifiers": "@RequestMapping(value = \"/download/single/initiation/namespaces/{namespace}/businessObjectDefinitionNames/{businessObjectDefinitionName}\" + \"/businessObjectFormatUsages/{businessObjectFormatUsage}/businessObjectFormatFileTypes/{businessObjectFormatFileType}\" + \"/businessObjectFormatVersions/{businessObjectFormatVersion}/partitionValues/{partitionValue}\" + \"/businessObjectDataVersions/{businessObjectDataVersion}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_DOWNLOAD_GET) public", "return": "DownloadSingleInitiationResponse", "signature": "DownloadSingleInitiationResponse initiateDownloadSingle(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"businessObjectDefinitionName\") String businessObjectDefinitionName,\n        @PathVariable(\"businessObjectFormatUsage\") String businessObjectFormatUsage,\n        @PathVariable(\"businessObjectFormatFileType\") String businessObjectFormatFileType,\n        @PathVariable(\"businessObjectFormatVersion\") Integer businessObjectFormatVersion, @PathVariable(\"partitionValue\") String partitionValue,\n        @PathVariable(\"businessObjectDataVersion\") Integer businessObjectDataVersion)", "full_signature": "@RequestMapping(value = \"/download/single/initiation/namespaces/{namespace}/businessObjectDefinitionNames/{businessObjectDefinitionName}\" + \"/businessObjectFormatUsages/{businessObjectFormatUsage}/businessObjectFormatFileTypes/{businessObjectFormatFileType}\" + \"/businessObjectFormatVersions/{businessObjectFormatVersion}/partitionValues/{partitionValue}\" + \"/businessObjectDataVersions/{businessObjectDataVersion}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_DOWNLOAD_GET) public DownloadSingleInitiationResponse initiateDownloadSingle(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"businessObjectDefinitionName\") String businessObjectDefinitionName,\n        @PathVariable(\"businessObjectFormatUsage\") String businessObjectFormatUsage,\n        @PathVariable(\"businessObjectFormatFileType\") String businessObjectFormatFileType,\n        @PathVariable(\"businessObjectFormatVersion\") Integer businessObjectFormatVersion, @PathVariable(\"partitionValue\") String partitionValue,\n        @PathVariable(\"businessObjectDataVersion\") Integer businessObjectDataVersion)", "class_method_signature": "UploadDownloadRestController.initiateDownloadSingle(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"businessObjectDefinitionName\") String businessObjectDefinitionName,\n        @PathVariable(\"businessObjectFormatUsage\") String businessObjectFormatUsage,\n        @PathVariable(\"businessObjectFormatFileType\") String businessObjectFormatFileType,\n        @PathVariable(\"businessObjectFormatVersion\") Integer businessObjectFormatVersion, @PathVariable(\"partitionValue\") String partitionValue,\n        @PathVariable(\"businessObjectDataVersion\") Integer businessObjectDataVersion)", "testcase": false, "constructor": false}, {"identifier": "extendUploadSingleCredentials", "parameters": "(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"businessObjectDefinitionName\") String businessObjectDefinitionName,\n        @PathVariable(\"businessObjectFormatUsage\") String businessObjectFormatUsage,\n        @PathVariable(\"businessObjectFormatFileType\") String businessObjectFormatFileType,\n        @PathVariable(\"businessObjectFormatVersion\") Integer businessObjectFormatVersion, @PathVariable(\"partitionValue\") String partitionValue,\n        @PathVariable(\"businessObjectDataVersion\") Integer businessObjectDataVersion)", "modifiers": "@RequestMapping(value = \"/upload/single/credential/extension/namespaces/{namespace}/businessObjectDefinitionNames/{businessObjectDefinitionName}\" + \"/businessObjectFormatUsages/{businessObjectFormatUsage}/businessObjectFormatFileTypes/{businessObjectFormatFileType}\" + \"/businessObjectFormatVersions/{businessObjectFormatVersion}/partitionValues/{partitionValue}\" + \"/businessObjectDataVersions/{businessObjectDataVersion}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_UPLOAD_EXTEND_CREDENTIALS_GET) public", "return": "UploadSingleCredentialExtensionResponse", "signature": "UploadSingleCredentialExtensionResponse extendUploadSingleCredentials(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"businessObjectDefinitionName\") String businessObjectDefinitionName,\n        @PathVariable(\"businessObjectFormatUsage\") String businessObjectFormatUsage,\n        @PathVariable(\"businessObjectFormatFileType\") String businessObjectFormatFileType,\n        @PathVariable(\"businessObjectFormatVersion\") Integer businessObjectFormatVersion, @PathVariable(\"partitionValue\") String partitionValue,\n        @PathVariable(\"businessObjectDataVersion\") Integer businessObjectDataVersion)", "full_signature": "@RequestMapping(value = \"/upload/single/credential/extension/namespaces/{namespace}/businessObjectDefinitionNames/{businessObjectDefinitionName}\" + \"/businessObjectFormatUsages/{businessObjectFormatUsage}/businessObjectFormatFileTypes/{businessObjectFormatFileType}\" + \"/businessObjectFormatVersions/{businessObjectFormatVersion}/partitionValues/{partitionValue}\" + \"/businessObjectDataVersions/{businessObjectDataVersion}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_UPLOAD_EXTEND_CREDENTIALS_GET) public UploadSingleCredentialExtensionResponse extendUploadSingleCredentials(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"businessObjectDefinitionName\") String businessObjectDefinitionName,\n        @PathVariable(\"businessObjectFormatUsage\") String businessObjectFormatUsage,\n        @PathVariable(\"businessObjectFormatFileType\") String businessObjectFormatFileType,\n        @PathVariable(\"businessObjectFormatVersion\") Integer businessObjectFormatVersion, @PathVariable(\"partitionValue\") String partitionValue,\n        @PathVariable(\"businessObjectDataVersion\") Integer businessObjectDataVersion)", "class_method_signature": "UploadDownloadRestController.extendUploadSingleCredentials(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"businessObjectDefinitionName\") String businessObjectDefinitionName,\n        @PathVariable(\"businessObjectFormatUsage\") String businessObjectFormatUsage,\n        @PathVariable(\"businessObjectFormatFileType\") String businessObjectFormatFileType,\n        @PathVariable(\"businessObjectFormatVersion\") Integer businessObjectFormatVersion, @PathVariable(\"partitionValue\") String partitionValue,\n        @PathVariable(\"businessObjectDataVersion\") Integer businessObjectDataVersion)", "testcase": false, "constructor": false}, {"identifier": "initiateDownloadSingleSampleFile", "parameters": "(\n        @RequestBody DownloadBusinessObjectDefinitionSampleDataFileSingleInitiationRequest downloadBusinesObjectDefinitionSingleInitiationRequest)", "modifiers": "@RequestMapping(value = \"/download/businessObjectDefinitionSampleDataFile/single/initiation\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_DOWNLOAD_BUSINESS_OBJECT_DEFINITION_SAMPLE_DATA_FILE_POST) public", "return": "DownloadBusinessObjectDefinitionSampleDataFileSingleInitiationResponse", "signature": "DownloadBusinessObjectDefinitionSampleDataFileSingleInitiationResponse initiateDownloadSingleSampleFile(\n        @RequestBody DownloadBusinessObjectDefinitionSampleDataFileSingleInitiationRequest downloadBusinesObjectDefinitionSingleInitiationRequest)", "full_signature": "@RequestMapping(value = \"/download/businessObjectDefinitionSampleDataFile/single/initiation\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_DOWNLOAD_BUSINESS_OBJECT_DEFINITION_SAMPLE_DATA_FILE_POST) public DownloadBusinessObjectDefinitionSampleDataFileSingleInitiationResponse initiateDownloadSingleSampleFile(\n        @RequestBody DownloadBusinessObjectDefinitionSampleDataFileSingleInitiationRequest downloadBusinesObjectDefinitionSingleInitiationRequest)", "class_method_signature": "UploadDownloadRestController.initiateDownloadSingleSampleFile(\n        @RequestBody DownloadBusinessObjectDefinitionSampleDataFileSingleInitiationRequest downloadBusinesObjectDefinitionSingleInitiationRequest)", "testcase": false, "constructor": false}, {"identifier": "initiateUploadSampleFile", "parameters": "(\n        @RequestBody UploadBusinessObjectDefinitionSampleDataFileInitiationRequest uploadBusinessObjectDefinitionSampleDataFileInitiationRequest)", "modifiers": "@RequestMapping(value = \"/upload/businessObjectDefinitionSampleDataFile/initiation\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_UPLOAD_BUSINESS_OBJECT_DEFINITION_SAMPLE_DATA_FILE_POST) public", "return": "UploadBusinessObjectDefinitionSampleDataFileInitiationResponse", "signature": "UploadBusinessObjectDefinitionSampleDataFileInitiationResponse initiateUploadSampleFile(\n        @RequestBody UploadBusinessObjectDefinitionSampleDataFileInitiationRequest uploadBusinessObjectDefinitionSampleDataFileInitiationRequest)", "full_signature": "@RequestMapping(value = \"/upload/businessObjectDefinitionSampleDataFile/initiation\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_UPLOAD_BUSINESS_OBJECT_DEFINITION_SAMPLE_DATA_FILE_POST) public UploadBusinessObjectDefinitionSampleDataFileInitiationResponse initiateUploadSampleFile(\n        @RequestBody UploadBusinessObjectDefinitionSampleDataFileInitiationRequest uploadBusinessObjectDefinitionSampleDataFileInitiationRequest)", "class_method_signature": "UploadDownloadRestController.initiateUploadSampleFile(\n        @RequestBody UploadBusinessObjectDefinitionSampleDataFileInitiationRequest uploadBusinessObjectDefinitionSampleDataFileInitiationRequest)", "testcase": false, "constructor": false}, {"identifier": "initiateDownloadSingleBusinessObjectDataStorageFile", "parameters": "(\n        @RequestBody DownloadBusinessObjectDataStorageFileSingleInitiationRequest downloadBusinessObjectDataStorageFileSingleInitiationRequest)", "modifiers": "@RequestMapping(value = \"/download/businessObjectDataStorageFile/single/initiation\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_DOWNLOAD_BUSINESS_OBJECT_DATA_STORAGE_FILE_POST) public", "return": "DownloadBusinessObjectDataStorageFileSingleInitiationResponse", "signature": "DownloadBusinessObjectDataStorageFileSingleInitiationResponse initiateDownloadSingleBusinessObjectDataStorageFile(\n        @RequestBody DownloadBusinessObjectDataStorageFileSingleInitiationRequest downloadBusinessObjectDataStorageFileSingleInitiationRequest)", "full_signature": "@RequestMapping(value = \"/download/businessObjectDataStorageFile/single/initiation\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_DOWNLOAD_BUSINESS_OBJECT_DATA_STORAGE_FILE_POST) public DownloadBusinessObjectDataStorageFileSingleInitiationResponse initiateDownloadSingleBusinessObjectDataStorageFile(\n        @RequestBody DownloadBusinessObjectDataStorageFileSingleInitiationRequest downloadBusinessObjectDataStorageFileSingleInitiationRequest)", "class_method_signature": "UploadDownloadRestController.initiateDownloadSingleBusinessObjectDataStorageFile(\n        @RequestBody DownloadBusinessObjectDataStorageFileSingleInitiationRequest downloadBusinessObjectDataStorageFileSingleInitiationRequest)", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/UploadDownloadRestController.java"}, "focal_method": {"identifier": "initiateUploadSingle", "parameters": "(@RequestBody UploadSingleInitiationRequest uploadSingleInitiationRequest)", "modifiers": "@RequestMapping(value = \"/upload/single/initiation\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_UPLOAD_POST) public", "return": "UploadSingleInitiationResponse", "body": "@RequestMapping(value = \"/upload/single/initiation\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"})\n    @Secured(SecurityFunctions.FN_UPLOAD_POST)\n    public UploadSingleInitiationResponse initiateUploadSingle(@RequestBody UploadSingleInitiationRequest uploadSingleInitiationRequest)\n    {\n        UploadSingleInitiationResponse uploadSingleInitiationResponse = uploadDownloadService.initiateUploadSingle(uploadSingleInitiationRequest);\n\n        // Trigger notifications.\n        for (BusinessObjectData businessObjectData : Arrays\n            .asList(uploadSingleInitiationResponse.getSourceBusinessObjectData(), uploadSingleInitiationResponse.getTargetBusinessObjectData()))\n        {\n            BusinessObjectDataKey businessObjectDataKey = businessObjectDataHelper.getBusinessObjectDataKey(businessObjectData);\n\n            // Create business object data notifications.\n            for (NotificationEventTypeEntity.EventTypesBdata eventType : Arrays\n                .asList(NotificationEventTypeEntity.EventTypesBdata.BUS_OBJCT_DATA_RGSTN, NotificationEventTypeEntity.EventTypesBdata.BUS_OBJCT_DATA_STTS_CHG))\n            {\n                notificationEventService\n                    .processBusinessObjectDataNotificationEventAsync(eventType, businessObjectDataKey, businessObjectData.getStatus(), null);\n            }\n\n            // Create storage unit notifications.\n            for (StorageUnit storageUnit : businessObjectData.getStorageUnits())\n            {\n                notificationEventService\n                    .processStorageUnitNotificationEventAsync(NotificationEventTypeEntity.EventTypesStorageUnit.STRGE_UNIT_STTS_CHG, businessObjectDataKey,\n                        storageUnit.getStorage().getName(), storageUnit.getStorageUnitStatus(), null);\n            }\n        }\n\n        return uploadSingleInitiationResponse;\n    }", "signature": "UploadSingleInitiationResponse initiateUploadSingle(@RequestBody UploadSingleInitiationRequest uploadSingleInitiationRequest)", "full_signature": "@RequestMapping(value = \"/upload/single/initiation\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_UPLOAD_POST) public UploadSingleInitiationResponse initiateUploadSingle(@RequestBody UploadSingleInitiationRequest uploadSingleInitiationRequest)", "class_method_signature": "UploadDownloadRestController.initiateUploadSingle(@RequestBody UploadSingleInitiationRequest uploadSingleInitiationRequest)", "testcase": false, "constructor": false, "invocations": ["initiateUploadSingle", "asList", "getSourceBusinessObjectData", "getTargetBusinessObjectData", "getBusinessObjectDataKey", "asList", "processBusinessObjectDataNotificationEventAsync", "getStatus", "getStorageUnits", "processStorageUnitNotificationEventAsync", "getName", "getStorage", "getStorageUnitStatus"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}