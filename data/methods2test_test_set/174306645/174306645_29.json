{"test_class": {"identifier": "SpringBootExplainableResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "SpringBootExplainableResource resource = new SpringBootExplainableResource(new ApplicationMock());", "modifier": "", "type": "SpringBootExplainableResource", "declarator": "resource = new SpringBootExplainableResource(new ApplicationMock())", "var_name": "resource"}], "file": "addons/explainability/explainability-springboot-addon/src/test/java/org/kie/kogito/explainability/SpringBootExplainableResourceTest.java"}, "test_case": {"identifier": "explainServiceTest", "parameters": "()", "modifiers": "@Test @SuppressWarnings(\"unchecked\")", "return": "void", "body": "@Test\n    @SuppressWarnings(\"unchecked\")\n    void explainServiceTest() {\n        List<PredictInput> inputs = singletonList(createInput(40));\n\n        List<PredictOutput> outputs = (List<PredictOutput>) resource.predict(inputs).getBody();\n\n        assertNotNull(outputs);\n        assertEquals(1, outputs.size());\n\n        PredictOutput output = outputs.get(0);\n\n        assertNotNull(output.getResult());\n        assertNotNull(output.getModelIdentifier());\n        Map<String, Object> result = output.getResult();\n\n        assertTrue(result.containsKey(\"Should the driver be suspended?\"));\n        assertEquals(\"Yes\", result.get(\"Should the driver be suspended?\"));\n        assertTrue(result.containsKey(\"Fine\"));\n        Map<String, Object> expectedFine = new HashMap<>();\n        expectedFine.put(\"Points\", BigDecimal.valueOf(7));\n        expectedFine.put(\"Amount\", BigDecimal.valueOf(1000));\n        assertEquals(expectedFine.get(\"Points\"), ((Map<String, Object>)result.get(\"Fine\")).get(\"Points\"));\n        assertEquals(expectedFine.get(\"Amount\"), ((Map<String, Object>)result.get(\"Fine\")).get(\"Amount\"));\n    }", "signature": "void explainServiceTest()", "full_signature": "@Test @SuppressWarnings(\"unchecked\") void explainServiceTest()", "class_method_signature": "SpringBootExplainableResourceTest.explainServiceTest()", "testcase": true, "constructor": false, "invocations": ["singletonList", "createInput", "getBody", "predict", "assertNotNull", "assertEquals", "size", "get", "assertNotNull", "getResult", "assertNotNull", "getModelIdentifier", "getResult", "assertTrue", "containsKey", "assertEquals", "get", "assertTrue", "containsKey", "put", "valueOf", "put", "valueOf", "assertEquals", "get", "get", "get", "assertEquals", "get", "get", "get"]}, "focal_class": {"identifier": "SpringBootExplainableResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(SpringBootExplainableResource.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(SpringBootExplainableResource.class)", "var_name": "LOGGER"}, {"original_string": "private static final ExplainabilityService explainabilityService = ExplainabilityService.INSTANCE;", "modifier": "private static final", "type": "ExplainabilityService", "declarator": "explainabilityService = ExplainabilityService.INSTANCE", "var_name": "explainabilityService"}, {"original_string": "private final Application application;", "modifier": "private final", "type": "Application", "declarator": "application", "var_name": "application"}], "methods": [{"identifier": "SpringBootExplainableResource", "parameters": "(Application application)", "modifiers": "@Autowired public", "return": "", "signature": " SpringBootExplainableResource(Application application)", "full_signature": "@Autowired public  SpringBootExplainableResource(Application application)", "class_method_signature": "SpringBootExplainableResource.SpringBootExplainableResource(Application application)", "testcase": false, "constructor": true}, {"identifier": "predict", "parameters": "(List<PredictInput> inputs)", "modifiers": "@PostMapping(produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE) public", "return": "ResponseEntity<Object>", "signature": "ResponseEntity<Object> predict(List<PredictInput> inputs)", "full_signature": "@PostMapping(produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE) public ResponseEntity<Object> predict(List<PredictInput> inputs)", "class_method_signature": "SpringBootExplainableResource.predict(List<PredictInput> inputs)", "testcase": false, "constructor": false}], "file": "addons/explainability/explainability-springboot-addon/src/main/java/org/kie/kogito/explainability/SpringBootExplainableResource.java"}, "focal_method": {"identifier": "predict", "parameters": "(List<PredictInput> inputs)", "modifiers": "@PostMapping(produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE) public", "return": "ResponseEntity<Object>", "body": "@PostMapping(produces = MediaType.APPLICATION_JSON_VALUE,\n            consumes = MediaType.APPLICATION_JSON_VALUE)\n    public ResponseEntity<Object> predict(List<PredictInput> inputs) {\n        try {\n            return ResponseEntity.ok(explainabilityService.processRequest(application, inputs));\n        } catch (Exception e) {\n            LOGGER.warn(\"An Exception occurred processing the predict request\", e);\n            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(e.getMessage());\n        }\n    }", "signature": "ResponseEntity<Object> predict(List<PredictInput> inputs)", "full_signature": "@PostMapping(produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE) public ResponseEntity<Object> predict(List<PredictInput> inputs)", "class_method_signature": "SpringBootExplainableResource.predict(List<PredictInput> inputs)", "testcase": false, "constructor": false, "invocations": ["ok", "processRequest", "warn", "body", "status", "getMessage"]}, "repository": {"repo_id": 174306645, "url": "https://github.com/kiegroup/kogito-runtimes", "stars": 78, "created": "3/7/2019 8:49:09 AM +00:00", "updates": "2020-01-26T20:41:49+00:00", "fork": "False", "license": "licensed"}}