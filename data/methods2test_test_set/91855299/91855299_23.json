{"test_class": {"identifier": "SettingsDialogControllerTest", "superclass": "extends ApplicationTest", "interfaces": "", "fields": [{"original_string": "private SettingsDialogController controller;", "modifier": "private", "type": "SettingsDialogController", "declarator": "controller", "var_name": "controller"}, {"original_string": "private Node root;", "modifier": "private", "type": "Node", "declarator": "root", "var_name": "root"}], "file": "app/src/test/java/edu/wpi/first/shuffleboard/app/prefs/SettingsDialogControllerTest.java"}, "test_case": {"identifier": "testMultipleCategories", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testMultipleCategories() {\n    Category categoryA = Category.of(\"A\");\n    Category categoryB = Category.of(\"B\");\n    Category categoryC = Category.of(\"C\");\n\n    FxUtils.runOnFxThread(() -> controller.setRootCategories(ImmutableList.of(categoryA, categoryB, categoryC)));\n\n    waitForFxEvents();\n\n    // Should be three children\n    TreeView<Category> tree = lookup(\".settings-categories\").query();\n    ObservableList<TreeItem<Category>> children = tree.getRoot().getChildren();\n    assertEquals(3, children.size(), \"Three children should be present\");\n    assertEquals(categoryA, children.get(0).getValue());\n    assertEquals(categoryB, children.get(1).getValue());\n    assertEquals(categoryC, children.get(2).getValue());\n\n    assertEquals(children.get(0), tree.getSelectionModel().getSelectedItem(), \"The first child should be selected\");\n  }", "signature": "void testMultipleCategories()", "full_signature": "@Test public void testMultipleCategories()", "class_method_signature": "SettingsDialogControllerTest.testMultipleCategories()", "testcase": true, "constructor": false, "invocations": ["of", "of", "of", "runOnFxThread", "setRootCategories", "of", "waitForFxEvents", "query", "lookup", "getChildren", "getRoot", "assertEquals", "size", "assertEquals", "getValue", "get", "assertEquals", "getValue", "get", "assertEquals", "getValue", "get", "assertEquals", "get", "getSelectedItem", "getSelectionModel"]}, "focal_class": {"identifier": "SettingsDialogController", "superclass": "", "interfaces": "", "fields": [{"original_string": "@FXML\n  private SplitPane root;", "modifier": "@FXML\n  private", "type": "SplitPane", "declarator": "root", "var_name": "root"}, {"original_string": "@FXML\n  private TreeView<Category> categories;", "modifier": "@FXML\n  private", "type": "TreeView<Category>", "declarator": "categories", "var_name": "categories"}, {"original_string": "@FXML\n  private TreeItem<Category> rootItem;", "modifier": "@FXML\n  private", "type": "TreeItem<Category>", "declarator": "rootItem", "var_name": "rootItem"}, {"original_string": "@FXML\n  private StackPane view;", "modifier": "@FXML\n  private", "type": "StackPane", "declarator": "view", "var_name": "view"}], "methods": [{"identifier": "initialize", "parameters": "()", "modifiers": "@FXML private", "return": "void", "signature": "void initialize()", "full_signature": "@FXML private void initialize()", "class_method_signature": "SettingsDialogController.initialize()", "testcase": false, "constructor": false}, {"identifier": "setViewForCategory", "parameters": "(Category category)", "modifiers": "private", "return": "void", "signature": "void setViewForCategory(Category category)", "full_signature": "private void setViewForCategory(Category category)", "class_method_signature": "SettingsDialogController.setViewForCategory(Category category)", "testcase": false, "constructor": false}, {"identifier": "setRootCategories", "parameters": "(Collection<Category> rootCategories)", "modifiers": "public", "return": "void", "signature": "void setRootCategories(Collection<Category> rootCategories)", "full_signature": "public void setRootCategories(Collection<Category> rootCategories)", "class_method_signature": "SettingsDialogController.setRootCategories(Collection<Category> rootCategories)", "testcase": false, "constructor": false}, {"identifier": "addSubcategories", "parameters": "(TreeItem<Category> rootItem)", "modifiers": "private", "return": "void", "signature": "void addSubcategories(TreeItem<Category> rootItem)", "full_signature": "private void addSubcategories(TreeItem<Category> rootItem)", "class_method_signature": "SettingsDialogController.addSubcategories(TreeItem<Category> rootItem)", "testcase": false, "constructor": false}, {"identifier": "applySettings", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void applySettings()", "full_signature": "public void applySettings()", "class_method_signature": "SettingsDialogController.applySettings()", "testcase": false, "constructor": false}, {"identifier": "applySettings", "parameters": "(TreeItem<Category> item)", "modifiers": "private", "return": "void", "signature": "void applySettings(TreeItem<Category> item)", "full_signature": "private void applySettings(TreeItem<Category> item)", "class_method_signature": "SettingsDialogController.applySettings(TreeItem<Category> item)", "testcase": false, "constructor": false}], "file": "app/src/main/java/edu/wpi/first/shuffleboard/app/prefs/SettingsDialogController.java"}, "focal_method": {"identifier": "setRootCategories", "parameters": "(Collection<Category> rootCategories)", "modifiers": "public", "return": "void", "body": "public void setRootCategories(Collection<Category> rootCategories) {\n    rootItem.getChildren().clear();\n    for (Category rootCategory : rootCategories) {\n      TreeItem<Category> item = new TreeItem<>(rootCategory);\n      addSubcategories(item);\n      rootItem.getChildren().add(item);\n    }\n  }", "signature": "void setRootCategories(Collection<Category> rootCategories)", "full_signature": "public void setRootCategories(Collection<Category> rootCategories)", "class_method_signature": "SettingsDialogController.setRootCategories(Collection<Category> rootCategories)", "testcase": false, "constructor": false, "invocations": ["clear", "getChildren", "addSubcategories", "add", "getChildren"]}, "repository": {"repo_id": 91855299, "url": "https://github.com/wpilibsuite/shuffleboard", "stars": 52, "created": "5/20/2017 12:38:25 AM +00:00", "updates": "2020-01-23T20:11:35+00:00", "fork": "False", "license": "licensed"}}