{"test_class": {"identifier": "JongoUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/src/test/java/org/axway/grapes/server/db/mongo/JongoUtilsTest.java"}, "test_case": {"identifier": "generateJongoQuery", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void generateJongoQuery(){\n\t\tMap<String, Object> params = new HashMap<String, Object>();\t\t\t\t\n\t\tparams.put(\"key2\", \"value2\");\n\t\tparams.put(\"key1\", \"value1\");\n\t\t\n\t\t//TreeMap sorts params by key. Sorted params(i.e actual result)\n\t\t//is then compared with the sorted hard coded String (i.e expected result) \n\t\tMap<String, Object> sortParams = new TreeMap<String, Object>(params); \n\t\t\n\t\tassertEquals(\"{}\", JongoUtils.generateQuery(new HashMap<String, Object>()));\n\t\tassertEquals(\"{key1: 'value1'}\", JongoUtils.generateQuery(\"key1\", \"value1\"));\n\t\tassertEquals(\"{key1: 1}\", JongoUtils.generateQuery(\"key1\", 1));\n\t\tassertEquals(\"{key1: true}\", JongoUtils.generateQuery(\"key1\", true));\n\t\tassertEquals(\"{key1: 'value1', key2: 'value2'}\",JongoUtils.generateQuery(sortParams));\n\t\t\n\t}", "signature": "void generateJongoQuery()", "full_signature": "@Test public void generateJongoQuery()", "class_method_signature": "JongoUtilsTest.generateJongoQuery()", "testcase": true, "constructor": false, "invocations": ["put", "put", "assertEquals", "generateQuery", "assertEquals", "generateQuery", "assertEquals", "generateQuery", "assertEquals", "generateQuery", "assertEquals", "generateQuery"]}, "focal_class": {"identifier": "JongoUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "JongoUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " JongoUtils()", "full_signature": "private  JongoUtils()", "class_method_signature": "JongoUtils.JongoUtils()", "testcase": false, "constructor": true}, {"identifier": "generateQuery", "parameters": "(final Map<String,Object> params)", "modifiers": "public static", "return": "String", "signature": "String generateQuery(final Map<String,Object> params)", "full_signature": "public static String generateQuery(final Map<String,Object> params)", "class_method_signature": "JongoUtils.generateQuery(final Map<String,Object> params)", "testcase": false, "constructor": false}, {"identifier": "generateQuery", "parameters": "(final String key, final Object value)", "modifiers": "public static", "return": "String", "signature": "String generateQuery(final String key, final Object value)", "full_signature": "public static String generateQuery(final String key, final Object value)", "class_method_signature": "JongoUtils.generateQuery(final String key, final Object value)", "testcase": false, "constructor": false}, {"identifier": "getParam", "parameters": "(final Object param)", "modifiers": "private static", "return": "Object", "signature": "Object getParam(final Object param)", "full_signature": "private static Object getParam(final Object param)", "class_method_signature": "JongoUtils.getParam(final Object param)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/axway/grapes/server/db/mongo/JongoUtils.java"}, "focal_method": {"identifier": "generateQuery", "parameters": "(final Map<String,Object> params)", "modifiers": "public static", "return": "String", "body": "public static String generateQuery(final Map<String,Object> params){\n\t\tfinal StringBuilder sb = new StringBuilder();\n\t\tboolean newEntry = false;\n\t\t\n\t\tsb.append(\"{\");\n\t\tfor(final Entry<String,Object> param: params.entrySet()){\n\t\t\tif(newEntry){\n\t\t\t\tsb.append(\", \");\n\t\t\t}\n\n\t\t\tsb.append(param.getKey());\n\t\t\tsb.append(\": \");\n\t\t\tsb.append(getParam(param.getValue()));\n\t\t\tnewEntry = true;\n\t\t}\n\t\tsb.append(\"}\");\n\t\t\n\t\treturn sb.toString();\n\t}", "signature": "String generateQuery(final Map<String,Object> params)", "full_signature": "public static String generateQuery(final Map<String,Object> params)", "class_method_signature": "JongoUtils.generateQuery(final Map<String,Object> params)", "testcase": false, "constructor": false, "invocations": ["append", "entrySet", "append", "append", "getKey", "append", "append", "getParam", "getValue", "append", "toString"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}