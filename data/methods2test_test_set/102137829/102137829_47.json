{"test_class": {"identifier": "KeyTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/de/slackspace/openkeepass/domain/KeyTest.java"}, "test_case": {"identifier": "shouldMarshallObjectToXml", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldMarshallObjectToXml() throws Exception {\n        Key key = new Key();\n        key.setData(\"someData\");\n\n        ByteArrayOutputStream bos = new SimpleXmlParser().toXml(key);\n\n        String xml = XmlStringCleaner.cleanXmlString(new String(bos.toByteArray()));\n        Assert.assertEquals(\"<Key><Data>someData</Data></Key>\", xml);\n    }", "signature": "void shouldMarshallObjectToXml()", "full_signature": "@Test public void shouldMarshallObjectToXml()", "class_method_signature": "KeyTest.shouldMarshallObjectToXml()", "testcase": true, "constructor": false, "invocations": ["setData", "toXml", "cleanXmlString", "toByteArray", "assertEquals"]}, "focal_class": {"identifier": "Key", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Element(name = \"Data\")\n    private String data;", "modifier": "@Element(name = \"Data\")\n    private", "type": "String", "declarator": "data", "var_name": "data"}], "methods": [{"identifier": "getData", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getData()", "full_signature": "public String getData()", "class_method_signature": "Key.getData()", "testcase": false, "constructor": false}, {"identifier": "setData", "parameters": "(String data)", "modifiers": "public", "return": "void", "signature": "void setData(String data)", "full_signature": "public void setData(String data)", "class_method_signature": "Key.setData(String data)", "testcase": false, "constructor": false}], "file": "src/de/slackspace/openkeepass/domain/Key.java"}, "focal_method": {"identifier": "setData", "parameters": "(String data)", "modifiers": "public", "return": "void", "body": "public void setData(String data) {\n        this.data = data;\n    }", "signature": "void setData(String data)", "full_signature": "public void setData(String data)", "class_method_signature": "Key.setData(String data)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 102137829, "url": "https://github.com/privacyint/ThornSec", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 10, "size": 20604, "license": "licensed"}}