{"test_class": {"identifier": "BasicPathSegmentTest", "superclass": "extends BaseValueFactoryTest", "interfaces": "", "fields": [{"original_string": "public static final TextEncoder NO_OP_ENCODER = Path.NO_OP_ENCODER;", "modifier": "public static final", "type": "TextEncoder", "declarator": "NO_OP_ENCODER = Path.NO_OP_ENCODER", "var_name": "NO_OP_ENCODER"}, {"original_string": "private PathValueFactory factory;", "modifier": "private", "type": "PathValueFactory", "declarator": "factory", "var_name": "factory"}, {"original_string": "private Name validName;", "modifier": "private", "type": "Name", "declarator": "validName", "var_name": "validName"}, {"original_string": "private Path.Segment segment;", "modifier": "private", "type": "Path.Segment", "declarator": "segment", "var_name": "segment"}, {"original_string": "private Path.Segment segment2;", "modifier": "private", "type": "Path.Segment", "declarator": "segment2", "var_name": "segment2"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/value/basic/BasicPathSegmentTest.java"}, "test_case": {"identifier": "shouldConsiderSegmentCreatedWithSelfReferenceToBeEqualToStaticSingleton", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldConsiderSegmentCreatedWithSelfReferenceToBeEqualToStaticSingleton() {\n        segment = factory.createSegment(Path.SELF);\n        assertThat(segment.equals(Path.SELF_SEGMENT), is(true));\n    }", "signature": "void shouldConsiderSegmentCreatedWithSelfReferenceToBeEqualToStaticSingleton()", "full_signature": "@Test public void shouldConsiderSegmentCreatedWithSelfReferenceToBeEqualToStaticSingleton()", "class_method_signature": "BasicPathSegmentTest.shouldConsiderSegmentCreatedWithSelfReferenceToBeEqualToStaticSingleton()", "testcase": true, "constructor": false, "invocations": ["createSegment", "assertThat", "equals", "is"]}, "focal_class": {"identifier": "BasicPathSegment", "superclass": "", "interfaces": "implements Path.Segment", "fields": [{"original_string": "private static final long serialVersionUID = 4367349287846075157L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 4367349287846075157L", "var_name": "serialVersionUID"}, {"original_string": "private final Name name;", "modifier": "private final", "type": "Name", "declarator": "name", "var_name": "name"}, {"original_string": "private final int index;", "modifier": "private final", "type": "int", "declarator": "index", "var_name": "index"}, {"original_string": "private final int hc;", "modifier": "private final", "type": "int", "declarator": "hc", "var_name": "hc"}], "methods": [{"identifier": "BasicPathSegment", "parameters": "( Name name )", "modifiers": "public", "return": "", "signature": " BasicPathSegment( Name name )", "full_signature": "public  BasicPathSegment( Name name )", "class_method_signature": "BasicPathSegment.BasicPathSegment( Name name )", "testcase": false, "constructor": true}, {"identifier": "BasicPathSegment", "parameters": "( Name name,\n                             int index )", "modifiers": "public", "return": "", "signature": " BasicPathSegment( Name name,\n                             int index )", "full_signature": "public  BasicPathSegment( Name name,\n                             int index )", "class_method_signature": "BasicPathSegment.BasicPathSegment( Name name,\n                             int index )", "testcase": false, "constructor": true}, {"identifier": "getIndex", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getIndex()", "full_signature": "@Override public int getIndex()", "class_method_signature": "BasicPathSegment.getIndex()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "Name", "signature": "Name getName()", "full_signature": "@Override public Name getName()", "class_method_signature": "BasicPathSegment.getName()", "testcase": false, "constructor": false}, {"identifier": "hasIndex", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasIndex()", "full_signature": "@Override public boolean hasIndex()", "class_method_signature": "BasicPathSegment.hasIndex()", "testcase": false, "constructor": false}, {"identifier": "isParentReference", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isParentReference()", "full_signature": "@Override public boolean isParentReference()", "class_method_signature": "BasicPathSegment.isParentReference()", "testcase": false, "constructor": false}, {"identifier": "isSelfReference", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSelfReference()", "full_signature": "@Override public boolean isSelfReference()", "class_method_signature": "BasicPathSegment.isSelfReference()", "testcase": false, "constructor": false}, {"identifier": "isIdentifier", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isIdentifier()", "full_signature": "@Override public boolean isIdentifier()", "class_method_signature": "BasicPathSegment.isIdentifier()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "( Path.Segment that )", "modifiers": "@Override public", "return": "int", "signature": "int compareTo( Path.Segment that )", "full_signature": "@Override public int compareTo( Path.Segment that )", "class_method_signature": "BasicPathSegment.compareTo( Path.Segment that )", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "BasicPathSegment.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "( Object obj )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals( Object obj )", "full_signature": "@Override public boolean equals( Object obj )", "class_method_signature": "BasicPathSegment.equals( Object obj )", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BasicPathSegment.toString()", "testcase": false, "constructor": false}, {"identifier": "getUnencodedString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getUnencodedString()", "full_signature": "@Override public String getUnencodedString()", "class_method_signature": "BasicPathSegment.getUnencodedString()", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getString()", "full_signature": "@Override public String getString()", "class_method_signature": "BasicPathSegment.getString()", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "( TextEncoder encoder )", "modifiers": "@Override public", "return": "String", "signature": "String getString( TextEncoder encoder )", "full_signature": "@Override public String getString( TextEncoder encoder )", "class_method_signature": "BasicPathSegment.getString( TextEncoder encoder )", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "( NamespaceRegistry namespaceRegistry )", "modifiers": "@Override public", "return": "String", "signature": "String getString( NamespaceRegistry namespaceRegistry )", "full_signature": "@Override public String getString( NamespaceRegistry namespaceRegistry )", "class_method_signature": "BasicPathSegment.getString( NamespaceRegistry namespaceRegistry )", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "( NamespaceRegistry namespaceRegistry,\n                             TextEncoder encoder )", "modifiers": "@Override public", "return": "String", "signature": "String getString( NamespaceRegistry namespaceRegistry,\n                             TextEncoder encoder )", "full_signature": "@Override public String getString( NamespaceRegistry namespaceRegistry,\n                             TextEncoder encoder )", "class_method_signature": "BasicPathSegment.getString( NamespaceRegistry namespaceRegistry,\n                             TextEncoder encoder )", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "( NamespaceRegistry namespaceRegistry,\n                             TextEncoder encoder,\n                             TextEncoder delimiterEncoder )", "modifiers": "@Override public", "return": "String", "signature": "String getString( NamespaceRegistry namespaceRegistry,\n                             TextEncoder encoder,\n                             TextEncoder delimiterEncoder )", "full_signature": "@Override public String getString( NamespaceRegistry namespaceRegistry,\n                             TextEncoder encoder,\n                             TextEncoder delimiterEncoder )", "class_method_signature": "BasicPathSegment.getString( NamespaceRegistry namespaceRegistry,\n                             TextEncoder encoder,\n                             TextEncoder delimiterEncoder )", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/value/basic/BasicPathSegment.java"}, "focal_method": {"identifier": "equals", "parameters": "( Object obj )", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals( Object obj ) {\n        if (obj == this) return true;\n        if (obj instanceof Path.Segment) {\n            Path.Segment that = (Path.Segment)obj;\n            if (!this.getName().equals(that.getName())) return false;\n            return Math.abs(getIndex()) == Math.abs(that.getIndex());\n        }\n        return false;\n    }", "signature": "boolean equals( Object obj )", "full_signature": "@Override public boolean equals( Object obj )", "class_method_signature": "BasicPathSegment.equals( Object obj )", "testcase": false, "constructor": false, "invocations": ["equals", "getName", "getName", "abs", "getIndex", "abs", "getIndex"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}