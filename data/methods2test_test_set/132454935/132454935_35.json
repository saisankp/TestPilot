{"test_class": {"identifier": "AccountsTest", "superclass": "", "interfaces": "", "fields": [], "file": "elrond-core/src/test/java/network/elrond/account/AccountsTest.java"}, "test_case": {"identifier": "testGetAddresses", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetAddresses() throws IOException {\n        AccountsPersistenceUnit<AccountAddress, AccountState> unit = new AccountsPersistenceUnit<>(\"\");\n        AccountsContext accountsContext = new AccountsContext();\n        PublicKey publicKeyMinting = AppServiceProvider.getShardingService().getPublicKeyForMinting(new Shard(0));\n        accountsContext.setShard(AppServiceProvider.getShardingService().getShard(publicKeyMinting.getValue()));\n        Accounts accounts  = new Accounts(accountsContext, unit);\n        Assert.assertTrue(accounts.getAddresses()!=null );\n        Assert.assertEquals(1, accounts.getAddresses().size());\n    }", "signature": "void testGetAddresses()", "full_signature": "@Test public void testGetAddresses()", "class_method_signature": "AccountsTest.testGetAddresses()", "testcase": true, "constructor": false, "invocations": ["getPublicKeyForMinting", "getShardingService", "setShard", "getShard", "getShardingService", "getValue", "assertTrue", "getAddresses", "assertEquals", "size", "getAddresses"]}, "focal_class": {"identifier": "Accounts", "superclass": "", "interfaces": "implements Serializable, PersistenceUnitContainer", "fields": [{"original_string": "private final AccountsContext context;", "modifier": "private final", "type": "AccountsContext", "declarator": "context", "var_name": "context"}, {"original_string": "private final AccountsPersistenceUnit<AccountAddress, AccountState> unit;", "modifier": "private final", "type": "AccountsPersistenceUnit<AccountAddress, AccountState>", "declarator": "unit", "var_name": "unit"}, {"original_string": "private final Set<AccountAddress> addresses;", "modifier": "private final", "type": "Set<AccountAddress>", "declarator": "addresses", "var_name": "addresses"}, {"original_string": "private static final Logger logger = LogManager.getLogger(Accounts.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LogManager.getLogger(Accounts.class)", "var_name": "logger"}], "methods": [{"identifier": "Accounts", "parameters": "(AccountsContext context, AccountsPersistenceUnit<AccountAddress, AccountState> unit)", "modifiers": "public", "return": "", "signature": " Accounts(AccountsContext context, AccountsPersistenceUnit<AccountAddress, AccountState> unit)", "full_signature": "public  Accounts(AccountsContext context, AccountsPersistenceUnit<AccountAddress, AccountState> unit)", "class_method_signature": "Accounts.Accounts(AccountsContext context, AccountsPersistenceUnit<AccountAddress, AccountState> unit)", "testcase": false, "constructor": true}, {"identifier": "getShard", "parameters": "()", "modifiers": "public", "return": "Shard", "signature": "Shard getShard()", "full_signature": "public Shard getShard()", "class_method_signature": "Accounts.getShard()", "testcase": false, "constructor": false}, {"identifier": "getAccountsPersistenceUnit", "parameters": "()", "modifiers": "public", "return": "AccountsPersistenceUnit<AccountAddress, AccountState>", "signature": "AccountsPersistenceUnit<AccountAddress, AccountState> getAccountsPersistenceUnit()", "full_signature": "public AccountsPersistenceUnit<AccountAddress, AccountState> getAccountsPersistenceUnit()", "class_method_signature": "Accounts.getAccountsPersistenceUnit()", "testcase": false, "constructor": false}, {"identifier": "getAddresses", "parameters": "()", "modifiers": "public", "return": "Set<AccountAddress>", "signature": "Set<AccountAddress> getAddresses()", "full_signature": "public Set<AccountAddress> getAddresses()", "class_method_signature": "Accounts.getAddresses()", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void flush()", "full_signature": "public void flush()", "class_method_signature": "Accounts.flush()", "testcase": false, "constructor": false}, {"identifier": "stopPersistenceUnit", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stopPersistenceUnit()", "full_signature": "@Override public void stopPersistenceUnit()", "class_method_signature": "Accounts.stopPersistenceUnit()", "testcase": false, "constructor": false}], "file": "elrond-core/src/main/java/network/elrond/account/Accounts.java"}, "focal_method": {"identifier": "getAddresses", "parameters": "()", "modifiers": "public", "return": "Set<AccountAddress>", "body": "public Set<AccountAddress> getAddresses() {\n        return (Collections.synchronizedSet(addresses));\n    }", "signature": "Set<AccountAddress> getAddresses()", "full_signature": "public Set<AccountAddress> getAddresses()", "class_method_signature": "Accounts.getAddresses()", "testcase": false, "constructor": false, "invocations": ["synchronizedSet"]}, "repository": {"repo_id": 132454935, "url": "https://github.com/ElrondNetwork/elrond-node-prototype", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 16, "size": 16635, "license": "licensed"}}