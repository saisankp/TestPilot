{"test_class": {"identifier": "WriterRegistrationServiceTest", "superclass": "extends BaseFormatTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private WriterRegistrationService service;", "modifier": "@Autowired\n    private", "type": "WriterRegistrationService", "declarator": "service", "var_name": "service"}, {"original_string": "private OutputStream output = new ByteArrayOutputStream();", "modifier": "private", "type": "OutputStream", "declarator": "output = new ByteArrayOutputStream()", "var_name": "output"}], "file": "dataprep-transformation/src/test/java/org/talend/dataprep/transformation/format/WriterRegistrationServiceTest.java"}, "test_case": {"identifier": "shouldReturnWriterWithParameter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnWriterWithParameter() {\n        Map<String, String> parameters = new HashMap<>();\n        parameters.put(CSVWriterTest.SEPARATOR_PARAM_NAME, \"|\");\n        final TransformerWriter csvWriter = service.getWriter(CSVFormat.CSV, output, parameters);\n        Assert.assertTrue(csvWriter instanceof CSVWriter);\n    }", "signature": "void shouldReturnWriterWithParameter()", "full_signature": "@Test public void shouldReturnWriterWithParameter()", "class_method_signature": "WriterRegistrationServiceTest.shouldReturnWriterWithParameter()", "testcase": true, "constructor": false, "invocations": ["put", "getWriter", "assertTrue"]}, "focal_class": {"identifier": "WriterRegistrationService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ApplicationContext context;", "modifier": "@Autowired\n    private", "type": "ApplicationContext", "declarator": "context", "var_name": "context"}, {"original_string": "@Autowired\n    private FormatRegistrationService formatRegistrationService;", "modifier": "@Autowired\n    private", "type": "FormatRegistrationService", "declarator": "formatRegistrationService", "var_name": "formatRegistrationService"}], "methods": [{"identifier": "getWriter", "parameters": "(String format, OutputStream output, Map<String, String> parameters)", "modifiers": "public", "return": "TransformerWriter", "signature": "TransformerWriter getWriter(String format, OutputStream output, Map<String, String> parameters)", "full_signature": "public TransformerWriter getWriter(String format, OutputStream output, Map<String, String> parameters)", "class_method_signature": "WriterRegistrationService.getWriter(String format, OutputStream output, Map<String, String> parameters)", "testcase": false, "constructor": false}], "file": "dataprep-transformation/src/main/java/org/talend/dataprep/transformation/format/WriterRegistrationService.java"}, "focal_method": {"identifier": "getWriter", "parameters": "(String format, OutputStream output, Map<String, String> parameters)", "modifiers": "public", "return": "TransformerWriter", "body": "public TransformerWriter getWriter(String format, OutputStream output, Map<String, String> parameters) {\n        try {\n            // Sanity check -> ensures format is actually enabled before using it.\n            final ExportFormat formatByName = formatRegistrationService.getByName(format);\n            if (formatByName == null || !formatByName.isEnabled()) {\n                throw new TDPException(UNABLE_TO_USE_EXPORT, ExceptionContext.build().put(\"format\", format));\n            }\n            if (parameters.isEmpty()) {\n                return (TransformerWriter) context.getBean(\"writer#\" + format, output);\n            } else {\n                return (TransformerWriter) context.getBean(\"writer#\" + format, output, parameters);\n            }\n        } catch (BeansException be) {\n            throw new TDPException(TransformationErrorCodes.OUTPUT_TYPE_NOT_SUPPORTED, be);\n        }\n    }", "signature": "TransformerWriter getWriter(String format, OutputStream output, Map<String, String> parameters)", "full_signature": "public TransformerWriter getWriter(String format, OutputStream output, Map<String, String> parameters)", "class_method_signature": "WriterRegistrationService.getWriter(String format, OutputStream output, Map<String, String> parameters)", "testcase": false, "constructor": false, "invocations": ["getByName", "isEnabled", "put", "build", "isEmpty", "getBean", "getBean"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}