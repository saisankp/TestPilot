{"test_class": {"identifier": "DataSyncConfigurationTest", "superclass": "", "interfaces": "", "fields": [], "file": "das-client/src/test/java/com/ppdai/das/client/delegate/datasync/DataSyncConfigurationTest.java"}, "test_case": {"identifier": "testDataSyncConfiguration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDataSyncConfiguration() {\n        DataSyncConfiguration.getInstance().disableSyncMode();\n        assertFalse(DataSyncConfiguration.getInstance().isEnableSyncMode());\n        DataSyncConfiguration.getInstance().enableSyncMode();\n\n        DasDataSynchronizer dasDataSynchronizer1 = DataSyncConfiguration.getInstance().getDasDataSynchronizer(\"dbA\");\n        assertEquals(\"TestSynchronizer\", dasDataSynchronizer1.getClass().getSimpleName());\n\n        DasDataSynchronizer dasDataSynchronizer2 = DataSyncConfiguration.getInstance().getDasDataSynchronizer(\"dbB\");\n        assertEquals(\"TestSynchronizer\", dasDataSynchronizer2.getClass().getSimpleName());\n        assertTrue(DataSyncConfiguration.getInstance().isEnableSyncMode());\n    }", "signature": "void testDataSyncConfiguration()", "full_signature": "@Test public void testDataSyncConfiguration()", "class_method_signature": "DataSyncConfigurationTest.testDataSyncConfiguration()", "testcase": true, "constructor": false, "invocations": ["disableSyncMode", "getInstance", "assertFalse", "isEnableSyncMode", "getInstance", "enableSyncMode", "getInstance", "getDasDataSynchronizer", "getInstance", "assertEquals", "getSimpleName", "getClass", "getDasDataSynchronizer", "getInstance", "assertEquals", "getSimpleName", "getClass", "assertTrue", "isEnableSyncMode", "getInstance"]}, "focal_class": {"identifier": "DataSyncConfiguration", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(DataSyncConfiguration.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(DataSyncConfiguration.class.getName())", "var_name": "logger"}, {"original_string": "private final Map<String, DasDataSynchronizer> dasDataSynchronizers = new ConcurrentHashMap<>();", "modifier": "private final", "type": "Map<String, DasDataSynchronizer>", "declarator": "dasDataSynchronizers = new ConcurrentHashMap<>()", "var_name": "dasDataSynchronizers"}, {"original_string": "private final ScheduledExecutorService scheduledExecutorService = Executors.newScheduledThreadPool(5);", "modifier": "private final", "type": "ScheduledExecutorService", "declarator": "scheduledExecutorService = Executors.newScheduledThreadPool(5)", "var_name": "scheduledExecutorService"}, {"original_string": "private static final DataSyncConfiguration instance = new DataSyncConfiguration();", "modifier": "private static final", "type": "DataSyncConfiguration", "declarator": "instance = new DataSyncConfiguration()", "var_name": "instance"}, {"original_string": "private final AtomicBoolean isEnableValidateScheduler = new AtomicBoolean(false);", "modifier": "private final", "type": "AtomicBoolean", "declarator": "isEnableValidateScheduler = new AtomicBoolean(false)", "var_name": "isEnableValidateScheduler"}, {"original_string": "private final AtomicBoolean isEnableSyncMode = new AtomicBoolean(false);", "modifier": "private final", "type": "AtomicBoolean", "declarator": "isEnableSyncMode = new AtomicBoolean(false)", "var_name": "isEnableSyncMode"}, {"original_string": "private final AtomicBoolean initialized = new AtomicBoolean(false);", "modifier": "private final", "type": "AtomicBoolean", "declarator": "initialized = new AtomicBoolean(false)", "var_name": "initialized"}], "methods": [{"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "DataSyncConfiguration", "signature": "DataSyncConfiguration getInstance()", "full_signature": "public static DataSyncConfiguration getInstance()", "class_method_signature": "DataSyncConfiguration.getInstance()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void init()", "full_signature": "private void init()", "class_method_signature": "DataSyncConfiguration.init()", "testcase": false, "constructor": false}, {"identifier": "DataSyncConfiguration", "parameters": "()", "modifiers": "private", "return": "", "signature": " DataSyncConfiguration()", "full_signature": "private  DataSyncConfiguration()", "class_method_signature": "DataSyncConfiguration.DataSyncConfiguration()", "testcase": false, "constructor": true}, {"identifier": "receiveContext", "parameters": "(DataSyncContext dataSyncContext)", "modifiers": "@Subscribe public", "return": "void", "signature": "void receiveContext(DataSyncContext dataSyncContext)", "full_signature": "@Subscribe public void receiveContext(DataSyncContext dataSyncContext)", "class_method_signature": "DataSyncConfiguration.receiveContext(DataSyncContext dataSyncContext)", "testcase": false, "constructor": false}, {"identifier": "skipValidateScheduler", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void skipValidateScheduler()", "full_signature": "public void skipValidateScheduler()", "class_method_signature": "DataSyncConfiguration.skipValidateScheduler()", "testcase": false, "constructor": false}, {"identifier": "continueValidateScheduler", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void continueValidateScheduler()", "full_signature": "public void continueValidateScheduler()", "class_method_signature": "DataSyncConfiguration.continueValidateScheduler()", "testcase": false, "constructor": false}, {"identifier": "startValidateScheduler", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void startValidateScheduler()", "full_signature": "private void startValidateScheduler()", "class_method_signature": "DataSyncConfiguration.startValidateScheduler()", "testcase": false, "constructor": false}, {"identifier": "isValidateJobActive", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isValidateJobActive()", "full_signature": "private boolean isValidateJobActive()", "class_method_signature": "DataSyncConfiguration.isValidateJobActive()", "testcase": false, "constructor": false}, {"identifier": "getDasDataSynchronizer", "parameters": "(String logicDBName)", "modifiers": "public", "return": "DasDataSynchronizer", "signature": "DasDataSynchronizer getDasDataSynchronizer(String logicDBName)", "full_signature": "public DasDataSynchronizer getDasDataSynchronizer(String logicDBName)", "class_method_signature": "DataSyncConfiguration.getDasDataSynchronizer(String logicDBName)", "testcase": false, "constructor": false}, {"identifier": "isEnableSyncMode", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEnableSyncMode()", "full_signature": "public boolean isEnableSyncMode()", "class_method_signature": "DataSyncConfiguration.isEnableSyncMode()", "testcase": false, "constructor": false}, {"identifier": "enableSyncMode", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void enableSyncMode()", "full_signature": "public void enableSyncMode()", "class_method_signature": "DataSyncConfiguration.enableSyncMode()", "testcase": false, "constructor": false}, {"identifier": "disableSyncMode", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void disableSyncMode()", "full_signature": "public void disableSyncMode()", "class_method_signature": "DataSyncConfiguration.disableSyncMode()", "testcase": false, "constructor": false}, {"identifier": "sendContext", "parameters": "(DataSyncContext syncContext)", "modifiers": "public", "return": "void", "signature": "void sendContext(DataSyncContext syncContext)", "full_signature": "public void sendContext(DataSyncContext syncContext)", "class_method_signature": "DataSyncConfiguration.sendContext(DataSyncContext syncContext)", "testcase": false, "constructor": false}], "file": "das-client/src/main/java/com/ppdai/das/client/delegate/datasync/DataSyncConfiguration.java"}, "focal_method": {"identifier": "DataSyncConfiguration", "parameters": "()", "modifiers": "private", "return": "", "body": "private DataSyncConfiguration() {\n    }", "signature": " DataSyncConfiguration()", "full_signature": "private  DataSyncConfiguration()", "class_method_signature": "DataSyncConfiguration.DataSyncConfiguration()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}