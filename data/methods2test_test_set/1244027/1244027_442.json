{"test_class": {"identifier": "AbstractMultimapTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected Multimap<String, String> multimap;", "modifier": "protected", "type": "Multimap<String, String>", "declarator": "multimap", "var_name": "multimap"}, {"original_string": "protected String[] keys;", "modifier": "protected", "type": "String[]", "declarator": "keys", "var_name": "keys"}, {"original_string": "protected String[] values;", "modifier": "protected", "type": "String[]", "declarator": "values", "var_name": "values"}], "file": "modeshape-common/src/test/java/org/modeshape/common/collection/AbstractMultimapTest.java"}, "test_case": {"identifier": "shouldBeEmptyAfterCreation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldBeEmptyAfterCreation() {\n        assertThat(multimap.isEmpty(), is(true));\n    }", "signature": "void shouldBeEmptyAfterCreation()", "full_signature": "@Test public void shouldBeEmptyAfterCreation()", "class_method_signature": "AbstractMultimapTest.shouldBeEmptyAfterCreation()", "testcase": true, "constructor": false, "invocations": ["assertThat", "isEmpty", "is"]}, "focal_class": {"identifier": "AbstractMultimap", "superclass": "", "interfaces": "implements Multimap<K, V>", "fields": [{"original_string": "private final Map<K, Collection<V>> data;", "modifier": "private final", "type": "Map<K, Collection<V>>", "declarator": "data", "var_name": "data"}, {"original_string": "private int totalSize;", "modifier": "private", "type": "int", "declarator": "totalSize", "var_name": "totalSize"}, {"original_string": "private transient Set<K> keysView;", "modifier": "private transient", "type": "Set<K>", "declarator": "keysView", "var_name": "keysView"}, {"original_string": "private transient Map<K, Collection<V>> mapView;", "modifier": "private transient", "type": "Map<K, Collection<V>>", "declarator": "mapView", "var_name": "mapView"}, {"original_string": "private transient Collection<V> valuesCollection;", "modifier": "private transient", "type": "Collection<V>", "declarator": "valuesCollection", "var_name": "valuesCollection"}, {"original_string": "private transient Collection<Map.Entry<K, V>> entriesCollection;", "modifier": "private transient", "type": "Collection<Map.Entry<K, V>>", "declarator": "entriesCollection", "var_name": "entriesCollection"}], "methods": [{"identifier": "AbstractMultimap", "parameters": "( Map<K, Collection<V>> entries )", "modifiers": "protected", "return": "", "signature": " AbstractMultimap( Map<K, Collection<V>> entries )", "full_signature": "protected  AbstractMultimap( Map<K, Collection<V>> entries )", "class_method_signature": "AbstractMultimap.AbstractMultimap( Map<K, Collection<V>> entries )", "testcase": false, "constructor": true}, {"identifier": "rawData", "parameters": "()", "modifiers": "protected", "return": "Map<K, Collection<V>>", "signature": "Map<K, Collection<V>> rawData()", "full_signature": "protected Map<K, Collection<V>> rawData()", "class_method_signature": "AbstractMultimap.rawData()", "testcase": false, "constructor": false}, {"identifier": "createCollection", "parameters": "()", "modifiers": "protected abstract", "return": "Collection<V>", "signature": "Collection<V> createCollection()", "full_signature": "protected abstract Collection<V> createCollection()", "class_method_signature": "AbstractMultimap.createCollection()", "testcase": false, "constructor": false}, {"identifier": "createUnmodifiableEmptyCollection", "parameters": "()", "modifiers": "protected abstract", "return": "Collection<V>", "signature": "Collection<V> createUnmodifiableEmptyCollection()", "full_signature": "protected abstract Collection<V> createUnmodifiableEmptyCollection()", "class_method_signature": "AbstractMultimap.createUnmodifiableEmptyCollection()", "testcase": false, "constructor": false}, {"identifier": "createUnmodifiable", "parameters": "( Collection<V> original )", "modifiers": "protected", "return": "Collection<V>", "signature": "Collection<V> createUnmodifiable( Collection<V> original )", "full_signature": "protected Collection<V> createUnmodifiable( Collection<V> original )", "class_method_signature": "AbstractMultimap.createUnmodifiable( Collection<V> original )", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "AbstractMultimap.size()", "testcase": false, "constructor": false}, {"identifier": "incrementSize", "parameters": "( int n )", "modifiers": "", "return": "void", "signature": "void incrementSize( int n )", "full_signature": " void incrementSize( int n )", "class_method_signature": "AbstractMultimap.incrementSize( int n )", "testcase": false, "constructor": false}, {"identifier": "decrementSize", "parameters": "( int n )", "modifiers": "", "return": "void", "signature": "void decrementSize( int n )", "full_signature": " void decrementSize( int n )", "class_method_signature": "AbstractMultimap.decrementSize( int n )", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "AbstractMultimap.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "containsKey", "parameters": "( K key )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsKey( K key )", "full_signature": "@Override public boolean containsKey( K key )", "class_method_signature": "AbstractMultimap.containsKey( K key )", "testcase": false, "constructor": false}, {"identifier": "containsValue", "parameters": "( Object value )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsValue( Object value )", "full_signature": "@Override public boolean containsValue( Object value )", "class_method_signature": "AbstractMultimap.containsValue( Object value )", "testcase": false, "constructor": false}, {"identifier": "containsEntry", "parameters": "( Object key,\n                                  Object value )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsEntry( Object key,\n                                  Object value )", "full_signature": "@Override public boolean containsEntry( Object key,\n                                  Object value )", "class_method_signature": "AbstractMultimap.containsEntry( Object key,\n                                  Object value )", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "( K key )", "modifiers": "@Override public", "return": "Collection<V>", "signature": "Collection<V> get( K key )", "full_signature": "@Override public Collection<V> get( K key )", "class_method_signature": "AbstractMultimap.get( K key )", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "( K key,\n                        V value )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean put( K key,\n                        V value )", "full_signature": "@Override public boolean put( K key,\n                        V value )", "class_method_signature": "AbstractMultimap.put( K key,\n                        V value )", "testcase": false, "constructor": false}, {"identifier": "getOrCreateCollection", "parameters": "( K key )", "modifiers": "protected", "return": "Collection<V>", "signature": "Collection<V> getOrCreateCollection( K key )", "full_signature": "protected Collection<V> getOrCreateCollection( K key )", "class_method_signature": "AbstractMultimap.getOrCreateCollection( K key )", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "( K key,\n                           V value )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean remove( K key,\n                           V value )", "full_signature": "@Override public boolean remove( K key,\n                           V value )", "class_method_signature": "AbstractMultimap.remove( K key,\n                           V value )", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "( K key )", "modifiers": "@Override public", "return": "Collection<V>", "signature": "Collection<V> removeAll( K key )", "full_signature": "@Override public Collection<V> removeAll( K key )", "class_method_signature": "AbstractMultimap.removeAll( K key )", "testcase": false, "constructor": false}, {"identifier": "removeAllValuesForKey", "parameters": "( Object key )", "modifiers": "protected", "return": "boolean", "signature": "boolean removeAllValuesForKey( Object key )", "full_signature": "protected boolean removeAllValuesForKey( Object key )", "class_method_signature": "AbstractMultimap.removeAllValuesForKey( Object key )", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AbstractMultimap.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "( Object obj )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals( Object obj )", "full_signature": "@Override public boolean equals( Object obj )", "class_method_signature": "AbstractMultimap.equals( Object obj )", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AbstractMultimap.toString()", "testcase": false, "constructor": false}, {"identifier": "keySet", "parameters": "()", "modifiers": "@Override public", "return": "Set<K>", "signature": "Set<K> keySet()", "full_signature": "@Override public Set<K> keySet()", "class_method_signature": "AbstractMultimap.keySet()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "AbstractMultimap.clear()", "testcase": false, "constructor": false}, {"identifier": "asMap", "parameters": "()", "modifiers": "@Override public", "return": "Map<K, Collection<V>>", "signature": "Map<K, Collection<V>> asMap()", "full_signature": "@Override public Map<K, Collection<V>> asMap()", "class_method_signature": "AbstractMultimap.asMap()", "testcase": false, "constructor": false}, {"identifier": "createEntryIterator", "parameters": "()", "modifiers": "protected", "return": "Iterator<Map.Entry<K, V>>", "signature": "Iterator<Map.Entry<K, V>> createEntryIterator()", "full_signature": "protected Iterator<Map.Entry<K, V>> createEntryIterator()", "class_method_signature": "AbstractMultimap.createEntryIterator()", "testcase": false, "constructor": false}, {"identifier": "wrapCollection", "parameters": "( K key,\n                                            Collection<V> values )", "modifiers": "protected", "return": "Collection<V>", "signature": "Collection<V> wrapCollection( K key,\n                                            Collection<V> values )", "full_signature": "protected Collection<V> wrapCollection( K key,\n                                            Collection<V> values )", "class_method_signature": "AbstractMultimap.wrapCollection( K key,\n                                            Collection<V> values )", "testcase": false, "constructor": false}, {"identifier": "wrapList", "parameters": "( K key,\n                                List<V> values )", "modifiers": "protected", "return": "List<V>", "signature": "List<V> wrapList( K key,\n                                List<V> values )", "full_signature": "protected List<V> wrapList( K key,\n                                List<V> values )", "class_method_signature": "AbstractMultimap.wrapList( K key,\n                                List<V> values )", "testcase": false, "constructor": false}, {"identifier": "wrapMap", "parameters": "( Map<K, Collection<V>> map )", "modifiers": "protected", "return": "Map<K, Collection<V>>", "signature": "Map<K, Collection<V>> wrapMap( Map<K, Collection<V>> map )", "full_signature": "protected Map<K, Collection<V>> wrapMap( Map<K, Collection<V>> map )", "class_method_signature": "AbstractMultimap.wrapMap( Map<K, Collection<V>> map )", "testcase": false, "constructor": false}, {"identifier": "wrapKeySet", "parameters": "()", "modifiers": "protected", "return": "Set<K>", "signature": "Set<K> wrapKeySet()", "full_signature": "protected Set<K> wrapKeySet()", "class_method_signature": "AbstractMultimap.wrapKeySet()", "testcase": false, "constructor": false}, {"identifier": "values", "parameters": "()", "modifiers": "@Override public", "return": "Collection<V>", "signature": "Collection<V> values()", "full_signature": "@Override public Collection<V> values()", "class_method_signature": "AbstractMultimap.values()", "testcase": false, "constructor": false}, {"identifier": "entries", "parameters": "()", "modifiers": "@Override public", "return": "Collection<Entry<K, V>>", "signature": "Collection<Entry<K, V>> entries()", "full_signature": "@Override public Collection<Entry<K, V>> entries()", "class_method_signature": "AbstractMultimap.entries()", "testcase": false, "constructor": false}], "file": "modeshape-common/src/main/java/org/modeshape/common/collection/AbstractMultimap.java"}, "focal_method": {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isEmpty() {\n        return totalSize == 0;\n    }", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "AbstractMultimap.isEmpty()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}