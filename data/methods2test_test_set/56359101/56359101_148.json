{"test_class": {"identifier": "HostResourcesServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private HostResourcesService hostResourcesService;", "modifier": "@InjectMocks\n    private", "type": "HostResourcesService", "declarator": "hostResourcesService", "var_name": "hostResourcesService"}, {"original_string": "@Mock\n    private ServiceOfferingDao serviceOfferingDao;", "modifier": "@Mock\n    private", "type": "ServiceOfferingDao", "declarator": "serviceOfferingDao", "var_name": "serviceOfferingDao"}, {"original_string": "@Mock\n    private ConfigurationDao configurationDao;", "modifier": "@Mock\n    private", "type": "ConfigurationDao", "declarator": "configurationDao", "var_name": "configurationDao"}, {"original_string": "@Mock\n    private VMInstanceDao vmInstanceDao;", "modifier": "@Mock\n    private", "type": "VMInstanceDao", "declarator": "vmInstanceDao", "var_name": "vmInstanceDao"}, {"original_string": "private Random random = new Random();", "modifier": "private", "type": "Random", "declarator": "random = new Random()", "var_name": "random"}, {"original_string": "private HostResourcesTestUtils hostResourcesUtils = new HostResourcesTestUtils();", "modifier": "private", "type": "HostResourcesTestUtils", "declarator": "hostResourcesUtils = new HostResourcesTestUtils()", "var_name": "hostResourcesUtils"}, {"original_string": "private VMInstanceVO vmInstance;", "modifier": "private", "type": "VMInstanceVO", "declarator": "vmInstance", "var_name": "vmInstance"}], "file": "autonomic-algorithms-commons/src/test/java/br/com/autonomiccs/autonomic/algorithms/commons/services/HostResourcesServiceTest.java"}, "test_case": {"identifier": "createAndConfigureHostResourcesTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createAndConfigureHostResourcesTest() {\n        HostVO hostVo = Mockito.mock(HostVO.class);\n        Mockito.when(hostVo.getId()).thenReturn(1l);\n        Mockito.when(hostVo.getName()).thenReturn(\"test\");\n        Mockito.when(hostVo.getSpeed()).thenReturn(2000l);\n        Mockito.when(hostVo.getCpus()).thenReturn(4);\n        Mockito.when(hostVo.getTotalMemory()).thenReturn(8000l);\n\n        HostResources host = hostResourcesService.createAndConfigureHostResources(hostVo);\n\n        Assert.assertEquals(1l, host.getHostId());\n        Assert.assertEquals(\"test\", host.getHostName());\n        Assert.assertEquals(2000l, host.getSpeed());\n        Assert.assertEquals(4, host.getCpus().intValue());\n        Assert.assertEquals(8000l, host.getTotalMemoryInBytes());\n    }", "signature": "void createAndConfigureHostResourcesTest()", "full_signature": "@Test public void createAndConfigureHostResourcesTest()", "class_method_signature": "HostResourcesServiceTest.createAndConfigureHostResourcesTest()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getId", "thenReturn", "when", "getName", "thenReturn", "when", "getSpeed", "thenReturn", "when", "getCpus", "thenReturn", "when", "getTotalMemory", "createAndConfigureHostResources", "assertEquals", "getHostId", "assertEquals", "getHostName", "assertEquals", "getSpeed", "assertEquals", "intValue", "getCpus", "assertEquals", "getTotalMemoryInBytes"]}, "focal_class": {"identifier": "HostResourcesService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static String CPU_OVERPROVISIONING_CONFIGURARTION_NAME = \"cpu.overprovisioning.factor\";", "modifier": "private final static", "type": "String", "declarator": "CPU_OVERPROVISIONING_CONFIGURARTION_NAME = \"cpu.overprovisioning.factor\"", "var_name": "CPU_OVERPROVISIONING_CONFIGURARTION_NAME"}, {"original_string": "private final static String MEMORY_OVERPROVISIONING_CONFIGURARTION_NAME = \"mem.overprovisioning.factor\";", "modifier": "private final static", "type": "String", "declarator": "MEMORY_OVERPROVISIONING_CONFIGURARTION_NAME = \"mem.overprovisioning.factor\"", "var_name": "MEMORY_OVERPROVISIONING_CONFIGURARTION_NAME"}, {"original_string": "@Inject\n    private ServiceOfferingDao serviceOfferingDao;", "modifier": "@Inject\n    private", "type": "ServiceOfferingDao", "declarator": "serviceOfferingDao", "var_name": "serviceOfferingDao"}, {"original_string": "@Inject\n    private ConfigurationDao configurationDao;", "modifier": "@Inject\n    private", "type": "ConfigurationDao", "declarator": "configurationDao", "var_name": "configurationDao"}, {"original_string": "@Inject\n    private VMInstanceDao vmInstanceDao;", "modifier": "@Inject\n    private", "type": "VMInstanceDao", "declarator": "vmInstanceDao", "var_name": "vmInstanceDao"}], "methods": [{"identifier": "createAndConfigureHostResources", "parameters": "(HostVO hostVo)", "modifiers": "public", "return": "HostResources", "signature": "HostResources createAndConfigureHostResources(HostVO hostVo)", "full_signature": "public HostResources createAndConfigureHostResources(HostVO hostVo)", "class_method_signature": "HostResourcesService.createAndConfigureHostResources(HostVO hostVo)", "testcase": false, "constructor": false}, {"identifier": "createHostResources", "parameters": "(HostVO hostVO)", "modifiers": "public", "return": "HostResources", "signature": "HostResources createHostResources(HostVO hostVO)", "full_signature": "public HostResources createHostResources(HostVO hostVO)", "class_method_signature": "HostResourcesService.createHostResources(HostVO hostVO)", "testcase": false, "constructor": false}, {"identifier": "listVmsFromHost", "parameters": "(HostResources host)", "modifiers": "protected", "return": "List<VmResources>", "signature": "List<VmResources> listVmsFromHost(HostResources host)", "full_signature": "protected List<VmResources> listVmsFromHost(HostResources host)", "class_method_signature": "HostResourcesService.listVmsFromHost(HostResources host)", "testcase": false, "constructor": false}, {"identifier": "isVmCurrentlyUsingHostResource", "parameters": "(VMInstanceVO vmInstance)", "modifiers": "protected", "return": "boolean", "signature": "boolean isVmCurrentlyUsingHostResource(VMInstanceVO vmInstance)", "full_signature": "protected boolean isVmCurrentlyUsingHostResource(VMInstanceVO vmInstance)", "class_method_signature": "HostResourcesService.isVmCurrentlyUsingHostResource(VMInstanceVO vmInstance)", "testcase": false, "constructor": false}, {"identifier": "calculateHostResourcesAllocated", "parameters": "(HostResources host)", "modifiers": "protected", "return": "void", "signature": "void calculateHostResourcesAllocated(HostResources host)", "full_signature": "protected void calculateHostResourcesAllocated(HostResources host)", "class_method_signature": "HostResourcesService.calculateHostResourcesAllocated(HostResources host)", "testcase": false, "constructor": false}, {"identifier": "loadHostOverprovisioningFactors", "parameters": "(HostResources host)", "modifiers": "protected", "return": "void", "signature": "void loadHostOverprovisioningFactors(HostResources host)", "full_signature": "protected void loadHostOverprovisioningFactors(HostResources host)", "class_method_signature": "HostResourcesService.loadHostOverprovisioningFactors(HostResources host)", "testcase": false, "constructor": false}], "file": "autonomic-algorithms-commons/src/main/java/br/com/autonomiccs/autonomic/algorithms/commons/services/HostResourcesService.java"}, "focal_method": {"identifier": "createAndConfigureHostResources", "parameters": "(HostVO hostVo)", "modifiers": "public", "return": "HostResources", "body": "public HostResources createAndConfigureHostResources(HostVO hostVo) {\n        HostResources hResources = new HostResources();\n        hResources.setHostId(hostVo.getId());\n        hResources.setHostName(hostVo.getName());\n        hResources.setSpeed(hostVo.getSpeed());\n        hResources.setCpus(hostVo.getCpus());\n        hResources.setTotalMemoryInBytes(hostVo.getTotalMemory());\n        return hResources;\n    }", "signature": "HostResources createAndConfigureHostResources(HostVO hostVo)", "full_signature": "public HostResources createAndConfigureHostResources(HostVO hostVo)", "class_method_signature": "HostResourcesService.createAndConfigureHostResources(HostVO hostVo)", "testcase": false, "constructor": false, "invocations": ["setHostId", "getId", "setHostName", "getName", "setSpeed", "getSpeed", "setCpus", "getCpus", "setTotalMemoryInBytes", "getTotalMemory"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}