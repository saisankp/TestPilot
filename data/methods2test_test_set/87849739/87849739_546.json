{"test_class": {"identifier": "ThingMongoEventAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ThingMongoEventAdapter underTest;", "modifier": "private final", "type": "ThingMongoEventAdapter", "declarator": "underTest", "var_name": "underTest"}], "file": "services/things/persistence/src/test/java/org/eclipse/ditto/services/things/persistence/serializer/ThingMongoEventAdapterTest.java"}, "test_case": {"identifier": "deserializeAttributeModifiedV1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void deserializeAttributeModifiedV1() {\n        final String attributePointer = \"test1\";\n        final JsonValue attributeValue = JsonValue.of(1234);\n\n        final JsonObject eventJson = JsonFactory.newObjectBuilder()\n                .set(\"event\", \"thingAttributeModified\")\n                .set(\"__schemaVersion\", 1)\n                .set(\"payload\", JsonFactory.newObjectBuilder()\n                        .set(\"thingId\", TestConstants.Thing.THING_ID.toString())\n                        .set(\"attributeJsonPointer\", attributePointer)\n                        .set(\"attributeValue\", attributeValue)\n                        .set(\"created\", false)\n                        .build())\n                .build();\n\n        final Object object = toDbObject(eventJson);\n        final Object actual = underTest.fromJournal(object, null).events().head();\n\n        assertThat(actual).isInstanceOf(ThingEvent.class);\n        final ThingEvent event = (ThingEvent) actual;\n        assertThat((CharSequence) event.getThingEntityId()).isEqualTo(TestConstants.Thing.THING_ID);\n        assertThat(event.getName()).isEqualTo(AttributeModified.NAME);\n        assertThat(event.getType()).isEqualTo(AttributeModified.TYPE);\n        assertThat(event).isInstanceOf(AttributeModified.class);\n        final AttributeModified attributeModified = (AttributeModified) event;\n        assertThat((CharSequence) attributeModified.getThingEntityId()).isEqualTo(TestConstants.Thing.THING_ID);\n        assertThat(attributeModified.getAttributePointer()).isEqualTo(JsonPointer.of(attributePointer));\n        assertThat(attributeModified.getAttributeValue()).isEqualTo(attributeValue);\n    }", "signature": "void deserializeAttributeModifiedV1()", "full_signature": "@Test public void deserializeAttributeModifiedV1()", "class_method_signature": "ThingMongoEventAdapterTest.deserializeAttributeModifiedV1()", "testcase": true, "constructor": false, "invocations": ["of", "build", "set", "set", "set", "newObjectBuilder", "build", "set", "set", "set", "set", "newObjectBuilder", "toString", "toDbObject", "head", "events", "fromJournal", "isInstanceOf", "assertThat", "isEqualTo", "assertThat", "getThingEntityId", "isEqualTo", "assertThat", "getName", "isEqualTo", "assertThat", "getType", "isInstanceOf", "assertThat", "isEqualTo", "assertThat", "getThingEntityId", "isEqualTo", "assertThat", "getAttributePointer", "of", "isEqualTo", "assertThat", "getAttributeValue"]}, "focal_class": {"identifier": "ThingMongoEventAdapter", "superclass": "", "interfaces": "implements EventAdapter", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ThingMongoEventAdapter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ThingMongoEventAdapter.class)", "var_name": "LOGGER"}, {"original_string": "private static final String THING_ACL_MODIFIED = \"thingAclModified\";", "modifier": "private static final", "type": "String", "declarator": "THING_ACL_MODIFIED = \"thingAclModified\"", "var_name": "THING_ACL_MODIFIED"}, {"original_string": "private static final String THING_ACL_ENTRY_DELETED = \"thingAclEntryDeleted\";", "modifier": "private static final", "type": "String", "declarator": "THING_ACL_ENTRY_DELETED = \"thingAclEntryDeleted\"", "var_name": "THING_ACL_ENTRY_DELETED"}, {"original_string": "private static final String THING_ACL_ENTRY_MODIFIED = \"thingAclEntryModified\";", "modifier": "private static final", "type": "String", "declarator": "THING_ACL_ENTRY_MODIFIED = \"thingAclEntryModified\"", "var_name": "THING_ACL_ENTRY_MODIFIED"}, {"original_string": "private static final String THING_ATTRIBUTES_DELETED = \"thingAttributesDeleted\";", "modifier": "private static final", "type": "String", "declarator": "THING_ATTRIBUTES_DELETED = \"thingAttributesDeleted\"", "var_name": "THING_ATTRIBUTES_DELETED"}, {"original_string": "private static final String THING_ATTRIBUTES_MODIFIED = \"thingAttributesModified\";", "modifier": "private static final", "type": "String", "declarator": "THING_ATTRIBUTES_MODIFIED = \"thingAttributesModified\"", "var_name": "THING_ATTRIBUTES_MODIFIED"}, {"original_string": "private static final String THING_ATTRIBUTE_MODIFIED = \"thingAttributeModified\";", "modifier": "private static final", "type": "String", "declarator": "THING_ATTRIBUTE_MODIFIED = \"thingAttributeModified\"", "var_name": "THING_ATTRIBUTE_MODIFIED"}, {"original_string": "private static final String THING_ATTRIBUTE_DELETED = \"thingAttributeDeleted\";", "modifier": "private static final", "type": "String", "declarator": "THING_ATTRIBUTE_DELETED = \"thingAttributeDeleted\"", "var_name": "THING_ATTRIBUTE_DELETED"}, {"original_string": "private static final String ATTRIBUTE = \"attribute\";", "modifier": "private static final", "type": "String", "declarator": "ATTRIBUTE = \"attribute\"", "var_name": "ATTRIBUTE"}, {"original_string": "private static final String PROPERTY = \"property\";", "modifier": "private static final", "type": "String", "declarator": "PROPERTY = \"property\"", "var_name": "PROPERTY"}, {"original_string": "private static final Predicate<JsonField> IS_REVISION = field -> field.getDefinition()\n            .map(definition -> Objects.equals(definition, Event.JsonFields.REVISION))\n            .orElse(false);", "modifier": "private static final", "type": "Predicate<JsonField>", "declarator": "IS_REVISION = field -> field.getDefinition()\n            .map(definition -> Objects.equals(definition, Event.JsonFields.REVISION))\n            .orElse(false)", "var_name": "IS_REVISION"}, {"original_string": "private static final JsonPointer POLICY_IN_THING_EVENT_PAYLOAD = ThingEvent.JsonFields.THING.getPointer()\n            .append(JsonPointer.of(Policy.INLINED_FIELD_NAME));", "modifier": "private static final", "type": "JsonPointer", "declarator": "POLICY_IN_THING_EVENT_PAYLOAD = ThingEvent.JsonFields.THING.getPointer()\n            .append(JsonPointer.of(Policy.INLINED_FIELD_NAME))", "var_name": "POLICY_IN_THING_EVENT_PAYLOAD"}, {"original_string": "private static final JsonFieldDefinition<JsonObject> PAYLOAD =\n            JsonFactory.newJsonObjectFieldDefinition(\"payload\", FieldType.REGULAR, JsonSchemaVersion.V_1,\n                    JsonSchemaVersion.V_2);", "modifier": "private static final", "type": "JsonFieldDefinition<JsonObject>", "declarator": "PAYLOAD =\n            JsonFactory.newJsonObjectFieldDefinition(\"payload\", FieldType.REGULAR, JsonSchemaVersion.V_1,\n                    JsonSchemaVersion.V_2)", "var_name": "PAYLOAD"}, {"original_string": "private final Map<String, Function<JsonObject, JsonObject>> migrationMappings;", "modifier": "private final", "type": "Map<String, Function<JsonObject, JsonObject>>", "declarator": "migrationMappings", "var_name": "migrationMappings"}, {"original_string": "private final ExtendedActorSystem system;", "modifier": "private final", "type": "ExtendedActorSystem", "declarator": "system", "var_name": "system"}, {"original_string": "private final GlobalEventRegistry eventRegistry;", "modifier": "private final", "type": "GlobalEventRegistry", "declarator": "eventRegistry", "var_name": "eventRegistry"}], "methods": [{"identifier": "ThingMongoEventAdapter", "parameters": "(@Nullable final ExtendedActorSystem system)", "modifiers": "public", "return": "", "signature": " ThingMongoEventAdapter(@Nullable final ExtendedActorSystem system)", "full_signature": "public  ThingMongoEventAdapter(@Nullable final ExtendedActorSystem system)", "class_method_signature": "ThingMongoEventAdapter.ThingMongoEventAdapter(@Nullable final ExtendedActorSystem system)", "testcase": false, "constructor": true}, {"identifier": "manifest", "parameters": "(final Object event)", "modifiers": "@Override public", "return": "String", "signature": "String manifest(final Object event)", "full_signature": "@Override public String manifest(final Object event)", "class_method_signature": "ThingMongoEventAdapter.manifest(final Object event)", "testcase": false, "constructor": false}, {"identifier": "toJournal", "parameters": "(final Object event)", "modifiers": "@Override public", "return": "Object", "signature": "Object toJournal(final Object event)", "full_signature": "@Override public Object toJournal(final Object event)", "class_method_signature": "ThingMongoEventAdapter.toJournal(final Object event)", "testcase": false, "constructor": false}, {"identifier": "fromJournal", "parameters": "(final Object event, final String manifest)", "modifiers": "@Override public", "return": "EventSeq", "signature": "EventSeq fromJournal(final Object event, final String manifest)", "full_signature": "@Override public EventSeq fromJournal(final Object event, final String manifest)", "class_method_signature": "ThingMongoEventAdapter.fromJournal(final Object event, final String manifest)", "testcase": false, "constructor": false}, {"identifier": "tryToCreateEventFrom", "parameters": "(final JsonValue json)", "modifiers": "@Nullable private", "return": "Event", "signature": "Event tryToCreateEventFrom(final JsonValue json)", "full_signature": "@Nullable private Event tryToCreateEventFrom(final JsonValue json)", "class_method_signature": "ThingMongoEventAdapter.tryToCreateEventFrom(final JsonValue json)", "testcase": false, "constructor": false}, {"identifier": "createEventFrom", "parameters": "(final JsonValue json)", "modifiers": "private", "return": "Event", "signature": "Event createEventFrom(final JsonValue json)", "full_signature": "private Event createEventFrom(final JsonValue json)", "class_method_signature": "ThingMongoEventAdapter.createEventFrom(final JsonValue json)", "testcase": false, "constructor": false}, {"identifier": "migratePayload", "parameters": "(final JsonObject jsonObject)", "modifiers": "private", "return": "JsonObject", "signature": "JsonObject migratePayload(final JsonObject jsonObject)", "full_signature": "private JsonObject migratePayload(final JsonObject jsonObject)", "class_method_signature": "ThingMongoEventAdapter.migratePayload(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "migrateId", "parameters": "(final JsonObject jsonObject)", "modifiers": "@SuppressWarnings(\"squid:CallToDeprecatedMethod\") private static", "return": "JsonObject", "signature": "JsonObject migrateId(final JsonObject jsonObject)", "full_signature": "@SuppressWarnings(\"squid:CallToDeprecatedMethod\") private static JsonObject migrateId(final JsonObject jsonObject)", "class_method_signature": "ThingMongoEventAdapter.migrateId(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "migrateComplex", "parameters": "(final JsonObject jsonObject)", "modifiers": "@SuppressWarnings(\"squid:CallToDeprecatedMethod\") private", "return": "JsonObject", "signature": "JsonObject migrateComplex(final JsonObject jsonObject)", "full_signature": "@SuppressWarnings(\"squid:CallToDeprecatedMethod\") private JsonObject migrateComplex(final JsonObject jsonObject)", "class_method_signature": "ThingMongoEventAdapter.migrateComplex(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "migrateModifiedToCreated", "parameters": "(final JsonObject jsonObject, final String createdType)", "modifiers": "private static", "return": "JsonObject", "signature": "JsonObject migrateModifiedToCreated(final JsonObject jsonObject, final String createdType)", "full_signature": "private static JsonObject migrateModifiedToCreated(final JsonObject jsonObject, final String createdType)", "class_method_signature": "ThingMongoEventAdapter.migrateModifiedToCreated(final JsonObject jsonObject, final String createdType)", "testcase": false, "constructor": false}, {"identifier": "renameField", "parameters": "(final CharSequence oldFieldName, final CharSequence newFieldName,\n            final JsonObject jsonObject)", "modifiers": "private static", "return": "JsonObject", "signature": "JsonObject renameField(final CharSequence oldFieldName, final CharSequence newFieldName,\n            final JsonObject jsonObject)", "full_signature": "private static JsonObject renameField(final CharSequence oldFieldName, final CharSequence newFieldName,\n            final JsonObject jsonObject)", "class_method_signature": "ThingMongoEventAdapter.renameField(final CharSequence oldFieldName, final CharSequence newFieldName,\n            final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "renameJsonPointer", "parameters": "(final String fieldName, final JsonObject jsonObject)", "modifiers": "private static", "return": "JsonObject", "signature": "JsonObject renameJsonPointer(final String fieldName, final JsonObject jsonObject)", "full_signature": "private static JsonObject renameJsonPointer(final String fieldName, final JsonObject jsonObject)", "class_method_signature": "ThingMongoEventAdapter.renameJsonPointer(final String fieldName, final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "renameValue", "parameters": "(final String fieldName, final JsonObject jsonObject)", "modifiers": "private static", "return": "JsonObject", "signature": "JsonObject renameValue(final String fieldName, final JsonObject jsonObject)", "full_signature": "private static JsonObject renameValue(final String fieldName, final JsonObject jsonObject)", "class_method_signature": "ThingMongoEventAdapter.renameValue(final String fieldName, final JsonObject jsonObject)", "testcase": false, "constructor": false}], "file": "services/things/persistence/src/main/java/org/eclipse/ditto/services/things/persistence/serializer/ThingMongoEventAdapter.java"}, "focal_method": {"identifier": "fromJournal", "parameters": "(final Object event, final String manifest)", "modifiers": "@Override public", "return": "EventSeq", "body": "@Override\n    public EventSeq fromJournal(final Object event, final String manifest) {\n        if (event instanceof BsonValue) {\n            return EventSeq.single(tryToCreateEventFrom(DittoBsonJson.getInstance().serialize((BsonValue) event)));\n        } else {\n            throw new IllegalArgumentException(\n                    \"Unable to fromJournal a non-'BsonValue' object! Was: \" + event.getClass());\n        }\n    }", "signature": "EventSeq fromJournal(final Object event, final String manifest)", "full_signature": "@Override public EventSeq fromJournal(final Object event, final String manifest)", "class_method_signature": "ThingMongoEventAdapter.fromJournal(final Object event, final String manifest)", "testcase": false, "constructor": false, "invocations": ["single", "tryToCreateEventFrom", "serialize", "getInstance", "getClass"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}