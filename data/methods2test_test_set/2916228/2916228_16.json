{"test_class": {"identifier": "IndexTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Repository repository;", "modifier": "private", "type": "Repository", "declarator": "repository", "var_name": "repository"}], "file": "propoid-db/src/test/java/propoid/db/operation/IndexTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test() throws Exception {\n\n\t\tFoo foo = new Foo();\n\t\trepository.index(foo, true, Order.ascending(foo.intP),\n\t\t\t\tOrder.ascending(foo.longP));\n\n\t\trepository.index(foo, false, Order.descending(foo.intP),\n\t\t\t\tOrder.descending(foo.longP));\n\t}", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "IndexTest.test()", "testcase": true, "constructor": false, "invocations": ["index", "ascending", "ascending", "index", "descending", "descending"]}, "focal_class": {"identifier": "Index", "superclass": "extends Operation", "interfaces": "", "fields": [], "methods": [{"identifier": "Index", "parameters": "(Repository repository)", "modifiers": "public", "return": "", "signature": " Index(Repository repository)", "full_signature": "public  Index(Repository repository)", "class_method_signature": "Index.Index(Repository repository)", "testcase": false, "constructor": true}, {"identifier": "now", "parameters": "(Propoid propoid, boolean unique, Order... ordering)", "modifiers": "public", "return": "void", "signature": "void now(Propoid propoid, boolean unique, Order... ordering)", "full_signature": "public void now(Propoid propoid, boolean unique, Order... ordering)", "class_method_signature": "Index.now(Propoid propoid, boolean unique, Order... ordering)", "testcase": false, "constructor": false}, {"identifier": "name", "parameters": "(Order[] ordering)", "modifiers": "private", "return": "String", "signature": "String name(Order[] ordering)", "full_signature": "private String name(Order[] ordering)", "class_method_signature": "Index.name(Order[] ordering)", "testcase": false, "constructor": false}, {"identifier": "existing", "parameters": "(String name)", "modifiers": "private", "return": "String", "signature": "String existing(String name)", "full_signature": "private String existing(String name)", "class_method_signature": "Index.existing(String name)", "testcase": false, "constructor": false}, {"identifier": "drop", "parameters": "(String name)", "modifiers": "private", "return": "void", "signature": "void drop(String name)", "full_signature": "private void drop(String name)", "class_method_signature": "Index.drop(String name)", "testcase": false, "constructor": false}], "file": "propoid-db/src/main/java/propoid/db/operation/Index.java"}, "focal_method": {"identifier": "Index", "parameters": "(Repository repository)", "modifiers": "public", "return": "", "body": "public Index(Repository repository) {\n\t\tsuper(repository);\n\t}", "signature": " Index(Repository repository)", "full_signature": "public  Index(Repository repository)", "class_method_signature": "Index.Index(Repository repository)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 2916228, "url": "https://github.com/svenmeier/propoid", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 7, "size": 475, "license": "licensed"}}