{"test_class": {"identifier": "BlockingArtistAnalyzerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final com.insightfullogic.java8.answers.chapter9.BlockingArtistAnalyzer analyser = new BlockingArtistAnalyzer(new FakeLookupService()::lookupArtistName);", "modifier": "private final", "type": "com.insightfullogic.java8.answers.chapter9.BlockingArtistAnalyzer", "declarator": "analyser = new BlockingArtistAnalyzer(new FakeLookupService()::lookupArtistName)", "var_name": "analyser"}], "file": "concurrency/src/test/java/com/insightfullogic/java8/answers/chapter9/BlockingArtistAnalyzerTest.java"}, "test_case": {"identifier": "largerGroupsAreLarger", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void largerGroupsAreLarger() {\n        assertTrue(analyser.isLargerGroup(\"The Beatles\", \"John Coltrane\"));\n    }", "signature": "void largerGroupsAreLarger()", "full_signature": "@Test public void largerGroupsAreLarger()", "class_method_signature": "BlockingArtistAnalyzerTest.largerGroupsAreLarger()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isLargerGroup"]}, "focal_class": {"identifier": "BlockingArtistAnalyzer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Function<String, Artist> artistLookupService;", "modifier": "private final", "type": "Function<String, Artist>", "declarator": "artistLookupService", "var_name": "artistLookupService"}], "methods": [{"identifier": "BlockingArtistAnalyzer", "parameters": "(Function<String, Artist> artistLookupService)", "modifiers": "public", "return": "", "signature": " BlockingArtistAnalyzer(Function<String, Artist> artistLookupService)", "full_signature": "public  BlockingArtistAnalyzer(Function<String, Artist> artistLookupService)", "class_method_signature": "BlockingArtistAnalyzer.BlockingArtistAnalyzer(Function<String, Artist> artistLookupService)", "testcase": false, "constructor": true}, {"identifier": "isLargerGroup", "parameters": "(String artistName, String otherArtistName)", "modifiers": "public", "return": "boolean", "signature": "boolean isLargerGroup(String artistName, String otherArtistName)", "full_signature": "public boolean isLargerGroup(String artistName, String otherArtistName)", "class_method_signature": "BlockingArtistAnalyzer.isLargerGroup(String artistName, String otherArtistName)", "testcase": false, "constructor": false}, {"identifier": "getNumberOfMembers", "parameters": "(String artistName)", "modifiers": "private", "return": "long", "signature": "long getNumberOfMembers(String artistName)", "full_signature": "private long getNumberOfMembers(String artistName)", "class_method_signature": "BlockingArtistAnalyzer.getNumberOfMembers(String artistName)", "testcase": false, "constructor": false}], "file": "concurrency/src/main/java/com/insightfullogic/java8/answers/chapter9/BlockingArtistAnalyzer.java"}, "focal_method": {"identifier": "isLargerGroup", "parameters": "(String artistName, String otherArtistName)", "modifiers": "public", "return": "boolean", "body": "public boolean isLargerGroup(String artistName, String otherArtistName) {\n        return getNumberOfMembers(artistName) > getNumberOfMembers(otherArtistName);\n    }", "signature": "boolean isLargerGroup(String artistName, String otherArtistName)", "full_signature": "public boolean isLargerGroup(String artistName, String otherArtistName)", "class_method_signature": "BlockingArtistAnalyzer.isLargerGroup(String artistName, String otherArtistName)", "testcase": false, "constructor": false, "invocations": ["getNumberOfMembers", "getNumberOfMembers"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}