{"test_class": {"identifier": "PlanHintsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PlanHints hints;", "modifier": "private", "type": "PlanHints", "declarator": "hints", "var_name": "hints"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/query/plan/PlanHintsTest.java"}, "test_case": {"identifier": "shouldProduceToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldProduceToString() {\n        this.hints.toString();\n    }", "signature": "void shouldProduceToString()", "full_signature": "@Test public void shouldProduceToString()", "class_method_signature": "PlanHintsTest.shouldProduceToString()", "testcase": true, "constructor": false, "invocations": ["toString"]}, "focal_class": {"identifier": "PlanHints", "superclass": "", "interfaces": "implements Serializable, Cloneable", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "public boolean hasCriteria = false;", "modifier": "public", "type": "boolean", "declarator": "hasCriteria = false", "var_name": "hasCriteria"}, {"original_string": "public boolean hasJoin = false;", "modifier": "public", "type": "boolean", "declarator": "hasJoin = false", "var_name": "hasJoin"}, {"original_string": "public boolean hasSort = false;", "modifier": "public", "type": "boolean", "declarator": "hasSort = false", "var_name": "hasSort"}, {"original_string": "public boolean hasSetQuery = false;", "modifier": "public", "type": "boolean", "declarator": "hasSetQuery = false", "var_name": "hasSetQuery"}, {"original_string": "public boolean hasLimit = false;", "modifier": "public", "type": "boolean", "declarator": "hasLimit = false", "var_name": "hasLimit"}, {"original_string": "public boolean isExistsQuery = false;", "modifier": "public", "type": "boolean", "declarator": "isExistsQuery = false", "var_name": "isExistsQuery"}, {"original_string": "public boolean hasOptionalJoin = false;", "modifier": "public", "type": "boolean", "declarator": "hasOptionalJoin = false", "var_name": "hasOptionalJoin"}, {"original_string": "public boolean hasFullTextSearch = false;", "modifier": "public", "type": "boolean", "declarator": "hasFullTextSearch = false", "var_name": "hasFullTextSearch"}, {"original_string": "public boolean hasSubqueries = false;", "modifier": "public", "type": "boolean", "declarator": "hasSubqueries = false", "var_name": "hasSubqueries"}, {"original_string": "public boolean hasView = false;", "modifier": "public", "type": "boolean", "declarator": "hasView = false", "var_name": "hasView"}, {"original_string": "public boolean showPlan = false;", "modifier": "public", "type": "boolean", "declarator": "showPlan = false", "var_name": "showPlan"}, {"original_string": "public boolean planOnly = false;", "modifier": "public", "type": "boolean", "declarator": "planOnly = false", "var_name": "planOnly"}, {"original_string": "public boolean validateColumnExistance = true;", "modifier": "public", "type": "boolean", "declarator": "validateColumnExistance = true", "var_name": "validateColumnExistance"}, {"original_string": "public boolean includeSystemContent = true;", "modifier": "public", "type": "boolean", "declarator": "includeSystemContent = true", "var_name": "includeSystemContent"}, {"original_string": "public boolean useSessionContent = true;", "modifier": "public", "type": "boolean", "declarator": "useSessionContent = true", "var_name": "useSessionContent"}, {"original_string": "public boolean qualifyExpandedColumnNames = false;", "modifier": "public", "type": "boolean", "declarator": "qualifyExpandedColumnNames = false", "var_name": "qualifyExpandedColumnNames"}, {"original_string": "public boolean restartable = true;", "modifier": "public", "type": "boolean", "declarator": "restartable = true", "var_name": "restartable"}, {"original_string": "public int rowsKeptInMemory = 200;", "modifier": "public", "type": "int", "declarator": "rowsKeptInMemory = 200", "var_name": "rowsKeptInMemory"}], "methods": [{"identifier": "PlanHints", "parameters": "()", "modifiers": "public", "return": "", "signature": " PlanHints()", "full_signature": "public  PlanHints()", "class_method_signature": "PlanHints.PlanHints()", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PlanHints.toString()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "PlanHints", "signature": "PlanHints clone()", "full_signature": "@Override public PlanHints clone()", "class_method_signature": "PlanHints.clone()", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/query/plan/PlanHints.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        StringBuilder sb = new StringBuilder(\"PlanHints {\");\n        sb.append(\" hasCriteria=\").append(hasCriteria);\n        sb.append(\", hasView=\").append(hasView);\n        sb.append(\", hasJoin=\").append(hasJoin);\n        sb.append(\", hasSort=\").append(hasSort);\n        sb.append(\", hasSetQuery=\").append(hasSetQuery);\n        sb.append(\", hasLimit=\").append(hasLimit);\n        sb.append(\", hasOptionalJoin=\").append(hasOptionalJoin);\n        sb.append(\", hasFullTextSearch=\").append(hasFullTextSearch);\n        sb.append(\", hasSubqueries=\").append(hasSubqueries);\n        sb.append(\", isExistsQuery=\").append(isExistsQuery);\n        sb.append(\", showPlan=\").append(showPlan);\n        sb.append(\", planOnly=\").append(planOnly);\n        sb.append(\", validateColumnExistance=\").append(validateColumnExistance);\n        sb.append(\", includeSystemContent=\").append(includeSystemContent);\n        sb.append(\", useSessionContent=\").append(useSessionContent);\n        sb.append(\", restartable=\").append(restartable);\n        sb.append(\", rowsKeptInMemory=\").append(rowsKeptInMemory);\n        sb.append('}');\n        return sb.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PlanHints.toString()", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "toString"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}