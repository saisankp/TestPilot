{"test_class": {"identifier": "PunctuationCheckTest", "superclass": "extends AbstractReviewTest", "interfaces": "", "fields": [], "file": "org.jabylon.review.standard/src/test/java/org/jabylon/review/standard/internal/PunctuationCheckTest.java"}, "test_case": {"identifier": "testReview", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReview() {\n        Property templ = createProperty(\"\", \"test {\\\"}\");\n        Property trans = createProperty(\"\", \"{\\\" test\");\n        assertNotNull(getFixture().review(null, templ, trans));\n    }", "signature": "void testReview()", "full_signature": "@Test public void testReview()", "class_method_signature": "PunctuationCheckTest.testReview()", "testcase": true, "constructor": false, "invocations": ["createProperty", "createProperty", "assertNotNull", "review", "getFixture"]}, "focal_class": {"identifier": "PunctuationCheck", "superclass": "", "interfaces": "implements ReviewParticipant", "fields": [{"original_string": "private static char[] hotchars = {'(',')','[',']','{','}','\\'','\"'};", "modifier": "private static", "type": "char[]", "declarator": "hotchars = {'(',')','[',']','{','}','\\'','\"'}", "var_name": "hotchars"}], "methods": [{"identifier": "review", "parameters": "(PropertyFileDescriptor descriptor, Property master, Property slave)", "modifiers": "@Override public", "return": "Review", "signature": "Review review(PropertyFileDescriptor descriptor, Property master, Property slave)", "full_signature": "@Override public Review review(PropertyFileDescriptor descriptor, Property master, Property slave)", "class_method_signature": "PunctuationCheck.review(PropertyFileDescriptor descriptor, Property master, Property slave)", "testcase": false, "constructor": false}, {"identifier": "getReviewType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getReviewType()", "full_signature": "@Override public String getReviewType()", "class_method_signature": "PunctuationCheck.getReviewType()", "testcase": false, "constructor": false}, {"identifier": "countHotChars", "parameters": "(String value, short[] templateOccurrences)", "modifiers": "private", "return": "void", "signature": "void countHotChars(String value, short[] templateOccurrences)", "full_signature": "private void countHotChars(String value, short[] templateOccurrences)", "class_method_signature": "PunctuationCheck.countHotChars(String value, short[] templateOccurrences)", "testcase": false, "constructor": false}, {"identifier": "subtractHotChars", "parameters": "(String value, short[] templateOccurrences)", "modifiers": "private", "return": "void", "signature": "void subtractHotChars(String value, short[] templateOccurrences)", "full_signature": "private void subtractHotChars(String value, short[] templateOccurrences)", "class_method_signature": "PunctuationCheck.subtractHotChars(String value, short[] templateOccurrences)", "testcase": false, "constructor": false}, {"identifier": "getID", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getID()", "full_signature": "@Override public String getID()", "class_method_signature": "PunctuationCheck.getID()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDescription()", "full_signature": "@Override public String getDescription()", "class_method_signature": "PunctuationCheck.getDescription()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "PunctuationCheck.getName()", "testcase": false, "constructor": false}], "file": "org.jabylon.review.standard/src/main/java/org/jabylon/review/standard/internal/PunctuationCheck.java"}, "focal_method": {"identifier": "review", "parameters": "(PropertyFileDescriptor descriptor, Property master, Property slave)", "modifiers": "@Override public", "return": "Review", "body": "@Override\n    public Review review(PropertyFileDescriptor descriptor, Property master, Property slave) {\n        if(master==null||slave==null||slave.getValue()==null||slave.getValue().isEmpty())\n            return null;\n\n        short[] templateOccurrences = new short[hotchars.length];\n        String value = master.getValue();\n        String translation = slave.getValue();\n        countHotChars(value,templateOccurrences);\n        subtractHotChars(translation,templateOccurrences);\n        for(int i = 0;i<hotchars.length;i++)\n        {\n            int occ = templateOccurrences[i];\n            if(occ!=0)\n            {\n                Review review = PropertiesFactory.eINSTANCE.createReview();\n                review.setCreated(System.currentTimeMillis());\n                String message;\n                if(occ<0)\n                    message = \"Translation contains more ''{0}'' characters than the template.\";\n                else\n                    message = \"Translation contains less ''{0}'' characters than the template.\";\n                message = MessageFormat.format(message, hotchars[i]);\n                review.setMessage(message);\n\t\t\t\treview.setReviewType(getReviewType());\n                review.setSeverity(Severity.WARNING);\n                review.setUser(\"Jabylon\");\n                return review;\n            }\n        }\n        return null;\n\n\n    }", "signature": "Review review(PropertyFileDescriptor descriptor, Property master, Property slave)", "full_signature": "@Override public Review review(PropertyFileDescriptor descriptor, Property master, Property slave)", "class_method_signature": "PunctuationCheck.review(PropertyFileDescriptor descriptor, Property master, Property slave)", "testcase": false, "constructor": false, "invocations": ["getValue", "isEmpty", "getValue", "getValue", "getValue", "countHotChars", "subtractHotChars", "createReview", "setCreated", "currentTimeMillis", "format", "setMessage", "setReviewType", "getReviewType", "setSeverity", "setUser"]}, "repository": {"repo_id": 3986627, "url": "https://github.com/jutzig/jabylon", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 51, "size": 13400, "license": "licensed"}}