{"test_class": {"identifier": "MoveZerosInArrayTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MoveZerosInArray moveZeros;", "modifier": "private", "type": "MoveZerosInArray", "declarator": "moveZeros", "var_name": "moveZeros"}], "file": "algs/src/test/java/com/github/pedrovgs/problem12/MoveZerosInArrayTest.java"}, "test_case": {"identifier": "shouldNotAcceptNullArraysSorting", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class) public void shouldNotAcceptNullArraysSorting() {\n    moveZeros.moveSorting(null);\n  }", "signature": "void shouldNotAcceptNullArraysSorting()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void shouldNotAcceptNullArraysSorting()", "class_method_signature": "MoveZerosInArrayTest.shouldNotAcceptNullArraysSorting()", "testcase": true, "constructor": false, "invocations": ["moveSorting"]}, "focal_class": {"identifier": "MoveZerosInArray", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "moveSorting", "parameters": "(int[] array)", "modifiers": "public", "return": "void", "signature": "void moveSorting(int[] array)", "full_signature": "public void moveSorting(int[] array)", "class_method_signature": "MoveZerosInArray.moveSorting(int[] array)", "testcase": false, "constructor": false}, {"identifier": "moveUsingTwoPointers", "parameters": "(int[] array)", "modifiers": "public", "return": "void", "signature": "void moveUsingTwoPointers(int[] array)", "full_signature": "public void moveUsingTwoPointers(int[] array)", "class_method_signature": "MoveZerosInArray.moveUsingTwoPointers(int[] array)", "testcase": false, "constructor": false}, {"identifier": "validateArray", "parameters": "(int[] array)", "modifiers": "private", "return": "void", "signature": "void validateArray(int[] array)", "full_signature": "private void validateArray(int[] array)", "class_method_signature": "MoveZerosInArray.validateArray(int[] array)", "testcase": false, "constructor": false}, {"identifier": "swap", "parameters": "(int[] array, int a, int b)", "modifiers": "private", "return": "void", "signature": "void swap(int[] array, int a, int b)", "full_signature": "private void swap(int[] array, int a, int b)", "class_method_signature": "MoveZerosInArray.swap(int[] array, int a, int b)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem12/MoveZerosInArray.java"}, "focal_method": {"identifier": "moveSorting", "parameters": "(int[] array)", "modifiers": "public", "return": "void", "body": "public void moveSorting(int[] array) {\n    validateArray(array);\n\n    boolean swap = true;\n    while (swap) {\n      swap = false;\n      for (int i = 0; i < array.length - 1; i++) {\n        if ((array[i] < array[i + 1] && array[i + 1] > 0)) {\n          swap(array, i, i + 1);\n          swap = true;\n        }\n      }\n    }\n  }", "signature": "void moveSorting(int[] array)", "full_signature": "public void moveSorting(int[] array)", "class_method_signature": "MoveZerosInArray.moveSorting(int[] array)", "testcase": false, "constructor": false, "invocations": ["validateArray", "swap"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}