{"test_class": {"identifier": "NamespaceAwareXmlDocumentBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private NamespaceAwareXmlDocumentBuilder underTest;", "modifier": "@InjectMocks\n    private", "type": "NamespaceAwareXmlDocumentBuilder", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "@Mock\n    private DocumentBuilderFactoryWrapper documentBuilderFactoryBuilder;", "modifier": "@Mock\n    private", "type": "DocumentBuilderFactoryWrapper", "declarator": "documentBuilderFactoryBuilder", "var_name": "documentBuilderFactoryBuilder"}, {"original_string": "@Mock\n    private DocumentBuilderFactory documentBuilderFactory;", "modifier": "@Mock\n    private", "type": "DocumentBuilderFactory", "declarator": "documentBuilderFactory", "var_name": "documentBuilderFactory"}, {"original_string": "@Mock\n    private InputStream inputStream;", "modifier": "@Mock\n    private", "type": "InputStream", "declarator": "inputStream", "var_name": "inputStream"}, {"original_string": "@Mock\n    private DocumentBuilder documentBuilder;", "modifier": "@Mock\n    private", "type": "DocumentBuilder", "declarator": "documentBuilder", "var_name": "documentBuilder"}, {"original_string": "@Mock(answer = Answers.RETURNS_DEEP_STUBS)\n    private Document document;", "modifier": "@Mock(answer = Answers.RETURNS_DEEP_STUBS)\n    private", "type": "Document", "declarator": "document", "var_name": "document"}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/test/java/com/epam/wilma/stubconfig/dom/builder/NamespaceAwareXmlDocumentBuilderTest.java"}, "test_case": {"identifier": "testBuildDocumentShouldParseInputStreamToDocument", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n    public final void testBuildDocumentShouldParseInputStreamToDocument() throws Exception {\n        //GIVEN\n        given(documentBuilderFactoryBuilder.buildDocumentBuilderFactory()).willReturn(documentBuilderFactory);\n        given(documentBuilderFactory.newDocumentBuilder()).willReturn(documentBuilder);\n        given(documentBuilder.parse(inputStream)).willReturn(document);\n        //WHEN\n        Document actual = underTest.buildDocument(inputStream, null);\n        //THEN\n        verify(documentBuilderFactory).setNamespaceAware(true);\n        verify(documentBuilder).parse(inputStream);\n        assertEquals(actual, document);\n    }", "signature": "void testBuildDocumentShouldParseInputStreamToDocument()", "full_signature": "@Test public final void testBuildDocumentShouldParseInputStreamToDocument()", "class_method_signature": "NamespaceAwareXmlDocumentBuilderTest.testBuildDocumentShouldParseInputStreamToDocument()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "buildDocumentBuilderFactory", "willReturn", "given", "newDocumentBuilder", "willReturn", "given", "parse", "buildDocument", "setNamespaceAware", "verify", "parse", "verify", "assertEquals"]}, "focal_class": {"identifier": "NamespaceAwareXmlDocumentBuilder", "superclass": "", "interfaces": "implements XmlDocumentBuilder", "fields": [{"original_string": "@Autowired\n    private DocumentBuilderFactoryWrapper documentBuilderFactoryBuilder;", "modifier": "@Autowired\n    private", "type": "DocumentBuilderFactoryWrapper", "declarator": "documentBuilderFactoryBuilder", "var_name": "documentBuilderFactoryBuilder"}], "methods": [{"identifier": "buildDocument", "parameters": "(final InputStream inputStream, final Schema schema)", "modifiers": "@Override public", "return": "Document", "signature": "Document buildDocument(final InputStream inputStream, final Schema schema)", "full_signature": "@Override public Document buildDocument(final InputStream inputStream, final Schema schema)", "class_method_signature": "NamespaceAwareXmlDocumentBuilder.buildDocument(final InputStream inputStream, final Schema schema)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/main/java/com/epam/wilma/stubconfig/dom/builder/NamespaceAwareXmlDocumentBuilder.java"}, "focal_method": {"identifier": "buildDocument", "parameters": "(final InputStream inputStream, final Schema schema)", "modifiers": "@Override public", "return": "Document", "body": "@Override\n    public Document buildDocument(final InputStream inputStream, final Schema schema) throws DocumentBuilderException {\n        try {\n            DocumentBuilderFactory dbFactory = documentBuilderFactoryBuilder.buildDocumentBuilderFactory();\n            dbFactory.setNamespaceAware(true);\n            dbFactory.setSchema(schema);\n            DocumentBuilder documentBuilder = dbFactory.newDocumentBuilder();\n            Document document = documentBuilder.parse(inputStream);\n            document.getDocumentElement().normalize();\n            return document;\n        } catch (Exception e) {\n            throw new DocumentBuilderException(\"Exception while trying to parse XML document\", e);\n        }\n\n    }", "signature": "Document buildDocument(final InputStream inputStream, final Schema schema)", "full_signature": "@Override public Document buildDocument(final InputStream inputStream, final Schema schema)", "class_method_signature": "NamespaceAwareXmlDocumentBuilder.buildDocument(final InputStream inputStream, final Schema schema)", "testcase": false, "constructor": false, "invocations": ["buildDocumentBuilderFactory", "setNamespaceAware", "setSchema", "newDocumentBuilder", "parse", "normalize", "getDocumentElement"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}