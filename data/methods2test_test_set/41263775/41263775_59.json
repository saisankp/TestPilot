{"test_class": {"identifier": "AttributeMetadataTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/src/test/java/com/googlecode/cqengine/metadata/AttributeMetadataTest.java"}, "test_case": {"identifier": "testGetFrequencyDistribution", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetFrequencyDistribution() {\n        IndexedCollection<Car> cars = createIndexedCollectionOfCars(20);\n\n        // Add an unsorted index on Car.MANUFACTURER (a HashIndex)...\n        cars.addIndex(HashIndex.onAttribute(Car.MANUFACTURER));\n        MetadataEngine<Car> metadataEngine = cars.getMetadataEngine();\n\n        // Access metadata for Car.MANUFACTURER attribute.\n        // Because we call getAttributeMetadata() (and not getSortedAttributeMetadata()),\n        // values will be returned in no particular order...\n        AttributeMetadata<String, Car> sortedAttributeMetadata = metadataEngine.getAttributeMetadata(Car.MANUFACTURER);\n\n        // Call AttributeMetadata.getFrequencyDistribution() to retrieve distinct keys and counts in no particular order.\n        // We retrieve into a Set (not a List), to assert the expected values were returned, without asserting any order...\n        assertEquals(\n                asSet(frequency(\"Ford\", 6), frequency(\"BMW\", 2), frequency(\"Toyota\", 6), frequency(\"Honda\", 6)),\n                sortedAttributeMetadata.getFrequencyDistribution().collect(toSet())\n        );\n    }", "signature": "void testGetFrequencyDistribution()", "full_signature": "@Test public void testGetFrequencyDistribution()", "class_method_signature": "AttributeMetadataTest.testGetFrequencyDistribution()", "testcase": true, "constructor": false, "invocations": ["createIndexedCollectionOfCars", "addIndex", "onAttribute", "getMetadataEngine", "getAttributeMetadata", "assertEquals", "asSet", "frequency", "frequency", "frequency", "frequency", "collect", "getFrequencyDistribution", "toSet"]}, "focal_class": {"identifier": "AttributeMetadata", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final KeyStatisticsIndex<A, O> index;", "modifier": "private final", "type": "KeyStatisticsIndex<A, O>", "declarator": "index", "var_name": "index"}, {"original_string": "private final Supplier<QueryOptions> openResourcesHandler;", "modifier": "private final", "type": "Supplier<QueryOptions>", "declarator": "openResourcesHandler", "var_name": "openResourcesHandler"}, {"original_string": "private final Consumer<QueryOptions> closeResourcesHandler;", "modifier": "private final", "type": "Consumer<QueryOptions>", "declarator": "closeResourcesHandler", "var_name": "closeResourcesHandler"}], "methods": [{"identifier": "AttributeMetadata", "parameters": "(KeyStatisticsIndex<A, O> index, Supplier<QueryOptions> openResourcesHandler, Consumer<QueryOptions> closeResourcesHandler)", "modifiers": "", "return": "", "signature": " AttributeMetadata(KeyStatisticsIndex<A, O> index, Supplier<QueryOptions> openResourcesHandler, Consumer<QueryOptions> closeResourcesHandler)", "full_signature": "  AttributeMetadata(KeyStatisticsIndex<A, O> index, Supplier<QueryOptions> openResourcesHandler, Consumer<QueryOptions> closeResourcesHandler)", "class_method_signature": "AttributeMetadata.AttributeMetadata(KeyStatisticsIndex<A, O> index, Supplier<QueryOptions> openResourcesHandler, Consumer<QueryOptions> closeResourcesHandler)", "testcase": false, "constructor": true}, {"identifier": "getFrequencyDistribution", "parameters": "()", "modifiers": "public", "return": "Stream<KeyFrequency<A>>", "signature": "Stream<KeyFrequency<A>> getFrequencyDistribution()", "full_signature": "public Stream<KeyFrequency<A>> getFrequencyDistribution()", "class_method_signature": "AttributeMetadata.getFrequencyDistribution()", "testcase": false, "constructor": false}, {"identifier": "getDistinctKeys", "parameters": "()", "modifiers": "public", "return": "Stream<A>", "signature": "Stream<A> getDistinctKeys()", "full_signature": "public Stream<A> getDistinctKeys()", "class_method_signature": "AttributeMetadata.getDistinctKeys()", "testcase": false, "constructor": false}, {"identifier": "getCountOfDistinctKeys", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getCountOfDistinctKeys()", "full_signature": "public Integer getCountOfDistinctKeys()", "class_method_signature": "AttributeMetadata.getCountOfDistinctKeys()", "testcase": false, "constructor": false}, {"identifier": "getCountForKey", "parameters": "(A key)", "modifiers": "public", "return": "Integer", "signature": "Integer getCountForKey(A key)", "full_signature": "public Integer getCountForKey(A key)", "class_method_signature": "AttributeMetadata.getCountForKey(A key)", "testcase": false, "constructor": false}, {"identifier": "getKeysAndValues", "parameters": "()", "modifiers": "public", "return": "Stream<KeyValue<A, O>>", "signature": "Stream<KeyValue<A, O>> getKeysAndValues()", "full_signature": "public Stream<KeyValue<A, O>> getKeysAndValues()", "class_method_signature": "AttributeMetadata.getKeysAndValues()", "testcase": false, "constructor": false}, {"identifier": "asKeyFrequencyStream", "parameters": "(QueryOptions queryOptions, CloseableIterable<KeyStatistics<A>> iterable)", "modifiers": "@SuppressWarnings(\"unchecked\") protected", "return": "Stream<KeyFrequency<A>>", "signature": "Stream<KeyFrequency<A>> asKeyFrequencyStream(QueryOptions queryOptions, CloseableIterable<KeyStatistics<A>> iterable)", "full_signature": "@SuppressWarnings(\"unchecked\") protected Stream<KeyFrequency<A>> asKeyFrequencyStream(QueryOptions queryOptions, CloseableIterable<KeyStatistics<A>> iterable)", "class_method_signature": "AttributeMetadata.asKeyFrequencyStream(QueryOptions queryOptions, CloseableIterable<KeyStatistics<A>> iterable)", "testcase": false, "constructor": false}, {"identifier": "asStream", "parameters": "(QueryOptions queryOptions, CloseableIterable<T> iterable)", "modifiers": "protected", "return": "Stream<T>", "signature": "Stream<T> asStream(QueryOptions queryOptions, CloseableIterable<T> iterable)", "full_signature": "protected Stream<T> asStream(QueryOptions queryOptions, CloseableIterable<T> iterable)", "class_method_signature": "AttributeMetadata.asStream(QueryOptions queryOptions, CloseableIterable<T> iterable)", "testcase": false, "constructor": false}, {"identifier": "openResources", "parameters": "()", "modifiers": "protected", "return": "QueryOptions", "signature": "QueryOptions openResources()", "full_signature": "protected QueryOptions openResources()", "class_method_signature": "AttributeMetadata.openResources()", "testcase": false, "constructor": false}, {"identifier": "closeResources", "parameters": "(QueryOptions queryOptions)", "modifiers": "protected", "return": "void", "signature": "void closeResources(QueryOptions queryOptions)", "full_signature": "protected void closeResources(QueryOptions queryOptions)", "class_method_signature": "AttributeMetadata.closeResources(QueryOptions queryOptions)", "testcase": false, "constructor": false}], "file": "code/src/main/java/com/googlecode/cqengine/metadata/AttributeMetadata.java"}, "focal_method": {"identifier": "getFrequencyDistribution", "parameters": "()", "modifiers": "public", "return": "Stream<KeyFrequency<A>>", "body": "public Stream<KeyFrequency<A>> getFrequencyDistribution() {\n        QueryOptions queryOptions = openResources();\n        return asKeyFrequencyStream(queryOptions, index.getStatisticsForDistinctKeys(queryOptions));\n    }", "signature": "Stream<KeyFrequency<A>> getFrequencyDistribution()", "full_signature": "public Stream<KeyFrequency<A>> getFrequencyDistribution()", "class_method_signature": "AttributeMetadata.getFrequencyDistribution()", "testcase": false, "constructor": false, "invocations": ["openResources", "asKeyFrequencyStream", "getStatisticsForDistinctKeys"]}, "repository": {"repo_id": 41263775, "url": "https://github.com/npgall/cqengine", "language": "Java", "is_fork": false, "fork_count": 180, "stargazer_count": 1194, "size": 11701, "license": "licensed"}}