{"test_class": {"identifier": "EdgeListStreamWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final EdgeListStream.EdgeData[] edges = new EdgeListStream.EdgeData[]{\n\t\t\tnew EdgeListStream.EdgeData(0, 1, new String[]{\"testing\"}),\n\t\t\tnew EdgeListStream.EdgeData(1, 2, new String[]{\"multiple\", \"properties\"}),\n\t\t\tnew EdgeListStream.EdgeData(10, 1, new String[]{\"123\"})\n\t};", "modifier": "private static final", "type": "EdgeListStream.EdgeData[]", "declarator": "edges = new EdgeListStream.EdgeData[]{\n\t\t\tnew EdgeListStream.EdgeData(0, 1, new String[]{\"testing\"}),\n\t\t\tnew EdgeListStream.EdgeData(1, 2, new String[]{\"multiple\", \"properties\"}),\n\t\t\tnew EdgeListStream.EdgeData(10, 1, new String[]{\"123\"})\n\t}", "var_name": "edges"}, {"original_string": "private static final String expectedOutput = \"0 1 testing\\n\" +\n\t\t\t\"1 2 multiple properties\\n\" +\n\t\t\t\"10 1 123\\n\";", "modifier": "private static final", "type": "String", "declarator": "expectedOutput = \"0 1 testing\\n\" +\n\t\t\t\"1 2 multiple properties\\n\" +\n\t\t\t\"10 1 123\\n\"", "var_name": "expectedOutput"}], "file": "graphalytics-core/src/test/java/science/atlarge/graphalytics/util/io/EdgeListStreamWriterTest.java"}, "test_case": {"identifier": "testWriteAllOnMockEdgeListStream", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testWriteAllOnMockEdgeListStream() throws IOException {\n\t\tEdgeListStream edgeListStream = new MockEdgeListStream(edges);\n\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\n\t\ttry (EdgeListStreamWriter writer = new EdgeListStreamWriter(edgeListStream, outputStream)) {\n\t\t\twriter.writeAll();\n\t\t\tassertEquals(\"Output of EdgeListStreamWriter is correct\", expectedOutput, outputStream.toString());\n\t\t}\n\t}", "signature": "void testWriteAllOnMockEdgeListStream()", "full_signature": "@Test public void testWriteAllOnMockEdgeListStream()", "class_method_signature": "EdgeListStreamWriterTest.testWriteAllOnMockEdgeListStream()", "testcase": true, "constructor": false, "invocations": ["writeAll", "assertEquals", "toString"]}, "focal_class": {"identifier": "EdgeListStreamWriter", "superclass": "", "interfaces": "implements AutoCloseable", "fields": [{"original_string": "private final EdgeListStream inputStream;", "modifier": "private final", "type": "EdgeListStream", "declarator": "inputStream", "var_name": "inputStream"}, {"original_string": "private final Writer outputWriter;", "modifier": "private final", "type": "Writer", "declarator": "outputWriter", "var_name": "outputWriter"}], "methods": [{"identifier": "EdgeListStreamWriter", "parameters": "(EdgeListStream inputStream, OutputStream outputStream)", "modifiers": "public", "return": "", "signature": " EdgeListStreamWriter(EdgeListStream inputStream, OutputStream outputStream)", "full_signature": "public  EdgeListStreamWriter(EdgeListStream inputStream, OutputStream outputStream)", "class_method_signature": "EdgeListStreamWriter.EdgeListStreamWriter(EdgeListStream inputStream, OutputStream outputStream)", "testcase": false, "constructor": true}, {"identifier": "writeAll", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void writeAll()", "full_signature": "public void writeAll()", "class_method_signature": "EdgeListStreamWriter.writeAll()", "testcase": false, "constructor": false}, {"identifier": "writeNextEdge", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeNextEdge()", "full_signature": "private void writeNextEdge()", "class_method_signature": "EdgeListStreamWriter.writeNextEdge()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "EdgeListStreamWriter.close()", "testcase": false, "constructor": false}], "file": "graphalytics-core/src/main/java/science/atlarge/graphalytics/util/io/EdgeListStreamWriter.java"}, "focal_method": {"identifier": "writeAll", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void writeAll() throws IOException {\n\t\twhile (inputStream.hasNextEdge()) {\n\t\t\twriteNextEdge();\n\t\t}\n\t\toutputWriter.flush();\n\t}", "signature": "void writeAll()", "full_signature": "public void writeAll()", "class_method_signature": "EdgeListStreamWriter.writeAll()", "testcase": false, "constructor": false, "invocations": ["hasNextEdge", "writeNextEdge", "flush"]}, "repository": {"repo_id": 22430702, "url": "https://github.com/ldbc/ldbc_graphalytics", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 51, "size": 2664, "license": "licensed"}}