{"test_class": {"identifier": "ConnectorPluginsResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Map<String, String> props = new HashMap<>();", "modifier": "private static", "type": "Map<String, String>", "declarator": "props = new HashMap<>()", "var_name": "props"}, {"original_string": "private static final ConfigInfos CONFIG_INFOS;", "modifier": "private static final", "type": "ConfigInfos", "declarator": "CONFIG_INFOS", "var_name": "CONFIG_INFOS"}, {"original_string": "private static final int ERROR_COUNT = 1;", "modifier": "private static final", "type": "int", "declarator": "ERROR_COUNT = 1", "var_name": "ERROR_COUNT"}, {"original_string": "@Mock\n    private Herder herder;", "modifier": "@Mock\n    private", "type": "Herder", "declarator": "herder", "var_name": "herder"}, {"original_string": "private ConnectorPluginsResource connectorPluginsResource;", "modifier": "private", "type": "ConnectorPluginsResource", "declarator": "connectorPluginsResource", "var_name": "connectorPluginsResource"}], "file": "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorPluginsResourceTest.java"}, "test_case": {"identifier": "testValidateConfig", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateConfig() throws Throwable {\n        herder.validateConfigs(EasyMock.eq(ConnectorPluginsResourceTestConnector.class.getName()), EasyMock.eq(props));\n\n        PowerMock.expectLastCall().andAnswer(new IAnswer<ConfigInfos>() {\n            @Override\n            public ConfigInfos answer() {\n                ConfigDef connectorConfigDef = ConnectorConfig.configDef();\n                List<ConfigValue> connectorConfigValues = connectorConfigDef.validate(props);\n\n                Connector connector = new ConnectorPluginsResourceTestConnector();\n                Config config = connector.validate(props);\n                ConfigDef configDef = connector.config();\n                Map<String, ConfigDef.ConfigKey> configKeys = configDef.configKeys();\n                List<ConfigValue> configValues = config.configValues();\n\n                Map<String, ConfigDef.ConfigKey> resultConfigKeys = new HashMap<>(configKeys);\n                resultConfigKeys.putAll(connectorConfigDef.configKeys());\n                configValues.addAll(connectorConfigValues);\n\n                return AbstractHerder.generateResult(ConnectorPluginsResourceTestConnector.class.getName(), resultConfigKeys, configValues, Collections.singletonList(\"Test\"));\n            }\n        });\n        PowerMock.replayAll();\n\n        ConfigInfos configInfos = connectorPluginsResource.validateConfigs(ConnectorPluginsResourceTestConnector.class.getName(), props);\n        assertEquals(CONFIG_INFOS.name(), configInfos.name());\n        assertEquals(CONFIG_INFOS.errorCount(), configInfos.errorCount());\n        assertEquals(CONFIG_INFOS.groups(), configInfos.groups());\n        assertEquals(new HashSet<>(CONFIG_INFOS.values()), new HashSet<>(configInfos.values()));\n\n        PowerMock.verifyAll();\n    }", "signature": "void testValidateConfig()", "full_signature": "@Test public void testValidateConfig()", "class_method_signature": "ConnectorPluginsResourceTest.testValidateConfig()", "testcase": true, "constructor": false, "invocations": ["validateConfigs", "eq", "getName", "eq", "andAnswer", "expectLastCall", "configDef", "validate", "validate", "config", "configKeys", "configValues", "putAll", "configKeys", "addAll", "generateResult", "getName", "singletonList", "replayAll", "validateConfigs", "getName", "assertEquals", "name", "name", "assertEquals", "errorCount", "errorCount", "assertEquals", "groups", "groups", "assertEquals", "values", "values", "verifyAll"]}, "focal_class": {"identifier": "ConnectorPluginsResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Herder herder;", "modifier": "private final", "type": "Herder", "declarator": "herder", "var_name": "herder"}], "methods": [{"identifier": "ConnectorPluginsResource", "parameters": "(Herder herder)", "modifiers": "public", "return": "", "signature": " ConnectorPluginsResource(Herder herder)", "full_signature": "public  ConnectorPluginsResource(Herder herder)", "class_method_signature": "ConnectorPluginsResource.ConnectorPluginsResource(Herder herder)", "testcase": false, "constructor": true}, {"identifier": "validateConfigs", "parameters": "(final @PathParam(\"connectorType\") String connType,\n                                       final Map<String, String> connectorConfig)", "modifiers": "@PUT @Path(\"/{connectorType}/config/validate\") public", "return": "ConfigInfos", "signature": "ConfigInfos validateConfigs(final @PathParam(\"connectorType\") String connType,\n                                       final Map<String, String> connectorConfig)", "full_signature": "@PUT @Path(\"/{connectorType}/config/validate\") public ConfigInfos validateConfigs(final @PathParam(\"connectorType\") String connType,\n                                       final Map<String, String> connectorConfig)", "class_method_signature": "ConnectorPluginsResource.validateConfigs(final @PathParam(\"connectorType\") String connType,\n                                       final Map<String, String> connectorConfig)", "testcase": false, "constructor": false}, {"identifier": "listConnectorPlugins", "parameters": "()", "modifiers": "@GET @Path(\"/\") public", "return": "List<ConnectorPluginInfo>", "signature": "List<ConnectorPluginInfo> listConnectorPlugins()", "full_signature": "@GET @Path(\"/\") public List<ConnectorPluginInfo> listConnectorPlugins()", "class_method_signature": "ConnectorPluginsResource.listConnectorPlugins()", "testcase": false, "constructor": false}], "file": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorPluginsResource.java"}, "focal_method": {"identifier": "validateConfigs", "parameters": "(final @PathParam(\"connectorType\") String connType,\n                                       final Map<String, String> connectorConfig)", "modifiers": "@PUT @Path(\"/{connectorType}/config/validate\") public", "return": "ConfigInfos", "body": "@PUT\n    @Path(\"/{connectorType}/config/validate\")\n    public ConfigInfos validateConfigs(final @PathParam(\"connectorType\") String connType,\n                                       final Map<String, String> connectorConfig) throws Throwable {\n        return herder.validateConfigs(connType, connectorConfig);\n    }", "signature": "ConfigInfos validateConfigs(final @PathParam(\"connectorType\") String connType,\n                                       final Map<String, String> connectorConfig)", "full_signature": "@PUT @Path(\"/{connectorType}/config/validate\") public ConfigInfos validateConfigs(final @PathParam(\"connectorType\") String connType,\n                                       final Map<String, String> connectorConfig)", "class_method_signature": "ConnectorPluginsResource.validateConfigs(final @PathParam(\"connectorType\") String connType,\n                                       final Map<String, String> connectorConfig)", "testcase": false, "constructor": false, "invocations": ["validateConfigs"]}, "repository": {"repo_id": 135978112, "url": "https://github.com/anurnomeru/kafka-0.10.0.1-source-reading", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 2953, "license": "licensed"}}