{"test_class": {"identifier": "PocketTopoTxtImporterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String FAKE_TEXT =\n            \"TRIP\\n\" +\n            \"DATE 2005-07-01 \\n\" +\n            \"DECLINATION     0.00\\n\" +\n            \"DATA\\n\" +\n            \"1.0\\t\\t193.78\\t0.41\\t9.118\\t>\\n\" +\n            \"1.0\\t\\t328.51\\t14.60\\t4.709\\t>\\n\" +\n            \"\\n\" +\n            \"PLAN\\n\" +\n            \"STATIONS\\n\" +\n            \"0.000\\t0.000\\t1.0\\n\" +\n            \"-10.255\\t1.283\\t1.1\\n\" +\n            \"SHOTS\\n\" +\n            \"1.597\\t-1.073\\t9.846\\t1.700\\n\" +\n            \"9.846\\t1.700\\t12.401\\t0.728\\n\" +\n            \"POLYLINE BROWN\\n\" +\n            \"4.980\\t-55.180\\n\" +\n            \"POLYLINE RED\\n\" +\n            \"3.780\\t-48.580\\n\" +\n            \"\\n\" +\n            \"ELEVATION\\n\" +\n            \"STATIONS\\n\" +\n            \"0.000\\t0.000\\t1.0\\n\" +\n            \"10.335\\t0.789\\t1.1\\n\" +\n            \"SHOTS\\n\" +\n            \"22.419\\t2.357\\t31.121\\t10.880\\n\" +\n            \"31.121\\t10.880\\t33.233\\t17.211\\n\" +\n            \"POLYLINE BLUE\\n\" +\n            \"70.600\\t-23.300\\n\" +\n            \"70.800\\t-23.300\";", "modifier": "public static final", "type": "String", "declarator": "FAKE_TEXT =\n            \"TRIP\\n\" +\n            \"DATE 2005-07-01 \\n\" +\n            \"DECLINATION     0.00\\n\" +\n            \"DATA\\n\" +\n            \"1.0\\t\\t193.78\\t0.41\\t9.118\\t>\\n\" +\n            \"1.0\\t\\t328.51\\t14.60\\t4.709\\t>\\n\" +\n            \"\\n\" +\n            \"PLAN\\n\" +\n            \"STATIONS\\n\" +\n            \"0.000\\t0.000\\t1.0\\n\" +\n            \"-10.255\\t1.283\\t1.1\\n\" +\n            \"SHOTS\\n\" +\n            \"1.597\\t-1.073\\t9.846\\t1.700\\n\" +\n            \"9.846\\t1.700\\t12.401\\t0.728\\n\" +\n            \"POLYLINE BROWN\\n\" +\n            \"4.980\\t-55.180\\n\" +\n            \"POLYLINE RED\\n\" +\n            \"3.780\\t-48.580\\n\" +\n            \"\\n\" +\n            \"ELEVATION\\n\" +\n            \"STATIONS\\n\" +\n            \"0.000\\t0.000\\t1.0\\n\" +\n            \"10.335\\t0.789\\t1.1\\n\" +\n            \"SHOTS\\n\" +\n            \"22.419\\t2.357\\t31.121\\t10.880\\n\" +\n            \"31.121\\t10.880\\t33.233\\t17.211\\n\" +\n            \"POLYLINE BLUE\\n\" +\n            \"70.600\\t-23.300\\n\" +\n            \"70.800\\t-23.300\"", "var_name": "FAKE_TEXT"}], "file": "app/src/test/java/org/hwyl/sexytopo/control/io/thirdparty/pockettopo/PocketTopoTxtImporterTest.java"}, "test_case": {"identifier": "testGetNamedSubSection", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetNamedSubSection() {\n        String section = PocketTopoTxtImporter.getSection(FAKE_TEXT, \"ELEVATION\");\n        String stationsSubSection = PocketTopoTxtImporter.getNamedSubSection(section, \"STATIONS\");\n        Assert.assertEquals(\"0.000\\t0.000\\t1.0\\n10.335\\t0.789\\t1.1\", stationsSubSection);\n    }", "signature": "void testGetNamedSubSection()", "full_signature": "@Test public void testGetNamedSubSection()", "class_method_signature": "PocketTopoTxtImporterTest.testGetNamedSubSection()", "testcase": true, "constructor": false, "invocations": ["getSection", "getNamedSubSection", "assertEquals"]}, "focal_class": {"identifier": "PocketTopoTxtImporter", "superclass": "extends Importer", "interfaces": "", "fields": [], "methods": [{"identifier": "toSurvey", "parameters": "(File file)", "modifiers": "public", "return": "Survey", "signature": "Survey toSurvey(File file)", "full_signature": "public Survey toSurvey(File file)", "class_method_signature": "PocketTopoTxtImporter.toSurvey(File file)", "testcase": false, "constructor": false}, {"identifier": "canHandleFile", "parameters": "(File file)", "modifiers": "public", "return": "boolean", "signature": "boolean canHandleFile(File file)", "full_signature": "public boolean canHandleFile(File file)", "class_method_signature": "PocketTopoTxtImporter.canHandleFile(File file)", "testcase": false, "constructor": false}, {"identifier": "parseDataAndUpdateSurvey", "parameters": "(Survey survey, String fullText)", "modifiers": "private static", "return": "void", "signature": "void parseDataAndUpdateSurvey(Survey survey, String fullText)", "full_signature": "private static void parseDataAndUpdateSurvey(Survey survey, String fullText)", "class_method_signature": "PocketTopoTxtImporter.parseDataAndUpdateSurvey(Survey survey, String fullText)", "testcase": false, "constructor": false}, {"identifier": "getPlan", "parameters": "(Survey survey, String fullText)", "modifiers": "private static", "return": "Sketch", "signature": "Sketch getPlan(Survey survey, String fullText)", "full_signature": "private static Sketch getPlan(Survey survey, String fullText)", "class_method_signature": "PocketTopoTxtImporter.getPlan(Survey survey, String fullText)", "testcase": false, "constructor": false}, {"identifier": "getElevation", "parameters": "(Survey survey, String fullText)", "modifiers": "private static", "return": "Sketch", "signature": "Sketch getElevation(Survey survey, String fullText)", "full_signature": "private static Sketch getElevation(Survey survey, String fullText)", "class_method_signature": "PocketTopoTxtImporter.getElevation(Survey survey, String fullText)", "testcase": false, "constructor": false}, {"identifier": "parseSketch", "parameters": "(Survey survey, String text, Space<Coord2D> projection)", "modifiers": "private static", "return": "Sketch", "signature": "Sketch parseSketch(Survey survey, String text, Space<Coord2D> projection)", "full_signature": "private static Sketch parseSketch(Survey survey, String text, Space<Coord2D> projection)", "class_method_signature": "PocketTopoTxtImporter.parseSketch(Survey survey, String text, Space<Coord2D> projection)", "testcase": false, "constructor": false}, {"identifier": "getSection", "parameters": "(String text, String header)", "modifiers": "public static", "return": "String", "signature": "String getSection(String text, String header)", "full_signature": "public static String getSection(String text, String header)", "class_method_signature": "PocketTopoTxtImporter.getSection(String text, String header)", "testcase": false, "constructor": false}, {"identifier": "extractOffset", "parameters": "(\n            Survey survey, String text, Space<Coord2D> projection)", "modifiers": "public static", "return": "Coord2D", "signature": "Coord2D extractOffset(\n            Survey survey, String text, Space<Coord2D> projection)", "full_signature": "public static Coord2D extractOffset(\n            Survey survey, String text, Space<Coord2D> projection)", "class_method_signature": "PocketTopoTxtImporter.extractOffset(\n            Survey survey, String text, Space<Coord2D> projection)", "testcase": false, "constructor": false}, {"identifier": "getOffsetForNamedStation", "parameters": "(String[] lines, Station station)", "modifiers": "public static", "return": "Coord2D", "signature": "Coord2D getOffsetForNamedStation(String[] lines, Station station)", "full_signature": "public static Coord2D getOffsetForNamedStation(String[] lines, Station station)", "class_method_signature": "PocketTopoTxtImporter.getOffsetForNamedStation(String[] lines, Station station)", "testcase": false, "constructor": false}, {"identifier": "getNamedSubSection", "parameters": "(String text, String header, String sectionHeader)", "modifiers": "public static", "return": "String", "signature": "String getNamedSubSection(String text, String header, String sectionHeader)", "full_signature": "public static String getNamedSubSection(String text, String header, String sectionHeader)", "class_method_signature": "PocketTopoTxtImporter.getNamedSubSection(String text, String header, String sectionHeader)", "testcase": false, "constructor": false}, {"identifier": "getNamedSubSection", "parameters": "(String text, String header)", "modifiers": "public static", "return": "String", "signature": "String getNamedSubSection(String text, String header)", "full_signature": "public static String getNamedSubSection(String text, String header)", "class_method_signature": "PocketTopoTxtImporter.getNamedSubSection(String text, String header)", "testcase": false, "constructor": false}, {"identifier": "parsePolylines", "parameters": "(String text, Coord2D offset)", "modifiers": "public static", "return": "Set<PathDetail>", "signature": "Set<PathDetail> parsePolylines(String text, Coord2D offset)", "full_signature": "public static Set<PathDetail> parsePolylines(String text, Coord2D offset)", "class_method_signature": "PocketTopoTxtImporter.parsePolylines(String text, Coord2D offset)", "testcase": false, "constructor": false}, {"identifier": "interpretColour", "parameters": "(String colourText)", "modifiers": "public static", "return": "Colour", "signature": "Colour interpretColour(String colourText)", "full_signature": "public static Colour interpretColour(String colourText)", "class_method_signature": "PocketTopoTxtImporter.interpretColour(String colourText)", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/hwyl/sexytopo/control/io/thirdparty/pockettopo/PocketTopoTxtImporter.java"}, "focal_method": {"identifier": "getNamedSubSection", "parameters": "(String text, String header, String sectionHeader)", "modifiers": "public static", "return": "String", "body": "public static String getNamedSubSection(String text, String header, String sectionHeader) {\n        String section = getSection(text, sectionHeader);\n        return getNamedSubSection(section, header);\n    }", "signature": "String getNamedSubSection(String text, String header, String sectionHeader)", "full_signature": "public static String getNamedSubSection(String text, String header, String sectionHeader)", "class_method_signature": "PocketTopoTxtImporter.getNamedSubSection(String text, String header, String sectionHeader)", "testcase": false, "constructor": false, "invocations": ["getSection", "getNamedSubSection"]}, "repository": {"repo_id": 27244573, "url": "https://github.com/richsmith/sexytopo", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 15, "size": 83635, "license": "licensed"}}