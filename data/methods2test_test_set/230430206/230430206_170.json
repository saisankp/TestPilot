{"test_class": {"identifier": "ZooKeeperServerBeanTest", "superclass": "", "interfaces": "", "fields": [], "file": "zookeeper-server/src/test/java/org/apache/zookeeper/server/ZooKeeperServerBeanTest.java"}, "test_case": {"identifier": "testTxnLogElapsedSyncTime", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTxnLogElapsedSyncTime() throws IOException {\n\n        File tmpDir = ClientBase.createTmpDir();\n        FileTxnSnapLog fileTxnSnapLog = new FileTxnSnapLog(new File(tmpDir, \"data\"),\n                new File(tmpDir, \"data_txnlog\"));\n\n        ZooKeeperServer zks = new ZooKeeperServer();\n        zks.setTxnLogFactory(fileTxnSnapLog);\n\n        ZooKeeperServerBean serverBean = new ZooKeeperServerBean(zks);\n        long elapsedTime = serverBean.getTxnLogElapsedSyncTime();\n        assertEquals(-1, elapsedTime);\n\n        TxnHeader hdr = new TxnHeader(1, 1, 1, 1, ZooDefs.OpCode.setData);\n        Record txn = new SetDataTxn(\"/foo\", new byte[0], 1);\n        Request req = new Request(0, 0, 0, hdr, txn, 0);\n\n        try {\n\n            zks.getTxnLogFactory().append(req);\n            zks.getTxnLogFactory().commit();\n            elapsedTime = serverBean.getTxnLogElapsedSyncTime();\n\n            assertNotEquals(-1, elapsedTime);\n\n            assertEquals(elapsedTime, serverBean.getTxnLogElapsedSyncTime());\n\n        } finally {\n            fileTxnSnapLog.close();\n        }\n    }", "signature": "void testTxnLogElapsedSyncTime()", "full_signature": "@Test public void testTxnLogElapsedSyncTime()", "class_method_signature": "ZooKeeperServerBeanTest.testTxnLogElapsedSyncTime()", "testcase": true, "constructor": false, "invocations": ["createTmpDir", "setTxnLogFactory", "getTxnLogElapsedSyncTime", "assertEquals", "append", "getTxnLogFactory", "commit", "getTxnLogFactory", "getTxnLogElapsedSyncTime", "assertNotEquals", "assertEquals", "getTxnLogElapsedSyncTime", "close"]}, "focal_class": {"identifier": "ZooKeeperServerBean", "superclass": "", "interfaces": "implements ZooKeeperServerMXBean, ZKMBeanInfo", "fields": [{"original_string": "private final Date startTime;", "modifier": "private final", "type": "Date", "declarator": "startTime", "var_name": "startTime"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "protected final ZooKeeperServer zks;", "modifier": "protected final", "type": "ZooKeeperServer", "declarator": "zks", "var_name": "zks"}], "methods": [{"identifier": "ZooKeeperServerBean", "parameters": "(ZooKeeperServer zks)", "modifiers": "public", "return": "", "signature": " ZooKeeperServerBean(ZooKeeperServer zks)", "full_signature": "public  ZooKeeperServerBean(ZooKeeperServer zks)", "class_method_signature": "ZooKeeperServerBean.ZooKeeperServerBean(ZooKeeperServer zks)", "testcase": false, "constructor": true}, {"identifier": "getClientPort", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClientPort()", "full_signature": "public String getClientPort()", "class_method_signature": "ZooKeeperServerBean.getClientPort()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "ZooKeeperServerBean.getName()", "testcase": false, "constructor": false}, {"identifier": "isHidden", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isHidden()", "full_signature": "public boolean isHidden()", "class_method_signature": "ZooKeeperServerBean.isHidden()", "testcase": false, "constructor": false}, {"identifier": "getStartTime", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStartTime()", "full_signature": "public String getStartTime()", "class_method_signature": "ZooKeeperServerBean.getStartTime()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "ZooKeeperServerBean.getVersion()", "testcase": false, "constructor": false}, {"identifier": "getAvgRequestLatency", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getAvgRequestLatency()", "full_signature": "public long getAvgRequestLatency()", "class_method_signature": "ZooKeeperServerBean.getAvgRequestLatency()", "testcase": false, "constructor": false}, {"identifier": "getMaxRequestLatency", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMaxRequestLatency()", "full_signature": "public long getMaxRequestLatency()", "class_method_signature": "ZooKeeperServerBean.getMaxRequestLatency()", "testcase": false, "constructor": false}, {"identifier": "getMinRequestLatency", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMinRequestLatency()", "full_signature": "public long getMinRequestLatency()", "class_method_signature": "ZooKeeperServerBean.getMinRequestLatency()", "testcase": false, "constructor": false}, {"identifier": "getOutstandingRequests", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getOutstandingRequests()", "full_signature": "public long getOutstandingRequests()", "class_method_signature": "ZooKeeperServerBean.getOutstandingRequests()", "testcase": false, "constructor": false}, {"identifier": "getTickTime", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTickTime()", "full_signature": "public int getTickTime()", "class_method_signature": "ZooKeeperServerBean.getTickTime()", "testcase": false, "constructor": false}, {"identifier": "setTickTime", "parameters": "(int tickTime)", "modifiers": "public", "return": "void", "signature": "void setTickTime(int tickTime)", "full_signature": "public void setTickTime(int tickTime)", "class_method_signature": "ZooKeeperServerBean.setTickTime(int tickTime)", "testcase": false, "constructor": false}, {"identifier": "getMaxClientCnxnsPerHost", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxClientCnxnsPerHost()", "full_signature": "public int getMaxClientCnxnsPerHost()", "class_method_signature": "ZooKeeperServerBean.getMaxClientCnxnsPerHost()", "testcase": false, "constructor": false}, {"identifier": "setMaxClientCnxnsPerHost", "parameters": "(int max)", "modifiers": "public", "return": "void", "signature": "void setMaxClientCnxnsPerHost(int max)", "full_signature": "public void setMaxClientCnxnsPerHost(int max)", "class_method_signature": "ZooKeeperServerBean.setMaxClientCnxnsPerHost(int max)", "testcase": false, "constructor": false}, {"identifier": "getMinSessionTimeout", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMinSessionTimeout()", "full_signature": "public int getMinSessionTimeout()", "class_method_signature": "ZooKeeperServerBean.getMinSessionTimeout()", "testcase": false, "constructor": false}, {"identifier": "setMinSessionTimeout", "parameters": "(int min)", "modifiers": "public", "return": "void", "signature": "void setMinSessionTimeout(int min)", "full_signature": "public void setMinSessionTimeout(int min)", "class_method_signature": "ZooKeeperServerBean.setMinSessionTimeout(int min)", "testcase": false, "constructor": false}, {"identifier": "getMaxSessionTimeout", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxSessionTimeout()", "full_signature": "public int getMaxSessionTimeout()", "class_method_signature": "ZooKeeperServerBean.getMaxSessionTimeout()", "testcase": false, "constructor": false}, {"identifier": "setMaxSessionTimeout", "parameters": "(int max)", "modifiers": "public", "return": "void", "signature": "void setMaxSessionTimeout(int max)", "full_signature": "public void setMaxSessionTimeout(int max)", "class_method_signature": "ZooKeeperServerBean.setMaxSessionTimeout(int max)", "testcase": false, "constructor": false}, {"identifier": "getDataDirSize", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getDataDirSize()", "full_signature": "public long getDataDirSize()", "class_method_signature": "ZooKeeperServerBean.getDataDirSize()", "testcase": false, "constructor": false}, {"identifier": "getLogDirSize", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLogDirSize()", "full_signature": "public long getLogDirSize()", "class_method_signature": "ZooKeeperServerBean.getLogDirSize()", "testcase": false, "constructor": false}, {"identifier": "getPacketsReceived", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getPacketsReceived()", "full_signature": "public long getPacketsReceived()", "class_method_signature": "ZooKeeperServerBean.getPacketsReceived()", "testcase": false, "constructor": false}, {"identifier": "getPacketsSent", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getPacketsSent()", "full_signature": "public long getPacketsSent()", "class_method_signature": "ZooKeeperServerBean.getPacketsSent()", "testcase": false, "constructor": false}, {"identifier": "getFsyncThresholdExceedCount", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getFsyncThresholdExceedCount()", "full_signature": "public long getFsyncThresholdExceedCount()", "class_method_signature": "ZooKeeperServerBean.getFsyncThresholdExceedCount()", "testcase": false, "constructor": false}, {"identifier": "resetLatency", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void resetLatency()", "full_signature": "public void resetLatency()", "class_method_signature": "ZooKeeperServerBean.resetLatency()", "testcase": false, "constructor": false}, {"identifier": "resetMaxLatency", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void resetMaxLatency()", "full_signature": "public void resetMaxLatency()", "class_method_signature": "ZooKeeperServerBean.resetMaxLatency()", "testcase": false, "constructor": false}, {"identifier": "resetFsyncThresholdExceedCount", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void resetFsyncThresholdExceedCount()", "full_signature": "public void resetFsyncThresholdExceedCount()", "class_method_signature": "ZooKeeperServerBean.resetFsyncThresholdExceedCount()", "testcase": false, "constructor": false}, {"identifier": "resetStatistics", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void resetStatistics()", "full_signature": "public void resetStatistics()", "class_method_signature": "ZooKeeperServerBean.resetStatistics()", "testcase": false, "constructor": false}, {"identifier": "getNumAliveConnections", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getNumAliveConnections()", "full_signature": "public long getNumAliveConnections()", "class_method_signature": "ZooKeeperServerBean.getNumAliveConnections()", "testcase": false, "constructor": false}, {"identifier": "getSecureClientPort", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSecureClientPort()", "full_signature": "@Override public String getSecureClientPort()", "class_method_signature": "ZooKeeperServerBean.getSecureClientPort()", "testcase": false, "constructor": false}, {"identifier": "getSecureClientAddress", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSecureClientAddress()", "full_signature": "@Override public String getSecureClientAddress()", "class_method_signature": "ZooKeeperServerBean.getSecureClientAddress()", "testcase": false, "constructor": false}, {"identifier": "getTxnLogElapsedSyncTime", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getTxnLogElapsedSyncTime()", "full_signature": "@Override public long getTxnLogElapsedSyncTime()", "class_method_signature": "ZooKeeperServerBean.getTxnLogElapsedSyncTime()", "testcase": false, "constructor": false}, {"identifier": "getJuteMaxBufferSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getJuteMaxBufferSize()", "full_signature": "@Override public int getJuteMaxBufferSize()", "class_method_signature": "ZooKeeperServerBean.getJuteMaxBufferSize()", "testcase": false, "constructor": false}, {"identifier": "getLastClientResponseSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getLastClientResponseSize()", "full_signature": "@Override public int getLastClientResponseSize()", "class_method_signature": "ZooKeeperServerBean.getLastClientResponseSize()", "testcase": false, "constructor": false}, {"identifier": "getMinClientResponseSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMinClientResponseSize()", "full_signature": "@Override public int getMinClientResponseSize()", "class_method_signature": "ZooKeeperServerBean.getMinClientResponseSize()", "testcase": false, "constructor": false}, {"identifier": "getMaxClientResponseSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxClientResponseSize()", "full_signature": "@Override public int getMaxClientResponseSize()", "class_method_signature": "ZooKeeperServerBean.getMaxClientResponseSize()", "testcase": false, "constructor": false}], "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ZooKeeperServerBean.java"}, "focal_method": {"identifier": "getTxnLogElapsedSyncTime", "parameters": "()", "modifiers": "@Override public", "return": "long", "body": "@Override\n    public long getTxnLogElapsedSyncTime() {\n        return zks.getTxnLogElapsedSyncTime();\n    }", "signature": "long getTxnLogElapsedSyncTime()", "full_signature": "@Override public long getTxnLogElapsedSyncTime()", "class_method_signature": "ZooKeeperServerBean.getTxnLogElapsedSyncTime()", "testcase": false, "constructor": false, "invocations": ["getTxnLogElapsedSyncTime"]}, "repository": {"repo_id": 230430206, "url": "https://github.com/boomblog/zookeeper-vip2", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 10, "size": 3105, "license": "licensed"}}