{"test_class": {"identifier": "OptionsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private File tempDir;", "modifier": "private", "type": "File", "declarator": "tempDir", "var_name": "tempDir"}], "file": "cli/src/test/java/net/adamcin/oakpal/cli/OptionsTest.java"}, "test_case": {"identifier": "testOutFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOutFile() throws Exception {\n        final Console console = getMockConsole();\n        when(console.getCwd()).thenReturn(tempDir);\n        Options.Builder builder = new Options.Builder().setOutputJson(true);\n        final File outFile = new File(tempDir, \"testOutFile.json\");\n        builder.setOutFile(outFile);\n        final DisposablePrinter printer = new Main.DisposablePrinterImpl(new PrintWriter(outFile));\n\n        when(console.openPrinter(outFile)).thenReturn(Result.success(printer));\n        final Result<Options> options = builder.build(console);\n        options.stream().forEachOrdered(opts -> {\n            opts.getPrinter().apply(() -> JavaxJson.key(\"message\", \"test\").get()).get();\n        });\n        printer.dispose();\n\n        try (Reader fileReader = new InputStreamReader(new FileInputStream(outFile), StandardCharsets.UTF_8);\n             JsonReader reader = Json.createReader(fileReader)) {\n\n            JsonObject json = reader.readObject();\n            assertTrue(\"json should have 'message' key\", json.containsKey(\"message\"));\n        }\n    }", "signature": "void testOutFile()", "full_signature": "@Test public void testOutFile()", "class_method_signature": "OptionsTest.testOutFile()", "testcase": true, "constructor": false, "invocations": ["getMockConsole", "thenReturn", "when", "getCwd", "setOutputJson", "setOutFile", "thenReturn", "when", "openPrinter", "success", "build", "forEachOrdered", "stream", "get", "apply", "getPrinter", "get", "key", "dispose", "createReader", "readObject", "assertTrue", "containsKey"]}, "focal_class": {"identifier": "Options", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String CACHE_DIR_NAME = \".oakpal-cache\";", "modifier": "static final", "type": "String", "declarator": "CACHE_DIR_NAME = \".oakpal-cache\"", "var_name": "CACHE_DIR_NAME"}, {"original_string": "static final Function<StructuredMessage, IO<Nothing>> EMPTY_PRINTER = message -> IO.empty;", "modifier": "static final", "type": "Function<StructuredMessage, IO<Nothing>>", "declarator": "EMPTY_PRINTER = message -> IO.empty", "var_name": "EMPTY_PRINTER"}, {"original_string": "static final Options DEFAULT_OPTIONS = new Options();", "modifier": "static final", "type": "Options", "declarator": "DEFAULT_OPTIONS = new Options()", "var_name": "DEFAULT_OPTIONS"}, {"original_string": "private final boolean justHelp;", "modifier": "private final", "type": "boolean", "declarator": "justHelp", "var_name": "justHelp"}, {"original_string": "private final boolean justVersion;", "modifier": "private final", "type": "boolean", "declarator": "justVersion", "var_name": "justVersion"}, {"original_string": "private final boolean storeBlobs;", "modifier": "private final", "type": "boolean", "declarator": "storeBlobs", "var_name": "storeBlobs"}, {"original_string": "private final URL planUrl;", "modifier": "private final", "type": "URL", "declarator": "planUrl", "var_name": "planUrl"}, {"original_string": "private final ClassLoader scanClassLoader;", "modifier": "private final", "type": "ClassLoader", "declarator": "scanClassLoader", "var_name": "scanClassLoader"}, {"original_string": "private final File cacheDir;", "modifier": "private final", "type": "File", "declarator": "cacheDir", "var_name": "cacheDir"}, {"original_string": "private final File opearFile;", "modifier": "private final", "type": "File", "declarator": "opearFile", "var_name": "opearFile"}, {"original_string": "private final String planName;", "modifier": "private final", "type": "String", "declarator": "planName", "var_name": "planName"}, {"original_string": "private final File planFile;", "modifier": "private final", "type": "File", "declarator": "planFile", "var_name": "planFile"}, {"original_string": "private final File planFileBaseDir;", "modifier": "private final", "type": "File", "declarator": "planFileBaseDir", "var_name": "planFileBaseDir"}, {"original_string": "private final List<File> preInstallFiles;", "modifier": "private final", "type": "List<File>", "declarator": "preInstallFiles", "var_name": "preInstallFiles"}, {"original_string": "private final List<File> repoInitFiles;", "modifier": "private final", "type": "List<File>", "declarator": "repoInitFiles", "var_name": "repoInitFiles"}, {"original_string": "private final List<String> runModes;", "modifier": "private final", "type": "List<String>", "declarator": "runModes", "var_name": "runModes"}, {"original_string": "private final boolean noRunModes;", "modifier": "private final", "type": "boolean", "declarator": "noRunModes", "var_name": "noRunModes"}, {"original_string": "private final List<File> extendedClassPathFiles;", "modifier": "private final", "type": "List<File>", "declarator": "extendedClassPathFiles", "var_name": "extendedClassPathFiles"}, {"original_string": "private final boolean noHooks;", "modifier": "private final", "type": "boolean", "declarator": "noHooks", "var_name": "noHooks"}, {"original_string": "private final List<File> scanFiles;", "modifier": "private final", "type": "List<File>", "declarator": "scanFiles", "var_name": "scanFiles"}, {"original_string": "private final Function<StructuredMessage, IO<Nothing>> printer;", "modifier": "private final", "type": "Function<StructuredMessage, IO<Nothing>>", "declarator": "printer", "var_name": "printer"}, {"original_string": "private final Severity failOnSeverity;", "modifier": "private final", "type": "Severity", "declarator": "failOnSeverity", "var_name": "failOnSeverity"}], "methods": [{"identifier": "Options", "parameters": "()", "modifiers": "", "return": "", "signature": " Options()", "full_signature": "  Options()", "class_method_signature": "Options.Options()", "testcase": false, "constructor": true}, {"identifier": "Options", "parameters": "(final boolean justHelp,\n            final boolean justVersion,\n            final boolean storeBlobs,\n            final @NotNull URL planUrl,\n            final @NotNull ClassLoader scanClassLoader,\n            final @NotNull File cacheDir,\n            final @Nullable File opearFile,\n            final @Nullable String planName,\n            final @Nullable File planFile,\n            final @Nullable File planFileBaseDir,\n            final @NotNull List<File> preInstallFiles,\n            final @NotNull List<File> repoInitFiles,\n            final @NotNull List<String> runModes,\n            final boolean noRunModes,\n            final @NotNull List<File> extendedClassPathFiles,\n            final boolean noHooks,\n            final @NotNull List<File> scanFiles,\n            final @NotNull Function<StructuredMessage, IO<Nothing>> printer,\n            final @NotNull Severity failOnSeverity)", "modifiers": "", "return": "", "signature": " Options(final boolean justHelp,\n            final boolean justVersion,\n            final boolean storeBlobs,\n            final @NotNull URL planUrl,\n            final @NotNull ClassLoader scanClassLoader,\n            final @NotNull File cacheDir,\n            final @Nullable File opearFile,\n            final @Nullable String planName,\n            final @Nullable File planFile,\n            final @Nullable File planFileBaseDir,\n            final @NotNull List<File> preInstallFiles,\n            final @NotNull List<File> repoInitFiles,\n            final @NotNull List<String> runModes,\n            final boolean noRunModes,\n            final @NotNull List<File> extendedClassPathFiles,\n            final boolean noHooks,\n            final @NotNull List<File> scanFiles,\n            final @NotNull Function<StructuredMessage, IO<Nothing>> printer,\n            final @NotNull Severity failOnSeverity)", "full_signature": "  Options(final boolean justHelp,\n            final boolean justVersion,\n            final boolean storeBlobs,\n            final @NotNull URL planUrl,\n            final @NotNull ClassLoader scanClassLoader,\n            final @NotNull File cacheDir,\n            final @Nullable File opearFile,\n            final @Nullable String planName,\n            final @Nullable File planFile,\n            final @Nullable File planFileBaseDir,\n            final @NotNull List<File> preInstallFiles,\n            final @NotNull List<File> repoInitFiles,\n            final @NotNull List<String> runModes,\n            final boolean noRunModes,\n            final @NotNull List<File> extendedClassPathFiles,\n            final boolean noHooks,\n            final @NotNull List<File> scanFiles,\n            final @NotNull Function<StructuredMessage, IO<Nothing>> printer,\n            final @NotNull Severity failOnSeverity)", "class_method_signature": "Options.Options(final boolean justHelp,\n            final boolean justVersion,\n            final boolean storeBlobs,\n            final @NotNull URL planUrl,\n            final @NotNull ClassLoader scanClassLoader,\n            final @NotNull File cacheDir,\n            final @Nullable File opearFile,\n            final @Nullable String planName,\n            final @Nullable File planFile,\n            final @Nullable File planFileBaseDir,\n            final @NotNull List<File> preInstallFiles,\n            final @NotNull List<File> repoInitFiles,\n            final @NotNull List<String> runModes,\n            final boolean noRunModes,\n            final @NotNull List<File> extendedClassPathFiles,\n            final boolean noHooks,\n            final @NotNull List<File> scanFiles,\n            final @NotNull Function<StructuredMessage, IO<Nothing>> printer,\n            final @NotNull Severity failOnSeverity)", "testcase": false, "constructor": true}, {"identifier": "isJustHelp", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isJustHelp()", "full_signature": "public boolean isJustHelp()", "class_method_signature": "Options.isJustHelp()", "testcase": false, "constructor": false}, {"identifier": "isJustVersion", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isJustVersion()", "full_signature": "public boolean isJustVersion()", "class_method_signature": "Options.isJustVersion()", "testcase": false, "constructor": false}, {"identifier": "isStoreBlobs", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isStoreBlobs()", "full_signature": "public boolean isStoreBlobs()", "class_method_signature": "Options.isStoreBlobs()", "testcase": false, "constructor": false}, {"identifier": "isNoHooks", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNoHooks()", "full_signature": "public boolean isNoHooks()", "class_method_signature": "Options.isNoHooks()", "testcase": false, "constructor": false}, {"identifier": "getPlanUrl", "parameters": "()", "modifiers": "public", "return": "URL", "signature": "URL getPlanUrl()", "full_signature": "public URL getPlanUrl()", "class_method_signature": "Options.getPlanUrl()", "testcase": false, "constructor": false}, {"identifier": "getScanClassLoader", "parameters": "()", "modifiers": "public", "return": "ClassLoader", "signature": "ClassLoader getScanClassLoader()", "full_signature": "public ClassLoader getScanClassLoader()", "class_method_signature": "Options.getScanClassLoader()", "testcase": false, "constructor": false}, {"identifier": "getCacheDir", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getCacheDir()", "full_signature": "public File getCacheDir()", "class_method_signature": "Options.getCacheDir()", "testcase": false, "constructor": false}, {"identifier": "getOpearFile", "parameters": "()", "modifiers": "public @Nullable", "return": "File", "signature": "File getOpearFile()", "full_signature": "public @Nullable File getOpearFile()", "class_method_signature": "Options.getOpearFile()", "testcase": false, "constructor": false}, {"identifier": "getPlanName", "parameters": "()", "modifiers": "public @Nullable", "return": "String", "signature": "String getPlanName()", "full_signature": "public @Nullable String getPlanName()", "class_method_signature": "Options.getPlanName()", "testcase": false, "constructor": false}, {"identifier": "getPlanFile", "parameters": "()", "modifiers": "public @Nullable", "return": "File", "signature": "File getPlanFile()", "full_signature": "public @Nullable File getPlanFile()", "class_method_signature": "Options.getPlanFile()", "testcase": false, "constructor": false}, {"identifier": "getPlanFileBaseDir", "parameters": "()", "modifiers": "public @Nullable", "return": "File", "signature": "File getPlanFileBaseDir()", "full_signature": "public @Nullable File getPlanFileBaseDir()", "class_method_signature": "Options.getPlanFileBaseDir()", "testcase": false, "constructor": false}, {"identifier": "getPreInstallFiles", "parameters": "()", "modifiers": "public @NotNull", "return": "List<File>", "signature": "List<File> getPreInstallFiles()", "full_signature": "public @NotNull List<File> getPreInstallFiles()", "class_method_signature": "Options.getPreInstallFiles()", "testcase": false, "constructor": false}, {"identifier": "getRepoInitFiles", "parameters": "()", "modifiers": "public @NotNull", "return": "List<File>", "signature": "List<File> getRepoInitFiles()", "full_signature": "public @NotNull List<File> getRepoInitFiles()", "class_method_signature": "Options.getRepoInitFiles()", "testcase": false, "constructor": false}, {"identifier": "getRunModes", "parameters": "()", "modifiers": "public @NotNull", "return": "List<String>", "signature": "List<String> getRunModes()", "full_signature": "public @NotNull List<String> getRunModes()", "class_method_signature": "Options.getRunModes()", "testcase": false, "constructor": false}, {"identifier": "isNoRunModes", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNoRunModes()", "full_signature": "public boolean isNoRunModes()", "class_method_signature": "Options.isNoRunModes()", "testcase": false, "constructor": false}, {"identifier": "getExtendedClassPathFiles", "parameters": "()", "modifiers": "public @NotNull", "return": "List<File>", "signature": "List<File> getExtendedClassPathFiles()", "full_signature": "public @NotNull List<File> getExtendedClassPathFiles()", "class_method_signature": "Options.getExtendedClassPathFiles()", "testcase": false, "constructor": false}, {"identifier": "getScanFiles", "parameters": "()", "modifiers": "public", "return": "List<File>", "signature": "List<File> getScanFiles()", "full_signature": "public List<File> getScanFiles()", "class_method_signature": "Options.getScanFiles()", "testcase": false, "constructor": false}, {"identifier": "getPrinter", "parameters": "()", "modifiers": "public", "return": "Function<StructuredMessage, IO<Nothing>>", "signature": "Function<StructuredMessage, IO<Nothing>> getPrinter()", "full_signature": "public Function<StructuredMessage, IO<Nothing>> getPrinter()", "class_method_signature": "Options.getPrinter()", "testcase": false, "constructor": false}, {"identifier": "getFailOnSeverity", "parameters": "()", "modifiers": "public", "return": "Severity", "signature": "Severity getFailOnSeverity()", "full_signature": "public Severity getFailOnSeverity()", "class_method_signature": "Options.getFailOnSeverity()", "testcase": false, "constructor": false}, {"identifier": "hasOverrides", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean hasOverrides()", "full_signature": " boolean hasOverrides()", "class_method_signature": "Options.hasOverrides()", "testcase": false, "constructor": false}, {"identifier": "applyOverrides", "parameters": "(final @NotNull OakpalPlan basePlan)", "modifiers": "public", "return": "OakpalPlan", "signature": "OakpalPlan applyOverrides(final @NotNull OakpalPlan basePlan)", "full_signature": "public OakpalPlan applyOverrides(final @NotNull OakpalPlan basePlan)", "class_method_signature": "Options.applyOverrides(final @NotNull OakpalPlan basePlan)", "testcase": false, "constructor": false}, {"identifier": "getRepoInitBytes", "parameters": "(final List<String> repoInits)", "modifiers": "static", "return": "byte[]", "signature": "byte[] getRepoInitBytes(final List<String> repoInits)", "full_signature": "static byte[] getRepoInitBytes(final List<String> repoInits)", "class_method_signature": "Options.getRepoInitBytes(final List<String> repoInits)", "testcase": false, "constructor": false}, {"identifier": "fileNameForRepoInitBytes", "parameters": "(final byte[] repoInitBytes)", "modifiers": "static", "return": "Result<String>", "signature": "Result<String> fileNameForRepoInitBytes(final byte[] repoInitBytes)", "full_signature": "static Result<String> fileNameForRepoInitBytes(final byte[] repoInitBytes)", "class_method_signature": "Options.fileNameForRepoInitBytes(final byte[] repoInitBytes)", "testcase": false, "constructor": false}, {"identifier": "writeToStream", "parameters": "(final @NotNull byte[] bytesToWrite,\n                                         final @NotNull Fun.ThrowingSupplier<OutputStream> streamSupplier)", "modifiers": "static", "return": "Result<Nothing>", "signature": "Result<Nothing> writeToStream(final @NotNull byte[] bytesToWrite,\n                                         final @NotNull Fun.ThrowingSupplier<OutputStream> streamSupplier)", "full_signature": "static Result<Nothing> writeToStream(final @NotNull byte[] bytesToWrite,\n                                         final @NotNull Fun.ThrowingSupplier<OutputStream> streamSupplier)", "class_method_signature": "Options.writeToStream(final @NotNull byte[] bytesToWrite,\n                                         final @NotNull Fun.ThrowingSupplier<OutputStream> streamSupplier)", "testcase": false, "constructor": false}, {"identifier": "cacheRepoInits", "parameters": "(final @NotNull File cacheDir, final @NotNull List<String> repoInits)", "modifiers": "static", "return": "Result<URL>", "signature": "Result<URL> cacheRepoInits(final @NotNull File cacheDir, final @NotNull List<String> repoInits)", "full_signature": "static Result<URL> cacheRepoInits(final @NotNull File cacheDir, final @NotNull List<String> repoInits)", "class_method_signature": "Options.cacheRepoInits(final @NotNull File cacheDir, final @NotNull List<String> repoInits)", "testcase": false, "constructor": false}, {"identifier": "messageWriter", "parameters": "(final @NotNull Console console,\n                                                                                   final boolean outputJson,\n                                                                                   final @Nullable File outFile)", "modifiers": "static @NotNull", "return": "Result<Function<StructuredMessage, IO<Nothing>>>", "signature": "Result<Function<StructuredMessage, IO<Nothing>>> messageWriter(final @NotNull Console console,\n                                                                                   final boolean outputJson,\n                                                                                   final @Nullable File outFile)", "full_signature": "static @NotNull Result<Function<StructuredMessage, IO<Nothing>>> messageWriter(final @NotNull Console console,\n                                                                                   final boolean outputJson,\n                                                                                   final @Nullable File outFile)", "class_method_signature": "Options.messageWriter(final @NotNull Console console,\n                                                                                   final boolean outputJson,\n                                                                                   final @Nullable File outFile)", "testcase": false, "constructor": false}], "file": "cli/src/main/java/net/adamcin/oakpal/cli/Options.java"}, "focal_method": {"identifier": "getPrinter", "parameters": "()", "modifiers": "public", "return": "Function<StructuredMessage, IO<Nothing>>", "body": "public Function<StructuredMessage, IO<Nothing>> getPrinter() {\n        return printer;\n    }", "signature": "Function<StructuredMessage, IO<Nothing>> getPrinter()", "full_signature": "public Function<StructuredMessage, IO<Nothing>> getPrinter()", "class_method_signature": "Options.getPrinter()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}