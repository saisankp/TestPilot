{"test_class": {"identifier": "RequestCacheControlTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundle/src/test/java/com/bazaarvoice/dropwizard/caching/RequestCacheControlTest.java"}, "test_case": {"identifier": "testToString", "parameters": "(String value)", "modifiers": "@Test(dataProvider = \"toStringData\") public", "return": "void", "body": "@Test(dataProvider = \"toStringData\")\n    public void testToString(String value) {\n        assertEquals(RequestCacheControl.valueOf(value).toString(), value);\n    }", "signature": "void testToString(String value)", "full_signature": "@Test(dataProvider = \"toStringData\") public void testToString(String value)", "class_method_signature": "RequestCacheControlTest.testToString(String value)", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toString", "valueOf"]}, "focal_class": {"identifier": "RequestCacheControl", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final RequestCacheControl DEFAULT = new RequestCacheControl();", "modifier": "public static final", "type": "RequestCacheControl", "declarator": "DEFAULT = new RequestCacheControl()", "var_name": "DEFAULT"}, {"original_string": "private static final Pattern WHITESPACE = Pattern.compile(\"\\\\s\");", "modifier": "private static final", "type": "Pattern", "declarator": "WHITESPACE = Pattern.compile(\"\\\\s\")", "var_name": "WHITESPACE"}, {"original_string": "private boolean _noCache;", "modifier": "private", "type": "boolean", "declarator": "_noCache", "var_name": "_noCache"}, {"original_string": "private boolean _noStore;", "modifier": "private", "type": "boolean", "declarator": "_noStore", "var_name": "_noStore"}, {"original_string": "private int _maxAge = -1;", "modifier": "private", "type": "int", "declarator": "_maxAge = -1", "var_name": "_maxAge"}, {"original_string": "private int _maxStale = -1;", "modifier": "private", "type": "int", "declarator": "_maxStale = -1", "var_name": "_maxStale"}, {"original_string": "private int _minFresh = -1;", "modifier": "private", "type": "int", "declarator": "_minFresh = -1", "var_name": "_minFresh"}, {"original_string": "private boolean _noTransform;", "modifier": "private", "type": "boolean", "declarator": "_noTransform", "var_name": "_noTransform"}, {"original_string": "private boolean _onlyIfCached;", "modifier": "private", "type": "boolean", "declarator": "_onlyIfCached", "var_name": "_onlyIfCached"}, {"original_string": "private Map<String, Optional<String>> _cacheExtension;", "modifier": "private", "type": "Map<String, Optional<String>>", "declarator": "_cacheExtension", "var_name": "_cacheExtension"}], "methods": [{"identifier": "valueOf", "parameters": "(String value)", "modifiers": "public static", "return": "RequestCacheControl", "signature": "RequestCacheControl valueOf(String value)", "full_signature": "public static RequestCacheControl valueOf(String value)", "class_method_signature": "RequestCacheControl.valueOf(String value)", "testcase": false, "constructor": false}, {"identifier": "isNoCache", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNoCache()", "full_signature": "public boolean isNoCache()", "class_method_signature": "RequestCacheControl.isNoCache()", "testcase": false, "constructor": false}, {"identifier": "isNoStore", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNoStore()", "full_signature": "public boolean isNoStore()", "class_method_signature": "RequestCacheControl.isNoStore()", "testcase": false, "constructor": false}, {"identifier": "getMaxAge", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxAge()", "full_signature": "public int getMaxAge()", "class_method_signature": "RequestCacheControl.getMaxAge()", "testcase": false, "constructor": false}, {"identifier": "getMaxStale", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxStale()", "full_signature": "public int getMaxStale()", "class_method_signature": "RequestCacheControl.getMaxStale()", "testcase": false, "constructor": false}, {"identifier": "getMinFresh", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMinFresh()", "full_signature": "public int getMinFresh()", "class_method_signature": "RequestCacheControl.getMinFresh()", "testcase": false, "constructor": false}, {"identifier": "isNoTransform", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNoTransform()", "full_signature": "public boolean isNoTransform()", "class_method_signature": "RequestCacheControl.isNoTransform()", "testcase": false, "constructor": false}, {"identifier": "isOnlyIfCached", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isOnlyIfCached()", "full_signature": "public boolean isOnlyIfCached()", "class_method_signature": "RequestCacheControl.isOnlyIfCached()", "testcase": false, "constructor": false}, {"identifier": "getCacheExtension", "parameters": "()", "modifiers": "public", "return": "Map<String, Optional<String>>", "signature": "Map<String, Optional<String>> getCacheExtension()", "full_signature": "public Map<String, Optional<String>> getCacheExtension()", "class_method_signature": "RequestCacheControl.getCacheExtension()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "RequestCacheControl.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "RequestCacheControl.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "RequestCacheControl.toString()", "testcase": false, "constructor": false}, {"identifier": "appendDirective", "parameters": "(StringBuilder buffer, String key)", "modifiers": "private static", "return": "void", "signature": "void appendDirective(StringBuilder buffer, String key)", "full_signature": "private static void appendDirective(StringBuilder buffer, String key)", "class_method_signature": "RequestCacheControl.appendDirective(StringBuilder buffer, String key)", "testcase": false, "constructor": false}, {"identifier": "appendDirective", "parameters": "(StringBuilder buffer, String key, int value)", "modifiers": "private static", "return": "void", "signature": "void appendDirective(StringBuilder buffer, String key, int value)", "full_signature": "private static void appendDirective(StringBuilder buffer, String key, int value)", "class_method_signature": "RequestCacheControl.appendDirective(StringBuilder buffer, String key, int value)", "testcase": false, "constructor": false}, {"identifier": "appendDirective", "parameters": "(StringBuilder buffer, String key, Optional<String> value)", "modifiers": "private static", "return": "void", "signature": "void appendDirective(StringBuilder buffer, String key, Optional<String> value)", "full_signature": "private static void appendDirective(StringBuilder buffer, String key, Optional<String> value)", "class_method_signature": "RequestCacheControl.appendDirective(StringBuilder buffer, String key, Optional<String> value)", "testcase": false, "constructor": false}, {"identifier": "quoteDirective", "parameters": "(String value)", "modifiers": "private static", "return": "String", "signature": "String quoteDirective(String value)", "full_signature": "private static String quoteDirective(String value)", "class_method_signature": "RequestCacheControl.quoteDirective(String value)", "testcase": false, "constructor": false}, {"identifier": "readDeltaSeconds", "parameters": "(HttpHeaderReader reader, String directiveName)", "modifiers": "private static", "return": "int", "signature": "int readDeltaSeconds(HttpHeaderReader reader, String directiveName)", "full_signature": "private static int readDeltaSeconds(HttpHeaderReader reader, String directiveName)", "class_method_signature": "RequestCacheControl.readDeltaSeconds(HttpHeaderReader reader, String directiveName)", "testcase": false, "constructor": false}], "file": "bundle/src/main/java/com/bazaarvoice/dropwizard/caching/RequestCacheControl.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        StringBuilder buffer = new StringBuilder();\n\n        if (_noCache) {\n            appendDirective(buffer, \"no-cache\");\n        }\n\n        if (_noStore) {\n            appendDirective(buffer, \"no-store\");\n        }\n\n        if (_maxAge >= 0) {\n            appendDirective(buffer, \"max-age\", _maxAge);\n        }\n\n        if (_maxStale == Integer.MAX_VALUE) {\n            appendDirective(buffer, \"max-stale\");\n        } else if (_maxStale >= 0) {\n            appendDirective(buffer, \"max-stale\", _maxStale);\n        }\n\n        if (_minFresh >= 0) {\n            appendDirective(buffer, \"min-fresh\", _minFresh);\n        }\n\n        if (_noTransform) {\n            appendDirective(buffer, \"no-transform\");\n        }\n\n        if (_onlyIfCached) {\n            appendDirective(buffer, \"only-if-cached\");\n        }\n\n        if (_cacheExtension != null) {\n            for (Map.Entry<String, Optional<String>> entry : _cacheExtension.entrySet()) {\n                appendDirective(buffer, entry.getKey(), entry.getValue());\n            }\n        }\n\n        return buffer.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "RequestCacheControl.toString()", "testcase": false, "constructor": false, "invocations": ["appendDirective", "appendDirective", "appendDirective", "appendDirective", "appendDirective", "appendDirective", "appendDirective", "appendDirective", "entrySet", "appendDirective", "getKey", "getValue", "toString"]}, "repository": {"repo_id": 21859706, "url": "https://github.com/bazaarvoice/dropwizard-caching-bundle", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 7, "size": 167, "license": "licensed"}}