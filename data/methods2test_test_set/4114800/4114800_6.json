{"test_class": {"identifier": "MarkovChainLanguageModelTest", "superclass": "", "interfaces": "", "fields": [], "file": "text/nlp/src/test/java/org/openimaj/text/nlp/language/MarkovChainLanguageModelTest.java"}, "test_case": {"identifier": "testGenerateWarAndPeace", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGenerateWarAndPeace() throws IOException {\n\t\tfinal MarkovChainLanguageModel model = new MarkovChainLanguageModel();\n\t\tmodel.train(Locale.ENGLISH,\n\t\t\t\tMarkovChainLanguageModel.class.getResourceAsStream(\"/org/openimaj/text/nlp/warandpeace.txt\"));\n\t\tmodel.train(Locale.CHINESE,\n\t\t\t\tMarkovChainLanguageModel.class.getResourceAsStream(\"/org/openimaj/text/nlp/TouPengHsienHua.txt\"));\n\t}", "signature": "void testGenerateWarAndPeace()", "full_signature": "@Test public void testGenerateWarAndPeace()", "class_method_signature": "MarkovChainLanguageModelTest.testGenerateWarAndPeace()", "testcase": true, "constructor": false, "invocations": ["train", "getResourceAsStream", "train", "getResourceAsStream"]}, "focal_class": {"identifier": "MarkovChainLanguageModel", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Map<Locale, Matrix> chains = new HashMap<Locale, Matrix>();", "modifier": "private", "type": "Map<Locale, Matrix>", "declarator": "chains = new HashMap<Locale, Matrix>()", "var_name": "chains"}, {"original_string": "private Map<Locale, long[]> chainCounts = new HashMap<Locale, long[]>();", "modifier": "private", "type": "Map<Locale, long[]>", "declarator": "chainCounts = new HashMap<Locale, long[]>()", "var_name": "chainCounts"}], "methods": [{"identifier": "MarkovChainLanguageModel", "parameters": "()", "modifiers": "public", "return": "", "signature": " MarkovChainLanguageModel()", "full_signature": "public  MarkovChainLanguageModel()", "class_method_signature": "MarkovChainLanguageModel.MarkovChainLanguageModel()", "testcase": false, "constructor": true}, {"identifier": "train", "parameters": "(Locale language, String example, String encoding)", "modifiers": "public", "return": "void", "signature": "void train(Locale language, String example, String encoding)", "full_signature": "public void train(Locale language, String example, String encoding)", "class_method_signature": "MarkovChainLanguageModel.train(Locale language, String example, String encoding)", "testcase": false, "constructor": false}, {"identifier": "train", "parameters": "(Locale language, InputStream stream)", "modifiers": "public", "return": "void", "signature": "void train(Locale language, InputStream stream)", "full_signature": "public void train(Locale language, InputStream stream)", "class_method_signature": "MarkovChainLanguageModel.train(Locale language, InputStream stream)", "testcase": false, "constructor": false}, {"identifier": "generate", "parameters": "(Locale language, int length, String encoding)", "modifiers": "public", "return": "String", "signature": "String generate(Locale language, int length, String encoding)", "full_signature": "public String generate(Locale language, int length, String encoding)", "class_method_signature": "MarkovChainLanguageModel.generate(Locale language, int length, String encoding)", "testcase": false, "constructor": false}], "file": "text/nlp/src/main/java/org/openimaj/text/nlp/language/MarkovChainLanguageModel.java"}, "focal_method": {"identifier": "train", "parameters": "(Locale language, String example, String encoding)", "modifiers": "public", "return": "void", "body": "public void train(Locale language, String example, String encoding) throws UnsupportedEncodingException {\n\t\tif (!chains.containsKey(language)) {\n\t\t\tchains.put(language, new Matrix(256 + 1, 256 + 1));\n\t\t\tchainCounts.put(language, new long[256 + 1]);\n\t\t}\n\n\t\tfinal Matrix chain = chains.get(language);\n\t\tfinal long[] chainCount = chainCounts.get(language);\n\t\tfinal byte[] data = example.getBytes(encoding);\n\n\t\tint currentIndex = 0;\n\t\tfinal double[][] chainData = chain.getArray();\n\t\tfor (final byte b : data) {\n\t\t\tfinal int newIndex = (b & 0xff) + 1;\n\t\t\tchainData[currentIndex][newIndex] = chainData[currentIndex][newIndex] + 1;\n\t\t\tchainCount[currentIndex] += 1;\n\t\t\tcurrentIndex = newIndex;\n\t\t}\n\n\t}", "signature": "void train(Locale language, String example, String encoding)", "full_signature": "public void train(Locale language, String example, String encoding)", "class_method_signature": "MarkovChainLanguageModel.train(Locale language, String example, String encoding)", "testcase": false, "constructor": false, "invocations": ["containsKey", "put", "put", "get", "get", "getBytes", "getArray"]}, "repository": {"repo_id": 4114800, "url": "https://github.com/sinjax/trendminer-java", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 10, "size": 209307, "license": "licensed"}}