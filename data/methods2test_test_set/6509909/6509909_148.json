{"test_class": {"identifier": "FizzBuzzTest", "superclass": "", "interfaces": "", "fields": [], "file": "fizzBuzz/20151204-dom_and_alex/src/test/java/FizzBuzzTest.java"}, "test_case": {"identifier": "whenWeRunItWithFiveTheOutputIsTheBuzz", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void whenWeRunItWithFiveTheOutputIsTheBuzz() {\n        FizzBuzz fizzBuzz = new FizzBuzz();\n\n        assertThat(fizzBuzz.output(5)).isEqualTo(\"Buzz\");\n    }", "signature": "void whenWeRunItWithFiveTheOutputIsTheBuzz()", "full_signature": "@Test public void whenWeRunItWithFiveTheOutputIsTheBuzz()", "class_method_signature": "FizzBuzzTest.whenWeRunItWithFiveTheOutputIsTheBuzz()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "output"]}, "focal_class": {"identifier": "FizzBuzz", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "output", "parameters": "(int input)", "modifiers": "public", "return": "String", "signature": "String output(int input)", "full_signature": "public String output(int input)", "class_method_signature": "FizzBuzz.output(int input)", "testcase": false, "constructor": false}, {"identifier": "modulo", "parameters": "(int input, int modulo)", "modifiers": "private", "return": "boolean", "signature": "boolean modulo(int input, int modulo)", "full_signature": "private boolean modulo(int input, int modulo)", "class_method_signature": "FizzBuzz.modulo(int input, int modulo)", "testcase": false, "constructor": false}], "file": "fizzBuzz/20151204-dom_and_alex/src/main/java/FizzBuzz.java"}, "focal_method": {"identifier": "output", "parameters": "(int input)", "modifiers": "public", "return": "String", "body": "public String output(int input) {\n        String output = \"\";\n        if (modulo(input, 3)) {\n            output += \"Fizz\";\n        }\n        if (modulo(input, 5)) {\n            output += \"Buzz\";\n        }\n        if (output.length() != 0) {\n            return output;\n        }\n        return String.valueOf(input);\n    }", "signature": "String output(int input)", "full_signature": "public String output(int input)", "class_method_signature": "FizzBuzz.output(int input)", "testcase": false, "constructor": false, "invocations": ["modulo", "modulo", "length", "valueOf"]}, "repository": {"repo_id": 6509909, "url": "https://github.com/novoda/dojos", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 72, "size": 12987, "license": "licensed"}}