{"test_class": {"identifier": "HerdRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    private BuildInformation buildInformation;", "modifier": "@Mock\n    private", "type": "BuildInformation", "declarator": "buildInformation", "var_name": "buildInformation"}, {"original_string": "@InjectMocks\n    private HerdRestController herdRestController;", "modifier": "@InjectMocks\n    private", "type": "HerdRestController", "declarator": "herdRestController", "var_name": "herdRestController"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/HerdRestControllerTest.java"}, "test_case": {"identifier": "testGetTimeoutValidationNegativeNumber", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetTimeoutValidationNegativeNumber() throws InterruptedException {\n        try\n        {\n            herdRestController.getTimeoutValidation(-1);\n            fail(\"Expected an IllegalArgumentException to be thrown\");\n        } catch (IllegalArgumentException e) {\n            assertEquals(\"Specified value \\\"-1\\\" does not fall within the range of 0 to 1800 seconds.\", e.getMessage());\n        }\n    }", "signature": "void testGetTimeoutValidationNegativeNumber()", "full_signature": "@Test public void testGetTimeoutValidationNegativeNumber()", "class_method_signature": "HerdRestControllerTest.testGetTimeoutValidationNegativeNumber()", "testcase": true, "constructor": false, "invocations": ["getTimeoutValidation", "fail", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "HerdRestController", "superclass": "extends HerdBaseController", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private BuildInformation buildInformation;", "modifier": "@Autowired\n    private", "type": "BuildInformation", "declarator": "buildInformation", "var_name": "buildInformation"}, {"original_string": "private final static Integer MAX_WAIT_FOR_SECONDS = 1800;", "modifier": "private final static", "type": "Integer", "declarator": "MAX_WAIT_FOR_SECONDS = 1800", "var_name": "MAX_WAIT_FOR_SECONDS"}], "methods": [{"identifier": "getBuildInfo", "parameters": "()", "modifiers": "@ApiOperation(value = \"Gets the build information\") @RequestMapping(value = \"/buildInfo\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_BUILD_INFO_GET) public", "return": "BuildInformation", "signature": "BuildInformation getBuildInfo()", "full_signature": "@ApiOperation(value = \"Gets the build information\") @RequestMapping(value = \"/buildInfo\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_BUILD_INFO_GET) public BuildInformation getBuildInfo()", "class_method_signature": "HerdRestController.getBuildInfo()", "testcase": false, "constructor": false}, {"identifier": "getTimeoutValidation", "parameters": "(@RequestParam(value = \"waitForSeconds\") Integer waitForSeconds)", "modifiers": "@ApiOperation(value = \"Validates infrastructure timeouts\", hidden = true) @RequestMapping(value = \"/timeoutValidation\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_TIMEOUT_VALIDATION_GET) public", "return": "TimeoutValidationResponse", "signature": "TimeoutValidationResponse getTimeoutValidation(@RequestParam(value = \"waitForSeconds\") Integer waitForSeconds)", "full_signature": "@ApiOperation(value = \"Validates infrastructure timeouts\", hidden = true) @RequestMapping(value = \"/timeoutValidation\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_TIMEOUT_VALIDATION_GET) public TimeoutValidationResponse getTimeoutValidation(@RequestParam(value = \"waitForSeconds\") Integer waitForSeconds)", "class_method_signature": "HerdRestController.getTimeoutValidation(@RequestParam(value = \"waitForSeconds\") Integer waitForSeconds)", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/HerdRestController.java"}, "focal_method": {"identifier": "getTimeoutValidation", "parameters": "(@RequestParam(value = \"waitForSeconds\") Integer waitForSeconds)", "modifiers": "@ApiOperation(value = \"Validates infrastructure timeouts\", hidden = true) @RequestMapping(value = \"/timeoutValidation\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_TIMEOUT_VALIDATION_GET) public", "return": "TimeoutValidationResponse", "body": "@ApiOperation(value = \"Validates infrastructure timeouts\", hidden = true)\n    @RequestMapping(value = \"/timeoutValidation\", method = RequestMethod.GET)\n    @Secured(SecurityFunctions.FN_TIMEOUT_VALIDATION_GET)\n    public TimeoutValidationResponse getTimeoutValidation(@RequestParam(value = \"waitForSeconds\") Integer waitForSeconds) throws InterruptedException\n    {\n        Assert.isTrue(waitForSeconds != null, \"waitForSeconds query parameter is required.\");\n        Assert.isTrue(waitForSeconds >= 0 && waitForSeconds <= MAX_WAIT_FOR_SECONDS,\n            \"Specified value \\\"\" + waitForSeconds +\"\\\" does not fall within the range of 0 to 1800 seconds.\");\n        Thread.sleep(waitForSeconds * 1000L);\n        return new TimeoutValidationResponse(\"Successfully waited for \" + waitForSeconds + \" seconds.\");\n    }", "signature": "TimeoutValidationResponse getTimeoutValidation(@RequestParam(value = \"waitForSeconds\") Integer waitForSeconds)", "full_signature": "@ApiOperation(value = \"Validates infrastructure timeouts\", hidden = true) @RequestMapping(value = \"/timeoutValidation\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_TIMEOUT_VALIDATION_GET) public TimeoutValidationResponse getTimeoutValidation(@RequestParam(value = \"waitForSeconds\") Integer waitForSeconds)", "class_method_signature": "HerdRestController.getTimeoutValidation(@RequestParam(value = \"waitForSeconds\") Integer waitForSeconds)", "testcase": false, "constructor": false, "invocations": ["isTrue", "isTrue", "sleep"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}