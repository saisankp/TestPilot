{"test_class": {"identifier": "MirageTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [], "file": "library/src/test/java/com/climate/mirage/MirageTest.java"}, "test_case": {"identifier": "testLoadFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLoadFile() throws Exception {\n        Mirage mirage = new Mirage(RuntimeEnvironment.application);\n        File file = new File(RuntimeEnvironment.application.getCacheDir(), \"file.jpg\");\n        MirageRequest request = mirage.load(file);\n        Assert.assertEquals(Uri.fromFile(file), request.uri());\n    }", "signature": "void testLoadFile()", "full_signature": "@Test public void testLoadFile()", "class_method_signature": "MirageTest.testLoadFile()", "testcase": true, "constructor": false, "invocations": ["getCacheDir", "load", "assertEquals", "fromFile", "uri"]}, "focal_class": {"identifier": "Mirage", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final Executor THREAD_POOL_EXECUTOR = new MirageExecutor();", "modifier": "public static final", "type": "Executor", "declarator": "THREAD_POOL_EXECUTOR = new MirageExecutor()", "var_name": "THREAD_POOL_EXECUTOR"}, {"original_string": "private static final String TAG = Mirage.class.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "TAG = Mirage.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "private static Mirage mirage;", "modifier": "private static", "type": "Mirage", "declarator": "mirage", "var_name": "mirage"}, {"original_string": "private Executor defaultExecutor;", "modifier": "private", "type": "Executor", "declarator": "defaultExecutor", "var_name": "defaultExecutor"}, {"original_string": "private MemoryCache<String, Bitmap> defaultMemoryCache;", "modifier": "private", "type": "MemoryCache<String, Bitmap>", "declarator": "defaultMemoryCache", "var_name": "defaultMemoryCache"}, {"original_string": "private DiskCache defaultDiskCache;", "modifier": "private", "type": "DiskCache", "declarator": "defaultDiskCache", "var_name": "defaultDiskCache"}, {"original_string": "private UrlFactory defaultUrlConnectionFactory;", "modifier": "private", "type": "UrlFactory", "declarator": "defaultUrlConnectionFactory", "var_name": "defaultUrlConnectionFactory"}, {"original_string": "private Map<Object, MirageTask> runningRequests;", "modifier": "private", "type": "Map<Object, MirageTask>", "declarator": "runningRequests", "var_name": "runningRequests"}, {"original_string": "private LoadErrorManager loadErrorManager;", "modifier": "private", "type": "LoadErrorManager", "declarator": "loadErrorManager", "var_name": "loadErrorManager"}, {"original_string": "private ObjectPool<MirageRequest> requestObjectPool;", "modifier": "private", "type": "ObjectPool<MirageRequest>", "declarator": "requestObjectPool", "var_name": "requestObjectPool"}, {"original_string": "private Context applicationContext;", "modifier": "private", "type": "Context", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private ActivityLifecycleStub activityLifecycles;", "modifier": "private", "type": "ActivityLifecycleStub", "declarator": "activityLifecycles", "var_name": "activityLifecycles"}, {"original_string": "private BitmapTask.Callback<Bitmap> bitmapGoTaskCallback = new BitmapTask.Callback<Bitmap>() {\n\t\t@Override\n\t\tpublic void onCancel(MirageTask task, MirageRequest request) {\n\t\t\tremoveSavedTask(request, task);\n\t\t\trequestObjectPool.recycle(request);\n\t\t}\n\n\t\t@Override\n\t\tpublic void onPostExecute(MirageTask task, MirageRequest request, Bitmap bitmap) {\n\t\t\tremoveSavedTask(request, task);\n\t\t\trequestObjectPool.recycle(request);\n\t\t}\n\t};", "modifier": "private", "type": "BitmapTask.Callback<Bitmap>", "declarator": "bitmapGoTaskCallback = new BitmapTask.Callback<Bitmap>() {\n\t\t@Override\n\t\tpublic void onCancel(MirageTask task, MirageRequest request) {\n\t\t\tremoveSavedTask(request, task);\n\t\t\trequestObjectPool.recycle(request);\n\t\t}\n\n\t\t@Override\n\t\tpublic void onPostExecute(MirageTask task, MirageRequest request, Bitmap bitmap) {\n\t\t\tremoveSavedTask(request, task);\n\t\t\trequestObjectPool.recycle(request);\n\t\t}\n\t}", "var_name": "bitmapGoTaskCallback"}, {"original_string": "private BitmapDownloadTask.Callback<File> downloadTaskCallback = new BitmapDownloadTask.Callback<File>() {\n\t\t@Override\n\t\tpublic void onCancel(MirageTask task, MirageRequest request) {\n\t\t\tremoveSavedTask(request, task);\n\t\t\trequestObjectPool.recycle(request);\n\t\t}\n\n\t\t@Override\n\t\tpublic void onPostExecute(MirageTask task, MirageRequest request, File file) {\n\t\t\tremoveSavedTask(request, task);\n\t\t\trequestObjectPool.recycle(request);\n\t\t}\n\t};", "modifier": "private", "type": "BitmapDownloadTask.Callback<File>", "declarator": "downloadTaskCallback = new BitmapDownloadTask.Callback<File>() {\n\t\t@Override\n\t\tpublic void onCancel(MirageTask task, MirageRequest request) {\n\t\t\tremoveSavedTask(request, task);\n\t\t\trequestObjectPool.recycle(request);\n\t\t}\n\n\t\t@Override\n\t\tpublic void onPostExecute(MirageTask task, MirageRequest request, File file) {\n\t\t\tremoveSavedTask(request, task);\n\t\t\trequestObjectPool.recycle(request);\n\t\t}\n\t}", "var_name": "downloadTaskCallback"}], "methods": [{"identifier": "Mirage", "parameters": "(Context applicationContext)", "modifiers": "public", "return": "", "signature": " Mirage(Context applicationContext)", "full_signature": "public  Mirage(Context applicationContext)", "class_method_signature": "Mirage.Mirage(Context applicationContext)", "testcase": false, "constructor": true}, {"identifier": "set", "parameters": "(Mirage mirage)", "modifiers": "synchronized public static", "return": "void", "signature": "void set(Mirage mirage)", "full_signature": "synchronized public static void set(Mirage mirage)", "class_method_signature": "Mirage.set(Mirage mirage)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Context context)", "modifiers": "synchronized public static", "return": "Mirage", "signature": "Mirage get(Context context)", "full_signature": "synchronized public static Mirage get(Context context)", "class_method_signature": "Mirage.get(Context context)", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void dispose()", "full_signature": "public void dispose()", "class_method_signature": "Mirage.dispose()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(String uri)", "modifiers": "public", "return": "MirageRequest", "signature": "MirageRequest load(String uri)", "full_signature": "public MirageRequest load(String uri)", "class_method_signature": "Mirage.load(String uri)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(File file)", "modifiers": "public", "return": "MirageRequest", "signature": "MirageRequest load(File file)", "full_signature": "public MirageRequest load(File file)", "class_method_signature": "Mirage.load(File file)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(@AnyRes int resId)", "modifiers": "public", "return": "MirageRequest", "signature": "MirageRequest load(@AnyRes int resId)", "full_signature": "public MirageRequest load(@AnyRes int resId)", "class_method_signature": "Mirage.load(@AnyRes int resId)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(BitmapProvider provider)", "modifiers": "public", "return": "MirageRequest", "signature": "MirageRequest load(BitmapProvider provider)", "full_signature": "public MirageRequest load(BitmapProvider provider)", "class_method_signature": "Mirage.load(BitmapProvider provider)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(Uri uri)", "modifiers": "public", "return": "MirageRequest", "signature": "MirageRequest load(Uri uri)", "full_signature": "public MirageRequest load(Uri uri)", "class_method_signature": "Mirage.load(Uri uri)", "testcase": false, "constructor": false}, {"identifier": "go", "parameters": "(MirageRequest request)", "modifiers": "@MainThread public", "return": "MirageTask", "signature": "MirageTask go(MirageRequest request)", "full_signature": "@MainThread public MirageTask go(MirageRequest request)", "class_method_signature": "Mirage.go(MirageRequest request)", "testcase": false, "constructor": false}, {"identifier": "createGoTask", "parameters": "(MirageRequest request)", "modifiers": "public", "return": "MirageTask<Void, Void, Bitmap>", "signature": "MirageTask<Void, Void, Bitmap> createGoTask(MirageRequest request)", "full_signature": "public MirageTask<Void, Void, Bitmap> createGoTask(MirageRequest request)", "class_method_signature": "Mirage.createGoTask(MirageRequest request)", "testcase": false, "constructor": false}, {"identifier": "executeGoTask", "parameters": "(MirageTask<Void, Void, Bitmap> task, MirageRequest request)", "modifiers": "public", "return": "MirageTask<Void, Void, Bitmap>", "signature": "MirageTask<Void, Void, Bitmap> executeGoTask(MirageTask<Void, Void, Bitmap> task, MirageRequest request)", "full_signature": "public MirageTask<Void, Void, Bitmap> executeGoTask(MirageTask<Void, Void, Bitmap> task, MirageRequest request)", "class_method_signature": "Mirage.executeGoTask(MirageTask<Void, Void, Bitmap> task, MirageRequest request)", "testcase": false, "constructor": false}, {"identifier": "goSync", "parameters": "(MirageRequest request)", "modifiers": "@WorkerThread public", "return": "Bitmap", "signature": "Bitmap goSync(MirageRequest request)", "full_signature": "@WorkerThread public Bitmap goSync(MirageRequest request)", "class_method_signature": "Mirage.goSync(MirageRequest request)", "testcase": false, "constructor": false}, {"identifier": "downloadOnly", "parameters": "(MirageRequest request)", "modifiers": "public", "return": "MirageTask", "signature": "MirageTask downloadOnly(MirageRequest request)", "full_signature": "public MirageTask downloadOnly(MirageRequest request)", "class_method_signature": "Mirage.downloadOnly(MirageRequest request)", "testcase": false, "constructor": false}, {"identifier": "downloadOnlySync", "parameters": "(MirageRequest request)", "modifiers": "public", "return": "File", "signature": "File downloadOnlySync(MirageRequest request)", "full_signature": "public File downloadOnlySync(MirageRequest request)", "class_method_signature": "Mirage.downloadOnlySync(MirageRequest request)", "testcase": false, "constructor": false}, {"identifier": "cancelRequest", "parameters": "(Target target)", "modifiers": "public", "return": "void", "signature": "void cancelRequest(Target target)", "full_signature": "public void cancelRequest(Target target)", "class_method_signature": "Mirage.cancelRequest(Target target)", "testcase": false, "constructor": false}, {"identifier": "cancelRequest", "parameters": "(View view)", "modifiers": "public", "return": "void", "signature": "void cancelRequest(View view)", "full_signature": "public void cancelRequest(View view)", "class_method_signature": "Mirage.cancelRequest(View view)", "testcase": false, "constructor": false}, {"identifier": "clearCache", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearCache()", "full_signature": "public void clearCache()", "class_method_signature": "Mirage.clearCache()", "testcase": false, "constructor": false}, {"identifier": "removeFromCache", "parameters": "(MirageRequest request)", "modifiers": "public", "return": "void", "signature": "void removeFromCache(MirageRequest request)", "full_signature": "public void removeFromCache(MirageRequest request)", "class_method_signature": "Mirage.removeFromCache(MirageRequest request)", "testcase": false, "constructor": false}, {"identifier": "clearMemoryCache", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearMemoryCache()", "full_signature": "public void clearMemoryCache()", "class_method_signature": "Mirage.clearMemoryCache()", "testcase": false, "constructor": false}, {"identifier": "clearDiskCache", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearDiskCache()", "full_signature": "public void clearDiskCache()", "class_method_signature": "Mirage.clearDiskCache()", "testcase": false, "constructor": false}, {"identifier": "setDefaultUrlConnectionFactory", "parameters": "(UrlFactory defaultUrlConnectionFactory)", "modifiers": "public", "return": "void", "signature": "void setDefaultUrlConnectionFactory(UrlFactory defaultUrlConnectionFactory)", "full_signature": "public void setDefaultUrlConnectionFactory(UrlFactory defaultUrlConnectionFactory)", "class_method_signature": "Mirage.setDefaultUrlConnectionFactory(UrlFactory defaultUrlConnectionFactory)", "testcase": false, "constructor": false}, {"identifier": "getDefaultExecutor", "parameters": "()", "modifiers": "public", "return": "Executor", "signature": "Executor getDefaultExecutor()", "full_signature": "public Executor getDefaultExecutor()", "class_method_signature": "Mirage.getDefaultExecutor()", "testcase": false, "constructor": false}, {"identifier": "setDefaultExecutor", "parameters": "(Executor defaultExecutor)", "modifiers": "public", "return": "Mirage", "signature": "Mirage setDefaultExecutor(Executor defaultExecutor)", "full_signature": "public Mirage setDefaultExecutor(Executor defaultExecutor)", "class_method_signature": "Mirage.setDefaultExecutor(Executor defaultExecutor)", "testcase": false, "constructor": false}, {"identifier": "setDefaultMemoryCache", "parameters": "(MemoryCache<String, Bitmap> defaultMemoryCache)", "modifiers": "public", "return": "Mirage", "signature": "Mirage setDefaultMemoryCache(MemoryCache<String, Bitmap> defaultMemoryCache)", "full_signature": "public Mirage setDefaultMemoryCache(MemoryCache<String, Bitmap> defaultMemoryCache)", "class_method_signature": "Mirage.setDefaultMemoryCache(MemoryCache<String, Bitmap> defaultMemoryCache)", "testcase": false, "constructor": false}, {"identifier": "getDefaultMemoryCache", "parameters": "()", "modifiers": "public", "return": "MemoryCache<String, Bitmap>", "signature": "MemoryCache<String, Bitmap> getDefaultMemoryCache()", "full_signature": "public MemoryCache<String, Bitmap> getDefaultMemoryCache()", "class_method_signature": "Mirage.getDefaultMemoryCache()", "testcase": false, "constructor": false}, {"identifier": "setDefaultDiskCache", "parameters": "(DiskCache defaultDiskCache)", "modifiers": "public", "return": "Mirage", "signature": "Mirage setDefaultDiskCache(DiskCache defaultDiskCache)", "full_signature": "public Mirage setDefaultDiskCache(DiskCache defaultDiskCache)", "class_method_signature": "Mirage.setDefaultDiskCache(DiskCache defaultDiskCache)", "testcase": false, "constructor": false}, {"identifier": "getDefaultDiskCache", "parameters": "()", "modifiers": "public", "return": "DiskCache", "signature": "DiskCache getDefaultDiskCache()", "full_signature": "public DiskCache getDefaultDiskCache()", "class_method_signature": "Mirage.getDefaultDiskCache()", "testcase": false, "constructor": false}, {"identifier": "isMainThread", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isMainThread()", "full_signature": "private boolean isMainThread()", "class_method_signature": "Mirage.isMainThread()", "testcase": false, "constructor": false}, {"identifier": "getLoadError", "parameters": "(String id)", "modifiers": "private", "return": "LoadError", "signature": "LoadError getLoadError(String id)", "full_signature": "private LoadError getLoadError(String id)", "class_method_signature": "Mirage.getLoadError(String id)", "testcase": false, "constructor": false}, {"identifier": "addRequestToList", "parameters": "(MirageRequest request, MirageTask task)", "modifiers": "private", "return": "void", "signature": "void addRequestToList(MirageRequest request, MirageTask task)", "full_signature": "private void addRequestToList(MirageRequest request, MirageTask task)", "class_method_signature": "Mirage.addRequestToList(MirageRequest request, MirageTask task)", "testcase": false, "constructor": false}, {"identifier": "removeSavedTask", "parameters": "(MirageRequest request, AsyncTask task)", "modifiers": "private", "return": "void", "signature": "void removeSavedTask(MirageRequest request, AsyncTask task)", "full_signature": "private void removeSavedTask(MirageRequest request, AsyncTask task)", "class_method_signature": "Mirage.removeSavedTask(MirageRequest request, AsyncTask task)", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/climate/mirage/Mirage.java"}, "focal_method": {"identifier": "load", "parameters": "(String uri)", "modifiers": "public", "return": "MirageRequest", "body": "public MirageRequest load(String uri) {\n\t\tif (TextUtils.isEmpty(uri)) return load((Uri)null);\n\t\treturn load(Uri.parse(uri));\n\t}", "signature": "MirageRequest load(String uri)", "full_signature": "public MirageRequest load(String uri)", "class_method_signature": "Mirage.load(String uri)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "load", "load", "parse"]}, "repository": {"repo_id": 35564219, "url": "https://github.com/TheClimateCorporation/mirage", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 3928, "license": "licensed"}}