{"test_class": {"identifier": "AttrIntegerTest", "superclass": "extends TestBase", "interfaces": "", "fields": [], "file": "core/src/test/java/org/carrot2/attrs/AttrIntegerTest.java"}, "test_case": {"identifier": "testToFromMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testToFromMap() {\n    class Clazz extends AttrComposite {\n      public AttrInteger defValue =\n          attributes.register(\"defValue\", AttrInteger.builder().defaultValue(42));\n      public AttrInteger nullValue =\n          attributes.register(\"nullValue\", AttrInteger.builder().defaultValue(null));\n      public AttrInteger otherValue =\n          attributes.register(\"otherValue\", AttrInteger.builder().defaultValue(null));\n    }\n\n    AliasMapper mapper = new AliasMapper();\n    mapper.alias(\"clazz\", Clazz.class, () -> new Clazz());\n\n    Clazz ob = new Clazz();\n    ob.otherValue.set(24);\n\n    Assertions.assertThat(Attrs.toMap(ob, mapper::toName))\n        .containsEntry(\"defValue\", 42)\n        .containsEntry(\"nullValue\", null)\n        .containsEntry(\"otherValue\", 24);\n\n    Clazz clazz = Attrs.fromMap(Clazz.class, Attrs.toMap(ob, mapper::toName), mapper::fromName);\n    Assertions.assertThat(clazz.defValue.get()).isEqualTo(42);\n    Assertions.assertThat(clazz.nullValue.get()).isNull();\n    Assertions.assertThat(clazz.otherValue.get()).isEqualTo(24);\n  }", "signature": "void testToFromMap()", "full_signature": "@Test public void testToFromMap()", "class_method_signature": "AttrIntegerTest.testToFromMap()", "testcase": true, "constructor": false, "invocations": ["register", "defaultValue", "builder", "register", "defaultValue", "builder", "register", "defaultValue", "builder", "alias", "set", "containsEntry", "containsEntry", "containsEntry", "assertThat", "toMap", "fromMap", "toMap", "isEqualTo", "assertThat", "get", "isNull", "assertThat", "get", "isEqualTo", "assertThat", "get"]}, "focal_class": {"identifier": "AttrInteger", "superclass": "extends Attr<Integer>", "interfaces": "", "fields": [], "methods": [{"identifier": "AttrInteger", "parameters": "(\n      Integer value, List<? extends Constraint<? super Integer>> constraint, String label)", "modifiers": "private", "return": "", "signature": " AttrInteger(\n      Integer value, List<? extends Constraint<? super Integer>> constraint, String label)", "full_signature": "private  AttrInteger(\n      Integer value, List<? extends Constraint<? super Integer>> constraint, String label)", "class_method_signature": "AttrInteger.AttrInteger(\n      Integer value, List<? extends Constraint<? super Integer>> constraint, String label)", "testcase": false, "constructor": true}, {"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder builder()", "full_signature": "public static Builder builder()", "class_method_signature": "AttrInteger.builder()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/carrot2/attrs/AttrInteger.java"}, "focal_method": {"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "Builder", "body": "public static Builder builder() {\n    return new Builder();\n  }", "signature": "Builder builder()", "full_signature": "public static Builder builder()", "class_method_signature": "AttrInteger.builder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2424377, "url": "https://github.com/carrot2/carrot2", "stars": 393, "created": "9/20/2011 6:19:05 PM +00:00", "updates": "2020-01-24T20:43:38+00:00", "fork": "False", "license": "licensed"}}