{"test_class": {"identifier": "Neo4JDriverDecoratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ExecutionContext ctx;", "modifier": "@Mock\n    private", "type": "ExecutionContext", "declarator": "ctx", "var_name": "ctx"}, {"original_string": "@Mock\n    private TestInvocation invocation;", "modifier": "@Mock\n    private", "type": "TestInvocation", "declarator": "invocation", "var_name": "invocation"}, {"original_string": "@Mock\n    private HikariDataSource dataSource;", "modifier": "@Mock\n    private", "type": "HikariDataSource", "declarator": "dataSource", "var_name": "dataSource"}, {"original_string": "@Mock\n    private Configuration configuration;", "modifier": "@Mock\n    private", "type": "Configuration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "@Mock\n    private ConfigurationRegistry configRegistry;", "modifier": "@Mock\n    private", "type": "ConfigurationRegistry", "declarator": "configRegistry", "var_name": "configRegistry"}, {"original_string": "private Neo4JDriverDecorator decorator;", "modifier": "private", "type": "Neo4JDriverDecorator", "declarator": "decorator", "var_name": "decorator"}], "file": "neo4j/src/test/java/eu/drus/jpa/unit/neo4j/Neo4JDriverDecoratorTest.java"}, "test_case": {"identifier": "testAfterTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAfterTest() throws Throwable {\n        // GIVEN\n\n        // WHEN\n        decorator.afterAll(invocation);\n\n        // THEN\n        verify(dataSource).close();\n        verify(ctx).storeData(eq(Constants.KEY_DATA_SOURCE), isNull());\n    }", "signature": "void testAfterTest()", "full_signature": "@Test public void testAfterTest()", "class_method_signature": "Neo4JDriverDecoratorTest.testAfterTest()", "testcase": true, "constructor": false, "invocations": ["afterAll", "close", "verify", "storeData", "verify", "eq", "isNull"]}, "focal_class": {"identifier": "Neo4JDriverDecorator", "superclass": "", "interfaces": "implements TestClassDecorator", "fields": [{"original_string": "private ConfigurationRegistry configurationRegistry = new ConfigurationRegistry();", "modifier": "private", "type": "ConfigurationRegistry", "declarator": "configurationRegistry = new ConfigurationRegistry()", "var_name": "configurationRegistry"}], "methods": [{"identifier": "getPriority", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getPriority()", "full_signature": "@Override public int getPriority()", "class_method_signature": "Neo4JDriverDecorator.getPriority()", "testcase": false, "constructor": false}, {"identifier": "isConfigurationSupported", "parameters": "(final ExecutionContext ctx)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isConfigurationSupported(final ExecutionContext ctx)", "full_signature": "@Override public boolean isConfigurationSupported(final ExecutionContext ctx)", "class_method_signature": "Neo4JDriverDecorator.isConfigurationSupported(final ExecutionContext ctx)", "testcase": false, "constructor": false}, {"identifier": "beforeAll", "parameters": "(final TestInvocation invocation)", "modifiers": "@Override public", "return": "void", "signature": "void beforeAll(final TestInvocation invocation)", "full_signature": "@Override public void beforeAll(final TestInvocation invocation)", "class_method_signature": "Neo4JDriverDecorator.beforeAll(final TestInvocation invocation)", "testcase": false, "constructor": false}, {"identifier": "afterAll", "parameters": "(final TestInvocation invocation)", "modifiers": "@Override public", "return": "void", "signature": "void afterAll(final TestInvocation invocation)", "full_signature": "@Override public void afterAll(final TestInvocation invocation)", "class_method_signature": "Neo4JDriverDecorator.afterAll(final TestInvocation invocation)", "testcase": false, "constructor": false}], "file": "neo4j/src/main/java/eu/drus/jpa/unit/neo4j/Neo4JDriverDecorator.java"}, "focal_method": {"identifier": "afterAll", "parameters": "(final TestInvocation invocation)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void afterAll(final TestInvocation invocation) throws Exception {\n        final ExecutionContext context = invocation.getContext();\n        final HikariDataSource ds = (HikariDataSource) context.getData(Constants.KEY_DATA_SOURCE);\n        ds.close();\n        context.storeData(Constants.KEY_DATA_SOURCE, null);\n    }", "signature": "void afterAll(final TestInvocation invocation)", "full_signature": "@Override public void afterAll(final TestInvocation invocation)", "class_method_signature": "Neo4JDriverDecorator.afterAll(final TestInvocation invocation)", "testcase": false, "constructor": false, "invocations": ["getContext", "getData", "close", "storeData"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}