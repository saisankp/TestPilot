{"test_class": {"identifier": "ImportTest", "superclass": "", "interfaces": "", "fields": [], "file": "kb-importer/src/test/java/org/eclipse/steady/kb/command/ImportTest.java"}, "test_case": {"identifier": "getOptions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getOptions() {\n    Command command = new Import();\n    Options options = command.getOptions();\n    assertEquals(options.getOptions().size(), 4);\n    assertTrue(options.hasOption(\"d\"));\n    assertTrue(options.hasOption(\"u\"));\n    assertTrue(options.hasOption(\"v\"));\n    assertTrue(options.hasOption(\"o\"));\n  }", "signature": "void getOptions()", "full_signature": "@Test public void getOptions()", "class_method_signature": "ImportTest.getOptions()", "testcase": true, "constructor": false, "invocations": ["getOptions", "assertEquals", "size", "getOptions", "assertTrue", "hasOption", "assertTrue", "hasOption", "assertTrue", "hasOption", "assertTrue", "hasOption"]}, "focal_class": {"identifier": "Import", "superclass": "", "interfaces": "implements Command", "fields": [{"original_string": "private static final String UPLOAD_CONSTRUCT_OPTION = \"u\";", "modifier": "private static final", "type": "String", "declarator": "UPLOAD_CONSTRUCT_OPTION = \"u\"", "var_name": "UPLOAD_CONSTRUCT_OPTION"}, {"original_string": "private static final String DIRECTORY_OPTION = \"d\";", "modifier": "private static final", "type": "String", "declarator": "DIRECTORY_OPTION = \"d\"", "var_name": "DIRECTORY_OPTION"}, {"original_string": "private static final String OVERWRITE_OPTION = \"o\";", "modifier": "private static final", "type": "String", "declarator": "OVERWRITE_OPTION = \"o\"", "var_name": "OVERWRITE_OPTION"}, {"original_string": "private static final String VERBOSE_OPTION = \"v\";", "modifier": "private static final", "type": "String", "declarator": "VERBOSE_OPTION = \"v\"", "var_name": "VERBOSE_OPTION"}, {"original_string": "private static final String UPLOAD_LONG_OPTION = \"upload\";", "modifier": "private static final", "type": "String", "declarator": "UPLOAD_LONG_OPTION = \"upload\"", "var_name": "UPLOAD_LONG_OPTION"}, {"original_string": "private static final String VERBOSE_LONG_OPTION = \"verbose\";", "modifier": "private static final", "type": "String", "declarator": "VERBOSE_LONG_OPTION = \"verbose\"", "var_name": "VERBOSE_LONG_OPTION"}, {"original_string": "private static final String OVERWRITE_LONG_OPTION = \"overwrite\";", "modifier": "private static final", "type": "String", "declarator": "OVERWRITE_LONG_OPTION = \"overwrite\"", "var_name": "OVERWRITE_LONG_OPTION"}, {"original_string": "private static final String DIRECTORY_LONG_OPTION = \"directory\";", "modifier": "private static final", "type": "String", "declarator": "DIRECTORY_LONG_OPTION = \"directory\"", "var_name": "DIRECTORY_LONG_OPTION"}, {"original_string": "private static final Logger log = org.apache.logging.log4j.LogManager.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "log = org.apache.logging.log4j.LogManager.getLogger()", "var_name": "log"}], "methods": [{"identifier": "getCommandName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCommandName()", "full_signature": "@Override public String getCommandName()", "class_method_signature": "Import.getCommandName()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(HashMap<String, Object> args)", "modifiers": "@Override public", "return": "void", "signature": "void run(HashMap<String, Object> args)", "full_signature": "@Override public void run(HashMap<String, Object> args)", "class_method_signature": "Import.run(HashMap<String, Object> args)", "testcase": false, "constructor": false}, {"identifier": "getOptions", "parameters": "()", "modifiers": "@Override public", "return": "Options", "signature": "Options getOptions()", "full_signature": "@Override public Options getOptions()", "class_method_signature": "Import.getOptions()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(HashMap<String, Object> args)", "modifiers": "@Override public", "return": "void", "signature": "void validate(HashMap<String, Object> args)", "full_signature": "@Override public void validate(HashMap<String, Object> args)", "class_method_signature": "Import.validate(HashMap<String, Object> args)", "testcase": false, "constructor": false}], "file": "kb-importer/src/main/java/org/eclipse/steady/kb/command/Import.java"}, "focal_method": {"identifier": "getOptions", "parameters": "()", "modifiers": "@Override public", "return": "Options", "body": "@Override\n  public Options getOptions() {\n    Options options = new Options();\n    options.addRequiredOption(\n        DIRECTORY_OPTION,\n        DIRECTORY_LONG_OPTION,\n        true,\n        \"directory containing mutiple commit folders with meta files\");\n    options.addOption(\n        OVERWRITE_OPTION,\n        OVERWRITE_LONG_OPTION,\n        false,\n        \"overwrite the bug if it already exists in the backend\");\n    options.addOption(VERBOSE_OPTION, VERBOSE_LONG_OPTION, false, \"Verbose mode\");\n    options.addOption(\n        UPLOAD_CONSTRUCT_OPTION, UPLOAD_LONG_OPTION, false, \"Upload construct changes\");\n\n    return options;\n  }", "signature": "Options getOptions()", "full_signature": "@Override public Options getOptions()", "class_method_signature": "Import.getOptions()", "testcase": false, "constructor": false, "invocations": ["addRequiredOption", "addOption", "addOption", "addOption"]}, "repository": {"repo_id": 145424401, "url": "https://github.com/eclipse/steady", "stars": 353, "created": "8/20/2018 1:54:15 PM +00:00", "updates": "2020-01-25T08:37:00+00:00", "fork": "False", "license": "licensed"}}