{"test_class": {"identifier": "OnDemandSchedulerManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static OnDemandSchedulerManager onDemandSchedulerManager;", "modifier": "static", "type": "OnDemandSchedulerManager", "declarator": "onDemandSchedulerManager", "var_name": "onDemandSchedulerManager"}, {"original_string": "static SchedulerManager schedulerManager;", "modifier": "static", "type": "SchedulerManager", "declarator": "schedulerManager", "var_name": "schedulerManager"}, {"original_string": "static Scheduler scheduler;", "modifier": "static", "type": "Scheduler", "declarator": "scheduler", "var_name": "scheduler"}], "file": "actors/common/src/test/java/org/sunbird/common/quartz/scheduler/OnDemandSchedulerManagerTest.java"}, "test_case": {"identifier": "testTriggerScheduler", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testTriggerScheduler() throws SchedulerException {\n    PowerMockito.suppress(PowerMockito.constructor(SchedulerManager.class));\n    PowerMockito.suppress(PowerMockito.methodsDeclaredIn(SchedulerManager.class));\n    scheduler = mock(Scheduler.class);\n    PowerMockito.mockStatic(SchedulerManager.class);\n    String[] jobs = {\"shadowuser\"};\n    onDemandSchedulerManager = spy(OnDemandSchedulerManager.class);\n    when(scheduler.checkExists((JobKey) Mockito.anyObject())).thenReturn(false);\n    onDemandSchedulerManager.triggerScheduler(jobs);\n    verify(onDemandSchedulerManager).scheduleOnDemand(Mockito.anyString(), Mockito.anyString());\n   \n  }", "signature": "void testTriggerScheduler()", "full_signature": "@Test public void testTriggerScheduler()", "class_method_signature": "OnDemandSchedulerManagerTest.testTriggerScheduler()", "testcase": true, "constructor": false, "invocations": ["suppress", "constructor", "suppress", "methodsDeclaredIn", "mock", "mockStatic", "spy", "thenReturn", "when", "checkExists", "anyObject", "triggerScheduler", "scheduleOnDemand", "verify", "anyString", "anyString"]}, "focal_class": {"identifier": "OnDemandSchedulerManager", "superclass": "extends SchedulerManager", "interfaces": "", "fields": [{"original_string": "private static OnDemandSchedulerManager onDemandSchedulerManager = null;", "modifier": "private static", "type": "OnDemandSchedulerManager", "declarator": "onDemandSchedulerManager = null", "var_name": "onDemandSchedulerManager"}, {"original_string": "private static final String BULK_UPLOAD = \"bulkupload\";", "modifier": "private static final", "type": "String", "declarator": "BULK_UPLOAD = \"bulkupload\"", "var_name": "BULK_UPLOAD"}, {"original_string": "private static final String SHADOW_USER = \"shadowuser\";", "modifier": "private static final", "type": "String", "declarator": "SHADOW_USER = \"shadowuser\"", "var_name": "SHADOW_USER"}, {"original_string": "public static Map<String, String> schedulerMap = new HashMap<>();", "modifier": "public static", "type": "Map<String, String>", "declarator": "schedulerMap = new HashMap<>()", "var_name": "schedulerMap"}], "methods": [{"identifier": "OnDemandSchedulerManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " OnDemandSchedulerManager()", "full_signature": "public  OnDemandSchedulerManager()", "class_method_signature": "OnDemandSchedulerManager.OnDemandSchedulerManager()", "testcase": false, "constructor": true}, {"identifier": "scheduleOnDemand", "parameters": "(String identifier, String job)", "modifiers": "public", "return": "void", "signature": "void scheduleOnDemand(String identifier, String job)", "full_signature": "public void scheduleOnDemand(String identifier, String job)", "class_method_signature": "OnDemandSchedulerManager.scheduleOnDemand(String identifier, String job)", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "OnDemandSchedulerManager", "signature": "OnDemandSchedulerManager getInstance()", "full_signature": "public static OnDemandSchedulerManager getInstance()", "class_method_signature": "OnDemandSchedulerManager.getInstance()", "testcase": false, "constructor": false}, {"identifier": "triggerScheduler", "parameters": "(String[] jobs)", "modifiers": "public", "return": "void", "signature": "void triggerScheduler(String[] jobs)", "full_signature": "public void triggerScheduler(String[] jobs)", "class_method_signature": "OnDemandSchedulerManager.triggerScheduler(String[] jobs)", "testcase": false, "constructor": false}], "file": "actors/common/src/main/java/org/sunbird/common/quartz/scheduler/OnDemandSchedulerManager.java"}, "focal_method": {"identifier": "triggerScheduler", "parameters": "(String[] jobs)", "modifiers": "public", "return": "void", "body": "public void triggerScheduler(String[] jobs) {\n   String identifier = \"NetOps-PC1502295457753\";\n   for(String job: jobs) {\n     switch (job) {\n      case BULK_UPLOAD:\n      case SHADOW_USER:\n       scheduleOnDemand(identifier, job);\n       break;\n      default:\n       ProjectLogger.log(\n               \"OnDemandSchedulerManager:triggerScheduler: There is no such job\",\n               LoggerEnum.INFO.name());\n     }\n   }\n  }", "signature": "void triggerScheduler(String[] jobs)", "full_signature": "public void triggerScheduler(String[] jobs)", "class_method_signature": "OnDemandSchedulerManager.triggerScheduler(String[] jobs)", "testcase": false, "constructor": false, "invocations": ["scheduleOnDemand", "log", "name"]}, "repository": {"repo_id": 96122408, "url": "https://github.com/project-sunbird/sunbird-lms-mw", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 5, "size": 15380, "license": "licensed"}}