{"test_class": {"identifier": "YearsAndMonthsFunctionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private YearsAndMonthsFunction yamFunction;", "modifier": "private", "type": "YearsAndMonthsFunction", "declarator": "yamFunction", "var_name": "yamFunction"}], "file": "kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/runtime/functions/YearsAndMonthsFunctionTest.java"}, "test_case": {"identifier": "testYearsAndMonthsFunction_invokeLocalDateTime", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testYearsAndMonthsFunction_invokeLocalDateTime() {\n        FunctionTestUtil.assertResult(\n                yamFunction.invoke(\n                        LocalDateTime.of(2017, 6, 12, 12, 43),\n                        LocalDate.of(2020, 7, 13)),\n                ComparablePeriod.of(3, 1, 0));\n    }", "signature": "void testYearsAndMonthsFunction_invokeLocalDateTime()", "full_signature": "@Test public void testYearsAndMonthsFunction_invokeLocalDateTime()", "class_method_signature": "YearsAndMonthsFunctionTest.testYearsAndMonthsFunction_invokeLocalDateTime()", "testcase": true, "constructor": false, "invocations": ["assertResult", "invoke", "of", "of", "of"]}, "focal_class": {"identifier": "YearsAndMonthsFunction", "superclass": "extends BaseFEELFunction", "interfaces": "", "fields": [], "methods": [{"identifier": "YearsAndMonthsFunction", "parameters": "()", "modifiers": "public", "return": "", "signature": " YearsAndMonthsFunction()", "full_signature": "public  YearsAndMonthsFunction()", "class_method_signature": "YearsAndMonthsFunction.YearsAndMonthsFunction()", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(@ParameterName(\"from\") Temporal from, @ParameterName(\"to\") Temporal to)", "modifiers": "public", "return": "FEELFnResult<TemporalAmount>", "signature": "FEELFnResult<TemporalAmount> invoke(@ParameterName(\"from\") Temporal from, @ParameterName(\"to\") Temporal to)", "full_signature": "public FEELFnResult<TemporalAmount> invoke(@ParameterName(\"from\") Temporal from, @ParameterName(\"to\") Temporal to)", "class_method_signature": "YearsAndMonthsFunction.invoke(@ParameterName(\"from\") Temporal from, @ParameterName(\"to\") Temporal to)", "testcase": false, "constructor": false}, {"identifier": "getLocalDateFromTemporal", "parameters": "(final Temporal temporal)", "modifiers": "private", "return": "LocalDate", "signature": "LocalDate getLocalDateFromTemporal(final Temporal temporal)", "full_signature": "private LocalDate getLocalDateFromTemporal(final Temporal temporal)", "class_method_signature": "YearsAndMonthsFunction.getLocalDateFromTemporal(final Temporal temporal)", "testcase": false, "constructor": false}, {"identifier": "getLocalDateFromYear", "parameters": "(final Year year)", "modifiers": "private", "return": "LocalDate", "signature": "LocalDate getLocalDateFromYear(final Year year)", "full_signature": "private LocalDate getLocalDateFromYear(final Year year)", "class_method_signature": "YearsAndMonthsFunction.getLocalDateFromYear(final Year year)", "testcase": false, "constructor": false}, {"identifier": "getLocalDateFromYearAndMonth", "parameters": "(final YearMonth yearMonth)", "modifiers": "private", "return": "LocalDate", "signature": "LocalDate getLocalDateFromYearAndMonth(final YearMonth yearMonth)", "full_signature": "private LocalDate getLocalDateFromYearAndMonth(final YearMonth yearMonth)", "class_method_signature": "YearsAndMonthsFunction.getLocalDateFromYearAndMonth(final YearMonth yearMonth)", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/runtime/functions/YearsAndMonthsFunction.java"}, "focal_method": {"identifier": "invoke", "parameters": "(@ParameterName(\"from\") Temporal from, @ParameterName(\"to\") Temporal to)", "modifiers": "public", "return": "FEELFnResult<TemporalAmount>", "body": "public FEELFnResult<TemporalAmount> invoke(@ParameterName(\"from\") Temporal from, @ParameterName(\"to\") Temporal to) {\n        if ( from == null ) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"from\", \"cannot be null\"));\n        }\n        if ( to == null ) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"to\", \"cannot be null\"));\n        }\n        final LocalDate fromDate = getLocalDateFromTemporal(from);\n        if (fromDate == null) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"from\", \"is of type not suitable for years and months function\"));\n        }\n        final LocalDate toDate = getLocalDateFromTemporal(to);\n        if (toDate == null) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"to\", \"is of type not suitable for years and months function\"));\n        }\n\n        return FEELFnResult.ofResult(new ComparablePeriod(Period.between(fromDate, toDate).withDays(0)));\n    }", "signature": "FEELFnResult<TemporalAmount> invoke(@ParameterName(\"from\") Temporal from, @ParameterName(\"to\") Temporal to)", "full_signature": "public FEELFnResult<TemporalAmount> invoke(@ParameterName(\"from\") Temporal from, @ParameterName(\"to\") Temporal to)", "class_method_signature": "YearsAndMonthsFunction.invoke(@ParameterName(\"from\") Temporal from, @ParameterName(\"to\") Temporal to)", "testcase": false, "constructor": false, "invocations": ["ofError", "ofError", "getLocalDateFromTemporal", "ofError", "getLocalDateFromTemporal", "ofError", "ofResult", "withDays", "between"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}