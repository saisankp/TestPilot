{"test_class": {"identifier": "SpoutWrapperTest", "superclass": "extends AbstractTest", "interfaces": "", "fields": [], "file": "flink-contrib/flink-storm/src/test/java/org/apache/flink/storm/wrappers/SpoutWrapperTest.java"}, "test_case": {"identifier": "testCancel", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCancel() throws Exception {\n\t\tfinal int numberOfCalls = 5 + this.r.nextInt(5);\n\n\t\tfinal StreamingRuntimeContext taskContext = mock(StreamingRuntimeContext.class);\n\t\twhen(taskContext.getExecutionConfig()).thenReturn(mock(ExecutionConfig.class));\n\t\twhen(taskContext.getTaskName()).thenReturn(\"name\");\n\n\t\tfinal IRichSpout spout = new FiniteTestSpout(numberOfCalls);\n\n\t\tfinal SpoutWrapper<Tuple1<Integer>> spoutWrapper = new SpoutWrapper<Tuple1<Integer>>(spout);\n\t\tspoutWrapper.setRuntimeContext(taskContext);\n\n\t\tspoutWrapper.cancel();\n\t\tfinal TestContext collector = new TestContext();\n\t\tspoutWrapper.run(collector);\n\n\t\tAssert.assertEquals(new LinkedList<Tuple1<Integer>>(), collector.result);\n\t}", "signature": "void testCancel()", "full_signature": "@Test public void testCancel()", "class_method_signature": "SpoutWrapperTest.testCancel()", "testcase": true, "constructor": false, "invocations": ["nextInt", "mock", "thenReturn", "when", "getExecutionConfig", "mock", "thenReturn", "when", "getTaskName", "setRuntimeContext", "cancel", "run", "assertEquals"]}, "focal_class": {"identifier": "SpoutWrapper", "superclass": "extends RichParallelSourceFunction<OUT>", "interfaces": "implements StoppableFunction", "fields": [{"original_string": "private static final long serialVersionUID = -218340336648247605L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -218340336648247605L", "var_name": "serialVersionUID"}, {"original_string": "private final HashMap<String, Integer> numberOfAttributes;", "modifier": "private final", "type": "HashMap<String, Integer>", "declarator": "numberOfAttributes", "var_name": "numberOfAttributes"}, {"original_string": "private final IRichSpout spout;", "modifier": "private final", "type": "IRichSpout", "declarator": "spout", "var_name": "spout"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private volatile boolean isRunning = true;", "modifier": "private volatile", "type": "boolean", "declarator": "isRunning = true", "var_name": "isRunning"}, {"original_string": "private Integer numberOfInvocations;", "modifier": "private", "type": "Integer", "declarator": "numberOfInvocations", "var_name": "numberOfInvocations"}, {"original_string": "private StormTopology stormTopology;", "modifier": "private", "type": "StormTopology", "declarator": "stormTopology", "var_name": "stormTopology"}], "methods": [{"identifier": "SpoutWrapper", "parameters": "(final IRichSpout spout)", "modifiers": "public", "return": "", "signature": " SpoutWrapper(final IRichSpout spout)", "full_signature": "public  SpoutWrapper(final IRichSpout spout)", "class_method_signature": "SpoutWrapper.SpoutWrapper(final IRichSpout spout)", "testcase": false, "constructor": true}, {"identifier": "SpoutWrapper", "parameters": "(final IRichSpout spout, final Integer numberOfInvocations)", "modifiers": "public", "return": "", "signature": " SpoutWrapper(final IRichSpout spout, final Integer numberOfInvocations)", "full_signature": "public  SpoutWrapper(final IRichSpout spout, final Integer numberOfInvocations)", "class_method_signature": "SpoutWrapper.SpoutWrapper(final IRichSpout spout, final Integer numberOfInvocations)", "testcase": false, "constructor": true}, {"identifier": "SpoutWrapper", "parameters": "(final IRichSpout spout, final String[] rawOutputs)", "modifiers": "public", "return": "", "signature": " SpoutWrapper(final IRichSpout spout, final String[] rawOutputs)", "full_signature": "public  SpoutWrapper(final IRichSpout spout, final String[] rawOutputs)", "class_method_signature": "SpoutWrapper.SpoutWrapper(final IRichSpout spout, final String[] rawOutputs)", "testcase": false, "constructor": true}, {"identifier": "SpoutWrapper", "parameters": "(final IRichSpout spout, final String[] rawOutputs,\n\t\t\tfinal Integer numberOfInvocations)", "modifiers": "public", "return": "", "signature": " SpoutWrapper(final IRichSpout spout, final String[] rawOutputs,\n\t\t\tfinal Integer numberOfInvocations)", "full_signature": "public  SpoutWrapper(final IRichSpout spout, final String[] rawOutputs,\n\t\t\tfinal Integer numberOfInvocations)", "class_method_signature": "SpoutWrapper.SpoutWrapper(final IRichSpout spout, final String[] rawOutputs,\n\t\t\tfinal Integer numberOfInvocations)", "testcase": false, "constructor": true}, {"identifier": "SpoutWrapper", "parameters": "(final IRichSpout spout, final Collection<String> rawOutputs)", "modifiers": "public", "return": "", "signature": " SpoutWrapper(final IRichSpout spout, final Collection<String> rawOutputs)", "full_signature": "public  SpoutWrapper(final IRichSpout spout, final Collection<String> rawOutputs)", "class_method_signature": "SpoutWrapper.SpoutWrapper(final IRichSpout spout, final Collection<String> rawOutputs)", "testcase": false, "constructor": true}, {"identifier": "SpoutWrapper", "parameters": "(final IRichSpout spout, final Collection<String> rawOutputs,\n\t\t\tfinal Integer numberOfInvocations)", "modifiers": "public", "return": "", "signature": " SpoutWrapper(final IRichSpout spout, final Collection<String> rawOutputs,\n\t\t\tfinal Integer numberOfInvocations)", "full_signature": "public  SpoutWrapper(final IRichSpout spout, final Collection<String> rawOutputs,\n\t\t\tfinal Integer numberOfInvocations)", "class_method_signature": "SpoutWrapper.SpoutWrapper(final IRichSpout spout, final Collection<String> rawOutputs,\n\t\t\tfinal Integer numberOfInvocations)", "testcase": false, "constructor": true}, {"identifier": "SpoutWrapper", "parameters": "(final IRichSpout spout, final String name, final Collection<String> rawOutputs,\n\t\t\tfinal Integer numberOfInvocations)", "modifiers": "public", "return": "", "signature": " SpoutWrapper(final IRichSpout spout, final String name, final Collection<String> rawOutputs,\n\t\t\tfinal Integer numberOfInvocations)", "full_signature": "public  SpoutWrapper(final IRichSpout spout, final String name, final Collection<String> rawOutputs,\n\t\t\tfinal Integer numberOfInvocations)", "class_method_signature": "SpoutWrapper.SpoutWrapper(final IRichSpout spout, final String name, final Collection<String> rawOutputs,\n\t\t\tfinal Integer numberOfInvocations)", "testcase": false, "constructor": true}, {"identifier": "setStormTopology", "parameters": "(StormTopology stormTopology)", "modifiers": "public", "return": "void", "signature": "void setStormTopology(StormTopology stormTopology)", "full_signature": "public void setStormTopology(StormTopology stormTopology)", "class_method_signature": "SpoutWrapper.setStormTopology(StormTopology stormTopology)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(final SourceContext<OUT> ctx)", "modifiers": "@Override public final", "return": "void", "signature": "void run(final SourceContext<OUT> ctx)", "full_signature": "@Override public final void run(final SourceContext<OUT> ctx)", "class_method_signature": "SpoutWrapper.run(final SourceContext<OUT> ctx)", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void cancel()", "full_signature": "@Override public void cancel()", "class_method_signature": "SpoutWrapper.cancel()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "SpoutWrapper.stop()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "SpoutWrapper.close()", "testcase": false, "constructor": false}], "file": "flink-contrib/flink-storm/src/main/java/org/apache/flink/storm/wrappers/SpoutWrapper.java"}, "focal_method": {"identifier": "cancel", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void cancel() {\n\t\tthis.isRunning = false;\n\t}", "signature": "void cancel()", "full_signature": "@Override public void cancel()", "class_method_signature": "SpoutWrapper.cancel()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}