{"test_class": {"identifier": "HaikuReviewTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String VALID_INPUT_ONE = \"happy purple frog/eating bugs in the marshes/get indigestion\";", "modifier": "private static final", "type": "String", "declarator": "VALID_INPUT_ONE = \"happy purple frog/eating bugs in the marshes/get indigestion\"", "var_name": "VALID_INPUT_ONE"}, {"original_string": "private static final String VALID_INPUT_TWO = \"computer programs/the bugs try to eat my code/i will not let them\";", "modifier": "private static final", "type": "String", "declarator": "VALID_INPUT_TWO = \"computer programs/the bugs try to eat my code/i will not let them\"", "var_name": "VALID_INPUT_TWO"}, {"original_string": "private static final String INVALID_FIRST_LINE = \"a a a a a invalid/a a a a a a a/a a a a a\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_FIRST_LINE = \"a a a a a invalid/a a a a a a a/a a a a a\"", "var_name": "INVALID_FIRST_LINE"}, {"original_string": "private static final String INVALID_SECOND_LINE = \"a a a a a/a a a a a a a invalid/a a a a a\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_SECOND_LINE = \"a a a a a/a a a a a a a invalid/a a a a a\"", "var_name": "INVALID_SECOND_LINE"}, {"original_string": "private static final String INVALID_THIRD_LINE = \"a a a a a/a a a a a a a/a a a a a invalid\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_THIRD_LINE = \"a a a a a/a a a a a a a/a a a a a invalid\"", "var_name": "INVALID_THIRD_LINE"}, {"original_string": "private static final String INVALID_LINE_COUNT = \"the bugs try to eat my code/i will not let them\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_LINE_COUNT = \"the bugs try to eat my code/i will not let them\"", "var_name": "INVALID_LINE_COUNT"}, {"original_string": "private static final String INVALID_COUNT_474 = \"a a a a/a a a a a a a/a a a a\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_COUNT_474 = \"a a a a/a a a a a a a/a a a a\"", "var_name": "INVALID_COUNT_474"}, {"original_string": "private static final String INVALID_COUNT_373 = \"a a a/a a a a a a a/a a a\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_COUNT_373 = \"a a a/a a a a a a a/a a a\"", "var_name": "INVALID_COUNT_373"}, {"original_string": "private HaikuReview haikuReview;", "modifier": "private", "type": "HaikuReview", "declarator": "haikuReview", "var_name": "haikuReview"}], "file": "haikuReview/20140219-roundrobin/src/test/java/HaikuReviewTest.java"}, "test_case": {"identifier": "testInvalidWhenLessThenThreeWords", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInvalidWhenLessThenThreeWords() throws Exception {\n        boolean validated = haikuReview.validateLineCount(\"a//c\");\n\n        assertThat(validated).isFalse();\n    }", "signature": "void testInvalidWhenLessThenThreeWords()", "full_signature": "@Test public void testInvalidWhenLessThenThreeWords()", "class_method_signature": "HaikuReviewTest.testInvalidWhenLessThenThreeWords()", "testcase": true, "constructor": false, "invocations": ["validateLineCount", "isFalse", "assertThat"]}, "focal_class": {"identifier": "HaikuReview", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String LINE_SEPARATOR = \"/\";", "modifier": "private static final", "type": "String", "declarator": "LINE_SEPARATOR = \"/\"", "var_name": "LINE_SEPARATOR"}, {"original_string": "public static final int FIRST_LINE_SYLLABLE_COUNT = 5;", "modifier": "public static final", "type": "int", "declarator": "FIRST_LINE_SYLLABLE_COUNT = 5", "var_name": "FIRST_LINE_SYLLABLE_COUNT"}, {"original_string": "public static final int SECOND_LINE_SYLLABLE_COUNT = 7;", "modifier": "public static final", "type": "int", "declarator": "SECOND_LINE_SYLLABLE_COUNT = 7", "var_name": "SECOND_LINE_SYLLABLE_COUNT"}, {"original_string": "public static final int THIRD_LINE_SYLLABLE_COUNT = 5;", "modifier": "public static final", "type": "int", "declarator": "THIRD_LINE_SYLLABLE_COUNT = 5", "var_name": "THIRD_LINE_SYLLABLE_COUNT"}, {"original_string": "public static final String RESULT_VALID = \"5,7,5,Yes\";", "modifier": "public static final", "type": "String", "declarator": "RESULT_VALID = \"5,7,5,Yes\"", "var_name": "RESULT_VALID"}, {"original_string": "public static final String RESULT_SEPARATOR = \",\";", "modifier": "public static final", "type": "String", "declarator": "RESULT_SEPARATOR = \",\"", "var_name": "RESULT_SEPARATOR"}, {"original_string": "public static final String RESULT_NO = \"No\";", "modifier": "public static final", "type": "String", "declarator": "RESULT_NO = \"No\"", "var_name": "RESULT_NO"}], "methods": [{"identifier": "validateLineCount", "parameters": "(String input)", "modifiers": "public", "return": "boolean", "signature": "boolean validateLineCount(String input)", "full_signature": "public boolean validateLineCount(String input)", "class_method_signature": "HaikuReview.validateLineCount(String input)", "testcase": false, "constructor": false}, {"identifier": "countWords", "parameters": "(String input)", "modifiers": "public", "return": "int", "signature": "int countWords(String input)", "full_signature": "public int countWords(String input)", "class_method_signature": "HaikuReview.countWords(String input)", "testcase": false, "constructor": false}, {"identifier": "asLines", "parameters": "(String input)", "modifiers": "public", "return": "String[]", "signature": "String[] asLines(String input)", "full_signature": "public String[] asLines(String input)", "class_method_signature": "HaikuReview.asLines(String input)", "testcase": false, "constructor": false}, {"identifier": "countSyllables", "parameters": "(String input)", "modifiers": "public", "return": "int", "signature": "int countSyllables(String input)", "full_signature": "public int countSyllables(String input)", "class_method_signature": "HaikuReview.countSyllables(String input)", "testcase": false, "constructor": false}, {"identifier": "isHaiku", "parameters": "(String input)", "modifiers": "public", "return": "boolean", "signature": "boolean isHaiku(String input)", "full_signature": "public boolean isHaiku(String input)", "class_method_signature": "HaikuReview.isHaiku(String input)", "testcase": false, "constructor": false}, {"identifier": "review", "parameters": "(String input)", "modifiers": "public", "return": "String", "signature": "String review(String input)", "full_signature": "public String review(String input)", "class_method_signature": "HaikuReview.review(String input)", "testcase": false, "constructor": false}, {"identifier": "formattedSyllableCount", "parameters": "(String line)", "modifiers": "private", "return": "String", "signature": "String formattedSyllableCount(String line)", "full_signature": "private String formattedSyllableCount(String line)", "class_method_signature": "HaikuReview.formattedSyllableCount(String line)", "testcase": false, "constructor": false}], "file": "haikuReview/20140219-roundrobin/src/main/java/HaikuReview.java"}, "focal_method": {"identifier": "validateLineCount", "parameters": "(String input)", "modifiers": "public", "return": "boolean", "body": "public boolean validateLineCount(String input) {\n        Pattern pattern = Pattern.compile(\"[a-zA-Z ]+/[a-zA-Z ]+/[a-zA-Z ]+\");\n        return pattern.matcher(input).matches();\n    }", "signature": "boolean validateLineCount(String input)", "full_signature": "public boolean validateLineCount(String input)", "class_method_signature": "HaikuReview.validateLineCount(String input)", "testcase": false, "constructor": false, "invocations": ["compile", "matches", "matcher"]}, "repository": {"repo_id": 6509909, "url": "https://github.com/novoda/dojos", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 72, "size": 12987, "license": "licensed"}}