{"test_class": {"identifier": "PatientEntityToDetailsTransformerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PATIENT_ID = \"PATIENT\";", "modifier": "private static final", "type": "String", "declarator": "PATIENT_ID = \"PATIENT\"", "var_name": "PATIENT_ID"}, {"original_string": "private PatientEntityToDetailsTransformer transformer;", "modifier": "private", "type": "PatientEntityToDetailsTransformer", "declarator": "transformer", "var_name": "transformer"}], "file": "gpconnect-database/src/test/java/uk/gov/hscic/patient/details/PatientEntityToDetailsTransformerTest.java"}, "test_case": {"identifier": "shouldReturnEmptyMedicationListWhenMedicationSearchThrowsException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnEmptyMedicationListWhenMedicationSearchThrowsException() {\n        assertNotNull(transformer.transform(dummyPatientEntity()));\n    }", "signature": "void shouldReturnEmptyMedicationListWhenMedicationSearchThrowsException()", "full_signature": "@Test public void shouldReturnEmptyMedicationListWhenMedicationSearchThrowsException()", "class_method_signature": "PatientEntityToDetailsTransformerTest.shouldReturnEmptyMedicationListWhenMedicationSearchThrowsException()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "transform", "dummyPatientEntity"]}, "focal_class": {"identifier": "PatientEntityToDetailsTransformer", "superclass": "", "interfaces": "implements Transformer<PatientEntity, PatientDetails>", "fields": [], "methods": [{"identifier": "transform", "parameters": "(final PatientEntity patientEntity)", "modifiers": "@Override public", "return": "PatientDetails", "signature": "PatientDetails transform(final PatientEntity patientEntity)", "full_signature": "@Override public PatientDetails transform(final PatientEntity patientEntity)", "class_method_signature": "PatientEntityToDetailsTransformer.transform(final PatientEntity patientEntity)", "testcase": false, "constructor": false}, {"identifier": "populateTelecoms", "parameters": "(PatientDetails patientDetails, PatientEntity patientEntity)", "modifiers": "private", "return": "void", "signature": "void populateTelecoms(PatientDetails patientDetails, PatientEntity patientEntity)", "full_signature": "private void populateTelecoms(PatientDetails patientDetails, PatientEntity patientEntity)", "class_method_signature": "PatientEntityToDetailsTransformer.populateTelecoms(PatientDetails patientDetails, PatientEntity patientEntity)", "testcase": false, "constructor": false}], "file": "gpconnect-database/src/main/java/uk/gov/hscic/patient/details/PatientEntityToDetailsTransformer.java"}, "focal_method": {"identifier": "transform", "parameters": "(final PatientEntity patientEntity)", "modifiers": "@Override public", "return": "PatientDetails", "body": "@Override\n    public PatientDetails transform(final PatientEntity patientEntity) {\n        final PatientDetails patient = new PatientDetails();\n\n\n        String[] address = new String[]{StringUtils.trimToNull(patientEntity.getAddress1()),\n            StringUtils.trimToNull(patientEntity.getAddress2()),\n            StringUtils.trimToNull(patientEntity.getAddress3()),\n            StringUtils.trimToNull(patientEntity.getAddress4()),\n            StringUtils.trimToNull(patientEntity.getAddress5())};\n\n        final String name = patientEntity.getFirstName() + \" \" + patientEntity.getLastName();\n        final String patientId = patientEntity.getNhsNumber();\n\n        patient.setId(String.valueOf(patientEntity.getId()));\n        patient.setName(name);\n        patient.setTitle(patientEntity.getTitle());\n        patient.setForename(patientEntity.getFirstName());\n        patient.setSurname(patientEntity.getLastName());\n        patient.setGender(patientEntity.getGender());\n        patient.setDateOfBirth(patientEntity.getDateOfBirth());\n        patient.setNhsNumber(patientId);\n        patient.setPasNumber(patientEntity.getPasNumber());\n        patient.setAddress(address);\n        patient.setPostcode(patientEntity.getPostcode());\n        patient.setTelephone(patientEntity.getPhone());\n        patient.setPasNumber(patientEntity.getPasNumber());\n        patient.setLastUpdated(patientEntity.getLastUpdated());\n        patient.setRegistrationStartDateTime(patientEntity.getRegistrationStartDateTime());\n        patient.setRegistrationEndDateTime(patientEntity.getRegistrationEndDateTime());\n        patient.setRegistrationStatus(patientEntity.getRegistrationStatus());\n        patient.setRegistrationType(patientEntity.getRegistrationType());\n        patient.setMaritalStatus(patientEntity.getMaritalStatus());\n        patient.setManagingOrganization(patientEntity.getManagingOrganization());\n\n        PractitionerEntity gp = patientEntity.getPractitioner();\n\n        if (gp != null) {\n            patient.setGpDetails(gp.getNamePrefix() + \" \" + gp.getNameGiven() + \" \" + gp.getNameFamily());\n            patient.setGpId(gp.getId());\n        }\n\n        Date deceased = patientEntity.getDeceasedDateTime();\n        if (deceased != null) {\n            patient.setDeceased(deceased);\n        }\n\n        patient.setSensitive(patientEntity.isSensitive());\n        \n        populateTelecoms(patient, patientEntity);\n\n        return patient;\n    }", "signature": "PatientDetails transform(final PatientEntity patientEntity)", "full_signature": "@Override public PatientDetails transform(final PatientEntity patientEntity)", "class_method_signature": "PatientEntityToDetailsTransformer.transform(final PatientEntity patientEntity)", "testcase": false, "constructor": false, "invocations": ["trimToNull", "getAddress1", "trimToNull", "getAddress2", "trimToNull", "getAddress3", "trimToNull", "getAddress4", "trimToNull", "getAddress5", "getFirstName", "getLastName", "getNhsNumber", "setId", "valueOf", "getId", "setName", "setTitle", "getTitle", "setForename", "getFirstName", "setSurname", "getLastName", "setGender", "getGender", "setDateOfBirth", "getDateOfBirth", "setNhsNumber", "setPasNumber", "getPasNumber", "setAddress", "setPostcode", "getPostcode", "setTelephone", "getPhone", "setPasNumber", "getPasNumber", "setLastUpdated", "getLastUpdated", "setRegistrationStartDateTime", "getRegistrationStartDateTime", "setRegistrationEndDateTime", "getRegistrationEndDateTime", "setRegistrationStatus", "getRegistrationStatus", "setRegistrationType", "getRegistrationType", "setMaritalStatus", "getMaritalStatus", "setManagingOrganization", "getManagingOrganization", "getPractitioner", "setGpDetails", "getNamePrefix", "getNameGiven", "getNameFamily", "setGpId", "getId", "getDeceasedDateTime", "setDeceased", "setSensitive", "isSensitive", "populateTelecoms"]}, "repository": {"repo_id": 57110085, "url": "https://github.com/nhsconnect/gpconnect-demonstrator", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 31249, "license": "licensed"}}