{"test_class": {"identifier": "ThreadUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "anomdetect/src/test/java/com/expedia/adaptivealerting/anomdetect/util/ThreadUtilTest.java"}, "test_case": {"identifier": "testSleep", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSleep() {\n        long start = System.currentTimeMillis();\n        ThreadUtil.sleep(500);\n        long duration = System.currentTimeMillis() - start;\n        assertTrue(duration >= 450);\n    }", "signature": "void testSleep()", "full_signature": "@Test public void testSleep()", "class_method_signature": "ThreadUtilTest.testSleep()", "testcase": true, "constructor": false, "invocations": ["currentTimeMillis", "sleep", "currentTimeMillis", "assertTrue"]}, "focal_class": {"identifier": "ThreadUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "sleep", "parameters": "(long millis)", "modifiers": "@SneakyThrows public static", "return": "void", "signature": "void sleep(long millis)", "full_signature": "@SneakyThrows public static void sleep(long millis)", "class_method_signature": "ThreadUtil.sleep(long millis)", "testcase": false, "constructor": false}], "file": "anomdetect/src/main/java/com/expedia/adaptivealerting/anomdetect/util/ThreadUtil.java"}, "focal_method": {"identifier": "sleep", "parameters": "(long millis)", "modifiers": "@SneakyThrows public static", "return": "void", "body": "@SneakyThrows\n    public static void sleep(long millis) {\n        Thread.sleep(millis);\n    }", "signature": "void sleep(long millis)", "full_signature": "@SneakyThrows public static void sleep(long millis)", "class_method_signature": "ThreadUtil.sleep(long millis)", "testcase": false, "constructor": false, "invocations": ["sleep"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}