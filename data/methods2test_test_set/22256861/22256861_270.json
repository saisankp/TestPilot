{"test_class": {"identifier": "CollectionOLILandsatQATest", "superclass": "", "interfaces": "", "fields": [], "file": "s3tbx-landsat-reader/src/test/java/org/esa/s3tbx/dataio/landsat/geotiff/CollectionOLILandsatQATest.java"}, "test_case": {"identifier": "testCreateMasks", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateMasks() {\n        CollectionOLILandsatQA landsatQA = new CollectionOLILandsatQA();\n        java.util.List<Mask> masks = landsatQA.createMasks(new Dimension(1, 1));\n        assertEquals(masks.size(),19);\n    }", "signature": "void testCreateMasks()", "full_signature": "@Test public void testCreateMasks()", "class_method_signature": "CollectionOLILandsatQATest.testCreateMasks()", "testcase": true, "constructor": false, "invocations": ["createMasks", "assertEquals", "size"]}, "focal_class": {"identifier": "CollectionOLILandsatQA", "superclass": "extends AbstractLandsatQA", "interfaces": "", "fields": [], "methods": [{"identifier": "createFlagCoding", "parameters": "(String bandName)", "modifiers": "@Override public", "return": "FlagCoding", "signature": "FlagCoding createFlagCoding(String bandName)", "full_signature": "@Override public FlagCoding createFlagCoding(String bandName)", "class_method_signature": "CollectionOLILandsatQA.createFlagCoding(String bandName)", "testcase": false, "constructor": false}, {"identifier": "createMasks", "parameters": "(Dimension size)", "modifiers": "@Override public", "return": "List<Mask>", "signature": "List<Mask> createMasks(Dimension size)", "full_signature": "@Override public List<Mask> createMasks(Dimension size)", "class_method_signature": "CollectionOLILandsatQA.createMasks(Dimension size)", "testcase": false, "constructor": false}], "file": "s3tbx-landsat-reader/src/main/java/org/esa/s3tbx/dataio/landsat/geotiff/CollectionOLILandsatQA.java"}, "focal_method": {"identifier": "createMasks", "parameters": "(Dimension size)", "modifiers": "@Override public", "return": "List<Mask>", "body": "@Override\n    public List<Mask> createMasks(Dimension size) {\n        ArrayList<Mask> masks = new ArrayList<>();\n        final int width = size.width;\n        final int height = size.height;\n\n        masks.add(Mask.BandMathsType.create(\"designated_fill\",\n                                            \"Designated Fill\",\n                                            width, height,\n                                            \"flags.designated_fill\",\n                                            colorIterator.next(),\n                                            0.5));\n        masks.add(Mask.BandMathsType.create(\"terrain_occlusion\",\n                                            \"Terrain Occlusion\",\n                                            width, height,\n                                            \"flags.terrain_occlusion\",\n                                            colorIterator.next(),\n                                            0.5));\n        masks.add(Mask.BandMathsType.create(\"cloud\",\n                                            \"Cloud\",\n                                            width, height,\n                                            \"flags.cloud\",\n                                            colorIterator.next(),\n                                            0.5));\n        masks.addAll(createDefaultRadiometricSaturationMasks(\"radiometric_saturation\", \"Radiometric saturation\", width, height));\n        masks.addAll(createDefaultConfidenceMasks(\"snow_ice_confidence\", \"Snow/ice confidence\", width, height));\n        masks.addAll(createDefaultConfidenceMasks(\"cloud_confidence\", \"Cloud confidence\", width, height));\n        masks.addAll(createDefaultConfidenceMasks(\"cloud_shadow_confidence\", \"Cloud shadow confidence\", width, height));\n        masks.addAll(createDefaultConfidenceMasks(\"cirrus_confidence\", \"Cirrus confidence\", width, height));\n\n\n        return masks;\n    }", "signature": "List<Mask> createMasks(Dimension size)", "full_signature": "@Override public List<Mask> createMasks(Dimension size)", "class_method_signature": "CollectionOLILandsatQA.createMasks(Dimension size)", "testcase": false, "constructor": false, "invocations": ["add", "create", "next", "add", "create", "next", "add", "create", "next", "addAll", "createDefaultRadiometricSaturationMasks", "addAll", "createDefaultConfidenceMasks", "addAll", "createDefaultConfidenceMasks", "addAll", "createDefaultConfidenceMasks", "addAll", "createDefaultConfidenceMasks"]}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}