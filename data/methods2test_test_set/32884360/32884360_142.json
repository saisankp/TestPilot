{"test_class": {"identifier": "JsonFormatterTest", "superclass": "", "interfaces": "", "fields": [], "file": "fdb-sql-layer-core/src/test/java/com/foundationdb/server/explain/format/JsonFormatterTest.java"}, "test_case": {"identifier": "testDescribe_Explainer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDescribe_Explainer() {\n        PrimitiveExplainer s = PrimitiveExplainer.getInstance(\"string\");\n        PrimitiveExplainer l = PrimitiveExplainer.getInstance(123);\n        PrimitiveExplainer n = PrimitiveExplainer.getInstance(3.14);\n        PrimitiveExplainer b = PrimitiveExplainer.getInstance(true);\n\n        Attributes a = new Attributes();\n        a.put(Label.NAME, PrimitiveExplainer.getInstance(\"TEST\"));\n        a.put(Label.OPERAND, s);\n        a.put(Label.OPERAND, l);\n        a.put(Label.OPERAND, n);\n        a.put(Label.OPERAND, b);\n        CompoundExplainer c = new CompoundExplainer(Type.FUNCTION, a);\n\n        CompoundExplainer c2 = new CompoundExplainer(Type.EXTRA_INFO);\n        c2.addAttribute(Label.COST, PrimitiveExplainer.getInstance(\"a lot\"));\n        c.addAttribute(Label.EXTRA_TAG, c2);\n\n        String expected = \n            \"{\\n\" +\n            \"  \\\"type\\\" : \\\"function\\\",\\n\" +\n            \"  \\\"operand\\\" : [ \\\"string\\\", 123, 3.14, true ],\\n\" +\n            \"  \\\"extra_tag\\\" : [ {\\n\" +\n            \"    \\\"type\\\" : \\\"extra_info\\\",\\n\" +\n            \"    \\\"cost\\\" : [ \\\"a lot\\\" ]\\n\" +\n            \"  } ],\\n\" +\n            \"  \\\"name\\\" : [ \\\"TEST\\\" ]\\n\" +\n            \"}\";\n\n        JsonFormatter f = new JsonFormatter();\n        assertEquals(expected, f.format(c));\n    }", "signature": "void testDescribe_Explainer()", "full_signature": "@Test public void testDescribe_Explainer()", "class_method_signature": "JsonFormatterTest.testDescribe_Explainer()", "testcase": true, "constructor": false, "invocations": ["getInstance", "getInstance", "getInstance", "getInstance", "put", "getInstance", "put", "put", "put", "put", "addAttribute", "getInstance", "addAttribute", "assertEquals", "format"]}, "focal_class": {"identifier": "JsonFormatter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final boolean pretty = true;", "modifier": "private final", "type": "boolean", "declarator": "pretty = true", "var_name": "pretty"}], "methods": [{"identifier": "format", "parameters": "(Explainer explainer)", "modifiers": "public", "return": "String", "signature": "String format(Explainer explainer)", "full_signature": "public String format(Explainer explainer)", "class_method_signature": "JsonFormatter.format(Explainer explainer)", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "(Explainer explainer, Writer writer)", "modifiers": "public", "return": "void", "signature": "void format(Explainer explainer, Writer writer)", "full_signature": "public void format(Explainer explainer, Writer writer)", "class_method_signature": "JsonFormatter.format(Explainer explainer, Writer writer)", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "(Explainer explainer, OutputStream stream)", "modifiers": "public", "return": "void", "signature": "void format(Explainer explainer, OutputStream stream)", "full_signature": "public void format(Explainer explainer, OutputStream stream)", "class_method_signature": "JsonFormatter.format(Explainer explainer, OutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "(Explainer explainer, JsonGenerator generator)", "modifiers": "public", "return": "void", "signature": "void format(Explainer explainer, JsonGenerator generator)", "full_signature": "public void format(Explainer explainer, JsonGenerator generator)", "class_method_signature": "JsonFormatter.format(Explainer explainer, JsonGenerator generator)", "testcase": false, "constructor": false}, {"identifier": "generate", "parameters": "(JsonGenerator generator, Explainer explainer)", "modifiers": "public", "return": "void", "signature": "void generate(JsonGenerator generator, Explainer explainer)", "full_signature": "public void generate(JsonGenerator generator, Explainer explainer)", "class_method_signature": "JsonFormatter.generate(JsonGenerator generator, Explainer explainer)", "testcase": false, "constructor": false}, {"identifier": "generatePrimitive", "parameters": "(JsonGenerator generator, PrimitiveExplainer explainer)", "modifiers": "protected", "return": "void", "signature": "void generatePrimitive(JsonGenerator generator, PrimitiveExplainer explainer)", "full_signature": "protected void generatePrimitive(JsonGenerator generator, PrimitiveExplainer explainer)", "class_method_signature": "JsonFormatter.generatePrimitive(JsonGenerator generator, PrimitiveExplainer explainer)", "testcase": false, "constructor": false}, {"identifier": "generateCompound", "parameters": "(JsonGenerator generator, CompoundExplainer explainer)", "modifiers": "protected", "return": "void", "signature": "void generateCompound(JsonGenerator generator, CompoundExplainer explainer)", "full_signature": "protected void generateCompound(JsonGenerator generator, CompoundExplainer explainer)", "class_method_signature": "JsonFormatter.generateCompound(JsonGenerator generator, CompoundExplainer explainer)", "testcase": false, "constructor": false}], "file": "fdb-sql-layer-core/src/main/java/com/foundationdb/server/explain/format/JsonFormatter.java"}, "focal_method": {"identifier": "format", "parameters": "(Explainer explainer)", "modifiers": "public", "return": "String", "body": "public String format(Explainer explainer) {\n        StringWriter str = new StringWriter();\n        try {\n            JsonGenerator generator = pretty ? createPrettyJsonGenerator(str) : createJsonGenerator(str);\n            generate(generator, explainer);\n            generator.flush();\n        }\n        catch (IOException ex) {\n            throw new AkibanInternalException(\"Error writing to string\", ex);\n        }\n        return str.toString();\n    }", "signature": "String format(Explainer explainer)", "full_signature": "public String format(Explainer explainer)", "class_method_signature": "JsonFormatter.format(Explainer explainer)", "testcase": false, "constructor": false, "invocations": ["createPrettyJsonGenerator", "createJsonGenerator", "generate", "flush", "toString"]}, "repository": {"repo_id": 32884360, "url": "https://github.com/jaytaylor/sql-layer", "language": "Java", "is_fork": false, "fork_count": 120, "stargazer_count": 77, "size": 138665, "license": "licensed"}}