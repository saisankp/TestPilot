{"test_class": {"identifier": "VectorsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Vector vector = new Vector(1, 2, 3);", "modifier": "", "type": "Vector", "declarator": "vector = new Vector(1, 2, 3)", "var_name": "vector"}, {"original_string": "Point position = new Point(null, 3, 2, 1);", "modifier": "", "type": "Point", "declarator": "position = new Point(null, 3, 2, 1)", "var_name": "position"}, {"original_string": "Point pivot = new Point(null, 0, 0, 0, 90, -180);", "modifier": "", "type": "Point", "declarator": "pivot = new Point(null, 0, 0, 0, 90, -180)", "var_name": "pivot"}], "file": "commons/src/test/java/com/karuslabs/commons/util/VectorsTest.java"}, "test_case": {"identifier": "rotate_vector_pivot", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void rotate_vector_pivot() {\n        assertEquals(new Vector(1, -2, -3), Vectors.rotate(vector, pivot));\n    }", "signature": "void rotate_vector_pivot()", "full_signature": "@Test void rotate_vector_pivot()", "class_method_signature": "VectorsTest.rotate_vector_pivot()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "rotate"]}, "focal_class": {"identifier": "Vectors", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Reduction<Vector> VECTOR = (vector, x, y, z) -> vector.setX(x).setY(y).setZ(z);", "modifier": "private static final", "type": "Reduction<Vector>", "declarator": "VECTOR = (vector, x, y, z) -> vector.setX(x).setY(y).setZ(z)", "var_name": "VECTOR"}, {"original_string": "private static final Reduction<Location> LOCATION = (location, x, y, z) -> {\n        location.setX(x);\n        location.setY(y);\n        location.setZ(z);\n        return location;\n    };", "modifier": "private static final", "type": "Reduction<Location>", "declarator": "LOCATION = (location, x, y, z) -> {\n        location.setX(x);\n        location.setY(y);\n        location.setZ(z);\n        return location;\n    }", "var_name": "LOCATION"}], "methods": [{"identifier": "rotate", "parameters": "(Vector vector, double angleX, double angleY, double angleZ)", "modifiers": "public static", "return": "Vector", "signature": "Vector rotate(Vector vector, double angleX, double angleY, double angleZ)", "full_signature": "public static Vector rotate(Vector vector, double angleX, double angleY, double angleZ)", "class_method_signature": "Vectors.rotate(Vector vector, double angleX, double angleY, double angleZ)", "testcase": false, "constructor": false}, {"identifier": "rotateAroundXAxis", "parameters": "(Vector vector, double angle)", "modifiers": "public static", "return": "Vector", "signature": "Vector rotateAroundXAxis(Vector vector, double angle)", "full_signature": "public static Vector rotateAroundXAxis(Vector vector, double angle)", "class_method_signature": "Vectors.rotateAroundXAxis(Vector vector, double angle)", "testcase": false, "constructor": false}, {"identifier": "rotateAroundYAxis", "parameters": "(Vector vector, double angle)", "modifiers": "public static", "return": "Vector", "signature": "Vector rotateAroundYAxis(Vector vector, double angle)", "full_signature": "public static Vector rotateAroundYAxis(Vector vector, double angle)", "class_method_signature": "Vectors.rotateAroundYAxis(Vector vector, double angle)", "testcase": false, "constructor": false}, {"identifier": "rotateAroundZAxis", "parameters": "(Vector vector, double angle)", "modifiers": "public static", "return": "Vector", "signature": "Vector rotateAroundZAxis(Vector vector, double angle)", "full_signature": "public static Vector rotateAroundZAxis(Vector vector, double angle)", "class_method_signature": "Vectors.rotateAroundZAxis(Vector vector, double angle)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(Vector vector, Location pivot)", "modifiers": "public static", "return": "Vector", "signature": "Vector rotate(Vector vector, Location pivot)", "full_signature": "public static Vector rotate(Vector vector, Location pivot)", "class_method_signature": "Vectors.rotate(Vector vector, Location pivot)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(Vector vector, float yawDegrees, float pitchDegrees)", "modifiers": "public static", "return": "Vector", "signature": "Vector rotate(Vector vector, float yawDegrees, float pitchDegrees)", "full_signature": "public static Vector rotate(Vector vector, float yawDegrees, float pitchDegrees)", "class_method_signature": "Vectors.rotate(Vector vector, float yawDegrees, float pitchDegrees)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(Location location, Location pivot)", "modifiers": "public static", "return": "Location", "signature": "Location rotate(Location location, Location pivot)", "full_signature": "public static Location rotate(Location location, Location pivot)", "class_method_signature": "Vectors.rotate(Location location, Location pivot)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(Location location, float yawDegrees, float pitchDegrees)", "modifiers": "public static", "return": "Location", "signature": "Location rotate(Location location, float yawDegrees, float pitchDegrees)", "full_signature": "public static Location rotate(Location location, float yawDegrees, float pitchDegrees)", "class_method_signature": "Vectors.rotate(Location location, float yawDegrees, float pitchDegrees)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(Reduction<T> reducer, T container, double initialX, double initialY, double initialZ, float yawDegrees, float pitchDegrees)", "modifiers": "static", "return": "T", "signature": "T rotate(Reduction<T> reducer, T container, double initialX, double initialY, double initialZ, float yawDegrees, float pitchDegrees)", "full_signature": "static T rotate(Reduction<T> reducer, T container, double initialX, double initialY, double initialZ, float yawDegrees, float pitchDegrees)", "class_method_signature": "Vectors.rotate(Reduction<T> reducer, T container, double initialX, double initialY, double initialZ, float yawDegrees, float pitchDegrees)", "testcase": false, "constructor": false}, {"identifier": "angleToXAxis", "parameters": "(Vector vector)", "modifiers": "public static", "return": "double", "signature": "double angleToXAxis(Vector vector)", "full_signature": "public static double angleToXAxis(Vector vector)", "class_method_signature": "Vectors.angleToXAxis(Vector vector)", "testcase": false, "constructor": false}], "file": "commons/src/main/java/com/karuslabs/commons/util/Vectors.java"}, "focal_method": {"identifier": "rotate", "parameters": "(Vector vector, double angleX, double angleY, double angleZ)", "modifiers": "public static", "return": "Vector", "body": "public static Vector rotate(Vector vector, double angleX, double angleY, double angleZ) {\n        rotateAroundXAxis(vector, angleX);\n        rotateAroundYAxis(vector, angleY);\n        rotateAroundZAxis(vector, angleZ);\n        \n        return vector;\n    }", "signature": "Vector rotate(Vector vector, double angleX, double angleY, double angleZ)", "full_signature": "public static Vector rotate(Vector vector, double angleX, double angleY, double angleZ)", "class_method_signature": "Vectors.rotate(Vector vector, double angleX, double angleY, double angleZ)", "testcase": false, "constructor": false, "invocations": ["rotateAroundXAxis", "rotateAroundYAxis", "rotateAroundZAxis"]}, "repository": {"repo_id": 68935766, "url": "https://github.com/Pante/Chimera", "stars": 13, "created": "9/22/2016 3:36:39 PM +00:00", "updates": "2020-01-27T21:22:29+00:00", "fork": "False", "license": "licensed"}}