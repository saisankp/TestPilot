{"test_class": {"identifier": "Eip150HFConfigTest", "superclass": "", "interfaces": "", "fields": [], "file": "ethereumj-core/src/test/java/org/ethereum/config/blockchain/Eip150HFConfigTest.java"}, "test_case": {"identifier": "testGetCreateGas", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetCreateGas() {\n        Eip150HFConfig eip150 = new Eip150HFConfig(null);\n\n        DataWord createGas = eip150.getCreateGas(DataWord.of(64_000));\n        assertEquals(BigInteger.valueOf(63_000), createGas.value());\n    }", "signature": "void testGetCreateGas()", "full_signature": "@Test public void testGetCreateGas()", "class_method_signature": "Eip150HFConfigTest.testGetCreateGas()", "testcase": true, "constructor": false, "invocations": ["getCreateGas", "of", "assertEquals", "valueOf", "value"]}, "focal_class": {"identifier": "Eip150HFConfig", "superclass": "", "interfaces": "implements BlockchainConfig, BlockchainNetConfig", "fields": [{"original_string": "protected BlockchainConfig parent;", "modifier": "protected", "type": "BlockchainConfig", "declarator": "parent", "var_name": "parent"}, {"original_string": "private static final GasCost NEW_GAS_COST = new GasCostEip150HF();", "modifier": "private static final", "type": "GasCost", "declarator": "NEW_GAS_COST = new GasCostEip150HF()", "var_name": "NEW_GAS_COST"}], "methods": [{"identifier": "Eip150HFConfig", "parameters": "(BlockchainConfig parent)", "modifiers": "public", "return": "", "signature": " Eip150HFConfig(BlockchainConfig parent)", "full_signature": "public  Eip150HFConfig(BlockchainConfig parent)", "class_method_signature": "Eip150HFConfig.Eip150HFConfig(BlockchainConfig parent)", "testcase": false, "constructor": true}, {"identifier": "getCallGas", "parameters": "(OpCode op, DataWord requestedGas, DataWord availableGas)", "modifiers": "@Override public", "return": "DataWord", "signature": "DataWord getCallGas(OpCode op, DataWord requestedGas, DataWord availableGas)", "full_signature": "@Override public DataWord getCallGas(OpCode op, DataWord requestedGas, DataWord availableGas)", "class_method_signature": "Eip150HFConfig.getCallGas(OpCode op, DataWord requestedGas, DataWord availableGas)", "testcase": false, "constructor": false}, {"identifier": "getCreateGas", "parameters": "(DataWord availableGas)", "modifiers": "@Override public", "return": "DataWord", "signature": "DataWord getCreateGas(DataWord availableGas)", "full_signature": "@Override public DataWord getCreateGas(DataWord availableGas)", "class_method_signature": "Eip150HFConfig.getCreateGas(DataWord availableGas)", "testcase": false, "constructor": false}, {"identifier": "getConstants", "parameters": "()", "modifiers": "@Override public", "return": "Constants", "signature": "Constants getConstants()", "full_signature": "@Override public Constants getConstants()", "class_method_signature": "Eip150HFConfig.getConstants()", "testcase": false, "constructor": false}, {"identifier": "getMineAlgorithm", "parameters": "(SystemProperties config)", "modifiers": "@Override public", "return": "MinerIfc", "signature": "MinerIfc getMineAlgorithm(SystemProperties config)", "full_signature": "@Override public MinerIfc getMineAlgorithm(SystemProperties config)", "class_method_signature": "Eip150HFConfig.getMineAlgorithm(SystemProperties config)", "testcase": false, "constructor": false}, {"identifier": "calcDifficulty", "parameters": "(BlockHeader curBlock, BlockHeader parent)", "modifiers": "@Override public", "return": "BigInteger", "signature": "BigInteger calcDifficulty(BlockHeader curBlock, BlockHeader parent)", "full_signature": "@Override public BigInteger calcDifficulty(BlockHeader curBlock, BlockHeader parent)", "class_method_signature": "Eip150HFConfig.calcDifficulty(BlockHeader curBlock, BlockHeader parent)", "testcase": false, "constructor": false}, {"identifier": "getCalcDifficultyMultiplier", "parameters": "(BlockHeader curBlock, BlockHeader parent)", "modifiers": "@Override public", "return": "BigInteger", "signature": "BigInteger getCalcDifficultyMultiplier(BlockHeader curBlock, BlockHeader parent)", "full_signature": "@Override public BigInteger getCalcDifficultyMultiplier(BlockHeader curBlock, BlockHeader parent)", "class_method_signature": "Eip150HFConfig.getCalcDifficultyMultiplier(BlockHeader curBlock, BlockHeader parent)", "testcase": false, "constructor": false}, {"identifier": "getTransactionCost", "parameters": "(Transaction tx)", "modifiers": "@Override public", "return": "long", "signature": "long getTransactionCost(Transaction tx)", "full_signature": "@Override public long getTransactionCost(Transaction tx)", "class_method_signature": "Eip150HFConfig.getTransactionCost(Transaction tx)", "testcase": false, "constructor": false}, {"identifier": "acceptTransactionSignature", "parameters": "(Transaction tx)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean acceptTransactionSignature(Transaction tx)", "full_signature": "@Override public boolean acceptTransactionSignature(Transaction tx)", "class_method_signature": "Eip150HFConfig.acceptTransactionSignature(Transaction tx)", "testcase": false, "constructor": false}, {"identifier": "validateTransactionChanges", "parameters": "(BlockStore blockStore, Block curBlock, Transaction tx, Repository repository)", "modifiers": "@Override public", "return": "String", "signature": "String validateTransactionChanges(BlockStore blockStore, Block curBlock, Transaction tx, Repository repository)", "full_signature": "@Override public String validateTransactionChanges(BlockStore blockStore, Block curBlock, Transaction tx, Repository repository)", "class_method_signature": "Eip150HFConfig.validateTransactionChanges(BlockStore blockStore, Block curBlock, Transaction tx, Repository repository)", "testcase": false, "constructor": false}, {"identifier": "hardForkTransfers", "parameters": "(Block block, Repository repo)", "modifiers": "@Override public", "return": "void", "signature": "void hardForkTransfers(Block block, Repository repo)", "full_signature": "@Override public void hardForkTransfers(Block block, Repository repo)", "class_method_signature": "Eip150HFConfig.hardForkTransfers(Block block, Repository repo)", "testcase": false, "constructor": false}, {"identifier": "getExtraData", "parameters": "(byte[] minerExtraData, long blockNumber)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] getExtraData(byte[] minerExtraData, long blockNumber)", "full_signature": "@Override public byte[] getExtraData(byte[] minerExtraData, long blockNumber)", "class_method_signature": "Eip150HFConfig.getExtraData(byte[] minerExtraData, long blockNumber)", "testcase": false, "constructor": false}, {"identifier": "headerValidators", "parameters": "()", "modifiers": "@Override public", "return": "List<Pair<Long, BlockHeaderValidator>>", "signature": "List<Pair<Long, BlockHeaderValidator>> headerValidators()", "full_signature": "@Override public List<Pair<Long, BlockHeaderValidator>> headerValidators()", "class_method_signature": "Eip150HFConfig.headerValidators()", "testcase": false, "constructor": false}, {"identifier": "eip161", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip161()", "full_signature": "@Override public boolean eip161()", "class_method_signature": "Eip150HFConfig.eip161()", "testcase": false, "constructor": false}, {"identifier": "getGasCost", "parameters": "()", "modifiers": "@Override public", "return": "GasCost", "signature": "GasCost getGasCost()", "full_signature": "@Override public GasCost getGasCost()", "class_method_signature": "Eip150HFConfig.getGasCost()", "testcase": false, "constructor": false}, {"identifier": "getConfigForBlock", "parameters": "(long blockNumber)", "modifiers": "@Override public", "return": "BlockchainConfig", "signature": "BlockchainConfig getConfigForBlock(long blockNumber)", "full_signature": "@Override public BlockchainConfig getConfigForBlock(long blockNumber)", "class_method_signature": "Eip150HFConfig.getConfigForBlock(long blockNumber)", "testcase": false, "constructor": false}, {"identifier": "getCommonConstants", "parameters": "()", "modifiers": "@Override public", "return": "Constants", "signature": "Constants getCommonConstants()", "full_signature": "@Override public Constants getCommonConstants()", "class_method_signature": "Eip150HFConfig.getCommonConstants()", "testcase": false, "constructor": false}, {"identifier": "getChainId", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getChainId()", "full_signature": "@Override public Integer getChainId()", "class_method_signature": "Eip150HFConfig.getChainId()", "testcase": false, "constructor": false}, {"identifier": "eip198", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip198()", "full_signature": "@Override public boolean eip198()", "class_method_signature": "Eip150HFConfig.eip198()", "testcase": false, "constructor": false}, {"identifier": "eip206", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip206()", "full_signature": "@Override public boolean eip206()", "class_method_signature": "Eip150HFConfig.eip206()", "testcase": false, "constructor": false}, {"identifier": "eip211", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip211()", "full_signature": "@Override public boolean eip211()", "class_method_signature": "Eip150HFConfig.eip211()", "testcase": false, "constructor": false}, {"identifier": "eip212", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip212()", "full_signature": "@Override public boolean eip212()", "class_method_signature": "Eip150HFConfig.eip212()", "testcase": false, "constructor": false}, {"identifier": "eip213", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip213()", "full_signature": "@Override public boolean eip213()", "class_method_signature": "Eip150HFConfig.eip213()", "testcase": false, "constructor": false}, {"identifier": "eip214", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip214()", "full_signature": "@Override public boolean eip214()", "class_method_signature": "Eip150HFConfig.eip214()", "testcase": false, "constructor": false}, {"identifier": "eip658", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip658()", "full_signature": "@Override public boolean eip658()", "class_method_signature": "Eip150HFConfig.eip658()", "testcase": false, "constructor": false}, {"identifier": "eip145", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip145()", "full_signature": "@Override public boolean eip145()", "class_method_signature": "Eip150HFConfig.eip145()", "testcase": false, "constructor": false}, {"identifier": "eip1052", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip1052()", "full_signature": "@Override public boolean eip1052()", "class_method_signature": "Eip150HFConfig.eip1052()", "testcase": false, "constructor": false}, {"identifier": "eip1283", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip1283()", "full_signature": "@Override public boolean eip1283()", "class_method_signature": "Eip150HFConfig.eip1283()", "testcase": false, "constructor": false}, {"identifier": "eip1014", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean eip1014()", "full_signature": "@Override public boolean eip1014()", "class_method_signature": "Eip150HFConfig.eip1014()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Eip150HFConfig.toString()", "testcase": false, "constructor": false}], "file": "ethereumj-core/src/main/java/org/ethereum/config/blockchain/Eip150HFConfig.java"}, "focal_method": {"identifier": "getCreateGas", "parameters": "(DataWord availableGas)", "modifiers": "@Override public", "return": "DataWord", "body": "@Override\n    public DataWord getCreateGas(DataWord availableGas) {\n        return Utils.allButOne64th(availableGas);\n    }", "signature": "DataWord getCreateGas(DataWord availableGas)", "full_signature": "@Override public DataWord getCreateGas(DataWord availableGas)", "class_method_signature": "Eip150HFConfig.getCreateGas(DataWord availableGas)", "testcase": false, "constructor": false, "invocations": ["allButOne64th"]}, "repository": {"repo_id": 19730456, "url": "https://github.com/ethereum/ethereumj", "language": "Java", "is_fork": false, "fork_count": 1034, "stargazer_count": 2058, "size": 47979, "license": "licensed"}}