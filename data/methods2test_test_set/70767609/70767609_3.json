{"test_class": {"identifier": "TicketAgentClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  private TicketAgentClient ticketAgentClient;", "modifier": "@Autowired\n  private", "type": "TicketAgentClient", "declarator": "ticketAgentClient", "var_name": "ticketAgentClient"}, {"original_string": "@Autowired\n  private WebServiceTemplate webServiceTemplate;", "modifier": "@Autowired\n  private", "type": "WebServiceTemplate", "declarator": "webServiceTemplate", "var_name": "webServiceTemplate"}, {"original_string": "private MockWebServiceServer mockWebServiceServer;", "modifier": "private", "type": "MockWebServiceServer", "declarator": "mockWebServiceServer", "var_name": "mockWebServiceServer"}], "file": "spring-ws-soapaction-header/src/test/java/com/codenotfound/ws/client/TicketAgentClientTest.java"}, "test_case": {"identifier": "testListFlights", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testListFlights() {\n    Source requestPayload =\n        new StringSource(\"<ns3:listFlightsRequest xmlns:ns3=\\\"http://example.org/TicketAgent.xsd\\\">\"\n            + \"</ns3:listFlightsRequest>\");\n\n    Source responsePayload =\n        new StringSource(\"<v1:listFlightsResponse xmlns:v1=\\\"http://example.org/TicketAgent.xsd\\\">\"\n            + \"<flightNumber>101</flightNumber>\" + \"</v1:listFlightsResponse>\");\n\n    // check if the SOAPAction is present using the custom matcher\n    mockWebServiceServer.expect(new SoapActionMatcher(\"http://example.com/TicketAgent/listFlights\"))\n        .andExpect(payload(requestPayload)).andRespond(withPayload(responsePayload));\n\n    List<BigInteger> flights = ticketAgentClient.listFlights();\n    assertThat(flights.get(0)).isEqualTo(BigInteger.valueOf(101));\n\n    mockWebServiceServer.verify();\n  }", "signature": "void testListFlights()", "full_signature": "@Test public void testListFlights()", "class_method_signature": "TicketAgentClientTest.testListFlights()", "testcase": true, "constructor": false, "invocations": ["andRespond", "andExpect", "expect", "payload", "withPayload", "listFlights", "isEqualTo", "assertThat", "get", "valueOf", "verify"]}, "focal_class": {"identifier": "TicketAgentClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n  private WebServiceTemplate webServiceTemplate;", "modifier": "@Autowired\n  private", "type": "WebServiceTemplate", "declarator": "webServiceTemplate", "var_name": "webServiceTemplate"}], "methods": [{"identifier": "listFlights", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "List<BigInteger>", "signature": "List<BigInteger> listFlights()", "full_signature": "@SuppressWarnings(\"unchecked\") public List<BigInteger> listFlights()", "class_method_signature": "TicketAgentClient.listFlights()", "testcase": false, "constructor": false}], "file": "spring-ws-soapaction-header/src/main/java/com/codenotfound/ws/client/TicketAgentClient.java"}, "focal_method": {"identifier": "listFlights", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "List<BigInteger>", "body": "@SuppressWarnings(\"unchecked\")\n  public List<BigInteger> listFlights() {\n    ObjectFactory factory = new ObjectFactory();\n    TListFlights tListFlights = factory.createTListFlights();\n\n    JAXBElement<TListFlights> request = factory.createListFlightsRequest(tListFlights);\n\n    // use SoapActionCallback to add the SOAPAction\n    JAXBElement<TFlightsResponse> response =\n        (JAXBElement<TFlightsResponse>) webServiceTemplate.marshalSendAndReceive(request,\n            new SoapActionCallback(\"http://example.com/TicketAgent/listFlights\"));\n\n    return response.getValue().getFlightNumber();\n  }", "signature": "List<BigInteger> listFlights()", "full_signature": "@SuppressWarnings(\"unchecked\") public List<BigInteger> listFlights()", "class_method_signature": "TicketAgentClient.listFlights()", "testcase": false, "constructor": false, "invocations": ["createTListFlights", "createListFlightsRequest", "marshalSendAndReceive", "getFlightNumber", "getValue"]}, "repository": {"repo_id": 70767609, "url": "https://github.com/code-not-found/spring-ws", "language": "Java", "is_fork": false, "fork_count": 220, "stargazer_count": 68, "size": 161, "license": "licensed"}}