{"test_class": {"identifier": "DelegatePresenterTest", "superclass": "extends BaseTestCase", "interfaces": "", "fields": [{"original_string": "@Mock\n    private DelegateContract.View view;", "modifier": "@Mock\n    private", "type": "DelegateContract.View", "declarator": "view", "var_name": "view"}, {"original_string": "private DelegatePresenter presenter;", "modifier": "private", "type": "DelegatePresenter", "declarator": "presenter", "var_name": "presenter"}], "file": "wallet/src/test/java/com/platon/aton/component/ui/presenter/DelegatePresenterTest.java"}, "test_case": {"identifier": "checkDelegateAmount", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkDelegateAmount(){\n\n        EstimateGasResult estimateGasResult = new EstimateGasResult();\n        estimateGasResult.setBlockGasLimit(\"500000000000\");\n        estimateGasResult.setFree(\"5983375239628300134343588424455034335218\");\n        estimateGasResult.setGasLimit(\"1379820\");\n        estimateGasResult.setGasPrice(\"500000000000\");\n        estimateGasResult.setLock(\"0\");\n        estimateGasResult.setMinDelegation(\"20000000000000000000\");\n        estimateGasResult.setNonce(\"44\");\n\n        presenter.setmEstimateGasResult(estimateGasResult);\n        presenter.checkDelegateAmount(\"100\");\n\n        Mockito.verify(view).showTips(Mockito.anyBoolean(),Mockito.anyString());\n    }", "signature": "void checkDelegateAmount()", "full_signature": "@Test public void checkDelegateAmount()", "class_method_signature": "DelegatePresenterTest.checkDelegateAmount()", "testcase": true, "constructor": false, "invocations": ["setBlockGasLimit", "setFree", "setGasLimit", "setGasPrice", "setLock", "setMinDelegation", "setNonce", "setmEstimateGasResult", "checkDelegateAmount", "showTips", "verify", "anyBoolean", "anyString"]}, "focal_class": {"identifier": "DelegatePresenter", "superclass": "extends BasePresenter<DelegateContract.View>", "interfaces": "implements DelegateContract.Presenter", "fields": [{"original_string": "private final static BigInteger DEFAULT_EXCHANGE_RATE = BigInteger.valueOf(1000000000000000000L);", "modifier": "private final static", "type": "BigInteger", "declarator": "DEFAULT_EXCHANGE_RATE = BigInteger.valueOf(1000000000000000000L)", "var_name": "DEFAULT_EXCHANGE_RATE"}, {"original_string": "private Wallet mWallet;", "modifier": "private", "type": "Wallet", "declarator": "mWallet", "var_name": "mWallet"}, {"original_string": "private DelegateItemInfo mDelegateDetail;", "modifier": "private", "type": "DelegateItemInfo", "declarator": "mDelegateDetail", "var_name": "mDelegateDetail"}, {"original_string": "private EstimateGasResult mEstimateGasResult;", "modifier": "private", "type": "EstimateGasResult", "declarator": "mEstimateGasResult", "var_name": "mEstimateGasResult"}, {"original_string": "private ArrayList<Wallet> sidebarWallets = new ArrayList<>();", "modifier": "private", "type": "ArrayList<Wallet>", "declarator": "sidebarWallets = new ArrayList<>()", "var_name": "sidebarWallets"}, {"original_string": "private boolean isAll = false;", "modifier": "private", "type": "boolean", "declarator": "isAll = false", "var_name": "isAll"}], "methods": [{"identifier": "getmEstimateGasResult", "parameters": "()", "modifiers": "public", "return": "EstimateGasResult", "signature": "EstimateGasResult getmEstimateGasResult()", "full_signature": "public EstimateGasResult getmEstimateGasResult()", "class_method_signature": "DelegatePresenter.getmEstimateGasResult()", "testcase": false, "constructor": false}, {"identifier": "setmEstimateGasResult", "parameters": "(EstimateGasResult mEstimateGasResult)", "modifiers": "public", "return": "void", "signature": "void setmEstimateGasResult(EstimateGasResult mEstimateGasResult)", "full_signature": "public void setmEstimateGasResult(EstimateGasResult mEstimateGasResult)", "class_method_signature": "DelegatePresenter.setmEstimateGasResult(EstimateGasResult mEstimateGasResult)", "testcase": false, "constructor": false}, {"identifier": "getWalletAddress", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getWalletAddress()", "full_signature": "public String getWalletAddress()", "class_method_signature": "DelegatePresenter.getWalletAddress()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(DelegateItemInfo delegateItemInfo)", "modifiers": "@Override public", "return": "void", "signature": "void init(DelegateItemInfo delegateItemInfo)", "full_signature": "@Override public void init(DelegateItemInfo delegateItemInfo)", "class_method_signature": "DelegatePresenter.init(DelegateItemInfo delegateItemInfo)", "testcase": false, "constructor": false}, {"identifier": "showSelectWalletDialogFragment", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void showSelectWalletDialogFragment()", "full_signature": "@Override public void showSelectWalletDialogFragment()", "class_method_signature": "DelegatePresenter.showSelectWalletDialogFragment()", "testcase": false, "constructor": false}, {"identifier": "showWalletInfo", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void showWalletInfo()", "full_signature": "@Override public void showWalletInfo()", "class_method_signature": "DelegatePresenter.showWalletInfo()", "testcase": false, "constructor": false}, {"identifier": "checkDelegateAmount", "parameters": "(String delegateAmount)", "modifiers": "@Override public", "return": "void", "signature": "void checkDelegateAmount(String delegateAmount)", "full_signature": "@Override public void checkDelegateAmount(String delegateAmount)", "class_method_signature": "DelegatePresenter.checkDelegateAmount(String delegateAmount)", "testcase": false, "constructor": false}, {"identifier": "updateDelegateButtonState", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void updateDelegateButtonState()", "full_signature": "@Override public void updateDelegateButtonState()", "class_method_signature": "DelegatePresenter.updateDelegateButtonState()", "testcase": false, "constructor": false}, {"identifier": "getGasProvider", "parameters": "(StakingAmountType stakingAmountType)", "modifiers": "@SuppressLint(\"CheckResult\") @Override public", "return": "void", "signature": "void getGasProvider(StakingAmountType stakingAmountType)", "full_signature": "@SuppressLint(\"CheckResult\") @Override public void getGasProvider(StakingAmountType stakingAmountType)", "class_method_signature": "DelegatePresenter.getGasProvider(StakingAmountType stakingAmountType)", "testcase": false, "constructor": false}, {"identifier": "loadData", "parameters": "(int walletTypeSearch, String keywords)", "modifiers": "@Override public", "return": "void", "signature": "void loadData(int walletTypeSearch, String keywords)", "full_signature": "@Override public void loadData(int walletTypeSearch, String keywords)", "class_method_signature": "DelegatePresenter.loadData(int walletTypeSearch, String keywords)", "testcase": false, "constructor": false}, {"identifier": "accountBalanceCompareTo", "parameters": "(Wallet o1, Wallet o2)", "modifiers": "private", "return": "int", "signature": "int accountBalanceCompareTo(Wallet o1, Wallet o2)", "full_signature": "private int accountBalanceCompareTo(Wallet o1, Wallet o2)", "class_method_signature": "DelegatePresenter.accountBalanceCompareTo(Wallet o1, Wallet o2)", "testcase": false, "constructor": false}, {"identifier": "getDataSource", "parameters": "()", "modifiers": "@Override public", "return": "ArrayList<Wallet>", "signature": "ArrayList<Wallet> getDataSource()", "full_signature": "@Override public ArrayList<Wallet> getDataSource()", "class_method_signature": "DelegatePresenter.getDataSource()", "testcase": false, "constructor": false}, {"identifier": "updateSelectedWalletnotifyData", "parameters": "(Wallet selectedWallet)", "modifiers": "@Override public", "return": "void", "signature": "void updateSelectedWalletnotifyData(Wallet selectedWallet)", "full_signature": "@Override public void updateSelectedWalletnotifyData(Wallet selectedWallet)", "class_method_signature": "DelegatePresenter.updateSelectedWalletnotifyData(Wallet selectedWallet)", "testcase": false, "constructor": false}, {"identifier": "checkKeywordsAddress", "parameters": "(String input)", "modifiers": "public", "return": "boolean", "signature": "boolean checkKeywordsAddress(String input)", "full_signature": "public boolean checkKeywordsAddress(String input)", "class_method_signature": "DelegatePresenter.checkKeywordsAddress(String input)", "testcase": false, "constructor": false}, {"identifier": "getAllPrice", "parameters": "(StakingAmountType stakingAmountType, String amount, boolean keepBalance)", "modifiers": "public", "return": "void", "signature": "void getAllPrice(StakingAmountType stakingAmountType, String amount, boolean keepBalance)", "full_signature": "public void getAllPrice(StakingAmountType stakingAmountType, String amount, boolean keepBalance)", "class_method_signature": "DelegatePresenter.getAllPrice(StakingAmountType stakingAmountType, String amount, boolean keepBalance)", "testcase": false, "constructor": false}, {"identifier": "getDelegateAmount", "parameters": "(String preDelegateAmount, String feeAmount)", "modifiers": "private", "return": "String", "signature": "String getDelegateAmount(String preDelegateAmount, String feeAmount)", "full_signature": "private String getDelegateAmount(String preDelegateAmount, String feeAmount)", "class_method_signature": "DelegatePresenter.getDelegateAmount(String preDelegateAmount, String feeAmount)", "testcase": false, "constructor": false}, {"identifier": "getFeeAmount", "parameters": "(BigInteger gasPrice, BigInteger gasLimit)", "modifiers": "private", "return": "String", "signature": "String getFeeAmount(BigInteger gasPrice, BigInteger gasLimit)", "full_signature": "private String getFeeAmount(BigInteger gasPrice, BigInteger gasLimit)", "class_method_signature": "DelegatePresenter.getFeeAmount(BigInteger gasPrice, BigInteger gasLimit)", "testcase": false, "constructor": false}, {"identifier": "getGasPrice", "parameters": "(String feeAmount, BigInteger gasLimit)", "modifiers": "private", "return": "BigInteger", "signature": "BigInteger getGasPrice(String feeAmount, BigInteger gasLimit)", "full_signature": "private BigInteger getGasPrice(String feeAmount, BigInteger gasLimit)", "class_method_signature": "DelegatePresenter.getGasPrice(String feeAmount, BigInteger gasLimit)", "testcase": false, "constructor": false}, {"identifier": "checkDelegateParam", "parameters": "(EstimateGasResult estimateGasResult, StakingAmountType stakingAmountType)", "modifiers": "public", "return": "String", "signature": "String checkDelegateParam(EstimateGasResult estimateGasResult, StakingAmountType stakingAmountType)", "full_signature": "public String checkDelegateParam(EstimateGasResult estimateGasResult, StakingAmountType stakingAmountType)", "class_method_signature": "DelegatePresenter.checkDelegateParam(EstimateGasResult estimateGasResult, StakingAmountType stakingAmountType)", "testcase": false, "constructor": false}, {"identifier": "submitDelegate", "parameters": "(StakingAmountType stakingAmountType)", "modifiers": "@SuppressLint(\"CheckResult\") @Override public", "return": "void", "signature": "void submitDelegate(StakingAmountType stakingAmountType)", "full_signature": "@SuppressLint(\"CheckResult\") @Override public void submitDelegate(StakingAmountType stakingAmountType)", "class_method_signature": "DelegatePresenter.submitDelegate(StakingAmountType stakingAmountType)", "testcase": false, "constructor": false}, {"identifier": "getMessageDescByErrorCode", "parameters": "(int errorCode)", "modifiers": "private", "return": "String", "signature": "String getMessageDescByErrorCode(int errorCode)", "full_signature": "private String getMessageDescByErrorCode(int errorCode)", "class_method_signature": "DelegatePresenter.getMessageDescByErrorCode(int errorCode)", "testcase": false, "constructor": false}, {"identifier": "estimateGas", "parameters": "(String from, String nodeId)", "modifiers": "private", "return": "Single<Response<ApiResponse<EstimateGasResult>>>", "signature": "Single<Response<ApiResponse<EstimateGasResult>>> estimateGas(String from, String nodeId)", "full_signature": "private Single<Response<ApiResponse<EstimateGasResult>>> estimateGas(String from, String nodeId)", "class_method_signature": "DelegatePresenter.estimateGas(String from, String nodeId)", "testcase": false, "constructor": false}, {"identifier": "delegate", "parameters": "(Credentials credentials, String inputAmount, String nodeId, String nodeName, StakingAmountType stakingAmountType, GasProvider gasProvider, String nonce)", "modifiers": "@SuppressLint(\"CheckResult\") private", "return": "void", "signature": "void delegate(Credentials credentials, String inputAmount, String nodeId, String nodeName, StakingAmountType stakingAmountType, GasProvider gasProvider, String nonce)", "full_signature": "@SuppressLint(\"CheckResult\") private void delegate(Credentials credentials, String inputAmount, String nodeId, String nodeName, StakingAmountType stakingAmountType, GasProvider gasProvider, String nonce)", "class_method_signature": "DelegatePresenter.delegate(Credentials credentials, String inputAmount, String nodeId, String nodeName, StakingAmountType stakingAmountType, GasProvider gasProvider, String nonce)", "testcase": false, "constructor": false}, {"identifier": "getWalletByAddress", "parameters": "(String address)", "modifiers": "public", "return": "Wallet", "signature": "Wallet getWalletByAddress(String address)", "full_signature": "public Wallet getWalletByAddress(String address)", "class_method_signature": "DelegatePresenter.getWalletByAddress(String address)", "testcase": false, "constructor": false}, {"identifier": "getEstimateGas", "parameters": "(String prefixAddress, String nodeId)", "modifiers": "public", "return": "void", "signature": "void getEstimateGas(String prefixAddress, String nodeId)", "full_signature": "public void getEstimateGas(String prefixAddress, String nodeId)", "class_method_signature": "DelegatePresenter.getEstimateGas(String prefixAddress, String nodeId)", "testcase": false, "constructor": false}, {"identifier": "showInputPasswordDialogFragment", "parameters": "(String inputAmount, String nodeAddress, String nodeName, StakingAmountType stakingAmountType, GasProvider gasProvider, String nonce)", "modifiers": "private", "return": "void", "signature": "void showInputPasswordDialogFragment(String inputAmount, String nodeAddress, String nodeName, StakingAmountType stakingAmountType, GasProvider gasProvider, String nonce)", "full_signature": "private void showInputPasswordDialogFragment(String inputAmount, String nodeAddress, String nodeName, StakingAmountType stakingAmountType, GasProvider gasProvider, String nonce)", "class_method_signature": "DelegatePresenter.showInputPasswordDialogFragment(String inputAmount, String nodeAddress, String nodeName, StakingAmountType stakingAmountType, GasProvider gasProvider, String nonce)", "testcase": false, "constructor": false}, {"identifier": "showTransactionAuthorizationDialogFragment", "parameters": "(String nodeId, String nodeName, StakingAmountType stakingAmountType, GasProvider gasProvider, String transactionAmount, String from, String to, String nonce)", "modifiers": "private", "return": "void", "signature": "void showTransactionAuthorizationDialogFragment(String nodeId, String nodeName, StakingAmountType stakingAmountType, GasProvider gasProvider, String transactionAmount, String from, String to, String nonce)", "full_signature": "private void showTransactionAuthorizationDialogFragment(String nodeId, String nodeName, StakingAmountType stakingAmountType, GasProvider gasProvider, String transactionAmount, String from, String to, String nonce)", "class_method_signature": "DelegatePresenter.showTransactionAuthorizationDialogFragment(String nodeId, String nodeName, StakingAmountType stakingAmountType, GasProvider gasProvider, String transactionAmount, String from, String to, String nonce)", "testcase": false, "constructor": false}], "file": "wallet/src/main/java/com/platon/aton/component/ui/presenter/DelegatePresenter.java"}, "focal_method": {"identifier": "checkDelegateAmount", "parameters": "(String delegateAmount)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void checkDelegateAmount(String delegateAmount) {\n        if (mEstimateGasResult != null) {\n            double amount = NumberParserUtils.parseDouble(delegateAmount);\n            String minDelegationAmount = NumberParserUtils.getPrettyNumber(AmountUtil.convertVonToLat(mEstimateGasResult.getMinDelegation()));\n            //\u68c0\u67e5\u59d4\u6258\u7684\u6570\u91cf\n            if (TextUtils.isEmpty(delegateAmount)) {\n                getView().showTips(false, minDelegationAmount);\n            } else if (amount < NumberParserUtils.parseDouble(NumberParserUtils.getPrettyBalance(AmountUtil.convertVonToLat(mEstimateGasResult.getMinDelegation())))) {\n                //\u6309\u94ae\u4e0d\u53ef\u70b9\u51fb,\u5e76\u4e14\u4e0b\u65b9\u63d0\u793a\n                getView().showTips(true, minDelegationAmount);\n            } else {\n                getView().showTips(false, minDelegationAmount);\n            }\n            updateDelegateButtonState();\n        }\n    }", "signature": "void checkDelegateAmount(String delegateAmount)", "full_signature": "@Override public void checkDelegateAmount(String delegateAmount)", "class_method_signature": "DelegatePresenter.checkDelegateAmount(String delegateAmount)", "testcase": false, "constructor": false, "invocations": ["parseDouble", "getPrettyNumber", "convertVonToLat", "getMinDelegation", "isEmpty", "showTips", "getView", "parseDouble", "getPrettyBalance", "convertVonToLat", "getMinDelegation", "showTips", "getView", "showTips", "getView", "updateDelegateButtonState"]}, "repository": {"repo_id": 166324888, "url": "https://github.com/PlatONnetwork/ATON-Android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 118901, "license": "licensed"}}