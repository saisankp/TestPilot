{"test_class": {"identifier": "RomanNumbersUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-model/src/test/java/org/sejda/common/RomanNumbersUtilsTest.java"}, "test_case": {"identifier": "testFailingNegative", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testFailingNegative() {\n        RomanNumbersUtils.toRoman(-1);\n    }", "signature": "void testFailingNegative()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testFailingNegative()", "class_method_signature": "RomanNumbersUtilsTest.testFailingNegative()", "testcase": true, "constructor": false, "invocations": ["toRoman"]}, "focal_class": {"identifier": "RomanNumbersUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "RomanNumbersUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " RomanNumbersUtils()", "full_signature": "private  RomanNumbersUtils()", "class_method_signature": "RomanNumbersUtils.RomanNumbersUtils()", "testcase": false, "constructor": true}, {"identifier": "toRoman", "parameters": "(long toConvert)", "modifiers": "public static", "return": "String", "signature": "String toRoman(long toConvert)", "full_signature": "public static String toRoman(long toConvert)", "class_method_signature": "RomanNumbersUtils.toRoman(long toConvert)", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/common/RomanNumbersUtils.java"}, "focal_method": {"identifier": "toRoman", "parameters": "(long toConvert)", "modifiers": "public static", "return": "String", "body": "public static String toRoman(long toConvert) {\n\n        if (toConvert <= 0) {\n            throw new IllegalArgumentException();\n        }\n\n        long n = toConvert;\n        StringBuilder buf = new StringBuilder();\n        final Numeral[] values = Numeral.values();\n        for (int i = values.length - 1; i >= 0; i--) {\n            while (n >= values[i].weight) {\n                buf.append(values[i]);\n                n -= values[i].weight;\n            }\n        }\n        return buf.toString();\n    }", "signature": "String toRoman(long toConvert)", "full_signature": "public static String toRoman(long toConvert)", "class_method_signature": "RomanNumbersUtils.toRoman(long toConvert)", "testcase": false, "constructor": false, "invocations": ["values", "append", "toString"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}