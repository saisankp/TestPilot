{"test_class": {"identifier": "PageLockTrackerManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/persistence/diagnostic/pagelocktracker/PageLockTrackerManagerTest.java"}, "test_case": {"identifier": "testDisableTracking", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDisableTracking() {\n        System.setProperty(\"IGNITE_PAGE_LOCK_TRACKER_TYPE\", String.valueOf(-1));\n\n        try {\n            PageLockTrackerManager mgr = new PageLockTrackerManager(new ListeningTestLogger());\n\n            PageLockListener pll = mgr.createPageLockTracker(\"test\");\n\n            Assert.assertNotNull(pll);\n            Assert.assertSame(pll, DataStructure.NOOP_LSNR);\n\n        } finally {\n            System.clearProperty(\"IGNITE_PAGE_LOCK_TRACKER_TYPE\");\n        }\n\n        System.setProperty(\"IGNITE_PAGE_LOCK_TRACKER_TYPE\", String.valueOf(HEAP_LOG));\n\n        try {\n            PageLockTrackerManager mgr = new PageLockTrackerManager(new ListeningTestLogger());\n\n            PageLockListener pll = mgr.createPageLockTracker(\"test\");\n\n            Assert.assertNotNull(pll);\n            Assert.assertNotSame(pll, DataStructure.NOOP_LSNR);\n\n        } finally {\n            System.clearProperty(\"IGNITE_PAGE_LOCK_TRACKER_TYPE\");\n        }\n    }", "signature": "void testDisableTracking()", "full_signature": "@Test public void testDisableTracking()", "class_method_signature": "PageLockTrackerManagerTest.testDisableTracking()", "testcase": true, "constructor": false, "invocations": ["setProperty", "valueOf", "createPageLockTracker", "assertNotNull", "assertSame", "clearProperty", "setProperty", "valueOf", "createPageLockTracker", "assertNotNull", "assertNotSame", "clearProperty"]}, "focal_class": {"identifier": "PageLockTrackerManager", "superclass": "", "interfaces": "implements LifecycleAware", "fields": [{"original_string": "private static final long OVERHEAD_SIZE = 16 + 8 + 8 + 8 + 8;", "modifier": "private static final", "type": "long", "declarator": "OVERHEAD_SIZE = 16 + 8 + 8 + 8 + 8", "var_name": "OVERHEAD_SIZE"}, {"original_string": "private final MemoryCalculator memoryCalculator = new MemoryCalculator();", "modifier": "private final", "type": "MemoryCalculator", "declarator": "memoryCalculator = new MemoryCalculator()", "var_name": "memoryCalculator"}, {"original_string": "private final PageLockTrackerMXBean mxBean;", "modifier": "private final", "type": "PageLockTrackerMXBean", "declarator": "mxBean", "var_name": "mxBean"}, {"original_string": "private final SharedPageLockTracker sharedPageLockTracker;", "modifier": "private final", "type": "SharedPageLockTracker", "declarator": "sharedPageLockTracker", "var_name": "sharedPageLockTracker"}, {"original_string": "private final IgniteLogger log;", "modifier": "private final", "type": "IgniteLogger", "declarator": "log", "var_name": "log"}, {"original_string": "private Set<PageLockThreadState> threads;", "modifier": "private", "type": "Set<PageLockThreadState>", "declarator": "threads", "var_name": "threads"}, {"original_string": "private final String managerNameId;", "modifier": "private final", "type": "String", "declarator": "managerNameId", "var_name": "managerNameId"}, {"original_string": "private final boolean trackingEnable;", "modifier": "private final", "type": "boolean", "declarator": "trackingEnable", "var_name": "trackingEnable"}], "methods": [{"identifier": "PageLockTrackerManager", "parameters": "(IgniteLogger log)", "modifiers": "public", "return": "", "signature": " PageLockTrackerManager(IgniteLogger log)", "full_signature": "public  PageLockTrackerManager(IgniteLogger log)", "class_method_signature": "PageLockTrackerManager.PageLockTrackerManager(IgniteLogger log)", "testcase": false, "constructor": true}, {"identifier": "PageLockTrackerManager", "parameters": "(IgniteLogger log, String managerNameId)", "modifiers": "public", "return": "", "signature": " PageLockTrackerManager(IgniteLogger log, String managerNameId)", "full_signature": "public  PageLockTrackerManager(IgniteLogger log, String managerNameId)", "class_method_signature": "PageLockTrackerManager.PageLockTrackerManager(IgniteLogger log, String managerNameId)", "testcase": false, "constructor": true}, {"identifier": "onHangThreads", "parameters": "(@NotNull Set<PageLockThreadState> threads)", "modifiers": "private", "return": "void", "signature": "void onHangThreads(@NotNull Set<PageLockThreadState> threads)", "full_signature": "private void onHangThreads(@NotNull Set<PageLockThreadState> threads)", "class_method_signature": "PageLockTrackerManager.onHangThreads(@NotNull Set<PageLockThreadState> threads)", "testcase": false, "constructor": false}, {"identifier": "createPageLockTracker", "parameters": "(String name)", "modifiers": "public", "return": "PageLockListener", "signature": "PageLockListener createPageLockTracker(String name)", "full_signature": "public PageLockListener createPageLockTracker(String name)", "class_method_signature": "PageLockTrackerManager.createPageLockTracker(String name)", "testcase": false, "constructor": false}, {"identifier": "dumpLocks", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String dumpLocks()", "full_signature": "public String dumpLocks()", "class_method_signature": "PageLockTrackerManager.dumpLocks()", "testcase": false, "constructor": false}, {"identifier": "dumpLocksToLog", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void dumpLocksToLog()", "full_signature": "public void dumpLocksToLog()", "class_method_signature": "PageLockTrackerManager.dumpLocksToLog()", "testcase": false, "constructor": false}, {"identifier": "dumpLocksToFile", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String dumpLocksToFile()", "full_signature": "public String dumpLocksToFile()", "class_method_signature": "PageLockTrackerManager.dumpLocksToFile()", "testcase": false, "constructor": false}, {"identifier": "dumpLocksToFile", "parameters": "(String path)", "modifiers": "public", "return": "String", "signature": "String dumpLocksToFile(String path)", "full_signature": "public String dumpLocksToFile(String path)", "class_method_signature": "PageLockTrackerManager.dumpLocksToFile(String path)", "testcase": false, "constructor": false}, {"identifier": "mxBean", "parameters": "()", "modifiers": "public", "return": "PageLockTrackerMXBean", "signature": "PageLockTrackerMXBean mxBean()", "full_signature": "public PageLockTrackerMXBean mxBean()", "class_method_signature": "PageLockTrackerManager.mxBean()", "testcase": false, "constructor": false}, {"identifier": "getHeapOverhead", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getHeapOverhead()", "full_signature": "public long getHeapOverhead()", "class_method_signature": "PageLockTrackerManager.getHeapOverhead()", "testcase": false, "constructor": false}, {"identifier": "getOffHeapOverhead", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getOffHeapOverhead()", "full_signature": "public long getOffHeapOverhead()", "class_method_signature": "PageLockTrackerManager.getOffHeapOverhead()", "testcase": false, "constructor": false}, {"identifier": "getTotalOverhead", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTotalOverhead()", "full_signature": "public long getTotalOverhead()", "class_method_signature": "PageLockTrackerManager.getTotalOverhead()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void start()", "full_signature": "@Override public void start()", "class_method_signature": "PageLockTrackerManager.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "PageLockTrackerManager.stop()", "testcase": false, "constructor": false}], "file": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/diagnostic/pagelocktracker/PageLockTrackerManager.java"}, "focal_method": {"identifier": "createPageLockTracker", "parameters": "(String name)", "modifiers": "public", "return": "PageLockListener", "body": "public PageLockListener createPageLockTracker(String name) {\n        if (!trackingEnable)\n            return DataStructure.NOOP_LSNR;\n\n        return sharedPageLockTracker.registrateStructure(name);\n    }", "signature": "PageLockListener createPageLockTracker(String name)", "full_signature": "public PageLockListener createPageLockTracker(String name)", "class_method_signature": "PageLockTrackerManager.createPageLockTracker(String name)", "testcase": false, "constructor": false, "invocations": ["registrateStructure"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}