{"test_class": {"identifier": "ClassNameResolverTest", "superclass": "", "interfaces": "", "fields": [], "file": "link-move/src/test/java/com/nhl/link/move/ClassNameResolverTest.java"}, "test_case": {"identifier": "testTypeForName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testTypeForName() throws ClassNotFoundException {\n\n\t\tassertSame(String.class, ClassNameResolver.typeForName(\"java.lang.String\"));\n\t\tassertSame(Integer.class, ClassNameResolver.typeForName(\"java.lang.Integer\"));\n\t\tassertSame(byte[].class, ClassNameResolver.typeForName(\"byte[]\"));\n\t\tassertSame(Integer.TYPE, ClassNameResolver.typeForName(\"int\"));\n\t}", "signature": "void testTypeForName()", "full_signature": "@Test public void testTypeForName()", "class_method_signature": "ClassNameResolverTest.testTypeForName()", "testcase": true, "constructor": false, "invocations": ["assertSame", "typeForName", "assertSame", "typeForName", "assertSame", "typeForName", "assertSame", "typeForName"]}, "focal_class": {"identifier": "ClassNameResolver", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "typeForName", "parameters": "(String className)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> typeForName(String className)", "full_signature": "public static Class<?> typeForName(String className)", "class_method_signature": "ClassNameResolver.typeForName(String className)", "testcase": false, "constructor": false}, {"identifier": "typeForNameWithExceptions", "parameters": "(String className)", "modifiers": "private static", "return": "Class<?>", "signature": "Class<?> typeForNameWithExceptions(String className)", "full_signature": "private static Class<?> typeForNameWithExceptions(String className)", "class_method_signature": "ClassNameResolver.typeForNameWithExceptions(String className)", "testcase": false, "constructor": false}], "file": "link-move/src/main/java/com/nhl/link/move/ClassNameResolver.java"}, "focal_method": {"identifier": "typeForName", "parameters": "(String className)", "modifiers": "public static", "return": "Class<?>", "body": "public static Class<?> typeForName(String className) {\n        Objects.requireNonNull(className);\n\n        try {\n            return typeForNameWithExceptions(className);\n        } catch (ClassNotFoundException e) {\n            throw new LmRuntimeException(\"Class not found: \" + className, e);\n        }\n    }", "signature": "Class<?> typeForName(String className)", "full_signature": "public static Class<?> typeForName(String className)", "class_method_signature": "ClassNameResolver.typeForName(String className)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "typeForNameWithExceptions"]}, "repository": {"repo_id": 22876447, "url": "https://github.com/nhl/link-move", "stars": 25, "created": "8/12/2014 12:27:10 PM +00:00", "updates": "2019-12-01T17:30:35+00:00", "fork": "False", "license": "licensed"}}