{"test_class": {"identifier": "InMemoryPreparationRepositoryTest", "superclass": "extends PreparationRepositoryTest", "interfaces": "", "fields": [{"original_string": "private PreparationRepository repository;", "modifier": "private", "type": "PreparationRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "@Autowired\n    private BeanConversionService beanConversionService;", "modifier": "@Autowired\n    private", "type": "BeanConversionService", "declarator": "beanConversionService", "var_name": "beanConversionService"}], "file": "dataprep-backend-service/src/test/java/org/talend/dataprep/preparation/store/inmemory/InMemoryPreparationRepositoryTest.java"}, "test_case": {"identifier": "getByDataSetTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getByDataSetTest() {\n\n        // populate repository with noise (steps and preparations to be ignored)\n        repository.add(getStep(\"s1\"));\n        repository.add(getStep(\"s2\"));\n        repository.add(getStep(\"s3\"));\n        repository.add(getStep(\"s4\"));\n        repository.add(getStep(\"s5\"));\n\n        repository.add(getPreparation(\"p1\"));\n        repository.add(getPreparation(\"p2\"));\n        repository.add(getPreparation(\"p3\"));\n        repository.add(getPreparation(\"p4\"));\n        repository.add(getPreparation(\"p5\"));\n\n        // add relevant data\n        String dataSetId = \"wantedId\";\n        Collection<Preparation> expected = Arrays.asList(getPreparation(dataSetId, \"10\"),\n                getPreparation(dataSetId, \"11\"), getPreparation(dataSetId, \"12\"));\n        for (Preparation preparation : expected) {\n            repository.add(preparation);\n        }\n\n        // run the test\n        Collection<Preparation> actual =\n                getRepository().list(Preparation.class, eq(\"dataSetId\", dataSetId)).collect(Collectors.toList());\n\n        // check the result\n        Assert.assertEquals(3, actual.size());\n        for (Preparation preparation : expected) {\n            Assert.assertTrue(actual.contains(preparation));\n        }\n    }", "signature": "void getByDataSetTest()", "full_signature": "@Test public void getByDataSetTest()", "class_method_signature": "InMemoryPreparationRepositoryTest.getByDataSetTest()", "testcase": true, "constructor": false, "invocations": ["add", "getStep", "add", "getStep", "add", "getStep", "add", "getStep", "add", "getStep", "add", "getPreparation", "add", "getPreparation", "add", "getPreparation", "add", "getPreparation", "add", "getPreparation", "asList", "getPreparation", "getPreparation", "getPreparation", "add", "collect", "list", "getRepository", "eq", "toList", "assertEquals", "size", "assertTrue", "contains"]}, "focal_class": {"identifier": "InMemoryPreparationRepository", "superclass": "extends ObjectPreparationRepository", "interfaces": "", "fields": [{"original_string": "private final Map<String, Identifiable> store = new HashMap<>();", "modifier": "private final", "type": "Map<String, Identifiable>", "declarator": "store = new HashMap<>()", "var_name": "store"}], "methods": [{"identifier": "add", "parameters": "(Identifiable object)", "modifiers": "@Override public", "return": "void", "signature": "void add(Identifiable object)", "full_signature": "@Override public void add(Identifiable object)", "class_method_signature": "InMemoryPreparationRepository.add(Identifiable object)", "testcase": false, "constructor": false}, {"identifier": "source", "parameters": "(Class<T> clazz)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "Stream<T>", "signature": "Stream<T> source(Class<T> clazz)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public Stream<T> source(Class<T> clazz)", "class_method_signature": "InMemoryPreparationRepository.source(Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String id, Class<T> clazz)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "T", "signature": "T get(String id, Class<T> clazz)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public T get(String id, Class<T> clazz)", "class_method_signature": "InMemoryPreparationRepository.get(String id, Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "InMemoryPreparationRepository.clear()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Identifiable object)", "modifiers": "@Override public", "return": "void", "signature": "void remove(Identifiable object)", "full_signature": "@Override public void remove(Identifiable object)", "class_method_signature": "InMemoryPreparationRepository.remove(Identifiable object)", "testcase": false, "constructor": false}], "file": "dataprep-backend-service/src/main/java/org/talend/dataprep/preparation/store/inmemory/InMemoryPreparationRepository.java"}, "focal_method": {"identifier": "add", "parameters": "(Identifiable object)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void add(Identifiable object) {\n        store.put(object.id(), object);\n    }", "signature": "void add(Identifiable object)", "full_signature": "@Override public void add(Identifiable object)", "class_method_signature": "InMemoryPreparationRepository.add(Identifiable object)", "testcase": false, "constructor": false, "invocations": ["put", "id"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}