{"test_class": {"identifier": "ContextUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String X_RAY_TRACE_HEADER\n      = \"Root=1-5759e988-bd862e3fe1be46a994272793;Parent=53995c3f42cd8ad8;Sampled=1\";", "modifier": "private static final", "type": "String", "declarator": "X_RAY_TRACE_HEADER\n      = \"Root=1-5759e988-bd862e3fe1be46a994272793;Parent=53995c3f42cd8ad8;Sampled=1\"", "var_name": "X_RAY_TRACE_HEADER"}, {"original_string": "private static final String X_RAY_TRACE_ID = \"1-5759e988-bd862e3fe1be46a994272793\";", "modifier": "private static final", "type": "String", "declarator": "X_RAY_TRACE_ID = \"1-5759e988-bd862e3fe1be46a994272793\"", "var_name": "X_RAY_TRACE_ID"}, {"original_string": "private static final String OT_TRACE_ID = \"5759e988bd862e3fe1be46a994272793\";", "modifier": "private static final", "type": "String", "declarator": "OT_TRACE_ID = \"5759e988bd862e3fe1be46a994272793\"", "var_name": "OT_TRACE_ID"}, {"original_string": "private static final String SEGMENT_ID = \"53995c3f42cd8ad8\";", "modifier": "private static final", "type": "String", "declarator": "SEGMENT_ID = \"53995c3f42cd8ad8\"", "var_name": "SEGMENT_ID"}, {"original_string": "private TraceId otTraceId;", "modifier": "private", "type": "TraceId", "declarator": "otTraceId", "var_name": "otTraceId"}, {"original_string": "private TraceID xrayTraceId;", "modifier": "private", "type": "TraceID", "declarator": "xrayTraceId", "var_name": "xrayTraceId"}, {"original_string": "private SpanId spanId;", "modifier": "private", "type": "SpanId", "declarator": "spanId", "var_name": "spanId"}, {"original_string": "private TraceFlags flags;", "modifier": "private", "type": "TraceFlags", "declarator": "flags", "var_name": "flags"}, {"original_string": "private Tracestate state = Tracestate.getDefault();", "modifier": "private", "type": "Tracestate", "declarator": "state = Tracestate.getDefault()", "var_name": "state"}, {"original_string": "private TraceHeader header;", "modifier": "private", "type": "TraceHeader", "declarator": "header", "var_name": "header"}, {"original_string": "private SpanContext context;", "modifier": "private", "type": "SpanContext", "declarator": "context", "var_name": "context"}, {"original_string": "@Mock\n  private Segment segment;", "modifier": "@Mock\n  private", "type": "Segment", "declarator": "segment", "var_name": "segment"}], "file": "sdk/src/test/java/com/amazonaws/xray/opentelemetry/tracing/utils/ContextUtilsTest.java"}, "test_case": {"identifier": "when_aHeaderIsGiven_then_aContextIsReturned", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void when_aHeaderIsGiven_then_aContextIsReturned() {\n    assertEquals(X_RAY_TRACE_HEADER, ContextUtils.spanContextToHeader(context).toString());\n  }", "signature": "void when_aHeaderIsGiven_then_aContextIsReturned()", "full_signature": "@Test public void when_aHeaderIsGiven_then_aContextIsReturned()", "class_method_signature": "ContextUtilsTest.when_aHeaderIsGiven_then_aContextIsReturned()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toString", "spanContextToHeader"]}, "focal_class": {"identifier": "ContextUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String XRAY_VERSION_PREFIX = \"1-\";", "modifier": "private static final", "type": "String", "declarator": "XRAY_VERSION_PREFIX = \"1-\"", "var_name": "XRAY_VERSION_PREFIX"}, {"original_string": "private static final String XRAY_SEPARATOR = \"-\";", "modifier": "private static final", "type": "String", "declarator": "XRAY_SEPARATOR = \"-\"", "var_name": "XRAY_SEPARATOR"}], "methods": [{"identifier": "entityToSpanContext", "parameters": "(final Entity entity)", "modifiers": "public static", "return": "SpanContext", "signature": "SpanContext entityToSpanContext(final Entity entity)", "full_signature": "public static SpanContext entityToSpanContext(final Entity entity)", "class_method_signature": "ContextUtils.entityToSpanContext(final Entity entity)", "testcase": false, "constructor": false}, {"identifier": "headerToSpanContext", "parameters": "(final TraceHeader header)", "modifiers": "public static", "return": "SpanContext", "signature": "SpanContext headerToSpanContext(final TraceHeader header)", "full_signature": "public static SpanContext headerToSpanContext(final TraceHeader header)", "class_method_signature": "ContextUtils.headerToSpanContext(final TraceHeader header)", "testcase": false, "constructor": false}, {"identifier": "spanContextToHeader", "parameters": "(final SpanContext context)", "modifiers": "public static", "return": "TraceHeader", "signature": "TraceHeader spanContextToHeader(final SpanContext context)", "full_signature": "public static TraceHeader spanContextToHeader(final SpanContext context)", "class_method_signature": "ContextUtils.spanContextToHeader(final SpanContext context)", "testcase": false, "constructor": false}, {"identifier": "xrayTraceIdToOT", "parameters": "(String xrayId)", "modifiers": "private static", "return": "String", "signature": "String xrayTraceIdToOT(String xrayId)", "full_signature": "private static String xrayTraceIdToOT(String xrayId)", "class_method_signature": "ContextUtils.xrayTraceIdToOT(String xrayId)", "testcase": false, "constructor": false}], "file": "sdk/src/main/java/com/amazonaws/xray/opentelemetry/tracing/utils/ContextUtils.java"}, "focal_method": {"identifier": "spanContextToHeader", "parameters": "(final SpanContext context)", "modifiers": "public static", "return": "TraceHeader", "body": "public static TraceHeader spanContextToHeader(final SpanContext context) {\n    String otTraceId = context.getTraceId().toLowerBase16();\n    String xrayTraceId =\n        XRAY_VERSION_PREFIX + otTraceId.substring(0, 8) + XRAY_SEPARATOR + otTraceId.substring(8);\n    TraceID xrayId = TraceID.fromString(xrayTraceId);\n    TraceHeader header = new TraceHeader();\n    header.setSampled(context.getTraceFlags().isSampled()\n        ? TraceHeader.SampleDecision.SAMPLED : TraceHeader.SampleDecision.NOT_SAMPLED);\n    header.setRootTraceId(xrayId);\n    header.setParentId(context.getSpanId().toLowerBase16());\n\n    return header;\n  }", "signature": "TraceHeader spanContextToHeader(final SpanContext context)", "full_signature": "public static TraceHeader spanContextToHeader(final SpanContext context)", "class_method_signature": "ContextUtils.spanContextToHeader(final SpanContext context)", "testcase": false, "constructor": false, "invocations": ["toLowerBase16", "getTraceId", "substring", "substring", "fromString", "setSampled", "isSampled", "getTraceFlags", "setRootTraceId", "setParentId", "toLowerBase16", "getSpanId"]}, "repository": {"repo_id": 224065909, "url": "https://github.com/awslabs/aws-xray-sdk-with-opentelemetry", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 19, "size": 115, "license": "licensed"}}