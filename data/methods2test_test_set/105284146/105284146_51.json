{"test_class": {"identifier": "ProcessHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private InputStream in;", "modifier": "private", "type": "InputStream", "declarator": "in", "var_name": "in"}, {"original_string": "private OutputStream out;", "modifier": "private", "type": "OutputStream", "declarator": "out", "var_name": "out"}, {"original_string": "private InputStream err;", "modifier": "private", "type": "InputStream", "declarator": "err", "var_name": "err"}, {"original_string": "private Process process;", "modifier": "private", "type": "Process", "declarator": "process", "var_name": "process"}], "file": "computation-local/src/test/java/com/powsybl/computation/local/ProcessHelperTest.java"}, "test_case": {"identifier": "testIllegalTimeout", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIllegalTimeout() {\n        try {\n            int exitCode = ProcessHelper.runWithTimeout(-1, process);\n            fail();\n        } catch (Exception e) {\n            assertEquals(\"negative timeout: -1\", e.getMessage());\n        }\n    }", "signature": "void testIllegalTimeout()", "full_signature": "@Test public void testIllegalTimeout()", "class_method_signature": "ProcessHelperTest.testIllegalTimeout()", "testcase": true, "constructor": false, "invocations": ["runWithTimeout", "fail", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "ProcessHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long DEFAULT_FAST_POLLING = 500_000_000;", "modifier": "private static final", "type": "long", "declarator": "DEFAULT_FAST_POLLING = 500_000_000", "var_name": "DEFAULT_FAST_POLLING"}, {"original_string": "private static final long BEGINING_NANO = 3_000_000_000L;", "modifier": "private static final", "type": "long", "declarator": "BEGINING_NANO = 3_000_000_000L", "var_name": "BEGINING_NANO"}], "methods": [{"identifier": "runWithTimeout", "parameters": "(long timeoutInSeconds, Process process)", "modifiers": "static", "return": "int", "signature": "int runWithTimeout(long timeoutInSeconds, Process process)", "full_signature": "static int runWithTimeout(long timeoutInSeconds, Process process)", "class_method_signature": "ProcessHelper.runWithTimeout(long timeoutInSeconds, Process process)", "testcase": false, "constructor": false}, {"identifier": "smartWait", "parameters": "(long running, long startTime, long timeout)", "modifiers": "private static", "return": "long", "signature": "long smartWait(long running, long startTime, long timeout)", "full_signature": "private static long smartWait(long running, long startTime, long timeout)", "class_method_signature": "ProcessHelper.smartWait(long running, long startTime, long timeout)", "testcase": false, "constructor": false}, {"identifier": "closeStream", "parameters": "(Process process)", "modifiers": "private static", "return": "void", "signature": "void closeStream(Process process)", "full_signature": "private static void closeStream(Process process)", "class_method_signature": "ProcessHelper.closeStream(Process process)", "testcase": false, "constructor": false}, {"identifier": "ProcessHelper", "parameters": "()", "modifiers": "private", "return": "", "signature": " ProcessHelper()", "full_signature": "private  ProcessHelper()", "class_method_signature": "ProcessHelper.ProcessHelper()", "testcase": false, "constructor": true}], "file": "computation-local/src/main/java/com/powsybl/computation/local/ProcessHelper.java"}, "focal_method": {"identifier": "runWithTimeout", "parameters": "(long timeoutInSeconds, Process process)", "modifiers": "static", "return": "int", "body": "static int runWithTimeout(long timeoutInSeconds, Process process) throws InterruptedException, IOException {\n        Preconditions.checkArgument(timeoutInSeconds > 0, \"negative timeout: %s\", timeoutInSeconds);\n        int exitCode;\n        long startTimeNano = System.nanoTime();\n        while (true) {\n            try {\n                exitCode = process.exitValue();\n                closeStream(process);\n                return exitCode;\n            } catch (IllegalThreadStateException ex) {\n                long running = System.nanoTime() - startTimeNano;\n                if (running > TimeUnit.SECONDS.toNanos(timeoutInSeconds)) {\n                    break;\n                }\n                TimeUnit.NANOSECONDS.sleep(smartWait(running, startTimeNano, timeoutInSeconds));\n            }\n        }\n        process.destroy();\n        exitCode = 124;\n\n        closeStream(process);\n        return exitCode;\n    }", "signature": "int runWithTimeout(long timeoutInSeconds, Process process)", "full_signature": "static int runWithTimeout(long timeoutInSeconds, Process process)", "class_method_signature": "ProcessHelper.runWithTimeout(long timeoutInSeconds, Process process)", "testcase": false, "constructor": false, "invocations": ["checkArgument", "nanoTime", "exitValue", "closeStream", "nanoTime", "toNanos", "sleep", "smartWait", "destroy", "closeStream"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}