{"test_class": {"identifier": "UnbindOperationExecutorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LdapOperations ldapOperationsMock;", "modifier": "private", "type": "LdapOperations", "declarator": "ldapOperationsMock", "var_name": "ldapOperationsMock"}], "file": "core/src/test/java/org/springframework/ldap/transaction/compensating/UnbindOperationExecutorTest.java"}, "test_case": {"identifier": "testCommit", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCommit() {\n        LdapName expectedOldName = LdapUtils.newLdapName(\"cn=oldDn\");\n        LdapName expectedTempName = LdapUtils.newLdapName(\"cn=newDn\");\n        UnbindOperationExecutor tested = new UnbindOperationExecutor(\n                ldapOperationsMock, expectedOldName, expectedTempName);\n\n        // Perform test\n        tested.commit();\n        verify(ldapOperationsMock).unbind(expectedTempName);\n    }", "signature": "void testCommit()", "full_signature": "@Test public void testCommit()", "class_method_signature": "UnbindOperationExecutorTest.testCommit()", "testcase": true, "constructor": false, "invocations": ["newLdapName", "newLdapName", "commit", "unbind", "verify"]}, "focal_class": {"identifier": "UnbindOperationExecutor", "superclass": "", "interfaces": "implements\n        CompensatingTransactionOperationExecutor", "fields": [{"original_string": "private static Logger log = LoggerFactory.getLogger(UnbindOperationExecutor.class);", "modifier": "private static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(UnbindOperationExecutor.class)", "var_name": "log"}, {"original_string": "private LdapOperations ldapOperations;", "modifier": "private", "type": "LdapOperations", "declarator": "ldapOperations", "var_name": "ldapOperations"}, {"original_string": "private Name originalDn;", "modifier": "private", "type": "Name", "declarator": "originalDn", "var_name": "originalDn"}, {"original_string": "private Name temporaryDn;", "modifier": "private", "type": "Name", "declarator": "temporaryDn", "var_name": "temporaryDn"}], "methods": [{"identifier": "UnbindOperationExecutor", "parameters": "(LdapOperations ldapOperations,\n            Name originalDn, Name temporaryDn)", "modifiers": "public", "return": "", "signature": " UnbindOperationExecutor(LdapOperations ldapOperations,\n            Name originalDn, Name temporaryDn)", "full_signature": "public  UnbindOperationExecutor(LdapOperations ldapOperations,\n            Name originalDn, Name temporaryDn)", "class_method_signature": "UnbindOperationExecutor.UnbindOperationExecutor(LdapOperations ldapOperations,\n            Name originalDn, Name temporaryDn)", "testcase": false, "constructor": true}, {"identifier": "rollback", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void rollback()", "full_signature": "public void rollback()", "class_method_signature": "UnbindOperationExecutor.rollback()", "testcase": false, "constructor": false}, {"identifier": "commit", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void commit()", "full_signature": "public void commit()", "class_method_signature": "UnbindOperationExecutor.commit()", "testcase": false, "constructor": false}, {"identifier": "performOperation", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void performOperation()", "full_signature": "public void performOperation()", "class_method_signature": "UnbindOperationExecutor.performOperation()", "testcase": false, "constructor": false}, {"identifier": "getLdapOperations", "parameters": "()", "modifiers": "", "return": "LdapOperations", "signature": "LdapOperations getLdapOperations()", "full_signature": " LdapOperations getLdapOperations()", "class_method_signature": "UnbindOperationExecutor.getLdapOperations()", "testcase": false, "constructor": false}, {"identifier": "getOriginalDn", "parameters": "()", "modifiers": "", "return": "Name", "signature": "Name getOriginalDn()", "full_signature": " Name getOriginalDn()", "class_method_signature": "UnbindOperationExecutor.getOriginalDn()", "testcase": false, "constructor": false}, {"identifier": "getTemporaryDn", "parameters": "()", "modifiers": "", "return": "Name", "signature": "Name getTemporaryDn()", "full_signature": " Name getTemporaryDn()", "class_method_signature": "UnbindOperationExecutor.getTemporaryDn()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/transaction/compensating/UnbindOperationExecutor.java"}, "focal_method": {"identifier": "commit", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void commit() {\n        log.debug(\"Committing unbind operation - unbinding temporary entry\");\n        ldapOperations.unbind(temporaryDn);\n    }", "signature": "void commit()", "full_signature": "public void commit()", "class_method_signature": "UnbindOperationExecutor.commit()", "testcase": false, "constructor": false, "invocations": ["debug", "unbind"]}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}