{"test_class": {"identifier": "DateTimePeriodSelectorTest", "superclass": "", "interfaces": "", "fields": [], "file": "ch-commons-util/src/test/java/com/cloudhopper/commons/util/time/DateTimePeriodSelectorTest.java"}, "test_case": {"identifier": "last12Months", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void last12Months() throws Exception {\n        List<DateTimePeriod> periods = DateTimePeriodSelector.last12Months(DateTimeZone.UTC);\n        DateTime now = new DateTime(DateTimeZone.UTC);\n        \n        // create our list for comparison\n        DateTime startingMonth = now.minusMonths(12);\n        DateTimePeriod startingPeriod = DateTimePeriod.createMonth(startingMonth.getYear(), startingMonth.getMonthOfYear(), DateTimeZone.UTC);\n        ArrayList<DateTimePeriod> expectedPeriods = new ArrayList<DateTimePeriod>();\n        expectedPeriods.add(startingPeriod);\n        startingPeriod = startingPeriod.getNext();\n        expectedPeriods.add(startingPeriod);\n        startingPeriod = startingPeriod.getNext();\n        expectedPeriods.add(startingPeriod);\n        startingPeriod = startingPeriod.getNext();\n        expectedPeriods.add(startingPeriod);\n        startingPeriod = startingPeriod.getNext();\n        expectedPeriods.add(startingPeriod);\n        startingPeriod = startingPeriod.getNext();\n        expectedPeriods.add(startingPeriod);\n        startingPeriod = startingPeriod.getNext();\n        expectedPeriods.add(startingPeriod);\n        startingPeriod = startingPeriod.getNext();\n        expectedPeriods.add(startingPeriod);\n        startingPeriod = startingPeriod.getNext();\n        expectedPeriods.add(startingPeriod);\n        startingPeriod = startingPeriod.getNext();\n        expectedPeriods.add(startingPeriod);\n        startingPeriod = startingPeriod.getNext();\n        expectedPeriods.add(startingPeriod);\n        startingPeriod = startingPeriod.getNext();\n        expectedPeriods.add(startingPeriod);\n\n        Assert.assertArrayEquals(expectedPeriods.toArray(), periods.toArray());\n    }", "signature": "void last12Months()", "full_signature": "@Test public void last12Months()", "class_method_signature": "DateTimePeriodSelectorTest.last12Months()", "testcase": true, "constructor": false, "invocations": ["last12Months", "minusMonths", "createMonth", "getYear", "getMonthOfYear", "add", "getNext", "add", "getNext", "add", "getNext", "add", "getNext", "add", "getNext", "add", "getNext", "add", "getNext", "add", "getNext", "add", "getNext", "add", "getNext", "add", "getNext", "add", "assertArrayEquals", "toArray", "toArray"]}, "focal_class": {"identifier": "DateTimePeriodSelector", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "DateTimePeriodSelector", "parameters": "()", "modifiers": "private", "return": "", "signature": " DateTimePeriodSelector()", "full_signature": "private  DateTimePeriodSelector()", "class_method_signature": "DateTimePeriodSelector.DateTimePeriodSelector()", "testcase": false, "constructor": true}, {"identifier": "thisMonth", "parameters": "(DateTimeZone zone)", "modifiers": "static public", "return": "DateTimePeriod", "signature": "DateTimePeriod thisMonth(DateTimeZone zone)", "full_signature": "static public DateTimePeriod thisMonth(DateTimeZone zone)", "class_method_signature": "DateTimePeriodSelector.thisMonth(DateTimeZone zone)", "testcase": false, "constructor": false}, {"identifier": "lastMonth", "parameters": "(DateTimeZone zone)", "modifiers": "static public", "return": "DateTimePeriod", "signature": "DateTimePeriod lastMonth(DateTimeZone zone)", "full_signature": "static public DateTimePeriod lastMonth(DateTimeZone zone)", "class_method_signature": "DateTimePeriodSelector.lastMonth(DateTimeZone zone)", "testcase": false, "constructor": false}, {"identifier": "last12Months", "parameters": "(DateTimeZone zone)", "modifiers": "static public", "return": "List<DateTimePeriod>", "signature": "List<DateTimePeriod> last12Months(DateTimeZone zone)", "full_signature": "static public List<DateTimePeriod> last12Months(DateTimeZone zone)", "class_method_signature": "DateTimePeriodSelector.last12Months(DateTimeZone zone)", "testcase": false, "constructor": false}], "file": "ch-commons-util/src/main/java/com/cloudhopper/commons/util/time/DateTimePeriodSelector.java"}, "focal_method": {"identifier": "last12Months", "parameters": "(DateTimeZone zone)", "modifiers": "static public", "return": "List<DateTimePeriod>", "body": "static public List<DateTimePeriod> last12Months(DateTimeZone zone) {\n        ArrayList<DateTimePeriod> periods = new ArrayList<DateTimePeriod>();\n\n        // get today's date\n        DateTime now = new DateTime(zone);\n\n        // start with today's current month and 11 others (last 12 months)\n        for (int i = 0; i < 12; i++) {\n            // create a new period\n            DateTimePeriod period = DateTimePeriod.createMonth(now.getYear(), now.getMonthOfYear(), zone);\n            periods.add(period);\n            // subtract 1 month\n            now = now.minusMonths(1);\n        }\n\n        Collections.reverse(periods);\n\n        return periods;\n    }", "signature": "List<DateTimePeriod> last12Months(DateTimeZone zone)", "full_signature": "static public List<DateTimePeriod> last12Months(DateTimeZone zone)", "class_method_signature": "DateTimePeriodSelector.last12Months(DateTimeZone zone)", "testcase": false, "constructor": false, "invocations": ["createMonth", "getYear", "getMonthOfYear", "add", "minusMonths", "reverse"]}, "repository": {"repo_id": 14960307, "url": "https://github.com/twitter/cloudhopper-commons", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 36, "size": 6452, "license": "licensed"}}