{"test_class": {"identifier": "RetentionExpirationDestroyerWebClientTest", "superclass": "extends AbstractRetentionExpirationDestroyerTest", "interfaces": "", "fields": [], "file": "herd-code/herd-tools/herd-retention-expiration-destroyer/src/test/java/org/finra/herd/tools/retention/destroyer/RetentionExpirationDestroyerWebClientTest.java"}, "test_case": {"identifier": "testDestroyBusinessObjectDataUseSsl", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDestroyBusinessObjectDataUseSsl() throws Exception\n    {\n        retentionExpirationDestroyerWebClient.getRegServerAccessParamsDto().setUseSsl(true);\n        BusinessObjectDataKey businessObjectDataKey =\n            new BusinessObjectDataKey(\"test\", \"test\", \"test\", \"test\", 0, \"test\", Collections.singletonList(\"test\"), 0);\n        BusinessObjectData result = retentionExpirationDestroyerWebClient.destroyBusinessObjectData(businessObjectDataKey);\n        assertNotNull(result);\n    }", "signature": "void testDestroyBusinessObjectDataUseSsl()", "full_signature": "@Test public void testDestroyBusinessObjectDataUseSsl()", "class_method_signature": "RetentionExpirationDestroyerWebClientTest.testDestroyBusinessObjectDataUseSsl()", "testcase": true, "constructor": false, "invocations": ["setUseSsl", "getRegServerAccessParamsDto", "singletonList", "destroyBusinessObjectData", "assertNotNull"]}, "focal_class": {"identifier": "RetentionExpirationDestroyerWebClient", "superclass": "extends DataBridgeWebClient", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(RetentionExpirationDestroyerWebClient.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(RetentionExpirationDestroyerWebClient.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "destroyBusinessObjectData", "parameters": "(BusinessObjectDataKey businessObjectDataKey)", "modifiers": "public", "return": "BusinessObjectData", "signature": "BusinessObjectData destroyBusinessObjectData(BusinessObjectDataKey businessObjectDataKey)", "full_signature": "public BusinessObjectData destroyBusinessObjectData(BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "RetentionExpirationDestroyerWebClient.destroyBusinessObjectData(BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false}, {"identifier": "destroyBusinessObjectData", "parameters": "(CloseableHttpResponse httpResponse)", "modifiers": "private", "return": "BusinessObjectData", "signature": "BusinessObjectData destroyBusinessObjectData(CloseableHttpResponse httpResponse)", "full_signature": "private BusinessObjectData destroyBusinessObjectData(CloseableHttpResponse httpResponse)", "class_method_signature": "RetentionExpirationDestroyerWebClient.destroyBusinessObjectData(CloseableHttpResponse httpResponse)", "testcase": false, "constructor": false}], "file": "herd-code/herd-tools/herd-retention-expiration-destroyer/src/main/java/org/finra/herd/tools/retention/destroyer/RetentionExpirationDestroyerWebClient.java"}, "focal_method": {"identifier": "destroyBusinessObjectData", "parameters": "(BusinessObjectDataKey businessObjectDataKey)", "modifiers": "public", "return": "BusinessObjectData", "body": "public BusinessObjectData destroyBusinessObjectData(BusinessObjectDataKey businessObjectDataKey)\n        throws IOException, JAXBException, URISyntaxException, NoSuchAlgorithmException, KeyStoreException, KeyManagementException\n    {\n        String uriPath = HERD_APP_REST_URI_PREFIX + \"/businessObjectData/destroy\" + \"/namespaces/\" + businessObjectDataKey.getNamespace() +\n            \"/businessObjectDefinitionNames/\" + businessObjectDataKey.getBusinessObjectDefinitionName() + \"/businessObjectFormatUsages/\" +\n            businessObjectDataKey.getBusinessObjectFormatUsage() + \"/businessObjectFormatFileTypes/\" + businessObjectDataKey.getBusinessObjectFormatFileType() +\n            \"/businessObjectFormatVersions/\" + businessObjectDataKey.getBusinessObjectFormatVersion() + \"/partitionValues/\" +\n            businessObjectDataKey.getPartitionValue() + \"/businessObjectDataVersions/\" + businessObjectDataKey.getBusinessObjectDataVersion();\n\n        URIBuilder uriBuilder =\n            new URIBuilder().setScheme(getUriScheme()).setHost(regServerAccessParamsDto.getRegServerHost()).setPort(regServerAccessParamsDto.getRegServerPort())\n                .setPath(uriPath);\n\n        if (CollectionUtils.isNotEmpty(businessObjectDataKey.getSubPartitionValues()))\n        {\n            uriBuilder.setParameter(\"subPartitionValues\", herdStringHelper.join(businessObjectDataKey.getSubPartitionValues(), \"|\", \"\\\\\"));\n        }\n\n        URI uri = uriBuilder.build();\n\n        try (CloseableHttpClient client = httpClientHelper\n            .createHttpClient(regServerAccessParamsDto.isTrustSelfSignedCertificate(), regServerAccessParamsDto.isDisableHostnameVerification()))\n        {\n            HttpPost request = new HttpPost(uri);\n            request.addHeader(\"Content-Type\", DEFAULT_CONTENT_TYPE);\n            request.addHeader(\"Accepts\", DEFAULT_ACCEPT);\n\n            // If SSL is enabled, set the client authentication header.\n            if (regServerAccessParamsDto.isUseSsl())\n            {\n                request.addHeader(getAuthorizationHeader());\n            }\n\n            LOGGER.info(String.format(\"    HTTP POST URI: %s\", request.getURI().toString()));\n\n            BusinessObjectData businessObjectData = destroyBusinessObjectData(httpClientOperations.execute(client, request));\n\n            LOGGER.info(\"Successfully destroyed business object data from the registration server.\");\n\n            return businessObjectData;\n        }\n    }", "signature": "BusinessObjectData destroyBusinessObjectData(BusinessObjectDataKey businessObjectDataKey)", "full_signature": "public BusinessObjectData destroyBusinessObjectData(BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "RetentionExpirationDestroyerWebClient.destroyBusinessObjectData(BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false, "invocations": ["getNamespace", "getBusinessObjectDefinitionName", "getBusinessObjectFormatUsage", "getBusinessObjectFormatFileType", "getBusinessObjectFormatVersion", "getPartitionValue", "getBusinessObjectDataVersion", "setPath", "setPort", "setHost", "setScheme", "getUriScheme", "getRegServerHost", "getRegServerPort", "isNotEmpty", "getSubPartitionValues", "setParameter", "join", "getSubPartitionValues", "build", "createHttpClient", "isTrustSelfSignedCertificate", "isDisableHostnameVerification", "addHeader", "addHeader", "isUseSsl", "addHeader", "getAuthorizationHeader", "info", "format", "toString", "getURI", "destroyBusinessObjectData", "execute", "info"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}