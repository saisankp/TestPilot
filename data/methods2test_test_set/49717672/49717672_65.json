{"test_class": {"identifier": "ShareGlucoseRecordTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/com/eveningoutpost/dexdrip/cgm/sharefollow/ShareGlucoseRecordTest.java"}, "test_case": {"identifier": "slopePerMsFromDirectionTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void slopePerMsFromDirectionTest() {\n\n        for (int direction = 1; direction < 8; direction++) {\n            final ShareGlucoseRecord record = new ShareGlucoseRecord();\n            record.Trend = direction;\n            assertWithMessage(\"Slope check \" + direction).that(BgReading.slopeName(record.slopePerMsFromDirection() * 60000)).isEqualTo(record.slopeDirection());\n        }\n\n    }", "signature": "void slopePerMsFromDirectionTest()", "full_signature": "@Test public void slopePerMsFromDirectionTest()", "class_method_signature": "ShareGlucoseRecordTest.slopePerMsFromDirectionTest()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "that", "assertWithMessage", "slopeName", "slopePerMsFromDirection", "slopeDirection"]}, "focal_class": {"identifier": "ShareGlucoseRecord", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Expose\n    public String DT;", "modifier": "@Expose\n    public", "type": "String", "declarator": "DT", "var_name": "DT"}, {"original_string": "@Expose\n    public String ST;", "modifier": "@Expose\n    public", "type": "String", "declarator": "ST", "var_name": "ST"}, {"original_string": "@Expose\n    public String WT;", "modifier": "@Expose\n    public", "type": "String", "declarator": "WT", "var_name": "WT"}, {"original_string": "@Expose\n    public double Trend;", "modifier": "@Expose\n    public", "type": "double", "declarator": "Trend", "var_name": "Trend"}, {"original_string": "@Expose\n    public double Value;", "modifier": "@Expose\n    public", "type": "double", "declarator": "Value", "var_name": "Value"}, {"original_string": "public long timestamp = -1;", "modifier": "public", "type": "long", "declarator": "timestamp = -1", "var_name": "timestamp"}], "methods": [{"identifier": "slopeDirection", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String slopeDirection()", "full_signature": "public String slopeDirection()", "class_method_signature": "ShareGlucoseRecord.slopeDirection()", "testcase": false, "constructor": false}, {"identifier": "slopePerMsFromDirection", "parameters": "()", "modifiers": "public", "return": "Double", "signature": "Double slopePerMsFromDirection()", "full_signature": "public Double slopePerMsFromDirection()", "class_method_signature": "ShareGlucoseRecord.slopePerMsFromDirection()", "testcase": false, "constructor": false}, {"identifier": "getTimestamp", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long getTimestamp()", "full_signature": "public Long getTimestamp()", "class_method_signature": "ShareGlucoseRecord.getTimestamp()", "testcase": false, "constructor": false}, {"identifier": "toS", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toS()", "full_signature": "public String toS()", "class_method_signature": "ShareGlucoseRecord.toS()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/eveningoutpost/dexdrip/cgm/sharefollow/ShareGlucoseRecord.java"}, "focal_method": {"identifier": "slopePerMsFromDirection", "parameters": "()", "modifiers": "public", "return": "Double", "body": "public Double slopePerMsFromDirection() {\n        final String slope_name = slopeDirection();\n        return slope_name == null ? null : BgReading.slopefromName(slope_name);\n    }", "signature": "Double slopePerMsFromDirection()", "full_signature": "public Double slopePerMsFromDirection()", "class_method_signature": "ShareGlucoseRecord.slopePerMsFromDirection()", "testcase": false, "constructor": false, "invocations": ["slopeDirection", "slopefromName"]}, "repository": {"repo_id": 49717672, "url": "https://github.com/jamorham/xDrip-plus", "stars": 199, "created": "1/15/2016 12:31:22 PM +00:00", "updates": "2020-01-26T20:46:33+00:00", "fork": "False", "license": "licensed"}}