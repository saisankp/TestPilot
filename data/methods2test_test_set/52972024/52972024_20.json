{"test_class": {"identifier": "GetFirstNotNullRulePluginTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GetFirstNotNullRulePlugin targetPlugin;", "modifier": "private", "type": "GetFirstNotNullRulePlugin", "declarator": "targetPlugin", "var_name": "targetPlugin"}, {"original_string": "private IBootstrap bootstrap;", "modifier": "private", "type": "IBootstrap", "declarator": "bootstrap", "var_name": "bootstrap"}], "file": "OldModules/PluginGetFirstNotNullRule/src/test/java/info/smart_tools/smartactors/plugin/get_first_not_null_rule/GetFirstNotNullRulePluginTest.java"}, "test_case": {"identifier": "ShouldThrowPluginException_When_BootstrapItemThrowsException", "parameters": "()", "modifiers": "@Test(expected = PluginException.class) public", "return": "void", "body": "@Test(expected = PluginException.class)\n    public void ShouldThrowPluginException_When_BootstrapItemThrowsException() throws Exception {\n        whenNew(BootstrapItem.class).withArguments(\"GetFirstNotNullRulePlugin\").thenThrow(new InvalidArgumentException(\"\"));\n        targetPlugin.load();\n    }", "signature": "void ShouldThrowPluginException_When_BootstrapItemThrowsException()", "full_signature": "@Test(expected = PluginException.class) public void ShouldThrowPluginException_When_BootstrapItemThrowsException()", "class_method_signature": "GetFirstNotNullRulePluginTest.ShouldThrowPluginException_When_BootstrapItemThrowsException()", "testcase": true, "constructor": false, "invocations": ["thenThrow", "withArguments", "whenNew", "load"]}, "focal_class": {"identifier": "GetFirstNotNullRulePlugin", "superclass": "", "interfaces": "implements IPlugin", "fields": [{"original_string": "private final IBootstrap<IBootstrapItem<String>> bootstrap;", "modifier": "private final", "type": "IBootstrap<IBootstrapItem<String>>", "declarator": "bootstrap", "var_name": "bootstrap"}], "methods": [{"identifier": "GetFirstNotNullRulePlugin", "parameters": "(IBootstrap<IBootstrapItem<String>> bootstrap)", "modifiers": "public", "return": "", "signature": " GetFirstNotNullRulePlugin(IBootstrap<IBootstrapItem<String>> bootstrap)", "full_signature": "public  GetFirstNotNullRulePlugin(IBootstrap<IBootstrapItem<String>> bootstrap)", "class_method_signature": "GetFirstNotNullRulePlugin.GetFirstNotNullRulePlugin(IBootstrap<IBootstrapItem<String>> bootstrap)", "testcase": false, "constructor": true}, {"identifier": "load", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void load()", "full_signature": "@Override public void load()", "class_method_signature": "GetFirstNotNullRulePlugin.load()", "testcase": false, "constructor": false}], "file": "OldModules/PluginGetFirstNotNullRule/src/main/java/info/smart_tools/smartactors/plugin/get_first_not_null_rule/GetFirstNotNullRulePlugin.java"}, "focal_method": {"identifier": "load", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void load() throws PluginException {\n        try {\n            IBootstrapItem<String> item = new BootstrapItem(\"GetFirstNotNullRulePlugin\");\n\n            item\n                    .after(\"IOC\")\n                    .after(\"wds_object\")\n                    .before(\"starter\")\n                    .process(() -> {\n                        try {\n                            IOC.resolve(\n                                    Keys.getOrAdd(IResolveDependencyStrategy.class.getCanonicalName()),\n                                    \"getFirstNotNullRule\",\n                                    new GetFirstNotNullRule()\n                            );\n                        } catch (ResolutionException e) {\n                            throw new ActionExecuteException(\n                                    \"GetFirstNotNullRule plugin can't load: can't get GetFirstNotNullRule key\", e\n                            );\n                        }\n                    });\n            bootstrap.add(item);\n        } catch (InvalidArgumentException e) {\n            throw new PluginException(\"Can't create BootstrapItem\", e);\n        }\n    }", "signature": "void load()", "full_signature": "@Override public void load()", "class_method_signature": "GetFirstNotNullRulePlugin.load()", "testcase": false, "constructor": false, "invocations": ["process", "before", "after", "after", "resolve", "getOrAdd", "getCanonicalName", "add"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}