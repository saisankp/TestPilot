{"test_class": {"identifier": "WriteFeatureValueMetricsDoFnTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule public final transient TestPipeline pipeline = TestPipeline.create();", "modifier": "@Rule public final transient", "type": "TestPipeline", "declarator": "pipeline = TestPipeline.create()", "var_name": "pipeline"}, {"original_string": "private static final int STATSD_SERVER_PORT = 17254;", "modifier": "private static final", "type": "int", "declarator": "STATSD_SERVER_PORT = 17254", "var_name": "STATSD_SERVER_PORT"}, {"original_string": "private final DummyStatsDServer statsDServer = new DummyStatsDServer(STATSD_SERVER_PORT);", "modifier": "private final", "type": "DummyStatsDServer", "declarator": "statsDServer = new DummyStatsDServer(STATSD_SERVER_PORT)", "var_name": "statsDServer"}], "file": "ingestion/src/test/java/feast/ingestion/transform/metrics/WriteFeatureValueMetricsDoFnTest.java"}, "test_case": {"identifier": "shouldSendCorrectStatsDMetrics", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldSendCorrectStatsDMetrics() throws IOException, InterruptedException {\n    PipelineOptions pipelineOptions = PipelineOptionsFactory.create();\n    pipelineOptions.setJobName(\"job-12345678\");\n\n    Map<String, Iterable<FeatureRow>> input =\n        readTestInput(\"feast/ingestion/transform/WriteFeatureValueMetricsDoFnTest.input\");\n    List<String> expectedLines =\n        readTestOutput(\"feast/ingestion/transform/WriteFeatureValueMetricsDoFnTest.output\");\n\n    pipeline\n        .apply(Create.of(input))\n        .apply(\n            ParDo.of(\n                WriteFeatureValueMetricsDoFn.newBuilder()\n                    .setStatsdHost(\"localhost\")\n                    .setStatsdPort(STATSD_SERVER_PORT)\n                    .setStoreName(\"store\")\n                    .setMetricsNamespace(\"test\")\n                    .build()));\n    pipeline.run(pipelineOptions).waitUntilFinish();\n    // Wait until StatsD has finished processed all messages, 3 sec is a reasonable duration\n    // based on empirical testing.\n    Thread.sleep(3000);\n\n    List<String> actualLines = statsDServer.messagesReceived();\n    for (String expected : expectedLines) {\n      boolean matched = false;\n      for (String actual : actualLines) {\n        if (actual.equals(expected)) {\n          matched = true;\n          break;\n        }\n      }\n      if (!matched) {\n        System.out.println(\"Print actual metrics output for debugging:\");\n        for (String line : actualLines) {\n          System.out.println(line);\n        }\n        fail(String.format(\"Expected StatsD metric not found:\\n%s\", expected));\n      }\n    }\n    statsDServer.stop();\n  }", "signature": "void shouldSendCorrectStatsDMetrics()", "full_signature": "@Test public void shouldSendCorrectStatsDMetrics()", "class_method_signature": "WriteFeatureValueMetricsDoFnTest.shouldSendCorrectStatsDMetrics()", "testcase": true, "constructor": false, "invocations": ["create", "setJobName", "readTestInput", "readTestOutput", "apply", "apply", "of", "of", "build", "setMetricsNamespace", "setStoreName", "setStatsdPort", "setStatsdHost", "newBuilder", "waitUntilFinish", "run", "sleep", "messagesReceived", "equals", "println", "println", "fail", "format", "stop"]}, "focal_class": {"identifier": "WriteFeatureValueMetricsDoFn", "superclass": "extends DoFn<KV<String, Iterable<FeatureRow>>, Void>", "interfaces": "", "fields": [{"original_string": "private static final Logger log =\n      org.slf4j.LoggerFactory.getLogger(WriteFeatureValueMetricsDoFn.class);", "modifier": "private static final", "type": "Logger", "declarator": "log =\n      org.slf4j.LoggerFactory.getLogger(WriteFeatureValueMetricsDoFn.class)", "var_name": "log"}, {"original_string": "private StatsDClient statsDClient;", "modifier": "private", "type": "StatsDClient", "declarator": "statsDClient", "var_name": "statsDClient"}, {"original_string": "public static String GAUGE_NAME_FEATURE_VALUE_MIN = \"feature_value_min\";", "modifier": "public static", "type": "String", "declarator": "GAUGE_NAME_FEATURE_VALUE_MIN = \"feature_value_min\"", "var_name": "GAUGE_NAME_FEATURE_VALUE_MIN"}, {"original_string": "public static String GAUGE_NAME_FEATURE_VALUE_MAX = \"feature_value_max\";", "modifier": "public static", "type": "String", "declarator": "GAUGE_NAME_FEATURE_VALUE_MAX = \"feature_value_max\"", "var_name": "GAUGE_NAME_FEATURE_VALUE_MAX"}, {"original_string": "public static String GAUGE_NAME_FEATURE_VALUE_MEAN = \"feature_value_mean\";", "modifier": "public static", "type": "String", "declarator": "GAUGE_NAME_FEATURE_VALUE_MEAN = \"feature_value_mean\"", "var_name": "GAUGE_NAME_FEATURE_VALUE_MEAN"}, {"original_string": "public static String GAUGE_NAME_FEATURE_VALUE_PERCENTILE_25 = \"feature_value_percentile_25\";", "modifier": "public static", "type": "String", "declarator": "GAUGE_NAME_FEATURE_VALUE_PERCENTILE_25 = \"feature_value_percentile_25\"", "var_name": "GAUGE_NAME_FEATURE_VALUE_PERCENTILE_25"}, {"original_string": "public static String GAUGE_NAME_FEATURE_VALUE_PERCENTILE_50 = \"feature_value_percentile_50\";", "modifier": "public static", "type": "String", "declarator": "GAUGE_NAME_FEATURE_VALUE_PERCENTILE_50 = \"feature_value_percentile_50\"", "var_name": "GAUGE_NAME_FEATURE_VALUE_PERCENTILE_50"}, {"original_string": "public static String GAUGE_NAME_FEATURE_VALUE_PERCENTILE_90 = \"feature_value_percentile_90\";", "modifier": "public static", "type": "String", "declarator": "GAUGE_NAME_FEATURE_VALUE_PERCENTILE_90 = \"feature_value_percentile_90\"", "var_name": "GAUGE_NAME_FEATURE_VALUE_PERCENTILE_90"}, {"original_string": "public static String GAUGE_NAME_FEATURE_VALUE_PERCENTILE_95 = \"feature_value_percentile_95\";", "modifier": "public static", "type": "String", "declarator": "GAUGE_NAME_FEATURE_VALUE_PERCENTILE_95 = \"feature_value_percentile_95\"", "var_name": "GAUGE_NAME_FEATURE_VALUE_PERCENTILE_95"}, {"original_string": "public static String GAUGE_NAME_FEATURE_VALUE_PERCENTILE_99 = \"feature_value_percentile_99\";", "modifier": "public static", "type": "String", "declarator": "GAUGE_NAME_FEATURE_VALUE_PERCENTILE_99 = \"feature_value_percentile_99\"", "var_name": "GAUGE_NAME_FEATURE_VALUE_PERCENTILE_99"}], "methods": [{"identifier": "getStoreName", "parameters": "()", "modifiers": "abstract", "return": "String", "signature": "String getStoreName()", "full_signature": "abstract String getStoreName()", "class_method_signature": "WriteFeatureValueMetricsDoFn.getStoreName()", "testcase": false, "constructor": false}, {"identifier": "getStatsdHost", "parameters": "()", "modifiers": "abstract", "return": "String", "signature": "String getStatsdHost()", "full_signature": "abstract String getStatsdHost()", "class_method_signature": "WriteFeatureValueMetricsDoFn.getStatsdHost()", "testcase": false, "constructor": false}, {"identifier": "getStatsdPort", "parameters": "()", "modifiers": "abstract", "return": "int", "signature": "int getStatsdPort()", "full_signature": "abstract int getStatsdPort()", "class_method_signature": "WriteFeatureValueMetricsDoFn.getStatsdPort()", "testcase": false, "constructor": false}, {"identifier": "getMetricsNamespace", "parameters": "()", "modifiers": "abstract", "return": "String", "signature": "String getMetricsNamespace()", "full_signature": "abstract String getMetricsNamespace()", "class_method_signature": "WriteFeatureValueMetricsDoFn.getMetricsNamespace()", "testcase": false, "constructor": false}, {"identifier": "newBuilder", "parameters": "()", "modifiers": "static", "return": "Builder", "signature": "Builder newBuilder()", "full_signature": "static Builder newBuilder()", "class_method_signature": "WriteFeatureValueMetricsDoFn.newBuilder()", "testcase": false, "constructor": false}, {"identifier": "setup", "parameters": "()", "modifiers": "@Setup public", "return": "void", "signature": "void setup()", "full_signature": "@Setup public void setup()", "class_method_signature": "WriteFeatureValueMetricsDoFn.setup()", "testcase": false, "constructor": false}, {"identifier": "tearDown", "parameters": "()", "modifiers": "@Teardown public", "return": "void", "signature": "void tearDown()", "full_signature": "@Teardown public void tearDown()", "class_method_signature": "WriteFeatureValueMetricsDoFn.tearDown()", "testcase": false, "constructor": false}, {"identifier": "processElement", "parameters": "(\n      ProcessContext context,\n      @Element KV<String, Iterable<FeatureRow>> featureSetRefToFeatureRows)", "modifiers": "@ProcessElement public", "return": "void", "signature": "void processElement(\n      ProcessContext context,\n      @Element KV<String, Iterable<FeatureRow>> featureSetRefToFeatureRows)", "full_signature": "@ProcessElement public void processElement(\n      ProcessContext context,\n      @Element KV<String, Iterable<FeatureRow>> featureSetRefToFeatureRows)", "class_method_signature": "WriteFeatureValueMetricsDoFn.processElement(\n      ProcessContext context,\n      @Element KV<String, Iterable<FeatureRow>> featureSetRefToFeatureRows)", "testcase": false, "constructor": false}, {"identifier": "updateStats", "parameters": "(\n      Map<String, DoubleSummaryStatistics> featureNameToStats,\n      Map<String, List<Double>> featureNameToValues,\n      Field field)", "modifiers": "private", "return": "void", "signature": "void updateStats(\n      Map<String, DoubleSummaryStatistics> featureNameToStats,\n      Map<String, List<Double>> featureNameToValues,\n      Field field)", "full_signature": "private void updateStats(\n      Map<String, DoubleSummaryStatistics> featureNameToStats,\n      Map<String, List<Double>> featureNameToValues,\n      Field field)", "class_method_signature": "WriteFeatureValueMetricsDoFn.updateStats(\n      Map<String, DoubleSummaryStatistics> featureNameToStats,\n      Map<String, List<Double>> featureNameToValues,\n      Field field)", "testcase": false, "constructor": false}], "file": "ingestion/src/main/java/feast/ingestion/transform/metrics/WriteFeatureValueMetricsDoFn.java"}, "focal_method": {"identifier": "newBuilder", "parameters": "()", "modifiers": "static", "return": "Builder", "body": "static Builder newBuilder() {\n    return new AutoValue_WriteFeatureValueMetricsDoFn.Builder();\n  }", "signature": "Builder newBuilder()", "full_signature": "static Builder newBuilder()", "class_method_signature": "WriteFeatureValueMetricsDoFn.newBuilder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 161133770, "url": "https://github.com/gojek/feast", "stars": 633, "created": "12/10/2018 7:20:15 AM +00:00", "updates": "2020-01-27T12:39:33+00:00", "fork": "False", "license": "licensed"}}