{"test_class": {"identifier": "InteractionModelRendererTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ObjectMapper MAPPER = new ObjectMapper();", "modifier": "private static final", "type": "ObjectMapper", "declarator": "MAPPER = new ObjectMapper()", "var_name": "MAPPER"}, {"original_string": "private static final ObjectWriter WRITER = MAPPER.writerWithDefaultPrettyPrinter();", "modifier": "private static final", "type": "ObjectWriter", "declarator": "WRITER = MAPPER.writerWithDefaultPrettyPrinter()", "var_name": "WRITER"}, {"original_string": "private final InteractionModelRenderer underTest = new InteractionModelRenderer();", "modifier": "private final", "type": "InteractionModelRenderer", "declarator": "underTest = new InteractionModelRenderer()", "var_name": "underTest"}], "file": "ask-sdk-interaction-model-mapper/src/test/java/com/amazon/ask/interaction/renderer/InteractionModelRendererTest.java"}, "test_case": {"identifier": "testCustomIntentsLanguageModel", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCustomIntentsLanguageModel() throws IOException {\n        SkillModel skill = SkillModel.builder()\n            .withInvocationName(Locales.en_US, \"test\")\n            .addModel(Model.builder()\n                .intent(TestIntent.class)\n                .build())\n            .build();\n\n        LanguageModel actual = underTest.render(skill, Locales.en_US).getLanguageModel();\n        LanguageModel expected = LanguageModel.builder()\n            .withInvocationName(\"test\")\n            .withIntents(Collections.singletonList(\n                makeIntent(\"TestIntent\", Arrays.asList(\n                    makeIntentSlot(\"customSlot\", \"TestCustom\"),\n                    makeIntentSlot(\"dateSlot\", \"AMAZON.DATE\"),\n                    makeIntentSlot(\"dayOfWeekSlot\", \"AMAZON.DayOfWeek\"),\n                    makeIntentSlot(\"durationSlot\", \"AMAZON.DURATION\"),\n                    makeIntentSlot(\"listTypeSlot\", \"AMAZON.Actor\"),\n                    makeIntentSlot(\"literalSlot\", \"AMAZON.LITERAL\"),\n                    makeIntentSlot(\"numberSlot\", \"AMAZON.NUMBER\"),\n                    makeIntentSlot(\"timeSlot\", \"AMAZON.TIME\")\n                ), Collections.singletonList(\"test_en_US\"))))\n            .withTypes(Collections.singletonList(\n                makeSlotType(\"TestCustom\", Arrays.asList(\n                    makeSlotTypeValue(\"A\", Collections.singletonList(\"test_A_en_US\")),\n                    makeSlotTypeValue(\"B\", Collections.singletonList(\"test_B_en_US\"))))))\n            .build();\n\n        assertEquals(WRITER.writeValueAsString(expected), WRITER.writeValueAsString(actual));\n    }", "signature": "void testCustomIntentsLanguageModel()", "full_signature": "@Test public void testCustomIntentsLanguageModel()", "class_method_signature": "InteractionModelRendererTest.testCustomIntentsLanguageModel()", "testcase": true, "constructor": false, "invocations": ["build", "addModel", "withInvocationName", "builder", "build", "intent", "builder", "getLanguageModel", "render", "build", "withTypes", "withIntents", "withInvocationName", "builder", "singletonList", "makeIntent", "asList", "makeIntentSlot", "makeIntentSlot", "makeIntentSlot", "makeIntentSlot", "makeIntentSlot", "makeIntentSlot", "makeIntentSlot", "makeIntentSlot", "singletonList", "singletonList", "makeSlotType", "asList", "makeSlotTypeValue", "singletonList", "makeSlotTypeValue", "singletonList", "assertEquals", "writeValueAsString", "writeValueAsString"]}, "focal_class": {"identifier": "InteractionModelRenderer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ModelRenderer modelRenderer;", "modifier": "private final", "type": "ModelRenderer", "declarator": "modelRenderer", "var_name": "modelRenderer"}], "methods": [{"identifier": "InteractionModelRenderer", "parameters": "(ModelRenderer modelRenderer)", "modifiers": "public", "return": "", "signature": " InteractionModelRenderer(ModelRenderer modelRenderer)", "full_signature": "public  InteractionModelRenderer(ModelRenderer modelRenderer)", "class_method_signature": "InteractionModelRenderer.InteractionModelRenderer(ModelRenderer modelRenderer)", "testcase": false, "constructor": true}, {"identifier": "InteractionModelRenderer", "parameters": "()", "modifiers": "public", "return": "", "signature": " InteractionModelRenderer()", "full_signature": "public  InteractionModelRenderer()", "class_method_signature": "InteractionModelRenderer.InteractionModelRenderer()", "testcase": false, "constructor": true}, {"identifier": "render", "parameters": "(SkillModel skillModel, Locale locale)", "modifiers": "public", "return": "InteractionModel", "signature": "InteractionModel render(SkillModel skillModel, Locale locale)", "full_signature": "public InteractionModel render(SkillModel skillModel, Locale locale)", "class_method_signature": "InteractionModelRenderer.render(SkillModel skillModel, Locale locale)", "testcase": false, "constructor": false}], "file": "ask-sdk-interaction-model-mapper/src/main/java/com/amazon/ask/interaction/renderer/InteractionModelRenderer.java"}, "focal_method": {"identifier": "render", "parameters": "(SkillModel skillModel, Locale locale)", "modifiers": "public", "return": "InteractionModel", "body": "public InteractionModel render(SkillModel skillModel, Locale locale) {\n        assertNotNull(skillModel, \"skillDefinition\");\n        assertNotNull(locale, \"locale\");\n        if (!skillModel.getInvocationNames().containsKey(locale)) {\n            throw new IllegalArgumentException(\"no invocation name specified for locale: \" + locale);\n        }\n\n        SubModel subModel = modelRenderer.render(skillModel.getModel(), locale);\n\n        LanguageModel languageModel = LanguageModel.builder()\n            .withInvocationName(skillModel.getInvocationNames().get(locale))\n            .withIntents(new ArrayList<>(subModel.getLanguageModel().getIntents()))\n            .withTypes(new ArrayList<>(subModel.getLanguageModel().getTypes()))\n            .build();\n\n        return InteractionModel.builder()\n            .withLanguageModel(languageModel)\n            .withDialog(subModel.getDialog())\n            .withPrompts(subModel.getPrompts())\n            .build();\n    }", "signature": "InteractionModel render(SkillModel skillModel, Locale locale)", "full_signature": "public InteractionModel render(SkillModel skillModel, Locale locale)", "class_method_signature": "InteractionModelRenderer.render(SkillModel skillModel, Locale locale)", "testcase": false, "constructor": false, "invocations": ["assertNotNull", "assertNotNull", "containsKey", "getInvocationNames", "render", "getModel", "build", "withTypes", "withIntents", "withInvocationName", "builder", "get", "getInvocationNames", "getIntents", "getLanguageModel", "getTypes", "getLanguageModel", "build", "withPrompts", "withDialog", "withLanguageModel", "builder", "getDialog", "getPrompts"]}, "repository": {"repo_id": 143249569, "url": "https://github.com/amazon-archives/ask-sdk-frameworks-java", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 12, "size": 313, "license": "licensed"}}