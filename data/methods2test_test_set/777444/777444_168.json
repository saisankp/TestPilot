{"test_class": {"identifier": "SearchHandlerTest", "superclass": "extends BaseHandlerTest", "interfaces": "", "fields": [{"original_string": "private SearchHandler handler;", "modifier": "private", "type": "SearchHandler", "declarator": "handler", "var_name": "handler"}, {"original_string": "private MBeanServer server;", "modifier": "private", "type": "MBeanServer", "declarator": "server", "var_name": "server"}], "file": "agent/core/src/test/java/org/jolokia/handler/SearchHandlerTest.java"}, "test_case": {"identifier": "handleAllServersAtOnce", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void handleAllServersAtOnce() throws MalformedObjectNameException {\n        assertTrue(handler.handleAllServersAtOnce(new JmxRequestBuilder(RequestType.SEARCH, \"java.lang:*\").<JmxSearchRequest>build()));\n    }", "signature": "void handleAllServersAtOnce()", "full_signature": "@Test public void handleAllServersAtOnce()", "class_method_signature": "SearchHandlerTest.handleAllServersAtOnce()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "handleAllServersAtOnce", "build"]}, "focal_class": {"identifier": "SearchHandler", "superclass": "extends JsonRequestHandler<JmxSearchRequest>", "interfaces": "", "fields": [], "methods": [{"identifier": "SearchHandler", "parameters": "(Restrictor pRestrictor)", "modifiers": "public", "return": "", "signature": " SearchHandler(Restrictor pRestrictor)", "full_signature": "public  SearchHandler(Restrictor pRestrictor)", "class_method_signature": "SearchHandler.SearchHandler(Restrictor pRestrictor)", "testcase": false, "constructor": true}, {"identifier": "getType", "parameters": "()", "modifiers": "@Override public", "return": "RequestType", "signature": "RequestType getType()", "full_signature": "@Override public RequestType getType()", "class_method_signature": "SearchHandler.getType()", "testcase": false, "constructor": false}, {"identifier": "checkForRestriction", "parameters": "(JmxSearchRequest pRequest)", "modifiers": "@Override protected", "return": "void", "signature": "void checkForRestriction(JmxSearchRequest pRequest)", "full_signature": "@Override protected void checkForRestriction(JmxSearchRequest pRequest)", "class_method_signature": "SearchHandler.checkForRestriction(JmxSearchRequest pRequest)", "testcase": false, "constructor": false}, {"identifier": "doHandleRequest", "parameters": "(MBeanServerExecutor serverManager, JmxSearchRequest request)", "modifiers": "@Override @SuppressWarnings(\"PMD.ReplaceHashtableWithMap\") public", "return": "Object", "signature": "Object doHandleRequest(MBeanServerExecutor serverManager, JmxSearchRequest request)", "full_signature": "@Override @SuppressWarnings(\"PMD.ReplaceHashtableWithMap\") public Object doHandleRequest(MBeanServerExecutor serverManager, JmxSearchRequest request)", "class_method_signature": "SearchHandler.doHandleRequest(MBeanServerExecutor serverManager, JmxSearchRequest request)", "testcase": false, "constructor": false}, {"identifier": "handleAllServersAtOnce", "parameters": "(JmxSearchRequest pRequest)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean handleAllServersAtOnce(JmxSearchRequest pRequest)", "full_signature": "@Override public boolean handleAllServersAtOnce(JmxSearchRequest pRequest)", "class_method_signature": "SearchHandler.handleAllServersAtOnce(JmxSearchRequest pRequest)", "testcase": false, "constructor": false}, {"identifier": "doHandleRequest", "parameters": "(MBeanServerConnection server, JmxSearchRequest request)", "modifiers": "@Override protected", "return": "Object", "signature": "Object doHandleRequest(MBeanServerConnection server, JmxSearchRequest request)", "full_signature": "@Override protected Object doHandleRequest(MBeanServerConnection server, JmxSearchRequest request)", "class_method_signature": "SearchHandler.doHandleRequest(MBeanServerConnection server, JmxSearchRequest request)", "testcase": false, "constructor": false}], "file": "agent/core/src/main/java/org/jolokia/handler/SearchHandler.java"}, "focal_method": {"identifier": "handleAllServersAtOnce", "parameters": "(JmxSearchRequest pRequest)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean handleAllServersAtOnce(JmxSearchRequest pRequest) {\n        return true;\n    }", "signature": "boolean handleAllServersAtOnce(JmxSearchRequest pRequest)", "full_signature": "@Override public boolean handleAllServersAtOnce(JmxSearchRequest pRequest)", "class_method_signature": "SearchHandler.handleAllServersAtOnce(JmxSearchRequest pRequest)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 777444, "url": "https://github.com/rhuss/jolokia", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 682, "size": 20451, "license": "licensed"}}