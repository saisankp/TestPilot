{"test_class": {"identifier": "JobRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private JobRestController jobRestController;", "modifier": "@InjectMocks\n    private", "type": "JobRestController", "declarator": "jobRestController", "var_name": "jobRestController"}, {"original_string": "@Mock\n    private JobService jobService;", "modifier": "@Mock\n    private", "type": "JobService", "declarator": "jobService", "var_name": "jobService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/JobRestControllerTest.java"}, "test_case": {"identifier": "testGetJob", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetJob() throws Exception\n    {\n        // Create a job.\n        Job job = new Job();\n        job.setId(JOB_ID);\n\n        // Mock the external calls.\n        when(jobService.getJob(JOB_ID, VERBOSE)).thenReturn(job);\n\n        // Call the method under test.\n        Job result = jobRestController.getJob(JOB_ID, VERBOSE);\n\n        // Verify the external calls.\n        verify(jobService).getJob(JOB_ID, VERBOSE);\n        verifyNoMoreInteractionsHelper();\n\n        // Validate the results.\n        assertEquals(job, result);\n    }", "signature": "void testGetJob()", "full_signature": "@Test public void testGetJob()", "class_method_signature": "JobRestControllerTest.testGetJob()", "testcase": true, "constructor": false, "invocations": ["setId", "thenReturn", "when", "getJob", "getJob", "getJob", "verify", "verifyNoMoreInteractionsHelper", "assertEquals"]}, "focal_class": {"identifier": "JobRestController", "superclass": "extends HerdBaseController", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private JobService jobService;", "modifier": "@Autowired\n    private", "type": "JobService", "declarator": "jobService", "var_name": "jobService"}], "methods": [{"identifier": "createJob", "parameters": "(@RequestBody JobCreateRequest request)", "modifiers": "@RequestMapping(value = \"/jobs\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_JOBS_POST) public", "return": "Job", "signature": "Job createJob(@RequestBody JobCreateRequest request)", "full_signature": "@RequestMapping(value = \"/jobs\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_JOBS_POST) public Job createJob(@RequestBody JobCreateRequest request)", "class_method_signature": "JobRestController.createJob(@RequestBody JobCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "getJobs", "parameters": "(@RequestParam(value = \"namespace\", required = false) String namespace,\n        @RequestParam(value = \"jobName\", required = false) String jobName, @RequestParam(value = \"status\", required = false) JobStatusEnum status,\n        @RequestParam(value = \"startTime\", required = false) String startTime, @RequestParam(value = \"endTime\", required = false) String endTime)", "modifiers": "@RequestMapping(value = \"/jobs\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_JOBS_GET) public", "return": "JobSummaries", "signature": "JobSummaries getJobs(@RequestParam(value = \"namespace\", required = false) String namespace,\n        @RequestParam(value = \"jobName\", required = false) String jobName, @RequestParam(value = \"status\", required = false) JobStatusEnum status,\n        @RequestParam(value = \"startTime\", required = false) String startTime, @RequestParam(value = \"endTime\", required = false) String endTime)", "full_signature": "@RequestMapping(value = \"/jobs\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_JOBS_GET) public JobSummaries getJobs(@RequestParam(value = \"namespace\", required = false) String namespace,\n        @RequestParam(value = \"jobName\", required = false) String jobName, @RequestParam(value = \"status\", required = false) JobStatusEnum status,\n        @RequestParam(value = \"startTime\", required = false) String startTime, @RequestParam(value = \"endTime\", required = false) String endTime)", "class_method_signature": "JobRestController.getJobs(@RequestParam(value = \"namespace\", required = false) String namespace,\n        @RequestParam(value = \"jobName\", required = false) String jobName, @RequestParam(value = \"status\", required = false) JobStatusEnum status,\n        @RequestParam(value = \"startTime\", required = false) String startTime, @RequestParam(value = \"endTime\", required = false) String endTime)", "testcase": false, "constructor": false}, {"identifier": "getJob", "parameters": "(@PathVariable(\"id\") String id, @RequestParam(value = \"verbose\", required = false, defaultValue = \"false\") Boolean verbose)", "modifiers": "@RequestMapping(value = \"/jobs/ids/{id}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_JOBS_GET_BY_ID) public", "return": "Job", "signature": "Job getJob(@PathVariable(\"id\") String id, @RequestParam(value = \"verbose\", required = false, defaultValue = \"false\") Boolean verbose)", "full_signature": "@RequestMapping(value = \"/jobs/ids/{id}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_JOBS_GET_BY_ID) public Job getJob(@PathVariable(\"id\") String id, @RequestParam(value = \"verbose\", required = false, defaultValue = \"false\") Boolean verbose)", "class_method_signature": "JobRestController.getJob(@PathVariable(\"id\") String id, @RequestParam(value = \"verbose\", required = false, defaultValue = \"false\") Boolean verbose)", "testcase": false, "constructor": false}, {"identifier": "signalJob", "parameters": "(@RequestBody JobSignalRequest request)", "modifiers": "@RequestMapping(value = \"/jobs/signal\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_JOBS_SIGNAL_POST) public", "return": "Job", "signature": "Job signalJob(@RequestBody JobSignalRequest request)", "full_signature": "@RequestMapping(value = \"/jobs/signal\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_JOBS_SIGNAL_POST) public Job signalJob(@RequestBody JobSignalRequest request)", "class_method_signature": "JobRestController.signalJob(@RequestBody JobSignalRequest request)", "testcase": false, "constructor": false}, {"identifier": "updateJob", "parameters": "(@PathVariable(\"id\") String id, @RequestBody JobUpdateRequest jobUpdateRequest)", "modifiers": "@RequestMapping(value = \"/jobs/ids/{id}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_JOBS_PUT) public", "return": "Job", "signature": "Job updateJob(@PathVariable(\"id\") String id, @RequestBody JobUpdateRequest jobUpdateRequest)", "full_signature": "@RequestMapping(value = \"/jobs/ids/{id}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_JOBS_PUT) public Job updateJob(@PathVariable(\"id\") String id, @RequestBody JobUpdateRequest jobUpdateRequest)", "class_method_signature": "JobRestController.updateJob(@PathVariable(\"id\") String id, @RequestBody JobUpdateRequest jobUpdateRequest)", "testcase": false, "constructor": false}, {"identifier": "deleteJob", "parameters": "(@PathVariable(\"id\") String id, @RequestBody JobDeleteRequest jobDeleteRequest)", "modifiers": "@RequestMapping(value = \"/jobs/ids/{id}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_JOBS_DELETE) public", "return": "Job", "signature": "Job deleteJob(@PathVariable(\"id\") String id, @RequestBody JobDeleteRequest jobDeleteRequest)", "full_signature": "@RequestMapping(value = \"/jobs/ids/{id}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_JOBS_DELETE) public Job deleteJob(@PathVariable(\"id\") String id, @RequestBody JobDeleteRequest jobDeleteRequest)", "class_method_signature": "JobRestController.deleteJob(@PathVariable(\"id\") String id, @RequestBody JobDeleteRequest jobDeleteRequest)", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/JobRestController.java"}, "focal_method": {"identifier": "getJob", "parameters": "(@PathVariable(\"id\") String id, @RequestParam(value = \"verbose\", required = false, defaultValue = \"false\") Boolean verbose)", "modifiers": "@RequestMapping(value = \"/jobs/ids/{id}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_JOBS_GET_BY_ID) public", "return": "Job", "body": "@RequestMapping(value = \"/jobs/ids/{id}\", method = RequestMethod.GET)\n    @Secured(SecurityFunctions.FN_JOBS_GET_BY_ID)\n    public Job getJob(@PathVariable(\"id\") String id, @RequestParam(value = \"verbose\", required = false, defaultValue = \"false\") Boolean verbose)\n        throws Exception\n    {\n        return jobService.getJob(id, verbose);\n    }", "signature": "Job getJob(@PathVariable(\"id\") String id, @RequestParam(value = \"verbose\", required = false, defaultValue = \"false\") Boolean verbose)", "full_signature": "@RequestMapping(value = \"/jobs/ids/{id}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_JOBS_GET_BY_ID) public Job getJob(@PathVariable(\"id\") String id, @RequestParam(value = \"verbose\", required = false, defaultValue = \"false\") Boolean verbose)", "class_method_signature": "JobRestController.getJob(@PathVariable(\"id\") String id, @RequestParam(value = \"verbose\", required = false, defaultValue = \"false\") Boolean verbose)", "testcase": false, "constructor": false, "invocations": ["getJob"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}