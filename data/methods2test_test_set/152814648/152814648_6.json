{"test_class": {"identifier": "ParserConfigurationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final List<GroovyParser> PARSERS = Collections.singletonList(mock(GroovyParser.class));", "modifier": "private static final", "type": "List<GroovyParser>", "declarator": "PARSERS = Collections.singletonList(mock(GroovyParser.class))", "var_name": "PARSERS"}], "file": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/groovy/ParserConfigurationTest.java"}, "test_case": {"identifier": "shouldHaveNoRootFoldersWhenCreated", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldHaveNoRootFoldersWhenCreated() {\n        ParserConfiguration configuration = new ParserConfiguration(mock(GlobalConfigurationFacade.class));\n\n        assertThat(configuration.getParsers()).isEmpty();\n    }", "signature": "void shouldHaveNoRootFoldersWhenCreated()", "full_signature": "@Test void shouldHaveNoRootFoldersWhenCreated()", "class_method_signature": "ParserConfigurationTest.shouldHaveNoRootFoldersWhenCreated()", "testcase": true, "constructor": false, "invocations": ["mock", "isEmpty", "assertThat", "getParsers"]}, "focal_class": {"identifier": "ParserConfiguration", "superclass": "extends GlobalConfigurationItem", "interfaces": "", "fields": [{"original_string": "private List<GroovyParser> parsers = new ArrayList<>();", "modifier": "private", "type": "List<GroovyParser>", "declarator": "parsers = new ArrayList<>()", "var_name": "parsers"}], "methods": [{"identifier": "ParserConfiguration", "parameters": "()", "modifiers": "public", "return": "", "signature": " ParserConfiguration()", "full_signature": "public  ParserConfiguration()", "class_method_signature": "ParserConfiguration.ParserConfiguration()", "testcase": false, "constructor": true}, {"identifier": "ParserConfiguration", "parameters": "(final GlobalConfigurationFacade facade)", "modifiers": "@VisibleForTesting", "return": "", "signature": " ParserConfiguration(final GlobalConfigurationFacade facade)", "full_signature": "@VisibleForTesting  ParserConfiguration(final GlobalConfigurationFacade facade)", "class_method_signature": "ParserConfiguration.ParserConfiguration(final GlobalConfigurationFacade facade)", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static", "return": "ParserConfiguration", "signature": "ParserConfiguration getInstance()", "full_signature": "public static ParserConfiguration getInstance()", "class_method_signature": "ParserConfiguration.getInstance()", "testcase": false, "constructor": false}, {"identifier": "clearRepeatableProperties", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void clearRepeatableProperties()", "full_signature": "@Override protected void clearRepeatableProperties()", "class_method_signature": "ParserConfiguration.clearRepeatableProperties()", "testcase": false, "constructor": false}, {"identifier": "getParsers", "parameters": "()", "modifiers": "public", "return": "List<GroovyParser>", "signature": "List<GroovyParser> getParsers()", "full_signature": "public List<GroovyParser> getParsers()", "class_method_signature": "ParserConfiguration.getParsers()", "testcase": false, "constructor": false}, {"identifier": "setParsers", "parameters": "(final List<GroovyParser> parsers)", "modifiers": "@DataBoundSetter public", "return": "void", "signature": "void setParsers(final List<GroovyParser> parsers)", "full_signature": "@DataBoundSetter public void setParsers(final List<GroovyParser> parsers)", "class_method_signature": "ParserConfiguration.setParsers(final List<GroovyParser> parsers)", "testcase": false, "constructor": false}, {"identifier": "canEditParsers", "parameters": "()", "modifiers": "@SuppressWarnings(\"unused\") // Called from config.jelly public", "return": "boolean", "signature": "boolean canEditParsers()", "full_signature": "@SuppressWarnings(\"unused\") // Called from config.jelly public boolean canEditParsers()", "class_method_signature": "ParserConfiguration.canEditParsers()", "testcase": false, "constructor": false}, {"identifier": "getParser", "parameters": "(final String id)", "modifiers": "public", "return": "ReportScanningTool", "signature": "ReportScanningTool getParser(final String id)", "full_signature": "public ReportScanningTool getParser(final String id)", "class_method_signature": "ParserConfiguration.getParser(final String id)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final String id)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(final String id)", "full_signature": "public boolean contains(final String id)", "class_method_signature": "ParserConfiguration.contains(final String id)", "testcase": false, "constructor": false}, {"identifier": "asListBoxModel", "parameters": "()", "modifiers": "public", "return": "ListBoxModel", "signature": "ListBoxModel asListBoxModel()", "full_signature": "public ListBoxModel asListBoxModel()", "class_method_signature": "ParserConfiguration.asListBoxModel()", "testcase": false, "constructor": false}], "file": "plugin/src/main/java/io/jenkins/plugins/analysis/warnings/groovy/ParserConfiguration.java"}, "focal_method": {"identifier": "getParsers", "parameters": "()", "modifiers": "public", "return": "List<GroovyParser>", "body": "public List<GroovyParser> getParsers() {\n        return parsers;\n    }", "signature": "List<GroovyParser> getParsers()", "full_signature": "public List<GroovyParser> getParsers()", "class_method_signature": "ParserConfiguration.getParsers()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 152814648, "url": "https://github.com/jenkinsci/warnings-ng-plugin", "stars": 158, "created": "10/12/2018 10:41:36 PM +00:00", "updates": "2020-01-27T14:00:03+00:00", "fork": "False", "license": "licensed"}}