{"test_class": {"identifier": "AcceptMediaTypeHeaderDelegateTest", "superclass": "", "interfaces": "", "fields": [], "file": "everrest-core/src/test/java/org/everrest/core/impl/header/AcceptMediaTypeHeaderDelegateTest.java"}, "test_case": {"identifier": "testAcceptMediaTypeToString", "parameters": "(AcceptMediaType acceptMediaType, String expectedResult)", "modifiers": "@UseDataProvider(\"forTestAcceptMediaTypeToString\") @Test public", "return": "void", "body": "@UseDataProvider(\"forTestAcceptMediaTypeToString\")\n    @Test\n    public void testAcceptMediaTypeToString(AcceptMediaType acceptMediaType, String expectedResult) {\n        AcceptMediaTypeHeaderDelegate headerDelegate = new AcceptMediaTypeHeaderDelegate();\n        assertEquals(expectedResult, headerDelegate.toString(acceptMediaType));\n    }", "signature": "void testAcceptMediaTypeToString(AcceptMediaType acceptMediaType, String expectedResult)", "full_signature": "@UseDataProvider(\"forTestAcceptMediaTypeToString\") @Test public void testAcceptMediaTypeToString(AcceptMediaType acceptMediaType, String expectedResult)", "class_method_signature": "AcceptMediaTypeHeaderDelegateTest.testAcceptMediaTypeToString(AcceptMediaType acceptMediaType, String expectedResult)", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toString"]}, "focal_class": {"identifier": "AcceptMediaTypeHeaderDelegate", "superclass": "", "interfaces": "implements RuntimeDelegate.HeaderDelegate<AcceptMediaType>", "fields": [], "methods": [{"identifier": "fromString", "parameters": "(String header)", "modifiers": "@Override public", "return": "AcceptMediaType", "signature": "AcceptMediaType fromString(String header)", "full_signature": "@Override public AcceptMediaType fromString(String header)", "class_method_signature": "AcceptMediaTypeHeaderDelegate.fromString(String header)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(AcceptMediaType acceptMediaType)", "modifiers": "@Override public", "return": "String", "signature": "String toString(AcceptMediaType acceptMediaType)", "full_signature": "@Override public String toString(AcceptMediaType acceptMediaType)", "class_method_signature": "AcceptMediaTypeHeaderDelegate.toString(AcceptMediaType acceptMediaType)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/header/AcceptMediaTypeHeaderDelegate.java"}, "focal_method": {"identifier": "toString", "parameters": "(AcceptMediaType acceptMediaType)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString(AcceptMediaType acceptMediaType) {\n        if (acceptMediaType == null) {\n            throw new IllegalArgumentException();\n        }\n        final Map<String, String> parameters = acceptMediaType.getParameters();\n        if (parameters.isEmpty() || (parameters.size() == 1 && parameters.containsKey(QVALUE))) {\n            return acceptMediaType.getMediaType().toString();\n        }\n        final Map<String, String> copyParameters = new LinkedHashMap<>(parameters);\n        copyParameters.remove(QVALUE);\n        return new MediaType(acceptMediaType.getType(), acceptMediaType.getSubtype(), copyParameters).toString();\n    }", "signature": "String toString(AcceptMediaType acceptMediaType)", "full_signature": "@Override public String toString(AcceptMediaType acceptMediaType)", "class_method_signature": "AcceptMediaTypeHeaderDelegate.toString(AcceptMediaType acceptMediaType)", "testcase": false, "constructor": false, "invocations": ["getParameters", "isEmpty", "size", "containsKey", "toString", "getMediaType", "remove", "toString", "getType", "getSubtype"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}