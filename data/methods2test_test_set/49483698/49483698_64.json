{"test_class": {"identifier": "WordsTest", "superclass": "", "interfaces": "", "fields": [], "file": "jhelper/src/test/java/com/hwangjr/jhelper/WordsTest.java"}, "test_case": {"identifier": "testInitials_String", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInitials_String() {\n        assertEquals(null, initials(null));\n        assertEquals(\"\", initials(\"\"));\n        assertEquals(\"\", initials(\"  \"));\n\n        assertEquals(\"I\", initials(\"I\"));\n        assertEquals(\"i\", initials(\"i\"));\n        assertEquals(\"BJL\", initials(\"Ben John Lee\"));\n        assertEquals(\"BJ\", initials(\"Ben J.Lee\"));\n        assertEquals(\"BJ.L\", initials(\" Ben   John  . Lee\"));\n        assertEquals(\"iah1\", initials(\"i am here 123\"));\n    }", "signature": "void testInitials_String()", "full_signature": "@Test public void testInitials_String()", "class_method_signature": "WordsTest.testInitials_String()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "initials", "assertEquals", "initials", "assertEquals", "initials", "assertEquals", "initials", "assertEquals", "initials", "assertEquals", "initials", "assertEquals", "initials", "assertEquals", "initials", "assertEquals", "initials"]}, "focal_class": {"identifier": "Words", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Words", "parameters": "()", "modifiers": "private", "return": "", "signature": " Words()", "full_signature": "private  Words()", "class_method_signature": "Words.Words()", "testcase": false, "constructor": true}, {"identifier": "wrap", "parameters": "(String str, int wrapLength)", "modifiers": "public static", "return": "String", "signature": "String wrap(String str, int wrapLength)", "full_signature": "public static String wrap(String str, int wrapLength)", "class_method_signature": "Words.wrap(String str, int wrapLength)", "testcase": false, "constructor": false}, {"identifier": "wrap", "parameters": "(String str, int wrapLength, String newLineStr, boolean wrapLongWords)", "modifiers": "public static", "return": "String", "signature": "String wrap(String str, int wrapLength, String newLineStr, boolean wrapLongWords)", "full_signature": "public static String wrap(String str, int wrapLength, String newLineStr, boolean wrapLongWords)", "class_method_signature": "Words.wrap(String str, int wrapLength, String newLineStr, boolean wrapLongWords)", "testcase": false, "constructor": false}, {"identifier": "capitalize", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String capitalize(String str)", "full_signature": "public static String capitalize(String str)", "class_method_signature": "Words.capitalize(String str)", "testcase": false, "constructor": false}, {"identifier": "capitalize", "parameters": "(String str, char[] delimiters)", "modifiers": "public static", "return": "String", "signature": "String capitalize(String str, char[] delimiters)", "full_signature": "public static String capitalize(String str, char[] delimiters)", "class_method_signature": "Words.capitalize(String str, char[] delimiters)", "testcase": false, "constructor": false}, {"identifier": "capitalizeFully", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String capitalizeFully(String str)", "full_signature": "public static String capitalizeFully(String str)", "class_method_signature": "Words.capitalizeFully(String str)", "testcase": false, "constructor": false}, {"identifier": "capitalizeFully", "parameters": "(String str, char[] delimiters)", "modifiers": "public static", "return": "String", "signature": "String capitalizeFully(String str, char[] delimiters)", "full_signature": "public static String capitalizeFully(String str, char[] delimiters)", "class_method_signature": "Words.capitalizeFully(String str, char[] delimiters)", "testcase": false, "constructor": false}, {"identifier": "uncapitalize", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String uncapitalize(String str)", "full_signature": "public static String uncapitalize(String str)", "class_method_signature": "Words.uncapitalize(String str)", "testcase": false, "constructor": false}, {"identifier": "uncapitalize", "parameters": "(String str, char[] delimiters)", "modifiers": "public static", "return": "String", "signature": "String uncapitalize(String str, char[] delimiters)", "full_signature": "public static String uncapitalize(String str, char[] delimiters)", "class_method_signature": "Words.uncapitalize(String str, char[] delimiters)", "testcase": false, "constructor": false}, {"identifier": "initials", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String initials(String str)", "full_signature": "public static String initials(String str)", "class_method_signature": "Words.initials(String str)", "testcase": false, "constructor": false}, {"identifier": "initials", "parameters": "(String str, char[] delimiters)", "modifiers": "public static", "return": "String", "signature": "String initials(String str, char[] delimiters)", "full_signature": "public static String initials(String str, char[] delimiters)", "class_method_signature": "Words.initials(String str, char[] delimiters)", "testcase": false, "constructor": false}, {"identifier": "isDelimiter", "parameters": "(char ch, char[] delimiters)", "modifiers": "private static", "return": "boolean", "signature": "boolean isDelimiter(char ch, char[] delimiters)", "full_signature": "private static boolean isDelimiter(char ch, char[] delimiters)", "class_method_signature": "Words.isDelimiter(char ch, char[] delimiters)", "testcase": false, "constructor": false}], "file": "jhelper/src/main/java/com/hwangjr/jhelper/Words.java"}, "focal_method": {"identifier": "initials", "parameters": "(String str)", "modifiers": "public static", "return": "String", "body": "public static String initials(String str) {\n        return initials(str, null);\n    }", "signature": "String initials(String str)", "full_signature": "public static String initials(String str)", "class_method_signature": "Words.initials(String str)", "testcase": false, "constructor": false, "invocations": ["initials"]}, "repository": {"repo_id": 49483698, "url": "https://github.com/AndroidKnife/RecordHelper", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 10, "size": 185, "license": "licensed"}}