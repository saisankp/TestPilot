{"test_class": {"identifier": "NetworkAddressEntityDataMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private NetworkAddressEntityDataMapper networkAddressEntityDataMapper;", "modifier": "private", "type": "NetworkAddressEntityDataMapper", "declarator": "networkAddressEntityDataMapper", "var_name": "networkAddressEntityDataMapper"}], "file": "infrastructure/src/test/java/com/remotecraft/app/infrastructure/entity/mapper/NetworkAddressEntityDataMapperTest.java"}, "test_case": {"identifier": "shouldProperlyMapNetworkAddressIntoNetworkAddressEntity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldProperlyMapNetworkAddressIntoNetworkAddressEntity() throws Exception {\n    NetworkAddress networkAddress = NetworkAddress.builder()\n        .ip(\"192.168.24.33\")\n        .port(9991)\n        .build();\n\n    NetworkAddressEntity networkAddressEntity =\n        networkAddressEntityDataMapper.transformInverse(networkAddress);\n\n    assertThat(networkAddressEntity, notNullValue());\n    assertThat(networkAddressEntity, instanceOf(NetworkAddressEntity.class));\n    assertThat(networkAddressEntity.ip(), is(\"192.168.24.33\"));\n    assertThat(networkAddressEntity.port(), is(9991));\n  }", "signature": "void shouldProperlyMapNetworkAddressIntoNetworkAddressEntity()", "full_signature": "@Test public void shouldProperlyMapNetworkAddressIntoNetworkAddressEntity()", "class_method_signature": "NetworkAddressEntityDataMapperTest.shouldProperlyMapNetworkAddressIntoNetworkAddressEntity()", "testcase": true, "constructor": false, "invocations": ["build", "port", "ip", "builder", "transformInverse", "assertThat", "notNullValue", "assertThat", "instanceOf", "assertThat", "ip", "is", "assertThat", "port", "is"]}, "focal_class": {"identifier": "NetworkAddressEntityDataMapper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "NetworkAddressEntityDataMapper", "parameters": "()", "modifiers": "@Inject public", "return": "", "signature": " NetworkAddressEntityDataMapper()", "full_signature": "@Inject public  NetworkAddressEntityDataMapper()", "class_method_signature": "NetworkAddressEntityDataMapper.NetworkAddressEntityDataMapper()", "testcase": false, "constructor": true}, {"identifier": "transform", "parameters": "(NetworkAddressEntity networkAddressEntity)", "modifiers": "public", "return": "NetworkAddress", "signature": "NetworkAddress transform(NetworkAddressEntity networkAddressEntity)", "full_signature": "public NetworkAddress transform(NetworkAddressEntity networkAddressEntity)", "class_method_signature": "NetworkAddressEntityDataMapper.transform(NetworkAddressEntity networkAddressEntity)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(\n      Collection<NetworkAddressEntity> networkAddressEntities)", "modifiers": "public", "return": "Collection<NetworkAddress>", "signature": "Collection<NetworkAddress> transform(\n      Collection<NetworkAddressEntity> networkAddressEntities)", "full_signature": "public Collection<NetworkAddress> transform(\n      Collection<NetworkAddressEntity> networkAddressEntities)", "class_method_signature": "NetworkAddressEntityDataMapper.transform(\n      Collection<NetworkAddressEntity> networkAddressEntities)", "testcase": false, "constructor": false}, {"identifier": "transformInverse", "parameters": "(NetworkAddress networkAddress)", "modifiers": "public", "return": "NetworkAddressEntity", "signature": "NetworkAddressEntity transformInverse(NetworkAddress networkAddress)", "full_signature": "public NetworkAddressEntity transformInverse(NetworkAddress networkAddress)", "class_method_signature": "NetworkAddressEntityDataMapper.transformInverse(NetworkAddress networkAddress)", "testcase": false, "constructor": false}, {"identifier": "transformInverse", "parameters": "(\n      Collection<NetworkAddress> networkAddresses)", "modifiers": "public", "return": "Collection<NetworkAddressEntity>", "signature": "Collection<NetworkAddressEntity> transformInverse(\n      Collection<NetworkAddress> networkAddresses)", "full_signature": "public Collection<NetworkAddressEntity> transformInverse(\n      Collection<NetworkAddress> networkAddresses)", "class_method_signature": "NetworkAddressEntityDataMapper.transformInverse(\n      Collection<NetworkAddress> networkAddresses)", "testcase": false, "constructor": false}], "file": "infrastructure/src/main/java/com/remotecraft/app/infrastructure/entity/mapper/NetworkAddressEntityDataMapper.java"}, "focal_method": {"identifier": "transformInverse", "parameters": "(NetworkAddress networkAddress)", "modifiers": "public", "return": "NetworkAddressEntity", "body": "public NetworkAddressEntity transformInverse(NetworkAddress networkAddress) {\n    if (networkAddress == null) {\n      return null;\n    }\n\n    return NetworkAddressEntity.builder()\n        .ip(networkAddress.ip())\n        .port(networkAddress.port())\n        .build();\n  }", "signature": "NetworkAddressEntity transformInverse(NetworkAddress networkAddress)", "full_signature": "public NetworkAddressEntity transformInverse(NetworkAddress networkAddress)", "class_method_signature": "NetworkAddressEntityDataMapper.transformInverse(NetworkAddress networkAddress)", "testcase": false, "constructor": false, "invocations": ["build", "port", "ip", "builder", "ip", "port"]}, "repository": {"repo_id": 66076162, "url": "https://github.com/RemotecraftProject/RemotecraftApp", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 2502, "license": "licensed"}}