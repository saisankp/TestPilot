{"test_class": {"identifier": "GenericErrorsOutputHandlerTest", "superclass": "", "interfaces": "", "fields": [], "file": "butterfly-utilities/src/test/java/com/paypal/butterfly/utilities/maven/GenericErrorsOutputHandlerTest.java"}, "test_case": {"identifier": "throwsIfNoResultsBecauseExecutionHasntStarted", "parameters": "()", "modifiers": "@Test(expectedExceptions = IllegalStateException.class) public", "return": "void", "body": "@Test(expectedExceptions = IllegalStateException.class)\n    public void throwsIfNoResultsBecauseExecutionHasntStarted(){\n        GenericErrorsOutputHandler handler = new GenericErrorsOutputHandler();\n        handler.getResult();\n    }", "signature": "void throwsIfNoResultsBecauseExecutionHasntStarted()", "full_signature": "@Test(expectedExceptions = IllegalStateException.class) public void throwsIfNoResultsBecauseExecutionHasntStarted()", "class_method_signature": "GenericErrorsOutputHandlerTest.throwsIfNoResultsBecauseExecutionHasntStarted()", "testcase": true, "constructor": false, "invocations": ["getResult"]}, "focal_class": {"identifier": "GenericErrorsOutputHandler", "superclass": "", "interfaces": "implements MavenInvocationOutputHandler<GenericErrorsOutputHandler, String>", "fields": [{"original_string": "private static final Pattern GOAL_ERROR_LINE_MATCH_REGEX = Pattern.compile(\"\\\\[ERROR\\\\][\\\\s]*Failed to execute goal.*\");", "modifier": "private static final", "type": "Pattern", "declarator": "GOAL_ERROR_LINE_MATCH_REGEX = Pattern.compile(\"\\\\[ERROR\\\\][\\\\s]*Failed to execute goal.*\")", "var_name": "GOAL_ERROR_LINE_MATCH_REGEX"}, {"original_string": "private static final Pattern PROJECT_ERROR_LINE_MATCH_REGEX = Pattern.compile(\"\\\\[ERROR\\\\][\\\\s]*The project.*has [\\\\d]+ error.*\");", "modifier": "private static final", "type": "Pattern", "declarator": "PROJECT_ERROR_LINE_MATCH_REGEX = Pattern.compile(\"\\\\[ERROR\\\\][\\\\s]*The project.*has [\\\\d]+ error.*\")", "var_name": "PROJECT_ERROR_LINE_MATCH_REGEX"}, {"original_string": "private static final Pattern GENERIC_ERROR_LINE_MATCH_REGEX = Pattern.compile(\"^Error:.*\");", "modifier": "private static final", "type": "Pattern", "declarator": "GENERIC_ERROR_LINE_MATCH_REGEX = Pattern.compile(\"^Error:.*\")", "var_name": "GENERIC_ERROR_LINE_MATCH_REGEX"}, {"original_string": "private static final String ERROR_PHRASE = \"[ERROR] \";", "modifier": "private static final", "type": "String", "declarator": "ERROR_PHRASE = \"[ERROR] \"", "var_name": "ERROR_PHRASE"}, {"original_string": "private static final String MSG_FORMAT = \"%s %s\";", "modifier": "private static final", "type": "String", "declarator": "MSG_FORMAT = \"%s %s\"", "var_name": "MSG_FORMAT"}, {"original_string": "private boolean executionStarted = false;", "modifier": "private", "type": "boolean", "declarator": "executionStarted = false", "var_name": "executionStarted"}, {"original_string": "private String message = \"\";", "modifier": "private", "type": "String", "declarator": "message = \"\"", "var_name": "message"}, {"original_string": "private boolean isProjectError = false;", "modifier": "private", "type": "boolean", "declarator": "isProjectError = false", "var_name": "isProjectError"}], "methods": [{"identifier": "createMessage", "parameters": "(String summary, String details)", "modifiers": "private static", "return": "String", "signature": "String createMessage(String summary, String details)", "full_signature": "private static String createMessage(String summary, String details)", "class_method_signature": "GenericErrorsOutputHandler.createMessage(String summary, String details)", "testcase": false, "constructor": false}, {"identifier": "removeLogLevel", "parameters": "(String line)", "modifiers": "private static", "return": "String", "signature": "String removeLogLevel(String line)", "full_signature": "private static String removeLogLevel(String line)", "class_method_signature": "GenericErrorsOutputHandler.removeLogLevel(String line)", "testcase": false, "constructor": false}, {"identifier": "consumeLine", "parameters": "(String line)", "modifiers": "@Override public", "return": "void", "signature": "void consumeLine(String line)", "full_signature": "@Override public void consumeLine(String line)", "class_method_signature": "GenericErrorsOutputHandler.consumeLine(String line)", "testcase": false, "constructor": false}, {"identifier": "getResult", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getResult()", "full_signature": "@Override public String getResult()", "class_method_signature": "GenericErrorsOutputHandler.getResult()", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "@Override public", "return": "GenericErrorsOutputHandler", "signature": "GenericErrorsOutputHandler copy()", "full_signature": "@Override public GenericErrorsOutputHandler copy()", "class_method_signature": "GenericErrorsOutputHandler.copy()", "testcase": false, "constructor": false}], "file": "butterfly-utilities/src/main/java/com/paypal/butterfly/utilities/maven/GenericErrorsOutputHandler.java"}, "focal_method": {"identifier": "getResult", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getResult() {\n        if (!executionStarted) {\n            throw new IllegalStateException(\"Execution has not started. No results to return.\");\n        } else {\n            return message;\n        }\n    }", "signature": "String getResult()", "full_signature": "@Override public String getResult()", "class_method_signature": "GenericErrorsOutputHandler.getResult()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 104398040, "url": "https://github.com/paypal/butterfly", "language": "Java", "is_fork": false, "fork_count": 42, "stargazer_count": 26, "size": 6906, "license": "licensed"}}