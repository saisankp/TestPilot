{"test_class": {"identifier": "StyleAttributeExtractorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "FilterFactory ff = CommonFactoryFinder.getFilterFactory(null);", "modifier": "", "type": "FilterFactory", "declarator": "ff = CommonFactoryFinder.getFilterFactory(null)", "var_name": "ff"}, {"original_string": "StyleBuilder sb = new StyleBuilder(ff);", "modifier": "", "type": "StyleBuilder", "declarator": "sb = new StyleBuilder(ff)", "var_name": "sb"}], "file": "modules/library/render/src/test/java/org/geotools/styling/StyleAttributeExtractorTest.java"}, "test_case": {"identifier": "testPlainFilter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPlainFilter() {\n        Filter f = ff.greater(ff.property(\"attribute\"), ff.literal(10));\n        Rule r = sb.createRule(sb.createPointSymbolizer());\n        r.setFilter(f);\n        \n        StyleAttributeExtractor extractor = new StyleAttributeExtractor();\n        r.accept(extractor);\n        \n        Set<String> atts = extractor.getAttributeNameSet();\n        assertTrue(atts.contains(\"attribute\"));\n        assertEquals(1, atts.size());\n        assertTrue(extractor.getDefaultGeometryUsed());\n    }", "signature": "void testPlainFilter()", "full_signature": "@Test public void testPlainFilter()", "class_method_signature": "StyleAttributeExtractorTest.testPlainFilter()", "testcase": true, "constructor": false, "invocations": ["greater", "property", "literal", "createRule", "createPointSymbolizer", "setFilter", "accept", "getAttributeNameSet", "assertTrue", "contains", "assertEquals", "size", "assertTrue", "getDefaultGeometryUsed"]}, "focal_class": {"identifier": "StyleAttributeExtractor", "superclass": "extends FilterAttributeExtractor", "interfaces": "implements StyleVisitor", "fields": [{"original_string": "boolean defaultGeometryUsed = false;", "modifier": "", "type": "boolean", "declarator": "defaultGeometryUsed = false", "var_name": "defaultGeometryUsed"}], "methods": [{"identifier": "getAttributes", "parameters": "()", "modifiers": "public", "return": "Set<PropertyName>", "signature": "Set<PropertyName> getAttributes()", "full_signature": "public Set<PropertyName> getAttributes()", "class_method_signature": "StyleAttributeExtractor.getAttributes()", "testcase": false, "constructor": false}, {"identifier": "getDefaultGeometryUsed", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getDefaultGeometryUsed()", "full_signature": "public boolean getDefaultGeometryUsed()", "class_method_signature": "StyleAttributeExtractor.getDefaultGeometryUsed()", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(org.geotools.styling.Style style)", "modifiers": "public", "return": "void", "signature": "void visit(org.geotools.styling.Style style)", "full_signature": "public void visit(org.geotools.styling.Style style)", "class_method_signature": "StyleAttributeExtractor.visit(org.geotools.styling.Style style)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(Rule rule)", "modifiers": "public", "return": "void", "signature": "void visit(Rule rule)", "full_signature": "public void visit(Rule rule)", "class_method_signature": "StyleAttributeExtractor.visit(Rule rule)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(FeatureTypeStyle fts)", "modifiers": "public", "return": "void", "signature": "void visit(FeatureTypeStyle fts)", "full_signature": "public void visit(FeatureTypeStyle fts)", "class_method_signature": "StyleAttributeExtractor.visit(FeatureTypeStyle fts)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(Fill fill)", "modifiers": "public", "return": "void", "signature": "void visit(Fill fill)", "full_signature": "public void visit(Fill fill)", "class_method_signature": "StyleAttributeExtractor.visit(Fill fill)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(Stroke stroke)", "modifiers": "public", "return": "void", "signature": "void visit(Stroke stroke)", "full_signature": "public void visit(Stroke stroke)", "class_method_signature": "StyleAttributeExtractor.visit(Stroke stroke)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(Symbolizer sym)", "modifiers": "public", "return": "void", "signature": "void visit(Symbolizer sym)", "full_signature": "public void visit(Symbolizer sym)", "class_method_signature": "StyleAttributeExtractor.visit(Symbolizer sym)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(RasterSymbolizer rs)", "modifiers": "public", "return": "void", "signature": "void visit(RasterSymbolizer rs)", "full_signature": "public void visit(RasterSymbolizer rs)", "class_method_signature": "StyleAttributeExtractor.visit(RasterSymbolizer rs)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(PointSymbolizer ps)", "modifiers": "public", "return": "void", "signature": "void visit(PointSymbolizer ps)", "full_signature": "public void visit(PointSymbolizer ps)", "class_method_signature": "StyleAttributeExtractor.visit(PointSymbolizer ps)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(LineSymbolizer line)", "modifiers": "public", "return": "void", "signature": "void visit(LineSymbolizer line)", "full_signature": "public void visit(LineSymbolizer line)", "class_method_signature": "StyleAttributeExtractor.visit(LineSymbolizer line)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(PolygonSymbolizer poly)", "modifiers": "public", "return": "void", "signature": "void visit(PolygonSymbolizer poly)", "full_signature": "public void visit(PolygonSymbolizer poly)", "class_method_signature": "StyleAttributeExtractor.visit(PolygonSymbolizer poly)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(TextSymbolizer text)", "modifiers": "public", "return": "void", "signature": "void visit(TextSymbolizer text)", "full_signature": "public void visit(TextSymbolizer text)", "class_method_signature": "StyleAttributeExtractor.visit(TextSymbolizer text)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(Graphic gr)", "modifiers": "public", "return": "void", "signature": "void visit(Graphic gr)", "full_signature": "public void visit(Graphic gr)", "class_method_signature": "StyleAttributeExtractor.visit(Graphic gr)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(Mark mark)", "modifiers": "public", "return": "void", "signature": "void visit(Mark mark)", "full_signature": "public void visit(Mark mark)", "class_method_signature": "StyleAttributeExtractor.visit(Mark mark)", "testcase": false, "constructor": false}, {"identifier": "visitCqlExpression", "parameters": "(String expression)", "modifiers": "private", "return": "void", "signature": "void visitCqlExpression(String expression)", "full_signature": "private void visitCqlExpression(String expression)", "class_method_signature": "StyleAttributeExtractor.visitCqlExpression(String expression)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(ExternalGraphic exgr)", "modifiers": "public", "return": "void", "signature": "void visit(ExternalGraphic exgr)", "full_signature": "public void visit(ExternalGraphic exgr)", "class_method_signature": "StyleAttributeExtractor.visit(ExternalGraphic exgr)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(PointPlacement pp)", "modifiers": "public", "return": "void", "signature": "void visit(PointPlacement pp)", "full_signature": "public void visit(PointPlacement pp)", "class_method_signature": "StyleAttributeExtractor.visit(PointPlacement pp)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(AnchorPoint ap)", "modifiers": "public", "return": "void", "signature": "void visit(AnchorPoint ap)", "full_signature": "public void visit(AnchorPoint ap)", "class_method_signature": "StyleAttributeExtractor.visit(AnchorPoint ap)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(Displacement dis)", "modifiers": "public", "return": "void", "signature": "void visit(Displacement dis)", "full_signature": "public void visit(Displacement dis)", "class_method_signature": "StyleAttributeExtractor.visit(Displacement dis)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(LinePlacement lp)", "modifiers": "public", "return": "void", "signature": "void visit(LinePlacement lp)", "full_signature": "public void visit(LinePlacement lp)", "class_method_signature": "StyleAttributeExtractor.visit(LinePlacement lp)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(Halo halo)", "modifiers": "public", "return": "void", "signature": "void visit(Halo halo)", "full_signature": "public void visit(Halo halo)", "class_method_signature": "StyleAttributeExtractor.visit(Halo halo)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(StyledLayerDescriptor sld)", "modifiers": "public", "return": "void", "signature": "void visit(StyledLayerDescriptor sld)", "full_signature": "public void visit(StyledLayerDescriptor sld)", "class_method_signature": "StyleAttributeExtractor.visit(StyledLayerDescriptor sld)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(NamedLayer layer)", "modifiers": "public", "return": "void", "signature": "void visit(NamedLayer layer)", "full_signature": "public void visit(NamedLayer layer)", "class_method_signature": "StyleAttributeExtractor.visit(NamedLayer layer)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(UserLayer layer)", "modifiers": "public", "return": "void", "signature": "void visit(UserLayer layer)", "full_signature": "public void visit(UserLayer layer)", "class_method_signature": "StyleAttributeExtractor.visit(UserLayer layer)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(FeatureTypeConstraint ftc)", "modifiers": "public", "return": "void", "signature": "void visit(FeatureTypeConstraint ftc)", "full_signature": "public void visit(FeatureTypeConstraint ftc)", "class_method_signature": "StyleAttributeExtractor.visit(FeatureTypeConstraint ftc)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(ColorMap map)", "modifiers": "public", "return": "void", "signature": "void visit(ColorMap map)", "full_signature": "public void visit(ColorMap map)", "class_method_signature": "StyleAttributeExtractor.visit(ColorMap map)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(ColorMapEntry entry)", "modifiers": "public", "return": "void", "signature": "void visit(ColorMapEntry entry)", "full_signature": "public void visit(ColorMapEntry entry)", "class_method_signature": "StyleAttributeExtractor.visit(ColorMapEntry entry)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(ContrastEnhancement contrastEnhancement)", "modifiers": "public", "return": "void", "signature": "void visit(ContrastEnhancement contrastEnhancement)", "full_signature": "public void visit(ContrastEnhancement contrastEnhancement)", "class_method_signature": "StyleAttributeExtractor.visit(ContrastEnhancement contrastEnhancement)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(ImageOutline outline)", "modifiers": "public", "return": "void", "signature": "void visit(ImageOutline outline)", "full_signature": "public void visit(ImageOutline outline)", "class_method_signature": "StyleAttributeExtractor.visit(ImageOutline outline)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(ChannelSelection cs)", "modifiers": "public", "return": "void", "signature": "void visit(ChannelSelection cs)", "full_signature": "public void visit(ChannelSelection cs)", "class_method_signature": "StyleAttributeExtractor.visit(ChannelSelection cs)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(OverlapBehavior ob)", "modifiers": "public", "return": "void", "signature": "void visit(OverlapBehavior ob)", "full_signature": "public void visit(OverlapBehavior ob)", "class_method_signature": "StyleAttributeExtractor.visit(OverlapBehavior ob)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(SelectedChannelType sct)", "modifiers": "public", "return": "void", "signature": "void visit(SelectedChannelType sct)", "full_signature": "public void visit(SelectedChannelType sct)", "class_method_signature": "StyleAttributeExtractor.visit(SelectedChannelType sct)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(ShadedRelief sr)", "modifiers": "public", "return": "void", "signature": "void visit(ShadedRelief sr)", "full_signature": "public void visit(ShadedRelief sr)", "class_method_signature": "StyleAttributeExtractor.visit(ShadedRelief sr)", "testcase": false, "constructor": false}], "file": "modules/library/render/src/main/java/org/geotools/styling/StyleAttributeExtractor.java"}, "focal_method": {"identifier": "getDefaultGeometryUsed", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean getDefaultGeometryUsed()\n    {\n        return defaultGeometryUsed;\n    }", "signature": "boolean getDefaultGeometryUsed()", "full_signature": "public boolean getDefaultGeometryUsed()", "class_method_signature": "StyleAttributeExtractor.getDefaultGeometryUsed()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}