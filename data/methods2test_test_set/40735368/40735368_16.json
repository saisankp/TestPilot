{"test_class": {"identifier": "ShpXmlFileReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "ShpXmlFileReader reader;", "modifier": "", "type": "ShpXmlFileReader", "declarator": "reader", "var_name": "reader"}], "file": "modules/plugin/shapefile/src/test/java/org/geotools/data/shapefile/shp/xml/ShpXmlFileReaderTest.java"}, "test_case": {"identifier": "testBBox", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBBox() {\n        Metadata meta = reader.parse();\n        assertNotNull(\"meta\", meta);\n        IdInfo idInfo = meta.getIdinfo();\n        assertNotNull(\"idInfo\", idInfo);\n        Envelope bounding = idInfo.getBounding();\n        assertNotNull(bounding);\n        assertEquals(-180.0, bounding.getMinX(), 0.00001);\n        assertEquals(180.0, bounding.getMaxX(), 0.00001);\n        assertEquals(-90.0, bounding.getMinY(), 0.00001);\n        assertEquals(90.0, bounding.getMaxY(), 0.00001);\n    }", "signature": "void testBBox()", "full_signature": "@Test public void testBBox()", "class_method_signature": "ShpXmlFileReaderTest.testBBox()", "testcase": true, "constructor": false, "invocations": ["parse", "assertNotNull", "getIdinfo", "assertNotNull", "getBounding", "assertNotNull", "assertEquals", "getMinX", "assertEquals", "getMaxX", "assertEquals", "getMinY", "assertEquals", "getMaxY"]}, "focal_class": {"identifier": "ShpXmlFileReader", "superclass": "", "interfaces": "implements FileReader", "fields": [{"original_string": "Document dom;", "modifier": "", "type": "Document", "declarator": "dom", "var_name": "dom"}], "methods": [{"identifier": "ShpXmlFileReader", "parameters": "(ShpFiles shapefileFiles)", "modifiers": "public", "return": "", "signature": " ShpXmlFileReader(ShpFiles shapefileFiles)", "full_signature": "public  ShpXmlFileReader(ShpFiles shapefileFiles)", "class_method_signature": "ShpXmlFileReader.ShpXmlFileReader(ShpFiles shapefileFiles)", "testcase": false, "constructor": true}, {"identifier": "parse", "parameters": "()", "modifiers": "public", "return": "Metadata", "signature": "Metadata parse()", "full_signature": "public Metadata parse()", "class_method_signature": "ShpXmlFileReader.parse()", "testcase": false, "constructor": false}, {"identifier": "parseMetadata", "parameters": "(Element root)", "modifiers": "protected", "return": "Metadata", "signature": "Metadata parseMetadata(Element root)", "full_signature": "protected Metadata parseMetadata(Element root)", "class_method_signature": "ShpXmlFileReader.parseMetadata(Element root)", "testcase": false, "constructor": false}, {"identifier": "parseIdInfo", "parameters": "(Element element)", "modifiers": "protected", "return": "IdInfo", "signature": "IdInfo parseIdInfo(Element element)", "full_signature": "protected IdInfo parseIdInfo(Element element)", "class_method_signature": "ShpXmlFileReader.parseIdInfo(Element element)", "testcase": false, "constructor": false}, {"identifier": "parseBounding", "parameters": "(Element bounding)", "modifiers": "protected", "return": "Envelope", "signature": "Envelope parseBounding(Element bounding)", "full_signature": "protected Envelope parseBounding(Element bounding)", "class_method_signature": "ShpXmlFileReader.parseBounding(Element bounding)", "testcase": false, "constructor": false}, {"identifier": "id", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String id()", "full_signature": "public String id()", "class_method_signature": "ShpXmlFileReader.id()", "testcase": false, "constructor": false}], "file": "modules/plugin/shapefile/src/main/java/org/geotools/data/shapefile/shp/xml/ShpXmlFileReader.java"}, "focal_method": {"identifier": "parse", "parameters": "()", "modifiers": "public", "return": "Metadata", "body": "public Metadata parse() {\n        return parseMetadata(dom.getRootElement());\n    }", "signature": "Metadata parse()", "full_signature": "public Metadata parse()", "class_method_signature": "ShpXmlFileReader.parse()", "testcase": false, "constructor": false, "invocations": ["parseMetadata", "getRootElement"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}