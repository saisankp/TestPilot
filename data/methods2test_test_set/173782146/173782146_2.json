{"test_class": {"identifier": "TestGameModel", "superclass": "", "interfaces": "", "fields": [], "file": "chapter-code/chapter5/TestGameModel.java"}, "test_case": {"identifier": "testTryToAutoPlay", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testTryToAutoPlay()\n\t{\n\t\ttry\n\t\t{\n\t\t\tField strategyField = GameModel.class.getDeclaredField(\"aPlayingStrategy\");\n\t\t\tstrategyField.setAccessible(true);\n\t\t\tStubStrategy strategy = new StubStrategy();\n\t\t\tGameModel model = GameModel.instance();\n\t\t\tstrategyField.set(model, strategy);\n\t\t\tmodel.tryToAutoPlay();\n\t\t\tassertTrue(strategy.hasExecuted());\n\t\t}\n\t\tcatch( ReflectiveOperationException e )\n\t\t{\n\t\t\tfail();\n\t\t}\n\t}", "signature": "void testTryToAutoPlay()", "full_signature": "@Test public void testTryToAutoPlay()", "class_method_signature": "TestGameModel.testTryToAutoPlay()", "testcase": true, "constructor": false, "invocations": ["getDeclaredField", "setAccessible", "instance", "set", "tryToAutoPlay", "assertTrue", "hasExecuted", "fail"]}, "focal_class": {"identifier": "GameModel", "superclass": "", "interfaces": "implements GameModelView", "fields": [{"original_string": "private static GameModel INSTANCE = new GameModel();", "modifier": "private static", "type": "GameModel", "declarator": "INSTANCE = new GameModel()", "var_name": "INSTANCE"}, {"original_string": "private PlayingStrategy aPlayingStrategy;", "modifier": "private", "type": "PlayingStrategy", "declarator": "aPlayingStrategy", "var_name": "aPlayingStrategy"}], "methods": [{"identifier": "instance", "parameters": "()", "modifiers": "public static", "return": "GameModel", "signature": "GameModel instance()", "full_signature": "public static GameModel instance()", "class_method_signature": "GameModel.instance()", "testcase": false, "constructor": false}, {"identifier": "tryToAutoPlay", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void tryToAutoPlay()", "full_signature": "public void tryToAutoPlay()", "class_method_signature": "GameModel.tryToAutoPlay()", "testcase": false, "constructor": false}], "file": "chapter-code/chapter5/GameModel.java"}, "focal_method": {"identifier": "tryToAutoPlay", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void tryToAutoPlay()\n\t{\n\t\taPlayingStrategy.computeNextMove(this);\n\t}", "signature": "void tryToAutoPlay()", "full_signature": "public void tryToAutoPlay()", "class_method_signature": "GameModel.tryToAutoPlay()", "testcase": false, "constructor": false, "invocations": ["computeNextMove"]}, "repository": {"repo_id": 173782146, "url": "https://github.com/prmr/DesignBook", "language": "Java", "is_fork": false, "fork_count": 48, "stargazer_count": 45, "size": 634, "license": "licensed"}}