{"test_class": {"identifier": "ProvisionrSupportTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/axemblr/provisionr/core/ProvisionrSupportTest.java"}, "test_case": {"identifier": "testConvertTimeout", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvertTimeout() {\n        ProvisionrSupport provisionr = new ProvisionrSupportTestable();\n        assertThat(provisionr.convertTimeoutToISO8601TimeDuration(600)).isEqualTo(\"PT10M\");\n        assertThat(provisionr.convertTimeoutToISO8601TimeDuration(601)).isEqualTo(\"PT601S\");\n        assertThat(provisionr.convertTimeoutToISO8601TimeDuration(300)).isEqualTo(\"PT5M\");\n        assertThat(provisionr.convertTimeoutToISO8601TimeDuration(42)).isEqualTo(\"PT42S\");\n    }", "signature": "void testConvertTimeout()", "full_signature": "@Test public void testConvertTimeout()", "class_method_signature": "ProvisionrSupportTest.testConvertTimeout()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "convertTimeoutToISO8601TimeDuration", "isEqualTo", "assertThat", "convertTimeoutToISO8601TimeDuration", "isEqualTo", "assertThat", "convertTimeoutToISO8601TimeDuration", "isEqualTo", "assertThat", "convertTimeoutToISO8601TimeDuration"]}, "focal_class": {"identifier": "ProvisionrSupport", "superclass": "", "interfaces": "implements Provisionr", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ProvisionrSupport.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ProvisionrSupport.class)", "var_name": "LOG"}], "methods": [{"identifier": "getDefaultProvider", "parameters": "()", "modifiers": "@Override public", "return": "Optional<Provider>", "signature": "Optional<Provider> getDefaultProvider()", "full_signature": "@Override public Optional<Provider> getDefaultProvider()", "class_method_signature": "ProvisionrSupport.getDefaultProvider()", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "(String businessKey)", "modifiers": "@Override public", "return": "String", "signature": "String getStatus(String businessKey)", "full_signature": "@Override public String getStatus(String businessKey)", "class_method_signature": "ProvisionrSupport.getStatus(String businessKey)", "testcase": false, "constructor": false}, {"identifier": "getMachines", "parameters": "(String businessKey)", "modifiers": "@Override public", "return": "List<Machine>", "signature": "List<Machine> getMachines(String businessKey)", "full_signature": "@Override public List<Machine> getMachines(String businessKey)", "class_method_signature": "ProvisionrSupport.getMachines(String businessKey)", "testcase": false, "constructor": false}, {"identifier": "triggerSignalEvent", "parameters": "(ProcessEngine processEngine, String businessKey, String signalName)", "modifiers": "protected", "return": "void", "signature": "void triggerSignalEvent(ProcessEngine processEngine, String businessKey, String signalName)", "full_signature": "protected void triggerSignalEvent(ProcessEngine processEngine, String businessKey, String signalName)", "class_method_signature": "ProvisionrSupport.triggerSignalEvent(ProcessEngine processEngine, String businessKey, String signalName)", "testcase": false, "constructor": false}, {"identifier": "convertTimeoutToISO8601TimeDuration", "parameters": "(int bootstrapTimeoutInSeconds)", "modifiers": "protected", "return": "String", "signature": "String convertTimeoutToISO8601TimeDuration(int bootstrapTimeoutInSeconds)", "full_signature": "protected String convertTimeoutToISO8601TimeDuration(int bootstrapTimeoutInSeconds)", "class_method_signature": "ProvisionrSupport.convertTimeoutToISO8601TimeDuration(int bootstrapTimeoutInSeconds)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/axemblr/provisionr/core/ProvisionrSupport.java"}, "focal_method": {"identifier": "convertTimeoutToISO8601TimeDuration", "parameters": "(int bootstrapTimeoutInSeconds)", "modifiers": "protected", "return": "String", "body": "protected String convertTimeoutToISO8601TimeDuration(int bootstrapTimeoutInSeconds) {\n        StringBuilder result = new StringBuilder(\"PT\");\n        if (bootstrapTimeoutInSeconds % 60 == 0) {\n            result.append(bootstrapTimeoutInSeconds / 60).append(\"M\");\n        } else {\n            result.append(bootstrapTimeoutInSeconds).append(\"S\");\n        }\n        return result.toString();\n    }", "signature": "String convertTimeoutToISO8601TimeDuration(int bootstrapTimeoutInSeconds)", "full_signature": "protected String convertTimeoutToISO8601TimeDuration(int bootstrapTimeoutInSeconds)", "class_method_signature": "ProvisionrSupport.convertTimeoutToISO8601TimeDuration(int bootstrapTimeoutInSeconds)", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "append", "toString"]}, "repository": {"repo_id": 6035195, "url": "https://github.com/axemblr/axemblr-provisionr", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 30, "size": 3329, "license": "licensed"}}