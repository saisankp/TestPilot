{"test_class": {"identifier": "HystrixRollingNumberTest", "superclass": "", "interfaces": "", "fields": [], "file": "hystrix-core/src/test/java/com/netflix/hystrix/util/HystrixRollingNumberTest.java"}, "test_case": {"identifier": "testEmptyBucketsFillIn", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEmptyBucketsFillIn() {\n        MockedTime time = new MockedTime();\n        try {\n            HystrixRollingNumber counter = new HystrixRollingNumber(time, 200, 10);\n\n            // add 1\n            counter.increment(HystrixRollingNumberEvent.SUCCESS);\n\n            // we should have 1 bucket\n            assertEquals(1, counter.buckets.size());\n\n            // wait past 3 bucket time periods (the 1st bucket then 2 empty ones)\n            time.increment(counter.bucketSizeInMillseconds * 3);\n\n            // add another\n            counter.increment(HystrixRollingNumberEvent.SUCCESS);\n\n            // we should have 4 (1 + 2 empty + 1 new one) buckets\n            assertEquals(4, counter.buckets.size());\n\n        } catch (Exception e) {\n            e.printStackTrace();\n            fail(\"Exception: \" + e.getMessage());\n        }\n    }", "signature": "void testEmptyBucketsFillIn()", "full_signature": "@Test public void testEmptyBucketsFillIn()", "class_method_signature": "HystrixRollingNumberTest.testEmptyBucketsFillIn()", "testcase": true, "constructor": false, "invocations": ["increment", "assertEquals", "size", "increment", "increment", "assertEquals", "size", "printStackTrace", "fail", "getMessage"]}, "focal_class": {"identifier": "HystrixRollingNumber", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Time ACTUAL_TIME = new ActualTime();", "modifier": "private static final", "type": "Time", "declarator": "ACTUAL_TIME = new ActualTime()", "var_name": "ACTUAL_TIME"}, {"original_string": "private final Time time;", "modifier": "private final", "type": "Time", "declarator": "time", "var_name": "time"}, {"original_string": "final int timeInMilliseconds;", "modifier": "final", "type": "int", "declarator": "timeInMilliseconds", "var_name": "timeInMilliseconds"}, {"original_string": "final int numberOfBuckets;", "modifier": "final", "type": "int", "declarator": "numberOfBuckets", "var_name": "numberOfBuckets"}, {"original_string": "final int bucketSizeInMillseconds;", "modifier": "final", "type": "int", "declarator": "bucketSizeInMillseconds", "var_name": "bucketSizeInMillseconds"}, {"original_string": "final BucketCircularArray buckets;", "modifier": "final", "type": "BucketCircularArray", "declarator": "buckets", "var_name": "buckets"}, {"original_string": "private final CumulativeSum cumulativeSum = new CumulativeSum();", "modifier": "private final", "type": "CumulativeSum", "declarator": "cumulativeSum = new CumulativeSum()", "var_name": "cumulativeSum"}, {"original_string": "private ReentrantLock newBucketLock = new ReentrantLock();", "modifier": "private", "type": "ReentrantLock", "declarator": "newBucketLock = new ReentrantLock()", "var_name": "newBucketLock"}], "methods": [{"identifier": "HystrixRollingNumber", "parameters": "(HystrixProperty<Integer> timeInMilliseconds, HystrixProperty<Integer> numberOfBuckets)", "modifiers": "@Deprecated public", "return": "", "signature": " HystrixRollingNumber(HystrixProperty<Integer> timeInMilliseconds, HystrixProperty<Integer> numberOfBuckets)", "full_signature": "@Deprecated public  HystrixRollingNumber(HystrixProperty<Integer> timeInMilliseconds, HystrixProperty<Integer> numberOfBuckets)", "class_method_signature": "HystrixRollingNumber.HystrixRollingNumber(HystrixProperty<Integer> timeInMilliseconds, HystrixProperty<Integer> numberOfBuckets)", "testcase": false, "constructor": true}, {"identifier": "HystrixRollingNumber", "parameters": "(int timeInMilliseconds, int numberOfBuckets)", "modifiers": "public", "return": "", "signature": " HystrixRollingNumber(int timeInMilliseconds, int numberOfBuckets)", "full_signature": "public  HystrixRollingNumber(int timeInMilliseconds, int numberOfBuckets)", "class_method_signature": "HystrixRollingNumber.HystrixRollingNumber(int timeInMilliseconds, int numberOfBuckets)", "testcase": false, "constructor": true}, {"identifier": "HystrixRollingNumber", "parameters": "(Time time, int timeInMilliseconds, int numberOfBuckets)", "modifiers": "", "return": "", "signature": " HystrixRollingNumber(Time time, int timeInMilliseconds, int numberOfBuckets)", "full_signature": "  HystrixRollingNumber(Time time, int timeInMilliseconds, int numberOfBuckets)", "class_method_signature": "HystrixRollingNumber.HystrixRollingNumber(Time time, int timeInMilliseconds, int numberOfBuckets)", "testcase": false, "constructor": true}, {"identifier": "increment", "parameters": "(HystrixRollingNumberEvent type)", "modifiers": "public", "return": "void", "signature": "void increment(HystrixRollingNumberEvent type)", "full_signature": "public void increment(HystrixRollingNumberEvent type)", "class_method_signature": "HystrixRollingNumber.increment(HystrixRollingNumberEvent type)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(HystrixRollingNumberEvent type, long value)", "modifiers": "public", "return": "void", "signature": "void add(HystrixRollingNumberEvent type, long value)", "full_signature": "public void add(HystrixRollingNumberEvent type, long value)", "class_method_signature": "HystrixRollingNumber.add(HystrixRollingNumberEvent type, long value)", "testcase": false, "constructor": false}, {"identifier": "updateRollingMax", "parameters": "(HystrixRollingNumberEvent type, long value)", "modifiers": "public", "return": "void", "signature": "void updateRollingMax(HystrixRollingNumberEvent type, long value)", "full_signature": "public void updateRollingMax(HystrixRollingNumberEvent type, long value)", "class_method_signature": "HystrixRollingNumber.updateRollingMax(HystrixRollingNumberEvent type, long value)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reset()", "full_signature": "public void reset()", "class_method_signature": "HystrixRollingNumber.reset()", "testcase": false, "constructor": false}, {"identifier": "getCumulativeSum", "parameters": "(HystrixRollingNumberEvent type)", "modifiers": "public", "return": "long", "signature": "long getCumulativeSum(HystrixRollingNumberEvent type)", "full_signature": "public long getCumulativeSum(HystrixRollingNumberEvent type)", "class_method_signature": "HystrixRollingNumber.getCumulativeSum(HystrixRollingNumberEvent type)", "testcase": false, "constructor": false}, {"identifier": "getRollingSum", "parameters": "(HystrixRollingNumberEvent type)", "modifiers": "public", "return": "long", "signature": "long getRollingSum(HystrixRollingNumberEvent type)", "full_signature": "public long getRollingSum(HystrixRollingNumberEvent type)", "class_method_signature": "HystrixRollingNumber.getRollingSum(HystrixRollingNumberEvent type)", "testcase": false, "constructor": false}, {"identifier": "getValueOfLatestBucket", "parameters": "(HystrixRollingNumberEvent type)", "modifiers": "public", "return": "long", "signature": "long getValueOfLatestBucket(HystrixRollingNumberEvent type)", "full_signature": "public long getValueOfLatestBucket(HystrixRollingNumberEvent type)", "class_method_signature": "HystrixRollingNumber.getValueOfLatestBucket(HystrixRollingNumberEvent type)", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "(HystrixRollingNumberEvent type)", "modifiers": "public", "return": "long[]", "signature": "long[] getValues(HystrixRollingNumberEvent type)", "full_signature": "public long[] getValues(HystrixRollingNumberEvent type)", "class_method_signature": "HystrixRollingNumber.getValues(HystrixRollingNumberEvent type)", "testcase": false, "constructor": false}, {"identifier": "getRollingMaxValue", "parameters": "(HystrixRollingNumberEvent type)", "modifiers": "public", "return": "long", "signature": "long getRollingMaxValue(HystrixRollingNumberEvent type)", "full_signature": "public long getRollingMaxValue(HystrixRollingNumberEvent type)", "class_method_signature": "HystrixRollingNumber.getRollingMaxValue(HystrixRollingNumberEvent type)", "testcase": false, "constructor": false}, {"identifier": "getCurrentBucket", "parameters": "()", "modifiers": "", "return": "Bucket", "signature": "Bucket getCurrentBucket()", "full_signature": " Bucket getCurrentBucket()", "class_method_signature": "HystrixRollingNumber.getCurrentBucket()", "testcase": false, "constructor": false}], "file": "hystrix-core/src/main/java/com/netflix/hystrix/util/HystrixRollingNumber.java"}, "focal_method": {"identifier": "increment", "parameters": "(HystrixRollingNumberEvent type)", "modifiers": "public", "return": "void", "body": "public void increment(HystrixRollingNumberEvent type) {\n        getCurrentBucket().getAdder(type).increment();\n    }", "signature": "void increment(HystrixRollingNumberEvent type)", "full_signature": "public void increment(HystrixRollingNumberEvent type)", "class_method_signature": "HystrixRollingNumber.increment(HystrixRollingNumberEvent type)", "testcase": false, "constructor": false, "invocations": ["increment", "getAdder", "getCurrentBucket"]}, "repository": {"repo_id": 6766558, "url": "https://github.com/Netflix/Hystrix", "stars": 19028, "created": "11/19/2012 8:14:46 PM +00:00", "updates": "2020-01-27T17:55:28+00:00", "fork": "False", "license": "licensed"}}