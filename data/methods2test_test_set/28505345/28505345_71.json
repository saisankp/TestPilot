{"test_class": {"identifier": "ContentTypeBasedRespConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "NetworkResponse networkResponse;", "modifier": "", "type": "NetworkResponse", "declarator": "networkResponse", "var_name": "networkResponse"}], "file": "jus-java/src/test/java/io/apptik/comm/jus/converter/ContentTypeBasedRespConverterTest.java"}, "test_case": {"identifier": "cannotFindConverter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void cannotFindConverter() throws IOException {\n        ContentTypeBasedRespConverter<String> converter = new ContentTypeBasedRespConverter<>();\n        converter.add(MediaType.parse(\"text/plain\"), new Converters.StringResponseConverter());\n        converter.add(MediaType.parse(\"applicaton/xml\"), new Converters.StringResponseConverter());\n        try {\n            converter.convert(networkResponse);\n            fail();\n        } catch (RuntimeException e) {\n            assertThat(e).hasMessageStartingWith(\"Cannot find converter for \" +\n                    \":NetworkResponse{contentType=application/json, statusCode=200, data={\\\"key\\\"\" +\n                    \" \" +\n                    \": \\\"value\\\"}, headers=Content-Type: application/json\\n\" +\n                    \", networkTimeNs=0}, tried:\");\n        }\n    }", "signature": "void cannotFindConverter()", "full_signature": "@Test public void cannotFindConverter()", "class_method_signature": "ContentTypeBasedRespConverterTest.cannotFindConverter()", "testcase": true, "constructor": false, "invocations": ["add", "parse", "add", "parse", "convert", "fail", "hasMessageStartingWith", "assertThat"]}, "focal_class": {"identifier": "ContentTypeBasedRespConverter", "superclass": "extends AbstractSmartResponseConverter<T>", "interfaces": "", "fields": [{"original_string": "Map<MediaType, Converter<NetworkResponse, T>> converters = new HashMap<>();", "modifier": "", "type": "Map<MediaType, Converter<NetworkResponse, T>>", "declarator": "converters = new HashMap<>()", "var_name": "converters"}], "methods": [{"identifier": "chooseConverter", "parameters": "(NetworkResponse value)", "modifiers": "@Override protected", "return": "Converter<NetworkResponse, T>", "signature": "Converter<NetworkResponse, T> chooseConverter(NetworkResponse value)", "full_signature": "@Override protected Converter<NetworkResponse, T> chooseConverter(NetworkResponse value)", "class_method_signature": "ContentTypeBasedRespConverter.chooseConverter(NetworkResponse value)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(MediaType mediaType, Converter<NetworkResponse, T>\n            converter)", "modifiers": "public", "return": "ContentTypeBasedRespConverter<T>", "signature": "ContentTypeBasedRespConverter<T> add(MediaType mediaType, Converter<NetworkResponse, T>\n            converter)", "full_signature": "public ContentTypeBasedRespConverter<T> add(MediaType mediaType, Converter<NetworkResponse, T>\n            converter)", "class_method_signature": "ContentTypeBasedRespConverter.add(MediaType mediaType, Converter<NetworkResponse, T>\n            converter)", "testcase": false, "constructor": false}], "file": "jus-java/src/main/java/io/apptik/comm/jus/converter/ContentTypeBasedRespConverter.java"}, "focal_method": {"identifier": "add", "parameters": "(MediaType mediaType, Converter<NetworkResponse, T>\n            converter)", "modifiers": "public", "return": "ContentTypeBasedRespConverter<T>", "body": "public ContentTypeBasedRespConverter<T> add(MediaType mediaType, Converter<NetworkResponse, T>\n            converter) {\n        converters.put(mediaType, converter);\n        return this;\n    }", "signature": "ContentTypeBasedRespConverter<T> add(MediaType mediaType, Converter<NetworkResponse, T>\n            converter)", "full_signature": "public ContentTypeBasedRespConverter<T> add(MediaType mediaType, Converter<NetworkResponse, T>\n            converter)", "class_method_signature": "ContentTypeBasedRespConverter.add(MediaType mediaType, Converter<NetworkResponse, T>\n            converter)", "testcase": false, "constructor": false, "invocations": ["put"]}, "repository": {"repo_id": 28505345, "url": "https://github.com/apptik/jus", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 56, "size": 2057, "license": "licensed"}}