{"test_class": {"identifier": "ProfileTemplateTest", "superclass": "extends AbstractLinkedInApiTest", "interfaces": "", "fields": [], "file": "spring-social-linkedin/src/test/java/org/springframework/social/linkedin/api/impl/ProfileTemplateTest.java"}, "test_case": {"identifier": "search", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void search() {\n\t\tmockServer.expect(requestTo(\n\t\t\t\t\"https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))?keywords=Java+J2EE&country-code=ie&start=0&count=10\"\n\t\t\t\t\t\t + \"&oauth2_access_token=ACCESS_TOKEN\"\n\t\t\t\t)).andExpect(method(GET))\n\t\t\t.andRespond(withSuccess(new ClassPathResource(\"search.json\", getClass()), MediaType.APPLICATION_JSON));\n\n\t\tSearchParameters parameters = new SearchParameters();\n\t\tparameters.setCountryCode(\"ie\");\n\t\tparameters.setKeywords(\"Java J2EE\");\n\t\tLinkedInProfiles result = linkedIn.profileOperations().search(parameters);\n\t\tassertEquals(0, result.getStart());\n\t\tassertEquals(10, result.getCount());\n\t\tassertEquals(110, result.getTotal());\n\t\tassertEquals(10, result.getPeople().size());\n\n\t\tassertProfile(result.getPeople().get(0),\n\t\t\t\t\"YeagNX-lsX\", \"IT Consultant at Harvey Nash PLC\", \"Michelle\", \"Daly\", \"Staffing and Recruiting\", null);\n\n\t}", "signature": "void search()", "full_signature": "@Test public void search()", "class_method_signature": "ProfileTemplateTest.search()", "testcase": true, "constructor": false, "invocations": ["andRespond", "andExpect", "expect", "requestTo", "method", "withSuccess", "getClass", "setCountryCode", "setKeywords", "search", "profileOperations", "assertEquals", "getStart", "assertEquals", "getCount", "assertEquals", "getTotal", "assertEquals", "size", "getPeople", "assertProfile", "get", "getPeople"]}, "focal_class": {"identifier": "ProfileTemplate", "superclass": "extends AbstractTemplate", "interfaces": "implements ProfileOperations", "fields": [{"original_string": "private RestOperations restOperations;", "modifier": "private", "type": "RestOperations", "declarator": "restOperations", "var_name": "restOperations"}, {"original_string": "private ObjectMapper objectMapper;", "modifier": "private", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}, {"original_string": "static final String PROFILE_FIELDS = \":(id,first-name,last-name,emailAddress,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary)?format=json\";", "modifier": "static final", "type": "String", "declarator": "PROFILE_FIELDS = \":(id,first-name,last-name,emailAddress,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary)?format=json\"", "var_name": "PROFILE_FIELDS"}, {"original_string": "static final String FULL_PROFILE_FIELDS;", "modifier": "static final", "type": "String", "declarator": "FULL_PROFILE_FIELDS", "var_name": "FULL_PROFILE_FIELDS"}, {"original_string": "static final String PEOPLE_SEARCH_URL = \"https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))\";", "modifier": "static final", "type": "String", "declarator": "PEOPLE_SEARCH_URL = \"https://api.linkedin.com/v1/people-search:(people:(id,first-name,last-name,headline,industry,site-standard-profile-request,public-profile-url,picture-url,summary,api-standard-profile-request))\"", "var_name": "PEOPLE_SEARCH_URL"}], "methods": [{"identifier": "ProfileTemplate", "parameters": "(RestOperations restOperations, ObjectMapper objectMapper)", "modifiers": "public", "return": "", "signature": " ProfileTemplate(RestOperations restOperations, ObjectMapper objectMapper)", "full_signature": "public  ProfileTemplate(RestOperations restOperations, ObjectMapper objectMapper)", "class_method_signature": "ProfileTemplate.ProfileTemplate(RestOperations restOperations, ObjectMapper objectMapper)", "testcase": false, "constructor": true}, {"identifier": "getProfileId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getProfileId()", "full_signature": "public String getProfileId()", "class_method_signature": "ProfileTemplate.getProfileId()", "testcase": false, "constructor": false}, {"identifier": "getProfileUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getProfileUrl()", "full_signature": "public String getProfileUrl()", "class_method_signature": "ProfileTemplate.getProfileUrl()", "testcase": false, "constructor": false}, {"identifier": "getUserProfile", "parameters": "()", "modifiers": "public", "return": "LinkedInProfile", "signature": "LinkedInProfile getUserProfile()", "full_signature": "public LinkedInProfile getUserProfile()", "class_method_signature": "ProfileTemplate.getUserProfile()", "testcase": false, "constructor": false}, {"identifier": "getUserProfileFull", "parameters": "()", "modifiers": "public", "return": "LinkedInProfileFull", "signature": "LinkedInProfileFull getUserProfileFull()", "full_signature": "public LinkedInProfileFull getUserProfileFull()", "class_method_signature": "ProfileTemplate.getUserProfileFull()", "testcase": false, "constructor": false}, {"identifier": "getProfileById", "parameters": "(String id)", "modifiers": "public", "return": "LinkedInProfile", "signature": "LinkedInProfile getProfileById(String id)", "full_signature": "public LinkedInProfile getProfileById(String id)", "class_method_signature": "ProfileTemplate.getProfileById(String id)", "testcase": false, "constructor": false}, {"identifier": "getProfileByPublicUrl", "parameters": "(String url)", "modifiers": "public", "return": "LinkedInProfile", "signature": "LinkedInProfile getProfileByPublicUrl(String url)", "full_signature": "public LinkedInProfile getProfileByPublicUrl(String url)", "class_method_signature": "ProfileTemplate.getProfileByPublicUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "getProfileFullById", "parameters": "(String id)", "modifiers": "public", "return": "LinkedInProfileFull", "signature": "LinkedInProfileFull getProfileFullById(String id)", "full_signature": "public LinkedInProfileFull getProfileFullById(String id)", "class_method_signature": "ProfileTemplate.getProfileFullById(String id)", "testcase": false, "constructor": false}, {"identifier": "getProfileFullByPublicUrl", "parameters": "(String url)", "modifiers": "public", "return": "LinkedInProfileFull", "signature": "LinkedInProfileFull getProfileFullByPublicUrl(String url)", "full_signature": "public LinkedInProfileFull getProfileFullByPublicUrl(String url)", "class_method_signature": "ProfileTemplate.getProfileFullByPublicUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(SearchParameters parameters)", "modifiers": "public", "return": "LinkedInProfiles", "signature": "LinkedInProfiles search(SearchParameters parameters)", "full_signature": "public LinkedInProfiles search(SearchParameters parameters)", "class_method_signature": "ProfileTemplate.search(SearchParameters parameters)", "testcase": false, "constructor": false}, {"identifier": "getUserProfile", "parameters": "(String fields, Class<T> type)", "modifiers": "private", "return": "T", "signature": "T getUserProfile(String fields, Class<T> type)", "full_signature": "private T getUserProfile(String fields, Class<T> type)", "class_method_signature": "ProfileTemplate.getUserProfile(String fields, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "getProfileFullById", "parameters": "(String id, String fields, Class<T> type)", "modifiers": "private", "return": "T", "signature": "T getProfileFullById(String id, String fields, Class<T> type)", "full_signature": "private T getProfileFullById(String id, String fields, Class<T> type)", "class_method_signature": "ProfileTemplate.getProfileFullById(String id, String fields, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "getProfileByPublicUrl", "parameters": "(String url, String fields, Class<T> type)", "modifiers": "private", "return": "T", "signature": "T getProfileByPublicUrl(String url, String fields, Class<T> type)", "full_signature": "private T getProfileByPublicUrl(String url, String fields, Class<T> type)", "class_method_signature": "ProfileTemplate.getProfileByPublicUrl(String url, String fields, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "expand", "parameters": "(String url, SearchParameters parameters)", "modifiers": "private", "return": "URI", "signature": "URI expand(String url, SearchParameters parameters)", "full_signature": "private URI expand(String url, SearchParameters parameters)", "class_method_signature": "ProfileTemplate.expand(String url, SearchParameters parameters)", "testcase": false, "constructor": false}], "file": "spring-social-linkedin/src/main/java/org/springframework/social/linkedin/api/impl/ProfileTemplate.java"}, "focal_method": {"identifier": "search", "parameters": "(SearchParameters parameters)", "modifiers": "public", "return": "LinkedInProfiles", "body": "public LinkedInProfiles search(SearchParameters parameters) {\n\t\tJsonNode node =  restOperations.getForObject(expand(PEOPLE_SEARCH_URL, parameters), JsonNode.class);\n\t\ttry {\n\t\t\treturn objectMapper.reader(LinkedInProfiles.class).readValue(node.path(\"people\"));\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t\t\n\t}", "signature": "LinkedInProfiles search(SearchParameters parameters)", "full_signature": "public LinkedInProfiles search(SearchParameters parameters)", "class_method_signature": "ProfileTemplate.search(SearchParameters parameters)", "testcase": false, "constructor": false, "invocations": ["getForObject", "expand", "readValue", "reader", "path"]}, "repository": {"repo_id": 1767898, "url": "https://github.com/spring-projects/spring-social-linkedin", "language": "Java", "is_fork": false, "fork_count": 66, "stargazer_count": 71, "size": 12391, "license": "licensed"}}