{"test_class": {"identifier": "CharConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/core/src/test/java/org/apache/tamaya/core/internal/converters/CharConverterTest.java"}, "test_case": {"identifier": "callToConvertAddsMoreSupportedFormatsToTheContext", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void callToConvertAddsMoreSupportedFormatsToTheContext() throws Exception {\n        ConversionContext context = new ConversionContext.Builder(TypeLiteral.of(Character.class)).build();\n\n        CharConverter converter = new CharConverter();\n        converter.convert(\"\", context);\n\n        assertThat(context.getSupportedFormats()).contains(\"<char> (CharConverter)\", \"\\\\'<char>\\\\' (CharConverter)\");\n    }", "signature": "void callToConvertAddsMoreSupportedFormatsToTheContext()", "full_signature": "@Test public void callToConvertAddsMoreSupportedFormatsToTheContext()", "class_method_signature": "CharConverterTest.callToConvertAddsMoreSupportedFormatsToTheContext()", "testcase": true, "constructor": false, "invocations": ["build", "of", "convert", "contains", "assertThat", "getSupportedFormats"]}, "focal_class": {"identifier": "CharConverter", "superclass": "", "interfaces": "implements PropertyConverter<Character>", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(CharConverter.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(CharConverter.class.getName())", "var_name": "LOG"}], "methods": [{"identifier": "convert", "parameters": "(String value, ConversionContext ctx)", "modifiers": "@Override public", "return": "Character", "signature": "Character convert(String value, ConversionContext ctx)", "full_signature": "@Override public Character convert(String value, ConversionContext ctx)", "class_method_signature": "CharConverter.convert(String value, ConversionContext ctx)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "CharConverter.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "CharConverter.hashCode()", "testcase": false, "constructor": false}], "file": "code/core/src/main/java/org/apache/tamaya/core/internal/converters/CharConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(String value, ConversionContext ctx)", "modifiers": "@Override public", "return": "Character", "body": "@Override\n    public Character convert(String value, ConversionContext ctx) {\n        ctx.addSupportedFormats(getClass(),\"\\\\'<char>\\\\'\", \"<char>\", \"<charNum>\");\n        if(value==null){\n            return null;\n        }\n        String trimmed = value.trim();\n        if(trimmed.isEmpty()){\n            return null;\n        }\n        if(trimmed.startsWith(\"'\")) {\n            try {\n                if (trimmed.length() == 1){\n                    return '\\'';\n                }\n                trimmed = trimmed.substring(1, trimmed.length() - 1);\n                if (trimmed.isEmpty()) {\n                    return null;\n                }\n                return trimmed.charAt(0);\n            } catch (Exception e) {\n                LOG.finest(\"Invalid character format encountered: '\" + value + \"', valid formats are 'a', 101 and a.\");\n                return null;\n            }\n        }\n        try {\n            Integer val = Integer.parseInt(trimmed);\n            return (char) val.shortValue();\n        } catch (Exception e) {\n            LOG.finest(\"Character format is not numeric: '\" + value + \"', using first character.\");\n            return trimmed.charAt(0);\n        }\n    }", "signature": "Character convert(String value, ConversionContext ctx)", "full_signature": "@Override public Character convert(String value, ConversionContext ctx)", "class_method_signature": "CharConverter.convert(String value, ConversionContext ctx)", "testcase": false, "constructor": false, "invocations": ["addSupportedFormats", "getClass", "trim", "isEmpty", "startsWith", "length", "substring", "length", "isEmpty", "charAt", "finest", "parseInt", "shortValue", "finest", "charAt"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}