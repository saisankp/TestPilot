{"test_class": {"identifier": "MultiPartFormUploadServletTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private MultiPartFileParser multiPartFileParser;", "modifier": "@Mock\n    private", "type": "MultiPartFileParser", "declarator": "multiPartFileParser", "var_name": "multiPartFileParser"}, {"original_string": "@Mock\n    private HttpServletResponse response;", "modifier": "@Mock\n    private", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "@Mock\n    private HttpServletRequest request;", "modifier": "@Mock\n    private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private PrintWriter printWriter;", "modifier": "@Mock\n    private", "type": "PrintWriter", "declarator": "printWriter", "var_name": "printWriter"}, {"original_string": "@Mock\n    private ServletFileUploadFactory servletFileUploadFactory;", "modifier": "@Mock\n    private", "type": "ServletFileUploadFactory", "declarator": "servletFileUploadFactory", "var_name": "servletFileUploadFactory"}, {"original_string": "@Mock\n    private ServletFileUpload servletFileUpload;", "modifier": "@Mock\n    private", "type": "ServletFileUpload", "declarator": "servletFileUpload", "var_name": "servletFileUpload"}, {"original_string": "@Mock\n    private UrlAccessLogMessageAssembler urlAccessLogMessageAssembler;", "modifier": "@Mock\n    private", "type": "UrlAccessLogMessageAssembler", "declarator": "urlAccessLogMessageAssembler", "var_name": "urlAccessLogMessageAssembler"}, {"original_string": "private MultiPartFormUploadServlet underTest;", "modifier": "private", "type": "MultiPartFormUploadServlet", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-webapp/src/test/java/com/epam/wilma/webapp/config/servlet/stub/upload/MultiPartFormUploadServletTest.java"}, "test_case": {"identifier": "testDoGetShouldSendFileParserMessageWhenUploadingSuccess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDoGetShouldSendFileParserMessageWhenUploadingSuccess() throws ServletException, IOException, FileUploadException {\n        //GIVEN\n        List<FileItem> uploadedFiles = new ArrayList<>();\n        given(request.getMethod()).willReturn(\"POST\");\n        given(servletFileUpload.parseRequest(request)).willReturn(uploadedFiles);\n        given(multiPartFileParser.parseMultiPartFiles(uploadedFiles)).willReturn(\"\");\n        //WHEN\n        underTest.doGet(request, response);\n        //THEN\n        verify(response).setContentType(\"text/html\");\n        verify(printWriter).write(\"\");\n    }", "signature": "void testDoGetShouldSendFileParserMessageWhenUploadingSuccess()", "full_signature": "@Test public void testDoGetShouldSendFileParserMessageWhenUploadingSuccess()", "class_method_signature": "MultiPartFormUploadServletTest.testDoGetShouldSendFileParserMessageWhenUploadingSuccess()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getMethod", "willReturn", "given", "parseRequest", "willReturn", "given", "parseMultiPartFiles", "doGet", "setContentType", "verify", "write", "verify"]}, "focal_class": {"identifier": "MultiPartFormUploadServlet", "superclass": "extends HttpServlet", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(MultiPartFormUploadServlet.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(MultiPartFormUploadServlet.class)", "var_name": "LOGGER"}, {"original_string": "private final ServletFileUpload servletFileUpload;", "modifier": "private final", "type": "ServletFileUpload", "declarator": "servletFileUpload", "var_name": "servletFileUpload"}, {"original_string": "private final MultiPartFileParser multiPartFileParser;", "modifier": "private final", "type": "MultiPartFileParser", "declarator": "multiPartFileParser", "var_name": "multiPartFileParser"}, {"original_string": "private final UrlAccessLogMessageAssembler urlAccessLogMessageAssembler;", "modifier": "private final", "type": "UrlAccessLogMessageAssembler", "declarator": "urlAccessLogMessageAssembler", "var_name": "urlAccessLogMessageAssembler"}], "methods": [{"identifier": "MultiPartFormUploadServlet", "parameters": "(final ServletFileUploadFactory servletFileUploadFactory, final MultiPartFileParser multiPartFileParser,\n                                      final UrlAccessLogMessageAssembler urlAccessLogMessageAssembler)", "modifiers": "@Autowired public", "return": "", "signature": " MultiPartFormUploadServlet(final ServletFileUploadFactory servletFileUploadFactory, final MultiPartFileParser multiPartFileParser,\n                                      final UrlAccessLogMessageAssembler urlAccessLogMessageAssembler)", "full_signature": "@Autowired public  MultiPartFormUploadServlet(final ServletFileUploadFactory servletFileUploadFactory, final MultiPartFileParser multiPartFileParser,\n                                      final UrlAccessLogMessageAssembler urlAccessLogMessageAssembler)", "class_method_signature": "MultiPartFormUploadServlet.MultiPartFormUploadServlet(final ServletFileUploadFactory servletFileUploadFactory, final MultiPartFileParser multiPartFileParser,\n                                      final UrlAccessLogMessageAssembler urlAccessLogMessageAssembler)", "testcase": false, "constructor": true}, {"identifier": "doGet", "parameters": "(final HttpServletRequest request, final HttpServletResponse response)", "modifiers": "@Override protected", "return": "void", "signature": "void doGet(final HttpServletRequest request, final HttpServletResponse response)", "full_signature": "@Override protected void doGet(final HttpServletRequest request, final HttpServletResponse response)", "class_method_signature": "MultiPartFormUploadServlet.doGet(final HttpServletRequest request, final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "doPost", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp)", "modifiers": "@Override protected", "return": "void", "signature": "void doPost(final HttpServletRequest req, final HttpServletResponse resp)", "full_signature": "@Override protected void doPost(final HttpServletRequest req, final HttpServletResponse resp)", "class_method_signature": "MultiPartFormUploadServlet.doPost(final HttpServletRequest req, final HttpServletResponse resp)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-webapp/src/main/java/com/epam/wilma/webapp/config/servlet/stub/upload/MultiPartFormUploadServlet.java"}, "focal_method": {"identifier": "doGet", "parameters": "(final HttpServletRequest request, final HttpServletResponse response)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void doGet(final HttpServletRequest request, final HttpServletResponse response) throws ServletException, IOException {\n        response.setContentType(\"text/html\");\n        PrintWriter out = response.getWriter();\n\n        boolean isMultipartContent = ServletFileUpload.isMultipartContent(request);\n        if (!isMultipartContent) {\n            out.println(\"You are not trying to upload\");\n        } else {\n            try {\n                List<FileItem> fields = servletFileUpload.parseRequest(request);\n                String msg = multiPartFileParser.parseMultiPartFiles(fields);\n                LOGGER.info(urlAccessLogMessageAssembler.assembleMessage(request, msg));\n                out.write(msg);\n            } catch (Exception e) {\n                response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n                out.write(\"File uploading failed! cause: \" + e.getMessage());\n                LOGGER.info(urlAccessLogMessageAssembler.assembleMessage(request, e.getMessage()), e);\n            }\n        }\n    }", "signature": "void doGet(final HttpServletRequest request, final HttpServletResponse response)", "full_signature": "@Override protected void doGet(final HttpServletRequest request, final HttpServletResponse response)", "class_method_signature": "MultiPartFormUploadServlet.doGet(final HttpServletRequest request, final HttpServletResponse response)", "testcase": false, "constructor": false, "invocations": ["setContentType", "getWriter", "isMultipartContent", "println", "parseRequest", "parseMultiPartFiles", "info", "assembleMessage", "write", "setStatus", "write", "getMessage", "info", "assembleMessage", "getMessage"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}