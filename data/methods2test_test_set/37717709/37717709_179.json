{"test_class": {"identifier": "TestSrgsXmlOptionConverter", "superclass": "", "interfaces": "", "fields": [], "file": "org.jvoicexml/src/test/java/org/jvoicexml/interpreter/formitem/TestSrgsXmlOptionConverter.java"}, "test_case": {"identifier": "testCreateDtmfGrammarNoOptions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateDtmfGrammarNoOptions() throws Exception {\n        final Collection<Option> options = new java.util.ArrayList<Option>();\n        final OptionConverter converter = new SrgsXmlOptionConverter();\n        final Grammar grammar = converter.createDtmfGrammar(options);\n        Assert.assertNull(grammar);\n    }", "signature": "void testCreateDtmfGrammarNoOptions()", "full_signature": "@Test public void testCreateDtmfGrammarNoOptions()", "class_method_signature": "TestSrgsXmlOptionConverter.testCreateDtmfGrammarNoOptions()", "testcase": true, "constructor": false, "invocations": ["createDtmfGrammar", "assertNull"]}, "focal_class": {"identifier": "SrgsXmlOptionConverter", "superclass": "", "interfaces": "implements OptionConverter", "fields": [{"original_string": "private static final Logger LOGGER =\n            LogManager.getLogger(SrgsXmlOptionConverter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER =\n            LogManager.getLogger(SrgsXmlOptionConverter.class)", "var_name": "LOGGER"}, {"original_string": "private static long sequence = 0;", "modifier": "private static", "type": "long", "declarator": "sequence = 0", "var_name": "sequence"}], "methods": [{"identifier": "getName", "parameters": "(final ModeType type)", "modifiers": "private static synchronized", "return": "String", "signature": "String getName(final ModeType type)", "full_signature": "private static synchronized String getName(final ModeType type)", "class_method_signature": "SrgsXmlOptionConverter.getName(final ModeType type)", "testcase": false, "constructor": false}, {"identifier": "createVoiceGrammar", "parameters": "(final Collection<Option> options,\n            final Locale language)", "modifiers": "@Override public", "return": "Grammar", "signature": "Grammar createVoiceGrammar(final Collection<Option> options,\n            final Locale language)", "full_signature": "@Override public Grammar createVoiceGrammar(final Collection<Option> options,\n            final Locale language)", "class_method_signature": "SrgsXmlOptionConverter.createVoiceGrammar(final Collection<Option> options,\n            final Locale language)", "testcase": false, "constructor": false}, {"identifier": "createDtmfGrammar", "parameters": "(final Collection<Option> options)", "modifiers": "@Override public", "return": "Grammar", "signature": "Grammar createDtmfGrammar(final Collection<Option> options)", "full_signature": "@Override public Grammar createDtmfGrammar(final Collection<Option> options)", "class_method_signature": "SrgsXmlOptionConverter.createDtmfGrammar(final Collection<Option> options)", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/interpreter/formitem/SrgsXmlOptionConverter.java"}, "focal_method": {"identifier": "createDtmfGrammar", "parameters": "(final Collection<Option> options)", "modifiers": "@Override public", "return": "Grammar", "body": "@Override\n    public Grammar createDtmfGrammar(final Collection<Option> options) {\n        if ((options == null) || options.isEmpty()) {\n            return null;\n        }\n        try {\n            final SrgsXmlDocument document = new SrgsXmlDocument();\n            final Grammar grammar = document.getGrammar();\n            grammar.setType(GrammarType.SRGS_XML);\n            final Rule rule = grammar.appendChild(Rule.class);\n            final String name = getName(ModeType.DTMF);\n            rule.setId(name);\n            grammar.setRoot(rule);\n            final OneOf oneof = rule.appendChild(OneOf.class);\n            boolean hasDtmf = false;\n            for (Option option : options) {\n                final String dtmf = option.getDtmf();\n                if (dtmf != null) {\n                    final Item item = oneof.appendChild(Item.class);\n                    item.addText(dtmf);\n                    hasDtmf = true;\n                }\n            }\n            if (hasDtmf) {\n                return grammar;\n            } else {\n                return null;\n            }\n        } catch (ParserConfigurationException e) {\n            LOGGER.warn(e.getMessage(), e);\n            return null;\n        }\n    }", "signature": "Grammar createDtmfGrammar(final Collection<Option> options)", "full_signature": "@Override public Grammar createDtmfGrammar(final Collection<Option> options)", "class_method_signature": "SrgsXmlOptionConverter.createDtmfGrammar(final Collection<Option> options)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "getGrammar", "setType", "appendChild", "getName", "setId", "setRoot", "appendChild", "getDtmf", "appendChild", "addText", "warn", "getMessage"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}