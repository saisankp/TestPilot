{"test_class": {"identifier": "DistributedCacheTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DistributedCache distributedCache;", "modifier": "private", "type": "DistributedCache", "declarator": "distributedCache", "var_name": "distributedCache"}, {"original_string": "private HazelcastInstance hazelcastInstance;", "modifier": "private", "type": "HazelcastInstance", "declarator": "hazelcastInstance", "var_name": "hazelcastInstance"}, {"original_string": "private ObjectMapper mapper;", "modifier": "private", "type": "ObjectMapper", "declarator": "mapper", "var_name": "mapper"}], "file": "real-time/foxtrot/foxtrot-core/src/test/java/com/flipkart/foxtrot/core/querystore/impl/DistributedCacheTest.java"}, "test_case": {"identifier": "testGetNullKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetNullKey() throws Exception {\n        assertNull(distributedCache.get(null));\n    }", "signature": "void testGetNullKey()", "full_signature": "@Test public void testGetNullKey()", "class_method_signature": "DistributedCacheTest.testGetNullKey()", "testcase": true, "constructor": false, "invocations": ["assertNull", "get"]}, "focal_class": {"identifier": "DistributedCache", "superclass": "", "interfaces": "implements Cache", "fields": [{"original_string": "private static final String NAME_PREFIX=\"cache-for-\";", "modifier": "private static final", "type": "String", "declarator": "NAME_PREFIX=\"cache-for-\"", "var_name": "NAME_PREFIX"}, {"original_string": "private static final Logger logger = LoggerFactory.getLogger(DistributedCache.class.getSimpleName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(DistributedCache.class.getSimpleName())", "var_name": "logger"}, {"original_string": "private final IMap<String, String> distributedMap;", "modifier": "private final", "type": "IMap<String, String>", "declarator": "distributedMap", "var_name": "distributedMap"}, {"original_string": "private final ObjectMapper mapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "mapper", "var_name": "mapper"}], "methods": [{"identifier": "setupConfig", "parameters": "(HazelcastConnection hazelcastConnection)", "modifiers": "public static", "return": "void", "signature": "void setupConfig(HazelcastConnection hazelcastConnection)", "full_signature": "public static void setupConfig(HazelcastConnection hazelcastConnection)", "class_method_signature": "DistributedCache.setupConfig(HazelcastConnection hazelcastConnection)", "testcase": false, "constructor": false}, {"identifier": "DistributedCache", "parameters": "(HazelcastConnection hazelcastConnection, String name, ObjectMapper mapper)", "modifiers": "public", "return": "", "signature": " DistributedCache(HazelcastConnection hazelcastConnection, String name, ObjectMapper mapper)", "full_signature": "public  DistributedCache(HazelcastConnection hazelcastConnection, String name, ObjectMapper mapper)", "class_method_signature": "DistributedCache.DistributedCache(HazelcastConnection hazelcastConnection, String name, ObjectMapper mapper)", "testcase": false, "constructor": true}, {"identifier": "put", "parameters": "(String key, ActionResponse data)", "modifiers": "@Override public", "return": "ActionResponse", "signature": "ActionResponse put(String key, ActionResponse data)", "full_signature": "@Override public ActionResponse put(String key, ActionResponse data)", "class_method_signature": "DistributedCache.put(String key, ActionResponse data)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String key)", "modifiers": "@Override public", "return": "ActionResponse", "signature": "ActionResponse get(String key)", "full_signature": "@Override public ActionResponse get(String key)", "class_method_signature": "DistributedCache.get(String key)", "testcase": false, "constructor": false}, {"identifier": "has", "parameters": "(String key)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean has(String key)", "full_signature": "@Override public boolean has(String key)", "class_method_signature": "DistributedCache.has(String key)", "testcase": false, "constructor": false}], "file": "real-time/foxtrot/foxtrot-core/src/main/java/com/flipkart/foxtrot/core/querystore/impl/DistributedCache.java"}, "focal_method": {"identifier": "get", "parameters": "(String key)", "modifiers": "@Override public", "return": "ActionResponse", "body": "@Override\n    public ActionResponse get(String key) {\n        if (null == key) {\n            return null; //Hazelcast map throws NPE if key is null\n        }\n        String data = distributedMap.get(key);\n        if(null != data) {\n            try {\n                return mapper.readValue(data, ActionResponse.class);\n            } catch (IOException e) {\n                logger.error(\"Error deserializing: \", e);\n            }\n        }\n        return null;\n    }", "signature": "ActionResponse get(String key)", "full_signature": "@Override public ActionResponse get(String key)", "class_method_signature": "DistributedCache.get(String key)", "testcase": false, "constructor": false, "invocations": ["get", "readValue", "error"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}