{"test_class": {"identifier": "WFS_1_1_0_DataStoreTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/unsupported/wfs/src/test/java/org/geotools/data/wfs/v1_1_0/WFS_1_1_0_DataStoreTest.java"}, "test_case": {"identifier": "testGetSchema", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSchema() throws IOException {\n        final InputStream schemaStream = TestData.openStream(this, CUBEWERX_GOVUNITCE.SCHEMA);\n        TestHttpResponse httpResponse = new TestHttpResponse(\"\", \"UTF-8\", schemaStream);\n        TestHttpProtocol mockHttp = new TestHttpProtocol(httpResponse);\n        createTestProtocol(CUBEWERX_GOVUNITCE.CAPABILITIES, mockHttp);\n\n        // override the describe feature type url so it loads from the test resource\n        URL describeUrl = TestData.getResource(this, CUBEWERX_GOVUNITCE.SCHEMA);\n        wfs.setDescribeFeatureTypeURLOverride(describeUrl);\n\n        WFS_1_1_0_DataStore ds = new WFS_1_1_0_DataStore(wfs);\n\n        try {\n            ds.getSchema(\"nonExistentTypeName\");\n            fail(\"Expected SchemaNotFoundException\");\n        } catch (SchemaNotFoundException e) {\n            assertTrue(true);\n        }\n\n        SimpleFeatureType schema = ds.getSchema(CUBEWERX_GOVUNITCE.FEATURETYPENAME);\n        assertNotNull(schema);\n    }", "signature": "void testGetSchema()", "full_signature": "@Test public void testGetSchema()", "class_method_signature": "WFS_1_1_0_DataStoreTest.testGetSchema()", "testcase": true, "constructor": false, "invocations": ["openStream", "createTestProtocol", "getResource", "setDescribeFeatureTypeURLOverride", "getSchema", "fail", "assertTrue", "getSchema", "assertNotNull"]}, "focal_class": {"identifier": "WFS_1_1_0_DataStore", "superclass": "", "interfaces": "implements WFSDataStore", "fields": [{"original_string": "private static final Logger LOGGER = Logging.getLogger(\"org.geotools.data.wfs\");", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logging.getLogger(\"org.geotools.data.wfs\")", "var_name": "LOGGER"}, {"original_string": "private static final boolean DEFAULT_HTTP_METHOD = true;", "modifier": "private static final", "type": "boolean", "declarator": "DEFAULT_HTTP_METHOD = true", "var_name": "DEFAULT_HTTP_METHOD"}, {"original_string": "protected WFSProtocol wfs;", "modifier": "protected", "type": "WFSProtocol", "declarator": "wfs", "var_name": "wfs"}, {"original_string": "private Map<String, SimpleFeatureType> byTypeNameTypes;", "modifier": "private", "type": "Map<String, SimpleFeatureType>", "declarator": "byTypeNameTypes", "var_name": "byTypeNameTypes"}, {"original_string": "private Integer maxFeaturesHardLimit;", "modifier": "private", "type": "Integer", "declarator": "maxFeaturesHardLimit", "var_name": "maxFeaturesHardLimit"}, {"original_string": "private boolean preferPostOverGet = false;", "modifier": "private", "type": "boolean", "declarator": "preferPostOverGet = false", "var_name": "preferPostOverGet"}, {"original_string": "private String namespaceOverride;", "modifier": "private", "type": "String", "declarator": "namespaceOverride", "var_name": "namespaceOverride"}, {"original_string": "private Boolean useDefaultSRS = false;", "modifier": "private", "type": "Boolean", "declarator": "useDefaultSRS = false", "var_name": "useDefaultSRS"}, {"original_string": "private String axisOrderOutput = AXIS_ORDER_COMPLIANT;", "modifier": "private", "type": "String", "declarator": "axisOrderOutput = AXIS_ORDER_COMPLIANT", "var_name": "axisOrderOutput"}, {"original_string": "private String axisOrderFilter = AXIS_ORDER_COMPLIANT;", "modifier": "private", "type": "String", "declarator": "axisOrderFilter = AXIS_ORDER_COMPLIANT", "var_name": "axisOrderFilter"}, {"original_string": "private String outputFormat = null;", "modifier": "private", "type": "String", "declarator": "outputFormat = null", "var_name": "outputFormat"}, {"original_string": "private Map<String, String> mappedURIs = new HashMap<String, String>();", "modifier": "private", "type": "Map<String, String>", "declarator": "mappedURIs = new HashMap<String, String>()", "var_name": "mappedURIs"}], "methods": [{"identifier": "WFS_1_1_0_DataStore", "parameters": "(final WFSProtocol wfs)", "modifiers": "public", "return": "", "signature": " WFS_1_1_0_DataStore(final WFSProtocol wfs)", "full_signature": "public  WFS_1_1_0_DataStore(final WFSProtocol wfs)", "class_method_signature": "WFS_1_1_0_DataStore.WFS_1_1_0_DataStore(final WFSProtocol wfs)", "testcase": false, "constructor": true}, {"identifier": "setMappedURIs", "parameters": "(Map<String, String> mappedURIs)", "modifiers": "public", "return": "void", "signature": "void setMappedURIs(Map<String, String> mappedURIs)", "full_signature": "public void setMappedURIs(Map<String, String> mappedURIs)", "class_method_signature": "WFS_1_1_0_DataStore.setMappedURIs(Map<String, String> mappedURIs)", "testcase": false, "constructor": false}, {"identifier": "setAxisOrder", "parameters": "(String axisOrderOutput, String axisOrderFilter)", "modifiers": "public", "return": "void", "signature": "void setAxisOrder(String axisOrderOutput, String axisOrderFilter)", "full_signature": "public void setAxisOrder(String axisOrderOutput, String axisOrderFilter)", "class_method_signature": "WFS_1_1_0_DataStore.setAxisOrder(String axisOrderOutput, String axisOrderFilter)", "testcase": false, "constructor": false}, {"identifier": "getAxisOrderForOutput", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAxisOrderForOutput()", "full_signature": "public String getAxisOrderForOutput()", "class_method_signature": "WFS_1_1_0_DataStore.getAxisOrderForOutput()", "testcase": false, "constructor": false}, {"identifier": "getAxisOrderForFilter", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAxisOrderForFilter()", "full_signature": "public String getAxisOrderForFilter()", "class_method_signature": "WFS_1_1_0_DataStore.getAxisOrderForFilter()", "testcase": false, "constructor": false}, {"identifier": "setNamespaceOverride", "parameters": "(String namespaceOverride)", "modifiers": "public", "return": "void", "signature": "void setNamespaceOverride(String namespaceOverride)", "full_signature": "public void setNamespaceOverride(String namespaceOverride)", "class_method_signature": "WFS_1_1_0_DataStore.setNamespaceOverride(String namespaceOverride)", "testcase": false, "constructor": false}, {"identifier": "setMaxFeatures", "parameters": "(Integer maxFeatures)", "modifiers": "public", "return": "void", "signature": "void setMaxFeatures(Integer maxFeatures)", "full_signature": "public void setMaxFeatures(Integer maxFeatures)", "class_method_signature": "WFS_1_1_0_DataStore.setMaxFeatures(Integer maxFeatures)", "testcase": false, "constructor": false}, {"identifier": "getMaxFeatures", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getMaxFeatures()", "full_signature": "public Integer getMaxFeatures()", "class_method_signature": "WFS_1_1_0_DataStore.getMaxFeatures()", "testcase": false, "constructor": false}, {"identifier": "isPreferPostOverGet", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isPreferPostOverGet()", "full_signature": "public boolean isPreferPostOverGet()", "class_method_signature": "WFS_1_1_0_DataStore.isPreferPostOverGet()", "testcase": false, "constructor": false}, {"identifier": "setPreferPostOverGet", "parameters": "(Boolean booleanValue)", "modifiers": "public", "return": "void", "signature": "void setPreferPostOverGet(Boolean booleanValue)", "full_signature": "public void setPreferPostOverGet(Boolean booleanValue)", "class_method_signature": "WFS_1_1_0_DataStore.setPreferPostOverGet(Boolean booleanValue)", "testcase": false, "constructor": false}, {"identifier": "getInfo", "parameters": "()", "modifiers": "public", "return": "WFSServiceInfo", "signature": "WFSServiceInfo getInfo()", "full_signature": "public WFSServiceInfo getInfo()", "class_method_signature": "WFS_1_1_0_DataStore.getInfo()", "testcase": false, "constructor": false}, {"identifier": "getSchema", "parameters": "(final String prefixedTypeName)", "modifiers": "public", "return": "SimpleFeatureType", "signature": "SimpleFeatureType getSchema(final String prefixedTypeName)", "full_signature": "public SimpleFeatureType getSchema(final String prefixedTypeName)", "class_method_signature": "WFS_1_1_0_DataStore.getSchema(final String prefixedTypeName)", "testcase": false, "constructor": false}, {"identifier": "getSchema", "parameters": "(Name name)", "modifiers": "public", "return": "SimpleFeatureType", "signature": "SimpleFeatureType getSchema(Name name)", "full_signature": "public SimpleFeatureType getSchema(Name name)", "class_method_signature": "WFS_1_1_0_DataStore.getSchema(Name name)", "testcase": false, "constructor": false}, {"identifier": "getNames", "parameters": "()", "modifiers": "public", "return": "List<Name>", "signature": "List<Name> getNames()", "full_signature": "public List<Name> getNames()", "class_method_signature": "WFS_1_1_0_DataStore.getNames()", "testcase": false, "constructor": false}, {"identifier": "getTypeNames", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getTypeNames()", "full_signature": "public String[] getTypeNames()", "class_method_signature": "WFS_1_1_0_DataStore.getTypeNames()", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void dispose()", "full_signature": "public void dispose()", "class_method_signature": "WFS_1_1_0_DataStore.dispose()", "testcase": false, "constructor": false}, {"identifier": "executeGetFeatures", "parameters": "(final Query query, final Transaction transaction,\n            final ResultType resultType)", "modifiers": "private", "return": "WFSResponse", "signature": "WFSResponse executeGetFeatures(final Query query, final Transaction transaction,\n            final ResultType resultType)", "full_signature": "private WFSResponse executeGetFeatures(final Query query, final Transaction transaction,\n            final ResultType resultType)", "class_method_signature": "WFS_1_1_0_DataStore.executeGetFeatures(final Query query, final Transaction transaction,\n            final ResultType resultType)", "testcase": false, "constructor": false}, {"identifier": "invertAxisInFilterIfNeeded", "parameters": "(Query query,\n            CoordinateReferenceSystem crs)", "modifiers": "private", "return": "void", "signature": "void invertAxisInFilterIfNeeded(Query query,\n            CoordinateReferenceSystem crs)", "full_signature": "private void invertAxisInFilterIfNeeded(Query query,\n            CoordinateReferenceSystem crs)", "class_method_signature": "WFS_1_1_0_DataStore.invertAxisInFilterIfNeeded(Query query,\n            CoordinateReferenceSystem crs)", "testcase": false, "constructor": false}, {"identifier": "invertAxisNeeded", "parameters": "(String axisOrder,\n            CoordinateReferenceSystem crs)", "modifiers": "public static", "return": "boolean", "signature": "boolean invertAxisNeeded(String axisOrder,\n            CoordinateReferenceSystem crs)", "full_signature": "public static boolean invertAxisNeeded(String axisOrder,\n            CoordinateReferenceSystem crs)", "class_method_signature": "WFS_1_1_0_DataStore.invertAxisNeeded(String axisOrder,\n            CoordinateReferenceSystem crs)", "testcase": false, "constructor": false}, {"identifier": "createNewQuery", "parameters": "(Query model, Filter filter, Filter postFilter)", "modifiers": "private", "return": "Query", "signature": "Query createNewQuery(Query model, Filter filter, Filter postFilter)", "full_signature": "private Query createNewQuery(Query model, Filter filter, Filter postFilter)", "class_method_signature": "WFS_1_1_0_DataStore.createNewQuery(Query model, Filter filter, Filter postFilter)", "testcase": false, "constructor": false}, {"identifier": "getFeatureReader", "parameters": "(Query query,\n            final Transaction transaction)", "modifiers": "public", "return": "FeatureReader<SimpleFeatureType, SimpleFeature>", "signature": "FeatureReader<SimpleFeatureType, SimpleFeature> getFeatureReader(Query query,\n            final Transaction transaction)", "full_signature": "public FeatureReader<SimpleFeatureType, SimpleFeature> getFeatureReader(Query query,\n            final Transaction transaction)", "class_method_signature": "WFS_1_1_0_DataStore.getFeatureReader(Query query,\n            final Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "getServerSrs", "parameters": "(Query query)", "modifiers": "private", "return": "String", "signature": "String getServerSrs(Query query)", "full_signature": "private String getServerSrs(Query query)", "class_method_signature": "WFS_1_1_0_DataStore.getServerSrs(Query query)", "testcase": false, "constructor": false}, {"identifier": "sendGetFeatures", "parameters": "(GetFeature request)", "modifiers": "private", "return": "WFSResponse", "signature": "WFSResponse sendGetFeatures(GetFeature request)", "full_signature": "private WFSResponse sendGetFeatures(GetFeature request)", "class_method_signature": "WFS_1_1_0_DataStore.sendGetFeatures(GetFeature request)", "testcase": false, "constructor": false}, {"identifier": "getQueryType", "parameters": "(final Query query)", "modifiers": "", "return": "SimpleFeatureType", "signature": "SimpleFeatureType getQueryType(final Query query)", "full_signature": " SimpleFeatureType getQueryType(final Query query)", "class_method_signature": "WFS_1_1_0_DataStore.getQueryType(final Query query)", "testcase": false, "constructor": false}, {"identifier": "getFeatureSource", "parameters": "(final String typeName)", "modifiers": "public", "return": "WFSFeatureSource", "signature": "WFSFeatureSource getFeatureSource(final String typeName)", "full_signature": "public WFSFeatureSource getFeatureSource(final String typeName)", "class_method_signature": "WFS_1_1_0_DataStore.getFeatureSource(final String typeName)", "testcase": false, "constructor": false}, {"identifier": "getLockingManager", "parameters": "()", "modifiers": "public", "return": "LockingManager", "signature": "LockingManager getLockingManager()", "full_signature": "public LockingManager getLockingManager()", "class_method_signature": "WFS_1_1_0_DataStore.getLockingManager()", "testcase": false, "constructor": false}, {"identifier": "getFeatureWriter", "parameters": "(String typeName,\n            Filter filter, Transaction transaction)", "modifiers": "public", "return": "FeatureWriter<SimpleFeatureType, SimpleFeature>", "signature": "FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriter(String typeName,\n            Filter filter, Transaction transaction)", "full_signature": "public FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriter(String typeName,\n            Filter filter, Transaction transaction)", "class_method_signature": "WFS_1_1_0_DataStore.getFeatureWriter(String typeName,\n            Filter filter, Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "getFeatureWriter", "parameters": "(String typeName,\n            Transaction transaction)", "modifiers": "public", "return": "FeatureWriter<SimpleFeatureType, SimpleFeature>", "signature": "FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriter(String typeName,\n            Transaction transaction)", "full_signature": "public FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriter(String typeName,\n            Transaction transaction)", "class_method_signature": "WFS_1_1_0_DataStore.getFeatureWriter(String typeName,\n            Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "getFeatureWriterAppend", "parameters": "(String typeName,\n            Transaction transaction)", "modifiers": "public", "return": "FeatureWriter<SimpleFeatureType, SimpleFeature>", "signature": "FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriterAppend(String typeName,\n            Transaction transaction)", "full_signature": "public FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriterAppend(String typeName,\n            Transaction transaction)", "class_method_signature": "WFS_1_1_0_DataStore.getFeatureWriterAppend(String typeName,\n            Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "getFeatureSource", "parameters": "(Name typeName)", "modifiers": "public", "return": "SimpleFeatureSource", "signature": "SimpleFeatureSource getFeatureSource(Name typeName)", "full_signature": "public SimpleFeatureSource getFeatureSource(Name typeName)", "class_method_signature": "WFS_1_1_0_DataStore.getFeatureSource(Name typeName)", "testcase": false, "constructor": false}, {"identifier": "updateSchema", "parameters": "(Name typeName, SimpleFeatureType featureType)", "modifiers": "public", "return": "void", "signature": "void updateSchema(Name typeName, SimpleFeatureType featureType)", "full_signature": "public void updateSchema(Name typeName, SimpleFeatureType featureType)", "class_method_signature": "WFS_1_1_0_DataStore.updateSchema(Name typeName, SimpleFeatureType featureType)", "testcase": false, "constructor": false}, {"identifier": "updateSchema", "parameters": "(String typeName, SimpleFeatureType featureType)", "modifiers": "public", "return": "void", "signature": "void updateSchema(String typeName, SimpleFeatureType featureType)", "full_signature": "public void updateSchema(String typeName, SimpleFeatureType featureType)", "class_method_signature": "WFS_1_1_0_DataStore.updateSchema(String typeName, SimpleFeatureType featureType)", "testcase": false, "constructor": false}, {"identifier": "createSchema", "parameters": "(SimpleFeatureType featureType)", "modifiers": "public", "return": "void", "signature": "void createSchema(SimpleFeatureType featureType)", "full_signature": "public void createSchema(SimpleFeatureType featureType)", "class_method_signature": "WFS_1_1_0_DataStore.createSchema(SimpleFeatureType featureType)", "testcase": false, "constructor": false}, {"identifier": "getFeatureTypeName", "parameters": "(String typeName)", "modifiers": "public", "return": "QName", "signature": "QName getFeatureTypeName(String typeName)", "full_signature": "public QName getFeatureTypeName(String typeName)", "class_method_signature": "WFS_1_1_0_DataStore.getFeatureTypeName(String typeName)", "testcase": false, "constructor": false}, {"identifier": "getFeatureTypeTitle", "parameters": "(String typeName)", "modifiers": "public", "return": "String", "signature": "String getFeatureTypeTitle(String typeName)", "full_signature": "public String getFeatureTypeTitle(String typeName)", "class_method_signature": "WFS_1_1_0_DataStore.getFeatureTypeTitle(String typeName)", "testcase": false, "constructor": false}, {"identifier": "getFeatureTypeAbstract", "parameters": "(String typeName)", "modifiers": "public", "return": "String", "signature": "String getFeatureTypeAbstract(String typeName)", "full_signature": "public String getFeatureTypeAbstract(String typeName)", "class_method_signature": "WFS_1_1_0_DataStore.getFeatureTypeAbstract(String typeName)", "testcase": false, "constructor": false}, {"identifier": "getFeatureTypeWGS84Bounds", "parameters": "(String typeName)", "modifiers": "public", "return": "ReferencedEnvelope", "signature": "ReferencedEnvelope getFeatureTypeWGS84Bounds(String typeName)", "full_signature": "public ReferencedEnvelope getFeatureTypeWGS84Bounds(String typeName)", "class_method_signature": "WFS_1_1_0_DataStore.getFeatureTypeWGS84Bounds(String typeName)", "testcase": false, "constructor": false}, {"identifier": "getFeatureTypeBounds", "parameters": "(String typeName)", "modifiers": "public", "return": "ReferencedEnvelope", "signature": "ReferencedEnvelope getFeatureTypeBounds(String typeName)", "full_signature": "public ReferencedEnvelope getFeatureTypeBounds(String typeName)", "class_method_signature": "WFS_1_1_0_DataStore.getFeatureTypeBounds(String typeName)", "testcase": false, "constructor": false}, {"identifier": "getFeatureTypeCRS", "parameters": "(String typeName)", "modifiers": "public", "return": "CoordinateReferenceSystem", "signature": "CoordinateReferenceSystem getFeatureTypeCRS(String typeName)", "full_signature": "public CoordinateReferenceSystem getFeatureTypeCRS(String typeName)", "class_method_signature": "WFS_1_1_0_DataStore.getFeatureTypeCRS(String typeName)", "testcase": false, "constructor": false}, {"identifier": "getFeatureTypeKeywords", "parameters": "(String typeName)", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getFeatureTypeKeywords(String typeName)", "full_signature": "public Set<String> getFeatureTypeKeywords(String typeName)", "class_method_signature": "WFS_1_1_0_DataStore.getFeatureTypeKeywords(String typeName)", "testcase": false, "constructor": false}, {"identifier": "getDescribeFeatureTypeURL", "parameters": "(String typeName)", "modifiers": "public", "return": "URL", "signature": "URL getDescribeFeatureTypeURL(String typeName)", "full_signature": "public URL getDescribeFeatureTypeURL(String typeName)", "class_method_signature": "WFS_1_1_0_DataStore.getDescribeFeatureTypeURL(String typeName)", "testcase": false, "constructor": false}, {"identifier": "getServiceAbstract", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getServiceAbstract()", "full_signature": "public String getServiceAbstract()", "class_method_signature": "WFS_1_1_0_DataStore.getServiceAbstract()", "testcase": false, "constructor": false}, {"identifier": "getServiceKeywords", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getServiceKeywords()", "full_signature": "public Set<String> getServiceKeywords()", "class_method_signature": "WFS_1_1_0_DataStore.getServiceKeywords()", "testcase": false, "constructor": false}, {"identifier": "getServiceProviderUri", "parameters": "()", "modifiers": "public", "return": "URI", "signature": "URI getServiceProviderUri()", "full_signature": "public URI getServiceProviderUri()", "class_method_signature": "WFS_1_1_0_DataStore.getServiceProviderUri()", "testcase": false, "constructor": false}, {"identifier": "getCapabilitiesURL", "parameters": "()", "modifiers": "public", "return": "URL", "signature": "URL getCapabilitiesURL()", "full_signature": "public URL getCapabilitiesURL()", "class_method_signature": "WFS_1_1_0_DataStore.getCapabilitiesURL()", "testcase": false, "constructor": false}, {"identifier": "getServiceTitle", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getServiceTitle()", "full_signature": "public String getServiceTitle()", "class_method_signature": "WFS_1_1_0_DataStore.getServiceTitle()", "testcase": false, "constructor": false}, {"identifier": "getServiceVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getServiceVersion()", "full_signature": "public String getServiceVersion()", "class_method_signature": "WFS_1_1_0_DataStore.getServiceVersion()", "testcase": false, "constructor": false}, {"identifier": "getBounds", "parameters": "(final Query query)", "modifiers": "public", "return": "ReferencedEnvelope", "signature": "ReferencedEnvelope getBounds(final Query query)", "full_signature": "public ReferencedEnvelope getBounds(final Query query)", "class_method_signature": "WFS_1_1_0_DataStore.getBounds(final Query query)", "testcase": false, "constructor": false}, {"identifier": "getCount", "parameters": "(Query query)", "modifiers": "public", "return": "int", "signature": "int getCount(Query query)", "full_signature": "public int getCount(Query query)", "class_method_signature": "WFS_1_1_0_DataStore.getCount(Query query)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "WFS_1_1_0_DataStore.toString()", "testcase": false, "constructor": false}, {"identifier": "useHttpPostFor", "parameters": "(final WFSOperationType operation)", "modifiers": "private", "return": "boolean", "signature": "boolean useHttpPostFor(final WFSOperationType operation)", "full_signature": "private boolean useHttpPostFor(final WFSOperationType operation)", "class_method_signature": "WFS_1_1_0_DataStore.useHttpPostFor(final WFSOperationType operation)", "testcase": false, "constructor": false}, {"identifier": "adaptQueryForSupportedCrs", "parameters": "(Query query)", "modifiers": "private", "return": "String", "signature": "String adaptQueryForSupportedCrs(Query query)", "full_signature": "private String adaptQueryForSupportedCrs(Query query)", "class_method_signature": "WFS_1_1_0_DataStore.adaptQueryForSupportedCrs(Query query)", "testcase": false, "constructor": false}, {"identifier": "getMaxFeatures", "parameters": "(Query query)", "modifiers": "protected", "return": "int", "signature": "int getMaxFeatures(Query query)", "full_signature": "protected int getMaxFeatures(Query query)", "class_method_signature": "WFS_1_1_0_DataStore.getMaxFeatures(Query query)", "testcase": false, "constructor": false}, {"identifier": "setUseDefaultSRS", "parameters": "(Boolean useDefaultSRS)", "modifiers": "@Override public", "return": "void", "signature": "void setUseDefaultSRS(Boolean useDefaultSRS)", "full_signature": "@Override public void setUseDefaultSRS(Boolean useDefaultSRS)", "class_method_signature": "WFS_1_1_0_DataStore.setUseDefaultSRS(Boolean useDefaultSRS)", "testcase": false, "constructor": false}, {"identifier": "setGetFeatureOutputFormat", "parameters": "(String outputFormat)", "modifiers": "public", "return": "void", "signature": "void setGetFeatureOutputFormat(String outputFormat)", "full_signature": "public void setGetFeatureOutputFormat(String outputFormat)", "class_method_signature": "WFS_1_1_0_DataStore.setGetFeatureOutputFormat(String outputFormat)", "testcase": false, "constructor": false}, {"identifier": "removeSchema", "parameters": "(String typeName)", "modifiers": "@Override public", "return": "void", "signature": "void removeSchema(String typeName)", "full_signature": "@Override public void removeSchema(String typeName)", "class_method_signature": "WFS_1_1_0_DataStore.removeSchema(String typeName)", "testcase": false, "constructor": false}, {"identifier": "removeSchema", "parameters": "(Name typeName)", "modifiers": "@Override public", "return": "void", "signature": "void removeSchema(Name typeName)", "full_signature": "@Override public void removeSchema(Name typeName)", "class_method_signature": "WFS_1_1_0_DataStore.removeSchema(Name typeName)", "testcase": false, "constructor": false}], "file": "modules/unsupported/wfs/src/main/java/org/geotools/data/wfs/v1_1_0/WFS_1_1_0_DataStore.java"}, "focal_method": {"identifier": "getSchema", "parameters": "(final String prefixedTypeName)", "modifiers": "public", "return": "SimpleFeatureType", "body": "public SimpleFeatureType getSchema(final String prefixedTypeName) throws IOException {\n        SimpleFeatureType ftype = byTypeNameTypes.get(prefixedTypeName);\n        if (ftype == null) {\n            // String outputFormat = DEFAULT_OUTPUT_FORMAT;\n            // WFSResponse response;\n            // if (useHttpPostFor(DESCRIBE_FEATURETYPE)) {\n            // response = wfs.describeFeatureTypePOST(prefixedTypeName, outputFormat);\n            // } else {\n            // response = wfs.describeFeatureTypeGET(prefixedTypeName, outputFormat);\n            // }\n            //\n            // WFSResponseParser parser = WFSExtensions.findParser(response);\n\n            final QName featureDescriptorName;\n            try {\n                featureDescriptorName = wfs.getFeatureTypeName(prefixedTypeName);\n            } catch (IllegalArgumentException e) {\n                throw new SchemaNotFoundException(prefixedTypeName);\n            }\n\n            final SimpleFeatureType featureType;\n            CoordinateReferenceSystem crs = getFeatureTypeCRS(prefixedTypeName);\n            featureType = wfs.issueDescribeFeatureTypeGET(prefixedTypeName, crs);\n\n            // adapt the feature type name\n            SimpleFeatureTypeBuilder builder = new SimpleFeatureTypeBuilder();\n            builder.init(featureType);\n            builder.setName(prefixedTypeName);\n            if (namespaceOverride != null) {\n                builder.setNamespaceURI(namespaceOverride);\n            }\n            GeometryDescriptor defaultGeometry = featureType.getGeometryDescriptor();\n            if (defaultGeometry != null) {\n                builder.setDefaultGeometry(defaultGeometry.getLocalName());\n                builder.setCRS(defaultGeometry.getCoordinateReferenceSystem());\n            }\n            final SimpleFeatureType adaptedFeatureType = builder.buildFeatureType();\n            ftype = adaptedFeatureType;\n            byTypeNameTypes.put(prefixedTypeName, ftype);\n        }\n        return ftype;\n    }", "signature": "SimpleFeatureType getSchema(final String prefixedTypeName)", "full_signature": "public SimpleFeatureType getSchema(final String prefixedTypeName)", "class_method_signature": "WFS_1_1_0_DataStore.getSchema(final String prefixedTypeName)", "testcase": false, "constructor": false, "invocations": ["get", "getFeatureTypeName", "getFeatureTypeCRS", "issueDescribeFeatureTypeGET", "init", "setName", "setNamespaceURI", "getGeometryDescriptor", "setDefaultGeometry", "getLocalName", "setCRS", "getCoordinateReferenceSystem", "buildFeatureType", "put"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}