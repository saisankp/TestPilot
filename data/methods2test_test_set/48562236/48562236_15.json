{"test_class": {"identifier": "AggregateParserTest", "superclass": "extends TestBase", "interfaces": "", "fields": [], "file": "web/api/src/test/java/leap/web/api/query/AggregateParserTest.java"}, "test_case": {"identifier": "testMulti", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMulti() {\n        Aggregate aggs = AggregateParser.parse(\"sum(a), avg(b)\");\n        assertAggregate(aggs.items()[0]);\n        assertAggregate(aggs.items()[1], \"bAvg\", \"avg\", \"b\");\n\n        aggs = AggregateParser.parse(\"sum(a) aa, avg(b) as b\");\n        assertAggregate(aggs.items()[0], \"aa\");\n        assertAggregate(aggs.items()[1], \"b\", \"avg\", \"b\");\n    }", "signature": "void testMulti()", "full_signature": "@Test public void testMulti()", "class_method_signature": "AggregateParserTest.testMulti()", "testcase": true, "constructor": false, "invocations": ["parse", "assertAggregate", "items", "assertAggregate", "items", "parse", "assertAggregate", "items", "assertAggregate", "items"]}, "focal_class": {"identifier": "AggregateParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Set<String> funcs = new HashSet<>();", "modifier": "private static final", "type": "Set<String>", "declarator": "funcs = new HashSet<>()", "var_name": "funcs"}, {"original_string": "private final static boolean[] identifierFlags = new boolean[256];", "modifier": "private final static", "type": "boolean[]", "declarator": "identifierFlags = new boolean[256]", "var_name": "identifierFlags"}], "methods": [{"identifier": "parse", "parameters": "(String expr, Boolean allowSingleExpr)", "modifiers": "public static", "return": "Aggregate", "signature": "Aggregate parse(String expr, Boolean allowSingleExpr)", "full_signature": "public static Aggregate parse(String expr, Boolean allowSingleExpr)", "class_method_signature": "AggregateParser.parse(String expr, Boolean allowSingleExpr)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String expr)", "modifiers": "public static", "return": "Aggregate", "signature": "Aggregate parse(String expr)", "full_signature": "public static Aggregate parse(String expr)", "class_method_signature": "AggregateParser.parse(String expr)", "testcase": false, "constructor": false}, {"identifier": "processParse", "parameters": "(String expr, Boolean allowSingleExpr)", "modifiers": "private static", "return": "Aggregate", "signature": "Aggregate processParse(String expr, Boolean allowSingleExpr)", "full_signature": "private static Aggregate processParse(String expr, Boolean allowSingleExpr)", "class_method_signature": "AggregateParser.processParse(String expr, Boolean allowSingleExpr)", "testcase": false, "constructor": false}, {"identifier": "alias", "parameters": "(String rest, String field, String func)", "modifiers": "private static", "return": "String", "signature": "String alias(String rest, String field, String func)", "full_signature": "private static String alias(String rest, String field, String func)", "class_method_signature": "AggregateParser.alias(String rest, String field, String func)", "testcase": false, "constructor": false}, {"identifier": "invalidExpr", "parameters": "(String expr)", "modifiers": "private static", "return": "void", "signature": "void invalidExpr(String expr)", "full_signature": "private static void invalidExpr(String expr)", "class_method_signature": "AggregateParser.invalidExpr(String expr)", "testcase": false, "constructor": false}, {"identifier": "isIdentifier", "parameters": "(String s)", "modifiers": "private static", "return": "boolean", "signature": "boolean isIdentifier(String s)", "full_signature": "private static boolean isIdentifier(String s)", "class_method_signature": "AggregateParser.isIdentifier(String s)", "testcase": false, "constructor": false}, {"identifier": "isIdentifierChar", "parameters": "(char c)", "modifiers": "private static", "return": "boolean", "signature": "boolean isIdentifierChar(char c)", "full_signature": "private static boolean isIdentifierChar(char c)", "class_method_signature": "AggregateParser.isIdentifierChar(char c)", "testcase": false, "constructor": false}], "file": "web/api/src/main/java/leap/web/api/query/AggregateParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(String expr, Boolean allowSingleExpr)", "modifiers": "public static", "return": "Aggregate", "body": "public static Aggregate parse(String expr, Boolean allowSingleExpr) {\n        return processParse(expr, allowSingleExpr);\n    }", "signature": "Aggregate parse(String expr, Boolean allowSingleExpr)", "full_signature": "public static Aggregate parse(String expr, Boolean allowSingleExpr)", "class_method_signature": "AggregateParser.parse(String expr, Boolean allowSingleExpr)", "testcase": false, "constructor": false, "invocations": ["processParse"]}, "repository": {"repo_id": 48562236, "url": "https://github.com/leapframework/framework", "stars": 42, "created": "12/25/2015 1:54:52 AM +00:00", "updates": "2020-01-20T03:04:15+00:00", "fork": "False", "license": "licensed"}}