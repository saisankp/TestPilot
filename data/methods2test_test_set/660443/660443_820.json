{"test_class": {"identifier": "StructureDiagramGeneratorTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [{"original_string": "private static final StructureDiagramGenerator SDG = new StructureDiagramGenerator();", "modifier": "private static final", "type": "StructureDiagramGenerator", "declarator": "SDG = new StructureDiagramGenerator()", "var_name": "SDG"}], "file": "tool/sdg/src/test/java/org/openscience/cdk/layout/StructureDiagramGeneratorTest.java"}, "test_case": {"identifier": "calciumOxide", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void calciumOxide() throws Exception {\n        SmilesParser sp = new SmilesParser(SilentChemObjectBuilder.getInstance());\n        IAtomContainer mol = sp.parseSmiles(\"[Ca+2].[O-2]\");\n        layout(mol);\n        for (IAtom atom : mol.atoms())\n            assertNotNull(atom.getPoint2d());\n        assertThat(mol.getAtom(0).getPoint2d().distance(mol.getAtom(1).getPoint2d()),\n                   closeTo(1.5*SDG.getBondLength(), 0.001));\n    }", "signature": "void calciumOxide()", "full_signature": "@Test public void calciumOxide()", "class_method_signature": "StructureDiagramGeneratorTest.calciumOxide()", "testcase": true, "constructor": false, "invocations": ["getInstance", "parseSmiles", "layout", "atoms", "assertNotNull", "getPoint2d", "assertThat", "distance", "getPoint2d", "getAtom", "getPoint2d", "getAtom", "closeTo", "getBondLength"]}, "focal_class": {"identifier": "StructureDiagramGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final double DEFAULT_BOND_LENGTH           = 1.5;", "modifier": "static final", "type": "double", "declarator": "DEFAULT_BOND_LENGTH           = 1.5", "var_name": "DEFAULT_BOND_LENGTH"}, {"original_string": "static final double SGROUP_BRACKET_PADDING_FACTOR = 0.5;", "modifier": "static final", "type": "double", "declarator": "SGROUP_BRACKET_PADDING_FACTOR = 0.5", "var_name": "SGROUP_BRACKET_PADDING_FACTOR"}, {"original_string": "private static final Vector2d                   DEFAULT_BOND_VECTOR      = new Vector2d(0, 1);", "modifier": "private static final", "type": "Vector2d", "declarator": "DEFAULT_BOND_VECTOR      = new Vector2d(0, 1)", "var_name": "DEFAULT_BOND_VECTOR"}, {"original_string": "private static final IdentityTemplateLibrary    DEFAULT_TEMPLATE_LIBRARY = IdentityTemplateLibrary.loadFromResource(\"custom-templates.smi\")\n                                                                                                   .add(IdentityTemplateLibrary.loadFromResource(\"chebi-ring-templates.smi\"));", "modifier": "private static final", "type": "IdentityTemplateLibrary", "declarator": "DEFAULT_TEMPLATE_LIBRARY = IdentityTemplateLibrary.loadFromResource(\"custom-templates.smi\")\n                                                                                                   .add(IdentityTemplateLibrary.loadFromResource(\"chebi-ring-templates.smi\"))", "var_name": "DEFAULT_TEMPLATE_LIBRARY"}, {"original_string": "private static final double                     RAD_30                   = Math.toRadians(-30);", "modifier": "private static final", "type": "double", "declarator": "RAD_30                   = Math.toRadians(-30)", "var_name": "RAD_30"}, {"original_string": "private static final ILoggingTool               logger                   = LoggingToolFactory.createLoggingTool(StructureDiagramGenerator.class);", "modifier": "private static final", "type": "ILoggingTool", "declarator": "logger                   = LoggingToolFactory.createLoggingTool(StructureDiagramGenerator.class)", "var_name": "logger"}, {"original_string": "public static final Comparator<IAtomContainer> LARGEST_FIRST_COMPARATOR = new Comparator<IAtomContainer>() {\n        @Override\n        public int compare(IAtomContainer o1, IAtomContainer o2) {\n            return Integer.compare(o2.getBondCount(), o1.getBondCount());\n        }\n    };", "modifier": "public static final", "type": "Comparator<IAtomContainer>", "declarator": "LARGEST_FIRST_COMPARATOR = new Comparator<IAtomContainer>() {\n        @Override\n        public int compare(IAtomContainer o1, IAtomContainer o2) {\n            return Integer.compare(o2.getBondCount(), o1.getBondCount());\n        }\n    }", "var_name": "LARGEST_FIRST_COMPARATOR"}, {"original_string": "private IAtomContainer molecule;", "modifier": "private", "type": "IAtomContainer", "declarator": "molecule", "var_name": "molecule"}, {"original_string": "private IRingSet       sssr;", "modifier": "private", "type": "IRingSet", "declarator": "sssr", "var_name": "sssr"}, {"original_string": "private final double bondLength = DEFAULT_BOND_LENGTH;", "modifier": "private final", "type": "double", "declarator": "bondLength = DEFAULT_BOND_LENGTH", "var_name": "bondLength"}, {"original_string": "private Vector2d firstBondVector;", "modifier": "private", "type": "Vector2d", "declarator": "firstBondVector", "var_name": "firstBondVector"}, {"original_string": "private RingPlacer       ringPlacer          = new RingPlacer();", "modifier": "private", "type": "RingPlacer", "declarator": "ringPlacer          = new RingPlacer()", "var_name": "ringPlacer"}, {"original_string": "private AtomPlacer       atomPlacer          = new AtomPlacer();", "modifier": "private", "type": "AtomPlacer", "declarator": "atomPlacer          = new AtomPlacer()", "var_name": "atomPlacer"}, {"original_string": "private MacroCycleLayout macroPlacer         = null;", "modifier": "private", "type": "MacroCycleLayout", "declarator": "macroPlacer         = null", "var_name": "macroPlacer"}, {"original_string": "private List<IRingSet>   ringSystems         = null;", "modifier": "private", "type": "List<IRingSet>", "declarator": "ringSystems         = null", "var_name": "ringSystems"}, {"original_string": "private Set<IAtom>       afix                = null;", "modifier": "private", "type": "Set<IAtom>", "declarator": "afix                = null", "var_name": "afix"}, {"original_string": "private Set<IBond>       bfix                = null;", "modifier": "private", "type": "Set<IBond>", "declarator": "bfix                = null", "var_name": "bfix"}, {"original_string": "private boolean          useIdentTemplates   = true;", "modifier": "private", "type": "boolean", "declarator": "useIdentTemplates   = true", "var_name": "useIdentTemplates"}, {"original_string": "private boolean          alignMappedReaction = true;", "modifier": "private", "type": "boolean", "declarator": "alignMappedReaction = true", "var_name": "alignMappedReaction"}, {"original_string": "private boolean selectOrientation = true;", "modifier": "private", "type": "boolean", "declarator": "selectOrientation = true", "var_name": "selectOrientation"}, {"original_string": "private IdentityTemplateLibrary identityLibrary;", "modifier": "private", "type": "IdentityTemplateLibrary", "declarator": "identityLibrary", "var_name": "identityLibrary"}, {"original_string": "private static final String FRAGMENT_CHARGE = \"FragmentCharge\";", "modifier": "private static final", "type": "String", "declarator": "FRAGMENT_CHARGE = \"FragmentCharge\"", "var_name": "FRAGMENT_CHARGE"}], "methods": [{"identifier": "StructureDiagramGenerator", "parameters": "()", "modifiers": "public", "return": "", "signature": " StructureDiagramGenerator()", "full_signature": "public  StructureDiagramGenerator()", "class_method_signature": "StructureDiagramGenerator.StructureDiagramGenerator()", "testcase": false, "constructor": true}, {"identifier": "StructureDiagramGenerator", "parameters": "(IdentityTemplateLibrary identityLibrary)", "modifiers": "private", "return": "", "signature": " StructureDiagramGenerator(IdentityTemplateLibrary identityLibrary)", "full_signature": "private  StructureDiagramGenerator(IdentityTemplateLibrary identityLibrary)", "class_method_signature": "StructureDiagramGenerator.StructureDiagramGenerator(IdentityTemplateLibrary identityLibrary)", "testcase": false, "constructor": true}, {"identifier": "StructureDiagramGenerator", "parameters": "(IAtomContainer molecule)", "modifiers": "public", "return": "", "signature": " StructureDiagramGenerator(IAtomContainer molecule)", "full_signature": "public  StructureDiagramGenerator(IAtomContainer molecule)", "class_method_signature": "StructureDiagramGenerator.StructureDiagramGenerator(IAtomContainer molecule)", "testcase": false, "constructor": true}, {"identifier": "generateCoordinates", "parameters": "(IAtomContainer mol)", "modifiers": "public final", "return": "void", "signature": "void generateCoordinates(IAtomContainer mol)", "full_signature": "public final void generateCoordinates(IAtomContainer mol)", "class_method_signature": "StructureDiagramGenerator.generateCoordinates(IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "generateCoordinates", "parameters": "(final IReaction reaction)", "modifiers": "public final", "return": "void", "signature": "void generateCoordinates(final IReaction reaction)", "full_signature": "public final void generateCoordinates(final IReaction reaction)", "class_method_signature": "StructureDiagramGenerator.generateCoordinates(final IReaction reaction)", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(Collection<Map<Integer, IAtom>> refs)", "modifiers": "private", "return": "Map<Integer, IAtom>", "signature": "Map<Integer, IAtom> select(Collection<Map<Integer, IAtom>> refs)", "full_signature": "private Map<Integer, IAtom> select(Collection<Map<Integer, IAtom>> refs)", "class_method_signature": "StructureDiagramGenerator.select(Collection<Map<Integer, IAtom>> refs)", "testcase": false, "constructor": false}, {"identifier": "setMolecule", "parameters": "(IAtomContainer mol, boolean clone)", "modifiers": "public", "return": "void", "signature": "void setMolecule(IAtomContainer mol, boolean clone)", "full_signature": "public void setMolecule(IAtomContainer mol, boolean clone)", "class_method_signature": "StructureDiagramGenerator.setMolecule(IAtomContainer mol, boolean clone)", "testcase": false, "constructor": false}, {"identifier": "setMolecule", "parameters": "(IAtomContainer mol, boolean clone, Set<IAtom> afix, Set<IBond> bfix)", "modifiers": "public", "return": "void", "signature": "void setMolecule(IAtomContainer mol, boolean clone, Set<IAtom> afix, Set<IBond> bfix)", "full_signature": "public void setMolecule(IAtomContainer mol, boolean clone, Set<IAtom> afix, Set<IBond> bfix)", "class_method_signature": "StructureDiagramGenerator.setMolecule(IAtomContainer mol, boolean clone, Set<IAtom> afix, Set<IBond> bfix)", "testcase": false, "constructor": false}, {"identifier": "setUseTemplates", "parameters": "(boolean useTemplates)", "modifiers": "@Deprecated public", "return": "void", "signature": "void setUseTemplates(boolean useTemplates)", "full_signature": "@Deprecated public void setUseTemplates(boolean useTemplates)", "class_method_signature": "StructureDiagramGenerator.setUseTemplates(boolean useTemplates)", "testcase": false, "constructor": false}, {"identifier": "setUseIdentityTemplates", "parameters": "(boolean use)", "modifiers": "public", "return": "void", "signature": "void setUseIdentityTemplates(boolean use)", "full_signature": "public void setUseIdentityTemplates(boolean use)", "class_method_signature": "StructureDiagramGenerator.setUseIdentityTemplates(boolean use)", "testcase": false, "constructor": false}, {"identifier": "getUseTemplates", "parameters": "()", "modifiers": "@Deprecated public", "return": "boolean", "signature": "boolean getUseTemplates()", "full_signature": "@Deprecated public boolean getUseTemplates()", "class_method_signature": "StructureDiagramGenerator.getUseTemplates()", "testcase": false, "constructor": false}, {"identifier": "setTemplateHandler", "parameters": "(TemplateHandler templateHandler)", "modifiers": "@Deprecated public", "return": "void", "signature": "void setTemplateHandler(TemplateHandler templateHandler)", "full_signature": "@Deprecated public void setTemplateHandler(TemplateHandler templateHandler)", "class_method_signature": "StructureDiagramGenerator.setTemplateHandler(TemplateHandler templateHandler)", "testcase": false, "constructor": false}, {"identifier": "getTemplateHandler", "parameters": "()", "modifiers": "@Deprecated public", "return": "TemplateHandler", "signature": "TemplateHandler getTemplateHandler()", "full_signature": "@Deprecated public TemplateHandler getTemplateHandler()", "class_method_signature": "StructureDiagramGenerator.getTemplateHandler()", "testcase": false, "constructor": false}, {"identifier": "setMolecule", "parameters": "(IAtomContainer molecule)", "modifiers": "public", "return": "void", "signature": "void setMolecule(IAtomContainer molecule)", "full_signature": "public void setMolecule(IAtomContainer molecule)", "class_method_signature": "StructureDiagramGenerator.setMolecule(IAtomContainer molecule)", "testcase": false, "constructor": false}, {"identifier": "setAlignMappedReaction", "parameters": "(boolean align)", "modifiers": "public", "return": "void", "signature": "void setAlignMappedReaction(boolean align)", "full_signature": "public void setAlignMappedReaction(boolean align)", "class_method_signature": "StructureDiagramGenerator.setAlignMappedReaction(boolean align)", "testcase": false, "constructor": false}, {"identifier": "getMolecule", "parameters": "()", "modifiers": "public", "return": "IAtomContainer", "signature": "IAtomContainer getMolecule()", "full_signature": "public IAtomContainer getMolecule()", "class_method_signature": "StructureDiagramGenerator.getMolecule()", "testcase": false, "constructor": false}, {"identifier": "generateExperimentalCoordinates", "parameters": "()", "modifiers": "@Deprecated public", "return": "void", "signature": "void generateExperimentalCoordinates()", "full_signature": "@Deprecated public void generateExperimentalCoordinates()", "class_method_signature": "StructureDiagramGenerator.generateExperimentalCoordinates()", "testcase": false, "constructor": false}, {"identifier": "generateExperimentalCoordinates", "parameters": "(Vector2d firstBondVector)", "modifiers": "@Deprecated public", "return": "void", "signature": "void generateExperimentalCoordinates(Vector2d firstBondVector)", "full_signature": "@Deprecated public void generateExperimentalCoordinates(Vector2d firstBondVector)", "class_method_signature": "StructureDiagramGenerator.generateExperimentalCoordinates(Vector2d firstBondVector)", "testcase": false, "constructor": false}, {"identifier": "generateCoordinates", "parameters": "(Vector2d firstBondVector)", "modifiers": "public", "return": "void", "signature": "void generateCoordinates(Vector2d firstBondVector)", "full_signature": "public void generateCoordinates(Vector2d firstBondVector)", "class_method_signature": "StructureDiagramGenerator.generateCoordinates(Vector2d firstBondVector)", "testcase": false, "constructor": false}, {"identifier": "generateCoordinates", "parameters": "(Vector2d firstBondVector, boolean isConnected, boolean isSubLayout)", "modifiers": "private", "return": "void", "signature": "void generateCoordinates(Vector2d firstBondVector, boolean isConnected, boolean isSubLayout)", "full_signature": "private void generateCoordinates(Vector2d firstBondVector, boolean isConnected, boolean isSubLayout)", "class_method_signature": "StructureDiagramGenerator.generateCoordinates(Vector2d firstBondVector, boolean isConnected, boolean isSubLayout)", "testcase": false, "constructor": false}, {"identifier": "hasFixedPart", "parameters": "(final IAtomContainer mol)", "modifiers": "private", "return": "boolean", "signature": "boolean hasFixedPart(final IAtomContainer mol)", "full_signature": "private boolean hasFixedPart(final IAtomContainer mol)", "class_method_signature": "StructureDiagramGenerator.hasFixedPart(final IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "seedLayout", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void seedLayout()", "full_signature": "private void seedLayout()", "class_method_signature": "StructureDiagramGenerator.seedLayout()", "testcase": false, "constructor": false}, {"identifier": "prepareRingSystems", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int prepareRingSystems()", "full_signature": "private int prepareRingSystems()", "class_method_signature": "StructureDiagramGenerator.prepareRingSystems()", "testcase": false, "constructor": false}, {"identifier": "assignStereochem", "parameters": "(IAtomContainer molecule)", "modifiers": "private", "return": "void", "signature": "void assignStereochem(IAtomContainer molecule)", "full_signature": "private void assignStereochem(IAtomContainer molecule)", "class_method_signature": "StructureDiagramGenerator.assignStereochem(IAtomContainer molecule)", "testcase": false, "constructor": false}, {"identifier": "refinePlacement", "parameters": "(IAtomContainer molecule)", "modifiers": "private", "return": "void", "signature": "void refinePlacement(IAtomContainer molecule)", "full_signature": "private void refinePlacement(IAtomContainer molecule)", "class_method_signature": "StructureDiagramGenerator.refinePlacement(IAtomContainer molecule)", "testcase": false, "constructor": false}, {"identifier": "finalizeLayout", "parameters": "(IAtomContainer mol)", "modifiers": "private", "return": "void", "signature": "void finalizeLayout(IAtomContainer mol)", "full_signature": "private void finalizeLayout(IAtomContainer mol)", "class_method_signature": "StructureDiagramGenerator.finalizeLayout(IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "calcDirectionHistogram", "parameters": "(IAtomContainer mol,\n                                               int[] counts,\n                                               int lim)", "modifiers": "private static", "return": "void", "signature": "void calcDirectionHistogram(IAtomContainer mol,\n                                               int[] counts,\n                                               int lim)", "full_signature": "private static void calcDirectionHistogram(IAtomContainer mol,\n                                               int[] counts,\n                                               int lim)", "class_method_signature": "StructureDiagramGenerator.calcDirectionHistogram(IAtomContainer mol,\n                                               int[] counts,\n                                               int lim)", "testcase": false, "constructor": false}, {"identifier": "selectOrientation", "parameters": "(IAtomContainer mol, double widthDiff, int alignDiff)", "modifiers": "private", "return": "void", "signature": "void selectOrientation(IAtomContainer mol, double widthDiff, int alignDiff)", "full_signature": "private void selectOrientation(IAtomContainer mol, double widthDiff, int alignDiff)", "class_method_signature": "StructureDiagramGenerator.selectOrientation(IAtomContainer mol, double widthDiff, int alignDiff)", "testcase": false, "constructor": false}, {"identifier": "adjustForHydrogen", "parameters": "(IAtom atom, IAtomContainer mol)", "modifiers": "private final", "return": "double", "signature": "double adjustForHydrogen(IAtom atom, IAtomContainer mol)", "full_signature": "private final double adjustForHydrogen(IAtom atom, IAtomContainer mol)", "class_method_signature": "StructureDiagramGenerator.adjustForHydrogen(IAtom atom, IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "getAprxBounds", "parameters": "(IAtomContainer mol)", "modifiers": "private final", "return": "double[]", "signature": "double[] getAprxBounds(IAtomContainer mol)", "full_signature": "private final double[] getAprxBounds(IAtomContainer mol)", "class_method_signature": "StructureDiagramGenerator.getAprxBounds(IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "generateFragmentCoordinates", "parameters": "(IAtomContainer mol, List<IAtomContainer> frags)", "modifiers": "private", "return": "void", "signature": "void generateFragmentCoordinates(IAtomContainer mol, List<IAtomContainer> frags)", "full_signature": "private void generateFragmentCoordinates(IAtomContainer mol, List<IAtomContainer> frags)", "class_method_signature": "StructureDiagramGenerator.generateFragmentCoordinates(IAtomContainer mol, List<IAtomContainer> frags)", "testcase": false, "constructor": false}, {"identifier": "lengthenIonicBonds", "parameters": "(List<IBond> ionicBonds, IAtomContainer fragment)", "modifiers": "private", "return": "void", "signature": "void lengthenIonicBonds(List<IBond> ionicBonds, IAtomContainer fragment)", "full_signature": "private void lengthenIonicBonds(List<IBond> ionicBonds, IAtomContainer fragment)", "class_method_signature": "StructureDiagramGenerator.lengthenIonicBonds(List<IBond> ionicBonds, IAtomContainer fragment)", "testcase": false, "constructor": false}, {"identifier": "mergeAtomicIons", "parameters": "(final List<IAtomContainer> frags)", "modifiers": "private", "return": "List<IAtomContainer>", "signature": "List<IAtomContainer> mergeAtomicIons(final List<IAtomContainer> frags)", "full_signature": "private List<IAtomContainer> mergeAtomicIons(final List<IAtomContainer> frags)", "class_method_signature": "StructureDiagramGenerator.mergeAtomicIons(final List<IAtomContainer> frags)", "testcase": false, "constructor": false}, {"identifier": "selectIons", "parameters": "(IAtomContainer frag, int sign)", "modifiers": "private", "return": "List<IAtom>", "signature": "List<IAtom> selectIons(IAtomContainer frag, int sign)", "full_signature": "private List<IAtom> selectIons(IAtomContainer frag, int sign)", "class_method_signature": "StructureDiagramGenerator.selectIons(IAtomContainer frag, int sign)", "testcase": false, "constructor": false}, {"identifier": "makeIonicBonds", "parameters": "(final List<IAtomContainer> frags)", "modifiers": "private", "return": "List<IBond>", "signature": "List<IBond> makeIonicBonds(final List<IAtomContainer> frags)", "full_signature": "private List<IBond> makeIonicBonds(final List<IAtomContainer> frags)", "class_method_signature": "StructureDiagramGenerator.makeIonicBonds(final List<IAtomContainer> frags)", "testcase": false, "constructor": false}, {"identifier": "nullAsZero", "parameters": "(Integer x)", "modifiers": "private static", "return": "int", "signature": "int nullAsZero(Integer x)", "full_signature": "private static int nullAsZero(Integer x)", "class_method_signature": "StructureDiagramGenerator.nullAsZero(Integer x)", "testcase": false, "constructor": false}, {"identifier": "toList", "parameters": "(IAtomContainerSet frags)", "modifiers": "private", "return": "List<IAtomContainer>", "signature": "List<IAtomContainer> toList(IAtomContainerSet frags)", "full_signature": "private List<IAtomContainer> toList(IAtomContainerSet frags)", "class_method_signature": "StructureDiagramGenerator.toList(IAtomContainerSet frags)", "testcase": false, "constructor": false}, {"identifier": "generateCoordinates", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void generateCoordinates()", "full_signature": "public void generateCoordinates()", "class_method_signature": "StructureDiagramGenerator.generateCoordinates()", "testcase": false, "constructor": false}, {"identifier": "lookupRingSystem", "parameters": "(IRingSet rs, IAtomContainer molecule, boolean anon)", "modifiers": "private", "return": "boolean", "signature": "boolean lookupRingSystem(IRingSet rs, IAtomContainer molecule, boolean anon)", "full_signature": "private boolean lookupRingSystem(IRingSet rs, IAtomContainer molecule, boolean anon)", "class_method_signature": "StructureDiagramGenerator.lookupRingSystem(IRingSet rs, IAtomContainer molecule, boolean anon)", "testcase": false, "constructor": false}, {"identifier": "isHydrogen", "parameters": "(IAtom atom)", "modifiers": "private static", "return": "boolean", "signature": "boolean isHydrogen(IAtom atom)", "full_signature": "private static boolean isHydrogen(IAtom atom)", "class_method_signature": "StructureDiagramGenerator.isHydrogen(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "clearHydrogenCounts", "parameters": "(IAtomContainer container)", "modifiers": "private static", "return": "IAtomContainer", "signature": "IAtomContainer clearHydrogenCounts(IAtomContainer container)", "full_signature": "private static IAtomContainer clearHydrogenCounts(IAtomContainer container)", "class_method_signature": "StructureDiagramGenerator.clearHydrogenCounts(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "layoutRingSet", "parameters": "(Vector2d firstBondVector, IRingSet rs)", "modifiers": "private", "return": "int", "signature": "int layoutRingSet(Vector2d firstBondVector, IRingSet rs)", "full_signature": "private int layoutRingSet(Vector2d firstBondVector, IRingSet rs)", "class_method_signature": "StructureDiagramGenerator.layoutRingSet(Vector2d firstBondVector, IRingSet rs)", "testcase": false, "constructor": false}, {"identifier": "getRingSetCore", "parameters": "(IRingSet rs)", "modifiers": "private", "return": "IRingSet", "signature": "IRingSet getRingSetCore(IRingSet rs)", "full_signature": "private IRingSet getRingSetCore(IRingSet rs)", "class_method_signature": "StructureDiagramGenerator.getRingSetCore(IRingSet rs)", "testcase": false, "constructor": false}, {"identifier": "isMacroCycle", "parameters": "(IRing ring, IRingSet rs)", "modifiers": "private", "return": "boolean", "signature": "boolean isMacroCycle(IRing ring, IRingSet rs)", "full_signature": "private boolean isMacroCycle(IRing ring, IRingSet rs)", "class_method_signature": "StructureDiagramGenerator.isMacroCycle(IRing ring, IRingSet rs)", "testcase": false, "constructor": false}, {"identifier": "layoutAcyclicParts", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void layoutAcyclicParts()", "full_signature": "private void layoutAcyclicParts()", "class_method_signature": "StructureDiagramGenerator.layoutAcyclicParts()", "testcase": false, "constructor": false}, {"identifier": "layoutCyclicParts", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void layoutCyclicParts()", "full_signature": "private void layoutCyclicParts()", "class_method_signature": "StructureDiagramGenerator.layoutCyclicParts()", "testcase": false, "constructor": false}, {"identifier": "getUnplacedAtoms", "parameters": "(IAtom atom)", "modifiers": "private", "return": "IAtomContainer", "signature": "IAtomContainer getUnplacedAtoms(IAtom atom)", "full_signature": "private IAtomContainer getUnplacedAtoms(IAtom atom)", "class_method_signature": "StructureDiagramGenerator.getUnplacedAtoms(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getPlacedAtoms", "parameters": "(IAtom atom)", "modifiers": "private", "return": "IAtomContainer", "signature": "IAtomContainer getPlacedAtoms(IAtom atom)", "full_signature": "private IAtomContainer getPlacedAtoms(IAtom atom)", "class_method_signature": "StructureDiagramGenerator.getPlacedAtoms(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getNextAtomWithAliphaticUnplacedNeigbors", "parameters": "()", "modifiers": "private", "return": "IAtom", "signature": "IAtom getNextAtomWithAliphaticUnplacedNeigbors()", "full_signature": "private IAtom getNextAtomWithAliphaticUnplacedNeigbors()", "class_method_signature": "StructureDiagramGenerator.getNextAtomWithAliphaticUnplacedNeigbors()", "testcase": false, "constructor": false}, {"identifier": "getNextBondWithUnplacedRingAtom", "parameters": "()", "modifiers": "private", "return": "IBond", "signature": "IBond getNextBondWithUnplacedRingAtom()", "full_signature": "private IBond getNextBondWithUnplacedRingAtom()", "class_method_signature": "StructureDiagramGenerator.getNextBondWithUnplacedRingAtom()", "testcase": false, "constructor": false}, {"identifier": "placeFirstBond", "parameters": "(IBond bond, Vector2d bondVector)", "modifiers": "private", "return": "IAtomContainer", "signature": "IAtomContainer placeFirstBond(IBond bond, Vector2d bondVector)", "full_signature": "private IAtomContainer placeFirstBond(IBond bond, Vector2d bondVector)", "class_method_signature": "StructureDiagramGenerator.placeFirstBond(IBond bond, Vector2d bondVector)", "testcase": false, "constructor": false}, {"identifier": "allPlaced", "parameters": "(IRingSet rings)", "modifiers": "private", "return": "boolean", "signature": "boolean allPlaced(IRingSet rings)", "full_signature": "private boolean allPlaced(IRingSet rings)", "class_method_signature": "StructureDiagramGenerator.allPlaced(IRingSet rings)", "testcase": false, "constructor": false}, {"identifier": "getRingAtom", "parameters": "(IBond bond)", "modifiers": "private", "return": "IAtom", "signature": "IAtom getRingAtom(IBond bond)", "full_signature": "private IAtom getRingAtom(IBond bond)", "class_method_signature": "StructureDiagramGenerator.getRingAtom(IBond bond)", "testcase": false, "constructor": false}, {"identifier": "getRingSystemOfAtom", "parameters": "(List ringSystems, IAtom ringAtom)", "modifiers": "private", "return": "IRingSet", "signature": "IRingSet getRingSystemOfAtom(List ringSystems, IAtom ringAtom)", "full_signature": "private IRingSet getRingSystemOfAtom(List ringSystems, IAtom ringAtom)", "class_method_signature": "StructureDiagramGenerator.getRingSystemOfAtom(List ringSystems, IAtom ringAtom)", "testcase": false, "constructor": false}, {"identifier": "resetUnplacedRings", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void resetUnplacedRings()", "full_signature": "private void resetUnplacedRings()", "class_method_signature": "StructureDiagramGenerator.resetUnplacedRings()", "testcase": false, "constructor": false}, {"identifier": "setBondLength", "parameters": "(double bondLength)", "modifiers": "@Deprecated public", "return": "void", "signature": "void setBondLength(double bondLength)", "full_signature": "@Deprecated public void setBondLength(double bondLength)", "class_method_signature": "StructureDiagramGenerator.setBondLength(double bondLength)", "testcase": false, "constructor": false}, {"identifier": "getBondLength", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getBondLength()", "full_signature": "public double getBondLength()", "class_method_signature": "StructureDiagramGenerator.getBondLength()", "testcase": false, "constructor": false}, {"identifier": "getOtherBondAtom", "parameters": "(IAtom atom, IBond bond)", "modifiers": "public", "return": "IAtom", "signature": "IAtom getOtherBondAtom(IAtom atom, IBond bond)", "full_signature": "public IAtom getOtherBondAtom(IAtom atom, IBond bond)", "class_method_signature": "StructureDiagramGenerator.getOtherBondAtom(IAtom atom, IBond bond)", "testcase": false, "constructor": false}, {"identifier": "placeMultipleGroups", "parameters": "(IAtomContainer mol)", "modifiers": "private", "return": "void", "signature": "void placeMultipleGroups(IAtomContainer mol)", "full_signature": "private void placeMultipleGroups(IAtomContainer mol)", "class_method_signature": "StructureDiagramGenerator.placeMultipleGroups(IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "safeUnbox", "parameters": "(Integer x)", "modifiers": "private", "return": "int", "signature": "int safeUnbox(Integer x)", "full_signature": "private int safeUnbox(Integer x)", "class_method_signature": "StructureDiagramGenerator.safeUnbox(Integer x)", "testcase": false, "constructor": false}, {"identifier": "getPositionalRingBondPref", "parameters": "(IBond bond, IAtomContainer mol)", "modifiers": "private", "return": "int", "signature": "int getPositionalRingBondPref(IBond bond, IAtomContainer mol)", "full_signature": "private int getPositionalRingBondPref(IBond bond, IAtomContainer mol)", "class_method_signature": "StructureDiagramGenerator.getPositionalRingBondPref(IBond bond, IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "placePositionalVariation", "parameters": "(final IAtomContainer mol)", "modifiers": "private", "return": "void", "signature": "void placePositionalVariation(final IAtomContainer mol)", "full_signature": "private void placePositionalVariation(final IAtomContainer mol)", "class_method_signature": "StructureDiagramGenerator.placePositionalVariation(final IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(Set<Integer> visited, int[][] g, int v)", "modifiers": "private static", "return": "void", "signature": "void visit(Set<Integer> visited, int[][] g, int v)", "full_signature": "private static void visit(Set<Integer> visited, int[][] g, int v)", "class_method_signature": "StructureDiagramGenerator.visit(Set<Integer> visited, int[][] g, int v)", "testcase": false, "constructor": false}, {"identifier": "aggregateMulticenterSgroups", "parameters": "(List<Sgroup> sgroups)", "modifiers": "private static", "return": "Multimap<Set<IAtom>, IAtom>", "signature": "Multimap<Set<IAtom>, IAtom> aggregateMulticenterSgroups(List<Sgroup> sgroups)", "full_signature": "private static Multimap<Set<IAtom>, IAtom> aggregateMulticenterSgroups(List<Sgroup> sgroups)", "class_method_signature": "StructureDiagramGenerator.aggregateMulticenterSgroups(List<Sgroup> sgroups)", "testcase": false, "constructor": false}, {"identifier": "numRingBonds", "parameters": "(IAtomContainer mol, IAtom atom)", "modifiers": "private static", "return": "int", "signature": "int numRingBonds(IAtomContainer mol, IAtom atom)", "full_signature": "private static int numRingBonds(IAtomContainer mol, IAtom atom)", "class_method_signature": "StructureDiagramGenerator.numRingBonds(IAtomContainer mol, IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "updateMinMax", "parameters": "(double[] minmax, Point2d p)", "modifiers": "private", "return": "void", "signature": "void updateMinMax(double[] minmax, Point2d p)", "full_signature": "private void updateMinMax(double[] minmax, Point2d p)", "class_method_signature": "StructureDiagramGenerator.updateMinMax(double[] minmax, Point2d p)", "testcase": false, "constructor": false}, {"identifier": "placeSgroupBrackets", "parameters": "(IAtomContainer mol)", "modifiers": "private", "return": "void", "signature": "void placeSgroupBrackets(IAtomContainer mol)", "full_signature": "private void placeSgroupBrackets(IAtomContainer mol)", "class_method_signature": "StructureDiagramGenerator.placeSgroupBrackets(IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "angle", "parameters": "(IBond bond)", "modifiers": "private static", "return": "double", "signature": "double angle(IBond bond)", "full_signature": "private static double angle(IBond bond)", "class_method_signature": "StructureDiagramGenerator.angle(IBond bond)", "testcase": false, "constructor": false}, {"identifier": "newCrossingBracket", "parameters": "(IBond bond, Multimap<IBond,Sgroup> bonds, Map<IBond,Integer> counter, boolean vert)", "modifiers": "private", "return": "SgroupBracket", "signature": "SgroupBracket newCrossingBracket(IBond bond, Multimap<IBond,Sgroup> bonds, Map<IBond,Integer> counter, boolean vert)", "full_signature": "private SgroupBracket newCrossingBracket(IBond bond, Multimap<IBond,Sgroup> bonds, Map<IBond,Integer> counter, boolean vert)", "class_method_signature": "StructureDiagramGenerator.newCrossingBracket(IBond bond, Multimap<IBond,Sgroup> bonds, Map<IBond,Integer> counter, boolean vert)", "testcase": false, "constructor": false}, {"identifier": "hasBrackets", "parameters": "(Sgroup sgroup)", "modifiers": "private static", "return": "boolean", "signature": "boolean hasBrackets(Sgroup sgroup)", "full_signature": "private static boolean hasBrackets(Sgroup sgroup)", "class_method_signature": "StructureDiagramGenerator.hasBrackets(Sgroup sgroup)", "testcase": false, "constructor": false}], "file": "tool/sdg/src/main/java/org/openscience/cdk/layout/StructureDiagramGenerator.java"}, "focal_method": {"identifier": "getBondLength", "parameters": "()", "modifiers": "public", "return": "double", "body": "public double getBondLength() {\n        return bondLength;\n    }", "signature": "double getBondLength()", "full_signature": "public double getBondLength()", "class_method_signature": "StructureDiagramGenerator.getBondLength()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}