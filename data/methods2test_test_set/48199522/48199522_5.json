{"test_class": {"identifier": "MacroBaseConfTest", "superclass": "", "interfaces": "", "fields": [], "file": "legacy/src/test/java/macrobase/conf/MacroBaseConfTest.java"}, "test_case": {"identifier": "missingStringTest", "parameters": "()", "modifiers": "@Test(expected = MissingParameterException.class) public", "return": "void", "body": "@Test(expected = MissingParameterException.class)\n    public void missingStringTest() throws ConfigurationException {\n        (new MacroBaseConf()).getString(\"dud\");\n    }", "signature": "void missingStringTest()", "full_signature": "@Test(expected = MissingParameterException.class) public void missingStringTest()", "class_method_signature": "MacroBaseConfTest.missingStringTest()", "testcase": true, "constructor": false, "invocations": ["getString"]}, "focal_class": {"identifier": "MacroBaseConf", "superclass": "extends Configuration", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(MacroBaseConf.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(MacroBaseConf.class)", "var_name": "log"}, {"original_string": "public static final String QUERY_NAME = \"macrobase.query.name\";", "modifier": "public static final", "type": "String", "declarator": "QUERY_NAME = \"macrobase.query.name\"", "var_name": "QUERY_NAME"}, {"original_string": "public static final String PIPELINE_NAME = \"macrobase.pipeline.class\";", "modifier": "public static final", "type": "String", "declarator": "PIPELINE_NAME = \"macrobase.pipeline.class\"", "var_name": "PIPELINE_NAME"}, {"original_string": "public static final String TARGET_PERCENTILE = \"macrobase.analysis.targetPercentile\";", "modifier": "public static final", "type": "String", "declarator": "TARGET_PERCENTILE = \"macrobase.analysis.targetPercentile\"", "var_name": "TARGET_PERCENTILE"}, {"original_string": "public static final String MIN_SUPPORT = \"macrobase.analysis.minSupport\";", "modifier": "public static final", "type": "String", "declarator": "MIN_SUPPORT = \"macrobase.analysis.minSupport\"", "var_name": "MIN_SUPPORT"}, {"original_string": "public static final String MIN_OI_RATIO = \"macrobase.analysis.minOIRatio\";", "modifier": "public static final", "type": "String", "declarator": "MIN_OI_RATIO = \"macrobase.analysis.minOIRatio\"", "var_name": "MIN_OI_RATIO"}, {"original_string": "public static final String ATTRIBUTE_COMBINATIONS = \"macrobase.analysis.summary.findAttributeCombinations\";", "modifier": "public static final", "type": "String", "declarator": "ATTRIBUTE_COMBINATIONS = \"macrobase.analysis.summary.findAttributeCombinations\"", "var_name": "ATTRIBUTE_COMBINATIONS"}, {"original_string": "public static final String RANDOM_SEED = \"macrobase.analysis.randomSeed\";", "modifier": "public static final", "type": "String", "declarator": "RANDOM_SEED = \"macrobase.analysis.randomSeed\"", "var_name": "RANDOM_SEED"}, {"original_string": "public static final String USE_PERCENTILE = \"macrobase.analysis.usePercentile\";", "modifier": "public static final", "type": "String", "declarator": "USE_PERCENTILE = \"macrobase.analysis.usePercentile\"", "var_name": "USE_PERCENTILE"}, {"original_string": "public static final String TRANSFORM_TYPE = \"macrobase.analysis.transformType\";", "modifier": "public static final", "type": "String", "declarator": "TRANSFORM_TYPE = \"macrobase.analysis.transformType\"", "var_name": "TRANSFORM_TYPE"}, {"original_string": "public static final String WARMUP_COUNT = \"macrobase.analysis.streaming.warmupCount\";", "modifier": "public static final", "type": "String", "declarator": "WARMUP_COUNT = \"macrobase.analysis.streaming.warmupCount\"", "var_name": "WARMUP_COUNT"}, {"original_string": "public static final String TUPLE_BATCH_SIZE = \"macrobase.analysis.streaming.tupleBatchSize\";", "modifier": "public static final", "type": "String", "declarator": "TUPLE_BATCH_SIZE = \"macrobase.analysis.streaming.tupleBatchSize\"", "var_name": "TUPLE_BATCH_SIZE"}, {"original_string": "public static final String INPUT_RESERVOIR_SIZE = \"macrobase.analysis.streaming.inputReservoirSize\";", "modifier": "public static final", "type": "String", "declarator": "INPUT_RESERVOIR_SIZE = \"macrobase.analysis.streaming.inputReservoirSize\"", "var_name": "INPUT_RESERVOIR_SIZE"}, {"original_string": "public static final String SCORE_RESERVOIR_SIZE = \"macrobase.analysis.streaming.scoreReservoirSize\";", "modifier": "public static final", "type": "String", "declarator": "SCORE_RESERVOIR_SIZE = \"macrobase.analysis.streaming.scoreReservoirSize\"", "var_name": "SCORE_RESERVOIR_SIZE"}, {"original_string": "public static final String SUMMARY_UPDATE_PERIOD = \"macrobase.analysis.streaming.summaryUpdatePeriod\";", "modifier": "public static final", "type": "String", "declarator": "SUMMARY_UPDATE_PERIOD = \"macrobase.analysis.streaming.summaryUpdatePeriod\"", "var_name": "SUMMARY_UPDATE_PERIOD"}, {"original_string": "public static final String DECAY_TYPE = \"macrobase.analysis.streaming.decayType\";", "modifier": "public static final", "type": "String", "declarator": "DECAY_TYPE = \"macrobase.analysis.streaming.decayType\"", "var_name": "DECAY_TYPE"}, {"original_string": "public static final String DECAY_RATE = \"macrobase.analysis.streaming.decayRate\";", "modifier": "public static final", "type": "String", "declarator": "DECAY_RATE = \"macrobase.analysis.streaming.decayRate\"", "var_name": "DECAY_RATE"}, {"original_string": "public static final String MODEL_UPDATE_PERIOD = \"macrobase.analysis.streaming.modelUpdatePeriod\";", "modifier": "public static final", "type": "String", "declarator": "MODEL_UPDATE_PERIOD = \"macrobase.analysis.streaming.modelUpdatePeriod\"", "var_name": "MODEL_UPDATE_PERIOD"}, {"original_string": "public static final String OUTLIER_ITEM_SUMMARY_SIZE = \"macrobase.analysis.streaming.outlierSummarySize\";", "modifier": "public static final", "type": "String", "declarator": "OUTLIER_ITEM_SUMMARY_SIZE = \"macrobase.analysis.streaming.outlierSummarySize\"", "var_name": "OUTLIER_ITEM_SUMMARY_SIZE"}, {"original_string": "public static final String INLIER_ITEM_SUMMARY_SIZE = \"macrobase.analysis.streaming.inlierItemSummarySize\";", "modifier": "public static final", "type": "String", "declarator": "INLIER_ITEM_SUMMARY_SIZE = \"macrobase.analysis.streaming.inlierItemSummarySize\"", "var_name": "INLIER_ITEM_SUMMARY_SIZE"}, {"original_string": "public static final String TUPLE_WINDOW = \"macrobase.analysis.timeseries.tupleWindow\";", "modifier": "public static final", "type": "String", "declarator": "TUPLE_WINDOW = \"macrobase.analysis.timeseries.tupleWindow\"", "var_name": "TUPLE_WINDOW"}, {"original_string": "public static final String TIME_WINDOW = \"macrobase.analysis.timeseries.timeWindow\";", "modifier": "public static final", "type": "String", "declarator": "TIME_WINDOW = \"macrobase.analysis.timeseries.timeWindow\"", "var_name": "TIME_WINDOW"}, {"original_string": "public static final String MCD_ALPHA = \"macrobase.analysis.mcd.alpha\";", "modifier": "public static final", "type": "String", "declarator": "MCD_ALPHA = \"macrobase.analysis.mcd.alpha\"", "var_name": "MCD_ALPHA"}, {"original_string": "public static final String MCD_STOPPING_DELTA = \"macrobase.analysis.mcd.stoppingDelta\";", "modifier": "public static final", "type": "String", "declarator": "MCD_STOPPING_DELTA = \"macrobase.analysis.mcd.stoppingDelta\"", "var_name": "MCD_STOPPING_DELTA"}, {"original_string": "public static final String RANDOM_PROJECTION_K = \"macrobase.analysis.randomProjection.k\";", "modifier": "public static final", "type": "String", "declarator": "RANDOM_PROJECTION_K = \"macrobase.analysis.randomProjection.k\"", "var_name": "RANDOM_PROJECTION_K"}, {"original_string": "public static final String TRUNCATE_K = \"macrobase.analysis.truncate.k\";", "modifier": "public static final", "type": "String", "declarator": "TRUNCATE_K = \"macrobase.analysis.truncate.k\"", "var_name": "TRUNCATE_K"}, {"original_string": "public static final String DATA_LOADER_TYPE = \"macrobase.loader.loaderType\";", "modifier": "public static final", "type": "String", "declarator": "DATA_LOADER_TYPE = \"macrobase.loader.loaderType\"", "var_name": "DATA_LOADER_TYPE"}, {"original_string": "public static final String TIME_COLUMN = \"macrobase.loader.timeColumn\";", "modifier": "public static final", "type": "String", "declarator": "TIME_COLUMN = \"macrobase.loader.timeColumn\"", "var_name": "TIME_COLUMN"}, {"original_string": "public static final String ATTRIBUTES = \"macrobase.loader.attributes\";", "modifier": "public static final", "type": "String", "declarator": "ATTRIBUTES = \"macrobase.loader.attributes\"", "var_name": "ATTRIBUTES"}, {"original_string": "public static final String METRICS = \"macrobase.loader.metrics\";", "modifier": "public static final", "type": "String", "declarator": "METRICS = \"macrobase.loader.metrics\"", "var_name": "METRICS"}, {"original_string": "public static final String LOW_METRIC_TRANSFORM = \"macrobase.analysis.metrics.lowTransform\";", "modifier": "public static final", "type": "String", "declarator": "LOW_METRIC_TRANSFORM = \"macrobase.analysis.metrics.lowTransform\"", "var_name": "LOW_METRIC_TRANSFORM"}, {"original_string": "public static final String JDBC_PROPERTIES = \"macrobase.loader.jdbc.properties\";", "modifier": "public static final", "type": "String", "declarator": "JDBC_PROPERTIES = \"macrobase.loader.jdbc.properties\"", "var_name": "JDBC_PROPERTIES"}, {"original_string": "public static final String BASE_QUERY = \"macrobase.loader.db.baseQuery\";", "modifier": "public static final", "type": "String", "declarator": "BASE_QUERY = \"macrobase.loader.db.baseQuery\"", "var_name": "BASE_QUERY"}, {"original_string": "public static final String DB_USER = \"macrobase.loader.db.user\";", "modifier": "public static final", "type": "String", "declarator": "DB_USER = \"macrobase.loader.db.user\"", "var_name": "DB_USER"}, {"original_string": "public static final String DB_PASSWORD = \"macrobase.loader.db.password\";", "modifier": "public static final", "type": "String", "declarator": "DB_PASSWORD = \"macrobase.loader.db.password\"", "var_name": "DB_PASSWORD"}, {"original_string": "public static final String DB_NAME = \"macrobase.loader.db.database\";", "modifier": "public static final", "type": "String", "declarator": "DB_NAME = \"macrobase.loader.db.database\"", "var_name": "DB_NAME"}, {"original_string": "public static final String DB_URL = \"macrobase.loader.db.url\";", "modifier": "public static final", "type": "String", "declarator": "DB_URL = \"macrobase.loader.db.url\"", "var_name": "DB_URL"}, {"original_string": "public static final String DB_CACHE_DIR = \"macrobase.loader.db.cacheDirectory\";", "modifier": "public static final", "type": "String", "declarator": "DB_CACHE_DIR = \"macrobase.loader.db.cacheDirectory\"", "var_name": "DB_CACHE_DIR"}, {"original_string": "public static final String DB_CACHE_CHUNK_SIZE = \"macrobase.loader.db.cacheChunkSizeTuples\";", "modifier": "public static final", "type": "String", "declarator": "DB_CACHE_CHUNK_SIZE = \"macrobase.loader.db.cacheChunkSizeTuples\"", "var_name": "DB_CACHE_CHUNK_SIZE"}, {"original_string": "public static final String CSV_INPUT_FILE = \"macrobase.loader.csv.file\";", "modifier": "public static final", "type": "String", "declarator": "CSV_INPUT_FILE = \"macrobase.loader.csv.file\"", "var_name": "CSV_INPUT_FILE"}, {"original_string": "public static final String CSV_COMPRESSION = \"macrobase.loader.csv.compression\";", "modifier": "public static final", "type": "String", "declarator": "CSV_COMPRESSION = \"macrobase.loader.csv.compression\"", "var_name": "CSV_COMPRESSION"}, {"original_string": "public static final String OUTLIER_STATIC_THRESHOLD = \"macrobase.analysis.classify.outlierStaticThreshold\";", "modifier": "public static final", "type": "String", "declarator": "OUTLIER_STATIC_THRESHOLD = \"macrobase.analysis.classify.outlierStaticThreshold\"", "var_name": "OUTLIER_STATIC_THRESHOLD"}, {"original_string": "private final DatumEncoder datumEncoder;", "modifier": "private final", "type": "DatumEncoder", "declarator": "datumEncoder", "var_name": "datumEncoder"}, {"original_string": "private Map<String, String> _conf;", "modifier": "private", "type": "Map<String, String>", "declarator": "_conf", "var_name": "_conf"}], "methods": [{"identifier": "MacroBaseConf", "parameters": "()", "modifiers": "public", "return": "", "signature": " MacroBaseConf()", "full_signature": "public  MacroBaseConf()", "class_method_signature": "MacroBaseConf.MacroBaseConf()", "testcase": false, "constructor": true}, {"identifier": "constructIngester", "parameters": "()", "modifiers": "public", "return": "DataIngester", "signature": "DataIngester constructIngester()", "full_signature": "public DataIngester constructIngester()", "class_method_signature": "MacroBaseConf.constructIngester()", "testcase": false, "constructor": false}, {"identifier": "getEncoder", "parameters": "()", "modifiers": "public", "return": "DatumEncoder", "signature": "DatumEncoder getEncoder()", "full_signature": "public DatumEncoder getEncoder()", "class_method_signature": "MacroBaseConf.getEncoder()", "testcase": false, "constructor": false}, {"identifier": "getRandom", "parameters": "()", "modifiers": "public", "return": "Random", "signature": "Random getRandom()", "full_signature": "public Random getRandom()", "class_method_signature": "MacroBaseConf.getRandom()", "testcase": false, "constructor": false}, {"identifier": "constructTransform", "parameters": "()", "modifiers": "public", "return": "BatchTrainScore", "signature": "BatchTrainScore constructTransform()", "full_signature": "public BatchTrainScore constructTransform()", "class_method_signature": "MacroBaseConf.constructTransform()", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(String key, Object value)", "modifiers": "@JsonAnySetter public", "return": "MacroBaseConf", "signature": "MacroBaseConf set(String key, Object value)", "full_signature": "@JsonAnySetter public MacroBaseConf set(String key, Object value)", "class_method_signature": "MacroBaseConf.set(String key, Object value)", "testcase": false, "constructor": false}, {"identifier": "isSet", "parameters": "(String key)", "modifiers": "public", "return": "Boolean", "signature": "Boolean isSet(String key)", "full_signature": "public Boolean isSet(String key)", "class_method_signature": "MacroBaseConf.isSet(String key)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(String key)", "modifiers": "public", "return": "String", "signature": "String getString(String key)", "full_signature": "public String getString(String key)", "class_method_signature": "MacroBaseConf.getString(String key)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(String key, String defaultValue)", "modifiers": "public", "return": "String", "signature": "String getString(String key, String defaultValue)", "full_signature": "public String getString(String key, String defaultValue)", "class_method_signature": "MacroBaseConf.getString(String key, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getStringList", "parameters": "(String key)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getStringList(String key)", "full_signature": "public List<String> getStringList(String key)", "class_method_signature": "MacroBaseConf.getStringList(String key)", "testcase": false, "constructor": false}, {"identifier": "getStringList", "parameters": "(String key, List<String> defaultValue)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getStringList(String key, List<String> defaultValue)", "full_signature": "public List<String> getStringList(String key, List<String> defaultValue)", "class_method_signature": "MacroBaseConf.getStringList(String key, List<String> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "(String key)", "modifiers": "public", "return": "Double", "signature": "Double getDouble(String key)", "full_signature": "public Double getDouble(String key)", "class_method_signature": "MacroBaseConf.getDouble(String key)", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "(String key, Double defaultValue)", "modifiers": "public", "return": "Double", "signature": "Double getDouble(String key, Double defaultValue)", "full_signature": "public Double getDouble(String key, Double defaultValue)", "class_method_signature": "MacroBaseConf.getDouble(String key, Double defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getMap", "parameters": "(String key)", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getMap(String key)", "full_signature": "public Map<String, String> getMap(String key)", "class_method_signature": "MacroBaseConf.getMap(String key)", "testcase": false, "constructor": false}, {"identifier": "getDoubleList", "parameters": "(String key)", "modifiers": "public", "return": "List<Double>", "signature": "List<Double> getDoubleList(String key)", "full_signature": "public List<Double> getDoubleList(String key)", "class_method_signature": "MacroBaseConf.getDoubleList(String key)", "testcase": false, "constructor": false}, {"identifier": "getDoubleList", "parameters": "(String key, List<Double> defaultValue)", "modifiers": "public", "return": "List<Double>", "signature": "List<Double> getDoubleList(String key, List<Double> defaultValue)", "full_signature": "public List<Double> getDoubleList(String key, List<Double> defaultValue)", "class_method_signature": "MacroBaseConf.getDoubleList(String key, List<Double> defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getInt", "parameters": "(String key)", "modifiers": "public", "return": "Integer", "signature": "Integer getInt(String key)", "full_signature": "public Integer getInt(String key)", "class_method_signature": "MacroBaseConf.getInt(String key)", "testcase": false, "constructor": false}, {"identifier": "getInt", "parameters": "(String key, Integer defaultValue)", "modifiers": "public", "return": "Integer", "signature": "Integer getInt(String key, Integer defaultValue)", "full_signature": "public Integer getInt(String key, Integer defaultValue)", "class_method_signature": "MacroBaseConf.getInt(String key, Integer defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(String key)", "modifiers": "public", "return": "Long", "signature": "Long getLong(String key)", "full_signature": "public Long getLong(String key)", "class_method_signature": "MacroBaseConf.getLong(String key)", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(String key, Long defaultValue)", "modifiers": "public", "return": "Long", "signature": "Long getLong(String key, Long defaultValue)", "full_signature": "public Long getLong(String key, Long defaultValue)", "class_method_signature": "MacroBaseConf.getLong(String key, Long defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(String key)", "modifiers": "public", "return": "Boolean", "signature": "Boolean getBoolean(String key)", "full_signature": "public Boolean getBoolean(String key)", "class_method_signature": "MacroBaseConf.getBoolean(String key)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(String key, Boolean defaultValue)", "modifiers": "public", "return": "Boolean", "signature": "Boolean getBoolean(String key, Boolean defaultValue)", "full_signature": "public Boolean getBoolean(String key, Boolean defaultValue)", "class_method_signature": "MacroBaseConf.getBoolean(String key, Boolean defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getCsvCompression", "parameters": "()", "modifiers": "public", "return": "CSVIngester.Compression", "signature": "CSVIngester.Compression getCsvCompression()", "full_signature": "public CSVIngester.Compression getCsvCompression()", "class_method_signature": "MacroBaseConf.getCsvCompression()", "testcase": false, "constructor": false}, {"identifier": "getDecayType", "parameters": "()", "modifiers": "public", "return": "PeriodType", "signature": "PeriodType getDecayType()", "full_signature": "public PeriodType getDecayType()", "class_method_signature": "MacroBaseConf.getDecayType()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "MacroBaseConf.toString()", "testcase": false, "constructor": false}, {"identifier": "loadSystemProperties", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void loadSystemProperties()", "full_signature": "public void loadSystemProperties()", "class_method_signature": "MacroBaseConf.loadSystemProperties()", "testcase": false, "constructor": false}], "file": "legacy/src/main/java/macrobase/conf/MacroBaseConf.java"}, "focal_method": {"identifier": "getString", "parameters": "(String key)", "modifiers": "public", "return": "String", "body": "public String getString(String key) throws ConfigurationException {\n        if (!_conf.containsKey(key)) {\n            throw new MissingParameterException(key);\n        }\n        return _conf.get(key);\n    }", "signature": "String getString(String key)", "full_signature": "public String getString(String key)", "class_method_signature": "MacroBaseConf.getString(String key)", "testcase": false, "constructor": false, "invocations": ["containsKey", "get"]}, "repository": {"repo_id": 48199522, "url": "https://github.com/stanford-futuredata/macrobase", "language": "Java", "is_fork": false, "fork_count": 116, "stargazer_count": 606, "size": 27614, "license": "licensed"}}