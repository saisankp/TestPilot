{"test_class": {"identifier": "EditablePropertyTest", "superclass": "", "interfaces": "", "fields": [], "file": "observable-ui/testSrc/com/android/tools/idea/observable/ui/EditablePropertyTest.java"}, "test_case": {"identifier": "testEditableProperty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEditableProperty() {\n    JTextField field = new JTextField();\n\n    EditableProperty editableProperty = new EditableProperty(field);\n    CountListener listener = new CountListener();\n    editableProperty.addListener(listener);\n\n    assertThat(editableProperty.get()).isTrue();\n    assertThat(listener.getCount()).isEqualTo(0);\n\n    field.setEditable(false);\n    assertThat(editableProperty.get()).isFalse();\n    assertThat(listener.getCount()).isEqualTo(1);\n\n    editableProperty.set(true);\n    assertThat(field.isEditable()).isTrue();\n    assertThat(listener.getCount()).isEqualTo(2);\n  }", "signature": "void testEditableProperty()", "full_signature": "@Test public void testEditableProperty()", "class_method_signature": "EditablePropertyTest.testEditableProperty()", "testcase": true, "constructor": false, "invocations": ["addListener", "isTrue", "assertThat", "get", "isEqualTo", "assertThat", "getCount", "setEditable", "isFalse", "assertThat", "get", "isEqualTo", "assertThat", "getCount", "set", "isTrue", "assertThat", "isEditable", "isEqualTo", "assertThat", "getCount"]}, "focal_class": {"identifier": "EditableProperty", "superclass": "extends BoolProperty", "interfaces": "implements PropertyChangeListener", "fields": [{"original_string": "@NotNull private final JTextComponent myTextComponent;", "modifier": "@NotNull private final", "type": "JTextComponent", "declarator": "myTextComponent", "var_name": "myTextComponent"}], "methods": [{"identifier": "EditableProperty", "parameters": "(@NotNull JTextComponent textComponent)", "modifiers": "public", "return": "", "signature": " EditableProperty(@NotNull JTextComponent textComponent)", "full_signature": "public  EditableProperty(@NotNull JTextComponent textComponent)", "class_method_signature": "EditableProperty.EditableProperty(@NotNull JTextComponent textComponent)", "testcase": false, "constructor": true}, {"identifier": "propertyChange", "parameters": "(PropertyChangeEvent propertyChangeEvent)", "modifiers": "@Override public", "return": "void", "signature": "void propertyChange(PropertyChangeEvent propertyChangeEvent)", "full_signature": "@Override public void propertyChange(PropertyChangeEvent propertyChangeEvent)", "class_method_signature": "EditableProperty.propertyChange(PropertyChangeEvent propertyChangeEvent)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "Boolean", "signature": "Boolean get()", "full_signature": "@NotNull @Override public Boolean get()", "class_method_signature": "EditableProperty.get()", "testcase": false, "constructor": false}, {"identifier": "setDirectly", "parameters": "(@NotNull Boolean value)", "modifiers": "@Override protected", "return": "void", "signature": "void setDirectly(@NotNull Boolean value)", "full_signature": "@Override protected void setDirectly(@NotNull Boolean value)", "class_method_signature": "EditableProperty.setDirectly(@NotNull Boolean value)", "testcase": false, "constructor": false}], "file": "observable-ui/src/com/android/tools/idea/observable/ui/EditableProperty.java"}, "focal_method": {"identifier": "EditableProperty", "parameters": "(@NotNull JTextComponent textComponent)", "modifiers": "public", "return": "", "body": "public EditableProperty(@NotNull JTextComponent textComponent) {\n    myTextComponent = textComponent;\n    myTextComponent.addPropertyChangeListener(\"editable\", this);\n  }", "signature": " EditableProperty(@NotNull JTextComponent textComponent)", "full_signature": "public  EditableProperty(@NotNull JTextComponent textComponent)", "class_method_signature": "EditableProperty.EditableProperty(@NotNull JTextComponent textComponent)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}