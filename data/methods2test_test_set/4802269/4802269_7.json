{"test_class": {"identifier": "DXRecordTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ObjectMapper mapper = new ObjectMapper();", "modifier": "private static final", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}, {"original_string": "private DXProject testProject;", "modifier": "private", "type": "DXProject", "declarator": "testProject", "var_name": "testProject"}], "file": "src/java/src/test/java/com/dnanexus/DXRecordTest.java"}, "test_case": {"identifier": "testGetInstance", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetInstance() {\n        DXRecord record = DXRecord.getInstance(\"record-000011112222333344445555\");\n        Assert.assertEquals(\"record-000011112222333344445555\", record.getId());\n        Assert.assertEquals(null, record.getProject());\n\n        DXRecord record2 =\n                DXRecord.getInstance(\"record-000100020003000400050006\",\n                        DXProject.getInstance(\"project-123412341234123412341234\"));\n        Assert.assertEquals(\"record-000100020003000400050006\", record2.getId());\n        Assert.assertEquals(\"project-123412341234123412341234\", record2.getProject().getId());\n\n        try {\n            DXRecord.getInstance(null);\n            Assert.fail(\"Expected creation without setting ID to fail\");\n        } catch (NullPointerException e) {\n            // Expected\n        }\n        try {\n            DXRecord.getInstance(\"record-123412341234123412341234\", (DXContainer) null);\n            Assert.fail(\"Expected creation without setting project to fail\");\n        } catch (NullPointerException e) {\n            // Expected\n        }\n        try {\n            DXRecord.getInstance(null, DXProject.getInstance(\"project-123412341234123412341234\"));\n            Assert.fail(\"Expected creation without setting ID to fail\");\n        } catch (NullPointerException e) {\n            // Expected\n        }\n    }", "signature": "void testGetInstance()", "full_signature": "@Test public void testGetInstance()", "class_method_signature": "DXRecordTest.testGetInstance()", "testcase": true, "constructor": false, "invocations": ["getInstance", "assertEquals", "getId", "assertEquals", "getProject", "getInstance", "getInstance", "assertEquals", "getId", "assertEquals", "getId", "getProject", "getInstance", "fail", "getInstance", "fail", "getInstance", "getInstance", "fail"]}, "focal_class": {"identifier": "DXRecord", "superclass": "extends DXDataObject", "interfaces": "", "fields": [{"original_string": "private static final ObjectMapper mapper = new ObjectMapper();", "modifier": "private static final", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}], "methods": [{"identifier": "create", "parameters": "(Map<String, Object> value)", "modifiers": "@JsonCreator private static", "return": "DXRecord", "signature": "DXRecord create(Map<String, Object> value)", "full_signature": "@JsonCreator private static DXRecord create(Map<String, Object> value)", "class_method_signature": "DXRecord.create(Map<String, Object> value)", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "(String recordId)", "modifiers": "public static", "return": "DXRecord", "signature": "DXRecord getInstance(String recordId)", "full_signature": "public static DXRecord getInstance(String recordId)", "class_method_signature": "DXRecord.getInstance(String recordId)", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "(String recordId, DXContainer project)", "modifiers": "public static", "return": "DXRecord", "signature": "DXRecord getInstance(String recordId, DXContainer project)", "full_signature": "public static DXRecord getInstance(String recordId, DXContainer project)", "class_method_signature": "DXRecord.getInstance(String recordId, DXContainer project)", "testcase": false, "constructor": false}, {"identifier": "getInstanceWithCachedDescribe", "parameters": "(String recordId, DXContainer project,\n            DXEnvironment env, JsonNode describe)", "modifiers": "static", "return": "DXRecord", "signature": "DXRecord getInstanceWithCachedDescribe(String recordId, DXContainer project,\n            DXEnvironment env, JsonNode describe)", "full_signature": "static DXRecord getInstanceWithCachedDescribe(String recordId, DXContainer project,\n            DXEnvironment env, JsonNode describe)", "class_method_signature": "DXRecord.getInstanceWithCachedDescribe(String recordId, DXContainer project,\n            DXEnvironment env, JsonNode describe)", "testcase": false, "constructor": false}, {"identifier": "getInstanceWithEnvironment", "parameters": "(String recordId, DXContainer project,\n            DXEnvironment env)", "modifiers": "public static", "return": "DXRecord", "signature": "DXRecord getInstanceWithEnvironment(String recordId, DXContainer project,\n            DXEnvironment env)", "full_signature": "public static DXRecord getInstanceWithEnvironment(String recordId, DXContainer project,\n            DXEnvironment env)", "class_method_signature": "DXRecord.getInstanceWithEnvironment(String recordId, DXContainer project,\n            DXEnvironment env)", "testcase": false, "constructor": false}, {"identifier": "getInstanceWithEnvironment", "parameters": "(String recordId, DXEnvironment env)", "modifiers": "public static", "return": "DXRecord", "signature": "DXRecord getInstanceWithEnvironment(String recordId, DXEnvironment env)", "full_signature": "public static DXRecord getInstanceWithEnvironment(String recordId, DXEnvironment env)", "class_method_signature": "DXRecord.getInstanceWithEnvironment(String recordId, DXEnvironment env)", "testcase": false, "constructor": false}, {"identifier": "newRecord", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder newRecord()", "full_signature": "public static Builder newRecord()", "class_method_signature": "DXRecord.newRecord()", "testcase": false, "constructor": false}, {"identifier": "newRecordWithEnvironment", "parameters": "(DXEnvironment env)", "modifiers": "public static", "return": "Builder", "signature": "Builder newRecordWithEnvironment(DXEnvironment env)", "full_signature": "public static Builder newRecordWithEnvironment(DXEnvironment env)", "class_method_signature": "DXRecord.newRecordWithEnvironment(DXEnvironment env)", "testcase": false, "constructor": false}, {"identifier": "DXRecord", "parameters": "(String recordId, DXContainer project, DXEnvironment env, JsonNode describe)", "modifiers": "private", "return": "", "signature": " DXRecord(String recordId, DXContainer project, DXEnvironment env, JsonNode describe)", "full_signature": "private  DXRecord(String recordId, DXContainer project, DXEnvironment env, JsonNode describe)", "class_method_signature": "DXRecord.DXRecord(String recordId, DXContainer project, DXEnvironment env, JsonNode describe)", "testcase": false, "constructor": true}, {"identifier": "DXRecord", "parameters": "(String recordId, DXEnvironment env)", "modifiers": "private", "return": "", "signature": " DXRecord(String recordId, DXEnvironment env)", "full_signature": "private  DXRecord(String recordId, DXEnvironment env)", "class_method_signature": "DXRecord.DXRecord(String recordId, DXEnvironment env)", "testcase": false, "constructor": true}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "DXRecord", "signature": "DXRecord close()", "full_signature": "@Override public DXRecord close()", "class_method_signature": "DXRecord.close()", "testcase": false, "constructor": false}, {"identifier": "closeAndWait", "parameters": "()", "modifiers": "@Override public", "return": "DXRecord", "signature": "DXRecord closeAndWait()", "full_signature": "@Override public DXRecord closeAndWait()", "class_method_signature": "DXRecord.closeAndWait()", "testcase": false, "constructor": false}, {"identifier": "describe", "parameters": "()", "modifiers": "@Override public", "return": "Describe", "signature": "Describe describe()", "full_signature": "@Override public Describe describe()", "class_method_signature": "DXRecord.describe()", "testcase": false, "constructor": false}, {"identifier": "describe", "parameters": "(DXDataObject.DescribeOptions options)", "modifiers": "@Override public", "return": "Describe", "signature": "Describe describe(DXDataObject.DescribeOptions options)", "full_signature": "@Override public Describe describe(DXDataObject.DescribeOptions options)", "class_method_signature": "DXRecord.describe(DXDataObject.DescribeOptions options)", "testcase": false, "constructor": false}, {"identifier": "getCachedDescribe", "parameters": "()", "modifiers": "@Override public", "return": "Describe", "signature": "Describe getCachedDescribe()", "full_signature": "@Override public Describe getCachedDescribe()", "class_method_signature": "DXRecord.getCachedDescribe()", "testcase": false, "constructor": false}], "file": "src/java/src/main/java/com/dnanexus/DXRecord.java"}, "focal_method": {"identifier": "getInstance", "parameters": "(String recordId)", "modifiers": "public static", "return": "DXRecord", "body": "public static DXRecord getInstance(String recordId) {\n        return new DXRecord(recordId, null);\n    }", "signature": "DXRecord getInstance(String recordId)", "full_signature": "public static DXRecord getInstance(String recordId)", "class_method_signature": "DXRecord.getInstance(String recordId)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4802269, "url": "https://github.com/dnanexus/dx-toolkit", "stars": 59, "created": "6/27/2012 12:23:47 AM +00:00", "updates": "2020-01-21T16:35:18+00:00", "fork": "False", "license": "licensed"}}