{"test_class": {"identifier": "TimerImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Timer realTimer;", "modifier": "private static", "type": "Timer", "declarator": "realTimer", "var_name": "realTimer"}, {"original_string": "private Timer timerMock;", "modifier": "private", "type": "Timer", "declarator": "timerMock", "var_name": "timerMock"}, {"original_string": "private ITask taskMock;", "modifier": "private", "type": "ITask", "declarator": "taskMock", "var_name": "taskMock"}, {"original_string": "private IQueue<ITask> taskQueueMock;", "modifier": "private", "type": "IQueue<ITask>", "declarator": "taskQueueMock", "var_name": "taskQueueMock"}, {"original_string": "private IKey taskQueueKey;", "modifier": "private", "type": "IKey", "declarator": "taskQueueKey", "var_name": "taskQueueKey"}], "file": "CoreFeatures/Timer/Timer/src/test/java/info/smart_tools/smartactors/timer/timer/TimerImplTest.java"}, "test_case": {"identifier": "Should_cancelCancelTheTask", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_cancelCancelTheTask()\n            throws Exception {\n        ITimer timer = new TimerImpl(realTimer);\n        timer.schedule(taskMock, System.currentTimeMillis() + 500).cancel();\n        Thread.sleep(500);\n        verify(taskQueueMock, times(0)).put(any());\n    }", "signature": "void Should_cancelCancelTheTask()", "full_signature": "@Test public void Should_cancelCancelTheTask()", "class_method_signature": "TimerImplTest.Should_cancelCancelTheTask()", "testcase": true, "constructor": false, "invocations": ["cancel", "schedule", "currentTimeMillis", "sleep", "put", "verify", "times", "any"]}, "focal_class": {"identifier": "TimerImpl", "superclass": "", "interfaces": "implements ITimer", "fields": [{"original_string": "private final Timer timer;", "modifier": "private final", "type": "Timer", "declarator": "timer", "var_name": "timer"}], "methods": [{"identifier": "TimerImpl", "parameters": "(final Timer timer)", "modifiers": "public", "return": "", "signature": " TimerImpl(final Timer timer)", "full_signature": "public  TimerImpl(final Timer timer)", "class_method_signature": "TimerImpl.TimerImpl(final Timer timer)", "testcase": false, "constructor": true}, {"identifier": "schedule", "parameters": "(final ITask task, final long time)", "modifiers": "@Override public", "return": "ITimerTask", "signature": "ITimerTask schedule(final ITask task, final long time)", "full_signature": "@Override public ITimerTask schedule(final ITask task, final long time)", "class_method_signature": "TimerImpl.schedule(final ITask task, final long time)", "testcase": false, "constructor": false}], "file": "CoreFeatures/Timer/Timer/src/main/java/info/smart_tools/smartactors/timer/timer/TimerImpl.java"}, "focal_method": {"identifier": "schedule", "parameters": "(final ITask task, final long time)", "modifiers": "@Override public", "return": "ITimerTask", "body": "@Override\n    public ITimerTask schedule(final ITask task, final long time) throws TaskScheduleException {\n        return new TimerTaskImpl(task, timer, time);\n    }", "signature": "ITimerTask schedule(final ITask task, final long time)", "full_signature": "@Override public ITimerTask schedule(final ITask task, final long time)", "class_method_signature": "TimerImpl.schedule(final ITask task, final long time)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}