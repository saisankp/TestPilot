{"test_class": {"identifier": "PaymentMethodTokenSenderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String MERCHANT_PUBLIC_KEY_BASE64 =\n      \"BOdoXP+9Aq473SnGwg3JU1aiNpsd9vH2ognq4PtDtlLGa3Kj8TPf+jaQNPyDSkh3JUhiS0KyrrlWhAgNZKHYF2Y=\";", "modifier": "private static final", "type": "String", "declarator": "MERCHANT_PUBLIC_KEY_BASE64 =\n      \"BOdoXP+9Aq473SnGwg3JU1aiNpsd9vH2ognq4PtDtlLGa3Kj8TPf+jaQNPyDSkh3JUhiS0KyrrlWhAgNZKHYF2Y=\"", "var_name": "MERCHANT_PUBLIC_KEY_BASE64"}, {"original_string": "private static final String MERCHANT_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgCPSuFr4iSIaQprjj\"\n          + \"chHPyDu2NXFe0vDBoTpPkYaK9dehRANCAATnaFz/vQKuO90pxsINyVNWojabHfbx\"\n          + \"9qIJ6uD7Q7ZSxmtyo/Ez3/o2kDT8g0pIdyVIYktCsq65VoQIDWSh2Bdm\";", "modifier": "private static final", "type": "String", "declarator": "MERCHANT_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgCPSuFr4iSIaQprjj\"\n          + \"chHPyDu2NXFe0vDBoTpPkYaK9dehRANCAATnaFz/vQKuO90pxsINyVNWojabHfbx\"\n          + \"9qIJ6uD7Q7ZSxmtyo/Ez3/o2kDT8g0pIdyVIYktCsq65VoQIDWSh2Bdm\"", "var_name": "MERCHANT_PRIVATE_KEY_PKCS8_BASE64"}, {"original_string": "private static final String GOOGLE_VERIFYING_PUBLIC_KEYS_JSON =\n      \"{\\n\"\n          + \"  \\\"keys\\\": [\\n\"\n          + \"    {\\n\"\n          + \"      \\\"keyValue\\\": \\\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEPYnHwS8uegWAewQtlxizmLFynw\"\n          + \"HcxRT1PK07cDA6/C4sXrVI1SzZCUx8U8S0LjMrT6ird/VW7be3Mz6t/srtRQ==\\\",\\n\"\n          + \"      \\\"protocolVersion\\\": \\\"ECv1\\\"\\n\"\n          + \"    },\\n\"\n          + \"    {\\n\"\n          + \"      \\\"keyValue\\\": \\\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE/1+3HBVSbdv+j7NaArdgMyoSAM\"\n          + \"43yRydzqdg1TxodSzA96Dj4Mc1EiKroxxunavVIvdxGnJeFViTzFvzFRxyCw==\\\",\\n\"\n          + \"      \\\"keyExpiration\\\": \\\"\"\n          + Instant.now().plus(Duration.standardDays(1)).getMillis()\n          + \"\\\",\\n\"\n          + \"      \\\"protocolVersion\\\": \\\"ECv2\\\"\\n\"\n          + \"    },\\n\"\n          + \"    {\\n\"\n          + \"      \\\"keyValue\\\": \\\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAENXvYqxD5WayKYhuXQevdGdLA8i\"\n          + \"fV4LsRS2uKvFo8wwyiwgQHB9DiKzG6T/P1Fu9Bl7zWy/se5Dy4wk1mJoPuxg==\\\",\\n\"\n          + \"      \\\"keyExpiration\\\": \\\"\"\n          + Instant.now().plus(Duration.standardDays(1)).getMillis()\n          + \"\\\",\\n\"\n          + \"      \\\"protocolVersion\\\": \\\"ECv2SigningOnly\\\"\\n\"\n          + \"    },\\n\"\n          + \"  ],\\n\"\n          + \"}\";", "modifier": "private static final", "type": "String", "declarator": "GOOGLE_VERIFYING_PUBLIC_KEYS_JSON =\n      \"{\\n\"\n          + \"  \\\"keys\\\": [\\n\"\n          + \"    {\\n\"\n          + \"      \\\"keyValue\\\": \\\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEPYnHwS8uegWAewQtlxizmLFynw\"\n          + \"HcxRT1PK07cDA6/C4sXrVI1SzZCUx8U8S0LjMrT6ird/VW7be3Mz6t/srtRQ==\\\",\\n\"\n          + \"      \\\"protocolVersion\\\": \\\"ECv1\\\"\\n\"\n          + \"    },\\n\"\n          + \"    {\\n\"\n          + \"      \\\"keyValue\\\": \\\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE/1+3HBVSbdv+j7NaArdgMyoSAM\"\n          + \"43yRydzqdg1TxodSzA96Dj4Mc1EiKroxxunavVIvdxGnJeFViTzFvzFRxyCw==\\\",\\n\"\n          + \"      \\\"keyExpiration\\\": \\\"\"\n          + Instant.now().plus(Duration.standardDays(1)).getMillis()\n          + \"\\\",\\n\"\n          + \"      \\\"protocolVersion\\\": \\\"ECv2\\\"\\n\"\n          + \"    },\\n\"\n          + \"    {\\n\"\n          + \"      \\\"keyValue\\\": \\\"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAENXvYqxD5WayKYhuXQevdGdLA8i\"\n          + \"fV4LsRS2uKvFo8wwyiwgQHB9DiKzG6T/P1Fu9Bl7zWy/se5Dy4wk1mJoPuxg==\\\",\\n\"\n          + \"      \\\"keyExpiration\\\": \\\"\"\n          + Instant.now().plus(Duration.standardDays(1)).getMillis()\n          + \"\\\",\\n\"\n          + \"      \\\"protocolVersion\\\": \\\"ECv2SigningOnly\\\"\\n\"\n          + \"    },\\n\"\n          + \"  ],\\n\"\n          + \"}\"", "var_name": "GOOGLE_VERIFYING_PUBLIC_KEYS_JSON"}, {"original_string": "private static final String GOOGLE_SIGNING_EC_V1_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgZj/Dldxz8fvKVF5O\"\n          + \"TeAtK6tY3G1McmvhMppe6ayW6GahRANCAAQ9icfBLy56BYB7BC2XGLOYsXKfAdzF\"\n          + \"FPU8rTtwMDr8LixetUjVLNkJTHxTxLQuMytPqKt39Vbtt7czPq3+yu1F\";", "modifier": "private static final", "type": "String", "declarator": "GOOGLE_SIGNING_EC_V1_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgZj/Dldxz8fvKVF5O\"\n          + \"TeAtK6tY3G1McmvhMppe6ayW6GahRANCAAQ9icfBLy56BYB7BC2XGLOYsXKfAdzF\"\n          + \"FPU8rTtwMDr8LixetUjVLNkJTHxTxLQuMytPqKt39Vbtt7czPq3+yu1F\"", "var_name": "GOOGLE_SIGNING_EC_V1_PRIVATE_KEY_PKCS8_BASE64"}, {"original_string": "private static final String GOOGLE_SIGNING_EC_V2_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgKvEdSS8f0mjTCNKev\"\n          + \"aKXIzfNC5b4A104gJWI9TsLIMqhRANCAAT/X7ccFVJt2/6Ps1oCt2AzKhIAz\"\n          + \"jfJHJ3Op2DVPGh1LMD3oOPgxzUSIqujHG6dq9Ui93Eacl4VWJPMW/MVHHIL\";", "modifier": "private static final", "type": "String", "declarator": "GOOGLE_SIGNING_EC_V2_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgKvEdSS8f0mjTCNKev\"\n          + \"aKXIzfNC5b4A104gJWI9TsLIMqhRANCAAT/X7ccFVJt2/6Ps1oCt2AzKhIAz\"\n          + \"jfJHJ3Op2DVPGh1LMD3oOPgxzUSIqujHG6dq9Ui93Eacl4VWJPMW/MVHHIL\"", "var_name": "GOOGLE_SIGNING_EC_V2_PRIVATE_KEY_PKCS8_BASE64"}, {"original_string": "private static final String GOOGLE_SIGNING_EC_V2_INTERMEDIATE_PUBLIC_KEY_X509_BASE64 =\n      \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE/1+3HBVSbdv+j7NaArdgMyoSAM43yR\"\n          + \"ydzqdg1TxodSzA96Dj4Mc1EiKroxxunavVIvdxGnJeFViTzFvzFRxyCw==\";", "modifier": "private static final", "type": "String", "declarator": "GOOGLE_SIGNING_EC_V2_INTERMEDIATE_PUBLIC_KEY_X509_BASE64 =\n      \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE/1+3HBVSbdv+j7NaArdgMyoSAM43yR\"\n          + \"ydzqdg1TxodSzA96Dj4Mc1EiKroxxunavVIvdxGnJeFViTzFvzFRxyCw==\"", "var_name": "GOOGLE_SIGNING_EC_V2_INTERMEDIATE_PUBLIC_KEY_X509_BASE64"}, {"original_string": "private static final String GOOGLE_SIGNING_EC_V2_INTERMEDIATE_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgKvEdSS8f0mjTCNKev\"\n          + \"aKXIzfNC5b4A104gJWI9TsLIMqhRANCAAT/X7ccFVJt2/6Ps1oCt2AzKhIAz\"\n          + \"jfJHJ3Op2DVPGh1LMD3oOPgxzUSIqujHG6dq9Ui93Eacl4VWJPMW/MVHHIL\";", "modifier": "private static final", "type": "String", "declarator": "GOOGLE_SIGNING_EC_V2_INTERMEDIATE_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgKvEdSS8f0mjTCNKev\"\n          + \"aKXIzfNC5b4A104gJWI9TsLIMqhRANCAAT/X7ccFVJt2/6Ps1oCt2AzKhIAz\"\n          + \"jfJHJ3Op2DVPGh1LMD3oOPgxzUSIqujHG6dq9Ui93Eacl4VWJPMW/MVHHIL\"", "var_name": "GOOGLE_SIGNING_EC_V2_INTERMEDIATE_PRIVATE_KEY_PKCS8_BASE64"}, {"original_string": "private static final String GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgRi9hSdY+knJ08odnY\"\n          + \"tZFMRi7ZYeMoasAijLhD4GiQ1yhRANCAAQ1e9irEPlZrIpiG5dB690Z0sDy\"\n          + \"J9XguxFLa4q8WjzDDKLCBAcH0OIrMbpP8/UW70GXvNbL+x7kPLjCTWYmg+7G\";", "modifier": "private static final", "type": "String", "declarator": "GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_PRIVATE_KEY_PKCS8_BASE64 =\n      \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgRi9hSdY+knJ08odnY\"\n          + \"tZFMRi7ZYeMoasAijLhD4GiQ1yhRANCAAQ1e9irEPlZrIpiG5dB690Z0sDy\"\n          + \"J9XguxFLa4q8WjzDDKLCBAcH0OIrMbpP8/UW70GXvNbL+x7kPLjCTWYmg+7G\"", "var_name": "GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_PRIVATE_KEY_PKCS8_BASE64"}, {"original_string": "private static final String\n      GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_INTERMEDIATE_PUBLIC_KEY_X509_BASE64 =\n          \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE8OaurwvbyYm8JWDgFPRTIDg0/\"\n              + \"kcQTFAQ4txi5IP0AyM1QiagwRhDUfjpqZkpw8xt/DXwyWYM0DdHqoeV\"\n              + \"TKqmYQ==\";", "modifier": "private static final", "type": "String", "declarator": "GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_INTERMEDIATE_PUBLIC_KEY_X509_BASE64 =\n          \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE8OaurwvbyYm8JWDgFPRTIDg0/\"\n              + \"kcQTFAQ4txi5IP0AyM1QiagwRhDUfjpqZkpw8xt/DXwyWYM0DdHqoeV\"\n              + \"TKqmYQ==\"", "var_name": "GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_INTERMEDIATE_PUBLIC_KEY_X509_BASE64"}, {"original_string": "private static final String\n      GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_INTERMEDIATE_PRIVATE_KEY_PKCS8_BASE64 =\n          \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg+Jvpkq26tpZ0s\"\n              + \"TTZVh4teEI41SnJdmkBzM8VZ5ZirE2hRANCAATw5q6vC9vJibwlYOAU\"\n              + \"9FMgODT+RxBMUBDi3GLkg/QDIzVCJqDBGENR+OmpmSnDzG38NfDJZgz\"\n              + \"QN0eqh5VMqqZh\";", "modifier": "private static final", "type": "String", "declarator": "GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_INTERMEDIATE_PRIVATE_KEY_PKCS8_BASE64 =\n          \"MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg+Jvpkq26tpZ0s\"\n              + \"TTZVh4teEI41SnJdmkBzM8VZ5ZirE2hRANCAATw5q6vC9vJibwlYOAU\"\n              + \"9FMgODT+RxBMUBDi3GLkg/QDIzVCJqDBGENR+OmpmSnDzG38NfDJZgz\"\n              + \"QN0eqh5VMqqZh\"", "var_name": "GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_INTERMEDIATE_PRIVATE_KEY_PKCS8_BASE64"}, {"original_string": "private static final String RECIPIENT_ID = \"someRecipient\";", "modifier": "private static final", "type": "String", "declarator": "RECIPIENT_ID = \"someRecipient\"", "var_name": "RECIPIENT_ID"}], "file": "apps/paymentmethodtoken/src/test/java/com/google/crypto/tink/apps/paymentmethodtoken/PaymentMethodTokenSenderTest.java"}, "test_case": {"identifier": "testECV2SigningOnlyWithPrecomputedKeys", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testECV2SigningOnlyWithPrecomputedKeys() throws Exception {\n    PaymentMethodTokenSender sender =\n        new PaymentMethodTokenSender.Builder()\n            .protocolVersion(PaymentMethodTokenConstants.PROTOCOL_VERSION_EC_V2_SIGNING_ONLY)\n            .senderIntermediateSigningKey(\n                GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_INTERMEDIATE_PRIVATE_KEY_PKCS8_BASE64)\n            .senderIntermediateCert(\n                new SenderIntermediateCertFactory.Builder()\n                    .protocolVersion(\n                        PaymentMethodTokenConstants.PROTOCOL_VERSION_EC_V2_SIGNING_ONLY)\n                    .addSenderSigningKey(GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_PRIVATE_KEY_PKCS8_BASE64)\n                    .senderIntermediateSigningKey(\n                        GOOGLE_SIGNING_EC_V2_SIGNING_ONLY_INTERMEDIATE_PUBLIC_KEY_X509_BASE64)\n                    .expiration(Instant.now().plus(Duration.standardDays(1)).getMillis())\n                    .build()\n                    .create())\n            .recipientId(RECIPIENT_ID)\n            .build();\n\n    PaymentMethodTokenRecipient recipient =\n        new PaymentMethodTokenRecipient.Builder()\n            .protocolVersion(PaymentMethodTokenConstants.PROTOCOL_VERSION_EC_V2_SIGNING_ONLY)\n            .senderVerifyingKeys(GOOGLE_VERIFYING_PUBLIC_KEYS_JSON)\n            .recipientId(RECIPIENT_ID)\n            .build();\n\n    String plaintext = \"blah\";\n    assertEquals(plaintext, recipient.unseal(sender.seal(plaintext)));\n  }", "signature": "void testECV2SigningOnlyWithPrecomputedKeys()", "full_signature": "@Test public void testECV2SigningOnlyWithPrecomputedKeys()", "class_method_signature": "PaymentMethodTokenSenderTest.testECV2SigningOnlyWithPrecomputedKeys()", "testcase": true, "constructor": false, "invocations": ["build", "recipientId", "senderIntermediateCert", "senderIntermediateSigningKey", "protocolVersion", "create", "build", "expiration", "senderIntermediateSigningKey", "addSenderSigningKey", "protocolVersion", "getMillis", "plus", "now", "standardDays", "build", "recipientId", "senderVerifyingKeys", "protocolVersion", "assertEquals", "unseal", "seal"]}, "focal_class": {"identifier": "PaymentMethodTokenSender", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String protocolVersion;", "modifier": "private final", "type": "String", "declarator": "protocolVersion", "var_name": "protocolVersion"}, {"original_string": "private final ProtocolVersionConfig protocolVersionConfig;", "modifier": "private final", "type": "ProtocolVersionConfig", "declarator": "protocolVersionConfig", "var_name": "protocolVersionConfig"}, {"original_string": "private final PublicKeySign signer;", "modifier": "private final", "type": "PublicKeySign", "declarator": "signer", "var_name": "signer"}, {"original_string": "private final String senderIntermediateCert;", "modifier": "private final", "type": "String", "declarator": "senderIntermediateCert", "var_name": "senderIntermediateCert"}, {"original_string": "private final String senderId;", "modifier": "private final", "type": "String", "declarator": "senderId", "var_name": "senderId"}, {"original_string": "private final String recipientId;", "modifier": "private final", "type": "String", "declarator": "recipientId", "var_name": "recipientId"}, {"original_string": "private HybridEncrypt hybridEncrypter;", "modifier": "private", "type": "HybridEncrypt", "declarator": "hybridEncrypter", "var_name": "hybridEncrypter"}], "methods": [{"identifier": "PaymentMethodTokenSender", "parameters": "(Builder builder)", "modifiers": "", "return": "", "signature": " PaymentMethodTokenSender(Builder builder)", "full_signature": "  PaymentMethodTokenSender(Builder builder)", "class_method_signature": "PaymentMethodTokenSender.PaymentMethodTokenSender(Builder builder)", "testcase": false, "constructor": true}, {"identifier": "seal", "parameters": "(final String message)", "modifiers": "public", "return": "String", "signature": "String seal(final String message)", "full_signature": "public String seal(final String message)", "class_method_signature": "PaymentMethodTokenSender.seal(final String message)", "testcase": false, "constructor": false}, {"identifier": "sealV1OrV2", "parameters": "(final String message)", "modifiers": "private", "return": "String", "signature": "String sealV1OrV2(final String message)", "full_signature": "private String sealV1OrV2(final String message)", "class_method_signature": "PaymentMethodTokenSender.sealV1OrV2(final String message)", "testcase": false, "constructor": false}, {"identifier": "signV1OrV2", "parameters": "(String message)", "modifiers": "private", "return": "String", "signature": "String signV1OrV2(String message)", "full_signature": "private String signV1OrV2(String message)", "class_method_signature": "PaymentMethodTokenSender.signV1OrV2(String message)", "testcase": false, "constructor": false}, {"identifier": "validateV1", "parameters": "(Builder builder)", "modifiers": "private static", "return": "void", "signature": "void validateV1(Builder builder)", "full_signature": "private static void validateV1(Builder builder)", "class_method_signature": "PaymentMethodTokenSender.validateV1(Builder builder)", "testcase": false, "constructor": false}, {"identifier": "validateV2", "parameters": "(Builder builder)", "modifiers": "private static", "return": "void", "signature": "void validateV2(Builder builder)", "full_signature": "private static void validateV2(Builder builder)", "class_method_signature": "PaymentMethodTokenSender.validateV2(Builder builder)", "testcase": false, "constructor": false}, {"identifier": "validateV2SigningOnly", "parameters": "(Builder builder)", "modifiers": "private static", "return": "void", "signature": "void validateV2SigningOnly(Builder builder)", "full_signature": "private static void validateV2SigningOnly(Builder builder)", "class_method_signature": "PaymentMethodTokenSender.validateV2SigningOnly(Builder builder)", "testcase": false, "constructor": false}, {"identifier": "validateIntermediateSigningKeys", "parameters": "(Builder builder)", "modifiers": "private static", "return": "void", "signature": "void validateIntermediateSigningKeys(Builder builder)", "full_signature": "private static void validateIntermediateSigningKeys(Builder builder)", "class_method_signature": "PaymentMethodTokenSender.validateIntermediateSigningKeys(Builder builder)", "testcase": false, "constructor": false}], "file": "apps/paymentmethodtoken/src/main/java/com/google/crypto/tink/apps/paymentmethodtoken/PaymentMethodTokenSender.java"}, "focal_method": {"identifier": "seal", "parameters": "(final String message)", "modifiers": "public", "return": "String", "body": "public String seal(final String message) throws GeneralSecurityException {\n    if (protocolVersion.equals(PaymentMethodTokenConstants.PROTOCOL_VERSION_EC_V1)\n        || protocolVersion.equals(PaymentMethodTokenConstants.PROTOCOL_VERSION_EC_V2)\n        || protocolVersion.equals(\n            PaymentMethodTokenConstants.PROTOCOL_VERSION_EC_V2_SIGNING_ONLY)) {\n      return sealV1OrV2(message);\n    }\n    throw new GeneralSecurityException(\"Unsupported version: \" + protocolVersion);\n  }", "signature": "String seal(final String message)", "full_signature": "public String seal(final String message)", "class_method_signature": "PaymentMethodTokenSender.seal(final String message)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "equals", "sealV1OrV2"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}