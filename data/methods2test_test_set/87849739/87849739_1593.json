{"test_class": {"identifier": "TreeBasedPolicyEnforcerTest", "superclass": "", "interfaces": "", "fields": [], "file": "model/enforcers/src/test/java/org/eclipse/ditto/model/enforcers/tree/TreeBasedPolicyEnforcerTest.java"}, "test_case": {"identifier": "tryToCreateInstanceWithNullPolicy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tryToCreateInstanceWithNullPolicy() {\n        assertThatExceptionOfType(NullPointerException.class)\n                .isThrownBy(() -> TreeBasedPolicyEnforcer.createInstance(null))\n                .withMessage(\"The %s must not be null!\", \"policy\")\n                .withNoCause();\n    }", "signature": "void tryToCreateInstanceWithNullPolicy()", "full_signature": "@Test public void tryToCreateInstanceWithNullPolicy()", "class_method_signature": "TreeBasedPolicyEnforcerTest.tryToCreateInstanceWithNullPolicy()", "testcase": true, "constructor": false, "invocations": ["withNoCause", "withMessage", "isThrownBy", "assertThatExceptionOfType", "createInstance"]}, "focal_class": {"identifier": "TreeBasedPolicyEnforcer", "superclass": "", "interfaces": "implements Enforcer", "fields": [{"original_string": "private static final String ROOT_RESOURCE = \"/\";", "modifier": "private static final", "type": "String", "declarator": "ROOT_RESOURCE = \"/\"", "var_name": "ROOT_RESOURCE"}, {"original_string": "private final Map<String, PolicyTreeNode> tree;", "modifier": "private final", "type": "Map<String, PolicyTreeNode>", "declarator": "tree", "var_name": "tree"}], "methods": [{"identifier": "TreeBasedPolicyEnforcer", "parameters": "(final Map<String, PolicyTreeNode> tree)", "modifiers": "private", "return": "", "signature": " TreeBasedPolicyEnforcer(final Map<String, PolicyTreeNode> tree)", "full_signature": "private  TreeBasedPolicyEnforcer(final Map<String, PolicyTreeNode> tree)", "class_method_signature": "TreeBasedPolicyEnforcer.TreeBasedPolicyEnforcer(final Map<String, PolicyTreeNode> tree)", "testcase": false, "constructor": true}, {"identifier": "createInstance", "parameters": "(final Policy policy)", "modifiers": "public static", "return": "TreeBasedPolicyEnforcer", "signature": "TreeBasedPolicyEnforcer createInstance(final Policy policy)", "full_signature": "public static TreeBasedPolicyEnforcer createInstance(final Policy policy)", "class_method_signature": "TreeBasedPolicyEnforcer.createInstance(final Policy policy)", "testcase": false, "constructor": false}, {"identifier": "addResourceSubTree", "parameters": "(final ResourceNode parentNode, final Resource resource,\n            final JsonPointer path)", "modifiers": "private static", "return": "void", "signature": "void addResourceSubTree(final ResourceNode parentNode, final Resource resource,\n            final JsonPointer path)", "full_signature": "private static void addResourceSubTree(final ResourceNode parentNode, final Resource resource,\n            final JsonPointer path)", "class_method_signature": "TreeBasedPolicyEnforcer.addResourceSubTree(final ResourceNode parentNode, final Resource resource,\n            final JsonPointer path)", "testcase": false, "constructor": false}, {"identifier": "mergePermissions", "parameters": "(final Resource resource, final ResourceNode existingChild)", "modifiers": "private static", "return": "void", "signature": "void mergePermissions(final Resource resource, final ResourceNode existingChild)", "full_signature": "private static void mergePermissions(final Resource resource, final ResourceNode existingChild)", "class_method_signature": "TreeBasedPolicyEnforcer.mergePermissions(final Resource resource, final ResourceNode existingChild)", "testcase": false, "constructor": false}, {"identifier": "hasUnrestrictedPermissions", "parameters": "(final ResourceKey resourceKey,\n            final AuthorizationContext authorizationContext, final Permissions permissions)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasUnrestrictedPermissions(final ResourceKey resourceKey,\n            final AuthorizationContext authorizationContext, final Permissions permissions)", "full_signature": "@Override public boolean hasUnrestrictedPermissions(final ResourceKey resourceKey,\n            final AuthorizationContext authorizationContext, final Permissions permissions)", "class_method_signature": "TreeBasedPolicyEnforcer.hasUnrestrictedPermissions(final ResourceKey resourceKey,\n            final AuthorizationContext authorizationContext, final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "checkPermissions", "parameters": "(final Permissions permissions)", "modifiers": "private static", "return": "void", "signature": "void checkPermissions(final Permissions permissions)", "full_signature": "private static void checkPermissions(final Permissions permissions)", "class_method_signature": "TreeBasedPolicyEnforcer.checkPermissions(final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "createAbsoluteResourcePointer", "parameters": "(final ResourceKey resourceKey)", "modifiers": "private static", "return": "JsonPointer", "signature": "JsonPointer createAbsoluteResourcePointer(final ResourceKey resourceKey)", "full_signature": "private static JsonPointer createAbsoluteResourcePointer(final ResourceKey resourceKey)", "class_method_signature": "TreeBasedPolicyEnforcer.createAbsoluteResourcePointer(final ResourceKey resourceKey)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationSubjectIds", "parameters": "(final AuthorizationContext authorizationContext)", "modifiers": "private static", "return": "Collection<String>", "signature": "Collection<String> getAuthorizationSubjectIds(final AuthorizationContext authorizationContext)", "full_signature": "private static Collection<String> getAuthorizationSubjectIds(final AuthorizationContext authorizationContext)", "class_method_signature": "TreeBasedPolicyEnforcer.getAuthorizationSubjectIds(final AuthorizationContext authorizationContext)", "testcase": false, "constructor": false}, {"identifier": "visitTree", "parameters": "(final Visitor<T> visitor)", "modifiers": "private", "return": "T", "signature": "T visitTree(final Visitor<T> visitor)", "full_signature": "private T visitTree(final Visitor<T> visitor)", "class_method_signature": "TreeBasedPolicyEnforcer.visitTree(final Visitor<T> visitor)", "testcase": false, "constructor": false}, {"identifier": "getSubjectIdsWithPermission", "parameters": "(final ResourceKey resourceKey,\n            final Permissions permissions)", "modifiers": "@Override public", "return": "EffectedSubjectIds", "signature": "EffectedSubjectIds getSubjectIdsWithPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "full_signature": "@Override public EffectedSubjectIds getSubjectIdsWithPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "class_method_signature": "TreeBasedPolicyEnforcer.getSubjectIdsWithPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "getSubjectsWithPermission", "parameters": "(final ResourceKey resourceKey, final Permissions permissions)", "modifiers": "@Override public", "return": "EffectedSubjects", "signature": "EffectedSubjects getSubjectsWithPermission(final ResourceKey resourceKey, final Permissions permissions)", "full_signature": "@Override public EffectedSubjects getSubjectsWithPermission(final ResourceKey resourceKey, final Permissions permissions)", "class_method_signature": "TreeBasedPolicyEnforcer.getSubjectsWithPermission(final ResourceKey resourceKey, final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "checkResourceKey", "parameters": "(final ResourceKey resourceKey)", "modifiers": "private static", "return": "void", "signature": "void checkResourceKey(final ResourceKey resourceKey)", "full_signature": "private static void checkResourceKey(final ResourceKey resourceKey)", "class_method_signature": "TreeBasedPolicyEnforcer.checkResourceKey(final ResourceKey resourceKey)", "testcase": false, "constructor": false}, {"identifier": "getSubjectIdsWithPartialPermission", "parameters": "(final ResourceKey resourceKey,\n            final Permissions permissions)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getSubjectIdsWithPartialPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "full_signature": "@Override public Set<String> getSubjectIdsWithPartialPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "class_method_signature": "TreeBasedPolicyEnforcer.getSubjectIdsWithPartialPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "getSubjectsWithPartialPermission", "parameters": "(final ResourceKey resourceKey,\n            final Permissions permissions)", "modifiers": "@Override public", "return": "Set<AuthorizationSubject>", "signature": "Set<AuthorizationSubject> getSubjectsWithPartialPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "full_signature": "@Override public Set<AuthorizationSubject> getSubjectsWithPartialPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "class_method_signature": "TreeBasedPolicyEnforcer.getSubjectsWithPartialPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "hasPartialPermissions", "parameters": "(final ResourceKey resourceKey, final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasPartialPermissions(final ResourceKey resourceKey, final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "full_signature": "@Override public boolean hasPartialPermissions(final ResourceKey resourceKey, final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "class_method_signature": "TreeBasedPolicyEnforcer.hasPartialPermissions(final ResourceKey resourceKey, final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "buildJsonView", "parameters": "(\n            final ResourceKey resourceKey,\n            final Iterable<JsonField> jsonFields,\n            final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject buildJsonView(\n            final ResourceKey resourceKey,\n            final Iterable<JsonField> jsonFields,\n            final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "full_signature": "@Override public JsonObject buildJsonView(\n            final ResourceKey resourceKey,\n            final Iterable<JsonField> jsonFields,\n            final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "class_method_signature": "TreeBasedPolicyEnforcer.buildJsonView(\n            final ResourceKey resourceKey,\n            final Iterable<JsonField> jsonFields,\n            final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "extractJsonPointers", "parameters": "(final Collection<PointerAndPermission> resources)", "modifiers": "private static", "return": "Set<JsonPointer>", "signature": "Set<JsonPointer> extractJsonPointers(final Collection<PointerAndPermission> resources)", "full_signature": "private static Set<JsonPointer> extractJsonPointers(final Collection<PointerAndPermission> resources)", "class_method_signature": "TreeBasedPolicyEnforcer.extractJsonPointers(final Collection<PointerAndPermission> resources)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TreeBasedPolicyEnforcer.toString()", "testcase": false, "constructor": false}, {"identifier": "collectFlatPointers", "parameters": "(final JsonPointer createdPointer, final JsonField field,\n            final List<PointerAndValue> flattenedFields)", "modifiers": "private static", "return": "List<PointerAndValue>", "signature": "List<PointerAndValue> collectFlatPointers(final JsonPointer createdPointer, final JsonField field,\n            final List<PointerAndValue> flattenedFields)", "full_signature": "private static List<PointerAndValue> collectFlatPointers(final JsonPointer createdPointer, final JsonField field,\n            final List<PointerAndValue> flattenedFields)", "class_method_signature": "TreeBasedPolicyEnforcer.collectFlatPointers(final JsonPointer createdPointer, final JsonField field,\n            final List<PointerAndValue> flattenedFields)", "testcase": false, "constructor": false}, {"identifier": "filterEntries", "parameters": "(\n            final Collection<PointerAndValue> candidates,\n            final Collection<JsonPointer> grantedResources,\n            final Collection<JsonPointer> revokedResources,\n            final JsonPointer resourcePath)", "modifiers": "private static", "return": "JsonObject", "signature": "JsonObject filterEntries(\n            final Collection<PointerAndValue> candidates,\n            final Collection<JsonPointer> grantedResources,\n            final Collection<JsonPointer> revokedResources,\n            final JsonPointer resourcePath)", "full_signature": "private static JsonObject filterEntries(\n            final Collection<PointerAndValue> candidates,\n            final Collection<JsonPointer> grantedResources,\n            final Collection<JsonPointer> revokedResources,\n            final JsonPointer resourcePath)", "class_method_signature": "TreeBasedPolicyEnforcer.filterEntries(\n            final Collection<PointerAndValue> candidates,\n            final Collection<JsonPointer> grantedResources,\n            final Collection<JsonPointer> revokedResources,\n            final JsonPointer resourcePath)", "testcase": false, "constructor": false}, {"identifier": "getPrefixPointerOrThrow", "parameters": "(final JsonPointer pointer, final int level)", "modifiers": "private static", "return": "JsonPointer", "signature": "JsonPointer getPrefixPointerOrThrow(final JsonPointer pointer, final int level)", "full_signature": "private static JsonPointer getPrefixPointerOrThrow(final JsonPointer pointer, final int level)", "class_method_signature": "TreeBasedPolicyEnforcer.getPrefixPointerOrThrow(final JsonPointer pointer, final int level)", "testcase": false, "constructor": false}, {"identifier": "containsPrefixPointer", "parameters": "(final JsonPointer prefix, final Collection<JsonPointer> resources)", "modifiers": "private static", "return": "boolean", "signature": "boolean containsPrefixPointer(final JsonPointer prefix, final Collection<JsonPointer> resources)", "full_signature": "private static boolean containsPrefixPointer(final JsonPointer prefix, final Collection<JsonPointer> resources)", "class_method_signature": "TreeBasedPolicyEnforcer.containsPrefixPointer(final JsonPointer prefix, final Collection<JsonPointer> resources)", "testcase": false, "constructor": false}, {"identifier": "getGrantedAndRevokedSubResource", "parameters": "(final JsonPointer resource,\n            final String type,\n            final Iterable<String> subjectIds,\n            final Permissions permissions)", "modifiers": "private", "return": "EffectedResources", "signature": "EffectedResources getGrantedAndRevokedSubResource(final JsonPointer resource,\n            final String type,\n            final Iterable<String> subjectIds,\n            final Permissions permissions)", "full_signature": "private EffectedResources getGrantedAndRevokedSubResource(final JsonPointer resource,\n            final String type,\n            final Iterable<String> subjectIds,\n            final Permissions permissions)", "class_method_signature": "TreeBasedPolicyEnforcer.getGrantedAndRevokedSubResource(final JsonPointer resource,\n            final String type,\n            final Iterable<String> subjectIds,\n            final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "removeDeeperRevokes", "parameters": "(final JsonPointer resource,\n            final Iterable<PointerAndPermission> grantedResources,\n            final Collection<PointerAndPermission> revokedResources)", "modifiers": "private static", "return": "Set<PointerAndPermission>", "signature": "Set<PointerAndPermission> removeDeeperRevokes(final JsonPointer resource,\n            final Iterable<PointerAndPermission> grantedResources,\n            final Collection<PointerAndPermission> revokedResources)", "full_signature": "private static Set<PointerAndPermission> removeDeeperRevokes(final JsonPointer resource,\n            final Iterable<PointerAndPermission> grantedResources,\n            final Collection<PointerAndPermission> revokedResources)", "class_method_signature": "TreeBasedPolicyEnforcer.removeDeeperRevokes(final JsonPointer resource,\n            final Iterable<PointerAndPermission> grantedResources,\n            final Collection<PointerAndPermission> revokedResources)", "testcase": false, "constructor": false}, {"identifier": "retainElements", "parameters": "(final Collection<PointerAndPermission> grans1,\n            final Collection<PointerAndPermission> grans2)", "modifiers": "private static", "return": "Set<PointerAndPermission>", "signature": "Set<PointerAndPermission> retainElements(final Collection<PointerAndPermission> grans1,\n            final Collection<PointerAndPermission> grans2)", "full_signature": "private static Set<PointerAndPermission> retainElements(final Collection<PointerAndPermission> grans1,\n            final Collection<PointerAndPermission> grans2)", "class_method_signature": "TreeBasedPolicyEnforcer.retainElements(final Collection<PointerAndPermission> grans1,\n            final Collection<PointerAndPermission> grans2)", "testcase": false, "constructor": false}, {"identifier": "checkPermissionOnAnySubResource", "parameters": "(final JsonPointer resourcePath,\n            final String resourceType,\n            final Iterable<String> subjectIds,\n            final String permission)", "modifiers": "private", "return": "EffectedResources", "signature": "EffectedResources checkPermissionOnAnySubResource(final JsonPointer resourcePath,\n            final String resourceType,\n            final Iterable<String> subjectIds,\n            final String permission)", "full_signature": "private EffectedResources checkPermissionOnAnySubResource(final JsonPointer resourcePath,\n            final String resourceType,\n            final Iterable<String> subjectIds,\n            final String permission)", "class_method_signature": "TreeBasedPolicyEnforcer.checkPermissionOnAnySubResource(final JsonPointer resourcePath,\n            final String resourceType,\n            final Iterable<String> subjectIds,\n            final String permission)", "testcase": false, "constructor": false}, {"identifier": "traverseSubtreeForPermissionAccess", "parameters": "(final String permission,\n            final JsonPointer resource,\n            final String type,\n            @Nullable final PolicyTreeNode policyTreeNode,\n            final Set<PointerAndPermission> grantedResources,\n            final Set<PointerAndPermission> revokedResources,\n            final int level,\n            final boolean followingResource)", "modifiers": "private static", "return": "void", "signature": "void traverseSubtreeForPermissionAccess(final String permission,\n            final JsonPointer resource,\n            final String type,\n            @Nullable final PolicyTreeNode policyTreeNode,\n            final Set<PointerAndPermission> grantedResources,\n            final Set<PointerAndPermission> revokedResources,\n            final int level,\n            final boolean followingResource)", "full_signature": "private static void traverseSubtreeForPermissionAccess(final String permission,\n            final JsonPointer resource,\n            final String type,\n            @Nullable final PolicyTreeNode policyTreeNode,\n            final Set<PointerAndPermission> grantedResources,\n            final Set<PointerAndPermission> revokedResources,\n            final int level,\n            final boolean followingResource)", "class_method_signature": "TreeBasedPolicyEnforcer.traverseSubtreeForPermissionAccess(final String permission,\n            final JsonPointer resource,\n            final String type,\n            @Nullable final PolicyTreeNode policyTreeNode,\n            final Set<PointerAndPermission> grantedResources,\n            final Set<PointerAndPermission> revokedResources,\n            final int level,\n            final boolean followingResource)", "testcase": false, "constructor": false}, {"identifier": "addPermission", "parameters": "(final String permission,\n            final JsonPointer resource,\n            final Collection<PointerAndPermission> grantedResources,\n            final Collection<PointerAndPermission> revokedResources,\n            final int level,\n            final ResourceNode resourceNode)", "modifiers": "private static", "return": "void", "signature": "void addPermission(final String permission,\n            final JsonPointer resource,\n            final Collection<PointerAndPermission> grantedResources,\n            final Collection<PointerAndPermission> revokedResources,\n            final int level,\n            final ResourceNode resourceNode)", "full_signature": "private static void addPermission(final String permission,\n            final JsonPointer resource,\n            final Collection<PointerAndPermission> grantedResources,\n            final Collection<PointerAndPermission> revokedResources,\n            final int level,\n            final ResourceNode resourceNode)", "class_method_signature": "TreeBasedPolicyEnforcer.addPermission(final String permission,\n            final JsonPointer resource,\n            final Collection<PointerAndPermission> grantedResources,\n            final Collection<PointerAndPermission> revokedResources,\n            final int level,\n            final ResourceNode resourceNode)", "testcase": false, "constructor": false}], "file": "model/enforcers/src/main/java/org/eclipse/ditto/model/enforcers/tree/TreeBasedPolicyEnforcer.java"}, "focal_method": {"identifier": "createInstance", "parameters": "(final Policy policy)", "modifiers": "public static", "return": "TreeBasedPolicyEnforcer", "body": "public static TreeBasedPolicyEnforcer createInstance(final Policy policy) {\n        checkNotNull(policy, \"policy\");\n        final Map<String, PolicyTreeNode> tree = new HashMap<>();\n\n        final Set<PolicyEntry> policyEntries = policy.getEntriesSet();\n        policyEntries.forEach(policyEntry -> {\n\n            final Subjects subjects = policyEntry.getSubjects();\n            subjects.forEach(subject -> {\n                final SubjectId subjectId = subject.getId();\n                final String subjectIdString = subjectId.toString();\n                final PolicyTreeNode parentNode = tree.computeIfAbsent(subjectIdString, SubjectNode::of);\n\n                final Resources resources = policyEntry.getResources();\n                resources.forEach(resource -> {\n                    final PolicyTreeNode rootChild = parentNode.computeIfAbsent(resource.getType(), t -> {\n                        final Set<String> emptySet = Collections.emptySet();\n                        return ResourceNode.of(parentNode, t, EffectedPermissions.newInstance(emptySet, emptySet));\n                    });\n                    addResourceSubTree((ResourceNode) rootChild, resource, resource.getPath());\n                });\n            });\n        });\n\n        return new TreeBasedPolicyEnforcer(tree);\n    }", "signature": "TreeBasedPolicyEnforcer createInstance(final Policy policy)", "full_signature": "public static TreeBasedPolicyEnforcer createInstance(final Policy policy)", "class_method_signature": "TreeBasedPolicyEnforcer.createInstance(final Policy policy)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "getEntriesSet", "forEach", "getSubjects", "forEach", "getId", "toString", "computeIfAbsent", "getResources", "forEach", "computeIfAbsent", "getType", "emptySet", "of", "newInstance", "addResourceSubTree", "getPath"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}