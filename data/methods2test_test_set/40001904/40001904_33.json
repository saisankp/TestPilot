{"test_class": {"identifier": "MetaDataTest", "superclass": "extends BaseJWPLTest", "interfaces": "", "fields": [{"original_string": "private MetaData metaData;", "modifier": "private", "type": "MetaData", "declarator": "metaData", "var_name": "metaData"}], "file": "de.tudarmstadt.ukp.wikipedia.api/src/test/java/de/tudarmstadt/ukp/wikipedia/api/MetaDataTest.java"}, "test_case": {"identifier": "testGetVersion", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetVersion() {\n        try {\n            String version = metaData.getVersion();\n            assertNotNull(version);\n            assertFalse(version.isEmpty());\n            assertEquals(\"1.0\", version);\n        } catch (WikiApiException e) {\n            fail(\"A WikiApiException occurred while getting the disambiguation category: \" + e.getLocalizedMessage());\n        }\n    }", "signature": "void testGetVersion()", "full_signature": "@Test public void testGetVersion()", "class_method_signature": "MetaDataTest.testGetVersion()", "testcase": true, "constructor": false, "invocations": ["getVersion", "assertNotNull", "assertFalse", "isEmpty", "assertEquals", "fail", "getLocalizedMessage"]}, "focal_class": {"identifier": "MetaData", "superclass": "", "interfaces": "implements WikiConstants", "fields": [{"original_string": "private de.tudarmstadt.ukp.wikipedia.api.hibernate.MetaData hibernateMetaData;", "modifier": "private", "type": "de.tudarmstadt.ukp.wikipedia.api.hibernate.MetaData", "declarator": "hibernateMetaData", "var_name": "hibernateMetaData"}, {"original_string": "private Wikipedia wiki;", "modifier": "private", "type": "Wikipedia", "declarator": "wiki", "var_name": "wiki"}], "methods": [{"identifier": "MetaData", "parameters": "(Wikipedia wiki)", "modifiers": "protected", "return": "", "signature": " MetaData(Wikipedia wiki)", "full_signature": "protected  MetaData(Wikipedia wiki)", "class_method_signature": "MetaData.MetaData(Wikipedia wiki)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "", "return": "long", "signature": "long getId()", "full_signature": " long getId()", "class_method_signature": "MetaData.getId()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfCategories", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getNumberOfCategories()", "full_signature": "public long getNumberOfCategories()", "class_method_signature": "MetaData.getNumberOfCategories()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfPages", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getNumberOfPages()", "full_signature": "public long getNumberOfPages()", "class_method_signature": "MetaData.getNumberOfPages()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfDisambiguationPages", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getNumberOfDisambiguationPages()", "full_signature": "public long getNumberOfDisambiguationPages()", "class_method_signature": "MetaData.getNumberOfDisambiguationPages()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfRedirectPages", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getNumberOfRedirectPages()", "full_signature": "public long getNumberOfRedirectPages()", "class_method_signature": "MetaData.getNumberOfRedirectPages()", "testcase": false, "constructor": false}, {"identifier": "getDisambiguationCategory", "parameters": "()", "modifiers": "public", "return": "Category", "signature": "Category getDisambiguationCategory()", "full_signature": "public Category getDisambiguationCategory()", "class_method_signature": "MetaData.getDisambiguationCategory()", "testcase": false, "constructor": false}, {"identifier": "getMainCategory", "parameters": "()", "modifiers": "public", "return": "Category", "signature": "Category getMainCategory()", "full_signature": "public Category getMainCategory()", "class_method_signature": "MetaData.getMainCategory()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "MetaData.getVersion()", "testcase": false, "constructor": false}, {"identifier": "getLanguage", "parameters": "()", "modifiers": "public", "return": "Language", "signature": "Language getLanguage()", "full_signature": "public Language getLanguage()", "class_method_signature": "MetaData.getLanguage()", "testcase": false, "constructor": false}], "file": "de.tudarmstadt.ukp.wikipedia.api/src/main/java/de/tudarmstadt/ukp/wikipedia/api/MetaData.java"}, "focal_method": {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getVersion() throws WikiApiException\n\t{\n\t\tSession session = this.wiki.__getHibernateSession();\n\t\tsession.beginTransaction();\n\t\tsession.lock(hibernateMetaData, LockMode.NONE);\n\t\tString version = hibernateMetaData.getVersion();\n\t\tsession.getTransaction().commit();\n\t\treturn version;\n\t}", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "MetaData.getVersion()", "testcase": false, "constructor": false, "invocations": ["__getHibernateSession", "beginTransaction", "lock", "getVersion", "commit", "getTransaction"]}, "repository": {"repo_id": 40001904, "url": "https://github.com/dkpro/dkpro-jwpl", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 68, "size": 6884, "license": "licensed"}}