{"test_class": {"identifier": "ImplicitToExplicitTest", "superclass": "", "interfaces": "", "fields": [], "file": "func/src/test/java/uk/ac/ebi/beam/ImplicitToExplicitTest.java"}, "test_case": {"identifier": "aromaticType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void aromaticType() {\n        Atom a = Mockito.mock(Atom.class);\n        Atom b = Mockito.mock(Atom.class);\n        Mockito.when(a.aromatic()).thenReturn(true);\n        Mockito.when(b.aromatic()).thenReturn(true);\n        Assert.assertThat(ImplicitToExplicit.type(a, b), CoreMatchers\n                .is(Bond.AROMATIC));\n    }", "signature": "void aromaticType()", "full_signature": "@Test public void aromaticType()", "class_method_signature": "ImplicitToExplicitTest.aromaticType()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "aromatic", "thenReturn", "when", "aromatic", "assertThat", "type", "is"]}, "focal_class": {"identifier": "ImplicitToExplicit", "superclass": "extends AbstractFunction<Graph,Graph>", "interfaces": "", "fields": [], "methods": [{"identifier": "apply", "parameters": "(final Graph g)", "modifiers": "public", "return": "Graph", "signature": "Graph apply(final Graph g)", "full_signature": "public Graph apply(final Graph g)", "class_method_signature": "ImplicitToExplicit.apply(final Graph g)", "testcase": false, "constructor": false}, {"identifier": "toExplicitEdge", "parameters": "(final Graph g, final Edge e)", "modifiers": "static", "return": "Edge", "signature": "Edge toExplicitEdge(final Graph g, final Edge e)", "full_signature": "static Edge toExplicitEdge(final Graph g, final Edge e)", "class_method_signature": "ImplicitToExplicit.toExplicitEdge(final Graph g, final Edge e)", "testcase": false, "constructor": false}, {"identifier": "type", "parameters": "(Atom u, Atom v)", "modifiers": "static", "return": "Bond", "signature": "Bond type(Atom u, Atom v)", "full_signature": "static Bond type(Atom u, Atom v)", "class_method_signature": "ImplicitToExplicit.type(Atom u, Atom v)", "testcase": false, "constructor": false}], "file": "func/src/main/java/uk/ac/ebi/beam/ImplicitToExplicit.java"}, "focal_method": {"identifier": "type", "parameters": "(Atom u, Atom v)", "modifiers": "static", "return": "Bond", "body": "static Bond type(Atom u, Atom v) {\n        return u.aromatic() && v.aromatic() ? Bond.AROMATIC : Bond.SINGLE;\n    }", "signature": "Bond type(Atom u, Atom v)", "full_signature": "static Bond type(Atom u, Atom v)", "class_method_signature": "ImplicitToExplicit.type(Atom u, Atom v)", "testcase": false, "constructor": false, "invocations": ["aromatic", "aromatic"]}, "repository": {"repo_id": 12061606, "url": "https://github.com/johnmay/beam", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 19, "size": 825, "license": "licensed"}}