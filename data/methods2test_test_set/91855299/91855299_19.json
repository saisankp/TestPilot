{"test_class": {"identifier": "TileMoverTest", "superclass": "extends ApplicationTest", "interfaces": "", "fields": [{"original_string": "private static final TileSize ONE_BY_ONE = new TileSize(1, 1);", "modifier": "private static final", "type": "TileSize", "declarator": "ONE_BY_ONE = new TileSize(1, 1)", "var_name": "ONE_BY_ONE"}, {"original_string": "private static final TileSize TWO_BY_ONE = new TileSize(2, 1);", "modifier": "private static final", "type": "TileSize", "declarator": "TWO_BY_ONE = new TileSize(2, 1)", "var_name": "TWO_BY_ONE"}, {"original_string": "private static final TileSize ONE_BY_TWO = new TileSize(1, 2);", "modifier": "private static final", "type": "TileSize", "declarator": "ONE_BY_TWO = new TileSize(1, 2)", "var_name": "ONE_BY_TWO"}, {"original_string": "private WidgetPane pane;", "modifier": "private", "type": "WidgetPane", "declarator": "pane", "var_name": "pane"}], "file": "app/src/test/java/edu/wpi/first/shuffleboard/app/TileMoverTest.java"}, "test_case": {"identifier": "testShrinkLeft", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testShrinkLeft() {\n    // ||1|1|2|2|| -> ||1|2||\n    // given\n    pane.setNumColumns(4);\n    Tile<?> first = new WidgetTile(new MockWidget(), TWO_BY_ONE);\n    Tile<?> second = new WidgetTile(new MockWidget(), TWO_BY_ONE);\n    pane.addTile(first, new GridPoint(0, 0), TWO_BY_ONE);\n    pane.addTile(second, new GridPoint(2, 0), TWO_BY_ONE);\n    waitForFxEvents();\n\n    // when\n    pane.setNumColumns(2);\n    waitForFxEvents();\n\n    // then\n    assertAll(\n        () -> assertEquals(new GridPoint(0, 0), pane.getTileLayout(first).origin),\n        () -> assertEquals(ONE_BY_ONE, pane.getTileLayout(first).size),\n        () -> assertEquals(new GridPoint(1, 0), pane.getTileLayout(second).origin),\n        () -> assertEquals(ONE_BY_ONE, pane.getTileLayout(second).size)\n    );\n  }", "signature": "void testShrinkLeft()", "full_signature": "@Test public void testShrinkLeft()", "class_method_signature": "TileMoverTest.testShrinkLeft()", "testcase": true, "constructor": false, "invocations": ["setNumColumns", "addTile", "addTile", "waitForFxEvents", "setNumColumns", "waitForFxEvents", "assertAll", "assertEquals", "getTileLayout", "assertEquals", "getTileLayout", "assertEquals", "getTileLayout", "assertEquals", "getTileLayout"]}, "focal_class": {"identifier": "TileMover", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final WidgetPane pane;", "modifier": "private final", "type": "WidgetPane", "declarator": "pane", "var_name": "pane"}], "methods": [{"identifier": "TileMover", "parameters": "(WidgetPane pane)", "modifiers": "public", "return": "", "signature": " TileMover(WidgetPane pane)", "full_signature": "public  TileMover(WidgetPane pane)", "class_method_signature": "TileMover.TileMover(WidgetPane pane)", "testcase": false, "constructor": true}, {"identifier": "shrinkLeft", "parameters": "(TileSize size)", "modifiers": "private static", "return": "TileSize", "signature": "TileSize shrinkLeft(TileSize size)", "full_signature": "private static TileSize shrinkLeft(TileSize size)", "class_method_signature": "TileMover.shrinkLeft(TileSize size)", "testcase": false, "constructor": false}, {"identifier": "shrinkUp", "parameters": "(TileSize size)", "modifiers": "private static", "return": "TileSize", "signature": "TileSize shrinkUp(TileSize size)", "full_signature": "private static TileSize shrinkUp(TileSize size)", "class_method_signature": "TileMover.shrinkUp(TileSize size)", "testcase": false, "constructor": false}, {"identifier": "moveLeft", "parameters": "(TileLayout layout)", "modifiers": "private static", "return": "TileLayout", "signature": "TileLayout moveLeft(TileLayout layout)", "full_signature": "private static TileLayout moveLeft(TileLayout layout)", "class_method_signature": "TileMover.moveLeft(TileLayout layout)", "testcase": false, "constructor": false}, {"identifier": "moveUp", "parameters": "(TileLayout layout)", "modifiers": "private static", "return": "TileLayout", "signature": "TileLayout moveUp(TileLayout layout)", "full_signature": "private static TileLayout moveUp(TileLayout layout)", "class_method_signature": "TileMover.moveUp(TileLayout layout)", "testcase": false, "constructor": false}, {"identifier": "collapseTile", "parameters": "(Tile tile, int count, Direction direction)", "modifiers": "public", "return": "void", "signature": "void collapseTile(Tile tile, int count, Direction direction)", "full_signature": "public void collapseTile(Tile tile, int count, Direction direction)", "class_method_signature": "TileMover.collapseTile(Tile tile, int count, Direction direction)", "testcase": false, "constructor": false}, {"identifier": "collapseTile", "parameters": "(Tile tile,\n                                          Function<TileLayout, TileLayout> targetLayoutFunction,\n                                          Function<TileSize, TileSize> shrink,\n                                          Direction direction)", "modifiers": "private", "return": "Optional<Runnable>", "signature": "Optional<Runnable> collapseTile(Tile tile,\n                                          Function<TileLayout, TileLayout> targetLayoutFunction,\n                                          Function<TileSize, TileSize> shrink,\n                                          Direction direction)", "full_signature": "private Optional<Runnable> collapseTile(Tile tile,\n                                          Function<TileLayout, TileLayout> targetLayoutFunction,\n                                          Function<TileSize, TileSize> shrink,\n                                          Direction direction)", "class_method_signature": "TileMover.collapseTile(Tile tile,\n                                          Function<TileLayout, TileLayout> targetLayoutFunction,\n                                          Function<TileSize, TileSize> shrink,\n                                          Direction direction)", "testcase": false, "constructor": false}], "file": "app/src/main/java/edu/wpi/first/shuffleboard/app/TileMover.java"}, "focal_method": {"identifier": "shrinkLeft", "parameters": "(TileSize size)", "modifiers": "private static", "return": "TileSize", "body": "private static TileSize shrinkLeft(TileSize size) {\n    return new TileSize(Math.max(1, size.getWidth() - 1), size.getHeight());\n  }", "signature": "TileSize shrinkLeft(TileSize size)", "full_signature": "private static TileSize shrinkLeft(TileSize size)", "class_method_signature": "TileMover.shrinkLeft(TileSize size)", "testcase": false, "constructor": false, "invocations": ["max", "getWidth", "getHeight"]}, "repository": {"repo_id": 91855299, "url": "https://github.com/wpilibsuite/shuffleboard", "stars": 52, "created": "5/20/2017 12:38:25 AM +00:00", "updates": "2020-01-23T20:11:35+00:00", "fork": "False", "license": "licensed"}}