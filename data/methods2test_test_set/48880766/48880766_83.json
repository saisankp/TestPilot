{"test_class": {"identifier": "ArgumentListTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/tech/tablesaw/analytic/ArgumentListTest.java"}, "test_case": {"identifier": "nothingStaged", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void nothingStaged() {\n    Throwable thrown =\n        assertThrows(\n            IllegalArgumentException.class,\n            () ->\n                ArgumentList.builder()\n                    .stageFunction(\"col1\", AggregateFunctions.MAX)\n                    .stageFunction(\"col1\", AggregateFunctions.MAX)\n                    .build());\n\n    assertTrue(thrown.getMessage().contains(\"Cannot stage a column while another is staged\"));\n  }", "signature": "void nothingStaged()", "full_signature": "@Test public void nothingStaged()", "class_method_signature": "ArgumentListTest.nothingStaged()", "testcase": true, "constructor": false, "invocations": ["assertThrows", "build", "stageFunction", "stageFunction", "builder", "assertTrue", "contains", "getMessage"]}, "focal_class": {"identifier": "ArgumentList", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Map<String, FunctionCall<AggregateFunctions>> aggregateFunctions;", "modifier": "private final", "type": "Map<String, FunctionCall<AggregateFunctions>>", "declarator": "aggregateFunctions", "var_name": "aggregateFunctions"}, {"original_string": "private final Map<String, FunctionCall<NumberingFunctions>> numberingFunctions;", "modifier": "private final", "type": "Map<String, FunctionCall<NumberingFunctions>>", "declarator": "numberingFunctions", "var_name": "numberingFunctions"}, {"original_string": "private final Set<String> newColumnNames;", "modifier": "private final", "type": "Set<String>", "declarator": "newColumnNames", "var_name": "newColumnNames"}], "methods": [{"identifier": "ArgumentList", "parameters": "(\n      Map<String, FunctionCall<AggregateFunctions>> aggregateFunctions,\n      Map<String, FunctionCall<NumberingFunctions>> numberingFunctions,\n      Set<String> newColumnNames)", "modifiers": "private", "return": "", "signature": " ArgumentList(\n      Map<String, FunctionCall<AggregateFunctions>> aggregateFunctions,\n      Map<String, FunctionCall<NumberingFunctions>> numberingFunctions,\n      Set<String> newColumnNames)", "full_signature": "private  ArgumentList(\n      Map<String, FunctionCall<AggregateFunctions>> aggregateFunctions,\n      Map<String, FunctionCall<NumberingFunctions>> numberingFunctions,\n      Set<String> newColumnNames)", "class_method_signature": "ArgumentList.ArgumentList(\n      Map<String, FunctionCall<AggregateFunctions>> aggregateFunctions,\n      Map<String, FunctionCall<NumberingFunctions>> numberingFunctions,\n      Set<String> newColumnNames)", "testcase": false, "constructor": true}, {"identifier": "builder", "parameters": "()", "modifiers": "static", "return": "Builder", "signature": "Builder builder()", "full_signature": "static Builder builder()", "class_method_signature": "ArgumentList.builder()", "testcase": false, "constructor": false}, {"identifier": "getAggregateFunctions", "parameters": "()", "modifiers": "public", "return": "Map<String, FunctionCall<AggregateFunctions>>", "signature": "Map<String, FunctionCall<AggregateFunctions>> getAggregateFunctions()", "full_signature": "public Map<String, FunctionCall<AggregateFunctions>> getAggregateFunctions()", "class_method_signature": "ArgumentList.getAggregateFunctions()", "testcase": false, "constructor": false}, {"identifier": "getNumberingFunctions", "parameters": "()", "modifiers": "public", "return": "Map<String, FunctionCall<NumberingFunctions>>", "signature": "Map<String, FunctionCall<NumberingFunctions>> getNumberingFunctions()", "full_signature": "public Map<String, FunctionCall<NumberingFunctions>> getNumberingFunctions()", "class_method_signature": "ArgumentList.getNumberingFunctions()", "testcase": false, "constructor": false}, {"identifier": "getNewColumnNames", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getNewColumnNames()", "full_signature": "public List<String> getNewColumnNames()", "class_method_signature": "ArgumentList.getNewColumnNames()", "testcase": false, "constructor": false}, {"identifier": "toSqlString", "parameters": "(String windowName)", "modifiers": "public", "return": "String", "signature": "String toSqlString(String windowName)", "full_signature": "public String toSqlString(String windowName)", "class_method_signature": "ArgumentList.toSqlString(String windowName)", "testcase": false, "constructor": false}, {"identifier": "createEmptyDestinationColumns", "parameters": "(int rowCount)", "modifiers": "", "return": "List<Column<?>>", "signature": "List<Column<?>> createEmptyDestinationColumns(int rowCount)", "full_signature": " List<Column<?>> createEmptyDestinationColumns(int rowCount)", "class_method_signature": "ArgumentList.createEmptyDestinationColumns(int rowCount)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ArgumentList.toString()", "testcase": false, "constructor": false}], "file": "core/src/main/java/tech/tablesaw/analytic/ArgumentList.java"}, "focal_method": {"identifier": "builder", "parameters": "()", "modifiers": "static", "return": "Builder", "body": "static Builder builder() {\n    return new Builder();\n  }", "signature": "Builder builder()", "full_signature": "static Builder builder()", "class_method_signature": "ArgumentList.builder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 48880766, "url": "https://github.com/jtablesaw/tablesaw", "stars": 2021, "created": "1/1/2016 2:58:28 PM +00:00", "updates": "2020-01-24T23:26:07+00:00", "fork": "False", "license": "licensed"}}