{"test_class": {"identifier": "MyAttributeEncodingFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final URI ENCODING_URI_SHA = URI.create(\"urn:abc4trust:1.0:encoding:anyUri:sha-256\");", "modifier": "private static final", "type": "URI", "declarator": "ENCODING_URI_SHA = URI.create(\"urn:abc4trust:1.0:encoding:anyUri:sha-256\")", "var_name": "ENCODING_URI_SHA"}, {"original_string": "private static final URI ENCODING_STRING_SHA = URI.create(\"urn:abc4trust:1.0:encoding:string:sha-256\");", "modifier": "private static final", "type": "URI", "declarator": "ENCODING_STRING_SHA = URI.create(\"urn:abc4trust:1.0:encoding:string:sha-256\")", "var_name": "ENCODING_STRING_SHA"}, {"original_string": "private static final URI ENCODING_URI_UTF_8 = URI.create(\"urn:abc4trust:1.0:encoding:anyUri:utf-8\");", "modifier": "private static final", "type": "URI", "declarator": "ENCODING_URI_UTF_8 = URI.create(\"urn:abc4trust:1.0:encoding:anyUri:utf-8\")", "var_name": "ENCODING_URI_UTF_8"}, {"original_string": "private static final URI ENCODING_STRING_UTF_8 = URI.create(\"urn:abc4trust:1.0:encoding:string:utf-8\");", "modifier": "private static final", "type": "URI", "declarator": "ENCODING_STRING_UTF_8 = URI.create(\"urn:abc4trust:1.0:encoding:string:utf-8\")", "var_name": "ENCODING_STRING_UTF_8"}, {"original_string": "private static final URI ENCODING_STRING_PRIME = URI.create(\"urn:abc4trust:1.0:encoding:string:prime\");", "modifier": "private static final", "type": "URI", "declarator": "ENCODING_STRING_PRIME = URI.create(\"urn:abc4trust:1.0:encoding:string:prime\")", "var_name": "ENCODING_STRING_PRIME"}, {"original_string": "static final String TEST_STRING = \"h\\u00E9ll\\u00F8\";", "modifier": "static final", "type": "String", "declarator": "TEST_STRING = \"h\\u00E9ll\\u00F8\"", "var_name": "TEST_STRING"}, {"original_string": "static final URI TEST_STRING_URI = URI.create(TEST_STRING);", "modifier": "static final", "type": "URI", "declarator": "TEST_STRING_URI = URI.create(TEST_STRING)", "var_name": "TEST_STRING_URI"}, {"original_string": "private static final String HASH_OF_TEST_STRING =\n      \"1a1c79e944a1e3e83ed79157b6c09660d8fe0b2361ab3a177c12276e5d8474a6\";", "modifier": "private static final", "type": "String", "declarator": "HASH_OF_TEST_STRING =\n      \"1a1c79e944a1e3e83ed79157b6c09660d8fe0b2361ab3a177c12276e5d8474a6\"", "var_name": "HASH_OF_TEST_STRING"}, {"original_string": "private static final String HASH_OF_TEST_STRING_DECIMAL =\n      \"11810447181182089587910711761501265245927260413470757310280760064159296812198\";", "modifier": "private static final", "type": "String", "declarator": "HASH_OF_TEST_STRING_DECIMAL =\n      \"11810447181182089587910711761501265245927260413470757310280760064159296812198\"", "var_name": "HASH_OF_TEST_STRING_DECIMAL"}], "file": "Code/core-abce/abce-components/src/test/java-ibm-only/eu/abc4trust/util/attributeEncoding/MyAttributeEncodingFactoryTest.java"}, "test_case": {"identifier": "overlongString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void overlongString() {\n    // Max string length is 31 characters\n    final String maxlengthString = \"1234567890123456789012345678901\";\n    final String overlongString = maxlengthString + \"X\";\n    \n    MyAttributeEncodingFactory.parseValueFromEncoding(ENCODING_STRING_UTF_8, maxlengthString, null);\n    try {\n      MyAttributeEncodingFactory.parseValueFromEncoding(ENCODING_STRING_UTF_8, overlongString, null);\n      fail(\"Expected an exception due to overlong string\");\n    } catch(RuntimeException e) {\n      // expected\n      assertTrue(e.getMessage().contains(\"too long\"));\n    }\n  }", "signature": "void overlongString()", "full_signature": "@Test public void overlongString()", "class_method_signature": "MyAttributeEncodingFactoryTest.overlongString()", "testcase": true, "constructor": false, "invocations": ["parseValueFromEncoding", "parseValueFromEncoding", "fail", "assertTrue", "contains", "getMessage"]}, "focal_class": {"identifier": "MyAttributeEncodingFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Class<?> classes[] =\n      new Class[] {MyEncodingStringSha256.class, MyEncodingStringUtf8.class,\n          MyEncodingUriSha256.class, MyEncodingUriUtf8.class, MyEncodingDateTimeSigned.class,\n          MyEncodingDateTimeUnsigned.class, MyEncodingDateUnsigned.class,\n          MyEncodingDateSigned.class, MyEncodingDateSince1870.class,\n          MyEncodingDateSince2010.class, MyEncodingTime.class, MyEncodingBoolean.class,\n          MyEncodingIntegerUnsigned.class, MyEncodingIntegerSigned.class, MyEncodingStringPrime.class};", "modifier": "private static final", "type": "Class<?>", "declarator": "classes[] =\n      new Class[] {MyEncodingStringSha256.class, MyEncodingStringUtf8.class,\n          MyEncodingUriSha256.class, MyEncodingUriUtf8.class, MyEncodingDateTimeSigned.class,\n          MyEncodingDateTimeUnsigned.class, MyEncodingDateUnsigned.class,\n          MyEncodingDateSigned.class, MyEncodingDateSince1870.class,\n          MyEncodingDateSince2010.class, MyEncodingTime.class, MyEncodingBoolean.class,\n          MyEncodingIntegerUnsigned.class, MyEncodingIntegerSigned.class, MyEncodingStringPrime.class}", "var_name": "classes"}, {"original_string": "public static final BigInteger SIGNED_OFFSET = BigInteger.valueOf(2).pow(128);", "modifier": "public static final", "type": "BigInteger", "declarator": "SIGNED_OFFSET = BigInteger.valueOf(2).pow(128)", "var_name": "SIGNED_OFFSET"}, {"original_string": "public static final BigInteger MAX_VALUE = BigInteger.valueOf(2).pow(256);", "modifier": "public static final", "type": "BigInteger", "declarator": "MAX_VALUE = BigInteger.valueOf(2).pow(256)", "var_name": "MAX_VALUE"}, {"original_string": "private static URI XS_STRING = URI.create(\"xs:string\");", "modifier": "private static", "type": "URI", "declarator": "XS_STRING = URI.create(\"xs:string\")", "var_name": "XS_STRING"}, {"original_string": "private static URI XS_URI = URI.create(\"xs:anyURI\");", "modifier": "private static", "type": "URI", "declarator": "XS_URI = URI.create(\"xs:anyURI\")", "var_name": "XS_URI"}, {"original_string": "private static URI XS_DATETIME = URI.create(\"xs:dateTime\");", "modifier": "private static", "type": "URI", "declarator": "XS_DATETIME = URI.create(\"xs:dateTime\")", "var_name": "XS_DATETIME"}, {"original_string": "private static URI XS_DATE = URI.create(\"xs:date\");", "modifier": "private static", "type": "URI", "declarator": "XS_DATE = URI.create(\"xs:date\")", "var_name": "XS_DATE"}, {"original_string": "private static URI XS_TIME = URI.create(\"xs:time\");", "modifier": "private static", "type": "URI", "declarator": "XS_TIME = URI.create(\"xs:time\")", "var_name": "XS_TIME"}, {"original_string": "private static URI XS_INTEGER = URI.create(\"xs:integer\");", "modifier": "private static", "type": "URI", "declarator": "XS_INTEGER = URI.create(\"xs:integer\")", "var_name": "XS_INTEGER"}, {"original_string": "private static URI XS_BOOLEAN = URI.create(\"xs:boolean\");", "modifier": "private static", "type": "URI", "declarator": "XS_BOOLEAN = URI.create(\"xs:boolean\")", "var_name": "XS_BOOLEAN"}], "methods": [{"identifier": "parseValueFromEncoding", "parameters": "(URI encoding, Object attributeValue, /*Nullable*/ EnumAllowedValues eav)", "modifiers": "public static", "return": "MyAttributeValue", "signature": "MyAttributeValue parseValueFromEncoding(URI encoding, Object attributeValue, /*Nullable*/ EnumAllowedValues eav)", "full_signature": "public static MyAttributeValue parseValueFromEncoding(URI encoding, Object attributeValue, /*Nullable*/ EnumAllowedValues eav)", "class_method_signature": "MyAttributeEncodingFactory.parseValueFromEncoding(URI encoding, Object attributeValue, /*Nullable*/ EnumAllowedValues eav)", "testcase": false, "constructor": false}, {"identifier": "parseValueFromEncodingNoCheck", "parameters": "(URI encoding, Object attributeValue, /*Nullable*/ EnumAllowedValues eav)", "modifiers": "private static", "return": "MyAttributeValue", "signature": "MyAttributeValue parseValueFromEncodingNoCheck(URI encoding, Object attributeValue, /*Nullable*/ EnumAllowedValues eav)", "full_signature": "private static MyAttributeValue parseValueFromEncodingNoCheck(URI encoding, Object attributeValue, /*Nullable*/ EnumAllowedValues eav)", "class_method_signature": "MyAttributeEncodingFactory.parseValueFromEncodingNoCheck(URI encoding, Object attributeValue, /*Nullable*/ EnumAllowedValues eav)", "testcase": false, "constructor": false}, {"identifier": "getEncodingForEachAllowedValue", "parameters": "(URI encoding, EnumAllowedValues eav)", "modifiers": "public static", "return": "Map<String, BigInteger>", "signature": "Map<String, BigInteger> getEncodingForEachAllowedValue(URI encoding, EnumAllowedValues eav)", "full_signature": "public static Map<String, BigInteger> getEncodingForEachAllowedValue(URI encoding, EnumAllowedValues eav)", "class_method_signature": "MyAttributeEncodingFactory.getEncodingForEachAllowedValue(URI encoding, EnumAllowedValues eav)", "testcase": false, "constructor": false}, {"identifier": "recoverValueFromBigInteger", "parameters": "(URI encoding, BigInteger attributeValue, /*Nullable*/ EnumAllowedValues eav)", "modifiers": "public static", "return": "MyAttributeValue", "signature": "MyAttributeValue recoverValueFromBigInteger(URI encoding, BigInteger attributeValue, /*Nullable*/ EnumAllowedValues eav)", "full_signature": "public static MyAttributeValue recoverValueFromBigInteger(URI encoding, BigInteger attributeValue, /*Nullable*/ EnumAllowedValues eav)", "class_method_signature": "MyAttributeEncodingFactory.recoverValueFromBigInteger(URI encoding, BigInteger attributeValue, /*Nullable*/ EnumAllowedValues eav)", "testcase": false, "constructor": false}, {"identifier": "recoverValueFromBigIntegerNoCheck", "parameters": "(URI encoding, BigInteger attributeValue, /*Nullable*/ EnumAllowedValues eav)", "modifiers": "private static", "return": "MyAttributeValue", "signature": "MyAttributeValue recoverValueFromBigIntegerNoCheck(URI encoding, BigInteger attributeValue, /*Nullable*/ EnumAllowedValues eav)", "full_signature": "private static MyAttributeValue recoverValueFromBigIntegerNoCheck(URI encoding, BigInteger attributeValue, /*Nullable*/ EnumAllowedValues eav)", "class_method_signature": "MyAttributeEncodingFactory.recoverValueFromBigIntegerNoCheck(URI encoding, BigInteger attributeValue, /*Nullable*/ EnumAllowedValues eav)", "testcase": false, "constructor": false}, {"identifier": "getDatatypeFromEncoding", "parameters": "(URI encoding)", "modifiers": "public static", "return": "URI", "signature": "URI getDatatypeFromEncoding(URI encoding)", "full_signature": "public static URI getDatatypeFromEncoding(URI encoding)", "class_method_signature": "MyAttributeEncodingFactory.getDatatypeFromEncoding(URI encoding)", "testcase": false, "constructor": false}, {"identifier": "byteArrayToInteger", "parameters": "(byte[] arr)", "modifiers": "public static", "return": "BigInteger", "signature": "BigInteger byteArrayToInteger(byte[] arr)", "full_signature": "public static BigInteger byteArrayToInteger(byte[] arr)", "class_method_signature": "MyAttributeEncodingFactory.byteArrayToInteger(byte[] arr)", "testcase": false, "constructor": false}, {"identifier": "byteArrayToIntegerWithLength", "parameters": "(byte[] arr)", "modifiers": "public static", "return": "BigInteger", "signature": "BigInteger byteArrayToIntegerWithLength(byte[] arr)", "full_signature": "public static BigInteger byteArrayToIntegerWithLength(byte[] arr)", "class_method_signature": "MyAttributeEncodingFactory.byteArrayToIntegerWithLength(byte[] arr)", "testcase": false, "constructor": false}, {"identifier": "decodeByteArrayWithLength", "parameters": "(BigInteger integerValue)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] decodeByteArrayWithLength(BigInteger integerValue)", "full_signature": "public static byte[] decodeByteArrayWithLength(BigInteger integerValue)", "class_method_signature": "MyAttributeEncodingFactory.decodeByteArrayWithLength(BigInteger integerValue)", "testcase": false, "constructor": false}], "file": "Code/core-abce/abce-components/src/main/java-ibm-only/eu/abc4trust/util/attributeEncoding/MyAttributeEncodingFactory.java"}, "focal_method": {"identifier": "parseValueFromEncoding", "parameters": "(URI encoding, Object attributeValue, /*Nullable*/ EnumAllowedValues eav)", "modifiers": "public static", "return": "MyAttributeValue", "body": "public static MyAttributeValue parseValueFromEncoding(URI encoding, Object attributeValue, /*Nullable*/ EnumAllowedValues eav) {\n    MyAttributeValue ret = parseValueFromEncodingNoCheck(encoding, attributeValue, eav);\n    if(! encoding.equals(ret.getEncodingOrNull())) {\n      throw new RuntimeException(\"Problem with encoding: \" + encoding + \"/\" + ret.getEncodingOrNull());\n    }\n    return ret;\n  }", "signature": "MyAttributeValue parseValueFromEncoding(URI encoding, Object attributeValue, /*Nullable*/ EnumAllowedValues eav)", "full_signature": "public static MyAttributeValue parseValueFromEncoding(URI encoding, Object attributeValue, /*Nullable*/ EnumAllowedValues eav)", "class_method_signature": "MyAttributeEncodingFactory.parseValueFromEncoding(URI encoding, Object attributeValue, /*Nullable*/ EnumAllowedValues eav)", "testcase": false, "constructor": false, "invocations": ["parseValueFromEncodingNoCheck", "equals", "getEncodingOrNull", "getEncodingOrNull"]}, "repository": {"repo_id": 7687890, "url": "https://github.com/p2abcengine/p2abcengine", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 71, "size": 11790, "license": "licensed"}}