{"test_class": {"identifier": "CatalogProvUtilsImplTest", "superclass": "extends OrmEnabledTestCase", "interfaces": "", "fields": [{"original_string": "private static final String recordIri = \"http://test.org/record\";", "modifier": "private static final", "type": "String", "declarator": "recordIri = \"http://test.org/record\"", "var_name": "recordIri"}, {"original_string": "private static final String predAtLocation = \"http://www.w3.org/ns/prov#atLocation\";", "modifier": "private static final", "type": "String", "declarator": "predAtLocation = \"http://www.w3.org/ns/prov#atLocation\"", "var_name": "predAtLocation"}, {"original_string": "private CatalogProvUtilsImpl utils = new CatalogProvUtilsImpl();", "modifier": "private", "type": "CatalogProvUtilsImpl", "declarator": "utils = new CatalogProvUtilsImpl()", "var_name": "utils"}, {"original_string": "private OrmFactory<Activity> activityFactory = getRequiredOrmFactory(Activity.class);", "modifier": "private", "type": "OrmFactory<Activity>", "declarator": "activityFactory = getRequiredOrmFactory(Activity.class)", "var_name": "activityFactory"}, {"original_string": "private OrmFactory<CreateActivity> createActivityFactory = getRequiredOrmFactory(CreateActivity.class);", "modifier": "private", "type": "OrmFactory<CreateActivity>", "declarator": "createActivityFactory = getRequiredOrmFactory(CreateActivity.class)", "var_name": "createActivityFactory"}, {"original_string": "private OrmFactory<DeleteActivity> deleteActivityFactory = getRequiredOrmFactory(DeleteActivity.class);", "modifier": "private", "type": "OrmFactory<DeleteActivity>", "declarator": "deleteActivityFactory = getRequiredOrmFactory(DeleteActivity.class)", "var_name": "deleteActivityFactory"}, {"original_string": "private OrmFactory<Entity> entityFactory = getRequiredOrmFactory(Entity.class);", "modifier": "private", "type": "OrmFactory<Entity>", "declarator": "entityFactory = getRequiredOrmFactory(Entity.class)", "var_name": "entityFactory"}, {"original_string": "private OrmFactory<User> userFactory = getRequiredOrmFactory(User.class);", "modifier": "private", "type": "OrmFactory<User>", "declarator": "userFactory = getRequiredOrmFactory(User.class)", "var_name": "userFactory"}, {"original_string": "private OrmFactory<Record> recordFactory = getRequiredOrmFactory(Record.class);", "modifier": "private", "type": "OrmFactory<Record>", "declarator": "recordFactory = getRequiredOrmFactory(Record.class)", "var_name": "recordFactory"}, {"original_string": "private Record record;", "modifier": "private", "type": "Record", "declarator": "record", "var_name": "record"}, {"original_string": "private CreateActivity createActivity;", "modifier": "private", "type": "CreateActivity", "declarator": "createActivity", "var_name": "createActivity"}, {"original_string": "private DeleteActivity deleteActivity;", "modifier": "private", "type": "DeleteActivity", "declarator": "deleteActivity", "var_name": "deleteActivity"}, {"original_string": "private Entity entity;", "modifier": "private", "type": "Entity", "declarator": "entity", "var_name": "entity"}, {"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "@Mock\n    private Mobi mobi;", "modifier": "@Mock\n    private", "type": "Mobi", "declarator": "mobi", "var_name": "mobi"}, {"original_string": "@Mock\n    private ProvenanceService provenanceService;", "modifier": "@Mock\n    private", "type": "ProvenanceService", "declarator": "provenanceService", "var_name": "provenanceService"}, {"original_string": "@Mock\n    private CatalogConfigProvider config;", "modifier": "@Mock\n    private", "type": "CatalogConfigProvider", "declarator": "config", "var_name": "config"}, {"original_string": "@Mock\n    private RepositoryConnection connProv;", "modifier": "@Mock\n    private", "type": "RepositoryConnection", "declarator": "connProv", "var_name": "connProv"}, {"original_string": "@Mock\n    private RepositoryResult<Statement> resultEntity;", "modifier": "@Mock\n    private", "type": "RepositoryResult<Statement>", "declarator": "resultEntity", "var_name": "resultEntity"}], "file": "com.mobi.catalog.impl/src/test/java/com/mobi/catalog/impl/CatalogProvUtilsImplTest.java"}, "test_case": {"identifier": "startDeleteActivityWithNoDeleteActivityTest", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n    public void startDeleteActivityWithNoDeleteActivityTest() {\n        // Setup:\n        Activity activity1 = activityFactory.createNew(VALUE_FACTORY.createIRI(\"http://test.org/activity\"));\n        when(provenanceService.createActivity(any(ActivityConfig.class))).thenReturn(activity1);\n\n        utils.startDeleteActivity(user, VALUE_FACTORY.createIRI(recordIri));\n    }", "signature": "void startDeleteActivityWithNoDeleteActivityTest()", "full_signature": "@Test(expected = IllegalStateException.class) public void startDeleteActivityWithNoDeleteActivityTest()", "class_method_signature": "CatalogProvUtilsImplTest.startDeleteActivityWithNoDeleteActivityTest()", "testcase": true, "constructor": false, "invocations": ["createNew", "createIRI", "thenReturn", "when", "createActivity", "any", "startDeleteActivity", "createIRI"]}, "focal_class": {"identifier": "CatalogProvUtilsImpl", "superclass": "", "interfaces": "implements CatalogProvUtils", "fields": [{"original_string": "private ValueFactory vf;", "modifier": "private", "type": "ValueFactory", "declarator": "vf", "var_name": "vf"}, {"original_string": "private CatalogConfigProvider config;", "modifier": "private", "type": "CatalogConfigProvider", "declarator": "config", "var_name": "config"}, {"original_string": "private ProvenanceService provenanceService;", "modifier": "private", "type": "ProvenanceService", "declarator": "provenanceService", "var_name": "provenanceService"}, {"original_string": "private CreateActivityFactory createActivityFactory;", "modifier": "private", "type": "CreateActivityFactory", "declarator": "createActivityFactory", "var_name": "createActivityFactory"}, {"original_string": "private DeleteActivityFactory deleteActivityFactory;", "modifier": "private", "type": "DeleteActivityFactory", "declarator": "deleteActivityFactory", "var_name": "deleteActivityFactory"}, {"original_string": "private EntityFactory entityFactory;", "modifier": "private", "type": "EntityFactory", "declarator": "entityFactory", "var_name": "entityFactory"}, {"original_string": "private ModelFactory modelFactory;", "modifier": "private", "type": "ModelFactory", "declarator": "modelFactory", "var_name": "modelFactory"}, {"original_string": "private Mobi mobi;", "modifier": "private", "type": "Mobi", "declarator": "mobi", "var_name": "mobi"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(CatalogProvUtilsImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(CatalogProvUtilsImpl.class)", "var_name": "LOG"}, {"original_string": "private final String atLocation = \"http://www.w3.org/ns/prov#atLocation\";", "modifier": "private final", "type": "String", "declarator": "atLocation = \"http://www.w3.org/ns/prov#atLocation\"", "var_name": "atLocation"}], "methods": [{"identifier": "setVf", "parameters": "(ValueFactory vf)", "modifiers": "@Reference", "return": "void", "signature": "void setVf(ValueFactory vf)", "full_signature": "@Reference void setVf(ValueFactory vf)", "class_method_signature": "CatalogProvUtilsImpl.setVf(ValueFactory vf)", "testcase": false, "constructor": false}, {"identifier": "setConfig", "parameters": "(CatalogConfigProvider config)", "modifiers": "@Reference", "return": "void", "signature": "void setConfig(CatalogConfigProvider config)", "full_signature": "@Reference void setConfig(CatalogConfigProvider config)", "class_method_signature": "CatalogProvUtilsImpl.setConfig(CatalogConfigProvider config)", "testcase": false, "constructor": false}, {"identifier": "setProvenanceService", "parameters": "(ProvenanceService provenanceService)", "modifiers": "@Reference", "return": "void", "signature": "void setProvenanceService(ProvenanceService provenanceService)", "full_signature": "@Reference void setProvenanceService(ProvenanceService provenanceService)", "class_method_signature": "CatalogProvUtilsImpl.setProvenanceService(ProvenanceService provenanceService)", "testcase": false, "constructor": false}, {"identifier": "setCreateActivityFactory", "parameters": "(CreateActivityFactory createActivityFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setCreateActivityFactory(CreateActivityFactory createActivityFactory)", "full_signature": "@Reference void setCreateActivityFactory(CreateActivityFactory createActivityFactory)", "class_method_signature": "CatalogProvUtilsImpl.setCreateActivityFactory(CreateActivityFactory createActivityFactory)", "testcase": false, "constructor": false}, {"identifier": "setDeleteActivityFactory", "parameters": "(DeleteActivityFactory deleteActivityFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setDeleteActivityFactory(DeleteActivityFactory deleteActivityFactory)", "full_signature": "@Reference void setDeleteActivityFactory(DeleteActivityFactory deleteActivityFactory)", "class_method_signature": "CatalogProvUtilsImpl.setDeleteActivityFactory(DeleteActivityFactory deleteActivityFactory)", "testcase": false, "constructor": false}, {"identifier": "setEntityFactory", "parameters": "(EntityFactory entityFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setEntityFactory(EntityFactory entityFactory)", "full_signature": "@Reference void setEntityFactory(EntityFactory entityFactory)", "class_method_signature": "CatalogProvUtilsImpl.setEntityFactory(EntityFactory entityFactory)", "testcase": false, "constructor": false}, {"identifier": "setModelFactory", "parameters": "(ModelFactory modelFactory)", "modifiers": "@Reference", "return": "void", "signature": "void setModelFactory(ModelFactory modelFactory)", "full_signature": "@Reference void setModelFactory(ModelFactory modelFactory)", "class_method_signature": "CatalogProvUtilsImpl.setModelFactory(ModelFactory modelFactory)", "testcase": false, "constructor": false}, {"identifier": "setMobi", "parameters": "(Mobi mobi)", "modifiers": "@Reference", "return": "void", "signature": "void setMobi(Mobi mobi)", "full_signature": "@Reference void setMobi(Mobi mobi)", "class_method_signature": "CatalogProvUtilsImpl.setMobi(Mobi mobi)", "testcase": false, "constructor": false}, {"identifier": "startCreateActivity", "parameters": "(User user)", "modifiers": "@Override public", "return": "CreateActivity", "signature": "CreateActivity startCreateActivity(User user)", "full_signature": "@Override public CreateActivity startCreateActivity(User user)", "class_method_signature": "CatalogProvUtilsImpl.startCreateActivity(User user)", "testcase": false, "constructor": false}, {"identifier": "endCreateActivity", "parameters": "(CreateActivity createActivity, Resource recordIRI)", "modifiers": "@Override public", "return": "void", "signature": "void endCreateActivity(CreateActivity createActivity, Resource recordIRI)", "full_signature": "@Override public void endCreateActivity(CreateActivity createActivity, Resource recordIRI)", "class_method_signature": "CatalogProvUtilsImpl.endCreateActivity(CreateActivity createActivity, Resource recordIRI)", "testcase": false, "constructor": false}, {"identifier": "startDeleteActivity", "parameters": "(User user, Resource recordIri)", "modifiers": "@Override public", "return": "DeleteActivity", "signature": "DeleteActivity startDeleteActivity(User user, Resource recordIri)", "full_signature": "@Override public DeleteActivity startDeleteActivity(User user, Resource recordIri)", "class_method_signature": "CatalogProvUtilsImpl.startDeleteActivity(User user, Resource recordIri)", "testcase": false, "constructor": false}, {"identifier": "endDeleteActivity", "parameters": "(DeleteActivity deleteActivity, Record record)", "modifiers": "@Override public", "return": "void", "signature": "void endDeleteActivity(DeleteActivity deleteActivity, Record record)", "full_signature": "@Override public void endDeleteActivity(DeleteActivity deleteActivity, Record record)", "class_method_signature": "CatalogProvUtilsImpl.endDeleteActivity(DeleteActivity deleteActivity, Record record)", "testcase": false, "constructor": false}, {"identifier": "removeActivity", "parameters": "(Activity activity)", "modifiers": "@Override public", "return": "void", "signature": "void removeActivity(Activity activity)", "full_signature": "@Override public void removeActivity(Activity activity)", "class_method_signature": "CatalogProvUtilsImpl.removeActivity(Activity activity)", "testcase": false, "constructor": false}, {"identifier": "initializeActivity", "parameters": "(ActivityConfig config)", "modifiers": "private", "return": "Activity", "signature": "Activity initializeActivity(ActivityConfig config)", "full_signature": "private Activity initializeActivity(ActivityConfig config)", "class_method_signature": "CatalogProvUtilsImpl.initializeActivity(ActivityConfig config)", "testcase": false, "constructor": false}, {"identifier": "finalizeActivity", "parameters": "(Activity activity)", "modifiers": "private", "return": "void", "signature": "void finalizeActivity(Activity activity)", "full_signature": "private void finalizeActivity(Activity activity)", "class_method_signature": "CatalogProvUtilsImpl.finalizeActivity(Activity activity)", "testcase": false, "constructor": false}], "file": "com.mobi.catalog.impl/src/main/java/com/mobi/catalog/impl/CatalogProvUtilsImpl.java"}, "focal_method": {"identifier": "startDeleteActivity", "parameters": "(User user, Resource recordIri)", "modifiers": "@Override public", "return": "DeleteActivity", "body": "@Override\n    public DeleteActivity startDeleteActivity(User user, Resource recordIri) {\n        Entity recordEntity = entityFactory.getExisting(recordIri, asModel(provenanceService.getConnection()\n                .getStatements(recordIri, null, null), modelFactory))\n                .orElseGet(() -> {\n                    LOG.warn(\"No Entity found for record \" + recordIri + \".\");\n                    Entity entity = entityFactory.createNew(recordIri);\n                    entity.addProperty(vf.createLiteral(config.getRepositoryId()), vf.createIRI(atLocation));\n                    return entity;\n                });\n\n        ActivityConfig config = new ActivityConfig.Builder(Collections.singleton(DeleteActivity.class), user)\n                .invalidatedEntity(recordEntity)\n                .build();\n        Activity activity = initializeActivity(config);\n\n        provenanceService.addActivity(activity);\n\n        return deleteActivityFactory.getExisting(activity.getResource(), activity.getModel()).orElseThrow(() ->\n                new IllegalStateException(\"DeleteActivity not made correctly\"));\n    }", "signature": "DeleteActivity startDeleteActivity(User user, Resource recordIri)", "full_signature": "@Override public DeleteActivity startDeleteActivity(User user, Resource recordIri)", "class_method_signature": "CatalogProvUtilsImpl.startDeleteActivity(User user, Resource recordIri)", "testcase": false, "constructor": false, "invocations": ["orElseGet", "getExisting", "asModel", "getStatements", "getConnection", "warn", "createNew", "addProperty", "createLiteral", "getRepositoryId", "createIRI", "build", "invalidatedEntity", "singleton", "initializeActivity", "addActivity", "orElseThrow", "getExisting", "getResource", "getModel"]}, "repository": {"repo_id": 62253355, "url": "https://github.com/inovexcorp/mobi", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 30, "size": 54070, "license": "licensed"}}