{"test_class": {"identifier": "SofaResponseTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/api/src/test/java/com/alipay/sofa/rpc/core/response/SofaResponseTest.java"}, "test_case": {"identifier": "getResponseProp", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getResponseProp() {\n        SofaResponse response = new SofaResponse();\n        response.setErrorMsg(null);\n        Assert.assertFalse(response.isError());\n\n        response = new SofaResponse();\n        response.setErrorMsg(\"1233\");\n        Assert.assertTrue(response.isError());\n        Assert.assertEquals(\"1233\", response.getErrorMsg());\n\n        response = new SofaResponse();\n        response.setAppResponse(new RuntimeException(\"1233\"));\n        Assert.assertTrue(response.getAppResponse() instanceof RuntimeException);\n        Assert.assertFalse(response.isError());\n\n        response = new SofaResponse();\n        response.setAppResponse(\"1233\");\n        Assert.assertFalse(response.isError());\n        Assert.assertEquals(\"1233\", response.getAppResponse());\n\n        response.setSerializeType((byte) 11);\n        response.setData(new ByteArrayWrapperByteBuf(new byte[] { 1, 2, 3 }));\n        Assert.assertTrue(response.getSerializeType() == 11);\n        Assert.assertTrue(response.getData().array().length == 3);\n\n        Map<String, String> map = response.getResponseProps();\n        Assert.assertTrue(map == null);\n\n        response.addResponseProp(\"1\", \"1\");\n        map = response.getResponseProps();\n        Assert.assertTrue(map.size() == 1);\n        response.addResponseProp(null, \"1\");\n        Assert.assertTrue(map.size() == 1);\n        response.addResponseProp(\"1\", null);\n        Assert.assertTrue(map.size() == 1);\n\n        response.removeResponseProp(null);\n        Assert.assertTrue(map.size() == 1);\n        response.removeResponseProp(\"1\");\n        Assert.assertTrue(map.size() == 0);\n        Assert.assertNull(response.getResponseProp(\"1\"));\n\n        response.setResponseProps(Collections.singletonMap(\"1\", \"1\"));\n        Assert.assertTrue(response.getResponseProps().size() == 1);\n    }", "signature": "void getResponseProp()", "full_signature": "@Test public void getResponseProp()", "class_method_signature": "SofaResponseTest.getResponseProp()", "testcase": true, "constructor": false, "invocations": ["setErrorMsg", "assertFalse", "isError", "setErrorMsg", "assertTrue", "isError", "assertEquals", "getErrorMsg", "setAppResponse", "assertTrue", "getAppResponse", "assertFalse", "isError", "setAppResponse", "assertFalse", "isError", "assertEquals", "getAppResponse", "setSerializeType", "setData", "assertTrue", "getSerializeType", "assertTrue", "array", "getData", "getResponseProps", "assertTrue", "addResponseProp", "getResponseProps", "assertTrue", "size", "addResponseProp", "assertTrue", "size", "addResponseProp", "assertTrue", "size", "removeResponseProp", "assertTrue", "size", "removeResponseProp", "assertTrue", "size", "assertNull", "getResponseProp", "setResponseProps", "singletonMap", "assertTrue", "size", "getResponseProps"]}, "focal_class": {"identifier": "SofaResponse", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long         serialVersionUID = -4364536436151723421L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -4364536436151723421L", "var_name": "serialVersionUID"}, {"original_string": "private boolean                   isError          = false;", "modifier": "private", "type": "boolean", "declarator": "isError          = false", "var_name": "isError"}, {"original_string": "private String                    errorMsg;", "modifier": "private", "type": "String", "declarator": "errorMsg", "var_name": "errorMsg"}, {"original_string": "private Object                    appResponse;", "modifier": "private", "type": "Object", "declarator": "appResponse", "var_name": "appResponse"}, {"original_string": "private Map<String, String>       responseProps;", "modifier": "private", "type": "Map<String, String>", "declarator": "responseProps", "var_name": "responseProps"}, {"original_string": "private transient byte            serializeType;", "modifier": "private transient", "type": "byte", "declarator": "serializeType", "var_name": "serializeType"}, {"original_string": "private transient AbstractByteBuf data;", "modifier": "private transient", "type": "AbstractByteBuf", "declarator": "data", "var_name": "data"}], "methods": [{"identifier": "getAppResponse", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object getAppResponse()", "full_signature": "public Object getAppResponse()", "class_method_signature": "SofaResponse.getAppResponse()", "testcase": false, "constructor": false}, {"identifier": "setAppResponse", "parameters": "(Object response)", "modifiers": "public", "return": "void", "signature": "void setAppResponse(Object response)", "full_signature": "public void setAppResponse(Object response)", "class_method_signature": "SofaResponse.setAppResponse(Object response)", "testcase": false, "constructor": false}, {"identifier": "isError", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isError()", "full_signature": "public boolean isError()", "class_method_signature": "SofaResponse.isError()", "testcase": false, "constructor": false}, {"identifier": "getErrorMsg", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getErrorMsg()", "full_signature": "public String getErrorMsg()", "class_method_signature": "SofaResponse.getErrorMsg()", "testcase": false, "constructor": false}, {"identifier": "setErrorMsg", "parameters": "(String error)", "modifiers": "public", "return": "void", "signature": "void setErrorMsg(String error)", "full_signature": "public void setErrorMsg(String error)", "class_method_signature": "SofaResponse.setErrorMsg(String error)", "testcase": false, "constructor": false}, {"identifier": "getResponseProp", "parameters": "(String key)", "modifiers": "public", "return": "Object", "signature": "Object getResponseProp(String key)", "full_signature": "public Object getResponseProp(String key)", "class_method_signature": "SofaResponse.getResponseProp(String key)", "testcase": false, "constructor": false}, {"identifier": "addResponseProp", "parameters": "(String key, String value)", "modifiers": "public", "return": "void", "signature": "void addResponseProp(String key, String value)", "full_signature": "public void addResponseProp(String key, String value)", "class_method_signature": "SofaResponse.addResponseProp(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "removeResponseProp", "parameters": "(String key)", "modifiers": "public", "return": "void", "signature": "void removeResponseProp(String key)", "full_signature": "public void removeResponseProp(String key)", "class_method_signature": "SofaResponse.removeResponseProp(String key)", "testcase": false, "constructor": false}, {"identifier": "getResponseProps", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getResponseProps()", "full_signature": "public Map<String, String> getResponseProps()", "class_method_signature": "SofaResponse.getResponseProps()", "testcase": false, "constructor": false}, {"identifier": "setResponseProps", "parameters": "(Map<String, String> responseProps)", "modifiers": "public", "return": "void", "signature": "void setResponseProps(Map<String, String> responseProps)", "full_signature": "public void setResponseProps(Map<String, String> responseProps)", "class_method_signature": "SofaResponse.setResponseProps(Map<String, String> responseProps)", "testcase": false, "constructor": false}, {"identifier": "getSerializeType", "parameters": "()", "modifiers": "public", "return": "byte", "signature": "byte getSerializeType()", "full_signature": "public byte getSerializeType()", "class_method_signature": "SofaResponse.getSerializeType()", "testcase": false, "constructor": false}, {"identifier": "setSerializeType", "parameters": "(byte serializeType)", "modifiers": "public", "return": "SofaResponse", "signature": "SofaResponse setSerializeType(byte serializeType)", "full_signature": "public SofaResponse setSerializeType(byte serializeType)", "class_method_signature": "SofaResponse.setSerializeType(byte serializeType)", "testcase": false, "constructor": false}, {"identifier": "getData", "parameters": "()", "modifiers": "public", "return": "AbstractByteBuf", "signature": "AbstractByteBuf getData()", "full_signature": "public AbstractByteBuf getData()", "class_method_signature": "SofaResponse.getData()", "testcase": false, "constructor": false}, {"identifier": "setData", "parameters": "(AbstractByteBuf data)", "modifiers": "public", "return": "SofaResponse", "signature": "SofaResponse setData(AbstractByteBuf data)", "full_signature": "public SofaResponse setData(AbstractByteBuf data)", "class_method_signature": "SofaResponse.setData(AbstractByteBuf data)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SofaResponse.toString()", "testcase": false, "constructor": false}], "file": "core/api/src/main/java/com/alipay/sofa/rpc/core/response/SofaResponse.java"}, "focal_method": {"identifier": "getResponseProp", "parameters": "(String key)", "modifiers": "public", "return": "Object", "body": "public Object getResponseProp(String key) {\n        return responseProps == null ? null : responseProps.get(key);\n    }", "signature": "Object getResponseProp(String key)", "full_signature": "public Object getResponseProp(String key)", "class_method_signature": "SofaResponse.getResponseProp(String key)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}