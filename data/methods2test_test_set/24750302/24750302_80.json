{"test_class": {"identifier": "ElasticSearchUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "alien4cloud-common/src/test/java/alien4cloud/utils/ElasticSearchUtilTest.java"}, "test_case": {"identifier": "doTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void doTest() {\n        SearchResponse response = Mockito.mock(SearchResponse.class);\n        SearchHits hits = Mockito.mock(SearchHits.class);\n\n        Assert.assertTrue(ElasticSearchUtil.isResponseEmpty(null));\n        Mockito.when(response.getHits()).thenReturn(null);\n        Assert.assertTrue(ElasticSearchUtil.isResponseEmpty(response));\n        Mockito.reset(response);\n        Mockito.when(hits.getHits()).thenReturn(null);\n        Mockito.when(response.getHits()).thenReturn(hits);\n        Assert.assertTrue(ElasticSearchUtil.isResponseEmpty(response));\n\n        Mockito.reset(response, hits);\n        Mockito.when(hits.getHits()).thenReturn(new SearchHit[0]);\n        Mockito.when(response.getHits()).thenReturn(hits);\n        Assert.assertTrue(ElasticSearchUtil.isResponseEmpty(response));\n\n        Mockito.reset(response, hits);\n        Mockito.when(hits.getHits()).thenReturn(new SearchHit[10]);\n        Mockito.when(response.getHits()).thenReturn(hits);\n        Assert.assertFalse(ElasticSearchUtil.isResponseEmpty(response));\n    }", "signature": "void doTest()", "full_signature": "@Test public void doTest()", "class_method_signature": "ElasticSearchUtilTest.doTest()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "assertTrue", "isResponseEmpty", "thenReturn", "when", "getHits", "assertTrue", "isResponseEmpty", "reset", "thenReturn", "when", "getHits", "thenReturn", "when", "getHits", "assertTrue", "isResponseEmpty", "reset", "thenReturn", "when", "getHits", "thenReturn", "when", "getHits", "assertTrue", "isResponseEmpty", "reset", "thenReturn", "when", "getHits", "thenReturn", "when", "getHits", "assertFalse", "isResponseEmpty"]}, "focal_class": {"identifier": "ElasticSearchUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ElasticSearchUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " ElasticSearchUtil()", "full_signature": "private  ElasticSearchUtil()", "class_method_signature": "ElasticSearchUtil.ElasticSearchUtil()", "testcase": false, "constructor": true}, {"identifier": "isResponseEmpty", "parameters": "(SearchResponse searchResponse)", "modifiers": "public static", "return": "boolean", "signature": "boolean isResponseEmpty(SearchResponse searchResponse)", "full_signature": "public static boolean isResponseEmpty(SearchResponse searchResponse)", "class_method_signature": "ElasticSearchUtil.isResponseEmpty(SearchResponse searchResponse)", "testcase": false, "constructor": false}], "file": "alien4cloud-common/src/main/java/alien4cloud/utils/ElasticSearchUtil.java"}, "focal_method": {"identifier": "isResponseEmpty", "parameters": "(SearchResponse searchResponse)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isResponseEmpty(SearchResponse searchResponse) {\n        if (searchResponse == null || searchResponse.getHits() == null || searchResponse.getHits().getHits() == null\n                || searchResponse.getHits().getHits().length == 0) {\n            return true;\n        }\n        return false;\n    }", "signature": "boolean isResponseEmpty(SearchResponse searchResponse)", "full_signature": "public static boolean isResponseEmpty(SearchResponse searchResponse)", "class_method_signature": "ElasticSearchUtil.isResponseEmpty(SearchResponse searchResponse)", "testcase": false, "constructor": false, "invocations": ["getHits", "getHits", "getHits", "getHits", "getHits"]}, "repository": {"repo_id": 24750302, "url": "https://github.com/alien4cloud/alien4cloud", "language": "Java", "is_fork": false, "fork_count": 64, "stargazer_count": 67, "size": 27647, "license": "licensed"}}