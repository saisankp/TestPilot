{"test_class": {"identifier": "RedisLogServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private LogService logService;", "modifier": "@Autowired\n    private", "type": "LogService", "declarator": "logService", "var_name": "logService"}], "file": "myth-admin/src/test/java/org/dromara/myth/admin/service/log/RedisLogServiceImplTest.java"}, "test_case": {"identifier": "listByPage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void listByPage() {\n\n        ConditionQuery query = new ConditionQuery();\n\n        query.setApplicationName(\"alipay-service\");\n\n        PageParameter pageParameter = new PageParameter(1, 1);\n\n        query.setPageParameter(pageParameter);\n\n        query.setRetry(2);\n\n        query.setTransId(\"2075304338\");\n\n        final CommonPager<LogVO> voCommonPager = logService.listByPage(query);\n\n\n    }", "signature": "void listByPage()", "full_signature": "@Test public void listByPage()", "class_method_signature": "RedisLogServiceImplTest.listByPage()", "testcase": true, "constructor": false, "invocations": ["setApplicationName", "setPageParameter", "setRetry", "setTransId", "listByPage"]}, "focal_class": {"identifier": "RedisLogServiceImpl", "superclass": "", "interfaces": "implements LogService", "fields": [{"original_string": "private final JedisClient jedisClient;", "modifier": "private final", "type": "JedisClient", "declarator": "jedisClient", "var_name": "jedisClient"}, {"original_string": "private final ObjectSerializer objectSerializer;", "modifier": "private final", "type": "ObjectSerializer", "declarator": "objectSerializer", "var_name": "objectSerializer"}], "methods": [{"identifier": "listByPage", "parameters": "(final ConditionQuery query)", "modifiers": "@Override public", "return": "CommonPager<LogVO>", "signature": "CommonPager<LogVO> listByPage(final ConditionQuery query)", "full_signature": "@Override public CommonPager<LogVO> listByPage(final ConditionQuery query)", "class_method_signature": "RedisLogServiceImpl.listByPage(final ConditionQuery query)", "testcase": false, "constructor": false}, {"identifier": "batchRemove", "parameters": "(final List<String> ids, final String appName)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean batchRemove(final List<String> ids, final String appName)", "full_signature": "@Override public Boolean batchRemove(final List<String> ids, final String appName)", "class_method_signature": "RedisLogServiceImpl.batchRemove(final List<String> ids, final String appName)", "testcase": false, "constructor": false}, {"identifier": "updateRetry", "parameters": "(final String id, final Integer retry, final String appName)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean updateRetry(final String id, final Integer retry, final String appName)", "full_signature": "@Override public Boolean updateRetry(final String id, final Integer retry, final String appName)", "class_method_signature": "RedisLogServiceImpl.updateRetry(final String id, final Integer retry, final String appName)", "testcase": false, "constructor": false}, {"identifier": "findAll", "parameters": "(final Set<byte[]> keys)", "modifiers": "private", "return": "List<LogVO>", "signature": "List<LogVO> findAll(final Set<byte[]> keys)", "full_signature": "private List<LogVO> findAll(final Set<byte[]> keys)", "class_method_signature": "RedisLogServiceImpl.findAll(final Set<byte[]> keys)", "testcase": false, "constructor": false}, {"identifier": "findByPage", "parameters": "(final Set<byte[]> keys, final int start, final int pageSize)", "modifiers": "private", "return": "List<LogVO>", "signature": "List<LogVO> findByPage(final Set<byte[]> keys, final int start, final int pageSize)", "full_signature": "private List<LogVO> findByPage(final Set<byte[]> keys, final int start, final int pageSize)", "class_method_signature": "RedisLogServiceImpl.findByPage(final Set<byte[]> keys, final int start, final int pageSize)", "testcase": false, "constructor": false}, {"identifier": "buildVOByKey", "parameters": "(final byte[] key)", "modifiers": "private", "return": "LogVO", "signature": "LogVO buildVOByKey(final byte[] key)", "full_signature": "private LogVO buildVOByKey(final byte[] key)", "class_method_signature": "RedisLogServiceImpl.buildVOByKey(final byte[] key)", "testcase": false, "constructor": false}], "file": "myth-admin/src/main/java/org/dromara/myth/admin/service/log/RedisLogServiceImpl.java"}, "focal_method": {"identifier": "listByPage", "parameters": "(final ConditionQuery query)", "modifiers": "@Override public", "return": "CommonPager<LogVO>", "body": "@Override\n    public CommonPager<LogVO> listByPage(final ConditionQuery query) {\n        CommonPager<LogVO> commonPager = new CommonPager<>();\n        final String redisKeyPrefix =\n                RepositoryPathUtils.buildRedisKeyPrefix(query.getApplicationName());\n        final int currentPage = query.getPageParameter().getCurrentPage();\n        final int pageSize = query.getPageParameter().getPageSize();\n        int start = (currentPage - 1) * pageSize;\n        //\u83b7\u53d6\u6240\u6709\u7684key\n        Set<byte[]> keys;\n        List<LogVO> voList;\n        int totalCount;\n        //\u5982\u679c\u53ea\u67e5 \u91cd\u8bd5\u6761\u4ef6\u7684\n        if (StringUtils.isBlank(query.getTransId())) {\n            keys = jedisClient.keys((redisKeyPrefix + \"*\").getBytes());\n            if (keys.size() <= 0 || keys.size() < start) {\n                return commonPager;\n            }\n            totalCount = keys.size();\n            voList = findByPage(keys, start, pageSize);\n        } else {\n            keys = Sets.newHashSet(String.join(\":\", redisKeyPrefix, query.getTransId()).getBytes());\n            totalCount = keys.size();\n            voList = findAll(keys);\n        }\n        if (keys.size() <= 0 || keys.size() < start) {\n            return commonPager;\n        }\n        commonPager.setPage(PageHelper.buildPage(query.getPageParameter(), totalCount));\n        commonPager.setDataList(voList);\n        return commonPager;\n    }", "signature": "CommonPager<LogVO> listByPage(final ConditionQuery query)", "full_signature": "@Override public CommonPager<LogVO> listByPage(final ConditionQuery query)", "class_method_signature": "RedisLogServiceImpl.listByPage(final ConditionQuery query)", "testcase": false, "constructor": false, "invocations": ["buildRedisKeyPrefix", "getApplicationName", "getCurrentPage", "getPageParameter", "getPageSize", "getPageParameter", "isBlank", "getTransId", "keys", "getBytes", "size", "size", "size", "findByPage", "newHashSet", "getBytes", "join", "getTransId", "size", "findAll", "size", "size", "setPage", "buildPage", "getPageParameter", "setDataList"]}, "repository": {"repo_id": 112703947, "url": "https://github.com/Dromara/myth", "language": "Java", "is_fork": false, "fork_count": 621, "stargazer_count": 1416, "size": 1399, "license": "licensed"}}