{"test_class": {"identifier": "ExceptionConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/dk/alexandra/fresco/framework/util/ExceptionConverterTest.java"}, "test_case": {"identifier": "safeCompute", "parameters": "()", "modifiers": "@Test(expected = RuntimeException.class) public", "return": "void", "body": "@Test(expected = RuntimeException.class)\n  public void safeCompute() throws Exception {\n    ExceptionConverter.safe(\n        () -> {\n          throw new NullPointerException();\n        },\n        \"Ignored\");\n  }", "signature": "void safeCompute()", "full_signature": "@Test(expected = RuntimeException.class) public void safeCompute()", "class_method_signature": "ExceptionConverterTest.safeCompute()", "testcase": true, "constructor": false, "invocations": ["safe"]}, "focal_class": {"identifier": "ExceptionConverter", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ExceptionConverter", "parameters": "()", "modifiers": "", "return": "", "signature": " ExceptionConverter()", "full_signature": "  ExceptionConverter()", "class_method_signature": "ExceptionConverter.ExceptionConverter()", "testcase": false, "constructor": true}, {"identifier": "safe", "parameters": "(Callable<T> callable, String message)", "modifiers": "public static", "return": "T", "signature": "T safe(Callable<T> callable, String message)", "full_signature": "public static T safe(Callable<T> callable, String message)", "class_method_signature": "ExceptionConverter.safe(Callable<T> callable, String message)", "testcase": false, "constructor": false}], "file": "core/src/main/java/dk/alexandra/fresco/framework/util/ExceptionConverter.java"}, "focal_method": {"identifier": "safe", "parameters": "(Callable<T> callable, String message)", "modifiers": "public static", "return": "T", "body": "public static <T> T safe(Callable<T> callable, String message) {\n    try {\n      return callable.call();\n    } catch (Exception e) {\n      throw new RuntimeException(message, e);\n    }\n  }", "signature": "T safe(Callable<T> callable, String message)", "full_signature": "public static T safe(Callable<T> callable, String message)", "class_method_signature": "ExceptionConverter.safe(Callable<T> callable, String message)", "testcase": false, "constructor": false, "invocations": ["call"]}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}