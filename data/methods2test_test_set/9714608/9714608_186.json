{"test_class": {"identifier": "LocaleTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final LocaleStub tmp = new LocaleStub();", "modifier": "private final", "type": "LocaleStub", "declarator": "tmp = new LocaleStub()", "var_name": "tmp"}, {"original_string": "private static final String RESOURCE1 = \"org/arakhne/afc/vmutil/locale/LocaleTest\";", "modifier": "private static final", "type": "String", "declarator": "RESOURCE1 = \"org/arakhne/afc/vmutil/locale/LocaleTest\"", "var_name": "RESOURCE1"}, {"original_string": "private static final String RESOURCE2 = \"org/arakhne/afc/vmutil/locale/LocaleStub\";", "modifier": "private static final", "type": "String", "declarator": "RESOURCE2 = \"org/arakhne/afc/vmutil/locale/LocaleStub\"", "var_name": "RESOURCE2"}, {"original_string": "private static final String NOKEY = \"NOKEY\";", "modifier": "private static final", "type": "String", "declarator": "NOKEY = \"NOKEY\"", "var_name": "NOKEY"}, {"original_string": "private static final String KEY1 = \"ONE\";", "modifier": "private static final", "type": "String", "declarator": "KEY1 = \"ONE\"", "var_name": "KEY1"}, {"original_string": "private static final String KEY2 = \"TWO\";", "modifier": "private static final", "type": "String", "declarator": "KEY2 = \"TWO\"", "var_name": "KEY2"}, {"original_string": "private static final String KEY3 = \"THREE\";", "modifier": "private static final", "type": "String", "declarator": "KEY3 = \"THREE\"", "var_name": "KEY3"}, {"original_string": "private static final String DEFAULT = \"DEFAULT\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT = \"DEFAULT\"", "var_name": "DEFAULT"}, {"original_string": "private static final String P1 = \"P1\";", "modifier": "private static final", "type": "String", "declarator": "P1 = \"P1\"", "var_name": "P1"}, {"original_string": "private static final String P2 = \"P2\";", "modifier": "private static final", "type": "String", "declarator": "P2 = \"P2\"", "var_name": "P2"}, {"original_string": "private static final String P3 = \"P3\";", "modifier": "private static final", "type": "String", "declarator": "P3 = \"P3\"", "var_name": "P3"}], "file": "core/vmutils/src/test/java/org/arakhne/afc/vmutil/locale/LocaleTest.java"}, "test_case": {"identifier": "getStringWithRawFormatStyleWithFormat2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getStringWithRawFormatStyleWithFormat2() {\n    \tNumber data;\n    \t\n    \tdata = Double.valueOf(123.456);\n    \tassertEquals(\n    \t\t\t\"123\",  //$NON-NLS-1$\n    \t\t\tLocale.getString(\"FORMAT_2\", data));  //$NON-NLS-1$\n\n    \tdata = Double.valueOf(-123.456);\n    \tassertEquals(\n    \t\t\t\"-123\",  //$NON-NLS-1$\n    \t\t\tLocale.getString(\"FORMAT_2\", data));  //$NON-NLS-1$\n\n    \tdata = Long.valueOf(123456);\n    \tassertEquals(\n    \t\t\t\"123456\",  //$NON-NLS-1$\n    \t\t\tLocale.getString(\"FORMAT_2\", data));  //$NON-NLS-1$\n\n    \tdata = Long.valueOf(-123456);\n    \tassertEquals(\n    \t\t\t\"-123456\",  //$NON-NLS-1$\n    \t\t\tLocale.getString(\"FORMAT_2\", data));  //$NON-NLS-1$\n\n    \tdata = Short.valueOf((short)123);\n    \tassertEquals(\n    \t\t\t\"123\",  //$NON-NLS-1$\n    \t\t\tLocale.getString(\"FORMAT_2\", data));  //$NON-NLS-1$\n\n    \tdata = Short.valueOf((short)-123);\n    \tassertEquals(\n    \t\t\t\"-123\",  //$NON-NLS-1$\n    \t\t\tLocale.getString(\"FORMAT_2\", data));  //$NON-NLS-1$\n\n    \tdata = new BigDecimal(\"123456789123456789123456789.123456789\");  //$NON-NLS-1$\n    \tassertEquals(\n    \t\t\t\"123456789123456789123456789\",  //$NON-NLS-1$\n    \t\t\tLocale.getString(\"FORMAT_2\", data));  //$NON-NLS-1$\n\n    \tdata = new BigDecimal(\"123456789123456789123456789.987654321\");  //$NON-NLS-1$\n    \tassertEquals(\n    \t\t\t\"123456789123456789123456790\",  //$NON-NLS-1$\n    \t\t\tLocale.getString(\"FORMAT_2\", data));  //$NON-NLS-1$\n\n    \tdata = new BigDecimal(\"-123456789123456789123456789.123456789\");  //$NON-NLS-1$\n    \tassertEquals(\n    \t\t\t\"-123456789123456789123456789\",  //$NON-NLS-1$\n    \t\t\tLocale.getString(\"FORMAT_2\", data));  //$NON-NLS-1$\n\n    \tdata = new BigDecimal(\"-123456789123456789123456789.987654321\");  //$NON-NLS-1$\n    \tassertEquals(\n    \t\t\t\"-123456789123456789123456790\",  //$NON-NLS-1$\n    \t\t\tLocale.getString(\"FORMAT_2\", data));  //$NON-NLS-1$\n\n    \tdata = new BigInteger(\"123456789123456789123456789123456789\");  //$NON-NLS-1$\n    \tassertEquals(\n    \t\t\t\"123456789123456789123456789123456789\",  //$NON-NLS-1$\n    \t\t\tLocale.getString(\"FORMAT_2\", data));  //$NON-NLS-1$\n\n    \tdata = new BigInteger(\"-123456789123456789123456789123456789\");  //$NON-NLS-1$\n    \tassertEquals(\n    \t\t\t\"-123456789123456789123456789123456789\",  //$NON-NLS-1$\n    \t\t\tLocale.getString(\"FORMAT_2\", data));  //$NON-NLS-1$\n    }", "signature": "void getStringWithRawFormatStyleWithFormat2()", "full_signature": "@Test public void getStringWithRawFormatStyleWithFormat2()", "class_method_signature": "LocaleTest.getStringWithRawFormatStyleWithFormat2()", "testcase": true, "constructor": false, "invocations": ["valueOf", "assertEquals", "getString", "valueOf", "assertEquals", "getString", "valueOf", "assertEquals", "getString", "valueOf", "assertEquals", "getString", "valueOf", "assertEquals", "getString", "valueOf", "assertEquals", "getString", "assertEquals", "getString", "assertEquals", "getString", "assertEquals", "getString", "assertEquals", "getString", "assertEquals", "getString", "assertEquals", "getString"]}, "focal_class": {"identifier": "Locale", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int BUFFER_SIZE = 2048;", "modifier": "private static final", "type": "int", "declarator": "BUFFER_SIZE = 2048", "var_name": "BUFFER_SIZE"}, {"original_string": "private static Charset[] decodingCharsets;", "modifier": "private static", "type": "Charset[]", "declarator": "decodingCharsets", "var_name": "decodingCharsets"}], "methods": [{"identifier": "Locale", "parameters": "()", "modifiers": "private", "return": "", "signature": " Locale()", "full_signature": "private  Locale()", "class_method_signature": "Locale.Locale()", "testcase": false, "constructor": true}, {"identifier": "getPriorizedDecodingCharsets", "parameters": "()", "modifiers": "public static", "return": "Charset[]", "signature": "Charset[] getPriorizedDecodingCharsets()", "full_signature": "public static Charset[] getPriorizedDecodingCharsets()", "class_method_signature": "Locale.getPriorizedDecodingCharsets()", "testcase": false, "constructor": false}, {"identifier": "setPriorizedDecodingCharsets", "parameters": "(Charset[] charsets)", "modifiers": "public static", "return": "void", "signature": "void setPriorizedDecodingCharsets(Charset[] charsets)", "full_signature": "public static void setPriorizedDecodingCharsets(Charset[] charsets)", "class_method_signature": "Locale.setPriorizedDecodingCharsets(Charset[] charsets)", "testcase": false, "constructor": false}, {"identifier": "detectResourceClass", "parameters": "(Class<?> resource)", "modifiers": "private static", "return": "Class<?>", "signature": "Class<?> detectResourceClass(Class<?> resource)", "full_signature": "private static Class<?> detectResourceClass(Class<?> resource)", "class_method_signature": "Locale.detectResourceClass(Class<?> resource)", "testcase": false, "constructor": false}, {"identifier": "getStringWithDefaultFrom", "parameters": "(String resourcePath, String key, String defaultValue, Object... params)", "modifiers": "@Pure @Inline(value = \"Locale.getStringWithDefaultFrom(ClassLoaderFinder.findClassLoader(), ($1), ($2), ($3), ($4))\", imported = {Locale.class, ClassLoaderFinder.class}) public static", "return": "String", "signature": "String getStringWithDefaultFrom(String resourcePath, String key, String defaultValue, Object... params)", "full_signature": "@Pure @Inline(value = \"Locale.getStringWithDefaultFrom(ClassLoaderFinder.findClassLoader(), ($1), ($2), ($3), ($4))\", imported = {Locale.class, ClassLoaderFinder.class}) public static String getStringWithDefaultFrom(String resourcePath, String key, String defaultValue, Object... params)", "class_method_signature": "Locale.getStringWithDefaultFrom(String resourcePath, String key, String defaultValue, Object... params)", "testcase": false, "constructor": false}, {"identifier": "getStringWithDefaultFrom", "parameters": "(ClassLoader classLoader, String resourcePath, String key,\n\t\t\tString defaultValue, Object... params)", "modifiers": "@Pure public static", "return": "String", "signature": "String getStringWithDefaultFrom(ClassLoader classLoader, String resourcePath, String key,\n\t\t\tString defaultValue, Object... params)", "full_signature": "@Pure public static String getStringWithDefaultFrom(ClassLoader classLoader, String resourcePath, String key,\n\t\t\tString defaultValue, Object... params)", "class_method_signature": "Locale.getStringWithDefaultFrom(ClassLoader classLoader, String resourcePath, String key,\n\t\t\tString defaultValue, Object... params)", "testcase": false, "constructor": false}, {"identifier": "getStringFrom", "parameters": "(String resourcePath, String key, Object... params)", "modifiers": "@Pure @Inline(value = \"Locale.getStringWithDefaultFrom(($1), ($2), ($3), ($4))\", imported = {Locale.class}) public static", "return": "String", "signature": "String getStringFrom(String resourcePath, String key, Object... params)", "full_signature": "@Pure @Inline(value = \"Locale.getStringWithDefaultFrom(($1), ($2), ($3), ($4))\", imported = {Locale.class}) public static String getStringFrom(String resourcePath, String key, Object... params)", "class_method_signature": "Locale.getStringFrom(String resourcePath, String key, Object... params)", "testcase": false, "constructor": false}, {"identifier": "getStringFrom", "parameters": "(ClassLoader classLoader, String resourcePath, String key, Object... params)", "modifiers": "@Pure @Inline(value = \"Locale.getStringWithDefaultFrom(($1), ($2), ($3), ($3), ($4))\", imported = {Locale.class}) public static", "return": "String", "signature": "String getStringFrom(ClassLoader classLoader, String resourcePath, String key, Object... params)", "full_signature": "@Pure @Inline(value = \"Locale.getStringWithDefaultFrom(($1), ($2), ($3), ($3), ($4))\", imported = {Locale.class}) public static String getStringFrom(ClassLoader classLoader, String resourcePath, String key, Object... params)", "class_method_signature": "Locale.getStringFrom(ClassLoader classLoader, String resourcePath, String key, Object... params)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(Class<?> resource, String key, Object... params)", "modifiers": "@Pure public static", "return": "String", "signature": "String getString(Class<?> resource, String key, Object... params)", "full_signature": "@Pure public static String getString(Class<?> resource, String key, Object... params)", "class_method_signature": "Locale.getString(Class<?> resource, String key, Object... params)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(ClassLoader classLoader, Class<?> resource, String key, Object... params)", "modifiers": "@Pure public static", "return": "String", "signature": "String getString(ClassLoader classLoader, Class<?> resource, String key, Object... params)", "full_signature": "@Pure public static String getString(ClassLoader classLoader, Class<?> resource, String key, Object... params)", "class_method_signature": "Locale.getString(ClassLoader classLoader, Class<?> resource, String key, Object... params)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(String key, Object... params)", "modifiers": "public static", "return": "String", "signature": "String getString(String key, Object... params)", "full_signature": "public static String getString(String key, Object... params)", "class_method_signature": "Locale.getString(String key, Object... params)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(ClassLoader classLoader, String key, Object... params)", "modifiers": "@Pure public static", "return": "String", "signature": "String getString(ClassLoader classLoader, String key, Object... params)", "full_signature": "@Pure public static String getString(ClassLoader classLoader, String key, Object... params)", "class_method_signature": "Locale.getString(ClassLoader classLoader, String key, Object... params)", "testcase": false, "constructor": false}, {"identifier": "getStringWithDefault", "parameters": "(Class<?> resource, String key, String defaultValue, Object... params)", "modifiers": "@Pure public static", "return": "String", "signature": "String getStringWithDefault(Class<?> resource, String key, String defaultValue, Object... params)", "full_signature": "@Pure public static String getStringWithDefault(Class<?> resource, String key, String defaultValue, Object... params)", "class_method_signature": "Locale.getStringWithDefault(Class<?> resource, String key, String defaultValue, Object... params)", "testcase": false, "constructor": false}, {"identifier": "getStringWithDefault", "parameters": "(ClassLoader classLoader, Class<?> resource, String key,\n\t\t\tString defaultValue, Object... params)", "modifiers": "@Pure public static", "return": "String", "signature": "String getStringWithDefault(ClassLoader classLoader, Class<?> resource, String key,\n\t\t\tString defaultValue, Object... params)", "full_signature": "@Pure public static String getStringWithDefault(ClassLoader classLoader, Class<?> resource, String key,\n\t\t\tString defaultValue, Object... params)", "class_method_signature": "Locale.getStringWithDefault(ClassLoader classLoader, Class<?> resource, String key,\n\t\t\tString defaultValue, Object... params)", "testcase": false, "constructor": false}, {"identifier": "getStringWithDefault", "parameters": "(String key, String defaultValue, Object... params)", "modifiers": "@Pure public static", "return": "String", "signature": "String getStringWithDefault(String key, String defaultValue, Object... params)", "full_signature": "@Pure public static String getStringWithDefault(String key, String defaultValue, Object... params)", "class_method_signature": "Locale.getStringWithDefault(String key, String defaultValue, Object... params)", "testcase": false, "constructor": false}, {"identifier": "getStringWithDefault", "parameters": "(ClassLoader classLoader, String key, String defaultValue, Object... params)", "modifiers": "@Pure public static", "return": "String", "signature": "String getStringWithDefault(ClassLoader classLoader, String key, String defaultValue, Object... params)", "full_signature": "@Pure public static String getStringWithDefault(ClassLoader classLoader, String key, String defaultValue, Object... params)", "class_method_signature": "Locale.getStringWithDefault(ClassLoader classLoader, String key, String defaultValue, Object... params)", "testcase": false, "constructor": false}, {"identifier": "decodeString", "parameters": "(byte[] bytes)", "modifiers": "@Pure public static", "return": "String", "signature": "String decodeString(byte[] bytes)", "full_signature": "@Pure public static String decodeString(byte[] bytes)", "class_method_signature": "Locale.decodeString(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "decodeString", "parameters": "(byte[] bytes, Charset charset, int referenceLength)", "modifiers": "private static", "return": "CharBuffer", "signature": "CharBuffer decodeString(byte[] bytes, Charset charset, int referenceLength)", "full_signature": "private static CharBuffer decodeString(byte[] bytes, Charset charset, int referenceLength)", "class_method_signature": "Locale.decodeString(byte[] bytes, Charset charset, int referenceLength)", "testcase": false, "constructor": false}, {"identifier": "decodeString", "parameters": "(InputStream stream)", "modifiers": "public static", "return": "String", "signature": "String decodeString(InputStream stream)", "full_signature": "public static String decodeString(InputStream stream)", "class_method_signature": "Locale.decodeString(InputStream stream)", "testcase": false, "constructor": false}, {"identifier": "decodeString", "parameters": "(InputStream stream, List<String> lineArray)", "modifiers": "public static", "return": "boolean", "signature": "boolean decodeString(InputStream stream, List<String> lineArray)", "full_signature": "public static boolean decodeString(InputStream stream, List<String> lineArray)", "class_method_signature": "Locale.decodeString(InputStream stream, List<String> lineArray)", "testcase": false, "constructor": false}, {"identifier": "decodeString", "parameters": "(InputStream stream, List<String> lineArray, Charset charset)", "modifiers": "private static", "return": "boolean", "signature": "boolean decodeString(InputStream stream, List<String> lineArray, Charset charset)", "full_signature": "private static boolean decodeString(InputStream stream, List<String> lineArray, Charset charset)", "class_method_signature": "Locale.decodeString(InputStream stream, List<String> lineArray, Charset charset)", "testcase": false, "constructor": false}], "file": "core/vmutils/src/main/java/org/arakhne/afc/vmutil/locale/Locale.java"}, "focal_method": {"identifier": "getString", "parameters": "(Class<?> resource, String key, Object... params)", "modifiers": "@Pure public static", "return": "String", "body": "@Pure\n\tpublic static String getString(Class<?> resource, String key, Object... params) {\n\t\treturn getString(ClassLoaderFinder.findClassLoader(), detectResourceClass(resource), key, params);\n\t}", "signature": "String getString(Class<?> resource, String key, Object... params)", "full_signature": "@Pure public static String getString(Class<?> resource, String key, Object... params)", "class_method_signature": "Locale.getString(Class<?> resource, String key, Object... params)", "testcase": false, "constructor": false, "invocations": ["getString", "findClassLoader", "detectResourceClass"]}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}