{"test_class": {"identifier": "ViewCustomizerTest", "superclass": "", "interfaces": "", "fields": [], "file": "kafka-webview-ui/src/test/java/org/sourcelab/kafka/webview/ui/manager/kafka/ViewCustomizerTest.java"}, "test_case": {"identifier": "testStartingPositionTimestamp", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStartingPositionTimestamp() {\n        final long timestamp = 2432323L;\n\n        // Create consume request\n        final ConsumeRequest consumeRequest = new ConsumeRequest();\n        consumeRequest.setAction(\"timestamp\");\n        consumeRequest.setTimestamp(timestamp);\n\n        // Create instance & override\n        final ViewCustomizer viewCustomizer = new ViewCustomizer(new View(), consumeRequest);\n        final StartingPosition startingPosition = viewCustomizer.getStartingPosition();\n\n        // validate\n        assertNotNull(startingPosition);\n        assertFalse(startingPosition.isStartFromTail());\n        assertFalse(startingPosition.isStartFromOffsets());\n        assertTrue(startingPosition.isStartFromTimestamp());\n        assertFalse(startingPosition.isStartFromHead());\n        assertEquals(\"Has expected timestamp\", timestamp, startingPosition.getTimestamp());\n    }", "signature": "void testStartingPositionTimestamp()", "full_signature": "@Test public void testStartingPositionTimestamp()", "class_method_signature": "ViewCustomizerTest.testStartingPositionTimestamp()", "testcase": true, "constructor": false, "invocations": ["setAction", "setTimestamp", "getStartingPosition", "assertNotNull", "assertFalse", "isStartFromTail", "assertFalse", "isStartFromOffsets", "assertTrue", "isStartFromTimestamp", "assertFalse", "isStartFromHead", "assertEquals", "getTimestamp"]}, "focal_class": {"identifier": "ViewCustomizer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final View view;", "modifier": "private final", "type": "View", "declarator": "view", "var_name": "view"}, {"original_string": "private final ConsumeRequest consumeRequest;", "modifier": "private final", "type": "ConsumeRequest", "declarator": "consumeRequest", "var_name": "consumeRequest"}], "methods": [{"identifier": "ViewCustomizer", "parameters": "(final View view, final ConsumeRequest consumeRequest)", "modifiers": "public", "return": "", "signature": " ViewCustomizer(final View view, final ConsumeRequest consumeRequest)", "full_signature": "public  ViewCustomizer(final View view, final ConsumeRequest consumeRequest)", "class_method_signature": "ViewCustomizer.ViewCustomizer(final View view, final ConsumeRequest consumeRequest)", "testcase": false, "constructor": true}, {"identifier": "overrideViewSettings", "parameters": "()", "modifiers": "public", "return": "View", "signature": "View overrideViewSettings()", "full_signature": "public View overrideViewSettings()", "class_method_signature": "ViewCustomizer.overrideViewSettings()", "testcase": false, "constructor": false}, {"identifier": "getFilterDefinitions", "parameters": "()", "modifiers": "public", "return": "List<FilterDefinition>", "signature": "List<FilterDefinition> getFilterDefinitions()", "full_signature": "public List<FilterDefinition> getFilterDefinitions()", "class_method_signature": "ViewCustomizer.getFilterDefinitions()", "testcase": false, "constructor": false}, {"identifier": "getStartingPosition", "parameters": "()", "modifiers": "public", "return": "StartingPosition", "signature": "StartingPosition getStartingPosition()", "full_signature": "public StartingPosition getStartingPosition()", "class_method_signature": "ViewCustomizer.getStartingPosition()", "testcase": false, "constructor": false}, {"identifier": "overrideResultPerPartition", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void overrideResultPerPartition()", "full_signature": "private void overrideResultPerPartition()", "class_method_signature": "ViewCustomizer.overrideResultPerPartition()", "testcase": false, "constructor": false}, {"identifier": "overridePartitions", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void overridePartitions()", "full_signature": "private void overridePartitions()", "class_method_signature": "ViewCustomizer.overridePartitions()", "testcase": false, "constructor": false}], "file": "kafka-webview-ui/src/main/java/org/sourcelab/kafka/webview/ui/manager/kafka/ViewCustomizer.java"}, "focal_method": {"identifier": "getStartingPosition", "parameters": "()", "modifiers": "public", "return": "StartingPosition", "body": "public StartingPosition getStartingPosition() {\n        final String requestedAction = consumeRequest.getAction();\n\n        switch (requestedAction) {\n            case \"head\":\n                return StartingPosition.newHeadPosition();\n            case \"tail\":\n                return StartingPosition.newTailPosition();\n            case \"timestamp\":\n                return StartingPosition.newPositionFromTimestamp(consumeRequest.getTimestamp());\n            case \"offsets\":\n                // todo\n            default:\n                // Fall back to resume from existing\n                return StartingPosition.newResumeFromExistingState();\n        }\n    }", "signature": "StartingPosition getStartingPosition()", "full_signature": "public StartingPosition getStartingPosition()", "class_method_signature": "ViewCustomizer.getStartingPosition()", "testcase": false, "constructor": false, "invocations": ["getAction", "newHeadPosition", "newTailPosition", "newPositionFromTimestamp", "getTimestamp", "newResumeFromExistingState"]}, "repository": {"repo_id": 106082622, "url": "https://github.com/SourceLabOrg/kafka-webview", "stars": 256, "created": "10/7/2017 8:28:45 AM +00:00", "updates": "2020-01-25T06:02:44+00:00", "fork": "False", "license": "licensed"}}