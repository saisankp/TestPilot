{"test_class": {"identifier": "PortableErrorMessageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JacksonTester<PortableErrorMessage> json;", "modifier": "private", "type": "JacksonTester<PortableErrorMessage>", "declarator": "json", "var_name": "json"}], "file": "optaweb-vehicle-routing-backend/src/test/java/org/optaweb/vehiclerouting/plugin/websocket/PortableErrorMessageTest.java"}, "test_case": {"identifier": "marshal_to_json", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void marshal_to_json() throws IOException {\n        String id = \"c670dd37-62fb-4e86-95ed-c1f4953aaeaa\";\n        String text = \"Error message.\\nDetails.\";\n        PortableErrorMessage portableErrorMessage = PortableErrorMessage.fromMessage(ErrorMessage.of(id, text));\n        assertThat(json.write(portableErrorMessage)).isStrictlyEqualToJson(\"portable-error-message.json\");\n    }", "signature": "void marshal_to_json()", "full_signature": "@Test void marshal_to_json()", "class_method_signature": "PortableErrorMessageTest.marshal_to_json()", "testcase": true, "constructor": false, "invocations": ["fromMessage", "of", "isStrictlyEqualToJson", "assertThat", "write"]}, "focal_class": {"identifier": "PortableErrorMessage", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String id;", "modifier": "private final", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private final String text;", "modifier": "private final", "type": "String", "declarator": "text", "var_name": "text"}], "methods": [{"identifier": "fromMessage", "parameters": "(ErrorMessage message)", "modifiers": "static", "return": "PortableErrorMessage", "signature": "PortableErrorMessage fromMessage(ErrorMessage message)", "full_signature": "static PortableErrorMessage fromMessage(ErrorMessage message)", "class_method_signature": "PortableErrorMessage.fromMessage(ErrorMessage message)", "testcase": false, "constructor": false}, {"identifier": "PortableErrorMessage", "parameters": "(String id, String text)", "modifiers": "", "return": "", "signature": " PortableErrorMessage(String id, String text)", "full_signature": "  PortableErrorMessage(String id, String text)", "class_method_signature": "PortableErrorMessage.PortableErrorMessage(String id, String text)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "PortableErrorMessage.getId()", "testcase": false, "constructor": false}, {"identifier": "getText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getText()", "full_signature": "public String getText()", "class_method_signature": "PortableErrorMessage.getText()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "PortableErrorMessage.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PortableErrorMessage.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PortableErrorMessage.toString()", "testcase": false, "constructor": false}], "file": "optaweb-vehicle-routing-backend/src/main/java/org/optaweb/vehiclerouting/plugin/websocket/PortableErrorMessage.java"}, "focal_method": {"identifier": "fromMessage", "parameters": "(ErrorMessage message)", "modifiers": "static", "return": "PortableErrorMessage", "body": "static PortableErrorMessage fromMessage(ErrorMessage message) {\n        return new PortableErrorMessage(message.id, message.text);\n    }", "signature": "PortableErrorMessage fromMessage(ErrorMessage message)", "full_signature": "static PortableErrorMessage fromMessage(ErrorMessage message)", "class_method_signature": "PortableErrorMessage.fromMessage(ErrorMessage message)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 142603842, "url": "https://github.com/kiegroup/optaweb-vehicle-routing", "stars": 42, "created": "7/27/2018 5:08:08 PM +00:00", "updates": "2020-01-27T22:19:48+00:00", "fork": "False", "license": "licensed"}}