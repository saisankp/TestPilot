{"test_class": {"identifier": "DependencyTest", "superclass": "", "interfaces": "", "fields": [], "file": "commons/src/test/java/org/axway/grapes/commons/datamodel/DependencyTest.java"}, "test_case": {"identifier": "checkIfTwoArtifactsAreEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void checkIfTwoArtifactsAreEquals(){\n\t\tArtifact artifact = DataModelFactory.createArtifact(\"com.my.company\", \"test\", \"1.0.0-SNAPSHOT\", \"win32\", \"jar\", \"jar\");\n\t\tArtifact artifact2 = DataModelFactory.createArtifact(\"com.my.company\", \"test\", \"1.0.0-SNAPSHOT\", \"win32\", \"jar\", \"jar\");\n\n\t\tDependency dep1 = DataModelFactory.createDependency(artifact, Scope.TEST);\n\t\tDependency dep2 = DataModelFactory.createDependency(artifact2, Scope.TEST);\n\t\tDependency dep3 = DataModelFactory.createDependency(artifact2, Scope.COMPILE);\n\n\t\tassertTrue(dep1.equals(dep2));\n\t\tassertFalse(dep1.equals(dep3));\n\t\tassertFalse(dep1.equals(\"test\"));\n\t}", "signature": "void checkIfTwoArtifactsAreEquals()", "full_signature": "@Test public void checkIfTwoArtifactsAreEquals()", "class_method_signature": "DependencyTest.checkIfTwoArtifactsAreEquals()", "testcase": true, "constructor": false, "invocations": ["createArtifact", "createArtifact", "createDependency", "createDependency", "createDependency", "assertTrue", "equals", "assertFalse", "equals", "assertFalse", "equals"]}, "focal_class": {"identifier": "Dependency", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String sourceName;", "modifier": "private", "type": "String", "declarator": "sourceName", "var_name": "sourceName"}, {"original_string": "private String sourceVersion;", "modifier": "private", "type": "String", "declarator": "sourceVersion", "var_name": "sourceVersion"}, {"original_string": "private Artifact target;", "modifier": "private", "type": "Artifact", "declarator": "target", "var_name": "target"}, {"original_string": "private Scope scope;", "modifier": "private", "type": "Scope", "declarator": "scope", "var_name": "scope"}], "methods": [{"identifier": "Dependency", "parameters": "()", "modifiers": "protected", "return": "", "signature": " Dependency()", "full_signature": "protected  Dependency()", "class_method_signature": "Dependency.Dependency()", "testcase": false, "constructor": true}, {"identifier": "getTarget", "parameters": "()", "modifiers": "public", "return": "Artifact", "signature": "Artifact getTarget()", "full_signature": "public Artifact getTarget()", "class_method_signature": "Dependency.getTarget()", "testcase": false, "constructor": false}, {"identifier": "setTarget", "parameters": "(final Artifact artifact)", "modifiers": "protected", "return": "void", "signature": "void setTarget(final Artifact artifact)", "full_signature": "protected void setTarget(final Artifact artifact)", "class_method_signature": "Dependency.setTarget(final Artifact artifact)", "testcase": false, "constructor": false}, {"identifier": "getScope", "parameters": "()", "modifiers": "public", "return": "Scope", "signature": "Scope getScope()", "full_signature": "public Scope getScope()", "class_method_signature": "Dependency.getScope()", "testcase": false, "constructor": false}, {"identifier": "setScope", "parameters": "(final Scope scope)", "modifiers": "protected", "return": "void", "signature": "void setScope(final Scope scope)", "full_signature": "protected void setScope(final Scope scope)", "class_method_signature": "Dependency.setScope(final Scope scope)", "testcase": false, "constructor": false}, {"identifier": "getSourceVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSourceVersion()", "full_signature": "public String getSourceVersion()", "class_method_signature": "Dependency.getSourceVersion()", "testcase": false, "constructor": false}, {"identifier": "setSourceVersion", "parameters": "(final String sourceVersion)", "modifiers": "public", "return": "void", "signature": "void setSourceVersion(final String sourceVersion)", "full_signature": "public void setSourceVersion(final String sourceVersion)", "class_method_signature": "Dependency.setSourceVersion(final String sourceVersion)", "testcase": false, "constructor": false}, {"identifier": "getSourceName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSourceName()", "full_signature": "public String getSourceName()", "class_method_signature": "Dependency.getSourceName()", "testcase": false, "constructor": false}, {"identifier": "setSourceName", "parameters": "(final String sourceName)", "modifiers": "public", "return": "void", "signature": "void setSourceName(final String sourceName)", "full_signature": "public void setSourceName(final String sourceName)", "class_method_signature": "Dependency.setSourceName(final String sourceName)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "Dependency.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Dependency.hashCode()", "testcase": false, "constructor": false}], "file": "commons/src/main/java/org/axway/grapes/commons/datamodel/Dependency.java"}, "focal_method": {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(final Object obj){\n        if(obj instanceof Dependency){\n            return hashCode() == obj.hashCode();\n        }\n\n        return false;\n    }", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "Dependency.equals(final Object obj)", "testcase": false, "constructor": false, "invocations": ["hashCode", "hashCode"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}