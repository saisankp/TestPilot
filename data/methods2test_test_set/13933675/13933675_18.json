{"test_class": {"identifier": "CameraDataValueEqTest", "superclass": "", "interfaces": "", "fields": [], "file": "vars-core/src/test/java/vars/annotation/CameraDataValueEqTest.java"}, "test_case": {"identifier": "toleranceTest1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public  void toleranceTest1() {\n        IValueEq<CameraData> eq = new CameraDataValueEq();\n        CameraData a = new ImmutableCameraData(null, \"a\", 1D, 2, 3F, \"aa\", 4, null, \"aaa\", 5F, 6F, 7F, 8F, \"aaaa\", 9F,\n                \"aaaaa\", 10F, 11F, \"aaaaaa\", 12);\n        CameraData b = new ImmutableCameraData(null, \"a\", 1.01, 2, 3F, \"aa\", 4, null, \"aaa\", 5F, 6F, 7F, 8F, \"aaaa\", 9F,\n                \"aaaaa\", 10F, 11F, \"aaaaaa\", 12);\n        assertFalse(eq.equal(a, b));\n    }", "signature": "void toleranceTest1()", "full_signature": "@Test public void toleranceTest1()", "class_method_signature": "CameraDataValueEqTest.toleranceTest1()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "equal"]}, "focal_class": {"identifier": "CameraDataValueEq", "superclass": "", "interfaces": "implements IValueEq<CameraData>", "fields": [{"original_string": "private final double eps;", "modifier": "private final", "type": "double", "declarator": "eps", "var_name": "eps"}], "methods": [{"identifier": "CameraDataValueEq", "parameters": "(double eps)", "modifiers": "public", "return": "", "signature": " CameraDataValueEq(double eps)", "full_signature": "public  CameraDataValueEq(double eps)", "class_method_signature": "CameraDataValueEq.CameraDataValueEq(double eps)", "testcase": false, "constructor": true}, {"identifier": "CameraDataValueEq", "parameters": "()", "modifiers": "public", "return": "", "signature": " CameraDataValueEq()", "full_signature": "public  CameraDataValueEq()", "class_method_signature": "CameraDataValueEq.CameraDataValueEq()", "testcase": false, "constructor": true}, {"identifier": "equal", "parameters": "(CameraData a, CameraData b)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equal(CameraData a, CameraData b)", "full_signature": "@Override public boolean equal(CameraData a, CameraData b)", "class_method_signature": "CameraDataValueEq.equal(CameraData a, CameraData b)", "testcase": false, "constructor": false}, {"identifier": "same", "parameters": "(Number a, Number b)", "modifiers": "private", "return": "boolean", "signature": "boolean same(Number a, Number b)", "full_signature": "private boolean same(Number a, Number b)", "class_method_signature": "CameraDataValueEq.same(Number a, Number b)", "testcase": false, "constructor": false}, {"identifier": "same", "parameters": "(String a, String b)", "modifiers": "private", "return": "boolean", "signature": "boolean same(String a, String b)", "full_signature": "private boolean same(String a, String b)", "class_method_signature": "CameraDataValueEq.same(String a, String b)", "testcase": false, "constructor": false}], "file": "vars-core/src/main/java/vars/annotation/CameraDataValueEq.java"}, "focal_method": {"identifier": "equal", "parameters": "(CameraData a, CameraData b)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equal(CameraData a, CameraData b) {\n        return same(a.getDirection(), b.getDirection())\n                && same(a.getFieldWidth(), b.getFieldWidth())\n                && same(a.getFocus(), b.getFocus())\n                && same(a.getHeading(), b.getHeading())\n                && same(a.getImageReference(), b.getImageReference())\n                && same(a.getIris(), b.getIris())\n                && same(a.getName(), b.getName())\n                && same(a.getPitch(), b.getPitch())\n                && same(a.getRoll(), b.getRoll())\n                && same(a.getViewHeight(), b.getViewHeight())\n                && same(a.getViewUnits(), b.getViewUnits())\n                && same(a.getViewWidth(), b.getViewWidth())\n                && same(a.getX(), b.getX())\n                && same(a.getXYUnits(), b.getXYUnits())\n                && same(a.getY(), b.getY())\n                && same(a.getZ(), b.getZ())\n                && same(a.getZoom(), b.getZoom())\n                && same(a.getZUnits(), b.getZUnits());\n    }", "signature": "boolean equal(CameraData a, CameraData b)", "full_signature": "@Override public boolean equal(CameraData a, CameraData b)", "class_method_signature": "CameraDataValueEq.equal(CameraData a, CameraData b)", "testcase": false, "constructor": false, "invocations": ["same", "getDirection", "getDirection", "same", "getFieldWidth", "getFieldWidth", "same", "getFocus", "getFocus", "same", "getHeading", "getHeading", "same", "getImageReference", "getImageReference", "same", "getIris", "getIris", "same", "getName", "getName", "same", "getPitch", "getPitch", "same", "getRoll", "getRoll", "same", "getViewHeight", "getViewHeight", "same", "getViewUnits", "getViewUnits", "same", "getViewWidth", "getViewWidth", "same", "getX", "getX", "same", "getXYUnits", "getXYUnits", "same", "getY", "getY", "same", "getZ", "getZ", "same", "getZoom", "getZoom", "same", "getZUnits", "getZUnits"]}, "repository": {"repo_id": 13933675, "url": "https://github.com/hohonuuli/vars", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 9, "size": 18273, "license": "licensed"}}