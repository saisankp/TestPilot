{"test_class": {"identifier": "RollingAverageTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/com/eveningoutpost/dexdrip/utils/math/RollingAverageTest.java"}, "test_case": {"identifier": "peakTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void peakTest() {\n        RollingAverage avg1 = new RollingAverage(2);\n        assertWithMessage(\"peak 2\").that(avg1.getPeak()).isEqualTo(0.5d);\n        avg1 = new RollingAverage(3);\n        assertWithMessage(\"peak 3\").that(avg1.getPeak()).isEqualTo(1d);\n        avg1 = new RollingAverage(4);\n        assertWithMessage(\"peak 4\").that(avg1.getPeak()).isEqualTo(1.5d);\n        avg1 = new RollingAverage(5);\n        assertWithMessage(\"peak 5\").that(avg1.getPeak()).isEqualTo(2d);\n    }", "signature": "void peakTest()", "full_signature": "@Test public void peakTest()", "class_method_signature": "RollingAverageTest.peakTest()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "that", "assertWithMessage", "getPeak", "isEqualTo", "that", "assertWithMessage", "getPeak", "isEqualTo", "that", "assertWithMessage", "getPeak", "isEqualTo", "that", "assertWithMessage", "getPeak"]}, "focal_class": {"identifier": "RollingAverage", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Getter\n    private final int size;", "modifier": "@Getter\n    private final", "type": "int", "declarator": "size", "var_name": "size"}, {"original_string": "@Getter\n    private final double peak;", "modifier": "@Getter\n    private final", "type": "double", "declarator": "peak", "var_name": "peak"}, {"original_string": "private final int peak_rounded;", "modifier": "private final", "type": "int", "declarator": "peak_rounded", "var_name": "peak_rounded"}, {"original_string": "private final double[] values;", "modifier": "private final", "type": "double[]", "declarator": "values", "var_name": "values"}, {"original_string": "private int position;", "modifier": "private", "type": "int", "declarator": "position", "var_name": "position"}], "methods": [{"identifier": "RollingAverage", "parameters": "(final int size)", "modifiers": "public", "return": "", "signature": " RollingAverage(final int size)", "full_signature": "public  RollingAverage(final int size)", "class_method_signature": "RollingAverage.RollingAverage(final int size)", "testcase": false, "constructor": true}, {"identifier": "put", "parameters": "(final double value)", "modifiers": "public synchronized", "return": "double", "signature": "double put(final double value)", "full_signature": "public synchronized double put(final double value)", "class_method_signature": "RollingAverage.put(final double value)", "testcase": false, "constructor": false}, {"identifier": "average", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double average()", "full_signature": "public double average()", "class_method_signature": "RollingAverage.average()", "testcase": false, "constructor": false}, {"identifier": "peak", "parameters": "()", "modifiers": "private", "return": "double", "signature": "double peak()", "full_signature": "private double peak()", "class_method_signature": "RollingAverage.peak()", "testcase": false, "constructor": false}, {"identifier": "reachedPeak", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean reachedPeak()", "full_signature": "public boolean reachedPeak()", "class_method_signature": "RollingAverage.reachedPeak()", "testcase": false, "constructor": false}, {"identifier": "toS", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toS()", "full_signature": "public String toS()", "class_method_signature": "RollingAverage.toS()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/eveningoutpost/dexdrip/utils/math/RollingAverage.java"}, "focal_method": {"identifier": "peak", "parameters": "()", "modifiers": "private", "return": "double", "body": "private double peak() {\n        return (size - 1) / 2d;\n    }", "signature": "double peak()", "full_signature": "private double peak()", "class_method_signature": "RollingAverage.peak()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 49717672, "url": "https://github.com/jamorham/xDrip-plus", "stars": 199, "created": "1/15/2016 12:31:22 PM +00:00", "updates": "2020-01-26T20:46:33+00:00", "fork": "False", "license": "licensed"}}