{"test_class": {"identifier": "EdgeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected Vertex<String> a;", "modifier": "protected", "type": "Vertex<String>", "declarator": "a", "var_name": "a"}, {"original_string": "protected Vertex<String> b;", "modifier": "protected", "type": "Vertex<String>", "declarator": "b", "var_name": "b"}, {"original_string": "protected Edge<String, String> tester;", "modifier": "protected", "type": "Edge<String, String>", "declarator": "tester", "var_name": "tester"}], "file": "src/edu/ku/brc/specify/tasks/subpane/wb/graph/EdgeTest.java"}, "test_case": {"identifier": "testEdge", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testEdge() {\n\t\tassertTrue(tester.getPointA() == a);\n\t\tassertTrue(tester.getPointB() == b);\n\t\tassertTrue(tester.getData().equals(\"edgy\"));\n\t}", "signature": "void testEdge()", "full_signature": "@Test public void testEdge()", "class_method_signature": "EdgeTest.testEdge()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "getPointA", "assertTrue", "getPointB", "assertTrue", "equals", "getData"]}, "focal_class": {"identifier": "Edge", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected Integer   cost;", "modifier": "protected", "type": "Integer", "declarator": "cost", "var_name": "cost"}, {"original_string": "protected F         data;", "modifier": "protected", "type": "F", "declarator": "data", "var_name": "data"}, {"original_string": "protected Vertex<E> pointA;", "modifier": "protected", "type": "Vertex<E>", "declarator": "pointA", "var_name": "pointA"}, {"original_string": "protected Vertex<E> pointB;", "modifier": "protected", "type": "Vertex<E>", "declarator": "pointB", "var_name": "pointB"}], "methods": [{"identifier": "Edge", "parameters": "(final Vertex<E> pointA, final Vertex<E> pointB)", "modifiers": "public", "return": "", "signature": " Edge(final Vertex<E> pointA, final Vertex<E> pointB)", "full_signature": "public  Edge(final Vertex<E> pointA, final Vertex<E> pointB)", "class_method_signature": "Edge.Edge(final Vertex<E> pointA, final Vertex<E> pointB)", "testcase": false, "constructor": true}, {"identifier": "Edge", "parameters": "(final Vertex<E> pointA, final Vertex<E> pointB, final F data)", "modifiers": "public", "return": "", "signature": " Edge(final Vertex<E> pointA, final Vertex<E> pointB, final F data)", "full_signature": "public  Edge(final Vertex<E> pointA, final Vertex<E> pointB, final F data)", "class_method_signature": "Edge.Edge(final Vertex<E> pointA, final Vertex<E> pointB, final F data)", "testcase": false, "constructor": true}, {"identifier": "getCost", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getCost()", "full_signature": "public Integer getCost()", "class_method_signature": "Edge.getCost()", "testcase": false, "constructor": false}, {"identifier": "setCost", "parameters": "(final Integer cost)", "modifiers": "public", "return": "void", "signature": "void setCost(final Integer cost)", "full_signature": "public void setCost(final Integer cost)", "class_method_signature": "Edge.setCost(final Integer cost)", "testcase": false, "constructor": false}, {"identifier": "getPointA", "parameters": "()", "modifiers": "public", "return": "Vertex<E>", "signature": "Vertex<E> getPointA()", "full_signature": "public Vertex<E> getPointA()", "class_method_signature": "Edge.getPointA()", "testcase": false, "constructor": false}, {"identifier": "getPointB", "parameters": "()", "modifiers": "public", "return": "Vertex<E>", "signature": "Vertex<E> getPointB()", "full_signature": "public Vertex<E> getPointB()", "class_method_signature": "Edge.getPointB()", "testcase": false, "constructor": false}, {"identifier": "getData", "parameters": "()", "modifiers": "public", "return": "F", "signature": "F getData()", "full_signature": "public F getData()", "class_method_signature": "Edge.getData()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object edgeObj)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "boolean", "signature": "boolean equals(Object edgeObj)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public boolean equals(Object edgeObj)", "class_method_signature": "Edge.equals(Object edgeObj)", "testcase": false, "constructor": false}, {"identifier": "dataIsEqual", "parameters": "(final F data1, final F data2)", "modifiers": "private", "return": "boolean", "signature": "boolean dataIsEqual(final F data1, final F data2)", "full_signature": "private boolean dataIsEqual(final F data1, final F data2)", "class_method_signature": "Edge.dataIsEqual(final F data1, final F data2)", "testcase": false, "constructor": false}], "file": "src/edu/ku/brc/specify/tasks/subpane/wb/graph/Edge.java"}, "focal_method": {"identifier": "Edge", "parameters": "(final Vertex<E> pointA, final Vertex<E> pointB)", "modifiers": "public", "return": "", "body": "public Edge(final Vertex<E> pointA, final Vertex<E> pointB)\n    {\n        this.cost = null;\n        this.pointA = pointA;\n        this.pointB = pointB;\n        this.data = null;\n    }", "signature": " Edge(final Vertex<E> pointA, final Vertex<E> pointB)", "full_signature": "public  Edge(final Vertex<E> pointA, final Vertex<E> pointB)", "class_method_signature": "Edge.Edge(final Vertex<E> pointA, final Vertex<E> pointB)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 107740230, "url": "https://github.com/specify/specify6", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 420761, "license": "licensed"}}