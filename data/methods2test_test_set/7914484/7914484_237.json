{"test_class": {"identifier": "TraxUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "spring-xml/src/test/java/org/springframework/xml/transform/TraxUtilsTest.java"}, "test_case": {"identifier": "testGetDocument", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetDocument() throws Exception {\n\t\tDocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactoryUtils.newInstance();\n\t\tdocumentBuilderFactory.setNamespaceAware(true);\n\t\tDocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();\n\t\tDocument document = documentBuilder.newDocument();\n\t\tAssert.assertSame(\"Invalid document\", document, TraxUtils.getDocument(new DOMSource(document)));\n\t\tElement element = document.createElement(\"element\");\n\t\tdocument.appendChild(element);\n\t\tAssert.assertSame(\"Invalid document\", document, TraxUtils.getDocument(new DOMSource(element)));\n\t}", "signature": "void testGetDocument()", "full_signature": "@Test public void testGetDocument()", "class_method_signature": "TraxUtilsTest.testGetDocument()", "testcase": true, "constructor": false, "invocations": ["newInstance", "setNamespaceAware", "newDocumentBuilder", "newDocument", "assertSame", "getDocument", "createElement", "appendChild", "assertSame", "getDocument"]}, "focal_class": {"identifier": "TraxUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getDocument", "parameters": "(DOMSource source)", "modifiers": "public static", "return": "Document", "signature": "Document getDocument(DOMSource source)", "full_signature": "public static Document getDocument(DOMSource source)", "class_method_signature": "TraxUtils.getDocument(DOMSource source)", "testcase": false, "constructor": false}, {"identifier": "doWithSource", "parameters": "(Source source, SourceCallback callback)", "modifiers": "public static", "return": "void", "signature": "void doWithSource(Source source, SourceCallback callback)", "full_signature": "public static void doWithSource(Source source, SourceCallback callback)", "class_method_signature": "TraxUtils.doWithSource(Source source, SourceCallback callback)", "testcase": false, "constructor": false}, {"identifier": "doWithResult", "parameters": "(Result result, ResultCallback callback)", "modifiers": "public static", "return": "void", "signature": "void doWithResult(Result result, ResultCallback callback)", "full_signature": "public static void doWithResult(Result result, ResultCallback callback)", "class_method_signature": "TraxUtils.doWithResult(Result result, ResultCallback callback)", "testcase": false, "constructor": false}], "file": "spring-xml/src/main/java/org/springframework/xml/transform/TraxUtils.java"}, "focal_method": {"identifier": "getDocument", "parameters": "(DOMSource source)", "modifiers": "public static", "return": "Document", "body": "public static Document getDocument(DOMSource source) {\n\t\tNode node = source.getNode();\n\t\tif (node instanceof Document) {\n\t\t\treturn (Document) node;\n\t\t} else if (node != null) {\n\t\t\treturn node.getOwnerDocument();\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}", "signature": "Document getDocument(DOMSource source)", "full_signature": "public static Document getDocument(DOMSource source)", "class_method_signature": "TraxUtils.getDocument(DOMSource source)", "testcase": false, "constructor": false, "invocations": ["getNode", "getOwnerDocument"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}