{"test_class": {"identifier": "AbortMultipartArchiveUploadCommandTest", "superclass": "extends AbstractCommandTest", "interfaces": "", "fields": [], "file": "glacieruploader-command/src/test/java/de/kopis/glacier/commands/AbortMultipartArchiveUploadCommandTest.java"}, "test_case": {"identifier": "exec", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void exec() throws Exception {\n        expect(client.abortMultipartUpload(isA(AbortMultipartUploadRequest.class))).andReturn(new AbortMultipartUploadResult()).times(1);\n        replay(client);\n\n        final OptionSet options = optionParser.parse(\"--abort-upload\", UUID.randomUUID().toString());\n        final AbortMultipartArchiveUploadCommand command = new AbortMultipartArchiveUploadCommand(client, sqs, sns);\n\n        assertTrue(command.valid(options, optionParser));\n        command.exec(options, optionParser);\n\n        verify(client);\n    }", "signature": "void exec()", "full_signature": "@Test public void exec()", "class_method_signature": "AbortMultipartArchiveUploadCommandTest.exec()", "testcase": true, "constructor": false, "invocations": ["times", "andReturn", "expect", "abortMultipartUpload", "isA", "replay", "parse", "toString", "randomUUID", "assertTrue", "valid", "exec", "verify"]}, "focal_class": {"identifier": "AbortMultipartArchiveUploadCommand", "superclass": "extends AbstractCommand", "interfaces": "", "fields": [], "methods": [{"identifier": "AbortMultipartArchiveUploadCommand", "parameters": "(AmazonGlacier client, AmazonSQS sqs, AmazonSNS sns)", "modifiers": "public", "return": "", "signature": " AbortMultipartArchiveUploadCommand(AmazonGlacier client, AmazonSQS sqs, AmazonSNS sns)", "full_signature": "public  AbortMultipartArchiveUploadCommand(AmazonGlacier client, AmazonSQS sqs, AmazonSNS sns)", "class_method_signature": "AbortMultipartArchiveUploadCommand.AbortMultipartArchiveUploadCommand(AmazonGlacier client, AmazonSQS sqs, AmazonSNS sns)", "testcase": false, "constructor": true}, {"identifier": "exec", "parameters": "(OptionSet options, GlacierUploaderOptionParser optionParser)", "modifiers": "@Override public", "return": "void", "signature": "void exec(OptionSet options, GlacierUploaderOptionParser optionParser)", "full_signature": "@Override public void exec(OptionSet options, GlacierUploaderOptionParser optionParser)", "class_method_signature": "AbortMultipartArchiveUploadCommand.exec(OptionSet options, GlacierUploaderOptionParser optionParser)", "testcase": false, "constructor": false}, {"identifier": "valid", "parameters": "(OptionSet options, GlacierUploaderOptionParser optionParser)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean valid(OptionSet options, GlacierUploaderOptionParser optionParser)", "full_signature": "@Override public boolean valid(OptionSet options, GlacierUploaderOptionParser optionParser)", "class_method_signature": "AbortMultipartArchiveUploadCommand.valid(OptionSet options, GlacierUploaderOptionParser optionParser)", "testcase": false, "constructor": false}, {"identifier": "abortUpload", "parameters": "(final String vaultName, final String uploadId)", "modifiers": "private", "return": "void", "signature": "void abortUpload(final String vaultName, final String uploadId)", "full_signature": "private void abortUpload(final String vaultName, final String uploadId)", "class_method_signature": "AbortMultipartArchiveUploadCommand.abortUpload(final String vaultName, final String uploadId)", "testcase": false, "constructor": false}], "file": "glacieruploader-command/src/main/java/de/kopis/glacier/commands/AbortMultipartArchiveUploadCommand.java"}, "focal_method": {"identifier": "exec", "parameters": "(OptionSet options, GlacierUploaderOptionParser optionParser)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void exec(OptionSet options, GlacierUploaderOptionParser optionParser) {\n        final String vaultName = options.valueOf(optionParser.vault);\n        final String uploadId = options.valueOf(optionParser.abortUpload);\n        try {\n            abortUpload(vaultName, uploadId);\n        } catch (AmazonServiceException e) {\n            log.error(\"Something went wrong at Amazon while aborting the multipart upload with id \" + uploadId + \". \" + e.getLocalizedMessage(), e);\n        } catch (AmazonClientException e) {\n            log.error(\"Something went wrong with the Amazon Client.\", e);\n        }\n    }", "signature": "void exec(OptionSet options, GlacierUploaderOptionParser optionParser)", "full_signature": "@Override public void exec(OptionSet options, GlacierUploaderOptionParser optionParser)", "class_method_signature": "AbortMultipartArchiveUploadCommand.exec(OptionSet options, GlacierUploaderOptionParser optionParser)", "testcase": false, "constructor": false, "invocations": ["valueOf", "valueOf", "abortUpload", "error", "getLocalizedMessage", "error"]}, "repository": {"repo_id": 5518934, "url": "https://github.com/MoriTanosuke/glacieruploader", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 243, "size": 6248, "license": "licensed"}}