{"test_class": {"identifier": "DbSetupTrackerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Operation operation1;", "modifier": "private", "type": "Operation", "declarator": "operation1", "var_name": "operation1"}, {"original_string": "private DbSetup dbSetup1;", "modifier": "private", "type": "DbSetup", "declarator": "dbSetup1", "var_name": "dbSetup1"}, {"original_string": "private Operation operation2;", "modifier": "private", "type": "Operation", "declarator": "operation2", "var_name": "operation2"}, {"original_string": "private DbSetup dbSetup2;", "modifier": "private", "type": "DbSetup", "declarator": "dbSetup2", "var_name": "dbSetup2"}], "file": "DbSetup-core/src/test/java/com/ninja_squad/dbsetup/DbSetupTrackerTest.java"}, "test_case": {"identifier": "launchIfNecessaryLaunchesTheFirstTime", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void launchIfNecessaryLaunchesTheFirstTime() throws SQLException {\n        DbSetupTracker tracker = new DbSetupTracker();\n        tracker.launchIfNecessary(dbSetup1);\n        verify(operation1).execute(any(Connection.class), any(BinderConfiguration.class));\n    }", "signature": "void launchIfNecessaryLaunchesTheFirstTime()", "full_signature": "@Test public void launchIfNecessaryLaunchesTheFirstTime()", "class_method_signature": "DbSetupTrackerTest.launchIfNecessaryLaunchesTheFirstTime()", "testcase": true, "constructor": false, "invocations": ["launchIfNecessary", "execute", "verify", "any", "any"]}, "focal_class": {"identifier": "DbSetupTracker", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DbSetup lastSetupLaunched;", "modifier": "private", "type": "DbSetup", "declarator": "lastSetupLaunched", "var_name": "lastSetupLaunched"}, {"original_string": "private boolean nextLaunchSkipped;", "modifier": "private", "type": "boolean", "declarator": "nextLaunchSkipped", "var_name": "nextLaunchSkipped"}], "methods": [{"identifier": "launchIfNecessary", "parameters": "(@Nonnull DbSetup dbSetup)", "modifiers": "public", "return": "void", "signature": "void launchIfNecessary(@Nonnull DbSetup dbSetup)", "full_signature": "public void launchIfNecessary(@Nonnull DbSetup dbSetup)", "class_method_signature": "DbSetupTracker.launchIfNecessary(@Nonnull DbSetup dbSetup)", "testcase": false, "constructor": false}, {"identifier": "skipNextLaunch", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void skipNextLaunch()", "full_signature": "public void skipNextLaunch()", "class_method_signature": "DbSetupTracker.skipNextLaunch()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DbSetupTracker.toString()", "testcase": false, "constructor": false}], "file": "DbSetup-core/src/main/java/com/ninja_squad/dbsetup/DbSetupTracker.java"}, "focal_method": {"identifier": "launchIfNecessary", "parameters": "(@Nonnull DbSetup dbSetup)", "modifiers": "public", "return": "void", "body": "public void launchIfNecessary(@Nonnull DbSetup dbSetup) {\n        boolean skipLaunch = nextLaunchSkipped && dbSetup.equals(lastSetupLaunched);\n        nextLaunchSkipped = false;\n        if (skipLaunch) {\n            return;\n        }\n        dbSetup.launch();\n        lastSetupLaunched = dbSetup;\n    }", "signature": "void launchIfNecessary(@Nonnull DbSetup dbSetup)", "full_signature": "public void launchIfNecessary(@Nonnull DbSetup dbSetup)", "class_method_signature": "DbSetupTracker.launchIfNecessary(@Nonnull DbSetup dbSetup)", "testcase": false, "constructor": false, "invocations": ["equals", "launch"]}, "repository": {"repo_id": 4260851, "url": "https://github.com/Ninja-Squad/DbSetup", "language": "Java", "is_fork": false, "fork_count": 30, "stargazer_count": 183, "size": 1379, "license": "licensed"}}