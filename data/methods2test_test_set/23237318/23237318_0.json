{"test_class": {"identifier": "AvroToJsonTest", "superclass": "", "interfaces": "", "fields": [], "file": "avro/src/test/java/com/quantiply/avro/AvroToJsonTest.java"}, "test_case": {"identifier": "testObjectToJson", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testObjectToJson() throws Exception {\n        AvroToJson avroToJson = new AvroToJson();\n        Thing thing = new Thing();\n        ObjectMapper objectMapper = new ObjectMapper();\n        byte[] jsonBytes = avroToJson.objectToJson(thing);\n        Map<String,String> obj = objectMapper.readValue(jsonBytes, Map.class);\n        assertEquals(\"hi\", obj.get(\"foo\"));\n        assertEquals(\"hello\", obj.get(\"bar\"));\n        String jsonStr = new String(jsonBytes, StandardCharsets.UTF_8);\n        assertTrue(jsonStr.contains(\"\\\"bar\\\":\\\"hello\\\"\"));\n    }", "signature": "void testObjectToJson()", "full_signature": "@Test public void testObjectToJson()", "class_method_signature": "AvroToJsonTest.testObjectToJson()", "testcase": true, "constructor": false, "invocations": ["objectToJson", "readValue", "assertEquals", "get", "assertEquals", "get", "assertTrue", "contains"]}, "focal_class": {"identifier": "AvroToJson", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ObjectMapper objMapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "objMapper", "var_name": "objMapper"}], "methods": [{"identifier": "AvroToJson", "parameters": "()", "modifiers": "public", "return": "", "signature": " AvroToJson()", "full_signature": "public  AvroToJson()", "class_method_signature": "AvroToJson.AvroToJson()", "testcase": false, "constructor": true}, {"identifier": "AvroToJson", "parameters": "(AvroToJSONCustomizer customizer)", "modifiers": "public", "return": "", "signature": " AvroToJson(AvroToJSONCustomizer customizer)", "full_signature": "public  AvroToJson(AvroToJSONCustomizer customizer)", "class_method_signature": "AvroToJson.AvroToJson(AvroToJSONCustomizer customizer)", "testcase": false, "constructor": true}, {"identifier": "objectToJson", "parameters": "(Object msg)", "modifiers": "public", "return": "byte[]", "signature": "byte[] objectToJson(Object msg)", "full_signature": "public byte[] objectToJson(Object msg)", "class_method_signature": "AvroToJson.objectToJson(Object msg)", "testcase": false, "constructor": false}, {"identifier": "jsonToObject", "parameters": "(byte[] bytes, Class<T> klaz)", "modifiers": "public", "return": "T", "signature": "T jsonToObject(byte[] bytes, Class<T> klaz)", "full_signature": "public T jsonToObject(byte[] bytes, Class<T> klaz)", "class_method_signature": "AvroToJson.jsonToObject(byte[] bytes, Class<T> klaz)", "testcase": false, "constructor": false}], "file": "avro/src/main/java/com/quantiply/avro/AvroToJson.java"}, "focal_method": {"identifier": "objectToJson", "parameters": "(Object msg)", "modifiers": "public", "return": "byte[]", "body": "public byte[] objectToJson(Object msg) throws Exception {\n        return objMapper.writeValueAsBytes(msg);\n    }", "signature": "byte[] objectToJson(Object msg)", "full_signature": "public byte[] objectToJson(Object msg)", "class_method_signature": "AvroToJson.objectToJson(Object msg)", "testcase": false, "constructor": false, "invocations": ["writeValueAsBytes"]}, "repository": {"repo_id": 23237318, "url": "https://github.com/quantiply/rico", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 5128, "license": "licensed"}}