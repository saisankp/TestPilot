{"test_class": {"identifier": "TestEventBus", "superclass": "", "interfaces": "", "fields": [], "file": "org.jvoicexml/src/test/java/org/jvoicexml/event/TestEventBus.java"}, "test_case": {"identifier": "testSubscribe", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSubscribe() {\n        final EventSubscriber subscriber = new MockEventSubscriber();\n        final EventBus bus = new EventBus();\n        final String type = \"test.dummy.event\";\n        bus.subscribe(type, subscriber);\n        Assert.assertTrue(bus.unsubscribe(type, subscriber));\n    }", "signature": "void testSubscribe()", "full_signature": "@Test public void testSubscribe()", "class_method_signature": "TestEventBus.testSubscribe()", "testcase": true, "constructor": false, "invocations": ["subscribe", "assertTrue", "unsubscribe"]}, "focal_class": {"identifier": "EventBus", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Collection<EventSubscription> subscriptions;", "modifier": "private final", "type": "Collection<EventSubscription>", "declarator": "subscriptions", "var_name": "subscriptions"}], "methods": [{"identifier": "EventBus", "parameters": "()", "modifiers": "public", "return": "", "signature": " EventBus()", "full_signature": "public  EventBus()", "class_method_signature": "EventBus.EventBus()", "testcase": false, "constructor": true}, {"identifier": "subscribe", "parameters": "(final String type, final EventSubscriber subscriber)", "modifiers": "public", "return": "void", "signature": "void subscribe(final String type, final EventSubscriber subscriber)", "full_signature": "public void subscribe(final String type, final EventSubscriber subscriber)", "class_method_signature": "EventBus.subscribe(final String type, final EventSubscriber subscriber)", "testcase": false, "constructor": false}, {"identifier": "unsubscribe", "parameters": "(final String type,\n            final EventSubscriber subscriber)", "modifiers": "public", "return": "boolean", "signature": "boolean unsubscribe(final String type,\n            final EventSubscriber subscriber)", "full_signature": "public boolean unsubscribe(final String type,\n            final EventSubscriber subscriber)", "class_method_signature": "EventBus.unsubscribe(final String type,\n            final EventSubscriber subscriber)", "testcase": false, "constructor": false}, {"identifier": "publish", "parameters": "(final JVoiceXMLEvent event)", "modifiers": "public", "return": "void", "signature": "void publish(final JVoiceXMLEvent event)", "full_signature": "public void publish(final JVoiceXMLEvent event)", "class_method_signature": "EventBus.publish(final JVoiceXMLEvent event)", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/event/EventBus.java"}, "focal_method": {"identifier": "subscribe", "parameters": "(final String type, final EventSubscriber subscriber)", "modifiers": "public", "return": "void", "body": "public void subscribe(final String type, final EventSubscriber subscriber) {\n        final EventSubscription subscription =\n                new EventSubscription(type, subscriber);\n        synchronized (subscriptions) {\n            subscriptions.add(subscription);\n        }\n    }", "signature": "void subscribe(final String type, final EventSubscriber subscriber)", "full_signature": "public void subscribe(final String type, final EventSubscriber subscriber)", "class_method_signature": "EventBus.subscribe(final String type, final EventSubscriber subscriber)", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}