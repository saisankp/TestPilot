{"test_class": {"identifier": "RegraTest", "superclass": "", "interfaces": "", "fields": [], "file": "sandbox/dominio/src/test/java/br/ufg/inf/es/saep/sandbox/dominio/regra/RegraTest.java"}, "test_case": {"identifier": "igualdadeEntreRegras", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void igualdadeEntreRegras() {\n        RegraParaTeste r1 = new RegraParaTeste(\"v\", \"d\", 1, 0);\n        RegraParaTeste r2 = new RegraParaTeste(\"v\", \"x\", 6, 5);\n        RegraParaTeste r3 = new RegraParaTeste(\"u\", \"d\", 1, 0);\n\n        // Casos cl\u00e1ssicos\n        assertEquals(r1, r1);\n        assertNotEquals(r1, \"impossivel igualdade\");\n\n        assertEquals(r1, r2);\n        assertEquals(r1.hashCode(), r2.hashCode());\n\n        assertNotEquals(r1, r3);\n        assertNotEquals(r2, r3);\n    }", "signature": "void igualdadeEntreRegras()", "full_signature": "@Test public void igualdadeEntreRegras()", "class_method_signature": "RegraTest.igualdadeEntreRegras()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "assertNotEquals", "assertEquals", "assertEquals", "hashCode", "hashCode", "assertNotEquals", "assertNotEquals"]}, "focal_class": {"identifier": "Regra", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String descricao;", "modifier": "private", "type": "String", "declarator": "descricao", "var_name": "descricao"}, {"original_string": "private float valorMaximo;", "modifier": "private", "type": "float", "declarator": "valorMaximo", "var_name": "valorMaximo"}, {"original_string": "private float valorMinimo;", "modifier": "private", "type": "float", "declarator": "valorMinimo", "var_name": "valorMinimo"}, {"original_string": "private String variavel;", "modifier": "private", "type": "String", "declarator": "variavel", "var_name": "variavel"}, {"original_string": "private List<String> dependeDe;", "modifier": "private", "type": "List<String>", "declarator": "dependeDe", "var_name": "dependeDe"}], "methods": [{"identifier": "Regra", "parameters": "(final String resultado,\n                 final String detalhes,\n                 final float maximo,\n                 final float minimo)", "modifiers": "public", "return": "", "signature": " Regra(final String resultado,\n                 final String detalhes,\n                 final float maximo,\n                 final float minimo)", "full_signature": "public  Regra(final String resultado,\n                 final String detalhes,\n                 final float maximo,\n                 final float minimo)", "class_method_signature": "Regra.Regra(final String resultado,\n                 final String detalhes,\n                 final float maximo,\n                 final float minimo)", "testcase": false, "constructor": true}, {"identifier": "getDescricao", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getDescricao()", "full_signature": "public final String getDescricao()", "class_method_signature": "Regra.getDescricao()", "testcase": false, "constructor": false}, {"identifier": "getValorMaximo", "parameters": "()", "modifiers": "public final", "return": "float", "signature": "float getValorMaximo()", "full_signature": "public final float getValorMaximo()", "class_method_signature": "Regra.getValorMaximo()", "testcase": false, "constructor": false}, {"identifier": "getValorMinimo", "parameters": "()", "modifiers": "public final", "return": "float", "signature": "float getValorMinimo()", "full_signature": "public final float getValorMinimo()", "class_method_signature": "Regra.getValorMinimo()", "testcase": false, "constructor": false}, {"identifier": "getVariavel", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getVariavel()", "full_signature": "public final String getVariavel()", "class_method_signature": "Regra.getVariavel()", "testcase": false, "constructor": false}, {"identifier": "getDependeDe", "parameters": "()", "modifiers": "public final", "return": "List<String>", "signature": "List<String> getDependeDe()", "full_signature": "public final List<String> getDependeDe()", "class_method_signature": "Regra.getDependeDe()", "testcase": false, "constructor": false}, {"identifier": "setDependeDe", "parameters": "(final List<String> dependencias)", "modifiers": "public final", "return": "void", "signature": "void setDependeDe(final List<String> dependencias)", "full_signature": "public final void setDependeDe(final List<String> dependencias)", "class_method_signature": "Regra.setDependeDe(final List<String> dependencias)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object outro)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean equals(final Object outro)", "full_signature": "@Override public final boolean equals(final Object outro)", "class_method_signature": "Regra.equals(final Object outro)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public final", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public final int hashCode()", "class_method_signature": "Regra.hashCode()", "testcase": false, "constructor": false}, {"identifier": "ajustaLimites", "parameters": "(final float valor)", "modifiers": "public final", "return": "float", "signature": "float ajustaLimites(final float valor)", "full_signature": "public final float ajustaLimites(final float valor)", "class_method_signature": "Regra.ajustaLimites(final float valor)", "testcase": false, "constructor": false}, {"identifier": "preparacao", "parameters": "(final Parser parser)", "modifiers": "public", "return": "void", "signature": "void preparacao(final Parser parser)", "full_signature": "public void preparacao(final Parser parser)", "class_method_signature": "Regra.preparacao(final Parser parser)", "testcase": false, "constructor": false}, {"identifier": "avalie", "parameters": "(List<Avaliavel> avaliaveis,\n                                 Map<String, Valor> contexto)", "modifiers": "public abstract", "return": "Valor", "signature": "Valor avalie(List<Avaliavel> avaliaveis,\n                                 Map<String, Valor> contexto)", "full_signature": "public abstract Valor avalie(List<Avaliavel> avaliaveis,\n                                 Map<String, Valor> contexto)", "class_method_signature": "Regra.avalie(List<Avaliavel> avaliaveis,\n                                 Map<String, Valor> contexto)", "testcase": false, "constructor": false}], "file": "sandbox/dominio/src/main/java/br/ufg/inf/es/saep/sandbox/dominio/regra/Regra.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public final", "return": "int", "body": "@Override\n    public final int hashCode() {\n        return variavel.hashCode();\n    }", "signature": "int hashCode()", "full_signature": "@Override public final int hashCode()", "class_method_signature": "Regra.hashCode()", "testcase": false, "constructor": false, "invocations": ["hashCode"]}, "repository": {"repo_id": 59021106, "url": "https://github.com/kyriosdata/saep", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 14, "size": 1194, "license": "licensed"}}