{"test_class": {"identifier": "AsyncRunnerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException exception = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "exception = ExpectedException.none()", "var_name": "exception"}], "file": "torch-api/src/test/java/org/brightify/torch/util/async/AsyncRunnerTest.java"}, "test_case": {"identifier": "exceptionIsThrownOnUnwrap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void exceptionIsThrownOnUnwrap() throws Exception {\n        final UnsupportedOperationException testedException = new UnsupportedOperationException(\"Test exception!\");\n\n        Callable<Boolean> task = new Callable<Boolean>() {\n            @Override\n            public Boolean call() throws Exception {\n                throw testedException;\n            }\n        };\n\n        Future<AsyncResult<Boolean>> resultFuture = AsyncRunner.submit(null, task);\n\n        AsyncResult<Boolean> result = resultFuture.get();\n\n        exception.expect(AsyncExecutionException.class);\n\n        result.unwrap();\n    }", "signature": "void exceptionIsThrownOnUnwrap()", "full_signature": "@Test public void exceptionIsThrownOnUnwrap()", "class_method_signature": "AsyncRunnerTest.exceptionIsThrownOnUnwrap()", "testcase": true, "constructor": false, "invocations": ["submit", "get", "expect", "unwrap"]}, "focal_class": {"identifier": "AsyncRunner", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(AsyncRunner.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(AsyncRunner.class.getName())", "var_name": "LOGGER"}, {"original_string": "private static AsyncExecutor executor;", "modifier": "private static", "type": "AsyncExecutor", "declarator": "executor", "var_name": "executor"}], "methods": [{"identifier": "AsyncRunner", "parameters": "()", "modifiers": "private", "return": "", "signature": " AsyncRunner()", "full_signature": "private  AsyncRunner()", "class_method_signature": "AsyncRunner.AsyncRunner()", "testcase": false, "constructor": true}, {"identifier": "submit", "parameters": "(Callback<RESULT> callback, Callable<RESULT> task)", "modifiers": "public static", "return": "Future<AsyncResult<RESULT>>", "signature": "Future<AsyncResult<RESULT>> submit(Callback<RESULT> callback, Callable<RESULT> task)", "full_signature": "public static Future<AsyncResult<RESULT>> submit(Callback<RESULT> callback, Callable<RESULT> task)", "class_method_signature": "AsyncRunner.submit(Callback<RESULT> callback, Callable<RESULT> task)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(Callable<RESULT> task)", "modifiers": "public static", "return": "RESULT", "signature": "RESULT run(Callable<RESULT> task)", "full_signature": "public static RESULT run(Callable<RESULT> task)", "class_method_signature": "AsyncRunner.run(Callable<RESULT> task)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(Callable<RESULT> task, long timeout, TimeUnit unit)", "modifiers": "public static", "return": "RESULT", "signature": "RESULT run(Callable<RESULT> task, long timeout, TimeUnit unit)", "full_signature": "public static RESULT run(Callable<RESULT> task, long timeout, TimeUnit unit)", "class_method_signature": "AsyncRunner.run(Callable<RESULT> task, long timeout, TimeUnit unit)", "testcase": false, "constructor": false}, {"identifier": "setExecutor", "parameters": "(AsyncExecutor executor)", "modifiers": "public static", "return": "void", "signature": "void setExecutor(AsyncExecutor executor)", "full_signature": "public static void setExecutor(AsyncExecutor executor)", "class_method_signature": "AsyncRunner.setExecutor(AsyncExecutor executor)", "testcase": false, "constructor": false}], "file": "torch-api/src/main/java/org/brightify/torch/util/async/AsyncRunner.java"}, "focal_method": {"identifier": "submit", "parameters": "(Callback<RESULT> callback, Callable<RESULT> task)", "modifiers": "public static", "return": "Future<AsyncResult<RESULT>>", "body": "public static <RESULT> Future<AsyncResult<RESULT>> submit(Callback<RESULT> callback, Callable<RESULT> task) {\n        if (executor == null) {\n            executor = new DefaultAsyncExecutor();\n            LOGGER.log(Level.INFO, \"AsyncExecutor was not set, default executor {0} will be used.\",\n                       executor.getClass().getSimpleName());\n        }\n\n        return executor.submit(callback, task);\n    }", "signature": "Future<AsyncResult<RESULT>> submit(Callback<RESULT> callback, Callable<RESULT> task)", "full_signature": "public static Future<AsyncResult<RESULT>> submit(Callback<RESULT> callback, Callable<RESULT> task)", "class_method_signature": "AsyncRunner.submit(Callback<RESULT> callback, Callable<RESULT> task)", "testcase": false, "constructor": false, "invocations": ["log", "getSimpleName", "getClass", "submit"]}, "repository": {"repo_id": 12483976, "url": "https://github.com/Brightify/torch-old", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 19, "size": 2225, "license": "licensed"}}