{"test_class": {"identifier": "DefaultTaintTolerationFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final DirectKubeConfiguration configuration = mock(DirectKubeConfiguration.class);", "modifier": "private final", "type": "DirectKubeConfiguration", "declarator": "configuration = mock(DirectKubeConfiguration.class)", "var_name": "configuration"}, {"original_string": "private final ApplicationSlaManagementService capacityManagement = mock(ApplicationSlaManagementService.class);", "modifier": "private final", "type": "ApplicationSlaManagementService", "declarator": "capacityManagement = mock(ApplicationSlaManagementService.class)", "var_name": "capacityManagement"}, {"original_string": "private final DefaultTaintTolerationFactory factory = new DefaultTaintTolerationFactory(\n            configuration,\n            capacityManagement\n    );", "modifier": "private final", "type": "DefaultTaintTolerationFactory", "declarator": "factory = new DefaultTaintTolerationFactory(\n            configuration,\n            capacityManagement\n    )", "var_name": "factory"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/mesos/kubeapiserver/direct/taint/DefaultTaintTolerationFactoryTest.java"}, "test_case": {"identifier": "testKubeBackendToleration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testKubeBackendToleration() {\n        List<V1Toleration> tolerations = factory.buildV1Toleration(newJobWithConstraint(JobConstraints.KUBE_BACKEND, \"kublet\"), JobGenerator.oneBatchTask());\n        V1Toleration gpuToleration = tolerations.stream().filter(t -> t.getKey().equals(KubeConstants.TAINT_KUBE_BACKEND)).findFirst().orElse(null);\n        assertThat(gpuToleration.getKey()).isEqualTo(KubeConstants.TAINT_KUBE_BACKEND);\n        assertThat(gpuToleration.getValue()).isEqualTo(\"kublet\");\n    }", "signature": "void testKubeBackendToleration()", "full_signature": "@Test public void testKubeBackendToleration()", "class_method_signature": "DefaultTaintTolerationFactoryTest.testKubeBackendToleration()", "testcase": true, "constructor": false, "invocations": ["buildV1Toleration", "newJobWithConstraint", "oneBatchTask", "orElse", "findFirst", "filter", "stream", "equals", "getKey", "isEqualTo", "assertThat", "getKey", "isEqualTo", "assertThat", "getValue"]}, "focal_class": {"identifier": "DefaultTaintTolerationFactory", "superclass": "", "interfaces": "implements TaintTolerationFactory", "fields": [{"original_string": "private final DirectKubeConfiguration configuration;", "modifier": "private final", "type": "DirectKubeConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private final ApplicationSlaManagementService capacityManagement;", "modifier": "private final", "type": "ApplicationSlaManagementService", "declarator": "capacityManagement", "var_name": "capacityManagement"}], "methods": [{"identifier": "DefaultTaintTolerationFactory", "parameters": "(DirectKubeConfiguration configuration,\n                                         ApplicationSlaManagementService capacityManagement)", "modifiers": "@Inject public", "return": "", "signature": " DefaultTaintTolerationFactory(DirectKubeConfiguration configuration,\n                                         ApplicationSlaManagementService capacityManagement)", "full_signature": "@Inject public  DefaultTaintTolerationFactory(DirectKubeConfiguration configuration,\n                                         ApplicationSlaManagementService capacityManagement)", "class_method_signature": "DefaultTaintTolerationFactory.DefaultTaintTolerationFactory(DirectKubeConfiguration configuration,\n                                         ApplicationSlaManagementService capacityManagement)", "testcase": false, "constructor": true}, {"identifier": "buildV1Toleration", "parameters": "(Job job, Task task)", "modifiers": "@Override public", "return": "List<V1Toleration>", "signature": "List<V1Toleration> buildV1Toleration(Job job, Task task)", "full_signature": "@Override public List<V1Toleration> buildV1Toleration(Job job, Task task)", "class_method_signature": "DefaultTaintTolerationFactory.buildV1Toleration(Job job, Task task)", "testcase": false, "constructor": false}, {"identifier": "resolveTierToleration", "parameters": "(Job job)", "modifiers": "private", "return": "V1Toleration", "signature": "V1Toleration resolveTierToleration(Job job)", "full_signature": "private V1Toleration resolveTierToleration(Job job)", "class_method_signature": "DefaultTaintTolerationFactory.resolveTierToleration(Job job)", "testcase": false, "constructor": false}, {"identifier": "resolveAvailabilityZoneToleration", "parameters": "(Job job)", "modifiers": "private", "return": "Optional<V1Toleration>", "signature": "Optional<V1Toleration> resolveAvailabilityZoneToleration(Job job)", "full_signature": "private Optional<V1Toleration> resolveAvailabilityZoneToleration(Job job)", "class_method_signature": "DefaultTaintTolerationFactory.resolveAvailabilityZoneToleration(Job job)", "testcase": false, "constructor": false}, {"identifier": "resolveGpuInstanceTypeToleration", "parameters": "(Job job)", "modifiers": "private", "return": "Optional<V1Toleration>", "signature": "Optional<V1Toleration> resolveGpuInstanceTypeToleration(Job job)", "full_signature": "private Optional<V1Toleration> resolveGpuInstanceTypeToleration(Job job)", "class_method_signature": "DefaultTaintTolerationFactory.resolveGpuInstanceTypeToleration(Job job)", "testcase": false, "constructor": false}, {"identifier": "resolveKubeBackendToleration", "parameters": "(Job job)", "modifiers": "private", "return": "Optional<V1Toleration>", "signature": "Optional<V1Toleration> resolveKubeBackendToleration(Job job)", "full_signature": "private Optional<V1Toleration> resolveKubeBackendToleration(Job job)", "class_method_signature": "DefaultTaintTolerationFactory.resolveKubeBackendToleration(Job job)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/taint/DefaultTaintTolerationFactory.java"}, "focal_method": {"identifier": "buildV1Toleration", "parameters": "(Job job, Task task)", "modifiers": "@Override public", "return": "List<V1Toleration>", "body": "@Override\n    public List<V1Toleration> buildV1Toleration(Job job, Task task) {\n        List<V1Toleration> tolerations = new ArrayList<>();\n\n        // Default taints.\n        tolerations.add(Tolerations.TOLERATION_VIRTUAL_KUBLET);\n        tolerations.add(Tolerations.TOLERATION_KUBE_SCHEDULER);\n\n        tolerations.add(resolveTierToleration(job));\n        resolveAvailabilityZoneToleration(job).ifPresent(tolerations::add);\n        resolveGpuInstanceTypeToleration(job).ifPresent(tolerations::add);\n        resolveKubeBackendToleration(job).ifPresent(tolerations::add);\n\n        return tolerations;\n    }", "signature": "List<V1Toleration> buildV1Toleration(Job job, Task task)", "full_signature": "@Override public List<V1Toleration> buildV1Toleration(Job job, Task task)", "class_method_signature": "DefaultTaintTolerationFactory.buildV1Toleration(Job job, Task task)", "testcase": false, "constructor": false, "invocations": ["add", "add", "add", "resolveTierToleration", "ifPresent", "resolveAvailabilityZoneToleration", "ifPresent", "resolveGpuInstanceTypeToleration", "ifPresent", "resolveKubeBackendToleration"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}