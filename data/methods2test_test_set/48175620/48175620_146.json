{"test_class": {"identifier": "HttpFunctionsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_PROTOCOL = \"httptest\";", "modifier": "private static final", "type": "String", "declarator": "TEST_PROTOCOL = \"httptest\"", "var_name": "TEST_PROTOCOL"}, {"original_string": "private static final String TEST_URI = TEST_PROTOCOL + \"://path\";", "modifier": "private static final", "type": "String", "declarator": "TEST_URI = TEST_PROTOCOL + \"://path\"", "var_name": "TEST_URI"}, {"original_string": "private static final HttpRequest HTTP_GET_REQUEST = httpGetRequest(TEST_URI).compile();", "modifier": "private static final", "type": "HttpRequest", "declarator": "HTTP_GET_REQUEST = httpGetRequest(TEST_URI).compile()", "var_name": "HTTP_GET_REQUEST"}, {"original_string": "private static final HttpRequest HTTP_POST_REQUEST = httpPostRequest(TEST_URI).compile();", "modifier": "private static final", "type": "HttpRequest", "declarator": "HTTP_POST_REQUEST = httpPostRequest(TEST_URI).compile()", "var_name": "HTTP_POST_REQUEST"}, {"original_string": "private static final HttpRequest HTTP_PUT_REQUEST = httpPutRequest(TEST_URI).compile();", "modifier": "private static final", "type": "HttpRequest", "declarator": "HTTP_PUT_REQUEST = httpPutRequest(TEST_URI).compile()", "var_name": "HTTP_PUT_REQUEST"}, {"original_string": "private static final HttpRequest HTTP_DELETE_REQUEST =\n      httpDeleteRequest(TEST_URI).compile();", "modifier": "private static final", "type": "HttpRequest", "declarator": "HTTP_DELETE_REQUEST =\n      httpDeleteRequest(TEST_URI).compile()", "var_name": "HTTP_DELETE_REQUEST"}, {"original_string": "private static final byte[] RESPONSE_BODY = new byte[] {2, 3, 4};", "modifier": "private static final", "type": "byte[]", "declarator": "RESPONSE_BODY = new byte[] {2, 3, 4}", "var_name": "RESPONSE_BODY"}, {"original_string": "private static final byte[] REQUEST_BODY = new byte[] {1, 2, 3};", "modifier": "private static final", "type": "byte[]", "declarator": "REQUEST_BODY = new byte[] {1, 2, 3}", "var_name": "REQUEST_BODY"}, {"original_string": "private static final HttpRequest HTTP_GET_REQUEST_WITH_HEADERS = httpGetRequest(TEST_URI)\n      .headerField(\"name\", \"value\").headerField(\"name2\", \"value2\").compile();", "modifier": "private static final", "type": "HttpRequest", "declarator": "HTTP_GET_REQUEST_WITH_HEADERS = httpGetRequest(TEST_URI)\n      .headerField(\"name\", \"value\").headerField(\"name2\", \"value2\").compile()", "var_name": "HTTP_GET_REQUEST_WITH_HEADERS"}, {"original_string": "private static final HttpRequest HTTP_POST_WITH_BODY_REQUEST =\n      httpPostRequest(TEST_URI).body(REQUEST_BODY).compile();", "modifier": "private static final", "type": "HttpRequest", "declarator": "HTTP_POST_WITH_BODY_REQUEST =\n      httpPostRequest(TEST_URI).body(REQUEST_BODY).compile()", "var_name": "HTTP_POST_WITH_BODY_REQUEST"}, {"original_string": "private static final HttpRequest HTTP_PUT_WITH_BODY_REQUEST =\n      httpPutRequest(TEST_URI).body(REQUEST_BODY).compile();", "modifier": "private static final", "type": "HttpRequest", "declarator": "HTTP_PUT_WITH_BODY_REQUEST =\n      httpPutRequest(TEST_URI).body(REQUEST_BODY).compile()", "var_name": "HTTP_PUT_WITH_BODY_REQUEST"}, {"original_string": "private static final String GET_METHOD = \"GET\";", "modifier": "private static final", "type": "String", "declarator": "GET_METHOD = \"GET\"", "var_name": "GET_METHOD"}, {"original_string": "private static final String POST_METHOD = \"POST\";", "modifier": "private static final", "type": "String", "declarator": "POST_METHOD = \"POST\"", "var_name": "POST_METHOD"}, {"original_string": "private static final String PUT_METHOD = \"PUT\";", "modifier": "private static final", "type": "String", "declarator": "PUT_METHOD = \"PUT\"", "var_name": "PUT_METHOD"}, {"original_string": "private static final String DELETE_METHOD = \"DELETE\";", "modifier": "private static final", "type": "String", "declarator": "DELETE_METHOD = \"DELETE\"", "var_name": "DELETE_METHOD"}, {"original_string": "private static final byte[] EMPTY_BODY = new byte[0];", "modifier": "private static final", "type": "byte[]", "declarator": "EMPTY_BODY = new byte[0]", "var_name": "EMPTY_BODY"}, {"original_string": "private static HttpURLConnection mockHttpURLConnection;", "modifier": "private static", "type": "HttpURLConnection", "declarator": "mockHttpURLConnection", "var_name": "mockHttpURLConnection"}], "file": "extensions/net/src/test/java/com/google/android/agera/net/HttpFunctionsTest.java"}, "test_case": {"identifier": "shouldPassOnGetMethod", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldPassOnGetMethod() throws Throwable {\n    assertThat(httpFunction()\n            .apply(HTTP_GET_REQUEST),\n        is(notNullValue()));\n    verify(mockHttpURLConnection).setRequestMethod(GET_METHOD);\n    verify(mockHttpURLConnection).disconnect();\n  }", "signature": "void shouldPassOnGetMethod()", "full_signature": "@Test public void shouldPassOnGetMethod()", "class_method_signature": "HttpFunctionsTest.shouldPassOnGetMethod()", "testcase": true, "constructor": false, "invocations": ["assertThat", "apply", "httpFunction", "is", "notNullValue", "setRequestMethod", "verify", "disconnect", "verify"]}, "focal_class": {"identifier": "HttpFunctions", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final UrlConnectionHttpFunction HTTP_FUNCTION = new UrlConnectionHttpFunction();", "modifier": "private static final", "type": "UrlConnectionHttpFunction", "declarator": "HTTP_FUNCTION = new UrlConnectionHttpFunction()", "var_name": "HTTP_FUNCTION"}], "methods": [{"identifier": "httpFunction", "parameters": "()", "modifiers": "@NonNull public static", "return": "Function<HttpRequest, Result<HttpResponse>>", "signature": "Function<HttpRequest, Result<HttpResponse>> httpFunction()", "full_signature": "@NonNull public static Function<HttpRequest, Result<HttpResponse>> httpFunction()", "class_method_signature": "HttpFunctions.httpFunction()", "testcase": false, "constructor": false}, {"identifier": "HttpFunctions", "parameters": "()", "modifiers": "private", "return": "", "signature": " HttpFunctions()", "full_signature": "private  HttpFunctions()", "class_method_signature": "HttpFunctions.HttpFunctions()", "testcase": false, "constructor": true}], "file": "extensions/net/src/main/java/com/google/android/agera/net/HttpFunctions.java"}, "focal_method": {"identifier": "httpFunction", "parameters": "()", "modifiers": "@NonNull public static", "return": "Function<HttpRequest, Result<HttpResponse>>", "body": "@NonNull\n  public static Function<HttpRequest, Result<HttpResponse>> httpFunction() {\n    return HTTP_FUNCTION;\n  }", "signature": "Function<HttpRequest, Result<HttpResponse>> httpFunction()", "full_signature": "@NonNull public static Function<HttpRequest, Result<HttpResponse>> httpFunction()", "class_method_signature": "HttpFunctions.httpFunction()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 48175620, "url": "https://github.com/google/agera", "language": "Java", "is_fork": false, "fork_count": 669, "stargazer_count": 7333, "size": 968, "license": "licensed"}}