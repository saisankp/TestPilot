{"test_class": {"identifier": "SmellTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Smell first;", "modifier": "private", "type": "Smell", "declarator": "first", "var_name": "first"}, {"original_string": "private Smell second;", "modifier": "private", "type": "Smell", "declarator": "second", "var_name": "second"}, {"original_string": "private Smell third;", "modifier": "private", "type": "Smell", "declarator": "third", "var_name": "third"}], "file": "SmellTracker/src/test/java/fr/inria/sniffer/tracker/analysis/model/SmellTest.java"}, "test_case": {"identifier": "testSmellHashcodeEquality", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSmellHashcodeEquality() {\n        assertEquals(first.hashCode(), second.hashCode());\n        assertNotEquals(first.hashCode(), third.hashCode());\n        second.parent = first;\n        assertNotEquals(first.hashCode(), second.hashCode());\n    }", "signature": "void testSmellHashcodeEquality()", "full_signature": "@Test public void testSmellHashcodeEquality()", "class_method_signature": "SmellTest.testSmellHashcodeEquality()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "hashCode", "hashCode", "assertNotEquals", "hashCode", "hashCode", "assertNotEquals", "hashCode", "hashCode"]}, "focal_class": {"identifier": "Smell", "superclass": "", "interfaces": "", "fields": [{"original_string": "public int id = -1;", "modifier": "public", "type": "int", "declarator": "id = -1", "var_name": "id"}, {"original_string": "public final String type;", "modifier": "public final", "type": "String", "declarator": "type", "var_name": "type"}, {"original_string": "public final String instance;", "modifier": "public final", "type": "String", "declarator": "instance", "var_name": "instance"}, {"original_string": "public final String file;", "modifier": "public final", "type": "String", "declarator": "file", "var_name": "file"}, {"original_string": "public Smell parent;", "modifier": "public", "type": "Smell", "declarator": "parent", "var_name": "parent"}], "methods": [{"identifier": "Smell", "parameters": "(String type, String instance, String file)", "modifiers": "public", "return": "", "signature": " Smell(String type, String instance, String file)", "full_signature": "public  Smell(String type, String instance, String file)", "class_method_signature": "Smell.Smell(String type, String instance, String file)", "testcase": false, "constructor": true}, {"identifier": "fromPaprikaInstance", "parameters": "(Map<String, Object> smell, String type)", "modifiers": "public static", "return": "Smell", "signature": "Smell fromPaprikaInstance(Map<String, Object> smell, String type)", "full_signature": "public static Smell fromPaprikaInstance(Map<String, Object> smell, String type)", "class_method_signature": "Smell.fromPaprikaInstance(Map<String, Object> smell, String type)", "testcase": false, "constructor": false}, {"identifier": "fromDetectorInstance", "parameters": "(Map<String, Object> smell)", "modifiers": "public static", "return": "Smell", "signature": "Smell fromDetectorInstance(Map<String, Object> smell)", "full_signature": "public static Smell fromDetectorInstance(Map<String, Object> smell)", "class_method_signature": "Smell.fromDetectorInstance(Map<String, Object> smell)", "testcase": false, "constructor": false}, {"identifier": "copyWithoutParent", "parameters": "(Smell smell)", "modifiers": "public static", "return": "Smell", "signature": "Smell copyWithoutParent(Smell smell)", "full_signature": "public static Smell copyWithoutParent(Smell smell)", "class_method_signature": "Smell.copyWithoutParent(Smell smell)", "testcase": false, "constructor": false}, {"identifier": "extractParent", "parameters": "(Map<String, Object> smell)", "modifiers": "private static", "return": "Smell", "signature": "Smell extractParent(Map<String, Object> smell)", "full_signature": "private static Smell extractParent(Map<String, Object> smell)", "class_method_signature": "Smell.extractParent(Map<String, Object> smell)", "testcase": false, "constructor": false}, {"identifier": "hasParent", "parameters": "(Map<String, Object> smell)", "modifiers": "private static", "return": "boolean", "signature": "boolean hasParent(Map<String, Object> smell)", "full_signature": "private static boolean hasParent(Map<String, Object> smell)", "class_method_signature": "Smell.hasParent(Map<String, Object> smell)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Smell.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Smell.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Smell.toString()", "testcase": false, "constructor": false}], "file": "SmellTracker/src/main/java/fr/inria/sniffer/tracker/analysis/model/Smell.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int hashCode() {\n        return Objects.hash(type, instance, file, parent);\n    }", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Smell.hashCode()", "testcase": false, "constructor": false, "invocations": ["hash"]}, "repository": {"repo_id": 175298978, "url": "https://github.com/HabchiSarra/Sniffer", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 10, "size": 587, "license": "licensed"}}