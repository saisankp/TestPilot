{"test_class": {"identifier": "ImmutablePolicyRevisionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long LOWER_VALUE = 5;", "modifier": "private static final", "type": "long", "declarator": "LOWER_VALUE = 5", "var_name": "LOWER_VALUE"}, {"original_string": "private static final long DEFAULT_VALUE = 23;", "modifier": "private static final", "type": "long", "declarator": "DEFAULT_VALUE = 23", "var_name": "DEFAULT_VALUE"}, {"original_string": "private static final long GREATER_VALUE = 42;", "modifier": "private static final", "type": "long", "declarator": "GREATER_VALUE = 42", "var_name": "GREATER_VALUE"}, {"original_string": "private ImmutablePolicyRevision underTest;", "modifier": "private", "type": "ImmutablePolicyRevision", "declarator": "underTest", "var_name": "underTest"}], "file": "model/policies/src/test/java/org/eclipse/ditto/model/policies/ImmutablePolicyRevisionTest.java"}, "test_case": {"identifier": "toLongReturnsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toLongReturnsExpected() {\n        assertThat(underTest.toLong()).isEqualTo(DEFAULT_VALUE);\n    }", "signature": "void toLongReturnsExpected()", "full_signature": "@Test public void toLongReturnsExpected()", "class_method_signature": "ImmutablePolicyRevisionTest.toLongReturnsExpected()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "toLong"]}, "focal_class": {"identifier": "ImmutablePolicyRevision", "superclass": "", "interfaces": "implements PolicyRevision", "fields": [{"original_string": "private final long value;", "modifier": "private final", "type": "long", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "ImmutablePolicyRevision", "parameters": "(final long theValue)", "modifiers": "private", "return": "", "signature": " ImmutablePolicyRevision(final long theValue)", "full_signature": "private  ImmutablePolicyRevision(final long theValue)", "class_method_signature": "ImmutablePolicyRevision.ImmutablePolicyRevision(final long theValue)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final long value)", "modifiers": "public static", "return": "ImmutablePolicyRevision", "signature": "ImmutablePolicyRevision of(final long value)", "full_signature": "public static ImmutablePolicyRevision of(final long value)", "class_method_signature": "ImmutablePolicyRevision.of(final long value)", "testcase": false, "constructor": false}, {"identifier": "isGreaterThan", "parameters": "(final PolicyRevision other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isGreaterThan(final PolicyRevision other)", "full_signature": "@Override public boolean isGreaterThan(final PolicyRevision other)", "class_method_signature": "ImmutablePolicyRevision.isGreaterThan(final PolicyRevision other)", "testcase": false, "constructor": false}, {"identifier": "isGreaterThanOrEqualTo", "parameters": "(final PolicyRevision other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isGreaterThanOrEqualTo(final PolicyRevision other)", "full_signature": "@Override public boolean isGreaterThanOrEqualTo(final PolicyRevision other)", "class_method_signature": "ImmutablePolicyRevision.isGreaterThanOrEqualTo(final PolicyRevision other)", "testcase": false, "constructor": false}, {"identifier": "isLowerThan", "parameters": "(final PolicyRevision other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isLowerThan(final PolicyRevision other)", "full_signature": "@Override public boolean isLowerThan(final PolicyRevision other)", "class_method_signature": "ImmutablePolicyRevision.isLowerThan(final PolicyRevision other)", "testcase": false, "constructor": false}, {"identifier": "isLowerThanOrEqualTo", "parameters": "(final PolicyRevision other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isLowerThanOrEqualTo(final PolicyRevision other)", "full_signature": "@Override public boolean isLowerThanOrEqualTo(final PolicyRevision other)", "class_method_signature": "ImmutablePolicyRevision.isLowerThanOrEqualTo(final PolicyRevision other)", "testcase": false, "constructor": false}, {"identifier": "increment", "parameters": "()", "modifiers": "@Override public", "return": "PolicyRevision", "signature": "PolicyRevision increment()", "full_signature": "@Override public PolicyRevision increment()", "class_method_signature": "ImmutablePolicyRevision.increment()", "testcase": false, "constructor": false}, {"identifier": "toLong", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long toLong()", "full_signature": "@Override public long toLong()", "class_method_signature": "ImmutablePolicyRevision.toLong()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutablePolicyRevision.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ImmutablePolicyRevision.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutablePolicyRevision.hashCode()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(final PolicyRevision o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(final PolicyRevision o)", "full_signature": "@Override public int compareTo(final PolicyRevision o)", "class_method_signature": "ImmutablePolicyRevision.compareTo(final PolicyRevision o)", "testcase": false, "constructor": false}], "file": "model/policies/src/main/java/org/eclipse/ditto/model/policies/ImmutablePolicyRevision.java"}, "focal_method": {"identifier": "toLong", "parameters": "()", "modifiers": "@Override public", "return": "long", "body": "@Override\n    public long toLong() {\n        return value;\n    }", "signature": "long toLong()", "full_signature": "@Override public long toLong()", "class_method_signature": "ImmutablePolicyRevision.toLong()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}