{"test_class": {"identifier": "ComparableCacheTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long CACHE_SIZE = 3;", "modifier": "private static final", "type": "long", "declarator": "CACHE_SIZE = 3", "var_name": "CACHE_SIZE"}, {"original_string": "private static final String KNOWN_KEY = \"knownKey\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_KEY = \"knownKey\"", "var_name": "KNOWN_KEY"}, {"original_string": "private static final long LOWER_VALUE = 1;", "modifier": "private static final", "type": "long", "declarator": "LOWER_VALUE = 1", "var_name": "LOWER_VALUE"}, {"original_string": "private static final long INITIAL_VALUE = 2;", "modifier": "private static final", "type": "long", "declarator": "INITIAL_VALUE = 2", "var_name": "INITIAL_VALUE"}, {"original_string": "private static final long HIGHER_VALUE = 3;", "modifier": "private static final", "type": "long", "declarator": "HIGHER_VALUE = 3", "var_name": "HIGHER_VALUE"}, {"original_string": "private ComparableCache<String, Long> underTest;", "modifier": "private", "type": "ComparableCache<String, Long>", "declarator": "underTest", "var_name": "underTest"}], "file": "services/utils/cache/src/test/java/org/eclipse/ditto/services/utils/cache/ComparableCacheTest.java"}, "test_case": {"identifier": "getOnNonExistingKeyReturnsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getOnNonExistingKeyReturnsNull() {\n        assertThat(underTest.get(\"nonExisting\")).isNull();\n    }", "signature": "void getOnNonExistingKeyReturnsNull()", "full_signature": "@Test public void getOnNonExistingKeyReturnsNull()", "class_method_signature": "ComparableCacheTest.getOnNonExistingKeyReturnsNull()", "testcase": true, "constructor": false, "invocations": ["isNull", "assertThat", "get"]}, "focal_class": {"identifier": "ComparableCache", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ComparableCache.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ComparableCache.class)", "var_name": "LOGGER"}, {"original_string": "private final ConcurrentMap<K, V> internalCache;", "modifier": "private final", "type": "ConcurrentMap<K, V>", "declarator": "internalCache", "var_name": "internalCache"}], "methods": [{"identifier": "ComparableCache", "parameters": "(final int size)", "modifiers": "public", "return": "", "signature": " ComparableCache(final int size)", "full_signature": "public  ComparableCache(final int size)", "class_method_signature": "ComparableCache.ComparableCache(final int size)", "testcase": false, "constructor": true}, {"identifier": "ComparableCache", "parameters": "(final int size, @Nullable String cacheName)", "modifiers": "public", "return": "", "signature": " ComparableCache(final int size, @Nullable String cacheName)", "full_signature": "public  ComparableCache(final int size, @Nullable String cacheName)", "class_method_signature": "ComparableCache.ComparableCache(final int size, @Nullable String cacheName)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "(final K key)", "modifiers": "@Nullable public", "return": "V", "signature": "V get(final K key)", "full_signature": "@Nullable public V get(final K key)", "class_method_signature": "ComparableCache.get(final K key)", "testcase": false, "constructor": false}, {"identifier": "updateIfNewOrGreater", "parameters": "(final K key, final V newValue)", "modifiers": "public", "return": "boolean", "signature": "boolean updateIfNewOrGreater(final K key, final V newValue)", "full_signature": "public boolean updateIfNewOrGreater(final K key, final V newValue)", "class_method_signature": "ComparableCache.updateIfNewOrGreater(final K key, final V newValue)", "testcase": false, "constructor": false}], "file": "services/utils/cache/src/main/java/org/eclipse/ditto/services/utils/cache/ComparableCache.java"}, "focal_method": {"identifier": "get", "parameters": "(final K key)", "modifiers": "@Nullable public", "return": "V", "body": "@Nullable\n    public V get(final K key) {\n        requireNonNull(key);\n\n        return internalCache.get(key);\n    }", "signature": "V get(final K key)", "full_signature": "@Nullable public V get(final K key)", "class_method_signature": "ComparableCache.get(final K key)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "get"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}