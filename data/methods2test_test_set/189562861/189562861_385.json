{"test_class": {"identifier": "ApplicationConfigTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-config/dubbo-config-api/src/test/java/com/alibaba/dubbo/config/ApplicationConfigTest.java"}, "test_case": {"identifier": "testEnvironment2", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n    public void testEnvironment2() throws Exception {\n        ApplicationConfig application = new ApplicationConfig(\"app\");\n        application.setEnvironment(\"illegal-env\");\n    }", "signature": "void testEnvironment2()", "full_signature": "@Test(expected = IllegalStateException.class) public void testEnvironment2()", "class_method_signature": "ApplicationConfigTest.testEnvironment2()", "testcase": true, "constructor": false, "invocations": ["setEnvironment"]}, "focal_class": {"identifier": "ApplicationConfig", "superclass": "extends AbstractConfig", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 5508512956753757169L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 5508512956753757169L", "var_name": "serialVersionUID"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String version;", "modifier": "private", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "private String owner;", "modifier": "private", "type": "String", "declarator": "owner", "var_name": "owner"}, {"original_string": "private String organization;", "modifier": "private", "type": "String", "declarator": "organization", "var_name": "organization"}, {"original_string": "private String architecture;", "modifier": "private", "type": "String", "declarator": "architecture", "var_name": "architecture"}, {"original_string": "private String environment;", "modifier": "private", "type": "String", "declarator": "environment", "var_name": "environment"}, {"original_string": "private String compiler;", "modifier": "private", "type": "String", "declarator": "compiler", "var_name": "compiler"}, {"original_string": "private String logger;", "modifier": "private", "type": "String", "declarator": "logger", "var_name": "logger"}, {"original_string": "private List<RegistryConfig> registries;", "modifier": "private", "type": "List<RegistryConfig>", "declarator": "registries", "var_name": "registries"}, {"original_string": "private MonitorConfig monitor;", "modifier": "private", "type": "MonitorConfig", "declarator": "monitor", "var_name": "monitor"}, {"original_string": "private Boolean isDefault;", "modifier": "private", "type": "Boolean", "declarator": "isDefault", "var_name": "isDefault"}, {"original_string": "private String dumpDirectory;", "modifier": "private", "type": "String", "declarator": "dumpDirectory", "var_name": "dumpDirectory"}, {"original_string": "private Boolean qosEnable;", "modifier": "private", "type": "Boolean", "declarator": "qosEnable", "var_name": "qosEnable"}, {"original_string": "private Integer qosPort;", "modifier": "private", "type": "Integer", "declarator": "qosPort", "var_name": "qosPort"}, {"original_string": "private Boolean qosAcceptForeignIp;", "modifier": "private", "type": "Boolean", "declarator": "qosAcceptForeignIp", "var_name": "qosAcceptForeignIp"}, {"original_string": "private Map<String, String> parameters;", "modifier": "private", "type": "Map<String, String>", "declarator": "parameters", "var_name": "parameters"}], "methods": [{"identifier": "ApplicationConfig", "parameters": "()", "modifiers": "public", "return": "", "signature": " ApplicationConfig()", "full_signature": "public  ApplicationConfig()", "class_method_signature": "ApplicationConfig.ApplicationConfig()", "testcase": false, "constructor": true}, {"identifier": "ApplicationConfig", "parameters": "(String name)", "modifiers": "public", "return": "", "signature": " ApplicationConfig(String name)", "full_signature": "public  ApplicationConfig(String name)", "class_method_signature": "ApplicationConfig.ApplicationConfig(String name)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Parameter(key = Constants.APPLICATION_KEY, required = true) public", "return": "String", "signature": "String getName()", "full_signature": "@Parameter(key = Constants.APPLICATION_KEY, required = true) public String getName()", "class_method_signature": "ApplicationConfig.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void setName(String name)", "full_signature": "public void setName(String name)", "class_method_signature": "ApplicationConfig.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Parameter(key = \"application.version\") public", "return": "String", "signature": "String getVersion()", "full_signature": "@Parameter(key = \"application.version\") public String getVersion()", "class_method_signature": "ApplicationConfig.getVersion()", "testcase": false, "constructor": false}, {"identifier": "setVersion", "parameters": "(String version)", "modifiers": "public", "return": "void", "signature": "void setVersion(String version)", "full_signature": "public void setVersion(String version)", "class_method_signature": "ApplicationConfig.setVersion(String version)", "testcase": false, "constructor": false}, {"identifier": "getOwner", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOwner()", "full_signature": "public String getOwner()", "class_method_signature": "ApplicationConfig.getOwner()", "testcase": false, "constructor": false}, {"identifier": "setOwner", "parameters": "(String owner)", "modifiers": "public", "return": "void", "signature": "void setOwner(String owner)", "full_signature": "public void setOwner(String owner)", "class_method_signature": "ApplicationConfig.setOwner(String owner)", "testcase": false, "constructor": false}, {"identifier": "getOrganization", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOrganization()", "full_signature": "public String getOrganization()", "class_method_signature": "ApplicationConfig.getOrganization()", "testcase": false, "constructor": false}, {"identifier": "setOrganization", "parameters": "(String organization)", "modifiers": "public", "return": "void", "signature": "void setOrganization(String organization)", "full_signature": "public void setOrganization(String organization)", "class_method_signature": "ApplicationConfig.setOrganization(String organization)", "testcase": false, "constructor": false}, {"identifier": "getArchitecture", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getArchitecture()", "full_signature": "public String getArchitecture()", "class_method_signature": "ApplicationConfig.getArchitecture()", "testcase": false, "constructor": false}, {"identifier": "setArchitecture", "parameters": "(String architecture)", "modifiers": "public", "return": "void", "signature": "void setArchitecture(String architecture)", "full_signature": "public void setArchitecture(String architecture)", "class_method_signature": "ApplicationConfig.setArchitecture(String architecture)", "testcase": false, "constructor": false}, {"identifier": "getEnvironment", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEnvironment()", "full_signature": "public String getEnvironment()", "class_method_signature": "ApplicationConfig.getEnvironment()", "testcase": false, "constructor": false}, {"identifier": "setEnvironment", "parameters": "(String environment)", "modifiers": "public", "return": "void", "signature": "void setEnvironment(String environment)", "full_signature": "public void setEnvironment(String environment)", "class_method_signature": "ApplicationConfig.setEnvironment(String environment)", "testcase": false, "constructor": false}, {"identifier": "getRegistry", "parameters": "()", "modifiers": "public", "return": "RegistryConfig", "signature": "RegistryConfig getRegistry()", "full_signature": "public RegistryConfig getRegistry()", "class_method_signature": "ApplicationConfig.getRegistry()", "testcase": false, "constructor": false}, {"identifier": "setRegistry", "parameters": "(RegistryConfig registry)", "modifiers": "public", "return": "void", "signature": "void setRegistry(RegistryConfig registry)", "full_signature": "public void setRegistry(RegistryConfig registry)", "class_method_signature": "ApplicationConfig.setRegistry(RegistryConfig registry)", "testcase": false, "constructor": false}, {"identifier": "getRegistries", "parameters": "()", "modifiers": "public", "return": "List<RegistryConfig>", "signature": "List<RegistryConfig> getRegistries()", "full_signature": "public List<RegistryConfig> getRegistries()", "class_method_signature": "ApplicationConfig.getRegistries()", "testcase": false, "constructor": false}, {"identifier": "setRegistries", "parameters": "(List<? extends RegistryConfig> registries)", "modifiers": "@SuppressWarnings({\"unchecked\"}) public", "return": "void", "signature": "void setRegistries(List<? extends RegistryConfig> registries)", "full_signature": "@SuppressWarnings({\"unchecked\"}) public void setRegistries(List<? extends RegistryConfig> registries)", "class_method_signature": "ApplicationConfig.setRegistries(List<? extends RegistryConfig> registries)", "testcase": false, "constructor": false}, {"identifier": "getMonitor", "parameters": "()", "modifiers": "public", "return": "MonitorConfig", "signature": "MonitorConfig getMonitor()", "full_signature": "public MonitorConfig getMonitor()", "class_method_signature": "ApplicationConfig.getMonitor()", "testcase": false, "constructor": false}, {"identifier": "setMonitor", "parameters": "(MonitorConfig monitor)", "modifiers": "public", "return": "void", "signature": "void setMonitor(MonitorConfig monitor)", "full_signature": "public void setMonitor(MonitorConfig monitor)", "class_method_signature": "ApplicationConfig.setMonitor(MonitorConfig monitor)", "testcase": false, "constructor": false}, {"identifier": "setMonitor", "parameters": "(String monitor)", "modifiers": "public", "return": "void", "signature": "void setMonitor(String monitor)", "full_signature": "public void setMonitor(String monitor)", "class_method_signature": "ApplicationConfig.setMonitor(String monitor)", "testcase": false, "constructor": false}, {"identifier": "getCompiler", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCompiler()", "full_signature": "public String getCompiler()", "class_method_signature": "ApplicationConfig.getCompiler()", "testcase": false, "constructor": false}, {"identifier": "setCompiler", "parameters": "(String compiler)", "modifiers": "public", "return": "void", "signature": "void setCompiler(String compiler)", "full_signature": "public void setCompiler(String compiler)", "class_method_signature": "ApplicationConfig.setCompiler(String compiler)", "testcase": false, "constructor": false}, {"identifier": "getLogger", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLogger()", "full_signature": "public String getLogger()", "class_method_signature": "ApplicationConfig.getLogger()", "testcase": false, "constructor": false}, {"identifier": "setLogger", "parameters": "(String logger)", "modifiers": "public", "return": "void", "signature": "void setLogger(String logger)", "full_signature": "public void setLogger(String logger)", "class_method_signature": "ApplicationConfig.setLogger(String logger)", "testcase": false, "constructor": false}, {"identifier": "isDefault", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isDefault()", "full_signature": "public Boolean isDefault()", "class_method_signature": "ApplicationConfig.isDefault()", "testcase": false, "constructor": false}, {"identifier": "setDefault", "parameters": "(Boolean isDefault)", "modifiers": "public", "return": "void", "signature": "void setDefault(Boolean isDefault)", "full_signature": "public void setDefault(Boolean isDefault)", "class_method_signature": "ApplicationConfig.setDefault(Boolean isDefault)", "testcase": false, "constructor": false}, {"identifier": "getDumpDirectory", "parameters": "()", "modifiers": "@Parameter(key = Constants.DUMP_DIRECTORY) public", "return": "String", "signature": "String getDumpDirectory()", "full_signature": "@Parameter(key = Constants.DUMP_DIRECTORY) public String getDumpDirectory()", "class_method_signature": "ApplicationConfig.getDumpDirectory()", "testcase": false, "constructor": false}, {"identifier": "setDumpDirectory", "parameters": "(String dumpDirectory)", "modifiers": "public", "return": "void", "signature": "void setDumpDirectory(String dumpDirectory)", "full_signature": "public void setDumpDirectory(String dumpDirectory)", "class_method_signature": "ApplicationConfig.setDumpDirectory(String dumpDirectory)", "testcase": false, "constructor": false}, {"identifier": "getQosEnable", "parameters": "()", "modifiers": "@Parameter(key = Constants.QOS_ENABLE) public", "return": "Boolean", "signature": "Boolean getQosEnable()", "full_signature": "@Parameter(key = Constants.QOS_ENABLE) public Boolean getQosEnable()", "class_method_signature": "ApplicationConfig.getQosEnable()", "testcase": false, "constructor": false}, {"identifier": "setQosEnable", "parameters": "(Boolean qosEnable)", "modifiers": "public", "return": "void", "signature": "void setQosEnable(Boolean qosEnable)", "full_signature": "public void setQosEnable(Boolean qosEnable)", "class_method_signature": "ApplicationConfig.setQosEnable(Boolean qosEnable)", "testcase": false, "constructor": false}, {"identifier": "getQosPort", "parameters": "()", "modifiers": "@Parameter(key = Constants.QOS_PORT) public", "return": "Integer", "signature": "Integer getQosPort()", "full_signature": "@Parameter(key = Constants.QOS_PORT) public Integer getQosPort()", "class_method_signature": "ApplicationConfig.getQosPort()", "testcase": false, "constructor": false}, {"identifier": "setQosPort", "parameters": "(Integer qosPort)", "modifiers": "public", "return": "void", "signature": "void setQosPort(Integer qosPort)", "full_signature": "public void setQosPort(Integer qosPort)", "class_method_signature": "ApplicationConfig.setQosPort(Integer qosPort)", "testcase": false, "constructor": false}, {"identifier": "getQosAcceptForeignIp", "parameters": "()", "modifiers": "@Parameter(key = Constants.ACCEPT_FOREIGN_IP) public", "return": "Boolean", "signature": "Boolean getQosAcceptForeignIp()", "full_signature": "@Parameter(key = Constants.ACCEPT_FOREIGN_IP) public Boolean getQosAcceptForeignIp()", "class_method_signature": "ApplicationConfig.getQosAcceptForeignIp()", "testcase": false, "constructor": false}, {"identifier": "setQosAcceptForeignIp", "parameters": "(Boolean qosAcceptForeignIp)", "modifiers": "public", "return": "void", "signature": "void setQosAcceptForeignIp(Boolean qosAcceptForeignIp)", "full_signature": "public void setQosAcceptForeignIp(Boolean qosAcceptForeignIp)", "class_method_signature": "ApplicationConfig.setQosAcceptForeignIp(Boolean qosAcceptForeignIp)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getParameters()", "full_signature": "public Map<String, String> getParameters()", "class_method_signature": "ApplicationConfig.getParameters()", "testcase": false, "constructor": false}, {"identifier": "setParameters", "parameters": "(Map<String, String> parameters)", "modifiers": "public", "return": "void", "signature": "void setParameters(Map<String, String> parameters)", "full_signature": "public void setParameters(Map<String, String> parameters)", "class_method_signature": "ApplicationConfig.setParameters(Map<String, String> parameters)", "testcase": false, "constructor": false}], "file": "dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/ApplicationConfig.java"}, "focal_method": {"identifier": "setEnvironment", "parameters": "(String environment)", "modifiers": "public", "return": "void", "body": "public void setEnvironment(String environment) {\n        checkName(\"environment\", environment);\n        if (environment != null) {\n            if (!(\"develop\".equals(environment) || \"test\".equals(environment) || \"product\".equals(environment))) {\n                throw new IllegalStateException(\"Unsupported environment: \" + environment + \", only support develop/test/product, default is product.\");\n            }\n        }\n        this.environment = environment;\n    }", "signature": "void setEnvironment(String environment)", "full_signature": "public void setEnvironment(String environment)", "class_method_signature": "ApplicationConfig.setEnvironment(String environment)", "testcase": false, "constructor": false, "invocations": ["checkName", "equals", "equals", "equals"]}, "repository": {"repo_id": 189562861, "url": "https://github.com/smallFive55/dubbo-dubbo-2.6.6", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 1428, "license": "licensed"}}