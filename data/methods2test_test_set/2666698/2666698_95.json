{"test_class": {"identifier": "ProfileNameTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_NAME = \"TestProfileName\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_NAME = \"TestProfileName\"", "var_name": "DEFAULT_NAME"}, {"original_string": "private static final ProfileName SPECIFIC_LINUX_CONFIG = new ProfileName(\"specific-profile\", \"linux\", \"gtk\",\n            \"x86_64\");", "modifier": "private static final", "type": "ProfileName", "declarator": "SPECIFIC_LINUX_CONFIG = new ProfileName(\"specific-profile\", \"linux\", \"gtk\",\n            \"x86_64\")", "var_name": "SPECIFIC_LINUX_CONFIG"}, {"original_string": "private static final ProfileName GENERAL_LINUX_CONFIG = new ProfileName(\"linux-profile\", \"linux\", null, null);", "modifier": "private static final", "type": "ProfileName", "declarator": "GENERAL_LINUX_CONFIG = new ProfileName(\"linux-profile\", \"linux\", null, null)", "var_name": "GENERAL_LINUX_CONFIG"}, {"original_string": "private static final TargetEnvironment LINUX_GTK_X86_64 = new TargetEnvironment(\"linux\", \"gtk\", \"x86_64\");", "modifier": "private static final", "type": "TargetEnvironment", "declarator": "LINUX_GTK_X86_64 = new TargetEnvironment(\"linux\", \"gtk\", \"x86_64\")", "var_name": "LINUX_GTK_X86_64"}, {"original_string": "private static final TargetEnvironment WIN32_WIN32_X86_64 = new TargetEnvironment(\"win32\", \"win32\", \"x86_64\");", "modifier": "private static final", "type": "TargetEnvironment", "declarator": "WIN32_WIN32_X86_64 = new TargetEnvironment(\"win32\", \"win32\", \"x86_64\")", "var_name": "WIN32_WIN32_X86_64"}], "file": "tycho-p2/tycho-p2-director-plugin/src/test/java/org/eclipse/tycho/plugins/p2/director/ProfileNameTest.java"}, "test_case": {"identifier": "testNoMatch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNoMatch() {\n        List<ProfileName> configuration = Arrays.asList(SPECIFIC_LINUX_CONFIG);\n        String name = ProfileName.getNameForEnvironment(WIN32_WIN32_X86_64, configuration, DEFAULT_NAME);\n        assertEquals(DEFAULT_NAME, name);\n    }", "signature": "void testNoMatch()", "full_signature": "@Test public void testNoMatch()", "class_method_signature": "ProfileNameTest.testNoMatch()", "testcase": true, "constructor": false, "invocations": ["asList", "getNameForEnvironment", "assertEquals"]}, "focal_class": {"identifier": "ProfileName", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String os;", "modifier": "private", "type": "String", "declarator": "os", "var_name": "os"}, {"original_string": "private String ws;", "modifier": "private", "type": "String", "declarator": "ws", "var_name": "ws"}, {"original_string": "private String arch;", "modifier": "private", "type": "String", "declarator": "arch", "var_name": "arch"}], "methods": [{"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "ProfileName.getName()", "testcase": false, "constructor": false}, {"identifier": "getArch", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getArch()", "full_signature": "public String getArch()", "class_method_signature": "ProfileName.getArch()", "testcase": false, "constructor": false}, {"identifier": "getOs", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOs()", "full_signature": "public String getOs()", "class_method_signature": "ProfileName.getOs()", "testcase": false, "constructor": false}, {"identifier": "getWs", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getWs()", "full_signature": "public String getWs()", "class_method_signature": "ProfileName.getWs()", "testcase": false, "constructor": false}, {"identifier": "ProfileName", "parameters": "()", "modifiers": "public", "return": "", "signature": " ProfileName()", "full_signature": "public  ProfileName()", "class_method_signature": "ProfileName.ProfileName()", "testcase": false, "constructor": true}, {"identifier": "ProfileName", "parameters": "(String name)", "modifiers": "public", "return": "", "signature": " ProfileName(String name)", "full_signature": "public  ProfileName(String name)", "class_method_signature": "ProfileName.ProfileName(String name)", "testcase": false, "constructor": true}, {"identifier": "ProfileName", "parameters": "(String name, String os, String ws, String arch)", "modifiers": "public", "return": "", "signature": " ProfileName(String name, String os, String ws, String arch)", "full_signature": "public  ProfileName(String name, String os, String ws, String arch)", "class_method_signature": "ProfileName.ProfileName(String name, String os, String ws, String arch)", "testcase": false, "constructor": true}, {"identifier": "getNameForEnvironment", "parameters": "(TargetEnvironment env, List<ProfileName> nameMap, String defaultName)", "modifiers": "public static", "return": "String", "signature": "String getNameForEnvironment(TargetEnvironment env, List<ProfileName> nameMap, String defaultName)", "full_signature": "public static String getNameForEnvironment(TargetEnvironment env, List<ProfileName> nameMap, String defaultName)", "class_method_signature": "ProfileName.getNameForEnvironment(TargetEnvironment env, List<ProfileName> nameMap, String defaultName)", "testcase": false, "constructor": false}], "file": "tycho-p2/tycho-p2-director-plugin/src/main/java/org/eclipse/tycho/plugins/p2/director/ProfileName.java"}, "focal_method": {"identifier": "getNameForEnvironment", "parameters": "(TargetEnvironment env, List<ProfileName> nameMap, String defaultName)", "modifiers": "public static", "return": "String", "body": "public static String getNameForEnvironment(TargetEnvironment env, List<ProfileName> nameMap, String defaultName) {\n        if (nameMap != null) {\n            for (ProfileName profileWithEnvironment : nameMap) {\n                // first match always wins\n                if (env.match(profileWithEnvironment.getOs(), profileWithEnvironment.getWs(),\n                        profileWithEnvironment.getArch())) {\n                    return profileWithEnvironment.getName();\n                }\n            }\n        }\n        return defaultName;\n    }", "signature": "String getNameForEnvironment(TargetEnvironment env, List<ProfileName> nameMap, String defaultName)", "full_signature": "public static String getNameForEnvironment(TargetEnvironment env, List<ProfileName> nameMap, String defaultName)", "class_method_signature": "ProfileName.getNameForEnvironment(TargetEnvironment env, List<ProfileName> nameMap, String defaultName)", "testcase": false, "constructor": false, "invocations": ["match", "getOs", "getWs", "getArch", "getName"]}, "repository": {"repo_id": 2666698, "url": "https://github.com/eclipse/tycho", "language": "Java", "is_fork": false, "fork_count": 67, "stargazer_count": 61, "size": 22429, "license": "licensed"}}