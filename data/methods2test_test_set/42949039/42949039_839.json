{"test_class": {"identifier": "EmrHelperTest", "superclass": "extends AbstractDaoTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    EmrHelper emrHelper;", "modifier": "@Autowired", "type": "EmrHelper", "declarator": "emrHelper", "var_name": "emrHelper"}], "file": "herd-code/herd-dao/src/test/java/org/finra/herd/dao/helper/EmrHelperTest.java"}, "test_case": {"identifier": "testBuildEmrClusterName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuildEmrClusterName()\n    {\n        String clusterName = emrHelper.buildEmrClusterName(NAMESPACE, EMR_CLUSTER_DEFINITION_NAME, EMR_CLUSTER_NAME);\n\n        assertEquals(NAMESPACE + \".\" + EMR_CLUSTER_DEFINITION_NAME + \".\" + EMR_CLUSTER_NAME, clusterName);\n    }", "signature": "void testBuildEmrClusterName()", "full_signature": "@Test public void testBuildEmrClusterName()", "class_method_signature": "EmrHelperTest.testBuildEmrClusterName()", "testcase": true, "constructor": false, "invocations": ["buildEmrClusterName", "assertEquals"]}, "focal_class": {"identifier": "EmrHelper", "superclass": "extends AwsHelper", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private EmrDao emrDao;", "modifier": "@Autowired\n    private", "type": "EmrDao", "declarator": "emrDao", "var_name": "emrDao"}, {"original_string": "@Autowired\n    private StsDao stsDao;", "modifier": "@Autowired\n    private", "type": "StsDao", "declarator": "stsDao", "var_name": "stsDao"}, {"original_string": "@Autowired\n    private TrustingAccountDaoHelper trustingAccountDaoHelper;", "modifier": "@Autowired\n    private", "type": "TrustingAccountDaoHelper", "declarator": "trustingAccountDaoHelper", "var_name": "trustingAccountDaoHelper"}], "methods": [{"identifier": "buildEmrClusterName", "parameters": "(String namespaceCd, String emrDefinitionName, String clusterName)", "modifiers": "public", "return": "String", "signature": "String buildEmrClusterName(String namespaceCd, String emrDefinitionName, String clusterName)", "full_signature": "public String buildEmrClusterName(String namespaceCd, String emrDefinitionName, String clusterName)", "class_method_signature": "EmrHelper.buildEmrClusterName(String namespaceCd, String emrDefinitionName, String clusterName)", "testcase": false, "constructor": false}, {"identifier": "getActiveEmrClusterId", "parameters": "(String emrClusterId, String emrClusterName, String accountId)", "modifiers": "public", "return": "String", "signature": "String getActiveEmrClusterId(String emrClusterId, String emrClusterName, String accountId)", "full_signature": "public String getActiveEmrClusterId(String emrClusterId, String emrClusterName, String accountId)", "class_method_signature": "EmrHelper.getActiveEmrClusterId(String emrClusterId, String emrClusterName, String accountId)", "testcase": false, "constructor": false}, {"identifier": "getEmrParamsDtoByAccountId", "parameters": "(String accountId)", "modifiers": "public", "return": "EmrParamsDto", "signature": "EmrParamsDto getEmrParamsDtoByAccountId(String accountId)", "full_signature": "public EmrParamsDto getEmrParamsDtoByAccountId(String accountId)", "class_method_signature": "EmrHelper.getEmrParamsDtoByAccountId(String accountId)", "testcase": false, "constructor": false}, {"identifier": "getEmrDao", "parameters": "()", "modifiers": "public", "return": "EmrDao", "signature": "EmrDao getEmrDao()", "full_signature": "public EmrDao getEmrDao()", "class_method_signature": "EmrHelper.getEmrDao()", "testcase": false, "constructor": false}, {"identifier": "setEmrDao", "parameters": "(EmrDao emrDao)", "modifiers": "public", "return": "void", "signature": "void setEmrDao(EmrDao emrDao)", "full_signature": "public void setEmrDao(EmrDao emrDao)", "class_method_signature": "EmrHelper.setEmrDao(EmrDao emrDao)", "testcase": false, "constructor": false}, {"identifier": "getEmrHadoopJarStepConfig", "parameters": "(String stepName, String jarLocation, String mainClass, List<String> scriptArguments, Boolean isContinueOnError)", "modifiers": "public", "return": "StepConfig", "signature": "StepConfig getEmrHadoopJarStepConfig(String stepName, String jarLocation, String mainClass, List<String> scriptArguments, Boolean isContinueOnError)", "full_signature": "public StepConfig getEmrHadoopJarStepConfig(String stepName, String jarLocation, String mainClass, List<String> scriptArguments, Boolean isContinueOnError)", "class_method_signature": "EmrHelper.getEmrHadoopJarStepConfig(String stepName, String jarLocation, String mainClass, List<String> scriptArguments, Boolean isContinueOnError)", "testcase": false, "constructor": false}, {"identifier": "getS3StagingLocation", "parameters": "(String trustingAccountStagingBucketName)", "modifiers": "public", "return": "String", "signature": "String getS3StagingLocation(String trustingAccountStagingBucketName)", "full_signature": "public String getS3StagingLocation(String trustingAccountStagingBucketName)", "class_method_signature": "EmrHelper.getS3StagingLocation(String trustingAccountStagingBucketName)", "testcase": false, "constructor": false}, {"identifier": "isActiveEmrState", "parameters": "(String status)", "modifiers": "public", "return": "boolean", "signature": "boolean isActiveEmrState(String status)", "full_signature": "public boolean isActiveEmrState(String status)", "class_method_signature": "EmrHelper.isActiveEmrState(String status)", "testcase": false, "constructor": false}, {"identifier": "isInstanceDefinitionsEmpty", "parameters": "(InstanceDefinitions instanceDefinitions)", "modifiers": "public", "return": "boolean", "signature": "boolean isInstanceDefinitionsEmpty(InstanceDefinitions instanceDefinitions)", "full_signature": "public boolean isInstanceDefinitionsEmpty(InstanceDefinitions instanceDefinitions)", "class_method_signature": "EmrHelper.isInstanceDefinitionsEmpty(InstanceDefinitions instanceDefinitions)", "testcase": false, "constructor": false}, {"identifier": "getActiveEmrClusterStates", "parameters": "()", "modifiers": "private", "return": "String[]", "signature": "String[] getActiveEmrClusterStates()", "full_signature": "private String[] getActiveEmrClusterStates()", "class_method_signature": "EmrHelper.getActiveEmrClusterStates()", "testcase": false, "constructor": false}, {"identifier": "updateEmrParamsForCrossAccountAccess", "parameters": "(EmrParamsDto emrParamsDto, String accountId)", "modifiers": "private", "return": "void", "signature": "void updateEmrParamsForCrossAccountAccess(EmrParamsDto emrParamsDto, String accountId)", "full_signature": "private void updateEmrParamsForCrossAccountAccess(EmrParamsDto emrParamsDto, String accountId)", "class_method_signature": "EmrHelper.updateEmrParamsForCrossAccountAccess(EmrParamsDto emrParamsDto, String accountId)", "testcase": false, "constructor": false}, {"identifier": "buildEmrClusterInstanceFleetFromAwsResult", "parameters": "(ListInstanceFleetsResult awsInstanceFleetsResult)", "modifiers": "public", "return": "List<EmrClusterInstanceFleet>", "signature": "List<EmrClusterInstanceFleet> buildEmrClusterInstanceFleetFromAwsResult(ListInstanceFleetsResult awsInstanceFleetsResult)", "full_signature": "public List<EmrClusterInstanceFleet> buildEmrClusterInstanceFleetFromAwsResult(ListInstanceFleetsResult awsInstanceFleetsResult)", "class_method_signature": "EmrHelper.buildEmrClusterInstanceFleetFromAwsResult(ListInstanceFleetsResult awsInstanceFleetsResult)", "testcase": false, "constructor": false}, {"identifier": "getEmrClusterInstanceFleetStatus", "parameters": "(InstanceFleetStatus instanceFleetStatus)", "modifiers": "protected", "return": "EmrClusterInstanceFleetStatus", "signature": "EmrClusterInstanceFleetStatus getEmrClusterInstanceFleetStatus(InstanceFleetStatus instanceFleetStatus)", "full_signature": "protected EmrClusterInstanceFleetStatus getEmrClusterInstanceFleetStatus(InstanceFleetStatus instanceFleetStatus)", "class_method_signature": "EmrHelper.getEmrClusterInstanceFleetStatus(InstanceFleetStatus instanceFleetStatus)", "testcase": false, "constructor": false}, {"identifier": "getLaunchSpecifications", "parameters": "(\n        InstanceFleetProvisioningSpecifications instanceFleetProvisioningSpecifications)", "modifiers": "protected", "return": "EmrClusterInstanceFleetProvisioningSpecifications", "signature": "EmrClusterInstanceFleetProvisioningSpecifications getLaunchSpecifications(\n        InstanceFleetProvisioningSpecifications instanceFleetProvisioningSpecifications)", "full_signature": "protected EmrClusterInstanceFleetProvisioningSpecifications getLaunchSpecifications(\n        InstanceFleetProvisioningSpecifications instanceFleetProvisioningSpecifications)", "class_method_signature": "EmrHelper.getLaunchSpecifications(\n        InstanceFleetProvisioningSpecifications instanceFleetProvisioningSpecifications)", "testcase": false, "constructor": false}, {"identifier": "getSpotSpecification", "parameters": "(SpotProvisioningSpecification spotProvisioningSpecification)", "modifiers": "protected", "return": "EmrClusterSpotProvisioningSpecification", "signature": "EmrClusterSpotProvisioningSpecification getSpotSpecification(SpotProvisioningSpecification spotProvisioningSpecification)", "full_signature": "protected EmrClusterSpotProvisioningSpecification getSpotSpecification(SpotProvisioningSpecification spotProvisioningSpecification)", "class_method_signature": "EmrHelper.getSpotSpecification(SpotProvisioningSpecification spotProvisioningSpecification)", "testcase": false, "constructor": false}, {"identifier": "getEbsBlockDevices", "parameters": "(List<EbsBlockDevice> ebsBlockDevices)", "modifiers": "protected", "return": "List<EmrClusterEbsBlockDevice>", "signature": "List<EmrClusterEbsBlockDevice> getEbsBlockDevices(List<EbsBlockDevice> ebsBlockDevices)", "full_signature": "protected List<EmrClusterEbsBlockDevice> getEbsBlockDevices(List<EbsBlockDevice> ebsBlockDevices)", "class_method_signature": "EmrHelper.getEbsBlockDevices(List<EbsBlockDevice> ebsBlockDevices)", "testcase": false, "constructor": false}, {"identifier": "getVolumeSpecification", "parameters": "(VolumeSpecification volumeSpecification)", "modifiers": "protected", "return": "EmrClusterVolumeSpecification", "signature": "EmrClusterVolumeSpecification getVolumeSpecification(VolumeSpecification volumeSpecification)", "full_signature": "protected EmrClusterVolumeSpecification getVolumeSpecification(VolumeSpecification volumeSpecification)", "class_method_signature": "EmrHelper.getVolumeSpecification(VolumeSpecification volumeSpecification)", "testcase": false, "constructor": false}, {"identifier": "getInstanceTypeSpecifications", "parameters": "(List<InstanceTypeSpecification> awsInstanceTypeConfigs)", "modifiers": "protected", "return": "List<EmrClusterInstanceTypeSpecification>", "signature": "List<EmrClusterInstanceTypeSpecification> getInstanceTypeSpecifications(List<InstanceTypeSpecification> awsInstanceTypeConfigs)", "full_signature": "protected List<EmrClusterInstanceTypeSpecification> getInstanceTypeSpecifications(List<InstanceTypeSpecification> awsInstanceTypeConfigs)", "class_method_signature": "EmrHelper.getInstanceTypeSpecifications(List<InstanceTypeSpecification> awsInstanceTypeConfigs)", "testcase": false, "constructor": false}, {"identifier": "getConfigurations", "parameters": "(List<Configuration> configurations)", "modifiers": "protected", "return": "List<EmrClusterInstanceTypeConfiguration>", "signature": "List<EmrClusterInstanceTypeConfiguration> getConfigurations(List<Configuration> configurations)", "full_signature": "protected List<EmrClusterInstanceTypeConfiguration> getConfigurations(List<Configuration> configurations)", "class_method_signature": "EmrHelper.getConfigurations(List<Configuration> configurations)", "testcase": false, "constructor": false}, {"identifier": "getParameterList", "parameters": "(Map<String, String> properties)", "modifiers": "protected", "return": "List<Parameter>", "signature": "List<Parameter> getParameterList(Map<String, String> properties)", "full_signature": "protected List<Parameter> getParameterList(Map<String, String> properties)", "class_method_signature": "EmrHelper.getParameterList(Map<String, String> properties)", "testcase": false, "constructor": false}], "file": "herd-code/herd-dao/src/main/java/org/finra/herd/dao/helper/EmrHelper.java"}, "focal_method": {"identifier": "buildEmrClusterName", "parameters": "(String namespaceCd, String emrDefinitionName, String clusterName)", "modifiers": "public", "return": "String", "body": "public String buildEmrClusterName(String namespaceCd, String emrDefinitionName, String clusterName)\n    {\n        // Set the token delimiter based on the environment configuration.\n        String tokenDelimiter = configurationHelper.getProperty(ConfigurationValue.TEMPLATE_TOKEN_DELIMITER);\n\n        // Setup the individual token names (using the configured delimiter).\n        String namespaceToken = tokenDelimiter + \"namespace\" + tokenDelimiter;\n        String emrDefinitionToken = tokenDelimiter + \"emrDefinitionName\" + tokenDelimiter;\n        String clusterNameToken = tokenDelimiter + \"clusterName\" + tokenDelimiter;\n\n        // Populate a map with the tokens mapped to actual database values.\n        Map<String, String> pathToTokenValueMap = new HashMap<>();\n        pathToTokenValueMap.put(namespaceToken, namespaceCd);\n        pathToTokenValueMap.put(emrDefinitionToken, emrDefinitionName);\n        pathToTokenValueMap.put(clusterNameToken, clusterName);\n\n        // Set the default EMR cluster name tokenized template.\n        // ~namespace~.~emrDefinitionName~.clusterName\n        String defaultClusterNameTemplate = namespaceToken + \".\" + emrDefinitionToken + \".\" + clusterNameToken;\n\n        // Get the EMR cluster name template from the environment, but use the default if one isn't configured.\n        // This gives us the ability to customize/change the format post deployment.\n        String emrClusterName = configurationHelper.getProperty(ConfigurationValue.EMR_CLUSTER_NAME_TEMPLATE);\n\n        if (emrClusterName == null)\n        {\n            emrClusterName = defaultClusterNameTemplate;\n        }\n\n        // Substitute the tokens with the actual database values.\n        for (Map.Entry<String, String> mapEntry : pathToTokenValueMap.entrySet())\n        {\n            emrClusterName = emrClusterName.replaceAll(mapEntry.getKey(), mapEntry.getValue());\n        }\n\n        return emrClusterName;\n    }", "signature": "String buildEmrClusterName(String namespaceCd, String emrDefinitionName, String clusterName)", "full_signature": "public String buildEmrClusterName(String namespaceCd, String emrDefinitionName, String clusterName)", "class_method_signature": "EmrHelper.buildEmrClusterName(String namespaceCd, String emrDefinitionName, String clusterName)", "testcase": false, "constructor": false, "invocations": ["getProperty", "put", "put", "put", "getProperty", "entrySet", "replaceAll", "getKey", "getValue"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}