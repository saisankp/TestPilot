{"test_class": {"identifier": "TraceIdContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "TraceIdContext base = TraceIdContext.newBuilder().traceId(333L).build();", "modifier": "", "type": "TraceIdContext", "declarator": "base = TraceIdContext.newBuilder().traceId(333L).build()", "var_name": "base"}], "file": "brave/src/test/java/brave/propagation/TraceIdContextTest.java"}, "test_case": {"identifier": "canSetSampledNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void canSetSampledNull() {\n    base = base.toBuilder().sampled(true).build();\n\n    TraceIdContext objects = base.toBuilder().sampled(null).build();\n\n    assertThat(objects.debug())\n      .isFalse();\n    assertThat(objects.sampled())\n      .isNull();\n  }", "signature": "void canSetSampledNull()", "full_signature": "@Test public void canSetSampledNull()", "class_method_signature": "TraceIdContextTest.canSetSampledNull()", "testcase": true, "constructor": false, "invocations": ["build", "sampled", "toBuilder", "build", "sampled", "toBuilder", "isFalse", "assertThat", "debug", "isNull", "assertThat", "sampled"]}, "focal_class": {"identifier": "TraceIdContext", "superclass": "extends SamplingFlags", "interfaces": "", "fields": [{"original_string": "volatile String traceIdString;", "modifier": "volatile", "type": "String", "declarator": "traceIdString", "var_name": "traceIdString"}, {"original_string": "final long traceIdHigh, traceId;", "modifier": "final", "type": "long", "declarator": "traceIdHigh", "var_name": "traceIdHigh"}], "methods": [{"identifier": "newBuilder", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder newBuilder()", "full_signature": "public static Builder newBuilder()", "class_method_signature": "TraceIdContext.newBuilder()", "testcase": false, "constructor": false}, {"identifier": "traceIdHigh", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long traceIdHigh()", "full_signature": "public long traceIdHigh()", "class_method_signature": "TraceIdContext.traceIdHigh()", "testcase": false, "constructor": false}, {"identifier": "traceId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long traceId()", "full_signature": "public long traceId()", "class_method_signature": "TraceIdContext.traceId()", "testcase": false, "constructor": false}, {"identifier": "traceIdString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String traceIdString()", "full_signature": "public String traceIdString()", "class_method_signature": "TraceIdContext.traceIdString()", "testcase": false, "constructor": false}, {"identifier": "toTraceIdString", "parameters": "(long traceIdHigh, long traceId)", "modifiers": "static", "return": "String", "signature": "String toTraceIdString(long traceIdHigh, long traceId)", "full_signature": "static String toTraceIdString(long traceIdHigh, long traceId)", "class_method_signature": "TraceIdContext.toTraceIdString(long traceIdHigh, long traceId)", "testcase": false, "constructor": false}, {"identifier": "toBuilder", "parameters": "()", "modifiers": "public", "return": "Builder", "signature": "Builder toBuilder()", "full_signature": "public Builder toBuilder()", "class_method_signature": "TraceIdContext.toBuilder()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TraceIdContext.toString()", "testcase": false, "constructor": false}, {"identifier": "TraceIdContext", "parameters": "(int flags, long traceIdHigh, long traceId)", "modifiers": "", "return": "", "signature": " TraceIdContext(int flags, long traceIdHigh, long traceId)", "full_signature": "  TraceIdContext(int flags, long traceIdHigh, long traceId)", "class_method_signature": "TraceIdContext.TraceIdContext(int flags, long traceIdHigh, long traceId)", "testcase": false, "constructor": true}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "TraceIdContext.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TraceIdContext.hashCode()", "testcase": false, "constructor": false}], "file": "brave/src/main/java/brave/propagation/TraceIdContext.java"}, "focal_method": {"identifier": "toBuilder", "parameters": "()", "modifiers": "public", "return": "Builder", "body": "public Builder toBuilder() {\n    Builder result = new Builder();\n    result.flags = flags;\n    result.traceIdHigh = traceIdHigh;\n    result.traceId = traceId;\n    return result;\n  }", "signature": "Builder toBuilder()", "full_signature": "public Builder toBuilder()", "class_method_signature": "TraceIdContext.toBuilder()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}