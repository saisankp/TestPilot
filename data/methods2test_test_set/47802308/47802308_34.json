{"test_class": {"identifier": "ParamMapTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/modules/common/src/test/java/org/onetwo/common/utils/map/ParamMapTest.java"}, "test_case": {"identifier": "testFilterSelf", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testFilterSelf(){\n\t\tParamMap map1 = new ParamMap(\"aa=aa-value&bb=bb-value\");\n\t\tmap1.putElement(\"dd\", \"dd-value\");\n\t\tmap1.putElement(\"test-ee\", \"testee-value\");\n\t\tmap1.putElement(\"test-dd\", \"testdd-value\");\n\t\tmap1.putElement(\"aa-test-dd\", \"testdd-value\");\n\t\t\n\t\tmap1.filter(\"*test*\");\n\t\tSystem.out.println(\"map1:\" + map1);\n\t\tAssert.assertEquals(\"{aa=[aa-value], bb=[bb-value], dd=[dd-value]}\", map1.toString());\n\t}", "signature": "void testFilterSelf()", "full_signature": "@Test public void testFilterSelf()", "class_method_signature": "ParamMapTest.testFilterSelf()", "testcase": true, "constructor": false, "invocations": ["putElement", "putElement", "putElement", "putElement", "filter", "println", "assertEquals", "toString"]}, "focal_class": {"identifier": "ParamMap", "superclass": "extends CollectionMap<Object, Object>", "interfaces": "", "fields": [], "methods": [{"identifier": "ParamMap", "parameters": "()", "modifiers": "public", "return": "", "signature": " ParamMap()", "full_signature": "public  ParamMap()", "class_method_signature": "ParamMap.ParamMap()", "testcase": false, "constructor": true}, {"identifier": "ParamMap", "parameters": "(Map<Object, Collection<Object>> map)", "modifiers": "public", "return": "", "signature": " ParamMap(Map<Object, Collection<Object>> map)", "full_signature": "public  ParamMap(Map<Object, Collection<Object>> map)", "class_method_signature": "ParamMap.ParamMap(Map<Object, Collection<Object>> map)", "testcase": false, "constructor": true}, {"identifier": "ParamMap", "parameters": "(String paramStr)", "modifiers": "public", "return": "", "signature": " ParamMap(String paramStr)", "full_signature": "public  ParamMap(String paramStr)", "class_method_signature": "ParamMap.ParamMap(String paramStr)", "testcase": false, "constructor": true}, {"identifier": "ParamMap", "parameters": "(String paramStr, Map<Object, Collection<Object>> map)", "modifiers": "public", "return": "", "signature": " ParamMap(String paramStr, Map<Object, Collection<Object>> map)", "full_signature": "public  ParamMap(String paramStr, Map<Object, Collection<Object>> map)", "class_method_signature": "ParamMap.ParamMap(String paramStr, Map<Object, Collection<Object>> map)", "testcase": false, "constructor": true}, {"identifier": "putEntryByString", "parameters": "(String paramStr)", "modifiers": "final protected", "return": "void", "signature": "void putEntryByString(String paramStr)", "full_signature": "final protected void putEntryByString(String paramStr)", "class_method_signature": "ParamMap.putEntryByString(String paramStr)", "testcase": false, "constructor": false}, {"identifier": "subtract", "parameters": "(Map<Object, Collection<Object>> map)", "modifiers": "public", "return": "ParamMap", "signature": "ParamMap subtract(Map<Object, Collection<Object>> map)", "full_signature": "public ParamMap subtract(Map<Object, Collection<Object>> map)", "class_method_signature": "ParamMap.subtract(Map<Object, Collection<Object>> map)", "testcase": false, "constructor": false}, {"identifier": "addWithFilter", "parameters": "(Map<Object, Collection<Object>> map, String...prefixs)", "modifiers": "public", "return": "ParamMap", "signature": "ParamMap addWithFilter(Map<Object, Collection<Object>> map, String...prefixs)", "full_signature": "public ParamMap addWithFilter(Map<Object, Collection<Object>> map, String...prefixs)", "class_method_signature": "ParamMap.addWithFilter(Map<Object, Collection<Object>> map, String...prefixs)", "testcase": false, "constructor": false}, {"identifier": "matchPrefix", "parameters": "(String key, String... prefixs)", "modifiers": "protected", "return": "boolean", "signature": "boolean matchPrefix(String key, String... prefixs)", "full_signature": "protected boolean matchPrefix(String key, String... prefixs)", "class_method_signature": "ParamMap.matchPrefix(String key, String... prefixs)", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(String...patterns)", "modifiers": "public", "return": "ParamMap", "signature": "ParamMap filter(String...patterns)", "full_signature": "public ParamMap filter(String...patterns)", "class_method_signature": "ParamMap.filter(String...patterns)", "testcase": false, "constructor": false}, {"identifier": "addMapWithFilter", "parameters": "(Map map, String...prefixs)", "modifiers": "public", "return": "ParamMap", "signature": "ParamMap addMapWithFilter(Map map, String...prefixs)", "full_signature": "public ParamMap addMapWithFilter(Map map, String...prefixs)", "class_method_signature": "ParamMap.addMapWithFilter(Map map, String...prefixs)", "testcase": false, "constructor": false}, {"identifier": "toParamString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toParamString()", "full_signature": "public String toParamString()", "class_method_signature": "ParamMap.toParamString()", "testcase": false, "constructor": false}], "file": "core/modules/common/src/main/java/org/onetwo/common/utils/map/ParamMap.java"}, "focal_method": {"identifier": "filter", "parameters": "(String...patterns)", "modifiers": "public", "return": "ParamMap", "body": "public ParamMap filter(String...patterns){\n\t\tLangUtils.filterMap(this, patterns);\n\t\treturn this;\n\t}", "signature": "ParamMap filter(String...patterns)", "full_signature": "public ParamMap filter(String...patterns)", "class_method_signature": "ParamMap.filter(String...patterns)", "testcase": false, "constructor": false, "invocations": ["filterMap"]}, "repository": {"repo_id": 47802308, "url": "https://github.com/wayshall/onetwo", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 16, "size": 57582, "license": "licensed"}}