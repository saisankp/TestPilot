{"test_class": {"identifier": "LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LoanDisbursementStrategy loanDisbursementStrategy;", "modifier": "private", "type": "LoanDisbursementStrategy", "declarator": "loanDisbursementStrategy", "var_name": "loanDisbursementStrategy"}, {"original_string": "@Mock private ScheduledEvent scheduledEvent;", "modifier": "@Mock private", "type": "ScheduledEvent", "declarator": "scheduledEvent", "var_name": "scheduledEvent"}], "file": "appdomain/src/test/java/org/mifos/clientportfolio/newloan/domain/LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImplTest.java"}, "test_case": {"identifier": "shouldDetermineDateAsValidForScheduleWhenReturnsSameDate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldDetermineDateAsValidForScheduleWhenReturnsSameDate() {\n        \n        // setup\n        LocalDate disbursementDate = new LocalDate();\n        DateTime disbursementDateAsDateTime = disbursementDate.toDateMidnight().toDateTime();\n        \n        // stubbing\n        when(scheduledEvent.nearestMatchingDateBeginningAt(disbursementDateAsDateTime)).thenReturn(disbursementDateAsDateTime);\n        \n        // exercise test\n        boolean result = loanDisbursementStrategy.isDisbursementDateValidInRelationToSchedule(disbursementDate);\n        \n        // verification\n        assertTrue(\"given nearest matching valid date is same as date provided, then dibursement date should be valid.\", result);\n    }", "signature": "void shouldDetermineDateAsValidForScheduleWhenReturnsSameDate()", "full_signature": "@Test public void shouldDetermineDateAsValidForScheduleWhenReturnsSameDate()", "class_method_signature": "LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImplTest.shouldDetermineDateAsValidForScheduleWhenReturnsSameDate()", "testcase": true, "constructor": false, "invocations": ["toDateTime", "toDateMidnight", "thenReturn", "when", "nearestMatchingDateBeginningAt", "isDisbursementDateValidInRelationToSchedule", "assertTrue"]}, "focal_class": {"identifier": "LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl", "superclass": "", "interfaces": "implements LoanDisbursementStrategy", "fields": [{"original_string": "private final ScheduledEvent scheduledEvent;", "modifier": "private final", "type": "ScheduledEvent", "declarator": "scheduledEvent", "var_name": "scheduledEvent"}, {"original_string": "private final LocalDate nextValidCustomerMeetingDate;", "modifier": "private final", "type": "LocalDate", "declarator": "nextValidCustomerMeetingDate", "var_name": "nextValidCustomerMeetingDate"}], "methods": [{"identifier": "LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl", "parameters": "(ScheduledEvent scheduledEvent, LocalDate nextValidCustomerMeetingDate)", "modifiers": "public", "return": "", "signature": " LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl(ScheduledEvent scheduledEvent, LocalDate nextValidCustomerMeetingDate)", "full_signature": "public  LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl(ScheduledEvent scheduledEvent, LocalDate nextValidCustomerMeetingDate)", "class_method_signature": "LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl.LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl(ScheduledEvent scheduledEvent, LocalDate nextValidCustomerMeetingDate)", "testcase": false, "constructor": true}, {"identifier": "findClosestMatchingDateFromAndInclusiveOf", "parameters": "(LocalDate fromAndInclusiveOf)", "modifiers": "@Override public", "return": "LocalDate", "signature": "LocalDate findClosestMatchingDateFromAndInclusiveOf(LocalDate fromAndInclusiveOf)", "full_signature": "@Override public LocalDate findClosestMatchingDateFromAndInclusiveOf(LocalDate fromAndInclusiveOf)", "class_method_signature": "LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl.findClosestMatchingDateFromAndInclusiveOf(LocalDate fromAndInclusiveOf)", "testcase": false, "constructor": false}, {"identifier": "isDisbursementDateValidInRelationToSchedule", "parameters": "(LocalDate disbursementDate)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDisbursementDateValidInRelationToSchedule(LocalDate disbursementDate)", "full_signature": "@Override public boolean isDisbursementDateValidInRelationToSchedule(LocalDate disbursementDate)", "class_method_signature": "LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl.isDisbursementDateValidInRelationToSchedule(LocalDate disbursementDate)", "testcase": false, "constructor": false}], "file": "appdomain/src/main/java/org/mifos/clientportfolio/newloan/domain/LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl.java"}, "focal_method": {"identifier": "isDisbursementDateValidInRelationToSchedule", "parameters": "(LocalDate disbursementDate)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isDisbursementDateValidInRelationToSchedule(LocalDate disbursementDate) {\n        \n        boolean result = false;\n        \n        if (disbursementDate.isEqual(this.nextValidCustomerMeetingDate)) {\n            result = true;\n        } else if (disbursementDate.isAfter(this.nextValidCustomerMeetingDate)) {\n            LocalDate matchingDate = this.nextValidCustomerMeetingDate;\n            matchingDate = new LocalDate(scheduledEvent.nextEventDateAfter(matchingDate.toDateMidnight().toDateTime()));\n            while(matchingDate.isBefore(disbursementDate)) {\n                matchingDate = new LocalDate(scheduledEvent.nextEventDateAfter(matchingDate.toDateMidnight().toDateTime()));\n            }\n            \n            if (matchingDate.isEqual(disbursementDate)) {\n                result = true;\n            }\n        }\n        \n        return result;\n    }", "signature": "boolean isDisbursementDateValidInRelationToSchedule(LocalDate disbursementDate)", "full_signature": "@Override public boolean isDisbursementDateValidInRelationToSchedule(LocalDate disbursementDate)", "class_method_signature": "LoanDisbursementCoupledToCustomerMeetingScheduleStrategyImpl.isDisbursementDateValidInRelationToSchedule(LocalDate disbursementDate)", "testcase": false, "constructor": false, "invocations": ["isEqual", "isAfter", "nextEventDateAfter", "toDateTime", "toDateMidnight", "isBefore", "nextEventDateAfter", "toDateTime", "toDateMidnight", "isEqual"]}, "repository": {"repo_id": 1348716, "url": "https://github.com/mifos/head", "language": "Java", "is_fork": false, "fork_count": 91, "stargazer_count": 55, "size": 532732, "license": "licensed"}}