{"test_class": {"identifier": "GqlServiceImplTest", "superclass": "extends GaeTestBase", "interfaces": "", "fields": [{"original_string": "@Inject\n    GqlService gqlService;", "modifier": "@Inject", "type": "GqlService", "declarator": "gqlService", "var_name": "gqlService"}], "file": "gae-studio/gae-studio-server/src/test/java/com/arcbees/gaestudio/server/service/visualizer/GqlServiceImplTest.java"}, "test_case": {"identifier": "executeFromUnknowEntityZeroMatchedEntity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void executeFromUnknowEntityZeroMatchedEntity() {\n        createCars();\n\n        Collection<Entity> result = gqlService.executeGqlRequest(\"SELECT * FROM Autos WHERE make = 'Canada'\", null,\n                null);\n\n        assertTrue(result.isEmpty());\n    }", "signature": "void executeFromUnknowEntityZeroMatchedEntity()", "full_signature": "@Test public void executeFromUnknowEntityZeroMatchedEntity()", "class_method_signature": "GqlServiceImplTest.executeFromUnknowEntityZeroMatchedEntity()", "testcase": true, "constructor": false, "invocations": ["createCars", "executeGqlRequest", "assertTrue", "isEmpty"]}, "focal_class": {"identifier": "GqlServiceImpl", "superclass": "", "interfaces": "implements GqlService", "fields": [{"original_string": "private final DatastoreHelper datastoreHelper;", "modifier": "private final", "type": "DatastoreHelper", "declarator": "datastoreHelper", "var_name": "datastoreHelper"}], "methods": [{"identifier": "GqlServiceImpl", "parameters": "(\n            DatastoreHelper datastoreHelper)", "modifiers": "@Inject", "return": "", "signature": " GqlServiceImpl(\n            DatastoreHelper datastoreHelper)", "full_signature": "@Inject  GqlServiceImpl(\n            DatastoreHelper datastoreHelper)", "class_method_signature": "GqlServiceImpl.GqlServiceImpl(\n            DatastoreHelper datastoreHelper)", "testcase": false, "constructor": true}, {"identifier": "executeGqlRequest", "parameters": "(String gqlRequest, Integer offset, Integer limit)", "modifiers": "@Override public", "return": "Collection<Entity>", "signature": "Collection<Entity> executeGqlRequest(String gqlRequest, Integer offset, Integer limit)", "full_signature": "@Override public Collection<Entity> executeGqlRequest(String gqlRequest, Integer offset, Integer limit)", "class_method_signature": "GqlServiceImpl.executeGqlRequest(String gqlRequest, Integer offset, Integer limit)", "testcase": false, "constructor": false}], "file": "gae-studio/gae-studio-server/src/main/java/com/arcbees/gaestudio/server/service/visualizer/GqlServiceImpl.java"}, "focal_method": {"identifier": "executeGqlRequest", "parameters": "(String gqlRequest, Integer offset, Integer limit)", "modifiers": "@Override public", "return": "Collection<Entity>", "body": "@Override\n    public Collection<Entity> executeGqlRequest(String gqlRequest, Integer offset, Integer limit) {\n        AppEngineHelper.disableApiHooks();\n        FetchOptions fetchOptions = FetchOptions.Builder.withDefaults();\n        GqlQuery gql;\n\n        if (offset != null) {\n            fetchOptions.offset(offset);\n        }\n        if (limit != null) {\n            fetchOptions.limit(limit);\n        }\n\n        try {\n            gql = new GqlQuery(gqlRequest);\n\n            return datastoreHelper.queryOnAllNamespaces(gql.query(), fetchOptions);\n        } catch (IllegalArgumentException | NullPointerException e) {\n            throw new InvalidGqlSyntaxException();\n        }\n    }", "signature": "Collection<Entity> executeGqlRequest(String gqlRequest, Integer offset, Integer limit)", "full_signature": "@Override public Collection<Entity> executeGqlRequest(String gqlRequest, Integer offset, Integer limit)", "class_method_signature": "GqlServiceImpl.executeGqlRequest(String gqlRequest, Integer offset, Integer limit)", "testcase": false, "constructor": false, "invocations": ["disableApiHooks", "withDefaults", "offset", "limit", "queryOnAllNamespaces", "query"]}, "repository": {"repo_id": 29952888, "url": "https://github.com/ArcBees/gae-studio", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 21, "size": 11408, "license": "licensed"}}