{"test_class": {"identifier": "BroadcastValidationProtocolTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/dk/alexandra/fresco/lib/generic/BroadcastValidationProtocolTest.java"}, "test_case": {"identifier": "testOutThrows", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n  public void testOutThrows() {\n    new BroadcastValidationProtocol(new byte[1]).out();\n  }", "signature": "void testOutThrows()", "full_signature": "@Test(expected = IllegalStateException.class) public void testOutThrows()", "class_method_signature": "BroadcastValidationProtocolTest.testOutThrows()", "testcase": true, "constructor": false, "invocations": ["out"]}, "focal_class": {"identifier": "BroadcastValidationProtocol", "superclass": "", "interfaces": "implements\n    NativeProtocol<Void, ResourcePoolT>", "fields": [{"original_string": "private final List<byte[]> input;", "modifier": "private final", "type": "List<byte[]>", "declarator": "input", "var_name": "input"}, {"original_string": "private SecureBroadcastUtil broadcast;", "modifier": "private", "type": "SecureBroadcastUtil", "declarator": "broadcast", "var_name": "broadcast"}, {"original_string": "private byte[] digest;", "modifier": "private", "type": "byte[]", "declarator": "digest", "var_name": "digest"}], "methods": [{"identifier": "BroadcastValidationProtocol", "parameters": "(List<byte[]> input)", "modifiers": "public", "return": "", "signature": " BroadcastValidationProtocol(List<byte[]> input)", "full_signature": "public  BroadcastValidationProtocol(List<byte[]> input)", "class_method_signature": "BroadcastValidationProtocol.BroadcastValidationProtocol(List<byte[]> input)", "testcase": false, "constructor": true}, {"identifier": "BroadcastValidationProtocol", "parameters": "(byte[] input)", "modifiers": "public", "return": "", "signature": " BroadcastValidationProtocol(byte[] input)", "full_signature": "public  BroadcastValidationProtocol(byte[] input)", "class_method_signature": "BroadcastValidationProtocol.BroadcastValidationProtocol(byte[] input)", "testcase": false, "constructor": true}, {"identifier": "out", "parameters": "()", "modifiers": "@Override public", "return": "Void", "signature": "Void out()", "full_signature": "@Override public Void out()", "class_method_signature": "BroadcastValidationProtocol.out()", "testcase": false, "constructor": false}, {"identifier": "evaluate", "parameters": "(int round, ResourcePoolT resourcePool, Network network)", "modifiers": "@Override public", "return": "EvaluationStatus", "signature": "EvaluationStatus evaluate(int round, ResourcePoolT resourcePool, Network network)", "full_signature": "@Override public EvaluationStatus evaluate(int round, ResourcePoolT resourcePool, Network network)", "class_method_signature": "BroadcastValidationProtocol.evaluate(int round, ResourcePoolT resourcePool, Network network)", "testcase": false, "constructor": false}], "file": "core/src/main/java/dk/alexandra/fresco/lib/generic/BroadcastValidationProtocol.java"}, "focal_method": {"identifier": "out", "parameters": "()", "modifiers": "@Override public", "return": "Void", "body": "@Override\n  public Void out() {\n    throw new IllegalStateException(\"out() called on native protocol with void return\");\n  }", "signature": "Void out()", "full_signature": "@Override public Void out()", "class_method_signature": "BroadcastValidationProtocol.out()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}