{"test_class": {"identifier": "GitForkBranchTest", "superclass": "", "interfaces": "", "fields": [], "file": "dockerfile-image-update/src/test/java/com/salesforce/dockerfileimageupdate/model/GitForkBranchTest.java"}, "test_case": {"identifier": "testIsSameBranchOrHasImageNamePrefix", "parameters": "(String imageName, String imageTag, String specifiedBranch, String inputBranch, boolean expectedResult)", "modifiers": "@Test(dataProvider = \"sameBranchOrImageNamePrefix\") public", "return": "void", "body": "@Test(dataProvider = \"sameBranchOrImageNamePrefix\")\n    public void testIsSameBranchOrHasImageNamePrefix(String imageName, String imageTag, String specifiedBranch, String inputBranch, boolean expectedResult) {\n        assertEquals(new GitForkBranch(imageName, imageTag, specifiedBranch).isSameBranchOrHasImageNamePrefix(inputBranch), expectedResult);\n    }", "signature": "void testIsSameBranchOrHasImageNamePrefix(String imageName, String imageTag, String specifiedBranch, String inputBranch, boolean expectedResult)", "full_signature": "@Test(dataProvider = \"sameBranchOrImageNamePrefix\") public void testIsSameBranchOrHasImageNamePrefix(String imageName, String imageTag, String specifiedBranch, String inputBranch, boolean expectedResult)", "class_method_signature": "GitForkBranchTest.testIsSameBranchOrHasImageNamePrefix(String imageName, String imageTag, String specifiedBranch, String inputBranch, boolean expectedResult)", "testcase": true, "constructor": false, "invocations": ["assertEquals", "isSameBranchOrHasImageNamePrefix"]}, "focal_class": {"identifier": "GitForkBranch", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String branchPrefix;", "modifier": "private final", "type": "String", "declarator": "branchPrefix", "var_name": "branchPrefix"}, {"original_string": "private final String imageName;", "modifier": "private final", "type": "String", "declarator": "imageName", "var_name": "imageName"}, {"original_string": "private final String imageTag;", "modifier": "private final", "type": "String", "declarator": "imageTag", "var_name": "imageTag"}, {"original_string": "private final boolean specifiedBranchOverride;", "modifier": "private final", "type": "boolean", "declarator": "specifiedBranchOverride", "var_name": "specifiedBranchOverride"}], "methods": [{"identifier": "GitForkBranch", "parameters": "(String imageName, String imageTag, String specifiedBranch)", "modifiers": "public", "return": "", "signature": " GitForkBranch(String imageName, String imageTag, String specifiedBranch)", "full_signature": "public  GitForkBranch(String imageName, String imageTag, String specifiedBranch)", "class_method_signature": "GitForkBranch.GitForkBranch(String imageName, String imageTag, String specifiedBranch)", "testcase": false, "constructor": true}, {"identifier": "isSameBranchOrHasImageNamePrefix", "parameters": "(String branchName)", "modifiers": "public", "return": "boolean", "signature": "boolean isSameBranchOrHasImageNamePrefix(String branchName)", "full_signature": "public boolean isSameBranchOrHasImageNamePrefix(String branchName)", "class_method_signature": "GitForkBranch.isSameBranchOrHasImageNamePrefix(String branchName)", "testcase": false, "constructor": false}, {"identifier": "getBranchWithoutTag", "parameters": "(String branchName)", "modifiers": "private", "return": "String", "signature": "String getBranchWithoutTag(String branchName)", "full_signature": "private String getBranchWithoutTag(String branchName)", "class_method_signature": "GitForkBranch.getBranchWithoutTag(String branchName)", "testcase": false, "constructor": false}, {"identifier": "useSpecifiedBranchOverride", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean useSpecifiedBranchOverride()", "full_signature": "public boolean useSpecifiedBranchOverride()", "class_method_signature": "GitForkBranch.useSpecifiedBranchOverride()", "testcase": false, "constructor": false}, {"identifier": "getBranchName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getBranchName()", "full_signature": "public String getBranchName()", "class_method_signature": "GitForkBranch.getBranchName()", "testcase": false, "constructor": false}, {"identifier": "getImageName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getImageName()", "full_signature": "public String getImageName()", "class_method_signature": "GitForkBranch.getImageName()", "testcase": false, "constructor": false}, {"identifier": "getImageTag", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getImageTag()", "full_signature": "public String getImageTag()", "class_method_signature": "GitForkBranch.getImageTag()", "testcase": false, "constructor": false}], "file": "dockerfile-image-update/src/main/java/com/salesforce/dockerfileimageupdate/model/GitForkBranch.java"}, "focal_method": {"identifier": "isSameBranchOrHasImageNamePrefix", "parameters": "(String branchName)", "modifiers": "public", "return": "boolean", "body": "public boolean isSameBranchOrHasImageNamePrefix(String branchName) {\n        if (this.imageTag.equals(\"\")) {\n            return this.getBranchName().equals(branchName);\n        } else if (branchName != null) {\n            String tempBranchName = branchName.trim();\n            return getBranchWithoutTag(tempBranchName).equals(this.branchPrefix);\n        }\n        return false;\n    }", "signature": "boolean isSameBranchOrHasImageNamePrefix(String branchName)", "full_signature": "public boolean isSameBranchOrHasImageNamePrefix(String branchName)", "class_method_signature": "GitForkBranch.isSameBranchOrHasImageNamePrefix(String branchName)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "getBranchName", "trim", "equals", "getBranchWithoutTag"]}, "repository": {"repo_id": 104787715, "url": "https://github.com/salesforce/dockerfile-image-update", "stars": 62, "created": "9/25/2017 6:38:13 PM +00:00", "updates": "2020-01-23T07:15:59+00:00", "fork": "False", "license": "licensed"}}