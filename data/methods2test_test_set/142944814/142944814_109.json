{"test_class": {"identifier": "BlockchainTemplateTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "protected final ContextStorage<Context> contextStorage = new UnmodifiableContextStorage(\n      EmptyContext.getInstance());", "modifier": "protected final", "type": "ContextStorage<Context>", "declarator": "contextStorage = new UnmodifiableContextStorage(\n      EmptyContext.getInstance())", "var_name": "contextStorage"}], "file": "core/transport/src/test/java/hera/client/BlockchainTemplateTest.java"}, "test_case": {"identifier": "testListPeerMetrics", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testListPeerMetrics() throws Exception {\n    // given\n    final BlockchainTemplate blockchainTemplate = new BlockchainTemplate(contextStorage);\n    final Requester mockRequester = mock(Requester.class);\n    final List<PeerMetric> expected = emptyList();\n    when(mockRequester.request(ArgumentMatchers.<Invocation<?>>any()))\n        .thenReturn(expected);\n    blockchainTemplate.requester = mockRequester;\n\n    // then\n    final List<PeerMetric> actual = blockchainTemplate.listPeerMetrics();\n    assertEquals(expected, actual);\n  }", "signature": "void testListPeerMetrics()", "full_signature": "@Test public void testListPeerMetrics()", "class_method_signature": "BlockchainTemplateTest.testListPeerMetrics()", "testcase": true, "constructor": false, "invocations": ["mock", "emptyList", "thenReturn", "when", "request", "any", "listPeerMetrics", "assertEquals"]}, "focal_class": {"identifier": "BlockchainTemplate", "superclass": "extends AbstractTemplate", "interfaces": "implements BlockchainOperation", "fields": [{"original_string": "protected final BlockchainMethods blockchainMethods = new BlockchainMethods();", "modifier": "protected final", "type": "BlockchainMethods", "declarator": "blockchainMethods = new BlockchainMethods()", "var_name": "blockchainMethods"}], "methods": [{"identifier": "BlockchainTemplate", "parameters": "(final ContextStorage<Context> contextStorage)", "modifiers": "", "return": "", "signature": " BlockchainTemplate(final ContextStorage<Context> contextStorage)", "full_signature": "  BlockchainTemplate(final ContextStorage<Context> contextStorage)", "class_method_signature": "BlockchainTemplate.BlockchainTemplate(final ContextStorage<Context> contextStorage)", "testcase": false, "constructor": true}, {"identifier": "getChainIdHash", "parameters": "()", "modifiers": "@Override public", "return": "ChainIdHash", "signature": "ChainIdHash getChainIdHash()", "full_signature": "@Override public ChainIdHash getChainIdHash()", "class_method_signature": "BlockchainTemplate.getChainIdHash()", "testcase": false, "constructor": false}, {"identifier": "getBlockchainStatus", "parameters": "()", "modifiers": "@Override public", "return": "BlockchainStatus", "signature": "BlockchainStatus getBlockchainStatus()", "full_signature": "@Override public BlockchainStatus getBlockchainStatus()", "class_method_signature": "BlockchainTemplate.getBlockchainStatus()", "testcase": false, "constructor": false}, {"identifier": "getChainInfo", "parameters": "()", "modifiers": "@Override public", "return": "ChainInfo", "signature": "ChainInfo getChainInfo()", "full_signature": "@Override public ChainInfo getChainInfo()", "class_method_signature": "BlockchainTemplate.getChainInfo()", "testcase": false, "constructor": false}, {"identifier": "getChainStats", "parameters": "()", "modifiers": "@Override public", "return": "ChainStats", "signature": "ChainStats getChainStats()", "full_signature": "@Override public ChainStats getChainStats()", "class_method_signature": "BlockchainTemplate.getChainStats()", "testcase": false, "constructor": false}, {"identifier": "listPeers", "parameters": "()", "modifiers": "@Override public", "return": "List<Peer>", "signature": "List<Peer> listPeers()", "full_signature": "@Override public List<Peer> listPeers()", "class_method_signature": "BlockchainTemplate.listPeers()", "testcase": false, "constructor": false}, {"identifier": "listPeers", "parameters": "(final boolean showHidden, final boolean showSelf)", "modifiers": "@Override public", "return": "List<Peer>", "signature": "List<Peer> listPeers(final boolean showHidden, final boolean showSelf)", "full_signature": "@Override public List<Peer> listPeers(final boolean showHidden, final boolean showSelf)", "class_method_signature": "BlockchainTemplate.listPeers(final boolean showHidden, final boolean showSelf)", "testcase": false, "constructor": false}, {"identifier": "listPeerMetrics", "parameters": "()", "modifiers": "@Override public", "return": "List<PeerMetric>", "signature": "List<PeerMetric> listPeerMetrics()", "full_signature": "@Override public List<PeerMetric> listPeerMetrics()", "class_method_signature": "BlockchainTemplate.listPeerMetrics()", "testcase": false, "constructor": false}, {"identifier": "getServerInfo", "parameters": "(final List<String> categories)", "modifiers": "@Override public", "return": "ServerInfo", "signature": "ServerInfo getServerInfo(final List<String> categories)", "full_signature": "@Override public ServerInfo getServerInfo(final List<String> categories)", "class_method_signature": "BlockchainTemplate.getServerInfo(final List<String> categories)", "testcase": false, "constructor": false}, {"identifier": "getNodeStatus", "parameters": "()", "modifiers": "@Override public", "return": "NodeStatus", "signature": "NodeStatus getNodeStatus()", "full_signature": "@Override public NodeStatus getNodeStatus()", "class_method_signature": "BlockchainTemplate.getNodeStatus()", "testcase": false, "constructor": false}], "file": "core/transport/src/main/java/hera/client/BlockchainTemplate.java"}, "focal_method": {"identifier": "listPeerMetrics", "parameters": "()", "modifiers": "@Override public", "return": "List<PeerMetric>", "body": "@Override\n  public List<PeerMetric> listPeerMetrics() {\n    return request(blockchainMethods.getListPeersMetrics());\n  }", "signature": "List<PeerMetric> listPeerMetrics()", "full_signature": "@Override public List<PeerMetric> listPeerMetrics()", "class_method_signature": "BlockchainTemplate.listPeerMetrics()", "testcase": false, "constructor": false, "invocations": ["request", "getListPeersMetrics"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}