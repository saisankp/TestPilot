{"test_class": {"identifier": "GoogleTableDisplayerTest", "superclass": "extends GoogleDisplayerTest", "interfaces": "", "fields": [], "file": "dashbuilder-client/dashbuilder-renderers/dashbuilder-renderer-google/src/test/java/org/dashbuilder/renderer/google/client/GoogleTableDisplayerTest.java"}, "test_case": {"identifier": "testEmptyTableDraw", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEmptyTableDraw() {\n\n        DisplayerSettings allRows = DisplayerSettingsFactory.newTableSettings()\n                .dataset(EXPENSES)\n                .filter(COLUMN_ID, FilterFactory.isNull())\n                .tablePageSize(10)\n                .buildSettings();\n\n        GoogleTableDisplayer table = createTableDisplayer(allRows);\n        GoogleTableDisplayer.View tableView = table.getView();\n        table.ready();\n\n        verify(tableView).setPageSize(10);\n        verify(tableView).setTotalRows(0);\n        verify(tableView).setTotalPages(1);\n        verify(tableView).setPagerEnabled(false);\n        verify(tableView).nodata();\n    }", "signature": "void testEmptyTableDraw()", "full_signature": "@Test public void testEmptyTableDraw()", "class_method_signature": "GoogleTableDisplayerTest.testEmptyTableDraw()", "testcase": true, "constructor": false, "invocations": ["buildSettings", "tablePageSize", "filter", "dataset", "newTableSettings", "isNull", "createTableDisplayer", "getView", "ready", "setPageSize", "verify", "setTotalRows", "verify", "setTotalPages", "verify", "setPagerEnabled", "verify", "nodata", "verify"]}, "focal_class": {"identifier": "GoogleTableDisplayer", "superclass": "extends GoogleDisplayer<GoogleTableDisplayer.View>", "interfaces": "", "fields": [{"original_string": "protected View view;", "modifier": "protected", "type": "View", "declarator": "view", "var_name": "view"}, {"original_string": "protected int pageSize = 20;", "modifier": "protected", "type": "int", "declarator": "pageSize = 20", "var_name": "pageSize"}, {"original_string": "protected int currentPage = 1;", "modifier": "protected", "type": "int", "declarator": "currentPage = 1", "var_name": "currentPage"}, {"original_string": "protected int numberOfRows = 0;", "modifier": "protected", "type": "int", "declarator": "numberOfRows = 0", "var_name": "numberOfRows"}, {"original_string": "protected int numberOfPages = 1;", "modifier": "protected", "type": "int", "declarator": "numberOfPages = 1", "var_name": "numberOfPages"}, {"original_string": "protected int pageSelectorSize = 6;", "modifier": "protected", "type": "int", "declarator": "pageSelectorSize = 6", "var_name": "pageSelectorSize"}, {"original_string": "protected String lastOrderedColumn = null;", "modifier": "protected", "type": "String", "declarator": "lastOrderedColumn = null", "var_name": "lastOrderedColumn"}, {"original_string": "protected SortOrder lastSortOrder = null;", "modifier": "protected", "type": "SortOrder", "declarator": "lastSortOrder = null", "var_name": "lastSortOrder"}, {"original_string": "protected boolean showTotalRowsHint = true;", "modifier": "protected", "type": "boolean", "declarator": "showTotalRowsHint = true", "var_name": "showTotalRowsHint"}, {"original_string": "protected boolean showTotalPagesHint = true;", "modifier": "protected", "type": "boolean", "declarator": "showTotalPagesHint = true", "var_name": "showTotalPagesHint"}], "methods": [{"identifier": "GoogleTableDisplayer", "parameters": "(View view, FilterLabelSet filterLabelSet)", "modifiers": "@Inject public", "return": "", "signature": " GoogleTableDisplayer(View view, FilterLabelSet filterLabelSet)", "full_signature": "@Inject public  GoogleTableDisplayer(View view, FilterLabelSet filterLabelSet)", "class_method_signature": "GoogleTableDisplayer.GoogleTableDisplayer(View view, FilterLabelSet filterLabelSet)", "testcase": false, "constructor": true}, {"identifier": "getView", "parameters": "()", "modifiers": "@Override public", "return": "View", "signature": "View getView()", "full_signature": "@Override public View getView()", "class_method_signature": "GoogleTableDisplayer.getView()", "testcase": false, "constructor": false}, {"identifier": "createDisplayerConstraints", "parameters": "()", "modifiers": "@Override public", "return": "DisplayerConstraints", "signature": "DisplayerConstraints createDisplayerConstraints()", "full_signature": "@Override public DisplayerConstraints createDisplayerConstraints()", "class_method_signature": "GoogleTableDisplayer.createDisplayerConstraints()", "testcase": false, "constructor": false}, {"identifier": "beforeDataSetLookup", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void beforeDataSetLookup()", "full_signature": "@Override protected void beforeDataSetLookup()", "class_method_signature": "GoogleTableDisplayer.beforeDataSetLookup()", "testcase": false, "constructor": false}, {"identifier": "afterDataSetLookup", "parameters": "(DataSet dataSet)", "modifiers": "@Override protected", "return": "void", "signature": "void afterDataSetLookup(DataSet dataSet)", "full_signature": "@Override protected void afterDataSetLookup(DataSet dataSet)", "class_method_signature": "GoogleTableDisplayer.afterDataSetLookup(DataSet dataSet)", "testcase": false, "constructor": false}, {"identifier": "createVisualization", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void createVisualization()", "full_signature": "@Override protected void createVisualization()", "class_method_signature": "GoogleTableDisplayer.createVisualization()", "testcase": false, "constructor": false}, {"identifier": "updateVisualization", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void updateVisualization()", "full_signature": "@Override protected void updateVisualization()", "class_method_signature": "GoogleTableDisplayer.updateVisualization()", "testcase": false, "constructor": false}, {"identifier": "sortBy", "parameters": "(String column)", "modifiers": "public", "return": "void", "signature": "void sortBy(String column)", "full_signature": "public void sortBy(String column)", "class_method_signature": "GoogleTableDisplayer.sortBy(String column)", "testcase": false, "constructor": false}, {"identifier": "gotoPage", "parameters": "(int pageNumber)", "modifiers": "public", "return": "void", "signature": "void gotoPage(int pageNumber)", "full_signature": "public void gotoPage(int pageNumber)", "class_method_signature": "GoogleTableDisplayer.gotoPage(int pageNumber)", "testcase": false, "constructor": false}, {"identifier": "getLeftMostPageNumber", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLeftMostPageNumber()", "full_signature": "public int getLeftMostPageNumber()", "class_method_signature": "GoogleTableDisplayer.getLeftMostPageNumber()", "testcase": false, "constructor": false}, {"identifier": "getRightMostPageNumber", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRightMostPageNumber()", "full_signature": "public int getRightMostPageNumber()", "class_method_signature": "GoogleTableDisplayer.getRightMostPageNumber()", "testcase": false, "constructor": false}, {"identifier": "getCurrentPage", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCurrentPage()", "full_signature": "public int getCurrentPage()", "class_method_signature": "GoogleTableDisplayer.getCurrentPage()", "testcase": false, "constructor": false}, {"identifier": "onFilterEnabled", "parameters": "(Displayer displayer, DataSetGroup groupOp)", "modifiers": "@Override public", "return": "void", "signature": "void onFilterEnabled(Displayer displayer, DataSetGroup groupOp)", "full_signature": "@Override public void onFilterEnabled(Displayer displayer, DataSetGroup groupOp)", "class_method_signature": "GoogleTableDisplayer.onFilterEnabled(Displayer displayer, DataSetGroup groupOp)", "testcase": false, "constructor": false}, {"identifier": "onFilterEnabled", "parameters": "(Displayer displayer, DataSetFilter filter)", "modifiers": "@Override public", "return": "void", "signature": "void onFilterEnabled(Displayer displayer, DataSetFilter filter)", "full_signature": "@Override public void onFilterEnabled(Displayer displayer, DataSetFilter filter)", "class_method_signature": "GoogleTableDisplayer.onFilterEnabled(Displayer displayer, DataSetFilter filter)", "testcase": false, "constructor": false}, {"identifier": "onFilterReset", "parameters": "(Displayer displayer, List<DataSetGroup> groupOps)", "modifiers": "@Override public", "return": "void", "signature": "void onFilterReset(Displayer displayer, List<DataSetGroup> groupOps)", "full_signature": "@Override public void onFilterReset(Displayer displayer, List<DataSetGroup> groupOps)", "class_method_signature": "GoogleTableDisplayer.onFilterReset(Displayer displayer, List<DataSetGroup> groupOps)", "testcase": false, "constructor": false}, {"identifier": "onFilterReset", "parameters": "(Displayer displayer, DataSetFilter filter)", "modifiers": "@Override public", "return": "void", "signature": "void onFilterReset(Displayer displayer, DataSetFilter filter)", "full_signature": "@Override public void onFilterReset(Displayer displayer, DataSetFilter filter)", "class_method_signature": "GoogleTableDisplayer.onFilterReset(Displayer displayer, DataSetFilter filter)", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-renderers/dashbuilder-renderer-google/src/main/java/org/dashbuilder/renderer/google/client/GoogleTableDisplayer.java"}, "focal_method": {"identifier": "getView", "parameters": "()", "modifiers": "@Override public", "return": "View", "body": "@Override\n    public View getView() {\n        return view;\n    }", "signature": "View getView()", "full_signature": "@Override public View getView()", "class_method_signature": "GoogleTableDisplayer.getView()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}