{"test_class": {"identifier": "JavaCompilerFacadeTest", "superclass": "", "interfaces": "", "fields": [], "file": "artemis-core/src/test/java/org/jnosql/artemis/reflection/JavaCompilerFacadeTest.java"}, "test_case": {"identifier": "shouldCreateGetterClass", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldCreateGetterClass() {\n        Stream.of(Foo.class.getDeclaredConstructors()).forEach(c -> c.setAccessible(true));\n        Foo foo = new Foo();\n        foo.setBar(\"bar\");\n        JavaCompilerBeanPropertyReaderFactory factory = new JavaCompilerBeanPropertyReaderFactory();\n        ReadFromGetterMethod propertyReader = factory.generate(Foo.class, \"bar\");\n        Object bar = propertyReader.apply(foo);\n        Assertions.assertEquals(\"bar\", bar);\n    }", "signature": "void shouldCreateGetterClass()", "full_signature": "@Test public void shouldCreateGetterClass()", "class_method_signature": "JavaCompilerFacadeTest.shouldCreateGetterClass()", "testcase": true, "constructor": false, "invocations": ["forEach", "of", "getDeclaredConstructors", "setAccessible", "setBar", "generate", "apply", "assertEquals"]}, "focal_class": {"identifier": "JavaCompilerFacade", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern BREAK_LINE = Pattern.compile(\"\\n\");", "modifier": "private static final", "type": "Pattern", "declarator": "BREAK_LINE = Pattern.compile(\"\\n\")", "var_name": "BREAK_LINE"}, {"original_string": "private final JavaCompilerClassLoader classLoader;", "modifier": "private final", "type": "JavaCompilerClassLoader", "declarator": "classLoader", "var_name": "classLoader"}, {"original_string": "private final JavaCompiler compiler;", "modifier": "private final", "type": "JavaCompiler", "declarator": "compiler", "var_name": "compiler"}, {"original_string": "private final DiagnosticCollector<javax.tools.JavaFileObject> diagnosticCollector;", "modifier": "private final", "type": "DiagnosticCollector<javax.tools.JavaFileObject>", "declarator": "diagnosticCollector", "var_name": "diagnosticCollector"}], "methods": [{"identifier": "JavaCompilerFacade", "parameters": "(ClassLoader loader)", "modifiers": "public", "return": "", "signature": " JavaCompilerFacade(ClassLoader loader)", "full_signature": "public  JavaCompilerFacade(ClassLoader loader)", "class_method_signature": "JavaCompilerFacade.JavaCompilerFacade(ClassLoader loader)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(JavaSource<T> source)", "modifiers": "public", "return": "Class<? extends T>", "signature": "Class<? extends T> apply(JavaSource<T> source)", "full_signature": "public Class<? extends T> apply(JavaSource<T> source)", "class_method_signature": "JavaCompilerFacade.apply(JavaSource<T> source)", "testcase": false, "constructor": false}, {"identifier": "compile", "parameters": "(JavaSource<T> source)", "modifiers": "private synchronized", "return": "Class<? extends T>", "signature": "Class<? extends T> compile(JavaSource<T> source)", "full_signature": "private synchronized Class<? extends T> compile(JavaSource<T> source)", "class_method_signature": "JavaCompilerFacade.compile(JavaSource<T> source)", "testcase": false, "constructor": false}, {"identifier": "createCompilerErrorMessage", "parameters": "(JavaSource<T> source)", "modifiers": "private", "return": "Class<? extends T>", "signature": "Class<? extends T> createCompilerErrorMessage(JavaSource<T> source)", "full_signature": "private Class<? extends T> createCompilerErrorMessage(JavaSource<T> source)", "class_method_signature": "JavaCompilerFacade.createCompilerErrorMessage(JavaSource<T> source)", "testcase": false, "constructor": false}], "file": "artemis-core/src/main/java/org/jnosql/artemis/reflection/JavaCompilerFacade.java"}, "focal_method": {"identifier": "apply", "parameters": "(JavaSource<T> source)", "modifiers": "public", "return": "Class<? extends T>", "body": "public <T> Class<? extends T> apply(JavaSource<T> source) {\n        return compile(source);\n    }", "signature": "Class<? extends T> apply(JavaSource<T> source)", "full_signature": "public Class<? extends T> apply(JavaSource<T> source)", "class_method_signature": "JavaCompilerFacade.apply(JavaSource<T> source)", "testcase": false, "constructor": false, "invocations": ["compile"]}, "repository": {"repo_id": 67588628, "url": "https://github.com/eclipse/jnosql-artemis", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 43, "size": 2612, "license": "licensed"}}