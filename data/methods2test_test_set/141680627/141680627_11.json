{"test_class": {"identifier": "SingleChoiceOptionItemTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [{"original_string": "private static final String TITLE = \"Test\";", "modifier": "private static final", "type": "String", "declarator": "TITLE = \"Test\"", "var_name": "TITLE"}, {"original_string": "private SingleChoiceOptionItem mSingleChoiceOptionItem;", "modifier": "private", "type": "SingleChoiceOptionItem", "declarator": "mSingleChoiceOptionItem", "var_name": "mSingleChoiceOptionItem"}, {"original_string": "private boolean mCallbackCalled;", "modifier": "private", "type": "boolean", "declarator": "mCallbackCalled", "var_name": "mCallbackCalled"}], "file": "MSDKUIKit/MSDKUILib/src/test/java/com/here/msdkui/routing/SingleChoiceOptionItemTest.java"}, "test_case": {"identifier": "testCallback", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCallback() {\n        mSingleChoiceOptionItem.setListener(new OptionItem.OnChangedListener() {\n            @Override\n            public void onChanged(OptionItem item) {\n                mCallbackCalled = true;\n            }\n        });\n        final List<String> ids = Arrays.asList(getString(R.string.msdkui_fastest), getString(R.string.msdkui_allow_car_pool));\n        mSingleChoiceOptionItem.setLabels(TITLE, ids);\n        assertThat(mSingleChoiceOptionItem.getChildCount(), equalTo(1));\n        final View view = mSingleChoiceOptionItem.getChildAt(0);\n        final TextView labelView = (TextView) view.findViewById(R.id.single_item_label);\n        final Spinner selectionView = (Spinner) view.findViewById(R.id.single_item_value);\n        assertNotNull(labelView);\n        assertNotNull(selectionView);\n        selectionView.setSelection(1);\n        assertThat(mCallbackCalled, is(true));\n    }", "signature": "void testCallback()", "full_signature": "@Test public void testCallback()", "class_method_signature": "SingleChoiceOptionItemTest.testCallback()", "testcase": true, "constructor": false, "invocations": ["setListener", "asList", "getString", "getString", "setLabels", "assertThat", "getChildCount", "equalTo", "getChildAt", "findViewById", "findViewById", "assertNotNull", "assertNotNull", "setSelection", "assertThat", "is"]}, "focal_class": {"identifier": "SingleChoiceOptionItem", "superclass": "extends OptionItem", "interfaces": "implements AdapterView.OnItemSelectedListener", "fields": [{"original_string": "private Spinner mSpinner;", "modifier": "private", "type": "Spinner", "declarator": "mSpinner", "var_name": "mSpinner"}, {"original_string": "private String mTitle;", "modifier": "private", "type": "String", "declarator": "mTitle", "var_name": "mTitle"}, {"original_string": "private List<String> mLabels;", "modifier": "private", "type": "List<String>", "declarator": "mLabels", "var_name": "mLabels"}], "methods": [{"identifier": "SingleChoiceOptionItem", "parameters": "(final Context context)", "modifiers": "public", "return": "", "signature": " SingleChoiceOptionItem(final Context context)", "full_signature": "public  SingleChoiceOptionItem(final Context context)", "class_method_signature": "SingleChoiceOptionItem.SingleChoiceOptionItem(final Context context)", "testcase": false, "constructor": true}, {"identifier": "SingleChoiceOptionItem", "parameters": "(final Context context, final AttributeSet attrs)", "modifiers": "public", "return": "", "signature": " SingleChoiceOptionItem(final Context context, final AttributeSet attrs)", "full_signature": "public  SingleChoiceOptionItem(final Context context, final AttributeSet attrs)", "class_method_signature": "SingleChoiceOptionItem.SingleChoiceOptionItem(final Context context, final AttributeSet attrs)", "testcase": false, "constructor": true}, {"identifier": "SingleChoiceOptionItem", "parameters": "(final Context context, final AttributeSet attrs, final int defStyleAttr)", "modifiers": "public", "return": "", "signature": " SingleChoiceOptionItem(final Context context, final AttributeSet attrs, final int defStyleAttr)", "full_signature": "public  SingleChoiceOptionItem(final Context context, final AttributeSet attrs, final int defStyleAttr)", "class_method_signature": "SingleChoiceOptionItem.SingleChoiceOptionItem(final Context context, final AttributeSet attrs, final int defStyleAttr)", "testcase": false, "constructor": true}, {"identifier": "SingleChoiceOptionItem", "parameters": "(final Context context, final AttributeSet attrs, final int defStyleAttr,\n            final int defStyleRes)", "modifiers": "@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP) public", "return": "", "signature": " SingleChoiceOptionItem(final Context context, final AttributeSet attrs, final int defStyleAttr,\n            final int defStyleRes)", "full_signature": "@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP) public  SingleChoiceOptionItem(final Context context, final AttributeSet attrs, final int defStyleAttr,\n            final int defStyleRes)", "class_method_signature": "SingleChoiceOptionItem.SingleChoiceOptionItem(final Context context, final AttributeSet attrs, final int defStyleAttr,\n            final int defStyleRes)", "testcase": false, "constructor": true}, {"identifier": "getLabels", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getLabels()", "full_signature": "public List<String> getLabels()", "class_method_signature": "SingleChoiceOptionItem.getLabels()", "testcase": false, "constructor": false}, {"identifier": "getTitle", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTitle()", "full_signature": "public String getTitle()", "class_method_signature": "SingleChoiceOptionItem.getTitle()", "testcase": false, "constructor": false}, {"identifier": "setLabels", "parameters": "(final String title, final List<String> labels)", "modifiers": "public", "return": "SingleChoiceOptionItem", "signature": "SingleChoiceOptionItem setLabels(final String title, final List<String> labels)", "full_signature": "public SingleChoiceOptionItem setLabels(final String title, final List<String> labels)", "class_method_signature": "SingleChoiceOptionItem.setLabels(final String title, final List<String> labels)", "testcase": false, "constructor": false}, {"identifier": "selectLabel", "parameters": "(final String label)", "modifiers": "public", "return": "void", "signature": "void selectLabel(final String label)", "full_signature": "public void selectLabel(final String label)", "class_method_signature": "SingleChoiceOptionItem.selectLabel(final String label)", "testcase": false, "constructor": false}, {"identifier": "selectIndex", "parameters": "(final int index)", "modifiers": "public", "return": "void", "signature": "void selectIndex(final int index)", "full_signature": "public void selectIndex(final int index)", "class_method_signature": "SingleChoiceOptionItem.selectIndex(final int index)", "testcase": false, "constructor": false}, {"identifier": "getSelectedItemLabel", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSelectedItemLabel()", "full_signature": "public String getSelectedItemLabel()", "class_method_signature": "SingleChoiceOptionItem.getSelectedItemLabel()", "testcase": false, "constructor": false}, {"identifier": "onItemSelected", "parameters": "(AdapterView<?> parent, View view, int position, long id)", "modifiers": "@Override public", "return": "void", "signature": "void onItemSelected(AdapterView<?> parent, View view, int position, long id)", "full_signature": "@Override public void onItemSelected(AdapterView<?> parent, View view, int position, long id)", "class_method_signature": "SingleChoiceOptionItem.onItemSelected(AdapterView<?> parent, View view, int position, long id)", "testcase": false, "constructor": false}, {"identifier": "onNothingSelected", "parameters": "(AdapterView<?> parent)", "modifiers": "@Override public", "return": "void", "signature": "void onNothingSelected(AdapterView<?> parent)", "full_signature": "@Override public void onNothingSelected(AdapterView<?> parent)", "class_method_signature": "SingleChoiceOptionItem.onNothingSelected(AdapterView<?> parent)", "testcase": false, "constructor": false}], "file": "MSDKUIKit/MSDKUILib/src/main/java/com/here/msdkui/routing/SingleChoiceOptionItem.java"}, "focal_method": {"identifier": "setLabels", "parameters": "(final String title, final List<String> labels)", "modifiers": "public", "return": "SingleChoiceOptionItem", "body": "public SingleChoiceOptionItem setLabels(final String title, final List<String> labels) {\n\n        if (labels == null) {\n            throw new IllegalArgumentException(getContext().getString(R.string.msdkui_exception_labels_null));\n        }\n\n        View.inflate(getContext(), R.layout.single_option_item, this);\n\n        final TextView titleView = (TextView) findViewById(R.id.single_item_label);\n        if (title == null) {\n            titleView.setVisibility(GONE);\n        } else {\n            titleView.setText(title);\n        }\n\n        mTitle = title;\n        mLabels = labels;\n\n        mSpinner = (Spinner) findViewById(R.id.single_item_value);\n        mSpinner.setAdapter(new ArrayAdapter<String>(getContext(), R.layout.spinner_row_item, labels));\n        mSpinner.setOnItemSelectedListener(this);\n        return this;\n    }", "signature": "SingleChoiceOptionItem setLabels(final String title, final List<String> labels)", "full_signature": "public SingleChoiceOptionItem setLabels(final String title, final List<String> labels)", "class_method_signature": "SingleChoiceOptionItem.setLabels(final String title, final List<String> labels)", "testcase": false, "constructor": false, "invocations": ["getString", "getContext", "inflate", "getContext", "findViewById", "setVisibility", "setText", "findViewById", "setAdapter", "getContext", "setOnItemSelectedListener"]}, "repository": {"repo_id": 141680627, "url": "https://github.com/heremaps/msdkui-android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 35, "size": 5559, "license": "licensed"}}