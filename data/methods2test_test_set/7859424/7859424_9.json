{"test_class": {"identifier": "BitVectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int CAPACITY = 500;", "modifier": "public static final", "type": "int", "declarator": "CAPACITY = 500", "var_name": "CAPACITY"}, {"original_string": "private BitVector vector;", "modifier": "private", "type": "BitVector", "declarator": "vector", "var_name": "vector"}], "file": "src/edu/lclark/orego/util/BitVectorTest.java"}, "test_case": {"identifier": "testClear", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testClear() {\n\t\t// All bits should be false\n\t\tfor (int i = 0; i < CAPACITY; i++) {\n\t\t\tassertFalse(vector.get(i));\n\t\t}\n\t\t// Set all bits to true\n\t\tfor (int i = 0; i < CAPACITY; i++) {\n\t\t\tvector.set(i, true);\n\t\t}\n\t\t// Verify that they are true\n\t\tfor (int i = 0; i < CAPACITY; i++) {\n\t\t\tassertTrue(vector.get(i));\n\t\t}\n\t\t// Clear the vector\n\t\tvector.clear();\n\t\t// All bits should now be false\n\t\tfor (int i = 0; i < CAPACITY; i++) {\n\t\t\tassertFalse(vector.get(i));\n\t\t}\n\t}", "signature": "void testClear()", "full_signature": "@Test public void testClear()", "class_method_signature": "BitVectorTest.testClear()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "get", "set", "assertTrue", "get", "clear", "assertFalse", "get"]}, "focal_class": {"identifier": "BitVector", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private final long[] data;", "modifier": "private final", "type": "long[]", "declarator": "data", "var_name": "data"}], "methods": [{"identifier": "BitVector", "parameters": "(int capacity)", "modifiers": "public", "return": "", "signature": " BitVector(int capacity)", "full_signature": "public  BitVector(int capacity)", "class_method_signature": "BitVector.BitVector(int capacity)", "testcase": false, "constructor": true}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "BitVector.clear()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int i)", "modifiers": "public", "return": "boolean", "signature": "boolean get(int i)", "full_signature": "public boolean get(int i)", "class_method_signature": "BitVector.get(int i)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int i, boolean value)", "modifiers": "public", "return": "void", "signature": "void set(int i, boolean value)", "full_signature": "public void set(int i, boolean value)", "class_method_signature": "BitVector.set(int i, boolean value)", "testcase": false, "constructor": false}], "file": "src/edu/lclark/orego/util/BitVector.java"}, "focal_method": {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void clear() {\n\t\tfill(data, 0L);\n\t}", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "BitVector.clear()", "testcase": false, "constructor": false, "invocations": ["fill"]}, "repository": {"repo_id": 7859424, "url": "https://github.com/Orego/Orego", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 1341444, "license": "licensed"}}