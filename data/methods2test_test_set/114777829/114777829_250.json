{"test_class": {"identifier": "MultipartConfigElementTest", "superclass": "", "interfaces": "", "fields": [], "file": "servlet/api/src/test/java/javax/servlet/MultipartConfigElementTest.java"}, "test_case": {"identifier": "testGetMaxRequestSize2", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testGetMaxRequestSize2() {\n        MultipartConfigElement element = new MultipartConfigElement(new MultipartConfig() {\n            @Override\n            public int fileSizeThreshold() {\n                return 1000;\n            }\n\n            @Override\n            public String location() {\n                return \"\";\n            }\n\n            @Override\n            public long maxFileSize() {\n                return 1000;\n            }\n\n            @Override\n            public long maxRequestSize() {\n                return 1000;\n            }\n\n            @Override\n            public Class<? extends Annotation> annotationType() {\n                throw new UnsupportedOperationException(\"Not supported yet.\");\n            }\n        });\n        assertEquals(1000, element.getMaxRequestSize());\n    }", "signature": "void testGetMaxRequestSize2()", "full_signature": "@Test void testGetMaxRequestSize2()", "class_method_signature": "MultipartConfigElementTest.testGetMaxRequestSize2()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getMaxRequestSize"]}, "focal_class": {"identifier": "MultipartConfigElement", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final int fileSizeThreshold;", "modifier": "private final", "type": "int", "declarator": "fileSizeThreshold", "var_name": "fileSizeThreshold"}, {"original_string": "private final String location;", "modifier": "private final", "type": "String", "declarator": "location", "var_name": "location"}, {"original_string": "private final long maxFileSize;", "modifier": "private final", "type": "long", "declarator": "maxFileSize", "var_name": "maxFileSize"}, {"original_string": "private final long maxRequestSize;", "modifier": "private final", "type": "long", "declarator": "maxRequestSize", "var_name": "maxRequestSize"}], "methods": [{"identifier": "MultipartConfigElement", "parameters": "(String location)", "modifiers": "public", "return": "", "signature": " MultipartConfigElement(String location)", "full_signature": "public  MultipartConfigElement(String location)", "class_method_signature": "MultipartConfigElement.MultipartConfigElement(String location)", "testcase": false, "constructor": true}, {"identifier": "MultipartConfigElement", "parameters": "(String location, long maxFileSize, long maxRequestSize, int fileSizeThreshold)", "modifiers": "public", "return": "", "signature": " MultipartConfigElement(String location, long maxFileSize, long maxRequestSize, int fileSizeThreshold)", "full_signature": "public  MultipartConfigElement(String location, long maxFileSize, long maxRequestSize, int fileSizeThreshold)", "class_method_signature": "MultipartConfigElement.MultipartConfigElement(String location, long maxFileSize, long maxRequestSize, int fileSizeThreshold)", "testcase": false, "constructor": true}, {"identifier": "MultipartConfigElement", "parameters": "(MultipartConfig annotation)", "modifiers": "public", "return": "", "signature": " MultipartConfigElement(MultipartConfig annotation)", "full_signature": "public  MultipartConfigElement(MultipartConfig annotation)", "class_method_signature": "MultipartConfigElement.MultipartConfigElement(MultipartConfig annotation)", "testcase": false, "constructor": true}, {"identifier": "getFileSizeThreshold", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getFileSizeThreshold()", "full_signature": "public int getFileSizeThreshold()", "class_method_signature": "MultipartConfigElement.getFileSizeThreshold()", "testcase": false, "constructor": false}, {"identifier": "getLocation", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLocation()", "full_signature": "public String getLocation()", "class_method_signature": "MultipartConfigElement.getLocation()", "testcase": false, "constructor": false}, {"identifier": "getMaxFileSize", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMaxFileSize()", "full_signature": "public long getMaxFileSize()", "class_method_signature": "MultipartConfigElement.getMaxFileSize()", "testcase": false, "constructor": false}, {"identifier": "getMaxRequestSize", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMaxRequestSize()", "full_signature": "public long getMaxRequestSize()", "class_method_signature": "MultipartConfigElement.getMaxRequestSize()", "testcase": false, "constructor": false}], "file": "servlet/api/src/main/java/javax/servlet/MultipartConfigElement.java"}, "focal_method": {"identifier": "getMaxRequestSize", "parameters": "()", "modifiers": "public", "return": "long", "body": "public long getMaxRequestSize() {\n        return this.maxRequestSize;\n    }", "signature": "long getMaxRequestSize()", "full_signature": "public long getMaxRequestSize()", "class_method_signature": "MultipartConfigElement.getMaxRequestSize()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}