{"test_class": {"identifier": "NodeFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final byte[] NODE_1 = \"node-1\".getBytes();", "modifier": "private static final", "type": "byte[]", "declarator": "NODE_1 = \"node-1\".getBytes()", "var_name": "NODE_1"}, {"original_string": "private static final byte[] NODE_2 = \"node-2\".getBytes();", "modifier": "private static final", "type": "byte[]", "declarator": "NODE_2 = \"node-2\".getBytes()", "var_name": "NODE_2"}], "file": "ethereumj-core/src/test/java/org/ethereum/config/NodeFilterTest.java"}, "test_case": {"identifier": "neverAcceptOnEmptyFilter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void neverAcceptOnEmptyFilter() throws Exception {\n        NodeFilter filter = new NodeFilter();\n        assertFalse(filter.accept(createTestNode(\"node-1\", \"1.2.3.4\")));\n        assertFalse(filter.accept(createTestNode(\"node-2\", \"1.2.3.4\")));\n        assertFalse(filter.accept(createTestNode(\"node-2\", \"1.2.3.99\")));\n        assertFalse(filter.accept(createTestNode(\"node-2\", \"1.2.99.99\")));\n        assertFalse(filter.accept(createTestNode(\"node-2\", \"1.99.99.99\")));\n        assertFalse(filter.accept(createTestNode(\"node-2\", \"2.99.99.99\")));\n    }", "signature": "void neverAcceptOnEmptyFilter()", "full_signature": "@Test public void neverAcceptOnEmptyFilter()", "class_method_signature": "NodeFilterTest.neverAcceptOnEmptyFilter()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "accept", "createTestNode", "assertFalse", "accept", "createTestNode", "assertFalse", "accept", "createTestNode", "assertFalse", "accept", "createTestNode", "assertFalse", "accept", "createTestNode", "assertFalse", "accept", "createTestNode"]}, "focal_class": {"identifier": "NodeFilter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<Entry> entries = new ArrayList<>();", "modifier": "private", "type": "List<Entry>", "declarator": "entries = new ArrayList<>()", "var_name": "entries"}], "methods": [{"identifier": "add", "parameters": "(byte[] nodeId, String hostIpPattern)", "modifiers": "public", "return": "void", "signature": "void add(byte[] nodeId, String hostIpPattern)", "full_signature": "public void add(byte[] nodeId, String hostIpPattern)", "class_method_signature": "NodeFilter.add(byte[] nodeId, String hostIpPattern)", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(Node node)", "modifiers": "public", "return": "boolean", "signature": "boolean accept(Node node)", "full_signature": "public boolean accept(Node node)", "class_method_signature": "NodeFilter.accept(Node node)", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(InetAddress nodeAddr)", "modifiers": "public", "return": "boolean", "signature": "boolean accept(InetAddress nodeAddr)", "full_signature": "public boolean accept(InetAddress nodeAddr)", "class_method_signature": "NodeFilter.accept(InetAddress nodeAddr)", "testcase": false, "constructor": false}], "file": "ethereumj-core/src/main/java/org/ethereum/config/NodeFilter.java"}, "focal_method": {"identifier": "accept", "parameters": "(Node node)", "modifiers": "public", "return": "boolean", "body": "public boolean accept(Node node) {\n        for (Entry entry : entries) {\n            if (entry.accept(node)) return true;\n        }\n        return false;\n    }", "signature": "boolean accept(Node node)", "full_signature": "public boolean accept(Node node)", "class_method_signature": "NodeFilter.accept(Node node)", "testcase": false, "constructor": false, "invocations": ["accept"]}, "repository": {"repo_id": 19730456, "url": "https://github.com/ethereum/ethereumj", "language": "Java", "is_fork": false, "fork_count": 1034, "stargazer_count": 2058, "size": 47979, "license": "licensed"}}