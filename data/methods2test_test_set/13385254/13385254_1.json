{"test_class": {"identifier": "CSVToARFFHeaderMapTaskTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String IRIS_HEADER =\n    \"sepallength,sepalwidth,petallength,petalwidth,class\\n\";", "modifier": "public static final", "type": "String", "declarator": "IRIS_HEADER =\n    \"sepallength,sepalwidth,petallength,petalwidth,class\\n\"", "var_name": "IRIS_HEADER"}, {"original_string": "public static final String IRIS = IRIS_HEADER\n    + CorrelationMatrixMapTaskTest.IRIS_DATA;", "modifier": "public static final", "type": "String", "declarator": "IRIS = IRIS_HEADER\n    + CorrelationMatrixMapTaskTest.IRIS_DATA", "var_name": "IRIS"}, {"original_string": "public static final double TOL = 1e-6;", "modifier": "public static final", "type": "double", "declarator": "TOL = 1e-6", "var_name": "TOL"}], "file": "tags/distributedWekaBase-1.0.9/src/test/java/weka/distributed/CSVToARFFHeaderMapTaskTest.java"}, "test_case": {"identifier": "testGetHeaderWithoutProcessing", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetHeaderWithoutProcessing() throws Exception {\n    // tests getting a header without any processing of incoming\n    // CSV data - i.e. all attributes are assumed to be numeric\n\n    CSVToARFFHeaderMapTask task = new CSVToARFFHeaderMapTask();\n    // task.setOptions(args);\n\n    Instances i = task.getHeader(10, null);\n    for (int j = 0; j < i.numAttributes(); j++) {\n      assertTrue(i.attribute(j).isNumeric());\n    }\n  }", "signature": "void testGetHeaderWithoutProcessing()", "full_signature": "@Test public void testGetHeaderWithoutProcessing()", "class_method_signature": "CSVToARFFHeaderMapTaskTest.testGetHeaderWithoutProcessing()", "testcase": true, "constructor": false, "invocations": ["getHeader", "numAttributes", "assertTrue", "isNumeric", "attribute"]}, "focal_class": {"identifier": "CSVToARFFHeaderMapTask", "superclass": "", "interfaces": "implements OptionHandler, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -3949274571568175413L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -3949274571568175413L", "var_name": "serialVersionUID"}, {"original_string": "public static final String ARFF_SUMMARY_ATTRIBUTE_PREFIX = \"arff_summary_\";", "modifier": "public static final", "type": "String", "declarator": "ARFF_SUMMARY_ATTRIBUTE_PREFIX = \"arff_summary_\"", "var_name": "ARFF_SUMMARY_ATTRIBUTE_PREFIX"}, {"original_string": "protected TYPE[] m_attributeTypes;", "modifier": "protected", "type": "TYPE[]", "declarator": "m_attributeTypes", "var_name": "m_attributeTypes"}, {"original_string": "protected Range m_forceString = new Range();", "modifier": "protected", "type": "Range", "declarator": "m_forceString = new Range()", "var_name": "m_forceString"}, {"original_string": "protected Range m_forceNominal = new Range();", "modifier": "protected", "type": "Range", "declarator": "m_forceNominal = new Range()", "var_name": "m_forceNominal"}, {"original_string": "protected Range m_forceDate = new Range();", "modifier": "protected", "type": "Range", "declarator": "m_forceDate = new Range()", "var_name": "m_forceDate"}, {"original_string": "protected String m_stringRange = \"\";", "modifier": "protected", "type": "String", "declarator": "m_stringRange = \"\"", "var_name": "m_stringRange"}, {"original_string": "protected String m_nominalRange = \"\";", "modifier": "protected", "type": "String", "declarator": "m_nominalRange = \"\"", "var_name": "m_nominalRange"}, {"original_string": "protected String m_dateRange = \"\";", "modifier": "protected", "type": "String", "declarator": "m_dateRange = \"\"", "var_name": "m_dateRange"}, {"original_string": "protected List<String> m_attributeNames = new ArrayList<String>();", "modifier": "protected", "type": "List<String>", "declarator": "m_attributeNames = new ArrayList<String>()", "var_name": "m_attributeNames"}, {"original_string": "public static final int MAX_PARSING_ERRORS = 50;", "modifier": "public static final", "type": "int", "declarator": "MAX_PARSING_ERRORS = 50", "var_name": "MAX_PARSING_ERRORS"}, {"original_string": "protected String m_dateFormat = \"yyyy-MM-dd'T'HH:mm:ss\";", "modifier": "protected", "type": "String", "declarator": "m_dateFormat = \"yyyy-MM-dd'T'HH:mm:ss\"", "var_name": "m_dateFormat"}, {"original_string": "protected SimpleDateFormat m_formatter;", "modifier": "protected", "type": "SimpleDateFormat", "declarator": "m_formatter", "var_name": "m_formatter"}, {"original_string": "protected List<String> m_nominalLabelSpecs = new ArrayList<String>();", "modifier": "protected", "type": "List<String>", "declarator": "m_nominalLabelSpecs = new ArrayList<String>()", "var_name": "m_nominalLabelSpecs"}, {"original_string": "protected List<String> m_nominalDefaultLabelSpecs = new ArrayList<String>();", "modifier": "protected", "type": "List<String>", "declarator": "m_nominalDefaultLabelSpecs = new ArrayList<String>()", "var_name": "m_nominalDefaultLabelSpecs"}, {"original_string": "protected Map<Integer, TreeSet<String>> m_nominalVals =\n    new HashMap<Integer, TreeSet<String>>();", "modifier": "protected", "type": "Map<Integer, TreeSet<String>>", "declarator": "m_nominalVals =\n    new HashMap<Integer, TreeSet<String>>()", "var_name": "m_nominalVals"}, {"original_string": "protected Map<Integer, String> m_nominalDefaultVals =\n    new HashMap<Integer, String>();", "modifier": "protected", "type": "Map<Integer, String>", "declarator": "m_nominalDefaultVals =\n    new HashMap<Integer, String>()", "var_name": "m_nominalDefaultVals"}, {"original_string": "protected String m_MissingValue = \"?\";", "modifier": "protected", "type": "String", "declarator": "m_MissingValue = \"?\"", "var_name": "m_MissingValue"}, {"original_string": "protected String m_Enclosures = \"\\'\";", "modifier": "protected", "type": "String", "declarator": "m_Enclosures = \"\\'\"", "var_name": "m_Enclosures"}, {"original_string": "protected String m_FieldSeparator = \",\";", "modifier": "protected", "type": "String", "declarator": "m_FieldSeparator = \",\"", "var_name": "m_FieldSeparator"}, {"original_string": "protected CSVParser m_parser;", "modifier": "protected", "type": "CSVParser", "declarator": "m_parser", "var_name": "m_parser"}, {"original_string": "protected boolean m_computeSummaryStats = true;", "modifier": "protected", "type": "boolean", "declarator": "m_computeSummaryStats = true", "var_name": "m_computeSummaryStats"}, {"original_string": "protected Map<String, Stats> m_summaryStats = new HashMap<String, Stats>();", "modifier": "protected", "type": "Map<String, Stats>", "declarator": "m_summaryStats = new HashMap<String, Stats>()", "var_name": "m_summaryStats"}, {"original_string": "protected boolean m_treatZeroAsMissing;", "modifier": "protected", "type": "boolean", "declarator": "m_treatZeroAsMissing", "var_name": "m_treatZeroAsMissing"}, {"original_string": "protected boolean m_estimateQuantiles = false;", "modifier": "protected", "type": "boolean", "declarator": "m_estimateQuantiles = false", "var_name": "m_estimateQuantiles"}, {"original_string": "protected double m_quantileCompression = NumericStats.Q_COMPRESSION;", "modifier": "protected", "type": "double", "declarator": "m_quantileCompression = NumericStats.Q_COMPRESSION", "var_name": "m_quantileCompression"}, {"original_string": "protected int m_parsingErrors;", "modifier": "protected", "type": "int", "declarator": "m_parsingErrors", "var_name": "m_parsingErrors"}], "methods": [{"identifier": "listOptions", "parameters": "()", "modifiers": "@Override public", "return": "Enumeration<Option>", "signature": "Enumeration<Option> listOptions()", "full_signature": "@Override public Enumeration<Option> listOptions()", "class_method_signature": "CSVToARFFHeaderMapTask.listOptions()", "testcase": false, "constructor": false}, {"identifier": "setOptions", "parameters": "(String[] options)", "modifiers": "@Override public", "return": "void", "signature": "void setOptions(String[] options)", "full_signature": "@Override public void setOptions(String[] options)", "class_method_signature": "CSVToARFFHeaderMapTask.setOptions(String[] options)", "testcase": false, "constructor": false}, {"identifier": "getOptions", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getOptions()", "full_signature": "@Override public String[] getOptions()", "class_method_signature": "CSVToARFFHeaderMapTask.getOptions()", "testcase": false, "constructor": false}, {"identifier": "setTreatZerosAsMissing", "parameters": "(boolean t)", "modifiers": "public", "return": "void", "signature": "void setTreatZerosAsMissing(boolean t)", "full_signature": "public void setTreatZerosAsMissing(boolean t)", "class_method_signature": "CSVToARFFHeaderMapTask.setTreatZerosAsMissing(boolean t)", "testcase": false, "constructor": false}, {"identifier": "getTreatZerosAsMissing", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getTreatZerosAsMissing()", "full_signature": "public boolean getTreatZerosAsMissing()", "class_method_signature": "CSVToARFFHeaderMapTask.getTreatZerosAsMissing()", "testcase": false, "constructor": false}, {"identifier": "setCompressionLevelForQuartileEstimation", "parameters": "(double compression)", "modifiers": "public", "return": "void", "signature": "void setCompressionLevelForQuartileEstimation(double compression)", "full_signature": "public void setCompressionLevelForQuartileEstimation(double compression)", "class_method_signature": "CSVToARFFHeaderMapTask.setCompressionLevelForQuartileEstimation(double compression)", "testcase": false, "constructor": false}, {"identifier": "getCompressionLevelForQuartileEstimation", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getCompressionLevelForQuartileEstimation()", "full_signature": "public double getCompressionLevelForQuartileEstimation()", "class_method_signature": "CSVToARFFHeaderMapTask.getCompressionLevelForQuartileEstimation()", "testcase": false, "constructor": false}, {"identifier": "compressionLevelForQuartileEstimationTipText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String compressionLevelForQuartileEstimationTipText()", "full_signature": "public String compressionLevelForQuartileEstimationTipText()", "class_method_signature": "CSVToARFFHeaderMapTask.compressionLevelForQuartileEstimationTipText()", "testcase": false, "constructor": false}, {"identifier": "setComputeQuartilesAsPartOfSummaryStats", "parameters": "(boolean c)", "modifiers": "public", "return": "void", "signature": "void setComputeQuartilesAsPartOfSummaryStats(boolean c)", "full_signature": "public void setComputeQuartilesAsPartOfSummaryStats(boolean c)", "class_method_signature": "CSVToARFFHeaderMapTask.setComputeQuartilesAsPartOfSummaryStats(boolean c)", "testcase": false, "constructor": false}, {"identifier": "getComputeQuartilesAsPartOfSummaryStats", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getComputeQuartilesAsPartOfSummaryStats()", "full_signature": "public boolean getComputeQuartilesAsPartOfSummaryStats()", "class_method_signature": "CSVToARFFHeaderMapTask.getComputeQuartilesAsPartOfSummaryStats()", "testcase": false, "constructor": false}, {"identifier": "computeQuartilesAsPartOfSummaryStatsTipText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String computeQuartilesAsPartOfSummaryStatsTipText()", "full_signature": "public String computeQuartilesAsPartOfSummaryStatsTipText()", "class_method_signature": "CSVToARFFHeaderMapTask.computeQuartilesAsPartOfSummaryStatsTipText()", "testcase": false, "constructor": false}, {"identifier": "setMissingValue", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setMissingValue(String value)", "full_signature": "public void setMissingValue(String value)", "class_method_signature": "CSVToARFFHeaderMapTask.setMissingValue(String value)", "testcase": false, "constructor": false}, {"identifier": "getMissingValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMissingValue()", "full_signature": "public String getMissingValue()", "class_method_signature": "CSVToARFFHeaderMapTask.getMissingValue()", "testcase": false, "constructor": false}, {"identifier": "missingValueTipText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String missingValueTipText()", "full_signature": "public String missingValueTipText()", "class_method_signature": "CSVToARFFHeaderMapTask.missingValueTipText()", "testcase": false, "constructor": false}, {"identifier": "setStringAttributes", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setStringAttributes(String value)", "full_signature": "public void setStringAttributes(String value)", "class_method_signature": "CSVToARFFHeaderMapTask.setStringAttributes(String value)", "testcase": false, "constructor": false}, {"identifier": "getStringAttributes", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStringAttributes()", "full_signature": "public String getStringAttributes()", "class_method_signature": "CSVToARFFHeaderMapTask.getStringAttributes()", "testcase": false, "constructor": false}, {"identifier": "stringAttributesTipText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String stringAttributesTipText()", "full_signature": "public String stringAttributesTipText()", "class_method_signature": "CSVToARFFHeaderMapTask.stringAttributesTipText()", "testcase": false, "constructor": false}, {"identifier": "setNominalAttributes", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setNominalAttributes(String value)", "full_signature": "public void setNominalAttributes(String value)", "class_method_signature": "CSVToARFFHeaderMapTask.setNominalAttributes(String value)", "testcase": false, "constructor": false}, {"identifier": "getNominalAttributes", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getNominalAttributes()", "full_signature": "public String getNominalAttributes()", "class_method_signature": "CSVToARFFHeaderMapTask.getNominalAttributes()", "testcase": false, "constructor": false}, {"identifier": "nominalAttributesTipText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String nominalAttributesTipText()", "full_signature": "public String nominalAttributesTipText()", "class_method_signature": "CSVToARFFHeaderMapTask.nominalAttributesTipText()", "testcase": false, "constructor": false}, {"identifier": "setDateFormat", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setDateFormat(String value)", "full_signature": "public void setDateFormat(String value)", "class_method_signature": "CSVToARFFHeaderMapTask.setDateFormat(String value)", "testcase": false, "constructor": false}, {"identifier": "getDateFormat", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDateFormat()", "full_signature": "public String getDateFormat()", "class_method_signature": "CSVToARFFHeaderMapTask.getDateFormat()", "testcase": false, "constructor": false}, {"identifier": "dateFormatTipText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String dateFormatTipText()", "full_signature": "public String dateFormatTipText()", "class_method_signature": "CSVToARFFHeaderMapTask.dateFormatTipText()", "testcase": false, "constructor": false}, {"identifier": "setDateAttributes", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setDateAttributes(String value)", "full_signature": "public void setDateAttributes(String value)", "class_method_signature": "CSVToARFFHeaderMapTask.setDateAttributes(String value)", "testcase": false, "constructor": false}, {"identifier": "getDateAttributes", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDateAttributes()", "full_signature": "public String getDateAttributes()", "class_method_signature": "CSVToARFFHeaderMapTask.getDateAttributes()", "testcase": false, "constructor": false}, {"identifier": "dateAttributesTipText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String dateAttributesTipText()", "full_signature": "public String dateAttributesTipText()", "class_method_signature": "CSVToARFFHeaderMapTask.dateAttributesTipText()", "testcase": false, "constructor": false}, {"identifier": "enclosureCharactersTipText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String enclosureCharactersTipText()", "full_signature": "public String enclosureCharactersTipText()", "class_method_signature": "CSVToARFFHeaderMapTask.enclosureCharactersTipText()", "testcase": false, "constructor": false}, {"identifier": "setEnclosureCharacters", "parameters": "(String enclosure)", "modifiers": "public", "return": "void", "signature": "void setEnclosureCharacters(String enclosure)", "full_signature": "public void setEnclosureCharacters(String enclosure)", "class_method_signature": "CSVToARFFHeaderMapTask.setEnclosureCharacters(String enclosure)", "testcase": false, "constructor": false}, {"identifier": "getEnclosureCharacters", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEnclosureCharacters()", "full_signature": "public String getEnclosureCharacters()", "class_method_signature": "CSVToARFFHeaderMapTask.getEnclosureCharacters()", "testcase": false, "constructor": false}, {"identifier": "setFieldSeparator", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setFieldSeparator(String value)", "full_signature": "public void setFieldSeparator(String value)", "class_method_signature": "CSVToARFFHeaderMapTask.setFieldSeparator(String value)", "testcase": false, "constructor": false}, {"identifier": "getFieldSeparator", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFieldSeparator()", "full_signature": "public String getFieldSeparator()", "class_method_signature": "CSVToARFFHeaderMapTask.getFieldSeparator()", "testcase": false, "constructor": false}, {"identifier": "fieldSeparatorTipText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String fieldSeparatorTipText()", "full_signature": "public String fieldSeparatorTipText()", "class_method_signature": "CSVToARFFHeaderMapTask.fieldSeparatorTipText()", "testcase": false, "constructor": false}, {"identifier": "nominalDefaultLabelSpecsTipText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String nominalDefaultLabelSpecsTipText()", "full_signature": "public String nominalDefaultLabelSpecsTipText()", "class_method_signature": "CSVToARFFHeaderMapTask.nominalDefaultLabelSpecsTipText()", "testcase": false, "constructor": false}, {"identifier": "setNominalDefaultLabelSpecs", "parameters": "(Object[] specs)", "modifiers": "public", "return": "void", "signature": "void setNominalDefaultLabelSpecs(Object[] specs)", "full_signature": "public void setNominalDefaultLabelSpecs(Object[] specs)", "class_method_signature": "CSVToARFFHeaderMapTask.setNominalDefaultLabelSpecs(Object[] specs)", "testcase": false, "constructor": false}, {"identifier": "getNominalDefaultLabelSpecs", "parameters": "()", "modifiers": "public", "return": "Object[]", "signature": "Object[] getNominalDefaultLabelSpecs()", "full_signature": "public Object[] getNominalDefaultLabelSpecs()", "class_method_signature": "CSVToARFFHeaderMapTask.getNominalDefaultLabelSpecs()", "testcase": false, "constructor": false}, {"identifier": "nominalLabelSpecsTipText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String nominalLabelSpecsTipText()", "full_signature": "public String nominalLabelSpecsTipText()", "class_method_signature": "CSVToARFFHeaderMapTask.nominalLabelSpecsTipText()", "testcase": false, "constructor": false}, {"identifier": "setNominalLabelSpecs", "parameters": "(Object[] specs)", "modifiers": "public", "return": "void", "signature": "void setNominalLabelSpecs(Object[] specs)", "full_signature": "public void setNominalLabelSpecs(Object[] specs)", "class_method_signature": "CSVToARFFHeaderMapTask.setNominalLabelSpecs(Object[] specs)", "testcase": false, "constructor": false}, {"identifier": "getNominalLabelSpecs", "parameters": "()", "modifiers": "public", "return": "Object[]", "signature": "Object[] getNominalLabelSpecs()", "full_signature": "public Object[] getNominalLabelSpecs()", "class_method_signature": "CSVToARFFHeaderMapTask.getNominalLabelSpecs()", "testcase": false, "constructor": false}, {"identifier": "generateNames", "parameters": "(int initial, int numAtts)", "modifiers": "public", "return": "void", "signature": "void generateNames(int initial, int numAtts)", "full_signature": "public void generateNames(int initial, int numAtts)", "class_method_signature": "CSVToARFFHeaderMapTask.generateNames(int initial, int numAtts)", "testcase": false, "constructor": false}, {"identifier": "generateNames", "parameters": "(int numAtts)", "modifiers": "public", "return": "void", "signature": "void generateNames(int numAtts)", "full_signature": "public void generateNames(int numAtts)", "class_method_signature": "CSVToARFFHeaderMapTask.generateNames(int numAtts)", "testcase": false, "constructor": false}, {"identifier": "initParserOnly", "parameters": "(List<String> attNames)", "modifiers": "public", "return": "void", "signature": "void initParserOnly(List<String> attNames)", "full_signature": "public void initParserOnly(List<String> attNames)", "class_method_signature": "CSVToARFFHeaderMapTask.initParserOnly(List<String> attNames)", "testcase": false, "constructor": false}, {"identifier": "parseRowOnly", "parameters": "(String row)", "modifiers": "public", "return": "String[]", "signature": "String[] parseRowOnly(String row)", "full_signature": "public String[] parseRowOnly(String row)", "class_method_signature": "CSVToARFFHeaderMapTask.parseRowOnly(String row)", "testcase": false, "constructor": false}, {"identifier": "processRow", "parameters": "(String row, List<String> attNames)", "modifiers": "public", "return": "void", "signature": "void processRow(String row, List<String> attNames)", "full_signature": "public void processRow(String row, List<String> attNames)", "class_method_signature": "CSVToARFFHeaderMapTask.processRow(String row, List<String> attNames)", "testcase": false, "constructor": false}, {"identifier": "updateSummaryStats", "parameters": "(Map<String, Stats> summaryStats,\n    String attName, double value, String nominalLabel, boolean isNominal,\n    boolean isString,\n    boolean treatZeroAsMissing, boolean estimateQuantiles,\n    double quantileCompression)", "modifiers": "public static", "return": "void", "signature": "void updateSummaryStats(Map<String, Stats> summaryStats,\n    String attName, double value, String nominalLabel, boolean isNominal,\n    boolean isString,\n    boolean treatZeroAsMissing, boolean estimateQuantiles,\n    double quantileCompression)", "full_signature": "public static void updateSummaryStats(Map<String, Stats> summaryStats,\n    String attName, double value, String nominalLabel, boolean isNominal,\n    boolean isString,\n    boolean treatZeroAsMissing, boolean estimateQuantiles,\n    double quantileCompression)", "class_method_signature": "CSVToARFFHeaderMapTask.updateSummaryStats(Map<String, Stats> summaryStats,\n    String attName, double value, String nominalLabel, boolean isNominal,\n    boolean isString,\n    boolean treatZeroAsMissing, boolean estimateQuantiles,\n    double quantileCompression)", "testcase": false, "constructor": false}, {"identifier": "getHeader", "parameters": "()", "modifiers": "public", "return": "Instances", "signature": "Instances getHeader()", "full_signature": "public Instances getHeader()", "class_method_signature": "CSVToARFFHeaderMapTask.getHeader()", "testcase": false, "constructor": false}, {"identifier": "getHeaderAndQuantileEstimators", "parameters": "()", "modifiers": "public", "return": "HeaderAndQuantileDataHolder", "signature": "HeaderAndQuantileDataHolder getHeaderAndQuantileEstimators()", "full_signature": "public HeaderAndQuantileDataHolder getHeaderAndQuantileEstimators()", "class_method_signature": "CSVToARFFHeaderMapTask.getHeaderAndQuantileEstimators()", "testcase": false, "constructor": false}, {"identifier": "headerAvailableImmediately", "parameters": "(int numFields,\n    List<String> attNames, StringBuffer problems)", "modifiers": "public", "return": "boolean", "signature": "boolean headerAvailableImmediately(int numFields,\n    List<String> attNames, StringBuffer problems)", "full_signature": "public boolean headerAvailableImmediately(int numFields,\n    List<String> attNames, StringBuffer problems)", "class_method_signature": "CSVToARFFHeaderMapTask.headerAvailableImmediately(int numFields,\n    List<String> attNames, StringBuffer problems)", "testcase": false, "constructor": false}, {"identifier": "getHeader", "parameters": "(int numFields, List<String> attNames)", "modifiers": "public", "return": "Instances", "signature": "Instances getHeader(int numFields, List<String> attNames)", "full_signature": "public Instances getHeader(int numFields, List<String> attNames)", "class_method_signature": "CSVToARFFHeaderMapTask.getHeader(int numFields, List<String> attNames)", "testcase": false, "constructor": false}, {"identifier": "processRanges", "parameters": "(int numFields, TYPE defaultType)", "modifiers": "private", "return": "void", "signature": "void processRanges(int numFields, TYPE defaultType)", "full_signature": "private void processRanges(int numFields, TYPE defaultType)", "class_method_signature": "CSVToARFFHeaderMapTask.processRanges(int numFields, TYPE defaultType)", "testcase": false, "constructor": false}, {"identifier": "processNominalSpecs", "parameters": "(int numFields)", "modifiers": "private", "return": "void", "signature": "void processNominalSpecs(int numFields)", "full_signature": "private void processNominalSpecs(int numFields)", "class_method_signature": "CSVToARFFHeaderMapTask.processNominalSpecs(int numFields)", "testcase": false, "constructor": false}, {"identifier": "makeStructure", "parameters": "()", "modifiers": "protected", "return": "Instances", "signature": "Instances makeStructure()", "full_signature": "protected Instances makeStructure()", "class_method_signature": "CSVToARFFHeaderMapTask.makeStructure()", "testcase": false, "constructor": false}, {"identifier": "makeInstance", "parameters": "(Instances trainingHeader,\n    boolean setStringValues, String[] parsed)", "modifiers": "public", "return": "Instance", "signature": "Instance makeInstance(Instances trainingHeader,\n    boolean setStringValues, String[] parsed)", "full_signature": "public Instance makeInstance(Instances trainingHeader,\n    boolean setStringValues, String[] parsed)", "class_method_signature": "CSVToARFFHeaderMapTask.makeInstance(Instances trainingHeader,\n    boolean setStringValues, String[] parsed)", "testcase": false, "constructor": false}, {"identifier": "makeInstance", "parameters": "(Instances trainingHeader,\n    boolean setStringValues, String[] parsed, boolean sparse)", "modifiers": "public", "return": "Instance", "signature": "Instance makeInstance(Instances trainingHeader,\n    boolean setStringValues, String[] parsed, boolean sparse)", "full_signature": "public Instance makeInstance(Instances trainingHeader,\n    boolean setStringValues, String[] parsed, boolean sparse)", "class_method_signature": "CSVToARFFHeaderMapTask.makeInstance(Instances trainingHeader,\n    boolean setStringValues, String[] parsed, boolean sparse)", "testcase": false, "constructor": false}, {"identifier": "getDefaultValue", "parameters": "(int attIndex)", "modifiers": "public", "return": "String", "signature": "String getDefaultValue(int attIndex)", "full_signature": "public String getDefaultValue(int attIndex)", "class_method_signature": "CSVToARFFHeaderMapTask.getDefaultValue(int attIndex)", "testcase": false, "constructor": false}, {"identifier": "instanceHeaderToAttributeNameList", "parameters": "(Instances header)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> instanceHeaderToAttributeNameList(Instances header)", "full_signature": "public static List<String> instanceHeaderToAttributeNameList(Instances header)", "class_method_signature": "CSVToARFFHeaderMapTask.instanceHeaderToAttributeNameList(Instances header)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "CSVToARFFHeaderMapTask.main(String[] args)", "testcase": false, "constructor": false}], "file": "tags/distributedWekaBase-1.0.9/src/main/java/weka/distributed/CSVToARFFHeaderMapTask.java"}, "focal_method": {"identifier": "getHeader", "parameters": "()", "modifiers": "public", "return": "Instances", "body": "public Instances getHeader() {\n\n    return makeStructure();\n  }", "signature": "Instances getHeader()", "full_signature": "public Instances getHeader()", "class_method_signature": "CSVToARFFHeaderMapTask.getHeader()", "testcase": false, "constructor": false, "invocations": ["makeStructure"]}, "repository": {"repo_id": 13385254, "url": "https://github.com/svn2github/weka", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 169928, "license": "licensed"}}