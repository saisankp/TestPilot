{"test_class": {"identifier": "ScriptProgressCheckTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final File srcDir = new File(\"src/test/resources/ScriptProgressCheckTest\");", "modifier": "final", "type": "File", "declarator": "srcDir = new File(\"src/test/resources/ScriptProgressCheckTest\")", "var_name": "srcDir"}], "file": "core/src/test/java/net/adamcin/oakpal/core/ScriptProgressCheckTest.java"}, "test_case": {"identifier": "testCreateScriptCheckFactory_unregisteredEngine_byURL", "parameters": "()", "modifiers": "@Test(expected = ScriptProgressCheck.UnregisteredScriptEngineNameException.class) public", "return": "void", "body": "@Test(expected = ScriptProgressCheck.UnregisteredScriptEngineNameException.class)\n    public void testCreateScriptCheckFactory_unregisteredEngine_byURL() throws Exception {\n        ScriptProgressCheck.createScriptCheckFactory(new File(srcDir, \"bogus_script.foobar\").toURI().toURL());\n    }", "signature": "void testCreateScriptCheckFactory_unregisteredEngine_byURL()", "full_signature": "@Test(expected = ScriptProgressCheck.UnregisteredScriptEngineNameException.class) public void testCreateScriptCheckFactory_unregisteredEngine_byURL()", "class_method_signature": "ScriptProgressCheckTest.testCreateScriptCheckFactory_unregisteredEngine_byURL()", "testcase": true, "constructor": false, "invocations": ["createScriptCheckFactory", "toURL", "toURI"]}, "focal_class": {"identifier": "ScriptProgressCheck", "superclass": "", "interfaces": "implements ProgressCheck", "fields": [{"original_string": "public static final String DEFAULT_SCRIPT_ENGINE_EXTENSION = \"js\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_SCRIPT_ENGINE_EXTENSION = \"js\"", "var_name": "DEFAULT_SCRIPT_ENGINE_EXTENSION"}, {"original_string": "public static final String BINDING_SCRIPT_HELPER = \"oakpal\";", "modifier": "public static final", "type": "String", "declarator": "BINDING_SCRIPT_HELPER = \"oakpal\"", "var_name": "BINDING_SCRIPT_HELPER"}, {"original_string": "public static final String BINDING_CHECK_CONFIG = \"config\";", "modifier": "public static final", "type": "String", "declarator": "BINDING_CHECK_CONFIG = \"config\"", "var_name": "BINDING_CHECK_CONFIG"}, {"original_string": "public static final String FILENAME_INLINE_SCRIPT = \"_inlineScript_\";", "modifier": "public static final", "type": "String", "declarator": "FILENAME_INLINE_SCRIPT = \"_inlineScript_\"", "var_name": "FILENAME_INLINE_SCRIPT"}, {"original_string": "public static final String INVOKE_ON_STARTED_SCAN = \"startedScan\";", "modifier": "public static final", "type": "String", "declarator": "INVOKE_ON_STARTED_SCAN = \"startedScan\"", "var_name": "INVOKE_ON_STARTED_SCAN"}, {"original_string": "public static final String INVOKE_ON_SIMULATE_SLING = \"simulateSling\";", "modifier": "public static final", "type": "String", "declarator": "INVOKE_ON_SIMULATE_SLING = \"simulateSling\"", "var_name": "INVOKE_ON_SIMULATE_SLING"}, {"original_string": "public static final String INVOKE_ON_IDENTIFY_PACKAGE = \"identifyPackage\";", "modifier": "public static final", "type": "String", "declarator": "INVOKE_ON_IDENTIFY_PACKAGE = \"identifyPackage\"", "var_name": "INVOKE_ON_IDENTIFY_PACKAGE"}, {"original_string": "public static final String INVOKE_ON_READ_MANIFEST = \"readManifest\";", "modifier": "public static final", "type": "String", "declarator": "INVOKE_ON_READ_MANIFEST = \"readManifest\"", "var_name": "INVOKE_ON_READ_MANIFEST"}, {"original_string": "public static final String INVOKE_ON_BEFORE_EXTRACT = \"beforeExtract\";", "modifier": "public static final", "type": "String", "declarator": "INVOKE_ON_BEFORE_EXTRACT = \"beforeExtract\"", "var_name": "INVOKE_ON_BEFORE_EXTRACT"}, {"original_string": "public static final String INVOKE_ON_IMPORTED_PATH = \"importedPath\";", "modifier": "public static final", "type": "String", "declarator": "INVOKE_ON_IMPORTED_PATH = \"importedPath\"", "var_name": "INVOKE_ON_IMPORTED_PATH"}, {"original_string": "public static final String INVOKE_ON_DELETED_PATH = \"deletedPath\";", "modifier": "public static final", "type": "String", "declarator": "INVOKE_ON_DELETED_PATH = \"deletedPath\"", "var_name": "INVOKE_ON_DELETED_PATH"}, {"original_string": "public static final String INVOKE_ON_AFTER_EXTRACT = \"afterExtract\";", "modifier": "public static final", "type": "String", "declarator": "INVOKE_ON_AFTER_EXTRACT = \"afterExtract\"", "var_name": "INVOKE_ON_AFTER_EXTRACT"}, {"original_string": "public static final String INVOKE_ON_IDENTIFY_SUBPACKAGE = \"identifySubpackage\";", "modifier": "public static final", "type": "String", "declarator": "INVOKE_ON_IDENTIFY_SUBPACKAGE = \"identifySubpackage\"", "var_name": "INVOKE_ON_IDENTIFY_SUBPACKAGE"}, {"original_string": "public static final String INVOKE_ON_BEFORE_SLING_INSTALL = \"beforeSlingInstall\";", "modifier": "public static final", "type": "String", "declarator": "INVOKE_ON_BEFORE_SLING_INSTALL = \"beforeSlingInstall\"", "var_name": "INVOKE_ON_BEFORE_SLING_INSTALL"}, {"original_string": "public static final String INVOKE_ON_IDENTIFY_EMBEDDED_PACKAGE = \"identifyEmbeddedPackage\";", "modifier": "public static final", "type": "String", "declarator": "INVOKE_ON_IDENTIFY_EMBEDDED_PACKAGE = \"identifyEmbeddedPackage\"", "var_name": "INVOKE_ON_IDENTIFY_EMBEDDED_PACKAGE"}, {"original_string": "public static final String INVOKE_ON_APPLIED_REPO_INIT_SCRIPTS = \"appliedRepoInitScripts\";", "modifier": "public static final", "type": "String", "declarator": "INVOKE_ON_APPLIED_REPO_INIT_SCRIPTS = \"appliedRepoInitScripts\"", "var_name": "INVOKE_ON_APPLIED_REPO_INIT_SCRIPTS"}, {"original_string": "public static final String INVOKE_ON_AFTER_SCAN_PACKAGE = \"afterScanPackage\";", "modifier": "public static final", "type": "String", "declarator": "INVOKE_ON_AFTER_SCAN_PACKAGE = \"afterScanPackage\"", "var_name": "INVOKE_ON_AFTER_SCAN_PACKAGE"}, {"original_string": "public static final String INVOKE_ON_FINISHED_SCAN = \"finishedScan\";", "modifier": "public static final", "type": "String", "declarator": "INVOKE_ON_FINISHED_SCAN = \"finishedScan\"", "var_name": "INVOKE_ON_FINISHED_SCAN"}, {"original_string": "public static final String INVOKE_GET_CHECK_NAME = \"getCheckName\";", "modifier": "public static final", "type": "String", "declarator": "INVOKE_GET_CHECK_NAME = \"getCheckName\"", "var_name": "INVOKE_GET_CHECK_NAME"}, {"original_string": "private final Invocable script;", "modifier": "private final", "type": "Invocable", "declarator": "script", "var_name": "script"}, {"original_string": "private final ScriptHelper helper;", "modifier": "private final", "type": "ScriptHelper", "declarator": "helper", "var_name": "helper"}, {"original_string": "private final URL scriptUrl;", "modifier": "private final", "type": "URL", "declarator": "scriptUrl", "var_name": "scriptUrl"}, {"original_string": "private final Set<String> handlerMissCache = new HashSet<>();", "modifier": "private final", "type": "Set<String>", "declarator": "handlerMissCache = new HashSet<>()", "var_name": "handlerMissCache"}], "methods": [{"identifier": "ScriptProgressCheck", "parameters": "(final @NotNull Invocable script,\n                        final @NotNull ScriptHelper helper,\n                        final @Nullable URL scriptUrl)", "modifiers": "", "return": "", "signature": " ScriptProgressCheck(final @NotNull Invocable script,\n                        final @NotNull ScriptHelper helper,\n                        final @Nullable URL scriptUrl)", "full_signature": "  ScriptProgressCheck(final @NotNull Invocable script,\n                        final @NotNull ScriptHelper helper,\n                        final @Nullable URL scriptUrl)", "class_method_signature": "ScriptProgressCheck.ScriptProgressCheck(final @NotNull Invocable script,\n                        final @NotNull ScriptHelper helper,\n                        final @Nullable URL scriptUrl)", "testcase": false, "constructor": true}, {"identifier": "getResourceBundleBaseName", "parameters": "()", "modifiers": "@Override public @Nullable", "return": "String", "signature": "String getResourceBundleBaseName()", "full_signature": "@Override public @Nullable String getResourceBundleBaseName()", "class_method_signature": "ScriptProgressCheck.getResourceBundleBaseName()", "testcase": false, "constructor": false}, {"identifier": "setResourceBundle", "parameters": "(final ResourceBundle resourceBundle)", "modifiers": "@Override public", "return": "void", "signature": "void setResourceBundle(final ResourceBundle resourceBundle)", "full_signature": "@Override public void setResourceBundle(final ResourceBundle resourceBundle)", "class_method_signature": "ScriptProgressCheck.setResourceBundle(final ResourceBundle resourceBundle)", "testcase": false, "constructor": false}, {"identifier": "getHelper", "parameters": "()", "modifiers": "", "return": "ScriptHelper", "signature": "ScriptHelper getHelper()", "full_signature": " ScriptHelper getHelper()", "class_method_signature": "ScriptProgressCheck.getHelper()", "testcase": false, "constructor": false}, {"identifier": "getScriptPath", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getScriptPath()", "full_signature": "private String getScriptPath()", "class_method_signature": "ScriptProgressCheck.getScriptPath()", "testcase": false, "constructor": false}, {"identifier": "getFilename", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getFilename()", "full_signature": "private String getFilename()", "class_method_signature": "ScriptProgressCheck.getFilename()", "testcase": false, "constructor": false}, {"identifier": "getCheckName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCheckName()", "full_signature": "@Override public String getCheckName()", "class_method_signature": "ScriptProgressCheck.getCheckName()", "testcase": false, "constructor": false}, {"identifier": "guardHandler", "parameters": "(final String methodName, final EventHandlerBody body)", "modifiers": "", "return": "void", "signature": "void guardHandler(final String methodName, final EventHandlerBody body)", "full_signature": " void guardHandler(final String methodName, final EventHandlerBody body)", "class_method_signature": "ScriptProgressCheck.guardHandler(final String methodName, final EventHandlerBody body)", "testcase": false, "constructor": false}, {"identifier": "guardSessionHandler", "parameters": "(final String methodName, final EventHandlerBody body)", "modifiers": "", "return": "void", "signature": "void guardSessionHandler(final String methodName, final EventHandlerBody body)", "full_signature": " void guardSessionHandler(final String methodName, final EventHandlerBody body)", "class_method_signature": "ScriptProgressCheck.guardSessionHandler(final String methodName, final EventHandlerBody body)", "testcase": false, "constructor": false}, {"identifier": "simulateSling", "parameters": "(final SlingSimulator slingSimulator, final Set<String> runModes)", "modifiers": "@Override public", "return": "void", "signature": "void simulateSling(final SlingSimulator slingSimulator, final Set<String> runModes)", "full_signature": "@Override public void simulateSling(final SlingSimulator slingSimulator, final Set<String> runModes)", "class_method_signature": "ScriptProgressCheck.simulateSling(final SlingSimulator slingSimulator, final Set<String> runModes)", "testcase": false, "constructor": false}, {"identifier": "startedScan", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void startedScan()", "full_signature": "@Override public void startedScan()", "class_method_signature": "ScriptProgressCheck.startedScan()", "testcase": false, "constructor": false}, {"identifier": "identifyPackage", "parameters": "(final PackageId packageId, final File file)", "modifiers": "@Override public", "return": "void", "signature": "void identifyPackage(final PackageId packageId, final File file)", "full_signature": "@Override public void identifyPackage(final PackageId packageId, final File file)", "class_method_signature": "ScriptProgressCheck.identifyPackage(final PackageId packageId, final File file)", "testcase": false, "constructor": false}, {"identifier": "readManifest", "parameters": "(final PackageId packageId, final Manifest manifest)", "modifiers": "@Override public", "return": "void", "signature": "void readManifest(final PackageId packageId, final Manifest manifest)", "full_signature": "@Override public void readManifest(final PackageId packageId, final Manifest manifest)", "class_method_signature": "ScriptProgressCheck.readManifest(final PackageId packageId, final Manifest manifest)", "testcase": false, "constructor": false}, {"identifier": "beforeExtract", "parameters": "(final PackageId packageId, final Session inspectSession,\n                              final PackageProperties packageProperties, final MetaInf metaInf,\n                              final List<PackageId> subpackages)", "modifiers": "@Override public", "return": "void", "signature": "void beforeExtract(final PackageId packageId, final Session inspectSession,\n                              final PackageProperties packageProperties, final MetaInf metaInf,\n                              final List<PackageId> subpackages)", "full_signature": "@Override public void beforeExtract(final PackageId packageId, final Session inspectSession,\n                              final PackageProperties packageProperties, final MetaInf metaInf,\n                              final List<PackageId> subpackages)", "class_method_signature": "ScriptProgressCheck.beforeExtract(final PackageId packageId, final Session inspectSession,\n                              final PackageProperties packageProperties, final MetaInf metaInf,\n                              final List<PackageId> subpackages)", "testcase": false, "constructor": false}, {"identifier": "importedPath", "parameters": "(final PackageId packageId, final String path, final Node node,\n                             final PathAction action)", "modifiers": "@Override public", "return": "void", "signature": "void importedPath(final PackageId packageId, final String path, final Node node,\n                             final PathAction action)", "full_signature": "@Override public void importedPath(final PackageId packageId, final String path, final Node node,\n                             final PathAction action)", "class_method_signature": "ScriptProgressCheck.importedPath(final PackageId packageId, final String path, final Node node,\n                             final PathAction action)", "testcase": false, "constructor": false}, {"identifier": "deletedPath", "parameters": "(final PackageId packageId, final String path, final Session inspectSession)", "modifiers": "@Override public", "return": "void", "signature": "void deletedPath(final PackageId packageId, final String path, final Session inspectSession)", "full_signature": "@Override public void deletedPath(final PackageId packageId, final String path, final Session inspectSession)", "class_method_signature": "ScriptProgressCheck.deletedPath(final PackageId packageId, final String path, final Session inspectSession)", "testcase": false, "constructor": false}, {"identifier": "afterExtract", "parameters": "(final PackageId packageId, final Session inspectSession)", "modifiers": "@Override public", "return": "void", "signature": "void afterExtract(final PackageId packageId, final Session inspectSession)", "full_signature": "@Override public void afterExtract(final PackageId packageId, final Session inspectSession)", "class_method_signature": "ScriptProgressCheck.afterExtract(final PackageId packageId, final Session inspectSession)", "testcase": false, "constructor": false}, {"identifier": "identifySubpackage", "parameters": "(final PackageId packageId, final PackageId parentId)", "modifiers": "@Override public", "return": "void", "signature": "void identifySubpackage(final PackageId packageId, final PackageId parentId)", "full_signature": "@Override public void identifySubpackage(final PackageId packageId, final PackageId parentId)", "class_method_signature": "ScriptProgressCheck.identifySubpackage(final PackageId packageId, final PackageId parentId)", "testcase": false, "constructor": false}, {"identifier": "beforeSlingInstall", "parameters": "(final PackageId lastPackage,\n                                   final SlingInstallable slingInstallable,\n                                   final Session inspectSession)", "modifiers": "@Override public", "return": "void", "signature": "void beforeSlingInstall(final PackageId lastPackage,\n                                   final SlingInstallable slingInstallable,\n                                   final Session inspectSession)", "full_signature": "@Override public void beforeSlingInstall(final PackageId lastPackage,\n                                   final SlingInstallable slingInstallable,\n                                   final Session inspectSession)", "class_method_signature": "ScriptProgressCheck.beforeSlingInstall(final PackageId lastPackage,\n                                   final SlingInstallable slingInstallable,\n                                   final Session inspectSession)", "testcase": false, "constructor": false}, {"identifier": "identifyEmbeddedPackage", "parameters": "(final PackageId packageId,\n                                        final PackageId parentId,\n                                        final EmbeddedPackageInstallable slingInstallable)", "modifiers": "@Override public", "return": "void", "signature": "void identifyEmbeddedPackage(final PackageId packageId,\n                                        final PackageId parentId,\n                                        final EmbeddedPackageInstallable slingInstallable)", "full_signature": "@Override public void identifyEmbeddedPackage(final PackageId packageId,\n                                        final PackageId parentId,\n                                        final EmbeddedPackageInstallable slingInstallable)", "class_method_signature": "ScriptProgressCheck.identifyEmbeddedPackage(final PackageId packageId,\n                                        final PackageId parentId,\n                                        final EmbeddedPackageInstallable slingInstallable)", "testcase": false, "constructor": false}, {"identifier": "appliedRepoInitScripts", "parameters": "(final PackageId lastPackage,\n                                       final List<String> scripts,\n                                       final SlingInstallable slingInstallable,\n                                       final Session inspectSession)", "modifiers": "@Override public", "return": "void", "signature": "void appliedRepoInitScripts(final PackageId lastPackage,\n                                       final List<String> scripts,\n                                       final SlingInstallable slingInstallable,\n                                       final Session inspectSession)", "full_signature": "@Override public void appliedRepoInitScripts(final PackageId lastPackage,\n                                       final List<String> scripts,\n                                       final SlingInstallable slingInstallable,\n                                       final Session inspectSession)", "class_method_signature": "ScriptProgressCheck.appliedRepoInitScripts(final PackageId lastPackage,\n                                       final List<String> scripts,\n                                       final SlingInstallable slingInstallable,\n                                       final Session inspectSession)", "testcase": false, "constructor": false}, {"identifier": "afterScanPackage", "parameters": "(final PackageId scanPackageId, final Session inspectSession)", "modifiers": "@Override public", "return": "void", "signature": "void afterScanPackage(final PackageId scanPackageId, final Session inspectSession)", "full_signature": "@Override public void afterScanPackage(final PackageId scanPackageId, final Session inspectSession)", "class_method_signature": "ScriptProgressCheck.afterScanPackage(final PackageId scanPackageId, final Session inspectSession)", "testcase": false, "constructor": false}, {"identifier": "finishedScan", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void finishedScan()", "full_signature": "@Override public void finishedScan()", "class_method_signature": "ScriptProgressCheck.finishedScan()", "testcase": false, "constructor": false}, {"identifier": "getReportedViolations", "parameters": "()", "modifiers": "@Override public final", "return": "Collection<Violation>", "signature": "Collection<Violation> getReportedViolations()", "full_signature": "@Override public final Collection<Violation> getReportedViolations()", "class_method_signature": "ScriptProgressCheck.getReportedViolations()", "testcase": false, "constructor": false}, {"identifier": "contextWithBindings", "parameters": "(final Bindings bindings)", "modifiers": "private static", "return": "ScriptContext", "signature": "ScriptContext contextWithBindings(final Bindings bindings)", "full_signature": "private static ScriptContext contextWithBindings(final Bindings bindings)", "class_method_signature": "ScriptProgressCheck.contextWithBindings(final Bindings bindings)", "testcase": false, "constructor": false}, {"identifier": "createScriptCheckFactory", "parameters": "(final @NotNull URL scriptUrl)", "modifiers": "public static", "return": "ProgressCheckFactory", "signature": "ProgressCheckFactory createScriptCheckFactory(final @NotNull URL scriptUrl)", "full_signature": "public static ProgressCheckFactory createScriptCheckFactory(final @NotNull URL scriptUrl)", "class_method_signature": "ScriptProgressCheck.createScriptCheckFactory(final @NotNull URL scriptUrl)", "testcase": false, "constructor": false}, {"identifier": "createClassLoaderScriptCheckFactory", "parameters": "(final @NotNull URL scriptUrl,\n                                                                    final @Nullable ClassLoader classLoader)", "modifiers": "static", "return": "ProgressCheckFactory", "signature": "ProgressCheckFactory createClassLoaderScriptCheckFactory(final @NotNull URL scriptUrl,\n                                                                    final @Nullable ClassLoader classLoader)", "full_signature": "static ProgressCheckFactory createClassLoaderScriptCheckFactory(final @NotNull URL scriptUrl,\n                                                                    final @Nullable ClassLoader classLoader)", "class_method_signature": "ScriptProgressCheck.createClassLoaderScriptCheckFactory(final @NotNull URL scriptUrl,\n                                                                    final @Nullable ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "createScriptCheckFactory", "parameters": "(final @NotNull String engineName,\n                                                                final @NotNull URL scriptUrl)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public static", "return": "ProgressCheckFactory", "signature": "ProgressCheckFactory createScriptCheckFactory(final @NotNull String engineName,\n                                                                final @NotNull URL scriptUrl)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public static ProgressCheckFactory createScriptCheckFactory(final @NotNull String engineName,\n                                                                final @NotNull URL scriptUrl)", "class_method_signature": "ScriptProgressCheck.createScriptCheckFactory(final @NotNull String engineName,\n                                                                final @NotNull URL scriptUrl)", "testcase": false, "constructor": false}, {"identifier": "createClassLoaderScriptCheckFactory", "parameters": "(final @NotNull String engineName,\n                                                                    final @NotNull URL scriptUrl,\n                                                                    final @Nullable ClassLoader classLoader)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") static", "return": "ProgressCheckFactory", "signature": "ProgressCheckFactory createClassLoaderScriptCheckFactory(final @NotNull String engineName,\n                                                                    final @NotNull URL scriptUrl,\n                                                                    final @Nullable ClassLoader classLoader)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") static ProgressCheckFactory createClassLoaderScriptCheckFactory(final @NotNull String engineName,\n                                                                    final @NotNull URL scriptUrl,\n                                                                    final @Nullable ClassLoader classLoader)", "class_method_signature": "ScriptProgressCheck.createClassLoaderScriptCheckFactory(final @NotNull String engineName,\n                                                                    final @NotNull URL scriptUrl,\n                                                                    final @Nullable ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "createScriptCheckFactory", "parameters": "(final @NotNull ScriptEngine engine,\n                                                                final @NotNull URL scriptUrl)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public static", "return": "ProgressCheckFactory", "signature": "ProgressCheckFactory createScriptCheckFactory(final @NotNull ScriptEngine engine,\n                                                                final @NotNull URL scriptUrl)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public static ProgressCheckFactory createScriptCheckFactory(final @NotNull ScriptEngine engine,\n                                                                final @NotNull URL scriptUrl)", "class_method_signature": "ScriptProgressCheck.createScriptCheckFactory(final @NotNull ScriptEngine engine,\n                                                                final @NotNull URL scriptUrl)", "testcase": false, "constructor": false}, {"identifier": "createInlineScriptCheckFactory", "parameters": "(final @NotNull String inlineScript,\n                                                                      final @Nullable String inlineEngine)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public static", "return": "ProgressCheckFactory", "signature": "ProgressCheckFactory createInlineScriptCheckFactory(final @NotNull String inlineScript,\n                                                                      final @Nullable String inlineEngine)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public static ProgressCheckFactory createInlineScriptCheckFactory(final @NotNull String inlineScript,\n                                                                      final @Nullable String inlineEngine)", "class_method_signature": "ScriptProgressCheck.createInlineScriptCheckFactory(final @NotNull String inlineScript,\n                                                                      final @Nullable String inlineEngine)", "testcase": false, "constructor": false}, {"identifier": "createClassLoaderInlineScriptCheckFactory", "parameters": "(final @NotNull String inlineScript,\n                                                                          final @Nullable String inlineEngine,\n                                                                          final @Nullable ClassLoader classLoader)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") static", "return": "ProgressCheckFactory", "signature": "ProgressCheckFactory createClassLoaderInlineScriptCheckFactory(final @NotNull String inlineScript,\n                                                                          final @Nullable String inlineEngine,\n                                                                          final @Nullable ClassLoader classLoader)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") static ProgressCheckFactory createClassLoaderInlineScriptCheckFactory(final @NotNull String inlineScript,\n                                                                          final @Nullable String inlineEngine,\n                                                                          final @Nullable ClassLoader classLoader)", "class_method_signature": "ScriptProgressCheck.createClassLoaderInlineScriptCheckFactory(final @NotNull String inlineScript,\n                                                                          final @Nullable String inlineEngine,\n                                                                          final @Nullable ClassLoader classLoader)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/ScriptProgressCheck.java"}, "focal_method": {"identifier": "createScriptCheckFactory", "parameters": "(final @NotNull URL scriptUrl)", "modifiers": "public static", "return": "ProgressCheckFactory", "body": "public static ProgressCheckFactory createScriptCheckFactory(final @NotNull URL scriptUrl) throws Exception {\n        return createClassLoaderScriptCheckFactory(scriptUrl, null);\n    }", "signature": "ProgressCheckFactory createScriptCheckFactory(final @NotNull URL scriptUrl)", "full_signature": "public static ProgressCheckFactory createScriptCheckFactory(final @NotNull URL scriptUrl)", "class_method_signature": "ScriptProgressCheck.createScriptCheckFactory(final @NotNull URL scriptUrl)", "testcase": false, "constructor": false, "invocations": ["createClassLoaderScriptCheckFactory"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}