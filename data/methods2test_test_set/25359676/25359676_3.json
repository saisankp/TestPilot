{"test_class": {"identifier": "ServiceRegistryImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock private DataObjectService dataObjectService;", "modifier": "@Mock private", "type": "DataObjectService", "declarator": "dataObjectService", "var_name": "dataObjectService"}, {"original_string": "@InjectMocks private ServiceRegistryImpl serviceRegistryImpl = new ServiceRegistryImpl();", "modifier": "@InjectMocks private", "type": "ServiceRegistryImpl", "declarator": "serviceRegistryImpl = new ServiceRegistryImpl()", "var_name": "serviceRegistryImpl"}, {"original_string": "private ServiceRegistry serviceRegistry = serviceRegistryImpl;", "modifier": "private", "type": "ServiceRegistry", "declarator": "serviceRegistry = serviceRegistryImpl", "var_name": "serviceRegistry"}, {"original_string": "private static int ID_VALUE = 0;", "modifier": "private static", "type": "int", "declarator": "ID_VALUE = 0", "var_name": "ID_VALUE"}], "file": "rice-middleware/ksb/server-impl/src/test/java/org/kuali/rice/ksb/impl/registry/ServiceRegistryImplTest.java"}, "test_case": {"identifier": "testGetAllServicesForInstance_Blank", "parameters": "()", "modifiers": "@Test(expected = RiceIllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = RiceIllegalArgumentException.class)\n    public void testGetAllServicesForInstance_Blank() {\n        serviceRegistry.getAllServicesForInstance(\" \");\n    }", "signature": "void testGetAllServicesForInstance_Blank()", "full_signature": "@Test(expected = RiceIllegalArgumentException.class) public void testGetAllServicesForInstance_Blank()", "class_method_signature": "ServiceRegistryImplTest.testGetAllServicesForInstance_Blank()", "testcase": true, "constructor": false, "invocations": ["getAllServicesForInstance"]}, "focal_class": {"identifier": "ServiceRegistryImpl", "superclass": "", "interfaces": "implements ServiceRegistry", "fields": [{"original_string": "private DataObjectService dataObjectService;", "modifier": "private", "type": "DataObjectService", "declarator": "dataObjectService", "var_name": "dataObjectService"}], "methods": [{"identifier": "getOnlineServicesByName", "parameters": "(QName serviceName)", "modifiers": "@Override public", "return": "List<ServiceInfo>", "signature": "List<ServiceInfo> getOnlineServicesByName(QName serviceName)", "full_signature": "@Override public List<ServiceInfo> getOnlineServicesByName(QName serviceName)", "class_method_signature": "ServiceRegistryImpl.getOnlineServicesByName(QName serviceName)", "testcase": false, "constructor": false}, {"identifier": "getAllOnlineServices", "parameters": "()", "modifiers": "@Override public", "return": "List<ServiceInfo>", "signature": "List<ServiceInfo> getAllOnlineServices()", "full_signature": "@Override public List<ServiceInfo> getAllOnlineServices()", "class_method_signature": "ServiceRegistryImpl.getAllOnlineServices()", "testcase": false, "constructor": false}, {"identifier": "getAllServices", "parameters": "()", "modifiers": "@Override public", "return": "List<ServiceInfo>", "signature": "List<ServiceInfo> getAllServices()", "full_signature": "@Override public List<ServiceInfo> getAllServices()", "class_method_signature": "ServiceRegistryImpl.getAllServices()", "testcase": false, "constructor": false}, {"identifier": "getAllServicesForInstance", "parameters": "(String instanceId)", "modifiers": "@Override public", "return": "List<ServiceInfo>", "signature": "List<ServiceInfo> getAllServicesForInstance(String instanceId)", "full_signature": "@Override public List<ServiceInfo> getAllServicesForInstance(String instanceId)", "class_method_signature": "ServiceRegistryImpl.getAllServicesForInstance(String instanceId)", "testcase": false, "constructor": false}, {"identifier": "getAllServicesForApplication", "parameters": "(String applicationId)", "modifiers": "@Override public", "return": "List<ServiceInfo>", "signature": "List<ServiceInfo> getAllServicesForApplication(String applicationId)", "full_signature": "@Override public List<ServiceInfo> getAllServicesForApplication(String applicationId)", "class_method_signature": "ServiceRegistryImpl.getAllServicesForApplication(String applicationId)", "testcase": false, "constructor": false}, {"identifier": "getServiceDescriptor", "parameters": "(String serviceDescriptorId)", "modifiers": "@Override public", "return": "ServiceDescriptor", "signature": "ServiceDescriptor getServiceDescriptor(String serviceDescriptorId)", "full_signature": "@Override public ServiceDescriptor getServiceDescriptor(String serviceDescriptorId)", "class_method_signature": "ServiceRegistryImpl.getServiceDescriptor(String serviceDescriptorId)", "testcase": false, "constructor": false}, {"identifier": "getServiceDescriptors", "parameters": "(List<String> serviceDescriptorIds)", "modifiers": "@Override public", "return": "List<ServiceDescriptor>", "signature": "List<ServiceDescriptor> getServiceDescriptors(List<String> serviceDescriptorIds)", "full_signature": "@Override public List<ServiceDescriptor> getServiceDescriptors(List<String> serviceDescriptorIds)", "class_method_signature": "ServiceRegistryImpl.getServiceDescriptors(List<String> serviceDescriptorIds)", "testcase": false, "constructor": false}, {"identifier": "publishService", "parameters": "(ServiceEndpoint serviceEndpoint)", "modifiers": "@Override public", "return": "ServiceEndpoint", "signature": "ServiceEndpoint publishService(ServiceEndpoint serviceEndpoint)", "full_signature": "@Override public ServiceEndpoint publishService(ServiceEndpoint serviceEndpoint)", "class_method_signature": "ServiceRegistryImpl.publishService(ServiceEndpoint serviceEndpoint)", "testcase": false, "constructor": false}, {"identifier": "publishServices", "parameters": "(List<ServiceEndpoint> serviceEndpoints)", "modifiers": "@Override public", "return": "List<ServiceEndpoint>", "signature": "List<ServiceEndpoint> publishServices(List<ServiceEndpoint> serviceEndpoints)", "full_signature": "@Override public List<ServiceEndpoint> publishServices(List<ServiceEndpoint> serviceEndpoints)", "class_method_signature": "ServiceRegistryImpl.publishServices(List<ServiceEndpoint> serviceEndpoints)", "testcase": false, "constructor": false}, {"identifier": "removeServiceEndpoint", "parameters": "(String serviceId)", "modifiers": "@Override public", "return": "ServiceEndpoint", "signature": "ServiceEndpoint removeServiceEndpoint(String serviceId)", "full_signature": "@Override public ServiceEndpoint removeServiceEndpoint(String serviceId)", "class_method_signature": "ServiceRegistryImpl.removeServiceEndpoint(String serviceId)", "testcase": false, "constructor": false}, {"identifier": "removeServiceEndpoints", "parameters": "(List<String> serviceIds)", "modifiers": "@Override public", "return": "List<ServiceEndpoint>", "signature": "List<ServiceEndpoint> removeServiceEndpoints(List<String> serviceIds)", "full_signature": "@Override public List<ServiceEndpoint> removeServiceEndpoints(List<String> serviceIds)", "class_method_signature": "ServiceRegistryImpl.removeServiceEndpoints(List<String> serviceIds)", "testcase": false, "constructor": false}, {"identifier": "removeAndPublish", "parameters": "(List<String> removeServiceIds,\n\t\t\tList<ServiceEndpoint> publishServiceEndpoints)", "modifiers": "@Override public", "return": "RemoveAndPublishResult", "signature": "RemoveAndPublishResult removeAndPublish(List<String> removeServiceIds,\n\t\t\tList<ServiceEndpoint> publishServiceEndpoints)", "full_signature": "@Override public RemoveAndPublishResult removeAndPublish(List<String> removeServiceIds,\n\t\t\tList<ServiceEndpoint> publishServiceEndpoints)", "class_method_signature": "ServiceRegistryImpl.removeAndPublish(List<String> removeServiceIds,\n\t\t\tList<ServiceEndpoint> publishServiceEndpoints)", "testcase": false, "constructor": false}, {"identifier": "updateStatus", "parameters": "(String serviceId, ServiceEndpointStatus status)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateStatus(String serviceId, ServiceEndpointStatus status)", "full_signature": "@Override public boolean updateStatus(String serviceId, ServiceEndpointStatus status)", "class_method_signature": "ServiceRegistryImpl.updateStatus(String serviceId, ServiceEndpointStatus status)", "testcase": false, "constructor": false}, {"identifier": "updateStatuses", "parameters": "(List<String> serviceIds, ServiceEndpointStatus status)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> updateStatuses(List<String> serviceIds, ServiceEndpointStatus status)", "full_signature": "@Override public List<String> updateStatuses(List<String> serviceIds, ServiceEndpointStatus status)", "class_method_signature": "ServiceRegistryImpl.updateStatuses(List<String> serviceIds, ServiceEndpointStatus status)", "testcase": false, "constructor": false}, {"identifier": "takeInstanceOffline", "parameters": "(String instanceId)", "modifiers": "@Override public", "return": "void", "signature": "void takeInstanceOffline(String instanceId)", "full_signature": "@Override public void takeInstanceOffline(String instanceId)", "class_method_signature": "ServiceRegistryImpl.takeInstanceOffline(String instanceId)", "testcase": false, "constructor": false}, {"identifier": "convertServiceInfoBoList", "parameters": "(List<ServiceInfoBo> serviceInfoBos)", "modifiers": "private", "return": "List<ServiceInfo>", "signature": "List<ServiceInfo> convertServiceInfoBoList(List<ServiceInfoBo> serviceInfoBos)", "full_signature": "private List<ServiceInfo> convertServiceInfoBoList(List<ServiceInfoBo> serviceInfoBos)", "class_method_signature": "ServiceRegistryImpl.convertServiceInfoBoList(List<ServiceInfoBo> serviceInfoBos)", "testcase": false, "constructor": false}, {"identifier": "getDataObjectService", "parameters": "()", "modifiers": "public", "return": "DataObjectService", "signature": "DataObjectService getDataObjectService()", "full_signature": "public DataObjectService getDataObjectService()", "class_method_signature": "ServiceRegistryImpl.getDataObjectService()", "testcase": false, "constructor": false}, {"identifier": "setDataObjectService", "parameters": "(DataObjectService dataObjectService)", "modifiers": "@Required public", "return": "void", "signature": "void setDataObjectService(DataObjectService dataObjectService)", "full_signature": "@Required public void setDataObjectService(DataObjectService dataObjectService)", "class_method_signature": "ServiceRegistryImpl.setDataObjectService(DataObjectService dataObjectService)", "testcase": false, "constructor": false}], "file": "rice-middleware/ksb/server-impl/src/main/java/org/kuali/rice/ksb/impl/registry/ServiceRegistryImpl.java"}, "focal_method": {"identifier": "getAllServicesForInstance", "parameters": "(String instanceId)", "modifiers": "@Override public", "return": "List<ServiceInfo>", "body": "@Override\n\tpublic List<ServiceInfo> getAllServicesForInstance(String instanceId) throws RiceIllegalArgumentException {\n\t\tif (StringUtils.isBlank(instanceId)) {\n\t\t\tthrow new RiceIllegalArgumentException(\"instanceId cannot be blank\");\n\t\t}\n        QueryByCriteria.Builder builder = QueryByCriteria.Builder.create();\n        builder.setPredicates(equal(\"instanceId\",instanceId));\n        List<ServiceInfoBo> serviceInfoBos = getDataObjectService().findMatching(\n                ServiceInfoBo.class,builder.build()).getResults();\n\t\treturn convertServiceInfoBoList(serviceInfoBos);\n\t}", "signature": "List<ServiceInfo> getAllServicesForInstance(String instanceId)", "full_signature": "@Override public List<ServiceInfo> getAllServicesForInstance(String instanceId)", "class_method_signature": "ServiceRegistryImpl.getAllServicesForInstance(String instanceId)", "testcase": false, "constructor": false, "invocations": ["isBlank", "create", "setPredicates", "equal", "getResults", "findMatching", "getDataObjectService", "build", "convertServiceInfoBoList"]}, "repository": {"repo_id": 25359676, "url": "https://github.com/kuali/rice", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 16, "size": 289156, "license": "licensed"}}