{"test_class": {"identifier": "DomainServiceExceptionMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DomainServiceExceptionMapper mapper;", "modifier": "private", "type": "DomainServiceExceptionMapper", "declarator": "mapper", "var_name": "mapper"}], "file": "service/src/test/java/org/coner/core/resource/DomainServiceExceptionMapperTest.java"}, "test_case": {"identifier": "itShouldMapEntityNotFoundException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void itShouldMapEntityNotFoundException() {\n        EntityNotFoundException entityNotFoundException = new EntityNotFoundException(\n                Event.class,\n                TestConstants.EVENT_ID\n        );\n\n        Response actual = mapper.toResponse(entityNotFoundException);\n\n        assertThat(actual.getStatus()).isEqualTo(HttpStatus.NOT_FOUND_404);\n    }", "signature": "void itShouldMapEntityNotFoundException()", "full_signature": "@Test public void itShouldMapEntityNotFoundException()", "class_method_signature": "DomainServiceExceptionMapperTest.itShouldMapEntityNotFoundException()", "testcase": true, "constructor": false, "invocations": ["toResponse", "isEqualTo", "assertThat", "getStatus"]}, "focal_class": {"identifier": "DomainServiceExceptionMapper", "superclass": "", "interfaces": "implements ExceptionMapper<DomainServiceException>", "fields": [{"original_string": "private final Map<Class<? extends DomainServiceException>, Integer> status;", "modifier": "private final", "type": "Map<Class<? extends DomainServiceException>, Integer>", "declarator": "status", "var_name": "status"}], "methods": [{"identifier": "DomainServiceExceptionMapper", "parameters": "()", "modifiers": "@Inject public", "return": "", "signature": " DomainServiceExceptionMapper()", "full_signature": "@Inject public  DomainServiceExceptionMapper()", "class_method_signature": "DomainServiceExceptionMapper.DomainServiceExceptionMapper()", "testcase": false, "constructor": true}, {"identifier": "toResponse", "parameters": "(DomainServiceException exception)", "modifiers": "@Override public", "return": "Response", "signature": "Response toResponse(DomainServiceException exception)", "full_signature": "@Override public Response toResponse(DomainServiceException exception)", "class_method_signature": "DomainServiceExceptionMapper.toResponse(DomainServiceException exception)", "testcase": false, "constructor": false}], "file": "service/src/main/java/org/coner/core/resource/DomainServiceExceptionMapper.java"}, "focal_method": {"identifier": "toResponse", "parameters": "(DomainServiceException exception)", "modifiers": "@Override public", "return": "Response", "body": "@Override\n    public Response toResponse(DomainServiceException exception) {\n        final int status = this.status.get(exception.getClass());\n        return Response.status(status)\n                .type(MediaType.APPLICATION_JSON_TYPE)\n                .entity(new ErrorMessage(status, exception.getMessage()))\n                .build();\n    }", "signature": "Response toResponse(DomainServiceException exception)", "full_signature": "@Override public Response toResponse(DomainServiceException exception)", "class_method_signature": "DomainServiceExceptionMapper.toResponse(DomainServiceException exception)", "testcase": false, "constructor": false, "invocations": ["get", "getClass", "build", "entity", "type", "status", "getMessage"]}, "repository": {"repo_id": 28649714, "url": "https://github.com/caeos/coner-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 1027, "license": "licensed"}}