{"test_class": {"identifier": "DocumentDownloadLinkGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEMPLATE_ID = \"myTemplateId\";", "modifier": "private static final", "type": "String", "declarator": "TEMPLATE_ID = \"myTemplateId\"", "var_name": "TEMPLATE_ID"}, {"original_string": "private static final String DOC_ID = \"myDocId\";", "modifier": "private static final", "type": "String", "declarator": "DOC_ID = \"myDocId\"", "var_name": "DOC_ID"}], "file": "jbpm-document/src/test/java/org/jbpm/document/service/impl/util/DocumentDownloadLinkGeneratorTest.java"}, "test_case": {"identifier": "testLinkGenerationFailure", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLinkGenerationFailure() {\n        Assertions.assertThatThrownBy(() -> DocumentDownloadLinkGenerator.generateDownloadLink(null,\n                                                                                               DOC_ID))\n                .isInstanceOf(IllegalArgumentException.class)\n                .hasMessageContaining(\"ServerTemplateId cannot be null\");\n\n        Assertions.assertThatThrownBy(() -> DocumentDownloadLinkGenerator.generateDownloadLink(TEMPLATE_ID,\n                                                                                               null))\n                .isInstanceOf(IllegalArgumentException.class)\n                .hasMessageContaining(\"DocumentIdentifier cannot be null\");\n    }", "signature": "void testLinkGenerationFailure()", "full_signature": "@Test public void testLinkGenerationFailure()", "class_method_signature": "DocumentDownloadLinkGeneratorTest.testLinkGenerationFailure()", "testcase": true, "constructor": false, "invocations": ["hasMessageContaining", "isInstanceOf", "assertThatThrownBy", "generateDownloadLink", "hasMessageContaining", "isInstanceOf", "assertThatThrownBy", "generateDownloadLink"]}, "focal_class": {"identifier": "DocumentDownloadLinkGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String TEMPLATE_ID_TOKEN = \"{serverTemplateId}\";", "modifier": "public static final", "type": "String", "declarator": "TEMPLATE_ID_TOKEN = \"{serverTemplateId}\"", "var_name": "TEMPLATE_ID_TOKEN"}, {"original_string": "public static final String DOCUMENT_ID_TOKEN = \"{documentIdentifier}\";", "modifier": "public static final", "type": "String", "declarator": "DOCUMENT_ID_TOKEN = \"{documentIdentifier}\"", "var_name": "DOCUMENT_ID_TOKEN"}, {"original_string": "private static final String PATTERN = \"jbpm/documents?templateid=\" + TEMPLATE_ID_TOKEN + \"&docid=\" + DOCUMENT_ID_TOKEN;", "modifier": "private static final", "type": "String", "declarator": "PATTERN = \"jbpm/documents?templateid=\" + TEMPLATE_ID_TOKEN + \"&docid=\" + DOCUMENT_ID_TOKEN", "var_name": "PATTERN"}], "methods": [{"identifier": "generateDownloadLink", "parameters": "(String serverTemplateId,\n                                              String documentIdentifier)", "modifiers": "public static", "return": "String", "signature": "String generateDownloadLink(String serverTemplateId,\n                                              String documentIdentifier)", "full_signature": "public static String generateDownloadLink(String serverTemplateId,\n                                              String documentIdentifier)", "class_method_signature": "DocumentDownloadLinkGenerator.generateDownloadLink(String serverTemplateId,\n                                              String documentIdentifier)", "testcase": false, "constructor": false}], "file": "jbpm-document/src/main/java/org/jbpm/document/service/impl/util/DocumentDownloadLinkGenerator.java"}, "focal_method": {"identifier": "generateDownloadLink", "parameters": "(String serverTemplateId,\n                                              String documentIdentifier)", "modifiers": "public static", "return": "String", "body": "public static String generateDownloadLink(String serverTemplateId,\n                                              String documentIdentifier) {\n        if (serverTemplateId == null) {\n            throw new IllegalArgumentException(\"ServerTemplateId cannot be null\");\n        }\n\n        if (documentIdentifier == null) {\n            throw new IllegalArgumentException(\"DocumentIdentifier cannot be null\");\n        }\n        return PATTERN.replace(TEMPLATE_ID_TOKEN,\n                               serverTemplateId).replace(DOCUMENT_ID_TOKEN,\n                                                         documentIdentifier);\n    }", "signature": "String generateDownloadLink(String serverTemplateId,\n                                              String documentIdentifier)", "full_signature": "public static String generateDownloadLink(String serverTemplateId,\n                                              String documentIdentifier)", "class_method_signature": "DocumentDownloadLinkGenerator.generateDownloadLink(String serverTemplateId,\n                                              String documentIdentifier)", "testcase": false, "constructor": false, "invocations": ["replace", "replace"]}, "repository": {"repo_id": 930571, "url": "https://github.com/kiegroup/jbpm", "stars": 1035, "created": "9/22/2010 1:19:52 PM +00:00", "updates": "2020-01-22T03:39:57+00:00", "fork": "False", "license": "licensed"}}