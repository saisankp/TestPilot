{"test_class": {"identifier": "NotificationTypeHandlerSelectorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private NotificationTypeHandlerSelector typeHandlerSelectorTestObject;", "modifier": "private", "type": "NotificationTypeHandlerSelector", "declarator": "typeHandlerSelectorTestObject", "var_name": "typeHandlerSelectorTestObject"}], "file": "OLAT-LMS/src/test/java/org/olat/lms/core/notification/impl/NotificationTypeHandlerSelectorTest.java"}, "test_case": {"identifier": "getTypeHandlerFrom_Wiki", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getTypeHandlerFrom_Wiki() {\n        PublisherData publisherData = mock(PublisherData.class);\n        when(publisherData.getType()).thenReturn(\"WikiPage\");\n        NotificationTypeHandler wikiTypeHandler = typeHandlerSelectorTestObject.getTypeHandlerFrom(publisherData);\n        assertNotNull(\"Could not found NotificationTypeHandler for 'wiki'\", wikiTypeHandler);\n        assertTrue(\"Wrong type-handler for forum\", wikiTypeHandler instanceof WikiNotificationTypeHandler);\n    }", "signature": "void getTypeHandlerFrom_Wiki()", "full_signature": "@Test public void getTypeHandlerFrom_Wiki()", "class_method_signature": "NotificationTypeHandlerSelectorTest.getTypeHandlerFrom_Wiki()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getType", "getTypeHandlerFrom", "assertNotNull", "assertTrue"]}, "focal_class": {"identifier": "NotificationTypeHandlerSelector", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    Set<NotificationTypeHandler> notificationTypeHandler;", "modifier": "@Autowired", "type": "Set<NotificationTypeHandler>", "declarator": "notificationTypeHandler", "var_name": "notificationTypeHandler"}], "methods": [{"identifier": "NotificationTypeHandlerSelector", "parameters": "()", "modifiers": "public", "return": "", "signature": " NotificationTypeHandlerSelector()", "full_signature": "public  NotificationTypeHandlerSelector()", "class_method_signature": "NotificationTypeHandlerSelector.NotificationTypeHandlerSelector()", "testcase": false, "constructor": true}, {"identifier": "getTypeHandler", "parameters": "(String sourceType)", "modifiers": "public", "return": "NotificationTypeHandler", "signature": "NotificationTypeHandler getTypeHandler(String sourceType)", "full_signature": "public NotificationTypeHandler getTypeHandler(String sourceType)", "class_method_signature": "NotificationTypeHandlerSelector.getTypeHandler(String sourceType)", "testcase": false, "constructor": false}, {"identifier": "getTypeHandlerFrom", "parameters": "(PublisherData publisherData)", "modifiers": "public", "return": "NotificationTypeHandler", "signature": "NotificationTypeHandler getTypeHandlerFrom(PublisherData publisherData)", "full_signature": "public NotificationTypeHandler getTypeHandlerFrom(PublisherData publisherData)", "class_method_signature": "NotificationTypeHandlerSelector.getTypeHandlerFrom(PublisherData publisherData)", "testcase": false, "constructor": false}], "file": "OLAT-LMS/src/main/java/org/olat/lms/core/notification/impl/NotificationTypeHandlerSelector.java"}, "focal_method": {"identifier": "getTypeHandlerFrom", "parameters": "(PublisherData publisherData)", "modifiers": "public", "return": "NotificationTypeHandler", "body": "public NotificationTypeHandler getTypeHandlerFrom(PublisherData publisherData) {\n        String inputPublisherDataType = publisherData.getType();\n        for (Iterator<NotificationTypeHandler> iterator = notificationTypeHandler.iterator(); iterator.hasNext();) {\n            NotificationTypeHandler notificationTypeHandler = iterator.next();\n            if (notificationTypeHandler.getPublisherDataType().equals(inputPublisherDataType)) {\n                return notificationTypeHandler;\n            }\n        }\n        // TODO: return unKownTypeHandler\n        return new DummyNotificationTypeHandler();\n    }", "signature": "NotificationTypeHandler getTypeHandlerFrom(PublisherData publisherData)", "full_signature": "public NotificationTypeHandler getTypeHandlerFrom(PublisherData publisherData)", "class_method_signature": "NotificationTypeHandlerSelector.getTypeHandlerFrom(PublisherData publisherData)", "testcase": false, "constructor": false, "invocations": ["getType", "iterator", "hasNext", "next", "equals", "getPublisherDataType"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}