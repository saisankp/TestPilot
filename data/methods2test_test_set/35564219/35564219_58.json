{"test_class": {"identifier": "SimpleKeyMakerTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [], "file": "library/src/test/java/com/climate/mirage/cache/SimpleKeyMakerTest.java"}, "test_case": {"identifier": "testSourceKeyWithModifiers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSourceKeyWithModifiers() throws Exception {\n\t\tMirageRequest request = new MirageRequest();\n\t\trequest.uri(Uri.parse(\"http://www.google.com\"));\n        request.provider(new UriProvider(request));\n\t\trequest.addProcessor(new BitmapProcessor() {\n\t\t\t@Override\n\t\t\tpublic String getId() {\n\t\t\t\treturn \"eeek\";\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic Bitmap process(Bitmap in) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\t\trequest.addProcessor(new BitmapProcessor() {\n\t\t\t@Override\n\t\t\tpublic String getId() {\n\t\t\t\treturn \"rrrrr\";\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic Bitmap process(Bitmap in) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\n\t\tSimpleKeyMaker keyMaker = new SimpleKeyMaker();\n\t\tAssert.assertEquals(\"e5123341\", keyMaker.getSourceKey(request));\n\t}", "signature": "void testSourceKeyWithModifiers()", "full_signature": "@Test public void testSourceKeyWithModifiers()", "class_method_signature": "SimpleKeyMakerTest.testSourceKeyWithModifiers()", "testcase": true, "constructor": false, "invocations": ["uri", "parse", "provider", "addProcessor", "addProcessor", "assertEquals", "getSourceKey"]}, "focal_class": {"identifier": "SimpleKeyMaker", "superclass": "", "interfaces": "implements KeyMaker", "fields": [], "methods": [{"identifier": "getSourceKey", "parameters": "(MirageRequest request)", "modifiers": "@Override public", "return": "String", "signature": "String getSourceKey(MirageRequest request)", "full_signature": "@Override public String getSourceKey(MirageRequest request)", "class_method_signature": "SimpleKeyMaker.getSourceKey(MirageRequest request)", "testcase": false, "constructor": false}, {"identifier": "getResultKey", "parameters": "(MirageRequest request)", "modifiers": "@Override public", "return": "String", "signature": "String getResultKey(MirageRequest request)", "full_signature": "@Override public String getResultKey(MirageRequest request)", "class_method_signature": "SimpleKeyMaker.getResultKey(MirageRequest request)", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/climate/mirage/cache/SimpleKeyMaker.java"}, "focal_method": {"identifier": "getSourceKey", "parameters": "(MirageRequest request)", "modifiers": "@Override public", "return": "String", "body": "@Override\n\tpublic String getSourceKey(MirageRequest request) {\n\t\tStringBuilder b = new StringBuilder();\n\t\tb.append(request.provider().id().hashCode());\n\t\treturn Integer.toHexString(b.toString().hashCode());\n\t}", "signature": "String getSourceKey(MirageRequest request)", "full_signature": "@Override public String getSourceKey(MirageRequest request)", "class_method_signature": "SimpleKeyMaker.getSourceKey(MirageRequest request)", "testcase": false, "constructor": false, "invocations": ["append", "hashCode", "id", "provider", "toHexString", "hashCode", "toString"]}, "repository": {"repo_id": 35564219, "url": "https://github.com/TheClimateCorporation/mirage", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 3928, "license": "licensed"}}