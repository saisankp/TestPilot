{"test_class": {"identifier": "StagnationRestartTest", "superclass": "", "interfaces": "", "fields": [], "file": "opendse-optimization/src/test/java/net/sf/opendse/optimization/StagnationRestartTest.java"}, "test_case": {"identifier": "testNoStagnation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testNoStagnation() {\n\t\tPopulation population = new Population();\n\t\tIndividual indi1 = new MockIndividual(false);\n\t\tIndividual indi2 = new MockIndividual(false);\n\t\tpopulation.add(indi1);\n\t\tpopulation.add(indi2);\n\t\tStagnationRestart restart = new StagnationRestart(population, 20);\n\t\trestart.archive.add(indi1);\n\t\trestart.archive.add(indi2);\n\t\tassertEquals(0, restart.lastUpdate);\n\t\trestart.iterationComplete(21);\n\t\tassertEquals(21, restart.lastUpdate);\n\t\tassertFalse(population.isEmpty());\n\t\tassertFalse(restart.archive.isEmpty());\n\t}", "signature": "void testNoStagnation()", "full_signature": "@Test public void testNoStagnation()", "class_method_signature": "StagnationRestartTest.testNoStagnation()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "assertEquals", "iterationComplete", "assertEquals", "assertFalse", "isEmpty", "assertFalse", "isEmpty"]}, "focal_class": {"identifier": "StagnationRestart", "superclass": "", "interfaces": "implements IndividualSetListener, OptimizerIterationListener", "fields": [{"original_string": "protected final Archive archive = new CrowdingArchive(100);", "modifier": "protected final", "type": "Archive", "declarator": "archive = new CrowdingArchive(100)", "var_name": "archive"}, {"original_string": "protected final Population population;", "modifier": "protected final", "type": "Population", "declarator": "population", "var_name": "population"}, {"original_string": "protected int iteration = 0;", "modifier": "protected", "type": "int", "declarator": "iteration = 0", "var_name": "iteration"}, {"original_string": "protected int lastUpdate = 0;", "modifier": "protected", "type": "int", "declarator": "lastUpdate = 0", "var_name": "lastUpdate"}, {"original_string": "protected final int diff;", "modifier": "protected final", "type": "int", "declarator": "diff", "var_name": "diff"}], "methods": [{"identifier": "StagnationRestart", "parameters": "(Population population,\n\t\t\t@Constant(value = \"maximalNumberStagnatingGenerations\", namespace = StagnationRestart.class) int diff)", "modifiers": "@Inject public", "return": "", "signature": " StagnationRestart(Population population,\n\t\t\t@Constant(value = \"maximalNumberStagnatingGenerations\", namespace = StagnationRestart.class) int diff)", "full_signature": "@Inject public  StagnationRestart(Population population,\n\t\t\t@Constant(value = \"maximalNumberStagnatingGenerations\", namespace = StagnationRestart.class) int diff)", "class_method_signature": "StagnationRestart.StagnationRestart(Population population,\n\t\t\t@Constant(value = \"maximalNumberStagnatingGenerations\", namespace = StagnationRestart.class) int diff)", "testcase": false, "constructor": true}, {"identifier": "iterationComplete", "parameters": "(int iteration)", "modifiers": "@Override public", "return": "void", "signature": "void iterationComplete(int iteration)", "full_signature": "@Override public void iterationComplete(int iteration)", "class_method_signature": "StagnationRestart.iterationComplete(int iteration)", "testcase": false, "constructor": false}, {"identifier": "individualAdded", "parameters": "(IndividualSet collection, Individual individual)", "modifiers": "@Override public", "return": "void", "signature": "void individualAdded(IndividualSet collection, Individual individual)", "full_signature": "@Override public void individualAdded(IndividualSet collection, Individual individual)", "class_method_signature": "StagnationRestart.individualAdded(IndividualSet collection, Individual individual)", "testcase": false, "constructor": false}, {"identifier": "individualRemoved", "parameters": "(IndividualSet collection, Individual individual)", "modifiers": "@Override public", "return": "void", "signature": "void individualRemoved(IndividualSet collection, Individual individual)", "full_signature": "@Override public void individualRemoved(IndividualSet collection, Individual individual)", "class_method_signature": "StagnationRestart.individualRemoved(IndividualSet collection, Individual individual)", "testcase": false, "constructor": false}], "file": "opendse-optimization/src/main/java/net/sf/opendse/optimization/StagnationRestart.java"}, "focal_method": {"identifier": "iterationComplete", "parameters": "(int iteration)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void iterationComplete(int iteration) {\n\t\tthis.iteration = iteration;\n\n\t\tfor (Individual in0 : population) {\n\t\t\tfor (Individual in1 : archive) {\n\t\t\t\tif (in0.getObjectives().dominates(in1.getObjectives())) {\n\t\t\t\t\t// new individuals are found\n\t\t\t\t\tlastUpdate = iteration;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tarchive.update(population);\n\n\t\tif (iteration - lastUpdate > diff) {\n\t\t\t// the case where no individuals were found for the last diff\n\t\t\t// generations\n\t\t\tlastUpdate = iteration;\n\t\t\tarchive.clear();\n\t\t\tpopulation.clear();\n\t\t}\n\n\t}", "signature": "void iterationComplete(int iteration)", "full_signature": "@Override public void iterationComplete(int iteration)", "class_method_signature": "StagnationRestart.iterationComplete(int iteration)", "testcase": false, "constructor": false, "invocations": ["dominates", "getObjectives", "getObjectives", "update", "clear", "clear"]}, "repository": {"repo_id": 121694310, "url": "https://github.com/felixreimann/opendse", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 7, "size": 2024, "license": "licensed"}}