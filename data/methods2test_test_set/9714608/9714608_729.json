{"test_class": {"identifier": "DBaseFileAttributeProviderTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "private static final String PHOTOGRAMMETRIE_VALUE;", "modifier": "private static final", "type": "String", "declarator": "PHOTOGRAMMETRIE_VALUE", "var_name": "PHOTOGRAMMETRIE_VALUE"}, {"original_string": "private URL resource;", "modifier": "private", "type": "URL", "declarator": "resource", "var_name": "resource"}, {"original_string": "private DBaseFileAttributeProvider provider;", "modifier": "private", "type": "DBaseFileAttributeProvider", "declarator": "provider", "var_name": "provider"}, {"original_string": "private static final String TEST_FILENAME = \"org/arakhne/afc/io/dbase/test.dbf\";", "modifier": "private static final", "type": "String", "declarator": "TEST_FILENAME = \"org/arakhne/afc/io/dbase/test.dbf\"", "var_name": "TEST_FILENAME"}], "file": "advanced/dbasefile/src/test/java/org/arakhne/afc/io/dbase/attr/DBaseFileAttributeProviderTest.java"}, "test_case": {"identifier": "testGetAllAttributeNames", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetAllAttributeNames() {\n\t\tCollection<String> names = this.provider.getAllAttributeNames();\n\t\tassertNotNull(names);\n\t\tassertEquals(4, names.size());\n\t\tIterator<String> iterator = names.iterator();\n\t\tassertTrue(iterator.hasNext());\n\t\tassertEquals(\"SOURCE\", iterator.next()); //$NON-NLS-1$\n\t\tassertTrue(iterator.hasNext());\n\t\tassertEquals(\"CATEGORIE\", iterator.next()); //$NON-NLS-1$\n\t\tassertTrue(iterator.hasNext());\n\t\tassertEquals(\"NATURE\", iterator.next()); //$NON-NLS-1$\n\t\tassertTrue(iterator.hasNext());\n\t\tassertEquals(\"HAUTEUR\", iterator.next()); //$NON-NLS-1$\n\t\tassertFalse(iterator.hasNext());\n\t}", "signature": "void testGetAllAttributeNames()", "full_signature": "@Test public void testGetAllAttributeNames()", "class_method_signature": "DBaseFileAttributeProviderTest.testGetAllAttributeNames()", "testcase": true, "constructor": false, "invocations": ["getAllAttributeNames", "assertNotNull", "assertEquals", "size", "iterator", "assertTrue", "hasNext", "assertEquals", "next", "assertTrue", "hasNext", "assertEquals", "next", "assertTrue", "hasNext", "assertEquals", "next", "assertTrue", "hasNext", "assertEquals", "next", "assertFalse", "hasNext"]}, "focal_class": {"identifier": "DBaseFileAttributeProvider", "superclass": "extends AbstractAttributeProvider", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 7759049010460115596L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 7759049010460115596L", "var_name": "serialVersionUID"}, {"original_string": "private DBaseFileAttributeAccessor accessor;", "modifier": "private", "type": "DBaseFileAttributeAccessor", "declarator": "accessor", "var_name": "accessor"}], "methods": [{"identifier": "DBaseFileAttributeProvider", "parameters": "(DBaseFileAttributeAccessor accessor)", "modifiers": "", "return": "", "signature": " DBaseFileAttributeProvider(DBaseFileAttributeAccessor accessor)", "full_signature": "  DBaseFileAttributeProvider(DBaseFileAttributeAccessor accessor)", "class_method_signature": "DBaseFileAttributeProvider.DBaseFileAttributeProvider(DBaseFileAttributeAccessor accessor)", "testcase": false, "constructor": true}, {"identifier": "finalize", "parameters": "()", "modifiers": "@Override @SuppressWarnings(\"checkstyle:nofinalizer\") @Deprecated(since = \"17.0\", forRemoval = true) public", "return": "void", "signature": "void finalize()", "full_signature": "@Override @SuppressWarnings(\"checkstyle:nofinalizer\") @Deprecated(since = \"17.0\", forRemoval = true) public void finalize()", "class_method_signature": "DBaseFileAttributeProvider.finalize()", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "()", "modifiers": "@Pure public", "return": "URL", "signature": "URL getResource()", "full_signature": "@Pure public URL getResource()", "class_method_signature": "DBaseFileAttributeProvider.getResource()", "testcase": false, "constructor": false}, {"identifier": "getRecordNumber", "parameters": "()", "modifiers": "@Pure public", "return": "int", "signature": "int getRecordNumber()", "full_signature": "@Pure public int getRecordNumber()", "class_method_signature": "DBaseFileAttributeProvider.getRecordNumber()", "testcase": false, "constructor": false}, {"identifier": "freeMemory", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void freeMemory()", "full_signature": "@Override public void freeMemory()", "class_method_signature": "DBaseFileAttributeProvider.freeMemory()", "testcase": false, "constructor": false}, {"identifier": "getAllAttributeNames", "parameters": "()", "modifiers": "@Override @Pure public", "return": "Collection<String>", "signature": "Collection<String> getAllAttributeNames()", "full_signature": "@Override @Pure public Collection<String> getAllAttributeNames()", "class_method_signature": "DBaseFileAttributeProvider.getAllAttributeNames()", "testcase": false, "constructor": false}, {"identifier": "getAllAttributes", "parameters": "()", "modifiers": "@Override @Pure public", "return": "Collection<Attribute>", "signature": "Collection<Attribute> getAllAttributes()", "full_signature": "@Override @Pure public Collection<Attribute> getAllAttributes()", "class_method_signature": "DBaseFileAttributeProvider.getAllAttributes()", "testcase": false, "constructor": false}, {"identifier": "getAllAttributesByType", "parameters": "()", "modifiers": "@Override @Pure public", "return": "Map<AttributeType, Collection<Attribute>>", "signature": "Map<AttributeType, Collection<Attribute>> getAllAttributesByType()", "full_signature": "@Override @Pure public Map<AttributeType, Collection<Attribute>> getAllAttributesByType()", "class_method_signature": "DBaseFileAttributeProvider.getAllAttributesByType()", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name)", "modifiers": "@Override @Pure public", "return": "AttributeValue", "signature": "AttributeValue getAttribute(String name)", "full_signature": "@Override @Pure public AttributeValue getAttribute(String name)", "class_method_signature": "DBaseFileAttributeProvider.getAttribute(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name, AttributeValue default_value)", "modifiers": "@Override @Pure public", "return": "AttributeValue", "signature": "AttributeValue getAttribute(String name, AttributeValue default_value)", "full_signature": "@Override @Pure public AttributeValue getAttribute(String name, AttributeValue default_value)", "class_method_signature": "DBaseFileAttributeProvider.getAttribute(String name, AttributeValue default_value)", "testcase": false, "constructor": false}, {"identifier": "getAttributeObject", "parameters": "(String name)", "modifiers": "@Override @Pure public", "return": "Attribute", "signature": "Attribute getAttributeObject(String name)", "full_signature": "@Override @Pure public Attribute getAttributeObject(String name)", "class_method_signature": "DBaseFileAttributeProvider.getAttributeObject(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeObjectFromDBase", "parameters": "(String name)", "modifiers": "protected final", "return": "Attribute", "signature": "Attribute getAttributeObjectFromDBase(String name)", "full_signature": "protected final Attribute getAttributeObjectFromDBase(String name)", "class_method_signature": "DBaseFileAttributeProvider.getAttributeObjectFromDBase(String name)", "testcase": false, "constructor": false}, {"identifier": "hasAttribute", "parameters": "(String name)", "modifiers": "@Override @Pure public", "return": "boolean", "signature": "boolean hasAttribute(String name)", "full_signature": "@Override @Pure public boolean hasAttribute(String name)", "class_method_signature": "DBaseFileAttributeProvider.hasAttribute(String name)", "testcase": false, "constructor": false}, {"identifier": "hasAttributeInDBase", "parameters": "(String name)", "modifiers": "@Pure protected final", "return": "boolean", "signature": "boolean hasAttributeInDBase(String name)", "full_signature": "@Pure protected final boolean hasAttributeInDBase(String name)", "class_method_signature": "DBaseFileAttributeProvider.hasAttributeInDBase(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeCount", "parameters": "()", "modifiers": "@Override @Pure public", "return": "int", "signature": "int getAttributeCount()", "full_signature": "@Override @Pure public int getAttributeCount()", "class_method_signature": "DBaseFileAttributeProvider.getAttributeCount()", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "(Map<String, Object> mapToFill)", "modifiers": "@Override @Pure public", "return": "void", "signature": "void toMap(Map<String, Object> mapToFill)", "full_signature": "@Override @Pure public void toMap(Map<String, Object> mapToFill)", "class_method_signature": "DBaseFileAttributeProvider.toMap(Map<String, Object> mapToFill)", "testcase": false, "constructor": false}], "file": "advanced/dbasefile/src/main/java/org/arakhne/afc/io/dbase/attr/DBaseFileAttributeProvider.java"}, "focal_method": {"identifier": "getAllAttributeNames", "parameters": "()", "modifiers": "@Override @Pure public", "return": "Collection<String>", "body": "@Override\n\t@Pure\n\tpublic Collection<String> getAllAttributeNames() {\n\t\treturn this.accessor.getAllAttributeNames();\n\t}", "signature": "Collection<String> getAllAttributeNames()", "full_signature": "@Override @Pure public Collection<String> getAllAttributeNames()", "class_method_signature": "DBaseFileAttributeProvider.getAllAttributeNames()", "testcase": false, "constructor": false, "invocations": ["getAllAttributeNames"]}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}