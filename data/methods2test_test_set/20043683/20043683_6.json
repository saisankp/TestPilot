{"test_class": {"identifier": "SemanticTypesTest", "superclass": "", "interfaces": "", "fields": [], "file": "snomed-coder-common/src/test/java/org/t3as/metamap/SemanticTypesTest.java"}, "test_case": {"identifier": "testSanitiseSemanticTypes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSanitiseSemanticTypes() {\n        assertEquals(sanitiseSemanticTypes(null), of());\n        assertEquals(sanitiseSemanticTypes(ImmutableList.<String>of()), of());\n        assertEquals(sanitiseSemanticTypes(of(\"foobar\")), of());\n\n        assertEquals(sanitiseSemanticTypes(of(\"dsyn\")), of(\"dsyn\"));\n        assertEquals(sanitiseSemanticTypes(of(\"dsyn\", \"foobar\")),of(\"dsyn\"));\n        assertEquals(sanitiseSemanticTypes(of(\"dsyn\", \"foobar\", \"fish\")), of(\"dsyn\", \"fish\"));\n    }", "signature": "void testSanitiseSemanticTypes()", "full_signature": "@Test public void testSanitiseSemanticTypes()", "class_method_signature": "SemanticTypesTest.testSanitiseSemanticTypes()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "sanitiseSemanticTypes", "of", "assertEquals", "sanitiseSemanticTypes", "of", "of", "assertEquals", "sanitiseSemanticTypes", "of", "of", "assertEquals", "sanitiseSemanticTypes", "of", "of", "assertEquals", "sanitiseSemanticTypes", "of", "of", "assertEquals", "sanitiseSemanticTypes", "of", "of"]}, "focal_class": {"identifier": "SemanticTypes", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SEMANTIC_TYPES_FILE = \"SemanticTypes_2013AA.txt\";", "modifier": "private static final", "type": "String", "declarator": "SEMANTIC_TYPES_FILE = \"SemanticTypes_2013AA.txt\"", "var_name": "SEMANTIC_TYPES_FILE"}, {"original_string": "private static final String DEFAULT_SEMANTIC_TYPES_FILE = \"defaultSemanticTypes.txt\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_SEMANTIC_TYPES_FILE = \"defaultSemanticTypes.txt\"", "var_name": "DEFAULT_SEMANTIC_TYPES_FILE"}, {"original_string": "@SuppressWarnings(\"PublicStaticCollectionField\")\n    public static final ImmutableList<String> DEFAULT_MM_SEMANTIC_TYPES;", "modifier": "@SuppressWarnings(\"PublicStaticCollectionField\")\n    public static final", "type": "ImmutableList<String>", "declarator": "DEFAULT_MM_SEMANTIC_TYPES", "var_name": "DEFAULT_MM_SEMANTIC_TYPES"}, {"original_string": "@SuppressWarnings(\"PublicStaticCollectionField\")\n    public static final ImmutableMap<String, String> SEMANTIC_TYPES_CODE_TO_DESCRIPTION;", "modifier": "@SuppressWarnings(\"PublicStaticCollectionField\")\n    public static final", "type": "ImmutableMap<String, String>", "declarator": "SEMANTIC_TYPES_CODE_TO_DESCRIPTION", "var_name": "SEMANTIC_TYPES_CODE_TO_DESCRIPTION"}], "methods": [{"identifier": "SemanticTypes", "parameters": "()", "modifiers": "private", "return": "", "signature": " SemanticTypes()", "full_signature": "private  SemanticTypes()", "class_method_signature": "SemanticTypes.SemanticTypes()", "testcase": false, "constructor": true}, {"identifier": "sanitiseSemanticTypes", "parameters": "(final Collection<String> semanticTypes)", "modifiers": "public static", "return": "Collection<String>", "signature": "Collection<String> sanitiseSemanticTypes(final Collection<String> semanticTypes)", "full_signature": "public static Collection<String> sanitiseSemanticTypes(final Collection<String> semanticTypes)", "class_method_signature": "SemanticTypes.sanitiseSemanticTypes(final Collection<String> semanticTypes)", "testcase": false, "constructor": false}], "file": "snomed-coder-common/src/main/java/org/t3as/metamap/SemanticTypes.java"}, "focal_method": {"identifier": "sanitiseSemanticTypes", "parameters": "(final Collection<String> semanticTypes)", "modifiers": "public static", "return": "Collection<String>", "body": "public static Collection<String> sanitiseSemanticTypes(final Collection<String> semanticTypes) {\n        if (semanticTypes == null) return ImmutableList.of();\n\n        // check that each of the given types are in the map we have, otherwise throw it away\n        final Set<String> s = new LinkedHashSet<>(semanticTypes);\n        return s.retainAll(SEMANTIC_TYPES_CODE_TO_DESCRIPTION.keySet()) ? s : semanticTypes;\n    }", "signature": "Collection<String> sanitiseSemanticTypes(final Collection<String> semanticTypes)", "full_signature": "public static Collection<String> sanitiseSemanticTypes(final Collection<String> semanticTypes)", "class_method_signature": "SemanticTypes.sanitiseSemanticTypes(final Collection<String> semanticTypes)", "testcase": false, "constructor": false, "invocations": ["of", "retainAll", "keySet"]}, "repository": {"repo_id": 20043683, "url": "https://github.com/NICTA/t3as-snomedct-service", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 7, "size": 1240, "license": "licensed"}}