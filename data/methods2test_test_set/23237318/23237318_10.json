{"test_class": {"identifier": "ESPushTaskTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final SystemStreamPartition ssp = new SystemStreamPartition(\"fake\", \"fake\", new Partition(0));", "modifier": "protected static final", "type": "SystemStreamPartition", "declarator": "ssp = new SystemStreamPartition(\"fake\", \"fake\", new Partition(0))", "var_name": "ssp"}], "file": "samza-elasticsearch/src/test/java/com/quantiply/samza/task/ESPushTaskTest.java"}, "test_case": {"identifier": "testWritesWithPartitionedIndexes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWritesWithPartitionedIndexes() throws Exception {\n        ESPushTaskConfig.ESIndexSpec esConfig = getEsIndexSpec(\"key_avro\", true);\n        ESPushTask task = getEsPushTask();\n\n        ActionRequestKey inKeyMissingId = ActionRequestKey.newBuilder()\n            .setAction(Action.UPDATE)\n            .setPartitionTsUnixMs(99L)\n            .build();\n        when(task.avroSerde.fromBytes(null)).thenReturn(inKeyMissingId);\n\n        assertThatThrownBy(() -> { task.getAvroKeyOutMsg(getInMsg(\"\"), esConfig); }).isInstanceOf(InvalidParameterException.class)\n            .hasMessageContaining(\"Document id is required\");\n\n        ActionRequestKey inKeyMissingTs = ActionRequestKey.newBuilder()\n            .setAction(Action.DELETE)\n            .setId(\"foo\")\n            .build();\n        when(task.avroSerde.fromBytes(null)).thenReturn(inKeyMissingTs);\n\n        assertThatThrownBy(() -> { task.getAvroKeyOutMsg(getInMsg(\"\"), esConfig); }).isInstanceOf(InvalidParameterException.class)\n            .hasMessageContaining(\"Partition timestamp is required\");\n\n        ActionRequestKey inKey = ActionRequestKey.newBuilder()\n            .setAction(Action.DELETE)\n            .setId(\"foo\")\n            .setPartitionTsUnixMs(99L)\n            .build();\n        when(task.avroSerde.fromBytes(null)).thenReturn(inKey);\n\n        OutgoingMessageEnvelope out = task.getAvroKeyOutMsg(getInMsg(\"\"), esConfig);\n        HTTPBulkLoader.ActionRequest req = (HTTPBulkLoader.ActionRequest) out.getMessage();\n        assertEquals(\"foo\", req.key.getId().toString());\n        assertEquals(Action.DELETE, req.key.getAction());\n        assertEquals(99L, req.key.getPartitionTsUnixMs().longValue());\n        assertNull(\"Do not default event time\", req.key.getEventTsUnixMs());\n        assertNull(\"No version set\", req.key.getVersion());\n        assertNull(\"No version type set\", req.key.getVersionType());\n    }", "signature": "void testWritesWithPartitionedIndexes()", "full_signature": "@Test public void testWritesWithPartitionedIndexes()", "class_method_signature": "ESPushTaskTest.testWritesWithPartitionedIndexes()", "testcase": true, "constructor": false, "invocations": ["getEsIndexSpec", "getEsPushTask", "build", "setPartitionTsUnixMs", "setAction", "newBuilder", "thenReturn", "when", "fromBytes", "hasMessageContaining", "isInstanceOf", "assertThatThrownBy", "getAvroKeyOutMsg", "getInMsg", "build", "setId", "setAction", "newBuilder", "thenReturn", "when", "fromBytes", "hasMessageContaining", "isInstanceOf", "assertThatThrownBy", "getAvroKeyOutMsg", "getInMsg", "build", "setPartitionTsUnixMs", "setId", "setAction", "newBuilder", "thenReturn", "when", "fromBytes", "getAvroKeyOutMsg", "getInMsg", "getMessage", "assertEquals", "toString", "getId", "assertEquals", "getAction", "assertEquals", "longValue", "getPartitionTsUnixMs", "assertNull", "getEventTsUnixMs", "assertNull", "getVersion", "assertNull", "getVersionType"]}, "focal_class": {"identifier": "ESPushTask", "superclass": "extends BaseTask", "interfaces": "", "fields": [{"original_string": "protected SystemStream esStream = new SystemStream(ESPushTaskConfig.CFS_ES_SYSTEM_NAME, ESPushTaskConfig.CFG_ES_STREAM_NAME);", "modifier": "protected", "type": "SystemStream", "declarator": "esStream = new SystemStream(ESPushTaskConfig.CFS_ES_SYSTEM_NAME, ESPushTaskConfig.CFG_ES_STREAM_NAME)", "var_name": "esStream"}, {"original_string": "protected AvroSerde avroSerde;", "modifier": "protected", "type": "AvroSerde", "declarator": "avroSerde", "var_name": "avroSerde"}, {"original_string": "protected JsonSerde jsonSerde;", "modifier": "protected", "type": "JsonSerde", "declarator": "jsonSerde", "var_name": "jsonSerde"}, {"original_string": "protected final AvroToJson avroToJson = new AvroToJson();", "modifier": "protected final", "type": "AvroToJson", "declarator": "avroToJson = new AvroToJson()", "var_name": "avroToJson"}], "methods": [{"identifier": "_init", "parameters": "(Config config, TaskContext context, MetricAdaptor metricAdaptor)", "modifiers": "@Override protected", "return": "void", "signature": "void _init(Config config, TaskContext context, MetricAdaptor metricAdaptor)", "full_signature": "@Override protected void _init(Config config, TaskContext context, MetricAdaptor metricAdaptor)", "class_method_signature": "ESPushTask._init(Config config, TaskContext context, MetricAdaptor metricAdaptor)", "testcase": false, "constructor": false}, {"identifier": "getHandler", "parameters": "(Config config, ESPushTaskConfig.ESIndexSpec esIndexSpec)", "modifiers": "private", "return": "Process", "signature": "Process getHandler(Config config, ESPushTaskConfig.ESIndexSpec esIndexSpec)", "full_signature": "private Process getHandler(Config config, ESPushTaskConfig.ESIndexSpec esIndexSpec)", "class_method_signature": "ESPushTask.getHandler(Config config, ESPushTaskConfig.ESIndexSpec esIndexSpec)", "testcase": false, "constructor": false}, {"identifier": "handleMsg", "parameters": "(IncomingMessageEnvelope envelope, MessageCollector collector, TaskCoordinator coordinator, ESPushTaskConfig.ESIndexSpec spec, BiFunction<IncomingMessageEnvelope, ESPushTaskConfig.ESIndexSpec, OutgoingMessageEnvelope> msgExtractor)", "modifiers": "private", "return": "void", "signature": "void handleMsg(IncomingMessageEnvelope envelope, MessageCollector collector, TaskCoordinator coordinator, ESPushTaskConfig.ESIndexSpec spec, BiFunction<IncomingMessageEnvelope, ESPushTaskConfig.ESIndexSpec, OutgoingMessageEnvelope> msgExtractor)", "full_signature": "private void handleMsg(IncomingMessageEnvelope envelope, MessageCollector collector, TaskCoordinator coordinator, ESPushTaskConfig.ESIndexSpec spec, BiFunction<IncomingMessageEnvelope, ESPushTaskConfig.ESIndexSpec, OutgoingMessageEnvelope> msgExtractor)", "class_method_signature": "ESPushTask.handleMsg(IncomingMessageEnvelope envelope, MessageCollector collector, TaskCoordinator coordinator, ESPushTaskConfig.ESIndexSpec spec, BiFunction<IncomingMessageEnvelope, ESPushTaskConfig.ESIndexSpec, OutgoingMessageEnvelope> msgExtractor)", "testcase": false, "constructor": false}, {"identifier": "getOutMsgExtractor", "parameters": "(ESPushTaskConfig.ESIndexSpec spec)", "modifiers": "private", "return": "BiFunction<IncomingMessageEnvelope, ESPushTaskConfig.ESIndexSpec, OutgoingMessageEnvelope>", "signature": "BiFunction<IncomingMessageEnvelope, ESPushTaskConfig.ESIndexSpec, OutgoingMessageEnvelope> getOutMsgExtractor(ESPushTaskConfig.ESIndexSpec spec)", "full_signature": "private BiFunction<IncomingMessageEnvelope, ESPushTaskConfig.ESIndexSpec, OutgoingMessageEnvelope> getOutMsgExtractor(ESPushTaskConfig.ESIndexSpec spec)", "class_method_signature": "ESPushTask.getOutMsgExtractor(ESPushTaskConfig.ESIndexSpec spec)", "testcase": false, "constructor": false}, {"identifier": "getSimpleOutMsg", "parameters": "(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "modifiers": "protected", "return": "OutgoingMessageEnvelope", "signature": "OutgoingMessageEnvelope getSimpleOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "full_signature": "protected OutgoingMessageEnvelope getSimpleOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "class_method_signature": "ESPushTask.getSimpleOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "testcase": false, "constructor": false}, {"identifier": "getSimpleOutMsg", "parameters": "(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec, Optional<Long> tsNowMsOpt)", "modifiers": "protected", "return": "OutgoingMessageEnvelope", "signature": "OutgoingMessageEnvelope getSimpleOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec, Optional<Long> tsNowMsOpt)", "full_signature": "protected OutgoingMessageEnvelope getSimpleOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec, Optional<Long> tsNowMsOpt)", "class_method_signature": "ESPushTask.getSimpleOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec, Optional<Long> tsNowMsOpt)", "testcase": false, "constructor": false}, {"identifier": "getAvroKeyOutMsg", "parameters": "(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "modifiers": "protected", "return": "OutgoingMessageEnvelope", "signature": "OutgoingMessageEnvelope getAvroKeyOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "full_signature": "protected OutgoingMessageEnvelope getAvroKeyOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "class_method_signature": "ESPushTask.getAvroKeyOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "testcase": false, "constructor": false}, {"identifier": "getAvroKeyOutMsg", "parameters": "(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec, Optional<Long> tsNowMsOpt)", "modifiers": "protected", "return": "OutgoingMessageEnvelope", "signature": "OutgoingMessageEnvelope getAvroKeyOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec, Optional<Long> tsNowMsOpt)", "full_signature": "protected OutgoingMessageEnvelope getAvroKeyOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec, Optional<Long> tsNowMsOpt)", "class_method_signature": "ESPushTask.getAvroKeyOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec, Optional<Long> tsNowMsOpt)", "testcase": false, "constructor": false}, {"identifier": "getJsonKeyOutMsg", "parameters": "(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "modifiers": "protected", "return": "OutgoingMessageEnvelope", "signature": "OutgoingMessageEnvelope getJsonKeyOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "full_signature": "protected OutgoingMessageEnvelope getJsonKeyOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "class_method_signature": "ESPushTask.getJsonKeyOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "testcase": false, "constructor": false}, {"identifier": "getJsonKeyOutMsg", "parameters": "(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec, Optional<Long> tsNowMsOpt)", "modifiers": "protected", "return": "OutgoingMessageEnvelope", "signature": "OutgoingMessageEnvelope getJsonKeyOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec, Optional<Long> tsNowMsOpt)", "full_signature": "protected OutgoingMessageEnvelope getJsonKeyOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec, Optional<Long> tsNowMsOpt)", "class_method_signature": "ESPushTask.getJsonKeyOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec, Optional<Long> tsNowMsOpt)", "testcase": false, "constructor": false}, {"identifier": "getEmbeddedOutMsg", "parameters": "(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "modifiers": "protected", "return": "OutgoingMessageEnvelope", "signature": "OutgoingMessageEnvelope getEmbeddedOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "full_signature": "protected OutgoingMessageEnvelope getEmbeddedOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "class_method_signature": "ESPushTask.getEmbeddedOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "testcase": false, "constructor": false}, {"identifier": "getEmbeddedOutMsg", "parameters": "(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec, Optional<Long> tsNowMsOpt)", "modifiers": "protected", "return": "OutgoingMessageEnvelope", "signature": "OutgoingMessageEnvelope getEmbeddedOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec, Optional<Long> tsNowMsOpt)", "full_signature": "protected OutgoingMessageEnvelope getEmbeddedOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec, Optional<Long> tsNowMsOpt)", "class_method_signature": "ESPushTask.getEmbeddedOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec, Optional<Long> tsNowMsOpt)", "testcase": false, "constructor": false}, {"identifier": "getDocumentAsString", "parameters": "(IncomingMessageEnvelope envelope)", "modifiers": "private", "return": "String", "signature": "String getDocumentAsString(IncomingMessageEnvelope envelope)", "full_signature": "private String getDocumentAsString(IncomingMessageEnvelope envelope)", "class_method_signature": "ESPushTask.getDocumentAsString(IncomingMessageEnvelope envelope)", "testcase": false, "constructor": false}, {"identifier": "getOutMsg", "parameters": "(IncomingMessageEnvelope envelope, ActionRequestKey key, ESPushTaskConfig.ESIndexSpec spec, long tsNowMs, String document)", "modifiers": "private", "return": "OutgoingMessageEnvelope", "signature": "OutgoingMessageEnvelope getOutMsg(IncomingMessageEnvelope envelope, ActionRequestKey key, ESPushTaskConfig.ESIndexSpec spec, long tsNowMs, String document)", "full_signature": "private OutgoingMessageEnvelope getOutMsg(IncomingMessageEnvelope envelope, ActionRequestKey key, ESPushTaskConfig.ESIndexSpec spec, long tsNowMs, String document)", "class_method_signature": "ESPushTask.getOutMsg(IncomingMessageEnvelope envelope, ActionRequestKey key, ESPushTaskConfig.ESIndexSpec spec, long tsNowMs, String document)", "testcase": false, "constructor": false}, {"identifier": "getIndex", "parameters": "(ESPushTaskConfig.ESIndexSpec spec, ActionRequestKey requestKey)", "modifiers": "private", "return": "String", "signature": "String getIndex(ESPushTaskConfig.ESIndexSpec spec, ActionRequestKey requestKey)", "full_signature": "private String getIndex(ESPushTaskConfig.ESIndexSpec spec, ActionRequestKey requestKey)", "class_method_signature": "ESPushTask.getIndex(ESPushTaskConfig.ESIndexSpec spec, ActionRequestKey requestKey)", "testcase": false, "constructor": false}, {"identifier": "validateInput", "parameters": "(ActionRequestKey key, ESPushTaskConfig.ESIndexSpec spec, IncomingMessageEnvelope envelope, long tsNowMs, String document)", "modifiers": "private", "return": "void", "signature": "void validateInput(ActionRequestKey key, ESPushTaskConfig.ESIndexSpec spec, IncomingMessageEnvelope envelope, long tsNowMs, String document)", "full_signature": "private void validateInput(ActionRequestKey key, ESPushTaskConfig.ESIndexSpec spec, IncomingMessageEnvelope envelope, long tsNowMs, String document)", "class_method_signature": "ESPushTask.validateInput(ActionRequestKey key, ESPushTaskConfig.ESIndexSpec spec, IncomingMessageEnvelope envelope, long tsNowMs, String document)", "testcase": false, "constructor": false}, {"identifier": "getDocForUpdate", "parameters": "(ActionRequestKey key, String documentIn)", "modifiers": "private", "return": "String", "signature": "String getDocForUpdate(ActionRequestKey key, String documentIn)", "full_signature": "private String getDocForUpdate(ActionRequestKey key, String documentIn)", "class_method_signature": "ESPushTask.getDocForUpdate(ActionRequestKey key, String documentIn)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String [] args)", "modifiers": "public static", "return": "void", "signature": "void main(String [] args)", "full_signature": "public static void main(String [] args)", "class_method_signature": "ESPushTask.main(String [] args)", "testcase": false, "constructor": false}], "file": "samza-elasticsearch/src/main/java/com/quantiply/samza/task/ESPushTask.java"}, "focal_method": {"identifier": "getAvroKeyOutMsg", "parameters": "(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "modifiers": "protected", "return": "OutgoingMessageEnvelope", "body": "protected OutgoingMessageEnvelope getAvroKeyOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec) {\n        return getAvroKeyOutMsg(envelope, spec, Optional.empty());\n    }", "signature": "OutgoingMessageEnvelope getAvroKeyOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "full_signature": "protected OutgoingMessageEnvelope getAvroKeyOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "class_method_signature": "ESPushTask.getAvroKeyOutMsg(IncomingMessageEnvelope envelope, ESPushTaskConfig.ESIndexSpec spec)", "testcase": false, "constructor": false, "invocations": ["getAvroKeyOutMsg", "empty"]}, "repository": {"repo_id": 23237318, "url": "https://github.com/quantiply/rico", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 5128, "license": "licensed"}}