{"test_class": {"identifier": "DateUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String HTTP_DATE_HEADER = \"Thu, 25 May 2017 21:13:47 GMT\";", "modifier": "private static final", "type": "String", "declarator": "HTTP_DATE_HEADER = \"Thu, 25 May 2017 21:13:47 GMT\"", "var_name": "HTTP_DATE_HEADER"}], "file": "data-client/src/test/java/org/wikipedia/util/DateUtilTest.java"}, "test_case": {"identifier": "testIso8601DateFormat", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIso8601DateFormat() throws Throwable {\n        assertThat(DateUtil.iso8601DateFormat(DateUtil.getHttpLastModifiedDate(HTTP_DATE_HEADER)), is(\"2017-05-25T21:13:47Z\"));\n    }", "signature": "void testIso8601DateFormat()", "full_signature": "@Test public void testIso8601DateFormat()", "class_method_signature": "DateUtilTest.testIso8601DateFormat()", "testcase": true, "constructor": false, "invocations": ["assertThat", "iso8601DateFormat", "getHttpLastModifiedDate", "is"]}, "focal_class": {"identifier": "DateUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Map<String, SimpleDateFormat> DATE_FORMATS = new HashMap<>();", "modifier": "private static", "type": "Map<String, SimpleDateFormat>", "declarator": "DATE_FORMATS = new HashMap<>()", "var_name": "DATE_FORMATS"}], "methods": [{"identifier": "iso8601DateFormat", "parameters": "(Date date)", "modifiers": "public static synchronized", "return": "String", "signature": "String iso8601DateFormat(Date date)", "full_signature": "public static synchronized String iso8601DateFormat(Date date)", "class_method_signature": "DateUtil.iso8601DateFormat(Date date)", "testcase": false, "constructor": false}, {"identifier": "iso8601DateParse", "parameters": "(String date)", "modifiers": "public static synchronized", "return": "Date", "signature": "Date iso8601DateParse(String date)", "full_signature": "public static synchronized Date iso8601DateParse(String date)", "class_method_signature": "DateUtil.iso8601DateParse(String date)", "testcase": false, "constructor": false}, {"identifier": "iso8601LocalDateFormat", "parameters": "(Date date)", "modifiers": "public static synchronized", "return": "String", "signature": "String iso8601LocalDateFormat(Date date)", "full_signature": "public static synchronized String iso8601LocalDateFormat(Date date)", "class_method_signature": "DateUtil.iso8601LocalDateFormat(Date date)", "testcase": false, "constructor": false}, {"identifier": "getMonthOnlyDateString", "parameters": "(@NonNull Date date)", "modifiers": "public static", "return": "String", "signature": "String getMonthOnlyDateString(@NonNull Date date)", "full_signature": "public static String getMonthOnlyDateString(@NonNull Date date)", "class_method_signature": "DateUtil.getMonthOnlyDateString(@NonNull Date date)", "testcase": false, "constructor": false}, {"identifier": "getMonthOnlyWithoutDayDateString", "parameters": "(@NonNull Date date)", "modifiers": "public static", "return": "String", "signature": "String getMonthOnlyWithoutDayDateString(@NonNull Date date)", "full_signature": "public static String getMonthOnlyWithoutDayDateString(@NonNull Date date)", "class_method_signature": "DateUtil.getMonthOnlyWithoutDayDateString(@NonNull Date date)", "testcase": false, "constructor": false}, {"identifier": "getExtraShortDateString", "parameters": "(@NonNull Date date)", "modifiers": "public static", "return": "String", "signature": "String getExtraShortDateString(@NonNull Date date)", "full_signature": "public static String getExtraShortDateString(@NonNull Date date)", "class_method_signature": "DateUtil.getExtraShortDateString(@NonNull Date date)", "testcase": false, "constructor": false}, {"identifier": "getDateStringWithSkeletonPattern", "parameters": "(@NonNull Date date, @NonNull String pattern)", "modifiers": "public static synchronized", "return": "String", "signature": "String getDateStringWithSkeletonPattern(@NonNull Date date, @NonNull String pattern)", "full_signature": "public static synchronized String getDateStringWithSkeletonPattern(@NonNull Date date, @NonNull String pattern)", "class_method_signature": "DateUtil.getDateStringWithSkeletonPattern(@NonNull Date date, @NonNull String pattern)", "testcase": false, "constructor": false}, {"identifier": "getCachedDateFormat", "parameters": "(String pattern, Locale locale, boolean utc)", "modifiers": "private static", "return": "SimpleDateFormat", "signature": "SimpleDateFormat getCachedDateFormat(String pattern, Locale locale, boolean utc)", "full_signature": "private static SimpleDateFormat getCachedDateFormat(String pattern, Locale locale, boolean utc)", "class_method_signature": "DateUtil.getCachedDateFormat(String pattern, Locale locale, boolean utc)", "testcase": false, "constructor": false}, {"identifier": "getShortDateString", "parameters": "(@NonNull Context context, @NonNull Date date)", "modifiers": "public static", "return": "String", "signature": "String getShortDateString(@NonNull Context context, @NonNull Date date)", "full_signature": "public static String getShortDateString(@NonNull Context context, @NonNull Date date)", "class_method_signature": "DateUtil.getShortDateString(@NonNull Context context, @NonNull Date date)", "testcase": false, "constructor": false}, {"identifier": "getUtcRequestDateFor", "parameters": "(int age)", "modifiers": "public static", "return": "UtcDate", "signature": "UtcDate getUtcRequestDateFor(int age)", "full_signature": "public static UtcDate getUtcRequestDateFor(int age)", "class_method_signature": "DateUtil.getUtcRequestDateFor(int age)", "testcase": false, "constructor": false}, {"identifier": "getDefaultDateFor", "parameters": "(int age)", "modifiers": "public static", "return": "Calendar", "signature": "Calendar getDefaultDateFor(int age)", "full_signature": "public static Calendar getDefaultDateFor(int age)", "class_method_signature": "DateUtil.getDefaultDateFor(int age)", "testcase": false, "constructor": false}, {"identifier": "getHttpLastModifiedDate", "parameters": "(@NonNull String dateStr)", "modifiers": "public static synchronized", "return": "Date", "signature": "Date getHttpLastModifiedDate(@NonNull String dateStr)", "full_signature": "public static synchronized Date getHttpLastModifiedDate(@NonNull String dateStr)", "class_method_signature": "DateUtil.getHttpLastModifiedDate(@NonNull String dateStr)", "testcase": false, "constructor": false}, {"identifier": "getReadingListsLastSyncDateString", "parameters": "(@NonNull String dateStr)", "modifiers": "public static", "return": "String", "signature": "String getReadingListsLastSyncDateString(@NonNull String dateStr)", "full_signature": "public static String getReadingListsLastSyncDateString(@NonNull String dateStr)", "class_method_signature": "DateUtil.getReadingListsLastSyncDateString(@NonNull String dateStr)", "testcase": false, "constructor": false}, {"identifier": "yearToStringWithEra", "parameters": "(int year)", "modifiers": "@NonNull public static", "return": "String", "signature": "String yearToStringWithEra(int year)", "full_signature": "@NonNull public static String yearToStringWithEra(int year)", "class_method_signature": "DateUtil.yearToStringWithEra(int year)", "testcase": false, "constructor": false}, {"identifier": "DateUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " DateUtil()", "full_signature": "private  DateUtil()", "class_method_signature": "DateUtil.DateUtil()", "testcase": false, "constructor": true}], "file": "data-client/src/main/java/org/wikipedia/util/DateUtil.java"}, "focal_method": {"identifier": "iso8601DateFormat", "parameters": "(Date date)", "modifiers": "public static synchronized", "return": "String", "body": "public static synchronized String iso8601DateFormat(Date date) {\n        return getCachedDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ROOT, true).format(date);\n    }", "signature": "String iso8601DateFormat(Date date)", "full_signature": "public static synchronized String iso8601DateFormat(Date date)", "class_method_signature": "DateUtil.iso8601DateFormat(Date date)", "testcase": false, "constructor": false, "invocations": ["format", "getCachedDateFormat"]}, "repository": {"repo_id": 42032884, "url": "https://github.com/commons-app/apps-android-commons", "stars": 546, "created": "9/7/2015 5:23:27 AM +00:00", "updates": "2020-01-27T16:36:58+00:00", "fork": "False", "license": "licensed"}}