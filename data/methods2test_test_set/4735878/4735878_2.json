{"test_class": {"identifier": "CategorizedStringTest", "superclass": "", "interfaces": "", "fields": [], "file": "legend/src/test/java/org/orbisgis/legend/structure/categorize/CategorizedStringTest.java"}, "test_case": {"identifier": "testGetFromCategorize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetFromCategorize(){\n        CategorizedString cs = new CategorizedString(getCategorize2String());\n        assertTrue(cs.get(20.0).equals(\"Greater\"));\n        assertTrue(cs.get(Double.NEGATIVE_INFINITY).equals(\"youhou\"));\n        assertNull(cs.get(25.0));\n        assertTrue(cs.get(30.0).equals(\"EvenGreater\"));\n        cs = new CategorizedString(new StringLiteral(\"yo\"));\n        assertNull(cs.get(25.0));\n        assertTrue(cs.get(Double.NEGATIVE_INFINITY).equals(\"yo\"));\n    }", "signature": "void testGetFromCategorize()", "full_signature": "@Test public void testGetFromCategorize()", "class_method_signature": "CategorizedStringTest.testGetFromCategorize()", "testcase": true, "constructor": false, "invocations": ["getCategorize2String", "assertTrue", "equals", "get", "assertTrue", "equals", "get", "assertNull", "get", "assertTrue", "equals", "get", "assertNull", "get", "assertTrue", "equals", "get"]}, "focal_class": {"identifier": "CategorizedString", "superclass": "extends CategorizedLegend<String>", "interfaces": "", "fields": [{"original_string": "private StringParameter parameter = new StringLiteral();", "modifier": "private", "type": "StringParameter", "declarator": "parameter = new StringLiteral()", "var_name": "parameter"}], "methods": [{"identifier": "CategorizedString", "parameters": "(StringParameter sp)", "modifiers": "public", "return": "", "signature": " CategorizedString(StringParameter sp)", "full_signature": "public  CategorizedString(StringParameter sp)", "class_method_signature": "CategorizedString.CategorizedString(StringParameter sp)", "testcase": false, "constructor": true}, {"identifier": "getParameter", "parameters": "()", "modifiers": "@Override public", "return": "SeParameter", "signature": "SeParameter getParameter()", "full_signature": "@Override public SeParameter getParameter()", "class_method_signature": "CategorizedString.getParameter()", "testcase": false, "constructor": false}, {"identifier": "setParameter", "parameters": "(StringParameter param)", "modifiers": "public", "return": "void", "signature": "void setParameter(StringParameter param)", "full_signature": "public void setParameter(StringParameter param)", "class_method_signature": "CategorizedString.setParameter(StringParameter param)", "testcase": false, "constructor": false}, {"identifier": "getFallbackValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFallbackValue()", "full_signature": "public String getFallbackValue()", "class_method_signature": "CategorizedString.getFallbackValue()", "testcase": false, "constructor": false}, {"identifier": "setFallbackValue", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setFallbackValue(String value)", "full_signature": "public void setFallbackValue(String value)", "class_method_signature": "CategorizedString.setFallbackValue(String value)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(Double d)", "modifiers": "@Override public", "return": "String", "signature": "String get(Double d)", "full_signature": "@Override public String get(Double d)", "class_method_signature": "CategorizedString.get(Double d)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(Double d, String v)", "modifiers": "@Override public", "return": "void", "signature": "void put(Double d, String v)", "full_signature": "@Override public void put(Double d, String v)", "class_method_signature": "CategorizedString.put(Double d, String v)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Double d)", "modifiers": "@Override public", "return": "String", "signature": "String remove(Double d)", "full_signature": "@Override public String remove(Double d)", "class_method_signature": "CategorizedString.remove(Double d)", "testcase": false, "constructor": false}, {"identifier": "getFromLower", "parameters": "(Double d)", "modifiers": "@Override public", "return": "String", "signature": "String getFromLower(Double d)", "full_signature": "@Override public String getFromLower(Double d)", "class_method_signature": "CategorizedString.getFromLower(Double d)", "testcase": false, "constructor": false}], "file": "legend/src/main/java/org/orbisgis/legend/structure/categorize/CategorizedString.java"}, "focal_method": {"identifier": "get", "parameters": "(Double d)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String get(Double d){\n        if(parameter instanceof StringLiteral){\n            return Double.isInfinite(d) && d < 0 ? ((StringLiteral) parameter).getValue(null) : null;\n        } else {\n            try{\n                StringParameter sp = ((Categorize2String)parameter).get(new RealLiteral(d));\n                return sp == null ? null : sp.getValue(null);\n            } catch (ParameterException pe){\n                throw new IllegalArgumentException(\"Can't process the input value: \"+d, pe);\n            }\n        }\n    }", "signature": "String get(Double d)", "full_signature": "@Override public String get(Double d)", "class_method_signature": "CategorizedString.get(Double d)", "testcase": false, "constructor": false, "invocations": ["isInfinite", "getValue", "get", "getValue"]}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}