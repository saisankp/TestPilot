{"test_class": {"identifier": "RandomUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(RandomUtilTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(RandomUtilTest.class)", "var_name": "logger"}], "file": "ch-commons-util/src/test/java/com/cloudhopper/commons/util/RandomUtilTest.java"}, "test_case": {"identifier": "generateString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void generateString() {\n        // can really only test the length since its a random num\n        String result = RandomUtil.generateString(2);\n        Assert.assertEquals(2, result.length());\n\n        result = RandomUtil.generateString(20);\n        Assert.assertEquals(20, result.length());\n\n        result = RandomUtil.generateString(8);\n        Assert.assertEquals(8, result.length());\n    }", "signature": "void generateString()", "full_signature": "@Test public void generateString()", "class_method_signature": "RandomUtilTest.generateString()", "testcase": true, "constructor": false, "invocations": ["generateString", "assertEquals", "length", "generateString", "assertEquals", "length", "generateString", "assertEquals", "length"]}, "focal_class": {"identifier": "RandomUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String chars = \"abcdefghijklmonpqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";", "modifier": "private static final", "type": "String", "declarator": "chars = \"abcdefghijklmonpqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"", "var_name": "chars"}, {"original_string": "private static Random random = new Random();", "modifier": "private static", "type": "Random", "declarator": "random = new Random()", "var_name": "random"}], "methods": [{"identifier": "generateString", "parameters": "(int length)", "modifiers": "public static", "return": "String", "signature": "String generateString(int length)", "full_signature": "public static String generateString(int length)", "class_method_signature": "RandomUtil.generateString(int length)", "testcase": false, "constructor": false}], "file": "ch-commons-util/src/main/java/com/cloudhopper/commons/util/RandomUtil.java"}, "focal_method": {"identifier": "generateString", "parameters": "(int length)", "modifiers": "public static", "return": "String", "body": "public static String generateString(int length) {\n        char[] buf = new char[length];\n        for (int i = 0; i < buf.length; i++) {\n            buf[i] = chars.charAt(random.nextInt(chars.length()));\n        }\n        return new String(buf);\n    }", "signature": "String generateString(int length)", "full_signature": "public static String generateString(int length)", "class_method_signature": "RandomUtil.generateString(int length)", "testcase": false, "constructor": false, "invocations": ["charAt", "nextInt", "length"]}, "repository": {"repo_id": 14960307, "url": "https://github.com/twitter/cloudhopper-commons", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 36, "size": 6452, "license": "licensed"}}