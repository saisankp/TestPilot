{"test_class": {"identifier": "AbstractIteratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "filter-service-core/src/test/java/cn/leancloud/filter/service/utils/AbstractIteratorTest.java"}, "test_case": {"identifier": "testRemove", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRemove() {\n        final ListIterator<Object> iter = new ListIterator<Object>(Collections.emptyList());\n        assertThatThrownBy(iter::remove)\n                .isInstanceOf(UnsupportedOperationException.class)\n                .hasMessage(\"removal not supported\");\n    }", "signature": "void testRemove()", "full_signature": "@Test public void testRemove()", "class_method_signature": "AbstractIteratorTest.testRemove()", "testcase": true, "constructor": false, "invocations": ["emptyList", "hasMessage", "isInstanceOf", "assertThatThrownBy"]}, "focal_class": {"identifier": "AbstractIterator", "superclass": "", "interfaces": "implements Iterator<T>", "fields": [{"original_string": "private State state = State.NOT_READY;", "modifier": "private", "type": "State", "declarator": "state = State.NOT_READY", "var_name": "state"}, {"original_string": "@Nullable\n    private T next;", "modifier": "@Nullable\n    private", "type": "T", "declarator": "next", "var_name": "next"}], "methods": [{"identifier": "hasNext", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasNext()", "full_signature": "@Override public boolean hasNext()", "class_method_signature": "AbstractIterator.hasNext()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "T", "signature": "T next()", "full_signature": "@Override public T next()", "class_method_signature": "AbstractIterator.next()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void remove()", "full_signature": "@Override public void remove()", "class_method_signature": "AbstractIterator.remove()", "testcase": false, "constructor": false}, {"identifier": "peek", "parameters": "()", "modifiers": "public", "return": "T", "signature": "T peek()", "full_signature": "public T peek()", "class_method_signature": "AbstractIterator.peek()", "testcase": false, "constructor": false}, {"identifier": "allDone", "parameters": "()", "modifiers": "@Nullable protected", "return": "T", "signature": "T allDone()", "full_signature": "@Nullable protected T allDone()", "class_method_signature": "AbstractIterator.allDone()", "testcase": false, "constructor": false}, {"identifier": "makeNext", "parameters": "()", "modifiers": "@Nullable protected abstract", "return": "T", "signature": "T makeNext()", "full_signature": "@Nullable protected abstract T makeNext()", "class_method_signature": "AbstractIterator.makeNext()", "testcase": false, "constructor": false}, {"identifier": "maybeComputeNext", "parameters": "()", "modifiers": "private", "return": "Boolean", "signature": "Boolean maybeComputeNext()", "full_signature": "private Boolean maybeComputeNext()", "class_method_signature": "AbstractIterator.maybeComputeNext()", "testcase": false, "constructor": false}], "file": "filter-service-core/src/main/java/cn/leancloud/filter/service/utils/AbstractIterator.java"}, "focal_method": {"identifier": "remove", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void remove() {\n        throw new UnsupportedOperationException(\"removal not supported\");\n    }", "signature": "void remove()", "full_signature": "@Override public void remove()", "class_method_signature": "AbstractIterator.remove()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 217849614, "url": "https://github.com/leancloud/filter-service", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 14, "size": 2797, "license": "licensed"}}