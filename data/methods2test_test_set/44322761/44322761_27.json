{"test_class": {"identifier": "AreaPickerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AreaPicker areaPicker;", "modifier": "private", "type": "AreaPicker", "declarator": "areaPicker", "var_name": "areaPicker"}], "file": "thai-widget/src/test/java/nectec/thai/widget/unit/AreaPickerTest.java"}, "test_case": {"identifier": "testShowOnlyRai", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testShowOnlyRai() throws Exception {\n        areaPicker.setArea(new Area(2, 0, 0.0));\n\n        assertEquals(\"2 \u0e44\u0e23\u0e48\", areaPicker.getText());\n    }", "signature": "void testShowOnlyRai()", "full_signature": "@Test public void testShowOnlyRai()", "class_method_signature": "AreaPickerTest.testShowOnlyRai()", "testcase": true, "constructor": false, "invocations": ["setArea", "assertEquals", "t());"]}, "focal_class": {"identifier": "AreaPicker", "superclass": "extends AppCompatEditText", "interfaces": "implements AreaView, OnClickListener", "fields": [{"original_string": "protected static final String DEFAULT_HINT = \"\u0e23\u0e30\u0e1a\u0e38\u0e02\u0e19\u0e32\u0e14\u0e1e\u0e37\u0e49\u0e19\u0e17\u0e35\u0e48\";", "modifier": "protected static final", "type": "String", "declarator": "DEFAULT_HINT = \"\u0e23\u0e30\u0e1a\u0e38\u0e02\u0e19\u0e32\u0e14\u0e1e\u0e37\u0e49\u0e19\u0e17\u0e35\u0e48\";", "var_name": "DEFAULT_HINT"}, {"original_string": "private AreaPopup popup;", "modifier": "private", "type": "AreaPopup", "declarator": "popup", "var_name": "popup"}, {"original_string": "private Area area = new Area(0);", "modifier": "private", "type": "Area", "declarator": "area = new Area(0)", "var_name": "area"}, {"original_string": "private OnAreaChangedListener listener;", "modifier": "private", "type": "OnAreaChangedListener", "declarator": "listener", "var_name": "listener"}, {"original_string": "private final OnAreaPickListener dialogListener = new OnAreaPickListener() {\n        @Override\n        public void onAreaPick(Area area) {\n            setArea(area);\n        }\n\n        @Override\n        public void onCancel() {\n            setArea(new Area(0));\n            setText(null);\n        }\n    };", "modifier": "private final", "type": "OnAreaPickListener", "declarator": "dialogListener = new OnAreaPickListener() {\n        @Override\n        public void onAreaPick(Area area) {\n            setArea(area);\n        }\n\n        @Override\n        public void onCancel() {\n            setArea(new Area(0));\n            setText(null);\n        }\n    }", "var_name": "dialogListener"}], "methods": [{"identifier": "AreaPicker", "parameters": "(Context context)", "modifiers": "public", "return": "", "signature": " AreaPicker(Context context)", "full_signature": "public  AreaPicker(Context context)", "class_method_signature": "AreaPicker.AreaPicker(Context context)", "testcase": false, "constructor": true}, {"identifier": "AreaPicker", "parameters": "(Context context, AttributeSet attrs)", "modifiers": "public", "return": "", "signature": " AreaPicker(Context context, AttributeSet attrs)", "full_signature": "public  AreaPicker(Context context, AttributeSet attrs)", "class_method_signature": "AreaPicker.AreaPicker(Context context, AttributeSet attrs)", "testcase": false, "constructor": true}, {"identifier": "AreaPicker", "parameters": "(Context context, AttributeSet attrs, int defStyleAttr)", "modifiers": "public", "return": "", "signature": " AreaPicker(Context context, AttributeSet attrs, int defStyleAttr)", "full_signature": "public  AreaPicker(Context context, AttributeSet attrs, int defStyleAttr)", "class_method_signature": "AreaPicker.AreaPicker(Context context, AttributeSet attrs, int defStyleAttr)", "testcase": false, "constructor": true}, {"identifier": "setupPickerDialog", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setupPickerDialog()", "full_signature": "private void setupPickerDialog()", "class_method_signature": "AreaPicker.setupPickerDialog()", "testcase": false, "constructor": false}, {"identifier": "onDraw", "parameters": "(Canvas canvas)", "modifiers": "@Override protected", "return": "void", "signature": "void onDraw(Canvas canvas)", "full_signature": "@Override protected void onDraw(Canvas canvas)", "class_method_signature": "AreaPicker.onDraw(Canvas canvas)", "testcase": false, "constructor": false}, {"identifier": "getArea", "parameters": "()", "modifiers": "@Override public", "return": "Area", "signature": "Area getArea()", "full_signature": "@Override public Area getArea()", "class_method_signature": "AreaPicker.getArea()", "testcase": false, "constructor": false}, {"identifier": "onClick", "parameters": "(View view)", "modifiers": "@Override public", "return": "void", "signature": "void onClick(View view)", "full_signature": "@Override public void onClick(View view)", "class_method_signature": "AreaPicker.onClick(View view)", "testcase": false, "constructor": false}, {"identifier": "onSaveInstanceState", "parameters": "()", "modifiers": "@Override public", "return": "Parcelable", "signature": "Parcelable onSaveInstanceState()", "full_signature": "@Override public Parcelable onSaveInstanceState()", "class_method_signature": "AreaPicker.onSaveInstanceState()", "testcase": false, "constructor": false}, {"identifier": "onRestoreInstanceState", "parameters": "(Parcelable state)", "modifiers": "@Override public", "return": "void", "signature": "void onRestoreInstanceState(Parcelable state)", "full_signature": "@Override public void onRestoreInstanceState(Parcelable state)", "class_method_signature": "AreaPicker.onRestoreInstanceState(Parcelable state)", "testcase": false, "constructor": false}, {"identifier": "setArea", "parameters": "(Area area)", "modifiers": "@Override public", "return": "void", "signature": "void setArea(Area area)", "full_signature": "@Override public void setArea(Area area)", "class_method_signature": "AreaPicker.setArea(Area area)", "testcase": false, "constructor": false}, {"identifier": "setMaxRai", "parameters": "(int maxRai)", "modifiers": "public", "return": "void", "signature": "void setMaxRai(int maxRai)", "full_signature": "public void setMaxRai(int maxRai)", "class_method_signature": "AreaPicker.setMaxRai(int maxRai)", "testcase": false, "constructor": false}, {"identifier": "setTitle", "parameters": "(String title)", "modifiers": "public", "return": "void", "signature": "void setTitle(String title)", "full_signature": "public void setTitle(String title)", "class_method_signature": "AreaPicker.setTitle(String title)", "testcase": false, "constructor": false}, {"identifier": "setOnAreaChangeListener", "parameters": "(OnAreaChangedListener listener)", "modifiers": "public", "return": "void", "signature": "void setOnAreaChangeListener(OnAreaChangedListener listener)", "full_signature": "public void setOnAreaChangeListener(OnAreaChangedListener listener)", "class_method_signature": "AreaPicker.setOnAreaChangeListener(OnAreaChangedListener listener)", "testcase": false, "constructor": false}], "file": "thai-widget/src/main/java/nectec/thai/widget/unit/AreaPicker.java"}, "focal_method": {"identifier": "setArea", "parameters": "(Area area)", "modifiers": "@Override public", "return": "void", "body": "@Override public void setArea(Area area) {\n        if (area == null)\n            throw new IllegalArgumentException(\"area must not be null\");\n        this.area = area;\n        setText(area.prettyPrint());\n        if (listener != null)\n            listener.onAreaChanged(area);\n    }", "signature": "void setArea(Area area)", "full_signature": "@Override public void setArea(Area area)", "class_method_signature": "AreaPicker.setArea(Area area)", "testcase": false, "constructor": false, "invocations": ["setText", "prettyPrint", "onAreaChanged"]}, "repository": {"repo_id": 44322761, "url": "https://github.com/nectec-opensource/thai-widget", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 2551, "license": "licensed"}}