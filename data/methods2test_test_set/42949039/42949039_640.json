{"test_class": {"identifier": "EmrHelperServiceImplTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    private AwsServiceHelper awsServiceHelper;", "modifier": "@Mock\n    private", "type": "AwsServiceHelper", "declarator": "awsServiceHelper", "var_name": "awsServiceHelper"}, {"original_string": "@Mock\n    private ConfigurationHelper configurationHelper;", "modifier": "@Mock\n    private", "type": "ConfigurationHelper", "declarator": "configurationHelper", "var_name": "configurationHelper"}, {"original_string": "@Mock\n    private EmrClusterDefinitionDaoHelper emrClusterDefinitionDaoHelper;", "modifier": "@Mock\n    private", "type": "EmrClusterDefinitionDaoHelper", "declarator": "emrClusterDefinitionDaoHelper", "var_name": "emrClusterDefinitionDaoHelper"}, {"original_string": "@Mock\n    private EmrClusterDefinitionHelper emrClusterDefinitionHelper;", "modifier": "@Mock\n    private", "type": "EmrClusterDefinitionHelper", "declarator": "emrClusterDefinitionHelper", "var_name": "emrClusterDefinitionHelper"}, {"original_string": "@Mock\n    private EmrDao emrDao;", "modifier": "@Mock\n    private", "type": "EmrDao", "declarator": "emrDao", "var_name": "emrDao"}, {"original_string": "@Mock\n    private EmrHelper emrHelper;", "modifier": "@Mock\n    private", "type": "EmrHelper", "declarator": "emrHelper", "var_name": "emrHelper"}, {"original_string": "@InjectMocks\n    private EmrHelperServiceImpl emrHelperServiceImpl;", "modifier": "@InjectMocks\n    private", "type": "EmrHelperServiceImpl", "declarator": "emrHelperServiceImpl", "var_name": "emrHelperServiceImpl"}, {"original_string": "@Mock\n    private EmrPricingHelper emrPricingHelper;", "modifier": "@Mock\n    private", "type": "EmrPricingHelper", "declarator": "emrPricingHelper", "var_name": "emrPricingHelper"}, {"original_string": "@Mock\n    private HerdDao herdDao;", "modifier": "@Mock\n    private", "type": "HerdDao", "declarator": "herdDao", "var_name": "herdDao"}, {"original_string": "@Mock\n    private NamespaceDaoHelper namespaceDaoHelper;", "modifier": "@Mock\n    private", "type": "NamespaceDaoHelper", "declarator": "namespaceDaoHelper", "var_name": "namespaceDaoHelper"}, {"original_string": "@Mock\n    private NamespaceIamRoleAuthorizationHelper namespaceIamRoleAuthorizationHelper;", "modifier": "@Mock\n    private", "type": "NamespaceIamRoleAuthorizationHelper", "declarator": "namespaceIamRoleAuthorizationHelper", "var_name": "namespaceIamRoleAuthorizationHelper"}, {"original_string": "@Mock\n    private XmlHelper xmlHelper;", "modifier": "@Mock\n    private", "type": "XmlHelper", "declarator": "xmlHelper", "var_name": "xmlHelper"}, {"original_string": "@Mock\n    private JsonHelper jsonHelper;", "modifier": "@Mock\n    private", "type": "JsonHelper", "declarator": "jsonHelper", "var_name": "jsonHelper"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/impl/EmrHelperServiceImplTest.java"}, "test_case": {"identifier": "testEmrCreateClusterAwsSpecificStepsImplWithAmazonServiceException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEmrCreateClusterAwsSpecificStepsImplWithAmazonServiceException()\n    {\n        // Create an EMR cluster definition object.\n        EmrClusterDefinition emrClusterDefinition = new EmrClusterDefinition();\n        emrClusterDefinition.setAccountId(AWS_ACCOUNT_ID);\n        emrClusterDefinition.setInstanceDefinitions(new InstanceDefinitions());\n\n        // Create an EMR cluster create request.\n        EmrClusterCreateRequest emrClusterCreateRequest =\n            new EmrClusterCreateRequest(NAMESPACE, EMR_CLUSTER_DEFINITION_NAME, EMR_CLUSTER_NAME, NO_DRY_RUN, emrClusterDefinition);\n        emrClusterCreateRequest.setEmrClusterDefinitionOverride(emrClusterDefinition);\n\n        // Create an EMR cluster alternate key DTO.\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto = new EmrClusterAlternateKeyDto(NAMESPACE, EMR_CLUSTER_DEFINITION_NAME, EMR_CLUSTER_NAME);\n\n        // Create an EMR parameters DTO.\n        EmrParamsDto emrParamsDto =\n            new EmrParamsDto(NO_AWS_ACCESS_KEY, NO_AWS_SECRET_KEY, NO_SESSION_TOKEN, HTTP_PROXY_HOST, HTTP_PROXY_PORT, AWS_REGION_NAME_US_EAST_1,\n                NO_S3_TRUSTING_ACCOUNT_STAGING_BUCKET_NAME);\n\n        // Create an Amazon service exception.\n        AmazonServiceException amazonServiceException = new AmazonServiceException(ERROR_MESSAGE);\n\n        // Mock the external calls.\n        when(emrHelper.isInstanceDefinitionsEmpty(emrClusterDefinition.getInstanceDefinitions())).thenReturn(false);\n        when(emrHelper.buildEmrClusterName(emrClusterAlternateKeyDto.getNamespace(), emrClusterAlternateKeyDto.getEmrClusterDefinitionName(),\n            emrClusterAlternateKeyDto.getEmrClusterName())).thenReturn(EMR_CLUSTER_NAME);\n        when(emrDao.getActiveEmrClusterByNameAndAccountId(EMR_CLUSTER_NAME, emrClusterDefinition.getAccountId(), emrParamsDto)).thenReturn(null);\n        when(emrDao.createEmrCluster(EMR_CLUSTER_NAME, emrClusterDefinition, emrParamsDto)).thenThrow(amazonServiceException);\n\n        // Call the method under test.\n        emrHelperServiceImpl.emrCreateClusterAwsSpecificSteps(emrClusterCreateRequest, emrClusterDefinition, emrClusterAlternateKeyDto, emrParamsDto);\n\n        // Verify the external calls.\n        verify(emrHelper).isInstanceDefinitionsEmpty(emrClusterDefinition.getInstanceDefinitions());\n        verify(emrPricingHelper).updateEmrClusterDefinitionWithBestPrice(emrClusterAlternateKeyDto, emrClusterDefinition, emrParamsDto);\n        verify(emrHelper).buildEmrClusterName(emrClusterAlternateKeyDto.getNamespace(), emrClusterAlternateKeyDto.getEmrClusterDefinitionName(),\n            emrClusterAlternateKeyDto.getEmrClusterName());\n        verify(emrDao).getActiveEmrClusterByNameAndAccountId(EMR_CLUSTER_NAME, emrClusterDefinition.getAccountId(), emrParamsDto);\n        verify(emrDao).createEmrCluster(EMR_CLUSTER_NAME, emrClusterDefinition, emrParamsDto);\n        verify(awsServiceHelper)\n            .handleAmazonException(amazonServiceException, \"An Amazon exception occurred while creating EMR cluster with name \\\"\" + EMR_CLUSTER_NAME + \"\\\".\");\n        verifyNoMoreInteractionsHelper();\n    }", "signature": "void testEmrCreateClusterAwsSpecificStepsImplWithAmazonServiceException()", "full_signature": "@Test public void testEmrCreateClusterAwsSpecificStepsImplWithAmazonServiceException()", "class_method_signature": "EmrHelperServiceImplTest.testEmrCreateClusterAwsSpecificStepsImplWithAmazonServiceException()", "testcase": true, "constructor": false, "invocations": ["setAccountId", "setInstanceDefinitions", "setEmrClusterDefinitionOverride", "thenReturn", "when", "isInstanceDefinitionsEmpty", "getInstanceDefinitions", "thenReturn", "when", "buildEmrClusterName", "getNamespace", "getEmrClusterDefinitionName", "getEmrClusterName", "thenReturn", "when", "getActiveEmrClusterByNameAndAccountId", "getAccountId", "thenThrow", "when", "createEmrCluster", "emrCreateClusterAwsSpecificSteps", "isInstanceDefinitionsEmpty", "verify", "getInstanceDefinitions", "updateEmrClusterDefinitionWithBestPrice", "verify", "buildEmrClusterName", "verify", "getNamespace", "getEmrClusterDefinitionName", "getEmrClusterName", "getActiveEmrClusterByNameAndAccountId", "verify", "getAccountId", "createEmrCluster", "verify", "handleAmazonException", "verify", "verifyNoMoreInteractionsHelper"]}, "focal_class": {"identifier": "EmrHelperServiceImpl", "superclass": "", "interfaces": "implements EmrHelperService", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(EmrHelperServiceImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(EmrHelperServiceImpl.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private AwsServiceHelper awsServiceHelper;", "modifier": "@Autowired\n    private", "type": "AwsServiceHelper", "declarator": "awsServiceHelper", "var_name": "awsServiceHelper"}, {"original_string": "@Autowired\n    private ConfigurationHelper configurationHelper;", "modifier": "@Autowired\n    private", "type": "ConfigurationHelper", "declarator": "configurationHelper", "var_name": "configurationHelper"}, {"original_string": "@Autowired\n    private EmrClusterDefinitionDaoHelper emrClusterDefinitionDaoHelper;", "modifier": "@Autowired\n    private", "type": "EmrClusterDefinitionDaoHelper", "declarator": "emrClusterDefinitionDaoHelper", "var_name": "emrClusterDefinitionDaoHelper"}, {"original_string": "@Autowired\n    private EmrClusterDefinitionHelper emrClusterDefinitionHelper;", "modifier": "@Autowired\n    private", "type": "EmrClusterDefinitionHelper", "declarator": "emrClusterDefinitionHelper", "var_name": "emrClusterDefinitionHelper"}, {"original_string": "@Autowired\n    private EmrDao emrDao;", "modifier": "@Autowired\n    private", "type": "EmrDao", "declarator": "emrDao", "var_name": "emrDao"}, {"original_string": "@Autowired\n    private EmrHelper emrHelper;", "modifier": "@Autowired\n    private", "type": "EmrHelper", "declarator": "emrHelper", "var_name": "emrHelper"}, {"original_string": "@Autowired\n    private EmrPricingHelper emrPricingHelper;", "modifier": "@Autowired\n    private", "type": "EmrPricingHelper", "declarator": "emrPricingHelper", "var_name": "emrPricingHelper"}, {"original_string": "@Autowired\n    private HerdDao herdDao;", "modifier": "@Autowired\n    private", "type": "HerdDao", "declarator": "herdDao", "var_name": "herdDao"}, {"original_string": "@Autowired\n    private JsonHelper jsonHelper;", "modifier": "@Autowired\n    private", "type": "JsonHelper", "declarator": "jsonHelper", "var_name": "jsonHelper"}, {"original_string": "@Autowired\n    private NamespaceDaoHelper namespaceDaoHelper;", "modifier": "@Autowired\n    private", "type": "NamespaceDaoHelper", "declarator": "namespaceDaoHelper", "var_name": "namespaceDaoHelper"}, {"original_string": "@Autowired\n    private NamespaceIamRoleAuthorizationHelper namespaceIamRoleAuthorizationHelper;", "modifier": "@Autowired\n    private", "type": "NamespaceIamRoleAuthorizationHelper", "declarator": "namespaceIamRoleAuthorizationHelper", "var_name": "namespaceIamRoleAuthorizationHelper"}, {"original_string": "@Autowired\n    private XmlHelper xmlHelper;", "modifier": "@Autowired\n    private", "type": "XmlHelper", "declarator": "xmlHelper", "var_name": "xmlHelper"}], "methods": [{"identifier": "emrCreateClusterAwsSpecificSteps", "parameters": "(EmrClusterCreateRequest emrClusterCreateRequest, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "modifiers": "@Override @Transactional(propagation = Propagation.NOT_SUPPORTED) public", "return": "EmrClusterCreateDto", "signature": "EmrClusterCreateDto emrCreateClusterAwsSpecificSteps(EmrClusterCreateRequest emrClusterCreateRequest, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "full_signature": "@Override @Transactional(propagation = Propagation.NOT_SUPPORTED) public EmrClusterCreateDto emrCreateClusterAwsSpecificSteps(EmrClusterCreateRequest emrClusterCreateRequest, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "class_method_signature": "EmrHelperServiceImpl.emrCreateClusterAwsSpecificSteps(EmrClusterCreateRequest emrClusterCreateRequest, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "testcase": false, "constructor": false}, {"identifier": "emrPreCreateClusterSteps", "parameters": "(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterCreateRequest emrClusterCreateRequest)", "modifiers": "@Override @Transactional(propagation = Propagation.REQUIRES_NEW) public", "return": "EmrClusterPreCreateDto", "signature": "EmrClusterPreCreateDto emrPreCreateClusterSteps(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterCreateRequest emrClusterCreateRequest)", "full_signature": "@Override @Transactional(propagation = Propagation.REQUIRES_NEW) public EmrClusterPreCreateDto emrPreCreateClusterSteps(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterCreateRequest emrClusterCreateRequest)", "class_method_signature": "EmrHelperServiceImpl.emrPreCreateClusterSteps(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterCreateRequest emrClusterCreateRequest)", "testcase": false, "constructor": false}, {"identifier": "logEmrClusterCreation", "parameters": "(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "modifiers": "@Override @Transactional(propagation = Propagation.REQUIRES_NEW) public", "return": "void", "signature": "void logEmrClusterCreation(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "full_signature": "@Override @Transactional(propagation = Propagation.REQUIRES_NEW) public void logEmrClusterCreation(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "class_method_signature": "EmrHelperServiceImpl.logEmrClusterCreation(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "testcase": false, "constructor": false}, {"identifier": "emrCreateClusterAwsSpecificStepsImpl", "parameters": "(EmrClusterCreateRequest request, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "modifiers": "", "return": "EmrClusterCreateDto", "signature": "EmrClusterCreateDto emrCreateClusterAwsSpecificStepsImpl(EmrClusterCreateRequest request, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "full_signature": " EmrClusterCreateDto emrCreateClusterAwsSpecificStepsImpl(EmrClusterCreateRequest request, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "class_method_signature": "EmrHelperServiceImpl.emrCreateClusterAwsSpecificStepsImpl(EmrClusterCreateRequest request, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "testcase": false, "constructor": false}, {"identifier": "emrPreCreateClusterStepsImpl", "parameters": "(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterCreateRequest request)", "modifiers": "", "return": "EmrClusterPreCreateDto", "signature": "EmrClusterPreCreateDto emrPreCreateClusterStepsImpl(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterCreateRequest request)", "full_signature": " EmrClusterPreCreateDto emrPreCreateClusterStepsImpl(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterCreateRequest request)", "class_method_signature": "EmrHelperServiceImpl.emrPreCreateClusterStepsImpl(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "logEmrClusterCreationImpl", "parameters": "(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "modifiers": "", "return": "void", "signature": "void logEmrClusterCreationImpl(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "full_signature": " void logEmrClusterCreationImpl(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "class_method_signature": "EmrHelperServiceImpl.logEmrClusterCreationImpl(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition, String clusterId)", "testcase": false, "constructor": false}, {"identifier": "getS3ManagedReplaceString", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getS3ManagedReplaceString()", "full_signature": "private String getS3ManagedReplaceString()", "class_method_signature": "EmrHelperServiceImpl.getS3ManagedReplaceString()", "testcase": false, "constructor": false}, {"identifier": "overrideEmrClusterDefinition", "parameters": "(EmrClusterDefinition emrClusterDefinition, EmrClusterDefinition emrClusterDefinitionOverride)", "modifiers": "@SuppressWarnings(\"PMD.CyclomaticComplexity\") // Method is not complex. It's just very repetitive. protected", "return": "void", "signature": "void overrideEmrClusterDefinition(EmrClusterDefinition emrClusterDefinition, EmrClusterDefinition emrClusterDefinitionOverride)", "full_signature": "@SuppressWarnings(\"PMD.CyclomaticComplexity\") // Method is not complex. It's just very repetitive. protected void overrideEmrClusterDefinition(EmrClusterDefinition emrClusterDefinition, EmrClusterDefinition emrClusterDefinitionOverride)", "class_method_signature": "EmrHelperServiceImpl.overrideEmrClusterDefinition(EmrClusterDefinition emrClusterDefinition, EmrClusterDefinition emrClusterDefinitionOverride)", "testcase": false, "constructor": false}, {"identifier": "updateEmrClusterDefinitionWithValidInstanceFleetSubnets", "parameters": "(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition,\n        AwsParamsDto awsParamsDto)", "modifiers": "", "return": "void", "signature": "void updateEmrClusterDefinitionWithValidInstanceFleetSubnets(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition,\n        AwsParamsDto awsParamsDto)", "full_signature": " void updateEmrClusterDefinitionWithValidInstanceFleetSubnets(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition,\n        AwsParamsDto awsParamsDto)", "class_method_signature": "EmrHelperServiceImpl.updateEmrClusterDefinitionWithValidInstanceFleetSubnets(EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrClusterDefinition emrClusterDefinition,\n        AwsParamsDto awsParamsDto)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/impl/EmrHelperServiceImpl.java"}, "focal_method": {"identifier": "emrCreateClusterAwsSpecificSteps", "parameters": "(EmrClusterCreateRequest emrClusterCreateRequest, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "modifiers": "@Override @Transactional(propagation = Propagation.NOT_SUPPORTED) public", "return": "EmrClusterCreateDto", "body": "@Override\n    @Transactional(propagation = Propagation.NOT_SUPPORTED)\n    public EmrClusterCreateDto emrCreateClusterAwsSpecificSteps(EmrClusterCreateRequest emrClusterCreateRequest, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)\n    {\n        return emrCreateClusterAwsSpecificStepsImpl(emrClusterCreateRequest, emrClusterDefinition, emrClusterAlternateKeyDto, emrParamsDto);\n    }", "signature": "EmrClusterCreateDto emrCreateClusterAwsSpecificSteps(EmrClusterCreateRequest emrClusterCreateRequest, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "full_signature": "@Override @Transactional(propagation = Propagation.NOT_SUPPORTED) public EmrClusterCreateDto emrCreateClusterAwsSpecificSteps(EmrClusterCreateRequest emrClusterCreateRequest, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "class_method_signature": "EmrHelperServiceImpl.emrCreateClusterAwsSpecificSteps(EmrClusterCreateRequest emrClusterCreateRequest, EmrClusterDefinition emrClusterDefinition,\n        EmrClusterAlternateKeyDto emrClusterAlternateKeyDto, EmrParamsDto emrParamsDto)", "testcase": false, "constructor": false, "invocations": ["emrCreateClusterAwsSpecificStepsImpl"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}