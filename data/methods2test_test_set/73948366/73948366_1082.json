{"test_class": {"identifier": "DataCacheTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ZTS_Y64_CERT0 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BMEdDU3FHU0liM0RR\"\n            + \"RUJBUVVBQTRHTkFEQ0JpUUtCZ1FDMXRHU1ZDQTh3bDVldzVZNzZXajJySkFVRApZYW5FSmZLbUFseDVjUS84a\"\n            + \"EtFVWZTU2dwWHIzQ3pkaDFhMjZkbGI3bW1LMjlxbVhKWGg2dW1XOUF5ZlRPS1ZvCis2QVNsb1ZVM2F2dnVmbE\"\n            + \"dVT0VnMmpzbWRha1IyNEtjTGpBdTZRclVlNDE3bEczdDhxU1BJR2pTNUMrQ3NKVXcKaDA0aEh4NWYrUEV3eFY\"\n            + \"0cmJRSURBUUFCCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_Y64_CERT0 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BMEdDU3FHU0liM0RR\"\n            + \"RUJBUVVBQTRHTkFEQ0JpUUtCZ1FDMXRHU1ZDQTh3bDVldzVZNzZXajJySkFVRApZYW5FSmZLbUFseDVjUS84a\"\n            + \"EtFVWZTU2dwWHIzQ3pkaDFhMjZkbGI3bW1LMjlxbVhKWGg2dW1XOUF5ZlRPS1ZvCis2QVNsb1ZVM2F2dnVmbE\"\n            + \"dVT0VnMmpzbWRha1IyNEtjTGpBdTZRclVlNDE3bEczdDhxU1BJR2pTNUMrQ3NKVXcKaDA0aEh4NWYrUEV3eFY\"\n            + \"0cmJRSURBUUFCCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\"", "var_name": "ZTS_Y64_CERT0"}, {"original_string": "private static final String ZTS_PEM_CERT0 = \"-----BEGIN PUBLIC KEY-----\\n\"\n            + \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC1tGSVCA8wl5ew5Y76Wj2rJAUD\\n\"\n            + \"YanEJfKmAlx5cQ/8hKEUfSSgpXr3Czdh1a26dlb7mmK29qmXJXh6umW9AyfTOKVo\\n\"\n            + \"+6ASloVU3avvuflGUOEg2jsmdakR24KcLjAu6QrUe417lG3t8qSPIGjS5C+CsJUw\\n\"\n            + \"h04hHx5f+PEwxV4rbQIDAQAB\\n\"\n            + \"-----END PUBLIC KEY-----\\n\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_PEM_CERT0 = \"-----BEGIN PUBLIC KEY-----\\n\"\n            + \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC1tGSVCA8wl5ew5Y76Wj2rJAUD\\n\"\n            + \"YanEJfKmAlx5cQ/8hKEUfSSgpXr3Czdh1a26dlb7mmK29qmXJXh6umW9AyfTOKVo\\n\"\n            + \"+6ASloVU3avvuflGUOEg2jsmdakR24KcLjAu6QrUe417lG3t8qSPIGjS5C+CsJUw\\n\"\n            + \"h04hHx5f+PEwxV4rbQIDAQAB\\n\"\n            + \"-----END PUBLIC KEY-----\\n\"", "var_name": "ZTS_PEM_CERT0"}, {"original_string": "private static final String ZTS_Y64_CERT1 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BMEdDU3FHU0liM0RR\"\n            + \"RUJBUVVBQTRHTkFEQ0JpUUtCZ1FETUhWaFRNZldJQWdvTEdhbkx2QkNNRytRdAoySU9pcml2cGRLSFNPSkpsYX\"\n            + \"VKRUNlWlY1MTVmWG91SjhRb09IczA4UGlsdXdjeHF5dmhJSlduNWFrVEhGSWh5CkdDNkdtUTUzbG9WSEtTVE1WO\"\n            + \"DM1M0FjNkhydzYxbmJZMVQ2TnA2bjdxdXI4a1UwR2tmdk5hWFZrK09LNVBaankKbkxzZ251UjlCeFZndlM4ZjJR\"\n            + \"SURBUUFCCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_Y64_CERT1 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BMEdDU3FHU0liM0RR\"\n            + \"RUJBUVVBQTRHTkFEQ0JpUUtCZ1FETUhWaFRNZldJQWdvTEdhbkx2QkNNRytRdAoySU9pcml2cGRLSFNPSkpsYX\"\n            + \"VKRUNlWlY1MTVmWG91SjhRb09IczA4UGlsdXdjeHF5dmhJSlduNWFrVEhGSWh5CkdDNkdtUTUzbG9WSEtTVE1WO\"\n            + \"DM1M0FjNkhydzYxbmJZMVQ2TnA2bjdxdXI4a1UwR2tmdk5hWFZrK09LNVBaankKbkxzZ251UjlCeFZndlM4ZjJR\"\n            + \"SURBUUFCCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\"", "var_name": "ZTS_Y64_CERT1"}, {"original_string": "private static final String ZTS_PEM_CERT1 = \"-----BEGIN PUBLIC KEY-----\\n\"\n            + \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMHVhTMfWIAgoLGanLvBCMG+Qt\\n\"\n            + \"2IOirivpdKHSOJJlauJECeZV515fXouJ8QoOHs08PiluwcxqyvhIJWn5akTHFIhy\\n\"\n            + \"GC6GmQ53loVHKSTMV8353Ac6Hrw61nbY1T6Np6n7qur8kU0GkfvNaXVk+OK5PZjy\\n\"\n            + \"nLsgnuR9BxVgvS8f2QIDAQAB\\n\"\n            + \"-----END PUBLIC KEY-----\\n\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_PEM_CERT1 = \"-----BEGIN PUBLIC KEY-----\\n\"\n            + \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMHVhTMfWIAgoLGanLvBCMG+Qt\\n\"\n            + \"2IOirivpdKHSOJJlauJECeZV515fXouJ8QoOHs08PiluwcxqyvhIJWn5akTHFIhy\\n\"\n            + \"GC6GmQ53loVHKSTMV8353Ac6Hrw61nbY1T6Np6n7qur8kU0GkfvNaXVk+OK5PZjy\\n\"\n            + \"nLsgnuR9BxVgvS8f2QIDAQAB\\n\"\n            + \"-----END PUBLIC KEY-----\\n\"", "var_name": "ZTS_PEM_CERT1"}, {"original_string": "private static final String ZTS_Y64_CERT2 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BMEdDU3FHU0liM0RR\"\n            + \"RUJBUVVBQTRHTkFEQ0JpUUtCZ1FEbmZsZVZ4d293aitRWStjQi8rbWs5YXZYZgpHUWVpTTdOMlMwby9LV3FWK2h\"\n            + \"GVWtDZkExMWxEYVJoZUY0alFhSzVaM2pPUE9nbklOZE5hd3VXQ081NUxKdVJRCmI1R0ZSbzhPNjNJNzA3M3ZDZ0V\"\n            + \"KdmNST09SdjJDYWhQbnBKbjc3bkhQdlV2Szl0M3JyRURhdi8vanA0UDN5REMKNEVNdHBScmduUXBXNmpJSWlRSUR\"\n            + \"BUUFCCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_Y64_CERT2 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BMEdDU3FHU0liM0RR\"\n            + \"RUJBUVVBQTRHTkFEQ0JpUUtCZ1FEbmZsZVZ4d293aitRWStjQi8rbWs5YXZYZgpHUWVpTTdOMlMwby9LV3FWK2h\"\n            + \"GVWtDZkExMWxEYVJoZUY0alFhSzVaM2pPUE9nbklOZE5hd3VXQ081NUxKdVJRCmI1R0ZSbzhPNjNJNzA3M3ZDZ0V\"\n            + \"KdmNST09SdjJDYWhQbnBKbjc3bkhQdlV2Szl0M3JyRURhdi8vanA0UDN5REMKNEVNdHBScmduUXBXNmpJSWlRSUR\"\n            + \"BUUFCCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\"", "var_name": "ZTS_Y64_CERT2"}, {"original_string": "private static final String ZTS_PEM_CERT2 = \"-----BEGIN PUBLIC KEY-----\\n\"\n            + \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDnfleVxwowj+QY+cB/+mk9avXf\\n\"\n            + \"GQeiM7N2S0o/KWqV+hFUkCfA11lDaRheF4jQaK5Z3jOPOgnINdNawuWCO55LJuRQ\\n\"\n            + \"b5GFRo8O63I7073vCgEJvcROORv2CahPnpJn77nHPvUvK9t3rrEDav//jp4P3yDC\\n\"\n            + \"4EMtpRrgnQpW6jIIiQIDAQAB\\n\"\n            + \"-----END PUBLIC KEY-----\\n\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_PEM_CERT2 = \"-----BEGIN PUBLIC KEY-----\\n\"\n            + \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDnfleVxwowj+QY+cB/+mk9avXf\\n\"\n            + \"GQeiM7N2S0o/KWqV+hFUkCfA11lDaRheF4jQaK5Z3jOPOgnINdNawuWCO55LJuRQ\\n\"\n            + \"b5GFRo8O63I7073vCgEJvcROORv2CahPnpJn77nHPvUvK9t3rrEDav//jp4P3yDC\\n\"\n            + \"4EMtpRrgnQpW6jIIiQIDAQAB\\n\"\n            + \"-----END PUBLIC KEY-----\\n\"", "var_name": "ZTS_PEM_CERT2"}, {"original_string": "private static final String ZTS_Y64_CERT3 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BMEdDU3FHU0liM0RR\"\n            + \"RUJBUVVBQTRHTkFEQ0JpUUtCZ1FETWRqSmUwY01wSGR4ZEJKTDcvR2poNTNVUAp5WTdVQ2VlYnZUa2M2S1ZmR0\"\n            + \"RnVVlrMUhtaWJ5U21lbnZOYitkNkhXQ1YySGVicUptN1krL2VuaFNkcTR3QTJrCnFtdmFHY09rV1R2cUU2a2J1\"\n            + \"MG5LemdUK21jck1sOVpqTHdBQXZPS1hTRi82MTJxQ0tlSElRd3ZtWlB1RkJJTjEKUnFteWgwT0k1aHN5VS9nYj\"\n            + \"Z3SURBUUFCCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_Y64_CERT3 = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHZk1BMEdDU3FHU0liM0RR\"\n            + \"RUJBUVVBQTRHTkFEQ0JpUUtCZ1FETWRqSmUwY01wSGR4ZEJKTDcvR2poNTNVUAp5WTdVQ2VlYnZUa2M2S1ZmR0\"\n            + \"RnVVlrMUhtaWJ5U21lbnZOYitkNkhXQ1YySGVicUptN1krL2VuaFNkcTR3QTJrCnFtdmFHY09rV1R2cUU2a2J1\"\n            + \"MG5LemdUK21jck1sOVpqTHdBQXZPS1hTRi82MTJxQ0tlSElRd3ZtWlB1RkJJTjEKUnFteWgwT0k1aHN5VS9nYj\"\n            + \"Z3SURBUUFCCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo-\"", "var_name": "ZTS_Y64_CERT3"}, {"original_string": "private static final String ZTS_PEM_CERT3 = \"-----BEGIN PUBLIC KEY-----\\n\"\n            + \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMdjJe0cMpHdxdBJL7/Gjh53UP\\n\"\n            + \"yY7UCeebvTkc6KVfGDgUYk1HmibySmenvNb+d6HWCV2HebqJm7Y+/enhSdq4wA2k\\n\"\n            + \"qmvaGcOkWTvqE6kbu0nKzgT+mcrMl9ZjLwAAvOKXSF/612qCKeHIQwvmZPuFBIN1\\n\"\n            + \"Rqmyh0OI5hsyU/gb6wIDAQAB\\n\"\n            + \"-----END PUBLIC KEY-----\\n\";", "modifier": "private static final", "type": "String", "declarator": "ZTS_PEM_CERT3 = \"-----BEGIN PUBLIC KEY-----\\n\"\n            + \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMdjJe0cMpHdxdBJL7/Gjh53UP\\n\"\n            + \"yY7UCeebvTkc6KVfGDgUYk1HmibySmenvNb+d6HWCV2HebqJm7Y+/enhSdq4wA2k\\n\"\n            + \"qmvaGcOkWTvqE6kbu0nKzgT+mcrMl9ZjLwAAvOKXSF/612qCKeHIQwvmZPuFBIN1\\n\"\n            + \"Rqmyh0OI5hsyU/gb6wIDAQAB\\n\"\n            + \"-----END PUBLIC KEY-----\\n\"", "var_name": "ZTS_PEM_CERT3"}], "file": "servers/zts/src/test/java/com/yahoo/athenz/zts/cache/DataCacheTest.java"}, "test_case": {"identifier": "testProcessRoleMembers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcessRoleMembers() {\n        \n        List<RoleMember> members1 = new ArrayList<>();\n        members1.add(new RoleMember().setMemberName(\"user_domain.user1\"));\n        members1.add(new RoleMember().setMemberName(\"user_domain.user2\"));\n        members1.add(new RoleMember().setMemberName(\"user_domain.user3\").setSystemDisabled(1));\n\n        DataCache cache = new DataCache();\n        cache.processRoleMembers(\"dom.role1\", members1);\n        \n        Set<MemberRole> set1 = cache.getMemberRoleSet(\"user_domain.user1\");\n        assertNotNull(set1);\n        assertTrue(set1.contains(new MemberRole(\"dom.role1\", 0)));\n        assertEquals(set1.size(), 1);\n        \n        Set<MemberRole> set2 = cache.getMemberRoleSet(\"user_domain.user2\");\n        assertNotNull(set2);\n        assertTrue(set2.contains(new MemberRole(\"dom.role1\", 0)));\n        assertEquals(set2.size(), 1);\n\n        Set<MemberRole> set3 = cache.getMemberRoleSet(\"user_domain.user3\");\n        assertNull(set3);\n    }", "signature": "void testProcessRoleMembers()", "full_signature": "@Test public void testProcessRoleMembers()", "class_method_signature": "DataCacheTest.testProcessRoleMembers()", "testcase": true, "constructor": false, "invocations": ["add", "setMemberName", "add", "setMemberName", "add", "setSystemDisabled", "setMemberName", "processRoleMembers", "getMemberRoleSet", "assertNotNull", "assertTrue", "contains", "assertEquals", "size", "getMemberRoleSet", "assertNotNull", "assertTrue", "contains", "assertEquals", "size", "getMemberRoleSet", "assertNull"]}, "focal_class": {"identifier": "DataCache", "superclass": "", "interfaces": "", "fields": [{"original_string": "DomainData domainData = null;", "modifier": "", "type": "DomainData", "declarator": "domainData = null", "var_name": "domainData"}, {"original_string": "private final Map<String, Set<MemberRole>> memberRoleCache;", "modifier": "private final", "type": "Map<String, Set<MemberRole>>", "declarator": "memberRoleCache", "var_name": "memberRoleCache"}, {"original_string": "private final Map<String, Set<MemberRole>> memberPrefixRoleCache;", "modifier": "private final", "type": "Map<String, Set<MemberRole>>", "declarator": "memberPrefixRoleCache", "var_name": "memberPrefixRoleCache"}, {"original_string": "private final Set<MemberRole> memberAllRoleCache;", "modifier": "private final", "type": "Set<MemberRole>", "declarator": "memberAllRoleCache", "var_name": "memberAllRoleCache"}, {"original_string": "private final Map<String, Set<String>> trustCache;", "modifier": "private final", "type": "Map<String, Set<String>>", "declarator": "trustCache", "var_name": "trustCache"}, {"original_string": "private final Map<String, Set<String>> hostCache;", "modifier": "private final", "type": "Map<String, Set<String>>", "declarator": "hostCache", "var_name": "hostCache"}, {"original_string": "private final Map<String, RoleMeta> roleMetaCache;", "modifier": "private final", "type": "Map<String, RoleMeta>", "declarator": "roleMetaCache", "var_name": "roleMetaCache"}, {"original_string": "private final Map<String, Set<String>> awsRoleCache;", "modifier": "private final", "type": "Map<String, Set<String>>", "declarator": "awsRoleCache", "var_name": "awsRoleCache"}, {"original_string": "private final Map<String, String> publicKeyCache;", "modifier": "private final", "type": "Map<String, String>", "declarator": "publicKeyCache", "var_name": "publicKeyCache"}, {"original_string": "private final Map<String, List<String>> providerDnsSuffixCache;", "modifier": "private final", "type": "Map<String, List<String>>", "declarator": "providerDnsSuffixCache", "var_name": "providerDnsSuffixCache"}, {"original_string": "private final Map<String, List<String>> providerHostnameAllowedSuffixCache;", "modifier": "private final", "type": "Map<String, List<String>>", "declarator": "providerHostnameAllowedSuffixCache", "var_name": "providerHostnameAllowedSuffixCache"}, {"original_string": "private final Map<String, List<String>> providerHostnameDeniedSuffixCache;", "modifier": "private final", "type": "Map<String, List<String>>", "declarator": "providerHostnameDeniedSuffixCache", "var_name": "providerHostnameDeniedSuffixCache"}, {"original_string": "public static final String ACTION_ASSUME_ROLE = \"assume_role\";", "modifier": "public static final", "type": "String", "declarator": "ACTION_ASSUME_ROLE = \"assume_role\"", "var_name": "ACTION_ASSUME_ROLE"}, {"original_string": "public static final String ACTION_ASSUME_AWS_ROLE = \"assume_aws_role\";", "modifier": "public static final", "type": "String", "declarator": "ACTION_ASSUME_AWS_ROLE = \"assume_aws_role\"", "var_name": "ACTION_ASSUME_AWS_ROLE"}, {"original_string": "public static final String ACTION_LAUNCH = \"launch\";", "modifier": "public static final", "type": "String", "declarator": "ACTION_LAUNCH = \"launch\"", "var_name": "ACTION_LAUNCH"}, {"original_string": "public static final String RESOURCE_DNS_PREFIX = \"sys.auth:dns.\";", "modifier": "public static final", "type": "String", "declarator": "RESOURCE_DNS_PREFIX = \"sys.auth:dns.\"", "var_name": "RESOURCE_DNS_PREFIX"}, {"original_string": "public static final String RESOURCE_HOSTNAME_PREFIX = \"sys.auth:hostname.\";", "modifier": "public static final", "type": "String", "declarator": "RESOURCE_HOSTNAME_PREFIX = \"sys.auth:hostname.\"", "var_name": "RESOURCE_HOSTNAME_PREFIX"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(DataCache.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(DataCache.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "DataCache", "parameters": "()", "modifiers": "public", "return": "", "signature": " DataCache()", "full_signature": "public  DataCache()", "class_method_signature": "DataCache.DataCache()", "testcase": false, "constructor": true}, {"identifier": "setDomainData", "parameters": "(DomainData domainData)", "modifiers": "public", "return": "void", "signature": "void setDomainData(DomainData domainData)", "full_signature": "public void setDomainData(DomainData domainData)", "class_method_signature": "DataCache.setDomainData(DomainData domainData)", "testcase": false, "constructor": false}, {"identifier": "getDomainData", "parameters": "()", "modifiers": "public", "return": "DomainData", "signature": "DomainData getDomainData()", "full_signature": "public DomainData getDomainData()", "class_method_signature": "DataCache.getDomainData()", "testcase": false, "constructor": false}, {"identifier": "processRoleMembers", "parameters": "(String roleName, List<RoleMember> members)", "modifiers": "", "return": "void", "signature": "void processRoleMembers(String roleName, List<RoleMember> members)", "full_signature": " void processRoleMembers(String roleName, List<RoleMember> members)", "class_method_signature": "DataCache.processRoleMembers(String roleName, List<RoleMember> members)", "testcase": false, "constructor": false}, {"identifier": "processRoleMeta", "parameters": "(Role role)", "modifiers": "", "return": "void", "signature": "void processRoleMeta(Role role)", "full_signature": " void processRoleMeta(Role role)", "class_method_signature": "DataCache.processRoleMeta(Role role)", "testcase": false, "constructor": false}, {"identifier": "processRoleTrustDomain", "parameters": "(String roleName, String trustDomain)", "modifiers": "", "return": "void", "signature": "void processRoleTrustDomain(String roleName, String trustDomain)", "full_signature": " void processRoleTrustDomain(String roleName, String trustDomain)", "class_method_signature": "DataCache.processRoleTrustDomain(String roleName, String trustDomain)", "testcase": false, "constructor": false}, {"identifier": "processRole", "parameters": "(Role role)", "modifiers": "public", "return": "void", "signature": "void processRole(Role role)", "full_signature": "public void processRole(Role role)", "class_method_signature": "DataCache.processRole(Role role)", "testcase": false, "constructor": false}, {"identifier": "setRoleMemberGroupType", "parameters": "(List<RoleMember> roleMembers)", "modifiers": "", "return": "void", "signature": "void setRoleMemberGroupType(List<RoleMember> roleMembers)", "full_signature": " void setRoleMemberGroupType(List<RoleMember> roleMembers)", "class_method_signature": "DataCache.setRoleMemberGroupType(List<RoleMember> roleMembers)", "testcase": false, "constructor": false}, {"identifier": "processProviderSuffixAssertion", "parameters": "(Assertion assertion, AssertionEffect effect, Map<String, Role> roles,\n            final String resoourceSuffix, Map<String, List<String>> providerSuffixCache)", "modifiers": "", "return": "void", "signature": "void processProviderSuffixAssertion(Assertion assertion, AssertionEffect effect, Map<String, Role> roles,\n            final String resoourceSuffix, Map<String, List<String>> providerSuffixCache)", "full_signature": " void processProviderSuffixAssertion(Assertion assertion, AssertionEffect effect, Map<String, Role> roles,\n            final String resoourceSuffix, Map<String, List<String>> providerSuffixCache)", "class_method_signature": "DataCache.processProviderSuffixAssertion(Assertion assertion, AssertionEffect effect, Map<String, Role> roles,\n            final String resoourceSuffix, Map<String, List<String>> providerSuffixCache)", "testcase": false, "constructor": false}, {"identifier": "processAssumeRoleAssertion", "parameters": "(Assertion assertion, Map<String, Role> roles)", "modifiers": "", "return": "void", "signature": "void processAssumeRoleAssertion(Assertion assertion, Map<String, Role> roles)", "full_signature": " void processAssumeRoleAssertion(Assertion assertion, Map<String, Role> roles)", "class_method_signature": "DataCache.processAssumeRoleAssertion(Assertion assertion, Map<String, Role> roles)", "testcase": false, "constructor": false}, {"identifier": "processAWSAssumeRoleAssertion", "parameters": "(Assertion assertion)", "modifiers": "", "return": "void", "signature": "void processAWSAssumeRoleAssertion(Assertion assertion)", "full_signature": " void processAWSAssumeRoleAssertion(Assertion assertion)", "class_method_signature": "DataCache.processAWSAssumeRoleAssertion(Assertion assertion)", "testcase": false, "constructor": false}, {"identifier": "processLaunchAssertion", "parameters": "(final String domainName, Assertion assertion, Map<String, Role> roles)", "modifiers": "", "return": "void", "signature": "void processLaunchAssertion(final String domainName, Assertion assertion, Map<String, Role> roles)", "full_signature": " void processLaunchAssertion(final String domainName, Assertion assertion, Map<String, Role> roles)", "class_method_signature": "DataCache.processLaunchAssertion(final String domainName, Assertion assertion, Map<String, Role> roles)", "testcase": false, "constructor": false}, {"identifier": "processPolicy", "parameters": "(String domainName, Policy policy, Map<String, Role> roles)", "modifiers": "public", "return": "void", "signature": "void processPolicy(String domainName, Policy policy, Map<String, Role> roles)", "full_signature": "public void processPolicy(String domainName, Policy policy, Map<String, Role> roles)", "class_method_signature": "DataCache.processPolicy(String domainName, Policy policy, Map<String, Role> roles)", "testcase": false, "constructor": false}, {"identifier": "processServiceIdentityHosts", "parameters": "(String serviceName, List<String> hosts)", "modifiers": "", "return": "void", "signature": "void processServiceIdentityHosts(String serviceName, List<String> hosts)", "full_signature": " void processServiceIdentityHosts(String serviceName, List<String> hosts)", "class_method_signature": "DataCache.processServiceIdentityHosts(String serviceName, List<String> hosts)", "testcase": false, "constructor": false}, {"identifier": "generateServiceKeyName", "parameters": "(String service, String keyId)", "modifiers": "", "return": "String", "signature": "String generateServiceKeyName(String service, String keyId)", "full_signature": " String generateServiceKeyName(String service, String keyId)", "class_method_signature": "DataCache.generateServiceKeyName(String service, String keyId)", "testcase": false, "constructor": false}, {"identifier": "processServiceIdentityPublicKey", "parameters": "(String serviceName, String keyId, String publicKey)", "modifiers": "", "return": "void", "signature": "void processServiceIdentityPublicKey(String serviceName, String keyId, String publicKey)", "full_signature": " void processServiceIdentityPublicKey(String serviceName, String keyId, String publicKey)", "class_method_signature": "DataCache.processServiceIdentityPublicKey(String serviceName, String keyId, String publicKey)", "testcase": false, "constructor": false}, {"identifier": "processServiceIdentityPublicKeys", "parameters": "(String serviceName, List<PublicKeyEntry> publicKeys)", "modifiers": "", "return": "void", "signature": "void processServiceIdentityPublicKeys(String serviceName, List<PublicKeyEntry> publicKeys)", "full_signature": " void processServiceIdentityPublicKeys(String serviceName, List<PublicKeyEntry> publicKeys)", "class_method_signature": "DataCache.processServiceIdentityPublicKeys(String serviceName, List<PublicKeyEntry> publicKeys)", "testcase": false, "constructor": false}, {"identifier": "processServiceIdentity", "parameters": "(com.yahoo.athenz.zms.ServiceIdentity service)", "modifiers": "public", "return": "void", "signature": "void processServiceIdentity(com.yahoo.athenz.zms.ServiceIdentity service)", "full_signature": "public void processServiceIdentity(com.yahoo.athenz.zms.ServiceIdentity service)", "class_method_signature": "DataCache.processServiceIdentity(com.yahoo.athenz.zms.ServiceIdentity service)", "testcase": false, "constructor": false}, {"identifier": "getMemberRoleSet", "parameters": "(final String member)", "modifiers": "public", "return": "Set<MemberRole>", "signature": "Set<MemberRole> getMemberRoleSet(final String member)", "full_signature": "public Set<MemberRole> getMemberRoleSet(final String member)", "class_method_signature": "DataCache.getMemberRoleSet(final String member)", "testcase": false, "constructor": false}, {"identifier": "getProviderDnsSuffixList", "parameters": "(final String provider)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getProviderDnsSuffixList(final String provider)", "full_signature": "public List<String> getProviderDnsSuffixList(final String provider)", "class_method_signature": "DataCache.getProviderDnsSuffixList(final String provider)", "testcase": false, "constructor": false}, {"identifier": "getProviderHostnameAllowedSuffixList", "parameters": "(final String provider)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getProviderHostnameAllowedSuffixList(final String provider)", "full_signature": "public List<String> getProviderHostnameAllowedSuffixList(final String provider)", "class_method_signature": "DataCache.getProviderHostnameAllowedSuffixList(final String provider)", "testcase": false, "constructor": false}, {"identifier": "getProviderHostnameDeniedSuffixList", "parameters": "(final String provider)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getProviderHostnameDeniedSuffixList(final String provider)", "full_signature": "public List<String> getProviderHostnameDeniedSuffixList(final String provider)", "class_method_signature": "DataCache.getProviderHostnameDeniedSuffixList(final String provider)", "testcase": false, "constructor": false}, {"identifier": "getAllMemberRoleSet", "parameters": "()", "modifiers": "public", "return": "Set<MemberRole>", "signature": "Set<MemberRole> getAllMemberRoleSet()", "full_signature": "public Set<MemberRole> getAllMemberRoleSet()", "class_method_signature": "DataCache.getAllMemberRoleSet()", "testcase": false, "constructor": false}, {"identifier": "getPrefixMemberRoleSetMap", "parameters": "()", "modifiers": "public", "return": "Map<String, Set<MemberRole>>", "signature": "Map<String, Set<MemberRole>> getPrefixMemberRoleSetMap()", "full_signature": "public Map<String, Set<MemberRole>> getPrefixMemberRoleSetMap()", "class_method_signature": "DataCache.getPrefixMemberRoleSetMap()", "testcase": false, "constructor": false}, {"identifier": "getMemberCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMemberCount()", "full_signature": "public int getMemberCount()", "class_method_signature": "DataCache.getMemberCount()", "testcase": false, "constructor": false}, {"identifier": "getAWSResourceRoleSet", "parameters": "(String role)", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getAWSResourceRoleSet(String role)", "full_signature": "public Set<String> getAWSResourceRoleSet(String role)", "class_method_signature": "DataCache.getAWSResourceRoleSet(String role)", "testcase": false, "constructor": false}, {"identifier": "getRoleMeta", "parameters": "(String role)", "modifiers": "public", "return": "RoleMeta", "signature": "RoleMeta getRoleMeta(String role)", "full_signature": "public RoleMeta getRoleMeta(String role)", "class_method_signature": "DataCache.getRoleMeta(String role)", "testcase": false, "constructor": false}, {"identifier": "getTrustMap", "parameters": "()", "modifiers": "public", "return": "Map<String, Set<String>>", "signature": "Map<String, Set<String>> getTrustMap()", "full_signature": "public Map<String, Set<String>> getTrustMap()", "class_method_signature": "DataCache.getTrustMap()", "testcase": false, "constructor": false}, {"identifier": "getHostMap", "parameters": "()", "modifiers": "public", "return": "Map<String, Set<String>>", "signature": "Map<String, Set<String>> getHostMap()", "full_signature": "public Map<String, Set<String>> getHostMap()", "class_method_signature": "DataCache.getHostMap()", "testcase": false, "constructor": false}, {"identifier": "getPublicKeyMap", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getPublicKeyMap()", "full_signature": "public Map<String, String> getPublicKeyMap()", "class_method_signature": "DataCache.getPublicKeyMap()", "testcase": false, "constructor": false}, {"identifier": "getProviderDnsSuffixCache", "parameters": "()", "modifiers": "public", "return": "Map<String, List<String>>", "signature": "Map<String, List<String>> getProviderDnsSuffixCache()", "full_signature": "public Map<String, List<String>> getProviderDnsSuffixCache()", "class_method_signature": "DataCache.getProviderDnsSuffixCache()", "testcase": false, "constructor": false}, {"identifier": "getProviderHostnameAllowedSuffixCache", "parameters": "()", "modifiers": "public", "return": "Map<String, List<String>>", "signature": "Map<String, List<String>> getProviderHostnameAllowedSuffixCache()", "full_signature": "public Map<String, List<String>> getProviderHostnameAllowedSuffixCache()", "class_method_signature": "DataCache.getProviderHostnameAllowedSuffixCache()", "testcase": false, "constructor": false}, {"identifier": "getProviderHostnameDeniedSuffixCache", "parameters": "()", "modifiers": "public", "return": "Map<String, List<String>>", "signature": "Map<String, List<String>> getProviderHostnameDeniedSuffixCache()", "full_signature": "public Map<String, List<String>> getProviderHostnameDeniedSuffixCache()", "class_method_signature": "DataCache.getProviderHostnameDeniedSuffixCache()", "testcase": false, "constructor": false}], "file": "servers/zts/src/main/java/com/yahoo/athenz/zts/cache/DataCache.java"}, "focal_method": {"identifier": "processRoleMembers", "parameters": "(String roleName, List<RoleMember> members)", "modifiers": "", "return": "void", "body": "void processRoleMembers(String roleName, List<RoleMember> members) {\n        \n        // early out\n        \n        if (members == null) {\n            return;\n        }\n        \n        // memberRoleCache: add members\n\n        long currentTime = System.currentTimeMillis();\n        for (RoleMember member : members) {\n            \n            // if the role member is disabled then we'll skip it\n\n            if (AuthzHelper.isMemberDisabled(member.getSystemDisabled())) {\n                continue;\n            }\n\n            // if the role member is already expired then there\n            // is no point to add it to the cache\n\n            long expiration = member.getExpiration() == null ? 0 : member.getExpiration().millis();\n            if (expiration != 0 && expiration < currentTime) {\n                continue;\n            }\n            \n            // we're going to process 3 types of members\n            // * - all members have access to these roles\n            // <prefix>* - members with the key name prefix\n            // <member> - regular members\n            \n            final String memberName = member.getMemberName();\n            if (memberName.equals(\"*\")) {\n                memberAllRoleCache.add(new MemberRole(roleName, expiration));\n            } else if (memberName.endsWith(\"*\")) {\n                final String keyName = memberName.substring(0, memberName.length() - 1);\n                if (!memberPrefixRoleCache.containsKey(keyName)) {\n                    memberPrefixRoleCache.put(keyName, new HashSet<>());\n                }\n                final Set<MemberRole> rolesForMember = memberPrefixRoleCache.get(keyName);\n                rolesForMember.add(new MemberRole(roleName, expiration));\n            } else {\n                if (!memberRoleCache.containsKey(memberName)) {\n                    memberRoleCache.put(memberName, new HashSet<>());\n                }\n                final Set<MemberRole> rolesForMember = memberRoleCache.get(memberName);\n                rolesForMember.add(new MemberRole(roleName, expiration));\n            }\n        }\n    }", "signature": "void processRoleMembers(String roleName, List<RoleMember> members)", "full_signature": " void processRoleMembers(String roleName, List<RoleMember> members)", "class_method_signature": "DataCache.processRoleMembers(String roleName, List<RoleMember> members)", "testcase": false, "constructor": false, "invocations": ["currentTimeMillis", "isMemberDisabled", "getSystemDisabled", "getExpiration", "millis", "getExpiration", "getMemberName", "equals", "add", "endsWith", "substring", "length", "containsKey", "put", "get", "add", "containsKey", "put", "get", "add"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}