{"test_class": {"identifier": "FileZipperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@TempDir\n    Path folder;", "modifier": "@TempDir", "type": "Path", "declarator": "folder", "var_name": "folder"}, {"original_string": "final FileZipper fileZipper = new FileZipper();", "modifier": "final", "type": "FileZipper", "declarator": "fileZipper = new FileZipper()", "var_name": "fileZipper"}, {"original_string": "private final String fileName = \"file.txt\";", "modifier": "private final", "type": "String", "declarator": "fileName = \"file.txt\"", "var_name": "fileName"}, {"original_string": "private final List<String> lines = Arrays.asList(\"text text text\");", "modifier": "private final", "type": "List<String>", "declarator": "lines = Arrays.asList(\"text text text\")", "var_name": "lines"}, {"original_string": "private String filePath;", "modifier": "private", "type": "String", "declarator": "filePath", "var_name": "filePath"}], "file": "osgp/shared/shared/src/test/java/org/opensmartgridplatform/shared/utils/FileZipperTest.java"}, "test_case": {"identifier": "createAndValidateZipFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createAndValidateZipFile() throws IOException {\n        final String zipFilePath = this.fileZipper.compressFile(this.filePath);\n        assertThat(zipFilePath).isEqualTo(this.filePath + \".zip\");\n\n        final File zipFile = new File(zipFilePath);\n        assertThat(zipFile).isNotNull();\n        assertThat(zipFile.exists()).isTrue();\n\n        this.validateZipFileContent(zipFile);\n    }", "signature": "void createAndValidateZipFile()", "full_signature": "@Test public void createAndValidateZipFile()", "class_method_signature": "FileZipperTest.createAndValidateZipFile()", "testcase": true, "constructor": false, "invocations": ["compressFile", "isEqualTo", "assertThat", "isNotNull", "assertThat", "isTrue", "assertThat", "exists", "validateZipFileContent"]}, "focal_class": {"identifier": "FileZipper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(FileZipper.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(FileZipper.class)", "var_name": "LOGGER"}, {"original_string": "private static final int ONE_MB = 1 * 1024 * 1024;", "modifier": "private static final", "type": "int", "declarator": "ONE_MB = 1 * 1024 * 1024", "var_name": "ONE_MB"}, {"original_string": "private static final String ZIP = \".zip\";", "modifier": "private static final", "type": "String", "declarator": "ZIP = \".zip\"", "var_name": "ZIP"}, {"original_string": "private final int compressionLevel;", "modifier": "private final", "type": "int", "declarator": "compressionLevel", "var_name": "compressionLevel"}, {"original_string": "private final boolean removeInputFile;", "modifier": "private final", "type": "boolean", "declarator": "removeInputFile", "var_name": "removeInputFile"}], "methods": [{"identifier": "FileZipper", "parameters": "()", "modifiers": "public", "return": "", "signature": " FileZipper()", "full_signature": "public  FileZipper()", "class_method_signature": "FileZipper.FileZipper()", "testcase": false, "constructor": true}, {"identifier": "FileZipper", "parameters": "(final int compressionLevel, final boolean removeInputFile)", "modifiers": "public", "return": "", "signature": " FileZipper(final int compressionLevel, final boolean removeInputFile)", "full_signature": "public  FileZipper(final int compressionLevel, final boolean removeInputFile)", "class_method_signature": "FileZipper.FileZipper(final int compressionLevel, final boolean removeInputFile)", "testcase": false, "constructor": true}, {"identifier": "getCompressionLevel", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCompressionLevel()", "full_signature": "public int getCompressionLevel()", "class_method_signature": "FileZipper.getCompressionLevel()", "testcase": false, "constructor": false}, {"identifier": "isRemoveInputFile", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRemoveInputFile()", "full_signature": "public boolean isRemoveInputFile()", "class_method_signature": "FileZipper.isRemoveInputFile()", "testcase": false, "constructor": false}, {"identifier": "compressFileUsingDefaultSettings", "parameters": "(final String filePath)", "modifiers": "public static", "return": "String", "signature": "String compressFileUsingDefaultSettings(final String filePath)", "full_signature": "public static String compressFileUsingDefaultSettings(final String filePath)", "class_method_signature": "FileZipper.compressFileUsingDefaultSettings(final String filePath)", "testcase": false, "constructor": false}, {"identifier": "compressFile", "parameters": "(final String filePath)", "modifiers": "public", "return": "String", "signature": "String compressFile(final String filePath)", "full_signature": "public String compressFile(final String filePath)", "class_method_signature": "FileZipper.compressFile(final String filePath)", "testcase": false, "constructor": false}, {"identifier": "compressFile", "parameters": "(final String filePath, final int inMemoryBufferSize)", "modifiers": "public", "return": "String", "signature": "String compressFile(final String filePath, final int inMemoryBufferSize)", "full_signature": "public String compressFile(final String filePath, final int inMemoryBufferSize)", "class_method_signature": "FileZipper.compressFile(final String filePath, final int inMemoryBufferSize)", "testcase": false, "constructor": false}, {"identifier": "compressFile", "parameters": "(final String inputFilePath, final String outputFilePath)", "modifiers": "public", "return": "String", "signature": "String compressFile(final String inputFilePath, final String outputFilePath)", "full_signature": "public String compressFile(final String inputFilePath, final String outputFilePath)", "class_method_signature": "FileZipper.compressFile(final String inputFilePath, final String outputFilePath)", "testcase": false, "constructor": false}, {"identifier": "compressFile", "parameters": "(final String inputFilePath, final String outputFilePath, final int inMemoryBufferSize)", "modifiers": "public", "return": "String", "signature": "String compressFile(final String inputFilePath, final String outputFilePath, final int inMemoryBufferSize)", "full_signature": "public String compressFile(final String inputFilePath, final String outputFilePath, final int inMemoryBufferSize)", "class_method_signature": "FileZipper.compressFile(final String inputFilePath, final String outputFilePath, final int inMemoryBufferSize)", "testcase": false, "constructor": false}, {"identifier": "getZipFilePath", "parameters": "(final String filePath)", "modifiers": "private", "return": "String", "signature": "String getZipFilePath(final String filePath)", "full_signature": "private String getZipFilePath(final String filePath)", "class_method_signature": "FileZipper.getZipFilePath(final String filePath)", "testcase": false, "constructor": false}, {"identifier": "getZipEntryName", "parameters": "(final String inputFilePath)", "modifiers": "private", "return": "String", "signature": "String getZipEntryName(final String inputFilePath)", "full_signature": "private String getZipEntryName(final String inputFilePath)", "class_method_signature": "FileZipper.getZipEntryName(final String inputFilePath)", "testcase": false, "constructor": false}, {"identifier": "doCompressFile", "parameters": "(final String inputFilePath, final String zipFilePath, final String zipEntryName,\n            final int inMemoryBufferSize)", "modifiers": "private", "return": "void", "signature": "void doCompressFile(final String inputFilePath, final String zipFilePath, final String zipEntryName,\n            final int inMemoryBufferSize)", "full_signature": "private void doCompressFile(final String inputFilePath, final String zipFilePath, final String zipEntryName,\n            final int inMemoryBufferSize)", "class_method_signature": "FileZipper.doCompressFile(final String inputFilePath, final String zipFilePath, final String zipEntryName,\n            final int inMemoryBufferSize)", "testcase": false, "constructor": false}, {"identifier": "doRemoveInputFile", "parameters": "(final String inputFilePath)", "modifiers": "private", "return": "void", "signature": "void doRemoveInputFile(final String inputFilePath)", "full_signature": "private void doRemoveInputFile(final String inputFilePath)", "class_method_signature": "FileZipper.doRemoveInputFile(final String inputFilePath)", "testcase": false, "constructor": false}, {"identifier": "createZipOutputStream", "parameters": "(final String zipFilePath)", "modifiers": "private", "return": "ZipOutputStream", "signature": "ZipOutputStream createZipOutputStream(final String zipFilePath)", "full_signature": "private ZipOutputStream createZipOutputStream(final String zipFilePath)", "class_method_signature": "FileZipper.createZipOutputStream(final String zipFilePath)", "testcase": false, "constructor": false}, {"identifier": "createZipEntry", "parameters": "(final String zipEntryName, final ZipOutputStream zipOutputStream)", "modifiers": "private", "return": "ZipEntry", "signature": "ZipEntry createZipEntry(final String zipEntryName, final ZipOutputStream zipOutputStream)", "full_signature": "private ZipEntry createZipEntry(final String zipEntryName, final ZipOutputStream zipOutputStream)", "class_method_signature": "FileZipper.createZipEntry(final String zipEntryName, final ZipOutputStream zipOutputStream)", "testcase": false, "constructor": false}, {"identifier": "writeZipFile", "parameters": "(final FileInputStream fileInputStream, final ZipOutputStream zipOutputStream,\n            final int inMemoryBufferSize)", "modifiers": "private", "return": "void", "signature": "void writeZipFile(final FileInputStream fileInputStream, final ZipOutputStream zipOutputStream,\n            final int inMemoryBufferSize)", "full_signature": "private void writeZipFile(final FileInputStream fileInputStream, final ZipOutputStream zipOutputStream,\n            final int inMemoryBufferSize)", "class_method_signature": "FileZipper.writeZipFile(final FileInputStream fileInputStream, final ZipOutputStream zipOutputStream,\n            final int inMemoryBufferSize)", "testcase": false, "constructor": false}], "file": "osgp/shared/shared/src/main/java/org/opensmartgridplatform/shared/utils/FileZipper.java"}, "focal_method": {"identifier": "compressFile", "parameters": "(final String filePath)", "modifiers": "public", "return": "String", "body": "public String compressFile(final String filePath) throws IOException {\n        return this.compressFile(filePath, ONE_MB);\n    }", "signature": "String compressFile(final String filePath)", "full_signature": "public String compressFile(final String filePath)", "class_method_signature": "FileZipper.compressFile(final String filePath)", "testcase": false, "constructor": false, "invocations": ["compressFile"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}