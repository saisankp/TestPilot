{"test_class": {"identifier": "JGrafanaTest", "superclass": "", "interfaces": "", "fields": [], "file": "grafana-api/src/test/java/org/kie/kogito/grafana/JGrafanaTest.java"}, "test_case": {"identifier": "givenANewContextWhenANewJGrafanaObjectIsCreatedThenTheDefaultObjectIsCreated", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void givenANewContextWhenANewJGrafanaObjectIsCreatedThenTheDefaultObjectIsCreated() {\n        // Arrange\n        JGrafana grafanaObj = new JGrafana(\"My Dashboard\");\n\n        // Assert\n        assertEquals(0, grafanaObj.getDashboard().panels.size());\n    }", "signature": "void givenANewContextWhenANewJGrafanaObjectIsCreatedThenTheDefaultObjectIsCreated()", "full_signature": "@Test public void givenANewContextWhenANewJGrafanaObjectIsCreatedThenTheDefaultObjectIsCreated()", "class_method_signature": "JGrafanaTest.givenANewContextWhenANewJGrafanaObjectIsCreatedThenTheDefaultObjectIsCreated()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "size", "getDashboard"]}, "focal_class": {"identifier": "JGrafana", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GrafanaDashboard dashboard;", "modifier": "private", "type": "GrafanaDashboard", "declarator": "dashboard", "var_name": "dashboard"}], "methods": [{"identifier": "JGrafana", "parameters": "(String title)", "modifiers": "public", "return": "", "signature": " JGrafana(String title)", "full_signature": "public  JGrafana(String title)", "class_method_signature": "JGrafana.JGrafana(String title)", "testcase": false, "constructor": true}, {"identifier": "JGrafana", "parameters": "(String title, String uuid)", "modifiers": "public", "return": "", "signature": " JGrafana(String title, String uuid)", "full_signature": "public  JGrafana(String title, String uuid)", "class_method_signature": "JGrafana.JGrafana(String title, String uuid)", "testcase": false, "constructor": true}, {"identifier": "JGrafana", "parameters": "(GrafanaDashboard dashboard)", "modifiers": "public", "return": "", "signature": " JGrafana(GrafanaDashboard dashboard)", "full_signature": "public  JGrafana(GrafanaDashboard dashboard)", "class_method_signature": "JGrafana.JGrafana(GrafanaDashboard dashboard)", "testcase": false, "constructor": true}, {"identifier": "parse", "parameters": "(String dashboard)", "modifiers": "public static", "return": "JGrafana", "signature": "JGrafana parse(String dashboard)", "full_signature": "public static JGrafana parse(String dashboard)", "class_method_signature": "JGrafana.parse(String dashboard)", "testcase": false, "constructor": false}, {"identifier": "getDashboard", "parameters": "()", "modifiers": "public", "return": "GrafanaDashboard", "signature": "GrafanaDashboard getDashboard()", "full_signature": "public GrafanaDashboard getDashboard()", "class_method_signature": "JGrafana.getDashboard()", "testcase": false, "constructor": false}, {"identifier": "addPanel", "parameters": "(PanelType type, String title, String expr)", "modifiers": "public", "return": "GrafanaPanel", "signature": "GrafanaPanel addPanel(PanelType type, String title, String expr)", "full_signature": "public GrafanaPanel addPanel(PanelType type, String title, String expr)", "class_method_signature": "JGrafana.addPanel(PanelType type, String title, String expr)", "testcase": false, "constructor": false}, {"identifier": "removePanelByTitle", "parameters": "(String title)", "modifiers": "public", "return": "boolean", "signature": "boolean removePanelByTitle(String title)", "full_signature": "public boolean removePanelByTitle(String title)", "class_method_signature": "JGrafana.removePanelByTitle(String title)", "testcase": false, "constructor": false}, {"identifier": "addPanel", "parameters": "(PanelType type, String title, String expr, SortedMap<Integer, GrafanaFunction> functions, List<YAxis> yaxes)", "modifiers": "public", "return": "GrafanaPanel", "signature": "GrafanaPanel addPanel(PanelType type, String title, String expr, SortedMap<Integer, GrafanaFunction> functions, List<YAxis> yaxes)", "full_signature": "public GrafanaPanel addPanel(PanelType type, String title, String expr, SortedMap<Integer, GrafanaFunction> functions, List<YAxis> yaxes)", "class_method_signature": "JGrafana.addPanel(PanelType type, String title, String expr, SortedMap<Integer, GrafanaFunction> functions, List<YAxis> yaxes)", "testcase": false, "constructor": false}, {"identifier": "getPanelByTitle", "parameters": "(String title)", "modifiers": "public", "return": "GrafanaPanel", "signature": "GrafanaPanel getPanelByTitle(String title)", "full_signature": "public GrafanaPanel getPanelByTitle(String title)", "class_method_signature": "JGrafana.getPanelByTitle(String title)", "testcase": false, "constructor": false}, {"identifier": "setTitle", "parameters": "(String title)", "modifiers": "public", "return": "JGrafana", "signature": "JGrafana setTitle(String title)", "full_signature": "public JGrafana setTitle(String title)", "class_method_signature": "JGrafana.setTitle(String title)", "testcase": false, "constructor": false}, {"identifier": "addLink", "parameters": "(String title, String url)", "modifiers": "public", "return": "JGrafana", "signature": "JGrafana addLink(String title, String url)", "full_signature": "public JGrafana addLink(String title, String url)", "class_method_signature": "JGrafana.addLink(String title, String url)", "testcase": false, "constructor": false}, {"identifier": "writeToFile", "parameters": "(File file)", "modifiers": "public", "return": "void", "signature": "void writeToFile(File file)", "full_signature": "public void writeToFile(File file)", "class_method_signature": "JGrafana.writeToFile(File file)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String serialize()", "full_signature": "public String serialize()", "class_method_signature": "JGrafana.serialize()", "testcase": false, "constructor": false}], "file": "grafana-api/src/main/java/org/kie/kogito/grafana/JGrafana.java"}, "focal_method": {"identifier": "getDashboard", "parameters": "()", "modifiers": "public", "return": "GrafanaDashboard", "body": "public GrafanaDashboard getDashboard() {\n        return dashboard;\n    }", "signature": "GrafanaDashboard getDashboard()", "full_signature": "public GrafanaDashboard getDashboard()", "class_method_signature": "JGrafana.getDashboard()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 174306645, "url": "https://github.com/kiegroup/kogito-runtimes", "stars": 78, "created": "3/7/2019 8:49:09 AM +00:00", "updates": "2020-01-26T20:41:49+00:00", "fork": "False", "license": "licensed"}}