{"test_class": {"identifier": "DocumentLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "DocumentLoader documentLoader = new DocumentLoader();", "modifier": "", "type": "DocumentLoader", "declarator": "documentLoader = new DocumentLoader()", "var_name": "documentLoader"}], "file": "component/core/src/test/java/fr/norad/visuwall/providers/common/DocumentLoaderTest.java"}, "test_case": {"identifier": "should_not_accept_null_parameter", "parameters": "()", "modifiers": "@Test(expected = NullPointerException.class) public", "return": "void", "body": "@Test(expected = NullPointerException.class)\n    public void should_not_accept_null_parameter() throws Exception {\n        documentLoader.loadFromUrl(null);\n    }", "signature": "void should_not_accept_null_parameter()", "full_signature": "@Test(expected = NullPointerException.class) public void should_not_accept_null_parameter()", "class_method_signature": "DocumentLoaderTest.should_not_accept_null_parameter()", "testcase": true, "constructor": false, "invocations": ["loadFromUrl"]}, "focal_class": {"identifier": "DocumentLoader", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "loadFromUrl", "parameters": "(String strUrl)", "modifiers": "public", "return": "Document", "signature": "Document loadFromUrl(String strUrl)", "full_signature": "public Document loadFromUrl(String strUrl)", "class_method_signature": "DocumentLoader.loadFromUrl(String strUrl)", "testcase": false, "constructor": false}, {"identifier": "loadFromContent", "parameters": "(String pomContent)", "modifiers": "public", "return": "Document", "signature": "Document loadFromContent(String pomContent)", "full_signature": "public Document loadFromContent(String pomContent)", "class_method_signature": "DocumentLoader.loadFromContent(String pomContent)", "testcase": false, "constructor": false}], "file": "component/core/src/main/java/fr/norad/visuwall/providers/common/DocumentLoader.java"}, "focal_method": {"identifier": "loadFromUrl", "parameters": "(String strUrl)", "modifiers": "public", "return": "Document", "body": "public Document loadFromUrl(String strUrl) throws fr.norad.visuwall.providers.common.DocumentNotLoadedException {\n        Preconditions.checkNotNull(strUrl, \"strUrl is mandatory\");\n        InputStream stream = null;\n        try {\n            URL url = new URL(strUrl);\n            stream = url.openStream();\n            DocumentBuilderFactory builderFactory = DocumentBuilderFactory.newInstance();\n            DocumentBuilder documentBuilder = builderFactory.newDocumentBuilder();\n            return documentBuilder.parse(stream);\n        } catch (MalformedURLException e) {\n            throw new fr.norad.visuwall.providers.common.DocumentNotLoadedException(\"Can't load document from url: \" + strUrl, e);\n        } catch (IOException e) {\n            throw new fr.norad.visuwall.providers.common.DocumentNotLoadedException(\"Can't load document from url: \" + strUrl, e);\n        } catch (SAXException e) {\n            throw new fr.norad.visuwall.providers.common.DocumentNotLoadedException(\"Can't load document from url: \" + strUrl, e);\n        } catch (ParserConfigurationException e) {\n            throw new fr.norad.visuwall.providers.common.DocumentNotLoadedException(\"Can't load document from url: \" + strUrl, e);\n        } finally {\n            closeQuietly(stream);\n        }\n    }", "signature": "Document loadFromUrl(String strUrl)", "full_signature": "public Document loadFromUrl(String strUrl)", "class_method_signature": "DocumentLoader.loadFromUrl(String strUrl)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "openStream", "newInstance", "newDocumentBuilder", "parse", "closeQuietly"]}, "repository": {"repo_id": 29774200, "url": "https://github.com/n0rad/visuwall", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 5, "size": 19747, "license": "licensed"}}