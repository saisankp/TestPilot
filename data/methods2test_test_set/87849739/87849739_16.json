{"test_class": {"identifier": "JsonCollectorsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JsonKey ID_KEY = JsonFactory.newKey(\"id\");", "modifier": "private static final", "type": "JsonKey", "declarator": "ID_KEY = JsonFactory.newKey(\"id\")", "var_name": "ID_KEY"}, {"original_string": "private static final JsonKey STATE_KEY = JsonFactory.newKey(\"state\");", "modifier": "private static final", "type": "JsonKey", "declarator": "STATE_KEY = JsonFactory.newKey(\"state\")", "var_name": "STATE_KEY"}, {"original_string": "private static final JsonKey MANUFACTURER_KEY = JsonFactory.newKey(\"manufacturer\");", "modifier": "private static final", "type": "JsonKey", "declarator": "MANUFACTURER_KEY = JsonFactory.newKey(\"manufacturer\")", "var_name": "MANUFACTURER_KEY"}, {"original_string": "private static final JsonKey NAME_KEY = JsonFactory.newKey(\"name\");", "modifier": "private static final", "type": "JsonKey", "declarator": "NAME_KEY = JsonFactory.newKey(\"name\")", "var_name": "NAME_KEY"}, {"original_string": "private static final JsonKey COUNTRY_KEY = JsonFactory.newKey(\"country\");", "modifier": "private static final", "type": "JsonKey", "declarator": "COUNTRY_KEY = JsonFactory.newKey(\"country\")", "var_name": "COUNTRY_KEY"}, {"original_string": "private static final JsonValue ID = JsonFactory.newValue(4223);", "modifier": "private static final", "type": "JsonValue", "declarator": "ID = JsonFactory.newValue(4223)", "var_name": "ID"}, {"original_string": "private static final JsonValue STATE = JsonFactory.newValue(\"off\");", "modifier": "private static final", "type": "JsonValue", "declarator": "STATE = JsonFactory.newValue(\"off\")", "var_name": "STATE"}, {"original_string": "private static final JsonValue NAME = JsonFactory.newValue(\"ACME\");", "modifier": "private static final", "type": "JsonValue", "declarator": "NAME = JsonFactory.newValue(\"ACME\")", "var_name": "NAME"}, {"original_string": "private static final JsonValue COUNTRY = JsonFactory.newValue(\"Germany\");", "modifier": "private static final", "type": "JsonValue", "declarator": "COUNTRY = JsonFactory.newValue(\"Germany\")", "var_name": "COUNTRY"}, {"original_string": "private static final JsonValue MANUFACTURER = JsonFactory.newObjectBuilder() //\n            .set(NAME_KEY, NAME) //\n            .set(COUNTRY_KEY, COUNTRY) //\n            .build();", "modifier": "private static final", "type": "JsonValue", "declarator": "MANUFACTURER = JsonFactory.newObjectBuilder() //\n            .set(NAME_KEY, NAME) //\n            .set(COUNTRY_KEY, COUNTRY) //\n            .build()", "var_name": "MANUFACTURER"}, {"original_string": "private static final JsonField ID_FIELD = JsonFactory.newField(ID_KEY, ID);", "modifier": "private static final", "type": "JsonField", "declarator": "ID_FIELD = JsonFactory.newField(ID_KEY, ID)", "var_name": "ID_FIELD"}, {"original_string": "private static final JsonField STATE_FIELD = JsonFactory.newField(STATE_KEY, STATE);", "modifier": "private static final", "type": "JsonField", "declarator": "STATE_FIELD = JsonFactory.newField(STATE_KEY, STATE)", "var_name": "STATE_FIELD"}, {"original_string": "private static final JsonField MANUFACTURER_FIELD = JsonFactory.newField(MANUFACTURER_KEY, MANUFACTURER);", "modifier": "private static final", "type": "JsonField", "declarator": "MANUFACTURER_FIELD = JsonFactory.newField(MANUFACTURER_KEY, MANUFACTURER)", "var_name": "MANUFACTURER_FIELD"}, {"original_string": "private static final JsonObject KNOWN_JSON_OBJECT = JsonFactory.newObjectBuilder() //\n            .set(ID_FIELD) //\n            .set(STATE_FIELD) //\n            .set(MANUFACTURER_FIELD) //\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_JSON_OBJECT = JsonFactory.newObjectBuilder() //\n            .set(ID_FIELD) //\n            .set(STATE_FIELD) //\n            .set(MANUFACTURER_FIELD) //\n            .build()", "var_name": "KNOWN_JSON_OBJECT"}, {"original_string": "private static final JsonArray KNOWN_JSON_ARRAY = JsonFactory.newArrayBuilder().add(ID) //\n            .add(STATE) //\n            .add(NAME) //\n            .add(COUNTRY) //\n            .build();", "modifier": "private static final", "type": "JsonArray", "declarator": "KNOWN_JSON_ARRAY = JsonFactory.newArrayBuilder().add(ID) //\n            .add(STATE) //\n            .add(NAME) //\n            .add(COUNTRY) //\n            .build()", "var_name": "KNOWN_JSON_ARRAY"}], "file": "json/src/test/java/org/eclipse/ditto/json/JsonCollectorsTest.java"}, "test_case": {"identifier": "collectingFieldValuesOfObjectReturnsExpectedArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void collectingFieldValuesOfObjectReturnsExpectedArray() {\n        final JsonArray expectedArray = JsonFactory.newArrayBuilder() //\n                .add(ID) //\n                .add(STATE) //\n                .add(MANUFACTURER) //\n                .build();\n\n        final JsonArray actualArray = KNOWN_JSON_OBJECT.stream() //\n                .collect(JsonCollectors.fieldValuesToArray());\n\n        DittoJsonAssertions.assertThat(actualArray).isEqualTo(expectedArray);\n    }", "signature": "void collectingFieldValuesOfObjectReturnsExpectedArray()", "full_signature": "@Test public void collectingFieldValuesOfObjectReturnsExpectedArray()", "class_method_signature": "JsonCollectorsTest.collectingFieldValuesOfObjectReturnsExpectedArray()", "testcase": true, "constructor": false, "invocations": ["build", "add", "add", "add", "newArrayBuilder", "collect", "stream", "fieldValuesToArray", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "JsonCollectors", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "JsonCollectors", "parameters": "()", "modifiers": "private", "return": "", "signature": " JsonCollectors()", "full_signature": "private  JsonCollectors()", "class_method_signature": "JsonCollectors.JsonCollectors()", "testcase": false, "constructor": true}, {"identifier": "fieldsToObject", "parameters": "()", "modifiers": "public static", "return": "Collector<JsonField, JsonObjectBuilder, JsonObject>", "signature": "Collector<JsonField, JsonObjectBuilder, JsonObject> fieldsToObject()", "full_signature": "public static Collector<JsonField, JsonObjectBuilder, JsonObject> fieldsToObject()", "class_method_signature": "JsonCollectors.fieldsToObject()", "testcase": false, "constructor": false}, {"identifier": "objectsToObject", "parameters": "()", "modifiers": "public static", "return": "Collector<JsonObject, JsonObjectBuilder, JsonObject>", "signature": "Collector<JsonObject, JsonObjectBuilder, JsonObject> objectsToObject()", "full_signature": "public static Collector<JsonObject, JsonObjectBuilder, JsonObject> objectsToObject()", "class_method_signature": "JsonCollectors.objectsToObject()", "testcase": false, "constructor": false}, {"identifier": "fieldKeysToArray", "parameters": "()", "modifiers": "public static", "return": "Collector<JsonField, JsonArrayBuilder, JsonArray>", "signature": "Collector<JsonField, JsonArrayBuilder, JsonArray> fieldKeysToArray()", "full_signature": "public static Collector<JsonField, JsonArrayBuilder, JsonArray> fieldKeysToArray()", "class_method_signature": "JsonCollectors.fieldKeysToArray()", "testcase": false, "constructor": false}, {"identifier": "fieldValuesToArray", "parameters": "()", "modifiers": "public static", "return": "Collector<JsonField, JsonArrayBuilder, JsonArray>", "signature": "Collector<JsonField, JsonArrayBuilder, JsonArray> fieldValuesToArray()", "full_signature": "public static Collector<JsonField, JsonArrayBuilder, JsonArray> fieldValuesToArray()", "class_method_signature": "JsonCollectors.fieldValuesToArray()", "testcase": false, "constructor": false}, {"identifier": "valuesToArray", "parameters": "()", "modifiers": "public static", "return": "Collector<JsonValue, JsonArrayBuilder, JsonArray>", "signature": "Collector<JsonValue, JsonArrayBuilder, JsonArray> valuesToArray()", "full_signature": "public static Collector<JsonValue, JsonArrayBuilder, JsonArray> valuesToArray()", "class_method_signature": "JsonCollectors.valuesToArray()", "testcase": false, "constructor": false}], "file": "json/src/main/java/org/eclipse/ditto/json/JsonCollectors.java"}, "focal_method": {"identifier": "fieldValuesToArray", "parameters": "()", "modifiers": "public static", "return": "Collector<JsonField, JsonArrayBuilder, JsonArray>", "body": "public static Collector<JsonField, JsonArrayBuilder, JsonArray> fieldValuesToArray() {\n        return Collector.of(JsonFactory::newArrayBuilder, (arrayBuilder, field) -> arrayBuilder.add(field.getValue()),\n                JsonArrayBuilder::addAll, JsonArrayBuilder::build);\n    }", "signature": "Collector<JsonField, JsonArrayBuilder, JsonArray> fieldValuesToArray()", "full_signature": "public static Collector<JsonField, JsonArrayBuilder, JsonArray> fieldValuesToArray()", "class_method_signature": "JsonCollectors.fieldValuesToArray()", "testcase": false, "constructor": false, "invocations": ["of", "add", "getValue"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}