{"test_class": {"identifier": "OCRUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String LIVE_LOGIN_DATA = \"\";", "modifier": "public static final", "type": "String", "declarator": "LIVE_LOGIN_DATA = \"\"", "var_name": "LIVE_LOGIN_DATA"}, {"original_string": "public static final String DEDE_USER_ID = \"\";", "modifier": "public static final", "type": "String", "declarator": "DEDE_USER_ID = \"\"", "var_name": "DEDE_USER_ID"}, {"original_string": "public static final String SESS_DATA = \"\";", "modifier": "public static final", "type": "String", "declarator": "SESS_DATA = \"\"", "var_name": "SESS_DATA"}, {"original_string": "public static final String CK_PV = \"\";", "modifier": "public static final", "type": "String", "declarator": "CK_PV = \"\"", "var_name": "CK_PV"}, {"original_string": "public static final String DEDE_USER_ID_CKMD5 = \"\";", "modifier": "public static final", "type": "String", "declarator": "DEDE_USER_ID_CKMD5 = \"\"", "var_name": "DEDE_USER_ID_CKMD5"}], "file": "BiliLiveLib/src/test/java/charlie/bililivelib/internalutil/OCRUtilTest.java"}, "test_case": {"identifier": "ocrCalcCaptcha", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void ocrCalcCaptcha() throws Exception {\n        OCRUtil util = new OCRUtil();\n        List<String> excepted = Files.readAllLines(Paths.get(\n                getClass().getResource(\"/captcha/excepted.txt\").toURI()));\n        //PROBLEM:CAPTCHA NO.13 CAN'T WORK!\n        for (int i = 0; i < 50;i++) {\n            String str = util.ocrCalcCaptcha(ImageIO.read(\n                    getClass().getResource(\"/captcha/captcha\" + i + \".png\")));\n            System.out.println(str.trim());\n            assertEquals(excepted.get(i).trim(), str.trim());\n        }\n    }", "signature": "void ocrCalcCaptcha()", "full_signature": "@Test public void ocrCalcCaptcha()", "class_method_signature": "OCRUtilTest.ocrCalcCaptcha()", "testcase": true, "constructor": false, "invocations": ["readAllLines", "get", "toURI", "getResource", "getClass", "ocrCalcCaptcha", "read", "getResource", "getClass", "println", "trim", "assertEquals", "trim", "get", "trim"]}, "focal_class": {"identifier": "OCRUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int SINGLE_LINE_MODE = 7;", "modifier": "public static final", "type": "int", "declarator": "SINGLE_LINE_MODE = 7", "var_name": "SINGLE_LINE_MODE"}, {"original_string": "private Tesseract tesseract;", "modifier": "private", "type": "Tesseract", "declarator": "tesseract", "var_name": "tesseract"}], "methods": [{"identifier": "OCRUtil", "parameters": "()", "modifiers": "public", "return": "", "signature": " OCRUtil()", "full_signature": "public  OCRUtil()", "class_method_signature": "OCRUtil.OCRUtil()", "testcase": false, "constructor": true}, {"identifier": "ocrCalcCaptcha", "parameters": "(@NotNull BufferedImage image)", "modifiers": "@Contract(pure = true) public", "return": "String", "signature": "String ocrCalcCaptcha(@NotNull BufferedImage image)", "full_signature": "@Contract(pure = true) public String ocrCalcCaptcha(@NotNull BufferedImage image)", "class_method_signature": "OCRUtil.ocrCalcCaptcha(@NotNull BufferedImage image)", "testcase": false, "constructor": false}], "file": "BiliLiveLib/src/main/java/charlie/bililivelib/internalutil/OCRUtil.java"}, "focal_method": {"identifier": "ocrCalcCaptcha", "parameters": "(@NotNull BufferedImage image)", "modifiers": "@Contract(pure = true) public", "return": "String", "body": "@Contract(pure = true)\n    public String ocrCalcCaptcha(@NotNull BufferedImage image) {\n        try {\n            return tesseract.doOCR(image);\n        } catch (TesseractException e) {\n            return null;\n        }\n    }", "signature": "String ocrCalcCaptcha(@NotNull BufferedImage image)", "full_signature": "@Contract(pure = true) public String ocrCalcCaptcha(@NotNull BufferedImage image)", "class_method_signature": "OCRUtil.ocrCalcCaptcha(@NotNull BufferedImage image)", "testcase": false, "constructor": false, "invocations": ["doOCR"]}, "repository": {"repo_id": 74730037, "url": "https://github.com/cqjjjzr/BiliLiveLib", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 17, "size": 535, "license": "licensed"}}