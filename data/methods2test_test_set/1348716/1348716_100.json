{"test_class": {"identifier": "QuestionGroupFilterForLoanTest", "superclass": "", "interfaces": "", "fields": [], "file": "application/src/test/java/org/mifos/accounts/loan/struts/action/QuestionGroupFilterForLoanTest.java"}, "test_case": {"identifier": "shouldDoFilterForNoLoanOfferBO", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldDoFilterForNoLoanOfferBO() {\n        QuestionGroupFilterForLoan questionGroupFilterForLoan = new QuestionGroupFilterForLoan();\n        List<QuestionGroupDetail> questionGroupDetails = asList(getQuestionGroupDetail(1, \"QG1\"),\n                getQuestionGroupDetail(2, \"QG2\"), getQuestionGroupDetail(3, \"QG3\"), getQuestionGroupDetail(4, \"QG4\"));\n        List<QuestionGroupDetail> filteredQuestionGroupDetails = questionGroupFilterForLoan.doFilter(questionGroupDetails,null);\n        assertThat(filteredQuestionGroupDetails, is(questionGroupDetails));\n    }", "signature": "void shouldDoFilterForNoLoanOfferBO()", "full_signature": "@Test public void shouldDoFilterForNoLoanOfferBO()", "class_method_signature": "QuestionGroupFilterForLoanTest.shouldDoFilterForNoLoanOfferBO()", "testcase": true, "constructor": false, "invocations": ["asList", "getQuestionGroupDetail", "getQuestionGroupDetail", "getQuestionGroupDetail", "getQuestionGroupDetail", "doFilter", "assertThat", "is"]}, "focal_class": {"identifier": "QuestionGroupFilterForLoan", "superclass": "", "interfaces": "implements QuestionGroupFilter", "fields": [{"original_string": "private LoanOfferingBO loanOfferingBO;", "modifier": "private", "type": "LoanOfferingBO", "declarator": "loanOfferingBO", "var_name": "loanOfferingBO"}], "methods": [{"identifier": "setLoanOfferingBO", "parameters": "(LoanOfferingBO loanOfferingBO)", "modifiers": "public", "return": "void", "signature": "void setLoanOfferingBO(LoanOfferingBO loanOfferingBO)", "full_signature": "public void setLoanOfferingBO(LoanOfferingBO loanOfferingBO)", "class_method_signature": "QuestionGroupFilterForLoan.setLoanOfferingBO(LoanOfferingBO loanOfferingBO)", "testcase": false, "constructor": false}, {"identifier": "doFilter", "parameters": "(List<T> t, Criteria<T> criteria)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> doFilter(List<T> t, Criteria<T> criteria)", "full_signature": "@Override public List<T> doFilter(List<T> t, Criteria<T> criteria)", "class_method_signature": "QuestionGroupFilterForLoan.doFilter(List<T> t, Criteria<T> criteria)", "testcase": false, "constructor": false}], "file": "application/src/main/java/org/mifos/accounts/loan/struts/action/QuestionGroupFilterForLoan.java"}, "focal_method": {"identifier": "doFilter", "parameters": "(List<T> t, Criteria<T> criteria)", "modifiers": "@Override public", "return": "List<T>", "body": "@Override\n    public <T> List<T> doFilter(List<T> t, Criteria<T> criteria) {\n        if (t == null || loanOfferingBO == null) return t;\n        List<T> filteredResult = new ArrayList<T>();\n        Set<QuestionGroupReference> questionGroupReferences = loanOfferingBO.getQuestionGroups();\n        if (questionGroupReferences != null) {\n            for (QuestionGroupReference questionGroupReference : questionGroupReferences) {\n                T result = criteria.filter(questionGroupReference.getQuestionGroupId(), t);\n                if (result != null) filteredResult.add(result);\n            }\n        }\n        return filteredResult;\n    }", "signature": "List<T> doFilter(List<T> t, Criteria<T> criteria)", "full_signature": "@Override public List<T> doFilter(List<T> t, Criteria<T> criteria)", "class_method_signature": "QuestionGroupFilterForLoan.doFilter(List<T> t, Criteria<T> criteria)", "testcase": false, "constructor": false, "invocations": ["getQuestionGroups", "filter", "getQuestionGroupId", "add"]}, "repository": {"repo_id": 1348716, "url": "https://github.com/mifos/head", "language": "Java", "is_fork": false, "fork_count": 91, "stargazer_count": 55, "size": 532732, "license": "licensed"}}