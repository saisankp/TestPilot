{"test_class": {"identifier": "ESRIBoundsTest", "superclass": "extends AbstractIoShapeTest", "interfaces": "", "fields": [{"original_string": "private double minx, miny, minz, minm;", "modifier": "private", "type": "double", "declarator": "minx", "var_name": "minx"}, {"original_string": "private double maxx, maxy, maxz, maxm;", "modifier": "private", "type": "double", "declarator": "maxx", "var_name": "maxx"}, {"original_string": "private ESRIBounds bounds;", "modifier": "private", "type": "ESRIBounds", "declarator": "bounds", "var_name": "bounds"}], "file": "advanced/shapefile/src/test/java/org/arakhne/afc/io/shape/ESRIBoundsTest.java"}, "test_case": {"identifier": "testEqualsObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testEqualsObject() {\n\t\tassertFalse(this.bounds.equals(null));\n\t\tassertFalse(this.bounds.equals(new Object()));\n\t\tassertTrue(this.bounds.equals(this.bounds));\n\t\tassertTrue(this.bounds.equals(new ESRIBounds(this.bounds)));\n\t\tassertFalse(this.bounds.equals(new ESRIBounds()));\n\t\tassertTrue(this.bounds.equals(new ESRIBounds(\n\t\t\t\tthis.minx, this.maxx, \n\t\t\t\tthis.miny, this.maxy, \n\t\t\t\tthis.minz, this.maxz,\n\t\t\t\tthis.minm, this.maxm)));\n\t}", "signature": "void testEqualsObject()", "full_signature": "@Test public void testEqualsObject()", "class_method_signature": "ESRIBoundsTest.testEqualsObject()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "equals", "assertFalse", "equals", "assertTrue", "equals", "assertTrue", "equals", "assertFalse", "equals", "assertTrue", "equals"]}, "focal_class": {"identifier": "ESRIBounds", "superclass": "", "interfaces": "implements Comparable<ESRIBounds>", "fields": [{"original_string": "private double minx;", "modifier": "private", "type": "double", "declarator": "minx", "var_name": "minx"}, {"original_string": "private double miny;", "modifier": "private", "type": "double", "declarator": "miny", "var_name": "miny"}, {"original_string": "private double minz;", "modifier": "private", "type": "double", "declarator": "minz", "var_name": "minz"}, {"original_string": "private double minm;", "modifier": "private", "type": "double", "declarator": "minm", "var_name": "minm"}, {"original_string": "private double maxx;", "modifier": "private", "type": "double", "declarator": "maxx", "var_name": "maxx"}, {"original_string": "private double maxy;", "modifier": "private", "type": "double", "declarator": "maxy", "var_name": "maxy"}, {"original_string": "private double maxz;", "modifier": "private", "type": "double", "declarator": "maxz", "var_name": "maxz"}, {"original_string": "private double maxm;", "modifier": "private", "type": "double", "declarator": "maxm", "var_name": "maxm"}], "methods": [{"identifier": "ESRIBounds", "parameters": "()", "modifiers": "public", "return": "", "signature": " ESRIBounds()", "full_signature": "public  ESRIBounds()", "class_method_signature": "ESRIBounds.ESRIBounds()", "testcase": false, "constructor": true}, {"identifier": "ESRIBounds", "parameters": "(ESRIPoint point)", "modifiers": "public", "return": "", "signature": " ESRIBounds(ESRIPoint point)", "full_signature": "public  ESRIBounds(ESRIPoint point)", "class_method_signature": "ESRIBounds.ESRIBounds(ESRIPoint point)", "testcase": false, "constructor": true}, {"identifier": "ESRIBounds", "parameters": "(double minx, double maxx, double miny, double maxy)", "modifiers": "public", "return": "", "signature": " ESRIBounds(double minx, double maxx, double miny, double maxy)", "full_signature": "public  ESRIBounds(double minx, double maxx, double miny, double maxy)", "class_method_signature": "ESRIBounds.ESRIBounds(double minx, double maxx, double miny, double maxy)", "testcase": false, "constructor": true}, {"identifier": "ESRIBounds", "parameters": "(double minx, double maxx, double miny, double maxy, double minz, double maxz, double minm, double maxm)", "modifiers": "public", "return": "", "signature": " ESRIBounds(double minx, double maxx, double miny, double maxy, double minz, double maxz, double minm, double maxm)", "full_signature": "public  ESRIBounds(double minx, double maxx, double miny, double maxy, double minz, double maxz, double minm, double maxm)", "class_method_signature": "ESRIBounds.ESRIBounds(double minx, double maxx, double miny, double maxy, double minz, double maxz, double minm, double maxm)", "testcase": false, "constructor": true}, {"identifier": "ESRIBounds", "parameters": "(ESRIBounds bounds)", "modifiers": "public", "return": "", "signature": " ESRIBounds(ESRIBounds bounds)", "full_signature": "public  ESRIBounds(ESRIBounds bounds)", "class_method_signature": "ESRIBounds.ESRIBounds(ESRIBounds bounds)", "testcase": false, "constructor": true}, {"identifier": "createUnion", "parameters": "(ESRIBounds bounds)", "modifiers": "public", "return": "ESRIBounds", "signature": "ESRIBounds createUnion(ESRIBounds bounds)", "full_signature": "public ESRIBounds createUnion(ESRIBounds bounds)", "class_method_signature": "ESRIBounds.createUnion(ESRIBounds bounds)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(ESRIPoint point)", "modifiers": "public", "return": "void", "signature": "void add(ESRIPoint point)", "full_signature": "public void add(ESRIPoint point)", "class_method_signature": "ESRIBounds.add(ESRIPoint point)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override @Pure public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override @Pure public boolean equals(Object obj)", "class_method_signature": "ESRIBounds.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Pure @Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Pure @Override public int hashCode()", "class_method_signature": "ESRIBounds.hashCode()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(ESRIBounds bounds)", "modifiers": "@Pure @Override public", "return": "int", "signature": "int compareTo(ESRIBounds bounds)", "full_signature": "@Pure @Override public int compareTo(ESRIBounds bounds)", "class_method_signature": "ESRIBounds.compareTo(ESRIBounds bounds)", "testcase": false, "constructor": false}, {"identifier": "getMinX", "parameters": "()", "modifiers": "@Pure public", "return": "double", "signature": "double getMinX()", "full_signature": "@Pure public double getMinX()", "class_method_signature": "ESRIBounds.getMinX()", "testcase": false, "constructor": false}, {"identifier": "getCenterX", "parameters": "()", "modifiers": "@Pure public", "return": "double", "signature": "double getCenterX()", "full_signature": "@Pure public double getCenterX()", "class_method_signature": "ESRIBounds.getCenterX()", "testcase": false, "constructor": false}, {"identifier": "getMaxX", "parameters": "()", "modifiers": "@Pure public", "return": "double", "signature": "double getMaxX()", "full_signature": "@Pure public double getMaxX()", "class_method_signature": "ESRIBounds.getMaxX()", "testcase": false, "constructor": false}, {"identifier": "getCenterY", "parameters": "()", "modifiers": "@Pure public", "return": "double", "signature": "double getCenterY()", "full_signature": "@Pure public double getCenterY()", "class_method_signature": "ESRIBounds.getCenterY()", "testcase": false, "constructor": false}, {"identifier": "getMinY", "parameters": "()", "modifiers": "@Pure public", "return": "double", "signature": "double getMinY()", "full_signature": "@Pure public double getMinY()", "class_method_signature": "ESRIBounds.getMinY()", "testcase": false, "constructor": false}, {"identifier": "getMaxY", "parameters": "()", "modifiers": "@Pure public", "return": "double", "signature": "double getMaxY()", "full_signature": "@Pure public double getMaxY()", "class_method_signature": "ESRIBounds.getMaxY()", "testcase": false, "constructor": false}, {"identifier": "getMinZ", "parameters": "()", "modifiers": "@Pure public", "return": "double", "signature": "double getMinZ()", "full_signature": "@Pure public double getMinZ()", "class_method_signature": "ESRIBounds.getMinZ()", "testcase": false, "constructor": false}, {"identifier": "getCenterZ", "parameters": "()", "modifiers": "@Pure public", "return": "double", "signature": "double getCenterZ()", "full_signature": "@Pure public double getCenterZ()", "class_method_signature": "ESRIBounds.getCenterZ()", "testcase": false, "constructor": false}, {"identifier": "getMaxZ", "parameters": "()", "modifiers": "@Pure public", "return": "double", "signature": "double getMaxZ()", "full_signature": "@Pure public double getMaxZ()", "class_method_signature": "ESRIBounds.getMaxZ()", "testcase": false, "constructor": false}, {"identifier": "getMinM", "parameters": "()", "modifiers": "@Pure public", "return": "double", "signature": "double getMinM()", "full_signature": "@Pure public double getMinM()", "class_method_signature": "ESRIBounds.getMinM()", "testcase": false, "constructor": false}, {"identifier": "getCenterM", "parameters": "()", "modifiers": "@Pure public", "return": "double", "signature": "double getCenterM()", "full_signature": "@Pure public double getCenterM()", "class_method_signature": "ESRIBounds.getCenterM()", "testcase": false, "constructor": false}, {"identifier": "getMaxM", "parameters": "()", "modifiers": "@Pure public", "return": "double", "signature": "double getMaxM()", "full_signature": "@Pure public double getMaxM()", "class_method_signature": "ESRIBounds.getMaxM()", "testcase": false, "constructor": false}, {"identifier": "toRectangle2d", "parameters": "()", "modifiers": "@Pure public", "return": "Rectangle2d", "signature": "Rectangle2d toRectangle2d()", "full_signature": "@Pure public Rectangle2d toRectangle2d()", "class_method_signature": "ESRIBounds.toRectangle2d()", "testcase": false, "constructor": false}, {"identifier": "ensureMinMax", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void ensureMinMax()", "full_signature": "public void ensureMinMax()", "class_method_signature": "ESRIBounds.ensureMinMax()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Pure @Override public", "return": "String", "signature": "String toString()", "full_signature": "@Pure @Override public String toString()", "class_method_signature": "ESRIBounds.toString()", "testcase": false, "constructor": false}], "file": "advanced/shapefile/src/main/java/org/arakhne/afc/io/shape/ESRIBounds.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override @Pure public", "return": "boolean", "body": "@Override\n\t@Pure\n\tpublic boolean equals(Object obj) {\n\t\tif (obj instanceof ESRIBounds) {\n\t\t\treturn compareTo((ESRIBounds) obj) == 0;\n\t\t}\n\t\treturn false;\n\t}", "signature": "boolean equals(Object obj)", "full_signature": "@Override @Pure public boolean equals(Object obj)", "class_method_signature": "ESRIBounds.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["compareTo"]}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}