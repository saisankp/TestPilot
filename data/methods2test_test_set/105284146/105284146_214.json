{"test_class": {"identifier": "LoadScalableTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Network network;", "modifier": "private", "type": "Network", "declarator": "network", "var_name": "network"}, {"original_string": "private Scalable l1;", "modifier": "private", "type": "Scalable", "declarator": "l1", "var_name": "l1"}, {"original_string": "private Scalable l2;", "modifier": "private", "type": "Scalable", "declarator": "l2", "var_name": "l2"}, {"original_string": "private Scalable l3;", "modifier": "private", "type": "Scalable", "declarator": "l3", "var_name": "l3"}, {"original_string": "private Scalable l4;", "modifier": "private", "type": "Scalable", "declarator": "l4", "var_name": "l4"}, {"original_string": "private ScalingConvention convention;", "modifier": "private", "type": "ScalingConvention", "declarator": "convention", "var_name": "convention"}], "file": "action/action-util/src/test/java/com/powsybl/action/util/LoadScalableTest.java"}, "test_case": {"identifier": "testMinimumlValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMinimumlValue() {\n        assertEquals(0, l1.minimumValue(network, LOAD), 0.);\n        assertEquals(-100, l3.minimumValue(network), 0.);\n        assertEquals(-100, l3.minimumValue(network, GENERATOR), 0.);\n        assertEquals(20, l3.minimumValue(network, LOAD), 0.);\n    }", "signature": "void testMinimumlValue()", "full_signature": "@Test public void testMinimumlValue()", "class_method_signature": "LoadScalableTest.testMinimumlValue()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "minimumValue", "assertEquals", "minimumValue", "assertEquals", "minimumValue", "assertEquals", "minimumValue"]}, "focal_class": {"identifier": "LoadScalable", "superclass": "extends AbstractInjectionScalable", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(LoadScalable.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(LoadScalable.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "LoadScalable", "parameters": "(String id)", "modifiers": "", "return": "", "signature": " LoadScalable(String id)", "full_signature": "  LoadScalable(String id)", "class_method_signature": "LoadScalable.LoadScalable(String id)", "testcase": false, "constructor": true}, {"identifier": "LoadScalable", "parameters": "(String id, double maxValue)", "modifiers": "", "return": "", "signature": " LoadScalable(String id, double maxValue)", "full_signature": "  LoadScalable(String id, double maxValue)", "class_method_signature": "LoadScalable.LoadScalable(String id, double maxValue)", "testcase": false, "constructor": true}, {"identifier": "LoadScalable", "parameters": "(String id, double minValue, double maxValue)", "modifiers": "", "return": "", "signature": " LoadScalable(String id, double minValue, double maxValue)", "full_signature": "  LoadScalable(String id, double minValue, double maxValue)", "class_method_signature": "LoadScalable.LoadScalable(String id, double minValue, double maxValue)", "testcase": false, "constructor": true}, {"identifier": "reset", "parameters": "(Network n)", "modifiers": "@Override public", "return": "void", "signature": "void reset(Network n)", "full_signature": "@Override public void reset(Network n)", "class_method_signature": "LoadScalable.reset(Network n)", "testcase": false, "constructor": false}, {"identifier": "maximumValue", "parameters": "(Network n, ScalingConvention scalingConvention)", "modifiers": "@Override public", "return": "double", "signature": "double maximumValue(Network n, ScalingConvention scalingConvention)", "full_signature": "@Override public double maximumValue(Network n, ScalingConvention scalingConvention)", "class_method_signature": "LoadScalable.maximumValue(Network n, ScalingConvention scalingConvention)", "testcase": false, "constructor": false}, {"identifier": "minimumValue", "parameters": "(Network n, ScalingConvention scalingConvention)", "modifiers": "@Override public", "return": "double", "signature": "double minimumValue(Network n, ScalingConvention scalingConvention)", "full_signature": "@Override public double minimumValue(Network n, ScalingConvention scalingConvention)", "class_method_signature": "LoadScalable.minimumValue(Network n, ScalingConvention scalingConvention)", "testcase": false, "constructor": false}, {"identifier": "filterInjections", "parameters": "(Network n, List<Injection> injections, List<String> notFoundInjections)", "modifiers": "@Override public", "return": "void", "signature": "void filterInjections(Network n, List<Injection> injections, List<String> notFoundInjections)", "full_signature": "@Override public void filterInjections(Network n, List<Injection> injections, List<String> notFoundInjections)", "class_method_signature": "LoadScalable.filterInjections(Network n, List<Injection> injections, List<String> notFoundInjections)", "testcase": false, "constructor": false}, {"identifier": "scale", "parameters": "(Network n, double asked, ScalingConvention scalingConvention)", "modifiers": "@Override public", "return": "double", "signature": "double scale(Network n, double asked, ScalingConvention scalingConvention)", "full_signature": "@Override public double scale(Network n, double asked, ScalingConvention scalingConvention)", "class_method_signature": "LoadScalable.scale(Network n, double asked, ScalingConvention scalingConvention)", "testcase": false, "constructor": false}], "file": "action/action-util/src/main/java/com/powsybl/action/util/LoadScalable.java"}, "focal_method": {"identifier": "minimumValue", "parameters": "(Network n, ScalingConvention scalingConvention)", "modifiers": "@Override public", "return": "double", "body": "@Override\n    public double minimumValue(Network n, ScalingConvention scalingConvention) {\n        Objects.requireNonNull(n);\n        Objects.requireNonNull(scalingConvention);\n\n        Load l = n.getLoad(id);\n        if (l != null) {\n            return scalingConvention == LOAD ? minValue : -maxValue;\n        } else {\n            return 0;\n        }\n\n    }", "signature": "double minimumValue(Network n, ScalingConvention scalingConvention)", "full_signature": "@Override public double minimumValue(Network n, ScalingConvention scalingConvention)", "class_method_signature": "LoadScalable.minimumValue(Network n, ScalingConvention scalingConvention)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "requireNonNull", "getLoad"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}