{"test_class": {"identifier": "SystemQuotaControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static TestClock clock = Clocks.testWorldClock(2000, Month.JANUARY, 1).jumpForwardTo(DayOfWeek.MONDAY);", "modifier": "private static", "type": "TestClock", "declarator": "clock = Clocks.testWorldClock(2000, Month.JANUARY, 1).jumpForwardTo(DayOfWeek.MONDAY)", "var_name": "clock"}, {"original_string": "private final TitusRuntime titusRuntime = TitusRuntimes.test(clock);", "modifier": "private final", "type": "TitusRuntime", "declarator": "titusRuntime = TitusRuntimes.test(clock)", "var_name": "titusRuntime"}, {"original_string": "private volatile EmitterProcessor<SystemDisruptionBudget> budgetEmitter = EmitterProcessor.create(1);", "modifier": "private volatile", "type": "EmitterProcessor<SystemDisruptionBudget>", "declarator": "budgetEmitter = EmitterProcessor.create(1)", "var_name": "budgetEmitter"}, {"original_string": "private final SystemDisruptionBudgetResolver budgetResolver = mock(SystemDisruptionBudgetResolver.class);", "modifier": "private final", "type": "SystemDisruptionBudgetResolver", "declarator": "budgetResolver = mock(SystemDisruptionBudgetResolver.class)", "var_name": "budgetResolver"}, {"original_string": "private SystemQuotaController quotaController;", "modifier": "private", "type": "SystemQuotaController", "declarator": "quotaController", "var_name": "quotaController"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/eviction/service/quota/system/SystemQuotaControllerTest.java"}, "test_case": {"identifier": "testRetryOnFailure", "parameters": "()", "modifiers": "@Test(timeout = 60_000) public", "return": "void", "body": "@Test(timeout = 60_000)\n    public void testRetryOnFailure() {\n        budgetEmitter.onNext(SystemDisruptionBudget.newBasicSystemDisruptionBudget(1, 1));\n        quotaController = newSystemQuotaController();\n\n        // Emit error\n        budgetEmitter.onError(new RuntimeException(\"Simulated error\"));\n        await().until(this::isBudgetEmitterOpen); // Wait until is re-subscribed\n        budgetEmitter.onNext(SystemDisruptionBudget.newBasicSystemDisruptionBudget(5, 5));\n        await().until(() -> quotaController.getQuota(Reference.system()).getQuota() == 5);\n    }", "signature": "void testRetryOnFailure()", "full_signature": "@Test(timeout = 60_000) public void testRetryOnFailure()", "class_method_signature": "SystemQuotaControllerTest.testRetryOnFailure()", "testcase": true, "constructor": false, "invocations": ["onNext", "newBasicSystemDisruptionBudget", "newSystemQuotaController", "onError", "until", "await", "onNext", "newBasicSystemDisruptionBudget", "until", "await", "getQuota", "getQuota", "system"]}, "focal_class": {"identifier": "SystemQuotaController", "superclass": "", "interfaces": "implements QuotaController<Void>", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(SystemQuotaController.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(SystemQuotaController.class)", "var_name": "logger"}, {"original_string": "private static final Duration BOOTSTRAP_TIMEOUT = Duration.ofSeconds(5);", "modifier": "private static final", "type": "Duration", "declarator": "BOOTSTRAP_TIMEOUT = Duration.ofSeconds(5)", "var_name": "BOOTSTRAP_TIMEOUT"}, {"original_string": "private static final Duration DEFAULT_RETRY_INTERVAL = Duration.ofSeconds(5);", "modifier": "private static final", "type": "Duration", "declarator": "DEFAULT_RETRY_INTERVAL = Duration.ofSeconds(5)", "var_name": "DEFAULT_RETRY_INTERVAL"}, {"original_string": "private static final String NAME = \"system\";", "modifier": "private static final", "type": "String", "declarator": "NAME = \"system\"", "var_name": "NAME"}, {"original_string": "private static final ConsumptionResult QUOTA_LIMIT_EXCEEDED = ConsumptionResult.rejected(\"System eviction quota limit exceeded\");", "modifier": "private static final", "type": "ConsumptionResult", "declarator": "QUOTA_LIMIT_EXCEEDED = ConsumptionResult.rejected(\"System eviction quota limit exceeded\")", "var_name": "QUOTA_LIMIT_EXCEEDED"}, {"original_string": "private static final ConsumptionResult OUTSIDE_SYSTEM_TIME_WINDOW = ConsumptionResult.rejected(\"Outside system time window\");", "modifier": "private static final", "type": "ConsumptionResult", "declarator": "OUTSIDE_SYSTEM_TIME_WINDOW = ConsumptionResult.rejected(\"Outside system time window\")", "var_name": "OUTSIDE_SYSTEM_TIME_WINDOW"}, {"original_string": "private final TitusRuntime titusRuntime;", "modifier": "private final", "type": "TitusRuntime", "declarator": "titusRuntime", "var_name": "titusRuntime"}, {"original_string": "private final SystemQuotaMetrics metrics;", "modifier": "private final", "type": "SystemQuotaMetrics", "declarator": "metrics", "var_name": "metrics"}, {"original_string": "private final Disposable resolverDisposable;", "modifier": "private final", "type": "Disposable", "declarator": "resolverDisposable", "var_name": "resolverDisposable"}, {"original_string": "private volatile SystemDisruptionBudget disruptionBudget;", "modifier": "private volatile", "type": "SystemDisruptionBudget", "declarator": "disruptionBudget", "var_name": "disruptionBudget"}, {"original_string": "private volatile String quotaMessage;", "modifier": "private volatile", "type": "String", "declarator": "quotaMessage", "var_name": "quotaMessage"}, {"original_string": "private volatile Supplier<Boolean> inTimeWindowPredicate;", "modifier": "private volatile", "type": "Supplier<Boolean>", "declarator": "inTimeWindowPredicate", "var_name": "inTimeWindowPredicate"}, {"original_string": "private volatile TokenBucket systemTokenBucket;", "modifier": "private volatile", "type": "TokenBucket", "declarator": "systemTokenBucket", "var_name": "systemTokenBucket"}], "methods": [{"identifier": "SystemQuotaController", "parameters": "(SystemDisruptionBudgetResolver systemDisruptionBudgetResolver,\n                                 TitusRuntime titusRuntime)", "modifiers": "@Inject public", "return": "", "signature": " SystemQuotaController(SystemDisruptionBudgetResolver systemDisruptionBudgetResolver,\n                                 TitusRuntime titusRuntime)", "full_signature": "@Inject public  SystemQuotaController(SystemDisruptionBudgetResolver systemDisruptionBudgetResolver,\n                                 TitusRuntime titusRuntime)", "class_method_signature": "SystemQuotaController.SystemQuotaController(SystemDisruptionBudgetResolver systemDisruptionBudgetResolver,\n                                 TitusRuntime titusRuntime)", "testcase": false, "constructor": true}, {"identifier": "SystemQuotaController", "parameters": "(SystemDisruptionBudgetResolver systemDisruptionBudgetResolver,\n                          Duration retryInterval,\n                          TitusRuntime titusRuntime)", "modifiers": "@VisibleForTesting", "return": "", "signature": " SystemQuotaController(SystemDisruptionBudgetResolver systemDisruptionBudgetResolver,\n                          Duration retryInterval,\n                          TitusRuntime titusRuntime)", "full_signature": "@VisibleForTesting  SystemQuotaController(SystemDisruptionBudgetResolver systemDisruptionBudgetResolver,\n                          Duration retryInterval,\n                          TitusRuntime titusRuntime)", "class_method_signature": "SystemQuotaController.SystemQuotaController(SystemDisruptionBudgetResolver systemDisruptionBudgetResolver,\n                          Duration retryInterval,\n                          TitusRuntime titusRuntime)", "testcase": false, "constructor": true}, {"identifier": "resetDisruptionBudget", "parameters": "(SystemDisruptionBudget newDisruptionBudget)", "modifiers": "private", "return": "void", "signature": "void resetDisruptionBudget(SystemDisruptionBudget newDisruptionBudget)", "full_signature": "private void resetDisruptionBudget(SystemDisruptionBudget newDisruptionBudget)", "class_method_signature": "SystemQuotaController.resetDisruptionBudget(SystemDisruptionBudget newDisruptionBudget)", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "@PreDestroy public", "return": "void", "signature": "void shutdown()", "full_signature": "@PreDestroy public void shutdown()", "class_method_signature": "SystemQuotaController.shutdown()", "testcase": false, "constructor": false}, {"identifier": "consume", "parameters": "(String taskId)", "modifiers": "@Override public", "return": "ConsumptionResult", "signature": "ConsumptionResult consume(String taskId)", "full_signature": "@Override public ConsumptionResult consume(String taskId)", "class_method_signature": "SystemQuotaController.consume(String taskId)", "testcase": false, "constructor": false}, {"identifier": "giveBackConsumedQuota", "parameters": "(String taskId)", "modifiers": "@Override public", "return": "void", "signature": "void giveBackConsumedQuota(String taskId)", "full_signature": "@Override public void giveBackConsumedQuota(String taskId)", "class_method_signature": "SystemQuotaController.giveBackConsumedQuota(String taskId)", "testcase": false, "constructor": false}, {"identifier": "getQuota", "parameters": "(Reference reference)", "modifiers": "@Override public", "return": "EvictionQuota", "signature": "EvictionQuota getQuota(Reference reference)", "full_signature": "@Override public EvictionQuota getQuota(Reference reference)", "class_method_signature": "SystemQuotaController.getQuota(Reference reference)", "testcase": false, "constructor": false}, {"identifier": "getDisruptionBudget", "parameters": "()", "modifiers": "", "return": "SystemDisruptionBudget", "signature": "SystemDisruptionBudget getDisruptionBudget()", "full_signature": " SystemDisruptionBudget getDisruptionBudget()", "class_method_signature": "SystemQuotaController.getDisruptionBudget()", "testcase": false, "constructor": false}, {"identifier": "newTokenBucket", "parameters": "(SystemDisruptionBudget disruptionBudget)", "modifiers": "private", "return": "TokenBucket", "signature": "TokenBucket newTokenBucket(SystemDisruptionBudget disruptionBudget)", "full_signature": "private TokenBucket newTokenBucket(SystemDisruptionBudget disruptionBudget)", "class_method_signature": "SystemQuotaController.newTokenBucket(SystemDisruptionBudget disruptionBudget)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/eviction/service/quota/system/SystemQuotaController.java"}, "focal_method": {"identifier": "getQuota", "parameters": "(Reference reference)", "modifiers": "@Override public", "return": "EvictionQuota", "body": "@Override\n    public EvictionQuota getQuota(Reference reference) {\n        EvictionQuota.Builder quotaBuilder = EvictionQuota.newBuilder().withReference(reference);\n        if (!inTimeWindowPredicate.get()) {\n            return quotaBuilder.withQuota(0).withMessage(OUTSIDE_SYSTEM_TIME_WINDOW.getRejectionReason().get()).build();\n        }\n        if (systemTokenBucket.getNumberOfTokens() <= 0) {\n            return quotaBuilder.withQuota(0).withMessage(QUOTA_LIMIT_EXCEEDED.getRejectionReason().get()).build();\n        }\n        return quotaBuilder.withQuota(systemTokenBucket.getNumberOfTokens()).withMessage(quotaMessage).build();\n    }", "signature": "EvictionQuota getQuota(Reference reference)", "full_signature": "@Override public EvictionQuota getQuota(Reference reference)", "class_method_signature": "SystemQuotaController.getQuota(Reference reference)", "testcase": false, "constructor": false, "invocations": ["withReference", "newBuilder", "get", "build", "withMessage", "withQuota", "get", "getRejectionReason", "getNumberOfTokens", "build", "withMessage", "withQuota", "get", "getRejectionReason", "build", "withMessage", "withQuota", "getNumberOfTokens"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}