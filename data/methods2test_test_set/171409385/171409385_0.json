{"test_class": {"identifier": "StockAPITest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private MockMvc mockMvc;", "modifier": "@Autowired\n    private", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}, {"original_string": "@MockBean\n    private StockService stockService;", "modifier": "@MockBean\n    private", "type": "StockService", "declarator": "stockService", "var_name": "stockService"}], "file": "springboot-examples/springboot-mockmvc-hsql/src/test/java/com/hellokoding/springboot/restful/StockAPITest.java"}, "test_case": {"identifier": "findAll", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void findAll() throws Exception {\n        // given\n        Stock stock = new Stock();\n        stock.setId(1L);\n        stock.setName(\"Stock 1\");\n        stock.setPrice(new BigDecimal(1));\n\n        List<Stock> stocks = Arrays.asList(stock);\n        given(stockService.findAll()).willReturn(stocks);\n\n        // when + then\n        this.mockMvc.perform(get(\"/api/v1/stocks\"))\n                .andExpect(status().isOk())\n                .andExpect(content().json(\"[{'id': 1,'name': 'Stock 1';'price': 1}]\"));\n    }", "signature": "void findAll()", "full_signature": "@Test public void findAll()", "class_method_signature": "StockAPITest.findAll()", "testcase": true, "constructor": false, "invocations": ["setId", "setName", "setPrice", "asList", "willReturn", "given", "findAll", "andExpect", "andExpect", "perform", "get", "isOk", "status", "json", "content"]}, "focal_class": {"identifier": "StockAPI", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final StockService stockService;", "modifier": "private final", "type": "StockService", "declarator": "stockService", "var_name": "stockService"}], "methods": [{"identifier": "findAll", "parameters": "()", "modifiers": "@GetMapping public", "return": "ResponseEntity<List<Stock>>", "signature": "ResponseEntity<List<Stock>> findAll()", "full_signature": "@GetMapping public ResponseEntity<List<Stock>> findAll()", "class_method_signature": "StockAPI.findAll()", "testcase": false, "constructor": false}, {"identifier": "findById", "parameters": "(@PathVariable Long stockId)", "modifiers": "@GetMapping(\"/{stockId}\") public", "return": "ResponseEntity<Stock>", "signature": "ResponseEntity<Stock> findById(@PathVariable Long stockId)", "full_signature": "@GetMapping(\"/{stockId}\") public ResponseEntity<Stock> findById(@PathVariable Long stockId)", "class_method_signature": "StockAPI.findById(@PathVariable Long stockId)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(@RequestBody Stock stock)", "modifiers": "@PostMapping public", "return": "ResponseEntity", "signature": "ResponseEntity create(@RequestBody Stock stock)", "full_signature": "@PostMapping public ResponseEntity create(@RequestBody Stock stock)", "class_method_signature": "StockAPI.create(@RequestBody Stock stock)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(@PathVariable Long stockId, @RequestBody Stock updatingStock)", "modifiers": "@PatchMapping(\"/{stockId}\") public", "return": "ResponseEntity<Stock>", "signature": "ResponseEntity<Stock> update(@PathVariable Long stockId, @RequestBody Stock updatingStock)", "full_signature": "@PatchMapping(\"/{stockId}\") public ResponseEntity<Stock> update(@PathVariable Long stockId, @RequestBody Stock updatingStock)", "class_method_signature": "StockAPI.update(@PathVariable Long stockId, @RequestBody Stock updatingStock)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@PathVariable Long id)", "modifiers": "@DeleteMapping(\"/{id}\") public", "return": "ResponseEntity", "signature": "ResponseEntity delete(@PathVariable Long id)", "full_signature": "@DeleteMapping(\"/{id}\") public ResponseEntity delete(@PathVariable Long id)", "class_method_signature": "StockAPI.delete(@PathVariable Long id)", "testcase": false, "constructor": false}], "file": "springboot-examples/springboot-mockmvc-hsql/src/main/java/com/hellokoding/springboot/restful/StockAPI.java"}, "focal_method": {"identifier": "findAll", "parameters": "()", "modifiers": "@GetMapping public", "return": "ResponseEntity<List<Stock>>", "body": "@GetMapping\n    public ResponseEntity<List<Stock>> findAll() {\n        return ResponseEntity.ok(stockService.findAll());\n    }", "signature": "ResponseEntity<List<Stock>> findAll()", "full_signature": "@GetMapping public ResponseEntity<List<Stock>> findAll()", "class_method_signature": "StockAPI.findAll()", "testcase": false, "constructor": false, "invocations": ["ok", "findAll"]}, "repository": {"repo_id": 171409385, "url": "https://github.com/hellokoding/hellokoding-courses", "language": "Java", "is_fork": false, "fork_count": 1788, "stargazer_count": 393, "size": 1244, "license": "licensed"}}