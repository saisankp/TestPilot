{"test_class": {"identifier": "MediaTypeHeaderDelegateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MediaTypeHeaderDelegate mediaTypeHeaderDelegate;", "modifier": "private", "type": "MediaTypeHeaderDelegate", "declarator": "mediaTypeHeaderDelegate", "var_name": "mediaTypeHeaderDelegate"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/header/MediaTypeHeaderDelegateTest.java"}, "test_case": {"identifier": "throwsExceptionWhenMediaTypeIsNull", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void throwsExceptionWhenMediaTypeIsNull() throws Exception {\n        mediaTypeHeaderDelegate.toString(null);\n    }", "signature": "void throwsExceptionWhenMediaTypeIsNull()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void throwsExceptionWhenMediaTypeIsNull()", "class_method_signature": "MediaTypeHeaderDelegateTest.throwsExceptionWhenMediaTypeIsNull()", "testcase": true, "constructor": false, "invocations": ["toString"]}, "focal_class": {"identifier": "MediaTypeHeaderDelegate", "superclass": "", "interfaces": "implements RuntimeDelegate.HeaderDelegate<MediaType>", "fields": [{"original_string": "private static final char SUB_TYPE_SEPARATOR = '/';", "modifier": "private static final", "type": "char", "declarator": "SUB_TYPE_SEPARATOR = '/'", "var_name": "SUB_TYPE_SEPARATOR"}, {"original_string": "private static final char PARAMS_SEPARATOR = ';';", "modifier": "private static final", "type": "char", "declarator": "PARAMS_SEPARATOR = ';'", "var_name": "PARAMS_SEPARATOR"}], "methods": [{"identifier": "fromString", "parameters": "(String header)", "modifiers": "@Override public", "return": "MediaType", "signature": "MediaType fromString(String header)", "full_signature": "@Override public MediaType fromString(String header)", "class_method_signature": "MediaTypeHeaderDelegate.fromString(String header)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(MediaType mime)", "modifiers": "@Override public", "return": "String", "signature": "String toString(MediaType mime)", "full_signature": "@Override public String toString(MediaType mime)", "class_method_signature": "MediaTypeHeaderDelegate.toString(MediaType mime)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/header/MediaTypeHeaderDelegate.java"}, "focal_method": {"identifier": "toString", "parameters": "(MediaType mime)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString(MediaType mime) {\n        if (mime == null) {\n            throw new IllegalArgumentException();\n        }\n        StringBuilder sb = new StringBuilder();\n        sb.append(mime.getType()).append('/').append(mime.getSubtype());\n\n        for (Entry<String, String> entry : mime.getParameters().entrySet()) {\n            sb.append(';').append(entry.getKey()).append('=');\n            appendWithQuote(sb, entry.getValue());\n        }\n\n        return sb.toString();\n    }", "signature": "String toString(MediaType mime)", "full_signature": "@Override public String toString(MediaType mime)", "class_method_signature": "MediaTypeHeaderDelegate.toString(MediaType mime)", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "getType", "getSubtype", "entrySet", "getParameters", "append", "append", "append", "getKey", "appendWithQuote", "getValue", "toString"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}