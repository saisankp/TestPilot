{"test_class": {"identifier": "ApplicationRegistryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate ApplicationRegistry registry;", "modifier": "@Autowired\n\tprivate", "type": "ApplicationRegistry", "declarator": "registry", "var_name": "registry"}], "file": "mbit-cloud-platform-octopus/mbit-octopus-server/mbit-octopus-server-core-admin/src/test/java/de/codecentric/boot/admin/service/ApplicationRegistryTest.java"}, "test_case": {"identifier": "getApplications", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getApplications() throws Exception {\n\t\tApplication app = new Application();\n\t\tapp.setId(\"abc\");\n\t\tapp.setUrl(\"http://localhost:8080\");\n\t\tregistry.register(app);\n\n\t\tassertEquals(1, registry.getApplications().size());\n\t\tassertEquals(app, registry.getApplications().get(0));\n\t}", "signature": "void getApplications()", "full_signature": "@Test public void getApplications()", "class_method_signature": "ApplicationRegistryTest.getApplications()", "testcase": true, "constructor": false, "invocations": ["setId", "setUrl", "register", "assertEquals", "size", "getApplications", "assertEquals", "get", "getApplications"]}, "focal_class": {"identifier": "ApplicationRegistry", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Map<String, Application> registry = new HashMap<>();", "modifier": "private final", "type": "Map<String, Application>", "declarator": "registry = new HashMap<>()", "var_name": "registry"}], "methods": [{"identifier": "register", "parameters": "(Application app)", "modifiers": "public", "return": "Application", "signature": "Application register(Application app)", "full_signature": "public Application register(Application app)", "class_method_signature": "ApplicationRegistry.register(Application app)", "testcase": false, "constructor": false}, {"identifier": "checkUrl", "parameters": "(String url)", "modifiers": "private", "return": "boolean", "signature": "boolean checkUrl(String url)", "full_signature": "private boolean checkUrl(String url)", "class_method_signature": "ApplicationRegistry.checkUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "isRegistered", "parameters": "(String id)", "modifiers": "public", "return": "boolean", "signature": "boolean isRegistered(String id)", "full_signature": "public boolean isRegistered(String id)", "class_method_signature": "ApplicationRegistry.isRegistered(String id)", "testcase": false, "constructor": false}, {"identifier": "getApplications", "parameters": "()", "modifiers": "public", "return": "List<Application>", "signature": "List<Application> getApplications()", "full_signature": "public List<Application> getApplications()", "class_method_signature": "ApplicationRegistry.getApplications()", "testcase": false, "constructor": false}, {"identifier": "getApplication", "parameters": "(String id)", "modifiers": "public", "return": "Application", "signature": "Application getApplication(String id)", "full_signature": "public Application getApplication(String id)", "class_method_signature": "ApplicationRegistry.getApplication(String id)", "testcase": false, "constructor": false}], "file": "mbit-cloud-platform-octopus/mbit-octopus-server/mbit-octopus-server-core-admin/src/main/java/de/codecentric/boot/admin/service/ApplicationRegistry.java"}, "focal_method": {"identifier": "getApplications", "parameters": "()", "modifiers": "public", "return": "List<Application>", "body": "public List<Application> getApplications() {\n\t\treturn new ArrayList<>(registry.values());\n\t}", "signature": "List<Application> getApplications()", "full_signature": "public List<Application> getApplications()", "class_method_signature": "ApplicationRegistry.getApplications()", "testcase": false, "constructor": false, "invocations": ["values"]}, "repository": {"repo_id": 24459625, "url": "https://github.com/mbit-cloud/mbit-cloud-platform", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 50748, "license": "licensed"}}