{"test_class": {"identifier": "NoopSlingSimulatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/sling/NoopSlingSimulatorTest.java"}, "test_case": {"identifier": "testDequeueInstallable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDequeueInstallable() {\n        assertNull(\"never dequeue an installable\", instance().dequeueInstallable());\n    }", "signature": "void testDequeueInstallable()", "full_signature": "@Test public void testDequeueInstallable()", "class_method_signature": "NoopSlingSimulatorTest.testDequeueInstallable()", "testcase": true, "constructor": false, "invocations": ["assertNull", "dequeueInstallable", "instance"]}, "focal_class": {"identifier": "NoopSlingSimulator", "superclass": "", "interfaces": "implements SlingSimulatorBackend, SlingSimulator", "fields": [], "methods": [{"identifier": "instance", "parameters": "()", "modifiers": "public static", "return": "SlingSimulatorBackend", "signature": "SlingSimulatorBackend instance()", "full_signature": "public static SlingSimulatorBackend instance()", "class_method_signature": "NoopSlingSimulator.instance()", "testcase": false, "constructor": false}, {"identifier": "setSession", "parameters": "(final Session session)", "modifiers": "@Override public", "return": "void", "signature": "void setSession(final Session session)", "full_signature": "@Override public void setSession(final Session session)", "class_method_signature": "NoopSlingSimulator.setSession(final Session session)", "testcase": false, "constructor": false}, {"identifier": "setPackageManager", "parameters": "(final JcrPackageManager packageManager)", "modifiers": "@Override public", "return": "void", "signature": "void setPackageManager(final JcrPackageManager packageManager)", "full_signature": "@Override public void setPackageManager(final JcrPackageManager packageManager)", "class_method_signature": "NoopSlingSimulator.setPackageManager(final JcrPackageManager packageManager)", "testcase": false, "constructor": false}, {"identifier": "setErrorListener", "parameters": "(final ErrorListener errorListener)", "modifiers": "@Override public", "return": "void", "signature": "void setErrorListener(final ErrorListener errorListener)", "full_signature": "@Override public void setErrorListener(final ErrorListener errorListener)", "class_method_signature": "NoopSlingSimulator.setErrorListener(final ErrorListener errorListener)", "testcase": false, "constructor": false}, {"identifier": "dequeueInstallable", "parameters": "()", "modifiers": "@Override public @Nullable", "return": "SlingInstallable", "signature": "SlingInstallable dequeueInstallable()", "full_signature": "@Override public @Nullable SlingInstallable dequeueInstallable()", "class_method_signature": "NoopSlingSimulator.dequeueInstallable()", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(@NotNull final SlingOpenable<ResourceType> installable)", "modifiers": "@Override public @NotNull", "return": "Fun.ThrowingSupplier<ResourceType>", "signature": "Fun.ThrowingSupplier<ResourceType> open(@NotNull final SlingOpenable<ResourceType> installable)", "full_signature": "@Override public @NotNull Fun.ThrowingSupplier<ResourceType> open(@NotNull final SlingOpenable<ResourceType> installable)", "class_method_signature": "NoopSlingSimulator.open(@NotNull final SlingOpenable<ResourceType> installable)", "testcase": false, "constructor": false}, {"identifier": "addInstallableNode", "parameters": "(final @NotNull PackageId parentPackageId,\n                                                         final @NotNull Node node)", "modifiers": "@Override public @Nullable", "return": "SlingInstallable", "signature": "SlingInstallable addInstallableNode(final @NotNull PackageId parentPackageId,\n                                                         final @NotNull Node node)", "full_signature": "@Override public @Nullable SlingInstallable addInstallableNode(final @NotNull PackageId parentPackageId,\n                                                         final @NotNull Node node)", "class_method_signature": "NoopSlingSimulator.addInstallableNode(final @NotNull PackageId parentPackageId,\n                                                         final @NotNull Node node)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/sling/NoopSlingSimulator.java"}, "focal_method": {"identifier": "dequeueInstallable", "parameters": "()", "modifiers": "@Override public @Nullable", "return": "SlingInstallable", "body": "@Override\n    public @Nullable SlingInstallable dequeueInstallable() {\n        return null;\n    }", "signature": "SlingInstallable dequeueInstallable()", "full_signature": "@Override public @Nullable SlingInstallable dequeueInstallable()", "class_method_signature": "NoopSlingSimulator.dequeueInstallable()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}