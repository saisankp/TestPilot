{"test_class": {"identifier": "TestLruCache", "superclass": "", "interfaces": "", "fields": [], "file": "kiji-mapreduce/src/test/java/org/kiji/mapreduce/util/TestLruCache.java"}, "test_case": {"identifier": "testCache", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCache() {\n    LruCache<String, String> cache = LruCache.create(4);\n    cache.put(\"a\", \"a1\");\n    cache.put(\"b\", \"b1\");\n    cache.put(\"c\", \"c1\");\n    cache.put(\"d\", \"d1\");\n    cache.put(\"e\", \"e1\");\n    assertFalse(cache.containsKey(\"a\")); // e evicts a.\n\n    assertEquals(\"b1\", cache.get(\"b\")); // This is still there.\n    cache.put(\"f\", \"f1\");\n    assertFalse(cache.containsKey(\"c\")); // f now evicts c, since b was recently used.\n\n    cache.put(\"g\", null);\n    assertTrue(cache.containsKey(\"g\"));\n    assertNull(cache.get(\"g\"));\n    assertFalse(cache.containsKey(\"d\")); // d evicted by g.\n    assertNull(cache.get(\"d\")); // But accessing this just returns null, not an error.\n  }", "signature": "void testCache()", "full_signature": "@Test public void testCache()", "class_method_signature": "TestLruCache.testCache()", "testcase": true, "constructor": false, "invocations": ["create", "put", "put", "put", "put", "put", "assertFalse", "containsKey", "assertEquals", "get", "put", "assertFalse", "containsKey", "put", "assertTrue", "containsKey", "assertNull", "get", "assertFalse", "containsKey", "assertNull", "get"]}, "focal_class": {"identifier": "LruCache", "superclass": "extends LinkedHashMap<K, V>", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1", "var_name": "serialVersionUID"}, {"original_string": "private int mMaxSize;", "modifier": "private", "type": "int", "declarator": "mMaxSize", "var_name": "mMaxSize"}], "methods": [{"identifier": "LruCache", "parameters": "(int maxSize)", "modifiers": "private", "return": "", "signature": " LruCache(int maxSize)", "full_signature": "private  LruCache(int maxSize)", "class_method_signature": "LruCache.LruCache(int maxSize)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(int maxSize)", "modifiers": "public static", "return": "LruCache<K, V>", "signature": "LruCache<K, V> create(int maxSize)", "full_signature": "public static LruCache<K, V> create(int maxSize)", "class_method_signature": "LruCache.create(int maxSize)", "testcase": false, "constructor": false}, {"identifier": "removeEldestEntry", "parameters": "(Map.Entry<K, V> eldest)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean removeEldestEntry(Map.Entry<K, V> eldest)", "full_signature": "@Override protected boolean removeEldestEntry(Map.Entry<K, V> eldest)", "class_method_signature": "LruCache.removeEldestEntry(Map.Entry<K, V> eldest)", "testcase": false, "constructor": false}, {"identifier": "getMaxSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxSize()", "full_signature": "public int getMaxSize()", "class_method_signature": "LruCache.getMaxSize()", "testcase": false, "constructor": false}], "file": "kiji-mapreduce/src/main/java/org/kiji/mapreduce/util/LruCache.java"}, "focal_method": {"identifier": "create", "parameters": "(int maxSize)", "modifiers": "public static", "return": "LruCache<K, V>", "body": "public static <K, V> LruCache<K, V> create(int maxSize) {\n    return new LruCache<K, V>(maxSize);\n  }", "signature": "LruCache<K, V> create(int maxSize)", "full_signature": "public static LruCache<K, V> create(int maxSize)", "class_method_signature": "LruCache.create(int maxSize)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 7249073, "url": "https://github.com/kijiproject/kiji-mapreduce", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 12, "size": 5029, "license": "licensed"}}