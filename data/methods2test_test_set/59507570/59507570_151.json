{"test_class": {"identifier": "IncidentRegisterPresenterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    IncidentService incidentService;", "modifier": "@Mock", "type": "IncidentService", "declarator": "incidentService", "var_name": "incidentService"}, {"original_string": "@Mock\n    IncidentFormService incidentFormService;", "modifier": "@Mock", "type": "IncidentFormService", "declarator": "incidentFormService", "var_name": "incidentFormService"}, {"original_string": "@InjectMocks\n    private IncidentRegisterPresenter incidentRegisterPresenter;", "modifier": "@InjectMocks\n    private", "type": "IncidentRegisterPresenter", "declarator": "incidentRegisterPresenter", "var_name": "incidentRegisterPresenter"}], "file": "app/src/test/java/org/unicef/rapidreg/incident/incidentregister/IncidentRegisterPresenterTest.java"}, "test_case": {"identifier": "should_return_get_fields_when_position_is_known_and_form_is_not_null", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_return_get_fields_when_position_is_known_and_form_is_not_null(){\n        IncidentTemplateForm form = new IncidentTemplateForm();\n        when(incidentFormService.getGBVTemplate()).thenReturn(form);\n        Section section = new Section();\n        Field miniFormField = new Field();\n        Field otherFormField = new Field();\n        List<Field> fields = Arrays.asList(new Field[]{miniFormField, otherFormField});\n        List<Section> sections = Arrays.asList(new Section[]{section});\n        section.setFields(fields);\n        form.setSections(sections);\n        int position = 0;\n        assertThat(incidentRegisterPresenter.getFields(position).contains(miniFormField),is(true));\n        assertThat(incidentRegisterPresenter.getFields(position).contains(otherFormField),is(true));\n    }", "signature": "void should_return_get_fields_when_position_is_known_and_form_is_not_null()", "full_signature": "@Test public void should_return_get_fields_when_position_is_known_and_form_is_not_null()", "class_method_signature": "IncidentRegisterPresenterTest.should_return_get_fields_when_position_is_known_and_form_is_not_null()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getGBVTemplate", "asList", "asList", "setFields", "setSections", "assertThat", "contains", "getFields", "is", "assertThat", "contains", "getFields", "is"]}, "focal_class": {"identifier": "IncidentRegisterPresenter", "superclass": "extends RecordRegisterPresenter", "interfaces": "", "fields": [{"original_string": "private static final String TAG = IncidentRegisterPresenter.class.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "TAG = IncidentRegisterPresenter.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "private IncidentService incidentService;", "modifier": "private", "type": "IncidentService", "declarator": "incidentService", "var_name": "incidentService"}, {"original_string": "private IncidentFormService incidentFormService;", "modifier": "private", "type": "IncidentFormService", "declarator": "incidentFormService", "var_name": "incidentFormService"}], "methods": [{"identifier": "IncidentRegisterPresenter", "parameters": "(IncidentService incidentService, IncidentFormService\n            incidentFormService)", "modifiers": "@Inject public", "return": "", "signature": " IncidentRegisterPresenter(IncidentService incidentService, IncidentFormService\n            incidentFormService)", "full_signature": "@Inject public  IncidentRegisterPresenter(IncidentService incidentService, IncidentFormService\n            incidentFormService)", "class_method_signature": "IncidentRegisterPresenter.IncidentRegisterPresenter(IncidentService incidentService, IncidentFormService\n            incidentFormService)", "testcase": false, "constructor": true}, {"identifier": "getRecordId", "parameters": "(Bundle bundle)", "modifiers": "@Override protected", "return": "Long", "signature": "Long getRecordId(Bundle bundle)", "full_signature": "@Override protected Long getRecordId(Bundle bundle)", "class_method_signature": "IncidentRegisterPresenter.getRecordId(Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "getUniqueId", "parameters": "(Bundle bundle)", "modifiers": "@Override protected", "return": "String", "signature": "String getUniqueId(Bundle bundle)", "full_signature": "@Override protected String getUniqueId(Bundle bundle)", "class_method_signature": "IncidentRegisterPresenter.getUniqueId(Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "saveRecord", "parameters": "(ItemValuesMap itemValuesMap, List<String> photoPaths,\n                           RecordRegisterView.SaveRecordCallback callback)", "modifiers": "@Override public", "return": "void", "signature": "void saveRecord(ItemValuesMap itemValuesMap, List<String> photoPaths,\n                           RecordRegisterView.SaveRecordCallback callback)", "full_signature": "@Override public void saveRecord(ItemValuesMap itemValuesMap, List<String> photoPaths,\n                           RecordRegisterView.SaveRecordCallback callback)", "class_method_signature": "IncidentRegisterPresenter.saveRecord(ItemValuesMap itemValuesMap, List<String> photoPaths,\n                           RecordRegisterView.SaveRecordCallback callback)", "testcase": false, "constructor": false}, {"identifier": "getItemValuesByRecordId", "parameters": "(Long recordId)", "modifiers": "@Override protected", "return": "ItemValuesMap", "signature": "ItemValuesMap getItemValuesByRecordId(Long recordId)", "full_signature": "@Override protected ItemValuesMap getItemValuesByRecordId(Long recordId)", "class_method_signature": "IncidentRegisterPresenter.getItemValuesByRecordId(Long recordId)", "testcase": false, "constructor": false}, {"identifier": "getItemValuesByUniqueId", "parameters": "(String uniqueId)", "modifiers": "@Override protected", "return": "ItemValuesMap", "signature": "ItemValuesMap getItemValuesByUniqueId(String uniqueId)", "full_signature": "@Override protected ItemValuesMap getItemValuesByUniqueId(String uniqueId)", "class_method_signature": "IncidentRegisterPresenter.getItemValuesByUniqueId(String uniqueId)", "testcase": false, "constructor": false}, {"identifier": "getPhotoPathsByRecordId", "parameters": "(Long recordId)", "modifiers": "@Override protected", "return": "List<String>", "signature": "List<String> getPhotoPathsByRecordId(Long recordId)", "full_signature": "@Override protected List<String> getPhotoPathsByRecordId(Long recordId)", "class_method_signature": "IncidentRegisterPresenter.getPhotoPathsByRecordId(Long recordId)", "testcase": false, "constructor": false}, {"identifier": "getFields", "parameters": "()", "modifiers": "@Override protected", "return": "List<Field>", "signature": "List<Field> getFields()", "full_signature": "@Override protected List<Field> getFields()", "class_method_signature": "IncidentRegisterPresenter.getFields()", "testcase": false, "constructor": false}, {"identifier": "getFields", "parameters": "(int position)", "modifiers": "@Override public", "return": "List<Field>", "signature": "List<Field> getFields(int position)", "full_signature": "@Override public List<Field> getFields(int position)", "class_method_signature": "IncidentRegisterPresenter.getFields(int position)", "testcase": false, "constructor": false}, {"identifier": "getTemplateForm", "parameters": "()", "modifiers": "@Override public", "return": "RecordForm", "signature": "RecordForm getTemplateForm()", "full_signature": "@Override public RecordForm getTemplateForm()", "class_method_signature": "IncidentRegisterPresenter.getTemplateForm()", "testcase": false, "constructor": false}, {"identifier": "validateRequiredField", "parameters": "(ItemValuesMap itemValuesMap)", "modifiers": "private", "return": "boolean", "signature": "boolean validateRequiredField(ItemValuesMap itemValuesMap)", "full_signature": "private boolean validateRequiredField(ItemValuesMap itemValuesMap)", "class_method_signature": "IncidentRegisterPresenter.validateRequiredField(ItemValuesMap itemValuesMap)", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/unicef/rapidreg/incident/incidentregister/IncidentRegisterPresenter.java"}, "focal_method": {"identifier": "getFields", "parameters": "()", "modifiers": "@Override protected", "return": "List<Field>", "body": "@Override\n    protected List<Field> getFields() {\n        List<Field> fields = new ArrayList<>();\n\n        RecordForm form = incidentFormService.getGBVTemplate();\n\n        List<Section> sections = form.getSections();\n\n        for (Section section : sections) {\n            for (Field field : section.getFields()) {\n                field.setSectionName(section.getName());\n                if (field.isShowOnMiniForm()) {\n                    if (field.isPhotoUploadBox()) {\n                        fields.add(0, field);\n                    } else {\n                        fields.add(field);\n                    }\n                }\n            }\n        }\n        return fields;\n    }", "signature": "List<Field> getFields()", "full_signature": "@Override protected List<Field> getFields()", "class_method_signature": "IncidentRegisterPresenter.getFields()", "testcase": false, "constructor": false, "invocations": ["getGBVTemplate", "getSections", "getFields", "setSectionName", "getName", "isShowOnMiniForm", "isPhotoUploadBox", "add", "add"]}, "repository": {"repo_id": 59507570, "url": "https://github.com/UnicefNY/RapidReg", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 10753, "license": "Other"}}