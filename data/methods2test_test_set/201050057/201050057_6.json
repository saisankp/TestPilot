{"test_class": {"identifier": "TaskResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String RESOURCE_PATH = \"http://localhost:8080/tasks\";", "modifier": "private static final", "type": "String", "declarator": "RESOURCE_PATH = \"http://localhost:8080/tasks\"", "var_name": "RESOURCE_PATH"}, {"original_string": "@Mock\n    TaskService taskService;", "modifier": "@Mock", "type": "TaskService", "declarator": "taskService", "var_name": "taskService"}, {"original_string": "@Mock\n    MetricRegistry metricRegistry;", "modifier": "@Mock", "type": "MetricRegistry", "declarator": "metricRegistry", "var_name": "metricRegistry"}, {"original_string": "@Mock\n    UriInfo uriInfo;", "modifier": "@Mock", "type": "UriInfo", "declarator": "uriInfo", "var_name": "uriInfo"}, {"original_string": "@InjectMocks\n    TaskResource taskRes;", "modifier": "@InjectMocks", "type": "TaskResource", "declarator": "taskRes", "var_name": "taskRes"}, {"original_string": "private Task task1;", "modifier": "private", "type": "Task", "declarator": "task1", "var_name": "task1"}], "file": "backend/src/test/java/net/lr/tasklist/resource/TaskResourceTest.java"}, "test_case": {"identifier": "testGetNotFound", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetNotFound() {\n        Response resp = taskRes.getTask(1);\n        \n        assertThat(resp.getStatus(), equalTo(404));\n    }", "signature": "void testGetNotFound()", "full_signature": "@Test public void testGetNotFound()", "class_method_signature": "TaskResourceTest.testGetNotFound()", "testcase": true, "constructor": false, "invocations": ["getTask", "assertThat", "getStatus", "equalTo"]}, "focal_class": {"identifier": "TaskResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Context\n    UriInfo uriInfo;", "modifier": "@Context", "type": "UriInfo", "declarator": "uriInfo", "var_name": "uriInfo"}, {"original_string": "private TaskService taskService;", "modifier": "private", "type": "TaskService", "declarator": "taskService", "var_name": "taskService"}, {"original_string": "private MetricRegistry metricRegistry;", "modifier": "private", "type": "MetricRegistry", "declarator": "metricRegistry", "var_name": "metricRegistry"}, {"original_string": "private Counter counter;", "modifier": "private", "type": "Counter", "declarator": "counter", "var_name": "counter"}], "methods": [{"identifier": "TaskResource", "parameters": "(TaskService taskService, MetricRegistry metricRegistry)", "modifiers": "public", "return": "", "signature": " TaskResource(TaskService taskService, MetricRegistry metricRegistry)", "full_signature": "public  TaskResource(TaskService taskService, MetricRegistry metricRegistry)", "class_method_signature": "TaskResource.TaskResource(TaskService taskService, MetricRegistry metricRegistry)", "testcase": false, "constructor": true}, {"identifier": "getTask", "parameters": "(@PathParam(\"id\") Integer id)", "modifiers": "@Operation(summary = \"Get single task by id\", description = \"Get single task by id\") @GET @Path(\"{id}\") public", "return": "Response", "signature": "Response getTask(@PathParam(\"id\") Integer id)", "full_signature": "@Operation(summary = \"Get single task by id\", description = \"Get single task by id\") @GET @Path(\"{id}\") public Response getTask(@PathParam(\"id\") Integer id)", "class_method_signature": "TaskResource.getTask(@PathParam(\"id\") Integer id)", "testcase": false, "constructor": false}, {"identifier": "addTask", "parameters": "(Task task)", "modifiers": "@Operation(description = \"Add task\") @POST public", "return": "Response", "signature": "Response addTask(Task task)", "full_signature": "@Operation(description = \"Add task\") @POST public Response addTask(Task task)", "class_method_signature": "TaskResource.addTask(Task task)", "testcase": false, "constructor": false}, {"identifier": "getTasks", "parameters": "()", "modifiers": "@Operation(description = \"Get all tasks\") @GET @Produces(MediaType.APPLICATION_JSON) public", "return": "Collection<Task>", "signature": "Collection<Task> getTasks()", "full_signature": "@Operation(description = \"Get all tasks\") @GET @Produces(MediaType.APPLICATION_JSON) public Collection<Task> getTasks()", "class_method_signature": "TaskResource.getTasks()", "testcase": false, "constructor": false}, {"identifier": "updateTask", "parameters": "(@PathParam(\"id\") Integer id, Task task)", "modifiers": "@Operation(description = \"Change task\") @PUT @Path(\"{id}\") public", "return": "void", "signature": "void updateTask(@PathParam(\"id\") Integer id, Task task)", "full_signature": "@Operation(description = \"Change task\") @PUT @Path(\"{id}\") public void updateTask(@PathParam(\"id\") Integer id, Task task)", "class_method_signature": "TaskResource.updateTask(@PathParam(\"id\") Integer id, Task task)", "testcase": false, "constructor": false}, {"identifier": "deleteTask", "parameters": "(@PathParam(\"id\") Integer id)", "modifiers": "@Operation(description = \"Delete task\") @DELETE @Path(\"{id}\") public", "return": "void", "signature": "void deleteTask(@PathParam(\"id\") Integer id)", "full_signature": "@Operation(description = \"Delete task\") @DELETE @Path(\"{id}\") public void deleteTask(@PathParam(\"id\") Integer id)", "class_method_signature": "TaskResource.deleteTask(@PathParam(\"id\") Integer id)", "testcase": false, "constructor": false}], "file": "backend/src/main/java/net/lr/tasklist/resource/TaskResource.java"}, "focal_method": {"identifier": "getTask", "parameters": "(@PathParam(\"id\") Integer id)", "modifiers": "@Operation(summary = \"Get single task by id\", description = \"Get single task by id\") @GET @Path(\"{id}\") public", "return": "Response", "body": "@Operation(summary = \"Get single task by id\", description =  \"Get single task by id\")\n    @GET\n    @Path(\"{id}\")\n    public Response getTask(@PathParam(\"id\") Integer id) {\n        Task task = taskService.getById(id);\n        return task == null ? Response.status(Status.NOT_FOUND).build() : Response.ok(task).build();\n    }", "signature": "Response getTask(@PathParam(\"id\") Integer id)", "full_signature": "@Operation(summary = \"Get single task by id\", description = \"Get single task by id\") @GET @Path(\"{id}\") public Response getTask(@PathParam(\"id\") Integer id)", "class_method_signature": "TaskResource.getTask(@PathParam(\"id\") Integer id)", "testcase": false, "constructor": false, "invocations": ["getById", "build", "status", "build", "ok"]}, "repository": {"repo_id": 201050057, "url": "https://github.com/cschneider/osgi-best-practices", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 25, "size": 117, "license": "licensed"}}