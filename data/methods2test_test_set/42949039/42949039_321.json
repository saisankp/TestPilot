{"test_class": {"identifier": "AwsServiceHelperTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/AwsServiceHelperTest.java"}, "test_case": {"identifier": "testHandleAmazonException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHandleAmazonException()\n    {\n        try\n        {\n            AmazonServiceException amazonServiceException = new AmazonServiceException(ERROR_MESSAGE);\n            awsServiceHelper.handleAmazonException(amazonServiceException, MESSAGE_TEXT);\n            fail();\n        }\n        catch (AmazonServiceException amazonServiceException)\n        {\n            assertThat(\"Error message not correct.\", amazonServiceException.getMessage().contains(ERROR_MESSAGE), is(true));\n        }\n    }", "signature": "void testHandleAmazonException()", "full_signature": "@Test public void testHandleAmazonException()", "class_method_signature": "AwsServiceHelperTest.testHandleAmazonException()", "testcase": true, "constructor": false, "invocations": ["handleAmazonException", "fail", "assertThat", "contains", "getMessage", "is"]}, "focal_class": {"identifier": "AwsServiceHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "handleAmazonException", "parameters": "(AmazonServiceException amazonServiceException, String message)", "modifiers": "public", "return": "void", "signature": "void handleAmazonException(AmazonServiceException amazonServiceException, String message)", "full_signature": "public void handleAmazonException(AmazonServiceException amazonServiceException, String message)", "class_method_signature": "AwsServiceHelper.handleAmazonException(AmazonServiceException amazonServiceException, String message)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/AwsServiceHelper.java"}, "focal_method": {"identifier": "handleAmazonException", "parameters": "(AmazonServiceException amazonServiceException, String message)", "modifiers": "public", "return": "void", "body": "public void handleAmazonException(AmazonServiceException amazonServiceException, String message) throws IllegalArgumentException, ObjectNotFoundException\n    {\n        if (amazonServiceException.getStatusCode() == HttpStatus.SC_BAD_REQUEST)\n        {\n            throw new IllegalArgumentException(message + \" Reason: \" + amazonServiceException.getMessage(), amazonServiceException);\n        }\n        else if (amazonServiceException.getStatusCode() == HttpStatus.SC_NOT_FOUND)\n        {\n            throw new ObjectNotFoundException(message + \" Reason: \" + amazonServiceException.getMessage(), amazonServiceException);\n        }\n\n        throw amazonServiceException;\n    }", "signature": "void handleAmazonException(AmazonServiceException amazonServiceException, String message)", "full_signature": "public void handleAmazonException(AmazonServiceException amazonServiceException, String message)", "class_method_signature": "AwsServiceHelper.handleAmazonException(AmazonServiceException amazonServiceException, String message)", "testcase": false, "constructor": false, "invocations": ["getStatusCode", "getMessage", "getStatusCode", "getMessage"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}