{"test_class": {"identifier": "TomcatXmppWebSocketTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private StanzaProcessor stanzaProcessor = Mockito.mock(StanzaProcessor.class);", "modifier": "private", "type": "StanzaProcessor", "declarator": "stanzaProcessor = Mockito.mock(StanzaProcessor.class)", "var_name": "stanzaProcessor"}, {"original_string": "private ServerRuntimeContext serverRuntimeContext = Mockito.mock(ServerRuntimeContext.class);", "modifier": "private", "type": "ServerRuntimeContext", "declarator": "serverRuntimeContext = Mockito.mock(ServerRuntimeContext.class)", "var_name": "serverRuntimeContext"}, {"original_string": "private WsOutbound outbound = Mockito.mock(WsOutbound.class);", "modifier": "private", "type": "WsOutbound", "declarator": "outbound = Mockito.mock(WsOutbound.class)", "var_name": "outbound"}], "file": "server/extensions/websockets/src/test/java/org/apache/vysper/xmpp/extension/websockets/TomcatXmppWebSocketTest.java"}, "test_case": {"identifier": "onMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onMessage() throws IOException {\n        TomcatXmppWebSocket context = new TomcatXmppWebSocket(serverRuntimeContext, stanzaProcessor);\n        context.onTextMessage(CharBuffer.wrap(\"<test></test>\"));\n\n        Stanza expected = new StanzaBuilder(\"test\").build();\n        Mockito.verify(stanzaProcessor).processStanza(Mockito.eq(serverRuntimeContext),\n                Mockito.any(InternalSessionContext.class), Mockito.eq(expected), Mockito.any(SessionStateHolder.class));\n    }", "signature": "void onMessage()", "full_signature": "@Test public void onMessage()", "class_method_signature": "TomcatXmppWebSocketTest.onMessage()", "testcase": true, "constructor": false, "invocations": ["onTextMessage", "wrap", "build", "processStanza", "verify", "eq", "any", "eq", "any"]}, "focal_class": {"identifier": "TomcatXmppWebSocket", "superclass": "extends MessageInbound", "interfaces": "implements Outbound", "fields": [{"original_string": "private final static Logger LOG = LoggerFactory.getLogger(TomcatXmppWebSocket.class);", "modifier": "private final static", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(TomcatXmppWebSocket.class)", "var_name": "LOG"}, {"original_string": "private WebSocketBackedSessionContext sessionContext;", "modifier": "private", "type": "WebSocketBackedSessionContext", "declarator": "sessionContext", "var_name": "sessionContext"}, {"original_string": "private WsOutbound outbound;", "modifier": "private", "type": "WsOutbound", "declarator": "outbound", "var_name": "outbound"}], "methods": [{"identifier": "TomcatXmppWebSocket", "parameters": "(ServerRuntimeContext serverRuntimeContext, StanzaProcessor stanzaProcessor)", "modifiers": "public", "return": "", "signature": " TomcatXmppWebSocket(ServerRuntimeContext serverRuntimeContext, StanzaProcessor stanzaProcessor)", "full_signature": "public  TomcatXmppWebSocket(ServerRuntimeContext serverRuntimeContext, StanzaProcessor stanzaProcessor)", "class_method_signature": "TomcatXmppWebSocket.TomcatXmppWebSocket(ServerRuntimeContext serverRuntimeContext, StanzaProcessor stanzaProcessor)", "testcase": false, "constructor": true}, {"identifier": "onOpen", "parameters": "(WsOutbound outbound)", "modifiers": "public", "return": "void", "signature": "void onOpen(WsOutbound outbound)", "full_signature": "public void onOpen(WsOutbound outbound)", "class_method_signature": "TomcatXmppWebSocket.onOpen(WsOutbound outbound)", "testcase": false, "constructor": false}, {"identifier": "onBinaryMessage", "parameters": "(ByteBuffer message)", "modifiers": "@Override protected", "return": "void", "signature": "void onBinaryMessage(ByteBuffer message)", "full_signature": "@Override protected void onBinaryMessage(ByteBuffer message)", "class_method_signature": "TomcatXmppWebSocket.onBinaryMessage(ByteBuffer message)", "testcase": false, "constructor": false}, {"identifier": "onTextMessage", "parameters": "(CharBuffer message)", "modifiers": "@Override protected", "return": "void", "signature": "void onTextMessage(CharBuffer message)", "full_signature": "@Override protected void onTextMessage(CharBuffer message)", "class_method_signature": "TomcatXmppWebSocket.onTextMessage(CharBuffer message)", "testcase": false, "constructor": false}, {"identifier": "onClose", "parameters": "(int closeCode, String message)", "modifiers": "public", "return": "void", "signature": "void onClose(int closeCode, String message)", "full_signature": "public void onClose(int closeCode, String message)", "class_method_signature": "TomcatXmppWebSocket.onClose(int closeCode, String message)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String xml)", "modifiers": "public", "return": "void", "signature": "void write(String xml)", "full_signature": "public void write(String xml)", "class_method_signature": "TomcatXmppWebSocket.write(String xml)", "testcase": false, "constructor": false}], "file": "server/extensions/websockets/src/main/java/org/apache/vysper/xmpp/extension/websockets/TomcatXmppWebSocket.java"}, "focal_method": {"identifier": "onTextMessage", "parameters": "(CharBuffer message)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void onTextMessage(CharBuffer message) throws IOException {\n        String data = message.toString();\n        LOG.info(\"< \" + data);\n        sessionContext.onMessage(data);\n    }", "signature": "void onTextMessage(CharBuffer message)", "full_signature": "@Override protected void onTextMessage(CharBuffer message)", "class_method_signature": "TomcatXmppWebSocket.onTextMessage(CharBuffer message)", "testcase": false, "constructor": false, "invocations": ["toString", "info", "onMessage"]}, "repository": {"repo_id": 165370485, "url": "https://github.com/apache/mina-vysper", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 29305, "license": "licensed"}}