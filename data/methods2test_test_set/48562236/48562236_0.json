{"test_class": {"identifier": "ColumnDefinitionChangeTest", "superclass": "extends DbTestCase", "interfaces": "", "fields": [], "file": "data/db/src/test/java/leap/db/change/ColumnDefinitionChangeTest.java"}, "test_case": {"identifier": "testColumnUniquePropertyChange", "parameters": "()", "modifiers": "@Test @Contextual public", "return": "void", "body": "@Test\n\t@Contextual\n\tpublic void testColumnUniquePropertyChange() {\n\t\tDbColumnBuilder col = DbColumnBuilder.varchar(\"col1\", 100);\n\n\t\tDbTableBuilder table = new DbTableBuilder(\"test_unique_change\")\n\t\t\t\t\t\t\t\t.addColumn(col);\n\t\t\n\t\t//create table with non-unique column\n\t\tdb.cmdCreateTable(table.build()).execute();\n\n\t\t//change the column's unique property to true\n\t\tcol.setUnique(true);\n\t\t\n\t\t//compares table\n\t\tDbTable targetTable = db.getMetadata().tryGetTable(table.getTableName());\n\t\tassertNotNull(targetTable);\n\t\t\n\t\tSchemaChanges changes = db.getComparator().compareTable(table.build(), targetTable);\n\t\tassertEquals(1, changes.size());\n\t\tassertTrue(changes.get(0) instanceof ColumnDefinitionChange);\n\n\t\tColumnDefinitionChange change = (ColumnDefinitionChange)changes.get(0);\n\t\tassertTrue(change.isUniqueChanged());\n\t\t\n\t\t//apply the changes\n\t\tchanges.applyChanges();\n\t\t\n\t\ttargetTable = db.getMetadata().tryGetTable(table.getTableName());\n\t\tchanges = db.getComparator().compareTable(table.build(), targetTable);\n\t\tassertNull(changes.firstOrNull(ColumnDefinitionChange.class));\n\t\t\n\t\t//drop column\n\t\tdb.cmdDropTable(table.getTableName()).execute();\n\t}", "signature": "void testColumnUniquePropertyChange()", "full_signature": "@Test @Contextual public void testColumnUniquePropertyChange()", "class_method_signature": "ColumnDefinitionChangeTest.testColumnUniquePropertyChange()", "testcase": true, "constructor": false, "invocations": ["varchar", "addColumn", "execute", "cmdCreateTable", "build", "setUnique", "tryGetTable", "getMetadata", "getTableName", "assertNotNull", "compareTable", "getComparator", "build", "assertEquals", "size", "assertTrue", "get", "get", "assertTrue", "isUniqueChanged", "applyChanges", "tryGetTable", "getMetadata", "getTableName", "compareTable", "getComparator", "build", "assertNull", "firstOrNull", "execute", "cmdDropTable", "getTableName"]}, "focal_class": {"identifier": "ColumnDefinitionChange", "superclass": "extends ColumnChangeBase", "interfaces": "", "fields": [{"original_string": "protected final List<ColumnPropertyChange> propertyChanges;", "modifier": "protected final", "type": "List<ColumnPropertyChange>", "declarator": "propertyChanges", "var_name": "propertyChanges"}], "methods": [{"identifier": "ColumnDefinitionChange", "parameters": "(DbTable table, DbColumn oldColumn, DbColumn newColumn,List<ColumnPropertyChange> propertyChanges)", "modifiers": "public", "return": "", "signature": " ColumnDefinitionChange(DbTable table, DbColumn oldColumn, DbColumn newColumn,List<ColumnPropertyChange> propertyChanges)", "full_signature": "public  ColumnDefinitionChange(DbTable table, DbColumn oldColumn, DbColumn newColumn,List<ColumnPropertyChange> propertyChanges)", "class_method_signature": "ColumnDefinitionChange.ColumnDefinitionChange(DbTable table, DbColumn oldColumn, DbColumn newColumn,List<ColumnPropertyChange> propertyChanges)", "testcase": false, "constructor": true}, {"identifier": "getChangeType", "parameters": "()", "modifiers": "@Override public", "return": "SchemaChangeType", "signature": "SchemaChangeType getChangeType()", "full_signature": "@Override public SchemaChangeType getChangeType()", "class_method_signature": "ColumnDefinitionChange.getChangeType()", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(JsonWriter writer)", "modifiers": "@Override public", "return": "void", "signature": "void toJson(JsonWriter writer)", "full_signature": "@Override public void toJson(JsonWriter writer)", "class_method_signature": "ColumnDefinitionChange.toJson(JsonWriter writer)", "testcase": false, "constructor": false}, {"identifier": "getPropertyChanges", "parameters": "()", "modifiers": "public @Immutable", "return": "List<ColumnPropertyChange>", "signature": "List<ColumnPropertyChange> getPropertyChanges()", "full_signature": "public @Immutable List<ColumnPropertyChange> getPropertyChanges()", "class_method_signature": "ColumnDefinitionChange.getPropertyChanges()", "testcase": false, "constructor": false}, {"identifier": "isSizeChanged", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSizeChanged()", "full_signature": "public boolean isSizeChanged()", "class_method_signature": "ColumnDefinitionChange.isSizeChanged()", "testcase": false, "constructor": false}, {"identifier": "isTypeChanged", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTypeChanged()", "full_signature": "public boolean isTypeChanged()", "class_method_signature": "ColumnDefinitionChange.isTypeChanged()", "testcase": false, "constructor": false}, {"identifier": "isNullableChanged", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNullableChanged()", "full_signature": "public boolean isNullableChanged()", "class_method_signature": "ColumnDefinitionChange.isNullableChanged()", "testcase": false, "constructor": false}, {"identifier": "isUniqueChanged", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isUniqueChanged()", "full_signature": "public boolean isUniqueChanged()", "class_method_signature": "ColumnDefinitionChange.isUniqueChanged()", "testcase": false, "constructor": false}, {"identifier": "isDefaultChanged", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDefaultChanged()", "full_signature": "public boolean isDefaultChanged()", "class_method_signature": "ColumnDefinitionChange.isDefaultChanged()", "testcase": false, "constructor": false}, {"identifier": "isCommentChanged", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCommentChanged()", "full_signature": "public boolean isCommentChanged()", "class_method_signature": "ColumnDefinitionChange.isCommentChanged()", "testcase": false, "constructor": false}], "file": "data/db/src/main/java/leap/db/change/ColumnDefinitionChange.java"}, "focal_method": {"identifier": "isUniqueChanged", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isUniqueChanged(){\n\t\treturn Iterables.any(propertyChanges, PropertyChange.nameEquals(ColumnPropertyChange.UNIQUE));\n\t}", "signature": "boolean isUniqueChanged()", "full_signature": "public boolean isUniqueChanged()", "class_method_signature": "ColumnDefinitionChange.isUniqueChanged()", "testcase": false, "constructor": false, "invocations": ["any", "nameEquals"]}, "repository": {"repo_id": 48562236, "url": "https://github.com/leapframework/framework", "stars": 42, "created": "12/25/2015 1:54:52 AM +00:00", "updates": "2020-01-20T03:04:15+00:00", "fork": "False", "license": "licensed"}}