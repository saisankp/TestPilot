{"test_class": {"identifier": "DefaultAgentCacheTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final TestScheduler testScheduler = Schedulers.test();", "modifier": "private final", "type": "TestScheduler", "declarator": "testScheduler = Schedulers.test()", "var_name": "testScheduler"}, {"original_string": "private final Registry registry = new DefaultRegistry();", "modifier": "private final", "type": "Registry", "declarator": "registry = new DefaultRegistry()", "var_name": "registry"}, {"original_string": "private final AgentManagementConfiguration configuration = InstanceTestUtils.mockedAgentManagementConfiguration();", "modifier": "private final", "type": "AgentManagementConfiguration", "declarator": "configuration = InstanceTestUtils.mockedAgentManagementConfiguration()", "var_name": "configuration"}, {"original_string": "private final AgentStore agentStore = mock(AgentStore.class);", "modifier": "private final", "type": "AgentStore", "declarator": "agentStore = mock(AgentStore.class)", "var_name": "agentStore"}, {"original_string": "private final TestableInstanceCloudConnector testConnector = new TestableInstanceCloudConnector();", "modifier": "private final", "type": "TestableInstanceCloudConnector", "declarator": "testConnector = new TestableInstanceCloudConnector()", "var_name": "testConnector"}, {"original_string": "private DataGenerator<InstanceGroup> instanceGroupsGenerator = InstanceGenerators.instanceGroups(5);", "modifier": "private", "type": "DataGenerator<InstanceGroup>", "declarator": "instanceGroupsGenerator = InstanceGenerators.instanceGroups(5)", "var_name": "instanceGroupsGenerator"}, {"original_string": "private DataGenerator<Instance> instanceGenerator1;", "modifier": "private", "type": "DataGenerator<Instance>", "declarator": "instanceGenerator1", "var_name": "instanceGenerator1"}, {"original_string": "private DataGenerator<Instance> instanceGenerator2;", "modifier": "private", "type": "DataGenerator<Instance>", "declarator": "instanceGenerator2", "var_name": "instanceGenerator2"}, {"original_string": "private DefaultAgentCache cache;", "modifier": "private", "type": "DefaultAgentCache", "declarator": "cache", "var_name": "cache"}, {"original_string": "private ExtTestSubscriber<CacheUpdateEvent> eventSubscriber = new ExtTestSubscriber<>();", "modifier": "private", "type": "ExtTestSubscriber<CacheUpdateEvent>", "declarator": "eventSubscriber = new ExtTestSubscriber<>()", "var_name": "eventSubscriber"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/agent/service/cache/DefaultAgentCacheTest.java"}, "test_case": {"identifier": "testCleanupOfRemovedAgentInstance", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCleanupOfRemovedAgentInstance() {\n        String instanceGroupId = testConnector.takeInstanceGroup(0).getId();\n        int initialCount = cache.getAgentInstances(instanceGroupId).size();\n\n        testConnector.removeInstance(testConnector.takeInstance(0, 0).getId());\n        testScheduler.advanceTimeBy(CACHE_REFRESH_INTERVAL_MS, TimeUnit.MILLISECONDS);\n\n        assertThat(cache.getAgentInstances(instanceGroupId).size()).isEqualTo(initialCount - 1);\n        expectInstanceGroupUpdateEvent(eventSubscriber, instanceGroupId);\n    }", "signature": "void testCleanupOfRemovedAgentInstance()", "full_signature": "@Test public void testCleanupOfRemovedAgentInstance()", "class_method_signature": "DefaultAgentCacheTest.testCleanupOfRemovedAgentInstance()", "testcase": true, "constructor": false, "invocations": ["getId", "takeInstanceGroup", "size", "getAgentInstances", "removeInstance", "getId", "takeInstance", "advanceTimeBy", "isEqualTo", "assertThat", "size", "getAgentInstances", "expectInstanceGroupUpdateEvent"]}, "focal_class": {"identifier": "DefaultAgentCache", "superclass": "", "interfaces": "implements AgentCache", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(DefaultAgentCache.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(DefaultAgentCache.class)", "var_name": "logger"}, {"original_string": "private final Scheduler scheduler;", "modifier": "private final", "type": "Scheduler", "declarator": "scheduler", "var_name": "scheduler"}, {"original_string": "private final AgentManagementConfiguration configuration;", "modifier": "private final", "type": "AgentManagementConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private final AgentStore agentStore;", "modifier": "private final", "type": "AgentStore", "declarator": "agentStore", "var_name": "agentStore"}, {"original_string": "private final InstanceCloudConnector connector;", "modifier": "private final", "type": "InstanceCloudConnector", "declarator": "connector", "var_name": "connector"}, {"original_string": "private final Registry registry;", "modifier": "private final", "type": "Registry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private final Scheduler.Worker worker;", "modifier": "private final", "type": "Scheduler.Worker", "declarator": "worker", "var_name": "worker"}, {"original_string": "private final AgentCacheMetrics metrics;", "modifier": "private final", "type": "AgentCacheMetrics", "declarator": "metrics", "var_name": "metrics"}, {"original_string": "private InstanceCache instanceCache;", "modifier": "private", "type": "InstanceCache", "declarator": "instanceCache", "var_name": "instanceCache"}, {"original_string": "private Subscription instanceCacheSubscription;", "modifier": "private", "type": "Subscription", "declarator": "instanceCacheSubscription", "var_name": "instanceCacheSubscription"}, {"original_string": "private Subscription synchronizeWithInstanceCacheSubscription;", "modifier": "private", "type": "Subscription", "declarator": "synchronizeWithInstanceCacheSubscription", "var_name": "synchronizeWithInstanceCacheSubscription"}, {"original_string": "private volatile AgentDataSnapshot dataSnapshot = new AgentDataSnapshot();", "modifier": "private volatile", "type": "AgentDataSnapshot", "declarator": "dataSnapshot = new AgentDataSnapshot()", "var_name": "dataSnapshot"}, {"original_string": "private final PublishSubject<CacheUpdateEvent> eventSubject = PublishSubject.create();", "modifier": "private final", "type": "PublishSubject<CacheUpdateEvent>", "declarator": "eventSubject = PublishSubject.create()", "var_name": "eventSubject"}], "methods": [{"identifier": "DefaultAgentCache", "parameters": "(AgentManagementConfiguration configuration,\n                             AgentStore agentStore,\n                             InstanceCloudConnector connector,\n                             Registry registry)", "modifiers": "@Inject public", "return": "", "signature": " DefaultAgentCache(AgentManagementConfiguration configuration,\n                             AgentStore agentStore,\n                             InstanceCloudConnector connector,\n                             Registry registry)", "full_signature": "@Inject public  DefaultAgentCache(AgentManagementConfiguration configuration,\n                             AgentStore agentStore,\n                             InstanceCloudConnector connector,\n                             Registry registry)", "class_method_signature": "DefaultAgentCache.DefaultAgentCache(AgentManagementConfiguration configuration,\n                             AgentStore agentStore,\n                             InstanceCloudConnector connector,\n                             Registry registry)", "testcase": false, "constructor": true}, {"identifier": "DefaultAgentCache", "parameters": "(AgentManagementConfiguration configuration,\n                      AgentStore agentStore,\n                      InstanceCloudConnector connector,\n                      Registry registry,\n                      Scheduler scheduler)", "modifiers": "", "return": "", "signature": " DefaultAgentCache(AgentManagementConfiguration configuration,\n                      AgentStore agentStore,\n                      InstanceCloudConnector connector,\n                      Registry registry,\n                      Scheduler scheduler)", "full_signature": "  DefaultAgentCache(AgentManagementConfiguration configuration,\n                      AgentStore agentStore,\n                      InstanceCloudConnector connector,\n                      Registry registry,\n                      Scheduler scheduler)", "class_method_signature": "DefaultAgentCache.DefaultAgentCache(AgentManagementConfiguration configuration,\n                      AgentStore agentStore,\n                      InstanceCloudConnector connector,\n                      Registry registry,\n                      Scheduler scheduler)", "testcase": false, "constructor": true}, {"identifier": "enterActiveMode", "parameters": "()", "modifiers": "@Activator public", "return": "void", "signature": "void enterActiveMode()", "full_signature": "@Activator public void enterActiveMode()", "class_method_signature": "DefaultAgentCache.enterActiveMode()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void shutdown()", "full_signature": "public void shutdown()", "class_method_signature": "DefaultAgentCache.shutdown()", "testcase": false, "constructor": false}, {"identifier": "getInstanceGroups", "parameters": "()", "modifiers": "@Override public", "return": "List<AgentInstanceGroup>", "signature": "List<AgentInstanceGroup> getInstanceGroups()", "full_signature": "@Override public List<AgentInstanceGroup> getInstanceGroups()", "class_method_signature": "DefaultAgentCache.getInstanceGroups()", "testcase": false, "constructor": false}, {"identifier": "getInstanceGroup", "parameters": "(String instanceGroupId)", "modifiers": "@Override public", "return": "AgentInstanceGroup", "signature": "AgentInstanceGroup getInstanceGroup(String instanceGroupId)", "full_signature": "@Override public AgentInstanceGroup getInstanceGroup(String instanceGroupId)", "class_method_signature": "DefaultAgentCache.getInstanceGroup(String instanceGroupId)", "testcase": false, "constructor": false}, {"identifier": "findInstanceGroup", "parameters": "(String instanceGroupId)", "modifiers": "@Override public", "return": "Optional<AgentInstanceGroup>", "signature": "Optional<AgentInstanceGroup> findInstanceGroup(String instanceGroupId)", "full_signature": "@Override public Optional<AgentInstanceGroup> findInstanceGroup(String instanceGroupId)", "class_method_signature": "DefaultAgentCache.findInstanceGroup(String instanceGroupId)", "testcase": false, "constructor": false}, {"identifier": "getAgentInstances", "parameters": "(String instanceGroupId)", "modifiers": "@Override public", "return": "Set<AgentInstance>", "signature": "Set<AgentInstance> getAgentInstances(String instanceGroupId)", "full_signature": "@Override public Set<AgentInstance> getAgentInstances(String instanceGroupId)", "class_method_signature": "DefaultAgentCache.getAgentInstances(String instanceGroupId)", "testcase": false, "constructor": false}, {"identifier": "getAgentInstance", "parameters": "(String instanceId)", "modifiers": "@Override public", "return": "AgentInstance", "signature": "AgentInstance getAgentInstance(String instanceId)", "full_signature": "@Override public AgentInstance getAgentInstance(String instanceId)", "class_method_signature": "DefaultAgentCache.getAgentInstance(String instanceId)", "testcase": false, "constructor": false}, {"identifier": "findAgentInstance", "parameters": "(String instanceId)", "modifiers": "@Override public", "return": "Optional<AgentInstance>", "signature": "Optional<AgentInstance> findAgentInstance(String instanceId)", "full_signature": "@Override public Optional<AgentInstance> findAgentInstance(String instanceId)", "class_method_signature": "DefaultAgentCache.findAgentInstance(String instanceId)", "testcase": false, "constructor": false}, {"identifier": "updateInstanceGroupStore", "parameters": "(String instanceGroupId, Function<AgentInstanceGroup, AgentInstanceGroup> function)", "modifiers": "@Override public", "return": "Single<AgentInstanceGroup>", "signature": "Single<AgentInstanceGroup> updateInstanceGroupStore(String instanceGroupId, Function<AgentInstanceGroup, AgentInstanceGroup> function)", "full_signature": "@Override public Single<AgentInstanceGroup> updateInstanceGroupStore(String instanceGroupId, Function<AgentInstanceGroup, AgentInstanceGroup> function)", "class_method_signature": "DefaultAgentCache.updateInstanceGroupStore(String instanceGroupId, Function<AgentInstanceGroup, AgentInstanceGroup> function)", "testcase": false, "constructor": false}, {"identifier": "updateInstanceGroupStoreAndSyncCloud", "parameters": "(String instanceGroupId, Function<AgentInstanceGroup, AgentInstanceGroup> function)", "modifiers": "@Override public", "return": "Single<AgentInstanceGroup>", "signature": "Single<AgentInstanceGroup> updateInstanceGroupStoreAndSyncCloud(String instanceGroupId, Function<AgentInstanceGroup, AgentInstanceGroup> function)", "full_signature": "@Override public Single<AgentInstanceGroup> updateInstanceGroupStoreAndSyncCloud(String instanceGroupId, Function<AgentInstanceGroup, AgentInstanceGroup> function)", "class_method_signature": "DefaultAgentCache.updateInstanceGroupStoreAndSyncCloud(String instanceGroupId, Function<AgentInstanceGroup, AgentInstanceGroup> function)", "testcase": false, "constructor": false}, {"identifier": "updateAgentInstanceStore", "parameters": "(String instanceId, Function<AgentInstance, AgentInstance> function)", "modifiers": "@Override public", "return": "Single<AgentInstance>", "signature": "Single<AgentInstance> updateAgentInstanceStore(String instanceId, Function<AgentInstance, AgentInstance> function)", "full_signature": "@Override public Single<AgentInstance> updateAgentInstanceStore(String instanceId, Function<AgentInstance, AgentInstance> function)", "class_method_signature": "DefaultAgentCache.updateAgentInstanceStore(String instanceId, Function<AgentInstance, AgentInstance> function)", "testcase": false, "constructor": false}, {"identifier": "removeInstances", "parameters": "(String instanceGroupId, Set<String> agentInstanceIds)", "modifiers": "@Override public", "return": "Completable", "signature": "Completable removeInstances(String instanceGroupId, Set<String> agentInstanceIds)", "full_signature": "@Override public Completable removeInstances(String instanceGroupId, Set<String> agentInstanceIds)", "class_method_signature": "DefaultAgentCache.removeInstances(String instanceGroupId, Set<String> agentInstanceIds)", "testcase": false, "constructor": false}, {"identifier": "events", "parameters": "()", "modifiers": "@Override public", "return": "Observable<CacheUpdateEvent>", "signature": "Observable<CacheUpdateEvent> events()", "full_signature": "@Override public Observable<CacheUpdateEvent> events()", "class_method_signature": "DefaultAgentCache.events()", "testcase": false, "constructor": false}, {"identifier": "synchronizeWithInstanceCache", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void synchronizeWithInstanceCache()", "full_signature": "private void synchronizeWithInstanceCache()", "class_method_signature": "DefaultAgentCache.synchronizeWithInstanceCache()", "testcase": false, "constructor": false}, {"identifier": "updateOnInstanceGroupAddEvent", "parameters": "(String instanceGroupId)", "modifiers": "private", "return": "void", "signature": "void updateOnInstanceGroupAddEvent(String instanceGroupId)", "full_signature": "private void updateOnInstanceGroupAddEvent(String instanceGroupId)", "class_method_signature": "DefaultAgentCache.updateOnInstanceGroupAddEvent(String instanceGroupId)", "testcase": false, "constructor": false}, {"identifier": "updateOnInstanceGroupRemoveEvent", "parameters": "(String instanceGroupId)", "modifiers": "private", "return": "void", "signature": "void updateOnInstanceGroupRemoveEvent(String instanceGroupId)", "full_signature": "private void updateOnInstanceGroupRemoveEvent(String instanceGroupId)", "class_method_signature": "DefaultAgentCache.updateOnInstanceGroupRemoveEvent(String instanceGroupId)", "testcase": false, "constructor": false}, {"identifier": "updateOnInstanceGroupUpdateEvent", "parameters": "(String instanceGroupId)", "modifiers": "private", "return": "void", "signature": "void updateOnInstanceGroupUpdateEvent(String instanceGroupId)", "full_signature": "private void updateOnInstanceGroupUpdateEvent(String instanceGroupId)", "class_method_signature": "DefaultAgentCache.updateOnInstanceGroupUpdateEvent(String instanceGroupId)", "testcase": false, "constructor": false}, {"identifier": "storeEagerly", "parameters": "(AgentInstanceGroup instanceGroup)", "modifiers": "private", "return": "void", "signature": "void storeEagerly(AgentInstanceGroup instanceGroup)", "full_signature": "private void storeEagerly(AgentInstanceGroup instanceGroup)", "class_method_signature": "DefaultAgentCache.storeEagerly(AgentInstanceGroup instanceGroup)", "testcase": false, "constructor": false}, {"identifier": "storeEagerlyWithRemoveFlag", "parameters": "(AgentInstanceGroup instanceGroup)", "modifiers": "private", "return": "void", "signature": "void storeEagerlyWithRemoveFlag(AgentInstanceGroup instanceGroup)", "full_signature": "private void storeEagerlyWithRemoveFlag(AgentInstanceGroup instanceGroup)", "class_method_signature": "DefaultAgentCache.storeEagerlyWithRemoveFlag(AgentInstanceGroup instanceGroup)", "testcase": false, "constructor": false}, {"identifier": "onEventLoop", "parameters": "(Action0 action)", "modifiers": "private", "return": "void", "signature": "void onEventLoop(Action0 action)", "full_signature": "private void onEventLoop(Action0 action)", "class_method_signature": "DefaultAgentCache.onEventLoop(Action0 action)", "testcase": false, "constructor": false}, {"identifier": "onEventLoopWithSubscription", "parameters": "(Action0 action)", "modifiers": "private", "return": "Completable", "signature": "Completable onEventLoopWithSubscription(Action0 action)", "full_signature": "private Completable onEventLoopWithSubscription(Action0 action)", "class_method_signature": "DefaultAgentCache.onEventLoopWithSubscription(Action0 action)", "testcase": false, "constructor": false}, {"identifier": "onEventLoopWithSubscription", "parameters": "(Supplier<T> supplier)", "modifiers": "private", "return": "Single<T>", "signature": "Single<T> onEventLoopWithSubscription(Supplier<T> supplier)", "full_signature": "private Single<T> onEventLoopWithSubscription(Supplier<T> supplier)", "class_method_signature": "DefaultAgentCache.onEventLoopWithSubscription(Supplier<T> supplier)", "testcase": false, "constructor": false}, {"identifier": "setDataSnapshot", "parameters": "(AgentDataSnapshot dataSnapshot)", "modifiers": "private", "return": "void", "signature": "void setDataSnapshot(AgentDataSnapshot dataSnapshot)", "full_signature": "private void setDataSnapshot(AgentDataSnapshot dataSnapshot)", "class_method_signature": "DefaultAgentCache.setDataSnapshot(AgentDataSnapshot dataSnapshot)", "testcase": false, "constructor": false}, {"identifier": "isAgentInstanceGroupUpdated", "parameters": "(AgentInstanceGroup first, AgentInstanceGroup second)", "modifiers": "private", "return": "boolean", "signature": "boolean isAgentInstanceGroupUpdated(AgentInstanceGroup first, AgentInstanceGroup second)", "full_signature": "private boolean isAgentInstanceGroupUpdated(AgentInstanceGroup first, AgentInstanceGroup second)", "class_method_signature": "DefaultAgentCache.isAgentInstanceGroupUpdated(AgentInstanceGroup first, AgentInstanceGroup second)", "testcase": false, "constructor": false}, {"identifier": "isAgentInstancesUpdated", "parameters": "(Set<AgentInstance> first, Set<AgentInstance> second)", "modifiers": "private", "return": "boolean", "signature": "boolean isAgentInstancesUpdated(Set<AgentInstance> first, Set<AgentInstance> second)", "full_signature": "private boolean isAgentInstancesUpdated(Set<AgentInstance> first, Set<AgentInstance> second)", "class_method_signature": "DefaultAgentCache.isAgentInstancesUpdated(Set<AgentInstance> first, Set<AgentInstance> second)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/agent/service/cache/DefaultAgentCache.java"}, "focal_method": {"identifier": "getAgentInstances", "parameters": "(String instanceGroupId)", "modifiers": "@Override public", "return": "Set<AgentInstance>", "body": "@Override\n    public Set<AgentInstance> getAgentInstances(String instanceGroupId) {\n        return AgentManagementException.checkInstanceGroupFound(dataSnapshot.getInstances(instanceGroupId), instanceGroupId);\n    }", "signature": "Set<AgentInstance> getAgentInstances(String instanceGroupId)", "full_signature": "@Override public Set<AgentInstance> getAgentInstances(String instanceGroupId)", "class_method_signature": "DefaultAgentCache.getAgentInstances(String instanceGroupId)", "testcase": false, "constructor": false, "invocations": ["checkInstanceGroupFound", "getInstances"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}