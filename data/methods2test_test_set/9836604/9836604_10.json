{"test_class": {"identifier": "LogoutActionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate LogoutAction logoutAction;", "modifier": "@Autowired\n\tprivate", "type": "LogoutAction", "declarator": "logoutAction", "var_name": "logoutAction"}], "file": "ki4so-web/src/test/java/com/github/ebnew/ki4so/web/action/LogoutActionTest.java"}, "test_case": {"identifier": "testLogout", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testLogout() {\n\t\tMockHttpServletRequest request = new MockHttpServletRequest();\n\t\tMockHttpServletResponse response = new MockHttpServletResponse();\n\t\t\n\t\tCredentialResolver credentialResolver = Mockito.mock(CredentialResolver.class);\n\t\tlogoutAction.setCredentialResolver(credentialResolver);\n\t\t\n\t\tKi4soService ki4soService = Mockito.mock(Ki4soService.class);\n\t\tlogoutAction.setKi4soService(ki4soService);\n\t\t\n\t\t//\u6d4b\u8bd5\u6ca1\u6709cookie\u7684\u60c5\u51b5\u3002\n\t\tlogoutAction.logout(request, response);\n\t\tAssert.assertEquals(0, response.getCookies().length);\n\t\t\n\t\t//\u6d4b\u8bd5\u5b58\u5728cookie\uff0c\u767b\u51fa\u540e\u8981\u6e05\u9664cookie\u503c\u3002\n\t\trequest = new MockHttpServletRequest();\n\t\tresponse = new MockHttpServletResponse();\n\t\trequest.setCookies(new Cookie(WebConstants.KI4SO_SERVER_ENCRYPTED_CREDENTIAL_COOKIE_KEY, \"dddsd\"));\n\t\tlogoutAction.logout(request, response);\n\t\tAssert.assertEquals(1, response.getCookies().length);\n\t\tAssert.assertEquals(0, response.getCookies()[0].getMaxAge());\n\t}", "signature": "void testLogout()", "full_signature": "@Test public void testLogout()", "class_method_signature": "LogoutActionTest.testLogout()", "testcase": true, "constructor": false, "invocations": ["mock", "setCredentialResolver", "mock", "setKi4soService", "logout", "assertEquals", "getCookies", "setCookies", "logout", "assertEquals", "getCookies", "assertEquals", "getMaxAge", "getCookies"]}, "focal_class": {"identifier": "LogoutAction", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprotected CredentialResolver credentialResolver;", "modifier": "@Autowired\n\tprotected", "type": "CredentialResolver", "declarator": "credentialResolver", "var_name": "credentialResolver"}, {"original_string": "@Autowired\n\tprotected Ki4soService ki4soService;", "modifier": "@Autowired\n\tprotected", "type": "Ki4soService", "declarator": "ki4soService", "var_name": "ki4soService"}], "methods": [{"identifier": "setKi4soService", "parameters": "(Ki4soService ki4soService)", "modifiers": "public", "return": "void", "signature": "void setKi4soService(Ki4soService ki4soService)", "full_signature": "public void setKi4soService(Ki4soService ki4soService)", "class_method_signature": "LogoutAction.setKi4soService(Ki4soService ki4soService)", "testcase": false, "constructor": false}, {"identifier": "setCredentialResolver", "parameters": "(CredentialResolver credentialResolver)", "modifiers": "public", "return": "void", "signature": "void setCredentialResolver(CredentialResolver credentialResolver)", "full_signature": "public void setCredentialResolver(CredentialResolver credentialResolver)", "class_method_signature": "LogoutAction.setCredentialResolver(CredentialResolver credentialResolver)", "testcase": false, "constructor": false}, {"identifier": "getAppList", "parameters": "(HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "modifiers": "@RequestMapping(\"/getAppList\") public", "return": "void", "signature": "void getAppList(HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "full_signature": "@RequestMapping(\"/getAppList\") public void getAppList(HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "class_method_signature": "LogoutAction.getAppList(HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getCallbackName", "parameters": "(String defalutCallbackName, HttpServletRequest request)", "modifiers": "private", "return": "String", "signature": "String getCallbackName(String defalutCallbackName, HttpServletRequest request)", "full_signature": "private String getCallbackName(String defalutCallbackName, HttpServletRequest request)", "class_method_signature": "LogoutAction.getCallbackName(String defalutCallbackName, HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "logout", "parameters": "(HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "modifiers": "@RequestMapping(\"/logout\") public", "return": "void", "signature": "void logout(HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "full_signature": "@RequestMapping(\"/logout\") public void logout(HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "class_method_signature": "LogoutAction.logout(HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "testcase": false, "constructor": false}], "file": "ki4so-web/src/main/java/com/github/ebnew/ki4so/web/action/LogoutAction.java"}, "focal_method": {"identifier": "logout", "parameters": "(HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "modifiers": "@RequestMapping(\"/logout\") public", "return": "void", "body": "@RequestMapping(\"/logout\")\n\tpublic void logout(HttpServletRequest request,\n\t\t\tHttpServletResponse response) {\n\t\t//\u6e05\u9664\u7528\u6237\u767b\u5f55\u5e94\u7528\u5217\u8868\u3002\n\t\t//\u89e3\u6790\u7528\u6237\u51ed\u636e\u3002\n\t\tCredential credential = credentialResolver.resolveCredential(request);\n\t\tthis.ki4soService.logout(credential);\n\t\t\n\t\t//\u6e05\u9664cookie\u503c\u3002\n\t\tCookie[] cookies = request.getCookies();\n\t\tif(cookies!=null && cookies.length>0){\n\t\t\tfor(Cookie cookie:cookies){\n\t\t\t\tif(WebConstants.KI4SO_SERVER_ENCRYPTED_CREDENTIAL_COOKIE_KEY.equals(cookie.getName())){\n\t\t\t\t\t//\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\u4e3a\u7acb\u5373\u3002\n\t\t\t\t\tcookie.setMaxAge(0);\n\t\t\t\t\tresponse.addCookie(cookie);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tString json = \"{result:true}\";\n\t\t//\u62fc\u63a5jsonp\u683c\u5f0f\u7684\u6570\u636e\u3002\n\t\tStringBuffer sb = new StringBuffer();\n\t\tsb.append(getCallbackName(\"logoutKi4soServer\", request))\n\t\t.append(\"(\")\n\t\t.append(json)\n\t\t.append(\");\");\n\t\t//\u5199\u5165jsonp\u683c\u5f0f\u7684\u6570\u636e\u3002\n\t\ttry {\n\t\t\tresponse.setContentType(\"application/x-javascript\");\n\t\t\tresponse.setCharacterEncoding(\"UTF-8\");\n\t\t\tresponse.getWriter().println(sb.toString());\n\t\t} catch (IOException e) {\n\t\t}\n\t}", "signature": "void logout(HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "full_signature": "@RequestMapping(\"/logout\") public void logout(HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "class_method_signature": "LogoutAction.logout(HttpServletRequest request,\n\t\t\tHttpServletResponse response)", "testcase": false, "constructor": false, "invocations": ["resolveCredential", "logout", "getCookies", "equals", "getName", "setMaxAge", "addCookie", "append", "append", "append", "append", "getCallbackName", "setContentType", "setCharacterEncoding", "println", "getWriter", "toString"]}, "repository": {"repo_id": 9836604, "url": "https://github.com/ebnew/ki4so", "language": "Java", "is_fork": false, "fork_count": 84, "stargazer_count": 100, "size": 4421, "license": "licensed"}}