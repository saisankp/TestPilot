{"test_class": {"identifier": "GridUtilityTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String ncLocation;", "modifier": "private", "type": "String", "declarator": "ncLocation", "var_name": "ncLocation"}, {"original_string": "private String sfLocation;", "modifier": "private", "type": "String", "declarator": "sfLocation", "var_name": "sfLocation"}, {"original_string": "private FeatureDataset dataset;", "modifier": "private", "type": "FeatureDataset", "declarator": "dataset", "var_name": "dataset"}, {"original_string": "private FileDataStore dataStore;", "modifier": "private", "type": "FileDataStore", "declarator": "dataStore", "var_name": "dataStore"}, {"original_string": "private static org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(GridUtilityTest.class);", "modifier": "private static", "type": "org.slf4j.Logger", "declarator": "log = org.slf4j.LoggerFactory.getLogger(GridUtilityTest.class)", "var_name": "log"}], "file": "gdp-core-processing/src/test/java/gov/usgs/cida/gdp/coreprocessing/analysis/grid/GridUtilityTest.java"}, "test_case": {"identifier": "testMiddleOfBiggerGrid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMiddleOfBiggerGrid() throws IOException, InvalidRangeException {\n        ncLocation = getResourceDir() + File.separator + \"testCoverageTYXFourByFour.ncml\";\n        getFeatureCollection(ncLocation);\n        LatLonRect llr = new LatLonRect(\n                new LatLonPointImpl(41, -90),\n                new LatLonPointImpl(42, -89));\n        GridCoordSystem gcs = getGridCoordinateSystem();\n        Range[] range = GridUtility.getXYRangesFromLatLonRect(llr, gcs);\n        assertTrue(\"Range should be 4x4 since they are buffered\", (range[0].length() == 4 && range[1].length() == 4));\n    }", "signature": "void testMiddleOfBiggerGrid()", "full_signature": "@Test public void testMiddleOfBiggerGrid()", "class_method_signature": "GridUtilityTest.testMiddleOfBiggerGrid()", "testcase": true, "constructor": false, "invocations": ["getResourceDir", "getFeatureCollection", "getGridCoordinateSystem", "getXYRangesFromLatLonRect", "assertTrue", "length", "length"]}, "focal_class": {"identifier": "GridUtility", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "GridUtility", "parameters": "()", "modifiers": "private", "return": "", "signature": " GridUtility()", "full_signature": "private  GridUtility()", "class_method_signature": "GridUtility.GridUtility()", "testcase": false, "constructor": true}, {"identifier": "getXAxisLength", "parameters": "(GridCoordSystem gcs)", "modifiers": "public static", "return": "int", "signature": "int getXAxisLength(GridCoordSystem gcs)", "full_signature": "public static int getXAxisLength(GridCoordSystem gcs)", "class_method_signature": "GridUtility.getXAxisLength(GridCoordSystem gcs)", "testcase": false, "constructor": false}, {"identifier": "getYAxisLength", "parameters": "(GridCoordSystem gcs)", "modifiers": "public static", "return": "int", "signature": "int getYAxisLength(GridCoordSystem gcs)", "full_signature": "public static int getYAxisLength(GridCoordSystem gcs)", "class_method_signature": "GridUtility.getYAxisLength(GridCoordSystem gcs)", "testcase": false, "constructor": false}, {"identifier": "getXAxisRange", "parameters": "(GridCoordSystem gcs)", "modifiers": "public static", "return": "Range", "signature": "Range getXAxisRange(GridCoordSystem gcs)", "full_signature": "public static Range getXAxisRange(GridCoordSystem gcs)", "class_method_signature": "GridUtility.getXAxisRange(GridCoordSystem gcs)", "testcase": false, "constructor": false}, {"identifier": "getYAxisRange", "parameters": "(GridCoordSystem gcs)", "modifiers": "public static", "return": "Range", "signature": "Range getYAxisRange(GridCoordSystem gcs)", "full_signature": "public static Range getYAxisRange(GridCoordSystem gcs)", "class_method_signature": "GridUtility.getYAxisRange(GridCoordSystem gcs)", "testcase": false, "constructor": false}, {"identifier": "checkXYAxisIsValid", "parameters": "(CoordinateAxis axis)", "modifiers": "private static", "return": "boolean", "signature": "boolean checkXYAxisIsValid(CoordinateAxis axis)", "full_signature": "private static boolean checkXYAxisIsValid(CoordinateAxis axis)", "class_method_signature": "GridUtility.checkXYAxisIsValid(CoordinateAxis axis)", "testcase": false, "constructor": false}, {"identifier": "getXAxisLengthQuick", "parameters": "(GridCoordSystem gcs)", "modifiers": "public static", "return": "int", "signature": "int getXAxisLengthQuick(GridCoordSystem gcs)", "full_signature": "public static int getXAxisLengthQuick(GridCoordSystem gcs)", "class_method_signature": "GridUtility.getXAxisLengthQuick(GridCoordSystem gcs)", "testcase": false, "constructor": false}, {"identifier": "getYAxisLengthQuick", "parameters": "(GridCoordSystem gcs)", "modifiers": "public static", "return": "int", "signature": "int getYAxisLengthQuick(GridCoordSystem gcs)", "full_signature": "public static int getYAxisLengthQuick(GridCoordSystem gcs)", "class_method_signature": "GridUtility.getYAxisLengthQuick(GridCoordSystem gcs)", "testcase": false, "constructor": false}, {"identifier": "getXAxisRangeQuick", "parameters": "(GridCoordSystem gcs)", "modifiers": "public static", "return": "Range", "signature": "Range getXAxisRangeQuick(GridCoordSystem gcs)", "full_signature": "public static Range getXAxisRangeQuick(GridCoordSystem gcs)", "class_method_signature": "GridUtility.getXAxisRangeQuick(GridCoordSystem gcs)", "testcase": false, "constructor": false}, {"identifier": "getYAxisRangeQuick", "parameters": "(GridCoordSystem gcs)", "modifiers": "public static", "return": "Range", "signature": "Range getYAxisRangeQuick(GridCoordSystem gcs)", "full_signature": "public static Range getYAxisRangeQuick(GridCoordSystem gcs)", "class_method_signature": "GridUtility.getYAxisRangeQuick(GridCoordSystem gcs)", "testcase": false, "constructor": false}, {"identifier": "getBoundingBox", "parameters": "(GridDatatype gdt)", "modifiers": "public static", "return": "BoundingBox", "signature": "BoundingBox getBoundingBox(GridDatatype gdt)", "full_signature": "public static BoundingBox getBoundingBox(GridDatatype gdt)", "class_method_signature": "GridUtility.getBoundingBox(GridDatatype gdt)", "testcase": false, "constructor": false}, {"identifier": "getBoundingBox", "parameters": "(GridCoordSystem gcs)", "modifiers": "public static", "return": "BoundingBox", "signature": "BoundingBox getBoundingBox(GridCoordSystem gcs)", "full_signature": "public static BoundingBox getBoundingBox(GridCoordSystem gcs)", "class_method_signature": "GridUtility.getBoundingBox(GridCoordSystem gcs)", "testcase": false, "constructor": false}, {"identifier": "getXYRangesFromBoundingBox", "parameters": "(BoundingBox bounds, GridCoordSystem gcs)", "modifiers": "public static", "return": "Range[]", "signature": "Range[] getXYRangesFromBoundingBox(BoundingBox bounds, GridCoordSystem gcs)", "full_signature": "public static Range[] getXYRangesFromBoundingBox(BoundingBox bounds, GridCoordSystem gcs)", "class_method_signature": "GridUtility.getXYRangesFromBoundingBox(BoundingBox bounds, GridCoordSystem gcs)", "testcase": false, "constructor": false}, {"identifier": "getXYRangesFromBoundingBox", "parameters": "(BoundingBox bounds, GridCoordSystem gcs, boolean requireFullCoverage)", "modifiers": "public static", "return": "Range[]", "signature": "Range[] getXYRangesFromBoundingBox(BoundingBox bounds, GridCoordSystem gcs, boolean requireFullCoverage)", "full_signature": "public static Range[] getXYRangesFromBoundingBox(BoundingBox bounds, GridCoordSystem gcs, boolean requireFullCoverage)", "class_method_signature": "GridUtility.getXYRangesFromBoundingBox(BoundingBox bounds, GridCoordSystem gcs, boolean requireFullCoverage)", "testcase": false, "constructor": false}, {"identifier": "getXYRangesFromLatLonRect", "parameters": "(LatLonRect llr, GridCoordSystem gcs)", "modifiers": "@Deprecated public static", "return": "Range[]", "signature": "Range[] getXYRangesFromLatLonRect(LatLonRect llr, GridCoordSystem gcs)", "full_signature": "@Deprecated public static Range[] getXYRangesFromLatLonRect(LatLonRect llr, GridCoordSystem gcs)", "class_method_signature": "GridUtility.getXYRangesFromLatLonRect(LatLonRect llr, GridCoordSystem gcs)", "testcase": false, "constructor": false}, {"identifier": "bufferXYRanges", "parameters": "(GridCoordSystem gcs, Range[] ranges)", "modifiers": "public static", "return": "Range[]", "signature": "Range[] bufferXYRanges(GridCoordSystem gcs, Range[] ranges)", "full_signature": "public static Range[] bufferXYRanges(GridCoordSystem gcs, Range[] ranges)", "class_method_signature": "GridUtility.bufferXYRanges(GridCoordSystem gcs, Range[] ranges)", "testcase": false, "constructor": false}, {"identifier": "generateIndexToCellCenterLatLonCoordinateBuilder", "parameters": "(GridCoordSystem gridCoordSystem)", "modifiers": "@Deprecated public static", "return": "IndexToCoordinateBuilder", "signature": "IndexToCoordinateBuilder generateIndexToCellCenterLatLonCoordinateBuilder(GridCoordSystem gridCoordSystem)", "full_signature": "@Deprecated public static IndexToCoordinateBuilder generateIndexToCellCenterLatLonCoordinateBuilder(GridCoordSystem gridCoordSystem)", "class_method_signature": "GridUtility.generateIndexToCellCenterLatLonCoordinateBuilder(GridCoordSystem gridCoordSystem)", "testcase": false, "constructor": false}, {"identifier": "generateIndexToCellEdgeLatLonCoordinateBuilder", "parameters": "(GridCoordSystem gridCoordSystem)", "modifiers": "@Deprecated public static", "return": "IndexToCoordinateBuilder", "signature": "IndexToCoordinateBuilder generateIndexToCellEdgeLatLonCoordinateBuilder(GridCoordSystem gridCoordSystem)", "full_signature": "@Deprecated public static IndexToCoordinateBuilder generateIndexToCellEdgeLatLonCoordinateBuilder(GridCoordSystem gridCoordSystem)", "class_method_signature": "GridUtility.generateIndexToCellEdgeLatLonCoordinateBuilder(GridCoordSystem gridCoordSystem)", "testcase": false, "constructor": false}, {"identifier": "generateIndexToCellCenterCoordinateBuilder", "parameters": "(GridCoordSystem gridCoordSystem)", "modifiers": "public static", "return": "IndexToCoordinateBuilder", "signature": "IndexToCoordinateBuilder generateIndexToCellCenterCoordinateBuilder(GridCoordSystem gridCoordSystem)", "full_signature": "public static IndexToCoordinateBuilder generateIndexToCellCenterCoordinateBuilder(GridCoordSystem gridCoordSystem)", "class_method_signature": "GridUtility.generateIndexToCellCenterCoordinateBuilder(GridCoordSystem gridCoordSystem)", "testcase": false, "constructor": false}, {"identifier": "generateIndexToCellEdgeCoordinateBuilder", "parameters": "(GridCoordSystem gridCoordSystem)", "modifiers": "public static", "return": "IndexToCoordinateBuilder", "signature": "IndexToCoordinateBuilder generateIndexToCellEdgeCoordinateBuilder(GridCoordSystem gridCoordSystem)", "full_signature": "public static IndexToCoordinateBuilder generateIndexToCellEdgeCoordinateBuilder(GridCoordSystem gridCoordSystem)", "class_method_signature": "GridUtility.generateIndexToCellEdgeCoordinateBuilder(GridCoordSystem gridCoordSystem)", "testcase": false, "constructor": false}, {"identifier": "generateCoordinateBuilder", "parameters": "(GridCoordSystem gridCoordSystem)", "modifiers": "@Deprecated private static", "return": "CoordinateBuilder", "signature": "CoordinateBuilder generateCoordinateBuilder(GridCoordSystem gridCoordSystem)", "full_signature": "@Deprecated private static CoordinateBuilder generateCoordinateBuilder(GridCoordSystem gridCoordSystem)", "class_method_signature": "GridUtility.generateCoordinateBuilder(GridCoordSystem gridCoordSystem)", "testcase": false, "constructor": false}, {"identifier": "generateGridCellCenterAdapterX", "parameters": "(GridCoordSystem gridCoordSystem)", "modifiers": "private static", "return": "GridCellCenterAdapter", "signature": "GridCellCenterAdapter generateGridCellCenterAdapterX(GridCoordSystem gridCoordSystem)", "full_signature": "private static GridCellCenterAdapter generateGridCellCenterAdapterX(GridCoordSystem gridCoordSystem)", "class_method_signature": "GridUtility.generateGridCellCenterAdapterX(GridCoordSystem gridCoordSystem)", "testcase": false, "constructor": false}, {"identifier": "generateGridCellCenterAdapterY", "parameters": "(GridCoordSystem gridCoordSystem)", "modifiers": "private static", "return": "GridCellCenterAdapter", "signature": "GridCellCenterAdapter generateGridCellCenterAdapterY(GridCoordSystem gridCoordSystem)", "full_signature": "private static GridCellCenterAdapter generateGridCellCenterAdapterY(GridCoordSystem gridCoordSystem)", "class_method_signature": "GridUtility.generateGridCellCenterAdapterY(GridCoordSystem gridCoordSystem)", "testcase": false, "constructor": false}, {"identifier": "generateGridCellEdgeAdapterX", "parameters": "(GridCoordSystem gridCoordSystem)", "modifiers": "private static", "return": "GridCellEdgeAdapter", "signature": "GridCellEdgeAdapter generateGridCellEdgeAdapterX(GridCoordSystem gridCoordSystem)", "full_signature": "private static GridCellEdgeAdapter generateGridCellEdgeAdapterX(GridCoordSystem gridCoordSystem)", "class_method_signature": "GridUtility.generateGridCellEdgeAdapterX(GridCoordSystem gridCoordSystem)", "testcase": false, "constructor": false}, {"identifier": "generateGridCellEdgeAdapterY", "parameters": "(GridCoordSystem gridCoordSystem)", "modifiers": "private static", "return": "GridCellEdgeAdapter", "signature": "GridCellEdgeAdapter generateGridCellEdgeAdapterY(GridCoordSystem gridCoordSystem)", "full_signature": "private static GridCellEdgeAdapter generateGridCellEdgeAdapterY(GridCoordSystem gridCoordSystem)", "class_method_signature": "GridUtility.generateGridCellEdgeAdapterY(GridCoordSystem gridCoordSystem)", "testcase": false, "constructor": false}], "file": "gdp-core-processing/src/main/java/gov/usgs/cida/gdp/coreprocessing/analysis/grid/GridUtility.java"}, "focal_method": {"identifier": "getXYRangesFromLatLonRect", "parameters": "(LatLonRect llr, GridCoordSystem gcs)", "modifiers": "@Deprecated public static", "return": "Range[]", "body": "@Deprecated\n    public static Range[] getXYRangesFromLatLonRect(LatLonRect llr, GridCoordSystem gcs)\n            throws InvalidRangeException\n    {\n\n\t\tdouble[][] coords = {\n\t\t\t{ llr.getLatMin(), llr.getLonMin() },\n\t\t\t{ llr.getLatMin(), llr.getLonMax() },\n\t\t\t{ llr.getLatMax(), llr.getLonMax() },\n\t\t\t{ llr.getLatMax(), llr.getLonMin() },\n\t\t};\n\t\tint[] currentIndices = new int[2];\n\t\tint lowerX = Integer.MAX_VALUE;\n\t\tint upperX = Integer.MIN_VALUE;\n\t\tint lowerY = Integer.MAX_VALUE;\n\t\tint upperY = Integer.MIN_VALUE;\n\t\tfor (int i = 0; i < coords.length; ++i) {\n\t\t\t// seem to need this for CoordinateAxis2D instances\n\t\t\tgcs.findXYindexFromLatLon(coords[i][0], coords[i][1], currentIndices);\n\t\t\tif (currentIndices[0] < lowerX) { lowerX = currentIndices[0] ; }\n\t\t\tif (currentIndices[0] > upperX) { upperX = currentIndices[0] ; }\n\t\t\tif (currentIndices[1] < lowerY) { lowerY = currentIndices[1] ; }\n\t\t\tif (currentIndices[1] > upperY) { upperY = currentIndices[1] ; }\n\t\t}\n\n\t\treturn bufferXYRanges(gcs, new Range[] {\n            new Range(lowerX, upperX),\n            new Range(lowerY, upperY),\n        } );\n    }", "signature": "Range[] getXYRangesFromLatLonRect(LatLonRect llr, GridCoordSystem gcs)", "full_signature": "@Deprecated public static Range[] getXYRangesFromLatLonRect(LatLonRect llr, GridCoordSystem gcs)", "class_method_signature": "GridUtility.getXYRangesFromLatLonRect(LatLonRect llr, GridCoordSystem gcs)", "testcase": false, "constructor": false, "invocations": ["getLatMin", "getLonMin", "getLatMin", "getLonMax", "getLatMax", "getLonMax", "getLatMax", "getLonMin", "findXYindexFromLatLon", "bufferXYRanges"]}, "repository": {"repo_id": 11799031, "url": "https://github.com/USGS-CIDA/geo-data-portal", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 9, "size": 178468, "license": "licensed"}}