{"test_class": {"identifier": "ConversionContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final AnnotatedElement MY_ANNOTATED_ELEMENT = new AnnotatedElement() {\n        @Override\n        public <T extends Annotation> T getAnnotation(Class<T> annotationClass) {\n            throw new UnsupportedOperationException(\"Not supported yet.\");\n        }\n\n        @Override\n        public Annotation[] getAnnotations() {\n            throw new UnsupportedOperationException(\"Not supported yet.\");\n        }\n\n        @Override\n        public Annotation[] getDeclaredAnnotations() {\n            throw new UnsupportedOperationException(\"Not supported yet.\");\n        }\n    };", "modifier": "private static final", "type": "AnnotatedElement", "declarator": "MY_ANNOTATED_ELEMENT = new AnnotatedElement() {\n        @Override\n        public <T extends Annotation> T getAnnotation(Class<T> annotationClass) {\n            throw new UnsupportedOperationException(\"Not supported yet.\");\n        }\n\n        @Override\n        public Annotation[] getAnnotations() {\n            throw new UnsupportedOperationException(\"Not supported yet.\");\n        }\n\n        @Override\n        public Annotation[] getDeclaredAnnotations() {\n            throw new UnsupportedOperationException(\"Not supported yet.\");\n        }\n    }", "var_name": "MY_ANNOTATED_ELEMENT"}], "file": "code/api/src/test/java/org/apache/tamaya/spi/ConversionContextTest.java"}, "test_case": {"identifier": "testConfiguration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConfiguration() throws Exception {\n        Configuration config = Configuration.EMPTY;\n        ConversionContext ctx = new ConversionContext.Builder(\"testConfiguration\", TypeLiteral.of(List.class))\n                .setConfiguration(config).build();\n        assertThat(ctx.getConfiguration()).isEqualTo(config);\n    }", "signature": "void testConfiguration()", "full_signature": "@Test public void testConfiguration()", "class_method_signature": "ConversionContextTest.testConfiguration()", "testcase": true, "constructor": false, "invocations": ["build", "setConfiguration", "of", "isEqualTo", "assertThat", "getConfiguration"]}, "focal_class": {"identifier": "ConversionContext", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final ConversionContext EMPTY = new ConversionContext.Builder(TypeLiteral.of(String.class)).build();", "modifier": "public static final", "type": "ConversionContext", "declarator": "EMPTY = new ConversionContext.Builder(TypeLiteral.of(String.class)).build()", "var_name": "EMPTY"}, {"original_string": "private final Configuration configuration;", "modifier": "private final", "type": "Configuration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private final String key;", "modifier": "private final", "type": "String", "declarator": "key", "var_name": "key"}, {"original_string": "private final List<PropertyValue> values;", "modifier": "private final", "type": "List<PropertyValue>", "declarator": "values", "var_name": "values"}, {"original_string": "private final TypeLiteral<?> targetType;", "modifier": "private final", "type": "TypeLiteral<?>", "declarator": "targetType", "var_name": "targetType"}, {"original_string": "private final AnnotatedElement annotatedElement;", "modifier": "private final", "type": "AnnotatedElement", "declarator": "annotatedElement", "var_name": "annotatedElement"}, {"original_string": "private final Set<String> supportedFormats = new LinkedHashSet<>();", "modifier": "private final", "type": "Set<String>", "declarator": "supportedFormats = new LinkedHashSet<>()", "var_name": "supportedFormats"}], "methods": [{"identifier": "ConversionContext", "parameters": "(Builder builder)", "modifiers": "protected", "return": "", "signature": " ConversionContext(Builder builder)", "full_signature": "protected  ConversionContext(Builder builder)", "class_method_signature": "ConversionContext.ConversionContext(Builder builder)", "testcase": false, "constructor": true}, {"identifier": "getKey", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getKey()", "full_signature": "public String getKey()", "class_method_signature": "ConversionContext.getKey()", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "()", "modifiers": "public", "return": "List<PropertyValue>", "signature": "List<PropertyValue> getValues()", "full_signature": "public List<PropertyValue> getValues()", "class_method_signature": "ConversionContext.getValues()", "testcase": false, "constructor": false}, {"identifier": "getTargetType", "parameters": "()", "modifiers": "public", "return": "TypeLiteral<?>", "signature": "TypeLiteral<?> getTargetType()", "full_signature": "public TypeLiteral<?> getTargetType()", "class_method_signature": "ConversionContext.getTargetType()", "testcase": false, "constructor": false}, {"identifier": "getAnnotatedElement", "parameters": "()", "modifiers": "public", "return": "AnnotatedElement", "signature": "AnnotatedElement getAnnotatedElement()", "full_signature": "public AnnotatedElement getAnnotatedElement()", "class_method_signature": "ConversionContext.getAnnotatedElement()", "testcase": false, "constructor": false}, {"identifier": "getConfiguration", "parameters": "()", "modifiers": "public", "return": "Configuration", "signature": "Configuration getConfiguration()", "full_signature": "public Configuration getConfiguration()", "class_method_signature": "ConversionContext.getConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getMeta", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getMeta()", "full_signature": "public Map<String, String> getMeta()", "class_method_signature": "ConversionContext.getMeta()", "testcase": false, "constructor": false}, {"identifier": "addSupportedFormats", "parameters": "(@SuppressWarnings(\"rawtypes\") Class<?> converterType, String... formatDescriptors)", "modifiers": "public", "return": "void", "signature": "void addSupportedFormats(@SuppressWarnings(\"rawtypes\") Class<?> converterType, String... formatDescriptors)", "full_signature": "public void addSupportedFormats(@SuppressWarnings(\"rawtypes\") Class<?> converterType, String... formatDescriptors)", "class_method_signature": "ConversionContext.addSupportedFormats(@SuppressWarnings(\"rawtypes\") Class<?> converterType, String... formatDescriptors)", "testcase": false, "constructor": false}, {"identifier": "getSupportedFormats", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getSupportedFormats()", "full_signature": "public List<String> getSupportedFormats()", "class_method_signature": "ConversionContext.getSupportedFormats()", "testcase": false, "constructor": false}, {"identifier": "toBuilder", "parameters": "()", "modifiers": "public", "return": "Builder", "signature": "Builder toBuilder()", "full_signature": "public Builder toBuilder()", "class_method_signature": "ConversionContext.toBuilder()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ConversionContext.toString()", "testcase": false, "constructor": false}, {"identifier": "getConfigurationContext", "parameters": "()", "modifiers": "@Deprecated public", "return": "ConfigurationContext", "signature": "ConfigurationContext getConfigurationContext()", "full_signature": "@Deprecated public ConfigurationContext getConfigurationContext()", "class_method_signature": "ConversionContext.getConfigurationContext()", "testcase": false, "constructor": false}], "file": "code/api/src/main/java/org/apache/tamaya/spi/ConversionContext.java"}, "focal_method": {"identifier": "getConfiguration", "parameters": "()", "modifiers": "public", "return": "Configuration", "body": "public Configuration getConfiguration(){\n        return configuration;\n    }", "signature": "Configuration getConfiguration()", "full_signature": "public Configuration getConfiguration()", "class_method_signature": "ConversionContext.getConfiguration()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}