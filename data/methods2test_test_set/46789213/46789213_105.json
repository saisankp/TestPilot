{"test_class": {"identifier": "TestNetworkConfigurationImpl", "superclass": "", "interfaces": "", "fields": [{"original_string": "private NetworkConfiguration netConf;", "modifier": "private", "type": "NetworkConfiguration", "declarator": "netConf", "var_name": "netConf"}, {"original_string": "private Party me;", "modifier": "private", "type": "Party", "declarator": "me", "var_name": "me"}, {"original_string": "private final int myId = 3;", "modifier": "private final", "type": "int", "declarator": "myId = 3", "var_name": "myId"}, {"original_string": "private final int numParties = 4;", "modifier": "private final", "type": "int", "declarator": "numParties = 4", "var_name": "numParties"}], "file": "core/src/test/java/dk/alexandra/fresco/framework/configuration/TestNetworkConfigurationImpl.java"}, "test_case": {"identifier": "testGetMyId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetMyId() {\n    assertEquals(me.getPartyId(), netConf.getMyId());\n  }", "signature": "void testGetMyId()", "full_signature": "@Test public void testGetMyId()", "class_method_signature": "TestNetworkConfigurationImpl.testGetMyId()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getPartyId", "getMyId"]}, "focal_class": {"identifier": "NetworkConfigurationImpl", "superclass": "", "interfaces": "implements NetworkConfiguration", "fields": [{"original_string": "private final int myId;", "modifier": "private final", "type": "int", "declarator": "myId", "var_name": "myId"}, {"original_string": "private final Map<Integer, Party> parties;", "modifier": "private final", "type": "Map<Integer, Party>", "declarator": "parties", "var_name": "parties"}], "methods": [{"identifier": "NetworkConfigurationImpl", "parameters": "(int myId, Map<Integer, Party> parties)", "modifiers": "public", "return": "", "signature": " NetworkConfigurationImpl(int myId, Map<Integer, Party> parties)", "full_signature": "public  NetworkConfigurationImpl(int myId, Map<Integer, Party> parties)", "class_method_signature": "NetworkConfigurationImpl.NetworkConfigurationImpl(int myId, Map<Integer, Party> parties)", "testcase": false, "constructor": true}, {"identifier": "getParty", "parameters": "(int id)", "modifiers": "@Override public", "return": "Party", "signature": "Party getParty(int id)", "full_signature": "@Override public Party getParty(int id)", "class_method_signature": "NetworkConfigurationImpl.getParty(int id)", "testcase": false, "constructor": false}, {"identifier": "getMyId", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMyId()", "full_signature": "@Override public int getMyId()", "class_method_signature": "NetworkConfigurationImpl.getMyId()", "testcase": false, "constructor": false}, {"identifier": "getMe", "parameters": "()", "modifiers": "@Override public", "return": "Party", "signature": "Party getMe()", "full_signature": "@Override public Party getMe()", "class_method_signature": "NetworkConfigurationImpl.getMe()", "testcase": false, "constructor": false}, {"identifier": "noOfParties", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int noOfParties()", "full_signature": "@Override public int noOfParties()", "class_method_signature": "NetworkConfigurationImpl.noOfParties()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "NetworkConfigurationImpl.toString()", "testcase": false, "constructor": false}, {"identifier": "checkAddressesUnique", "parameters": "(Map<Integer, Party> parties)", "modifiers": "private static", "return": "void", "signature": "void checkAddressesUnique(Map<Integer, Party> parties)", "full_signature": "private static void checkAddressesUnique(Map<Integer, Party> parties)", "class_method_signature": "NetworkConfigurationImpl.checkAddressesUnique(Map<Integer, Party> parties)", "testcase": false, "constructor": false}], "file": "core/src/main/java/dk/alexandra/fresco/framework/configuration/NetworkConfigurationImpl.java"}, "focal_method": {"identifier": "getMyId", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n  public int getMyId() {\n    return myId;\n  }", "signature": "int getMyId()", "full_signature": "@Override public int getMyId()", "class_method_signature": "NetworkConfigurationImpl.getMyId()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}