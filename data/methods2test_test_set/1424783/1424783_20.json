{"test_class": {"identifier": "DynamicTableModelTest", "superclass": "", "interfaces": "", "fields": [], "file": "androidplot-core/src/test/java/com/androidplot/ui/DynamicTableModelTest.java"}, "test_case": {"identifier": "testRowMajorIteration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRowMajorIteration() throws Exception {\n\n        // square table, both rows and columns defined:\n        TableModel model = new DynamicTableModel(2, 2);\n        RectF tableRect = new RectF(0, 0, 1000, 2000);\n        int createdCells = 4;\n        Iterator<RectF> it = model.getIterator(tableRect, createdCells);\n        \n\n        // 2x2:\n        // cell 0 (top-left\n        RectF cellRect = it.next();\n        assertEquals(500f, cellRect.width());\n        assertEquals(1000f, cellRect.height());\n        assertEquals(0f, cellRect.left);\n        assertEquals(0f, cellRect.top);\n        assertEquals(500f, cellRect.right);\n        assertEquals(1000f, cellRect.bottom);\n\n        // cell 1 (top-right)\n        cellRect = it.next();\n        assertEquals(500f, cellRect.width());\n        assertEquals(1000f, cellRect.height());\n        assertEquals(500f, cellRect.left);\n        assertEquals(0f, cellRect.top);\n        assertEquals(1000f, cellRect.right);\n        assertEquals(1000f, cellRect.bottom);\n\n        // cell 2 (bottom-left)\n        cellRect = it.next();\n        assertEquals(500f, cellRect.width());\n        assertEquals(1000f, cellRect.height());\n        assertEquals(0f, cellRect.left);\n        assertEquals(1000f, cellRect.top);\n        assertEquals(500f, cellRect.right);\n        assertEquals(2000f, cellRect.bottom);\n\n        // cell 3 (bottom-right)\n        cellRect = it.next();\n        assertEquals(500f, cellRect.width());\n        assertEquals(1000f, cellRect.height());\n        assertEquals(500f, cellRect.left);\n        assertEquals(1000f, cellRect.top);\n        assertEquals(1000f, cellRect.right);\n        assertEquals(2000f, cellRect.bottom);\n\n        // 2xN:\n        /*model = new DynamicTableModel(2, 0);\n        tableRect = new RectF(0, 0, 1000, 2000);\n        createdCells = 4;\n        it = model.getIterator(tableRect, createdCells);*/\n\n\n\n    }", "signature": "void testRowMajorIteration()", "full_signature": "@Test public void testRowMajorIteration()", "class_method_signature": "DynamicTableModelTest.testRowMajorIteration()", "testcase": true, "constructor": false, "invocations": ["getIterator", "next", "assertEquals", "width", "assertEquals", "height", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "next", "assertEquals", "width", "assertEquals", "height", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "next", "assertEquals", "width", "assertEquals", "height", "assertEquals", "assertEquals", "assertEquals", "assertEquals", "next", "assertEquals", "width", "assertEquals", "height", "assertEquals", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "DynamicTableModel", "superclass": "extends TableModel", "interfaces": "", "fields": [{"original_string": "private int numRows;", "modifier": "private", "type": "int", "declarator": "numRows", "var_name": "numRows"}, {"original_string": "private int numColumns;", "modifier": "private", "type": "int", "declarator": "numColumns", "var_name": "numColumns"}], "methods": [{"identifier": "DynamicTableModel", "parameters": "(int numColumns, int numRows)", "modifiers": "public", "return": "", "signature": " DynamicTableModel(int numColumns, int numRows)", "full_signature": "public  DynamicTableModel(int numColumns, int numRows)", "class_method_signature": "DynamicTableModel.DynamicTableModel(int numColumns, int numRows)", "testcase": false, "constructor": true}, {"identifier": "DynamicTableModel", "parameters": "(int numColumns, int numRows, TableOrder order)", "modifiers": "public", "return": "", "signature": " DynamicTableModel(int numColumns, int numRows, TableOrder order)", "full_signature": "public  DynamicTableModel(int numColumns, int numRows, TableOrder order)", "class_method_signature": "DynamicTableModel.DynamicTableModel(int numColumns, int numRows, TableOrder order)", "testcase": false, "constructor": true}, {"identifier": "getIterator", "parameters": "(RectF tableRect, int totalElements)", "modifiers": "@Override public", "return": "TableModelIterator", "signature": "TableModelIterator getIterator(RectF tableRect, int totalElements)", "full_signature": "@Override public TableModelIterator getIterator(RectF tableRect, int totalElements)", "class_method_signature": "DynamicTableModel.getIterator(RectF tableRect, int totalElements)", "testcase": false, "constructor": false}, {"identifier": "getCellRect", "parameters": "(RectF tableRect, int numElements)", "modifiers": "public", "return": "RectF", "signature": "RectF getCellRect(RectF tableRect, int numElements)", "full_signature": "public RectF getCellRect(RectF tableRect, int numElements)", "class_method_signature": "DynamicTableModel.getCellRect(RectF tableRect, int numElements)", "testcase": false, "constructor": false}, {"identifier": "calculateCellSize", "parameters": "(RectF tableRect,\n                                    Axis axis,\n                                    int numElementsInTable)", "modifiers": "private", "return": "float", "signature": "float calculateCellSize(RectF tableRect,\n                                    Axis axis,\n                                    int numElementsInTable)", "full_signature": "private float calculateCellSize(RectF tableRect,\n                                    Axis axis,\n                                    int numElementsInTable)", "class_method_signature": "DynamicTableModel.calculateCellSize(RectF tableRect,\n                                    Axis axis,\n                                    int numElementsInTable)", "testcase": false, "constructor": false}, {"identifier": "getNumRows", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumRows()", "full_signature": "public int getNumRows()", "class_method_signature": "DynamicTableModel.getNumRows()", "testcase": false, "constructor": false}, {"identifier": "setNumRows", "parameters": "(int numRows)", "modifiers": "public", "return": "void", "signature": "void setNumRows(int numRows)", "full_signature": "public void setNumRows(int numRows)", "class_method_signature": "DynamicTableModel.setNumRows(int numRows)", "testcase": false, "constructor": false}, {"identifier": "getNumColumns", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumColumns()", "full_signature": "public int getNumColumns()", "class_method_signature": "DynamicTableModel.getNumColumns()", "testcase": false, "constructor": false}, {"identifier": "setNumColumns", "parameters": "(int numColumns)", "modifiers": "public", "return": "void", "signature": "void setNumColumns(int numColumns)", "full_signature": "public void setNumColumns(int numColumns)", "class_method_signature": "DynamicTableModel.setNumColumns(int numColumns)", "testcase": false, "constructor": false}], "file": "androidplot-core/src/main/java/com/androidplot/ui/DynamicTableModel.java"}, "focal_method": {"identifier": "getIterator", "parameters": "(RectF tableRect, int totalElements)", "modifiers": "@Override public", "return": "TableModelIterator", "body": "@Override\n    public TableModelIterator getIterator(RectF tableRect, int totalElements) {\n        return new TableModelIterator(this, tableRect, totalElements);\n    }", "signature": "TableModelIterator getIterator(RectF tableRect, int totalElements)", "full_signature": "@Override public TableModelIterator getIterator(RectF tableRect, int totalElements)", "class_method_signature": "DynamicTableModel.getIterator(RectF tableRect, int totalElements)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1424783, "url": "https://github.com/halfhp/androidplot", "language": "Java", "is_fork": false, "fork_count": 129, "stargazer_count": 369, "size": 7178, "license": "licensed"}}