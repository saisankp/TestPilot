{"test_class": {"identifier": "XmlCalendarsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String FILE = \"c:\\\\localdata\\\\calendars.xml\";", "modifier": "public static final", "type": "String", "declarator": "FILE = \"c:\\\\localdata\\\\calendars.xml\"", "var_name": "FILE"}], "file": "jtss/src/test/java/ec/demetra/xml/calendars/XmlCalendarsTest.java"}, "test_case": {"identifier": "testFile", "parameters": "()", "modifiers": "@Test @Ignore public", "return": "void", "body": "@Test\n    @Ignore\n    public void testFile() throws JAXBException, SAXException, IOException, Exception {\n\n        XmlNationalCalendar xcal1 = new XmlNationalCalendar();\n        xcal1.setName(\"calendar.test1\");\n         XmlFixedDay fday = new XmlFixedDay();\n        fday.setMonth(Month.March);\n        fday.setDay(21);\n        XmlSpecialDayEvent sday = new XmlSpecialDayEvent();\n        sday.setDay(fday);\n        xcal1.getSpecialDayEvent().add(sday);\n\n        XmlNationalCalendar xcal2 = new XmlNationalCalendar();\n        xcal2.setName(\"calendar.test2\");\n        xcal2.getSpecialDayEvent().add(sday);\n\n        XmlChainedCalendar xchained = new XmlChainedCalendar();\n        xchained.setCalendarBreak(Day.toDay());\n        xchained.setStartCalendar(xcal1.getName());\n        xchained.setEndCalendar(xcal2.getName());\n        xchained.setName(\"calendar.chained\");\n\n        XmlCompositeCalendar xcomposite = new XmlCompositeCalendar();\n        xcomposite.getWeightedCalendar().add(new XmlWeightedItem(xcal1.getName()));\n        xcomposite.getWeightedCalendar().add(new XmlWeightedItem(xcal2.getName()));\n        xcomposite.getWeightedCalendar().add(new XmlWeightedItem(xchained.getName()));\n        xcomposite.setName(\"calendar.composite\");\n\n        XmlCalendars xcals = new XmlCalendars();\n        xcals.getCalendars().add(xcal1);\n        xcals.getCalendars().add(xcal2);\n        xcals.getCalendars().add(xchained);\n        xcals.getCalendars().add(xcomposite);\n\n        JAXBContext jaxb = JAXBContext.newInstance(xcals.getClass());\n        FileOutputStream ostream = new FileOutputStream(FILE);\n        try (OutputStreamWriter writer = new OutputStreamWriter(ostream, StandardCharsets.UTF_8)) {\n            Marshaller marshaller = jaxb.createMarshaller();\n            marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);\n            marshaller.marshal(xcals, writer);\n//            marshaller.marshal(new JAXBElement(QName.valueOf(\"test\"), XmlNationalCalendar.class, xcal), writer);\n            writer.flush();\n        }\n    }", "signature": "void testFile()", "full_signature": "@Test @Ignore public void testFile()", "class_method_signature": "XmlCalendarsTest.testFile()", "testcase": true, "constructor": false, "invocations": ["setName", "setMonth", "setDay", "setDay", "add", "getSpecialDayEvent", "setName", "add", "getSpecialDayEvent", "setCalendarBreak", "toDay", "setStartCalendar", "getName", "setEndCalendar", "getName", "setName", "add", "getWeightedCalendar", "getName", "add", "getWeightedCalendar", "getName", "add", "getWeightedCalendar", "getName", "setName", "add", "getCalendars", "add", "getCalendars", "add", "getCalendars", "add", "getCalendars", "newInstance", "getClass", "createMarshaller", "setProperty", "marshal", "flush"]}, "focal_class": {"identifier": "XmlCalendars", "superclass": "", "interfaces": "", "fields": [{"original_string": "@XmlElement(name = \"Calendar\")\n    protected List<XmlCalendar> calendar;", "modifier": "@XmlElement(name = \"Calendar\")\n    protected", "type": "List<XmlCalendar>", "declarator": "calendar", "var_name": "calendar"}], "methods": [{"identifier": "getCalendars", "parameters": "()", "modifiers": "public", "return": "List<XmlCalendar>", "signature": "List<XmlCalendar> getCalendars()", "full_signature": "public List<XmlCalendar> getCalendars()", "class_method_signature": "XmlCalendars.getCalendars()", "testcase": false, "constructor": false}], "file": "jtss/src/main/java/ec/demetra/xml/calendars/XmlCalendars.java"}, "focal_method": {"identifier": "getCalendars", "parameters": "()", "modifiers": "public", "return": "List<XmlCalendar>", "body": "public List<XmlCalendar> getCalendars() {\n        if (calendar == null) {\n            calendar = new ArrayList<>();\n        }\n        return this.calendar;\n    }", "signature": "List<XmlCalendar> getCalendars()", "full_signature": "public List<XmlCalendar> getCalendars()", "class_method_signature": "XmlCalendars.getCalendars()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}