{"test_class": {"identifier": "StringToNumberConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "StringToNumberConverter converter = new StringToNumberConverter();", "modifier": "", "type": "StringToNumberConverter", "declarator": "converter = new StringToNumberConverter()", "var_name": "converter"}], "file": "beanmother-core/src/test/java/io/beanmother/core/converter/std/StringToNumberConverterTest.java"}, "test_case": {"identifier": "testCanHandle", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCanHandle() {\n        assertTrue(converter.canHandle(\"1\", TypeToken.of(Integer.class)));\n        assertTrue(converter.canHandle(\"1\", TypeToken.of(Float.class)));\n        assertTrue(converter.canHandle(\"1\", TypeToken.of(Short.class)));\n        assertTrue(converter.canHandle(\"1\", TypeToken.of(Double.class)));\n        assertTrue(converter.canHandle(\"1\", TypeToken.of(Long.class)));\n\n        assertTrue(converter.canHandle(\"1\", TypeToken.of(Integer.class)));\n        assertTrue(converter.canHandle(\"1\", TypeToken.of(int.class)));\n        assertTrue(converter.canHandle(\"1\", TypeToken.of(short.class)));\n        assertTrue(converter.canHandle(\"1\", TypeToken.of(double.class)));\n        assertTrue(converter.canHandle(\"1\", TypeToken.of(long.class)));\n\n        assertFalse(converter.canHandle(\"abc\", TypeToken.of(Integer.class)));\n        assertFalse(converter.canHandle(\"1\", TypeToken.of(String.class)));\n    }", "signature": "void testCanHandle()", "full_signature": "@Test public void testCanHandle()", "class_method_signature": "StringToNumberConverterTest.testCanHandle()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "canHandle", "of", "assertTrue", "canHandle", "of", "assertTrue", "canHandle", "of", "assertTrue", "canHandle", "of", "assertTrue", "canHandle", "of", "assertTrue", "canHandle", "of", "assertTrue", "canHandle", "of", "assertTrue", "canHandle", "of", "assertTrue", "canHandle", "of", "assertTrue", "canHandle", "of", "assertFalse", "canHandle", "of", "assertFalse", "canHandle", "of"]}, "focal_class": {"identifier": "StringToNumberConverter", "superclass": "extends AbstractConverter", "interfaces": "", "fields": [], "methods": [{"identifier": "convert", "parameters": "(Object source, TypeToken<?> targetTypeToken)", "modifiers": "@Override public", "return": "Object", "signature": "Object convert(Object source, TypeToken<?> targetTypeToken)", "full_signature": "@Override public Object convert(Object source, TypeToken<?> targetTypeToken)", "class_method_signature": "StringToNumberConverter.convert(Object source, TypeToken<?> targetTypeToken)", "testcase": false, "constructor": false}, {"identifier": "canHandle", "parameters": "(Object source, TypeToken<?> targetTypeToken)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canHandle(Object source, TypeToken<?> targetTypeToken)", "full_signature": "@Override public boolean canHandle(Object source, TypeToken<?> targetTypeToken)", "class_method_signature": "StringToNumberConverter.canHandle(Object source, TypeToken<?> targetTypeToken)", "testcase": false, "constructor": false}], "file": "beanmother-core/src/main/java/io/beanmother/core/converter/std/StringToNumberConverter.java"}, "focal_method": {"identifier": "canHandle", "parameters": "(Object source, TypeToken<?> targetTypeToken)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean canHandle(Object source, TypeToken<?> targetTypeToken) {\n        if (targetTypeToken.isPrimitive()) {\n            targetTypeToken = PrimitiveTypeUtils.toWrapperTypeToken(targetTypeToken);\n        }\n        if (!targetTypeToken.isSubtypeOf(Number.class)) return false;\n\n        if (!(source instanceof String)) return false;\n\n        try {\n            NumberUtils.parseNumber((String) source, (Class) targetTypeToken.getType());\n            return true;\n        } catch (IllegalArgumentException e){\n            return false;\n        }\n    }", "signature": "boolean canHandle(Object source, TypeToken<?> targetTypeToken)", "full_signature": "@Override public boolean canHandle(Object source, TypeToken<?> targetTypeToken)", "class_method_signature": "StringToNumberConverter.canHandle(Object source, TypeToken<?> targetTypeToken)", "testcase": false, "constructor": false, "invocations": ["isPrimitive", "toWrapperTypeToken", "isSubtypeOf", "parseNumber", "getType"]}, "repository": {"repo_id": 100366560, "url": "https://github.com/keepcosmos/beanmother", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 95, "size": 688, "license": "licensed"}}