{"test_class": {"identifier": "DirectRunnerJobManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock private DirectJobRegistry directJobRegistry;", "modifier": "@Mock private", "type": "DirectJobRegistry", "declarator": "directJobRegistry", "var_name": "directJobRegistry"}, {"original_string": "private DirectRunnerJobManager drJobManager;", "modifier": "private", "type": "DirectRunnerJobManager", "declarator": "drJobManager", "var_name": "drJobManager"}, {"original_string": "private DirectRunnerConfigOptions defaults;", "modifier": "private", "type": "DirectRunnerConfigOptions", "declarator": "defaults", "var_name": "defaults"}, {"original_string": "private IngestionJobProto.SpecsStreamingUpdateConfig specsStreamingUpdateConfig;", "modifier": "private", "type": "IngestionJobProto.SpecsStreamingUpdateConfig", "declarator": "specsStreamingUpdateConfig", "var_name": "specsStreamingUpdateConfig"}, {"original_string": "private StoreProto.Store store;", "modifier": "private", "type": "StoreProto.Store", "declarator": "store", "var_name": "store"}, {"original_string": "private SourceProto.Source source;", "modifier": "private", "type": "SourceProto.Source", "declarator": "source", "var_name": "source"}], "file": "job-controller/src/test/java/feast/jobcontroller/runner/direct/DirectRunnerJobManagerTest.java"}, "test_case": {"identifier": "shouldAbortJobThenRemoveFromRegistry", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldAbortJobThenRemoveFromRegistry() throws IOException {\n    Job job =\n        Job.builder()\n            .setSource(source)\n            .setStores(ImmutableMap.of(store.getName(), store))\n            .setId(\"id\")\n            .build();\n    job.setExtId(\"ext1\");\n    job.setStatus(JobStatus.RUNNING);\n\n    DirectJob directJob = Mockito.mock(DirectJob.class);\n    when(directJobRegistry.get(\"ext1\")).thenReturn(directJob);\n    job = drJobManager.abortJob(job);\n    verify(directJob, times(1)).abort();\n    verify(directJobRegistry, times(1)).remove(\"ext1\");\n  }", "signature": "void shouldAbortJobThenRemoveFromRegistry()", "full_signature": "@Test public void shouldAbortJobThenRemoveFromRegistry()", "class_method_signature": "DirectRunnerJobManagerTest.shouldAbortJobThenRemoveFromRegistry()", "testcase": true, "constructor": false, "invocations": ["build", "setId", "setStores", "setSource", "builder", "of", "getName", "setExtId", "setStatus", "mock", "thenReturn", "when", "get", "abortJob", "abort", "verify", "times", "remove", "verify", "times"]}, "focal_class": {"identifier": "DirectRunnerJobManager", "superclass": "", "interfaces": "implements JobManager", "fields": [{"original_string": "private final Runner RUNNER_TYPE = Runner.DIRECT;", "modifier": "private final", "type": "Runner", "declarator": "RUNNER_TYPE = Runner.DIRECT", "var_name": "RUNNER_TYPE"}, {"original_string": "private DirectRunnerConfig defaultOptions;", "modifier": "private", "type": "DirectRunnerConfig", "declarator": "defaultOptions", "var_name": "defaultOptions"}, {"original_string": "private final DirectJobRegistry jobs;", "modifier": "private final", "type": "DirectJobRegistry", "declarator": "jobs", "var_name": "jobs"}, {"original_string": "private MetricsProperties metrics;", "modifier": "private", "type": "MetricsProperties", "declarator": "metrics", "var_name": "metrics"}, {"original_string": "private final IngestionJobProto.SpecsStreamingUpdateConfig specsStreamingUpdateConfig;", "modifier": "private final", "type": "IngestionJobProto.SpecsStreamingUpdateConfig", "declarator": "specsStreamingUpdateConfig", "var_name": "specsStreamingUpdateConfig"}], "methods": [{"identifier": "DirectRunnerJobManager", "parameters": "(\n      DirectRunnerConfigOptions directRunnerConfigOptions,\n      DirectJobRegistry jobs,\n      MetricsProperties metricsProperties,\n      IngestionJobProto.SpecsStreamingUpdateConfig specsStreamingUpdateConfig)", "modifiers": "public", "return": "", "signature": " DirectRunnerJobManager(\n      DirectRunnerConfigOptions directRunnerConfigOptions,\n      DirectJobRegistry jobs,\n      MetricsProperties metricsProperties,\n      IngestionJobProto.SpecsStreamingUpdateConfig specsStreamingUpdateConfig)", "full_signature": "public  DirectRunnerJobManager(\n      DirectRunnerConfigOptions directRunnerConfigOptions,\n      DirectJobRegistry jobs,\n      MetricsProperties metricsProperties,\n      IngestionJobProto.SpecsStreamingUpdateConfig specsStreamingUpdateConfig)", "class_method_signature": "DirectRunnerJobManager.DirectRunnerJobManager(\n      DirectRunnerConfigOptions directRunnerConfigOptions,\n      DirectJobRegistry jobs,\n      MetricsProperties metricsProperties,\n      IngestionJobProto.SpecsStreamingUpdateConfig specsStreamingUpdateConfig)", "testcase": false, "constructor": true}, {"identifier": "getRunnerType", "parameters": "()", "modifiers": "@Override public", "return": "Runner", "signature": "Runner getRunnerType()", "full_signature": "@Override public Runner getRunnerType()", "class_method_signature": "DirectRunnerJobManager.getRunnerType()", "testcase": false, "constructor": false}, {"identifier": "startJob", "parameters": "(Job job)", "modifiers": "@Override public", "return": "Job", "signature": "Job startJob(Job job)", "full_signature": "@Override public Job startJob(Job job)", "class_method_signature": "DirectRunnerJobManager.startJob(Job job)", "testcase": false, "constructor": false}, {"identifier": "getPipelineOptions", "parameters": "(\n      String jobName, SourceProto.Source source, Set<StoreProto.Store> sinks)", "modifiers": "private", "return": "ImportOptions", "signature": "ImportOptions getPipelineOptions(\n      String jobName, SourceProto.Source source, Set<StoreProto.Store> sinks)", "full_signature": "private ImportOptions getPipelineOptions(\n      String jobName, SourceProto.Source source, Set<StoreProto.Store> sinks)", "class_method_signature": "DirectRunnerJobManager.getPipelineOptions(\n      String jobName, SourceProto.Source source, Set<StoreProto.Store> sinks)", "testcase": false, "constructor": false}, {"identifier": "updateJob", "parameters": "(Job job)", "modifiers": "@Override public", "return": "Job", "signature": "Job updateJob(Job job)", "full_signature": "@Override public Job updateJob(Job job)", "class_method_signature": "DirectRunnerJobManager.updateJob(Job job)", "testcase": false, "constructor": false}, {"identifier": "abortJob", "parameters": "(Job job)", "modifiers": "@Override public", "return": "Job", "signature": "Job abortJob(Job job)", "full_signature": "@Override public Job abortJob(Job job)", "class_method_signature": "DirectRunnerJobManager.abortJob(Job job)", "testcase": false, "constructor": false}, {"identifier": "runPipeline", "parameters": "(ImportOptions pipelineOptions)", "modifiers": "public", "return": "PipelineResult", "signature": "PipelineResult runPipeline(ImportOptions pipelineOptions)", "full_signature": "public PipelineResult runPipeline(ImportOptions pipelineOptions)", "class_method_signature": "DirectRunnerJobManager.runPipeline(ImportOptions pipelineOptions)", "testcase": false, "constructor": false}, {"identifier": "restartJob", "parameters": "(Job job)", "modifiers": "@Override public", "return": "Job", "signature": "Job restartJob(Job job)", "full_signature": "@Override public Job restartJob(Job job)", "class_method_signature": "DirectRunnerJobManager.restartJob(Job job)", "testcase": false, "constructor": false}, {"identifier": "getJobStatus", "parameters": "(Job job)", "modifiers": "@Override public", "return": "JobStatus", "signature": "JobStatus getJobStatus(Job job)", "full_signature": "@Override public JobStatus getJobStatus(Job job)", "class_method_signature": "DirectRunnerJobManager.getJobStatus(Job job)", "testcase": false, "constructor": false}, {"identifier": "listRunningJobs", "parameters": "()", "modifiers": "@Override public", "return": "List<Job>", "signature": "List<Job> listRunningJobs()", "full_signature": "@Override public List<Job> listRunningJobs()", "class_method_signature": "DirectRunnerJobManager.listRunningJobs()", "testcase": false, "constructor": false}], "file": "job-controller/src/main/java/feast/jobcontroller/runner/direct/DirectRunnerJobManager.java"}, "focal_method": {"identifier": "abortJob", "parameters": "(Job job)", "modifiers": "@Override public", "return": "Job", "body": "@Override\n  public Job abortJob(Job job) {\n    DirectJob directJob = jobs.get(job.getExtId());\n    if (directJob != null) {\n      try {\n        directJob.abort();\n      } catch (IOException e) {\n        throw new RuntimeException(\n            Strings.lenientFormat(\"Unable to abort DirectRunner job %s\", job.getExtId(), e));\n      }\n      jobs.remove(job.getExtId());\n    }\n\n    return job;\n  }", "signature": "Job abortJob(Job job)", "full_signature": "@Override public Job abortJob(Job job)", "class_method_signature": "DirectRunnerJobManager.abortJob(Job job)", "testcase": false, "constructor": false, "invocations": ["get", "getExtId", "abort", "lenientFormat", "getExtId", "remove", "getExtId"]}, "repository": {"repo_id": 161133770, "url": "https://github.com/gojek/feast", "stars": 633, "created": "12/10/2018 7:20:15 AM +00:00", "updates": "2020-01-27T12:39:33+00:00", "fork": "False", "license": "licensed"}}