{"test_class": {"identifier": "MBeanUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Metric2Registry metricRegistry = new Metric2Registry();", "modifier": "private", "type": "Metric2Registry", "declarator": "metricRegistry = new Metric2Registry()", "var_name": "metricRegistry"}], "file": "stagemonitor-core/src/test/java/org/stagemonitor/core/util/MBeanUtilsTest.java"}, "test_case": {"identifier": "testRegisterMBean", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testRegisterMBean() throws Exception {\n\t\tMBeanUtils.registerMBean(MBeanUtils.queryMBean(\"java.lang:type=ClassLoading\"), \"LoadedClassCount\", name(\"jvm_class_count\").build(), metricRegistry);\n\t\tfinal Gauge classLoadingGauge = metricRegistry.getGauges().get(name(\"jvm_class_count\").build());\n\t\tassertNotNull(classLoadingGauge);\n\t\tassertTrue(((Integer) classLoadingGauge.getValue()) > 1);\n\t}", "signature": "void testRegisterMBean()", "full_signature": "@Test public void testRegisterMBean()", "class_method_signature": "MBeanUtilsTest.testRegisterMBean()", "testcase": true, "constructor": false, "invocations": ["registerMBean", "queryMBean", "build", "name", "get", "getGauges", "build", "name", "assertNotNull", "assertTrue", "getValue"]}, "focal_class": {"identifier": "MBeanUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(MBeanUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(MBeanUtils.class)", "var_name": "logger"}, {"original_string": "private static final MBeanServer mbeanServer = ManagementFactory.getPlatformMBeanServer();", "modifier": "private static final", "type": "MBeanServer", "declarator": "mbeanServer = ManagementFactory.getPlatformMBeanServer()", "var_name": "mbeanServer"}], "methods": [{"identifier": "MBeanUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " MBeanUtils()", "full_signature": "private  MBeanUtils()", "class_method_signature": "MBeanUtils.MBeanUtils()", "testcase": false, "constructor": true}, {"identifier": "queryMBean", "parameters": "(String objectName)", "modifiers": "public static", "return": "ObjectInstance", "signature": "ObjectInstance queryMBean(String objectName)", "full_signature": "public static ObjectInstance queryMBean(String objectName)", "class_method_signature": "MBeanUtils.queryMBean(String objectName)", "testcase": false, "constructor": false}, {"identifier": "queryMBeans", "parameters": "(String objectName)", "modifiers": "public static", "return": "Set<ObjectInstance>", "signature": "Set<ObjectInstance> queryMBeans(String objectName)", "full_signature": "public static Set<ObjectInstance> queryMBeans(String objectName)", "class_method_signature": "MBeanUtils.queryMBeans(String objectName)", "testcase": false, "constructor": false}, {"identifier": "queryMBeans", "parameters": "(ObjectName objectName, QueryExp queryExp)", "modifiers": "public static", "return": "Set<ObjectInstance>", "signature": "Set<ObjectInstance> queryMBeans(ObjectName objectName, QueryExp queryExp)", "full_signature": "public static Set<ObjectInstance> queryMBeans(ObjectName objectName, QueryExp queryExp)", "class_method_signature": "MBeanUtils.queryMBeans(ObjectName objectName, QueryExp queryExp)", "testcase": false, "constructor": false}, {"identifier": "registerMBean", "parameters": "(final ObjectInstance objectInstance, final String mBeanAttributeName, MetricName metricName, Metric2Registry metricRegistry)", "modifiers": "public static", "return": "void", "signature": "void registerMBean(final ObjectInstance objectInstance, final String mBeanAttributeName, MetricName metricName, Metric2Registry metricRegistry)", "full_signature": "public static void registerMBean(final ObjectInstance objectInstance, final String mBeanAttributeName, MetricName metricName, Metric2Registry metricRegistry)", "class_method_signature": "MBeanUtils.registerMBean(final ObjectInstance objectInstance, final String mBeanAttributeName, MetricName metricName, Metric2Registry metricRegistry)", "testcase": false, "constructor": false}, {"identifier": "getValueFromMBean", "parameters": "(ObjectInstance objectInstance, String mBeanAttributeName)", "modifiers": "public static", "return": "Object", "signature": "Object getValueFromMBean(ObjectInstance objectInstance, String mBeanAttributeName)", "full_signature": "public static Object getValueFromMBean(ObjectInstance objectInstance, String mBeanAttributeName)", "class_method_signature": "MBeanUtils.getValueFromMBean(ObjectInstance objectInstance, String mBeanAttributeName)", "testcase": false, "constructor": false}], "file": "stagemonitor-core/src/main/java/org/stagemonitor/core/util/MBeanUtils.java"}, "focal_method": {"identifier": "registerMBean", "parameters": "(final ObjectInstance objectInstance, final String mBeanAttributeName, MetricName metricName, Metric2Registry metricRegistry)", "modifiers": "public static", "return": "void", "body": "public static void registerMBean(final ObjectInstance objectInstance, final String mBeanAttributeName, MetricName metricName, Metric2Registry metricRegistry) {\n\t\tmetricRegistry.register(metricName, new Gauge<Object>() {\n\t\t\t@Override\n\t\t\tpublic Object getValue() {\n\t\t\t\treturn getValueFromMBean(objectInstance, mBeanAttributeName);\n\t\t\t}\n\t\t});\n\t}", "signature": "void registerMBean(final ObjectInstance objectInstance, final String mBeanAttributeName, MetricName metricName, Metric2Registry metricRegistry)", "full_signature": "public static void registerMBean(final ObjectInstance objectInstance, final String mBeanAttributeName, MetricName metricName, Metric2Registry metricRegistry)", "class_method_signature": "MBeanUtils.registerMBean(final ObjectInstance objectInstance, final String mBeanAttributeName, MetricName metricName, Metric2Registry metricRegistry)", "testcase": false, "constructor": false, "invocations": ["register", "getValueFromMBean"]}, "repository": {"repo_id": 11845993, "url": "https://github.com/stagemonitor/stagemonitor", "language": "Java", "is_fork": false, "fork_count": 268, "stargazer_count": 1585, "size": 10342, "license": "licensed"}}