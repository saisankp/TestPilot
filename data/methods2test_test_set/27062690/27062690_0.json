{"test_class": {"identifier": "XModifierTest", "superclass": "", "interfaces": "", "fields": [], "file": "xmodifier/src/test/java/org/shai/xmodifier/XModifierTest.java"}, "test_case": {"identifier": "create", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void create() throws ParserConfigurationException, IOException, SAXException {\n        Document document = createDocument();\n        Document documentExpected = readDocument(\"createExpected.xml\");\n        XModifier modifier = new XModifier(document);\n        modifier.setNamespace(\"ns\", \"http://localhost\");\n        // create an empty element\n        modifier.addModify(\"/ns:root/ns:element1\");\n        // create an element with attribute\n        modifier.addModify(\"/ns:root/ns:element2[@attr=1]\");\n        // append an new element to existing element1\n        modifier.addModify(\"/ns:root/ns:element1/ns:element11\");\n        // create an element with text\n        modifier.addModify(\"/ns:root/ns:element3\", \"TEXT\");\n        modifier.modify();\n        assertXmlEquals(documentExpected, document);\n    }", "signature": "void create()", "full_signature": "@Test public void create()", "class_method_signature": "XModifierTest.create()", "testcase": true, "constructor": false, "invocations": ["createDocument", "readDocument", "setNamespace", "addModify", "addModify", "addModify", "addModify", "modify", "assertXmlEquals"]}, "focal_class": {"identifier": "XModifier", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Document document;", "modifier": "private final", "type": "Document", "declarator": "document", "var_name": "document"}, {"original_string": "private Map<String, String> nsMap = new HashMap<String, String>();", "modifier": "private", "type": "Map<String, String>", "declarator": "nsMap = new HashMap<String, String>()", "var_name": "nsMap"}, {"original_string": "private List<XModifyNode> xModifyNodes = new ArrayList<XModifyNode>();", "modifier": "private", "type": "List<XModifyNode>", "declarator": "xModifyNodes = new ArrayList<XModifyNode>()", "var_name": "xModifyNodes"}, {"original_string": "private XPath xPathEvaluator;", "modifier": "private", "type": "XPath", "declarator": "xPathEvaluator", "var_name": "xPathEvaluator"}], "methods": [{"identifier": "XModifier", "parameters": "(Document document)", "modifiers": "public", "return": "", "signature": " XModifier(Document document)", "full_signature": "public  XModifier(Document document)", "class_method_signature": "XModifier.XModifier(Document document)", "testcase": false, "constructor": true}, {"identifier": "setNamespace", "parameters": "(String prefix, String url)", "modifiers": "public", "return": "void", "signature": "void setNamespace(String prefix, String url)", "full_signature": "public void setNamespace(String prefix, String url)", "class_method_signature": "XModifier.setNamespace(String prefix, String url)", "testcase": false, "constructor": false}, {"identifier": "addModify", "parameters": "(String xPath, String value)", "modifiers": "public", "return": "void", "signature": "void addModify(String xPath, String value)", "full_signature": "public void addModify(String xPath, String value)", "class_method_signature": "XModifier.addModify(String xPath, String value)", "testcase": false, "constructor": false}, {"identifier": "addModify", "parameters": "(String xPath)", "modifiers": "public", "return": "void", "signature": "void addModify(String xPath)", "full_signature": "public void addModify(String xPath)", "class_method_signature": "XModifier.addModify(String xPath)", "testcase": false, "constructor": false}, {"identifier": "modify", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void modify()", "full_signature": "public void modify()", "class_method_signature": "XModifier.modify()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Node parent, XModifyNode node)", "modifiers": "private", "return": "void", "signature": "void create(Node parent, XModifyNode node)", "full_signature": "private void create(Node parent, XModifyNode node)", "class_method_signature": "XModifier.create(Node parent, XModifyNode node)", "testcase": false, "constructor": false}, {"identifier": "initXPath", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initXPath()", "full_signature": "private void initXPath()", "class_method_signature": "XModifier.initXPath()", "testcase": false, "constructor": false}, {"identifier": "createAttributeByXPath", "parameters": "(Node node, String current, String value)", "modifiers": "private", "return": "void", "signature": "void createAttributeByXPath(Node node, String current, String value)", "full_signature": "private void createAttributeByXPath(Node node, String current, String value)", "class_method_signature": "XModifier.createAttributeByXPath(Node node, String current, String value)", "testcase": false, "constructor": false}, {"identifier": "findOrCreateElement", "parameters": "(Node parent, XModifyNode node)", "modifiers": "private", "return": "void", "signature": "void findOrCreateElement(Node parent, XModifyNode node)", "full_signature": "private void findOrCreateElement(Node parent, XModifyNode node)", "class_method_signature": "XModifier.findOrCreateElement(Node parent, XModifyNode node)", "testcase": false, "constructor": false}, {"identifier": "createNewElement", "parameters": "(String namespaceURI, String local, String[] conditions)", "modifiers": "private", "return": "Element", "signature": "Element createNewElement(String namespaceURI, String local, String[] conditions)", "full_signature": "private Element createNewElement(String namespaceURI, String local, String[] conditions)", "class_method_signature": "XModifier.createNewElement(String namespaceURI, String local, String[] conditions)", "testcase": false, "constructor": false}], "file": "xmodifier/src/main/java/org/shai/xmodifier/XModifier.java"}, "focal_method": {"identifier": "create", "parameters": "(Node parent, XModifyNode node)", "modifiers": "private", "return": "void", "body": "private void create(Node parent, XModifyNode node) throws XPathExpressionException {\n        Node newNode;\n        if (node.isAttributeModifier()) {\n            //attribute\n            createAttributeByXPath(parent, node.getCurNode().substring(1), node.getValue());\n        } else {\n            //element\n            if (node.isRootNode()) {\n                //root node\n                newNode = parent;\n                boolean canMoveToNext = node.moveNext();\n                if (!canMoveToNext) {\n                    //last node\n                    newNode.setTextContent(node.getValue());\n                } else {\n                    //next node\n                    create(newNode, node);\n                }\n            } else if (node.getCurNode().equals(\"text()\")) {\n                parent.setTextContent(node.getValue());\n            } else {\n                //element\n                findOrCreateElement(parent, node);\n            }\n        }\n\n    }", "signature": "void create(Node parent, XModifyNode node)", "full_signature": "private void create(Node parent, XModifyNode node)", "class_method_signature": "XModifier.create(Node parent, XModifyNode node)", "testcase": false, "constructor": false, "invocations": ["isAttributeModifier", "createAttributeByXPath", "substring", "getCurNode", "getValue", "isRootNode", "moveNext", "setTextContent", "getValue", "create", "equals", "getCurNode", "setTextContent", "getValue", "findOrCreateElement"]}, "repository": {"repo_id": 27062690, "url": "https://github.com/shenghai/xmodifier", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 10, "size": 256, "license": "licensed"}}