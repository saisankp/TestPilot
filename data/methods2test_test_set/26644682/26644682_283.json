{"test_class": {"identifier": "AggregationParametersTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LocalValidatorFactoryBean validator;", "modifier": "private", "type": "LocalValidatorFactoryBean", "declarator": "validator", "var_name": "validator"}], "file": "dataprep-backend-service/src/test/java/org/talend/dataprep/transformation/aggregation/api/AggregationParametersTest.java"}, "test_case": {"identifier": "invalidParametersDatasetIdNoOperations", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invalidParametersDatasetIdNoOperations() {\n        // given parameters with a dataset id\n        AggregationParameters parameters = new AggregationParameters();\n        parameters.setDatasetId(\"dataset#7568\");\n\n        // when\n        Set<ConstraintViolation<AggregationParameters>> constraintViolations = validator.validate(parameters);\n\n        // then 2 violations (operations and groupBy are empty)\n        Assert.assertEquals(2, constraintViolations.size());\n    }", "signature": "void invalidParametersDatasetIdNoOperations()", "full_signature": "@Test public void invalidParametersDatasetIdNoOperations()", "class_method_signature": "AggregationParametersTest.invalidParametersDatasetIdNoOperations()", "testcase": true, "constructor": false, "invocations": ["setDatasetId", "validate", "assertEquals", "size"]}, "focal_class": {"identifier": "AggregationParameters", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String datasetId;", "modifier": "private", "type": "String", "declarator": "datasetId", "var_name": "datasetId"}, {"original_string": "private String preparationId;", "modifier": "private", "type": "String", "declarator": "preparationId", "var_name": "preparationId"}, {"original_string": "private String stepId = \"head\";", "modifier": "private", "type": "String", "declarator": "stepId = \"head\"", "var_name": "stepId"}, {"original_string": "@NotEmpty\n    private List<String> groupBy;", "modifier": "@NotEmpty\n    private", "type": "List<String>", "declarator": "groupBy", "var_name": "groupBy"}, {"original_string": "@NotEmpty\n    private List<AggregationOperation> operations;", "modifier": "@NotEmpty\n    private", "type": "List<AggregationOperation>", "declarator": "operations", "var_name": "operations"}, {"original_string": "private String filter;", "modifier": "private", "type": "String", "declarator": "filter", "var_name": "filter"}, {"original_string": "private String sampleSize;", "modifier": "private", "type": "String", "declarator": "sampleSize", "var_name": "sampleSize"}], "methods": [{"identifier": "AggregationParameters", "parameters": "()", "modifiers": "public", "return": "", "signature": " AggregationParameters()", "full_signature": "public  AggregationParameters()", "class_method_signature": "AggregationParameters.AggregationParameters()", "testcase": false, "constructor": true}, {"identifier": "getDatasetId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDatasetId()", "full_signature": "public String getDatasetId()", "class_method_signature": "AggregationParameters.getDatasetId()", "testcase": false, "constructor": false}, {"identifier": "setDatasetId", "parameters": "(String datasetId)", "modifiers": "public", "return": "void", "signature": "void setDatasetId(String datasetId)", "full_signature": "public void setDatasetId(String datasetId)", "class_method_signature": "AggregationParameters.setDatasetId(String datasetId)", "testcase": false, "constructor": false}, {"identifier": "getPreparationId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPreparationId()", "full_signature": "public String getPreparationId()", "class_method_signature": "AggregationParameters.getPreparationId()", "testcase": false, "constructor": false}, {"identifier": "setPreparationId", "parameters": "(String preparationId)", "modifiers": "public", "return": "void", "signature": "void setPreparationId(String preparationId)", "full_signature": "public void setPreparationId(String preparationId)", "class_method_signature": "AggregationParameters.setPreparationId(String preparationId)", "testcase": false, "constructor": false}, {"identifier": "getStepId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStepId()", "full_signature": "public String getStepId()", "class_method_signature": "AggregationParameters.getStepId()", "testcase": false, "constructor": false}, {"identifier": "setStepId", "parameters": "(String stepId)", "modifiers": "public", "return": "void", "signature": "void setStepId(String stepId)", "full_signature": "public void setStepId(String stepId)", "class_method_signature": "AggregationParameters.setStepId(String stepId)", "testcase": false, "constructor": false}, {"identifier": "getGroupBy", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getGroupBy()", "full_signature": "public List<String> getGroupBy()", "class_method_signature": "AggregationParameters.getGroupBy()", "testcase": false, "constructor": false}, {"identifier": "setGroupBy", "parameters": "(List<String> groupBy)", "modifiers": "public", "return": "void", "signature": "void setGroupBy(List<String> groupBy)", "full_signature": "public void setGroupBy(List<String> groupBy)", "class_method_signature": "AggregationParameters.setGroupBy(List<String> groupBy)", "testcase": false, "constructor": false}, {"identifier": "addGroupBy", "parameters": "(String groupBy)", "modifiers": "public", "return": "void", "signature": "void addGroupBy(String groupBy)", "full_signature": "public void addGroupBy(String groupBy)", "class_method_signature": "AggregationParameters.addGroupBy(String groupBy)", "testcase": false, "constructor": false}, {"identifier": "getFilter", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFilter()", "full_signature": "public String getFilter()", "class_method_signature": "AggregationParameters.getFilter()", "testcase": false, "constructor": false}, {"identifier": "setFilter", "parameters": "(String filter)", "modifiers": "public", "return": "void", "signature": "void setFilter(String filter)", "full_signature": "public void setFilter(String filter)", "class_method_signature": "AggregationParameters.setFilter(String filter)", "testcase": false, "constructor": false}, {"identifier": "getOperations", "parameters": "()", "modifiers": "public", "return": "List<AggregationOperation>", "signature": "List<AggregationOperation> getOperations()", "full_signature": "public List<AggregationOperation> getOperations()", "class_method_signature": "AggregationParameters.getOperations()", "testcase": false, "constructor": false}, {"identifier": "setOperations", "parameters": "(List<AggregationOperation> operations)", "modifiers": "public", "return": "void", "signature": "void setOperations(List<AggregationOperation> operations)", "full_signature": "public void setOperations(List<AggregationOperation> operations)", "class_method_signature": "AggregationParameters.setOperations(List<AggregationOperation> operations)", "testcase": false, "constructor": false}, {"identifier": "addOperation", "parameters": "(AggregationOperation operation)", "modifiers": "public", "return": "void", "signature": "void addOperation(AggregationOperation operation)", "full_signature": "public void addOperation(AggregationOperation operation)", "class_method_signature": "AggregationParameters.addOperation(AggregationOperation operation)", "testcase": false, "constructor": false}, {"identifier": "getSampleSize", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long getSampleSize()", "full_signature": "public Long getSampleSize()", "class_method_signature": "AggregationParameters.getSampleSize()", "testcase": false, "constructor": false}, {"identifier": "setSampleSize", "parameters": "(String sampleSize)", "modifiers": "public", "return": "void", "signature": "void setSampleSize(String sampleSize)", "full_signature": "public void setSampleSize(String sampleSize)", "class_method_signature": "AggregationParameters.setSampleSize(String sampleSize)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AggregationParameters.toString()", "testcase": false, "constructor": false}], "file": "dataprep-backend-service/src/main/java/org/talend/dataprep/transformation/aggregation/api/AggregationParameters.java"}, "focal_method": {"identifier": "setDatasetId", "parameters": "(String datasetId)", "modifiers": "public", "return": "void", "body": "public void setDatasetId(String datasetId) {\n        this.datasetId = datasetId;\n    }", "signature": "void setDatasetId(String datasetId)", "full_signature": "public void setDatasetId(String datasetId)", "class_method_signature": "AggregationParameters.setDatasetId(String datasetId)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}