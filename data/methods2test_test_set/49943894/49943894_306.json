{"test_class": {"identifier": "NiciraNvpApiTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final StatusLine HTTP_200_REPSONSE = new BasicStatusLine(new ProtocolVersion(\"HTTPS\", 1, 1), HttpStatus.SC_OK, \"OK\");", "modifier": "private static final", "type": "StatusLine", "declarator": "HTTP_200_REPSONSE = new BasicStatusLine(new ProtocolVersion(\"HTTPS\", 1, 1), HttpStatus.SC_OK, \"OK\")", "var_name": "HTTP_200_REPSONSE"}, {"original_string": "private static final StatusLine HTTP_201_REPSONSE = new BasicStatusLine(new ProtocolVersion(\"HTTPS\", 1, 1), HttpStatus.SC_CREATED, \"Created\");", "modifier": "private static final", "type": "StatusLine", "declarator": "HTTP_201_REPSONSE = new BasicStatusLine(new ProtocolVersion(\"HTTPS\", 1, 1), HttpStatus.SC_CREATED, \"Created\")", "var_name": "HTTP_201_REPSONSE"}, {"original_string": "protected static final String UUID = \"aaaa\";", "modifier": "protected static final", "type": "String", "declarator": "UUID = \"aaaa\"", "var_name": "UUID"}, {"original_string": "protected static final String UUID2 = \"bbbb\";", "modifier": "protected static final", "type": "String", "declarator": "UUID2 = \"bbbb\"", "var_name": "UUID2"}, {"original_string": "protected static final String UUID_SEC_PROFILE_URI = NiciraConstants.SEC_PROFILE_URI_PREFIX + \"/aaaa\";", "modifier": "protected static final", "type": "String", "declarator": "UUID_SEC_PROFILE_URI = NiciraConstants.SEC_PROFILE_URI_PREFIX + \"/aaaa\"", "var_name": "UUID_SEC_PROFILE_URI"}, {"original_string": "protected static final String SCHEMA = \"myTestSchema\";", "modifier": "protected static final", "type": "String", "declarator": "SCHEMA = \"myTestSchema\"", "var_name": "SCHEMA"}, {"original_string": "protected static final String SCHEMA2 = \"myTestSchema2\";", "modifier": "protected static final", "type": "String", "declarator": "SCHEMA2 = \"myTestSchema2\"", "var_name": "SCHEMA2"}, {"original_string": "protected static final String HREF = \"myTestHref\";", "modifier": "protected static final", "type": "String", "declarator": "HREF = \"myTestHref\"", "var_name": "HREF"}, {"original_string": "protected static final String HREF2 = \"myTestHref2\";", "modifier": "protected static final", "type": "String", "declarator": "HREF2 = \"myTestHref2\"", "var_name": "HREF2"}, {"original_string": "protected static final String SEC_PROFILE_JSON_RESPONSE =\n                    \"{\\\"uuid\\\" : \\\"aaaa\\\",\"\n                                    + \"\\\"display_name\\\" : \\\"myTestName\\\",\"\n                                    + \"\\\"href\\\" : \\\"myTestHref\\\",\"\n                                    + \"\\\"schema\\\" : \\\"myTestSchema\\\"}\";", "modifier": "protected static final", "type": "String", "declarator": "SEC_PROFILE_JSON_RESPONSE =\n                    \"{\\\"uuid\\\" : \\\"aaaa\\\",\"\n                                    + \"\\\"display_name\\\" : \\\"myTestName\\\",\"\n                                    + \"\\\"href\\\" : \\\"myTestHref\\\",\"\n                                    + \"\\\"schema\\\" : \\\"myTestSchema\\\"}\"", "var_name": "SEC_PROFILE_JSON_RESPONSE"}, {"original_string": "protected static final String SEC_PROFILE_LIST_JSON_RESPONSE = \"{\\\"results\\\" : [{\\\"uuid\\\" : \\\"aaaa\\\",\"\n                    + \"\\\"display_name\\\" : \\\"myTestName\\\",\"\n                    + \"\\\"href\\\" : \\\"myTestHref\\\",\"\n                    + \"\\\"schema\\\" : \\\"myTestSchema\\\"},\"\n                    + \"{ \\\"uuid\\\" : \\\"bbbb\\\",\"\n                    + \"\\\"display_name\\\" : \\\"myTestName2\\\",\"\n                    + \"\\\"href\\\" : \\\"myTestHref2\\\",\"\n                    + \"\\\"schema\\\" : \\\"myTestSchema2\\\"}],\"\n                    + \"\\\"result_count\\\": 2}\";", "modifier": "protected static final", "type": "String", "declarator": "SEC_PROFILE_LIST_JSON_RESPONSE = \"{\\\"results\\\" : [{\\\"uuid\\\" : \\\"aaaa\\\",\"\n                    + \"\\\"display_name\\\" : \\\"myTestName\\\",\"\n                    + \"\\\"href\\\" : \\\"myTestHref\\\",\"\n                    + \"\\\"schema\\\" : \\\"myTestSchema\\\"},\"\n                    + \"{ \\\"uuid\\\" : \\\"bbbb\\\",\"\n                    + \"\\\"display_name\\\" : \\\"myTestName2\\\",\"\n                    + \"\\\"href\\\" : \\\"myTestHref2\\\",\"\n                    + \"\\\"schema\\\" : \\\"myTestSchema2\\\"}],\"\n                    + \"\\\"result_count\\\": 2}\"", "var_name": "SEC_PROFILE_LIST_JSON_RESPONSE"}], "file": "plugins/network-elements/nicira-nvp/src/test/java/com/cloud/network/nicira/NiciraNvpApiTest.java"}, "test_case": {"identifier": "testUpdateSecurityProfile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUpdateSecurityProfile() throws Exception {\n        final CloseableHttpResponse response = mock(CloseableHttpResponse.class);\n        when(response.getStatusLine()).thenReturn(HTTP_201_REPSONSE);\n        when(response.getEntity()).thenReturn(new StringEntity(SEC_PROFILE_JSON_RESPONSE));\n        final CloseableHttpClient httpClient = spy(HttpClientHelper.createHttpClient(2));\n        doReturn(response).when(httpClient).execute(any(HttpHost.class), any(HttpRequest.class), any(HttpClientContext.class));\n        final NiciraNvpApi api = buildApi(httpClient);\n\n        api.updateSecurityProfile(new SecurityProfile(), UUID);\n\n        verify(response, times(1)).close();\n        verify(httpClient).execute(any(HttpHost.class), HttpUriRequestMethodMatcher.aMethod(\"PUT\"), any(HttpClientContext.class));\n        verify(httpClient).execute(any(HttpHost.class), HttpUriRequestPathMatcher.aPath(NiciraConstants.SEC_PROFILE_URI_PREFIX + \"/\" + UUID), any(HttpClientContext.class));\n    }", "signature": "void testUpdateSecurityProfile()", "full_signature": "@Test public void testUpdateSecurityProfile()", "class_method_signature": "NiciraNvpApiTest.testUpdateSecurityProfile()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getStatusLine", "thenReturn", "when", "getEntity", "spy", "createHttpClient", "execute", "when", "doReturn", "any", "any", "any", "buildApi", "updateSecurityProfile", "close", "verify", "times", "execute", "verify", "any", "aMethod", "any", "execute", "verify", "any", "aPath", "any"]}, "focal_class": {"identifier": "NiciraNvpApi", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Optional<String> ABSENT = Optional.absent();", "modifier": "private static final", "type": "Optional<String>", "declarator": "ABSENT = Optional.absent()", "var_name": "ABSENT"}, {"original_string": "private static final String SWITCH_URI_PREFIX = NiciraConstants.SWITCH_URI_PREFIX;", "modifier": "private static final", "type": "String", "declarator": "SWITCH_URI_PREFIX = NiciraConstants.SWITCH_URI_PREFIX", "var_name": "SWITCH_URI_PREFIX"}, {"original_string": "private static final String ROUTER_URI_PREFIX = NiciraConstants.ROUTER_URI_PREFIX;", "modifier": "private static final", "type": "String", "declarator": "ROUTER_URI_PREFIX = NiciraConstants.ROUTER_URI_PREFIX", "var_name": "ROUTER_URI_PREFIX"}, {"original_string": "private static final String ATTACHMENT_PATH_SEGMENT = NiciraConstants.ATTACHMENT_PATH_SEGMENT;", "modifier": "private static final", "type": "String", "declarator": "ATTACHMENT_PATH_SEGMENT = NiciraConstants.ATTACHMENT_PATH_SEGMENT", "var_name": "ATTACHMENT_PATH_SEGMENT"}, {"original_string": "private static final String NAT_PATH_SEGMENT = NiciraConstants.NAT_PATH_SEGMENT;", "modifier": "private static final", "type": "String", "declarator": "NAT_PATH_SEGMENT = NiciraConstants.NAT_PATH_SEGMENT", "var_name": "NAT_PATH_SEGMENT"}, {"original_string": "private static final String LPORT_PATH_SEGMENT = NiciraConstants.LPORT_PATH_SEGMENT;", "modifier": "private static final", "type": "String", "declarator": "LPORT_PATH_SEGMENT = NiciraConstants.LPORT_PATH_SEGMENT", "var_name": "LPORT_PATH_SEGMENT"}, {"original_string": "private static final String ATTACHMENT_GWSVC_UUID_QUERY_PARAMETER = NiciraConstants.ATTACHMENT_GWSVC_UUID_QUERY_PARAMETER;", "modifier": "private static final", "type": "String", "declarator": "ATTACHMENT_GWSVC_UUID_QUERY_PARAMETER = NiciraConstants.ATTACHMENT_GWSVC_UUID_QUERY_PARAMETER", "var_name": "ATTACHMENT_GWSVC_UUID_QUERY_PARAMETER"}, {"original_string": "private static final String WILDCARD_QUERY_PARAMETER = NiciraConstants.WILDCARD_QUERY_PARAMETER;", "modifier": "private static final", "type": "String", "declarator": "WILDCARD_QUERY_PARAMETER = NiciraConstants.WILDCARD_QUERY_PARAMETER", "var_name": "WILDCARD_QUERY_PARAMETER"}, {"original_string": "private static final String UUID_QUERY_PARAMETER = NiciraConstants.UUID_QUERY_PARAMETER;", "modifier": "private static final", "type": "String", "declarator": "UUID_QUERY_PARAMETER = NiciraConstants.UUID_QUERY_PARAMETER", "var_name": "UUID_QUERY_PARAMETER"}, {"original_string": "private static final String FIELDS_QUERY_PARAMETER = NiciraConstants.FIELDS_QUERY_PARAMETER;", "modifier": "private static final", "type": "String", "declarator": "FIELDS_QUERY_PARAMETER = NiciraConstants.FIELDS_QUERY_PARAMETER", "var_name": "FIELDS_QUERY_PARAMETER"}, {"original_string": "private static final int DEFAULT_MAX_RETRIES = 5;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_MAX_RETRIES = 5", "var_name": "DEFAULT_MAX_RETRIES"}, {"original_string": "private final RESTServiceConnector restConnector;", "modifier": "private final", "type": "RESTServiceConnector", "declarator": "restConnector", "var_name": "restConnector"}, {"original_string": "protected final static Map<Class, String> prefixMap;", "modifier": "protected final static", "type": "Map<Class, String>", "declarator": "prefixMap", "var_name": "prefixMap"}, {"original_string": "protected final static Map<Class, Type> listTypeMap;", "modifier": "protected final static", "type": "Map<Class, Type>", "declarator": "listTypeMap", "var_name": "listTypeMap"}, {"original_string": "protected final static Map<String, String> defaultListParams;", "modifier": "protected final static", "type": "Map<String, String>", "declarator": "defaultListParams", "var_name": "defaultListParams"}], "methods": [{"identifier": "NiciraNvpApi", "parameters": "(final Builder builder)", "modifiers": "private", "return": "", "signature": " NiciraNvpApi(final Builder builder)", "full_signature": "private  NiciraNvpApi(final Builder builder)", "class_method_signature": "NiciraNvpApi.NiciraNvpApi(final Builder builder)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder create()", "full_signature": "public static Builder create()", "class_method_signature": "NiciraNvpApi.create()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(final T entity)", "modifiers": "private", "return": "T", "signature": "T create(final T entity)", "full_signature": "private T create(final T entity)", "class_method_signature": "NiciraNvpApi.create(final T entity)", "testcase": false, "constructor": false}, {"identifier": "createWithUri", "parameters": "(final T entity, final String uri)", "modifiers": "private", "return": "T", "signature": "T createWithUri(final T entity, final String uri)", "full_signature": "private T createWithUri(final T entity, final String uri)", "class_method_signature": "NiciraNvpApi.createWithUri(final T entity, final String uri)", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(final Optional<String> uuid, final Class<T> clazz)", "modifiers": "private", "return": "List<T>", "signature": "List<T> find(final Optional<String> uuid, final Class<T> clazz)", "full_signature": "private List<T> find(final Optional<String> uuid, final Class<T> clazz)", "class_method_signature": "NiciraNvpApi.find(final Optional<String> uuid, final Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(final T item, final String uuid)", "modifiers": "private", "return": "void", "signature": "void update(final T item, final String uuid)", "full_signature": "private void update(final T item, final String uuid)", "class_method_signature": "NiciraNvpApi.update(final T item, final String uuid)", "testcase": false, "constructor": false}, {"identifier": "updateWithUri", "parameters": "(final T item, final String uri)", "modifiers": "private", "return": "void", "signature": "void updateWithUri(final T item, final String uri)", "full_signature": "private void updateWithUri(final T item, final String uri)", "class_method_signature": "NiciraNvpApi.updateWithUri(final T item, final String uri)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(final String uuid, final Class<T> clazz)", "modifiers": "private", "return": "void", "signature": "void delete(final String uuid, final Class<T> clazz)", "full_signature": "private void delete(final String uuid, final Class<T> clazz)", "class_method_signature": "NiciraNvpApi.delete(final String uuid, final Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "deleteWithUri", "parameters": "(final String uri)", "modifiers": "private", "return": "void", "signature": "void deleteWithUri(final String uri)", "full_signature": "private void deleteWithUri(final String uri)", "class_method_signature": "NiciraNvpApi.deleteWithUri(final String uri)", "testcase": false, "constructor": false}, {"identifier": "createSecurityProfile", "parameters": "(final SecurityProfile securityProfile)", "modifiers": "public", "return": "SecurityProfile", "signature": "SecurityProfile createSecurityProfile(final SecurityProfile securityProfile)", "full_signature": "public SecurityProfile createSecurityProfile(final SecurityProfile securityProfile)", "class_method_signature": "NiciraNvpApi.createSecurityProfile(final SecurityProfile securityProfile)", "testcase": false, "constructor": false}, {"identifier": "findSecurityProfile", "parameters": "()", "modifiers": "public", "return": "List<SecurityProfile>", "signature": "List<SecurityProfile> findSecurityProfile()", "full_signature": "public List<SecurityProfile> findSecurityProfile()", "class_method_signature": "NiciraNvpApi.findSecurityProfile()", "testcase": false, "constructor": false}, {"identifier": "findSecurityProfile", "parameters": "(final String uuid)", "modifiers": "public", "return": "List<SecurityProfile>", "signature": "List<SecurityProfile> findSecurityProfile(final String uuid)", "full_signature": "public List<SecurityProfile> findSecurityProfile(final String uuid)", "class_method_signature": "NiciraNvpApi.findSecurityProfile(final String uuid)", "testcase": false, "constructor": false}, {"identifier": "updateSecurityProfile", "parameters": "(final SecurityProfile securityProfile, final String securityProfileUuid)", "modifiers": "public", "return": "void", "signature": "void updateSecurityProfile(final SecurityProfile securityProfile, final String securityProfileUuid)", "full_signature": "public void updateSecurityProfile(final SecurityProfile securityProfile, final String securityProfileUuid)", "class_method_signature": "NiciraNvpApi.updateSecurityProfile(final SecurityProfile securityProfile, final String securityProfileUuid)", "testcase": false, "constructor": false}, {"identifier": "deleteSecurityProfile", "parameters": "(final String securityProfileUuid)", "modifiers": "public", "return": "void", "signature": "void deleteSecurityProfile(final String securityProfileUuid)", "full_signature": "public void deleteSecurityProfile(final String securityProfileUuid)", "class_method_signature": "NiciraNvpApi.deleteSecurityProfile(final String securityProfileUuid)", "testcase": false, "constructor": false}, {"identifier": "createAcl", "parameters": "(final Acl acl)", "modifiers": "public", "return": "Acl", "signature": "Acl createAcl(final Acl acl)", "full_signature": "public Acl createAcl(final Acl acl)", "class_method_signature": "NiciraNvpApi.createAcl(final Acl acl)", "testcase": false, "constructor": false}, {"identifier": "findAcl", "parameters": "()", "modifiers": "public", "return": "List<Acl>", "signature": "List<Acl> findAcl()", "full_signature": "public List<Acl> findAcl()", "class_method_signature": "NiciraNvpApi.findAcl()", "testcase": false, "constructor": false}, {"identifier": "findAcl", "parameters": "(final String uuid)", "modifiers": "public", "return": "List<Acl>", "signature": "List<Acl> findAcl(final String uuid)", "full_signature": "public List<Acl> findAcl(final String uuid)", "class_method_signature": "NiciraNvpApi.findAcl(final String uuid)", "testcase": false, "constructor": false}, {"identifier": "updateAcl", "parameters": "(final Acl acl, final String aclUuid)", "modifiers": "public", "return": "void", "signature": "void updateAcl(final Acl acl, final String aclUuid)", "full_signature": "public void updateAcl(final Acl acl, final String aclUuid)", "class_method_signature": "NiciraNvpApi.updateAcl(final Acl acl, final String aclUuid)", "testcase": false, "constructor": false}, {"identifier": "deleteAcl", "parameters": "(final String aclUuid)", "modifiers": "public", "return": "void", "signature": "void deleteAcl(final String aclUuid)", "full_signature": "public void deleteAcl(final String aclUuid)", "class_method_signature": "NiciraNvpApi.deleteAcl(final String aclUuid)", "testcase": false, "constructor": false}, {"identifier": "createLogicalSwitch", "parameters": "(final LogicalSwitch logicalSwitch)", "modifiers": "public", "return": "LogicalSwitch", "signature": "LogicalSwitch createLogicalSwitch(final LogicalSwitch logicalSwitch)", "full_signature": "public LogicalSwitch createLogicalSwitch(final LogicalSwitch logicalSwitch)", "class_method_signature": "NiciraNvpApi.createLogicalSwitch(final LogicalSwitch logicalSwitch)", "testcase": false, "constructor": false}, {"identifier": "findLogicalSwitch", "parameters": "()", "modifiers": "public", "return": "List<LogicalSwitch>", "signature": "List<LogicalSwitch> findLogicalSwitch()", "full_signature": "public List<LogicalSwitch> findLogicalSwitch()", "class_method_signature": "NiciraNvpApi.findLogicalSwitch()", "testcase": false, "constructor": false}, {"identifier": "findLogicalSwitch", "parameters": "(final String uuid)", "modifiers": "public", "return": "List<LogicalSwitch>", "signature": "List<LogicalSwitch> findLogicalSwitch(final String uuid)", "full_signature": "public List<LogicalSwitch> findLogicalSwitch(final String uuid)", "class_method_signature": "NiciraNvpApi.findLogicalSwitch(final String uuid)", "testcase": false, "constructor": false}, {"identifier": "updateLogicalSwitch", "parameters": "(final LogicalSwitch logicalSwitch, final String logicalSwitchUuid)", "modifiers": "public", "return": "void", "signature": "void updateLogicalSwitch(final LogicalSwitch logicalSwitch, final String logicalSwitchUuid)", "full_signature": "public void updateLogicalSwitch(final LogicalSwitch logicalSwitch, final String logicalSwitchUuid)", "class_method_signature": "NiciraNvpApi.updateLogicalSwitch(final LogicalSwitch logicalSwitch, final String logicalSwitchUuid)", "testcase": false, "constructor": false}, {"identifier": "deleteLogicalSwitch", "parameters": "(final String uuid)", "modifiers": "public", "return": "void", "signature": "void deleteLogicalSwitch(final String uuid)", "full_signature": "public void deleteLogicalSwitch(final String uuid)", "class_method_signature": "NiciraNvpApi.deleteLogicalSwitch(final String uuid)", "testcase": false, "constructor": false}, {"identifier": "createLogicalSwitchPort", "parameters": "(final String logicalSwitchUuid, final LogicalSwitchPort logicalSwitchPort)", "modifiers": "public", "return": "LogicalSwitchPort", "signature": "LogicalSwitchPort createLogicalSwitchPort(final String logicalSwitchUuid, final LogicalSwitchPort logicalSwitchPort)", "full_signature": "public LogicalSwitchPort createLogicalSwitchPort(final String logicalSwitchUuid, final LogicalSwitchPort logicalSwitchPort)", "class_method_signature": "NiciraNvpApi.createLogicalSwitchPort(final String logicalSwitchUuid, final LogicalSwitchPort logicalSwitchPort)", "testcase": false, "constructor": false}, {"identifier": "updateLogicalSwitchPort", "parameters": "(final String logicalSwitchUuid, final LogicalSwitchPort logicalSwitchPort)", "modifiers": "public", "return": "void", "signature": "void updateLogicalSwitchPort(final String logicalSwitchUuid, final LogicalSwitchPort logicalSwitchPort)", "full_signature": "public void updateLogicalSwitchPort(final String logicalSwitchUuid, final LogicalSwitchPort logicalSwitchPort)", "class_method_signature": "NiciraNvpApi.updateLogicalSwitchPort(final String logicalSwitchUuid, final LogicalSwitchPort logicalSwitchPort)", "testcase": false, "constructor": false}, {"identifier": "updateLogicalSwitchPortAttachment", "parameters": "(final String logicalSwitchUuid, final String logicalSwitchPortUuid, final Attachment attachment)", "modifiers": "public", "return": "void", "signature": "void updateLogicalSwitchPortAttachment(final String logicalSwitchUuid, final String logicalSwitchPortUuid, final Attachment attachment)", "full_signature": "public void updateLogicalSwitchPortAttachment(final String logicalSwitchUuid, final String logicalSwitchPortUuid, final Attachment attachment)", "class_method_signature": "NiciraNvpApi.updateLogicalSwitchPortAttachment(final String logicalSwitchUuid, final String logicalSwitchPortUuid, final Attachment attachment)", "testcase": false, "constructor": false}, {"identifier": "deleteLogicalSwitchPort", "parameters": "(final String logicalSwitchUuid, final String logicalSwitchPortUuid)", "modifiers": "public", "return": "void", "signature": "void deleteLogicalSwitchPort(final String logicalSwitchUuid, final String logicalSwitchPortUuid)", "full_signature": "public void deleteLogicalSwitchPort(final String logicalSwitchUuid, final String logicalSwitchPortUuid)", "class_method_signature": "NiciraNvpApi.deleteLogicalSwitchPort(final String logicalSwitchUuid, final String logicalSwitchPortUuid)", "testcase": false, "constructor": false}, {"identifier": "findLogicalSwitchPortUuidByVifAttachmentUuid", "parameters": "(final String logicalSwitchUuid, final String vifAttachmentUuid)", "modifiers": "public", "return": "String", "signature": "String findLogicalSwitchPortUuidByVifAttachmentUuid(final String logicalSwitchUuid, final String vifAttachmentUuid)", "full_signature": "public String findLogicalSwitchPortUuidByVifAttachmentUuid(final String logicalSwitchUuid, final String vifAttachmentUuid)", "class_method_signature": "NiciraNvpApi.findLogicalSwitchPortUuidByVifAttachmentUuid(final String logicalSwitchUuid, final String vifAttachmentUuid)", "testcase": false, "constructor": false}, {"identifier": "getControlClusterStatus", "parameters": "()", "modifiers": "public", "return": "ControlClusterStatus", "signature": "ControlClusterStatus getControlClusterStatus()", "full_signature": "public ControlClusterStatus getControlClusterStatus()", "class_method_signature": "NiciraNvpApi.getControlClusterStatus()", "testcase": false, "constructor": false}, {"identifier": "findLogicalSwitchPortsByUuid", "parameters": "(final String logicalSwitchUuid, final String logicalSwitchPortUuid)", "modifiers": "public", "return": "List<LogicalSwitchPort>", "signature": "List<LogicalSwitchPort> findLogicalSwitchPortsByUuid(final String logicalSwitchUuid, final String logicalSwitchPortUuid)", "full_signature": "public List<LogicalSwitchPort> findLogicalSwitchPortsByUuid(final String logicalSwitchUuid, final String logicalSwitchPortUuid)", "class_method_signature": "NiciraNvpApi.findLogicalSwitchPortsByUuid(final String logicalSwitchUuid, final String logicalSwitchPortUuid)", "testcase": false, "constructor": false}, {"identifier": "findLogicalRouterPortsByUuid", "parameters": "(final String logicalRouterUuid, final String logicalRouterPortUuid)", "modifiers": "public", "return": "List<LogicalRouterPort>", "signature": "List<LogicalRouterPort> findLogicalRouterPortsByUuid(final String logicalRouterUuid, final String logicalRouterPortUuid)", "full_signature": "public List<LogicalRouterPort> findLogicalRouterPortsByUuid(final String logicalRouterUuid, final String logicalRouterPortUuid)", "class_method_signature": "NiciraNvpApi.findLogicalRouterPortsByUuid(final String logicalRouterUuid, final String logicalRouterPortUuid)", "testcase": false, "constructor": false}, {"identifier": "createLogicalRouter", "parameters": "(final LogicalRouter logicalRouter)", "modifiers": "public", "return": "LogicalRouter", "signature": "LogicalRouter createLogicalRouter(final LogicalRouter logicalRouter)", "full_signature": "public LogicalRouter createLogicalRouter(final LogicalRouter logicalRouter)", "class_method_signature": "NiciraNvpApi.createLogicalRouter(final LogicalRouter logicalRouter)", "testcase": false, "constructor": false}, {"identifier": "findLogicalRouter", "parameters": "()", "modifiers": "public", "return": "List<LogicalRouter>", "signature": "List<LogicalRouter> findLogicalRouter()", "full_signature": "public List<LogicalRouter> findLogicalRouter()", "class_method_signature": "NiciraNvpApi.findLogicalRouter()", "testcase": false, "constructor": false}, {"identifier": "findLogicalRouter", "parameters": "(final String uuid)", "modifiers": "public", "return": "List<LogicalRouter>", "signature": "List<LogicalRouter> findLogicalRouter(final String uuid)", "full_signature": "public List<LogicalRouter> findLogicalRouter(final String uuid)", "class_method_signature": "NiciraNvpApi.findLogicalRouter(final String uuid)", "testcase": false, "constructor": false}, {"identifier": "findOneLogicalRouterByUuid", "parameters": "(final String logicalRouterUuid)", "modifiers": "public", "return": "LogicalRouter", "signature": "LogicalRouter findOneLogicalRouterByUuid(final String logicalRouterUuid)", "full_signature": "public LogicalRouter findOneLogicalRouterByUuid(final String logicalRouterUuid)", "class_method_signature": "NiciraNvpApi.findOneLogicalRouterByUuid(final String logicalRouterUuid)", "testcase": false, "constructor": false}, {"identifier": "updateLogicalRouter", "parameters": "(final LogicalRouter logicalRouter, final String logicalRouterUuid)", "modifiers": "public", "return": "void", "signature": "void updateLogicalRouter(final LogicalRouter logicalRouter, final String logicalRouterUuid)", "full_signature": "public void updateLogicalRouter(final LogicalRouter logicalRouter, final String logicalRouterUuid)", "class_method_signature": "NiciraNvpApi.updateLogicalRouter(final LogicalRouter logicalRouter, final String logicalRouterUuid)", "testcase": false, "constructor": false}, {"identifier": "deleteLogicalRouter", "parameters": "(final String logicalRouterUuid)", "modifiers": "public", "return": "void", "signature": "void deleteLogicalRouter(final String logicalRouterUuid)", "full_signature": "public void deleteLogicalRouter(final String logicalRouterUuid)", "class_method_signature": "NiciraNvpApi.deleteLogicalRouter(final String logicalRouterUuid)", "testcase": false, "constructor": false}, {"identifier": "createLogicalRouterPort", "parameters": "(final String logicalRouterUuid, final LogicalRouterPort logicalRouterPort)", "modifiers": "public", "return": "LogicalRouterPort", "signature": "LogicalRouterPort createLogicalRouterPort(final String logicalRouterUuid, final LogicalRouterPort logicalRouterPort)", "full_signature": "public LogicalRouterPort createLogicalRouterPort(final String logicalRouterUuid, final LogicalRouterPort logicalRouterPort)", "class_method_signature": "NiciraNvpApi.createLogicalRouterPort(final String logicalRouterUuid, final LogicalRouterPort logicalRouterPort)", "testcase": false, "constructor": false}, {"identifier": "deleteLogicalRouterPort", "parameters": "(final String logicalRouterUuid, final String logicalRouterPortUuid)", "modifiers": "public", "return": "void", "signature": "void deleteLogicalRouterPort(final String logicalRouterUuid, final String logicalRouterPortUuid)", "full_signature": "public void deleteLogicalRouterPort(final String logicalRouterUuid, final String logicalRouterPortUuid)", "class_method_signature": "NiciraNvpApi.deleteLogicalRouterPort(final String logicalRouterUuid, final String logicalRouterPortUuid)", "testcase": false, "constructor": false}, {"identifier": "updateLogicalRouterPort", "parameters": "(final String logicalRouterUuid, final LogicalRouterPort logicalRouterPort)", "modifiers": "public", "return": "void", "signature": "void updateLogicalRouterPort(final String logicalRouterUuid, final LogicalRouterPort logicalRouterPort)", "full_signature": "public void updateLogicalRouterPort(final String logicalRouterUuid, final LogicalRouterPort logicalRouterPort)", "class_method_signature": "NiciraNvpApi.updateLogicalRouterPort(final String logicalRouterUuid, final LogicalRouterPort logicalRouterPort)", "testcase": false, "constructor": false}, {"identifier": "updateLogicalRouterPortAttachment", "parameters": "(final String logicalRouterUuid, final String logicalRouterPortUuid, final Attachment attachment)", "modifiers": "public", "return": "void", "signature": "void updateLogicalRouterPortAttachment(final String logicalRouterUuid, final String logicalRouterPortUuid, final Attachment attachment)", "full_signature": "public void updateLogicalRouterPortAttachment(final String logicalRouterUuid, final String logicalRouterPortUuid, final Attachment attachment)", "class_method_signature": "NiciraNvpApi.updateLogicalRouterPortAttachment(final String logicalRouterUuid, final String logicalRouterPortUuid, final Attachment attachment)", "testcase": false, "constructor": false}, {"identifier": "createLogicalRouterNatRule", "parameters": "(final String logicalRouterUuid, final NatRule natRule)", "modifiers": "public", "return": "NatRule", "signature": "NatRule createLogicalRouterNatRule(final String logicalRouterUuid, final NatRule natRule)", "full_signature": "public NatRule createLogicalRouterNatRule(final String logicalRouterUuid, final NatRule natRule)", "class_method_signature": "NiciraNvpApi.createLogicalRouterNatRule(final String logicalRouterUuid, final NatRule natRule)", "testcase": false, "constructor": false}, {"identifier": "updateLogicalRouterNatRule", "parameters": "(final String logicalRouterUuid, final NatRule natRule)", "modifiers": "public", "return": "void", "signature": "void updateLogicalRouterNatRule(final String logicalRouterUuid, final NatRule natRule)", "full_signature": "public void updateLogicalRouterNatRule(final String logicalRouterUuid, final NatRule natRule)", "class_method_signature": "NiciraNvpApi.updateLogicalRouterNatRule(final String logicalRouterUuid, final NatRule natRule)", "testcase": false, "constructor": false}, {"identifier": "deleteLogicalRouterNatRule", "parameters": "(final String logicalRouterUuid, final UUID natRuleUuid)", "modifiers": "public", "return": "void", "signature": "void deleteLogicalRouterNatRule(final String logicalRouterUuid, final UUID natRuleUuid)", "full_signature": "public void deleteLogicalRouterNatRule(final String logicalRouterUuid, final UUID natRuleUuid)", "class_method_signature": "NiciraNvpApi.deleteLogicalRouterNatRule(final String logicalRouterUuid, final UUID natRuleUuid)", "testcase": false, "constructor": false}, {"identifier": "findLogicalRouterPortByGatewayServiceAndVlanId", "parameters": "(final String logicalRouterUuid, final String gatewayServiceUuid, final long vlanId)", "modifiers": "public", "return": "List<LogicalRouterPort>", "signature": "List<LogicalRouterPort> findLogicalRouterPortByGatewayServiceAndVlanId(final String logicalRouterUuid, final String gatewayServiceUuid, final long vlanId)", "full_signature": "public List<LogicalRouterPort> findLogicalRouterPortByGatewayServiceAndVlanId(final String logicalRouterUuid, final String gatewayServiceUuid, final long vlanId)", "class_method_signature": "NiciraNvpApi.findLogicalRouterPortByGatewayServiceAndVlanId(final String logicalRouterUuid, final String gatewayServiceUuid, final long vlanId)", "testcase": false, "constructor": false}, {"identifier": "findNatRulesByLogicalRouterUuid", "parameters": "(final String logicalRouterUuid)", "modifiers": "public", "return": "List<NatRule>", "signature": "List<NatRule> findNatRulesByLogicalRouterUuid(final String logicalRouterUuid)", "full_signature": "public List<NatRule> findNatRulesByLogicalRouterUuid(final String logicalRouterUuid)", "class_method_signature": "NiciraNvpApi.findNatRulesByLogicalRouterUuid(final String logicalRouterUuid)", "testcase": false, "constructor": false}, {"identifier": "findLogicalRouterPortByGatewayServiceUuid", "parameters": "(final String logicalRouterUuid, final String l3GatewayServiceUuid)", "modifiers": "public", "return": "List<LogicalRouterPort>", "signature": "List<LogicalRouterPort> findLogicalRouterPortByGatewayServiceUuid(final String logicalRouterUuid, final String l3GatewayServiceUuid)", "full_signature": "public List<LogicalRouterPort> findLogicalRouterPortByGatewayServiceUuid(final String logicalRouterUuid, final String l3GatewayServiceUuid)", "class_method_signature": "NiciraNvpApi.findLogicalRouterPortByGatewayServiceUuid(final String logicalRouterUuid, final String l3GatewayServiceUuid)", "testcase": false, "constructor": false}, {"identifier": "buildBasicParametersMap", "parameters": "(final String fieldsQueryValue)", "modifiers": "private static", "return": "Map<String, String>", "signature": "Map<String, String> buildBasicParametersMap(final String fieldsQueryValue)", "full_signature": "private static Map<String, String> buildBasicParametersMap(final String fieldsQueryValue)", "class_method_signature": "NiciraNvpApi.buildBasicParametersMap(final String fieldsQueryValue)", "testcase": false, "constructor": false}, {"identifier": "buildUri", "parameters": "(final String uriPrefix, final String uuid)", "modifiers": "private static", "return": "String", "signature": "String buildUri(final String uriPrefix, final String uuid)", "full_signature": "private static String buildUri(final String uriPrefix, final String uuid)", "class_method_signature": "NiciraNvpApi.buildUri(final String uriPrefix, final String uuid)", "testcase": false, "constructor": false}, {"identifier": "buildLogicalSwitchUri", "parameters": "(final String logicalSwitchUuid)", "modifiers": "private static", "return": "String", "signature": "String buildLogicalSwitchUri(final String logicalSwitchUuid)", "full_signature": "private static String buildLogicalSwitchUri(final String logicalSwitchUuid)", "class_method_signature": "NiciraNvpApi.buildLogicalSwitchUri(final String logicalSwitchUuid)", "testcase": false, "constructor": false}, {"identifier": "buildLogicalSwitchElementUri", "parameters": "(final String logicalSwitchUuid, final String logicalElementType)", "modifiers": "private static", "return": "String", "signature": "String buildLogicalSwitchElementUri(final String logicalSwitchUuid, final String logicalElementType)", "full_signature": "private static String buildLogicalSwitchElementUri(final String logicalSwitchUuid, final String logicalElementType)", "class_method_signature": "NiciraNvpApi.buildLogicalSwitchElementUri(final String logicalSwitchUuid, final String logicalElementType)", "testcase": false, "constructor": false}, {"identifier": "buildLogicalSwitchElementUri", "parameters": "(final String logicalSwitchUuid, final String logicalElementType, final String elementUuid)", "modifiers": "private static", "return": "String", "signature": "String buildLogicalSwitchElementUri(final String logicalSwitchUuid, final String logicalElementType, final String elementUuid)", "full_signature": "private static String buildLogicalSwitchElementUri(final String logicalSwitchUuid, final String logicalElementType, final String elementUuid)", "class_method_signature": "NiciraNvpApi.buildLogicalSwitchElementUri(final String logicalSwitchUuid, final String logicalElementType, final String elementUuid)", "testcase": false, "constructor": false}, {"identifier": "buildLogicalRouterUri", "parameters": "(final String logicalRouterUuid)", "modifiers": "private static", "return": "String", "signature": "String buildLogicalRouterUri(final String logicalRouterUuid)", "full_signature": "private static String buildLogicalRouterUri(final String logicalRouterUuid)", "class_method_signature": "NiciraNvpApi.buildLogicalRouterUri(final String logicalRouterUuid)", "testcase": false, "constructor": false}, {"identifier": "buildLogicalRouterElementUri", "parameters": "(final String logicalRouterUuid, final String logicalElementType)", "modifiers": "private static", "return": "String", "signature": "String buildLogicalRouterElementUri(final String logicalRouterUuid, final String logicalElementType)", "full_signature": "private static String buildLogicalRouterElementUri(final String logicalRouterUuid, final String logicalElementType)", "class_method_signature": "NiciraNvpApi.buildLogicalRouterElementUri(final String logicalRouterUuid, final String logicalElementType)", "testcase": false, "constructor": false}, {"identifier": "buildLogicalRouterElementUri", "parameters": "(final String logicalRouterUuid, final String logicalRouterElementType, final String elementUuid)", "modifiers": "private static", "return": "String", "signature": "String buildLogicalRouterElementUri(final String logicalRouterUuid, final String logicalRouterElementType, final String elementUuid)", "full_signature": "private static String buildLogicalRouterElementUri(final String logicalRouterUuid, final String logicalRouterElementType, final String elementUuid)", "class_method_signature": "NiciraNvpApi.buildLogicalRouterElementUri(final String logicalRouterUuid, final String logicalRouterElementType, final String elementUuid)", "testcase": false, "constructor": false}], "file": "plugins/network-elements/nicira-nvp/src/main/java/com/cloud/network/nicira/NiciraNvpApi.java"}, "focal_method": {"identifier": "updateSecurityProfile", "parameters": "(final SecurityProfile securityProfile, final String securityProfileUuid)", "modifiers": "public", "return": "void", "body": "public void updateSecurityProfile(final SecurityProfile securityProfile, final String securityProfileUuid) throws NiciraNvpApiException {\n        update(securityProfile, securityProfileUuid);\n    }", "signature": "void updateSecurityProfile(final SecurityProfile securityProfile, final String securityProfileUuid)", "full_signature": "public void updateSecurityProfile(final SecurityProfile securityProfile, final String securityProfileUuid)", "class_method_signature": "NiciraNvpApi.updateSecurityProfile(final SecurityProfile securityProfile, final String securityProfileUuid)", "testcase": false, "constructor": false, "invocations": ["update"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}