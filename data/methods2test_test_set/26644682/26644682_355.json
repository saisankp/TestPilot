{"test_class": {"identifier": "WrapperProcessorTest", "superclass": "extends ServiceBaseTest", "interfaces": "", "fields": [], "file": "dataprep-backend-service/src/test/java/org/talend/dataprep/processor/WrapperProcessorTest.java"}, "test_case": {"identifier": "shouldReportInvalidWrapper", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReportInvalidWrapper() throws Exception {\n        assertFalse(WrapperProcessor.isValidWrapper(new InvalidWrapper()));\n    }", "signature": "void shouldReportInvalidWrapper()", "full_signature": "@Test public void shouldReportInvalidWrapper()", "class_method_signature": "WrapperProcessorTest.shouldReportInvalidWrapper()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isValidWrapper"]}, "focal_class": {"identifier": "WrapperProcessor", "superclass": "", "interfaces": "implements BeanPostProcessor, ApplicationContextAware", "fields": [{"original_string": "private ApplicationContext applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}], "methods": [{"identifier": "isValidWrapper", "parameters": "(Wrapper wrapper)", "modifiers": "static", "return": "boolean", "signature": "boolean isValidWrapper(Wrapper wrapper)", "full_signature": "static boolean isValidWrapper(Wrapper wrapper)", "class_method_signature": "WrapperProcessor.isValidWrapper(Wrapper wrapper)", "testcase": false, "constructor": false}, {"identifier": "postProcessBeforeInitialization", "parameters": "(Object bean, String beanName)", "modifiers": "@Override public", "return": "Object", "signature": "Object postProcessBeforeInitialization(Object bean, String beanName)", "full_signature": "@Override public Object postProcessBeforeInitialization(Object bean, String beanName)", "class_method_signature": "WrapperProcessor.postProcessBeforeInitialization(Object bean, String beanName)", "testcase": false, "constructor": false}, {"identifier": "postProcessAfterInitialization", "parameters": "(Object bean, String beanName)", "modifiers": "@Override public", "return": "Object", "signature": "Object postProcessAfterInitialization(Object bean, String beanName)", "full_signature": "@Override public Object postProcessAfterInitialization(Object bean, String beanName)", "class_method_signature": "WrapperProcessor.postProcessAfterInitialization(Object bean, String beanName)", "testcase": false, "constructor": false}, {"identifier": "setApplicationContext", "parameters": "(ApplicationContext applicationContext)", "modifiers": "@Override public", "return": "void", "signature": "void setApplicationContext(ApplicationContext applicationContext)", "full_signature": "@Override public void setApplicationContext(ApplicationContext applicationContext)", "class_method_signature": "WrapperProcessor.setApplicationContext(ApplicationContext applicationContext)", "testcase": false, "constructor": false}], "file": "dataprep-backend-service/src/main/java/org/talend/dataprep/processor/WrapperProcessor.java"}, "focal_method": {"identifier": "isValidWrapper", "parameters": "(Wrapper wrapper)", "modifiers": "static", "return": "boolean", "body": "static boolean isValidWrapper(Wrapper wrapper) {\n        if (wrapper == null) {\n            return true;\n        }\n        AtomicBoolean isValid = new AtomicBoolean(true);\n        ReflectionUtils.doWithFields(wrapper.getClass(), field -> {\n            final Autowired annotation = AnnotationUtils.findAnnotation(field, Autowired.class);\n            if (annotation != null) {\n                isValid.set(false);\n            }\n        });\n        return isValid.get();\n    }", "signature": "boolean isValidWrapper(Wrapper wrapper)", "full_signature": "static boolean isValidWrapper(Wrapper wrapper)", "class_method_signature": "WrapperProcessor.isValidWrapper(Wrapper wrapper)", "testcase": false, "constructor": false, "invocations": ["doWithFields", "getClass", "findAnnotation", "set", "get"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}