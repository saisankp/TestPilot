{"test_class": {"identifier": "CenterAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CenterAdapter centerAdapter;", "modifier": "private", "type": "CenterAdapter", "declarator": "centerAdapter", "var_name": "centerAdapter"}], "file": "coastal-hazards-portal/src/test/java/gov/usgs/cida/coastalhazards/gson/adapter/CenterAdapterTest.java"}, "test_case": {"identifier": "deserializeTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void deserializeTest() {\n        JsonArray json = new JsonArray();\n        json.add(new JsonPrimitive(12.3));\n        json.add(new JsonPrimitive(4.56));\n        Center deserialized = centerAdapter.deserialize(json, Center.class, null);\n        \n        assertThat(deserialized.getX(), is(equalTo(12.3)));\n        assertThat(deserialized.getY(), is(equalTo(4.56)));\n    }", "signature": "void deserializeTest()", "full_signature": "@Test public void deserializeTest()", "class_method_signature": "CenterAdapterTest.deserializeTest()", "testcase": true, "constructor": false, "invocations": ["add", "add", "deserialize", "assertThat", "getX", "is", "equalTo", "assertThat", "getY", "is", "equalTo"]}, "focal_class": {"identifier": "CenterAdapter", "superclass": "", "interfaces": "implements JsonSerializer<Center>, JsonDeserializer<Center>", "fields": [], "methods": [{"identifier": "serialize", "parameters": "(Center src, Type typeOfSrc, JsonSerializationContext context)", "modifiers": "@Override public", "return": "JsonElement", "signature": "JsonElement serialize(Center src, Type typeOfSrc, JsonSerializationContext context)", "full_signature": "@Override public JsonElement serialize(Center src, Type typeOfSrc, JsonSerializationContext context)", "class_method_signature": "CenterAdapter.serialize(Center src, Type typeOfSrc, JsonSerializationContext context)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(JsonElement json, Type typeOfT, JsonDeserializationContext context)", "modifiers": "@Override public", "return": "Center", "signature": "Center deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)", "full_signature": "@Override public Center deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)", "class_method_signature": "CenterAdapter.deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)", "testcase": false, "constructor": false}], "file": "coastal-hazards-portal/src/main/java/gov/usgs/cida/coastalhazards/gson/adapter/CenterAdapter.java"}, "focal_method": {"identifier": "deserialize", "parameters": "(JsonElement json, Type typeOfT, JsonDeserializationContext context)", "modifiers": "@Override public", "return": "Center", "body": "@Override\n    public Center deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n        Center center = new Center();\n        if (json instanceof JsonArray) {\n            JsonArray array = (JsonArray)json;\n            if (array.size() != 2) {\n                throw new JsonParseException(\"Center must be of format [x,y]\");\n            }\n            // TODO check validity of bbox\n            center.setX(array.get(0).getAsDouble());\n            center.setY(array.get(1).getAsDouble());\n        } else {\n            throw new JsonParseException(\"Center must be JSON array\");\n        }\n        return center;\n    }", "signature": "Center deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)", "full_signature": "@Override public Center deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)", "class_method_signature": "CenterAdapter.deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)", "testcase": false, "constructor": false, "invocations": ["size", "setX", "getAsDouble", "get", "setY", "getAsDouble", "get"]}, "repository": {"repo_id": 6888625, "url": "https://github.com/USGS-CIDA/coastal-hazards", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 5, "size": 37212, "license": "licensed"}}