{"test_class": {"identifier": "PathAddressTest", "superclass": "", "interfaces": "", "fields": [], "file": "api/src/test/java/org/gatein/management/api/PathAddressTest.java"}, "test_case": {"identifier": "testSubAddress", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testSubAddress()\n   {\n      PathAddress address = PathAddress.pathAddress(\"one\", \"two\", \"three\");\n      assertEquals(PathAddress.pathAddress(\"two\", \"three\"), address.subAddress(1));\n\n      PathAddress sub1 = address.subAddress(1, 3);\n      assertEquals(PathAddress.pathAddress(\"two\", \"three\"), sub1);\n      PathAddress sub2 = address.subAddress(2, 3);\n      assertEquals(PathAddress.pathAddress(\"three\"), sub2);\n   }", "signature": "void testSubAddress()", "full_signature": "@Test public void testSubAddress()", "class_method_signature": "PathAddressTest.testSubAddress()", "testcase": true, "constructor": false, "invocations": ["pathAddress", "assertEquals", "pathAddress", "subAddress", "subAddress", "assertEquals", "pathAddress", "subAddress", "assertEquals", "pathAddress"]}, "focal_class": {"identifier": "PathAddress", "superclass": "", "interfaces": "implements Iterable<String>", "fields": [{"original_string": "public static final PathAddress EMPTY_ADDRESS = new PathAddress(Collections.<String>emptyList());", "modifier": "public static final", "type": "PathAddress", "declarator": "EMPTY_ADDRESS = new PathAddress(Collections.<String>emptyList())", "var_name": "EMPTY_ADDRESS"}, {"original_string": "List<String> pathList;", "modifier": "", "type": "List<String>", "declarator": "pathList", "var_name": "pathList"}, {"original_string": "private List<PathTemplateResolver> resolvers;", "modifier": "private", "type": "List<PathTemplateResolver>", "declarator": "resolvers", "var_name": "resolvers"}], "methods": [{"identifier": "empty", "parameters": "()", "modifiers": "public static", "return": "PathAddress", "signature": "PathAddress empty()", "full_signature": "public static PathAddress empty()", "class_method_signature": "PathAddress.empty()", "testcase": false, "constructor": false}, {"identifier": "pathAddress", "parameters": "(String... paths)", "modifiers": "public static", "return": "PathAddress", "signature": "PathAddress pathAddress(String... paths)", "full_signature": "public static PathAddress pathAddress(String... paths)", "class_method_signature": "PathAddress.pathAddress(String... paths)", "testcase": false, "constructor": false}, {"identifier": "pathAddress", "parameters": "(String addressPath)", "modifiers": "public static", "return": "PathAddress", "signature": "PathAddress pathAddress(String addressPath)", "full_signature": "public static PathAddress pathAddress(String addressPath)", "class_method_signature": "PathAddress.pathAddress(String addressPath)", "testcase": false, "constructor": false}, {"identifier": "PathAddress", "parameters": "(final List<String> pathList)", "modifiers": "", "return": "", "signature": " PathAddress(final List<String> pathList)", "full_signature": "  PathAddress(final List<String> pathList)", "class_method_signature": "PathAddress.PathAddress(final List<String> pathList)", "testcase": false, "constructor": true}, {"identifier": "PathAddress", "parameters": "(final List<String> pathList, final List<PathTemplateResolver> resolvers)", "modifiers": "", "return": "", "signature": " PathAddress(final List<String> pathList, final List<PathTemplateResolver> resolvers)", "full_signature": "  PathAddress(final List<String> pathList, final List<PathTemplateResolver> resolvers)", "class_method_signature": "PathAddress.PathAddress(final List<String> pathList, final List<PathTemplateResolver> resolvers)", "testcase": false, "constructor": true}, {"identifier": "append", "parameters": "(String path)", "modifiers": "public", "return": "PathAddress", "signature": "PathAddress append(String path)", "full_signature": "public PathAddress append(String path)", "class_method_signature": "PathAddress.append(String path)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(PathAddress address)", "modifiers": "public", "return": "PathAddress", "signature": "PathAddress append(PathAddress address)", "full_signature": "public PathAddress append(PathAddress address)", "class_method_signature": "PathAddress.append(PathAddress address)", "testcase": false, "constructor": false}, {"identifier": "subAddress", "parameters": "(int start)", "modifiers": "public", "return": "PathAddress", "signature": "PathAddress subAddress(int start)", "full_signature": "public PathAddress subAddress(int start)", "class_method_signature": "PathAddress.subAddress(int start)", "testcase": false, "constructor": false}, {"identifier": "subAddress", "parameters": "(int start, int end)", "modifiers": "public", "return": "PathAddress", "signature": "PathAddress subAddress(int start, int end)", "full_signature": "public PathAddress subAddress(int start, int end)", "class_method_signature": "PathAddress.subAddress(int start, int end)", "testcase": false, "constructor": false}, {"identifier": "getLastElement", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLastElement()", "full_signature": "public String getLastElement()", "class_method_signature": "PathAddress.getLastElement()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int index)", "modifiers": "public", "return": "String", "signature": "String get(int index)", "full_signature": "public String get(int index)", "class_method_signature": "PathAddress.get(int index)", "testcase": false, "constructor": false}, {"identifier": "resolvePathTemplate", "parameters": "(String templateName)", "modifiers": "public", "return": "String", "signature": "String resolvePathTemplate(String templateName)", "full_signature": "public String resolvePathTemplate(String templateName)", "class_method_signature": "PathAddress.resolvePathTemplate(String templateName)", "testcase": false, "constructor": false}, {"identifier": "addPathTemplateResolver", "parameters": "(PathTemplateResolver resolver)", "modifiers": "public", "return": "void", "signature": "void addPathTemplateResolver(PathTemplateResolver resolver)", "full_signature": "public void addPathTemplateResolver(PathTemplateResolver resolver)", "class_method_signature": "PathAddress.addPathTemplateResolver(PathTemplateResolver resolver)", "testcase": false, "constructor": false}, {"identifier": "getPathTemplateResolvers", "parameters": "()", "modifiers": "public", "return": "List<PathTemplateResolver>", "signature": "List<PathTemplateResolver> getPathTemplateResolvers()", "full_signature": "public List<PathTemplateResolver> getPathTemplateResolvers()", "class_method_signature": "PathAddress.getPathTemplateResolvers()", "testcase": false, "constructor": false}, {"identifier": "accepts", "parameters": "(PathTemplateFilter filter)", "modifiers": "public", "return": "boolean", "signature": "boolean accepts(PathTemplateFilter filter)", "full_signature": "public boolean accepts(PathTemplateFilter filter)", "class_method_signature": "PathAddress.accepts(PathTemplateFilter filter)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "PathAddressIterator", "signature": "PathAddressIterator iterator()", "full_signature": "@Override public PathAddressIterator iterator()", "class_method_signature": "PathAddress.iterator()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "PathAddress.size()", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "public", "return": "PathAddress", "signature": "PathAddress copy()", "full_signature": "public PathAddress copy()", "class_method_signature": "PathAddress.copy()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "PathAddress.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PathAddress.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PathAddress.toString()", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(String string, String regex)", "modifiers": "static", "return": "List<String>", "signature": "List<String> split(String string, String regex)", "full_signature": "static List<String> split(String string, String regex)", "class_method_signature": "PathAddress.split(String string, String regex)", "testcase": false, "constructor": false}], "file": "api/src/main/java/org/gatein/management/api/PathAddress.java"}, "focal_method": {"identifier": "subAddress", "parameters": "(int start)", "modifiers": "public", "return": "PathAddress", "body": "public PathAddress subAddress(int start)\n   {\n      return new PathAddress(pathList.subList(start, pathList.size()));\n   }", "signature": "PathAddress subAddress(int start)", "full_signature": "public PathAddress subAddress(int start)", "class_method_signature": "PathAddress.subAddress(int start)", "testcase": false, "constructor": false, "invocations": ["subList", "size"]}, "repository": {"repo_id": 2155214, "url": "https://github.com/gatein/gatein-management", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3383, "license": "licensed"}}