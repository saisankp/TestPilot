{"test_class": {"identifier": "ListTemplatesCommandTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ByteArrayOutputStream outputStream;", "modifier": "private", "type": "ByteArrayOutputStream", "declarator": "outputStream", "var_name": "outputStream"}, {"original_string": "private PrintStream out;", "modifier": "private", "type": "PrintStream", "declarator": "out", "var_name": "out"}], "file": "karaf/commands/src/test/java/com/axemblr/provisionr/commands/ListTemplatesCommandTest.java"}, "test_case": {"identifier": "testListTemplates", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testListTemplates() throws Exception {\n        final ImmutableList<PoolTemplate> templates = ImmutableList.<PoolTemplate>of(\n            XmlTemplate.newXmlTemplate(readDefaultTemplate(\"jenkins\")),\n            XmlTemplate.newXmlTemplate(readDefaultTemplate(\"cdh3\")));\n\n        ListTemplatesCommand command = new ListTemplatesCommand(templates);\n\n        command.setOut(out);\n        command.execute(mock(CommandSession.class));\n\n        out.flush();\n\n        assertThat(outputStream.toString()).contains(\"jenkins\").contains(\"cdh3\");\n    }", "signature": "void testListTemplates()", "full_signature": "@Test public void testListTemplates()", "class_method_signature": "ListTemplatesCommandTest.testListTemplates()", "testcase": true, "constructor": false, "invocations": ["of", "newXmlTemplate", "readDefaultTemplate", "newXmlTemplate", "readDefaultTemplate", "setOut", "execute", "mock", "flush", "contains", "contains", "assertThat", "toString"]}, "focal_class": {"identifier": "ListTemplatesCommand", "superclass": "extends OsgiCommandSupport", "interfaces": "", "fields": [{"original_string": "private PrintStream out = System.out;", "modifier": "private", "type": "PrintStream", "declarator": "out = System.out", "var_name": "out"}, {"original_string": "private final List<PoolTemplate> templates;", "modifier": "private final", "type": "List<PoolTemplate>", "declarator": "templates", "var_name": "templates"}], "methods": [{"identifier": "ListTemplatesCommand", "parameters": "(List<PoolTemplate> templates)", "modifiers": "public", "return": "", "signature": " ListTemplatesCommand(List<PoolTemplate> templates)", "full_signature": "public  ListTemplatesCommand(List<PoolTemplate> templates)", "class_method_signature": "ListTemplatesCommand.ListTemplatesCommand(List<PoolTemplate> templates)", "testcase": false, "constructor": true}, {"identifier": "doExecute", "parameters": "()", "modifiers": "@Override protected", "return": "Object", "signature": "Object doExecute()", "full_signature": "@Override protected Object doExecute()", "class_method_signature": "ListTemplatesCommand.doExecute()", "testcase": false, "constructor": false}, {"identifier": "setOut", "parameters": "(PrintStream out)", "modifiers": "@VisibleForTesting", "return": "void", "signature": "void setOut(PrintStream out)", "full_signature": "@VisibleForTesting void setOut(PrintStream out)", "class_method_signature": "ListTemplatesCommand.setOut(PrintStream out)", "testcase": false, "constructor": false}], "file": "karaf/commands/src/main/java/com/axemblr/provisionr/commands/ListTemplatesCommand.java"}, "focal_method": {"identifier": "setOut", "parameters": "(PrintStream out)", "modifiers": "@VisibleForTesting", "return": "void", "body": "@VisibleForTesting\n    void setOut(PrintStream out) {\n        this.out = checkNotNull(out, \"out is null\");\n    }", "signature": "void setOut(PrintStream out)", "full_signature": "@VisibleForTesting void setOut(PrintStream out)", "class_method_signature": "ListTemplatesCommand.setOut(PrintStream out)", "testcase": false, "constructor": false, "invocations": ["checkNotNull"]}, "repository": {"repo_id": 6035195, "url": "https://github.com/axemblr/axemblr-provisionr", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 30, "size": 3329, "license": "licensed"}}