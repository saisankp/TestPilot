{"test_class": {"identifier": "SpreadsheetUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "taverna-spreadsheet-import-activity/src/test/java/org/apache/taverna/activities/spreadsheet/SpreadsheetUtilsTest.java"}, "test_case": {"identifier": "testGetColumnLabel", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetColumnLabel() {\n\t\tassertEquals(\"A\", SpreadsheetUtils.getColumnLabel(0));\n\t\tassertEquals(\"E\", SpreadsheetUtils.getColumnLabel(4));\n\t\tassertEquals(\"Z\", SpreadsheetUtils.getColumnLabel(25));\n\t\tassertEquals(\"AA\", SpreadsheetUtils.getColumnLabel(26));\n\t\tassertEquals(\"ZAFZ\", SpreadsheetUtils.getColumnLabel(457833));\n\t}", "signature": "void testGetColumnLabel()", "full_signature": "@Test public void testGetColumnLabel()", "class_method_signature": "SpreadsheetUtilsTest.testGetColumnLabel()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getColumnLabel", "assertEquals", "getColumnLabel", "assertEquals", "getColumnLabel", "assertEquals", "getColumnLabel", "assertEquals", "getColumnLabel"]}, "focal_class": {"identifier": "SpreadsheetUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getColumnIndex", "parameters": "(String column)", "modifiers": "public static", "return": "int", "signature": "int getColumnIndex(String column)", "full_signature": "public static int getColumnIndex(String column)", "class_method_signature": "SpreadsheetUtils.getColumnIndex(String column)", "testcase": false, "constructor": false}, {"identifier": "getColumnLabel", "parameters": "(int column)", "modifiers": "public static", "return": "String", "signature": "String getColumnLabel(int column)", "full_signature": "public static String getColumnLabel(int column)", "class_method_signature": "SpreadsheetUtils.getColumnLabel(int column)", "testcase": false, "constructor": false}, {"identifier": "getPortName", "parameters": "(String columnLabel, JsonNode jsonNode)", "modifiers": "public static", "return": "String", "signature": "String getPortName(String columnLabel, JsonNode jsonNode)", "full_signature": "public static String getPortName(String columnLabel, JsonNode jsonNode)", "class_method_signature": "SpreadsheetUtils.getPortName(String columnLabel, JsonNode jsonNode)", "testcase": false, "constructor": false}, {"identifier": "getPortName", "parameters": "(int columnIndex, JsonNode jsonNode)", "modifiers": "public static", "return": "String", "signature": "String getPortName(int columnIndex, JsonNode jsonNode)", "full_signature": "public static String getPortName(int columnIndex, JsonNode jsonNode)", "class_method_signature": "SpreadsheetUtils.getPortName(int columnIndex, JsonNode jsonNode)", "testcase": false, "constructor": false}, {"identifier": "getRange", "parameters": "(JsonNode jsonNode)", "modifiers": "public static", "return": "Range", "signature": "Range getRange(JsonNode jsonNode)", "full_signature": "public static Range getRange(JsonNode jsonNode)", "class_method_signature": "SpreadsheetUtils.getRange(JsonNode jsonNode)", "testcase": false, "constructor": false}], "file": "taverna-spreadsheet-import-activity/src/main/java/org/apache/taverna/activities/spreadsheet/SpreadsheetUtils.java"}, "focal_method": {"identifier": "getColumnLabel", "parameters": "(int column)", "modifiers": "public static", "return": "String", "body": "public static String getColumnLabel(int column) {\n\t\tStringBuilder result = new StringBuilder();\n\t\twhile (column >= 0) {\n\t\t\tresult.insert(0, (char) ((char) (column % 26) + 'A'));\n\t\t\tcolumn = (column / 26) - 1;\n\t\t}\n\t\treturn result.toString();\n\t}", "signature": "String getColumnLabel(int column)", "full_signature": "public static String getColumnLabel(int column)", "class_method_signature": "SpreadsheetUtils.getColumnLabel(int column)", "testcase": false, "constructor": false, "invocations": ["insert", "toString"]}, "repository": {"repo_id": 30956938, "url": "https://github.com/apache/incubator-taverna-common-activities", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 5696, "license": "licensed"}}