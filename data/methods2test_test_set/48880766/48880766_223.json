{"test_class": {"identifier": "BooleanColumnTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String LINE_END = System.lineSeparator();", "modifier": "private static final", "type": "String", "declarator": "LINE_END = System.lineSeparator()", "var_name": "LINE_END"}, {"original_string": "private final BooleanColumn column = BooleanColumn.create(\"Test\");", "modifier": "private final", "type": "BooleanColumn", "declarator": "column = BooleanColumn.create(\"Test\")", "var_name": "column"}], "file": "core/src/test/java/tech/tablesaw/api/BooleanColumnTest.java"}, "test_case": {"identifier": "testGetElements", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetElements() {\n    assertEquals(7, column.size());\n  }", "signature": "void testGetElements()", "full_signature": "@Test public void testGetElements()", "class_method_signature": "BooleanColumnTest.testGetElements()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "size"]}, "focal_class": {"identifier": "BooleanColumn", "superclass": "extends AbstractColumn<BooleanColumn, Boolean>", "interfaces": "implements BooleanFilterSpec<Selection>,\n        BooleanMapUtils,\n        CategoricalColumn<Boolean>,\n        BooleanFillers<BooleanColumn>,\n        BooleanFilters", "fields": [{"original_string": "private ByteArrayList data;", "modifier": "private", "type": "ByteArrayList", "declarator": "data", "var_name": "data"}, {"original_string": "private final IntComparator comparator =\n      (r1, r2) -> {\n        boolean f1 = get(r1);\n        boolean f2 = get(r2);\n        return Boolean.compare(f1, f2);\n      };", "modifier": "private final", "type": "IntComparator", "declarator": "comparator =\n      (r1, r2) -> {\n        boolean f1 = get(r1);\n        boolean f2 = get(r2);\n        return Boolean.compare(f1, f2);\n      }", "var_name": "comparator"}, {"original_string": "private BooleanFormatter formatter = new BooleanFormatter(\"true\", \"false\", \"\");", "modifier": "private", "type": "BooleanFormatter", "declarator": "formatter = new BooleanFormatter(\"true\", \"false\", \"\")", "var_name": "formatter"}], "methods": [{"identifier": "BooleanColumn", "parameters": "(String name, ByteArrayList values)", "modifiers": "private", "return": "", "signature": " BooleanColumn(String name, ByteArrayList values)", "full_signature": "private  BooleanColumn(String name, ByteArrayList values)", "class_method_signature": "BooleanColumn.BooleanColumn(String name, ByteArrayList values)", "testcase": false, "constructor": true}, {"identifier": "valueIsMissing", "parameters": "(byte b)", "modifiers": "public static", "return": "boolean", "signature": "boolean valueIsMissing(byte b)", "full_signature": "public static boolean valueIsMissing(byte b)", "class_method_signature": "BooleanColumn.valueIsMissing(byte b)", "testcase": false, "constructor": false}, {"identifier": "isMissing", "parameters": "(int rowNumber)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isMissing(int rowNumber)", "full_signature": "@Override public boolean isMissing(int rowNumber)", "class_method_signature": "BooleanColumn.isMissing(int rowNumber)", "testcase": false, "constructor": false}, {"identifier": "setMissing", "parameters": "(int i)", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn setMissing(int i)", "full_signature": "@Override public BooleanColumn setMissing(int i)", "class_method_signature": "BooleanColumn.setMissing(int i)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name, Selection hits, int columnSize)", "modifiers": "public static", "return": "BooleanColumn", "signature": "BooleanColumn create(String name, Selection hits, int columnSize)", "full_signature": "public static BooleanColumn create(String name, Selection hits, int columnSize)", "class_method_signature": "BooleanColumn.create(String name, Selection hits, int columnSize)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name)", "modifiers": "public static", "return": "BooleanColumn", "signature": "BooleanColumn create(String name)", "full_signature": "public static BooleanColumn create(String name)", "class_method_signature": "BooleanColumn.create(String name)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name, int initialSize)", "modifiers": "public static", "return": "BooleanColumn", "signature": "BooleanColumn create(String name, int initialSize)", "full_signature": "public static BooleanColumn create(String name, int initialSize)", "class_method_signature": "BooleanColumn.create(String name, int initialSize)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name, boolean... values)", "modifiers": "public static", "return": "BooleanColumn", "signature": "BooleanColumn create(String name, boolean... values)", "full_signature": "public static BooleanColumn create(String name, boolean... values)", "class_method_signature": "BooleanColumn.create(String name, boolean... values)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name, Collection<Boolean> values)", "modifiers": "public static", "return": "BooleanColumn", "signature": "BooleanColumn create(String name, Collection<Boolean> values)", "full_signature": "public static BooleanColumn create(String name, Collection<Boolean> values)", "class_method_signature": "BooleanColumn.create(String name, Collection<Boolean> values)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name, Boolean[] arr)", "modifiers": "public static", "return": "BooleanColumn", "signature": "BooleanColumn create(String name, Boolean[] arr)", "full_signature": "public static BooleanColumn create(String name, Boolean[] arr)", "class_method_signature": "BooleanColumn.create(String name, Boolean[] arr)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String name, Stream<Boolean> stream)", "modifiers": "public static", "return": "BooleanColumn", "signature": "BooleanColumn create(String name, Stream<Boolean> stream)", "full_signature": "public static BooleanColumn create(String name, Stream<Boolean> stream)", "class_method_signature": "BooleanColumn.create(String name, Stream<Boolean> stream)", "testcase": false, "constructor": false}, {"identifier": "setPrintFormatter", "parameters": "(BooleanFormatter formatter)", "modifiers": "public", "return": "void", "signature": "void setPrintFormatter(BooleanFormatter formatter)", "full_signature": "public void setPrintFormatter(BooleanFormatter formatter)", "class_method_signature": "BooleanColumn.setPrintFormatter(BooleanFormatter formatter)", "testcase": false, "constructor": false}, {"identifier": "getPrintFormatter", "parameters": "()", "modifiers": "public", "return": "BooleanFormatter", "signature": "BooleanFormatter getPrintFormatter()", "full_signature": "public BooleanFormatter getPrintFormatter()", "class_method_signature": "BooleanColumn.getPrintFormatter()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "BooleanColumn.size()", "testcase": false, "constructor": false}, {"identifier": "summary", "parameters": "()", "modifiers": "@Override public", "return": "Table", "signature": "Table summary()", "full_signature": "@Override public Table summary()", "class_method_signature": "BooleanColumn.summary()", "testcase": false, "constructor": false}, {"identifier": "countMissing", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int countMissing()", "full_signature": "@Override public int countMissing()", "class_method_signature": "BooleanColumn.countMissing()", "testcase": false, "constructor": false}, {"identifier": "countUnique", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int countUnique()", "full_signature": "@Override public int countUnique()", "class_method_signature": "BooleanColumn.countUnique()", "testcase": false, "constructor": false}, {"identifier": "unique", "parameters": "()", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn unique()", "full_signature": "@Override public BooleanColumn unique()", "class_method_signature": "BooleanColumn.unique()", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(boolean b)", "modifiers": "public", "return": "BooleanColumn", "signature": "BooleanColumn append(boolean b)", "full_signature": "public BooleanColumn append(boolean b)", "class_method_signature": "BooleanColumn.append(boolean b)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(Boolean b)", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn append(Boolean b)", "full_signature": "@Override public BooleanColumn append(Boolean b)", "class_method_signature": "BooleanColumn.append(Boolean b)", "testcase": false, "constructor": false}, {"identifier": "appendObj", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn appendObj(Object obj)", "full_signature": "@Override public BooleanColumn appendObj(Object obj)", "class_method_signature": "BooleanColumn.appendObj(Object obj)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(byte b)", "modifiers": "public", "return": "BooleanColumn", "signature": "BooleanColumn append(byte b)", "full_signature": "public BooleanColumn append(byte b)", "class_method_signature": "BooleanColumn.append(byte b)", "testcase": false, "constructor": false}, {"identifier": "appendMissing", "parameters": "()", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn appendMissing()", "full_signature": "@Override public BooleanColumn appendMissing()", "class_method_signature": "BooleanColumn.appendMissing()", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(int row)", "modifiers": "@Override public", "return": "String", "signature": "String getString(int row)", "full_signature": "@Override public String getString(int row)", "class_method_signature": "BooleanColumn.getString(int row)", "testcase": false, "constructor": false}, {"identifier": "getUnformattedString", "parameters": "(int row)", "modifiers": "@Override public", "return": "String", "signature": "String getUnformattedString(int row)", "full_signature": "@Override public String getUnformattedString(int row)", "class_method_signature": "BooleanColumn.getUnformattedString(int row)", "testcase": false, "constructor": false}, {"identifier": "emptyCopy", "parameters": "()", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn emptyCopy()", "full_signature": "@Override public BooleanColumn emptyCopy()", "class_method_signature": "BooleanColumn.emptyCopy()", "testcase": false, "constructor": false}, {"identifier": "emptyCopy", "parameters": "(int rowSize)", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn emptyCopy(int rowSize)", "full_signature": "@Override public BooleanColumn emptyCopy(int rowSize)", "class_method_signature": "BooleanColumn.emptyCopy(int rowSize)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "BooleanColumn.clear()", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn copy()", "full_signature": "@Override public BooleanColumn copy()", "class_method_signature": "BooleanColumn.copy()", "testcase": false, "constructor": false}, {"identifier": "sortAscending", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sortAscending()", "full_signature": "@Override public void sortAscending()", "class_method_signature": "BooleanColumn.sortAscending()", "testcase": false, "constructor": false}, {"identifier": "sortDescending", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void sortDescending()", "full_signature": "@Override public void sortDescending()", "class_method_signature": "BooleanColumn.sortDescending()", "testcase": false, "constructor": false}, {"identifier": "appendCell", "parameters": "(String object)", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn appendCell(String object)", "full_signature": "@Override public BooleanColumn appendCell(String object)", "class_method_signature": "BooleanColumn.appendCell(String object)", "testcase": false, "constructor": false}, {"identifier": "appendCell", "parameters": "(String object, AbstractColumnParser<?> parser)", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn appendCell(String object, AbstractColumnParser<?> parser)", "full_signature": "@Override public BooleanColumn appendCell(String object, AbstractColumnParser<?> parser)", "class_method_signature": "BooleanColumn.appendCell(String object, AbstractColumnParser<?> parser)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int i)", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean get(int i)", "full_signature": "@Override public Boolean get(int i)", "class_method_signature": "BooleanColumn.get(int i)", "testcase": false, "constructor": false}, {"identifier": "getByte", "parameters": "(int i)", "modifiers": "public", "return": "byte", "signature": "byte getByte(int i)", "full_signature": "public byte getByte(int i)", "class_method_signature": "BooleanColumn.getByte(int i)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "BooleanColumn.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "countTrue", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int countTrue()", "full_signature": "public int countTrue()", "class_method_signature": "BooleanColumn.countTrue()", "testcase": false, "constructor": false}, {"identifier": "countFalse", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int countFalse()", "full_signature": "public int countFalse()", "class_method_signature": "BooleanColumn.countFalse()", "testcase": false, "constructor": false}, {"identifier": "proportionTrue", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double proportionTrue()", "full_signature": "public double proportionTrue()", "class_method_signature": "BooleanColumn.proportionTrue()", "testcase": false, "constructor": false}, {"identifier": "proportionFalse", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double proportionFalse()", "full_signature": "public double proportionFalse()", "class_method_signature": "BooleanColumn.proportionFalse()", "testcase": false, "constructor": false}, {"identifier": "any", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean any()", "full_signature": "public boolean any()", "class_method_signature": "BooleanColumn.any()", "testcase": false, "constructor": false}, {"identifier": "all", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean all()", "full_signature": "public boolean all()", "class_method_signature": "BooleanColumn.all()", "testcase": false, "constructor": false}, {"identifier": "none", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean none()", "full_signature": "public boolean none()", "class_method_signature": "BooleanColumn.none()", "testcase": false, "constructor": false}, {"identifier": "isFalse", "parameters": "()", "modifiers": "public", "return": "Selection", "signature": "Selection isFalse()", "full_signature": "public Selection isFalse()", "class_method_signature": "BooleanColumn.isFalse()", "testcase": false, "constructor": false}, {"identifier": "isTrue", "parameters": "()", "modifiers": "public", "return": "Selection", "signature": "Selection isTrue()", "full_signature": "public Selection isTrue()", "class_method_signature": "BooleanColumn.isTrue()", "testcase": false, "constructor": false}, {"identifier": "isEqualTo", "parameters": "(BooleanColumn other)", "modifiers": "public", "return": "Selection", "signature": "Selection isEqualTo(BooleanColumn other)", "full_signature": "public Selection isEqualTo(BooleanColumn other)", "class_method_signature": "BooleanColumn.isEqualTo(BooleanColumn other)", "testcase": false, "constructor": false}, {"identifier": "data", "parameters": "()", "modifiers": "public", "return": "ByteArrayList", "signature": "ByteArrayList data()", "full_signature": "public ByteArrayList data()", "class_method_signature": "BooleanColumn.data()", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int i, boolean b)", "modifiers": "public", "return": "BooleanColumn", "signature": "BooleanColumn set(int i, boolean b)", "full_signature": "public BooleanColumn set(int i, boolean b)", "class_method_signature": "BooleanColumn.set(int i, boolean b)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int i, byte b)", "modifiers": "private", "return": "BooleanColumn", "signature": "BooleanColumn set(int i, byte b)", "full_signature": "private BooleanColumn set(int i, byte b)", "class_method_signature": "BooleanColumn.set(int i, byte b)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int i, Boolean val)", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn set(int i, Boolean val)", "full_signature": "@Override public BooleanColumn set(int i, Boolean val)", "class_method_signature": "BooleanColumn.set(int i, Boolean val)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int row, String stringValue, AbstractColumnParser<?> parser)", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn set(int row, String stringValue, AbstractColumnParser<?> parser)", "full_signature": "@Override public BooleanColumn set(int row, String stringValue, AbstractColumnParser<?> parser)", "class_method_signature": "BooleanColumn.set(int row, String stringValue, AbstractColumnParser<?> parser)", "testcase": false, "constructor": false}, {"identifier": "lead", "parameters": "(int n)", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn lead(int n)", "full_signature": "@Override public BooleanColumn lead(int n)", "class_method_signature": "BooleanColumn.lead(int n)", "testcase": false, "constructor": false}, {"identifier": "lag", "parameters": "(int n)", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn lag(int n)", "full_signature": "@Override public BooleanColumn lag(int n)", "class_method_signature": "BooleanColumn.lag(int n)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(Selection rowSelection, boolean newValue)", "modifiers": "public", "return": "BooleanColumn", "signature": "BooleanColumn set(Selection rowSelection, boolean newValue)", "full_signature": "public BooleanColumn set(Selection rowSelection, boolean newValue)", "class_method_signature": "BooleanColumn.set(Selection rowSelection, boolean newValue)", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "(int row)", "modifiers": "public", "return": "double", "signature": "double getDouble(int row)", "full_signature": "public double getDouble(int row)", "class_method_signature": "BooleanColumn.getDouble(int row)", "testcase": false, "constructor": false}, {"identifier": "asDoubleArray", "parameters": "()", "modifiers": "public", "return": "double[]", "signature": "double[] asDoubleArray()", "full_signature": "public double[] asDoubleArray()", "class_method_signature": "BooleanColumn.asDoubleArray()", "testcase": false, "constructor": false}, {"identifier": "rowComparator", "parameters": "()", "modifiers": "@Override public", "return": "IntComparator", "signature": "IntComparator rowComparator()", "full_signature": "@Override public IntComparator rowComparator()", "class_method_signature": "BooleanColumn.rowComparator()", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(Column<Boolean> column)", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn append(Column<Boolean> column)", "full_signature": "@Override public BooleanColumn append(Column<Boolean> column)", "class_method_signature": "BooleanColumn.append(Column<Boolean> column)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(Column<Boolean> column, int row)", "modifiers": "@Override public", "return": "Column<Boolean>", "signature": "Column<Boolean> append(Column<Boolean> column, int row)", "full_signature": "@Override public Column<Boolean> append(Column<Boolean> column, int row)", "class_method_signature": "BooleanColumn.append(Column<Boolean> column, int row)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int row, Column<Boolean> column, int sourceRow)", "modifiers": "@Override public", "return": "Column<Boolean>", "signature": "Column<Boolean> set(int row, Column<Boolean> column, int sourceRow)", "full_signature": "@Override public Column<Boolean> set(int row, Column<Boolean> column, int sourceRow)", "class_method_signature": "BooleanColumn.set(int row, Column<Boolean> column, int sourceRow)", "testcase": false, "constructor": false}, {"identifier": "asSelection", "parameters": "()", "modifiers": "public", "return": "Selection", "signature": "Selection asSelection()", "full_signature": "public Selection asSelection()", "class_method_signature": "BooleanColumn.asSelection()", "testcase": false, "constructor": false}, {"identifier": "isMissing", "parameters": "()", "modifiers": "@Override public", "return": "Selection", "signature": "Selection isMissing()", "full_signature": "@Override public Selection isMissing()", "class_method_signature": "BooleanColumn.isMissing()", "testcase": false, "constructor": false}, {"identifier": "isNotMissing", "parameters": "()", "modifiers": "@Override public", "return": "Selection", "signature": "Selection isNotMissing()", "full_signature": "@Override public Selection isNotMissing()", "class_method_signature": "BooleanColumn.isNotMissing()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Boolean>", "signature": "Iterator<Boolean> iterator()", "full_signature": "@Override public Iterator<Boolean> iterator()", "class_method_signature": "BooleanColumn.iterator()", "testcase": false, "constructor": false}, {"identifier": "byteIterator", "parameters": "()", "modifiers": "public", "return": "ByteIterator", "signature": "ByteIterator byteIterator()", "full_signature": "public ByteIterator byteIterator()", "class_method_signature": "BooleanColumn.byteIterator()", "testcase": false, "constructor": false}, {"identifier": "asSet", "parameters": "()", "modifiers": "public", "return": "BooleanSet", "signature": "BooleanSet asSet()", "full_signature": "public BooleanSet asSet()", "class_method_signature": "BooleanColumn.asSet()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(boolean aBoolean)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(boolean aBoolean)", "full_signature": "public boolean contains(boolean aBoolean)", "class_method_signature": "BooleanColumn.contains(boolean aBoolean)", "testcase": false, "constructor": false}, {"identifier": "byteSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int byteSize()", "full_signature": "@Override public int byteSize()", "class_method_signature": "BooleanColumn.byteSize()", "testcase": false, "constructor": false}, {"identifier": "asBytes", "parameters": "(int row)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] asBytes(int row)", "full_signature": "@Override public byte[] asBytes(int row)", "class_method_signature": "BooleanColumn.asBytes(int row)", "testcase": false, "constructor": false}, {"identifier": "where", "parameters": "(Selection selection)", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn where(Selection selection)", "full_signature": "@Override public BooleanColumn where(Selection selection)", "class_method_signature": "BooleanColumn.where(Selection selection)", "testcase": false, "constructor": false}, {"identifier": "removeMissing", "parameters": "()", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn removeMissing()", "full_signature": "@Override public BooleanColumn removeMissing()", "class_method_signature": "BooleanColumn.removeMissing()", "testcase": false, "constructor": false}, {"identifier": "eval", "parameters": "(BytePredicate predicate)", "modifiers": "public", "return": "Selection", "signature": "Selection eval(BytePredicate predicate)", "full_signature": "public Selection eval(BytePredicate predicate)", "class_method_signature": "BooleanColumn.eval(BytePredicate predicate)", "testcase": false, "constructor": false}, {"identifier": "eval", "parameters": "(Predicate<Boolean> predicate)", "modifiers": "public", "return": "Selection", "signature": "Selection eval(Predicate<Boolean> predicate)", "full_signature": "public Selection eval(Predicate<Boolean> predicate)", "class_method_signature": "BooleanColumn.eval(Predicate<Boolean> predicate)", "testcase": false, "constructor": false}, {"identifier": "eval", "parameters": "(BiPredicate<Boolean, Boolean> predicate, Boolean valueToCompare)", "modifiers": "public", "return": "Selection", "signature": "Selection eval(BiPredicate<Boolean, Boolean> predicate, Boolean valueToCompare)", "full_signature": "public Selection eval(BiPredicate<Boolean, Boolean> predicate, Boolean valueToCompare)", "class_method_signature": "BooleanColumn.eval(BiPredicate<Boolean, Boolean> predicate, Boolean valueToCompare)", "testcase": false, "constructor": false}, {"identifier": "byteListIterator", "parameters": "()", "modifiers": "private", "return": "ByteListIterator", "signature": "ByteListIterator byteListIterator()", "full_signature": "private ByteListIterator byteListIterator()", "class_method_signature": "BooleanColumn.byteListIterator()", "testcase": false, "constructor": false}, {"identifier": "asDoubleColumn", "parameters": "()", "modifiers": "public", "return": "DoubleColumn", "signature": "DoubleColumn asDoubleColumn()", "full_signature": "public DoubleColumn asDoubleColumn()", "class_method_signature": "BooleanColumn.asDoubleColumn()", "testcase": false, "constructor": false}, {"identifier": "compare", "parameters": "(Boolean o1, Boolean o2)", "modifiers": "@Override public", "return": "int", "signature": "int compare(Boolean o1, Boolean o2)", "full_signature": "@Override public int compare(Boolean o1, Boolean o2)", "class_method_signature": "BooleanColumn.compare(Boolean o1, Boolean o2)", "testcase": false, "constructor": false}, {"identifier": "fillWith", "parameters": "(BooleanIterator iterator)", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn fillWith(BooleanIterator iterator)", "full_signature": "@Override public BooleanColumn fillWith(BooleanIterator iterator)", "class_method_signature": "BooleanColumn.fillWith(BooleanIterator iterator)", "testcase": false, "constructor": false}, {"identifier": "fillWith", "parameters": "(BooleanIterable iterable)", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn fillWith(BooleanIterable iterable)", "full_signature": "@Override public BooleanColumn fillWith(BooleanIterable iterable)", "class_method_signature": "BooleanColumn.fillWith(BooleanIterable iterable)", "testcase": false, "constructor": false}, {"identifier": "fillWith", "parameters": "(Supplier<Boolean> supplier)", "modifiers": "@Override public", "return": "BooleanColumn", "signature": "BooleanColumn fillWith(Supplier<Boolean> supplier)", "full_signature": "@Override public BooleanColumn fillWith(Supplier<Boolean> supplier)", "class_method_signature": "BooleanColumn.fillWith(Supplier<Boolean> supplier)", "testcase": false, "constructor": false}, {"identifier": "asObjectArray", "parameters": "()", "modifiers": "@Override public", "return": "Boolean[]", "signature": "Boolean[] asObjectArray()", "full_signature": "@Override public Boolean[] asObjectArray()", "class_method_signature": "BooleanColumn.asObjectArray()", "testcase": false, "constructor": false}], "file": "core/src/main/java/tech/tablesaw/api/BooleanColumn.java"}, "focal_method": {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n  public int size() {\n    return data.size();\n  }", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "BooleanColumn.size()", "testcase": false, "constructor": false, "invocations": ["size"]}, "repository": {"repo_id": 48880766, "url": "https://github.com/jtablesaw/tablesaw", "stars": 2021, "created": "1/1/2016 2:58:28 PM +00:00", "updates": "2020-01-24T23:26:07+00:00", "fork": "False", "license": "licensed"}}