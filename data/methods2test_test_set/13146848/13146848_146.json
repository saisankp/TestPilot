{"test_class": {"identifier": "SimpleSplitParametersTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-model/src/test/java/org/sejda/model/parameter/SimpleSplitParametersTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n        SimpleSplitParameters eq1 = new SimpleSplitParameters(PredefinedSetOfPages.ALL_PAGES);\n        SimpleSplitParameters eq2 = new SimpleSplitParameters(PredefinedSetOfPages.ALL_PAGES);\n        SimpleSplitParameters eq3 = new SimpleSplitParameters(PredefinedSetOfPages.ALL_PAGES);\n        SimpleSplitParameters diff = new SimpleSplitParameters(PredefinedSetOfPages.ODD_PAGES);\n        TestUtils.testEqualsAndHashCodes(eq1, eq2, eq3, diff);\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "SimpleSplitParametersTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["testEqualsAndHashCodes"]}, "focal_class": {"identifier": "SimpleSplitParameters", "superclass": "extends AbstractSplitByPageParameters", "interfaces": "", "fields": [{"original_string": "@NotNull\n    @NotAllowed(disallow = { PredefinedSetOfPages.NONE })\n    private PredefinedSetOfPages setOfPages;", "modifier": "@NotNull\n    @NotAllowed(disallow = { PredefinedSetOfPages.NONE })\n    private", "type": "PredefinedSetOfPages", "declarator": "setOfPages", "var_name": "setOfPages"}], "methods": [{"identifier": "SimpleSplitParameters", "parameters": "(PredefinedSetOfPages setOfPages)", "modifiers": "public", "return": "", "signature": " SimpleSplitParameters(PredefinedSetOfPages setOfPages)", "full_signature": "public  SimpleSplitParameters(PredefinedSetOfPages setOfPages)", "class_method_signature": "SimpleSplitParameters.SimpleSplitParameters(PredefinedSetOfPages setOfPages)", "testcase": false, "constructor": true}, {"identifier": "getPages", "parameters": "(int upperLimit)", "modifiers": "@Override public", "return": "Set<Integer>", "signature": "Set<Integer> getPages(int upperLimit)", "full_signature": "@Override public Set<Integer> getPages(int upperLimit)", "class_method_signature": "SimpleSplitParameters.getPages(int upperLimit)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SimpleSplitParameters.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SimpleSplitParameters.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "SimpleSplitParameters.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "getSetOfPages", "parameters": "()", "modifiers": "public", "return": "PredefinedSetOfPages", "signature": "PredefinedSetOfPages getSetOfPages()", "full_signature": "public PredefinedSetOfPages getSetOfPages()", "class_method_signature": "SimpleSplitParameters.getSetOfPages()", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/parameter/SimpleSplitParameters.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object other) {\n        if (this == other) {\n            return true;\n        }\n        if (!(other instanceof SimpleSplitParameters)) {\n            return false;\n        }\n        SimpleSplitParameters parameter = (SimpleSplitParameters) other;\n        return new EqualsBuilder().appendSuper(super.equals(other)).append(setOfPages, parameter.setOfPages).isEquals();\n    }", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "SimpleSplitParameters.equals(Object other)", "testcase": false, "constructor": false, "invocations": ["isEquals", "append", "appendSuper", "equals"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}