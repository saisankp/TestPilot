{"test_class": {"identifier": "SampleResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HttpServer server;", "modifier": "private", "type": "HttpServer", "declarator": "server", "var_name": "server"}, {"original_string": "private Client client;", "modifier": "private", "type": "Client", "declarator": "client", "var_name": "client"}], "file": "emfjson-jersey-sample/src/test/java/sample/jersey/SampleResourceTest.java"}, "test_case": {"identifier": "testPost", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testPost() {\n\t\tObjectMapper mapper = new ObjectMapper();\n\t\tJsonNode node = mapper.createObjectNode()\n\t\t\t\t.put(\"name\", \"u2\");\n\n\t\tResponse response = client.target(Main.uri)\n\t\t\t\t.request(MediaType.APPLICATION_JSON)\n\t\t\t\t.post(Entity.entity(node, MediaType.APPLICATION_JSON));\n\n\t\tassertEquals(201, response.getStatus());\n\t\tassertEquals(\"http://localhost:8080/u2\", response.getLocation().toString());\n\n\t\tWebTarget target = client.target(Main.uri + \"u2\");\n\n\t\tResource resource = target.request(MediaType.APPLICATION_JSON).get(Resource.class);\n\t\tassertEquals(1, resource.getContents().size());\n\n\t\tEObject u1 = resource.getContents().get(0);\n\t\tassertEquals(\"User\", u1.eClass().getName());\n\t\tassertEquals(\"u2\", u1.eGet(u1.eClass().getEStructuralFeature(\"name\")));\n\t}", "signature": "void testPost()", "full_signature": "@Test public void testPost()", "class_method_signature": "SampleResourceTest.testPost()", "testcase": true, "constructor": false, "invocations": ["put", "createObjectNode", "post", "request", "target", "entity", "assertEquals", "getStatus", "assertEquals", "toString", "getLocation", "target", "get", "request", "assertEquals", "size", "getContents", "get", "getContents", "assertEquals", "getName", "eClass", "assertEquals", "eGet", "getEStructuralFeature", "eClass"]}, "focal_class": {"identifier": "SampleResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Inject\n\tService store;", "modifier": "@Inject", "type": "Service", "declarator": "store", "var_name": "store"}], "methods": [{"identifier": "get", "parameters": "(@PathParam(\"id\") String id)", "modifiers": "@GET @Path(\"/{id}\") @Produces(\"application/json\") public", "return": "Response", "signature": "Response get(@PathParam(\"id\") String id)", "full_signature": "@GET @Path(\"/{id}\") @Produces(\"application/json\") public Response get(@PathParam(\"id\") String id)", "class_method_signature": "SampleResource.get(@PathParam(\"id\") String id)", "testcase": false, "constructor": false}, {"identifier": "post", "parameters": "(JsonNode node)", "modifiers": "@POST @Consumes(\"application/json\") public", "return": "Response", "signature": "Response post(JsonNode node)", "full_signature": "@POST @Consumes(\"application/json\") public Response post(JsonNode node)", "class_method_signature": "SampleResource.post(JsonNode node)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(@PathParam(\"id\") String id, JsonNode node)", "modifiers": "@PUT @Path(\"/{id}\") @Produces(\"application/json\") @Consumes(\"application/json\") public", "return": "Response", "signature": "Response put(@PathParam(\"id\") String id, JsonNode node)", "full_signature": "@PUT @Path(\"/{id}\") @Produces(\"application/json\") @Consumes(\"application/json\") public Response put(@PathParam(\"id\") String id, JsonNode node)", "class_method_signature": "SampleResource.put(@PathParam(\"id\") String id, JsonNode node)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@PathParam(\"id\") String id)", "modifiers": "@DELETE @Path(\"/{id}\") public", "return": "Response", "signature": "Response delete(@PathParam(\"id\") String id)", "full_signature": "@DELETE @Path(\"/{id}\") public Response delete(@PathParam(\"id\") String id)", "class_method_signature": "SampleResource.delete(@PathParam(\"id\") String id)", "testcase": false, "constructor": false}], "file": "emfjson-jersey-sample/src/main/java/sample/jersey/SampleResource.java"}, "focal_method": {"identifier": "post", "parameters": "(JsonNode node)", "modifiers": "@POST @Consumes(\"application/json\") public", "return": "Response", "body": "@POST\n\t@Consumes(\"application/json\")\n\tpublic Response post(JsonNode node) {\n\t\tResource resource;\n\t\ttry {\n\t\t\tresource = store.create(node);\n\t\t} catch (Exception e) {\n\t\t\treturn Response.serverError().build();\n\t\t}\n\n\t\tfinal URI uri = UriBuilder.fromPath(resource.getURI().path()).build();\n\n\t\treturn Response.created(uri).build();\n\t}", "signature": "Response post(JsonNode node)", "full_signature": "@POST @Consumes(\"application/json\") public Response post(JsonNode node)", "class_method_signature": "SampleResource.post(JsonNode node)", "testcase": false, "constructor": false, "invocations": ["create", "build", "serverError", "build", "fromPath", "path", "getURI", "build", "created"]}, "repository": {"repo_id": 29406271, "url": "https://github.com/emfjson/emfjson-samples", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 247, "license": "licensed"}}