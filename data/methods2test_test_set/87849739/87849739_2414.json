{"test_class": {"identifier": "DeletePolicyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JsonSchemaVersion KNOWN_SCHEMA_VERSION = JsonSchemaVersion.V_2;", "modifier": "private static final", "type": "JsonSchemaVersion", "declarator": "KNOWN_SCHEMA_VERSION = JsonSchemaVersion.V_2", "var_name": "KNOWN_SCHEMA_VERSION"}, {"original_string": "private static final JsonObject KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(PolicyCommand.JsonFields.TYPE, DeletePolicy.TYPE)\n            .set(PolicyCommand.JsonFields.JSON_POLICY_ID, TestConstants.Policy.POLICY_ID.toString())\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(PolicyCommand.JsonFields.TYPE, DeletePolicy.TYPE)\n            .set(PolicyCommand.JsonFields.JSON_POLICY_ID, TestConstants.Policy.POLICY_ID.toString())\n            .build()", "var_name": "KNOWN_JSON"}, {"original_string": "private static final DittoHeaders EMPTY_DITTO_HEADERS = DittoHeaders.empty();", "modifier": "private static final", "type": "DittoHeaders", "declarator": "EMPTY_DITTO_HEADERS = DittoHeaders.empty()", "var_name": "EMPTY_DITTO_HEADERS"}], "file": "signals/commands/policies/src/test/java/org/eclipse/ditto/signals/commands/policies/modify/DeletePolicyTest.java"}, "test_case": {"identifier": "tryToCreateInstanceWithNullPolicyId", "parameters": "()", "modifiers": "@Test(expected = NullPointerException.class) public", "return": "void", "body": "@Test(expected = NullPointerException.class)\n    public void tryToCreateInstanceWithNullPolicyId() {\n        DeletePolicy.of((PolicyId) null, EMPTY_DITTO_HEADERS);\n    }", "signature": "void tryToCreateInstanceWithNullPolicyId()", "full_signature": "@Test(expected = NullPointerException.class) public void tryToCreateInstanceWithNullPolicyId()", "class_method_signature": "DeletePolicyTest.tryToCreateInstanceWithNullPolicyId()", "testcase": true, "constructor": false, "invocations": ["of"]}, "focal_class": {"identifier": "DeletePolicy", "superclass": "extends AbstractCommand<DeletePolicy>", "interfaces": "implements PolicyModifyCommand<DeletePolicy>", "fields": [{"original_string": "public static final String NAME = \"deletePolicy\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"deletePolicy\"", "var_name": "NAME"}, {"original_string": "public static final String TYPE = TYPE_PREFIX + NAME;", "modifier": "public static final", "type": "String", "declarator": "TYPE = TYPE_PREFIX + NAME", "var_name": "TYPE"}, {"original_string": "private final PolicyId policyId;", "modifier": "private final", "type": "PolicyId", "declarator": "policyId", "var_name": "policyId"}], "methods": [{"identifier": "DeletePolicy", "parameters": "(final PolicyId policyId, final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "", "signature": " DeletePolicy(final PolicyId policyId, final DittoHeaders dittoHeaders)", "full_signature": "private  DeletePolicy(final PolicyId policyId, final DittoHeaders dittoHeaders)", "class_method_signature": "DeletePolicy.DeletePolicy(final PolicyId policyId, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final String policyId, final DittoHeaders dittoHeaders)", "modifiers": "@Deprecated public static", "return": "DeletePolicy", "signature": "DeletePolicy of(final String policyId, final DittoHeaders dittoHeaders)", "full_signature": "@Deprecated public static DeletePolicy of(final String policyId, final DittoHeaders dittoHeaders)", "class_method_signature": "DeletePolicy.of(final String policyId, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final PolicyId policyId, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "DeletePolicy", "signature": "DeletePolicy of(final PolicyId policyId, final DittoHeaders dittoHeaders)", "full_signature": "public static DeletePolicy of(final PolicyId policyId, final DittoHeaders dittoHeaders)", "class_method_signature": "DeletePolicy.of(final PolicyId policyId, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final String jsonString, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "DeletePolicy", "signature": "DeletePolicy fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "full_signature": "public static DeletePolicy fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "class_method_signature": "DeletePolicy.fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "DeletePolicy", "signature": "DeletePolicy fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "full_signature": "public static DeletePolicy fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "class_method_signature": "DeletePolicy.fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getEntityId", "parameters": "()", "modifiers": "@Override public", "return": "PolicyId", "signature": "PolicyId getEntityId()", "full_signature": "@Override public PolicyId getEntityId()", "class_method_signature": "DeletePolicy.getEntityId()", "testcase": false, "constructor": false}, {"identifier": "getResourcePath", "parameters": "()", "modifiers": "@Override public", "return": "JsonPointer", "signature": "JsonPointer getResourcePath()", "full_signature": "@Override public JsonPointer getResourcePath()", "class_method_signature": "DeletePolicy.getResourcePath()", "testcase": false, "constructor": false}, {"identifier": "appendPayload", "parameters": "(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "modifiers": "@Override protected", "return": "void", "signature": "void appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "full_signature": "@Override protected void appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "class_method_signature": "DeletePolicy.appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "getCategory", "parameters": "()", "modifiers": "@Override public", "return": "Category", "signature": "Category getCategory()", "full_signature": "@Override public Category getCategory()", "class_method_signature": "DeletePolicy.getCategory()", "testcase": false, "constructor": false}, {"identifier": "setDittoHeaders", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "@Override public", "return": "DeletePolicy", "signature": "DeletePolicy setDittoHeaders(final DittoHeaders dittoHeaders)", "full_signature": "@Override public DeletePolicy setDittoHeaders(final DittoHeaders dittoHeaders)", "class_method_signature": "DeletePolicy.setDittoHeaders(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "canEqual", "parameters": "(@Nullable final Object other)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean canEqual(@Nullable final Object other)", "full_signature": "@Override protected boolean canEqual(@Nullable final Object other)", "class_method_signature": "DeletePolicy.canEqual(@Nullable final Object other)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object obj)", "modifiers": "@SuppressWarnings(\"squid:MethodCyclomaticComplexity\") @Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object obj)", "full_signature": "@SuppressWarnings(\"squid:MethodCyclomaticComplexity\") @Override public boolean equals(@Nullable final Object obj)", "class_method_signature": "DeletePolicy.equals(@Nullable final Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@SuppressWarnings(\"squid:S109\") @Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@SuppressWarnings(\"squid:S109\") @Override public int hashCode()", "class_method_signature": "DeletePolicy.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DeletePolicy.toString()", "testcase": false, "constructor": false}], "file": "signals/commands/policies/src/main/java/org/eclipse/ditto/signals/commands/policies/modify/DeletePolicy.java"}, "focal_method": {"identifier": "of", "parameters": "(final String policyId, final DittoHeaders dittoHeaders)", "modifiers": "@Deprecated public static", "return": "DeletePolicy", "body": "@Deprecated\n    public static DeletePolicy of(final String policyId, final DittoHeaders dittoHeaders) {\n        return of(PolicyId.of(policyId), dittoHeaders);\n    }", "signature": "DeletePolicy of(final String policyId, final DittoHeaders dittoHeaders)", "full_signature": "@Deprecated public static DeletePolicy of(final String policyId, final DittoHeaders dittoHeaders)", "class_method_signature": "DeletePolicy.of(final String policyId, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false, "invocations": ["of", "of"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}