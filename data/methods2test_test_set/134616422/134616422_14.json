{"test_class": {"identifier": "TypeNameValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PACKAGE = \"package\";", "modifier": "private static final", "type": "String", "declarator": "PACKAGE = \"package\"", "var_name": "PACKAGE"}], "file": "conjure-core/src/test/java/com/palantir/conjure/defs/validator/TypeNameValidatorTest.java"}, "test_case": {"identifier": "testInvalidNames", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInvalidNames() {\n        for (String invalid : new String[] {\"a\", \"IFoo\", \"ABC\", \"$Special\", \"snake_case\", \"kebab-case\", \"Camel1B\"}) {\n            assertThatThrownBy(() -> TypeNameValidator.validate(TypeName.of(invalid, PACKAGE)))\n                    .isInstanceOf(IllegalArgumentException.class)\n                    .hasMessage(\n                            \"TypeNames must be a primitive type\"\n                                    + \" [STRING, DATETIME, INTEGER, DOUBLE, SAFELONG, BINARY, ANY, BOOLEAN, UUID, RID,\"\n                                    + \" BEARERTOKEN, UNKNOWN] or match pattern ^[A-Z][a-z0-9]+([A-Z][a-z0-9]+)*$: %s\",\n                            invalid);\n        }\n    }", "signature": "void testInvalidNames()", "full_signature": "@Test public void testInvalidNames()", "class_method_signature": "TypeNameValidatorTest.testInvalidNames()", "testcase": true, "constructor": false, "invocations": ["hasMessage", "isInstanceOf", "assertThatThrownBy", "validate", "of"]}, "focal_class": {"identifier": "TypeNameValidator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern CUSTOM_TYPE_PATTERN = Pattern.compile(\"^[A-Z][a-z0-9]+([A-Z][a-z0-9]+)*$\");", "modifier": "private static final", "type": "Pattern", "declarator": "CUSTOM_TYPE_PATTERN = Pattern.compile(\"^[A-Z][a-z0-9]+([A-Z][a-z0-9]+)*$\")", "var_name": "CUSTOM_TYPE_PATTERN"}, {"original_string": "static final List<String> PRIMITIVE_TYPES =\n            Lists.transform(java.util.Arrays.asList(PrimitiveType.Value.values()), PrimitiveType.Value::name);", "modifier": "static final", "type": "List<String>", "declarator": "PRIMITIVE_TYPES =\n            Lists.transform(java.util.Arrays.asList(PrimitiveType.Value.values()), PrimitiveType.Value::name)", "var_name": "PRIMITIVE_TYPES"}], "methods": [{"identifier": "TypeNameValidator", "parameters": "()", "modifiers": "private", "return": "", "signature": " TypeNameValidator()", "full_signature": "private  TypeNameValidator()", "class_method_signature": "TypeNameValidator.TypeNameValidator()", "testcase": false, "constructor": true}, {"identifier": "validate", "parameters": "(TypeName typeName)", "modifiers": "public static", "return": "void", "signature": "void validate(TypeName typeName)", "full_signature": "public static void validate(TypeName typeName)", "class_method_signature": "TypeNameValidator.validate(TypeName typeName)", "testcase": false, "constructor": false}], "file": "conjure-core/src/main/java/com/palantir/conjure/defs/validator/TypeNameValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(TypeName typeName)", "modifiers": "public static", "return": "void", "body": "public static void validate(TypeName typeName) {\n        Preconditions.checkArgument(\n                CUSTOM_TYPE_PATTERN.matcher(typeName.getName()).matches()\n                        || PRIMITIVE_TYPES.contains(typeName.getName()),\n                \"TypeNames must be a primitive type %s or match pattern %s: %s\",\n                PRIMITIVE_TYPES,\n                CUSTOM_TYPE_PATTERN,\n                typeName.getName());\n    }", "signature": "void validate(TypeName typeName)", "full_signature": "public static void validate(TypeName typeName)", "class_method_signature": "TypeNameValidator.validate(TypeName typeName)", "testcase": false, "constructor": false, "invocations": ["checkArgument", "matches", "matcher", "getName", "contains", "getName", "getName"]}, "repository": {"repo_id": 134616422, "url": "https://github.com/palantir/conjure", "stars": 211, "created": "5/23/2018 7:28:43 PM +00:00", "updates": "2020-01-24T17:51:52+00:00", "fork": "False", "license": "licensed"}}