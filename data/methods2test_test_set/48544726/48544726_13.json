{"test_class": {"identifier": "RepoBranchesMapperTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [{"original_string": "@Inject\n    protected RepoBranchesMapper branchesMapper;", "modifier": "@Inject\n    protected", "type": "RepoBranchesMapper", "declarator": "branchesMapper", "var_name": "branchesMapper"}, {"original_string": "private List<BranchDTO> branchDTOs;", "modifier": "private", "type": "List<BranchDTO>", "declarator": "branchDTOs", "var_name": "branchDTOs"}], "file": "app/src/test/java/com/andrey7mel/stepbystep/presenter/mappers/RepoBranchesMapperTest.java"}, "test_case": {"identifier": "testCall", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCall() throws Exception {\n        List<Branch> branchList = branchesMapper.call(branchDTOs);\n\n        assertEquals(3, branchList.size());\n        assertEquals(\"QuickStart\", branchList.get(0).getName());\n        assertEquals(\"gh-pages\", branchList.get(1).getName());\n        assertEquals(\"master\", branchList.get(2).getName());\n    }", "signature": "void testCall()", "full_signature": "@Test public void testCall()", "class_method_signature": "RepoBranchesMapperTest.testCall()", "testcase": true, "constructor": false, "invocations": ["call", "assertEquals", "size", "assertEquals", "getName", "get", "assertEquals", "getName", "get", "assertEquals", "getName", "get"]}, "focal_class": {"identifier": "RepoBranchesMapper", "superclass": "", "interfaces": "implements Func1<List<BranchDTO>, List<Branch>>", "fields": [], "methods": [{"identifier": "RepoBranchesMapper", "parameters": "()", "modifiers": "@Inject public", "return": "", "signature": " RepoBranchesMapper()", "full_signature": "@Inject public  RepoBranchesMapper()", "class_method_signature": "RepoBranchesMapper.RepoBranchesMapper()", "testcase": false, "constructor": true}, {"identifier": "call", "parameters": "(List<BranchDTO> branchDTOs)", "modifiers": "@Override public", "return": "List<Branch>", "signature": "List<Branch> call(List<BranchDTO> branchDTOs)", "full_signature": "@Override public List<Branch> call(List<BranchDTO> branchDTOs)", "class_method_signature": "RepoBranchesMapper.call(List<BranchDTO> branchDTOs)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/andrey7mel/stepbystep/presenter/mappers/RepoBranchesMapper.java"}, "focal_method": {"identifier": "call", "parameters": "(List<BranchDTO> branchDTOs)", "modifiers": "@Override public", "return": "List<Branch>", "body": "@Override\n    public List<Branch> call(List<BranchDTO> branchDTOs) {\n        if (branchDTOs == null) {\n            return null;\n        }\n        List<Branch> branches = Observable.from(branchDTOs)\n                .map(branchDTO -> new Branch(branchDTO.getName()))\n                .toList()\n                .toBlocking()\n                .first();\n        return branches;\n    }", "signature": "List<Branch> call(List<BranchDTO> branchDTOs)", "full_signature": "@Override public List<Branch> call(List<BranchDTO> branchDTOs)", "class_method_signature": "RepoBranchesMapper.call(List<BranchDTO> branchDTOs)", "testcase": false, "constructor": false, "invocations": ["first", "toBlocking", "toList", "map", "from", "getName"]}, "repository": {"repo_id": 48544726, "url": "https://github.com/andrey7mel/android-step-by-step", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 130, "size": 313, "license": "licensed"}}