{"test_class": {"identifier": "JwtTest", "superclass": "", "interfaces": "", "fields": [], "file": "java_src/src/test/java/com/google/crypto/tink/jwt/JwtTest.java"}, "test_case": {"identifier": "getMultipleAudiences_success", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getMultipleAudiences_success() throws Exception {\n    JSONObject payload = new JSONObject();\n    JSONArray audiences = new JSONArray();\n    audiences.put(\"foo\");\n    audiences.put(\"bar\");\n    payload.put(JwtNames.CLAIM_AUDIENCE, audiences);\n    Jwt token = new Jwt(new JSONObject(), payload, Clock.systemUTC(), Duration.ZERO);\n\n    assertThat(token.getAudiences()).containsExactly(\"foo\", \"bar\");\n  }", "signature": "void getMultipleAudiences_success()", "full_signature": "@Test public void getMultipleAudiences_success()", "class_method_signature": "JwtTest.getMultipleAudiences_success()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "systemUTC", "containsExactly", "assertThat", "getAudiences"]}, "focal_class": {"identifier": "Jwt", "superclass": "", "interfaces": "", "fields": [{"original_string": "@SuppressWarnings(\"Immutable\") // We do not mutate the header.\n  private final JSONObject header;", "modifier": "@SuppressWarnings(\"Immutable\") // We do not mutate the header.\n  private final", "type": "JSONObject", "declarator": "header", "var_name": "header"}, {"original_string": "@SuppressWarnings(\"Immutable\") // We do not mutate the payload.\n  private final JSONObject payload;", "modifier": "@SuppressWarnings(\"Immutable\") // We do not mutate the payload.\n  private final", "type": "JSONObject", "declarator": "payload", "var_name": "payload"}, {"original_string": "@SuppressWarnings(\"Immutable\") // We do not mutate the clock.\n  private final Clock clock;", "modifier": "@SuppressWarnings(\"Immutable\") // We do not mutate the clock.\n  private final", "type": "Clock", "declarator": "clock", "var_name": "clock"}, {"original_string": "private final Duration clockSkew;", "modifier": "private final", "type": "Duration", "declarator": "clockSkew", "var_name": "clockSkew"}], "methods": [{"identifier": "Jwt", "parameters": "(JSONObject header, JSONObject payload, Clock clock, Duration clockSkew)", "modifiers": "", "return": "", "signature": " Jwt(JSONObject header, JSONObject payload, Clock clock, Duration clockSkew)", "full_signature": "  Jwt(JSONObject header, JSONObject payload, Clock clock, Duration clockSkew)", "class_method_signature": "Jwt.Jwt(JSONObject header, JSONObject payload, Clock clock, Duration clockSkew)", "testcase": false, "constructor": true}, {"identifier": "getHeader", "parameters": "(String name)", "modifiers": "", "return": "String", "signature": "String getHeader(String name)", "full_signature": " String getHeader(String name)", "class_method_signature": "Jwt.getHeader(String name)", "testcase": false, "constructor": false}, {"identifier": "getIssuer", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIssuer()", "full_signature": "public String getIssuer()", "class_method_signature": "Jwt.getIssuer()", "testcase": false, "constructor": false}, {"identifier": "getSubject", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSubject()", "full_signature": "public String getSubject()", "class_method_signature": "Jwt.getSubject()", "testcase": false, "constructor": false}, {"identifier": "getAudiences", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getAudiences()", "full_signature": "public List<String> getAudiences()", "class_method_signature": "Jwt.getAudiences()", "testcase": false, "constructor": false}, {"identifier": "getJwtId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getJwtId()", "full_signature": "public String getJwtId()", "class_method_signature": "Jwt.getJwtId()", "testcase": false, "constructor": false}, {"identifier": "getExpiration", "parameters": "()", "modifiers": "public", "return": "Instant", "signature": "Instant getExpiration()", "full_signature": "public Instant getExpiration()", "class_method_signature": "Jwt.getExpiration()", "testcase": false, "constructor": false}, {"identifier": "getNotBefore", "parameters": "()", "modifiers": "public", "return": "Instant", "signature": "Instant getNotBefore()", "full_signature": "public Instant getNotBefore()", "class_method_signature": "Jwt.getNotBefore()", "testcase": false, "constructor": false}, {"identifier": "getIssuedAt", "parameters": "()", "modifiers": "public", "return": "Instant", "signature": "Instant getIssuedAt()", "full_signature": "public Instant getIssuedAt()", "class_method_signature": "Jwt.getIssuedAt()", "testcase": false, "constructor": false}, {"identifier": "getClaim", "parameters": "(String name)", "modifiers": "public", "return": "Object", "signature": "Object getClaim(String name)", "full_signature": "public Object getClaim(String name)", "class_method_signature": "Jwt.getClaim(String name)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getType()", "full_signature": "public String getType()", "class_method_signature": "Jwt.getType()", "testcase": false, "constructor": false}, {"identifier": "getContentType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getContentType()", "full_signature": "public String getContentType()", "class_method_signature": "Jwt.getContentType()", "testcase": false, "constructor": false}, {"identifier": "getAlgorithm", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAlgorithm()", "full_signature": "public String getAlgorithm()", "class_method_signature": "Jwt.getAlgorithm()", "testcase": false, "constructor": false}, {"identifier": "getKeyId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getKeyId()", "full_signature": "public String getKeyId()", "class_method_signature": "Jwt.getKeyId()", "testcase": false, "constructor": false}, {"identifier": "getInstant", "parameters": "(String name)", "modifiers": "private", "return": "Instant", "signature": "Instant getInstant(String name)", "full_signature": "private Instant getInstant(String name)", "class_method_signature": "Jwt.getInstant(String name)", "testcase": false, "constructor": false}, {"identifier": "validateTimestampClaims", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void validateTimestampClaims()", "full_signature": "private void validateTimestampClaims()", "class_method_signature": "Jwt.validateTimestampClaims()", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/jwt/Jwt.java"}, "focal_method": {"identifier": "getAudiences", "parameters": "()", "modifiers": "public", "return": "List<String>", "body": "public List<String> getAudiences() throws JwtExpiredException, JwtNotBeforeException {\n    JSONArray audiences = (JSONArray) getClaim(JwtNames.CLAIM_AUDIENCE);\n    if (audiences == null) {\n      return null;\n    }\n\n    List<String> result = new ArrayList<>(audiences.length());\n    for (int i = 0; i < audiences.length(); i++) {\n      try {\n        result.add(audiences.getString(i));\n      } catch (JSONException ex) {\n        throw new IllegalStateException(\"invalid audience\", ex);\n      }\n    }\n\n    return Collections.unmodifiableList(result);\n  }", "signature": "List<String> getAudiences()", "full_signature": "public List<String> getAudiences()", "class_method_signature": "Jwt.getAudiences()", "testcase": false, "constructor": false, "invocations": ["getClaim", "length", "length", "add", "getString", "unmodifiableList"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}