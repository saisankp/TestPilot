{"test_class": {"identifier": "MulticastExchangeNetworkerTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-remoting/dubbo-remoting-p2p/src/test/java/org/apache/dubbo/remoting/p2p/exchange/support/MulticastExchangeNetworkerTest.java"}, "test_case": {"identifier": "testJoin", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testJoin() throws RemotingException, InterruptedException {\n        final String groupURL = \"multicast://224.5.6.7:1234\";\n\n        MulticastExchangeNetworker multicastExchangeNetworker = new MulticastExchangeNetworker();\n\n        final CountDownLatch countDownLatch = new CountDownLatch(1);\n        Peer peer1 = multicastExchangeNetworker.lookup(URL.valueOf(groupURL))\n                .join(URL.valueOf(\"exchange://0.0.0.0:\" + NetUtils.getAvailablePort() + \"?exchanger=header\"), new ExchangeHandlerAdapter() {\n                    @Override\n                    public CompletableFuture<Object> reply(ExchangeChannel channel, Object msg) throws RemotingException {\n                        countDownLatch.countDown();\n                        return super.reply(channel, msg);\n                    }\n                });\n        Peer peer2 = multicastExchangeNetworker.lookup(URL.valueOf(groupURL))\n                .join(URL.valueOf(\"exchange://0.0.0.0:\" + NetUtils.getAvailablePort() + \"?exchanger=header\"), mock(ExchangeHandler.class));\n\n        while (true) {\n            for (Channel channel : peer1.getChannels()) {\n                channel.send(\"hello multicast exchange network!\");\n            }\n            TimeUnit.MILLISECONDS.sleep(50);\n\n            long count = countDownLatch.getCount();\n            if (count > 0) {\n                break;\n            }\n        }\n\n        Group lookup = Networkers.lookup(groupURL);\n        assertThat(lookup, not(nullValue()));\n\n        assertThat(peer1, instanceOf(ExchangeServerPeer.class));\n\n        peer1.close();\n        peer2.close();\n    }", "signature": "void testJoin()", "full_signature": "@Test public void testJoin()", "class_method_signature": "MulticastExchangeNetworkerTest.testJoin()", "testcase": true, "constructor": false, "invocations": ["join", "lookup", "valueOf", "valueOf", "getAvailablePort", "countDown", "reply", "join", "lookup", "valueOf", "valueOf", "getAvailablePort", "mock", "getChannels", "send", "sleep", "getCount", "lookup", "assertThat", "not", "nullValue", "assertThat", "instanceOf", "close", "close"]}, "focal_class": {"identifier": "MulticastExchangeNetworker", "superclass": "", "interfaces": "implements ExchangeNetworker", "fields": [], "methods": [{"identifier": "lookup", "parameters": "(URL url)", "modifiers": "@Override public", "return": "ExchangeGroup", "signature": "ExchangeGroup lookup(URL url)", "full_signature": "@Override public ExchangeGroup lookup(URL url)", "class_method_signature": "MulticastExchangeNetworker.lookup(URL url)", "testcase": false, "constructor": false}], "file": "dubbo-remoting/dubbo-remoting-p2p/src/main/java/org/apache/dubbo/remoting/p2p/exchange/support/MulticastExchangeNetworker.java"}, "focal_method": {"identifier": "lookup", "parameters": "(URL url)", "modifiers": "@Override public", "return": "ExchangeGroup", "body": "@Override\n    public ExchangeGroup lookup(URL url) throws RemotingException {\n        return new MulticastExchangeGroup(url);\n    }", "signature": "ExchangeGroup lookup(URL url)", "full_signature": "@Override public ExchangeGroup lookup(URL url)", "class_method_signature": "MulticastExchangeNetworker.lookup(URL url)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}