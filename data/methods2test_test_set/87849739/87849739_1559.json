{"test_class": {"identifier": "ExistsNodeTest", "superclass": "", "interfaces": "", "fields": [], "file": "model/rql/src/test/java/org/eclipse/ditto/model/rql/predicates/ast/ExistsNodeTest.java"}, "test_case": {"identifier": "constructorSuccess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void constructorSuccess() {\n        final ExistsNode existsNode = new ExistsNode(\"propertyName\");\n        assertThat(existsNode.getProperty()).isEqualTo(\"propertyName\");\n    }", "signature": "void constructorSuccess()", "full_signature": "@Test public void constructorSuccess()", "class_method_signature": "ExistsNodeTest.constructorSuccess()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "getProperty"]}, "focal_class": {"identifier": "ExistsNode", "superclass": "", "interfaces": "implements Node", "fields": [{"original_string": "private final String property;", "modifier": "private final", "type": "String", "declarator": "property", "var_name": "property"}], "methods": [{"identifier": "ExistsNode", "parameters": "(final String property)", "modifiers": "public", "return": "", "signature": " ExistsNode(final String property)", "full_signature": "public  ExistsNode(final String property)", "class_method_signature": "ExistsNode.ExistsNode(final String property)", "testcase": false, "constructor": true}, {"identifier": "getProperty", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getProperty()", "full_signature": "public String getProperty()", "class_method_signature": "ExistsNode.getProperty()", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(PredicateVisitor predicateVisitor)", "modifiers": "@Override public", "return": "void", "signature": "void accept(PredicateVisitor predicateVisitor)", "full_signature": "@Override public void accept(PredicateVisitor predicateVisitor)", "class_method_signature": "ExistsNode.accept(PredicateVisitor predicateVisitor)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override @SuppressWarnings(\"squid:MethodCyclomaticComplexity\") public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override @SuppressWarnings(\"squid:MethodCyclomaticComplexity\") public boolean equals(final Object o)", "class_method_signature": "ExistsNode.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override @SuppressWarnings(\"squid:S109\") public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override @SuppressWarnings(\"squid:S109\") public int hashCode()", "class_method_signature": "ExistsNode.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ExistsNode.toString()", "testcase": false, "constructor": false}], "file": "model/rql/src/main/java/org/eclipse/ditto/model/rql/predicates/ast/ExistsNode.java"}, "focal_method": {"identifier": "getProperty", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getProperty() {\n        return property;\n    }", "signature": "String getProperty()", "full_signature": "public String getProperty()", "class_method_signature": "ExistsNode.getProperty()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}