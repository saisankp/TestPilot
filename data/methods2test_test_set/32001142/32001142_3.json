{"test_class": {"identifier": "XLogUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final List<String> CLASS_NAMES = new ArrayList<String>();", "modifier": "static final", "type": "List<String>", "declarator": "CLASS_NAMES = new ArrayList<String>()", "var_name": "CLASS_NAMES"}, {"original_string": "static final List<XLogMethod> XLOG_METHODS = new ArrayList<XLogMethod>();", "modifier": "static final", "type": "List<XLogMethod>", "declarator": "XLOG_METHODS = new ArrayList<XLogMethod>()", "var_name": "XLOG_METHODS"}], "file": "xlog-base/src/test/java/com/promegu/xlog/base/XLogUtilsTest.java"}, "test_case": {"identifier": "testGetPkgPrefixesForCoarseMatch3", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetPkgPrefixesForCoarseMatch3() {\n        List<String> expected = new ArrayList<String>();\n        expected.add(\"com.promegu\");\n        expected.add(\"java.lang\");\n        expected.add(\"retrofit\");\n        assertThat(XLogUtils.getPkgPrefixesForCoarseMatch(CLASS_NAMES, 2), is(expected));\n\n        expected.clear();\n        expected.add(\"com.promegu.xlog\");\n        expected.add(\"com.promegu.other\");\n        expected.add(\"java.lang.Object\");\n        expected.add(\"java.lang.test\");\n        expected.add(\"retrofit\");\n        //CHECKSTYLE:OFF\n        assertThat(XLogUtils.getPkgPrefixesForCoarseMatch(CLASS_NAMES, 3), is(expected));\n        //CHECKSTYLE:ON\n    }", "signature": "void testGetPkgPrefixesForCoarseMatch3()", "full_signature": "@Test public void testGetPkgPrefixesForCoarseMatch3()", "class_method_signature": "XLogUtilsTest.testGetPkgPrefixesForCoarseMatch3()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "assertThat", "getPkgPrefixesForCoarseMatch", "is", "clear", "add", "add", "add", "add", "add", "assertThat", "getPkgPrefixesForCoarseMatch", "is"]}, "focal_class": {"identifier": "XLogUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int TYPE_METHOD = 0;", "modifier": "public static final", "type": "int", "declarator": "TYPE_METHOD = 0", "var_name": "TYPE_METHOD"}, {"original_string": "public static final int TYPE_CONSTRUCTOR = 1;", "modifier": "public static final", "type": "int", "declarator": "TYPE_CONSTRUCTOR = 1", "var_name": "TYPE_CONSTRUCTOR"}, {"original_string": "public static final String PKG_NAME = \"com.promegu.xlogger\";", "modifier": "public static final", "type": "String", "declarator": "PKG_NAME = \"com.promegu.xlogger\"", "var_name": "PKG_NAME"}, {"original_string": "public static final String CLASS_NAME = \"XLoggerMethods\";", "modifier": "public static final", "type": "String", "declarator": "CLASS_NAME = \"XLoggerMethods\"", "var_name": "CLASS_NAME"}, {"original_string": "public static final String FIELD_NAME_METHODS = \"METHODS_TO_LOG\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_NAME_METHODS = \"METHODS_TO_LOG\"", "var_name": "FIELD_NAME_METHODS"}, {"original_string": "public static final String FIELD_NAME_CLASSES = \"CLASSES_TO_LOG\";", "modifier": "public static final", "type": "String", "declarator": "FIELD_NAME_CLASSES = \"CLASSES_TO_LOG\"", "var_name": "FIELD_NAME_CLASSES"}], "methods": [{"identifier": "XLogUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " XLogUtils()", "full_signature": "private  XLogUtils()", "class_method_signature": "XLogUtils.XLogUtils()", "testcase": false, "constructor": true}, {"identifier": "getRemainingClassNames", "parameters": "(Set<Class<?>> classes,\n            Set<String> classNames)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> getRemainingClassNames(Set<Class<?>> classes,\n            Set<String> classNames)", "full_signature": "public static Set<String> getRemainingClassNames(Set<Class<?>> classes,\n            Set<String> classNames)", "class_method_signature": "XLogUtils.getRemainingClassNames(Set<Class<?>> classes,\n            Set<String> classNames)", "testcase": false, "constructor": false}, {"identifier": "shouldLogMember", "parameters": "(List<XLogMethod> xLogMethods, Member member)", "modifiers": "public static", "return": "boolean", "signature": "boolean shouldLogMember(List<XLogMethod> xLogMethods, Member member)", "full_signature": "public static boolean shouldLogMember(List<XLogMethod> xLogMethods, Member member)", "class_method_signature": "XLogUtils.shouldLogMember(List<XLogMethod> xLogMethods, Member member)", "testcase": false, "constructor": false}, {"identifier": "filterResult", "parameters": "(String className, XLogSetting xLogSetting)", "modifiers": "public static", "return": "boolean", "signature": "boolean filterResult(String className, XLogSetting xLogSetting)", "full_signature": "public static boolean filterResult(String className, XLogSetting xLogSetting)", "class_method_signature": "XLogUtils.filterResult(String className, XLogSetting xLogSetting)", "testcase": false, "constructor": false}, {"identifier": "getPkgPrefixesForCoarseMatch", "parameters": "(List<String> classNames,\n            int pkgSectionSize)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getPkgPrefixesForCoarseMatch(List<String> classNames,\n            int pkgSectionSize)", "full_signature": "public static List<String> getPkgPrefixesForCoarseMatch(List<String> classNames,\n            int pkgSectionSize)", "class_method_signature": "XLogUtils.getPkgPrefixesForCoarseMatch(List<String> classNames,\n            int pkgSectionSize)", "testcase": false, "constructor": false}, {"identifier": "getPkgPrefixesForCoarseMatchXLogMethods", "parameters": "(List<XLogMethod> xLogMethods,\n            int pkgSectionSize)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getPkgPrefixesForCoarseMatchXLogMethods(List<XLogMethod> xLogMethods,\n            int pkgSectionSize)", "full_signature": "public static List<String> getPkgPrefixesForCoarseMatchXLogMethods(List<XLogMethod> xLogMethods,\n            int pkgSectionSize)", "class_method_signature": "XLogUtils.getPkgPrefixesForCoarseMatchXLogMethods(List<XLogMethod> xLogMethods,\n            int pkgSectionSize)", "testcase": false, "constructor": false}, {"identifier": "getClassNameSectionSize", "parameters": "(String className)", "modifiers": "static", "return": "int", "signature": "int getClassNameSectionSize(String className)", "full_signature": "static int getClassNameSectionSize(String className)", "class_method_signature": "XLogUtils.getClassNameSectionSize(String className)", "testcase": false, "constructor": false}, {"identifier": "getClassNameSection", "parameters": "(String className, int section)", "modifiers": "static", "return": "String", "signature": "String getClassNameSection(String className, int section)", "full_signature": "static String getClassNameSection(String className, int section)", "class_method_signature": "XLogUtils.getClassNameSection(String className, int section)", "testcase": false, "constructor": false}], "file": "xlog-base/src/main/java/com/promegu/xlog/base/XLogUtils.java"}, "focal_method": {"identifier": "getPkgPrefixesForCoarseMatch", "parameters": "(List<String> classNames,\n            int pkgSectionSize)", "modifiers": "public static", "return": "List<String>", "body": "public static List<String> getPkgPrefixesForCoarseMatch(List<String> classNames,\n            int pkgSectionSize) {\n        if (pkgSectionSize <= 0) {\n            return classNames;\n        }\n        List<String> result = new ArrayList<String>();\n        if (classNames != null) {\n            for (String className : classNames) {\n                if (getClassNameSectionSize(className) < pkgSectionSize) {\n                    if (!result.contains(className)) {\n                        result.add(className);\n                    }\n                } else {\n                    String prefix = getClassNameSection(className, pkgSectionSize);\n                    if (!result.contains(prefix)) {\n                        result.add(prefix);\n                    }\n                }\n            }\n        }\n\n        Set<String> names = new HashSet<String>(result);\n        Iterator<String> iterator = result.iterator();\n        while (iterator.hasNext()) {\n            String className = iterator.next();\n            for (String s : names) {\n                if (className.startsWith(s) && !className.equals(s)) {\n                    // there is a B in result list which is the prefix of A, should remove A\n                    iterator.remove();\n                }\n            }\n        }\n\n        return result;\n    }", "signature": "List<String> getPkgPrefixesForCoarseMatch(List<String> classNames,\n            int pkgSectionSize)", "full_signature": "public static List<String> getPkgPrefixesForCoarseMatch(List<String> classNames,\n            int pkgSectionSize)", "class_method_signature": "XLogUtils.getPkgPrefixesForCoarseMatch(List<String> classNames,\n            int pkgSectionSize)", "testcase": false, "constructor": false, "invocations": ["getClassNameSectionSize", "contains", "add", "getClassNameSection", "contains", "add", "iterator", "hasNext", "next", "startsWith", "equals", "remove"]}, "repository": {"repo_id": 32001142, "url": "https://github.com/promeG/XLog", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 309, "size": 790, "license": "licensed"}}