{"test_class": {"identifier": "DefaultDirObjectFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Context contextMock;", "modifier": "private", "type": "Context", "declarator": "contextMock", "var_name": "contextMock"}, {"original_string": "private static final Name DN = LdapUtils.newLdapName(\"ou=some unit, dc=jayway, dc=se\");", "modifier": "private static final", "type": "Name", "declarator": "DN = LdapUtils.newLdapName(\"ou=some unit, dc=jayway, dc=se\")", "var_name": "DN"}, {"original_string": "private static final String DN_STRING = \"ou=some unit, dc=jayway, dc=se\";", "modifier": "private static final", "type": "String", "declarator": "DN_STRING = \"ou=some unit, dc=jayway, dc=se\"", "var_name": "DN_STRING"}, {"original_string": "private DefaultDirObjectFactory tested;", "modifier": "private", "type": "DefaultDirObjectFactory", "declarator": "tested", "var_name": "tested"}, {"original_string": "private Context contextMock2;", "modifier": "private", "type": "Context", "declarator": "contextMock2", "var_name": "contextMock2"}], "file": "core/src/test/java/org/springframework/ldap/core/support/DefaultDirObjectFactoryTest.java"}, "test_case": {"identifier": "testConstructAdapterFromName_EmptyName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testConstructAdapterFromName_EmptyName() throws InvalidNameException {\n\t\tCompositeName name = new CompositeName();\n\t\tname.add(\"ldap://localhost:389\");\n\t\tDefaultDirObjectFactory tested = new DefaultDirObjectFactory();\n\t\tDirContextAdapter result = tested.constructAdapterFromName(new BasicAttributes(), name, \"\");\n\n\t\tassertThat(result.getDn().toString()).isEqualTo(\"\");\n\t\tassertThat(result.getReferralUrl().toString()).isEqualTo(\"ldap://localhost:389\");\n\t}", "signature": "void testConstructAdapterFromName_EmptyName()", "full_signature": "@Test public void testConstructAdapterFromName_EmptyName()", "class_method_signature": "DefaultDirObjectFactoryTest.testConstructAdapterFromName_EmptyName()", "testcase": true, "constructor": false, "invocations": ["add", "constructAdapterFromName", "isEqualTo", "assertThat", "toString", "getDn", "isEqualTo", "assertThat", "toString", "getReferralUrl"]}, "focal_class": {"identifier": "DefaultDirObjectFactory", "superclass": "", "interfaces": "implements DirObjectFactory", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(DefaultDirObjectFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(DefaultDirObjectFactory.class)", "var_name": "LOG"}, {"original_string": "public static final String JNDI_ENV_BASE_PATH_KEY = \"org.springframework.ldap.base.path\";", "modifier": "public static final", "type": "String", "declarator": "JNDI_ENV_BASE_PATH_KEY = \"org.springframework.ldap.base.path\"", "var_name": "JNDI_ENV_BASE_PATH_KEY"}, {"original_string": "private static final String LDAP_PROTOCOL_PREFIX = \"ldap://\";", "modifier": "private static final", "type": "String", "declarator": "LDAP_PROTOCOL_PREFIX = \"ldap://\"", "var_name": "LDAP_PROTOCOL_PREFIX"}, {"original_string": "private static final String LDAPS_PROTOCOL_PREFIX = \"ldaps://\";", "modifier": "private static final", "type": "String", "declarator": "LDAPS_PROTOCOL_PREFIX = \"ldaps://\"", "var_name": "LDAPS_PROTOCOL_PREFIX"}], "methods": [{"identifier": "getObjectInstance", "parameters": "(\n            Object obj,\n            Name name,\n            Context nameCtx,\n            Hashtable<?, ?> environment,\n            Attributes attrs)", "modifiers": "@Override public final", "return": "Object", "signature": "Object getObjectInstance(\n            Object obj,\n            Name name,\n            Context nameCtx,\n            Hashtable<?, ?> environment,\n            Attributes attrs)", "full_signature": "@Override public final Object getObjectInstance(\n            Object obj,\n            Name name,\n            Context nameCtx,\n            Hashtable<?, ?> environment,\n            Attributes attrs)", "class_method_signature": "DefaultDirObjectFactory.getObjectInstance(\n            Object obj,\n            Name name,\n            Context nameCtx,\n            Hashtable<?, ?> environment,\n            Attributes attrs)", "testcase": false, "constructor": false}, {"identifier": "constructAdapterFromName", "parameters": "(Attributes attrs, Name name, String nameInNamespace)", "modifiers": "", "return": "DirContextAdapter", "signature": "DirContextAdapter constructAdapterFromName(Attributes attrs, Name name, String nameInNamespace)", "full_signature": " DirContextAdapter constructAdapterFromName(Attributes attrs, Name name, String nameInNamespace)", "class_method_signature": "DefaultDirObjectFactory.constructAdapterFromName(Attributes attrs, Name name, String nameInNamespace)", "testcase": false, "constructor": false}, {"identifier": "getObjectInstance", "parameters": "(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment)", "modifiers": "@Override public", "return": "Object", "signature": "Object getObjectInstance(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment)", "full_signature": "@Override public Object getObjectInstance(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment)", "class_method_signature": "DefaultDirObjectFactory.getObjectInstance(Object obj, Name name, Context nameCtx, Hashtable<?, ?> environment)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/core/support/DefaultDirObjectFactory.java"}, "focal_method": {"identifier": "constructAdapterFromName", "parameters": "(Attributes attrs, Name name, String nameInNamespace)", "modifiers": "", "return": "DirContextAdapter", "body": "DirContextAdapter constructAdapterFromName(Attributes attrs, Name name, String nameInNamespace) {\n\t\tString nameString;\n\t\tString referralUrl = \"\";\n\n\t\tif (name instanceof CompositeName) {\n\t\t\t// Which it most certainly will be, and therein lies the\n\t\t\t// problem. CompositeName.toString() completely screws up the\n\t\t\t// formatting\n\t\t\t// in some cases, particularly when backslashes are involved.\n\t\t\tnameString = LdapUtils\n\t\t\t\t\t.convertCompositeNameToString((CompositeName) name);\n\t\t}\n\t\telse {\n\t\t\tLOG\n\t\t\t\t\t.warn(\"Expecting a CompositeName as input to getObjectInstance but received a '\"\n                            + name.getClass().toString()\n                            + \"' - using toString and proceeding with undefined results\");\n\t\t\tnameString = name.toString();\n\t\t}\n\n\t\tif (nameString.startsWith(LDAP_PROTOCOL_PREFIX) || nameString.startsWith(LDAPS_PROTOCOL_PREFIX)) {\n\t\t\tif (LOG.isDebugEnabled()) {\n\t\t\t\tLOG.debug(\"Received name '\" + nameString + \"' contains protocol delimiter; indicating a referral.\"\n\t\t\t\t\t\t+ \"Stripping protocol and address info to enable construction of a proper LdapName\");\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tURI url = new URI(nameString);\n\t\t\t\tString pathString = url.getPath();\n\t\t\t\treferralUrl = nameString.substring(0, nameString.length() - pathString.length());\n\n\t\t\t\tif (StringUtils.hasLength(pathString) && pathString.startsWith(\"/\")) {\n\t\t\t\t\t// We don't want any slash in the beginning of the\n\t\t\t\t\t// Distinguished Name.\n\t\t\t\t\tpathString = pathString.substring(1);\n\t\t\t\t}\n\n\t\t\t\tnameString = pathString;\n\t\t\t}\n\t\t\tcatch (URISyntaxException e) {\n\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\"Supplied name starts with protocol prefix indicating a referral,\"\n\t\t\t\t\t\t\t\t+ \" but is not possible to parse to an URI\",\n\t\t\t\t\t\te);\n\t\t\t}\n\t\t\tif (LOG.isDebugEnabled()) {\n\t\t\t\tLOG.debug(\"Resulting name after removal of referral information: '\" + nameString + \"'\");\n\t\t\t}\n\t\t}\n\n        DirContextAdapter dirContextAdapter = new DirContextAdapter(attrs, LdapUtils.newLdapName(nameString),\n                LdapUtils.newLdapName(nameInNamespace), referralUrl);\n        dirContextAdapter.setUpdateMode(true);\n        return dirContextAdapter;\n    }", "signature": "DirContextAdapter constructAdapterFromName(Attributes attrs, Name name, String nameInNamespace)", "full_signature": " DirContextAdapter constructAdapterFromName(Attributes attrs, Name name, String nameInNamespace)", "class_method_signature": "DefaultDirObjectFactory.constructAdapterFromName(Attributes attrs, Name name, String nameInNamespace)", "testcase": false, "constructor": false, "invocations": ["convertCompositeNameToString", "warn", "toString", "getClass", "toString", "startsWith", "startsWith", "isDebugEnabled", "debug", "getPath", "substring", "length", "length", "hasLength", "startsWith", "substring", "isDebugEnabled", "debug", "newLdapName", "newLdapName", "setUpdateMode"]}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}