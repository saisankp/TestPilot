{"test_class": {"identifier": "PropertyStackTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String sample = \"sample\";", "modifier": "public static final", "type": "String", "declarator": "sample = \"sample\"", "var_name": "sample"}, {"original_string": "public static final String sampleValue = \"B${bonsoirValue}XX${bonjourValue}Z\";", "modifier": "public static final", "type": "String", "declarator": "sampleValue = \"B${bonsoirValue}XX${bonjourValue}Z\"", "var_name": "sampleValue"}, {"original_string": "public static final String sampleCorrectResult = \"BBonSOIRXXBonjourZ\";", "modifier": "public static final", "type": "String", "declarator": "sampleCorrectResult = \"BBonSOIRXXBonjourZ\"", "var_name": "sampleCorrectResult"}, {"original_string": "public static final String bonjour = \"bonjourValue\";", "modifier": "public static final", "type": "String", "declarator": "bonjour = \"bonjourValue\"", "var_name": "bonjour"}, {"original_string": "public static final String bonjourResult = \"Bonjour\";", "modifier": "public static final", "type": "String", "declarator": "bonjourResult = \"Bonjour\"", "var_name": "bonjourResult"}, {"original_string": "public static final String bonsoir = \"bonsoirValue\";", "modifier": "public static final", "type": "String", "declarator": "bonsoir = \"bonsoirValue\"", "var_name": "bonsoir"}, {"original_string": "public static final String bonsoirResult = \"BonSOIR\";", "modifier": "public static final", "type": "String", "declarator": "bonsoirResult = \"BonSOIR\"", "var_name": "bonsoirResult"}, {"original_string": "PropertyStack propertyStack;", "modifier": "", "type": "PropertyStack", "declarator": "propertyStack", "var_name": "propertyStack"}], "file": "minuteKernel/src/test/java/net/sf/minuteProject/handler/property/PropertyStackTest.java"}, "test_case": {"identifier": "testPropertyStackParser", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testPropertyStackParser () {\n\t\tString input = \"test${helloValue}\";\n\t\tString correctResult = \"testHello\";\n\t\tString result = propertyStack.resolvePropertyValue (input);\n\t\tAssert.assertTrue (result.equals(correctResult));\n\t\ttestPropertyStackParser(\"${helloValue}${bonjourValue}\", \"HelloBonjour\");\n\t\ttestPropertyStackParser(\"B${bonsoirValue}XX${bonjourValue}Z\", \"BBonSOIRXXBonjourZ\");\n\t}", "signature": "void testPropertyStackParser()", "full_signature": "@Test public void testPropertyStackParser()", "class_method_signature": "PropertyStackTest.testPropertyStackParser()", "testcase": true, "constructor": false, "invocations": ["resolvePropertyValue", "assertTrue", "equals", "testPropertyStackParser", "testPropertyStackParser"]}, "focal_class": {"identifier": "PropertyStack", "superclass": "", "interfaces": "", "fields": [{"original_string": "Properties properties;", "modifier": "", "type": "Properties", "declarator": "properties", "var_name": "properties"}], "methods": [{"identifier": "PropertyStack", "parameters": "()", "modifiers": "", "return": "", "signature": " PropertyStack()", "full_signature": "  PropertyStack()", "class_method_signature": "PropertyStack.PropertyStack()", "testcase": false, "constructor": true}, {"identifier": "getProperties", "parameters": "()", "modifiers": "public", "return": "Properties", "signature": "Properties getProperties()", "full_signature": "public Properties getProperties()", "class_method_signature": "PropertyStack.getProperties()", "testcase": false, "constructor": false}, {"identifier": "setProperties", "parameters": "(Properties properties)", "modifiers": "public", "return": "void", "signature": "void setProperties(Properties properties)", "full_signature": "public void setProperties(Properties properties)", "class_method_signature": "PropertyStack.setProperties(Properties properties)", "testcase": false, "constructor": false}, {"identifier": "addProperty", "parameters": "(String name, String value)", "modifiers": "public", "return": "void", "signature": "void addProperty(String name, String value)", "full_signature": "public void addProperty(String name, String value)", "class_method_signature": "PropertyStack.addProperty(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "resolvePropertyValue", "parameters": "(String value)", "modifiers": "public", "return": "String", "signature": "String resolvePropertyValue(String value)", "full_signature": "public String resolvePropertyValue(String value)", "class_method_signature": "PropertyStack.resolvePropertyValue(String value)", "testcase": false, "constructor": false}, {"identifier": "resolvePropertyValue", "parameters": "(List<Chunk> chunks)", "modifiers": "private", "return": "String", "signature": "String resolvePropertyValue(List<Chunk> chunks)", "full_signature": "private String resolvePropertyValue(List<Chunk> chunks)", "class_method_signature": "PropertyStack.resolvePropertyValue(List<Chunk> chunks)", "testcase": false, "constructor": false}, {"identifier": "parseValue", "parameters": "(String value)", "modifiers": "", "return": "List<Chunk>", "signature": "List<Chunk> parseValue(String value)", "full_signature": " List<Chunk> parseValue(String value)", "class_method_signature": "PropertyStack.parseValue(String value)", "testcase": false, "constructor": false}, {"identifier": "searchNextChunk", "parameters": "(String rawString)", "modifiers": "private", "return": "Chunk", "signature": "Chunk searchNextChunk(String rawString)", "full_signature": "private Chunk searchNextChunk(String rawString)", "class_method_signature": "PropertyStack.searchNextChunk(String rawString)", "testcase": false, "constructor": false}], "file": "minuteKernel/src/main/java/net/sf/minuteProject/handler/property/PropertyStack.java"}, "focal_method": {"identifier": "resolvePropertyValue", "parameters": "(String value)", "modifiers": "public", "return": "String", "body": "public String resolvePropertyValue (String value) {\n\t\tList<Chunk> props = parseValue(value);\n\t\treturn resolvePropertyValue (props);\n\t}", "signature": "String resolvePropertyValue(String value)", "full_signature": "public String resolvePropertyValue(String value)", "class_method_signature": "PropertyStack.resolvePropertyValue(String value)", "testcase": false, "constructor": false, "invocations": ["parseValue", "resolvePropertyValue"]}, "repository": {"repo_id": 6311816, "url": "https://github.com/based2/minuteProject", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 6, "size": 771, "license": "licensed"}}