{"test_class": {"identifier": "SortedAttributeMetadataTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/src/test/java/com/googlecode/cqengine/metadata/SortedAttributeMetadataTest.java"}, "test_case": {"identifier": "testGetDistinctKeysDescending", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetDistinctKeysDescending() {\n        IndexedCollection<Car> cars = createIndexedCollectionOfCars(20); // the 20 cars will contain 10 distinct models\n\n        // Add a sorted index on Car.MODEL (a NavigableIndex)...\n        cars.addIndex(NavigableIndex.onAttribute(Car.MODEL));\n        MetadataEngine<Car> metadataEngine = cars.getMetadataEngine();\n\n        // Access metadata for Car.MODEL attribute.\n        // Because we call getSortedAttributeMetadata(), values will be returned in sorted order...\n        SortedAttributeMetadata<String, Car> sortedAttributeMetadata = metadataEngine.getSortedAttributeMetadata(Car.MODEL);\n\n        // Call SortedAttributeMetadata.getDistinctKeysDescending() to retrieve distinct keys in descending order.\n        // We retrieve into a List in order to assert the ordering of values returned...\n        assertEquals(\n                asList(\"Taurus\", \"Prius\", \"M6\", \"Insight\", \"Hilux\", \"Fusion\", \"Focus\", \"Civic\", \"Avensis\", \"Accord\"),\n                sortedAttributeMetadata.getDistinctKeysDescending().collect(toList())\n        );\n\n        // Test specifying range explicitly...\n        assertEquals(\n                asList(\"Hilux\", \"Fusion\", \"Focus\"),\n                sortedAttributeMetadata.getDistinctKeysDescending(\"Civic\", false, \"Insight\", false).collect(toList())\n        );\n        assertEquals(\n                asList(\"Prius\", \"M6\", \"Insight\", \"Hilux\", \"Fusion\", \"Focus\", \"Civic\", \"Avensis\"),\n                sortedAttributeMetadata.getDistinctKeysDescending(\"Alpha\", false, \"Tango\", false).collect(toList())\n        );\n    }", "signature": "void testGetDistinctKeysDescending()", "full_signature": "@Test public void testGetDistinctKeysDescending()", "class_method_signature": "SortedAttributeMetadataTest.testGetDistinctKeysDescending()", "testcase": true, "constructor": false, "invocations": ["createIndexedCollectionOfCars", "addIndex", "onAttribute", "getMetadataEngine", "getSortedAttributeMetadata", "assertEquals", "asList", "collect", "getDistinctKeysDescending", "toList", "assertEquals", "asList", "collect", "getDistinctKeysDescending", "toList", "assertEquals", "asList", "collect", "getDistinctKeysDescending", "toList"]}, "focal_class": {"identifier": "SortedAttributeMetadata", "superclass": "extends AttributeMetadata<A, O>", "interfaces": "", "fields": [{"original_string": "private final SortedKeyStatisticsIndex<A, O> index;", "modifier": "private final", "type": "SortedKeyStatisticsIndex<A, O>", "declarator": "index", "var_name": "index"}], "methods": [{"identifier": "SortedAttributeMetadata", "parameters": "(SortedKeyStatisticsIndex<A, O> index, Supplier<QueryOptions> openResourcesHandler, Consumer<QueryOptions> closeResourcesHandler)", "modifiers": "", "return": "", "signature": " SortedAttributeMetadata(SortedKeyStatisticsIndex<A, O> index, Supplier<QueryOptions> openResourcesHandler, Consumer<QueryOptions> closeResourcesHandler)", "full_signature": "  SortedAttributeMetadata(SortedKeyStatisticsIndex<A, O> index, Supplier<QueryOptions> openResourcesHandler, Consumer<QueryOptions> closeResourcesHandler)", "class_method_signature": "SortedAttributeMetadata.SortedAttributeMetadata(SortedKeyStatisticsIndex<A, O> index, Supplier<QueryOptions> openResourcesHandler, Consumer<QueryOptions> closeResourcesHandler)", "testcase": false, "constructor": true}, {"identifier": "getFrequencyDistribution", "parameters": "()", "modifiers": "@Override public", "return": "Stream<KeyFrequency<A>>", "signature": "Stream<KeyFrequency<A>> getFrequencyDistribution()", "full_signature": "@Override public Stream<KeyFrequency<A>> getFrequencyDistribution()", "class_method_signature": "SortedAttributeMetadata.getFrequencyDistribution()", "testcase": false, "constructor": false}, {"identifier": "getFrequencyDistributionDescending", "parameters": "()", "modifiers": "public", "return": "Stream<KeyFrequency<A>>", "signature": "Stream<KeyFrequency<A>> getFrequencyDistributionDescending()", "full_signature": "public Stream<KeyFrequency<A>> getFrequencyDistributionDescending()", "class_method_signature": "SortedAttributeMetadata.getFrequencyDistributionDescending()", "testcase": false, "constructor": false}, {"identifier": "getDistinctKeys", "parameters": "()", "modifiers": "@Override public", "return": "Stream<A>", "signature": "Stream<A> getDistinctKeys()", "full_signature": "@Override public Stream<A> getDistinctKeys()", "class_method_signature": "SortedAttributeMetadata.getDistinctKeys()", "testcase": false, "constructor": false}, {"identifier": "getDistinctKeysDescending", "parameters": "()", "modifiers": "public", "return": "Stream<A>", "signature": "Stream<A> getDistinctKeysDescending()", "full_signature": "public Stream<A> getDistinctKeysDescending()", "class_method_signature": "SortedAttributeMetadata.getDistinctKeysDescending()", "testcase": false, "constructor": false}, {"identifier": "getDistinctKeys", "parameters": "(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "modifiers": "public", "return": "Stream<A>", "signature": "Stream<A> getDistinctKeys(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "full_signature": "public Stream<A> getDistinctKeys(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "class_method_signature": "SortedAttributeMetadata.getDistinctKeys(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "testcase": false, "constructor": false}, {"identifier": "getDistinctKeysDescending", "parameters": "(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "modifiers": "public", "return": "Stream<A>", "signature": "Stream<A> getDistinctKeysDescending(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "full_signature": "public Stream<A> getDistinctKeysDescending(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "class_method_signature": "SortedAttributeMetadata.getDistinctKeysDescending(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "testcase": false, "constructor": false}, {"identifier": "getCountOfDistinctKeys", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getCountOfDistinctKeys()", "full_signature": "@Override public Integer getCountOfDistinctKeys()", "class_method_signature": "SortedAttributeMetadata.getCountOfDistinctKeys()", "testcase": false, "constructor": false}, {"identifier": "getCountForKey", "parameters": "(A key)", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getCountForKey(A key)", "full_signature": "@Override public Integer getCountForKey(A key)", "class_method_signature": "SortedAttributeMetadata.getCountForKey(A key)", "testcase": false, "constructor": false}, {"identifier": "getKeysAndValues", "parameters": "()", "modifiers": "@Override public", "return": "Stream<KeyValue<A, O>>", "signature": "Stream<KeyValue<A, O>> getKeysAndValues()", "full_signature": "@Override public Stream<KeyValue<A, O>> getKeysAndValues()", "class_method_signature": "SortedAttributeMetadata.getKeysAndValues()", "testcase": false, "constructor": false}, {"identifier": "getKeysAndValuesDescending", "parameters": "()", "modifiers": "public", "return": "Stream<KeyValue<A, O>>", "signature": "Stream<KeyValue<A, O>> getKeysAndValuesDescending()", "full_signature": "public Stream<KeyValue<A, O>> getKeysAndValuesDescending()", "class_method_signature": "SortedAttributeMetadata.getKeysAndValuesDescending()", "testcase": false, "constructor": false}, {"identifier": "getKeysAndValues", "parameters": "(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "modifiers": "public", "return": "Stream<KeyValue<A, O>>", "signature": "Stream<KeyValue<A, O>> getKeysAndValues(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "full_signature": "public Stream<KeyValue<A, O>> getKeysAndValues(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "class_method_signature": "SortedAttributeMetadata.getKeysAndValues(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "testcase": false, "constructor": false}, {"identifier": "getKeysAndValuesDescending", "parameters": "(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "modifiers": "public", "return": "Stream<KeyValue<A, O>>", "signature": "Stream<KeyValue<A, O>> getKeysAndValuesDescending(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "full_signature": "public Stream<KeyValue<A, O>> getKeysAndValuesDescending(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "class_method_signature": "SortedAttributeMetadata.getKeysAndValuesDescending(A lowerBound, boolean lowerInclusive, A upperBound, boolean upperInclusive)", "testcase": false, "constructor": false}], "file": "code/src/main/java/com/googlecode/cqengine/metadata/SortedAttributeMetadata.java"}, "focal_method": {"identifier": "getDistinctKeysDescending", "parameters": "()", "modifiers": "public", "return": "Stream<A>", "body": "public Stream<A> getDistinctKeysDescending() {\n        QueryOptions queryOptions = openResources();\n        return asStream(queryOptions, index.getDistinctKeysDescending(queryOptions));\n    }", "signature": "Stream<A> getDistinctKeysDescending()", "full_signature": "public Stream<A> getDistinctKeysDescending()", "class_method_signature": "SortedAttributeMetadata.getDistinctKeysDescending()", "testcase": false, "constructor": false, "invocations": ["openResources", "asStream", "getDistinctKeysDescending"]}, "repository": {"repo_id": 41263775, "url": "https://github.com/npgall/cqengine", "language": "Java", "is_fork": false, "fork_count": 180, "stargazer_count": 1194, "size": 11701, "license": "licensed"}}