{"test_class": {"identifier": "GetQueryParameterRuleTest", "superclass": "", "interfaces": "", "fields": [], "file": "CoreFeatures/HttpEndpoint/GetQueryParameterRule/src/test/java/info/smart_tools/smartactors/http_endpoint/strategy/get_query_parameter/GetQueryParameterRuleTest.java"}, "test_case": {"identifier": "shouldExtractRightCookie", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldExtractRightCookie() throws Exception {\n        GetQueryParameterRule rule = new GetQueryParameterRule();\n        FullHttpRequest request = mock(FullHttpRequest.class);\n        String uri = \"/?key1=val1&key2=val2\";\n        when(request.getUri()).thenReturn(uri);\n        assertEquals(\"val2\", rule.resolve(request, \"key2\"));\n    }", "signature": "void shouldExtractRightCookie()", "full_signature": "@Test public void shouldExtractRightCookie()", "class_method_signature": "GetQueryParameterRuleTest.shouldExtractRightCookie()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getUri", "assertEquals", "resolve"]}, "focal_class": {"identifier": "GetQueryParameterRule", "superclass": "", "interfaces": "implements IResolveDependencyStrategy", "fields": [], "methods": [{"identifier": "resolve", "parameters": "(final Object... args)", "modifiers": "@Override public", "return": "T", "signature": "T resolve(final Object... args)", "full_signature": "@Override public T resolve(final Object... args)", "class_method_signature": "GetQueryParameterRule.resolve(final Object... args)", "testcase": false, "constructor": false}], "file": "CoreFeatures/HttpEndpoint/GetQueryParameterRule/src/main/java/info/smart_tools/smartactors/http_endpoint/strategy/get_query_parameter/GetQueryParameterRule.java"}, "focal_method": {"identifier": "resolve", "parameters": "(final Object... args)", "modifiers": "@Override public", "return": "T", "body": "@Override\n    public <T> T resolve(final Object... args) throws ResolveDependencyStrategyException {\n        try {\n            URL url = new URL(\"http:\" + ((FullHttpRequest) args[0]).getUri());\n            String query = url.getQuery();\n\n            String param = Stream.of(query.split(\"&\"))\n                    .map(x -> x.split(\"=\"))\n                    .filter(x -> x[0].equals(args[1]))\n                    .findFirst().get()[1];\n\n            return (T) param;\n        } catch (MalformedURLException e) {\n            throw new ResolveDependencyStrategyException(\"Failed to parse url\", e);\n        }\n    }", "signature": "T resolve(final Object... args)", "full_signature": "@Override public T resolve(final Object... args)", "class_method_signature": "GetQueryParameterRule.resolve(final Object... args)", "testcase": false, "constructor": false, "invocations": ["getUri", "getQuery", "get", "findFirst", "filter", "map", "of", "split", "split", "equals"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}