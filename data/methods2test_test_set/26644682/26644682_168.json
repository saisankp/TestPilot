{"test_class": {"identifier": "PreparationDatasetRowUpdaterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private PreparationDatasetRowUpdater updater;", "modifier": "@InjectMocks\n    private", "type": "PreparationDatasetRowUpdater", "declarator": "updater", "var_name": "updater"}, {"original_string": "@Mock\n    private PreparationRepository preparationRepository;", "modifier": "@Mock\n    private", "type": "PreparationRepository", "declarator": "preparationRepository", "var_name": "preparationRepository"}, {"original_string": "@Mock\n    private DataSetMetadataRepository dataSetMetadataRepository;", "modifier": "@Mock\n    private", "type": "DataSetMetadataRepository", "declarator": "dataSetMetadataRepository", "var_name": "dataSetMetadataRepository"}], "file": "dataprep-upgrade-common/src/test/java/org/talend/dataprep/upgrade/common/PreparationDatasetRowUpdaterTest.java"}, "test_case": {"identifier": "updatePreparations", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void updatePreparations() throws Exception {\n        // given\n        String datasetId = \"dataset id\";\n        Preparation prep = new Preparation(\"prepId\", \"123456\");\n        prep.setDataSetId(datasetId);\n        final List<Preparation> preparations = singletonList(prep);\n        when(preparationRepository.list(Preparation.class)).thenReturn(preparations.stream());\n\n        DataSetMetadata datasetMetadata = new DataSetMetadata();\n        datasetMetadata.setRowMetadata(new RowMetadata());\n        when(dataSetMetadataRepository.get(datasetId)).thenReturn(datasetMetadata);\n\n        // when\n        updater.updatePreparations();\n\n        // then\n        verify(preparationRepository, times(1)).list(Preparation.class);\n        verify(preparationRepository, times(1)).add(prep);\n        verify(dataSetMetadataRepository, only()).get(datasetId);\n    }", "signature": "void updatePreparations()", "full_signature": "@Test public void updatePreparations()", "class_method_signature": "PreparationDatasetRowUpdaterTest.updatePreparations()", "testcase": true, "constructor": false, "invocations": ["setDataSetId", "singletonList", "thenReturn", "when", "list", "stream", "setRowMetadata", "thenReturn", "when", "get", "updatePreparations", "list", "verify", "times", "add", "verify", "times", "get", "verify", "only"]}, "focal_class": {"identifier": "PreparationDatasetRowUpdater", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = getLogger(PreparationDatasetRowUpdater.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = getLogger(PreparationDatasetRowUpdater.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private PreparationRepository preparationRepository;", "modifier": "@Autowired\n    private", "type": "PreparationRepository", "declarator": "preparationRepository", "var_name": "preparationRepository"}, {"original_string": "@Autowired\n    private DataSetMetadataRepository dataSetMetadataRepository;", "modifier": "@Autowired\n    private", "type": "DataSetMetadataRepository", "declarator": "dataSetMetadataRepository", "var_name": "dataSetMetadataRepository"}], "methods": [{"identifier": "updatePreparations", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void updatePreparations()", "full_signature": "public void updatePreparations()", "class_method_signature": "PreparationDatasetRowUpdater.updatePreparations()", "testcase": false, "constructor": false}, {"identifier": "updatePreparations", "parameters": "(PreparationRepository repository)", "modifiers": "public", "return": "void", "signature": "void updatePreparations(PreparationRepository repository)", "full_signature": "public void updatePreparations(PreparationRepository repository)", "class_method_signature": "PreparationDatasetRowUpdater.updatePreparations(PreparationRepository repository)", "testcase": false, "constructor": false}, {"identifier": "addRowMetadata", "parameters": "(Preparation preparation)", "modifiers": "private", "return": "Preparation", "signature": "Preparation addRowMetadata(Preparation preparation)", "full_signature": "private Preparation addRowMetadata(Preparation preparation)", "class_method_signature": "PreparationDatasetRowUpdater.addRowMetadata(Preparation preparation)", "testcase": false, "constructor": false}], "file": "dataprep-upgrade-common/src/main/java/org/talend/dataprep/upgrade/common/PreparationDatasetRowUpdater.java"}, "focal_method": {"identifier": "updatePreparations", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void updatePreparations() {\n        updatePreparations(preparationRepository);\n    }", "signature": "void updatePreparations()", "full_signature": "public void updatePreparations()", "class_method_signature": "PreparationDatasetRowUpdater.updatePreparations()", "testcase": false, "constructor": false, "invocations": ["updatePreparations"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}