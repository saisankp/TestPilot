{"test_class": {"identifier": "ObjectsSectionProcessingStrategyTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [{"original_string": "private IReceiverObjectListener listenerMock;", "modifier": "private", "type": "IReceiverObjectListener", "declarator": "listenerMock", "var_name": "listenerMock"}, {"original_string": "private IReceiverObjectCreator[] creatorMocks;", "modifier": "private", "type": "IReceiverObjectCreator[]", "declarator": "creatorMocks", "var_name": "creatorMocks"}, {"original_string": "private IObject[] objectConfigMocks;", "modifier": "private", "type": "IObject[]", "declarator": "objectConfigMocks", "var_name": "objectConfigMocks"}, {"original_string": "private IObject configMock;", "modifier": "private", "type": "IObject", "declarator": "configMock", "var_name": "configMock"}, {"original_string": "private IResolveDependencyStrategy fullCreatorResolutionStrategy;", "modifier": "private", "type": "IResolveDependencyStrategy", "declarator": "fullCreatorResolutionStrategy", "var_name": "fullCreatorResolutionStrategy"}], "file": "Starters/CoreServiceStarter/CoreStarter/src/test/java/info/smart_tools/smartactors/core_service_starter/core_starter/ObjectsSectionProcessingStrategyTest.java"}, "test_case": {"identifier": "Should_storeSectionName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_storeSectionName()\n            throws Exception {\n        assertEquals(\n                IOC.resolve(Keys.getOrAdd(\"info.smart_tools.smartactors.iobject.ifield_name.IFieldName\"), \"objects\"),\n                new ObjectsSectionProcessingStrategy().getSectionName()\n        );\n    }", "signature": "void Should_storeSectionName()", "full_signature": "@Test public void Should_storeSectionName()", "class_method_signature": "ObjectsSectionProcessingStrategyTest.Should_storeSectionName()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "resolve", "getOrAdd", "getSectionName"]}, "focal_class": {"identifier": "ObjectsSectionProcessingStrategy", "superclass": "", "interfaces": "implements ISectionStrategy", "fields": [{"original_string": "private final IFieldName name;", "modifier": "private final", "type": "IFieldName", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "ObjectsSectionProcessingStrategy", "parameters": "()", "modifiers": "public", "return": "", "signature": " ObjectsSectionProcessingStrategy()", "full_signature": "public  ObjectsSectionProcessingStrategy()", "class_method_signature": "ObjectsSectionProcessingStrategy.ObjectsSectionProcessingStrategy()", "testcase": false, "constructor": true}, {"identifier": "onLoadConfig", "parameters": "(final IObject config)", "modifiers": "@Override public", "return": "void", "signature": "void onLoadConfig(final IObject config)", "full_signature": "@Override public void onLoadConfig(final IObject config)", "class_method_signature": "ObjectsSectionProcessingStrategy.onLoadConfig(final IObject config)", "testcase": false, "constructor": false}, {"identifier": "getSectionName", "parameters": "()", "modifiers": "@Override public", "return": "IFieldName", "signature": "IFieldName getSectionName()", "full_signature": "@Override public IFieldName getSectionName()", "class_method_signature": "ObjectsSectionProcessingStrategy.getSectionName()", "testcase": false, "constructor": false}], "file": "Starters/CoreServiceStarter/CoreStarter/src/main/java/info/smart_tools/smartactors/core_service_starter/core_starter/ObjectsSectionProcessingStrategy.java"}, "focal_method": {"identifier": "getSectionName", "parameters": "()", "modifiers": "@Override public", "return": "IFieldName", "body": "@Override\n    public IFieldName getSectionName() {\n        return name;\n    }", "signature": "IFieldName getSectionName()", "full_signature": "@Override public IFieldName getSectionName()", "class_method_signature": "ObjectsSectionProcessingStrategy.getSectionName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}