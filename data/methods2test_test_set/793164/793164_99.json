{"test_class": {"identifier": "RecipientListValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final RecipientListValidator validator = new RecipientListValidator();", "modifier": "private static final", "type": "RecipientListValidator", "declarator": "validator = new RecipientListValidator()", "var_name": "validator"}], "file": "commons/ihe/xds/src/test/java/org/openehealth/ipf/commons/ihe/xds/core/validate/RecipientListValidatorTest.java"}, "test_case": {"identifier": "testValidateGoodCases", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateGoodCases() throws XDSMetaDataException {\n        validator.validate(Arrays.asList(\"Some Hospital|^Welby\"));\n        validator.validate(Arrays.asList(\"|^Welby\"));\n        validator.validate(Arrays.asList(\"|ONLYID\"));\n        validator.validate(Arrays.asList(\"Some Hospital\"));\n        validator.validate(Arrays.asList(\"Some Hospital\", \"|^Welby\"));\n    }", "signature": "void testValidateGoodCases()", "full_signature": "@Test public void testValidateGoodCases()", "class_method_signature": "RecipientListValidatorTest.testValidateGoodCases()", "testcase": true, "constructor": false, "invocations": ["validate", "asList", "validate", "asList", "validate", "asList", "validate", "asList", "validate", "asList"]}, "focal_class": {"identifier": "RecipientListValidator", "superclass": "", "interfaces": "implements ValueListValidator", "fields": [{"original_string": "private final XCNValidator xcnValidator = new XCNValidator();", "modifier": "private final", "type": "XCNValidator", "declarator": "xcnValidator = new XCNValidator()", "var_name": "xcnValidator"}, {"original_string": "private final XONValidator xonValidator = new XONValidator();", "modifier": "private final", "type": "XONValidator", "declarator": "xonValidator = new XONValidator()", "var_name": "xonValidator"}], "methods": [{"identifier": "validate", "parameters": "(List<String> values)", "modifiers": "@Override public", "return": "void", "signature": "void validate(List<String> values)", "full_signature": "@Override public void validate(List<String> values)", "class_method_signature": "RecipientListValidator.validate(List<String> values)", "testcase": false, "constructor": false}], "file": "commons/ihe/xds/src/main/java/org/openehealth/ipf/commons/ihe/xds/core/validate/RecipientListValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(List<String> values)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate(List<String> values) throws XDSMetaDataException {\n        noNullElements(values, \"values cannot contain null elements\");\n//        This check is disabled for compatibility with older versions.\n//        metaDataAssert(!values.isEmpty(), RECIPIENT_LIST_EMPTY);\n        \n        for (String value : values) {\n            metaDataAssert(!value.isEmpty(), RECIPIENT_EMPTY);\n\n            String[] parts = value.split(\"\\\\|\", 4);\n            metaDataAssert((parts.length > 0) && (parts.length <= 3), INVALID_RECIPIENT, value);\n\n            if (! parts[0].isEmpty()) {\n                xonValidator.validate(parts[0]);\n            }\n\n            if ((parts.length > 1) && (! parts[1].isEmpty())) {\n                xcnValidator.validate(parts[1]);\n            }\n        }\n    }", "signature": "void validate(List<String> values)", "full_signature": "@Override public void validate(List<String> values)", "class_method_signature": "RecipientListValidator.validate(List<String> values)", "testcase": false, "constructor": false, "invocations": ["noNullElements", "metaDataAssert", "isEmpty", "split", "metaDataAssert", "isEmpty", "validate", "isEmpty", "validate"]}, "repository": {"repo_id": 793164, "url": "https://github.com/krasserm/ipf", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 30233, "license": "licensed"}}