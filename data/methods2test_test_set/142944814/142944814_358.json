{"test_class": {"identifier": "FunctionsTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "core/common/src/test/java/hera/api/function/FunctionsTest.java"}, "test_case": {"identifier": "testCompose2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCompose2() {\n    final String ret = randomUUID().toString();\n    Function2<String, String, String> f = new Function2<String, String, String>() {\n      @Override\n      public String apply(final String t1, final String t2) {\n        return ret;\n      }\n    };\n    Function1<String, Integer> s = new Function1<String, Integer>() {\n      @Override\n      public Integer apply(final String t) {\n        return t.length();\n      }\n    };\n    Function2<String, String, Integer> composed = Functions.compose(f, s);\n\n    final Integer expected = ret.length();\n    assertEquals(expected, composed.apply(randomUUID().toString(), randomUUID().toString()));\n  }", "signature": "void testCompose2()", "full_signature": "@Test public void testCompose2()", "class_method_signature": "FunctionsTest.testCompose2()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "length", "compose", "length", "assertEquals", "apply", "toString", "randomUUID", "toString", "randomUUID"]}, "focal_class": {"identifier": "Functions", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final Class<?>[] functions = {\n      Function0.class,\n      Function1.class,\n      Function2.class,\n      Function3.class,\n      Function4.class,\n      Function5.class,\n  };", "modifier": "protected static final", "type": "Class<?>[]", "declarator": "functions = {\n      Function0.class,\n      Function1.class,\n      Function2.class,\n      Function3.class,\n      Function4.class,\n      Function5.class,\n  }", "var_name": "functions"}], "methods": [{"identifier": "invoke", "parameters": "(final Function<R> f, final List<Object> args)", "modifiers": "public static", "return": "R", "signature": "R invoke(final Function<R> f, final List<Object> args)", "full_signature": "public static R invoke(final Function<R> f, final List<Object> args)", "class_method_signature": "Functions.invoke(final Function<R> f, final List<Object> args)", "testcase": false, "constructor": false}, {"identifier": "buildInvocation", "parameters": "(final Function<R> f, final List<Object> args)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "Function0<R>", "signature": "Function0<R> buildInvocation(final Function<R> f, final List<Object> args)", "full_signature": "@SuppressWarnings(\"unchecked\") public static Function0<R> buildInvocation(final Function<R> f, final List<Object> args)", "class_method_signature": "Functions.buildInvocation(final Function<R> f, final List<Object> args)", "testcase": false, "constructor": false}, {"identifier": "identify", "parameters": "(final Function0<R> f, final String identity)", "modifiers": "public static", "return": "Function0<R>", "signature": "Function0<R> identify(final Function0<R> f, final String identity)", "full_signature": "public static Function0<R> identify(final Function0<R> f, final String identity)", "class_method_signature": "Functions.identify(final Function0<R> f, final String identity)", "testcase": false, "constructor": false}, {"identifier": "identify", "parameters": "(final Function1<T, R> f,\n      final String identity)", "modifiers": "public static", "return": "Function1<T, R>", "signature": "Function1<T, R> identify(final Function1<T, R> f,\n      final String identity)", "full_signature": "public static Function1<T, R> identify(final Function1<T, R> f,\n      final String identity)", "class_method_signature": "Functions.identify(final Function1<T, R> f,\n      final String identity)", "testcase": false, "constructor": false}, {"identifier": "identify", "parameters": "(final Function2<T1, T2, R> f,\n      final String identity)", "modifiers": "public static", "return": "Function2<T1, T2, R>", "signature": "Function2<T1, T2, R> identify(final Function2<T1, T2, R> f,\n      final String identity)", "full_signature": "public static Function2<T1, T2, R> identify(final Function2<T1, T2, R> f,\n      final String identity)", "class_method_signature": "Functions.identify(final Function2<T1, T2, R> f,\n      final String identity)", "testcase": false, "constructor": false}, {"identifier": "identify", "parameters": "(final Function3<T1, T2, T3, R> f,\n      final String identity)", "modifiers": "public static", "return": "Function3<T1, T2, T3, R>", "signature": "Function3<T1, T2, T3, R> identify(final Function3<T1, T2, T3, R> f,\n      final String identity)", "full_signature": "public static Function3<T1, T2, T3, R> identify(final Function3<T1, T2, T3, R> f,\n      final String identity)", "class_method_signature": "Functions.identify(final Function3<T1, T2, T3, R> f,\n      final String identity)", "testcase": false, "constructor": false}, {"identifier": "identify", "parameters": "(\n      final Function4<T1, T2, T3, T4, R> f, final String identity)", "modifiers": "public static", "return": "Function4<T1, T2, T3, T4, R>", "signature": "Function4<T1, T2, T3, T4, R> identify(\n      final Function4<T1, T2, T3, T4, R> f, final String identity)", "full_signature": "public static Function4<T1, T2, T3, T4, R> identify(\n      final Function4<T1, T2, T3, T4, R> f, final String identity)", "class_method_signature": "Functions.identify(\n      final Function4<T1, T2, T3, T4, R> f, final String identity)", "testcase": false, "constructor": false}, {"identifier": "identify", "parameters": "(\n      final Function5<T1, T2, T3, T4, T5, R> f, final String identity)", "modifiers": "public static", "return": "Function5<T1, T2, T3, T4, T5, R>", "signature": "Function5<T1, T2, T3, T4, T5, R> identify(\n      final Function5<T1, T2, T3, T4, T5, R> f, final String identity)", "full_signature": "public static Function5<T1, T2, T3, T4, T5, R> identify(\n      final Function5<T1, T2, T3, T4, T5, R> f, final String identity)", "class_method_signature": "Functions.identify(\n      final Function5<T1, T2, T3, T4, T5, R> f, final String identity)", "testcase": false, "constructor": false}, {"identifier": "compose", "parameters": "(final Function0<R> first,\n      final Function1<? super R, ? extends V> second)", "modifiers": "public static", "return": "Function0<V>", "signature": "Function0<V> compose(final Function0<R> first,\n      final Function1<? super R, ? extends V> second)", "full_signature": "public static Function0<V> compose(final Function0<R> first,\n      final Function1<? super R, ? extends V> second)", "class_method_signature": "Functions.compose(final Function0<R> first,\n      final Function1<? super R, ? extends V> second)", "testcase": false, "constructor": false}, {"identifier": "compose", "parameters": "(final Function1<? super T, ? extends R> first,\n      final Function1<? super R, ? extends V> second)", "modifiers": "public static", "return": "Function1<T, V>", "signature": "Function1<T, V> compose(final Function1<? super T, ? extends R> first,\n      final Function1<? super R, ? extends V> second)", "full_signature": "public static Function1<T, V> compose(final Function1<? super T, ? extends R> first,\n      final Function1<? super R, ? extends V> second)", "class_method_signature": "Functions.compose(final Function1<? super T, ? extends R> first,\n      final Function1<? super R, ? extends V> second)", "testcase": false, "constructor": false}, {"identifier": "compose", "parameters": "(\n      final Function2<? super T1, ? super T2, ? extends R> first,\n      final Function1<? super R, ? extends V> second)", "modifiers": "public static", "return": "Function2<T1, T2, V>", "signature": "Function2<T1, T2, V> compose(\n      final Function2<? super T1, ? super T2, ? extends R> first,\n      final Function1<? super R, ? extends V> second)", "full_signature": "public static Function2<T1, T2, V> compose(\n      final Function2<? super T1, ? super T2, ? extends R> first,\n      final Function1<? super R, ? extends V> second)", "class_method_signature": "Functions.compose(\n      final Function2<? super T1, ? super T2, ? extends R> first,\n      final Function1<? super R, ? extends V> second)", "testcase": false, "constructor": false}, {"identifier": "compose", "parameters": "(\n      final Function3<? super T1, ? super T2, ? super T3, ? extends R> first,\n      final Function1<? super R, ? extends V> second)", "modifiers": "public static", "return": "Function3<T1, T2, T3, V>", "signature": "Function3<T1, T2, T3, V> compose(\n      final Function3<? super T1, ? super T2, ? super T3, ? extends R> first,\n      final Function1<? super R, ? extends V> second)", "full_signature": "public static Function3<T1, T2, T3, V> compose(\n      final Function3<? super T1, ? super T2, ? super T3, ? extends R> first,\n      final Function1<? super R, ? extends V> second)", "class_method_signature": "Functions.compose(\n      final Function3<? super T1, ? super T2, ? super T3, ? extends R> first,\n      final Function1<? super R, ? extends V> second)", "testcase": false, "constructor": false}, {"identifier": "compose", "parameters": "(\n      final Function4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> first,\n      final Function1<? super R, ? extends V> second)", "modifiers": "public static", "return": "Function4<T1, T2, T3, T4, V>", "signature": "Function4<T1, T2, T3, T4, V> compose(\n      final Function4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> first,\n      final Function1<? super R, ? extends V> second)", "full_signature": "public static Function4<T1, T2, T3, T4, V> compose(\n      final Function4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> first,\n      final Function1<? super R, ? extends V> second)", "class_method_signature": "Functions.compose(\n      final Function4<? super T1, ? super T2, ? super T3, ? super T4, ? extends R> first,\n      final Function1<? super R, ? extends V> second)", "testcase": false, "constructor": false}, {"identifier": "compose", "parameters": "(\n      final Function5<? super T1, ? super T2, ? super T3, ? super T4, ? super T5, ? extends R>\n          first, final Function1<? super R, ? extends V> second)", "modifiers": "public static", "return": "Function5<T1, T2, T3, T4, T5, V>", "signature": "Function5<T1, T2, T3, T4, T5, V> compose(\n      final Function5<? super T1, ? super T2, ? super T3, ? super T4, ? super T5, ? extends R>\n          first, final Function1<? super R, ? extends V> second)", "full_signature": "public static Function5<T1, T2, T3, T4, T5, V> compose(\n      final Function5<? super T1, ? super T2, ? super T3, ? super T4, ? super T5, ? extends R>\n          first, final Function1<? super R, ? extends V> second)", "class_method_signature": "Functions.compose(\n      final Function5<? super T1, ? super T2, ? super T3, ? super T4, ? super T5, ? extends R>\n          first, final Function1<? super R, ? extends V> second)", "testcase": false, "constructor": false}], "file": "core/common/src/main/java/hera/api/function/Functions.java"}, "focal_method": {"identifier": "compose", "parameters": "(final Function0<R> first,\n      final Function1<? super R, ? extends V> second)", "modifiers": "public static", "return": "Function0<V>", "body": "public static <R, V> Function0<V> compose(final Function0<R> first,\n      final Function1<? super R, ? extends V> second) {\n    if (null == first) {\n      throw new NullPointerException();\n    }\n    if (null == second) {\n      throw new NullPointerException();\n    }\n    return new Function0<V>() {\n      @Override\n      public V apply() {\n        return second.apply(first.apply());\n      }\n    };\n  }", "signature": "Function0<V> compose(final Function0<R> first,\n      final Function1<? super R, ? extends V> second)", "full_signature": "public static Function0<V> compose(final Function0<R> first,\n      final Function1<? super R, ? extends V> second)", "class_method_signature": "Functions.compose(final Function0<R> first,\n      final Function1<? super R, ? extends V> second)", "testcase": false, "constructor": false, "invocations": ["apply", "apply"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}