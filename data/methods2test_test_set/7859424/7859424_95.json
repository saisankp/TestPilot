{"test_class": {"identifier": "AtariObserverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Board board;", "modifier": "private", "type": "Board", "declarator": "board", "var_name": "board"}, {"original_string": "private AtariObserver atari;", "modifier": "private", "type": "AtariObserver", "declarator": "atari", "var_name": "atari"}], "file": "src/edu/lclark/orego/feature/AtariObserverTest.java"}, "test_case": {"identifier": "testCapture", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCapture() {\n\t\tString[] diagram = {\n\t\t\t\t\".O#..\",\n\t\t\t\t\".##..\",\n\t\t\t\t\".....\",\n\t\t\t\t\".....\",\n\t\t\t\t\".....\",\n\t\t};\n\t\tboard.setUpProblem(diagram, BLACK);\n\t\tassertTrue(atari.getChainsInAtari(WHITE).contains(board.getChainRoot(at(\"b5\"))));\n\t\tassertFalse(atari.getChainsInAtari(BLACK).contains(board.getChainRoot(at(\"b4\"))));\n\t\tboard.play(\"a5\");\n\t\tassertFalse(atari.getChainsInAtari(WHITE).contains(board.getChainRoot(at(\"b5\"))));\n\t\tboard.play(\"a4\");\n\t\tassertTrue(atari.getChainsInAtari(BLACK).contains(board.getChainRoot(at(\"a5\"))));\n\t\tassertTrue(atari.getChainsInAtari(WHITE).contains(board.getChainRoot(at(\"a4\"))));\n\t}", "signature": "void testCapture()", "full_signature": "@Test public void testCapture()", "class_method_signature": "AtariObserverTest.testCapture()", "testcase": true, "constructor": false, "invocations": ["setUpProblem", "assertTrue", "contains", "getChainsInAtari", "getChainRoot", "at", "assertFalse", "contains", "getChainsInAtari", "getChainRoot", "at", "play", "assertFalse", "contains", "getChainsInAtari", "getChainRoot", "at", "play", "assertTrue", "contains", "getChainsInAtari", "getChainRoot", "at", "assertTrue", "contains", "getChainsInAtari", "getChainRoot", "at"]}, "focal_class": {"identifier": "AtariObserver", "superclass": "", "interfaces": "implements BoardObserver", "fields": [{"original_string": "private final Board board;", "modifier": "private final", "type": "Board", "declarator": "board", "var_name": "board"}, {"original_string": "private final ShortSet[] chainsInAtari;", "modifier": "private final", "type": "ShortSet[]", "declarator": "chainsInAtari", "var_name": "chainsInAtari"}, {"original_string": "private final CoordinateSystem coords;", "modifier": "private final", "type": "CoordinateSystem", "declarator": "coords", "var_name": "coords"}], "methods": [{"identifier": "AtariObserver", "parameters": "(Board board)", "modifiers": "public", "return": "", "signature": " AtariObserver(Board board)", "full_signature": "public  AtariObserver(Board board)", "class_method_signature": "AtariObserver.AtariObserver(Board board)", "testcase": false, "constructor": true}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "AtariObserver.clear()", "testcase": false, "constructor": false}, {"identifier": "copyDataFrom", "parameters": "(BoardObserver that)", "modifiers": "@Override public", "return": "void", "signature": "void copyDataFrom(BoardObserver that)", "full_signature": "@Override public void copyDataFrom(BoardObserver that)", "class_method_signature": "AtariObserver.copyDataFrom(BoardObserver that)", "testcase": false, "constructor": false}, {"identifier": "getChainsInAtari", "parameters": "(StoneColor color)", "modifiers": "public", "return": "ShortSet", "signature": "ShortSet getChainsInAtari(StoneColor color)", "full_signature": "public ShortSet getChainsInAtari(StoneColor color)", "class_method_signature": "AtariObserver.getChainsInAtari(StoneColor color)", "testcase": false, "constructor": false}, {"identifier": "removeInvalidChains", "parameters": "(StoneColor color)", "modifiers": "private", "return": "void", "signature": "void removeInvalidChains(StoneColor color)", "full_signature": "private void removeInvalidChains(StoneColor color)", "class_method_signature": "AtariObserver.removeInvalidChains(StoneColor color)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(StoneColor color, short location,\n\t\t\tShortList capturedStones)", "modifiers": "@Override public", "return": "void", "signature": "void update(StoneColor color, short location,\n\t\t\tShortList capturedStones)", "full_signature": "@Override public void update(StoneColor color, short location,\n\t\t\tShortList capturedStones)", "class_method_signature": "AtariObserver.update(StoneColor color, short location,\n\t\t\tShortList capturedStones)", "testcase": false, "constructor": false}], "file": "src/edu/lclark/orego/feature/AtariObserver.java"}, "focal_method": {"identifier": "getChainsInAtari", "parameters": "(StoneColor color)", "modifiers": "public", "return": "ShortSet", "body": "public ShortSet getChainsInAtari(StoneColor color) {\n\t\treturn chainsInAtari[color.index()];\n\t}", "signature": "ShortSet getChainsInAtari(StoneColor color)", "full_signature": "public ShortSet getChainsInAtari(StoneColor color)", "class_method_signature": "AtariObserver.getChainsInAtari(StoneColor color)", "testcase": false, "constructor": false, "invocations": ["index"]}, "repository": {"repo_id": 7859424, "url": "https://github.com/Orego/Orego", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 1341444, "license": "licensed"}}