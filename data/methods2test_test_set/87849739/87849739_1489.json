{"test_class": {"identifier": "DefaultDittoHeadersBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final List<String> AUTHORIZATION_SUBJECTS = Arrays.asList(\"Foo\", \"Bar\");", "modifier": "private static final", "type": "List<String>", "declarator": "AUTHORIZATION_SUBJECTS = Arrays.asList(\"Foo\", \"Bar\")", "var_name": "AUTHORIZATION_SUBJECTS"}, {"original_string": "private static final String CORRELATION_ID = \"correlationId\";", "modifier": "private static final", "type": "String", "declarator": "CORRELATION_ID = \"correlationId\"", "var_name": "CORRELATION_ID"}, {"original_string": "private static final JsonSchemaVersion JSON_SCHEMA_VERSION = JsonSchemaVersion.V_1;", "modifier": "private static final", "type": "JsonSchemaVersion", "declarator": "JSON_SCHEMA_VERSION = JsonSchemaVersion.V_1", "var_name": "JSON_SCHEMA_VERSION"}, {"original_string": "private static final String CHANNEL = \"twin\";", "modifier": "private static final", "type": "String", "declarator": "CHANNEL = \"twin\"", "var_name": "CHANNEL"}, {"original_string": "private static final Collection<String> READ_SUBJECTS = Arrays.asList(\"read\", \"subjects\");", "modifier": "private static final", "type": "Collection<String>", "declarator": "READ_SUBJECTS = Arrays.asList(\"read\", \"subjects\")", "var_name": "READ_SUBJECTS"}, {"original_string": "private DefaultDittoHeadersBuilder underTest = null;", "modifier": "private", "type": "DefaultDittoHeadersBuilder", "declarator": "underTest = null", "var_name": "underTest"}], "file": "model/base/src/test/java/org/eclipse/ditto/model/base/headers/DefaultDittoHeadersBuilderTest.java"}, "test_case": {"identifier": "tryToCreateInstanceWithJsonObjectContainingInvalidHeader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tryToCreateInstanceWithJsonObjectContainingInvalidHeader() {\n        final String schemaVersionKey = DittoHeaderDefinition.SCHEMA_VERSION.getKey();\n        final String invalidSchemaVersionValue = \"meh\";\n\n        final JsonObject headersJsonObject = JsonFactory.newObjectBuilder()\n                .set(DittoHeaderDefinition.RESPONSE_REQUIRED.getKey(), false)\n                .set(schemaVersionKey, invalidSchemaVersionValue)\n                .set(\"foo\", \"bar\")\n                .build();\n\n        assertThatExceptionOfType(DittoHeaderInvalidException.class)\n                .isThrownBy(() -> of(headersJsonObject))\n                .withMessage(\"The value '%s' of the header '%s' is not a valid int.\", invalidSchemaVersionValue,\n                        schemaVersionKey)\n                .withNoCause();\n    }", "signature": "void tryToCreateInstanceWithJsonObjectContainingInvalidHeader()", "full_signature": "@Test public void tryToCreateInstanceWithJsonObjectContainingInvalidHeader()", "class_method_signature": "DefaultDittoHeadersBuilderTest.tryToCreateInstanceWithJsonObjectContainingInvalidHeader()", "testcase": true, "constructor": false, "invocations": ["getKey", "build", "set", "set", "set", "newObjectBuilder", "getKey", "withNoCause", "withMessage", "isThrownBy", "assertThatExceptionOfType", "of"]}, "focal_class": {"identifier": "DefaultDittoHeadersBuilder", "superclass": "extends AbstractDittoHeadersBuilder<DefaultDittoHeadersBuilder, DittoHeaders>", "interfaces": "", "fields": [{"original_string": "private static final DittoHeaders EMPTY_DITTO_HEADERS = ImmutableDittoHeaders.of(Collections.emptyMap());", "modifier": "private static final", "type": "DittoHeaders", "declarator": "EMPTY_DITTO_HEADERS = ImmutableDittoHeaders.of(Collections.emptyMap())", "var_name": "EMPTY_DITTO_HEADERS"}, {"original_string": "private static final EnumSet<DittoHeaderDefinition> DEFINITIONS = EnumSet.allOf(DittoHeaderDefinition.class);", "modifier": "private static final", "type": "EnumSet<DittoHeaderDefinition>", "declarator": "DEFINITIONS = EnumSet.allOf(DittoHeaderDefinition.class)", "var_name": "DEFINITIONS"}], "methods": [{"identifier": "DefaultDittoHeadersBuilder", "parameters": "(final Map<String, String> headers)", "modifiers": "private", "return": "", "signature": " DefaultDittoHeadersBuilder(final Map<String, String> headers)", "full_signature": "private  DefaultDittoHeadersBuilder(final Map<String, String> headers)", "class_method_signature": "DefaultDittoHeadersBuilder.DefaultDittoHeadersBuilder(final Map<String, String> headers)", "testcase": false, "constructor": true}, {"identifier": "DefaultDittoHeadersBuilder", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "", "signature": " DefaultDittoHeadersBuilder(final DittoHeaders dittoHeaders)", "full_signature": "private  DefaultDittoHeadersBuilder(final DittoHeaders dittoHeaders)", "class_method_signature": "DefaultDittoHeadersBuilder.DefaultDittoHeadersBuilder(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": true}, {"identifier": "newInstance", "parameters": "()", "modifiers": "static", "return": "DefaultDittoHeadersBuilder", "signature": "DefaultDittoHeadersBuilder newInstance()", "full_signature": "static DefaultDittoHeadersBuilder newInstance()", "class_method_signature": "DefaultDittoHeadersBuilder.newInstance()", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final Map<String, String> headers)", "modifiers": "static", "return": "DefaultDittoHeadersBuilder", "signature": "DefaultDittoHeadersBuilder of(final Map<String, String> headers)", "full_signature": "static DefaultDittoHeadersBuilder of(final Map<String, String> headers)", "class_method_signature": "DefaultDittoHeadersBuilder.of(final Map<String, String> headers)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final JsonObject jsonObject)", "modifiers": "static", "return": "DefaultDittoHeadersBuilder", "signature": "DefaultDittoHeadersBuilder of(final JsonObject jsonObject)", "full_signature": "static DefaultDittoHeadersBuilder of(final JsonObject jsonObject)", "class_method_signature": "DefaultDittoHeadersBuilder.of(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "getEmptyHeaders", "parameters": "()", "modifiers": "static", "return": "DittoHeaders", "signature": "DittoHeaders getEmptyHeaders()", "full_signature": "static DittoHeaders getEmptyHeaders()", "class_method_signature": "DefaultDittoHeadersBuilder.getEmptyHeaders()", "testcase": false, "constructor": false}, {"identifier": "doBuild", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "@Override protected", "return": "DittoHeaders", "signature": "DittoHeaders doBuild(final DittoHeaders dittoHeaders)", "full_signature": "@Override protected DittoHeaders doBuild(final DittoHeaders dittoHeaders)", "class_method_signature": "DefaultDittoHeadersBuilder.doBuild(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}], "file": "model/base/src/main/java/org/eclipse/ditto/model/base/headers/DefaultDittoHeadersBuilder.java"}, "focal_method": {"identifier": "of", "parameters": "(final Map<String, String> headers)", "modifiers": "static", "return": "DefaultDittoHeadersBuilder", "body": "static DefaultDittoHeadersBuilder of(final Map<String, String> headers) {\n        if (headers instanceof DittoHeaders) {\n            return new DefaultDittoHeadersBuilder((DittoHeaders) headers);\n        }\n        return new DefaultDittoHeadersBuilder(headers);\n    }", "signature": "DefaultDittoHeadersBuilder of(final Map<String, String> headers)", "full_signature": "static DefaultDittoHeadersBuilder of(final Map<String, String> headers)", "class_method_signature": "DefaultDittoHeadersBuilder.of(final Map<String, String> headers)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}