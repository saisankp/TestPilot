{"test_class": {"identifier": "VufsServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IVufsService vufsService;", "modifier": "private", "type": "IVufsService", "declarator": "vufsService", "var_name": "vufsService"}], "file": "vufs/src/test/java/com/stnetix/ariaddna/vufs/service/VufsServiceImplTest.java"}, "test_case": {"identifier": "getMetafileByUuid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getMetafileByUuid() throws MetafileDoesNotExistException {\n        Metafile newMetafile = vufsService.createEmptyMetafile();\n        newMetafile.setAllocationStrategy(AllocationStrategy.HA);\n        String metafileUUid = newMetafile.getFileUuid();\n        vufsService.addMetafileToMetatable(newMetafile);\n        Metafile result = vufsService.getMetafileByUuid(metafileUUid);\n        assertEquals(result.getFileUuid(), newMetafile.getFileUuid());\n    }", "signature": "void getMetafileByUuid()", "full_signature": "@Test public void getMetafileByUuid()", "class_method_signature": "VufsServiceImplTest.getMetafileByUuid()", "testcase": true, "constructor": false, "invocations": ["createEmptyMetafile", "setAllocationStrategy", "getFileUuid", "addMetafileToMetatable", "getMetafileByUuid", "assertEquals", "getFileUuid", "getFileUuid"]}, "focal_class": {"identifier": "VufsServiceImpl", "superclass": "", "interfaces": "implements IVufsService", "fields": [{"original_string": "private Metatable currentMetatable;", "modifier": "private", "type": "Metatable", "declarator": "currentMetatable", "var_name": "currentMetatable"}, {"original_string": "private IProfile profile;", "modifier": "private", "type": "IProfile", "declarator": "profile", "var_name": "profile"}, {"original_string": "private MetatableTransformer metatableTransformer;", "modifier": "private", "type": "MetatableTransformer", "declarator": "metatableTransformer", "var_name": "metatableTransformer"}, {"original_string": "private IMetatableService persistingService;", "modifier": "private", "type": "IMetatableService", "declarator": "persistingService", "var_name": "persistingService"}], "methods": [{"identifier": "VufsServiceImpl", "parameters": "(IProfile profile,\n            MetatableTransformer metatableTransformer,\n            IMetatableService persistingService)", "modifiers": "@Autowired public", "return": "", "signature": " VufsServiceImpl(IProfile profile,\n            MetatableTransformer metatableTransformer,\n            IMetatableService persistingService)", "full_signature": "@Autowired public  VufsServiceImpl(IProfile profile,\n            MetatableTransformer metatableTransformer,\n            IMetatableService persistingService)", "class_method_signature": "VufsServiceImpl.VufsServiceImpl(IProfile profile,\n            MetatableTransformer metatableTransformer,\n            IMetatableService persistingService)", "testcase": false, "constructor": true}, {"identifier": "createEmptyMetafile", "parameters": "()", "modifiers": "@Override public", "return": "Metafile", "signature": "Metafile createEmptyMetafile()", "full_signature": "@Override public Metafile createEmptyMetafile()", "class_method_signature": "VufsServiceImpl.createEmptyMetafile()", "testcase": false, "constructor": false}, {"identifier": "getMetafileByUuid", "parameters": "(String fileUuid)", "modifiers": "@Override public", "return": "Metafile", "signature": "Metafile getMetafileByUuid(String fileUuid)", "full_signature": "@Override public Metafile getMetafileByUuid(String fileUuid)", "class_method_signature": "VufsServiceImpl.getMetafileByUuid(String fileUuid)", "testcase": false, "constructor": false}, {"identifier": "addBlockByUuidToMetafile", "parameters": "(String blockUuid, Metafile metafile)", "modifiers": "@Override public", "return": "Metafile", "signature": "Metafile addBlockByUuidToMetafile(String blockUuid, Metafile metafile)", "full_signature": "@Override public Metafile addBlockByUuidToMetafile(String blockUuid, Metafile metafile)", "class_method_signature": "VufsServiceImpl.addBlockByUuidToMetafile(String blockUuid, Metafile metafile)", "testcase": false, "constructor": false}, {"identifier": "removeBlockByUuidFromMetafile", "parameters": "(String blockUuid, Metafile metafile)", "modifiers": "@Override public", "return": "Metafile", "signature": "Metafile removeBlockByUuidFromMetafile(String blockUuid, Metafile metafile)", "full_signature": "@Override public Metafile removeBlockByUuidFromMetafile(String blockUuid, Metafile metafile)", "class_method_signature": "VufsServiceImpl.removeBlockByUuidFromMetafile(String blockUuid, Metafile metafile)", "testcase": false, "constructor": false}, {"identifier": "addMetafileToMetatable", "parameters": "(Metafile metafile)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addMetafileToMetatable(Metafile metafile)", "full_signature": "@Override public boolean addMetafileToMetatable(Metafile metafile)", "class_method_signature": "VufsServiceImpl.addMetafileToMetatable(Metafile metafile)", "testcase": false, "constructor": false}, {"identifier": "removeMetafileFromMetatable", "parameters": "(Metafile metafile)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeMetafileFromMetatable(Metafile metafile)", "full_signature": "@Override public boolean removeMetafileFromMetatable(Metafile metafile)", "class_method_signature": "VufsServiceImpl.removeMetafileFromMetatable(Metafile metafile)", "testcase": false, "constructor": false}, {"identifier": "getAllocationByBlockUuid", "parameters": "(String blockUuid)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getAllocationByBlockUuid(String blockUuid)", "full_signature": "@Override public Set<String> getAllocationByBlockUuid(String blockUuid)", "class_method_signature": "VufsServiceImpl.getAllocationByBlockUuid(String blockUuid)", "testcase": false, "constructor": false}, {"identifier": "setAllocationForBlockByUuid", "parameters": "(String blockUuid, Set<String> allocationSet)", "modifiers": "@Override public", "return": "void", "signature": "void setAllocationForBlockByUuid(String blockUuid, Set<String> allocationSet)", "full_signature": "@Override public void setAllocationForBlockByUuid(String blockUuid, Set<String> allocationSet)", "class_method_signature": "VufsServiceImpl.setAllocationForBlockByUuid(String blockUuid, Set<String> allocationSet)", "testcase": false, "constructor": false}, {"identifier": "addMetafileAsChildToParent", "parameters": "(Metafile childMetafile,\n            String parentMetafileUuid)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addMetafileAsChildToParent(Metafile childMetafile,\n            String parentMetafileUuid)", "full_signature": "@Override public boolean addMetafileAsChildToParent(Metafile childMetafile,\n            String parentMetafileUuid)", "class_method_signature": "VufsServiceImpl.addMetafileAsChildToParent(Metafile childMetafile,\n            String parentMetafileUuid)", "testcase": false, "constructor": false}, {"identifier": "removeMetafileFromParent", "parameters": "(String childMetafileUuid,\n            String parentMetafileUuid)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeMetafileFromParent(String childMetafileUuid,\n            String parentMetafileUuid)", "full_signature": "@Override public boolean removeMetafileFromParent(String childMetafileUuid,\n            String parentMetafileUuid)", "class_method_signature": "VufsServiceImpl.removeMetafileFromParent(String childMetafileUuid,\n            String parentMetafileUuid)", "testcase": false, "constructor": false}, {"identifier": "getAllocationStrategyByMetafileUuid", "parameters": "(String metafileUuid)", "modifiers": "@Override public", "return": "AllocationStrategy", "signature": "AllocationStrategy getAllocationStrategyByMetafileUuid(String metafileUuid)", "full_signature": "@Override public AllocationStrategy getAllocationStrategyByMetafileUuid(String metafileUuid)", "class_method_signature": "VufsServiceImpl.getAllocationStrategyByMetafileUuid(String metafileUuid)", "testcase": false, "constructor": false}, {"identifier": "setAllocationStrategyByMetafileUuid", "parameters": "(String metafileUuid,\n            AllocationStrategy allocationStrategy)", "modifiers": "@Override public", "return": "void", "signature": "void setAllocationStrategyByMetafileUuid(String metafileUuid,\n            AllocationStrategy allocationStrategy)", "full_signature": "@Override public void setAllocationStrategyByMetafileUuid(String metafileUuid,\n            AllocationStrategy allocationStrategy)", "class_method_signature": "VufsServiceImpl.setAllocationStrategyByMetafileUuid(String metafileUuid,\n            AllocationStrategy allocationStrategy)", "testcase": false, "constructor": false}, {"identifier": "getExceptionInfo", "parameters": "(Metatable currentMetatable, String metafileUuid,\n            String methodName)", "modifiers": "private", "return": "String", "signature": "String getExceptionInfo(Metatable currentMetatable, String metafileUuid,\n            String methodName)", "full_signature": "private String getExceptionInfo(Metatable currentMetatable, String metafileUuid,\n            String methodName)", "class_method_signature": "VufsServiceImpl.getExceptionInfo(Metatable currentMetatable, String metafileUuid,\n            String methodName)", "testcase": false, "constructor": false}, {"identifier": "persistChanges", "parameters": "()", "modifiers": "@PreDestroy public", "return": "void", "signature": "void persistChanges()", "full_signature": "@PreDestroy public void persistChanges()", "class_method_signature": "VufsServiceImpl.persistChanges()", "testcase": false, "constructor": false}], "file": "vufs/src/main/java/com/stnetix/ariaddna/vufs/service/VufsServiceImpl.java"}, "focal_method": {"identifier": "getMetafileByUuid", "parameters": "(String fileUuid)", "modifiers": "@Override public", "return": "Metafile", "body": "@Override\n    public Metafile getMetafileByUuid(String fileUuid) throws MetafileDoesNotExistException {\n        for (Metafile metafile : currentMetatable.getMetafileSet()) {\n            if (metafile.getFileUuid().equalsIgnoreCase(fileUuid)) {\n                return metafile;\n            }\n        }\n        throw new MetafileDoesNotExistException(getExceptionInfo(currentMetatable, fileUuid,\n                \"getMetafileByUuid\"));\n    }", "signature": "Metafile getMetafileByUuid(String fileUuid)", "full_signature": "@Override public Metafile getMetafileByUuid(String fileUuid)", "class_method_signature": "VufsServiceImpl.getMetafileByUuid(String fileUuid)", "testcase": false, "constructor": false, "invocations": ["getMetafileSet", "equalsIgnoreCase", "getFileUuid", "getExceptionInfo"]}, "repository": {"repo_id": 73354878, "url": "https://github.com/StnetixDevTeam/ariADDna", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 11, "size": 971, "license": "licensed"}}