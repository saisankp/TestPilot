{"test_class": {"identifier": "HibernateReservedValueStoreTest", "superclass": "extends DhisSpringTest", "interfaces": "", "fields": [{"original_string": "private static int counter = 1;", "modifier": "private static", "type": "int", "declarator": "counter = 1", "var_name": "counter"}, {"original_string": "private final ReservedValue reservedValueA = new ReservedValue( Objects.TRACKEDENTITYATTRIBUTE.name(), \"A\",\n        \"00X\", \"001\", null );", "modifier": "private final", "type": "ReservedValue", "declarator": "reservedValueA = new ReservedValue( Objects.TRACKEDENTITYATTRIBUTE.name(), \"A\",\n        \"00X\", \"001\", null )", "var_name": "reservedValueA"}, {"original_string": "private final ReservedValue usedValueA = new ReservedValue( Objects.TRACKEDENTITYATTRIBUTE.name(), \"A\",\n        \"00X\", \"002\", null );", "modifier": "private final", "type": "ReservedValue", "declarator": "usedValueA = new ReservedValue( Objects.TRACKEDENTITYATTRIBUTE.name(), \"A\",\n        \"00X\", \"002\", null )", "var_name": "usedValueA"}, {"original_string": "private Date futureDate;", "modifier": "private", "type": "Date", "declarator": "futureDate", "var_name": "futureDate"}, {"original_string": "@Autowired\n    private ReservedValueStore reservedValueStore;", "modifier": "@Autowired\n    private", "type": "ReservedValueStore", "declarator": "reservedValueStore", "var_name": "reservedValueStore"}, {"original_string": "@Autowired\n    private OrganisationUnitStore organisationUnitStore;", "modifier": "@Autowired\n    private", "type": "OrganisationUnitStore", "declarator": "organisationUnitStore", "var_name": "organisationUnitStore"}, {"original_string": "@Autowired\n    private TrackedEntityInstanceStore trackedEntityInstanceStore;", "modifier": "@Autowired\n    private", "type": "TrackedEntityInstanceStore", "declarator": "trackedEntityInstanceStore", "var_name": "trackedEntityInstanceStore"}, {"original_string": "@Autowired\n    private TrackedEntityAttributeStore trackedEntityAttributeStore;", "modifier": "@Autowired\n    private", "type": "TrackedEntityAttributeStore", "declarator": "trackedEntityAttributeStore", "var_name": "trackedEntityAttributeStore"}, {"original_string": "@Autowired\n    private TrackedEntityAttributeValueService trackedEntityAttributeValueService;", "modifier": "@Autowired\n    private", "type": "TrackedEntityAttributeValueService", "declarator": "trackedEntityAttributeValueService", "var_name": "trackedEntityAttributeValueService"}], "file": "dhis-2/dhis-services/dhis-service-core/src/test/java/org/hisp/dhis/reservedvalue/hibernate/HibernateReservedValueStoreTest.java"}, "test_case": {"identifier": "reserveValuesMultipleValuesAlreadyReservedAndUsed", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void reserveValuesMultipleValuesAlreadyReservedAndUsed()\n    {\n        int count = reservedValueStore.getCount();\n\n        List<ReservedValue> res = reservedValueStore\n            .reserveValuesJpa( reservedValueA, Lists.newArrayList( \"001\", \"002\", \"003\", \"004\" ) );\n\n        assertEquals( 1, count );\n        assertEquals( 3, res.size() );\n        assertEquals( ( count + 3 ), reservedValueStore.getCount() );\n    }", "signature": "void reserveValuesMultipleValuesAlreadyReservedAndUsed()", "full_signature": "@Test public void reserveValuesMultipleValuesAlreadyReservedAndUsed()", "class_method_signature": "HibernateReservedValueStoreTest.reserveValuesMultipleValuesAlreadyReservedAndUsed()", "testcase": true, "constructor": false, "invocations": ["getCount", "reserveValuesJpa", "newArrayList", "assertEquals", "assertEquals", "size", "assertEquals", "getCount"]}, "focal_class": {"identifier": "HibernateReservedValueStore", "superclass": "extends HibernateGenericStore<ReservedValue>", "interfaces": "implements ReservedValueStore", "fields": [{"original_string": "private final BatchHandlerFactory batchHandlerFactory;", "modifier": "private final", "type": "BatchHandlerFactory", "declarator": "batchHandlerFactory", "var_name": "batchHandlerFactory"}], "methods": [{"identifier": "HibernateReservedValueStore", "parameters": "( SessionFactory sessionFactory, JdbcTemplate jdbcTemplate,\n        ApplicationEventPublisher publisher, BatchHandlerFactory batchHandlerFactory )", "modifiers": "public", "return": "", "signature": " HibernateReservedValueStore( SessionFactory sessionFactory, JdbcTemplate jdbcTemplate,\n        ApplicationEventPublisher publisher, BatchHandlerFactory batchHandlerFactory )", "full_signature": "public  HibernateReservedValueStore( SessionFactory sessionFactory, JdbcTemplate jdbcTemplate,\n        ApplicationEventPublisher publisher, BatchHandlerFactory batchHandlerFactory )", "class_method_signature": "HibernateReservedValueStore.HibernateReservedValueStore( SessionFactory sessionFactory, JdbcTemplate jdbcTemplate,\n        ApplicationEventPublisher publisher, BatchHandlerFactory batchHandlerFactory )", "testcase": false, "constructor": true}, {"identifier": "reserveValues", "parameters": "( ReservedValue reservedValue,\n        List<String> values )", "modifiers": "@Override public", "return": "List<ReservedValue>", "signature": "List<ReservedValue> reserveValues( ReservedValue reservedValue,\n        List<String> values )", "full_signature": "@Override public List<ReservedValue> reserveValues( ReservedValue reservedValue,\n        List<String> values )", "class_method_signature": "HibernateReservedValueStore.reserveValues( ReservedValue reservedValue,\n        List<String> values )", "testcase": false, "constructor": false}, {"identifier": "reserveValuesJpa", "parameters": "( ReservedValue reservedValue, List<String> values )", "modifiers": "@Override public", "return": "List<ReservedValue>", "signature": "List<ReservedValue> reserveValuesJpa( ReservedValue reservedValue, List<String> values )", "full_signature": "@Override public List<ReservedValue> reserveValuesJpa( ReservedValue reservedValue, List<String> values )", "class_method_signature": "HibernateReservedValueStore.reserveValuesJpa( ReservedValue reservedValue, List<String> values )", "testcase": false, "constructor": false}, {"identifier": "getGeneratedValues", "parameters": "( ReservedValue reservedValue, List<String> values )", "modifiers": "private", "return": "List<ReservedValue>", "signature": "List<ReservedValue> getGeneratedValues( ReservedValue reservedValue, List<String> values )", "full_signature": "private List<ReservedValue> getGeneratedValues( ReservedValue reservedValue, List<String> values )", "class_method_signature": "HibernateReservedValueStore.getGeneratedValues( ReservedValue reservedValue, List<String> values )", "testcase": false, "constructor": false}, {"identifier": "getIfReservedValues", "parameters": "( ReservedValue reservedValue,\n        List<String> values )", "modifiers": "@Override public", "return": "List<ReservedValue>", "signature": "List<ReservedValue> getIfReservedValues( ReservedValue reservedValue,\n        List<String> values )", "full_signature": "@Override public List<ReservedValue> getIfReservedValues( ReservedValue reservedValue,\n        List<String> values )", "class_method_signature": "HibernateReservedValueStore.getIfReservedValues( ReservedValue reservedValue,\n        List<String> values )", "testcase": false, "constructor": false}, {"identifier": "getNumberOfUsedValues", "parameters": "( ReservedValue reservedValue )", "modifiers": "@Override public", "return": "int", "signature": "int getNumberOfUsedValues( ReservedValue reservedValue )", "full_signature": "@Override public int getNumberOfUsedValues( ReservedValue reservedValue )", "class_method_signature": "HibernateReservedValueStore.getNumberOfUsedValues( ReservedValue reservedValue )", "testcase": false, "constructor": false}, {"identifier": "removeExpiredReservations", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void removeExpiredReservations()", "full_signature": "@Override public void removeExpiredReservations()", "class_method_signature": "HibernateReservedValueStore.removeExpiredReservations()", "testcase": false, "constructor": false}, {"identifier": "useReservedValue", "parameters": "( String ownerUID, String value )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean useReservedValue( String ownerUID, String value )", "full_signature": "@Override public boolean useReservedValue( String ownerUID, String value )", "class_method_signature": "HibernateReservedValueStore.useReservedValue( String ownerUID, String value )", "testcase": false, "constructor": false}, {"identifier": "deleteReservedValueByUid", "parameters": "( String uid )", "modifiers": "@Override public", "return": "void", "signature": "void deleteReservedValueByUid( String uid )", "full_signature": "@Override public void deleteReservedValueByUid( String uid )", "class_method_signature": "HibernateReservedValueStore.deleteReservedValueByUid( String uid )", "testcase": false, "constructor": false}, {"identifier": "isReserved", "parameters": "( String ownerObject, String ownerUID, String value )", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isReserved( String ownerObject, String ownerUID, String value )", "full_signature": "@Override public boolean isReserved( String ownerObject, String ownerUID, String value )", "class_method_signature": "HibernateReservedValueStore.isReserved( String ownerObject, String ownerUID, String value )", "testcase": false, "constructor": false}, {"identifier": "getIfAvailable", "parameters": "( ReservedValue reservedValue, List<String> values )", "modifiers": "private", "return": "List<String>", "signature": "List<String> getIfAvailable( ReservedValue reservedValue, List<String> values )", "full_signature": "private List<String> getIfAvailable( ReservedValue reservedValue, List<String> values )", "class_method_signature": "HibernateReservedValueStore.getIfAvailable( ReservedValue reservedValue, List<String> values )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/reservedvalue/hibernate/HibernateReservedValueStore.java"}, "focal_method": {"identifier": "reserveValuesJpa", "parameters": "( ReservedValue reservedValue, List<String> values )", "modifiers": "@Override public", "return": "List<ReservedValue>", "body": "@Override\n    public List<ReservedValue> reserveValuesJpa( ReservedValue reservedValue, List<String> values )\n    {\n        List<ReservedValue> toAdd = getGeneratedValues( reservedValue, values );\n        toAdd.forEach( rv -> save( rv ) );\n        return toAdd;\n    }", "signature": "List<ReservedValue> reserveValuesJpa( ReservedValue reservedValue, List<String> values )", "full_signature": "@Override public List<ReservedValue> reserveValuesJpa( ReservedValue reservedValue, List<String> values )", "class_method_signature": "HibernateReservedValueStore.reserveValuesJpa( ReservedValue reservedValue, List<String> values )", "testcase": false, "constructor": false, "invocations": ["getGeneratedValues", "forEach", "save"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}