{"test_class": {"identifier": "CoordinatesValidatorTest", "superclass": "extends AntennaTestWithMockedContext", "interfaces": "", "fields": [{"original_string": "private Artifact artifact;", "modifier": "private", "type": "Artifact", "declarator": "artifact", "var_name": "artifact"}, {"original_string": "private List<Artifact> artifacts;", "modifier": "private", "type": "List<Artifact>", "declarator": "artifacts", "var_name": "artifacts"}, {"original_string": "private CoordinatesValidator validator;", "modifier": "private", "type": "CoordinatesValidator", "declarator": "validator", "var_name": "validator"}, {"original_string": "@Rule\n    public TemporaryFolder tmpFolder = new TemporaryFolder();", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "tmpFolder = new TemporaryFolder()", "var_name": "tmpFolder"}], "file": "modules/simple-validators/src/test/java/org/eclipse/sw360/antenna/validators/workflow/processors/CoordinatesValidatorTest.java"}, "test_case": {"identifier": "validateCoordinatesTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void validateCoordinatesTest() {\n        assertThat(validator.evaluate(artifacts).getEvaluationResults().size()).isEqualTo(1);\n    }", "signature": "void validateCoordinatesTest()", "full_signature": "@Test public void validateCoordinatesTest()", "class_method_signature": "CoordinatesValidatorTest.validateCoordinatesTest()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "size", "getEvaluationResults", "evaluate"]}, "focal_class": {"identifier": "CoordinatesValidator", "superclass": "extends AbstractComplianceChecker", "interfaces": "", "fields": [{"original_string": "private IEvaluationResult.Severity missingCoordinatesSeverity;", "modifier": "private", "type": "IEvaluationResult.Severity", "declarator": "missingCoordinatesSeverity", "var_name": "missingCoordinatesSeverity"}], "methods": [{"identifier": "CoordinatesValidator", "parameters": "()", "modifiers": "public", "return": "", "signature": " CoordinatesValidator()", "full_signature": "public  CoordinatesValidator()", "class_method_signature": "CoordinatesValidator.CoordinatesValidator()", "testcase": false, "constructor": true}, {"identifier": "evaluate", "parameters": "(Collection<Artifact> artifacts)", "modifiers": "@Override public", "return": "IPolicyEvaluation", "signature": "IPolicyEvaluation evaluate(Collection<Artifact> artifacts)", "full_signature": "@Override public IPolicyEvaluation evaluate(Collection<Artifact> artifacts)", "class_method_signature": "CoordinatesValidator.evaluate(Collection<Artifact> artifacts)", "testcase": false, "constructor": false}, {"identifier": "getRulesetDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getRulesetDescription()", "full_signature": "@Override public String getRulesetDescription()", "class_method_signature": "CoordinatesValidator.getRulesetDescription()", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(Map<String, String> configMap)", "modifiers": "@Override public", "return": "void", "signature": "void configure(Map<String, String> configMap)", "full_signature": "@Override public void configure(Map<String, String> configMap)", "class_method_signature": "CoordinatesValidator.configure(Map<String, String> configMap)", "testcase": false, "constructor": false}], "file": "modules/simple-validators/src/main/java/org/eclipse/sw360/antenna/validators/workflow/processors/CoordinatesValidator.java"}, "focal_method": {"identifier": "evaluate", "parameters": "(Collection<Artifact> artifacts)", "modifiers": "@Override public", "return": "IPolicyEvaluation", "body": "@Override\n    public IPolicyEvaluation evaluate(Collection<Artifact> artifacts) {\n        DefaultPolicyEvaluation policyEvaluation = new DefaultPolicyEvaluation();\n        artifacts.stream()\n                .filter(artifact -> ! artifact.getFlag(Artifact.IS_PROPRIETARY_FLAG_KEY))\n                .filter(artifact -> artifact.askForAll(ArtifactCoordinates.class).size() == 0)\n                .forEach(artifact -> policyEvaluation.addEvaluationResult(\"CoordinatesValidator::rule1\", \"Artifact has no Coordinates\", missingCoordinatesSeverity, artifact));\n        return policyEvaluation;\n    }", "signature": "IPolicyEvaluation evaluate(Collection<Artifact> artifacts)", "full_signature": "@Override public IPolicyEvaluation evaluate(Collection<Artifact> artifacts)", "class_method_signature": "CoordinatesValidator.evaluate(Collection<Artifact> artifacts)", "testcase": false, "constructor": false, "invocations": ["forEach", "filter", "filter", "stream", "getFlag", "size", "askForAll", "addEvaluationResult"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}