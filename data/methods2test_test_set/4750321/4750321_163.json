{"test_class": {"identifier": "DirectoryDataStoreTest", "superclass": "extends TestSupport", "interfaces": "", "fields": [{"original_string": "private static final String DESTDIR = \"shapes\";", "modifier": "private static final", "type": "String", "declarator": "DESTDIR = \"shapes\"", "var_name": "DESTDIR"}], "file": "modules/unsupported/directory/src/test/java/org/geotools/data/directory/DirectoryDataStoreTest.java"}, "test_case": {"identifier": "testTypeNames", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTypeNames() throws Exception {\n        copyFile(\"Bridges.properties\", DESTDIR);\n        copyFile(\"Buildings.properties\", DESTDIR);\n        copyShapefiles(\"shapes/archsites.shp\");\n        File f = copyShapefiles(\"shapes/bugsites.shp\");\n        tempDir = f.getParentFile();\n        \n        DataStore store = new DirectoryDataStore(tempDir, NSURI);\n        List<String> typeNames = Arrays.asList(store.getTypeNames());\n        assertEquals(4, typeNames.size());\n        assertTrue(typeNames.contains(\"archsites\"));\n        assertTrue(typeNames.contains(\"bugsites\"));\n        assertTrue(typeNames.contains(\"Bridges\"));\n        assertTrue(typeNames.contains(\"Buildings\"));\n    }", "signature": "void testTypeNames()", "full_signature": "@Test public void testTypeNames()", "class_method_signature": "DirectoryDataStoreTest.testTypeNames()", "testcase": true, "constructor": false, "invocations": ["copyFile", "copyFile", "copyShapefiles", "copyShapefiles", "getParentFile", "asList", "getTypeNames", "assertEquals", "size", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "DirectoryDataStore", "superclass": "", "interfaces": "implements DataStore", "fields": [{"original_string": "DirectoryTypeCache cache;", "modifier": "", "type": "DirectoryTypeCache", "declarator": "cache", "var_name": "cache"}, {"original_string": "DirectoryLockingManager lm;", "modifier": "", "type": "DirectoryLockingManager", "declarator": "lm", "var_name": "lm"}], "methods": [{"identifier": "DirectoryDataStore", "parameters": "(File directory, URI namespaceURI)", "modifiers": "public", "return": "", "signature": " DirectoryDataStore(File directory, URI namespaceURI)", "full_signature": "public  DirectoryDataStore(File directory, URI namespaceURI)", "class_method_signature": "DirectoryDataStore.DirectoryDataStore(File directory, URI namespaceURI)", "testcase": false, "constructor": true}, {"identifier": "getFeatureReader", "parameters": "(\n            Query query, Transaction transaction)", "modifiers": "public", "return": "FeatureReader<SimpleFeatureType, SimpleFeature>", "signature": "FeatureReader<SimpleFeatureType, SimpleFeature> getFeatureReader(\n            Query query, Transaction transaction)", "full_signature": "public FeatureReader<SimpleFeatureType, SimpleFeature> getFeatureReader(\n            Query query, Transaction transaction)", "class_method_signature": "DirectoryDataStore.getFeatureReader(\n            Query query, Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "getFeatureSource", "parameters": "(\n            String typeName)", "modifiers": "public", "return": "FeatureSource<SimpleFeatureType, SimpleFeature>", "signature": "FeatureSource<SimpleFeatureType, SimpleFeature> getFeatureSource(\n            String typeName)", "full_signature": "public FeatureSource<SimpleFeatureType, SimpleFeature> getFeatureSource(\n            String typeName)", "class_method_signature": "DirectoryDataStore.getFeatureSource(\n            String typeName)", "testcase": false, "constructor": false}, {"identifier": "getFeatureWriter", "parameters": "(\n            String typeName, Filter filter, Transaction transaction)", "modifiers": "public", "return": "FeatureWriter<SimpleFeatureType, SimpleFeature>", "signature": "FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriter(\n            String typeName, Filter filter, Transaction transaction)", "full_signature": "public FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriter(\n            String typeName, Filter filter, Transaction transaction)", "class_method_signature": "DirectoryDataStore.getFeatureWriter(\n            String typeName, Filter filter, Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "getFeatureWriter", "parameters": "(\n            String typeName, Transaction transaction)", "modifiers": "public", "return": "FeatureWriter<SimpleFeatureType, SimpleFeature>", "signature": "FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriter(\n            String typeName, Transaction transaction)", "full_signature": "public FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriter(\n            String typeName, Transaction transaction)", "class_method_signature": "DirectoryDataStore.getFeatureWriter(\n            String typeName, Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "getFeatureWriterAppend", "parameters": "(\n            String typeName, Transaction transaction)", "modifiers": "public", "return": "FeatureWriter<SimpleFeatureType, SimpleFeature>", "signature": "FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriterAppend(\n            String typeName, Transaction transaction)", "full_signature": "public FeatureWriter<SimpleFeatureType, SimpleFeature> getFeatureWriterAppend(\n            String typeName, Transaction transaction)", "class_method_signature": "DirectoryDataStore.getFeatureWriterAppend(\n            String typeName, Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "getLockingManager", "parameters": "()", "modifiers": "public", "return": "LockingManager", "signature": "LockingManager getLockingManager()", "full_signature": "public LockingManager getLockingManager()", "class_method_signature": "DirectoryDataStore.getLockingManager()", "testcase": false, "constructor": false}, {"identifier": "getSchema", "parameters": "(String typeName)", "modifiers": "public", "return": "SimpleFeatureType", "signature": "SimpleFeatureType getSchema(String typeName)", "full_signature": "public SimpleFeatureType getSchema(String typeName)", "class_method_signature": "DirectoryDataStore.getSchema(String typeName)", "testcase": false, "constructor": false}, {"identifier": "getTypeNames", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getTypeNames()", "full_signature": "public String[] getTypeNames()", "class_method_signature": "DirectoryDataStore.getTypeNames()", "testcase": false, "constructor": false}, {"identifier": "getView", "parameters": "(Query query)", "modifiers": "public", "return": "FeatureSource<SimpleFeatureType, SimpleFeature>", "signature": "FeatureSource<SimpleFeatureType, SimpleFeature> getView(Query query)", "full_signature": "public FeatureSource<SimpleFeatureType, SimpleFeature> getView(Query query)", "class_method_signature": "DirectoryDataStore.getView(Query query)", "testcase": false, "constructor": false}, {"identifier": "updateSchema", "parameters": "(String typeName, SimpleFeatureType featureType)", "modifiers": "public", "return": "void", "signature": "void updateSchema(String typeName, SimpleFeatureType featureType)", "full_signature": "public void updateSchema(String typeName, SimpleFeatureType featureType)", "class_method_signature": "DirectoryDataStore.updateSchema(String typeName, SimpleFeatureType featureType)", "testcase": false, "constructor": false}, {"identifier": "createSchema", "parameters": "(SimpleFeatureType featureType)", "modifiers": "public", "return": "void", "signature": "void createSchema(SimpleFeatureType featureType)", "full_signature": "public void createSchema(SimpleFeatureType featureType)", "class_method_signature": "DirectoryDataStore.createSchema(SimpleFeatureType featureType)", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void dispose()", "full_signature": "public void dispose()", "class_method_signature": "DirectoryDataStore.dispose()", "testcase": false, "constructor": false}, {"identifier": "getFeatureSource", "parameters": "(\n            Name typeName)", "modifiers": "public", "return": "FeatureSource<SimpleFeatureType, SimpleFeature>", "signature": "FeatureSource<SimpleFeatureType, SimpleFeature> getFeatureSource(\n            Name typeName)", "full_signature": "public FeatureSource<SimpleFeatureType, SimpleFeature> getFeatureSource(\n            Name typeName)", "class_method_signature": "DirectoryDataStore.getFeatureSource(\n            Name typeName)", "testcase": false, "constructor": false}, {"identifier": "getInfo", "parameters": "()", "modifiers": "public", "return": "ServiceInfo", "signature": "ServiceInfo getInfo()", "full_signature": "public ServiceInfo getInfo()", "class_method_signature": "DirectoryDataStore.getInfo()", "testcase": false, "constructor": false}, {"identifier": "getNames", "parameters": "()", "modifiers": "public", "return": "List<Name>", "signature": "List<Name> getNames()", "full_signature": "public List<Name> getNames()", "class_method_signature": "DirectoryDataStore.getNames()", "testcase": false, "constructor": false}, {"identifier": "getSchema", "parameters": "(Name name)", "modifiers": "public", "return": "SimpleFeatureType", "signature": "SimpleFeatureType getSchema(Name name)", "full_signature": "public SimpleFeatureType getSchema(Name name)", "class_method_signature": "DirectoryDataStore.getSchema(Name name)", "testcase": false, "constructor": false}, {"identifier": "updateSchema", "parameters": "(Name typeName, SimpleFeatureType featureType)", "modifiers": "public", "return": "void", "signature": "void updateSchema(Name typeName, SimpleFeatureType featureType)", "full_signature": "public void updateSchema(Name typeName, SimpleFeatureType featureType)", "class_method_signature": "DirectoryDataStore.updateSchema(Name typeName, SimpleFeatureType featureType)", "testcase": false, "constructor": false}, {"identifier": "getDataStore", "parameters": "(String typeName)", "modifiers": "public", "return": "DataStore", "signature": "DataStore getDataStore(String typeName)", "full_signature": "public DataStore getDataStore(String typeName)", "class_method_signature": "DirectoryDataStore.getDataStore(String typeName)", "testcase": false, "constructor": false}], "file": "modules/unsupported/directory/src/main/java/org/geotools/data/directory/DirectoryDataStore.java"}, "focal_method": {"identifier": "getTypeNames", "parameters": "()", "modifiers": "public", "return": "String[]", "body": "public String[] getTypeNames() throws IOException {\n        Set<String> typeNames = cache.getTypeNames();\n        return typeNames.toArray(new String[typeNames.size()]);\n    }", "signature": "String[] getTypeNames()", "full_signature": "public String[] getTypeNames()", "class_method_signature": "DirectoryDataStore.getTypeNames()", "testcase": false, "constructor": false, "invocations": ["getTypeNames", "toArray", "size"]}, "repository": {"repo_id": 4750321, "url": "https://github.com/HGitMaster/geotools-osgi", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 114107, "license": "licensed"}}