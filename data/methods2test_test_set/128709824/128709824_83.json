{"test_class": {"identifier": "FilterChainTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/api/src/test/java/com/alipay/sofa/rpc/filter/FilterChainTest.java"}, "test_case": {"identifier": "buildProviderChain", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void buildProviderChain() {\n\n        ProviderConfig providerConfig = new ProviderConfig();\n        providerConfig.setFilter(Arrays.asList(\"testChainFilter0\", \"-testChainFilter8\"));\n        providerConfig.setInterfaceId(Serializer.class.getName());\n\n        ConsumerConfig consumerConfig = new ConsumerConfig();\n        ArrayList<Filter> list = new ArrayList<Filter>();\n        consumerConfig.setFilter(Arrays.asList(\"testChainFilter0\", \"-testChainFilter8\"));\n        list.add(new TestChainFilter1());\n        list.add(new TestChainFilter2());\n        list.add(new TestChainFilter3());\n        list.add(new TestChainFilter4());\n        list.add(new ExcludeFilter(\"-testChainFilter5\"));\n        consumerConfig.setFilterRef(list);\n        consumerConfig.setInterfaceId(Serializer.class.getName());\n\n        // mock provider chain (0,6,7\uff09\n        FilterChain providerChain = FilterChain.buildProviderChain(providerConfig,\n            new TestProviderFilterInvoker(providerConfig));\n        // mock consumer chain\uff080,7,2,4)\n        FilterChain consumerChain = FilterChain.buildConsumerChain(consumerConfig,\n            new TestConsumerFilterInvoker(consumerConfig, providerChain));\n        Assert.assertNotNull(consumerChain.getChain());\n\n        SofaRequest request = new SofaRequest();\n        request.setMethodArgs(new String[] { \"xxx\" });\n        request.setInvokeType(\"sync\");\n        String result = (String) consumerChain.invoke(request).getAppResponse();\n        Assert.assertEquals(\"xxx_q0_q7_q2_q4_q0_q6_q7_s7_s6_s0_s4_s2_s7_s0\", result);\n\n        request = new SofaRequest();\n        request.setMethodArgs(new String[] { \"xxx\" });\n        request.setInvokeType(\"callback\");\n        SofaResponse response = consumerChain.invoke(request);\n        consumerChain.onAsyncResponse(consumerConfig, request, response, null);\n        result = (String) response.getAppResponse();\n        Assert.assertEquals(\"xxx_q0_q7_q2_q4_q0_q6_q7_a4_a2_a7_a0\", result);\n    }", "signature": "void buildProviderChain()", "full_signature": "@Test public void buildProviderChain()", "class_method_signature": "FilterChainTest.buildProviderChain()", "testcase": true, "constructor": false, "invocations": ["setFilter", "asList", "setInterfaceId", "getName", "setFilter", "asList", "add", "add", "add", "add", "add", "setFilterRef", "setInterfaceId", "getName", "buildProviderChain", "buildConsumerChain", "assertNotNull", "getChain", "setMethodArgs", "setInvokeType", "getAppResponse", "invoke", "assertEquals", "setMethodArgs", "setInvokeType", "invoke", "onAsyncResponse", "getAppResponse", "assertEquals"]}, "focal_class": {"identifier": "FilterChain", "superclass": "", "interfaces": "implements Invoker", "fields": [{"original_string": "private static final Logger                              LOGGER                = LoggerFactory\n                                                                                       .getLogger(FilterChain.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER                = LoggerFactory\n                                                                                       .getLogger(FilterChain.class)", "var_name": "LOGGER"}, {"original_string": "private final static Map<String, ExtensionClass<Filter>> PROVIDER_AUTO_ACTIVES = Collections\n                                                                                       .synchronizedMap(new LinkedHashMap<String, ExtensionClass<Filter>>());", "modifier": "private final static", "type": "Map<String, ExtensionClass<Filter>>", "declarator": "PROVIDER_AUTO_ACTIVES = Collections\n                                                                                       .synchronizedMap(new LinkedHashMap<String, ExtensionClass<Filter>>())", "var_name": "PROVIDER_AUTO_ACTIVES"}, {"original_string": "private final static Map<String, ExtensionClass<Filter>> CONSUMER_AUTO_ACTIVES = Collections\n                                                                                       .synchronizedMap(new LinkedHashMap<String, ExtensionClass<Filter>>());", "modifier": "private final static", "type": "Map<String, ExtensionClass<Filter>>", "declarator": "CONSUMER_AUTO_ACTIVES = Collections\n                                                                                       .synchronizedMap(new LinkedHashMap<String, ExtensionClass<Filter>>())", "var_name": "CONSUMER_AUTO_ACTIVES"}, {"original_string": "private final static ExtensionLoader<Filter>             EXTENSION_LOADER      = buildLoader();", "modifier": "private final static", "type": "ExtensionLoader<Filter>", "declarator": "EXTENSION_LOADER      = buildLoader()", "var_name": "EXTENSION_LOADER"}, {"original_string": "private FilterInvoker invokerChain;", "modifier": "private", "type": "FilterInvoker", "declarator": "invokerChain", "var_name": "invokerChain"}, {"original_string": "private List<Filter>  loadedFilters;", "modifier": "private", "type": "List<Filter>", "declarator": "loadedFilters", "var_name": "loadedFilters"}], "methods": [{"identifier": "buildLoader", "parameters": "()", "modifiers": "private static", "return": "ExtensionLoader<Filter>", "signature": "ExtensionLoader<Filter> buildLoader()", "full_signature": "private static ExtensionLoader<Filter> buildLoader()", "class_method_signature": "FilterChain.buildLoader()", "testcase": false, "constructor": false}, {"identifier": "FilterChain", "parameters": "(List<Filter> filters, FilterInvoker lastInvoker, AbstractInterfaceConfig config)", "modifiers": "protected", "return": "", "signature": " FilterChain(List<Filter> filters, FilterInvoker lastInvoker, AbstractInterfaceConfig config)", "full_signature": "protected  FilterChain(List<Filter> filters, FilterInvoker lastInvoker, AbstractInterfaceConfig config)", "class_method_signature": "FilterChain.FilterChain(List<Filter> filters, FilterInvoker lastInvoker, AbstractInterfaceConfig config)", "testcase": false, "constructor": true}, {"identifier": "buildProviderChain", "parameters": "(ProviderConfig<?> providerConfig, FilterInvoker lastFilter)", "modifiers": "public static", "return": "FilterChain", "signature": "FilterChain buildProviderChain(ProviderConfig<?> providerConfig, FilterInvoker lastFilter)", "full_signature": "public static FilterChain buildProviderChain(ProviderConfig<?> providerConfig, FilterInvoker lastFilter)", "class_method_signature": "FilterChain.buildProviderChain(ProviderConfig<?> providerConfig, FilterInvoker lastFilter)", "testcase": false, "constructor": false}, {"identifier": "buildConsumerChain", "parameters": "(ConsumerConfig<?> consumerConfig, FilterInvoker lastFilter)", "modifiers": "public static", "return": "FilterChain", "signature": "FilterChain buildConsumerChain(ConsumerConfig<?> consumerConfig, FilterInvoker lastFilter)", "full_signature": "public static FilterChain buildConsumerChain(ConsumerConfig<?> consumerConfig, FilterInvoker lastFilter)", "class_method_signature": "FilterChain.buildConsumerChain(ConsumerConfig<?> consumerConfig, FilterInvoker lastFilter)", "testcase": false, "constructor": false}, {"identifier": "selectActualFilters", "parameters": "(AbstractInterfaceConfig config,\n                                                    Map<String, ExtensionClass<Filter>> autoActiveFilters)", "modifiers": "private static", "return": "List<Filter>", "signature": "List<Filter> selectActualFilters(AbstractInterfaceConfig config,\n                                                    Map<String, ExtensionClass<Filter>> autoActiveFilters)", "full_signature": "private static List<Filter> selectActualFilters(AbstractInterfaceConfig config,\n                                                    Map<String, ExtensionClass<Filter>> autoActiveFilters)", "class_method_signature": "FilterChain.selectActualFilters(AbstractInterfaceConfig config,\n                                                    Map<String, ExtensionClass<Filter>> autoActiveFilters)", "testcase": false, "constructor": false}, {"identifier": "parseExcludeFilter", "parameters": "(List<Filter> customFilters)", "modifiers": "private static", "return": "HashSet<String>", "signature": "HashSet<String> parseExcludeFilter(List<Filter> customFilters)", "full_signature": "private static HashSet<String> parseExcludeFilter(List<Filter> customFilters)", "class_method_signature": "FilterChain.parseExcludeFilter(List<Filter> customFilters)", "testcase": false, "constructor": false}, {"identifier": "startsWithExcludePrefix", "parameters": "(String excludeName)", "modifiers": "private static", "return": "boolean", "signature": "boolean startsWithExcludePrefix(String excludeName)", "full_signature": "private static boolean startsWithExcludePrefix(String excludeName)", "class_method_signature": "FilterChain.startsWithExcludePrefix(String excludeName)", "testcase": false, "constructor": false}, {"identifier": "invoke", "parameters": "(SofaRequest sofaRequest)", "modifiers": "@Override public", "return": "SofaResponse", "signature": "SofaResponse invoke(SofaRequest sofaRequest)", "full_signature": "@Override public SofaResponse invoke(SofaRequest sofaRequest)", "class_method_signature": "FilterChain.invoke(SofaRequest sofaRequest)", "testcase": false, "constructor": false}, {"identifier": "onAsyncResponse", "parameters": "(ConsumerConfig config, SofaRequest request, SofaResponse response, Throwable throwable)", "modifiers": "public", "return": "void", "signature": "void onAsyncResponse(ConsumerConfig config, SofaRequest request, SofaResponse response, Throwable throwable)", "full_signature": "public void onAsyncResponse(ConsumerConfig config, SofaRequest request, SofaResponse response, Throwable throwable)", "class_method_signature": "FilterChain.onAsyncResponse(ConsumerConfig config, SofaRequest request, SofaResponse response, Throwable throwable)", "testcase": false, "constructor": false}, {"identifier": "getChain", "parameters": "()", "modifiers": "protected", "return": "Invoker", "signature": "Invoker getChain()", "full_signature": "protected Invoker getChain()", "class_method_signature": "FilterChain.getChain()", "testcase": false, "constructor": false}], "file": "core/api/src/main/java/com/alipay/sofa/rpc/filter/FilterChain.java"}, "focal_method": {"identifier": "buildProviderChain", "parameters": "(ProviderConfig<?> providerConfig, FilterInvoker lastFilter)", "modifiers": "public static", "return": "FilterChain", "body": "public static FilterChain buildProviderChain(ProviderConfig<?> providerConfig, FilterInvoker lastFilter) {\n        return new FilterChain(selectActualFilters(providerConfig, PROVIDER_AUTO_ACTIVES), lastFilter, providerConfig);\n    }", "signature": "FilterChain buildProviderChain(ProviderConfig<?> providerConfig, FilterInvoker lastFilter)", "full_signature": "public static FilterChain buildProviderChain(ProviderConfig<?> providerConfig, FilterInvoker lastFilter)", "class_method_signature": "FilterChain.buildProviderChain(ProviderConfig<?> providerConfig, FilterInvoker lastFilter)", "testcase": false, "constructor": false, "invocations": ["selectActualFilters"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}