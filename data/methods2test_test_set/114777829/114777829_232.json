{"test_class": {"identifier": "HttpServletResponseWrapperTest", "superclass": "", "interfaces": "", "fields": [], "file": "servlet/api/src/test/java/javax/servlet/http/HttpServletResponseWrapperTest.java"}, "test_case": {"identifier": "testGetHeaderNames", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testGetHeaderNames() {\n        TestHttpServletResponse wrapped = new TestHttpServletResponse(null);\n        HttpServletResponseWrapper wrapper = new HttpServletResponseWrapper(wrapped);\n        wrapper.addIntHeader(\"int\", 1);\n        assertNotNull(wrapper.getHeaderNames());\n        assertEquals(1, wrapper.getHeaderNames().size());\n    }", "signature": "void testGetHeaderNames()", "full_signature": "@Test void testGetHeaderNames()", "class_method_signature": "HttpServletResponseWrapperTest.testGetHeaderNames()", "testcase": true, "constructor": false, "invocations": ["addIntHeader", "assertNotNull", "getHeaderNames", "assertEquals", "size", "getHeaderNames"]}, "focal_class": {"identifier": "HttpServletResponseWrapper", "superclass": "extends ServletResponseWrapper", "interfaces": "implements HttpServletResponse", "fields": [], "methods": [{"identifier": "HttpServletResponseWrapper", "parameters": "(HttpServletResponse response)", "modifiers": "public", "return": "", "signature": " HttpServletResponseWrapper(HttpServletResponse response)", "full_signature": "public  HttpServletResponseWrapper(HttpServletResponse response)", "class_method_signature": "HttpServletResponseWrapper.HttpServletResponseWrapper(HttpServletResponse response)", "testcase": false, "constructor": true}, {"identifier": "addCookie", "parameters": "(Cookie cookie)", "modifiers": "@Override public", "return": "void", "signature": "void addCookie(Cookie cookie)", "full_signature": "@Override public void addCookie(Cookie cookie)", "class_method_signature": "HttpServletResponseWrapper.addCookie(Cookie cookie)", "testcase": false, "constructor": false}, {"identifier": "addDateHeader", "parameters": "(String name, long date)", "modifiers": "@Override public", "return": "void", "signature": "void addDateHeader(String name, long date)", "full_signature": "@Override public void addDateHeader(String name, long date)", "class_method_signature": "HttpServletResponseWrapper.addDateHeader(String name, long date)", "testcase": false, "constructor": false}, {"identifier": "addHeader", "parameters": "(String name, String value)", "modifiers": "@Override public", "return": "void", "signature": "void addHeader(String name, String value)", "full_signature": "@Override public void addHeader(String name, String value)", "class_method_signature": "HttpServletResponseWrapper.addHeader(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "addIntHeader", "parameters": "(String name, int value)", "modifiers": "@Override public", "return": "void", "signature": "void addIntHeader(String name, int value)", "full_signature": "@Override public void addIntHeader(String name, int value)", "class_method_signature": "HttpServletResponseWrapper.addIntHeader(String name, int value)", "testcase": false, "constructor": false}, {"identifier": "containsHeader", "parameters": "(String name)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsHeader(String name)", "full_signature": "@Override public boolean containsHeader(String name)", "class_method_signature": "HttpServletResponseWrapper.containsHeader(String name)", "testcase": false, "constructor": false}, {"identifier": "encodeRedirectURL", "parameters": "(String url)", "modifiers": "@Override public", "return": "String", "signature": "String encodeRedirectURL(String url)", "full_signature": "@Override public String encodeRedirectURL(String url)", "class_method_signature": "HttpServletResponseWrapper.encodeRedirectURL(String url)", "testcase": false, "constructor": false}, {"identifier": "encodeRedirectUrl", "parameters": "(String url)", "modifiers": "@Deprecated @Override public", "return": "String", "signature": "String encodeRedirectUrl(String url)", "full_signature": "@Deprecated @Override public String encodeRedirectUrl(String url)", "class_method_signature": "HttpServletResponseWrapper.encodeRedirectUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "encodeURL", "parameters": "(String url)", "modifiers": "@Override public", "return": "String", "signature": "String encodeURL(String url)", "full_signature": "@Override public String encodeURL(String url)", "class_method_signature": "HttpServletResponseWrapper.encodeURL(String url)", "testcase": false, "constructor": false}, {"identifier": "encodeUrl", "parameters": "(String url)", "modifiers": "@Deprecated @Override public", "return": "String", "signature": "String encodeUrl(String url)", "full_signature": "@Deprecated @Override public String encodeUrl(String url)", "class_method_signature": "HttpServletResponseWrapper.encodeUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "getHeader", "parameters": "(String name)", "modifiers": "@Override public", "return": "String", "signature": "String getHeader(String name)", "full_signature": "@Override public String getHeader(String name)", "class_method_signature": "HttpServletResponseWrapper.getHeader(String name)", "testcase": false, "constructor": false}, {"identifier": "getHeaders", "parameters": "(String name)", "modifiers": "@Override public", "return": "Collection<String>", "signature": "Collection<String> getHeaders(String name)", "full_signature": "@Override public Collection<String> getHeaders(String name)", "class_method_signature": "HttpServletResponseWrapper.getHeaders(String name)", "testcase": false, "constructor": false}, {"identifier": "getHeaderNames", "parameters": "()", "modifiers": "@Override public", "return": "Collection<String>", "signature": "Collection<String> getHeaderNames()", "full_signature": "@Override public Collection<String> getHeaderNames()", "class_method_signature": "HttpServletResponseWrapper.getHeaderNames()", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getStatus()", "full_signature": "@Override public int getStatus()", "class_method_signature": "HttpServletResponseWrapper.getStatus()", "testcase": false, "constructor": false}, {"identifier": "getWrapped", "parameters": "()", "modifiers": "private", "return": "HttpServletResponse", "signature": "HttpServletResponse getWrapped()", "full_signature": "private HttpServletResponse getWrapped()", "class_method_signature": "HttpServletResponseWrapper.getWrapped()", "testcase": false, "constructor": false}, {"identifier": "sendError", "parameters": "(int status)", "modifiers": "@Override public", "return": "void", "signature": "void sendError(int status)", "full_signature": "@Override public void sendError(int status)", "class_method_signature": "HttpServletResponseWrapper.sendError(int status)", "testcase": false, "constructor": false}, {"identifier": "sendError", "parameters": "(int status, String message)", "modifiers": "@Override public", "return": "void", "signature": "void sendError(int status, String message)", "full_signature": "@Override public void sendError(int status, String message)", "class_method_signature": "HttpServletResponseWrapper.sendError(int status, String message)", "testcase": false, "constructor": false}, {"identifier": "sendRedirect", "parameters": "(String location)", "modifiers": "@Override public", "return": "void", "signature": "void sendRedirect(String location)", "full_signature": "@Override public void sendRedirect(String location)", "class_method_signature": "HttpServletResponseWrapper.sendRedirect(String location)", "testcase": false, "constructor": false}, {"identifier": "setDateHeader", "parameters": "(String name, long date)", "modifiers": "@Override public", "return": "void", "signature": "void setDateHeader(String name, long date)", "full_signature": "@Override public void setDateHeader(String name, long date)", "class_method_signature": "HttpServletResponseWrapper.setDateHeader(String name, long date)", "testcase": false, "constructor": false}, {"identifier": "setHeader", "parameters": "(String name, String value)", "modifiers": "@Override public", "return": "void", "signature": "void setHeader(String name, String value)", "full_signature": "@Override public void setHeader(String name, String value)", "class_method_signature": "HttpServletResponseWrapper.setHeader(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "setIntHeader", "parameters": "(String name, int value)", "modifiers": "@Override public", "return": "void", "signature": "void setIntHeader(String name, int value)", "full_signature": "@Override public void setIntHeader(String name, int value)", "class_method_signature": "HttpServletResponseWrapper.setIntHeader(String name, int value)", "testcase": false, "constructor": false}, {"identifier": "setStatus", "parameters": "(int status)", "modifiers": "@Override public", "return": "void", "signature": "void setStatus(int status)", "full_signature": "@Override public void setStatus(int status)", "class_method_signature": "HttpServletResponseWrapper.setStatus(int status)", "testcase": false, "constructor": false}, {"identifier": "setStatus", "parameters": "(int status, String message)", "modifiers": "@Deprecated @Override public", "return": "void", "signature": "void setStatus(int status, String message)", "full_signature": "@Deprecated @Override public void setStatus(int status, String message)", "class_method_signature": "HttpServletResponseWrapper.setStatus(int status, String message)", "testcase": false, "constructor": false}], "file": "servlet/api/src/main/java/javax/servlet/http/HttpServletResponseWrapper.java"}, "focal_method": {"identifier": "getHeaderNames", "parameters": "()", "modifiers": "@Override public", "return": "Collection<String>", "body": "@Override\n    public Collection<String> getHeaderNames() {\n        return getWrapped().getHeaderNames();\n    }", "signature": "Collection<String> getHeaderNames()", "full_signature": "@Override public Collection<String> getHeaderNames()", "class_method_signature": "HttpServletResponseWrapper.getHeaderNames()", "testcase": false, "constructor": false, "invocations": ["getHeaderNames", "getWrapped"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}