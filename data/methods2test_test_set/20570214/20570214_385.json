{"test_class": {"identifier": "MacConfigTest", "superclass": "", "interfaces": "", "fields": [], "file": "java_src/src/test/java/com/google/crypto/tink/mac/MacConfigTest.java"}, "test_case": {"identifier": "aaaTestInitialization", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void aaaTestInitialization() throws Exception {\n    try {\n      Registry.getCatalogue(\"tinkmac\");\n      fail(\"Expected GeneralSecurityException\");\n    } catch (GeneralSecurityException e) {\n      assertThat(e.toString()).contains(\"no catalogue found\");\n      assertThat(e.toString()).contains(\"MacConfig.register()\");\n    }\n\n    String typeUrl = \"type.googleapis.com/google.crypto.tink.HmacKey\";\n    try {\n      Registry.getKeyManager(typeUrl);\n      fail(\"Expected GeneralSecurityException\");\n    } catch (GeneralSecurityException e) {\n      assertThat(e.toString()).contains(\"No key manager found\");\n    }\n\n    // Initialize the config.\n    MacConfig.register();\n\n    // After registration the key manager should be present.\n    Registry.getKeyManager(typeUrl);\n\n    // Running init() manually again should succeed.\n    MacConfig.register();\n  }", "signature": "void aaaTestInitialization()", "full_signature": "@Test public void aaaTestInitialization()", "class_method_signature": "MacConfigTest.aaaTestInitialization()", "testcase": true, "constructor": false, "invocations": ["getCatalogue", "fail", "contains", "assertThat", "toString", "contains", "assertThat", "toString", "getKeyManager", "fail", "contains", "assertThat", "toString", "register", "getKeyManager", "register"]}, "focal_class": {"identifier": "MacConfig", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String HMAC_TYPE_URL = new HmacKeyManager().getKeyType();", "modifier": "public static final", "type": "String", "declarator": "HMAC_TYPE_URL = new HmacKeyManager().getKeyType()", "var_name": "HMAC_TYPE_URL"}, {"original_string": "@Deprecated public static final RegistryConfig TINK_1_0_0 = RegistryConfig.getDefaultInstance();", "modifier": "@Deprecated public static final", "type": "RegistryConfig", "declarator": "TINK_1_0_0 = RegistryConfig.getDefaultInstance()", "var_name": "TINK_1_0_0"}, {"original_string": "@Deprecated public static final RegistryConfig TINK_1_1_0 = TINK_1_0_0;", "modifier": "@Deprecated public static final", "type": "RegistryConfig", "declarator": "TINK_1_1_0 = TINK_1_0_0", "var_name": "TINK_1_1_0"}, {"original_string": "@Deprecated public static final RegistryConfig LATEST = TINK_1_0_0;", "modifier": "@Deprecated public static final", "type": "RegistryConfig", "declarator": "LATEST = TINK_1_0_0", "var_name": "LATEST"}], "methods": [{"identifier": "init", "parameters": "()", "modifiers": "@Deprecated public static", "return": "void", "signature": "void init()", "full_signature": "@Deprecated public static void init()", "class_method_signature": "MacConfig.init()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void register()", "full_signature": "public static void register()", "class_method_signature": "MacConfig.register()", "testcase": false, "constructor": false}, {"identifier": "registerStandardKeyTypes", "parameters": "()", "modifiers": "@Deprecated public static", "return": "void", "signature": "void registerStandardKeyTypes()", "full_signature": "@Deprecated public static void registerStandardKeyTypes()", "class_method_signature": "MacConfig.registerStandardKeyTypes()", "testcase": false, "constructor": false}, {"identifier": "MacConfig", "parameters": "()", "modifiers": "private", "return": "", "signature": " MacConfig()", "full_signature": "private  MacConfig()", "class_method_signature": "MacConfig.MacConfig()", "testcase": false, "constructor": true}], "file": "java_src/src/main/java/com/google/crypto/tink/mac/MacConfig.java"}, "focal_method": {"identifier": "register", "parameters": "()", "modifiers": "public static", "return": "void", "body": "public static void register() throws GeneralSecurityException {\n    HmacKeyManager.register(true);\n    AesCmacKeyManager.register(true);\n    MacWrapper.register();\n  }", "signature": "void register()", "full_signature": "public static void register()", "class_method_signature": "MacConfig.register()", "testcase": false, "constructor": false, "invocations": ["register", "register", "register"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}