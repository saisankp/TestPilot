{"test_class": {"identifier": "ConsulServiceDiscoveryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private URL url;", "modifier": "private", "type": "URL", "declarator": "url", "var_name": "url"}, {"original_string": "private ConsulServiceDiscovery consulServiceDiscovery;", "modifier": "private", "type": "ConsulServiceDiscovery", "declarator": "consulServiceDiscovery", "var_name": "consulServiceDiscovery"}, {"original_string": "private ConsulProcess consul;", "modifier": "private", "type": "ConsulProcess", "declarator": "consul", "var_name": "consul"}, {"original_string": "private static final String SERVICE_NAME = \"A\";", "modifier": "private static final", "type": "String", "declarator": "SERVICE_NAME = \"A\"", "var_name": "SERVICE_NAME"}, {"original_string": "private static final String LOCALHOST = \"127.0.0.1\";", "modifier": "private static final", "type": "String", "declarator": "LOCALHOST = \"127.0.0.1\"", "var_name": "LOCALHOST"}], "file": "dubbo-registry/dubbo-registry-consul/src/test/java/org/apache/dubbo/registry/consul/ConsulServiceDiscoveryTest.java"}, "test_case": {"identifier": "testGetInstances", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetInstances() throws Exception {\n        String serviceName = \"ConsulTest77Service\";\n        assertTrue(consulServiceDiscovery.getInstances(serviceName).isEmpty());\n        int portA = NetUtils.getAvailablePort();\n        int portB = NetUtils.getAvailablePort();\n        consulServiceDiscovery.register(new DefaultServiceInstance(valueOf(System.nanoTime()), serviceName, \"127.0.0.1\", portA));\n        consulServiceDiscovery.register(new DefaultServiceInstance(valueOf(System.nanoTime()), serviceName, \"127.0.0.1\", portB));\n        Thread.sleep(5000);\n        Assertions.assertFalse(consulServiceDiscovery.getInstances(serviceName).isEmpty());\n        List<String> r = convertToIpPort(consulServiceDiscovery.getInstances(serviceName));\n        assertTrue(r.contains(\"127.0.0.1:\" + portA));\n        assertTrue(r.contains(\"127.0.0.1:\" + portB));\n    }", "signature": "void testGetInstances()", "full_signature": "@Test public void testGetInstances()", "class_method_signature": "ConsulServiceDiscoveryTest.testGetInstances()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isEmpty", "getInstances", "getAvailablePort", "getAvailablePort", "register", "valueOf", "nanoTime", "register", "valueOf", "nanoTime", "sleep", "assertFalse", "isEmpty", "getInstances", "convertToIpPort", "getInstances", "assertTrue", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "ConsulServiceDiscovery", "superclass": "extends AbstractServiceDiscovery", "interfaces": "implements EventListener<ServiceInstancesChangedEvent>", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ConsulServiceDiscovery.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ConsulServiceDiscovery.class)", "var_name": "logger"}, {"original_string": "private static final String QUERY_TAG = \"consul_query_tag\";", "modifier": "private static final", "type": "String", "declarator": "QUERY_TAG = \"consul_query_tag\"", "var_name": "QUERY_TAG"}, {"original_string": "private static final String REGISTER_TAG = \"consul_register_tag\";", "modifier": "private static final", "type": "String", "declarator": "REGISTER_TAG = \"consul_register_tag\"", "var_name": "REGISTER_TAG"}, {"original_string": "private List<String> registeringTags = new ArrayList<>();", "modifier": "private", "type": "List<String>", "declarator": "registeringTags = new ArrayList<>()", "var_name": "registeringTags"}, {"original_string": "private String tag;", "modifier": "private", "type": "String", "declarator": "tag", "var_name": "tag"}, {"original_string": "private ConsulClient client;", "modifier": "private", "type": "ConsulClient", "declarator": "client", "var_name": "client"}, {"original_string": "private ExecutorService notifierExecutor = newCachedThreadPool(\n            new NamedThreadFactory(\"dubbo-service-discovery-consul-notifier\", true));", "modifier": "private", "type": "ExecutorService", "declarator": "notifierExecutor = newCachedThreadPool(\n            new NamedThreadFactory(\"dubbo-service-discovery-consul-notifier\", true))", "var_name": "notifierExecutor"}, {"original_string": "private Map<String, ConsulNotifier> notifiers = new ConcurrentHashMap<>();", "modifier": "private", "type": "Map<String, ConsulNotifier>", "declarator": "notifiers = new ConcurrentHashMap<>()", "var_name": "notifiers"}, {"original_string": "private Map<String, TtlScheduler> ttlSchedulers = new ConcurrentHashMap<>();", "modifier": "private", "type": "Map<String, TtlScheduler>", "declarator": "ttlSchedulers = new ConcurrentHashMap<>()", "var_name": "ttlSchedulers"}, {"original_string": "private long checkPassInterval;", "modifier": "private", "type": "long", "declarator": "checkPassInterval", "var_name": "checkPassInterval"}, {"original_string": "private URL url;", "modifier": "private", "type": "URL", "declarator": "url", "var_name": "url"}, {"original_string": "private String aclToken;", "modifier": "private", "type": "String", "declarator": "aclToken", "var_name": "aclToken"}, {"original_string": "private List<String> tags;", "modifier": "private", "type": "List<String>", "declarator": "tags", "var_name": "tags"}, {"original_string": "private ConsistencyMode consistencyMode;", "modifier": "private", "type": "ConsistencyMode", "declarator": "consistencyMode", "var_name": "consistencyMode"}, {"original_string": "private String defaultZoneMetadataName;", "modifier": "private", "type": "String", "declarator": "defaultZoneMetadataName", "var_name": "defaultZoneMetadataName"}, {"original_string": "private String instanceZone;", "modifier": "private", "type": "String", "declarator": "instanceZone", "var_name": "instanceZone"}, {"original_string": "private String instanceGroup;", "modifier": "private", "type": "String", "declarator": "instanceGroup", "var_name": "instanceGroup"}], "methods": [{"identifier": "onEvent", "parameters": "(ServiceInstancesChangedEvent event)", "modifiers": "@Override public", "return": "void", "signature": "void onEvent(ServiceInstancesChangedEvent event)", "full_signature": "@Override public void onEvent(ServiceInstancesChangedEvent event)", "class_method_signature": "ConsulServiceDiscovery.onEvent(ServiceInstancesChangedEvent event)", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(URL registryURL)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(URL registryURL)", "full_signature": "@Override public void initialize(URL registryURL)", "class_method_signature": "ConsulServiceDiscovery.initialize(URL registryURL)", "testcase": false, "constructor": false}, {"identifier": "getConsistencyMode", "parameters": "(URL registryURL)", "modifiers": "private", "return": "ConsistencyMode", "signature": "ConsistencyMode getConsistencyMode(URL registryURL)", "full_signature": "private ConsistencyMode getConsistencyMode(URL registryURL)", "class_method_signature": "ConsulServiceDiscovery.getConsistencyMode(URL registryURL)", "testcase": false, "constructor": false}, {"identifier": "getTags", "parameters": "(URL registryURL)", "modifiers": "private", "return": "List<String>", "signature": "List<String> getTags(URL registryURL)", "full_signature": "private List<String> getTags(URL registryURL)", "class_method_signature": "ConsulServiceDiscovery.getTags(URL registryURL)", "testcase": false, "constructor": false}, {"identifier": "getUrl", "parameters": "()", "modifiers": "@Override public", "return": "URL", "signature": "URL getUrl()", "full_signature": "@Override public URL getUrl()", "class_method_signature": "ConsulServiceDiscovery.getUrl()", "testcase": false, "constructor": false}, {"identifier": "getRegisteringTags", "parameters": "(URL url)", "modifiers": "private", "return": "List<String>", "signature": "List<String> getRegisteringTags(URL url)", "full_signature": "private List<String> getRegisteringTags(URL url)", "class_method_signature": "ConsulServiceDiscovery.getRegisteringTags(URL url)", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void destroy()", "full_signature": "@Override public void destroy()", "class_method_signature": "ConsulServiceDiscovery.destroy()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "@Override public", "return": "void", "signature": "void register(ServiceInstance serviceInstance)", "full_signature": "@Override public void register(ServiceInstance serviceInstance)", "class_method_signature": "ConsulServiceDiscovery.register(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}, {"identifier": "addServiceInstancesChangedListener", "parameters": "(ServiceInstancesChangedListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void addServiceInstancesChangedListener(ServiceInstancesChangedListener listener)", "full_signature": "@Override public void addServiceInstancesChangedListener(ServiceInstancesChangedListener listener)", "class_method_signature": "ConsulServiceDiscovery.addServiceInstancesChangedListener(ServiceInstancesChangedListener listener)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "@Override public", "return": "void", "signature": "void update(ServiceInstance serviceInstance)", "full_signature": "@Override public void update(ServiceInstance serviceInstance)", "class_method_signature": "ConsulServiceDiscovery.update(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}, {"identifier": "unregister", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "@Override public", "return": "void", "signature": "void unregister(ServiceInstance serviceInstance)", "full_signature": "@Override public void unregister(ServiceInstance serviceInstance)", "class_method_signature": "ConsulServiceDiscovery.unregister(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}, {"identifier": "getServices", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getServices()", "full_signature": "@Override public Set<String> getServices()", "class_method_signature": "ConsulServiceDiscovery.getServices()", "testcase": false, "constructor": false}, {"identifier": "getInstances", "parameters": "(String serviceName)", "modifiers": "@Override public", "return": "List<ServiceInstance>", "signature": "List<ServiceInstance> getInstances(String serviceName)", "full_signature": "@Override public List<ServiceInstance> getInstances(String serviceName)", "class_method_signature": "ConsulServiceDiscovery.getInstances(String serviceName)", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(List<HealthService> services)", "modifiers": "private", "return": "List<ServiceInstance>", "signature": "List<ServiceInstance> convert(List<HealthService> services)", "full_signature": "private List<ServiceInstance> convert(List<HealthService> services)", "class_method_signature": "ConsulServiceDiscovery.convert(List<HealthService> services)", "testcase": false, "constructor": false}, {"identifier": "getHealthServices", "parameters": "(String service, long index, int watchTimeout)", "modifiers": "private", "return": "Response<List<HealthService>>", "signature": "Response<List<HealthService>> getHealthServices(String service, long index, int watchTimeout)", "full_signature": "private Response<List<HealthService>> getHealthServices(String service, long index, int watchTimeout)", "class_method_signature": "ConsulServiceDiscovery.getHealthServices(String service, long index, int watchTimeout)", "testcase": false, "constructor": false}, {"identifier": "getMetadata", "parameters": "(HealthService.Service service)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> getMetadata(HealthService.Service service)", "full_signature": "private Map<String, String> getMetadata(HealthService.Service service)", "class_method_signature": "ConsulServiceDiscovery.getMetadata(HealthService.Service service)", "testcase": false, "constructor": false}, {"identifier": "getScCompatibleMetadata", "parameters": "(List<String> tags)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> getScCompatibleMetadata(List<String> tags)", "full_signature": "private Map<String, String> getScCompatibleMetadata(List<String> tags)", "class_method_signature": "ConsulServiceDiscovery.getScCompatibleMetadata(List<String> tags)", "testcase": false, "constructor": false}, {"identifier": "buildService", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "private", "return": "NewService", "signature": "NewService buildService(ServiceInstance serviceInstance)", "full_signature": "private NewService buildService(ServiceInstance serviceInstance)", "class_method_signature": "ConsulServiceDiscovery.buildService(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}, {"identifier": "buildId", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "private", "return": "String", "signature": "String buildId(ServiceInstance serviceInstance)", "full_signature": "private String buildId(ServiceInstance serviceInstance)", "class_method_signature": "ConsulServiceDiscovery.buildId(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}, {"identifier": "buildTags", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "private", "return": "List<String>", "signature": "List<String> buildTags(ServiceInstance serviceInstance)", "full_signature": "private List<String> buildTags(ServiceInstance serviceInstance)", "class_method_signature": "ConsulServiceDiscovery.buildTags(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}, {"identifier": "buildMetadata", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> buildMetadata(ServiceInstance serviceInstance)", "full_signature": "private Map<String, String> buildMetadata(ServiceInstance serviceInstance)", "class_method_signature": "ConsulServiceDiscovery.buildMetadata(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}, {"identifier": "encodeMetadata", "parameters": "(Map<String, String> metadata)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> encodeMetadata(Map<String, String> metadata)", "full_signature": "private Map<String, String> encodeMetadata(Map<String, String> metadata)", "class_method_signature": "ConsulServiceDiscovery.encodeMetadata(Map<String, String> metadata)", "testcase": false, "constructor": false}, {"identifier": "decodeMetadata", "parameters": "(Map<String, String> metadata)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> decodeMetadata(Map<String, String> metadata)", "full_signature": "private Map<String, String> decodeMetadata(Map<String, String> metadata)", "class_method_signature": "ConsulServiceDiscovery.decodeMetadata(Map<String, String> metadata)", "testcase": false, "constructor": false}, {"identifier": "buildCheck", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "private", "return": "NewService.Check", "signature": "NewService.Check buildCheck(ServiceInstance serviceInstance)", "full_signature": "private NewService.Check buildCheck(ServiceInstance serviceInstance)", "class_method_signature": "ConsulServiceDiscovery.buildCheck(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}, {"identifier": "buildWatchTimeout", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int buildWatchTimeout()", "full_signature": "private int buildWatchTimeout()", "class_method_signature": "ConsulServiceDiscovery.buildWatchTimeout()", "testcase": false, "constructor": false}], "file": "dubbo-registry/dubbo-registry-consul/src/main/java/org/apache/dubbo/registry/consul/ConsulServiceDiscovery.java"}, "focal_method": {"identifier": "getInstances", "parameters": "(String serviceName)", "modifiers": "@Override public", "return": "List<ServiceInstance>", "body": "@Override\n    public List<ServiceInstance> getInstances(String serviceName) throws NullPointerException {\n        Response<List<HealthService>> response = getHealthServices(serviceName, -1, buildWatchTimeout());\n        Long consulIndex = response.getConsulIndex();\n\n        ConsulNotifier notifier = notifiers.get(serviceName);\n        if (notifier == null) {\n            notifier = new ConsulNotifier(serviceName, consulIndex);\n            notifiers.put(serviceName, notifier);\n        }\n        return convert(response.getValue());\n    }", "signature": "List<ServiceInstance> getInstances(String serviceName)", "full_signature": "@Override public List<ServiceInstance> getInstances(String serviceName)", "class_method_signature": "ConsulServiceDiscovery.getInstances(String serviceName)", "testcase": false, "constructor": false, "invocations": ["getHealthServices", "buildWatchTimeout", "getConsulIndex", "get", "put", "convert", "getValue"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}