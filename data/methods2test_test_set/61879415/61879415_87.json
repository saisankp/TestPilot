{"test_class": {"identifier": "DefaultAccAccountServiceTest", "superclass": "extends AbstractIntegrationTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate TestHelper helper;", "modifier": "@Autowired\n\tprivate", "type": "TestHelper", "declarator": "helper", "var_name": "helper"}, {"original_string": "@Autowired\n\tprivate SysSystemService systemService;", "modifier": "@Autowired\n\tprivate", "type": "SysSystemService", "declarator": "systemService", "var_name": "systemService"}, {"original_string": "@Autowired\n\tprivate AccAccountService accountService;", "modifier": "@Autowired\n\tprivate", "type": "AccAccountService", "declarator": "accountService", "var_name": "accountService"}, {"original_string": "@Autowired\n\tprivate SysSchemaAttributeService schemaAttributeService;", "modifier": "@Autowired\n\tprivate", "type": "SysSchemaAttributeService", "declarator": "schemaAttributeService", "var_name": "schemaAttributeService"}, {"original_string": "@Autowired\n\tprivate EntityManager entityManager;", "modifier": "@Autowired\n\tprivate", "type": "EntityManager", "declarator": "entityManager", "var_name": "entityManager"}, {"original_string": "@Autowired\n\tprivate ApplicationContext applicationContext;", "modifier": "@Autowired\n\tprivate", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "@Autowired\n\tprivate IdmAuthorizationPolicyService authorizationPolicyService;", "modifier": "@Autowired\n\tprivate", "type": "IdmAuthorizationPolicyService", "declarator": "authorizationPolicyService", "var_name": "authorizationPolicyService"}, {"original_string": "@Autowired\n\tprivate AccIdentityAccountService identityAccountService;", "modifier": "@Autowired\n\tprivate", "type": "AccIdentityAccountService", "declarator": "identityAccountService", "var_name": "identityAccountService"}, {"original_string": "@Autowired\n\tprivate LoginService loginService;", "modifier": "@Autowired\n\tprivate", "type": "LoginService", "declarator": "loginService", "var_name": "loginService"}], "file": "Realization/backend/acc/src/test/java/eu/bcvsolutions/idm/acc/service/impl/DefaultAccAccountServiceTest.java"}, "test_case": {"identifier": "getConnectorObjectForbiddenTest", "parameters": "()", "modifiers": "@Test(expected = ForbiddenEntityException.class) public", "return": "void", "body": "@Test(expected = ForbiddenEntityException.class)\n\tpublic void getConnectorObjectForbiddenTest() {\n\t\tString userOneName = \"UserOne\";\n\t\tString eavAttributeName = \"EAV_ATTRIBUTE\";\n\t\tSysSystemDto system = initData();\n\t\tAssert.assertNotNull(system);\n\n\t\tIdmIdentityDto identity = helper.createIdentity();\n\n\t\t// Create role with evaluator\n\t\tIdmRoleDto role = helper.createRole();\n\t\tIdmAuthorizationPolicyDto policyAccount = new IdmAuthorizationPolicyDto();\n\t\tpolicyAccount.setRole(role.getId());\n\t\tpolicyAccount.setGroupPermission(AccGroupPermission.ACCOUNT.getName());\n\t\tpolicyAccount.setAuthorizableType(AccAccount.class.getCanonicalName());\n\t\tpolicyAccount.setEvaluator(ReadAccountByIdentityEvaluator.class);\n\t\tauthorizationPolicyService.save(policyAccount);\n\n\t\t// Change resources (set state on exclude) .. must be call in transaction\n\t\tthis.getBean().persistResource(createResource(userOneName, ZonedDateTime.now()));\n\t\tAccAccountDto account = new AccAccountDto();\n\t\taccount.setEntityType(SystemEntityType.IDENTITY);\n\t\taccount.setSystem(system.getId());\n\t\taccount.setAccountType(AccountType.PERSONAL);\n\t\taccount.setUid(userOneName);\n\t\taccount = accountService.save(account);\n\n\t\t// Assign role with evaluator\n\t\thelper.createIdentityRole(identity, role);\n\n\t\tlogout();\n\t\tloginService.login(new LoginDto(identity.getUsername(), identity.getPassword()));\n\n\t\tIcConnectorObject connectorObject = accountService.getConnectorObject(account, IdmBasePermission.READ);\n\t\tAssert.assertNotNull(connectorObject);\n\t\tAssert.assertEquals(userOneName, connectorObject.getUidValue());\n\t\tAssert.assertNotNull(connectorObject.getAttributeByName(eavAttributeName));\n\t\tAssert.assertEquals(userOneName, connectorObject.getAttributeByName(eavAttributeName).getValue());\n\n\t}", "signature": "void getConnectorObjectForbiddenTest()", "full_signature": "@Test(expected = ForbiddenEntityException.class) public void getConnectorObjectForbiddenTest()", "class_method_signature": "DefaultAccAccountServiceTest.getConnectorObjectForbiddenTest()", "testcase": true, "constructor": false, "invocations": ["initData", "assertNotNull", "createIdentity", "createRole", "setRole", "getId", "setGroupPermission", "getName", "setAuthorizableType", "getCanonicalName", "setEvaluator", "save", "persistResource", "getBean", "createResource", "now", "setEntityType", "setSystem", "getId", "setAccountType", "setUid", "save", "createIdentityRole", "logout", "login", "getUsername", "getPassword", "getConnectorObject", "assertNotNull", "assertEquals", "getUidValue", "assertNotNull", "getAttributeByName", "assertEquals", "getValue", "getAttributeByName"]}, "focal_class": {"identifier": "DefaultAccAccountService", "superclass": "extends AbstractEventableDtoService<AccAccountDto, AccAccount, AccAccountFilter>", "interfaces": "implements AccAccountService", "fields": [{"original_string": "private final AccAccountRepository accountRepository;", "modifier": "private final", "type": "AccAccountRepository", "declarator": "accountRepository", "var_name": "accountRepository"}, {"original_string": "private final AccIdentityAccountService identityAccountService;", "modifier": "private final", "type": "AccIdentityAccountService", "declarator": "identityAccountService", "var_name": "identityAccountService"}, {"original_string": "private final SysSystemService systemService;", "modifier": "private final", "type": "SysSystemService", "declarator": "systemService", "var_name": "systemService"}, {"original_string": "private final SysSchemaObjectClassService schemaObjectClassService;", "modifier": "private final", "type": "SysSchemaObjectClassService", "declarator": "schemaObjectClassService", "var_name": "schemaObjectClassService"}, {"original_string": "private final SysSchemaAttributeService schemaAttributeService;", "modifier": "private final", "type": "SysSchemaAttributeService", "declarator": "schemaAttributeService", "var_name": "schemaAttributeService"}, {"original_string": "@Autowired\n\tprivate List<SynchronizationEntityExecutor> executors;", "modifier": "@Autowired\n\tprivate", "type": "List<SynchronizationEntityExecutor>", "declarator": "executors", "var_name": "executors"}, {"original_string": "private PluginRegistry<SynchronizationEntityExecutor, SystemEntityType> pluginExecutors;", "modifier": "private", "type": "PluginRegistry<SynchronizationEntityExecutor, SystemEntityType>", "declarator": "pluginExecutors", "var_name": "pluginExecutors"}, {"original_string": "@Lazy\n\t@Autowired\n\tprivate PasswordFilterManager passwordFilterManager;", "modifier": "@Lazy\n\t@Autowired\n\tprivate", "type": "PasswordFilterManager", "declarator": "passwordFilterManager", "var_name": "passwordFilterManager"}], "methods": [{"identifier": "DefaultAccAccountService", "parameters": "(AccAccountRepository accountRepository,\n\t\t\tAccIdentityAccountService identityAccountService, SysSystemService systemService,\n\t\t\tSysSchemaObjectClassService schemaObjectClassService, SysSchemaAttributeService schemaAttributeService,\n\t\t\tEntityEventManager entityEventManager)", "modifiers": "@Autowired public", "return": "", "signature": " DefaultAccAccountService(AccAccountRepository accountRepository,\n\t\t\tAccIdentityAccountService identityAccountService, SysSystemService systemService,\n\t\t\tSysSchemaObjectClassService schemaObjectClassService, SysSchemaAttributeService schemaAttributeService,\n\t\t\tEntityEventManager entityEventManager)", "full_signature": "@Autowired public  DefaultAccAccountService(AccAccountRepository accountRepository,\n\t\t\tAccIdentityAccountService identityAccountService, SysSystemService systemService,\n\t\t\tSysSchemaObjectClassService schemaObjectClassService, SysSchemaAttributeService schemaAttributeService,\n\t\t\tEntityEventManager entityEventManager)", "class_method_signature": "DefaultAccAccountService.DefaultAccAccountService(AccAccountRepository accountRepository,\n\t\t\tAccIdentityAccountService identityAccountService, SysSystemService systemService,\n\t\t\tSysSchemaObjectClassService schemaObjectClassService, SysSchemaAttributeService schemaAttributeService,\n\t\t\tEntityEventManager entityEventManager)", "testcase": false, "constructor": true}, {"identifier": "getAuthorizableType", "parameters": "()", "modifiers": "@Override public", "return": "AuthorizableType", "signature": "AuthorizableType getAuthorizableType()", "full_signature": "@Override public AuthorizableType getAuthorizableType()", "class_method_signature": "DefaultAccAccountService.getAuthorizableType()", "testcase": false, "constructor": false}, {"identifier": "toDto", "parameters": "(AccAccount entity, AccAccountDto dto)", "modifiers": "@Override protected", "return": "AccAccountDto", "signature": "AccAccountDto toDto(AccAccount entity, AccAccountDto dto)", "full_signature": "@Override protected AccAccountDto toDto(AccAccount entity, AccAccountDto dto)", "class_method_signature": "DefaultAccAccountService.toDto(AccAccount entity, AccAccountDto dto)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(AccAccountDto account, BasePermission... permission)", "modifiers": "@Override @Transactional public", "return": "void", "signature": "void delete(AccAccountDto account, BasePermission... permission)", "full_signature": "@Override @Transactional public void delete(AccAccountDto account, BasePermission... permission)", "class_method_signature": "DefaultAccAccountService.delete(AccAccountDto account, BasePermission... permission)", "testcase": false, "constructor": false}, {"identifier": "getAccounts", "parameters": "(UUID systemId, UUID identityId)", "modifiers": "@Override public", "return": "List<AccAccountDto>", "signature": "List<AccAccountDto> getAccounts(UUID systemId, UUID identityId)", "full_signature": "@Override public List<AccAccountDto> getAccounts(UUID systemId, UUID identityId)", "class_method_signature": "DefaultAccAccountService.getAccounts(UUID systemId, UUID identityId)", "testcase": false, "constructor": false}, {"identifier": "getAccount", "parameters": "(String uid, UUID systemId)", "modifiers": "@Override public", "return": "AccAccountDto", "signature": "AccAccountDto getAccount(String uid, UUID systemId)", "full_signature": "@Override public AccAccountDto getAccount(String uid, UUID systemId)", "class_method_signature": "DefaultAccAccountService.getAccount(String uid, UUID systemId)", "testcase": false, "constructor": false}, {"identifier": "findExpired", "parameters": "(ZonedDateTime expirationDate, Pageable pageable)", "modifiers": "@Override @Transactional(readOnly = true) public", "return": "Page<AccAccountDto>", "signature": "Page<AccAccountDto> findExpired(ZonedDateTime expirationDate, Pageable pageable)", "full_signature": "@Override @Transactional(readOnly = true) public Page<AccAccountDto> findExpired(ZonedDateTime expirationDate, Pageable pageable)", "class_method_signature": "DefaultAccAccountService.findExpired(ZonedDateTime expirationDate, Pageable pageable)", "testcase": false, "constructor": false}, {"identifier": "getConnectorObject", "parameters": "(AccAccountDto account, BasePermission... permissions)", "modifiers": "@Override public", "return": "IcConnectorObject", "signature": "IcConnectorObject getConnectorObject(AccAccountDto account, BasePermission... permissions)", "full_signature": "@Override public IcConnectorObject getConnectorObject(AccAccountDto account, BasePermission... permissions)", "class_method_signature": "DefaultAccAccountService.getConnectorObject(AccAccountDto account, BasePermission... permissions)", "testcase": false, "constructor": false}, {"identifier": "getConnectorObjectForSchema", "parameters": "(IcConnectorObject fullObject,\n\t\t\tList<SysSchemaAttributeDto> schemaAttributes)", "modifiers": "private", "return": "IcConnectorObject", "signature": "IcConnectorObject getConnectorObjectForSchema(IcConnectorObject fullObject,\n\t\t\tList<SysSchemaAttributeDto> schemaAttributes)", "full_signature": "private IcConnectorObject getConnectorObjectForSchema(IcConnectorObject fullObject,\n\t\t\tList<SysSchemaAttributeDto> schemaAttributes)", "class_method_signature": "DefaultAccAccountService.getConnectorObjectForSchema(IcConnectorObject fullObject,\n\t\t\tList<SysSchemaAttributeDto> schemaAttributes)", "testcase": false, "constructor": false}, {"identifier": "applyContext", "parameters": "(AccAccountDto dto, AccAccountFilter context, BasePermission... permission)", "modifiers": "@Override protected", "return": "AccAccountDto", "signature": "AccAccountDto applyContext(AccAccountDto dto, AccAccountFilter context, BasePermission... permission)", "full_signature": "@Override protected AccAccountDto applyContext(AccAccountDto dto, AccAccountFilter context, BasePermission... permission)", "class_method_signature": "DefaultAccAccountService.applyContext(AccAccountDto dto, AccAccountFilter context, BasePermission... permission)", "testcase": false, "constructor": false}, {"identifier": "getSchemaAttributes", "parameters": "(UUID systemId, String schema)", "modifiers": "private", "return": "List<SysSchemaAttributeDto>", "signature": "List<SysSchemaAttributeDto> getSchemaAttributes(UUID systemId, String schema)", "full_signature": "private List<SysSchemaAttributeDto> getSchemaAttributes(UUID systemId, String schema)", "class_method_signature": "DefaultAccAccountService.getSchemaAttributes(UUID systemId, String schema)", "testcase": false, "constructor": false}, {"identifier": "toPredicates", "parameters": "(Root<AccAccount> root, CriteriaQuery<?> query, CriteriaBuilder builder,\n\t\t\tAccAccountFilter filter)", "modifiers": "@Override protected", "return": "List<Predicate>", "signature": "List<Predicate> toPredicates(Root<AccAccount> root, CriteriaQuery<?> query, CriteriaBuilder builder,\n\t\t\tAccAccountFilter filter)", "full_signature": "@Override protected List<Predicate> toPredicates(Root<AccAccount> root, CriteriaQuery<?> query, CriteriaBuilder builder,\n\t\t\tAccAccountFilter filter)", "class_method_signature": "DefaultAccAccountService.toPredicates(Root<AccAccount> root, CriteriaQuery<?> query, CriteriaBuilder builder,\n\t\t\tAccAccountFilter filter)", "testcase": false, "constructor": false}, {"identifier": "getSyncExecutor", "parameters": "(SystemEntityType entityType)", "modifiers": "@Override public", "return": "SynchronizationEntityExecutor", "signature": "SynchronizationEntityExecutor getSyncExecutor(SystemEntityType entityType)", "full_signature": "@Override public SynchronizationEntityExecutor getSyncExecutor(SystemEntityType entityType)", "class_method_signature": "DefaultAccAccountService.getSyncExecutor(SystemEntityType entityType)", "testcase": false, "constructor": false}], "file": "Realization/backend/acc/src/main/java/eu/bcvsolutions/idm/acc/service/impl/DefaultAccAccountService.java"}, "focal_method": {"identifier": "getConnectorObject", "parameters": "(AccAccountDto account, BasePermission... permissions)", "modifiers": "@Override public", "return": "IcConnectorObject", "body": "@Override\n\tpublic IcConnectorObject getConnectorObject(AccAccountDto account, BasePermission... permissions) {\n\t\tAssert.notNull(account, \"Account cannot be null!\");\n\t\tthis.checkAccess(account, permissions);\n\t\tList<SysSchemaAttributeDto> schemaAttributes = this.getSchemaAttributes(account.getSystem(), null);\n\t\tif (schemaAttributes == null) {\n\t\t\treturn null;\n\t\t}\n\t\ttry {\n\t\t\tIcConnectorObject fullObject = this.systemService.readConnectorObject(account.getSystem(),\n\t\t\t\t\taccount.getRealUid(), null);\n\t\t\treturn this.getConnectorObjectForSchema(fullObject, schemaAttributes);\n\t\t} catch (Exception ex) {\n\t\t\tSysSystemDto system = DtoUtils.getEmbedded(account, AccAccount_.system, SysSystemDto.class);\n\t\t\tthrow new ResultCodeException(AccResultCode.ACCOUNT_CANNOT_BE_READ_FROM_TARGET, ImmutableMap.of(\"account\",\n\t\t\t\t\taccount.getUid(), \"system\", system != null ? system.getName() : account.getSystem()), ex);\n\t\t}\n\t}", "signature": "IcConnectorObject getConnectorObject(AccAccountDto account, BasePermission... permissions)", "full_signature": "@Override public IcConnectorObject getConnectorObject(AccAccountDto account, BasePermission... permissions)", "class_method_signature": "DefaultAccAccountService.getConnectorObject(AccAccountDto account, BasePermission... permissions)", "testcase": false, "constructor": false, "invocations": ["notNull", "checkAccess", "getSchemaAttributes", "getSystem", "readConnectorObject", "getSystem", "getRealUid", "getConnectorObjectForSchema", "getEmbedded", "of", "getUid", "getName", "getSystem"]}, "repository": {"repo_id": 61879415, "url": "https://github.com/bcvsolutions/CzechIdMng", "stars": 25, "created": "6/24/2016 11:18:23 AM +00:00", "updates": "2020-01-27T15:14:40+00:00", "fork": "False", "license": "licensed"}}