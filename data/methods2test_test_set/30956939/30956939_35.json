{"test_class": {"identifier": "TestRetry", "superclass": "", "interfaces": "", "fields": [], "file": "taverna-workflowmodel-extensions/src/test/java/org/apache/taverna/workflowmodel/processor/dispatch/layers/TestRetry.java"}, "test_case": {"identifier": "invalidInitialDelay", "parameters": "()", "modifiers": "@Test(expected=IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected=IllegalArgumentException.class)\n    public void invalidInitialDelay() throws Exception {\n        Retry retry = new Retry();\n        ObjectNode conf = JsonNodeFactory.instance.objectNode();\n        conf.put(\"initialDelay\", -15);\n        retry.configure(conf);\n    }", "signature": "void invalidInitialDelay()", "full_signature": "@Test(expected=IllegalArgumentException.class) public void invalidInitialDelay()", "class_method_signature": "TestRetry.invalidInitialDelay()", "testcase": true, "constructor": false, "invocations": ["objectNode", "put", "configure"]}, "focal_class": {"identifier": "Retry", "superclass": "extends AbstractErrorHandlerLayer<JsonNode>", "interfaces": "", "fields": [{"original_string": "private static final String BACKOFF_FACTOR = \"backoffFactor\";", "modifier": "private static final", "type": "String", "declarator": "BACKOFF_FACTOR = \"backoffFactor\"", "var_name": "BACKOFF_FACTOR"}, {"original_string": "private static final String MAX_DELAY = \"maxDelay\";", "modifier": "private static final", "type": "String", "declarator": "MAX_DELAY = \"maxDelay\"", "var_name": "MAX_DELAY"}, {"original_string": "private static final String MAX_RETRIES = \"maxRetries\";", "modifier": "private static final", "type": "String", "declarator": "MAX_RETRIES = \"maxRetries\"", "var_name": "MAX_RETRIES"}, {"original_string": "private static final String INITIAL_DELAY = \"initialDelay\";", "modifier": "private static final", "type": "String", "declarator": "INITIAL_DELAY = \"initialDelay\"", "var_name": "INITIAL_DELAY"}, {"original_string": "public static final String URI = \"http://ns.taverna.org.uk/2010/scufl2/taverna/dispatchlayer/Retry\";", "modifier": "public static final", "type": "String", "declarator": "URI = \"http://ns.taverna.org.uk/2010/scufl2/taverna/dispatchlayer/Retry\"", "var_name": "URI"}, {"original_string": "private ObjectNode config;", "modifier": "private", "type": "ObjectNode", "declarator": "config", "var_name": "config"}, {"original_string": "private int maxRetries;", "modifier": "private", "type": "int", "declarator": "maxRetries", "var_name": "maxRetries"}, {"original_string": "private int initialDelay;", "modifier": "private", "type": "int", "declarator": "initialDelay", "var_name": "initialDelay"}, {"original_string": "private int maxDelay;", "modifier": "private", "type": "int", "declarator": "maxDelay", "var_name": "maxDelay"}, {"original_string": "private double backoffFactor;", "modifier": "private", "type": "double", "declarator": "backoffFactor", "var_name": "backoffFactor"}, {"original_string": "private static Timer retryTimer = new Timer(\"Retry timer\", true);", "modifier": "private static", "type": "Timer", "declarator": "retryTimer = new Timer(\"Retry timer\", true)", "var_name": "retryTimer"}], "methods": [{"identifier": "Retry", "parameters": "()", "modifiers": "public", "return": "", "signature": " Retry()", "full_signature": "public  Retry()", "class_method_signature": "Retry.Retry()", "testcase": false, "constructor": true}, {"identifier": "Retry", "parameters": "(int maxRetries, int initialDelay, int maxDelay,\n\t\t\tdouble backoffFactor)", "modifiers": "public", "return": "", "signature": " Retry(int maxRetries, int initialDelay, int maxDelay,\n\t\t\tdouble backoffFactor)", "full_signature": "public  Retry(int maxRetries, int initialDelay, int maxDelay,\n\t\t\tdouble backoffFactor)", "class_method_signature": "Retry.Retry(int maxRetries, int initialDelay, int maxDelay,\n\t\t\tdouble backoffFactor)", "testcase": false, "constructor": true}, {"identifier": "getStateObject", "parameters": "(DispatchJobEvent jobEvent)", "modifiers": "@Override protected", "return": "JobState", "signature": "JobState getStateObject(DispatchJobEvent jobEvent)", "full_signature": "@Override protected JobState getStateObject(DispatchJobEvent jobEvent)", "class_method_signature": "Retry.getStateObject(DispatchJobEvent jobEvent)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(JsonNode config)", "modifiers": "@Override public", "return": "void", "signature": "void configure(JsonNode config)", "full_signature": "@Override public void configure(JsonNode config)", "class_method_signature": "Retry.configure(JsonNode config)", "testcase": false, "constructor": false}, {"identifier": "setAllMissingFields", "parameters": "(ObjectNode config, ObjectNode defaults)", "modifiers": "private", "return": "void", "signature": "void setAllMissingFields(ObjectNode config, ObjectNode defaults)", "full_signature": "private void setAllMissingFields(ObjectNode config, ObjectNode defaults)", "class_method_signature": "Retry.setAllMissingFields(ObjectNode config, ObjectNode defaults)", "testcase": false, "constructor": false}, {"identifier": "forEach", "parameters": "(final Iterator<T> iterator)", "modifiers": "private", "return": "Iterable<T>", "signature": "Iterable<T> forEach(final Iterator<T> iterator)", "full_signature": "private Iterable<T> forEach(final Iterator<T> iterator)", "class_method_signature": "Retry.forEach(final Iterator<T> iterator)", "testcase": false, "constructor": false}, {"identifier": "checkConfig", "parameters": "(ObjectNode conf)", "modifiers": "private", "return": "void", "signature": "void checkConfig(ObjectNode conf)", "full_signature": "private void checkConfig(ObjectNode conf)", "class_method_signature": "Retry.checkConfig(ObjectNode conf)", "testcase": false, "constructor": false}, {"identifier": "defaultConfig", "parameters": "()", "modifiers": "public static", "return": "ObjectNode", "signature": "ObjectNode defaultConfig()", "full_signature": "public static ObjectNode defaultConfig()", "class_method_signature": "Retry.defaultConfig()", "testcase": false, "constructor": false}, {"identifier": "getConfiguration", "parameters": "()", "modifiers": "@Override public", "return": "JsonNode", "signature": "JsonNode getConfiguration()", "full_signature": "@Override public JsonNode getConfiguration()", "class_method_signature": "Retry.getConfiguration()", "testcase": false, "constructor": false}], "file": "taverna-workflowmodel-extensions/src/main/java/org/apache/taverna/workflowmodel/processor/dispatch/layers/Retry.java"}, "focal_method": {"identifier": "configure", "parameters": "(JsonNode config)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void configure(JsonNode config) {\n\t    ObjectNode defaultConfig = defaultConfig();\n        setAllMissingFields((ObjectNode) config, defaultConfig);\n        checkConfig((ObjectNode)config);\n        this.config = (ObjectNode) config;\n        maxRetries = config.get(MAX_RETRIES).intValue();\n        initialDelay = config.get(INITIAL_DELAY).intValue();\n        maxDelay = config.get(MAX_DELAY).intValue();\n        backoffFactor = config.get(BACKOFF_FACTOR).doubleValue();       \n\t}", "signature": "void configure(JsonNode config)", "full_signature": "@Override public void configure(JsonNode config)", "class_method_signature": "Retry.configure(JsonNode config)", "testcase": false, "constructor": false, "invocations": ["defaultConfig", "setAllMissingFields", "checkConfig", "intValue", "get", "intValue", "get", "intValue", "get", "doubleValue", "get"]}, "repository": {"repo_id": 30956939, "url": "https://github.com/apache/incubator-taverna-engine", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 12, "size": 6590, "license": "licensed"}}