{"test_class": {"identifier": "AndroidStatementExecutorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AndroidStatementExecutor mStatementExecutor;", "modifier": "private", "type": "AndroidStatementExecutor", "declarator": "mStatementExecutor", "var_name": "mStatementExecutor"}, {"original_string": "private SQLiteDatabase mDatabaseMock;", "modifier": "private", "type": "SQLiteDatabase", "declarator": "mDatabaseMock", "var_name": "mDatabaseMock"}], "file": "sqlitebuilder-android/src/test/java/com/nhaarman/sqlitebuilder/android/AndroidStatementExecutorTest.java"}, "test_case": {"identifier": "executeStatement_delegatesToDatabase", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void executeStatement_delegatesToDatabase() {\n    /* Given */\n    FinishedStatement statement = mock(FinishedStatement.class);\n    when(statement.iterator()).thenReturn(new SqlPartIterator());\n\n    /* When */\n    mStatementExecutor.execute(statement);\n\n    /* Then */\n    verify(mDatabaseMock).execSQL(anyString(), any(Object[].class));\n  }", "signature": "void executeStatement_delegatesToDatabase()", "full_signature": "@Test public void executeStatement_delegatesToDatabase()", "class_method_signature": "AndroidStatementExecutorTest.executeStatement_delegatesToDatabase()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "iterator", "execute", "execSQL", "verify", "anyString", "any"]}, "focal_class": {"identifier": "AndroidStatementExecutor", "superclass": "", "interfaces": "implements StatementExecutor<Cursor>", "fields": [{"original_string": "@NotNull\n  private final SQLiteDatabase mDatabase;", "modifier": "@NotNull\n  private final", "type": "SQLiteDatabase", "declarator": "mDatabase", "var_name": "mDatabase"}, {"original_string": "@NotNull\n  private final StatementConverter mStatementConverter;", "modifier": "@NotNull\n  private final", "type": "StatementConverter", "declarator": "mStatementConverter", "var_name": "mStatementConverter"}], "methods": [{"identifier": "AndroidStatementExecutor", "parameters": "(@NotNull final SQLiteDatabase database)", "modifiers": "public", "return": "", "signature": " AndroidStatementExecutor(@NotNull final SQLiteDatabase database)", "full_signature": "public  AndroidStatementExecutor(@NotNull final SQLiteDatabase database)", "class_method_signature": "AndroidStatementExecutor.AndroidStatementExecutor(@NotNull final SQLiteDatabase database)", "testcase": false, "constructor": true}, {"identifier": "toStringArray", "parameters": "(@NotNull final Object[] objects)", "modifiers": "private static", "return": "String[]", "signature": "String[] toStringArray(@NotNull final Object[] objects)", "full_signature": "private static String[] toStringArray(@NotNull final Object[] objects)", "class_method_signature": "AndroidStatementExecutor.toStringArray(@NotNull final Object[] objects)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(@NotNull final FinishedStatement finishedStatement)", "modifiers": "@Override public", "return": "void", "signature": "void execute(@NotNull final FinishedStatement finishedStatement)", "full_signature": "@Override public void execute(@NotNull final FinishedStatement finishedStatement)", "class_method_signature": "AndroidStatementExecutor.execute(@NotNull final FinishedStatement finishedStatement)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(@NotNull final FinishedSelectStatement finishedSelectStatement)", "modifiers": "@Override public", "return": "Cursor", "signature": "Cursor execute(@NotNull final FinishedSelectStatement finishedSelectStatement)", "full_signature": "@Override public Cursor execute(@NotNull final FinishedSelectStatement finishedSelectStatement)", "class_method_signature": "AndroidStatementExecutor.execute(@NotNull final FinishedSelectStatement finishedSelectStatement)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(@NotNull final FinishedInsertStatement finishedInsertStatement)", "modifiers": "@Override public", "return": "long", "signature": "long execute(@NotNull final FinishedInsertStatement finishedInsertStatement)", "full_signature": "@Override public long execute(@NotNull final FinishedInsertStatement finishedInsertStatement)", "class_method_signature": "AndroidStatementExecutor.execute(@NotNull final FinishedInsertStatement finishedInsertStatement)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(@NotNull final FinishedUpdateStatement finishedUpdateStatement)", "modifiers": "@Override public", "return": "long", "signature": "long execute(@NotNull final FinishedUpdateStatement finishedUpdateStatement)", "full_signature": "@Override public long execute(@NotNull final FinishedUpdateStatement finishedUpdateStatement)", "class_method_signature": "AndroidStatementExecutor.execute(@NotNull final FinishedUpdateStatement finishedUpdateStatement)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(@NotNull final FinishedDeleteStatement finishedDeleteStatement)", "modifiers": "@Override public", "return": "long", "signature": "long execute(@NotNull final FinishedDeleteStatement finishedDeleteStatement)", "full_signature": "@Override public long execute(@NotNull final FinishedDeleteStatement finishedDeleteStatement)", "class_method_signature": "AndroidStatementExecutor.execute(@NotNull final FinishedDeleteStatement finishedDeleteStatement)", "testcase": false, "constructor": false}], "file": "sqlitebuilder-android/src/main/java/com/nhaarman/sqlitebuilder/android/AndroidStatementExecutor.java"}, "focal_method": {"identifier": "execute", "parameters": "(@NotNull final FinishedStatement finishedStatement)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void execute(@NotNull final FinishedStatement finishedStatement) {\n    String sql = mStatementConverter.toSql(finishedStatement);\n    Object[] arguments = mStatementConverter.retrieveArguments(finishedStatement);\n    mDatabase.execSQL(sql, arguments);\n  }", "signature": "void execute(@NotNull final FinishedStatement finishedStatement)", "full_signature": "@Override public void execute(@NotNull final FinishedStatement finishedStatement)", "class_method_signature": "AndroidStatementExecutor.execute(@NotNull final FinishedStatement finishedStatement)", "testcase": false, "constructor": false, "invocations": ["toSql", "retrieveArguments", "execSQL"]}, "repository": {"repo_id": 35126599, "url": "https://github.com/nhaarman/SQLiteBuilder", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 69, "size": 1040, "license": "licensed"}}