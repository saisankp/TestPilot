{"test_class": {"identifier": "QoSHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Vertx vertx;", "modifier": "private", "type": "Vertx", "declarator": "vertx", "var_name": "vertx"}, {"original_string": "private String prefix;", "modifier": "private", "type": "String", "declarator": "prefix", "var_name": "prefix"}, {"original_string": "private String qosSettingsPath;", "modifier": "private", "type": "String", "declarator": "qosSettingsPath", "var_name": "qosSettingsPath"}, {"original_string": "private ResourceStorage storage;", "modifier": "private", "type": "ResourceStorage", "declarator": "storage", "var_name": "storage"}, {"original_string": "private MBeanServer mbeanServer;", "modifier": "private", "type": "MBeanServer", "declarator": "mbeanServer", "var_name": "mbeanServer"}, {"original_string": "private final String QOS_URI = \"/test/server/admin/v1/qos\";", "modifier": "private final", "type": "String", "declarator": "QOS_URI = \"/test/server/admin/v1/qos\"", "var_name": "QOS_URI"}], "file": "gateleen-qos/src/test/java/org/swisspush/gateleen/qos/QoSHandlerTest.java"}, "test_case": {"identifier": "testQoSSettingsUpdateWithInvalidPercentileValues", "parameters": "(TestContext context)", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testQoSSettingsUpdateWithInvalidPercentileValues(TestContext context){\n        QoSHandler qosHandler = new QoSHandler(vertx, storage, qosSettingsPath, new HashMap<>(), prefix);\n        HttpServerResponse response = spy(new CustomHttpServerResponse(new CaseInsensitiveHeaders()));\n\n        String percentileNotAnyOfExpectedNumber = \"{\" +\n                \"  \\\"config\\\":{\" +\n                \"    \\\"percentile\\\":11,\" +\n                \"    \\\"quorum\\\":40,\" +\n                \"    \\\"period\\\":5,\" +\n                \"    \\\"minSampleCount\\\" : 1000,\" +\n                \"    \\\"minSentinelCount\\\" : 5\" +\n                \"  }\" +\n                \"}\";\n\n        CustomHttpServerRequest request = new CustomHttpServerRequest(QOS_URI, HttpMethod.PUT, percentileNotAnyOfExpectedNumber, new CaseInsensitiveHeaders(), response);\n        qosHandler.handle(request);\n\n        verify(response, times(1)).setStatusCode(eq(StatusCode.BAD_REQUEST.getStatusCode()));\n        verify(response, times(1)).setStatusMessage(eq(\"Bad Request Validation failed\"));\n\n        String percentileNotANumber = \"{\" +\n                \"  \\\"config\\\":{\" +\n                \"    \\\"percentile\\\": \\\"boom\\\",\" +\n                \"    \\\"quorum\\\":40,\" +\n                \"    \\\"period\\\":5,\" +\n                \"    \\\"minSampleCount\\\" : 1000,\" +\n                \"    \\\"minSentinelCount\\\" : 5\" +\n                \"  }\" +\n                \"}\";\n\n        response = spy(new CustomHttpServerResponse(new CaseInsensitiveHeaders()));\n        request = new CustomHttpServerRequest(QOS_URI, HttpMethod.PUT, percentileNotANumber, new CaseInsensitiveHeaders(), response);\n        qosHandler.handle(request);\n\n        verify(response, times(1)).setStatusCode(eq(StatusCode.BAD_REQUEST.getStatusCode()));\n        verify(response, times(1)).setStatusMessage(eq(\"Bad Request Validation failed\"));\n    }", "signature": "void testQoSSettingsUpdateWithInvalidPercentileValues(TestContext context)", "full_signature": "@Test public void testQoSSettingsUpdateWithInvalidPercentileValues(TestContext context)", "class_method_signature": "QoSHandlerTest.testQoSSettingsUpdateWithInvalidPercentileValues(TestContext context)", "testcase": true, "constructor": false, "invocations": ["spy", "handle", "setStatusCode", "verify", "times", "eq", "getStatusCode", "setStatusMessage", "verify", "times", "eq", "spy", "handle", "setStatusCode", "verify", "times", "eq", "getStatusCode", "setStatusMessage", "verify", "times", "eq"]}, "focal_class": {"identifier": "QoSHandler", "superclass": "", "interfaces": "implements LoggableResource", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(QoSHandler.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(QoSHandler.class)", "var_name": "log"}, {"original_string": "private static final String UPDATE_ADDRESS = \"gateleen.qos-settings-updated\";", "modifier": "private static final", "type": "String", "declarator": "UPDATE_ADDRESS = \"gateleen.qos-settings-updated\"", "var_name": "UPDATE_ADDRESS"}, {"original_string": "private static final String JSON_FIELD_CONFIG = \"config\";", "modifier": "private static final", "type": "String", "declarator": "JSON_FIELD_CONFIG = \"config\"", "var_name": "JSON_FIELD_CONFIG"}, {"original_string": "private static final String JSON_FIELD_SENTINELS = \"sentinels\";", "modifier": "private static final", "type": "String", "declarator": "JSON_FIELD_SENTINELS = \"sentinels\"", "var_name": "JSON_FIELD_SENTINELS"}, {"original_string": "private static final String JSON_FIELD_RULES = \"rules\";", "modifier": "private static final", "type": "String", "declarator": "JSON_FIELD_RULES = \"rules\"", "var_name": "JSON_FIELD_RULES"}, {"original_string": "private static final String PERCENTILE_SUFFIX = \"thPercentile\";", "modifier": "private static final", "type": "String", "declarator": "PERCENTILE_SUFFIX = \"thPercentile\"", "var_name": "PERCENTILE_SUFFIX"}, {"original_string": "protected static final String REJECT_ACTION = \"reject\";", "modifier": "protected static final", "type": "String", "declarator": "REJECT_ACTION = \"reject\"", "var_name": "REJECT_ACTION"}, {"original_string": "protected static final String WARN_ACTION = \"warn\";", "modifier": "protected static final", "type": "String", "declarator": "WARN_ACTION = \"warn\"", "var_name": "WARN_ACTION"}, {"original_string": "private final Vertx vertx;", "modifier": "private final", "type": "Vertx", "declarator": "vertx", "var_name": "vertx"}, {"original_string": "private final ResourceStorage storage;", "modifier": "private final", "type": "ResourceStorage", "declarator": "storage", "var_name": "storage"}, {"original_string": "private final String qosSettingsUri;", "modifier": "private final", "type": "String", "declarator": "qosSettingsUri", "var_name": "qosSettingsUri"}, {"original_string": "private final Map<String, Object> properties;", "modifier": "private final", "type": "Map<String, Object>", "declarator": "properties", "var_name": "properties"}, {"original_string": "private final String prefix;", "modifier": "private final", "type": "String", "declarator": "prefix", "var_name": "prefix"}, {"original_string": "private final String qosSettingsSchema;", "modifier": "private final", "type": "String", "declarator": "qosSettingsSchema", "var_name": "qosSettingsSchema"}, {"original_string": "private MBeanServer mbeanServer;", "modifier": "private", "type": "MBeanServer", "declarator": "mbeanServer", "var_name": "mbeanServer"}, {"original_string": "private long timerId = -1;", "modifier": "private", "type": "long", "declarator": "timerId = -1", "var_name": "timerId"}, {"original_string": "private QoSConfig globalQoSConfig;", "modifier": "private", "type": "QoSConfig", "declarator": "globalQoSConfig", "var_name": "globalQoSConfig"}, {"original_string": "private List<QoSRule> qosRules;", "modifier": "private", "type": "List<QoSRule>", "declarator": "qosRules", "var_name": "qosRules"}, {"original_string": "private List<QoSSentinel> qosSentinels;", "modifier": "private", "type": "List<QoSSentinel>", "declarator": "qosSentinels", "var_name": "qosSentinels"}, {"original_string": "private boolean logQosConfigurationChanges = false;", "modifier": "private", "type": "boolean", "declarator": "logQosConfigurationChanges = false", "var_name": "logQosConfigurationChanges"}], "methods": [{"identifier": "QoSHandler", "parameters": "(final Vertx vertx, final ResourceStorage storage, final String qosSettingsPath, final Map<String, Object> properties, String prefix)", "modifiers": "public", "return": "", "signature": " QoSHandler(final Vertx vertx, final ResourceStorage storage, final String qosSettingsPath, final Map<String, Object> properties, String prefix)", "full_signature": "public  QoSHandler(final Vertx vertx, final ResourceStorage storage, final String qosSettingsPath, final Map<String, Object> properties, String prefix)", "class_method_signature": "QoSHandler.QoSHandler(final Vertx vertx, final ResourceStorage storage, final String qosSettingsPath, final Map<String, Object> properties, String prefix)", "testcase": false, "constructor": true}, {"identifier": "enableResourceLogging", "parameters": "(boolean resourceLoggingEnabled)", "modifiers": "@Override public", "return": "void", "signature": "void enableResourceLogging(boolean resourceLoggingEnabled)", "full_signature": "@Override public void enableResourceLogging(boolean resourceLoggingEnabled)", "class_method_signature": "QoSHandler.enableResourceLogging(boolean resourceLoggingEnabled)", "testcase": false, "constructor": false}, {"identifier": "setMBeanServer", "parameters": "(MBeanServer mbeanServer)", "modifiers": "protected", "return": "void", "signature": "void setMBeanServer(MBeanServer mbeanServer)", "full_signature": "protected void setMBeanServer(MBeanServer mbeanServer)", "class_method_signature": "QoSHandler.setMBeanServer(MBeanServer mbeanServer)", "testcase": false, "constructor": false}, {"identifier": "loadQoSSettings", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void loadQoSSettings()", "full_signature": "private void loadQoSSettings()", "class_method_signature": "QoSHandler.loadQoSSettings()", "testcase": false, "constructor": false}, {"identifier": "registerUpdateHandler", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void registerUpdateHandler()", "full_signature": "private void registerUpdateHandler()", "class_method_signature": "QoSHandler.registerUpdateHandler()", "testcase": false, "constructor": false}, {"identifier": "handle", "parameters": "(final HttpServerRequest request)", "modifiers": "public", "return": "boolean", "signature": "boolean handle(final HttpServerRequest request)", "full_signature": "public boolean handle(final HttpServerRequest request)", "class_method_signature": "QoSHandler.handle(final HttpServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "qoSHandledRequest", "parameters": "(final HttpServerRequest request)", "modifiers": "private", "return": "boolean", "signature": "boolean qoSHandledRequest(final HttpServerRequest request)", "full_signature": "private boolean qoSHandledRequest(final HttpServerRequest request)", "class_method_signature": "QoSHandler.qoSHandledRequest(final HttpServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "handleReject", "parameters": "(final HttpServerRequest request)", "modifiers": "private", "return": "void", "signature": "void handleReject(final HttpServerRequest request)", "full_signature": "private void handleReject(final HttpServerRequest request)", "class_method_signature": "QoSHandler.handleReject(final HttpServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "validateConfigurationValues", "parameters": "(Buffer qosSettingsBuffer)", "modifiers": "private", "return": "void", "signature": "void validateConfigurationValues(Buffer qosSettingsBuffer)", "full_signature": "private void validateConfigurationValues(Buffer qosSettingsBuffer)", "class_method_signature": "QoSHandler.validateConfigurationValues(Buffer qosSettingsBuffer)", "testcase": false, "constructor": false}, {"identifier": "extendedValidation", "parameters": "(QoSConfig config, List<QoSSentinel> sentinels, List<QoSRule> rules)", "modifiers": "private", "return": "void", "signature": "void extendedValidation(QoSConfig config, List<QoSSentinel> sentinels, List<QoSRule> rules)", "full_signature": "private void extendedValidation(QoSConfig config, List<QoSSentinel> sentinels, List<QoSRule> rules)", "class_method_signature": "QoSHandler.extendedValidation(QoSConfig config, List<QoSSentinel> sentinels, List<QoSRule> rules)", "testcase": false, "constructor": false}, {"identifier": "handleQoSSettingsUpdate", "parameters": "(final HttpServerRequest request)", "modifiers": "private", "return": "void", "signature": "void handleQoSSettingsUpdate(final HttpServerRequest request)", "full_signature": "private void handleQoSSettingsUpdate(final HttpServerRequest request)", "class_method_signature": "QoSHandler.handleQoSSettingsUpdate(final HttpServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "createQoSConfig", "parameters": "(JsonObject qosSettings)", "modifiers": "protected", "return": "QoSConfig", "signature": "QoSConfig createQoSConfig(JsonObject qosSettings)", "full_signature": "protected QoSConfig createQoSConfig(JsonObject qosSettings)", "class_method_signature": "QoSHandler.createQoSConfig(JsonObject qosSettings)", "testcase": false, "constructor": false}, {"identifier": "createQoSSentinels", "parameters": "(JsonObject qosSettings)", "modifiers": "protected", "return": "List<QoSSentinel>", "signature": "List<QoSSentinel> createQoSSentinels(JsonObject qosSettings)", "full_signature": "protected List<QoSSentinel> createQoSSentinels(JsonObject qosSettings)", "class_method_signature": "QoSHandler.createQoSSentinels(JsonObject qosSettings)", "testcase": false, "constructor": false}, {"identifier": "getOldSentinel", "parameters": "(String sentinelName)", "modifiers": "public", "return": "QoSSentinel", "signature": "QoSSentinel getOldSentinel(String sentinelName)", "full_signature": "public QoSSentinel getOldSentinel(String sentinelName)", "class_method_signature": "QoSHandler.getOldSentinel(String sentinelName)", "testcase": false, "constructor": false}, {"identifier": "createQoSRules", "parameters": "(JsonObject qosSettings)", "modifiers": "private", "return": "List<QoSRule>", "signature": "List<QoSRule> createQoSRules(JsonObject qosSettings)", "full_signature": "private List<QoSRule> createQoSRules(JsonObject qosSettings)", "class_method_signature": "QoSHandler.createQoSRules(JsonObject qosSettings)", "testcase": false, "constructor": false}, {"identifier": "parseQoSSettings", "parameters": "(final Buffer buffer)", "modifiers": "protected", "return": "JsonObject", "signature": "JsonObject parseQoSSettings(final Buffer buffer)", "full_signature": "protected JsonObject parseQoSSettings(final Buffer buffer)", "class_method_signature": "QoSHandler.parseQoSSettings(final Buffer buffer)", "testcase": false, "constructor": false}, {"identifier": "replaceConfigWildcards", "parameters": "(String configWithWildcards)", "modifiers": "private", "return": "String", "signature": "String replaceConfigWildcards(String configWithWildcards)", "full_signature": "private String replaceConfigWildcards(String configWithWildcards)", "class_method_signature": "QoSHandler.replaceConfigWildcards(String configWithWildcards)", "testcase": false, "constructor": false}, {"identifier": "isQoSSettingsUpdate", "parameters": "(final HttpServerRequest request)", "modifiers": "private", "return": "boolean", "signature": "boolean isQoSSettingsUpdate(final HttpServerRequest request)", "full_signature": "private boolean isQoSSettingsUpdate(final HttpServerRequest request)", "class_method_signature": "QoSHandler.isQoSSettingsUpdate(final HttpServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "updateQoSSettings", "parameters": "(final Buffer buffer)", "modifiers": "private", "return": "void", "signature": "void updateQoSSettings(final Buffer buffer)", "full_signature": "private void updateQoSSettings(final Buffer buffer)", "class_method_signature": "QoSHandler.updateQoSSettings(final Buffer buffer)", "testcase": false, "constructor": false}, {"identifier": "cancelTimer", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void cancelTimer()", "full_signature": "protected void cancelTimer()", "class_method_signature": "QoSHandler.cancelTimer()", "testcase": false, "constructor": false}, {"identifier": "evaluateQoSActions", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void evaluateQoSActions()", "full_signature": "protected void evaluateQoSActions()", "class_method_signature": "QoSHandler.evaluateQoSActions()", "testcase": false, "constructor": false}, {"identifier": "actionNecessary", "parameters": "(Double ratio, double thresholdSentinelRatio)", "modifiers": "protected", "return": "boolean", "signature": "boolean actionNecessary(Double ratio, double thresholdSentinelRatio)", "full_signature": "protected boolean actionNecessary(Double ratio, double thresholdSentinelRatio)", "class_method_signature": "QoSHandler.actionNecessary(Double ratio, double thresholdSentinelRatio)", "testcase": false, "constructor": false}, {"identifier": "setGlobalQoSConfig", "parameters": "(QoSConfig globalQoSConfig)", "modifiers": "protected", "return": "void", "signature": "void setGlobalQoSConfig(QoSConfig globalQoSConfig)", "full_signature": "protected void setGlobalQoSConfig(QoSConfig globalQoSConfig)", "class_method_signature": "QoSHandler.setGlobalQoSConfig(QoSConfig globalQoSConfig)", "testcase": false, "constructor": false}, {"identifier": "getQosRules", "parameters": "()", "modifiers": "protected", "return": "List<QoSRule>", "signature": "List<QoSRule> getQosRules()", "full_signature": "protected List<QoSRule> getQosRules()", "class_method_signature": "QoSHandler.getQosRules()", "testcase": false, "constructor": false}, {"identifier": "setQosRules", "parameters": "(List<QoSRule> qosRules)", "modifiers": "protected", "return": "void", "signature": "void setQosRules(List<QoSRule> qosRules)", "full_signature": "protected void setQosRules(List<QoSRule> qosRules)", "class_method_signature": "QoSHandler.setQosRules(List<QoSRule> qosRules)", "testcase": false, "constructor": false}, {"identifier": "setQosSentinels", "parameters": "(List<QoSSentinel> qosSentinels)", "modifiers": "protected", "return": "void", "signature": "void setQosSentinels(List<QoSSentinel> qosSentinels)", "full_signature": "protected void setQosSentinels(List<QoSSentinel> qosSentinels)", "class_method_signature": "QoSHandler.setQosSentinels(List<QoSSentinel> qosSentinels)", "testcase": false, "constructor": false}, {"identifier": "getQosSentinels", "parameters": "()", "modifiers": "protected", "return": "List<QoSSentinel>", "signature": "List<QoSSentinel> getQosSentinels()", "full_signature": "protected List<QoSSentinel> getQosSentinels()", "class_method_signature": "QoSHandler.getQosSentinels()", "testcase": false, "constructor": false}], "file": "gateleen-qos/src/main/java/org/swisspush/gateleen/qos/QoSHandler.java"}, "focal_method": {"identifier": "handle", "parameters": "(final HttpServerRequest request)", "modifiers": "public", "return": "boolean", "body": "public boolean handle(final HttpServerRequest request) {\n\n        // QoS Settings update\n        if (isQoSSettingsUpdate(request)) {\n            handleQoSSettingsUpdate(request);\n            return true;\n        }\n\n        // performs - if neccessary - the QoS action\n        return qoSHandledRequest(request);\n    }", "signature": "boolean handle(final HttpServerRequest request)", "full_signature": "public boolean handle(final HttpServerRequest request)", "class_method_signature": "QoSHandler.handle(final HttpServerRequest request)", "testcase": false, "constructor": false, "invocations": ["isQoSSettingsUpdate", "handleQoSSettingsUpdate", "qoSHandledRequest"]}, "repository": {"repo_id": 52609528, "url": "https://github.com/swisspush/gateleen", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 63, "size": 2919, "license": "licensed"}}