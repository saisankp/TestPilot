{"test_class": {"identifier": "RewriteRowAndColumnsWithZerosTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RewriteRowAndColumnsWithZeros rewriteMatrix;", "modifier": "private", "type": "RewriteRowAndColumnsWithZeros", "declarator": "rewriteMatrix", "var_name": "rewriteMatrix"}], "file": "algs/src/test/java/com/github/pedrovgs/problem55/RewriteRowAndColumnsWithZerosTest.java"}, "test_case": {"identifier": "shouldRewriteRowAndColumnsWithZeros", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void shouldRewriteRowAndColumnsWithZeros() {\n    int[][] matrix = {\n        { 1, 1, 0 }, { 1, 0, 1 }, { 1, 1, 1 }\n    };\n\n    rewriteMatrix.rewrite(matrix);\n\n    int[][] expectedMatrix = {\n        { 0, 0, 0 }, { 0, 0, 0 }, { 1, 0, 0 }\n    };\n    assertArrayEquals(expectedMatrix, matrix);\n  }", "signature": "void shouldRewriteRowAndColumnsWithZeros()", "full_signature": "@Test public void shouldRewriteRowAndColumnsWithZeros()", "class_method_signature": "RewriteRowAndColumnsWithZerosTest.shouldRewriteRowAndColumnsWithZeros()", "testcase": true, "constructor": false, "invocations": ["rewrite", "assertArrayEquals"]}, "focal_class": {"identifier": "RewriteRowAndColumnsWithZeros", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "rewrite", "parameters": "(int[][] matrix)", "modifiers": "public", "return": "void", "signature": "void rewrite(int[][] matrix)", "full_signature": "public void rewrite(int[][] matrix)", "class_method_signature": "RewriteRowAndColumnsWithZeros.rewrite(int[][] matrix)", "testcase": false, "constructor": false}, {"identifier": "rewriteRow", "parameters": "(int[][] matrix, int i, Set<Integer> rowsToSkip)", "modifiers": "private", "return": "void", "signature": "void rewriteRow(int[][] matrix, int i, Set<Integer> rowsToSkip)", "full_signature": "private void rewriteRow(int[][] matrix, int i, Set<Integer> rowsToSkip)", "class_method_signature": "RewriteRowAndColumnsWithZeros.rewriteRow(int[][] matrix, int i, Set<Integer> rowsToSkip)", "testcase": false, "constructor": false}, {"identifier": "rewriteColumn", "parameters": "(int[][] matrix, int j, Set<Integer> columnsToSkip)", "modifiers": "private", "return": "void", "signature": "void rewriteColumn(int[][] matrix, int j, Set<Integer> columnsToSkip)", "full_signature": "private void rewriteColumn(int[][] matrix, int j, Set<Integer> columnsToSkip)", "class_method_signature": "RewriteRowAndColumnsWithZeros.rewriteColumn(int[][] matrix, int j, Set<Integer> columnsToSkip)", "testcase": false, "constructor": false}, {"identifier": "shouldPaintRowAndColumn", "parameters": "(int[][] matrix, int i, int j, Set<Integer> rowsToSkip,\n      Set<Integer> columnsToSkip)", "modifiers": "private", "return": "boolean", "signature": "boolean shouldPaintRowAndColumn(int[][] matrix, int i, int j, Set<Integer> rowsToSkip,\n      Set<Integer> columnsToSkip)", "full_signature": "private boolean shouldPaintRowAndColumn(int[][] matrix, int i, int j, Set<Integer> rowsToSkip,\n      Set<Integer> columnsToSkip)", "class_method_signature": "RewriteRowAndColumnsWithZeros.shouldPaintRowAndColumn(int[][] matrix, int i, int j, Set<Integer> rowsToSkip,\n      Set<Integer> columnsToSkip)", "testcase": false, "constructor": false}, {"identifier": "validateInput", "parameters": "(int[][] matrix)", "modifiers": "private", "return": "void", "signature": "void validateInput(int[][] matrix)", "full_signature": "private void validateInput(int[][] matrix)", "class_method_signature": "RewriteRowAndColumnsWithZeros.validateInput(int[][] matrix)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem55/RewriteRowAndColumnsWithZeros.java"}, "focal_method": {"identifier": "rewrite", "parameters": "(int[][] matrix)", "modifiers": "public", "return": "void", "body": "public void rewrite(int[][] matrix) {\n    validateInput(matrix);\n\n    Set<Integer> rowsToSkip = new HashSet<Integer>();\n    Set<Integer> columnsToSkip = new HashSet<Integer>();\n    for (int i = 0; i < matrix.length; i++) {\n      for (int j = 0; j < matrix[i].length; j++) {\n        if (shouldPaintRowAndColumn(matrix, i, j, rowsToSkip, columnsToSkip)) {\n          rewriteRow(matrix, i, rowsToSkip);\n          rewriteColumn(matrix, j, columnsToSkip);\n        }\n      }\n    }\n  }", "signature": "void rewrite(int[][] matrix)", "full_signature": "public void rewrite(int[][] matrix)", "class_method_signature": "RewriteRowAndColumnsWithZeros.rewrite(int[][] matrix)", "testcase": false, "constructor": false, "invocations": ["validateInput", "shouldPaintRowAndColumn", "rewriteRow", "rewriteColumn"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}