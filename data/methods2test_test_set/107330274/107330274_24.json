{"test_class": {"identifier": "PeriodicallyRefreshingObjectConfigurationResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final MockEnvironment configuration = new MockEnvironment();", "modifier": "private final", "type": "MockEnvironment", "declarator": "configuration = new MockEnvironment()", "var_name": "configuration"}, {"original_string": "private final DirectProcessor<Long> updateTrigger = DirectProcessor.create();", "modifier": "private final", "type": "DirectProcessor<Long>", "declarator": "updateTrigger = DirectProcessor.create()", "var_name": "updateTrigger"}, {"original_string": "private final CloseableReference<ObjectConfigurationResolver<MyObject, MyObjectConfig>> resolverRef = Archaius2Ext.newObjectConfigurationResolver(\n            \"object\",\n            configuration,\n            MyObject::getName,\n            MyObjectConfig.class,\n            Archaius2Ext.newConfiguration(MyObjectConfig.class, \"default\", configuration),\n            updateTrigger\n    );", "modifier": "private final", "type": "CloseableReference<ObjectConfigurationResolver<MyObject, MyObjectConfig>>", "declarator": "resolverRef = Archaius2Ext.newObjectConfigurationResolver(\n            \"object\",\n            configuration,\n            MyObject::getName,\n            MyObjectConfig.class,\n            Archaius2Ext.newConfiguration(MyObjectConfig.class, \"default\", configuration),\n            updateTrigger\n    )", "var_name": "resolverRef"}, {"original_string": "private final ObjectConfigurationResolver<MyObject, MyObjectConfig> resolver = resolverRef.get();", "modifier": "private final", "type": "ObjectConfigurationResolver<MyObject, MyObjectConfig>", "declarator": "resolver = resolverRef.get()", "var_name": "resolver"}], "file": "titus-common/src/test/java/com/netflix/titus/common/util/archaius2/PeriodicallyRefreshingObjectConfigurationResolverTest.java"}, "test_case": {"identifier": "testObjectOverrides", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testObjectOverrides() {\n        update(\"object.a.pattern\", \"a\",\n                \"object.a.limit\", \"200\",\n                \"object.b.pattern\", \"b\",\n                \"object.b.limit\", \"300\"\n        );\n        assertThat(resolver.resolve(new MyObject(\"a\")).getLimit()).isEqualTo(200);\n        assertThat(resolver.resolve(new MyObject(\"b\")).getLimit()).isEqualTo(300);\n        assertThat(resolver.resolve(new MyObject(\"x\")).getLimit()).isEqualTo(100);\n    }", "signature": "void testObjectOverrides()", "full_signature": "@Test public void testObjectOverrides()", "class_method_signature": "PeriodicallyRefreshingObjectConfigurationResolverTest.testObjectOverrides()", "testcase": true, "constructor": false, "invocations": ["update", "isEqualTo", "assertThat", "getLimit", "resolve", "isEqualTo", "assertThat", "getLimit", "resolve", "isEqualTo", "assertThat", "getLimit", "resolve"]}, "focal_class": {"identifier": "PeriodicallyRefreshingObjectConfigurationResolver", "superclass": "", "interfaces": "implements ObjectConfigurationResolver<OBJECT, CONFIG>", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(PeriodicallyRefreshingObjectConfigurationResolver.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(PeriodicallyRefreshingObjectConfigurationResolver.class)", "var_name": "logger"}, {"original_string": "private static final Duration RETRY_INTERVAL = Duration.ofSeconds(5);", "modifier": "private static final", "type": "Duration", "declarator": "RETRY_INTERVAL = Duration.ofSeconds(5)", "var_name": "RETRY_INTERVAL"}, {"original_string": "private final Config configuration;", "modifier": "private final", "type": "Config", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private final Archaius2ObjectConfigurationResolver<OBJECT, CONFIG> delegate;", "modifier": "private final", "type": "Archaius2ObjectConfigurationResolver<OBJECT, CONFIG>", "declarator": "delegate", "var_name": "delegate"}], "methods": [{"identifier": "PeriodicallyRefreshingObjectConfigurationResolver", "parameters": "(Config configuration,\n                                                      Function<OBJECT, String> selectorFieldAccessor,\n                                                      Function<String, CONFIG> dynamicProxyFactory,\n                                                      CONFIG defaultConfig)", "modifiers": "", "return": "", "signature": " PeriodicallyRefreshingObjectConfigurationResolver(Config configuration,\n                                                      Function<OBJECT, String> selectorFieldAccessor,\n                                                      Function<String, CONFIG> dynamicProxyFactory,\n                                                      CONFIG defaultConfig)", "full_signature": "  PeriodicallyRefreshingObjectConfigurationResolver(Config configuration,\n                                                      Function<OBJECT, String> selectorFieldAccessor,\n                                                      Function<String, CONFIG> dynamicProxyFactory,\n                                                      CONFIG defaultConfig)", "class_method_signature": "PeriodicallyRefreshingObjectConfigurationResolver.PeriodicallyRefreshingObjectConfigurationResolver(Config configuration,\n                                                      Function<OBJECT, String> selectorFieldAccessor,\n                                                      Function<String, CONFIG> dynamicProxyFactory,\n                                                      CONFIG defaultConfig)", "testcase": false, "constructor": true}, {"identifier": "resolve", "parameters": "(OBJECT object)", "modifiers": "@Override public", "return": "CONFIG", "signature": "CONFIG resolve(OBJECT object)", "full_signature": "@Override public CONFIG resolve(OBJECT object)", "class_method_signature": "PeriodicallyRefreshingObjectConfigurationResolver.resolve(OBJECT object)", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "()", "modifiers": "", "return": "void", "signature": "void refresh()", "full_signature": " void refresh()", "class_method_signature": "PeriodicallyRefreshingObjectConfigurationResolver.refresh()", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(Config configuration,\n                                                                                                        Function<OBJECT, String> selectorFieldAccessor,\n                                                                                                        Function<String, CONFIG> dynamicProxyFactory,\n                                                                                                        CONFIG defaultConfig,\n                                                                                                        Flux<Long> updateTrigger)", "modifiers": "static", "return": "CloseableReference<ObjectConfigurationResolver<OBJECT, CONFIG>>", "signature": "CloseableReference<ObjectConfigurationResolver<OBJECT, CONFIG>> newInstance(Config configuration,\n                                                                                                        Function<OBJECT, String> selectorFieldAccessor,\n                                                                                                        Function<String, CONFIG> dynamicProxyFactory,\n                                                                                                        CONFIG defaultConfig,\n                                                                                                        Flux<Long> updateTrigger)", "full_signature": "static CloseableReference<ObjectConfigurationResolver<OBJECT, CONFIG>> newInstance(Config configuration,\n                                                                                                        Function<OBJECT, String> selectorFieldAccessor,\n                                                                                                        Function<String, CONFIG> dynamicProxyFactory,\n                                                                                                        CONFIG defaultConfig,\n                                                                                                        Flux<Long> updateTrigger)", "class_method_signature": "PeriodicallyRefreshingObjectConfigurationResolver.newInstance(Config configuration,\n                                                                                                        Function<OBJECT, String> selectorFieldAccessor,\n                                                                                                        Function<String, CONFIG> dynamicProxyFactory,\n                                                                                                        CONFIG defaultConfig,\n                                                                                                        Flux<Long> updateTrigger)", "testcase": false, "constructor": false}], "file": "titus-common/src/main/java/com/netflix/titus/common/util/archaius2/PeriodicallyRefreshingObjectConfigurationResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(OBJECT object)", "modifiers": "@Override public", "return": "CONFIG", "body": "@Override\n    public CONFIG resolve(OBJECT object) {\n        return delegate.resolve(object);\n    }", "signature": "CONFIG resolve(OBJECT object)", "full_signature": "@Override public CONFIG resolve(OBJECT object)", "class_method_signature": "PeriodicallyRefreshingObjectConfigurationResolver.resolve(OBJECT object)", "testcase": false, "constructor": false, "invocations": ["resolve"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}