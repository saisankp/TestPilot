{"test_class": {"identifier": "ConstraintAnnotationAttributeHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ConstraintAnnotationAttributeHandler testee;", "modifier": "private", "type": "ConstraintAnnotationAttributeHandler", "declarator": "testee", "var_name": "testee"}, {"original_string": "private BeanResolverStrategy beanResolver;", "modifier": "private", "type": "BeanResolverStrategy", "declarator": "beanResolver", "var_name": "beanResolver"}, {"original_string": "private PropertyResolver propertyResolver;", "modifier": "private", "type": "PropertyResolver", "declarator": "propertyResolver", "var_name": "propertyResolver"}, {"original_string": "private Environment env;", "modifier": "private", "type": "Environment", "declarator": "env", "var_name": "env"}, {"original_string": "@NotNull(message = \"Enter a value for t1_str\")\n\tprivate final String t1_str = null;", "modifier": "@NotNull(message = \"Enter a value for t1_str\")\n\tprivate final", "type": "String", "declarator": "t1_str = null", "var_name": "t1_str"}, {"original_string": "@NotNull\n\tprivate final String t2_str = null;", "modifier": "@NotNull\n\tprivate final", "type": "String", "declarator": "t2_str = null", "var_name": "t2_str"}, {"original_string": "@NotNull(message = \"${spel.validation.message}\")\n\tprivate final String t3_str = null;", "modifier": "@NotNull(message = \"${spel.validation.message}\")\n\tprivate final", "type": "String", "declarator": "t3_str = null", "var_name": "t3_str"}], "file": "nimbus-core/src/test/java/com/antheminc/oss/nimbus/domain/config/builder/attributes/ConstraintAnnotationAttributeHandlerTest.java"}, "test_case": {"identifier": "testUseClientDefinedDefaultMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testUseClientDefinedDefaultMessage() throws Exception {\n\t\tString expected = \"Very Important Field!\";\n\t\tfinal Field annotatedElement = this.getClass().getDeclaredField(\"t2_str\");\n\t\tfinal Annotation annotation = annotatedElement.getAnnotation(NotNull.class);\n\t\tMockito.when(this.propertyResolver.getProperty(\"javax.validation.constraints.NotNull.message\")).thenReturn(expected);\n\t\tfinal Map<String, Object> actual = this.testee.generateFrom(annotatedElement, annotation);\n\t\tAssert.assertEquals(expected, actual.get(\"message\"));\n\t}", "signature": "void testUseClientDefinedDefaultMessage()", "full_signature": "@Test public void testUseClientDefinedDefaultMessage()", "class_method_signature": "ConstraintAnnotationAttributeHandlerTest.testUseClientDefinedDefaultMessage()", "testcase": true, "constructor": false, "invocations": ["getDeclaredField", "getClass", "getAnnotation", "thenReturn", "when", "getProperty", "generateFrom", "assertEquals", "get"]}, "focal_class": {"identifier": "ConstraintAnnotationAttributeHandler", "superclass": "", "interfaces": "implements AnnotationAttributeHandler", "fields": [{"original_string": "public static final String ATTRIBUTE_MESSAGE_NAME = \"message\";", "modifier": "public static final", "type": "String", "declarator": "ATTRIBUTE_MESSAGE_NAME = \"message\"", "var_name": "ATTRIBUTE_MESSAGE_NAME"}, {"original_string": "public static final String ATTRIBUTE_MESSAGE_VALUE_DEFAULT = \"\";", "modifier": "public static final", "type": "String", "declarator": "ATTRIBUTE_MESSAGE_VALUE_DEFAULT = \"\"", "var_name": "ATTRIBUTE_MESSAGE_VALUE_DEFAULT"}, {"original_string": "public static final String DEFAULT_VALIDATION_MESSAGES_PATH = \"validationMessages\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_VALIDATION_MESSAGES_PATH = \"validationMessages\"", "var_name": "DEFAULT_VALIDATION_MESSAGES_PATH"}, {"original_string": "public static final String JSR_DEFAULT_MESSAGE_REGEX = \"\\\\{javax.validation.constraints.(.*).message\\\\}\";", "modifier": "public static final", "type": "String", "declarator": "JSR_DEFAULT_MESSAGE_REGEX = \"\\\\{javax.validation.constraints.(.*).message\\\\}\"", "var_name": "JSR_DEFAULT_MESSAGE_REGEX"}, {"original_string": "public static final String SPEL_CHAR_KEY = \"$\";", "modifier": "public static final", "type": "String", "declarator": "SPEL_CHAR_KEY = \"$\"", "var_name": "SPEL_CHAR_KEY"}, {"original_string": "public static final String REPLACE_REGEX = \"\\\\{(?<messageKey>.*)\\\\}\";", "modifier": "public static final", "type": "String", "declarator": "REPLACE_REGEX = \"\\\\{(?<messageKey>.*)\\\\}\"", "var_name": "REPLACE_REGEX"}, {"original_string": "public static final String ANNOTATION_PREFIX = \"@\";", "modifier": "public static final", "type": "String", "declarator": "ANNOTATION_PREFIX = \"@\"", "var_name": "ANNOTATION_PREFIX"}, {"original_string": "private static final JustLogit LOG = new JustLogit(ConstraintAnnotationAttributeHandler.class);", "modifier": "private static final", "type": "JustLogit", "declarator": "LOG = new JustLogit(ConstraintAnnotationAttributeHandler.class)", "var_name": "LOG"}, {"original_string": "private final PropertyResolver propertyResolver;", "modifier": "private final", "type": "PropertyResolver", "declarator": "propertyResolver", "var_name": "propertyResolver"}, {"original_string": "private final BeanResolverStrategy beanResolver;", "modifier": "private final", "type": "BeanResolverStrategy", "declarator": "beanResolver", "var_name": "beanResolver"}, {"original_string": "private final Environment env;", "modifier": "private final", "type": "Environment", "declarator": "env", "var_name": "env"}, {"original_string": "private final ResourceBundle defaultMessagesBundle;", "modifier": "private final", "type": "ResourceBundle", "declarator": "defaultMessagesBundle", "var_name": "defaultMessagesBundle"}, {"original_string": "private Pattern replacePattern = Pattern.compile(REPLACE_REGEX);", "modifier": "private", "type": "Pattern", "declarator": "replacePattern = Pattern.compile(REPLACE_REGEX)", "var_name": "replacePattern"}], "methods": [{"identifier": "ConstraintAnnotationAttributeHandler", "parameters": "(BeanResolverStrategy beanResolver)", "modifiers": "public", "return": "", "signature": " ConstraintAnnotationAttributeHandler(BeanResolverStrategy beanResolver)", "full_signature": "public  ConstraintAnnotationAttributeHandler(BeanResolverStrategy beanResolver)", "class_method_signature": "ConstraintAnnotationAttributeHandler.ConstraintAnnotationAttributeHandler(BeanResolverStrategy beanResolver)", "testcase": false, "constructor": true}, {"identifier": "ConstraintAnnotationAttributeHandler", "parameters": "(BeanResolverStrategy beanResolver,\n\t\t\tString defaultValidationMessagesPath)", "modifiers": "public", "return": "", "signature": " ConstraintAnnotationAttributeHandler(BeanResolverStrategy beanResolver,\n\t\t\tString defaultValidationMessagesPath)", "full_signature": "public  ConstraintAnnotationAttributeHandler(BeanResolverStrategy beanResolver,\n\t\t\tString defaultValidationMessagesPath)", "class_method_signature": "ConstraintAnnotationAttributeHandler.ConstraintAnnotationAttributeHandler(BeanResolverStrategy beanResolver,\n\t\t\tString defaultValidationMessagesPath)", "testcase": false, "constructor": true}, {"identifier": "generateFrom", "parameters": "(AnnotatedElement annotatedElement, Annotation annotation)", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> generateFrom(AnnotatedElement annotatedElement, Annotation annotation)", "full_signature": "@Override public Map<String, Object> generateFrom(AnnotatedElement annotatedElement, Annotation annotation)", "class_method_signature": "ConstraintAnnotationAttributeHandler.generateFrom(AnnotatedElement annotatedElement, Annotation annotation)", "testcase": false, "constructor": false}, {"identifier": "resolveMessage", "parameters": "(String initialMessageValue, AnnotatedElement annotatedElement,\n\t\t\tAnnotation annotation)", "modifiers": "private", "return": "String", "signature": "String resolveMessage(String initialMessageValue, AnnotatedElement annotatedElement,\n\t\t\tAnnotation annotation)", "full_signature": "private String resolveMessage(String initialMessageValue, AnnotatedElement annotatedElement,\n\t\t\tAnnotation annotation)", "class_method_signature": "ConstraintAnnotationAttributeHandler.resolveMessage(String initialMessageValue, AnnotatedElement annotatedElement,\n\t\t\tAnnotation annotation)", "testcase": false, "constructor": false}, {"identifier": "resolveDefaultMessage", "parameters": "(String initialMessageValue, AnnotatedElement annotatedElement,\n\t\t\tAnnotation annotation)", "modifiers": "private", "return": "String", "signature": "String resolveDefaultMessage(String initialMessageValue, AnnotatedElement annotatedElement,\n\t\t\tAnnotation annotation)", "full_signature": "private String resolveDefaultMessage(String initialMessageValue, AnnotatedElement annotatedElement,\n\t\t\tAnnotation annotation)", "class_method_signature": "ConstraintAnnotationAttributeHandler.resolveDefaultMessage(String initialMessageValue, AnnotatedElement annotatedElement,\n\t\t\tAnnotation annotation)", "testcase": false, "constructor": false}], "file": "nimbus-core/src/main/java/com/antheminc/oss/nimbus/domain/config/builder/attributes/ConstraintAnnotationAttributeHandler.java"}, "focal_method": {"identifier": "generateFrom", "parameters": "(AnnotatedElement annotatedElement, Annotation annotation)", "modifiers": "@Override public", "return": "Map<String, Object>", "body": "@Override\n\tpublic Map<String, Object> generateFrom(AnnotatedElement annotatedElement, Annotation annotation) {\n\t\tfinal AnnotationAttributes annotationAttributes = AnnotationUtils.getAnnotationAttributes(annotatedElement,\n\t\t\t\tannotation, false, true);\n\t\tfinal HashMap<String, Object> map = new HashMap<>();\n\n\t\tfor (final Entry<String, Object> entry : annotationAttributes.entrySet()) {\n\t\t\tObject resolvedValue = entry.getValue();\n\t\t\tif (entry.getKey().equals(ATTRIBUTE_MESSAGE_NAME)\n\t\t\t\t\t&& ((String) entry.getValue()).matches(JSR_DEFAULT_MESSAGE_REGEX)) {\n\t\t\t\tresolvedValue = this.resolveMessage((String) entry.getValue(), annotatedElement, annotation);\n\t\t\t}\n\t\t\tmap.put(entry.getKey(), resolvedValue);\n\t\t}\n\t\treturn map;\n\t}", "signature": "Map<String, Object> generateFrom(AnnotatedElement annotatedElement, Annotation annotation)", "full_signature": "@Override public Map<String, Object> generateFrom(AnnotatedElement annotatedElement, Annotation annotation)", "class_method_signature": "ConstraintAnnotationAttributeHandler.generateFrom(AnnotatedElement annotatedElement, Annotation annotation)", "testcase": false, "constructor": false, "invocations": ["getAnnotationAttributes", "entrySet", "getValue", "equals", "getKey", "matches", "getValue", "resolveMessage", "getValue", "put", "getKey"]}, "repository": {"repo_id": 96120606, "url": "https://github.com/openanthem/nimbus-core", "language": "Java", "is_fork": false, "fork_count": 48, "stargazer_count": 9, "size": 55787, "license": "licensed"}}