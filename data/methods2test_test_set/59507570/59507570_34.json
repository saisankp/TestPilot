{"test_class": {"identifier": "ItemValuesMapTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String FULL_NAME = \"name\";", "modifier": "public static final", "type": "String", "declarator": "FULL_NAME = \"name\"", "var_name": "FULL_NAME"}, {"original_string": "public static final String FIRST_NAME = \"name_first\";", "modifier": "public static final", "type": "String", "declarator": "FIRST_NAME = \"name_first\"", "var_name": "FIRST_NAME"}, {"original_string": "public static final String MIDDLE_NAME = \"name_middle\";", "modifier": "public static final", "type": "String", "declarator": "MIDDLE_NAME = \"name_middle\"", "var_name": "MIDDLE_NAME"}, {"original_string": "public static final String SURNAME = \"name_last\";", "modifier": "public static final", "type": "String", "declarator": "SURNAME = \"name_last\"", "var_name": "SURNAME"}, {"original_string": "public static final String NICKNAME = \"name_nickname\";", "modifier": "public static final", "type": "String", "declarator": "NICKNAME = \"name_nickname\"", "var_name": "NICKNAME"}, {"original_string": "public static final String OTHER_NAME = \"name_other\";", "modifier": "public static final", "type": "String", "declarator": "OTHER_NAME = \"name_other\"", "var_name": "OTHER_NAME"}], "file": "app/src/test/java/org/unicef/rapidreg/service/cache/ItemValuesMapTest.java"}, "test_case": {"identifier": "should_concat_multi_string_with_blank_when_no_one_exist", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_concat_multi_string_with_blank_when_no_one_exist() throws Exception {\n        assertThat(new ItemValuesMap().concatMultiStringsWithBlank(FULL_NAME),is(\"\"));\n    }", "signature": "void should_concat_multi_string_with_blank_when_no_one_exist()", "full_signature": "@Test public void should_concat_multi_string_with_blank_when_no_one_exist()", "class_method_signature": "ItemValuesMapTest.should_concat_multi_string_with_blank_when_no_one_exist()", "testcase": true, "constructor": false, "invocations": ["assertThat", "concatMultiStringsWithBlank", "is"]}, "focal_class": {"identifier": "ItemValuesMap", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private Map<String, Object> values;", "modifier": "private", "type": "Map<String, Object>", "declarator": "values", "var_name": "values"}], "methods": [{"identifier": "ItemValuesMap", "parameters": "()", "modifiers": "public", "return": "", "signature": " ItemValuesMap()", "full_signature": "public  ItemValuesMap()", "class_method_signature": "ItemValuesMap.ItemValuesMap()", "testcase": false, "constructor": true}, {"identifier": "ItemValuesMap", "parameters": "(Map<String, Object> values)", "modifiers": "public", "return": "", "signature": " ItemValuesMap(Map<String, Object> values)", "full_signature": "public  ItemValuesMap(Map<String, Object> values)", "class_method_signature": "ItemValuesMap.ItemValuesMap(Map<String, Object> values)", "testcase": false, "constructor": true}, {"identifier": "fromJson", "parameters": "(String json)", "modifiers": "public static", "return": "ItemValuesMap", "signature": "ItemValuesMap fromJson(String json)", "full_signature": "public static ItemValuesMap fromJson(String json)", "class_method_signature": "ItemValuesMap.fromJson(String json)", "testcase": false, "constructor": false}, {"identifier": "addItem", "parameters": "(String itemKey, Object itemValue)", "modifiers": "public", "return": "void", "signature": "void addItem(String itemKey, Object itemValue)", "full_signature": "public void addItem(String itemKey, Object itemValue)", "class_method_signature": "ItemValuesMap.addItem(String itemKey, Object itemValue)", "testcase": false, "constructor": false}, {"identifier": "removeItem", "parameters": "(String itemKey)", "modifiers": "public", "return": "void", "signature": "void removeItem(String itemKey)", "full_signature": "public void removeItem(String itemKey)", "class_method_signature": "ItemValuesMap.removeItem(String itemKey)", "testcase": false, "constructor": false}, {"identifier": "addBooleanItem", "parameters": "(String itemKey, Boolean value)", "modifiers": "public", "return": "void", "signature": "void addBooleanItem(String itemKey, Boolean value)", "full_signature": "public void addBooleanItem(String itemKey, Boolean value)", "class_method_signature": "ItemValuesMap.addBooleanItem(String itemKey, Boolean value)", "testcase": false, "constructor": false}, {"identifier": "addStringItem", "parameters": "(String itemKey, String value)", "modifiers": "public", "return": "void", "signature": "void addStringItem(String itemKey, String value)", "full_signature": "public void addStringItem(String itemKey, String value)", "class_method_signature": "ItemValuesMap.addStringItem(String itemKey, String value)", "testcase": false, "constructor": false}, {"identifier": "addNumberItem", "parameters": "(String itemKey, Number value)", "modifiers": "public", "return": "void", "signature": "void addNumberItem(String itemKey, Number value)", "full_signature": "public void addNumberItem(String itemKey, Number value)", "class_method_signature": "ItemValuesMap.addNumberItem(String itemKey, Number value)", "testcase": false, "constructor": false}, {"identifier": "addListItem", "parameters": "(String itemkey, List value)", "modifiers": "public", "return": "void", "signature": "void addListItem(String itemkey, List value)", "full_signature": "public void addListItem(String itemkey, List value)", "class_method_signature": "ItemValuesMap.addListItem(String itemkey, List value)", "testcase": false, "constructor": false}, {"identifier": "addLinkedHashMap", "parameters": "(String itemKey, LinkedHashMap map)", "modifiers": "public", "return": "void", "signature": "void addLinkedHashMap(String itemKey, LinkedHashMap map)", "full_signature": "public void addLinkedHashMap(String itemKey, LinkedHashMap map)", "class_method_signature": "ItemValuesMap.addLinkedHashMap(String itemKey, LinkedHashMap map)", "testcase": false, "constructor": false}, {"identifier": "getAsObject", "parameters": "(String key)", "modifiers": "public", "return": "Object", "signature": "Object getAsObject(String key)", "full_signature": "public Object getAsObject(String key)", "class_method_signature": "ItemValuesMap.getAsObject(String key)", "testcase": false, "constructor": false}, {"identifier": "getAsBoolean", "parameters": "(String key)", "modifiers": "public", "return": "Boolean", "signature": "Boolean getAsBoolean(String key)", "full_signature": "public Boolean getAsBoolean(String key)", "class_method_signature": "ItemValuesMap.getAsBoolean(String key)", "testcase": false, "constructor": false}, {"identifier": "getAsString", "parameters": "(String key)", "modifiers": "public", "return": "String", "signature": "String getAsString(String key)", "full_signature": "public String getAsString(String key)", "class_method_signature": "ItemValuesMap.getAsString(String key)", "testcase": false, "constructor": false}, {"identifier": "getAsLong", "parameters": "(String key)", "modifiers": "public", "return": "Long", "signature": "Long getAsLong(String key)", "full_signature": "public Long getAsLong(String key)", "class_method_signature": "ItemValuesMap.getAsLong(String key)", "testcase": false, "constructor": false}, {"identifier": "getAsInt", "parameters": "(String key)", "modifiers": "public", "return": "Integer", "signature": "Integer getAsInt(String key)", "full_signature": "public Integer getAsInt(String key)", "class_method_signature": "ItemValuesMap.getAsInt(String key)", "testcase": false, "constructor": false}, {"identifier": "getAsList", "parameters": "(String key)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getAsList(String key)", "full_signature": "public List<String> getAsList(String key)", "class_method_signature": "ItemValuesMap.getAsList(String key)", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> getValues()", "full_signature": "public Map<String, Object> getValues()", "class_method_signature": "ItemValuesMap.getValues()", "testcase": false, "constructor": false}, {"identifier": "getChildrenAsJsonArray", "parameters": "(String childName)", "modifiers": "public", "return": "List<Map<String, Object>>", "signature": "List<Map<String, Object>> getChildrenAsJsonArray(String childName)", "full_signature": "public List<Map<String, Object>> getChildrenAsJsonArray(String childName)", "class_method_signature": "ItemValuesMap.getChildrenAsJsonArray(String childName)", "testcase": false, "constructor": false}, {"identifier": "getChildrenAsLinkedHashMap", "parameters": "(String childName)", "modifiers": "public", "return": "LinkedHashMap<String, T>", "signature": "LinkedHashMap<String, T> getChildrenAsLinkedHashMap(String childName)", "full_signature": "public LinkedHashMap<String, T> getChildrenAsLinkedHashMap(String childName)", "class_method_signature": "ItemValuesMap.getChildrenAsLinkedHashMap(String childName)", "testcase": false, "constructor": false}, {"identifier": "addChild", "parameters": "(String childName, Map<String, Object> child)", "modifiers": "public", "return": "void", "signature": "void addChild(String childName, Map<String, Object> child)", "full_signature": "public void addChild(String childName, Map<String, Object> child)", "class_method_signature": "ItemValuesMap.addChild(String childName, Map<String, Object> child)", "testcase": false, "constructor": false}, {"identifier": "getChildrenSize", "parameters": "(String childName)", "modifiers": "public", "return": "int", "signature": "int getChildrenSize(String childName)", "full_signature": "public int getChildrenSize(String childName)", "class_method_signature": "ItemValuesMap.getChildrenSize(String childName)", "testcase": false, "constructor": false}, {"identifier": "getChildAsItemValues", "parameters": "(String childName, int index)", "modifiers": "public", "return": "ItemValuesMap", "signature": "ItemValuesMap getChildAsItemValues(String childName, int index)", "full_signature": "public ItemValuesMap getChildAsItemValues(String childName, int index)", "class_method_signature": "ItemValuesMap.getChildAsItemValues(String childName, int index)", "testcase": false, "constructor": false}, {"identifier": "addChildren", "parameters": "(String childName, List<Map<String, Object>> children)", "modifiers": "public", "return": "void", "signature": "void addChildren(String childName, List<Map<String, Object>> children)", "full_signature": "public void addChildren(String childName, List<Map<String, Object>> children)", "class_method_signature": "ItemValuesMap.addChildren(String childName, List<Map<String, Object>> children)", "testcase": false, "constructor": false}, {"identifier": "has", "parameters": "(String key)", "modifiers": "public", "return": "boolean", "signature": "boolean has(String key)", "full_signature": "public boolean has(String key)", "class_method_signature": "ItemValuesMap.has(String key)", "testcase": false, "constructor": false}, {"identifier": "concatMultiStringsWithBlank", "parameters": "(String... keys)", "modifiers": "public", "return": "String", "signature": "String concatMultiStringsWithBlank(String... keys)", "full_signature": "public String concatMultiStringsWithBlank(String... keys)", "class_method_signature": "ItemValuesMap.concatMultiStringsWithBlank(String... keys)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "public", "return": "ItemValuesMap", "signature": "ItemValuesMap copy()", "full_signature": "public ItemValuesMap copy()", "class_method_signature": "ItemValuesMap.copy()", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/unicef/rapidreg/service/cache/ItemValuesMap.java"}, "focal_method": {"identifier": "concatMultiStringsWithBlank", "parameters": "(String... keys)", "modifiers": "public", "return": "String", "body": "public String concatMultiStringsWithBlank(String... keys) {\n        StringBuilder result = new StringBuilder();\n        for (String key : keys) {\n            if (has(key)) {\n                result.append(getAsString(key)).append(\" \");\n            }\n        }\n        return result.toString().trim();\n    }", "signature": "String concatMultiStringsWithBlank(String... keys)", "full_signature": "public String concatMultiStringsWithBlank(String... keys)", "class_method_signature": "ItemValuesMap.concatMultiStringsWithBlank(String... keys)", "testcase": false, "constructor": false, "invocations": ["has", "append", "append", "getAsString", "trim", "toString"]}, "repository": {"repo_id": 59507570, "url": "https://github.com/UnicefNY/RapidReg", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 10753, "license": "Other"}}