{"test_class": {"identifier": "InstallSnapshotTest", "superclass": "", "interfaces": "", "fields": [], "file": "opendaylight/md-sal/sal-akka-raft/src/test/java/org/opendaylight/controller/cluster/raft/messages/InstallSnapshotTest.java"}, "test_case": {"identifier": "testSerialization", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSerialization() {\n        byte[] data = new byte[1000];\n        for (int i = 0, j = 0; i < data.length; i++) {\n            data[i] = (byte)j;\n            if (++j >= 255) {\n                j = 0;\n            }\n        }\n\n        ServerConfigurationPayload serverConfig = new ServerConfigurationPayload(Arrays.asList(\n                new ServerInfo(\"leader\", true), new ServerInfo(\"follower\", false)));\n        InstallSnapshot expected = new InstallSnapshot(3L, \"leaderId\", 11L, 2L, data, 5, 6, OptionalInt.of(54321),\n            Optional.of(serverConfig));\n\n        Object serialized = expected.toSerializable(RaftVersions.CURRENT_VERSION);\n        assertEquals(\"Serialized type\", InstallSnapshot.class, serialized.getClass());\n\n        InstallSnapshot actual = (InstallSnapshot) SerializationUtils.clone((Serializable) serialized);\n        verifyInstallSnapshot(expected, actual);\n\n        expected = new InstallSnapshot(3L, \"leaderId\", 11L, 2L, data, 5, 6);\n        actual = (InstallSnapshot) SerializationUtils.clone((Serializable) expected.toSerializable(\n                RaftVersions.CURRENT_VERSION));\n        verifyInstallSnapshot(expected, actual);\n    }", "signature": "void testSerialization()", "full_signature": "@Test public void testSerialization()", "class_method_signature": "InstallSnapshotTest.testSerialization()", "testcase": true, "constructor": false, "invocations": ["asList", "of", "of", "toSerializable", "assertEquals", "getClass", "clone", "verifyInstallSnapshot", "clone", "toSerializable", "verifyInstallSnapshot"]}, "focal_class": {"identifier": "InstallSnapshot", "superclass": "extends AbstractRaftRPC", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private final String leaderId;", "modifier": "private final", "type": "String", "declarator": "leaderId", "var_name": "leaderId"}, {"original_string": "private final long lastIncludedIndex;", "modifier": "private final", "type": "long", "declarator": "lastIncludedIndex", "var_name": "lastIncludedIndex"}, {"original_string": "private final long lastIncludedTerm;", "modifier": "private final", "type": "long", "declarator": "lastIncludedTerm", "var_name": "lastIncludedTerm"}, {"original_string": "private final byte[] data;", "modifier": "private final", "type": "byte[]", "declarator": "data", "var_name": "data"}, {"original_string": "private final int chunkIndex;", "modifier": "private final", "type": "int", "declarator": "chunkIndex", "var_name": "chunkIndex"}, {"original_string": "private final int totalChunks;", "modifier": "private final", "type": "int", "declarator": "totalChunks", "var_name": "totalChunks"}, {"original_string": "@SuppressFBWarnings(value = \"SE_BAD_FIELD\", justification = \"Handled via writeReplace()\")\n    private final OptionalInt lastChunkHashCode;", "modifier": "@SuppressFBWarnings(value = \"SE_BAD_FIELD\", justification = \"Handled via writeReplace()\")\n    private final", "type": "OptionalInt", "declarator": "lastChunkHashCode", "var_name": "lastChunkHashCode"}, {"original_string": "@SuppressFBWarnings(value = \"SE_BAD_FIELD\", justification = \"Handled via writeReplace()\")\n    private final Optional<ServerConfigurationPayload> serverConfig;", "modifier": "@SuppressFBWarnings(value = \"SE_BAD_FIELD\", justification = \"Handled via writeReplace()\")\n    private final", "type": "Optional<ServerConfigurationPayload>", "declarator": "serverConfig", "var_name": "serverConfig"}], "methods": [{"identifier": "InstallSnapshot", "parameters": "(final long term, final String leaderId, final long lastIncludedIndex,\n            final long lastIncludedTerm, final byte[] data, final int chunkIndex, final int totalChunks,\n            final OptionalInt lastChunkHashCode, final Optional<ServerConfigurationPayload> serverConfig)", "modifiers": "@SuppressFBWarnings(value = \"EI_EXPOSE_REP2\", justification = \"Stores a reference to an externally mutable byte[] \" + \"object but this is OK since this class is merely a DTO and does not process byte[] internally. \" + \"Also it would be inefficient to create a copy as the byte[] could be large.\") public", "return": "", "signature": " InstallSnapshot(final long term, final String leaderId, final long lastIncludedIndex,\n            final long lastIncludedTerm, final byte[] data, final int chunkIndex, final int totalChunks,\n            final OptionalInt lastChunkHashCode, final Optional<ServerConfigurationPayload> serverConfig)", "full_signature": "@SuppressFBWarnings(value = \"EI_EXPOSE_REP2\", justification = \"Stores a reference to an externally mutable byte[] \" + \"object but this is OK since this class is merely a DTO and does not process byte[] internally. \" + \"Also it would be inefficient to create a copy as the byte[] could be large.\") public  InstallSnapshot(final long term, final String leaderId, final long lastIncludedIndex,\n            final long lastIncludedTerm, final byte[] data, final int chunkIndex, final int totalChunks,\n            final OptionalInt lastChunkHashCode, final Optional<ServerConfigurationPayload> serverConfig)", "class_method_signature": "InstallSnapshot.InstallSnapshot(final long term, final String leaderId, final long lastIncludedIndex,\n            final long lastIncludedTerm, final byte[] data, final int chunkIndex, final int totalChunks,\n            final OptionalInt lastChunkHashCode, final Optional<ServerConfigurationPayload> serverConfig)", "testcase": false, "constructor": true}, {"identifier": "InstallSnapshot", "parameters": "(final long term, final String leaderId, final long lastIncludedIndex,\n                           final long lastIncludedTerm, final byte[] data, final int chunkIndex,\n                           final int totalChunks)", "modifiers": "public", "return": "", "signature": " InstallSnapshot(final long term, final String leaderId, final long lastIncludedIndex,\n                           final long lastIncludedTerm, final byte[] data, final int chunkIndex,\n                           final int totalChunks)", "full_signature": "public  InstallSnapshot(final long term, final String leaderId, final long lastIncludedIndex,\n                           final long lastIncludedTerm, final byte[] data, final int chunkIndex,\n                           final int totalChunks)", "class_method_signature": "InstallSnapshot.InstallSnapshot(final long term, final String leaderId, final long lastIncludedIndex,\n                           final long lastIncludedTerm, final byte[] data, final int chunkIndex,\n                           final int totalChunks)", "testcase": false, "constructor": true}, {"identifier": "getLeaderId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLeaderId()", "full_signature": "public String getLeaderId()", "class_method_signature": "InstallSnapshot.getLeaderId()", "testcase": false, "constructor": false}, {"identifier": "getLastIncludedIndex", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLastIncludedIndex()", "full_signature": "public long getLastIncludedIndex()", "class_method_signature": "InstallSnapshot.getLastIncludedIndex()", "testcase": false, "constructor": false}, {"identifier": "getLastIncludedTerm", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLastIncludedTerm()", "full_signature": "public long getLastIncludedTerm()", "class_method_signature": "InstallSnapshot.getLastIncludedTerm()", "testcase": false, "constructor": false}, {"identifier": "getData", "parameters": "()", "modifiers": "@SuppressFBWarnings(value = \"EI_EXPOSE_REP\", justification = \"Exposes a mutable object stored in a field but \" + \"this is OK since this class is merely a DTO and does not process the byte[] internally. \" + \"Also it would be inefficient to create a return copy as the byte[] could be large.\") public", "return": "byte[]", "signature": "byte[] getData()", "full_signature": "@SuppressFBWarnings(value = \"EI_EXPOSE_REP\", justification = \"Exposes a mutable object stored in a field but \" + \"this is OK since this class is merely a DTO and does not process the byte[] internally. \" + \"Also it would be inefficient to create a return copy as the byte[] could be large.\") public byte[] getData()", "class_method_signature": "InstallSnapshot.getData()", "testcase": false, "constructor": false}, {"identifier": "getChunkIndex", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getChunkIndex()", "full_signature": "public int getChunkIndex()", "class_method_signature": "InstallSnapshot.getChunkIndex()", "testcase": false, "constructor": false}, {"identifier": "getTotalChunks", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTotalChunks()", "full_signature": "public int getTotalChunks()", "class_method_signature": "InstallSnapshot.getTotalChunks()", "testcase": false, "constructor": false}, {"identifier": "getLastChunkHashCode", "parameters": "()", "modifiers": "public", "return": "OptionalInt", "signature": "OptionalInt getLastChunkHashCode()", "full_signature": "public OptionalInt getLastChunkHashCode()", "class_method_signature": "InstallSnapshot.getLastChunkHashCode()", "testcase": false, "constructor": false}, {"identifier": "getServerConfig", "parameters": "()", "modifiers": "public", "return": "Optional<ServerConfigurationPayload>", "signature": "Optional<ServerConfigurationPayload> getServerConfig()", "full_signature": "public Optional<ServerConfigurationPayload> getServerConfig()", "class_method_signature": "InstallSnapshot.getServerConfig()", "testcase": false, "constructor": false}, {"identifier": "toSerializable", "parameters": "(final short version)", "modifiers": "public", "return": "Object", "signature": "Object toSerializable(final short version)", "full_signature": "public Object toSerializable(final short version)", "class_method_signature": "InstallSnapshot.toSerializable(final short version)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "InstallSnapshot.toString()", "testcase": false, "constructor": false}, {"identifier": "writeReplace", "parameters": "()", "modifiers": "@Override", "return": "Object", "signature": "Object writeReplace()", "full_signature": "@Override Object writeReplace()", "class_method_signature": "InstallSnapshot.writeReplace()", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/messages/InstallSnapshot.java"}, "focal_method": {"identifier": "toSerializable", "parameters": "(final short version)", "modifiers": "public", "return": "Object", "body": "public <T> Object toSerializable(final short version) {\n        return this;\n    }", "signature": "Object toSerializable(final short version)", "full_signature": "public Object toSerializable(final short version)", "class_method_signature": "InstallSnapshot.toSerializable(final short version)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}