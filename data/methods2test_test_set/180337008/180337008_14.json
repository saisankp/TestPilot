{"test_class": {"identifier": "MetricControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private MockMvc mockMvc;", "modifier": "@Autowired\n    private", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}, {"original_string": "@MockBean\n    private MetricService metricService;", "modifier": "@MockBean\n    private", "type": "MetricService", "declarator": "metricService", "var_name": "metricService"}, {"original_string": "@MockBean\n    private PesHistoryRepository pesHistoryRepository;", "modifier": "@MockBean\n    private", "type": "PesHistoryRepository", "declarator": "pesHistoryRepository", "var_name": "pesHistoryRepository"}, {"original_string": "@MockBean\n    EntityManagerFactory entityManagerFactory;", "modifier": "@MockBean", "type": "EntityManagerFactory", "declarator": "entityManagerFactory", "var_name": "entityManagerFactory"}, {"original_string": "@MockBean\n    CertUtilService certUtilService;", "modifier": "@MockBean", "type": "CertUtilService", "declarator": "certUtilService", "var_name": "certUtilService"}], "file": "pes-service/src/test/java/fr/sictiam/stela/pesservice/controller/MetricControllerTest.java"}, "test_case": {"identifier": "getNumberOfPesWithType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getNumberOfPesWithType() throws Exception {\n        LocalDateTime localDateTimeNow = LocalDateTime.now();\n        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");\n\n        String formatedDateTime = localDateTimeNow.format(formatter);\n\n        Map<String, Long> listPesNumberByType = new HashMap<>();\n        listPesNumberByType.put(StatusType.CLASSEUR_SIGNED.name(), (long) 0);\n\n        given(metricService.getNumberOfPes(any(), any(), eq(StatusType.CLASSEUR_SIGNED))).willReturn(listPesNumberByType);\n\n        this.mockMvc.perform(get(\"/api/pes/metric\")\n                .param(\"fromDate\", formatedDateTime)\n                .param(\"toDate\", formatedDateTime)\n                .param(\"statusType\", StatusType.CLASSEUR_SIGNED.name()))\n                .andExpect(status().isOk());\n\n        verify(metricService, times(1)).getNumberOfPes(any(), any(),eq(StatusType.CLASSEUR_SIGNED));\n        verifyNoMoreInteractions(metricService);\n    }", "signature": "void getNumberOfPesWithType()", "full_signature": "@Test public void getNumberOfPesWithType()", "class_method_signature": "MetricControllerTest.getNumberOfPesWithType()", "testcase": true, "constructor": false, "invocations": ["now", "ofPattern", "format", "put", "name", "willReturn", "given", "getNumberOfPes", "any", "any", "eq", "andExpect", "perform", "param", "param", "param", "get", "name", "isOk", "status", "getNumberOfPes", "verify", "times", "any", "any", "eq", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "MetricController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final MetricService metricService;", "modifier": "private final", "type": "MetricService", "declarator": "metricService", "var_name": "metricService"}], "methods": [{"identifier": "MetricController", "parameters": "(MetricService metricService)", "modifiers": "public", "return": "", "signature": " MetricController(MetricService metricService)", "full_signature": "public  MetricController(MetricService metricService)", "class_method_signature": "MetricController.MetricController(MetricService metricService)", "testcase": false, "constructor": true}, {"identifier": "getNumberOfPes", "parameters": "(\n            @RequestParam(value = \"fromDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime fromDate,\n            @RequestParam(value = \"toDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime toDate,\n            @RequestParam(value = \"statusType\", required = false) StatusType statusType)", "modifiers": "@GetMapping public", "return": "Map<String, Long>", "signature": "Map<String, Long> getNumberOfPes(\n            @RequestParam(value = \"fromDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime fromDate,\n            @RequestParam(value = \"toDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime toDate,\n            @RequestParam(value = \"statusType\", required = false) StatusType statusType)", "full_signature": "@GetMapping public Map<String, Long> getNumberOfPes(\n            @RequestParam(value = \"fromDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime fromDate,\n            @RequestParam(value = \"toDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime toDate,\n            @RequestParam(value = \"statusType\", required = false) StatusType statusType)", "class_method_signature": "MetricController.getNumberOfPes(\n            @RequestParam(value = \"fromDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime fromDate,\n            @RequestParam(value = \"toDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime toDate,\n            @RequestParam(value = \"statusType\", required = false) StatusType statusType)", "testcase": false, "constructor": false}, {"identifier": "getNumberOfPesWithSample", "parameters": "(\n            @RequestParam(value = \"fromDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime fromDate,\n            @RequestParam(value = \"toDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime toDate,\n            @RequestParam(value = \"statusType\", required = false) StatusType statusType,\n            @RequestParam(value = \"sample\", required = false) String sample)", "modifiers": "@GetMapping(\"/sample\") public", "return": "Map<String, List<Map<LocalDateTime, Long>>>", "signature": "Map<String, List<Map<LocalDateTime, Long>>> getNumberOfPesWithSample(\n            @RequestParam(value = \"fromDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime fromDate,\n            @RequestParam(value = \"toDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime toDate,\n            @RequestParam(value = \"statusType\", required = false) StatusType statusType,\n            @RequestParam(value = \"sample\", required = false) String sample)", "full_signature": "@GetMapping(\"/sample\") public Map<String, List<Map<LocalDateTime, Long>>> getNumberOfPesWithSample(\n            @RequestParam(value = \"fromDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime fromDate,\n            @RequestParam(value = \"toDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime toDate,\n            @RequestParam(value = \"statusType\", required = false) StatusType statusType,\n            @RequestParam(value = \"sample\", required = false) String sample)", "class_method_signature": "MetricController.getNumberOfPesWithSample(\n            @RequestParam(value = \"fromDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime fromDate,\n            @RequestParam(value = \"toDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime toDate,\n            @RequestParam(value = \"statusType\", required = false) StatusType statusType,\n            @RequestParam(value = \"sample\", required = false) String sample)", "testcase": false, "constructor": false}], "file": "pes-service/src/main/java/fr/sictiam/stela/pesservice/controller/MetricController.java"}, "focal_method": {"identifier": "getNumberOfPes", "parameters": "(\n            @RequestParam(value = \"fromDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime fromDate,\n            @RequestParam(value = \"toDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime toDate,\n            @RequestParam(value = \"statusType\", required = false) StatusType statusType)", "modifiers": "@GetMapping public", "return": "Map<String, Long>", "body": "@GetMapping\n    public Map<String, Long> getNumberOfPes(\n            @RequestParam(value = \"fromDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime fromDate,\n            @RequestParam(value = \"toDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime toDate,\n            @RequestParam(value = \"statusType\", required = false) StatusType statusType) {\n        return metricService.getNumberOfPes(fromDate, toDate, statusType);\n    }", "signature": "Map<String, Long> getNumberOfPes(\n            @RequestParam(value = \"fromDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime fromDate,\n            @RequestParam(value = \"toDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime toDate,\n            @RequestParam(value = \"statusType\", required = false) StatusType statusType)", "full_signature": "@GetMapping public Map<String, Long> getNumberOfPes(\n            @RequestParam(value = \"fromDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime fromDate,\n            @RequestParam(value = \"toDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime toDate,\n            @RequestParam(value = \"statusType\", required = false) StatusType statusType)", "class_method_signature": "MetricController.getNumberOfPes(\n            @RequestParam(value = \"fromDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime fromDate,\n            @RequestParam(value = \"toDate\") @DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\") LocalDateTime toDate,\n            @RequestParam(value = \"statusType\", required = false) StatusType statusType)", "testcase": false, "constructor": false, "invocations": ["getNumberOfPes"]}, "repository": {"repo_id": 180337008, "url": "https://github.com/SICTIAM/stela", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 7714, "license": "licensed"}}