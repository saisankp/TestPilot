{"test_class": {"identifier": "UserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ProjectApplication applicationMock;", "modifier": "@Mock\n    private", "type": "ProjectApplication", "declarator": "applicationMock", "var_name": "applicationMock"}, {"original_string": "@Mock\n    private AccessInterval accessIntervalMock;", "modifier": "@Mock\n    private", "type": "AccessInterval", "declarator": "accessIntervalMock", "var_name": "accessIntervalMock"}], "file": "backend/project-board/src/test/java/de/adesso/projectboard/base/user/persistence/UserTest.java"}, "test_case": {"identifier": "addBookmark", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void addBookmark() {\n        // given\n        Project project = mock(Project.class);\n        User user = new User(\"user\");\n\n        // when\n        user.addBookmark(project);\n\n        // then\n        assertThat(user.bookmarks).containsExactly(project);\n    }", "signature": "void addBookmark()", "full_signature": "@Test public void addBookmark()", "class_method_signature": "UserTest.addBookmark()", "testcase": true, "constructor": false, "invocations": ["mock", "addBookmark", "containsExactly", "assertThat"]}, "focal_class": {"identifier": "User", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Id\n    String id;", "modifier": "@Id", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "@ManyToMany\n    @JoinTable(\n            name = \"PB_USER_BOOKMARKS\",\n            joinColumns = @JoinColumn(name = \"USER_ID\"),\n            inverseJoinColumns = @JoinColumn(name = \"PROJECT_ID\")\n    )\n    Set<Project> bookmarks;", "modifier": "@ManyToMany\n    @JoinTable(\n            name = \"PB_USER_BOOKMARKS\",\n            joinColumns = @JoinColumn(name = \"USER_ID\"),\n            inverseJoinColumns = @JoinColumn(name = \"PROJECT_ID\")\n    )", "type": "Set<Project>", "declarator": "bookmarks", "var_name": "bookmarks"}, {"original_string": "@OneToMany(\n            cascade = CascadeType.ALL,\n            orphanRemoval = true,\n            mappedBy = \"user\"\n    )\n    Set<ProjectApplication> applications;", "modifier": "@OneToMany(\n            cascade = CascadeType.ALL,\n            orphanRemoval = true,\n            mappedBy = \"user\"\n    )", "type": "Set<ProjectApplication>", "declarator": "applications", "var_name": "applications"}, {"original_string": "@OneToMany(\n            cascade = CascadeType.ALL,\n            orphanRemoval = true,\n            mappedBy = \"user\"\n    )\n    List<AccessInterval> accessIntervals;", "modifier": "@OneToMany(\n            cascade = CascadeType.ALL,\n            orphanRemoval = true,\n            mappedBy = \"user\"\n    )", "type": "List<AccessInterval>", "declarator": "accessIntervals", "var_name": "accessIntervals"}], "methods": [{"identifier": "User", "parameters": "(String userId)", "modifiers": "public", "return": "", "signature": " User(String userId)", "full_signature": "public  User(String userId)", "class_method_signature": "User.User(String userId)", "testcase": false, "constructor": true}, {"identifier": "User", "parameters": "()", "modifiers": "protected", "return": "", "signature": " User()", "full_signature": "protected  User()", "class_method_signature": "User.User()", "testcase": false, "constructor": true}, {"identifier": "addBookmark", "parameters": "(Project project)", "modifiers": "public", "return": "void", "signature": "void addBookmark(Project project)", "full_signature": "public void addBookmark(Project project)", "class_method_signature": "User.addBookmark(Project project)", "testcase": false, "constructor": false}, {"identifier": "removeBookmark", "parameters": "(Project project)", "modifiers": "public", "return": "void", "signature": "void removeBookmark(Project project)", "full_signature": "public void removeBookmark(Project project)", "class_method_signature": "User.removeBookmark(Project project)", "testcase": false, "constructor": false}, {"identifier": "addApplication", "parameters": "(ProjectApplication application)", "modifiers": "public", "return": "void", "signature": "void addApplication(ProjectApplication application)", "full_signature": "public void addApplication(ProjectApplication application)", "class_method_signature": "User.addApplication(ProjectApplication application)", "testcase": false, "constructor": false}, {"identifier": "removeApplication", "parameters": "(ProjectApplication application)", "modifiers": "public", "return": "void", "signature": "void removeApplication(ProjectApplication application)", "full_signature": "public void removeApplication(ProjectApplication application)", "class_method_signature": "User.removeApplication(ProjectApplication application)", "testcase": false, "constructor": false}, {"identifier": "getLatestAccessInterval", "parameters": "()", "modifiers": "public", "return": "Optional<AccessInterval>", "signature": "Optional<AccessInterval> getLatestAccessInterval()", "full_signature": "public Optional<AccessInterval> getLatestAccessInterval()", "class_method_signature": "User.getLatestAccessInterval()", "testcase": false, "constructor": false}, {"identifier": "addAccessInterval", "parameters": "(AccessInterval interval)", "modifiers": "public", "return": "void", "signature": "void addAccessInterval(AccessInterval interval)", "full_signature": "public void addAccessInterval(AccessInterval interval)", "class_method_signature": "User.addAccessInterval(AccessInterval interval)", "testcase": false, "constructor": false}, {"identifier": "removeAccessInterval", "parameters": "(AccessInterval interval)", "modifiers": "public", "return": "void", "signature": "void removeAccessInterval(AccessInterval interval)", "full_signature": "public void removeAccessInterval(AccessInterval interval)", "class_method_signature": "User.removeAccessInterval(AccessInterval interval)", "testcase": false, "constructor": false}], "file": "backend/project-board/src/main/java/de/adesso/projectboard/base/user/persistence/User.java"}, "focal_method": {"identifier": "addBookmark", "parameters": "(Project project)", "modifiers": "public", "return": "void", "body": "public void addBookmark(Project project) {\n        this.bookmarks.add(project);\n    }", "signature": "void addBookmark(Project project)", "full_signature": "public void addBookmark(Project project)", "class_method_signature": "User.addBookmark(Project project)", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": 144251992, "url": "https://github.com/adessoAG/project-board", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 2608, "license": "licensed"}}