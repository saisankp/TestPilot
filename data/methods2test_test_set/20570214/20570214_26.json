{"test_class": {"identifier": "AesGcmKeyManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final AesGcmKeyManager manager = new AesGcmKeyManager();", "modifier": "private final", "type": "AesGcmKeyManager", "declarator": "manager = new AesGcmKeyManager()", "var_name": "manager"}, {"original_string": "private final KeyTypeManager.KeyFactory<AesGcmKeyFormat, AesGcmKey> factory =\n      manager.keyFactory();", "modifier": "private final", "type": "KeyTypeManager.KeyFactory<AesGcmKeyFormat, AesGcmKey>", "declarator": "factory =\n      manager.keyFactory()", "var_name": "factory"}, {"original_string": "NistTestVector[] nistTestVectors = {\n    new NistTestVector(\n        \"Test Case 1\",\n        \"00000000000000000000000000000000\",\n        \"\",\n        \"\",\n        \"000000000000000000000000\",\n        \"\",\n        \"58e2fccefa7e3061367f1d57a4e7455a\"),\n    new NistTestVector(\n        \"Test Case 2\",\n        \"00000000000000000000000000000000\",\n        \"00000000000000000000000000000000\",\n        \"\",\n        \"000000000000000000000000\",\n        \"0388dace60b6a392f328c2b971b2fe78\",\n        \"ab6e47d42cec13bdf53a67b21257bddf\"),\n    new NistTestVector(\n        \"Test Case 3\",\n        \"feffe9928665731c6d6a8f9467308308\",\n        \"d9313225f88406e5a55909c5aff5269a\"\n            + \"86a7a9531534f7da2e4c303d8a318a72\"\n            + \"1c3c0c95956809532fcf0e2449a6b525\"\n            + \"b16aedf5aa0de657ba637b391aafd255\",\n        \"\",\n        \"cafebabefacedbaddecaf888\",\n        \"42831ec2217774244b7221b784d0d49c\"\n            + \"e3aa212f2c02a4e035c17e2329aca12e\"\n            + \"21d514b25466931c7d8f6a5aac84aa05\"\n            + \"1ba30b396a0aac973d58e091473f5985\",\n        \"4d5c2af327cd64a62cf35abd2ba6fab4\"),\n    new NistTestVector(\n        \"Test Case 4\",\n        \"feffe9928665731c6d6a8f9467308308\",\n        \"d9313225f88406e5a55909c5aff5269a\"\n            + \"86a7a9531534f7da2e4c303d8a318a72\"\n            + \"1c3c0c95956809532fcf0e2449a6b525\"\n            + \"b16aedf5aa0de657ba637b39\",\n        \"feedfacedeadbeeffeedfacedeadbeef\" + \"abaddad2\",\n        \"cafebabefacedbaddecaf888\",\n        \"42831ec2217774244b7221b784d0d49c\"\n            + \"e3aa212f2c02a4e035c17e2329aca12e\"\n            + \"21d514b25466931c7d8f6a5aac84aa05\"\n            + \"1ba30b396a0aac973d58e091\",\n        \"5bc94fbc3221a5db94fae95ae7121a47\"),\n    new NistTestVector(\n        \"Test Case 5\",\n        \"feffe9928665731c6d6a8f9467308308\",\n        \"d9313225f88406e5a55909c5aff5269a\"\n            + \"86a7a9531534f7da2e4c303d8a318a72\"\n            + \"1c3c0c95956809532fcf0e2449a6b525\"\n            + \"b16aedf5aa0de657ba637b39\",\n        \"feedfacedeadbeeffeedfacedeadbeef\" + \"abaddad2\",\n        \"cafebabefacedbad\",\n        \"61353b4c2806934a777ff51fa22a4755\"\n            + \"699b2a714fcdc6f83766e5f97b6c7423\"\n            + \"73806900e49f24b22b097544d4896b42\"\n            + \"4989b5e1ebac0f07c23f4598\",\n        \"3612d2e79e3b0785561be14aaca2fccb\"),\n    new NistTestVector(\n        \"Test Case 6\",\n        \"feffe9928665731c6d6a8f9467308308\",\n        \"d9313225f88406e5a55909c5aff5269a\"\n            + \"86a7a9531534f7da2e4c303d8a318a72\"\n            + \"1c3c0c95956809532fcf0e2449a6b525\"\n            + \"b16aedf5aa0de657ba637b39\",\n        \"feedfacedeadbeeffeedfacedeadbeef\" + \"abaddad2\",\n        \"9313225df88406e555909c5aff5269aa\"\n            + \"6a7a9538534f7da1e4c303d2a318a728\"\n            + \"c3c0c95156809539fcf0e2429a6b5254\"\n            + \"16aedbf5a0de6a57a637b39b\",\n        \"8ce24998625615b603a033aca13fb894\"\n            + \"be9112a5c3a211a8ba262a3cca7e2ca7\"\n            + \"01e4a9a4fba43c90ccdcb281d48c7c6f\"\n            + \"d62875d2aca417034c34aee5\",\n        \"619cc5aefffe0bfa462af43c1699d050\"),\n    new NistTestVector(\n        \"Test Case 13\",\n        \"00000000000000000000000000000000\" + \"00000000000000000000000000000000\",\n        \"\",\n        \"\",\n        \"000000000000000000000000\",\n        \"\",\n        \"530f8afbc74536b9a963b4f1c4cb738b\"),\n    new NistTestVector(\n        \"Test Case 14\",\n        \"00000000000000000000000000000000\" + \"00000000000000000000000000000000\",\n        \"00000000000000000000000000000000\",\n        \"\",\n        \"000000000000000000000000\",\n        \"cea7403d4d606b6e074ec5d3baf39d18\",\n        \"d0d1c8a799996bf0265b98b5d48ab919\"),\n    new NistTestVector(\n        \"Test Case 15\",\n        \"feffe9928665731c6d6a8f9467308308\" + \"feffe9928665731c6d6a8f9467308308\",\n        \"d9313225f88406e5a55909c5aff5269a\"\n            + \"86a7a9531534f7da2e4c303d8a318a72\"\n            + \"1c3c0c95956809532fcf0e2449a6b525\"\n            + \"b16aedf5aa0de657ba637b391aafd255\",\n        \"\",\n        \"cafebabefacedbaddecaf888\",\n        \"522dc1f099567d07f47f37a32a84427d\"\n            + \"643a8cdcbfe5c0c97598a2bd2555d1aa\"\n            + \"8cb08e48590dbb3da7b08b1056828838\"\n            + \"c5f61e6393ba7a0abcc9f662898015ad\",\n        \"b094dac5d93471bdec1a502270e3cc6c\"),\n    new NistTestVector(\n        \"Test Case 16\",\n        \"feffe9928665731c6d6a8f9467308308\" + \"feffe9928665731c6d6a8f9467308308\",\n        \"d9313225f88406e5a55909c5aff5269a\"\n            + \"86a7a9531534f7da2e4c303d8a318a72\"\n            + \"1c3c0c95956809532fcf0e2449a6b525\"\n            + \"b16aedf5aa0de657ba637b39\",\n        \"feedfacedeadbeeffeedfacedeadbeef\" + \"abaddad2\",\n        \"cafebabefacedbaddecaf888\",\n        \"522dc1f099567d07f47f37a32a84427d\"\n            + \"643a8cdcbfe5c0c97598a2bd2555d1aa\"\n            + \"8cb08e48590dbb3da7b08b1056828838\"\n            + \"c5f61e6393ba7a0abcc9f662\",\n        \"76fc6ece0f4e1768cddf8853bb2d551b\"),\n    new NistTestVector(\n        \"Test Case 17\",\n        \"feffe9928665731c6d6a8f9467308308\" + \"feffe9928665731c6d6a8f9467308308\",\n        \"d9313225f88406e5a55909c5aff5269a\"\n            + \"86a7a9531534f7da2e4c303d8a318a72\"\n            + \"1c3c0c95956809532fcf0e2449a6b525\"\n            + \"b16aedf5aa0de657ba637b39\",\n        \"feedfacedeadbeeffeedfacedeadbeef\" + \"abaddad2\",\n        \"cafebabefacedbad\",\n        \"c3762df1ca787d32ae47c13bf19844cb\"\n            + \"af1ae14d0b976afac52ff7d79bba9de0\"\n            + \"feb582d33934a4f0954cc2363bc73f78\"\n            + \"62ac430e64abe499f47c9b1f\",\n        \"3a337dbf46a792c45e454913fe2ea8f2\"),\n    new NistTestVector(\n        \"Test Case 18\",\n        \"feffe9928665731c6d6a8f9467308308\" + \"feffe9928665731c6d6a8f9467308308\",\n        \"d9313225f88406e5a55909c5aff5269a\"\n            + \"86a7a9531534f7da2e4c303d8a318a72\"\n            + \"1c3c0c95956809532fcf0e2449a6b525\"\n            + \"b16aedf5aa0de657ba637b39\",\n        \"feedfacedeadbeeffeedfacedeadbeef\" + \"abaddad2\",\n        \"9313225df88406e555909c5aff5269aa\"\n            + \"6a7a9538534f7da1e4c303d2a318a728\"\n            + \"c3c0c95156809539fcf0e2429a6b5254\"\n            + \"16aedbf5a0de6a57a637b39b\",\n        \"5a8def2f0c9e53f1f75d7853659e2a20\"\n            + \"eeb2b22aafde6419a058ab4f6f746bf4\"\n            + \"0fc0c3b780f244452da3ebf1c5d82cde\"\n            + \"a2418997200ef82e44ae7e3f\",\n        \"a44a8266ee1c8eb0c8b5d4cf5ae9f19a\"),\n  };", "modifier": "", "type": "NistTestVector[]", "declarator": "nistTestVectors = {\n    new NistTestVector(\n        \"Test Case 1\",\n        \"00000000000000000000000000000000\",\n        \"\",\n        \"\",\n        \"000000000000000000000000\",\n        \"\",\n        \"58e2fccefa7e3061367f1d57a4e7455a\"),\n    new NistTestVector(\n        \"Test Case 2\",\n        \"00000000000000000000000000000000\",\n        \"00000000000000000000000000000000\",\n        \"\",\n        \"000000000000000000000000\",\n        \"0388dace60b6a392f328c2b971b2fe78\",\n        \"ab6e47d42cec13bdf53a67b21257bddf\"),\n    new NistTestVector(\n        \"Test Case 3\",\n        \"feffe9928665731c6d6a8f9467308308\",\n        \"d9313225f88406e5a55909c5aff5269a\"\n            + \"86a7a9531534f7da2e4c303d8a318a72\"\n            + \"1c3c0c95956809532fcf0e2449a6b525\"\n            + \"b16aedf5aa0de657ba637b391aafd255\",\n        \"\",\n        \"cafebabefacedbaddecaf888\",\n        \"42831ec2217774244b7221b784d0d49c\"\n            + \"e3aa212f2c02a4e035c17e2329aca12e\"\n            + \"21d514b25466931c7d8f6a5aac84aa05\"\n            + \"1ba30b396a0aac973d58e091473f5985\",\n        \"4d5c2af327cd64a62cf35abd2ba6fab4\"),\n    new NistTestVector(\n        \"Test Case 4\",\n        \"feffe9928665731c6d6a8f9467308308\",\n        \"d9313225f88406e5a55909c5aff5269a\"\n            + \"86a7a9531534f7da2e4c303d8a318a72\"\n            + \"1c3c0c95956809532fcf0e2449a6b525\"\n            + \"b16aedf5aa0de657ba637b39\",\n        \"feedfacedeadbeeffeedfacedeadbeef\" + \"abaddad2\",\n        \"cafebabefacedbaddecaf888\",\n        \"42831ec2217774244b7221b784d0d49c\"\n            + \"e3aa212f2c02a4e035c17e2329aca12e\"\n            + \"21d514b25466931c7d8f6a5aac84aa05\"\n            + \"1ba30b396a0aac973d58e091\",\n        \"5bc94fbc3221a5db94fae95ae7121a47\"),\n    new NistTestVector(\n        \"Test Case 5\",\n        \"feffe9928665731c6d6a8f9467308308\",\n        \"d9313225f88406e5a55909c5aff5269a\"\n            + \"86a7a9531534f7da2e4c303d8a318a72\"\n            + \"1c3c0c95956809532fcf0e2449a6b525\"\n            + \"b16aedf5aa0de657ba637b39\",\n        \"feedfacedeadbeeffeedfacedeadbeef\" + \"abaddad2\",\n        \"cafebabefacedbad\",\n        \"61353b4c2806934a777ff51fa22a4755\"\n            + \"699b2a714fcdc6f83766e5f97b6c7423\"\n            + \"73806900e49f24b22b097544d4896b42\"\n            + \"4989b5e1ebac0f07c23f4598\",\n        \"3612d2e79e3b0785561be14aaca2fccb\"),\n    new NistTestVector(\n        \"Test Case 6\",\n        \"feffe9928665731c6d6a8f9467308308\",\n        \"d9313225f88406e5a55909c5aff5269a\"\n            + \"86a7a9531534f7da2e4c303d8a318a72\"\n            + \"1c3c0c95956809532fcf0e2449a6b525\"\n            + \"b16aedf5aa0de657ba637b39\",\n        \"feedfacedeadbeeffeedfacedeadbeef\" + \"abaddad2\",\n        \"9313225df88406e555909c5aff5269aa\"\n            + \"6a7a9538534f7da1e4c303d2a318a728\"\n            + \"c3c0c95156809539fcf0e2429a6b5254\"\n            + \"16aedbf5a0de6a57a637b39b\",\n        \"8ce24998625615b603a033aca13fb894\"\n            + \"be9112a5c3a211a8ba262a3cca7e2ca7\"\n            + \"01e4a9a4fba43c90ccdcb281d48c7c6f\"\n            + \"d62875d2aca417034c34aee5\",\n        \"619cc5aefffe0bfa462af43c1699d050\"),\n    new NistTestVector(\n        \"Test Case 13\",\n        \"00000000000000000000000000000000\" + \"00000000000000000000000000000000\",\n        \"\",\n        \"\",\n        \"000000000000000000000000\",\n        \"\",\n        \"530f8afbc74536b9a963b4f1c4cb738b\"),\n    new NistTestVector(\n        \"Test Case 14\",\n        \"00000000000000000000000000000000\" + \"00000000000000000000000000000000\",\n        \"00000000000000000000000000000000\",\n        \"\",\n        \"000000000000000000000000\",\n        \"cea7403d4d606b6e074ec5d3baf39d18\",\n        \"d0d1c8a799996bf0265b98b5d48ab919\"),\n    new NistTestVector(\n        \"Test Case 15\",\n        \"feffe9928665731c6d6a8f9467308308\" + \"feffe9928665731c6d6a8f9467308308\",\n        \"d9313225f88406e5a55909c5aff5269a\"\n            + \"86a7a9531534f7da2e4c303d8a318a72\"\n            + \"1c3c0c95956809532fcf0e2449a6b525\"\n            + \"b16aedf5aa0de657ba637b391aafd255\",\n        \"\",\n        \"cafebabefacedbaddecaf888\",\n        \"522dc1f099567d07f47f37a32a84427d\"\n            + \"643a8cdcbfe5c0c97598a2bd2555d1aa\"\n            + \"8cb08e48590dbb3da7b08b1056828838\"\n            + \"c5f61e6393ba7a0abcc9f662898015ad\",\n        \"b094dac5d93471bdec1a502270e3cc6c\"),\n    new NistTestVector(\n        \"Test Case 16\",\n        \"feffe9928665731c6d6a8f9467308308\" + \"feffe9928665731c6d6a8f9467308308\",\n        \"d9313225f88406e5a55909c5aff5269a\"\n            + \"86a7a9531534f7da2e4c303d8a318a72\"\n            + \"1c3c0c95956809532fcf0e2449a6b525\"\n            + \"b16aedf5aa0de657ba637b39\",\n        \"feedfacedeadbeeffeedfacedeadbeef\" + \"abaddad2\",\n        \"cafebabefacedbaddecaf888\",\n        \"522dc1f099567d07f47f37a32a84427d\"\n            + \"643a8cdcbfe5c0c97598a2bd2555d1aa\"\n            + \"8cb08e48590dbb3da7b08b1056828838\"\n            + \"c5f61e6393ba7a0abcc9f662\",\n        \"76fc6ece0f4e1768cddf8853bb2d551b\"),\n    new NistTestVector(\n        \"Test Case 17\",\n        \"feffe9928665731c6d6a8f9467308308\" + \"feffe9928665731c6d6a8f9467308308\",\n        \"d9313225f88406e5a55909c5aff5269a\"\n            + \"86a7a9531534f7da2e4c303d8a318a72\"\n            + \"1c3c0c95956809532fcf0e2449a6b525\"\n            + \"b16aedf5aa0de657ba637b39\",\n        \"feedfacedeadbeeffeedfacedeadbeef\" + \"abaddad2\",\n        \"cafebabefacedbad\",\n        \"c3762df1ca787d32ae47c13bf19844cb\"\n            + \"af1ae14d0b976afac52ff7d79bba9de0\"\n            + \"feb582d33934a4f0954cc2363bc73f78\"\n            + \"62ac430e64abe499f47c9b1f\",\n        \"3a337dbf46a792c45e454913fe2ea8f2\"),\n    new NistTestVector(\n        \"Test Case 18\",\n        \"feffe9928665731c6d6a8f9467308308\" + \"feffe9928665731c6d6a8f9467308308\",\n        \"d9313225f88406e5a55909c5aff5269a\"\n            + \"86a7a9531534f7da2e4c303d8a318a72\"\n            + \"1c3c0c95956809532fcf0e2449a6b525\"\n            + \"b16aedf5aa0de657ba637b39\",\n        \"feedfacedeadbeeffeedfacedeadbeef\" + \"abaddad2\",\n        \"9313225df88406e555909c5aff5269aa\"\n            + \"6a7a9538534f7da1e4c303d2a318a728\"\n            + \"c3c0c95156809539fcf0e2429a6b5254\"\n            + \"16aedbf5a0de6a57a637b39b\",\n        \"5a8def2f0c9e53f1f75d7853659e2a20\"\n            + \"eeb2b22aafde6419a058ab4f6f746bf4\"\n            + \"0fc0c3b780f244452da3ebf1c5d82cde\"\n            + \"a2418997200ef82e44ae7e3f\",\n        \"a44a8266ee1c8eb0c8b5d4cf5ae9f19a\"),\n  }", "var_name": "nistTestVectors"}], "file": "java_src/src/test/java/com/google/crypto/tink/aead/AesGcmKeyManagerTest.java"}, "test_case": {"identifier": "testAes256GcmTemplate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAes256GcmTemplate() throws Exception {\n    KeyTemplate template = AesGcmKeyManager.aes256GcmTemplate();\n    assertEquals(new AesGcmKeyManager().getKeyType(), template.getTypeUrl());\n    assertEquals(KeyTemplate.OutputPrefixType.TINK, template.getOutputPrefixType());\n    AesGcmKeyFormat format =\n        AesGcmKeyFormat.parseFrom(\n            ByteString.copyFrom(template.getValue()), ExtensionRegistryLite.getEmptyRegistry());\n    assertEquals(32, format.getKeySize());\n  }", "signature": "void testAes256GcmTemplate()", "full_signature": "@Test public void testAes256GcmTemplate()", "class_method_signature": "AesGcmKeyManagerTest.testAes256GcmTemplate()", "testcase": true, "constructor": false, "invocations": ["aes256GcmTemplate", "assertEquals", "getKeyType", "getTypeUrl", "assertEquals", "getOutputPrefixType", "parseFrom", "copyFrom", "getValue", "getEmptyRegistry", "assertEquals", "getKeySize"]}, "focal_class": {"identifier": "AesGcmKeyManager", "superclass": "extends KeyTypeManager<AesGcmKey>", "interfaces": "", "fields": [], "methods": [{"identifier": "AesGcmKeyManager", "parameters": "()", "modifiers": "", "return": "", "signature": " AesGcmKeyManager()", "full_signature": "  AesGcmKeyManager()", "class_method_signature": "AesGcmKeyManager.AesGcmKeyManager()", "testcase": false, "constructor": true}, {"identifier": "getKeyType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getKeyType()", "full_signature": "@Override public String getKeyType()", "class_method_signature": "AesGcmKeyManager.getKeyType()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getVersion()", "full_signature": "@Override public int getVersion()", "class_method_signature": "AesGcmKeyManager.getVersion()", "testcase": false, "constructor": false}, {"identifier": "keyMaterialType", "parameters": "()", "modifiers": "@Override public", "return": "KeyMaterialType", "signature": "KeyMaterialType keyMaterialType()", "full_signature": "@Override public KeyMaterialType keyMaterialType()", "class_method_signature": "AesGcmKeyManager.keyMaterialType()", "testcase": false, "constructor": false}, {"identifier": "validateKey", "parameters": "(AesGcmKey key)", "modifiers": "@Override public", "return": "void", "signature": "void validateKey(AesGcmKey key)", "full_signature": "@Override public void validateKey(AesGcmKey key)", "class_method_signature": "AesGcmKeyManager.validateKey(AesGcmKey key)", "testcase": false, "constructor": false}, {"identifier": "parseKey", "parameters": "(ByteString byteString)", "modifiers": "@Override public", "return": "AesGcmKey", "signature": "AesGcmKey parseKey(ByteString byteString)", "full_signature": "@Override public AesGcmKey parseKey(ByteString byteString)", "class_method_signature": "AesGcmKeyManager.parseKey(ByteString byteString)", "testcase": false, "constructor": false}, {"identifier": "keyFactory", "parameters": "()", "modifiers": "@Override public", "return": "KeyFactory<AesGcmKeyFormat, AesGcmKey>", "signature": "KeyFactory<AesGcmKeyFormat, AesGcmKey> keyFactory()", "full_signature": "@Override public KeyFactory<AesGcmKeyFormat, AesGcmKey> keyFactory()", "class_method_signature": "AesGcmKeyManager.keyFactory()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(boolean newKeyAllowed)", "modifiers": "public static", "return": "void", "signature": "void register(boolean newKeyAllowed)", "full_signature": "public static void register(boolean newKeyAllowed)", "class_method_signature": "AesGcmKeyManager.register(boolean newKeyAllowed)", "testcase": false, "constructor": false}, {"identifier": "aes128GcmTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate aes128GcmTemplate()", "full_signature": "public static final KeyTemplate aes128GcmTemplate()", "class_method_signature": "AesGcmKeyManager.aes128GcmTemplate()", "testcase": false, "constructor": false}, {"identifier": "rawAes128GcmTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate rawAes128GcmTemplate()", "full_signature": "public static final KeyTemplate rawAes128GcmTemplate()", "class_method_signature": "AesGcmKeyManager.rawAes128GcmTemplate()", "testcase": false, "constructor": false}, {"identifier": "aes256GcmTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate aes256GcmTemplate()", "full_signature": "public static final KeyTemplate aes256GcmTemplate()", "class_method_signature": "AesGcmKeyManager.aes256GcmTemplate()", "testcase": false, "constructor": false}, {"identifier": "rawAes256GcmTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate rawAes256GcmTemplate()", "full_signature": "public static final KeyTemplate rawAes256GcmTemplate()", "class_method_signature": "AesGcmKeyManager.rawAes256GcmTemplate()", "testcase": false, "constructor": false}, {"identifier": "createKeyTemplate", "parameters": "(\n      int keySize, KeyTemplate.OutputPrefixType prefixType)", "modifiers": "private static", "return": "KeyTemplate", "signature": "KeyTemplate createKeyTemplate(\n      int keySize, KeyTemplate.OutputPrefixType prefixType)", "full_signature": "private static KeyTemplate createKeyTemplate(\n      int keySize, KeyTemplate.OutputPrefixType prefixType)", "class_method_signature": "AesGcmKeyManager.createKeyTemplate(\n      int keySize, KeyTemplate.OutputPrefixType prefixType)", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/aead/AesGcmKeyManager.java"}, "focal_method": {"identifier": "aes256GcmTemplate", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "body": "public static final KeyTemplate aes256GcmTemplate() {\n    return createKeyTemplate(32, KeyTemplate.OutputPrefixType.TINK);\n  }", "signature": "KeyTemplate aes256GcmTemplate()", "full_signature": "public static final KeyTemplate aes256GcmTemplate()", "class_method_signature": "AesGcmKeyManager.aes256GcmTemplate()", "testcase": false, "constructor": false, "invocations": ["createKeyTemplate"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}