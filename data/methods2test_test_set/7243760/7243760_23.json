{"test_class": {"identifier": "TestFastArrayList", "superclass": "", "interfaces": "", "fields": [], "file": "base/src/test/java/com/barchart/feed/base/collections/TestFastArrayList.java"}, "test_case": {"identifier": "testIterator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testIterator() {\n\n\t\tboolean isAdded, isRemoved;\n\n\t\tfinal FastArrayList<Integer> array = new FastArrayList<Integer>();\n\n\t\tassertTrue(array.isEmpty());\n\n\t\tfinal Integer one = 123456;\n\n\t\tfinal Integer two = 654321;\n\n\t\tisAdded = array.add(one);\n\t\tassertTrue(isAdded);\n\t\tisAdded = array.add(two);\n\t\tassertTrue(isAdded);\n\t\tassertEquals(array.size(), 2);\n\n\t\tisAdded = array.add(one);\n\t\tassertFalse(isAdded);\n\t\tisAdded = array.add(two);\n\t\tassertFalse(isAdded);\n\t\tassertEquals(array.size(), 2);\n\n\t\tint count1 = 0;\n\t\tfor (final Integer item : array) {\n\t\t\tcount1++;\n\t\t}\n\t\tassertEquals(count1, 2);\n\n\t\tint count2 = 0;\n\t\tfor (final Integer item : array) {\n\t\t\tcount2++;\n\t\t}\n\t\tassertEquals(count2, 2);\n\n\t\tisRemoved = array.remove(two);\n\t\tassertTrue(isRemoved);\n\t\tassertEquals(array.size(), 1);\n\n\t\tisRemoved = array.remove(two);\n\t\tassertFalse(isRemoved);\n\t\tassertEquals(array.size(), 1);\n\n\t\tisRemoved = array.remove(one);\n\t\tassertTrue(isRemoved);\n\t\tassertEquals(array.size(), 0);\n\n\t\tisRemoved = array.remove(one);\n\t\tassertFalse(isRemoved);\n\t\tassertEquals(array.size(), 0);\n\n\t}", "signature": "void testIterator()", "full_signature": "@Test public void testIterator()", "class_method_signature": "TestFastArrayList.testIterator()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isEmpty", "add", "assertTrue", "add", "assertTrue", "assertEquals", "size", "add", "assertFalse", "add", "assertFalse", "assertEquals", "size", "assertEquals", "assertEquals", "remove", "assertTrue", "assertEquals", "size", "remove", "assertFalse", "assertEquals", "size", "remove", "assertTrue", "assertEquals", "size", "remove", "assertFalse", "assertEquals", "size"]}, "focal_class": {"identifier": "FastArrayList", "superclass": "extends UnsupportedList<T>", "interfaces": "implements\n\t\tRunnerLoop<T>", "fields": [{"original_string": "protected volatile T[] array;", "modifier": "protected volatile", "type": "T[]", "declarator": "array", "var_name": "array"}], "methods": [{"identifier": "FastArrayList", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "", "signature": " FastArrayList()", "full_signature": "@SuppressWarnings(\"unchecked\") public  FastArrayList()", "class_method_signature": "FastArrayList.FastArrayList()", "testcase": false, "constructor": true}, {"identifier": "FastArrayList", "parameters": "(final int size)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "", "signature": " FastArrayList(final int size)", "full_signature": "@SuppressWarnings(\"unchecked\") public  FastArrayList(final int size)", "class_method_signature": "FastArrayList.FastArrayList(final int size)", "testcase": false, "constructor": true}, {"identifier": "FastArrayList", "parameters": "(final T[] array)", "modifiers": "public", "return": "", "signature": " FastArrayList(final T[] array)", "full_signature": "public  FastArrayList(final T[] array)", "class_method_signature": "FastArrayList.FastArrayList(final T[] array)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(final T item)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean add(final T item)", "full_signature": "@Override public boolean add(final T item)", "class_method_signature": "FastArrayList.add(final T item)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(final Object item)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "boolean", "signature": "boolean remove(final Object item)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public boolean remove(final Object item)", "class_method_signature": "FastArrayList.remove(final Object item)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<T>", "signature": "Iterator<T> iterator()", "full_signature": "@Override public Iterator<T> iterator()", "class_method_signature": "FastArrayList.iterator()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "FastArrayList.size()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "FastArrayList.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "runLoop", "parameters": "(final Runner<R, T> task, final List<R> list)", "modifiers": "@ThreadSafe(rule = \"does not reflect concurrent modifications\") @Override public", "return": "void", "signature": "void runLoop(final Runner<R, T> task, final List<R> list)", "full_signature": "@ThreadSafe(rule = \"does not reflect concurrent modifications\") @Override public void runLoop(final Runner<R, T> task, final List<R> list)", "class_method_signature": "FastArrayList.runLoop(final Runner<R, T> task, final List<R> list)", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "()", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] toArray()", "full_signature": "@Override public Object[] toArray()", "class_method_signature": "FastArrayList.toArray()", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "(final T[] instance)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "T[]", "signature": "T[] toArray(final T[] instance)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public T[] toArray(final T[] instance)", "class_method_signature": "FastArrayList.toArray(final T[] instance)", "testcase": false, "constructor": false}], "file": "base/src/main/java/com/barchart/feed/base/collections/FastArrayList.java"}, "focal_method": {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<T>", "body": "@Override\n\tpublic Iterator<T> iterator() {\n\t\treturn new ThisIterator(array);\n\t}", "signature": "Iterator<T> iterator()", "full_signature": "@Override public Iterator<T> iterator()", "class_method_signature": "FastArrayList.iterator()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 7243760, "url": "https://github.com/barchart/barchart-feed", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 6, "size": 64172, "license": "licensed"}}