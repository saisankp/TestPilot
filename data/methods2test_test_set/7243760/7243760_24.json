{"test_class": {"identifier": "TestFastEnumSet", "superclass": "", "interfaces": "", "fields": [], "file": "base/src/test/java/com/barchart/feed/base/collections/TestFastEnumSet.java"}, "test_case": {"identifier": "testBitSetFast0", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testBitSetFast0() {\n\n\t\t// empty\n\t\tfinal Set<E1> set = new FastEnumSet<E1>(E1.values());\n\n\t\tint count;\n\n\t\tcount = 0;\n\t\tfor (final E1 event : set) {\n\t\t\tcount++;\n\t\t\tout.println(event);\n\t\t}\n\t\tassertEquals(count, 0);\n\n\t\tset.add(E1.a);\n\t\tset.add(E1.c);\n\n\t\tcount = 0;\n\t\tfor (final E1 event : set) {\n\t\t\tcount++;\n\t\t\tout.println(event.mask());\n\t\t}\n\t\tassertEquals(count, 2);\n\n\t}", "signature": "void testBitSetFast0()", "full_signature": "@Test public void testBitSetFast0()", "class_method_signature": "TestFastEnumSet.testBitSetFast0()", "testcase": true, "constructor": false, "invocations": ["values", "println", "assertEquals", "add", "add", "println", "mask", "assertEquals"]}, "focal_class": {"identifier": "FastEnumSet", "superclass": "extends FastEnumBase<T>", "interfaces": "implements RunnerLoop<T>, Set<T>, BitSetLong", "fields": [{"original_string": "protected volatile long bitSet;", "modifier": "protected volatile", "type": "long", "declarator": "bitSet", "var_name": "bitSet"}, {"original_string": "private static final long NUL = 0L;", "modifier": "private static final", "type": "long", "declarator": "NUL = 0L", "var_name": "NUL"}, {"original_string": "private static final long ONE = 1L;", "modifier": "private static final", "type": "long", "declarator": "ONE = 1L", "var_name": "ONE"}], "methods": [{"identifier": "FastEnumSet", "parameters": "(final T[] values)", "modifiers": "protected", "return": "", "signature": " FastEnumSet(final T[] values)", "full_signature": "protected  FastEnumSet(final T[] values)", "class_method_signature": "FastEnumSet.FastEnumSet(final T[] values)", "testcase": false, "constructor": true}, {"identifier": "FastEnumSet", "parameters": "(final T[] values, final long bitSet)", "modifiers": "protected", "return": "", "signature": " FastEnumSet(final T[] values, final long bitSet)", "full_signature": "protected  FastEnumSet(final T[] values, final long bitSet)", "class_method_signature": "FastEnumSet.FastEnumSet(final T[] values, final long bitSet)", "testcase": false, "constructor": true}, {"identifier": "FastEnumSet", "parameters": "(final T[] values, final FastEnumSet<T> enumSet)", "modifiers": "protected", "return": "", "signature": " FastEnumSet(final T[] values, final FastEnumSet<T> enumSet)", "full_signature": "protected  FastEnumSet(final T[] values, final FastEnumSet<T> enumSet)", "class_method_signature": "FastEnumSet.FastEnumSet(final T[] values, final FastEnumSet<T> enumSet)", "testcase": false, "constructor": true}, {"identifier": "FastEnumSet", "parameters": "(final T[] values, final T... items)", "modifiers": "protected", "return": "", "signature": " FastEnumSet(final T[] values, final T... items)", "full_signature": "protected  FastEnumSet(final T[] values, final T... items)", "class_method_signature": "FastEnumSet.FastEnumSet(final T[] values, final T... items)", "testcase": false, "constructor": true}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "FastEnumSet.clear()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final T item)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean add(final T item)", "full_signature": "@Override public boolean add(final T item)", "class_method_signature": "FastEnumSet.add(final T item)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(final Object item)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean remove(final Object item)", "full_signature": "@Override public boolean remove(final Object item)", "class_method_signature": "FastEnumSet.remove(final Object item)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<T>", "signature": "Iterator<T> iterator()", "full_signature": "@Override public Iterator<T> iterator()", "class_method_signature": "FastEnumSet.iterator()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public final boolean isEmpty()", "class_method_signature": "FastEnumSet.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final Object item)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean contains(final Object item)", "full_signature": "@Override public final boolean contains(final Object item)", "class_method_signature": "FastEnumSet.contains(final Object item)", "testcase": false, "constructor": false}, {"identifier": "runLoop", "parameters": "(final Runner<R, T> task, final List<R> list)", "modifiers": "@ThreadSafe(rule = \"does not reflect concurrent modifications\") @Override public", "return": "void", "signature": "void runLoop(final Runner<R, T> task, final List<R> list)", "full_signature": "@ThreadSafe(rule = \"does not reflect concurrent modifications\") @Override public void runLoop(final Runner<R, T> task, final List<R> list)", "class_method_signature": "FastEnumSet.runLoop(final Runner<R, T> task, final List<R> list)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public final", "return": "int", "signature": "int size()", "full_signature": "@Override public final int size()", "class_method_signature": "FastEnumSet.size()", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(final Collection<? extends T> c)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addAll(final Collection<? extends T> c)", "full_signature": "@Override public boolean addAll(final Collection<? extends T> c)", "class_method_signature": "FastEnumSet.addAll(final Collection<? extends T> c)", "testcase": false, "constructor": false}, {"identifier": "containsAll", "parameters": "(final Collection<?> c)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsAll(final Collection<?> c)", "full_signature": "@Override public boolean containsAll(final Collection<?> c)", "class_method_signature": "FastEnumSet.containsAll(final Collection<?> c)", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "(final Collection<?> c)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeAll(final Collection<?> c)", "full_signature": "@Override public boolean removeAll(final Collection<?> c)", "class_method_signature": "FastEnumSet.removeAll(final Collection<?> c)", "testcase": false, "constructor": false}, {"identifier": "retainAll", "parameters": "(final Collection<?> c)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean retainAll(final Collection<?> c)", "full_signature": "@Override public boolean retainAll(final Collection<?> c)", "class_method_signature": "FastEnumSet.retainAll(final Collection<?> c)", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "()", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] toArray()", "full_signature": "@Override public Object[] toArray()", "class_method_signature": "FastEnumSet.toArray()", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "(final X[] a)", "modifiers": "@Override public", "return": "X[]", "signature": "X[] toArray(final X[] a)", "full_signature": "@Override public X[] toArray(final X[] a)", "class_method_signature": "FastEnumSet.toArray(final X[] a)", "testcase": false, "constructor": false}, {"identifier": "bitMaskAnd", "parameters": "(final long bits)", "modifiers": "@Override public final", "return": "long", "signature": "long bitMaskAnd(final long bits)", "full_signature": "@Override public final long bitMaskAnd(final long bits)", "class_method_signature": "FastEnumSet.bitMaskAnd(final long bits)", "testcase": false, "constructor": false}, {"identifier": "bitMaskOr", "parameters": "(final long bits)", "modifiers": "@Override public final", "return": "long", "signature": "long bitMaskOr(final long bits)", "full_signature": "@Override public final long bitMaskOr(final long bits)", "class_method_signature": "FastEnumSet.bitMaskOr(final long bits)", "testcase": false, "constructor": false}, {"identifier": "bitMaskXor", "parameters": "(final long bits)", "modifiers": "@Override public final", "return": "long", "signature": "long bitMaskXor(final long bits)", "full_signature": "@Override public final long bitMaskXor(final long bits)", "class_method_signature": "FastEnumSet.bitMaskXor(final long bits)", "testcase": false, "constructor": false}, {"identifier": "bitSet", "parameters": "()", "modifiers": "@Override public final", "return": "long", "signature": "long bitSet()", "full_signature": "@Override public final long bitSet()", "class_method_signature": "FastEnumSet.bitSet()", "testcase": false, "constructor": false}, {"identifier": "bitSet", "parameters": "(final long bits)", "modifiers": "@Override public final", "return": "long", "signature": "long bitSet(final long bits)", "full_signature": "@Override public final long bitSet(final long bits)", "class_method_signature": "FastEnumSet.bitSet(final long bits)", "testcase": false, "constructor": false}], "file": "base/src/main/java/com/barchart/feed/base/collections/FastEnumSet.java"}, "focal_method": {"identifier": "add", "parameters": "(final T item)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean add(final T item) {\n\n\t\tfinal long mask = item.mask();\n\n\t\tlong bitSet = this.bitSet;\n\n\t\tfinal boolean wasEmpty = (bitSet & mask) == NUL;\n\n\t\tbitSet |= mask;\n\n\t\tthis.bitSet = bitSet;\n\n\t\t// System.out.println(\"bitSet and Mas are = \" + wasEmpty);\n\t\treturn wasEmpty;\n\n\t}", "signature": "boolean add(final T item)", "full_signature": "@Override public boolean add(final T item)", "class_method_signature": "FastEnumSet.add(final T item)", "testcase": false, "constructor": false, "invocations": ["mask"]}, "repository": {"repo_id": 7243760, "url": "https://github.com/barchart/barchart-feed", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 6, "size": 64172, "license": "licensed"}}