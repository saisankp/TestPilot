{"test_class": {"identifier": "MessageSourceHelperTest", "superclass": "", "interfaces": "", "fields": [], "file": "handlebars-springmvc/src/test/java/com/github/jknack/handlebars/springmvc/MessageSourceHelperTest.java"}, "test_case": {"identifier": "messageSource", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void messageSource() throws IOException {\n    String message = \"Hola\";\n    String code = \"sayHi\";\n    String defaultMessage = null;\n\n    // Options\n    Object[] params = {};\n    @SuppressWarnings(\"unchecked\")\n    Map<String, Object> hash = createMock(Map.class);\n    expect(hash.get(\"default\")).andReturn(defaultMessage);\n\n    Handlebars hbs = createMock(Handlebars.class);\n    Context ctx = createMock(Context.class);\n    Template fn = createMock(Template.class);\n\n    Options options = new Options.Builder(hbs, \"messageSource\", TagType.VAR, ctx, fn)\n        .setParams(params)\n        .setHash(hash)\n        .build();\n\n    MessageSource messageSource = createMock(MessageSource.class);\n    expect(messageSource.getMessage(eq(code), eq(params), eq(defaultMessage),\n        isA(Locale.class))).andReturn(message);\n\n    replay(messageSource, hash);\n\n    Object result =\n        new MessageSourceHelper(messageSource).apply(code, options);\n    assertEquals(message, result);\n\n    verify(messageSource, hash);\n  }", "signature": "void messageSource()", "full_signature": "@Test public void messageSource()", "class_method_signature": "MessageSourceHelperTest.messageSource()", "testcase": true, "constructor": false, "invocations": ["createMock", "andReturn", "expect", "get", "createMock", "createMock", "createMock", "build", "setHash", "setParams", "createMock", "andReturn", "expect", "getMessage", "eq", "eq", "eq", "isA", "replay", "apply", "assertEquals", "verify"]}, "focal_class": {"identifier": "MessageSourceHelper", "superclass": "", "interfaces": "implements Helper<String>", "fields": [{"original_string": "private MessageSource messageSource;", "modifier": "private", "type": "MessageSource", "declarator": "messageSource", "var_name": "messageSource"}], "methods": [{"identifier": "MessageSourceHelper", "parameters": "(final MessageSource messageSource)", "modifiers": "public", "return": "", "signature": " MessageSourceHelper(final MessageSource messageSource)", "full_signature": "public  MessageSourceHelper(final MessageSource messageSource)", "class_method_signature": "MessageSourceHelper.MessageSourceHelper(final MessageSource messageSource)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(final String code, final Options options)", "modifiers": "@Override public", "return": "Object", "signature": "Object apply(final String code, final Options options)", "full_signature": "@Override public Object apply(final String code, final Options options)", "class_method_signature": "MessageSourceHelper.apply(final String code, final Options options)", "testcase": false, "constructor": false}, {"identifier": "currentLocale", "parameters": "()", "modifiers": "protected", "return": "Locale", "signature": "Locale currentLocale()", "full_signature": "protected Locale currentLocale()", "class_method_signature": "MessageSourceHelper.currentLocale()", "testcase": false, "constructor": false}], "file": "handlebars-springmvc/src/main/java/com/github/jknack/handlebars/springmvc/MessageSourceHelper.java"}, "focal_method": {"identifier": "apply", "parameters": "(final String code, final Options options)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n  public Object apply(final String code, final Options options)\n      throws IOException {\n    Object[] args = options.params;\n    String defaultMessage = options.hash(\"default\");\n    return messageSource.getMessage(code, args, defaultMessage, currentLocale());\n  }", "signature": "Object apply(final String code, final Options options)", "full_signature": "@Override public Object apply(final String code, final Options options)", "class_method_signature": "MessageSourceHelper.apply(final String code, final Options options)", "testcase": false, "constructor": false, "invocations": ["hash", "getMessage", "currentLocale"]}, "repository": {"repo_id": 4459604, "url": "https://github.com/jknack/handlebars.java", "stars": 1107, "created": "5/27/2012 3:22:22 AM +00:00", "updates": "2020-01-24T06:58:31+00:00", "fork": "False", "license": "licensed"}}