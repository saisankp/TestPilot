{"test_class": {"identifier": "LTMTopicMapReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static String testdataDirectory = \"ltm\";", "modifier": "private final static", "type": "String", "declarator": "testdataDirectory = \"ltm\"", "var_name": "testdataDirectory"}], "file": "ontopia-engine/src/test/java/net/ontopia/topicmaps/utils/ltm/LTMTopicMapReaderTest.java"}, "test_case": {"identifier": "testSubfileErrorReporting", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSubfileErrorReporting() throws IOException {\n    // test for issue 143: https://github.com/ontopia/ontopia/issues/143\n    try {\n      TopicMapIF tm = read(\"mergemap-error.ltm\");\n      Assert.fail(\"No error found!\");\n    } catch (IOException e) {\n      String msg = e.getMessage();\n      Assert.assertTrue(\"error message does not mention file containing error: \" + msg,\n                 msg.indexOf(\"mergemap-error-sub.ltm\") != -1);\n    }\n  }", "signature": "void testSubfileErrorReporting()", "full_signature": "@Test public void testSubfileErrorReporting()", "class_method_signature": "LTMTopicMapReaderTest.testSubfileErrorReporting()", "testcase": true, "constructor": false, "invocations": ["read", "fail", "getMessage", "assertTrue", "indexOf"]}, "focal_class": {"identifier": "LTMTopicMapReader", "superclass": "extends AbstractTopicMapReader", "interfaces": "", "fields": [], "methods": [{"identifier": "LTMTopicMapReader", "parameters": "(URL url)", "modifiers": "public", "return": "", "signature": " LTMTopicMapReader(URL url)", "full_signature": "public  LTMTopicMapReader(URL url)", "class_method_signature": "LTMTopicMapReader.LTMTopicMapReader(URL url)", "testcase": false, "constructor": true}, {"identifier": "LTMTopicMapReader", "parameters": "(URL url, LocatorIF base_address)", "modifiers": "public", "return": "", "signature": " LTMTopicMapReader(URL url, LocatorIF base_address)", "full_signature": "public  LTMTopicMapReader(URL url, LocatorIF base_address)", "class_method_signature": "LTMTopicMapReader.LTMTopicMapReader(URL url, LocatorIF base_address)", "testcase": false, "constructor": true}, {"identifier": "LTMTopicMapReader", "parameters": "(Reader reader, LocatorIF base_address)", "modifiers": "public", "return": "", "signature": " LTMTopicMapReader(Reader reader, LocatorIF base_address)", "full_signature": "public  LTMTopicMapReader(Reader reader, LocatorIF base_address)", "class_method_signature": "LTMTopicMapReader.LTMTopicMapReader(Reader reader, LocatorIF base_address)", "testcase": false, "constructor": true}, {"identifier": "LTMTopicMapReader", "parameters": "(InputStream stream, LocatorIF base_address)", "modifiers": "public", "return": "", "signature": " LTMTopicMapReader(InputStream stream, LocatorIF base_address)", "full_signature": "public  LTMTopicMapReader(InputStream stream, LocatorIF base_address)", "class_method_signature": "LTMTopicMapReader.LTMTopicMapReader(InputStream stream, LocatorIF base_address)", "testcase": false, "constructor": true}, {"identifier": "LTMTopicMapReader", "parameters": "(File file)", "modifiers": "public", "return": "", "signature": " LTMTopicMapReader(File file)", "full_signature": "public  LTMTopicMapReader(File file)", "class_method_signature": "LTMTopicMapReader.LTMTopicMapReader(File file)", "testcase": false, "constructor": true}, {"identifier": "read", "parameters": "(TopicMapStoreFactoryIF store_factory)", "modifiers": "@Override protected", "return": "TopicMapIF", "signature": "TopicMapIF read(TopicMapStoreFactoryIF store_factory)", "full_signature": "@Override protected TopicMapIF read(TopicMapStoreFactoryIF store_factory)", "class_method_signature": "LTMTopicMapReader.read(TopicMapStoreFactoryIF store_factory)", "testcase": false, "constructor": false}], "file": "ontopia-engine/src/main/java/net/ontopia/topicmaps/utils/ltm/LTMTopicMapReader.java"}, "focal_method": {"identifier": "read", "parameters": "(TopicMapStoreFactoryIF store_factory)", "modifiers": "@Override protected", "return": "TopicMapIF", "body": "@Override\n  protected TopicMapIF read(TopicMapStoreFactoryIF store_factory)\n      throws IOException {\n    TopicMapStoreIF store = store_factory.createStore();\n    TopicMapIF topicmap = store.getTopicMap();\n\n    // Set base address on in-memory store\n    if ((store instanceof net.ontopia.topicmaps.impl.utils.AbstractTopicMapStore) &&\n        store.getBaseAddress() == null)\n      ((net.ontopia.topicmaps.impl.utils.AbstractTopicMapStore)store)\n          .setBaseAddress(getBaseAddress());\n\n    try (Reader reader = makeReader((String) null, new LTMEncodingSniffer())) {\n       // Parse!\n      LTMLexer lexer = new LTMLexer(reader);\n      LTMParser parser = new LTMParser(lexer);\n      parser.setBase(getBaseAddress());\n      parser.setTopicMap(topicmap);\n      parser.init();\n      parser.topicmap();\n      reader.close();\n    } catch (AntlrWrapException ex) {\n      throw (IOException) ex.getException();\n    } catch (RecognitionException ex) {\n      throw new IOException(\"Lexical error at \" + getBaseAddress().getAddress()\n          + \":\" + ex.line + \":\" + ex.column + \": \"+ ex.getMessage());\n    } catch (TokenStreamRecognitionException e) {\n      RecognitionException ex = e.recog;\n      throw new IOException(\"Lexical error at \" + getBaseAddress().getAddress()\n          + \":\" + ex.line + \":\" + ex.column + \": \"+ ex.getMessage());\n    } catch (TokenStreamIOException ex) {\n      throw ex.io;\n    } catch (TokenStreamException ex) {\n      throw new IOException(\"Lexical error: \" + ex.getMessage());\n    } catch (java.io.CharConversionException e) {\n      throw new IOException(\"Problem decoding character encoding.\"\n          + \"Did you declare the right encoding?\");\n    }\n\n    // Process class-instance associations\n    ClassInstanceUtils.resolveAssociations1(topicmap);\n\n    return topicmap;\n  }", "signature": "TopicMapIF read(TopicMapStoreFactoryIF store_factory)", "full_signature": "@Override protected TopicMapIF read(TopicMapStoreFactoryIF store_factory)", "class_method_signature": "LTMTopicMapReader.read(TopicMapStoreFactoryIF store_factory)", "testcase": false, "constructor": false, "invocations": ["createStore", "getTopicMap", "getBaseAddress", "setBaseAddress", "getBaseAddress", "makeReader", "setBase", "getBaseAddress", "setTopicMap", "init", "topicmap", "close", "getException", "getAddress", "getBaseAddress", "getMessage", "getAddress", "getBaseAddress", "getMessage", "getMessage", "resolveAssociations1"]}, "repository": {"repo_id": 32357795, "url": "https://github.com/ontopia/ontopia", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 35, "size": 68637, "license": "licensed"}}