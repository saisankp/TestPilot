{"test_class": {"identifier": "SourceInfoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SourceInfo source;", "modifier": "private", "type": "SourceInfo", "declarator": "source", "var_name": "source"}], "file": "debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/SourceInfoTest.java"}, "test_case": {"identifier": "canHandleNullValues", "parameters": "()", "modifiers": "@Test @FixFor(\"DBZ-934\") public", "return": "void", "body": "@Test\n    @FixFor(\"DBZ-934\")\n    public void canHandleNullValues() {\n        source.update(null, null, null, null, null);\n    }", "signature": "void canHandleNullValues()", "full_signature": "@Test @FixFor(\"DBZ-934\") public void canHandleNullValues()", "class_method_signature": "SourceInfoTest.canHandleNullValues()", "testcase": true, "constructor": false, "invocations": ["update"]}, "focal_class": {"identifier": "SourceInfo", "superclass": "extends BaseSourceInfo", "interfaces": "", "fields": [{"original_string": "public static final String TIMESTAMP_USEC_KEY = \"ts_usec\";", "modifier": "public static final", "type": "String", "declarator": "TIMESTAMP_USEC_KEY = \"ts_usec\"", "var_name": "TIMESTAMP_USEC_KEY"}, {"original_string": "public static final String TXID_KEY = \"txId\";", "modifier": "public static final", "type": "String", "declarator": "TXID_KEY = \"txId\"", "var_name": "TXID_KEY"}, {"original_string": "public static final String XMIN_KEY = \"xmin\";", "modifier": "public static final", "type": "String", "declarator": "XMIN_KEY = \"xmin\"", "var_name": "XMIN_KEY"}, {"original_string": "public static final String LSN_KEY = \"lsn\";", "modifier": "public static final", "type": "String", "declarator": "LSN_KEY = \"lsn\"", "var_name": "LSN_KEY"}, {"original_string": "public static final String LAST_SNAPSHOT_RECORD_KEY = \"last_snapshot_record\";", "modifier": "public static final", "type": "String", "declarator": "LAST_SNAPSHOT_RECORD_KEY = \"last_snapshot_record\"", "var_name": "LAST_SNAPSHOT_RECORD_KEY"}, {"original_string": "private final String dbName;", "modifier": "private final", "type": "String", "declarator": "dbName", "var_name": "dbName"}, {"original_string": "private Lsn lsn;", "modifier": "private", "type": "Lsn", "declarator": "lsn", "var_name": "lsn"}, {"original_string": "private Long txId;", "modifier": "private", "type": "Long", "declarator": "txId", "var_name": "txId"}, {"original_string": "private Long xmin;", "modifier": "private", "type": "Long", "declarator": "xmin", "var_name": "xmin"}, {"original_string": "private Instant timestamp;", "modifier": "private", "type": "Instant", "declarator": "timestamp", "var_name": "timestamp"}, {"original_string": "private String schemaName;", "modifier": "private", "type": "String", "declarator": "schemaName", "var_name": "schemaName"}, {"original_string": "private String tableName;", "modifier": "private", "type": "String", "declarator": "tableName", "var_name": "tableName"}], "methods": [{"identifier": "SourceInfo", "parameters": "(PostgresConnectorConfig connectorConfig)", "modifiers": "protected", "return": "", "signature": " SourceInfo(PostgresConnectorConfig connectorConfig)", "full_signature": "protected  SourceInfo(PostgresConnectorConfig connectorConfig)", "class_method_signature": "SourceInfo.SourceInfo(PostgresConnectorConfig connectorConfig)", "testcase": false, "constructor": true}, {"identifier": "update", "parameters": "(Lsn lsn, Instant commitTime, Long txId, TableId tableId, Long xmin)", "modifiers": "protected", "return": "SourceInfo", "signature": "SourceInfo update(Lsn lsn, Instant commitTime, Long txId, TableId tableId, Long xmin)", "full_signature": "protected SourceInfo update(Lsn lsn, Instant commitTime, Long txId, TableId tableId, Long xmin)", "class_method_signature": "SourceInfo.update(Lsn lsn, Instant commitTime, Long txId, TableId tableId, Long xmin)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Instant timestamp, TableId tableId)", "modifiers": "protected", "return": "SourceInfo", "signature": "SourceInfo update(Instant timestamp, TableId tableId)", "full_signature": "protected SourceInfo update(Instant timestamp, TableId tableId)", "class_method_signature": "SourceInfo.update(Instant timestamp, TableId tableId)", "testcase": false, "constructor": false}, {"identifier": "lsn", "parameters": "()", "modifiers": "public", "return": "Lsn", "signature": "Lsn lsn()", "full_signature": "public Lsn lsn()", "class_method_signature": "SourceInfo.lsn()", "testcase": false, "constructor": false}, {"identifier": "xmin", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long xmin()", "full_signature": "public Long xmin()", "class_method_signature": "SourceInfo.xmin()", "testcase": false, "constructor": false}, {"identifier": "database", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String database()", "full_signature": "@Override protected String database()", "class_method_signature": "SourceInfo.database()", "testcase": false, "constructor": false}, {"identifier": "schemaName", "parameters": "()", "modifiers": "", "return": "String", "signature": "String schemaName()", "full_signature": " String schemaName()", "class_method_signature": "SourceInfo.schemaName()", "testcase": false, "constructor": false}, {"identifier": "tableName", "parameters": "()", "modifiers": "", "return": "String", "signature": "String tableName()", "full_signature": " String tableName()", "class_method_signature": "SourceInfo.tableName()", "testcase": false, "constructor": false}, {"identifier": "timestamp", "parameters": "()", "modifiers": "@Override protected", "return": "Instant", "signature": "Instant timestamp()", "full_signature": "@Override protected Instant timestamp()", "class_method_signature": "SourceInfo.timestamp()", "testcase": false, "constructor": false}, {"identifier": "txId", "parameters": "()", "modifiers": "protected", "return": "Long", "signature": "Long txId()", "full_signature": "protected Long txId()", "class_method_signature": "SourceInfo.txId()", "testcase": false, "constructor": false}, {"identifier": "snapshot", "parameters": "()", "modifiers": "@Override public", "return": "SnapshotRecord", "signature": "SnapshotRecord snapshot()", "full_signature": "@Override public SnapshotRecord snapshot()", "class_method_signature": "SourceInfo.snapshot()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SourceInfo.toString()", "testcase": false, "constructor": false}], "file": "debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/SourceInfo.java"}, "focal_method": {"identifier": "update", "parameters": "(Lsn lsn, Instant commitTime, Long txId, TableId tableId, Long xmin)", "modifiers": "protected", "return": "SourceInfo", "body": "protected SourceInfo update(Lsn lsn, Instant commitTime, Long txId, TableId tableId, Long xmin) {\n        this.lsn = lsn;\n        if (commitTime != null) {\n            this.timestamp = commitTime;\n        }\n        this.txId = txId;\n        this.xmin = xmin;\n        if (tableId != null && tableId.schema() != null) {\n            this.schemaName = tableId.schema();\n        }\n        if (tableId != null && tableId.table() != null) {\n            this.tableName = tableId.table();\n        }\n        return this;\n    }", "signature": "SourceInfo update(Lsn lsn, Instant commitTime, Long txId, TableId tableId, Long xmin)", "full_signature": "protected SourceInfo update(Lsn lsn, Instant commitTime, Long txId, TableId tableId, Long xmin)", "class_method_signature": "SourceInfo.update(Lsn lsn, Instant commitTime, Long txId, TableId tableId, Long xmin)", "testcase": false, "constructor": false, "invocations": ["schema", "schema", "table", "table"]}, "repository": {"repo_id": 50205233, "url": "https://github.com/debezium/debezium", "stars": 2686, "created": "1/22/2016 8:17:05 PM +00:00", "updates": "2020-01-27T20:48:54+00:00", "fork": "False", "license": "licensed"}}