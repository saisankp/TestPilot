{"test_class": {"identifier": "ViewTargetTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [], "file": "library/src/test/java/com/climate/mirage/targets/ViewTargetTest.java"}, "test_case": {"identifier": "testDrawableFactory", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDrawableFactory() {\n        ImageView imageView = new ImageView(RuntimeEnvironment.application);\n        ImageViewTarget target = new ImageViewTarget(imageView);\n        DrawableFactory factory = Mockito.mock(DrawableFactory.class);\n        Mockito.when(\n                    factory.createDrawable((Context) Mockito.any(), (Bitmap) Mockito.any()))\n                .thenReturn(new ColorDrawable(Color.RED));\n        target.drawableFactory(factory);\n        Drawable d = target.createDrawable(RuntimeEnvironment.application,\n                Bitmap.createBitmap(200, 200, Bitmap.Config.ARGB_8888));\n        Assert.assertNotNull(d);\n        Mockito.verify(factory, Mockito.times(1)).createDrawable((Context) Mockito.any(),\n                (Bitmap) Mockito.any());\n    }", "signature": "void testDrawableFactory()", "full_signature": "@Test public void testDrawableFactory()", "class_method_signature": "ViewTargetTest.testDrawableFactory()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "createDrawable", "any", "any", "drawableFactory", "createDrawable", "createBitmap", "assertNotNull", "createDrawable", "verify", "times", "any", "any"]}, "focal_class": {"identifier": "ViewTarget", "superclass": "", "interfaces": "implements Target<Bitmap>, DrawableFactory", "fields": [{"original_string": "private MirageRequest request;", "modifier": "private", "type": "MirageRequest", "declarator": "request", "var_name": "request"}, {"original_string": "private WeakReference<V> viewRef;", "modifier": "private", "type": "WeakReference<V>", "declarator": "viewRef", "var_name": "viewRef"}, {"original_string": "private int placeHolderResourceId = 0;", "modifier": "private", "type": "int", "declarator": "placeHolderResourceId = 0", "var_name": "placeHolderResourceId"}, {"original_string": "private Drawable placeHolderDrawable;", "modifier": "private", "type": "Drawable", "declarator": "placeHolderDrawable", "var_name": "placeHolderDrawable"}, {"original_string": "private int errorResourceId = 0;", "modifier": "private", "type": "int", "declarator": "errorResourceId = 0", "var_name": "errorResourceId"}, {"original_string": "private Drawable errorDrawable;", "modifier": "private", "type": "Drawable", "declarator": "errorDrawable", "var_name": "errorDrawable"}, {"original_string": "private MirageAnimation animation;", "modifier": "private", "type": "MirageAnimation", "declarator": "animation", "var_name": "animation"}, {"original_string": "private DrawableFactory successDrawableFactory;", "modifier": "private", "type": "DrawableFactory", "declarator": "successDrawableFactory", "var_name": "successDrawableFactory"}, {"original_string": "private boolean isFit = false;", "modifier": "private", "type": "boolean", "declarator": "isFit = false", "var_name": "isFit"}, {"original_string": "private MirageTask<Void, Void, Bitmap> mirageTask;", "modifier": "private", "type": "MirageTask<Void, Void, Bitmap>", "declarator": "mirageTask", "var_name": "mirageTask"}, {"original_string": "private ViewTreeObserver.OnGlobalLayoutListener onGlobalLayoutListener;", "modifier": "private", "type": "ViewTreeObserver.OnGlobalLayoutListener", "declarator": "onGlobalLayoutListener", "var_name": "onGlobalLayoutListener"}], "methods": [{"identifier": "ViewTarget", "parameters": "(V view)", "modifiers": "public", "return": "", "signature": " ViewTarget(V view)", "full_signature": "public  ViewTarget(V view)", "class_method_signature": "ViewTarget.ViewTarget(V view)", "testcase": false, "constructor": true}, {"identifier": "ViewTarget", "parameters": "(MirageRequest request, V view)", "modifiers": "public", "return": "", "signature": " ViewTarget(MirageRequest request, V view)", "full_signature": "public  ViewTarget(MirageRequest request, V view)", "class_method_signature": "ViewTarget.ViewTarget(MirageRequest request, V view)", "testcase": false, "constructor": true}, {"identifier": "getView", "parameters": "()", "modifiers": "public", "return": "V", "signature": "V getView()", "full_signature": "public V getView()", "class_method_signature": "ViewTarget.getView()", "testcase": false, "constructor": false}, {"identifier": "placeHolder", "parameters": "(@DrawableRes int resourceId)", "modifiers": "public", "return": "ViewTarget<V>", "signature": "ViewTarget<V> placeHolder(@DrawableRes int resourceId)", "full_signature": "public ViewTarget<V> placeHolder(@DrawableRes int resourceId)", "class_method_signature": "ViewTarget.placeHolder(@DrawableRes int resourceId)", "testcase": false, "constructor": false}, {"identifier": "placeHolder", "parameters": "(Drawable drawable)", "modifiers": "public", "return": "ViewTarget<V>", "signature": "ViewTarget<V> placeHolder(Drawable drawable)", "full_signature": "public ViewTarget<V> placeHolder(Drawable drawable)", "class_method_signature": "ViewTarget.placeHolder(Drawable drawable)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(@DrawableRes int resourceId)", "modifiers": "public", "return": "ViewTarget<V>", "signature": "ViewTarget<V> error(@DrawableRes int resourceId)", "full_signature": "public ViewTarget<V> error(@DrawableRes int resourceId)", "class_method_signature": "ViewTarget.error(@DrawableRes int resourceId)", "testcase": false, "constructor": false}, {"identifier": "error", "parameters": "(Drawable drawable)", "modifiers": "public", "return": "ViewTarget<V>", "signature": "ViewTarget<V> error(Drawable drawable)", "full_signature": "public ViewTarget<V> error(Drawable drawable)", "class_method_signature": "ViewTarget.error(Drawable drawable)", "testcase": false, "constructor": false}, {"identifier": "animation", "parameters": "(MirageAnimation<V> animation)", "modifiers": "public", "return": "ViewTarget<V>", "signature": "ViewTarget<V> animation(MirageAnimation<V> animation)", "full_signature": "public ViewTarget<V> animation(MirageAnimation<V> animation)", "class_method_signature": "ViewTarget.animation(MirageAnimation<V> animation)", "testcase": false, "constructor": false}, {"identifier": "animation", "parameters": "()", "modifiers": "public", "return": "MirageAnimation<V>", "signature": "MirageAnimation<V> animation()", "full_signature": "public MirageAnimation<V> animation()", "class_method_signature": "ViewTarget.animation()", "testcase": false, "constructor": false}, {"identifier": "fade", "parameters": "()", "modifiers": "public", "return": "ViewTarget<V>", "signature": "ViewTarget<V> fade()", "full_signature": "public ViewTarget<V> fade()", "class_method_signature": "ViewTarget.fade()", "testcase": false, "constructor": false}, {"identifier": "fit", "parameters": "()", "modifiers": "public", "return": "ViewTarget<V>", "signature": "ViewTarget<V> fit()", "full_signature": "public ViewTarget<V> fit()", "class_method_signature": "ViewTarget.fit()", "testcase": false, "constructor": false}, {"identifier": "drawableFactory", "parameters": "(DrawableFactory factory)", "modifiers": "public", "return": "ViewTarget<V>", "signature": "ViewTarget<V> drawableFactory(DrawableFactory factory)", "full_signature": "public ViewTarget<V> drawableFactory(DrawableFactory factory)", "class_method_signature": "ViewTarget.drawableFactory(DrawableFactory factory)", "testcase": false, "constructor": false}, {"identifier": "go", "parameters": "()", "modifiers": "public", "return": "MirageTask", "signature": "MirageTask go()", "full_signature": "public MirageTask go()", "class_method_signature": "ViewTarget.go()", "testcase": false, "constructor": false}, {"identifier": "getPlaceHolderDrawable", "parameters": "()", "modifiers": "public", "return": "Drawable", "signature": "Drawable getPlaceHolderDrawable()", "full_signature": "public Drawable getPlaceHolderDrawable()", "class_method_signature": "ViewTarget.getPlaceHolderDrawable()", "testcase": false, "constructor": false}, {"identifier": "getPlaceHolderResourceId", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPlaceHolderResourceId()", "full_signature": "public int getPlaceHolderResourceId()", "class_method_signature": "ViewTarget.getPlaceHolderResourceId()", "testcase": false, "constructor": false}, {"identifier": "getErrorDrawable", "parameters": "()", "modifiers": "public", "return": "Drawable", "signature": "Drawable getErrorDrawable()", "full_signature": "public Drawable getErrorDrawable()", "class_method_signature": "ViewTarget.getErrorDrawable()", "testcase": false, "constructor": false}, {"identifier": "getErrorResourceId", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getErrorResourceId()", "full_signature": "public int getErrorResourceId()", "class_method_signature": "ViewTarget.getErrorResourceId()", "testcase": false, "constructor": false}, {"identifier": "onPreparingLoad", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onPreparingLoad()", "full_signature": "@Override public void onPreparingLoad()", "class_method_signature": "ViewTarget.onPreparingLoad()", "testcase": false, "constructor": false}, {"identifier": "onResult", "parameters": "(Bitmap bitmap, Mirage.Source source, MirageRequest request)", "modifiers": "@Override public", "return": "void", "signature": "void onResult(Bitmap bitmap, Mirage.Source source, MirageRequest request)", "full_signature": "@Override public void onResult(Bitmap bitmap, Mirage.Source source, MirageRequest request)", "class_method_signature": "ViewTarget.onResult(Bitmap bitmap, Mirage.Source source, MirageRequest request)", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(Exception e, Mirage.Source source, MirageRequest request)", "modifiers": "@Override public", "return": "void", "signature": "void onError(Exception e, Mirage.Source source, MirageRequest request)", "full_signature": "@Override public void onError(Exception e, Mirage.Source source, MirageRequest request)", "class_method_signature": "ViewTarget.onError(Exception e, Mirage.Source source, MirageRequest request)", "testcase": false, "constructor": false}, {"identifier": "onCancel", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onCancel()", "full_signature": "@Override public void onCancel()", "class_method_signature": "ViewTarget.onCancel()", "testcase": false, "constructor": false}, {"identifier": "createDrawable", "parameters": "(Context context, Bitmap bitmap)", "modifiers": "@Override public", "return": "Drawable", "signature": "Drawable createDrawable(Context context, Bitmap bitmap)", "full_signature": "@Override public Drawable createDrawable(Context context, Bitmap bitmap)", "class_method_signature": "ViewTarget.createDrawable(Context context, Bitmap bitmap)", "testcase": false, "constructor": false}, {"identifier": "onPreparingLoad", "parameters": "(V view)", "modifiers": "protected", "return": "void", "signature": "void onPreparingLoad(V view)", "full_signature": "protected void onPreparingLoad(V view)", "class_method_signature": "ViewTarget.onPreparingLoad(V view)", "testcase": false, "constructor": false}, {"identifier": "onResult", "parameters": "(V view, Drawable drawable, Mirage.Source source, MirageRequest request)", "modifiers": "protected", "return": "void", "signature": "void onResult(V view, Drawable drawable, Mirage.Source source, MirageRequest request)", "full_signature": "protected void onResult(V view, Drawable drawable, Mirage.Source source, MirageRequest request)", "class_method_signature": "ViewTarget.onResult(V view, Drawable drawable, Mirage.Source source, MirageRequest request)", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(V view, Exception e, Mirage.Source source, MirageRequest request)", "modifiers": "protected", "return": "void", "signature": "void onError(V view, Exception e, Mirage.Source source, MirageRequest request)", "full_signature": "protected void onError(V view, Exception e, Mirage.Source source, MirageRequest request)", "class_method_signature": "ViewTarget.onError(V view, Exception e, Mirage.Source source, MirageRequest request)", "testcase": false, "constructor": false}, {"identifier": "fitImageLater", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void fitImageLater()", "full_signature": "private void fitImageLater()", "class_method_signature": "ViewTarget.fitImageLater()", "testcase": false, "constructor": false}, {"identifier": "cleanUpLayoutListener", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void cleanUpLayoutListener()", "full_signature": "private void cleanUpLayoutListener()", "class_method_signature": "ViewTarget.cleanUpLayoutListener()", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/climate/mirage/targets/ViewTarget.java"}, "focal_method": {"identifier": "drawableFactory", "parameters": "(DrawableFactory factory)", "modifiers": "public", "return": "ViewTarget<V>", "body": "public ViewTarget<V> drawableFactory(DrawableFactory factory) {\n\t\tsuccessDrawableFactory = factory;\n\t\treturn this;\n\t}", "signature": "ViewTarget<V> drawableFactory(DrawableFactory factory)", "full_signature": "public ViewTarget<V> drawableFactory(DrawableFactory factory)", "class_method_signature": "ViewTarget.drawableFactory(DrawableFactory factory)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 35564219, "url": "https://github.com/TheClimateCorporation/mirage", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 3928, "license": "licensed"}}