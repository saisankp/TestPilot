{"test_class": {"identifier": "FederationTest", "superclass": "extends TestCase", "interfaces": "", "fields": [{"original_string": "@Mock\n    private OkHttpClient fakeClient;", "modifier": "@Mock\n    private", "type": "OkHttpClient", "declarator": "fakeClient", "var_name": "fakeClient"}, {"original_string": "@Mock\n    private Call mockCall;", "modifier": "@Mock\n    private", "type": "Call", "declarator": "mockCall", "var_name": "mockCall"}, {"original_string": "private final String stellarToml =\n            \"FEDERATION_SERVER = \\\"https://api.stellar.org/federation\\\"\";", "modifier": "private final", "type": "String", "declarator": "stellarToml =\n            \"FEDERATION_SERVER = \\\"https://api.stellar.org/federation\\\"\"", "var_name": "stellarToml"}, {"original_string": "private final String successResponse =\n            \"{\\\"stellar_address\\\":\\\"bob*stellar.org\\\",\\\"account_id\\\":\\\"GCW667JUHCOP5Y7KY6KGDHNPHFM4CS3FCBQ7QWDUALXTX3PGXLSOEALY\\\"}\";", "modifier": "private final", "type": "String", "declarator": "successResponse =\n            \"{\\\"stellar_address\\\":\\\"bob*stellar.org\\\",\\\"account_id\\\":\\\"GCW667JUHCOP5Y7KY6KGDHNPHFM4CS3FCBQ7QWDUALXTX3PGXLSOEALY\\\"}\"", "var_name": "successResponse"}], "file": "kin-sdk/kin-base/src/test/java/kin/base/federation/FederationTest.java"}, "test_case": {"identifier": "testMalformedAddress", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMalformedAddress() {\n        try {\n            FederationResponse response = Federation.resolve(\"bob*stellar.org*test\");\n            fail(\"Expected exception\");\n        } catch (MalformedAddressException e) {\n            //\n        }\n    }", "signature": "void testMalformedAddress()", "full_signature": "@Test public void testMalformedAddress()", "class_method_signature": "FederationTest.testMalformedAddress()", "testcase": true, "constructor": false, "invocations": ["resolve", "fail"]}, "focal_class": {"identifier": "Federation", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Federation", "parameters": "()", "modifiers": "private", "return": "", "signature": " Federation()", "full_signature": "private  Federation()", "class_method_signature": "Federation.Federation()", "testcase": false, "constructor": true}, {"identifier": "resolve", "parameters": "(String value)", "modifiers": "public static", "return": "FederationResponse", "signature": "FederationResponse resolve(String value)", "full_signature": "public static FederationResponse resolve(String value)", "class_method_signature": "Federation.resolve(String value)", "testcase": false, "constructor": false}], "file": "kin-sdk/kin-base/src/main/java/kin/base/federation/Federation.java"}, "focal_method": {"identifier": "resolve", "parameters": "(String value)", "modifiers": "public static", "return": "FederationResponse", "body": "public static FederationResponse resolve(String value) {\n        String[] tokens = value.split(\"\\\\*\");\n        if (tokens.length == 1) {\n            // accountId\n            return new FederationResponse(null, value, null, null);\n        } else if (tokens.length == 2) {\n            String domain = tokens[1];\n            FederationServer server = FederationServer.createForDomain(domain);\n            return server.resolveAddress(value);\n        } else {\n            throw new MalformedAddressException();\n        }\n    }", "signature": "FederationResponse resolve(String value)", "full_signature": "public static FederationResponse resolve(String value)", "class_method_signature": "Federation.resolve(String value)", "testcase": false, "constructor": false, "invocations": ["split", "createForDomain", "resolveAddress"]}, "repository": {"repo_id": 156408389, "url": "https://github.com/kinecosystem/kin-sdk-android", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 9, "size": 3232, "license": "licensed"}}