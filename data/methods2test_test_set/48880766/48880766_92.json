{"test_class": {"identifier": "StringUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/tech/tablesaw/util/StringUtilsTest.java"}, "test_case": {"identifier": "testRemoveZeroDecimal", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRemoveZeroDecimal() {\n    // Assert zero decimals being removed\n    assertEquals(\"246\", StringUtils.removeZeroDecimal(\"246.0\"));\n    assertEquals(\"146\", StringUtils.removeZeroDecimal(\"146.00\"));\n    assertEquals(\"357\", StringUtils.removeZeroDecimal(\"357.000\"));\n    assertEquals(\"347\", StringUtils.removeZeroDecimal(\"347.0000\"));\n\n    // Assert no change to input value\n    assertEquals(\"468\", StringUtils.removeZeroDecimal(\"468\"));\n    assertEquals(\"24\", StringUtils.removeZeroDecimal(\"24\"));\n    assertEquals(\"468.02\", StringUtils.removeZeroDecimal(\"468.02\"));\n    assertEquals(\"246.004\", StringUtils.removeZeroDecimal(\"246.004\"));\n    assertEquals(\"246.4000\", StringUtils.removeZeroDecimal(\"246.4000\"));\n\n    // Assert empty string and null handling\n    assertEquals(\"\", StringUtils.removeZeroDecimal(\"\"));\n    assertNull(StringUtils.removeZeroDecimal(null));\n  }", "signature": "void testRemoveZeroDecimal()", "full_signature": "@Test public void testRemoveZeroDecimal()", "class_method_signature": "StringUtilsTest.testRemoveZeroDecimal()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "removeZeroDecimal", "assertEquals", "removeZeroDecimal", "assertEquals", "removeZeroDecimal", "assertEquals", "removeZeroDecimal", "assertEquals", "removeZeroDecimal", "assertEquals", "removeZeroDecimal", "assertEquals", "removeZeroDecimal", "assertEquals", "removeZeroDecimal", "assertEquals", "removeZeroDecimal", "assertEquals", "removeZeroDecimal", "assertNull", "removeZeroDecimal"]}, "focal_class": {"identifier": "StringUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String EMPTY = \"\";", "modifier": "private static final", "type": "String", "declarator": "EMPTY = \"\"", "var_name": "EMPTY"}, {"original_string": "private static final int PAD_LIMIT = 8192;", "modifier": "private static final", "type": "int", "declarator": "PAD_LIMIT = 8192", "var_name": "PAD_LIMIT"}, {"original_string": "private static final Pattern ZERO_DECIMAL_PATTERN = Pattern.compile(\"\\\\.0+$\");", "modifier": "private static final", "type": "Pattern", "declarator": "ZERO_DECIMAL_PATTERN = Pattern.compile(\"\\\\.0+$\")", "var_name": "ZERO_DECIMAL_PATTERN"}], "methods": [{"identifier": "StringUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " StringUtils()", "full_signature": "private  StringUtils()", "class_method_signature": "StringUtils.StringUtils()", "testcase": false, "constructor": true}, {"identifier": "splitByCharacterTypeCamelCase", "parameters": "(final String str)", "modifiers": "public static", "return": "String[]", "signature": "String[] splitByCharacterTypeCamelCase(final String str)", "full_signature": "public static String[] splitByCharacterTypeCamelCase(final String str)", "class_method_signature": "StringUtils.splitByCharacterTypeCamelCase(final String str)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(final Object[] array, final char separator)", "modifiers": "public static", "return": "String", "signature": "String join(final Object[] array, final char separator)", "full_signature": "public static String join(final Object[] array, final char separator)", "class_method_signature": "StringUtils.join(final Object[] array, final char separator)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(\n      final Object[] array, final char separator, final int startIndex, final int endIndex)", "modifiers": "private static", "return": "String", "signature": "String join(\n      final Object[] array, final char separator, final int startIndex, final int endIndex)", "full_signature": "private static String join(\n      final Object[] array, final char separator, final int startIndex, final int endIndex)", "class_method_signature": "StringUtils.join(\n      final Object[] array, final char separator, final int startIndex, final int endIndex)", "testcase": false, "constructor": false}, {"identifier": "repeat", "parameters": "(final String str, final int repeat)", "modifiers": "public static", "return": "String", "signature": "String repeat(final String str, final int repeat)", "full_signature": "public static String repeat(final String str, final int repeat)", "class_method_signature": "StringUtils.repeat(final String str, final int repeat)", "testcase": false, "constructor": false}, {"identifier": "repeat", "parameters": "(final char ch, final int repeat)", "modifiers": "private static", "return": "String", "signature": "String repeat(final char ch, final int repeat)", "full_signature": "private static String repeat(final char ch, final int repeat)", "class_method_signature": "StringUtils.repeat(final char ch, final int repeat)", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "(final CharSequence cs)", "modifiers": "public static", "return": "int", "signature": "int length(final CharSequence cs)", "full_signature": "public static int length(final CharSequence cs)", "class_method_signature": "StringUtils.length(final CharSequence cs)", "testcase": false, "constructor": false}, {"identifier": "capitalize", "parameters": "(final String str)", "modifiers": "public static", "return": "String", "signature": "String capitalize(final String str)", "full_signature": "public static String capitalize(final String str)", "class_method_signature": "StringUtils.capitalize(final String str)", "testcase": false, "constructor": false}, {"identifier": "isAlpha", "parameters": "(final String cs)", "modifiers": "public static", "return": "boolean", "signature": "boolean isAlpha(final String cs)", "full_signature": "public static boolean isAlpha(final String cs)", "class_method_signature": "StringUtils.isAlpha(final String cs)", "testcase": false, "constructor": false}, {"identifier": "isAlphanumeric", "parameters": "(final String cs)", "modifiers": "public static", "return": "boolean", "signature": "boolean isAlphanumeric(final String cs)", "full_signature": "public static boolean isAlphanumeric(final String cs)", "class_method_signature": "StringUtils.isAlphanumeric(final String cs)", "testcase": false, "constructor": false}, {"identifier": "isNumeric", "parameters": "(final String cs)", "modifiers": "public static", "return": "boolean", "signature": "boolean isNumeric(final String cs)", "full_signature": "public static boolean isNumeric(final String cs)", "class_method_signature": "StringUtils.isNumeric(final String cs)", "testcase": false, "constructor": false}, {"identifier": "isAllLowerCase", "parameters": "(final String cs)", "modifiers": "public static", "return": "boolean", "signature": "boolean isAllLowerCase(final String cs)", "full_signature": "public static boolean isAllLowerCase(final String cs)", "class_method_signature": "StringUtils.isAllLowerCase(final String cs)", "testcase": false, "constructor": false}, {"identifier": "isAllUpperCase", "parameters": "(final String cs)", "modifiers": "public static", "return": "boolean", "signature": "boolean isAllUpperCase(final String cs)", "full_signature": "public static boolean isAllUpperCase(final String cs)", "class_method_signature": "StringUtils.isAllUpperCase(final String cs)", "testcase": false, "constructor": false}, {"identifier": "removeZeroDecimal", "parameters": "(final String str)", "modifiers": "public static", "return": "String", "signature": "String removeZeroDecimal(final String str)", "full_signature": "public static String removeZeroDecimal(final String str)", "class_method_signature": "StringUtils.removeZeroDecimal(final String str)", "testcase": false, "constructor": false}, {"identifier": "abbreviate", "parameters": "(final String str, final String abbrevMarker, final int maxWidth)", "modifiers": "public static", "return": "String", "signature": "String abbreviate(final String str, final String abbrevMarker, final int maxWidth)", "full_signature": "public static String abbreviate(final String str, final String abbrevMarker, final int maxWidth)", "class_method_signature": "StringUtils.abbreviate(final String str, final String abbrevMarker, final int maxWidth)", "testcase": false, "constructor": false}, {"identifier": "abbreviate", "parameters": "(\n      final String str, final String abbrevMarker, int offset, final int maxWidth)", "modifiers": "private static", "return": "String", "signature": "String abbreviate(\n      final String str, final String abbrevMarker, int offset, final int maxWidth)", "full_signature": "private static String abbreviate(\n      final String str, final String abbrevMarker, int offset, final int maxWidth)", "class_method_signature": "StringUtils.abbreviate(\n      final String str, final String abbrevMarker, int offset, final int maxWidth)", "testcase": false, "constructor": false}], "file": "core/src/main/java/tech/tablesaw/util/StringUtils.java"}, "focal_method": {"identifier": "removeZeroDecimal", "parameters": "(final String str)", "modifiers": "public static", "return": "String", "body": "public static String removeZeroDecimal(final String str) {\n    if (Strings.isNullOrEmpty(str)) {\n      return str;\n    }\n    return ZERO_DECIMAL_PATTERN.matcher(str).replaceFirst(EMPTY);\n  }", "signature": "String removeZeroDecimal(final String str)", "full_signature": "public static String removeZeroDecimal(final String str)", "class_method_signature": "StringUtils.removeZeroDecimal(final String str)", "testcase": false, "constructor": false, "invocations": ["isNullOrEmpty", "replaceFirst", "matcher"]}, "repository": {"repo_id": 48880766, "url": "https://github.com/jtablesaw/tablesaw", "stars": 2021, "created": "1/1/2016 2:58:28 PM +00:00", "updates": "2020-01-24T23:26:07+00:00", "fork": "False", "license": "licensed"}}