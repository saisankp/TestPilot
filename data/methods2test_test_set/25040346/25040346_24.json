{"test_class": {"identifier": "ConfigureVideoDecoderCommandHandlerTest", "superclass": "extends TestBase", "interfaces": "", "fields": [], "file": "domain/src/test/java/org/m4m/domain/pipeline/ConfigureVideoDecoderCommandHandlerTest.java"}, "test_case": {"identifier": "setInputSizeToSurface", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setInputSizeToSurface() {\n        MultipleMediaSource multipleMediaSource = create.multipleMediaSource().withFrameSize(400, 300).construct();\n        VideoDecoder decoder = create.videoDecoder().construct();\n        ISurface surface = create.surface().construct();\n        decoder.setOutputSurface(surface);\n\n        new ConfigureVideoDecoderCommandHandler(multipleMediaSource, decoder).handle();\n\n        verify(surface).setInputSize(eq(400), eq(300));\n    }", "signature": "void setInputSizeToSurface()", "full_signature": "@Test public void setInputSizeToSurface()", "class_method_signature": "ConfigureVideoDecoderCommandHandlerTest.setInputSizeToSurface()", "testcase": true, "constructor": false, "invocations": ["construct", "withFrameSize", "multipleMediaSource", "construct", "videoDecoder", "construct", "surface", "setOutputSurface", "handle", "setInputSize", "verify", "eq", "eq"]}, "focal_class": {"identifier": "ConfigureVideoDecoderCommandHandler", "superclass": "", "interfaces": "implements ICommandHandler", "fields": [{"original_string": "protected final IVideoOutput output;", "modifier": "protected final", "type": "IVideoOutput", "declarator": "output", "var_name": "output"}, {"original_string": "private final Plugin input;", "modifier": "private final", "type": "Plugin", "declarator": "input", "var_name": "input"}], "methods": [{"identifier": "ConfigureVideoDecoderCommandHandler", "parameters": "(IVideoOutput output, Plugin decoder)", "modifiers": "public", "return": "", "signature": " ConfigureVideoDecoderCommandHandler(IVideoOutput output, Plugin decoder)", "full_signature": "public  ConfigureVideoDecoderCommandHandler(IVideoOutput output, Plugin decoder)", "class_method_signature": "ConfigureVideoDecoderCommandHandler.ConfigureVideoDecoderCommandHandler(IVideoOutput output, Plugin decoder)", "testcase": false, "constructor": true}, {"identifier": "handle", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void handle()", "full_signature": "@Override public void handle()", "class_method_signature": "ConfigureVideoDecoderCommandHandler.handle()", "testcase": false, "constructor": false}], "file": "domain/src/main/java/org/m4m/domain/pipeline/ConfigureVideoDecoderCommandHandler.java"}, "focal_method": {"identifier": "handle", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void handle() {\n        output.getOutputCommandQueue().queue(Command.HasData, input.getTrackId());\n        input.setInputResolution(output.getOutputResolution());\n    }", "signature": "void handle()", "full_signature": "@Override public void handle()", "class_method_signature": "ConfigureVideoDecoderCommandHandler.handle()", "testcase": false, "constructor": false, "invocations": ["queue", "getOutputCommandQueue", "getTrackId", "setInputResolution", "getOutputResolution"]}, "repository": {"repo_id": 25040346, "url": "https://github.com/INDExOS/media-for-mobile", "language": "Java", "is_fork": false, "fork_count": 167, "stargazer_count": 416, "size": 619, "license": "licensed"}}