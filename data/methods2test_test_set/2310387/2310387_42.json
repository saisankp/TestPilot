{"test_class": {"identifier": "XcodeBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private XcodeBuilder builder;", "modifier": "private", "type": "XcodeBuilder", "declarator": "builder", "var_name": "builder"}, {"original_string": "private Directory directoryDoesntFailValidation;", "modifier": "private", "type": "Directory", "declarator": "directoryDoesntFailValidation", "var_name": "directoryDoesntFailValidation"}, {"original_string": "private Map<String, String> buildProperties;", "modifier": "private", "type": "Map<String, String>", "declarator": "buildProperties", "var_name": "buildProperties"}, {"original_string": "private static final String COMPILE_LINE = \"    /Developer/usr/bin/ibtool --errors --warnings --notices\"\n        + \" --output-format human-readable-text --compile \"\n        + \"/Users/jfredrick/projects/App/build/Release-iphoneos/App.app/RegionView.nib \"\n        + \"/Users/jfredrick/projects/App/src/com/jeffreyfredrick/app/view/RegionView.xib\";", "modifier": "private static final", "type": "String", "declarator": "COMPILE_LINE = \"    /Developer/usr/bin/ibtool --errors --warnings --notices\"\n        + \" --output-format human-readable-text --compile \"\n        + \"/Users/jfredrick/projects/App/build/Release-iphoneos/App.app/RegionView.nib \"\n        + \"/Users/jfredrick/projects/App/src/com/jeffreyfredrick/app/view/RegionView.xib\"", "var_name": "COMPILE_LINE"}, {"original_string": "private static final String WARNING_LINE = \"/Users/jfredrick/projects/\"\n        + \"App/src/com/jeffreyfredrick/app/view/RegionView.xib:28: \"\n        + \"warning: Setting a UIScrollView's minimum or maximum zoom to anything other than 1.0 will be ignored \"\n        + \"on iPhone OS versions prior to 2.1.\";", "modifier": "private static final", "type": "String", "declarator": "WARNING_LINE = \"/Users/jfredrick/projects/\"\n        + \"App/src/com/jeffreyfredrick/app/view/RegionView.xib:28: \"\n        + \"warning: Setting a UIScrollView's minimum or maximum zoom to anything other than 1.0 will be ignored \"\n        + \"on iPhone OS versions prior to 2.1.\"", "var_name": "WARNING_LINE"}, {"original_string": "private static final String ERROR_LINE = \"/Users/jfredrick/projects/\"\n        + \"App/src/com/jeffreyFredrick/EventDispatcher.h:11:16: \"\n        + \"error: foo.h: No such file or directory\";", "modifier": "private static final", "type": "String", "declarator": "ERROR_LINE = \"/Users/jfredrick/projects/\"\n        + \"App/src/com/jeffreyFredrick/EventDispatcher.h:11:16: \"\n        + \"error: foo.h: No such file or directory\"", "var_name": "ERROR_LINE"}, {"original_string": "private static final String BUILD_FAILED_LINE = \"** BUILD FAILED **\";", "modifier": "private static final", "type": "String", "declarator": "BUILD_FAILED_LINE = \"** BUILD FAILED **\"", "var_name": "BUILD_FAILED_LINE"}, {"original_string": "private static final String COMMANDS_FAILED_LINE = \"The following build commands failed:\";", "modifier": "private static final", "type": "String", "declarator": "COMMANDS_FAILED_LINE = \"The following build commands failed:\"", "var_name": "COMMANDS_FAILED_LINE"}], "file": "medium/src/test/java/net/sourceforge/cruisecontrol/builders/XcodeBuilderTest.java"}, "test_case": {"identifier": "executableShouldBeXcodebuild", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void executableShouldBeXcodebuild() throws CruiseControlException {\n        Commandline cmdLine = builder.buildCommandline();\n        assertEquals(\"xcodebuild\", cmdLine.getExecutable());\n    }", "signature": "void executableShouldBeXcodebuild()", "full_signature": "@Test public void executableShouldBeXcodebuild()", "class_method_signature": "XcodeBuilderTest.executableShouldBeXcodebuild()", "testcase": true, "constructor": false, "invocations": ["buildCommandline", "assertEquals", "getExecutable"]}, "focal_class": {"identifier": "XcodeBuilder", "superclass": "extends Builder", "interfaces": "implements Script", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(XcodeBuilder.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(XcodeBuilder.class)", "var_name": "LOG"}, {"original_string": "private static final String DEFAULT_OUTFILE_NAME = \"xcodebuild.cc.output\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_OUTFILE_NAME = \"xcodebuild.cc.output\"", "var_name": "DEFAULT_OUTFILE_NAME"}, {"original_string": "Directory directory = new Directory();", "modifier": "", "type": "Directory", "declarator": "directory = new Directory()", "var_name": "directory"}, {"original_string": "private int exitCode = -1;", "modifier": "private", "type": "int", "declarator": "exitCode = -1", "var_name": "exitCode"}, {"original_string": "private boolean hitBuildFailedMessage;", "modifier": "private", "type": "boolean", "declarator": "hitBuildFailedMessage", "var_name": "hitBuildFailedMessage"}, {"original_string": "private long timeout = ScriptRunner.NO_TIMEOUT;", "modifier": "private", "type": "long", "declarator": "timeout = ScriptRunner.NO_TIMEOUT", "var_name": "timeout"}, {"original_string": "private boolean buildTimedOut;", "modifier": "private", "type": "boolean", "declarator": "buildTimedOut", "var_name": "buildTimedOut"}, {"original_string": "private final Arguments arguments = new Arguments();", "modifier": "private final", "type": "Arguments", "declarator": "arguments = new Arguments()", "var_name": "arguments"}, {"original_string": "private Map<String, String> buildProperties;", "modifier": "private", "type": "Map<String, String>", "declarator": "buildProperties", "var_name": "buildProperties"}], "methods": [{"identifier": "build", "parameters": "(Map<String, String> properties, Progress progressIn)", "modifiers": "@Override public", "return": "Element", "signature": "Element build(Map<String, String> properties, Progress progressIn)", "full_signature": "@Override public Element build(Map<String, String> properties, Progress progressIn)", "class_method_signature": "XcodeBuilder.build(Map<String, String> properties, Progress progressIn)", "testcase": false, "constructor": false}, {"identifier": "setProperties", "parameters": "(Map<String, String> properties)", "modifiers": "", "return": "void", "signature": "void setProperties(Map<String, String> properties)", "full_signature": " void setProperties(Map<String, String> properties)", "class_method_signature": "XcodeBuilder.setProperties(Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "runScript", "parameters": "(OutputFile file)", "modifiers": "private", "return": "void", "signature": "void runScript(OutputFile file)", "full_signature": "private void runScript(OutputFile file)", "class_method_signature": "XcodeBuilder.runScript(OutputFile file)", "testcase": false, "constructor": false}, {"identifier": "createScriptRunner", "parameters": "()", "modifiers": "", "return": "ScriptRunner", "signature": "ScriptRunner createScriptRunner()", "full_signature": " ScriptRunner createScriptRunner()", "class_method_signature": "XcodeBuilder.createScriptRunner()", "testcase": false, "constructor": false}, {"identifier": "createOutputFile", "parameters": "(Directory d, String filename)", "modifiers": "", "return": "OutputFile", "signature": "OutputFile createOutputFile(Directory d, String filename)", "full_signature": " OutputFile createOutputFile(Directory d, String filename)", "class_method_signature": "XcodeBuilder.createOutputFile(Directory d, String filename)", "testcase": false, "constructor": false}, {"identifier": "elementFromFile", "parameters": "(OutputFile file)", "modifiers": "", "return": "Element", "signature": "Element elementFromFile(OutputFile file)", "full_signature": " Element elementFromFile(OutputFile file)", "class_method_signature": "XcodeBuilder.elementFromFile(OutputFile file)", "testcase": false, "constructor": false}, {"identifier": "buildWithTarget", "parameters": "(Map<String, String> properties, String target, Progress progress)", "modifiers": "@Override public", "return": "Element", "signature": "Element buildWithTarget(Map<String, String> properties, String target, Progress progress)", "full_signature": "@Override public Element buildWithTarget(Map<String, String> properties, String target, Progress progress)", "class_method_signature": "XcodeBuilder.buildWithTarget(Map<String, String> properties, String target, Progress progress)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void validate()", "full_signature": "@Override public void validate()", "class_method_signature": "XcodeBuilder.validate()", "testcase": false, "constructor": false}, {"identifier": "buildCommandline", "parameters": "()", "modifiers": "public", "return": "Commandline", "signature": "Commandline buildCommandline()", "full_signature": "public Commandline buildCommandline()", "class_method_signature": "XcodeBuilder.buildCommandline()", "testcase": false, "constructor": false}, {"identifier": "getExitCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getExitCode()", "full_signature": "public int getExitCode()", "class_method_signature": "XcodeBuilder.getExitCode()", "testcase": false, "constructor": false}, {"identifier": "setExitCode", "parameters": "(int result)", "modifiers": "public", "return": "void", "signature": "void setExitCode(int result)", "full_signature": "public void setExitCode(int result)", "class_method_signature": "XcodeBuilder.setExitCode(int result)", "testcase": false, "constructor": false}, {"identifier": "setDirectory", "parameters": "(String path)", "modifiers": "public", "return": "void", "signature": "void setDirectory(String path)", "full_signature": "public void setDirectory(String path)", "class_method_signature": "XcodeBuilder.setDirectory(String path)", "testcase": false, "constructor": false}, {"identifier": "getElementFromLine", "parameters": "(String line)", "modifiers": "public", "return": "Element", "signature": "Element getElementFromLine(String line)", "full_signature": "public Element getElementFromLine(String line)", "class_method_signature": "XcodeBuilder.getElementFromLine(String line)", "testcase": false, "constructor": false}, {"identifier": "messageAtLevelIfContains", "parameters": "(String line, String messageLevel, String semaphore)", "modifiers": "private", "return": "Element", "signature": "Element messageAtLevelIfContains(String line, String messageLevel, String semaphore)", "full_signature": "private Element messageAtLevelIfContains(String line, String messageLevel, String semaphore)", "class_method_signature": "XcodeBuilder.messageAtLevelIfContains(String line, String messageLevel, String semaphore)", "testcase": false, "constructor": false}, {"identifier": "messageAtLevel", "parameters": "(String line, String messageLevel)", "modifiers": "private", "return": "Element", "signature": "Element messageAtLevel(String line, String messageLevel)", "full_signature": "private Element messageAtLevel(String line, String messageLevel)", "class_method_signature": "XcodeBuilder.messageAtLevel(String line, String messageLevel)", "testcase": false, "constructor": false}, {"identifier": "setTimeout", "parameters": "(long timeout)", "modifiers": "public", "return": "void", "signature": "void setTimeout(long timeout)", "full_signature": "public void setTimeout(long timeout)", "class_method_signature": "XcodeBuilder.setTimeout(long timeout)", "testcase": false, "constructor": false}, {"identifier": "createArg", "parameters": "()", "modifiers": "@Description(\"Pass specified argument to xcodebuild. The element has the required attribute: value.\") public", "return": "Arg", "signature": "Arg createArg()", "full_signature": "@Description(\"Pass specified argument to xcodebuild. The element has the required attribute: value.\") public Arg createArg()", "class_method_signature": "XcodeBuilder.createArg()", "testcase": false, "constructor": false}], "file": "medium/src/main/java/net/sourceforge/cruisecontrol/builders/XcodeBuilder.java"}, "focal_method": {"identifier": "buildCommandline", "parameters": "()", "modifiers": "public", "return": "Commandline", "body": "public Commandline buildCommandline() throws CruiseControlException {\n        Commandline cmdLine = new Commandline();\n        cmdLine.setWorkingDir(directory);\n        cmdLine.setExecutable(\"xcodebuild\");\n        arguments.addArguments(cmdLine, buildProperties);\n        return cmdLine;\n    }", "signature": "Commandline buildCommandline()", "full_signature": "public Commandline buildCommandline()", "class_method_signature": "XcodeBuilder.buildCommandline()", "testcase": false, "constructor": false, "invocations": ["setWorkingDir", "setExecutable", "addArguments"]}, "repository": {"repo_id": 2310387, "url": "https://github.com/builddoctor/JavaBuildComparison", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 14939, "license": "licensed"}}