{"test_class": {"identifier": "ShiroJwtVerifyingFilterTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/server/src/test/java/io/cassandrareaper/resources/auth/ShiroJwtVerifyingFilterTest.java"}, "test_case": {"identifier": "testNewRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testNewRequest() throws Exception {\n    ShiroJwtVerifyingFilter filter = new ShiroJwtVerifyingFilter();\n\n    Assertions.assertThat(\n        filter.isAccessAllowed(\n            Mockito.mock(HttpServletRequest.class),\n            Mockito.mock(ServletResponse.class),\n            Mockito.mock(Object.class)))\n        .isFalse();\n  }", "signature": "void testNewRequest()", "full_signature": "@Test public void testNewRequest()", "class_method_signature": "ShiroJwtVerifyingFilterTest.testNewRequest()", "testcase": true, "constructor": false, "invocations": ["isFalse", "assertThat", "isAccessAllowed", "mock", "mock", "mock"]}, "focal_class": {"identifier": "ShiroJwtVerifyingFilter", "superclass": "extends AccessControlFilter", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ShiroJwtVerifyingFilter.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ShiroJwtVerifyingFilter.class)", "var_name": "LOG"}], "methods": [{"identifier": "ShiroJwtVerifyingFilter", "parameters": "()", "modifiers": "public", "return": "", "signature": " ShiroJwtVerifyingFilter()", "full_signature": "public  ShiroJwtVerifyingFilter()", "class_method_signature": "ShiroJwtVerifyingFilter.ShiroJwtVerifyingFilter()", "testcase": false, "constructor": true}, {"identifier": "isAccessAllowed", "parameters": "(ServletRequest req, ServletResponse res, Object mappedValue)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean isAccessAllowed(ServletRequest req, ServletResponse res, Object mappedValue)", "full_signature": "@Override protected boolean isAccessAllowed(ServletRequest req, ServletResponse res, Object mappedValue)", "class_method_signature": "ShiroJwtVerifyingFilter.isAccessAllowed(ServletRequest req, ServletResponse res, Object mappedValue)", "testcase": false, "constructor": false}, {"identifier": "getJwtSubject", "parameters": "(Subject nonJwt, ServletRequest req, ServletResponse res)", "modifiers": "static", "return": "Subject", "signature": "Subject getJwtSubject(Subject nonJwt, ServletRequest req, ServletResponse res)", "full_signature": "static Subject getJwtSubject(Subject nonJwt, ServletRequest req, ServletResponse res)", "class_method_signature": "ShiroJwtVerifyingFilter.getJwtSubject(Subject nonJwt, ServletRequest req, ServletResponse res)", "testcase": false, "constructor": false}, {"identifier": "onAccessDenied", "parameters": "(ServletRequest req, ServletResponse res)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean onAccessDenied(ServletRequest req, ServletResponse res)", "full_signature": "@Override protected boolean onAccessDenied(ServletRequest req, ServletResponse res)", "class_method_signature": "ShiroJwtVerifyingFilter.onAccessDenied(ServletRequest req, ServletResponse res)", "testcase": false, "constructor": false}, {"identifier": "getJwtUser", "parameters": "(ServletRequest req)", "modifiers": "private static", "return": "Optional<String>", "signature": "Optional<String> getJwtUser(ServletRequest req)", "full_signature": "private static Optional<String> getJwtUser(ServletRequest req)", "class_method_signature": "ShiroJwtVerifyingFilter.getJwtUser(ServletRequest req)", "testcase": false, "constructor": false}], "file": "src/server/src/main/java/io/cassandrareaper/resources/auth/ShiroJwtVerifyingFilter.java"}, "focal_method": {"identifier": "isAccessAllowed", "parameters": "(ServletRequest req, ServletResponse res, Object mappedValue)", "modifiers": "@Override protected", "return": "boolean", "body": "@Override\n  protected boolean isAccessAllowed(ServletRequest req, ServletResponse res, Object mappedValue) throws Exception {\n    Subject nonJwt = getSubject(req, res);\n\n    return null != nonJwt.getPrincipal() && (nonJwt.isRemembered() || nonJwt.isAuthenticated())\n      ? true\n      : getJwtUser(req).isPresent();\n  }", "signature": "boolean isAccessAllowed(ServletRequest req, ServletResponse res, Object mappedValue)", "full_signature": "@Override protected boolean isAccessAllowed(ServletRequest req, ServletResponse res, Object mappedValue)", "class_method_signature": "ShiroJwtVerifyingFilter.isAccessAllowed(ServletRequest req, ServletResponse res, Object mappedValue)", "testcase": false, "constructor": false, "invocations": ["getSubject", "getPrincipal", "isRemembered", "isAuthenticated", "isPresent", "getJwtUser"]}, "repository": {"repo_id": 70856121, "url": "https://github.com/thelastpickle/cassandra-reaper", "language": "Java", "is_fork": false, "fork_count": 156, "stargazer_count": 353, "size": 43662, "license": "licensed"}}