{"test_class": {"identifier": "NeighborhoodSchedulerRoundRobinTest", "superclass": "", "interfaces": "", "fields": [], "file": "opt4j-optimizers/src/test/java/org/opt4j/optimizers/ea/aeseh/NeighborhoodSchedulerRoundRobinTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test() {\n\t\tMockNeighborhood first = new MockNeighborhood(\"first\");\n\t\tMockNeighborhood second = new MockNeighborhood(\"second\");\n\t\tMockNeighborhood third = new MockNeighborhood(\"third\");\n\t\tList<Set<Individual>> neighborhoods = new ArrayList<>();\n\t\tneighborhoods.add(first);\n\t\tneighborhoods.add(second);\n\t\tneighborhoods.add(third);\n\t\tNeighborhoodSchedulerRoundRobin scheduler = new NeighborhoodSchedulerRoundRobin(neighborhoods);\n\t\tassertEquals(scheduler.next().toString(), \"first\");\n\t\tassertEquals(scheduler.next().toString(), \"second\");\n\t\tassertEquals(scheduler.next().toString(), \"third\");\n\t\tassertEquals(scheduler.next().toString(), \"first\");\n\t}", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "NeighborhoodSchedulerRoundRobinTest.test()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "assertEquals", "toString", "next", "assertEquals", "toString", "next", "assertEquals", "toString", "next", "assertEquals", "toString", "next"]}, "focal_class": {"identifier": "NeighborhoodSchedulerRoundRobin", "superclass": "", "interfaces": "implements NeighborhoodScheduler", "fields": [{"original_string": "protected final List<Set<Individual>> neighborhoods;", "modifier": "protected final", "type": "List<Set<Individual>>", "declarator": "neighborhoods", "var_name": "neighborhoods"}, {"original_string": "protected int nextIdx;", "modifier": "protected", "type": "int", "declarator": "nextIdx", "var_name": "nextIdx"}], "methods": [{"identifier": "NeighborhoodSchedulerRoundRobin", "parameters": "(List<Set<Individual>> neighborhoods)", "modifiers": "public", "return": "", "signature": " NeighborhoodSchedulerRoundRobin(List<Set<Individual>> neighborhoods)", "full_signature": "public  NeighborhoodSchedulerRoundRobin(List<Set<Individual>> neighborhoods)", "class_method_signature": "NeighborhoodSchedulerRoundRobin.NeighborhoodSchedulerRoundRobin(List<Set<Individual>> neighborhoods)", "testcase": false, "constructor": true}, {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "Set<Individual>", "signature": "Set<Individual> next()", "full_signature": "@Override public Set<Individual> next()", "class_method_signature": "NeighborhoodSchedulerRoundRobin.next()", "testcase": false, "constructor": false}], "file": "opt4j-optimizers/src/main/java/org/opt4j/optimizers/ea/aeseh/NeighborhoodSchedulerRoundRobin.java"}, "focal_method": {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "Set<Individual>", "body": "@Override\n\tpublic Set<Individual> next() {\n\t\tSet<Individual> neighborhood = neighborhoods.get(nextIdx);\n\t\tnextIdx = (nextIdx + 1) % neighborhoods.size();\n\t\treturn neighborhood;\n\t}", "signature": "Set<Individual> next()", "full_signature": "@Override public Set<Individual> next()", "class_method_signature": "NeighborhoodSchedulerRoundRobin.next()", "testcase": false, "constructor": false, "invocations": ["get", "size"]}, "repository": {"repo_id": 119080111, "url": "https://github.com/felixreimann/opt4j", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 11, "size": 8771, "license": "licensed"}}