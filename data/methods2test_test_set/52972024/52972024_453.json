{"test_class": {"identifier": "OperatorsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PostgresQueryWriterResolver resolver;", "modifier": "private", "type": "PostgresQueryWriterResolver", "declarator": "resolver", "var_name": "resolver"}], "file": "CoreFeatures/Database-postgresql/PostgresSchema/src/test/java/info/smart_tools/smartactors/database_postgresql/postgres_schema/search/OperatorsTest.java"}, "test_case": {"identifier": "writeFieldInArrayCheckConditionTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void writeFieldInArrayCheckConditionTest() throws Exception {\n        final String operatorName = \"$in\";\n\n        FieldPath fieldPath = PostgresFieldPath.fromString(operatorName.replace(\"$\", \"\"));\n        List<Integer> queryParam = new ArrayList<>(Arrays.asList(1, 10, 100));\n\n        StringWriter body = new StringWriter();\n        QueryStatement queryStatement = mock(QueryStatement.class);\n        when(queryStatement.getBodyWriter()).thenReturn(body);\n\n        resolver\n                .resolve(operatorName)\n                .write(queryStatement, resolver, fieldPath, queryParam);\n        assertEquals(queryStatement.getBodyWriter().toString().trim(),\n                \"((document#>'{in}')in(to_json(?)::jsonb,to_json(?)::jsonb,to_json(?)::jsonb))\");\n        verify(queryStatement).pushParameterSetter(any());\n    }", "signature": "void writeFieldInArrayCheckConditionTest()", "full_signature": "@Test public void writeFieldInArrayCheckConditionTest()", "class_method_signature": "OperatorsTest.writeFieldInArrayCheckConditionTest()", "testcase": true, "constructor": false, "invocations": ["fromString", "replace", "asList", "mock", "thenReturn", "when", "getBodyWriter", "write", "resolve", "assertEquals", "trim", "toString", "getBodyWriter", "pushParameterSetter", "verify", "any"]}, "focal_class": {"identifier": "Operators", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Operators", "parameters": "()", "modifiers": "private", "return": "", "signature": " Operators()", "full_signature": "private  Operators()", "class_method_signature": "Operators.Operators()", "testcase": false, "constructor": true}, {"identifier": "addAll", "parameters": "(final PostgresQueryWriterResolver resolver)", "modifiers": "public static", "return": "void", "signature": "void addAll(final PostgresQueryWriterResolver resolver)", "full_signature": "public static void addAll(final PostgresQueryWriterResolver resolver)", "class_method_signature": "Operators.addAll(final PostgresQueryWriterResolver resolver)", "testcase": false, "constructor": false}, {"identifier": "formattedCheckWriter", "parameters": "(final String format)", "modifiers": "private static", "return": "QueryWriter", "signature": "QueryWriter formattedCheckWriter(final String format)", "full_signature": "private static QueryWriter formattedCheckWriter(final String format)", "class_method_signature": "Operators.formattedCheckWriter(final String format)", "testcase": false, "constructor": false}, {"identifier": "writeFieldCheckCondition", "parameters": "(\n            final String format,\n            final QueryStatement query,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    )", "modifiers": "private static", "return": "void", "signature": "void writeFieldCheckCondition(\n            final String format,\n            final QueryStatement query,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    )", "full_signature": "private static void writeFieldCheckCondition(\n            final String format,\n            final QueryStatement query,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    )", "class_method_signature": "Operators.writeFieldCheckCondition(\n            final String format,\n            final QueryStatement query,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    )", "testcase": false, "constructor": false}, {"identifier": "writeFieldExistsCheckCondition", "parameters": "(\n            final QueryStatement query,\n            final QueryWriterResolver resolver,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    )", "modifiers": "private static", "return": "void", "signature": "void writeFieldExistsCheckCondition(\n            final QueryStatement query,\n            final QueryWriterResolver resolver,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    )", "full_signature": "private static void writeFieldExistsCheckCondition(\n            final QueryStatement query,\n            final QueryWriterResolver resolver,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    )", "class_method_signature": "Operators.writeFieldExistsCheckCondition(\n            final QueryStatement query,\n            final QueryWriterResolver resolver,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    )", "testcase": false, "constructor": false}, {"identifier": "writeFieldInArrayCheckCondition", "parameters": "(\n            final QueryStatement query,\n            final QueryWriterResolver resolver,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    )", "modifiers": "private static", "return": "void", "signature": "void writeFieldInArrayCheckCondition(\n            final QueryStatement query,\n            final QueryWriterResolver resolver,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    )", "full_signature": "private static void writeFieldInArrayCheckCondition(\n            final QueryStatement query,\n            final QueryWriterResolver resolver,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    )", "class_method_signature": "Operators.writeFieldInArrayCheckCondition(\n            final QueryStatement query,\n            final QueryWriterResolver resolver,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    )", "testcase": false, "constructor": false}], "file": "CoreFeatures/Database-postgresql/PostgresSchema/src/main/java/info/smart_tools/smartactors/database_postgresql/postgres_schema/search/Operators.java"}, "focal_method": {"identifier": "writeFieldInArrayCheckCondition", "parameters": "(\n            final QueryStatement query,\n            final QueryWriterResolver resolver,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    )", "modifiers": "private static", "return": "void", "body": "private static void writeFieldInArrayCheckCondition(\n            final QueryStatement query,\n            final QueryWriterResolver resolver,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    ) throws QueryBuildException {\n\n        if (contextFieldPath == null) {\n            throw new QueryBuildException(\"Operator \\\"$in\\\" not allowed outside of field context\");\n        }\n\n        if (!(queryParameter instanceof List)) {\n            throw new QueryBuildException(\"\\\"$in\\\" operator must be applied only to JSON array\");\n        }\n\n        List paramAsList = (List) queryParameter;\n        Writer writer = query.getBodyWriter();\n\n        try {\n            if (paramAsList.size() == 0) {\n                writer.write(\"(FALSE)\");\n                return;\n            }\n\n            writer.write(String.format(\"((%s)in(\", contextFieldPath.toSQL()));\n\n            for (int i = paramAsList.size(); i > 0; --i) {\n                writer.write(String.format(\"to_json(?)::jsonb%s\", (i == 1) ? \"\" : \",\"));\n            }\n\n            writer.write(\"))\");\n\n            query.pushParameterSetter((statement, index) -> {\n                for (Object obj : paramAsList) {\n                    statement.setObject(index++, obj);\n                }\n                return index;\n            });\n\n        } catch (IOException e) {\n            throw new QueryBuildException(\"Query search conditions write failed because of exception\", e);\n        }\n    }", "signature": "void writeFieldInArrayCheckCondition(\n            final QueryStatement query,\n            final QueryWriterResolver resolver,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    )", "full_signature": "private static void writeFieldInArrayCheckCondition(\n            final QueryStatement query,\n            final QueryWriterResolver resolver,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    )", "class_method_signature": "Operators.writeFieldInArrayCheckCondition(\n            final QueryStatement query,\n            final QueryWriterResolver resolver,\n            final FieldPath contextFieldPath,\n            final Object queryParameter\n    )", "testcase": false, "constructor": false, "invocations": ["getBodyWriter", "size", "write", "write", "format", "toSQL", "size", "write", "format", "write", "pushParameterSetter", "setObject"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}