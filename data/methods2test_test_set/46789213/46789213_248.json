{"test_class": {"identifier": "TestInputSumExample", "superclass": "", "interfaces": "", "fields": [], "file": "demos/sum/src/test/java/dk/alexandra/fresco/demo/TestInputSumExample.java"}, "test_case": {"identifier": "testInputCmdLine", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testInputCmdLine() throws Exception {\n    Runnable p1 = () -> {\n      try {\n        InputSumExample.main(\n            new String[]{\"-i\", \"1\", \"-p\", \"1:localhost:8081\", \"-p\", \"2:localhost:8082\", \"-s\",\n                \"dummyArithmetic\"});\n      } catch (IOException e) {\n        System.exit(-1);\n      }\n    };\n\n    Runnable p2 = () -> {\n      try {\n        InputSumExample.main(\n            new String[]{\"-i\", \"2\", \"-p\", \"1:localhost:8081\", \"-p\", \"2:localhost:8082\", \"-s\",\n                \"dummyArithmetic\"});\n      } catch (IOException e) {\n        System.exit(-1);\n      }\n    };\n    Thread t1 = new Thread(p1);\n    Thread t2 = new Thread(p2);\n    t1.start();\n    t2.start();\n    t1.join();\n    t2.join();\n  }", "signature": "void testInputCmdLine()", "full_signature": "@Test public void testInputCmdLine()", "class_method_signature": "TestInputSumExample.testInputCmdLine()", "testcase": true, "constructor": false, "invocations": ["main", "exit", "main", "exit", "start", "start", "join", "join"]}, "focal_class": {"identifier": "InputSumExample", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "InputSumExample", "parameters": "()", "modifiers": "public", "return": "", "signature": " InputSumExample()", "full_signature": "public  InputSumExample()", "class_method_signature": "InputSumExample.InputSumExample()", "testcase": false, "constructor": true}, {"identifier": "runApplication", "parameters": "(\n      SecureComputationEngine<ResourcePoolT, ProtocolBuilderNumeric> sce,\n      ResourcePoolT resourcePool, Network network)", "modifiers": "public", "return": "void", "signature": "void runApplication(\n      SecureComputationEngine<ResourcePoolT, ProtocolBuilderNumeric> sce,\n      ResourcePoolT resourcePool, Network network)", "full_signature": "public void runApplication(\n      SecureComputationEngine<ResourcePoolT, ProtocolBuilderNumeric> sce,\n      ResourcePoolT resourcePool, Network network)", "class_method_signature": "InputSumExample.runApplication(\n      SecureComputationEngine<ResourcePoolT, ProtocolBuilderNumeric> sce,\n      ResourcePoolT resourcePool, Network network)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "InputSumExample.main(String[] args)", "testcase": false, "constructor": false}], "file": "demos/sum/src/main/java/dk/alexandra/fresco/demo/InputSumExample.java"}, "focal_method": {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "body": "public static <ResourcePoolT extends ResourcePool> void main(String[] args) throws IOException {\n    CmdLineUtil<ResourcePoolT, ProtocolBuilderNumeric> util = new CmdLineUtil<>();\n\n    util.parse(args);\n\n    ProtocolSuite<ResourcePoolT, ProtocolBuilderNumeric> psConf = util.getProtocolSuite();\n\n    SecureComputationEngine<ResourcePoolT, ProtocolBuilderNumeric> sce =\n        new SecureComputationEngineImpl<>(psConf, util.getEvaluator());\n\n    ResourcePoolT resourcePool = util.getResourcePool();\n    new InputSumExample().runApplication(sce, resourcePool, util.getNetwork());\n    \n    util.closeNetwork();\n    sce.shutdownSCE();\n  }", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "InputSumExample.main(String[] args)", "testcase": false, "constructor": false, "invocations": ["parse", "getProtocolSuite", "getEvaluator", "getResourcePool", "runApplication", "getNetwork", "closeNetwork", "shutdownSCE"]}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}