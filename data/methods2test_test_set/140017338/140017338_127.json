{"test_class": {"identifier": "SW360ProjectClientAdapterAsyncImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PROJECT_VERSION = \"1.0-projectVersion\";", "modifier": "private static final", "type": "String", "declarator": "PROJECT_VERSION = \"1.0-projectVersion\"", "var_name": "PROJECT_VERSION"}, {"original_string": "private static final String PROJECT_NAME = \"projectName\";", "modifier": "private static final", "type": "String", "declarator": "PROJECT_NAME = \"projectName\"", "var_name": "PROJECT_NAME"}, {"original_string": "private final String PROJECT_LAST_INDEX = \"12345\";", "modifier": "private final", "type": "String", "declarator": "PROJECT_LAST_INDEX = \"12345\"", "var_name": "PROJECT_LAST_INDEX"}, {"original_string": "private SW360ProjectClientAdapterAsync projectClientAdapter;", "modifier": "private", "type": "SW360ProjectClientAdapterAsync", "declarator": "projectClientAdapter", "var_name": "projectClientAdapter"}, {"original_string": "private SW360ProjectClient projectClient;", "modifier": "private", "type": "SW360ProjectClient", "declarator": "projectClient", "var_name": "projectClient"}, {"original_string": "private SW360Project projectWithLink;", "modifier": "private", "type": "SW360Project", "declarator": "projectWithLink", "var_name": "projectWithLink"}, {"original_string": "private LinkObjects linkObjects;", "modifier": "private", "type": "LinkObjects", "declarator": "linkObjects", "var_name": "linkObjects"}], "file": "modules/sw360/sw360-client/src/test/java/org/eclipse/sw360/antenna/sw360/client/adapter/SW360ProjectClientAdapterAsyncImplTest.java"}, "test_case": {"identifier": "testAddSW360ReleasesToSW360Project", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddSW360ReleasesToSW360Project() {\n        SW360ReleaseLinkObjects releaseLinkObjects = new SW360ReleaseLinkObjects();\n        releaseLinkObjects.setSelf(linkObjects.getSelf());\n        SW360Release release = new SW360Release();\n        release.setLinks(releaseLinkObjects);\n        when(projectClient.addReleasesToProject(eq(PROJECT_LAST_INDEX), any()))\n                .thenReturn(CompletableFuture.completedFuture(null));\n\n        Collection<SW360Release> releases = Collections.singletonList(release);\n\n        block(projectClientAdapter.addSW360ReleasesToSW360Project(PROJECT_LAST_INDEX, releases));\n\n        verify(projectClient, atLeastOnce()).addReleasesToProject(eq(PROJECT_LAST_INDEX), any());\n    }", "signature": "void testAddSW360ReleasesToSW360Project()", "full_signature": "@Test public void testAddSW360ReleasesToSW360Project()", "class_method_signature": "SW360ProjectClientAdapterAsyncImplTest.testAddSW360ReleasesToSW360Project()", "testcase": true, "constructor": false, "invocations": ["setSelf", "getSelf", "setLinks", "thenReturn", "when", "addReleasesToProject", "eq", "any", "completedFuture", "singletonList", "block", "addSW360ReleasesToSW360Project", "addReleasesToProject", "verify", "atLeastOnce", "eq", "any"]}, "focal_class": {"identifier": "SW360ProjectClientAdapterAsyncImpl", "superclass": "", "interfaces": "implements SW360ProjectClientAdapterAsync", "fields": [{"original_string": "private final SW360ProjectClient projectClient;", "modifier": "private final", "type": "SW360ProjectClient", "declarator": "projectClient", "var_name": "projectClient"}], "methods": [{"identifier": "SW360ProjectClientAdapterAsyncImpl", "parameters": "(SW360ProjectClient client)", "modifiers": "public", "return": "", "signature": " SW360ProjectClientAdapterAsyncImpl(SW360ProjectClient client)", "full_signature": "public  SW360ProjectClientAdapterAsyncImpl(SW360ProjectClient client)", "class_method_signature": "SW360ProjectClientAdapterAsyncImpl.SW360ProjectClientAdapterAsyncImpl(SW360ProjectClient client)", "testcase": false, "constructor": true}, {"identifier": "getProjectClient", "parameters": "()", "modifiers": "@Override public", "return": "SW360ProjectClient", "signature": "SW360ProjectClient getProjectClient()", "full_signature": "@Override public SW360ProjectClient getProjectClient()", "class_method_signature": "SW360ProjectClientAdapterAsyncImpl.getProjectClient()", "testcase": false, "constructor": false}, {"identifier": "getProjectByNameAndVersion", "parameters": "(String projectName, String projectVersion)", "modifiers": "@Override public", "return": "CompletableFuture<Optional<SW360Project>>", "signature": "CompletableFuture<Optional<SW360Project>> getProjectByNameAndVersion(String projectName, String projectVersion)", "full_signature": "@Override public CompletableFuture<Optional<SW360Project>> getProjectByNameAndVersion(String projectName, String projectVersion)", "class_method_signature": "SW360ProjectClientAdapterAsyncImpl.getProjectByNameAndVersion(String projectName, String projectVersion)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(ProjectSearchParams params)", "modifiers": "@Override public", "return": "CompletableFuture<List<SW360Project>>", "signature": "CompletableFuture<List<SW360Project>> search(ProjectSearchParams params)", "full_signature": "@Override public CompletableFuture<List<SW360Project>> search(ProjectSearchParams params)", "class_method_signature": "SW360ProjectClientAdapterAsyncImpl.search(ProjectSearchParams params)", "testcase": false, "constructor": false}, {"identifier": "createProject", "parameters": "(SW360Project project)", "modifiers": "@Override public", "return": "CompletableFuture<SW360Project>", "signature": "CompletableFuture<SW360Project> createProject(SW360Project project)", "full_signature": "@Override public CompletableFuture<SW360Project> createProject(SW360Project project)", "class_method_signature": "SW360ProjectClientAdapterAsyncImpl.createProject(SW360Project project)", "testcase": false, "constructor": false}, {"identifier": "updateProject", "parameters": "(SW360Project project)", "modifiers": "@Override public", "return": "CompletableFuture<SW360Project>", "signature": "CompletableFuture<SW360Project> updateProject(SW360Project project)", "full_signature": "@Override public CompletableFuture<SW360Project> updateProject(SW360Project project)", "class_method_signature": "SW360ProjectClientAdapterAsyncImpl.updateProject(SW360Project project)", "testcase": false, "constructor": false}, {"identifier": "addSW360ReleasesToSW360Project", "parameters": "(String id, Collection<SW360Release> releases)", "modifiers": "@Override public", "return": "CompletableFuture<Void>", "signature": "CompletableFuture<Void> addSW360ReleasesToSW360Project(String id, Collection<SW360Release> releases)", "full_signature": "@Override public CompletableFuture<Void> addSW360ReleasesToSW360Project(String id, Collection<SW360Release> releases)", "class_method_signature": "SW360ProjectClientAdapterAsyncImpl.addSW360ReleasesToSW360Project(String id, Collection<SW360Release> releases)", "testcase": false, "constructor": false}, {"identifier": "getLinkedReleases", "parameters": "(String projectId, boolean transitive)", "modifiers": "@Override public", "return": "CompletableFuture<List<SW360SparseRelease>>", "signature": "CompletableFuture<List<SW360SparseRelease>> getLinkedReleases(String projectId, boolean transitive)", "full_signature": "@Override public CompletableFuture<List<SW360SparseRelease>> getLinkedReleases(String projectId, boolean transitive)", "class_method_signature": "SW360ProjectClientAdapterAsyncImpl.getLinkedReleases(String projectId, boolean transitive)", "testcase": false, "constructor": false}, {"identifier": "validateProjectAndProcess", "parameters": "(SW360Project project,\n                                                                             Function<SW360Project, CompletableFuture<SW360Project>> func)", "modifiers": "private static", "return": "CompletableFuture<SW360Project>", "signature": "CompletableFuture<SW360Project> validateProjectAndProcess(SW360Project project,\n                                                                             Function<SW360Project, CompletableFuture<SW360Project>> func)", "full_signature": "private static CompletableFuture<SW360Project> validateProjectAndProcess(SW360Project project,\n                                                                             Function<SW360Project, CompletableFuture<SW360Project>> func)", "class_method_signature": "SW360ProjectClientAdapterAsyncImpl.validateProjectAndProcess(SW360Project project,\n                                                                             Function<SW360Project, CompletableFuture<SW360Project>> func)", "testcase": false, "constructor": false}], "file": "modules/sw360/sw360-client/src/main/java/org/eclipse/sw360/antenna/sw360/client/adapter/SW360ProjectClientAdapterAsyncImpl.java"}, "focal_method": {"identifier": "addSW360ReleasesToSW360Project", "parameters": "(String id, Collection<SW360Release> releases)", "modifiers": "@Override public", "return": "CompletableFuture<Void>", "body": "@Override\n    public CompletableFuture<Void> addSW360ReleasesToSW360Project(String id, Collection<SW360Release> releases) {\n        List<String> releaseLinks = releases.stream()\n                .map(SW360Release::getLinks)\n                .filter(Objects::nonNull)\n                .map(LinkObjects::getSelf)\n                .filter(Objects::nonNull)\n                .map(Self::getHref)\n                .collect(Collectors.toList());\n        return getProjectClient().addReleasesToProject(id, releaseLinks);\n    }", "signature": "CompletableFuture<Void> addSW360ReleasesToSW360Project(String id, Collection<SW360Release> releases)", "full_signature": "@Override public CompletableFuture<Void> addSW360ReleasesToSW360Project(String id, Collection<SW360Release> releases)", "class_method_signature": "SW360ProjectClientAdapterAsyncImpl.addSW360ReleasesToSW360Project(String id, Collection<SW360Release> releases)", "testcase": false, "constructor": false, "invocations": ["collect", "map", "filter", "map", "filter", "map", "stream", "toList", "addReleasesToProject", "getProjectClient"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}