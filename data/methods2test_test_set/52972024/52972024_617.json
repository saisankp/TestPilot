{"test_class": {"identifier": "IocTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IContainer container = mock(IContainer.class);", "modifier": "private", "type": "IContainer", "declarator": "container = mock(IContainer.class)", "var_name": "container"}, {"original_string": "private IContainer oldContainer;", "modifier": "private", "type": "IContainer", "declarator": "oldContainer", "var_name": "oldContainer"}], "file": "CoreFeatures/IOC/IOC/src/test/java/info/smart_tools/smartactors/ioc/ioc/IocTest.java"}, "test_case": {"identifier": "checkResolution", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkResolution()\n            throws Exception {\n        Object value = new Object();\n        IKey key = mock(IKey.class);\n        Object param = new Object();\n        when(container.resolve(key, param)).thenReturn(value);\n        Object result = IOC.resolve(key, param);\n        assertSame(result, value);\n        verify(container, times(1)).resolve(key, param);\n    }", "signature": "void checkResolution()", "full_signature": "@Test public void checkResolution()", "class_method_signature": "IocTest.checkResolution()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "resolve", "resolve", "assertSame", "resolve", "verify", "times"]}, "focal_class": {"identifier": "IOC", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static IContainer container;", "modifier": "private static", "type": "IContainer", "declarator": "container", "var_name": "container"}], "methods": [{"identifier": "IOC", "parameters": "()", "modifiers": "private", "return": "", "signature": " IOC()", "full_signature": "private  IOC()", "class_method_signature": "IOC.IOC()", "testcase": false, "constructor": true}, {"identifier": "getIocKey", "parameters": "()", "modifiers": "public static", "return": "IKey", "signature": "IKey getIocKey()", "full_signature": "public static IKey getIocKey()", "class_method_signature": "IOC.getIocKey()", "testcase": false, "constructor": false}, {"identifier": "getKeyForKeyStorage", "parameters": "()", "modifiers": "public static", "return": "IKey", "signature": "IKey getKeyForKeyStorage()", "full_signature": "public static IKey getKeyForKeyStorage()", "class_method_signature": "IOC.getKeyForKeyStorage()", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(final IKey key, final Object ... args)", "modifiers": "public static", "return": "T", "signature": "T resolve(final IKey key, final Object ... args)", "full_signature": "public static T resolve(final IKey key, final Object ... args)", "class_method_signature": "IOC.resolve(final IKey key, final Object ... args)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(final IKey key, final IResolveDependencyStrategy strategy)", "modifiers": "public static", "return": "void", "signature": "void register(final IKey key, final IResolveDependencyStrategy strategy)", "full_signature": "public static void register(final IKey key, final IResolveDependencyStrategy strategy)", "class_method_signature": "IOC.register(final IKey key, final IResolveDependencyStrategy strategy)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(final IKey key)", "modifiers": "public static", "return": "void", "signature": "void remove(final IKey key)", "full_signature": "public static void remove(final IKey key)", "class_method_signature": "IOC.remove(final IKey key)", "testcase": false, "constructor": false}], "file": "CoreFeatures/IOC/IOC/src/main/java/info/smart_tools/smartactors/ioc/ioc/IOC.java"}, "focal_method": {"identifier": "resolve", "parameters": "(final IKey key, final Object ... args)", "modifiers": "public static", "return": "T", "body": "public static <T> T resolve(final IKey key, final Object ... args)\n            throws ResolutionException {\n        return (T) container.resolve(key, args);\n    }", "signature": "T resolve(final IKey key, final Object ... args)", "full_signature": "public static T resolve(final IKey key, final Object ... args)", "class_method_signature": "IOC.resolve(final IKey key, final Object ... args)", "testcase": false, "constructor": false, "invocations": ["resolve"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}