{"test_class": {"identifier": "RegisterNamedStyleInfoCommandTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate CommandDispatcher dispatcher;", "modifier": "@Autowired\n\tprivate", "type": "CommandDispatcher", "declarator": "dispatcher", "var_name": "dispatcher"}, {"original_string": "@Autowired\n\tprivate StyleService styleService;", "modifier": "@Autowired\n\tprivate", "type": "StyleService", "declarator": "styleService", "var_name": "styleService"}], "file": "command/src/test/java/org/geomajas/command/render/RegisterNamedStyleInfoCommandTest.java"}, "test_case": {"identifier": "testRegisterStyle", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testRegisterStyle() throws Exception {\n\t\tNamedStyleInfo nsi = new NamedStyleInfo();\n\t\tnsi.setName(\"test\");\n\n\t\tRegisterNamedStyleInfoRequest req = new RegisterNamedStyleInfoRequest();\n\t\treq.setLayerId(\"countries\");\n\t\treq.setNamedStyleInfo(nsi);\n\n\t\tCommandResponse response = dispatcher.execute(\n\t\t\t\tRegisterNamedStyleInfoRequest.COMMAND, req, null, \"en\");\n\t\t\n\t\tif (response.isError()) {\n\t\t\tresponse.getErrors().get(0).printStackTrace();\n\t\t}\n\t\tAssert.assertFalse(response.isError());\n\t\tAssert.assertTrue(response instanceof RegisterNamedStyleInfoResponse);\n\t\tAssert.assertEquals(nsi, styleService.retrieveStyle(\"countries\", ((RegisterNamedStyleInfoResponse) response).getStyleName()));\n\n\t}", "signature": "void testRegisterStyle()", "full_signature": "@Test public void testRegisterStyle()", "class_method_signature": "RegisterNamedStyleInfoCommandTest.testRegisterStyle()", "testcase": true, "constructor": false, "invocations": ["setName", "setLayerId", "setNamedStyleInfo", "execute", "isError", "printStackTrace", "get", "getErrors", "assertFalse", "isError", "assertTrue", "assertEquals", "retrieveStyle", "getStyleName"]}, "focal_class": {"identifier": "RegisterNamedStyleInfoCommand", "superclass": "", "interfaces": "implements\n\t\tCommandHasRequest<RegisterNamedStyleInfoRequest, RegisterNamedStyleInfoResponse>", "fields": [{"original_string": "@Autowired\n\tprivate StyleService styleService;", "modifier": "@Autowired\n\tprivate", "type": "StyleService", "declarator": "styleService", "var_name": "styleService"}], "methods": [{"identifier": "getEmptyCommandRequest", "parameters": "()", "modifiers": "@Override public", "return": "RegisterNamedStyleInfoRequest", "signature": "RegisterNamedStyleInfoRequest getEmptyCommandRequest()", "full_signature": "@Override public RegisterNamedStyleInfoRequest getEmptyCommandRequest()", "class_method_signature": "RegisterNamedStyleInfoCommand.getEmptyCommandRequest()", "testcase": false, "constructor": false}, {"identifier": "getEmptyCommandResponse", "parameters": "()", "modifiers": "@Override public", "return": "RegisterNamedStyleInfoResponse", "signature": "RegisterNamedStyleInfoResponse getEmptyCommandResponse()", "full_signature": "@Override public RegisterNamedStyleInfoResponse getEmptyCommandResponse()", "class_method_signature": "RegisterNamedStyleInfoCommand.getEmptyCommandResponse()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(RegisterNamedStyleInfoRequest request, RegisterNamedStyleInfoResponse response)", "modifiers": "@Override public", "return": "void", "signature": "void execute(RegisterNamedStyleInfoRequest request, RegisterNamedStyleInfoResponse response)", "full_signature": "@Override public void execute(RegisterNamedStyleInfoRequest request, RegisterNamedStyleInfoResponse response)", "class_method_signature": "RegisterNamedStyleInfoCommand.execute(RegisterNamedStyleInfoRequest request, RegisterNamedStyleInfoResponse response)", "testcase": false, "constructor": false}], "file": "command/src/main/java/org/geomajas/command/render/RegisterNamedStyleInfoCommand.java"}, "focal_method": {"identifier": "execute", "parameters": "(RegisterNamedStyleInfoRequest request, RegisterNamedStyleInfoResponse response)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void execute(RegisterNamedStyleInfoRequest request, RegisterNamedStyleInfoResponse response)\n\t\t\tthrows Exception {\n\t\tresponse.setStyleName(styleService.registerStyle(request.getLayerId(), request.getNamedStyleInfo()));\n\t}", "signature": "void execute(RegisterNamedStyleInfoRequest request, RegisterNamedStyleInfoResponse response)", "full_signature": "@Override public void execute(RegisterNamedStyleInfoRequest request, RegisterNamedStyleInfoResponse response)", "class_method_signature": "RegisterNamedStyleInfoCommand.execute(RegisterNamedStyleInfoRequest request, RegisterNamedStyleInfoResponse response)", "testcase": false, "constructor": false, "invocations": ["setStyleName", "registerStyle", "getLayerId", "getNamedStyleInfo"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}