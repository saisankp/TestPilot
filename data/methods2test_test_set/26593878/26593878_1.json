{"test_class": {"identifier": "MMTypeToolsTest", "superclass": "", "interfaces": "", "fields": [], "file": "lobcder-master-SC13Demo/lobcder-master/src/test/java/nl/uva/cs/lobcder/util/MMTypeToolsTest.java"}, "test_case": {"identifier": "testBestMatch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBestMatch() {\n        System.out.println(\"bestMatch\");\n        \n        Collection<String> acceps = new ArrayList<String>();\n        acceps.add(\"text/html\");\n        acceps.add(\"text/*;q=0.9\");\n        acceps.add(\"image/jpeg;q=0.9\");\n        acceps.add(\"image/png;q=0.9\");\n        acceps.add(\"image/*;q=0.9\");\n        acceps.add(\"*/*;q=0.8\");\n       \n        String fileContentType = \"text/plain\";\n        String expResult = \"text/*;q=0.9\";\n        String result = MMTypeTools.bestMatch(acceps, fileContentType);\n        assertEquals(expResult, result);\n    }", "signature": "void testBestMatch()", "full_signature": "@Test public void testBestMatch()", "class_method_signature": "MMTypeToolsTest.testBestMatch()", "testcase": true, "constructor": false, "invocations": ["println", "add", "add", "add", "add", "add", "add", "bestMatch", "assertEquals"]}, "focal_class": {"identifier": "MMTypeTools", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "bestMatch", "parameters": "(Collection<String> supported, String header)", "modifiers": "public static", "return": "String", "signature": "String bestMatch(Collection<String> supported, String header)", "full_signature": "public static String bestMatch(Collection<String> supported, String header)", "class_method_signature": "MMTypeTools.bestMatch(Collection<String> supported, String header)", "testcase": false, "constructor": false}, {"identifier": "fitnessAndQualityParsed", "parameters": "(String mimeType,\n            Collection<ParseResults> parsedRanges)", "modifiers": "private static", "return": "FitnessAndQuality", "signature": "FitnessAndQuality fitnessAndQualityParsed(String mimeType,\n            Collection<ParseResults> parsedRanges)", "full_signature": "private static FitnessAndQuality fitnessAndQualityParsed(String mimeType,\n            Collection<ParseResults> parsedRanges)", "class_method_signature": "MMTypeTools.fitnessAndQualityParsed(String mimeType,\n            Collection<ParseResults> parsedRanges)", "testcase": false, "constructor": false}, {"identifier": "parseMediaRange", "parameters": "(String range)", "modifiers": "private static", "return": "ParseResults", "signature": "ParseResults parseMediaRange(String range)", "full_signature": "private static ParseResults parseMediaRange(String range)", "class_method_signature": "MMTypeTools.parseMediaRange(String range)", "testcase": false, "constructor": false}, {"identifier": "parseMimeType", "parameters": "(String mimeType)", "modifiers": "private static", "return": "ParseResults", "signature": "ParseResults parseMimeType(String mimeType)", "full_signature": "private static ParseResults parseMimeType(String mimeType)", "class_method_signature": "MMTypeTools.parseMimeType(String mimeType)", "testcase": false, "constructor": false}], "file": "lobcder-master-SC13Demo/lobcder-master/src/main/java/nl/uva/cs/lobcder/util/MMTypeTools.java"}, "focal_method": {"identifier": "bestMatch", "parameters": "(Collection<String> supported, String header)", "modifiers": "public static", "return": "String", "body": "public static String bestMatch(Collection<String> supported, String header) {\n        List<ParseResults> parseResults = new LinkedList<ParseResults>();\n\n        List<FitnessAndQuality> weightedMatches = new LinkedList<FitnessAndQuality>();\n        for (String r : header.split(\",\")) {\n            parseResults.add(parseMediaRange(r));\n        }\n\n        for (String s : supported) {\n            FitnessAndQuality fitnessAndQuality = fitnessAndQualityParsed(s,\n                    parseResults);\n            fitnessAndQuality.mimeType = s;\n            weightedMatches.add(fitnessAndQuality);\n        }\n        Collections.sort(weightedMatches);\n\n        FitnessAndQuality lastOne = weightedMatches.get(weightedMatches.size() - 1);\n//        debug(\"Get back: \" + lastOne.quality + \" , \" + lastOne.mimeType);\n\n        if (lastOne.quality != 0) {\n            return lastOne.mimeType;\n        }\n\n        return \"\";\n    }", "signature": "String bestMatch(Collection<String> supported, String header)", "full_signature": "public static String bestMatch(Collection<String> supported, String header)", "class_method_signature": "MMTypeTools.bestMatch(Collection<String> supported, String header)", "testcase": false, "constructor": false, "invocations": ["split", "add", "parseMediaRange", "fitnessAndQualityParsed", "add", "sort", "get", "size"]}, "repository": {"repo_id": 26593878, "url": "https://github.com/skoulouzis/lobcder", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 65809, "license": "licensed"}}