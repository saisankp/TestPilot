{"test_class": {"identifier": "DataSetEditWorkflowTest", "superclass": "extends AbstractDataSetWorkflowTest", "interfaces": "", "fields": [{"original_string": "public static final String UUID = \"uuid1\";", "modifier": "public static final", "type": "String", "declarator": "UUID = \"uuid1\"", "var_name": "UUID"}, {"original_string": "public static final String NAME = \"name1\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"name1\"", "var_name": "NAME"}, {"original_string": "@Mock\n    SyncBeanManager beanManager;", "modifier": "@Mock", "type": "SyncBeanManager", "declarator": "beanManager", "var_name": "beanManager"}, {"original_string": "@Mock\n    EventSourceMock<SaveRequestEvent> saveRequestEvent;", "modifier": "@Mock", "type": "EventSourceMock<SaveRequestEvent>", "declarator": "saveRequestEvent", "var_name": "saveRequestEvent"}, {"original_string": "@Mock\n    EventSourceMock<TestDataSetRequestEvent> testDataSetEvent;", "modifier": "@Mock", "type": "EventSourceMock<TestDataSetRequestEvent>", "declarator": "testDataSetEvent", "var_name": "testDataSetEvent"}, {"original_string": "@Mock\n    EventSourceMock<CancelRequestEvent> cancelRequestEvent;", "modifier": "@Mock", "type": "EventSourceMock<CancelRequestEvent>", "declarator": "cancelRequestEvent", "var_name": "cancelRequestEvent"}, {"original_string": "@Mock\n    DataSetClientServices clientServices;", "modifier": "@Mock", "type": "DataSetClientServices", "declarator": "clientServices", "var_name": "clientServices"}, {"original_string": "@Mock\n    DataSetDef dataSetDef;", "modifier": "@Mock", "type": "DataSetDef", "declarator": "dataSetDef", "var_name": "dataSetDef"}, {"original_string": "@Mock\n    DataSet dataSet;", "modifier": "@Mock", "type": "DataSet", "declarator": "dataSet", "var_name": "dataSet"}, {"original_string": "@Mock\n    DataSetEditorWorkflow.View view;", "modifier": "@Mock", "type": "DataSetEditorWorkflow.View", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock\n    DataSetDefRefreshAttributesEditor refreshEditor;", "modifier": "@Mock", "type": "DataSetDefRefreshAttributesEditor", "declarator": "refreshEditor", "var_name": "refreshEditor"}, {"original_string": "@Mock\n    SyncBeanDef<SimpleBeanEditorDriver> simpleBeanEditorDriverSyncBeanDef;", "modifier": "@Mock", "type": "SyncBeanDef<SimpleBeanEditorDriver>", "declarator": "simpleBeanEditorDriverSyncBeanDef", "var_name": "simpleBeanEditorDriverSyncBeanDef"}, {"original_string": "@Mock\n    SyncBeanDef<DataSetEditor> dataSetEditorSyncBeanDef;", "modifier": "@Mock", "type": "SyncBeanDef<DataSetEditor>", "declarator": "dataSetEditorSyncBeanDef", "var_name": "dataSetEditorSyncBeanDef"}, {"original_string": "@Mock\n    SimpleBeanEditorDriver driver;", "modifier": "@Mock", "type": "SimpleBeanEditorDriver", "declarator": "driver", "var_name": "driver"}, {"original_string": "@Mock\n    DataSetEditor editor;", "modifier": "@Mock", "type": "DataSetEditor", "declarator": "editor", "var_name": "editor"}, {"original_string": "DataSetEditWorkflow presenter;", "modifier": "", "type": "DataSetEditWorkflow", "declarator": "presenter", "var_name": "presenter"}], "file": "dashbuilder-client/dashbuilder-widgets/src/test/java/org/dashbuilder/client/widgets/dataset/editor/workflow/edit/DataSetEditWorkflowTest.java"}, "test_case": {"identifier": "testShowConfigurationTab", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testShowConfigurationTab() {\n        presenter.editor = editor;\n        presenter.showConfigurationTab();\n        verify( editor, times( 1 ) ).showConfigurationTab();\n        verify( editor, times( 0 ) ).showPreviewTab();\n        verify( editor, times( 0 ) ).showAdvancedTab();\n        verify( view, times( 0 ) ).clearView();\n        verify( view, times( 0 ) ).add( any( IsWidget.class ) );\n        verify( view, times( 0 ) ).init( presenter );\n        verify( view, times( 0 ) ).addButton( anyString(), anyString(), anyBoolean(), any( Command.class ) );\n        verify( view, times( 0 ) ).clearButtons();\n    }", "signature": "void testShowConfigurationTab()", "full_signature": "@Test public void testShowConfigurationTab()", "class_method_signature": "DataSetEditWorkflowTest.testShowConfigurationTab()", "testcase": true, "constructor": false, "invocations": ["showConfigurationTab", "showConfigurationTab", "verify", "times", "showPreviewTab", "verify", "times", "showAdvancedTab", "verify", "times", "clearView", "verify", "times", "add", "verify", "times", "any", "init", "verify", "times", "addButton", "verify", "times", "anyString", "anyString", "anyBoolean", "any", "clearButtons", "verify", "times"]}, "focal_class": {"identifier": "DataSetEditWorkflow", "superclass": "extends DataSetEditorWorkflow<T>", "interfaces": "", "fields": [{"original_string": "protected SimpleBeanEditorDriver<T, E> driver;", "modifier": "protected", "type": "SimpleBeanEditorDriver<T, E>", "declarator": "driver", "var_name": "driver"}, {"original_string": "protected E editor;", "modifier": "protected", "type": "E", "declarator": "editor", "var_name": "editor"}], "methods": [{"identifier": "DataSetEditWorkflow", "parameters": "( final DataSetClientServices clientServices,\n                                final DataSetValidatorProvider validatorProvider,\n                                final SyncBeanManager beanManager,\n                                final Event<SaveRequestEvent> saveRequestEvent,\n                                final Event<TestDataSetRequestEvent> testDataSetEvent,\n                                final Event<CancelRequestEvent> cancelRequestEvent,\n                                final View view )", "modifiers": "@Inject public", "return": "", "signature": " DataSetEditWorkflow( final DataSetClientServices clientServices,\n                                final DataSetValidatorProvider validatorProvider,\n                                final SyncBeanManager beanManager,\n                                final Event<SaveRequestEvent> saveRequestEvent,\n                                final Event<TestDataSetRequestEvent> testDataSetEvent,\n                                final Event<CancelRequestEvent> cancelRequestEvent,\n                                final View view )", "full_signature": "@Inject public  DataSetEditWorkflow( final DataSetClientServices clientServices,\n                                final DataSetValidatorProvider validatorProvider,\n                                final SyncBeanManager beanManager,\n                                final Event<SaveRequestEvent> saveRequestEvent,\n                                final Event<TestDataSetRequestEvent> testDataSetEvent,\n                                final Event<CancelRequestEvent> cancelRequestEvent,\n                                final View view )", "class_method_signature": "DataSetEditWorkflow.DataSetEditWorkflow( final DataSetClientServices clientServices,\n                                final DataSetValidatorProvider validatorProvider,\n                                final SyncBeanManager beanManager,\n                                final Event<SaveRequestEvent> saveRequestEvent,\n                                final Event<TestDataSetRequestEvent> testDataSetEvent,\n                                final Event<CancelRequestEvent> cancelRequestEvent,\n                                final View view )", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "@PostConstruct public", "return": "void", "signature": "void init()", "full_signature": "@PostConstruct public void init()", "class_method_signature": "DataSetEditWorkflow.init()", "testcase": false, "constructor": false}, {"identifier": "getDriverClass", "parameters": "()", "modifiers": "protected abstract", "return": "Class<? extends SimpleBeanEditorDriver<T, E>>", "signature": "Class<? extends SimpleBeanEditorDriver<T, E>> getDriverClass()", "full_signature": "protected abstract Class<? extends SimpleBeanEditorDriver<T, E>> getDriverClass()", "class_method_signature": "DataSetEditWorkflow.getDriverClass()", "testcase": false, "constructor": false}, {"identifier": "getEditorClass", "parameters": "()", "modifiers": "protected abstract", "return": "Class<? extends E>", "signature": "Class<? extends E> getEditorClass()", "full_signature": "protected abstract Class<? extends E> getEditorClass()", "class_method_signature": "DataSetEditWorkflow.getEditorClass()", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "( boolean isCacheEnabled,\n                                                         boolean isPushEnabled,\n                                                         boolean isRefreshEnabled )", "modifiers": "protected", "return": "Iterable<ConstraintViolation<?>>", "signature": "Iterable<ConstraintViolation<?>> validate( boolean isCacheEnabled,\n                                                         boolean isPushEnabled,\n                                                         boolean isRefreshEnabled )", "full_signature": "protected Iterable<ConstraintViolation<?>> validate( boolean isCacheEnabled,\n                                                         boolean isPushEnabled,\n                                                         boolean isRefreshEnabled )", "class_method_signature": "DataSetEditWorkflow.validate( boolean isCacheEnabled,\n                                                         boolean isPushEnabled,\n                                                         boolean isRefreshEnabled )", "testcase": false, "constructor": false}, {"identifier": "edit", "parameters": "( final T definition, List<DataColumnDef> allColumns )", "modifiers": "public", "return": "DataSetEditWorkflow", "signature": "DataSetEditWorkflow edit( final T definition, List<DataColumnDef> allColumns )", "full_signature": "public DataSetEditWorkflow edit( final T definition, List<DataColumnDef> allColumns )", "class_method_signature": "DataSetEditWorkflow.edit( final T definition, List<DataColumnDef> allColumns )", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void dispose()", "full_signature": "@Override public void dispose()", "class_method_signature": "DataSetEditWorkflow.dispose()", "testcase": false, "constructor": false}, {"identifier": "getEditor", "parameters": "()", "modifiers": "public", "return": "E", "signature": "E getEditor()", "full_signature": "public E getEditor()", "class_method_signature": "DataSetEditWorkflow.getEditor()", "testcase": false, "constructor": false}, {"identifier": "afterFlush", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void afterFlush()", "full_signature": "@Override protected void afterFlush()", "class_method_signature": "DataSetEditWorkflow.afterFlush()", "testcase": false, "constructor": false}, {"identifier": "getWidget", "parameters": "()", "modifiers": "protected", "return": "org.dashbuilder.client.widgets.dataset.editor.DataSetEditor", "signature": "org.dashbuilder.client.widgets.dataset.editor.DataSetEditor getWidget()", "full_signature": "protected org.dashbuilder.client.widgets.dataset.editor.DataSetEditor getWidget()", "class_method_signature": "DataSetEditWorkflow.getWidget()", "testcase": false, "constructor": false}, {"identifier": "showConfigurationTab", "parameters": "()", "modifiers": "public", "return": "DataSetEditorWorkflow", "signature": "DataSetEditorWorkflow showConfigurationTab()", "full_signature": "public DataSetEditorWorkflow showConfigurationTab()", "class_method_signature": "DataSetEditWorkflow.showConfigurationTab()", "testcase": false, "constructor": false}, {"identifier": "showPreviewTab", "parameters": "()", "modifiers": "public", "return": "DataSetEditorWorkflow", "signature": "DataSetEditorWorkflow showPreviewTab()", "full_signature": "public DataSetEditorWorkflow showPreviewTab()", "class_method_signature": "DataSetEditWorkflow.showPreviewTab()", "testcase": false, "constructor": false}, {"identifier": "showAdvancedTab", "parameters": "()", "modifiers": "public", "return": "DataSetEditorWorkflow", "signature": "DataSetEditorWorkflow showAdvancedTab()", "full_signature": "public DataSetEditorWorkflow showAdvancedTab()", "class_method_signature": "DataSetEditWorkflow.showAdvancedTab()", "testcase": false, "constructor": false}, {"identifier": "_setDataSetDef", "parameters": "( final T def )", "modifiers": "", "return": "void", "signature": "void _setDataSetDef( final T def )", "full_signature": " void _setDataSetDef( final T def )", "class_method_signature": "DataSetEditWorkflow._setDataSetDef( final T def )", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-widgets/src/main/java/org/dashbuilder/client/widgets/dataset/editor/workflow/edit/DataSetEditWorkflow.java"}, "focal_method": {"identifier": "showConfigurationTab", "parameters": "()", "modifiers": "public", "return": "DataSetEditorWorkflow", "body": "public DataSetEditorWorkflow showConfigurationTab() {\n        getWidget().showConfigurationTab();\n        return this;\n    }", "signature": "DataSetEditorWorkflow showConfigurationTab()", "full_signature": "public DataSetEditorWorkflow showConfigurationTab()", "class_method_signature": "DataSetEditWorkflow.showConfigurationTab()", "testcase": false, "constructor": false, "invocations": ["showConfigurationTab", "getWidget"]}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}