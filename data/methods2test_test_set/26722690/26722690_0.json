{"test_class": {"identifier": "MetricsInstrumentationInterceptorTest", "superclass": "", "interfaces": "", "fields": [], "file": "mongodb/src/test/java/org/restheart/mongodb/handlers/metrics/MetricsInstrumentationInterceptorTest.java"}, "test_case": {"identifier": "testIfFilledAndNotMetrics", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIfFilledAndNotMetrics() throws Exception {\n        assertTrue(MetricsInstrumentationInterceptor.isFilledAndNotMetrics(\"foobar\"));\n        assertTrue(MetricsInstrumentationInterceptor.isFilledAndNotMetrics(\"rainbow\"));\n        assertFalse(MetricsInstrumentationInterceptor.isFilledAndNotMetrics(\"_metrics\"));\n        assertFalse(MetricsInstrumentationInterceptor.isFilledAndNotMetrics(\"\"));\n        assertFalse(MetricsInstrumentationInterceptor.isFilledAndNotMetrics(\"  \"));\n        assertFalse(MetricsInstrumentationInterceptor.isFilledAndNotMetrics(null));\n    }", "signature": "void testIfFilledAndNotMetrics()", "full_signature": "@Test public void testIfFilledAndNotMetrics()", "class_method_signature": "MetricsInstrumentationInterceptorTest.testIfFilledAndNotMetrics()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isFilledAndNotMetrics", "assertTrue", "isFilledAndNotMetrics", "assertFalse", "isFilledAndNotMetrics", "assertFalse", "isFilledAndNotMetrics", "assertFalse", "isFilledAndNotMetrics", "assertFalse", "isFilledAndNotMetrics"]}, "focal_class": {"identifier": "MetricsInstrumentationInterceptor", "superclass": "", "interfaces": "implements MongoInterceptor", "fields": [{"original_string": "@VisibleForTesting\n    MongoServiceConfiguration configuration = null;", "modifier": "@VisibleForTesting", "type": "MongoServiceConfiguration", "declarator": "configuration = null", "var_name": "configuration"}, {"original_string": "@VisibleForTesting\n    SharedMetricRegistryProxy metrics = new SharedMetricRegistryProxy();", "modifier": "@VisibleForTesting", "type": "SharedMetricRegistryProxy", "declarator": "metrics = new SharedMetricRegistryProxy()", "var_name": "metrics"}], "methods": [{"identifier": "isFilledAndNotMetrics", "parameters": "(String dbOrCollectionName)", "modifiers": "@VisibleForTesting static", "return": "boolean", "signature": "boolean isFilledAndNotMetrics(String dbOrCollectionName)", "full_signature": "@VisibleForTesting static boolean isFilledAndNotMetrics(String dbOrCollectionName)", "class_method_signature": "MetricsInstrumentationInterceptor.isFilledAndNotMetrics(String dbOrCollectionName)", "testcase": false, "constructor": false}, {"identifier": "handle", "parameters": "(MongoRequest request, MongoResponse response)", "modifiers": "@Override public", "return": "void", "signature": "void handle(MongoRequest request, MongoResponse response)", "full_signature": "@Override public void handle(MongoRequest request, MongoResponse response)", "class_method_signature": "MetricsInstrumentationInterceptor.handle(MongoRequest request, MongoResponse response)", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(MongoRequest request, MongoResponse response)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean resolve(MongoRequest request, MongoResponse response)", "full_signature": "@Override public boolean resolve(MongoRequest request, MongoResponse response)", "class_method_signature": "MetricsInstrumentationInterceptor.resolve(MongoRequest request, MongoResponse response)", "testcase": false, "constructor": false}, {"identifier": "addDefaultMetrics", "parameters": "(MetricRegistry registry, long duration, HttpServerExchange exchange)", "modifiers": "private", "return": "void", "signature": "void addDefaultMetrics(MetricRegistry registry, long duration, HttpServerExchange exchange)", "full_signature": "private void addDefaultMetrics(MetricRegistry registry, long duration, HttpServerExchange exchange)", "class_method_signature": "MetricsInstrumentationInterceptor.addDefaultMetrics(MetricRegistry registry, long duration, HttpServerExchange exchange)", "testcase": false, "constructor": false}, {"identifier": "addMetrics", "parameters": "(long startTime, HttpServerExchange exchange)", "modifiers": "@VisibleForTesting", "return": "void", "signature": "void addMetrics(long startTime, HttpServerExchange exchange)", "full_signature": "@VisibleForTesting void addMetrics(long startTime, HttpServerExchange exchange)", "class_method_signature": "MetricsInstrumentationInterceptor.addMetrics(long startTime, HttpServerExchange exchange)", "testcase": false, "constructor": false}], "file": "mongodb/src/main/java/org/restheart/mongodb/handlers/metrics/MetricsInstrumentationInterceptor.java"}, "focal_method": {"identifier": "isFilledAndNotMetrics", "parameters": "(String dbOrCollectionName)", "modifiers": "@VisibleForTesting static", "return": "boolean", "body": "@VisibleForTesting\n    static boolean isFilledAndNotMetrics(String dbOrCollectionName) {\n        return dbOrCollectionName != null\n                && !dbOrCollectionName.trim().isEmpty()\n                && !dbOrCollectionName.equalsIgnoreCase(_METRICS);\n    }", "signature": "boolean isFilledAndNotMetrics(String dbOrCollectionName)", "full_signature": "@VisibleForTesting static boolean isFilledAndNotMetrics(String dbOrCollectionName)", "class_method_signature": "MetricsInstrumentationInterceptor.isFilledAndNotMetrics(String dbOrCollectionName)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "trim", "equalsIgnoreCase"]}, "repository": {"repo_id": 26722690, "url": "https://github.com/SoftInstigate/restheart", "stars": 582, "created": "11/16/2014 6:01:01 PM +00:00", "updates": "2020-01-18T15:31:59+00:00", "fork": "False", "license": "licensed"}}