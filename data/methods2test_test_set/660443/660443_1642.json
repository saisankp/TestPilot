{"test_class": {"identifier": "ImmutableHydrogenTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "descriptor/cip/src/test/java/org/openscience/cdk/geometry/cip/ImmutableHydrogenTest.java"}, "test_case": {"identifier": "testClone", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testClone() throws Exception {\n        IAtom hydrogen = new ImmutableHydrogen();\n        Assert.assertEquals(hydrogen, hydrogen.clone());\n    }", "signature": "void testClone()", "full_signature": "@Test public void testClone()", "class_method_signature": "ImmutableHydrogenTest.testClone()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "clone"]}, "focal_class": {"identifier": "ImmutableHydrogen", "superclass": "", "interfaces": "implements IAtom", "fields": [{"original_string": "private static final String SYMBOL = \"H\";", "modifier": "private static final", "type": "String", "declarator": "SYMBOL = \"H\"", "var_name": "SYMBOL"}], "methods": [{"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "IAtom", "signature": "IAtom clone()", "full_signature": "@Override public IAtom clone()", "class_method_signature": "ImmutableHydrogen.clone()", "testcase": false, "constructor": false}, {"identifier": "getCharge", "parameters": "()", "modifiers": "@Override public", "return": "Double", "signature": "Double getCharge()", "full_signature": "@Override public Double getCharge()", "class_method_signature": "ImmutableHydrogen.getCharge()", "testcase": false, "constructor": false}, {"identifier": "getFractionalPoint3d", "parameters": "()", "modifiers": "@Override public", "return": "Point3d", "signature": "Point3d getFractionalPoint3d()", "full_signature": "@Override public Point3d getFractionalPoint3d()", "class_method_signature": "ImmutableHydrogen.getFractionalPoint3d()", "testcase": false, "constructor": false}, {"identifier": "getImplicitHydrogenCount", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getImplicitHydrogenCount()", "full_signature": "@Override public Integer getImplicitHydrogenCount()", "class_method_signature": "ImmutableHydrogen.getImplicitHydrogenCount()", "testcase": false, "constructor": false}, {"identifier": "getPoint2d", "parameters": "()", "modifiers": "@Override public", "return": "Point2d", "signature": "Point2d getPoint2d()", "full_signature": "@Override public Point2d getPoint2d()", "class_method_signature": "ImmutableHydrogen.getPoint2d()", "testcase": false, "constructor": false}, {"identifier": "getPoint3d", "parameters": "()", "modifiers": "@Override public", "return": "Point3d", "signature": "Point3d getPoint3d()", "full_signature": "@Override public Point3d getPoint3d()", "class_method_signature": "ImmutableHydrogen.getPoint3d()", "testcase": false, "constructor": false}, {"identifier": "getStereoParity", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getStereoParity()", "full_signature": "@Override public Integer getStereoParity()", "class_method_signature": "ImmutableHydrogen.getStereoParity()", "testcase": false, "constructor": false}, {"identifier": "setCharge", "parameters": "(Double charge)", "modifiers": "@Override public", "return": "void", "signature": "void setCharge(Double charge)", "full_signature": "@Override public void setCharge(Double charge)", "class_method_signature": "ImmutableHydrogen.setCharge(Double charge)", "testcase": false, "constructor": false}, {"identifier": "setFractionalPoint3d", "parameters": "(Point3d point3d)", "modifiers": "@Override public", "return": "void", "signature": "void setFractionalPoint3d(Point3d point3d)", "full_signature": "@Override public void setFractionalPoint3d(Point3d point3d)", "class_method_signature": "ImmutableHydrogen.setFractionalPoint3d(Point3d point3d)", "testcase": false, "constructor": false}, {"identifier": "setImplicitHydrogenCount", "parameters": "(Integer hydrogenCount)", "modifiers": "@Override public", "return": "void", "signature": "void setImplicitHydrogenCount(Integer hydrogenCount)", "full_signature": "@Override public void setImplicitHydrogenCount(Integer hydrogenCount)", "class_method_signature": "ImmutableHydrogen.setImplicitHydrogenCount(Integer hydrogenCount)", "testcase": false, "constructor": false}, {"identifier": "setPoint2d", "parameters": "(Point2d point2d)", "modifiers": "@Override public", "return": "void", "signature": "void setPoint2d(Point2d point2d)", "full_signature": "@Override public void setPoint2d(Point2d point2d)", "class_method_signature": "ImmutableHydrogen.setPoint2d(Point2d point2d)", "testcase": false, "constructor": false}, {"identifier": "setPoint3d", "parameters": "(Point3d point3d)", "modifiers": "@Override public", "return": "void", "signature": "void setPoint3d(Point3d point3d)", "full_signature": "@Override public void setPoint3d(Point3d point3d)", "class_method_signature": "ImmutableHydrogen.setPoint3d(Point3d point3d)", "testcase": false, "constructor": false}, {"identifier": "setStereoParity", "parameters": "(Integer stereoParity)", "modifiers": "@Override public", "return": "void", "signature": "void setStereoParity(Integer stereoParity)", "full_signature": "@Override public void setStereoParity(Integer stereoParity)", "class_method_signature": "ImmutableHydrogen.setStereoParity(Integer stereoParity)", "testcase": false, "constructor": false}, {"identifier": "getAtomTypeName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAtomTypeName()", "full_signature": "@Override public String getAtomTypeName()", "class_method_signature": "ImmutableHydrogen.getAtomTypeName()", "testcase": false, "constructor": false}, {"identifier": "getBondOrderSum", "parameters": "()", "modifiers": "@Override public", "return": "Double", "signature": "Double getBondOrderSum()", "full_signature": "@Override public Double getBondOrderSum()", "class_method_signature": "ImmutableHydrogen.getBondOrderSum()", "testcase": false, "constructor": false}, {"identifier": "getCovalentRadius", "parameters": "()", "modifiers": "@Override public", "return": "Double", "signature": "Double getCovalentRadius()", "full_signature": "@Override public Double getCovalentRadius()", "class_method_signature": "ImmutableHydrogen.getCovalentRadius()", "testcase": false, "constructor": false}, {"identifier": "getFormalCharge", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getFormalCharge()", "full_signature": "@Override public Integer getFormalCharge()", "class_method_signature": "ImmutableHydrogen.getFormalCharge()", "testcase": false, "constructor": false}, {"identifier": "getFormalNeighbourCount", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getFormalNeighbourCount()", "full_signature": "@Override public Integer getFormalNeighbourCount()", "class_method_signature": "ImmutableHydrogen.getFormalNeighbourCount()", "testcase": false, "constructor": false}, {"identifier": "getHybridization", "parameters": "()", "modifiers": "@Override public", "return": "Hybridization", "signature": "Hybridization getHybridization()", "full_signature": "@Override public Hybridization getHybridization()", "class_method_signature": "ImmutableHydrogen.getHybridization()", "testcase": false, "constructor": false}, {"identifier": "getMaxBondOrder", "parameters": "()", "modifiers": "@Override public", "return": "Order", "signature": "Order getMaxBondOrder()", "full_signature": "@Override public Order getMaxBondOrder()", "class_method_signature": "ImmutableHydrogen.getMaxBondOrder()", "testcase": false, "constructor": false}, {"identifier": "getValency", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getValency()", "full_signature": "@Override public Integer getValency()", "class_method_signature": "ImmutableHydrogen.getValency()", "testcase": false, "constructor": false}, {"identifier": "setAtomTypeName", "parameters": "(String identifier)", "modifiers": "@Override public", "return": "void", "signature": "void setAtomTypeName(String identifier)", "full_signature": "@Override public void setAtomTypeName(String identifier)", "class_method_signature": "ImmutableHydrogen.setAtomTypeName(String identifier)", "testcase": false, "constructor": false}, {"identifier": "setBondOrderSum", "parameters": "(Double bondOrderSum)", "modifiers": "@Override public", "return": "void", "signature": "void setBondOrderSum(Double bondOrderSum)", "full_signature": "@Override public void setBondOrderSum(Double bondOrderSum)", "class_method_signature": "ImmutableHydrogen.setBondOrderSum(Double bondOrderSum)", "testcase": false, "constructor": false}, {"identifier": "setCovalentRadius", "parameters": "(Double radius)", "modifiers": "@Override public", "return": "void", "signature": "void setCovalentRadius(Double radius)", "full_signature": "@Override public void setCovalentRadius(Double radius)", "class_method_signature": "ImmutableHydrogen.setCovalentRadius(Double radius)", "testcase": false, "constructor": false}, {"identifier": "setFormalCharge", "parameters": "(Integer charge)", "modifiers": "@Override public", "return": "void", "signature": "void setFormalCharge(Integer charge)", "full_signature": "@Override public void setFormalCharge(Integer charge)", "class_method_signature": "ImmutableHydrogen.setFormalCharge(Integer charge)", "testcase": false, "constructor": false}, {"identifier": "setFormalNeighbourCount", "parameters": "(Integer count)", "modifiers": "@Override public", "return": "void", "signature": "void setFormalNeighbourCount(Integer count)", "full_signature": "@Override public void setFormalNeighbourCount(Integer count)", "class_method_signature": "ImmutableHydrogen.setFormalNeighbourCount(Integer count)", "testcase": false, "constructor": false}, {"identifier": "setHybridization", "parameters": "(Hybridization hybridization)", "modifiers": "@Override public", "return": "void", "signature": "void setHybridization(Hybridization hybridization)", "full_signature": "@Override public void setHybridization(Hybridization hybridization)", "class_method_signature": "ImmutableHydrogen.setHybridization(Hybridization hybridization)", "testcase": false, "constructor": false}, {"identifier": "setMaxBondOrder", "parameters": "(Order maxBondOrder)", "modifiers": "@Override public", "return": "void", "signature": "void setMaxBondOrder(Order maxBondOrder)", "full_signature": "@Override public void setMaxBondOrder(Order maxBondOrder)", "class_method_signature": "ImmutableHydrogen.setMaxBondOrder(Order maxBondOrder)", "testcase": false, "constructor": false}, {"identifier": "setValency", "parameters": "(Integer valency)", "modifiers": "@Override public", "return": "void", "signature": "void setValency(Integer valency)", "full_signature": "@Override public void setValency(Integer valency)", "class_method_signature": "ImmutableHydrogen.setValency(Integer valency)", "testcase": false, "constructor": false}, {"identifier": "getExactMass", "parameters": "()", "modifiers": "@Override public", "return": "Double", "signature": "Double getExactMass()", "full_signature": "@Override public Double getExactMass()", "class_method_signature": "ImmutableHydrogen.getExactMass()", "testcase": false, "constructor": false}, {"identifier": "getMassNumber", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getMassNumber()", "full_signature": "@Override public Integer getMassNumber()", "class_method_signature": "ImmutableHydrogen.getMassNumber()", "testcase": false, "constructor": false}, {"identifier": "getNaturalAbundance", "parameters": "()", "modifiers": "@Override public", "return": "Double", "signature": "Double getNaturalAbundance()", "full_signature": "@Override public Double getNaturalAbundance()", "class_method_signature": "ImmutableHydrogen.getNaturalAbundance()", "testcase": false, "constructor": false}, {"identifier": "setExactMass", "parameters": "(Double exactMass)", "modifiers": "@Override public", "return": "void", "signature": "void setExactMass(Double exactMass)", "full_signature": "@Override public void setExactMass(Double exactMass)", "class_method_signature": "ImmutableHydrogen.setExactMass(Double exactMass)", "testcase": false, "constructor": false}, {"identifier": "setMassNumber", "parameters": "(Integer massNumber)", "modifiers": "@Override public", "return": "void", "signature": "void setMassNumber(Integer massNumber)", "full_signature": "@Override public void setMassNumber(Integer massNumber)", "class_method_signature": "ImmutableHydrogen.setMassNumber(Integer massNumber)", "testcase": false, "constructor": false}, {"identifier": "setNaturalAbundance", "parameters": "(Double naturalAbundance)", "modifiers": "@Override public", "return": "void", "signature": "void setNaturalAbundance(Double naturalAbundance)", "full_signature": "@Override public void setNaturalAbundance(Double naturalAbundance)", "class_method_signature": "ImmutableHydrogen.setNaturalAbundance(Double naturalAbundance)", "testcase": false, "constructor": false}, {"identifier": "getAtomicNumber", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getAtomicNumber()", "full_signature": "@Override public Integer getAtomicNumber()", "class_method_signature": "ImmutableHydrogen.getAtomicNumber()", "testcase": false, "constructor": false}, {"identifier": "getSymbol", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSymbol()", "full_signature": "@Override public String getSymbol()", "class_method_signature": "ImmutableHydrogen.getSymbol()", "testcase": false, "constructor": false}, {"identifier": "setAtomicNumber", "parameters": "(Integer atomicNumber)", "modifiers": "@Override public", "return": "void", "signature": "void setAtomicNumber(Integer atomicNumber)", "full_signature": "@Override public void setAtomicNumber(Integer atomicNumber)", "class_method_signature": "ImmutableHydrogen.setAtomicNumber(Integer atomicNumber)", "testcase": false, "constructor": false}, {"identifier": "setSymbol", "parameters": "(String symbol)", "modifiers": "@Override public", "return": "void", "signature": "void setSymbol(String symbol)", "full_signature": "@Override public void setSymbol(String symbol)", "class_method_signature": "ImmutableHydrogen.setSymbol(String symbol)", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(IChemObjectListener col)", "modifiers": "@Override public", "return": "void", "signature": "void addListener(IChemObjectListener col)", "full_signature": "@Override public void addListener(IChemObjectListener col)", "class_method_signature": "ImmutableHydrogen.addListener(IChemObjectListener col)", "testcase": false, "constructor": false}, {"identifier": "getFlag", "parameters": "(int flagType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getFlag(int flagType)", "full_signature": "@Override public boolean getFlag(int flagType)", "class_method_signature": "ImmutableHydrogen.getFlag(int flagType)", "testcase": false, "constructor": false}, {"identifier": "getFlags", "parameters": "()", "modifiers": "@Override public", "return": "boolean[]", "signature": "boolean[] getFlags()", "full_signature": "@Override public boolean[] getFlags()", "class_method_signature": "ImmutableHydrogen.getFlags()", "testcase": false, "constructor": false}, {"identifier": "getFlagValue", "parameters": "()", "modifiers": "@Override public", "return": "Number", "signature": "Number getFlagValue()", "full_signature": "@Override public Number getFlagValue()", "class_method_signature": "ImmutableHydrogen.getFlagValue()", "testcase": false, "constructor": false}, {"identifier": "getID", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getID()", "full_signature": "@Override public String getID()", "class_method_signature": "ImmutableHydrogen.getID()", "testcase": false, "constructor": false}, {"identifier": "getListenerCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getListenerCount()", "full_signature": "@Override public int getListenerCount()", "class_method_signature": "ImmutableHydrogen.getListenerCount()", "testcase": false, "constructor": false}, {"identifier": "getNotification", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getNotification()", "full_signature": "@Override public boolean getNotification()", "class_method_signature": "ImmutableHydrogen.getNotification()", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override public", "return": "Map<Object, Object>", "signature": "Map<Object, Object> getProperties()", "full_signature": "@Override public Map<Object, Object> getProperties()", "class_method_signature": "ImmutableHydrogen.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(Object description)", "modifiers": "@Override public", "return": "Object", "signature": "Object getProperty(Object description)", "full_signature": "@Override public Object getProperty(Object description)", "class_method_signature": "ImmutableHydrogen.getProperty(Object description)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(Object description, Class<T> c)", "modifiers": "@Override public", "return": "T", "signature": "T getProperty(Object description, Class<T> c)", "full_signature": "@Override public T getProperty(Object description, Class<T> c)", "class_method_signature": "ImmutableHydrogen.getProperty(Object description, Class<T> c)", "testcase": false, "constructor": false}, {"identifier": "notifyChanged", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void notifyChanged()", "full_signature": "@Override public void notifyChanged()", "class_method_signature": "ImmutableHydrogen.notifyChanged()", "testcase": false, "constructor": false}, {"identifier": "notifyChanged", "parameters": "(IChemObjectChangeEvent evt)", "modifiers": "@Override public", "return": "void", "signature": "void notifyChanged(IChemObjectChangeEvent evt)", "full_signature": "@Override public void notifyChanged(IChemObjectChangeEvent evt)", "class_method_signature": "ImmutableHydrogen.notifyChanged(IChemObjectChangeEvent evt)", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(IChemObjectListener col)", "modifiers": "@Override public", "return": "void", "signature": "void removeListener(IChemObjectListener col)", "full_signature": "@Override public void removeListener(IChemObjectListener col)", "class_method_signature": "ImmutableHydrogen.removeListener(IChemObjectListener col)", "testcase": false, "constructor": false}, {"identifier": "removeProperty", "parameters": "(Object description)", "modifiers": "@Override public", "return": "void", "signature": "void removeProperty(Object description)", "full_signature": "@Override public void removeProperty(Object description)", "class_method_signature": "ImmutableHydrogen.removeProperty(Object description)", "testcase": false, "constructor": false}, {"identifier": "setFlag", "parameters": "(int flagType, boolean flagValue)", "modifiers": "@Override public", "return": "void", "signature": "void setFlag(int flagType, boolean flagValue)", "full_signature": "@Override public void setFlag(int flagType, boolean flagValue)", "class_method_signature": "ImmutableHydrogen.setFlag(int flagType, boolean flagValue)", "testcase": false, "constructor": false}, {"identifier": "setFlags", "parameters": "(boolean[] flagsNew)", "modifiers": "@Override public", "return": "void", "signature": "void setFlags(boolean[] flagsNew)", "full_signature": "@Override public void setFlags(boolean[] flagsNew)", "class_method_signature": "ImmutableHydrogen.setFlags(boolean[] flagsNew)", "testcase": false, "constructor": false}, {"identifier": "setID", "parameters": "(String identifier)", "modifiers": "@Override public", "return": "void", "signature": "void setID(String identifier)", "full_signature": "@Override public void setID(String identifier)", "class_method_signature": "ImmutableHydrogen.setID(String identifier)", "testcase": false, "constructor": false}, {"identifier": "setNotification", "parameters": "(boolean bool)", "modifiers": "@Override public", "return": "void", "signature": "void setNotification(boolean bool)", "full_signature": "@Override public void setNotification(boolean bool)", "class_method_signature": "ImmutableHydrogen.setNotification(boolean bool)", "testcase": false, "constructor": false}, {"identifier": "setProperties", "parameters": "(Map<Object, Object> properties)", "modifiers": "@Override public", "return": "void", "signature": "void setProperties(Map<Object, Object> properties)", "full_signature": "@Override public void setProperties(Map<Object, Object> properties)", "class_method_signature": "ImmutableHydrogen.setProperties(Map<Object, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "addProperties", "parameters": "(Map<Object, Object> properties)", "modifiers": "@Override public", "return": "void", "signature": "void addProperties(Map<Object, Object> properties)", "full_signature": "@Override public void addProperties(Map<Object, Object> properties)", "class_method_signature": "ImmutableHydrogen.addProperties(Map<Object, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(Object description, Object property)", "modifiers": "@Override public", "return": "void", "signature": "void setProperty(Object description, Object property)", "full_signature": "@Override public void setProperty(Object description, Object property)", "class_method_signature": "ImmutableHydrogen.setProperty(Object description, Object property)", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "()", "modifiers": "@Override public", "return": "IChemObjectBuilder", "signature": "IChemObjectBuilder getBuilder()", "full_signature": "@Override public IChemObjectBuilder getBuilder()", "class_method_signature": "ImmutableHydrogen.getBuilder()", "testcase": false, "constructor": false}, {"identifier": "isAromatic", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAromatic()", "full_signature": "@Override public boolean isAromatic()", "class_method_signature": "ImmutableHydrogen.isAromatic()", "testcase": false, "constructor": false}, {"identifier": "setIsAromatic", "parameters": "(boolean arom)", "modifiers": "@Override public", "return": "void", "signature": "void setIsAromatic(boolean arom)", "full_signature": "@Override public void setIsAromatic(boolean arom)", "class_method_signature": "ImmutableHydrogen.setIsAromatic(boolean arom)", "testcase": false, "constructor": false}, {"identifier": "isInRing", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isInRing()", "full_signature": "@Override public boolean isInRing()", "class_method_signature": "ImmutableHydrogen.isInRing()", "testcase": false, "constructor": false}, {"identifier": "setIsInRing", "parameters": "(boolean ring)", "modifiers": "@Override public", "return": "void", "signature": "void setIsInRing(boolean ring)", "full_signature": "@Override public void setIsInRing(boolean ring)", "class_method_signature": "ImmutableHydrogen.setIsInRing(boolean ring)", "testcase": false, "constructor": false}, {"identifier": "getContainer", "parameters": "()", "modifiers": "@Override public", "return": "IAtomContainer", "signature": "IAtomContainer getContainer()", "full_signature": "@Override public IAtomContainer getContainer()", "class_method_signature": "ImmutableHydrogen.getContainer()", "testcase": false, "constructor": false}, {"identifier": "getIndex", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getIndex()", "full_signature": "@Override public int getIndex()", "class_method_signature": "ImmutableHydrogen.getIndex()", "testcase": false, "constructor": false}, {"identifier": "bonds", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<IBond>", "signature": "Iterable<IBond> bonds()", "full_signature": "@Override public Iterable<IBond> bonds()", "class_method_signature": "ImmutableHydrogen.bonds()", "testcase": false, "constructor": false}, {"identifier": "getBondCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getBondCount()", "full_signature": "@Override public int getBondCount()", "class_method_signature": "ImmutableHydrogen.getBondCount()", "testcase": false, "constructor": false}, {"identifier": "getBond", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "IBond", "signature": "IBond getBond(IAtom atom)", "full_signature": "@Override public IBond getBond(IAtom atom)", "class_method_signature": "ImmutableHydrogen.getBond(IAtom atom)", "testcase": false, "constructor": false}], "file": "descriptor/cip/src/main/java/org/openscience/cdk/geometry/cip/ImmutableHydrogen.java"}, "focal_method": {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "IAtom", "body": "@Override\n    public IAtom clone() {\n        return this;\n    }", "signature": "IAtom clone()", "full_signature": "@Override public IAtom clone()", "class_method_signature": "ImmutableHydrogen.clone()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}