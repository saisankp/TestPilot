{"test_class": {"identifier": "BlockedNamespacesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ActorSystem actorSystem;", "modifier": "private", "type": "ActorSystem", "declarator": "actorSystem", "var_name": "actorSystem"}, {"original_string": "private DistributedDataConfig config;", "modifier": "private", "type": "DistributedDataConfig", "declarator": "config", "var_name": "config"}], "file": "services/utils/namespaces/src/test/java/org/eclipse/ditto/services/utils/namespaces/BlockedNamespacesTest.java"}, "test_case": {"identifier": "startSeveralTimes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void startSeveralTimes() throws Exception {\n        // This test simulates the situation where the root actor of a Ditto service restarts several times.\n\n        // GIVEN: Many blocked-namespaces objects were obtained in the same actor system.\n        final Supplier<BlockedNamespaces> blockedNamespacesSupplier = () -> BlockedNamespaces.of(actorSystem);\n        for (int i = 0; i < 10; ++i) {\n            blockedNamespacesSupplier.get();\n        }\n\n        // WHEN: Another blocked-namespaces object is obtained.\n        // THEN: It fulfills its function.\n        testCRUD(blockedNamespacesSupplier.get(), actorSystem);\n    }", "signature": "void startSeveralTimes()", "full_signature": "@Test public void startSeveralTimes()", "class_method_signature": "BlockedNamespacesTest.startSeveralTimes()", "testcase": true, "constructor": false, "invocations": ["of", "get", "testCRUD", "get"]}, "focal_class": {"identifier": "BlockedNamespaces", "superclass": "extends DistributedData<ORSet<String>>", "interfaces": "", "fields": [{"original_string": "public static final String CLUSTER_ROLE = \"blocked-namespaces-aware\";", "modifier": "public static final", "type": "String", "declarator": "CLUSTER_ROLE = \"blocked-namespaces-aware\"", "var_name": "CLUSTER_ROLE"}, {"original_string": "public static final String ACTOR_NAME = \"blockedNamespacesReplicator\";", "modifier": "public static final", "type": "String", "declarator": "ACTOR_NAME = \"blockedNamespacesReplicator\"", "var_name": "ACTOR_NAME"}, {"original_string": "private static final Key<ORSet<String>> KEY = ORSetKey.create(\"BlockedNamespaces\");", "modifier": "private static final", "type": "Key<ORSet<String>>", "declarator": "KEY = ORSetKey.create(\"BlockedNamespaces\")", "var_name": "KEY"}, {"original_string": "private static final String BLOCKED_NAMESPACES_DISPATCHER = \"blocked-namespaces-dispatcher\";", "modifier": "private static final", "type": "String", "declarator": "BLOCKED_NAMESPACES_DISPATCHER = \"blocked-namespaces-dispatcher\"", "var_name": "BLOCKED_NAMESPACES_DISPATCHER"}, {"original_string": "private final SelfUniqueAddress selfUniqueAddress;", "modifier": "private final", "type": "SelfUniqueAddress", "declarator": "selfUniqueAddress", "var_name": "selfUniqueAddress"}], "methods": [{"identifier": "BlockedNamespaces", "parameters": "(final DistributedDataConfig config, final ActorSystem system)", "modifiers": "private", "return": "", "signature": " BlockedNamespaces(final DistributedDataConfig config, final ActorSystem system)", "full_signature": "private  BlockedNamespaces(final DistributedDataConfig config, final ActorSystem system)", "class_method_signature": "BlockedNamespaces.BlockedNamespaces(final DistributedDataConfig config, final ActorSystem system)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final ActorSystem system)", "modifiers": "public static", "return": "BlockedNamespaces", "signature": "BlockedNamespaces of(final ActorSystem system)", "full_signature": "public static BlockedNamespaces of(final ActorSystem system)", "class_method_signature": "BlockedNamespaces.of(final ActorSystem system)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(final DistributedDataConfig config, final ActorSystem system)", "modifiers": "public static", "return": "BlockedNamespaces", "signature": "BlockedNamespaces create(final DistributedDataConfig config, final ActorSystem system)", "full_signature": "public static BlockedNamespaces create(final DistributedDataConfig config, final ActorSystem system)", "class_method_signature": "BlockedNamespaces.create(final DistributedDataConfig config, final ActorSystem system)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final String namespace)", "modifiers": "public", "return": "CompletionStage<Boolean>", "signature": "CompletionStage<Boolean> contains(final String namespace)", "full_signature": "public CompletionStage<Boolean> contains(final String namespace)", "class_method_signature": "BlockedNamespaces.contains(final String namespace)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final String namespace)", "modifiers": "public", "return": "CompletionStage<Void>", "signature": "CompletionStage<Void> add(final String namespace)", "full_signature": "public CompletionStage<Void> add(final String namespace)", "class_method_signature": "BlockedNamespaces.add(final String namespace)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(final String namespace)", "modifiers": "public", "return": "CompletionStage<Void>", "signature": "CompletionStage<Void> remove(final String namespace)", "full_signature": "public CompletionStage<Void> remove(final String namespace)", "class_method_signature": "BlockedNamespaces.remove(final String namespace)", "testcase": false, "constructor": false}, {"identifier": "getKey", "parameters": "()", "modifiers": "@Override protected", "return": "Key<ORSet<String>>", "signature": "Key<ORSet<String>> getKey()", "full_signature": "@Override protected Key<ORSet<String>> getKey()", "class_method_signature": "BlockedNamespaces.getKey()", "testcase": false, "constructor": false}, {"identifier": "getInitialValue", "parameters": "()", "modifiers": "@Override protected", "return": "ORSet<String>", "signature": "ORSet<String> getInitialValue()", "full_signature": "@Override protected ORSet<String> getInitialValue()", "class_method_signature": "BlockedNamespaces.getInitialValue()", "testcase": false, "constructor": false}, {"identifier": "writeAll", "parameters": "()", "modifiers": "private", "return": "Replicator.WriteConsistency", "signature": "Replicator.WriteConsistency writeAll()", "full_signature": "private Replicator.WriteConsistency writeAll()", "class_method_signature": "BlockedNamespaces.writeAll()", "testcase": false, "constructor": false}], "file": "services/utils/namespaces/src/main/java/org/eclipse/ditto/services/utils/namespaces/BlockedNamespaces.java"}, "focal_method": {"identifier": "of", "parameters": "(final ActorSystem system)", "modifiers": "public static", "return": "BlockedNamespaces", "body": "public static BlockedNamespaces of(final ActorSystem system) {\n        return Provider.INSTANCE.get(system);\n    }", "signature": "BlockedNamespaces of(final ActorSystem system)", "full_signature": "public static BlockedNamespaces of(final ActorSystem system)", "class_method_signature": "BlockedNamespaces.of(final ActorSystem system)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}