{"test_class": {"identifier": "FeatureSetJsonByteConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "job-controller/src/test/java/feast/jobcontroller/runner/option/FeatureSetJsonByteConverterTest.java"}, "test_case": {"identifier": "shouldConvertFeatureSetsAsJsonStringBytes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldConvertFeatureSetsAsJsonStringBytes() throws InvalidProtocolBufferException {\n    int nrOfFeatureSet = 1;\n    int nrOfFeatures = 1;\n    List<FeatureSetProto.FeatureSet> featureSets =\n        IntStream.range(1, nrOfFeatureSet + 1)\n            .mapToObj(i -> newFeatureSet(nrOfFeatures))\n            .collect(Collectors.toList());\n\n    String expectedOutputString =\n        \"{\\\"entities\\\":[{\\\"name\\\":\\\"entity\\\",\\\"valueType\\\":2}],\"\n            + \"\\\"features\\\":[{\\\"name\\\":\\\"feature1\\\",\\\"valueType\\\":6}],\"\n            + \"\\\"source\\\":{\"\n            + \"\\\"type\\\":1,\"\n            + \"\\\"kafkaSourceConfig\\\":{\"\n            + \"\\\"bootstrapServers\\\":\\\"somebrokers:9092\\\",\"\n            + \"\\\"topic\\\":\\\"sometopic\\\"}}}\";\n    FeatureSetJsonByteConverter byteConverter = new FeatureSetJsonByteConverter();\n    assertEquals(expectedOutputString, new String(byteConverter.toByte(featureSets)));\n  }", "signature": "void shouldConvertFeatureSetsAsJsonStringBytes()", "full_signature": "@Test public void shouldConvertFeatureSetsAsJsonStringBytes()", "class_method_signature": "FeatureSetJsonByteConverterTest.shouldConvertFeatureSetsAsJsonStringBytes()", "testcase": true, "constructor": false, "invocations": ["collect", "mapToObj", "range", "newFeatureSet", "toList", "assertEquals", "toByte"]}, "focal_class": {"identifier": "FeatureSetJsonByteConverter", "superclass": "", "interfaces": "implements OptionByteConverter<List<FeatureSetProto.FeatureSet>>", "fields": [], "methods": [{"identifier": "toByte", "parameters": "(List<FeatureSetProto.FeatureSet> featureSets)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] toByte(List<FeatureSetProto.FeatureSet> featureSets)", "full_signature": "@Override public byte[] toByte(List<FeatureSetProto.FeatureSet> featureSets)", "class_method_signature": "FeatureSetJsonByteConverter.toByte(List<FeatureSetProto.FeatureSet> featureSets)", "testcase": false, "constructor": false}], "file": "job-controller/src/main/java/feast/jobcontroller/runner/option/FeatureSetJsonByteConverter.java"}, "focal_method": {"identifier": "toByte", "parameters": "(List<FeatureSetProto.FeatureSet> featureSets)", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n  public byte[] toByte(List<FeatureSetProto.FeatureSet> featureSets)\n      throws InvalidProtocolBufferException {\n    JsonFormat.Printer printer =\n        JsonFormat.printer().omittingInsignificantWhitespace().printingEnumsAsInts();\n    List<String> featureSetsJson = new ArrayList<>();\n    for (FeatureSetProto.FeatureSet featureSet : featureSets) {\n      featureSetsJson.add(printer.print(featureSet.getSpec()));\n    }\n    return String.join(\"\\n\", featureSetsJson).getBytes();\n  }", "signature": "byte[] toByte(List<FeatureSetProto.FeatureSet> featureSets)", "full_signature": "@Override public byte[] toByte(List<FeatureSetProto.FeatureSet> featureSets)", "class_method_signature": "FeatureSetJsonByteConverter.toByte(List<FeatureSetProto.FeatureSet> featureSets)", "testcase": false, "constructor": false, "invocations": ["printingEnumsAsInts", "omittingInsignificantWhitespace", "printer", "add", "print", "getSpec", "getBytes", "join"]}, "repository": {"repo_id": 161133770, "url": "https://github.com/gojek/feast", "stars": 633, "created": "12/10/2018 7:20:15 AM +00:00", "updates": "2020-01-27T12:39:33+00:00", "fork": "False", "license": "licensed"}}