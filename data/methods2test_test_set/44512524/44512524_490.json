{"test_class": {"identifier": "TestSampleSet", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SampleSet<String> set;", "modifier": "private", "type": "SampleSet<String>", "declarator": "set", "var_name": "set"}, {"original_string": "private String[] e;", "modifier": "private", "type": "String[]", "declarator": "e", "var_name": "e"}], "file": "ml/streaminer/src/test/java/org/streaminer/stream/frequency/util/TestSampleSet.java"}, "test_case": {"identifier": "testPut", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPut()\n    {\n        // Empty set\n        assertEquals(1L, set.put(e[0]));\n        assertEquals(e[0], set.peek().getItem());\n        assertEquals(e[0], ((SampleSet<String>) set).peekMin());\n    }", "signature": "void testPut()", "full_signature": "@Test public void testPut()", "class_method_signature": "TestSampleSet.testPut()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "put", "assertEquals", "getItem", "peek", "assertEquals", "peekMin"]}, "focal_class": {"identifier": "SampleSet", "superclass": "", "interfaces": "implements ISampleSet<T>", "fields": [{"original_string": "private Map<T, Node<T>> sampleMap;", "modifier": "private", "type": "Map<T, Node<T>>", "declarator": "sampleMap", "var_name": "sampleMap"}, {"original_string": "private int size;", "modifier": "private", "type": "int", "declarator": "size", "var_name": "size"}, {"original_string": "private long count;", "modifier": "private", "type": "long", "declarator": "count", "var_name": "count"}, {"original_string": "private Random random;", "modifier": "private", "type": "Random", "declarator": "random", "var_name": "random"}, {"original_string": "private Node<T> head;", "modifier": "private", "type": "Node<T>", "declarator": "head", "var_name": "head"}, {"original_string": "private Node<T> tail;", "modifier": "private", "type": "Node<T>", "declarator": "tail", "var_name": "tail"}], "methods": [{"identifier": "SampleSet", "parameters": "()", "modifiers": "public", "return": "", "signature": " SampleSet()", "full_signature": "public  SampleSet()", "class_method_signature": "SampleSet.SampleSet()", "testcase": false, "constructor": true}, {"identifier": "SampleSet", "parameters": "(int capacity)", "modifiers": "public", "return": "", "signature": " SampleSet(int capacity)", "full_signature": "public  SampleSet(int capacity)", "class_method_signature": "SampleSet.SampleSet(int capacity)", "testcase": false, "constructor": true}, {"identifier": "SampleSet", "parameters": "(int capacity, Random random)", "modifiers": "public", "return": "", "signature": " SampleSet(int capacity, Random random)", "full_signature": "public  SampleSet(int capacity, Random random)", "class_method_signature": "SampleSet.SampleSet(int capacity, Random random)", "testcase": false, "constructor": true}, {"identifier": "peek", "parameters": "()", "modifiers": "@Override public", "return": "CountEntry<T>", "signature": "CountEntry<T> peek()", "full_signature": "@Override public CountEntry<T> peek()", "class_method_signature": "SampleSet.peek()", "testcase": false, "constructor": false}, {"identifier": "peek", "parameters": "(int k)", "modifiers": "@Override public", "return": "List<CountEntry<T>>", "signature": "List<CountEntry<T>> peek(int k)", "full_signature": "@Override public List<CountEntry<T>> peek(int k)", "class_method_signature": "SampleSet.peek(int k)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(T element)", "modifiers": "@Override public", "return": "long", "signature": "long put(T element)", "full_signature": "@Override public long put(T element)", "class_method_signature": "SampleSet.put(T element)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(T element, long incrementCount)", "modifiers": "@Override public", "return": "long", "signature": "long put(T element, long incrementCount)", "full_signature": "@Override public long put(T element, long incrementCount)", "class_method_signature": "SampleSet.put(T element, long incrementCount)", "testcase": false, "constructor": false}, {"identifier": "removeRandom", "parameters": "()", "modifiers": "@Override public", "return": "T", "signature": "T removeRandom()", "full_signature": "@Override public T removeRandom()", "class_method_signature": "SampleSet.removeRandom()", "testcase": false, "constructor": false}, {"identifier": "removeMin", "parameters": "()", "modifiers": "protected", "return": "T", "signature": "T removeMin()", "full_signature": "protected T removeMin()", "class_method_signature": "SampleSet.removeMin()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "SampleSet.size()", "testcase": false, "constructor": false}, {"identifier": "count", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long count()", "full_signature": "@Override public long count()", "class_method_signature": "SampleSet.count()", "testcase": false, "constructor": false}, {"identifier": "peekMin", "parameters": "()", "modifiers": "protected", "return": "T", "signature": "T peekMin()", "full_signature": "protected T peekMin()", "class_method_signature": "SampleSet.peekMin()", "testcase": false, "constructor": false}, {"identifier": "promote", "parameters": "(Node<T> node)", "modifiers": "protected", "return": "void", "signature": "void promote(Node<T> node)", "full_signature": "protected void promote(Node<T> node)", "class_method_signature": "SampleSet.promote(Node<T> node)", "testcase": false, "constructor": false}, {"identifier": "demote", "parameters": "(Node<T> node)", "modifiers": "protected", "return": "void", "signature": "void demote(Node<T> node)", "full_signature": "protected void demote(Node<T> node)", "class_method_signature": "SampleSet.demote(Node<T> node)", "testcase": false, "constructor": false}], "file": "ml/streaminer/src/main/java/org/streaminer/stream/frequency/util/SampleSet.java"}, "focal_method": {"identifier": "put", "parameters": "(T element)", "modifiers": "@Override public", "return": "long", "body": "@Override\n    public long put(T element)\n    {\n        return put(element, 1);\n    }", "signature": "long put(T element)", "full_signature": "@Override public long put(T element)", "class_method_signature": "SampleSet.put(T element)", "testcase": false, "constructor": false, "invocations": ["put"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}