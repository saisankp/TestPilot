{"test_class": {"identifier": "InMemoryInputStreamTest", "superclass": "", "interfaces": "", "fields": [], "file": "reflekt/src/test/java/io/advantageous/boon/primitive/InMemoryInputStreamTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test() {\n\n        byte[] content = new String(\"123\").getBytes(StandardCharsets.UTF_8);\n\n\n        byte [] readBy = new byte[2];\n\n        InMemoryInputStream stream = new InMemoryInputStream(content);\n\n\n\n        for (int index=0; index < 25; index++) {\n\n\n\n            int read = stream.read(readBy, 0, readBy.length);\n\n            puts(read, readBy, new String(readBy, StandardCharsets.UTF_8));\n\n        }\n\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "InMemoryInputStreamTest.test()", "testcase": true, "constructor": false, "invocations": ["getBytes", "read", "puts"]}, "focal_class": {"identifier": "InMemoryInputStream", "superclass": "extends ByteArrayInputStream", "interfaces": "", "fields": [{"original_string": "private static final byte BUFFER_FOR_YOU[] = new byte[1];", "modifier": "private static final", "type": "byte", "declarator": "BUFFER_FOR_YOU[] = new byte[1]", "var_name": "BUFFER_FOR_YOU"}, {"original_string": "private byte buffer[];", "modifier": "private", "type": "byte", "declarator": "buffer[]", "var_name": "buffer"}, {"original_string": "private int position;", "modifier": "private", "type": "int", "declarator": "position", "var_name": "position"}], "methods": [{"identifier": "InMemoryInputStream", "parameters": "(byte[] buffer)", "modifiers": "public", "return": "", "signature": " InMemoryInputStream(byte[] buffer)", "full_signature": "public  InMemoryInputStream(byte[] buffer)", "class_method_signature": "InMemoryInputStream.InMemoryInputStream(byte[] buffer)", "testcase": false, "constructor": true}, {"identifier": "read", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int read()", "full_signature": "public final int read()", "class_method_signature": "InMemoryInputStream.read()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(byte b[])", "modifiers": "public", "return": "int", "signature": "int read(byte b[])", "full_signature": "public int read(byte b[])", "class_method_signature": "InMemoryInputStream.read(byte b[])", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(byte destination[], int destinationOffset, int destinationLength)", "modifiers": "public final", "return": "int", "signature": "int read(byte destination[], int destinationOffset, int destinationLength)", "full_signature": "public final int read(byte destination[], int destinationOffset, int destinationLength)", "class_method_signature": "InMemoryInputStream.read(byte destination[], int destinationOffset, int destinationLength)", "testcase": false, "constructor": false}, {"identifier": "skip", "parameters": "(long n)", "modifiers": "public final", "return": "long", "signature": "long skip(long n)", "full_signature": "public final long skip(long n)", "class_method_signature": "InMemoryInputStream.skip(long n)", "testcase": false, "constructor": false}, {"identifier": "available", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int available()", "full_signature": "public final int available()", "class_method_signature": "InMemoryInputStream.available()", "testcase": false, "constructor": false}, {"identifier": "mark", "parameters": "(int limit)", "modifiers": "public final", "return": "void", "signature": "void mark(int limit)", "full_signature": "public final void mark(int limit)", "class_method_signature": "InMemoryInputStream.mark(int limit)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void reset()", "full_signature": "public final void reset()", "class_method_signature": "InMemoryInputStream.reset()", "testcase": false, "constructor": false}, {"identifier": "markSupported", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean markSupported()", "full_signature": "public final boolean markSupported()", "class_method_signature": "InMemoryInputStream.markSupported()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void close()", "full_signature": "public final void close()", "class_method_signature": "InMemoryInputStream.close()", "testcase": false, "constructor": false}], "file": "reflekt/src/main/java/io/advantageous/boon/primitive/InMemoryInputStream.java"}, "focal_method": {"identifier": "read", "parameters": "()", "modifiers": "public final", "return": "int", "body": "public final int read() {\n\n        int value;\n        if (position >= buffer.length) {\n            return -1;\n        }\n        value  = buffer [position];\n        position++;\n        return value & 0xff;\n    }", "signature": "int read()", "full_signature": "public final int read()", "class_method_signature": "InMemoryInputStream.read()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 33015857, "url": "https://github.com/advantageous/boon", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 18, "size": 6174, "license": "licensed"}}