{"test_class": {"identifier": "JwtAuthenticationProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final HttpHeader VALID_AUTHORIZATION_HEADER =\n            HttpHeader.parse(\"authorization\", \"Bearer \" + VALID_JWT_TOKEN);", "modifier": "private static final", "type": "HttpHeader", "declarator": "VALID_AUTHORIZATION_HEADER =\n            HttpHeader.parse(\"authorization\", \"Bearer \" + VALID_JWT_TOKEN)", "var_name": "VALID_AUTHORIZATION_HEADER"}, {"original_string": "private static final HttpHeader INVALID_AUTHORIZATION_HEADER =\n            HttpHeader.parse(\"authorization\", \"Basic \" + VALID_JWT_TOKEN);", "modifier": "private static final", "type": "HttpHeader", "declarator": "INVALID_AUTHORIZATION_HEADER =\n            HttpHeader.parse(\"authorization\", \"Basic \" + VALID_JWT_TOKEN)", "var_name": "INVALID_AUTHORIZATION_HEADER"}, {"original_string": "@Rule public final TestName testName = new TestName();", "modifier": "@Rule public final", "type": "TestName", "declarator": "testName = new TestName()", "var_name": "testName"}, {"original_string": "@Rule public final JUnitSoftAssertions softly = new JUnitSoftAssertions();", "modifier": "@Rule public final", "type": "JUnitSoftAssertions", "declarator": "softly = new JUnitSoftAssertions()", "var_name": "softly"}, {"original_string": "@Mock private JwtAuthenticationResultProvider authenticationContextProvider;", "modifier": "@Mock private", "type": "JwtAuthenticationResultProvider", "declarator": "authenticationContextProvider", "var_name": "authenticationContextProvider"}, {"original_string": "@Mock private JwtValidator jwtValidator;", "modifier": "@Mock private", "type": "JwtValidator", "declarator": "jwtValidator", "var_name": "jwtValidator"}, {"original_string": "private DittoHeaders knownDittoHeaders;", "modifier": "private", "type": "DittoHeaders", "declarator": "knownDittoHeaders", "var_name": "knownDittoHeaders"}, {"original_string": "private JwtAuthenticationProvider underTest;", "modifier": "private", "type": "JwtAuthenticationProvider", "declarator": "underTest", "var_name": "underTest"}], "file": "services/gateway/security/src/test/java/org/eclipse/ditto/services/gateway/security/authentication/jwt/JwtAuthenticationProviderTest.java"}, "test_case": {"identifier": "toFailedAuthenticationResult", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toFailedAuthenticationResult() {\n        final DittoRuntimeException dre =\n                DittoRuntimeException.newBuilder(\"none\", HttpStatusCode.INTERNAL_SERVER_ERROR).build();\n\n        final AuthenticationResult authenticationResult =\n                underTest.toFailedAuthenticationResult(dre, knownDittoHeaders);\n\n        softly.assertThat(authenticationResult.getReasonOfFailure()).isEqualTo(dre);\n    }", "signature": "void toFailedAuthenticationResult()", "full_signature": "@Test public void toFailedAuthenticationResult()", "class_method_signature": "JwtAuthenticationProviderTest.toFailedAuthenticationResult()", "testcase": true, "constructor": false, "invocations": ["build", "newBuilder", "toFailedAuthenticationResult", "isEqualTo", "assertThat", "getReasonOfFailure"]}, "focal_class": {"identifier": "JwtAuthenticationProvider", "superclass": "extends TimeMeasuringAuthenticationProvider<AuthenticationResult>", "interfaces": "", "fields": [{"original_string": "private static final String AUTHORIZATION_JWT = \"Bearer\";", "modifier": "private static final", "type": "String", "declarator": "AUTHORIZATION_JWT = \"Bearer\"", "var_name": "AUTHORIZATION_JWT"}, {"original_string": "private static final DittoLogger LOGGER = DittoLoggerFactory.getLogger(JwtAuthenticationProvider.class);", "modifier": "private static final", "type": "DittoLogger", "declarator": "LOGGER = DittoLoggerFactory.getLogger(JwtAuthenticationProvider.class)", "var_name": "LOGGER"}, {"original_string": "private final JwtAuthenticationResultProvider jwtAuthResultProvider;", "modifier": "private final", "type": "JwtAuthenticationResultProvider", "declarator": "jwtAuthResultProvider", "var_name": "jwtAuthResultProvider"}, {"original_string": "private final JwtValidator jwtValidator;", "modifier": "private final", "type": "JwtValidator", "declarator": "jwtValidator", "var_name": "jwtValidator"}], "methods": [{"identifier": "JwtAuthenticationProvider", "parameters": "(final JwtAuthenticationResultProvider jwtAuthenticationResultProvider,\n            final JwtValidator jwtValidator)", "modifiers": "private", "return": "", "signature": " JwtAuthenticationProvider(final JwtAuthenticationResultProvider jwtAuthenticationResultProvider,\n            final JwtValidator jwtValidator)", "full_signature": "private  JwtAuthenticationProvider(final JwtAuthenticationResultProvider jwtAuthenticationResultProvider,\n            final JwtValidator jwtValidator)", "class_method_signature": "JwtAuthenticationProvider.JwtAuthenticationProvider(final JwtAuthenticationResultProvider jwtAuthenticationResultProvider,\n            final JwtValidator jwtValidator)", "testcase": false, "constructor": true}, {"identifier": "newInstance", "parameters": "(\n            final JwtAuthenticationResultProvider jwtAuthenticationResultProvider, final JwtValidator jwtValidator)", "modifiers": "public static", "return": "JwtAuthenticationProvider", "signature": "JwtAuthenticationProvider newInstance(\n            final JwtAuthenticationResultProvider jwtAuthenticationResultProvider, final JwtValidator jwtValidator)", "full_signature": "public static JwtAuthenticationProvider newInstance(\n            final JwtAuthenticationResultProvider jwtAuthenticationResultProvider, final JwtValidator jwtValidator)", "class_method_signature": "JwtAuthenticationProvider.newInstance(\n            final JwtAuthenticationResultProvider jwtAuthenticationResultProvider, final JwtValidator jwtValidator)", "testcase": false, "constructor": false}, {"identifier": "isApplicable", "parameters": "(final RequestContext requestContext)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isApplicable(final RequestContext requestContext)", "full_signature": "@Override public boolean isApplicable(final RequestContext requestContext)", "class_method_signature": "JwtAuthenticationProvider.isApplicable(final RequestContext requestContext)", "testcase": false, "constructor": false}, {"identifier": "tryToAuthenticate", "parameters": "(final RequestContext requestContext,\n            final DittoHeaders dittoHeaders)", "modifiers": "@Override protected", "return": "AuthenticationResult", "signature": "AuthenticationResult tryToAuthenticate(final RequestContext requestContext,\n            final DittoHeaders dittoHeaders)", "full_signature": "@Override protected AuthenticationResult tryToAuthenticate(final RequestContext requestContext,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "JwtAuthenticationProvider.tryToAuthenticate(final RequestContext requestContext,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "extractJwtFromRequest", "parameters": "(final RequestContext requestContext)", "modifiers": "private static", "return": "Optional<JsonWebToken>", "signature": "Optional<JsonWebToken> extractJwtFromRequest(final RequestContext requestContext)", "full_signature": "private static Optional<JsonWebToken> extractJwtFromRequest(final RequestContext requestContext)", "class_method_signature": "JwtAuthenticationProvider.extractJwtFromRequest(final RequestContext requestContext)", "testcase": false, "constructor": false}, {"identifier": "buildMissingJwtException", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "private static", "return": "DittoRuntimeException", "signature": "DittoRuntimeException buildMissingJwtException(final DittoHeaders dittoHeaders)", "full_signature": "private static DittoRuntimeException buildMissingJwtException(final DittoHeaders dittoHeaders)", "class_method_signature": "JwtAuthenticationProvider.buildMissingJwtException(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getAuthenticationResult", "parameters": "(final JsonWebToken jwt,\n            final DittoHeaders dittoHeaders)", "modifiers": "@SuppressWarnings(\"ConstantConditions\") private", "return": "CompletableFuture<AuthenticationResult>", "signature": "CompletableFuture<AuthenticationResult> getAuthenticationResult(final JsonWebToken jwt,\n            final DittoHeaders dittoHeaders)", "full_signature": "@SuppressWarnings(\"ConstantConditions\") private CompletableFuture<AuthenticationResult> getAuthenticationResult(final JsonWebToken jwt,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "JwtAuthenticationProvider.getAuthenticationResult(final JsonWebToken jwt,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "buildJwtUnauthorizedException", "parameters": "(final DittoHeaders dittoHeaders,\n            final Throwable cause)", "modifiers": "private static", "return": "DittoRuntimeException", "signature": "DittoRuntimeException buildJwtUnauthorizedException(final DittoHeaders dittoHeaders,\n            final Throwable cause)", "full_signature": "private static DittoRuntimeException buildJwtUnauthorizedException(final DittoHeaders dittoHeaders,\n            final Throwable cause)", "class_method_signature": "JwtAuthenticationProvider.buildJwtUnauthorizedException(final DittoHeaders dittoHeaders,\n            final Throwable cause)", "testcase": false, "constructor": false}, {"identifier": "tryToGetAuthenticationResult", "parameters": "(final JsonWebToken jwt, final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "AuthenticationResult", "signature": "AuthenticationResult tryToGetAuthenticationResult(final JsonWebToken jwt, final DittoHeaders dittoHeaders)", "full_signature": "private AuthenticationResult tryToGetAuthenticationResult(final JsonWebToken jwt, final DittoHeaders dittoHeaders)", "class_method_signature": "JwtAuthenticationProvider.tryToGetAuthenticationResult(final JsonWebToken jwt, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "toFailedAuthenticationResult", "parameters": "(final Throwable throwable,\n            final DittoHeaders dittoHeaders)", "modifiers": "@Override protected", "return": "AuthenticationResult", "signature": "AuthenticationResult toFailedAuthenticationResult(final Throwable throwable,\n            final DittoHeaders dittoHeaders)", "full_signature": "@Override protected AuthenticationResult toFailedAuthenticationResult(final Throwable throwable,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "JwtAuthenticationProvider.toFailedAuthenticationResult(final Throwable throwable,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "(final RequestContext requestContext)", "modifiers": "@Override public", "return": "AuthorizationContextType", "signature": "AuthorizationContextType getType(final RequestContext requestContext)", "full_signature": "@Override public AuthorizationContextType getType(final RequestContext requestContext)", "class_method_signature": "JwtAuthenticationProvider.getType(final RequestContext requestContext)", "testcase": false, "constructor": false}], "file": "services/gateway/security/src/main/java/org/eclipse/ditto/services/gateway/security/authentication/jwt/JwtAuthenticationProvider.java"}, "focal_method": {"identifier": "toFailedAuthenticationResult", "parameters": "(final Throwable throwable,\n            final DittoHeaders dittoHeaders)", "modifiers": "@Override protected", "return": "AuthenticationResult", "body": "@Override\n    protected AuthenticationResult toFailedAuthenticationResult(final Throwable throwable,\n            final DittoHeaders dittoHeaders) {\n\n        LOGGER.withCorrelationId(dittoHeaders).debug(\"JWT Authentication failed.\", throwable);\n        return DefaultAuthenticationResult.failed(dittoHeaders, toDittoRuntimeException(throwable, dittoHeaders));\n    }", "signature": "AuthenticationResult toFailedAuthenticationResult(final Throwable throwable,\n            final DittoHeaders dittoHeaders)", "full_signature": "@Override protected AuthenticationResult toFailedAuthenticationResult(final Throwable throwable,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "JwtAuthenticationProvider.toFailedAuthenticationResult(final Throwable throwable,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false, "invocations": ["debug", "withCorrelationId", "failed", "toDittoRuntimeException"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}