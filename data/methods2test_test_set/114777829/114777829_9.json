{"test_class": {"identifier": "ApacheMultiPartManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "upload/apache/src/test/java/cloud/piranha/upload/apache/ApacheMultiPartManagerTest.java"}, "test_case": {"identifier": "testGetPart", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testGetPart() throws Exception {\n        DefaultWebApplication application = new DefaultWebApplication();\n        DefaultWebApplicationRequest request = new DefaultWebApplicationRequest();\n        request.setContentType(\"multipart/form-data\");\n        request.setMethod(\"POST\");\n        ApacheMultiPartManager manager = new ApacheMultiPartManager();\n        assertNull(manager.getPart(application, request, \"part_test\"));\n    }", "signature": "void testGetPart()", "full_signature": "@Test void testGetPart()", "class_method_signature": "ApacheMultiPartManagerTest.testGetPart()", "testcase": true, "constructor": false, "invocations": ["setContentType", "setMethod", "assertNull", "getPart"]}, "focal_class": {"identifier": "ApacheMultiPartManager", "superclass": "", "interfaces": "implements MultiPartManager", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(\n            ApacheMultiPartManager.class.getPackageName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(\n            ApacheMultiPartManager.class.getPackageName())", "var_name": "LOGGER"}], "methods": [{"identifier": "getParts", "parameters": "(WebApplication webApplication,\n            WebApplicationRequest request)", "modifiers": "@Override public", "return": "Collection<Part>", "signature": "Collection<Part> getParts(WebApplication webApplication,\n            WebApplicationRequest request)", "full_signature": "@Override public Collection<Part> getParts(WebApplication webApplication,\n            WebApplicationRequest request)", "class_method_signature": "ApacheMultiPartManager.getParts(WebApplication webApplication,\n            WebApplicationRequest request)", "testcase": false, "constructor": false}, {"identifier": "getPart", "parameters": "(WebApplication webApplication,\n            WebApplicationRequest request, String name)", "modifiers": "@Override public", "return": "Part", "signature": "Part getPart(WebApplication webApplication,\n            WebApplicationRequest request, String name)", "full_signature": "@Override public Part getPart(WebApplication webApplication,\n            WebApplicationRequest request, String name)", "class_method_signature": "ApacheMultiPartManager.getPart(WebApplication webApplication,\n            WebApplicationRequest request, String name)", "testcase": false, "constructor": false}, {"identifier": "setupFileUpload", "parameters": "(WebApplication webApplication)", "modifiers": "private synchronized", "return": "ServletFileUpload", "signature": "ServletFileUpload setupFileUpload(WebApplication webApplication)", "full_signature": "private synchronized ServletFileUpload setupFileUpload(WebApplication webApplication)", "class_method_signature": "ApacheMultiPartManager.setupFileUpload(WebApplication webApplication)", "testcase": false, "constructor": false}], "file": "upload/apache/src/main/java/cloud/piranha/upload/apache/ApacheMultiPartManager.java"}, "focal_method": {"identifier": "getPart", "parameters": "(WebApplication webApplication,\n            WebApplicationRequest request, String name)", "modifiers": "@Override public", "return": "Part", "body": "@Override\n    public Part getPart(WebApplication webApplication,\n            WebApplicationRequest request, String name) throws ServletException {\n\n        ApacheMultiPart result = null;\n        LOGGER.log(FINE, \"Getting part: {0} for request: {1}\",\n                new Object[]{name, request});\n        if (ServletFileUpload.isMultipartContent(request)) {\n            try {\n                ServletFileUpload upload = setupFileUpload(webApplication);\n                List<FileItem> items = upload.parseRequest(request);\n                for (FileItem item : items) {\n                    if (item.getName().equals(name)) {\n                        result = new ApacheMultiPart(item);\n                        break;\n                    }\n                }\n            } catch (FileUploadException fue) {\n                LOGGER.log(WARNING, \"Error getting part\", fue);\n            }\n        } else {\n            throw new ServletException(\"Not a multipart/form-data request\");\n        }\n        return result;\n    }", "signature": "Part getPart(WebApplication webApplication,\n            WebApplicationRequest request, String name)", "full_signature": "@Override public Part getPart(WebApplication webApplication,\n            WebApplicationRequest request, String name)", "class_method_signature": "ApacheMultiPartManager.getPart(WebApplication webApplication,\n            WebApplicationRequest request, String name)", "testcase": false, "constructor": false, "invocations": ["log", "isMultipartContent", "setupFileUpload", "parseRequest", "equals", "getName", "log"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}