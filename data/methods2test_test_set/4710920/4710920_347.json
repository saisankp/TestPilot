{"test_class": {"identifier": "MemoryStatusCheckerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(MemoryStatusCheckerTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(MemoryStatusCheckerTest.class)", "var_name": "logger"}], "file": "dubbo-common/src/test/java/org/apache/dubbo/common/status/support/MemoryStatusCheckerTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test() throws Exception {\n        MemoryStatusChecker statusChecker = new MemoryStatusChecker();\n        Status status = statusChecker.check();\n        assertThat(status.getLevel(), anyOf(is(OK), is(WARN)));\n        logger.info(\"memory status level: \" + status.getLevel());\n        logger.info(\"memory status message: \" + status.getMessage());\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "MemoryStatusCheckerTest.test()", "testcase": true, "constructor": false, "invocations": ["check", "assertThat", "getLevel", "anyOf", "is", "is", "info", "getLevel", "info", "getMessage"]}, "focal_class": {"identifier": "MemoryStatusChecker", "superclass": "", "interfaces": "implements StatusChecker", "fields": [], "methods": [{"identifier": "check", "parameters": "()", "modifiers": "@Override public", "return": "Status", "signature": "Status check()", "full_signature": "@Override public Status check()", "class_method_signature": "MemoryStatusChecker.check()", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/org/apache/dubbo/common/status/support/MemoryStatusChecker.java"}, "focal_method": {"identifier": "check", "parameters": "()", "modifiers": "@Override public", "return": "Status", "body": "@Override\n    public Status check() {\n        Runtime runtime = Runtime.getRuntime();\n        long freeMemory = runtime.freeMemory();\n        long totalMemory = runtime.totalMemory();\n        long maxMemory = runtime.maxMemory();\n        boolean ok = (maxMemory - (totalMemory - freeMemory) > 2048); // Alarm when spare memory < 2M\n        String msg = \"max:\" + (maxMemory / 1024 / 1024) + \"M,total:\"\n                + (totalMemory / 1024 / 1024) + \"M,used:\" + ((totalMemory / 1024 / 1024) - (freeMemory / 1024 / 1024)) + \"M,free:\" + (freeMemory / 1024 / 1024) + \"M\";\n        return new Status(ok ? Status.Level.OK : Status.Level.WARN, msg);\n    }", "signature": "Status check()", "full_signature": "@Override public Status check()", "class_method_signature": "MemoryStatusChecker.check()", "testcase": false, "constructor": false, "invocations": ["getRuntime", "freeMemory", "totalMemory", "maxMemory"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}