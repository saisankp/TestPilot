{"test_class": {"identifier": "ParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/uk/ac/ebi/beam/ParserTest.java"}, "test_case": {"identifier": "tellurium", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void tellurium() throws IOException {\n        Graph g = Parser.losse(\"[te]\");\n        assertTrue(g.atom(0).aromatic());\n        assertThat(g.atom(0).element(), is(Element.Tellurium));\n    }", "signature": "void tellurium()", "full_signature": "@Test public void tellurium()", "class_method_signature": "ParserTest.tellurium()", "testcase": true, "constructor": false, "invocations": ["losse", "assertTrue", "aromatic", "atom", "assertThat", "element", "atom", "is"]}, "focal_class": {"identifier": "Parser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final IntStack stack = new IntStack(10);", "modifier": "private final", "type": "IntStack", "declarator": "stack = new IntStack(10)", "var_name": "stack"}, {"original_string": "private final Graph g;", "modifier": "private final", "type": "Graph", "declarator": "g", "var_name": "g"}, {"original_string": "private RingBond[] rings = new RingBond[10];", "modifier": "private", "type": "RingBond[]", "declarator": "rings = new RingBond[10]", "var_name": "rings"}, {"original_string": "private Map<Integer, LocalArrangement> arrangement\n            = new HashMap<Integer, LocalArrangement>(5);", "modifier": "private", "type": "Map<Integer, LocalArrangement>", "declarator": "arrangement\n            = new HashMap<Integer, LocalArrangement>(5)", "var_name": "arrangement"}, {"original_string": "private Map<Integer, Configuration> configurations\n            = new HashMap<Integer, Configuration>(5);", "modifier": "private", "type": "Map<Integer, Configuration>", "declarator": "configurations\n            = new HashMap<Integer, Configuration>(5)", "var_name": "configurations"}, {"original_string": "private Bond bond = Bond.IMPLICIT;", "modifier": "private", "type": "Bond", "declarator": "bond = Bond.IMPLICIT", "var_name": "bond"}, {"original_string": "private Configuration configuration = Configuration.UNKNOWN;", "modifier": "private", "type": "Configuration", "declarator": "configuration = Configuration.UNKNOWN", "var_name": "configuration"}, {"original_string": "private Set<Integer> start = new TreeSet<Integer>();", "modifier": "private", "type": "Set<Integer>", "declarator": "start = new TreeSet<Integer>()", "var_name": "start"}, {"original_string": "private int openRings = 0;", "modifier": "private", "type": "int", "declarator": "openRings = 0", "var_name": "openRings"}, {"original_string": "private final boolean strict;", "modifier": "private final", "type": "boolean", "declarator": "strict", "var_name": "strict"}, {"original_string": "private BitSet checkDirectionalBonds = new BitSet();", "modifier": "private", "type": "BitSet", "declarator": "checkDirectionalBonds = new BitSet()", "var_name": "checkDirectionalBonds"}, {"original_string": "private int lastBondPos = -1;", "modifier": "private", "type": "int", "declarator": "lastBondPos = -1", "var_name": "lastBondPos"}, {"original_string": "private Map<Edge,Integer> bondStrPos = new HashMap<>();", "modifier": "private", "type": "Map<Edge,Integer>", "declarator": "bondStrPos = new HashMap<>()", "var_name": "bondStrPos"}, {"original_string": "private List<String> warnings = new ArrayList<>();", "modifier": "private", "type": "List<String>", "declarator": "warnings = new ArrayList<>()", "var_name": "warnings"}, {"original_string": "private boolean hasAstrix = false;", "modifier": "private", "type": "boolean", "declarator": "hasAstrix = false", "var_name": "hasAstrix"}], "methods": [{"identifier": "Parser", "parameters": "(CharBuffer buffer, boolean strict)", "modifiers": "", "return": "", "signature": " Parser(CharBuffer buffer, boolean strict)", "full_signature": "  Parser(CharBuffer buffer, boolean strict)", "class_method_signature": "Parser.Parser(CharBuffer buffer, boolean strict)", "testcase": false, "constructor": true}, {"identifier": "Parser", "parameters": "(String str)", "modifiers": "", "return": "", "signature": " Parser(String str)", "full_signature": "  Parser(String str)", "class_method_signature": "Parser.Parser(String str)", "testcase": false, "constructor": true}, {"identifier": "strict", "parameters": "(String str)", "modifiers": "static", "return": "Graph", "signature": "Graph strict(String str)", "full_signature": "static Graph strict(String str)", "class_method_signature": "Parser.strict(String str)", "testcase": false, "constructor": false}, {"identifier": "losse", "parameters": "(String str)", "modifiers": "static", "return": "Graph", "signature": "Graph losse(String str)", "full_signature": "static Graph losse(String str)", "class_method_signature": "Parser.losse(String str)", "testcase": false, "constructor": false}, {"identifier": "molecule", "parameters": "()", "modifiers": "", "return": "Graph", "signature": "Graph molecule()", "full_signature": " Graph molecule()", "class_method_signature": "Parser.molecule()", "testcase": false, "constructor": false}, {"identifier": "createTopologies", "parameters": "(CharBuffer buffer)", "modifiers": "private", "return": "void", "signature": "void createTopologies(CharBuffer buffer)", "full_signature": "private void createTopologies(CharBuffer buffer)", "class_method_signature": "Parser.createTopologies(CharBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "getEdges", "parameters": "(LocalArrangement localArrangement, int u)", "modifiers": "public", "return": "List<Edge>", "signature": "List<Edge> getEdges(LocalArrangement localArrangement, int u)", "full_signature": "public List<Edge> getEdges(LocalArrangement localArrangement, int u)", "class_method_signature": "Parser.getEdges(LocalArrangement localArrangement, int u)", "testcase": false, "constructor": false}, {"identifier": "getOtherDb", "parameters": "(int u, int v)", "modifiers": "private", "return": "int", "signature": "int getOtherDb(int u, int v)", "full_signature": "private int getOtherDb(int u, int v)", "class_method_signature": "Parser.getOtherDb(int u, int v)", "testcase": false, "constructor": false}, {"identifier": "findExtendedTetrahedralEnds", "parameters": "(int focus)", "modifiers": "private", "return": "int[]", "signature": "int[] findExtendedTetrahedralEnds(int focus)", "full_signature": "private int[] findExtendedTetrahedralEnds(int focus)", "class_method_signature": "Parser.findExtendedTetrahedralEnds(int focus)", "testcase": false, "constructor": false}, {"identifier": "getLocalEdges", "parameters": "(int end)", "modifiers": "private", "return": "List<Edge>", "signature": "List<Edge> getLocalEdges(int end)", "full_signature": "private List<Edge> getLocalEdges(int end)", "class_method_signature": "Parser.getLocalEdges(int end)", "testcase": false, "constructor": false}, {"identifier": "getAlleneCarriers", "parameters": "(int focus)", "modifiers": "public", "return": "int[]", "signature": "int[] getAlleneCarriers(int focus)", "full_signature": "public int[] getAlleneCarriers(int focus)", "class_method_signature": "Parser.getAlleneCarriers(int focus)", "testcase": false, "constructor": false}, {"identifier": "addTopology", "parameters": "(int u, Configuration c)", "modifiers": "private", "return": "void", "signature": "void addTopology(int u, Configuration c)", "full_signature": "private void addTopology(int u, Configuration c)", "class_method_signature": "Parser.addTopology(int u, Configuration c)", "testcase": false, "constructor": false}, {"identifier": "insertThImplicitRef", "parameters": "(int u, int[] vs)", "modifiers": "private", "return": "int[]", "signature": "int[] insertThImplicitRef(int u, int[] vs)", "full_signature": "private int[] insertThImplicitRef(int u, int[] vs)", "class_method_signature": "Parser.insertThImplicitRef(int u, int[] vs)", "testcase": false, "constructor": false}, {"identifier": "insertDbImplicitRef", "parameters": "(int u, int[] vs)", "modifiers": "private", "return": "int[]", "signature": "int[] insertDbImplicitRef(int u, int[] vs)", "full_signature": "private int[] insertDbImplicitRef(int u, int[] vs)", "class_method_signature": "Parser.insertDbImplicitRef(int u, int[] vs)", "testcase": false, "constructor": false}, {"identifier": "addAtom", "parameters": "(Atom a, CharBuffer buffer)", "modifiers": "private", "return": "void", "signature": "void addAtom(Atom a, CharBuffer buffer)", "full_signature": "private void addAtom(Atom a, CharBuffer buffer)", "class_method_signature": "Parser.addAtom(Atom a, CharBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "readSmiles", "parameters": "(final CharBuffer buffer)", "modifiers": "private", "return": "void", "signature": "void readSmiles(final CharBuffer buffer)", "full_signature": "private void readSmiles(final CharBuffer buffer)", "class_method_signature": "Parser.readSmiles(final CharBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "readBracketAtom", "parameters": "(final CharBuffer buffer)", "modifiers": "", "return": "Atom", "signature": "Atom readBracketAtom(final CharBuffer buffer)", "full_signature": " Atom readBracketAtom(final CharBuffer buffer)", "class_method_signature": "Parser.readBracketAtom(final CharBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "readHydrogens", "parameters": "(final CharBuffer buffer)", "modifiers": "static", "return": "int", "signature": "int readHydrogens(final CharBuffer buffer)", "full_signature": "static int readHydrogens(final CharBuffer buffer)", "class_method_signature": "Parser.readHydrogens(final CharBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "readCharge", "parameters": "(final CharBuffer buffer)", "modifiers": "static", "return": "int", "signature": "int readCharge(final CharBuffer buffer)", "full_signature": "static int readCharge(final CharBuffer buffer)", "class_method_signature": "Parser.readCharge(final CharBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "readCharge", "parameters": "(int acc, final CharBuffer buffer)", "modifiers": "private static", "return": "int", "signature": "int readCharge(int acc, final CharBuffer buffer)", "full_signature": "private static int readCharge(int acc, final CharBuffer buffer)", "class_method_signature": "Parser.readCharge(int acc, final CharBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "readClass", "parameters": "(CharBuffer buffer)", "modifiers": "static", "return": "int", "signature": "int readClass(CharBuffer buffer)", "full_signature": "static int readClass(CharBuffer buffer)", "class_method_signature": "Parser.readClass(CharBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "ring", "parameters": "(int rnum, CharBuffer buffer)", "modifiers": "private", "return": "void", "signature": "void ring(int rnum, CharBuffer buffer)", "full_signature": "private void ring(int rnum, CharBuffer buffer)", "class_method_signature": "Parser.ring(int rnum, CharBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "openRing", "parameters": "(int rnum, CharBuffer buf)", "modifiers": "private", "return": "void", "signature": "void openRing(int rnum, CharBuffer buf)", "full_signature": "private void openRing(int rnum, CharBuffer buf)", "class_method_signature": "Parser.openRing(int rnum, CharBuffer buf)", "testcase": false, "constructor": false}, {"identifier": "createArrangement", "parameters": "(int u)", "modifiers": "private", "return": "LocalArrangement", "signature": "LocalArrangement createArrangement(int u)", "full_signature": "private LocalArrangement createArrangement(int u)", "class_method_signature": "Parser.createArrangement(int u)", "testcase": false, "constructor": false}, {"identifier": "closeRing", "parameters": "(int rnum, CharBuffer buffer)", "modifiers": "private", "return": "void", "signature": "void closeRing(int rnum, CharBuffer buffer)", "full_signature": "private void closeRing(int rnum, CharBuffer buffer)", "class_method_signature": "Parser.closeRing(int rnum, CharBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "decideBond", "parameters": "(final Bond a, final Bond b, int pos, CharBuffer buffer)", "modifiers": "", "return": "Bond", "signature": "Bond decideBond(final Bond a, final Bond b, int pos, CharBuffer buffer)", "full_signature": " Bond decideBond(final Bond a, final Bond b, int pos, CharBuffer buffer)", "class_method_signature": "Parser.decideBond(final Bond a, final Bond b, int pos, CharBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String str)", "modifiers": "static", "return": "Graph", "signature": "Graph parse(String str)", "full_signature": "static Graph parse(String str)", "class_method_signature": "Parser.parse(String str)", "testcase": false, "constructor": false}, {"identifier": "getWarnings", "parameters": "()", "modifiers": "public", "return": "Collection<? extends String>", "signature": "Collection<? extends String> getWarnings()", "full_signature": "public Collection<? extends String> getWarnings()", "class_method_signature": "Parser.getWarnings()", "testcase": false, "constructor": false}], "file": "core/src/main/java/uk/ac/ebi/beam/Parser.java"}, "focal_method": {"identifier": "losse", "parameters": "(String str)", "modifiers": "static", "return": "Graph", "body": "static Graph losse(String str) throws InvalidSmilesException {\n        return new Parser(CharBuffer.fromString(str), false).molecule();\n    }", "signature": "Graph losse(String str)", "full_signature": "static Graph losse(String str)", "class_method_signature": "Parser.losse(String str)", "testcase": false, "constructor": false, "invocations": ["molecule", "fromString"]}, "repository": {"repo_id": 12061606, "url": "https://github.com/johnmay/beam", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 19, "size": 825, "license": "licensed"}}