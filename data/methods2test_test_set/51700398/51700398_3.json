{"test_class": {"identifier": "RateControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@MockBean\n\tprivate RateService rateService;", "modifier": "@MockBean\n\tprivate", "type": "RateService", "declarator": "rateService", "var_name": "rateService"}, {"original_string": "@Autowired\n\tprivate MockMvc mvc;", "modifier": "@Autowired\n\tprivate", "type": "MockMvc", "declarator": "mvc", "var_name": "mvc"}], "file": "trading-webapp/src/test/java/fr/ymanvieu/trading/webapp/rate/controller/RateControllerTest.java"}, "test_case": {"identifier": "testFindHistoricalValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testFindHistoricalValues() throws Exception {\n\t\t// GIVEN\n\t\tList<DateValue> histo = asList(\n\t\t\t\tnew DateValueImpl().setDate(Instant.now()).setValue(123.789d),\n\t\t\t\tnew DateValueImpl().setDate(Instant.now()).setValue(12d));\n\t\t\n\t\twhen(rateService.getHistoricalValues(eq(\"USD\"), eq(\"EUR\"), any(), any())).thenReturn(histo);\n\t\t\n\t\t// WHEN\n\t\tmvc.perform(get(\"/api/rate/history\")\n\t\t\t\t.param(\"fromcur\", \"USD\")\n\t\t\t\t.param(\"tocur\", \"EUR\"))\n\t\t.andExpect(jsonPath(\"$[0][0]\").value(histo.get(0).getDate().toEpochMilli()))\n\t\t.andExpect(jsonPath(\"$[0][1]\").value(histo.get(0).getValue()))\n\t\t.andExpect(jsonPath(\"$[1][0]\").value(histo.get(1).getDate().toEpochMilli()))\n\t\t.andExpect(jsonPath(\"$[1][1]\").value(histo.get(1).getValue()));\n\t}", "signature": "void testFindHistoricalValues()", "full_signature": "@Test public void testFindHistoricalValues()", "class_method_signature": "RateControllerTest.testFindHistoricalValues()", "testcase": true, "constructor": false, "invocations": ["asList", "setValue", "setDate", "now", "setValue", "setDate", "now", "thenReturn", "when", "getHistoricalValues", "eq", "eq", "any", "any", "andExpect", "andExpect", "andExpect", "andExpect", "perform", "param", "param", "get", "value", "jsonPath", "toEpochMilli", "getDate", "get", "value", "jsonPath", "getValue", "get", "value", "jsonPath", "toEpochMilli", "getDate", "get", "value", "jsonPath", "getValue", "get"]}, "focal_class": {"identifier": "RateController", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate RateService rateService;", "modifier": "@Autowired\n\tprivate", "type": "RateService", "declarator": "rateService", "var_name": "rateService"}, {"original_string": "@Autowired\n\tprivate RateDTOMapper rateMapper;", "modifier": "@Autowired\n\tprivate", "type": "RateDTOMapper", "declarator": "rateMapper", "var_name": "rateMapper"}, {"original_string": "@Autowired\n\tprivate DateValueMapper dateValueMapper;", "modifier": "@Autowired\n\tprivate", "type": "DateValueMapper", "declarator": "dateValueMapper", "var_name": "dateValueMapper"}], "methods": [{"identifier": "findAllLatest", "parameters": "(Principal p)", "modifiers": "@GetMapping(\"/latest\") public", "return": "List<RateDTO>", "signature": "List<RateDTO> findAllLatest(Principal p)", "full_signature": "@GetMapping(\"/latest\") public List<RateDTO> findAllLatest(Principal p)", "class_method_signature": "RateController.findAllLatest(Principal p)", "testcase": false, "constructor": false}, {"identifier": "findLatest", "parameters": "(@RequestParam String fromcur, @RequestParam String tocur)", "modifiers": "@GetMapping(path = \"/latest\", params = { \"fromcur\", \"tocur\" }) public", "return": "RateDTO", "signature": "RateDTO findLatest(@RequestParam String fromcur, @RequestParam String tocur)", "full_signature": "@GetMapping(path = \"/latest\", params = { \"fromcur\", \"tocur\" }) public RateDTO findLatest(@RequestParam String fromcur, @RequestParam String tocur)", "class_method_signature": "RateController.findLatest(@RequestParam String fromcur, @RequestParam String tocur)", "testcase": false, "constructor": false}, {"identifier": "findHistoricalValues", "parameters": "(@RequestParam String fromcur, @RequestParam String tocur, \n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant startDate,\n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant endDate)", "modifiers": "@GetMapping(\"/history\") public", "return": "List<DateValueDTO>", "signature": "List<DateValueDTO> findHistoricalValues(@RequestParam String fromcur, @RequestParam String tocur, \n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant startDate,\n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant endDate)", "full_signature": "@GetMapping(\"/history\") public List<DateValueDTO> findHistoricalValues(@RequestParam String fromcur, @RequestParam String tocur, \n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant startDate,\n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant endDate)", "class_method_signature": "RateController.findHistoricalValues(@RequestParam String fromcur, @RequestParam String tocur, \n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant startDate,\n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant endDate)", "testcase": false, "constructor": false}], "file": "trading-webapp/src/main/java/fr/ymanvieu/trading/webapp/rate/controller/RateController.java"}, "focal_method": {"identifier": "findHistoricalValues", "parameters": "(@RequestParam String fromcur, @RequestParam String tocur, \n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant startDate,\n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant endDate)", "modifiers": "@GetMapping(\"/history\") public", "return": "List<DateValueDTO>", "body": "@GetMapping(\"/history\")\n\tpublic List<DateValueDTO> findHistoricalValues(@RequestParam String fromcur, @RequestParam String tocur, \n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant startDate,\n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant endDate) {\n\n\t\tif (startDate == null) {\n\t\t\tstartDate = rateService.getOldestRateDate(fromcur, tocur);\n\t\t}\n\n\t\tif (endDate == null) {\n\t\t\tendDate = rateService.getNewestRateDate(fromcur, tocur);\n\t\t}\n\n\t\treturn dateValueMapper.toDateValueDto(rateService.getHistoricalValues(fromcur, tocur, startDate, endDate));\n\t}", "signature": "List<DateValueDTO> findHistoricalValues(@RequestParam String fromcur, @RequestParam String tocur, \n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant startDate,\n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant endDate)", "full_signature": "@GetMapping(\"/history\") public List<DateValueDTO> findHistoricalValues(@RequestParam String fromcur, @RequestParam String tocur, \n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant startDate,\n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant endDate)", "class_method_signature": "RateController.findHistoricalValues(@RequestParam String fromcur, @RequestParam String tocur, \n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant startDate,\n\t\t\t@DateTimeFormat(iso = ISO.DATE_TIME) Instant endDate)", "testcase": false, "constructor": false, "invocations": ["getOldestRateDate", "getNewestRateDate", "toDateValueDto", "getHistoricalValues"]}, "repository": {"repo_id": 51700398, "url": "https://github.com/ymanvieu/trading", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 988, "license": "licensed"}}