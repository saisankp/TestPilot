{"test_class": {"identifier": "DefaultValueMapTraversalTest", "superclass": "extends AbstractTraversalTest", "interfaces": "", "fields": [], "file": "artemis-graph/src/test/java/org/jnosql/artemis/graph/DefaultValueMapTraversalTest.java"}, "test_case": {"identifier": "shouldReturnMapValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnMapValues() {\n        List<String> names = graphTemplate.getTraversalVertex()\n                .hasLabel(Person.class).valueMap(\"name\")\n                .stream()\n                .map(m -> m.getOrDefault(\"name\", \"\").toString()).collect(Collectors.toList());\n\n\n        assertThat(names, Matchers.containsInAnyOrder(\"[Poliana]\", \"[Otavio]\", \"[Paulo]\"));\n    }", "signature": "void shouldReturnMapValues()", "full_signature": "@Test public void shouldReturnMapValues()", "class_method_signature": "DefaultValueMapTraversalTest.shouldReturnMapValues()", "testcase": true, "constructor": false, "invocations": ["collect", "map", "stream", "valueMap", "hasLabel", "getTraversalVertex", "toString", "getOrDefault", "toList", "assertThat", "containsInAnyOrder"]}, "focal_class": {"identifier": "DefaultValueMapTraversal", "superclass": "", "interfaces": "implements ValueMapTraversal", "fields": [{"original_string": "private final Supplier<GraphTraversal<?, ?>> supplier;", "modifier": "private final", "type": "Supplier<GraphTraversal<?, ?>>", "declarator": "supplier", "var_name": "supplier"}, {"original_string": "private final Function<GraphTraversal<?, ?>, GraphTraversal<Vertex, Map<String, Object>>> flow;", "modifier": "private final", "type": "Function<GraphTraversal<?, ?>, GraphTraversal<Vertex, Map<String, Object>>>", "declarator": "flow", "var_name": "flow"}], "methods": [{"identifier": "DefaultValueMapTraversal", "parameters": "(Supplier<GraphTraversal<?, ?>> supplier, Function<GraphTraversal<?, ?>,\n            GraphTraversal<Vertex, Map<String, Object>>> flow)", "modifiers": "", "return": "", "signature": " DefaultValueMapTraversal(Supplier<GraphTraversal<?, ?>> supplier, Function<GraphTraversal<?, ?>,\n            GraphTraversal<Vertex, Map<String, Object>>> flow)", "full_signature": "  DefaultValueMapTraversal(Supplier<GraphTraversal<?, ?>> supplier, Function<GraphTraversal<?, ?>,\n            GraphTraversal<Vertex, Map<String, Object>>> flow)", "class_method_signature": "DefaultValueMapTraversal.DefaultValueMapTraversal(Supplier<GraphTraversal<?, ?>> supplier, Function<GraphTraversal<?, ?>,\n            GraphTraversal<Vertex, Map<String, Object>>> flow)", "testcase": false, "constructor": true}, {"identifier": "stream", "parameters": "()", "modifiers": "@Override public", "return": "Stream<Map<String, Object>>", "signature": "Stream<Map<String, Object>> stream()", "full_signature": "@Override public Stream<Map<String, Object>> stream()", "class_method_signature": "DefaultValueMapTraversal.stream()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "(int limit)", "modifiers": "@Override public", "return": "Stream<Map<String, Object>>", "signature": "Stream<Map<String, Object>> next(int limit)", "full_signature": "@Override public Stream<Map<String, Object>> next(int limit)", "class_method_signature": "DefaultValueMapTraversal.next(int limit)", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Object>", "signature": "Map<String, Object> next()", "full_signature": "@Override public Map<String, Object> next()", "class_method_signature": "DefaultValueMapTraversal.next()", "testcase": false, "constructor": false}, {"identifier": "getSingleResult", "parameters": "()", "modifiers": "@Override public", "return": "Optional<Map<String, Object>>", "signature": "Optional<Map<String, Object>> getSingleResult()", "full_signature": "@Override public Optional<Map<String, Object>> getSingleResult()", "class_method_signature": "DefaultValueMapTraversal.getSingleResult()", "testcase": false, "constructor": false}, {"identifier": "getResultList", "parameters": "()", "modifiers": "@Override public", "return": "List<Map<String, Object>>", "signature": "List<Map<String, Object>> getResultList()", "full_signature": "@Override public List<Map<String, Object>> getResultList()", "class_method_signature": "DefaultValueMapTraversal.getResultList()", "testcase": false, "constructor": false}, {"identifier": "count", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long count()", "full_signature": "@Override public long count()", "class_method_signature": "DefaultValueMapTraversal.count()", "testcase": false, "constructor": false}], "file": "artemis-graph/src/main/java/org/jnosql/artemis/graph/DefaultValueMapTraversal.java"}, "focal_method": {"identifier": "stream", "parameters": "()", "modifiers": "@Override public", "return": "Stream<Map<String, Object>>", "body": "@Override\n    public Stream<Map<String, Object>> stream() {\n        return flow.apply(supplier.get()).toList().stream();\n    }", "signature": "Stream<Map<String, Object>> stream()", "full_signature": "@Override public Stream<Map<String, Object>> stream()", "class_method_signature": "DefaultValueMapTraversal.stream()", "testcase": false, "constructor": false, "invocations": ["stream", "toList", "apply", "get"]}, "repository": {"repo_id": 67588628, "url": "https://github.com/eclipse/jnosql-artemis", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 43, "size": 2612, "license": "licensed"}}