{"test_class": {"identifier": "PipInstalledPackageTest", "superclass": "", "interfaces": "", "fields": [], "file": "lang-python/src/test/java/org/eclipse/steady/python/pip/PipInstalledPackageTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEquals() {\n    PipInstalledPackage p1 = new PipInstalledPackage(\"abc-XYZ#\", \"1.0\");\n    PipInstalledPackage p2 = new PipInstalledPackage(\"ABC_xyz$\", \"2.0\");\n\n    assertFalse(p1.equals(p2));\n    assertTrue(p1.equalsStandardDistributionName(p2));\n  }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "PipInstalledPackageTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "equals", "assertTrue", "equalsStandardDistributionName"]}, "focal_class": {"identifier": "PipInstalledPackage", "superclass": "", "interfaces": "implements Comparable", "fields": [{"original_string": "private static final Logger log = org.apache.logging.log4j.LogManager.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "log = org.apache.logging.log4j.LogManager.getLogger()", "var_name": "log"}, {"original_string": "private static final String LOCATION = \"Location\";", "modifier": "private static final", "type": "String", "declarator": "LOCATION = \"Location\"", "var_name": "LOCATION"}, {"original_string": "private static final String REQUIRES = \"Requires\";", "modifier": "private static final", "type": "String", "declarator": "REQUIRES = \"Requires\"", "var_name": "REQUIRES"}, {"original_string": "private String name = null;", "modifier": "private", "type": "String", "declarator": "name = null", "var_name": "name"}, {"original_string": "private String version = null;", "modifier": "private", "type": "String", "declarator": "version = null", "var_name": "version"}, {"original_string": "private Map<String, String> properties = new HashMap<String, String>();", "modifier": "private", "type": "Map<String, String>", "declarator": "properties = new HashMap<String, String>()", "var_name": "properties"}, {"original_string": "private String digest = null;", "modifier": "private", "type": "String", "declarator": "digest = null", "var_name": "digest"}, {"original_string": "private Map<ConstructId, Construct> constructs = null;", "modifier": "private", "type": "Map<ConstructId, Construct>", "declarator": "constructs = null", "var_name": "constructs"}, {"original_string": "private String downloadUrl = null;", "modifier": "private", "type": "String", "declarator": "downloadUrl = null", "var_name": "downloadUrl"}, {"original_string": "private Path downloadPath = null;", "modifier": "private", "type": "Path", "declarator": "downloadPath = null", "var_name": "downloadPath"}, {"original_string": "private Path eggFile = null;", "modifier": "private", "type": "Path", "declarator": "eggFile = null", "var_name": "eggFile"}, {"original_string": "private Path pyFile = null;", "modifier": "private", "type": "Path", "declarator": "pyFile = null", "var_name": "pyFile"}, {"original_string": "private Path pyDir = null;", "modifier": "private", "type": "Path", "declarator": "pyDir = null", "var_name": "pyDir"}, {"original_string": "private FileAnalyzer fileAnalyzer = null;", "modifier": "private", "type": "FileAnalyzer", "declarator": "fileAnalyzer = null", "var_name": "fileAnalyzer"}], "methods": [{"identifier": "PipInstalledPackage", "parameters": "(String _name, String _version)", "modifiers": "public", "return": "", "signature": " PipInstalledPackage(String _name, String _version)", "full_signature": "public  PipInstalledPackage(String _name, String _version)", "class_method_signature": "PipInstalledPackage.PipInstalledPackage(String _name, String _version)", "testcase": false, "constructor": true}, {"identifier": "getProperties", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getProperties()", "full_signature": "public Map<String, String> getProperties()", "class_method_signature": "PipInstalledPackage.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getInstallPath", "parameters": "()", "modifiers": "public", "return": "Path", "signature": "Path getInstallPath()", "full_signature": "public Path getInstallPath()", "class_method_signature": "PipInstalledPackage.getInstallPath()", "testcase": false, "constructor": false}, {"identifier": "getDownloadUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDownloadUrl()", "full_signature": "public String getDownloadUrl()", "class_method_signature": "PipInstalledPackage.getDownloadUrl()", "testcase": false, "constructor": false}, {"identifier": "setDownloadUrl", "parameters": "(String downloadUrl)", "modifiers": "public", "return": "void", "signature": "void setDownloadUrl(String downloadUrl)", "full_signature": "public void setDownloadUrl(String downloadUrl)", "class_method_signature": "PipInstalledPackage.setDownloadUrl(String downloadUrl)", "testcase": false, "constructor": false}, {"identifier": "getDownloadPath", "parameters": "()", "modifiers": "public", "return": "Path", "signature": "Path getDownloadPath()", "full_signature": "public Path getDownloadPath()", "class_method_signature": "PipInstalledPackage.getDownloadPath()", "testcase": false, "constructor": false}, {"identifier": "setDownloadPath", "parameters": "(Path downloadPath)", "modifiers": "public", "return": "void", "signature": "void setDownloadPath(Path downloadPath)", "full_signature": "public void setDownloadPath(Path downloadPath)", "class_method_signature": "PipInstalledPackage.setDownloadPath(Path downloadPath)", "testcase": false, "constructor": false}, {"identifier": "getLibrary", "parameters": "()", "modifiers": "public", "return": "Library", "signature": "Library getLibrary()", "full_signature": "public Library getLibrary()", "class_method_signature": "PipInstalledPackage.getLibrary()", "testcase": false, "constructor": false}, {"identifier": "requires", "parameters": "(PipInstalledPackage _pack)", "modifiers": "public", "return": "boolean", "signature": "boolean requires(PipInstalledPackage _pack)", "full_signature": "public boolean requires(PipInstalledPackage _pack)", "class_method_signature": "PipInstalledPackage.requires(PipInstalledPackage _pack)", "testcase": false, "constructor": false}, {"identifier": "addProperties", "parameters": "(Map<String, String> properties)", "modifiers": "public", "return": "void", "signature": "void addProperties(Map<String, String> properties)", "full_signature": "public void addProperties(Map<String, String> properties)", "class_method_signature": "PipInstalledPackage.addProperties(Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "PipInstalledPackage.getName()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "PipInstalledPackage.getVersion()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PipInstalledPackage.toString()", "testcase": false, "constructor": false}, {"identifier": "getDigest", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDigest()", "full_signature": "public String getDigest()", "class_method_signature": "PipInstalledPackage.getDigest()", "testcase": false, "constructor": false}, {"identifier": "getConstructs", "parameters": "()", "modifiers": "private", "return": "Map<ConstructId, Construct>", "signature": "Map<ConstructId, Construct> getConstructs()", "full_signature": "private Map<ConstructId, Construct> getConstructs()", "class_method_signature": "PipInstalledPackage.getConstructs()", "testcase": false, "constructor": false}, {"identifier": "getNestedArchives", "parameters": "()", "modifiers": "public", "return": "Set<FileAnalyzer>", "signature": "Set<FileAnalyzer> getNestedArchives()", "full_signature": "public Set<FileAnalyzer> getNestedArchives()", "class_method_signature": "PipInstalledPackage.getNestedArchives()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Object _other)", "modifiers": "public", "return": "int", "signature": "int compareTo(Object _other)", "full_signature": "public int compareTo(Object _other)", "class_method_signature": "PipInstalledPackage.compareTo(Object _other)", "testcase": false, "constructor": false}, {"identifier": "searchEgg", "parameters": "()", "modifiers": "private", "return": "Path", "signature": "Path searchEgg()", "full_signature": "private Path searchEgg()", "class_method_signature": "PipInstalledPackage.searchEgg()", "testcase": false, "constructor": false}, {"identifier": "searchPyFile", "parameters": "()", "modifiers": "private", "return": "Path", "signature": "Path searchPyFile()", "full_signature": "private Path searchPyFile()", "class_method_signature": "PipInstalledPackage.searchPyFile()", "testcase": false, "constructor": false}, {"identifier": "searchPyDir", "parameters": "()", "modifiers": "private", "return": "Path", "signature": "Path searchPyDir()", "full_signature": "private Path searchPyDir()", "class_method_signature": "PipInstalledPackage.searchPyDir()", "testcase": false, "constructor": false}, {"identifier": "filterUsingArtifact", "parameters": "(\n      Set<PipInstalledPackage> _packages, StringList _filter, boolean _include)", "modifiers": "public static", "return": "Set<PipInstalledPackage>", "signature": "Set<PipInstalledPackage> filterUsingArtifact(\n      Set<PipInstalledPackage> _packages, StringList _filter, boolean _include)", "full_signature": "public static Set<PipInstalledPackage> filterUsingArtifact(\n      Set<PipInstalledPackage> _packages, StringList _filter, boolean _include)", "class_method_signature": "PipInstalledPackage.filterUsingArtifact(\n      Set<PipInstalledPackage> _packages, StringList _filter, boolean _include)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PipInstalledPackage.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "PipInstalledPackage.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "getStandardDistributionName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getStandardDistributionName()", "full_signature": "public String getStandardDistributionName()", "class_method_signature": "PipInstalledPackage.getStandardDistributionName()", "testcase": false, "constructor": false}, {"identifier": "getStandardDistributionName", "parameters": "(String _name)", "modifiers": "public static", "return": "String", "signature": "String getStandardDistributionName(String _name)", "full_signature": "public static String getStandardDistributionName(String _name)", "class_method_signature": "PipInstalledPackage.getStandardDistributionName(String _name)", "testcase": false, "constructor": false}, {"identifier": "equalsStandardDistributionName", "parameters": "(PipInstalledPackage _other)", "modifiers": "public", "return": "boolean", "signature": "boolean equalsStandardDistributionName(PipInstalledPackage _other)", "full_signature": "public boolean equalsStandardDistributionName(PipInstalledPackage _other)", "class_method_signature": "PipInstalledPackage.equalsStandardDistributionName(PipInstalledPackage _other)", "testcase": false, "constructor": false}], "file": "lang-python/src/main/java/org/eclipse/steady/python/pip/PipInstalledPackage.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (obj == null) return false;\n    if (getClass() != obj.getClass()) return false;\n    PipInstalledPackage other = (PipInstalledPackage) obj;\n    if (name == null) {\n      if (other.name != null) return false;\n    } else if (!this.getStandardDistributionName().equals(other.getStandardDistributionName()))\n      return false;\n    if (version == null) {\n      if (other.version != null) return false;\n    } else if (!version.equals(other.version)) return false;\n    return true;\n  }", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "PipInstalledPackage.equals(Object obj)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "equals", "getStandardDistributionName", "getStandardDistributionName", "equals"]}, "repository": {"repo_id": 145424401, "url": "https://github.com/eclipse/steady", "stars": 353, "created": "8/20/2018 1:54:15 PM +00:00", "updates": "2020-01-25T08:37:00+00:00", "fork": "False", "license": "licensed"}}