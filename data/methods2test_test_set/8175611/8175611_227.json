{"test_class": {"identifier": "ReplacementDataTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}], "file": "core/src/test/java/com/tngtech/junit/dataprovider/placeholder/ReplacementDataTest.java"}, "test_case": {"identifier": "testOfShouldThrowNullPointerExceptionIfArgumentsAreNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOfShouldThrowNullPointerExceptionIfArgumentsAreNull() {\n        // Given:\n        expectedException.expect(NullPointerException.class);\n        expectedException.expectMessage(\"'arguments' must not be null\");\n\n        // When:\n        ReplacementData.of(Methods.anyMethod(), 1, null);\n\n        // Then: expect exception\n    }", "signature": "void testOfShouldThrowNullPointerExceptionIfArgumentsAreNull()", "full_signature": "@Test public void testOfShouldThrowNullPointerExceptionIfArgumentsAreNull()", "class_method_signature": "ReplacementDataTest.testOfShouldThrowNullPointerExceptionIfArgumentsAreNull()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "of", "anyMethod"]}, "focal_class": {"identifier": "ReplacementData", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Method testMethod;", "modifier": "private final", "type": "Method", "declarator": "testMethod", "var_name": "testMethod"}, {"original_string": "private final int testIndex;", "modifier": "private final", "type": "int", "declarator": "testIndex", "var_name": "testIndex"}, {"original_string": "private final List<Object> arguments;", "modifier": "private final", "type": "List<Object>", "declarator": "arguments", "var_name": "arguments"}], "methods": [{"identifier": "of", "parameters": "(Method testMethod, int testIndex, List<Object> arguments)", "modifiers": "public static", "return": "ReplacementData", "signature": "ReplacementData of(Method testMethod, int testIndex, List<Object> arguments)", "full_signature": "public static ReplacementData of(Method testMethod, int testIndex, List<Object> arguments)", "class_method_signature": "ReplacementData.of(Method testMethod, int testIndex, List<Object> arguments)", "testcase": false, "constructor": false}, {"identifier": "ReplacementData", "parameters": "(Method testMethod, int testIndex, List<Object> arguments)", "modifiers": "private", "return": "", "signature": " ReplacementData(Method testMethod, int testIndex, List<Object> arguments)", "full_signature": "private  ReplacementData(Method testMethod, int testIndex, List<Object> arguments)", "class_method_signature": "ReplacementData.ReplacementData(Method testMethod, int testIndex, List<Object> arguments)", "testcase": false, "constructor": true}, {"identifier": "getTestMethod", "parameters": "()", "modifiers": "public", "return": "Method", "signature": "Method getTestMethod()", "full_signature": "public Method getTestMethod()", "class_method_signature": "ReplacementData.getTestMethod()", "testcase": false, "constructor": false}, {"identifier": "getTestIndex", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTestIndex()", "full_signature": "public int getTestIndex()", "class_method_signature": "ReplacementData.getTestIndex()", "testcase": false, "constructor": false}, {"identifier": "getArguments", "parameters": "()", "modifiers": "public", "return": "List<Object>", "signature": "List<Object> getArguments()", "full_signature": "public List<Object> getArguments()", "class_method_signature": "ReplacementData.getArguments()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ReplacementData.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "ReplacementData.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ReplacementData.toString()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/tngtech/junit/dataprovider/placeholder/ReplacementData.java"}, "focal_method": {"identifier": "of", "parameters": "(Method testMethod, int testIndex, List<Object> arguments)", "modifiers": "public static", "return": "ReplacementData", "body": "public static ReplacementData of(Method testMethod, int testIndex, List<Object> arguments) {\n        return new ReplacementData(testMethod, testIndex, arguments);\n    }", "signature": "ReplacementData of(Method testMethod, int testIndex, List<Object> arguments)", "full_signature": "public static ReplacementData of(Method testMethod, int testIndex, List<Object> arguments)", "class_method_signature": "ReplacementData.of(Method testMethod, int testIndex, List<Object> arguments)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 8175611, "url": "https://github.com/TNG/junit-dataprovider", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 215, "size": 1383, "license": "licensed"}}