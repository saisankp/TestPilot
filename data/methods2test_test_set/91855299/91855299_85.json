{"test_class": {"identifier": "NumberArrayAdapterTest", "superclass": "extends AbstractAdapterTest<double[]>", "interfaces": "", "fields": [], "file": "api/src/test/java/edu/wpi/first/shuffleboard/api/sources/recording/serialization/NumberArrayAdapterTest.java"}, "test_case": {"identifier": "testEncodeEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEncodeEmpty() {\n    double[] array = {};\n    byte[] expected = {0, 0, 0, 0};\n    assertArrayEquals(expected, adapter.serialize(array));\n  }", "signature": "void testEncodeEmpty()", "full_signature": "@Test public void testEncodeEmpty()", "class_method_signature": "NumberArrayAdapterTest.testEncodeEmpty()", "testcase": true, "constructor": false, "invocations": ["assertArrayEquals", "serialize"]}, "focal_class": {"identifier": "NumberArrayAdapter", "superclass": "extends TypeAdapter<double[]>", "interfaces": "", "fields": [], "methods": [{"identifier": "NumberArrayAdapter", "parameters": "()", "modifiers": "public", "return": "", "signature": " NumberArrayAdapter()", "full_signature": "public  NumberArrayAdapter()", "class_method_signature": "NumberArrayAdapter.NumberArrayAdapter()", "testcase": false, "constructor": true}, {"identifier": "serialize", "parameters": "(double[] array)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] serialize(double[] array)", "full_signature": "@Override public byte[] serialize(double[] array)", "class_method_signature": "NumberArrayAdapter.serialize(double[] array)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(byte[] buffer, int bufferPosition)", "modifiers": "@Override public", "return": "double[]", "signature": "double[] deserialize(byte[] buffer, int bufferPosition)", "full_signature": "@Override public double[] deserialize(byte[] buffer, int bufferPosition)", "class_method_signature": "NumberArrayAdapter.deserialize(byte[] buffer, int bufferPosition)", "testcase": false, "constructor": false}, {"identifier": "getSerializedSize", "parameters": "(double[] value)", "modifiers": "@Override public", "return": "int", "signature": "int getSerializedSize(double[] value)", "full_signature": "@Override public int getSerializedSize(double[] value)", "class_method_signature": "NumberArrayAdapter.getSerializedSize(double[] value)", "testcase": false, "constructor": false}], "file": "api/src/main/java/edu/wpi/first/shuffleboard/api/sources/recording/serialization/NumberArrayAdapter.java"}, "focal_method": {"identifier": "serialize", "parameters": "(double[] array)", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n  public byte[] serialize(double[] array) {\n    final byte[] buf = new byte[getSerializedSize(array)];\n    if (array.length == 0) {\n      return buf;\n    }\n    int pos = 0;\n    Serialization.put(buf, Serialization.toByteArray(array.length), pos);\n    pos += Serialization.SIZE_OF_INT;\n\n    for (double val : array) {\n      byte[] arr = Serialization.toByteArray(val);\n      Serialization.put(buf, arr, pos);\n      pos += Serialization.SIZE_OF_DOUBLE;\n    }\n    return buf;\n  }", "signature": "byte[] serialize(double[] array)", "full_signature": "@Override public byte[] serialize(double[] array)", "class_method_signature": "NumberArrayAdapter.serialize(double[] array)", "testcase": false, "constructor": false, "invocations": ["getSerializedSize", "put", "toByteArray", "toByteArray", "put"]}, "repository": {"repo_id": 91855299, "url": "https://github.com/wpilibsuite/shuffleboard", "stars": 52, "created": "5/20/2017 12:38:25 AM +00:00", "updates": "2020-01-23T20:11:35+00:00", "fork": "False", "license": "licensed"}}