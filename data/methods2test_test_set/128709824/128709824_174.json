{"test_class": {"identifier": "LoggerFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/api/src/test/java/com/alipay/sofa/rpc/log/LoggerFactoryTest.java"}, "test_case": {"identifier": "getLogger1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getLogger1() {\n        Assert.assertNotNull(LoggerFactory.getLogger(LoggerFactoryTest.class.getCanonicalName()));\n    }", "signature": "void getLogger1()", "full_signature": "@Test public void getLogger1()", "class_method_signature": "LoggerFactoryTest.getLogger1()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getLogger", "getCanonicalName"]}, "focal_class": {"identifier": "LoggerFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static String implClass = RpcConfigs.getStringValue(RpcOptions.LOGGER_IMPL);", "modifier": "private static", "type": "String", "declarator": "implClass = RpcConfigs.getStringValue(RpcOptions.LOGGER_IMPL)", "var_name": "implClass"}], "methods": [{"identifier": "getLogger", "parameters": "(String name)", "modifiers": "public static", "return": "Logger", "signature": "Logger getLogger(String name)", "full_signature": "public static Logger getLogger(String name)", "class_method_signature": "LoggerFactory.getLogger(String name)", "testcase": false, "constructor": false}, {"identifier": "getLogger", "parameters": "(Class clazz)", "modifiers": "public static", "return": "Logger", "signature": "Logger getLogger(Class clazz)", "full_signature": "public static Logger getLogger(Class clazz)", "class_method_signature": "LoggerFactory.getLogger(Class clazz)", "testcase": false, "constructor": false}], "file": "core/api/src/main/java/com/alipay/sofa/rpc/log/LoggerFactory.java"}, "focal_method": {"identifier": "getLogger", "parameters": "(String name)", "modifiers": "public static", "return": "Logger", "body": "public static Logger getLogger(String name) {\n        try {\n            Object logInstance = ClassUtils.forName(implClass, Logger.class.getClassLoader())\n                .getConstructor(String.class)\n                .newInstance(name);\n            if (logInstance instanceof Logger) {\n                return (Logger) logInstance;\n            } else {\n                throw new SofaRpcRuntimeException(implClass + \" is not type of  \" + Logger.class);\n            }\n        } catch (SofaRpcRuntimeException ex) {\n            throw ex;\n        } catch (Exception e) {\n            throw new SofaRpcRuntimeException(\"Error when getLogger of \" + name\n                + \", implement is \" + implClass + \"\", e);\n        }\n    }", "signature": "Logger getLogger(String name)", "full_signature": "public static Logger getLogger(String name)", "class_method_signature": "LoggerFactory.getLogger(String name)", "testcase": false, "constructor": false, "invocations": ["newInstance", "getConstructor", "forName", "getClassLoader"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}