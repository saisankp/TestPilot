{"test_class": {"identifier": "TypeDecoderTest", "superclass": "", "interfaces": "", "fields": [], "file": "abi/src/test/java/org/web3j/abi/TypeDecoderTest.java"}, "test_case": {"identifier": "testUtf8String", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUtf8String() {\n        assertThat(TypeDecoder.decodeUtf8String(\n                \"000000000000000000000000000000000000000000000000000000000000000d\"  // length\n                        + \"48656c6c6f2c20776f726c642100000000000000000000000000000000000000\", 0),\n                is(new Utf8String(\"Hello, world!\")));\n    }", "signature": "void testUtf8String()", "full_signature": "@Test public void testUtf8String()", "class_method_signature": "TypeDecoderTest.testUtf8String()", "testcase": true, "constructor": false, "invocations": ["assertThat", "decodeUtf8String", "is"]}, "focal_class": {"identifier": "TypeDecoder", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final int MAX_BYTE_LENGTH_FOR_HEX_STRING = Type.MAX_BYTE_LENGTH << 1;", "modifier": "static final", "type": "int", "declarator": "MAX_BYTE_LENGTH_FOR_HEX_STRING = Type.MAX_BYTE_LENGTH << 1", "var_name": "MAX_BYTE_LENGTH_FOR_HEX_STRING"}], "methods": [{"identifier": "getSingleElementLength", "parameters": "(String input, int offset, Class<T> type)", "modifiers": "static", "return": "int", "signature": "int getSingleElementLength(String input, int offset, Class<T> type)", "full_signature": "static int getSingleElementLength(String input, int offset, Class<T> type)", "class_method_signature": "TypeDecoder.getSingleElementLength(String input, int offset, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(String input, int offset, Class<T> type)", "modifiers": "@SuppressWarnings(\"unchecked\") static", "return": "T", "signature": "T decode(String input, int offset, Class<T> type)", "full_signature": "@SuppressWarnings(\"unchecked\") static T decode(String input, int offset, Class<T> type)", "class_method_signature": "TypeDecoder.decode(String input, int offset, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(\n            String input, int offset, TypeReference<T> typeReference)", "modifiers": "public static", "return": "T", "signature": "T decode(\n            String input, int offset, TypeReference<T> typeReference)", "full_signature": "public static T decode(\n            String input, int offset, TypeReference<T> typeReference)", "class_method_signature": "TypeDecoder.decode(\n            String input, int offset, TypeReference<T> typeReference)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(String input, Class<T> type)", "modifiers": "static", "return": "T", "signature": "T decode(String input, Class<T> type)", "full_signature": "static T decode(String input, Class<T> type)", "class_method_signature": "TypeDecoder.decode(String input, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "decodeAddress", "parameters": "(String input)", "modifiers": "static", "return": "Address", "signature": "Address decodeAddress(String input)", "full_signature": "static Address decodeAddress(String input)", "class_method_signature": "TypeDecoder.decodeAddress(String input)", "testcase": false, "constructor": false}, {"identifier": "decodeNumeric", "parameters": "(String input, Class<T> type)", "modifiers": "static", "return": "T", "signature": "T decodeNumeric(String input, Class<T> type)", "full_signature": "static T decodeNumeric(String input, Class<T> type)", "class_method_signature": "TypeDecoder.decodeNumeric(String input, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "throwUnsupportedOperation", "parameters": "(Exception e, Class<T> type)", "modifiers": "private static", "return": "T", "signature": "T throwUnsupportedOperation(Exception e, Class<T> type)", "full_signature": "private static T throwUnsupportedOperation(Exception e, Class<T> type)", "class_method_signature": "TypeDecoder.throwUnsupportedOperation(Exception e, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "getTypeLengthInBytes", "parameters": "(Class<T> type)", "modifiers": "static", "return": "int", "signature": "int getTypeLengthInBytes(Class<T> type)", "full_signature": "static int getTypeLengthInBytes(Class<T> type)", "class_method_signature": "TypeDecoder.getTypeLengthInBytes(Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "getTypeLength", "parameters": "(Class<T> type)", "modifiers": "static", "return": "int", "signature": "int getTypeLength(Class<T> type)", "full_signature": "static int getTypeLength(Class<T> type)", "class_method_signature": "TypeDecoder.getTypeLength(Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "decodeUintAsInt", "parameters": "(String rawInput, int offset)", "modifiers": "static", "return": "int", "signature": "int decodeUintAsInt(String rawInput, int offset)", "full_signature": "static int decodeUintAsInt(String rawInput, int offset)", "class_method_signature": "TypeDecoder.decodeUintAsInt(String rawInput, int offset)", "testcase": false, "constructor": false}, {"identifier": "decodeBool", "parameters": "(String rawInput, int offset)", "modifiers": "static", "return": "Bool", "signature": "Bool decodeBool(String rawInput, int offset)", "full_signature": "static Bool decodeBool(String rawInput, int offset)", "class_method_signature": "TypeDecoder.decodeBool(String rawInput, int offset)", "testcase": false, "constructor": false}, {"identifier": "decodeBytes", "parameters": "(String input, Class<T> type)", "modifiers": "static", "return": "T", "signature": "T decodeBytes(String input, Class<T> type)", "full_signature": "static T decodeBytes(String input, Class<T> type)", "class_method_signature": "TypeDecoder.decodeBytes(String input, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "decodeBytes", "parameters": "(String input, int offset, Class<T> type)", "modifiers": "static", "return": "T", "signature": "T decodeBytes(String input, int offset, Class<T> type)", "full_signature": "static T decodeBytes(String input, int offset, Class<T> type)", "class_method_signature": "TypeDecoder.decodeBytes(String input, int offset, Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "decodeDynamicBytes", "parameters": "(String input, int offset)", "modifiers": "static", "return": "DynamicBytes", "signature": "DynamicBytes decodeDynamicBytes(String input, int offset)", "full_signature": "static DynamicBytes decodeDynamicBytes(String input, int offset)", "class_method_signature": "TypeDecoder.decodeDynamicBytes(String input, int offset)", "testcase": false, "constructor": false}, {"identifier": "decodeUtf8String", "parameters": "(String input, int offset)", "modifiers": "static", "return": "Utf8String", "signature": "Utf8String decodeUtf8String(String input, int offset)", "full_signature": "static Utf8String decodeUtf8String(String input, int offset)", "class_method_signature": "TypeDecoder.decodeUtf8String(String input, int offset)", "testcase": false, "constructor": false}, {"identifier": "decodeStaticArray", "parameters": "(\n            String input, int offset, TypeReference<T> typeReference, int length)", "modifiers": "@SuppressWarnings(\"unchecked\") static", "return": "T", "signature": "T decodeStaticArray(\n            String input, int offset, TypeReference<T> typeReference, int length)", "full_signature": "@SuppressWarnings(\"unchecked\") static T decodeStaticArray(\n            String input, int offset, TypeReference<T> typeReference, int length)", "class_method_signature": "TypeDecoder.decodeStaticArray(\n            String input, int offset, TypeReference<T> typeReference, int length)", "testcase": false, "constructor": false}, {"identifier": "instantiateStaticArray", "parameters": "(\n            TypeReference<T> typeReference, List<T> elements)", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "T", "signature": "T instantiateStaticArray(\n            TypeReference<T> typeReference, List<T> elements)", "full_signature": "@SuppressWarnings(\"unchecked\") private static T instantiateStaticArray(\n            TypeReference<T> typeReference, List<T> elements)", "class_method_signature": "TypeDecoder.instantiateStaticArray(\n            TypeReference<T> typeReference, List<T> elements)", "testcase": false, "constructor": false}, {"identifier": "instantiateStaticArray", "parameters": "(List<T> elements)", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "T", "signature": "T instantiateStaticArray(List<T> elements)", "full_signature": "@SuppressWarnings(\"unchecked\") private static T instantiateStaticArray(List<T> elements)", "class_method_signature": "TypeDecoder.instantiateStaticArray(List<T> elements)", "testcase": false, "constructor": false}, {"identifier": "decodeDynamicArray", "parameters": "(\n            String input, int offset, TypeReference<T> typeReference)", "modifiers": "@SuppressWarnings(\"unchecked\") static", "return": "T", "signature": "T decodeDynamicArray(\n            String input, int offset, TypeReference<T> typeReference)", "full_signature": "@SuppressWarnings(\"unchecked\") static T decodeDynamicArray(\n            String input, int offset, TypeReference<T> typeReference)", "class_method_signature": "TypeDecoder.decodeDynamicArray(\n            String input, int offset, TypeReference<T> typeReference)", "testcase": false, "constructor": false}, {"identifier": "decodeArrayElements", "parameters": "(\n            String input, int offset, TypeReference<T> typeReference, int length,\n            boolean isDynamic)", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "T", "signature": "T decodeArrayElements(\n            String input, int offset, TypeReference<T> typeReference, int length,\n            boolean isDynamic)", "full_signature": "@SuppressWarnings(\"unchecked\") private static T decodeArrayElements(\n            String input, int offset, TypeReference<T> typeReference, int length,\n            boolean isDynamic)", "class_method_signature": "TypeDecoder.decodeArrayElements(\n            String input, int offset, TypeReference<T> typeReference, int length,\n            boolean isDynamic)", "testcase": false, "constructor": false}], "file": "abi/src/main/java/org/web3j/abi/TypeDecoder.java"}, "focal_method": {"identifier": "decodeUtf8String", "parameters": "(String input, int offset)", "modifiers": "static", "return": "Utf8String", "body": "static Utf8String decodeUtf8String(String input, int offset) {\n        DynamicBytes dynamicBytesResult = decodeDynamicBytes(input, offset);\n        byte[] bytes = dynamicBytesResult.getValue();\n\n        try {\n            return new Utf8String(new String(bytes, \"UTF-8\"));\n        } catch (UnsupportedEncodingException e) {\n            return throwUnsupportedOperation(e, Utf8String.class);\n        }\n    }", "signature": "Utf8String decodeUtf8String(String input, int offset)", "full_signature": "static Utf8String decodeUtf8String(String input, int offset)", "class_method_signature": "TypeDecoder.decodeUtf8String(String input, int offset)", "testcase": false, "constructor": false, "invocations": ["decodeDynamicBytes", "getValue", "throwUnsupportedOperation"]}, "repository": {"repo_id": 149736342, "url": "https://github.com/BrahmaOS/brahmaos-web3j", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 1779, "license": "licensed"}}