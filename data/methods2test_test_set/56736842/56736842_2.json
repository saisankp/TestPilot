{"test_class": {"identifier": "GetUserListTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GetUserList getUserList;", "modifier": "private", "type": "GetUserList", "declarator": "getUserList", "var_name": "getUserList"}, {"original_string": "@Mock private UserRepository mockUserRepository;", "modifier": "@Mock private", "type": "UserRepository", "declarator": "mockUserRepository", "var_name": "mockUserRepository"}, {"original_string": "@Mock private ThreadExecutor mockThreadExecutor;", "modifier": "@Mock private", "type": "ThreadExecutor", "declarator": "mockThreadExecutor", "var_name": "mockThreadExecutor"}, {"original_string": "@Mock private PostExecutionThread mockExecutionThread;", "modifier": "@Mock private", "type": "PostExecutionThread", "declarator": "mockExecutionThread", "var_name": "mockExecutionThread"}], "file": "domain/src/test/java/com/github/hilo/domain/interactor/GetUserListTest.java"}, "test_case": {"identifier": "testGetUserListUseCaseObservableHappyCase", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void testGetUserListUseCaseObservableHappyCase() {\n\t\tgetUserList.buildUseCaseObservable();\n\n\t\t// 1. \u9a8c\u8bc1\u7684\u57fa\u672c\u65b9\u6cd5: verify(mock).someMethod(\u2026)\u6765\u9a8c\u8bc1\u65b9\u6cd5\u7684\u8c03\u7528\n\t\tverify(mockUserRepository).user();\n\t\t//        verify(mockUserRepository).user(1); // worry way\n\t\t// 2. \u9a8c\u8bc1\u672a\u66fe\u6267\u884c\u7684\u65b9\u6cd5: \u786e\u5b9auser(1)\u8fd9\u4e2a\u6784\u9020\u65b9\u6cd5\u6ca1\u6709\u88ab\u6267\u884c\n\t\tverify(mockUserRepository,never()).user(1);\n\t\t// 3. \u67e5\u8be2\u591a\u4f59\u7684\u65b9\u6cd5\u8c03\u7528 verifyNoMoreInteractions()\u65b9\u6cd5\u53ef\u4ee5\u4f20\u5165\u591a\u4e2amock\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\n\t\tverifyNoMoreInteractions(mockUserRepository);\n\t\t// 4. \u67e5\u8be2\u6ca1\u6709\u4ea4\u4e92\u7684mock\u5bf9\u8c61: verifyZeroInteractions()\u4e5f\u662f\u4e00\u4e2a\u6d4b\u8bd5\u5de5\u5177\uff0c\u6e90\u7801\u548cverifyNoMoreInteractions()\n\t\t// \u7684\u5b9e\u73b0\u662f\u4e00\u6837\u7684\uff0c\u4e3a\u4e86\u63d0\u9ad8\u903b\u8f91\u7684\u53ef\u8bfb\u6027\uff0c\u6240\u4ee5\u53ea\u4e0d\u8fc7\u540d\u5b57\u4e0d\u540c\u3002\n\t\t// \u672c\u4f8b\u4e2d\u7528\u6765\u786e\u8ba4\u4f20\u5165\u7684\u5bf9\u8c61\u6ca1\u6709\u4efb\u4f55\u4ea4\u4e92\n\t\tverifyZeroInteractions(mockThreadExecutor);\n\t\tverifyZeroInteractions(mockExecutionThread);\n\n\t}", "signature": "void testGetUserListUseCaseObservableHappyCase()", "full_signature": "@Test public void testGetUserListUseCaseObservableHappyCase()", "class_method_signature": "GetUserListTest.testGetUserListUseCaseObservableHappyCase()", "testcase": true, "constructor": false, "invocations": ["buildUseCaseObservable", "user", "verify", "user", "verify", "never", "verifyNoMoreInteractions", "verifyZeroInteractions", "verifyZeroInteractions"]}, "focal_class": {"identifier": "GetUserList", "superclass": "extends UseCase", "interfaces": "", "fields": [{"original_string": "private final UserRepository userRepository;", "modifier": "private final", "type": "UserRepository", "declarator": "userRepository", "var_name": "userRepository"}], "methods": [{"identifier": "GetUserList", "parameters": "(UserRepository userRepository,ThreadExecutor threadExecutor,\n\t\t\t\t\tPostExecutionThread postExecutionThread)", "modifiers": "@Inject public", "return": "", "signature": " GetUserList(UserRepository userRepository,ThreadExecutor threadExecutor,\n\t\t\t\t\tPostExecutionThread postExecutionThread)", "full_signature": "@Inject public  GetUserList(UserRepository userRepository,ThreadExecutor threadExecutor,\n\t\t\t\t\tPostExecutionThread postExecutionThread)", "class_method_signature": "GetUserList.GetUserList(UserRepository userRepository,ThreadExecutor threadExecutor,\n\t\t\t\t\tPostExecutionThread postExecutionThread)", "testcase": false, "constructor": true}, {"identifier": "buildUseCaseObservable", "parameters": "()", "modifiers": "@Override protected", "return": "Observable", "signature": "Observable buildUseCaseObservable()", "full_signature": "@Override protected Observable buildUseCaseObservable()", "class_method_signature": "GetUserList.buildUseCaseObservable()", "testcase": false, "constructor": false}], "file": "domain/src/main/java/com/github/hilo/domain/interactor/GetUserList.java"}, "focal_method": {"identifier": "buildUseCaseObservable", "parameters": "()", "modifiers": "@Override protected", "return": "Observable", "body": "@Override protected Observable buildUseCaseObservable() {\n\t\t// \u5f53\u8c03\u7528\u7236\u7c7bUseCase.execute()\u65b9\u6cd5\u65f6\uff0c\u89e6\u53d1\u672c\u65b9\u6cd5\uff0c\u5e76\u6307\u5411\u5b50\u7c7b\u7684\u5b9e\u73b0\uff1b\n\t\treturn userRepository.user(); // UserRepository\u662f\u6570\u636e\u5c42\u5b9e\u73b0\u7684\uff0c\u5f53\u8c03\u7528users()\n\t\t// \u65b9\u6cd5\u65f6\uff0c\u4f1a\u8c03\u7528data\u5c42\u7684\u5b9e\u73b0\uff0c\u5e76\u8fd4\u56de\u7ed9\u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u4eba\uff0c\u4e3b\u8981\u7528\u4e8e\u83b7\u53d6data\u5c42\u6570\u636e\u5e76\u8f6c\u6362\u6210User\u7c7b\u578b\n\t}", "signature": "Observable buildUseCaseObservable()", "full_signature": "@Override protected Observable buildUseCaseObservable()", "class_method_signature": "GetUserList.buildUseCaseObservable()", "testcase": false, "constructor": false, "invocations": ["user"]}, "repository": {"repo_id": 56736842, "url": "https://github.com/hiloWang/MVP-DAGGER2-RETROFIT-RX", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 7, "size": 1264, "license": "licensed"}}