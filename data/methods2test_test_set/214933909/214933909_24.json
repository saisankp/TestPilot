{"test_class": {"identifier": "AbstractShardingStrategyTest", "superclass": "", "interfaces": "", "fields": [], "file": "das-client/src/test/java/com/ppdai/das/strategy/AbstractShardingStrategyTest.java"}, "test_case": {"identifier": "testIsShardByTable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsShardByTable() {\n        AbstractShardingStrategy test = new TestShardingStrategy();\n        assertFalse(test.isShardByTable());\n        \n        test.setShardByTable(true);\n        assertTrue(test.isShardByTable());\n    }", "signature": "void testIsShardByTable()", "full_signature": "@Test public void testIsShardByTable()", "class_method_signature": "AbstractShardingStrategyTest.testIsShardByTable()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isShardByTable", "setShardByTable", "assertTrue", "isShardByTable"]}, "focal_class": {"identifier": "AbstractShardingStrategy", "superclass": "", "interfaces": "implements ShardingStrategy", "fields": [{"original_string": "public static final String SHARDED_TABLES = \"shardedTables\";", "modifier": "public static final", "type": "String", "declarator": "SHARDED_TABLES = \"shardedTables\"", "var_name": "SHARDED_TABLES"}, {"original_string": "public static final String SEPARATOR = \"separator\";", "modifier": "public static final", "type": "String", "declarator": "SEPARATOR = \"separator\"", "var_name": "SEPARATOR"}, {"original_string": "private boolean shardByDb = false;", "modifier": "private", "type": "boolean", "declarator": "shardByDb = false", "var_name": "shardByDb"}, {"original_string": "private boolean shardByTable = false;", "modifier": "private", "type": "boolean", "declarator": "shardByTable = false", "var_name": "shardByTable"}, {"original_string": "private Set<String> shardedTables;", "modifier": "private", "type": "Set<String>", "declarator": "shardedTables", "var_name": "shardedTables"}, {"original_string": "private Set<String> allTableShards;", "modifier": "private", "type": "Set<String>", "declarator": "allTableShards", "var_name": "allTableShards"}, {"original_string": "private String separator = \"\";", "modifier": "private", "type": "String", "declarator": "separator = \"\"", "var_name": "separator"}], "methods": [{"identifier": "locateDbShards", "parameters": "(ShardingContext ctx)", "modifiers": "@Override public abstract", "return": "Set<String>", "signature": "Set<String> locateDbShards(ShardingContext ctx)", "full_signature": "@Override public abstract Set<String> locateDbShards(ShardingContext ctx)", "class_method_signature": "AbstractShardingStrategy.locateDbShards(ShardingContext ctx)", "testcase": false, "constructor": false}, {"identifier": "locateTableShards", "parameters": "(TableShardingContext ctx)", "modifiers": "@Override public abstract", "return": "Set<String>", "signature": "Set<String> locateTableShards(TableShardingContext ctx)", "full_signature": "@Override public abstract Set<String> locateTableShards(TableShardingContext ctx)", "class_method_signature": "AbstractShardingStrategy.locateTableShards(TableShardingContext ctx)", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(Map<String, String> settings)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(Map<String, String> settings)", "full_signature": "@Override public void initialize(Map<String, String> settings)", "class_method_signature": "AbstractShardingStrategy.initialize(Map<String, String> settings)", "testcase": false, "constructor": false}, {"identifier": "parseNames", "parameters": "(String value)", "modifiers": "protected", "return": "Set<String>", "signature": "Set<String> parseNames(String value)", "full_signature": "protected Set<String> parseNames(String value)", "class_method_signature": "AbstractShardingStrategy.parseNames(String value)", "testcase": false, "constructor": false}, {"identifier": "setShardedTables", "parameters": "(Set<String> shardedTables)", "modifiers": "protected", "return": "void", "signature": "void setShardedTables(Set<String> shardedTables)", "full_signature": "protected void setShardedTables(Set<String> shardedTables)", "class_method_signature": "AbstractShardingStrategy.setShardedTables(Set<String> shardedTables)", "testcase": false, "constructor": false}, {"identifier": "setSeparator", "parameters": "(String separator)", "modifiers": "protected", "return": "void", "signature": "void setSeparator(String separator)", "full_signature": "protected void setSeparator(String separator)", "class_method_signature": "AbstractShardingStrategy.setSeparator(String separator)", "testcase": false, "constructor": false}, {"identifier": "setShardByDb", "parameters": "(boolean shardByDb)", "modifiers": "protected", "return": "void", "signature": "void setShardByDb(boolean shardByDb)", "full_signature": "protected void setShardByDb(boolean shardByDb)", "class_method_signature": "AbstractShardingStrategy.setShardByDb(boolean shardByDb)", "testcase": false, "constructor": false}, {"identifier": "setShardByTable", "parameters": "(boolean shardByTable)", "modifiers": "protected", "return": "void", "signature": "void setShardByTable(boolean shardByTable)", "full_signature": "protected void setShardByTable(boolean shardByTable)", "class_method_signature": "AbstractShardingStrategy.setShardByTable(boolean shardByTable)", "testcase": false, "constructor": false}, {"identifier": "setAllTableShards", "parameters": "(Set<String> allTableShards)", "modifiers": "protected", "return": "void", "signature": "void setAllTableShards(Set<String> allTableShards)", "full_signature": "protected void setAllTableShards(Set<String> allTableShards)", "class_method_signature": "AbstractShardingStrategy.setAllTableShards(Set<String> allTableShards)", "testcase": false, "constructor": false}, {"identifier": "isShardByDb", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isShardByDb()", "full_signature": "@Override public boolean isShardByDb()", "class_method_signature": "AbstractShardingStrategy.isShardByDb()", "testcase": false, "constructor": false}, {"identifier": "isShardByTable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isShardByTable()", "full_signature": "@Override public boolean isShardByTable()", "class_method_signature": "AbstractShardingStrategy.isShardByTable()", "testcase": false, "constructor": false}, {"identifier": "isShardingEnable", "parameters": "(String logicTableName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isShardingEnable(String logicTableName)", "full_signature": "@Override public boolean isShardingEnable(String logicTableName)", "class_method_signature": "AbstractShardingStrategy.isShardingEnable(String logicTableName)", "testcase": false, "constructor": false}, {"identifier": "getAllTableShards", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getAllTableShards()", "full_signature": "@Override public Set<String> getAllTableShards()", "class_method_signature": "AbstractShardingStrategy.getAllTableShards()", "testcase": false, "constructor": false}, {"identifier": "getTableName", "parameters": "(String logicTableName, String shard)", "modifiers": "@Override public", "return": "String", "signature": "String getTableName(String logicTableName, String shard)", "full_signature": "@Override public String getTableName(String logicTableName, String shard)", "class_method_signature": "AbstractShardingStrategy.getTableName(String logicTableName, String shard)", "testcase": false, "constructor": false}, {"identifier": "toSet", "parameters": "(String id)", "modifiers": "protected", "return": "Set<String>", "signature": "Set<String> toSet(String id)", "full_signature": "protected Set<String> toSet(String id)", "class_method_signature": "AbstractShardingStrategy.toSet(String id)", "testcase": false, "constructor": false}], "file": "das-client/src/main/java/com/ppdai/das/strategy/AbstractShardingStrategy.java"}, "focal_method": {"identifier": "isShardByTable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isShardByTable() {\n        return shardByTable;\n    }", "signature": "boolean isShardByTable()", "full_signature": "@Override public boolean isShardByTable()", "class_method_signature": "AbstractShardingStrategy.isShardByTable()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}