{"test_class": {"identifier": "TypeOfAddressTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(TypeOfAddressTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(TypeOfAddressTest.class)", "var_name": "logger"}], "file": "ch-commons-gsm/src/test/java/com/cloudhopper/commons/gsm/TypeOfAddressTest.java"}, "test_case": {"identifier": "valueOf", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void valueOf() {\n        TypeOfAddress toa = TypeOfAddress.valueOf((byte)0x91);\n        Assert.assertEquals(Ton.INTERNATIONAL, toa.getTon());\n        Assert.assertEquals(Npi.ISDN, toa.getNpi());\n        TypeOfAddress toa2 = TypeOfAddress.valueOf((byte)0x81);\n        Assert.assertEquals(Ton.INTERNATIONAL, toa2.getTon());\n        Assert.assertEquals(Npi.UNKNOWN, toa2.getNpi());\n    }", "signature": "void valueOf()", "full_signature": "@Test public void valueOf()", "class_method_signature": "TypeOfAddressTest.valueOf()", "testcase": true, "constructor": false, "invocations": ["valueOf", "assertEquals", "getTon", "assertEquals", "getNpi", "valueOf", "assertEquals", "getTon", "assertEquals", "getNpi"]}, "focal_class": {"identifier": "TypeOfAddress", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Ton ton;", "modifier": "private", "type": "Ton", "declarator": "ton", "var_name": "ton"}, {"original_string": "private Npi npi;", "modifier": "private", "type": "Npi", "declarator": "npi", "var_name": "npi"}], "methods": [{"identifier": "TypeOfAddress", "parameters": "(Ton ton, Npi npi)", "modifiers": "public", "return": "", "signature": " TypeOfAddress(Ton ton, Npi npi)", "full_signature": "public  TypeOfAddress(Ton ton, Npi npi)", "class_method_signature": "TypeOfAddress.TypeOfAddress(Ton ton, Npi npi)", "testcase": false, "constructor": true}, {"identifier": "getTon", "parameters": "()", "modifiers": "public", "return": "Ton", "signature": "Ton getTon()", "full_signature": "public Ton getTon()", "class_method_signature": "TypeOfAddress.getTon()", "testcase": false, "constructor": false}, {"identifier": "setTon", "parameters": "(Ton ton)", "modifiers": "public", "return": "void", "signature": "void setTon(Ton ton)", "full_signature": "public void setTon(Ton ton)", "class_method_signature": "TypeOfAddress.setTon(Ton ton)", "testcase": false, "constructor": false}, {"identifier": "getNpi", "parameters": "()", "modifiers": "public", "return": "Npi", "signature": "Npi getNpi()", "full_signature": "public Npi getNpi()", "class_method_signature": "TypeOfAddress.getNpi()", "testcase": false, "constructor": false}, {"identifier": "setNpi", "parameters": "(Npi npi)", "modifiers": "public", "return": "void", "signature": "void setNpi(Npi npi)", "full_signature": "public void setNpi(Npi npi)", "class_method_signature": "TypeOfAddress.setNpi(Npi npi)", "testcase": false, "constructor": false}, {"identifier": "toByte", "parameters": "()", "modifiers": "public", "return": "byte", "signature": "byte toByte()", "full_signature": "public byte toByte()", "class_method_signature": "TypeOfAddress.toByte()", "testcase": false, "constructor": false}, {"identifier": "toByte", "parameters": "(TypeOfAddress toa)", "modifiers": "public static", "return": "byte", "signature": "byte toByte(TypeOfAddress toa)", "full_signature": "public static byte toByte(TypeOfAddress toa)", "class_method_signature": "TypeOfAddress.toByte(TypeOfAddress toa)", "testcase": false, "constructor": false}, {"identifier": "valueOf", "parameters": "(byte b)", "modifiers": "public static", "return": "TypeOfAddress", "signature": "TypeOfAddress valueOf(byte b)", "full_signature": "public static TypeOfAddress valueOf(byte b)", "class_method_signature": "TypeOfAddress.valueOf(byte b)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TypeOfAddress.toString()", "testcase": false, "constructor": false}], "file": "ch-commons-gsm/src/main/java/com/cloudhopper/commons/gsm/TypeOfAddress.java"}, "focal_method": {"identifier": "valueOf", "parameters": "(byte b)", "modifiers": "public static", "return": "TypeOfAddress", "body": "public static TypeOfAddress valueOf(byte b) {\n        // bits 0-3 are the ton (shift over 0, then only the first 4 bits)\n        int ton = (b & 0x0F);\n        // bits 4-7 are the npi (shift over 4, then only the first 3 bits)\n        int npi = ((b >> 4) & 0x07);\n        // create our type of address now\n        return new TypeOfAddress(Ton.fromInt(ton), Npi.fromInt(npi));\n    }", "signature": "TypeOfAddress valueOf(byte b)", "full_signature": "public static TypeOfAddress valueOf(byte b)", "class_method_signature": "TypeOfAddress.valueOf(byte b)", "testcase": false, "constructor": false, "invocations": ["fromInt", "fromInt"]}, "repository": {"repo_id": 14960307, "url": "https://github.com/twitter/cloudhopper-commons", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 36, "size": 6452, "license": "licensed"}}