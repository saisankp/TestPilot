{"test_class": {"identifier": "ConfigurationInitializerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private PropertyLoader propertyLoader;", "modifier": "@Mock\n    private", "type": "PropertyLoader", "declarator": "propertyLoader", "var_name": "propertyLoader"}, {"original_string": "@Mock\n    private PropertyValidator validator;", "modifier": "@Mock\n    private", "type": "PropertyValidator", "declarator": "validator", "var_name": "validator"}, {"original_string": "@Mock\n    private FileBasedStubConfigReader fileBasedStubConfigReader;", "modifier": "@Mock\n    private", "type": "FileBasedStubConfigReader", "declarator": "fileBasedStubConfigReader", "var_name": "fileBasedStubConfigReader"}, {"original_string": "@Mock\n    private WilmaAdminHostsFileParser wilmaAdminHostsFileParser;", "modifier": "@Mock\n    private", "type": "WilmaAdminHostsFileParser", "declarator": "wilmaAdminHostsFileParser", "var_name": "wilmaAdminHostsFileParser"}, {"original_string": "@Mock\n    private ConfigurationAccessBase configAccess;", "modifier": "@Mock\n    private", "type": "ConfigurationAccessBase", "declarator": "configAccess", "var_name": "configAccess"}, {"original_string": "@InjectMocks\n    private ConfigurationInitializer underTest;", "modifier": "@InjectMocks\n    private", "type": "ConfigurationInitializer", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-engine/src/test/java/com/epam/wilma/engine/initializer/ConfigurationInitializerTest.java"}, "test_case": {"identifier": "testAfterPropertiesSetShouldParseWilmaAdminHosts", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n    public final void testAfterPropertiesSetShouldParseWilmaAdminHosts() throws Exception {\n        //GIVEN in setup\n        //WHEN\n        underTest.afterPropertiesSet();\n        //THEN\n        verify(wilmaAdminHostsFileParser).parseFile();\n    }", "signature": "void testAfterPropertiesSetShouldParseWilmaAdminHosts()", "full_signature": "@Test public final void testAfterPropertiesSetShouldParseWilmaAdminHosts()", "class_method_signature": "ConfigurationInitializerTest.testAfterPropertiesSetShouldParseWilmaAdminHosts()", "testcase": true, "constructor": false, "invocations": ["afterPropertiesSet", "parseFile", "verify"]}, "focal_class": {"identifier": "ConfigurationInitializer", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private PropertyLoader propertyLoader;", "modifier": "@Autowired\n    private", "type": "PropertyLoader", "declarator": "propertyLoader", "var_name": "propertyLoader"}, {"original_string": "@Autowired\n    private PropertyValidator validator;", "modifier": "@Autowired\n    private", "type": "PropertyValidator", "declarator": "validator", "var_name": "validator"}, {"original_string": "@Autowired\n    private FileBasedStubConfigReader fileBasedStubConfigReader;", "modifier": "@Autowired\n    private", "type": "FileBasedStubConfigReader", "declarator": "fileBasedStubConfigReader", "var_name": "fileBasedStubConfigReader"}, {"original_string": "@Autowired\n    private WilmaAdminHostsFileParser wilmaAdminHostsFileParser;", "modifier": "@Autowired\n    private", "type": "WilmaAdminHostsFileParser", "declarator": "wilmaAdminHostsFileParser", "var_name": "wilmaAdminHostsFileParser"}, {"original_string": "@Autowired\n    private List<ConfigurationAccessBase> configurationAccesses;", "modifier": "@Autowired\n    private", "type": "List<ConfigurationAccessBase>", "declarator": "configurationAccesses", "var_name": "configurationAccesses"}], "methods": [{"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "@PostConstruct", "return": "void", "signature": "void afterPropertiesSet()", "full_signature": "@PostConstruct void afterPropertiesSet()", "class_method_signature": "ConfigurationInitializer.afterPropertiesSet()", "testcase": false, "constructor": false}, {"identifier": "loadProperties", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void loadProperties()", "full_signature": "private void loadProperties()", "class_method_signature": "ConfigurationInitializer.loadProperties()", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-engine/src/main/java/com/epam/wilma/engine/initializer/ConfigurationInitializer.java"}, "focal_method": {"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "@PostConstruct", "return": "void", "body": "@PostConstruct\n    void afterPropertiesSet() throws Exception {\n        propertyLoader.loadProperties();\n        propertyLoader.loadValidationProperties();\n        validator.validateProperties();\n        loadProperties();\n        fileBasedStubConfigReader.readStubConfiguration();\n        wilmaAdminHostsFileParser.parseFile();\n    }", "signature": "void afterPropertiesSet()", "full_signature": "@PostConstruct void afterPropertiesSet()", "class_method_signature": "ConfigurationInitializer.afterPropertiesSet()", "testcase": false, "constructor": false, "invocations": ["loadProperties", "loadValidationProperties", "validateProperties", "loadProperties", "readStubConfiguration", "parseFile"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}