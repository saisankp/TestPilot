{"test_class": {"identifier": "ComparableDependencyTest", "superclass": "", "interfaces": "", "fields": [], "file": "status-core/src/test/java/com/indeed/status/core/ComparableDependencyTest.java"}, "test_case": {"identifier": "testException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testException() throws Exception {\n        final CompDep compDep = new CompDep(null, 5, 10, 15);\n        assertEquals(\"OUTAGE,null,null,java.lang.NullPointerException\", compDep.call().getErrorMessage());\n    }", "signature": "void testException()", "full_signature": "@Test public void testException()", "class_method_signature": "ComparableDependencyTest.testException()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getErrorMessage", "call"]}, "focal_class": {"identifier": "ComparableDependency", "superclass": "extends AbstractDependency", "interfaces": "", "fields": [{"original_string": "@SuppressWarnings (\"UnusedDeclaration\")\n    private static final Logger log = Logger.getLogger(ComparableDependency.class);", "modifier": "@SuppressWarnings (\"UnusedDeclaration\")\n    private static final", "type": "Logger", "declarator": "log = Logger.getLogger(ComparableDependency.class)", "var_name": "log"}, {"original_string": "@Nonnull\n    private final T maxOK;", "modifier": "@Nonnull\n    private final", "type": "T", "declarator": "maxOK", "var_name": "maxOK"}, {"original_string": "@Nullable\n    private final T maxMinor;", "modifier": "@Nullable\n    private final", "type": "T", "declarator": "maxMinor", "var_name": "maxMinor"}, {"original_string": "@Nullable\n    private final T maxMajor;", "modifier": "@Nullable\n    private final", "type": "T", "declarator": "maxMajor", "var_name": "maxMajor"}], "methods": [{"identifier": "ComparableDependency", "parameters": "(\n            @Nonnull final String id,\n            @Nonnull final String description,\n            final long timeout,\n            final long pingPeriod,\n            @Nonnull final Urgency urgency,\n            @Nonnull final T maxOK,\n            @Nullable final T maxMinor,\n            @Nullable final T maxMajor\n    )", "modifiers": "@Deprecated public", "return": "", "signature": " ComparableDependency(\n            @Nonnull final String id,\n            @Nonnull final String description,\n            final long timeout,\n            final long pingPeriod,\n            @Nonnull final Urgency urgency,\n            @Nonnull final T maxOK,\n            @Nullable final T maxMinor,\n            @Nullable final T maxMajor\n    )", "full_signature": "@Deprecated public  ComparableDependency(\n            @Nonnull final String id,\n            @Nonnull final String description,\n            final long timeout,\n            final long pingPeriod,\n            @Nonnull final Urgency urgency,\n            @Nonnull final T maxOK,\n            @Nullable final T maxMinor,\n            @Nullable final T maxMajor\n    )", "class_method_signature": "ComparableDependency.ComparableDependency(\n            @Nonnull final String id,\n            @Nonnull final String description,\n            final long timeout,\n            final long pingPeriod,\n            @Nonnull final Urgency urgency,\n            @Nonnull final T maxOK,\n            @Nullable final T maxMinor,\n            @Nullable final T maxMajor\n    )", "testcase": false, "constructor": true}, {"identifier": "ComparableDependency", "parameters": "(\n            @Nonnull final String id,\n            @Nonnull final String description,\n            final long timeout,\n            final long pingPeriod,\n            @Nonnull final Urgency urgency,\n            @Nonnull final DependencyType type,\n            @Nonnull final String servicePool,\n            @Nonnull final T maxOK,\n            @Nullable final T maxMinor,\n            @Nullable final T maxMajor\n    )", "modifiers": "public", "return": "", "signature": " ComparableDependency(\n            @Nonnull final String id,\n            @Nonnull final String description,\n            final long timeout,\n            final long pingPeriod,\n            @Nonnull final Urgency urgency,\n            @Nonnull final DependencyType type,\n            @Nonnull final String servicePool,\n            @Nonnull final T maxOK,\n            @Nullable final T maxMinor,\n            @Nullable final T maxMajor\n    )", "full_signature": "public  ComparableDependency(\n            @Nonnull final String id,\n            @Nonnull final String description,\n            final long timeout,\n            final long pingPeriod,\n            @Nonnull final Urgency urgency,\n            @Nonnull final DependencyType type,\n            @Nonnull final String servicePool,\n            @Nonnull final T maxOK,\n            @Nullable final T maxMinor,\n            @Nullable final T maxMajor\n    )", "class_method_signature": "ComparableDependency.ComparableDependency(\n            @Nonnull final String id,\n            @Nonnull final String description,\n            final long timeout,\n            final long pingPeriod,\n            @Nonnull final Urgency urgency,\n            @Nonnull final DependencyType type,\n            @Nonnull final String servicePool,\n            @Nonnull final T maxOK,\n            @Nullable final T maxMinor,\n            @Nullable final T maxMajor\n    )", "testcase": false, "constructor": true}, {"identifier": "call", "parameters": "()", "modifiers": "@Override public final", "return": "CheckResult", "signature": "CheckResult call()", "full_signature": "@Override public final CheckResult call()", "class_method_signature": "ComparableDependency.call()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "protected abstract", "return": "T", "signature": "T getValue()", "full_signature": "protected abstract T getValue()", "class_method_signature": "ComparableDependency.getValue()", "testcase": false, "constructor": false}, {"identifier": "formatErrorMessage", "parameters": "(CheckStatus status, @Nullable T value, @Nullable T brokenThreshold, long timestamp, long duration, @Nullable Exception e)", "modifiers": "protected abstract", "return": "String", "signature": "String formatErrorMessage(CheckStatus status, @Nullable T value, @Nullable T brokenThreshold, long timestamp, long duration, @Nullable Exception e)", "full_signature": "protected abstract String formatErrorMessage(CheckStatus status, @Nullable T value, @Nullable T brokenThreshold, long timestamp, long duration, @Nullable Exception e)", "class_method_signature": "ComparableDependency.formatErrorMessage(CheckStatus status, @Nullable T value, @Nullable T brokenThreshold, long timestamp, long duration, @Nullable Exception e)", "testcase": false, "constructor": false}], "file": "status-core/src/main/java/com/indeed/status/core/ComparableDependency.java"}, "focal_method": {"identifier": "call", "parameters": "()", "modifiers": "@Override public final", "return": "CheckResult", "body": "@Override\n    public final CheckResult call() throws Exception {\n        // TODO Replace this with a SimpleDependency and a CheckMethod that accepts a WallClock.\n        final long start = System.currentTimeMillis();\n        try {\n            final T value = getValue();\n            final CheckStatus status;\n            final T threshold;\n            if (value.compareTo(maxOK) <= 0) {\n                threshold = null;\n                status = CheckStatus.OK;\n            } else if (maxMinor != null && value.compareTo(maxMinor) <= 0) {\n                threshold = maxOK;\n                status = CheckStatus.MINOR;\n            } else if (maxMajor != null && value.compareTo(maxMajor) <= 0) {\n                threshold = maxMinor;\n                status = CheckStatus.MAJOR;\n            } else {\n                threshold = maxMajor != null ? maxMajor : (maxMinor != null ? maxMinor : maxOK);\n                status = CheckStatus.OUTAGE;\n            }\n            final long duration = System.currentTimeMillis() - start;\n            final String errorMessage = formatErrorMessage(status, value, threshold, start, duration, null);\n            return CheckResult.newBuilder(this, status, errorMessage)\n                    .setTimestamp(start)\n                    .setDuration(duration)\n                    .build();\n\n        } catch (final Exception e) {\n            final long duration = System.currentTimeMillis() - start;\n            final String errorMessage = formatErrorMessage(CheckStatus.OUTAGE, null, null, start, duration, e);\n            return CheckResult.newBuilder(this, CheckStatus.OUTAGE, errorMessage)\n                    .setTimestamp(start)\n                    .setDuration(duration)\n                    .setThrowable(e)\n                    .build();\n        }\n    }", "signature": "CheckResult call()", "full_signature": "@Override public final CheckResult call()", "class_method_signature": "ComparableDependency.call()", "testcase": false, "constructor": false, "invocations": ["currentTimeMillis", "getValue", "compareTo", "compareTo", "compareTo", "currentTimeMillis", "formatErrorMessage", "build", "setDuration", "setTimestamp", "newBuilder", "currentTimeMillis", "formatErrorMessage", "build", "setThrowable", "setDuration", "setTimestamp", "newBuilder"]}, "repository": {"repo_id": 15592774, "url": "https://github.com/indeedeng/status", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 17, "size": 467, "license": "licensed"}}