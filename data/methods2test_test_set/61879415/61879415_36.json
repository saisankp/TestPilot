{"test_class": {"identifier": "IdentityScriptValueGeneratorTest", "superclass": "extends AbstractGeneratorTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate IdmIdentityService identityService;", "modifier": "@Autowired\n\tprivate", "type": "IdmIdentityService", "declarator": "identityService", "var_name": "identityService"}, {"original_string": "@Autowired\n\tprivate IdmScriptService scriptService;", "modifier": "@Autowired\n\tprivate", "type": "IdmScriptService", "declarator": "scriptService", "var_name": "scriptService"}, {"original_string": "@Autowired\n\tprivate IdmScriptAuthorityService scriptAuthorityService;", "modifier": "@Autowired\n\tprivate", "type": "IdmScriptAuthorityService", "declarator": "scriptAuthorityService", "var_name": "scriptAuthorityService"}], "file": "Realization/backend/core/core-impl/src/test/java/eu/bcvsolutions/idm/core/generator/identity/IdentityScriptValueGeneratorTest.java"}, "test_case": {"identifier": "testGreenLine", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGreenLine() {\n\t\tIdmScriptDto script = createScript(\n\t\t\t\t\"import \" + StringUtils.class.getCanonicalName() + \";\" + System.lineSeparator() +\n\t\t\t\t\"if (!valueGenerator.isRegenerateValue() && StringUtils.isNotEmpty(entity.getDescription())) {\" + System.lineSeparator() +\n\t\t\t\t\"\treturn entity;\" + System.lineSeparator() +\n\t\t\t\t\"}\" + System.lineSeparator() +\n\t\t\t\t\"\" + System.lineSeparator() +\n\t\t\t\t\"entity.setDescription(entity.getUsername() + 123);\" + System.lineSeparator());\n\t\t\n\t\tString username = this.getHelper().createName();\n\n\t\tIdmIdentityDto identityDto = new IdmIdentityDto();\n\t\tidentityDto.setFirstName(this.getHelper().createName());\n\t\tidentityDto.setLastName(this.getHelper().createName());\n\t\tidentityDto.setUsername(username);\n\n\t\tValueGeneratorDto generator = getGenerator();\n\n\t\tthis.createGenerator(getDtoType(), getGeneratorType(),\n\t\t\t\tthis.createConfiguration(generator.getFormDefinition(), ImmutableMap.of(\n\t\t\t\t\t\tIdentityScriptValueGenerator.SCRIPT_CODE, script.getCode())), 1, null);\n\n\t\tIdmIdentityDto generatedDto = valueGeneratorManager.generate(identityDto);\n\t\tassertNotNull(generatedDto.getDescription());\n\t\tassertEquals(username + 123, generatedDto.getDescription());\n\t}", "signature": "void testGreenLine()", "full_signature": "@Test public void testGreenLine()", "class_method_signature": "IdentityScriptValueGeneratorTest.testGreenLine()", "testcase": true, "constructor": false, "invocations": ["createScript", "getCanonicalName", "lineSeparator", "lineSeparator", "lineSeparator", "lineSeparator", "lineSeparator", "lineSeparator", "createName", "getHelper", "setFirstName", "createName", "getHelper", "setLastName", "createName", "getHelper", "setUsername", "getGenerator", "createGenerator", "getDtoType", "getGeneratorType", "createConfiguration", "getFormDefinition", "of", "getCode", "generate", "assertNotNull", "getDescription", "assertEquals", "getDescription"]}, "focal_class": {"identifier": "IdentityScriptValueGenerator", "superclass": "extends AbstractValueGenerator<IdmIdentityDto>", "interfaces": "", "fields": [{"original_string": "public static final String GENERATOR_NAME = \"core-identity-script-value-generator\";", "modifier": "public static final", "type": "String", "declarator": "GENERATOR_NAME = \"core-identity-script-value-generator\"", "var_name": "GENERATOR_NAME"}, {"original_string": "public static String SCRIPT_CODE = \"scriptCode\";", "modifier": "public static", "type": "String", "declarator": "SCRIPT_CODE = \"scriptCode\"", "var_name": "SCRIPT_CODE"}, {"original_string": "public static String ENTITY_KEY = \"entity\";", "modifier": "public static", "type": "String", "declarator": "ENTITY_KEY = \"entity\"", "var_name": "ENTITY_KEY"}, {"original_string": "public static String VALUE_GENERATOR_KEY = \"valueGenerator\";", "modifier": "public static", "type": "String", "declarator": "VALUE_GENERATOR_KEY = \"valueGenerator\"", "var_name": "VALUE_GENERATOR_KEY"}, {"original_string": "@Autowired\n\tprivate DefaultSystemScriptEvaluator systemScriptEvaluator;", "modifier": "@Autowired\n\tprivate", "type": "DefaultSystemScriptEvaluator", "declarator": "systemScriptEvaluator", "var_name": "systemScriptEvaluator"}], "methods": [{"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "IdentityScriptValueGenerator.getName()", "testcase": false, "constructor": false}, {"identifier": "generate", "parameters": "(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator)", "modifiers": "@Override public", "return": "IdmIdentityDto", "signature": "IdmIdentityDto generate(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator)", "full_signature": "@Override public IdmIdentityDto generate(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator)", "class_method_signature": "IdentityScriptValueGenerator.generate(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator)", "testcase": false, "constructor": false}, {"identifier": "getPropertyNames", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getPropertyNames()", "full_signature": "@Override public List<String> getPropertyNames()", "class_method_signature": "IdentityScriptValueGenerator.getPropertyNames()", "testcase": false, "constructor": false}, {"identifier": "getFormAttributes", "parameters": "()", "modifiers": "@Override public", "return": "List<IdmFormAttributeDto>", "signature": "List<IdmFormAttributeDto> getFormAttributes()", "full_signature": "@Override public List<IdmFormAttributeDto> getFormAttributes()", "class_method_signature": "IdentityScriptValueGenerator.getFormAttributes()", "testcase": false, "constructor": false}, {"identifier": "getScriptCode", "parameters": "(IdmGenerateValueDto valueGenerator)", "modifiers": "private", "return": "String", "signature": "String getScriptCode(IdmGenerateValueDto valueGenerator)", "full_signature": "private String getScriptCode(IdmGenerateValueDto valueGenerator)", "class_method_signature": "IdentityScriptValueGenerator.getScriptCode(IdmGenerateValueDto valueGenerator)", "testcase": false, "constructor": false}], "file": "Realization/backend/core/core-impl/src/main/java/eu/bcvsolutions/idm/core/generator/identity/IdentityScriptValueGenerator.java"}, "focal_method": {"identifier": "generate", "parameters": "(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator)", "modifiers": "@Override public", "return": "IdmIdentityDto", "body": "@Override\n\tpublic IdmIdentityDto generate(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator) {\n\t\tAssert.notNull(dto, \"DTO is required.\");\n\t\tAssert.notNull(valueGenerator, \"Value generator is required.\");\n\t\t//\n\t\tString scriptCode = getScriptCode(valueGenerator);\n\t\tObject returnValue = systemScriptEvaluator.evaluate(new AbstractScriptEvaluator.Builder()\n\t\t\t\t.setScriptCode(scriptCode)\n\t\t\t\t.addParameter(ENTITY_KEY, dto)\n\t\t\t\t.addParameter(VALUE_GENERATOR_KEY, valueGenerator));\n\t\t//\n\t\tif (returnValue == null || !(returnValue instanceof IdmIdentityDto)) {\n\t\t\tthrow new ResultCodeException(CoreResultCode.GENERATOR_SCRIPT_RETURN_NULL_OR_BAD_DTO_TYPE,\n\t\t\t\t\tImmutableMap.of(\n\t\t\t\t\t\t\t\"scriptCode\", scriptCode == null ? \"null\" : scriptCode,\n\t\t\t\t\t\t\t\"returnedValue\", returnValue == null ? \"null\" : returnValue));\n\t\t}\n\t\t//\n\t\treturn (IdmIdentityDto) returnValue;\n\n\t}", "signature": "IdmIdentityDto generate(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator)", "full_signature": "@Override public IdmIdentityDto generate(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator)", "class_method_signature": "IdentityScriptValueGenerator.generate(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator)", "testcase": false, "constructor": false, "invocations": ["notNull", "notNull", "getScriptCode", "evaluate", "addParameter", "addParameter", "setScriptCode", "of"]}, "repository": {"repo_id": 61879415, "url": "https://github.com/bcvsolutions/CzechIdMng", "stars": 25, "created": "6/24/2016 11:18:23 AM +00:00", "updates": "2020-01-27T15:14:40+00:00", "fork": "False", "license": "licensed"}}