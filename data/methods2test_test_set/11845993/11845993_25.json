{"test_class": {"identifier": "CallStackElementTest", "superclass": "", "interfaces": "", "fields": [], "file": "stagemonitor-tracing/src/test/java/org/stagemonitor/tracing/profiler/CallStackElementTest.java"}, "test_case": {"identifier": "printPercentAsBar", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void printPercentAsBar() throws Exception {\n\t\tAssert.assertEquals(\"|||||-----\", CallStackElement.printPercentAsBar(0.54d, 10, false));\n\t\t// \u2588\u2588\u2588\u2588\u2588\u2593\u2592\u2592\u2592\u2592\n\t\tchar[] chars = {9608, 9608, 9608, 9608, 9608, 9619, 9617, 9617, 9617, 9617};\n\t\tAssert.assertEquals(new String(chars), CallStackElement.printPercentAsBar(0.56d, 10, true));\n\t}", "signature": "void printPercentAsBar()", "full_signature": "@Test public void printPercentAsBar()", "class_method_signature": "CallStackElementTest.printPercentAsBar()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "printPercentAsBar", "assertEquals", "printPercentAsBar"]}, "focal_class": {"identifier": "CallStackElement", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final boolean useObjectPooling = Stagemonitor.getPlugin(TracingPlugin.class).isProfilerObjectPoolingActive();", "modifier": "private static final", "type": "boolean", "declarator": "useObjectPooling = Stagemonitor.getPlugin(TracingPlugin.class).isProfilerObjectPoolingActive()", "var_name": "useObjectPooling"}, {"original_string": "private static Queue<CallStackElement> objectPool;", "modifier": "private static", "type": "Queue<CallStackElement>", "declarator": "objectPool", "var_name": "objectPool"}, {"original_string": "private static final String HORIZONTAL;", "modifier": "private static final", "type": "String", "declarator": "HORIZONTAL", "var_name": "HORIZONTAL"}, {"original_string": "private static final String HORIZONTAL_ANGLE;", "modifier": "private static final", "type": "String", "declarator": "HORIZONTAL_ANGLE", "var_name": "HORIZONTAL_ANGLE"}, {"original_string": "private static final String ANGLE;", "modifier": "private static final", "type": "String", "declarator": "ANGLE", "var_name": "ANGLE"}, {"original_string": "@JsonIgnore\n\tprivate CallStackElement parent;", "modifier": "@JsonIgnore\n\tprivate", "type": "CallStackElement", "declarator": "parent", "var_name": "parent"}, {"original_string": "private String signature;", "modifier": "private", "type": "String", "declarator": "signature", "var_name": "signature"}, {"original_string": "private long executionTime;", "modifier": "private", "type": "long", "declarator": "executionTime", "var_name": "executionTime"}, {"original_string": "private List<CallStackElement> children = new LinkedList<CallStackElement>();", "modifier": "private", "type": "List<CallStackElement>", "declarator": "children = new LinkedList<CallStackElement>()", "var_name": "children"}], "methods": [{"identifier": "createRoot", "parameters": "(String signature)", "modifiers": "public static", "return": "CallStackElement", "signature": "CallStackElement createRoot(String signature)", "full_signature": "public static CallStackElement createRoot(String signature)", "class_method_signature": "CallStackElement.createRoot(String signature)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(CallStackElement parent, String signature)", "modifiers": "public static", "return": "CallStackElement", "signature": "CallStackElement create(CallStackElement parent, String signature)", "full_signature": "public static CallStackElement create(CallStackElement parent, String signature)", "class_method_signature": "CallStackElement.create(CallStackElement parent, String signature)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(CallStackElement parent, String signature, long startTimestamp)", "modifiers": "public static", "return": "CallStackElement", "signature": "CallStackElement create(CallStackElement parent, String signature, long startTimestamp)", "full_signature": "public static CallStackElement create(CallStackElement parent, String signature, long startTimestamp)", "class_method_signature": "CallStackElement.create(CallStackElement parent, String signature, long startTimestamp)", "testcase": false, "constructor": false}, {"identifier": "recycle", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void recycle()", "full_signature": "public void recycle()", "class_method_signature": "CallStackElement.recycle()", "testcase": false, "constructor": false}, {"identifier": "removeCallsFasterThan", "parameters": "(long thresholdNs)", "modifiers": "public", "return": "void", "signature": "void removeCallsFasterThan(long thresholdNs)", "full_signature": "public void removeCallsFasterThan(long thresholdNs)", "class_method_signature": "CallStackElement.removeCallsFasterThan(long thresholdNs)", "testcase": false, "constructor": false}, {"identifier": "isIOQuery", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isIOQuery()", "full_signature": "public boolean isIOQuery()", "class_method_signature": "CallStackElement.isIOQuery()", "testcase": false, "constructor": false}, {"identifier": "getExecutionTime", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getExecutionTime()", "full_signature": "public long getExecutionTime()", "class_method_signature": "CallStackElement.getExecutionTime()", "testcase": false, "constructor": false}, {"identifier": "setExecutionTime", "parameters": "(long executionTime)", "modifiers": "public", "return": "void", "signature": "void setExecutionTime(long executionTime)", "full_signature": "public void setExecutionTime(long executionTime)", "class_method_signature": "CallStackElement.setExecutionTime(long executionTime)", "testcase": false, "constructor": false}, {"identifier": "getNetExecutionTime", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getNetExecutionTime()", "full_signature": "public long getNetExecutionTime()", "class_method_signature": "CallStackElement.getNetExecutionTime()", "testcase": false, "constructor": false}, {"identifier": "incrementExecutionTime", "parameters": "(long additionalExecutionTime)", "modifiers": "public", "return": "void", "signature": "void incrementExecutionTime(long additionalExecutionTime)", "full_signature": "public void incrementExecutionTime(long additionalExecutionTime)", "class_method_signature": "CallStackElement.incrementExecutionTime(long additionalExecutionTime)", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "public", "return": "List<CallStackElement>", "signature": "List<CallStackElement> getChildren()", "full_signature": "public List<CallStackElement> getChildren()", "class_method_signature": "CallStackElement.getChildren()", "testcase": false, "constructor": false}, {"identifier": "setChildren", "parameters": "(List<CallStackElement> children)", "modifiers": "public", "return": "void", "signature": "void setChildren(List<CallStackElement> children)", "full_signature": "public void setChildren(List<CallStackElement> children)", "class_method_signature": "CallStackElement.setChildren(List<CallStackElement> children)", "testcase": false, "constructor": false}, {"identifier": "getSignature", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSignature()", "full_signature": "public String getSignature()", "class_method_signature": "CallStackElement.getSignature()", "testcase": false, "constructor": false}, {"identifier": "setSignature", "parameters": "(String signature)", "modifiers": "public", "return": "void", "signature": "void setSignature(String signature)", "full_signature": "public void setSignature(String signature)", "class_method_signature": "CallStackElement.setSignature(String signature)", "testcase": false, "constructor": false}, {"identifier": "getShortSignature", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getShortSignature()", "full_signature": "public String getShortSignature()", "class_method_signature": "CallStackElement.getShortSignature()", "testcase": false, "constructor": false}, {"identifier": "getParent", "parameters": "()", "modifiers": "public", "return": "CallStackElement", "signature": "CallStackElement getParent()", "full_signature": "public CallStackElement getParent()", "class_method_signature": "CallStackElement.getParent()", "testcase": false, "constructor": false}, {"identifier": "setParent", "parameters": "(CallStackElement parent)", "modifiers": "public", "return": "void", "signature": "void setParent(CallStackElement parent)", "full_signature": "public void setParent(CallStackElement parent)", "class_method_signature": "CallStackElement.setParent(CallStackElement parent)", "testcase": false, "constructor": false}, {"identifier": "removeLastChild", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void removeLastChild()", "full_signature": "private void removeLastChild()", "class_method_signature": "CallStackElement.removeLastChild()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void remove()", "full_signature": "public void remove()", "class_method_signature": "CallStackElement.remove()", "testcase": false, "constructor": false}, {"identifier": "executionStopped", "parameters": "(long executionTime)", "modifiers": "public", "return": "void", "signature": "void executionStopped(long executionTime)", "full_signature": "public void executionStopped(long executionTime)", "class_method_signature": "CallStackElement.executionStopped(long executionTime)", "testcase": false, "constructor": false}, {"identifier": "executionStopped", "parameters": "(long timestamp, long minExecutionTime)", "modifiers": "public", "return": "CallStackElement", "signature": "CallStackElement executionStopped(long timestamp, long minExecutionTime)", "full_signature": "public CallStackElement executionStopped(long timestamp, long minExecutionTime)", "class_method_signature": "CallStackElement.executionStopped(long timestamp, long minExecutionTime)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "CallStackElement.toString()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(boolean asciiArt, AsciiCallTreeSignatureFormatter callTreeAsciiFormatter)", "modifiers": "public", "return": "String", "signature": "String toString(boolean asciiArt, AsciiCallTreeSignatureFormatter callTreeAsciiFormatter)", "full_signature": "public String toString(boolean asciiArt, AsciiCallTreeSignatureFormatter callTreeAsciiFormatter)", "class_method_signature": "CallStackElement.toString(boolean asciiArt, AsciiCallTreeSignatureFormatter callTreeAsciiFormatter)", "testcase": false, "constructor": false}, {"identifier": "logStats", "parameters": "(long totalExecutionTimeNs, Deque<String> indentationStack, StringBuilder sb,\n\t\t\t\t\t\t  final boolean asciiArt, AsciiCallTreeSignatureFormatter callTreeAsciiFormatter)", "modifiers": "private", "return": "void", "signature": "void logStats(long totalExecutionTimeNs, Deque<String> indentationStack, StringBuilder sb,\n\t\t\t\t\t\t  final boolean asciiArt, AsciiCallTreeSignatureFormatter callTreeAsciiFormatter)", "full_signature": "private void logStats(long totalExecutionTimeNs, Deque<String> indentationStack, StringBuilder sb,\n\t\t\t\t\t\t  final boolean asciiArt, AsciiCallTreeSignatureFormatter callTreeAsciiFormatter)", "class_method_signature": "CallStackElement.logStats(long totalExecutionTimeNs, Deque<String> indentationStack, StringBuilder sb,\n\t\t\t\t\t\t  final boolean asciiArt, AsciiCallTreeSignatureFormatter callTreeAsciiFormatter)", "testcase": false, "constructor": false}, {"identifier": "appendTimesPercentTable", "parameters": "(long totalExecutionTimeNs, StringBuilder sb, boolean asciiArt)", "modifiers": "private", "return": "void", "signature": "void appendTimesPercentTable(long totalExecutionTimeNs, StringBuilder sb, boolean asciiArt)", "full_signature": "private void appendTimesPercentTable(long totalExecutionTimeNs, StringBuilder sb, boolean asciiArt)", "class_method_signature": "CallStackElement.appendTimesPercentTable(long totalExecutionTimeNs, StringBuilder sb, boolean asciiArt)", "testcase": false, "constructor": false}, {"identifier": "appendNumber", "parameters": "(StringBuilder sb, long time)", "modifiers": "private", "return": "void", "signature": "void appendNumber(StringBuilder sb, long time)", "full_signature": "private void appendNumber(StringBuilder sb, long time)", "class_method_signature": "CallStackElement.appendNumber(StringBuilder sb, long time)", "testcase": false, "constructor": false}, {"identifier": "appendPercent", "parameters": "(StringBuilder sb, long time, long totalExecutionTimeNs, boolean asciiArt)", "modifiers": "private", "return": "void", "signature": "void appendPercent(StringBuilder sb, long time, long totalExecutionTimeNs, boolean asciiArt)", "full_signature": "private void appendPercent(StringBuilder sb, long time, long totalExecutionTimeNs, boolean asciiArt)", "class_method_signature": "CallStackElement.appendPercent(StringBuilder sb, long time, long totalExecutionTimeNs, boolean asciiArt)", "testcase": false, "constructor": false}, {"identifier": "printPercentAsBar", "parameters": "(double percent, int totalBars, boolean asciiArt)", "modifiers": "static", "return": "String", "signature": "String printPercentAsBar(double percent, int totalBars, boolean asciiArt)", "full_signature": "static String printPercentAsBar(double percent, int totalBars, boolean asciiArt)", "class_method_signature": "CallStackElement.printPercentAsBar(double percent, int totalBars, boolean asciiArt)", "testcase": false, "constructor": false}, {"identifier": "appendCallTree", "parameters": "(Deque<String> indentationStack, StringBuilder sb, final boolean asciiArt, AsciiCallTreeSignatureFormatter callTreeAsciiFormatter)", "modifiers": "private", "return": "void", "signature": "void appendCallTree(Deque<String> indentationStack, StringBuilder sb, final boolean asciiArt, AsciiCallTreeSignatureFormatter callTreeAsciiFormatter)", "full_signature": "private void appendCallTree(Deque<String> indentationStack, StringBuilder sb, final boolean asciiArt, AsciiCallTreeSignatureFormatter callTreeAsciiFormatter)", "class_method_signature": "CallStackElement.appendCallTree(Deque<String> indentationStack, StringBuilder sb, final boolean asciiArt, AsciiCallTreeSignatureFormatter callTreeAsciiFormatter)", "testcase": false, "constructor": false}, {"identifier": "isLastChild", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isLastChild()", "full_signature": "private boolean isLastChild()", "class_method_signature": "CallStackElement.isLastChild()", "testcase": false, "constructor": false}, {"identifier": "isRoot", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isRoot()", "full_signature": "private boolean isRoot()", "class_method_signature": "CallStackElement.isRoot()", "testcase": false, "constructor": false}], "file": "stagemonitor-tracing/src/main/java/org/stagemonitor/tracing/profiler/CallStackElement.java"}, "focal_method": {"identifier": "printPercentAsBar", "parameters": "(double percent, int totalBars, boolean asciiArt)", "modifiers": "static", "return": "String", "body": "static String printPercentAsBar(double percent, int totalBars, boolean asciiArt) {\n\t\tint actualBars = (int) (percent * totalBars);\n\t\tboolean includeHalfBarAtEnd = actualBars * 2 != (int) (percent * totalBars * 2);\n\t\tStringBuilder sb = new StringBuilder(totalBars);\n\t\tfor (int i = 0; i < totalBars; i++) {\n\t\t\tif (i < actualBars) {\n\t\t\t\tsb.append(asciiArt ? (char) 9608 : '|');\n\t\t\t} else if (i == actualBars && includeHalfBarAtEnd) {\n\t\t\t\tsb.append(asciiArt ? (char) 9619 : ':');\n\t\t\t} else {\n\t\t\t\tsb.append(asciiArt ? (char) 9617 : '-');\n\t\t\t}\n\t\t}\n\t\treturn sb.toString();\n\t}", "signature": "String printPercentAsBar(double percent, int totalBars, boolean asciiArt)", "full_signature": "static String printPercentAsBar(double percent, int totalBars, boolean asciiArt)", "class_method_signature": "CallStackElement.printPercentAsBar(double percent, int totalBars, boolean asciiArt)", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "toString"]}, "repository": {"repo_id": 11845993, "url": "https://github.com/stagemonitor/stagemonitor", "language": "Java", "is_fork": false, "fork_count": 268, "stargazer_count": 1585, "size": 10342, "license": "licensed"}}