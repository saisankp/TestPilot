{"test_class": {"identifier": "SplitHandlerTest", "superclass": "", "interfaces": "", "fields": [], "file": "fdb-sql-layer-core/src/test/java/com/foundationdb/server/store/statistics/histograms/SplitHandlerTest.java"}, "test_case": {"identifier": "visitBeforeInit", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n    public void visitBeforeInit() {\n        ToArraySplitHandler handler = new ToArraySplitHandler(new BucketTestUtils.SingletonSplitter<String>());\n        handler.visit(\"foo\");\n    }", "signature": "void visitBeforeInit()", "full_signature": "@Test(expected = IllegalStateException.class) public void visitBeforeInit()", "class_method_signature": "SplitHandlerTest.visitBeforeInit()", "testcase": true, "constructor": false, "invocations": ["visit"]}, "focal_class": {"identifier": "SplitHandler", "superclass": "", "interfaces": "implements SampleVisitor<T>", "fields": [{"original_string": "private final Splitter<T> splitter;", "modifier": "private final", "type": "Splitter<T>", "declarator": "splitter", "var_name": "splitter"}, {"original_string": "private final int segments;", "modifier": "private final", "type": "int", "declarator": "segments", "var_name": "segments"}, {"original_string": "private List<SegmentBuffer<T>> buffers;", "modifier": "private", "type": "List<SegmentBuffer<T>>", "declarator": "buffers", "var_name": "buffers"}, {"original_string": "private final List<T> recycleBin;", "modifier": "private final", "type": "List<T>", "declarator": "recycleBin", "var_name": "recycleBin"}], "methods": [{"identifier": "handle", "parameters": "(int segmentIndex, T input, int count)", "modifiers": "protected abstract", "return": "void", "signature": "void handle(int segmentIndex, T input, int count)", "full_signature": "protected abstract void handle(int segmentIndex, T input, int count)", "class_method_signature": "SplitHandler.handle(int segmentIndex, T input, int count)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void init()", "full_signature": "@Override public void init()", "class_method_signature": "SplitHandler.init()", "testcase": false, "constructor": false}, {"identifier": "finish", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void finish()", "full_signature": "@Override public void finish()", "class_method_signature": "SplitHandler.finish()", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(T input)", "modifiers": "@Override public", "return": "List<? extends T>", "signature": "List<? extends T> visit(T input)", "full_signature": "@Override public List<? extends T> visit(T input)", "class_method_signature": "SplitHandler.visit(T input)", "testcase": false, "constructor": false}, {"identifier": "SplitHandler", "parameters": "(Splitter<T> splitter)", "modifiers": "public", "return": "", "signature": " SplitHandler(Splitter<T> splitter)", "full_signature": "public  SplitHandler(Splitter<T> splitter)", "class_method_signature": "SplitHandler.SplitHandler(Splitter<T> splitter)", "testcase": false, "constructor": true}, {"identifier": "checkInit", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkInit()", "full_signature": "private void checkInit()", "class_method_signature": "SplitHandler.checkInit()", "testcase": false, "constructor": false}], "file": "fdb-sql-layer-core/src/main/java/com/foundationdb/server/store/statistics/histograms/SplitHandler.java"}, "focal_method": {"identifier": "visit", "parameters": "(T input)", "modifiers": "@Override public", "return": "List<? extends T>", "body": "@Override\n    public List<? extends T> visit(T input) {\n        checkInit();\n        List<? extends T> split = splitter.split(input);\n        if (split.size() != segments)\n            throw new IllegalStateException(\"required \" + segments + \", found \" + split.size() + \": \" + split);\n        recycleBin.clear();\n        for (int i = 0; i < segments; ++i) {\n            T segment = split.get(i);\n            SegmentBuffer<T> buffer = buffers.get(i);\n            T prev = buffer.last();\n            int count = buffer.put(segment, recycleBin);\n            if (count > 0) {\n                handle(i, prev, count);\n            }\n        }\n        return recycleBin;\n    }", "signature": "List<? extends T> visit(T input)", "full_signature": "@Override public List<? extends T> visit(T input)", "class_method_signature": "SplitHandler.visit(T input)", "testcase": false, "constructor": false, "invocations": ["checkInit", "split", "size", "size", "clear", "get", "get", "last", "put", "handle"]}, "repository": {"repo_id": 32884360, "url": "https://github.com/jaytaylor/sql-layer", "language": "Java", "is_fork": false, "fork_count": 120, "stargazer_count": 77, "size": 138665, "license": "licensed"}}