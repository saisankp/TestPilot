{"test_class": {"identifier": "ClearingReportGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public TemporaryFolder folder = new TemporaryFolder();", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "folder = new TemporaryFolder()", "var_name": "folder"}, {"original_string": "private ClearingReportGenerator generator;", "modifier": "private", "type": "ClearingReportGenerator", "declarator": "generator", "var_name": "generator"}], "file": "assembly/compliance-tool/src/test/java/org/eclipse/sw360/antenna/frontend/compliancetool/sw360/updater/ClearingReportGeneratorTest.java"}, "test_case": {"identifier": "testMissingFolderIsCreated", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMissingFolderIsCreated() throws IOException {\n        Path root = folder.newFolder().toPath();\n        Path nonExistingFolder = root.resolve(\"non/existing/folder\");\n        SW360Release release = SW360TestUtils.mkSW360Release(\"create\");\n\n        Path clearingDocument = generator.createClearingDocument(release, nonExistingFolder);\n        assertThat(Files.exists(clearingDocument)).isTrue();\n    }", "signature": "void testMissingFolderIsCreated()", "full_signature": "@Test public void testMissingFolderIsCreated()", "class_method_signature": "ClearingReportGeneratorTest.testMissingFolderIsCreated()", "testcase": true, "constructor": false, "invocations": ["toPath", "newFolder", "resolve", "mkSW360Release", "createClearingDocument", "isTrue", "assertThat", "exists"]}, "focal_class": {"identifier": "ClearingReportGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CLEARING_DOC_SUFFIX = \"_clearing.json\";", "modifier": "private static final", "type": "String", "declarator": "CLEARING_DOC_SUFFIX = \"_clearing.json\"", "var_name": "CLEARING_DOC_SUFFIX"}], "methods": [{"identifier": "createClearingDocument", "parameters": "(SW360Release release, Path targetDir)", "modifiers": "", "return": "Path", "signature": "Path createClearingDocument(SW360Release release, Path targetDir)", "full_signature": " Path createClearingDocument(SW360Release release, Path targetDir)", "class_method_signature": "ClearingReportGenerator.createClearingDocument(SW360Release release, Path targetDir)", "testcase": false, "constructor": false}], "file": "assembly/compliance-tool/src/main/java/org/eclipse/sw360/antenna/frontend/compliancetool/sw360/updater/ClearingReportGenerator.java"}, "focal_method": {"identifier": "createClearingDocument", "parameters": "(SW360Release release, Path targetDir)", "modifiers": "", "return": "Path", "body": "Path createClearingDocument(SW360Release release, Path targetDir) {\n        Path clearingDocument = targetDir.resolve(release.getId() + CLEARING_DOC_SUFFIX);\n        try {\n            Files.createDirectories(targetDir);\n            ObjectMapper mapper = new ObjectMapper();\n            mapper.writeValue(Files.newBufferedWriter(clearingDocument), release);\n            return clearingDocument;\n        } catch (IOException e) {\n            throw new SW360ClientException(\"Could not create clearing document \" + clearingDocument.toString(), e);\n        }\n    }", "signature": "Path createClearingDocument(SW360Release release, Path targetDir)", "full_signature": " Path createClearingDocument(SW360Release release, Path targetDir)", "class_method_signature": "ClearingReportGenerator.createClearingDocument(SW360Release release, Path targetDir)", "testcase": false, "constructor": false, "invocations": ["resolve", "getId", "createDirectories", "writeValue", "newBufferedWriter", "toString"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}