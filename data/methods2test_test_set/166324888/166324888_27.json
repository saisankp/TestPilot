{"test_class": {"identifier": "TransactionsPresenterTest", "superclass": "extends BaseTestCase", "interfaces": "", "fields": [{"original_string": "private TransactionsPresenter presenter;", "modifier": "private", "type": "TransactionsPresenter", "declarator": "presenter", "var_name": "presenter"}, {"original_string": "@Mock\n    private TransactionsContract.View view;", "modifier": "@Mock\n    private", "type": "TransactionsContract.View", "declarator": "view", "var_name": "view"}], "file": "wallet/src/test/java/com/platon/aton/component/ui/presenter/TransactionsPresenterTest.java"}, "test_case": {"identifier": "testGetValidBiggerSequence", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetValidBiggerSequence() {\n        List<Transaction> list = new ArrayList<>();\n        Transaction transaction = new Transaction();\n        transaction.setActualTxCost(\"0.005648\");\n        transaction.setBlockNumber(\"10556\");\n        transaction.setNodeId(\"0xfa4a45sfa54s4dfa5s\");\n        transaction.setNodeName(\"Node-1\");\n        transaction.setFrom(\"0x4ded81199608adb765fb2fe029bbfdf57f538be8\");\n        transaction.setSequence(1025);\n        list.add(transaction);\n\n        Transaction transaction2 = new Transaction();\n        transaction.setActualTxCost(\"0.005648\");\n        transaction.setBlockNumber(\"10556\");\n        transaction.setNodeId(\"0xfa4a45sfa54s4dfa5s\");\n        transaction.setNodeName(\"Node-1\");\n        transaction.setFrom(\"0x4ded81199608adb765fb2fe029bbfdf57f538be8\");\n        transaction.setSequence(1028);\n        list.add(transaction2);\n\n        Transaction transaction3 = new Transaction();\n        transaction.setActualTxCost(\"0.005648\");\n        transaction.setBlockNumber(\"10556\");\n        transaction.setNodeId(\"0xfa4a45sfa54s4dfa5s\");\n        transaction.setNodeName(\"Node-1\");\n        transaction.setSequence(1035);\n        transaction.setFrom(\"0x4ded81199608adb765fb2fe029bbfdf57f538be8\");\n        list.add(transaction3);\n\n\n        long sequence = Flowable\n                .range(0, list.size())\n                .filter(new Predicate<Integer>() {\n                    @Override\n                    public boolean test(Integer integer) throws Exception {\n                        return list.get(integer).getSequence() != 0;\n                    }\n                })\n                .map(new Function<Integer, Long>() {\n                    @Override\n                    public Long apply(Integer integer) throws Exception {\n                        return list.get(integer).getSequence();\n                    }\n                })\n                .firstElement()\n                .blockingGet();\n\n        assertNotNull(sequence);\n        System.out.println(sequence);\n    }", "signature": "void testGetValidBiggerSequence()", "full_signature": "@Test public void testGetValidBiggerSequence()", "class_method_signature": "TransactionsPresenterTest.testGetValidBiggerSequence()", "testcase": true, "constructor": false, "invocations": ["setActualTxCost", "setBlockNumber", "setNodeId", "setNodeName", "setFrom", "setSequence", "add", "setActualTxCost", "setBlockNumber", "setNodeId", "setNodeName", "setFrom", "setSequence", "add", "setActualTxCost", "setBlockNumber", "setNodeId", "setNodeName", "setSequence", "setFrom", "add", "blockingGet", "firstElement", "map", "filter", "range", "size", "getSequence", "get", "getSequence", "get", "assertNotNull", "println"]}, "focal_class": {"identifier": "TransactionsPresenter", "superclass": "extends BasePresenter<TransactionsContract.View>", "interfaces": "implements TransactionsContract.Presenter", "fields": [{"original_string": "private static final String TAG = TransactionsPresenter.class.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "TAG = TransactionsPresenter.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "public final static String DIRECTION_OLD = \"old\";", "modifier": "public final static", "type": "String", "declarator": "DIRECTION_OLD = \"old\"", "var_name": "DIRECTION_OLD"}, {"original_string": "public final static String DIRECTION_NEW = \"new\";", "modifier": "public final static", "type": "String", "declarator": "DIRECTION_NEW = \"new\"", "var_name": "DIRECTION_NEW"}, {"original_string": "private Map<String, List<Transaction>> mTransactionMap = new HashMap<>();", "modifier": "private", "type": "Map<String, List<Transaction>>", "declarator": "mTransactionMap = new HashMap<>()", "var_name": "mTransactionMap"}, {"original_string": "private Disposable mAutoRefreshDisposable;", "modifier": "private", "type": "Disposable", "declarator": "mAutoRefreshDisposable", "var_name": "mAutoRefreshDisposable"}, {"original_string": "private Disposable mLoadLatestDisposable;", "modifier": "private", "type": "Disposable", "declarator": "mLoadLatestDisposable", "var_name": "mLoadLatestDisposable"}, {"original_string": "private String mWalletAddress;", "modifier": "private", "type": "String", "declarator": "mWalletAddress", "var_name": "mWalletAddress"}], "methods": [{"identifier": "TransactionsPresenter", "parameters": "()", "modifiers": "public", "return": "", "signature": " TransactionsPresenter()", "full_signature": "public  TransactionsPresenter()", "class_method_signature": "TransactionsPresenter.TransactionsPresenter()", "testcase": false, "constructor": true}, {"identifier": "loadLatestData", "parameters": "()", "modifiers": "@SuppressLint(\"CheckResult\") @Override public", "return": "void", "signature": "void loadLatestData()", "full_signature": "@SuppressLint(\"CheckResult\") @Override public void loadLatestData()", "class_method_signature": "TransactionsPresenter.loadLatestData()", "testcase": false, "constructor": false}, {"identifier": "loadNew", "parameters": "(String direction)", "modifiers": "@SuppressLint(\"CheckResult\") @Override public", "return": "void", "signature": "void loadNew(String direction)", "full_signature": "@SuppressLint(\"CheckResult\") @Override public void loadNew(String direction)", "class_method_signature": "TransactionsPresenter.loadNew(String direction)", "testcase": false, "constructor": false}, {"identifier": "deleteTransaction", "parameters": "(Transaction transaction)", "modifiers": "@Override public", "return": "void", "signature": "void deleteTransaction(Transaction transaction)", "full_signature": "@Override public void deleteTransaction(Transaction transaction)", "class_method_signature": "TransactionsPresenter.deleteTransaction(Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "addNewTransaction", "parameters": "(Transaction transaction)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void addNewTransaction(Transaction transaction)", "full_signature": "@Override public synchronized void addNewTransaction(Transaction transaction)", "class_method_signature": "TransactionsPresenter.addNewTransaction(Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String address)", "modifiers": "private", "return": "List<Transaction>", "signature": "List<Transaction> get(String address)", "full_signature": "private List<Transaction> get(String address)", "class_method_signature": "TransactionsPresenter.get(String address)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(String address, List<Transaction> transactionList)", "modifiers": "private", "return": "void", "signature": "void put(String address, List<Transaction> transactionList)", "full_signature": "private void put(String address, List<Transaction> transactionList)", "class_method_signature": "TransactionsPresenter.put(String address, List<Transaction> transactionList)", "testcase": false, "constructor": false}, {"identifier": "getWalletAddressFromTransaction", "parameters": "(Transaction transaction)", "modifiers": "private", "return": "String", "signature": "String getWalletAddressFromTransaction(Transaction transaction)", "full_signature": "private String getWalletAddressFromTransaction(Transaction transaction)", "class_method_signature": "TransactionsPresenter.getWalletAddressFromTransaction(Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "isCurrentSelectedWallet", "parameters": "(Transaction transaction)", "modifiers": "private", "return": "boolean", "signature": "boolean isCurrentSelectedWallet(Transaction transaction)", "full_signature": "private boolean isCurrentSelectedWallet(Transaction transaction)", "class_method_signature": "TransactionsPresenter.isCurrentSelectedWallet(Transaction transaction)", "testcase": false, "constructor": false}, {"identifier": "deleteExceptionalTransaction", "parameters": "(List<Transaction> oldTransactionList, List<Transaction> curTransactionList)", "modifiers": "private", "return": "void", "signature": "void deleteExceptionalTransaction(List<Transaction> oldTransactionList, List<Transaction> curTransactionList)", "full_signature": "private void deleteExceptionalTransaction(List<Transaction> oldTransactionList, List<Transaction> curTransactionList)", "class_method_signature": "TransactionsPresenter.deleteExceptionalTransaction(List<Transaction> oldTransactionList, List<Transaction> curTransactionList)", "testcase": false, "constructor": false}, {"identifier": "deleteTransaction", "parameters": "(String hash)", "modifiers": "private", "return": "void", "signature": "void deleteTransaction(String hash)", "full_signature": "private void deleteTransaction(String hash)", "class_method_signature": "TransactionsPresenter.deleteTransaction(String hash)", "testcase": false, "constructor": false}, {"identifier": "getNewTransactionList", "parameters": "(List<Transaction> oldTransactionList, List<Transaction> curTransactionList, boolean isLoadMore)", "modifiers": "private", "return": "List<Transaction>", "signature": "List<Transaction> getNewTransactionList(List<Transaction> oldTransactionList, List<Transaction> curTransactionList, boolean isLoadMore)", "full_signature": "private List<Transaction> getNewTransactionList(List<Transaction> oldTransactionList, List<Transaction> curTransactionList, boolean isLoadMore)", "class_method_signature": "TransactionsPresenter.getNewTransactionList(List<Transaction> oldTransactionList, List<Transaction> curTransactionList, boolean isLoadMore)", "testcase": false, "constructor": false}, {"identifier": "getTransactionListWithTime", "parameters": "(String walletAddress, String direction)", "modifiers": "private", "return": "Flowable<Pair<List<Transaction>, List<Transaction>>>", "signature": "Flowable<Pair<List<Transaction>, List<Transaction>>> getTransactionListWithTime(String walletAddress, String direction)", "full_signature": "private Flowable<Pair<List<Transaction>, List<Transaction>>> getTransactionListWithTime(String walletAddress, String direction)", "class_method_signature": "TransactionsPresenter.getTransactionListWithTime(String walletAddress, String direction)", "testcase": false, "constructor": false}, {"identifier": "getTransactionList", "parameters": "(String walletAddress)", "modifiers": "private", "return": "Single<Pair<List<Transaction>, List<Transaction>>>", "signature": "Single<Pair<List<Transaction>, List<Transaction>>> getTransactionList(String walletAddress)", "full_signature": "private Single<Pair<List<Transaction>, List<Transaction>>> getTransactionList(String walletAddress)", "class_method_signature": "TransactionsPresenter.getTransactionList(String walletAddress)", "testcase": false, "constructor": false}, {"identifier": "getTransactionListFromDB", "parameters": "(String walletAddress)", "modifiers": "private", "return": "Single<List<Transaction>>", "signature": "Single<List<Transaction>> getTransactionListFromDB(String walletAddress)", "full_signature": "private Single<List<Transaction>> getTransactionListFromDB(String walletAddress)", "class_method_signature": "TransactionsPresenter.getTransactionListFromDB(String walletAddress)", "testcase": false, "constructor": false}, {"identifier": "getTransactionList", "parameters": "(String walletAddress, String direction, long beginSequence)", "modifiers": "private", "return": "Single<Response<ApiResponse<List<Transaction>>>>", "signature": "Single<Response<ApiResponse<List<Transaction>>>> getTransactionList(String walletAddress, String direction, long beginSequence)", "full_signature": "private Single<Response<ApiResponse<List<Transaction>>>> getTransactionList(String walletAddress, String direction, long beginSequence)", "class_method_signature": "TransactionsPresenter.getTransactionList(String walletAddress, String direction, long beginSequence)", "testcase": false, "constructor": false}, {"identifier": "getBeginSequenceByDirection", "parameters": "(String direction)", "modifiers": "private", "return": "long", "signature": "long getBeginSequenceByDirection(String direction)", "full_signature": "private long getBeginSequenceByDirection(String direction)", "class_method_signature": "TransactionsPresenter.getBeginSequenceByDirection(String direction)", "testcase": false, "constructor": false}, {"identifier": "getValidBiggerSequence", "parameters": "(List<Transaction> transactionList)", "modifiers": "private", "return": "long", "signature": "long getValidBiggerSequence(List<Transaction> transactionList)", "full_signature": "private long getValidBiggerSequence(List<Transaction> transactionList)", "class_method_signature": "TransactionsPresenter.getValidBiggerSequence(List<Transaction> transactionList)", "testcase": false, "constructor": false}, {"identifier": "getValidSmallerSequence", "parameters": "(List<Transaction> transactionList)", "modifiers": "private", "return": "long", "signature": "long getValidSmallerSequence(List<Transaction> transactionList)", "full_signature": "private long getValidSmallerSequence(List<Transaction> transactionList)", "class_method_signature": "TransactionsPresenter.getValidSmallerSequence(List<Transaction> transactionList)", "testcase": false, "constructor": false}], "file": "wallet/src/main/java/com/platon/aton/component/ui/presenter/TransactionsPresenter.java"}, "focal_method": {"identifier": "getValidBiggerSequence", "parameters": "(List<Transaction> transactionList)", "modifiers": "private", "return": "long", "body": "private long getValidBiggerSequence(List<Transaction> transactionList) {\n\n        return Flowable\n                .range(0, transactionList.size())\n                .filter(new Predicate<Integer>() {\n                    @Override\n                    public boolean test(Integer integer) throws Exception {\n                        return transactionList.get(integer).getSequence() != 0;\n                    }\n                })\n                .map(new Function<Integer, Long>() {\n                    @Override\n                    public Long apply(Integer integer) throws Exception {\n                        return transactionList.get(integer).getSequence();\n                    }\n                })\n                .firstElement()\n                .defaultIfEmpty(-1L)\n                .onErrorReturnItem(-1L)\n                .blockingGet();\n    }", "signature": "long getValidBiggerSequence(List<Transaction> transactionList)", "full_signature": "private long getValidBiggerSequence(List<Transaction> transactionList)", "class_method_signature": "TransactionsPresenter.getValidBiggerSequence(List<Transaction> transactionList)", "testcase": false, "constructor": false, "invocations": ["blockingGet", "onErrorReturnItem", "defaultIfEmpty", "firstElement", "map", "filter", "range", "size", "getSequence", "get", "getSequence", "get"]}, "repository": {"repo_id": 166324888, "url": "https://github.com/PlatONnetwork/ATON-Android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 118901, "license": "licensed"}}