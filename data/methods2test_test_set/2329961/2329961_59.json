{"test_class": {"identifier": "UtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "log/src/test/java/org/cloudname/log/format/UtilTest.java"}, "test_case": {"identifier": "testLevelNameForValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLevelNameForValue() throws Exception {\n        for (Level level : new Level[] {\n                Level.CONFIG,\n                Level.FINEST,\n                Level.FINER,\n                Level.FINE,\n                Level.INFO,\n                Level.WARNING,\n                Level.SEVERE,}) {\n            assertEquals(level.getName(), Util.logLevelNameForValue(level.intValue()));\n        }\n\n        // Check that anything more severe that WARNING will produce\n        // expected result.\n        assertEquals(\"NUCLEAR\", Util.logLevelNameForValue(Level.SEVERE.intValue() + 1));\n    }", "signature": "void testLevelNameForValue()", "full_signature": "@Test public void testLevelNameForValue()", "class_method_signature": "UtilTest.testLevelNameForValue()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getName", "logLevelNameForValue", "intValue", "assertEquals", "logLevelNameForValue", "intValue"]}, "focal_class": {"identifier": "Util", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final DateTimeFormatter isoTimeFormatter = ISODateTimeFormat\n        .dateHourMinuteSecondMillis()\n        .withZone(DateTimeZone.UTC);", "modifier": "private static final", "type": "DateTimeFormatter", "declarator": "isoTimeFormatter = ISODateTimeFormat\n        .dateHourMinuteSecondMillis()\n        .withZone(DateTimeZone.UTC)", "var_name": "isoTimeFormatter"}, {"original_string": "private static final NavigableMap<Integer,String> logLevelByValue = new TreeMap<Integer,String>();", "modifier": "private static final", "type": "NavigableMap<Integer,String>", "declarator": "logLevelByValue = new TreeMap<Integer,String>()", "var_name": "logLevelByValue"}], "methods": [{"identifier": "Util", "parameters": "()", "modifiers": "private", "return": "", "signature": " Util()", "full_signature": "private  Util()", "class_method_signature": "Util.Util()", "testcase": false, "constructor": true}, {"identifier": "logLevelNameForValue", "parameters": "(int value)", "modifiers": "public static", "return": "String", "signature": "String logLevelNameForValue(int value)", "full_signature": "public static String logLevelNameForValue(int value)", "class_method_signature": "Util.logLevelNameForValue(int value)", "testcase": false, "constructor": false}, {"identifier": "formatTimeSecondsSinceEpoch", "parameters": "(final long time, StringBuilder sbuffer)", "modifiers": "public static", "return": "void", "signature": "void formatTimeSecondsSinceEpoch(final long time, StringBuilder sbuffer)", "full_signature": "public static void formatTimeSecondsSinceEpoch(final long time, StringBuilder sbuffer)", "class_method_signature": "Util.formatTimeSecondsSinceEpoch(final long time, StringBuilder sbuffer)", "testcase": false, "constructor": false}, {"identifier": "formatTimeISO", "parameters": "(long time, StringBuilder sbuffer)", "modifiers": "public static", "return": "void", "signature": "void formatTimeISO(long time, StringBuilder sbuffer)", "full_signature": "public static void formatTimeISO(long time, StringBuilder sbuffer)", "class_method_signature": "Util.formatTimeISO(long time, StringBuilder sbuffer)", "testcase": false, "constructor": false}, {"identifier": "escape", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String escape(String s)", "full_signature": "public static String escape(String s)", "class_method_signature": "Util.escape(String s)", "testcase": false, "constructor": false}], "file": "log/src/main/java/org/cloudname/log/format/Util.java"}, "focal_method": {"identifier": "logLevelNameForValue", "parameters": "(int value)", "modifiers": "public static", "return": "String", "body": "public static String logLevelNameForValue(int value) {\n        return logLevelByValue.ceilingEntry(value).getValue();\n    }", "signature": "String logLevelNameForValue(int value)", "full_signature": "public static String logLevelNameForValue(int value)", "class_method_signature": "Util.logLevelNameForValue(int value)", "testcase": false, "constructor": false, "invocations": ["getValue", "ceilingEntry"]}, "repository": {"repo_id": 2329961, "url": "https://github.com/Cloudname/cloudname", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 21, "size": 26031, "license": "licensed"}}