{"test_class": {"identifier": "DefaultManyReconcilerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Duration TIMEOUT = Duration.ofSeconds(5);", "modifier": "private static final", "type": "Duration", "declarator": "TIMEOUT = Duration.ofSeconds(5)", "var_name": "TIMEOUT"}, {"original_string": "private final TitusRuntime titusRuntime = TitusRuntimes.internal();", "modifier": "private final", "type": "TitusRuntime", "declarator": "titusRuntime = TitusRuntimes.internal()", "var_name": "titusRuntime"}, {"original_string": "private DefaultManyReconciler<String> reconciler;", "modifier": "private", "type": "DefaultManyReconciler<String>", "declarator": "reconciler", "var_name": "reconciler"}, {"original_string": "private TitusRxSubscriber<List<SimpleReconcilerEvent<String>>> changesSubscriber;", "modifier": "private", "type": "TitusRxSubscriber<List<SimpleReconcilerEvent<String>>>", "declarator": "changesSubscriber", "var_name": "changesSubscriber"}], "file": "titus-common/src/test/java/com/netflix/titus/common/framework/simplereconciler/internal/DefaultManyReconcilerTest.java"}, "test_case": {"identifier": "testExternalActionMonoError", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExternalActionMonoError() throws InterruptedException {\n        newReconcilerWithRegistrations(current -> Collections.emptyList(), \"r1\", \"a\");\n\n        try {\n            reconciler.apply(\"r1\", anything -> Mono.error(new RuntimeException(\"simulated error\"))).block();\n            fail(\"Expected error\");\n        } catch (Exception e) {\n            assertThat(e).isInstanceOf(RuntimeException.class);\n            assertThat(e.getMessage()).isEqualTo(\"simulated error\");\n        }\n\n        assertThat(changesSubscriber.takeNext()).isNull();\n    }", "signature": "void testExternalActionMonoError()", "full_signature": "@Test public void testExternalActionMonoError()", "class_method_signature": "DefaultManyReconcilerTest.testExternalActionMonoError()", "testcase": true, "constructor": false, "invocations": ["newReconcilerWithRegistrations", "emptyList", "block", "apply", "error", "fail", "isInstanceOf", "assertThat", "isEqualTo", "assertThat", "getMessage", "isNull", "assertThat", "takeNext"]}, "focal_class": {"identifier": "DefaultManyReconciler", "superclass": "", "interfaces": "implements ManyReconciler<DATA>", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(DefaultManyReconciler.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(DefaultManyReconciler.class)", "var_name": "logger"}, {"original_string": "private static final IllegalStateException EXCEPTION_CLOSED = new IllegalStateException(\"Reconciler closed\");", "modifier": "private static final", "type": "IllegalStateException", "declarator": "EXCEPTION_CLOSED = new IllegalStateException(\"Reconciler closed\")", "var_name": "EXCEPTION_CLOSED"}, {"original_string": "private final Function<DATA, List<Mono<Function<DATA, DATA>>>> reconcilerActionsProvider;", "modifier": "private final", "type": "Function<DATA, List<Mono<Function<DATA, DATA>>>>", "declarator": "reconcilerActionsProvider", "var_name": "reconcilerActionsProvider"}, {"original_string": "private final long quickCycleMs;", "modifier": "private final", "type": "long", "declarator": "quickCycleMs", "var_name": "quickCycleMs"}, {"original_string": "private final long longCycleMs;", "modifier": "private final", "type": "long", "declarator": "longCycleMs", "var_name": "longCycleMs"}, {"original_string": "private final CloseableReference<Scheduler> reconcilerSchedulerRef;", "modifier": "private final", "type": "CloseableReference<Scheduler>", "declarator": "reconcilerSchedulerRef", "var_name": "reconcilerSchedulerRef"}, {"original_string": "private final CloseableReference<Scheduler> notificationSchedulerRef;", "modifier": "private final", "type": "CloseableReference<Scheduler>", "declarator": "notificationSchedulerRef", "var_name": "notificationSchedulerRef"}, {"original_string": "private final Clock clock;", "modifier": "private final", "type": "Clock", "declarator": "clock", "var_name": "clock"}, {"original_string": "private final TitusRuntime titusRuntime;", "modifier": "private final", "type": "TitusRuntime", "declarator": "titusRuntime", "var_name": "titusRuntime"}, {"original_string": "private final BlockingQueue<AddHolder> addHolders = new LinkedBlockingQueue<>();", "modifier": "private final", "type": "BlockingQueue<AddHolder>", "declarator": "addHolders = new LinkedBlockingQueue<>()", "var_name": "addHolders"}, {"original_string": "private final Map<String, ReconcilerEngine<DATA>> executors = new ConcurrentHashMap<>();", "modifier": "private final", "type": "Map<String, ReconcilerEngine<DATA>>", "declarator": "executors = new ConcurrentHashMap<>()", "var_name": "executors"}, {"original_string": "private BlockingQueue<EventListenerHolder> eventListenerHolders = new LinkedBlockingQueue<>();", "modifier": "private", "type": "BlockingQueue<EventListenerHolder>", "declarator": "eventListenerHolders = new LinkedBlockingQueue<>()", "var_name": "eventListenerHolders"}, {"original_string": "private final AtomicReference<ReconcilerState> stateRef = new AtomicReference<>(ReconcilerState.Running);", "modifier": "private final", "type": "AtomicReference<ReconcilerState>", "declarator": "stateRef = new AtomicReference<>(ReconcilerState.Running)", "var_name": "stateRef"}, {"original_string": "private final Scheduler.Worker reconcilerWorker;", "modifier": "private final", "type": "Scheduler.Worker", "declarator": "reconcilerWorker", "var_name": "reconcilerWorker"}, {"original_string": "private final ReconcilerExecutorMetrics metrics;", "modifier": "private final", "type": "ReconcilerExecutorMetrics", "declarator": "metrics", "var_name": "metrics"}, {"original_string": "private volatile long lastLongCycleTimestamp;", "modifier": "private volatile", "type": "long", "declarator": "lastLongCycleTimestamp", "var_name": "lastLongCycleTimestamp"}, {"original_string": "private final DirectProcessor<List<SimpleReconcilerEvent<DATA>>> eventProcessor;", "modifier": "private final", "type": "DirectProcessor<List<SimpleReconcilerEvent<DATA>>>", "declarator": "eventProcessor", "var_name": "eventProcessor"}, {"original_string": "private final Flux<List<SimpleReconcilerEvent<DATA>>> eventStream;", "modifier": "private final", "type": "Flux<List<SimpleReconcilerEvent<DATA>>>", "declarator": "eventStream", "var_name": "eventStream"}, {"original_string": "private final MonoProcessor<Void> closedProcessor = MonoProcessor.create();", "modifier": "private final", "type": "MonoProcessor<Void>", "declarator": "closedProcessor = MonoProcessor.create()", "var_name": "closedProcessor"}], "methods": [{"identifier": "DefaultManyReconciler", "parameters": "(\n            String name,\n            Duration quickCycle,\n            Duration longCycle,\n            Function<DATA, List<Mono<Function<DATA, DATA>>>> reconcilerActionsProvider,\n            CloseableReference<Scheduler> reconcilerSchedulerRef,\n            CloseableReference<Scheduler> notificationSchedulerRef,\n            TitusRuntime titusRuntime)", "modifiers": "public", "return": "", "signature": " DefaultManyReconciler(\n            String name,\n            Duration quickCycle,\n            Duration longCycle,\n            Function<DATA, List<Mono<Function<DATA, DATA>>>> reconcilerActionsProvider,\n            CloseableReference<Scheduler> reconcilerSchedulerRef,\n            CloseableReference<Scheduler> notificationSchedulerRef,\n            TitusRuntime titusRuntime)", "full_signature": "public  DefaultManyReconciler(\n            String name,\n            Duration quickCycle,\n            Duration longCycle,\n            Function<DATA, List<Mono<Function<DATA, DATA>>>> reconcilerActionsProvider,\n            CloseableReference<Scheduler> reconcilerSchedulerRef,\n            CloseableReference<Scheduler> notificationSchedulerRef,\n            TitusRuntime titusRuntime)", "class_method_signature": "DefaultManyReconciler.DefaultManyReconciler(\n            String name,\n            Duration quickCycle,\n            Duration longCycle,\n            Function<DATA, List<Mono<Function<DATA, DATA>>>> reconcilerActionsProvider,\n            CloseableReference<Scheduler> reconcilerSchedulerRef,\n            CloseableReference<Scheduler> notificationSchedulerRef,\n            TitusRuntime titusRuntime)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(String id, DATA initial)", "modifiers": "@Override public", "return": "Mono<Void>", "signature": "Mono<Void> add(String id, DATA initial)", "full_signature": "@Override public Mono<Void> add(String id, DATA initial)", "class_method_signature": "DefaultManyReconciler.add(String id, DATA initial)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String id)", "modifiers": "@Override public", "return": "Mono<Void>", "signature": "Mono<Void> remove(String id)", "full_signature": "@Override public Mono<Void> remove(String id)", "class_method_signature": "DefaultManyReconciler.remove(String id)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "Mono<Void>", "signature": "Mono<Void> close()", "full_signature": "@Override public Mono<Void> close()", "class_method_signature": "DefaultManyReconciler.close()", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, DATA>", "signature": "Map<String, DATA> getAll()", "full_signature": "@Override public Map<String, DATA> getAll()", "class_method_signature": "DefaultManyReconciler.getAll()", "testcase": false, "constructor": false}, {"identifier": "findById", "parameters": "(String id)", "modifiers": "@Override public", "return": "Optional<DATA>", "signature": "Optional<DATA> findById(String id)", "full_signature": "@Override public Optional<DATA> findById(String id)", "class_method_signature": "DefaultManyReconciler.findById(String id)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(String id, Function<DATA, Mono<DATA>> action)", "modifiers": "@Override public", "return": "Mono<DATA>", "signature": "Mono<DATA> apply(String id, Function<DATA, Mono<DATA>> action)", "full_signature": "@Override public Mono<DATA> apply(String id, Function<DATA, Mono<DATA>> action)", "class_method_signature": "DefaultManyReconciler.apply(String id, Function<DATA, Mono<DATA>> action)", "testcase": false, "constructor": false}, {"identifier": "changes", "parameters": "()", "modifiers": "@Override public", "return": "Flux<List<SimpleReconcilerEvent<DATA>>>", "signature": "Flux<List<SimpleReconcilerEvent<DATA>>> changes()", "full_signature": "@Override public Flux<List<SimpleReconcilerEvent<DATA>>> changes()", "class_method_signature": "DefaultManyReconciler.changes()", "testcase": false, "constructor": false}, {"identifier": "doSchedule", "parameters": "(long delayMs)", "modifiers": "private", "return": "void", "signature": "void doSchedule(long delayMs)", "full_signature": "private void doSchedule(long delayMs)", "class_method_signature": "DefaultManyReconciler.doSchedule(long delayMs)", "testcase": false, "constructor": false}, {"identifier": "tryClose", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean tryClose()", "full_signature": "private boolean tryClose()", "class_method_signature": "DefaultManyReconciler.tryClose()", "testcase": false, "constructor": false}, {"identifier": "connectEventListeners", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void connectEventListeners()", "full_signature": "private void connectEventListeners()", "class_method_signature": "DefaultManyReconciler.connectEventListeners()", "testcase": false, "constructor": false}, {"identifier": "buildSnapshot", "parameters": "()", "modifiers": "private", "return": "List<SimpleReconcilerEvent<DATA>>", "signature": "List<SimpleReconcilerEvent<DATA>> buildSnapshot()", "full_signature": "private List<SimpleReconcilerEvent<DATA>> buildSnapshot()", "class_method_signature": "DefaultManyReconciler.buildSnapshot()", "testcase": false, "constructor": false}, {"identifier": "doProcess", "parameters": "(boolean fullReconciliationCycle)", "modifiers": "private", "return": "void", "signature": "void doProcess(boolean fullReconciliationCycle)", "full_signature": "private void doProcess(boolean fullReconciliationCycle)", "class_method_signature": "DefaultManyReconciler.doProcess(boolean fullReconciliationCycle)", "testcase": false, "constructor": false}], "file": "titus-common/src/main/java/com/netflix/titus/common/framework/simplereconciler/internal/DefaultManyReconciler.java"}, "focal_method": {"identifier": "apply", "parameters": "(String id, Function<DATA, Mono<DATA>> action)", "modifiers": "@Override public", "return": "Mono<DATA>", "body": "@Override\n    public Mono<DATA> apply(String id, Function<DATA, Mono<DATA>> action) {\n        return Mono.defer(() -> {\n            ReconcilerEngine<DATA> executor = executors.get(id);\n            if (executor == null) {\n                return Mono.error(new IllegalArgumentException(\"Reconciler not found for data item \" + id));\n            }\n            return executor.apply(action);\n        });\n    }", "signature": "Mono<DATA> apply(String id, Function<DATA, Mono<DATA>> action)", "full_signature": "@Override public Mono<DATA> apply(String id, Function<DATA, Mono<DATA>> action)", "class_method_signature": "DefaultManyReconciler.apply(String id, Function<DATA, Mono<DATA>> action)", "testcase": false, "constructor": false, "invocations": ["defer", "get", "error", "apply"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}