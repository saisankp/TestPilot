{"test_class": {"identifier": "TestIfcSpfReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IfcSpfReader reader;", "modifier": "private", "type": "IfcSpfReader", "declarator": "reader", "var_name": "reader"}], "file": "IFCtoRDF/src/test/java/be/ugent/TestIfcSpfReader.java"}, "test_case": {"identifier": "testSlurp", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n    public final void testSlurp() {\n        // reader.slurp(in)\n    }", "signature": "void testSlurp()", "full_signature": "@Test public final void testSlurp()", "class_method_signature": "TestIfcSpfReader.testSlurp()", "testcase": true, "constructor": false, "invocations": []}, "focal_class": {"identifier": "IfcSpfReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(IfcSpfReader.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(IfcSpfReader.class)", "var_name": "LOG"}, {"original_string": "public static String DEFAULT_PATH = \"\";", "modifier": "public static", "type": "String", "declarator": "DEFAULT_PATH = \"\"", "var_name": "DEFAULT_PATH"}, {"original_string": "private boolean removeDuplicates = false;", "modifier": "private", "type": "boolean", "declarator": "removeDuplicates = false", "var_name": "removeDuplicates"}, {"original_string": "private static final int FLAG_BASEURI = 0;", "modifier": "private static final", "type": "int", "declarator": "FLAG_BASEURI = 0", "var_name": "FLAG_BASEURI"}, {"original_string": "private static final int FLAG_DIR = 1;", "modifier": "private static final", "type": "int", "declarator": "FLAG_DIR = 1", "var_name": "FLAG_DIR"}, {"original_string": "private static final int FLAG_KEEP_DUPLICATES = 2;", "modifier": "private static final", "type": "int", "declarator": "FLAG_KEEP_DUPLICATES = 2", "var_name": "FLAG_KEEP_DUPLICATES"}, {"original_string": "private String ifcFile;", "modifier": "private", "type": "String", "declarator": "ifcFile", "var_name": "ifcFile"}, {"original_string": "private InputStream in = null;", "modifier": "private", "type": "InputStream", "declarator": "in = null", "var_name": "in"}, {"original_string": "private String exp = \"\";", "modifier": "private", "type": "String", "declarator": "exp = \"\"", "var_name": "exp"}, {"original_string": "protected String ontURI = \"\";", "modifier": "protected", "type": "String", "declarator": "ontURI = \"\"", "var_name": "ontURI"}, {"original_string": "private Map<String, EntityVO> ent;", "modifier": "private", "type": "Map<String, EntityVO>", "declarator": "ent", "var_name": "ent"}, {"original_string": "private Map<String, TypeVO> typ;", "modifier": "private", "type": "Map<String, TypeVO>", "declarator": "typ", "var_name": "typ"}], "methods": [{"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "IfcSpfReader.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "showFiles", "parameters": "(String dir)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> showFiles(String dir)", "full_signature": "public static List<String> showFiles(String dir)", "class_method_signature": "IfcSpfReader.showFiles(String dir)", "testcase": false, "constructor": false}, {"identifier": "getExpressSchema", "parameters": "(String ifcFile)", "modifiers": "private static", "return": "String", "signature": "String getExpressSchema(String ifcFile)", "full_signature": "private static String getExpressSchema(String ifcFile)", "class_method_signature": "IfcSpfReader.getExpressSchema(String ifcFile)", "testcase": false, "constructor": false}, {"identifier": "slurp", "parameters": "(InputStream in)", "modifiers": "public static", "return": "String", "signature": "String slurp(InputStream in)", "full_signature": "public static String slurp(InputStream in)", "class_method_signature": "IfcSpfReader.slurp(InputStream in)", "testcase": false, "constructor": false}, {"identifier": "setup", "parameters": "(String ifcFileIn)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "void", "signature": "void setup(String ifcFileIn)", "full_signature": "@SuppressWarnings(\"unchecked\") public void setup(String ifcFileIn)", "class_method_signature": "IfcSpfReader.setup(String ifcFileIn)", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(String ifcFile, String outputFile, String baseURI)", "modifiers": "public", "return": "void", "signature": "void convert(String ifcFile, String outputFile, String baseURI)", "full_signature": "public void convert(String ifcFile, String outputFile, String baseURI)", "class_method_signature": "IfcSpfReader.convert(String ifcFile, String outputFile, String baseURI)", "testcase": false, "constructor": false}, {"identifier": "setRemoveDuplicates", "parameters": "(boolean val)", "modifiers": "public", "return": "void", "signature": "void setRemoveDuplicates(boolean val)", "full_signature": "public void setRemoveDuplicates(boolean val)", "class_method_signature": "IfcSpfReader.setRemoveDuplicates(boolean val)", "testcase": false, "constructor": false}, {"identifier": "getEntityMap", "parameters": "()", "modifiers": "public", "return": "Map<String, EntityVO>", "signature": "Map<String, EntityVO> getEntityMap()", "full_signature": "public Map<String, EntityVO> getEntityMap()", "class_method_signature": "IfcSpfReader.getEntityMap()", "testcase": false, "constructor": false}, {"identifier": "getTypeMap", "parameters": "()", "modifiers": "public", "return": "Map<String, TypeVO>", "signature": "Map<String, TypeVO> getTypeMap()", "full_signature": "public Map<String, TypeVO> getTypeMap()", "class_method_signature": "IfcSpfReader.getTypeMap()", "testcase": false, "constructor": false}, {"identifier": "getOntURI", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOntURI()", "full_signature": "public String getOntURI()", "class_method_signature": "IfcSpfReader.getOntURI()", "testcase": false, "constructor": false}], "file": "IFCtoRDF/src/main/java/be/ugent/IfcSpfReader.java"}, "focal_method": {"identifier": "slurp", "parameters": "(InputStream in)", "modifiers": "public static", "return": "String", "body": "public static String slurp(InputStream in) throws IOException {\n        StringBuilder out = new StringBuilder();\n        byte[] b = new byte[4096];\n        for (int n; (n = in.read(b)) != -1;) {\n            out.append(new String(b, 0, n));\n        }\n        return out.toString();\n    }", "signature": "String slurp(InputStream in)", "full_signature": "public static String slurp(InputStream in)", "class_method_signature": "IfcSpfReader.slurp(InputStream in)", "testcase": false, "constructor": false, "invocations": ["read", "append", "toString"]}, "repository": {"repo_id": 115029573, "url": "https://github.com/jyrkioraskari/IFCtoLBD", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 203851, "license": "licensed"}}