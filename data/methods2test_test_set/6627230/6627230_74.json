{"test_class": {"identifier": "StringTokenResolverTest", "superclass": "extends AbstractTokenResolverTest", "interfaces": "", "fields": [], "file": "dal-jdbc/src/test/java/org/unidal/dal/jdbc/query/token/resolver/StringTokenResolverTest.java"}, "test_case": {"identifier": "testString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testString() throws Exception {\n      QueryDef query = new QueryDef(\"test\", UserEntity.class, QueryType.SELECT, \"anything\");\n      Readset<?> readset = UserEntity.READSET_FULL;\n      User user = new User();\n      QueryContext ctx = getSelectContext(query, user, readset);\n\n      m_queryResolver.resolve(ctx);\n      Assert.assertEquals(\"anything\", ctx.getSqlStatement());\n   }", "signature": "void testString()", "full_signature": "@Test public void testString()", "class_method_signature": "StringTokenResolverTest.testString()", "testcase": true, "constructor": false, "invocations": ["getSelectContext", "resolve", "assertEquals", "getSqlStatement"]}, "focal_class": {"identifier": "StringTokenResolver", "superclass": "", "interfaces": "implements TokenResolver", "fields": [], "methods": [{"identifier": "resolve", "parameters": "(Token token, QueryContext ctx)", "modifiers": "public", "return": "String", "signature": "String resolve(Token token, QueryContext ctx)", "full_signature": "public String resolve(Token token, QueryContext ctx)", "class_method_signature": "StringTokenResolver.resolve(Token token, QueryContext ctx)", "testcase": false, "constructor": false}], "file": "dal-jdbc/src/main/java/org/unidal/dal/jdbc/query/token/resolver/StringTokenResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(Token token, QueryContext ctx)", "modifiers": "public", "return": "String", "body": "public String resolve(Token token, QueryContext ctx) {\n      return token.toString();\n   }", "signature": "String resolve(Token token, QueryContext ctx)", "full_signature": "public String resolve(Token token, QueryContext ctx)", "class_method_signature": "StringTokenResolver.resolve(Token token, QueryContext ctx)", "testcase": false, "constructor": false, "invocations": ["toString"]}, "repository": {"repo_id": 6627230, "url": "https://github.com/unidal/frameworks", "language": "Java", "is_fork": false, "fork_count": 96, "stargazer_count": 100, "size": 3009, "license": "licensed"}}