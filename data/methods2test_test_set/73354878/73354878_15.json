{"test_class": {"identifier": "KeyStorePasswordServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private IKeyStorePasswordService keyStorePasswordService;", "modifier": "@Autowired\n    private", "type": "IKeyStorePasswordService", "declarator": "keyStorePasswordService", "var_name": "keyStorePasswordService"}], "file": "storage-service/src/test/java/com/stnetix/ariaddna/persistence/services/KeyStorePasswordServiceImplTest.java"}, "test_case": {"identifier": "saveTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void saveTest() throws Exception {\n        KeyStorePasswordDTO keyStorePasswordDTO1 = new KeyStorePasswordDTO(\"0123456789\");\n        KeyStorePasswordDTO keyStorePasswordDTO2 = new KeyStorePasswordDTO(\"9876543210\");\n        KeyStorePasswordDTO savedKeyStorePasswordDTO1 = keyStorePasswordService\n                .save(keyStorePasswordDTO1);\n        KeyStorePasswordDTO savedKeyStorePasswordDTO2 = keyStorePasswordService\n                .save(keyStorePasswordDTO2);\n\n        assertEquals(savedKeyStorePasswordDTO1.getPass(), savedKeyStorePasswordDTO2.getPass());\n\n    }", "signature": "void saveTest()", "full_signature": "@Test public void saveTest()", "class_method_signature": "KeyStorePasswordServiceImplTest.saveTest()", "testcase": true, "constructor": false, "invocations": ["save", "save", "assertEquals", "getPass", "getPass"]}, "focal_class": {"identifier": "KeyStorePasswordServiceImpl", "superclass": "", "interfaces": "implements IKeyStorePasswordService", "fields": [{"original_string": "private KeyStorePasswordTransformer transformer;", "modifier": "private", "type": "KeyStorePasswordTransformer", "declarator": "transformer", "var_name": "transformer"}, {"original_string": "@Autowired\n    private KeyStorePasswordRepository repository;", "modifier": "@Autowired\n    private", "type": "KeyStorePasswordRepository", "declarator": "repository", "var_name": "repository"}], "methods": [{"identifier": "KeyStorePasswordServiceImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " KeyStorePasswordServiceImpl()", "full_signature": "public  KeyStorePasswordServiceImpl()", "class_method_signature": "KeyStorePasswordServiceImpl.KeyStorePasswordServiceImpl()", "testcase": false, "constructor": true}, {"identifier": "save", "parameters": "(KeyStorePasswordDTO passwordDTO)", "modifiers": "@Override public", "return": "KeyStorePasswordDTO", "signature": "KeyStorePasswordDTO save(KeyStorePasswordDTO passwordDTO)", "full_signature": "@Override public KeyStorePasswordDTO save(KeyStorePasswordDTO passwordDTO)", "class_method_signature": "KeyStorePasswordServiceImpl.save(KeyStorePasswordDTO passwordDTO)", "testcase": false, "constructor": false}, {"identifier": "getPassword", "parameters": "()", "modifiers": "@Override public", "return": "KeyStorePasswordDTO", "signature": "KeyStorePasswordDTO getPassword()", "full_signature": "@Override public KeyStorePasswordDTO getPassword()", "class_method_signature": "KeyStorePasswordServiceImpl.getPassword()", "testcase": false, "constructor": false}, {"identifier": "getAllPasswords", "parameters": "()", "modifiers": "private", "return": "List<KeyStorePasswordDTO>", "signature": "List<KeyStorePasswordDTO> getAllPasswords()", "full_signature": "private List<KeyStorePasswordDTO> getAllPasswords()", "class_method_signature": "KeyStorePasswordServiceImpl.getAllPasswords()", "testcase": false, "constructor": false}], "file": "storage-service/src/main/java/com/stnetix/ariaddna/persistence/services/KeyStorePasswordServiceImpl.java"}, "focal_method": {"identifier": "save", "parameters": "(KeyStorePasswordDTO passwordDTO)", "modifiers": "@Override public", "return": "KeyStorePasswordDTO", "body": "@Override\n    public KeyStorePasswordDTO save(KeyStorePasswordDTO passwordDTO) {\n        List<KeyStorePasswordDTO> keyStorePasswordDTOs = getAllPasswords();\n        if (keyStorePasswordDTOs.size() > 0) {\n            return keyStorePasswordDTOs.get(0);\n        }\n        KeyStorePassword password = transformer.keyStorePasswordDTOToEntity(passwordDTO);\n        return transformer.keyStorePasswordEntityToDTO(repository.save(password));\n    }", "signature": "KeyStorePasswordDTO save(KeyStorePasswordDTO passwordDTO)", "full_signature": "@Override public KeyStorePasswordDTO save(KeyStorePasswordDTO passwordDTO)", "class_method_signature": "KeyStorePasswordServiceImpl.save(KeyStorePasswordDTO passwordDTO)", "testcase": false, "constructor": false, "invocations": ["getAllPasswords", "size", "get", "keyStorePasswordDTOToEntity", "keyStorePasswordEntityToDTO", "save"]}, "repository": {"repo_id": 73354878, "url": "https://github.com/StnetixDevTeam/ariADDna", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 11, "size": 971, "license": "licensed"}}