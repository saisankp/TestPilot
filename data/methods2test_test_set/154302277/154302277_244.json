{"test_class": {"identifier": "JasperWirelessSmsClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String WKAEWUPSMS_CORRID = \"wkaewupsms123\";", "modifier": "private static final", "type": "String", "declarator": "WKAEWUPSMS_CORRID = \"wkaewupsms123\"", "var_name": "WKAEWUPSMS_CORRID"}, {"original_string": "private static final String LICENSEKEY = \"a-combination-of-characters\";", "modifier": "private static final", "type": "String", "declarator": "LICENSEKEY = \"a-combination-of-characters\"", "var_name": "LICENSEKEY"}, {"original_string": "private static final String ICC_ID = \"8931086113127163687\";", "modifier": "private static final", "type": "String", "declarator": "ICC_ID = \"8931086113127163687\"", "var_name": "ICC_ID"}, {"original_string": "private static final String SMS_MSG_ID = \"4302867004\";", "modifier": "private static final", "type": "String", "declarator": "SMS_MSG_ID = \"4302867004\"", "var_name": "SMS_MSG_ID"}, {"original_string": "private static final String JWCC_STATUS = \"Delivered\";", "modifier": "private static final", "type": "String", "declarator": "JWCC_STATUS = \"Delivered\"", "var_name": "JWCC_STATUS"}, {"original_string": "private static final String MODEM_STATUS = \"DeliverAckReceivedStatusSuccessful\";", "modifier": "private static final", "type": "String", "declarator": "MODEM_STATUS = \"DeliverAckReceivedStatusSuccessful\"", "var_name": "MODEM_STATUS"}, {"original_string": "private static final String API_VERSION = \"1234\";", "modifier": "private static final", "type": "String", "declarator": "API_VERSION = \"1234\"", "var_name": "API_VERSION"}, {"original_string": "@Autowired\n    private WebServiceTemplate webServiceTemplate;", "modifier": "@Autowired\n    private", "type": "WebServiceTemplate", "declarator": "webServiceTemplate", "var_name": "webServiceTemplate"}, {"original_string": "@Mock\n    private CorrelationIdProviderService correlationIdProviderService;", "modifier": "@Mock\n    private", "type": "CorrelationIdProviderService", "declarator": "correlationIdProviderService", "var_name": "correlationIdProviderService"}, {"original_string": "private MockWebServiceServer mockServer;", "modifier": "private", "type": "MockWebServiceServer", "declarator": "mockServer", "var_name": "mockServer"}, {"original_string": "@InjectMocks\n    @Autowired\n    private JasperWirelessSmsClient wsClientService;", "modifier": "@InjectMocks\n    @Autowired\n    private", "type": "JasperWirelessSmsClient", "declarator": "wsClientService", "var_name": "wsClientService"}], "file": "osgp/protocol-adapter-dlms/osgp-jasper-interface/src/test/java/org/opensmartgridplatform/adapter/protocol/jasper/infra/ws/JasperWirelessSmsClientTest.java"}, "test_case": {"identifier": "testSendWakeUpSmsResult", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSendWakeUpSmsResult() throws Exception {\n        // given\n        final Source requestPayload = new StringSource(\n                // @formatter:off\n                \"<ns2:GetSMSDetailsRequest \"\n                        + \"xmlns:ns2=\\\"http://api.jasperwireless.com/ws/schema\\\" messageTextEncoding=\\\"\\\">\"\n                        + \"<ns2:messageId>\" + WKAEWUPSMS_CORRID + \"</ns2:messageId>\" + \"<ns2:version>\" + API_VERSION\n                        + \"</ns2:version>\" + \"<ns2:licenseKey>\" + LICENSEKEY + \"</ns2:licenseKey>\" + \"<ns2:smsMsgIds>\"\n                        + \"<ns2:smsMsgId>\" + SMS_MSG_ID + \"</ns2:smsMsgId>\" + \"</ns2:smsMsgIds>\"\n                        + \"</ns2:GetSMSDetailsRequest>\");\n        // @formatter:on\n\n        final Source responsePayload = new StringSource(\n                // @formatter:off\n                \"<ns2:GetSMSDetailsResponse \"\n                        + \"ns2:requestId=\\\"c16KNt8BksvZDLex\\\" xmlns:ns2=\\\"http://api.jasperwireless.com/ws/schema\\\">\"\n                        + \"<ns2:correlationId>\" + WKAEWUPSMS_CORRID + \"</ns2:correlationId>\" + \"<ns2:version>\"\n                        + API_VERSION + \"</ns2:version>\" + \"<ns2:build>jasper_release_6.29-160108-154179</ns2:build>\"\n                        + \"<ns2:timestamp>2016-01-18T12:31:51.760Z</ns2:timestamp>\" + \"<ns2:smsMessages>\"\n                        + \"<ns2:smsMessage>\" + \"<ns2:smsMsgId>\" + SMS_MSG_ID + \"</ns2:smsMsgId>\" + \"<ns2:status>\"\n                        + JWCC_STATUS + \"</ns2:status>\" + \"<ns2:senderLogin>MaartenvanHaasteren</ns2:senderLogin>\"\n                        + \"<ns2:sentToIccid>3197002475559</ns2:sentToIccid>\" + \"<ns2:sentFrom>Server</ns2:sentFrom>\"\n                        + \"<ns2:smsMsgAttemptStatus>\" + MODEM_STATUS + \"</ns2:smsMsgAttemptStatus>\"\n                        + \"<ns2:msgType>MT</ns2:msgType>\" + \"<ns2:dateSent>2016-01-18T12:22:04.853Z</ns2:dateSent>\"\n                        + \"<ns2:dateReceived>2016-01-18T12:22:09.878Z</ns2:dateReceived>\"\n                        + \"<ns2:dateAdded>2016-01-18T12:22:04.854Z</ns2:dateAdded>\"\n                        + \"<ns2:dateModified>2016-01-18T12:22:09.889Z</ns2:dateModified>\" + \"</ns2:smsMessage>\"\n                        + \"</ns2:smsMessages>\" + \"</ns2:GetSMSDetailsResponse>\");\n        // @formatter:on\n\n        // when\n        when(this.correlationIdProviderService.getCorrelationId(\"wakeupsms\", ICC_ID)).thenReturn(WKAEWUPSMS_CORRID);\n\n        // then\n        this.mockServer.expect(payload(requestPayload)).andRespond(withPayload(responsePayload));\n\n        final GetSMSDetailsResponse response = this.wsClientService.getSMSDetails(new Long(SMS_MSG_ID), ICC_ID);\n\n        this.mockServer.verify();\n        final List<SmsMessageType> smsMessageTypes = response.getSmsMessages().getSmsMessage();\n        assertThat(smsMessageTypes).isNotNull();\n        final SmsMessageType smsMessageType = smsMessageTypes.get(0);\n        assertThat(smsMessageType.getStatus()).isEqualTo(JWCC_STATUS);\n        assertThat(smsMessageType.getSmsMsgAttemptStatus()).isEqualTo(MODEM_STATUS);\n    }", "signature": "void testSendWakeUpSmsResult()", "full_signature": "@Test public void testSendWakeUpSmsResult()", "class_method_signature": "JasperWirelessSmsClientTest.testSendWakeUpSmsResult()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getCorrelationId", "andRespond", "expect", "payload", "withPayload", "getSMSDetails", "verify", "getSmsMessage", "getSmsMessages", "isNotNull", "assertThat", "get", "isEqualTo", "assertThat", "getStatus", "isEqualTo", "assertThat", "getSmsMsgAttemptStatus"]}, "focal_class": {"identifier": "JasperWirelessSmsClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String WAKEUPSMS_TYPE = \"wakeupsms\";", "modifier": "private static final", "type": "String", "declarator": "WAKEUPSMS_TYPE = \"wakeupsms\"", "var_name": "WAKEUPSMS_TYPE"}, {"original_string": "private static final ObjectFactory WS_CLIENT_FACTORY = new ObjectFactory();", "modifier": "private static final", "type": "ObjectFactory", "declarator": "WS_CLIENT_FACTORY = new ObjectFactory()", "var_name": "WS_CLIENT_FACTORY"}, {"original_string": "private static final String SERVICE_GET_SMSDETAILS = \"http://api.jasperwireless.com/ws/service/sms/GetSMSDetails\";", "modifier": "private static final", "type": "String", "declarator": "SERVICE_GET_SMSDETAILS = \"http://api.jasperwireless.com/ws/service/sms/GetSMSDetails\"", "var_name": "SERVICE_GET_SMSDETAILS"}, {"original_string": "private static final String SERVICE_SMS_SEND_SMS = \"http://api.jasperwireless.com/ws/service/sms/SendSMS\";", "modifier": "private static final", "type": "String", "declarator": "SERVICE_SMS_SEND_SMS = \"http://api.jasperwireless.com/ws/service/sms/SendSMS\"", "var_name": "SERVICE_SMS_SEND_SMS"}, {"original_string": "@Autowired\n    private WebServiceTemplate jasperWebServiceTemplate;", "modifier": "@Autowired\n    private", "type": "WebServiceTemplate", "declarator": "jasperWebServiceTemplate", "var_name": "jasperWebServiceTemplate"}, {"original_string": "@Autowired\n    private CorrelationIdProviderService correlationIdProviderService;", "modifier": "@Autowired\n    private", "type": "CorrelationIdProviderService", "declarator": "correlationIdProviderService", "var_name": "correlationIdProviderService"}, {"original_string": "@Autowired\n    private JasperWirelessAccess jasperWirelessAccess;", "modifier": "@Autowired\n    private", "type": "JasperWirelessAccess", "declarator": "jasperWirelessAccess", "var_name": "jasperWirelessAccess"}], "methods": [{"identifier": "sendWakeUpSMS", "parameters": "(final String iccId)", "modifiers": "public", "return": "SendSMSResponse", "signature": "SendSMSResponse sendWakeUpSMS(final String iccId)", "full_signature": "public SendSMSResponse sendWakeUpSMS(final String iccId)", "class_method_signature": "JasperWirelessSmsClient.sendWakeUpSMS(final String iccId)", "testcase": false, "constructor": false}, {"identifier": "setInterceptorUsernameTokens", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setInterceptorUsernameTokens()", "full_signature": "private void setInterceptorUsernameTokens()", "class_method_signature": "JasperWirelessSmsClient.setInterceptorUsernameTokens()", "testcase": false, "constructor": false}, {"identifier": "getSMSDetails", "parameters": "(final Long smsMessageId, final String iccId)", "modifiers": "", "return": "GetSMSDetailsResponse", "signature": "GetSMSDetailsResponse getSMSDetails(final Long smsMessageId, final String iccId)", "full_signature": " GetSMSDetailsResponse getSMSDetails(final Long smsMessageId, final String iccId)", "class_method_signature": "JasperWirelessSmsClient.getSMSDetails(final Long smsMessageId, final String iccId)", "testcase": false, "constructor": false}, {"identifier": "setUsernameToken", "parameters": "(final Wss4jSecurityInterceptor interceptor, final String user, final String pass)", "modifiers": "private", "return": "void", "signature": "void setUsernameToken(final Wss4jSecurityInterceptor interceptor, final String user, final String pass)", "full_signature": "private void setUsernameToken(final Wss4jSecurityInterceptor interceptor, final String user, final String pass)", "class_method_signature": "JasperWirelessSmsClient.setUsernameToken(final Wss4jSecurityInterceptor interceptor, final String user, final String pass)", "testcase": false, "constructor": false}], "file": "osgp/protocol-adapter-dlms/osgp-jasper-interface/src/main/java/org/opensmartgridplatform/adapter/protocol/jasper/infra/ws/JasperWirelessSmsClient.java"}, "focal_method": {"identifier": "getSMSDetails", "parameters": "(final Long smsMessageId, final String iccId)", "modifiers": "", "return": "GetSMSDetailsResponse", "body": "GetSMSDetailsResponse getSMSDetails(final Long smsMessageId, final String iccId) {\n\n        final GetSMSDetailsRequest getSMSDetailsRequest = WS_CLIENT_FACTORY.createGetSMSDetailsRequest();\n        getSMSDetailsRequest.setLicenseKey(this.jasperWirelessAccess.getLicenseKey());\n        getSMSDetailsRequest.setMessageId(this.correlationIdProviderService.getCorrelationId(WAKEUPSMS_TYPE, iccId));\n\n        final GetSMSDetailsRequest.SmsMsgIds smsMsgIds = new GetSMSDetailsRequest.SmsMsgIds();\n        final List<Long> smsMsgId = smsMsgIds.getSmsMsgId();\n        smsMsgId.add(smsMessageId);\n        getSMSDetailsRequest.setSmsMsgIds(smsMsgIds);\n        getSMSDetailsRequest.setMessageTextEncoding(\"\");\n        getSMSDetailsRequest.setVersion(this.jasperWirelessAccess.getApiVersion());\n\n        this.setInterceptorUsernameTokens();\n\n        // override default uri\n        this.jasperWebServiceTemplate.setDefaultUri(this.jasperWirelessAccess.getUri());\n\n        return (GetSMSDetailsResponse) this.jasperWebServiceTemplate.marshalSendAndReceive(getSMSDetailsRequest,\n                new SoapActionCallback(SERVICE_GET_SMSDETAILS));\n    }", "signature": "GetSMSDetailsResponse getSMSDetails(final Long smsMessageId, final String iccId)", "full_signature": " GetSMSDetailsResponse getSMSDetails(final Long smsMessageId, final String iccId)", "class_method_signature": "JasperWirelessSmsClient.getSMSDetails(final Long smsMessageId, final String iccId)", "testcase": false, "constructor": false, "invocations": ["createGetSMSDetailsRequest", "setLicenseKey", "getLicenseKey", "setMessageId", "getCorrelationId", "getSmsMsgId", "add", "setSmsMsgIds", "setMessageTextEncoding", "setVersion", "getApiVersion", "setInterceptorUsernameTokens", "setDefaultUri", "getUri", "marshalSendAndReceive"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}