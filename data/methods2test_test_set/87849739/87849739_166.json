{"test_class": {"identifier": "HeaderBasedPlaceholderSubstitutionAlgorithmTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String REPLACER_KEY_1 = \"my:arbitrary:replacer1\";", "modifier": "private static final", "type": "String", "declarator": "REPLACER_KEY_1 = \"my:arbitrary:replacer1\"", "var_name": "REPLACER_KEY_1"}, {"original_string": "private static final String REPLACER_1 = \"{{ \" + REPLACER_KEY_1 + \" }}\";", "modifier": "private static final", "type": "String", "declarator": "REPLACER_1 = \"{{ \" + REPLACER_KEY_1 + \" }}\"", "var_name": "REPLACER_1"}, {"original_string": "private static final String LEGACY_REPLACER_KEY = \"request.subjectId\";", "modifier": "private static final", "type": "String", "declarator": "LEGACY_REPLACER_KEY = \"request.subjectId\"", "var_name": "LEGACY_REPLACER_KEY"}, {"original_string": "private static final String LEGACY_REPLACER = \"${\" + LEGACY_REPLACER_KEY + \"}\";", "modifier": "private static final", "type": "String", "declarator": "LEGACY_REPLACER = \"${\" + LEGACY_REPLACER_KEY + \"}\"", "var_name": "LEGACY_REPLACER"}, {"original_string": "private static final String REPLACED_1 = \"firstReplaced\";", "modifier": "private static final", "type": "String", "declarator": "REPLACED_1 = \"firstReplaced\"", "var_name": "REPLACED_1"}, {"original_string": "private static final String REPLACER_KEY_2 = \"my:arbitrary:replacer2\";", "modifier": "private static final", "type": "String", "declarator": "REPLACER_KEY_2 = \"my:arbitrary:replacer2\"", "var_name": "REPLACER_KEY_2"}, {"original_string": "private static final String REPLACED_2 = \"secondReplaced\";", "modifier": "private static final", "type": "String", "declarator": "REPLACED_2 = \"secondReplaced\"", "var_name": "REPLACED_2"}, {"original_string": "private static final String UNKNOWN_REPLACER_KEY = \"unknown:unknown\";", "modifier": "private static final", "type": "String", "declarator": "UNKNOWN_REPLACER_KEY = \"unknown:unknown\"", "var_name": "UNKNOWN_REPLACER_KEY"}, {"original_string": "private static final String UNKNOWN_REPLACER = \"{{ \" + UNKNOWN_REPLACER_KEY + \" }}\";", "modifier": "private static final", "type": "String", "declarator": "UNKNOWN_REPLACER = \"{{ \" + UNKNOWN_REPLACER_KEY + \" }}\"", "var_name": "UNKNOWN_REPLACER"}, {"original_string": "private static final String UNKNOWN_LEGACY_REPLACER_KEY = \"unknown.unknown\";", "modifier": "private static final", "type": "String", "declarator": "UNKNOWN_LEGACY_REPLACER_KEY = \"unknown.unknown\"", "var_name": "UNKNOWN_LEGACY_REPLACER_KEY"}, {"original_string": "private static final String UNKNOWN_LEGACY_REPLACER = \"${\" + UNKNOWN_LEGACY_REPLACER_KEY + \"}\";", "modifier": "private static final", "type": "String", "declarator": "UNKNOWN_LEGACY_REPLACER = \"${\" + UNKNOWN_LEGACY_REPLACER_KEY + \"}\"", "var_name": "UNKNOWN_LEGACY_REPLACER"}, {"original_string": "private static final DittoHeaders DITTO_HEADERS = DittoHeaders.newBuilder().correlationId(\"foo\").build();", "modifier": "private static final", "type": "DittoHeaders", "declarator": "DITTO_HEADERS = DittoHeaders.newBuilder().correlationId(\"foo\").build()", "var_name": "DITTO_HEADERS"}, {"original_string": "private HeaderBasedPlaceholderSubstitutionAlgorithm underTest;", "modifier": "private", "type": "HeaderBasedPlaceholderSubstitutionAlgorithm", "declarator": "underTest", "var_name": "underTest"}], "file": "services/concierge/enforcement/src/test/java/org/eclipse/ditto/services/concierge/enforcement/placeholders/HeaderBasedPlaceholderSubstitutionAlgorithmTest.java"}, "test_case": {"identifier": "substituteReturnsReplacedWhenInputContainsLegacyPlaceholder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void substituteReturnsReplacedWhenInputContainsLegacyPlaceholder() {\n        final String substituted =\n                underTest.substitute(LEGACY_REPLACER, DITTO_HEADERS);\n\n        assertThat(substituted).isEqualTo(REPLACED_1);\n    }", "signature": "void substituteReturnsReplacedWhenInputContainsLegacyPlaceholder()", "full_signature": "@Test public void substituteReturnsReplacedWhenInputContainsLegacyPlaceholder()", "class_method_signature": "HeaderBasedPlaceholderSubstitutionAlgorithmTest.substituteReturnsReplacedWhenInputContainsLegacyPlaceholder()", "testcase": true, "constructor": false, "invocations": ["substitute", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "HeaderBasedPlaceholderSubstitutionAlgorithm", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Map<String, Function<DittoHeaders, String>> replacementDefinitions;", "modifier": "private final", "type": "Map<String, Function<DittoHeaders, String>>", "declarator": "replacementDefinitions", "var_name": "replacementDefinitions"}, {"original_string": "private final List<CharSequence> knownPlaceHolders;", "modifier": "private final", "type": "List<CharSequence>", "declarator": "knownPlaceHolders", "var_name": "knownPlaceHolders"}], "methods": [{"identifier": "HeaderBasedPlaceholderSubstitutionAlgorithm", "parameters": "(\n            final Map<String, Function<DittoHeaders, String>> replacementDefinitions)", "modifiers": "private", "return": "", "signature": " HeaderBasedPlaceholderSubstitutionAlgorithm(\n            final Map<String, Function<DittoHeaders, String>> replacementDefinitions)", "full_signature": "private  HeaderBasedPlaceholderSubstitutionAlgorithm(\n            final Map<String, Function<DittoHeaders, String>> replacementDefinitions)", "class_method_signature": "HeaderBasedPlaceholderSubstitutionAlgorithm.HeaderBasedPlaceholderSubstitutionAlgorithm(\n            final Map<String, Function<DittoHeaders, String>> replacementDefinitions)", "testcase": false, "constructor": true}, {"identifier": "newInstance", "parameters": "(\n            final Map<String, Function<DittoHeaders, String>> replacementDefinitions)", "modifiers": "public static", "return": "HeaderBasedPlaceholderSubstitutionAlgorithm", "signature": "HeaderBasedPlaceholderSubstitutionAlgorithm newInstance(\n            final Map<String, Function<DittoHeaders, String>> replacementDefinitions)", "full_signature": "public static HeaderBasedPlaceholderSubstitutionAlgorithm newInstance(\n            final Map<String, Function<DittoHeaders, String>> replacementDefinitions)", "class_method_signature": "HeaderBasedPlaceholderSubstitutionAlgorithm.newInstance(\n            final Map<String, Function<DittoHeaders, String>> replacementDefinitions)", "testcase": false, "constructor": false}, {"identifier": "substitute", "parameters": "(final String input, final WithDittoHeaders withDittoHeaders)", "modifiers": "public", "return": "String", "signature": "String substitute(final String input, final WithDittoHeaders withDittoHeaders)", "full_signature": "public String substitute(final String input, final WithDittoHeaders withDittoHeaders)", "class_method_signature": "HeaderBasedPlaceholderSubstitutionAlgorithm.substitute(final String input, final WithDittoHeaders withDittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "substitute", "parameters": "(final String input, final DittoHeaders dittoHeaders)", "modifiers": "public", "return": "String", "signature": "String substitute(final String input, final DittoHeaders dittoHeaders)", "full_signature": "public String substitute(final String input, final DittoHeaders dittoHeaders)", "class_method_signature": "HeaderBasedPlaceholderSubstitutionAlgorithm.substitute(final String input, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "createReplacerFunction", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "Function<String, PipelineElement>", "signature": "Function<String, PipelineElement> createReplacerFunction(final DittoHeaders dittoHeaders)", "full_signature": "private Function<String, PipelineElement> createReplacerFunction(final DittoHeaders dittoHeaders)", "class_method_signature": "HeaderBasedPlaceholderSubstitutionAlgorithm.createReplacerFunction(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}], "file": "services/concierge/enforcement/src/main/java/org/eclipse/ditto/services/concierge/enforcement/placeholders/HeaderBasedPlaceholderSubstitutionAlgorithm.java"}, "focal_method": {"identifier": "substitute", "parameters": "(final String input, final WithDittoHeaders withDittoHeaders)", "modifiers": "public", "return": "String", "body": "public String substitute(final String input, final WithDittoHeaders withDittoHeaders) {\n        requireNonNull(input);\n        requireNonNull(withDittoHeaders);\n\n        return substitute(input, withDittoHeaders.getDittoHeaders());\n    }", "signature": "String substitute(final String input, final WithDittoHeaders withDittoHeaders)", "full_signature": "public String substitute(final String input, final WithDittoHeaders withDittoHeaders)", "class_method_signature": "HeaderBasedPlaceholderSubstitutionAlgorithm.substitute(final String input, final WithDittoHeaders withDittoHeaders)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "requireNonNull", "substitute", "getDittoHeaders"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}