{"test_class": {"identifier": "AntennaContextTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/model/src/test/java/org/eclipse/sw360/antenna/api/configuration/AntennaContextTest.java"}, "test_case": {"identifier": "testContextExtensionEmptyNoMatch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testContextExtensionEmptyNoMatch() {\n        AntennaContext context = createContext(new AntennaContext.ContextBuilder());\n\n        assertThat(context.getGeneric(Object.class)).isEmpty();\n    }", "signature": "void testContextExtensionEmptyNoMatch()", "full_signature": "@Test public void testContextExtensionEmptyNoMatch()", "class_method_signature": "AntennaContextTest.testContextExtensionEmptyNoMatch()", "testcase": true, "constructor": false, "invocations": ["createContext", "isEmpty", "assertThat", "getGeneric"]}, "focal_class": {"identifier": "AntennaContext", "superclass": "", "interfaces": "", "fields": [{"original_string": "private boolean debug;", "modifier": "private", "type": "boolean", "declarator": "debug", "var_name": "debug"}, {"original_string": "private Configuration configuration;", "modifier": "private", "type": "Configuration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private final ToolConfiguration toolConfiguration;", "modifier": "private final", "type": "ToolConfiguration", "declarator": "toolConfiguration", "var_name": "toolConfiguration"}, {"original_string": "private final IProject project;", "modifier": "private final", "type": "IProject", "declarator": "project", "var_name": "project"}, {"original_string": "private IProcessingReporter processingReporter;", "modifier": "private", "type": "IProcessingReporter", "declarator": "processingReporter", "var_name": "processingReporter"}, {"original_string": "private final ContextExtension contextExtension;", "modifier": "private final", "type": "ContextExtension", "declarator": "contextExtension", "var_name": "contextExtension"}, {"original_string": "private final ServiceFactory serviceFactory;", "modifier": "private final", "type": "ServiceFactory", "declarator": "serviceFactory", "var_name": "serviceFactory"}], "methods": [{"identifier": "AntennaContext", "parameters": "(ContextBuilder builder)", "modifiers": "private", "return": "", "signature": " AntennaContext(ContextBuilder builder)", "full_signature": "private  AntennaContext(ContextBuilder builder)", "class_method_signature": "AntennaContext.AntennaContext(ContextBuilder builder)", "testcase": false, "constructor": true}, {"identifier": "getConfiguration", "parameters": "()", "modifiers": "public", "return": "Configuration", "signature": "Configuration getConfiguration()", "full_signature": "public Configuration getConfiguration()", "class_method_signature": "AntennaContext.getConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getToolConfiguration", "parameters": "()", "modifiers": "public", "return": "ToolConfiguration", "signature": "ToolConfiguration getToolConfiguration()", "full_signature": "public ToolConfiguration getToolConfiguration()", "class_method_signature": "AntennaContext.getToolConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getProject", "parameters": "()", "modifiers": "public", "return": "IProject", "signature": "IProject getProject()", "full_signature": "public IProject getProject()", "class_method_signature": "AntennaContext.getProject()", "testcase": false, "constructor": false}, {"identifier": "getProcessingReporter", "parameters": "()", "modifiers": "public", "return": "IProcessingReporter", "signature": "IProcessingReporter getProcessingReporter()", "full_signature": "public IProcessingReporter getProcessingReporter()", "class_method_signature": "AntennaContext.getProcessingReporter()", "testcase": false, "constructor": false}, {"identifier": "getGeneric", "parameters": "(Class<? extends T> clazz)", "modifiers": "public", "return": "Optional<T>", "signature": "Optional<T> getGeneric(Class<? extends T> clazz)", "full_signature": "public Optional<T> getGeneric(Class<? extends T> clazz)", "class_method_signature": "AntennaContext.getGeneric(Class<? extends T> clazz)", "testcase": false, "constructor": false}, {"identifier": "setDebug", "parameters": "(boolean debug)", "modifiers": "public", "return": "void", "signature": "void setDebug(boolean debug)", "full_signature": "public void setDebug(boolean debug)", "class_method_signature": "AntennaContext.setDebug(boolean debug)", "testcase": false, "constructor": false}, {"identifier": "getDebug", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getDebug()", "full_signature": "public boolean getDebug()", "class_method_signature": "AntennaContext.getDebug()", "testcase": false, "constructor": false}, {"identifier": "getHttpClient", "parameters": "()", "modifiers": "public", "return": "HttpClient", "signature": "HttpClient getHttpClient()", "full_signature": "public HttpClient getHttpClient()", "class_method_signature": "AntennaContext.getHttpClient()", "testcase": false, "constructor": false}, {"identifier": "getObjectMapper", "parameters": "()", "modifiers": "public", "return": "ObjectMapper", "signature": "ObjectMapper getObjectMapper()", "full_signature": "public ObjectMapper getObjectMapper()", "class_method_signature": "AntennaContext.getObjectMapper()", "testcase": false, "constructor": false}], "file": "core/model/src/main/java/org/eclipse/sw360/antenna/api/configuration/AntennaContext.java"}, "focal_method": {"identifier": "getGeneric", "parameters": "(Class<? extends T> clazz)", "modifiers": "public", "return": "Optional<T>", "body": "public <T> Optional<T> getGeneric(Class<? extends T> clazz){\n        return this.contextExtension.get(clazz);\n    }", "signature": "Optional<T> getGeneric(Class<? extends T> clazz)", "full_signature": "public Optional<T> getGeneric(Class<? extends T> clazz)", "class_method_signature": "AntennaContext.getGeneric(Class<? extends T> clazz)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}