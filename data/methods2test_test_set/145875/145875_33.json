{"test_class": {"identifier": "ChangeScriptTest", "superclass": "", "interfaces": "", "fields": [], "file": "dbdeploy-core/src/test/java/com/dbdeploy/scripts/ChangeScriptTest.java"}, "test_case": {"identifier": "contentsOfFileShouldExcludeAnythingAfterAnUndoMarker", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void contentsOfFileShouldExcludeAnythingAfterAnUndoMarker() throws Exception {\n\t\tFile file = createTemporaryFileWithContent(\n\t\t\t\t\"Hello\\n\" +\n\t\t\t\t\"There!\\n\" +\n\t\t\t\t\"--//@UNDO\\n\" +\n\t\t\t\t\"This is after the undo marker!\\n\");\n\n\t\tChangeScript changeScript = new ChangeScript(5, file, \"UTF-8\");\n\t\tassertThat(changeScript.getContent(), is(\"Hello\\nThere!\\n\"));\n\t}", "signature": "void contentsOfFileShouldExcludeAnythingAfterAnUndoMarker()", "full_signature": "@Test public void contentsOfFileShouldExcludeAnythingAfterAnUndoMarker()", "class_method_signature": "ChangeScriptTest.contentsOfFileShouldExcludeAnythingAfterAnUndoMarker()", "testcase": true, "constructor": false, "invocations": ["createTemporaryFileWithContent", "assertThat", "getContent", "is"]}, "focal_class": {"identifier": "ChangeScript", "superclass": "", "interfaces": "implements Comparable", "fields": [{"original_string": "private final long id;", "modifier": "private final", "type": "long", "declarator": "id", "var_name": "id"}, {"original_string": "private final File file;", "modifier": "private final", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "private final String description;", "modifier": "private final", "type": "String", "declarator": "description", "var_name": "description"}, {"original_string": "private final String encoding;", "modifier": "private final", "type": "String", "declarator": "encoding", "var_name": "encoding"}, {"original_string": "private static final String UNDO_MARKER = \"--//@UNDO\";", "modifier": "private static final", "type": "String", "declarator": "UNDO_MARKER = \"--//@UNDO\"", "var_name": "UNDO_MARKER"}], "methods": [{"identifier": "ChangeScript", "parameters": "(long id)", "modifiers": "public", "return": "", "signature": " ChangeScript(long id)", "full_signature": "public  ChangeScript(long id)", "class_method_signature": "ChangeScript.ChangeScript(long id)", "testcase": false, "constructor": true}, {"identifier": "ChangeScript", "parameters": "(long id, String description)", "modifiers": "public", "return": "", "signature": " ChangeScript(long id, String description)", "full_signature": "public  ChangeScript(long id, String description)", "class_method_signature": "ChangeScript.ChangeScript(long id, String description)", "testcase": false, "constructor": true}, {"identifier": "ChangeScript", "parameters": "(long id, File file, String encoding)", "modifiers": "public", "return": "", "signature": " ChangeScript(long id, File file, String encoding)", "full_signature": "public  ChangeScript(long id, File file, String encoding)", "class_method_signature": "ChangeScript.ChangeScript(long id, File file, String encoding)", "testcase": false, "constructor": true}, {"identifier": "getFile", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getFile()", "full_signature": "public File getFile()", "class_method_signature": "ChangeScript.getFile()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getId()", "full_signature": "public long getId()", "class_method_signature": "ChangeScript.getId()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDescription()", "full_signature": "public String getDescription()", "class_method_signature": "ChangeScript.getDescription()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Object o)", "modifiers": "public", "return": "int", "signature": "int compareTo(Object o)", "full_signature": "public int compareTo(Object o)", "class_method_signature": "ChangeScript.compareTo(Object o)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ChangeScript.toString()", "testcase": false, "constructor": false}, {"identifier": "getContent", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getContent()", "full_signature": "public String getContent()", "class_method_signature": "ChangeScript.getContent()", "testcase": false, "constructor": false}, {"identifier": "getUndoContent", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUndoContent()", "full_signature": "public String getUndoContent()", "class_method_signature": "ChangeScript.getUndoContent()", "testcase": false, "constructor": false}, {"identifier": "getFileContents", "parameters": "(boolean onlyAfterUndoMarker)", "modifiers": "private", "return": "String", "signature": "String getFileContents(boolean onlyAfterUndoMarker)", "full_signature": "private String getFileContents(boolean onlyAfterUndoMarker)", "class_method_signature": "ChangeScript.getFileContents(boolean onlyAfterUndoMarker)", "testcase": false, "constructor": false}], "file": "dbdeploy-core/src/main/java/com/dbdeploy/scripts/ChangeScript.java"}, "focal_method": {"identifier": "getContent", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getContent() {\n\t\treturn getFileContents(false);\n\t}", "signature": "String getContent()", "full_signature": "public String getContent()", "class_method_signature": "ChangeScript.getContent()", "testcase": false, "constructor": false, "invocations": ["getFileContents"]}, "repository": {"repo_id": 145875, "url": "https://github.com/tackley/dbdeploy", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 64, "size": 7295, "license": "licensed"}}