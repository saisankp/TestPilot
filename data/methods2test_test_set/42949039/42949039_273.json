{"test_class": {"identifier": "BusinessObjectDataSearchHelperTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/BusinessObjectDataSearchHelperTest.java"}, "test_case": {"identifier": "testValidateBusinessObjectDataSearchKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateBusinessObjectDataSearchKey() throws Exception\n    {\n        // Create a registration date range filter.\n        XMLGregorianCalendar startRegistrationDate = DatatypeFactory.newInstance().newXMLGregorianCalendar(\"2018-04-01\");\n        XMLGregorianCalendar endRegistrationDate = DatatypeFactory.newInstance().newXMLGregorianCalendar(\"2018-04-02\");\n        RegistrationDateRangeFilter registrationDateRangeFilter = new RegistrationDateRangeFilter(startRegistrationDate, endRegistrationDate);\n\n        // Create attribute value filters.\n        List<AttributeValueFilter> attributeValueFilters =\n            Arrays.asList(new AttributeValueFilter(ATTRIBUTE_NAME, ATTRIBUTE_VALUE), new AttributeValueFilter(ATTRIBUTE_NAME_2, ATTRIBUTE_VALUE_2));\n\n        // Create a business object data search key.\n        BusinessObjectDataSearchKey businessObjectDataSearchKey =\n            new BusinessObjectDataSearchKey(BDEF_NAMESPACE, BDEF_NAME, FORMAT_USAGE_CODE, FORMAT_FILE_TYPE_CODE, FORMAT_VERSION, NO_PARTITION_VALUE_FILTERS,\n                registrationDateRangeFilter, attributeValueFilters, FILTER_ON_LATEST_VALID_VERSION, FILTER_ON_RETENTION_EXPIRATION);\n\n        // Clone the original business object data search key to validate the results.\n        BusinessObjectDataSearchKey originalBusinessObjectDataSearchKey = (BusinessObjectDataSearchKey) businessObjectDataSearchKey.clone();\n\n        // Call the method under test.\n        businessObjectDataSearchHelper.validateBusinessObjectDataSearchKey(businessObjectDataSearchKey);\n\n        // Validate the results. We expect no changes to the business object data search key.\n        assertEquals(originalBusinessObjectDataSearchKey, businessObjectDataSearchKey);\n    }", "signature": "void testValidateBusinessObjectDataSearchKey()", "full_signature": "@Test public void testValidateBusinessObjectDataSearchKey()", "class_method_signature": "BusinessObjectDataSearchHelperTest.testValidateBusinessObjectDataSearchKey()", "testcase": true, "constructor": false, "invocations": ["newXMLGregorianCalendar", "newInstance", "newXMLGregorianCalendar", "newInstance", "asList", "clone", "validateBusinessObjectDataSearchKey", "assertEquals"]}, "focal_class": {"identifier": "BusinessObjectDataSearchHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Autowired\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@Autowired\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Autowired\n    private ConfigurationHelper configurationHelper;", "modifier": "@Autowired\n    private", "type": "ConfigurationHelper", "declarator": "configurationHelper", "var_name": "configurationHelper"}], "methods": [{"identifier": "validateBusinessObjectDataSearchRequest", "parameters": "(BusinessObjectDataSearchRequest businessObjectDataSearchRequest)", "modifiers": "public", "return": "void", "signature": "void validateBusinessObjectDataSearchRequest(BusinessObjectDataSearchRequest businessObjectDataSearchRequest)", "full_signature": "public void validateBusinessObjectDataSearchRequest(BusinessObjectDataSearchRequest businessObjectDataSearchRequest)", "class_method_signature": "BusinessObjectDataSearchHelper.validateBusinessObjectDataSearchRequest(BusinessObjectDataSearchRequest businessObjectDataSearchRequest)", "testcase": false, "constructor": false}, {"identifier": "validatePagingParameter", "parameters": "(String parameterName, Integer parameterValue, Integer defaultParameterValue, Integer maxParameterValue)", "modifiers": "public", "return": "Integer", "signature": "Integer validatePagingParameter(String parameterName, Integer parameterValue, Integer defaultParameterValue, Integer maxParameterValue)", "full_signature": "public Integer validatePagingParameter(String parameterName, Integer parameterValue, Integer defaultParameterValue, Integer maxParameterValue)", "class_method_signature": "BusinessObjectDataSearchHelper.validatePagingParameter(String parameterName, Integer parameterValue, Integer defaultParameterValue, Integer maxParameterValue)", "testcase": false, "constructor": false}, {"identifier": "validateBusinessObjectDataSearchKey", "parameters": "(BusinessObjectDataSearchKey businessObjectDataSearchKey)", "modifiers": "", "return": "void", "signature": "void validateBusinessObjectDataSearchKey(BusinessObjectDataSearchKey businessObjectDataSearchKey)", "full_signature": " void validateBusinessObjectDataSearchKey(BusinessObjectDataSearchKey businessObjectDataSearchKey)", "class_method_signature": "BusinessObjectDataSearchHelper.validateBusinessObjectDataSearchKey(BusinessObjectDataSearchKey businessObjectDataSearchKey)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/BusinessObjectDataSearchHelper.java"}, "focal_method": {"identifier": "validateBusinessObjectDataSearchKey", "parameters": "(BusinessObjectDataSearchKey businessObjectDataSearchKey)", "modifiers": "", "return": "void", "body": "void validateBusinessObjectDataSearchKey(BusinessObjectDataSearchKey businessObjectDataSearchKey)\n    {\n        Assert.notNull(businessObjectDataSearchKey, \"A business object data search key must be specified.\");\n\n        businessObjectDataSearchKey.setNamespace(alternateKeyHelper.validateStringParameter(\"namespace\", businessObjectDataSearchKey.getNamespace()));\n        businessObjectDataSearchKey.setBusinessObjectDefinitionName(\n            alternateKeyHelper.validateStringParameter(\"business object definition name\", businessObjectDataSearchKey.getBusinessObjectDefinitionName()));\n\n        if (businessObjectDataSearchKey.getBusinessObjectFormatUsage() != null)\n        {\n            businessObjectDataSearchKey.setBusinessObjectFormatUsage(businessObjectDataSearchKey.getBusinessObjectFormatUsage().trim());\n        }\n\n        if (businessObjectDataSearchKey.getBusinessObjectFormatFileType() != null)\n        {\n            businessObjectDataSearchKey.setBusinessObjectFormatFileType(businessObjectDataSearchKey.getBusinessObjectFormatFileType().trim());\n        }\n\n        // Validate partition value filters, if specified.\n        if (CollectionUtils.isNotEmpty(businessObjectDataSearchKey.getPartitionValueFilters()))\n        {\n            businessObjectDataHelper.validatePartitionValueFilters(businessObjectDataSearchKey.getPartitionValueFilters(), null, false);\n\n            // TODO: For now, we only support partition values or partition range in the filter.\n            for (PartitionValueFilter partitionValueFilter : businessObjectDataSearchKey.getPartitionValueFilters())\n            {\n                List<String> partitionValues = partitionValueFilter.getPartitionValues();\n                PartitionValueRange partitionValueRange = partitionValueFilter.getPartitionValueRange();\n\n                // The partition values array should not be empty and partition vale range start and end value should not be empty\n                // as it is done above at businessObjectDataHelper.validatePartitionValueFilters().\n                if (CollectionUtils.isEmpty(partitionValues) && partitionValueRange == null)\n                {\n                    throw new IllegalArgumentException(\"Only partition values or partition range are supported in partition value filter.\");\n                }\n            }\n        }\n\n        // Validate registration date range filter, if specified.\n        if (businessObjectDataSearchKey.getRegistrationDateRangeFilter() != null)\n        {\n            businessObjectDataHelper.validateRegistrationDateRangeFilter(businessObjectDataSearchKey.getRegistrationDateRangeFilter());\n        }\n\n        // Validate attribute value filters, if specified.\n        if (CollectionUtils.isNotEmpty(businessObjectDataSearchKey.getAttributeValueFilters()))\n        {\n            for (AttributeValueFilter attributeValueFilter : businessObjectDataSearchKey.getAttributeValueFilters())\n            {\n                if (attributeValueFilter.getAttributeName() != null)\n                {\n                    attributeValueFilter.setAttributeName(attributeValueFilter.getAttributeName().trim());\n                }\n                if (StringUtils.isBlank(attributeValueFilter.getAttributeName()) && StringUtils.isEmpty(attributeValueFilter.getAttributeValue()))\n                {\n                    throw new IllegalArgumentException(\"Either attribute name or attribute value filter must be specified.\");\n                }\n            }\n        }\n    }", "signature": "void validateBusinessObjectDataSearchKey(BusinessObjectDataSearchKey businessObjectDataSearchKey)", "full_signature": " void validateBusinessObjectDataSearchKey(BusinessObjectDataSearchKey businessObjectDataSearchKey)", "class_method_signature": "BusinessObjectDataSearchHelper.validateBusinessObjectDataSearchKey(BusinessObjectDataSearchKey businessObjectDataSearchKey)", "testcase": false, "constructor": false, "invocations": ["notNull", "setNamespace", "validateStringParameter", "getNamespace", "setBusinessObjectDefinitionName", "validateStringParameter", "getBusinessObjectDefinitionName", "getBusinessObjectFormatUsage", "setBusinessObjectFormatUsage", "trim", "getBusinessObjectFormatUsage", "getBusinessObjectFormatFileType", "setBusinessObjectFormatFileType", "trim", "getBusinessObjectFormatFileType", "isNotEmpty", "getPartitionValueFilters", "validatePartitionValueFilters", "getPartitionValueFilters", "getPartitionValueFilters", "getPartitionValues", "getPartitionValueRange", "isEmpty", "getRegistrationDateRangeFilter", "validateRegistrationDateRangeFilter", "getRegistrationDateRangeFilter", "isNotEmpty", "getAttributeValueFilters", "getAttributeValueFilters", "getAttributeName", "setAttributeName", "trim", "getAttributeName", "isBlank", "getAttributeName", "isEmpty", "getAttributeValue"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}