{"test_class": {"identifier": "MultipartFormDataEntityProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HttpServletRequest              httpServletRequest;", "modifier": "private", "type": "HttpServletRequest", "declarator": "httpServletRequest", "var_name": "httpServletRequest"}, {"original_string": "private MultipartFormDataEntityProvider formDataEntityProvider;", "modifier": "private", "type": "MultipartFormDataEntityProvider", "declarator": "formDataEntityProvider", "var_name": "formDataEntityProvider"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/provider/MultipartFormDataEntityProviderTest.java"}, "test_case": {"identifier": "writeToIsNotSupported", "parameters": "()", "modifiers": "@Test(expected = UnsupportedOperationException.class) public", "return": "void", "body": "@Test(expected = UnsupportedOperationException.class)\n    public void writeToIsNotSupported() throws Exception {\n        formDataEntityProvider.writeTo(null, null, null, null, null, null, null);\n    }", "signature": "void writeToIsNotSupported()", "full_signature": "@Test(expected = UnsupportedOperationException.class) public void writeToIsNotSupported()", "class_method_signature": "MultipartFormDataEntityProviderTest.writeToIsNotSupported()", "testcase": true, "constructor": false, "invocations": ["writeTo"]}, "focal_class": {"identifier": "MultipartFormDataEntityProvider", "superclass": "", "interfaces": "implements EntityProvider<Iterator<FileItem>>", "fields": [{"original_string": "protected HttpServletRequest httpRequest;", "modifier": "protected", "type": "HttpServletRequest", "declarator": "httpRequest", "var_name": "httpRequest"}], "methods": [{"identifier": "MultipartFormDataEntityProvider", "parameters": "(@Context HttpServletRequest httpRequest)", "modifiers": "public", "return": "", "signature": " MultipartFormDataEntityProvider(@Context HttpServletRequest httpRequest)", "full_signature": "public  MultipartFormDataEntityProvider(@Context HttpServletRequest httpRequest)", "class_method_signature": "MultipartFormDataEntityProvider.MultipartFormDataEntityProvider(@Context HttpServletRequest httpRequest)", "testcase": false, "constructor": true}, {"identifier": "isReadable", "parameters": "(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public boolean isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "MultipartFormDataEntityProvider.isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "readFrom", "parameters": "(Class<Iterator<FileItem>> type,\n                                       Type genericType,\n                                       Annotation[] annotations,\n                                       MediaType mediaType,\n                                       MultivaluedMap<String, String> httpHeaders,\n                                       InputStream entityStream)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "Iterator<FileItem>", "signature": "Iterator<FileItem> readFrom(Class<Iterator<FileItem>> type,\n                                       Type genericType,\n                                       Annotation[] annotations,\n                                       MediaType mediaType,\n                                       MultivaluedMap<String, String> httpHeaders,\n                                       InputStream entityStream)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public Iterator<FileItem> readFrom(Class<Iterator<FileItem>> type,\n                                       Type genericType,\n                                       Annotation[] annotations,\n                                       MediaType mediaType,\n                                       MultivaluedMap<String, String> httpHeaders,\n                                       InputStream entityStream)", "class_method_signature": "MultipartFormDataEntityProvider.readFrom(Class<Iterator<FileItem>> type,\n                                       Type genericType,\n                                       Annotation[] annotations,\n                                       MediaType mediaType,\n                                       MultivaluedMap<String, String> httpHeaders,\n                                       InputStream entityStream)", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "(Iterator<FileItem> t, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "long", "signature": "long getSize(Iterator<FileItem> t, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public long getSize(Iterator<FileItem> t, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "MultipartFormDataEntityProvider.getSize(Iterator<FileItem> t, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "isWriteable", "parameters": "(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "MultipartFormDataEntityProvider.isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "writeTo", "parameters": "(Iterator<FileItem> t,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "modifiers": "@Override public", "return": "void", "signature": "void writeTo(Iterator<FileItem> t,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "full_signature": "@Override public void writeTo(Iterator<FileItem> t,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "class_method_signature": "MultipartFormDataEntityProvider.writeTo(Iterator<FileItem> t,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/provider/MultipartFormDataEntityProvider.java"}, "focal_method": {"identifier": "writeTo", "parameters": "(Iterator<FileItem> t,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void writeTo(Iterator<FileItem> t,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream) throws IOException {\n        throw new UnsupportedOperationException();\n    }", "signature": "void writeTo(Iterator<FileItem> t,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "full_signature": "@Override public void writeTo(Iterator<FileItem> t,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "class_method_signature": "MultipartFormDataEntityProvider.writeTo(Iterator<FileItem> t,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}