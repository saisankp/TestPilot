{"test_class": {"identifier": "CountingOutputStreamTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ByteArrayOutputStream outBuffer;", "modifier": "private", "type": "ByteArrayOutputStream", "declarator": "outBuffer", "var_name": "outBuffer"}, {"original_string": "private CountingOutputStream stream;", "modifier": "private", "type": "CountingOutputStream", "declarator": "stream", "var_name": "stream"}], "file": "feya/libraries/archive_diff/diff.shared/src/test/java/com/google/archivepatcher/shared/CountingOutputStreamTest.java"}, "test_case": {"identifier": "testGetNumBytesWritten_Zero", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetNumBytesWritten_Zero() {\n    Assert.assertEquals(0, stream.getNumBytesWritten());\n  }", "signature": "void testGetNumBytesWritten_Zero()", "full_signature": "@Test public void testGetNumBytesWritten_Zero()", "class_method_signature": "CountingOutputStreamTest.testGetNumBytesWritten_Zero()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getNumBytesWritten"]}, "focal_class": {"identifier": "CountingOutputStream", "superclass": "extends FilterOutputStream", "interfaces": "", "fields": [{"original_string": "private long bytesWritten = 0;", "modifier": "private", "type": "long", "declarator": "bytesWritten = 0", "var_name": "bytesWritten"}], "methods": [{"identifier": "CountingOutputStream", "parameters": "(OutputStream out)", "modifiers": "public", "return": "", "signature": " CountingOutputStream(OutputStream out)", "full_signature": "public  CountingOutputStream(OutputStream out)", "class_method_signature": "CountingOutputStream.CountingOutputStream(OutputStream out)", "testcase": false, "constructor": true}, {"identifier": "getNumBytesWritten", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getNumBytesWritten()", "full_signature": "public long getNumBytesWritten()", "class_method_signature": "CountingOutputStream.getNumBytesWritten()", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(int b)", "modifiers": "@Override public", "return": "void", "signature": "void write(int b)", "full_signature": "@Override public void write(int b)", "class_method_signature": "CountingOutputStream.write(int b)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(byte[] b)", "modifiers": "@Override public", "return": "void", "signature": "void write(byte[] b)", "full_signature": "@Override public void write(byte[] b)", "class_method_signature": "CountingOutputStream.write(byte[] b)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(byte[] b, int off, int len)", "modifiers": "@Override public", "return": "void", "signature": "void write(byte[] b, int off, int len)", "full_signature": "@Override public void write(byte[] b, int off, int len)", "class_method_signature": "CountingOutputStream.write(byte[] b, int off, int len)", "testcase": false, "constructor": false}], "file": "feya/libraries/archive_diff/diff.shared/src/main/java/com/google/archivepatcher/shared/CountingOutputStream.java"}, "focal_method": {"identifier": "getNumBytesWritten", "parameters": "()", "modifiers": "public", "return": "long", "body": "public long getNumBytesWritten() {\n    return bytesWritten;\n  }", "signature": "long getNumBytesWritten()", "full_signature": "public long getNumBytesWritten()", "class_method_signature": "CountingOutputStream.getNumBytesWritten()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 20126854, "url": "https://github.com/kaedea/Feya", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 12, "size": 7798, "license": "licensed"}}