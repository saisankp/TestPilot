{"test_class": {"identifier": "ByteArrayWrapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static ByteArrayWrapper wrapper1;", "modifier": "static", "type": "ByteArrayWrapper", "declarator": "wrapper1", "var_name": "wrapper1"}, {"original_string": "static ByteArrayWrapper wrapper2;", "modifier": "static", "type": "ByteArrayWrapper", "declarator": "wrapper2", "var_name": "wrapper2"}, {"original_string": "static ByteArrayWrapper wrapper3;", "modifier": "static", "type": "ByteArrayWrapper", "declarator": "wrapper3", "var_name": "wrapper3"}, {"original_string": "static ByteArrayWrapper wrapper4;", "modifier": "static", "type": "ByteArrayWrapper", "declarator": "wrapper4", "var_name": "wrapper4"}], "file": "ethereumj-core/src/test/java/org/ethereum/db/ByteArrayWrapperTest.java"}, "test_case": {"identifier": "testCompareTo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCompareTo() {\n\t\tassertTrue(wrapper1.compareTo(wrapper2) == 0);\n\t\tassertTrue(wrapper1.compareTo(wrapper3) > 1);\n\t\tassertTrue(wrapper1.compareTo(wrapper4) > 1);\n\t\tassertTrue(wrapper2.compareTo(wrapper3) > 1);\n\t}", "signature": "void testCompareTo()", "full_signature": "@Test public void testCompareTo()", "class_method_signature": "ByteArrayWrapperTest.testCompareTo()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "compareTo", "assertTrue", "compareTo", "assertTrue", "compareTo", "assertTrue", "compareTo"]}, "focal_class": {"identifier": "ByteArrayWrapper", "superclass": "", "interfaces": "implements Comparable<ByteArrayWrapper>", "fields": [{"original_string": "private final byte[] data;", "modifier": "private final", "type": "byte[]", "declarator": "data", "var_name": "data"}], "methods": [{"identifier": "ByteArrayWrapper", "parameters": "(byte[] data)", "modifiers": "public", "return": "", "signature": " ByteArrayWrapper(byte[] data)", "full_signature": "public  ByteArrayWrapper(byte[] data)", "class_method_signature": "ByteArrayWrapper.ByteArrayWrapper(byte[] data)", "testcase": false, "constructor": true}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "public boolean equals(Object other)", "class_method_signature": "ByteArrayWrapper.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ByteArrayWrapper.hashCode()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(ByteArrayWrapper o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(ByteArrayWrapper o)", "full_signature": "@Override public int compareTo(ByteArrayWrapper o)", "class_method_signature": "ByteArrayWrapper.compareTo(ByteArrayWrapper o)", "testcase": false, "constructor": false}, {"identifier": "getData", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getData()", "full_signature": "public byte[] getData()", "class_method_signature": "ByteArrayWrapper.getData()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ByteArrayWrapper.toString()", "testcase": false, "constructor": false}], "file": "ethereumj-core/src/main/java/org/ethereum/db/ByteArrayWrapper.java"}, "focal_method": {"identifier": "compareTo", "parameters": "(ByteArrayWrapper o)", "modifiers": "@Override public", "return": "int", "body": "@Override\n\tpublic int compareTo(ByteArrayWrapper o) {\n\t\treturn FastByteComparisons.compareTo(\n\t\t\t\tdata, 0, data.length, \n\t\t\t\to.getData(), 0, o.getData().length);\n\t}", "signature": "int compareTo(ByteArrayWrapper o)", "full_signature": "@Override public int compareTo(ByteArrayWrapper o)", "class_method_signature": "ByteArrayWrapper.compareTo(ByteArrayWrapper o)", "testcase": false, "constructor": false, "invocations": ["compareTo", "getData", "getData"]}, "repository": {"repo_id": 24503275, "url": "https://github.com/ethereumj/ethereumj", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 27, "size": 13884, "license": "licensed"}}