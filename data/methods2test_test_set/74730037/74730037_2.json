{"test_class": {"identifier": "DanmakuPacketTest", "superclass": "", "interfaces": "", "fields": [], "file": "BiliLiveLib/src/test/java/charlie/bililivelib/danmaku/DanmakuPacketTest.java"}, "test_case": {"identifier": "generate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void generate() throws Exception {\n        DanmakuPacket packet = new DanmakuPacket(DanmakuPacket.Action.HEARTBEAT, \"sss\");\n        byte[] buffer = packet.generate();\n        assertArrayEquals(new byte[]{0, 0, 0, 19, 0, 16, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 115, 115, 115}, buffer);\n    }", "signature": "void generate()", "full_signature": "@Test public void generate()", "class_method_signature": "DanmakuPacketTest.generate()", "testcase": true, "constructor": false, "invocations": ["generate", "assertArrayEquals"]}, "focal_class": {"identifier": "DanmakuPacket", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final short DEFAULT_HEADER_LENGTH = 0x10;", "modifier": "private static final", "type": "short", "declarator": "DEFAULT_HEADER_LENGTH = 0x10", "var_name": "DEFAULT_HEADER_LENGTH"}, {"original_string": "private static final short DEFAULT_PROTOCOL_VERSION = 1;", "modifier": "private static final", "type": "short", "declarator": "DEFAULT_PROTOCOL_VERSION = 1", "var_name": "DEFAULT_PROTOCOL_VERSION"}, {"original_string": "private static final int DEFAULT_PARAM = 1;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_PARAM = 1", "var_name": "DEFAULT_PARAM"}, {"original_string": "private static final int DEFAULT_LENGTH = -1;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_LENGTH = -1", "var_name": "DEFAULT_LENGTH"}, {"original_string": "private static final int PACKET_HEADER_SIZE = 16;", "modifier": "private static final", "type": "int", "declarator": "PACKET_HEADER_SIZE = 16", "var_name": "PACKET_HEADER_SIZE"}, {"original_string": "private short headerLength = DEFAULT_HEADER_LENGTH;", "modifier": "private", "type": "short", "declarator": "headerLength = DEFAULT_HEADER_LENGTH", "var_name": "headerLength"}, {"original_string": "private short protocolVersion = DEFAULT_PROTOCOL_VERSION;", "modifier": "private", "type": "short", "declarator": "protocolVersion = DEFAULT_PROTOCOL_VERSION", "var_name": "protocolVersion"}, {"original_string": "private int length;", "modifier": "private", "type": "int", "declarator": "length", "var_name": "length"}, {"original_string": "private Action action;", "modifier": "private", "type": "Action", "declarator": "action", "var_name": "action"}, {"original_string": "private int param = DEFAULT_PARAM;", "modifier": "private", "type": "int", "declarator": "param = DEFAULT_PARAM", "var_name": "param"}, {"original_string": "private String body = \"\";", "modifier": "private", "type": "String", "declarator": "body = \"\"", "var_name": "body"}], "methods": [{"identifier": "DanmakuPacket", "parameters": "(Action action)", "modifiers": "public", "return": "", "signature": " DanmakuPacket(Action action)", "full_signature": "public  DanmakuPacket(Action action)", "class_method_signature": "DanmakuPacket.DanmakuPacket(Action action)", "testcase": false, "constructor": true}, {"identifier": "DanmakuPacket", "parameters": "(Action action, String body)", "modifiers": "public", "return": "", "signature": " DanmakuPacket(Action action, String body)", "full_signature": "public  DanmakuPacket(Action action, String body)", "class_method_signature": "DanmakuPacket.DanmakuPacket(Action action, String body)", "testcase": false, "constructor": true}, {"identifier": "generate", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] generate()", "full_signature": "public byte[] generate()", "class_method_signature": "DanmakuPacket.generate()", "testcase": false, "constructor": false}, {"identifier": "writeBigEndian", "parameters": "(short data, DataOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeBigEndian(short data, DataOutputStream stream)", "full_signature": "private void writeBigEndian(short data, DataOutputStream stream)", "class_method_signature": "DanmakuPacket.writeBigEndian(short data, DataOutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "writeBigEndian", "parameters": "(int data, DataOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeBigEndian(int data, DataOutputStream stream)", "full_signature": "private void writeBigEndian(int data, DataOutputStream stream)", "class_method_signature": "DanmakuPacket.writeBigEndian(int data, DataOutputStream stream)", "testcase": false, "constructor": false}, {"identifier": "calculateLength", "parameters": "(byte[] bytes)", "modifiers": "private", "return": "void", "signature": "void calculateLength(byte[] bytes)", "full_signature": "private void calculateLength(byte[] bytes)", "class_method_signature": "DanmakuPacket.calculateLength(byte[] bytes)", "testcase": false, "constructor": false}], "file": "BiliLiveLib/src/main/java/charlie/bililivelib/danmaku/DanmakuPacket.java"}, "focal_method": {"identifier": "generate", "parameters": "()", "modifiers": "public", "return": "byte[]", "body": "public byte[] generate() {\n        byte[] bodyBytes = body.getBytes(UTF8);\n\n        calculateLength(bodyBytes);\n\n        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(length);\n        DataOutputStream dataOutputStream = new DataOutputStream(byteArrayOutputStream);\n        writeBigEndian(length, dataOutputStream);\n        writeBigEndian(headerLength, dataOutputStream);\n        writeBigEndian(protocolVersion, dataOutputStream);\n        writeBigEndian(action.getID(), dataOutputStream);\n        writeBigEndian(param, dataOutputStream);\n        if (bodyBytes.length > 0) {\n            byteArrayOutputStream.write(bodyBytes, 0, bodyBytes.length);\n        }\n\n        return byteArrayOutputStream.toByteArray();\n    }", "signature": "byte[] generate()", "full_signature": "public byte[] generate()", "class_method_signature": "DanmakuPacket.generate()", "testcase": false, "constructor": false, "invocations": ["getBytes", "calculateLength", "writeBigEndian", "writeBigEndian", "writeBigEndian", "writeBigEndian", "getID", "writeBigEndian", "write", "toByteArray"]}, "repository": {"repo_id": 74730037, "url": "https://github.com/cqjjjzr/BiliLiveLib", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 17, "size": 535, "license": "licensed"}}