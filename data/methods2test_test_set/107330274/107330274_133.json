{"test_class": {"identifier": "TimeUnitExtTest", "superclass": "", "interfaces": "", "fields": [], "file": "titus-common/src/test/java/com/netflix/titus/common/util/unit/TimeUnitExtTest.java"}, "test_case": {"identifier": "testToMillis", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToMillis() {\n        assertThat(TimeUnitExt.toMillis(\"1m\").get()).isEqualTo(60_000);\n    }", "signature": "void testToMillis()", "full_signature": "@Test public void testToMillis()", "class_method_signature": "TimeUnitExtTest.testToMillis()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "get", "toMillis"]}, "focal_class": {"identifier": "TimeUnitExt", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern INTERVAL_WITH_UNIT_RE = Pattern.compile(\"(\\\\d+)(ms|s|m|h|d)\");", "modifier": "private static final", "type": "Pattern", "declarator": "INTERVAL_WITH_UNIT_RE = Pattern.compile(\"(\\\\d+)(ms|s|m|h|d)\")", "var_name": "INTERVAL_WITH_UNIT_RE"}], "methods": [{"identifier": "parse", "parameters": "(String intervalWithUnit)", "modifiers": "public static", "return": "Optional<Pair<Long, TimeUnit>>", "signature": "Optional<Pair<Long, TimeUnit>> parse(String intervalWithUnit)", "full_signature": "public static Optional<Pair<Long, TimeUnit>> parse(String intervalWithUnit)", "class_method_signature": "TimeUnitExt.parse(String intervalWithUnit)", "testcase": false, "constructor": false}, {"identifier": "toMillis", "parameters": "(String intervalWithUnit)", "modifiers": "public static", "return": "Optional<Long>", "signature": "Optional<Long> toMillis(String intervalWithUnit)", "full_signature": "public static Optional<Long> toMillis(String intervalWithUnit)", "class_method_signature": "TimeUnitExt.toMillis(String intervalWithUnit)", "testcase": false, "constructor": false}], "file": "titus-common/src/main/java/com/netflix/titus/common/util/unit/TimeUnitExt.java"}, "focal_method": {"identifier": "toMillis", "parameters": "(String intervalWithUnit)", "modifiers": "public static", "return": "Optional<Long>", "body": "public static Optional<Long> toMillis(String intervalWithUnit) {\n        return parse(intervalWithUnit).map(p -> p.getRight().toMillis(p.getLeft()));\n    }", "signature": "Optional<Long> toMillis(String intervalWithUnit)", "full_signature": "public static Optional<Long> toMillis(String intervalWithUnit)", "class_method_signature": "TimeUnitExt.toMillis(String intervalWithUnit)", "testcase": false, "constructor": false, "invocations": ["map", "parse", "toMillis", "getRight", "getLeft"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}