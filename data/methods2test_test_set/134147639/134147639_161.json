{"test_class": {"identifier": "JsonConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final JsonConverter jsonConverter = new ObjectConverter().getJsonConverter();", "modifier": "private final", "type": "JsonConverter", "declarator": "jsonConverter = new ObjectConverter().getJsonConverter()", "var_name": "jsonConverter"}], "file": "webauthn4j-core/src/test/java/com/webauthn4j/converter/util/JsonConverterTest.java"}, "test_case": {"identifier": "readValue_with_invalid_json_and_TypeReference_test", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void readValue_with_invalid_json_and_TypeReference_test() {\n        TypeReference<ConverterTestDto> typeReference = new TypeReference<ConverterTestDto>() {};\n        assertThrows(DataConversionException.class, () ->\n                jsonConverter.readValue(\"{value:\\\"dummy\\\"}\", typeReference)\n        );\n    }", "signature": "void readValue_with_invalid_json_and_TypeReference_test()", "full_signature": "@Test void readValue_with_invalid_json_and_TypeReference_test()", "class_method_signature": "JsonConverterTest.readValue_with_invalid_json_and_TypeReference_test()", "testcase": true, "constructor": false, "invocations": ["assertThrows", "readValue"]}, "focal_class": {"identifier": "JsonConverter", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final String INPUT_MISMATCH_ERROR_MESSAGE = \"Input data does not match expected form\";", "modifier": "private static final", "type": "String", "declarator": "INPUT_MISMATCH_ERROR_MESSAGE = \"Input data does not match expected form\"", "var_name": "INPUT_MISMATCH_ERROR_MESSAGE"}, {"original_string": "private final ObjectMapper jsonMapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "jsonMapper", "var_name": "jsonMapper"}], "methods": [{"identifier": "JsonConverter", "parameters": "(ObjectMapper jsonMapper)", "modifiers": "", "return": "", "signature": " JsonConverter(ObjectMapper jsonMapper)", "full_signature": "  JsonConverter(ObjectMapper jsonMapper)", "class_method_signature": "JsonConverter.JsonConverter(ObjectMapper jsonMapper)", "testcase": false, "constructor": true}, {"identifier": "readValue", "parameters": "(String src, Class<T> valueType)", "modifiers": "public", "return": "T", "signature": "T readValue(String src, Class<T> valueType)", "full_signature": "public T readValue(String src, Class<T> valueType)", "class_method_signature": "JsonConverter.readValue(String src, Class<T> valueType)", "testcase": false, "constructor": false}, {"identifier": "readValue", "parameters": "(InputStream src, Class<T> valueType)", "modifiers": "public", "return": "T", "signature": "T readValue(InputStream src, Class<T> valueType)", "full_signature": "public T readValue(InputStream src, Class<T> valueType)", "class_method_signature": "JsonConverter.readValue(InputStream src, Class<T> valueType)", "testcase": false, "constructor": false}, {"identifier": "readValue", "parameters": "(String src, TypeReference<T> valueTypeRef)", "modifiers": "public", "return": "T", "signature": "T readValue(String src, TypeReference<T> valueTypeRef)", "full_signature": "public T readValue(String src, TypeReference<T> valueTypeRef)", "class_method_signature": "JsonConverter.readValue(String src, TypeReference<T> valueTypeRef)", "testcase": false, "constructor": false}, {"identifier": "readValue", "parameters": "(InputStream src, TypeReference<T> valueTypeRef)", "modifiers": "public", "return": "T", "signature": "T readValue(InputStream src, TypeReference<T> valueTypeRef)", "full_signature": "public T readValue(InputStream src, TypeReference<T> valueTypeRef)", "class_method_signature": "JsonConverter.readValue(InputStream src, TypeReference<T> valueTypeRef)", "testcase": false, "constructor": false}, {"identifier": "writeValueAsBytes", "parameters": "(Object value)", "modifiers": "public", "return": "byte[]", "signature": "byte[] writeValueAsBytes(Object value)", "full_signature": "public byte[] writeValueAsBytes(Object value)", "class_method_signature": "JsonConverter.writeValueAsBytes(Object value)", "testcase": false, "constructor": false}, {"identifier": "writeValueAsString", "parameters": "(Object value)", "modifiers": "public", "return": "String", "signature": "String writeValueAsString(Object value)", "full_signature": "public String writeValueAsString(Object value)", "class_method_signature": "JsonConverter.writeValueAsString(Object value)", "testcase": false, "constructor": false}], "file": "webauthn4j-core/src/main/java/com/webauthn4j/converter/util/JsonConverter.java"}, "focal_method": {"identifier": "readValue", "parameters": "(String src, Class<T> valueType)", "modifiers": "public", "return": "T", "body": "public <T> T readValue(String src, Class<T> valueType) {\n        try {\n            return jsonMapper.readValue(src, valueType);\n        } catch (MismatchedInputException | JsonParseException e) {\n            throw new DataConversionException(INPUT_MISMATCH_ERROR_MESSAGE, e);\n        } catch (IOException e) {\n            throw new UncheckedIOException(e);\n        }\n    }", "signature": "T readValue(String src, Class<T> valueType)", "full_signature": "public T readValue(String src, Class<T> valueType)", "class_method_signature": "JsonConverter.readValue(String src, Class<T> valueType)", "testcase": false, "constructor": false, "invocations": ["readValue"]}, "repository": {"repo_id": 134147639, "url": "https://github.com/webauthn4j/webauthn4j", "stars": 101, "created": "5/20/2018 12:14:36 PM +00:00", "updates": "2020-01-27T13:01:46+00:00", "fork": "False", "license": "licensed"}}