{"test_class": {"identifier": "XMLResourcesTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "private SimplePathBuilder path;", "modifier": "private", "type": "SimplePathBuilder", "declarator": "path", "var_name": "path"}, {"original_string": "private XMLResources xml;", "modifier": "private", "type": "XMLResources", "declarator": "xml", "var_name": "xml"}, {"original_string": "private byte[] data;", "modifier": "private", "type": "byte[]", "declarator": "data", "var_name": "data"}], "file": "core/inputoutput/src/test/java/org/arakhne/afc/inputoutput/xml/XMLResourcesTest.java"}, "test_case": {"identifier": "getIdentifierByteAray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getIdentifierByteAray() {\n\t\tassertEquals(-1, this.xml.getIdentifier(new byte[0]));\n\t\tassertEquals(-1, this.xml.getIdentifier(new byte[] { 1, 2, 3 }));\n\t\tassertEquals(1, this.xml.getIdentifier(this.data));\n\t}", "signature": "void getIdentifierByteAray()", "full_signature": "@Test public void getIdentifierByteAray()", "class_method_signature": "XMLResourcesTest.getIdentifierByteAray()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getIdentifier", "assertEquals", "getIdentifier", "assertEquals", "getIdentifier"]}, "focal_class": {"identifier": "XMLResources", "superclass": "", "interfaces": "implements Comparator<Object>", "fields": [{"original_string": "public static final String IDENTIFIER_PREFIX = \"#resource\";", "modifier": "public static final", "type": "String", "declarator": "IDENTIFIER_PREFIX = \"#resource\"", "var_name": "IDENTIFIER_PREFIX"}, {"original_string": "private final PathBuilder pathBuilder;", "modifier": "private final", "type": "PathBuilder", "declarator": "pathBuilder", "var_name": "pathBuilder"}, {"original_string": "private final Map<Object, Long> identifiersFromResources = new TreeMap<>(this);", "modifier": "private final", "type": "Map<Object, Long>", "declarator": "identifiersFromResources = new TreeMap<>(this)", "var_name": "identifiersFromResources"}, {"original_string": "private final Map<Long, Entry> resourcesFromIdentifiers = new TreeMap<>();", "modifier": "private final", "type": "Map<Long, Entry>", "declarator": "resourcesFromIdentifiers = new TreeMap<>()", "var_name": "resourcesFromIdentifiers"}, {"original_string": "private long nextFreeId;", "modifier": "private", "type": "long", "declarator": "nextFreeId", "var_name": "nextFreeId"}], "methods": [{"identifier": "XMLResources", "parameters": "(PathBuilder pathBuilder)", "modifiers": "public", "return": "", "signature": " XMLResources(PathBuilder pathBuilder)", "full_signature": "public  XMLResources(PathBuilder pathBuilder)", "class_method_signature": "XMLResources.XMLResources(PathBuilder pathBuilder)", "testcase": false, "constructor": true}, {"identifier": "compare", "parameters": "(Object o1, Object o2)", "modifiers": "@Override @SuppressWarnings({\"checkstyle:cyclomaticcomplexity\", \"checkstyle:npathcomplexity\"}) @Pure public", "return": "int", "signature": "int compare(Object o1, Object o2)", "full_signature": "@Override @SuppressWarnings({\"checkstyle:cyclomaticcomplexity\", \"checkstyle:npathcomplexity\"}) @Pure public int compare(Object o1, Object o2)", "class_method_signature": "XMLResources.compare(Object o1, Object o2)", "testcase": false, "constructor": false}, {"identifier": "compareArrays", "parameters": "(byte[] a1, byte[] a2)", "modifiers": "private static", "return": "int", "signature": "int compareArrays(byte[] a1, byte[] a2)", "full_signature": "private static int compareArrays(byte[] a1, byte[] a2)", "class_method_signature": "XMLResources.compareArrays(byte[] a1, byte[] a2)", "testcase": false, "constructor": false}, {"identifier": "getStringIdentifier", "parameters": "(long identifier)", "modifiers": "@Pure public static", "return": "String", "signature": "String getStringIdentifier(long identifier)", "full_signature": "@Pure public static String getStringIdentifier(long identifier)", "class_method_signature": "XMLResources.getStringIdentifier(long identifier)", "testcase": false, "constructor": false}, {"identifier": "isStringIdentifier", "parameters": "(String str)", "modifiers": "@Pure public static", "return": "boolean", "signature": "boolean isStringIdentifier(String str)", "full_signature": "@Pure public static boolean isStringIdentifier(String str)", "class_method_signature": "XMLResources.isStringIdentifier(String str)", "testcase": false, "constructor": false}, {"identifier": "getNumericalIdentifier", "parameters": "(String identifier)", "modifiers": "@SuppressWarnings(\"checkstyle:magicnumber\") @Pure public static", "return": "long", "signature": "long getNumericalIdentifier(String identifier)", "full_signature": "@SuppressWarnings(\"checkstyle:magicnumber\") @Pure public static long getNumericalIdentifier(String identifier)", "class_method_signature": "XMLResources.getNumericalIdentifier(String identifier)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(long identifier, URL url, String mimeType)", "modifiers": "public synchronized", "return": "String", "signature": "String add(long identifier, URL url, String mimeType)", "full_signature": "public synchronized String add(long identifier, URL url, String mimeType)", "class_method_signature": "XMLResources.add(long identifier, URL url, String mimeType)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(long identifier, File file, String mimeType)", "modifiers": "public synchronized", "return": "String", "signature": "String add(long identifier, File file, String mimeType)", "full_signature": "public synchronized String add(long identifier, File file, String mimeType)", "class_method_signature": "XMLResources.add(long identifier, File file, String mimeType)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(long identifier, byte[] rawData, String mimeType)", "modifiers": "public synchronized", "return": "String", "signature": "String add(long identifier, byte[] rawData, String mimeType)", "full_signature": "public synchronized String add(long identifier, byte[] rawData, String mimeType)", "class_method_signature": "XMLResources.add(long identifier, byte[] rawData, String mimeType)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(URL url)", "modifiers": "@Inline(value = \"add($1, null)\") public final", "return": "String", "signature": "String add(URL url)", "full_signature": "@Inline(value = \"add($1, null)\") public final String add(URL url)", "class_method_signature": "XMLResources.add(URL url)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(URL url, String mimeType)", "modifiers": "@Inline(value = \"add(-1, $1, $2)\") public final", "return": "String", "signature": "String add(URL url, String mimeType)", "full_signature": "@Inline(value = \"add(-1, $1, $2)\") public final String add(URL url, String mimeType)", "class_method_signature": "XMLResources.add(URL url, String mimeType)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(File file)", "modifiers": "@Inline(value = \"add($1, null)\") public final", "return": "String", "signature": "String add(File file)", "full_signature": "@Inline(value = \"add($1, null)\") public final String add(File file)", "class_method_signature": "XMLResources.add(File file)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(File file, String mimeType)", "modifiers": "@Inline(value = \"add(-1, $1, $2)\") public final", "return": "String", "signature": "String add(File file, String mimeType)", "full_signature": "@Inline(value = \"add(-1, $1, $2)\") public final String add(File file, String mimeType)", "class_method_signature": "XMLResources.add(File file, String mimeType)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(byte[] rawData)", "modifiers": "@Inline(value = \"add($1, null)\") public final", "return": "String", "signature": "String add(byte[] rawData)", "full_signature": "@Inline(value = \"add($1, null)\") public final String add(byte[] rawData)", "class_method_signature": "XMLResources.add(byte[] rawData)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(byte[] rawData, String mimeType)", "modifiers": "@Inline(value = \"add(-1, $1, $2)\") public final", "return": "String", "signature": "String add(byte[] rawData, String mimeType)", "full_signature": "@Inline(value = \"add(-1, $1, $2)\") public final String add(byte[] rawData, String mimeType)", "class_method_signature": "XMLResources.add(byte[] rawData, String mimeType)", "testcase": false, "constructor": false}, {"identifier": "computeNextIdentifier", "parameters": "()", "modifiers": "public synchronized", "return": "long", "signature": "long computeNextIdentifier()", "full_signature": "public synchronized long computeNextIdentifier()", "class_method_signature": "XMLResources.computeNextIdentifier()", "testcase": false, "constructor": false}, {"identifier": "getIdentifierFromResource", "parameters": "(Object resource)", "modifiers": "@Pure protected synchronized", "return": "Long", "signature": "Long getIdentifierFromResource(Object resource)", "full_signature": "@Pure protected synchronized Long getIdentifierFromResource(Object resource)", "class_method_signature": "XMLResources.getIdentifierFromResource(Object resource)", "testcase": false, "constructor": false}, {"identifier": "getResourceFromIdentifier", "parameters": "(long id)", "modifiers": "@Pure protected synchronized", "return": "Entry", "signature": "Entry getResourceFromIdentifier(long id)", "full_signature": "@Pure protected synchronized Entry getResourceFromIdentifier(long id)", "class_method_signature": "XMLResources.getResourceFromIdentifier(long id)", "testcase": false, "constructor": false}, {"identifier": "getIdentifier", "parameters": "(URL url)", "modifiers": "@Pure public final", "return": "long", "signature": "long getIdentifier(URL url)", "full_signature": "@Pure public final long getIdentifier(URL url)", "class_method_signature": "XMLResources.getIdentifier(URL url)", "testcase": false, "constructor": false}, {"identifier": "getIdentifier", "parameters": "(File file)", "modifiers": "@Pure public final", "return": "long", "signature": "long getIdentifier(File file)", "full_signature": "@Pure public final long getIdentifier(File file)", "class_method_signature": "XMLResources.getIdentifier(File file)", "testcase": false, "constructor": false}, {"identifier": "getIdentifier", "parameters": "(byte[] rawData)", "modifiers": "@Pure public final", "return": "long", "signature": "long getIdentifier(byte[] rawData)", "full_signature": "@Pure public final long getIdentifier(byte[] rawData)", "class_method_signature": "XMLResources.getIdentifier(byte[] rawData)", "testcase": false, "constructor": false}, {"identifier": "getResourceURL", "parameters": "(long identifier)", "modifiers": "@Pure public final", "return": "URL", "signature": "URL getResourceURL(long identifier)", "full_signature": "@Pure public final URL getResourceURL(long identifier)", "class_method_signature": "XMLResources.getResourceURL(long identifier)", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "(long identifier)", "modifiers": "@Pure @Inline(value = \"getResourceFromIdentifier($1)\") public final", "return": "Entry", "signature": "Entry getResource(long identifier)", "full_signature": "@Pure @Inline(value = \"getResourceFromIdentifier($1)\") public final Entry getResource(long identifier)", "class_method_signature": "XMLResources.getResource(long identifier)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(URL url)", "modifiers": "public synchronized", "return": "void", "signature": "void remove(URL url)", "full_signature": "public synchronized void remove(URL url)", "class_method_signature": "XMLResources.remove(URL url)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(File file)", "modifiers": "public synchronized", "return": "void", "signature": "void remove(File file)", "full_signature": "public synchronized void remove(File file)", "class_method_signature": "XMLResources.remove(File file)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(byte[] rawData)", "modifiers": "public synchronized", "return": "void", "signature": "void remove(byte[] rawData)", "full_signature": "public synchronized void remove(byte[] rawData)", "class_method_signature": "XMLResources.remove(byte[] rawData)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(long identifier)", "modifiers": "public synchronized", "return": "void", "signature": "void remove(long identifier)", "full_signature": "public synchronized void remove(long identifier)", "class_method_signature": "XMLResources.remove(long identifier)", "testcase": false, "constructor": false}, {"identifier": "getPairs", "parameters": "()", "modifiers": "@Pure public", "return": "Map<Long, Entry>", "signature": "Map<Long, Entry> getPairs()", "full_signature": "@Pure public Map<Long, Entry> getPairs()", "class_method_signature": "XMLResources.getPairs()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void clear()", "full_signature": "public synchronized void clear()", "class_method_signature": "XMLResources.clear()", "testcase": false, "constructor": false}], "file": "core/inputoutput/src/main/java/org/arakhne/afc/inputoutput/xml/XMLResources.java"}, "focal_method": {"identifier": "getIdentifier", "parameters": "(URL url)", "modifiers": "@Pure public final", "return": "long", "body": "@Pure\n\tpublic final long getIdentifier(URL url) {\n\t\tfinal Long id = getIdentifierFromResource(url);\n\t\tif (id == null) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn id.longValue();\n\t}", "signature": "long getIdentifier(URL url)", "full_signature": "@Pure public final long getIdentifier(URL url)", "class_method_signature": "XMLResources.getIdentifier(URL url)", "testcase": false, "constructor": false, "invocations": ["getIdentifierFromResource", "longValue"]}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}