{"test_class": {"identifier": "SearchIdTest", "superclass": "", "interfaces": "", "fields": [], "file": "geoclient-service/src/test/java/gov/nyc/doitt/gis/geoclient/service/search/SearchIdTest.java"}, "test_case": {"identifier": "testNext", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNext() {\n        String prefix = \"xyz\";\n        SearchId id = new SearchId(prefix);\n        assertThat(id.next().contains(prefix));\n        assertThat(id.next()).isNotEqualTo(id.next());\n    }", "signature": "void testNext()", "full_signature": "@Test public void testNext()", "class_method_signature": "SearchIdTest.testNext()", "testcase": true, "constructor": false, "invocations": ["assertThat", "contains", "next", "isNotEqualTo", "assertThat", "next", "next"]}, "focal_class": {"identifier": "SearchId", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String prefix;", "modifier": "private final", "type": "String", "declarator": "prefix", "var_name": "prefix"}, {"original_string": "private final AtomicLong sequence;", "modifier": "private final", "type": "AtomicLong", "declarator": "sequence", "var_name": "sequence"}], "methods": [{"identifier": "SearchId", "parameters": "(String prefix)", "modifiers": "public", "return": "", "signature": " SearchId(String prefix)", "full_signature": "public  SearchId(String prefix)", "class_method_signature": "SearchId.SearchId(String prefix)", "testcase": false, "constructor": true}, {"identifier": "next", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String next()", "full_signature": "public String next()", "class_method_signature": "SearchId.next()", "testcase": false, "constructor": false}], "file": "geoclient-service/src/main/java/gov/nyc/doitt/gis/geoclient/service/search/SearchId.java"}, "focal_method": {"identifier": "next", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String next()\n    {\n        return String.format(\"%s-%d-%d\", prefix, sequence.incrementAndGet(), new Date().getTime());\n    }", "signature": "String next()", "full_signature": "public String next()", "class_method_signature": "SearchId.next()", "testcase": false, "constructor": false, "invocations": ["format", "incrementAndGet", "getTime"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}