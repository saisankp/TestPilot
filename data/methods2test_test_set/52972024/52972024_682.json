{"test_class": {"identifier": "MapsSectionProcessingStrategyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IKey fieldNameKey = mock(IKey.class);", "modifier": "private", "type": "IKey", "declarator": "fieldNameKey = mock(IKey.class)", "var_name": "fieldNameKey"}, {"original_string": "private IKey chainStorageKey = mock(IKey.class);", "modifier": "private", "type": "IKey", "declarator": "chainStorageKey = mock(IKey.class)", "var_name": "chainStorageKey"}, {"original_string": "private IKey chainIdKey = mock(IKey.class);", "modifier": "private", "type": "IKey", "declarator": "chainIdKey = mock(IKey.class)", "var_name": "chainIdKey"}, {"original_string": "private IFieldName mapsFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "mapsFieldName", "var_name": "mapsFieldName"}, {"original_string": "private IFieldName idFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "idFieldName", "var_name": "idFieldName"}, {"original_string": "private IChainStorage chainStorageMock;", "modifier": "private", "type": "IChainStorage", "declarator": "chainStorageMock", "var_name": "chainStorageMock"}, {"original_string": "private List<IObject> section;", "modifier": "private", "type": "List<IObject>", "declarator": "section", "var_name": "section"}, {"original_string": "private IObject configMock;", "modifier": "private", "type": "IObject", "declarator": "configMock", "var_name": "configMock"}, {"original_string": "private String map1Name = \"map1\";", "modifier": "private", "type": "String", "declarator": "map1Name = \"map1\"", "var_name": "map1Name"}, {"original_string": "private String map2Name = \"map2\";", "modifier": "private", "type": "String", "declarator": "map2Name = \"map2\"", "var_name": "map2Name"}, {"original_string": "private Object chain1id = mock(Object.class);", "modifier": "private", "type": "Object", "declarator": "chain1id = mock(Object.class)", "var_name": "chain1id"}, {"original_string": "private Object chain2id = mock(Object.class);", "modifier": "private", "type": "Object", "declarator": "chain2id = mock(Object.class)", "var_name": "chain2id"}], "file": "Starters/CoreServiceStarter/CoreStarter/src/test/java/info/smart_tools/smartactors/core_service_starter/core_starter/MapsSectionProcessingStrategyTest.java"}, "test_case": {"identifier": "Should_wrapExceptionThrownByChainStorage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_wrapExceptionThrownByChainStorage()\n            throws Exception {\n        doThrow(ChainCreationException.class).when(chainStorageMock).register(chain2id, section.get(1));\n\n        try {\n            ISectionStrategy strategy = new MapsSectionProcessingStrategy();\n\n            strategy.onLoadConfig(configMock);\n\n            fail();\n        } catch (ConfigurationProcessingException e) {\n            assertSame(ChainCreationException.class, e.getCause().getClass());\n\n            verify(chainStorageMock).register(chain1id, section.get(0));\n        }\n    }", "signature": "void Should_wrapExceptionThrownByChainStorage()", "full_signature": "@Test public void Should_wrapExceptionThrownByChainStorage()", "class_method_signature": "MapsSectionProcessingStrategyTest.Should_wrapExceptionThrownByChainStorage()", "testcase": true, "constructor": false, "invocations": ["register", "when", "doThrow", "get", "onLoadConfig", "fail", "assertSame", "getClass", "getCause", "register", "verify", "get"]}, "focal_class": {"identifier": "MapsSectionProcessingStrategy", "superclass": "", "interfaces": "implements ISectionStrategy", "fields": [{"original_string": "private final IFieldName name;", "modifier": "private final", "type": "IFieldName", "declarator": "name", "var_name": "name"}, {"original_string": "private final IFieldName mapIdFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "mapIdFieldName", "var_name": "mapIdFieldName"}], "methods": [{"identifier": "MapsSectionProcessingStrategy", "parameters": "()", "modifiers": "public", "return": "", "signature": " MapsSectionProcessingStrategy()", "full_signature": "public  MapsSectionProcessingStrategy()", "class_method_signature": "MapsSectionProcessingStrategy.MapsSectionProcessingStrategy()", "testcase": false, "constructor": true}, {"identifier": "onLoadConfig", "parameters": "(final IObject config)", "modifiers": "@Override public", "return": "void", "signature": "void onLoadConfig(final IObject config)", "full_signature": "@Override public void onLoadConfig(final IObject config)", "class_method_signature": "MapsSectionProcessingStrategy.onLoadConfig(final IObject config)", "testcase": false, "constructor": false}, {"identifier": "getSectionName", "parameters": "()", "modifiers": "@Override public", "return": "IFieldName", "signature": "IFieldName getSectionName()", "full_signature": "@Override public IFieldName getSectionName()", "class_method_signature": "MapsSectionProcessingStrategy.getSectionName()", "testcase": false, "constructor": false}], "file": "Starters/CoreServiceStarter/CoreStarter/src/main/java/info/smart_tools/smartactors/core_service_starter/core_starter/MapsSectionProcessingStrategy.java"}, "focal_method": {"identifier": "onLoadConfig", "parameters": "(final IObject config)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onLoadConfig(final IObject config)\n            throws ConfigurationProcessingException {\n        try {\n            List<IObject> section = (List<IObject>) config.getValue(name);\n\n            IChainStorage chainStorage = IOC.resolve(Keys.getOrAdd(IChainStorage.class.getCanonicalName()));\n\n            for (IObject mapDescription : section) {\n                Object mapId = IOC.resolve(Keys.getOrAdd(\"chain_id_from_map_name\"), mapDescription.getValue(mapIdFieldName));\n                try {\n                    chainStorage.register(mapId, mapDescription);\n                } catch (ChainCreationException e) {\n                    throw new ConfigurationProcessingException(\"Could not create chain for map #'\" + String.valueOf(mapId) + \"'.\", e);\n                }\n            }\n        } catch (InvalidArgumentException | ResolutionException | ReadValueException e) {\n            throw new ConfigurationProcessingException(\"Error occurred loading \\\"maps\\\" section of configuration.\", e);\n        }\n    }", "signature": "void onLoadConfig(final IObject config)", "full_signature": "@Override public void onLoadConfig(final IObject config)", "class_method_signature": "MapsSectionProcessingStrategy.onLoadConfig(final IObject config)", "testcase": false, "constructor": false, "invocations": ["getValue", "resolve", "getOrAdd", "getCanonicalName", "resolve", "getOrAdd", "getValue", "register", "valueOf"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}