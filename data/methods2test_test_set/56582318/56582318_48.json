{"test_class": {"identifier": "StyleEditionFrameTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final static Logger LOGGER = Logger\n      .getLogger(StyleEditionFrameTest.class.getName());", "modifier": "public final static", "type": "Logger", "declarator": "LOGGER = Logger\n      .getLogger(StyleEditionFrameTest.class.getName())", "var_name": "LOGGER"}], "file": "geoxygene-appli/src/test/java/fr/ign/cogit/geoxygene/appli/StyleEditionFrameTest.java"}, "test_case": {"identifier": "testBasicStyles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testBasicStyles() {\n\n    LOGGER.info(\"Try to load BasicStyles.xml \");\n    StyledLayerDescriptor sld = null;\n    try {\n      sld = StyledLayerDescriptor.unmarshall(StyledLayerDescriptor.class\n          .getClassLoader().getResourceAsStream(\"sld/BasicStyles.xml\"));\n    } catch (JAXBException e) {\n      // TODO Auto-generated catch block\n      e.printStackTrace();\n    }\n    LOGGER.info(\"BasicStyles.xml loaded\");\n\n    Assert.assertTrue(\"Number of layers different to 5 : \"\n        + sld.getLayers().size(), sld.getLayers().size() == 5);\n    Assert.assertTrue(\"Number of polygon styles different to 1 : \"\n        + sld.getLayer(\"Polygon\").getStyles().size(), sld.getLayer(\"Polygon\")\n        .getStyles().size() == 1);\n    Assert.assertTrue(\"Number of point styles different to 1 : \"\n        + sld.getLayer(\"Point\").getStyles().size(), sld.getLayer(\"Point\")\n        .getStyles().size() == 1);\n    Assert.assertTrue(\"Number of 'Line Dasharray' styles different to 2 : \"\n        + sld.getLayer(\"Line Dasharray\").getStyles().size(),\n        sld.getLayer(\"Line Dasharray\").getStyles().size() == 2);\n\n    Assert.assertTrue(\"Line with contour - Line fill - Red different 255\", sld\n        .getLayer(\"Line with contour\").getStyles().get(1).getSymbolizer()\n        .getStroke().getColor().getRed() == 255);\n    Assert.assertTrue(\"Line with contour - Line fill - Green different 255\",\n        sld.getLayer(\"Line with contour\").getStyles().get(1).getSymbolizer()\n            .getStroke().getColor().getGreen() == 255);\n    Assert.assertTrue(\"Line with contour - Line fill - Blue different 255\", sld\n        .getLayer(\"Line with contour\").getStyles().get(1).getSymbolizer()\n        .getStroke().getColor().getBlue() == 0);\n  }", "signature": "void testBasicStyles()", "full_signature": "@Test public void testBasicStyles()", "class_method_signature": "StyleEditionFrameTest.testBasicStyles()", "testcase": true, "constructor": false, "invocations": ["info", "unmarshall", "getResourceAsStream", "getClassLoader", "printStackTrace", "info", "assertTrue", "size", "getLayers", "size", "getLayers", "assertTrue", "size", "getStyles", "getLayer", "size", "getStyles", "getLayer", "assertTrue", "size", "getStyles", "getLayer", "size", "getStyles", "getLayer", "assertTrue", "size", "getStyles", "getLayer", "size", "getStyles", "getLayer", "assertTrue", "getRed", "getColor", "getStroke", "getSymbolizer", "get", "getStyles", "getLayer", "assertTrue", "getGreen", "getColor", "getStroke", "getSymbolizer", "get", "getStyles", "getLayer", "assertTrue", "getBlue", "getColor", "getStroke", "getSymbolizer", "get", "getStyles", "getLayer"]}, "focal_class": {"identifier": "StyleEditionFrame", "superclass": "extends JDialog", "interfaces": "implements ActionListener,\n    MouseListener, ChangeListener, ItemListener", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private static final String CR = System.getProperty(\"line.separator\");", "modifier": "private static final", "type": "String", "declarator": "CR = System.getProperty(\"line.separator\")", "var_name": "CR"}, {"original_string": "private static final int borderSize = 20;", "modifier": "private static final", "type": "int", "declarator": "borderSize = 20", "var_name": "borderSize"}, {"original_string": "private static final String NO_EXPRESSIVE_TAG = \"No expressive description\";", "modifier": "private static final", "type": "String", "declarator": "NO_EXPRESSIVE_TAG = \"No expressive description\"", "var_name": "NO_EXPRESSIVE_TAG"}, {"original_string": "private static Logger logger = Logger.getLogger(StyleEditionFrame.class\n      .getName());", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger(StyleEditionFrame.class\n      .getName())", "var_name": "logger"}, {"original_string": "private final LayerLegendPanel layerLegendPanel;", "modifier": "private final", "type": "LayerLegendPanel", "declarator": "layerLegendPanel", "var_name": "layerLegendPanel"}, {"original_string": "private final LayerViewPanel layerViewPanel;", "modifier": "private final", "type": "LayerViewPanel", "declarator": "layerViewPanel", "var_name": "layerViewPanel"}, {"original_string": "private Layer layer;", "modifier": "private", "type": "Layer", "declarator": "layer", "var_name": "layer"}, {"original_string": "private StyledLayerDescriptor initialSLD = null;", "modifier": "private", "type": "StyledLayerDescriptor", "declarator": "initialSLD = null", "var_name": "initialSLD"}, {"original_string": "private JPanel visuPanel;", "modifier": "private", "type": "JPanel", "declarator": "visuPanel", "var_name": "visuPanel"}, {"original_string": "private static LayerStylesPanel stylePanel;", "modifier": "private static", "type": "LayerStylesPanel", "declarator": "stylePanel", "var_name": "stylePanel"}, {"original_string": "private JPanel fillPanel;", "modifier": "private", "type": "JPanel", "declarator": "fillPanel", "var_name": "fillPanel"}, {"original_string": "private JPanel strokePanel;", "modifier": "private", "type": "JPanel", "declarator": "strokePanel", "var_name": "strokePanel"}, {"original_string": "private JPanel strokePanel2;", "modifier": "private", "type": "JPanel", "declarator": "strokePanel2", "var_name": "strokePanel2"}, {"original_string": "private JPanel symbolPanel;", "modifier": "private", "type": "JPanel", "declarator": "symbolPanel", "var_name": "symbolPanel"}, {"original_string": "private JPanel toponymPanel;", "modifier": "private", "type": "JPanel", "declarator": "toponymPanel", "var_name": "toponymPanel"}, {"original_string": "private JPanel placementPanel;", "modifier": "private", "type": "JPanel", "declarator": "placementPanel", "var_name": "placementPanel"}, {"original_string": "private JPanel fontPanel;", "modifier": "private", "type": "JPanel", "declarator": "fontPanel", "var_name": "fontPanel"}, {"original_string": "private JButton btnAddStyle;", "modifier": "private", "type": "JButton", "declarator": "btnAddStyle", "var_name": "btnAddStyle"}, {"original_string": "private JButton btnApply;", "modifier": "private", "type": "JButton", "declarator": "btnApply", "var_name": "btnApply"}, {"original_string": "private JButton btnValid;", "modifier": "private", "type": "JButton", "declarator": "btnValid", "var_name": "btnValid"}, {"original_string": "private JButton btnCancel;", "modifier": "private", "type": "JButton", "declarator": "btnCancel", "var_name": "btnCancel"}, {"original_string": "private JTabbedPane tabPane;", "modifier": "private", "type": "JTabbedPane", "declarator": "tabPane", "var_name": "tabPane"}, {"original_string": "private JPanel textStylePanel;", "modifier": "private", "type": "JPanel", "declarator": "textStylePanel", "var_name": "textStylePanel"}, {"original_string": "private JPanel mainStylePanel;", "modifier": "private", "type": "JPanel", "declarator": "mainStylePanel", "var_name": "mainStylePanel"}, {"original_string": "private final JPanel graphicStylePanel;", "modifier": "private final", "type": "JPanel", "declarator": "graphicStylePanel", "var_name": "graphicStylePanel"}, {"original_string": "private JPanel infoPanel;", "modifier": "private", "type": "JPanel", "declarator": "infoPanel", "var_name": "infoPanel"}, {"original_string": "private JTextArea infoTextArea;", "modifier": "private", "type": "JTextArea", "declarator": "infoTextArea", "var_name": "infoTextArea"}, {"original_string": "private Color fillColor;", "modifier": "private", "type": "Color", "declarator": "fillColor", "var_name": "fillColor"}, {"original_string": "private float fillOpacity;", "modifier": "private", "type": "float", "declarator": "fillOpacity", "var_name": "fillOpacity"}, {"original_string": "private Color strokeColor;", "modifier": "private", "type": "Color", "declarator": "strokeColor", "var_name": "strokeColor"}, {"original_string": "private float strokeOpacity;", "modifier": "private", "type": "float", "declarator": "strokeOpacity", "var_name": "strokeOpacity"}, {"original_string": "private double strokeWidth;", "modifier": "private", "type": "double", "declarator": "strokeWidth", "var_name": "strokeWidth"}, {"original_string": "private int strokeLineJoin = BasicStroke.JOIN_ROUND;", "modifier": "private", "type": "int", "declarator": "strokeLineJoin = BasicStroke.JOIN_ROUND", "var_name": "strokeLineJoin"}, {"original_string": "private int strokeLineCap = BasicStroke.CAP_ROUND;", "modifier": "private", "type": "int", "declarator": "strokeLineCap = BasicStroke.CAP_ROUND", "var_name": "strokeLineCap"}, {"original_string": "private final String[] strokeLineJoinNames = { \"Miter\", //$NON-NLS-1$\n      \"Round\", //$NON-NLS-1$\n      \"Bevel\" //$NON-NLS-1$\n  };", "modifier": "private final", "type": "String[]", "declarator": "strokeLineJoinNames = { \"Miter\", //$NON-NLS-1$\n      \"Round\", //$NON-NLS-1$\n      \"Bevel\" //$NON-NLS-1$\n  }", "var_name": "strokeLineJoinNames"}, {"original_string": "private final String[] strokeLineCapNames = { \"Butt\", //$NON-NLS-1$\n      \"Round\", //$NON-NLS-1$\n      \"Square\" //$NON-NLS-1$\n  };", "modifier": "private final", "type": "String[]", "declarator": "strokeLineCapNames = { \"Butt\", //$NON-NLS-1$\n      \"Round\", //$NON-NLS-1$\n      \"Square\" //$NON-NLS-1$\n  }", "var_name": "strokeLineCapNames"}, {"original_string": "private String unit;", "modifier": "private", "type": "String", "declarator": "unit", "var_name": "unit"}, {"original_string": "private Color strokeColor2;", "modifier": "private", "type": "Color", "declarator": "strokeColor2", "var_name": "strokeColor2"}, {"original_string": "private float strokeOpacity2;", "modifier": "private", "type": "float", "declarator": "strokeOpacity2", "var_name": "strokeOpacity2"}, {"original_string": "private double strokeWidth2;", "modifier": "private", "type": "double", "declarator": "strokeWidth2", "var_name": "strokeWidth2"}, {"original_string": "private String symbolShape;", "modifier": "private", "type": "String", "declarator": "symbolShape", "var_name": "symbolShape"}, {"original_string": "private float symbolSize;", "modifier": "private", "type": "float", "declarator": "symbolSize", "var_name": "symbolSize"}, {"original_string": "private TextSymbolizer symbolizer;", "modifier": "private", "type": "TextSymbolizer", "declarator": "symbolizer", "var_name": "symbolizer"}, {"original_string": "private FeatureTypeStyle featureTypeStyle;", "modifier": "private", "type": "FeatureTypeStyle", "declarator": "featureTypeStyle", "var_name": "featureTypeStyle"}, {"original_string": "private List<LinePanel> ListLine = null;", "modifier": "private", "type": "List<LinePanel>", "declarator": "ListLine = null", "var_name": "ListLine"}, {"original_string": "private List<PolygonePanel> ListPolygone = null;", "modifier": "private", "type": "List<PolygonePanel>", "declarator": "ListPolygone = null", "var_name": "ListPolygone"}, {"original_string": "private List<PointPanel> ListPoint = null;", "modifier": "private", "type": "List<PointPanel>", "declarator": "ListPoint = null", "var_name": "ListPoint"}, {"original_string": "private HashMap<Integer, JDialog> listStrokeDialog = new HashMap<Integer, JDialog>(\n      10);", "modifier": "private", "type": "HashMap<Integer, JDialog>", "declarator": "listStrokeDialog = new HashMap<Integer, JDialog>(\n      10)", "var_name": "listStrokeDialog"}, {"original_string": "private MyListStroke maList;", "modifier": "private", "type": "MyListStroke", "declarator": "maList", "var_name": "maList"}, {"original_string": "private JPanel panelTrait;", "modifier": "private", "type": "JPanel", "declarator": "panelTrait", "var_name": "panelTrait"}, {"original_string": "private final int MAX_STROKE = 15;", "modifier": "private final", "type": "int", "declarator": "MAX_STROKE = 15", "var_name": "MAX_STROKE"}, {"original_string": "private JColorChooser fillColorChooser;", "modifier": "private", "type": "JColorChooser", "declarator": "fillColorChooser", "var_name": "fillColorChooser"}, {"original_string": "private JDialog fillDialog;", "modifier": "private", "type": "JDialog", "declarator": "fillDialog", "var_name": "fillDialog"}, {"original_string": "private JLabel fillColorLabel;", "modifier": "private", "type": "JLabel", "declarator": "fillColorLabel", "var_name": "fillColorLabel"}, {"original_string": "private JLabel fillFinalColorLabel;", "modifier": "private", "type": "JLabel", "declarator": "fillFinalColorLabel", "var_name": "fillFinalColorLabel"}, {"original_string": "private JSlider fillOpacitySlider;", "modifier": "private", "type": "JSlider", "declarator": "fillOpacitySlider", "var_name": "fillOpacitySlider"}, {"original_string": "private JColorChooser strokeColorChooser;", "modifier": "private", "type": "JColorChooser", "declarator": "strokeColorChooser", "var_name": "strokeColorChooser"}, {"original_string": "private JDialog strokeDialog;", "modifier": "private", "type": "JDialog", "declarator": "strokeDialog", "var_name": "strokeDialog"}, {"original_string": "private JLabel strokeColorLabel;", "modifier": "private", "type": "JLabel", "declarator": "strokeColorLabel", "var_name": "strokeColorLabel"}, {"original_string": "private JLabel strokeFinalColorLabel;", "modifier": "private", "type": "JLabel", "declarator": "strokeFinalColorLabel", "var_name": "strokeFinalColorLabel"}, {"original_string": "private JSlider strokeOpacitySlider;", "modifier": "private", "type": "JSlider", "declarator": "strokeOpacitySlider", "var_name": "strokeOpacitySlider"}, {"original_string": "private JSpinner strokeWidthSpinner;", "modifier": "private", "type": "JSpinner", "declarator": "strokeWidthSpinner", "var_name": "strokeWidthSpinner"}, {"original_string": "private JRadioButton unitMeterRadio;", "modifier": "private", "type": "JRadioButton", "declarator": "unitMeterRadio", "var_name": "unitMeterRadio"}, {"original_string": "private JRadioButton unitPixelRadio;", "modifier": "private", "type": "JRadioButton", "declarator": "unitPixelRadio", "var_name": "unitPixelRadio"}, {"original_string": "private JComboBox strokeLineJoinCombo;", "modifier": "private", "type": "JComboBox", "declarator": "strokeLineJoinCombo", "var_name": "strokeLineJoinCombo"}, {"original_string": "private JComboBox strokeLineCapCombo;", "modifier": "private", "type": "JComboBox", "declarator": "strokeLineCapCombo", "var_name": "strokeLineCapCombo"}, {"original_string": "private StrokeSamplePanel strokeSamplePanel;", "modifier": "private", "type": "StrokeSamplePanel", "declarator": "strokeSamplePanel", "var_name": "strokeSamplePanel"}, {"original_string": "private JColorChooser strokeColorChooser2;", "modifier": "private", "type": "JColorChooser", "declarator": "strokeColorChooser2", "var_name": "strokeColorChooser2"}, {"original_string": "private JDialog strokeDialog2;", "modifier": "private", "type": "JDialog", "declarator": "strokeDialog2", "var_name": "strokeDialog2"}, {"original_string": "private JLabel strokeColorLabel2;", "modifier": "private", "type": "JLabel", "declarator": "strokeColorLabel2", "var_name": "strokeColorLabel2"}, {"original_string": "private JLabel strokeFinalColorLabel2;", "modifier": "private", "type": "JLabel", "declarator": "strokeFinalColorLabel2", "var_name": "strokeFinalColorLabel2"}, {"original_string": "private JSlider strokeOpacitySlider2;", "modifier": "private", "type": "JSlider", "declarator": "strokeOpacitySlider2", "var_name": "strokeOpacitySlider2"}, {"original_string": "private JSpinner strokeWidthSpinner2;", "modifier": "private", "type": "JSpinner", "declarator": "strokeWidthSpinner2", "var_name": "strokeWidthSpinner2"}, {"original_string": "private JComboBox symbolShapeCombo;", "modifier": "private", "type": "JComboBox", "declarator": "symbolShapeCombo", "var_name": "symbolShapeCombo"}, {"original_string": "private JSpinner symbolSizeSpinner;", "modifier": "private", "type": "JSpinner", "declarator": "symbolSizeSpinner", "var_name": "symbolSizeSpinner"}, {"original_string": "private ImageIcon[] images;", "modifier": "private", "type": "ImageIcon[]", "declarator": "images", "var_name": "images"}, {"original_string": "private final String[] symbolsDescription = {\n      I18N.getString(\"StyleEditionFrame.Square\"), //$NON-NLS-1$\n      I18N.getString(\"StyleEditionFrame.Circle\"), //$NON-NLS-1$\n      I18N.getString(\"StyleEditionFrame.Triangle\"), //$NON-NLS-1$\n      I18N.getString(\"StyleEditionFrame.Star\"), //$NON-NLS-1$\n      I18N.getString(\"StyleEditionFrame.Cross\"), //$NON-NLS-1$\n      I18N.getString(\"StyleEditionFrame.X\"), //$NON-NLS-1$\n      I18N.getString(\"StyleEditionFrame.hline\"), //$NON-NLS-1$\n      I18N.getString(\"StyleEditionFrame.vline\") //$NON-NLS-1$\n  };", "modifier": "private final", "type": "String[]", "declarator": "symbolsDescription = {\n      I18N.getString(\"StyleEditionFrame.Square\"), //$NON-NLS-1$\n      I18N.getString(\"StyleEditionFrame.Circle\"), //$NON-NLS-1$\n      I18N.getString(\"StyleEditionFrame.Triangle\"), //$NON-NLS-1$\n      I18N.getString(\"StyleEditionFrame.Star\"), //$NON-NLS-1$\n      I18N.getString(\"StyleEditionFrame.Cross\"), //$NON-NLS-1$\n      I18N.getString(\"StyleEditionFrame.X\"), //$NON-NLS-1$\n      I18N.getString(\"StyleEditionFrame.hline\"), //$NON-NLS-1$\n      I18N.getString(\"StyleEditionFrame.vline\") //$NON-NLS-1$\n  }", "var_name": "symbolsDescription"}, {"original_string": "private final String[] symbols = { \"square\", //$NON-NLS-1$\n      \"circle\", //$NON-NLS-1$\n      \"triangle\", //$NON-NLS-1$\n      \"star\", //$NON-NLS-1$\n      \"cross\", //$NON-NLS-1$\n      \"x\", //$NON-NLS-1$\n      \"hline\", //$NON-NLS-1$\n      \"vline\" //$NON-NLS-1$\n  };", "modifier": "private final", "type": "String[]", "declarator": "symbols = { \"square\", //$NON-NLS-1$\n      \"circle\", //$NON-NLS-1$\n      \"triangle\", //$NON-NLS-1$\n      \"star\", //$NON-NLS-1$\n      \"cross\", //$NON-NLS-1$\n      \"x\", //$NON-NLS-1$\n      \"hline\", //$NON-NLS-1$\n      \"vline\" //$NON-NLS-1$\n  }", "var_name": "symbols"}, {"original_string": "private JButton addColorMapButton;", "modifier": "private", "type": "JButton", "declarator": "addColorMapButton", "var_name": "addColorMapButton"}, {"original_string": "private JButton addCategorizedMapButton;", "modifier": "private", "type": "JButton", "declarator": "addCategorizedMapButton", "var_name": "addCategorizedMapButton"}, {"original_string": "private JCheckBox toponymBtn;", "modifier": "private", "type": "JCheckBox", "declarator": "toponymBtn", "var_name": "toponymBtn"}, {"original_string": "private JComboBox fields;", "modifier": "private", "type": "JComboBox", "declarator": "fields", "var_name": "fields"}, {"original_string": "private JLabel textPreviewLabel;", "modifier": "private", "type": "JLabel", "declarator": "textPreviewLabel", "var_name": "textPreviewLabel"}, {"original_string": "private JComboBox placements;", "modifier": "private", "type": "JComboBox", "declarator": "placements", "var_name": "placements"}, {"original_string": "private JCheckBox repeatBtn;", "modifier": "private", "type": "JCheckBox", "declarator": "repeatBtn", "var_name": "repeatBtn"}, {"original_string": "private JComboBox expressiveStrokeComboBox;", "modifier": "private", "type": "JComboBox", "declarator": "expressiveStrokeComboBox", "var_name": "expressiveStrokeComboBox"}, {"original_string": "private JComboBox expressiveFillComboBox;", "modifier": "private", "type": "JComboBox", "declarator": "expressiveFillComboBox", "var_name": "expressiveFillComboBox"}, {"original_string": "private final JScrollPane fillExpressiveScrollPane = new JScrollPane();", "modifier": "private final", "type": "JScrollPane", "declarator": "fillExpressiveScrollPane = new JScrollPane()", "var_name": "fillExpressiveScrollPane"}, {"original_string": "private final JScrollPane strokeExpressiveScrollPane = new JScrollPane();", "modifier": "private final", "type": "JScrollPane", "declarator": "strokeExpressiveScrollPane = new JScrollPane()", "var_name": "strokeExpressiveScrollPane"}, {"original_string": "private final JScrollPane styleInterpolationScrollPane = new JScrollPane();", "modifier": "private final", "type": "JScrollPane", "declarator": "styleInterpolationScrollPane = new JScrollPane()", "var_name": "styleInterpolationScrollPane"}, {"original_string": "private JPanel buttonPanel;", "modifier": "private", "type": "JPanel", "declarator": "buttonPanel", "var_name": "buttonPanel"}, {"original_string": "private JScrollPane sp;", "modifier": "private", "type": "JScrollPane", "declarator": "sp", "var_name": "sp"}, {"original_string": "private JPanel strokePanel3;", "modifier": "private", "type": "JPanel", "declarator": "strokePanel3", "var_name": "strokePanel3"}, {"original_string": "private Color strokeColor3;", "modifier": "private", "type": "Color", "declarator": "strokeColor3", "var_name": "strokeColor3"}, {"original_string": "private float strokeOpacity3;", "modifier": "private", "type": "float", "declarator": "strokeOpacity3", "var_name": "strokeOpacity3"}, {"original_string": "private float strokeWidth3;", "modifier": "private", "type": "float", "declarator": "strokeWidth3", "var_name": "strokeWidth3"}, {"original_string": "private JPanel fillPanel2;", "modifier": "private", "type": "JPanel", "declarator": "fillPanel2", "var_name": "fillPanel2"}, {"original_string": "private Color fillColor2;", "modifier": "private", "type": "Color", "declarator": "fillColor2", "var_name": "fillColor2"}, {"original_string": "private float fillOpacity2;", "modifier": "private", "type": "float", "declarator": "fillOpacity2", "var_name": "fillOpacity2"}, {"original_string": "private JButton addColorMapButton2;", "modifier": "private", "type": "JButton", "declarator": "addColorMapButton2", "var_name": "addColorMapButton2"}, {"original_string": "private JButton addCategorizedMapButton2;", "modifier": "private", "type": "JButton", "declarator": "addCategorizedMapButton2", "var_name": "addCategorizedMapButton2"}, {"original_string": "PointPlacement pointPlacement;", "modifier": "", "type": "PointPlacement", "declarator": "pointPlacement", "var_name": "pointPlacement"}, {"original_string": "LinePlacement linePlacement;", "modifier": "", "type": "LinePlacement", "declarator": "linePlacement", "var_name": "linePlacement"}], "methods": [{"identifier": "getLayer", "parameters": "()", "modifiers": "public", "return": "Layer", "signature": "Layer getLayer()", "full_signature": "public Layer getLayer()", "class_method_signature": "StyleEditionFrame.getLayer()", "testcase": false, "constructor": false}, {"identifier": "getInitialSLD", "parameters": "()", "modifiers": "public", "return": "StyledLayerDescriptor", "signature": "StyledLayerDescriptor getInitialSLD()", "full_signature": "public StyledLayerDescriptor getInitialSLD()", "class_method_signature": "StyleEditionFrame.getInitialSLD()", "testcase": false, "constructor": false}, {"identifier": "copyInitialSLD", "parameters": "(StyledLayerDescriptor sldToCopy)", "modifiers": "public", "return": "void", "signature": "void copyInitialSLD(StyledLayerDescriptor sldToCopy)", "full_signature": "public void copyInitialSLD(StyledLayerDescriptor sldToCopy)", "class_method_signature": "StyleEditionFrame.copyInitialSLD(StyledLayerDescriptor sldToCopy)", "testcase": false, "constructor": false}, {"identifier": "StyleEditionFrame", "parameters": "(LayerLegendPanel layerLegendPanel)", "modifiers": "public", "return": "", "signature": " StyleEditionFrame(LayerLegendPanel layerLegendPanel)", "full_signature": "public  StyleEditionFrame(LayerLegendPanel layerLegendPanel)", "class_method_signature": "StyleEditionFrame.StyleEditionFrame(LayerLegendPanel layerLegendPanel)", "testcase": false, "constructor": true}, {"identifier": "initializeGui", "parameters": "(boolean forceEdition)", "modifiers": "private", "return": "void", "signature": "void initializeGui(boolean forceEdition)", "full_signature": "private void initializeGui(boolean forceEdition)", "class_method_signature": "StyleEditionFrame.initializeGui(boolean forceEdition)", "testcase": false, "constructor": false}, {"identifier": "updateInfoPanel", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void updateInfoPanel()", "full_signature": "protected void updateInfoPanel()", "class_method_signature": "StyleEditionFrame.updateInfoPanel()", "testcase": false, "constructor": false}, {"identifier": "addOrReplaceStyleInterpolationUI", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void addOrReplaceStyleInterpolationUI()", "full_signature": "private void addOrReplaceStyleInterpolationUI()", "class_method_signature": "StyleEditionFrame.addOrReplaceStyleInterpolationUI()", "testcase": false, "constructor": false}, {"identifier": "initTextStylePanel", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void initTextStylePanel()", "full_signature": "public void initTextStylePanel()", "class_method_signature": "StyleEditionFrame.initTextStylePanel()", "testcase": false, "constructor": false}, {"identifier": "createToponymPanel", "parameters": "()", "modifiers": "public", "return": "JPanel", "signature": "JPanel createToponymPanel()", "full_signature": "public JPanel createToponymPanel()", "class_method_signature": "StyleEditionFrame.createToponymPanel()", "testcase": false, "constructor": false}, {"identifier": "enableToponyms", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void enableToponyms()", "full_signature": "protected void enableToponyms()", "class_method_signature": "StyleEditionFrame.enableToponyms()", "testcase": false, "constructor": false}, {"identifier": "createTextSymbolizer", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createTextSymbolizer()", "full_signature": "private void createTextSymbolizer()", "class_method_signature": "StyleEditionFrame.createTextSymbolizer()", "testcase": false, "constructor": false}, {"identifier": "disableToponyms", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void disableToponyms()", "full_signature": "protected void disableToponyms()", "class_method_signature": "StyleEditionFrame.disableToponyms()", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void update()", "full_signature": "public void update()", "class_method_signature": "StyleEditionFrame.update()", "testcase": false, "constructor": false}, {"identifier": "createPlacementPanel", "parameters": "()", "modifiers": "public", "return": "JPanel", "signature": "JPanel createPlacementPanel()", "full_signature": "public JPanel createPlacementPanel()", "class_method_signature": "StyleEditionFrame.createPlacementPanel()", "testcase": false, "constructor": false}, {"identifier": "createFontPanel", "parameters": "()", "modifiers": "public", "return": "JPanel", "signature": "JPanel createFontPanel()", "full_signature": "public JPanel createFontPanel()", "class_method_signature": "StyleEditionFrame.createFontPanel()", "testcase": false, "constructor": false}, {"identifier": "initPolygon", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void initPolygon()", "full_signature": "public void initPolygon()", "class_method_signature": "StyleEditionFrame.initPolygon()", "testcase": false, "constructor": false}, {"identifier": "showStroke", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void showStroke()", "full_signature": "protected void showStroke()", "class_method_signature": "StyleEditionFrame.showStroke()", "testcase": false, "constructor": false}, {"identifier": "showSymbol", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void showSymbol()", "full_signature": "protected void showSymbol()", "class_method_signature": "StyleEditionFrame.showSymbol()", "testcase": false, "constructor": false}, {"identifier": "showFill", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void showFill()", "full_signature": "protected void showFill()", "class_method_signature": "StyleEditionFrame.showFill()", "testcase": false, "constructor": false}, {"identifier": "updateInterpolationPanel", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updateInterpolationPanel()", "full_signature": "private void updateInterpolationPanel()", "class_method_signature": "StyleEditionFrame.updateInterpolationPanel()", "testcase": false, "constructor": false}, {"identifier": "initLine", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void initLine()", "full_signature": "public void initLine()", "class_method_signature": "StyleEditionFrame.initLine()", "testcase": false, "constructor": false}, {"identifier": "getLayerLegendPanel", "parameters": "()", "modifiers": "public", "return": "LayerLegendPanel", "signature": "LayerLegendPanel getLayerLegendPanel()", "full_signature": "public LayerLegendPanel getLayerLegendPanel()", "class_method_signature": "StyleEditionFrame.getLayerLegendPanel()", "testcase": false, "constructor": false}, {"identifier": "getLayerViewPanel", "parameters": "()", "modifiers": "public", "return": "LayerViewPanel", "signature": "LayerViewPanel getLayerViewPanel()", "full_signature": "public LayerViewPanel getLayerViewPanel()", "class_method_signature": "StyleEditionFrame.getLayerViewPanel()", "testcase": false, "constructor": false}, {"identifier": "getStylePanel", "parameters": "()", "modifiers": "public static", "return": "LayerStylesPanel", "signature": "LayerStylesPanel getStylePanel()", "full_signature": "public static LayerStylesPanel getStylePanel()", "class_method_signature": "StyleEditionFrame.getStylePanel()", "testcase": false, "constructor": false}, {"identifier": "setStylePanel", "parameters": "(LayerStylesPanel stylePanel)", "modifiers": "public static", "return": "void", "signature": "void setStylePanel(LayerStylesPanel stylePanel)", "full_signature": "public static void setStylePanel(LayerStylesPanel stylePanel)", "class_method_signature": "StyleEditionFrame.setStylePanel(LayerStylesPanel stylePanel)", "testcase": false, "constructor": false}, {"identifier": "getStrokeFinalColorLabel", "parameters": "()", "modifiers": "public", "return": "JLabel", "signature": "JLabel getStrokeFinalColorLabel()", "full_signature": "public JLabel getStrokeFinalColorLabel()", "class_method_signature": "StyleEditionFrame.getStrokeFinalColorLabel()", "testcase": false, "constructor": false}, {"identifier": "setStrokeFinalColorLabel", "parameters": "(JLabel strokeFinalColorLabel)", "modifiers": "public", "return": "void", "signature": "void setStrokeFinalColorLabel(JLabel strokeFinalColorLabel)", "full_signature": "public void setStrokeFinalColorLabel(JLabel strokeFinalColorLabel)", "class_method_signature": "StyleEditionFrame.setStrokeFinalColorLabel(JLabel strokeFinalColorLabel)", "testcase": false, "constructor": false}, {"identifier": "permuterPoint", "parameters": "(String string)", "modifiers": "protected", "return": "void", "signature": "void permuterPoint(String string)", "full_signature": "protected void permuterPoint(String string)", "class_method_signature": "StyleEditionFrame.permuterPoint(String string)", "testcase": false, "constructor": false}, {"identifier": "permuterLine", "parameters": "(String string)", "modifiers": "protected", "return": "void", "signature": "void permuterLine(String string)", "full_signature": "protected void permuterLine(String string)", "class_method_signature": "StyleEditionFrame.permuterLine(String string)", "testcase": false, "constructor": false}, {"identifier": "permuterFill", "parameters": "(String string)", "modifiers": "protected", "return": "void", "signature": "void permuterFill(String string)", "full_signature": "protected void permuterFill(String string)", "class_method_signature": "StyleEditionFrame.permuterFill(String string)", "testcase": false, "constructor": false}, {"identifier": "listvalueChanged", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void listvalueChanged()", "full_signature": "private void listvalueChanged()", "class_method_signature": "StyleEditionFrame.listvalueChanged()", "testcase": false, "constructor": false}, {"identifier": "addElmMyList", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void addElmMyList()", "full_signature": "protected void addElmMyList()", "class_method_signature": "StyleEditionFrame.addElmMyList()", "testcase": false, "constructor": false}, {"identifier": "initPoint", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void initPoint()", "full_signature": "public void initPoint()", "class_method_signature": "StyleEditionFrame.initPoint()", "testcase": false, "constructor": false}, {"identifier": "removeUserStyle", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void removeUserStyle()", "full_signature": "protected void removeUserStyle()", "class_method_signature": "StyleEditionFrame.removeUserStyle()", "testcase": false, "constructor": false}, {"identifier": "createVisuPanel", "parameters": "()", "modifiers": "public", "return": "JPanel", "signature": "JPanel createVisuPanel()", "full_signature": "public JPanel createVisuPanel()", "class_method_signature": "StyleEditionFrame.createVisuPanel()", "testcase": false, "constructor": false}, {"identifier": "createButtonValid", "parameters": "()", "modifiers": "public", "return": "JButton", "signature": "JButton createButtonValid()", "full_signature": "public JButton createButtonValid()", "class_method_signature": "StyleEditionFrame.createButtonValid()", "testcase": false, "constructor": false}, {"identifier": "createButtonApply", "parameters": "()", "modifiers": "public", "return": "JButton", "signature": "JButton createButtonApply()", "full_signature": "public JButton createButtonApply()", "class_method_signature": "StyleEditionFrame.createButtonApply()", "testcase": false, "constructor": false}, {"identifier": "createButtonCancel", "parameters": "()", "modifiers": "public", "return": "JButton", "signature": "JButton createButtonCancel()", "full_signature": "public JButton createButtonCancel()", "class_method_signature": "StyleEditionFrame.createButtonCancel()", "testcase": false, "constructor": false}, {"identifier": "actionPerformed", "parameters": "(ActionEvent e)", "modifiers": "@Override public", "return": "void", "signature": "void actionPerformed(ActionEvent e)", "full_signature": "@Override public void actionPerformed(ActionEvent e)", "class_method_signature": "StyleEditionFrame.actionPerformed(ActionEvent e)", "testcase": false, "constructor": false}, {"identifier": "mouseClicked", "parameters": "(MouseEvent arg0)", "modifiers": "@Override public", "return": "void", "signature": "void mouseClicked(MouseEvent arg0)", "full_signature": "@Override public void mouseClicked(MouseEvent arg0)", "class_method_signature": "StyleEditionFrame.mouseClicked(MouseEvent arg0)", "testcase": false, "constructor": false}, {"identifier": "mouseEntered", "parameters": "(MouseEvent arg0)", "modifiers": "@Override public", "return": "void", "signature": "void mouseEntered(MouseEvent arg0)", "full_signature": "@Override public void mouseEntered(MouseEvent arg0)", "class_method_signature": "StyleEditionFrame.mouseEntered(MouseEvent arg0)", "testcase": false, "constructor": false}, {"identifier": "mouseExited", "parameters": "(MouseEvent arg0)", "modifiers": "@Override public", "return": "void", "signature": "void mouseExited(MouseEvent arg0)", "full_signature": "@Override public void mouseExited(MouseEvent arg0)", "class_method_signature": "StyleEditionFrame.mouseExited(MouseEvent arg0)", "testcase": false, "constructor": false}, {"identifier": "mousePressed", "parameters": "(MouseEvent arg0)", "modifiers": "@Override public", "return": "void", "signature": "void mousePressed(MouseEvent arg0)", "full_signature": "@Override public void mousePressed(MouseEvent arg0)", "class_method_signature": "StyleEditionFrame.mousePressed(MouseEvent arg0)", "testcase": false, "constructor": false}, {"identifier": "mouseReleased", "parameters": "(MouseEvent arg0)", "modifiers": "@Override public", "return": "void", "signature": "void mouseReleased(MouseEvent arg0)", "full_signature": "@Override public void mouseReleased(MouseEvent arg0)", "class_method_signature": "StyleEditionFrame.mouseReleased(MouseEvent arg0)", "testcase": false, "constructor": false}, {"identifier": "stateChanged", "parameters": "(ChangeEvent arg0)", "modifiers": "@Override public", "return": "void", "signature": "void stateChanged(ChangeEvent arg0)", "full_signature": "@Override public void stateChanged(ChangeEvent arg0)", "class_method_signature": "StyleEditionFrame.stateChanged(ChangeEvent arg0)", "testcase": false, "constructor": false}, {"identifier": "updateLayer", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void updateLayer()", "full_signature": "public void updateLayer()", "class_method_signature": "StyleEditionFrame.updateLayer()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reset()", "full_signature": "public void reset()", "class_method_signature": "StyleEditionFrame.reset()", "testcase": false, "constructor": false}, {"identifier": "getDialogElements", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void getDialogElements()", "full_signature": "public void getDialogElements()", "class_method_signature": "StyleEditionFrame.getDialogElements()", "testcase": false, "constructor": false}, {"identifier": "itemStateChanged", "parameters": "(ItemEvent e)", "modifiers": "@Override public", "return": "void", "signature": "void itemStateChanged(ItemEvent e)", "full_signature": "@Override public void itemStateChanged(ItemEvent e)", "class_method_signature": "StyleEditionFrame.itemStateChanged(ItemEvent e)", "testcase": false, "constructor": false}, {"identifier": "showPlacementParameters", "parameters": "(int selectedIndex)", "modifiers": "private", "return": "void", "signature": "void showPlacementParameters(int selectedIndex)", "full_signature": "private void showPlacementParameters(int selectedIndex)", "class_method_signature": "StyleEditionFrame.showPlacementParameters(int selectedIndex)", "testcase": false, "constructor": false}, {"identifier": "getStrokeExpressiveScrollPane", "parameters": "()", "modifiers": "public", "return": "JScrollPane", "signature": "JScrollPane getStrokeExpressiveScrollPane()", "full_signature": "public JScrollPane getStrokeExpressiveScrollPane()", "class_method_signature": "StyleEditionFrame.getStrokeExpressiveScrollPane()", "testcase": false, "constructor": false}, {"identifier": "getTabPane", "parameters": "()", "modifiers": "public", "return": "JTabbedPane", "signature": "JTabbedPane getTabPane()", "full_signature": "public JTabbedPane getTabPane()", "class_method_signature": "StyleEditionFrame.getTabPane()", "testcase": false, "constructor": false}, {"identifier": "getFillExpressiveScrollPane", "parameters": "()", "modifiers": "public", "return": "JScrollPane", "signature": "JScrollPane getFillExpressiveScrollPane()", "full_signature": "public JScrollPane getFillExpressiveScrollPane()", "class_method_signature": "StyleEditionFrame.getFillExpressiveScrollPane()", "testcase": false, "constructor": false}], "file": "geoxygene-appli/src/main/java/fr/ign/cogit/geoxygene/appli/StyleEditionFrame.java"}, "focal_method": {"identifier": "getLayer", "parameters": "()", "modifiers": "public", "return": "Layer", "body": "public Layer getLayer() {\n    return this.layer;\n  }", "signature": "Layer getLayer()", "full_signature": "public Layer getLayer()", "class_method_signature": "StyleEditionFrame.getLayer()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 56582318, "url": "https://github.com/IGNF/geoxygene", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 22, "size": 323511, "license": "licensed"}}