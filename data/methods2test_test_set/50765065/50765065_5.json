{"test_class": {"identifier": "TodoListViewModelImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TodoListViewModelImpl mViewModel;", "modifier": "private", "type": "TodoListViewModelImpl", "declarator": "mViewModel", "var_name": "mViewModel"}, {"original_string": "private List<TodoItemViewModel> mItemViewModelList;", "modifier": "private", "type": "List<TodoItemViewModel>", "declarator": "mItemViewModelList", "var_name": "mItemViewModelList"}, {"original_string": "@Mock\n    private TodoRepository mRepository;", "modifier": "@Mock\n    private", "type": "TodoRepository", "declarator": "mRepository", "var_name": "mRepository"}], "file": "app/src/test/java/apidez/com/doit/viewmodel/TodoListViewModelImplTest.java"}, "test_case": {"identifier": "testInsert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInsert() throws Exception {\n        mViewModel.insert(DataUtils.provideTodo());\n        assertEquals(View.GONE, mViewModel.getAlertVisibility().get());\n    }", "signature": "void testInsert()", "full_signature": "@Test public void testInsert()", "class_method_signature": "TodoListViewModelImplTest.testInsert()", "testcase": true, "constructor": false, "invocations": ["insert", "provideTodo", "assertEquals", "get", "getAlertVisibility"]}, "focal_class": {"identifier": "TodoListViewModelImpl", "superclass": "extends BaseViewModel", "interfaces": "implements TodoListViewModel", "fields": [{"original_string": "private Context mContext;", "modifier": "private", "type": "Context", "declarator": "mContext", "var_name": "mContext"}, {"original_string": "private TodoRepository mRepository;", "modifier": "private", "type": "TodoRepository", "declarator": "mRepository", "var_name": "mRepository"}, {"original_string": "private ObservableList<TodoItemViewModel> mTodoItems = new ObservableArrayList<>();", "modifier": "private", "type": "ObservableList<TodoItemViewModel>", "declarator": "mTodoItems = new ObservableArrayList<>()", "var_name": "mTodoItems"}, {"original_string": "private ObservableInt mAlertVisibility = new ObservableInt(View.GONE);", "modifier": "private", "type": "ObservableInt", "declarator": "mAlertVisibility = new ObservableInt(View.GONE)", "var_name": "mAlertVisibility"}], "methods": [{"identifier": "TodoListViewModelImpl", "parameters": "(@NonNull Context mContext, @NonNull TodoRepository todoRepository,\n                                 @NonNull RxUtils.SchedulerHolder schedulerHolder)", "modifiers": "public", "return": "", "signature": " TodoListViewModelImpl(@NonNull Context mContext, @NonNull TodoRepository todoRepository,\n                                 @NonNull RxUtils.SchedulerHolder schedulerHolder)", "full_signature": "public  TodoListViewModelImpl(@NonNull Context mContext, @NonNull TodoRepository todoRepository,\n                                 @NonNull RxUtils.SchedulerHolder schedulerHolder)", "class_method_signature": "TodoListViewModelImpl.TodoListViewModelImpl(@NonNull Context mContext, @NonNull TodoRepository todoRepository,\n                                 @NonNull RxUtils.SchedulerHolder schedulerHolder)", "testcase": false, "constructor": true}, {"identifier": "getAlertVisibility", "parameters": "()", "modifiers": "@Override public", "return": "ObservableInt", "signature": "ObservableInt getAlertVisibility()", "full_signature": "@Override public ObservableInt getAlertVisibility()", "class_method_signature": "TodoListViewModelImpl.getAlertVisibility()", "testcase": false, "constructor": false}, {"identifier": "getTodoItems", "parameters": "()", "modifiers": "@Override public", "return": "ObservableList<TodoItemViewModel>", "signature": "ObservableList<TodoItemViewModel> getTodoItems()", "full_signature": "@Override public ObservableList<TodoItemViewModel> getTodoItems()", "class_method_signature": "TodoListViewModelImpl.getTodoItems()", "testcase": false, "constructor": false}, {"identifier": "fetchAllTodo", "parameters": "()", "modifiers": "@Override @SuppressWarnings(\"Anonymous2MethodRef\") public", "return": "Observable", "signature": "Observable fetchAllTodo()", "full_signature": "@Override @SuppressWarnings(\"Anonymous2MethodRef\") public Observable fetchAllTodo()", "class_method_signature": "TodoListViewModelImpl.fetchAllTodo()", "testcase": false, "constructor": false}, {"identifier": "checkChangeItem", "parameters": "(TodoItemViewModel todoItemViewModel)", "modifiers": "@Override public", "return": "Observable<Todo>", "signature": "Observable<Todo> checkChangeItem(TodoItemViewModel todoItemViewModel)", "full_signature": "@Override public Observable<Todo> checkChangeItem(TodoItemViewModel todoItemViewModel)", "class_method_signature": "TodoListViewModelImpl.checkChangeItem(TodoItemViewModel todoItemViewModel)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(Todo todo)", "modifiers": "@Override public", "return": "void", "signature": "void insert(Todo todo)", "full_signature": "@Override public void insert(Todo todo)", "class_method_signature": "TodoListViewModelImpl.insert(Todo todo)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Todo todo)", "modifiers": "@Override public", "return": "void", "signature": "void update(Todo todo)", "full_signature": "@Override public void update(Todo todo)", "class_method_signature": "TodoListViewModelImpl.update(Todo todo)", "testcase": false, "constructor": false}, {"identifier": "deleteItem", "parameters": "(int position)", "modifiers": "@Override public", "return": "Observable<Boolean>", "signature": "Observable<Boolean> deleteItem(int position)", "full_signature": "@Override public Observable<Boolean> deleteItem(int position)", "class_method_signature": "TodoListViewModelImpl.deleteItem(int position)", "testcase": false, "constructor": false}, {"identifier": "checkEmptyAndShowAlert", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkEmptyAndShowAlert()", "full_signature": "private void checkEmptyAndShowAlert()", "class_method_signature": "TodoListViewModelImpl.checkEmptyAndShowAlert()", "testcase": false, "constructor": false}], "file": "app/src/main/java/apidez/com/doit/viewmodel/TodoListViewModelImpl.java"}, "focal_method": {"identifier": "insert", "parameters": "(Todo todo)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void insert(Todo todo) {\n        mTodoItems.add(0, new TodoItemViewModel(todo));\n        checkEmptyAndShowAlert();\n    }", "signature": "void insert(Todo todo)", "full_signature": "@Override public void insert(Todo todo)", "class_method_signature": "TodoListViewModelImpl.insert(Todo todo)", "testcase": false, "constructor": false, "invocations": ["add", "checkEmptyAndShowAlert"]}, "repository": {"repo_id": 50765065, "url": "https://github.com/nongdenchet/DO.IT", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 6, "size": 16808, "license": "licensed"}}