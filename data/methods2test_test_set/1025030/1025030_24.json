{"test_class": {"identifier": "ServiceDescriptionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "ServiceDescription sd = null;", "modifier": "", "type": "ServiceDescription", "declarator": "sd = null", "var_name": "sd"}], "file": "core/services/src/test/java/eu/planets_project/services/datatypes/ServiceDescriptionTest.java"}, "test_case": {"identifier": "equalsCornerCases", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void equalsCornerCases() {\n        Assert.assertFalse(sd.equals(\"Some string\"));\n        Assert.assertFalse(sd.equals(1));\n        Assert.assertFalse(sd.equals(null));\n    }", "signature": "void equalsCornerCases()", "full_signature": "@Test public void equalsCornerCases()", "class_method_signature": "ServiceDescriptionTest.equalsCornerCases()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals"]}, "focal_class": {"identifier": "ServiceDescription", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final URI PROPERTY = URI.create(\"planets:property/service_description\");", "modifier": "public static final", "type": "URI", "declarator": "PROPERTY = URI.create(\"planets:property/service_description\")", "var_name": "PROPERTY"}, {"original_string": "public static final String AUTHORIZED_ROLES = \"authorized_roles\";", "modifier": "public static final", "type": "String", "declarator": "AUTHORIZED_ROLES = \"authorized_roles\"", "var_name": "AUTHORIZED_ROLES"}, {"original_string": "@XmlElement(name = \"title\", namespace = PlanetsServices.TERMS_NS, required = true)\n    String name;", "modifier": "@XmlElement(name = \"title\", namespace = PlanetsServices.TERMS_NS, required = true)", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "@XmlElement(namespace = PlanetsServices.SERVICES_NS, required = true)\n    String classname;", "modifier": "@XmlElement(namespace = PlanetsServices.SERVICES_NS, required = true)", "type": "String", "declarator": "classname", "var_name": "classname"}, {"original_string": "@XmlElement(namespace = PlanetsServices.SERVICES_NS, required = true)\n    String type;", "modifier": "@XmlElement(namespace = PlanetsServices.SERVICES_NS, required = true)", "type": "String", "declarator": "type", "var_name": "type"}, {"original_string": "@XmlElement(namespace = PlanetsServices.SERVICES_NS)\n    URL endpoint;", "modifier": "@XmlElement(namespace = PlanetsServices.SERVICES_NS)", "type": "URL", "declarator": "endpoint", "var_name": "endpoint"}, {"original_string": "@XmlElement(namespace = PlanetsServices.SERVICES_NS)\n    List<Parameter> parameters;", "modifier": "@XmlElement(namespace = PlanetsServices.SERVICES_NS)", "type": "List<Parameter>", "declarator": "parameters", "var_name": "parameters"}, {"original_string": "@XmlElement(namespace = PlanetsServices.TOOLS_NS, required = true)\n    Tool tool;", "modifier": "@XmlElement(namespace = PlanetsServices.TOOLS_NS, required = true)", "type": "Tool", "declarator": "tool", "var_name": "tool"}, {"original_string": "@XmlElement(namespace = PlanetsServices.TERMS_NS)\n    String description;", "modifier": "@XmlElement(namespace = PlanetsServices.TERMS_NS)", "type": "String", "declarator": "description", "var_name": "description"}, {"original_string": "@XmlElement(namespace = PlanetsServices.SERVICES_NS)\n    String version;", "modifier": "@XmlElement(namespace = PlanetsServices.SERVICES_NS)", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "@XmlElement(namespace = PlanetsServices.TERMS_NS)\n    String identifier;", "modifier": "@XmlElement(namespace = PlanetsServices.TERMS_NS)", "type": "String", "declarator": "identifier", "var_name": "identifier"}, {"original_string": "@XmlElement(name = \"creator\", namespace = PlanetsServices.TERMS_NS, required = true)\n    String author;", "modifier": "@XmlElement(name = \"creator\", namespace = PlanetsServices.TERMS_NS, required = true)", "type": "String", "declarator": "author", "var_name": "author"}, {"original_string": "@XmlElement(name = \"publisher\", namespace = PlanetsServices.TERMS_NS)\n    String serviceProvider;", "modifier": "@XmlElement(name = \"publisher\", namespace = PlanetsServices.TERMS_NS)", "type": "String", "declarator": "serviceProvider", "var_name": "serviceProvider"}, {"original_string": "@XmlElement(namespace = PlanetsServices.SERVICES_NS)\n    String instructions;", "modifier": "@XmlElement(namespace = PlanetsServices.SERVICES_NS)", "type": "String", "declarator": "instructions", "var_name": "instructions"}, {"original_string": "@XmlElement(namespace = PlanetsServices.SERVICES_NS)\n    URI furtherInfo;", "modifier": "@XmlElement(namespace = PlanetsServices.SERVICES_NS)", "type": "URI", "declarator": "furtherInfo", "var_name": "furtherInfo"}, {"original_string": "@XmlElement(namespace = PlanetsServices.SERVICES_NS)\n    URI logo;", "modifier": "@XmlElement(namespace = PlanetsServices.SERVICES_NS)", "type": "URI", "declarator": "logo", "var_name": "logo"}, {"original_string": "@XmlElement(name = \"inputFormat\", required = false, namespace = PlanetsServices.SERVICES_NS)\n    List<URI> inputFormats;", "modifier": "@XmlElement(name = \"inputFormat\", required = false, namespace = PlanetsServices.SERVICES_NS)", "type": "List<URI>", "declarator": "inputFormats", "var_name": "inputFormats"}, {"original_string": "@XmlElement(name = \"property\", required = false, namespace = PlanetsServices.SERVICES_NS)\n    List<Property> properties;", "modifier": "@XmlElement(name = \"property\", required = false, namespace = PlanetsServices.SERVICES_NS)", "type": "List<Property>", "declarator": "properties", "var_name": "properties"}, {"original_string": "@XmlElement(name = \"migrationPath\", required = false, namespace = PlanetsServices.SERVICES_NS)\n    List<MigrationPath> paths;", "modifier": "@XmlElement(name = \"migrationPath\", required = false, namespace = PlanetsServices.SERVICES_NS)", "type": "List<MigrationPath>", "declarator": "paths", "var_name": "paths"}, {"original_string": "protected static java.io.File baseDir = new java.io.File(\n            System.getProperty(\"app.dir\")+\"/src/main/resources\");", "modifier": "protected static", "type": "java.io.File", "declarator": "baseDir = new java.io.File(\n            System.getProperty(\"app.dir\")+\"/src/main/resources\")", "var_name": "baseDir"}, {"original_string": "protected static String schemaFileName = \"service_description.xsd\";", "modifier": "protected static", "type": "String", "declarator": "schemaFileName = \"service_description.xsd\"", "var_name": "schemaFileName"}], "methods": [{"identifier": "create", "parameters": "(final String name,\n            final String type)", "modifiers": "public static", "return": "ServiceDescription.Builder", "signature": "ServiceDescription.Builder create(final String name,\n            final String type)", "full_signature": "public static ServiceDescription.Builder create(final String name,\n            final String type)", "class_method_signature": "ServiceDescription.create(final String name,\n            final String type)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(\n            final ServiceDescription serviceDescription)", "modifiers": "public static", "return": "ServiceDescription.Builder", "signature": "ServiceDescription.Builder copy(\n            final ServiceDescription serviceDescription)", "full_signature": "public static ServiceDescription.Builder copy(\n            final ServiceDescription serviceDescription)", "class_method_signature": "ServiceDescription.copy(\n            final ServiceDescription serviceDescription)", "testcase": false, "constructor": false}, {"identifier": "ServiceDescription", "parameters": "(final Builder builder)", "modifiers": "protected", "return": "", "signature": " ServiceDescription(final Builder builder)", "full_signature": "protected  ServiceDescription(final Builder builder)", "class_method_signature": "ServiceDescription.ServiceDescription(final Builder builder)", "testcase": false, "constructor": true}, {"identifier": "ServiceDescription", "parameters": "()", "modifiers": "private", "return": "", "signature": " ServiceDescription()", "full_signature": "private  ServiceDescription()", "class_method_signature": "ServiceDescription.ServiceDescription()", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Queryable public", "return": "String", "signature": "String getName()", "full_signature": "@Queryable public String getName()", "class_method_signature": "ServiceDescription.getName()", "testcase": false, "constructor": false}, {"identifier": "getClassname", "parameters": "()", "modifiers": "@Queryable public", "return": "String", "signature": "String getClassname()", "full_signature": "@Queryable public String getClassname()", "class_method_signature": "ServiceDescription.getClassname()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "@Queryable public", "return": "String", "signature": "String getType()", "full_signature": "@Queryable public String getType()", "class_method_signature": "ServiceDescription.getType()", "testcase": false, "constructor": false}, {"identifier": "getEndpoint", "parameters": "()", "modifiers": "@Queryable public", "return": "URL", "signature": "URL getEndpoint()", "full_signature": "@Queryable public URL getEndpoint()", "class_method_signature": "ServiceDescription.getEndpoint()", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "@Queryable public", "return": "List<Parameter>", "signature": "List<Parameter> getParameters()", "full_signature": "@Queryable public List<Parameter> getParameters()", "class_method_signature": "ServiceDescription.getParameters()", "testcase": false, "constructor": false}, {"identifier": "getTool", "parameters": "()", "modifiers": "@Queryable public", "return": "Tool", "signature": "Tool getTool()", "full_signature": "@Queryable public Tool getTool()", "class_method_signature": "ServiceDescription.getTool()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "@Queryable public", "return": "String", "signature": "String getDescription()", "full_signature": "@Queryable public String getDescription()", "class_method_signature": "ServiceDescription.getDescription()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Queryable public", "return": "String", "signature": "String getVersion()", "full_signature": "@Queryable public String getVersion()", "class_method_signature": "ServiceDescription.getVersion()", "testcase": false, "constructor": false}, {"identifier": "getAuthor", "parameters": "()", "modifiers": "@Queryable public", "return": "String", "signature": "String getAuthor()", "full_signature": "@Queryable public String getAuthor()", "class_method_signature": "ServiceDescription.getAuthor()", "testcase": false, "constructor": false}, {"identifier": "getServiceProvider", "parameters": "()", "modifiers": "@Queryable public", "return": "String", "signature": "String getServiceProvider()", "full_signature": "@Queryable public String getServiceProvider()", "class_method_signature": "ServiceDescription.getServiceProvider()", "testcase": false, "constructor": false}, {"identifier": "getInstructions", "parameters": "()", "modifiers": "@Queryable public", "return": "String", "signature": "String getInstructions()", "full_signature": "@Queryable public String getInstructions()", "class_method_signature": "ServiceDescription.getInstructions()", "testcase": false, "constructor": false}, {"identifier": "getFurtherInfo", "parameters": "()", "modifiers": "@Queryable public", "return": "URI", "signature": "URI getFurtherInfo()", "full_signature": "@Queryable public URI getFurtherInfo()", "class_method_signature": "ServiceDescription.getFurtherInfo()", "testcase": false, "constructor": false}, {"identifier": "getLogo", "parameters": "()", "modifiers": "@Queryable public", "return": "URI", "signature": "URI getLogo()", "full_signature": "@Queryable public URI getLogo()", "class_method_signature": "ServiceDescription.getLogo()", "testcase": false, "constructor": false}, {"identifier": "getIdentifier", "parameters": "()", "modifiers": "@Queryable public", "return": "String", "signature": "String getIdentifier()", "full_signature": "@Queryable public String getIdentifier()", "class_method_signature": "ServiceDescription.getIdentifier()", "testcase": false, "constructor": false}, {"identifier": "getPaths", "parameters": "()", "modifiers": "@Queryable public", "return": "List<MigrationPath>", "signature": "List<MigrationPath> getPaths()", "full_signature": "@Queryable public List<MigrationPath> getPaths()", "class_method_signature": "ServiceDescription.getPaths()", "testcase": false, "constructor": false}, {"identifier": "getInputFormats", "parameters": "()", "modifiers": "@Queryable public", "return": "List<URI>", "signature": "List<URI> getInputFormats()", "full_signature": "@Queryable public List<URI> getInputFormats()", "class_method_signature": "ServiceDescription.getInputFormats()", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Queryable public", "return": "List<Property>", "signature": "List<Property> getProperties()", "full_signature": "@Queryable public List<Property> getProperties()", "class_method_signature": "ServiceDescription.getProperties()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ServiceDescription.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "ServiceDescription.equals(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final String xml)", "modifiers": "public static", "return": "ServiceDescription", "signature": "ServiceDescription of(final String xml)", "full_signature": "public static ServiceDescription of(final String xml)", "class_method_signature": "ServiceDescription.of(final String xml)", "testcase": false, "constructor": false}, {"identifier": "toXml", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toXml()", "full_signature": "public String toXml()", "class_method_signature": "ServiceDescription.toXml()", "testcase": false, "constructor": false}, {"identifier": "toXmlFormatted", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toXmlFormatted()", "full_signature": "public String toXmlFormatted()", "class_method_signature": "ServiceDescription.toXmlFormatted()", "testcase": false, "constructor": false}, {"identifier": "toXml", "parameters": "(boolean formatted)", "modifiers": "private", "return": "String", "signature": "String toXml(boolean formatted)", "full_signature": "private String toXml(boolean formatted)", "class_method_signature": "ServiceDescription.toXml(boolean formatted)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ServiceDescription.toString()", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(final String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(final String[] args)", "full_signature": "public static void main(final String[] args)", "class_method_signature": "ServiceDescription.main(final String[] args)", "testcase": false, "constructor": false}], "file": "core/services/src/main/java/eu/planets_project/services/datatypes/ServiceDescription.java"}, "focal_method": {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(final Object obj) {\n        if (!(obj instanceof ServiceDescription)) {\n            return false;\n        }\n        ServiceDescription other = (ServiceDescription) obj;\n        if (this.identifier != null) {\n            return this.identifier.equals(other.identifier);\n        }\n\t\treturn toXml().equals(other.toXml());\n    }", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "ServiceDescription.equals(final Object obj)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "toXml", "toXml"]}, "repository": {"repo_id": 1025030, "url": "https://github.com/opf-labs/planets-suite", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 9, "size": 198462, "license": "licensed"}}