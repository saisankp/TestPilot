{"test_class": {"identifier": "TimeStringValuePredicateTest", "superclass": "", "interfaces": "", "fields": [], "file": "netflix-infix/src/test/java/com/netflix/infix/TimeStringValuePredicateTest.java"}, "test_case": {"identifier": "testInvalidFunctionNameShouldBeRejected", "parameters": "()", "modifiers": "@Test(expected=IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected=IllegalArgumentException.class)\n\tpublic void testInvalidFunctionNameShouldBeRejected() {\n\t\tString valueFormat = \"YYYY-MM-dd HH:mm:ss:SSS\"; \n\t\tlong now = new Date().getTime();\n\t\t\n\t\tString inputFormat = \"yyyyMMdd'T'HHmmss.SSSZ\";\n\t\t\n\t\tnew TimeStringValuePredicate(valueFormat, inputFormat, toString(now, valueFormat), \"~~\");\n\t}", "signature": "void testInvalidFunctionNameShouldBeRejected()", "full_signature": "@Test(expected=IllegalArgumentException.class) public void testInvalidFunctionNameShouldBeRejected()", "class_method_signature": "TimeStringValuePredicateTest.testInvalidFunctionNameShouldBeRejected()", "testcase": true, "constructor": false, "invocations": ["getTime", "toString"]}, "focal_class": {"identifier": "TimeStringValuePredicate", "superclass": "", "interfaces": "implements ValuePredicate<String>", "fields": [{"original_string": "private String valueFormat;", "modifier": "private", "type": "String", "declarator": "valueFormat", "var_name": "valueFormat"}, {"original_string": "private String inputFormat;", "modifier": "private", "type": "String", "declarator": "inputFormat", "var_name": "inputFormat"}, {"original_string": "private String value;", "modifier": "private", "type": "String", "declarator": "value", "var_name": "value"}, {"original_string": "private String fnName;", "modifier": "private", "type": "String", "declarator": "fnName", "var_name": "fnName"}, {"original_string": "private DateTimeFormatter inputTimeFormatter;", "modifier": "private", "type": "DateTimeFormatter", "declarator": "inputTimeFormatter", "var_name": "inputTimeFormatter"}, {"original_string": "private TimeMillisValuePredicate timePredicate;", "modifier": "private", "type": "TimeMillisValuePredicate", "declarator": "timePredicate", "var_name": "timePredicate"}], "methods": [{"identifier": "TimeStringValuePredicate", "parameters": "(String valueFormat, String inputFormat, String value, String fnName)", "modifiers": "public", "return": "", "signature": " TimeStringValuePredicate(String valueFormat, String inputFormat, String value, String fnName)", "full_signature": "public  TimeStringValuePredicate(String valueFormat, String inputFormat, String value, String fnName)", "class_method_signature": "TimeStringValuePredicate.TimeStringValuePredicate(String valueFormat, String inputFormat, String value, String fnName)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(@Nullable String input)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean apply(@Nullable String input)", "full_signature": "@Override public boolean apply(@Nullable String input)", "class_method_signature": "TimeStringValuePredicate.apply(@Nullable String input)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getValue()", "full_signature": "public String getValue()", "class_method_signature": "TimeStringValuePredicate.getValue()", "testcase": false, "constructor": false}, {"identifier": "getValueFormat", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getValueFormat()", "full_signature": "public String getValueFormat()", "class_method_signature": "TimeStringValuePredicate.getValueFormat()", "testcase": false, "constructor": false}, {"identifier": "getInputFormat", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getInputFormat()", "full_signature": "public String getInputFormat()", "class_method_signature": "TimeStringValuePredicate.getInputFormat()", "testcase": false, "constructor": false}, {"identifier": "getFnName", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getFnName()", "full_signature": " String getFnName()", "class_method_signature": "TimeStringValuePredicate.getFnName()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TimeStringValuePredicate.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TimeStringValuePredicate.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "TimeStringValuePredicate.equals(Object obj)", "testcase": false, "constructor": false}], "file": "netflix-infix/src/main/java/com/netflix/infix/TimeStringValuePredicate.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n\t    StringBuilder builder = new StringBuilder();\n\t    builder.append(\"TimeStringValuePredicate [valueFormat=\");\n\t    builder.append(valueFormat);\n\t    builder.append(\", inputFormat=\");\n\t    builder.append(inputFormat);\n\t    builder.append(\", value=\");\n\t    builder.append(value);\n\t    builder.append(\", fnName=\");\n\t    builder.append(fnName);\n\t    builder.append(\", inputTimeFormatter=\");\n\t    builder.append(inputTimeFormatter);\n\t    builder.append(\", timePredicate=\");\n\t    builder.append(timePredicate);\n\t    builder.append(\"]\");\n\t    return builder.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TimeStringValuePredicate.toString()", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "append", "toString"]}, "repository": {"repo_id": 5012085, "url": "https://github.com/Netflix/netflix-commons", "language": "Java", "is_fork": false, "fork_count": 74, "stargazer_count": 145, "size": 404, "license": "licensed"}}