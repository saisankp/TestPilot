{"test_class": {"identifier": "KiePMMLPredicateFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Map<String, DataType> simplePredicateNameType;", "modifier": "private static", "type": "Map<String, DataType>", "declarator": "simplePredicateNameType", "var_name": "simplePredicateNameType"}, {"original_string": "private static List<SimplePredicate> simplePredicates;", "modifier": "private static", "type": "List<SimplePredicate>", "declarator": "simplePredicates", "var_name": "simplePredicates"}, {"original_string": "private static Map<String, Array.Type> simpleSetPredicateNameType;", "modifier": "private static", "type": "Map<String, Array.Type>", "declarator": "simpleSetPredicateNameType", "var_name": "simpleSetPredicateNameType"}, {"original_string": "private static List<SimpleSetPredicate> simpleSetPredicates;", "modifier": "private static", "type": "List<SimpleSetPredicate>", "declarator": "simpleSetPredicates", "var_name": "simpleSetPredicates"}, {"original_string": "private static DataDictionary dataDictionary;", "modifier": "private static", "type": "DataDictionary", "declarator": "dataDictionary", "var_name": "dataDictionary"}, {"original_string": "private ConstructorDeclaration constructorDeclaration;", "modifier": "private", "type": "ConstructorDeclaration", "declarator": "constructorDeclaration", "var_name": "constructorDeclaration"}, {"original_string": "private ExplicitConstructorInvocationStmt superInvocation;", "modifier": "private", "type": "ExplicitConstructorInvocationStmt", "declarator": "superInvocation", "var_name": "superInvocation"}, {"original_string": "private List<AssignExpr> assignExprs;", "modifier": "private", "type": "List<AssignExpr>", "declarator": "assignExprs", "var_name": "assignExprs"}], "file": "kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/factories/KiePMMLPredicateFactoryTest.java"}, "test_case": {"identifier": "getPredicateTrue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getPredicateTrue() {\n        True truePredicate = new True();\n        KiePMMLPredicate retrieved = KiePMMLPredicateFactory.getPredicate(truePredicate, dataDictionary);\n        assertTrue(retrieved instanceof KiePMMLTruePredicate);\n    }", "signature": "void getPredicateTrue()", "full_signature": "@Test public void getPredicateTrue()", "class_method_signature": "KiePMMLPredicateFactoryTest.getPredicateTrue()", "testcase": true, "constructor": false, "invocations": ["getPredicate", "assertTrue"]}, "focal_class": {"identifier": "KiePMMLPredicateFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String KIE_PMML_SIMPLE_PREDICATE_TEMPLATE_JAVA = \"KiePMMLSimplePredicateTemplate.tmpl\";", "modifier": "static final", "type": "String", "declarator": "KIE_PMML_SIMPLE_PREDICATE_TEMPLATE_JAVA = \"KiePMMLSimplePredicateTemplate.tmpl\"", "var_name": "KIE_PMML_SIMPLE_PREDICATE_TEMPLATE_JAVA"}, {"original_string": "static final String KIE_PMML_SIMPLE_PREDICATE_TEMPLATE = \"KiePMMLSimplePredicateTemplate\";", "modifier": "static final", "type": "String", "declarator": "KIE_PMML_SIMPLE_PREDICATE_TEMPLATE = \"KiePMMLSimplePredicateTemplate\"", "var_name": "KIE_PMML_SIMPLE_PREDICATE_TEMPLATE"}, {"original_string": "static final String KIE_PMML_SIMPLE_SET_PREDICATE_TEMPLATE_JAVA = \"KiePMMLSimpleSetPredicateTemplate.tmpl\";", "modifier": "static final", "type": "String", "declarator": "KIE_PMML_SIMPLE_SET_PREDICATE_TEMPLATE_JAVA = \"KiePMMLSimpleSetPredicateTemplate.tmpl\"", "var_name": "KIE_PMML_SIMPLE_SET_PREDICATE_TEMPLATE_JAVA"}, {"original_string": "static final String KIE_PMML_SIMPLE_SET_PREDICATE_TEMPLATE = \"KiePMMLSimpleSetPredicateTemplate\";", "modifier": "static final", "type": "String", "declarator": "KIE_PMML_SIMPLE_SET_PREDICATE_TEMPLATE = \"KiePMMLSimpleSetPredicateTemplate\"", "var_name": "KIE_PMML_SIMPLE_SET_PREDICATE_TEMPLATE"}, {"original_string": "static final String KIE_PMML_COMPOUND_PREDICATE_TEMPLATE_JAVA = \"KiePMMLCompoundPredicateTemplate.tmpl\";", "modifier": "static final", "type": "String", "declarator": "KIE_PMML_COMPOUND_PREDICATE_TEMPLATE_JAVA = \"KiePMMLCompoundPredicateTemplate.tmpl\"", "var_name": "KIE_PMML_COMPOUND_PREDICATE_TEMPLATE_JAVA"}, {"original_string": "static final String KIE_PMML_COMPOUND_PREDICATE_TEMPLATE = \"KiePMMLCompoundPredicateTemplate\";", "modifier": "static final", "type": "String", "declarator": "KIE_PMML_COMPOUND_PREDICATE_TEMPLATE = \"KiePMMLCompoundPredicateTemplate\"", "var_name": "KIE_PMML_COMPOUND_PREDICATE_TEMPLATE"}, {"original_string": "static final String KIE_PMML_OPERATOR_FUNCTION_TEMPLATE = \"KiePMMLOperatorFunctionTemplate.tmpl\";", "modifier": "static final", "type": "String", "declarator": "KIE_PMML_OPERATOR_FUNCTION_TEMPLATE = \"KiePMMLOperatorFunctionTemplate.tmpl\"", "var_name": "KIE_PMML_OPERATOR_FUNCTION_TEMPLATE"}, {"original_string": "static final String KIE_PMML_OPERATOR_FUNCTION = \"KiePMMLOperatorFunctionTemplate\";", "modifier": "static final", "type": "String", "declarator": "KIE_PMML_OPERATOR_FUNCTION = \"KiePMMLOperatorFunctionTemplate\"", "var_name": "KIE_PMML_OPERATOR_FUNCTION"}, {"original_string": "static final String KIE_PMML_TRUE_PREDICATE_TEMPLATE_JAVA = \"KiePMMLTruePredicateTemplate.tmpl\";", "modifier": "static final", "type": "String", "declarator": "KIE_PMML_TRUE_PREDICATE_TEMPLATE_JAVA = \"KiePMMLTruePredicateTemplate.tmpl\"", "var_name": "KIE_PMML_TRUE_PREDICATE_TEMPLATE_JAVA"}, {"original_string": "static final String KIE_PMML_TRUE_PREDICATE_TEMPLATE = \"KiePMMLTruePredicateTemplate\";", "modifier": "static final", "type": "String", "declarator": "KIE_PMML_TRUE_PREDICATE_TEMPLATE = \"KiePMMLTruePredicateTemplate\"", "var_name": "KIE_PMML_TRUE_PREDICATE_TEMPLATE"}, {"original_string": "static final String KIE_PMML_FALSE_PREDICATE_TEMPLATE_JAVA = \"KiePMMLFalsePredicateTemplate.tmpl\";", "modifier": "static final", "type": "String", "declarator": "KIE_PMML_FALSE_PREDICATE_TEMPLATE_JAVA = \"KiePMMLFalsePredicateTemplate.tmpl\"", "var_name": "KIE_PMML_FALSE_PREDICATE_TEMPLATE_JAVA"}, {"original_string": "static final String KIE_PMML_FALSE_PREDICATE_TEMPLATE = \"KiePMMLFalsePredicateTemplate\";", "modifier": "static final", "type": "String", "declarator": "KIE_PMML_FALSE_PREDICATE_TEMPLATE = \"KiePMMLFalsePredicateTemplate\"", "var_name": "KIE_PMML_FALSE_PREDICATE_TEMPLATE"}, {"original_string": "private static final Logger logger = LoggerFactory.getLogger(KiePMMLPredicateFactory.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(KiePMMLPredicateFactory.class.getName())", "var_name": "logger"}], "methods": [{"identifier": "KiePMMLPredicateFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " KiePMMLPredicateFactory()", "full_signature": "private  KiePMMLPredicateFactory()", "class_method_signature": "KiePMMLPredicateFactory.KiePMMLPredicateFactory()", "testcase": false, "constructor": true}, {"identifier": "getPredicates", "parameters": "(List<Predicate> predicates, DataDictionary dataDictionary)", "modifiers": "public static", "return": "List<KiePMMLPredicate>", "signature": "List<KiePMMLPredicate> getPredicates(List<Predicate> predicates, DataDictionary dataDictionary)", "full_signature": "public static List<KiePMMLPredicate> getPredicates(List<Predicate> predicates, DataDictionary dataDictionary)", "class_method_signature": "KiePMMLPredicateFactory.getPredicates(List<Predicate> predicates, DataDictionary dataDictionary)", "testcase": false, "constructor": false}, {"identifier": "getPredicate", "parameters": "(Predicate predicate, DataDictionary dataDictionary)", "modifiers": "public static", "return": "KiePMMLPredicate", "signature": "KiePMMLPredicate getPredicate(Predicate predicate, DataDictionary dataDictionary)", "full_signature": "public static KiePMMLPredicate getPredicate(Predicate predicate, DataDictionary dataDictionary)", "class_method_signature": "KiePMMLPredicateFactory.getPredicate(Predicate predicate, DataDictionary dataDictionary)", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLSimplePredicate", "parameters": "(SimplePredicate predicate, DataType dataType)", "modifiers": "public static", "return": "KiePMMLSimplePredicate", "signature": "KiePMMLSimplePredicate getKiePMMLSimplePredicate(SimplePredicate predicate, DataType dataType)", "full_signature": "public static KiePMMLSimplePredicate getKiePMMLSimplePredicate(SimplePredicate predicate, DataType dataType)", "class_method_signature": "KiePMMLPredicateFactory.getKiePMMLSimplePredicate(SimplePredicate predicate, DataType dataType)", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLSimpleSetPredicate", "parameters": "(SimpleSetPredicate predicate)", "modifiers": "public static", "return": "KiePMMLSimpleSetPredicate", "signature": "KiePMMLSimpleSetPredicate getKiePMMLSimpleSetPredicate(SimpleSetPredicate predicate)", "full_signature": "public static KiePMMLSimpleSetPredicate getKiePMMLSimpleSetPredicate(SimpleSetPredicate predicate)", "class_method_signature": "KiePMMLPredicateFactory.getKiePMMLSimpleSetPredicate(SimpleSetPredicate predicate)", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLCompoundPredicate", "parameters": "(CompoundPredicate predicate,\n                                                                       DataDictionary dataDictionary)", "modifiers": "public static", "return": "KiePMMLCompoundPredicate", "signature": "KiePMMLCompoundPredicate getKiePMMLCompoundPredicate(CompoundPredicate predicate,\n                                                                       DataDictionary dataDictionary)", "full_signature": "public static KiePMMLCompoundPredicate getKiePMMLCompoundPredicate(CompoundPredicate predicate,\n                                                                       DataDictionary dataDictionary)", "class_method_signature": "KiePMMLPredicateFactory.getKiePMMLCompoundPredicate(CompoundPredicate predicate,\n                                                                       DataDictionary dataDictionary)", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLTruePredicate", "parameters": "()", "modifiers": "public static", "return": "KiePMMLTruePredicate", "signature": "KiePMMLTruePredicate getKiePMMLTruePredicate()", "full_signature": "public static KiePMMLTruePredicate getKiePMMLTruePredicate()", "class_method_signature": "KiePMMLPredicateFactory.getKiePMMLTruePredicate()", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLFalsePredicate", "parameters": "()", "modifiers": "public static", "return": "KiePMMLFalsePredicate", "signature": "KiePMMLFalsePredicate getKiePMMLFalsePredicate()", "full_signature": "public static KiePMMLFalsePredicate getKiePMMLFalsePredicate()", "class_method_signature": "KiePMMLPredicateFactory.getKiePMMLFalsePredicate()", "testcase": false, "constructor": false}, {"identifier": "getPredicateSourcesMap", "parameters": "(final KiePMMLPredicate kiePMMLPredicate,\n                                                             final String packageName)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> getPredicateSourcesMap(final KiePMMLPredicate kiePMMLPredicate,\n                                                             final String packageName)", "full_signature": "public static Map<String, String> getPredicateSourcesMap(final KiePMMLPredicate kiePMMLPredicate,\n                                                             final String packageName)", "class_method_signature": "KiePMMLPredicateFactory.getPredicateSourcesMap(final KiePMMLPredicate kiePMMLPredicate,\n                                                             final String packageName)", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLSimplePredicateSourcesMap", "parameters": "(final KiePMMLSimplePredicate kiePMMLSimplePredicate, final String packageName)", "modifiers": "static", "return": "Map<String, String>", "signature": "Map<String, String> getKiePMMLSimplePredicateSourcesMap(final KiePMMLSimplePredicate kiePMMLSimplePredicate, final String packageName)", "full_signature": "static Map<String, String> getKiePMMLSimplePredicateSourcesMap(final KiePMMLSimplePredicate kiePMMLSimplePredicate, final String packageName)", "class_method_signature": "KiePMMLPredicateFactory.getKiePMMLSimplePredicateSourcesMap(final KiePMMLSimplePredicate kiePMMLSimplePredicate, final String packageName)", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLSimpleSetPredicateSourcesMap", "parameters": "(final KiePMMLSimpleSetPredicate kiePMMLSimpleSetPredicate,\n                                                                      final String packageName)", "modifiers": "static", "return": "Map<String, String>", "signature": "Map<String, String> getKiePMMLSimpleSetPredicateSourcesMap(final KiePMMLSimpleSetPredicate kiePMMLSimpleSetPredicate,\n                                                                      final String packageName)", "full_signature": "static Map<String, String> getKiePMMLSimpleSetPredicateSourcesMap(final KiePMMLSimpleSetPredicate kiePMMLSimpleSetPredicate,\n                                                                      final String packageName)", "class_method_signature": "KiePMMLPredicateFactory.getKiePMMLSimpleSetPredicateSourcesMap(final KiePMMLSimpleSetPredicate kiePMMLSimpleSetPredicate,\n                                                                      final String packageName)", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLCompoundPredicateSourcesMap", "parameters": "(final KiePMMLCompoundPredicate kiePMMLCompoundPredicate, final String packageName)", "modifiers": "static", "return": "Map<String, String>", "signature": "Map<String, String> getKiePMMLCompoundPredicateSourcesMap(final KiePMMLCompoundPredicate kiePMMLCompoundPredicate, final String packageName)", "full_signature": "static Map<String, String> getKiePMMLCompoundPredicateSourcesMap(final KiePMMLCompoundPredicate kiePMMLCompoundPredicate, final String packageName)", "class_method_signature": "KiePMMLPredicateFactory.getKiePMMLCompoundPredicateSourcesMap(final KiePMMLCompoundPredicate kiePMMLCompoundPredicate, final String packageName)", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLTruePredicateSourcesMap", "parameters": "(final KiePMMLTruePredicate kiePMMLTruePredicate,\n                                                                 final String packageName)", "modifiers": "static", "return": "Map<String, String>", "signature": "Map<String, String> getKiePMMLTruePredicateSourcesMap(final KiePMMLTruePredicate kiePMMLTruePredicate,\n                                                                 final String packageName)", "full_signature": "static Map<String, String> getKiePMMLTruePredicateSourcesMap(final KiePMMLTruePredicate kiePMMLTruePredicate,\n                                                                 final String packageName)", "class_method_signature": "KiePMMLPredicateFactory.getKiePMMLTruePredicateSourcesMap(final KiePMMLTruePredicate kiePMMLTruePredicate,\n                                                                 final String packageName)", "testcase": false, "constructor": false}, {"identifier": "getKiePMMLFalsePredicateSourcesMap", "parameters": "(final KiePMMLFalsePredicate kiePMMLFalsePredicate,\n                                                                  final String packageName)", "modifiers": "static", "return": "Map<String, String>", "signature": "Map<String, String> getKiePMMLFalsePredicateSourcesMap(final KiePMMLFalsePredicate kiePMMLFalsePredicate,\n                                                                  final String packageName)", "full_signature": "static Map<String, String> getKiePMMLFalsePredicateSourcesMap(final KiePMMLFalsePredicate kiePMMLFalsePredicate,\n                                                                  final String packageName)", "class_method_signature": "KiePMMLPredicateFactory.getKiePMMLFalsePredicateSourcesMap(final KiePMMLFalsePredicate kiePMMLFalsePredicate,\n                                                                  final String packageName)", "testcase": false, "constructor": false}, {"identifier": "setSimplePredicateConstructor", "parameters": "(final String generatedClassName,\n                                              final String predicateName,\n                                              final ConstructorDeclaration constructorDeclaration,\n                                              final OPERATOR operator,\n                                              final Object value)", "modifiers": "static", "return": "void", "signature": "void setSimplePredicateConstructor(final String generatedClassName,\n                                              final String predicateName,\n                                              final ConstructorDeclaration constructorDeclaration,\n                                              final OPERATOR operator,\n                                              final Object value)", "full_signature": "static void setSimplePredicateConstructor(final String generatedClassName,\n                                              final String predicateName,\n                                              final ConstructorDeclaration constructorDeclaration,\n                                              final OPERATOR operator,\n                                              final Object value)", "class_method_signature": "KiePMMLPredicateFactory.setSimplePredicateConstructor(final String generatedClassName,\n                                              final String predicateName,\n                                              final ConstructorDeclaration constructorDeclaration,\n                                              final OPERATOR operator,\n                                              final Object value)", "testcase": false, "constructor": false}, {"identifier": "setSimpleSetPredicateConstructor", "parameters": "(final String generatedClassName,\n                                                 final String predicateName,\n                                                 final ConstructorDeclaration constructorDeclaration,\n                                                 final ARRAY_TYPE arrayType,\n                                                 final IN_NOTIN inNotIn,\n                                                 final List<Object> values)", "modifiers": "static", "return": "void", "signature": "void setSimpleSetPredicateConstructor(final String generatedClassName,\n                                                 final String predicateName,\n                                                 final ConstructorDeclaration constructorDeclaration,\n                                                 final ARRAY_TYPE arrayType,\n                                                 final IN_NOTIN inNotIn,\n                                                 final List<Object> values)", "full_signature": "static void setSimpleSetPredicateConstructor(final String generatedClassName,\n                                                 final String predicateName,\n                                                 final ConstructorDeclaration constructorDeclaration,\n                                                 final ARRAY_TYPE arrayType,\n                                                 final IN_NOTIN inNotIn,\n                                                 final List<Object> values)", "class_method_signature": "KiePMMLPredicateFactory.setSimpleSetPredicateConstructor(final String generatedClassName,\n                                                 final String predicateName,\n                                                 final ConstructorDeclaration constructorDeclaration,\n                                                 final ARRAY_TYPE arrayType,\n                                                 final IN_NOTIN inNotIn,\n                                                 final List<Object> values)", "testcase": false, "constructor": false}, {"identifier": "setCompoundPredicateConstructor", "parameters": "(final String generatedClassName,\n                                                final String predicateName,\n                                                final ConstructorDeclaration constructorDeclaration,\n                                                final BOOLEAN_OPERATOR booleanOperator,\n                                                final Set<String> predicatesClasses)", "modifiers": "static", "return": "void", "signature": "void setCompoundPredicateConstructor(final String generatedClassName,\n                                                final String predicateName,\n                                                final ConstructorDeclaration constructorDeclaration,\n                                                final BOOLEAN_OPERATOR booleanOperator,\n                                                final Set<String> predicatesClasses)", "full_signature": "static void setCompoundPredicateConstructor(final String generatedClassName,\n                                                final String predicateName,\n                                                final ConstructorDeclaration constructorDeclaration,\n                                                final BOOLEAN_OPERATOR booleanOperator,\n                                                final Set<String> predicatesClasses)", "class_method_signature": "KiePMMLPredicateFactory.setCompoundPredicateConstructor(final String generatedClassName,\n                                                final String predicateName,\n                                                final ConstructorDeclaration constructorDeclaration,\n                                                final BOOLEAN_OPERATOR booleanOperator,\n                                                final Set<String> predicatesClasses)", "testcase": false, "constructor": false}, {"identifier": "setTrueFalsePredicateConstructor", "parameters": "(final String generatedClassName,\n                                                 final String predicateName,\n                                                 final ConstructorDeclaration constructorDeclaration)", "modifiers": "static", "return": "void", "signature": "void setTrueFalsePredicateConstructor(final String generatedClassName,\n                                                 final String predicateName,\n                                                 final ConstructorDeclaration constructorDeclaration)", "full_signature": "static void setTrueFalsePredicateConstructor(final String generatedClassName,\n                                                 final String predicateName,\n                                                 final ConstructorDeclaration constructorDeclaration)", "class_method_signature": "KiePMMLPredicateFactory.setTrueFalsePredicateConstructor(final String generatedClassName,\n                                                 final String predicateName,\n                                                 final ConstructorDeclaration constructorDeclaration)", "testcase": false, "constructor": false}, {"identifier": "getObjectsFromArray", "parameters": "(Array source)", "modifiers": "static", "return": "List<Object>", "signature": "List<Object> getObjectsFromArray(Array source)", "full_signature": "static List<Object> getObjectsFromArray(Array source)", "class_method_signature": "KiePMMLPredicateFactory.getObjectsFromArray(Array source)", "testcase": false, "constructor": false}, {"identifier": "getActualValue", "parameters": "(Object rawValue, DataType dataType)", "modifiers": "private static", "return": "Object", "signature": "Object getActualValue(Object rawValue, DataType dataType)", "full_signature": "private static Object getActualValue(Object rawValue, DataType dataType)", "class_method_signature": "KiePMMLPredicateFactory.getActualValue(Object rawValue, DataType dataType)", "testcase": false, "constructor": false}], "file": "kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/factories/KiePMMLPredicateFactory.java"}, "focal_method": {"identifier": "getPredicate", "parameters": "(Predicate predicate, DataDictionary dataDictionary)", "modifiers": "public static", "return": "KiePMMLPredicate", "body": "public static KiePMMLPredicate getPredicate(Predicate predicate, DataDictionary dataDictionary) {\n        logger.trace(\"getPredicate {}\", predicate);\n        if (predicate instanceof SimplePredicate) {\n            final DataType dataType = dataDictionary.getDataFields().stream()\n                    .filter(dataField -> dataField.getName().getValue().equals(((SimplePredicate) predicate).getField().getValue()))\n                    .map(DataField::getDataType)\n                    .findFirst()\n                    .orElseThrow(() -> new KiePMMLException(\"Failed to find DataField for predicate \" + ((SimplePredicate) predicate).getField().getValue()));\n            return getKiePMMLSimplePredicate((SimplePredicate) predicate, dataType);\n        } else if (predicate instanceof SimpleSetPredicate) {\n            return getKiePMMLSimpleSetPredicate((SimpleSetPredicate) predicate);\n        } else if (predicate instanceof CompoundPredicate) {\n            return getKiePMMLCompoundPredicate((CompoundPredicate) predicate, dataDictionary);\n        } else if (predicate instanceof True) {\n            return getKiePMMLTruePredicate();\n        } else if (predicate instanceof False) {\n            return getKiePMMLFalsePredicate();\n        } else {\n            throw new KiePMMLException(\"Predicate of type \" + predicate.getClass().getName() + \" not managed, yet\");\n        }\n    }", "signature": "KiePMMLPredicate getPredicate(Predicate predicate, DataDictionary dataDictionary)", "full_signature": "public static KiePMMLPredicate getPredicate(Predicate predicate, DataDictionary dataDictionary)", "class_method_signature": "KiePMMLPredicateFactory.getPredicate(Predicate predicate, DataDictionary dataDictionary)", "testcase": false, "constructor": false, "invocations": ["trace", "orElseThrow", "findFirst", "map", "filter", "stream", "getDataFields", "equals", "getValue", "getName", "getValue", "getField", "getValue", "getField", "getKiePMMLSimplePredicate", "getKiePMMLSimpleSetPredicate", "getKiePMMLCompoundPredicate", "getKiePMMLTruePredicate", "getKiePMMLFalsePredicate", "getName", "getClass"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}