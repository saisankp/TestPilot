{"test_class": {"identifier": "OpenFlowControllerImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "OpenFlowSwitch switch1;", "modifier": "", "type": "OpenFlowSwitch", "declarator": "switch1", "var_name": "switch1"}, {"original_string": "Dpid dpid1;", "modifier": "", "type": "Dpid", "declarator": "dpid1", "var_name": "dpid1"}, {"original_string": "OpenFlowSwitch switch2;", "modifier": "", "type": "OpenFlowSwitch", "declarator": "switch2", "var_name": "switch2"}, {"original_string": "Dpid dpid2;", "modifier": "", "type": "Dpid", "declarator": "dpid2", "var_name": "dpid2"}, {"original_string": "OpenFlowSwitch switch3;", "modifier": "", "type": "OpenFlowSwitch", "declarator": "switch3", "var_name": "switch3"}, {"original_string": "Dpid dpid3;", "modifier": "", "type": "Dpid", "declarator": "dpid3", "var_name": "dpid3"}, {"original_string": "OpenFlowControllerImpl controller;", "modifier": "", "type": "OpenFlowControllerImpl", "declarator": "controller", "var_name": "controller"}, {"original_string": "OpenFlowControllerImpl.OpenFlowSwitchAgent agent;", "modifier": "", "type": "OpenFlowControllerImpl.OpenFlowSwitchAgent", "declarator": "agent", "var_name": "agent"}, {"original_string": "TestSwitchListener switchListener;", "modifier": "", "type": "TestSwitchListener", "declarator": "switchListener", "var_name": "switchListener"}], "file": "protocols/openflow/ctl/src/test/java/org/onosproject/openflow/controller/impl/OpenFlowControllerImplTest.java"}, "test_case": {"identifier": "testRoleSetting", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRoleSetting() {\n        agent.addConnectedSwitch(dpid2, switch2);\n\n        // check that state can be changed for a connected switch\n        assertThat(switch2.getRole(), is(RoleState.MASTER));\n        controller.setRole(dpid2, RoleState.EQUAL);\n        assertThat(switch2.getRole(), is(RoleState.EQUAL));\n\n        // check that changing state on an unconnected switch does not crash\n        controller.setRole(dpid3, RoleState.SLAVE);\n    }", "signature": "void testRoleSetting()", "full_signature": "@Test public void testRoleSetting()", "class_method_signature": "OpenFlowControllerImplTest.testRoleSetting()", "testcase": true, "constructor": false, "invocations": ["addConnectedSwitch", "assertThat", "getRole", "is", "setRole", "assertThat", "getRole", "is", "setRole"]}, "focal_class": {"identifier": "OpenFlowControllerImpl", "superclass": "", "interfaces": "implements OpenFlowController", "fields": [{"original_string": "private static final String APP_ID = \"org.onosproject.openflow-base\";", "modifier": "private static final", "type": "String", "declarator": "APP_ID = \"org.onosproject.openflow-base\"", "var_name": "APP_ID"}, {"original_string": "private static final String DEFAULT_OFPORT = \"6633,6653\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_OFPORT = \"6633,6653\"", "var_name": "DEFAULT_OFPORT"}, {"original_string": "private static final int DEFAULT_WORKER_THREADS = 16;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_WORKER_THREADS = 16", "var_name": "DEFAULT_WORKER_THREADS"}, {"original_string": "private static final Logger log =\n            LoggerFactory.getLogger(OpenFlowControllerImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "log =\n            LoggerFactory.getLogger(OpenFlowControllerImpl.class)", "var_name": "log"}, {"original_string": "@Reference(cardinality = ReferenceCardinality.MANDATORY_UNARY)\n    protected CoreService coreService;", "modifier": "@Reference(cardinality = ReferenceCardinality.MANDATORY_UNARY)\n    protected", "type": "CoreService", "declarator": "coreService", "var_name": "coreService"}, {"original_string": "@Reference(cardinality = ReferenceCardinality.MANDATORY_UNARY)\n    protected DriverService driverService;", "modifier": "@Reference(cardinality = ReferenceCardinality.MANDATORY_UNARY)\n    protected", "type": "DriverService", "declarator": "driverService", "var_name": "driverService"}, {"original_string": "@Reference(cardinality = ReferenceCardinality.MANDATORY_UNARY)\n    protected DefaultDriverProviderService defaultDriverProviderService;", "modifier": "@Reference(cardinality = ReferenceCardinality.MANDATORY_UNARY)\n    protected", "type": "DefaultDriverProviderService", "declarator": "defaultDriverProviderService", "var_name": "defaultDriverProviderService"}, {"original_string": "@Reference(cardinality = ReferenceCardinality.MANDATORY_UNARY)\n    protected ComponentConfigService cfgService;", "modifier": "@Reference(cardinality = ReferenceCardinality.MANDATORY_UNARY)\n    protected", "type": "ComponentConfigService", "declarator": "cfgService", "var_name": "cfgService"}, {"original_string": "@Property(name = \"openflowPorts\", value = DEFAULT_OFPORT,\n            label = \"Port numbers (comma separated) used by OpenFlow protocol; default is 6633,6653\")\n    private String openflowPorts = DEFAULT_OFPORT;", "modifier": "@Property(name = \"openflowPorts\", value = DEFAULT_OFPORT,\n            label = \"Port numbers (comma separated) used by OpenFlow protocol; default is 6633,6653\")\n    private", "type": "String", "declarator": "openflowPorts = DEFAULT_OFPORT", "var_name": "openflowPorts"}, {"original_string": "@Property(name = \"workerThreads\", intValue = DEFAULT_WORKER_THREADS,\n            label = \"Number of controller worker threads; default is 16\")\n    private int workerThreads = DEFAULT_WORKER_THREADS;", "modifier": "@Property(name = \"workerThreads\", intValue = DEFAULT_WORKER_THREADS,\n            label = \"Number of controller worker threads; default is 16\")\n    private", "type": "int", "declarator": "workerThreads = DEFAULT_WORKER_THREADS", "var_name": "workerThreads"}, {"original_string": "protected ExecutorService executorMsgs =\n            Executors.newFixedThreadPool(32, groupedThreads(\"onos/of\", \"event-stats-%d\", log));", "modifier": "protected", "type": "ExecutorService", "declarator": "executorMsgs =\n            Executors.newFixedThreadPool(32, groupedThreads(\"onos/of\", \"event-stats-%d\", log))", "var_name": "executorMsgs"}, {"original_string": "private final ExecutorService executorBarrier =\n            Executors.newFixedThreadPool(4, groupedThreads(\"onos/of\", \"event-barrier-%d\", log));", "modifier": "private final", "type": "ExecutorService", "declarator": "executorBarrier =\n            Executors.newFixedThreadPool(4, groupedThreads(\"onos/of\", \"event-barrier-%d\", log))", "var_name": "executorBarrier"}, {"original_string": "protected ConcurrentMap<Dpid, OpenFlowSwitch> connectedSwitches =\n            new ConcurrentHashMap<>();", "modifier": "protected", "type": "ConcurrentMap<Dpid, OpenFlowSwitch>", "declarator": "connectedSwitches =\n            new ConcurrentHashMap<>()", "var_name": "connectedSwitches"}, {"original_string": "protected ConcurrentMap<Dpid, OpenFlowSwitch> activeMasterSwitches =\n            new ConcurrentHashMap<>();", "modifier": "protected", "type": "ConcurrentMap<Dpid, OpenFlowSwitch>", "declarator": "activeMasterSwitches =\n            new ConcurrentHashMap<>()", "var_name": "activeMasterSwitches"}, {"original_string": "protected ConcurrentMap<Dpid, OpenFlowSwitch> activeEqualSwitches =\n            new ConcurrentHashMap<>();", "modifier": "protected", "type": "ConcurrentMap<Dpid, OpenFlowSwitch>", "declarator": "activeEqualSwitches =\n            new ConcurrentHashMap<>()", "var_name": "activeEqualSwitches"}, {"original_string": "protected OpenFlowSwitchAgent agent = new OpenFlowSwitchAgent();", "modifier": "protected", "type": "OpenFlowSwitchAgent", "declarator": "agent = new OpenFlowSwitchAgent()", "var_name": "agent"}, {"original_string": "protected Set<OpenFlowSwitchListener> ofSwitchListener = new CopyOnWriteArraySet<>();", "modifier": "protected", "type": "Set<OpenFlowSwitchListener>", "declarator": "ofSwitchListener = new CopyOnWriteArraySet<>()", "var_name": "ofSwitchListener"}, {"original_string": "protected Multimap<Integer, PacketListener> ofPacketListener =\n            ArrayListMultimap.create();", "modifier": "protected", "type": "Multimap<Integer, PacketListener>", "declarator": "ofPacketListener =\n            ArrayListMultimap.create()", "var_name": "ofPacketListener"}, {"original_string": "protected Multimap<Integer, OpenFlowStatisticsListener> ofStatsListener\n            = ArrayListMultimap.create();", "modifier": "protected", "type": "Multimap<Integer, OpenFlowStatisticsListener>", "declarator": "ofStatsListener\n            = ArrayListMultimap.create()", "var_name": "ofStatsListener"}, {"original_string": "protected Multimap<Integer, OpenFlowAsynchronousEventListener> ofAsyncListener\n            = ArrayListMultimap.create();", "modifier": "protected", "type": "Multimap<Integer, OpenFlowAsynchronousEventListener>", "declarator": "ofAsyncListener\n            = ArrayListMultimap.create()", "var_name": "ofAsyncListener"}, {"original_string": "private final ExecutorService executorFWMsgs =\n            Executors.newFixedThreadPool(32, groupedThreads(\"onos/of\", \"event-framework-%d\"));", "modifier": "private final", "type": "ExecutorService", "declarator": "executorFWMsgs =\n            Executors.newFixedThreadPool(32, groupedThreads(\"onos/of\", \"event-framework-%d\"))", "var_name": "executorFWMsgs"}, {"original_string": "protected Set<OpenFlowEventListener> ofEventListener = new CopyOnWriteArraySet<>();", "modifier": "protected", "type": "Set<OpenFlowEventListener>", "declarator": "ofEventListener = new CopyOnWriteArraySet<>()", "var_name": "ofEventListener"}, {"original_string": "protected Set<OpenFlowMessageListener> ofMessageListener = new CopyOnWriteArraySet<>();", "modifier": "protected", "type": "Set<OpenFlowMessageListener>", "declarator": "ofMessageListener = new CopyOnWriteArraySet<>()", "var_name": "ofMessageListener"}, {"original_string": "protected Multimap<Dpid, OFFlowStatsEntry> fullFlowStats =\n            ArrayListMultimap.create();", "modifier": "protected", "type": "Multimap<Dpid, OFFlowStatsEntry>", "declarator": "fullFlowStats =\n            ArrayListMultimap.create()", "var_name": "fullFlowStats"}, {"original_string": "protected Multimap<Dpid, OFTableStatsEntry> fullTableStats =\n            ArrayListMultimap.create();", "modifier": "protected", "type": "Multimap<Dpid, OFTableStatsEntry>", "declarator": "fullTableStats =\n            ArrayListMultimap.create()", "var_name": "fullTableStats"}, {"original_string": "protected Multimap<Dpid, OFGroupStatsEntry> fullGroupStats =\n            ArrayListMultimap.create();", "modifier": "protected", "type": "Multimap<Dpid, OFGroupStatsEntry>", "declarator": "fullGroupStats =\n            ArrayListMultimap.create()", "var_name": "fullGroupStats"}, {"original_string": "protected Multimap<Dpid, OFGroupDescStatsEntry> fullGroupDescStats =\n            ArrayListMultimap.create();", "modifier": "protected", "type": "Multimap<Dpid, OFGroupDescStatsEntry>", "declarator": "fullGroupDescStats =\n            ArrayListMultimap.create()", "var_name": "fullGroupDescStats"}, {"original_string": "protected Multimap<Dpid, OFPortStatsEntry> fullPortStats =\n            ArrayListMultimap.create();", "modifier": "protected", "type": "Multimap<Dpid, OFPortStatsEntry>", "declarator": "fullPortStats =\n            ArrayListMultimap.create()", "var_name": "fullPortStats"}, {"original_string": "private final Controller ctrl = new Controller();", "modifier": "private final", "type": "Controller", "declarator": "ctrl = new Controller()", "var_name": "ctrl"}, {"original_string": "public long packetIn;", "modifier": "public", "type": "long", "declarator": "packetIn", "var_name": "packetIn"}], "methods": [{"identifier": "activate", "parameters": "(ComponentContext context)", "modifiers": "@Activate public", "return": "void", "signature": "void activate(ComponentContext context)", "full_signature": "@Activate public void activate(ComponentContext context)", "class_method_signature": "OpenFlowControllerImpl.activate(ComponentContext context)", "testcase": false, "constructor": false}, {"identifier": "cleanup", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void cleanup()", "full_signature": "private void cleanup()", "class_method_signature": "OpenFlowControllerImpl.cleanup()", "testcase": false, "constructor": false}, {"identifier": "deactivate", "parameters": "()", "modifiers": "@Deactivate public", "return": "void", "signature": "void deactivate()", "full_signature": "@Deactivate public void deactivate()", "class_method_signature": "OpenFlowControllerImpl.deactivate()", "testcase": false, "constructor": false}, {"identifier": "modified", "parameters": "(ComponentContext context)", "modifiers": "@Modified public", "return": "void", "signature": "void modified(ComponentContext context)", "full_signature": "@Modified public void modified(ComponentContext context)", "class_method_signature": "OpenFlowControllerImpl.modified(ComponentContext context)", "testcase": false, "constructor": false}, {"identifier": "getSwitches", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<OpenFlowSwitch>", "signature": "Iterable<OpenFlowSwitch> getSwitches()", "full_signature": "@Override public Iterable<OpenFlowSwitch> getSwitches()", "class_method_signature": "OpenFlowControllerImpl.getSwitches()", "testcase": false, "constructor": false}, {"identifier": "getMasterSwitches", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<OpenFlowSwitch>", "signature": "Iterable<OpenFlowSwitch> getMasterSwitches()", "full_signature": "@Override public Iterable<OpenFlowSwitch> getMasterSwitches()", "class_method_signature": "OpenFlowControllerImpl.getMasterSwitches()", "testcase": false, "constructor": false}, {"identifier": "getEqualSwitches", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<OpenFlowSwitch>", "signature": "Iterable<OpenFlowSwitch> getEqualSwitches()", "full_signature": "@Override public Iterable<OpenFlowSwitch> getEqualSwitches()", "class_method_signature": "OpenFlowControllerImpl.getEqualSwitches()", "testcase": false, "constructor": false}, {"identifier": "getSwitch", "parameters": "(Dpid dpid)", "modifiers": "@Override public", "return": "OpenFlowSwitch", "signature": "OpenFlowSwitch getSwitch(Dpid dpid)", "full_signature": "@Override public OpenFlowSwitch getSwitch(Dpid dpid)", "class_method_signature": "OpenFlowControllerImpl.getSwitch(Dpid dpid)", "testcase": false, "constructor": false}, {"identifier": "getMasterSwitch", "parameters": "(Dpid dpid)", "modifiers": "@Override public", "return": "OpenFlowSwitch", "signature": "OpenFlowSwitch getMasterSwitch(Dpid dpid)", "full_signature": "@Override public OpenFlowSwitch getMasterSwitch(Dpid dpid)", "class_method_signature": "OpenFlowControllerImpl.getMasterSwitch(Dpid dpid)", "testcase": false, "constructor": false}, {"identifier": "getEqualSwitch", "parameters": "(Dpid dpid)", "modifiers": "@Override public", "return": "OpenFlowSwitch", "signature": "OpenFlowSwitch getEqualSwitch(Dpid dpid)", "full_signature": "@Override public OpenFlowSwitch getEqualSwitch(Dpid dpid)", "class_method_signature": "OpenFlowControllerImpl.getEqualSwitch(Dpid dpid)", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(OpenFlowSwitchListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void addListener(OpenFlowSwitchListener listener)", "full_signature": "@Override public void addListener(OpenFlowSwitchListener listener)", "class_method_signature": "OpenFlowControllerImpl.addListener(OpenFlowSwitchListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(OpenFlowSwitchListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void removeListener(OpenFlowSwitchListener listener)", "full_signature": "@Override public void removeListener(OpenFlowSwitchListener listener)", "class_method_signature": "OpenFlowControllerImpl.removeListener(OpenFlowSwitchListener listener)", "testcase": false, "constructor": false}, {"identifier": "addMessageListener", "parameters": "(OpenFlowMessageListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void addMessageListener(OpenFlowMessageListener listener)", "full_signature": "@Override public void addMessageListener(OpenFlowMessageListener listener)", "class_method_signature": "OpenFlowControllerImpl.addMessageListener(OpenFlowMessageListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeMessageListener", "parameters": "(OpenFlowMessageListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void removeMessageListener(OpenFlowMessageListener listener)", "full_signature": "@Override public void removeMessageListener(OpenFlowMessageListener listener)", "class_method_signature": "OpenFlowControllerImpl.removeMessageListener(OpenFlowMessageListener listener)", "testcase": false, "constructor": false}, {"identifier": "addPacketListener", "parameters": "(int priority, PacketListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void addPacketListener(int priority, PacketListener listener)", "full_signature": "@Override public void addPacketListener(int priority, PacketListener listener)", "class_method_signature": "OpenFlowControllerImpl.addPacketListener(int priority, PacketListener listener)", "testcase": false, "constructor": false}, {"identifier": "removePacketListener", "parameters": "(PacketListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void removePacketListener(PacketListener listener)", "full_signature": "@Override public void removePacketListener(PacketListener listener)", "class_method_signature": "OpenFlowControllerImpl.removePacketListener(PacketListener listener)", "testcase": false, "constructor": false}, {"identifier": "addEventListener", "parameters": "(OpenFlowEventListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void addEventListener(OpenFlowEventListener listener)", "full_signature": "@Override public void addEventListener(OpenFlowEventListener listener)", "class_method_signature": "OpenFlowControllerImpl.addEventListener(OpenFlowEventListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeEventListener", "parameters": "(OpenFlowEventListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void removeEventListener(OpenFlowEventListener listener)", "full_signature": "@Override public void removeEventListener(OpenFlowEventListener listener)", "class_method_signature": "OpenFlowControllerImpl.removeEventListener(OpenFlowEventListener listener)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(Dpid dpid, OFMessage msg)", "modifiers": "@Override public", "return": "void", "signature": "void write(Dpid dpid, OFMessage msg)", "full_signature": "@Override public void write(Dpid dpid, OFMessage msg)", "class_method_signature": "OpenFlowControllerImpl.write(Dpid dpid, OFMessage msg)", "testcase": false, "constructor": false}, {"identifier": "processPacket", "parameters": "(Dpid dpid, OFMessage msg)", "modifiers": "@Override public", "return": "void", "signature": "void processPacket(Dpid dpid, OFMessage msg)", "full_signature": "@Override public void processPacket(Dpid dpid, OFMessage msg)", "class_method_signature": "OpenFlowControllerImpl.processPacket(Dpid dpid, OFMessage msg)", "testcase": false, "constructor": false}, {"identifier": "publishFlowStats", "parameters": "(Dpid dpid,\n                                                                       OFFlowStatsReply reply)", "modifiers": "private synchronized", "return": "Collection<OFFlowStatsEntry>", "signature": "Collection<OFFlowStatsEntry> publishFlowStats(Dpid dpid,\n                                                                       OFFlowStatsReply reply)", "full_signature": "private synchronized Collection<OFFlowStatsEntry> publishFlowStats(Dpid dpid,\n                                                                       OFFlowStatsReply reply)", "class_method_signature": "OpenFlowControllerImpl.publishFlowStats(Dpid dpid,\n                                                                       OFFlowStatsReply reply)", "testcase": false, "constructor": false}, {"identifier": "publishTableStats", "parameters": "(Dpid dpid,\n                                                                         OFTableStatsReply reply)", "modifiers": "private synchronized", "return": "Collection<OFTableStatsEntry>", "signature": "Collection<OFTableStatsEntry> publishTableStats(Dpid dpid,\n                                                                         OFTableStatsReply reply)", "full_signature": "private synchronized Collection<OFTableStatsEntry> publishTableStats(Dpid dpid,\n                                                                         OFTableStatsReply reply)", "class_method_signature": "OpenFlowControllerImpl.publishTableStats(Dpid dpid,\n                                                                         OFTableStatsReply reply)", "testcase": false, "constructor": false}, {"identifier": "publishGroupStats", "parameters": "(Dpid dpid,\n                                                                         OFGroupStatsReply reply)", "modifiers": "private synchronized", "return": "Collection<OFGroupStatsEntry>", "signature": "Collection<OFGroupStatsEntry> publishGroupStats(Dpid dpid,\n                                                                         OFGroupStatsReply reply)", "full_signature": "private synchronized Collection<OFGroupStatsEntry> publishGroupStats(Dpid dpid,\n                                                                         OFGroupStatsReply reply)", "class_method_signature": "OpenFlowControllerImpl.publishGroupStats(Dpid dpid,\n                                                                         OFGroupStatsReply reply)", "testcase": false, "constructor": false}, {"identifier": "publishGroupDescStats", "parameters": "(Dpid dpid,\n                                                                                 OFGroupDescStatsReply reply)", "modifiers": "private synchronized", "return": "Collection<OFGroupDescStatsEntry>", "signature": "Collection<OFGroupDescStatsEntry> publishGroupDescStats(Dpid dpid,\n                                                                                 OFGroupDescStatsReply reply)", "full_signature": "private synchronized Collection<OFGroupDescStatsEntry> publishGroupDescStats(Dpid dpid,\n                                                                                 OFGroupDescStatsReply reply)", "class_method_signature": "OpenFlowControllerImpl.publishGroupDescStats(Dpid dpid,\n                                                                                 OFGroupDescStatsReply reply)", "testcase": false, "constructor": false}, {"identifier": "publishPortStats", "parameters": "(Dpid dpid,\n                                                                       OFPortStatsReply reply)", "modifiers": "private synchronized", "return": "Collection<OFPortStatsEntry>", "signature": "Collection<OFPortStatsEntry> publishPortStats(Dpid dpid,\n                                                                       OFPortStatsReply reply)", "full_signature": "private synchronized Collection<OFPortStatsEntry> publishPortStats(Dpid dpid,\n                                                                       OFPortStatsReply reply)", "class_method_signature": "OpenFlowControllerImpl.publishPortStats(Dpid dpid,\n                                                                       OFPortStatsReply reply)", "testcase": false, "constructor": false}, {"identifier": "setRole", "parameters": "(Dpid dpid, RoleState role)", "modifiers": "@Override public", "return": "void", "signature": "void setRole(Dpid dpid, RoleState role)", "full_signature": "@Override public void setRole(Dpid dpid, RoleState role)", "class_method_signature": "OpenFlowControllerImpl.setRole(Dpid dpid, RoleState role)", "testcase": false, "constructor": false}, {"identifier": "addStatisticsListener", "parameters": "(int priority, OpenFlowStatisticsListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void addStatisticsListener(int priority, OpenFlowStatisticsListener listener)", "full_signature": "@Override public void addStatisticsListener(int priority, OpenFlowStatisticsListener listener)", "class_method_signature": "OpenFlowControllerImpl.addStatisticsListener(int priority, OpenFlowStatisticsListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeStatisticsListener", "parameters": "(OpenFlowStatisticsListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void removeStatisticsListener(OpenFlowStatisticsListener listener)", "full_signature": "@Override public void removeStatisticsListener(OpenFlowStatisticsListener listener)", "class_method_signature": "OpenFlowControllerImpl.removeStatisticsListener(OpenFlowStatisticsListener listener)", "testcase": false, "constructor": false}, {"identifier": "addAsynchronousListener", "parameters": "(int priority, OpenFlowAsynchronousEventListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void addAsynchronousListener(int priority, OpenFlowAsynchronousEventListener listener)", "full_signature": "@Override public void addAsynchronousListener(int priority, OpenFlowAsynchronousEventListener listener)", "class_method_signature": "OpenFlowControllerImpl.addAsynchronousListener(int priority, OpenFlowAsynchronousEventListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeAsynchronousListener", "parameters": "(OpenFlowAsynchronousEventListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void removeAsynchronousListener(OpenFlowAsynchronousEventListener listener)", "full_signature": "@Override public void removeAsynchronousListener(OpenFlowAsynchronousEventListener listener)", "class_method_signature": "OpenFlowControllerImpl.removeAsynchronousListener(OpenFlowAsynchronousEventListener listener)", "testcase": false, "constructor": false}], "file": "protocols/openflow/ctl/src/main/java/org/onosproject/openflow/controller/impl/OpenFlowControllerImpl.java"}, "focal_method": {"identifier": "setRole", "parameters": "(Dpid dpid, RoleState role)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void setRole(Dpid dpid, RoleState role) {\n        final OpenFlowSwitch sw = getSwitch(dpid);\n        if (sw == null) {\n            log.debug(\"Switch not connected. Ignoring setRole({}, {})\", dpid, role);\n            return;\n        }\n        sw.setRole(role);\n    }", "signature": "void setRole(Dpid dpid, RoleState role)", "full_signature": "@Override public void setRole(Dpid dpid, RoleState role)", "class_method_signature": "OpenFlowControllerImpl.setRole(Dpid dpid, RoleState role)", "testcase": false, "constructor": false, "invocations": ["getSwitch", "debug", "setRole"]}, "repository": {"repo_id": 95081481, "url": "https://github.com/shlee89/athena", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 11, "size": 31719, "license": "licensed"}}