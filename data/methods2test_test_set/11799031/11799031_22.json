{"test_class": {"identifier": "PostgresDatabaseTest", "superclass": "extends AbstractPostgresDatabaseTest", "interfaces": "", "fields": [], "file": "gdp-process-wps/src/test/java/org/n52/wps/server/database/PostgresDatabaseTest.java"}, "test_case": {"identifier": "testInsertResponse", "parameters": "()", "modifiers": "@Test @Ignore public", "return": "void", "body": "@Test\n\t@Ignore\n\tpublic void testInsertResponse() throws Exception {\n\t\tPostgresDatabase.getInstance().insertResponse(\"test\", PostgresDatabaseTest.class.getClassLoader().getResourceAsStream(\"succeeded.xml\"));\n\t\t// performing some assertions\n\t\tConnection conn = ds.getConnection();\n\t\tfinal Statement statement = conn.createStatement();\n\t\tassertThat(statement.execute(\"SELECT * FROM RESPONSE;\"), is(true));\n\t\tassertThat(statement.getResultSet().next(), is(true));\n\t\tassertThat(statement.getResultSet().getString(\"REQUEST_ID\"), is(\"test\"));\n\t}", "signature": "void testInsertResponse()", "full_signature": "@Test @Ignore public void testInsertResponse()", "class_method_signature": "PostgresDatabaseTest.testInsertResponse()", "testcase": true, "constructor": false, "invocations": ["insertResponse", "getInstance", "getResourceAsStream", "getClassLoader", "getConnection", "createStatement", "assertThat", "execute", "is", "assertThat", "next", "getResultSet", "is", "assertThat", "getString", "getResultSet", "is"]}, "focal_class": {"identifier": "PostgresDatabase", "superclass": "extends AbstractDatabase", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(PostgresDatabase.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(PostgresDatabase.class)", "var_name": "LOGGER"}, {"original_string": "private static final String KEY_DATABASE_ROOT = \"org.n52.wps.server.database\";", "modifier": "private static final", "type": "String", "declarator": "KEY_DATABASE_ROOT = \"org.n52.wps.server.database\"", "var_name": "KEY_DATABASE_ROOT"}, {"original_string": "private static final String KEY_DATABASE_PATH = \"path\";", "modifier": "private static final", "type": "String", "declarator": "KEY_DATABASE_PATH = \"path\"", "var_name": "KEY_DATABASE_PATH"}, {"original_string": "private static final String KEY_DATABASE_WIPE_ENABLED = \"wipe.enabled\";", "modifier": "private static final", "type": "String", "declarator": "KEY_DATABASE_WIPE_ENABLED = \"wipe.enabled\"", "var_name": "KEY_DATABASE_WIPE_ENABLED"}, {"original_string": "private static final String KEY_DATABASE_WIPE_PERIOD = \"wipe.period\";", "modifier": "private static final", "type": "String", "declarator": "KEY_DATABASE_WIPE_PERIOD = \"wipe.period\"", "var_name": "KEY_DATABASE_WIPE_PERIOD"}, {"original_string": "private static final String KEY_DATABASE_WIPE_THRESHOLD = \"wipe.threshold\";", "modifier": "private static final", "type": "String", "declarator": "KEY_DATABASE_WIPE_THRESHOLD = \"wipe.threshold\"", "var_name": "KEY_DATABASE_WIPE_THRESHOLD"}, {"original_string": "private static final boolean DEFAULT_DATABASE_WIPE_ENABLED = true;", "modifier": "private static final", "type": "boolean", "declarator": "DEFAULT_DATABASE_WIPE_ENABLED = true", "var_name": "DEFAULT_DATABASE_WIPE_ENABLED"}, {"original_string": "private static final long DEFAULT_DATABASE_WIPE_PERIOD = 1000 * 60 * 60;", "modifier": "private static final", "type": "long", "declarator": "DEFAULT_DATABASE_WIPE_PERIOD = 1000 * 60 * 60", "var_name": "DEFAULT_DATABASE_WIPE_PERIOD"}, {"original_string": "private static final long DEFAULT_DATABASE_WIPE_THRESHOLD = 1000 * 60 * 60 * 24 * 7;", "modifier": "private static final", "type": "long", "declarator": "DEFAULT_DATABASE_WIPE_THRESHOLD = 1000 * 60 * 60 * 24 * 7", "var_name": "DEFAULT_DATABASE_WIPE_THRESHOLD"}, {"original_string": "private static final String FILE_URI_PREFIX = \"file://\";", "modifier": "private static final", "type": "String", "declarator": "FILE_URI_PREFIX = \"file://\"", "var_name": "FILE_URI_PREFIX"}, {"original_string": "private static final String SUFFIX_GZIP = \"gz\";", "modifier": "private static final", "type": "String", "declarator": "SUFFIX_GZIP = \"gz\"", "var_name": "SUFFIX_GZIP"}, {"original_string": "private static final String DEFAULT_BASE_DIRECTORY\n\t\t= Joiner.on(File.separator).join(System.getProperty(\"java.io.tmpdir\", \".\"), \"Database\", \"Results\");", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_BASE_DIRECTORY\n\t\t= Joiner.on(File.separator).join(System.getProperty(\"java.io.tmpdir\", \".\"), \"Database\", \"Results\")", "var_name": "DEFAULT_BASE_DIRECTORY"}, {"original_string": "private static final ServerDocument.Server server = WPSConfig.getInstance().getWPSConfig().getServer();", "modifier": "private static final", "type": "ServerDocument.Server", "declarator": "server = WPSConfig.getInstance().getWPSConfig().getServer()", "var_name": "server"}, {"original_string": "private static final String baseResultURL = String.format(\"%s://%s:%s/%s/RetrieveResultServlet?id=\",\n\t\t\tserver.getProtocol(), server.getHostname(), server.getHostport(), server.getWebappPath());", "modifier": "private static final", "type": "String", "declarator": "baseResultURL = String.format(\"%s://%s:%s/%s/RetrieveResultServlet?id=\",\n\t\t\tserver.getProtocol(), server.getHostname(), server.getHostport(), server.getWebappPath())", "var_name": "baseResultURL"}, {"original_string": "private static String connectionURL;", "modifier": "private static", "type": "String", "declarator": "connectionURL", "var_name": "connectionURL"}, {"original_string": "private static Path BASE_DIRECTORY;", "modifier": "private static", "type": "Path", "declarator": "BASE_DIRECTORY", "var_name": "BASE_DIRECTORY"}, {"original_string": "private static PostgresDatabase instance;", "modifier": "private static", "type": "PostgresDatabase", "declarator": "instance", "var_name": "instance"}, {"original_string": "private static ConnectionHandler connectionHandler;", "modifier": "private static", "type": "ConnectionHandler", "declarator": "connectionHandler", "var_name": "connectionHandler"}, {"original_string": "private final static  boolean SAVE_RESULTS_TO_DB = Boolean.parseBoolean(getDatabaseProperties(\"saveResultsToDB\"));", "modifier": "private final static", "type": "boolean", "declarator": "SAVE_RESULTS_TO_DB = Boolean.parseBoolean(getDatabaseProperties(\"saveResultsToDB\"))", "var_name": "SAVE_RESULTS_TO_DB"}, {"original_string": "protected final Object storeResponseLock = new Object();", "modifier": "protected final", "type": "Object", "declarator": "storeResponseLock = new Object()", "var_name": "storeResponseLock"}, {"original_string": "private static Timer wipeTimer;", "modifier": "private static", "type": "Timer", "declarator": "wipeTimer", "var_name": "wipeTimer"}, {"original_string": "private final String DATABASE_NAME;", "modifier": "private final", "type": "String", "declarator": "DATABASE_NAME", "var_name": "DATABASE_NAME"}, {"original_string": "private static final String REQUEST_TABLE_NAME = \"request\";", "modifier": "private static final", "type": "String", "declarator": "REQUEST_TABLE_NAME = \"request\"", "var_name": "REQUEST_TABLE_NAME"}, {"original_string": "private static final String INPUT_TABLE_NAME = \"input\";", "modifier": "private static final", "type": "String", "declarator": "INPUT_TABLE_NAME = \"input\"", "var_name": "INPUT_TABLE_NAME"}, {"original_string": "private static final String OUTPUT_DEF_TABLE_NAME = \"output_definition\";", "modifier": "private static final", "type": "String", "declarator": "OUTPUT_DEF_TABLE_NAME = \"output_definition\"", "var_name": "OUTPUT_DEF_TABLE_NAME"}, {"original_string": "private static final String OUTPUT_TABLE_NAME = \"output\";", "modifier": "private static final", "type": "String", "declarator": "OUTPUT_TABLE_NAME = \"output\"", "var_name": "OUTPUT_TABLE_NAME"}, {"original_string": "private static final String RESPONSE_TABLE_NAME = \"response\";", "modifier": "private static final", "type": "String", "declarator": "RESPONSE_TABLE_NAME = \"response\"", "var_name": "RESPONSE_TABLE_NAME"}, {"original_string": "private static final String INSERT_REQUEST_STATEMENT = \"INSERT INTO \" + REQUEST_TABLE_NAME + \" VALUES(?, ?, ?)\";", "modifier": "private static final", "type": "String", "declarator": "INSERT_REQUEST_STATEMENT = \"INSERT INTO \" + REQUEST_TABLE_NAME + \" VALUES(?, ?, ?)\"", "var_name": "INSERT_REQUEST_STATEMENT"}, {"original_string": "private static final String INSERT_INPUT_STATEMENT = \"INSERT INTO \" + INPUT_TABLE_NAME + \" VALUES (?, ?, ?, ?)\";", "modifier": "private static final", "type": "String", "declarator": "INSERT_INPUT_STATEMENT = \"INSERT INTO \" + INPUT_TABLE_NAME + \" VALUES (?, ?, ?, ?)\"", "var_name": "INSERT_INPUT_STATEMENT"}, {"original_string": "private static final String INSERT_OUTPUT_DEF_STATEMENT = \"INSERT INTO \" + OUTPUT_DEF_TABLE_NAME + \" VALUES (?, ?, ?, ?)\";", "modifier": "private static final", "type": "String", "declarator": "INSERT_OUTPUT_DEF_STATEMENT = \"INSERT INTO \" + OUTPUT_DEF_TABLE_NAME + \" VALUES (?, ?, ?, ?)\"", "var_name": "INSERT_OUTPUT_DEF_STATEMENT"}, {"original_string": "private static final String INSERT_RESPONSE_STATEMENT = \"INSERT INTO \" + RESPONSE_TABLE_NAME + \" VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\";", "modifier": "private static final", "type": "String", "declarator": "INSERT_RESPONSE_STATEMENT = \"INSERT INTO \" + RESPONSE_TABLE_NAME + \" VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\"", "var_name": "INSERT_RESPONSE_STATEMENT"}, {"original_string": "private static final String INSERT_OUTPUT_STATEMENT = \"INSERT INTO \" + OUTPUT_TABLE_NAME + \" VALUES (?, ?, ?, ?, ?, ?, ?, ?)\";", "modifier": "private static final", "type": "String", "declarator": "INSERT_OUTPUT_STATEMENT = \"INSERT INTO \" + OUTPUT_TABLE_NAME + \" VALUES (?, ?, ?, ?, ?, ?, ?, ?)\"", "var_name": "INSERT_OUTPUT_STATEMENT"}, {"original_string": "private static final String UPDATE_RESPONSE_STATEMENT = \"UPDATE \" + RESPONSE_TABLE_NAME + \" SET STATUS=?,PERCENT_COMPLETE=?,END_TIME=?,EXCEPTION_TEXT=? WHERE REQUEST_ID = ?\";", "modifier": "private static final", "type": "String", "declarator": "UPDATE_RESPONSE_STATEMENT = \"UPDATE \" + RESPONSE_TABLE_NAME + \" SET STATUS=?,PERCENT_COMPLETE=?,END_TIME=?,EXCEPTION_TEXT=? WHERE REQUEST_ID = ?\"", "var_name": "UPDATE_RESPONSE_STATEMENT"}, {"original_string": "private static final String SELECT_REQUEST_STATEMENT = \"SELECT * FROM \" + REQUEST_TABLE_NAME + \" WHERE REQUEST_ID = ?\";", "modifier": "private static final", "type": "String", "declarator": "SELECT_REQUEST_STATEMENT = \"SELECT * FROM \" + REQUEST_TABLE_NAME + \" WHERE REQUEST_ID = ?\"", "var_name": "SELECT_REQUEST_STATEMENT"}, {"original_string": "private static final String SELECT_RESPONSE_STATEMENT = \"SELECT * FROM \" + RESPONSE_TABLE_NAME + \" WHERE REQUEST_ID = ?\";", "modifier": "private static final", "type": "String", "declarator": "SELECT_RESPONSE_STATEMENT = \"SELECT * FROM \" + RESPONSE_TABLE_NAME + \" WHERE REQUEST_ID = ?\"", "var_name": "SELECT_RESPONSE_STATEMENT"}, {"original_string": "private static final String SELECT_OUTPUT_STATEMENT = \"SELECT * FROM \" + OUTPUT_TABLE_NAME + \" WHERE OUTPUT_ID = ?\";", "modifier": "private static final", "type": "String", "declarator": "SELECT_OUTPUT_STATEMENT = \"SELECT * FROM \" + OUTPUT_TABLE_NAME + \" WHERE OUTPUT_ID = ?\"", "var_name": "SELECT_OUTPUT_STATEMENT"}, {"original_string": "private static final String SELECT_ALL_OUTPUT_STATEMENT = \"SELECT * FROM \" + OUTPUT_TABLE_NAME + \", \" + RESPONSE_TABLE_NAME\n\t\t\t+ \" WHERE \" + OUTPUT_TABLE_NAME + \".RESPONSE_ID=\" + RESPONSE_TABLE_NAME + \".ID AND \"\n\t\t\t+ RESPONSE_TABLE_NAME + \".REQUEST_ID=?\";", "modifier": "private static final", "type": "String", "declarator": "SELECT_ALL_OUTPUT_STATEMENT = \"SELECT * FROM \" + OUTPUT_TABLE_NAME + \", \" + RESPONSE_TABLE_NAME\n\t\t\t+ \" WHERE \" + OUTPUT_TABLE_NAME + \".RESPONSE_ID=\" + RESPONSE_TABLE_NAME + \".ID AND \"\n\t\t\t+ RESPONSE_TABLE_NAME + \".REQUEST_ID=?\"", "var_name": "SELECT_ALL_OUTPUT_STATEMENT"}, {"original_string": "private static final String SELECT_OLD_OUTPUT_STATEMENT = \"SELECT * FROM \" +\n\t\t\t\"(SELECT *, EXTRACT(EPOCH FROM INSERTED) * 1000 AS TIMESTAMP FROM \" + OUTPUT_TABLE_NAME + \") output_time WHERE TIMESTAMP < ?\";", "modifier": "private static final", "type": "String", "declarator": "SELECT_OLD_OUTPUT_STATEMENT = \"SELECT * FROM \" +\n\t\t\t\"(SELECT *, EXTRACT(EPOCH FROM INSERTED) * 1000 AS TIMESTAMP FROM \" + OUTPUT_TABLE_NAME + \") output_time WHERE TIMESTAMP < ?\"", "var_name": "SELECT_OLD_OUTPUT_STATEMENT"}], "methods": [{"identifier": "PostgresDatabase", "parameters": "()", "modifiers": "private", "return": "", "signature": " PostgresDatabase()", "full_signature": "private  PostgresDatabase()", "class_method_signature": "PostgresDatabase.PostgresDatabase()", "testcase": false, "constructor": true}, {"identifier": "initializeBaseDirectory", "parameters": "(String baseDirectoryPath)", "modifiers": "private", "return": "void", "signature": "void initializeBaseDirectory(String baseDirectoryPath)", "full_signature": "private void initializeBaseDirectory(String baseDirectoryPath)", "class_method_signature": "PostgresDatabase.initializeBaseDirectory(String baseDirectoryPath)", "testcase": false, "constructor": false}, {"identifier": "initializeDatabaseWiper", "parameters": "(PropertyUtil propertyUtil)", "modifiers": "private", "return": "void", "signature": "void initializeDatabaseWiper(PropertyUtil propertyUtil)", "full_signature": "private void initializeDatabaseWiper(PropertyUtil propertyUtil)", "class_method_signature": "PostgresDatabase.initializeDatabaseWiper(PropertyUtil propertyUtil)", "testcase": false, "constructor": false}, {"identifier": "initializeConnectionHandler", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initializeConnectionHandler()", "full_signature": "private void initializeConnectionHandler()", "class_method_signature": "PostgresDatabase.initializeConnectionHandler()", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "()", "modifiers": "public static synchronized", "return": "PostgresDatabase", "signature": "PostgresDatabase getInstance()", "full_signature": "public static synchronized PostgresDatabase getInstance()", "class_method_signature": "PostgresDatabase.getInstance()", "testcase": false, "constructor": false}, {"identifier": "getConnectionURL", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getConnectionURL()", "full_signature": "@Override public String getConnectionURL()", "class_method_signature": "PostgresDatabase.getConnectionURL()", "testcase": false, "constructor": false}, {"identifier": "getConnection", "parameters": "()", "modifiers": "@Override public", "return": "Connection", "signature": "Connection getConnection()", "full_signature": "@Override public Connection getConnection()", "class_method_signature": "PostgresDatabase.getConnection()", "testcase": false, "constructor": false}, {"identifier": "generateRetrieveResultURL", "parameters": "(String id)", "modifiers": "@Override public", "return": "String", "signature": "String generateRetrieveResultURL(String id)", "full_signature": "@Override public String generateRetrieveResultURL(String id)", "class_method_signature": "PostgresDatabase.generateRetrieveResultURL(String id)", "testcase": false, "constructor": false}, {"identifier": "insertRequest", "parameters": "(String id, InputStream inputStream, boolean xml)", "modifiers": "@Override public", "return": "void", "signature": "void insertRequest(String id, InputStream inputStream, boolean xml)", "full_signature": "@Override public void insertRequest(String id, InputStream inputStream, boolean xml)", "class_method_signature": "PostgresDatabase.insertRequest(String id, InputStream inputStream, boolean xml)", "testcase": false, "constructor": false}, {"identifier": "insertWpsRequest", "parameters": "(WpsRequest wpsReq)", "modifiers": "private", "return": "void", "signature": "void insertWpsRequest(WpsRequest wpsReq)", "full_signature": "private void insertWpsRequest(WpsRequest wpsReq)", "class_method_signature": "PostgresDatabase.insertWpsRequest(WpsRequest wpsReq)", "testcase": false, "constructor": false}, {"identifier": "insertRequest", "parameters": "(PreparedStatement insertRequestStatement, WpsRequest wpsReq)", "modifiers": "private", "return": "void", "signature": "void insertRequest(PreparedStatement insertRequestStatement, WpsRequest wpsReq)", "full_signature": "private void insertRequest(PreparedStatement insertRequestStatement, WpsRequest wpsReq)", "class_method_signature": "PostgresDatabase.insertRequest(PreparedStatement insertRequestStatement, WpsRequest wpsReq)", "testcase": false, "constructor": false}, {"identifier": "insertInputs", "parameters": "(List<WpsInput> inputs, PreparedStatement preparedStatement)", "modifiers": "private", "return": "void", "signature": "void insertInputs(List<WpsInput> inputs, PreparedStatement preparedStatement)", "full_signature": "private void insertInputs(List<WpsInput> inputs, PreparedStatement preparedStatement)", "class_method_signature": "PostgresDatabase.insertInputs(List<WpsInput> inputs, PreparedStatement preparedStatement)", "testcase": false, "constructor": false}, {"identifier": "insertOutputDefs", "parameters": "(List<WpsOutputDefinition> outputs, PreparedStatement preparedStatement)", "modifiers": "private", "return": "void", "signature": "void insertOutputDefs(List<WpsOutputDefinition> outputs, PreparedStatement preparedStatement)", "full_signature": "private void insertOutputDefs(List<WpsOutputDefinition> outputs, PreparedStatement preparedStatement)", "class_method_signature": "PostgresDatabase.insertOutputDefs(List<WpsOutputDefinition> outputs, PreparedStatement preparedStatement)", "testcase": false, "constructor": false}, {"identifier": "insertResponse", "parameters": "(String id, InputStream inputStream)", "modifiers": "@Override public", "return": "String", "signature": "String insertResponse(String id, InputStream inputStream)", "full_signature": "@Override public String insertResponse(String id, InputStream inputStream)", "class_method_signature": "PostgresDatabase.insertResponse(String id, InputStream inputStream)", "testcase": false, "constructor": false}, {"identifier": "insertWpsResponse", "parameters": "(WpsResponse wpsResp)", "modifiers": "private", "return": "void", "signature": "void insertWpsResponse(WpsResponse wpsResp)", "full_signature": "private void insertWpsResponse(WpsResponse wpsResp)", "class_method_signature": "PostgresDatabase.insertWpsResponse(WpsResponse wpsResp)", "testcase": false, "constructor": false}, {"identifier": "insertResponseToDb", "parameters": "(PreparedStatement insertResponseStatement, WpsResponse wpsResp)", "modifiers": "private", "return": "void", "signature": "void insertResponseToDb(PreparedStatement insertResponseStatement, WpsResponse wpsResp)", "full_signature": "private void insertResponseToDb(PreparedStatement insertResponseStatement, WpsResponse wpsResp)", "class_method_signature": "PostgresDatabase.insertResponseToDb(PreparedStatement insertResponseStatement, WpsResponse wpsResp)", "testcase": false, "constructor": false}, {"identifier": "persistOutput", "parameters": "(WpsOutput output, PreparedStatement insertOutputStatement)", "modifiers": "private", "return": "void", "signature": "void persistOutput(WpsOutput output, PreparedStatement insertOutputStatement)", "full_signature": "private void persistOutput(WpsOutput output, PreparedStatement insertOutputStatement)", "class_method_signature": "PostgresDatabase.persistOutput(WpsOutput output, PreparedStatement insertOutputStatement)", "testcase": false, "constructor": false}, {"identifier": "toSQLTimestamp", "parameters": "(DateTime dateTime)", "modifiers": "private", "return": "Timestamp", "signature": "Timestamp toSQLTimestamp(DateTime dateTime)", "full_signature": "private Timestamp toSQLTimestamp(DateTime dateTime)", "class_method_signature": "PostgresDatabase.toSQLTimestamp(DateTime dateTime)", "testcase": false, "constructor": false}, {"identifier": "storeComplexValue", "parameters": "(String requestid, String outputIdentifier, InputStream stream, String type, String mimeType)", "modifiers": "@Override public synchronized", "return": "String", "signature": "String storeComplexValue(String requestid, String outputIdentifier, InputStream stream, String type, String mimeType)", "full_signature": "@Override public synchronized String storeComplexValue(String requestid, String outputIdentifier, InputStream stream, String type, String mimeType)", "class_method_signature": "PostgresDatabase.storeComplexValue(String requestid, String outputIdentifier, InputStream stream, String type, String mimeType)", "testcase": false, "constructor": false}, {"identifier": "writeInputStreamToDisk", "parameters": "(String filename, InputStream data, boolean compress)", "modifiers": "private", "return": "FileReferenceInfo", "signature": "FileReferenceInfo writeInputStreamToDisk(String filename, InputStream data, boolean compress)", "full_signature": "private FileReferenceInfo writeInputStreamToDisk(String filename, InputStream data, boolean compress)", "class_method_signature": "PostgresDatabase.writeInputStreamToDisk(String filename, InputStream data, boolean compress)", "testcase": false, "constructor": false}, {"identifier": "readWpsRequestFromDB", "parameters": "(String requestId)", "modifiers": "private", "return": "WpsRequest", "signature": "WpsRequest readWpsRequestFromDB(String requestId)", "full_signature": "private WpsRequest readWpsRequestFromDB(String requestId)", "class_method_signature": "PostgresDatabase.readWpsRequestFromDB(String requestId)", "testcase": false, "constructor": false}, {"identifier": "constructRequestFromRs", "parameters": "(ResultSet rs)", "modifiers": "private", "return": "WpsRequest", "signature": "WpsRequest constructRequestFromRs(ResultSet rs)", "full_signature": "private WpsRequest constructRequestFromRs(ResultSet rs)", "class_method_signature": "PostgresDatabase.constructRequestFromRs(ResultSet rs)", "testcase": false, "constructor": false}, {"identifier": "readWpsResponseFromDB", "parameters": "(String requestId)", "modifiers": "private", "return": "WpsResponse", "signature": "WpsResponse readWpsResponseFromDB(String requestId)", "full_signature": "private WpsResponse readWpsResponseFromDB(String requestId)", "class_method_signature": "PostgresDatabase.readWpsResponseFromDB(String requestId)", "testcase": false, "constructor": false}, {"identifier": "constructResponseFromRs", "parameters": "(ResultSet rs)", "modifiers": "private", "return": "WpsResponse", "signature": "WpsResponse constructResponseFromRs(ResultSet rs)", "full_signature": "private WpsResponse constructResponseFromRs(ResultSet rs)", "class_method_signature": "PostgresDatabase.constructResponseFromRs(ResultSet rs)", "testcase": false, "constructor": false}, {"identifier": "readOutputFromDB", "parameters": "(String outputId)", "modifiers": "private", "return": "WpsOutput", "signature": "WpsOutput readOutputFromDB(String outputId)", "full_signature": "private WpsOutput readOutputFromDB(String outputId)", "class_method_signature": "PostgresDatabase.readOutputFromDB(String outputId)", "testcase": false, "constructor": false}, {"identifier": "readOutputsByRequestFromDB", "parameters": "(String requestId)", "modifiers": "private", "return": "List<WpsOutput>", "signature": "List<WpsOutput> readOutputsByRequestFromDB(String requestId)", "full_signature": "private List<WpsOutput> readOutputsByRequestFromDB(String requestId)", "class_method_signature": "PostgresDatabase.readOutputsByRequestFromDB(String requestId)", "testcase": false, "constructor": false}, {"identifier": "constructOutputFromRs", "parameters": "(ResultSet rs)", "modifiers": "private", "return": "WpsOutput", "signature": "WpsOutput constructOutputFromRs(ResultSet rs)", "full_signature": "private WpsOutput constructOutputFromRs(ResultSet rs)", "class_method_signature": "PostgresDatabase.constructOutputFromRs(ResultSet rs)", "testcase": false, "constructor": false}, {"identifier": "buildExecuteResponse", "parameters": "(String id)", "modifiers": "private", "return": "InputStream", "signature": "InputStream buildExecuteResponse(String id)", "full_signature": "private InputStream buildExecuteResponse(String id)", "class_method_signature": "PostgresDatabase.buildExecuteResponse(String id)", "testcase": false, "constructor": false}, {"identifier": "addResponseHeaders", "parameters": "(ExecuteResponseDocument doc)", "modifiers": "private", "return": "void", "signature": "void addResponseHeaders(ExecuteResponseDocument doc)", "full_signature": "private void addResponseHeaders(ExecuteResponseDocument doc)", "class_method_signature": "PostgresDatabase.addResponseHeaders(ExecuteResponseDocument doc)", "testcase": false, "constructor": false}, {"identifier": "getOutputTitle", "parameters": "(WpsOutput output, WpsResponse response, String id)", "modifiers": "private", "return": "String", "signature": "String getOutputTitle(WpsOutput output, WpsResponse response, String id)", "full_signature": "private String getOutputTitle(WpsOutput output, WpsResponse response, String id)", "class_method_signature": "PostgresDatabase.getOutputTitle(WpsOutput output, WpsResponse response, String id)", "testcase": false, "constructor": false}, {"identifier": "updateResponse", "parameters": "(String id, InputStream stream)", "modifiers": "@Override public", "return": "void", "signature": "void updateResponse(String id, InputStream stream)", "full_signature": "@Override public void updateResponse(String id, InputStream stream)", "class_method_signature": "PostgresDatabase.updateResponse(String id, InputStream stream)", "testcase": false, "constructor": false}, {"identifier": "lookupResponse", "parameters": "(String id)", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream lookupResponse(String id)", "full_signature": "@Override public InputStream lookupResponse(String id)", "class_method_signature": "PostgresDatabase.lookupResponse(String id)", "testcase": false, "constructor": false}, {"identifier": "getMimeTypeForStoreResponse", "parameters": "(String id)", "modifiers": "@Override public", "return": "String", "signature": "String getMimeTypeForStoreResponse(String id)", "full_signature": "@Override public String getMimeTypeForStoreResponse(String id)", "class_method_signature": "PostgresDatabase.getMimeTypeForStoreResponse(String id)", "testcase": false, "constructor": false}, {"identifier": "getContentLengthForStoreResponse", "parameters": "(String id)", "modifiers": "@Override public", "return": "long", "signature": "long getContentLengthForStoreResponse(String id)", "full_signature": "@Override public long getContentLengthForStoreResponse(String id)", "class_method_signature": "PostgresDatabase.getContentLengthForStoreResponse(String id)", "testcase": false, "constructor": false}, {"identifier": "lookupResponseAsFile", "parameters": "(String id)", "modifiers": "@Override public", "return": "File", "signature": "File lookupResponseAsFile(String id)", "full_signature": "@Override public File lookupResponseAsFile(String id)", "class_method_signature": "PostgresDatabase.lookupResponseAsFile(String id)", "testcase": false, "constructor": false}], "file": "gdp-process-wps/src/main/java/org/n52/wps/server/database/PostgresDatabase.java"}, "focal_method": {"identifier": "insertResponse", "parameters": "(String id, InputStream inputStream)", "modifiers": "@Override public", "return": "String", "body": "@Override\n\tpublic String insertResponse(String id, InputStream inputStream) {\n\t\tWpsResponse wpsResponse = new WpsResponse(id, inputStream);\n\t\twpsResponse.setStartTime(new DateTime());\n\t\tinsertWpsResponse(wpsResponse);\n\t\treturn generateRetrieveResultURL(id);\n\t}", "signature": "String insertResponse(String id, InputStream inputStream)", "full_signature": "@Override public String insertResponse(String id, InputStream inputStream)", "class_method_signature": "PostgresDatabase.insertResponse(String id, InputStream inputStream)", "testcase": false, "constructor": false, "invocations": ["setStartTime", "insertWpsResponse", "generateRetrieveResultURL"]}, "repository": {"repo_id": 11799031, "url": "https://github.com/USGS-CIDA/geo-data-portal", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 9, "size": 178468, "license": "licensed"}}