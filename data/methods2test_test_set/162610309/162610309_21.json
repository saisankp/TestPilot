{"test_class": {"identifier": "BukkitWorldTest", "superclass": "", "interfaces": "", "fields": [], "file": "worldedit-bukkit/src/test/java/com/sk89q/worldedit/bukkit/BukkitWorldTest.java"}, "test_case": {"identifier": "testTreeTypeMapping", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTreeTypeMapping() {\n        for (TreeGenerator.TreeType type : TreeGenerator.TreeType.values()) {\n            assertNotNull(BukkitWorld.toBukkitTreeType(type), \"No mapping for: \" + type);\n        }\n    }", "signature": "void testTreeTypeMapping()", "full_signature": "@Test public void testTreeTypeMapping()", "class_method_signature": "BukkitWorldTest.testTreeTypeMapping()", "testcase": true, "constructor": false, "invocations": ["values", "assertNotNull", "toBukkitTreeType"]}, "focal_class": {"identifier": "BukkitWorld", "superclass": "extends AbstractWorld", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = WorldEdit.logger;", "modifier": "private static final", "type": "Logger", "declarator": "logger = WorldEdit.logger", "var_name": "logger"}, {"original_string": "private static final boolean HAS_3D_BIOMES;", "modifier": "private static final", "type": "boolean", "declarator": "HAS_3D_BIOMES", "var_name": "HAS_3D_BIOMES"}, {"original_string": "private static final Map<Integer, Effect> effects = new HashMap<>();", "modifier": "private static final", "type": "Map<Integer, Effect>", "declarator": "effects = new HashMap<>()", "var_name": "effects"}, {"original_string": "private WeakReference<World> worldRef;", "modifier": "private", "type": "WeakReference<World>", "declarator": "worldRef", "var_name": "worldRef"}, {"original_string": "private final String worldNameRef;", "modifier": "private final", "type": "String", "declarator": "worldNameRef", "var_name": "worldNameRef"}, {"original_string": "private final WorldNativeAccess<?, ?, ?> worldNativeAccess;", "modifier": "private final", "type": "WorldNativeAccess<?, ?, ?>", "declarator": "worldNativeAccess", "var_name": "worldNativeAccess"}, {"original_string": "private static final EnumMap<TreeGenerator.TreeType, TreeType> treeTypeMapping =\n            new EnumMap<>(TreeGenerator.TreeType.class);", "modifier": "private static final", "type": "EnumMap<TreeGenerator.TreeType, TreeType>", "declarator": "treeTypeMapping =\n            new EnumMap<>(TreeGenerator.TreeType.class)", "var_name": "treeTypeMapping"}, {"original_string": "private static volatile boolean hasWarnedImplError = false;", "modifier": "private static volatile", "type": "boolean", "declarator": "hasWarnedImplError = false", "var_name": "hasWarnedImplError"}], "methods": [{"identifier": "BukkitWorld", "parameters": "(World world)", "modifiers": "public", "return": "", "signature": " BukkitWorld(World world)", "full_signature": "public  BukkitWorld(World world)", "class_method_signature": "BukkitWorld.BukkitWorld(World world)", "testcase": false, "constructor": true}, {"identifier": "getEntities", "parameters": "(Region region)", "modifiers": "@Override public", "return": "List<com.sk89q.worldedit.entity.Entity>", "signature": "List<com.sk89q.worldedit.entity.Entity> getEntities(Region region)", "full_signature": "@Override public List<com.sk89q.worldedit.entity.Entity> getEntities(Region region)", "class_method_signature": "BukkitWorld.getEntities(Region region)", "testcase": false, "constructor": false}, {"identifier": "getEntities", "parameters": "()", "modifiers": "@Override public", "return": "List<com.sk89q.worldedit.entity.Entity>", "signature": "List<com.sk89q.worldedit.entity.Entity> getEntities()", "full_signature": "@Override public List<com.sk89q.worldedit.entity.Entity> getEntities()", "class_method_signature": "BukkitWorld.getEntities()", "testcase": false, "constructor": false}, {"identifier": "getWorld", "parameters": "()", "modifiers": "public", "return": "World", "signature": "World getWorld()", "full_signature": "public World getWorld()", "class_method_signature": "BukkitWorld.getWorld()", "testcase": false, "constructor": false}, {"identifier": "getWorldChecked", "parameters": "()", "modifiers": "protected", "return": "World", "signature": "World getWorldChecked()", "full_signature": "protected World getWorldChecked()", "class_method_signature": "BukkitWorld.getWorldChecked()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "BukkitWorld.getName()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "BukkitWorld.getId()", "testcase": false, "constructor": false}, {"identifier": "getStoragePath", "parameters": "()", "modifiers": "@Override public", "return": "Path", "signature": "Path getStoragePath()", "full_signature": "@Override public Path getStoragePath()", "class_method_signature": "BukkitWorld.getStoragePath()", "testcase": false, "constructor": false}, {"identifier": "getBlockLightLevel", "parameters": "(BlockVector3 pt)", "modifiers": "@Override public", "return": "int", "signature": "int getBlockLightLevel(BlockVector3 pt)", "full_signature": "@Override public int getBlockLightLevel(BlockVector3 pt)", "class_method_signature": "BukkitWorld.getBlockLightLevel(BlockVector3 pt)", "testcase": false, "constructor": false}, {"identifier": "regenerate", "parameters": "(Region region, EditSession editSession)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean regenerate(Region region, EditSession editSession)", "full_signature": "@Override public boolean regenerate(Region region, EditSession editSession)", "class_method_signature": "BukkitWorld.regenerate(Region region, EditSession editSession)", "testcase": false, "constructor": false}, {"identifier": "getBlockInventory", "parameters": "(Chest chest)", "modifiers": "private", "return": "Inventory", "signature": "Inventory getBlockInventory(Chest chest)", "full_signature": "private Inventory getBlockInventory(Chest chest)", "class_method_signature": "BukkitWorld.getBlockInventory(Chest chest)", "testcase": false, "constructor": false}, {"identifier": "clearContainerBlockContents", "parameters": "(BlockVector3 pt)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean clearContainerBlockContents(BlockVector3 pt)", "full_signature": "@Override public boolean clearContainerBlockContents(BlockVector3 pt)", "class_method_signature": "BukkitWorld.clearContainerBlockContents(BlockVector3 pt)", "testcase": false, "constructor": false}, {"identifier": "toBukkitTreeType", "parameters": "(TreeGenerator.TreeType type)", "modifiers": "public static", "return": "TreeType", "signature": "TreeType toBukkitTreeType(TreeGenerator.TreeType type)", "full_signature": "public static TreeType toBukkitTreeType(TreeGenerator.TreeType type)", "class_method_signature": "BukkitWorld.toBukkitTreeType(TreeGenerator.TreeType type)", "testcase": false, "constructor": false}, {"identifier": "generateTree", "parameters": "(TreeGenerator.TreeType type, EditSession editSession, BlockVector3 pt)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean generateTree(TreeGenerator.TreeType type, EditSession editSession, BlockVector3 pt)", "full_signature": "@Override public boolean generateTree(TreeGenerator.TreeType type, EditSession editSession, BlockVector3 pt)", "class_method_signature": "BukkitWorld.generateTree(TreeGenerator.TreeType type, EditSession editSession, BlockVector3 pt)", "testcase": false, "constructor": false}, {"identifier": "dropItem", "parameters": "(Vector3 pt, BaseItemStack item)", "modifiers": "@Override public", "return": "void", "signature": "void dropItem(Vector3 pt, BaseItemStack item)", "full_signature": "@Override public void dropItem(Vector3 pt, BaseItemStack item)", "class_method_signature": "BukkitWorld.dropItem(Vector3 pt, BaseItemStack item)", "testcase": false, "constructor": false}, {"identifier": "checkLoadedChunk", "parameters": "(BlockVector3 pt)", "modifiers": "@Override public", "return": "void", "signature": "void checkLoadedChunk(BlockVector3 pt)", "full_signature": "@Override public void checkLoadedChunk(BlockVector3 pt)", "class_method_signature": "BukkitWorld.checkLoadedChunk(BlockVector3 pt)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "BukkitWorld.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "BukkitWorld.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getMaxY", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxY()", "full_signature": "@Override public int getMaxY()", "class_method_signature": "BukkitWorld.getMaxY()", "testcase": false, "constructor": false}, {"identifier": "fixAfterFastMode", "parameters": "(Iterable<BlockVector2> chunks)", "modifiers": "@SuppressWarnings(\"deprecation\") @Override public", "return": "void", "signature": "void fixAfterFastMode(Iterable<BlockVector2> chunks)", "full_signature": "@SuppressWarnings(\"deprecation\") @Override public void fixAfterFastMode(Iterable<BlockVector2> chunks)", "class_method_signature": "BukkitWorld.fixAfterFastMode(Iterable<BlockVector2> chunks)", "testcase": false, "constructor": false}, {"identifier": "playEffect", "parameters": "(Vector3 position, int type, int data)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean playEffect(Vector3 position, int type, int data)", "full_signature": "@Override public boolean playEffect(Vector3 position, int type, int data)", "class_method_signature": "BukkitWorld.playEffect(Vector3 position, int type, int data)", "testcase": false, "constructor": false}, {"identifier": "getWeather", "parameters": "()", "modifiers": "@Override public", "return": "WeatherType", "signature": "WeatherType getWeather()", "full_signature": "@Override public WeatherType getWeather()", "class_method_signature": "BukkitWorld.getWeather()", "testcase": false, "constructor": false}, {"identifier": "getRemainingWeatherDuration", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getRemainingWeatherDuration()", "full_signature": "@Override public long getRemainingWeatherDuration()", "class_method_signature": "BukkitWorld.getRemainingWeatherDuration()", "testcase": false, "constructor": false}, {"identifier": "setWeather", "parameters": "(WeatherType weatherType)", "modifiers": "@Override public", "return": "void", "signature": "void setWeather(WeatherType weatherType)", "full_signature": "@Override public void setWeather(WeatherType weatherType)", "class_method_signature": "BukkitWorld.setWeather(WeatherType weatherType)", "testcase": false, "constructor": false}, {"identifier": "setWeather", "parameters": "(WeatherType weatherType, long duration)", "modifiers": "@Override public", "return": "void", "signature": "void setWeather(WeatherType weatherType, long duration)", "full_signature": "@Override public void setWeather(WeatherType weatherType, long duration)", "class_method_signature": "BukkitWorld.setWeather(WeatherType weatherType, long duration)", "testcase": false, "constructor": false}, {"identifier": "getSpawnPosition", "parameters": "()", "modifiers": "@Override public", "return": "BlockVector3", "signature": "BlockVector3 getSpawnPosition()", "full_signature": "@Override public BlockVector3 getSpawnPosition()", "class_method_signature": "BukkitWorld.getSpawnPosition()", "testcase": false, "constructor": false}, {"identifier": "simulateBlockMine", "parameters": "(BlockVector3 pt)", "modifiers": "@Override public", "return": "void", "signature": "void simulateBlockMine(BlockVector3 pt)", "full_signature": "@Override public void simulateBlockMine(BlockVector3 pt)", "class_method_signature": "BukkitWorld.simulateBlockMine(BlockVector3 pt)", "testcase": false, "constructor": false}, {"identifier": "getBlock", "parameters": "(BlockVector3 position)", "modifiers": "@Override public", "return": "com.sk89q.worldedit.world.block.BlockState", "signature": "com.sk89q.worldedit.world.block.BlockState getBlock(BlockVector3 position)", "full_signature": "@Override public com.sk89q.worldedit.world.block.BlockState getBlock(BlockVector3 position)", "class_method_signature": "BukkitWorld.getBlock(BlockVector3 position)", "testcase": false, "constructor": false}, {"identifier": "setBlock", "parameters": "(BlockVector3 position, B block, SideEffectSet sideEffects)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setBlock(BlockVector3 position, B block, SideEffectSet sideEffects)", "full_signature": "@Override public boolean setBlock(BlockVector3 position, B block, SideEffectSet sideEffects)", "class_method_signature": "BukkitWorld.setBlock(BlockVector3 position, B block, SideEffectSet sideEffects)", "testcase": false, "constructor": false}, {"identifier": "getFullBlock", "parameters": "(BlockVector3 position)", "modifiers": "@Override public", "return": "BaseBlock", "signature": "BaseBlock getFullBlock(BlockVector3 position)", "full_signature": "@Override public BaseBlock getFullBlock(BlockVector3 position)", "class_method_signature": "BukkitWorld.getFullBlock(BlockVector3 position)", "testcase": false, "constructor": false}, {"identifier": "applySideEffects", "parameters": "(BlockVector3 position, com.sk89q.worldedit.world.block.BlockState previousType,\n            SideEffectSet sideEffectSet)", "modifiers": "@Override public", "return": "Set<SideEffect>", "signature": "Set<SideEffect> applySideEffects(BlockVector3 position, com.sk89q.worldedit.world.block.BlockState previousType,\n            SideEffectSet sideEffectSet)", "full_signature": "@Override public Set<SideEffect> applySideEffects(BlockVector3 position, com.sk89q.worldedit.world.block.BlockState previousType,\n            SideEffectSet sideEffectSet)", "class_method_signature": "BukkitWorld.applySideEffects(BlockVector3 position, com.sk89q.worldedit.world.block.BlockState previousType,\n            SideEffectSet sideEffectSet)", "testcase": false, "constructor": false}, {"identifier": "useItem", "parameters": "(BlockVector3 position, BaseItem item, Direction face)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean useItem(BlockVector3 position, BaseItem item, Direction face)", "full_signature": "@Override public boolean useItem(BlockVector3 position, BaseItem item, Direction face)", "class_method_signature": "BukkitWorld.useItem(BlockVector3 position, BaseItem item, Direction face)", "testcase": false, "constructor": false}, {"identifier": "fullySupports3DBiomes", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean fullySupports3DBiomes()", "full_signature": "@Override public boolean fullySupports3DBiomes()", "class_method_signature": "BukkitWorld.fullySupports3DBiomes()", "testcase": false, "constructor": false}, {"identifier": "getBiome", "parameters": "(BlockVector3 position)", "modifiers": "@SuppressWarnings(\"deprecation\") @Override public", "return": "BiomeType", "signature": "BiomeType getBiome(BlockVector3 position)", "full_signature": "@SuppressWarnings(\"deprecation\") @Override public BiomeType getBiome(BlockVector3 position)", "class_method_signature": "BukkitWorld.getBiome(BlockVector3 position)", "testcase": false, "constructor": false}, {"identifier": "setBiome", "parameters": "(BlockVector3 position, BiomeType biome)", "modifiers": "@SuppressWarnings(\"deprecation\") @Override public", "return": "boolean", "signature": "boolean setBiome(BlockVector3 position, BiomeType biome)", "full_signature": "@SuppressWarnings(\"deprecation\") @Override public boolean setBiome(BlockVector3 position, BiomeType biome)", "class_method_signature": "BukkitWorld.setBiome(BlockVector3 position, BiomeType biome)", "testcase": false, "constructor": false}, {"identifier": "setBlock", "parameters": "(int x, int y, int z, T block)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setBlock(int x, int y, int z, T block)", "full_signature": "@Override public boolean setBlock(int x, int y, int z, T block)", "class_method_signature": "BukkitWorld.setBlock(int x, int y, int z, T block)", "testcase": false, "constructor": false}, {"identifier": "setTile", "parameters": "(int x, int y, int z, CompoundTag tile)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setTile(int x, int y, int z, CompoundTag tile)", "full_signature": "@Override public boolean setTile(int x, int y, int z, CompoundTag tile)", "class_method_signature": "BukkitWorld.setTile(int x, int y, int z, CompoundTag tile)", "testcase": false, "constructor": false}, {"identifier": "setBiome", "parameters": "(int x, int y, int z, BiomeType biome)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setBiome(int x, int y, int z, BiomeType biome)", "full_signature": "@Override public boolean setBiome(int x, int y, int z, BiomeType biome)", "class_method_signature": "BukkitWorld.setBiome(int x, int y, int z, BiomeType biome)", "testcase": false, "constructor": false}, {"identifier": "refreshChunk", "parameters": "(int chunkX, int chunkZ)", "modifiers": "@Override public", "return": "void", "signature": "void refreshChunk(int chunkX, int chunkZ)", "full_signature": "@Override public void refreshChunk(int chunkX, int chunkZ)", "class_method_signature": "BukkitWorld.refreshChunk(int chunkX, int chunkZ)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int chunkX, int chunkZ)", "modifiers": "@Override public", "return": "IChunkGet", "signature": "IChunkGet get(int chunkX, int chunkZ)", "full_signature": "@Override public IChunkGet get(int chunkX, int chunkZ)", "class_method_signature": "BukkitWorld.get(int chunkX, int chunkZ)", "testcase": false, "constructor": false}, {"identifier": "sendFakeChunk", "parameters": "(Player player, ChunkPacket packet)", "modifiers": "@Override public", "return": "void", "signature": "void sendFakeChunk(Player player, ChunkPacket packet)", "full_signature": "@Override public void sendFakeChunk(Player player, ChunkPacket packet)", "class_method_signature": "BukkitWorld.sendFakeChunk(Player player, ChunkPacket packet)", "testcase": false, "constructor": false}], "file": "worldedit-bukkit/src/main/java/com/sk89q/worldedit/bukkit/BukkitWorld.java"}, "focal_method": {"identifier": "toBukkitTreeType", "parameters": "(TreeGenerator.TreeType type)", "modifiers": "public static", "return": "TreeType", "body": "public static TreeType toBukkitTreeType(TreeGenerator.TreeType type) {\n        return treeTypeMapping.get(type);\n    }", "signature": "TreeType toBukkitTreeType(TreeGenerator.TreeType type)", "full_signature": "public static TreeType toBukkitTreeType(TreeGenerator.TreeType type)", "class_method_signature": "BukkitWorld.toBukkitTreeType(TreeGenerator.TreeType type)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 162610309, "url": "https://github.com/IntellectualSites/FastAsyncWorldEdit-1.13", "stars": 52, "created": "12/20/2018 5:22:31 PM +00:00", "updates": "2020-01-26T18:10:28+00:00", "fork": "False", "license": "licensed"}}