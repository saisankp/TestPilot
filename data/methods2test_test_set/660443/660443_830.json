{"test_class": {"identifier": "IdentityTemplateLibraryTest", "superclass": "", "interfaces": "", "fields": [], "file": "tool/sdg/src/test/java/org/openscience/cdk/layout/IdentityTemplateLibraryTest.java"}, "test_case": {"identifier": "encodeCoordinates", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void encodeCoordinates() throws Exception {\n        Point2d[] points = new Point2d[]{new Point2d(12.5f, 5.5f), new Point2d(4f, 2f)};\n        String str = IdentityTemplateLibrary.encodeCoordinates(points);\n        assertThat(str, is(\"|(12.5,5.5,;4.0,2.0,)|\"));\n\n    }", "signature": "void encodeCoordinates()", "full_signature": "@Test public void encodeCoordinates()", "class_method_signature": "IdentityTemplateLibraryTest.encodeCoordinates()", "testcase": true, "constructor": false, "invocations": ["encodeCoordinates", "assertThat", "is"]}, "focal_class": {"identifier": "IdentityTemplateLibrary", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Multimap<String, Point2d[]> templateMap = LinkedListMultimap.create();", "modifier": "private final", "type": "Multimap<String, Point2d[]>", "declarator": "templateMap = LinkedListMultimap.create()", "var_name": "templateMap"}, {"original_string": "private final SmilesGenerator smigen = SmilesGenerator.unique();", "modifier": "private final", "type": "SmilesGenerator", "declarator": "smigen = SmilesGenerator.unique()", "var_name": "smigen"}, {"original_string": "private final ILoggingTool    logger = LoggingToolFactory.createLoggingTool(getClass());", "modifier": "private final", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(getClass())", "var_name": "logger"}], "methods": [{"identifier": "IdentityTemplateLibrary", "parameters": "()", "modifiers": "private", "return": "", "signature": " IdentityTemplateLibrary()", "full_signature": "private  IdentityTemplateLibrary()", "class_method_signature": "IdentityTemplateLibrary.IdentityTemplateLibrary()", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(IdentityTemplateLibrary library)", "modifiers": "public", "return": "IdentityTemplateLibrary", "signature": "IdentityTemplateLibrary add(IdentityTemplateLibrary library)", "full_signature": "public IdentityTemplateLibrary add(IdentityTemplateLibrary library)", "class_method_signature": "IdentityTemplateLibrary.add(IdentityTemplateLibrary library)", "testcase": false, "constructor": false}, {"identifier": "cansmi", "parameters": "(IAtomContainer mol, int[] ordering)", "modifiers": "private", "return": "String", "signature": "String cansmi(IAtomContainer mol, int[] ordering)", "full_signature": "private String cansmi(IAtomContainer mol, int[] ordering)", "class_method_signature": "IdentityTemplateLibrary.cansmi(IAtomContainer mol, int[] ordering)", "testcase": false, "constructor": false}, {"identifier": "createEntry", "parameters": "(final IAtomContainer container)", "modifiers": "", "return": "Entry<String, Point2d[]>", "signature": "Entry<String, Point2d[]> createEntry(final IAtomContainer container)", "full_signature": " Entry<String, Point2d[]> createEntry(final IAtomContainer container)", "class_method_signature": "IdentityTemplateLibrary.createEntry(final IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "decodeEntry", "parameters": "(String str)", "modifiers": "static", "return": "Entry<String, Point2d[]>", "signature": "Entry<String, Point2d[]> decodeEntry(String str)", "full_signature": "static Entry<String, Point2d[]> decodeEntry(String str)", "class_method_signature": "IdentityTemplateLibrary.decodeEntry(String str)", "testcase": false, "constructor": false}, {"identifier": "decodeCoordinates", "parameters": "(String str)", "modifiers": "static", "return": "Point2d[]", "signature": "Point2d[] decodeCoordinates(String str)", "full_signature": "static Point2d[] decodeCoordinates(String str)", "class_method_signature": "IdentityTemplateLibrary.decodeCoordinates(String str)", "testcase": false, "constructor": false}, {"identifier": "encodeEntry", "parameters": "(Entry<String, Point2d[]> entry)", "modifiers": "static", "return": "String", "signature": "String encodeEntry(Entry<String, Point2d[]> entry)", "full_signature": "static String encodeEntry(Entry<String, Point2d[]> entry)", "class_method_signature": "IdentityTemplateLibrary.encodeEntry(Entry<String, Point2d[]> entry)", "testcase": false, "constructor": false}, {"identifier": "encodeCoordinates", "parameters": "(Point2d[] points)", "modifiers": "static", "return": "String", "signature": "String encodeCoordinates(Point2d[] points)", "full_signature": "static String encodeCoordinates(Point2d[] points)", "class_method_signature": "IdentityTemplateLibrary.encodeCoordinates(Point2d[] points)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Entry<String, Point2d[]> entry)", "modifiers": "", "return": "void", "signature": "void add(Entry<String, Point2d[]> entry)", "full_signature": " void add(Entry<String, Point2d[]> entry)", "class_method_signature": "IdentityTemplateLibrary.add(Entry<String, Point2d[]> entry)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(IAtomContainer container)", "modifiers": "", "return": "void", "signature": "void add(IAtomContainer container)", "full_signature": " void add(IAtomContainer container)", "class_method_signature": "IdentityTemplateLibrary.add(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "assignLayout", "parameters": "(IAtomContainer container)", "modifiers": "", "return": "boolean", "signature": "boolean assignLayout(IAtomContainer container)", "full_signature": " boolean assignLayout(IAtomContainer container)", "class_method_signature": "IdentityTemplateLibrary.assignLayout(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "getCoordinates", "parameters": "(IAtomContainer mol)", "modifiers": "", "return": "Collection<Point2d[]>", "signature": "Collection<Point2d[]> getCoordinates(IAtomContainer mol)", "full_signature": " Collection<Point2d[]> getCoordinates(IAtomContainer mol)", "class_method_signature": "IdentityTemplateLibrary.getCoordinates(IAtomContainer mol)", "testcase": false, "constructor": false}, {"identifier": "empty", "parameters": "()", "modifiers": "static", "return": "IdentityTemplateLibrary", "signature": "IdentityTemplateLibrary empty()", "full_signature": "static IdentityTemplateLibrary empty()", "class_method_signature": "IdentityTemplateLibrary.empty()", "testcase": false, "constructor": false}, {"identifier": "loadFromResource", "parameters": "(String resource)", "modifiers": "static", "return": "IdentityTemplateLibrary", "signature": "IdentityTemplateLibrary loadFromResource(String resource)", "full_signature": "static IdentityTemplateLibrary loadFromResource(String resource)", "class_method_signature": "IdentityTemplateLibrary.loadFromResource(String resource)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(InputStream in)", "modifiers": "static", "return": "IdentityTemplateLibrary", "signature": "IdentityTemplateLibrary load(InputStream in)", "full_signature": "static IdentityTemplateLibrary load(InputStream in)", "class_method_signature": "IdentityTemplateLibrary.load(InputStream in)", "testcase": false, "constructor": false}, {"identifier": "reorderCoords", "parameters": "(Point2d[] coords, int[] order)", "modifiers": "static", "return": "Point2d[]", "signature": "Point2d[] reorderCoords(Point2d[] coords, int[] order)", "full_signature": "static Point2d[] reorderCoords(Point2d[] coords, int[] order)", "class_method_signature": "IdentityTemplateLibrary.reorderCoords(Point2d[] coords, int[] order)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(IChemObjectBuilder bldr)", "modifiers": "", "return": "void", "signature": "void update(IChemObjectBuilder bldr)", "full_signature": " void update(IChemObjectBuilder bldr)", "class_method_signature": "IdentityTemplateLibrary.update(IChemObjectBuilder bldr)", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "(OutputStream out)", "modifiers": "", "return": "void", "signature": "void store(OutputStream out)", "full_signature": " void store(OutputStream out)", "class_method_signature": "IdentityTemplateLibrary.store(OutputStream out)", "testcase": false, "constructor": false}], "file": "tool/sdg/src/main/java/org/openscience/cdk/layout/IdentityTemplateLibrary.java"}, "focal_method": {"identifier": "encodeCoordinates", "parameters": "(Point2d[] points)", "modifiers": "static", "return": "String", "body": "static String encodeCoordinates(Point2d[] points) {\n        DecimalFormat fmt = new DecimalFormat(\".##\", DecimalFormatSymbols.getInstance(Locale.ROOT));\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"|(\");\n        for (Point2d point : points) {\n            if (sb.length() > 2) sb.append(\";\");\n            sb.append(fmt.format(point.x));\n            sb.append(',');\n            sb.append(fmt.format(point.y));\n            sb.append(',');\n        }\n        sb.append(\")|\");\n        return sb.toString();\n    }", "signature": "String encodeCoordinates(Point2d[] points)", "full_signature": "static String encodeCoordinates(Point2d[] points)", "class_method_signature": "IdentityTemplateLibrary.encodeCoordinates(Point2d[] points)", "testcase": false, "constructor": false, "invocations": ["getInstance", "append", "length", "append", "append", "format", "append", "append", "format", "append", "append", "toString"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}