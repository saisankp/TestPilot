{"test_class": {"identifier": "ClickListenerRegistryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ClickListenerRegistry registry = new ClickListenerRegistry();", "modifier": "private", "type": "ClickListenerRegistry", "declarator": "registry = new ClickListenerRegistry()", "var_name": "registry"}, {"original_string": "private boolean call = false;", "modifier": "private", "type": "boolean", "declarator": "call = false", "var_name": "call"}], "file": "loader/src/test/java/ru/hyndo/sightmenu/loader/ClickListenerRegistryTest.java"}, "test_case": {"identifier": "apply", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void apply() {\n        registerListener();\n        call = false;\n        registry.apply(\"test\").accept(null, null);\n        assertTrue(call);\n    }", "signature": "void apply()", "full_signature": "@Test public void apply()", "class_method_signature": "ClickListenerRegistryTest.apply()", "testcase": true, "constructor": false, "invocations": ["registerListener", "accept", "apply", "assertTrue"]}, "focal_class": {"identifier": "ClickListenerRegistry", "superclass": "", "interfaces": "implements Function<String, BiConsumer<MenuItemClick, Map<String, Object>>>,\n        ListenerRegistry<String, BiConsumer<MenuItemClick, Map<String, Object>>>", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(ClickListenerRegistry.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(ClickListenerRegistry.class.getName())", "var_name": "LOGGER"}, {"original_string": "public static final ListenerRegistry<String, BiConsumer<MenuItemClick, Map<String, Object>>> STANDARD_PREDEFINED_REGISTRY;", "modifier": "public static final", "type": "ListenerRegistry<String, BiConsumer<MenuItemClick, Map<String, Object>>>", "declarator": "STANDARD_PREDEFINED_REGISTRY", "var_name": "STANDARD_PREDEFINED_REGISTRY"}, {"original_string": "private Set<UnaryOperator<BiConsumer<MenuItemClick, Map<String, Object>>>> preProcessors = new HashSet<>();", "modifier": "private", "type": "Set<UnaryOperator<BiConsumer<MenuItemClick, Map<String, Object>>>>", "declarator": "preProcessors = new HashSet<>()", "var_name": "preProcessors"}, {"original_string": "private Map<String, RegisteredListener<String, BiConsumer<MenuItemClick, Map<String, Object>>>> registryMap = new HashMap<>();", "modifier": "private", "type": "Map<String, RegisteredListener<String, BiConsumer<MenuItemClick, Map<String, Object>>>>", "declarator": "registryMap = new HashMap<>()", "var_name": "registryMap"}], "methods": [{"identifier": "ClickListenerRegistry", "parameters": "(Map<String, RegisteredListener<String, BiConsumer<MenuItemClick, Map<String, Object>>>> registryMap)", "modifiers": "public", "return": "", "signature": " ClickListenerRegistry(Map<String, RegisteredListener<String, BiConsumer<MenuItemClick, Map<String, Object>>>> registryMap)", "full_signature": "public  ClickListenerRegistry(Map<String, RegisteredListener<String, BiConsumer<MenuItemClick, Map<String, Object>>>> registryMap)", "class_method_signature": "ClickListenerRegistry.ClickListenerRegistry(Map<String, RegisteredListener<String, BiConsumer<MenuItemClick, Map<String, Object>>>> registryMap)", "testcase": false, "constructor": true}, {"identifier": "ClickListenerRegistry", "parameters": "()", "modifiers": "public", "return": "", "signature": " ClickListenerRegistry()", "full_signature": "public  ClickListenerRegistry()", "class_method_signature": "ClickListenerRegistry.ClickListenerRegistry()", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(String name)", "modifiers": "@Override public", "return": "BiConsumer<MenuItemClick, Map<String, Object>>", "signature": "BiConsumer<MenuItemClick, Map<String, Object>> apply(String name)", "full_signature": "@Override public BiConsumer<MenuItemClick, Map<String, Object>> apply(String name)", "class_method_signature": "ClickListenerRegistry.apply(String name)", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(String name)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeListener(String name)", "full_signature": "@Override public boolean removeListener(String name)", "class_method_signature": "ClickListenerRegistry.removeListener(String name)", "testcase": false, "constructor": false}, {"identifier": "getRegisteredListener", "parameters": "(String id)", "modifiers": "@Override public", "return": "Optional<RegisteredListener<String, BiConsumer<MenuItemClick, Map<String, Object>>>>", "signature": "Optional<RegisteredListener<String, BiConsumer<MenuItemClick, Map<String, Object>>>> getRegisteredListener(String id)", "full_signature": "@Override public Optional<RegisteredListener<String, BiConsumer<MenuItemClick, Map<String, Object>>>> getRegisteredListener(String id)", "class_method_signature": "ClickListenerRegistry.getRegisteredListener(String id)", "testcase": false, "constructor": false}, {"identifier": "getRegisteredListeners", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, RegisteredListener<String, BiConsumer<MenuItemClick, Map<String, Object>>>>", "signature": "Map<String, RegisteredListener<String, BiConsumer<MenuItemClick, Map<String, Object>>>> getRegisteredListeners()", "full_signature": "@Override public Map<String, RegisteredListener<String, BiConsumer<MenuItemClick, Map<String, Object>>>> getRegisteredListeners()", "class_method_signature": "ClickListenerRegistry.getRegisteredListeners()", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(ListenerRegistry<String, BiConsumer<MenuItemClick, Map<String, Object>>> registry)", "modifiers": "@Override public", "return": "void", "signature": "void merge(ListenerRegistry<String, BiConsumer<MenuItemClick, Map<String, Object>>> registry)", "full_signature": "@Override public void merge(ListenerRegistry<String, BiConsumer<MenuItemClick, Map<String, Object>>> registry)", "class_method_signature": "ClickListenerRegistry.merge(ListenerRegistry<String, BiConsumer<MenuItemClick, Map<String, Object>>> registry)", "testcase": false, "constructor": false}, {"identifier": "addListenerPreProcessor", "parameters": "(UnaryOperator<BiConsumer<MenuItemClick, Map<String, Object>>> processor)", "modifiers": "@Override public", "return": "void", "signature": "void addListenerPreProcessor(UnaryOperator<BiConsumer<MenuItemClick, Map<String, Object>>> processor)", "full_signature": "@Override public void addListenerPreProcessor(UnaryOperator<BiConsumer<MenuItemClick, Map<String, Object>>> processor)", "class_method_signature": "ClickListenerRegistry.addListenerPreProcessor(UnaryOperator<BiConsumer<MenuItemClick, Map<String, Object>>> processor)", "testcase": false, "constructor": false}, {"identifier": "registerListener", "parameters": "(\n            String name, BiConsumer<MenuItemClick, Map<String, Object>> handler, boolean override)", "modifiers": "@Override public", "return": "RegisteredListener<String, BiConsumer<MenuItemClick, Map<String, Object>>>", "signature": "RegisteredListener<String, BiConsumer<MenuItemClick, Map<String, Object>>> registerListener(\n            String name, BiConsumer<MenuItemClick, Map<String, Object>> handler, boolean override)", "full_signature": "@Override public RegisteredListener<String, BiConsumer<MenuItemClick, Map<String, Object>>> registerListener(\n            String name, BiConsumer<MenuItemClick, Map<String, Object>> handler, boolean override)", "class_method_signature": "ClickListenerRegistry.registerListener(\n            String name, BiConsumer<MenuItemClick, Map<String, Object>> handler, boolean override)", "testcase": false, "constructor": false}, {"identifier": "reInitMap", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void reInitMap()", "full_signature": "private void reInitMap()", "class_method_signature": "ClickListenerRegistry.reInitMap()", "testcase": false, "constructor": false}, {"identifier": "processHandler", "parameters": "(BiConsumer<MenuItemClick, Map<String, Object>> handler)", "modifiers": "private", "return": "BiConsumer<MenuItemClick, Map<String, Object>>", "signature": "BiConsumer<MenuItemClick, Map<String, Object>> processHandler(BiConsumer<MenuItemClick, Map<String, Object>> handler)", "full_signature": "private BiConsumer<MenuItemClick, Map<String, Object>> processHandler(BiConsumer<MenuItemClick, Map<String, Object>> handler)", "class_method_signature": "ClickListenerRegistry.processHandler(BiConsumer<MenuItemClick, Map<String, Object>> handler)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(String identifier)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(String identifier)", "full_signature": "@Override public boolean contains(String identifier)", "class_method_signature": "ClickListenerRegistry.contains(String identifier)", "testcase": false, "constructor": false}], "file": "loader/src/main/java/ru/hyndo/sightmenu/loader/ClickListenerRegistry.java"}, "focal_method": {"identifier": "apply", "parameters": "(String name)", "modifiers": "@Override public", "return": "BiConsumer<MenuItemClick, Map<String, Object>>", "body": "@Override\n    public BiConsumer<MenuItemClick, Map<String, Object>> apply(String name) {\n        return registryMap.get(name).getListener();\n    }", "signature": "BiConsumer<MenuItemClick, Map<String, Object>> apply(String name)", "full_signature": "@Override public BiConsumer<MenuItemClick, Map<String, Object>> apply(String name)", "class_method_signature": "ClickListenerRegistry.apply(String name)", "testcase": false, "constructor": false, "invocations": ["getListener", "get"]}, "repository": {"repo_id": 128830029, "url": "https://github.com/hyndor/SightMenu", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 130, "license": "licensed"}}