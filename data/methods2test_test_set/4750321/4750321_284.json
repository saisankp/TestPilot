{"test_class": {"identifier": "OperationsTest", "superclass": "extends GridProcessingTestBase", "interfaces": "", "fields": [{"original_string": "private GridCoverage2D SST;", "modifier": "private", "type": "GridCoverage2D", "declarator": "SST", "var_name": "SST"}, {"original_string": "private Operations processor;", "modifier": "private", "type": "Operations", "declarator": "processor", "var_name": "processor"}], "file": "modules/library/coverage/src/test/java/org/geotools/coverage/processing/OperationsTest.java"}, "test_case": {"identifier": "testGradientMagnitude", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGradientMagnitude() {\n        GridCoverage  sourceCoverage = SST.view(GEOPHYSICS);\n        GridCoverage  targetCoverage = (GridCoverage) processor.gradientMagnitude(sourceCoverage);\n        RenderedImage sourceImage    = sourceCoverage.getRenderableImage(0,1).createDefaultRendering();\n        RenderedImage targetImage    = targetCoverage.getRenderableImage(0,1).createDefaultRendering();\n        Raster        sourceRaster   = sourceImage.getData();\n        Raster        targetRaster   = targetImage.getData();\n        assertNotSame(sourceCoverage,                                targetCoverage);\n        assertNotSame(sourceImage,                                   targetImage);\n        assertNotSame(sourceRaster,                                  targetRaster);\n        assertSame   (sourceCoverage.getCoordinateReferenceSystem(), targetCoverage.getCoordinateReferenceSystem());\n        assertEquals (sourceCoverage.getEnvelope(),                  targetCoverage.getEnvelope());\n        assertEquals (sourceCoverage.getGridGeometry(),              targetCoverage.getGridGeometry());\n        assertEquals (sourceRaster  .getMinX(),                      targetRaster  .getMinX());\n        assertEquals (sourceRaster  .getMinY(),                      targetRaster  .getMinY());\n        assertEquals (sourceRaster  .getWidth(),                     targetRaster  .getWidth());\n        assertEquals (sourceRaster  .getHeight(),                    targetRaster  .getHeight());\n        assertEquals (0, sourceRaster.getMinX());\n        assertEquals (0, sourceRaster.getMinY());\n        assertEquals (\"GradientMagnitude\", ((OperationNode) targetImage).getOperationName());\n\n        assertEquals(3.95f, targetRaster.getSampleFloat(304, 310, 0), 1E-2f);\n        assertEquals(1.88f, targetRaster.getSampleFloat(262, 357, 0), 1E-2f);\n\n        if (SHOW) {\n            show(targetCoverage);\n        }\n    }", "signature": "void testGradientMagnitude()", "full_signature": "@Test public void testGradientMagnitude()", "class_method_signature": "OperationsTest.testGradientMagnitude()", "testcase": true, "constructor": false, "invocations": ["view", "gradientMagnitude", "createDefaultRendering", "getRenderableImage", "createDefaultRendering", "getRenderableImage", "getData", "getData", "assertNotSame", "assertNotSame", "assertNotSame", "assertSame", "getCoordinateReferenceSystem", "getCoordinateReferenceSystem", "assertEquals", "getEnvelope", "getEnvelope", "assertEquals", "getGridGeometry", "getGridGeometry", "assertEquals", "getMinX", "getMinX", "assertEquals", "getMinY", "getMinY", "assertEquals", "getWidth", "getWidth", "assertEquals", "getHeight", "getHeight", "assertEquals", "getMinX", "assertEquals", "getMinY", "assertEquals", "getOperationName", "assertEquals", "getSampleFloat", "assertEquals", "getSampleFloat", "show"]}, "focal_class": {"identifier": "Operations", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final Operations DEFAULT = new Operations(null);", "modifier": "public static final", "type": "Operations", "declarator": "DEFAULT = new Operations(null)", "var_name": "DEFAULT"}, {"original_string": "private CoverageProcessor processor;", "modifier": "private", "type": "CoverageProcessor", "declarator": "processor", "var_name": "processor"}], "methods": [{"identifier": "Operations", "parameters": "(final RenderingHints hints)", "modifiers": "public", "return": "", "signature": " Operations(final RenderingHints hints)", "full_signature": "public  Operations(final RenderingHints hints)", "class_method_signature": "Operations.Operations(final RenderingHints hints)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(final Coverage source, final double[] constants)", "modifiers": "public", "return": "Coverage", "signature": "Coverage add(final Coverage source, final double[] constants)", "full_signature": "public Coverage add(final Coverage source, final double[] constants)", "class_method_signature": "Operations.add(final Coverage source, final double[] constants)", "testcase": false, "constructor": false}, {"identifier": "subtract", "parameters": "(final Coverage source, final double[] constants)", "modifiers": "public", "return": "Coverage", "signature": "Coverage subtract(final Coverage source, final double[] constants)", "full_signature": "public Coverage subtract(final Coverage source, final double[] constants)", "class_method_signature": "Operations.subtract(final Coverage source, final double[] constants)", "testcase": false, "constructor": false}, {"identifier": "subtractFrom", "parameters": "(final Coverage source, final double[] constants)", "modifiers": "public", "return": "Coverage", "signature": "Coverage subtractFrom(final Coverage source, final double[] constants)", "full_signature": "public Coverage subtractFrom(final Coverage source, final double[] constants)", "class_method_signature": "Operations.subtractFrom(final Coverage source, final double[] constants)", "testcase": false, "constructor": false}, {"identifier": "multiply", "parameters": "(final Coverage source, final double[] constants)", "modifiers": "public", "return": "Coverage", "signature": "Coverage multiply(final Coverage source, final double[] constants)", "full_signature": "public Coverage multiply(final Coverage source, final double[] constants)", "class_method_signature": "Operations.multiply(final Coverage source, final double[] constants)", "testcase": false, "constructor": false}, {"identifier": "divideBy", "parameters": "(final Coverage source, final double[] constants)", "modifiers": "public", "return": "Coverage", "signature": "Coverage divideBy(final Coverage source, final double[] constants)", "full_signature": "public Coverage divideBy(final Coverage source, final double[] constants)", "class_method_signature": "Operations.divideBy(final Coverage source, final double[] constants)", "testcase": false, "constructor": false}, {"identifier": "rescale", "parameters": "(final Coverage source, final double[] constants, final double[] offsets)", "modifiers": "public", "return": "Coverage", "signature": "Coverage rescale(final Coverage source, final double[] constants, final double[] offsets)", "full_signature": "public Coverage rescale(final Coverage source, final double[] constants, final double[] offsets)", "class_method_signature": "Operations.rescale(final Coverage source, final double[] constants, final double[] offsets)", "testcase": false, "constructor": false}, {"identifier": "invert", "parameters": "(final Coverage source)", "modifiers": "public", "return": "Coverage", "signature": "Coverage invert(final Coverage source)", "full_signature": "public Coverage invert(final Coverage source)", "class_method_signature": "Operations.invert(final Coverage source)", "testcase": false, "constructor": false}, {"identifier": "absolute", "parameters": "(final Coverage source)", "modifiers": "public", "return": "Coverage", "signature": "Coverage absolute(final Coverage source)", "full_signature": "public Coverage absolute(final Coverage source)", "class_method_signature": "Operations.absolute(final Coverage source)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(final Coverage source)", "modifiers": "public", "return": "Coverage", "signature": "Coverage log(final Coverage source)", "full_signature": "public Coverage log(final Coverage source)", "class_method_signature": "Operations.log(final Coverage source)", "testcase": false, "constructor": false}, {"identifier": "exp", "parameters": "(final Coverage source)", "modifiers": "public", "return": "Coverage", "signature": "Coverage exp(final Coverage source)", "full_signature": "public Coverage exp(final Coverage source)", "class_method_signature": "Operations.exp(final Coverage source)", "testcase": false, "constructor": false}, {"identifier": "extrema", "parameters": "(final Coverage source)", "modifiers": "public", "return": "Coverage", "signature": "Coverage extrema(final Coverage source)", "full_signature": "public Coverage extrema(final Coverage source)", "class_method_signature": "Operations.extrema(final Coverage source)", "testcase": false, "constructor": false}, {"identifier": "nodataFilter", "parameters": "(final GridCoverage source)", "modifiers": "public", "return": "GridCoverage", "signature": "GridCoverage nodataFilter(final GridCoverage source)", "full_signature": "public GridCoverage nodataFilter(final GridCoverage source)", "class_method_signature": "Operations.nodataFilter(final GridCoverage source)", "testcase": false, "constructor": false}, {"identifier": "nodataFilter", "parameters": "(final GridCoverage source,\n                                     final int padding,\n                                     final int validityThreshold)", "modifiers": "public", "return": "GridCoverage", "signature": "GridCoverage nodataFilter(final GridCoverage source,\n                                     final int padding,\n                                     final int validityThreshold)", "full_signature": "public GridCoverage nodataFilter(final GridCoverage source,\n                                     final int padding,\n                                     final int validityThreshold)", "class_method_signature": "Operations.nodataFilter(final GridCoverage source,\n                                     final int padding,\n                                     final int validityThreshold)", "testcase": false, "constructor": false}, {"identifier": "interpolate", "parameters": "(final GridCoverage source, final String type)", "modifiers": "public", "return": "GridCoverage", "signature": "GridCoverage interpolate(final GridCoverage source, final String type)", "full_signature": "public GridCoverage interpolate(final GridCoverage source, final String type)", "class_method_signature": "Operations.interpolate(final GridCoverage source, final String type)", "testcase": false, "constructor": false}, {"identifier": "interpolate", "parameters": "(final GridCoverage source, final Interpolation type)", "modifiers": "public", "return": "GridCoverage", "signature": "GridCoverage interpolate(final GridCoverage source, final Interpolation type)", "full_signature": "public GridCoverage interpolate(final GridCoverage source, final Interpolation type)", "class_method_signature": "Operations.interpolate(final GridCoverage source, final Interpolation type)", "testcase": false, "constructor": false}, {"identifier": "interpolate", "parameters": "(final GridCoverage source, final Interpolation[] types)", "modifiers": "public", "return": "GridCoverage", "signature": "GridCoverage interpolate(final GridCoverage source, final Interpolation[] types)", "full_signature": "public GridCoverage interpolate(final GridCoverage source, final Interpolation[] types)", "class_method_signature": "Operations.interpolate(final GridCoverage source, final Interpolation[] types)", "testcase": false, "constructor": false}, {"identifier": "recolor", "parameters": "(final GridCoverage source, final ColorMap[] colorMaps)", "modifiers": "public", "return": "GridCoverage", "signature": "GridCoverage recolor(final GridCoverage source, final ColorMap[] colorMaps)", "full_signature": "public GridCoverage recolor(final GridCoverage source, final ColorMap[] colorMaps)", "class_method_signature": "Operations.recolor(final GridCoverage source, final ColorMap[] colorMaps)", "testcase": false, "constructor": false}, {"identifier": "selectSampleDimension", "parameters": "(final Coverage source, final int[] sampleDimensions)", "modifiers": "public", "return": "Coverage", "signature": "Coverage selectSampleDimension(final Coverage source, final int[] sampleDimensions)", "full_signature": "public Coverage selectSampleDimension(final Coverage source, final int[] sampleDimensions)", "class_method_signature": "Operations.selectSampleDimension(final Coverage source, final int[] sampleDimensions)", "testcase": false, "constructor": false}, {"identifier": "resample", "parameters": "(final Coverage source, final CoordinateReferenceSystem crs)", "modifiers": "public", "return": "Coverage", "signature": "Coverage resample(final Coverage source, final CoordinateReferenceSystem crs)", "full_signature": "public Coverage resample(final Coverage source, final CoordinateReferenceSystem crs)", "class_method_signature": "Operations.resample(final Coverage source, final CoordinateReferenceSystem crs)", "testcase": false, "constructor": false}, {"identifier": "resample", "parameters": "(final GridCoverage  source,\n                             final Envelope      envelope,\n                             final Interpolation interpolationType)", "modifiers": "public", "return": "Coverage", "signature": "Coverage resample(final GridCoverage  source,\n                             final Envelope      envelope,\n                             final Interpolation interpolationType)", "full_signature": "public Coverage resample(final GridCoverage  source,\n                             final Envelope      envelope,\n                             final Interpolation interpolationType)", "class_method_signature": "Operations.resample(final GridCoverage  source,\n                             final Envelope      envelope,\n                             final Interpolation interpolationType)", "testcase": false, "constructor": false}, {"identifier": "resample", "parameters": "(final GridCoverage  source,\n                             final CoordinateReferenceSystem crs,\n                             final GridGeometry  gridGeometry,\n                             final Interpolation interpolationType)", "modifiers": "public", "return": "Coverage", "signature": "Coverage resample(final GridCoverage  source,\n                             final CoordinateReferenceSystem crs,\n                             final GridGeometry  gridGeometry,\n                             final Interpolation interpolationType)", "full_signature": "public Coverage resample(final GridCoverage  source,\n                             final CoordinateReferenceSystem crs,\n                             final GridGeometry  gridGeometry,\n                             final Interpolation interpolationType)", "class_method_signature": "Operations.resample(final GridCoverage  source,\n                             final CoordinateReferenceSystem crs,\n                             final GridGeometry  gridGeometry,\n                             final Interpolation interpolationType)", "testcase": false, "constructor": false}, {"identifier": "resample", "parameters": "(final GridCoverage  source,\n                             final CoordinateReferenceSystem crs,\n                             final GridGeometry  gridGeometry,\n                             final Interpolation interpolationType,\n                             final double[] backgroundValues)", "modifiers": "public", "return": "Coverage", "signature": "Coverage resample(final GridCoverage  source,\n                             final CoordinateReferenceSystem crs,\n                             final GridGeometry  gridGeometry,\n                             final Interpolation interpolationType,\n                             final double[] backgroundValues)", "full_signature": "public Coverage resample(final GridCoverage  source,\n                             final CoordinateReferenceSystem crs,\n                             final GridGeometry  gridGeometry,\n                             final Interpolation interpolationType,\n                             final double[] backgroundValues)", "class_method_signature": "Operations.resample(final GridCoverage  source,\n                             final CoordinateReferenceSystem crs,\n                             final GridGeometry  gridGeometry,\n                             final Interpolation interpolationType,\n                             final double[] backgroundValues)", "testcase": false, "constructor": false}, {"identifier": "crop", "parameters": "(final Coverage Source, final Envelope envelope)", "modifiers": "public", "return": "Coverage", "signature": "Coverage crop(final Coverage Source, final Envelope envelope)", "full_signature": "public Coverage crop(final Coverage Source, final Envelope envelope)", "class_method_signature": "Operations.crop(final Coverage Source, final Envelope envelope)", "testcase": false, "constructor": false}, {"identifier": "scale", "parameters": "(final GridCoverage source,\n                              final double xScale, final double yScale,\n                              final double xTrans, final double yTrans)", "modifiers": "public", "return": "GridCoverage", "signature": "GridCoverage scale(final GridCoverage source,\n                              final double xScale, final double yScale,\n                              final double xTrans, final double yTrans)", "full_signature": "public GridCoverage scale(final GridCoverage source,\n                              final double xScale, final double yScale,\n                              final double xTrans, final double yTrans)", "class_method_signature": "Operations.scale(final GridCoverage source,\n                              final double xScale, final double yScale,\n                              final double xTrans, final double yTrans)", "testcase": false, "constructor": false}, {"identifier": "scale", "parameters": "(final GridCoverage source,\n                              final double xScale, final double yScale,\n                              final double xTrans, final double yTrans,\n                              final Interpolation interpolation)", "modifiers": "public", "return": "GridCoverage", "signature": "GridCoverage scale(final GridCoverage source,\n                              final double xScale, final double yScale,\n                              final double xTrans, final double yTrans,\n                              final Interpolation interpolation)", "full_signature": "public GridCoverage scale(final GridCoverage source,\n                              final double xScale, final double yScale,\n                              final double xTrans, final double yTrans,\n                              final Interpolation interpolation)", "class_method_signature": "Operations.scale(final GridCoverage source,\n                              final double xScale, final double yScale,\n                              final double xTrans, final double yTrans,\n                              final Interpolation interpolation)", "testcase": false, "constructor": false}, {"identifier": "subsampleAverage", "parameters": "(final GridCoverage   source,\n                                         final double         scaleX,\n                                         final double         scaleY)", "modifiers": "public", "return": "GridCoverage", "signature": "GridCoverage subsampleAverage(final GridCoverage   source,\n                                         final double         scaleX,\n                                         final double         scaleY)", "full_signature": "public GridCoverage subsampleAverage(final GridCoverage   source,\n                                         final double         scaleX,\n                                         final double         scaleY)", "class_method_signature": "Operations.subsampleAverage(final GridCoverage   source,\n                                         final double         scaleX,\n                                         final double         scaleY)", "testcase": false, "constructor": false}, {"identifier": "filteredSubsample", "parameters": "(final GridCoverage source)", "modifiers": "public", "return": "GridCoverage", "signature": "GridCoverage filteredSubsample(final GridCoverage source)", "full_signature": "public GridCoverage filteredSubsample(final GridCoverage source)", "class_method_signature": "Operations.filteredSubsample(final GridCoverage source)", "testcase": false, "constructor": false}, {"identifier": "filteredSubsample", "parameters": "(final GridCoverage source,\n                                          final int          scaleX,\n                                          final int          scaleY,\n                                          final float[]      qsFilter)", "modifiers": "public", "return": "GridCoverage", "signature": "GridCoverage filteredSubsample(final GridCoverage source,\n                                          final int          scaleX,\n                                          final int          scaleY,\n                                          final float[]      qsFilter)", "full_signature": "public GridCoverage filteredSubsample(final GridCoverage source,\n                                          final int          scaleX,\n                                          final int          scaleY,\n                                          final float[]      qsFilter)", "class_method_signature": "Operations.filteredSubsample(final GridCoverage source,\n                                          final int          scaleX,\n                                          final int          scaleY,\n                                          final float[]      qsFilter)", "testcase": false, "constructor": false}, {"identifier": "filteredSubsample", "parameters": "(final GridCoverage source,\n                                          final int scaleX, final int scaleY,\n                                          final float[] qsFilter,\n                                          final Interpolation interpolation)", "modifiers": "public", "return": "GridCoverage", "signature": "GridCoverage filteredSubsample(final GridCoverage source,\n                                          final int scaleX, final int scaleY,\n                                          final float[] qsFilter,\n                                          final Interpolation interpolation)", "full_signature": "public GridCoverage filteredSubsample(final GridCoverage source,\n                                          final int scaleX, final int scaleY,\n                                          final float[] qsFilter,\n                                          final Interpolation interpolation)", "class_method_signature": "Operations.filteredSubsample(final GridCoverage source,\n                                          final int scaleX, final int scaleY,\n                                          final float[] qsFilter,\n                                          final Interpolation interpolation)", "testcase": false, "constructor": false}, {"identifier": "gradientMagnitude", "parameters": "(final Coverage source)", "modifiers": "public", "return": "Coverage", "signature": "Coverage gradientMagnitude(final Coverage source)", "full_signature": "public Coverage gradientMagnitude(final Coverage source)", "class_method_signature": "Operations.gradientMagnitude(final Coverage source)", "testcase": false, "constructor": false}, {"identifier": "gradientMagnitude", "parameters": "(final Coverage source,\n                                      final KernelJAI mask1, final KernelJAI mask2)", "modifiers": "public", "return": "Coverage", "signature": "Coverage gradientMagnitude(final Coverage source,\n                                      final KernelJAI mask1, final KernelJAI mask2)", "full_signature": "public Coverage gradientMagnitude(final Coverage source,\n                                      final KernelJAI mask1, final KernelJAI mask2)", "class_method_signature": "Operations.gradientMagnitude(final Coverage source,\n                                      final KernelJAI mask1, final KernelJAI mask2)", "testcase": false, "constructor": false}, {"identifier": "getProcessor", "parameters": "()", "modifiers": "private", "return": "CoverageProcessor", "signature": "CoverageProcessor getProcessor()", "full_signature": "private CoverageProcessor getProcessor()", "class_method_signature": "Operations.getProcessor()", "testcase": false, "constructor": false}, {"identifier": "doOperation", "parameters": "(final String operationName, final Coverage source)", "modifiers": "protected final", "return": "Coverage", "signature": "Coverage doOperation(final String operationName, final Coverage source)", "full_signature": "protected final Coverage doOperation(final String operationName, final Coverage source)", "class_method_signature": "Operations.doOperation(final String operationName, final Coverage source)", "testcase": false, "constructor": false}, {"identifier": "doOperation", "parameters": "(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1)", "modifiers": "protected final", "return": "Coverage", "signature": "Coverage doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1)", "full_signature": "protected final Coverage doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1)", "class_method_signature": "Operations.doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1)", "testcase": false, "constructor": false}, {"identifier": "doOperation", "parameters": "(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2)", "modifiers": "protected final", "return": "Coverage", "signature": "Coverage doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2)", "full_signature": "protected final Coverage doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2)", "class_method_signature": "Operations.doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2)", "testcase": false, "constructor": false}, {"identifier": "doOperation", "parameters": "(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2,\n                                         final String argumentName3, final Object argumentValue3)", "modifiers": "protected final", "return": "Coverage", "signature": "Coverage doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2,\n                                         final String argumentName3, final Object argumentValue3)", "full_signature": "protected final Coverage doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2,\n                                         final String argumentName3, final Object argumentValue3)", "class_method_signature": "Operations.doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2,\n                                         final String argumentName3, final Object argumentValue3)", "testcase": false, "constructor": false}, {"identifier": "doOperation", "parameters": "(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2,\n                                         final String argumentName3, final Object argumentValue3,\n                                         final String argumentName4, final Object argumentValue4)", "modifiers": "protected final", "return": "Coverage", "signature": "Coverage doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2,\n                                         final String argumentName3, final Object argumentValue3,\n                                         final String argumentName4, final Object argumentValue4)", "full_signature": "protected final Coverage doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2,\n                                         final String argumentName3, final Object argumentValue3,\n                                         final String argumentName4, final Object argumentValue4)", "class_method_signature": "Operations.doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2,\n                                         final String argumentName3, final Object argumentValue3,\n                                         final String argumentName4, final Object argumentValue4)", "testcase": false, "constructor": false}, {"identifier": "doOperation", "parameters": "(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2,\n                                         final String argumentName3, final Object argumentValue3,\n                                         final String argumentName4, final Object argumentValue4,\n                                         final String argumentName5, final Object argumentValue5)", "modifiers": "protected final", "return": "Coverage", "signature": "Coverage doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2,\n                                         final String argumentName3, final Object argumentValue3,\n                                         final String argumentName4, final Object argumentValue4,\n                                         final String argumentName5, final Object argumentValue5)", "full_signature": "protected final Coverage doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2,\n                                         final String argumentName3, final Object argumentValue3,\n                                         final String argumentName4, final Object argumentValue4,\n                                         final String argumentName5, final Object argumentValue5)", "class_method_signature": "Operations.doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2,\n                                         final String argumentName3, final Object argumentValue3,\n                                         final String argumentName4, final Object argumentValue4,\n                                         final String argumentName5, final Object argumentValue5)", "testcase": false, "constructor": false}, {"identifier": "doOperation", "parameters": "(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2,\n                                         final String argumentName3, final Object argumentValue3,\n                                         final String argumentName4, final Object argumentValue4,\n                                         final String argumentName5, final Object argumentValue5,\n                                         final String argumentName6, final Object argumentValue6)", "modifiers": "protected final", "return": "Coverage", "signature": "Coverage doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2,\n                                         final String argumentName3, final Object argumentValue3,\n                                         final String argumentName4, final Object argumentValue4,\n                                         final String argumentName5, final Object argumentValue5,\n                                         final String argumentName6, final Object argumentValue6)", "full_signature": "protected final Coverage doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2,\n                                         final String argumentName3, final Object argumentValue3,\n                                         final String argumentName4, final Object argumentValue4,\n                                         final String argumentName5, final Object argumentValue5,\n                                         final String argumentName6, final Object argumentValue6)", "class_method_signature": "Operations.doOperation(final String operationName, final Coverage source,\n                                         final String argumentName1, final Object argumentValue1,\n                                         final String argumentName2, final Object argumentValue2,\n                                         final String argumentName3, final Object argumentValue3,\n                                         final String argumentName4, final Object argumentValue4,\n                                         final String argumentName5, final Object argumentValue5,\n                                         final String argumentName6, final Object argumentValue6)", "testcase": false, "constructor": false}, {"identifier": "setParameterValue", "parameters": "(final ParameterValueGroup parameters, String name, Object value)", "modifiers": "private static", "return": "void", "signature": "void setParameterValue(final ParameterValueGroup parameters, String name, Object value)", "full_signature": "private static void setParameterValue(final ParameterValueGroup parameters, String name, Object value)", "class_method_signature": "Operations.setParameterValue(final ParameterValueGroup parameters, String name, Object value)", "testcase": false, "constructor": false}], "file": "modules/library/coverage/src/main/java/org/geotools/coverage/processing/Operations.java"}, "focal_method": {"identifier": "gradientMagnitude", "parameters": "(final Coverage source)", "modifiers": "public", "return": "Coverage", "body": "public Coverage gradientMagnitude(final Coverage source)\n            throws CoverageProcessingException\n    {\n        return doOperation(\"GradientMagnitude\", source);\n    }", "signature": "Coverage gradientMagnitude(final Coverage source)", "full_signature": "public Coverage gradientMagnitude(final Coverage source)", "class_method_signature": "Operations.gradientMagnitude(final Coverage source)", "testcase": false, "constructor": false, "invocations": ["doOperation"]}, "repository": {"repo_id": 4750321, "url": "https://github.com/HGitMaster/geotools-osgi", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 114107, "license": "licensed"}}