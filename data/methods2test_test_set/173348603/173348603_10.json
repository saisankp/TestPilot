{"test_class": {"identifier": "K2JCompatTest", "superclass": "", "interfaces": "", "fields": [], "file": "k2j-compat/src/test/java/com/github/alexdochioiu/k2jcompat/K2JCompatTest.java"}, "test_case": {"identifier": "also_objectReceivedIsTheExpectedOne", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void also_objectReceivedIsTheExpectedOne() {\n        final AtomicReference<SimpleClass> fromLet = new AtomicReference<>();\n\n        final SimpleClass given = new SimpleClass();\n        take(given)\n                .also(fromLet::set);\n\n        Assert.assertSame(given, fromLet.get());\n    }", "signature": "void also_objectReceivedIsTheExpectedOne()", "full_signature": "@Test public void also_objectReceivedIsTheExpectedOne()", "class_method_signature": "K2JCompatTest.also_objectReceivedIsTheExpectedOne()", "testcase": true, "constructor": false, "invocations": ["also", "take", "assertSame", "get"]}, "focal_class": {"identifier": "K2JCompat", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "take", "parameters": "(T object)", "modifiers": "public static", "return": "K2JWrapper<T>", "signature": "K2JWrapper<T> take(T object)", "full_signature": "public static K2JWrapper<T> take(T object)", "class_method_signature": "K2JCompat.take(T object)", "testcase": false, "constructor": false}], "file": "k2j-compat/src/main/java/com/github/alexdochioiu/k2jcompat/K2JCompat.java"}, "focal_method": {"identifier": "take", "parameters": "(T object)", "modifiers": "public static", "return": "K2JWrapper<T>", "body": "public static <T> K2JWrapper<T> take(T object) {\n        return new K2JWrapper<>(object);\n    }", "signature": "K2JWrapper<T> take(T object)", "full_signature": "public static K2JWrapper<T> take(T object)", "class_method_signature": "K2JCompat.take(T object)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 173348603, "url": "https://github.com/AlexDochioiu/K2J-Compat", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 9, "size": 151, "license": "licensed"}}