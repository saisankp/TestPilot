{"test_class": {"identifier": "MainActivityTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Context context;", "modifier": "private", "type": "Context", "declarator": "context", "var_name": "context"}, {"original_string": "private MainActivity mainActivity;", "modifier": "private", "type": "MainActivity", "declarator": "mainActivity", "var_name": "mainActivity"}], "file": "sample/src/test/java/io/ona/kujaku/sample/activities/MainActivityTest.java"}, "test_case": {"identifier": "onActivityResultWithInvalidIntentShouldShowErrorToast", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onActivityResultWithInvalidIntentShouldShowErrorToast() {\n        Intent intent = new Intent();\n        mainActivity.onActivityResult(MAP_ACTIVITY_REQUEST_CODE, Activity.RESULT_OK, intent);\n\n        assertEquals(context.getString(R.string.error_msg_could_not_retrieve_chosen_feature), ShadowToast.getTextOfLatestToast());\n    }", "signature": "void onActivityResultWithInvalidIntentShouldShowErrorToast()", "full_signature": "@Test public void onActivityResultWithInvalidIntentShouldShowErrorToast()", "class_method_signature": "MainActivityTest.onActivityResultWithInvalidIntentShouldShowErrorToast()", "testcase": true, "constructor": false, "invocations": ["onActivityResult", "assertEquals", "getString", "getTextOfLatestToast"]}, "focal_class": {"identifier": "MainActivity", "superclass": "extends BaseNavigationDrawerActivity", "interfaces": "", "fields": [{"original_string": "private EditText topLeftLatEd;", "modifier": "private", "type": "EditText", "declarator": "topLeftLatEd", "var_name": "topLeftLatEd"}, {"original_string": "private EditText topLeftLngEd;", "modifier": "private", "type": "EditText", "declarator": "topLeftLngEd", "var_name": "topLeftLngEd"}, {"original_string": "private EditText bottomRightLatEd;", "modifier": "private", "type": "EditText", "declarator": "bottomRightLatEd", "var_name": "bottomRightLatEd"}, {"original_string": "private EditText bottomRightLngEd;", "modifier": "private", "type": "EditText", "declarator": "bottomRightLngEd", "var_name": "bottomRightLngEd"}, {"original_string": "private EditText mapNameEd;", "modifier": "private", "type": "EditText", "declarator": "mapNameEd", "var_name": "mapNameEd"}, {"original_string": "private EditText topRightLatEd;", "modifier": "private", "type": "EditText", "declarator": "topRightLatEd", "var_name": "topRightLatEd"}, {"original_string": "private EditText topRightLngEd;", "modifier": "private", "type": "EditText", "declarator": "topRightLngEd", "var_name": "topRightLngEd"}, {"original_string": "private EditText bottomLeftLatEd;", "modifier": "private", "type": "EditText", "declarator": "bottomLeftLatEd", "var_name": "bottomLeftLatEd"}, {"original_string": "private EditText bottomLeftLngEd;", "modifier": "private", "type": "EditText", "declarator": "bottomLeftLngEd", "var_name": "bottomLeftLngEd"}, {"original_string": "private EditText mapNameToDeleteEd;", "modifier": "private", "type": "EditText", "declarator": "mapNameToDeleteEd", "var_name": "mapNameToDeleteEd"}, {"original_string": "private Button stopMapDownloadBtn;", "modifier": "private", "type": "Button", "declarator": "stopMapDownloadBtn", "var_name": "stopMapDownloadBtn"}, {"original_string": "private static final String SAMPLE_JSON_FILE_NAME = \"2017-nov-27-kujaku-metadata.json\";", "modifier": "private static final", "type": "String", "declarator": "SAMPLE_JSON_FILE_NAME = \"2017-nov-27-kujaku-metadata.json\"", "var_name": "SAMPLE_JSON_FILE_NAME"}, {"original_string": "private static final int PERMISSIONS_REQUEST_CODE = 9823;", "modifier": "private static final", "type": "int", "declarator": "PERMISSIONS_REQUEST_CODE = 9823", "var_name": "PERMISSIONS_REQUEST_CODE"}, {"original_string": "private String[] basicPermissions = new String[]{\n            Manifest.permission.WRITE_EXTERNAL_STORAGE,\n            Manifest.permission.READ_EXTERNAL_STORAGE\n    };", "modifier": "private", "type": "String[]", "declarator": "basicPermissions = new String[]{\n            Manifest.permission.WRITE_EXTERNAL_STORAGE,\n            Manifest.permission.READ_EXTERNAL_STORAGE\n    }", "var_name": "basicPermissions"}, {"original_string": "private int lastNotificationId = 2081;", "modifier": "private", "type": "int", "declarator": "lastNotificationId = 2081", "var_name": "lastNotificationId"}, {"original_string": "private final static String TAG = MainActivity.class.getSimpleName();", "modifier": "private final static", "type": "String", "declarator": "TAG = MainActivity.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "private List<Point> points;", "modifier": "private", "type": "List<Point>", "declarator": "points", "var_name": "points"}, {"original_string": "private Activity mainActivity = this;", "modifier": "private", "type": "Activity", "declarator": "mainActivity = this", "var_name": "mainActivity"}, {"original_string": "private String currentMapDownload;", "modifier": "private", "type": "String", "declarator": "currentMapDownload", "var_name": "currentMapDownload"}, {"original_string": "private boolean canStopMapDownload = false;", "modifier": "private", "type": "boolean", "declarator": "canStopMapDownload = false", "var_name": "canStopMapDownload"}], "methods": [{"identifier": "onCreate", "parameters": "(Bundle savedInstanceState)", "modifiers": "@Override protected", "return": "void", "signature": "void onCreate(Bundle savedInstanceState)", "full_signature": "@Override protected void onCreate(Bundle savedInstanceState)", "class_method_signature": "MainActivity.onCreate(Bundle savedInstanceState)", "testcase": false, "constructor": false}, {"identifier": "fetchDroppedPoints", "parameters": "(OnFinishedListener onFinishedListener)", "modifiers": "private", "return": "void", "signature": "void fetchDroppedPoints(OnFinishedListener onFinishedListener)", "full_signature": "private void fetchDroppedPoints(OnFinishedListener onFinishedListener)", "class_method_signature": "MainActivity.fetchDroppedPoints(OnFinishedListener onFinishedListener)", "testcase": false, "constructor": false}, {"identifier": "setCanStopMapDownload", "parameters": "(boolean enabled)", "modifiers": "private", "return": "void", "signature": "void setCanStopMapDownload(boolean enabled)", "full_signature": "private void setCanStopMapDownload(boolean enabled)", "class_method_signature": "MainActivity.setCanStopMapDownload(boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "getContentView", "parameters": "()", "modifiers": "@Override protected", "return": "int", "signature": "int getContentView()", "full_signature": "@Override protected int getContentView()", "class_method_signature": "MainActivity.getContentView()", "testcase": false, "constructor": false}, {"identifier": "getSelectedNavigationItem", "parameters": "()", "modifiers": "@Override protected", "return": "int", "signature": "int getSelectedNavigationItem()", "full_signature": "@Override protected int getSelectedNavigationItem()", "class_method_signature": "MainActivity.getSelectedNavigationItem()", "testcase": false, "constructor": false}, {"identifier": "downloadMap", "parameters": "(boolean useDownloadHelper)", "modifiers": "private", "return": "void", "signature": "void downloadMap(boolean useDownloadHelper)", "full_signature": "private void downloadMap(boolean useDownloadHelper)", "class_method_signature": "MainActivity.downloadMap(boolean useDownloadHelper)", "testcase": false, "constructor": false}, {"identifier": "stopMapDownload", "parameters": "(@NonNull String mapName)", "modifiers": "private", "return": "void", "signature": "void stopMapDownload(@NonNull String mapName)", "full_signature": "private void stopMapDownload(@NonNull String mapName)", "class_method_signature": "MainActivity.stopMapDownload(@NonNull String mapName)", "testcase": false, "constructor": false}, {"identifier": "isValidDouble", "parameters": "(String doubleString)", "modifiers": "private", "return": "boolean", "signature": "boolean isValidDouble(String doubleString)", "full_signature": "private boolean isValidDouble(String doubleString)", "class_method_signature": "MainActivity.isValidDouble(String doubleString)", "testcase": false, "constructor": false}, {"identifier": "registerLocalBroadcastReceiver", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void registerLocalBroadcastReceiver()", "full_signature": "private void registerLocalBroadcastReceiver()", "class_method_signature": "MainActivity.registerLocalBroadcastReceiver()", "testcase": false, "constructor": false}, {"identifier": "downloadMapBoxStyle", "parameters": "(String mapboxStyleUrl)", "modifiers": "private", "return": "void", "signature": "void downloadMapBoxStyle(String mapboxStyleUrl)", "full_signature": "private void downloadMapBoxStyle(String mapboxStyleUrl)", "class_method_signature": "MainActivity.downloadMapBoxStyle(String mapboxStyleUrl)", "testcase": false, "constructor": false}, {"identifier": "onActivityResult", "parameters": "(int requestCode, int resultCode, Intent data)", "modifiers": "@Override protected", "return": "void", "signature": "void onActivityResult(int requestCode, int resultCode, Intent data)", "full_signature": "@Override protected void onActivityResult(int requestCode, int resultCode, Intent data)", "class_method_signature": "MainActivity.onActivityResult(int requestCode, int resultCode, Intent data)", "testcase": false, "constructor": false}, {"identifier": "saveDroppedPoints", "parameters": "(Intent data)", "modifiers": "private", "return": "void", "signature": "void saveDroppedPoints(Intent data)", "full_signature": "private void saveDroppedPoints(Intent data)", "class_method_signature": "MainActivity.saveDroppedPoints(Intent data)", "testcase": false, "constructor": false}, {"identifier": "confirmSampleStyleAvailable", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void confirmSampleStyleAvailable()", "full_signature": "private void confirmSampleStyleAvailable()", "class_method_signature": "MainActivity.confirmSampleStyleAvailable()", "testcase": false, "constructor": false}, {"identifier": "readAssetFile", "parameters": "(String inFile)", "modifiers": "public", "return": "String", "signature": "String readAssetFile(String inFile)", "full_signature": "public String readAssetFile(String inFile)", "class_method_signature": "MainActivity.readAssetFile(String inFile)", "testcase": false, "constructor": false}, {"identifier": "requestBasicPermissions", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void requestBasicPermissions()", "full_signature": "private void requestBasicPermissions()", "class_method_signature": "MainActivity.requestBasicPermissions()", "testcase": false, "constructor": false}, {"identifier": "onRequestPermissionsResult", "parameters": "(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults)", "modifiers": "@Override public", "return": "void", "signature": "void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults)", "full_signature": "@Override public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults)", "class_method_signature": "MainActivity.onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults)", "testcase": false, "constructor": false}, {"identifier": "showInfoNotification", "parameters": "(String title, String content)", "modifiers": "private", "return": "void", "signature": "void showInfoNotification(String title, String content)", "full_signature": "private void showInfoNotification(String title, String content)", "class_method_signature": "MainActivity.showInfoNotification(String title, String content)", "testcase": false, "constructor": false}], "file": "sample/src/main/java/io/ona/kujaku/sample/activities/MainActivity.java"}, "focal_method": {"identifier": "onActivityResult", "parameters": "(int requestCode, int resultCode, Intent data)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        switch(requestCode) {\n            case MAP_ACTIVITY_REQUEST_CODE:\n                if (resultCode == Activity.RESULT_OK) {\n                    // data from a dropped feature point\n                    if (data.hasExtra(NEW_FEATURE_POINTS_JSON)) {\n                        saveDroppedPoints(data);\n                    }\n                    // data from a clicked feature point\n                    String geoJSONFeature = getString(R.string.error_msg_could_not_retrieve_chosen_feature);\n                    if (data.hasExtra(Constants.PARCELABLE_KEY_GEOJSON_FEATURE)) {\n                        geoJSONFeature = data.getStringExtra(Constants.PARCELABLE_KEY_GEOJSON_FEATURE);\n                    }\n                    Toast.makeText(this, geoJSONFeature, Toast.LENGTH_LONG)\n                            .show();\n                }\n                break;\n            default:\n                break;\n        }\n    }", "signature": "void onActivityResult(int requestCode, int resultCode, Intent data)", "full_signature": "@Override protected void onActivityResult(int requestCode, int resultCode, Intent data)", "class_method_signature": "MainActivity.onActivityResult(int requestCode, int resultCode, Intent data)", "testcase": false, "constructor": false, "invocations": ["hasExtra", "saveDroppedPoints", "getString", "hasExtra", "getStringExtra", "show", "makeText"]}, "repository": {"repo_id": 109667968, "url": "https://github.com/onaio/kujaku", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 4778, "license": "licensed"}}