{"test_class": {"identifier": "PartitionedRegionIDGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock Execution execution;", "modifier": "@Mock", "type": "Execution", "declarator": "execution", "var_name": "execution"}, {"original_string": "@Mock FunctionServiceHelper functionServiceHelper;", "modifier": "@Mock", "type": "FunctionServiceHelper", "declarator": "functionServiceHelper", "var_name": "functionServiceHelper"}, {"original_string": "@Mock ResultCollector<?,?> resultCollector;", "modifier": "@Mock", "type": "ResultCollector<?,?>", "declarator": "resultCollector", "var_name": "resultCollector"}, {"original_string": "PartitionedRegionIDGenerator idGenerator;", "modifier": "", "type": "PartitionedRegionIDGenerator", "declarator": "idGenerator", "var_name": "idGenerator"}, {"original_string": "Collection<long[]> collection;", "modifier": "", "type": "Collection<long[]>", "declarator": "collection", "var_name": "collection"}], "file": "gemfire-utils/gemfire-keyfw/src/test/java/io/pivotal/bds/gemfire/keyfw/generator/PartitionedRegionIDGeneratorTest.java"}, "test_case": {"identifier": "getId", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void getId() {\n        assertEquals((long)idGenerator.generate(\"test\"), 0L);\n        assertEquals((long)idGenerator.generate(\"test\"), 1L);\n        assertEquals((long)idGenerator.generate(\"test\"), 2L);\n        assertEquals((long)idGenerator.generate(\"test\"), 3L);\n    }", "signature": "void getId()", "full_signature": "@Test void getId()", "class_method_signature": "PartitionedRegionIDGeneratorTest.getId()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "generate", "assertEquals", "generate", "assertEquals", "generate", "assertEquals", "generate"]}, "focal_class": {"identifier": "PartitionedRegionIDGenerator", "superclass": "", "interfaces": "implements IDGenerator<Long>", "fields": [{"original_string": "private Region<String, Long> idRegion;", "modifier": "private", "type": "Region<String, Long>", "declarator": "idRegion", "var_name": "idRegion"}, {"original_string": "private FunctionServiceHelper functionServiceHelper;", "modifier": "private", "type": "FunctionServiceHelper", "declarator": "functionServiceHelper", "var_name": "functionServiceHelper"}, {"original_string": "private long nextId = -1L;", "modifier": "private", "type": "long", "declarator": "nextId = -1L", "var_name": "nextId"}, {"original_string": "private long lastId = -1L;", "modifier": "private", "type": "long", "declarator": "lastId = -1L", "var_name": "lastId"}, {"original_string": "private  static final Logger LOG = LoggerFactory.getLogger(PartitionedRegionIDGenerator.class);", "modifier": "private  static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(PartitionedRegionIDGenerator.class)", "var_name": "LOG"}], "methods": [{"identifier": "PartitionedRegionIDGenerator", "parameters": "(Region<String, Long> idRegion, FunctionServiceHelper functionServiceHelper)", "modifiers": "public", "return": "", "signature": " PartitionedRegionIDGenerator(Region<String, Long> idRegion, FunctionServiceHelper functionServiceHelper)", "full_signature": "public  PartitionedRegionIDGenerator(Region<String, Long> idRegion, FunctionServiceHelper functionServiceHelper)", "class_method_signature": "PartitionedRegionIDGenerator.PartitionedRegionIDGenerator(Region<String, Long> idRegion, FunctionServiceHelper functionServiceHelper)", "testcase": false, "constructor": true}, {"identifier": "generate", "parameters": "(String domain)", "modifiers": "@Override public synchronized", "return": "Long", "signature": "Long generate(String domain)", "full_signature": "@Override public synchronized Long generate(String domain)", "class_method_signature": "PartitionedRegionIDGenerator.generate(String domain)", "testcase": false, "constructor": false}], "file": "gemfire-utils/gemfire-keyfw/src/main/java/io/pivotal/bds/gemfire/keyfw/generator/PartitionedRegionIDGenerator.java"}, "focal_method": {"identifier": "generate", "parameters": "(String domain)", "modifiers": "@Override public synchronized", "return": "Long", "body": "@Override\n    public synchronized Long generate(String domain) {\n        if (nextId < 0L || nextId > lastId) {\n            Collection<long[]> coll = (Collection<long[]>) functionServiceHelper\n                    .onRegion(idRegion)\n                    .withArgs(domain)\n                    .execute(\"PartitionedRegionIDGeneratorFunction\")\n                    .getResult();\n            assert coll.size() == 1;\n\n            long[] ids = coll.iterator().next();\n            assert ids.length == 2;\n\n            nextId = ids[0];\n            lastId = ids[1];\n        }\n\n        LOG.debug(\"generate: domain={}, nextId={}, lastId={}\", domain, nextId, lastId);\n        return nextId++;\n    }", "signature": "Long generate(String domain)", "full_signature": "@Override public synchronized Long generate(String domain)", "class_method_signature": "PartitionedRegionIDGenerator.generate(String domain)", "testcase": false, "constructor": false, "invocations": ["getResult", "execute", "withArgs", "onRegion", "size", "next", "iterator", "debug"]}, "repository": {"repo_id": 44442208, "url": "https://github.com/Pivotal-Field-Engineering/gemfire-fe", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 20, "size": 75522, "license": "licensed"}}