{"test_class": {"identifier": "StrategyStorageStrategyTest", "superclass": "", "interfaces": "", "fields": [], "file": "CoreFeatures/Base/StrategyStorageStrategy/src/test/java/info/smart_tools/smartactors/base/strategy/strategy_storage_strategy/StrategyStorageStrategyTest.java"}, "test_case": {"identifier": "checkExceptionOnRegister", "parameters": "()", "modifiers": "@Test (expected = AdditionDependencyStrategyException.class) public", "return": "void", "body": "@Test (expected = AdditionDependencyStrategyException.class)\n    public void checkExceptionOnRegister()\n            throws Exception {\n        IResolveDependencyStrategy strategy = new StrategyStorageStrategy(\n                (a) -> {\n                    throw new InvalidArgumentException(\"\");\n                },\n                null\n        );\n        ((IAdditionDependencyStrategy) strategy).register(null, null);\n    }", "signature": "void checkExceptionOnRegister()", "full_signature": "@Test (expected = AdditionDependencyStrategyException.class) public void checkExceptionOnRegister()", "class_method_signature": "StrategyStorageStrategyTest.checkExceptionOnRegister()", "testcase": true, "constructor": false, "invocations": ["register"]}, "focal_class": {"identifier": "StrategyStorageStrategy", "superclass": "", "interfaces": "implements IResolveDependencyStrategy, IAdditionDependencyStrategy", "fields": [{"original_string": "private ConcurrentMap<Object, IResolveDependencyStrategy> strategyStorage;", "modifier": "private", "type": "ConcurrentMap<Object, IResolveDependencyStrategy>", "declarator": "strategyStorage", "var_name": "strategyStorage"}, {"original_string": "private IFunction argToKeyFunction;", "modifier": "private", "type": "IFunction", "declarator": "argToKeyFunction", "var_name": "argToKeyFunction"}, {"original_string": "private IBiFunction findValueByArgumentFunction;", "modifier": "private", "type": "IBiFunction", "declarator": "findValueByArgumentFunction", "var_name": "findValueByArgumentFunction"}], "methods": [{"identifier": "StrategyStorageStrategy", "parameters": "(final IFunction argToKeyFunction, final IBiFunction findValueByArgumentFunction)", "modifiers": "public", "return": "", "signature": " StrategyStorageStrategy(final IFunction argToKeyFunction, final IBiFunction findValueByArgumentFunction)", "full_signature": "public  StrategyStorageStrategy(final IFunction argToKeyFunction, final IBiFunction findValueByArgumentFunction)", "class_method_signature": "StrategyStorageStrategy.StrategyStorageStrategy(final IFunction argToKeyFunction, final IBiFunction findValueByArgumentFunction)", "testcase": false, "constructor": true}, {"identifier": "resolve", "parameters": "(Object... args)", "modifiers": "@Override public", "return": "T", "signature": "T resolve(Object... args)", "full_signature": "@Override public T resolve(Object... args)", "class_method_signature": "StrategyStorageStrategy.resolve(Object... args)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(Object arg, IResolveDependencyStrategy value)", "modifiers": "@Override public", "return": "void", "signature": "void register(Object arg, IResolveDependencyStrategy value)", "full_signature": "@Override public void register(Object arg, IResolveDependencyStrategy value)", "class_method_signature": "StrategyStorageStrategy.register(Object arg, IResolveDependencyStrategy value)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Object arg)", "modifiers": "@Override public", "return": "void", "signature": "void remove(Object arg)", "full_signature": "@Override public void remove(Object arg)", "class_method_signature": "StrategyStorageStrategy.remove(Object arg)", "testcase": false, "constructor": false}], "file": "CoreFeatures/Base/StrategyStorageStrategy/src/main/java/info/smart_tools/smartactors/base/strategy/strategy_storage_strategy/StrategyStorageStrategy.java"}, "focal_method": {"identifier": "register", "parameters": "(Object arg, IResolveDependencyStrategy value)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void register(Object arg, IResolveDependencyStrategy value)\n            throws AdditionDependencyStrategyException {\n        try {\n            this.strategyStorage.put(this.argToKeyFunction.execute(arg), value);\n        } catch (InvalidArgumentException | FunctionExecutionException e) {\n            throw new AdditionDependencyStrategyException(e);\n        }\n    }", "signature": "void register(Object arg, IResolveDependencyStrategy value)", "full_signature": "@Override public void register(Object arg, IResolveDependencyStrategy value)", "class_method_signature": "StrategyStorageStrategy.register(Object arg, IResolveDependencyStrategy value)", "testcase": false, "constructor": false, "invocations": ["put", "execute"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}