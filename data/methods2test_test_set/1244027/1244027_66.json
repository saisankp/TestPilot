{"test_class": {"identifier": "ExcelMetadataReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "sequencers/modeshape-sequencer-msoffice/src/test/java/org/modeshape/sequencer/msoffice/excel/ExcelMetadataReaderTest.java"}, "test_case": {"identifier": "shouldBeAbleToCreateMetadataForExcel", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldBeAbleToCreateMetadataForExcel() throws Exception {\n        InputStream inputStream = getClass().getClassLoader().getResourceAsStream(\"excel.xls\");\n\n        ExcelMetadata excelMetadata = ExcelMetadataReader.instance(inputStream);\n        ExcelSheetMetadata sheet2 = excelMetadata.getSheet(\"MySheet2\");\n        assertThat(sheet2, is(notNullValue()));\n        assertThat(excelMetadata.getSheet(\"Sheet1\").getText().startsWith(\"This is a text\"), is(true));\n    }", "signature": "void shouldBeAbleToCreateMetadataForExcel()", "full_signature": "@Test public void shouldBeAbleToCreateMetadataForExcel()", "class_method_signature": "ExcelMetadataReaderTest.shouldBeAbleToCreateMetadataForExcel()", "testcase": true, "constructor": false, "invocations": ["getResourceAsStream", "getClassLoader", "getClass", "instance", "getSheet", "assertThat", "is", "notNullValue", "assertThat", "startsWith", "getText", "getSheet", "is"]}, "focal_class": {"identifier": "ExcelMetadataReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final char ROW_DELIMITER_CHAR = '\\n';", "modifier": "private static final", "type": "char", "declarator": "ROW_DELIMITER_CHAR = '\\n'", "var_name": "ROW_DELIMITER_CHAR"}, {"original_string": "private static final char CELL_DELIMITER_CHAR = '\\t';", "modifier": "private static final", "type": "char", "declarator": "CELL_DELIMITER_CHAR = '\\t'", "var_name": "CELL_DELIMITER_CHAR"}], "methods": [{"identifier": "instance", "parameters": "( InputStream stream )", "modifiers": "public static", "return": "ExcelMetadata", "signature": "ExcelMetadata instance( InputStream stream )", "full_signature": "public static ExcelMetadata instance( InputStream stream )", "class_method_signature": "ExcelMetadataReader.instance( InputStream stream )", "testcase": false, "constructor": false}], "file": "sequencers/modeshape-sequencer-msoffice/src/main/java/org/modeshape/sequencer/msoffice/excel/ExcelMetadataReader.java"}, "focal_method": {"identifier": "instance", "parameters": "( InputStream stream )", "modifiers": "public static", "return": "ExcelMetadata", "body": "public static ExcelMetadata instance( InputStream stream ) throws IOException {\n        ExcelMetadata metadata = new ExcelMetadata();\n        HSSFWorkbook wb = new HSSFWorkbook(new POIFSFileSystem(stream));\n\n        List<ExcelSheetMetadata> sheets = new ArrayList<ExcelSheetMetadata>();\n\n        for (int sheetInd = 0; sheetInd < wb.getNumberOfSheets(); sheetInd++) {\n            ExcelSheetMetadata meta = new ExcelSheetMetadata();\n            meta.setName(wb.getSheetName(sheetInd));\n            sheets.add(meta);\n\n            HSSFSheet worksheet = wb.getSheetAt(sheetInd);\n            int lastRowNum = worksheet.getLastRowNum();\n\n            StringBuilder buff = new StringBuilder();\n            for (int rowNum = worksheet.getFirstRowNum(); rowNum <= lastRowNum; rowNum++) {\n                HSSFRow row = worksheet.getRow(rowNum);\n\n                // Empty rows are returned as null\n                if (row == null) {\n                    continue;\n                }\n\n                int lastCellNum = row.getLastCellNum();\n                for (int cellNum = row.getFirstCellNum(); cellNum < lastCellNum; cellNum++) {\n                    HSSFCell cell = row.getCell(cellNum);\n\n                    // Undefined cells are returned as null\n                    if (cell == null) {\n                        continue;\n                    }\n\n                    /*\n                     * Builds a string of body content from all string, numeric,\n                     * and formula values in the body of each worksheet.\n                     * \n                     *  This code currently duplicates the POI 3.1 ExcelExtractor behavior of\n                     *  combining the body text from all worksheets into a single string.\n                     */\n                    switch (cell.getCellType()) {\n                        case HSSFCell.CELL_TYPE_STRING:\n                            buff.append(cell.getRichStringCellValue().getString());\n                            break;\n                        case HSSFCell.CELL_TYPE_NUMERIC:\n                            buff.append(cell.getNumericCellValue());\n                            break;\n                        case HSSFCell.CELL_TYPE_FORMULA:\n                            buff.append(cell.getCellFormula());\n                            break;\n                    }\n\n                    HSSFComment comment = cell.getCellComment();\n                    if (comment != null) {\n                        // Filter out row delimiter characters from comment\n                        String commentText = comment.getString().getString().replace(ROW_DELIMITER_CHAR, ' ');\n\n                        buff.append(\" [\");\n                        buff.append(commentText);\n                        buff.append(\" by \");\n                        buff.append(comment.getAuthor());\n                        buff.append(']');\n                    }\n\n                    if (cellNum < lastCellNum - 1) {\n                        buff.append(CELL_DELIMITER_CHAR);\n                    } else {\n                        buff.append(ROW_DELIMITER_CHAR);\n                    }\n                }\n            }\n            meta.setText(buff.toString());\n        }\n\n        metadata.setSheets(sheets);\n        metadata.setMetadata(wb.getSummaryInformation());\n        return metadata;\n    }", "signature": "ExcelMetadata instance( InputStream stream )", "full_signature": "public static ExcelMetadata instance( InputStream stream )", "class_method_signature": "ExcelMetadataReader.instance( InputStream stream )", "testcase": false, "constructor": false, "invocations": ["getNumberOfSheets", "setName", "getSheetName", "add", "getSheetAt", "getLastRowNum", "getFirstRowNum", "getRow", "getLastCellNum", "getFirstCellNum", "getCell", "getCellType", "append", "getString", "getRichStringCellValue", "append", "getNumericCellValue", "append", "getCellFormula", "getCellComment", "replace", "getString", "getString", "append", "append", "append", "append", "getAuthor", "append", "append", "append", "setText", "toString", "setSheets", "setMetadata", "getSummaryInformation"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}