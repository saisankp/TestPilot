{"test_class": {"identifier": "UserManagerFacadeTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/jcrfacade/security/user/UserManagerFacadeTest.java"}, "test_case": {"identifier": "testROCreateUser2", "parameters": "()", "modifiers": "@Test(expected = ListenerReadOnlyException.class) public", "return": "void", "body": "@Test(expected = ListenerReadOnlyException.class)\n    public void testROCreateUser2() throws Exception {\n        UserManager delegate = mock(UserManager.class);\n        UserManagerFacade facade = getFacade(delegate);\n        facade.createUser(\"\", \"\");\n    }", "signature": "void testROCreateUser2()", "full_signature": "@Test(expected = ListenerReadOnlyException.class) public void testROCreateUser2()", "class_method_signature": "UserManagerFacadeTest.testROCreateUser2()", "testcase": true, "constructor": false, "invocations": ["mock", "getFacade", "createUser"]}, "focal_class": {"identifier": "UserManagerFacade", "superclass": "", "interfaces": "implements UserManager", "fields": [{"original_string": "private final @NotNull UserManager delegate;", "modifier": "private final @NotNull", "type": "UserManager", "declarator": "delegate", "var_name": "delegate"}], "methods": [{"identifier": "UserManagerFacade", "parameters": "(final @NotNull UserManager delegate)", "modifiers": "public", "return": "", "signature": " UserManagerFacade(final @NotNull UserManager delegate)", "full_signature": "public  UserManagerFacade(final @NotNull UserManager delegate)", "class_method_signature": "UserManagerFacade.UserManagerFacade(final @NotNull UserManager delegate)", "testcase": false, "constructor": true}, {"identifier": "isAutoSave", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAutoSave()", "full_signature": "@Override public boolean isAutoSave()", "class_method_signature": "UserManagerFacade.isAutoSave()", "testcase": false, "constructor": false}, {"identifier": "getAuthorizable", "parameters": "(final String id)", "modifiers": "@Override public", "return": "Authorizable", "signature": "Authorizable getAuthorizable(final String id)", "full_signature": "@Override public Authorizable getAuthorizable(final String id)", "class_method_signature": "UserManagerFacade.getAuthorizable(final String id)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizable", "parameters": "(final String id, final Class<T> authorizableClass)", "modifiers": "@Override public", "return": "T", "signature": "T getAuthorizable(final String id, final Class<T> authorizableClass)", "full_signature": "@Override public T getAuthorizable(final String id, final Class<T> authorizableClass)", "class_method_signature": "UserManagerFacade.getAuthorizable(final String id, final Class<T> authorizableClass)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizable", "parameters": "(final Principal principal)", "modifiers": "@Override public", "return": "Authorizable", "signature": "Authorizable getAuthorizable(final Principal principal)", "full_signature": "@Override public Authorizable getAuthorizable(final Principal principal)", "class_method_signature": "UserManagerFacade.getAuthorizable(final Principal principal)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizableByPath", "parameters": "(final String path)", "modifiers": "@Override public", "return": "Authorizable", "signature": "Authorizable getAuthorizableByPath(final String path)", "full_signature": "@Override public Authorizable getAuthorizableByPath(final String path)", "class_method_signature": "UserManagerFacade.getAuthorizableByPath(final String path)", "testcase": false, "constructor": false}, {"identifier": "findAuthorizables", "parameters": "(final String relPath, final String value)", "modifiers": "@Override public", "return": "Iterator<Authorizable>", "signature": "Iterator<Authorizable> findAuthorizables(final String relPath, final String value)", "full_signature": "@Override public Iterator<Authorizable> findAuthorizables(final String relPath, final String value)", "class_method_signature": "UserManagerFacade.findAuthorizables(final String relPath, final String value)", "testcase": false, "constructor": false}, {"identifier": "findAuthorizables", "parameters": "(final String relPath, final String value, final int searchType)", "modifiers": "@Override public", "return": "Iterator<Authorizable>", "signature": "Iterator<Authorizable> findAuthorizables(final String relPath, final String value, final int searchType)", "full_signature": "@Override public Iterator<Authorizable> findAuthorizables(final String relPath, final String value, final int searchType)", "class_method_signature": "UserManagerFacade.findAuthorizables(final String relPath, final String value, final int searchType)", "testcase": false, "constructor": false}, {"identifier": "findAuthorizables", "parameters": "(final Query query)", "modifiers": "@Override public", "return": "Iterator<Authorizable>", "signature": "Iterator<Authorizable> findAuthorizables(final Query query)", "full_signature": "@Override public Iterator<Authorizable> findAuthorizables(final Query query)", "class_method_signature": "UserManagerFacade.findAuthorizables(final Query query)", "testcase": false, "constructor": false}, {"identifier": "createUser", "parameters": "(final String userID, final String password)", "modifiers": "@Override public", "return": "User", "signature": "User createUser(final String userID, final String password)", "full_signature": "@Override public User createUser(final String userID, final String password)", "class_method_signature": "UserManagerFacade.createUser(final String userID, final String password)", "testcase": false, "constructor": false}, {"identifier": "createUser", "parameters": "(final String userID, final String password, final Principal principal, final String intermediatePath)", "modifiers": "@Override public", "return": "User", "signature": "User createUser(final String userID, final String password, final Principal principal, final String intermediatePath)", "full_signature": "@Override public User createUser(final String userID, final String password, final Principal principal, final String intermediatePath)", "class_method_signature": "UserManagerFacade.createUser(final String userID, final String password, final Principal principal, final String intermediatePath)", "testcase": false, "constructor": false}, {"identifier": "createSystemUser", "parameters": "(final String userID, final String intermediatePath)", "modifiers": "@Override public", "return": "User", "signature": "User createSystemUser(final String userID, final String intermediatePath)", "full_signature": "@Override public User createSystemUser(final String userID, final String intermediatePath)", "class_method_signature": "UserManagerFacade.createSystemUser(final String userID, final String intermediatePath)", "testcase": false, "constructor": false}, {"identifier": "createGroup", "parameters": "(final String groupID)", "modifiers": "@Override public", "return": "Group", "signature": "Group createGroup(final String groupID)", "full_signature": "@Override public Group createGroup(final String groupID)", "class_method_signature": "UserManagerFacade.createGroup(final String groupID)", "testcase": false, "constructor": false}, {"identifier": "createGroup", "parameters": "(final Principal principal)", "modifiers": "@Override public", "return": "Group", "signature": "Group createGroup(final Principal principal)", "full_signature": "@Override public Group createGroup(final Principal principal)", "class_method_signature": "UserManagerFacade.createGroup(final Principal principal)", "testcase": false, "constructor": false}, {"identifier": "createGroup", "parameters": "(final Principal principal, final String intermediatePath)", "modifiers": "@Override public", "return": "Group", "signature": "Group createGroup(final Principal principal, final String intermediatePath)", "full_signature": "@Override public Group createGroup(final Principal principal, final String intermediatePath)", "class_method_signature": "UserManagerFacade.createGroup(final Principal principal, final String intermediatePath)", "testcase": false, "constructor": false}, {"identifier": "createGroup", "parameters": "(final String groupID, final Principal principal, final String intermediatePath)", "modifiers": "@Override public", "return": "Group", "signature": "Group createGroup(final String groupID, final Principal principal, final String intermediatePath)", "full_signature": "@Override public Group createGroup(final String groupID, final Principal principal, final String intermediatePath)", "class_method_signature": "UserManagerFacade.createGroup(final String groupID, final Principal principal, final String intermediatePath)", "testcase": false, "constructor": false}, {"identifier": "autoSave", "parameters": "(final boolean enable)", "modifiers": "@Override public", "return": "void", "signature": "void autoSave(final boolean enable)", "full_signature": "@Override public void autoSave(final boolean enable)", "class_method_signature": "UserManagerFacade.autoSave(final boolean enable)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/jcrfacade/security/user/UserManagerFacade.java"}, "focal_method": {"identifier": "createUser", "parameters": "(final String userID, final String password)", "modifiers": "@Override public", "return": "User", "body": "@Override\n    public User createUser(final String userID, final String password) throws RepositoryException {\n        throw new ListenerReadOnlyException();\n    }", "signature": "User createUser(final String userID, final String password)", "full_signature": "@Override public User createUser(final String userID, final String password)", "class_method_signature": "UserManagerFacade.createUser(final String userID, final String password)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}