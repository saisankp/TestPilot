{"test_class": {"identifier": "QNameUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "spring-xml/src/test/java/org/springframework/xml/namespace/QNameUtilsTest.java"}, "test_case": {"identifier": "testValidQNames", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testValidQNames() {\n\t\tAssert.assertTrue(\"Namespace QName not validated\", QNameUtils.validateQName(\"{namespace}local\"));\n\t\tAssert.assertTrue(\"No Namespace QName not validated\", QNameUtils.validateQName(\"local\"));\n\t}", "signature": "void testValidQNames()", "full_signature": "@Test public void testValidQNames()", "class_method_signature": "QNameUtilsTest.testValidQNames()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "validateQName", "assertTrue", "validateQName"]}, "focal_class": {"identifier": "QNameUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "createQName", "parameters": "(String namespaceUri, String localPart, String prefix)", "modifiers": "@Deprecated public static", "return": "QName", "signature": "QName createQName(String namespaceUri, String localPart, String prefix)", "full_signature": "@Deprecated public static QName createQName(String namespaceUri, String localPart, String prefix)", "class_method_signature": "QNameUtils.createQName(String namespaceUri, String localPart, String prefix)", "testcase": false, "constructor": false}, {"identifier": "getPrefix", "parameters": "(QName qName)", "modifiers": "@Deprecated public static", "return": "String", "signature": "String getPrefix(QName qName)", "full_signature": "@Deprecated public static String getPrefix(QName qName)", "class_method_signature": "QNameUtils.getPrefix(QName qName)", "testcase": false, "constructor": false}, {"identifier": "validateQName", "parameters": "(String text)", "modifiers": "public static", "return": "boolean", "signature": "boolean validateQName(String text)", "full_signature": "public static boolean validateQName(String text)", "class_method_signature": "QNameUtils.validateQName(String text)", "testcase": false, "constructor": false}, {"identifier": "getQNameForNode", "parameters": "(Node node)", "modifiers": "public static", "return": "QName", "signature": "QName getQNameForNode(Node node)", "full_signature": "public static QName getQNameForNode(Node node)", "class_method_signature": "QNameUtils.getQNameForNode(Node node)", "testcase": false, "constructor": false}, {"identifier": "toQualifiedName", "parameters": "(QName qName)", "modifiers": "public static", "return": "String", "signature": "String toQualifiedName(QName qName)", "full_signature": "public static String toQualifiedName(QName qName)", "class_method_signature": "QNameUtils.toQualifiedName(QName qName)", "testcase": false, "constructor": false}, {"identifier": "toQName", "parameters": "(String namespaceUri, String qualifiedName)", "modifiers": "public static", "return": "QName", "signature": "QName toQName(String namespaceUri, String qualifiedName)", "full_signature": "public static QName toQName(String namespaceUri, String qualifiedName)", "class_method_signature": "QNameUtils.toQName(String namespaceUri, String qualifiedName)", "testcase": false, "constructor": false}, {"identifier": "parseQNameString", "parameters": "(String qNameString)", "modifiers": "public static", "return": "QName", "signature": "QName parseQNameString(String qNameString)", "full_signature": "public static QName parseQNameString(String qNameString)", "class_method_signature": "QNameUtils.parseQNameString(String qNameString)", "testcase": false, "constructor": false}], "file": "spring-xml/src/main/java/org/springframework/xml/namespace/QNameUtils.java"}, "focal_method": {"identifier": "validateQName", "parameters": "(String text)", "modifiers": "public static", "return": "boolean", "body": "public static boolean validateQName(String text) {\n\t\tif (!StringUtils.hasLength(text)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (text.charAt(0) == '{') {\n\t\t\tint i = text.indexOf('}');\n\n\t\t\tif (i == -1 || i == text.length() - 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}", "signature": "boolean validateQName(String text)", "full_signature": "public static boolean validateQName(String text)", "class_method_signature": "QNameUtils.validateQName(String text)", "testcase": false, "constructor": false, "invocations": ["hasLength", "charAt", "indexOf", "length"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}