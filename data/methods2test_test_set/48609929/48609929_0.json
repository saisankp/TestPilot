{"test_class": {"identifier": "sequencerTest", "superclass": "", "interfaces": "", "fields": [], "file": "privilegedtask/src/test/java/com/nillith/android/permissions/sequencerTest.java"}, "test_case": {"identifier": "sequencerShouldReturnIntegerIncrementallyFrom0To255", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void sequencerShouldReturnIntegerIncrementallyFrom0To255(){\n        int pre = Sequencer.next();\n        int cur;\n        for (int i = 0; i < 10000; ++i){\n            cur = Sequencer.next();\n            Assert.assertTrue(cur >= 0);\n            Assert.assertTrue(cur <= 255);\n            if(pre == 255){\n                pre = 0;\n                Assert.assertEquals(0, cur);\n            }else {\n                Assert.assertEquals(1, cur - pre);\n                pre = cur;\n            }\n        }\n    }", "signature": "void sequencerShouldReturnIntegerIncrementallyFrom0To255()", "full_signature": "@Test public void sequencerShouldReturnIntegerIncrementallyFrom0To255()", "class_method_signature": "sequencerTest.sequencerShouldReturnIntegerIncrementallyFrom0To255()", "testcase": true, "constructor": false, "invocations": ["next", "next", "assertTrue", "assertTrue", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "Sequencer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static AtomicInteger counter = new AtomicInteger();", "modifier": "private static", "type": "AtomicInteger", "declarator": "counter = new AtomicInteger()", "var_name": "counter"}], "methods": [{"identifier": "next", "parameters": "()", "modifiers": "public static", "return": "int", "signature": "int next()", "full_signature": "public static int next()", "class_method_signature": "Sequencer.next()", "testcase": false, "constructor": false}, {"identifier": "Sequencer", "parameters": "()", "modifiers": "private", "return": "", "signature": " Sequencer()", "full_signature": "private  Sequencer()", "class_method_signature": "Sequencer.Sequencer()", "testcase": false, "constructor": true}], "file": "privilegedtask/src/main/java/com/nillith/android/permissions/Sequencer.java"}, "focal_method": {"identifier": "next", "parameters": "()", "modifiers": "public static", "return": "int", "body": "public static int next() {\n        int tick = counter.getAndIncrement();\n        return tick & 0xff;\n    }", "signature": "int next()", "full_signature": "public static int next()", "class_method_signature": "Sequencer.next()", "testcase": false, "constructor": false, "invocations": ["getAndIncrement"]}, "repository": {"repo_id": 48609929, "url": "https://github.com/nillith/PrivilegedTask", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 6, "size": 128, "license": "licensed"}}