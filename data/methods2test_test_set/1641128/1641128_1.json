{"test_class": {"identifier": "FieldNameToArrayNotationWithValueFunctionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "FieldNameToArrayNotationWithValueFunction<Task> function;", "modifier": "", "type": "FieldNameToArrayNotationWithValueFunction<Task>", "declarator": "function", "var_name": "function"}], "file": "janbanery-core/src/test/java/pl/project13/janbanery/encoders/utils/FieldNameToArrayNotationWithValueFunctionTest.java"}, "test_case": {"identifier": "testCamelCaseToUnderscore", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCamelCaseToUnderscore() throws Exception {\n    // given\n    String fieldName = \"accountId\";\n\n    // when\n    String underscoredName = function.camelCaseToUnderscore(fieldName);\n\n    // then\n    assertThat(underscoredName).isEqualTo(\"account_id\");\n  }", "signature": "void testCamelCaseToUnderscore()", "full_signature": "@Test public void testCamelCaseToUnderscore()", "class_method_signature": "FieldNameToArrayNotationWithValueFunctionTest.testCamelCaseToUnderscore()", "testcase": true, "constructor": false, "invocations": ["camelCaseToUnderscore", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "FieldNameToArrayNotationWithValueFunction", "superclass": "", "interfaces": "implements Function<Field, String>", "fields": [{"original_string": "private final String fieldRepresentation = \"%s[%s]=%s\";", "modifier": "private final", "type": "String", "declarator": "fieldRepresentation = \"%s[%s]=%s\"", "var_name": "fieldRepresentation"}, {"original_string": "private final T entity;", "modifier": "private final", "type": "T", "declarator": "entity", "var_name": "entity"}, {"original_string": "private final ReflectionHelper reflectionHelper = new ReflectionHelper();", "modifier": "private final", "type": "ReflectionHelper", "declarator": "reflectionHelper = new ReflectionHelper()", "var_name": "reflectionHelper"}], "methods": [{"identifier": "FieldNameToArrayNotationWithValueFunction", "parameters": "(T entity)", "modifiers": "public", "return": "", "signature": " FieldNameToArrayNotationWithValueFunction(T entity)", "full_signature": "public  FieldNameToArrayNotationWithValueFunction(T entity)", "class_method_signature": "FieldNameToArrayNotationWithValueFunction.FieldNameToArrayNotationWithValueFunction(T entity)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(Field field)", "modifiers": "@Override public", "return": "String", "signature": "String apply(Field field)", "full_signature": "@Override public String apply(Field field)", "class_method_signature": "FieldNameToArrayNotationWithValueFunction.apply(Field field)", "testcase": false, "constructor": false}, {"identifier": "asEncodedFieldRepresentation", "parameters": "(String resourceId, String underscoredFieldName, Object value)", "modifiers": "private", "return": "String", "signature": "String asEncodedFieldRepresentation(String resourceId, String underscoredFieldName, Object value)", "full_signature": "private String asEncodedFieldRepresentation(String resourceId, String underscoredFieldName, Object value)", "class_method_signature": "FieldNameToArrayNotationWithValueFunction.asEncodedFieldRepresentation(String resourceId, String underscoredFieldName, Object value)", "testcase": false, "constructor": false}, {"identifier": "camelCaseToUnderscore", "parameters": "(String fieldName)", "modifiers": "@VisibleForTesting", "return": "String", "signature": "String camelCaseToUnderscore(String fieldName)", "full_signature": "@VisibleForTesting String camelCaseToUnderscore(String fieldName)", "class_method_signature": "FieldNameToArrayNotationWithValueFunction.camelCaseToUnderscore(String fieldName)", "testcase": false, "constructor": false}], "file": "janbanery-core/src/main/java/pl/project13/janbanery/encoders/utils/FieldNameToArrayNotationWithValueFunction.java"}, "focal_method": {"identifier": "camelCaseToUnderscore", "parameters": "(String fieldName)", "modifiers": "@VisibleForTesting", "return": "String", "body": "@VisibleForTesting\n  String camelCaseToUnderscore(String fieldName) {\n    List<Character> chars = newArrayList(asList(fieldName.toCharArray()));\n\n    for (int i = 0; i < chars.size(); i++) {\n      Character aChar = chars.get(i);\n      if (Character.isUpperCase(aChar)) {\n        chars.remove(i);\n        chars.add(i, Character.toLowerCase(aChar));\n        chars.add(i, '_');\n      }\n    }\n\n    return Joiner.on(\"\").join(chars);\n  }", "signature": "String camelCaseToUnderscore(String fieldName)", "full_signature": "@VisibleForTesting String camelCaseToUnderscore(String fieldName)", "class_method_signature": "FieldNameToArrayNotationWithValueFunction.camelCaseToUnderscore(String fieldName)", "testcase": false, "constructor": false, "invocations": ["newArrayList", "asList", "toCharArray", "size", "get", "isUpperCase", "remove", "add", "toLowerCase", "add", "join", "on"]}, "repository": {"repo_id": 1641128, "url": "https://github.com/ktoso/janbanery", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 2250, "license": "licensed"}}