{"test_class": {"identifier": "ArrayExamplesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final int size;", "modifier": "private final", "type": "int", "declarator": "size", "var_name": "size"}, {"original_string": "private final double[] output;", "modifier": "private final", "type": "double[]", "declarator": "output", "var_name": "output"}], "file": "concurrency/src/test/java/com/insightfullogic/java8/examples/chapter6/ArrayExamplesTest.java"}, "test_case": {"identifier": "imperative", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void imperative() {\n        assertArrayEquals(output, ArrayExamples.imperativeInitilize(size), 0.0);\n    }", "signature": "void imperative()", "full_signature": "@Test public void imperative()", "class_method_signature": "ArrayExamplesTest.imperative()", "testcase": true, "constructor": false, "invocations": ["assertArrayEquals", "imperativeInitilize"]}, "focal_class": {"identifier": "ArrayExamples", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "simpleMovingAverage", "parameters": "(double[] values, int n)", "modifiers": "public static", "return": "double[]", "signature": "double[] simpleMovingAverage(double[] values, int n)", "full_signature": "public static double[] simpleMovingAverage(double[] values, int n)", "class_method_signature": "ArrayExamples.simpleMovingAverage(double[] values, int n)", "testcase": false, "constructor": false}, {"identifier": "parallelInitialize", "parameters": "(int size)", "modifiers": "public static", "return": "double[]", "signature": "double[] parallelInitialize(int size)", "full_signature": "public static double[] parallelInitialize(int size)", "class_method_signature": "ArrayExamples.parallelInitialize(int size)", "testcase": false, "constructor": false}, {"identifier": "imperativeInitilize", "parameters": "(int size)", "modifiers": "public static", "return": "double[]", "signature": "double[] imperativeInitilize(int size)", "full_signature": "public static double[] imperativeInitilize(int size)", "class_method_signature": "ArrayExamples.imperativeInitilize(int size)", "testcase": false, "constructor": false}], "file": "concurrency/src/main/java/com/insightfullogic/java8/examples/chapter6/ArrayExamples.java"}, "focal_method": {"identifier": "imperativeInitilize", "parameters": "(int size)", "modifiers": "public static", "return": "double[]", "body": "public static double[] imperativeInitilize(int size) {\n    double[] values = new double[size];\n    for(int i = 0; i < values.length;i++) {\n        values[i] = i;\n    }\n    return values;\n}", "signature": "double[] imperativeInitilize(int size)", "full_signature": "public static double[] imperativeInitilize(int size)", "class_method_signature": "ArrayExamples.imperativeInitilize(int size)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}