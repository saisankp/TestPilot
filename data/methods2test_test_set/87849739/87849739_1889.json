{"test_class": {"identifier": "ThingAcknowledgementFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final AcknowledgementLabel KNOWN_LABEL = DittoAcknowledgementLabel.TWIN_PERSISTED;", "modifier": "private static final", "type": "AcknowledgementLabel", "declarator": "KNOWN_LABEL = DittoAcknowledgementLabel.TWIN_PERSISTED", "var_name": "KNOWN_LABEL"}, {"original_string": "private static final ThingId KNOWN_THING_ID = ThingId.generateRandom();", "modifier": "private static final", "type": "ThingId", "declarator": "KNOWN_THING_ID = ThingId.generateRandom()", "var_name": "KNOWN_THING_ID"}, {"original_string": "private static final HttpStatusCode KNOWN_STATUS_CODE = HttpStatusCode.NOT_FOUND;", "modifier": "private static final", "type": "HttpStatusCode", "declarator": "KNOWN_STATUS_CODE = HttpStatusCode.NOT_FOUND", "var_name": "KNOWN_STATUS_CODE"}, {"original_string": "private static final JsonObject KNOWN_PAYLOAD = JsonObject.newBuilder().set(\"foo\", \"bar\").build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_PAYLOAD = JsonObject.newBuilder().set(\"foo\", \"bar\").build()", "var_name": "KNOWN_PAYLOAD"}, {"original_string": "@Rule\n    public final TestName testName = new TestName();", "modifier": "@Rule\n    public final", "type": "TestName", "declarator": "testName = new TestName()", "var_name": "testName"}, {"original_string": "private DittoHeaders dittoHeaders;", "modifier": "private", "type": "DittoHeaders", "declarator": "dittoHeaders", "var_name": "dittoHeaders"}], "file": "signals/acks/things/src/test/java/org/eclipse/ditto/signals/acks/things/ThingAcknowledgementFactoryTest.java"}, "test_case": {"identifier": "newAcknowledgementReturnsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void newAcknowledgementReturnsExpected() {\n        final Acknowledgement acknowledgement =\n                ThingAcknowledgementFactory.newAcknowledgement(KNOWN_LABEL, KNOWN_THING_ID, KNOWN_STATUS_CODE,\n                        dittoHeaders, KNOWN_PAYLOAD);\n\n        try (final AutoCloseableSoftAssertions softly = new AutoCloseableSoftAssertions()) {\n            softly.assertThat((CharSequence) acknowledgement.getLabel())\n                    .as(\"same label\")\n                    .isEqualTo(KNOWN_LABEL);\n            softly.assertThat((CharSequence) acknowledgement.getEntityId())\n                    .as(\"same entity ID\")\n                    .isEqualTo(KNOWN_THING_ID);\n            softly.assertThat(acknowledgement.getType())\n                    .as(\"same type\")\n                    .isEqualTo(Acknowledgement.getType(KNOWN_THING_ID.getEntityType()));\n            softly.assertThat(acknowledgement.getStatusCode())\n                    .as(\"same status code\")\n                    .isEqualTo(KNOWN_STATUS_CODE);\n            softly.assertThat(acknowledgement.getDittoHeaders())\n                    .as(\"same DittoHeaders\")\n                    .isEqualTo(dittoHeaders);\n            softly.assertThat(acknowledgement.getEntity())\n                    .as(\"same entity\")\n                    .contains(KNOWN_PAYLOAD);\n        }\n    }", "signature": "void newAcknowledgementReturnsExpected()", "full_signature": "@Test public void newAcknowledgementReturnsExpected()", "class_method_signature": "ThingAcknowledgementFactoryTest.newAcknowledgementReturnsExpected()", "testcase": true, "constructor": false, "invocations": ["newAcknowledgement", "isEqualTo", "as", "assertThat", "getLabel", "isEqualTo", "as", "assertThat", "getEntityId", "isEqualTo", "as", "assertThat", "getType", "getType", "getEntityType", "isEqualTo", "as", "assertThat", "getStatusCode", "isEqualTo", "as", "assertThat", "getDittoHeaders", "contains", "as", "assertThat", "getEntity"]}, "focal_class": {"identifier": "ThingAcknowledgementFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ThingAcknowledgementFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " ThingAcknowledgementFactory()", "full_signature": "private  ThingAcknowledgementFactory()", "class_method_signature": "ThingAcknowledgementFactory.ThingAcknowledgementFactory()", "testcase": false, "constructor": true}, {"identifier": "newAcknowledgement", "parameters": "(final AcknowledgementLabel label,\n            final ThingId thingId,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders,\n            @Nullable final JsonValue payload)", "modifiers": "public static", "return": "Acknowledgement", "signature": "Acknowledgement newAcknowledgement(final AcknowledgementLabel label,\n            final ThingId thingId,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders,\n            @Nullable final JsonValue payload)", "full_signature": "public static Acknowledgement newAcknowledgement(final AcknowledgementLabel label,\n            final ThingId thingId,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders,\n            @Nullable final JsonValue payload)", "class_method_signature": "ThingAcknowledgementFactory.newAcknowledgement(final AcknowledgementLabel label,\n            final ThingId thingId,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders,\n            @Nullable final JsonValue payload)", "testcase": false, "constructor": false}, {"identifier": "newAcknowledgement", "parameters": "(final AcknowledgementLabel label,\n            final ThingId thingId,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "Acknowledgement", "signature": "Acknowledgement newAcknowledgement(final AcknowledgementLabel label,\n            final ThingId thingId,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders)", "full_signature": "public static Acknowledgement newAcknowledgement(final AcknowledgementLabel label,\n            final ThingId thingId,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "ThingAcknowledgementFactory.newAcknowledgement(final AcknowledgementLabel label,\n            final ThingId thingId,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getJsonParser", "parameters": "()", "modifiers": "public static", "return": "JsonParser", "signature": "JsonParser getJsonParser()", "full_signature": "public static JsonParser getJsonParser()", "class_method_signature": "ThingAcknowledgementFactory.getJsonParser()", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject)", "modifiers": "public static", "return": "Acknowledgement", "signature": "Acknowledgement fromJson(final JsonObject jsonObject)", "full_signature": "public static Acknowledgement fromJson(final JsonObject jsonObject)", "class_method_signature": "ThingAcknowledgementFactory.fromJson(final JsonObject jsonObject)", "testcase": false, "constructor": false}], "file": "signals/acks/things/src/main/java/org/eclipse/ditto/signals/acks/things/ThingAcknowledgementFactory.java"}, "focal_method": {"identifier": "newAcknowledgement", "parameters": "(final AcknowledgementLabel label,\n            final ThingId thingId,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders,\n            @Nullable final JsonValue payload)", "modifiers": "public static", "return": "Acknowledgement", "body": "public static Acknowledgement newAcknowledgement(final AcknowledgementLabel label,\n            final ThingId thingId,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders,\n            @Nullable final JsonValue payload) {\n\n        return Acknowledgement.of(label, thingId, statusCode, dittoHeaders, payload);\n    }", "signature": "Acknowledgement newAcknowledgement(final AcknowledgementLabel label,\n            final ThingId thingId,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders,\n            @Nullable final JsonValue payload)", "full_signature": "public static Acknowledgement newAcknowledgement(final AcknowledgementLabel label,\n            final ThingId thingId,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders,\n            @Nullable final JsonValue payload)", "class_method_signature": "ThingAcknowledgementFactory.newAcknowledgement(final AcknowledgementLabel label,\n            final ThingId thingId,\n            final HttpStatusCode statusCode,\n            final DittoHeaders dittoHeaders,\n            @Nullable final JsonValue payload)", "testcase": false, "constructor": false, "invocations": ["of"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}