{"test_class": {"identifier": "FileSourceTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-model/src/test/java/org/sejda/model/input/FileSourceTest.java"}, "test_case": {"identifier": "testNullFile", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testNullFile() {\n        FileSource.newInstance(null);\n    }", "signature": "void testNullFile()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testNullFile()", "class_method_signature": "FileSourceTest.testNullFile()", "testcase": true, "constructor": false, "invocations": ["newInstance"]}, "focal_class": {"identifier": "FileSource", "superclass": "extends AbstractSource<File>", "interfaces": "", "fields": [{"original_string": "@IsFile\n    private final File file;", "modifier": "@IsFile\n    private final", "type": "File", "declarator": "file", "var_name": "file"}], "methods": [{"identifier": "FileSource", "parameters": "(File file)", "modifiers": "public", "return": "", "signature": " FileSource(File file)", "full_signature": "public  FileSource(File file)", "class_method_signature": "FileSource.FileSource(File file)", "testcase": false, "constructor": true}, {"identifier": "getSource", "parameters": "()", "modifiers": "@Override public", "return": "File", "signature": "File getSource()", "full_signature": "@Override public File getSource()", "class_method_signature": "FileSource.getSource()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FileSource.toString()", "testcase": false, "constructor": false}, {"identifier": "dispatch", "parameters": "(SourceDispatcher<R> dispatcher)", "modifiers": "@Override public", "return": "R", "signature": "R dispatch(SourceDispatcher<R> dispatcher)", "full_signature": "@Override public R dispatch(SourceDispatcher<R> dispatcher)", "class_method_signature": "FileSource.dispatch(SourceDispatcher<R> dispatcher)", "testcase": false, "constructor": false}, {"identifier": "initializeSeekableSource", "parameters": "()", "modifiers": "@Override public", "return": "SeekableSource", "signature": "SeekableSource initializeSeekableSource()", "full_signature": "@Override public SeekableSource initializeSeekableSource()", "class_method_signature": "FileSource.initializeSeekableSource()", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(File file)", "modifiers": "public static", "return": "FileSource", "signature": "FileSource newInstance(File file)", "full_signature": "public static FileSource newInstance(File file)", "class_method_signature": "FileSource.newInstance(File file)", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/input/FileSource.java"}, "focal_method": {"identifier": "newInstance", "parameters": "(File file)", "modifiers": "public static", "return": "FileSource", "body": "public static FileSource newInstance(File file) {\n        if (file == null || !file.isFile()) {\n            throw new IllegalArgumentException(\"A not null File instance that isFile is expected. Path: \" + file);\n        }\n        return new FileSource(file);\n    }", "signature": "FileSource newInstance(File file)", "full_signature": "public static FileSource newInstance(File file)", "class_method_signature": "FileSource.newInstance(File file)", "testcase": false, "constructor": false, "invocations": ["isFile"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}