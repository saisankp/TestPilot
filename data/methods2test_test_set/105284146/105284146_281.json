{"test_class": {"identifier": "JsonSensitivityAnalysisParametersTest", "superclass": "extends AbstractConverterTest", "interfaces": "", "fields": [], "file": "sensitivity-analysis-api/src/test/java/com/powsybl/sensitivity/json/JsonSensitivityAnalysisParametersTest.java"}, "test_case": {"identifier": "updateExtensions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void updateExtensions() {\n        SensitivityAnalysisParameters parameters = new SensitivityAnalysisParameters();\n        DummyExtension extension = new DummyExtension();\n        extension.setParameterBoolean(false);\n        extension.setParameterString(\"test\");\n        extension.setParameterDouble(2.8);\n        DummyExtension oldExtension = new DummyExtension(extension);\n        parameters.addExtension(DummyExtension.class, extension);\n        JsonSensitivityAnalysisParameters.update(parameters, getClass().getResourceAsStream(\"/SensitivityAnalysisParametersExtensionUpdate.json\"));\n        DummyExtension updatedExtension = parameters.getExtension(DummyExtension.class);\n        assertEquals(oldExtension.isParameterBoolean(), updatedExtension.isParameterBoolean());\n        assertEquals(oldExtension.getParameterDouble(), updatedExtension.getParameterDouble(), 0.01);\n        assertNotEquals(oldExtension.getParameterString(), updatedExtension.getParameterString());\n    }", "signature": "void updateExtensions()", "full_signature": "@Test public void updateExtensions()", "class_method_signature": "JsonSensitivityAnalysisParametersTest.updateExtensions()", "testcase": true, "constructor": false, "invocations": ["setParameterBoolean", "setParameterString", "setParameterDouble", "addExtension", "update", "getResourceAsStream", "getClass", "getExtension", "assertEquals", "isParameterBoolean", "isParameterBoolean", "assertEquals", "getParameterDouble", "getParameterDouble", "assertNotEquals", "getParameterString", "getParameterString"]}, "focal_class": {"identifier": "JsonSensitivityAnalysisParameters", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Supplier<ExtensionProviders<ExtensionSerializer>> SUPPLIER =\n            Suppliers.memoize(() -> ExtensionProviders.createProvider(ExtensionSerializer.class, \"sensitivity-parameters\"));", "modifier": "private static final", "type": "Supplier<ExtensionProviders<ExtensionSerializer>>", "declarator": "SUPPLIER =\n            Suppliers.memoize(() -> ExtensionProviders.createProvider(ExtensionSerializer.class, \"sensitivity-parameters\"))", "var_name": "SUPPLIER"}], "methods": [{"identifier": "getExtensionSerializers", "parameters": "()", "modifiers": "public static", "return": "ExtensionProviders<ExtensionSerializer>", "signature": "ExtensionProviders<ExtensionSerializer> getExtensionSerializers()", "full_signature": "public static ExtensionProviders<ExtensionSerializer> getExtensionSerializers()", "class_method_signature": "JsonSensitivityAnalysisParameters.getExtensionSerializers()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(Path jsonFile)", "modifiers": "public static", "return": "SensitivityAnalysisParameters", "signature": "SensitivityAnalysisParameters read(Path jsonFile)", "full_signature": "public static SensitivityAnalysisParameters read(Path jsonFile)", "class_method_signature": "JsonSensitivityAnalysisParameters.read(Path jsonFile)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(InputStream jsonStream)", "modifiers": "public static", "return": "SensitivityAnalysisParameters", "signature": "SensitivityAnalysisParameters read(InputStream jsonStream)", "full_signature": "public static SensitivityAnalysisParameters read(InputStream jsonStream)", "class_method_signature": "JsonSensitivityAnalysisParameters.read(InputStream jsonStream)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(SensitivityAnalysisParameters parameters, Path jsonFile)", "modifiers": "public static", "return": "SensitivityAnalysisParameters", "signature": "SensitivityAnalysisParameters update(SensitivityAnalysisParameters parameters, Path jsonFile)", "full_signature": "public static SensitivityAnalysisParameters update(SensitivityAnalysisParameters parameters, Path jsonFile)", "class_method_signature": "JsonSensitivityAnalysisParameters.update(SensitivityAnalysisParameters parameters, Path jsonFile)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(SensitivityAnalysisParameters parameters, InputStream jsonStream)", "modifiers": "public static", "return": "SensitivityAnalysisParameters", "signature": "SensitivityAnalysisParameters update(SensitivityAnalysisParameters parameters, InputStream jsonStream)", "full_signature": "public static SensitivityAnalysisParameters update(SensitivityAnalysisParameters parameters, InputStream jsonStream)", "class_method_signature": "JsonSensitivityAnalysisParameters.update(SensitivityAnalysisParameters parameters, InputStream jsonStream)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(SensitivityAnalysisParameters parameters, Path jsonFile)", "modifiers": "public static", "return": "void", "signature": "void write(SensitivityAnalysisParameters parameters, Path jsonFile)", "full_signature": "public static void write(SensitivityAnalysisParameters parameters, Path jsonFile)", "class_method_signature": "JsonSensitivityAnalysisParameters.write(SensitivityAnalysisParameters parameters, Path jsonFile)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(SensitivityAnalysisParameters parameters, OutputStream outputStream)", "modifiers": "public static", "return": "void", "signature": "void write(SensitivityAnalysisParameters parameters, OutputStream outputStream)", "full_signature": "public static void write(SensitivityAnalysisParameters parameters, OutputStream outputStream)", "class_method_signature": "JsonSensitivityAnalysisParameters.write(SensitivityAnalysisParameters parameters, OutputStream outputStream)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(JsonParser parser, DeserializationContext context, SensitivityAnalysisParameters parameters)", "modifiers": "public static", "return": "SensitivityAnalysisParameters", "signature": "SensitivityAnalysisParameters deserialize(JsonParser parser, DeserializationContext context, SensitivityAnalysisParameters parameters)", "full_signature": "public static SensitivityAnalysisParameters deserialize(JsonParser parser, DeserializationContext context, SensitivityAnalysisParameters parameters)", "class_method_signature": "JsonSensitivityAnalysisParameters.deserialize(JsonParser parser, DeserializationContext context, SensitivityAnalysisParameters parameters)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(JsonParser parser, DeserializationContext context)", "modifiers": "public static", "return": "SensitivityAnalysisParameters", "signature": "SensitivityAnalysisParameters deserialize(JsonParser parser, DeserializationContext context)", "full_signature": "public static SensitivityAnalysisParameters deserialize(JsonParser parser, DeserializationContext context)", "class_method_signature": "JsonSensitivityAnalysisParameters.deserialize(JsonParser parser, DeserializationContext context)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(SensitivityAnalysisParameters parameters, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)", "modifiers": "public static", "return": "void", "signature": "void serialize(SensitivityAnalysisParameters parameters, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)", "full_signature": "public static void serialize(SensitivityAnalysisParameters parameters, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)", "class_method_signature": "JsonSensitivityAnalysisParameters.serialize(SensitivityAnalysisParameters parameters, JsonGenerator jsonGenerator, SerializerProvider serializerProvider)", "testcase": false, "constructor": false}, {"identifier": "createObjectMapper", "parameters": "()", "modifiers": "private static", "return": "ObjectMapper", "signature": "ObjectMapper createObjectMapper()", "full_signature": "private static ObjectMapper createObjectMapper()", "class_method_signature": "JsonSensitivityAnalysisParameters.createObjectMapper()", "testcase": false, "constructor": false}, {"identifier": "JsonSensitivityAnalysisParameters", "parameters": "()", "modifiers": "private", "return": "", "signature": " JsonSensitivityAnalysisParameters()", "full_signature": "private  JsonSensitivityAnalysisParameters()", "class_method_signature": "JsonSensitivityAnalysisParameters.JsonSensitivityAnalysisParameters()", "testcase": false, "constructor": true}], "file": "sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/json/JsonSensitivityAnalysisParameters.java"}, "focal_method": {"identifier": "update", "parameters": "(SensitivityAnalysisParameters parameters, Path jsonFile)", "modifiers": "public static", "return": "SensitivityAnalysisParameters", "body": "public static SensitivityAnalysisParameters update(SensitivityAnalysisParameters parameters, Path jsonFile) {\n        Objects.requireNonNull(jsonFile);\n\n        try (InputStream is = Files.newInputStream(jsonFile)) {\n            return update(parameters, is);\n        } catch (IOException e) {\n            throw new UncheckedIOException(e);\n        }\n    }", "signature": "SensitivityAnalysisParameters update(SensitivityAnalysisParameters parameters, Path jsonFile)", "full_signature": "public static SensitivityAnalysisParameters update(SensitivityAnalysisParameters parameters, Path jsonFile)", "class_method_signature": "JsonSensitivityAnalysisParameters.update(SensitivityAnalysisParameters parameters, Path jsonFile)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "newInputStream", "update"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}