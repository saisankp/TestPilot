{"test_class": {"identifier": "CacheInvocationContextFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "hystrix-contrib/hystrix-javanica/src/test/java/com/netflix/hystrix/contrib/javanica/cache/CacheInvocationContextFactoryTest.java"}, "test_case": {"identifier": "testCacheResultMethodWithWrongCacheKeyMethodSignature_givenWrongCacheKeyMethod_shouldThrowException", "parameters": "()", "modifiers": "@Test(expected = HystrixCachingException.class) public", "return": "void", "body": "@Test(expected = HystrixCachingException.class)\n    public void testCacheResultMethodWithWrongCacheKeyMethodSignature_givenWrongCacheKeyMethod_shouldThrowException() throws NoSuchMethodException {\n        // given\n        TestCacheClass testCacheClass = new TestCacheClass();\n        String param1 = \"val_1\";\n        MetaHolder metaHolder = MetaHolder.builder()\n                .method(TestCacheClass.class.getMethod(\"cacheResultMethodWithWrongCacheKeyMethodSignature\", String.class))\n                .args(new Object[]{param1})\n                .obj(testCacheClass).build();\n        // when\n        CacheInvocationContext<CacheResult> context = CacheInvocationContextFactory.createCacheResultInvocationContext(metaHolder);\n        // then expected HystrixCachingException\n    }", "signature": "void testCacheResultMethodWithWrongCacheKeyMethodSignature_givenWrongCacheKeyMethod_shouldThrowException()", "full_signature": "@Test(expected = HystrixCachingException.class) public void testCacheResultMethodWithWrongCacheKeyMethodSignature_givenWrongCacheKeyMethod_shouldThrowException()", "class_method_signature": "CacheInvocationContextFactoryTest.testCacheResultMethodWithWrongCacheKeyMethodSignature_givenWrongCacheKeyMethod_shouldThrowException()", "testcase": true, "constructor": false, "invocations": ["build", "obj", "args", "method", "builder", "getMethod", "createCacheResultInvocationContext"]}, "focal_class": {"identifier": "CacheInvocationContextFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "createCacheResultInvocationContext", "parameters": "(MetaHolder metaHolder)", "modifiers": "public static", "return": "CacheInvocationContext<CacheResult>", "signature": "CacheInvocationContext<CacheResult> createCacheResultInvocationContext(MetaHolder metaHolder)", "full_signature": "public static CacheInvocationContext<CacheResult> createCacheResultInvocationContext(MetaHolder metaHolder)", "class_method_signature": "CacheInvocationContextFactory.createCacheResultInvocationContext(MetaHolder metaHolder)", "testcase": false, "constructor": false}, {"identifier": "createCacheRemoveInvocationContext", "parameters": "(MetaHolder metaHolder)", "modifiers": "public static", "return": "CacheInvocationContext<CacheRemove>", "signature": "CacheInvocationContext<CacheRemove> createCacheRemoveInvocationContext(MetaHolder metaHolder)", "full_signature": "public static CacheInvocationContext<CacheRemove> createCacheRemoveInvocationContext(MetaHolder metaHolder)", "class_method_signature": "CacheInvocationContextFactory.createCacheRemoveInvocationContext(MetaHolder metaHolder)", "testcase": false, "constructor": false}, {"identifier": "createCacheKeyAction", "parameters": "(String method, MetaHolder metaHolder)", "modifiers": "private static", "return": "MethodExecutionAction", "signature": "MethodExecutionAction createCacheKeyAction(String method, MetaHolder metaHolder)", "full_signature": "private static MethodExecutionAction createCacheKeyAction(String method, MetaHolder metaHolder)", "class_method_signature": "CacheInvocationContextFactory.createCacheKeyAction(String method, MetaHolder metaHolder)", "testcase": false, "constructor": false}], "file": "hystrix-contrib/hystrix-javanica/src/main/java/com/netflix/hystrix/contrib/javanica/cache/CacheInvocationContextFactory.java"}, "focal_method": {"identifier": "createCacheResultInvocationContext", "parameters": "(MetaHolder metaHolder)", "modifiers": "public static", "return": "CacheInvocationContext<CacheResult>", "body": "public static CacheInvocationContext<CacheResult> createCacheResultInvocationContext(MetaHolder metaHolder) {\n        Method method = metaHolder.getMethod();\n        if (method.isAnnotationPresent(CacheResult.class)) {\n            CacheResult cacheResult = method.getAnnotation(CacheResult.class);\n            MethodExecutionAction cacheKeyMethod = createCacheKeyAction(cacheResult.cacheKeyMethod(), metaHolder);\n            return new CacheInvocationContext<CacheResult>(cacheResult, cacheKeyMethod, metaHolder.getObj(), method, metaHolder.getArgs());\n        }\n        return null;\n    }", "signature": "CacheInvocationContext<CacheResult> createCacheResultInvocationContext(MetaHolder metaHolder)", "full_signature": "public static CacheInvocationContext<CacheResult> createCacheResultInvocationContext(MetaHolder metaHolder)", "class_method_signature": "CacheInvocationContextFactory.createCacheResultInvocationContext(MetaHolder metaHolder)", "testcase": false, "constructor": false, "invocations": ["getMethod", "isAnnotationPresent", "getAnnotation", "createCacheKeyAction", "cacheKeyMethod", "getObj", "getArgs"]}, "repository": {"repo_id": 6766558, "url": "https://github.com/Netflix/Hystrix", "stars": 19028, "created": "11/19/2012 8:14:46 PM +00:00", "updates": "2020-01-27T17:55:28+00:00", "fork": "False", "license": "licensed"}}