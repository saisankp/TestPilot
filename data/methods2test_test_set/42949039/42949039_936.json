{"test_class": {"identifier": "DataBridgeAppTest", "superclass": "extends AbstractDataBridgeTest", "interfaces": "", "fields": [{"original_string": "@Rule\n    public EnvironmentVariables environmentVariables = new EnvironmentVariables();", "modifier": "@Rule\n    public", "type": "EnvironmentVariables", "declarator": "environmentVariables = new EnvironmentVariables()", "var_name": "environmentVariables"}, {"original_string": "private MockDataBridgeApp dataBridgeApp = new MockDataBridgeApp();", "modifier": "private", "type": "MockDataBridgeApp", "declarator": "dataBridgeApp = new MockDataBridgeApp()", "var_name": "dataBridgeApp"}], "file": "herd-code/herd-tools/herd-tools-common/src/test/java/org/finra/herd/tools/common/databridge/DataBridgeAppTest.java"}, "test_case": {"identifier": "testReturnValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReturnValue()\n    {\n        assertEquals(ReturnValue.FAILURE, dataBridgeApp.go(null));\n        assertEquals(ReturnValue.FAILURE.getReturnCode(), dataBridgeApp.go(null).getReturnCode());\n        assertEquals(ReturnValue.SUCCESS, dataBridgeApp.go(new String[] {}));\n        assertEquals(ReturnValue.SUCCESS.getReturnCode(), dataBridgeApp.go(new String[] {}).getReturnCode());\n    }", "signature": "void testReturnValue()", "full_signature": "@Test public void testReturnValue()", "class_method_signature": "DataBridgeAppTest.testReturnValue()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "go", "assertEquals", "getReturnCode", "getReturnCode", "go", "assertEquals", "go", "assertEquals", "getReturnCode", "getReturnCode", "go"]}, "focal_class": {"identifier": "DataBridgeApp", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String BUILD_INFO_STRING_FORMAT = \"buildDate: %s\\nbuildNumber: %s\\nbuildOS: %s\\nbuildUser: %s\";", "modifier": "public static final", "type": "String", "declarator": "BUILD_INFO_STRING_FORMAT = \"buildDate: %s\\nbuildNumber: %s\\nbuildOS: %s\\nbuildUser: %s\"", "var_name": "BUILD_INFO_STRING_FORMAT"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(DataBridgeApp.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(DataBridgeApp.class)", "var_name": "LOGGER"}, {"original_string": "protected Option s3AccessKeyOpt;", "modifier": "protected", "type": "Option", "declarator": "s3AccessKeyOpt", "var_name": "s3AccessKeyOpt"}, {"original_string": "protected Option s3SecretKeyOpt;", "modifier": "protected", "type": "Option", "declarator": "s3SecretKeyOpt", "var_name": "s3SecretKeyOpt"}, {"original_string": "protected Option s3EndpointOpt;", "modifier": "protected", "type": "Option", "declarator": "s3EndpointOpt", "var_name": "s3EndpointOpt"}, {"original_string": "protected Option localPathOpt;", "modifier": "protected", "type": "Option", "declarator": "localPathOpt", "var_name": "localPathOpt"}, {"original_string": "protected Option manifestPathOpt;", "modifier": "protected", "type": "Option", "declarator": "manifestPathOpt", "var_name": "manifestPathOpt"}, {"original_string": "protected Option regServerHostOpt;", "modifier": "protected", "type": "Option", "declarator": "regServerHostOpt", "var_name": "regServerHostOpt"}, {"original_string": "protected Option regServerPortOpt;", "modifier": "protected", "type": "Option", "declarator": "regServerPortOpt", "var_name": "regServerPortOpt"}, {"original_string": "protected Option dmRegServerHostOpt;", "modifier": "protected", "type": "Option", "declarator": "dmRegServerHostOpt", "var_name": "dmRegServerHostOpt"}, {"original_string": "protected Option dmRegServerPortOpt;", "modifier": "protected", "type": "Option", "declarator": "dmRegServerPortOpt", "var_name": "dmRegServerPortOpt"}, {"original_string": "protected Option sslOpt;", "modifier": "protected", "type": "Option", "declarator": "sslOpt", "var_name": "sslOpt"}, {"original_string": "protected Option usernameOpt;", "modifier": "protected", "type": "Option", "declarator": "usernameOpt", "var_name": "usernameOpt"}, {"original_string": "protected Option passwordOpt;", "modifier": "protected", "type": "Option", "declarator": "passwordOpt", "var_name": "passwordOpt"}, {"original_string": "protected Option enableEnvVariablesOpt;", "modifier": "protected", "type": "Option", "declarator": "enableEnvVariablesOpt", "var_name": "enableEnvVariablesOpt"}, {"original_string": "protected Option trustSelfSignedCertificateOpt;", "modifier": "protected", "type": "Option", "declarator": "trustSelfSignedCertificateOpt", "var_name": "trustSelfSignedCertificateOpt"}, {"original_string": "protected Option disableHostnameVerificationOpt;", "modifier": "protected", "type": "Option", "declarator": "disableHostnameVerificationOpt", "var_name": "disableHostnameVerificationOpt"}, {"original_string": "protected Option helpOpt;", "modifier": "protected", "type": "Option", "declarator": "helpOpt", "var_name": "helpOpt"}, {"original_string": "protected Option versionOpt;", "modifier": "protected", "type": "Option", "declarator": "versionOpt", "var_name": "versionOpt"}, {"original_string": "protected Option httpProxyHostOpt;", "modifier": "protected", "type": "Option", "declarator": "httpProxyHostOpt", "var_name": "httpProxyHostOpt"}, {"original_string": "protected Option httpProxyPortOpt;", "modifier": "protected", "type": "Option", "declarator": "httpProxyPortOpt", "var_name": "httpProxyPortOpt"}, {"original_string": "protected Option maxThreadsOpt;", "modifier": "protected", "type": "Option", "declarator": "maxThreadsOpt", "var_name": "maxThreadsOpt"}, {"original_string": "protected Option socketTimeoutOpt;", "modifier": "protected", "type": "Option", "declarator": "socketTimeoutOpt", "var_name": "socketTimeoutOpt"}, {"original_string": "protected Boolean useSsl;", "modifier": "protected", "type": "Boolean", "declarator": "useSsl", "var_name": "useSsl"}, {"original_string": "protected Boolean trustSelfSignedCertificate;", "modifier": "protected", "type": "Boolean", "declarator": "trustSelfSignedCertificate", "var_name": "trustSelfSignedCertificate"}, {"original_string": "protected Boolean disableHostnameVerification;", "modifier": "protected", "type": "Boolean", "declarator": "disableHostnameVerification", "var_name": "disableHostnameVerification"}, {"original_string": "protected Integer regServerPort;", "modifier": "protected", "type": "Integer", "declarator": "regServerPort", "var_name": "regServerPort"}, {"original_string": "protected Integer httpProxyPort;", "modifier": "protected", "type": "Integer", "declarator": "httpProxyPort", "var_name": "httpProxyPort"}, {"original_string": "protected Integer maxThreads;", "modifier": "protected", "type": "Integer", "declarator": "maxThreads", "var_name": "maxThreads"}, {"original_string": "protected String regServerHost;", "modifier": "protected", "type": "String", "declarator": "regServerHost", "var_name": "regServerHost"}], "methods": [{"identifier": "getArgumentParser", "parameters": "()", "modifiers": "public abstract", "return": "ArgumentParser", "signature": "ArgumentParser getArgumentParser()", "full_signature": "public abstract ArgumentParser getArgumentParser()", "class_method_signature": "DataBridgeApp.getArgumentParser()", "testcase": false, "constructor": false}, {"identifier": "go", "parameters": "(String[] args)", "modifiers": "public abstract", "return": "ReturnValue", "signature": "ReturnValue go(String[] args)", "full_signature": "public abstract ReturnValue go(String[] args)", "class_method_signature": "DataBridgeApp.go(String[] args)", "testcase": false, "constructor": false}, {"identifier": "parseCommandLineArguments", "parameters": "(String[] args, ApplicationContext applicationContext)", "modifiers": "@SuppressWarnings(\"PMD.SystemPrintln\") @SuppressFBWarnings(value = \"VA_FORMAT_STRING_USES_NEWLINE\", justification = \"We will use the standard carriage return character.\") protected", "return": "ReturnValue", "signature": "ReturnValue parseCommandLineArguments(String[] args, ApplicationContext applicationContext)", "full_signature": "@SuppressWarnings(\"PMD.SystemPrintln\") @SuppressFBWarnings(value = \"VA_FORMAT_STRING_USES_NEWLINE\", justification = \"We will use the standard carriage return character.\") protected ReturnValue parseCommandLineArguments(String[] args, ApplicationContext applicationContext)", "class_method_signature": "DataBridgeApp.parseCommandLineArguments(String[] args, ApplicationContext applicationContext)", "testcase": false, "constructor": false}, {"identifier": "createApplicationContext", "parameters": "()", "modifiers": "protected", "return": "ApplicationContext", "signature": "ApplicationContext createApplicationContext()", "full_signature": "protected ApplicationContext createApplicationContext()", "class_method_signature": "DataBridgeApp.createApplicationContext()", "testcase": false, "constructor": false}], "file": "herd-code/herd-tools/herd-tools-common/src/main/java/org/finra/herd/tools/common/databridge/DataBridgeApp.java"}, "focal_method": {"identifier": "go", "parameters": "(String[] args)", "modifiers": "public abstract", "return": "ReturnValue", "body": "public abstract ReturnValue go(String[] args) throws Exception;", "signature": "ReturnValue go(String[] args)", "full_signature": "public abstract ReturnValue go(String[] args)", "class_method_signature": "DataBridgeApp.go(String[] args)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}