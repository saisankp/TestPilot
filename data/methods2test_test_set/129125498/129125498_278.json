{"test_class": {"identifier": "DetectorServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private DetectorService serviceUnderTest;", "modifier": "@InjectMocks\n    private", "type": "DetectorService", "declarator": "serviceUnderTest", "var_name": "serviceUnderTest"}, {"original_string": "@Mock\n    private DetectorRepository repository;", "modifier": "@Mock\n    private", "type": "DetectorRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "@Mock\n    private List<Detector> detectors;", "modifier": "@Mock\n    private", "type": "List<Detector>", "declarator": "detectors", "var_name": "detectors"}, {"original_string": "private UUID someUuid;", "modifier": "private", "type": "UUID", "declarator": "someUuid", "var_name": "someUuid"}, {"original_string": "private Detector legalParamsDetector;", "modifier": "private", "type": "Detector", "declarator": "legalParamsDetector", "var_name": "legalParamsDetector"}], "file": "modelservice/src/test/java/com/expedia/adaptivealerting/modelservice/service/DetectorServiceImplTest.java"}, "test_case": {"identifier": "testFindByCreatedBy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFindByCreatedBy() {\n        val actualDetectors = serviceUnderTest.findByCreatedBy(\"userName\");\n        assertNotNull(actualDetectors);\n    }", "signature": "void testFindByCreatedBy()", "full_signature": "@Test public void testFindByCreatedBy()", "class_method_signature": "DetectorServiceImplTest.testFindByCreatedBy()", "testcase": true, "constructor": false, "invocations": ["findByCreatedBy", "assertNotNull"]}, "focal_class": {"identifier": "DetectorServiceImpl", "superclass": "", "interfaces": "implements DetectorService", "fields": [{"original_string": "@Autowired\n    private DetectorRepository repository;", "modifier": "@Autowired\n    private", "type": "DetectorRepository", "declarator": "repository", "var_name": "repository"}], "methods": [{"identifier": "createDetector", "parameters": "(Detector detector)", "modifiers": "@Override public", "return": "UUID", "signature": "UUID createDetector(Detector detector)", "full_signature": "@Override public UUID createDetector(Detector detector)", "class_method_signature": "DetectorServiceImpl.createDetector(Detector detector)", "testcase": false, "constructor": false}, {"identifier": "findByUuid", "parameters": "(String uuid)", "modifiers": "@Override public", "return": "Detector", "signature": "Detector findByUuid(String uuid)", "full_signature": "@Override public Detector findByUuid(String uuid)", "class_method_signature": "DetectorServiceImpl.findByUuid(String uuid)", "testcase": false, "constructor": false}, {"identifier": "findByCreatedBy", "parameters": "(String user)", "modifiers": "@Override public", "return": "List<Detector>", "signature": "List<Detector> findByCreatedBy(String user)", "full_signature": "@Override public List<Detector> findByCreatedBy(String user)", "class_method_signature": "DetectorServiceImpl.findByCreatedBy(String user)", "testcase": false, "constructor": false}, {"identifier": "toggleDetector", "parameters": "(String uuid, Boolean enabled)", "modifiers": "@Override public", "return": "void", "signature": "void toggleDetector(String uuid, Boolean enabled)", "full_signature": "@Override public void toggleDetector(String uuid, Boolean enabled)", "class_method_signature": "DetectorServiceImpl.toggleDetector(String uuid, Boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "trustDetector", "parameters": "(String uuid, Boolean trusted)", "modifiers": "@Override public", "return": "void", "signature": "void trustDetector(String uuid, Boolean trusted)", "full_signature": "@Override public void trustDetector(String uuid, Boolean trusted)", "class_method_signature": "DetectorServiceImpl.trustDetector(String uuid, Boolean trusted)", "testcase": false, "constructor": false}, {"identifier": "getLastUpdatedDetectors", "parameters": "(long interval)", "modifiers": "@Override public", "return": "List<Detector>", "signature": "List<Detector> getLastUpdatedDetectors(long interval)", "full_signature": "@Override public List<Detector> getLastUpdatedDetectors(long interval)", "class_method_signature": "DetectorServiceImpl.getLastUpdatedDetectors(long interval)", "testcase": false, "constructor": false}, {"identifier": "getLastUsedDetectors", "parameters": "(int noOfDays)", "modifiers": "@Override public", "return": "List<Detector>", "signature": "List<Detector> getLastUsedDetectors(int noOfDays)", "full_signature": "@Override public List<Detector> getLastUsedDetectors(int noOfDays)", "class_method_signature": "DetectorServiceImpl.getLastUsedDetectors(int noOfDays)", "testcase": false, "constructor": false}, {"identifier": "getDetectorsToBeTrained", "parameters": "(long timestampMs)", "modifiers": "@Override public", "return": "List<Detector>", "signature": "List<Detector> getDetectorsToBeTrained(long timestampMs)", "full_signature": "@Override public List<Detector> getDetectorsToBeTrained(long timestampMs)", "class_method_signature": "DetectorServiceImpl.getDetectorsToBeTrained(long timestampMs)", "testcase": false, "constructor": false}, {"identifier": "updateDetector", "parameters": "(String uuid, Detector detector)", "modifiers": "@Override public", "return": "void", "signature": "void updateDetector(String uuid, Detector detector)", "full_signature": "@Override public void updateDetector(String uuid, Detector detector)", "class_method_signature": "DetectorServiceImpl.updateDetector(String uuid, Detector detector)", "testcase": false, "constructor": false}, {"identifier": "updateDetectorLastUsed", "parameters": "(String uuid)", "modifiers": "@Override public", "return": "void", "signature": "void updateDetectorLastUsed(String uuid)", "full_signature": "@Override public void updateDetectorLastUsed(String uuid)", "class_method_signature": "DetectorServiceImpl.updateDetectorLastUsed(String uuid)", "testcase": false, "constructor": false}, {"identifier": "updateDetectorTrainingTime", "parameters": "(String uuid, long nextRun)", "modifiers": "@Override public", "return": "void", "signature": "void updateDetectorTrainingTime(String uuid, long nextRun)", "full_signature": "@Override public void updateDetectorTrainingTime(String uuid, long nextRun)", "class_method_signature": "DetectorServiceImpl.updateDetectorTrainingTime(String uuid, long nextRun)", "testcase": false, "constructor": false}, {"identifier": "deleteDetector", "parameters": "(String uuid)", "modifiers": "@Override public", "return": "void", "signature": "void deleteDetector(String uuid)", "full_signature": "@Override public void deleteDetector(String uuid)", "class_method_signature": "DetectorServiceImpl.deleteDetector(String uuid)", "testcase": false, "constructor": false}], "file": "modelservice/src/main/java/com/expedia/adaptivealerting/modelservice/service/DetectorServiceImpl.java"}, "focal_method": {"identifier": "findByCreatedBy", "parameters": "(String user)", "modifiers": "@Override public", "return": "List<Detector>", "body": "@Override\n    public List<Detector> findByCreatedBy(String user) {\n        List<Detector> detectors = repository.findByMeta_CreatedBy(user);\n        if (detectors == null || detectors.isEmpty()) {\n            throw new RecordNotFoundException(\"Invalid user: \" + user);\n        }\n        return detectors;\n    }", "signature": "List<Detector> findByCreatedBy(String user)", "full_signature": "@Override public List<Detector> findByCreatedBy(String user)", "class_method_signature": "DetectorServiceImpl.findByCreatedBy(String user)", "testcase": false, "constructor": false, "invocations": ["findByMeta_CreatedBy", "isEmpty"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}