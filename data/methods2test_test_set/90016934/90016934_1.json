{"test_class": {"identifier": "DefaultDataStoreManagerTest", "superclass": "extends AbstractTransactionalTestNGSpringContextTests", "interfaces": "", "fields": [{"original_string": "private static final String TEMP_DIRECTORY_PATH =\n         System.getProperty(\"java.io.tmpdir\") + File.separator + \"incoming_new\";", "modifier": "private static final", "type": "String", "declarator": "TEMP_DIRECTORY_PATH =\n         System.getProperty(\"java.io.tmpdir\") + File.separator + \"incoming_new\"", "var_name": "TEMP_DIRECTORY_PATH"}, {"original_string": "@Autowired\n   DataStoreManager dss;", "modifier": "@Autowired", "type": "DataStoreManager", "declarator": "dss", "var_name": "dss"}, {"original_string": "File tmp;", "modifier": "", "type": "File", "declarator": "tmp", "var_name": "tmp"}, {"original_string": "String id = UUID.randomUUID().toString();", "modifier": "", "type": "String", "declarator": "id = UUID.randomUUID().toString()", "var_name": "id"}], "file": "core/src/test/java/org/dhus/store/datastore/DefaultDataStoreManagerTest.java"}, "test_case": {"identifier": "remove", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void remove()\n   {\n      HfsDataStore ds = new HfsDataStore(\"test\", new HfsManager(TEMP_DIRECTORY_PATH, 5, 100), false, 0, -1L, 0, false);\n      ds.setKeystore(new VolatileKeyStore());\n      dss.add(ds);\n      Assert.assertEquals(dss.list().size(), 2);\n      dss.remove(\"test\");\n      Assert.assertEquals(dss.list().size(), 1);\n   }", "signature": "void remove()", "full_signature": "@Test public void remove()", "class_method_signature": "DefaultDataStoreManagerTest.remove()", "testcase": true, "constructor": false, "invocations": ["setKeystore", "add", "assertEquals", "size", "list", "remove", "assertEquals", "size", "list"]}, "focal_class": {"identifier": "DefaultDataStoreManager", "superclass": "", "interfaces": "implements DataStoreManager, DerivedProductStoreService", "fields": [{"original_string": "private static final Logger LOGGER = LogManager.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LogManager.getLogger()", "var_name": "LOGGER"}, {"original_string": "private static final String DATA_STORE_NAME = \"DefaultDataStoreService\";", "modifier": "private static final", "type": "String", "declarator": "DATA_STORE_NAME = \"DefaultDataStoreService\"", "var_name": "DATA_STORE_NAME"}, {"original_string": "private final SortedSet<DataStore> datastores = new ConcurrentSkipListSet<>(\n      new Comparator<DataStore>()\n      {\n         @Override\n         public int compare(DataStore ds1, DataStore ds2)\n         {\n            return DataStores.compare(ds1, ds2);\n         }\n      }\n   );", "modifier": "private final", "type": "SortedSet<DataStore>", "declarator": "datastores = new ConcurrentSkipListSet<>(\n      new Comparator<DataStore>()\n      {\n         @Override\n         public int compare(DataStore ds1, DataStore ds2)\n         {\n            return DataStores.compare(ds1, ds2);\n         }\n      }\n   )", "var_name": "datastores"}], "methods": [{"identifier": "DefaultDataStoreManager", "parameters": "()", "modifiers": "@SuppressWarnings(\"unused\") private", "return": "", "signature": " DefaultDataStoreManager()", "full_signature": "@SuppressWarnings(\"unused\") private  DefaultDataStoreManager()", "class_method_signature": "DefaultDataStoreManager.DefaultDataStoreManager()", "testcase": false, "constructor": true}, {"identifier": "DefaultDataStoreManager", "parameters": "(List<DataStoreConf> confs)", "modifiers": "public", "return": "", "signature": " DefaultDataStoreManager(List<DataStoreConf> confs)", "full_signature": "public  DefaultDataStoreManager(List<DataStoreConf> confs)", "class_method_signature": "DefaultDataStoreManager.DefaultDataStoreManager(List<DataStoreConf> confs)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "DefaultDataStoreManager.getName()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String id)", "modifiers": "@Override public", "return": "Product", "signature": "Product get(String id)", "full_signature": "@Override public Product get(String id)", "class_method_signature": "DefaultDataStoreManager.get(String id)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(String uuid, Product product)", "modifiers": "@Override public", "return": "void", "signature": "void set(String uuid, Product product)", "full_signature": "@Override public void set(String uuid, Product product)", "class_method_signature": "DefaultDataStoreManager.set(String uuid, Product product)", "testcase": false, "constructor": false}, {"identifier": "addProduct", "parameters": "(IngestibleProduct inProduct)", "modifiers": "@Override public", "return": "void", "signature": "void addProduct(IngestibleProduct inProduct)", "full_signature": "@Override public void addProduct(IngestibleProduct inProduct)", "class_method_signature": "DefaultDataStoreManager.addProduct(IngestibleProduct inProduct)", "testcase": false, "constructor": false}, {"identifier": "deleteProduct", "parameters": "(String uuid, Destination destination)", "modifiers": "@Override public", "return": "void", "signature": "void deleteProduct(String uuid, Destination destination)", "full_signature": "@Override public void deleteProduct(String uuid, Destination destination)", "class_method_signature": "DefaultDataStoreManager.deleteProduct(String uuid, Destination destination)", "testcase": false, "constructor": false}, {"identifier": "deleteProduct", "parameters": "(String uuid)", "modifiers": "@Override public", "return": "void", "signature": "void deleteProduct(String uuid)", "full_signature": "@Override public void deleteProduct(String uuid)", "class_method_signature": "DefaultDataStoreManager.deleteProduct(String uuid)", "testcase": false, "constructor": false}, {"identifier": "makeBackupProduct", "parameters": "(String uuid, Destination destination)", "modifiers": "private", "return": "void", "signature": "void makeBackupProduct(String uuid, Destination destination)", "full_signature": "private void makeBackupProduct(String uuid, Destination destination)", "class_method_signature": "DefaultDataStoreManager.makeBackupProduct(String uuid, Destination destination)", "testcase": false, "constructor": false}, {"identifier": "moveProduct", "parameters": "(HfsDataStore dataStore, String uuid, Destination destination)", "modifiers": "private", "return": "void", "signature": "void moveProduct(HfsDataStore dataStore, String uuid, Destination destination)", "full_signature": "private void moveProduct(HfsDataStore dataStore, String uuid, Destination destination)", "class_method_signature": "DefaultDataStoreManager.moveProduct(HfsDataStore dataStore, String uuid, Destination destination)", "testcase": false, "constructor": false}, {"identifier": "copyProduct", "parameters": "(DataStore dataStore, String uuid, Destination destination)", "modifiers": "private", "return": "void", "signature": "void copyProduct(DataStore dataStore, String uuid, Destination destination)", "full_signature": "private void copyProduct(DataStore dataStore, String uuid, Destination destination)", "class_method_signature": "DefaultDataStoreManager.copyProduct(DataStore dataStore, String uuid, Destination destination)", "testcase": false, "constructor": false}, {"identifier": "prepareDestinationPath", "parameters": "(Product productData, Destination destination)", "modifiers": "private", "return": "Path", "signature": "Path prepareDestinationPath(Product productData, Destination destination)", "full_signature": "private Path prepareDestinationPath(Product productData, Destination destination)", "class_method_signature": "DefaultDataStoreManager.prepareDestinationPath(Product productData, Destination destination)", "testcase": false, "constructor": false}, {"identifier": "hasProduct", "parameters": "(String uuid)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasProduct(String uuid)", "full_signature": "@Override public boolean hasProduct(String uuid)", "class_method_signature": "DefaultDataStoreManager.hasProduct(String uuid)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(DataStore datastore)", "modifiers": "@Override public", "return": "void", "signature": "void add(DataStore datastore)", "full_signature": "@Override public void add(DataStore datastore)", "class_method_signature": "DefaultDataStoreManager.add(DataStore datastore)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String datastoreName)", "modifiers": "@Override public", "return": "DataStore", "signature": "DataStore remove(String datastoreName)", "full_signature": "@Override public DataStore remove(String datastoreName)", "class_method_signature": "DefaultDataStoreManager.remove(String datastoreName)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "()", "modifiers": "@Override public", "return": "List<DataStore>", "signature": "List<DataStore> list()", "full_signature": "@Override public List<DataStore> list()", "class_method_signature": "DefaultDataStoreManager.list()", "testcase": false, "constructor": false}, {"identifier": "addProductReference", "parameters": "(String uuid, Product product)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addProductReference(String uuid, Product product)", "full_signature": "@Override public boolean addProductReference(String uuid, Product product)", "class_method_signature": "DefaultDataStoreManager.addProductReference(String uuid, Product product)", "testcase": false, "constructor": false}, {"identifier": "canAccess", "parameters": "(String resource_location)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean canAccess(String resource_location)", "full_signature": "@Override public boolean canAccess(String resource_location)", "class_method_signature": "DefaultDataStoreManager.canAccess(String resource_location)", "testcase": false, "constructor": false}, {"identifier": "getPriority", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getPriority()", "full_signature": "@Override public int getPriority()", "class_method_signature": "DefaultDataStoreManager.getPriority()", "testcase": false, "constructor": false}, {"identifier": "isReadOnly", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isReadOnly()", "full_signature": "@Override public boolean isReadOnly()", "class_method_signature": "DefaultDataStoreManager.isReadOnly()", "testcase": false, "constructor": false}, {"identifier": "addDerivedProduct", "parameters": "(String uuid, String tag, Product product)", "modifiers": "@Override public", "return": "void", "signature": "void addDerivedProduct(String uuid, String tag, Product product)", "full_signature": "@Override public void addDerivedProduct(String uuid, String tag, Product product)", "class_method_signature": "DefaultDataStoreManager.addDerivedProduct(String uuid, String tag, Product product)", "testcase": false, "constructor": false}, {"identifier": "addDefaultDerivedProducts", "parameters": "(IngestibleProduct inProduct)", "modifiers": "@Override public", "return": "void", "signature": "void addDefaultDerivedProducts(IngestibleProduct inProduct)", "full_signature": "@Override public void addDefaultDerivedProducts(IngestibleProduct inProduct)", "class_method_signature": "DefaultDataStoreManager.addDefaultDerivedProducts(IngestibleProduct inProduct)", "testcase": false, "constructor": false}, {"identifier": "addDefaultDerivedProductReferences", "parameters": "(IngestibleProduct inProduct)", "modifiers": "@Override public", "return": "void", "signature": "void addDefaultDerivedProductReferences(IngestibleProduct inProduct)", "full_signature": "@Override public void addDefaultDerivedProductReferences(IngestibleProduct inProduct)", "class_method_signature": "DefaultDataStoreManager.addDefaultDerivedProductReferences(IngestibleProduct inProduct)", "testcase": false, "constructor": false}, {"identifier": "addDerivedProductReference", "parameters": "(String uuid, String tag, Product product)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addDerivedProductReference(String uuid, String tag, Product product)", "full_signature": "@Override public boolean addDerivedProductReference(String uuid, String tag, Product product)", "class_method_signature": "DefaultDataStoreManager.addDerivedProductReference(String uuid, String tag, Product product)", "testcase": false, "constructor": false}, {"identifier": "deleteDerivedProduct", "parameters": "(String uuid, String tag)", "modifiers": "@Override public", "return": "void", "signature": "void deleteDerivedProduct(String uuid, String tag)", "full_signature": "@Override public void deleteDerivedProduct(String uuid, String tag)", "class_method_signature": "DefaultDataStoreManager.deleteDerivedProduct(String uuid, String tag)", "testcase": false, "constructor": false}, {"identifier": "deleteDerivedProducts", "parameters": "(String uuid)", "modifiers": "@Override public", "return": "void", "signature": "void deleteDerivedProducts(String uuid)", "full_signature": "@Override public void deleteDerivedProducts(String uuid)", "class_method_signature": "DefaultDataStoreManager.deleteDerivedProducts(String uuid)", "testcase": false, "constructor": false}, {"identifier": "getDerivedProduct", "parameters": "(String uuid, String tag)", "modifiers": "@Override public", "return": "Product", "signature": "Product getDerivedProduct(String uuid, String tag)", "full_signature": "@Override public Product getDerivedProduct(String uuid, String tag)", "class_method_signature": "DefaultDataStoreManager.getDerivedProduct(String uuid, String tag)", "testcase": false, "constructor": false}, {"identifier": "hasDerivedProduct", "parameters": "(String uuid, String tag)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasDerivedProduct(String uuid, String tag)", "full_signature": "@Override public boolean hasDerivedProduct(String uuid, String tag)", "class_method_signature": "DefaultDataStoreManager.hasDerivedProduct(String uuid, String tag)", "testcase": false, "constructor": false}, {"identifier": "getProductList", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getProductList()", "full_signature": "@Override public List<String> getProductList()", "class_method_signature": "DefaultDataStoreManager.getProductList()", "testcase": false, "constructor": false}, {"identifier": "deleteProductFromDataStore", "parameters": "(String uuid, String dataStoreName, Destination destination, Boolean safeMode)", "modifiers": "@Override public", "return": "void", "signature": "void deleteProductFromDataStore(String uuid, String dataStoreName, Destination destination, Boolean safeMode)", "full_signature": "@Override public void deleteProductFromDataStore(String uuid, String dataStoreName, Destination destination, Boolean safeMode)", "class_method_signature": "DefaultDataStoreManager.deleteProductFromDataStore(String uuid, String dataStoreName, Destination destination, Boolean safeMode)", "testcase": false, "constructor": false}, {"identifier": "safeToDelete", "parameters": "(String dataStoreName, String uuid)", "modifiers": "private", "return": "boolean", "signature": "boolean safeToDelete(String dataStoreName, String uuid)", "full_signature": "private boolean safeToDelete(String dataStoreName, String uuid)", "class_method_signature": "DefaultDataStoreManager.safeToDelete(String dataStoreName, String uuid)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/dhus/store/datastore/DefaultDataStoreManager.java"}, "focal_method": {"identifier": "remove", "parameters": "(String datastoreName)", "modifiers": "@Override public", "return": "DataStore", "body": "@Override\n   public DataStore remove(String datastoreName)\n   {\n      Optional<DataStore> toRemove = datastores.stream()\n            .filter((t) -> t.getName().equals(datastoreName))\n            .findFirst();\n\n      if (toRemove.isPresent())\n      {\n         datastores.remove(toRemove.get());\n         return toRemove.get();\n      }\n\n      return null;\n   }", "signature": "DataStore remove(String datastoreName)", "full_signature": "@Override public DataStore remove(String datastoreName)", "class_method_signature": "DefaultDataStoreManager.remove(String datastoreName)", "testcase": false, "constructor": false, "invocations": ["findFirst", "filter", "stream", "equals", "getName", "isPresent", "remove", "get", "get"]}, "repository": {"repo_id": 90016934, "url": "https://github.com/SentinelDataHub/dhus-core", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 5, "size": 2371, "license": "licensed"}}