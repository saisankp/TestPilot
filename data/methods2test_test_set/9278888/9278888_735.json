{"test_class": {"identifier": "TraceContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "TraceContext base = TraceContext.newBuilder().traceId(1L).spanId(1L).build();", "modifier": "", "type": "TraceContext", "declarator": "base = TraceContext.newBuilder().traceId(1L).spanId(1L).build()", "var_name": "base"}, {"original_string": "TraceContext context = TraceContext.newBuilder().traceId(1L).spanId(2L).build();", "modifier": "", "type": "TraceContext", "declarator": "context = TraceContext.newBuilder().traceId(1L).spanId(2L).build()", "var_name": "context"}], "file": "brave/src/test/java/brave/propagation/TraceContextTest.java"}, "test_case": {"identifier": "withExtra_notEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void withExtra_notEmpty() {\n    assertThat(context.withExtra(Arrays.asList(1L)))\n      .extracting(\"extra\")\n      .isEqualTo(Arrays.asList(1L));\n  }", "signature": "void withExtra_notEmpty()", "full_signature": "@Test public void withExtra_notEmpty()", "class_method_signature": "TraceContextTest.withExtra_notEmpty()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "extracting", "assertThat", "withExtra", "asList", "asList"]}, "focal_class": {"identifier": "TraceContext", "superclass": "extends SamplingFlags", "interfaces": "", "fields": [{"original_string": "volatile String traceIdString;", "modifier": "volatile", "type": "String", "declarator": "traceIdString", "var_name": "traceIdString"}, {"original_string": "volatile String parentIdString;", "modifier": "volatile", "type": "String", "declarator": "parentIdString", "var_name": "parentIdString"}, {"original_string": "volatile String localRootIdString;", "modifier": "volatile", "type": "String", "declarator": "localRootIdString", "var_name": "localRootIdString"}, {"original_string": "volatile String spanIdString;", "modifier": "volatile", "type": "String", "declarator": "spanIdString", "var_name": "spanIdString"}, {"original_string": "final long traceIdHigh, traceId, localRootId, parentId, spanId;", "modifier": "final", "type": "long", "declarator": "traceIdHigh", "var_name": "traceIdHigh"}, {"original_string": "final List<Object> extraList;", "modifier": "final", "type": "List<Object>", "declarator": "extraList", "var_name": "extraList"}, {"original_string": "volatile int hashCode;", "modifier": "volatile", "type": "int", "declarator": "hashCode", "var_name": "hashCode"}], "methods": [{"identifier": "newBuilder", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder newBuilder()", "full_signature": "public static Builder newBuilder()", "class_method_signature": "TraceContext.newBuilder()", "testcase": false, "constructor": false}, {"identifier": "traceIdHigh", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long traceIdHigh()", "full_signature": "public long traceIdHigh()", "class_method_signature": "TraceContext.traceIdHigh()", "testcase": false, "constructor": false}, {"identifier": "traceId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long traceId()", "full_signature": "public long traceId()", "class_method_signature": "TraceContext.traceId()", "testcase": false, "constructor": false}, {"identifier": "localRootId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long localRootId()", "full_signature": "public long localRootId()", "class_method_signature": "TraceContext.localRootId()", "testcase": false, "constructor": false}, {"identifier": "isLocalRoot", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isLocalRoot()", "full_signature": "public boolean isLocalRoot()", "class_method_signature": "TraceContext.isLocalRoot()", "testcase": false, "constructor": false}, {"identifier": "parentId", "parameters": "()", "modifiers": "@Nullable public final", "return": "Long", "signature": "Long parentId()", "full_signature": "@Nullable public final Long parentId()", "class_method_signature": "TraceContext.parentId()", "testcase": false, "constructor": false}, {"identifier": "parentIdAsLong", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long parentIdAsLong()", "full_signature": "public long parentIdAsLong()", "class_method_signature": "TraceContext.parentIdAsLong()", "testcase": false, "constructor": false}, {"identifier": "spanId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long spanId()", "full_signature": "public long spanId()", "class_method_signature": "TraceContext.spanId()", "testcase": false, "constructor": false}, {"identifier": "shared", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean shared()", "full_signature": "public boolean shared()", "class_method_signature": "TraceContext.shared()", "testcase": false, "constructor": false}, {"identifier": "extra", "parameters": "()", "modifiers": "public", "return": "List<Object>", "signature": "List<Object> extra()", "full_signature": "public List<Object> extra()", "class_method_signature": "TraceContext.extra()", "testcase": false, "constructor": false}, {"identifier": "findExtra", "parameters": "(Class<T> type)", "modifiers": "@Nullable public", "return": "T", "signature": "T findExtra(Class<T> type)", "full_signature": "@Nullable public T findExtra(Class<T> type)", "class_method_signature": "TraceContext.findExtra(Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "toBuilder", "parameters": "()", "modifiers": "public", "return": "Builder", "signature": "Builder toBuilder()", "full_signature": "public Builder toBuilder()", "class_method_signature": "TraceContext.toBuilder()", "testcase": false, "constructor": false}, {"identifier": "traceIdString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String traceIdString()", "full_signature": "public String traceIdString()", "class_method_signature": "TraceContext.traceIdString()", "testcase": false, "constructor": false}, {"identifier": "parentIdString", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String parentIdString()", "full_signature": "@Nullable public String parentIdString()", "class_method_signature": "TraceContext.parentIdString()", "testcase": false, "constructor": false}, {"identifier": "localRootIdString", "parameters": "()", "modifiers": "@Nullable public", "return": "String", "signature": "String localRootIdString()", "full_signature": "@Nullable public String localRootIdString()", "class_method_signature": "TraceContext.localRootIdString()", "testcase": false, "constructor": false}, {"identifier": "spanIdString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String spanIdString()", "full_signature": "public String spanIdString()", "class_method_signature": "TraceContext.spanIdString()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TraceContext.toString()", "testcase": false, "constructor": false}, {"identifier": "shallowCopy", "parameters": "()", "modifiers": "", "return": "TraceContext", "signature": "TraceContext shallowCopy()", "full_signature": " TraceContext shallowCopy()", "class_method_signature": "TraceContext.shallowCopy()", "testcase": false, "constructor": false}, {"identifier": "withExtra", "parameters": "(List<Object> extra)", "modifiers": "", "return": "TraceContext", "signature": "TraceContext withExtra(List<Object> extra)", "full_signature": " TraceContext withExtra(List<Object> extra)", "class_method_signature": "TraceContext.withExtra(List<Object> extra)", "testcase": false, "constructor": false}, {"identifier": "withFlags", "parameters": "(int flags)", "modifiers": "", "return": "TraceContext", "signature": "TraceContext withFlags(int flags)", "full_signature": " TraceContext withFlags(int flags)", "class_method_signature": "TraceContext.withFlags(int flags)", "testcase": false, "constructor": false}, {"identifier": "TraceContext", "parameters": "(\n    int flags,\n    long traceIdHigh,\n    long traceId,\n    long localRootId,\n    long parentId,\n    long spanId,\n    List<Object> extraList\n  )", "modifiers": "", "return": "", "signature": " TraceContext(\n    int flags,\n    long traceIdHigh,\n    long traceId,\n    long localRootId,\n    long parentId,\n    long spanId,\n    List<Object> extraList\n  )", "full_signature": "  TraceContext(\n    int flags,\n    long traceIdHigh,\n    long traceId,\n    long localRootId,\n    long parentId,\n    long spanId,\n    List<Object> extraList\n  )", "class_method_signature": "TraceContext.TraceContext(\n    int flags,\n    long traceIdHigh,\n    long traceId,\n    long localRootId,\n    long parentId,\n    long spanId,\n    List<Object> extraList\n  )", "testcase": false, "constructor": true}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "TraceContext.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TraceContext.hashCode()", "testcase": false, "constructor": false}, {"identifier": "ensureExtraAdded", "parameters": "(List<Object> extraList, Object extra)", "modifiers": "static", "return": "List<Object>", "signature": "List<Object> ensureExtraAdded(List<Object> extraList, Object extra)", "full_signature": "static List<Object> ensureExtraAdded(List<Object> extraList, Object extra)", "class_method_signature": "TraceContext.ensureExtraAdded(List<Object> extraList, Object extra)", "testcase": false, "constructor": false}, {"identifier": "findExtra", "parameters": "(Class<T> type, List<Object> extra)", "modifiers": "static", "return": "T", "signature": "T findExtra(Class<T> type, List<Object> extra)", "full_signature": "static T findExtra(Class<T> type, List<Object> extra)", "class_method_signature": "TraceContext.findExtra(Class<T> type, List<Object> extra)", "testcase": false, "constructor": false}], "file": "brave/src/main/java/brave/propagation/TraceContext.java"}, "focal_method": {"identifier": "withExtra", "parameters": "(List<Object> extra)", "modifiers": "", "return": "TraceContext", "body": "TraceContext withExtra(List<Object> extra) {\n    return new TraceContext(flags, traceIdHigh, traceId, localRootId, parentId, spanId, extra);\n  }", "signature": "TraceContext withExtra(List<Object> extra)", "full_signature": " TraceContext withExtra(List<Object> extra)", "class_method_signature": "TraceContext.withExtra(List<Object> extra)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}