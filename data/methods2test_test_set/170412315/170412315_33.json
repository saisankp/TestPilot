{"test_class": {"identifier": "JettyDemoServerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JettyDemoServer server;", "modifier": "private", "type": "JettyDemoServer", "declarator": "server", "var_name": "server"}, {"original_string": "private HttpURLConnectionApiClient client;", "modifier": "private", "type": "HttpURLConnectionApiClient", "declarator": "client", "var_name": "client"}], "file": "action-controller-demo-server/src/test/java/org/actioncontrollerdemo/jetty/JettyDemoServerTest.java"}, "test_case": {"identifier": "shouldStartSuccessfully", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldStartSuccessfully() throws Exception {\n        URL url = new URL(server.getUrl() + \"/demo\");\n        HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n\n        assertThat(connection.getResponseCode())\n                .as(connection.getResponseMessage())\n                .isEqualTo(200);\n        String body = HttpURLConnectionApiClient.asString(connection.getInputStream());\n        assertThat(body).contains(\"<h1>Hello World</h1>\");\n    }", "signature": "void shouldStartSuccessfully()", "full_signature": "@Test public void shouldStartSuccessfully()", "class_method_signature": "JettyDemoServerTest.shouldStartSuccessfully()", "testcase": true, "constructor": false, "invocations": ["getUrl", "openConnection", "isEqualTo", "as", "assertThat", "getResponseCode", "getResponseMessage", "asString", "getInputStream", "contains", "assertThat"]}, "focal_class": {"identifier": "JettyDemoServer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(JettyDemoServer.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(JettyDemoServer.class)", "var_name": "logger"}, {"original_string": "private Server server = new Server();", "modifier": "private", "type": "Server", "declarator": "server = new Server()", "var_name": "server"}, {"original_string": "private ServerConnector connector = new ServerConnector(server);", "modifier": "private", "type": "ServerConnector", "declarator": "connector = new ServerConnector(server)", "var_name": "connector"}, {"original_string": "private String localhostName;", "modifier": "private", "type": "String", "declarator": "localhostName", "var_name": "localhostName"}, {"original_string": "private ConfigObserver config = new ConfigObserver(\"demoserver\");", "modifier": "private", "type": "ConfigObserver", "declarator": "config = new ConfigObserver(\"demoserver\")", "var_name": "config"}], "methods": [{"identifier": "JettyDemoServer", "parameters": "()", "modifiers": "public", "return": "", "signature": " JettyDemoServer()", "full_signature": "public  JettyDemoServer()", "class_method_signature": "JettyDemoServer.JettyDemoServer()", "testcase": false, "constructor": true}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "JettyDemoServer.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void start()", "full_signature": "private void start()", "class_method_signature": "JettyDemoServer.start()", "testcase": false, "constructor": false}, {"identifier": "startConnector", "parameters": "(InetSocketAddress httpSocketAddress)", "modifiers": "private", "return": "void", "signature": "void startConnector(InetSocketAddress httpSocketAddress)", "full_signature": "private void startConnector(InetSocketAddress httpSocketAddress)", "class_method_signature": "JettyDemoServer.startConnector(InetSocketAddress httpSocketAddress)", "testcase": false, "constructor": false}, {"identifier": "startConnector", "parameters": "(int port)", "modifiers": "public", "return": "void", "signature": "void startConnector(int port)", "full_signature": "public void startConnector(int port)", "class_method_signature": "JettyDemoServer.startConnector(int port)", "testcase": false, "constructor": false}, {"identifier": "createServletContext", "parameters": "(String contextPath)", "modifiers": "private", "return": "ServletContextHandler", "signature": "ServletContextHandler createServletContext(String contextPath)", "full_signature": "private ServletContextHandler createServletContext(String contextPath)", "class_method_signature": "JettyDemoServer.createServletContext(String contextPath)", "testcase": false, "constructor": false}, {"identifier": "getUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUrl()", "full_signature": "public String getUrl()", "class_method_signature": "JettyDemoServer.getUrl()", "testcase": false, "constructor": false}, {"identifier": "getUrl", "parameters": "(ServerConnector connector)", "modifiers": "private", "return": "String", "signature": "String getUrl(ServerConnector connector)", "full_signature": "private String getUrl(ServerConnector connector)", "class_method_signature": "JettyDemoServer.getUrl(ServerConnector connector)", "testcase": false, "constructor": false}, {"identifier": "getHost", "parameters": "(ServerConnector connector)", "modifiers": "private", "return": "String", "signature": "String getHost(ServerConnector connector)", "full_signature": "private String getHost(ServerConnector connector)", "class_method_signature": "JettyDemoServer.getHost(ServerConnector connector)", "testcase": false, "constructor": false}, {"identifier": "getPort", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPort()", "full_signature": "public int getPort()", "class_method_signature": "JettyDemoServer.getPort()", "testcase": false, "constructor": false}], "file": "action-controller-demo-server/src/main/java/org/actioncontrollerdemo/jetty/JettyDemoServer.java"}, "focal_method": {"identifier": "getUrl", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getUrl() {\n        return getUrl(connector);\n    }", "signature": "String getUrl()", "full_signature": "public String getUrl()", "class_method_signature": "JettyDemoServer.getUrl()", "testcase": false, "constructor": false, "invocations": ["getUrl"]}, "repository": {"repo_id": 170412315, "url": "https://github.com/jhannes/action-controller", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 1800, "license": "licensed"}}