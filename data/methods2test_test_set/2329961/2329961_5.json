{"test_class": {"identifier": "ReconnectDelayManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static InetAddress address;", "modifier": "private static", "type": "InetAddress", "declarator": "address", "var_name": "address"}, {"original_string": "private final static int initialDelay = 100;", "modifier": "private final static", "type": "int", "declarator": "initialDelay = 100", "var_name": "initialDelay"}, {"original_string": "private final static int maxDelay = 10000;", "modifier": "private final static", "type": "int", "declarator": "maxDelay = 10000", "var_name": "maxDelay"}, {"original_string": "private final static int resetTime = 20000;", "modifier": "private final static", "type": "int", "declarator": "resetTime = 20000", "var_name": "resetTime"}, {"original_string": "private SettableTimeProvider timeProvider;", "modifier": "private", "type": "SettableTimeProvider", "declarator": "timeProvider", "var_name": "timeProvider"}, {"original_string": "private ReconnectDelayManager delayManager;", "modifier": "private", "type": "ReconnectDelayManager", "declarator": "delayManager", "var_name": "delayManager"}], "file": "timber/src/test/java/org/cloudname/timber/client/ReconnectDelayManagerTest.java"}, "test_case": {"identifier": "testSimple", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSimple() throws Exception {\n        // Loop through with clock that is always constant.\n        ArrayList<Integer> values = new ArrayList<Integer>();\n        int delay = 0;\n        while (delay < maxDelay) {\n            delay = delayManager.getReconnectDelayMs(address);\n            values.add(delay);\n        }\n\n        // Make sure we get the expected sequence.\n        List<Integer> expected = Arrays.asList(100, 200, 400, 800, 1600, 3200, 6400, 10000);\n        assertEquals(expected, values);\n\n        // Make sure that next delay is also equal to maxDelay\n        assertEquals(maxDelay, delayManager.getReconnectDelayMs(address));\n    }", "signature": "void testSimple()", "full_signature": "@Test public void testSimple()", "class_method_signature": "ReconnectDelayManagerTest.testSimple()", "testcase": true, "constructor": false, "invocations": ["getReconnectDelayMs", "add", "asList", "assertEquals", "assertEquals", "getReconnectDelayMs"]}, "focal_class": {"identifier": "ReconnectDelayManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int DEFAULT_RECONNECT_DELAY_INITIAL_MS = 500;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_RECONNECT_DELAY_INITIAL_MS = 500", "var_name": "DEFAULT_RECONNECT_DELAY_INITIAL_MS"}, {"original_string": "public static final int DEFAULT_RECONNECT_MAX_DELAY_MS = 30000;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_RECONNECT_MAX_DELAY_MS = 30000", "var_name": "DEFAULT_RECONNECT_MAX_DELAY_MS"}, {"original_string": "public static final int DEFAULT_RECONNECT_DELAY_RESET_TIME_MS = 60000;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_RECONNECT_DELAY_RESET_TIME_MS = 60000", "var_name": "DEFAULT_RECONNECT_DELAY_RESET_TIME_MS"}, {"original_string": "private final int initialReconnectDelayMs;", "modifier": "private final", "type": "int", "declarator": "initialReconnectDelayMs", "var_name": "initialReconnectDelayMs"}, {"original_string": "private final int maxReconnectDelayMs;", "modifier": "private final", "type": "int", "declarator": "maxReconnectDelayMs", "var_name": "maxReconnectDelayMs"}, {"original_string": "private final int reconnectDelayResetMs;", "modifier": "private final", "type": "int", "declarator": "reconnectDelayResetMs", "var_name": "reconnectDelayResetMs"}, {"original_string": "private final TimeProvider timeProvider;", "modifier": "private final", "type": "TimeProvider", "declarator": "timeProvider", "var_name": "timeProvider"}, {"original_string": "private final ConcurrentHashMap<InetAddress, ReconnectItem> addressMap\n        = new ConcurrentHashMap<InetAddress, ReconnectItem>();", "modifier": "private final", "type": "ConcurrentHashMap<InetAddress, ReconnectItem>", "declarator": "addressMap\n        = new ConcurrentHashMap<InetAddress, ReconnectItem>()", "var_name": "addressMap"}, {"original_string": "public static TimeProvider DEFAULT_TIMEPROVIDER = new TimeProvider() {\n            @Override public long currentTimeMillis() {\n                return System.currentTimeMillis();\n            }\n        };", "modifier": "public static", "type": "TimeProvider", "declarator": "DEFAULT_TIMEPROVIDER = new TimeProvider() {\n            @Override public long currentTimeMillis() {\n                return System.currentTimeMillis();\n            }\n        }", "var_name": "DEFAULT_TIMEPROVIDER"}], "methods": [{"identifier": "ReconnectDelayManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " ReconnectDelayManager()", "full_signature": "public  ReconnectDelayManager()", "class_method_signature": "ReconnectDelayManager.ReconnectDelayManager()", "testcase": false, "constructor": true}, {"identifier": "ReconnectDelayManager", "parameters": "(final int initialReconnectDelayMs,\n                                 final int maxReconnectDelayMs,\n                                 final int reconnectDelayResetMs,\n                                 final TimeProvider timeProvider)", "modifiers": "public", "return": "", "signature": " ReconnectDelayManager(final int initialReconnectDelayMs,\n                                 final int maxReconnectDelayMs,\n                                 final int reconnectDelayResetMs,\n                                 final TimeProvider timeProvider)", "full_signature": "public  ReconnectDelayManager(final int initialReconnectDelayMs,\n                                 final int maxReconnectDelayMs,\n                                 final int reconnectDelayResetMs,\n                                 final TimeProvider timeProvider)", "class_method_signature": "ReconnectDelayManager.ReconnectDelayManager(final int initialReconnectDelayMs,\n                                 final int maxReconnectDelayMs,\n                                 final int reconnectDelayResetMs,\n                                 final TimeProvider timeProvider)", "testcase": false, "constructor": true}, {"identifier": "getReconnectDelayMs", "parameters": "(InetSocketAddress socketAddress)", "modifiers": "public", "return": "int", "signature": "int getReconnectDelayMs(InetSocketAddress socketAddress)", "full_signature": "public int getReconnectDelayMs(InetSocketAddress socketAddress)", "class_method_signature": "ReconnectDelayManager.getReconnectDelayMs(InetSocketAddress socketAddress)", "testcase": false, "constructor": false}, {"identifier": "getReconnectDelayMs", "parameters": "(InetAddress address)", "modifiers": "public", "return": "int", "signature": "int getReconnectDelayMs(InetAddress address)", "full_signature": "public int getReconnectDelayMs(InetAddress address)", "class_method_signature": "ReconnectDelayManager.getReconnectDelayMs(InetAddress address)", "testcase": false, "constructor": false}], "file": "timber/src/main/java/org/cloudname/timber/client/ReconnectDelayManager.java"}, "focal_method": {"identifier": "getReconnectDelayMs", "parameters": "(InetSocketAddress socketAddress)", "modifiers": "public", "return": "int", "body": "public int getReconnectDelayMs(InetSocketAddress socketAddress) {\n        return getReconnectDelayMs(socketAddress.getAddress());\n    }", "signature": "int getReconnectDelayMs(InetSocketAddress socketAddress)", "full_signature": "public int getReconnectDelayMs(InetSocketAddress socketAddress)", "class_method_signature": "ReconnectDelayManager.getReconnectDelayMs(InetSocketAddress socketAddress)", "testcase": false, "constructor": false, "invocations": ["getReconnectDelayMs", "getAddress"]}, "repository": {"repo_id": 2329961, "url": "https://github.com/Cloudname/cloudname", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 21, "size": 26031, "license": "licensed"}}