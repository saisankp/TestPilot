{"test_class": {"identifier": "DebugAtomContainerSetTest", "superclass": "extends AbstractAtomContainerSetTest", "interfaces": "", "fields": [], "file": "base/datadebug/src/test/java/org/openscience/cdk/debug/DebugAtomContainerSetTest.java"}, "test_case": {"identifier": "testDebugAtomContainerSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDebugAtomContainerSet() {\n        IAtomContainerSet som = new DebugAtomContainerSet();\n        Assert.assertNotNull(som);\n        Assert.assertEquals(0, som.getAtomContainerCount());\n    }", "signature": "void testDebugAtomContainerSet()", "full_signature": "@Test public void testDebugAtomContainerSet()", "class_method_signature": "DebugAtomContainerSetTest.testDebugAtomContainerSet()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "assertEquals", "getAtomContainerCount"]}, "focal_class": {"identifier": "DebugAtomContainerSet", "superclass": "extends AtomContainerSet", "interfaces": "implements IAtomContainerSet", "fields": [{"original_string": "private static final long serialVersionUID = -8358480615782437454L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -8358480615782437454L", "var_name": "serialVersionUID"}, {"original_string": "ILoggingTool              logger           = LoggingToolFactory.createLoggingTool(DebugAtomContainerSet.class);", "modifier": "", "type": "ILoggingTool", "declarator": "logger           = LoggingToolFactory.createLoggingTool(DebugAtomContainerSet.class)", "var_name": "logger"}], "methods": [{"identifier": "addListener", "parameters": "(IChemObjectListener col)", "modifiers": "@Override public", "return": "void", "signature": "void addListener(IChemObjectListener col)", "full_signature": "@Override public void addListener(IChemObjectListener col)", "class_method_signature": "DebugAtomContainerSet.addListener(IChemObjectListener col)", "testcase": false, "constructor": false}, {"identifier": "getListenerCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getListenerCount()", "full_signature": "@Override public int getListenerCount()", "class_method_signature": "DebugAtomContainerSet.getListenerCount()", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(IChemObjectListener col)", "modifiers": "@Override public", "return": "void", "signature": "void removeListener(IChemObjectListener col)", "full_signature": "@Override public void removeListener(IChemObjectListener col)", "class_method_signature": "DebugAtomContainerSet.removeListener(IChemObjectListener col)", "testcase": false, "constructor": false}, {"identifier": "notifyChanged", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void notifyChanged()", "full_signature": "@Override public void notifyChanged()", "class_method_signature": "DebugAtomContainerSet.notifyChanged()", "testcase": false, "constructor": false}, {"identifier": "notifyChanged", "parameters": "(IChemObjectChangeEvent evt)", "modifiers": "@Override public", "return": "void", "signature": "void notifyChanged(IChemObjectChangeEvent evt)", "full_signature": "@Override public void notifyChanged(IChemObjectChangeEvent evt)", "class_method_signature": "DebugAtomContainerSet.notifyChanged(IChemObjectChangeEvent evt)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(Object description, Object property)", "modifiers": "@Override public", "return": "void", "signature": "void setProperty(Object description, Object property)", "full_signature": "@Override public void setProperty(Object description, Object property)", "class_method_signature": "DebugAtomContainerSet.setProperty(Object description, Object property)", "testcase": false, "constructor": false}, {"identifier": "removeProperty", "parameters": "(Object description)", "modifiers": "@Override public", "return": "void", "signature": "void removeProperty(Object description)", "full_signature": "@Override public void removeProperty(Object description)", "class_method_signature": "DebugAtomContainerSet.removeProperty(Object description)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(Object description)", "modifiers": "@Override public", "return": "T", "signature": "T getProperty(Object description)", "full_signature": "@Override public T getProperty(Object description)", "class_method_signature": "DebugAtomContainerSet.getProperty(Object description)", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override public", "return": "Map<Object, Object>", "signature": "Map<Object, Object> getProperties()", "full_signature": "@Override public Map<Object, Object> getProperties()", "class_method_signature": "DebugAtomContainerSet.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getID", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getID()", "full_signature": "@Override public String getID()", "class_method_signature": "DebugAtomContainerSet.getID()", "testcase": false, "constructor": false}, {"identifier": "setID", "parameters": "(String identifier)", "modifiers": "@Override public", "return": "void", "signature": "void setID(String identifier)", "full_signature": "@Override public void setID(String identifier)", "class_method_signature": "DebugAtomContainerSet.setID(String identifier)", "testcase": false, "constructor": false}, {"identifier": "setFlag", "parameters": "(int flagType, boolean flagValue)", "modifiers": "@Override public", "return": "void", "signature": "void setFlag(int flagType, boolean flagValue)", "full_signature": "@Override public void setFlag(int flagType, boolean flagValue)", "class_method_signature": "DebugAtomContainerSet.setFlag(int flagType, boolean flagValue)", "testcase": false, "constructor": false}, {"identifier": "getFlag", "parameters": "(int flagType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getFlag(int flagType)", "full_signature": "@Override public boolean getFlag(int flagType)", "class_method_signature": "DebugAtomContainerSet.getFlag(int flagType)", "testcase": false, "constructor": false}, {"identifier": "addProperties", "parameters": "(Map<Object, Object> properties)", "modifiers": "@Override public", "return": "void", "signature": "void addProperties(Map<Object, Object> properties)", "full_signature": "@Override public void addProperties(Map<Object, Object> properties)", "class_method_signature": "DebugAtomContainerSet.addProperties(Map<Object, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "setFlags", "parameters": "(boolean[] flagsNew)", "modifiers": "@Override public", "return": "void", "signature": "void setFlags(boolean[] flagsNew)", "full_signature": "@Override public void setFlags(boolean[] flagsNew)", "class_method_signature": "DebugAtomContainerSet.setFlags(boolean[] flagsNew)", "testcase": false, "constructor": false}, {"identifier": "getFlags", "parameters": "()", "modifiers": "@Override public", "return": "boolean[]", "signature": "boolean[] getFlags()", "full_signature": "@Override public boolean[] getFlags()", "class_method_signature": "DebugAtomContainerSet.getFlags()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object clone()", "full_signature": "@Override public Object clone()", "class_method_signature": "DebugAtomContainerSet.clone()", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "()", "modifiers": "@Override public", "return": "IChemObjectBuilder", "signature": "IChemObjectBuilder getBuilder()", "full_signature": "@Override public IChemObjectBuilder getBuilder()", "class_method_signature": "DebugAtomContainerSet.getBuilder()", "testcase": false, "constructor": false}, {"identifier": "addAtomContainer", "parameters": "(IAtomContainer atomContainer)", "modifiers": "@Override public", "return": "void", "signature": "void addAtomContainer(IAtomContainer atomContainer)", "full_signature": "@Override public void addAtomContainer(IAtomContainer atomContainer)", "class_method_signature": "DebugAtomContainerSet.addAtomContainer(IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "removeAtomContainer", "parameters": "(IAtomContainer atomContainer)", "modifiers": "@Override public", "return": "void", "signature": "void removeAtomContainer(IAtomContainer atomContainer)", "full_signature": "@Override public void removeAtomContainer(IAtomContainer atomContainer)", "class_method_signature": "DebugAtomContainerSet.removeAtomContainer(IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "removeAllAtomContainers", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void removeAllAtomContainers()", "full_signature": "@Override public void removeAllAtomContainers()", "class_method_signature": "DebugAtomContainerSet.removeAllAtomContainers()", "testcase": false, "constructor": false}, {"identifier": "removeAtomContainer", "parameters": "(int pos)", "modifiers": "@Override public", "return": "void", "signature": "void removeAtomContainer(int pos)", "full_signature": "@Override public void removeAtomContainer(int pos)", "class_method_signature": "DebugAtomContainerSet.removeAtomContainer(int pos)", "testcase": false, "constructor": false}, {"identifier": "replaceAtomContainer", "parameters": "(int position, IAtomContainer container)", "modifiers": "@Override public", "return": "void", "signature": "void replaceAtomContainer(int position, IAtomContainer container)", "full_signature": "@Override public void replaceAtomContainer(int position, IAtomContainer container)", "class_method_signature": "DebugAtomContainerSet.replaceAtomContainer(int position, IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "setMultiplier", "parameters": "(IAtomContainer container, Double multiplier)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setMultiplier(IAtomContainer container, Double multiplier)", "full_signature": "@Override public boolean setMultiplier(IAtomContainer container, Double multiplier)", "class_method_signature": "DebugAtomContainerSet.setMultiplier(IAtomContainer container, Double multiplier)", "testcase": false, "constructor": false}, {"identifier": "setMultiplier", "parameters": "(int position, Double multiplier)", "modifiers": "@Override public", "return": "void", "signature": "void setMultiplier(int position, Double multiplier)", "full_signature": "@Override public void setMultiplier(int position, Double multiplier)", "class_method_signature": "DebugAtomContainerSet.setMultiplier(int position, Double multiplier)", "testcase": false, "constructor": false}, {"identifier": "getMultipliers", "parameters": "()", "modifiers": "@Override public", "return": "Double[]", "signature": "Double[] getMultipliers()", "full_signature": "@Override public Double[] getMultipliers()", "class_method_signature": "DebugAtomContainerSet.getMultipliers()", "testcase": false, "constructor": false}, {"identifier": "setMultipliers", "parameters": "(Double[] newMultipliers)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setMultipliers(Double[] newMultipliers)", "full_signature": "@Override public boolean setMultipliers(Double[] newMultipliers)", "class_method_signature": "DebugAtomContainerSet.setMultipliers(Double[] newMultipliers)", "testcase": false, "constructor": false}, {"identifier": "addAtomContainer", "parameters": "(IAtomContainer atomContainer, double multiplier)", "modifiers": "@Override public", "return": "void", "signature": "void addAtomContainer(IAtomContainer atomContainer, double multiplier)", "full_signature": "@Override public void addAtomContainer(IAtomContainer atomContainer, double multiplier)", "class_method_signature": "DebugAtomContainerSet.addAtomContainer(IAtomContainer atomContainer, double multiplier)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(IAtomContainerSet atomContainerSet)", "modifiers": "@Override public", "return": "void", "signature": "void add(IAtomContainerSet atomContainerSet)", "full_signature": "@Override public void add(IAtomContainerSet atomContainerSet)", "class_method_signature": "DebugAtomContainerSet.add(IAtomContainerSet atomContainerSet)", "testcase": false, "constructor": false}, {"identifier": "atomContainers", "parameters": "()", "modifiers": "@Override public", "return": "Iterable<IAtomContainer>", "signature": "Iterable<IAtomContainer> atomContainers()", "full_signature": "@Override public Iterable<IAtomContainer> atomContainers()", "class_method_signature": "DebugAtomContainerSet.atomContainers()", "testcase": false, "constructor": false}, {"identifier": "getAtomContainer", "parameters": "(int number)", "modifiers": "@Override public", "return": "IAtomContainer", "signature": "IAtomContainer getAtomContainer(int number)", "full_signature": "@Override public IAtomContainer getAtomContainer(int number)", "class_method_signature": "DebugAtomContainerSet.getAtomContainer(int number)", "testcase": false, "constructor": false}, {"identifier": "getMultiplier", "parameters": "(int number)", "modifiers": "@Override public", "return": "Double", "signature": "Double getMultiplier(int number)", "full_signature": "@Override public Double getMultiplier(int number)", "class_method_signature": "DebugAtomContainerSet.getMultiplier(int number)", "testcase": false, "constructor": false}, {"identifier": "getMultiplier", "parameters": "(IAtomContainer container)", "modifiers": "@Override public", "return": "Double", "signature": "Double getMultiplier(IAtomContainer container)", "full_signature": "@Override public Double getMultiplier(IAtomContainer container)", "class_method_signature": "DebugAtomContainerSet.getMultiplier(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "getAtomContainerCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getAtomContainerCount()", "full_signature": "@Override public int getAtomContainerCount()", "class_method_signature": "DebugAtomContainerSet.getAtomContainerCount()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public boolean isEmpty()", "class_method_signature": "DebugAtomContainerSet.isEmpty()", "testcase": false, "constructor": false}], "file": "base/datadebug/src/main/java/org/openscience/cdk/debug/DebugAtomContainerSet.java"}, "focal_method": {"identifier": "getAtomContainerCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int getAtomContainerCount() {\n        logger.debug(\"Getting atom container count: \", super.getAtomContainerCount());\n        return super.getAtomContainerCount();\n    }", "signature": "int getAtomContainerCount()", "full_signature": "@Override public int getAtomContainerCount()", "class_method_signature": "DebugAtomContainerSet.getAtomContainerCount()", "testcase": false, "constructor": false, "invocations": ["debug", "getAtomContainerCount", "getAtomContainerCount"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}