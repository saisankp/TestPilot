{"test_class": {"identifier": "TargetPerspectiveEditorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    TargetPerspectiveEditor.View view;", "modifier": "@Mock", "type": "TargetPerspectiveEditor.View", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock\n    PerspectivePluginManager perspectivePluginManager;", "modifier": "@Mock", "type": "PerspectivePluginManager", "declarator": "perspectivePluginManager", "var_name": "perspectivePluginManager"}, {"original_string": "@Mock\n    PerspectiveDropDown perspectiveDropDown;", "modifier": "@Mock", "type": "PerspectiveDropDown", "declarator": "perspectiveDropDown", "var_name": "perspectiveDropDown"}, {"original_string": "@Mock\n    PerspectiveTreeProvider perspectiveTreeProvider;", "modifier": "@Mock", "type": "PerspectiveTreeProvider", "declarator": "perspectiveTreeProvider", "var_name": "perspectiveTreeProvider"}, {"original_string": "@Mock\n    Command updateCommand;", "modifier": "@Mock", "type": "Command", "declarator": "updateCommand", "var_name": "updateCommand"}, {"original_string": "TargetPerspectiveEditor presenter;", "modifier": "", "type": "TargetPerspectiveEditor", "declarator": "presenter", "var_name": "presenter"}, {"original_string": "NavTree NAV_TREE = new NavTreeBuilder()\n            .group(\"root\", \"root\", \"root\", true)\n                .group(\"level1a\", \"level1a\", \"level1a\", true)\n                .endGroup()\n                .group(\"level1b\", \"level1b\", \"level1b\", true)\n                .endGroup()\n                .group(\"levelnull\", null, null, true)\n                    .group(\"level2a\", \"level2a\", \"level2a\", true)\n                    .endGroup()\n                .endGroup()\n            .build();", "modifier": "", "type": "NavTree", "declarator": "NAV_TREE = new NavTreeBuilder()\n            .group(\"root\", \"root\", \"root\", true)\n                .group(\"level1a\", \"level1a\", \"level1a\", true)\n                .endGroup()\n                .group(\"level1b\", \"level1b\", \"level1b\", true)\n                .endGroup()\n                .group(\"levelnull\", null, null, true)\n                    .group(\"level2a\", \"level2a\", \"level2a\", true)\n                    .endGroup()\n                .endGroup()\n            .build()", "var_name": "NAV_TREE"}], "file": "dashbuilder-client/dashbuilder-navigation-client/src/test/java/org/dashbuilder/client/navigation/widget/editor/TargetPerspectiveEditorTest.java"}, "test_case": {"identifier": "testShow", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testShow() {\n        verify(perspectiveDropDown).setSelectedPerspective(\"A\");\n        verify(view).setPerspectiveSelector(perspectiveDropDown);\n        verify(view).clearNavGroupItems();\n        verify(view).setNavGroupSelection(eq(\"root>level1a\"), any());\n        verify(view).addNavGroupItem(eq(\"root\"), any());\n        verify(view).addNavGroupItem(eq(\"root>level1b\"), any());\n        verify(view).addNavGroupItem(eq(\"level2a\"), any());\n        verify(view, times(3)).addNavGroupItem(anyString(), any());\n        verify(view, never()).addNavGroupItem(eq(\"root>level1a\"), any());\n        verify(view, never()).addNavGroupItem(eq(\"root>null\"), any());\n        verify(view, never()).addNavGroupItem(eq(\"null\"), any());\n        verify(view, never()).addNavGroupItem(eq(\"null>level2a\"), any());\n    }", "signature": "void testShow()", "full_signature": "@Test public void testShow()", "class_method_signature": "TargetPerspectiveEditorTest.testShow()", "testcase": true, "constructor": false, "invocations": ["setSelectedPerspective", "verify", "setPerspectiveSelector", "verify", "clearNavGroupItems", "verify", "setNavGroupSelection", "verify", "eq", "any", "addNavGroupItem", "verify", "eq", "any", "addNavGroupItem", "verify", "eq", "any", "addNavGroupItem", "verify", "eq", "any", "addNavGroupItem", "verify", "times", "anyString", "any", "addNavGroupItem", "verify", "never", "eq", "any", "addNavGroupItem", "verify", "never", "eq", "any", "addNavGroupItem", "verify", "never", "eq", "any", "addNavGroupItem", "verify", "never", "eq", "any"]}, "focal_class": {"identifier": "TargetPerspectiveEditor", "superclass": "", "interfaces": "implements IsElement, PerspectiveNameProvider", "fields": [{"original_string": "View view;", "modifier": "", "type": "View", "declarator": "view", "var_name": "view"}, {"original_string": "String navGroupId;", "modifier": "", "type": "String", "declarator": "navGroupId", "var_name": "navGroupId"}, {"original_string": "PerspectiveDropDown perspectiveDropDown;", "modifier": "", "type": "PerspectiveDropDown", "declarator": "perspectiveDropDown", "var_name": "perspectiveDropDown"}, {"original_string": "PerspectivePluginManager perspectivePluginManager;", "modifier": "", "type": "PerspectivePluginManager", "declarator": "perspectivePluginManager", "var_name": "perspectivePluginManager"}, {"original_string": "PerspectiveTreeProvider perspectiveTreeProvider;", "modifier": "", "type": "PerspectiveTreeProvider", "declarator": "perspectiveTreeProvider", "var_name": "perspectiveTreeProvider"}, {"original_string": "List<NavItem> navItemList;", "modifier": "", "type": "List<NavItem>", "declarator": "navItemList", "var_name": "navItemList"}, {"original_string": "Command onUpdateCommand;", "modifier": "", "type": "Command", "declarator": "onUpdateCommand", "var_name": "onUpdateCommand"}], "methods": [{"identifier": "TargetPerspectiveEditor", "parameters": "(View view,\n                                   PerspectiveDropDown perspectiveDropDown,\n                                   PerspectivePluginManager perspectivePluginManager,\n                                   PerspectiveTreeProvider perspectiveTreeProvider)", "modifiers": "@Inject public", "return": "", "signature": " TargetPerspectiveEditor(View view,\n                                   PerspectiveDropDown perspectiveDropDown,\n                                   PerspectivePluginManager perspectivePluginManager,\n                                   PerspectiveTreeProvider perspectiveTreeProvider)", "full_signature": "@Inject public  TargetPerspectiveEditor(View view,\n                                   PerspectiveDropDown perspectiveDropDown,\n                                   PerspectivePluginManager perspectivePluginManager,\n                                   PerspectiveTreeProvider perspectiveTreeProvider)", "class_method_signature": "TargetPerspectiveEditor.TargetPerspectiveEditor(View view,\n                                   PerspectiveDropDown perspectiveDropDown,\n                                   PerspectivePluginManager perspectivePluginManager,\n                                   PerspectiveTreeProvider perspectiveTreeProvider)", "testcase": false, "constructor": true}, {"identifier": "getElement", "parameters": "()", "modifiers": "@Override public", "return": "HTMLElement", "signature": "HTMLElement getElement()", "full_signature": "@Override public HTMLElement getElement()", "class_method_signature": "TargetPerspectiveEditor.getElement()", "testcase": false, "constructor": false}, {"identifier": "setNavItemList", "parameters": "(List<NavItem> navItemList)", "modifiers": "public", "return": "void", "signature": "void setNavItemList(List<NavItem> navItemList)", "full_signature": "public void setNavItemList(List<NavItem> navItemList)", "class_method_signature": "TargetPerspectiveEditor.setNavItemList(List<NavItem> navItemList)", "testcase": false, "constructor": false}, {"identifier": "setOnUpdateCommand", "parameters": "(Command onUpdateCommand)", "modifiers": "public", "return": "void", "signature": "void setOnUpdateCommand(Command onUpdateCommand)", "full_signature": "public void setOnUpdateCommand(Command onUpdateCommand)", "class_method_signature": "TargetPerspectiveEditor.setOnUpdateCommand(Command onUpdateCommand)", "testcase": false, "constructor": false}, {"identifier": "setPerspectiveIdsExcluded", "parameters": "(Set<String> perspectiveIdsExcluded)", "modifiers": "public", "return": "void", "signature": "void setPerspectiveIdsExcluded(Set<String> perspectiveIdsExcluded)", "full_signature": "public void setPerspectiveIdsExcluded(Set<String> perspectiveIdsExcluded)", "class_method_signature": "TargetPerspectiveEditor.setPerspectiveIdsExcluded(Set<String> perspectiveIdsExcluded)", "testcase": false, "constructor": false}, {"identifier": "setPerspectiveId", "parameters": "(String perspectiveId)", "modifiers": "public", "return": "void", "signature": "void setPerspectiveId(String perspectiveId)", "full_signature": "public void setPerspectiveId(String perspectiveId)", "class_method_signature": "TargetPerspectiveEditor.setPerspectiveId(String perspectiveId)", "testcase": false, "constructor": false}, {"identifier": "getPerspectiveId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPerspectiveId()", "full_signature": "public String getPerspectiveId()", "class_method_signature": "TargetPerspectiveEditor.getPerspectiveId()", "testcase": false, "constructor": false}, {"identifier": "getPerspectiveName", "parameters": "(String perspectiveId)", "modifiers": "@Override public", "return": "String", "signature": "String getPerspectiveName(String perspectiveId)", "full_signature": "@Override public String getPerspectiveName(String perspectiveId)", "class_method_signature": "TargetPerspectiveEditor.getPerspectiveName(String perspectiveId)", "testcase": false, "constructor": false}, {"identifier": "setNavGroupEnabled", "parameters": "(boolean enabled)", "modifiers": "public", "return": "void", "signature": "void setNavGroupEnabled(boolean enabled)", "full_signature": "public void setNavGroupEnabled(boolean enabled)", "class_method_signature": "TargetPerspectiveEditor.setNavGroupEnabled(boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "setNavGroupId", "parameters": "(String navGroupId)", "modifiers": "public", "return": "void", "signature": "void setNavGroupId(String navGroupId)", "full_signature": "public void setNavGroupId(String navGroupId)", "class_method_signature": "TargetPerspectiveEditor.setNavGroupId(String navGroupId)", "testcase": false, "constructor": false}, {"identifier": "getNavGroupId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getNavGroupId()", "full_signature": "public String getNavGroupId()", "class_method_signature": "TargetPerspectiveEditor.getNavGroupId()", "testcase": false, "constructor": false}, {"identifier": "show", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void show()", "full_signature": "public void show()", "class_method_signature": "TargetPerspectiveEditor.show()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "TargetPerspectiveEditor.clear()", "testcase": false, "constructor": false}, {"identifier": "updateNavGroups", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updateNavGroups()", "full_signature": "private void updateNavGroups()", "class_method_signature": "TargetPerspectiveEditor.updateNavGroups()", "testcase": false, "constructor": false}, {"identifier": "updateNavGroups", "parameters": "(List<NavItem> navItemList)", "modifiers": "private", "return": "void", "signature": "void updateNavGroups(List<NavItem> navItemList)", "full_signature": "private void updateNavGroups(List<NavItem> navItemList)", "class_method_signature": "TargetPerspectiveEditor.updateNavGroups(List<NavItem> navItemList)", "testcase": false, "constructor": false}, {"identifier": "addNavGroup", "parameters": "(NavItem navItem)", "modifiers": "private", "return": "void", "signature": "void addNavGroup(NavItem navItem)", "full_signature": "private void addNavGroup(NavItem navItem)", "class_method_signature": "TargetPerspectiveEditor.addNavGroup(NavItem navItem)", "testcase": false, "constructor": false}, {"identifier": "calculateFullPath", "parameters": "(NavItem navItem)", "modifiers": "private", "return": "String", "signature": "String calculateFullPath(NavItem navItem)", "full_signature": "private String calculateFullPath(NavItem navItem)", "class_method_signature": "TargetPerspectiveEditor.calculateFullPath(NavItem navItem)", "testcase": false, "constructor": false}, {"identifier": "onGroupSelected", "parameters": "(String id)", "modifiers": "public", "return": "void", "signature": "void onGroupSelected(String id)", "full_signature": "public void onGroupSelected(String id)", "class_method_signature": "TargetPerspectiveEditor.onGroupSelected(String id)", "testcase": false, "constructor": false}, {"identifier": "onPerspectiveChanged", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onPerspectiveChanged()", "full_signature": "public void onPerspectiveChanged()", "class_method_signature": "TargetPerspectiveEditor.onPerspectiveChanged()", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-navigation-client/src/main/java/org/dashbuilder/client/navigation/widget/editor/TargetPerspectiveEditor.java"}, "focal_method": {"identifier": "show", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void show() {\n        view.setPerspectiveSelector(perspectiveDropDown);\n        updateNavGroups();\n    }", "signature": "void show()", "full_signature": "public void show()", "class_method_signature": "TargetPerspectiveEditor.show()", "testcase": false, "constructor": false, "invocations": ["setPerspectiveSelector", "updateNavGroups"]}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}