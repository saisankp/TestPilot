{"test_class": {"identifier": "QuotaManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "step-controller/step-controller-base-plugins/src/test/java/step/plugins/quotamanager/QuotaManagerTest.java"}, "test_case": {"identifier": "testQuotaKeys", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testQuotaKeys() throws Exception {\n\t\tQuotaManagerConfig config = new QuotaManagerConfig(\"testManager\");\n\t\tList<Quota> quotas = new ArrayList<>();\n\t\tQuota quota = new Quota();\n\t\tquota.setPermits(1);\n\t\tquota.setQuotaKeyFunction(\"key\");\n\t\tquotas.add(quota);\n\t\t\n\t\t\n\t\tQuotaManager manager = new QuotaManager(config);\n\t\tfor(int i=0;i<10;i++) {\n\t\t\tHashMap<String, Object> bindings = new HashMap<>();\n\t\t\tbindings.put(\"key\", \"key\"+i);\n\n\t\t\tUUID id = manager.acquirePermit(bindings);\n\t\t\tAssert.assertNotNull(id);\n\t\t}\n\t}", "signature": "void testQuotaKeys()", "full_signature": "@Test public void testQuotaKeys()", "class_method_signature": "QuotaManagerTest.testQuotaKeys()", "testcase": true, "constructor": false, "invocations": ["setPermits", "setQuotaKeyFunction", "add", "put", "acquirePermit", "assertNotNull"]}, "focal_class": {"identifier": "QuotaManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(QuotaManager.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(QuotaManager.class)", "var_name": "logger"}, {"original_string": "private volatile QuotaManagerConfig config;", "modifier": "private volatile", "type": "QuotaManagerConfig", "declarator": "config", "var_name": "config"}, {"original_string": "private volatile boolean enabled = false;", "modifier": "private volatile", "type": "boolean", "declarator": "enabled = false", "var_name": "enabled"}, {"original_string": "private volatile List<QuotaHandler> quotaHandlers;", "modifier": "private volatile", "type": "List<QuotaHandler>", "declarator": "quotaHandlers", "var_name": "quotaHandlers"}, {"original_string": "private final ConcurrentHashMap<UUID, List<Permit>> permits = new ConcurrentHashMap<>();", "modifier": "private final", "type": "ConcurrentHashMap<UUID, List<Permit>>", "declarator": "permits = new ConcurrentHashMap<>()", "var_name": "permits"}, {"original_string": "private final Object paceLockObject = new Object();", "modifier": "private final", "type": "Object", "declarator": "paceLockObject = new Object()", "var_name": "paceLockObject"}], "methods": [{"identifier": "QuotaManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " QuotaManager()", "full_signature": "public  QuotaManager()", "class_method_signature": "QuotaManager.QuotaManager()", "testcase": false, "constructor": true}, {"identifier": "QuotaManager", "parameters": "(QuotaManagerConfig config)", "modifiers": "public", "return": "", "signature": " QuotaManager(QuotaManagerConfig config)", "full_signature": "public  QuotaManager(QuotaManagerConfig config)", "class_method_signature": "QuotaManager.QuotaManager(QuotaManagerConfig config)", "testcase": false, "constructor": true}, {"identifier": "QuotaManager", "parameters": "(File configFile)", "modifiers": "public", "return": "", "signature": " QuotaManager(File configFile)", "full_signature": "public  QuotaManager(File configFile)", "class_method_signature": "QuotaManager.QuotaManager(File configFile)", "testcase": false, "constructor": true}, {"identifier": "getConfig", "parameters": "()", "modifiers": "public", "return": "QuotaManagerConfig", "signature": "QuotaManagerConfig getConfig()", "full_signature": "public QuotaManagerConfig getConfig()", "class_method_signature": "QuotaManager.getConfig()", "testcase": false, "constructor": false}, {"identifier": "isEnabled", "parameters": "()", "modifiers": "protected", "return": "boolean", "signature": "boolean isEnabled()", "full_signature": "protected boolean isEnabled()", "class_method_signature": "QuotaManager.isEnabled()", "testcase": false, "constructor": false}, {"identifier": "setEnabled", "parameters": "(boolean enabled)", "modifiers": "protected", "return": "void", "signature": "void setEnabled(boolean enabled)", "full_signature": "protected void setEnabled(boolean enabled)", "class_method_signature": "QuotaManager.setEnabled(boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "loadConfiguration", "parameters": "(File configFile)", "modifiers": "public", "return": "void", "signature": "void loadConfiguration(File configFile)", "full_signature": "public void loadConfiguration(File configFile)", "class_method_signature": "QuotaManager.loadConfiguration(File configFile)", "testcase": false, "constructor": false}, {"identifier": "loadConfiguration", "parameters": "(QuotaManagerConfig config)", "modifiers": "public", "return": "void", "signature": "void loadConfiguration(QuotaManagerConfig config)", "full_signature": "public void loadConfiguration(QuotaManagerConfig config)", "class_method_signature": "QuotaManager.loadConfiguration(QuotaManagerConfig config)", "testcase": false, "constructor": false}, {"identifier": "createHandlers", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createHandlers()", "full_signature": "private void createHandlers()", "class_method_signature": "QuotaManager.createHandlers()", "testcase": false, "constructor": false}, {"identifier": "acquirePermit", "parameters": "(Map<String, Object> bindingVariables)", "modifiers": "public", "return": "UUID", "signature": "UUID acquirePermit(Map<String, Object> bindingVariables)", "full_signature": "public UUID acquirePermit(Map<String, Object> bindingVariables)", "class_method_signature": "QuotaManager.acquirePermit(Map<String, Object> bindingVariables)", "testcase": false, "constructor": false}, {"identifier": "acquirePermit", "parameters": "(UUID permitID, Map<String, Object> bindingVariables)", "modifiers": "public", "return": "UUID", "signature": "UUID acquirePermit(UUID permitID, Map<String, Object> bindingVariables)", "full_signature": "public UUID acquirePermit(UUID permitID, Map<String, Object> bindingVariables)", "class_method_signature": "QuotaManager.acquirePermit(UUID permitID, Map<String, Object> bindingVariables)", "testcase": false, "constructor": false}, {"identifier": "releasePermit", "parameters": "(UUID id)", "modifiers": "public", "return": "void", "signature": "void releasePermit(UUID id)", "full_signature": "public void releasePermit(UUID id)", "class_method_signature": "QuotaManager.releasePermit(UUID id)", "testcase": false, "constructor": false}, {"identifier": "releasePermits", "parameters": "(List<Permit> permits)", "modifiers": "private", "return": "void", "signature": "void releasePermits(List<Permit> permits)", "full_signature": "private void releasePermits(List<Permit> permits)", "class_method_signature": "QuotaManager.releasePermits(List<Permit> permits)", "testcase": false, "constructor": false}, {"identifier": "getStatus", "parameters": "()", "modifiers": "public", "return": "List<QuotaHandlerStatus>", "signature": "List<QuotaHandlerStatus> getStatus()", "full_signature": "public List<QuotaHandlerStatus> getStatus()", "class_method_signature": "QuotaManager.getStatus()", "testcase": false, "constructor": false}, {"identifier": "getPaceLockObject", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object getPaceLockObject()", "full_signature": "public Object getPaceLockObject()", "class_method_signature": "QuotaManager.getPaceLockObject()", "testcase": false, "constructor": false}], "file": "step-controller/step-controller-base-plugins/src/main/java/step/plugins/quotamanager/QuotaManager.java"}, "focal_method": {"identifier": "acquirePermit", "parameters": "(Map<String, Object> bindingVariables)", "modifiers": "public", "return": "UUID", "body": "public UUID acquirePermit(Map<String, Object> bindingVariables) throws Exception {\n\t\treturn acquirePermit(null, bindingVariables);\n\t}", "signature": "UUID acquirePermit(Map<String, Object> bindingVariables)", "full_signature": "public UUID acquirePermit(Map<String, Object> bindingVariables)", "class_method_signature": "QuotaManager.acquirePermit(Map<String, Object> bindingVariables)", "testcase": false, "constructor": false, "invocations": ["acquirePermit"]}, "repository": {"repo_id": 62342369, "url": "https://github.com/exense/step", "stars": 12, "created": "6/30/2016 9:08:29 PM +00:00", "updates": "2020-01-24T17:13:24+00:00", "fork": "False", "license": "licensed"}}