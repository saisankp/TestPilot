{"test_class": {"identifier": "EstEidLdapFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SERIAL_NUMBER_QUERY = \"1234567890\";", "modifier": "private static final", "type": "String", "declarator": "SERIAL_NUMBER_QUERY = \"1234567890\"", "var_name": "SERIAL_NUMBER_QUERY"}, {"original_string": "private static final String CN_QUERY = \"ASD QWERTY\";", "modifier": "private static final", "type": "String", "declarator": "CN_QUERY = \"ASD QWERTY\"", "var_name": "CN_QUERY"}], "file": "crypto-lib/src/test/java/ee/ria/DigiDoc/crypto/EstEidLdapFilterTest.java"}, "test_case": {"identifier": "shouldReturnCnFilterStringWhenNotSerialNumberQuery", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnCnFilterStringWhenNotSerialNumberQuery() {\n        String filterString = new EstEidLdapFilter(CN_QUERY).filterString();\n        assertThat(filterString, is(\"(cn= \" + CN_QUERY + \")\"));\n    }", "signature": "void shouldReturnCnFilterStringWhenNotSerialNumberQuery()", "full_signature": "@Test public void shouldReturnCnFilterStringWhenNotSerialNumberQuery()", "class_method_signature": "EstEidLdapFilterTest.shouldReturnCnFilterStringWhenNotSerialNumberQuery()", "testcase": true, "constructor": false, "invocations": ["filterString", "assertThat", "is"]}, "focal_class": {"identifier": "EstEidLdapFilter", "superclass": "extends LdapFilter", "interfaces": "", "fields": [], "methods": [{"identifier": "EstEidLdapFilter", "parameters": "(String query)", "modifiers": "", "return": "", "signature": " EstEidLdapFilter(String query)", "full_signature": "  EstEidLdapFilter(String query)", "class_method_signature": "EstEidLdapFilter.EstEidLdapFilter(String query)", "testcase": false, "constructor": true}, {"identifier": "filterString", "parameters": "()", "modifiers": "@Override", "return": "String", "signature": "String filterString()", "full_signature": "@Override String filterString()", "class_method_signature": "EstEidLdapFilter.filterString()", "testcase": false, "constructor": false}], "file": "crypto-lib/src/main/java/ee/ria/DigiDoc/crypto/EstEidLdapFilter.java"}, "focal_method": {"identifier": "filterString", "parameters": "()", "modifiers": "@Override", "return": "String", "body": "@Override\n    String filterString() {\n        if (isSerialNumberSearch()) {\n            return String.format(Locale.US, \"(serialNumber= PNOEE-%s)\", getQuery());\n        } else {\n            return String.format(Locale.US, \"(cn= %s)\", getQuery());\n        }\n    }", "signature": "String filterString()", "full_signature": "@Override String filterString()", "class_method_signature": "EstEidLdapFilter.filterString()", "testcase": false, "constructor": false, "invocations": ["isSerialNumberSearch", "format", "getQuery", "format", "getQuery"]}, "repository": {"repo_id": 74903768, "url": "https://github.com/open-eid/MOPP-Android", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 9, "size": 526035, "license": "licensed"}}