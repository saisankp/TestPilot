{"test_class": {"identifier": "TopologyBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "streams/src/test/java/org/apache/kafka/streams/processor/TopologyBuilderTest.java"}, "test_case": {"identifier": "testAddStateStoreWithDuplicates", "parameters": "()", "modifiers": "@Test(expected = TopologyBuilderException.class) public", "return": "void", "body": "@Test(expected = TopologyBuilderException.class)\n    public void testAddStateStoreWithDuplicates() {\n        final TopologyBuilder builder = new TopologyBuilder();\n\n        builder.addStateStore(new MockStateStoreSupplier(\"store\", false));\n        builder.addStateStore(new MockStateStoreSupplier(\"store\", false));\n    }", "signature": "void testAddStateStoreWithDuplicates()", "full_signature": "@Test(expected = TopologyBuilderException.class) public void testAddStateStoreWithDuplicates()", "class_method_signature": "TopologyBuilderTest.testAddStateStoreWithDuplicates()", "testcase": true, "constructor": false, "invocations": ["addStateStore", "addStateStore"]}, "focal_class": {"identifier": "TopologyBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final LinkedHashMap<String, NodeFactory> nodeFactories = new LinkedHashMap<>();", "modifier": "private final", "type": "LinkedHashMap<String, NodeFactory>", "declarator": "nodeFactories = new LinkedHashMap<>()", "var_name": "nodeFactories"}, {"original_string": "private final Map<String, StateStoreFactory> stateFactories = new HashMap<>();", "modifier": "private final", "type": "Map<String, StateStoreFactory>", "declarator": "stateFactories = new HashMap<>()", "var_name": "stateFactories"}, {"original_string": "private final Set<String> sourceTopicNames = new HashSet<>();", "modifier": "private final", "type": "Set<String>", "declarator": "sourceTopicNames = new HashSet<>()", "var_name": "sourceTopicNames"}, {"original_string": "private final Set<String> internalTopicNames = new HashSet<>();", "modifier": "private final", "type": "Set<String>", "declarator": "internalTopicNames = new HashSet<>()", "var_name": "internalTopicNames"}, {"original_string": "private final QuickUnion<String> nodeGrouper = new QuickUnion<>();", "modifier": "private final", "type": "QuickUnion<String>", "declarator": "nodeGrouper = new QuickUnion<>()", "var_name": "nodeGrouper"}, {"original_string": "private final List<Set<String>> copartitionSourceGroups = new ArrayList<>();", "modifier": "private final", "type": "List<Set<String>>", "declarator": "copartitionSourceGroups = new ArrayList<>()", "var_name": "copartitionSourceGroups"}, {"original_string": "private final HashMap<String, String[]> nodeToSourceTopics = new HashMap<>();", "modifier": "private final", "type": "HashMap<String, String[]>", "declarator": "nodeToSourceTopics = new HashMap<>()", "var_name": "nodeToSourceTopics"}, {"original_string": "private final HashMap<String, String> nodeToSinkTopic = new HashMap<>();", "modifier": "private final", "type": "HashMap<String, String>", "declarator": "nodeToSinkTopic = new HashMap<>()", "var_name": "nodeToSinkTopic"}, {"original_string": "private Map<Integer, Set<String>> nodeGroups = null;", "modifier": "private", "type": "Map<Integer, Set<String>>", "declarator": "nodeGroups = null", "var_name": "nodeGroups"}], "methods": [{"identifier": "TopologyBuilder", "parameters": "()", "modifiers": "public", "return": "", "signature": " TopologyBuilder()", "full_signature": "public  TopologyBuilder()", "class_method_signature": "TopologyBuilder.TopologyBuilder()", "testcase": false, "constructor": true}, {"identifier": "addSource", "parameters": "(String name, String... topics)", "modifiers": "public synchronized final", "return": "TopologyBuilder", "signature": "TopologyBuilder addSource(String name, String... topics)", "full_signature": "public synchronized final TopologyBuilder addSource(String name, String... topics)", "class_method_signature": "TopologyBuilder.addSource(String name, String... topics)", "testcase": false, "constructor": false}, {"identifier": "addSource", "parameters": "(String name, Deserializer keyDeserializer, Deserializer valDeserializer, String... topics)", "modifiers": "public synchronized final", "return": "TopologyBuilder", "signature": "TopologyBuilder addSource(String name, Deserializer keyDeserializer, Deserializer valDeserializer, String... topics)", "full_signature": "public synchronized final TopologyBuilder addSource(String name, Deserializer keyDeserializer, Deserializer valDeserializer, String... topics)", "class_method_signature": "TopologyBuilder.addSource(String name, Deserializer keyDeserializer, Deserializer valDeserializer, String... topics)", "testcase": false, "constructor": false}, {"identifier": "addSink", "parameters": "(String name, String topic, String... parentNames)", "modifiers": "public synchronized final", "return": "TopologyBuilder", "signature": "TopologyBuilder addSink(String name, String topic, String... parentNames)", "full_signature": "public synchronized final TopologyBuilder addSink(String name, String topic, String... parentNames)", "class_method_signature": "TopologyBuilder.addSink(String name, String topic, String... parentNames)", "testcase": false, "constructor": false}, {"identifier": "addSink", "parameters": "(String name, String topic, StreamPartitioner partitioner, String... parentNames)", "modifiers": "public synchronized final", "return": "TopologyBuilder", "signature": "TopologyBuilder addSink(String name, String topic, StreamPartitioner partitioner, String... parentNames)", "full_signature": "public synchronized final TopologyBuilder addSink(String name, String topic, StreamPartitioner partitioner, String... parentNames)", "class_method_signature": "TopologyBuilder.addSink(String name, String topic, StreamPartitioner partitioner, String... parentNames)", "testcase": false, "constructor": false}, {"identifier": "addSink", "parameters": "(String name, String topic, Serializer keySerializer, Serializer valSerializer, String... parentNames)", "modifiers": "public synchronized final", "return": "TopologyBuilder", "signature": "TopologyBuilder addSink(String name, String topic, Serializer keySerializer, Serializer valSerializer, String... parentNames)", "full_signature": "public synchronized final TopologyBuilder addSink(String name, String topic, Serializer keySerializer, Serializer valSerializer, String... parentNames)", "class_method_signature": "TopologyBuilder.addSink(String name, String topic, Serializer keySerializer, Serializer valSerializer, String... parentNames)", "testcase": false, "constructor": false}, {"identifier": "addSink", "parameters": "(String name, String topic, Serializer<K> keySerializer, Serializer<V> valSerializer, StreamPartitioner<K, V> partitioner, String... parentNames)", "modifiers": "public synchronized final", "return": "TopologyBuilder", "signature": "TopologyBuilder addSink(String name, String topic, Serializer<K> keySerializer, Serializer<V> valSerializer, StreamPartitioner<K, V> partitioner, String... parentNames)", "full_signature": "public synchronized final TopologyBuilder addSink(String name, String topic, Serializer<K> keySerializer, Serializer<V> valSerializer, StreamPartitioner<K, V> partitioner, String... parentNames)", "class_method_signature": "TopologyBuilder.addSink(String name, String topic, Serializer<K> keySerializer, Serializer<V> valSerializer, StreamPartitioner<K, V> partitioner, String... parentNames)", "testcase": false, "constructor": false}, {"identifier": "addProcessor", "parameters": "(String name, ProcessorSupplier supplier, String... parentNames)", "modifiers": "public synchronized final", "return": "TopologyBuilder", "signature": "TopologyBuilder addProcessor(String name, ProcessorSupplier supplier, String... parentNames)", "full_signature": "public synchronized final TopologyBuilder addProcessor(String name, ProcessorSupplier supplier, String... parentNames)", "class_method_signature": "TopologyBuilder.addProcessor(String name, ProcessorSupplier supplier, String... parentNames)", "testcase": false, "constructor": false}, {"identifier": "addStateStore", "parameters": "(StateStoreSupplier supplier, boolean isInternal, String... processorNames)", "modifiers": "public synchronized final", "return": "TopologyBuilder", "signature": "TopologyBuilder addStateStore(StateStoreSupplier supplier, boolean isInternal, String... processorNames)", "full_signature": "public synchronized final TopologyBuilder addStateStore(StateStoreSupplier supplier, boolean isInternal, String... processorNames)", "class_method_signature": "TopologyBuilder.addStateStore(StateStoreSupplier supplier, boolean isInternal, String... processorNames)", "testcase": false, "constructor": false}, {"identifier": "addStateStore", "parameters": "(StateStoreSupplier supplier, String... processorNames)", "modifiers": "public synchronized final", "return": "TopologyBuilder", "signature": "TopologyBuilder addStateStore(StateStoreSupplier supplier, String... processorNames)", "full_signature": "public synchronized final TopologyBuilder addStateStore(StateStoreSupplier supplier, String... processorNames)", "class_method_signature": "TopologyBuilder.addStateStore(StateStoreSupplier supplier, String... processorNames)", "testcase": false, "constructor": false}, {"identifier": "connectProcessorAndStateStores", "parameters": "(String processorName, String... stateStoreNames)", "modifiers": "public synchronized final", "return": "TopologyBuilder", "signature": "TopologyBuilder connectProcessorAndStateStores(String processorName, String... stateStoreNames)", "full_signature": "public synchronized final TopologyBuilder connectProcessorAndStateStores(String processorName, String... stateStoreNames)", "class_method_signature": "TopologyBuilder.connectProcessorAndStateStores(String processorName, String... stateStoreNames)", "testcase": false, "constructor": false}, {"identifier": "connectProcessors", "parameters": "(String... processorNames)", "modifiers": "public synchronized final", "return": "TopologyBuilder", "signature": "TopologyBuilder connectProcessors(String... processorNames)", "full_signature": "public synchronized final TopologyBuilder connectProcessors(String... processorNames)", "class_method_signature": "TopologyBuilder.connectProcessors(String... processorNames)", "testcase": false, "constructor": false}, {"identifier": "addInternalTopic", "parameters": "(String topicName)", "modifiers": "public synchronized final", "return": "TopologyBuilder", "signature": "TopologyBuilder addInternalTopic(String topicName)", "full_signature": "public synchronized final TopologyBuilder addInternalTopic(String topicName)", "class_method_signature": "TopologyBuilder.addInternalTopic(String topicName)", "testcase": false, "constructor": false}, {"identifier": "connectProcessorAndStateStore", "parameters": "(String processorName, String stateStoreName)", "modifiers": "private", "return": "void", "signature": "void connectProcessorAndStateStore(String processorName, String stateStoreName)", "full_signature": "private void connectProcessorAndStateStore(String processorName, String stateStoreName)", "class_method_signature": "TopologyBuilder.connectProcessorAndStateStore(String processorName, String stateStoreName)", "testcase": false, "constructor": false}, {"identifier": "topicGroups", "parameters": "(String applicationId)", "modifiers": "public synchronized", "return": "Map<Integer, TopicsInfo>", "signature": "Map<Integer, TopicsInfo> topicGroups(String applicationId)", "full_signature": "public synchronized Map<Integer, TopicsInfo> topicGroups(String applicationId)", "class_method_signature": "TopologyBuilder.topicGroups(String applicationId)", "testcase": false, "constructor": false}, {"identifier": "nodeGroups", "parameters": "()", "modifiers": "public synchronized", "return": "Map<Integer, Set<String>>", "signature": "Map<Integer, Set<String>> nodeGroups()", "full_signature": "public synchronized Map<Integer, Set<String>> nodeGroups()", "class_method_signature": "TopologyBuilder.nodeGroups()", "testcase": false, "constructor": false}, {"identifier": "makeNodeGroups", "parameters": "()", "modifiers": "private", "return": "Map<Integer, Set<String>>", "signature": "Map<Integer, Set<String>> makeNodeGroups()", "full_signature": "private Map<Integer, Set<String>> makeNodeGroups()", "class_method_signature": "TopologyBuilder.makeNodeGroups()", "testcase": false, "constructor": false}, {"identifier": "copartitionSources", "parameters": "(Collection<String> sourceNodes)", "modifiers": "public synchronized final", "return": "TopologyBuilder", "signature": "TopologyBuilder copartitionSources(Collection<String> sourceNodes)", "full_signature": "public synchronized final TopologyBuilder copartitionSources(Collection<String> sourceNodes)", "class_method_signature": "TopologyBuilder.copartitionSources(Collection<String> sourceNodes)", "testcase": false, "constructor": false}, {"identifier": "copartitionGroups", "parameters": "()", "modifiers": "public synchronized", "return": "Collection<Set<String>>", "signature": "Collection<Set<String>> copartitionGroups()", "full_signature": "public synchronized Collection<Set<String>> copartitionGroups()", "class_method_signature": "TopologyBuilder.copartitionGroups()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(String applicationId, Integer topicGroupId)", "modifiers": "public synchronized", "return": "ProcessorTopology", "signature": "ProcessorTopology build(String applicationId, Integer topicGroupId)", "full_signature": "public synchronized ProcessorTopology build(String applicationId, Integer topicGroupId)", "class_method_signature": "TopologyBuilder.build(String applicationId, Integer topicGroupId)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(String applicationId, Set<String> nodeGroup)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "ProcessorTopology", "signature": "ProcessorTopology build(String applicationId, Set<String> nodeGroup)", "full_signature": "@SuppressWarnings(\"unchecked\") private ProcessorTopology build(String applicationId, Set<String> nodeGroup)", "class_method_signature": "TopologyBuilder.build(String applicationId, Set<String> nodeGroup)", "testcase": false, "constructor": false}, {"identifier": "sourceTopics", "parameters": "(String applicationId)", "modifiers": "public synchronized", "return": "Set<String>", "signature": "Set<String> sourceTopics(String applicationId)", "full_signature": "public synchronized Set<String> sourceTopics(String applicationId)", "class_method_signature": "TopologyBuilder.sourceTopics(String applicationId)", "testcase": false, "constructor": false}], "file": "streams/src/main/java/org/apache/kafka/streams/processor/TopologyBuilder.java"}, "focal_method": {"identifier": "addStateStore", "parameters": "(StateStoreSupplier supplier, boolean isInternal, String... processorNames)", "modifiers": "public synchronized final", "return": "TopologyBuilder", "body": "public synchronized final TopologyBuilder addStateStore(StateStoreSupplier supplier, boolean isInternal, String... processorNames) {\n        if (stateFactories.containsKey(supplier.name())) {\n            throw new TopologyBuilderException(\"StateStore \" + supplier.name() + \" is already added.\");\n        }\n\n        stateFactories.put(supplier.name(), new StateStoreFactory(isInternal, supplier));\n\n        if (processorNames != null) {\n            for (String processorName : processorNames) {\n                connectProcessorAndStateStore(processorName, supplier.name());\n            }\n        }\n\n        return this;\n    }", "signature": "TopologyBuilder addStateStore(StateStoreSupplier supplier, boolean isInternal, String... processorNames)", "full_signature": "public synchronized final TopologyBuilder addStateStore(StateStoreSupplier supplier, boolean isInternal, String... processorNames)", "class_method_signature": "TopologyBuilder.addStateStore(StateStoreSupplier supplier, boolean isInternal, String... processorNames)", "testcase": false, "constructor": false, "invocations": ["containsKey", "name", "name", "put", "name", "connectProcessorAndStateStore", "name"]}, "repository": {"repo_id": 135978112, "url": "https://github.com/anurnomeru/kafka-0.10.0.1-source-reading", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 2953, "license": "licensed"}}