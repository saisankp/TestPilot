{"test_class": {"identifier": "PriceCalculatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "harry-potter/20131009-babylon/src/test/java/PriceCalculatorTest.java"}, "test_case": {"identifier": "priceForOneBook_isEightEuros", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void priceForOneBook_isEightEuros() {\n        Map<Book, Basket.Amount> books = new HashMap<Book, Basket.Amount>();\n        books.put(Book.FIRST, new Basket.Amount(1));\n\n        PriceCalculator calculator = new PriceCalculator(books);\n\n        assertThat(calculator.total()).isEqualTo(Book.defaultPrice());\n    }", "signature": "void priceForOneBook_isEightEuros()", "full_signature": "@Test public void priceForOneBook_isEightEuros()", "class_method_signature": "PriceCalculatorTest.priceForOneBook_isEightEuros()", "testcase": true, "constructor": false, "invocations": ["put", "isEqualTo", "assertThat", "total", "defaultPrice"]}, "focal_class": {"identifier": "PriceCalculator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Map<Book, Basket.Amount> basket;", "modifier": "private final", "type": "Map<Book, Basket.Amount>", "declarator": "basket", "var_name": "basket"}], "methods": [{"identifier": "PriceCalculator", "parameters": "(Map<Book, Basket.Amount> bookMap)", "modifiers": "public", "return": "", "signature": " PriceCalculator(Map<Book, Basket.Amount> bookMap)", "full_signature": "public  PriceCalculator(Map<Book, Basket.Amount> bookMap)", "class_method_signature": "PriceCalculator.PriceCalculator(Map<Book, Basket.Amount> bookMap)", "testcase": false, "constructor": true}, {"identifier": "total", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double total()", "full_signature": "public double total()", "class_method_signature": "PriceCalculator.total()", "testcase": false, "constructor": false}], "file": "harry-potter/20131009-babylon/src/main/java/PriceCalculator.java"}, "focal_method": {"identifier": "total", "parameters": "()", "modifiers": "public", "return": "double", "body": "public double total() {\n        double tot = 0;\n\n        for (Basket.Amount amount : basket.values()) {\n            if (amount.total > 1) {\n                tot += Book.defaultPrice() * amount.total;\n            } else if (basket.size() != 1) {\n                tot += .95 * amount.total * Book.defaultPrice();\n            } else if (basket.size() != 1) {\n                tot += .95 * amount.total * Book.defaultPrice();\n            } else {\n                tot = Book.defaultPrice();\n            }\n        }\n\n        return tot;\n    }", "signature": "double total()", "full_signature": "public double total()", "class_method_signature": "PriceCalculator.total()", "testcase": false, "constructor": false, "invocations": ["values", "defaultPrice", "size", "defaultPrice", "size", "defaultPrice", "defaultPrice"]}, "repository": {"repo_id": 6509909, "url": "https://github.com/novoda/dojos", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 72, "size": 12987, "license": "licensed"}}