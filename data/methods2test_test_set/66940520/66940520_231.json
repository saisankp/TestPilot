{"test_class": {"identifier": "HibernateSequentialNumberCounterStoreTest", "superclass": "extends IntegrationTestBase", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private DummyService dummyService;", "modifier": "@Autowired\n    private", "type": "DummyService", "declarator": "dummyService", "var_name": "dummyService"}], "file": "dhis-2/dhis-services/dhis-service-core/src/test/java/org/hisp/dhis/reservedvalue/hibernate/HibernateSequentialNumberCounterStoreTest.java"}, "test_case": {"identifier": "getNextValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getNextValues()\n    {\n\n        List<Integer> result = dummyService.getNextValues( \"ABC\", \"ABC-#\", 3 );\n\n        assertEquals( 3, result.size() );\n        assertTrue( result.contains( 1 ) );\n        assertTrue( result.contains( 2 ) );\n        assertTrue( result.contains( 3 ) );\n\n        result = dummyService.getNextValues( \"ABC\", \"ABC-#\", 50 );\n\n        assertEquals( 50, result.size() );\n        assertTrue( result.contains( 4 ) );\n        assertTrue( result.contains( 5 ) );\n        assertTrue( result.contains( 52 ) );\n        assertTrue( result.contains( 53 ) );\n\n    }", "signature": "void getNextValues()", "full_signature": "@Test public void getNextValues()", "class_method_signature": "HibernateSequentialNumberCounterStoreTest.getNextValues()", "testcase": true, "constructor": false, "invocations": ["getNextValues", "assertEquals", "size", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "getNextValues", "assertEquals", "size", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "HibernateSequentialNumberCounterStore", "superclass": "", "interfaces": "implements SequentialNumberCounterStore", "fields": [{"original_string": "protected SessionFactory sessionFactory;", "modifier": "protected", "type": "SessionFactory", "declarator": "sessionFactory", "var_name": "sessionFactory"}], "methods": [{"identifier": "HibernateSequentialNumberCounterStore", "parameters": "( SessionFactory sessionFactory )", "modifiers": "public", "return": "", "signature": " HibernateSequentialNumberCounterStore( SessionFactory sessionFactory )", "full_signature": "public  HibernateSequentialNumberCounterStore( SessionFactory sessionFactory )", "class_method_signature": "HibernateSequentialNumberCounterStore.HibernateSequentialNumberCounterStore( SessionFactory sessionFactory )", "testcase": false, "constructor": true}, {"identifier": "getNextValues", "parameters": "( String uid, String key, int length )", "modifiers": "@Override public", "return": "List<Integer>", "signature": "List<Integer> getNextValues( String uid, String key, int length )", "full_signature": "@Override public List<Integer> getNextValues( String uid, String key, int length )", "class_method_signature": "HibernateSequentialNumberCounterStore.getNextValues( String uid, String key, int length )", "testcase": false, "constructor": false}, {"identifier": "deleteCounter", "parameters": "( String uid )", "modifiers": "@Override public", "return": "void", "signature": "void deleteCounter( String uid )", "full_signature": "@Override public void deleteCounter( String uid )", "class_method_signature": "HibernateSequentialNumberCounterStore.deleteCounter( String uid )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/reservedvalue/hibernate/HibernateSequentialNumberCounterStore.java"}, "focal_method": {"identifier": "getNextValues", "parameters": "( String uid, String key, int length )", "modifiers": "@Override public", "return": "List<Integer>", "body": "@Override\n    public List<Integer> getNextValues( String uid, String key, int length )\n    {\n        int count = (int) sessionFactory.getCurrentSession()\n            .createNativeQuery( \"SELECT * FROM incrementSequentialCounter(?0, ?1, ?2)\" )\n            .setParameter( 0, uid )\n            .setParameter( 1, key )\n            .setParameter( 2, length )\n            .uniqueResult();\n\n        return IntStream.range( count - length, length + (count - length) ).boxed().collect( Collectors.toList() );\n    }", "signature": "List<Integer> getNextValues( String uid, String key, int length )", "full_signature": "@Override public List<Integer> getNextValues( String uid, String key, int length )", "class_method_signature": "HibernateSequentialNumberCounterStore.getNextValues( String uid, String key, int length )", "testcase": false, "constructor": false, "invocations": ["uniqueResult", "setParameter", "setParameter", "setParameter", "createNativeQuery", "getCurrentSession", "collect", "boxed", "range", "toList"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}