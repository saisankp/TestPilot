{"test_class": {"identifier": "DateUtils2Test", "superclass": "", "interfaces": "", "fields": [], "file": "util/src/test/java/com/duowan/meteor/util/DateUtils2Test.java"}, "test_case": {"identifier": "test3", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test3() throws Exception {\n\t\tlong result = expireAtMin(30);\n\t\tlong time = System.currentTimeMillis() + result * 1000;\n\t\tDate date = new Date(time);\n\t\tSystem.out.println(DateFormatUtils.format(date, \"yyyy-MM-dd HH:mm:ss\"));\n\t}", "signature": "void test3()", "full_signature": "@Test public void test3()", "class_method_signature": "DateUtils2Test.test3()", "testcase": true, "constructor": false, "invocations": ["expireAtMin", "currentTimeMillis", "println", "format"]}, "focal_class": {"identifier": "DateUtils2", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "expireAtDay", "parameters": "(int addDay, int atHour, int atMin)", "modifiers": "public", "return": "long", "signature": "long expireAtDay(int addDay, int atHour, int atMin)", "full_signature": "public long expireAtDay(int addDay, int atHour, int atMin)", "class_method_signature": "DateUtils2.expireAtDay(int addDay, int atHour, int atMin)", "testcase": false, "constructor": false}, {"identifier": "expireAtHour", "parameters": "(int addHour, int atMin)", "modifiers": "public", "return": "long", "signature": "long expireAtHour(int addHour, int atMin)", "full_signature": "public long expireAtHour(int addHour, int atMin)", "class_method_signature": "DateUtils2.expireAtHour(int addHour, int atMin)", "testcase": false, "constructor": false}, {"identifier": "expireAtMin", "parameters": "(int addMin)", "modifiers": "public", "return": "long", "signature": "long expireAtMin(int addMin)", "full_signature": "public long expireAtMin(int addMin)", "class_method_signature": "DateUtils2.expireAtMin(int addMin)", "testcase": false, "constructor": false}, {"identifier": "expireAtWeek", "parameters": "(int addWeek, int atWeekDay, int atHour, int atMin)", "modifiers": "public", "return": "long", "signature": "long expireAtWeek(int addWeek, int atWeekDay, int atHour, int atMin)", "full_signature": "public long expireAtWeek(int addWeek, int atWeekDay, int atHour, int atMin)", "class_method_signature": "DateUtils2.expireAtWeek(int addWeek, int atWeekDay, int atHour, int atMin)", "testcase": false, "constructor": false}, {"identifier": "expireAtMonth", "parameters": "(int addMonth, int atDay, int atHour, int atMin)", "modifiers": "public", "return": "long", "signature": "long expireAtMonth(int addMonth, int atDay, int atHour, int atMin)", "full_signature": "public long expireAtMonth(int addMonth, int atDay, int atHour, int atMin)", "class_method_signature": "DateUtils2.expireAtMonth(int addMonth, int atDay, int atHour, int atMin)", "testcase": false, "constructor": false}], "file": "util/src/main/java/com/duowan/meteor/util/DateUtils2.java"}, "focal_method": {"identifier": "expireAtMin", "parameters": "(int addMin)", "modifiers": "public", "return": "long", "body": "public long expireAtMin(int addMin) {\n\t\tlong curTime = System.currentTimeMillis();\n\t\tCalendar calendar = Calendar.getInstance();\n\t\tcalendar.add(Calendar.MINUTE, addMin);\n\t\tlong result = (calendar.getTimeInMillis() - curTime) / 1000;\n\t\treturn result;\n\t}", "signature": "long expireAtMin(int addMin)", "full_signature": "public long expireAtMin(int addMin)", "class_method_signature": "DateUtils2.expireAtMin(int addMin)", "testcase": false, "constructor": false, "invocations": ["currentTimeMillis", "getInstance", "add", "getTimeInMillis"]}, "repository": {"repo_id": 125830136, "url": "https://github.com/DonnieChan/meteor", "language": "Java", "is_fork": false, "fork_count": 20, "stargazer_count": 8, "size": 2481, "license": "licensed"}}