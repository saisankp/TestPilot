{"test_class": {"identifier": "ClassLoadingGaugeSetTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ClassLoadingMXBean cl = mock(ClassLoadingMXBean.class);", "modifier": "private final", "type": "ClassLoadingMXBean", "declarator": "cl = mock(ClassLoadingMXBean.class)", "var_name": "cl"}, {"original_string": "private final ClassLoadingGaugeSet gauges = new ClassLoadingGaugeSet(cl);", "modifier": "private final", "type": "ClassLoadingGaugeSet", "declarator": "gauges = new ClassLoadingGaugeSet(cl)", "var_name": "gauges"}], "file": "metrics-jvm/src/test/java/com/codahale/metrics/jvm/ClassLoadingGaugeSetTest.java"}, "test_case": {"identifier": "unLoadedGauge", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void unLoadedGauge() {\n        final Gauge gauge = (Gauge) gauges.getMetrics().get(\"unloaded\");\n        assertThat(gauge.getValue()).isEqualTo(1L);\n    }", "signature": "void unLoadedGauge()", "full_signature": "@Test public void unLoadedGauge()", "class_method_signature": "ClassLoadingGaugeSetTest.unLoadedGauge()", "testcase": true, "constructor": false, "invocations": ["get", "getMetrics", "isEqualTo", "assertThat", "getValue"]}, "focal_class": {"identifier": "ClassLoadingGaugeSet", "superclass": "", "interfaces": "implements MetricSet", "fields": [{"original_string": "private final ClassLoadingMXBean mxBean;", "modifier": "private final", "type": "ClassLoadingMXBean", "declarator": "mxBean", "var_name": "mxBean"}], "methods": [{"identifier": "ClassLoadingGaugeSet", "parameters": "()", "modifiers": "public", "return": "", "signature": " ClassLoadingGaugeSet()", "full_signature": "public  ClassLoadingGaugeSet()", "class_method_signature": "ClassLoadingGaugeSet.ClassLoadingGaugeSet()", "testcase": false, "constructor": true}, {"identifier": "ClassLoadingGaugeSet", "parameters": "(ClassLoadingMXBean mxBean)", "modifiers": "public", "return": "", "signature": " ClassLoadingGaugeSet(ClassLoadingMXBean mxBean)", "full_signature": "public  ClassLoadingGaugeSet(ClassLoadingMXBean mxBean)", "class_method_signature": "ClassLoadingGaugeSet.ClassLoadingGaugeSet(ClassLoadingMXBean mxBean)", "testcase": false, "constructor": true}, {"identifier": "getMetrics", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Metric>", "signature": "Map<String, Metric> getMetrics()", "full_signature": "@Override public Map<String, Metric> getMetrics()", "class_method_signature": "ClassLoadingGaugeSet.getMetrics()", "testcase": false, "constructor": false}], "file": "metrics-jvm/src/main/java/com/codahale/metrics/jvm/ClassLoadingGaugeSet.java"}, "focal_method": {"identifier": "getMetrics", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Metric>", "body": "@Override\n    public Map<String, Metric> getMetrics() {\n        final Map<String, Metric> gauges = new HashMap<>();\n        gauges.put(\"loaded\", (Gauge<Long>) mxBean::getTotalLoadedClassCount);\n        gauges.put(\"unloaded\", (Gauge<Long>) mxBean::getUnloadedClassCount);\n\n        return gauges;\n    }", "signature": "Map<String, Metric> getMetrics()", "full_signature": "@Override public Map<String, Metric> getMetrics()", "class_method_signature": "ClassLoadingGaugeSet.getMetrics()", "testcase": false, "constructor": false, "invocations": ["put", "put"]}, "repository": {"repo_id": 537800, "url": "https://github.com/dropwizard/metrics", "stars": 6879, "created": "2/26/2010 7:44:42 PM +00:00", "updates": "2020-01-26T22:33:14+00:00", "fork": "False", "license": "licensed"}}