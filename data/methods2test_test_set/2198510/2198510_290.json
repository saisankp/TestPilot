{"test_class": {"identifier": "TestAbstractPollableSource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AbstractPollableSource source;", "modifier": "private", "type": "AbstractPollableSource", "declarator": "source", "var_name": "source"}], "file": "flume-ng-core/src/test/java/org/apache/flume/source/TestAbstractPollableSource.java"}, "test_case": {"identifier": "testNotStarted", "parameters": "()", "modifiers": "@Test(expected = EventDeliveryException.class) public", "return": "void", "body": "@Test(expected = EventDeliveryException.class)\n  public void testNotStarted() throws Exception {\n    source.process();\n  }", "signature": "void testNotStarted()", "full_signature": "@Test(expected = EventDeliveryException.class) public void testNotStarted()", "class_method_signature": "TestAbstractPollableSource.testNotStarted()", "testcase": true, "constructor": false, "invocations": ["process"]}, "focal_class": {"identifier": "AbstractPollableSource", "superclass": "extends BasicSourceSemantics", "interfaces": "implements PollableSource", "fields": [{"original_string": "long backoffSleepIncrement = PollableSourceConstants.DEFAULT_BACKOFF_SLEEP_INCREMENT;", "modifier": "", "type": "long", "declarator": "backoffSleepIncrement = PollableSourceConstants.DEFAULT_BACKOFF_SLEEP_INCREMENT", "var_name": "backoffSleepIncrement"}, {"original_string": "long maxBackoffSleep = PollableSourceConstants.DEFAULT_MAX_BACKOFF_SLEEP;", "modifier": "", "type": "long", "declarator": "maxBackoffSleep = PollableSourceConstants.DEFAULT_MAX_BACKOFF_SLEEP", "var_name": "maxBackoffSleep"}], "methods": [{"identifier": "AbstractPollableSource", "parameters": "()", "modifiers": "public", "return": "", "signature": " AbstractPollableSource()", "full_signature": "public  AbstractPollableSource()", "class_method_signature": "AbstractPollableSource.AbstractPollableSource()", "testcase": false, "constructor": true}, {"identifier": "process", "parameters": "()", "modifiers": "public", "return": "Status", "signature": "Status process()", "full_signature": "public Status process()", "class_method_signature": "AbstractPollableSource.process()", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(Context context)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void configure(Context context)", "full_signature": "@Override public synchronized void configure(Context context)", "class_method_signature": "AbstractPollableSource.configure(Context context)", "testcase": false, "constructor": false}, {"identifier": "getBackOffSleepIncrement", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getBackOffSleepIncrement()", "full_signature": "public long getBackOffSleepIncrement()", "class_method_signature": "AbstractPollableSource.getBackOffSleepIncrement()", "testcase": false, "constructor": false}, {"identifier": "getMaxBackOffSleepInterval", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMaxBackOffSleepInterval()", "full_signature": "public long getMaxBackOffSleepInterval()", "class_method_signature": "AbstractPollableSource.getMaxBackOffSleepInterval()", "testcase": false, "constructor": false}, {"identifier": "doProcess", "parameters": "()", "modifiers": "protected abstract", "return": "Status", "signature": "Status doProcess()", "full_signature": "protected abstract Status doProcess()", "class_method_signature": "AbstractPollableSource.doProcess()", "testcase": false, "constructor": false}], "file": "flume-ng-core/src/main/java/org/apache/flume/source/AbstractPollableSource.java"}, "focal_method": {"identifier": "process", "parameters": "()", "modifiers": "public", "return": "Status", "body": "public Status process() throws EventDeliveryException {\n    Exception exception = getStartException();\n    if (exception != null) {\n      throw new FlumeException(\"Source had error configuring or starting\",\n          exception);\n    }\n    if (!isStarted()) {\n      throw new EventDeliveryException(\"Source is not started.  It is in '\" +\n                                       getLifecycleState() + \"' state\");\n    }\n    return doProcess();\n  }", "signature": "Status process()", "full_signature": "public Status process()", "class_method_signature": "AbstractPollableSource.process()", "testcase": false, "constructor": false, "invocations": ["getStartException", "isStarted", "getLifecycleState", "doProcess"]}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}