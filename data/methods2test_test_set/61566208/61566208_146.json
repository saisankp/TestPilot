{"test_class": {"identifier": "UpgradeRestServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private UpgradeRestService service;", "modifier": "private", "type": "UpgradeRestService", "declarator": "service", "var_name": "service"}, {"original_string": "private String message = null;", "modifier": "private", "type": "String", "declarator": "message = null", "var_name": "message"}, {"original_string": "private OobUpgradeSpec upgradeSpec;", "modifier": "private", "type": "OobUpgradeSpec", "declarator": "upgradeSpec", "var_name": "upgradeSpec"}, {"original_string": "private RollbackSpec rollbackSpec;", "modifier": "private", "type": "RollbackSpec", "declarator": "rollbackSpec", "var_name": "rollbackSpec"}], "file": "modules/hms-core/src/test/java/com/vmware/vrack/hms/rest/services/UpgradeRestServiceTest.java"}, "test_case": {"identifier": "testRestartProxyOnSuccessfulExecOfScript", "parameters": "()", "modifiers": "@SuppressWarnings( \"unchecked\" ) @Test public", "return": "void", "body": "@SuppressWarnings( \"unchecked\" )\n    @Test\n    public void testRestartProxyOnSuccessfulExecOfScript()\n        throws HMSRestException\n    {\n\n        PowerMockito.mockStatic( ProcessUtil.class );\n        when( ProcessUtil.executeCommand( ( any( List.class ) ) ) ).thenReturn( 0 );\n\n        Response response = service.restartProxy( \"100\" );\n        assertNotNull( response );\n        assertTrue( response.getStatus() == Status.ACCEPTED.getStatusCode() );\n\n    }", "signature": "void testRestartProxyOnSuccessfulExecOfScript()", "full_signature": "@SuppressWarnings( \"unchecked\" ) @Test public void testRestartProxyOnSuccessfulExecOfScript()", "class_method_signature": "UpgradeRestServiceTest.testRestartProxyOnSuccessfulExecOfScript()", "testcase": true, "constructor": false, "invocations": ["mockStatic", "thenReturn", "when", "executeCommand", "any", "restartProxy", "assertNotNull", "assertTrue", "getStatus", "getStatusCode"]}, "focal_class": {"identifier": "UpgradeRestService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger( getClass() );", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger( getClass() )", "var_name": "logger"}, {"original_string": "private static final String RESTART_PROXY_SCRIPT = \"hms_oob_restart_lighttpd_wrapper.sh\";", "modifier": "private static final", "type": "String", "declarator": "RESTART_PROXY_SCRIPT = \"hms_oob_restart_lighttpd_wrapper.sh\"", "var_name": "RESTART_PROXY_SCRIPT"}], "methods": [{"identifier": "upgrade", "parameters": "( OobUpgradeSpec upgradeSpec )", "modifiers": "@POST public", "return": "Response", "signature": "Response upgrade( OobUpgradeSpec upgradeSpec )", "full_signature": "@POST public Response upgrade( OobUpgradeSpec upgradeSpec )", "class_method_signature": "UpgradeRestService.upgrade( OobUpgradeSpec upgradeSpec )", "testcase": false, "constructor": false}, {"identifier": "rollback", "parameters": "( RollbackSpec rollbackSpec )", "modifiers": "@POST @Path( \"/rollback\" ) public", "return": "Response", "signature": "Response rollback( RollbackSpec rollbackSpec )", "full_signature": "@POST @Path( \"/rollback\" ) public Response rollback( RollbackSpec rollbackSpec )", "class_method_signature": "UpgradeRestService.rollback( RollbackSpec rollbackSpec )", "testcase": false, "constructor": false}, {"identifier": "uploadFile", "parameters": "( MultipartFormDataInput multipartFormDataInput )", "modifiers": "@POST @Path( \"/upload\" ) @Consumes( MediaType.MULTIPART_FORM_DATA ) public", "return": "Response", "signature": "Response uploadFile( MultipartFormDataInput multipartFormDataInput )", "full_signature": "@POST @Path( \"/upload\" ) @Consumes( MediaType.MULTIPART_FORM_DATA ) public Response uploadFile( MultipartFormDataInput multipartFormDataInput )", "class_method_signature": "UpgradeRestService.uploadFile( MultipartFormDataInput multipartFormDataInput )", "testcase": false, "constructor": false}, {"identifier": "getUpgradeStatus", "parameters": "( @PathParam( \"upgradeId\" ) String upgradeId )", "modifiers": "@GET @Path( \"/monitor/{upgradeId}\" ) public", "return": "Response", "signature": "Response getUpgradeStatus( @PathParam( \"upgradeId\" ) String upgradeId )", "full_signature": "@GET @Path( \"/monitor/{upgradeId}\" ) public Response getUpgradeStatus( @PathParam( \"upgradeId\" ) String upgradeId )", "class_method_signature": "UpgradeRestService.getUpgradeStatus( @PathParam( \"upgradeId\" ) String upgradeId )", "testcase": false, "constructor": false}, {"identifier": "deleteBackup", "parameters": "( @PathParam( \"upgradeId\" ) String upgradeId )", "modifiers": "@DELETE @Path( \"/backup/{upgradeId}\" ) public", "return": "Response", "signature": "Response deleteBackup( @PathParam( \"upgradeId\" ) String upgradeId )", "full_signature": "@DELETE @Path( \"/backup/{upgradeId}\" ) public Response deleteBackup( @PathParam( \"upgradeId\" ) String upgradeId )", "class_method_signature": "UpgradeRestService.deleteBackup( @PathParam( \"upgradeId\" ) String upgradeId )", "testcase": false, "constructor": false}, {"identifier": "restartProxy", "parameters": "( @PathParam( \"upgradeId\" ) String upgradeId )", "modifiers": "@POST @Path( \"/proxy/restart/{upgradeId}\" ) public", "return": "Response", "signature": "Response restartProxy( @PathParam( \"upgradeId\" ) String upgradeId )", "full_signature": "@POST @Path( \"/proxy/restart/{upgradeId}\" ) public Response restartProxy( @PathParam( \"upgradeId\" ) String upgradeId )", "class_method_signature": "UpgradeRestService.restartProxy( @PathParam( \"upgradeId\" ) String upgradeId )", "testcase": false, "constructor": false}, {"identifier": "downloadInventoryFile", "parameters": "( @PathParam( \"upgradeId\" ) String upgradeId )", "modifiers": "@GET @Path( \"/download/inventory/{upgradeId}\" ) public", "return": "File", "signature": "File downloadInventoryFile( @PathParam( \"upgradeId\" ) String upgradeId )", "full_signature": "@GET @Path( \"/download/inventory/{upgradeId}\" ) public File downloadInventoryFile( @PathParam( \"upgradeId\" ) String upgradeId )", "class_method_signature": "UpgradeRestService.downloadInventoryFile( @PathParam( \"upgradeId\" ) String upgradeId )", "testcase": false, "constructor": false}], "file": "modules/hms-core/src/main/java/com/vmware/vrack/hms/rest/services/UpgradeRestService.java"}, "focal_method": {"identifier": "restartProxy", "parameters": "( @PathParam( \"upgradeId\" ) String upgradeId )", "modifiers": "@POST @Path( \"/proxy/restart/{upgradeId}\" ) public", "return": "Response", "body": "@POST\n    @Path( \"/proxy/restart/{upgradeId}\" )\n    public Response restartProxy( @PathParam( \"upgradeId\" ) String upgradeId )\n        throws HMSRestException\n    {\n\n        if ( StringUtils.isNotBlank( upgradeId ) )\n        {\n            String upgradeBaseDir = HmsConfigHolder.getHMSConfigProperty( Constants.HMS_UPGRADE_DIR );\n            String scriptLocation =\n                upgradeBaseDir + Constants.FILE_SEPERATOR + upgradeId + Constants.FILE_SEPERATOR + RESTART_PROXY_SCRIPT;\n            logger.debug( \"starts executing the script: {}\", scriptLocation );\n\n            List<String> cmdWithArgs = new ArrayList<String>();\n            cmdWithArgs.add( 0, scriptLocation );\n\n            int exitCode = ProcessUtil.executeCommand( cmdWithArgs );\n            if ( exitCode != 0 )\n            {\n                logger.error( \"unsuccessful on executing the script, exit value {}\", exitCode );\n                throw new HMSRestException( Status.INTERNAL_SERVER_ERROR.getStatusCode(),\n                                            \"unsuccessful on executing the script\", \"exit code: \" + exitCode );\n            }\n            logger.debug( \"successfully completed executing the script: {}\", scriptLocation );\n\n        }\n        else\n        {\n            logger.error( \"upgrade token can't be blank\" );\n            throw new HMSRestException( Status.BAD_REQUEST.getStatusCode(), \"upgrade token is blank\",\n                                        \"Invalid input provided\" );\n        }\n\n        BaseResponse baseResponse = HmsGenericUtil.getBaseResponse( Status.ACCEPTED, \"restart proxy initiated.\" );\n        return Response.accepted().entity( baseResponse ).build();\n    }", "signature": "Response restartProxy( @PathParam( \"upgradeId\" ) String upgradeId )", "full_signature": "@POST @Path( \"/proxy/restart/{upgradeId}\" ) public Response restartProxy( @PathParam( \"upgradeId\" ) String upgradeId )", "class_method_signature": "UpgradeRestService.restartProxy( @PathParam( \"upgradeId\" ) String upgradeId )", "testcase": false, "constructor": false, "invocations": ["isNotBlank", "getHMSConfigProperty", "debug", "add", "executeCommand", "error", "getStatusCode", "debug", "error", "getStatusCode", "getBaseResponse", "build", "entity", "accepted"]}, "repository": {"repo_id": 61566208, "url": "https://github.com/vmware-archive/OHMS", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 16092, "license": "licensed"}}