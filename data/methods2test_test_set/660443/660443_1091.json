{"test_class": {"identifier": "IsotopePatternTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "tool/formula/src/test/java/org/openscience/cdk/formula/IsotopePatternTest.java"}, "test_case": {"identifier": "testGetMonoIsotope", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetMonoIsotope() {\n        IsotopePattern isoP = new IsotopePattern();\n        IsotopeContainer isoC = new IsotopeContainer();\n        isoP.setMonoIsotope(isoC);\n        Assert.assertEquals(isoC, isoP.getMonoIsotope());\n    }", "signature": "void testGetMonoIsotope()", "full_signature": "@Test public void testGetMonoIsotope()", "class_method_signature": "IsotopePatternTest.testGetMonoIsotope()", "testcase": true, "constructor": false, "invocations": ["setMonoIsotope", "assertEquals", "getMonoIsotope"]}, "focal_class": {"identifier": "IsotopePattern", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<IsotopeContainer> isotopeCList = new ArrayList<IsotopeContainer>();", "modifier": "private", "type": "List<IsotopeContainer>", "declarator": "isotopeCList = new ArrayList<IsotopeContainer>()", "var_name": "isotopeCList"}, {"original_string": "private int                    monoIsotopePosition;", "modifier": "private", "type": "int", "declarator": "monoIsotopePosition", "var_name": "monoIsotopePosition"}, {"original_string": "private double                 chargI       = 0;", "modifier": "private", "type": "double", "declarator": "chargI       = 0", "var_name": "chargI"}], "methods": [{"identifier": "IsotopePattern", "parameters": "()", "modifiers": "public", "return": "", "signature": " IsotopePattern()", "full_signature": "public  IsotopePattern()", "class_method_signature": "IsotopePattern.IsotopePattern()", "testcase": false, "constructor": true}, {"identifier": "setMonoIsotope", "parameters": "(IsotopeContainer isoContainer)", "modifiers": "public", "return": "void", "signature": "void setMonoIsotope(IsotopeContainer isoContainer)", "full_signature": "public void setMonoIsotope(IsotopeContainer isoContainer)", "class_method_signature": "IsotopePattern.setMonoIsotope(IsotopeContainer isoContainer)", "testcase": false, "constructor": false}, {"identifier": "addIsotope", "parameters": "(IsotopeContainer isoContainer)", "modifiers": "public", "return": "void", "signature": "void addIsotope(IsotopeContainer isoContainer)", "full_signature": "public void addIsotope(IsotopeContainer isoContainer)", "class_method_signature": "IsotopePattern.addIsotope(IsotopeContainer isoContainer)", "testcase": false, "constructor": false}, {"identifier": "getMonoIsotope", "parameters": "()", "modifiers": "public", "return": "IsotopeContainer", "signature": "IsotopeContainer getMonoIsotope()", "full_signature": "public IsotopeContainer getMonoIsotope()", "class_method_signature": "IsotopePattern.getMonoIsotope()", "testcase": false, "constructor": false}, {"identifier": "getIsotopes", "parameters": "()", "modifiers": "public", "return": "List<IsotopeContainer>", "signature": "List<IsotopeContainer> getIsotopes()", "full_signature": "public List<IsotopeContainer> getIsotopes()", "class_method_signature": "IsotopePattern.getIsotopes()", "testcase": false, "constructor": false}, {"identifier": "getIsotope", "parameters": "(int position)", "modifiers": "public", "return": "IsotopeContainer", "signature": "IsotopeContainer getIsotope(int position)", "full_signature": "public IsotopeContainer getIsotope(int position)", "class_method_signature": "IsotopePattern.getIsotope(int position)", "testcase": false, "constructor": false}, {"identifier": "getNumberOfIsotopes", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfIsotopes()", "full_signature": "public int getNumberOfIsotopes()", "class_method_signature": "IsotopePattern.getNumberOfIsotopes()", "testcase": false, "constructor": false}, {"identifier": "setCharge", "parameters": "(double charge)", "modifiers": "public", "return": "void", "signature": "void setCharge(double charge)", "full_signature": "public void setCharge(double charge)", "class_method_signature": "IsotopePattern.setCharge(double charge)", "testcase": false, "constructor": false}, {"identifier": "getCharge", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getCharge()", "full_signature": "public double getCharge()", "class_method_signature": "IsotopePattern.getCharge()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object clone()", "full_signature": "@Override public Object clone()", "class_method_signature": "IsotopePattern.clone()", "testcase": false, "constructor": false}], "file": "tool/formula/src/main/java/org/openscience/cdk/formula/IsotopePattern.java"}, "focal_method": {"identifier": "getMonoIsotope", "parameters": "()", "modifiers": "public", "return": "IsotopeContainer", "body": "public IsotopeContainer getMonoIsotope() {\n        return isotopeCList.get(monoIsotopePosition);\n    }", "signature": "IsotopeContainer getMonoIsotope()", "full_signature": "public IsotopeContainer getMonoIsotope()", "class_method_signature": "IsotopePattern.getMonoIsotope()", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}