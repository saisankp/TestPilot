{"test_class": {"identifier": "BitmapWriterTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [], "file": "library/src/test/java/com/climate/mirage/cache/disk/writers/BitmapWriterTest.java"}, "test_case": {"identifier": "testWriteFailsGracefully", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testWriteFailsGracefully() {\n\t\tFile file = new File(\"http://invalid_file_name\");\n\t\tBitmap bitmap = Bitmap.createBitmap(200, 200, Bitmap.Config.RGB_565);\n\t\tBitmapWriter writer = new BitmapWriter(bitmap);\n\t\tboolean result = writer.write(file);\n\t\tAssert.assertFalse(result);\n\t}", "signature": "void testWriteFailsGracefully()", "full_signature": "@Test public void testWriteFailsGracefully()", "class_method_signature": "BitmapWriterTest.testWriteFailsGracefully()", "testcase": true, "constructor": false, "invocations": ["createBitmap", "write", "assertFalse"]}, "focal_class": {"identifier": "BitmapWriter", "superclass": "", "interfaces": "implements DiskCache.Writer", "fields": [{"original_string": "private Bitmap bitmap;", "modifier": "private", "type": "Bitmap", "declarator": "bitmap", "var_name": "bitmap"}, {"original_string": "private static final String TAG = BitmapWriter.class.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "TAG = BitmapWriter.class.getSimpleName()", "var_name": "TAG"}], "methods": [{"identifier": "BitmapWriter", "parameters": "(Bitmap bitmap)", "modifiers": "public", "return": "", "signature": " BitmapWriter(Bitmap bitmap)", "full_signature": "public  BitmapWriter(Bitmap bitmap)", "class_method_signature": "BitmapWriter.BitmapWriter(Bitmap bitmap)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(File file)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean write(File file)", "full_signature": "@Override public boolean write(File file)", "class_method_signature": "BitmapWriter.write(File file)", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/climate/mirage/cache/disk/writers/BitmapWriter.java"}, "focal_method": {"identifier": "write", "parameters": "(File file)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean write(File file) {\n\t\tFileOutputStream fos = null;\n\t\ttry {\n\t\t\tfos = new FileOutputStream(file);\n\t\t\tif (bitmap.hasAlpha()) {\n\t\t\t\tbitmap.compress(Bitmap.CompressFormat.PNG, 100, fos);\n\t\t\t} else {\n\t\t\t\tbitmap.compress(Bitmap.CompressFormat.JPEG, 90, fos);\n\t\t\t}\n\t\t\treturn true;\n\t\t} catch (IOException e) {\n\t\t\tLog.w(TAG, \"Could not write bitmap to file\", e);\n\t\t} finally {\n\t\t\tIOUtils.close(fos);\n\t\t}\n\t\treturn false;\n\t}", "signature": "boolean write(File file)", "full_signature": "@Override public boolean write(File file)", "class_method_signature": "BitmapWriter.write(File file)", "testcase": false, "constructor": false, "invocations": ["hasAlpha", "compress", "compress", "w", "close"]}, "repository": {"repo_id": 35564219, "url": "https://github.com/TheClimateCorporation/mirage", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 3928, "license": "licensed"}}