{"test_class": {"identifier": "DataFrameAssertsTest", "superclass": "", "interfaces": "", "fields": [], "file": "dflib-junit5/src/test/java/com/nhl/dflib/junit5/DataFrameAssertsTest.java"}, "test_case": {"identifier": "testExpectHeight_Mismatch", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExpectHeight_Mismatch() {\n\n        DataFrame df = DataFrame.newFrame(\"a\").foldByRow(\"a\", \"b\");\n\n        try {\n            new DataFrameAsserts(df, \"a\").expectHeight(3);\n            throw new RuntimeException(\"Must have failed comparision\");\n        } catch (AssertionError f) {\n            assertEquals(\"Unexpected DataFrame height ==> expected: <3> but was: <2>\", f.getMessage());\n        }\n    }", "signature": "void testExpectHeight_Mismatch()", "full_signature": "@Test public void testExpectHeight_Mismatch()", "class_method_signature": "DataFrameAssertsTest.testExpectHeight_Mismatch()", "testcase": true, "constructor": false, "invocations": ["foldByRow", "newFrame", "expectHeight", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "DataFrameAsserts", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String[] expectedColumns;", "modifier": "private", "type": "String[]", "declarator": "expectedColumns", "var_name": "expectedColumns"}, {"original_string": "private DataFrame df;", "modifier": "private", "type": "DataFrame", "declarator": "df", "var_name": "df"}], "methods": [{"identifier": "DataFrameAsserts", "parameters": "(DataFrame df, Index expectedColumns)", "modifiers": "public", "return": "", "signature": " DataFrameAsserts(DataFrame df, Index expectedColumns)", "full_signature": "public  DataFrameAsserts(DataFrame df, Index expectedColumns)", "class_method_signature": "DataFrameAsserts.DataFrameAsserts(DataFrame df, Index expectedColumns)", "testcase": false, "constructor": true}, {"identifier": "DataFrameAsserts", "parameters": "(DataFrame df, List<String> expectedColumns)", "modifiers": "public", "return": "", "signature": " DataFrameAsserts(DataFrame df, List<String> expectedColumns)", "full_signature": "public  DataFrameAsserts(DataFrame df, List<String> expectedColumns)", "class_method_signature": "DataFrameAsserts.DataFrameAsserts(DataFrame df, List<String> expectedColumns)", "testcase": false, "constructor": true}, {"identifier": "DataFrameAsserts", "parameters": "(DataFrame df, String... expectedColumns)", "modifiers": "public", "return": "", "signature": " DataFrameAsserts(DataFrame df, String... expectedColumns)", "full_signature": "public  DataFrameAsserts(DataFrame df, String... expectedColumns)", "class_method_signature": "DataFrameAsserts.DataFrameAsserts(DataFrame df, String... expectedColumns)", "testcase": false, "constructor": true}, {"identifier": "expectHeight", "parameters": "(int expectedHeight)", "modifiers": "public", "return": "DataFrameAsserts", "signature": "DataFrameAsserts expectHeight(int expectedHeight)", "full_signature": "public DataFrameAsserts expectHeight(int expectedHeight)", "class_method_signature": "DataFrameAsserts.expectHeight(int expectedHeight)", "testcase": false, "constructor": false}, {"identifier": "expectIntColumns", "parameters": "(int... positions)", "modifiers": "public", "return": "DataFrameAsserts", "signature": "DataFrameAsserts expectIntColumns(int... positions)", "full_signature": "public DataFrameAsserts expectIntColumns(int... positions)", "class_method_signature": "DataFrameAsserts.expectIntColumns(int... positions)", "testcase": false, "constructor": false}, {"identifier": "expectIntColumns", "parameters": "(String... labels)", "modifiers": "public", "return": "DataFrameAsserts", "signature": "DataFrameAsserts expectIntColumns(String... labels)", "full_signature": "public DataFrameAsserts expectIntColumns(String... labels)", "class_method_signature": "DataFrameAsserts.expectIntColumns(String... labels)", "testcase": false, "constructor": false}, {"identifier": "expectLongColumns", "parameters": "(int... positions)", "modifiers": "public", "return": "DataFrameAsserts", "signature": "DataFrameAsserts expectLongColumns(int... positions)", "full_signature": "public DataFrameAsserts expectLongColumns(int... positions)", "class_method_signature": "DataFrameAsserts.expectLongColumns(int... positions)", "testcase": false, "constructor": false}, {"identifier": "expectLongColumns", "parameters": "(String... labels)", "modifiers": "public", "return": "DataFrameAsserts", "signature": "DataFrameAsserts expectLongColumns(String... labels)", "full_signature": "public DataFrameAsserts expectLongColumns(String... labels)", "class_method_signature": "DataFrameAsserts.expectLongColumns(String... labels)", "testcase": false, "constructor": false}, {"identifier": "expectDoubleColumns", "parameters": "(int... positions)", "modifiers": "public", "return": "DataFrameAsserts", "signature": "DataFrameAsserts expectDoubleColumns(int... positions)", "full_signature": "public DataFrameAsserts expectDoubleColumns(int... positions)", "class_method_signature": "DataFrameAsserts.expectDoubleColumns(int... positions)", "testcase": false, "constructor": false}, {"identifier": "expectDoubleColumns", "parameters": "(String... labels)", "modifiers": "public", "return": "DataFrameAsserts", "signature": "DataFrameAsserts expectDoubleColumns(String... labels)", "full_signature": "public DataFrameAsserts expectDoubleColumns(String... labels)", "class_method_signature": "DataFrameAsserts.expectDoubleColumns(String... labels)", "testcase": false, "constructor": false}, {"identifier": "expectBooleanColumns", "parameters": "(int... positions)", "modifiers": "public", "return": "DataFrameAsserts", "signature": "DataFrameAsserts expectBooleanColumns(int... positions)", "full_signature": "public DataFrameAsserts expectBooleanColumns(int... positions)", "class_method_signature": "DataFrameAsserts.expectBooleanColumns(int... positions)", "testcase": false, "constructor": false}, {"identifier": "expectBooleanColumns", "parameters": "(String... labels)", "modifiers": "public", "return": "DataFrameAsserts", "signature": "DataFrameAsserts expectBooleanColumns(String... labels)", "full_signature": "public DataFrameAsserts expectBooleanColumns(String... labels)", "class_method_signature": "DataFrameAsserts.expectBooleanColumns(String... labels)", "testcase": false, "constructor": false}, {"identifier": "expectColumn", "parameters": "(int pos, Object... expectedValues)", "modifiers": "public", "return": "DataFrameAsserts", "signature": "DataFrameAsserts expectColumn(int pos, Object... expectedValues)", "full_signature": "public DataFrameAsserts expectColumn(int pos, Object... expectedValues)", "class_method_signature": "DataFrameAsserts.expectColumn(int pos, Object... expectedValues)", "testcase": false, "constructor": false}, {"identifier": "expectColumn", "parameters": "(String column, Object... expectedValues)", "modifiers": "public", "return": "DataFrameAsserts", "signature": "DataFrameAsserts expectColumn(String column, Object... expectedValues)", "full_signature": "public DataFrameAsserts expectColumn(String column, Object... expectedValues)", "class_method_signature": "DataFrameAsserts.expectColumn(String column, Object... expectedValues)", "testcase": false, "constructor": false}, {"identifier": "expectRow", "parameters": "(int pos, Object... expectedValues)", "modifiers": "public", "return": "DataFrameAsserts", "signature": "DataFrameAsserts expectRow(int pos, Object... expectedValues)", "full_signature": "public DataFrameAsserts expectRow(int pos, Object... expectedValues)", "class_method_signature": "DataFrameAsserts.expectRow(int pos, Object... expectedValues)", "testcase": false, "constructor": false}, {"identifier": "assertRow", "parameters": "(int pos, Consumer<?>... valueAsserts)", "modifiers": "@SafeVarargs public final", "return": "DataFrameAsserts", "signature": "DataFrameAsserts assertRow(int pos, Consumer<?>... valueAsserts)", "full_signature": "@SafeVarargs public final DataFrameAsserts assertRow(int pos, Consumer<?>... valueAsserts)", "class_method_signature": "DataFrameAsserts.assertRow(int pos, Consumer<?>... valueAsserts)", "testcase": false, "constructor": false}, {"identifier": "expectArrayRow", "parameters": "(String column, Object expected, Object actual)", "modifiers": "private", "return": "void", "signature": "void expectArrayRow(String column, Object expected, Object actual)", "full_signature": "private void expectArrayRow(String column, Object expected, Object actual)", "class_method_signature": "DataFrameAsserts.expectArrayRow(String column, Object expected, Object actual)", "testcase": false, "constructor": false}], "file": "dflib-junit5/src/main/java/com/nhl/dflib/junit5/DataFrameAsserts.java"}, "focal_method": {"identifier": "expectHeight", "parameters": "(int expectedHeight)", "modifiers": "public", "return": "DataFrameAsserts", "body": "public DataFrameAsserts expectHeight(int expectedHeight) {\n        assertEquals(expectedHeight, df.height(), \"Unexpected DataFrame height\");\n        return this;\n    }", "signature": "DataFrameAsserts expectHeight(int expectedHeight)", "full_signature": "public DataFrameAsserts expectHeight(int expectedHeight)", "class_method_signature": "DataFrameAsserts.expectHeight(int expectedHeight)", "testcase": false, "constructor": false, "invocations": ["assertEquals", "height"]}, "repository": {"repo_id": 164392211, "url": "https://github.com/nhl/dflib", "stars": 13, "created": "1/7/2019 7:07:58 AM +00:00", "updates": "2019-12-23T13:26:53+00:00", "fork": "False", "license": "licensed"}}