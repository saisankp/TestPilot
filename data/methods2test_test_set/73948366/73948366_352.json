{"test_class": {"identifier": "CertificateAuthorityTest", "superclass": "", "interfaces": "", "fields": [], "file": "libs/java/auth_core/src/test/java/com/yahoo/athenz/auth/impl/CertificateAuthorityTest.java"}, "test_case": {"identifier": "testGetDomain", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetDomain() {\n        CertificateAuthority authority = new CertificateAuthority();\n        authority.initialize();\n        assertNull(authority.getDomain());\n    }", "signature": "void testGetDomain()", "full_signature": "@Test public void testGetDomain()", "class_method_signature": "CertificateAuthorityTest.testGetDomain()", "testcase": true, "constructor": false, "invocations": ["initialize", "assertNull", "getDomain"]}, "focal_class": {"identifier": "CertificateAuthority", "superclass": "", "interfaces": "implements Authority", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(CertificateAuthority.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(CertificateAuthority.class)", "var_name": "LOG"}, {"original_string": "private static final String ATHENZ_PROP_EXCLUDED_PRINCIPALS = \"athenz.auth.certificate.excluded_principals\";", "modifier": "private static final", "type": "String", "declarator": "ATHENZ_PROP_EXCLUDED_PRINCIPALS = \"athenz.auth.certificate.excluded_principals\"", "var_name": "ATHENZ_PROP_EXCLUDED_PRINCIPALS"}, {"original_string": "private static final String ATHENZ_PROP_EXCLUDE_ROLE_CERTIFICATES = \"athenz.auth.certificate.exclude_role_certificates\";", "modifier": "private static final", "type": "String", "declarator": "ATHENZ_PROP_EXCLUDE_ROLE_CERTIFICATES = \"athenz.auth.certificate.exclude_role_certificates\"", "var_name": "ATHENZ_PROP_EXCLUDE_ROLE_CERTIFICATES"}, {"original_string": "private static final String ATHENZ_AUTH_CHALLENGE = \"AthenzX509Certificate realm=\\\"athenz\\\"\";", "modifier": "private static final", "type": "String", "declarator": "ATHENZ_AUTH_CHALLENGE = \"AthenzX509Certificate realm=\\\"athenz\\\"\"", "var_name": "ATHENZ_AUTH_CHALLENGE"}, {"original_string": "private CertificateIdentityParser certificateIdentityParser = null;", "modifier": "private", "type": "CertificateIdentityParser", "declarator": "certificateIdentityParser = null", "var_name": "certificateIdentityParser"}, {"original_string": "private GlobStringsMatcher globStringsMatcher = new GlobStringsMatcher(ATHENZ_PROP_RESTRICTED_OU);", "modifier": "private", "type": "GlobStringsMatcher", "declarator": "globStringsMatcher = new GlobStringsMatcher(ATHENZ_PROP_RESTRICTED_OU)", "var_name": "globStringsMatcher"}], "methods": [{"identifier": "initialize", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initialize()", "full_signature": "@Override public void initialize()", "class_method_signature": "CertificateAuthority.initialize()", "testcase": false, "constructor": false}, {"identifier": "getID", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getID()", "full_signature": "@Override public String getID()", "class_method_signature": "CertificateAuthority.getID()", "testcase": false, "constructor": false}, {"identifier": "getDomain", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDomain()", "full_signature": "@Override public String getDomain()", "class_method_signature": "CertificateAuthority.getDomain()", "testcase": false, "constructor": false}, {"identifier": "getHeader", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getHeader()", "full_signature": "@Override public String getHeader()", "class_method_signature": "CertificateAuthority.getHeader()", "testcase": false, "constructor": false}, {"identifier": "getAuthenticateChallenge", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAuthenticateChallenge()", "full_signature": "@Override public String getAuthenticateChallenge()", "class_method_signature": "CertificateAuthority.getAuthenticateChallenge()", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(String creds, String remoteAddr, String httpMethod, StringBuilder errMsg)", "modifiers": "@Override public", "return": "Principal", "signature": "Principal authenticate(String creds, String remoteAddr, String httpMethod, StringBuilder errMsg)", "full_signature": "@Override public Principal authenticate(String creds, String remoteAddr, String httpMethod, StringBuilder errMsg)", "class_method_signature": "CertificateAuthority.authenticate(String creds, String remoteAddr, String httpMethod, StringBuilder errMsg)", "testcase": false, "constructor": false}, {"identifier": "getCredSource", "parameters": "()", "modifiers": "@Override public", "return": "CredSource", "signature": "CredSource getCredSource()", "full_signature": "@Override public CredSource getCredSource()", "class_method_signature": "CertificateAuthority.getCredSource()", "testcase": false, "constructor": false}, {"identifier": "reportError", "parameters": "(final String message, StringBuilder errMsg)", "modifiers": "", "return": "void", "signature": "void reportError(final String message, StringBuilder errMsg)", "full_signature": " void reportError(final String message, StringBuilder errMsg)", "class_method_signature": "CertificateAuthority.reportError(final String message, StringBuilder errMsg)", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(X509Certificate[] certs, StringBuilder errMsg)", "modifiers": "@Override public", "return": "Principal", "signature": "Principal authenticate(X509Certificate[] certs, StringBuilder errMsg)", "full_signature": "@Override public Principal authenticate(X509Certificate[] certs, StringBuilder errMsg)", "class_method_signature": "CertificateAuthority.authenticate(X509Certificate[] certs, StringBuilder errMsg)", "testcase": false, "constructor": false}], "file": "libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/impl/CertificateAuthority.java"}, "focal_method": {"identifier": "getDomain", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getDomain() {\n        return null;\n    }", "signature": "String getDomain()", "full_signature": "@Override public String getDomain()", "class_method_signature": "CertificateAuthority.getDomain()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}