{"test_class": {"identifier": "EchoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Timer timer;", "modifier": "private", "type": "Timer", "declarator": "timer", "var_name": "timer"}, {"original_string": "private EndpointImpl transmittor;", "modifier": "private", "type": "EndpointImpl", "declarator": "transmittor", "var_name": "transmittor"}, {"original_string": "private EndpointImpl echo;", "modifier": "private", "type": "EndpointImpl", "declarator": "echo", "var_name": "echo"}, {"original_string": "private AudioPlayerFactory playerFactory;", "modifier": "private", "type": "AudioPlayerFactory", "declarator": "playerFactory", "var_name": "playerFactory"}, {"original_string": "private TestSinkFactory sinkFactory;", "modifier": "private", "type": "TestSinkFactory", "declarator": "sinkFactory", "var_name": "sinkFactory"}, {"original_string": "private EchoFactory echoFactory;", "modifier": "private", "type": "EchoFactory", "declarator": "echoFactory", "var_name": "echoFactory"}, {"original_string": "private ChannelFactory channelFactory;", "modifier": "private", "type": "ChannelFactory", "declarator": "channelFactory", "var_name": "channelFactory"}, {"original_string": "private Semaphore semaphore;", "modifier": "private", "type": "Semaphore", "declarator": "semaphore", "var_name": "semaphore"}, {"original_string": "private boolean res;", "modifier": "private", "type": "boolean", "declarator": "res", "var_name": "res"}, {"original_string": "private int count;", "modifier": "private", "type": "int", "declarator": "count", "var_name": "count"}], "file": "servers/media/core/server-impl/src/test/java/org/mobicents/media/server/impl/resource/echo/EchoTest.java"}, "test_case": {"identifier": "testTransmission", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTransmission() throws Exception {\n        Connection connection1 = echo.createLocalConnection(ConnectionMode.SEND_RECV);\n        Connection connection2 = transmittor.createLocalConnection(ConnectionMode.SEND_RECV);\n        \n        connection2.setOtherParty(connection1);\n        \n        Component c = transmittor.getComponent(\"audio.player\");\n            AudioPlayer player = (AudioPlayer)c;\n        URL url = EchoTest.class.getClassLoader().getResource(\n\t\t \"org/mobicents/media/server/impl/addf8-Alaw-GW.wav\");\n        player.setURL(url.toExternalForm());\n        player.addListener(new PlayerListener());\n        player.start();\n\n        semaphore.tryAcquire(10, TimeUnit.SECONDS);\n        assertTrue(\"Expected other number of packets\", Math.abs(150 - count) < 10);\n        \n        assertEquals(true, echo.isInUse());\n        assertEquals(true, transmittor.isInUse());\n        \n        echo.deleteConnection(connection1.getId());\n        transmittor.deleteConnection(connection2.getId());\n        \n        assertEquals(false, echo.isInUse());\n        assertEquals(false, transmittor.isInUse());\n        \n    }", "signature": "void testTransmission()", "full_signature": "@Test public void testTransmission()", "class_method_signature": "EchoTest.testTransmission()", "testcase": true, "constructor": false, "invocations": ["createLocalConnection", "createLocalConnection", "setOtherParty", "getComponent", "getResource", "getClassLoader", "setURL", "toExternalForm", "addListener", "start", "tryAcquire", "assertTrue", "abs", "assertEquals", "isInUse", "assertEquals", "isInUse", "deleteConnection", "getId", "deleteConnection", "getId", "assertEquals", "isInUse", "assertEquals", "isInUse"]}, "focal_class": {"identifier": "Echo", "superclass": "extends BaseComponent", "interfaces": "implements ResourceGroup", "fields": [{"original_string": "private EchoSink sink;", "modifier": "private", "type": "EchoSink", "declarator": "sink", "var_name": "sink"}, {"original_string": "private EchoSource source;", "modifier": "private", "type": "EchoSource", "declarator": "source", "var_name": "source"}], "methods": [{"identifier": "Echo", "parameters": "(String name)", "modifiers": "public", "return": "", "signature": " Echo(String name)", "full_signature": "public  Echo(String name)", "class_method_signature": "Echo.Echo(String name)", "testcase": false, "constructor": true}, {"identifier": "getSink", "parameters": "()", "modifiers": "public", "return": "MediaSink", "signature": "MediaSink getSink()", "full_signature": "public MediaSink getSink()", "class_method_signature": "Echo.getSink()", "testcase": false, "constructor": false}, {"identifier": "getSource", "parameters": "()", "modifiers": "public", "return": "MediaSource", "signature": "MediaSource getSource()", "full_signature": "public MediaSource getSource()", "class_method_signature": "Echo.getSource()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "Echo.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "Echo.stop()", "testcase": false, "constructor": false}], "file": "servers/media/core/server-impl/src/main/java/org/mobicents/media/server/impl/resource/echo/Echo.java"}, "focal_method": {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void start() {\n        sink.start();\n        source.start();\n    }", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "Echo.start()", "testcase": false, "constructor": false, "invocations": ["start", "start"]}, "repository": {"repo_id": 128294, "url": "https://github.com/deruelle/mobicents", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 17, "size": 347121, "license": "licensed"}}