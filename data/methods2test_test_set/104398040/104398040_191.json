{"test_class": {"identifier": "LoadFileTest", "superclass": "extends TransformationUtilityTestHelper", "interfaces": "", "fields": [], "file": "butterfly-utilities/src/test/java/com/paypal/butterfly/utilities/file/LoadFileTest.java"}, "test_case": {"identifier": "loadFileTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void loadFileTest() throws IOException, URISyntaxException {\n        LoadFile loadFile =  new LoadFile(\"stylesheet.css\");\n        TUExecutionResult executionResult = loadFile.execution(transformedAppFolder, transformationContext);\n        Assert.assertEquals(executionResult.getType(), TUExecutionResult.Type.VALUE);\n        Assert.assertEquals(loadFile.getResource(), \"stylesheet.css\");\n        Assert.assertNotNull(executionResult.getValue());\n        File loadedFile = (File) executionResult.getValue();\n        Assert.assertTrue(loadedFile.getName().endsWith(\"stylesheet.css\"));\n        Assert.assertTrue(loadedFile.exists());\n        Assert.assertTrue(loadedFile.isFile());\n        Assert.assertEquals(loadFile.getDescription(), \"Load resource stylesheet.css and writes it to a temporary file\");\n        Assert.assertNull(executionResult.getException());\n        File originalFile = new File(getClass().getResource(\"/stylesheet.css\").toURI());\n        Assert.assertTrue(FileUtils.contentEquals(originalFile, loadedFile));\n    }", "signature": "void loadFileTest()", "full_signature": "@Test public void loadFileTest()", "class_method_signature": "LoadFileTest.loadFileTest()", "testcase": true, "constructor": false, "invocations": ["execution", "assertEquals", "getType", "assertEquals", "getResource", "assertNotNull", "getValue", "getValue", "assertTrue", "endsWith", "getName", "assertTrue", "exists", "assertTrue", "isFile", "assertEquals", "getDescription", "assertNull", "getException", "toURI", "getResource", "getClass", "assertTrue", "contentEquals"]}, "focal_class": {"identifier": "LoadFile", "superclass": "extends TransformationUtility<LoadFile>", "interfaces": "", "fields": [{"original_string": "private static final String DESCRIPTION = \"Load resource %s and writes it to a temporary file\";", "modifier": "private static final", "type": "String", "declarator": "DESCRIPTION = \"Load resource %s and writes it to a temporary file\"", "var_name": "DESCRIPTION"}, {"original_string": "private String resource;", "modifier": "private", "type": "String", "declarator": "resource", "var_name": "resource"}], "methods": [{"identifier": "LoadFile", "parameters": "()", "modifiers": "public", "return": "", "signature": " LoadFile()", "full_signature": "public  LoadFile()", "class_method_signature": "LoadFile.LoadFile()", "testcase": false, "constructor": true}, {"identifier": "LoadFile", "parameters": "(String resource)", "modifiers": "public", "return": "", "signature": " LoadFile(String resource)", "full_signature": "public  LoadFile(String resource)", "class_method_signature": "LoadFile.LoadFile(String resource)", "testcase": false, "constructor": true}, {"identifier": "setResource", "parameters": "(String resource)", "modifiers": "public", "return": "LoadFile", "signature": "LoadFile setResource(String resource)", "full_signature": "public LoadFile setResource(String resource)", "class_method_signature": "LoadFile.setResource(String resource)", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getResource()", "full_signature": "public String getResource()", "class_method_signature": "LoadFile.getResource()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDescription()", "full_signature": "@Override public String getDescription()", "class_method_signature": "LoadFile.getDescription()", "testcase": false, "constructor": false}, {"identifier": "execution", "parameters": "(File transformedAppFolder, TransformationContext transformationContext)", "modifiers": "@SuppressFBWarnings(\"NP_ALWAYS_NULL_EXCEPTION\") @Override protected", "return": "TUExecutionResult", "signature": "TUExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "full_signature": "@SuppressFBWarnings(\"NP_ALWAYS_NULL_EXCEPTION\") @Override protected TUExecutionResult execution(File transformedAppFolder, TransformationContext transformationContext)", "class_method_signature": "LoadFile.execution(File transformedAppFolder, TransformationContext transformationContext)", "testcase": false, "constructor": false}], "file": "butterfly-utilities/src/main/java/com/paypal/butterfly/utilities/file/LoadFile.java"}, "focal_method": {"identifier": "LoadFile", "parameters": "()", "modifiers": "public", "return": "", "body": "public LoadFile() {\n    }", "signature": " LoadFile()", "full_signature": "public  LoadFile()", "class_method_signature": "LoadFile.LoadFile()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 104398040, "url": "https://github.com/paypal/butterfly", "language": "Java", "is_fork": false, "fork_count": 42, "stargazer_count": 26, "size": 6906, "license": "licensed"}}