{"test_class": {"identifier": "LoginServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    ConnectivityManager connectivityManager;", "modifier": "@Mock", "type": "ConnectivityManager", "declarator": "connectivityManager", "var_name": "connectivityManager"}, {"original_string": "@Mock\n    TelephonyManager telephonyManager;", "modifier": "@Mock", "type": "TelephonyManager", "declarator": "telephonyManager", "var_name": "telephonyManager"}, {"original_string": "@Mock\n    UserDao userDao;", "modifier": "@Mock", "type": "UserDao", "declarator": "userDao", "var_name": "userDao"}, {"original_string": "@Mock\n    FormRemoteService authService;", "modifier": "@Mock", "type": "FormRemoteService", "declarator": "authService", "var_name": "authService"}, {"original_string": "@InjectMocks\n    LoginServiceImpl loginService;", "modifier": "@InjectMocks", "type": "LoginServiceImpl", "declarator": "loginService", "var_name": "loginService"}, {"original_string": "private String username = \"Jack\";", "modifier": "private", "type": "String", "declarator": "username = \"Jack\"", "var_name": "username"}, {"original_string": "private String password = \"123456\";", "modifier": "private", "type": "String", "declarator": "password = \"123456\"", "var_name": "password"}, {"original_string": "private String expectedUrl = \"http://35.61.65.113:8443/\";", "modifier": "private", "type": "String", "declarator": "expectedUrl = \"http://35.61.65.113:8443/\"", "var_name": "expectedUrl"}, {"original_string": "private User jack = new User(username, EncryptHelper.encrypt(password));", "modifier": "private", "type": "User", "declarator": "jack = new User(username, EncryptHelper.encrypt(password))", "var_name": "jack"}], "file": "app/src/test/java/org/unicef/rapidreg/service/impl/LoginServiceImplTest.java"}, "test_case": {"identifier": "should_return_is_not_online_when_network_is_not_available", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_return_is_not_online_when_network_is_not_available() throws Exception {\n        NetworkInfo networkInfo = mock(NetworkInfo.class);\n        when(networkInfo.isAvailable()).thenReturn(false);\n        when(connectivityManager.getActiveNetworkInfo()).thenReturn(networkInfo);\n        assertThat(\"Should return false\", loginService.isOnline(), is(false));\n    }", "signature": "void should_return_is_not_online_when_network_is_not_available()", "full_signature": "@Test public void should_return_is_not_online_when_network_is_not_available()", "class_method_signature": "LoginServiceImplTest.should_return_is_not_online_when_network_is_not_available()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "isAvailable", "thenReturn", "when", "getActiveNetworkInfo", "assertThat", "isOnline", "is"]}, "focal_class": {"identifier": "LoginServiceImpl", "superclass": "extends BaseRetrofitService<LoginRepository>", "interfaces": "implements org.unicef.rapidreg.service\n        .LoginService", "fields": [{"original_string": "private static final String TAG = LoginServiceImpl.class.getSimpleName();", "modifier": "private static final", "type": "String", "declarator": "TAG = LoginServiceImpl.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "private ConnectivityManager connectivityManager;", "modifier": "private", "type": "ConnectivityManager", "declarator": "connectivityManager", "var_name": "connectivityManager"}, {"original_string": "private TelephonyManager telephonyManager;", "modifier": "private", "type": "TelephonyManager", "declarator": "telephonyManager", "var_name": "telephonyManager"}, {"original_string": "private UserDao userDao;", "modifier": "private", "type": "UserDao", "declarator": "userDao", "var_name": "userDao"}, {"original_string": "private CompositeSubscription compositeSubscription;", "modifier": "private", "type": "CompositeSubscription", "declarator": "compositeSubscription", "var_name": "compositeSubscription"}], "methods": [{"identifier": "LoginServiceImpl", "parameters": "(ConnectivityManager connectivityManager,\n                            TelephonyManager telephonyManager,\n                            UserDao userDao)", "modifiers": "public", "return": "", "signature": " LoginServiceImpl(ConnectivityManager connectivityManager,\n                            TelephonyManager telephonyManager,\n                            UserDao userDao)", "full_signature": "public  LoginServiceImpl(ConnectivityManager connectivityManager,\n                            TelephonyManager telephonyManager,\n                            UserDao userDao)", "class_method_signature": "LoginServiceImpl.LoginServiceImpl(ConnectivityManager connectivityManager,\n                            TelephonyManager telephonyManager,\n                            UserDao userDao)", "testcase": false, "constructor": true}, {"identifier": "isOnline", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isOnline()", "full_signature": "@Override public boolean isOnline()", "class_method_signature": "LoginServiceImpl.isOnline()", "testcase": false, "constructor": false}, {"identifier": "loginOnline", "parameters": "(final String username,\n                            final String password,\n                            final String url,\n                            String imei,\n                            final LoginCallback callback)", "modifiers": "@Override public", "return": "void", "signature": "void loginOnline(final String username,\n                            final String password,\n                            final String url,\n                            String imei,\n                            final LoginCallback callback)", "full_signature": "@Override public void loginOnline(final String username,\n                            final String password,\n                            final String url,\n                            String imei,\n                            final LoginCallback callback)", "class_method_signature": "LoginServiceImpl.loginOnline(final String username,\n                            final String password,\n                            final String url,\n                            String imei,\n                            final LoginCallback callback)", "testcase": false, "constructor": false}, {"identifier": "loginOffline", "parameters": "(String username, String password, String url, LoginCallback callback)", "modifiers": "@Override public", "return": "void", "signature": "void loginOffline(String username, String password, String url, LoginCallback callback)", "full_signature": "@Override public void loginOffline(String username, String password, String url, LoginCallback callback)", "class_method_signature": "LoginServiceImpl.loginOffline(String username, String password, String url, LoginCallback callback)", "testcase": false, "constructor": false}, {"identifier": "getSessionId", "parameters": "(Headers headers)", "modifiers": "private", "return": "String", "signature": "String getSessionId(Headers headers)", "full_signature": "private String getSessionId(Headers headers)", "class_method_signature": "LoginServiceImpl.getSessionId(Headers headers)", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void destroy()", "full_signature": "@Override public void destroy()", "class_method_signature": "LoginServiceImpl.destroy()", "testcase": false, "constructor": false}, {"identifier": "loadLastLoginServerUrl", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String loadLastLoginServerUrl()", "full_signature": "@Override public String loadLastLoginServerUrl()", "class_method_signature": "LoginServiceImpl.loadLastLoginServerUrl()", "testcase": false, "constructor": false}, {"identifier": "isUsernameValid", "parameters": "(String username)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isUsernameValid(String username)", "full_signature": "@Override public boolean isUsernameValid(String username)", "class_method_signature": "LoginServiceImpl.isUsernameValid(String username)", "testcase": false, "constructor": false}, {"identifier": "isPasswordValid", "parameters": "(String password)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isPasswordValid(String password)", "full_signature": "@Override public boolean isPasswordValid(String password)", "class_method_signature": "LoginServiceImpl.isPasswordValid(String password)", "testcase": false, "constructor": false}, {"identifier": "isUrlValid", "parameters": "(String url)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isUrlValid(String url)", "full_signature": "@Override public boolean isUrlValid(String url)", "class_method_signature": "LoginServiceImpl.isUrlValid(String url)", "testcase": false, "constructor": false}, {"identifier": "getBaseUrl", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getBaseUrl()", "full_signature": "@Override protected String getBaseUrl()", "class_method_signature": "LoginServiceImpl.getBaseUrl()", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/unicef/rapidreg/service/impl/LoginServiceImpl.java"}, "focal_method": {"identifier": "isOnline", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isOnline() {\n        NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();\n        return networkInfo != null && networkInfo.isAvailable() && networkInfo.isConnected();\n    }", "signature": "boolean isOnline()", "full_signature": "@Override public boolean isOnline()", "class_method_signature": "LoginServiceImpl.isOnline()", "testcase": false, "constructor": false, "invocations": ["getActiveNetworkInfo", "isAvailable", "isConnected"]}, "repository": {"repo_id": 59507570, "url": "https://github.com/UnicefNY/RapidReg", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 10753, "license": "Other"}}