{"test_class": {"identifier": "StatsContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private GazePlay mockGazePlay;", "modifier": "@Mock\n    private", "type": "GazePlay", "declarator": "mockGazePlay", "var_name": "mockGazePlay"}, {"original_string": "@Mock\n    private Translator mockTranslator;", "modifier": "@Mock\n    private", "type": "Translator", "declarator": "mockTranslator", "var_name": "mockTranslator"}, {"original_string": "@Mock\n    private Stats mockStats;", "modifier": "@Mock\n    private", "type": "Stats", "declarator": "mockStats", "var_name": "mockStats"}, {"original_string": "private SavedStatsInfo mockSavedStatsInfo = new SavedStatsInfo(\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\")\n    );", "modifier": "private", "type": "SavedStatsInfo", "declarator": "mockSavedStatsInfo = new SavedStatsInfo(\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\")\n    )", "var_name": "mockSavedStatsInfo"}], "file": "gazeplay-core/src/test/java/net/gazeplay/ui/scenes/stats/StatsContextTest.java"}, "test_case": {"identifier": "shouldGetChildren", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldGetChildren() {\n        BorderPane root = new BorderPane();\n        StatsContext context = new StatsContext(mockGazePlay, root, mockStats, null);\n\n        assertEquals(root.getChildren().size(), context.getChildren().size());\n    }", "signature": "void shouldGetChildren()", "full_signature": "@Test void shouldGetChildren()", "class_method_signature": "StatsContextTest.shouldGetChildren()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "size", "getChildren", "size", "getChildren"]}, "focal_class": {"identifier": "StatsContext", "superclass": "extends GraphicalContext<BorderPane>", "interfaces": "", "fields": [{"original_string": "private final String COLON = \"Colon\";", "modifier": "private final", "type": "String", "declarator": "COLON = \"Colon\"", "var_name": "COLON"}, {"original_string": "private final double RATIO = 0.35;", "modifier": "private final", "type": "double", "declarator": "RATIO = 0.35", "var_name": "RATIO"}], "methods": [{"identifier": "StatsContext", "parameters": "(GazePlay gazePlay, BorderPane root, Stats stats, CustomButton continueButton)", "modifiers": "", "return": "", "signature": " StatsContext(GazePlay gazePlay, BorderPane root, Stats stats, CustomButton continueButton)", "full_signature": "  StatsContext(GazePlay gazePlay, BorderPane root, Stats stats, CustomButton continueButton)", "class_method_signature": "StatsContext.StatsContext(GazePlay gazePlay, BorderPane root, Stats stats, CustomButton continueButton)", "testcase": false, "constructor": true}, {"identifier": "createDisplayButton", "parameters": "(String buttonName, Stats stats, ImageView metrics)", "modifiers": "", "return": "I18NButton", "signature": "I18NButton createDisplayButton(String buttonName, Stats stats, ImageView metrics)", "full_signature": " I18NButton createDisplayButton(String buttonName, Stats stats, ImageView metrics)", "class_method_signature": "StatsContext.createDisplayButton(String buttonName, Stats stats, ImageView metrics)", "testcase": false, "constructor": false}, {"identifier": "addAllToGrid", "parameters": "(Stats stats, Translator translator, GridPane grid, boolean alignLeft)", "modifiers": "", "return": "void", "signature": "void addAllToGrid(Stats stats, Translator translator, GridPane grid, boolean alignLeft)", "full_signature": " void addAllToGrid(Stats stats, Translator translator, GridPane grid, boolean alignLeft)", "class_method_signature": "StatsContext.addAllToGrid(Stats stats, Translator translator, GridPane grid, boolean alignLeft)", "testcase": false, "constructor": false}, {"identifier": "addToGrid", "parameters": "(\n        GridPane grid,\n        AtomicInteger currentFormRow,\n        Translator translator,\n        String labelText,\n        Text value,\n        boolean alignLeft\n    )", "modifiers": "private", "return": "void", "signature": "void addToGrid(\n        GridPane grid,\n        AtomicInteger currentFormRow,\n        Translator translator,\n        String labelText,\n        Text value,\n        boolean alignLeft\n    )", "full_signature": "private void addToGrid(\n        GridPane grid,\n        AtomicInteger currentFormRow,\n        Translator translator,\n        String labelText,\n        Text value,\n        boolean alignLeft\n    )", "class_method_signature": "StatsContext.addToGrid(\n        GridPane grid,\n        AtomicInteger currentFormRow,\n        Translator translator,\n        String labelText,\n        Text value,\n        boolean alignLeft\n    )", "testcase": false, "constructor": false}, {"identifier": "createControlButtonPane", "parameters": "(\n        GazePlay gazePlay,\n        Stats stats,\n        Configuration config,\n        RadioButton colorBands,\n        CustomButton continueButton\n    )", "modifiers": "", "return": "HBox", "signature": "HBox createControlButtonPane(\n        GazePlay gazePlay,\n        Stats stats,\n        Configuration config,\n        RadioButton colorBands,\n        CustomButton continueButton\n    )", "full_signature": " HBox createControlButtonPane(\n        GazePlay gazePlay,\n        Stats stats,\n        Configuration config,\n        RadioButton colorBands,\n        CustomButton continueButton\n    )", "class_method_signature": "StatsContext.createControlButtonPane(\n        GazePlay gazePlay,\n        Stats stats,\n        Configuration config,\n        RadioButton colorBands,\n        CustomButton continueButton\n    )", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "ObservableList<Node>", "signature": "ObservableList<Node> getChildren()", "full_signature": "@Override public ObservableList<Node> getChildren()", "class_method_signature": "StatsContext.getChildren()", "testcase": false, "constructor": false}], "file": "gazeplay-core/src/main/java/net/gazeplay/ui/scenes/stats/StatsContext.java"}, "focal_method": {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "ObservableList<Node>", "body": "@Override\n    public ObservableList<Node> getChildren() {\n        return root.getChildren();\n    }", "signature": "ObservableList<Node> getChildren()", "full_signature": "@Override public ObservableList<Node> getChildren()", "class_method_signature": "StatsContext.getChildren()", "testcase": false, "constructor": false, "invocations": ["getChildren"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}