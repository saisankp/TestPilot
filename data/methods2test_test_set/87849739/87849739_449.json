{"test_class": {"identifier": "EnforcedThingMapperTest", "superclass": "", "interfaces": "", "fields": [], "file": "services/thingsearch/persistence/src/test/java/org/eclipse/ditto/services/thingsearch/persistence/write/mapping/EnforcedThingMapperTest.java"}, "test_case": {"identifier": "testV2Thing", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testV2Thing() {\n        final JsonObject thing = JsonFactory.newObject(\"{\\n\" +\n                \"  \\\"thingId\\\": \\\"hello:world\\\",\\n\" +\n                \"  \\\"_namespace\\\": \\\"hello\\\",\\n\" +\n                \"  \\\"_revision\\\": 1024,\\n\" +\n                \"  \\\"_modified\\\": \\\"2019-01-02T03:04:05.006Z\\\",\\n\" +\n                \"  \\\"policyId\\\": \\\"hello:world\\\",\\n\" +\n                \"  \\\"features\\\": {\\n\" +\n                \"    \\\"hi\\\": {\\n\" +\n                \"      \\\"definition\\\": [\\n\" +\n                \"        \\\"earth:v0:1\\\",\\n\" +\n                \"        \\\"mars:v0:2\\\"\\n\" +\n                \"      ],\\n\" +\n                \"      \\\"properties\\\": {\\n\" +\n                \"        \\\"there\\\": true\\n\" +\n                \"      }\\n\" +\n                \"    }\\n\" +\n                \"  },\\n\" +\n                \"  \\\"attributes\\\": {\\n\" +\n                \"    \\\"hello\\\": \\\"world\\\"\\n\" +\n                \"  }\\n\" +\n                \"}\");\n\n        final Enforcer enforcer = PolicyEnforcers.defaultEvaluator(\n                PoliciesModelFactory.newPolicyBuilder(PolicyId.of(\"policy\", \"id\"))\n                        .forLabel(\"grant-root\")\n                        .setSubject(\"g:0\", SubjectType.GENERATED)\n                        .setGrantedPermissions(THING, \"/\", Permission.READ)\n                        .forLabel(\"grant-d\")\n                        .setSubject(\"g:1\", SubjectType.GENERATED)\n                        .setGrantedPermissions(THING, \"/features/hi/properties/there\", Permission.READ)\n                        .build());\n\n        final long policyRevision = 56L;\n\n        final JsonObject expectedJson = JsonFactory.newObject(\"{\\n\" +\n                \"  \\\"_id\\\": \\\"hello:world\\\",\\n\" +\n                \"  \\\"_revision\\\": { \\\"$numberLong\\\": \\\"1024\\\" },\\n\" +\n                \"  \\\"_namespace\\\": \\\"hello\\\",\\n\" +\n                \"  \\\"gr\\\":[\\\"g:0\\\",\\\"g:1\\\"],\\n\"+\n                \"  \\\"policyId\\\": \\\"hello:world\\\",\\n\" +\n                \"  \\\"__policyRev\\\": { \\\"$numberLong\\\": \\\"56\\\" },\\n\" +\n                \"  \\\"s\\\": {\\n\" +\n                \"    \\\"thingId\\\": \\\"hello:world\\\",\\n\" +\n                \"    \\\"_namespace\\\": \\\"hello\\\",\\n\" +\n                \"    \\\"_revision\\\": 1024,\\n\" +\n                \"    \\\"_modified\\\": \\\"2019-01-02T03:04:05.006Z\\\",\\n\" +\n                \"    \\\"policyId\\\": \\\"hello:world\\\",\\n\" +\n                \"    \\\"features\\\": { \\\"hi\\\": { \\\"definition\\\": [ \\\"earth:v0:1\\\", \\\"mars:v0:2\\\" ], \\\"properties\\\": { \\\"there\\\": true } } },\\n\" +\n                \"    \\\"attributes\\\": { \\\"hello\\\": \\\"world\\\" }\\n\" +\n                \"  },\\n\" +\n                \"  \\\"d\\\": [\\n\" +\n                \"    { \\\"k\\\": \\\"/thingId\\\", \\\"v\\\": \\\"hello:world\\\", \\\"g\\\": [ \\\"g:0\\\" ], \\\"r\\\": [] },\\n\" +\n                \"    { \\\"k\\\": \\\"/_namespace\\\", \\\"v\\\": \\\"hello\\\", \\\"g\\\": [ \\\"g:0\\\" ], \\\"r\\\": [] },\\n\" +\n                \"    { \\\"k\\\": \\\"/_revision\\\", \\\"v\\\": 1024, \\\"g\\\": [ \\\"g:0\\\" ], \\\"r\\\": [] },\\n\" +\n                \"    { \\\"k\\\": \\\"/_modified\\\", \\\"v\\\": \\\"2019-01-02T03:04:05.006Z\\\", \\\"g\\\": [ \\\"g:0\\\" ], \\\"r\\\": [] },\\n\" +\n                \"    { \\\"k\\\": \\\"/policyId\\\", \\\"v\\\": \\\"hello:world\\\", \\\"g\\\": [ \\\"g:0\\\" ], \\\"r\\\": [] },\\n\" +\n                \"    { \\\"k\\\": \\\"/features/hi/definition\\\",\" +\n                \"      \\\"v\\\": \\\"earth:v0:1\\\", \\\"g\\\": [ \\\"g:0\\\" ], \\\"r\\\": [] },\\n\" +\n                \"    { \\\"k\\\": \\\"/features/*/definition\\\",\" +\n                \"      \\\"v\\\": \\\"earth:v0:1\\\", \\\"g\\\": [ \\\"g:0\\\" ], \\\"r\\\": [] },\\n\" +\n                \"    { \\\"k\\\": \\\"/features/hi/definition\\\",\" +\n                \"      \\\"v\\\": \\\"mars:v0:2\\\", \\\"g\\\": [ \\\"g:0\\\" ], \\\"r\\\": [] },\\n\" +\n                \"    { \\\"k\\\": \\\"/features/*/definition\\\",\" +\n                \"      \\\"v\\\": \\\"mars:v0:2\\\", \\\"g\\\": [ \\\"g:0\\\" ], \\\"r\\\": [] },\\n\" +\n                \"    { \\\"k\\\": \\\"/features/hi/properties/there\\\", \\\"v\\\": true, \\\"g\\\": [ \\\"g:1\\\", \\\"g:0\\\" ], \\\"r\\\": [] },\\n\" +\n                \"    { \\\"k\\\": \\\"/features/*/properties/there\\\", \\\"v\\\": true, \\\"g\\\": [ \\\"g:1\\\", \\\"g:0\\\" ], \\\"r\\\": [] },\\n\" +\n                \"    { \\\"k\\\": \\\"/attributes/hello\\\", \\\"v\\\": \\\"world\\\", \\\"g\\\": [ \\\"g:0\\\" ], \\\"r\\\": [] }\\n\" +\n                \"  ]\\n\" +\n                \"}\");\n\n        final Document result = EnforcedThingMapper.mapThing(thing, enforcer, policyRevision);\n\n        assertThat(JsonFactory.newObject(result.toJson())).isEqualTo(expectedJson);\n    }", "signature": "void testV2Thing()", "full_signature": "@Test public void testV2Thing()", "class_method_signature": "EnforcedThingMapperTest.testV2Thing()", "testcase": true, "constructor": false, "invocations": ["newObject", "defaultEvaluator", "build", "setGrantedPermissions", "setSubject", "forLabel", "setGrantedPermissions", "setSubject", "forLabel", "newPolicyBuilder", "of", "newObject", "mapThing", "isEqualTo", "assertThat", "newObject", "toJson"]}, "focal_class": {"identifier": "EnforcedThingMapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ResourceKey THING_ROOT_RESOURCE_KEY = ResourceKey.newInstance(ThingCommand.RESOURCE_TYPE, \"/\");", "modifier": "private static final", "type": "ResourceKey", "declarator": "THING_ROOT_RESOURCE_KEY = ResourceKey.newInstance(ThingCommand.RESOURCE_TYPE, \"/\")", "var_name": "THING_ROOT_RESOURCE_KEY"}], "methods": [{"identifier": "mapThing", "parameters": "(final JsonObject thing, final Enforcer enforcer, final long policyRevision)", "modifiers": "public static", "return": "Document", "signature": "Document mapThing(final JsonObject thing, final Enforcer enforcer, final long policyRevision)", "full_signature": "public static Document mapThing(final JsonObject thing, final Enforcer enforcer, final long policyRevision)", "class_method_signature": "EnforcedThingMapper.mapThing(final JsonObject thing, final Enforcer enforcer, final long policyRevision)", "testcase": false, "constructor": false}, {"identifier": "toWriteModel", "parameters": "(final JsonObject thing,\n            final Enforcer enforcer,\n            final long policyRevision)", "modifiers": "public static", "return": "ThingWriteModel", "signature": "ThingWriteModel toWriteModel(final JsonObject thing,\n            final Enforcer enforcer,\n            final long policyRevision)", "full_signature": "public static ThingWriteModel toWriteModel(final JsonObject thing,\n            final Enforcer enforcer,\n            final long policyRevision)", "class_method_signature": "EnforcedThingMapper.toWriteModel(final JsonObject thing,\n            final Enforcer enforcer,\n            final long policyRevision)", "testcase": false, "constructor": false}, {"identifier": "toWriteModel", "parameters": "(final JsonObject thing,\n            final Enforcer enforcer,\n            final long policyRevision,\n            final int maxArraySize)", "modifiers": "public static", "return": "ThingWriteModel", "signature": "ThingWriteModel toWriteModel(final JsonObject thing,\n            final Enforcer enforcer,\n            final long policyRevision,\n            final int maxArraySize)", "full_signature": "public static ThingWriteModel toWriteModel(final JsonObject thing,\n            final Enforcer enforcer,\n            final long policyRevision,\n            final int maxArraySize)", "class_method_signature": "EnforcedThingMapper.toWriteModel(final JsonObject thing,\n            final Enforcer enforcer,\n            final long policyRevision,\n            final int maxArraySize)", "testcase": false, "constructor": false}, {"identifier": "getGlobalRead", "parameters": "(final Enforcer enforcer)", "modifiers": "private static", "return": "BsonArray", "signature": "BsonArray getGlobalRead(final Enforcer enforcer)", "full_signature": "private static BsonArray getGlobalRead(final Enforcer enforcer)", "class_method_signature": "EnforcedThingMapper.getGlobalRead(final Enforcer enforcer)", "testcase": false, "constructor": false}, {"identifier": "pruneArrays", "parameters": "(final JsonObject thing, final long maxArraySize)", "modifiers": "private static", "return": "JsonObject", "signature": "JsonObject pruneArrays(final JsonObject thing, final long maxArraySize)", "full_signature": "private static JsonObject pruneArrays(final JsonObject thing, final long maxArraySize)", "class_method_signature": "EnforcedThingMapper.pruneArrays(final JsonObject thing, final long maxArraySize)", "testcase": false, "constructor": false}], "file": "services/thingsearch/persistence/src/main/java/org/eclipse/ditto/services/thingsearch/persistence/write/mapping/EnforcedThingMapper.java"}, "focal_method": {"identifier": "mapThing", "parameters": "(final JsonObject thing, final Enforcer enforcer, final long policyRevision)", "modifiers": "public static", "return": "Document", "body": "public static Document mapThing(final JsonObject thing, final Enforcer enforcer, final long policyRevision) {\n        return toWriteModel(thing, enforcer, policyRevision).getThingDocument();\n    }", "signature": "Document mapThing(final JsonObject thing, final Enforcer enforcer, final long policyRevision)", "full_signature": "public static Document mapThing(final JsonObject thing, final Enforcer enforcer, final long policyRevision)", "class_method_signature": "EnforcedThingMapper.mapThing(final JsonObject thing, final Enforcer enforcer, final long policyRevision)", "testcase": false, "constructor": false, "invocations": ["getThingDocument", "toWriteModel"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}