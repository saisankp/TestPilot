{"test_class": {"identifier": "RuleFeaturesProviderTest", "superclass": "", "interfaces": "", "fields": [], "file": "gateleen-routing/src/test/java/org/swisspush/gateleen/routing/RuleFeaturesProviderTest.java"}, "test_case": {"identifier": "testStorageExpandFeatureRequests", "parameters": "(TestContext context)", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStorageExpandFeatureRequests(TestContext context){\n        Rule rule1 = createRule(\"/root/element1/element2/(test1/.*/test2/.*/test3/.*)\", true, false);\n        Rule rule2 = createRule(\"/root/element11/element22/(.*)\", true, false);\n        Rule rule3 = createRule(\"/root/element111/element222/\", true, false);\n\n        RuleFeaturesProvider provider = new RuleFeaturesProvider(Arrays.asList(rule1, rule2, rule3));\n\n        context.assertTrue(provider.isFeatureRequest(STORAGE_EXPAND, \"/root/element1/element2/test1/1234/test2/23423/test3/asdf/asdf\"));\n        context.assertFalse(provider.isFeatureRequest(STORAGE_EXPAND, \"/root/element1/element2/test999/1234/test2/23423/test3/asdf/asdf\"));\n\n        context.assertTrue(provider.isFeatureRequest(STORAGE_EXPAND, \"/root/element11/element22/test1/1234/\"));\n        context.assertFalse(provider.isFeatureRequest(STORAGE_EXPAND, \"/root/element11/element22\"));\n\n        context.assertTrue(provider.isFeatureRequest(STORAGE_EXPAND, \"/root/element111/element222/\"));\n        context.assertFalse(provider.isFeatureRequest(STORAGE_EXPAND, \"/root/element111/element222/asdf\"));\n    }", "signature": "void testStorageExpandFeatureRequests(TestContext context)", "full_signature": "@Test public void testStorageExpandFeatureRequests(TestContext context)", "class_method_signature": "RuleFeaturesProviderTest.testStorageExpandFeatureRequests(TestContext context)", "testcase": true, "constructor": false, "invocations": ["createRule", "createRule", "createRule", "asList", "assertTrue", "isFeatureRequest", "assertFalse", "isFeatureRequest", "assertTrue", "isFeatureRequest", "assertFalse", "isFeatureRequest", "assertTrue", "isFeatureRequest", "assertFalse", "isFeatureRequest"]}, "focal_class": {"identifier": "RuleFeaturesProvider", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Logger log = LoggerFactory.getLogger(RuleFeaturesProvider.class);", "modifier": "private", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(RuleFeaturesProvider.class)", "var_name": "log"}, {"original_string": "List<RuleFeatures> featuresList;", "modifier": "", "type": "List<RuleFeatures>", "declarator": "featuresList", "var_name": "featuresList"}], "methods": [{"identifier": "RuleFeaturesProvider", "parameters": "(List<Rule> rules)", "modifiers": "public", "return": "", "signature": " RuleFeaturesProvider(List<Rule> rules)", "full_signature": "public  RuleFeaturesProvider(List<Rule> rules)", "class_method_signature": "RuleFeaturesProvider.RuleFeaturesProvider(List<Rule> rules)", "testcase": false, "constructor": true}, {"identifier": "getFeaturesList", "parameters": "()", "modifiers": "public", "return": "List<RuleFeatures>", "signature": "List<RuleFeatures> getFeaturesList()", "full_signature": "public List<RuleFeatures> getFeaturesList()", "class_method_signature": "RuleFeaturesProvider.getFeaturesList()", "testcase": false, "constructor": false}, {"identifier": "isFeatureRequest", "parameters": "(RuleFeatures.Feature feature, String uri)", "modifiers": "public", "return": "boolean", "signature": "boolean isFeatureRequest(RuleFeatures.Feature feature, String uri)", "full_signature": "public boolean isFeatureRequest(RuleFeatures.Feature feature, String uri)", "class_method_signature": "RuleFeaturesProvider.isFeatureRequest(RuleFeatures.Feature feature, String uri)", "testcase": false, "constructor": false}, {"identifier": "collectRuleFeatures", "parameters": "(List<Rule> rules)", "modifiers": "private", "return": "List<RuleFeatures>", "signature": "List<RuleFeatures> collectRuleFeatures(List<Rule> rules)", "full_signature": "private List<RuleFeatures> collectRuleFeatures(List<Rule> rules)", "class_method_signature": "RuleFeaturesProvider.collectRuleFeatures(List<Rule> rules)", "testcase": false, "constructor": false}], "file": "gateleen-routing/src/main/java/org/swisspush/gateleen/routing/RuleFeaturesProvider.java"}, "focal_method": {"identifier": "isFeatureRequest", "parameters": "(RuleFeatures.Feature feature, String uri)", "modifiers": "public", "return": "boolean", "body": "public boolean isFeatureRequest(RuleFeatures.Feature feature, String uri){\n        for (RuleFeatures features : getFeaturesList()) {\n            if(features.getUrlPattern().matcher(uri).matches()){\n                if(features.hasFeature(feature)){\n                    log.debug(String.format(\"Don't expand the uri: %s for the pattern %s since it's a %s request\", uri, features.getUrlPattern().pattern(), feature.name()));\n                    return true;\n                }\n                return false;\n            }\n        }\n        return false;\n    }", "signature": "boolean isFeatureRequest(RuleFeatures.Feature feature, String uri)", "full_signature": "public boolean isFeatureRequest(RuleFeatures.Feature feature, String uri)", "class_method_signature": "RuleFeaturesProvider.isFeatureRequest(RuleFeatures.Feature feature, String uri)", "testcase": false, "constructor": false, "invocations": ["getFeaturesList", "matches", "matcher", "getUrlPattern", "hasFeature", "debug", "format", "pattern", "getUrlPattern", "name"]}, "repository": {"repo_id": 52609528, "url": "https://github.com/swisspush/gateleen", "language": "Java", "is_fork": false, "fork_count": 28, "stargazer_count": 63, "size": 2919, "license": "licensed"}}