{"test_class": {"identifier": "FormParameterResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private MultivaluedMap<String, String> decodedForm;", "modifier": "private", "type": "MultivaluedMap<String, String>", "declarator": "decodedForm", "var_name": "decodedForm"}, {"original_string": "private MultivaluedMap<String, String> encodedForm;", "modifier": "private", "type": "MultivaluedMap<String, String>", "declarator": "encodedForm", "var_name": "encodedForm"}, {"original_string": "private ApplicationContext applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private MessageBodyReader  messageBodyReader;", "modifier": "private", "type": "MessageBodyReader", "declarator": "messageBodyReader", "var_name": "messageBodyReader"}, {"original_string": "private Parameter          parameter;", "modifier": "private", "type": "Parameter", "declarator": "parameter", "var_name": "parameter"}, {"original_string": "private TypeProducer       typeProducer;", "modifier": "private", "type": "TypeProducer", "declarator": "typeProducer", "var_name": "typeProducer"}, {"original_string": "private FormParameterResolver formParameterResolver;", "modifier": "private", "type": "FormParameterResolver", "declarator": "formParameterResolver", "var_name": "formParameterResolver"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/method/FormParameterResolverTest.java"}, "test_case": {"identifier": "resolvesEncodedFormParamAsString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void resolvesEncodedFormParamAsString() throws Exception {\n        when(parameter.isEncoded()).thenReturn(true);\n        when(typeProducer.createValue(\"foo\", encodedForm, null)).thenReturn(encodedForm.getFirst(\"foo\"));\n\n        Object resolved = formParameterResolver.resolve(parameter, applicationContext);\n\n        assertEquals(encodedForm.getFirst(\"foo\"), resolved);\n        assertThatMessageBodyWriterWasCalled();\n    }", "signature": "void resolvesEncodedFormParamAsString()", "full_signature": "@Test public void resolvesEncodedFormParamAsString()", "class_method_signature": "FormParameterResolverTest.resolvesEncodedFormParamAsString()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "isEncoded", "thenReturn", "when", "createValue", "getFirst", "resolve", "assertEquals", "getFirst", "assertThatMessageBodyWriterWasCalled"]}, "focal_class": {"identifier": "FormParameterResolver", "superclass": "", "interfaces": "implements ParameterResolver<FormParam>", "fields": [{"original_string": "private final FormParam           formParam;", "modifier": "private final", "type": "FormParam", "declarator": "formParam", "var_name": "formParam"}, {"original_string": "private final TypeProducerFactory typeProducerFactory;", "modifier": "private final", "type": "TypeProducerFactory", "declarator": "typeProducerFactory", "var_name": "typeProducerFactory"}], "methods": [{"identifier": "FormParameterResolver", "parameters": "(FormParam formParam, TypeProducerFactory typeProducerFactory)", "modifiers": "", "return": "", "signature": " FormParameterResolver(FormParam formParam, TypeProducerFactory typeProducerFactory)", "full_signature": "  FormParameterResolver(FormParam formParam, TypeProducerFactory typeProducerFactory)", "class_method_signature": "FormParameterResolver.FormParameterResolver(FormParam formParam, TypeProducerFactory typeProducerFactory)", "testcase": false, "constructor": true}, {"identifier": "resolve", "parameters": "(org.everrest.core.Parameter parameter, ApplicationContext context)", "modifiers": "@Override public", "return": "Object", "signature": "Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "full_signature": "@Override public Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "class_method_signature": "FormParameterResolver.resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "testcase": false, "constructor": false}, {"identifier": "readForm", "parameters": "(ApplicationContext context, boolean decode)", "modifiers": "@SuppressWarnings({\"unchecked\"}) private", "return": "MultivaluedMap<String, String>", "signature": "MultivaluedMap<String, String> readForm(ApplicationContext context, boolean decode)", "full_signature": "@SuppressWarnings({\"unchecked\"}) private MultivaluedMap<String, String> readForm(ApplicationContext context, boolean decode)", "class_method_signature": "FormParameterResolver.readForm(ApplicationContext context, boolean decode)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/method/FormParameterResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(org.everrest.core.Parameter parameter, ApplicationContext context)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context) throws Exception {\n        String param = this.formParam.value();\n        TypeProducer typeProducer = typeProducerFactory.createTypeProducer(parameter.getParameterClass(), parameter.getGenericType());\n\n        MultivaluedMap<String, String> form = readForm(context, !parameter.isEncoded());\n        return typeProducer.createValue(param, form, parameter.getDefaultValue());\n    }", "signature": "Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "full_signature": "@Override public Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "class_method_signature": "FormParameterResolver.resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "testcase": false, "constructor": false, "invocations": ["value", "createTypeProducer", "getParameterClass", "getGenericType", "readForm", "isEncoded", "createValue", "getDefaultValue"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}