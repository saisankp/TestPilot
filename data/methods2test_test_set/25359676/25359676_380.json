{"test_class": {"identifier": "ThemeBuilderUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "rice-framework/krad-theme-builder/src/test/java/org/kuali/rice/krad/theme/util/ThemeBuilderUtilsTest.java"}, "test_case": {"identifier": "testAddStringToArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddStringToArray() {\n        String[] array1 = new String[] {\"a1\", \"a2\"};\n        String stringToAdd = \"b1\";\n\n        String[] combinedArray = ThemeBuilderUtils.addToArray(array1, stringToAdd);\n\n        Assert.assertEquals(\"Combined array length is not correct\", 3, combinedArray.length);\n\n        Assert.assertEquals(\"a1\", combinedArray[0]);\n        Assert.assertEquals(\"a2\", combinedArray[1]);\n        Assert.assertEquals(\"b1\", combinedArray[2]);\n    }", "signature": "void testAddStringToArray()", "full_signature": "@Test public void testAddStringToArray()", "class_method_signature": "ThemeBuilderUtilsTest.testAddStringToArray()", "testcase": true, "constructor": false, "invocations": ["addToArray", "assertEquals", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "ThemeBuilderUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "retrieveThemeProperties", "parameters": "(String themeDirectory)", "modifiers": "public static", "return": "Properties", "signature": "Properties retrieveThemeProperties(String themeDirectory)", "full_signature": "public static Properties retrieveThemeProperties(String themeDirectory)", "class_method_signature": "ThemeBuilderUtils.retrieveThemeProperties(String themeDirectory)", "testcase": false, "constructor": false}, {"identifier": "storeThemeProperties", "parameters": "(String themeDirectory, Properties themeProperties)", "modifiers": "public static", "return": "void", "signature": "void storeThemeProperties(String themeDirectory, Properties themeProperties)", "full_signature": "public static void storeThemeProperties(String themeDirectory, Properties themeProperties)", "class_method_signature": "ThemeBuilderUtils.storeThemeProperties(String themeDirectory, Properties themeProperties)", "testcase": false, "constructor": false}, {"identifier": "getPropertyValueAsList", "parameters": "(String key, Properties properties)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getPropertyValueAsList(String key, Properties properties)", "full_signature": "public static List<String> getPropertyValueAsList(String key, Properties properties)", "class_method_signature": "ThemeBuilderUtils.getPropertyValueAsList(String key, Properties properties)", "testcase": false, "constructor": false}, {"identifier": "getPropertyValueAsArray", "parameters": "(String key, Properties properties)", "modifiers": "public static", "return": "String[]", "signature": "String[] getPropertyValueAsArray(String key, Properties properties)", "full_signature": "public static String[] getPropertyValueAsArray(String key, Properties properties)", "class_method_signature": "ThemeBuilderUtils.getPropertyValueAsArray(String key, Properties properties)", "testcase": false, "constructor": false}, {"identifier": "copyProperty", "parameters": "(String propertyKey, Properties sourceProperties, Properties targetProperties)", "modifiers": "public static", "return": "void", "signature": "void copyProperty(String propertyKey, Properties sourceProperties, Properties targetProperties)", "full_signature": "public static void copyProperty(String propertyKey, Properties sourceProperties, Properties targetProperties)", "class_method_signature": "ThemeBuilderUtils.copyProperty(String propertyKey, Properties sourceProperties, Properties targetProperties)", "testcase": false, "constructor": false}, {"identifier": "validateFileExistence", "parameters": "(List<File> filesToValidate, String exceptionMessage)", "modifiers": "public static", "return": "void", "signature": "void validateFileExistence(List<File> filesToValidate, String exceptionMessage)", "full_signature": "public static void validateFileExistence(List<File> filesToValidate, String exceptionMessage)", "class_method_signature": "ThemeBuilderUtils.validateFileExistence(List<File> filesToValidate, String exceptionMessage)", "testcase": false, "constructor": false}, {"identifier": "directoryContainsFile", "parameters": "(File directory, String fileName)", "modifiers": "public static", "return": "boolean", "signature": "boolean directoryContainsFile(File directory, String fileName)", "full_signature": "public static boolean directoryContainsFile(File directory, String fileName)", "class_method_signature": "ThemeBuilderUtils.directoryContainsFile(File directory, String fileName)", "testcase": false, "constructor": false}, {"identifier": "getDirectoryFiles", "parameters": "(File baseDirectory, String[] includes, String[] excludes)", "modifiers": "public static", "return": "List<File>", "signature": "List<File> getDirectoryFiles(File baseDirectory, String[] includes, String[] excludes)", "full_signature": "public static List<File> getDirectoryFiles(File baseDirectory, String[] includes, String[] excludes)", "class_method_signature": "ThemeBuilderUtils.getDirectoryFiles(File baseDirectory, String[] includes, String[] excludes)", "testcase": false, "constructor": false}, {"identifier": "getDirectoryFileNames", "parameters": "(File baseDirectory, String[] includes, String[] excludes)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getDirectoryFileNames(File baseDirectory, String[] includes, String[] excludes)", "full_signature": "public static List<String> getDirectoryFileNames(File baseDirectory, String[] includes, String[] excludes)", "class_method_signature": "ThemeBuilderUtils.getDirectoryFileNames(File baseDirectory, String[] includes, String[] excludes)", "testcase": false, "constructor": false}, {"identifier": "getSubDirectories", "parameters": "(File baseDirectory, List<String> subDirectoryNames)", "modifiers": "public static", "return": "List<File>", "signature": "List<File> getSubDirectories(File baseDirectory, List<String> subDirectoryNames)", "full_signature": "public static List<File> getSubDirectories(File baseDirectory, List<String> subDirectoryNames)", "class_method_signature": "ThemeBuilderUtils.getSubDirectories(File baseDirectory, List<String> subDirectoryNames)", "testcase": false, "constructor": false}, {"identifier": "getDirectoryContents", "parameters": "(File baseDirectory, String[] includes, String[] excludes)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getDirectoryContents(File baseDirectory, String[] includes, String[] excludes)", "full_signature": "public static List<String> getDirectoryContents(File baseDirectory, String[] includes, String[] excludes)", "class_method_signature": "ThemeBuilderUtils.getDirectoryContents(File baseDirectory, String[] includes, String[] excludes)", "testcase": false, "constructor": false}, {"identifier": "copyDirectory", "parameters": "(String sourceDirectoryPath, String targetDirectoryPath)", "modifiers": "public static", "return": "void", "signature": "void copyDirectory(String sourceDirectoryPath, String targetDirectoryPath)", "full_signature": "public static void copyDirectory(String sourceDirectoryPath, String targetDirectoryPath)", "class_method_signature": "ThemeBuilderUtils.copyDirectory(String sourceDirectoryPath, String targetDirectoryPath)", "testcase": false, "constructor": false}, {"identifier": "copyMissingContent", "parameters": "(File sourceDirectory, File targetDirectory, List<String> sourceExcludes)", "modifiers": "public static", "return": "void", "signature": "void copyMissingContent(File sourceDirectory, File targetDirectory, List<String> sourceExcludes)", "full_signature": "public static void copyMissingContent(File sourceDirectory, File targetDirectory, List<String> sourceExcludes)", "class_method_signature": "ThemeBuilderUtils.copyMissingContent(File sourceDirectory, File targetDirectory, List<String> sourceExcludes)", "testcase": false, "constructor": false}, {"identifier": "inIncludeList", "parameters": "(String name, String[] includes)", "modifiers": "public static", "return": "boolean", "signature": "boolean inIncludeList(String name, String[] includes)", "full_signature": "public static boolean inIncludeList(String name, String[] includes)", "class_method_signature": "ThemeBuilderUtils.inIncludeList(String name, String[] includes)", "testcase": false, "constructor": false}, {"identifier": "inExcludeList", "parameters": "(String name, String[] excludes)", "modifiers": "public static", "return": "boolean", "signature": "boolean inExcludeList(String name, String[] excludes)", "full_signature": "public static boolean inExcludeList(String name, String[] excludes)", "class_method_signature": "ThemeBuilderUtils.inExcludeList(String name, String[] excludes)", "testcase": false, "constructor": false}, {"identifier": "addExtensionToPatterns", "parameters": "(String[] patterns, String extension)", "modifiers": "public static", "return": "void", "signature": "void addExtensionToPatterns(String[] patterns, String extension)", "full_signature": "public static void addExtensionToPatterns(String[] patterns, String extension)", "class_method_signature": "ThemeBuilderUtils.addExtensionToPatterns(String[] patterns, String extension)", "testcase": false, "constructor": false}, {"identifier": "getRelativePaths", "parameters": "(File parentDirectory, List<File> files)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getRelativePaths(File parentDirectory, List<File> files)", "full_signature": "public static List<String> getRelativePaths(File parentDirectory, List<File> files)", "class_method_signature": "ThemeBuilderUtils.getRelativePaths(File parentDirectory, List<File> files)", "testcase": false, "constructor": false}, {"identifier": "getRelativePath", "parameters": "(File parentDirectory, File file)", "modifiers": "public static", "return": "String", "signature": "String getRelativePath(File parentDirectory, File file)", "full_signature": "public static String getRelativePath(File parentDirectory, File file)", "class_method_signature": "ThemeBuilderUtils.getRelativePath(File parentDirectory, File file)", "testcase": false, "constructor": false}, {"identifier": "calculatePathToFile", "parameters": "(File fromFile, File toFile)", "modifiers": "public static", "return": "String", "signature": "String calculatePathToFile(File fromFile, File toFile)", "full_signature": "public static String calculatePathToFile(File fromFile, File toFile)", "class_method_signature": "ThemeBuilderUtils.calculatePathToFile(File fromFile, File toFile)", "testcase": false, "constructor": false}, {"identifier": "fileMatchesPath", "parameters": "(String path, File file)", "modifiers": "protected static", "return": "boolean", "signature": "boolean fileMatchesPath(String path, File file)", "full_signature": "protected static boolean fileMatchesPath(String path, File file)", "class_method_signature": "ThemeBuilderUtils.fileMatchesPath(String path, File file)", "testcase": false, "constructor": false}, {"identifier": "orderFiles", "parameters": "(List<File> pluginFiles, List<File> subDirFiles, List<String> loadFirstPatterns,\n            List<String> loadLastPatterns, List<String> pluginLoadOrder, List<String> subDirLoadOrder)", "modifiers": "public static", "return": "List<File>", "signature": "List<File> orderFiles(List<File> pluginFiles, List<File> subDirFiles, List<String> loadFirstPatterns,\n            List<String> loadLastPatterns, List<String> pluginLoadOrder, List<String> subDirLoadOrder)", "full_signature": "public static List<File> orderFiles(List<File> pluginFiles, List<File> subDirFiles, List<String> loadFirstPatterns,\n            List<String> loadLastPatterns, List<String> pluginLoadOrder, List<String> subDirLoadOrder)", "class_method_signature": "ThemeBuilderUtils.orderFiles(List<File> pluginFiles, List<File> subDirFiles, List<String> loadFirstPatterns,\n            List<String> loadLastPatterns, List<String> pluginLoadOrder, List<String> subDirLoadOrder)", "testcase": false, "constructor": false}, {"identifier": "matchFiles", "parameters": "(List<File> filesToMatch, String pattern)", "modifiers": "public static", "return": "List<File>", "signature": "List<File> matchFiles(List<File> filesToMatch, String pattern)", "full_signature": "public static List<File> matchFiles(List<File> filesToMatch, String pattern)", "class_method_signature": "ThemeBuilderUtils.matchFiles(List<File> filesToMatch, String pattern)", "testcase": false, "constructor": false}, {"identifier": "isMatch", "parameters": "(File file, String pattern)", "modifiers": "public static", "return": "boolean", "signature": "boolean isMatch(File file, String pattern)", "full_signature": "public static boolean isMatch(File file, String pattern)", "class_method_signature": "ThemeBuilderUtils.isMatch(File file, String pattern)", "testcase": false, "constructor": false}, {"identifier": "getContainedFiles", "parameters": "(List<File> files, List<File> directories)", "modifiers": "public static", "return": "List<File>", "signature": "List<File> getContainedFiles(List<File> files, List<File> directories)", "full_signature": "public static List<File> getContainedFiles(List<File> files, List<File> directories)", "class_method_signature": "ThemeBuilderUtils.getContainedFiles(List<File> files, List<File> directories)", "testcase": false, "constructor": false}, {"identifier": "addToArray", "parameters": "(String[] array, String stringToAdd)", "modifiers": "public static", "return": "String[]", "signature": "String[] addToArray(String[] array, String stringToAdd)", "full_signature": "public static String[] addToArray(String[] array, String stringToAdd)", "class_method_signature": "ThemeBuilderUtils.addToArray(String[] array, String stringToAdd)", "testcase": false, "constructor": false}, {"identifier": "addToArray", "parameters": "(String[] array, String[] arrayToAdd)", "modifiers": "public static", "return": "String[]", "signature": "String[] addToArray(String[] array, String[] arrayToAdd)", "full_signature": "public static String[] addToArray(String[] array, String[] arrayToAdd)", "class_method_signature": "ThemeBuilderUtils.addToArray(String[] array, String[] arrayToAdd)", "testcase": false, "constructor": false}, {"identifier": "joinFileList", "parameters": "(List<File> list)", "modifiers": "public static", "return": "String", "signature": "String joinFileList(List<File> list)", "full_signature": "public static String joinFileList(List<File> list)", "class_method_signature": "ThemeBuilderUtils.joinFileList(List<File> list)", "testcase": false, "constructor": false}], "file": "rice-framework/krad-theme-builder/src/main/java/org/kuali/rice/krad/theme/util/ThemeBuilderUtils.java"}, "focal_method": {"identifier": "addToArray", "parameters": "(String[] array, String stringToAdd)", "modifiers": "public static", "return": "String[]", "body": "public static String[] addToArray(String[] array, String stringToAdd) {\n        String[] arrayToAdd = null;\n\n        if (stringToAdd != null) {\n            arrayToAdd = new String[1];\n            arrayToAdd[0] = stringToAdd;\n        }\n\n        return addToArray(array, arrayToAdd);\n    }", "signature": "String[] addToArray(String[] array, String stringToAdd)", "full_signature": "public static String[] addToArray(String[] array, String stringToAdd)", "class_method_signature": "ThemeBuilderUtils.addToArray(String[] array, String stringToAdd)", "testcase": false, "constructor": false, "invocations": ["addToArray"]}, "repository": {"repo_id": 25359676, "url": "https://github.com/kuali/rice", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 16, "size": 289156, "license": "licensed"}}