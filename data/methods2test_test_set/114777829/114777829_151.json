{"test_class": {"identifier": "DefaultWebApplicationServerTest", "superclass": "", "interfaces": "", "fields": [], "file": "appserver/impl/src/test/java/cloud/piranha/appserver/impl/DefaultWebApplicationServerTest.java"}, "test_case": {"identifier": "testAddMapping", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testAddMapping() {\n        DefaultWebApplicationServer server = new DefaultWebApplicationServer();\n        DefaultWebApplication webApp = new DefaultWebApplication();\n        webApp.setServletContextName(\"mycontext\");\n        server.addWebApplication(webApp);\n        server.addMapping(\"notthere\", \"notreal\");\n    }", "signature": "void testAddMapping()", "full_signature": "@Test void testAddMapping()", "class_method_signature": "DefaultWebApplicationServerTest.testAddMapping()", "testcase": true, "constructor": false, "invocations": ["setServletContextName", "addWebApplication", "addMapping"]}, "focal_class": {"identifier": "DefaultWebApplicationServer", "superclass": "", "interfaces": "implements HttpServerProcessor, WebApplicationServer", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(DefaultWebApplicationServer.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(DefaultWebApplicationServer.class.getName())", "var_name": "LOGGER"}, {"original_string": "protected WebApplicationServerRequestMapper requestMapper;", "modifier": "protected", "type": "WebApplicationServerRequestMapper", "declarator": "requestMapper", "var_name": "requestMapper"}, {"original_string": "protected final Map<String, WebApplication> webApplications;", "modifier": "protected final", "type": "Map<String, WebApplication>", "declarator": "webApplications", "var_name": "webApplications"}], "methods": [{"identifier": "DefaultWebApplicationServer", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultWebApplicationServer()", "full_signature": "public  DefaultWebApplicationServer()", "class_method_signature": "DefaultWebApplicationServer.DefaultWebApplicationServer()", "testcase": false, "constructor": true}, {"identifier": "addMapping", "parameters": "(String servletContextName, String contextPath)", "modifiers": "public", "return": "void", "signature": "void addMapping(String servletContextName, String contextPath)", "full_signature": "public void addMapping(String servletContextName, String contextPath)", "class_method_signature": "DefaultWebApplicationServer.addMapping(String servletContextName, String contextPath)", "testcase": false, "constructor": false}, {"identifier": "addWebApplication", "parameters": "(WebApplication webApplication)", "modifiers": "@Override public", "return": "void", "signature": "void addWebApplication(WebApplication webApplication)", "full_signature": "@Override public void addWebApplication(WebApplication webApplication)", "class_method_signature": "DefaultWebApplicationServer.addWebApplication(WebApplication webApplication)", "testcase": false, "constructor": false}, {"identifier": "createRequest", "parameters": "(HttpServerRequest request)", "modifiers": "private", "return": "WebApplicationServerRequest", "signature": "WebApplicationServerRequest createRequest(HttpServerRequest request)", "full_signature": "private WebApplicationServerRequest createRequest(HttpServerRequest request)", "class_method_signature": "DefaultWebApplicationServer.createRequest(HttpServerRequest request)", "testcase": false, "constructor": false}, {"identifier": "processCookies", "parameters": "(DefaultWebApplicationServerRequest result, String cookiesValue)", "modifiers": "private", "return": "Cookie[]", "signature": "Cookie[] processCookies(DefaultWebApplicationServerRequest result, String cookiesValue)", "full_signature": "private Cookie[] processCookies(DefaultWebApplicationServerRequest result, String cookiesValue)", "class_method_signature": "DefaultWebApplicationServer.processCookies(DefaultWebApplicationServerRequest result, String cookiesValue)", "testcase": false, "constructor": false}, {"identifier": "copyHttpRequestToApplicationRequest", "parameters": "(HttpServerRequest httpRequest, DefaultWebApplicationServerRequest applicationRequest)", "modifiers": "private", "return": "void", "signature": "void copyHttpRequestToApplicationRequest(HttpServerRequest httpRequest, DefaultWebApplicationServerRequest applicationRequest)", "full_signature": "private void copyHttpRequestToApplicationRequest(HttpServerRequest httpRequest, DefaultWebApplicationServerRequest applicationRequest)", "class_method_signature": "DefaultWebApplicationServer.copyHttpRequestToApplicationRequest(HttpServerRequest httpRequest, DefaultWebApplicationServerRequest applicationRequest)", "testcase": false, "constructor": false}, {"identifier": "createResponse", "parameters": "(HttpServerResponse httpResponse)", "modifiers": "public", "return": "WebApplicationServerResponse", "signature": "WebApplicationServerResponse createResponse(HttpServerResponse httpResponse)", "full_signature": "public WebApplicationServerResponse createResponse(HttpServerResponse httpResponse)", "class_method_signature": "DefaultWebApplicationServer.createResponse(HttpServerResponse httpResponse)", "testcase": false, "constructor": false}, {"identifier": "getRequestMapper", "parameters": "()", "modifiers": "@Override public", "return": "WebApplicationServerRequestMapper", "signature": "WebApplicationServerRequestMapper getRequestMapper()", "full_signature": "@Override public WebApplicationServerRequestMapper getRequestMapper()", "class_method_signature": "DefaultWebApplicationServer.getRequestMapper()", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initialize()", "full_signature": "@Override public void initialize()", "class_method_signature": "DefaultWebApplicationServer.initialize()", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(HttpServerRequest request, HttpServerResponse response)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean process(HttpServerRequest request, HttpServerResponse response)", "full_signature": "@Override public boolean process(HttpServerRequest request, HttpServerResponse response)", "class_method_signature": "DefaultWebApplicationServer.process(HttpServerRequest request, HttpServerResponse response)", "testcase": false, "constructor": false}, {"identifier": "service", "parameters": "(WebApplicationServerRequest request, WebApplicationServerResponse response)", "modifiers": "@Override public", "return": "void", "signature": "void service(WebApplicationServerRequest request, WebApplicationServerResponse response)", "full_signature": "@Override public void service(WebApplicationServerRequest request, WebApplicationServerResponse response)", "class_method_signature": "DefaultWebApplicationServer.service(WebApplicationServerRequest request, WebApplicationServerResponse response)", "testcase": false, "constructor": false}, {"identifier": "setRequestMapper", "parameters": "(WebApplicationServerRequestMapper requestMapper)", "modifiers": "@Override public", "return": "void", "signature": "void setRequestMapper(WebApplicationServerRequestMapper requestMapper)", "full_signature": "@Override public void setRequestMapper(WebApplicationServerRequestMapper requestMapper)", "class_method_signature": "DefaultWebApplicationServer.setRequestMapper(WebApplicationServerRequestMapper requestMapper)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void start()", "full_signature": "@Override public void start()", "class_method_signature": "DefaultWebApplicationServer.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "DefaultWebApplicationServer.stop()", "testcase": false, "constructor": false}], "file": "appserver/impl/src/main/java/cloud/piranha/appserver/impl/DefaultWebApplicationServer.java"}, "focal_method": {"identifier": "addMapping", "parameters": "(String servletContextName, String contextPath)", "modifiers": "public", "return": "void", "body": "public void addMapping(String servletContextName, String contextPath) {\n        Iterator<WebApplication> webApps = webApplications.values().iterator();\n        while (webApps.hasNext()) {\n            WebApplication webApp = webApps.next();\n            if (webApp.getServletContextName().equals(servletContextName)) {\n                requestMapper.addMapping(webApp, contextPath);\n                break;\n            }\n        }\n    }", "signature": "void addMapping(String servletContextName, String contextPath)", "full_signature": "public void addMapping(String servletContextName, String contextPath)", "class_method_signature": "DefaultWebApplicationServer.addMapping(String servletContextName, String contextPath)", "testcase": false, "constructor": false, "invocations": ["iterator", "values", "hasNext", "next", "equals", "getServletContextName", "addMapping"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}