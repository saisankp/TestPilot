{"test_class": {"identifier": "PlanningLocationFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "optaweb-vehicle-routing-backend/src/test/java/org/optaweb/vehiclerouting/plugin/planner/domain/PlanningLocationFactoryTest.java"}, "test_case": {"identifier": "test_locations_distance_map_should_work", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void test_locations_distance_map_should_work() {\n        long distance = 11231;\n        PlanningLocation planningLocation = PlanningLocationFactory.testLocation(0, location -> distance);\n        assertThat(planningLocation.distanceTo(PlanningLocationFactory.testLocation(1))).isEqualTo(distance);\n    }", "signature": "void test_locations_distance_map_should_work()", "full_signature": "@Test void test_locations_distance_map_should_work()", "class_method_signature": "PlanningLocationFactoryTest.test_locations_distance_map_should_work()", "testcase": true, "constructor": false, "invocations": ["testLocation", "isEqualTo", "assertThat", "distanceTo", "testLocation"]}, "focal_class": {"identifier": "PlanningLocationFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "PlanningLocationFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " PlanningLocationFactory()", "full_signature": "private  PlanningLocationFactory()", "class_method_signature": "PlanningLocationFactory.PlanningLocationFactory()", "testcase": false, "constructor": true}, {"identifier": "fromDomain", "parameters": "(Location location)", "modifiers": "public static", "return": "PlanningLocation", "signature": "PlanningLocation fromDomain(Location location)", "full_signature": "public static PlanningLocation fromDomain(Location location)", "class_method_signature": "PlanningLocationFactory.fromDomain(Location location)", "testcase": false, "constructor": false}, {"identifier": "fromDomain", "parameters": "(Location location, DistanceMap distanceMap)", "modifiers": "public static", "return": "PlanningLocation", "signature": "PlanningLocation fromDomain(Location location, DistanceMap distanceMap)", "full_signature": "public static PlanningLocation fromDomain(Location location, DistanceMap distanceMap)", "class_method_signature": "PlanningLocationFactory.fromDomain(Location location, DistanceMap distanceMap)", "testcase": false, "constructor": false}, {"identifier": "testLocation", "parameters": "(long id)", "modifiers": "public static", "return": "PlanningLocation", "signature": "PlanningLocation testLocation(long id)", "full_signature": "public static PlanningLocation testLocation(long id)", "class_method_signature": "PlanningLocationFactory.testLocation(long id)", "testcase": false, "constructor": false}, {"identifier": "testLocation", "parameters": "(long id, DistanceMap distanceMap)", "modifiers": "public static", "return": "PlanningLocation", "signature": "PlanningLocation testLocation(long id, DistanceMap distanceMap)", "full_signature": "public static PlanningLocation testLocation(long id, DistanceMap distanceMap)", "class_method_signature": "PlanningLocationFactory.testLocation(long id, DistanceMap distanceMap)", "testcase": false, "constructor": false}, {"identifier": "failFast", "parameters": "(PlanningLocation location)", "modifiers": "private static", "return": "long", "signature": "long failFast(PlanningLocation location)", "full_signature": "private static long failFast(PlanningLocation location)", "class_method_signature": "PlanningLocationFactory.failFast(PlanningLocation location)", "testcase": false, "constructor": false}], "file": "optaweb-vehicle-routing-backend/src/main/java/org/optaweb/vehiclerouting/plugin/planner/domain/PlanningLocationFactory.java"}, "focal_method": {"identifier": "testLocation", "parameters": "(long id)", "modifiers": "public static", "return": "PlanningLocation", "body": "public static PlanningLocation testLocation(long id) {\n        return testLocation(id, PlanningLocationFactory::failFast);\n    }", "signature": "PlanningLocation testLocation(long id)", "full_signature": "public static PlanningLocation testLocation(long id)", "class_method_signature": "PlanningLocationFactory.testLocation(long id)", "testcase": false, "constructor": false, "invocations": ["testLocation"]}, "repository": {"repo_id": 142603842, "url": "https://github.com/kiegroup/optaweb-vehicle-routing", "stars": 42, "created": "7/27/2018 5:08:08 PM +00:00", "updates": "2020-01-27T22:19:48+00:00", "fork": "False", "license": "licensed"}}