{"test_class": {"identifier": "MailTransportUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "spring-ws-support/src/test/java/org/springframework/ws/transport/mail/support/MailTransportUtilsTest.java"}, "test_case": {"identifier": "testGetSubject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetSubject() throws Exception {\n\t\tURI uri = new URI(\"mailto:infobot@example.com?subject=current-issue\");\n\t\tString subject = MailTransportUtils.getSubject(uri);\n\t\tAssert.assertEquals(\"Invalid destination\", \"current-issue\", subject);\n\n\t\turi = new URI(\"mailto:infobot@example.com\");\n\t\tsubject = MailTransportUtils.getSubject(uri);\n\t\tAssert.assertNull(\"Invalid destination\", subject);\n\t}", "signature": "void testGetSubject()", "full_signature": "@Test public void testGetSubject()", "class_method_signature": "MailTransportUtilsTest.testGetSubject()", "testcase": true, "constructor": false, "invocations": ["getSubject", "assertEquals", "getSubject", "assertNull"]}, "focal_class": {"identifier": "MailTransportUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern TO_PATTERN = Pattern.compile(\"^([^\\\\?]+)\");", "modifier": "private static final", "type": "Pattern", "declarator": "TO_PATTERN = Pattern.compile(\"^([^\\\\?]+)\")", "var_name": "TO_PATTERN"}, {"original_string": "private static final Pattern SUBJECT_PATTERN = Pattern.compile(\"subject=([^\\\\&]+)\");", "modifier": "private static final", "type": "Pattern", "declarator": "SUBJECT_PATTERN = Pattern.compile(\"subject=([^\\\\&]+)\")", "var_name": "SUBJECT_PATTERN"}, {"original_string": "private static final Log logger = LogFactory.getLog(MailTransportUtils.class);", "modifier": "private static final", "type": "Log", "declarator": "logger = LogFactory.getLog(MailTransportUtils.class)", "var_name": "logger"}], "methods": [{"identifier": "MailTransportUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " MailTransportUtils()", "full_signature": "private  MailTransportUtils()", "class_method_signature": "MailTransportUtils.MailTransportUtils()", "testcase": false, "constructor": true}, {"identifier": "getTo", "parameters": "(URI uri)", "modifiers": "public static", "return": "InternetAddress", "signature": "InternetAddress getTo(URI uri)", "full_signature": "public static InternetAddress getTo(URI uri)", "class_method_signature": "MailTransportUtils.getTo(URI uri)", "testcase": false, "constructor": false}, {"identifier": "getSubject", "parameters": "(URI uri)", "modifiers": "public static", "return": "String", "signature": "String getSubject(URI uri)", "full_signature": "public static String getSubject(URI uri)", "class_method_signature": "MailTransportUtils.getSubject(URI uri)", "testcase": false, "constructor": false}, {"identifier": "closeService", "parameters": "(Service service)", "modifiers": "public static", "return": "void", "signature": "void closeService(Service service)", "full_signature": "public static void closeService(Service service)", "class_method_signature": "MailTransportUtils.closeService(Service service)", "testcase": false, "constructor": false}, {"identifier": "closeFolder", "parameters": "(Folder folder)", "modifiers": "public static", "return": "void", "signature": "void closeFolder(Folder folder)", "full_signature": "public static void closeFolder(Folder folder)", "class_method_signature": "MailTransportUtils.closeFolder(Folder folder)", "testcase": false, "constructor": false}, {"identifier": "closeFolder", "parameters": "(Folder folder, boolean expunge)", "modifiers": "public static", "return": "void", "signature": "void closeFolder(Folder folder, boolean expunge)", "full_signature": "public static void closeFolder(Folder folder, boolean expunge)", "class_method_signature": "MailTransportUtils.closeFolder(Folder folder, boolean expunge)", "testcase": false, "constructor": false}, {"identifier": "toPasswordProtectedString", "parameters": "(URLName name)", "modifiers": "public static", "return": "String", "signature": "String toPasswordProtectedString(URLName name)", "full_signature": "public static String toPasswordProtectedString(URLName name)", "class_method_signature": "MailTransportUtils.toPasswordProtectedString(URLName name)", "testcase": false, "constructor": false}, {"identifier": "toUri", "parameters": "(InternetAddress to, String subject)", "modifiers": "public static", "return": "URI", "signature": "URI toUri(InternetAddress to, String subject)", "full_signature": "public static URI toUri(InternetAddress to, String subject)", "class_method_signature": "MailTransportUtils.toUri(InternetAddress to, String subject)", "testcase": false, "constructor": false}], "file": "spring-ws-support/src/main/java/org/springframework/ws/transport/mail/support/MailTransportUtils.java"}, "focal_method": {"identifier": "getSubject", "parameters": "(URI uri)", "modifiers": "public static", "return": "String", "body": "public static String getSubject(URI uri) {\n\t\tMatcher matcher = SUBJECT_PATTERN.matcher(uri.getSchemeSpecificPart());\n\t\tif (matcher.find()) {\n\t\t\treturn matcher.group(1);\n\t\t}\n\t\treturn null;\n\t}", "signature": "String getSubject(URI uri)", "full_signature": "public static String getSubject(URI uri)", "class_method_signature": "MailTransportUtils.getSubject(URI uri)", "testcase": false, "constructor": false, "invocations": ["matcher", "getSchemeSpecificPart", "find", "group"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}