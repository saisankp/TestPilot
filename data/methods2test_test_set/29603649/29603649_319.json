{"test_class": {"identifier": "SequenceMatcherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String[] keys = {\"Seq1\", \"Seq2\"};", "modifier": "private", "type": "String[]", "declarator": "keys = {\"Seq1\", \"Seq2\"}", "var_name": "keys"}, {"original_string": "@Mock\n    private SequenceManager manager;", "modifier": "@Mock\n    private", "type": "SequenceManager", "declarator": "manager", "var_name": "manager"}, {"original_string": "@Mock\n    private WilmaSequence sequence;", "modifier": "@Mock\n    private", "type": "WilmaSequence", "declarator": "sequence", "var_name": "sequence"}, {"original_string": "@Mock\n    private SequenceIdUtil sequenceKeyResolver;", "modifier": "@Mock\n    private", "type": "SequenceIdUtil", "declarator": "sequenceKeyResolver", "var_name": "sequenceKeyResolver"}, {"original_string": "@InjectMocks\n    private SequenceMatcher underTest;", "modifier": "@InjectMocks\n    private", "type": "SequenceMatcher", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "private Map<String, WilmaSequence> sequences;", "modifier": "private", "type": "Map<String, WilmaSequence>", "declarator": "sequences", "var_name": "sequences"}], "file": "wilma-application/modules/wilma-message-sequence/src/test/java/com/epam/wilma/sequence/matcher/SequenceMatcherTest.java"}, "test_case": {"identifier": "testMatchSequenceKeyWithDescriptorShouldReturnWithTheSearchedSequence", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMatchSequenceKeyWithDescriptorShouldReturnWithTheSearchedSequence() {\n        //GIVEN\n        String descriptorName = \"test\";\n        given(manager.getSequences(descriptorName)).willReturn(sequences);\n        given(sequenceKeyResolver.getHandlerKey(Mockito.anyString())).willReturn(\"\").willReturn(keys[1]);\n        //WHEN\n        WilmaSequence result = underTest.matchSequenceKeyWithDescriptor(descriptorName, keys);\n        //THEN\n        Assert.assertNotNull(result);\n    }", "signature": "void testMatchSequenceKeyWithDescriptorShouldReturnWithTheSearchedSequence()", "full_signature": "@Test public void testMatchSequenceKeyWithDescriptorShouldReturnWithTheSearchedSequence()", "class_method_signature": "SequenceMatcherTest.testMatchSequenceKeyWithDescriptorShouldReturnWithTheSearchedSequence()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getSequences", "willReturn", "willReturn", "given", "getHandlerKey", "anyString", "matchSequenceKeyWithDescriptor", "assertNotNull"]}, "focal_class": {"identifier": "SequenceMatcher", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private SequenceManager manager;", "modifier": "@Autowired\n    private", "type": "SequenceManager", "declarator": "manager", "var_name": "manager"}, {"original_string": "@Autowired\n    private SequenceIdUtil sequenceKeyResolver;", "modifier": "@Autowired\n    private", "type": "SequenceIdUtil", "declarator": "sequenceKeyResolver", "var_name": "sequenceKeyResolver"}], "methods": [{"identifier": "matchSequenceKeyWithDescriptor", "parameters": "(final String sequenceDescriptorName, final String[] sequenceIds)", "modifiers": "public", "return": "WilmaSequence", "signature": "WilmaSequence matchSequenceKeyWithDescriptor(final String sequenceDescriptorName, final String[] sequenceIds)", "full_signature": "public WilmaSequence matchSequenceKeyWithDescriptor(final String sequenceDescriptorName, final String[] sequenceIds)", "class_method_signature": "SequenceMatcher.matchSequenceKeyWithDescriptor(final String sequenceDescriptorName, final String[] sequenceIds)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-message-sequence/src/main/java/com/epam/wilma/sequence/matcher/SequenceMatcher.java"}, "focal_method": {"identifier": "matchSequenceKeyWithDescriptor", "parameters": "(final String sequenceDescriptorName, final String[] sequenceIds)", "modifiers": "public", "return": "WilmaSequence", "body": "public WilmaSequence matchSequenceKeyWithDescriptor(final String sequenceDescriptorName, final String[] sequenceIds) {\n        Map<String, WilmaSequence> sequences = manager.getSequences(sequenceDescriptorName);\n        WilmaSequence result = null;\n        for (int i = 0; i < sequenceIds.length && result == null; i++) {\n            String actualKey = sequenceKeyResolver.getHandlerKey(sequenceIds[i]);\n            result = sequences.get(actualKey);\n        }\n        return result;\n    }", "signature": "WilmaSequence matchSequenceKeyWithDescriptor(final String sequenceDescriptorName, final String[] sequenceIds)", "full_signature": "public WilmaSequence matchSequenceKeyWithDescriptor(final String sequenceDescriptorName, final String[] sequenceIds)", "class_method_signature": "SequenceMatcher.matchSequenceKeyWithDescriptor(final String sequenceDescriptorName, final String[] sequenceIds)", "testcase": false, "constructor": false, "invocations": ["getSequences", "getHandlerKey", "get"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}