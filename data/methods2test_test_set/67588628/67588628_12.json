{"test_class": {"identifier": "DefaultColumnMapperDeleteBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Inject\n    private ColumnQueryMapperBuilder mapperBuilder;", "modifier": "@Inject\n    private", "type": "ColumnQueryMapperBuilder", "declarator": "mapperBuilder", "var_name": "mapperBuilder"}], "file": "artemis-column/src/test/java/org/jnosql/artemis/column/query/DefaultColumnMapperDeleteBuilderTest.java"}, "test_case": {"identifier": "shouldReturnDeleteFrom", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnDeleteFrom() {\n        ColumnMapperDeleteFrom columnFrom = mapperBuilder.deleteFrom(Person.class);\n        ColumnDeleteQuery query = columnFrom.build();\n        ColumnDeleteQuery queryExpected = ColumnQueryBuilder.delete().from(\"Person\").build();\n        assertEquals(queryExpected, query);\n    }", "signature": "void shouldReturnDeleteFrom()", "full_signature": "@Test public void shouldReturnDeleteFrom()", "class_method_signature": "DefaultColumnMapperDeleteBuilderTest.shouldReturnDeleteFrom()", "testcase": true, "constructor": false, "invocations": ["deleteFrom", "build", "build", "from", "delete", "assertEquals"]}, "focal_class": {"identifier": "DefaultColumnMapperDeleteBuilder", "superclass": "extends AbstractMapperQuery", "interfaces": "implements ColumnMapperDeleteFrom,\n        ColumnMapperDeleteWhere, ColumnMapperDeleteNameCondition, ColumnMapperDeleteNotCondition", "fields": [], "methods": [{"identifier": "DefaultColumnMapperDeleteBuilder", "parameters": "(ClassMapping mapping, Converters converters)", "modifiers": "", "return": "", "signature": " DefaultColumnMapperDeleteBuilder(ClassMapping mapping, Converters converters)", "full_signature": "  DefaultColumnMapperDeleteBuilder(ClassMapping mapping, Converters converters)", "class_method_signature": "DefaultColumnMapperDeleteBuilder.DefaultColumnMapperDeleteBuilder(ClassMapping mapping, Converters converters)", "testcase": false, "constructor": true}, {"identifier": "where", "parameters": "(String name)", "modifiers": "@Override public", "return": "ColumnMapperDeleteNameCondition", "signature": "ColumnMapperDeleteNameCondition where(String name)", "full_signature": "@Override public ColumnMapperDeleteNameCondition where(String name)", "class_method_signature": "DefaultColumnMapperDeleteBuilder.where(String name)", "testcase": false, "constructor": false}, {"identifier": "and", "parameters": "(String name)", "modifiers": "@Override public", "return": "ColumnMapperDeleteNameCondition", "signature": "ColumnMapperDeleteNameCondition and(String name)", "full_signature": "@Override public ColumnMapperDeleteNameCondition and(String name)", "class_method_signature": "DefaultColumnMapperDeleteBuilder.and(String name)", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(String name)", "modifiers": "@Override public", "return": "ColumnMapperDeleteNameCondition", "signature": "ColumnMapperDeleteNameCondition or(String name)", "full_signature": "@Override public ColumnMapperDeleteNameCondition or(String name)", "class_method_signature": "DefaultColumnMapperDeleteBuilder.or(String name)", "testcase": false, "constructor": false}, {"identifier": "not", "parameters": "()", "modifiers": "@Override public", "return": "ColumnMapperDeleteNotCondition", "signature": "ColumnMapperDeleteNotCondition not()", "full_signature": "@Override public ColumnMapperDeleteNotCondition not()", "class_method_signature": "DefaultColumnMapperDeleteBuilder.not()", "testcase": false, "constructor": false}, {"identifier": "eq", "parameters": "(T value)", "modifiers": "@Override public", "return": "ColumnMapperDeleteWhere", "signature": "ColumnMapperDeleteWhere eq(T value)", "full_signature": "@Override public ColumnMapperDeleteWhere eq(T value)", "class_method_signature": "DefaultColumnMapperDeleteBuilder.eq(T value)", "testcase": false, "constructor": false}, {"identifier": "like", "parameters": "(String value)", "modifiers": "@Override public", "return": "ColumnMapperDeleteWhere", "signature": "ColumnMapperDeleteWhere like(String value)", "full_signature": "@Override public ColumnMapperDeleteWhere like(String value)", "class_method_signature": "DefaultColumnMapperDeleteBuilder.like(String value)", "testcase": false, "constructor": false}, {"identifier": "gt", "parameters": "(T value)", "modifiers": "@Override public", "return": "ColumnMapperDeleteWhere", "signature": "ColumnMapperDeleteWhere gt(T value)", "full_signature": "@Override public ColumnMapperDeleteWhere gt(T value)", "class_method_signature": "DefaultColumnMapperDeleteBuilder.gt(T value)", "testcase": false, "constructor": false}, {"identifier": "gte", "parameters": "(T value)", "modifiers": "@Override public", "return": "ColumnMapperDeleteWhere", "signature": "ColumnMapperDeleteWhere gte(T value)", "full_signature": "@Override public ColumnMapperDeleteWhere gte(T value)", "class_method_signature": "DefaultColumnMapperDeleteBuilder.gte(T value)", "testcase": false, "constructor": false}, {"identifier": "lt", "parameters": "(T value)", "modifiers": "@Override public", "return": "ColumnMapperDeleteWhere", "signature": "ColumnMapperDeleteWhere lt(T value)", "full_signature": "@Override public ColumnMapperDeleteWhere lt(T value)", "class_method_signature": "DefaultColumnMapperDeleteBuilder.lt(T value)", "testcase": false, "constructor": false}, {"identifier": "lte", "parameters": "(T value)", "modifiers": "@Override public", "return": "ColumnMapperDeleteWhere", "signature": "ColumnMapperDeleteWhere lte(T value)", "full_signature": "@Override public ColumnMapperDeleteWhere lte(T value)", "class_method_signature": "DefaultColumnMapperDeleteBuilder.lte(T value)", "testcase": false, "constructor": false}, {"identifier": "between", "parameters": "(T valueA, T valueB)", "modifiers": "@Override public", "return": "ColumnMapperDeleteWhere", "signature": "ColumnMapperDeleteWhere between(T valueA, T valueB)", "full_signature": "@Override public ColumnMapperDeleteWhere between(T valueA, T valueB)", "class_method_signature": "DefaultColumnMapperDeleteBuilder.between(T valueA, T valueB)", "testcase": false, "constructor": false}, {"identifier": "in", "parameters": "(Iterable<T> values)", "modifiers": "@Override public", "return": "ColumnMapperDeleteWhere", "signature": "ColumnMapperDeleteWhere in(Iterable<T> values)", "full_signature": "@Override public ColumnMapperDeleteWhere in(Iterable<T> values)", "class_method_signature": "DefaultColumnMapperDeleteBuilder.in(Iterable<T> values)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "@Override public", "return": "ColumnDeleteQuery", "signature": "ColumnDeleteQuery build()", "full_signature": "@Override public ColumnDeleteQuery build()", "class_method_signature": "DefaultColumnMapperDeleteBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(ColumnTemplate template)", "modifiers": "@Override public", "return": "void", "signature": "void execute(ColumnTemplate template)", "full_signature": "@Override public void execute(ColumnTemplate template)", "class_method_signature": "DefaultColumnMapperDeleteBuilder.execute(ColumnTemplate template)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(ColumnTemplateAsync template)", "modifiers": "@Override public", "return": "void", "signature": "void execute(ColumnTemplateAsync template)", "full_signature": "@Override public void execute(ColumnTemplateAsync template)", "class_method_signature": "DefaultColumnMapperDeleteBuilder.execute(ColumnTemplateAsync template)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(ColumnTemplateAsync template, Consumer<Void> callback)", "modifiers": "@Override public", "return": "void", "signature": "void execute(ColumnTemplateAsync template, Consumer<Void> callback)", "full_signature": "@Override public void execute(ColumnTemplateAsync template, Consumer<Void> callback)", "class_method_signature": "DefaultColumnMapperDeleteBuilder.execute(ColumnTemplateAsync template, Consumer<Void> callback)", "testcase": false, "constructor": false}], "file": "artemis-column/src/main/java/org/jnosql/artemis/column/query/DefaultColumnMapperDeleteBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "@Override public", "return": "ColumnDeleteQuery", "body": "@Override\n    public ColumnDeleteQuery build() {\n        return new ArtemisColumnDeleteQuery(columnFamily, condition);\n    }", "signature": "ColumnDeleteQuery build()", "full_signature": "@Override public ColumnDeleteQuery build()", "class_method_signature": "DefaultColumnMapperDeleteBuilder.build()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 67588628, "url": "https://github.com/eclipse/jnosql-artemis", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 43, "size": 2612, "license": "licensed"}}