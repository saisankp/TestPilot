{"test_class": {"identifier": "NotificationRegistrationStatusRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private NotificationRegistrationStatusRestController notificationRegistrationStatusRestController;", "modifier": "@InjectMocks\n    private", "type": "NotificationRegistrationStatusRestController", "declarator": "notificationRegistrationStatusRestController", "var_name": "notificationRegistrationStatusRestController"}, {"original_string": "@Mock\n    private NotificationRegistrationStatusService notificationRegistrationStatusService;", "modifier": "@Mock\n    private", "type": "NotificationRegistrationStatusService", "declarator": "notificationRegistrationStatusService", "var_name": "notificationRegistrationStatusService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/NotificationRegistrationStatusRestControllerTest.java"}, "test_case": {"identifier": "testUpdateNotificationRegistrationStatusAssertSuccess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUpdateNotificationRegistrationStatusAssertSuccess()\n    {\n        NotificationRegistrationKey notificationRegistrationKey = new NotificationRegistrationKey(NAMESPACE, NOTIFICATION_NAME);\n\n        NotificationRegistrationStatusUpdateRequest request = new NotificationRegistrationStatusUpdateRequest(NotificationRegistrationStatusEntity.DISABLED);\n        NotificationRegistrationStatusUpdateResponse response =\n            new NotificationRegistrationStatusUpdateResponse(notificationRegistrationKey, NotificationRegistrationStatusEntity.DISABLED);\n\n        when(notificationRegistrationStatusService.updateNotificationRegistrationStatus(NAMESPACE, NOTIFICATION_NAME, request)).thenReturn(response);\n\n        NotificationRegistrationStatusUpdateResponse resultResponse =\n            notificationRegistrationStatusRestController.updateNotificationRegistrationStatus(NAMESPACE, NOTIFICATION_NAME, request);\n\n        // Verify the external calls.\n        verify(notificationRegistrationStatusService).updateNotificationRegistrationStatus(NAMESPACE, NOTIFICATION_NAME, request);\n        verifyNoMoreInteractions(notificationRegistrationStatusService);\n        // Validate the returned object.\n        assertEquals(response, resultResponse);\n    }", "signature": "void testUpdateNotificationRegistrationStatusAssertSuccess()", "full_signature": "@Test public void testUpdateNotificationRegistrationStatusAssertSuccess()", "class_method_signature": "NotificationRegistrationStatusRestControllerTest.testUpdateNotificationRegistrationStatusAssertSuccess()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "updateNotificationRegistrationStatus", "updateNotificationRegistrationStatus", "updateNotificationRegistrationStatus", "verify", "verifyNoMoreInteractions", "assertEquals"]}, "focal_class": {"identifier": "NotificationRegistrationStatusRestController", "superclass": "extends HerdBaseController", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private NotificationRegistrationStatusService notificationRegistrationStatusService;", "modifier": "@Autowired\n    private", "type": "NotificationRegistrationStatusService", "declarator": "notificationRegistrationStatusService", "var_name": "notificationRegistrationStatusService"}], "methods": [{"identifier": "updateNotificationRegistrationStatus", "parameters": "(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName,\n        @RequestBody NotificationRegistrationStatusUpdateRequest notificationRegistrationStatusUpdateRequest)", "modifiers": "@Secured(SecurityFunctions.FN_NOTIFICATION_REGISTRATION_STATUS_PUT) @RequestMapping(value = \"/notificationRegistrationStatus/namespaces/{namespace}/notificationNames/{notificationName}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) public", "return": "NotificationRegistrationStatusUpdateResponse", "signature": "NotificationRegistrationStatusUpdateResponse updateNotificationRegistrationStatus(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName,\n        @RequestBody NotificationRegistrationStatusUpdateRequest notificationRegistrationStatusUpdateRequest)", "full_signature": "@Secured(SecurityFunctions.FN_NOTIFICATION_REGISTRATION_STATUS_PUT) @RequestMapping(value = \"/notificationRegistrationStatus/namespaces/{namespace}/notificationNames/{notificationName}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) public NotificationRegistrationStatusUpdateResponse updateNotificationRegistrationStatus(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName,\n        @RequestBody NotificationRegistrationStatusUpdateRequest notificationRegistrationStatusUpdateRequest)", "class_method_signature": "NotificationRegistrationStatusRestController.updateNotificationRegistrationStatus(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName,\n        @RequestBody NotificationRegistrationStatusUpdateRequest notificationRegistrationStatusUpdateRequest)", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/NotificationRegistrationStatusRestController.java"}, "focal_method": {"identifier": "updateNotificationRegistrationStatus", "parameters": "(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName,\n        @RequestBody NotificationRegistrationStatusUpdateRequest notificationRegistrationStatusUpdateRequest)", "modifiers": "@Secured(SecurityFunctions.FN_NOTIFICATION_REGISTRATION_STATUS_PUT) @RequestMapping(value = \"/notificationRegistrationStatus/namespaces/{namespace}/notificationNames/{notificationName}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) public", "return": "NotificationRegistrationStatusUpdateResponse", "body": "@Secured(SecurityFunctions.FN_NOTIFICATION_REGISTRATION_STATUS_PUT)\n    @RequestMapping(value = \"/notificationRegistrationStatus/namespaces/{namespace}/notificationNames/{notificationName}\", method = RequestMethod.PUT,\n        consumes = {\"application/xml\", \"application/json\"})\n    public NotificationRegistrationStatusUpdateResponse updateNotificationRegistrationStatus(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName,\n        @RequestBody NotificationRegistrationStatusUpdateRequest notificationRegistrationStatusUpdateRequest)\n    {\n        return notificationRegistrationStatusService.updateNotificationRegistrationStatus(namespace, notificationName,\n            notificationRegistrationStatusUpdateRequest);\n    }", "signature": "NotificationRegistrationStatusUpdateResponse updateNotificationRegistrationStatus(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName,\n        @RequestBody NotificationRegistrationStatusUpdateRequest notificationRegistrationStatusUpdateRequest)", "full_signature": "@Secured(SecurityFunctions.FN_NOTIFICATION_REGISTRATION_STATUS_PUT) @RequestMapping(value = \"/notificationRegistrationStatus/namespaces/{namespace}/notificationNames/{notificationName}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) public NotificationRegistrationStatusUpdateResponse updateNotificationRegistrationStatus(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName,\n        @RequestBody NotificationRegistrationStatusUpdateRequest notificationRegistrationStatusUpdateRequest)", "class_method_signature": "NotificationRegistrationStatusRestController.updateNotificationRegistrationStatus(@PathVariable(\"namespace\") String namespace,\n        @PathVariable(\"notificationName\") String notificationName,\n        @RequestBody NotificationRegistrationStatusUpdateRequest notificationRegistrationStatusUpdateRequest)", "testcase": false, "constructor": false, "invocations": ["updateNotificationRegistrationStatus"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}