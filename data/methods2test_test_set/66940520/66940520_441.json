{"test_class": {"identifier": "PartitionUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PeriodType quarterly = new QuarterlyPeriodType();", "modifier": "private", "type": "PeriodType", "declarator": "quarterly = new QuarterlyPeriodType()", "var_name": "quarterly"}, {"original_string": "private Period q1 = quarterly.createPeriod( new DateTime( 2018, 7, 1, 0, 0 ).toDate() );", "modifier": "private", "type": "Period", "declarator": "q1 = quarterly.createPeriod( new DateTime( 2018, 7, 1, 0, 0 ).toDate() )", "var_name": "q1"}, {"original_string": "private Period q2 = quarterly.createPeriod( new DateTime( 2018, 10, 1, 0, 0 ).toDate() );", "modifier": "private", "type": "Period", "declarator": "q2 = quarterly.createPeriod( new DateTime( 2018, 10, 1, 0, 0 ).toDate() )", "var_name": "q2"}, {"original_string": "private Period q3 = quarterly.createPeriod( new DateTime( 2019, 1, 1, 0, 0 ).toDate() );", "modifier": "private", "type": "Period", "declarator": "q3 = quarterly.createPeriod( new DateTime( 2019, 1, 1, 0, 0 ).toDate() )", "var_name": "q3"}], "file": "dhis-2/dhis-services/dhis-service-analytics/src/test/java/org/hisp/dhis/analytics/table/PartitionUtilsTest.java"}, "test_case": {"identifier": "testGetTablePartitions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetTablePartitions()\n    {\n        List<AnalyticsTableColumn> dimensions = Lists.newArrayList( new AnalyticsTableColumn( \"dx\", TEXT, \"dx\" ) );\n        List<AnalyticsTableColumn> values = Lists.newArrayList( new AnalyticsTableColumn( \"value\", DOUBLE, \"value\" ) );\n\n        AnalyticsTable tA = new AnalyticsTable( AnalyticsTableType.DATA_VALUE, dimensions, values );\n        tA.addPartitionTable( 2010, new DateTime( 2010, 1, 1, 0, 0 ).toDate(), new DateTime( 2010, 12, 31, 0, 0 ).toDate() );\n        tA.addPartitionTable( 2011, new DateTime( 2011, 1, 1, 0, 0 ).toDate(), new DateTime( 2011, 12, 31, 0, 0 ).toDate() );\n\n        AnalyticsTable tB = new AnalyticsTable( AnalyticsTableType.ORG_UNIT_TARGET, dimensions, values );\n\n        List<AnalyticsTablePartition> partitions = PartitionUtils.getTablePartitions( Lists.newArrayList( tA, tB ) );\n\n        assertEquals( 3, partitions.size() );\n    }", "signature": "void testGetTablePartitions()", "full_signature": "@Test public void testGetTablePartitions()", "class_method_signature": "PartitionUtilsTest.testGetTablePartitions()", "testcase": true, "constructor": false, "invocations": ["newArrayList", "newArrayList", "addPartitionTable", "toDate", "toDate", "addPartitionTable", "toDate", "toDate", "getTablePartitions", "newArrayList", "assertEquals", "size"]}, "focal_class": {"identifier": "PartitionUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String SEP = \"_\";", "modifier": "public static final", "type": "String", "declarator": "SEP = \"_\"", "var_name": "SEP"}], "methods": [{"identifier": "getStartDate", "parameters": "( Calendar calendar, Integer year )", "modifiers": "public static", "return": "Date", "signature": "Date getStartDate( Calendar calendar, Integer year )", "full_signature": "public static Date getStartDate( Calendar calendar, Integer year )", "class_method_signature": "PartitionUtils.getStartDate( Calendar calendar, Integer year )", "testcase": false, "constructor": false}, {"identifier": "getEndDate", "parameters": "( Calendar calendar, Integer year )", "modifiers": "public static", "return": "Date", "signature": "Date getEndDate( Calendar calendar, Integer year )", "full_signature": "public static Date getEndDate( Calendar calendar, Integer year )", "class_method_signature": "PartitionUtils.getEndDate( Calendar calendar, Integer year )", "testcase": false, "constructor": false}, {"identifier": "getTableName", "parameters": "( String baseName, Program program )", "modifiers": "public static", "return": "String", "signature": "String getTableName( String baseName, Program program )", "full_signature": "public static String getTableName( String baseName, Program program )", "class_method_signature": "PartitionUtils.getTableName( String baseName, Program program )", "testcase": false, "constructor": false}, {"identifier": "getPartitions", "parameters": "( List<DimensionalItemObject> periods )", "modifiers": "public static", "return": "Partitions", "signature": "Partitions getPartitions( List<DimensionalItemObject> periods )", "full_signature": "public static Partitions getPartitions( List<DimensionalItemObject> periods )", "class_method_signature": "PartitionUtils.getPartitions( List<DimensionalItemObject> periods )", "testcase": false, "constructor": false}, {"identifier": "getPartitions", "parameters": "( Period period )", "modifiers": "public static", "return": "Partitions", "signature": "Partitions getPartitions( Period period )", "full_signature": "public static Partitions getPartitions( Period period )", "class_method_signature": "PartitionUtils.getPartitions( Period period )", "testcase": false, "constructor": false}, {"identifier": "getPartitions", "parameters": "( Date startDate, Date endDate )", "modifiers": "public static", "return": "Partitions", "signature": "Partitions getPartitions( Date startDate, Date endDate )", "full_signature": "public static Partitions getPartitions( Date startDate, Date endDate )", "class_method_signature": "PartitionUtils.getPartitions( Date startDate, Date endDate )", "testcase": false, "constructor": false}, {"identifier": "getPartitions", "parameters": "( DataQueryParams params, AnalyticsTableType tableType )", "modifiers": "public static", "return": "Partitions", "signature": "Partitions getPartitions( DataQueryParams params, AnalyticsTableType tableType )", "full_signature": "public static Partitions getPartitions( DataQueryParams params, AnalyticsTableType tableType )", "class_method_signature": "PartitionUtils.getPartitions( DataQueryParams params, AnalyticsTableType tableType )", "testcase": false, "constructor": false}, {"identifier": "getYears", "parameters": "( Period period )", "modifiers": "private static", "return": "Set<Integer>", "signature": "Set<Integer> getYears( Period period )", "full_signature": "private static Set<Integer> getYears( Period period )", "class_method_signature": "PartitionUtils.getYears( Period period )", "testcase": false, "constructor": false}, {"identifier": "getPeriodTypePeriodMap", "parameters": "( Collection<DimensionalItemObject> periods )", "modifiers": "public static", "return": "ListMap<String, DimensionalItemObject>", "signature": "ListMap<String, DimensionalItemObject> getPeriodTypePeriodMap( Collection<DimensionalItemObject> periods )", "full_signature": "public static ListMap<String, DimensionalItemObject> getPeriodTypePeriodMap( Collection<DimensionalItemObject> periods )", "class_method_signature": "PartitionUtils.getPeriodTypePeriodMap( Collection<DimensionalItemObject> periods )", "testcase": false, "constructor": false}, {"identifier": "getTablePartitions", "parameters": "( List<AnalyticsTable> tables )", "modifiers": "public static", "return": "List<AnalyticsTablePartition>", "signature": "List<AnalyticsTablePartition> getTablePartitions( List<AnalyticsTable> tables )", "full_signature": "public static List<AnalyticsTablePartition> getTablePartitions( List<AnalyticsTable> tables )", "class_method_signature": "PartitionUtils.getTablePartitions( List<AnalyticsTable> tables )", "testcase": false, "constructor": false}, {"identifier": "getLatestTablePartition", "parameters": "( List<AnalyticsTable> tables )", "modifiers": "public static", "return": "AnalyticsTablePartition", "signature": "AnalyticsTablePartition getLatestTablePartition( List<AnalyticsTable> tables )", "full_signature": "public static AnalyticsTablePartition getLatestTablePartition( List<AnalyticsTable> tables )", "class_method_signature": "PartitionUtils.getLatestTablePartition( List<AnalyticsTable> tables )", "testcase": false, "constructor": false}, {"identifier": "getPartitionName", "parameters": "( String tableName, Integer partition )", "modifiers": "public static", "return": "String", "signature": "String getPartitionName( String tableName, Integer partition )", "full_signature": "public static String getPartitionName( String tableName, Integer partition )", "class_method_signature": "PartitionUtils.getPartitionName( String tableName, Integer partition )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/table/PartitionUtils.java"}, "focal_method": {"identifier": "getTablePartitions", "parameters": "( List<AnalyticsTable> tables )", "modifiers": "public static", "return": "List<AnalyticsTablePartition>", "body": "public static List<AnalyticsTablePartition> getTablePartitions( List<AnalyticsTable> tables )\n    {\n        final List<AnalyticsTablePartition> partitions = Lists.newArrayList();\n\n        for ( AnalyticsTable table : tables )\n        {\n            if ( table.hasPartitionTables() )\n            {\n                partitions.addAll( table.getTablePartitions() );\n            }\n            else\n            {\n                // Fake partition representing the master table\n\n                partitions.add( new AnalyticsTablePartition( table, null, null, null, false ) );\n            }\n        }\n\n        return partitions;\n    }", "signature": "List<AnalyticsTablePartition> getTablePartitions( List<AnalyticsTable> tables )", "full_signature": "public static List<AnalyticsTablePartition> getTablePartitions( List<AnalyticsTable> tables )", "class_method_signature": "PartitionUtils.getTablePartitions( List<AnalyticsTable> tables )", "testcase": false, "constructor": false, "invocations": ["newArrayList", "hasPartitionTables", "addAll", "getTablePartitions", "add"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}