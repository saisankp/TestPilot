{"test_class": {"identifier": "DebuggerSessionImplTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [{"original_string": "private IChainStorage chainStorageMock;", "modifier": "private", "type": "IChainStorage", "declarator": "chainStorageMock", "var_name": "chainStorageMock"}, {"original_string": "private Object debuggerAddress = new Object();", "modifier": "private", "type": "Object", "declarator": "debuggerAddress = new Object()", "var_name": "debuggerAddress"}, {"original_string": "private IReceiverChain chainMock = mock(IReceiverChain.class);", "modifier": "private", "type": "IReceiverChain", "declarator": "chainMock = mock(IReceiverChain.class)", "var_name": "chainMock"}, {"original_string": "private IMessageProcessingSequence innerSequenceMock = mock(IMessageProcessingSequence.class);", "modifier": "private", "type": "IMessageProcessingSequence", "declarator": "innerSequenceMock = mock(IMessageProcessingSequence.class)", "var_name": "innerSequenceMock"}, {"original_string": "private IDebuggerSequence debuggerSequenceMock;", "modifier": "private", "type": "IDebuggerSequence", "declarator": "debuggerSequenceMock", "var_name": "debuggerSequenceMock"}, {"original_string": "private IMessageProcessor messageProcessorMock;", "modifier": "private", "type": "IMessageProcessor", "declarator": "messageProcessorMock", "var_name": "messageProcessorMock"}, {"original_string": "private IDebuggerBreakpointsStorage breakpointsStorageMock;", "modifier": "private", "type": "IDebuggerBreakpointsStorage", "declarator": "breakpointsStorageMock", "var_name": "breakpointsStorageMock"}, {"original_string": "private IResolveDependencyStrategy sequenceStrategyMock;", "modifier": "private", "type": "IResolveDependencyStrategy", "declarator": "sequenceStrategyMock", "var_name": "sequenceStrategyMock"}, {"original_string": "private IResolveDependencyStrategy debuggerSequenceStrategyMock;", "modifier": "private", "type": "IResolveDependencyStrategy", "declarator": "debuggerSequenceStrategyMock", "var_name": "debuggerSequenceStrategyMock"}, {"original_string": "private IResolveDependencyStrategy processorStrategyMock;", "modifier": "private", "type": "IResolveDependencyStrategy", "declarator": "processorStrategyMock", "var_name": "processorStrategyMock"}, {"original_string": "private IResolveDependencyStrategy sequenceDumpStrategyMock;", "modifier": "private", "type": "IResolveDependencyStrategy", "declarator": "sequenceDumpStrategyMock", "var_name": "sequenceDumpStrategyMock"}, {"original_string": "private Object taskQueue = new Object();", "modifier": "private", "type": "Object", "declarator": "taskQueue = new Object()", "var_name": "taskQueue"}, {"original_string": "private IDebuggerSession session;", "modifier": "private", "type": "IDebuggerSession", "declarator": "session", "var_name": "session"}, {"original_string": "private Exception exception1 = new Exception();", "modifier": "private", "type": "Exception", "declarator": "exception1 = new Exception()", "var_name": "exception1"}], "file": "CoreFeatures/Debugger/DebuggerSessionImpl/src/test/java/info/smart_tools/smartactors/debugger/session_impl/DebuggerSessionImplTest.java"}, "test_case": {"identifier": "Should_callChainOnCallCommand", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_callChainOnCallCommand()\n            throws Exception {\n        Should_startDebugging();\n        c(\"pause\", null);\n        session.handleInterrupt(messageProcessorMock);\n\n        IReceiverChain chainMock = mock(IReceiverChain.class);\n        when(chainStorageMock.resolve(eq(\"chainName__id\"))).thenReturn(chainMock);\n\n        c(\"call\", \"chainName\");\n\n        verify(debuggerSequenceMock).callChain(chainMock);\n    }", "signature": "void Should_callChainOnCallCommand()", "full_signature": "@Test public void Should_callChainOnCallCommand()", "class_method_signature": "DebuggerSessionImplTest.Should_callChainOnCallCommand()", "testcase": true, "constructor": false, "invocations": ["Should_startDebugging", "c", "handleInterrupt", "mock", "thenReturn", "when", "resolve", "eq", "c", "callChain", "verify"]}, "focal_class": {"identifier": "DebuggerSessionImpl", "superclass": "", "interfaces": "implements IDebuggerSession", "fields": [{"original_string": "private static final int DEFAULT_STACK_DEPTH = 5;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_STACK_DEPTH = 5", "var_name": "DEFAULT_STACK_DEPTH"}, {"original_string": "private final IFieldName sessionIdFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "sessionIdFieldName", "var_name": "sessionIdFieldName"}, {"original_string": "private final Map<String, IDebuggerCommand> commands = new HashMap<>();", "modifier": "private final", "type": "Map<String, IDebuggerCommand>", "declarator": "commands = new HashMap<>()", "var_name": "commands"}, {"original_string": "private final String id;", "modifier": "private final", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private final Object debuggerAddress;", "modifier": "private final", "type": "Object", "declarator": "debuggerAddress", "var_name": "debuggerAddress"}, {"original_string": "private IDebuggerSequence sequence;", "modifier": "private", "type": "IDebuggerSequence", "declarator": "sequence", "var_name": "sequence"}, {"original_string": "private IMessageProcessor processor;", "modifier": "private", "type": "IMessageProcessor", "declarator": "processor", "var_name": "processor"}, {"original_string": "private IObject message;", "modifier": "private", "type": "IObject", "declarator": "message", "var_name": "message"}, {"original_string": "private IReceiverChain mainChain;", "modifier": "private", "type": "IReceiverChain", "declarator": "mainChain", "var_name": "mainChain"}, {"original_string": "private boolean paused;", "modifier": "private", "type": "boolean", "declarator": "paused", "var_name": "paused"}, {"original_string": "private boolean prePaused;", "modifier": "private", "type": "boolean", "declarator": "prePaused", "var_name": "prePaused"}, {"original_string": "private boolean breakOnException;", "modifier": "private", "type": "boolean", "declarator": "breakOnException", "var_name": "breakOnException"}, {"original_string": "private int stackDepth = DEFAULT_STACK_DEPTH;", "modifier": "private", "type": "int", "declarator": "stackDepth = DEFAULT_STACK_DEPTH", "var_name": "stackDepth"}, {"original_string": "private int stepModeMaxDepth = Integer.MAX_VALUE;", "modifier": "private", "type": "int", "declarator": "stepModeMaxDepth = Integer.MAX_VALUE", "var_name": "stepModeMaxDepth"}, {"original_string": "private final IDebuggerBreakpointsStorage breakpointsStorage;", "modifier": "private final", "type": "IDebuggerBreakpointsStorage", "declarator": "breakpointsStorage", "var_name": "breakpointsStorage"}], "methods": [{"identifier": "DebuggerSessionImpl", "parameters": "(final String id, final Object debuggerAddress)", "modifiers": "public", "return": "", "signature": " DebuggerSessionImpl(final String id, final Object debuggerAddress)", "full_signature": "public  DebuggerSessionImpl(final String id, final Object debuggerAddress)", "class_method_signature": "DebuggerSessionImpl.DebuggerSessionImpl(final String id, final Object debuggerAddress)", "testcase": false, "constructor": true}, {"identifier": "pauseProcessor", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void pauseProcessor()", "full_signature": "private void pauseProcessor()", "class_method_signature": "DebuggerSessionImpl.pauseProcessor()", "testcase": false, "constructor": false}, {"identifier": "handleInterrupt", "parameters": "(final IMessageProcessor messageProcessor)", "modifiers": "@Override public", "return": "void", "signature": "void handleInterrupt(final IMessageProcessor messageProcessor)", "full_signature": "@Override public void handleInterrupt(final IMessageProcessor messageProcessor)", "class_method_signature": "DebuggerSessionImpl.handleInterrupt(final IMessageProcessor messageProcessor)", "testcase": false, "constructor": false}, {"identifier": "executeCommand", "parameters": "(final String name, final Object args)", "modifiers": "@Override public", "return": "Object", "signature": "Object executeCommand(final String name, final Object args)", "full_signature": "@Override public Object executeCommand(final String name, final Object args)", "class_method_signature": "DebuggerSessionImpl.executeCommand(final String name, final Object args)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "DebuggerSessionImpl.close()", "testcase": false, "constructor": false}, {"identifier": "isRunning", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isRunning()", "full_signature": "private boolean isRunning()", "class_method_signature": "DebuggerSessionImpl.isRunning()", "testcase": false, "constructor": false}, {"identifier": "isPaused", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isPaused()", "full_signature": "private boolean isPaused()", "class_method_signature": "DebuggerSessionImpl.isPaused()", "testcase": false, "constructor": false}, {"identifier": "runModeCommand", "parameters": "(final IDebuggerCommand command)", "modifiers": "private", "return": "IDebuggerCommand", "signature": "IDebuggerCommand runModeCommand(final IDebuggerCommand command)", "full_signature": "private IDebuggerCommand runModeCommand(final IDebuggerCommand command)", "class_method_signature": "DebuggerSessionImpl.runModeCommand(final IDebuggerCommand command)", "testcase": false, "constructor": false}, {"identifier": "stopModeCommand", "parameters": "(final IDebuggerCommand command)", "modifiers": "private", "return": "IDebuggerCommand", "signature": "IDebuggerCommand stopModeCommand(final IDebuggerCommand command)", "full_signature": "private IDebuggerCommand stopModeCommand(final IDebuggerCommand command)", "class_method_signature": "DebuggerSessionImpl.stopModeCommand(final IDebuggerCommand command)", "testcase": false, "constructor": false}, {"identifier": "pauseModeCommand", "parameters": "(final IDebuggerCommand command)", "modifiers": "private", "return": "IDebuggerCommand", "signature": "IDebuggerCommand pauseModeCommand(final IDebuggerCommand command)", "full_signature": "private IDebuggerCommand pauseModeCommand(final IDebuggerCommand command)", "class_method_signature": "DebuggerSessionImpl.pauseModeCommand(final IDebuggerCommand command)", "testcase": false, "constructor": false}, {"identifier": "startDebugging", "parameters": "(final Object arg)", "modifiers": "private", "return": "Object", "signature": "Object startDebugging(final Object arg)", "full_signature": "private Object startDebugging(final Object arg)", "class_method_signature": "DebuggerSessionImpl.startDebugging(final Object arg)", "testcase": false, "constructor": false}, {"identifier": "continueDebugging", "parameters": "(final Object arg)", "modifiers": "private", "return": "Object", "signature": "Object continueDebugging(final Object arg)", "full_signature": "private Object continueDebugging(final Object arg)", "class_method_signature": "DebuggerSessionImpl.continueDebugging(final Object arg)", "testcase": false, "constructor": false}, {"identifier": "processException", "parameters": "(final Object arg)", "modifiers": "private", "return": "Object", "signature": "Object processException(final Object arg)", "full_signature": "private Object processException(final Object arg)", "class_method_signature": "DebuggerSessionImpl.processException(final Object arg)", "testcase": false, "constructor": false}, {"identifier": "stopDebugging", "parameters": "(final Object arg)", "modifiers": "private", "return": "Object", "signature": "Object stopDebugging(final Object arg)", "full_signature": "private Object stopDebugging(final Object arg)", "class_method_signature": "DebuggerSessionImpl.stopDebugging(final Object arg)", "testcase": false, "constructor": false}, {"identifier": "setStepMode", "parameters": "(final Object arg)", "modifiers": "private", "return": "Object", "signature": "Object setStepMode(final Object arg)", "full_signature": "private Object setStepMode(final Object arg)", "class_method_signature": "DebuggerSessionImpl.setStepMode(final Object arg)", "testcase": false, "constructor": false}, {"identifier": "getStackTrace", "parameters": "(final Object arg)", "modifiers": "private", "return": "Object", "signature": "Object getStackTrace(final Object arg)", "full_signature": "private Object getStackTrace(final Object arg)", "class_method_signature": "DebuggerSessionImpl.getStackTrace(final Object arg)", "testcase": false, "constructor": false}, {"identifier": "setMessageField", "parameters": "(final Object arg)", "modifiers": "private", "return": "Object", "signature": "Object setMessageField(final Object arg)", "full_signature": "private Object setMessageField(final Object arg)", "class_method_signature": "DebuggerSessionImpl.setMessageField(final Object arg)", "testcase": false, "constructor": false}, {"identifier": "goTo", "parameters": "(final Object arg)", "modifiers": "private", "return": "Object", "signature": "Object goTo(final Object arg)", "full_signature": "private Object goTo(final Object arg)", "class_method_signature": "DebuggerSessionImpl.goTo(final Object arg)", "testcase": false, "constructor": false}, {"identifier": "call", "parameters": "(final Object arg)", "modifiers": "private", "return": "Object", "signature": "Object call(final Object arg)", "full_signature": "private Object call(final Object arg)", "class_method_signature": "DebuggerSessionImpl.call(final Object arg)", "testcase": false, "constructor": false}], "file": "CoreFeatures/Debugger/DebuggerSessionImpl/src/main/java/info/smart_tools/smartactors/debugger/session_impl/DebuggerSessionImpl.java"}, "focal_method": {"identifier": "handleInterrupt", "parameters": "(final IMessageProcessor messageProcessor)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void handleInterrupt(final IMessageProcessor messageProcessor)\n            throws InterruptProcessingException {\n        if (messageProcessor != processor || !isRunning()) {\n            return;\n        }\n\n        try {\n            if (prePaused\n                    || sequence.getCurrentLevel() <= stepModeMaxDepth\n                    || sequence.isCompleted()\n                    || breakpointsStorage.shouldBreakAt(sequence)) {\n                pauseProcessor();\n            } else\n            //noinspection ThrowableResultOfMethodCallIgnored\n            if (sequence.getException() != null) {\n                if (breakOnException) {\n                    pauseProcessor();\n                } else if (!sequence.processException()) {\n                    pauseProcessor();\n                }\n            }\n        } catch (AsynchronousOperationException | BreakpointStorageException e) {\n            throw new InterruptProcessingException(\"Error occurred pausing processing of debuggable message.\", e);\n        }\n    }", "signature": "void handleInterrupt(final IMessageProcessor messageProcessor)", "full_signature": "@Override public void handleInterrupt(final IMessageProcessor messageProcessor)", "class_method_signature": "DebuggerSessionImpl.handleInterrupt(final IMessageProcessor messageProcessor)", "testcase": false, "constructor": false, "invocations": ["isRunning", "getCurrentLevel", "isCompleted", "shouldBreakAt", "pauseProcessor", "getException", "pauseProcessor", "processException", "pauseProcessor"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}