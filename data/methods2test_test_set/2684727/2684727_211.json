{"test_class": {"identifier": "ReceiptsTableTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final double PRICE_1 = 12.55d;", "modifier": "private static final", "type": "double", "declarator": "PRICE_1 = 12.55d", "var_name": "PRICE_1"}, {"original_string": "private static final String NAME_1 = \"Name1\";", "modifier": "private static final", "type": "String", "declarator": "NAME_1 = \"Name1\"", "var_name": "NAME_1"}, {"original_string": "private static final int TRIP_ID_1 = 96;", "modifier": "private static final", "type": "int", "declarator": "TRIP_ID_1 = 96", "var_name": "TRIP_ID_1"}, {"original_string": "private static final Date DATE_1 = new Date(1200000000000L);", "modifier": "private static final", "type": "Date", "declarator": "DATE_1 = new Date(1200000000000L)", "var_name": "DATE_1"}, {"original_string": "private static final UUID UUID_1 = UUID.randomUUID();", "modifier": "private static final", "type": "UUID", "declarator": "UUID_1 = UUID.randomUUID()", "var_name": "UUID_1"}, {"original_string": "private static final double PRICE_2 = 140d;", "modifier": "private static final", "type": "double", "declarator": "PRICE_2 = 140d", "var_name": "PRICE_2"}, {"original_string": "private static final String NAME_2 = \"Name2\";", "modifier": "private static final", "type": "String", "declarator": "NAME_2 = \"Name2\"", "var_name": "NAME_2"}, {"original_string": "private static final int TRIP_ID_2 = 97;", "modifier": "private static final", "type": "int", "declarator": "TRIP_ID_2 = 97", "var_name": "TRIP_ID_2"}, {"original_string": "public static final Date DATE_2 = new Date(1300000000000L);", "modifier": "public static final", "type": "Date", "declarator": "DATE_2 = new Date(1300000000000L)", "var_name": "DATE_2"}, {"original_string": "private static final UUID UUID_2 = UUID.randomUUID();", "modifier": "private static final", "type": "UUID", "declarator": "UUID_2 = UUID.randomUUID()", "var_name": "UUID_2"}, {"original_string": "private static final double PRICE_3 = 12.123;", "modifier": "private static final", "type": "double", "declarator": "PRICE_3 = 12.123", "var_name": "PRICE_3"}, {"original_string": "private static final String NAME_3 = \"Name3\";", "modifier": "private static final", "type": "String", "declarator": "NAME_3 = \"Name3\"", "var_name": "NAME_3"}, {"original_string": "private static final int TRIP_ID_3 = 98;", "modifier": "private static final", "type": "int", "declarator": "TRIP_ID_3 = 98", "var_name": "TRIP_ID_3"}, {"original_string": "public static final Date DATE_3 = new Date(1400000000000L);", "modifier": "public static final", "type": "Date", "declarator": "DATE_3 = new Date(1400000000000L)", "var_name": "DATE_3"}, {"original_string": "private static final UUID UUID_3 = UUID.randomUUID();", "modifier": "private static final", "type": "UUID", "declarator": "UUID_3 = UUID.randomUUID()", "var_name": "UUID_3"}, {"original_string": "private static final String CURRENCY_CODE = \"USD\";", "modifier": "private static final", "type": "String", "declarator": "CURRENCY_CODE = \"USD\"", "var_name": "CURRENCY_CODE"}, {"original_string": "ReceiptsTable mReceiptsTable;", "modifier": "", "type": "ReceiptsTable", "declarator": "mReceiptsTable", "var_name": "mReceiptsTable"}, {"original_string": "@Mock\n    SQLiteDatabase mSQLiteDatabase;", "modifier": "@Mock", "type": "SQLiteDatabase", "declarator": "mSQLiteDatabase", "var_name": "mSQLiteDatabase"}, {"original_string": "@Mock\n    TableDefaultsCustomizer mTableDefaultsCustomizer;", "modifier": "@Mock", "type": "TableDefaultsCustomizer", "declarator": "mTableDefaultsCustomizer", "var_name": "mTableDefaultsCustomizer"}, {"original_string": "@Mock\n    Table<Trip> mTripsTable;", "modifier": "@Mock", "type": "Table<Trip>", "declarator": "mTripsTable", "var_name": "mTripsTable"}, {"original_string": "@Mock\n    Table<PaymentMethod> mPaymentMethodTable;", "modifier": "@Mock", "type": "Table<PaymentMethod>", "declarator": "mPaymentMethodTable", "var_name": "mPaymentMethodTable"}, {"original_string": "@Mock\n    Table<Category> mCategoryTable;", "modifier": "@Mock", "type": "Table<Category>", "declarator": "mCategoryTable", "var_name": "mCategoryTable"}, {"original_string": "@Mock\n    PersistenceManager mPersistenceManager;", "modifier": "@Mock", "type": "PersistenceManager", "declarator": "mPersistenceManager", "var_name": "mPersistenceManager"}, {"original_string": "@Mock\n    OrderingPreferencesManager orderingPreferencesManager;", "modifier": "@Mock", "type": "OrderingPreferencesManager", "declarator": "orderingPreferencesManager", "var_name": "orderingPreferencesManager"}, {"original_string": "@Mock\n    StorageManager mStorageManager;", "modifier": "@Mock", "type": "StorageManager", "declarator": "mStorageManager", "var_name": "mStorageManager"}, {"original_string": "@Mock\n    UserPreferenceManager mPreferences;", "modifier": "@Mock", "type": "UserPreferenceManager", "declarator": "mPreferences", "var_name": "mPreferences"}, {"original_string": "@Mock\n    Trip mTrip1;", "modifier": "@Mock", "type": "Trip", "declarator": "mTrip1", "var_name": "mTrip1"}, {"original_string": "@Mock\n    Trip mTrip2;", "modifier": "@Mock", "type": "Trip", "declarator": "mTrip2", "var_name": "mTrip2"}, {"original_string": "@Mock\n    Trip mTrip3;", "modifier": "@Mock", "type": "Trip", "declarator": "mTrip3", "var_name": "mTrip3"}, {"original_string": "@Mock\n    Category mCategory;", "modifier": "@Mock", "type": "Category", "declarator": "mCategory", "var_name": "mCategory"}, {"original_string": "@Mock\n    PaymentMethod mPaymentMethod;", "modifier": "@Mock", "type": "PaymentMethod", "declarator": "mPaymentMethod", "var_name": "mPaymentMethod"}, {"original_string": "@Captor\n    ArgumentCaptor<String> mSqlCaptor;", "modifier": "@Captor", "type": "ArgumentCaptor<String>", "declarator": "mSqlCaptor", "var_name": "mSqlCaptor"}, {"original_string": "SQLiteOpenHelper mSQLiteOpenHelper;", "modifier": "", "type": "SQLiteOpenHelper", "declarator": "mSQLiteOpenHelper", "var_name": "mSQLiteOpenHelper"}, {"original_string": "Receipt mReceipt1;", "modifier": "", "type": "Receipt", "declarator": "mReceipt1", "var_name": "mReceipt1"}, {"original_string": "Receipt mReceipt2;", "modifier": "", "type": "Receipt", "declarator": "mReceipt2", "var_name": "mReceipt2"}, {"original_string": "ReceiptBuilderFactory mBuilder;", "modifier": "", "type": "ReceiptBuilderFactory", "declarator": "mBuilder", "var_name": "mBuilder"}], "file": "app/src/test/java/co/smartreceipts/android/persistence/database/tables/ReceiptsTableTest.java"}, "test_case": {"identifier": "onCreate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onCreate() {\n        final TableDefaultsCustomizer customizer = mock(TableDefaultsCustomizer.class);\n        mReceiptsTable.onCreate(mSQLiteDatabase, customizer);\n        verify(mSQLiteDatabase).execSQL(mSqlCaptor.capture());\n        verifyZeroInteractions(customizer);\n\n        final String creatingTable = mSqlCaptor.getValue();\n        assertTrue(creatingTable.contains(\"CREATE TABLE receipts\"));\n        assertTrue(creatingTable.contains(\"id INTEGER PRIMARY KEY AUTOINCREMENT\"));\n        assertTrue(creatingTable.contains(\"path TEXT\"));\n        assertTrue(creatingTable.contains(\"name TEXT\"));\n        assertTrue(creatingTable.contains(\"parentKey INTEGER\"));\n        assertTrue(creatingTable.contains(\"categoryKey INTEGER\"));\n        assertTrue(creatingTable.contains(\"price DECIMAL(10, 2)\"));\n        assertTrue(creatingTable.contains(\"tax DECIMAL(10, 2)\"));\n        assertTrue(creatingTable.contains(\"tax2 DECIMAL(10, 2)\"));\n        assertTrue(creatingTable.contains(\"exchange_rate DECIMAL(10, 10)\"));\n        assertTrue(creatingTable.contains(\"rcpt_date DATE\"));\n        assertTrue(creatingTable.contains(\"timezone TEXT\"));\n        assertTrue(creatingTable.contains(\"comment TEXT\"));\n        assertTrue(creatingTable.contains(\"expenseable BOOLEAN\"));\n        assertTrue(creatingTable.contains(\"isocode TEXT\"));\n        assertTrue(creatingTable.contains(\"paymentMethodKey INTEGER\"));\n        assertTrue(creatingTable.contains(\"fullpageimage BOOLEAN\"));\n        assertTrue(creatingTable.contains(\"receipt_processing_status TEXT\"));\n        assertTrue(creatingTable.contains(\"extra_edittext_1 TEXT\"));\n        assertTrue(creatingTable.contains(\"extra_edittext_2 TEXT\"));\n        assertTrue(creatingTable.contains(\"extra_edittext_3 TEXT\"));\n        assertTrue(creatingTable.contains(\"drive_sync_id TEXT\"));\n        assertTrue(creatingTable.contains(\"drive_is_synced BOOLEAN DEFAULT 0\"));\n        assertTrue(creatingTable.contains(\"drive_marked_for_deletion BOOLEAN DEFAULT 0\"));\n        assertTrue(creatingTable.contains(\"last_local_modification_time DATE\"));\n        assertTrue(creatingTable.contains(\"custom_order_id INTEGER DEFAULT 0\"));\n        assertTrue(creatingTable.contains(\"uuid TEXT\"));\n        assertTrue(creatingTable.contains(\"name_hidden_auto_complete BOOLEAN DEFAULT 0\"));\n        assertTrue(creatingTable.contains(\"comment_hidden_auto_complete BOOLEAN DEFAULT 0\"));\n    }", "signature": "void onCreate()", "full_signature": "@Test public void onCreate()", "class_method_signature": "ReceiptsTableTest.onCreate()", "testcase": true, "constructor": false, "invocations": ["mock", "onCreate", "execSQL", "verify", "capture", "verifyZeroInteractions", "getValue", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "ReceiptsTable", "superclass": "extends TripForeignKeyAbstractSqlTable<Receipt>", "interfaces": "", "fields": [{"original_string": "public static final String TABLE_NAME = \"receipts\";", "modifier": "public static final", "type": "String", "declarator": "TABLE_NAME = \"receipts\"", "var_name": "TABLE_NAME"}, {"original_string": "public static final String COLUMN_PATH = \"path\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_PATH = \"path\"", "var_name": "COLUMN_PATH"}, {"original_string": "public static final String COLUMN_NAME = \"name\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_NAME = \"name\"", "var_name": "COLUMN_NAME"}, {"original_string": "public static final String COLUMN_PARENT_TRIP_ID = \"parentKey\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_PARENT_TRIP_ID = \"parentKey\"", "var_name": "COLUMN_PARENT_TRIP_ID"}, {"original_string": "public static final String COLUMN_CATEGORY_ID = \"categoryKey\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_CATEGORY_ID = \"categoryKey\"", "var_name": "COLUMN_CATEGORY_ID"}, {"original_string": "public static final String COLUMN_PRICE = \"price\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_PRICE = \"price\"", "var_name": "COLUMN_PRICE"}, {"original_string": "public static final String COLUMN_TAX = \"tax\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_TAX = \"tax\"", "var_name": "COLUMN_TAX"}, {"original_string": "public static final String COLUMN_TAX2 = \"tax2\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_TAX2 = \"tax2\"", "var_name": "COLUMN_TAX2"}, {"original_string": "public static final String COLUMN_EXCHANGE_RATE = \"exchange_rate\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_EXCHANGE_RATE = \"exchange_rate\"", "var_name": "COLUMN_EXCHANGE_RATE"}, {"original_string": "public static final String COLUMN_DATE = \"rcpt_date\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_DATE = \"rcpt_date\"", "var_name": "COLUMN_DATE"}, {"original_string": "public static final String COLUMN_TIMEZONE = \"timezone\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_TIMEZONE = \"timezone\"", "var_name": "COLUMN_TIMEZONE"}, {"original_string": "public static final String COLUMN_COMMENT = \"comment\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_COMMENT = \"comment\"", "var_name": "COLUMN_COMMENT"}, {"original_string": "public static final String COLUMN_REIMBURSABLE = \"expenseable\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_REIMBURSABLE = \"expenseable\"", "var_name": "COLUMN_REIMBURSABLE"}, {"original_string": "public static final String COLUMN_ISO4217 = \"isocode\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_ISO4217 = \"isocode\"", "var_name": "COLUMN_ISO4217"}, {"original_string": "public static final String COLUMN_PAYMENT_METHOD_ID = \"paymentMethodKey\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_PAYMENT_METHOD_ID = \"paymentMethodKey\"", "var_name": "COLUMN_PAYMENT_METHOD_ID"}, {"original_string": "public static final String COLUMN_NOTFULLPAGEIMAGE = \"fullpageimage\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_NOTFULLPAGEIMAGE = \"fullpageimage\"", "var_name": "COLUMN_NOTFULLPAGEIMAGE"}, {"original_string": "public static final String COLUMN_PROCESSING_STATUS = \"receipt_processing_status\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_PROCESSING_STATUS = \"receipt_processing_status\"", "var_name": "COLUMN_PROCESSING_STATUS"}, {"original_string": "public static final String COLUMN_NAME_HIDDEN_AUTO_COMPLETE = \"name_hidden_auto_complete\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_NAME_HIDDEN_AUTO_COMPLETE = \"name_hidden_auto_complete\"", "var_name": "COLUMN_NAME_HIDDEN_AUTO_COMPLETE"}, {"original_string": "public static final String COLUMN_COMMENT_HIDDEN_AUTO_COMPLETE = \"comment_hidden_auto_complete\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_COMMENT_HIDDEN_AUTO_COMPLETE = \"comment_hidden_auto_complete\"", "var_name": "COLUMN_COMMENT_HIDDEN_AUTO_COMPLETE"}, {"original_string": "public static final String COLUMN_EXTRA_EDITTEXT_1 = \"extra_edittext_1\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_EXTRA_EDITTEXT_1 = \"extra_edittext_1\"", "var_name": "COLUMN_EXTRA_EDITTEXT_1"}, {"original_string": "public static final String COLUMN_EXTRA_EDITTEXT_2 = \"extra_edittext_2\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_EXTRA_EDITTEXT_2 = \"extra_edittext_2\"", "var_name": "COLUMN_EXTRA_EDITTEXT_2"}, {"original_string": "public static final String COLUMN_EXTRA_EDITTEXT_3 = \"extra_edittext_3\";", "modifier": "public static final", "type": "String", "declarator": "COLUMN_EXTRA_EDITTEXT_3 = \"extra_edittext_3\"", "var_name": "COLUMN_EXTRA_EDITTEXT_3"}, {"original_string": "@Deprecated\n    public static final String COLUMN_PARENT = \"parent\";", "modifier": "@Deprecated\n    public static final", "type": "String", "declarator": "COLUMN_PARENT = \"parent\"", "var_name": "COLUMN_PARENT"}, {"original_string": "private final UserPreferenceManager userPreferenceManager;", "modifier": "private final", "type": "UserPreferenceManager", "declarator": "userPreferenceManager", "var_name": "userPreferenceManager"}], "methods": [{"identifier": "ReceiptsTable", "parameters": "(@NonNull SQLiteOpenHelper sqLiteOpenHelper,\n                         @NonNull Table<Trip> tripsTable,\n                         @NonNull Table<PaymentMethod> paymentMethodTable,\n                         @NonNull Table<Category> categoryTable,\n                         @NonNull StorageManager storageManager,\n                         @NonNull UserPreferenceManager preferences,\n                         @NonNull OrderingPreferencesManager orderingPreferencesManager)", "modifiers": "public", "return": "", "signature": " ReceiptsTable(@NonNull SQLiteOpenHelper sqLiteOpenHelper,\n                         @NonNull Table<Trip> tripsTable,\n                         @NonNull Table<PaymentMethod> paymentMethodTable,\n                         @NonNull Table<Category> categoryTable,\n                         @NonNull StorageManager storageManager,\n                         @NonNull UserPreferenceManager preferences,\n                         @NonNull OrderingPreferencesManager orderingPreferencesManager)", "full_signature": "public  ReceiptsTable(@NonNull SQLiteOpenHelper sqLiteOpenHelper,\n                         @NonNull Table<Trip> tripsTable,\n                         @NonNull Table<PaymentMethod> paymentMethodTable,\n                         @NonNull Table<Category> categoryTable,\n                         @NonNull StorageManager storageManager,\n                         @NonNull UserPreferenceManager preferences,\n                         @NonNull OrderingPreferencesManager orderingPreferencesManager)", "class_method_signature": "ReceiptsTable.ReceiptsTable(@NonNull SQLiteOpenHelper sqLiteOpenHelper,\n                         @NonNull Table<Trip> tripsTable,\n                         @NonNull Table<PaymentMethod> paymentMethodTable,\n                         @NonNull Table<Category> categoryTable,\n                         @NonNull StorageManager storageManager,\n                         @NonNull UserPreferenceManager preferences,\n                         @NonNull OrderingPreferencesManager orderingPreferencesManager)", "testcase": false, "constructor": true}, {"identifier": "onCreate", "parameters": "(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void onCreate(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer)", "full_signature": "@Override public synchronized void onCreate(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer)", "class_method_signature": "ReceiptsTable.onCreate(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer)", "testcase": false, "constructor": false}, {"identifier": "onUpgrade", "parameters": "(@NonNull SQLiteDatabase db, int oldVersion, int newVersion, @NonNull TableDefaultsCustomizer customizer)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void onUpgrade(@NonNull SQLiteDatabase db, int oldVersion, int newVersion, @NonNull TableDefaultsCustomizer customizer)", "full_signature": "@Override public synchronized void onUpgrade(@NonNull SQLiteDatabase db, int oldVersion, int newVersion, @NonNull TableDefaultsCustomizer customizer)", "class_method_signature": "ReceiptsTable.onUpgrade(@NonNull SQLiteDatabase db, int oldVersion, int newVersion, @NonNull TableDefaultsCustomizer customizer)", "testcase": false, "constructor": false}, {"identifier": "moveDataToCopyTableAndRename", "parameters": "(@NonNull SQLiteDatabase db, String dataColumns)", "modifiers": "private", "return": "void", "signature": "void moveDataToCopyTableAndRename(@NonNull SQLiteDatabase db, String dataColumns)", "full_signature": "private void moveDataToCopyTableAndRename(@NonNull SQLiteDatabase db, String dataColumns)", "class_method_signature": "ReceiptsTable.moveDataToCopyTableAndRename(@NonNull SQLiteDatabase db, String dataColumns)", "testcase": false, "constructor": false}, {"identifier": "getTripFor", "parameters": "(@NonNull Receipt receipt)", "modifiers": "@NonNull @Override protected", "return": "Trip", "signature": "Trip getTripFor(@NonNull Receipt receipt)", "full_signature": "@NonNull @Override protected Trip getTripFor(@NonNull Receipt receipt)", "class_method_signature": "ReceiptsTable.getTripFor(@NonNull Receipt receipt)", "testcase": false, "constructor": false}, {"identifier": "deleteBlocking", "parameters": "(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "modifiers": "@Override public synchronized", "return": "Optional<Receipt>", "signature": "Optional<Receipt> deleteBlocking(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "full_signature": "@Override public synchronized Optional<Receipt> deleteBlocking(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "class_method_signature": "ReceiptsTable.deleteBlocking(@NonNull Receipt receipt, @NonNull DatabaseOperationMetadata databaseOperationMetadata)", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/persistence/database/tables/ReceiptsTable.java"}, "focal_method": {"identifier": "onCreate", "parameters": "(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer)", "modifiers": "@Override public synchronized", "return": "void", "body": "@Override\n    public synchronized void onCreate(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer) {\n        super.onCreate(db, customizer);\n        final String receipts = \"CREATE TABLE \" + ReceiptsTable.TABLE_NAME + \" (\"\n                + ReceiptsTable.COLUMN_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT, \"\n                + ReceiptsTable.COLUMN_PATH + \" TEXT, \"\n                + ReceiptsTable.COLUMN_PARENT_TRIP_ID + \" INTEGER REFERENCES \" + TripsTable.TABLE_NAME + \" ON DELETE CASCADE, \"\n                + ReceiptsTable.COLUMN_NAME + \" TEXT DEFAULT \\\"New Receipt\\\", \"\n                + ReceiptsTable.COLUMN_CATEGORY_ID + \" INTEGER REFERENCES \" + CategoriesTable.TABLE_NAME + \" ON DELETE NO ACTION, \"\n                + ReceiptsTable.COLUMN_DATE + \" DATE DEFAULT (DATE('now', 'localtime')), \"\n                + ReceiptsTable.COLUMN_TIMEZONE + \" TEXT, \"\n                + ReceiptsTable.COLUMN_COMMENT + \" TEXT, \"\n                + ReceiptsTable.COLUMN_ISO4217 + \" TEXT NOT NULL, \"\n                + ReceiptsTable.COLUMN_PRICE + \" DECIMAL(10, 2) DEFAULT 0.00, \"\n                + ReceiptsTable.COLUMN_TAX + \" DECIMAL(10, 2) DEFAULT 0.00, \"\n                + ReceiptsTable.COLUMN_TAX2 + \" DECIMAL(10, 2) DEFAULT 0.00, \"\n                + ReceiptsTable.COLUMN_EXCHANGE_RATE + \" DECIMAL(10, 10) DEFAULT -1.00, \"\n                + ReceiptsTable.COLUMN_PAYMENT_METHOD_ID + \" INTEGER REFERENCES \" + PaymentMethodsTable.TABLE_NAME + \" ON DELETE NO ACTION, \"\n                + ReceiptsTable.COLUMN_REIMBURSABLE + \" BOOLEAN DEFAULT 1, \"\n                + ReceiptsTable.COLUMN_NOTFULLPAGEIMAGE + \" BOOLEAN DEFAULT 1, \"\n                + ReceiptsTable.COLUMN_PROCESSING_STATUS + \" TEXT, \"\n                + ReceiptsTable.COLUMN_NAME_HIDDEN_AUTO_COMPLETE + \" BOOLEAN DEFAULT 0, \"\n                + ReceiptsTable.COLUMN_COMMENT_HIDDEN_AUTO_COMPLETE + \" BOOLEAN DEFAULT 0, \"\n                + ReceiptsTable.COLUMN_EXTRA_EDITTEXT_1 + \" TEXT, \"\n                + ReceiptsTable.COLUMN_EXTRA_EDITTEXT_2 + \" TEXT, \"\n                + ReceiptsTable.COLUMN_EXTRA_EDITTEXT_3 + \" TEXT, \"\n                + AbstractSqlTable.COLUMN_DRIVE_SYNC_ID + \" TEXT, \"\n                + AbstractSqlTable.COLUMN_DRIVE_IS_SYNCED + \" BOOLEAN DEFAULT 0, \"\n                + AbstractSqlTable.COLUMN_DRIVE_MARKED_FOR_DELETION + \" BOOLEAN DEFAULT 0, \"\n                + AbstractSqlTable.COLUMN_LAST_LOCAL_MODIFICATION_TIME + \" DATE, \"\n                + AbstractSqlTable.COLUMN_CUSTOM_ORDER_ID + \" INTEGER DEFAULT 0, \"\n                + AbstractSqlTable.COLUMN_UUID + \" TEXT \"\n                + \");\";\n        Logger.debug(this, receipts);\n        db.execSQL(receipts);\n    }", "signature": "void onCreate(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer)", "full_signature": "@Override public synchronized void onCreate(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer)", "class_method_signature": "ReceiptsTable.onCreate(@NonNull SQLiteDatabase db, @NonNull TableDefaultsCustomizer customizer)", "testcase": false, "constructor": false, "invocations": ["onCreate", "debug", "execSQL"]}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}