{"test_class": {"identifier": "TestConduitMetrics", "superclass": "", "interfaces": "", "fields": [], "file": "conduit-core/src/test/java/com/inmobi/conduit/metrics/TestConduitMetrics.java"}, "test_case": {"identifier": "testRegisterAbsoluteGauge", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRegisterAbsoluteGauge() {\n    final String abGaugeName = \"test.abs.guage\";\n    AbsoluteGauge abGauge = ConduitMetrics.registerAbsoluteGauge(abGaugeName, 5);\n    Assert.assertNotNull(abGauge);\n    Assert.assertEquals(abGauge.getValue(), 5);\n    abGauge.setValue(2);\n    Assert.assertEquals(abGauge.getValue(), 2);\n    abGauge = ConduitMetrics.registerAbsoluteGauge(abGaugeName, 5);\n    Assert.assertNull(abGauge);\n\n  }", "signature": "void testRegisterAbsoluteGauge()", "full_signature": "@Test public void testRegisterAbsoluteGauge()", "class_method_signature": "TestConduitMetrics.testRegisterAbsoluteGauge()", "testcase": true, "constructor": false, "invocations": ["registerAbsoluteGauge", "assertNotNull", "assertEquals", "getValue", "setValue", "assertEquals", "getValue", "registerAbsoluteGauge", "assertNull"]}, "focal_class": {"identifier": "ConduitMetrics", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static String GANGLIA = \"com.inmobi.conduit.metrics.ganglia\";", "modifier": "private final static", "type": "String", "declarator": "GANGLIA = \"com.inmobi.conduit.metrics.ganglia\"", "var_name": "GANGLIA"}, {"original_string": "private final static String CONSOLE = \"com.inmobi.conduit.metrics.console\";", "modifier": "private final static", "type": "String", "declarator": "CONSOLE = \"com.inmobi.conduit.metrics.console\"", "var_name": "CONSOLE"}, {"original_string": "private final static String GANGLIA_SERVERNAME = \"com.inmobi.conduit.metrics.ganglia.serverName\";", "modifier": "private final static", "type": "String", "declarator": "GANGLIA_SERVERNAME = \"com.inmobi.conduit.metrics.ganglia.serverName\"", "var_name": "GANGLIA_SERVERNAME"}, {"original_string": "private final static String GANGLIA_PORT = \"com.inmobi.conduit.metrics.ganglia.port\";", "modifier": "private final static", "type": "String", "declarator": "GANGLIA_PORT = \"com.inmobi.conduit.metrics.ganglia.port\"", "var_name": "GANGLIA_PORT"}, {"original_string": "private final static String REPORTING_PERIOD = \"com.inmobi.conduit.metrics.period\";", "modifier": "private final static", "type": "String", "declarator": "REPORTING_PERIOD = \"com.inmobi.conduit.metrics.period\"", "var_name": "REPORTING_PERIOD"}, {"original_string": "private final static String IS_ENABLED_PROPERTY=\"com.inmobi.conduit.metrics.enabled\";", "modifier": "private final static", "type": "String", "declarator": "IS_ENABLED_PROPERTY=\"com.inmobi.conduit.metrics.enabled\"", "var_name": "IS_ENABLED_PROPERTY"}, {"original_string": "private final static String LOCAL_SERVICE = \"LocalStreamService\";", "modifier": "private final static", "type": "String", "declarator": "LOCAL_SERVICE = \"LocalStreamService\"", "var_name": "LOCAL_SERVICE"}, {"original_string": "private final static String MERGED_SERVICE = \"MergedStreamService\";", "modifier": "private final static", "type": "String", "declarator": "MERGED_SERVICE = \"MergedStreamService\"", "var_name": "MERGED_SERVICE"}, {"original_string": "private final static String MIRROR_SERVICE = \"MirrorStreamService\";", "modifier": "private final static", "type": "String", "declarator": "MIRROR_SERVICE = \"MirrorStreamService\"", "var_name": "MIRROR_SERVICE"}, {"original_string": "private final static String PURGER_SERVICE = \"DataPurgerService\";", "modifier": "private final static", "type": "String", "declarator": "PURGER_SERVICE = \"DataPurgerService\"", "var_name": "PURGER_SERVICE"}, {"original_string": "private final static String SLIDING_WINDOW_TIME =\"com.inmobi.conduit.metrics.slidingwindowtime\";", "modifier": "private final static", "type": "String", "declarator": "SLIDING_WINDOW_TIME =\"com.inmobi.conduit.metrics.slidingwindowtime\"", "var_name": "SLIDING_WINDOW_TIME"}, {"original_string": "private final static Map<String, ScheduledReporter> reporterMap =\n      new HashMap<String, ScheduledReporter>();", "modifier": "private final static", "type": "Map<String, ScheduledReporter>", "declarator": "reporterMap =\n      new HashMap<String, ScheduledReporter>()", "var_name": "reporterMap"}, {"original_string": "private static final Log LOG = LogFactory.getLog(ConduitMetrics.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(ConduitMetrics.class)", "var_name": "LOG"}, {"original_string": "private static boolean isEnabled =false;", "modifier": "private static", "type": "boolean", "declarator": "isEnabled =false", "var_name": "isEnabled"}, {"original_string": "private static int timeBetweenPolls = 10;", "modifier": "private static", "type": "int", "declarator": "timeBetweenPolls = 10", "var_name": "timeBetweenPolls"}, {"original_string": "private static int slidingwindowtime= 0;", "modifier": "private static", "type": "int", "declarator": "slidingwindowtime= 0", "var_name": "slidingwindowtime"}, {"original_string": "private static MetricRegistry registry;", "modifier": "private static", "type": "MetricRegistry", "declarator": "registry", "var_name": "registry"}, {"original_string": "private final static Map<String, Map<String, Map<String, Metric>>> threeLevelCache =\n      new HashMap<String, Map<String, Map<String, Metric>>>();", "modifier": "private final static", "type": "Map<String, Map<String, Map<String, Metric>>>", "declarator": "threeLevelCache =\n      new HashMap<String, Map<String, Map<String, Metric>>>()", "var_name": "threeLevelCache"}], "methods": [{"identifier": "init", "parameters": "(Properties config)", "modifiers": "public static", "return": "void", "signature": "void init(Properties config)", "full_signature": "public static void init(Properties config)", "class_method_signature": "ConduitMetrics.init(Properties config)", "testcase": false, "constructor": false}, {"identifier": "startAll", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void startAll()", "full_signature": "public static void startAll()", "class_method_signature": "ConduitMetrics.startAll()", "testcase": false, "constructor": false}, {"identifier": "stopAll", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void stopAll()", "full_signature": "public static void stopAll()", "class_method_signature": "ConduitMetrics.stopAll()", "testcase": false, "constructor": false}, {"identifier": "registerAbsoluteGauge", "parameters": "(String serviceName,\n                                                    String counterType,\n                                                    String context)", "modifiers": "public static", "return": "AbsoluteGauge", "signature": "AbsoluteGauge registerAbsoluteGauge(String serviceName,\n                                                    String counterType,\n                                                    String context)", "full_signature": "public static AbsoluteGauge registerAbsoluteGauge(String serviceName,\n                                                    String counterType,\n                                                    String context)", "class_method_signature": "ConduitMetrics.registerAbsoluteGauge(String serviceName,\n                                                    String counterType,\n                                                    String context)", "testcase": false, "constructor": false}, {"identifier": "registerAbsoluteGauge", "parameters": "(String name,\n      Number initalValue)", "modifiers": "public static", "return": "AbsoluteGauge", "signature": "AbsoluteGauge registerAbsoluteGauge(String name,\n      Number initalValue)", "full_signature": "public static AbsoluteGauge registerAbsoluteGauge(String name,\n      Number initalValue)", "class_method_signature": "ConduitMetrics.registerAbsoluteGauge(String name,\n      Number initalValue)", "testcase": false, "constructor": false}, {"identifier": "updateAbsoluteGauge", "parameters": "(String serviceName,\n                                         String counterType,\n                                         String context, Number value)", "modifiers": "public static", "return": "void", "signature": "void updateAbsoluteGauge(String serviceName,\n                                         String counterType,\n                                         String context, Number value)", "full_signature": "public static void updateAbsoluteGauge(String serviceName,\n                                         String counterType,\n                                         String context, Number value)", "class_method_signature": "ConduitMetrics.updateAbsoluteGauge(String serviceName,\n                                         String counterType,\n                                         String context, Number value)", "testcase": false, "constructor": false}, {"identifier": "registerGauge", "parameters": "(String name, Gauge gaugeInst)", "modifiers": "@SuppressWarnings(\"rawtypes\") public static", "return": "Gauge", "signature": "Gauge registerGauge(String name, Gauge gaugeInst)", "full_signature": "@SuppressWarnings(\"rawtypes\") public static Gauge registerGauge(String name, Gauge gaugeInst)", "class_method_signature": "ConduitMetrics.registerGauge(String name, Gauge gaugeInst)", "testcase": false, "constructor": false}, {"identifier": "registerCounter", "parameters": "(String serviceName,\n      String counterType, String context)", "modifiers": "synchronized public static", "return": "Counter", "signature": "Counter registerCounter(String serviceName,\n      String counterType, String context)", "full_signature": "synchronized public static Counter registerCounter(String serviceName,\n      String counterType, String context)", "class_method_signature": "ConduitMetrics.registerCounter(String serviceName,\n      String counterType, String context)", "testcase": false, "constructor": false}, {"identifier": "createName", "parameters": "(String serviceName,\n      String counterType, String context)", "modifiers": "private static", "return": "String", "signature": "String createName(String serviceName,\n      String counterType, String context)", "full_signature": "private static String createName(String serviceName,\n      String counterType, String context)", "class_method_signature": "ConduitMetrics.createName(String serviceName,\n      String counterType, String context)", "testcase": false, "constructor": false}, {"identifier": "getMetric", "parameters": "(String serviceName,\n\t\t\tString counterType, String context)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "T", "signature": "T getMetric(String serviceName,\n\t\t\tString counterType, String context)", "full_signature": "@SuppressWarnings(\"unchecked\") public static T getMetric(String serviceName,\n\t\t\tString counterType, String context)", "class_method_signature": "ConduitMetrics.getMetric(String serviceName,\n\t\t\tString counterType, String context)", "testcase": false, "constructor": false}, {"identifier": "addToCache", "parameters": "(String serviceName, String counterType,\n\t\t\tString context, Metric any)", "modifiers": "private static", "return": "void", "signature": "void addToCache(String serviceName, String counterType,\n\t\t\tString context, Metric any)", "full_signature": "private static void addToCache(String serviceName, String counterType,\n\t\t\tString context, Metric any)", "class_method_signature": "ConduitMetrics.addToCache(String serviceName, String counterType,\n\t\t\tString context, Metric any)", "testcase": false, "constructor": false}, {"identifier": "getFromCache", "parameters": "(String serviceName, String counterType,\n\t\t\tString context)", "modifiers": "private static", "return": "Metric", "signature": "Metric getFromCache(String serviceName, String counterType,\n\t\t\tString context)", "full_signature": "private static Metric getFromCache(String serviceName, String counterType,\n\t\t\tString context)", "class_method_signature": "ConduitMetrics.getFromCache(String serviceName, String counterType,\n\t\t\tString context)", "testcase": false, "constructor": false}, {"identifier": "incCounter", "parameters": "(String serviceName, String counterType,\n      String context ,long value)", "modifiers": "public static", "return": "void", "signature": "void incCounter(String serviceName, String counterType,\n      String context ,long value)", "full_signature": "public static void incCounter(String serviceName, String counterType,\n      String context ,long value)", "class_method_signature": "ConduitMetrics.incCounter(String serviceName, String counterType,\n      String context ,long value)", "testcase": false, "constructor": false}, {"identifier": "registerSlidingWindowGauge", "parameters": "(String serviceName,\n\t      String counterType, String context)", "modifiers": "public static", "return": "SlidingTimeWindowGauge", "signature": "SlidingTimeWindowGauge registerSlidingWindowGauge(String serviceName,\n\t      String counterType, String context)", "full_signature": "public static SlidingTimeWindowGauge registerSlidingWindowGauge(String serviceName,\n\t      String counterType, String context)", "class_method_signature": "ConduitMetrics.registerSlidingWindowGauge(String serviceName,\n\t      String counterType, String context)", "testcase": false, "constructor": false}, {"identifier": "updateSWGuage", "parameters": "(String serviceName, String counterType,\n\t\t\tString context, long value)", "modifiers": "public static", "return": "void", "signature": "void updateSWGuage(String serviceName, String counterType,\n\t\t\tString context, long value)", "full_signature": "public static void updateSWGuage(String serviceName, String counterType,\n\t\t\tString context, long value)", "class_method_signature": "ConduitMetrics.updateSWGuage(String serviceName, String counterType,\n\t\t\tString context, long value)", "testcase": false, "constructor": false}], "file": "conduit-core/src/main/java/com/inmobi/conduit/metrics/ConduitMetrics.java"}, "focal_method": {"identifier": "registerAbsoluteGauge", "parameters": "(String serviceName,\n                                                    String counterType,\n                                                    String context)", "modifiers": "public static", "return": "AbsoluteGauge", "body": "public static AbsoluteGauge registerAbsoluteGauge(String serviceName,\n                                                    String counterType,\n                                                    String context) {\n    final String metricName = createName(serviceName, counterType, context);\n    AbsoluteGauge metric = registerAbsoluteGauge(metricName, 0);\n    if (metric != null) {\n      addToCache(serviceName, counterType, context, metric);\n    }\n    return metric;\n  }", "signature": "AbsoluteGauge registerAbsoluteGauge(String serviceName,\n                                                    String counterType,\n                                                    String context)", "full_signature": "public static AbsoluteGauge registerAbsoluteGauge(String serviceName,\n                                                    String counterType,\n                                                    String context)", "class_method_signature": "ConduitMetrics.registerAbsoluteGauge(String serviceName,\n                                                    String counterType,\n                                                    String context)", "testcase": false, "constructor": false, "invocations": ["createName", "registerAbsoluteGauge", "addToCache"]}, "repository": {"repo_id": 7218024, "url": "https://github.com/InMobi/conduit", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 9, "size": 49400, "license": "licensed"}}