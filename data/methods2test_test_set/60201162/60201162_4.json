{"test_class": {"identifier": "TestHelixMirrorMakerManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HelixMirrorMakerManager helixMirrorMakerManager;", "modifier": "private", "type": "HelixMirrorMakerManager", "declarator": "helixMirrorMakerManager", "var_name": "helixMirrorMakerManager"}, {"original_string": "private static WorkloadInfoRetriever workloadInfoRetriever = EasyMock.createMock(WorkloadInfoRetriever.class);", "modifier": "private static", "type": "WorkloadInfoRetriever", "declarator": "workloadInfoRetriever = EasyMock.createMock(WorkloadInfoRetriever.class)", "var_name": "workloadInfoRetriever"}, {"original_string": "private static OffsetMonitor offsetMonitor = EasyMock.createNiceMock(OffsetMonitor.class);", "modifier": "private static", "type": "OffsetMonitor", "declarator": "offsetMonitor = EasyMock.createNiceMock(OffsetMonitor.class)", "var_name": "offsetMonitor"}, {"original_string": "private static String clusterName = \"TestHelixMirrorMakerManager\";", "modifier": "private static", "type": "String", "declarator": "clusterName = \"TestHelixMirrorMakerManager\"", "var_name": "clusterName"}, {"original_string": "private static List<String> fakeTopics = Arrays.asList(\"testTopic0\", \"testTopic1\");", "modifier": "private static", "type": "List<String>", "declarator": "fakeTopics = Arrays.asList(\"testTopic0\", \"testTopic1\")", "var_name": "fakeTopics"}, {"original_string": "private static TopicWorkload fakeWorkload1 = new TopicWorkload(1243.223, 32213, 2);", "modifier": "private static", "type": "TopicWorkload", "declarator": "fakeWorkload1 = new TopicWorkload(1243.223, 32213, 2)", "var_name": "fakeWorkload1"}, {"original_string": "private static TopicWorkload fakeWorkload2 = new TopicWorkload(21.1, 189, 2);", "modifier": "private static", "type": "TopicWorkload", "declarator": "fakeWorkload2 = new TopicWorkload(21.1, 189, 2)", "var_name": "fakeWorkload2"}, {"original_string": "private static TopicPartition fakeTopicPartition1 = new TopicPartition(fakeTopics.get(1), 0);", "modifier": "private static", "type": "TopicPartition", "declarator": "fakeTopicPartition1 = new TopicPartition(fakeTopics.get(1), 0)", "var_name": "fakeTopicPartition1"}, {"original_string": "private static TopicPartition fakeTopicPartition2 = new TopicPartition(fakeTopics.get(0), 1);", "modifier": "private static", "type": "TopicPartition", "declarator": "fakeTopicPartition2 = new TopicPartition(fakeTopics.get(0), 1)", "var_name": "fakeTopicPartition2"}], "file": "uReplicator-Controller/src/test/java/com/uber/stream/kafka/mirrormaker/controller/core/TestHelixMirrorMakerManager.java"}, "test_case": {"identifier": "testCalculateLagTime", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCalculateLagTime() {\n    EasyMock.expect(workloadInfoRetriever.topicWorkload(fakeTopics.get(0))).andReturn(fakeWorkload1).times(3);\n    EasyMock.expect(workloadInfoRetriever.topicWorkload(fakeTopics.get(1))).andReturn(fakeWorkload2).times(2);\n    EasyMock.expect(workloadInfoRetriever.isInitialized()).andReturn(true).anyTimes();\n\n    EasyMock.expect(offsetMonitor.getTopicPartitionOffset(fakeTopicPartition1)).andReturn(\n        new TopicPartitionLag(fakeTopicPartition1.getTopic(), fakeTopicPartition1.getPartition(), 12894, 2843));\n    EasyMock.expect(offsetMonitor.getTopicPartitionOffset(fakeTopicPartition2)).andReturn(\n        new TopicPartitionLag(fakeTopicPartition2.getTopic(), fakeTopicPartition2.getPartition(), 89600093, 2843));\n\n    EasyMock.replay(workloadInfoRetriever, offsetMonitor);\n    TopicPartitionLag lag = helixMirrorMakerManager.calculateLagTime(fakeTopicPartition1);\n    Assert.assertNull(lag);\n\n    TopicPartitionLag lag2 = helixMirrorMakerManager.calculateLagTime(fakeTopicPartition2);\n    Assert.assertEquals(lag2.getLagTime(), 5563);\n  }", "signature": "void testCalculateLagTime()", "full_signature": "@Test public void testCalculateLagTime()", "class_method_signature": "TestHelixMirrorMakerManager.testCalculateLagTime()", "testcase": true, "constructor": false, "invocations": ["times", "andReturn", "expect", "topicWorkload", "get", "times", "andReturn", "expect", "topicWorkload", "get", "anyTimes", "andReturn", "expect", "isInitialized", "andReturn", "expect", "getTopicPartitionOffset", "getTopic", "getPartition", "andReturn", "expect", "getTopicPartitionOffset", "getTopic", "getPartition", "replay", "calculateLagTime", "assertNull", "calculateLagTime", "assertEquals", "getLagTime"]}, "focal_class": {"identifier": "HelixMirrorMakerManager", "superclass": "", "interfaces": "implements IHelixManager", "fields": [{"original_string": "private static final String BLACKLIST_TAG = \"blacklisted\";", "modifier": "private static final", "type": "String", "declarator": "BLACKLIST_TAG = \"blacklisted\"", "var_name": "BLACKLIST_TAG"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(HelixMirrorMakerManager.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(HelixMirrorMakerManager.class)", "var_name": "LOGGER"}, {"original_string": "private final ControllerConf _controllerConf;", "modifier": "private final", "type": "ControllerConf", "declarator": "_controllerConf", "var_name": "_controllerConf"}, {"original_string": "private final String _helixClusterName;", "modifier": "private final", "type": "String", "declarator": "_helixClusterName", "var_name": "_helixClusterName"}, {"original_string": "private final String _helixZkURL;", "modifier": "private final", "type": "String", "declarator": "_helixZkURL", "var_name": "_helixZkURL"}, {"original_string": "private HelixManager _helixZkManager;", "modifier": "private", "type": "HelixManager", "declarator": "_helixZkManager", "var_name": "_helixZkManager"}, {"original_string": "private HelixAdmin _helixAdmin;", "modifier": "private", "type": "HelixAdmin", "declarator": "_helixAdmin", "var_name": "_helixAdmin"}, {"original_string": "private String _instanceId;", "modifier": "private", "type": "String", "declarator": "_instanceId", "var_name": "_instanceId"}, {"original_string": "private final PriorityQueue<InstanceTopicPartitionHolder> _currentServingInstance;", "modifier": "private final", "type": "PriorityQueue<InstanceTopicPartitionHolder>", "declarator": "_currentServingInstance", "var_name": "_currentServingInstance"}, {"original_string": "private AutoRebalanceLiveInstanceChangeListener _autoRebalanceLiveInstanceChangeListener = null;", "modifier": "private", "type": "AutoRebalanceLiveInstanceChangeListener", "declarator": "_autoRebalanceLiveInstanceChangeListener = null", "var_name": "_autoRebalanceLiveInstanceChangeListener"}, {"original_string": "private final long _minLagOffset;", "modifier": "private final", "type": "long", "declarator": "_minLagOffset", "var_name": "_minLagOffset"}, {"original_string": "private final long _minLagTimeSec;", "modifier": "private final", "type": "long", "declarator": "_minLagTimeSec", "var_name": "_minLagTimeSec"}, {"original_string": "private final long _offsetMaxValidTimeMillis;", "modifier": "private final", "type": "long", "declarator": "_offsetMaxValidTimeMillis", "var_name": "_offsetMaxValidTimeMillis"}, {"original_string": "private final double _maxDedicatedInstancesRatio;", "modifier": "private final", "type": "double", "declarator": "_maxDedicatedInstancesRatio", "var_name": "_maxDedicatedInstancesRatio"}, {"original_string": "private double _maxWorkloadPerWorkerBytes;", "modifier": "private", "type": "double", "declarator": "_maxWorkloadPerWorkerBytes", "var_name": "_maxWorkloadPerWorkerBytes"}, {"original_string": "@VisibleForTesting\n  WorkloadInfoRetriever _workloadInfoRetriever;", "modifier": "@VisibleForTesting", "type": "WorkloadInfoRetriever", "declarator": "_workloadInfoRetriever", "var_name": "_workloadInfoRetriever"}, {"original_string": "@VisibleForTesting\n  OffsetMonitor _offsetMonitor;", "modifier": "@VisibleForTesting", "type": "OffsetMonitor", "declarator": "_offsetMonitor", "var_name": "_offsetMonitor"}], "methods": [{"identifier": "getMaxWorkloadPerWorkerBytes", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getMaxWorkloadPerWorkerBytes()", "full_signature": "public double getMaxWorkloadPerWorkerBytes()", "class_method_signature": "HelixMirrorMakerManager.getMaxWorkloadPerWorkerBytes()", "testcase": false, "constructor": false}, {"identifier": "getMaxDedicatedInstancesRatio", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getMaxDedicatedInstancesRatio()", "full_signature": "public double getMaxDedicatedInstancesRatio()", "class_method_signature": "HelixMirrorMakerManager.getMaxDedicatedInstancesRatio()", "testcase": false, "constructor": false}, {"identifier": "HelixMirrorMakerManager", "parameters": "(ControllerConf controllerConf)", "modifiers": "public", "return": "", "signature": " HelixMirrorMakerManager(ControllerConf controllerConf)", "full_signature": "public  HelixMirrorMakerManager(ControllerConf controllerConf)", "class_method_signature": "HelixMirrorMakerManager.HelixMirrorMakerManager(ControllerConf controllerConf)", "testcase": false, "constructor": true}, {"identifier": "start", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void start()", "full_signature": "public synchronized void start()", "class_method_signature": "HelixMirrorMakerManager.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void stop()", "full_signature": "public synchronized void stop()", "class_method_signature": "HelixMirrorMakerManager.stop()", "testcase": false, "constructor": false}, {"identifier": "updateCurrentServingInstance", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void updateCurrentServingInstance()", "full_signature": "public synchronized void updateCurrentServingInstance()", "class_method_signature": "HelixMirrorMakerManager.updateCurrentServingInstance()", "testcase": false, "constructor": false}, {"identifier": "addTopicToMirrorMaker", "parameters": "(TopicPartition topicPartitionInfo)", "modifiers": "public synchronized", "return": "void", "signature": "void addTopicToMirrorMaker(TopicPartition topicPartitionInfo)", "full_signature": "public synchronized void addTopicToMirrorMaker(TopicPartition topicPartitionInfo)", "class_method_signature": "HelixMirrorMakerManager.addTopicToMirrorMaker(TopicPartition topicPartitionInfo)", "testcase": false, "constructor": false}, {"identifier": "addTopicToMirrorMaker", "parameters": "(String topicName, int numTopicPartitions)", "modifiers": "public synchronized", "return": "void", "signature": "void addTopicToMirrorMaker(String topicName, int numTopicPartitions)", "full_signature": "public synchronized void addTopicToMirrorMaker(String topicName, int numTopicPartitions)", "class_method_signature": "HelixMirrorMakerManager.addTopicToMirrorMaker(String topicName, int numTopicPartitions)", "testcase": false, "constructor": false}, {"identifier": "setEmptyResourceConfig", "parameters": "(String topicName)", "modifiers": "private synchronized", "return": "void", "signature": "void setEmptyResourceConfig(String topicName)", "full_signature": "private synchronized void setEmptyResourceConfig(String topicName)", "class_method_signature": "HelixMirrorMakerManager.setEmptyResourceConfig(String topicName)", "testcase": false, "constructor": false}, {"identifier": "expandTopicInMirrorMaker", "parameters": "(TopicPartition topicPartitionInfo)", "modifiers": "public synchronized", "return": "void", "signature": "void expandTopicInMirrorMaker(TopicPartition topicPartitionInfo)", "full_signature": "public synchronized void expandTopicInMirrorMaker(TopicPartition topicPartitionInfo)", "class_method_signature": "HelixMirrorMakerManager.expandTopicInMirrorMaker(TopicPartition topicPartitionInfo)", "testcase": false, "constructor": false}, {"identifier": "expandTopicInMirrorMaker", "parameters": "(String topicName, int newNumTopicPartitions)", "modifiers": "public synchronized", "return": "void", "signature": "void expandTopicInMirrorMaker(String topicName, int newNumTopicPartitions)", "full_signature": "public synchronized void expandTopicInMirrorMaker(String topicName, int newNumTopicPartitions)", "class_method_signature": "HelixMirrorMakerManager.expandTopicInMirrorMaker(String topicName, int newNumTopicPartitions)", "testcase": false, "constructor": false}, {"identifier": "getTopicPartitionBlacklist", "parameters": "()", "modifiers": "public", "return": "Set<TopicPartition>", "signature": "Set<TopicPartition> getTopicPartitionBlacklist()", "full_signature": "public Set<TopicPartition> getTopicPartitionBlacklist()", "class_method_signature": "HelixMirrorMakerManager.getTopicPartitionBlacklist()", "testcase": false, "constructor": false}, {"identifier": "updateTopicPartitionStateInMirrorMaker", "parameters": "(String topicName, int partition,\n      String state)", "modifiers": "public synchronized", "return": "void", "signature": "void updateTopicPartitionStateInMirrorMaker(String topicName, int partition,\n      String state)", "full_signature": "public synchronized void updateTopicPartitionStateInMirrorMaker(String topicName, int partition,\n      String state)", "class_method_signature": "HelixMirrorMakerManager.updateTopicPartitionStateInMirrorMaker(String topicName, int partition,\n      String state)", "testcase": false, "constructor": false}, {"identifier": "deleteTopicInMirrorMaker", "parameters": "(String topicName)", "modifiers": "public synchronized", "return": "void", "signature": "void deleteTopicInMirrorMaker(String topicName)", "full_signature": "public synchronized void deleteTopicInMirrorMaker(String topicName)", "class_method_signature": "HelixMirrorMakerManager.deleteTopicInMirrorMaker(String topicName)", "testcase": false, "constructor": false}, {"identifier": "getIdealStateForTopic", "parameters": "(String topicName)", "modifiers": "@Override public", "return": "IdealState", "signature": "IdealState getIdealStateForTopic(String topicName)", "full_signature": "@Override public IdealState getIdealStateForTopic(String topicName)", "class_method_signature": "HelixMirrorMakerManager.getIdealStateForTopic(String topicName)", "testcase": false, "constructor": false}, {"identifier": "getConf", "parameters": "()", "modifiers": "@Override public", "return": "IuReplicatorConf", "signature": "IuReplicatorConf getConf()", "full_signature": "@Override public IuReplicatorConf getConf()", "class_method_signature": "HelixMirrorMakerManager.getConf()", "testcase": false, "constructor": false}, {"identifier": "getExternalViewForTopic", "parameters": "(String topicName)", "modifiers": "public", "return": "ExternalView", "signature": "ExternalView getExternalViewForTopic(String topicName)", "full_signature": "public ExternalView getExternalViewForTopic(String topicName)", "class_method_signature": "HelixMirrorMakerManager.getExternalViewForTopic(String topicName)", "testcase": false, "constructor": false}, {"identifier": "isTopicExisted", "parameters": "(String topicName)", "modifiers": "public", "return": "boolean", "signature": "boolean isTopicExisted(String topicName)", "full_signature": "public boolean isTopicExisted(String topicName)", "class_method_signature": "HelixMirrorMakerManager.isTopicExisted(String topicName)", "testcase": false, "constructor": false}, {"identifier": "getTopicLists", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getTopicLists()", "full_signature": "@Override public List<String> getTopicLists()", "class_method_signature": "HelixMirrorMakerManager.getTopicLists()", "testcase": false, "constructor": false}, {"identifier": "disableAutoBalancing", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void disableAutoBalancing()", "full_signature": "public void disableAutoBalancing()", "class_method_signature": "HelixMirrorMakerManager.disableAutoBalancing()", "testcase": false, "constructor": false}, {"identifier": "enableAutoBalancing", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void enableAutoBalancing()", "full_signature": "public void enableAutoBalancing()", "class_method_signature": "HelixMirrorMakerManager.enableAutoBalancing()", "testcase": false, "constructor": false}, {"identifier": "isAutoBalancingEnabled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAutoBalancingEnabled()", "full_signature": "public boolean isAutoBalancingEnabled()", "class_method_signature": "HelixMirrorMakerManager.isAutoBalancingEnabled()", "testcase": false, "constructor": false}, {"identifier": "isLeader", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isLeader()", "full_signature": "public boolean isLeader()", "class_method_signature": "HelixMirrorMakerManager.isLeader()", "testcase": false, "constructor": false}, {"identifier": "getCurrentLiveInstances", "parameters": "()", "modifiers": "public", "return": "List<LiveInstance>", "signature": "List<LiveInstance> getCurrentLiveInstances()", "full_signature": "public List<LiveInstance> getCurrentLiveInstances()", "class_method_signature": "HelixMirrorMakerManager.getCurrentLiveInstances()", "testcase": false, "constructor": false}, {"identifier": "getCurrentLiveInstanceNames", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getCurrentLiveInstanceNames()", "full_signature": "public List<String> getCurrentLiveInstanceNames()", "class_method_signature": "HelixMirrorMakerManager.getCurrentLiveInstanceNames()", "testcase": false, "constructor": false}, {"identifier": "blacklistInstance", "parameters": "(String instanceName)", "modifiers": "public", "return": "void", "signature": "void blacklistInstance(String instanceName)", "full_signature": "public void blacklistInstance(String instanceName)", "class_method_signature": "HelixMirrorMakerManager.blacklistInstance(String instanceName)", "testcase": false, "constructor": false}, {"identifier": "whitelistInstance", "parameters": "(String instanceName)", "modifiers": "public", "return": "void", "signature": "void whitelistInstance(String instanceName)", "full_signature": "public void whitelistInstance(String instanceName)", "class_method_signature": "HelixMirrorMakerManager.whitelistInstance(String instanceName)", "testcase": false, "constructor": false}, {"identifier": "getBlacklistedInstances", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getBlacklistedInstances()", "full_signature": "public List<String> getBlacklistedInstances()", "class_method_signature": "HelixMirrorMakerManager.getBlacklistedInstances()", "testcase": false, "constructor": false}, {"identifier": "getHelixZkURL", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getHelixZkURL()", "full_signature": "public String getHelixZkURL()", "class_method_signature": "HelixMirrorMakerManager.getHelixZkURL()", "testcase": false, "constructor": false}, {"identifier": "getHelixClusterName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getHelixClusterName()", "full_signature": "public String getHelixClusterName()", "class_method_signature": "HelixMirrorMakerManager.getHelixClusterName()", "testcase": false, "constructor": false}, {"identifier": "getControllerConf", "parameters": "()", "modifiers": "public", "return": "ControllerConf", "signature": "ControllerConf getControllerConf()", "full_signature": "public ControllerConf getControllerConf()", "class_method_signature": "HelixMirrorMakerManager.getControllerConf()", "testcase": false, "constructor": false}, {"identifier": "getWorkloadInfoRetriever", "parameters": "()", "modifiers": "public", "return": "WorkloadInfoRetriever", "signature": "WorkloadInfoRetriever getWorkloadInfoRetriever()", "full_signature": "public WorkloadInfoRetriever getWorkloadInfoRetriever()", "class_method_signature": "HelixMirrorMakerManager.getWorkloadInfoRetriever()", "testcase": false, "constructor": false}, {"identifier": "getRebalancer", "parameters": "()", "modifiers": "public", "return": "AutoRebalanceLiveInstanceChangeListener", "signature": "AutoRebalanceLiveInstanceChangeListener getRebalancer()", "full_signature": "public AutoRebalanceLiveInstanceChangeListener getRebalancer()", "class_method_signature": "HelixMirrorMakerManager.getRebalancer()", "testcase": false, "constructor": false}, {"identifier": "getCurrentServingInstance", "parameters": "()", "modifiers": "public", "return": "PriorityQueue<InstanceTopicPartitionHolder>", "signature": "PriorityQueue<InstanceTopicPartitionHolder> getCurrentServingInstance()", "full_signature": "public PriorityQueue<InstanceTopicPartitionHolder> getCurrentServingInstance()", "class_method_signature": "HelixMirrorMakerManager.getCurrentServingInstance()", "testcase": false, "constructor": false}, {"identifier": "getOffsetMonitor", "parameters": "()", "modifiers": "public", "return": "OffsetMonitor", "signature": "OffsetMonitor getOffsetMonitor()", "full_signature": "public OffsetMonitor getOffsetMonitor()", "class_method_signature": "HelixMirrorMakerManager.getOffsetMonitor()", "testcase": false, "constructor": false}, {"identifier": "isHealthy", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isHealthy()", "full_signature": "public boolean isHealthy()", "class_method_signature": "HelixMirrorMakerManager.isHealthy()", "testcase": false, "constructor": false}, {"identifier": "calculateLagTime", "parameters": "(TopicPartition tp)", "modifiers": "public", "return": "TopicPartitionLag", "signature": "TopicPartitionLag calculateLagTime(TopicPartition tp)", "full_signature": "public TopicPartitionLag calculateLagTime(TopicPartition tp)", "class_method_signature": "HelixMirrorMakerManager.calculateLagTime(TopicPartition tp)", "testcase": false, "constructor": false}, {"identifier": "isSameRegion", "parameters": "(String src, String dst)", "modifiers": "public", "return": "boolean", "signature": "boolean isSameRegion(String src, String dst)", "full_signature": "public boolean isSameRegion(String src, String dst)", "class_method_signature": "HelixMirrorMakerManager.isSameRegion(String src, String dst)", "testcase": false, "constructor": false}], "file": "uReplicator-Controller/src/main/java/com/uber/stream/kafka/mirrormaker/controller/core/HelixMirrorMakerManager.java"}, "focal_method": {"identifier": "calculateLagTime", "parameters": "(TopicPartition tp)", "modifiers": "public", "return": "TopicPartitionLag", "body": "public TopicPartitionLag calculateLagTime(TopicPartition tp) {\n    TopicPartitionLag tpl = getOffsetMonitor().getTopicPartitionOffset(tp);\n    if (tpl == null || tpl.getLatestOffset() <= 0 || tpl.getCommitOffset() <= 0\n        || System.currentTimeMillis() - tpl.getTimeStamp() > _offsetMaxValidTimeMillis) {\n      return null;\n    }\n    long lag = tpl.getLatestOffset() - tpl.getCommitOffset();\n    if (lag <= _minLagOffset) {\n      return null;\n    }\n\n    double msgRate = getWorkloadInfoRetriever().topicWorkload(tp.getTopic())\n        .getMsgsPerSecondPerPartition();\n    if (msgRate < 1) {\n      msgRate = 1;\n    }\n    double lagTime = lag / msgRate;\n    if (lagTime > _minLagTimeSec) {\n      tpl.setLagTime(Math.round(lagTime));\n      return tpl;\n    }\n    return null;\n  }", "signature": "TopicPartitionLag calculateLagTime(TopicPartition tp)", "full_signature": "public TopicPartitionLag calculateLagTime(TopicPartition tp)", "class_method_signature": "HelixMirrorMakerManager.calculateLagTime(TopicPartition tp)", "testcase": false, "constructor": false, "invocations": ["getTopicPartitionOffset", "getOffsetMonitor", "getLatestOffset", "getCommitOffset", "currentTimeMillis", "getTimeStamp", "getLatestOffset", "getCommitOffset", "getMsgsPerSecondPerPartition", "topicWorkload", "getWorkloadInfoRetriever", "getTopic", "setLagTime", "round"]}, "repository": {"repo_id": 60201162, "url": "https://github.com/uber/uReplicator", "language": "Java", "is_fork": false, "fork_count": 148, "stargazer_count": 652, "size": 2223, "license": "licensed"}}