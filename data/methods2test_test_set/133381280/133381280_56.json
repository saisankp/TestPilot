{"test_class": {"identifier": "MetricObserverUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "client/lookout-reg-server/src/test/java/com/alipay/lookout/common/MetricObserverUtilTest.java"}, "test_case": {"identifier": "testAddMetricObserver", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddMetricObserver() {\n        LookoutRegistry reg = new LookoutRegistry(new LookoutConfig());\n        LogObserver logObserver = new LogObserver();\n        MetricObserverUtil.addMetricObservers(reg, logObserver);\n        Assert.assertTrue(reg.getMetricObservers().contains(logObserver));\n    }", "signature": "void testAddMetricObserver()", "full_signature": "@Test public void testAddMetricObserver()", "class_method_signature": "MetricObserverUtilTest.testAddMetricObserver()", "testcase": true, "constructor": false, "invocations": ["addMetricObservers", "assertTrue", "contains", "getMetricObservers"]}, "focal_class": {"identifier": "MetricObserverUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "MetricObserverUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " MetricObserverUtil()", "full_signature": "private  MetricObserverUtil()", "class_method_signature": "MetricObserverUtil.MetricObserverUtil()", "testcase": false, "constructor": true}, {"identifier": "addMetricObservers", "parameters": "(Registry registry, MetricObserver... metricObservers)", "modifiers": "public static", "return": "boolean", "signature": "boolean addMetricObservers(Registry registry, MetricObserver... metricObservers)", "full_signature": "public static boolean addMetricObservers(Registry registry, MetricObserver... metricObservers)", "class_method_signature": "MetricObserverUtil.addMetricObservers(Registry registry, MetricObserver... metricObservers)", "testcase": false, "constructor": false}], "file": "client/lookout-reg-server/src/main/java/com/alipay/lookout/common/MetricObserverUtil.java"}, "focal_method": {"identifier": "addMetricObservers", "parameters": "(Registry registry, MetricObserver... metricObservers)", "modifiers": "public static", "return": "boolean", "body": "public static boolean addMetricObservers(Registry registry, MetricObserver... metricObservers) {\n        boolean flag = false;\n        if (registry instanceof LookoutRegistry) {\n            for (MetricObserver metricObserver : metricObservers) {\n                ((LookoutRegistry) registry).addMetricObserver(metricObserver);\n            }\n            flag = true;\n        }\n        if (registry instanceof CompositeRegistry) {\n            for (Registry reg : ((CompositeRegistry) registry).getRegistries()) {\n                if (reg instanceof LookoutRegistry) {\n                    for (MetricObserver metricObserver : metricObservers) {\n                        ((LookoutRegistry) reg).addMetricObserver(metricObserver);\n                    }\n                    flag = true;\n                }\n            }\n        }\n        return flag;\n    }", "signature": "boolean addMetricObservers(Registry registry, MetricObserver... metricObservers)", "full_signature": "public static boolean addMetricObservers(Registry registry, MetricObserver... metricObservers)", "class_method_signature": "MetricObserverUtil.addMetricObservers(Registry registry, MetricObserver... metricObservers)", "testcase": false, "constructor": false, "invocations": ["addMetricObserver", "getRegistries", "addMetricObserver"]}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}