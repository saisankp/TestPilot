{"test_class": {"identifier": "ProductCartServiceTest", "superclass": "extends AbstractTestNGSpringContextTests", "interfaces": "", "fields": [{"original_string": "Map<Integer, String> users = new HashMap<Integer, String>(2);", "modifier": "", "type": "Map<Integer, String>", "declarator": "users = new HashMap<Integer, String>(2)", "var_name": "users"}, {"original_string": "HashSet<GrantedAuthority> roles =\n      Sets.<GrantedAuthority> newHashSet(\n         new GrantedAuthorityImpl(\"ROLE_DOWNLOAD\"));", "modifier": "", "type": "HashSet<GrantedAuthority>", "declarator": "roles =\n      Sets.<GrantedAuthority> newHashSet(\n         new GrantedAuthorityImpl(\"ROLE_DOWNLOAD\"))", "var_name": "roles"}, {"original_string": "@Autowired \n   ProductCartService pcs;", "modifier": "@Autowired", "type": "ProductCartService", "declarator": "pcs", "var_name": "pcs"}, {"original_string": "@Autowired\n   UserDao userDao;", "modifier": "@Autowired", "type": "UserDao", "declarator": "userDao", "var_name": "userDao"}, {"original_string": "@Autowired\n   ProductDao productDao;", "modifier": "@Autowired", "type": "ProductDao", "declarator": "productDao", "var_name": "productDao"}], "file": "core/src/test/java/fr/gael/dhus/service/ProductCartServiceTest.java"}, "test_case": {"identifier": "getProductsOfCart", "parameters": "()", "modifiers": "@Test (priority=1) public", "return": "void", "body": "@Test (priority=1)\n  public void getProductsOfCart()\n  {\n     // Users ID #0 -> CARD ID #0 -> PRODUCT IDs #0 and #5 \n     List<Product>products = pcs.getProductsOfCart(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa0\", 0, 100);\n     Assert.assertEquals (products.size(), 2);\n     Assert.assertEquals (products.get (0).getId(), new Long(5L));\n     Assert.assertEquals (products.get (1).getId(), new Long(0L));\n     \n\n     // USER #1 -> no cart\n     products = pcs.getProductsOfCart(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1\", 0 , 100);\n     Assert.assertEquals (products.size(), 0);\n\n     \n     // USER #2 -> CART #2 -> no product \n     //            CART #3 -> product #0\n     // DAO methods returns only first cart if multiple... \n     products = pcs.getProductsOfCart(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2\", 0, 100);\n     Assert.assertEquals (products.size(), 0);\n\n     // Users ID #3 -> CARD ID #1 -> PRODUCT IDs #5\n     products = pcs.getProductsOfCart(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa3\", 0, 100);\n     Assert.assertEquals (products.size(), 1);\n     Assert.assertEquals (products.get (0).getId(), new Long(5L));\n  }", "signature": "void getProductsOfCart()", "full_signature": "@Test (priority=1) public void getProductsOfCart()", "class_method_signature": "ProductCartServiceTest.getProductsOfCart()", "testcase": true, "constructor": false, "invocations": ["getProductsOfCart", "assertEquals", "size", "assertEquals", "getId", "get", "assertEquals", "getId", "get", "getProductsOfCart", "assertEquals", "size", "getProductsOfCart", "assertEquals", "size", "getProductsOfCart", "assertEquals", "size", "assertEquals", "getId", "get"]}, "focal_class": {"identifier": "ProductCartService", "superclass": "extends WebService", "interfaces": "", "fields": [{"original_string": "@Autowired\n   private UserDao userDao;", "modifier": "@Autowired\n   private", "type": "UserDao", "declarator": "userDao", "var_name": "userDao"}, {"original_string": "@Autowired\n   private ProductCartDao productCartDao;", "modifier": "@Autowired\n   private", "type": "ProductCartDao", "declarator": "productCartDao", "var_name": "productCartDao"}, {"original_string": "@Autowired\n   private ProductDao productDao;", "modifier": "@Autowired\n   private", "type": "ProductDao", "declarator": "productDao", "var_name": "productDao"}], "methods": [{"identifier": "createCartOfUser", "parameters": "(String uuid)", "modifiers": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = false, propagation = Propagation.REQUIRED) public", "return": "ProductCart", "signature": "ProductCart createCartOfUser(String uuid)", "full_signature": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = false, propagation = Propagation.REQUIRED) public ProductCart createCartOfUser(String uuid)", "class_method_signature": "ProductCartService.createCartOfUser(String uuid)", "testcase": false, "constructor": false}, {"identifier": "createCartOfUser", "parameters": "(User user)", "modifiers": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = false, propagation = Propagation.REQUIRED) public", "return": "ProductCart", "signature": "ProductCart createCartOfUser(User user)", "full_signature": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = false, propagation = Propagation.REQUIRED) public ProductCart createCartOfUser(User user)", "class_method_signature": "ProductCartService.createCartOfUser(User user)", "testcase": false, "constructor": false}, {"identifier": "deleteCartOfUser", "parameters": "(String uuid)", "modifiers": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = false, propagation = Propagation.REQUIRED) public", "return": "void", "signature": "void deleteCartOfUser(String uuid)", "full_signature": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = false, propagation = Propagation.REQUIRED) public void deleteCartOfUser(String uuid)", "class_method_signature": "ProductCartService.deleteCartOfUser(String uuid)", "testcase": false, "constructor": false}, {"identifier": "getCartOfUser", "parameters": "(String uuid)", "modifiers": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = true, propagation = Propagation.REQUIRED) public", "return": "ProductCart", "signature": "ProductCart getCartOfUser(String uuid)", "full_signature": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = true, propagation = Propagation.REQUIRED) public ProductCart getCartOfUser(String uuid)", "class_method_signature": "ProductCartService.getCartOfUser(String uuid)", "testcase": false, "constructor": false}, {"identifier": "getCartOfUser", "parameters": "(User user)", "modifiers": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = true, propagation = Propagation.REQUIRED) public", "return": "ProductCart", "signature": "ProductCart getCartOfUser(User user)", "full_signature": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = true, propagation = Propagation.REQUIRED) public ProductCart getCartOfUser(User user)", "class_method_signature": "ProductCartService.getCartOfUser(User user)", "testcase": false, "constructor": false}, {"identifier": "addProductToCart", "parameters": "(String uuid, Long p_id)", "modifiers": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(propagation = Propagation.REQUIRED) public", "return": "void", "signature": "void addProductToCart(String uuid, Long p_id)", "full_signature": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(propagation = Propagation.REQUIRED) public void addProductToCart(String uuid, Long p_id)", "class_method_signature": "ProductCartService.addProductToCart(String uuid, Long p_id)", "testcase": false, "constructor": false}, {"identifier": "removeProductFromCart", "parameters": "(String uuid, Long p_id)", "modifiers": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(propagation = Propagation.REQUIRED) public", "return": "void", "signature": "void removeProductFromCart(String uuid, Long p_id)", "full_signature": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(propagation = Propagation.REQUIRED) public void removeProductFromCart(String uuid, Long p_id)", "class_method_signature": "ProductCartService.removeProductFromCart(String uuid, Long p_id)", "testcase": false, "constructor": false}, {"identifier": "getProductsIdOfCart", "parameters": "(String uuid)", "modifiers": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(propagation = Propagation.REQUIRED) public", "return": "List<Long>", "signature": "List<Long> getProductsIdOfCart(String uuid)", "full_signature": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(propagation = Propagation.REQUIRED) public List<Long> getProductsIdOfCart(String uuid)", "class_method_signature": "ProductCartService.getProductsIdOfCart(String uuid)", "testcase": false, "constructor": false}, {"identifier": "getProductsOfCart", "parameters": "(String uuid, int skip, int top)", "modifiers": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = true, propagation = Propagation.REQUIRED) public", "return": "List<Product>", "signature": "List<Product> getProductsOfCart(String uuid, int skip, int top)", "full_signature": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = true, propagation = Propagation.REQUIRED) public List<Product> getProductsOfCart(String uuid, int skip, int top)", "class_method_signature": "ProductCartService.getProductsOfCart(String uuid, int skip, int top)", "testcase": false, "constructor": false}, {"identifier": "countProductsInCart", "parameters": "(String uuid)", "modifiers": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = true, propagation = Propagation.REQUIRED) public", "return": "int", "signature": "int countProductsInCart(String uuid)", "full_signature": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = true, propagation = Propagation.REQUIRED) public int countProductsInCart(String uuid)", "class_method_signature": "ProductCartService.countProductsInCart(String uuid)", "testcase": false, "constructor": false}, {"identifier": "countProducts", "parameters": "(CartSQLVisitor visitor, String uuid)", "modifiers": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = true) public", "return": "int", "signature": "int countProducts(CartSQLVisitor visitor, String uuid)", "full_signature": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = true) public int countProducts(CartSQLVisitor visitor, String uuid)", "class_method_signature": "ProductCartService.countProducts(CartSQLVisitor visitor, String uuid)", "testcase": false, "constructor": false}, {"identifier": "getCartProducts", "parameters": "(CartSQLVisitor visitor, String uuid, int skip, int top)", "modifiers": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = true) public", "return": "List<Product>", "signature": "List<Product> getCartProducts(CartSQLVisitor visitor, String uuid, int skip, int top)", "full_signature": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = true) public List<Product> getCartProducts(CartSQLVisitor visitor, String uuid, int skip, int top)", "class_method_signature": "ProductCartService.getCartProducts(CartSQLVisitor visitor, String uuid, int skip, int top)", "testcase": false, "constructor": false}, {"identifier": "hasProducts", "parameters": "(String uuid)", "modifiers": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = true, propagation = Propagation.REQUIRED) public", "return": "boolean", "signature": "boolean hasProducts(String uuid)", "full_signature": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = true, propagation = Propagation.REQUIRED) public boolean hasProducts(String uuid)", "class_method_signature": "ProductCartService.hasProducts(String uuid)", "testcase": false, "constructor": false}, {"identifier": "clearCart", "parameters": "(String uuid)", "modifiers": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(propagation = Propagation.REQUIRED) public", "return": "void", "signature": "void clearCart(String uuid)", "full_signature": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(propagation = Propagation.REQUIRED) public void clearCart(String uuid)", "class_method_signature": "ProductCartService.clearCart(String uuid)", "testcase": false, "constructor": false}, {"identifier": "getUser", "parameters": "(String uuid)", "modifiers": "@Transactional(readOnly = true, propagation = Propagation.REQUIRED) private", "return": "User", "signature": "User getUser(String uuid)", "full_signature": "@Transactional(readOnly = true, propagation = Propagation.REQUIRED) private User getUser(String uuid)", "class_method_signature": "ProductCartService.getUser(String uuid)", "testcase": false, "constructor": false}], "file": "core/src/main/java/fr/gael/dhus/service/ProductCartService.java"}, "focal_method": {"identifier": "getProductsOfCart", "parameters": "(String uuid, int skip, int top)", "modifiers": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = true, propagation = Propagation.REQUIRED) public", "return": "List<Product>", "body": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\")\n   @Transactional(readOnly = true, propagation = Propagation.REQUIRED)\n   public List<Product> getProductsOfCart(String uuid, int skip, int top)\n         throws UserNotExistingException\n   {\n      return productCartDao.scrollCartOfUser(getUser(uuid), skip, top);\n   }", "signature": "List<Product> getProductsOfCart(String uuid, int skip, int top)", "full_signature": "@PreAuthorize(\"hasRole('ROLE_DOWNLOAD')\") @Transactional(readOnly = true, propagation = Propagation.REQUIRED) public List<Product> getProductsOfCart(String uuid, int skip, int top)", "class_method_signature": "ProductCartService.getProductsOfCart(String uuid, int skip, int top)", "testcase": false, "constructor": false, "invocations": ["scrollCartOfUser", "getUser"]}, "repository": {"repo_id": 90016934, "url": "https://github.com/SentinelDataHub/dhus-core", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 5, "size": 2371, "license": "licensed"}}