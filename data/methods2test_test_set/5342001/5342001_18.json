{"test_class": {"identifier": "ParserManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ParserManager parserManager;", "modifier": "private", "type": "ParserManager", "declarator": "parserManager", "var_name": "parserManager"}, {"original_string": "private static final String sampleUrl = \"http://www.example.com\";", "modifier": "private static final", "type": "String", "declarator": "sampleUrl = \"http://www.example.com\"", "var_name": "sampleUrl"}], "file": "seedboxer-core/src/test/java/net/seedboxer/sources/parser/ParserManagerTest.java"}, "test_case": {"identifier": "shouldParseOneMovieAndTwoTvShowsWhenParseTwoInputsOfTvSHowsAndOneOfMovie", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldParseOneMovieAndTwoTvShowsWhenParseTwoInputsOfTvSHowsAndOneOfMovie() throws Exception {\n        String movieInput1 = \"Oz the Great and Powerful 2013 1080p BluRay DTS-HDMA 7 1 x264-LEGi0N\";\n        String tvShowInput1 = \"Almost Naked Animals S03E09 A Luck Be A Robot 720p HDTV x264-DEADPOOL\";\n        String tvShowInput2 = \"The Half Hour S02E07 Jonah Ray 720p HDTV x264-YesTV\";\n        List<MatchableItem> matchableItems = Arrays.asList(getMatchItem(movieInput1), getMatchItem(tvShowInput1), getMatchItem(tvShowInput2));\n        \n        Movie movie = new Movie(\"Oz the Great and Powerful\", 2013, Quality.FULLHD);\n        TvShow tvShow1 = new TvShow(\"Almost Naked Animals\", 3, 9, Quality.HD);\n        TvShow tvShow2 = new TvShow(\"The Half Hour\", 2, 7, Quality.HD);\n    \tList<Content> expectedParsedContent = Arrays.asList(movie, tvShow1, tvShow2);  \t\n    \t\n\t\tList<Content> parsedContents = parserManager.parseMatchableItems(matchableItems);\n\t\tassertEquals(expectedParsedContent, parsedContents);\n    }", "signature": "void shouldParseOneMovieAndTwoTvShowsWhenParseTwoInputsOfTvSHowsAndOneOfMovie()", "full_signature": "@Test public void shouldParseOneMovieAndTwoTvShowsWhenParseTwoInputsOfTvSHowsAndOneOfMovie()", "class_method_signature": "ParserManagerTest.shouldParseOneMovieAndTwoTvShowsWhenParseTwoInputsOfTvSHowsAndOneOfMovie()", "testcase": true, "constructor": false, "invocations": ["asList", "getMatchItem", "getMatchItem", "getMatchItem", "asList", "parseMatchableItems", "assertEquals"]}, "focal_class": {"identifier": "ParserManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<ContentParser> parsers = new ArrayList<ContentParser>();", "modifier": "private", "type": "List<ContentParser>", "declarator": "parsers = new ArrayList<ContentParser>()", "var_name": "parsers"}], "methods": [{"identifier": "getParsers", "parameters": "()", "modifiers": "public", "return": "List<ContentParser>", "signature": "List<ContentParser> getParsers()", "full_signature": "public List<ContentParser> getParsers()", "class_method_signature": "ParserManager.getParsers()", "testcase": false, "constructor": false}, {"identifier": "setParsers", "parameters": "(List<ContentParser> parsers)", "modifiers": "@Autowired public", "return": "void", "signature": "void setParsers(List<ContentParser> parsers)", "full_signature": "@Autowired public void setParsers(List<ContentParser> parsers)", "class_method_signature": "ParserManager.setParsers(List<ContentParser> parsers)", "testcase": false, "constructor": false}, {"identifier": "parseMatchableItems", "parameters": "(List<MatchableItem> items)", "modifiers": "public", "return": "List<Content>", "signature": "List<Content> parseMatchableItems(List<MatchableItem> items)", "full_signature": "public List<Content> parseMatchableItems(List<MatchableItem> items)", "class_method_signature": "ParserManager.parseMatchableItems(List<MatchableItem> items)", "testcase": false, "constructor": false}, {"identifier": "parseMatchableItem", "parameters": "(MatchableItem item)", "modifiers": "public", "return": "Content", "signature": "Content parseMatchableItem(MatchableItem item)", "full_signature": "public Content parseMatchableItem(MatchableItem item)", "class_method_signature": "ParserManager.parseMatchableItem(MatchableItem item)", "testcase": false, "constructor": false}], "file": "seedboxer-core/src/main/java/net/seedboxer/sources/parser/ParserManager.java"}, "focal_method": {"identifier": "parseMatchableItems", "parameters": "(List<MatchableItem> items)", "modifiers": "public", "return": "List<Content>", "body": "public List<Content> parseMatchableItems(List<MatchableItem> items){\n\t\tList<Content> parsedContentList = new ArrayList<Content>();\n\t\tfor(MatchableItem item : items){\n\t\t\tContent parsedContent = parseMatchableItem(item);\n\t\t\tif (parsedContent != null) {\n\t\t\t\tparsedContentList.add(parsedContent);\n\t\t\t}\n\t\t}\n\t\treturn parsedContentList;\n\t}", "signature": "List<Content> parseMatchableItems(List<MatchableItem> items)", "full_signature": "public List<Content> parseMatchableItems(List<MatchableItem> items)", "class_method_signature": "ParserManager.parseMatchableItems(List<MatchableItem> items)", "testcase": false, "constructor": false, "invocations": ["parseMatchableItem", "add"]}, "repository": {"repo_id": 5342001, "url": "https://github.com/jdavisonc/seedboxer", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 15845, "license": "licensed"}}