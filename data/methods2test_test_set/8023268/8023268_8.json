{"test_class": {"identifier": "ScopedKeysTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/io/keen/client/java/ScopedKeysTest.java"}, "test_case": {"identifier": "testSampleCode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSampleCode() {\n        String apiKey = \"YOUR_API_KEY_HERE\";\n\n        //Filters to apply to the key\n        Map<String, Object> filter = new HashMap<String, Object>();\n        List<Map<String, Object>> filters = new ArrayList<Map<String, Object>>();\n\n        //Create and add a filter\n        filter.put(\"property_name\", \"user_id\");\n        filter.put(\"operator\", \"eq\");\n        filter.put(\"property_value\", \"123\");\n\n        filters.add(filter);\n\n        // create the options we'll use\n        Map<String, Object> options = new HashMap<String, Object>();\n        options.put(\"allowed_operations\", Arrays.asList(\"write\"));\n        options.put(\"filters\", filters);\n\n        // do the encryption\n        String scopedKey = ScopedKeys.encrypt(apiKey, options);\n    }", "signature": "void testSampleCode()", "full_signature": "@Test public void testSampleCode()", "class_method_signature": "ScopedKeysTest.testSampleCode()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "add", "put", "asList", "put", "encrypt"]}, "focal_class": {"identifier": "ScopedKeys", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int BLOCK_SIZE = 32;", "modifier": "private static final", "type": "int", "declarator": "BLOCK_SIZE = 32", "var_name": "BLOCK_SIZE"}], "methods": [{"identifier": "encrypt", "parameters": "(String apiKey, Map<String, Object> options)", "modifiers": "public static", "return": "String", "signature": "String encrypt(String apiKey, Map<String, Object> options)", "full_signature": "public static String encrypt(String apiKey, Map<String, Object> options)", "class_method_signature": "ScopedKeys.encrypt(String apiKey, Map<String, Object> options)", "testcase": false, "constructor": false}, {"identifier": "encrypt", "parameters": "(KeenClient client, String apiKey, Map<String, Object> options)", "modifiers": "public static", "return": "String", "signature": "String encrypt(KeenClient client, String apiKey, Map<String, Object> options)", "full_signature": "public static String encrypt(KeenClient client, String apiKey, Map<String, Object> options)", "class_method_signature": "ScopedKeys.encrypt(KeenClient client, String apiKey, Map<String, Object> options)", "testcase": false, "constructor": false}, {"identifier": "encrypt32CharacterKey", "parameters": "(KeenClient client, String apiKey, Map<String, Object> options)", "modifiers": "public static", "return": "String", "signature": "String encrypt32CharacterKey(KeenClient client, String apiKey, Map<String, Object> options)", "full_signature": "public static String encrypt32CharacterKey(KeenClient client, String apiKey, Map<String, Object> options)", "class_method_signature": "ScopedKeys.encrypt32CharacterKey(KeenClient client, String apiKey, Map<String, Object> options)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(String apiKey, String scopedKey)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> decrypt(String apiKey, String scopedKey)", "full_signature": "public static Map<String, Object> decrypt(String apiKey, String scopedKey)", "class_method_signature": "ScopedKeys.decrypt(String apiKey, String scopedKey)", "testcase": false, "constructor": false}, {"identifier": "decrypt", "parameters": "(KeenClient client, String apiKey, String scopedKey)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> decrypt(KeenClient client, String apiKey, String scopedKey)", "full_signature": "public static Map<String, Object> decrypt(KeenClient client, String apiKey, String scopedKey)", "class_method_signature": "ScopedKeys.decrypt(KeenClient client, String apiKey, String scopedKey)", "testcase": false, "constructor": false}, {"identifier": "decrypt32CharacterKey", "parameters": "(KeenClient client, String apiKey, String scopedKey)", "modifiers": "public static", "return": "Map<String, Object>", "signature": "Map<String, Object> decrypt32CharacterKey(KeenClient client, String apiKey, String scopedKey)", "full_signature": "public static Map<String, Object> decrypt32CharacterKey(KeenClient client, String apiKey, String scopedKey)", "class_method_signature": "ScopedKeys.decrypt32CharacterKey(KeenClient client, String apiKey, String scopedKey)", "testcase": false, "constructor": false}, {"identifier": "padApiKey", "parameters": "(String apiKey)", "modifiers": "private static", "return": "String", "signature": "String padApiKey(String apiKey)", "full_signature": "private static String padApiKey(String apiKey)", "class_method_signature": "ScopedKeys.padApiKey(String apiKey)", "testcase": false, "constructor": false}, {"identifier": "pad", "parameters": "(String input)", "modifiers": "private static", "return": "String", "signature": "String pad(String input)", "full_signature": "private static String pad(String input)", "class_method_signature": "ScopedKeys.pad(String input)", "testcase": false, "constructor": false}], "file": "core/src/main/java/io/keen/client/java/ScopedKeys.java"}, "focal_method": {"identifier": "encrypt", "parameters": "(String apiKey, Map<String, Object> options)", "modifiers": "public static", "return": "String", "body": "public static String encrypt(String apiKey, Map<String, Object> options)\n            throws ScopedKeyException {\n        if (apiKey.length() == 64) {\n            return encrypt(KeenClient.client(), apiKey, options);\n        } else {\n            return encrypt32CharacterKey(KeenClient.client(), apiKey, options);\n        }\n    }", "signature": "String encrypt(String apiKey, Map<String, Object> options)", "full_signature": "public static String encrypt(String apiKey, Map<String, Object> options)", "class_method_signature": "ScopedKeys.encrypt(String apiKey, Map<String, Object> options)", "testcase": false, "constructor": false, "invocations": ["length", "encrypt", "client", "encrypt32CharacterKey", "client"]}, "repository": {"repo_id": 8023268, "url": "https://github.com/keenlabs/KeenClient-Java", "language": "Java", "is_fork": false, "fork_count": 48, "stargazer_count": 74, "size": 4291, "license": "licensed"}}