{"test_class": {"identifier": "FrozenColumnTableTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public final TestRule myRule = AndroidProjectRule.inMemory();", "modifier": "@Rule\n  public final", "type": "TestRule", "declarator": "myRule = AndroidProjectRule.inMemory()", "var_name": "myRule"}], "file": "android/testSrc/com/android/tools/idea/editors/strings/table/FrozenColumnTableTest.java"}, "test_case": {"identifier": "getRowHeight", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getRowHeight() {\n    FrozenColumnTable frozenColumnTable = new FrozenColumnTable(new DefaultTableModel(1, 4), 2);\n\n    JTable frozenTable = frozenColumnTable.getFrozenTable();\n    frozenTable.setRowHeight(26);\n    frozenTable.getRowHeight();\n\n    JTable scrollableTable = frozenColumnTable.getScrollableTable();\n    scrollableTable.setRowHeight(29);\n    scrollableTable.getRowHeight();\n\n    assertEquals(29, frozenColumnTable.getRowHeight());\n  }", "signature": "void getRowHeight()", "full_signature": "@Test public void getRowHeight()", "class_method_signature": "FrozenColumnTableTest.getRowHeight()", "testcase": true, "constructor": false, "invocations": ["getFrozenTable", "setRowHeight", "getRowHeight", "getScrollableTable", "setRowHeight", "getRowHeight", "assertEquals", "getRowHeight"]}, "focal_class": {"identifier": "FrozenColumnTable", "superclass": "", "interfaces": "", "fields": [{"original_string": "private M myModel;", "modifier": "private", "type": "M", "declarator": "myModel", "var_name": "myModel"}, {"original_string": "private final int myFrozenColumnCount;", "modifier": "private final", "type": "int", "declarator": "myFrozenColumnCount", "var_name": "myFrozenColumnCount"}, {"original_string": "private final Collection<FrozenColumnTableListener> myListeners;", "modifier": "private final", "type": "Collection<FrozenColumnTableListener>", "declarator": "myListeners", "var_name": "myListeners"}, {"original_string": "private SubTable myFrozenTable;", "modifier": "private", "type": "SubTable", "declarator": "myFrozenTable", "var_name": "myFrozenTable"}, {"original_string": "private SubTable myScrollableTable;", "modifier": "private", "type": "SubTable", "declarator": "myScrollableTable", "var_name": "myScrollableTable"}, {"original_string": "private JScrollPane myScrollPane;", "modifier": "private", "type": "JScrollPane", "declarator": "myScrollPane", "var_name": "myScrollPane"}, {"original_string": "private int rowHeight;", "modifier": "private", "type": "int", "declarator": "rowHeight", "var_name": "rowHeight"}, {"original_string": "private int mySelectedRow;", "modifier": "private", "type": "int", "declarator": "mySelectedRow", "var_name": "mySelectedRow"}, {"original_string": "private int mySelectedColumn;", "modifier": "private", "type": "int", "declarator": "mySelectedColumn", "var_name": "mySelectedColumn"}, {"original_string": "@Nullable\n  private FrozenColumnTableRowSorter<M> myRowSorter;", "modifier": "@Nullable\n  private", "type": "FrozenColumnTableRowSorter<M>", "declarator": "myRowSorter", "var_name": "myRowSorter"}], "methods": [{"identifier": "FrozenColumnTable", "parameters": "(@NotNull M model, int frozenColumnCount)", "modifiers": "", "return": "", "signature": " FrozenColumnTable(@NotNull M model, int frozenColumnCount)", "full_signature": "  FrozenColumnTable(@NotNull M model, int frozenColumnCount)", "class_method_signature": "FrozenColumnTable.FrozenColumnTable(@NotNull M model, int frozenColumnCount)", "testcase": false, "constructor": true}, {"identifier": "initFrozenTable", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initFrozenTable()", "full_signature": "private void initFrozenTable()", "class_method_signature": "FrozenColumnTable.initFrozenTable()", "testcase": false, "constructor": false}, {"identifier": "initScrollableTable", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initScrollableTable()", "full_signature": "private void initScrollableTable()", "class_method_signature": "FrozenColumnTable.initScrollableTable()", "testcase": false, "constructor": false}, {"identifier": "fireSelectedCellChanged", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void fireSelectedCellChanged()", "full_signature": "private void fireSelectedCellChanged()", "class_method_signature": "FrozenColumnTable.fireSelectedCellChanged()", "testcase": false, "constructor": false}, {"identifier": "initScrollPane", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initScrollPane()", "full_signature": "private void initScrollPane()", "class_method_signature": "FrozenColumnTable.initScrollPane()", "testcase": false, "constructor": false}, {"identifier": "includeColumn", "parameters": "(int modelColumnIndex)", "modifiers": "", "return": "boolean", "signature": "boolean includeColumn(int modelColumnIndex)", "full_signature": " boolean includeColumn(int modelColumnIndex)", "class_method_signature": "FrozenColumnTable.includeColumn(int modelColumnIndex)", "testcase": false, "constructor": false}, {"identifier": "createColumn", "parameters": "(int modelColumnIndex)", "modifiers": "@NotNull", "return": "TableColumn", "signature": "TableColumn createColumn(int modelColumnIndex)", "full_signature": "@NotNull TableColumn createColumn(int modelColumnIndex)", "class_method_signature": "FrozenColumnTable.createColumn(int modelColumnIndex)", "testcase": false, "constructor": false}, {"identifier": "selectCellAt", "parameters": "(int viewRowIndex, int viewColumnIndex)", "modifiers": "public final", "return": "void", "signature": "void selectCellAt(int viewRowIndex, int viewColumnIndex)", "full_signature": "public final void selectCellAt(int viewRowIndex, int viewColumnIndex)", "class_method_signature": "FrozenColumnTable.selectCellAt(int viewRowIndex, int viewColumnIndex)", "testcase": false, "constructor": false}, {"identifier": "getSelectedModelRowIndex", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getSelectedModelRowIndex()", "full_signature": "public final int getSelectedModelRowIndex()", "class_method_signature": "FrozenColumnTable.getSelectedModelRowIndex()", "testcase": false, "constructor": false}, {"identifier": "getSelectedModelColumnIndex", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getSelectedModelColumnIndex()", "full_signature": "public final int getSelectedModelColumnIndex()", "class_method_signature": "FrozenColumnTable.getSelectedModelColumnIndex()", "testcase": false, "constructor": false}, {"identifier": "getSelectedModelRowIndices", "parameters": "()", "modifiers": "public final", "return": "int[]", "signature": "int[] getSelectedModelRowIndices()", "full_signature": "public final int[] getSelectedModelRowIndices()", "class_method_signature": "FrozenColumnTable.getSelectedModelRowIndices()", "testcase": false, "constructor": false}, {"identifier": "getSelectedModelColumnIndices", "parameters": "()", "modifiers": "public final", "return": "int[]", "signature": "int[] getSelectedModelColumnIndices()", "full_signature": "public final int[] getSelectedModelColumnIndices()", "class_method_signature": "FrozenColumnTable.getSelectedModelColumnIndices()", "testcase": false, "constructor": false}, {"identifier": "getFrozenColumnCount", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getFrozenColumnCount()", "full_signature": "public final int getFrozenColumnCount()", "class_method_signature": "FrozenColumnTable.getFrozenColumnCount()", "testcase": false, "constructor": false}, {"identifier": "getColumn", "parameters": "(int viewColumnIndex)", "modifiers": "@NotNull public final", "return": "TableColumn", "signature": "TableColumn getColumn(int viewColumnIndex)", "full_signature": "@NotNull public final TableColumn getColumn(int viewColumnIndex)", "class_method_signature": "FrozenColumnTable.getColumn(int viewColumnIndex)", "testcase": false, "constructor": false}, {"identifier": "convertRowIndexToModel", "parameters": "(int viewRowIndex)", "modifiers": "final", "return": "int", "signature": "int convertRowIndexToModel(int viewRowIndex)", "full_signature": "final int convertRowIndexToModel(int viewRowIndex)", "class_method_signature": "FrozenColumnTable.convertRowIndexToModel(int viewRowIndex)", "testcase": false, "constructor": false}, {"identifier": "convertColumnIndexToModel", "parameters": "(int viewColumnIndex)", "modifiers": "final", "return": "int", "signature": "int convertColumnIndexToModel(int viewColumnIndex)", "full_signature": "final int convertColumnIndexToModel(int viewColumnIndex)", "class_method_signature": "FrozenColumnTable.convertColumnIndexToModel(int viewColumnIndex)", "testcase": false, "constructor": false}, {"identifier": "getDefaultTableHeaderRenderer", "parameters": "()", "modifiers": "@NotNull final", "return": "TableCellRenderer", "signature": "TableCellRenderer getDefaultTableHeaderRenderer()", "full_signature": "@NotNull final TableCellRenderer getDefaultTableHeaderRenderer()", "class_method_signature": "FrozenColumnTable.getDefaultTableHeaderRenderer()", "testcase": false, "constructor": false}, {"identifier": "getCellRenderer", "parameters": "(int viewRowIndex, int viewColumnIndex)", "modifiers": "@NotNull final", "return": "TableCellRenderer", "signature": "TableCellRenderer getCellRenderer(int viewRowIndex, int viewColumnIndex)", "full_signature": "@NotNull final TableCellRenderer getCellRenderer(int viewRowIndex, int viewColumnIndex)", "class_method_signature": "FrozenColumnTable.getCellRenderer(int viewRowIndex, int viewColumnIndex)", "testcase": false, "constructor": false}, {"identifier": "getPreferredWidth", "parameters": "(@NotNull TableCellRenderer renderer, @NotNull Object value, int viewRowIndex, int viewColumnIndex)", "modifiers": "final", "return": "int", "signature": "int getPreferredWidth(@NotNull TableCellRenderer renderer, @NotNull Object value, int viewRowIndex, int viewColumnIndex)", "full_signature": "final int getPreferredWidth(@NotNull TableCellRenderer renderer, @NotNull Object value, int viewRowIndex, int viewColumnIndex)", "class_method_signature": "FrozenColumnTable.getPreferredWidth(@NotNull TableCellRenderer renderer, @NotNull Object value, int viewRowIndex, int viewColumnIndex)", "testcase": false, "constructor": false}, {"identifier": "getFrozenTable", "parameters": "()", "modifiers": "@NotNull public final", "return": "JTable", "signature": "JTable getFrozenTable()", "full_signature": "@NotNull public final JTable getFrozenTable()", "class_method_signature": "FrozenColumnTable.getFrozenTable()", "testcase": false, "constructor": false}, {"identifier": "getScrollableTable", "parameters": "()", "modifiers": "@NotNull public final", "return": "JTable", "signature": "JTable getScrollableTable()", "full_signature": "@NotNull public final JTable getScrollableTable()", "class_method_signature": "FrozenColumnTable.getScrollableTable()", "testcase": false, "constructor": false}, {"identifier": "getScrollPane", "parameters": "()", "modifiers": "@NotNull public final", "return": "Component", "signature": "Component getScrollPane()", "full_signature": "@NotNull public final Component getScrollPane()", "class_method_signature": "FrozenColumnTable.getScrollPane()", "testcase": false, "constructor": false}, {"identifier": "getRowHeight", "parameters": "()", "modifiers": "final", "return": "int", "signature": "int getRowHeight()", "full_signature": "final int getRowHeight()", "class_method_signature": "FrozenColumnTable.getRowHeight()", "testcase": false, "constructor": false}, {"identifier": "setRowHeight", "parameters": "(int rowHeight)", "modifiers": "final", "return": "void", "signature": "void setRowHeight(int rowHeight)", "full_signature": "final void setRowHeight(int rowHeight)", "class_method_signature": "FrozenColumnTable.setRowHeight(int rowHeight)", "testcase": false, "constructor": false}, {"identifier": "putInInputMap", "parameters": "(@NotNull KeyStroke keyStroke, @SuppressWarnings(\"SameParameterValue\") @NotNull Object actionMapKey)", "modifiers": "final", "return": "void", "signature": "void putInInputMap(@NotNull KeyStroke keyStroke, @SuppressWarnings(\"SameParameterValue\") @NotNull Object actionMapKey)", "full_signature": "final void putInInputMap(@NotNull KeyStroke keyStroke, @SuppressWarnings(\"SameParameterValue\") @NotNull Object actionMapKey)", "class_method_signature": "FrozenColumnTable.putInInputMap(@NotNull KeyStroke keyStroke, @SuppressWarnings(\"SameParameterValue\") @NotNull Object actionMapKey)", "testcase": false, "constructor": false}, {"identifier": "putInActionMap", "parameters": "(@NotNull Object key, @NotNull Action action)", "modifiers": "public final", "return": "void", "signature": "void putInActionMap(@NotNull Object key, @NotNull Action action)", "full_signature": "public final void putInActionMap(@NotNull Object key, @NotNull Action action)", "class_method_signature": "FrozenColumnTable.putInActionMap(@NotNull Object key, @NotNull Action action)", "testcase": false, "constructor": false}, {"identifier": "addFrozenColumnTableListener", "parameters": "(@NotNull FrozenColumnTableListener listener)", "modifiers": "public final", "return": "void", "signature": "void addFrozenColumnTableListener(@NotNull FrozenColumnTableListener listener)", "full_signature": "public final void addFrozenColumnTableListener(@NotNull FrozenColumnTableListener listener)", "class_method_signature": "FrozenColumnTable.addFrozenColumnTableListener(@NotNull FrozenColumnTableListener listener)", "testcase": false, "constructor": false}, {"identifier": "getListeners", "parameters": "()", "modifiers": "@NotNull final", "return": "Iterable<FrozenColumnTableListener>", "signature": "Iterable<FrozenColumnTableListener> getListeners()", "full_signature": "@NotNull final Iterable<FrozenColumnTableListener> getListeners()", "class_method_signature": "FrozenColumnTable.getListeners()", "testcase": false, "constructor": false}, {"identifier": "isPastePossible", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isPastePossible()", "full_signature": " boolean isPastePossible()", "class_method_signature": "FrozenColumnTable.isPastePossible()", "testcase": false, "constructor": false}, {"identifier": "paste", "parameters": "(@NotNull Transferable transferable)", "modifiers": "final", "return": "void", "signature": "void paste(@NotNull Transferable transferable)", "full_signature": "final void paste(@NotNull Transferable transferable)", "class_method_signature": "FrozenColumnTable.paste(@NotNull Transferable transferable)", "testcase": false, "constructor": false}, {"identifier": "getTransferDataAsString", "parameters": "(@NotNull Transferable transferable)", "modifiers": "@NotNull private static", "return": "String", "signature": "String getTransferDataAsString(@NotNull Transferable transferable)", "full_signature": "@NotNull private static String getTransferDataAsString(@NotNull Transferable transferable)", "class_method_signature": "FrozenColumnTable.getTransferDataAsString(@NotNull Transferable transferable)", "testcase": false, "constructor": false}, {"identifier": "createDefaultColumnsFromModel", "parameters": "()", "modifiers": "final", "return": "void", "signature": "void createDefaultColumnsFromModel()", "full_signature": "final void createDefaultColumnsFromModel()", "class_method_signature": "FrozenColumnTable.createDefaultColumnsFromModel()", "testcase": false, "constructor": false}, {"identifier": "setDefaultRenderer", "parameters": "(@NotNull @SuppressWarnings(\"SameParameterValue\") Class<?> c, @NotNull TableCellRenderer renderer)", "modifiers": "final", "return": "void", "signature": "void setDefaultRenderer(@NotNull @SuppressWarnings(\"SameParameterValue\") Class<?> c, @NotNull TableCellRenderer renderer)", "full_signature": "final void setDefaultRenderer(@NotNull @SuppressWarnings(\"SameParameterValue\") Class<?> c, @NotNull TableCellRenderer renderer)", "class_method_signature": "FrozenColumnTable.setDefaultRenderer(@NotNull @SuppressWarnings(\"SameParameterValue\") Class<?> c, @NotNull TableCellRenderer renderer)", "testcase": false, "constructor": false}, {"identifier": "setDefaultEditor", "parameters": "(@NotNull @SuppressWarnings(\"SameParameterValue\") Class<?> c, @NotNull TableCellEditor editor)", "modifiers": "final", "return": "void", "signature": "void setDefaultEditor(@NotNull @SuppressWarnings(\"SameParameterValue\") Class<?> c, @NotNull TableCellEditor editor)", "full_signature": "final void setDefaultEditor(@NotNull @SuppressWarnings(\"SameParameterValue\") Class<?> c, @NotNull TableCellEditor editor)", "class_method_signature": "FrozenColumnTable.setDefaultEditor(@NotNull @SuppressWarnings(\"SameParameterValue\") Class<?> c, @NotNull TableCellEditor editor)", "testcase": false, "constructor": false}, {"identifier": "getRowSorter", "parameters": "()", "modifiers": "@Nullable final", "return": "FrozenColumnTableRowSorter<M>", "signature": "FrozenColumnTableRowSorter<M> getRowSorter()", "full_signature": "@Nullable final FrozenColumnTableRowSorter<M> getRowSorter()", "class_method_signature": "FrozenColumnTable.getRowSorter()", "testcase": false, "constructor": false}, {"identifier": "setRowSorter", "parameters": "(@Nullable FrozenColumnTableRowSorter<M> rowSorter)", "modifiers": "final", "return": "void", "signature": "void setRowSorter(@Nullable FrozenColumnTableRowSorter<M> rowSorter)", "full_signature": "final void setRowSorter(@Nullable FrozenColumnTableRowSorter<M> rowSorter)", "class_method_signature": "FrozenColumnTable.setRowSorter(@Nullable FrozenColumnTableRowSorter<M> rowSorter)", "testcase": false, "constructor": false}, {"identifier": "setRowSelectionInterval", "parameters": "(int viewRowIndex1, int viewRowIndex2)", "modifiers": "public final", "return": "void", "signature": "void setRowSelectionInterval(int viewRowIndex1, int viewRowIndex2)", "full_signature": "public final void setRowSelectionInterval(int viewRowIndex1, int viewRowIndex2)", "class_method_signature": "FrozenColumnTable.setRowSelectionInterval(int viewRowIndex1, int viewRowIndex2)", "testcase": false, "constructor": false}, {"identifier": "setColumnSelectionInterval", "parameters": "(int viewColumnIndex1, int viewColumnIndex2)", "modifiers": "public final", "return": "void", "signature": "void setColumnSelectionInterval(int viewColumnIndex1, int viewColumnIndex2)", "full_signature": "public final void setColumnSelectionInterval(int viewColumnIndex1, int viewColumnIndex2)", "class_method_signature": "FrozenColumnTable.setColumnSelectionInterval(int viewColumnIndex1, int viewColumnIndex2)", "testcase": false, "constructor": false}, {"identifier": "getSelectedRow", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getSelectedRow()", "full_signature": "public final int getSelectedRow()", "class_method_signature": "FrozenColumnTable.getSelectedRow()", "testcase": false, "constructor": false}, {"identifier": "getSelectedColumn", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getSelectedColumn()", "full_signature": "public final int getSelectedColumn()", "class_method_signature": "FrozenColumnTable.getSelectedColumn()", "testcase": false, "constructor": false}, {"identifier": "getSelectedRowCount", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getSelectedRowCount()", "full_signature": "public final int getSelectedRowCount()", "class_method_signature": "FrozenColumnTable.getSelectedRowCount()", "testcase": false, "constructor": false}, {"identifier": "getSelectedColumnCount", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getSelectedColumnCount()", "full_signature": "public final int getSelectedColumnCount()", "class_method_signature": "FrozenColumnTable.getSelectedColumnCount()", "testcase": false, "constructor": false}, {"identifier": "getRowCount", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getRowCount()", "full_signature": "public final int getRowCount()", "class_method_signature": "FrozenColumnTable.getRowCount()", "testcase": false, "constructor": false}, {"identifier": "getColumnCount", "parameters": "()", "modifiers": "public final", "return": "int", "signature": "int getColumnCount()", "full_signature": "public final int getColumnCount()", "class_method_signature": "FrozenColumnTable.getColumnCount()", "testcase": false, "constructor": false}, {"identifier": "getColumnName", "parameters": "(int viewColumnIndex)", "modifiers": "@NotNull public final", "return": "String", "signature": "String getColumnName(int viewColumnIndex)", "full_signature": "@NotNull public final String getColumnName(int viewColumnIndex)", "class_method_signature": "FrozenColumnTable.getColumnName(int viewColumnIndex)", "testcase": false, "constructor": false}, {"identifier": "getColumnAt", "parameters": "(int viewColumnIndex)", "modifiers": "@VisibleForTesting @NotNull public final", "return": "Object", "signature": "Object getColumnAt(int viewColumnIndex)", "full_signature": "@VisibleForTesting @NotNull public final Object getColumnAt(int viewColumnIndex)", "class_method_signature": "FrozenColumnTable.getColumnAt(int viewColumnIndex)", "testcase": false, "constructor": false}, {"identifier": "getValueAt", "parameters": "(int viewRowIndex, int viewColumnIndex)", "modifiers": "@NotNull public final", "return": "Object", "signature": "Object getValueAt(int viewRowIndex, int viewColumnIndex)", "full_signature": "@NotNull public final Object getValueAt(int viewRowIndex, int viewColumnIndex)", "class_method_signature": "FrozenColumnTable.getValueAt(int viewRowIndex, int viewColumnIndex)", "testcase": false, "constructor": false}, {"identifier": "setValueAt", "parameters": "(@NotNull Object value, int viewRowIndex, int viewColumnIndex)", "modifiers": "private", "return": "void", "signature": "void setValueAt(@NotNull Object value, int viewRowIndex, int viewColumnIndex)", "full_signature": "private void setValueAt(@NotNull Object value, int viewRowIndex, int viewColumnIndex)", "class_method_signature": "FrozenColumnTable.setValueAt(@NotNull Object value, int viewRowIndex, int viewColumnIndex)", "testcase": false, "constructor": false}, {"identifier": "editCellAt", "parameters": "(int viewRowIndex, int viewColumnIndex)", "modifiers": "public final", "return": "boolean", "signature": "boolean editCellAt(int viewRowIndex, int viewColumnIndex)", "full_signature": "public final boolean editCellAt(int viewRowIndex, int viewColumnIndex)", "class_method_signature": "FrozenColumnTable.editCellAt(int viewRowIndex, int viewColumnIndex)", "testcase": false, "constructor": false}, {"identifier": "getModel", "parameters": "()", "modifiers": "@NotNull public final", "return": "M", "signature": "M getModel()", "full_signature": "@NotNull public final M getModel()", "class_method_signature": "FrozenColumnTable.getModel()", "testcase": false, "constructor": false}, {"identifier": "setModel", "parameters": "(@NotNull M model)", "modifiers": "public", "return": "void", "signature": "void setModel(@NotNull M model)", "full_signature": "public void setModel(@NotNull M model)", "class_method_signature": "FrozenColumnTable.setModel(@NotNull M model)", "testcase": false, "constructor": false}, {"identifier": "getCellEditor", "parameters": "()", "modifiers": "@Nullable public final", "return": "TableCellEditor", "signature": "TableCellEditor getCellEditor()", "full_signature": "@Nullable public final TableCellEditor getCellEditor()", "class_method_signature": "FrozenColumnTable.getCellEditor()", "testcase": false, "constructor": false}, {"identifier": "getFont", "parameters": "()", "modifiers": "@NotNull final", "return": "Font", "signature": "Font getFont()", "full_signature": "@NotNull final Font getFont()", "class_method_signature": "FrozenColumnTable.getFont()", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/editors/strings/table/FrozenColumnTable.java"}, "focal_method": {"identifier": "getRowHeight", "parameters": "()", "modifiers": "final", "return": "int", "body": "final int getRowHeight() {\n    return rowHeight;\n  }", "signature": "int getRowHeight()", "full_signature": "final int getRowHeight()", "class_method_signature": "FrozenColumnTable.getRowHeight()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}