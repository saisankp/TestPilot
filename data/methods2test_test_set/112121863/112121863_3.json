{"test_class": {"identifier": "ReflectionAssertTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TestObjectString testObjectAString;", "modifier": "private", "type": "TestObjectString", "declarator": "testObjectAString", "var_name": "testObjectAString"}, {"original_string": "private TestObjectString testObjectBString;", "modifier": "private", "type": "TestObjectString", "declarator": "testObjectBString", "var_name": "testObjectBString"}, {"original_string": "private TestObjectString testObjectDifferentValueString;", "modifier": "private", "type": "TestObjectString", "declarator": "testObjectDifferentValueString", "var_name": "testObjectDifferentValueString"}, {"original_string": "private TestObjectIntString testObjectAIntString;", "modifier": "private", "type": "TestObjectIntString", "declarator": "testObjectAIntString", "var_name": "testObjectAIntString"}, {"original_string": "private TestObjectIntString testObjectBIntString;", "modifier": "private", "type": "TestObjectIntString", "declarator": "testObjectBIntString", "var_name": "testObjectBIntString"}], "file": "reflection-assert-vintage/src/test/java/org/unitils/reflectionassert/ReflectionAssertTest.java"}, "test_case": {"identifier": "testAssertLenientEquals_equalsMessage", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void testAssertLenientEquals_equalsMessage() {\n    assertLenientEquals(\"a message\", testObjectAString, testObjectBString);\n  }", "signature": "void testAssertLenientEquals_equalsMessage()", "full_signature": "@Test void testAssertLenientEquals_equalsMessage()", "class_method_signature": "ReflectionAssertTest.testAssertLenientEquals_equalsMessage()", "testcase": true, "constructor": false, "invocations": ["assertLenientEquals"]}, "focal_class": {"identifier": "ReflectionAssert", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "assertLenientEquals", "parameters": "(Object expected, Object actual)", "modifiers": "public static", "return": "void", "signature": "void assertLenientEquals(Object expected, Object actual)", "full_signature": "public static void assertLenientEquals(Object expected, Object actual)", "class_method_signature": "ReflectionAssert.assertLenientEquals(Object expected, Object actual)", "testcase": false, "constructor": false}, {"identifier": "assertReflectionEquals", "parameters": "(\n      Object expected,\n      Object actual,\n      ReflectionComparatorMode... modes\n  )", "modifiers": "public static", "return": "void", "signature": "void assertReflectionEquals(\n      Object expected,\n      Object actual,\n      ReflectionComparatorMode... modes\n  )", "full_signature": "public static void assertReflectionEquals(\n      Object expected,\n      Object actual,\n      ReflectionComparatorMode... modes\n  )", "class_method_signature": "ReflectionAssert.assertReflectionEquals(\n      Object expected,\n      Object actual,\n      ReflectionComparatorMode... modes\n  )", "testcase": false, "constructor": false}, {"identifier": "assertLenientEquals", "parameters": "(String message, Object expected, Object actual)", "modifiers": "public static", "return": "void", "signature": "void assertLenientEquals(String message, Object expected, Object actual)", "full_signature": "public static void assertLenientEquals(String message, Object expected, Object actual)", "class_method_signature": "ReflectionAssert.assertLenientEquals(String message, Object expected, Object actual)", "testcase": false, "constructor": false}, {"identifier": "assertReflectionEquals", "parameters": "(\n      String message,\n      Object expected,\n      Object actual,\n      ReflectionComparatorMode... modes\n  )", "modifiers": "public static", "return": "void", "signature": "void assertReflectionEquals(\n      String message,\n      Object expected,\n      Object actual,\n      ReflectionComparatorMode... modes\n  )", "full_signature": "public static void assertReflectionEquals(\n      String message,\n      Object expected,\n      Object actual,\n      ReflectionComparatorMode... modes\n  )", "class_method_signature": "ReflectionAssert.assertReflectionEquals(\n      String message,\n      Object expected,\n      Object actual,\n      ReflectionComparatorMode... modes\n  )", "testcase": false, "constructor": false}, {"identifier": "getFailureMessage", "parameters": "(String message, Difference difference)", "modifiers": "private static", "return": "String", "signature": "String getFailureMessage(String message, Difference difference)", "full_signature": "private static String getFailureMessage(String message, Difference difference)", "class_method_signature": "ReflectionAssert.getFailureMessage(String message, Difference difference)", "testcase": false, "constructor": false}, {"identifier": "assertPropertyLenientEquals", "parameters": "(\n      String propertyName,\n      Object expectedPropertyValue,\n      Object actualObject\n  )", "modifiers": "public static", "return": "void", "signature": "void assertPropertyLenientEquals(\n      String propertyName,\n      Object expectedPropertyValue,\n      Object actualObject\n  )", "full_signature": "public static void assertPropertyLenientEquals(\n      String propertyName,\n      Object expectedPropertyValue,\n      Object actualObject\n  )", "class_method_signature": "ReflectionAssert.assertPropertyLenientEquals(\n      String propertyName,\n      Object expectedPropertyValue,\n      Object actualObject\n  )", "testcase": false, "constructor": false}, {"identifier": "assertPropertyReflectionEquals", "parameters": "(\n      String propertyName,\n      Object expectedPropertyValue,\n      Object actualObject,\n      ReflectionComparatorMode... modes\n  )", "modifiers": "public static", "return": "void", "signature": "void assertPropertyReflectionEquals(\n      String propertyName,\n      Object expectedPropertyValue,\n      Object actualObject,\n      ReflectionComparatorMode... modes\n  )", "full_signature": "public static void assertPropertyReflectionEquals(\n      String propertyName,\n      Object expectedPropertyValue,\n      Object actualObject,\n      ReflectionComparatorMode... modes\n  )", "class_method_signature": "ReflectionAssert.assertPropertyReflectionEquals(\n      String propertyName,\n      Object expectedPropertyValue,\n      Object actualObject,\n      ReflectionComparatorMode... modes\n  )", "testcase": false, "constructor": false}, {"identifier": "assertPropertyLenientEquals", "parameters": "(\n      String message,\n      String propertyName,\n      Object expectedPropertyValue,\n      Object actualObject\n  )", "modifiers": "public static", "return": "void", "signature": "void assertPropertyLenientEquals(\n      String message,\n      String propertyName,\n      Object expectedPropertyValue,\n      Object actualObject\n  )", "full_signature": "public static void assertPropertyLenientEquals(\n      String message,\n      String propertyName,\n      Object expectedPropertyValue,\n      Object actualObject\n  )", "class_method_signature": "ReflectionAssert.assertPropertyLenientEquals(\n      String message,\n      String propertyName,\n      Object expectedPropertyValue,\n      Object actualObject\n  )", "testcase": false, "constructor": false}, {"identifier": "assertPropertyReflectionEquals", "parameters": "(\n      String message,\n      String propertyName,\n      Object expectedPropertyValue,\n      Object actualObject,\n      ReflectionComparatorMode... modes\n  )", "modifiers": "public static", "return": "void", "signature": "void assertPropertyReflectionEquals(\n      String message,\n      String propertyName,\n      Object expectedPropertyValue,\n      Object actualObject,\n      ReflectionComparatorMode... modes\n  )", "full_signature": "public static void assertPropertyReflectionEquals(\n      String message,\n      String propertyName,\n      Object expectedPropertyValue,\n      Object actualObject,\n      ReflectionComparatorMode... modes\n  )", "class_method_signature": "ReflectionAssert.assertPropertyReflectionEquals(\n      String message,\n      String propertyName,\n      Object expectedPropertyValue,\n      Object actualObject,\n      ReflectionComparatorMode... modes\n  )", "testcase": false, "constructor": false}, {"identifier": "assertPropertyLenientEquals", "parameters": "(\n      String propertyName,\n      Collection<?> expectedPropertyValues,\n      Collection<?> actualObjects\n  )", "modifiers": "public static", "return": "void", "signature": "void assertPropertyLenientEquals(\n      String propertyName,\n      Collection<?> expectedPropertyValues,\n      Collection<?> actualObjects\n  )", "full_signature": "public static void assertPropertyLenientEquals(\n      String propertyName,\n      Collection<?> expectedPropertyValues,\n      Collection<?> actualObjects\n  )", "class_method_signature": "ReflectionAssert.assertPropertyLenientEquals(\n      String propertyName,\n      Collection<?> expectedPropertyValues,\n      Collection<?> actualObjects\n  )", "testcase": false, "constructor": false}, {"identifier": "assertPropertyReflectionEquals", "parameters": "(\n      String propertyName,\n      Collection<?> expectedPropertyValues,\n      Collection<?> actualObjects,\n      ReflectionComparatorMode... modes\n  )", "modifiers": "public static", "return": "void", "signature": "void assertPropertyReflectionEquals(\n      String propertyName,\n      Collection<?> expectedPropertyValues,\n      Collection<?> actualObjects,\n      ReflectionComparatorMode... modes\n  )", "full_signature": "public static void assertPropertyReflectionEquals(\n      String propertyName,\n      Collection<?> expectedPropertyValues,\n      Collection<?> actualObjects,\n      ReflectionComparatorMode... modes\n  )", "class_method_signature": "ReflectionAssert.assertPropertyReflectionEquals(\n      String propertyName,\n      Collection<?> expectedPropertyValues,\n      Collection<?> actualObjects,\n      ReflectionComparatorMode... modes\n  )", "testcase": false, "constructor": false}, {"identifier": "assertPropertyLenientEquals", "parameters": "(\n      String message,\n      String propertyName,\n      Collection<?> expectedPropertyValues,\n      Collection<?> actualObjects\n  )", "modifiers": "public static", "return": "void", "signature": "void assertPropertyLenientEquals(\n      String message,\n      String propertyName,\n      Collection<?> expectedPropertyValues,\n      Collection<?> actualObjects\n  )", "full_signature": "public static void assertPropertyLenientEquals(\n      String message,\n      String propertyName,\n      Collection<?> expectedPropertyValues,\n      Collection<?> actualObjects\n  )", "class_method_signature": "ReflectionAssert.assertPropertyLenientEquals(\n      String message,\n      String propertyName,\n      Collection<?> expectedPropertyValues,\n      Collection<?> actualObjects\n  )", "testcase": false, "constructor": false}, {"identifier": "assertPropertiesNotNull", "parameters": "(String message, Object object)", "modifiers": "public static", "return": "void", "signature": "void assertPropertiesNotNull(String message, Object object)", "full_signature": "public static void assertPropertiesNotNull(String message, Object object)", "class_method_signature": "ReflectionAssert.assertPropertiesNotNull(String message, Object object)", "testcase": false, "constructor": false}, {"identifier": "assertPropertyReflectionEquals", "parameters": "(\n      String message,\n      String propertyName,\n      Collection<?> expectedPropertyValues,\n      Collection<?> actualObjects,\n      ReflectionComparatorMode... modes\n  )", "modifiers": "public static", "return": "void", "signature": "void assertPropertyReflectionEquals(\n      String message,\n      String propertyName,\n      Collection<?> expectedPropertyValues,\n      Collection<?> actualObjects,\n      ReflectionComparatorMode... modes\n  )", "full_signature": "public static void assertPropertyReflectionEquals(\n      String message,\n      String propertyName,\n      Collection<?> expectedPropertyValues,\n      Collection<?> actualObjects,\n      ReflectionComparatorMode... modes\n  )", "class_method_signature": "ReflectionAssert.assertPropertyReflectionEquals(\n      String message,\n      String propertyName,\n      Collection<?> expectedPropertyValues,\n      Collection<?> actualObjects,\n      ReflectionComparatorMode... modes\n  )", "testcase": false, "constructor": false}, {"identifier": "formatMessage", "parameters": "(String suppliedMessage, String specificMessage)", "modifiers": "private static", "return": "String", "signature": "String formatMessage(String suppliedMessage, String specificMessage)", "full_signature": "private static String formatMessage(String suppliedMessage, String specificMessage)", "class_method_signature": "ReflectionAssert.formatMessage(String suppliedMessage, String specificMessage)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(Object object, String ognlExpression)", "modifiers": "private static", "return": "Object", "signature": "Object getProperty(Object object, String ognlExpression)", "full_signature": "private static Object getProperty(Object object, String ognlExpression)", "class_method_signature": "ReflectionAssert.getProperty(Object object, String ognlExpression)", "testcase": false, "constructor": false}, {"identifier": "assertAccessablePropertiesNotNull", "parameters": "(String message, Object object)", "modifiers": "public static", "return": "void", "signature": "void assertAccessablePropertiesNotNull(String message, Object object)", "full_signature": "public static void assertAccessablePropertiesNotNull(String message, Object object)", "class_method_signature": "ReflectionAssert.assertAccessablePropertiesNotNull(String message, Object object)", "testcase": false, "constructor": false}], "file": "reflection-assert-vintage/src/main/java/org/unitils/reflectionassert/ReflectionAssert.java"}, "focal_method": {"identifier": "assertLenientEquals", "parameters": "(Object expected, Object actual)", "modifiers": "public static", "return": "void", "body": "public static void assertLenientEquals(Object expected, Object actual)\n      throws AssertionFailedError {\n    assertLenientEquals(null, expected, actual);\n  }", "signature": "void assertLenientEquals(Object expected, Object actual)", "full_signature": "public static void assertLenientEquals(Object expected, Object actual)", "class_method_signature": "ReflectionAssert.assertLenientEquals(Object expected, Object actual)", "testcase": false, "constructor": false, "invocations": ["assertLenientEquals"]}, "repository": {"repo_id": 112121863, "url": "https://github.com/hpple/reflection-assert", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 7, "size": 223, "license": "licensed"}}