{"test_class": {"identifier": "MacAddressTest", "superclass": "", "interfaces": "", "fields": [], "file": "backend/src/test/java/dataStructures/MacAddressTest.java"}, "test_case": {"identifier": "testBroadcast", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n     public void testBroadcast() {\n         MacAddress mac;\n         String sm;\n\n         sm=\"ff:ff:ff:ff:ff:ff\";\n         mac = new MacAddress(sm);\n         assertTrue(MacAddress.isBroadcast(mac));\n\n         sm=\"1a:4c:05:49:ad:f9\";\n         mac = new MacAddress(sm);\n         assertFalse(MacAddress.isBroadcast(mac));\n     }", "signature": "void testBroadcast()", "full_signature": "@Test public void testBroadcast()", "class_method_signature": "MacAddressTest.testBroadcast()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isBroadcast", "assertFalse", "isBroadcast"]}, "focal_class": {"identifier": "MacAddress", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final byte[] representation;", "modifier": "private final", "type": "byte[]", "declarator": "representation", "var_name": "representation"}, {"original_string": "private static MacAddress broadcast;", "modifier": "private static", "type": "MacAddress", "declarator": "broadcast", "var_name": "broadcast"}], "methods": [{"identifier": "MacAddress", "parameters": "(String address)", "modifiers": "public", "return": "", "signature": " MacAddress(String address)", "full_signature": "public  MacAddress(String address)", "class_method_signature": "MacAddress.MacAddress(String address)", "testcase": false, "constructor": true}, {"identifier": "MacAddress", "parameters": "(String address, char delimiter)", "modifiers": "public", "return": "", "signature": " MacAddress(String address, char delimiter)", "full_signature": "public  MacAddress(String address, char delimiter)", "class_method_signature": "MacAddress.MacAddress(String address, char delimiter)", "testcase": false, "constructor": true}, {"identifier": "MacAddress", "parameters": "(byte[] representation)", "modifiers": "public", "return": "", "signature": " MacAddress(byte[] representation)", "full_signature": "public  MacAddress(byte[] representation)", "class_method_signature": "MacAddress.MacAddress(byte[] representation)", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "MacAddress.toString()", "testcase": false, "constructor": false}, {"identifier": "getCiscoRepresentation", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCiscoRepresentation()", "full_signature": "public String getCiscoRepresentation()", "class_method_signature": "MacAddress.getCiscoRepresentation()", "testcase": false, "constructor": false}, {"identifier": "getByteArray", "parameters": "()", "modifiers": "public", "return": "byte []", "signature": "byte [] getByteArray()", "full_signature": "public byte [] getByteArray()", "class_method_signature": "MacAddress.getByteArray()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "MacAddress.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "MacAddress.hashCode()", "testcase": false, "constructor": false}, {"identifier": "isLessOrEqualThan", "parameters": "(MacAddress other)", "modifiers": "public", "return": "boolean", "signature": "boolean isLessOrEqualThan(MacAddress other)", "full_signature": "public boolean isLessOrEqualThan(MacAddress other)", "class_method_signature": "MacAddress.isLessOrEqualThan(MacAddress other)", "testcase": false, "constructor": false}, {"identifier": "isByteLessThan", "parameters": "(MacAddress other, int cisloBytu)", "modifiers": "private", "return": "boolean", "signature": "boolean isByteLessThan(MacAddress other, int cisloBytu)", "full_signature": "private boolean isByteLessThan(MacAddress other, int cisloBytu)", "class_method_signature": "MacAddress.isByteLessThan(MacAddress other, int cisloBytu)", "testcase": false, "constructor": false}, {"identifier": "isBroadcast", "parameters": "(MacAddress mac)", "modifiers": "public static", "return": "boolean", "signature": "boolean isBroadcast(MacAddress mac)", "full_signature": "public static boolean isBroadcast(MacAddress mac)", "class_method_signature": "MacAddress.isBroadcast(MacAddress mac)", "testcase": false, "constructor": false}, {"identifier": "broadcast", "parameters": "()", "modifiers": "public static", "return": "MacAddress", "signature": "MacAddress broadcast()", "full_signature": "public static MacAddress broadcast()", "class_method_signature": "MacAddress.broadcast()", "testcase": false, "constructor": false}, {"identifier": "getRandomMac", "parameters": "()", "modifiers": "public static", "return": "MacAddress", "signature": "MacAddress getRandomMac()", "full_signature": "public static MacAddress getRandomMac()", "class_method_signature": "MacAddress.getRandomMac()", "testcase": false, "constructor": false}, {"identifier": "stringToBytes", "parameters": "(String adr, char delimiter)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] stringToBytes(String adr, char delimiter)", "full_signature": "private static byte[] stringToBytes(String adr, char delimiter)", "class_method_signature": "MacAddress.stringToBytes(String adr, char delimiter)", "testcase": false, "constructor": false}, {"identifier": "stringToByte", "parameters": "(String s)", "modifiers": "private static", "return": "byte", "signature": "byte stringToByte(String s)", "full_signature": "private static byte stringToByte(String s)", "class_method_signature": "MacAddress.stringToByte(String s)", "testcase": false, "constructor": false}, {"identifier": "byteToString", "parameters": "(byte bajt)", "modifiers": "private static", "return": "String", "signature": "String byteToString(byte bajt)", "full_signature": "private static String byteToString(byte bajt)", "class_method_signature": "MacAddress.byteToString(byte bajt)", "testcase": false, "constructor": false}], "file": "backend/src/main/java/dataStructures/MacAddress.java"}, "focal_method": {"identifier": "broadcast", "parameters": "()", "modifiers": "public static", "return": "MacAddress", "body": "public static MacAddress broadcast() {\n\t\tif (broadcast == null) {\n\t\t\tbyte[] pole = new byte[6];\n\t\t\tfor (int i = 0; i < 6; i++) {\n\t\t\t\tpole[i] = (byte) 255;\n\t\t\t}\n\t\t\tbroadcast = new MacAddress(pole);\n\t\t}\n\t\treturn broadcast;\n\t}", "signature": "MacAddress broadcast()", "full_signature": "public static MacAddress broadcast()", "class_method_signature": "MacAddress.broadcast()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 64865857, "url": "https://github.com/rkuebert/psimulator", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 13, "size": 5755, "license": "licensed"}}