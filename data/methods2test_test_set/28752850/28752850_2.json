{"test_class": {"identifier": "DefaultTimepointLimiterTest", "superclass": "", "interfaces": "", "fields": [], "file": "library/src/test/java/com/wdullaer/materialdatetimepicker/time/DefaultTimepointLimiterTest.java"}, "test_case": {"identifier": "isAmDisabledShouldReturnFalseWithoutConstraints", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isAmDisabledShouldReturnFalseWithoutConstraints() {\n        DefaultTimepointLimiter limiter = new DefaultTimepointLimiter();\n\n        Assert.assertFalse(limiter.isAmDisabled());\n    }", "signature": "void isAmDisabledShouldReturnFalseWithoutConstraints()", "full_signature": "@Test public void isAmDisabledShouldReturnFalseWithoutConstraints()", "class_method_signature": "DefaultTimepointLimiterTest.isAmDisabledShouldReturnFalseWithoutConstraints()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isAmDisabled"]}, "focal_class": {"identifier": "DefaultTimepointLimiter", "superclass": "", "interfaces": "implements TimepointLimiter", "fields": [{"original_string": "private TreeSet<Timepoint> mSelectableTimes = new TreeSet<>();", "modifier": "private", "type": "TreeSet<Timepoint>", "declarator": "mSelectableTimes = new TreeSet<>()", "var_name": "mSelectableTimes"}, {"original_string": "private TreeSet<Timepoint> mDisabledTimes = new TreeSet<>();", "modifier": "private", "type": "TreeSet<Timepoint>", "declarator": "mDisabledTimes = new TreeSet<>()", "var_name": "mDisabledTimes"}, {"original_string": "private TreeSet<Timepoint> exclusiveSelectableTimes = new TreeSet<>();", "modifier": "private", "type": "TreeSet<Timepoint>", "declarator": "exclusiveSelectableTimes = new TreeSet<>()", "var_name": "exclusiveSelectableTimes"}, {"original_string": "private Timepoint mMinTime;", "modifier": "private", "type": "Timepoint", "declarator": "mMinTime", "var_name": "mMinTime"}, {"original_string": "private Timepoint mMaxTime;", "modifier": "private", "type": "Timepoint", "declarator": "mMaxTime", "var_name": "mMaxTime"}, {"original_string": "@SuppressWarnings(\"WeakerAccess\")\n    public static final Parcelable.Creator<DefaultTimepointLimiter> CREATOR\n            = new Parcelable.Creator<DefaultTimepointLimiter>() {\n        public DefaultTimepointLimiter createFromParcel(Parcel in) {\n            return new DefaultTimepointLimiter(in);\n        }\n\n        public DefaultTimepointLimiter[] newArray(int size) {\n            return new DefaultTimepointLimiter[size];\n        }\n    };", "modifier": "@SuppressWarnings(\"WeakerAccess\")\n    public static final", "type": "Parcelable.Creator<DefaultTimepointLimiter>", "declarator": "CREATOR\n            = new Parcelable.Creator<DefaultTimepointLimiter>() {\n        public DefaultTimepointLimiter createFromParcel(Parcel in) {\n            return new DefaultTimepointLimiter(in);\n        }\n\n        public DefaultTimepointLimiter[] newArray(int size) {\n            return new DefaultTimepointLimiter[size];\n        }\n    }", "var_name": "CREATOR"}], "methods": [{"identifier": "DefaultTimepointLimiter", "parameters": "()", "modifiers": "", "return": "", "signature": " DefaultTimepointLimiter()", "full_signature": "  DefaultTimepointLimiter()", "class_method_signature": "DefaultTimepointLimiter.DefaultTimepointLimiter()", "testcase": false, "constructor": true}, {"identifier": "DefaultTimepointLimiter", "parameters": "(Parcel in)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public", "return": "", "signature": " DefaultTimepointLimiter(Parcel in)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public  DefaultTimepointLimiter(Parcel in)", "class_method_signature": "DefaultTimepointLimiter.DefaultTimepointLimiter(Parcel in)", "testcase": false, "constructor": true}, {"identifier": "writeToParcel", "parameters": "(Parcel out, int flags)", "modifiers": "@Override public", "return": "void", "signature": "void writeToParcel(Parcel out, int flags)", "full_signature": "@Override public void writeToParcel(Parcel out, int flags)", "class_method_signature": "DefaultTimepointLimiter.writeToParcel(Parcel out, int flags)", "testcase": false, "constructor": false}, {"identifier": "describeContents", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int describeContents()", "full_signature": "@Override public int describeContents()", "class_method_signature": "DefaultTimepointLimiter.describeContents()", "testcase": false, "constructor": false}, {"identifier": "setMinTime", "parameters": "(@NonNull Timepoint minTime)", "modifiers": "", "return": "void", "signature": "void setMinTime(@NonNull Timepoint minTime)", "full_signature": " void setMinTime(@NonNull Timepoint minTime)", "class_method_signature": "DefaultTimepointLimiter.setMinTime(@NonNull Timepoint minTime)", "testcase": false, "constructor": false}, {"identifier": "setMaxTime", "parameters": "(@NonNull Timepoint maxTime)", "modifiers": "", "return": "void", "signature": "void setMaxTime(@NonNull Timepoint maxTime)", "full_signature": " void setMaxTime(@NonNull Timepoint maxTime)", "class_method_signature": "DefaultTimepointLimiter.setMaxTime(@NonNull Timepoint maxTime)", "testcase": false, "constructor": false}, {"identifier": "setSelectableTimes", "parameters": "(@NonNull Timepoint[] selectableTimes)", "modifiers": "", "return": "void", "signature": "void setSelectableTimes(@NonNull Timepoint[] selectableTimes)", "full_signature": " void setSelectableTimes(@NonNull Timepoint[] selectableTimes)", "class_method_signature": "DefaultTimepointLimiter.setSelectableTimes(@NonNull Timepoint[] selectableTimes)", "testcase": false, "constructor": false}, {"identifier": "setDisabledTimes", "parameters": "(@NonNull Timepoint[] disabledTimes)", "modifiers": "", "return": "void", "signature": "void setDisabledTimes(@NonNull Timepoint[] disabledTimes)", "full_signature": " void setDisabledTimes(@NonNull Timepoint[] disabledTimes)", "class_method_signature": "DefaultTimepointLimiter.setDisabledTimes(@NonNull Timepoint[] disabledTimes)", "testcase": false, "constructor": false}, {"identifier": "getMinTime", "parameters": "()", "modifiers": "@Nullable", "return": "Timepoint", "signature": "Timepoint getMinTime()", "full_signature": "@Nullable Timepoint getMinTime()", "class_method_signature": "DefaultTimepointLimiter.getMinTime()", "testcase": false, "constructor": false}, {"identifier": "getMaxTime", "parameters": "()", "modifiers": "@Nullable", "return": "Timepoint", "signature": "Timepoint getMaxTime()", "full_signature": "@Nullable Timepoint getMaxTime()", "class_method_signature": "DefaultTimepointLimiter.getMaxTime()", "testcase": false, "constructor": false}, {"identifier": "getSelectableTimes", "parameters": "()", "modifiers": "@NonNull", "return": "Timepoint[]", "signature": "Timepoint[] getSelectableTimes()", "full_signature": "@NonNull Timepoint[] getSelectableTimes()", "class_method_signature": "DefaultTimepointLimiter.getSelectableTimes()", "testcase": false, "constructor": false}, {"identifier": "getDisabledTimes", "parameters": "()", "modifiers": "@NonNull", "return": "Timepoint[]", "signature": "Timepoint[] getDisabledTimes()", "full_signature": "@NonNull Timepoint[] getDisabledTimes()", "class_method_signature": "DefaultTimepointLimiter.getDisabledTimes()", "testcase": false, "constructor": false}, {"identifier": "getExclusiveSelectableTimes", "parameters": "(@NonNull TreeSet<Timepoint> selectable, @NonNull TreeSet<Timepoint> disabled)", "modifiers": "@NonNull private", "return": "TreeSet<Timepoint>", "signature": "TreeSet<Timepoint> getExclusiveSelectableTimes(@NonNull TreeSet<Timepoint> selectable, @NonNull TreeSet<Timepoint> disabled)", "full_signature": "@NonNull private TreeSet<Timepoint> getExclusiveSelectableTimes(@NonNull TreeSet<Timepoint> selectable, @NonNull TreeSet<Timepoint> disabled)", "class_method_signature": "DefaultTimepointLimiter.getExclusiveSelectableTimes(@NonNull TreeSet<Timepoint> selectable, @NonNull TreeSet<Timepoint> disabled)", "testcase": false, "constructor": false}, {"identifier": "isOutOfRange", "parameters": "(@Nullable Timepoint current, int index, @NonNull Timepoint.TYPE resolution)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isOutOfRange(@Nullable Timepoint current, int index, @NonNull Timepoint.TYPE resolution)", "full_signature": "@Override public boolean isOutOfRange(@Nullable Timepoint current, int index, @NonNull Timepoint.TYPE resolution)", "class_method_signature": "DefaultTimepointLimiter.isOutOfRange(@Nullable Timepoint current, int index, @NonNull Timepoint.TYPE resolution)", "testcase": false, "constructor": false}, {"identifier": "isOutOfRange", "parameters": "(@NonNull Timepoint current)", "modifiers": "public", "return": "boolean", "signature": "boolean isOutOfRange(@NonNull Timepoint current)", "full_signature": "public boolean isOutOfRange(@NonNull Timepoint current)", "class_method_signature": "DefaultTimepointLimiter.isOutOfRange(@NonNull Timepoint current)", "testcase": false, "constructor": false}, {"identifier": "isAmDisabled", "parameters": "()", "modifiers": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public", "return": "boolean", "signature": "boolean isAmDisabled()", "full_signature": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public boolean isAmDisabled()", "class_method_signature": "DefaultTimepointLimiter.isAmDisabled()", "testcase": false, "constructor": false}, {"identifier": "isPmDisabled", "parameters": "()", "modifiers": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public", "return": "boolean", "signature": "boolean isPmDisabled()", "full_signature": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public boolean isPmDisabled()", "class_method_signature": "DefaultTimepointLimiter.isPmDisabled()", "testcase": false, "constructor": false}, {"identifier": "roundToNearest", "parameters": "(@NonNull Timepoint time,@Nullable Timepoint.TYPE type, @NonNull Timepoint.TYPE resolution)", "modifiers": "@Override public @NonNull", "return": "Timepoint", "signature": "Timepoint roundToNearest(@NonNull Timepoint time,@Nullable Timepoint.TYPE type, @NonNull Timepoint.TYPE resolution)", "full_signature": "@Override public @NonNull Timepoint roundToNearest(@NonNull Timepoint time,@Nullable Timepoint.TYPE type, @NonNull Timepoint.TYPE resolution)", "class_method_signature": "DefaultTimepointLimiter.roundToNearest(@NonNull Timepoint time,@Nullable Timepoint.TYPE type, @NonNull Timepoint.TYPE resolution)", "testcase": false, "constructor": false}, {"identifier": "searchValidTimePoint", "parameters": "(@NonNull Timepoint time, @Nullable Timepoint.TYPE type, @NonNull Timepoint.TYPE resolution)", "modifiers": "private", "return": "Timepoint", "signature": "Timepoint searchValidTimePoint(@NonNull Timepoint time, @Nullable Timepoint.TYPE type, @NonNull Timepoint.TYPE resolution)", "full_signature": "private Timepoint searchValidTimePoint(@NonNull Timepoint time, @Nullable Timepoint.TYPE type, @NonNull Timepoint.TYPE resolution)", "class_method_signature": "DefaultTimepointLimiter.searchValidTimePoint(@NonNull Timepoint time, @Nullable Timepoint.TYPE type, @NonNull Timepoint.TYPE resolution)", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/wdullaer/materialdatetimepicker/time/DefaultTimepointLimiter.java"}, "focal_method": {"identifier": "isAmDisabled", "parameters": "()", "modifiers": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public", "return": "boolean", "body": "@SuppressWarnings(\"SimplifiableIfStatement\")\n    @Override\n    public boolean isAmDisabled() {\n        Timepoint midday = new Timepoint(12);\n\n        if (mMinTime != null && mMinTime.compareTo(midday) >= 0) return true;\n\n        if (!exclusiveSelectableTimes.isEmpty()) return exclusiveSelectableTimes.first().compareTo(midday) >= 0;\n\n        return false;\n    }", "signature": "boolean isAmDisabled()", "full_signature": "@SuppressWarnings(\"SimplifiableIfStatement\") @Override public boolean isAmDisabled()", "class_method_signature": "DefaultTimepointLimiter.isAmDisabled()", "testcase": false, "constructor": false, "invocations": ["compareTo", "isEmpty", "compareTo", "first"]}, "repository": {"repo_id": 28752850, "url": "https://github.com/wdullaer/MaterialDateTimePicker", "stars": 4295, "created": "1/3/2015 7:41:03 PM +00:00", "updates": "2020-01-27T21:04:41+00:00", "fork": "False", "license": "licensed"}}