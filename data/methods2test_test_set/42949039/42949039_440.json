{"test_class": {"identifier": "StorageHelperTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/StorageHelperTest.java"}, "test_case": {"identifier": "testGetStorageAttributeValueByNameFromStorage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetStorageAttributeValueByNameFromStorage()\n    {\n        final String testStorageName = \"MY_TEST_STORAGE\";\n        final String testAttributeNameNoExists = \"I_DO_NOT_EXIST\";\n\n        Storage testStorage = new Storage();\n        testStorage.setName(testStorageName);\n        testStorage.setAttributes(businessObjectDefinitionServiceTestHelper.getNewAttributes());\n\n        assertEquals(ATTRIBUTE_VALUE_1, storageHelper.getStorageAttributeValueByName(ATTRIBUTE_NAME_1_MIXED_CASE, testStorage, Boolean.FALSE));\n        assertEquals(ATTRIBUTE_VALUE_2, storageHelper.getStorageAttributeValueByName(ATTRIBUTE_NAME_2_MIXED_CASE, testStorage, Boolean.TRUE));\n\n        // Testing attribute name case insensitivity.\n        assertEquals(ATTRIBUTE_VALUE_1, storageHelper.getStorageAttributeValueByName(ATTRIBUTE_NAME_1_MIXED_CASE.toLowerCase(), testStorage, Boolean.TRUE));\n        assertEquals(ATTRIBUTE_VALUE_1, storageHelper.getStorageAttributeValueByName(ATTRIBUTE_NAME_1_MIXED_CASE.toUpperCase(), testStorage, Boolean.TRUE));\n\n        assertNull(storageHelper.getStorageAttributeValueByName(testAttributeNameNoExists, testStorage, Boolean.FALSE));\n\n        // Try to get a required attribute value what does not exist.\n        try\n        {\n            storageHelper.getStorageAttributeValueByName(testAttributeNameNoExists, testStorage, Boolean.TRUE);\n            fail(\"Suppose to throw a RuntimeException when required storage attribute does not exist or has a blank value.\");\n        }\n        catch (RuntimeException e)\n        {\n            assertEquals(String.format(\"Attribute \\\"%s\\\" for \\\"%s\\\" storage must be configured.\", testAttributeNameNoExists, testStorage.getName()),\n                e.getMessage());\n        }\n    }", "signature": "void testGetStorageAttributeValueByNameFromStorage()", "full_signature": "@Test public void testGetStorageAttributeValueByNameFromStorage()", "class_method_signature": "StorageHelperTest.testGetStorageAttributeValueByNameFromStorage()", "testcase": true, "constructor": false, "invocations": ["setName", "setAttributes", "getNewAttributes", "assertEquals", "getStorageAttributeValueByName", "assertEquals", "getStorageAttributeValueByName", "assertEquals", "getStorageAttributeValueByName", "toLowerCase", "assertEquals", "getStorageAttributeValueByName", "toUpperCase", "assertNull", "getStorageAttributeValueByName", "getStorageAttributeValueByName", "fail", "assertEquals", "format", "getName", "getMessage"]}, "focal_class": {"identifier": "StorageHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    protected StsDao stsDao;", "modifier": "@Autowired\n    protected", "type": "StsDao", "declarator": "stsDao", "var_name": "stsDao"}, {"original_string": "@Autowired\n    private ConfigurationHelper configurationHelper;", "modifier": "@Autowired\n    private", "type": "ConfigurationHelper", "declarator": "configurationHelper", "var_name": "configurationHelper"}], "methods": [{"identifier": "getBooleanStorageAttributeValueByName", "parameters": "(String attributeName, StorageEntity storageEntity, boolean attributeRequired,\n        boolean attributeValueRequiredIfExists)", "modifiers": "public", "return": "boolean", "signature": "boolean getBooleanStorageAttributeValueByName(String attributeName, StorageEntity storageEntity, boolean attributeRequired,\n        boolean attributeValueRequiredIfExists)", "full_signature": "public boolean getBooleanStorageAttributeValueByName(String attributeName, StorageEntity storageEntity, boolean attributeRequired,\n        boolean attributeValueRequiredIfExists)", "class_method_signature": "StorageHelper.getBooleanStorageAttributeValueByName(String attributeName, StorageEntity storageEntity, boolean attributeRequired,\n        boolean attributeValueRequiredIfExists)", "testcase": false, "constructor": false}, {"identifier": "getS3BucketAccessParams", "parameters": "(StorageEntity storageEntity)", "modifiers": "public", "return": "S3FileTransferRequestParamsDto", "signature": "S3FileTransferRequestParamsDto getS3BucketAccessParams(StorageEntity storageEntity)", "full_signature": "public S3FileTransferRequestParamsDto getS3BucketAccessParams(StorageEntity storageEntity)", "class_method_signature": "StorageHelper.getS3BucketAccessParams(StorageEntity storageEntity)", "testcase": false, "constructor": false}, {"identifier": "getS3FileCopyRequestParamsDto", "parameters": "()", "modifiers": "public", "return": "S3FileCopyRequestParamsDto", "signature": "S3FileCopyRequestParamsDto getS3FileCopyRequestParamsDto()", "full_signature": "public S3FileCopyRequestParamsDto getS3FileCopyRequestParamsDto()", "class_method_signature": "StorageHelper.getS3FileCopyRequestParamsDto()", "testcase": false, "constructor": false}, {"identifier": "getS3FileTransferRequestParamsDto", "parameters": "()", "modifiers": "public", "return": "S3FileTransferRequestParamsDto", "signature": "S3FileTransferRequestParamsDto getS3FileTransferRequestParamsDto()", "full_signature": "public S3FileTransferRequestParamsDto getS3FileTransferRequestParamsDto()", "class_method_signature": "StorageHelper.getS3FileTransferRequestParamsDto()", "testcase": false, "constructor": false}, {"identifier": "getS3FileTransferRequestParamsDtoByRole", "parameters": "(String roleArn, String sessionName)", "modifiers": "public", "return": "S3FileTransferRequestParamsDto", "signature": "S3FileTransferRequestParamsDto getS3FileTransferRequestParamsDtoByRole(String roleArn, String sessionName)", "full_signature": "public S3FileTransferRequestParamsDto getS3FileTransferRequestParamsDtoByRole(String roleArn, String sessionName)", "class_method_signature": "StorageHelper.getS3FileTransferRequestParamsDtoByRole(String roleArn, String sessionName)", "testcase": false, "constructor": false}, {"identifier": "getStorageAttributeIntegerValueByName", "parameters": "(String attributeName, StorageEntity storageEntity, Integer defaultValue)", "modifiers": "public", "return": "Integer", "signature": "Integer getStorageAttributeIntegerValueByName(String attributeName, StorageEntity storageEntity, Integer defaultValue)", "full_signature": "public Integer getStorageAttributeIntegerValueByName(String attributeName, StorageEntity storageEntity, Integer defaultValue)", "class_method_signature": "StorageHelper.getStorageAttributeIntegerValueByName(String attributeName, StorageEntity storageEntity, Integer defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getStorageAttributeIntegerValueByName", "parameters": "(String attributeName, StorageEntity storageEntity, boolean attributeRequired,\n        boolean attributeValueRequiredIfExists)", "modifiers": "public", "return": "Integer", "signature": "Integer getStorageAttributeIntegerValueByName(String attributeName, StorageEntity storageEntity, boolean attributeRequired,\n        boolean attributeValueRequiredIfExists)", "full_signature": "public Integer getStorageAttributeIntegerValueByName(String attributeName, StorageEntity storageEntity, boolean attributeRequired,\n        boolean attributeValueRequiredIfExists)", "class_method_signature": "StorageHelper.getStorageAttributeIntegerValueByName(String attributeName, StorageEntity storageEntity, boolean attributeRequired,\n        boolean attributeValueRequiredIfExists)", "testcase": false, "constructor": false}, {"identifier": "getStorageAttributeValueByName", "parameters": "(String attributeName, Storage storage, Boolean required)", "modifiers": "public", "return": "String", "signature": "String getStorageAttributeValueByName(String attributeName, Storage storage, Boolean required)", "full_signature": "public String getStorageAttributeValueByName(String attributeName, Storage storage, Boolean required)", "class_method_signature": "StorageHelper.getStorageAttributeValueByName(String attributeName, Storage storage, Boolean required)", "testcase": false, "constructor": false}, {"identifier": "getStorageAttributeValueByName", "parameters": "(String attributeName, StorageEntity storageEntity, boolean attributeValueRequired)", "modifiers": "public", "return": "String", "signature": "String getStorageAttributeValueByName(String attributeName, StorageEntity storageEntity, boolean attributeValueRequired)", "full_signature": "public String getStorageAttributeValueByName(String attributeName, StorageEntity storageEntity, boolean attributeValueRequired)", "class_method_signature": "StorageHelper.getStorageAttributeValueByName(String attributeName, StorageEntity storageEntity, boolean attributeValueRequired)", "testcase": false, "constructor": false}, {"identifier": "getStorageAttributeValueByName", "parameters": "(String attributeName, StorageEntity storageEntity, boolean attributeRequired,\n        boolean attributeValueRequiredIfExists)", "modifiers": "public", "return": "String", "signature": "String getStorageAttributeValueByName(String attributeName, StorageEntity storageEntity, boolean attributeRequired,\n        boolean attributeValueRequiredIfExists)", "full_signature": "public String getStorageAttributeValueByName(String attributeName, StorageEntity storageEntity, boolean attributeRequired,\n        boolean attributeValueRequiredIfExists)", "class_method_signature": "StorageHelper.getStorageAttributeValueByName(String attributeName, StorageEntity storageEntity, boolean attributeRequired,\n        boolean attributeValueRequiredIfExists)", "testcase": false, "constructor": false}, {"identifier": "getStorageBucketName", "parameters": "(StorageEntity storageEntity)", "modifiers": "public", "return": "String", "signature": "String getStorageBucketName(StorageEntity storageEntity)", "full_signature": "public String getStorageBucketName(StorageEntity storageEntity)", "class_method_signature": "StorageHelper.getStorageBucketName(StorageEntity storageEntity)", "testcase": false, "constructor": false}, {"identifier": "getStorageKmsKeyId", "parameters": "(StorageEntity storageEntity)", "modifiers": "public", "return": "String", "signature": "String getStorageKmsKeyId(StorageEntity storageEntity)", "full_signature": "public String getStorageKmsKeyId(StorageEntity storageEntity)", "class_method_signature": "StorageHelper.getStorageKmsKeyId(StorageEntity storageEntity)", "testcase": false, "constructor": false}, {"identifier": "setProxyHostAndPort", "parameters": "(S3FileTransferRequestParamsDto params)", "modifiers": "private", "return": "void", "signature": "void setProxyHostAndPort(S3FileTransferRequestParamsDto params)", "full_signature": "private void setProxyHostAndPort(S3FileTransferRequestParamsDto params)", "class_method_signature": "StorageHelper.setProxyHostAndPort(S3FileTransferRequestParamsDto params)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/StorageHelper.java"}, "focal_method": {"identifier": "getStorageAttributeValueByName", "parameters": "(String attributeName, Storage storage, Boolean required)", "modifiers": "public", "return": "String", "body": "public String getStorageAttributeValueByName(String attributeName, Storage storage, Boolean required)\n    {\n        String attributeValue = null;\n\n        for (Attribute attribute : storage.getAttributes())\n        {\n            if (attribute.getName().equalsIgnoreCase(attributeName))\n            {\n                attributeValue = attribute.getValue();\n                break;\n            }\n        }\n\n        if (required && StringUtils.isBlank(attributeValue))\n        {\n            throw new IllegalStateException(String.format(\"Attribute \\\"%s\\\" for \\\"%s\\\" storage must be configured.\", attributeName, storage.getName()));\n        }\n\n        return attributeValue;\n    }", "signature": "String getStorageAttributeValueByName(String attributeName, Storage storage, Boolean required)", "full_signature": "public String getStorageAttributeValueByName(String attributeName, Storage storage, Boolean required)", "class_method_signature": "StorageHelper.getStorageAttributeValueByName(String attributeName, Storage storage, Boolean required)", "testcase": false, "constructor": false, "invocations": ["getAttributes", "equalsIgnoreCase", "getName", "getValue", "isBlank", "format", "getName"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}