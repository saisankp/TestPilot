{"test_class": {"identifier": "MultivariateGaussianDistributionTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/ml/src/test/java/org/apache/ignite/ml/math/stat/MultivariateGaussianDistributionTest.java"}, "test_case": {"identifier": "testApply", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testApply() {\n        MultivariateGaussianDistribution distribution = new MultivariateGaussianDistribution(\n            VectorUtils.of(1, 2),\n            new DenseMatrix(new double[][] {new double[] {1, -0.5}, new double[] {-0.5, 1}})\n        );\n\n        Assert.assertEquals(0.183, distribution.prob(VectorUtils.of(1, 2)), 0.01);\n        Assert.assertEquals(0.094, distribution.prob(VectorUtils.of(0, 2)), 0.01);\n    }", "signature": "void testApply()", "full_signature": "@Test public void testApply()", "class_method_signature": "MultivariateGaussianDistributionTest.testApply()", "testcase": true, "constructor": false, "invocations": ["of", "assertEquals", "prob", "of", "assertEquals", "prob", "of"]}, "focal_class": {"identifier": "MultivariateGaussianDistribution", "superclass": "", "interfaces": "implements Distribution", "fields": [{"original_string": "private Vector mean;", "modifier": "private", "type": "Vector", "declarator": "mean", "var_name": "mean"}, {"original_string": "private Matrix invCovariance;", "modifier": "private", "type": "Matrix", "declarator": "invCovariance", "var_name": "invCovariance"}, {"original_string": "private double normalizer;", "modifier": "private", "type": "double", "declarator": "normalizer", "var_name": "normalizer"}, {"original_string": "private Matrix covariance;", "modifier": "private", "type": "Matrix", "declarator": "covariance", "var_name": "covariance"}], "methods": [{"identifier": "MultivariateGaussianDistribution", "parameters": "(Vector mean, Matrix covariance)", "modifiers": "public", "return": "", "signature": " MultivariateGaussianDistribution(Vector mean, Matrix covariance)", "full_signature": "public  MultivariateGaussianDistribution(Vector mean, Matrix covariance)", "class_method_signature": "MultivariateGaussianDistribution.MultivariateGaussianDistribution(Vector mean, Matrix covariance)", "testcase": false, "constructor": true}, {"identifier": "prob", "parameters": "(Vector x)", "modifiers": "@Override public", "return": "double", "signature": "double prob(Vector x)", "full_signature": "@Override public double prob(Vector x)", "class_method_signature": "MultivariateGaussianDistribution.prob(Vector x)", "testcase": false, "constructor": false}, {"identifier": "dimension", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int dimension()", "full_signature": "@Override public int dimension()", "class_method_signature": "MultivariateGaussianDistribution.dimension()", "testcase": false, "constructor": false}, {"identifier": "mean", "parameters": "()", "modifiers": "public", "return": "Vector", "signature": "Vector mean()", "full_signature": "public Vector mean()", "class_method_signature": "MultivariateGaussianDistribution.mean()", "testcase": false, "constructor": false}, {"identifier": "covariance", "parameters": "()", "modifiers": "public", "return": "Matrix", "signature": "Matrix covariance()", "full_signature": "public Matrix covariance()", "class_method_signature": "MultivariateGaussianDistribution.covariance()", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/math/stat/MultivariateGaussianDistribution.java"}, "focal_method": {"identifier": "prob", "parameters": "(Vector x)", "modifiers": "@Override public", "return": "double", "body": "@Override public double prob(Vector x) {\n        Vector delta = x.minus(mean);\n        Matrix ePower = delta.toMatrix(true)\n            .times(invCovariance)\n            .times(delta.toMatrix(false))\n            .times(-0.5);\n        assert ePower.columnSize() == 1 && ePower.rowSize() == 1;\n\n        return Math.pow(Math.E, ePower.get(0, 0)) / normalizer;\n    }", "signature": "double prob(Vector x)", "full_signature": "@Override public double prob(Vector x)", "class_method_signature": "MultivariateGaussianDistribution.prob(Vector x)", "testcase": false, "constructor": false, "invocations": ["minus", "times", "times", "times", "toMatrix", "toMatrix", "columnSize", "rowSize", "pow", "get"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}