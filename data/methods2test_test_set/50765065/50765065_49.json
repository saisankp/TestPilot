{"test_class": {"identifier": "DueDatePickerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DueDateView mTodayView, mTomorrowView, mDayPicker, mNoDateView;", "modifier": "private", "type": "DueDateView", "declarator": "mTodayView", "var_name": "mTodayView"}, {"original_string": "private DueDatePicker mDueDatePicker;", "modifier": "private", "type": "DueDatePicker", "declarator": "mDueDatePicker", "var_name": "mDueDatePicker"}, {"original_string": "private TestSubscriber mTestSubscriber = TestSubscriber.create();", "modifier": "private", "type": "TestSubscriber", "declarator": "mTestSubscriber = TestSubscriber.create()", "var_name": "mTestSubscriber"}, {"original_string": "private DueDateView[] mDueDateViews;", "modifier": "private", "type": "DueDateView[]", "declarator": "mDueDateViews", "var_name": "mDueDateViews"}, {"original_string": "@Mock\n    private DueDatePicker.ListenerPickDate mListenerPickDate;", "modifier": "@Mock\n    private", "type": "DueDatePicker.ListenerPickDate", "declarator": "mListenerPickDate", "var_name": "mListenerPickDate"}], "file": "app/src/test/java/apidez/com/doit/view/custom/DueDatePickerTest.java"}, "test_case": {"identifier": "testClickDueDateTomorrow", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testClickDueDateTomorrow() throws Exception {\n        mTomorrowView.performClick();\n        mDueDatePicker.date().subscribe(date -> {\n            assertTrue(DateUtils.isTomorrow(date));\n        });\n        assertDueDateSelected(mTomorrowView);\n    }", "signature": "void testClickDueDateTomorrow()", "full_signature": "@Test public void testClickDueDateTomorrow()", "class_method_signature": "DueDatePickerTest.testClickDueDateTomorrow()", "testcase": true, "constructor": false, "invocations": ["performClick", "subscribe", "date", "assertTrue", "isTomorrow", "assertDueDateSelected"]}, "focal_class": {"identifier": "DueDatePicker", "superclass": "extends RelativeLayout", "interfaces": "", "fields": [{"original_string": "private DueDateView mTodayView, mTomorrowView, mDayPicker, mNoDateView;", "modifier": "private", "type": "DueDateView", "declarator": "mTodayView", "var_name": "mTodayView"}, {"original_string": "private DueDateView[] mDueDateViews;", "modifier": "private", "type": "DueDateView[]", "declarator": "mDueDateViews", "var_name": "mDueDateViews"}, {"original_string": "private ListenerPickDate mListenerPickDate;", "modifier": "private", "type": "ListenerPickDate", "declarator": "mListenerPickDate", "var_name": "mListenerPickDate"}, {"original_string": "private BehaviorSubject<Date> mDueDate = BehaviorSubject.create(new Date());", "modifier": "private", "type": "BehaviorSubject<Date>", "declarator": "mDueDate = BehaviorSubject.create(new Date())", "var_name": "mDueDate"}], "methods": [{"identifier": "setListenerPickDate", "parameters": "(ListenerPickDate listenerPickDate)", "modifiers": "public", "return": "void", "signature": "void setListenerPickDate(ListenerPickDate listenerPickDate)", "full_signature": "public void setListenerPickDate(ListenerPickDate listenerPickDate)", "class_method_signature": "DueDatePicker.setListenerPickDate(ListenerPickDate listenerPickDate)", "testcase": false, "constructor": false}, {"identifier": "DueDatePicker", "parameters": "(Context context)", "modifiers": "public", "return": "", "signature": " DueDatePicker(Context context)", "full_signature": "public  DueDatePicker(Context context)", "class_method_signature": "DueDatePicker.DueDatePicker(Context context)", "testcase": false, "constructor": true}, {"identifier": "DueDatePicker", "parameters": "(Context context, AttributeSet attrs)", "modifiers": "public", "return": "", "signature": " DueDatePicker(Context context, AttributeSet attrs)", "full_signature": "public  DueDatePicker(Context context, AttributeSet attrs)", "class_method_signature": "DueDatePicker.DueDatePicker(Context context, AttributeSet attrs)", "testcase": false, "constructor": true}, {"identifier": "DueDatePicker", "parameters": "(Context context, AttributeSet attrs, int defStyleAttr)", "modifiers": "public", "return": "", "signature": " DueDatePicker(Context context, AttributeSet attrs, int defStyleAttr)", "full_signature": "public  DueDatePicker(Context context, AttributeSet attrs, int defStyleAttr)", "class_method_signature": "DueDatePicker.DueDatePicker(Context context, AttributeSet attrs, int defStyleAttr)", "testcase": false, "constructor": true}, {"identifier": "initialize", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initialize()", "full_signature": "private void initialize()", "class_method_signature": "DueDatePicker.initialize()", "testcase": false, "constructor": false}, {"identifier": "initViews", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initViews()", "full_signature": "private void initViews()", "class_method_signature": "DueDatePicker.initViews()", "testcase": false, "constructor": false}, {"identifier": "initDateValue", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initDateValue()", "full_signature": "private void initDateValue()", "class_method_signature": "DueDatePicker.initDateValue()", "testcase": false, "constructor": false}, {"identifier": "setDueDate", "parameters": "(Date dueDate)", "modifiers": "public", "return": "void", "signature": "void setDueDate(Date dueDate)", "full_signature": "public void setDueDate(Date dueDate)", "class_method_signature": "DueDatePicker.setDueDate(Date dueDate)", "testcase": false, "constructor": false}, {"identifier": "date", "parameters": "()", "modifiers": "public", "return": "Observable<Date>", "signature": "Observable<Date> date()", "full_signature": "public Observable<Date> date()", "class_method_signature": "DueDatePicker.date()", "testcase": false, "constructor": false}, {"identifier": "setDateForPicker", "parameters": "(Date dueDate)", "modifiers": "private", "return": "void", "signature": "void setDateForPicker(Date dueDate)", "full_signature": "private void setDateForPicker(Date dueDate)", "class_method_signature": "DueDatePicker.setDateForPicker(Date dueDate)", "testcase": false, "constructor": false}, {"identifier": "initTomorrow", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initTomorrow()", "full_signature": "private void initTomorrow()", "class_method_signature": "DueDatePicker.initTomorrow()", "testcase": false, "constructor": false}, {"identifier": "initToday", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initToday()", "full_signature": "private void initToday()", "class_method_signature": "DueDatePicker.initToday()", "testcase": false, "constructor": false}, {"identifier": "initActions", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initActions()", "full_signature": "private void initActions()", "class_method_signature": "DueDatePicker.initActions()", "testcase": false, "constructor": false}, {"identifier": "handleDueDateSelect", "parameters": "(DueDateView dueDateView)", "modifiers": "private", "return": "void", "signature": "void handleDueDateSelect(DueDateView dueDateView)", "full_signature": "private void handleDueDateSelect(DueDateView dueDateView)", "class_method_signature": "DueDatePicker.handleDueDateSelect(DueDateView dueDateView)", "testcase": false, "constructor": false}, {"identifier": "clearAndSelectView", "parameters": "(DueDateView dueDateView)", "modifiers": "private", "return": "void", "signature": "void clearAndSelectView(DueDateView dueDateView)", "full_signature": "private void clearAndSelectView(DueDateView dueDateView)", "class_method_signature": "DueDatePicker.clearAndSelectView(DueDateView dueDateView)", "testcase": false, "constructor": false}, {"identifier": "handlePickDate", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void handlePickDate()", "full_signature": "private void handlePickDate()", "class_method_signature": "DueDatePicker.handlePickDate()", "testcase": false, "constructor": false}, {"identifier": "unSelectAllView", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void unSelectAllView()", "full_signature": "private void unSelectAllView()", "class_method_signature": "DueDatePicker.unSelectAllView()", "testcase": false, "constructor": false}], "file": "app/src/main/java/apidez/com/doit/view/custom/DueDatePicker.java"}, "focal_method": {"identifier": "date", "parameters": "()", "modifiers": "public", "return": "Observable<Date>", "body": "public Observable<Date> date() {\n        return mDueDate.asObservable();\n    }", "signature": "Observable<Date> date()", "full_signature": "public Observable<Date> date()", "class_method_signature": "DueDatePicker.date()", "testcase": false, "constructor": false, "invocations": ["asObservable"]}, "repository": {"repo_id": 50765065, "url": "https://github.com/nongdenchet/DO.IT", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 6, "size": 16808, "license": "licensed"}}