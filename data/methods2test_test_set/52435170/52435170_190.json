{"test_class": {"identifier": "ResourceLocatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public TemporaryFolder tmpFolder = new TemporaryFolder();", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "tmpFolder = new TemporaryFolder()", "var_name": "tmpFolder"}], "file": "core/src/test/java/eu/drus/jpa/unit/util/ResourceLocatorTest.java"}, "test_case": {"identifier": "testLocateResourceOtsideOfTheProject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLocateResourceOtsideOfTheProject() throws IOException {\n        // GIVEN\n        final File tmpFile = tmpFolder.newFile();\n\n        // WHEN\n        final URL resource = ResourceLocator.getResource(tmpFile.getPath());\n\n        // THEN\n        assertThat(resource, notNullValue());\n        assertThat(resource, equalTo(tmpFile.toURI().toURL()));\n    }", "signature": "void testLocateResourceOtsideOfTheProject()", "full_signature": "@Test public void testLocateResourceOtsideOfTheProject()", "class_method_signature": "ResourceLocatorTest.testLocateResourceOtsideOfTheProject()", "testcase": true, "constructor": false, "invocations": ["newFile", "getResource", "getPath", "assertThat", "notNullValue", "assertThat", "equalTo", "toURL", "toURI"]}, "focal_class": {"identifier": "ResourceLocator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ResourceLocator", "parameters": "()", "modifiers": "private", "return": "", "signature": " ResourceLocator()", "full_signature": "private  ResourceLocator()", "class_method_signature": "ResourceLocator.ResourceLocator()", "testcase": false, "constructor": true}, {"identifier": "getResource", "parameters": "(final String resource)", "modifiers": "public static", "return": "URL", "signature": "URL getResource(final String resource)", "full_signature": "public static URL getResource(final String resource)", "class_method_signature": "ResourceLocator.getResource(final String resource)", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "(final List<ClassLoader> classLoaders, final String resource)", "modifiers": "private static", "return": "URL", "signature": "URL getResource(final List<ClassLoader> classLoaders, final String resource)", "full_signature": "private static URL getResource(final List<ClassLoader> classLoaders, final String resource)", "class_method_signature": "ResourceLocator.getResource(final List<ClassLoader> classLoaders, final String resource)", "testcase": false, "constructor": false}], "file": "core/src/main/java/eu/drus/jpa/unit/util/ResourceLocator.java"}, "focal_method": {"identifier": "getResource", "parameters": "(final String resource)", "modifiers": "public static", "return": "URL", "body": "public static URL getResource(final String resource) throws MalformedURLException {\n        final List<ClassLoader> classLoaders = Arrays.asList(Thread.currentThread().getContextClassLoader(),\n                ResourceLocator.class.getClassLoader(), ClassLoader.getSystemClassLoader());\n\n        final URL url = getResource(classLoaders, resource);\n\n        return url == null ? new File(resource).toURI().toURL() : url;\n    }", "signature": "URL getResource(final String resource)", "full_signature": "public static URL getResource(final String resource)", "class_method_signature": "ResourceLocator.getResource(final String resource)", "testcase": false, "constructor": false, "invocations": ["asList", "getContextClassLoader", "currentThread", "getClassLoader", "getSystemClassLoader", "getResource", "toURL", "toURI"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}