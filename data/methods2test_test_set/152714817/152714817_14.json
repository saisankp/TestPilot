{"test_class": {"identifier": "ApplicationDeployerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ApplicationDeployer deployer;", "modifier": "private", "type": "ApplicationDeployer", "declarator": "deployer", "var_name": "deployer"}, {"original_string": "@Mock\n    private ApplicationService applicationLoader;", "modifier": "@Mock\n    private", "type": "ApplicationService", "declarator": "applicationLoader", "var_name": "applicationLoader"}, {"original_string": "@Mock\n    private ApplicationEntryDeployer firstDeployer;", "modifier": "@Mock\n    private", "type": "ApplicationEntryDeployer", "declarator": "firstDeployer", "var_name": "firstDeployer"}, {"original_string": "@Mock\n    private ApplicationEntryDeployer secondDeployer;", "modifier": "@Mock\n    private", "type": "ApplicationEntryDeployer", "declarator": "secondDeployer", "var_name": "secondDeployer"}], "file": "activiti-spring-application/src/test/java/org/activiti/application/deployer/ApplicationDeployerTest.java"}, "test_case": {"identifier": "shouldDelegateDeployToEntryDeployers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldDelegateDeployToEntryDeployers() {\n        //given\n        ApplicationContent firstApp = mock(ApplicationContent.class);\n        ApplicationContent secondApp = mock(ApplicationContent.class);\n        given(applicationLoader.loadApplications()).willReturn(Arrays.asList(firstApp,\n                                                                             secondApp));\n\n        //when\n        deployer.deploy();\n\n        //then\n        verify(firstDeployer).deployEntries(firstApp);\n        verify(firstDeployer).deployEntries(secondApp);\n        verify(secondDeployer).deployEntries(firstApp);\n        verify(secondDeployer).deployEntries(secondApp);\n    }", "signature": "void shouldDelegateDeployToEntryDeployers()", "full_signature": "@Test public void shouldDelegateDeployToEntryDeployers()", "class_method_signature": "ApplicationDeployerTest.shouldDelegateDeployToEntryDeployers()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "willReturn", "given", "loadApplications", "asList", "deploy", "deployEntries", "verify", "deployEntries", "verify", "deployEntries", "verify", "deployEntries", "verify"]}, "focal_class": {"identifier": "ApplicationDeployer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ApplicationService applicationLoader;", "modifier": "private", "type": "ApplicationService", "declarator": "applicationLoader", "var_name": "applicationLoader"}, {"original_string": "private List<ApplicationEntryDeployer> deployers;", "modifier": "private", "type": "List<ApplicationEntryDeployer>", "declarator": "deployers", "var_name": "deployers"}], "methods": [{"identifier": "ApplicationDeployer", "parameters": "(ApplicationService applicationLoader,\n                               List<ApplicationEntryDeployer> deployers)", "modifiers": "public", "return": "", "signature": " ApplicationDeployer(ApplicationService applicationLoader,\n                               List<ApplicationEntryDeployer> deployers)", "full_signature": "public  ApplicationDeployer(ApplicationService applicationLoader,\n                               List<ApplicationEntryDeployer> deployers)", "class_method_signature": "ApplicationDeployer.ApplicationDeployer(ApplicationService applicationLoader,\n                               List<ApplicationEntryDeployer> deployers)", "testcase": false, "constructor": true}, {"identifier": "deploy", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void deploy()", "full_signature": "public void deploy()", "class_method_signature": "ApplicationDeployer.deploy()", "testcase": false, "constructor": false}], "file": "activiti-spring-application/src/main/java/org/activiti/application/deployer/ApplicationDeployer.java"}, "focal_method": {"identifier": "deploy", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void deploy() {\n        List<ApplicationContent> applications = applicationLoader.loadApplications();\n        for (ApplicationContent application : applications) {\n            for (ApplicationEntryDeployer deployer : deployers) {\n                deployer.deployEntries(application);\n            }\n        }\n    }", "signature": "void deploy()", "full_signature": "public void deploy()", "class_method_signature": "ApplicationDeployer.deploy()", "testcase": false, "constructor": false, "invocations": ["loadApplications", "deployEntries"]}, "repository": {"repo_id": 152714817, "url": "https://github.com/Activiti/activiti-core-common", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 7, "size": 543, "license": "licensed"}}