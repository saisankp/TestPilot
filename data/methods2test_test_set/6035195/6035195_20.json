{"test_class": {"identifier": "InstallRepositoriesTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/axemblr/provisionr/core/activities/InstallRepositoriesTest.java"}, "test_case": {"identifier": "testCreatePuppetScript", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreatePuppetScript() throws Exception {\n        Repository repository = Repository.builder()\n            .name(\"bigtop\")\n            .addEntry(\"deb http://bigtop.s3.amazonaws.com/releases/0.5.0/ubuntu/lucid/x86_64  bigtop contrib\")\n            .key(\"-----BEGIN PGP PUBLIC KEY BLOCK-----\\n\" +\n                \"Version: GnuPG v1.4.10 (GNU/Linux)\\n\" +\n                \"\\n\" +\n                \"[....]\")\n            .createRepository();\n\n        Pool pool = mock(Pool.class);\n        when(pool.getSoftware()).thenReturn(Software.builder().repository(repository).createSoftware());\n\n        PuppetActivity activity = new InstallRepositories();\n        String content = activity.createPuppetScript(pool, null);\n\n        assertThat(content).contains(\"apt::repository { \\\"bigtop\\\":\\n\" +\n            \"  content => \\\"deb http://bigtop.s3.amazonaws.com/releases/0.5.0/ubuntu/lucid/x86_64  bigtop contrib\\\\n\\\",\\n\" +\n            \"  key => \\\"-----BEGIN PGP PUBLIC KEY BLOCK-----\\\\nVersion: GnuPG v1.4.10 (GNU/Linux)\\\\n\\\\n[....]\\\"\\n\" +\n            \"}\");\n    }", "signature": "void testCreatePuppetScript()", "full_signature": "@Test public void testCreatePuppetScript()", "class_method_signature": "InstallRepositoriesTest.testCreatePuppetScript()", "testcase": true, "constructor": false, "invocations": ["createRepository", "key", "addEntry", "name", "builder", "mock", "thenReturn", "when", "getSoftware", "createSoftware", "repository", "builder", "createPuppetScript", "contains", "assertThat"]}, "focal_class": {"identifier": "InstallRepositories", "superclass": "extends PuppetActivity", "interfaces": "", "fields": [{"original_string": "public static final String REPOSITORIES_TEMPLATE =\n        \"/com/axemblr/provisionr/core/puppet/repositories.pp.mustache\";", "modifier": "public static final", "type": "String", "declarator": "REPOSITORIES_TEMPLATE =\n        \"/com/axemblr/provisionr/core/puppet/repositories.pp.mustache\"", "var_name": "REPOSITORIES_TEMPLATE"}], "methods": [{"identifier": "InstallRepositories", "parameters": "()", "modifiers": "public", "return": "", "signature": " InstallRepositories()", "full_signature": "public  InstallRepositories()", "class_method_signature": "InstallRepositories.InstallRepositories()", "testcase": false, "constructor": true}, {"identifier": "createPuppetScript", "parameters": "(Pool pool, Machine machine)", "modifiers": "@Override public", "return": "String", "signature": "String createPuppetScript(Pool pool, Machine machine)", "full_signature": "@Override public String createPuppetScript(Pool pool, Machine machine)", "class_method_signature": "InstallRepositories.createPuppetScript(Pool pool, Machine machine)", "testcase": false, "constructor": false}, {"identifier": "repositoriesAsListOfMaps", "parameters": "(Software software)", "modifiers": "private", "return": "List<Map<String, String>>", "signature": "List<Map<String, String>> repositoriesAsListOfMaps(Software software)", "full_signature": "private List<Map<String, String>> repositoriesAsListOfMaps(Software software)", "class_method_signature": "InstallRepositories.repositoriesAsListOfMaps(Software software)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/axemblr/provisionr/core/activities/InstallRepositories.java"}, "focal_method": {"identifier": "createPuppetScript", "parameters": "(Pool pool, Machine machine)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String createPuppetScript(Pool pool, Machine machine) throws Exception {\n        return Mustache.toString(getClass(), REPOSITORIES_TEMPLATE,\n            ImmutableMap.<String, List<Map<String, String>>>of(\n                \"repositories\", repositoriesAsListOfMaps(pool.getSoftware())));\n    }", "signature": "String createPuppetScript(Pool pool, Machine machine)", "full_signature": "@Override public String createPuppetScript(Pool pool, Machine machine)", "class_method_signature": "InstallRepositories.createPuppetScript(Pool pool, Machine machine)", "testcase": false, "constructor": false, "invocations": ["toString", "getClass", "of", "repositoriesAsListOfMaps", "getSoftware"]}, "repository": {"repo_id": 6035195, "url": "https://github.com/axemblr/axemblr-provisionr", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 30, "size": 3329, "license": "licensed"}}