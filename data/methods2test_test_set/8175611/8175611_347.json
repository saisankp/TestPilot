{"test_class": {"identifier": "StringConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "@SuppressFBWarnings(value = \"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\", justification = \"Mockito rule needs no further configuration\")\n    @Rule\n    public MockitoRule mockitoRule = MockitoJUnit.rule();", "modifier": "@SuppressFBWarnings(value = \"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\", justification = \"Mockito rule needs no further configuration\")\n    @Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = MockitoJUnit.rule()", "var_name": "mockitoRule"}, {"original_string": "@InjectMocks\n    private StringConverter underTest;", "modifier": "@InjectMocks\n    private", "type": "StringConverter", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "@Mock\n    private ConverterContext context;", "modifier": "@Mock\n    private", "type": "ConverterContext", "declarator": "context", "var_name": "context"}], "file": "core/src/test/java/com/tngtech/junit/dataprovider/convert/StringConverterTest.java"}, "test_case": {"identifier": "testCustomConvertShouldByDefaultReturnObjectNoConversion", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCustomConvertShouldByDefaultReturnObjectNoConversion() {\n        // Given:\n        String data = \"2016-03-11\";\n        Class<?> parameterType = Date.class;\n\n        // When:\n        Object result = underTest.customConvertValue(data, parameterType, context);\n\n        // Then:\n        assertThat(result).isEqualTo(StringConverter.OBJECT_NO_CONVERSION);\n    }", "signature": "void testCustomConvertShouldByDefaultReturnObjectNoConversion()", "full_signature": "@Test public void testCustomConvertShouldByDefaultReturnObjectNoConversion()", "class_method_signature": "StringConverterTest.testCustomConvertShouldByDefaultReturnObjectNoConversion()", "testcase": true, "constructor": false, "invocations": ["customConvertValue", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "StringConverter", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final Object OBJECT_NO_CONVERSION = new Object();", "modifier": "protected static final", "type": "Object", "declarator": "OBJECT_NO_CONVERSION = new Object()", "var_name": "OBJECT_NO_CONVERSION"}], "methods": [{"identifier": "convert", "parameters": "(String data, boolean isVarargs, Class<?>[] parameterTypes, ConverterContext context, int rowIdx)", "modifiers": "public", "return": "Object[]", "signature": "Object[] convert(String data, boolean isVarargs, Class<?>[] parameterTypes, ConverterContext context, int rowIdx)", "full_signature": "public Object[] convert(String data, boolean isVarargs, Class<?>[] parameterTypes, ConverterContext context, int rowIdx)", "class_method_signature": "StringConverter.convert(String data, boolean isVarargs, Class<?>[] parameterTypes, ConverterContext context, int rowIdx)", "testcase": false, "constructor": false}, {"identifier": "splitBy", "parameters": "(String data, String regex)", "modifiers": "protected", "return": "String[]", "signature": "String[] splitBy(String data, String regex)", "full_signature": "protected String[] splitBy(String data, String regex)", "class_method_signature": "StringConverter.splitBy(String data, String regex)", "testcase": false, "constructor": false}, {"identifier": "checkArgumentsAndParameterCount", "parameters": "(int argCount, int paramCount, boolean isVarargs, int rowIdx)", "modifiers": "protected", "return": "void", "signature": "void checkArgumentsAndParameterCount(int argCount, int paramCount, boolean isVarargs, int rowIdx)", "full_signature": "protected void checkArgumentsAndParameterCount(int argCount, int paramCount, boolean isVarargs, int rowIdx)", "class_method_signature": "StringConverter.checkArgumentsAndParameterCount(int argCount, int paramCount, boolean isVarargs, int rowIdx)", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(String[] splitData, boolean isVarargs, Class<?>[] parameterTypes, ConverterContext context)", "modifiers": "private", "return": "Object[]", "signature": "Object[] convert(String[] splitData, boolean isVarargs, Class<?>[] parameterTypes, ConverterContext context)", "full_signature": "private Object[] convert(String[] splitData, boolean isVarargs, Class<?>[] parameterTypes, ConverterContext context)", "class_method_signature": "StringConverter.convert(String[] splitData, boolean isVarargs, Class<?>[] parameterTypes, ConverterContext context)", "testcase": false, "constructor": false}, {"identifier": "convertValue", "parameters": "(String data, Class<?> targetType, ConverterContext context)", "modifiers": "private", "return": "Object", "signature": "Object convertValue(String data, Class<?> targetType, ConverterContext context)", "full_signature": "private Object convertValue(String data, Class<?> targetType, ConverterContext context)", "class_method_signature": "StringConverter.convertValue(String data, Class<?> targetType, ConverterContext context)", "testcase": false, "constructor": false}, {"identifier": "customConvertValue", "parameters": "(String str, Class<?> targetType, ConverterContext context)", "modifiers": "@SuppressWarnings(\"unused\") protected", "return": "Object", "signature": "Object customConvertValue(String str, Class<?> targetType, ConverterContext context)", "full_signature": "@SuppressWarnings(\"unused\") protected Object customConvertValue(String str, Class<?> targetType, ConverterContext context)", "class_method_signature": "StringConverter.customConvertValue(String str, Class<?> targetType, ConverterContext context)", "testcase": false, "constructor": false}, {"identifier": "convertPrimaryOrWrapper", "parameters": "(String str, Class<?> targetType)", "modifiers": "protected", "return": "Object", "signature": "Object convertPrimaryOrWrapper(String str, Class<?> targetType)", "full_signature": "protected Object convertPrimaryOrWrapper(String str, Class<?> targetType)", "class_method_signature": "StringConverter.convertPrimaryOrWrapper(String str, Class<?> targetType)", "testcase": false, "constructor": false}, {"identifier": "convertToLong", "parameters": "(String str)", "modifiers": "protected", "return": "Object", "signature": "Object convertToLong(String str)", "full_signature": "protected Object convertToLong(String str)", "class_method_signature": "StringConverter.convertToLong(String str)", "testcase": false, "constructor": false}, {"identifier": "convertToEnumValue", "parameters": "(String str, Class<Enum> enumType, boolean ignoreEnumCase)", "modifiers": "@SuppressWarnings(\"rawtypes\") protected", "return": "Object", "signature": "Object convertToEnumValue(String str, Class<Enum> enumType, boolean ignoreEnumCase)", "full_signature": "@SuppressWarnings(\"rawtypes\") protected Object convertToEnumValue(String str, Class<Enum> enumType, boolean ignoreEnumCase)", "class_method_signature": "StringConverter.convertToEnumValue(String str, Class<Enum> enumType, boolean ignoreEnumCase)", "testcase": false, "constructor": false}, {"identifier": "tryConvertUsingSingleStringParamConstructor", "parameters": "(String str, Class<?> targetType)", "modifiers": "protected", "return": "Object", "signature": "Object tryConvertUsingSingleStringParamConstructor(String str, Class<?> targetType)", "full_signature": "protected Object tryConvertUsingSingleStringParamConstructor(String str, Class<?> targetType)", "class_method_signature": "StringConverter.tryConvertUsingSingleStringParamConstructor(String str, Class<?> targetType)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/tngtech/junit/dataprovider/convert/StringConverter.java"}, "focal_method": {"identifier": "customConvertValue", "parameters": "(String str, Class<?> targetType, ConverterContext context)", "modifiers": "@SuppressWarnings(\"unused\") protected", "return": "Object", "body": "@SuppressWarnings(\"unused\")\n    protected Object customConvertValue(String str, Class<?> targetType, ConverterContext context) {\n        return OBJECT_NO_CONVERSION;\n    }", "signature": "Object customConvertValue(String str, Class<?> targetType, ConverterContext context)", "full_signature": "@SuppressWarnings(\"unused\") protected Object customConvertValue(String str, Class<?> targetType, ConverterContext context)", "class_method_signature": "StringConverter.customConvertValue(String str, Class<?> targetType, ConverterContext context)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 8175611, "url": "https://github.com/TNG/junit-dataprovider", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 215, "size": 1383, "license": "licensed"}}