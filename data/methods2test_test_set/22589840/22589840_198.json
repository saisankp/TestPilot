{"test_class": {"identifier": "UserServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private UserServiceImpl userServiceImpl;", "modifier": "private", "type": "UserServiceImpl", "declarator": "userServiceImpl", "var_name": "userServiceImpl"}, {"original_string": "private UserDao userDaoMock;", "modifier": "private", "type": "UserDao", "declarator": "userDaoMock", "var_name": "userDaoMock"}, {"original_string": "private UserNameAndPasswordSyntaxChecker userNameAndPasswordSyntaxCheckerMock;", "modifier": "private", "type": "UserNameAndPasswordSyntaxChecker", "declarator": "userNameAndPasswordSyntaxCheckerMock", "var_name": "userNameAndPasswordSyntaxCheckerMock"}, {"original_string": "private PropertyManager propertyManagerMock;", "modifier": "private", "type": "PropertyManager", "declarator": "propertyManagerMock", "var_name": "propertyManagerMock"}, {"original_string": "private Identity identityMock;", "modifier": "private", "type": "Identity", "declarator": "identityMock", "var_name": "identityMock"}], "file": "olat7.8/src/test/java/org/olat/lms/user/UserServiceImplTest.java"}, "test_case": {"identifier": "verifyPasswordStrength_newUser", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void verifyPasswordStrength_newUser() {\n        boolean newPasswordOK = userServiceImpl.verifyPasswordStrength(\"\", \"aBc_123_X\", \"test2\");\n        assertTrue(newPasswordOK);\n\n        newPasswordOK = userServiceImpl.verifyPasswordStrength(null, \"aBc_123_X\", \"test2\");\n        assertTrue(newPasswordOK);\n    }", "signature": "void verifyPasswordStrength_newUser()", "full_signature": "@Test public void verifyPasswordStrength_newUser()", "class_method_signature": "UserServiceImplTest.verifyPasswordStrength_newUser()", "testcase": true, "constructor": false, "invocations": ["verifyPasswordStrength", "assertTrue", "verifyPasswordStrength", "assertTrue"]}, "focal_class": {"identifier": "UserServiceImpl", "superclass": "", "interfaces": "implements UserService", "fields": [{"original_string": "private static final Logger log = LoggerHelper.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerHelper.getLogger()", "var_name": "log"}, {"original_string": "static final String CHARSET = \"charset\";", "modifier": "static final", "type": "String", "declarator": "CHARSET = \"charset\"", "var_name": "CHARSET"}, {"original_string": "@Autowired\n    UserDao userDao;", "modifier": "@Autowired", "type": "UserDao", "declarator": "userDao", "var_name": "userDao"}, {"original_string": "protected UserPropertiesConfig userPropertiesConfig;", "modifier": "protected", "type": "UserPropertiesConfig", "declarator": "userPropertiesConfig", "var_name": "userPropertiesConfig"}, {"original_string": "UserNameAndPasswordSyntaxChecker userNameAndPasswordSyntaxChecker;", "modifier": "", "type": "UserNameAndPasswordSyntaxChecker", "declarator": "userNameAndPasswordSyntaxChecker", "var_name": "userNameAndPasswordSyntaxChecker"}, {"original_string": "@Autowired\n    PropertyManager propertyManager;", "modifier": "@Autowired", "type": "PropertyManager", "declarator": "propertyManager", "var_name": "propertyManager"}], "methods": [{"identifier": "UserServiceImpl", "parameters": "()", "modifiers": "", "return": "", "signature": " UserServiceImpl()", "full_signature": "  UserServiceImpl()", "class_method_signature": "UserServiceImpl.UserServiceImpl()", "testcase": false, "constructor": true}, {"identifier": "createUser", "parameters": "(final String firstName, final String lastName, final String eMail)", "modifiers": "@Override public", "return": "User", "signature": "User createUser(final String firstName, final String lastName, final String eMail)", "full_signature": "@Override public User createUser(final String firstName, final String lastName, final String eMail)", "class_method_signature": "UserServiceImpl.createUser(final String firstName, final String lastName, final String eMail)", "testcase": false, "constructor": false}, {"identifier": "createAndPersistUser", "parameters": "(final String firstName, final String lastName, final String email)", "modifiers": "@Override public", "return": "User", "signature": "User createAndPersistUser(final String firstName, final String lastName, final String email)", "full_signature": "@Override public User createAndPersistUser(final String firstName, final String lastName, final String email)", "class_method_signature": "UserServiceImpl.createAndPersistUser(final String firstName, final String lastName, final String email)", "testcase": false, "constructor": false}, {"identifier": "findIdentityByEmail", "parameters": "(final String email)", "modifiers": "@Override public", "return": "Identity", "signature": "Identity findIdentityByEmail(final String email)", "full_signature": "@Override public Identity findIdentityByEmail(final String email)", "class_method_signature": "UserServiceImpl.findIdentityByEmail(final String email)", "testcase": false, "constructor": false}, {"identifier": "findUserByEmail", "parameters": "(final String email)", "modifiers": "@Override public", "return": "User", "signature": "User findUserByEmail(final String email)", "full_signature": "@Override public User findUserByEmail(final String email)", "class_method_signature": "UserServiceImpl.findUserByEmail(final String email)", "testcase": false, "constructor": false}, {"identifier": "userExist", "parameters": "(final String email)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean userExist(final String email)", "full_signature": "@Override public boolean userExist(final String email)", "class_method_signature": "UserServiceImpl.userExist(final String email)", "testcase": false, "constructor": false}, {"identifier": "loadUserByKey", "parameters": "(final Long key)", "modifiers": "@Override public", "return": "User", "signature": "User loadUserByKey(final Long key)", "full_signature": "@Override public User loadUserByKey(final Long key)", "class_method_signature": "UserServiceImpl.loadUserByKey(final Long key)", "testcase": false, "constructor": false}, {"identifier": "updateUser", "parameters": "(final User usr)", "modifiers": "@Override public", "return": "void", "signature": "void updateUser(final User usr)", "full_signature": "@Override public void updateUser(final User usr)", "class_method_signature": "UserServiceImpl.updateUser(final User usr)", "testcase": false, "constructor": false}, {"identifier": "saveUser", "parameters": "(final User user)", "modifiers": "@Override public", "return": "void", "signature": "void saveUser(final User user)", "full_signature": "@Override public void saveUser(final User user)", "class_method_signature": "UserServiceImpl.saveUser(final User user)", "testcase": false, "constructor": false}, {"identifier": "updateUserFromIdentity", "parameters": "(final Identity identity)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean updateUserFromIdentity(final Identity identity)", "full_signature": "@Override public boolean updateUserFromIdentity(final Identity identity)", "class_method_signature": "UserServiceImpl.updateUserFromIdentity(final Identity identity)", "testcase": false, "constructor": false}, {"identifier": "setUserCharset", "parameters": "(final Identity identity, final String charset)", "modifiers": "@Override public", "return": "void", "signature": "void setUserCharset(final Identity identity, final String charset)", "full_signature": "@Override public void setUserCharset(final Identity identity, final String charset)", "class_method_signature": "UserServiceImpl.setUserCharset(final Identity identity, final String charset)", "testcase": false, "constructor": false}, {"identifier": "getUserCharset", "parameters": "(final Identity identity)", "modifiers": "@Override public", "return": "String", "signature": "String getUserCharset(final Identity identity)", "full_signature": "@Override public String getUserCharset(final Identity identity)", "class_method_signature": "UserServiceImpl.getUserCharset(final Identity identity)", "testcase": false, "constructor": false}, {"identifier": "deleteUserProperties", "parameters": "(User user)", "modifiers": "@Override public", "return": "void", "signature": "void deleteUserProperties(User user)", "full_signature": "@Override public void deleteUserProperties(User user)", "class_method_signature": "UserServiceImpl.deleteUserProperties(User user)", "testcase": false, "constructor": false}, {"identifier": "syntaxCheckOlatPassword", "parameters": "(final String password)", "modifiers": "private", "return": "boolean", "signature": "boolean syntaxCheckOlatPassword(final String password)", "full_signature": "private boolean syntaxCheckOlatPassword(final String password)", "class_method_signature": "UserServiceImpl.syntaxCheckOlatPassword(final String password)", "testcase": false, "constructor": false}, {"identifier": "verifyPasswordStrength", "parameters": "(String oldPassword, String newPassword, String principalName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean verifyPasswordStrength(String oldPassword, String newPassword, String principalName)", "full_signature": "@Override public boolean verifyPasswordStrength(String oldPassword, String newPassword, String principalName)", "class_method_signature": "UserServiceImpl.verifyPasswordStrength(String oldPassword, String newPassword, String principalName)", "testcase": false, "constructor": false}, {"identifier": "syntaxCheckOlatLogin", "parameters": "(final String login)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean syntaxCheckOlatLogin(final String login)", "full_signature": "@Override public boolean syntaxCheckOlatLogin(final String login)", "class_method_signature": "UserServiceImpl.syntaxCheckOlatLogin(final String login)", "testcase": false, "constructor": false}, {"identifier": "getUserPropertiesConfig", "parameters": "()", "modifiers": "@Override public", "return": "UserPropertiesConfig", "signature": "UserPropertiesConfig getUserPropertiesConfig()", "full_signature": "@Override public UserPropertiesConfig getUserPropertiesConfig()", "class_method_signature": "UserServiceImpl.getUserPropertiesConfig()", "testcase": false, "constructor": false}, {"identifier": "getUserPropertyHandlersFor", "parameters": "(final String usageIdentifyer, final boolean isAdministrativeUser)", "modifiers": "@Override public", "return": "List<UserPropertyHandler>", "signature": "List<UserPropertyHandler> getUserPropertyHandlersFor(final String usageIdentifyer, final boolean isAdministrativeUser)", "full_signature": "@Override public List<UserPropertyHandler> getUserPropertyHandlersFor(final String usageIdentifyer, final boolean isAdministrativeUser)", "class_method_signature": "UserServiceImpl.getUserPropertyHandlersFor(final String usageIdentifyer, final boolean isAdministrativeUser)", "testcase": false, "constructor": false}, {"identifier": "getAllUserPropertyHandlers", "parameters": "()", "modifiers": "@Override public", "return": "List<UserPropertyHandler>", "signature": "List<UserPropertyHandler> getAllUserPropertyHandlers()", "full_signature": "@Override public List<UserPropertyHandler> getAllUserPropertyHandlers()", "class_method_signature": "UserServiceImpl.getAllUserPropertyHandlers()", "testcase": false, "constructor": false}, {"identifier": "isMandatoryUserProperty", "parameters": "(final String usageIdentifyer, final UserPropertyHandler propertyHandler)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isMandatoryUserProperty(final String usageIdentifyer, final UserPropertyHandler propertyHandler)", "full_signature": "@Override public boolean isMandatoryUserProperty(final String usageIdentifyer, final UserPropertyHandler propertyHandler)", "class_method_signature": "UserServiceImpl.isMandatoryUserProperty(final String usageIdentifyer, final UserPropertyHandler propertyHandler)", "testcase": false, "constructor": false}, {"identifier": "isUserViewReadOnly", "parameters": "(final String usageIdentifyer, final UserPropertyHandler propertyHandler)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isUserViewReadOnly(final String usageIdentifyer, final UserPropertyHandler propertyHandler)", "full_signature": "@Override public boolean isUserViewReadOnly(final String usageIdentifyer, final UserPropertyHandler propertyHandler)", "class_method_signature": "UserServiceImpl.isUserViewReadOnly(final String usageIdentifyer, final UserPropertyHandler propertyHandler)", "testcase": false, "constructor": false}, {"identifier": "setUserNameAndPasswordSyntaxChecker", "parameters": "(final UserNameAndPasswordSyntaxChecker userNameAndPasswordSyntaxChecker)", "modifiers": "@Override public", "return": "void", "signature": "void setUserNameAndPasswordSyntaxChecker(final UserNameAndPasswordSyntaxChecker userNameAndPasswordSyntaxChecker)", "full_signature": "@Override public void setUserNameAndPasswordSyntaxChecker(final UserNameAndPasswordSyntaxChecker userNameAndPasswordSyntaxChecker)", "class_method_signature": "UserServiceImpl.setUserNameAndPasswordSyntaxChecker(final UserNameAndPasswordSyntaxChecker userNameAndPasswordSyntaxChecker)", "testcase": false, "constructor": false}, {"identifier": "setUserPropertiesConfig", "parameters": "(final UserPropertiesConfig userPropertiesConfig)", "modifiers": "@Override public", "return": "void", "signature": "void setUserPropertiesConfig(final UserPropertiesConfig userPropertiesConfig)", "full_signature": "@Override public void setUserPropertiesConfig(final UserPropertiesConfig userPropertiesConfig)", "class_method_signature": "UserServiceImpl.setUserPropertiesConfig(final UserPropertiesConfig userPropertiesConfig)", "testcase": false, "constructor": false}, {"identifier": "getUserProperty", "parameters": "(User user, String propertyName, Locale locale)", "modifiers": "@Override public", "return": "String", "signature": "String getUserProperty(User user, String propertyName, Locale locale)", "full_signature": "@Override public String getUserProperty(User user, String propertyName, Locale locale)", "class_method_signature": "UserServiceImpl.getUserProperty(User user, String propertyName, Locale locale)", "testcase": false, "constructor": false}, {"identifier": "getUserProperty", "parameters": "(User user, String propertyName)", "modifiers": "@Override public", "return": "String", "signature": "String getUserProperty(User user, String propertyName)", "full_signature": "@Override public String getUserProperty(User user, String propertyName)", "class_method_signature": "UserServiceImpl.getUserProperty(User user, String propertyName)", "testcase": false, "constructor": false}, {"identifier": "getFirstAndLastname", "parameters": "(User user)", "modifiers": "@Override public", "return": "String", "signature": "String getFirstAndLastname(User user)", "full_signature": "@Override public String getFirstAndLastname(User user)", "class_method_signature": "UserServiceImpl.getFirstAndLastname(User user)", "testcase": false, "constructor": false}, {"identifier": "getInstitutionalIdentifier", "parameters": "(User user)", "modifiers": "@Override public", "return": "String", "signature": "String getInstitutionalIdentifier(User user)", "full_signature": "@Override public String getInstitutionalIdentifier(User user)", "class_method_signature": "UserServiceImpl.getInstitutionalIdentifier(User user)", "testcase": false, "constructor": false}, {"identifier": "setUserProperty", "parameters": "(final User user, final String propertyName, final String propertyValue)", "modifiers": "@Override public", "return": "void", "signature": "void setUserProperty(final User user, final String propertyName, final String propertyValue)", "full_signature": "@Override public void setUserProperty(final User user, final String propertyName, final String propertyValue)", "class_method_signature": "UserServiceImpl.setUserProperty(final User user, final String propertyName, final String propertyValue)", "testcase": false, "constructor": false}, {"identifier": "getPropertyOrIdentityEnvAttribute", "parameters": "(final User user, final String propertyName, final Locale locale)", "modifiers": "@Override public", "return": "String", "signature": "String getPropertyOrIdentityEnvAttribute(final User user, final String propertyName, final Locale locale)", "full_signature": "@Override public String getPropertyOrIdentityEnvAttribute(final User user, final String propertyName, final Locale locale)", "class_method_signature": "UserServiceImpl.getPropertyOrIdentityEnvAttribute(final User user, final String propertyName, final Locale locale)", "testcase": false, "constructor": false}], "file": "olat7.8/src/main/java/org/olat/lms/user/UserServiceImpl.java"}, "focal_method": {"identifier": "verifyPasswordStrength", "parameters": "(String oldPassword, String newPassword, String principalName)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean verifyPasswordStrength(String oldPassword, String newPassword, String principalName) {\n        return AuthenticatorHelper.verifyPasswordStrength(oldPassword, newPassword, principalName);\n    }", "signature": "boolean verifyPasswordStrength(String oldPassword, String newPassword, String principalName)", "full_signature": "@Override public boolean verifyPasswordStrength(String oldPassword, String newPassword, String principalName)", "class_method_signature": "UserServiceImpl.verifyPasswordStrength(String oldPassword, String newPassword, String principalName)", "testcase": false, "constructor": false, "invocations": ["verifyPasswordStrength"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}