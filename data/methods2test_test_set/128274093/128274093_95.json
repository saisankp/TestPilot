{"test_class": {"identifier": "UnicastSubjectTest", "superclass": "extends SubjectTest<Integer>", "interfaces": "", "fields": [], "file": "rxjava/src/test/java/io/reactivex/subjects/UnicastSubjectTest.java"}, "test_case": {"identifier": "zeroCapacityHint", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void zeroCapacityHint() {\n        UnicastSubject.create(0);\n    }", "signature": "void zeroCapacityHint()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void zeroCapacityHint()", "class_method_signature": "UnicastSubjectTest.zeroCapacityHint()", "testcase": true, "constructor": false, "invocations": ["create"]}, "focal_class": {"identifier": "UnicastSubject", "superclass": "extends Subject<T>", "interfaces": "", "fields": [{"original_string": "final SpscLinkedArrayQueue<T> queue;", "modifier": "final", "type": "SpscLinkedArrayQueue<T>", "declarator": "queue", "var_name": "queue"}, {"original_string": "final AtomicReference<Observer<? super T>> actual;", "modifier": "final", "type": "AtomicReference<Observer<? super T>>", "declarator": "actual", "var_name": "actual"}, {"original_string": "final AtomicReference<Runnable> onTerminate;", "modifier": "final", "type": "AtomicReference<Runnable>", "declarator": "onTerminate", "var_name": "onTerminate"}, {"original_string": "final boolean delayError;", "modifier": "final", "type": "boolean", "declarator": "delayError", "var_name": "delayError"}, {"original_string": "volatile boolean disposed;", "modifier": "volatile", "type": "boolean", "declarator": "disposed", "var_name": "disposed"}, {"original_string": "volatile boolean done;", "modifier": "volatile", "type": "boolean", "declarator": "done", "var_name": "done"}, {"original_string": "Throwable error;", "modifier": "", "type": "Throwable", "declarator": "error", "var_name": "error"}, {"original_string": "final AtomicBoolean once;", "modifier": "final", "type": "AtomicBoolean", "declarator": "once", "var_name": "once"}, {"original_string": "final BasicIntQueueDisposable<T> wip;", "modifier": "final", "type": "BasicIntQueueDisposable<T>", "declarator": "wip", "var_name": "wip"}, {"original_string": "boolean enableOperatorFusion;", "modifier": "", "type": "boolean", "declarator": "enableOperatorFusion", "var_name": "enableOperatorFusion"}], "methods": [{"identifier": "create", "parameters": "()", "modifiers": "@CheckReturnValue @NonNull public static", "return": "UnicastSubject<T>", "signature": "UnicastSubject<T> create()", "full_signature": "@CheckReturnValue @NonNull public static UnicastSubject<T> create()", "class_method_signature": "UnicastSubject.create()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(int capacityHint)", "modifiers": "@CheckReturnValue @NonNull public static", "return": "UnicastSubject<T>", "signature": "UnicastSubject<T> create(int capacityHint)", "full_signature": "@CheckReturnValue @NonNull public static UnicastSubject<T> create(int capacityHint)", "class_method_signature": "UnicastSubject.create(int capacityHint)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(int capacityHint, Runnable onTerminate)", "modifiers": "@CheckReturnValue @NonNull public static", "return": "UnicastSubject<T>", "signature": "UnicastSubject<T> create(int capacityHint, Runnable onTerminate)", "full_signature": "@CheckReturnValue @NonNull public static UnicastSubject<T> create(int capacityHint, Runnable onTerminate)", "class_method_signature": "UnicastSubject.create(int capacityHint, Runnable onTerminate)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(int capacityHint, Runnable onTerminate, boolean delayError)", "modifiers": "@CheckReturnValue @Experimental @NonNull public static", "return": "UnicastSubject<T>", "signature": "UnicastSubject<T> create(int capacityHint, Runnable onTerminate, boolean delayError)", "full_signature": "@CheckReturnValue @Experimental @NonNull public static UnicastSubject<T> create(int capacityHint, Runnable onTerminate, boolean delayError)", "class_method_signature": "UnicastSubject.create(int capacityHint, Runnable onTerminate, boolean delayError)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(boolean delayError)", "modifiers": "@CheckReturnValue @Experimental @NonNull public static", "return": "UnicastSubject<T>", "signature": "UnicastSubject<T> create(boolean delayError)", "full_signature": "@CheckReturnValue @Experimental @NonNull public static UnicastSubject<T> create(boolean delayError)", "class_method_signature": "UnicastSubject.create(boolean delayError)", "testcase": false, "constructor": false}, {"identifier": "UnicastSubject", "parameters": "(int capacityHint, boolean delayError)", "modifiers": "", "return": "", "signature": " UnicastSubject(int capacityHint, boolean delayError)", "full_signature": "  UnicastSubject(int capacityHint, boolean delayError)", "class_method_signature": "UnicastSubject.UnicastSubject(int capacityHint, boolean delayError)", "testcase": false, "constructor": true}, {"identifier": "UnicastSubject", "parameters": "(int capacityHint, Runnable onTerminate)", "modifiers": "", "return": "", "signature": " UnicastSubject(int capacityHint, Runnable onTerminate)", "full_signature": "  UnicastSubject(int capacityHint, Runnable onTerminate)", "class_method_signature": "UnicastSubject.UnicastSubject(int capacityHint, Runnable onTerminate)", "testcase": false, "constructor": true}, {"identifier": "UnicastSubject", "parameters": "(int capacityHint, Runnable onTerminate, boolean delayError)", "modifiers": "", "return": "", "signature": " UnicastSubject(int capacityHint, Runnable onTerminate, boolean delayError)", "full_signature": "  UnicastSubject(int capacityHint, Runnable onTerminate, boolean delayError)", "class_method_signature": "UnicastSubject.UnicastSubject(int capacityHint, Runnable onTerminate, boolean delayError)", "testcase": false, "constructor": true}, {"identifier": "subscribeActual", "parameters": "(Observer<? super T> observer)", "modifiers": "@Override protected", "return": "void", "signature": "void subscribeActual(Observer<? super T> observer)", "full_signature": "@Override protected void subscribeActual(Observer<? super T> observer)", "class_method_signature": "UnicastSubject.subscribeActual(Observer<? super T> observer)", "testcase": false, "constructor": false}, {"identifier": "doTerminate", "parameters": "()", "modifiers": "", "return": "void", "signature": "void doTerminate()", "full_signature": " void doTerminate()", "class_method_signature": "UnicastSubject.doTerminate()", "testcase": false, "constructor": false}, {"identifier": "onSubscribe", "parameters": "(Disposable s)", "modifiers": "@Override public", "return": "void", "signature": "void onSubscribe(Disposable s)", "full_signature": "@Override public void onSubscribe(Disposable s)", "class_method_signature": "UnicastSubject.onSubscribe(Disposable s)", "testcase": false, "constructor": false}, {"identifier": "onNext", "parameters": "(T t)", "modifiers": "@Override public", "return": "void", "signature": "void onNext(T t)", "full_signature": "@Override public void onNext(T t)", "class_method_signature": "UnicastSubject.onNext(T t)", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(Throwable t)", "modifiers": "@Override public", "return": "void", "signature": "void onError(Throwable t)", "full_signature": "@Override public void onError(Throwable t)", "class_method_signature": "UnicastSubject.onError(Throwable t)", "testcase": false, "constructor": false}, {"identifier": "onComplete", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onComplete()", "full_signature": "@Override public void onComplete()", "class_method_signature": "UnicastSubject.onComplete()", "testcase": false, "constructor": false}, {"identifier": "drainNormal", "parameters": "(Observer<? super T> a)", "modifiers": "", "return": "void", "signature": "void drainNormal(Observer<? super T> a)", "full_signature": " void drainNormal(Observer<? super T> a)", "class_method_signature": "UnicastSubject.drainNormal(Observer<? super T> a)", "testcase": false, "constructor": false}, {"identifier": "drainFused", "parameters": "(Observer<? super T> a)", "modifiers": "", "return": "void", "signature": "void drainFused(Observer<? super T> a)", "full_signature": " void drainFused(Observer<? super T> a)", "class_method_signature": "UnicastSubject.drainFused(Observer<? super T> a)", "testcase": false, "constructor": false}, {"identifier": "errorOrComplete", "parameters": "(Observer<? super T> a)", "modifiers": "", "return": "void", "signature": "void errorOrComplete(Observer<? super T> a)", "full_signature": " void errorOrComplete(Observer<? super T> a)", "class_method_signature": "UnicastSubject.errorOrComplete(Observer<? super T> a)", "testcase": false, "constructor": false}, {"identifier": "failedFast", "parameters": "(final SimpleQueue<T> q, Observer<? super T> a)", "modifiers": "", "return": "boolean", "signature": "boolean failedFast(final SimpleQueue<T> q, Observer<? super T> a)", "full_signature": " boolean failedFast(final SimpleQueue<T> q, Observer<? super T> a)", "class_method_signature": "UnicastSubject.failedFast(final SimpleQueue<T> q, Observer<? super T> a)", "testcase": false, "constructor": false}, {"identifier": "drain", "parameters": "()", "modifiers": "", "return": "void", "signature": "void drain()", "full_signature": " void drain()", "class_method_signature": "UnicastSubject.drain()", "testcase": false, "constructor": false}, {"identifier": "hasObservers", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasObservers()", "full_signature": "@Override public boolean hasObservers()", "class_method_signature": "UnicastSubject.hasObservers()", "testcase": false, "constructor": false}, {"identifier": "getThrowable", "parameters": "()", "modifiers": "@Override @Nullable public", "return": "Throwable", "signature": "Throwable getThrowable()", "full_signature": "@Override @Nullable public Throwable getThrowable()", "class_method_signature": "UnicastSubject.getThrowable()", "testcase": false, "constructor": false}, {"identifier": "hasThrowable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasThrowable()", "full_signature": "@Override public boolean hasThrowable()", "class_method_signature": "UnicastSubject.hasThrowable()", "testcase": false, "constructor": false}, {"identifier": "hasComplete", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasComplete()", "full_signature": "@Override public boolean hasComplete()", "class_method_signature": "UnicastSubject.hasComplete()", "testcase": false, "constructor": false}], "file": "rxjava/src/main/java/io/reactivex/subjects/UnicastSubject.java"}, "focal_method": {"identifier": "create", "parameters": "()", "modifiers": "@CheckReturnValue @NonNull public static", "return": "UnicastSubject<T>", "body": "@CheckReturnValue\n    @NonNull\n    public static <T> UnicastSubject<T> create() {\n        return new UnicastSubject<T>(bufferSize(), true);\n    }", "signature": "UnicastSubject<T> create()", "full_signature": "@CheckReturnValue @NonNull public static UnicastSubject<T> create()", "class_method_signature": "UnicastSubject.create()", "testcase": false, "constructor": false, "invocations": ["bufferSize"]}, "repository": {"repo_id": 128274093, "url": "https://github.com/artem-zinnatullin/error-prone-performance", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 13, "size": 22484, "license": "licensed"}}