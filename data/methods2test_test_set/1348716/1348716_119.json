{"test_class": {"identifier": "PersonnelServiceFacadeWebTierTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PersonnelServiceFacade personnelServiceFacade;", "modifier": "private", "type": "PersonnelServiceFacade", "declarator": "personnelServiceFacade", "var_name": "personnelServiceFacade"}, {"original_string": "@Mock private OfficeDao officeDao;", "modifier": "@Mock private", "type": "OfficeDao", "declarator": "officeDao", "var_name": "officeDao"}, {"original_string": "@Mock private CustomerDao customerDao;", "modifier": "@Mock private", "type": "CustomerDao", "declarator": "customerDao", "var_name": "customerDao"}, {"original_string": "@Mock private PersonnelDao personnelDao;", "modifier": "@Mock private", "type": "PersonnelDao", "declarator": "personnelDao", "var_name": "personnelDao"}, {"original_string": "@Mock private ApplicationConfigurationDao applicationConfigurationDao;", "modifier": "@Mock private", "type": "ApplicationConfigurationDao", "declarator": "applicationConfigurationDao", "var_name": "applicationConfigurationDao"}, {"original_string": "@Mock private LegacyRolesPermissionsDao rolesPermissionsPersistence;", "modifier": "@Mock private", "type": "LegacyRolesPermissionsDao", "declarator": "rolesPermissionsPersistence", "var_name": "rolesPermissionsPersistence"}], "file": "appdomain/src/test/java/org/mifos/application/servicefacade/PersonnelServiceFacadeWebTierTest.java"}, "test_case": {"identifier": "shouldRetrieveOfficeName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldRetrieveOfficeName() {\n\n        // setup\n        Short officeId = Short.valueOf(\"3\");\n        OfficeBO office = new OfficeBuilder().withName(\"officeTestName\").build();\n        when(officeDao.findOfficeById(officeId)).thenReturn(office);\n\n        // exercise test\n        DefinePersonnelDto personnelDto = this.personnelServiceFacade.retrieveInfoForNewUserDefinition(officeId);\n\n        // verification\n        assertThat(personnelDto.getOfficeName(), is(\"officeTestName\"));\n    }", "signature": "void shouldRetrieveOfficeName()", "full_signature": "@Test public void shouldRetrieveOfficeName()", "class_method_signature": "PersonnelServiceFacadeWebTierTest.shouldRetrieveOfficeName()", "testcase": true, "constructor": false, "invocations": ["valueOf", "build", "withName", "thenReturn", "when", "findOfficeById", "retrieveInfoForNewUserDefinition", "assertThat", "getOfficeName", "is"]}, "focal_class": {"identifier": "PersonnelServiceFacadeWebTier", "superclass": "", "interfaces": "implements PersonnelServiceFacade", "fields": [{"original_string": "private final OfficeDao officeDao;", "modifier": "private final", "type": "OfficeDao", "declarator": "officeDao", "var_name": "officeDao"}, {"original_string": "private final CustomerDao customerDao;", "modifier": "private final", "type": "CustomerDao", "declarator": "customerDao", "var_name": "customerDao"}, {"original_string": "private final PersonnelDao personnelDao;", "modifier": "private final", "type": "PersonnelDao", "declarator": "personnelDao", "var_name": "personnelDao"}, {"original_string": "private final LegacyRolesPermissionsDao rolesPermissionsPersistence;", "modifier": "private final", "type": "LegacyRolesPermissionsDao", "declarator": "rolesPermissionsPersistence", "var_name": "rolesPermissionsPersistence"}, {"original_string": "private HibernateTransactionHelper transactionHelper = new HibernateTransactionHelperForStaticHibernateUtil();", "modifier": "private", "type": "HibernateTransactionHelper", "declarator": "transactionHelper = new HibernateTransactionHelperForStaticHibernateUtil()", "var_name": "transactionHelper"}, {"original_string": "@Autowired\n    private LegacyMasterDao legacyMasterDao;", "modifier": "@Autowired\n    private", "type": "LegacyMasterDao", "declarator": "legacyMasterDao", "var_name": "legacyMasterDao"}, {"original_string": "@Autowired\n    private LegacyPersonnelDao legacyPersonnelDao;", "modifier": "@Autowired\n    private", "type": "LegacyPersonnelDao", "declarator": "legacyPersonnelDao", "var_name": "legacyPersonnelDao"}, {"original_string": "@Autowired\n    private PersonnelService personelService;", "modifier": "@Autowired\n    private", "type": "PersonnelService", "declarator": "personelService", "var_name": "personelService"}], "methods": [{"identifier": "PersonnelServiceFacadeWebTier", "parameters": "(OfficeDao officeDao, CustomerDao customerDao, PersonnelDao personnelDao, ApplicationConfigurationDao applicationConfigurationDao, LegacyRolesPermissionsDao rolesPermissionsPersistence)", "modifiers": "@Autowired public", "return": "", "signature": " PersonnelServiceFacadeWebTier(OfficeDao officeDao, CustomerDao customerDao, PersonnelDao personnelDao, ApplicationConfigurationDao applicationConfigurationDao, LegacyRolesPermissionsDao rolesPermissionsPersistence)", "full_signature": "@Autowired public  PersonnelServiceFacadeWebTier(OfficeDao officeDao, CustomerDao customerDao, PersonnelDao personnelDao, ApplicationConfigurationDao applicationConfigurationDao, LegacyRolesPermissionsDao rolesPermissionsPersistence)", "class_method_signature": "PersonnelServiceFacadeWebTier.PersonnelServiceFacadeWebTier(OfficeDao officeDao, CustomerDao customerDao, PersonnelDao personnelDao, ApplicationConfigurationDao applicationConfigurationDao, LegacyRolesPermissionsDao rolesPermissionsPersistence)", "testcase": false, "constructor": true}, {"identifier": "searchUser", "parameters": "(UserSearchDto searchDto)", "modifiers": "@Override public", "return": "SystemUserSearchResultsDto", "signature": "SystemUserSearchResultsDto searchUser(UserSearchDto searchDto)", "full_signature": "@Override public SystemUserSearchResultsDto searchUser(UserSearchDto searchDto)", "class_method_signature": "PersonnelServiceFacadeWebTier.searchUser(UserSearchDto searchDto)", "testcase": false, "constructor": false}, {"identifier": "retrieveInfoForNewUserDefinition", "parameters": "(Short officeId)", "modifiers": "@Override public", "return": "DefinePersonnelDto", "signature": "DefinePersonnelDto retrieveInfoForNewUserDefinition(Short officeId)", "full_signature": "@Override public DefinePersonnelDto retrieveInfoForNewUserDefinition(Short officeId)", "class_method_signature": "PersonnelServiceFacadeWebTier.retrieveInfoForNewUserDefinition(Short officeId)", "testcase": false, "constructor": false}, {"identifier": "getPersonnelInformationDto", "parameters": "(final Long userId, final String globalNumber)", "modifiers": "@Override public", "return": "PersonnelInformationDto", "signature": "PersonnelInformationDto getPersonnelInformationDto(final Long userId, final String globalNumber)", "full_signature": "@Override public PersonnelInformationDto getPersonnelInformationDto(final Long userId, final String globalNumber)", "class_method_signature": "PersonnelServiceFacadeWebTier.getPersonnelInformationDto(final Long userId, final String globalNumber)", "testcase": false, "constructor": false}, {"identifier": "createPersonnelInformation", "parameters": "(CreateOrUpdatePersonnelInformation personnel)", "modifiers": "@Override public", "return": "UserDetailDto", "signature": "UserDetailDto createPersonnelInformation(CreateOrUpdatePersonnelInformation personnel)", "full_signature": "@Override public UserDetailDto createPersonnelInformation(CreateOrUpdatePersonnelInformation personnel)", "class_method_signature": "PersonnelServiceFacadeWebTier.createPersonnelInformation(CreateOrUpdatePersonnelInformation personnel)", "testcase": false, "constructor": false}, {"identifier": "verifyFields", "parameters": "(final String userName, final String governmentIdNumber, final java.util.Date dob, final String displayName)", "modifiers": "private", "return": "void", "signature": "void verifyFields(final String userName, final String governmentIdNumber, final java.util.Date dob, final String displayName)", "full_signature": "private void verifyFields(final String userName, final String governmentIdNumber, final java.util.Date dob, final String displayName)", "class_method_signature": "PersonnelServiceFacadeWebTier.verifyFields(final String userName, final String governmentIdNumber, final java.util.Date dob, final String displayName)", "testcase": false, "constructor": false}, {"identifier": "updatePersonnel", "parameters": "(CreateOrUpdatePersonnelInformation personnel)", "modifiers": "@Override public", "return": "UserDetailDto", "signature": "UserDetailDto updatePersonnel(CreateOrUpdatePersonnelInformation personnel)", "full_signature": "@Override public UserDetailDto updatePersonnel(CreateOrUpdatePersonnelInformation personnel)", "class_method_signature": "PersonnelServiceFacadeWebTier.updatePersonnel(CreateOrUpdatePersonnelInformation personnel)", "testcase": false, "constructor": false}, {"identifier": "validateForUpdate", "parameters": "(PersonnelBO oldUserDetails, final PersonnelStatus newStatus, final OfficeBO newOffice, final PersonnelLevel newLevel)", "modifiers": "private", "return": "void", "signature": "void validateForUpdate(PersonnelBO oldUserDetails, final PersonnelStatus newStatus, final OfficeBO newOffice, final PersonnelLevel newLevel)", "full_signature": "private void validateForUpdate(PersonnelBO oldUserDetails, final PersonnelStatus newStatus, final OfficeBO newOffice, final PersonnelLevel newLevel)", "class_method_signature": "PersonnelServiceFacadeWebTier.validateForUpdate(PersonnelBO oldUserDetails, final PersonnelStatus newStatus, final OfficeBO newOffice, final PersonnelLevel newLevel)", "testcase": false, "constructor": false}, {"identifier": "validateStatusChange", "parameters": "(PersonnelBO oldUserDetails, final PersonnelStatus newStatus, final PersonnelLevel newLevel, final OfficeBO newOffice)", "modifiers": "private", "return": "void", "signature": "void validateStatusChange(PersonnelBO oldUserDetails, final PersonnelStatus newStatus, final PersonnelLevel newLevel, final OfficeBO newOffice)", "full_signature": "private void validateStatusChange(PersonnelBO oldUserDetails, final PersonnelStatus newStatus, final PersonnelLevel newLevel, final OfficeBO newOffice)", "class_method_signature": "PersonnelServiceFacadeWebTier.validateStatusChange(PersonnelBO oldUserDetails, final PersonnelStatus newStatus, final PersonnelLevel newLevel, final OfficeBO newOffice)", "testcase": false, "constructor": false}, {"identifier": "validateOfficeTransfer", "parameters": "(PersonnelBO oldUserDetails, final OfficeBO newOffice, final PersonnelLevel newLevel)", "modifiers": "private", "return": "void", "signature": "void validateOfficeTransfer(PersonnelBO oldUserDetails, final OfficeBO newOffice, final PersonnelLevel newLevel)", "full_signature": "private void validateOfficeTransfer(PersonnelBO oldUserDetails, final OfficeBO newOffice, final PersonnelLevel newLevel)", "class_method_signature": "PersonnelServiceFacadeWebTier.validateOfficeTransfer(PersonnelBO oldUserDetails, final OfficeBO newOffice, final PersonnelLevel newLevel)", "testcase": false, "constructor": false}, {"identifier": "validateUserHierarchyChange", "parameters": "(PersonnelBO oldUserDetails, final PersonnelLevel newLevel, final OfficeBO newOffice)", "modifiers": "private", "return": "void", "signature": "void validateUserHierarchyChange(PersonnelBO oldUserDetails, final PersonnelLevel newLevel, final OfficeBO newOffice)", "full_signature": "private void validateUserHierarchyChange(PersonnelBO oldUserDetails, final PersonnelLevel newLevel, final OfficeBO newOffice)", "class_method_signature": "PersonnelServiceFacadeWebTier.validateUserHierarchyChange(PersonnelBO oldUserDetails, final PersonnelLevel newLevel, final OfficeBO newOffice)", "testcase": false, "constructor": false}, {"identifier": "isRoleSelected", "parameters": "(RoleBO role, List<ListElement> roles)", "modifiers": "private", "return": "boolean", "signature": "boolean isRoleSelected(RoleBO role, List<ListElement> roles)", "full_signature": "private boolean isRoleSelected(RoleBO role, List<ListElement> roles)", "class_method_signature": "PersonnelServiceFacadeWebTier.isRoleSelected(RoleBO role, List<ListElement> roles)", "testcase": false, "constructor": false}, {"identifier": "retrieveUserSettings", "parameters": "()", "modifiers": "@Override public", "return": "UserSettingsDto", "signature": "UserSettingsDto retrieveUserSettings()", "full_signature": "@Override public UserSettingsDto retrieveUserSettings()", "class_method_signature": "PersonnelServiceFacadeWebTier.retrieveUserSettings()", "testcase": false, "constructor": false}, {"identifier": "getNameForBusinessActivityEntity", "parameters": "(Integer entityId)", "modifiers": "private", "return": "String", "signature": "String getNameForBusinessActivityEntity(Integer entityId)", "full_signature": "private String getNameForBusinessActivityEntity(Integer entityId)", "class_method_signature": "PersonnelServiceFacadeWebTier.getNameForBusinessActivityEntity(Integer entityId)", "testcase": false, "constructor": false}, {"identifier": "retrieveUserSettings", "parameters": "(Integer genderId, Integer maritalStatusId, Integer localeId, Short sitePreferenceId)", "modifiers": "@Override public", "return": "UserSettingsDto", "signature": "UserSettingsDto retrieveUserSettings(Integer genderId, Integer maritalStatusId, Integer localeId, Short sitePreferenceId)", "full_signature": "@Override public UserSettingsDto retrieveUserSettings(Integer genderId, Integer maritalStatusId, Integer localeId, Short sitePreferenceId)", "class_method_signature": "PersonnelServiceFacadeWebTier.retrieveUserSettings(Integer genderId, Integer maritalStatusId, Integer localeId, Short sitePreferenceId)", "testcase": false, "constructor": false}, {"identifier": "retrieveUserInformation", "parameters": "(Short personnelId)", "modifiers": "@Override public", "return": "UserDetailDto", "signature": "UserDetailDto retrieveUserInformation(Short personnelId)", "full_signature": "@Override public UserDetailDto retrieveUserInformation(Short personnelId)", "class_method_signature": "PersonnelServiceFacadeWebTier.retrieveUserInformation(Short personnelId)", "testcase": false, "constructor": false}, {"identifier": "updateUserSettings", "parameters": "(Short personnelId, String emailId, Name name, Integer maritalStatusValue, Integer genderValue,\n            AddressDto address, Short preferredLocale, Short sitePreference)", "modifiers": "@Override public", "return": "void", "signature": "void updateUserSettings(Short personnelId, String emailId, Name name, Integer maritalStatusValue, Integer genderValue,\n            AddressDto address, Short preferredLocale, Short sitePreference)", "full_signature": "@Override public void updateUserSettings(Short personnelId, String emailId, Name name, Integer maritalStatusValue, Integer genderValue,\n            AddressDto address, Short preferredLocale, Short sitePreference)", "class_method_signature": "PersonnelServiceFacadeWebTier.updateUserSettings(Short personnelId, String emailId, Name name, Integer maritalStatusValue, Integer genderValue,\n            AddressDto address, Short preferredLocale, Short sitePreference)", "testcase": false, "constructor": false}, {"identifier": "unLockUserAccount", "parameters": "(String globalAccountNum)", "modifiers": "@Override public", "return": "void", "signature": "void unLockUserAccount(String globalAccountNum)", "full_signature": "@Override public void unLockUserAccount(String globalAccountNum)", "class_method_signature": "PersonnelServiceFacadeWebTier.unLockUserAccount(String globalAccountNum)", "testcase": false, "constructor": false}, {"identifier": "getUserPreferredLocale", "parameters": "()", "modifiers": "@Override public", "return": "Locale", "signature": "Locale getUserPreferredLocale()", "full_signature": "@Override public Locale getUserPreferredLocale()", "class_method_signature": "PersonnelServiceFacadeWebTier.getUserPreferredLocale()", "testcase": false, "constructor": false}, {"identifier": "getUserPreferredLocale", "parameters": "(@SuppressWarnings(\"unused\") HttpServletRequest request)", "modifiers": "@Override public", "return": "Locale", "signature": "Locale getUserPreferredLocale(@SuppressWarnings(\"unused\") HttpServletRequest request)", "full_signature": "@Override public Locale getUserPreferredLocale(@SuppressWarnings(\"unused\") HttpServletRequest request)", "class_method_signature": "PersonnelServiceFacadeWebTier.getUserPreferredLocale(@SuppressWarnings(\"unused\") HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "changeUserLocale", "parameters": "(Short id, HttpServletRequest request)", "modifiers": "@Override public", "return": "Short", "signature": "Short changeUserLocale(Short id, HttpServletRequest request)", "full_signature": "@Override public Short changeUserLocale(Short id, HttpServletRequest request)", "class_method_signature": "PersonnelServiceFacadeWebTier.changeUserLocale(Short id, HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "getDisplayLocaleList", "parameters": "()", "modifiers": "@Override public", "return": "List<ValueListElement>", "signature": "List<ValueListElement> getDisplayLocaleList()", "full_signature": "@Override public List<ValueListElement> getDisplayLocaleList()", "class_method_signature": "PersonnelServiceFacadeWebTier.getDisplayLocaleList()", "testcase": false, "constructor": false}, {"identifier": "getLoanOfficerCustomersHierarchyForDay", "parameters": "(Short loanOfficerId, DateTime day)", "modifiers": "@Override public", "return": "CustomerHierarchyDto", "signature": "CustomerHierarchyDto getLoanOfficerCustomersHierarchyForDay(Short loanOfficerId, DateTime day)", "full_signature": "@Override public CustomerHierarchyDto getLoanOfficerCustomersHierarchyForDay(Short loanOfficerId, DateTime day)", "class_method_signature": "PersonnelServiceFacadeWebTier.getLoanOfficerCustomersHierarchyForDay(Short loanOfficerId, DateTime day)", "testcase": false, "constructor": false}, {"identifier": "isCustomerHavingMeetingOnDay", "parameters": "(CustomerBO customerBO, DateTime day, DateTime currentDate)", "modifiers": "private", "return": "boolean", "signature": "boolean isCustomerHavingMeetingOnDay(CustomerBO customerBO, DateTime day, DateTime currentDate)", "full_signature": "private boolean isCustomerHavingMeetingOnDay(CustomerBO customerBO, DateTime day, DateTime currentDate)", "class_method_signature": "PersonnelServiceFacadeWebTier.isCustomerHavingMeetingOnDay(CustomerBO customerBO, DateTime day, DateTime currentDate)", "testcase": false, "constructor": false}, {"identifier": "isDateInList", "parameters": "(final List<DateTime> datesList, final DateTime dateToFind)", "modifiers": "private", "return": "boolean", "signature": "boolean isDateInList(final List<DateTime> datesList, final DateTime dateToFind)", "full_signature": "private boolean isDateInList(final List<DateTime> datesList, final DateTime dateToFind)", "class_method_signature": "PersonnelServiceFacadeWebTier.isDateInList(final List<DateTime> datesList, final DateTime dateToFind)", "testcase": false, "constructor": false}, {"identifier": "retrieveActiveLoanOfficersUnderOffice", "parameters": "(Short officeId)", "modifiers": "@Override public", "return": "List<PersonnelDto>", "signature": "List<PersonnelDto> retrieveActiveLoanOfficersUnderOffice(Short officeId)", "full_signature": "@Override public List<PersonnelDto> retrieveActiveLoanOfficersUnderOffice(Short officeId)", "class_method_signature": "PersonnelServiceFacadeWebTier.retrieveActiveLoanOfficersUnderOffice(Short officeId)", "testcase": false, "constructor": false}, {"identifier": "retrieveSitePreference", "parameters": "(Integer userId)", "modifiers": "@Override public", "return": "SitePreferenceType", "signature": "SitePreferenceType retrieveSitePreference(Integer userId)", "full_signature": "@Override public SitePreferenceType retrieveSitePreference(Integer userId)", "class_method_signature": "PersonnelServiceFacadeWebTier.retrieveSitePreference(Integer userId)", "testcase": false, "constructor": false}], "file": "appdomain/src/main/java/org/mifos/application/servicefacade/PersonnelServiceFacadeWebTier.java"}, "focal_method": {"identifier": "retrieveInfoForNewUserDefinition", "parameters": "(Short officeId)", "modifiers": "@Override public", "return": "DefinePersonnelDto", "body": "@Override\n    public DefinePersonnelDto retrieveInfoForNewUserDefinition(Short officeId) {\n        String officeName = \"\";\n        if (officeId != null) {\n            OfficeBO office = officeDao.findOfficeById(officeId);\n            officeName = office.getOfficeName();\n        }\n\n        List<ValueListElement> titles = customerDao.retrieveTitles();\n        List<ListElement> titleList = new ArrayList<ListElement>();\n        for (ValueListElement element : titles) {\n            ListElement listElement = new ListElement(element.getId(), element.getName());\n            titleList.add(listElement);\n        }\n\n        List<PersonnelLevelEntity> personnelLevels = customerDao.retrievePersonnelLevels();\n        List<ListElement> personnelLevelList = new ArrayList<ListElement>();\n        for (PersonnelLevelEntity level : personnelLevels) {\n            String name = level.getLookUpValue().getLookUpName();\n            String localisedName = ApplicationContextProvider.getBean(MessageLookup.class).lookup(name);\n            ListElement listElement = new ListElement(new Integer(level.getId()), localisedName);\n            personnelLevelList.add(listElement);\n        }\n\n        List<ValueListElement> genders = customerDao.retrieveGenders();\n        List<ListElement> genderList = new ArrayList<ListElement>();\n        for (ValueListElement element : genders) {\n            ListElement listElement = new ListElement(element.getId(), element.getName());\n            genderList.add(listElement);\n        }\n\n        List<ValueListElement> maritalStatuses = customerDao.retrieveMaritalStatuses();\n        List<ListElement> maritalStatusList = new ArrayList<ListElement>();\n        for (ValueListElement element : maritalStatuses) {\n            ListElement listElement = new ListElement(element.getId(), element.getName());\n            maritalStatusList.add(listElement);\n        }\n\n        List<RoleBO> roles = new ArrayList<RoleBO>();\n        try {\n            roles = rolesPermissionsPersistence.getRoles();\n        } catch (PersistenceException e) {\n            throw new MifosRuntimeException(e);\n        }\n\n        List<ListElement> roleList = new ArrayList<ListElement>();\n        for (RoleBO element : roles) {\n            ListElement listElement = new ListElement(new Integer(element.getId()), element.getName());\n            roleList.add(listElement);\n        }\n\n        List<ListElement> languageList = Localization.getInstance().getLocaleList();\n\n        DefinePersonnelDto defineUserDto = new DefinePersonnelDto(officeName, titleList, personnelLevelList,\n                genderList, maritalStatusList, languageList, roleList);\n        return defineUserDto;\n    }", "signature": "DefinePersonnelDto retrieveInfoForNewUserDefinition(Short officeId)", "full_signature": "@Override public DefinePersonnelDto retrieveInfoForNewUserDefinition(Short officeId)", "class_method_signature": "PersonnelServiceFacadeWebTier.retrieveInfoForNewUserDefinition(Short officeId)", "testcase": false, "constructor": false, "invocations": ["findOfficeById", "getOfficeName", "retrieveTitles", "getId", "getName", "add", "retrievePersonnelLevels", "getLookUpName", "getLookUpValue", "lookup", "getBean", "getId", "add", "retrieveGenders", "getId", "getName", "add", "retrieveMaritalStatuses", "getId", "getName", "add", "getRoles", "getId", "getName", "add", "getLocaleList", "getInstance"]}, "repository": {"repo_id": 1348716, "url": "https://github.com/mifos/head", "language": "Java", "is_fork": false, "fork_count": 91, "stargazer_count": 55, "size": 532732, "license": "licensed"}}