{"test_class": {"identifier": "QuotedCSVTest", "superclass": "", "interfaces": "", "fields": [], "file": "firefly-net/src/test/java/com/fireflysource/net/http/common/model/QuotedCSVTest.java"}, "test_case": {"identifier": "testUnQuote", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testUnQuote() {\n        assertEquals(\"\", QuotedCSV.unquote(\"\"));\n        assertEquals(\"\", QuotedCSV.unquote(\"\\\"\\\"\"));\n        assertEquals(\"foo\", QuotedCSV.unquote(\"foo\"));\n        assertEquals(\"foo\", QuotedCSV.unquote(\"\\\"foo\\\"\"));\n        assertEquals(\"foo\", QuotedCSV.unquote(\"f\\\"o\\\"o\"));\n        assertEquals(\"\\\"foo\", QuotedCSV.unquote(\"\\\"\\\\\\\"foo\\\"\"));\n        assertEquals(\"\\\\foo\", QuotedCSV.unquote(\"\\\\foo\"));\n    }", "signature": "void testUnQuote()", "full_signature": "@Test void testUnQuote()", "class_method_signature": "QuotedCSVTest.testUnQuote()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "unquote", "assertEquals", "unquote", "assertEquals", "unquote", "assertEquals", "unquote", "assertEquals", "unquote", "assertEquals", "unquote", "assertEquals", "unquote"]}, "focal_class": {"identifier": "QuotedCSV", "superclass": "", "interfaces": "implements Iterable<String>", "fields": [{"original_string": "protected final List<String> values = new ArrayList<>();", "modifier": "protected final", "type": "List<String>", "declarator": "values = new ArrayList<>()", "var_name": "values"}, {"original_string": "protected final boolean keepQuotes;", "modifier": "protected final", "type": "boolean", "declarator": "keepQuotes", "var_name": "keepQuotes"}], "methods": [{"identifier": "QuotedCSV", "parameters": "(String... values)", "modifiers": "public", "return": "", "signature": " QuotedCSV(String... values)", "full_signature": "public  QuotedCSV(String... values)", "class_method_signature": "QuotedCSV.QuotedCSV(String... values)", "testcase": false, "constructor": true}, {"identifier": "QuotedCSV", "parameters": "(boolean keepQuotes, String... values)", "modifiers": "public", "return": "", "signature": " QuotedCSV(boolean keepQuotes, String... values)", "full_signature": "public  QuotedCSV(boolean keepQuotes, String... values)", "class_method_signature": "QuotedCSV.QuotedCSV(boolean keepQuotes, String... values)", "testcase": false, "constructor": true}, {"identifier": "unquote", "parameters": "(String s)", "modifiers": "public static", "return": "String", "signature": "String unquote(String s)", "full_signature": "public static String unquote(String s)", "class_method_signature": "QuotedCSV.unquote(String s)", "testcase": false, "constructor": false}, {"identifier": "addValue", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void addValue(String value)", "full_signature": "public void addValue(String value)", "class_method_signature": "QuotedCSV.addValue(String value)", "testcase": false, "constructor": false}, {"identifier": "parsedValue", "parameters": "(StringBuilder buffer)", "modifiers": "protected", "return": "void", "signature": "void parsedValue(StringBuilder buffer)", "full_signature": "protected void parsedValue(StringBuilder buffer)", "class_method_signature": "QuotedCSV.parsedValue(StringBuilder buffer)", "testcase": false, "constructor": false}, {"identifier": "parsedParam", "parameters": "(StringBuilder buffer, int valueLength, int paramName, int paramValue)", "modifiers": "protected", "return": "void", "signature": "void parsedParam(StringBuilder buffer, int valueLength, int paramName, int paramValue)", "full_signature": "protected void parsedParam(StringBuilder buffer, int valueLength, int paramName, int paramValue)", "class_method_signature": "QuotedCSV.parsedParam(StringBuilder buffer, int valueLength, int paramName, int paramValue)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "QuotedCSV.size()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "QuotedCSV.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getValues()", "full_signature": "public List<String> getValues()", "class_method_signature": "QuotedCSV.getValues()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<String>", "signature": "Iterator<String> iterator()", "full_signature": "@Override public Iterator<String> iterator()", "class_method_signature": "QuotedCSV.iterator()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "QuotedCSV.toString()", "testcase": false, "constructor": false}], "file": "firefly-net/src/main/java/com/fireflysource/net/http/common/model/QuotedCSV.java"}, "focal_method": {"identifier": "unquote", "parameters": "(String s)", "modifiers": "public static", "return": "String", "body": "public static String unquote(String s) {\n        if (!StringUtils.hasText(s)) {\n            return s;\n        }\n        // handle trivial cases\n        int l = s.length();\n        // Look for any quotes\n        int i = 0;\n        for (; i < l; i++) {\n            char c = s.charAt(i);\n            if (c == '\"')\n                break;\n        }\n        if (i == l)\n            return s;\n\n        boolean quoted = true;\n        boolean sloshed = false;\n        StringBuilder buffer = new StringBuilder();\n        buffer.append(s, 0, i);\n        i++;\n        for (; i < l; i++) {\n            char c = s.charAt(i);\n            if (quoted) {\n                if (sloshed) {\n                    buffer.append(c);\n                    sloshed = false;\n                } else if (c == '\"')\n                    quoted = false;\n                else if (c == '\\\\')\n                    sloshed = true;\n                else\n                    buffer.append(c);\n            } else if (c == '\"')\n                quoted = true;\n            else\n                buffer.append(c);\n        }\n        return buffer.toString();\n    }", "signature": "String unquote(String s)", "full_signature": "public static String unquote(String s)", "class_method_signature": "QuotedCSV.unquote(String s)", "testcase": false, "constructor": false, "invocations": ["hasText", "length", "charAt", "append", "charAt", "append", "append", "append", "toString"]}, "repository": {"repo_id": 3458429, "url": "https://github.com/hypercube1024/firefly", "language": "Java", "is_fork": false, "fork_count": 118, "stargazer_count": 271, "size": 29687, "license": "licensed"}}