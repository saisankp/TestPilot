{"test_class": {"identifier": "HpoAnnotationEntryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Ontology ontology;", "modifier": "private static", "type": "Ontology", "declarator": "ontology", "var_name": "ontology"}], "file": "phenol-annotations/src/test/java/org/monarchinitiative/phenol/annotations/hpo/HpoAnnotationEntryTest.java"}, "test_case": {"identifier": "testEvidenceCodeValid", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testEvidenceCodeValid() {\n        String[] fields={\n                \"OMIM:123456\",\n                \"MADE-UP SYNDROME\",\n                \"HP:0000528\",\n                \"Anophthalmia\",\n                \"\",\n                \"\",\n                \"76.3%\",\n                \"FEMALE\",\n                \"\",\n                \"\",\n                \"\",\n                \"PMID:9843983\",\n                \"PC\",\n                \"HPO:probinson[2013-01-09]\"};\n        String line = String.join(\"\\t\",fields);//Arrays.stream(fields).collect(Collectors.joining(\"\\t\"));\n        Assertions.assertThrows(PhenolException.class, () -> {\n            HpoAnnotationEntry entry = HpoAnnotationEntry.fromLine(line,ontology);\n        });\n    }", "signature": "void testEvidenceCodeValid()", "full_signature": "@Test void testEvidenceCodeValid()", "class_method_signature": "HpoAnnotationEntryTest.testEvidenceCodeValid()", "testcase": true, "constructor": false, "invocations": ["join", "assertThrows", "fromLine"]}, "focal_class": {"identifier": "HpoAnnotationEntry", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static Logger logger = LoggerFactory.getLogger(HpoAnnotationEntry.class);", "modifier": "private final static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(HpoAnnotationEntry.class)", "var_name": "logger"}, {"original_string": "private static final TermId phenotypeRoot = TermId.of(\"HP:0000118\");", "modifier": "private static final", "type": "TermId", "declarator": "phenotypeRoot = TermId.of(\"HP:0000118\")", "var_name": "phenotypeRoot"}, {"original_string": "private static final TermId INHERITANCE_TERM_ID = TermId.of(\"HP:0000005\");", "modifier": "private static final", "type": "TermId", "declarator": "INHERITANCE_TERM_ID = TermId.of(\"HP:0000005\")", "var_name": "INHERITANCE_TERM_ID"}, {"original_string": "private static final TermId CLINICAL_COURSE_ID = TermId.of(\"HP:0031797\");", "modifier": "private static final", "type": "TermId", "declarator": "CLINICAL_COURSE_ID = TermId.of(\"HP:0031797\")", "var_name": "CLINICAL_COURSE_ID"}, {"original_string": "private static final TermId CLINICAL_MODIFIER_ID = TermId.of(\"HP:0012823\");", "modifier": "private static final", "type": "TermId", "declarator": "CLINICAL_MODIFIER_ID = TermId.of(\"HP:0012823\")", "var_name": "CLINICAL_MODIFIER_ID"}, {"original_string": "private final static String EMPTY_STRING=\"\";", "modifier": "private final static", "type": "String", "declarator": "EMPTY_STRING=\"\"", "var_name": "EMPTY_STRING"}, {"original_string": "private final String diseaseID;", "modifier": "private final", "type": "String", "declarator": "diseaseID", "var_name": "diseaseID"}, {"original_string": "private final String diseaseName;", "modifier": "private final", "type": "String", "declarator": "diseaseName", "var_name": "diseaseName"}, {"original_string": "private final TermId phenotypeId;", "modifier": "private final", "type": "TermId", "declarator": "phenotypeId", "var_name": "phenotypeId"}, {"original_string": "private final String phenotypeName;", "modifier": "private final", "type": "String", "declarator": "phenotypeName", "var_name": "phenotypeName"}, {"original_string": "private final String ageOfOnsetId;", "modifier": "private final", "type": "String", "declarator": "ageOfOnsetId", "var_name": "ageOfOnsetId"}, {"original_string": "private final String ageOfOnsetName;", "modifier": "private final", "type": "String", "declarator": "ageOfOnsetName", "var_name": "ageOfOnsetName"}, {"original_string": "private final String evidenceCode;", "modifier": "private final", "type": "String", "declarator": "evidenceCode", "var_name": "evidenceCode"}, {"original_string": "private final String frequencyModifier;", "modifier": "private final", "type": "String", "declarator": "frequencyModifier", "var_name": "frequencyModifier"}, {"original_string": "private final String sex;", "modifier": "private final", "type": "String", "declarator": "sex", "var_name": "sex"}, {"original_string": "private final String negation;", "modifier": "private final", "type": "String", "declarator": "negation", "var_name": "negation"}, {"original_string": "private final String modifier;", "modifier": "private final", "type": "String", "declarator": "modifier", "var_name": "modifier"}, {"original_string": "private final String description;", "modifier": "private final", "type": "String", "declarator": "description", "var_name": "description"}, {"original_string": "private final String publication;", "modifier": "private final", "type": "String", "declarator": "publication", "var_name": "publication"}, {"original_string": "private final String biocuration;", "modifier": "private final", "type": "String", "declarator": "biocuration", "var_name": "biocuration"}, {"original_string": "private final static String [] expectedFields ={\"#diseaseID\",\n            \"diseaseName\",\n            \"phenotypeID\",\n            \"phenotypeName\",\n            \"onsetID\",\n            \"onsetName\",\n            \"frequency\",\n            \"sex\",\n            \"negation\",\n            \"modifier\",\n            \"description\",\n            \"publication\",\n            \"evidence\",\n            \"biocuration\"};", "modifier": "private final static", "type": "String []", "declarator": "expectedFields ={\"#diseaseID\",\n            \"diseaseName\",\n            \"phenotypeID\",\n            \"phenotypeName\",\n            \"onsetID\",\n            \"onsetName\",\n            \"frequency\",\n            \"sex\",\n            \"negation\",\n            \"modifier\",\n            \"description\",\n            \"publication\",\n            \"evidence\",\n            \"biocuration\"}", "var_name": "expectedFields"}, {"original_string": "private static final int NUMBER_OF_FIELDS=expectedFields.length;", "modifier": "private static final", "type": "int", "declarator": "NUMBER_OF_FIELDS=expectedFields.length", "var_name": "NUMBER_OF_FIELDS"}, {"original_string": "private final static Set<String> validDatabases = ImmutableSet.of(\"OMIM\",\"DECIPHER\",\"ORPHA\");", "modifier": "private final static", "type": "Set<String>", "declarator": "validDatabases = ImmutableSet.of(\"OMIM\",\"DECIPHER\",\"ORPHA\")", "var_name": "validDatabases"}, {"original_string": "private final static Set<TermId> frequencySubhierarcyTermIds = ImmutableSet.of(TermId.of(\"HP:0003674\"),TermId.of(\"HP:0040280\"),\n            TermId.of(\"HP:0040281\"), TermId.of(\"HP:0040282\"),TermId.of(\"HP:0040283\"),TermId.of(\"HP:0040284\"),\n            TermId.of(\"HP:0040285\"));", "modifier": "private final static", "type": "Set<TermId>", "declarator": "frequencySubhierarcyTermIds = ImmutableSet.of(TermId.of(\"HP:0003674\"),TermId.of(\"HP:0040280\"),\n            TermId.of(\"HP:0040281\"), TermId.of(\"HP:0040282\"),TermId.of(\"HP:0040283\"),TermId.of(\"HP:0040284\"),\n            TermId.of(\"HP:0040285\"))", "var_name": "frequencySubhierarcyTermIds"}, {"original_string": "private final static Set<TermId> onsetSubhierarcyTermIds = ImmutableSet.of( TermId.of(\"HP:0003674\"), TermId.of(\"HP:0011460\"),\n            TermId.of(\"HP:0003581\"), TermId.of(\"HP:0003596\"), TermId.of(\"HP:0003584\"), TermId.of(\"HP:0011462\"),\n             TermId.of(\"HP:0003577\"), TermId.of(\"HP:0003623\"), TermId.of(\"HP:0410280\"), TermId.of(\"HP:0011463\"),\n             TermId.of(\"HP:0003593\"), TermId.of(\"HP:0003621\"), TermId.of(\"HP:0030674\"), TermId.of(\"HP:0011461\"));", "modifier": "private final static", "type": "Set<TermId>", "declarator": "onsetSubhierarcyTermIds = ImmutableSet.of( TermId.of(\"HP:0003674\"), TermId.of(\"HP:0011460\"),\n            TermId.of(\"HP:0003581\"), TermId.of(\"HP:0003596\"), TermId.of(\"HP:0003584\"), TermId.of(\"HP:0011462\"),\n             TermId.of(\"HP:0003577\"), TermId.of(\"HP:0003623\"), TermId.of(\"HP:0410280\"), TermId.of(\"HP:0011463\"),\n             TermId.of(\"HP:0003593\"), TermId.of(\"HP:0003621\"), TermId.of(\"HP:0030674\"), TermId.of(\"HP:0011461\"))", "var_name": "onsetSubhierarcyTermIds"}, {"original_string": "private static final Set<String> EVIDENCE_CODES = ImmutableSet.of(\"IEA\",\"TAS\",\"PCS\");", "modifier": "private static final", "type": "Set<String>", "declarator": "EVIDENCE_CODES = ImmutableSet.of(\"IEA\",\"TAS\",\"PCS\")", "var_name": "EVIDENCE_CODES"}, {"original_string": "private static final Set<String> VALID_CITATION_PREFIXES = ImmutableSet.of(\"PMID\",\"OMIM\",\"http\",\"https\",\"DECIPHER\",\n           \"ORPHA\", \"ISBN\", \"ISBN-10\",\"ISBN-13\");", "modifier": "private static final", "type": "Set<String>", "declarator": "VALID_CITATION_PREFIXES = ImmutableSet.of(\"PMID\",\"OMIM\",\"http\",\"https\",\"DECIPHER\",\n           \"ORPHA\", \"ISBN\", \"ISBN-10\",\"ISBN-13\")", "var_name": "VALID_CITATION_PREFIXES"}, {"original_string": "private static final String biocurationRegex = \"(\\\\w+:\\\\w+)\\\\[(\\\\d{4}-\\\\d{2}-\\\\d{2})]\";", "modifier": "private static final", "type": "String", "declarator": "biocurationRegex = \"(\\\\w+:\\\\w+)\\\\[(\\\\d{4}-\\\\d{2}-\\\\d{2})]\"", "var_name": "biocurationRegex"}, {"original_string": "private static final Pattern biocurationPattern = Pattern.compile(biocurationRegex);", "modifier": "private static final", "type": "Pattern", "declarator": "biocurationPattern = Pattern.compile(biocurationRegex)", "var_name": "biocurationPattern"}, {"original_string": "private static final TermId EXCLUDED = TermId.of(\"HP:0040285\");", "modifier": "private static final", "type": "TermId", "declarator": "EXCLUDED = TermId.of(\"HP:0040285\")", "var_name": "EXCLUDED"}], "methods": [{"identifier": "getDiseaseID", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDiseaseID()", "full_signature": "public String getDiseaseID()", "class_method_signature": "HpoAnnotationEntry.getDiseaseID()", "testcase": false, "constructor": false}, {"identifier": "getDB", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDB()", "full_signature": "public String getDB()", "class_method_signature": "HpoAnnotationEntry.getDB()", "testcase": false, "constructor": false}, {"identifier": "getDB_Object_ID", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDB_Object_ID()", "full_signature": "public String getDB_Object_ID()", "class_method_signature": "HpoAnnotationEntry.getDB_Object_ID()", "testcase": false, "constructor": false}, {"identifier": "getDiseaseName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDiseaseName()", "full_signature": "public String getDiseaseName()", "class_method_signature": "HpoAnnotationEntry.getDiseaseName()", "testcase": false, "constructor": false}, {"identifier": "getPhenotypeId", "parameters": "()", "modifiers": "public", "return": "TermId", "signature": "TermId getPhenotypeId()", "full_signature": "public TermId getPhenotypeId()", "class_method_signature": "HpoAnnotationEntry.getPhenotypeId()", "testcase": false, "constructor": false}, {"identifier": "getPhenotypeLabel", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPhenotypeLabel()", "full_signature": "public String getPhenotypeLabel()", "class_method_signature": "HpoAnnotationEntry.getPhenotypeLabel()", "testcase": false, "constructor": false}, {"identifier": "getAgeOfOnsetId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAgeOfOnsetId()", "full_signature": "public String getAgeOfOnsetId()", "class_method_signature": "HpoAnnotationEntry.getAgeOfOnsetId()", "testcase": false, "constructor": false}, {"identifier": "getAgeOfOnsetLabel", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAgeOfOnsetLabel()", "full_signature": "public String getAgeOfOnsetLabel()", "class_method_signature": "HpoAnnotationEntry.getAgeOfOnsetLabel()", "testcase": false, "constructor": false}, {"identifier": "getEvidenceCode", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getEvidenceCode()", "full_signature": "public String getEvidenceCode()", "class_method_signature": "HpoAnnotationEntry.getEvidenceCode()", "testcase": false, "constructor": false}, {"identifier": "getFrequencyModifier", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFrequencyModifier()", "full_signature": "public String getFrequencyModifier()", "class_method_signature": "HpoAnnotationEntry.getFrequencyModifier()", "testcase": false, "constructor": false}, {"identifier": "getSex", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSex()", "full_signature": "public String getSex()", "class_method_signature": "HpoAnnotationEntry.getSex()", "testcase": false, "constructor": false}, {"identifier": "getNegation", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getNegation()", "full_signature": "public String getNegation()", "class_method_signature": "HpoAnnotationEntry.getNegation()", "testcase": false, "constructor": false}, {"identifier": "getModifier", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getModifier()", "full_signature": "public String getModifier()", "class_method_signature": "HpoAnnotationEntry.getModifier()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDescription()", "full_signature": "public String getDescription()", "class_method_signature": "HpoAnnotationEntry.getDescription()", "testcase": false, "constructor": false}, {"identifier": "getPublication", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPublication()", "full_signature": "public String getPublication()", "class_method_signature": "HpoAnnotationEntry.getPublication()", "testcase": false, "constructor": false}, {"identifier": "getBiocuration", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getBiocuration()", "full_signature": "public String getBiocuration()", "class_method_signature": "HpoAnnotationEntry.getBiocuration()", "testcase": false, "constructor": false}, {"identifier": "HpoAnnotationEntry", "parameters": "(String disID,\n                               String diseaseName,\n                               TermId phenotypeId,\n                               String phenotypeName,\n                               String ageOfOnsetId,\n                               String ageOfOnsetName,\n                               String frequencyString,\n                               String sex,\n                               String negation,\n                               String modifier,\n                               String description,\n                               String publication,\n                               String evidenceCode,\n                               String biocuration)", "modifiers": "", "return": "", "signature": " HpoAnnotationEntry(String disID,\n                               String diseaseName,\n                               TermId phenotypeId,\n                               String phenotypeName,\n                               String ageOfOnsetId,\n                               String ageOfOnsetName,\n                               String frequencyString,\n                               String sex,\n                               String negation,\n                               String modifier,\n                               String description,\n                               String publication,\n                               String evidenceCode,\n                               String biocuration)", "full_signature": "  HpoAnnotationEntry(String disID,\n                               String diseaseName,\n                               TermId phenotypeId,\n                               String phenotypeName,\n                               String ageOfOnsetId,\n                               String ageOfOnsetName,\n                               String frequencyString,\n                               String sex,\n                               String negation,\n                               String modifier,\n                               String description,\n                               String publication,\n                               String evidenceCode,\n                               String biocuration)", "class_method_signature": "HpoAnnotationEntry.HpoAnnotationEntry(String disID,\n                               String diseaseName,\n                               TermId phenotypeId,\n                               String phenotypeName,\n                               String ageOfOnsetId,\n                               String ageOfOnsetName,\n                               String frequencyString,\n                               String sex,\n                               String negation,\n                               String modifier,\n                               String description,\n                               String publication,\n                               String evidenceCode,\n                               String biocuration)", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "HpoAnnotationEntry.toString()", "testcase": false, "constructor": false}, {"identifier": "getLineNoTabs", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLineNoTabs()", "full_signature": "public String getLineNoTabs()", "class_method_signature": "HpoAnnotationEntry.getLineNoTabs()", "testcase": false, "constructor": false}, {"identifier": "getRow", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getRow()", "full_signature": "public String getRow()", "class_method_signature": "HpoAnnotationEntry.getRow()", "testcase": false, "constructor": false}, {"identifier": "fromLine", "parameters": "(String line, Ontology ontology)", "modifiers": "public static", "return": "HpoAnnotationEntry", "signature": "HpoAnnotationEntry fromLine(String line, Ontology ontology)", "full_signature": "public static HpoAnnotationEntry fromLine(String line, Ontology ontology)", "class_method_signature": "HpoAnnotationEntry.fromLine(String line, Ontology ontology)", "testcase": false, "constructor": false}, {"identifier": "fromLineReplaceObsoletePhenotypeData", "parameters": "(String line, Ontology ontology)", "modifiers": "public static", "return": "Optional<HpoAnnotationEntry>", "signature": "Optional<HpoAnnotationEntry> fromLineReplaceObsoletePhenotypeData(String line, Ontology ontology)", "full_signature": "public static Optional<HpoAnnotationEntry> fromLineReplaceObsoletePhenotypeData(String line, Ontology ontology)", "class_method_signature": "HpoAnnotationEntry.fromLineReplaceObsoletePhenotypeData(String line, Ontology ontology)", "testcase": false, "constructor": false}, {"identifier": "fromOrphaData", "parameters": "(String diseaseID,\n                                                   String diseaseName,\n                                                   String hpoId,\n                                                   String hpoLabel,\n                                                   TermId frequency,\n                                                   Ontology ontology,\n                                                   String biocuration,\n                                                   boolean replaceObsoleteTermId)", "modifiers": "public static", "return": "HpoAnnotationEntry", "signature": "HpoAnnotationEntry fromOrphaData(String diseaseID,\n                                                   String diseaseName,\n                                                   String hpoId,\n                                                   String hpoLabel,\n                                                   TermId frequency,\n                                                   Ontology ontology,\n                                                   String biocuration,\n                                                   boolean replaceObsoleteTermId)", "full_signature": "public static HpoAnnotationEntry fromOrphaData(String diseaseID,\n                                                   String diseaseName,\n                                                   String hpoId,\n                                                   String hpoLabel,\n                                                   TermId frequency,\n                                                   Ontology ontology,\n                                                   String biocuration,\n                                                   boolean replaceObsoleteTermId)", "class_method_signature": "HpoAnnotationEntry.fromOrphaData(String diseaseID,\n                                                   String diseaseName,\n                                                   String hpoId,\n                                                   String hpoLabel,\n                                                   TermId frequency,\n                                                   Ontology ontology,\n                                                   String biocuration,\n                                                   boolean replaceObsoleteTermId)", "testcase": false, "constructor": false}, {"identifier": "fromOrphaInheritanceData", "parameters": "(String diseaseID,\n                                                 String diseaseName,\n                                                 TermId hpoInheritanceId,\n                                                 String hpoLabel,\n                                                 String biocuration)", "modifiers": "public static", "return": "HpoAnnotationEntry", "signature": "HpoAnnotationEntry fromOrphaInheritanceData(String diseaseID,\n                                                 String diseaseName,\n                                                 TermId hpoInheritanceId,\n                                                 String hpoLabel,\n                                                 String biocuration)", "full_signature": "public static HpoAnnotationEntry fromOrphaInheritanceData(String diseaseID,\n                                                 String diseaseName,\n                                                 TermId hpoInheritanceId,\n                                                 String hpoLabel,\n                                                 String biocuration)", "class_method_signature": "HpoAnnotationEntry.fromOrphaInheritanceData(String diseaseID,\n                                                 String diseaseName,\n                                                 TermId hpoInheritanceId,\n                                                 String hpoLabel,\n                                                 String biocuration)", "testcase": false, "constructor": false}, {"identifier": "performQualityControl", "parameters": "(HpoAnnotationEntry entry, Ontology ontology)", "modifiers": "private static", "return": "void", "signature": "void performQualityControl(HpoAnnotationEntry entry, Ontology ontology)", "full_signature": "private static void performQualityControl(HpoAnnotationEntry entry, Ontology ontology)", "class_method_signature": "HpoAnnotationEntry.performQualityControl(HpoAnnotationEntry entry, Ontology ontology)", "testcase": false, "constructor": false}, {"identifier": "checkDB", "parameters": "(HpoAnnotationEntry entry)", "modifiers": "private static", "return": "void", "signature": "void checkDB(HpoAnnotationEntry entry)", "full_signature": "private static void checkDB(HpoAnnotationEntry entry)", "class_method_signature": "HpoAnnotationEntry.checkDB(HpoAnnotationEntry entry)", "testcase": false, "constructor": false}, {"identifier": "checkDiseaseName", "parameters": "(String name)", "modifiers": "private static", "return": "void", "signature": "void checkDiseaseName(String name)", "full_signature": "private static void checkDiseaseName(String name)", "class_method_signature": "HpoAnnotationEntry.checkDiseaseName(String name)", "testcase": false, "constructor": false}, {"identifier": "checkPhenotypeFields", "parameters": "(HpoAnnotationEntry entry, Ontology ontology)", "modifiers": "private static", "return": "void", "signature": "void checkPhenotypeFields(HpoAnnotationEntry entry, Ontology ontology)", "full_signature": "private static void checkPhenotypeFields(HpoAnnotationEntry entry, Ontology ontology)", "class_method_signature": "HpoAnnotationEntry.checkPhenotypeFields(HpoAnnotationEntry entry, Ontology ontology)", "testcase": false, "constructor": false}, {"identifier": "checkAgeOfOnsetFields", "parameters": "(String id, String termLabel, Ontology ontology)", "modifiers": "private static", "return": "void", "signature": "void checkAgeOfOnsetFields(String id, String termLabel, Ontology ontology)", "full_signature": "private static void checkAgeOfOnsetFields(String id, String termLabel, Ontology ontology)", "class_method_signature": "HpoAnnotationEntry.checkAgeOfOnsetFields(String id, String termLabel, Ontology ontology)", "testcase": false, "constructor": false}, {"identifier": "checkEvidence", "parameters": "(String evi)", "modifiers": "private static", "return": "void", "signature": "void checkEvidence(String evi)", "full_signature": "private static void checkEvidence(String evi)", "class_method_signature": "HpoAnnotationEntry.checkEvidence(String evi)", "testcase": false, "constructor": false}, {"identifier": "checkFrequency", "parameters": "(String freq, Ontology ontology)", "modifiers": "private static", "return": "void", "signature": "void checkFrequency(String freq, Ontology ontology)", "full_signature": "private static void checkFrequency(String freq, Ontology ontology)", "class_method_signature": "HpoAnnotationEntry.checkFrequency(String freq, Ontology ontology)", "testcase": false, "constructor": false}, {"identifier": "checkSexEntry", "parameters": "(String sex)", "modifiers": "private static", "return": "void", "signature": "void checkSexEntry(String sex)", "full_signature": "private static void checkSexEntry(String sex)", "class_method_signature": "HpoAnnotationEntry.checkSexEntry(String sex)", "testcase": false, "constructor": false}, {"identifier": "checkNegation", "parameters": "(String negation)", "modifiers": "private static", "return": "void", "signature": "void checkNegation(String negation)", "full_signature": "private static void checkNegation(String negation)", "class_method_signature": "HpoAnnotationEntry.checkNegation(String negation)", "testcase": false, "constructor": false}, {"identifier": "checkModifier", "parameters": "(String modifierString, Ontology ontology)", "modifiers": "private static", "return": "void", "signature": "void checkModifier(String modifierString, Ontology ontology)", "full_signature": "private static void checkModifier(String modifierString, Ontology ontology)", "class_method_signature": "HpoAnnotationEntry.checkModifier(String modifierString, Ontology ontology)", "testcase": false, "constructor": false}, {"identifier": "checkPublication", "parameters": "(String pub)", "modifiers": "private static", "return": "void", "signature": "void checkPublication(String pub)", "full_signature": "private static void checkPublication(String pub)", "class_method_signature": "HpoAnnotationEntry.checkPublication(String pub)", "testcase": false, "constructor": false}, {"identifier": "checkBiocuration", "parameters": "(String entrylist)", "modifiers": "private static", "return": "void", "signature": "void checkBiocuration(String entrylist)", "full_signature": "private static void checkBiocuration(String entrylist)", "class_method_signature": "HpoAnnotationEntry.checkBiocuration(String entrylist)", "testcase": false, "constructor": false}, {"identifier": "getAspect", "parameters": "(TermId tid, Ontology ontology)", "modifiers": "private", "return": "String", "signature": "String getAspect(TermId tid, Ontology ontology)", "full_signature": "private String getAspect(TermId tid, Ontology ontology)", "class_method_signature": "HpoAnnotationEntry.getAspect(TermId tid, Ontology ontology)", "testcase": false, "constructor": false}, {"identifier": "toBigFileLine", "parameters": "(Ontology ontology)", "modifiers": "public", "return": "String", "signature": "String toBigFileLine(Ontology ontology)", "full_signature": "public String toBigFileLine(Ontology ontology)", "class_method_signature": "HpoAnnotationEntry.toBigFileLine(Ontology ontology)", "testcase": false, "constructor": false}], "file": "phenol-annotations/src/main/java/org/monarchinitiative/phenol/annotations/hpo/HpoAnnotationEntry.java"}, "focal_method": {"identifier": "fromLine", "parameters": "(String line, Ontology ontology)", "modifiers": "public static", "return": "HpoAnnotationEntry", "body": "public static HpoAnnotationEntry fromLine(String line, Ontology ontology) throws PhenolException {\n        String [] A= line.split(\"\\t\");\n        if (A.length!= NUMBER_OF_FIELDS) {\n            throw new HpoAnnotationModelException(String.format(\"We were expecting %d expectedFields but got %d for line %s\",NUMBER_OF_FIELDS,A.length,line ));\n        }\n        String diseaseID=A[0];\n        String diseaseName=A[1];\n        TermId phenotypeId = TermId.of(A[2]);\n        String phenotypeName=A[3];\n        String ageOfOnsetId=A[4];\n        String ageOfOnsetName=A[5];\n        String frequencyString=A[6];\n        String sex=A[7];\n        String negation=A[8];\n        String modifier=A[9];\n        String description=A[10];\n        String publication=A[11];\n        String evidenceCode=A[12];\n        String biocuration=A[13];\n\n        HpoAnnotationEntry entry = new HpoAnnotationEntry(diseaseID,\n                 diseaseName,\n                 phenotypeId,\n                 phenotypeName,\n                 ageOfOnsetId,\n                 ageOfOnsetName,\n                 frequencyString,\n                 sex,\n                 negation,\n                 modifier,\n                 description,\n                 publication,\n                 evidenceCode,\n                 biocuration);\n        // if the following method does not throw an Exception, we are good to go!\n        performQualityControl(entry, ontology);\n        return entry;\n    }", "signature": "HpoAnnotationEntry fromLine(String line, Ontology ontology)", "full_signature": "public static HpoAnnotationEntry fromLine(String line, Ontology ontology)", "class_method_signature": "HpoAnnotationEntry.fromLine(String line, Ontology ontology)", "testcase": false, "constructor": false, "invocations": ["split", "format", "of", "performQualityControl"]}, "repository": {"repo_id": 119170338, "url": "https://github.com/monarch-initiative/phenol", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 5832, "license": "licensed"}}