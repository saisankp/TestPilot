{"test_class": {"identifier": "AndBodyCheckerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PARAMETER_NAME = \"MSG_ID\";", "modifier": "private static final", "type": "String", "declarator": "PARAMETER_NAME = \"MSG_ID\"", "var_name": "PARAMETER_NAME"}, {"original_string": "private static final String MSG_ID = \"msgid=\\\"00001\\\"\";", "modifier": "private static final", "type": "String", "declarator": "MSG_ID = \"msgid=\\\"00001\\\"\"", "var_name": "MSG_ID"}, {"original_string": "@Mock\n    private WilmaHttpRequest request;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private ConditionCheckerOperator operator;", "modifier": "@Mock\n    private", "type": "ConditionCheckerOperator", "declarator": "operator", "var_name": "operator"}, {"original_string": "private AndBodyChecker underTest;", "modifier": "private", "type": "AndBodyChecker", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "private ParameterList parameterList;", "modifier": "private", "type": "ParameterList", "declarator": "parameterList", "var_name": "parameterList"}], "file": "wilma-application/modules/wilma-stub-configuration-support/src/test/java/com/epam/wilma/stubconfig/condition/checker/general/text/AndBodyCheckerTest.java"}, "test_case": {"identifier": "testCheckConditionWhenParameterMapHasEmptyEntryShouldReturnFalse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCheckConditionWhenParameterMapHasEmptyEntryShouldReturnFalse() {\n        //GIVEN\n        parameterList.addParameter(new Parameter(PARAMETER_NAME, \"\"));\n        given(request.getBody()).willReturn(MSG_ID);\n        //WHEN\n        boolean actual = underTest.checkCondition(request, parameterList);\n        //THEN\n        assertEquals(actual, false);\n    }", "signature": "void testCheckConditionWhenParameterMapHasEmptyEntryShouldReturnFalse()", "full_signature": "@Test public void testCheckConditionWhenParameterMapHasEmptyEntryShouldReturnFalse()", "class_method_signature": "AndBodyCheckerTest.testCheckConditionWhenParameterMapHasEmptyEntryShouldReturnFalse()", "testcase": true, "constructor": false, "invocations": ["addParameter", "willReturn", "given", "getBody", "checkCondition", "assertEquals"]}, "focal_class": {"identifier": "AndBodyChecker", "superclass": "", "interfaces": "implements ConditionChecker", "fields": [{"original_string": "private final ConditionCheckerOperator operator;", "modifier": "private final", "type": "ConditionCheckerOperator", "declarator": "operator", "var_name": "operator"}], "methods": [{"identifier": "AndBodyChecker", "parameters": "(final ConditionCheckerOperator operator)", "modifiers": "public", "return": "", "signature": " AndBodyChecker(final ConditionCheckerOperator operator)", "full_signature": "public  AndBodyChecker(final ConditionCheckerOperator operator)", "class_method_signature": "AndBodyChecker.AndBodyChecker(final ConditionCheckerOperator operator)", "testcase": false, "constructor": true}, {"identifier": "checkCondition", "parameters": "(final WilmaHttpRequest request, final ParameterList parameterList)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "full_signature": "@Override public boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "class_method_signature": "AndBodyChecker.checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "testcase": false, "constructor": false}, {"identifier": "evaluateParameter", "parameters": "(final WilmaHttpRequest request, final String parameterValue)", "modifiers": "private", "return": "boolean", "signature": "boolean evaluateParameter(final WilmaHttpRequest request, final String parameterValue)", "full_signature": "private boolean evaluateParameter(final WilmaHttpRequest request, final String parameterValue)", "class_method_signature": "AndBodyChecker.evaluateParameter(final WilmaHttpRequest request, final String parameterValue)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-support/src/main/java/com/epam/wilma/stubconfig/condition/checker/general/text/AndBodyChecker.java"}, "focal_method": {"identifier": "checkCondition", "parameters": "(final WilmaHttpRequest request, final ParameterList parameterList)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList) {\n        List<Parameter> params = parameterList.getAllParameters();\n        Iterator<Parameter> iterator = params.iterator();\n        boolean result = !params.isEmpty();\n        while (iterator.hasNext() && result) {\n            Parameter parameter = iterator.next();\n            String parameterValue = parameter.getValue();\n            result = evaluateParameter(request, parameterValue);\n        }\n        return result;\n    }", "signature": "boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "full_signature": "@Override public boolean checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "class_method_signature": "AndBodyChecker.checkCondition(final WilmaHttpRequest request, final ParameterList parameterList)", "testcase": false, "constructor": false, "invocations": ["getAllParameters", "iterator", "isEmpty", "hasNext", "next", "getValue", "evaluateParameter"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}