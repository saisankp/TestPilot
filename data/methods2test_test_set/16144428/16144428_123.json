{"test_class": {"identifier": "DatamodelConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "wdtk-datamodel/src/test/java/org/wikidata/wdtk/datamodel/helpers/DatamodelConverterTest.java"}, "test_case": {"identifier": "testBrokenStatement", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testBrokenStatement() {\n\n\t\tList<Statement> brokenSg1Statements = new ArrayList<>();\n\t\tbrokenSg1Statements.add(getTestStatement(2,\n\t\t\t\t5, 1, EntityIdValue.ET_ITEM));\n\t\tbrokenSg1Statements.add(getBrokenStatement());\n\t\tbrokenSg1Statements.add(getTestStatement(2,\n\t\t\t\t5, 2, EntityIdValue.ET_ITEM));\n\t\tStatementGroup brokenSg1 = Datamodel\n\t\t\t\t.makeStatementGroup(brokenSg1Statements);\n\n\t\tList<Statement> fixedSg1Statements = new ArrayList<>();\n\t\tfixedSg1Statements.add(getTestStatement(2, 5,\n\t\t\t\t1, EntityIdValue.ET_ITEM));\n\t\tfixedSg1Statements.add(getTestStatement(2, 5,\n\t\t\t\t2, EntityIdValue.ET_ITEM));\n\t\tStatementGroup fixedSg1 = Datamodel\n\t\t\t\t.makeStatementGroup(fixedSg1Statements);\n\n\t\tStatementGroup sg2 = getTestStatementGroup(2,\n\t\t\t\t5, 1, EntityIdValue.ET_ITEM);\n\n\t\tList<StatementGroup> brokenSgs = new ArrayList<>();\n\t\tbrokenSgs.add(brokenSg1);\n\t\tbrokenSgs.add(sg2);\n\t\tList<StatementGroup> fixedSgs = new ArrayList<>();\n\t\tfixedSgs.add(fixedSg1);\n\t\tfixedSgs.add(sg2);\n\n\t\tItemDocument brokenId = Datamodel.makeItemDocument(\n\t\t\t\tgetTestItemIdValue(2),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tCollections.emptyList(), brokenSgs,\n\t\t\t\tCollections.emptyMap());\n\n\t\tItemDocument fixedId = Datamodel.makeItemDocument(\n\t\t\t\tgetTestItemIdValue(2),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tCollections.emptyList(),\n\t\t\t\tCollections.emptyList(), fixedSgs,\n\t\t\t\tCollections.emptyMap());\n\n\t\tDatamodelConverter dmc = new DatamodelConverter(\n\t\t\t\tnew DataObjectFactoryImpl());\n\n\t\tassertEquals(fixedId, dmc.copy(brokenId));\n\t}", "signature": "void testBrokenStatement()", "full_signature": "@Test public void testBrokenStatement()", "class_method_signature": "DatamodelConverterTest.testBrokenStatement()", "testcase": true, "constructor": false, "invocations": ["add", "getTestStatement", "add", "getBrokenStatement", "add", "getTestStatement", "makeStatementGroup", "add", "getTestStatement", "add", "getTestStatement", "makeStatementGroup", "getTestStatementGroup", "add", "add", "add", "add", "makeItemDocument", "getTestItemIdValue", "emptyList", "emptyList", "emptyList", "emptyMap", "makeItemDocument", "getTestItemIdValue", "emptyList", "emptyList", "emptyList", "emptyMap", "assertEquals", "copy"]}, "focal_class": {"identifier": "DatamodelConverter", "superclass": "", "interfaces": "implements SnakVisitor<Snak>,\n\t\tValueVisitor<Value>", "fields": [{"original_string": "static final Logger logger = LoggerFactory\n\t\t\t.getLogger(DatamodelConverter.class);", "modifier": "static final", "type": "Logger", "declarator": "logger = LoggerFactory\n\t\t\t.getLogger(DatamodelConverter.class)", "var_name": "logger"}, {"original_string": "private final DataObjectFactory dataObjectFactory;", "modifier": "private final", "type": "DataObjectFactory", "declarator": "dataObjectFactory", "var_name": "dataObjectFactory"}, {"original_string": "private DocumentDataFilter filter = new DocumentDataFilter();", "modifier": "private", "type": "DocumentDataFilter", "declarator": "filter = new DocumentDataFilter()", "var_name": "filter"}, {"original_string": "private boolean deepCopyReferences = true;", "modifier": "private", "type": "boolean", "declarator": "deepCopyReferences = true", "var_name": "deepCopyReferences"}], "methods": [{"identifier": "DatamodelConverter", "parameters": "(DataObjectFactory dataObjectFactory)", "modifiers": "public", "return": "", "signature": " DatamodelConverter(DataObjectFactory dataObjectFactory)", "full_signature": "public  DatamodelConverter(DataObjectFactory dataObjectFactory)", "class_method_signature": "DatamodelConverter.DatamodelConverter(DataObjectFactory dataObjectFactory)", "testcase": false, "constructor": true}, {"identifier": "hasOptionDeepCopy", "parameters": "()", "modifiers": "@Deprecated public", "return": "boolean", "signature": "boolean hasOptionDeepCopy()", "full_signature": "@Deprecated public boolean hasOptionDeepCopy()", "class_method_signature": "DatamodelConverter.hasOptionDeepCopy()", "testcase": false, "constructor": false}, {"identifier": "setOptionDeepCopy", "parameters": "(boolean value)", "modifiers": "@Deprecated public", "return": "void", "signature": "void setOptionDeepCopy(boolean value)", "full_signature": "@Deprecated public void setOptionDeepCopy(boolean value)", "class_method_signature": "DatamodelConverter.setOptionDeepCopy(boolean value)", "testcase": false, "constructor": false}, {"identifier": "hasOptionDeepCopyReferences", "parameters": "()", "modifiers": "@Deprecated public", "return": "boolean", "signature": "boolean hasOptionDeepCopyReferences()", "full_signature": "@Deprecated public boolean hasOptionDeepCopyReferences()", "class_method_signature": "DatamodelConverter.hasOptionDeepCopyReferences()", "testcase": false, "constructor": false}, {"identifier": "setOptionDeepCopyReferences", "parameters": "(boolean value)", "modifiers": "@Deprecated public", "return": "void", "signature": "void setOptionDeepCopyReferences(boolean value)", "full_signature": "@Deprecated public void setOptionDeepCopyReferences(boolean value)", "class_method_signature": "DatamodelConverter.setOptionDeepCopyReferences(boolean value)", "testcase": false, "constructor": false}, {"identifier": "setOptionFilter", "parameters": "(DocumentDataFilter filter)", "modifiers": "@Deprecated public", "return": "void", "signature": "void setOptionFilter(DocumentDataFilter filter)", "full_signature": "@Deprecated public void setOptionFilter(DocumentDataFilter filter)", "class_method_signature": "DatamodelConverter.setOptionFilter(DocumentDataFilter filter)", "testcase": false, "constructor": false}, {"identifier": "getOptionLanguageFilter", "parameters": "()", "modifiers": "@Deprecated public", "return": "Set<String>", "signature": "Set<String> getOptionLanguageFilter()", "full_signature": "@Deprecated public Set<String> getOptionLanguageFilter()", "class_method_signature": "DatamodelConverter.getOptionLanguageFilter()", "testcase": false, "constructor": false}, {"identifier": "setOptionLanguageFilter", "parameters": "(Set<String> languageFilter)", "modifiers": "@Deprecated public", "return": "void", "signature": "void setOptionLanguageFilter(Set<String> languageFilter)", "full_signature": "@Deprecated public void setOptionLanguageFilter(Set<String> languageFilter)", "class_method_signature": "DatamodelConverter.setOptionLanguageFilter(Set<String> languageFilter)", "testcase": false, "constructor": false}, {"identifier": "getOptionPropertyFilter", "parameters": "()", "modifiers": "@Deprecated public", "return": "Set<PropertyIdValue>", "signature": "Set<PropertyIdValue> getOptionPropertyFilter()", "full_signature": "@Deprecated public Set<PropertyIdValue> getOptionPropertyFilter()", "class_method_signature": "DatamodelConverter.getOptionPropertyFilter()", "testcase": false, "constructor": false}, {"identifier": "setOptionPropertyFilter", "parameters": "(Set<PropertyIdValue> propertyFilter)", "modifiers": "@Deprecated public", "return": "void", "signature": "void setOptionPropertyFilter(Set<PropertyIdValue> propertyFilter)", "full_signature": "@Deprecated public void setOptionPropertyFilter(Set<PropertyIdValue> propertyFilter)", "class_method_signature": "DatamodelConverter.setOptionPropertyFilter(Set<PropertyIdValue> propertyFilter)", "testcase": false, "constructor": false}, {"identifier": "getOptionSiteLinkFilter", "parameters": "()", "modifiers": "@Deprecated public", "return": "Set<String>", "signature": "Set<String> getOptionSiteLinkFilter()", "full_signature": "@Deprecated public Set<String> getOptionSiteLinkFilter()", "class_method_signature": "DatamodelConverter.getOptionSiteLinkFilter()", "testcase": false, "constructor": false}, {"identifier": "setOptionSiteLinkFilter", "parameters": "(Set<String> siteLinkFilter)", "modifiers": "@Deprecated public", "return": "void", "signature": "void setOptionSiteLinkFilter(Set<String> siteLinkFilter)", "full_signature": "@Deprecated public void setOptionSiteLinkFilter(Set<String> siteLinkFilter)", "class_method_signature": "DatamodelConverter.setOptionSiteLinkFilter(Set<String> siteLinkFilter)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(ItemIdValue object)", "modifiers": "public", "return": "ItemIdValue", "signature": "ItemIdValue copy(ItemIdValue object)", "full_signature": "public ItemIdValue copy(ItemIdValue object)", "class_method_signature": "DatamodelConverter.copy(ItemIdValue object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(PropertyIdValue object)", "modifiers": "public", "return": "PropertyIdValue", "signature": "PropertyIdValue copy(PropertyIdValue object)", "full_signature": "public PropertyIdValue copy(PropertyIdValue object)", "class_method_signature": "DatamodelConverter.copy(PropertyIdValue object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(LexemeIdValue object)", "modifiers": "public", "return": "LexemeIdValue", "signature": "LexemeIdValue copy(LexemeIdValue object)", "full_signature": "public LexemeIdValue copy(LexemeIdValue object)", "class_method_signature": "DatamodelConverter.copy(LexemeIdValue object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(DatatypeIdValue object)", "modifiers": "public", "return": "DatatypeIdValue", "signature": "DatatypeIdValue copy(DatatypeIdValue object)", "full_signature": "public DatatypeIdValue copy(DatatypeIdValue object)", "class_method_signature": "DatamodelConverter.copy(DatatypeIdValue object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(TimeValue object)", "modifiers": "public", "return": "TimeValue", "signature": "TimeValue copy(TimeValue object)", "full_signature": "public TimeValue copy(TimeValue object)", "class_method_signature": "DatamodelConverter.copy(TimeValue object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(GlobeCoordinatesValue object)", "modifiers": "public", "return": "GlobeCoordinatesValue", "signature": "GlobeCoordinatesValue copy(GlobeCoordinatesValue object)", "full_signature": "public GlobeCoordinatesValue copy(GlobeCoordinatesValue object)", "class_method_signature": "DatamodelConverter.copy(GlobeCoordinatesValue object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(StringValue object)", "modifiers": "public", "return": "StringValue", "signature": "StringValue copy(StringValue object)", "full_signature": "public StringValue copy(StringValue object)", "class_method_signature": "DatamodelConverter.copy(StringValue object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(MonolingualTextValue object)", "modifiers": "public", "return": "MonolingualTextValue", "signature": "MonolingualTextValue copy(MonolingualTextValue object)", "full_signature": "public MonolingualTextValue copy(MonolingualTextValue object)", "class_method_signature": "DatamodelConverter.copy(MonolingualTextValue object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(QuantityValue object)", "modifiers": "public", "return": "QuantityValue", "signature": "QuantityValue copy(QuantityValue object)", "full_signature": "public QuantityValue copy(QuantityValue object)", "class_method_signature": "DatamodelConverter.copy(QuantityValue object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(UnsupportedValue object)", "modifiers": "public", "return": "UnsupportedValue", "signature": "UnsupportedValue copy(UnsupportedValue object)", "full_signature": "public UnsupportedValue copy(UnsupportedValue object)", "class_method_signature": "DatamodelConverter.copy(UnsupportedValue object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(Snak snak)", "modifiers": "private", "return": "Snak", "signature": "Snak copy(Snak snak)", "full_signature": "private Snak copy(Snak snak)", "class_method_signature": "DatamodelConverter.copy(Snak snak)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(ValueSnak object)", "modifiers": "public", "return": "ValueSnak", "signature": "ValueSnak copy(ValueSnak object)", "full_signature": "public ValueSnak copy(ValueSnak object)", "class_method_signature": "DatamodelConverter.copy(ValueSnak object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(SomeValueSnak object)", "modifiers": "public", "return": "SomeValueSnak", "signature": "SomeValueSnak copy(SomeValueSnak object)", "full_signature": "public SomeValueSnak copy(SomeValueSnak object)", "class_method_signature": "DatamodelConverter.copy(SomeValueSnak object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(NoValueSnak object)", "modifiers": "public", "return": "NoValueSnak", "signature": "NoValueSnak copy(NoValueSnak object)", "full_signature": "public NoValueSnak copy(NoValueSnak object)", "class_method_signature": "DatamodelConverter.copy(NoValueSnak object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(SnakGroup object)", "modifiers": "public", "return": "SnakGroup", "signature": "SnakGroup copy(SnakGroup object)", "full_signature": "public SnakGroup copy(SnakGroup object)", "class_method_signature": "DatamodelConverter.copy(SnakGroup object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(Claim object)", "modifiers": "public", "return": "Claim", "signature": "Claim copy(Claim object)", "full_signature": "public Claim copy(Claim object)", "class_method_signature": "DatamodelConverter.copy(Claim object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(Reference object)", "modifiers": "public", "return": "Reference", "signature": "Reference copy(Reference object)", "full_signature": "public Reference copy(Reference object)", "class_method_signature": "DatamodelConverter.copy(Reference object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(Statement object)", "modifiers": "public", "return": "Statement", "signature": "Statement copy(Statement object)", "full_signature": "public Statement copy(Statement object)", "class_method_signature": "DatamodelConverter.copy(Statement object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(StatementGroup object)", "modifiers": "public", "return": "StatementGroup", "signature": "StatementGroup copy(StatementGroup object)", "full_signature": "public StatementGroup copy(StatementGroup object)", "class_method_signature": "DatamodelConverter.copy(StatementGroup object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(SiteLink object)", "modifiers": "public", "return": "SiteLink", "signature": "SiteLink copy(SiteLink object)", "full_signature": "public SiteLink copy(SiteLink object)", "class_method_signature": "DatamodelConverter.copy(SiteLink object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(PropertyDocument object)", "modifiers": "public", "return": "PropertyDocument", "signature": "PropertyDocument copy(PropertyDocument object)", "full_signature": "public PropertyDocument copy(PropertyDocument object)", "class_method_signature": "DatamodelConverter.copy(PropertyDocument object)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(ItemDocument object)", "modifiers": "public", "return": "ItemDocument", "signature": "ItemDocument copy(ItemDocument object)", "full_signature": "public ItemDocument copy(ItemDocument object)", "class_method_signature": "DatamodelConverter.copy(ItemDocument object)", "testcase": false, "constructor": false}, {"identifier": "copySnak", "parameters": "(Snak snak)", "modifiers": "public", "return": "Snak", "signature": "Snak copySnak(Snak snak)", "full_signature": "public Snak copySnak(Snak snak)", "class_method_signature": "DatamodelConverter.copySnak(Snak snak)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(ValueSnak snak)", "modifiers": "@Override public", "return": "Snak", "signature": "Snak visit(ValueSnak snak)", "full_signature": "@Override public Snak visit(ValueSnak snak)", "class_method_signature": "DatamodelConverter.visit(ValueSnak snak)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(SomeValueSnak snak)", "modifiers": "@Override public", "return": "Snak", "signature": "Snak visit(SomeValueSnak snak)", "full_signature": "@Override public Snak visit(SomeValueSnak snak)", "class_method_signature": "DatamodelConverter.visit(SomeValueSnak snak)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(NoValueSnak snak)", "modifiers": "@Override public", "return": "Snak", "signature": "Snak visit(NoValueSnak snak)", "full_signature": "@Override public Snak visit(NoValueSnak snak)", "class_method_signature": "DatamodelConverter.visit(NoValueSnak snak)", "testcase": false, "constructor": false}, {"identifier": "copyValue", "parameters": "(Value value)", "modifiers": "public", "return": "Value", "signature": "Value copyValue(Value value)", "full_signature": "public Value copyValue(Value value)", "class_method_signature": "DatamodelConverter.copyValue(Value value)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(EntityIdValue value)", "modifiers": "@Override public", "return": "Value", "signature": "Value visit(EntityIdValue value)", "full_signature": "@Override public Value visit(EntityIdValue value)", "class_method_signature": "DatamodelConverter.visit(EntityIdValue value)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(GlobeCoordinatesValue value)", "modifiers": "@Override public", "return": "Value", "signature": "Value visit(GlobeCoordinatesValue value)", "full_signature": "@Override public Value visit(GlobeCoordinatesValue value)", "class_method_signature": "DatamodelConverter.visit(GlobeCoordinatesValue value)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(MonolingualTextValue value)", "modifiers": "@Override public", "return": "Value", "signature": "Value visit(MonolingualTextValue value)", "full_signature": "@Override public Value visit(MonolingualTextValue value)", "class_method_signature": "DatamodelConverter.visit(MonolingualTextValue value)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(QuantityValue value)", "modifiers": "@Override public", "return": "Value", "signature": "Value visit(QuantityValue value)", "full_signature": "@Override public Value visit(QuantityValue value)", "class_method_signature": "DatamodelConverter.visit(QuantityValue value)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(StringValue value)", "modifiers": "@Override public", "return": "Value", "signature": "Value visit(StringValue value)", "full_signature": "@Override public Value visit(StringValue value)", "class_method_signature": "DatamodelConverter.visit(StringValue value)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(TimeValue value)", "modifiers": "@Override public", "return": "Value", "signature": "Value visit(TimeValue value)", "full_signature": "@Override public Value visit(TimeValue value)", "class_method_signature": "DatamodelConverter.visit(TimeValue value)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(UnsupportedValue value)", "modifiers": "@Override public", "return": "Value", "signature": "Value visit(UnsupportedValue value)", "full_signature": "@Override public Value visit(UnsupportedValue value)", "class_method_signature": "DatamodelConverter.visit(UnsupportedValue value)", "testcase": false, "constructor": false}, {"identifier": "copyAliasMap", "parameters": "(\n\t\t\tMap<String, List<MonolingualTextValue>> aliasMap)", "modifiers": "private", "return": "List<MonolingualTextValue>", "signature": "List<MonolingualTextValue> copyAliasMap(\n\t\t\tMap<String, List<MonolingualTextValue>> aliasMap)", "full_signature": "private List<MonolingualTextValue> copyAliasMap(\n\t\t\tMap<String, List<MonolingualTextValue>> aliasMap)", "class_method_signature": "DatamodelConverter.copyAliasMap(\n\t\t\tMap<String, List<MonolingualTextValue>> aliasMap)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "(List<SnakGroup> snakGroups)", "modifiers": "private", "return": "List<SnakGroup>", "signature": "List<SnakGroup> copy(List<SnakGroup> snakGroups)", "full_signature": "private List<SnakGroup> copy(List<SnakGroup> snakGroups)", "class_method_signature": "DatamodelConverter.copy(List<SnakGroup> snakGroups)", "testcase": false, "constructor": false}, {"identifier": "copyReferences", "parameters": "(List<Reference> references)", "modifiers": "private", "return": "List<Reference>", "signature": "List<Reference> copyReferences(List<Reference> references)", "full_signature": "private List<Reference> copyReferences(List<Reference> references)", "class_method_signature": "DatamodelConverter.copyReferences(List<Reference> references)", "testcase": false, "constructor": false}, {"identifier": "copyStatementGroups", "parameters": "(List<StatementGroup> statementGroups)", "modifiers": "private", "return": "List<StatementGroup>", "signature": "List<StatementGroup> copyStatementGroups(List<StatementGroup> statementGroups)", "full_signature": "private List<StatementGroup> copyStatementGroups(List<StatementGroup> statementGroups)", "class_method_signature": "DatamodelConverter.copyStatementGroups(List<StatementGroup> statementGroups)", "testcase": false, "constructor": false}, {"identifier": "copyMonoLingualTextValues", "parameters": "(Collection<MonolingualTextValue> monoLingualTextValues)", "modifiers": "private", "return": "List<MonolingualTextValue>", "signature": "List<MonolingualTextValue> copyMonoLingualTextValues(Collection<MonolingualTextValue> monoLingualTextValues)", "full_signature": "private List<MonolingualTextValue> copyMonoLingualTextValues(Collection<MonolingualTextValue> monoLingualTextValues)", "class_method_signature": "DatamodelConverter.copyMonoLingualTextValues(Collection<MonolingualTextValue> monoLingualTextValues)", "testcase": false, "constructor": false}, {"identifier": "copySiteLinks", "parameters": "(Map<String, SiteLink> siteLinks)", "modifiers": "private", "return": "Map<String, SiteLink>", "signature": "Map<String, SiteLink> copySiteLinks(Map<String, SiteLink> siteLinks)", "full_signature": "private Map<String, SiteLink> copySiteLinks(Map<String, SiteLink> siteLinks)", "class_method_signature": "DatamodelConverter.copySiteLinks(Map<String, SiteLink> siteLinks)", "testcase": false, "constructor": false}], "file": "wdtk-datamodel/src/main/java/org/wikidata/wdtk/datamodel/helpers/DatamodelConverter.java"}, "focal_method": {"identifier": "copy", "parameters": "(ItemIdValue object)", "modifiers": "public", "return": "ItemIdValue", "body": "public ItemIdValue copy(ItemIdValue object) {\n\t\treturn dataObjectFactory.getItemIdValue(object.getId(), object.getSiteIri());\n\t}", "signature": "ItemIdValue copy(ItemIdValue object)", "full_signature": "public ItemIdValue copy(ItemIdValue object)", "class_method_signature": "DatamodelConverter.copy(ItemIdValue object)", "testcase": false, "constructor": false, "invocations": ["getItemIdValue", "getId", "getSiteIri"]}, "repository": {"repo_id": 16144428, "url": "https://github.com/Wikidata/Wikidata-Toolkit", "language": "Java", "is_fork": false, "fork_count": 80, "stargazer_count": 264, "size": 11241, "license": "licensed"}}