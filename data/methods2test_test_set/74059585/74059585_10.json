{"test_class": {"identifier": "ProxiesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final VendorSpecificPreparedStatement mockStatement =\n      mock(VendorSpecificPreparedStatement.class);", "modifier": "private final", "type": "VendorSpecificPreparedStatement", "declarator": "mockStatement =\n      mock(VendorSpecificPreparedStatement.class)", "var_name": "mockStatement"}], "file": "jdbc/driver-common/src/test/java/com/google/cloud/trace/jdbc/ProxiesTest.java"}, "test_case": {"identifier": "newProxyInstance", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void newProxyInstance() throws Exception {\n    InvocationHandler mockInvocationHandler =\n        new InvocationHandler() {\n          @Override\n          public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n            assertThat(method.getName()).isEqualTo(\"vendorSpecificMethod\");\n            return method.invoke(mockStatement, args);\n          }\n        };\n\n    Object proxy = Proxies.newProxyInstance(mockStatement, mockInvocationHandler);\n\n    assertThat(proxy instanceof VendorSpecificPreparedStatement).isTrue();\n    ((VendorSpecificPreparedStatement) proxy).vendorSpecificMethod();\n    verify(mockStatement).vendorSpecificMethod();\n  }", "signature": "void newProxyInstance()", "full_signature": "@Test public void newProxyInstance()", "class_method_signature": "ProxiesTest.newProxyInstance()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "getName", "invoke", "newProxyInstance", "isTrue", "assertThat", "vendorSpecificMethod", "vendorSpecificMethod", "verify"]}, "focal_class": {"identifier": "Proxies", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Proxies", "parameters": "()", "modifiers": "private", "return": "", "signature": " Proxies()", "full_signature": "private  Proxies()", "class_method_signature": "Proxies.Proxies()", "testcase": false, "constructor": true}, {"identifier": "getInterfaces", "parameters": "(Object o)", "modifiers": "private static", "return": "Class<?>[]", "signature": "Class<?>[] getInterfaces(Object o)", "full_signature": "private static Class<?>[] getInterfaces(Object o)", "class_method_signature": "Proxies.getInterfaces(Object o)", "testcase": false, "constructor": false}, {"identifier": "newProxyInstance", "parameters": "(T o, InvocationHandler h)", "modifiers": "@SuppressWarnings(\"unchecked\") static", "return": "T", "signature": "T newProxyInstance(T o, InvocationHandler h)", "full_signature": "@SuppressWarnings(\"unchecked\") static T newProxyInstance(T o, InvocationHandler h)", "class_method_signature": "Proxies.newProxyInstance(T o, InvocationHandler h)", "testcase": false, "constructor": false}], "file": "jdbc/driver-common/src/main/java/com/google/cloud/trace/jdbc/Proxies.java"}, "focal_method": {"identifier": "newProxyInstance", "parameters": "(T o, InvocationHandler h)", "modifiers": "@SuppressWarnings(\"unchecked\") static", "return": "T", "body": "@SuppressWarnings(\"unchecked\")\n  static <T> T newProxyInstance(T o, InvocationHandler h) {\n    checkNotNull(o);\n    checkNotNull(h);\n\n    return (T) Proxy.newProxyInstance(o.getClass().getClassLoader(), Proxies.getInterfaces(o), h);\n  }", "signature": "T newProxyInstance(T o, InvocationHandler h)", "full_signature": "@SuppressWarnings(\"unchecked\") static T newProxyInstance(T o, InvocationHandler h)", "class_method_signature": "Proxies.newProxyInstance(T o, InvocationHandler h)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "checkNotNull", "newProxyInstance", "getClassLoader", "getClass", "getInterfaces"]}, "repository": {"repo_id": 74059585, "url": "https://github.com/GoogleCloudPlatform/cloud-trace-java-instrumentation", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 10, "size": 141, "license": "licensed"}}