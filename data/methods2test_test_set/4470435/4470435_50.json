{"test_class": {"identifier": "IntrospectorUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "processor/src/test/java/org/mapstruct/ap/spi/util/IntrospectorUtilsTest.java"}, "test_case": {"identifier": "testDecapitalize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDecapitalize() {\n        assertThat( IntrospectorUtils.decapitalize( null ) ).isNull();\n        assertThat( IntrospectorUtils.decapitalize( \"\" ) ).isEqualTo( \"\" );\n        assertThat( IntrospectorUtils.decapitalize( \"URL\" ) ).isEqualTo( \"URL\" );\n        assertThat( IntrospectorUtils.decapitalize( \"FooBar\" ) ).isEqualTo( \"fooBar\" );\n        assertThat( IntrospectorUtils.decapitalize( \"PArtialCapitalized\" ) ).isEqualTo( \"PArtialCapitalized\" );\n        assertThat( IntrospectorUtils.decapitalize( \"notCapitalized\" ) ).isEqualTo( \"notCapitalized\" );\n        assertThat( IntrospectorUtils.decapitalize( \"a\" ) ).isEqualTo( \"a\" );\n    }", "signature": "void testDecapitalize()", "full_signature": "@Test public void testDecapitalize()", "class_method_signature": "IntrospectorUtilsTest.testDecapitalize()", "testcase": true, "constructor": false, "invocations": ["isNull", "assertThat", "decapitalize", "isEqualTo", "assertThat", "decapitalize", "isEqualTo", "assertThat", "decapitalize", "isEqualTo", "assertThat", "decapitalize", "isEqualTo", "assertThat", "decapitalize", "isEqualTo", "assertThat", "decapitalize", "isEqualTo", "assertThat", "decapitalize"]}, "focal_class": {"identifier": "IntrospectorUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "IntrospectorUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " IntrospectorUtils()", "full_signature": "private  IntrospectorUtils()", "class_method_signature": "IntrospectorUtils.IntrospectorUtils()", "testcase": false, "constructor": true}, {"identifier": "decapitalize", "parameters": "(String name)", "modifiers": "public static", "return": "String", "signature": "String decapitalize(String name)", "full_signature": "public static String decapitalize(String name)", "class_method_signature": "IntrospectorUtils.decapitalize(String name)", "testcase": false, "constructor": false}], "file": "processor/src/main/java/org/mapstruct/ap/spi/util/IntrospectorUtils.java"}, "focal_method": {"identifier": "decapitalize", "parameters": "(String name)", "modifiers": "public static", "return": "String", "body": "public static String decapitalize(String name) {\n        if ( name == null || name.length() == 0 ) {\n            return name;\n        }\n        if ( name.length() > 1 && Character.isUpperCase( name.charAt( 1 ) ) &&\n            Character.isUpperCase( name.charAt( 0 ) ) ) {\n            return name;\n        }\n        char[] chars = name.toCharArray();\n        chars[0] = Character.toLowerCase( chars[0] );\n        return new String( chars );\n    }", "signature": "String decapitalize(String name)", "full_signature": "public static String decapitalize(String name)", "class_method_signature": "IntrospectorUtils.decapitalize(String name)", "testcase": false, "constructor": false, "invocations": ["length", "length", "isUpperCase", "charAt", "isUpperCase", "charAt", "toCharArray", "toLowerCase"]}, "repository": {"repo_id": 4470435, "url": "https://github.com/mapstruct/mapstruct", "stars": 2319, "created": "5/28/2012 12:42:42 PM +00:00", "updates": "2020-01-27T19:16:09+00:00", "fork": "False", "license": "licensed"}}