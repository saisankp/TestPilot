{"test_class": {"identifier": "LayoutInflaterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LayoutInflater inflater;", "modifier": "private", "type": "LayoutInflater", "declarator": "inflater", "var_name": "inflater"}], "file": "clara/src/test/java/org/vaadin/teemu/clara/inflater/LayoutInflaterTest.java"}, "test_case": {"identifier": "inflate_absoluteLayout", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void inflate_absoluteLayout() {\n        AbsoluteLayout layout = (AbsoluteLayout) inflater\n                .inflate(getXml(\"absolutelayout.xml\"));\n\n        Button button = (Button) layout.getComponentIterator().next();\n\n        // check position attributes\n        assertEquals(20, layout.getPosition(button).getTopValue(), 0);\n        assertEquals(10, layout.getPosition(button).getLeftValue(), 0);\n        assertEquals(Unit.PIXELS, layout.getPosition(button).getTopUnits());\n        assertEquals(Unit.PERCENTAGE, layout.getPosition(button).getLeftUnits());\n    }", "signature": "void inflate_absoluteLayout()", "full_signature": "@Test public void inflate_absoluteLayout()", "class_method_signature": "LayoutInflaterTest.inflate_absoluteLayout()", "testcase": true, "constructor": false, "invocations": ["inflate", "getXml", "next", "getComponentIterator", "assertEquals", "getTopValue", "getPosition", "assertEquals", "getLeftValue", "getPosition", "assertEquals", "getTopUnits", "getPosition", "assertEquals", "getLeftUnits", "getPosition"]}, "focal_class": {"identifier": "LayoutInflater", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String URN_NAMESPACE_ID = \"import\";", "modifier": "static final", "type": "String", "declarator": "URN_NAMESPACE_ID = \"import\"", "var_name": "URN_NAMESPACE_ID"}, {"original_string": "static final String IMPORT_URN_PREFIX = \"urn:\" + URN_NAMESPACE_ID + \":\";", "modifier": "static final", "type": "String", "declarator": "IMPORT_URN_PREFIX = \"urn:\" + URN_NAMESPACE_ID + \":\"", "var_name": "IMPORT_URN_PREFIX"}, {"original_string": "static final String DEFAULT_NAMESPACE = IMPORT_URN_PREFIX + \"com.vaadin.ui\";", "modifier": "static final", "type": "String", "declarator": "DEFAULT_NAMESPACE = IMPORT_URN_PREFIX + \"com.vaadin.ui\"", "var_name": "DEFAULT_NAMESPACE"}, {"original_string": "private List<AttributeFilter> attributeFilters = new ArrayList<AttributeFilter>();", "modifier": "private", "type": "List<AttributeFilter>", "declarator": "attributeFilters = new ArrayList<AttributeFilter>()", "var_name": "attributeFilters"}, {"original_string": "private List<AttributeParser> extraAttributeParsers = new ArrayList<AttributeParser>();", "modifier": "private", "type": "List<AttributeParser>", "declarator": "extraAttributeParsers = new ArrayList<AttributeParser>()", "var_name": "extraAttributeParsers"}], "methods": [{"identifier": "getLogger", "parameters": "()", "modifiers": "protected", "return": "Logger", "signature": "Logger getLogger()", "full_signature": "protected Logger getLogger()", "class_method_signature": "LayoutInflater.getLogger()", "testcase": false, "constructor": false}, {"identifier": "inflate", "parameters": "(InputStream xml)", "modifiers": "public", "return": "Component", "signature": "Component inflate(InputStream xml)", "full_signature": "public Component inflate(InputStream xml)", "class_method_signature": "LayoutInflater.inflate(InputStream xml)", "testcase": false, "constructor": false}, {"identifier": "inflate", "parameters": "(InputStream xml,\n            Map<String, Component> componentOverrideMap)", "modifiers": "public", "return": "Component", "signature": "Component inflate(InputStream xml,\n            Map<String, Component> componentOverrideMap)", "full_signature": "public Component inflate(InputStream xml,\n            Map<String, Component> componentOverrideMap)", "class_method_signature": "LayoutInflater.inflate(InputStream xml,\n            Map<String, Component> componentOverrideMap)", "testcase": false, "constructor": false}, {"identifier": "inflate", "parameters": "(InputStream xml,\n            Map<String, Component> componentOverrideMap,\n            ComponentProvider... additionalComponentProviders)", "modifiers": "public", "return": "Component", "signature": "Component inflate(InputStream xml,\n            Map<String, Component> componentOverrideMap,\n            ComponentProvider... additionalComponentProviders)", "full_signature": "public Component inflate(InputStream xml,\n            Map<String, Component> componentOverrideMap,\n            ComponentProvider... additionalComponentProviders)", "class_method_signature": "LayoutInflater.inflate(InputStream xml,\n            Map<String, Component> componentOverrideMap,\n            ComponentProvider... additionalComponentProviders)", "testcase": false, "constructor": false}, {"identifier": "createDefaultComponentProviders", "parameters": "(\n            Map<String, Component> componentOverrideMap)", "modifiers": "private", "return": "List<ComponentProvider>", "signature": "List<ComponentProvider> createDefaultComponentProviders(\n            Map<String, Component> componentOverrideMap)", "full_signature": "private List<ComponentProvider> createDefaultComponentProviders(\n            Map<String, Component> componentOverrideMap)", "class_method_signature": "LayoutInflater.createDefaultComponentProviders(\n            Map<String, Component> componentOverrideMap)", "testcase": false, "constructor": false}, {"identifier": "inflate", "parameters": "(InputStream xml,\n            ComponentProvider... componentProviders)", "modifiers": "public", "return": "Component", "signature": "Component inflate(InputStream xml,\n            ComponentProvider... componentProviders)", "full_signature": "public Component inflate(InputStream xml,\n            ComponentProvider... componentProviders)", "class_method_signature": "LayoutInflater.inflate(InputStream xml,\n            ComponentProvider... componentProviders)", "testcase": false, "constructor": false}, {"identifier": "inflate", "parameters": "(InputStream xml,\n            List<ComponentProvider> componentProviders)", "modifiers": "public", "return": "Component", "signature": "Component inflate(InputStream xml,\n            List<ComponentProvider> componentProviders)", "full_signature": "public Component inflate(InputStream xml,\n            List<ComponentProvider> componentProviders)", "class_method_signature": "LayoutInflater.inflate(InputStream xml,\n            List<ComponentProvider> componentProviders)", "testcase": false, "constructor": false}, {"identifier": "addAttributeFilter", "parameters": "(AttributeFilter attributeFilter)", "modifiers": "public", "return": "void", "signature": "void addAttributeFilter(AttributeFilter attributeFilter)", "full_signature": "public void addAttributeFilter(AttributeFilter attributeFilter)", "class_method_signature": "LayoutInflater.addAttributeFilter(AttributeFilter attributeFilter)", "testcase": false, "constructor": false}, {"identifier": "removeAttributeFilter", "parameters": "(AttributeFilter attributeFilter)", "modifiers": "public", "return": "void", "signature": "void removeAttributeFilter(AttributeFilter attributeFilter)", "full_signature": "public void removeAttributeFilter(AttributeFilter attributeFilter)", "class_method_signature": "LayoutInflater.removeAttributeFilter(AttributeFilter attributeFilter)", "testcase": false, "constructor": false}, {"identifier": "addAttributeParser", "parameters": "(AttributeParser attributeParser)", "modifiers": "public", "return": "void", "signature": "void addAttributeParser(AttributeParser attributeParser)", "full_signature": "public void addAttributeParser(AttributeParser attributeParser)", "class_method_signature": "LayoutInflater.addAttributeParser(AttributeParser attributeParser)", "testcase": false, "constructor": false}], "file": "clara/src/main/java/org/vaadin/teemu/clara/inflater/LayoutInflater.java"}, "focal_method": {"identifier": "inflate", "parameters": "(InputStream xml)", "modifiers": "public", "return": "Component", "body": "public Component inflate(InputStream xml) {\n        Map<String, Component> empty = Collections.emptyMap();\n        return inflate(xml, empty);\n    }", "signature": "Component inflate(InputStream xml)", "full_signature": "public Component inflate(InputStream xml)", "class_method_signature": "LayoutInflater.inflate(InputStream xml)", "testcase": false, "constructor": false, "invocations": ["emptyMap", "inflate"]}, "repository": {"repo_id": 4384653, "url": "https://github.com/tehapo/Clara", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 38, "size": 7395, "license": "licensed"}}