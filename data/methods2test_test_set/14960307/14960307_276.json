{"test_class": {"identifier": "PeriodFormatterUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(PeriodFormatterUtilTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(PeriodFormatterUtilTest.class)", "var_name": "logger"}, {"original_string": "public static long UPTIME_LESS_THAN_9_DAYS = 59*900*59*23*10;", "modifier": "public static", "type": "long", "declarator": "UPTIME_LESS_THAN_9_DAYS = 59*900*59*23*10", "var_name": "UPTIME_LESS_THAN_9_DAYS"}, {"original_string": "public static long UPTIME_LESS_THAN_3_DAYS = 59*900*59*23*3;", "modifier": "public static", "type": "long", "declarator": "UPTIME_LESS_THAN_3_DAYS = 59*900*59*23*3", "var_name": "UPTIME_LESS_THAN_3_DAYS"}, {"original_string": "public static long UPTIME_LESS_THAN_2_DAYS = 59*1000*59*24*2;", "modifier": "public static", "type": "long", "declarator": "UPTIME_LESS_THAN_2_DAYS = 59*1000*59*24*2", "var_name": "UPTIME_LESS_THAN_2_DAYS"}, {"original_string": "public static long UPTIME_LESS_THAN_1_DAY = 59*900*59*23;", "modifier": "public static", "type": "long", "declarator": "UPTIME_LESS_THAN_1_DAY = 59*900*59*23", "var_name": "UPTIME_LESS_THAN_1_DAY"}, {"original_string": "public static long UPTIME_53_SECS = 59*900;", "modifier": "public static", "type": "long", "declarator": "UPTIME_53_SECS = 59*900", "var_name": "UPTIME_53_SECS"}], "file": "ch-commons-util/src/test/java/com/cloudhopper/commons/util/PeriodFormatterUtilTest.java"}, "test_case": {"identifier": "linuxUptimeStyle", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void linuxUptimeStyle() throws Exception {\n        // calls a helper method, which actually uses all the other methods in the utility class\n        Assert.assertEquals(\"8 days, 08:09:27\", PeriodFormatterUtil.toLinuxUptimeStyleString(UPTIME_LESS_THAN_9_DAYS));\n        Assert.assertEquals(\"2 days, 12:02:50\", PeriodFormatterUtil.toLinuxUptimeStyleString(UPTIME_LESS_THAN_3_DAYS));\n        Assert.assertEquals(\"1 day, 22:24:48\", PeriodFormatterUtil.toLinuxUptimeStyleString(UPTIME_LESS_THAN_2_DAYS));\n        Assert.assertEquals(\"0 days, 20:00:56\", PeriodFormatterUtil.toLinuxUptimeStyleString(UPTIME_LESS_THAN_1_DAY));\n        Assert.assertEquals(\"0 days, 00:00:53\", PeriodFormatterUtil.toLinuxUptimeStyleString(UPTIME_53_SECS));\n    }", "signature": "void linuxUptimeStyle()", "full_signature": "@Test public void linuxUptimeStyle()", "class_method_signature": "PeriodFormatterUtilTest.linuxUptimeStyle()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toLinuxUptimeStyleString", "assertEquals", "toLinuxUptimeStyleString", "assertEquals", "toLinuxUptimeStyleString", "assertEquals", "toLinuxUptimeStyleString", "assertEquals", "toLinuxUptimeStyleString"]}, "focal_class": {"identifier": "PeriodFormatterUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static PeriodFormatter linuxUptimeStyle;", "modifier": "private static", "type": "PeriodFormatter", "declarator": "linuxUptimeStyle", "var_name": "linuxUptimeStyle"}, {"original_string": "private static PeriodFormatter standardUptimeStyle;", "modifier": "private static", "type": "PeriodFormatter", "declarator": "standardUptimeStyle", "var_name": "standardUptimeStyle"}, {"original_string": "private static PeriodType dayHourMinSecPeriodType;", "modifier": "private static", "type": "PeriodType", "declarator": "dayHourMinSecPeriodType", "var_name": "dayHourMinSecPeriodType"}], "methods": [{"identifier": "getDayHourMinSecPeriodType", "parameters": "()", "modifiers": "public static", "return": "PeriodType", "signature": "PeriodType getDayHourMinSecPeriodType()", "full_signature": "public static PeriodType getDayHourMinSecPeriodType()", "class_method_signature": "PeriodFormatterUtil.getDayHourMinSecPeriodType()", "testcase": false, "constructor": false}, {"identifier": "createDayHourMinSecPeriod", "parameters": "(long durationInMillis)", "modifiers": "public static", "return": "Period", "signature": "Period createDayHourMinSecPeriod(long durationInMillis)", "full_signature": "public static Period createDayHourMinSecPeriod(long durationInMillis)", "class_method_signature": "PeriodFormatterUtil.createDayHourMinSecPeriod(long durationInMillis)", "testcase": false, "constructor": false}, {"identifier": "getLinuxUptimeStyle", "parameters": "()", "modifiers": "public static", "return": "PeriodFormatter", "signature": "PeriodFormatter getLinuxUptimeStyle()", "full_signature": "public static PeriodFormatter getLinuxUptimeStyle()", "class_method_signature": "PeriodFormatterUtil.getLinuxUptimeStyle()", "testcase": false, "constructor": false}, {"identifier": "getStandardUptimeStyle", "parameters": "()", "modifiers": "public static", "return": "PeriodFormatter", "signature": "PeriodFormatter getStandardUptimeStyle()", "full_signature": "public static PeriodFormatter getStandardUptimeStyle()", "class_method_signature": "PeriodFormatterUtil.getStandardUptimeStyle()", "testcase": false, "constructor": false}, {"identifier": "toLinuxUptimeStyleString", "parameters": "(long durationInMillis)", "modifiers": "public static", "return": "String", "signature": "String toLinuxUptimeStyleString(long durationInMillis)", "full_signature": "public static String toLinuxUptimeStyleString(long durationInMillis)", "class_method_signature": "PeriodFormatterUtil.toLinuxUptimeStyleString(long durationInMillis)", "testcase": false, "constructor": false}, {"identifier": "toStandardUptimeStyleString", "parameters": "(long durationInMillis)", "modifiers": "public static", "return": "String", "signature": "String toStandardUptimeStyleString(long durationInMillis)", "full_signature": "public static String toStandardUptimeStyleString(long durationInMillis)", "class_method_signature": "PeriodFormatterUtil.toStandardUptimeStyleString(long durationInMillis)", "testcase": false, "constructor": false}], "file": "ch-commons-util/src/main/java/com/cloudhopper/commons/util/PeriodFormatterUtil.java"}, "focal_method": {"identifier": "toLinuxUptimeStyleString", "parameters": "(long durationInMillis)", "modifiers": "public static", "return": "String", "body": "public static String toLinuxUptimeStyleString(long durationInMillis) {\n        return getLinuxUptimeStyle().print(createDayHourMinSecPeriod(durationInMillis));\n    }", "signature": "String toLinuxUptimeStyleString(long durationInMillis)", "full_signature": "public static String toLinuxUptimeStyleString(long durationInMillis)", "class_method_signature": "PeriodFormatterUtil.toLinuxUptimeStyleString(long durationInMillis)", "testcase": false, "constructor": false, "invocations": ["print", "getLinuxUptimeStyle", "createDayHourMinSecPeriod"]}, "repository": {"repo_id": 14960307, "url": "https://github.com/twitter/cloudhopper-commons", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 36, "size": 6452, "license": "licensed"}}