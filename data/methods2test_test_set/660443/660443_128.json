{"test_class": {"identifier": "SelectionVisibilityTest", "superclass": "", "interfaces": "", "fields": [], "file": "display/renderbasic/src/test/java/org/openscience/cdk/renderer/generators/standard/SelectionVisibilityTest.java"}, "test_case": {"identifier": "highlightIsSelected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void highlightIsSelected() {\n        IChemObject chemObject = mock(IChemObject.class);\n        when(chemObject.getProperty(StandardGenerator.HIGHLIGHT_COLOR)).thenReturn(Color.RED);\n        assertTrue(SelectionVisibility.isSelected(chemObject, new RendererModel()));\n    }", "signature": "void highlightIsSelected()", "full_signature": "@Test public void highlightIsSelected()", "class_method_signature": "SelectionVisibilityTest.highlightIsSelected()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getProperty", "assertTrue", "isSelected"]}, "focal_class": {"identifier": "SelectionVisibility", "superclass": "extends SymbolVisibility", "interfaces": "", "fields": [{"original_string": "private final SymbolVisibility delegate;", "modifier": "private final", "type": "SymbolVisibility", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private final boolean          showAll;", "modifier": "private final", "type": "boolean", "declarator": "showAll", "var_name": "showAll"}], "methods": [{"identifier": "SelectionVisibility", "parameters": "(SymbolVisibility delegate, boolean showAll)", "modifiers": "private", "return": "", "signature": " SelectionVisibility(SymbolVisibility delegate, boolean showAll)", "full_signature": "private  SelectionVisibility(SymbolVisibility delegate, boolean showAll)", "class_method_signature": "SelectionVisibility.SelectionVisibility(SymbolVisibility delegate, boolean showAll)", "testcase": false, "constructor": true}, {"identifier": "disconnected", "parameters": "(SymbolVisibility visibility)", "modifiers": "public static", "return": "SymbolVisibility", "signature": "SymbolVisibility disconnected(SymbolVisibility visibility)", "full_signature": "public static SymbolVisibility disconnected(SymbolVisibility visibility)", "class_method_signature": "SelectionVisibility.disconnected(SymbolVisibility visibility)", "testcase": false, "constructor": false}, {"identifier": "all", "parameters": "(SymbolVisibility visibility)", "modifiers": "public static", "return": "SymbolVisibility", "signature": "SymbolVisibility all(SymbolVisibility visibility)", "full_signature": "public static SymbolVisibility all(SymbolVisibility visibility)", "class_method_signature": "SelectionVisibility.all(SymbolVisibility visibility)", "testcase": false, "constructor": false}, {"identifier": "visible", "parameters": "(IAtom atom, List<IBond> neighbors, RendererModel model)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean visible(IAtom atom, List<IBond> neighbors, RendererModel model)", "full_signature": "@Override public boolean visible(IAtom atom, List<IBond> neighbors, RendererModel model)", "class_method_signature": "SelectionVisibility.visible(IAtom atom, List<IBond> neighbors, RendererModel model)", "testcase": false, "constructor": false}, {"identifier": "isSelected", "parameters": "(IChemObject object, RendererModel model)", "modifiers": "static", "return": "boolean", "signature": "boolean isSelected(IChemObject object, RendererModel model)", "full_signature": "static boolean isSelected(IChemObject object, RendererModel model)", "class_method_signature": "SelectionVisibility.isSelected(IChemObject object, RendererModel model)", "testcase": false, "constructor": false}, {"identifier": "hasSelectedBond", "parameters": "(List<IBond> bonds, RendererModel model)", "modifiers": "static", "return": "boolean", "signature": "boolean hasSelectedBond(List<IBond> bonds, RendererModel model)", "full_signature": "static boolean hasSelectedBond(List<IBond> bonds, RendererModel model)", "class_method_signature": "SelectionVisibility.hasSelectedBond(List<IBond> bonds, RendererModel model)", "testcase": false, "constructor": false}], "file": "display/renderbasic/src/main/java/org/openscience/cdk/renderer/generators/standard/SelectionVisibility.java"}, "focal_method": {"identifier": "isSelected", "parameters": "(IChemObject object, RendererModel model)", "modifiers": "static", "return": "boolean", "body": "static boolean isSelected(IChemObject object, RendererModel model) {\n        if (object.getProperty(StandardGenerator.HIGHLIGHT_COLOR) != null) return true;\n        if (model.getSelection() != null) return model.getSelection().contains(object);\n        return false;\n    }", "signature": "boolean isSelected(IChemObject object, RendererModel model)", "full_signature": "static boolean isSelected(IChemObject object, RendererModel model)", "class_method_signature": "SelectionVisibility.isSelected(IChemObject object, RendererModel model)", "testcase": false, "constructor": false, "invocations": ["getProperty", "getSelection", "contains", "getSelection"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}