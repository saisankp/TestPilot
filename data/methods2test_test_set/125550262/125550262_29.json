{"test_class": {"identifier": "UuidTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Uuid uuid = new Uuid(UUID.randomUUID());", "modifier": "private static final", "type": "Uuid", "declarator": "uuid = new Uuid(UUID.randomUUID())", "var_name": "uuid"}, {"original_string": "private static final String json = \"[\\\"uuid\\\",\\\"\" + uuid.getUuid() + \"\\\"]\";", "modifier": "private static final", "type": "String", "declarator": "json = \"[\\\"uuid\\\",\\\"\" + uuid.getUuid() + \"\\\"]\"", "var_name": "json"}], "file": "ovsdb-client/src/test/java/com/vmware/ovsdb/protocol/operation/notation/UuidTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEquals() {\n    new EqualsTester().addEqualityGroup(uuid, Uuid.of(uuid.getUuid())).testEquals();\n  }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "UuidTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["testEquals", "addEqualityGroup", "of", "getUuid"]}, "focal_class": {"identifier": "Uuid", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final String uuidString = OvsdbConstant.UUID;", "modifier": "public final", "type": "String", "declarator": "uuidString = OvsdbConstant.UUID", "var_name": "uuidString"}, {"original_string": "private final UUID uuid;", "modifier": "private final", "type": "UUID", "declarator": "uuid", "var_name": "uuid"}], "methods": [{"identifier": "Uuid", "parameters": "(UUID uuid)", "modifiers": "public", "return": "", "signature": " Uuid(UUID uuid)", "full_signature": "public  Uuid(UUID uuid)", "class_method_signature": "Uuid.Uuid(UUID uuid)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(UUID uuid)", "modifiers": "public static", "return": "Uuid", "signature": "Uuid of(UUID uuid)", "full_signature": "public static Uuid of(UUID uuid)", "class_method_signature": "Uuid.of(UUID uuid)", "testcase": false, "constructor": false}, {"identifier": "getUuid", "parameters": "()", "modifiers": "public", "return": "UUID", "signature": "UUID getUuid()", "full_signature": "public UUID getUuid()", "class_method_signature": "Uuid.getUuid()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Uuid.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Uuid.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Uuid.toString()", "testcase": false, "constructor": false}], "file": "ovsdb-client/src/main/java/com/vmware/ovsdb/protocol/operation/notation/Uuid.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean equals(Object other) {\n    if (this == other) {\n      return true;\n    }\n    if (!(other instanceof Uuid)) {\n      return false;\n    }\n    Uuid that = (Uuid) other;\n    return Objects.equals(uuid, that.getUuid());\n  }", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Uuid.equals(Object other)", "testcase": false, "constructor": false, "invocations": ["equals", "getUuid"]}, "repository": {"repo_id": 125550262, "url": "https://github.com/vmware/ovsdb-client-library", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 12, "size": 288, "license": "licensed"}}