{"test_class": {"identifier": "LookoutTokenResolveUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "gateway/core/src/test/java/com/alipay/sofa/lookout/gateway/core/token/LookoutTokenResolveUtilsTest.java"}, "test_case": {"identifier": "testGetLookoutTokenFromBasicAuth", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetLookoutTokenFromBasicAuth() {\n        HttpHeaders headers = new HttpHeaders();\n        headers.add(\"Authorization\",\n            \"Basic \" + Base64.getEncoder().encodeToString(\"hello\".getBytes()));\n        ServerRequest req = MockServerRequest.builder().headers(headers).build();\n\n        String x = LookoutTokenResolveUtils.getLookoutToken(req.headers());\n        Assert.assertEquals(\"hello\", x);\n    }", "signature": "void testGetLookoutTokenFromBasicAuth()", "full_signature": "@Test public void testGetLookoutTokenFromBasicAuth()", "class_method_signature": "LookoutTokenResolveUtilsTest.testGetLookoutTokenFromBasicAuth()", "testcase": true, "constructor": false, "invocations": ["add", "encodeToString", "getEncoder", "getBytes", "build", "headers", "builder", "getLookoutToken", "headers", "assertEquals"]}, "focal_class": {"identifier": "LookoutTokenResolveUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "LookoutTokenResolveUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " LookoutTokenResolveUtils()", "full_signature": "private  LookoutTokenResolveUtils()", "class_method_signature": "LookoutTokenResolveUtils.LookoutTokenResolveUtils()", "testcase": false, "constructor": true}, {"identifier": "getLookoutToken", "parameters": "(ServerRequest.Headers headers)", "modifiers": "public static", "return": "String", "signature": "String getLookoutToken(ServerRequest.Headers headers)", "full_signature": "public static String getLookoutToken(ServerRequest.Headers headers)", "class_method_signature": "LookoutTokenResolveUtils.getLookoutToken(ServerRequest.Headers headers)", "testcase": false, "constructor": false}], "file": "gateway/core/src/main/java/com/alipay/sofa/lookout/gateway/core/token/LookoutTokenResolveUtils.java"}, "focal_method": {"identifier": "getLookoutToken", "parameters": "(ServerRequest.Headers headers)", "modifiers": "public static", "return": "String", "body": "public static String getLookoutToken(ServerRequest.Headers headers) {\n        String token = WebfluxUtils.getHeaderValue(headers, Constants.TOKEN_HEADER_NAME);\n        if (token == null) {\n            String authorization = WebfluxUtils.getHeaderValue(headers, \"Authorization\");\n            // \u6309\u7167\u4e0b\u9762\u7684\u65b9\u5f0f\u53cd\u89e3\u51fatoken\u5373\u53ef\n            // Authorization: Basic: base64(token:)\n            if (StringUtils.startsWith(authorization, \"Basic \")) {\n                String base64 = authorization.substring(6);\n                String usernameAndPassword = new String(Base64.getUrlDecoder().decode(base64),\n                    StandardCharsets.UTF_8);\n                String username = StringUtils.substringBefore(usernameAndPassword, \":\");\n                // \u5982\u679c username \u662f lookout \u90a3\u4e48\u4ee5 password \u4f5c\u4e3atoken\n                // \u5426\u5219 username \u7528\u6237\u540d\u4f5c\u4e3atoken\n                if (\"lookout\".equals(username)) {\n                    String password = StringUtils.substringAfter(usernameAndPassword, \":\");\n                    token = password;\n                } else {\n                    token = username;\n                }\n            }\n        }\n        return token;\n    }", "signature": "String getLookoutToken(ServerRequest.Headers headers)", "full_signature": "public static String getLookoutToken(ServerRequest.Headers headers)", "class_method_signature": "LookoutTokenResolveUtils.getLookoutToken(ServerRequest.Headers headers)", "testcase": false, "constructor": false, "invocations": ["getHeaderValue", "getHeaderValue", "startsWith", "substring", "decode", "getUrlDecoder", "substringBefore", "equals", "substringAfter"]}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}