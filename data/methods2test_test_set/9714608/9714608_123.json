{"test_class": {"identifier": "InformedArrayListTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private InformedArrayList<Object> list;", "modifier": "private", "type": "InformedArrayList<Object>", "declarator": "list", "var_name": "list"}], "file": "core/util/src/test/java/org/arakhne/afc/util/InformedArrayListTest.java"}, "test_case": {"identifier": "getElementType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getElementType() {\n\t\tassertNull(this.list.getElementType());\n\t}", "signature": "void getElementType()", "full_signature": "@Test public void getElementType()", "class_method_signature": "InformedArrayListTest.getElementType()", "testcase": true, "constructor": false, "invocations": ["assertNull", "getElementType"]}, "focal_class": {"identifier": "InformedArrayList", "superclass": "extends ArrayList<E>", "interfaces": "implements InformedIterable<E>", "fields": [{"original_string": "private static final long serialVersionUID = -921267155141517977L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -921267155141517977L", "var_name": "serialVersionUID"}, {"original_string": "private Class<? extends E> clazz;", "modifier": "private", "type": "Class<? extends E>", "declarator": "clazz", "var_name": "clazz"}, {"original_string": "private boolean updateWhenRemove;", "modifier": "private", "type": "boolean", "declarator": "updateWhenRemove", "var_name": "updateWhenRemove"}], "methods": [{"identifier": "InformedArrayList", "parameters": "()", "modifiers": "public", "return": "", "signature": " InformedArrayList()", "full_signature": "public  InformedArrayList()", "class_method_signature": "InformedArrayList.InformedArrayList()", "testcase": false, "constructor": true}, {"identifier": "InformedArrayList", "parameters": "(int initialCapacity)", "modifiers": "public", "return": "", "signature": " InformedArrayList(int initialCapacity)", "full_signature": "public  InformedArrayList(int initialCapacity)", "class_method_signature": "InformedArrayList.InformedArrayList(int initialCapacity)", "testcase": false, "constructor": true}, {"identifier": "InformedArrayList", "parameters": "(Collection<? extends E> collection)", "modifiers": "public", "return": "", "signature": " InformedArrayList(Collection<? extends E> collection)", "full_signature": "public  InformedArrayList(Collection<? extends E> collection)", "class_method_signature": "InformedArrayList.InformedArrayList(Collection<? extends E> collection)", "testcase": false, "constructor": true}, {"identifier": "InformedArrayList", "parameters": "(Class<? extends E> clazz)", "modifiers": "public", "return": "", "signature": " InformedArrayList(Class<? extends E> clazz)", "full_signature": "public  InformedArrayList(Class<? extends E> clazz)", "class_method_signature": "InformedArrayList.InformedArrayList(Class<? extends E> clazz)", "testcase": false, "constructor": true}, {"identifier": "InformedArrayList", "parameters": "(int initialCapacity, Class<? extends E> clazz)", "modifiers": "public", "return": "", "signature": " InformedArrayList(int initialCapacity, Class<? extends E> clazz)", "full_signature": "public  InformedArrayList(int initialCapacity, Class<? extends E> clazz)", "class_method_signature": "InformedArrayList.InformedArrayList(int initialCapacity, Class<? extends E> clazz)", "testcase": false, "constructor": true}, {"identifier": "InformedArrayList", "parameters": "(Collection<? extends E> collection, Class<? extends E> clazz)", "modifiers": "public", "return": "", "signature": " InformedArrayList(Collection<? extends E> collection, Class<? extends E> clazz)", "full_signature": "public  InformedArrayList(Collection<? extends E> collection, Class<? extends E> clazz)", "class_method_signature": "InformedArrayList.InformedArrayList(Collection<? extends E> collection, Class<? extends E> clazz)", "testcase": false, "constructor": true}, {"identifier": "extractClassFrom", "parameters": "(Collection<? extends E> collection)", "modifiers": "@SuppressWarnings(\"unchecked\") protected static", "return": "Class<? extends E>", "signature": "Class<? extends E> extractClassFrom(Collection<? extends E> collection)", "full_signature": "@SuppressWarnings(\"unchecked\") protected static Class<? extends E> extractClassFrom(Collection<? extends E> collection)", "class_method_signature": "InformedArrayList.extractClassFrom(Collection<? extends E> collection)", "testcase": false, "constructor": false}, {"identifier": "isTypeRecomputedAfterRemoval", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTypeRecomputedAfterRemoval()", "full_signature": "public boolean isTypeRecomputedAfterRemoval()", "class_method_signature": "InformedArrayList.isTypeRecomputedAfterRemoval()", "testcase": false, "constructor": false}, {"identifier": "setTypeRecomputedAfterRemoval", "parameters": "(boolean update)", "modifiers": "public", "return": "void", "signature": "void setTypeRecomputedAfterRemoval(boolean update)", "full_signature": "public void setTypeRecomputedAfterRemoval(boolean update)", "class_method_signature": "InformedArrayList.setTypeRecomputedAfterRemoval(boolean update)", "testcase": false, "constructor": false}, {"identifier": "updateComponentType", "parameters": "(E newElement)", "modifiers": "@SuppressWarnings(\"unchecked\") protected final", "return": "void", "signature": "void updateComponentType(E newElement)", "full_signature": "@SuppressWarnings(\"unchecked\") protected final void updateComponentType(E newElement)", "class_method_signature": "InformedArrayList.updateComponentType(E newElement)", "testcase": false, "constructor": false}, {"identifier": "updateComponentType", "parameters": "(Collection<? extends E> newElements)", "modifiers": "@SuppressWarnings(\"unchecked\") protected final", "return": "void", "signature": "void updateComponentType(Collection<? extends E> newElements)", "full_signature": "@SuppressWarnings(\"unchecked\") protected final void updateComponentType(Collection<? extends E> newElements)", "class_method_signature": "InformedArrayList.updateComponentType(Collection<? extends E> newElements)", "testcase": false, "constructor": false}, {"identifier": "getElementType", "parameters": "()", "modifiers": "@Override public", "return": "Class<? extends E>", "signature": "Class<? extends E> getElementType()", "full_signature": "@Override public Class<? extends E> getElementType()", "class_method_signature": "InformedArrayList.getElementType()", "testcase": false, "constructor": false}, {"identifier": "setElementType", "parameters": "(Class<? extends E> type)", "modifiers": "public", "return": "void", "signature": "void setElementType(Class<? extends E> type)", "full_signature": "public void setElementType(Class<? extends E> type)", "class_method_signature": "InformedArrayList.setElementType(Class<? extends E> type)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(E elt)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean add(E elt)", "full_signature": "@Override public boolean add(E elt)", "class_method_signature": "InformedArrayList.add(E elt)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(int index, E element)", "modifiers": "@Override public", "return": "void", "signature": "void add(int index, E element)", "full_signature": "@Override public void add(int index, E element)", "class_method_signature": "InformedArrayList.add(int index, E element)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(Collection<? extends E> collection)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addAll(Collection<? extends E> collection)", "full_signature": "@Override public boolean addAll(Collection<? extends E> collection)", "class_method_signature": "InformedArrayList.addAll(Collection<? extends E> collection)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(int index, Collection<? extends E> collection)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addAll(int index, Collection<? extends E> collection)", "full_signature": "@Override public boolean addAll(int index, Collection<? extends E> collection)", "class_method_signature": "InformedArrayList.addAll(int index, Collection<? extends E> collection)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "InformedArrayList.clear()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(int index)", "modifiers": "@Override public", "return": "E", "signature": "E remove(int index)", "full_signature": "@Override public E remove(int index)", "class_method_signature": "InformedArrayList.remove(int index)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean remove(Object obj)", "full_signature": "@Override public boolean remove(Object obj)", "class_method_signature": "InformedArrayList.remove(Object obj)", "testcase": false, "constructor": false}, {"identifier": "removeRange", "parameters": "(int fromIndex, int toIndex)", "modifiers": "@Override protected", "return": "void", "signature": "void removeRange(int fromIndex, int toIndex)", "full_signature": "@Override protected void removeRange(int fromIndex, int toIndex)", "class_method_signature": "InformedArrayList.removeRange(int fromIndex, int toIndex)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int index, E element)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "E", "signature": "E set(int index, E element)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public E set(int index, E element)", "class_method_signature": "InformedArrayList.set(int index, E element)", "testcase": false, "constructor": false}], "file": "core/util/src/main/java/org/arakhne/afc/util/InformedArrayList.java"}, "focal_method": {"identifier": "getElementType", "parameters": "()", "modifiers": "@Override public", "return": "Class<? extends E>", "body": "@Override\n\tpublic Class<? extends E> getElementType() {\n\t\treturn this.clazz;\n\t}", "signature": "Class<? extends E> getElementType()", "full_signature": "@Override public Class<? extends E> getElementType()", "class_method_signature": "InformedArrayList.getElementType()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}