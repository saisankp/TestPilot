{"test_class": {"identifier": "BonferroniTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static List<PValue> pvallist;", "modifier": "private static", "type": "List<PValue>", "declarator": "pvallist", "var_name": "pvallist"}, {"original_string": "private static final double EPSILON=0.00001;", "modifier": "private static final", "type": "double", "declarator": "EPSILON=0.00001", "var_name": "EPSILON"}], "file": "phenol-analysis/src/test/java/org/monarchinitiative/phenol/stats/mtc/BonferroniTest.java"}, "test_case": {"identifier": "testN", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void testN() {\n    //pvalmap.put(N,new PValue(0.7590));\n    MultipleTestingCorrection bonf = new Bonferroni();\n    bonf.adjustPvals(pvallist);\n    // index of N is 14\n    double adjustedPValue = pvallist.get(14).getAdjustedPValue(); // raw value was 0.7590\n    // Bonferoni is 15x0.7590 thus should be 1.0\n    assertEquals(1.000,adjustedPValue,EPSILON);\n  }", "signature": "void testN()", "full_signature": "@Test void testN()", "class_method_signature": "BonferroniTest.testN()", "testcase": true, "constructor": false, "invocations": ["adjustPvals", "getAdjustedPValue", "get", "assertEquals"]}, "focal_class": {"identifier": "Bonferroni", "superclass": "", "interfaces": "implements MultipleTestingCorrection", "fields": [{"original_string": "private static final String NAME = \"Bonferroni\";", "modifier": "private static final", "type": "String", "declarator": "NAME = \"Bonferroni\"", "var_name": "NAME"}], "methods": [{"identifier": "adjustPvals", "parameters": "(List<? extends PValue> pvals)", "modifiers": "@Override public", "return": "void", "signature": "void adjustPvals(List<? extends PValue> pvals)", "full_signature": "@Override public void adjustPvals(List<? extends PValue> pvals)", "class_method_signature": "Bonferroni.adjustPvals(List<? extends PValue> pvals)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "Bonferroni.getName()", "testcase": false, "constructor": false}], "file": "phenol-analysis/src/main/java/org/monarchinitiative/phenol/stats/mtc/Bonferroni.java"}, "focal_method": {"identifier": "adjustPvals", "parameters": "(List<? extends PValue> pvals)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void adjustPvals(List<? extends PValue> pvals) {\n    int N=pvals.size();\n    for (PValue item : pvals) {\n      double p_raw= item.getRawPValue();\n      item.setAdjustedPValue(Math.min(1.0,N*p_raw));\n    }\n  }", "signature": "void adjustPvals(List<? extends PValue> pvals)", "full_signature": "@Override public void adjustPvals(List<? extends PValue> pvals)", "class_method_signature": "Bonferroni.adjustPvals(List<? extends PValue> pvals)", "testcase": false, "constructor": false, "invocations": ["size", "getRawPValue", "setAdjustedPValue", "min"]}, "repository": {"repo_id": 119170338, "url": "https://github.com/monarch-initiative/phenol", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 5832, "license": "licensed"}}