{"test_class": {"identifier": "PeriodOffsetUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "dhis-2/dhis-services/dhis-service-analytics/src/test/java/org/hisp/dhis/analytics/util/PeriodOffsetUtilsTest.java"}, "test_case": {"identifier": "verifyRemoveOffsetPeriodsIfNotNeeded", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void verifyRemoveOffsetPeriodsIfNotNeeded()\n    {\n        // Given\n        Period month1 = createMonthlyPeriod( 2020, 1 ); // this period will be preserved\n        Period month2 = createMonthlyPeriod( 2020, 2 ); // this period will be preserved\n        Period month3 = createMonthlyPeriod( 2020, 3 );\n        month3.setShifted( true );\n        Period month4 = createMonthlyPeriod( 2020, 4 );\n        month4.setShifted( true );\n\n        DataQueryParams queryParams = DataQueryParams.newBuilder()\n            .withPeriods( Lists.newArrayList( month1, month2, month3, month4 ) )\n            .withDataElements( Lists.newArrayList( createDataElement( 0 ), createDataElement( 0 ) ) )\n            .build();\n\n        // When\n        final DataQueryParams dataQueryParams = PeriodOffsetUtils\n            .removeOffsetPeriodsIfNotNeeded( queryParams );\n\n        // Then\n        assertThat( dataQueryParams.getPeriods(), hasSize( 2 ) );\n        assertIsoPeriods( dataQueryParams.getPeriods(), \"202001\", \"202002\" );\n    }", "signature": "void verifyRemoveOffsetPeriodsIfNotNeeded()", "full_signature": "@Test public void verifyRemoveOffsetPeriodsIfNotNeeded()", "class_method_signature": "PeriodOffsetUtilsTest.verifyRemoveOffsetPeriodsIfNotNeeded()", "testcase": true, "constructor": false, "invocations": ["createMonthlyPeriod", "createMonthlyPeriod", "createMonthlyPeriod", "setShifted", "createMonthlyPeriod", "setShifted", "build", "withDataElements", "withPeriods", "newBuilder", "newArrayList", "newArrayList", "createDataElement", "createDataElement", "removeOffsetPeriodsIfNotNeeded", "assertThat", "getPeriods", "hasSize", "assertIsoPeriods", "getPeriods"]}, "focal_class": {"identifier": "PeriodOffsetUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getPeriodTypePeriodMap", "parameters": "( DataQueryParams params )", "modifiers": "public static", "return": "ListMap<String, DimensionalItemObject>", "signature": "ListMap<String, DimensionalItemObject> getPeriodTypePeriodMap( DataQueryParams params )", "full_signature": "public static ListMap<String, DimensionalItemObject> getPeriodTypePeriodMap( DataQueryParams params )", "class_method_signature": "PeriodOffsetUtils.getPeriodTypePeriodMap( DataQueryParams params )", "testcase": false, "constructor": false}, {"identifier": "shiftPeriod", "parameters": "( Period period, int periodOffset )", "modifiers": "public static", "return": "Period", "signature": "Period shiftPeriod( Period period, int periodOffset )", "full_signature": "public static Period shiftPeriod( Period period, int periodOffset )", "class_method_signature": "PeriodOffsetUtils.shiftPeriod( Period period, int periodOffset )", "testcase": false, "constructor": false}, {"identifier": "removeOffsetPeriodsIfNotNeeded", "parameters": "( DataQueryParams params )", "modifiers": "public static", "return": "DataQueryParams", "signature": "DataQueryParams removeOffsetPeriodsIfNotNeeded( DataQueryParams params )", "full_signature": "public static DataQueryParams removeOffsetPeriodsIfNotNeeded( DataQueryParams params )", "class_method_signature": "PeriodOffsetUtils.removeOffsetPeriodsIfNotNeeded( DataQueryParams params )", "testcase": false, "constructor": false}, {"identifier": "getPeriodOffsetRow", "parameters": "( Grid grid, DimensionalItemObject dimItem, String isoPeriod,\n        int offset )", "modifiers": "public static", "return": "List<Object>", "signature": "List<Object> getPeriodOffsetRow( Grid grid, DimensionalItemObject dimItem, String isoPeriod,\n        int offset )", "full_signature": "public static List<Object> getPeriodOffsetRow( Grid grid, DimensionalItemObject dimItem, String isoPeriod,\n        int offset )", "class_method_signature": "PeriodOffsetUtils.getPeriodOffsetRow( Grid grid, DimensionalItemObject dimItem, String isoPeriod,\n        int offset )", "testcase": false, "constructor": false}, {"identifier": "addPeriodOffset", "parameters": "( ListMap<String, DimensionalItemObject> map,\n        int periodOffset )", "modifiers": "private static", "return": "ListMap<String, DimensionalItemObject>", "signature": "ListMap<String, DimensionalItemObject> addPeriodOffset( ListMap<String, DimensionalItemObject> map,\n        int periodOffset )", "full_signature": "private static ListMap<String, DimensionalItemObject> addPeriodOffset( ListMap<String, DimensionalItemObject> map,\n        int periodOffset )", "class_method_signature": "PeriodOffsetUtils.addPeriodOffset( ListMap<String, DimensionalItemObject> map,\n        int periodOffset )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/util/PeriodOffsetUtils.java"}, "focal_method": {"identifier": "removeOffsetPeriodsIfNotNeeded", "parameters": "( DataQueryParams params )", "modifiers": "public static", "return": "DataQueryParams", "body": "public static DataQueryParams removeOffsetPeriodsIfNotNeeded( DataQueryParams params )\n    {\n        final List<DimensionalItemObject> dimensionalItemObjects = params.getDataElements();\n\n        final boolean hasOffset = dimensionalItemObjects.stream().filter( dio -> dio.getDimensionItemType() != null )\n            .filter( dio -> dio.getDimensionItemType().equals( DimensionItemType.DATA_ELEMENT ) )\n            .anyMatch( dio -> dio.getPeriodOffset() != 0 );\n\n        if ( !hasOffset )\n        {\n            final List<DimensionalItemObject> nonShiftedPeriods = params.getPeriods().stream()\n                .filter( dio -> ( !( (Period) dio).isShifted() ) )\n                .collect( Collectors.toList() );\n\n            return DataQueryParams.newBuilder( params )\n                .withPeriods( params.getDimension( PERIOD_DIM_ID ).getDimensionName(), nonShiftedPeriods )\n                .build();\n        }\n        return params;\n    }", "signature": "DataQueryParams removeOffsetPeriodsIfNotNeeded( DataQueryParams params )", "full_signature": "public static DataQueryParams removeOffsetPeriodsIfNotNeeded( DataQueryParams params )", "class_method_signature": "PeriodOffsetUtils.removeOffsetPeriodsIfNotNeeded( DataQueryParams params )", "testcase": false, "constructor": false, "invocations": ["getDataElements", "anyMatch", "filter", "filter", "stream", "getDimensionItemType", "equals", "getDimensionItemType", "getPeriodOffset", "collect", "filter", "stream", "getPeriods", "isShifted", "toList", "build", "withPeriods", "newBuilder", "getDimensionName", "getDimension"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}