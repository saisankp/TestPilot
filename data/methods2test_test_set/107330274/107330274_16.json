{"test_class": {"identifier": "LoggingProxyBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "titus-common/src/test/java/com/netflix/titus/common/util/proxy/LoggingProxyBuilderTest.java"}, "test_case": {"identifier": "testCategoryDefaultsToApiIfInstanceIsProxy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCategoryDefaultsToApiIfInstanceIsProxy() throws Exception {\n        assertThat(LoggingProxyBuilder.getCategory(MyApi.class, new MyApi.MyApiImpl())).isEqualTo(MyApi.MyApiImpl.class);\n    }", "signature": "void testCategoryDefaultsToApiIfInstanceIsProxy()", "full_signature": "@Test public void testCategoryDefaultsToApiIfInstanceIsProxy()", "class_method_signature": "LoggingProxyBuilderTest.testCategoryDefaultsToApiIfInstanceIsProxy()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "getCategory"]}, "focal_class": {"identifier": "LoggingProxyBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Class<API> apiInterface;", "modifier": "private final", "type": "Class<API>", "declarator": "apiInterface", "var_name": "apiInterface"}, {"original_string": "private final INSTANCE instance;", "modifier": "private final", "type": "INSTANCE", "declarator": "instance", "var_name": "instance"}, {"original_string": "private Priority requestLevel = Priority.DEBUG;", "modifier": "private", "type": "Priority", "declarator": "requestLevel = Priority.DEBUG", "var_name": "requestLevel"}, {"original_string": "private Priority replyLevel = Priority.DEBUG;", "modifier": "private", "type": "Priority", "declarator": "replyLevel = Priority.DEBUG", "var_name": "replyLevel"}, {"original_string": "private Priority observableReplyLevel = Priority.DEBUG;", "modifier": "private", "type": "Priority", "declarator": "observableReplyLevel = Priority.DEBUG", "var_name": "observableReplyLevel"}, {"original_string": "private Priority exceptionLevel = Priority.ERROR;", "modifier": "private", "type": "Priority", "declarator": "exceptionLevel = Priority.ERROR", "var_name": "exceptionLevel"}, {"original_string": "private Priority observableErrorLevel = Priority.ERROR;", "modifier": "private", "type": "Priority", "declarator": "observableErrorLevel = Priority.ERROR", "var_name": "observableErrorLevel"}, {"original_string": "private Logger logger;", "modifier": "private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "private TitusRuntime titusRuntime;", "modifier": "private", "type": "TitusRuntime", "declarator": "titusRuntime", "var_name": "titusRuntime"}], "methods": [{"identifier": "LoggingProxyBuilder", "parameters": "(Class<API> apiInterface, INSTANCE instance)", "modifiers": "public", "return": "", "signature": " LoggingProxyBuilder(Class<API> apiInterface, INSTANCE instance)", "full_signature": "public  LoggingProxyBuilder(Class<API> apiInterface, INSTANCE instance)", "class_method_signature": "LoggingProxyBuilder.LoggingProxyBuilder(Class<API> apiInterface, INSTANCE instance)", "testcase": false, "constructor": true}, {"identifier": "request", "parameters": "(Priority level)", "modifiers": "public", "return": "LoggingProxyBuilder<API, INSTANCE>", "signature": "LoggingProxyBuilder<API, INSTANCE> request(Priority level)", "full_signature": "public LoggingProxyBuilder<API, INSTANCE> request(Priority level)", "class_method_signature": "LoggingProxyBuilder.request(Priority level)", "testcase": false, "constructor": false}, {"identifier": "reply", "parameters": "(Priority level)", "modifiers": "public", "return": "LoggingProxyBuilder<API, INSTANCE>", "signature": "LoggingProxyBuilder<API, INSTANCE> reply(Priority level)", "full_signature": "public LoggingProxyBuilder<API, INSTANCE> reply(Priority level)", "class_method_signature": "LoggingProxyBuilder.reply(Priority level)", "testcase": false, "constructor": false}, {"identifier": "observableReply", "parameters": "(Priority level)", "modifiers": "public", "return": "LoggingProxyBuilder<API, INSTANCE>", "signature": "LoggingProxyBuilder<API, INSTANCE> observableReply(Priority level)", "full_signature": "public LoggingProxyBuilder<API, INSTANCE> observableReply(Priority level)", "class_method_signature": "LoggingProxyBuilder.observableReply(Priority level)", "testcase": false, "constructor": false}, {"identifier": "exception", "parameters": "(Priority level)", "modifiers": "public", "return": "LoggingProxyBuilder<API, INSTANCE>", "signature": "LoggingProxyBuilder<API, INSTANCE> exception(Priority level)", "full_signature": "public LoggingProxyBuilder<API, INSTANCE> exception(Priority level)", "class_method_signature": "LoggingProxyBuilder.exception(Priority level)", "testcase": false, "constructor": false}, {"identifier": "observableError", "parameters": "(Priority level)", "modifiers": "public", "return": "LoggingProxyBuilder<API, INSTANCE>", "signature": "LoggingProxyBuilder<API, INSTANCE> observableError(Priority level)", "full_signature": "public LoggingProxyBuilder<API, INSTANCE> observableError(Priority level)", "class_method_signature": "LoggingProxyBuilder.observableError(Priority level)", "testcase": false, "constructor": false}, {"identifier": "logger", "parameters": "(Logger logger)", "modifiers": "public", "return": "LoggingProxyBuilder<API, INSTANCE>", "signature": "LoggingProxyBuilder<API, INSTANCE> logger(Logger logger)", "full_signature": "public LoggingProxyBuilder<API, INSTANCE> logger(Logger logger)", "class_method_signature": "LoggingProxyBuilder.logger(Logger logger)", "testcase": false, "constructor": false}, {"identifier": "titusRuntime", "parameters": "(TitusRuntime titusRuntime)", "modifiers": "public", "return": "LoggingProxyBuilder<API, INSTANCE>", "signature": "LoggingProxyBuilder<API, INSTANCE> titusRuntime(TitusRuntime titusRuntime)", "full_signature": "public LoggingProxyBuilder<API, INSTANCE> titusRuntime(TitusRuntime titusRuntime)", "class_method_signature": "LoggingProxyBuilder.titusRuntime(TitusRuntime titusRuntime)", "testcase": false, "constructor": false}, {"identifier": "buildHandler", "parameters": "()", "modifiers": "public", "return": "ProxyInvocationHandler", "signature": "ProxyInvocationHandler buildHandler()", "full_signature": "public ProxyInvocationHandler buildHandler()", "class_method_signature": "LoggingProxyBuilder.buildHandler()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "API", "signature": "API build()", "full_signature": "public API build()", "class_method_signature": "LoggingProxyBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "getCategory", "parameters": "(Class<API> apiInterface, INSTANCE instance)", "modifiers": "static", "return": "Class<?>", "signature": "Class<?> getCategory(Class<API> apiInterface, INSTANCE instance)", "full_signature": "static Class<?> getCategory(Class<API> apiInterface, INSTANCE instance)", "class_method_signature": "LoggingProxyBuilder.getCategory(Class<API> apiInterface, INSTANCE instance)", "testcase": false, "constructor": false}], "file": "titus-common/src/main/java/com/netflix/titus/common/util/proxy/LoggingProxyBuilder.java"}, "focal_method": {"identifier": "getCategory", "parameters": "(Class<API> apiInterface, INSTANCE instance)", "modifiers": "static", "return": "Class<?>", "body": "static <API, INSTANCE extends API> Class<?> getCategory(Class<API> apiInterface, INSTANCE instance) {\n        if (instance == null || instance instanceof java.lang.reflect.Proxy) {\n            return apiInterface;\n        }\n        return instance.getClass();\n    }", "signature": "Class<?> getCategory(Class<API> apiInterface, INSTANCE instance)", "full_signature": "static Class<?> getCategory(Class<API> apiInterface, INSTANCE instance)", "class_method_signature": "LoggingProxyBuilder.getCategory(Class<API> apiInterface, INSTANCE instance)", "testcase": false, "constructor": false, "invocations": ["getClass"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}