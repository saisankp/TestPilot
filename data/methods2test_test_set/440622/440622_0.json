{"test_class": {"identifier": "TestEsperTemplate", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EsperTemplate template;", "modifier": "private", "type": "EsperTemplate", "declarator": "template", "var_name": "template"}], "file": "esper-template/src/test/java/org/opencredo/esper/TestEsperTemplate.java"}, "test_case": {"identifier": "testExceptionRaisedWhenTemplateNotInitialized", "parameters": "()", "modifiers": "@Test(expected = InvalidEsperConfigurationException.class) public", "return": "void", "body": "@Test(expected = InvalidEsperConfigurationException.class)\n    public void testExceptionRaisedWhenTemplateNotInitialized() {\n        template.sendEvent(new SampleEvent());\n    }", "signature": "void testExceptionRaisedWhenTemplateNotInitialized()", "full_signature": "@Test(expected = InvalidEsperConfigurationException.class) public void testExceptionRaisedWhenTemplateNotInitialized()", "class_method_signature": "TestEsperTemplate.testExceptionRaisedWhenTemplateNotInitialized()", "testcase": true, "constructor": false, "invocations": ["sendEvent"]}, "focal_class": {"identifier": "EsperTemplate", "superclass": "", "interfaces": "implements EsperTemplateOperations", "fields": [{"original_string": "private final static Logger LOG = LoggerFactory.getLogger(EsperTemplate.class);", "modifier": "private final static", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(EsperTemplate.class)", "var_name": "LOG"}, {"original_string": "private EPServiceProvider epServiceProvider;", "modifier": "private", "type": "EPServiceProvider", "declarator": "epServiceProvider", "var_name": "epServiceProvider"}, {"original_string": "private EPRuntime epRuntime;", "modifier": "private", "type": "EPRuntime", "declarator": "epRuntime", "var_name": "epRuntime"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private Set<EsperStatement> statements = new LinkedHashSet<EsperStatement>();", "modifier": "private", "type": "Set<EsperStatement>", "declarator": "statements = new LinkedHashSet<EsperStatement>()", "var_name": "statements"}, {"original_string": "private Resource configuration;", "modifier": "private", "type": "Resource", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private UnmatchedListener unmatchedListener;", "modifier": "private", "type": "UnmatchedListener", "declarator": "unmatchedListener", "var_name": "unmatchedListener"}, {"original_string": "private volatile boolean initialised = false;", "modifier": "private volatile", "type": "boolean", "declarator": "initialised = false", "var_name": "initialised"}], "methods": [{"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void setName(String name)", "full_signature": "public void setName(String name)", "class_method_signature": "EsperTemplate.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "EsperTemplate.getName()", "testcase": false, "constructor": false}, {"identifier": "setStatements", "parameters": "(Set<EsperStatement> statements)", "modifiers": "public", "return": "void", "signature": "void setStatements(Set<EsperStatement> statements)", "full_signature": "public void setStatements(Set<EsperStatement> statements)", "class_method_signature": "EsperTemplate.setStatements(Set<EsperStatement> statements)", "testcase": false, "constructor": false}, {"identifier": "setConfiguration", "parameters": "(Resource configuration)", "modifiers": "public", "return": "void", "signature": "void setConfiguration(Resource configuration)", "full_signature": "public void setConfiguration(Resource configuration)", "class_method_signature": "EsperTemplate.setConfiguration(Resource configuration)", "testcase": false, "constructor": false}, {"identifier": "setUnmatchedListener", "parameters": "(UnmatchedListener unmatchedListener)", "modifiers": "public", "return": "void", "signature": "void setUnmatchedListener(UnmatchedListener unmatchedListener)", "full_signature": "public void setUnmatchedListener(UnmatchedListener unmatchedListener)", "class_method_signature": "EsperTemplate.setUnmatchedListener(UnmatchedListener unmatchedListener)", "testcase": false, "constructor": false}, {"identifier": "getEsperNativeRuntime", "parameters": "()", "modifiers": "public", "return": "EPRuntime", "signature": "EPRuntime getEsperNativeRuntime()", "full_signature": "public EPRuntime getEsperNativeRuntime()", "class_method_signature": "EsperTemplate.getEsperNativeRuntime()", "testcase": false, "constructor": false}, {"identifier": "getStatements", "parameters": "()", "modifiers": "public", "return": "Set<EsperStatement>", "signature": "Set<EsperStatement> getStatements()", "full_signature": "public Set<EsperStatement> getStatements()", "class_method_signature": "EsperTemplate.getStatements()", "testcase": false, "constructor": false}, {"identifier": "addStatement", "parameters": "(EsperStatement statement)", "modifiers": "public synchronized", "return": "void", "signature": "void addStatement(EsperStatement statement)", "full_signature": "public synchronized void addStatement(EsperStatement statement)", "class_method_signature": "EsperTemplate.addStatement(EsperStatement statement)", "testcase": false, "constructor": false}, {"identifier": "destroyStatement", "parameters": "(String statementId)", "modifiers": "public synchronized", "return": "void", "signature": "void destroyStatement(String statementId)", "full_signature": "public synchronized void destroyStatement(String statementId)", "class_method_signature": "EsperTemplate.destroyStatement(String statementId)", "testcase": false, "constructor": false}, {"identifier": "startStatement", "parameters": "(String statementId)", "modifiers": "public synchronized", "return": "void", "signature": "void startStatement(String statementId)", "full_signature": "public synchronized void startStatement(String statementId)", "class_method_signature": "EsperTemplate.startStatement(String statementId)", "testcase": false, "constructor": false}, {"identifier": "stopStatement", "parameters": "(String statementId)", "modifiers": "public synchronized", "return": "void", "signature": "void stopStatement(String statementId)", "full_signature": "public synchronized void stopStatement(String statementId)", "class_method_signature": "EsperTemplate.stopStatement(String statementId)", "testcase": false, "constructor": false}, {"identifier": "findStatementById", "parameters": "(String id)", "modifiers": "private", "return": "EsperStatement", "signature": "EsperStatement findStatementById(String id)", "full_signature": "private EsperStatement findStatementById(String id)", "class_method_signature": "EsperTemplate.findStatementById(String id)", "testcase": false, "constructor": false}, {"identifier": "sendEvent", "parameters": "(Object event)", "modifiers": "public", "return": "void", "signature": "void sendEvent(Object event)", "full_signature": "public void sendEvent(Object event)", "class_method_signature": "EsperTemplate.sendEvent(Object event)", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void initialize()", "full_signature": "public synchronized void initialize()", "class_method_signature": "EsperTemplate.initialize()", "testcase": false, "constructor": false}, {"identifier": "cleanup", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void cleanup()", "full_signature": "public void cleanup()", "class_method_signature": "EsperTemplate.cleanup()", "testcase": false, "constructor": false}, {"identifier": "setupEPStatements", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setupEPStatements()", "full_signature": "private void setupEPStatements()", "class_method_signature": "EsperTemplate.setupEPStatements()", "testcase": false, "constructor": false}, {"identifier": "configureEPServiceProvider", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void configureEPServiceProvider()", "full_signature": "private void configureEPServiceProvider()", "class_method_signature": "EsperTemplate.configureEPServiceProvider()", "testcase": false, "constructor": false}], "file": "esper-template/src/main/java/org/opencredo/esper/EsperTemplate.java"}, "focal_method": {"identifier": "sendEvent", "parameters": "(Object event)", "modifiers": "public", "return": "void", "body": "public void sendEvent(Object event) throws InvalidEsperConfigurationException {\n        LOG.debug(\"Sending event to Esper\");\n        if (epRuntime != null) {\n            epRuntime.sendEvent(event);\n        } else {\n            LOG.error(\"Attempted to send message with null Esper Runtime.\");\n            throw new InvalidEsperConfigurationException(\n                    \"Esper Runtime is null. Have you initialized the template before you attempt to send an event?\");\n        }\n        LOG.debug(\"Sent event to Esper\");\n    }", "signature": "void sendEvent(Object event)", "full_signature": "public void sendEvent(Object event)", "class_method_signature": "EsperTemplate.sendEvent(Object event)", "testcase": false, "constructor": false, "invocations": ["debug", "sendEvent", "error", "debug"]}, "repository": {"repo_id": 440622, "url": "https://github.com/opencredo/opencredo-esper", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 28, "size": 828, "license": "licensed"}}