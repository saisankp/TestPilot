{"test_class": {"identifier": "AutonomiccsSystemVmTemplateJdbcDaoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AutonomiccsSystemVmTemplateJdbcDao spy;", "modifier": "private", "type": "AutonomiccsSystemVmTemplateJdbcDao", "declarator": "spy", "var_name": "spy"}, {"original_string": "private String sqlIsTemplateRegistered = \"select count(id) from vm_template where removed is null and state <> 'Inactive' and name = ?\";", "modifier": "private", "type": "String", "declarator": "sqlIsTemplateRegistered = \"select count(id) from vm_template where removed is null and state <> 'Inactive' and name = ?\"", "var_name": "sqlIsTemplateRegistered"}, {"original_string": "private String sqlIsTemplateRegisteredAndReady = \"select count(id) from template_view where state = 'READY' and removed is null and name = ?\";", "modifier": "private", "type": "String", "declarator": "sqlIsTemplateRegisteredAndReady = \"select count(id) from template_view where state = 'READY' and removed is null and name = ?\"", "var_name": "sqlIsTemplateRegisteredAndReady"}, {"original_string": "private String sqlSearchAutonomiccsSystemVmTemplateIdForHypervisor = \"select id from template_view where state = 'READY' and removed is null and name = ?\";", "modifier": "private", "type": "String", "declarator": "sqlSearchAutonomiccsSystemVmTemplateIdForHypervisor = \"select id from template_view where state = 'READY' and removed is null and name = ?\"", "var_name": "sqlSearchAutonomiccsSystemVmTemplateIdForHypervisor"}, {"original_string": "private JdbcTemplate jdbcTemplate;", "modifier": "private", "type": "JdbcTemplate", "declarator": "jdbcTemplate", "var_name": "jdbcTemplate"}], "file": "autonomic-plugin-common/src/test/java/br/com/autonomiccs/autonomic/plugin/common/daos/AutonomiccsSystemVmTemplateJdbcDaoTest.java"}, "test_case": {"identifier": "executeTemplateQueryAndRetrieveBooleanTestWithCloudRuntimeException", "parameters": "()", "modifiers": "@Test(expected = CloudRuntimeException.class) public", "return": "void", "body": "@Test(expected = CloudRuntimeException.class)\n    public void executeTemplateQueryAndRetrieveBooleanTestWithCloudRuntimeException() {\n        Mockito.when(jdbcTemplate.queryForObject(Mockito.eq(sqlIsTemplateRegistered), Mockito.any(Object[].class), Mockito.eq(Integer.class))).thenReturn(new Integer(2));\n\n        spy.executeTemplateQueryAndRetrieveBoolean(\"templateName\", sqlIsTemplateRegistered);\n\n        Mockito.verify(jdbcTemplate).queryForObject(Mockito.eq(sqlIsTemplateRegistered), Mockito.any(Object[].class), Mockito.eq(Integer.class));\n    }", "signature": "void executeTemplateQueryAndRetrieveBooleanTestWithCloudRuntimeException()", "full_signature": "@Test(expected = CloudRuntimeException.class) public void executeTemplateQueryAndRetrieveBooleanTestWithCloudRuntimeException()", "class_method_signature": "AutonomiccsSystemVmTemplateJdbcDaoTest.executeTemplateQueryAndRetrieveBooleanTestWithCloudRuntimeException()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "queryForObject", "eq", "any", "eq", "executeTemplateQueryAndRetrieveBoolean", "queryForObject", "verify", "eq", "any", "eq"]}, "focal_class": {"identifier": "AutonomiccsSystemVmTemplateJdbcDao", "superclass": "extends JdbcDaoSupport", "interfaces": "", "fields": [{"original_string": "private String sqlIsTemplateRegistered = \"select count(id) from vm_template where removed is null and state <> 'Inactive' and name = ?\";", "modifier": "private", "type": "String", "declarator": "sqlIsTemplateRegistered = \"select count(id) from vm_template where removed is null and state <> 'Inactive' and name = ?\"", "var_name": "sqlIsTemplateRegistered"}, {"original_string": "private String sqlIsTemplateRegisteredAndReady = \"select count(id) from template_view where state = 'READY' and removed is null and name = ?\";", "modifier": "private", "type": "String", "declarator": "sqlIsTemplateRegisteredAndReady = \"select count(id) from template_view where state = 'READY' and removed is null and name = ?\"", "var_name": "sqlIsTemplateRegisteredAndReady"}, {"original_string": "private String sqlSearchAutonomiccsSystemVmTemplateIdForHypervisor = \"select id from template_view where state = 'READY' and removed is null and name = ?\";", "modifier": "private", "type": "String", "declarator": "sqlSearchAutonomiccsSystemVmTemplateIdForHypervisor = \"select id from template_view where state = 'READY' and removed is null and name = ?\"", "var_name": "sqlSearchAutonomiccsSystemVmTemplateIdForHypervisor"}], "methods": [{"identifier": "isTemplateRegistered", "parameters": "(String templateName)", "modifiers": "public", "return": "boolean", "signature": "boolean isTemplateRegistered(String templateName)", "full_signature": "public boolean isTemplateRegistered(String templateName)", "class_method_signature": "AutonomiccsSystemVmTemplateJdbcDao.isTemplateRegistered(String templateName)", "testcase": false, "constructor": false}, {"identifier": "executeTemplateQueryAndRetrieveBoolean", "parameters": "(String templateName, String sql)", "modifiers": "protected", "return": "boolean", "signature": "boolean executeTemplateQueryAndRetrieveBoolean(String templateName, String sql)", "full_signature": "protected boolean executeTemplateQueryAndRetrieveBoolean(String templateName, String sql)", "class_method_signature": "AutonomiccsSystemVmTemplateJdbcDao.executeTemplateQueryAndRetrieveBoolean(String templateName, String sql)", "testcase": false, "constructor": false}, {"identifier": "isTemplateRegisteredAndReady", "parameters": "(String autonomiccsSystemVmTemplateName)", "modifiers": "public", "return": "boolean", "signature": "boolean isTemplateRegisteredAndReady(String autonomiccsSystemVmTemplateName)", "full_signature": "public boolean isTemplateRegisteredAndReady(String autonomiccsSystemVmTemplateName)", "class_method_signature": "AutonomiccsSystemVmTemplateJdbcDao.isTemplateRegisteredAndReady(String autonomiccsSystemVmTemplateName)", "testcase": false, "constructor": false}, {"identifier": "searchAutonomiccsSystemVmTemplateIdForHypervisor", "parameters": "(String autonomiccsSystemVmTemplateName)", "modifiers": "public", "return": "long", "signature": "long searchAutonomiccsSystemVmTemplateIdForHypervisor(String autonomiccsSystemVmTemplateName)", "full_signature": "public long searchAutonomiccsSystemVmTemplateIdForHypervisor(String autonomiccsSystemVmTemplateName)", "class_method_signature": "AutonomiccsSystemVmTemplateJdbcDao.searchAutonomiccsSystemVmTemplateIdForHypervisor(String autonomiccsSystemVmTemplateName)", "testcase": false, "constructor": false}], "file": "autonomic-plugin-common/src/main/java/br/com/autonomiccs/autonomic/plugin/common/daos/AutonomiccsSystemVmTemplateJdbcDao.java"}, "focal_method": {"identifier": "executeTemplateQueryAndRetrieveBoolean", "parameters": "(String templateName, String sql)", "modifiers": "protected", "return": "boolean", "body": "protected boolean executeTemplateQueryAndRetrieveBoolean(String templateName, String sql) {\n        Integer numberOfRegister = getJdbcTemplate().queryForObject(sql, new Object[] {templateName}, Integer.class);\n        if (numberOfRegister > 1) {\n            throw new CloudRuntimeException(String.format(\"More than one template with name [%s]\", templateName));\n        }\n        return BooleanUtils.toBoolean(numberOfRegister);\n    }", "signature": "boolean executeTemplateQueryAndRetrieveBoolean(String templateName, String sql)", "full_signature": "protected boolean executeTemplateQueryAndRetrieveBoolean(String templateName, String sql)", "class_method_signature": "AutonomiccsSystemVmTemplateJdbcDao.executeTemplateQueryAndRetrieveBoolean(String templateName, String sql)", "testcase": false, "constructor": false, "invocations": ["queryForObject", "getJdbcTemplate", "format", "toBoolean"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}