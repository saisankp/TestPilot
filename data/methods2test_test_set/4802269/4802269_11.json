{"test_class": {"identifier": "DXWorkflowTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ObjectMapper MAPPER = new ObjectMapper();", "modifier": "private static final", "type": "ObjectMapper", "declarator": "MAPPER = new ObjectMapper()", "var_name": "MAPPER"}, {"original_string": "private DXProject testProject;", "modifier": "private", "type": "DXProject", "declarator": "testProject", "var_name": "testProject"}], "file": "src/java/src/test/java/com/dnanexus/DXWorkflowTest.java"}, "test_case": {"identifier": "testBuilder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuilder() {\n        DXDataObjectTest.testBuilder(testProject,\n                new DXDataObjectTest.BuilderFactory<DXWorkflow.Builder, DXWorkflow>() {\n                    @Override\n                    public DXWorkflow.Builder getBuilder() {\n                        return DXWorkflow.newWorkflow();\n                    }\n                });\n    }", "signature": "void testBuilder()", "full_signature": "@Test public void testBuilder()", "class_method_signature": "DXWorkflowTest.testBuilder()", "testcase": true, "constructor": false, "invocations": ["testBuilder", "newWorkflow"]}, "focal_class": {"identifier": "DXWorkflow", "superclass": "extends DXDataObject", "interfaces": "implements DXExecutable<DXAnalysis>", "fields": [], "methods": [{"identifier": "create", "parameters": "(Map<String, Object> value)", "modifiers": "@JsonCreator private static", "return": "DXWorkflow", "signature": "DXWorkflow create(Map<String, Object> value)", "full_signature": "@JsonCreator private static DXWorkflow create(Map<String, Object> value)", "class_method_signature": "DXWorkflow.create(Map<String, Object> value)", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "(String workflowId)", "modifiers": "public static", "return": "DXWorkflow", "signature": "DXWorkflow getInstance(String workflowId)", "full_signature": "public static DXWorkflow getInstance(String workflowId)", "class_method_signature": "DXWorkflow.getInstance(String workflowId)", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "(String workflowId, DXContainer project)", "modifiers": "public static", "return": "DXWorkflow", "signature": "DXWorkflow getInstance(String workflowId, DXContainer project)", "full_signature": "public static DXWorkflow getInstance(String workflowId, DXContainer project)", "class_method_signature": "DXWorkflow.getInstance(String workflowId, DXContainer project)", "testcase": false, "constructor": false}, {"identifier": "getInstanceWithCachedDescribe", "parameters": "(String workflowId, DXContainer project,\n            DXEnvironment env, JsonNode describe)", "modifiers": "static", "return": "DXWorkflow", "signature": "DXWorkflow getInstanceWithCachedDescribe(String workflowId, DXContainer project,\n            DXEnvironment env, JsonNode describe)", "full_signature": "static DXWorkflow getInstanceWithCachedDescribe(String workflowId, DXContainer project,\n            DXEnvironment env, JsonNode describe)", "class_method_signature": "DXWorkflow.getInstanceWithCachedDescribe(String workflowId, DXContainer project,\n            DXEnvironment env, JsonNode describe)", "testcase": false, "constructor": false}, {"identifier": "getInstanceWithEnvironment", "parameters": "(String workflowId, DXContainer project,\n            DXEnvironment env)", "modifiers": "public static", "return": "DXWorkflow", "signature": "DXWorkflow getInstanceWithEnvironment(String workflowId, DXContainer project,\n            DXEnvironment env)", "full_signature": "public static DXWorkflow getInstanceWithEnvironment(String workflowId, DXContainer project,\n            DXEnvironment env)", "class_method_signature": "DXWorkflow.getInstanceWithEnvironment(String workflowId, DXContainer project,\n            DXEnvironment env)", "testcase": false, "constructor": false}, {"identifier": "getInstanceWithEnvironment", "parameters": "(String workflowId, DXEnvironment env)", "modifiers": "public static", "return": "DXWorkflow", "signature": "DXWorkflow getInstanceWithEnvironment(String workflowId, DXEnvironment env)", "full_signature": "public static DXWorkflow getInstanceWithEnvironment(String workflowId, DXEnvironment env)", "class_method_signature": "DXWorkflow.getInstanceWithEnvironment(String workflowId, DXEnvironment env)", "testcase": false, "constructor": false}, {"identifier": "newWorkflow", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder newWorkflow()", "full_signature": "public static Builder newWorkflow()", "class_method_signature": "DXWorkflow.newWorkflow()", "testcase": false, "constructor": false}, {"identifier": "newWorkflowWithEnvironment", "parameters": "(DXEnvironment env)", "modifiers": "public static", "return": "Builder", "signature": "Builder newWorkflowWithEnvironment(DXEnvironment env)", "full_signature": "public static Builder newWorkflowWithEnvironment(DXEnvironment env)", "class_method_signature": "DXWorkflow.newWorkflowWithEnvironment(DXEnvironment env)", "testcase": false, "constructor": false}, {"identifier": "DXWorkflow", "parameters": "(String workflowId, DXContainer project, DXEnvironment env, JsonNode describe)", "modifiers": "private", "return": "", "signature": " DXWorkflow(String workflowId, DXContainer project, DXEnvironment env, JsonNode describe)", "full_signature": "private  DXWorkflow(String workflowId, DXContainer project, DXEnvironment env, JsonNode describe)", "class_method_signature": "DXWorkflow.DXWorkflow(String workflowId, DXContainer project, DXEnvironment env, JsonNode describe)", "testcase": false, "constructor": true}, {"identifier": "DXWorkflow", "parameters": "(String workflowId, DXEnvironment env)", "modifiers": "private", "return": "", "signature": " DXWorkflow(String workflowId, DXEnvironment env)", "full_signature": "private  DXWorkflow(String workflowId, DXEnvironment env)", "class_method_signature": "DXWorkflow.DXWorkflow(String workflowId, DXEnvironment env)", "testcase": false, "constructor": true}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "DXWorkflow", "signature": "DXWorkflow close()", "full_signature": "@Override public DXWorkflow close()", "class_method_signature": "DXWorkflow.close()", "testcase": false, "constructor": false}, {"identifier": "closeAndWait", "parameters": "()", "modifiers": "@Override public", "return": "DXWorkflow", "signature": "DXWorkflow closeAndWait()", "full_signature": "@Override public DXWorkflow closeAndWait()", "class_method_signature": "DXWorkflow.closeAndWait()", "testcase": false, "constructor": false}, {"identifier": "describe", "parameters": "()", "modifiers": "@Override public", "return": "Describe", "signature": "Describe describe()", "full_signature": "@Override public Describe describe()", "class_method_signature": "DXWorkflow.describe()", "testcase": false, "constructor": false}, {"identifier": "describe", "parameters": "(DescribeOptions options)", "modifiers": "@Override public", "return": "Describe", "signature": "Describe describe(DescribeOptions options)", "full_signature": "@Override public Describe describe(DescribeOptions options)", "class_method_signature": "DXWorkflow.describe(DescribeOptions options)", "testcase": false, "constructor": false}, {"identifier": "getCachedDescribe", "parameters": "()", "modifiers": "@Override public", "return": "Describe", "signature": "Describe getCachedDescribe()", "full_signature": "@Override public Describe getCachedDescribe()", "class_method_signature": "DXWorkflow.getCachedDescribe()", "testcase": false, "constructor": false}, {"identifier": "newRun", "parameters": "()", "modifiers": "@Override public", "return": "ExecutableRunner<DXAnalysis>", "signature": "ExecutableRunner<DXAnalysis> newRun()", "full_signature": "@Override public ExecutableRunner<DXAnalysis> newRun()", "class_method_signature": "DXWorkflow.newRun()", "testcase": false, "constructor": false}, {"identifier": "addStage", "parameters": "(DXApplet applet,\n                                        String name,\n                                        Object stageInputs,\n                                        int editVersion)", "modifiers": "public", "return": "Modification<Stage>", "signature": "Modification<Stage> addStage(DXApplet applet,\n                                        String name,\n                                        Object stageInputs,\n                                        int editVersion)", "full_signature": "public Modification<Stage> addStage(DXApplet applet,\n                                        String name,\n                                        Object stageInputs,\n                                        int editVersion)", "class_method_signature": "DXWorkflow.addStage(DXApplet applet,\n                                        String name,\n                                        Object stageInputs,\n                                        int editVersion)", "testcase": false, "constructor": false}], "file": "src/java/src/main/java/com/dnanexus/DXWorkflow.java"}, "focal_method": {"identifier": "newWorkflow", "parameters": "()", "modifiers": "public static", "return": "Builder", "body": "public static Builder newWorkflow() {\n        return new Builder();\n    }", "signature": "Builder newWorkflow()", "full_signature": "public static Builder newWorkflow()", "class_method_signature": "DXWorkflow.newWorkflow()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4802269, "url": "https://github.com/dnanexus/dx-toolkit", "stars": 59, "created": "6/27/2012 12:23:47 AM +00:00", "updates": "2020-01-21T16:35:18+00:00", "fork": "False", "license": "licensed"}}