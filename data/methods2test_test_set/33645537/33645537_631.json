{"test_class": {"identifier": "SubstitutionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MatchResult r1;", "modifier": "private", "type": "MatchResult", "declarator": "r1", "var_name": "r1"}, {"original_string": "private MatchResult r2;", "modifier": "private", "type": "MatchResult", "declarator": "r2", "var_name": "r2"}], "file": "concurrency/src/test/java/com/baidu/unbiz/common/regex/SubstitutionTest.java"}, "test_case": {"identifier": "matchNormal", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void matchNormal() {\n        Substitution subs = new MatchResultSubstitution(r1);\n        assertEquals(\"xxaayy$2zz\", subs.substitute(\"xx$1yy$2zz\"));\n    }", "signature": "void matchNormal()", "full_signature": "@Test public void matchNormal()", "class_method_signature": "SubstitutionTest.matchNormal()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "substitute"]}, "focal_class": {"identifier": "Substitution", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected final String replacementPrefixes;", "modifier": "protected final", "type": "String", "declarator": "replacementPrefixes", "var_name": "replacementPrefixes"}], "methods": [{"identifier": "Substitution", "parameters": "()", "modifiers": "public", "return": "", "signature": " Substitution()", "full_signature": "public  Substitution()", "class_method_signature": "Substitution.Substitution()", "testcase": false, "constructor": true}, {"identifier": "Substitution", "parameters": "(String replacementPrefixes)", "modifiers": "public", "return": "", "signature": " Substitution(String replacementPrefixes)", "full_signature": "public  Substitution(String replacementPrefixes)", "class_method_signature": "Substitution.Substitution(String replacementPrefixes)", "testcase": false, "constructor": true}, {"identifier": "substitute", "parameters": "(String input)", "modifiers": "public final", "return": "String", "signature": "String substitute(String input)", "full_signature": "public final String substitute(String input)", "class_method_signature": "Substitution.substitute(String input)", "testcase": false, "constructor": false}, {"identifier": "substitute", "parameters": "(StringBuilder buf, String input)", "modifiers": "public final", "return": "void", "signature": "void substitute(StringBuilder buf, String input)", "full_signature": "public final void substitute(StringBuilder buf, String input)", "class_method_signature": "Substitution.substitute(StringBuilder buf, String input)", "testcase": false, "constructor": false}, {"identifier": "group", "parameters": "(int index, int groupNumber)", "modifiers": "protected abstract", "return": "String", "signature": "String group(int index, int groupNumber)", "full_signature": "protected abstract String group(int index, int groupNumber)", "class_method_signature": "Substitution.group(int index, int groupNumber)", "testcase": false, "constructor": false}], "file": "concurrency/src/main/java/com/baidu/unbiz/common/regex/Substitution.java"}, "focal_method": {"identifier": "substitute", "parameters": "(String input)", "modifiers": "public final", "return": "String", "body": "public final String substitute(String input) {\n        if (input == null) {\n            return null;\n        }\n\n        StringBuilder buf = new StringBuilder();\n\n        substitute(buf, input);\n\n        return buf.toString();\n    }", "signature": "String substitute(String input)", "full_signature": "public final String substitute(String input)", "class_method_signature": "Substitution.substitute(String input)", "testcase": false, "constructor": false, "invocations": ["substitute", "toString"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}