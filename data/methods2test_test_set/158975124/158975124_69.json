{"test_class": {"identifier": "IoTDBConnectionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n  private TSIService.Iface client;", "modifier": "@Mock\n  private", "type": "TSIService.Iface", "declarator": "client", "var_name": "client"}, {"original_string": "private IoTDBConnection connection = new IoTDBConnection();", "modifier": "private", "type": "IoTDBConnection", "declarator": "connection = new IoTDBConnection()", "var_name": "connection"}, {"original_string": "private TSStatus successStatus = RpcUtils.SUCCESS_STATUS;", "modifier": "private", "type": "TSStatus", "declarator": "successStatus = RpcUtils.SUCCESS_STATUS", "var_name": "successStatus"}, {"original_string": "private long sessionId;", "modifier": "private", "type": "long", "declarator": "sessionId", "var_name": "sessionId"}], "file": "jdbc/src/test/java/org/apache/iotdb/jdbc/IoTDBConnectionTest.java"}, "test_case": {"identifier": "testSetTimeZone", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSetTimeZone() throws IoTDBSQLException, TException {\n    String timeZone = \"Asia/Shanghai\";\n    when(client.setTimeZone(any(TSSetTimeZoneReq.class)))\n        .thenReturn(new TSStatus(successStatus));\n    connection.setClient(client);\n    connection.setTimeZone(timeZone);\n    assertEquals(connection.getTimeZone(), timeZone);\n  }", "signature": "void testSetTimeZone()", "full_signature": "@Test public void testSetTimeZone()", "class_method_signature": "IoTDBConnectionTest.testSetTimeZone()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "setTimeZone", "any", "setClient", "setTimeZone", "assertEquals", "getTimeZone"]}, "focal_class": {"identifier": "IoTDBConnection", "superclass": "", "interfaces": "implements Connection", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(IoTDBConnection.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(IoTDBConnection.class)", "var_name": "logger"}, {"original_string": "private static final TSProtocolVersion protocolVersion = TSProtocolVersion.IOTDB_SERVICE_PROTOCOL_V3;", "modifier": "private static final", "type": "TSProtocolVersion", "declarator": "protocolVersion = TSProtocolVersion.IOTDB_SERVICE_PROTOCOL_V3", "var_name": "protocolVersion"}, {"original_string": "private TSIService.Iface client = null;", "modifier": "private", "type": "TSIService.Iface", "declarator": "client = null", "var_name": "client"}, {"original_string": "private long sessionId = -1;", "modifier": "private", "type": "long", "declarator": "sessionId = -1", "var_name": "sessionId"}, {"original_string": "private IoTDBConnectionParams params;", "modifier": "private", "type": "IoTDBConnectionParams", "declarator": "params", "var_name": "params"}, {"original_string": "private boolean isClosed = true;", "modifier": "private", "type": "boolean", "declarator": "isClosed = true", "var_name": "isClosed"}, {"original_string": "private SQLWarning warningChain = null;", "modifier": "private", "type": "SQLWarning", "declarator": "warningChain = null", "var_name": "warningChain"}, {"original_string": "private TTransport transport;", "modifier": "private", "type": "TTransport", "declarator": "transport", "var_name": "transport"}, {"original_string": "private ZoneId zoneId;", "modifier": "private", "type": "ZoneId", "declarator": "zoneId", "var_name": "zoneId"}, {"original_string": "private boolean autoCommit;", "modifier": "private", "type": "boolean", "declarator": "autoCommit", "var_name": "autoCommit"}], "methods": [{"identifier": "IoTDBConnection", "parameters": "()", "modifiers": "public", "return": "", "signature": " IoTDBConnection()", "full_signature": "public  IoTDBConnection()", "class_method_signature": "IoTDBConnection.IoTDBConnection()", "testcase": false, "constructor": true}, {"identifier": "IoTDBConnection", "parameters": "(String url, Properties info)", "modifiers": "public", "return": "", "signature": " IoTDBConnection(String url, Properties info)", "full_signature": "public  IoTDBConnection(String url, Properties info)", "class_method_signature": "IoTDBConnection.IoTDBConnection(String url, Properties info)", "testcase": false, "constructor": true}, {"identifier": "isWrapperFor", "parameters": "(Class<?> arg0)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isWrapperFor(Class<?> arg0)", "full_signature": "@Override public boolean isWrapperFor(Class<?> arg0)", "class_method_signature": "IoTDBConnection.isWrapperFor(Class<?> arg0)", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "(Class<T> arg0)", "modifiers": "@Override public", "return": "T", "signature": "T unwrap(Class<T> arg0)", "full_signature": "@Override public T unwrap(Class<T> arg0)", "class_method_signature": "IoTDBConnection.unwrap(Class<T> arg0)", "testcase": false, "constructor": false}, {"identifier": "abort", "parameters": "(Executor arg0)", "modifiers": "@Override public", "return": "void", "signature": "void abort(Executor arg0)", "full_signature": "@Override public void abort(Executor arg0)", "class_method_signature": "IoTDBConnection.abort(Executor arg0)", "testcase": false, "constructor": false}, {"identifier": "clearWarnings", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clearWarnings()", "full_signature": "@Override public void clearWarnings()", "class_method_signature": "IoTDBConnection.clearWarnings()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "IoTDBConnection.close()", "testcase": false, "constructor": false}, {"identifier": "commit", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void commit()", "full_signature": "@Override public void commit()", "class_method_signature": "IoTDBConnection.commit()", "testcase": false, "constructor": false}, {"identifier": "createArrayOf", "parameters": "(String arg0, Object[] arg1)", "modifiers": "@Override public", "return": "Array", "signature": "Array createArrayOf(String arg0, Object[] arg1)", "full_signature": "@Override public Array createArrayOf(String arg0, Object[] arg1)", "class_method_signature": "IoTDBConnection.createArrayOf(String arg0, Object[] arg1)", "testcase": false, "constructor": false}, {"identifier": "createBlob", "parameters": "()", "modifiers": "@Override public", "return": "Blob", "signature": "Blob createBlob()", "full_signature": "@Override public Blob createBlob()", "class_method_signature": "IoTDBConnection.createBlob()", "testcase": false, "constructor": false}, {"identifier": "createClob", "parameters": "()", "modifiers": "@Override public", "return": "Clob", "signature": "Clob createClob()", "full_signature": "@Override public Clob createClob()", "class_method_signature": "IoTDBConnection.createClob()", "testcase": false, "constructor": false}, {"identifier": "createNClob", "parameters": "()", "modifiers": "@Override public", "return": "NClob", "signature": "NClob createNClob()", "full_signature": "@Override public NClob createNClob()", "class_method_signature": "IoTDBConnection.createNClob()", "testcase": false, "constructor": false}, {"identifier": "createSQLXML", "parameters": "()", "modifiers": "@Override public", "return": "SQLXML", "signature": "SQLXML createSQLXML()", "full_signature": "@Override public SQLXML createSQLXML()", "class_method_signature": "IoTDBConnection.createSQLXML()", "testcase": false, "constructor": false}, {"identifier": "createStatement", "parameters": "()", "modifiers": "@Override public", "return": "Statement", "signature": "Statement createStatement()", "full_signature": "@Override public Statement createStatement()", "class_method_signature": "IoTDBConnection.createStatement()", "testcase": false, "constructor": false}, {"identifier": "createStatement", "parameters": "(int resultSetType, int resultSetConcurrency)", "modifiers": "@Override public", "return": "Statement", "signature": "Statement createStatement(int resultSetType, int resultSetConcurrency)", "full_signature": "@Override public Statement createStatement(int resultSetType, int resultSetConcurrency)", "class_method_signature": "IoTDBConnection.createStatement(int resultSetType, int resultSetConcurrency)", "testcase": false, "constructor": false}, {"identifier": "createStatement", "parameters": "(int arg0, int arg1, int arg2)", "modifiers": "@Override public", "return": "Statement", "signature": "Statement createStatement(int arg0, int arg1, int arg2)", "full_signature": "@Override public Statement createStatement(int arg0, int arg1, int arg2)", "class_method_signature": "IoTDBConnection.createStatement(int arg0, int arg1, int arg2)", "testcase": false, "constructor": false}, {"identifier": "createStruct", "parameters": "(String arg0, Object[] arg1)", "modifiers": "@Override public", "return": "Struct", "signature": "Struct createStruct(String arg0, Object[] arg1)", "full_signature": "@Override public Struct createStruct(String arg0, Object[] arg1)", "class_method_signature": "IoTDBConnection.createStruct(String arg0, Object[] arg1)", "testcase": false, "constructor": false}, {"identifier": "getAutoCommit", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getAutoCommit()", "full_signature": "@Override public boolean getAutoCommit()", "class_method_signature": "IoTDBConnection.getAutoCommit()", "testcase": false, "constructor": false}, {"identifier": "setAutoCommit", "parameters": "(boolean arg0)", "modifiers": "@Override public", "return": "void", "signature": "void setAutoCommit(boolean arg0)", "full_signature": "@Override public void setAutoCommit(boolean arg0)", "class_method_signature": "IoTDBConnection.setAutoCommit(boolean arg0)", "testcase": false, "constructor": false}, {"identifier": "getCatalog", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCatalog()", "full_signature": "@Override public String getCatalog()", "class_method_signature": "IoTDBConnection.getCatalog()", "testcase": false, "constructor": false}, {"identifier": "setCatalog", "parameters": "(String arg0)", "modifiers": "@Override public", "return": "void", "signature": "void setCatalog(String arg0)", "full_signature": "@Override public void setCatalog(String arg0)", "class_method_signature": "IoTDBConnection.setCatalog(String arg0)", "testcase": false, "constructor": false}, {"identifier": "getClientInfo", "parameters": "()", "modifiers": "@Override public", "return": "Properties", "signature": "Properties getClientInfo()", "full_signature": "@Override public Properties getClientInfo()", "class_method_signature": "IoTDBConnection.getClientInfo()", "testcase": false, "constructor": false}, {"identifier": "setClientInfo", "parameters": "(Properties arg0)", "modifiers": "@Override public", "return": "void", "signature": "void setClientInfo(Properties arg0)", "full_signature": "@Override public void setClientInfo(Properties arg0)", "class_method_signature": "IoTDBConnection.setClientInfo(Properties arg0)", "testcase": false, "constructor": false}, {"identifier": "getClientInfo", "parameters": "(String arg0)", "modifiers": "@Override public", "return": "String", "signature": "String getClientInfo(String arg0)", "full_signature": "@Override public String getClientInfo(String arg0)", "class_method_signature": "IoTDBConnection.getClientInfo(String arg0)", "testcase": false, "constructor": false}, {"identifier": "getHoldability", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getHoldability()", "full_signature": "@Override public int getHoldability()", "class_method_signature": "IoTDBConnection.getHoldability()", "testcase": false, "constructor": false}, {"identifier": "setHoldability", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "void", "signature": "void setHoldability(int arg0)", "full_signature": "@Override public void setHoldability(int arg0)", "class_method_signature": "IoTDBConnection.setHoldability(int arg0)", "testcase": false, "constructor": false}, {"identifier": "getMetaData", "parameters": "()", "modifiers": "@Override public", "return": "DatabaseMetaData", "signature": "DatabaseMetaData getMetaData()", "full_signature": "@Override public DatabaseMetaData getMetaData()", "class_method_signature": "IoTDBConnection.getMetaData()", "testcase": false, "constructor": false}, {"identifier": "getNetworkTimeout", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getNetworkTimeout()", "full_signature": "@Override public int getNetworkTimeout()", "class_method_signature": "IoTDBConnection.getNetworkTimeout()", "testcase": false, "constructor": false}, {"identifier": "getSchema", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSchema()", "full_signature": "@Override public String getSchema()", "class_method_signature": "IoTDBConnection.getSchema()", "testcase": false, "constructor": false}, {"identifier": "setSchema", "parameters": "(String arg0)", "modifiers": "@Override public", "return": "void", "signature": "void setSchema(String arg0)", "full_signature": "@Override public void setSchema(String arg0)", "class_method_signature": "IoTDBConnection.setSchema(String arg0)", "testcase": false, "constructor": false}, {"identifier": "getTransactionIsolation", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getTransactionIsolation()", "full_signature": "@Override public int getTransactionIsolation()", "class_method_signature": "IoTDBConnection.getTransactionIsolation()", "testcase": false, "constructor": false}, {"identifier": "setTransactionIsolation", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "void", "signature": "void setTransactionIsolation(int arg0)", "full_signature": "@Override public void setTransactionIsolation(int arg0)", "class_method_signature": "IoTDBConnection.setTransactionIsolation(int arg0)", "testcase": false, "constructor": false}, {"identifier": "getTypeMap", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Class<?>>", "signature": "Map<String, Class<?>> getTypeMap()", "full_signature": "@Override public Map<String, Class<?>> getTypeMap()", "class_method_signature": "IoTDBConnection.getTypeMap()", "testcase": false, "constructor": false}, {"identifier": "setTypeMap", "parameters": "(Map<String, Class<?>> arg0)", "modifiers": "@Override public", "return": "void", "signature": "void setTypeMap(Map<String, Class<?>> arg0)", "full_signature": "@Override public void setTypeMap(Map<String, Class<?>> arg0)", "class_method_signature": "IoTDBConnection.setTypeMap(Map<String, Class<?>> arg0)", "testcase": false, "constructor": false}, {"identifier": "getWarnings", "parameters": "()", "modifiers": "@Override public", "return": "SQLWarning", "signature": "SQLWarning getWarnings()", "full_signature": "@Override public SQLWarning getWarnings()", "class_method_signature": "IoTDBConnection.getWarnings()", "testcase": false, "constructor": false}, {"identifier": "isClosed", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isClosed()", "full_signature": "@Override public boolean isClosed()", "class_method_signature": "IoTDBConnection.isClosed()", "testcase": false, "constructor": false}, {"identifier": "isReadOnly", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isReadOnly()", "full_signature": "@Override public boolean isReadOnly()", "class_method_signature": "IoTDBConnection.isReadOnly()", "testcase": false, "constructor": false}, {"identifier": "setReadOnly", "parameters": "(boolean arg0)", "modifiers": "@Override public", "return": "void", "signature": "void setReadOnly(boolean arg0)", "full_signature": "@Override public void setReadOnly(boolean arg0)", "class_method_signature": "IoTDBConnection.setReadOnly(boolean arg0)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(int arg0)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isValid(int arg0)", "full_signature": "@Override public boolean isValid(int arg0)", "class_method_signature": "IoTDBConnection.isValid(int arg0)", "testcase": false, "constructor": false}, {"identifier": "nativeSQL", "parameters": "(String arg0)", "modifiers": "@Override public", "return": "String", "signature": "String nativeSQL(String arg0)", "full_signature": "@Override public String nativeSQL(String arg0)", "class_method_signature": "IoTDBConnection.nativeSQL(String arg0)", "testcase": false, "constructor": false}, {"identifier": "prepareCall", "parameters": "(String arg0)", "modifiers": "@Override public", "return": "CallableStatement", "signature": "CallableStatement prepareCall(String arg0)", "full_signature": "@Override public CallableStatement prepareCall(String arg0)", "class_method_signature": "IoTDBConnection.prepareCall(String arg0)", "testcase": false, "constructor": false}, {"identifier": "prepareCall", "parameters": "(String arg0, int arg1, int arg2)", "modifiers": "@Override public", "return": "CallableStatement", "signature": "CallableStatement prepareCall(String arg0, int arg1, int arg2)", "full_signature": "@Override public CallableStatement prepareCall(String arg0, int arg1, int arg2)", "class_method_signature": "IoTDBConnection.prepareCall(String arg0, int arg1, int arg2)", "testcase": false, "constructor": false}, {"identifier": "prepareCall", "parameters": "(String arg0, int arg1, int arg2, int arg3)", "modifiers": "@Override public", "return": "CallableStatement", "signature": "CallableStatement prepareCall(String arg0, int arg1, int arg2, int arg3)", "full_signature": "@Override public CallableStatement prepareCall(String arg0, int arg1, int arg2, int arg3)", "class_method_signature": "IoTDBConnection.prepareCall(String arg0, int arg1, int arg2, int arg3)", "testcase": false, "constructor": false}, {"identifier": "prepareStatement", "parameters": "(String sql)", "modifiers": "@Override public", "return": "PreparedStatement", "signature": "PreparedStatement prepareStatement(String sql)", "full_signature": "@Override public PreparedStatement prepareStatement(String sql)", "class_method_signature": "IoTDBConnection.prepareStatement(String sql)", "testcase": false, "constructor": false}, {"identifier": "prepareStatement", "parameters": "(String sql, int autoGeneratedKeys)", "modifiers": "@Override public", "return": "PreparedStatement", "signature": "PreparedStatement prepareStatement(String sql, int autoGeneratedKeys)", "full_signature": "@Override public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys)", "class_method_signature": "IoTDBConnection.prepareStatement(String sql, int autoGeneratedKeys)", "testcase": false, "constructor": false}, {"identifier": "prepareStatement", "parameters": "(String sql, int[] columnIndexes)", "modifiers": "@Override public", "return": "PreparedStatement", "signature": "PreparedStatement prepareStatement(String sql, int[] columnIndexes)", "full_signature": "@Override public PreparedStatement prepareStatement(String sql, int[] columnIndexes)", "class_method_signature": "IoTDBConnection.prepareStatement(String sql, int[] columnIndexes)", "testcase": false, "constructor": false}, {"identifier": "prepareStatement", "parameters": "(String sql, String[] columnNames)", "modifiers": "@Override public", "return": "PreparedStatement", "signature": "PreparedStatement prepareStatement(String sql, String[] columnNames)", "full_signature": "@Override public PreparedStatement prepareStatement(String sql, String[] columnNames)", "class_method_signature": "IoTDBConnection.prepareStatement(String sql, String[] columnNames)", "testcase": false, "constructor": false}, {"identifier": "prepareStatement", "parameters": "(String sql, int resultSetType, int resultSetConcurrency)", "modifiers": "@Override public", "return": "PreparedStatement", "signature": "PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency)", "full_signature": "@Override public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency)", "class_method_signature": "IoTDBConnection.prepareStatement(String sql, int resultSetType, int resultSetConcurrency)", "testcase": false, "constructor": false}, {"identifier": "prepareStatement", "parameters": "(String sql, int resultSetType, int resultSetConcurrency,\n      int resultSetHoldability)", "modifiers": "@Override public", "return": "PreparedStatement", "signature": "PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency,\n      int resultSetHoldability)", "full_signature": "@Override public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency,\n      int resultSetHoldability)", "class_method_signature": "IoTDBConnection.prepareStatement(String sql, int resultSetType, int resultSetConcurrency,\n      int resultSetHoldability)", "testcase": false, "constructor": false}, {"identifier": "releaseSavepoint", "parameters": "(Savepoint arg0)", "modifiers": "@Override public", "return": "void", "signature": "void releaseSavepoint(Savepoint arg0)", "full_signature": "@Override public void releaseSavepoint(Savepoint arg0)", "class_method_signature": "IoTDBConnection.releaseSavepoint(Savepoint arg0)", "testcase": false, "constructor": false}, {"identifier": "rollback", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void rollback()", "full_signature": "@Override public void rollback()", "class_method_signature": "IoTDBConnection.rollback()", "testcase": false, "constructor": false}, {"identifier": "rollback", "parameters": "(Savepoint arg0)", "modifiers": "@Override public", "return": "void", "signature": "void rollback(Savepoint arg0)", "full_signature": "@Override public void rollback(Savepoint arg0)", "class_method_signature": "IoTDBConnection.rollback(Savepoint arg0)", "testcase": false, "constructor": false}, {"identifier": "setClientInfo", "parameters": "(String arg0, String arg1)", "modifiers": "@Override public", "return": "void", "signature": "void setClientInfo(String arg0, String arg1)", "full_signature": "@Override public void setClientInfo(String arg0, String arg1)", "class_method_signature": "IoTDBConnection.setClientInfo(String arg0, String arg1)", "testcase": false, "constructor": false}, {"identifier": "setNetworkTimeout", "parameters": "(Executor arg0, int arg1)", "modifiers": "@Override public", "return": "void", "signature": "void setNetworkTimeout(Executor arg0, int arg1)", "full_signature": "@Override public void setNetworkTimeout(Executor arg0, int arg1)", "class_method_signature": "IoTDBConnection.setNetworkTimeout(Executor arg0, int arg1)", "testcase": false, "constructor": false}, {"identifier": "setSavepoint", "parameters": "()", "modifiers": "@Override public", "return": "Savepoint", "signature": "Savepoint setSavepoint()", "full_signature": "@Override public Savepoint setSavepoint()", "class_method_signature": "IoTDBConnection.setSavepoint()", "testcase": false, "constructor": false}, {"identifier": "setSavepoint", "parameters": "(String arg0)", "modifiers": "@Override public", "return": "Savepoint", "signature": "Savepoint setSavepoint(String arg0)", "full_signature": "@Override public Savepoint setSavepoint(String arg0)", "class_method_signature": "IoTDBConnection.setSavepoint(String arg0)", "testcase": false, "constructor": false}, {"identifier": "getClient", "parameters": "()", "modifiers": "public", "return": "TSIService.Iface", "signature": "TSIService.Iface getClient()", "full_signature": "public TSIService.Iface getClient()", "class_method_signature": "IoTDBConnection.getClient()", "testcase": false, "constructor": false}, {"identifier": "getSessionId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getSessionId()", "full_signature": "public long getSessionId()", "class_method_signature": "IoTDBConnection.getSessionId()", "testcase": false, "constructor": false}, {"identifier": "setClient", "parameters": "(TSIService.Iface client)", "modifiers": "public", "return": "void", "signature": "void setClient(TSIService.Iface client)", "full_signature": "public void setClient(TSIService.Iface client)", "class_method_signature": "IoTDBConnection.setClient(TSIService.Iface client)", "testcase": false, "constructor": false}, {"identifier": "openTransport", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void openTransport()", "full_signature": "private void openTransport()", "class_method_signature": "IoTDBConnection.openTransport()", "testcase": false, "constructor": false}, {"identifier": "openSession", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void openSession()", "full_signature": "private void openSession()", "class_method_signature": "IoTDBConnection.openSession()", "testcase": false, "constructor": false}, {"identifier": "reconnect", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean reconnect()", "full_signature": " boolean reconnect()", "class_method_signature": "IoTDBConnection.reconnect()", "testcase": false, "constructor": false}, {"identifier": "getTimeZone", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTimeZone()", "full_signature": "public String getTimeZone()", "class_method_signature": "IoTDBConnection.getTimeZone()", "testcase": false, "constructor": false}, {"identifier": "setTimeZone", "parameters": "(String zoneId)", "modifiers": "public", "return": "void", "signature": "void setTimeZone(String zoneId)", "full_signature": "public void setTimeZone(String zoneId)", "class_method_signature": "IoTDBConnection.setTimeZone(String zoneId)", "testcase": false, "constructor": false}, {"identifier": "getServerProperties", "parameters": "()", "modifiers": "public", "return": "ServerProperties", "signature": "ServerProperties getServerProperties()", "full_signature": "public ServerProperties getServerProperties()", "class_method_signature": "IoTDBConnection.getServerProperties()", "testcase": false, "constructor": false}], "file": "jdbc/src/main/java/org/apache/iotdb/jdbc/IoTDBConnection.java"}, "focal_method": {"identifier": "setTimeZone", "parameters": "(String zoneId)", "modifiers": "public", "return": "void", "body": "public void setTimeZone(String zoneId) throws TException, IoTDBSQLException {\n    TSSetTimeZoneReq req = new TSSetTimeZoneReq(sessionId, zoneId);\n    TSStatus resp = getClient().setTimeZone(req);\n    try {\n      RpcUtils.verifySuccess(resp);\n    } catch (StatementExecutionException e) {\n      throw new IoTDBSQLException(e.getMessage(), resp);\n    }\n    this.zoneId = ZoneId.of(zoneId);\n  }", "signature": "void setTimeZone(String zoneId)", "full_signature": "public void setTimeZone(String zoneId)", "class_method_signature": "IoTDBConnection.setTimeZone(String zoneId)", "testcase": false, "constructor": false, "invocations": ["setTimeZone", "getClient", "verifySuccess", "getMessage", "of"]}, "repository": {"repo_id": 158975124, "url": "https://github.com/apache/incubator-iotdb", "stars": 449, "created": "11/24/2018 9:29:17 PM +00:00", "updates": "2020-01-21T08:10:15+00:00", "fork": "False", "license": "licensed"}}