{"test_class": {"identifier": "AbstractExecutionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private WorkflowBundle workflowBundle;", "modifier": "private", "type": "WorkflowBundle", "declarator": "workflowBundle", "var_name": "workflowBundle"}, {"original_string": "private Execution execution;", "modifier": "private", "type": "Execution", "declarator": "execution", "var_name": "execution"}, {"original_string": "private Workflow workflow;", "modifier": "private", "type": "Workflow", "declarator": "workflow", "var_name": "workflow"}, {"original_string": "private Profile profile;", "modifier": "private", "type": "Profile", "declarator": "profile", "var_name": "profile"}, {"original_string": "private Bundle dataBundle;", "modifier": "private", "type": "Bundle", "declarator": "dataBundle", "var_name": "dataBundle"}], "file": "taverna-execution-api/src/test/java/org/apache/taverna/platform/execution/api/AbstractExecutionTest.java"}, "test_case": {"identifier": "testGetInputs", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetInputs() {\n\t\tassertEquals(dataBundle, execution.getDataBundle());\n\t}", "signature": "void testGetInputs()", "full_signature": "@Test public void testGetInputs()", "class_method_signature": "AbstractExecutionTest.testGetInputs()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getDataBundle"]}, "focal_class": {"identifier": "AbstractExecution", "superclass": "", "interfaces": "implements Execution", "fields": [{"original_string": "private final String ID;", "modifier": "private final", "type": "String", "declarator": "ID", "var_name": "ID"}, {"original_string": "private final WorkflowBundle workflowBundle;", "modifier": "private final", "type": "WorkflowBundle", "declarator": "workflowBundle", "var_name": "workflowBundle"}, {"original_string": "private final Bundle dataBundle;", "modifier": "private final", "type": "Bundle", "declarator": "dataBundle", "var_name": "dataBundle"}, {"original_string": "private final Workflow workflow;", "modifier": "private final", "type": "Workflow", "declarator": "workflow", "var_name": "workflow"}, {"original_string": "private final Profile profile;", "modifier": "private final", "type": "Profile", "declarator": "profile", "var_name": "profile"}, {"original_string": "private final WorkflowReport workflowReport;", "modifier": "private final", "type": "WorkflowReport", "declarator": "workflowReport", "var_name": "workflowReport"}, {"original_string": "private final Scufl2Tools scufl2Tools = new Scufl2Tools();", "modifier": "private final", "type": "Scufl2Tools", "declarator": "scufl2Tools = new Scufl2Tools()", "var_name": "scufl2Tools"}], "methods": [{"identifier": "AbstractExecution", "parameters": "(WorkflowBundle workflowBundle, Workflow workflow, Profile profile,\n\t\t\tBundle dataBundle)", "modifiers": "public", "return": "", "signature": " AbstractExecution(WorkflowBundle workflowBundle, Workflow workflow, Profile profile,\n\t\t\tBundle dataBundle)", "full_signature": "public  AbstractExecution(WorkflowBundle workflowBundle, Workflow workflow, Profile profile,\n\t\t\tBundle dataBundle)", "class_method_signature": "AbstractExecution.AbstractExecution(WorkflowBundle workflowBundle, Workflow workflow, Profile profile,\n\t\t\tBundle dataBundle)", "testcase": false, "constructor": true}, {"identifier": "createWorkflowReport", "parameters": "(Workflow workflow)", "modifiers": "protected abstract", "return": "WorkflowReport", "signature": "WorkflowReport createWorkflowReport(Workflow workflow)", "full_signature": "protected abstract WorkflowReport createWorkflowReport(Workflow workflow)", "class_method_signature": "AbstractExecution.createWorkflowReport(Workflow workflow)", "testcase": false, "constructor": false}, {"identifier": "createProcessorReport", "parameters": "(Processor processor)", "modifiers": "protected abstract", "return": "ProcessorReport", "signature": "ProcessorReport createProcessorReport(Processor processor)", "full_signature": "protected abstract ProcessorReport createProcessorReport(Processor processor)", "class_method_signature": "AbstractExecution.createProcessorReport(Processor processor)", "testcase": false, "constructor": false}, {"identifier": "createActivityReport", "parameters": "(Activity activity)", "modifiers": "protected abstract", "return": "ActivityReport", "signature": "ActivityReport createActivityReport(Activity activity)", "full_signature": "protected abstract ActivityReport createActivityReport(Activity activity)", "class_method_signature": "AbstractExecution.createActivityReport(Activity activity)", "testcase": false, "constructor": false}, {"identifier": "generateWorkflowReport", "parameters": "(Workflow workflow)", "modifiers": "public", "return": "WorkflowReport", "signature": "WorkflowReport generateWorkflowReport(Workflow workflow)", "full_signature": "public WorkflowReport generateWorkflowReport(Workflow workflow)", "class_method_signature": "AbstractExecution.generateWorkflowReport(Workflow workflow)", "testcase": false, "constructor": false}, {"identifier": "getID", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getID()", "full_signature": "@Override public String getID()", "class_method_signature": "AbstractExecution.getID()", "testcase": false, "constructor": false}, {"identifier": "getWorkflowBundle", "parameters": "()", "modifiers": "@Override public", "return": "WorkflowBundle", "signature": "WorkflowBundle getWorkflowBundle()", "full_signature": "@Override public WorkflowBundle getWorkflowBundle()", "class_method_signature": "AbstractExecution.getWorkflowBundle()", "testcase": false, "constructor": false}, {"identifier": "getDataBundle", "parameters": "()", "modifiers": "@Override public", "return": "Bundle", "signature": "Bundle getDataBundle()", "full_signature": "@Override public Bundle getDataBundle()", "class_method_signature": "AbstractExecution.getDataBundle()", "testcase": false, "constructor": false}, {"identifier": "getWorkflow", "parameters": "()", "modifiers": "@Override public", "return": "Workflow", "signature": "Workflow getWorkflow()", "full_signature": "@Override public Workflow getWorkflow()", "class_method_signature": "AbstractExecution.getWorkflow()", "testcase": false, "constructor": false}, {"identifier": "getProfile", "parameters": "()", "modifiers": "@Override public", "return": "Profile", "signature": "Profile getProfile()", "full_signature": "@Override public Profile getProfile()", "class_method_signature": "AbstractExecution.getProfile()", "testcase": false, "constructor": false}, {"identifier": "getWorkflowReport", "parameters": "()", "modifiers": "@Override public", "return": "WorkflowReport", "signature": "WorkflowReport getWorkflowReport()", "full_signature": "@Override public WorkflowReport getWorkflowReport()", "class_method_signature": "AbstractExecution.getWorkflowReport()", "testcase": false, "constructor": false}], "file": "taverna-execution-api/src/main/java/org/apache/taverna/platform/execution/api/AbstractExecution.java"}, "focal_method": {"identifier": "getDataBundle", "parameters": "()", "modifiers": "@Override public", "return": "Bundle", "body": "@Override\n\tpublic Bundle getDataBundle() {\n\t\treturn dataBundle;\n\t}", "signature": "Bundle getDataBundle()", "full_signature": "@Override public Bundle getDataBundle()", "class_method_signature": "AbstractExecution.getDataBundle()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 30956939, "url": "https://github.com/apache/incubator-taverna-engine", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 12, "size": 6590, "license": "licensed"}}