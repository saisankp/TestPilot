{"test_class": {"identifier": "DistinguishedNameTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/springframework/ldap/core/DistinguishedNameTest.java"}, "test_case": {"identifier": "testKeyCaseFoldUpperShouldEqualUpperCasedKeys", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testKeyCaseFoldUpperShouldEqualUpperCasedKeys() throws Exception {\n\t\ttry {\n\t\t\tString dnString = \"ou=foo,Ou=bar,oU=baz,OU=bim\";\n\t\t\tDistinguishedName name = new DistinguishedName(dnString);\n\n\t\t\t// First check the default\n\t\t\tassertThat(name.toString()).isEqualTo(\"ou=foo,ou=bar,ou=baz,ou=bim\");\n\t\t\t\n\t\t\tSystem.setProperty(DistinguishedName.KEY_CASE_FOLD_PROPERTY, DistinguishedName.KEY_CASE_FOLD_UPPER);\n\t\t\tname = new DistinguishedName(dnString);\n\t\t\tSystem.out.println(dnString + \" folded as \\\"\" + DistinguishedName.KEY_CASE_FOLD_UPPER + \"\\\": \" + name);\n\t\t\tassertThat(name.toString()).isEqualTo(\"OU=foo,OU=bar,OU=baz,OU=bim\");\n\t\t}\n\t\tfinally {\n\t\t\t// Always restore the system setting\n\t\t\tSystem.clearProperty(DistinguishedName.KEY_CASE_FOLD_PROPERTY);\n\t\t}\n\t}", "signature": "void testKeyCaseFoldUpperShouldEqualUpperCasedKeys()", "full_signature": "@Test public void testKeyCaseFoldUpperShouldEqualUpperCasedKeys()", "class_method_signature": "DistinguishedNameTest.testKeyCaseFoldUpperShouldEqualUpperCasedKeys()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "toString", "setProperty", "println", "isEqualTo", "assertThat", "toString", "clearProperty"]}, "focal_class": {"identifier": "DistinguishedName", "superclass": "", "interfaces": "implements Name", "fields": [{"original_string": "public static final String SPACED_DN_FORMAT_PROPERTY = \"org.springframework.ldap.core.spacedDnFormat\";", "modifier": "public static final", "type": "String", "declarator": "SPACED_DN_FORMAT_PROPERTY = \"org.springframework.ldap.core.spacedDnFormat\"", "var_name": "SPACED_DN_FORMAT_PROPERTY"}, {"original_string": "public static final String KEY_CASE_FOLD_PROPERTY = \"org.springframework.ldap.core.keyCaseFold\";", "modifier": "public static final", "type": "String", "declarator": "KEY_CASE_FOLD_PROPERTY = \"org.springframework.ldap.core.keyCaseFold\"", "var_name": "KEY_CASE_FOLD_PROPERTY"}, {"original_string": "public static final String KEY_CASE_FOLD_LOWER = \"lower\";", "modifier": "public static final", "type": "String", "declarator": "KEY_CASE_FOLD_LOWER = \"lower\"", "var_name": "KEY_CASE_FOLD_LOWER"}, {"original_string": "public static final String KEY_CASE_FOLD_UPPER = \"upper\";", "modifier": "public static final", "type": "String", "declarator": "KEY_CASE_FOLD_UPPER = \"upper\"", "var_name": "KEY_CASE_FOLD_UPPER"}, {"original_string": "public static final String KEY_CASE_FOLD_NONE = \"none\";", "modifier": "public static final", "type": "String", "declarator": "KEY_CASE_FOLD_NONE = \"none\"", "var_name": "KEY_CASE_FOLD_NONE"}, {"original_string": "private static final String MANGLED_DOUBLE_QUOTES = \"\\\\\\\\\\\"\";", "modifier": "private static final", "type": "String", "declarator": "MANGLED_DOUBLE_QUOTES = \"\\\\\\\\\\\"\"", "var_name": "MANGLED_DOUBLE_QUOTES"}, {"original_string": "private static final String PROPER_DOUBLE_QUOTES = \"\\\\\\\"\";", "modifier": "private static final", "type": "String", "declarator": "PROPER_DOUBLE_QUOTES = \"\\\\\\\"\"", "var_name": "PROPER_DOUBLE_QUOTES"}, {"original_string": "private static final Logger LOG = LoggerFactory.getLogger(DistinguishedName.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(DistinguishedName.class)", "var_name": "LOG"}, {"original_string": "private static final boolean COMPACT = true;", "modifier": "private static final", "type": "boolean", "declarator": "COMPACT = true", "var_name": "COMPACT"}, {"original_string": "private static final boolean NON_COMPACT = false;", "modifier": "private static final", "type": "boolean", "declarator": "NON_COMPACT = false", "var_name": "NON_COMPACT"}, {"original_string": "private static final long serialVersionUID = 3514344371999042586L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 3514344371999042586L", "var_name": "serialVersionUID"}, {"original_string": "public static final DistinguishedName EMPTY_PATH = new DistinguishedName(Collections.EMPTY_LIST);", "modifier": "public static final", "type": "DistinguishedName", "declarator": "EMPTY_PATH = new DistinguishedName(Collections.EMPTY_LIST)", "var_name": "EMPTY_PATH"}, {"original_string": "private static final int DEFAULT_BUFFER_SIZE = 256;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_BUFFER_SIZE = 256", "var_name": "DEFAULT_BUFFER_SIZE"}, {"original_string": "private List names;", "modifier": "private", "type": "List", "declarator": "names", "var_name": "names"}], "methods": [{"identifier": "DistinguishedName", "parameters": "()", "modifiers": "public", "return": "", "signature": " DistinguishedName()", "full_signature": "public  DistinguishedName()", "class_method_signature": "DistinguishedName.DistinguishedName()", "testcase": false, "constructor": true}, {"identifier": "DistinguishedName", "parameters": "(String path)", "modifiers": "public", "return": "", "signature": " DistinguishedName(String path)", "full_signature": "public  DistinguishedName(String path)", "class_method_signature": "DistinguishedName.DistinguishedName(String path)", "testcase": false, "constructor": true}, {"identifier": "DistinguishedName", "parameters": "(List list)", "modifiers": "public", "return": "", "signature": " DistinguishedName(List list)", "full_signature": "public  DistinguishedName(List list)", "class_method_signature": "DistinguishedName.DistinguishedName(List list)", "testcase": false, "constructor": true}, {"identifier": "DistinguishedName", "parameters": "(Name name)", "modifiers": "public", "return": "", "signature": " DistinguishedName(Name name)", "full_signature": "public  DistinguishedName(Name name)", "class_method_signature": "DistinguishedName.DistinguishedName(Name name)", "testcase": false, "constructor": true}, {"identifier": "parse", "parameters": "(String path)", "modifiers": "protected final", "return": "void", "signature": "void parse(String path)", "full_signature": "protected final void parse(String path)", "class_method_signature": "DistinguishedName.parse(String path)", "testcase": false, "constructor": false}, {"identifier": "unmangleCompositeName", "parameters": "(String path)", "modifiers": "private", "return": "String", "signature": "String unmangleCompositeName(String path)", "full_signature": "private String unmangleCompositeName(String path)", "class_method_signature": "DistinguishedName.unmangleCompositeName(String path)", "testcase": false, "constructor": false}, {"identifier": "getLdapRdn", "parameters": "(int index)", "modifiers": "public", "return": "LdapRdn", "signature": "LdapRdn getLdapRdn(int index)", "full_signature": "public LdapRdn getLdapRdn(int index)", "class_method_signature": "DistinguishedName.getLdapRdn(int index)", "testcase": false, "constructor": false}, {"identifier": "getLdapRdn", "parameters": "(String key)", "modifiers": "public", "return": "LdapRdn", "signature": "LdapRdn getLdapRdn(String key)", "full_signature": "public LdapRdn getLdapRdn(String key)", "class_method_signature": "DistinguishedName.getLdapRdn(String key)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(String key)", "modifiers": "public", "return": "String", "signature": "String getValue(String key)", "full_signature": "public String getValue(String key)", "class_method_signature": "DistinguishedName.getValue(String key)", "testcase": false, "constructor": false}, {"identifier": "getNames", "parameters": "()", "modifiers": "public", "return": "List", "signature": "List getNames()", "full_signature": "public List getNames()", "class_method_signature": "DistinguishedName.getNames()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "DistinguishedName.toString()", "testcase": false, "constructor": false}, {"identifier": "toCompactString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toCompactString()", "full_signature": "public String toCompactString()", "class_method_signature": "DistinguishedName.toCompactString()", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String encode()", "full_signature": "public String encode()", "class_method_signature": "DistinguishedName.encode()", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "(boolean compact)", "modifiers": "private", "return": "String", "signature": "String format(boolean compact)", "full_signature": "private String format(boolean compact)", "class_method_signature": "DistinguishedName.format(boolean compact)", "testcase": false, "constructor": false}, {"identifier": "toUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toUrl()", "full_signature": "public String toUrl()", "class_method_signature": "DistinguishedName.toUrl()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(DistinguishedName path)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(DistinguishedName path)", "full_signature": "public boolean contains(DistinguishedName path)", "class_method_signature": "DistinguishedName.contains(DistinguishedName path)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(DistinguishedName path)", "modifiers": "public", "return": "DistinguishedName", "signature": "DistinguishedName append(DistinguishedName path)", "full_signature": "public DistinguishedName append(DistinguishedName path)", "class_method_signature": "DistinguishedName.append(DistinguishedName path)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(String key, String value)", "modifiers": "public", "return": "DistinguishedName", "signature": "DistinguishedName append(String key, String value)", "full_signature": "public DistinguishedName append(String key, String value)", "class_method_signature": "DistinguishedName.append(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "prepend", "parameters": "(DistinguishedName path)", "modifiers": "public", "return": "void", "signature": "void prepend(DistinguishedName path)", "full_signature": "public void prepend(DistinguishedName path)", "class_method_signature": "DistinguishedName.prepend(DistinguishedName path)", "testcase": false, "constructor": false}, {"identifier": "removeFirst", "parameters": "()", "modifiers": "public", "return": "LdapRdn", "signature": "LdapRdn removeFirst()", "full_signature": "public LdapRdn removeFirst()", "class_method_signature": "DistinguishedName.removeFirst()", "testcase": false, "constructor": false}, {"identifier": "removeFirst", "parameters": "(Name path)", "modifiers": "public", "return": "void", "signature": "void removeFirst(Name path)", "full_signature": "public void removeFirst(Name path)", "class_method_signature": "DistinguishedName.removeFirst(Name path)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object clone()", "full_signature": "public Object clone()", "class_method_signature": "DistinguishedName.clone()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "public boolean equals(Object obj)", "class_method_signature": "DistinguishedName.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "DistinguishedName.hashCode()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Object obj)", "modifiers": "public", "return": "int", "signature": "int compareTo(Object obj)", "full_signature": "public int compareTo(Object obj)", "class_method_signature": "DistinguishedName.compareTo(Object obj)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "DistinguishedName.size()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "DistinguishedName.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "public", "return": "Enumeration", "signature": "Enumeration getAll()", "full_signature": "public Enumeration getAll()", "class_method_signature": "DistinguishedName.getAll()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int index)", "modifiers": "public", "return": "String", "signature": "String get(int index)", "full_signature": "public String get(int index)", "class_method_signature": "DistinguishedName.get(int index)", "testcase": false, "constructor": false}, {"identifier": "getPrefix", "parameters": "(int index)", "modifiers": "public", "return": "Name", "signature": "Name getPrefix(int index)", "full_signature": "public Name getPrefix(int index)", "class_method_signature": "DistinguishedName.getPrefix(int index)", "testcase": false, "constructor": false}, {"identifier": "getSuffix", "parameters": "(int index)", "modifiers": "public", "return": "Name", "signature": "Name getSuffix(int index)", "full_signature": "public Name getSuffix(int index)", "class_method_signature": "DistinguishedName.getSuffix(int index)", "testcase": false, "constructor": false}, {"identifier": "startsWith", "parameters": "(Name name)", "modifiers": "public", "return": "boolean", "signature": "boolean startsWith(Name name)", "full_signature": "public boolean startsWith(Name name)", "class_method_signature": "DistinguishedName.startsWith(Name name)", "testcase": false, "constructor": false}, {"identifier": "endsWith", "parameters": "(Name name)", "modifiers": "public", "return": "boolean", "signature": "boolean endsWith(Name name)", "full_signature": "public boolean endsWith(Name name)", "class_method_signature": "DistinguishedName.endsWith(Name name)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(Name name)", "modifiers": "public", "return": "Name", "signature": "Name addAll(Name name)", "full_signature": "public Name addAll(Name name)", "class_method_signature": "DistinguishedName.addAll(Name name)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(int arg0, Name name)", "modifiers": "public", "return": "Name", "signature": "Name addAll(int arg0, Name name)", "full_signature": "public Name addAll(int arg0, Name name)", "class_method_signature": "DistinguishedName.addAll(int arg0, Name name)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(String string)", "modifiers": "public", "return": "Name", "signature": "Name add(String string)", "full_signature": "public Name add(String string)", "class_method_signature": "DistinguishedName.add(String string)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(int index, String string)", "modifiers": "public", "return": "Name", "signature": "Name add(int index, String string)", "full_signature": "public Name add(int index, String string)", "class_method_signature": "DistinguishedName.add(int index, String string)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(int arg0)", "modifiers": "public", "return": "Object", "signature": "Object remove(int arg0)", "full_signature": "public Object remove(int arg0)", "class_method_signature": "DistinguishedName.remove(int arg0)", "testcase": false, "constructor": false}, {"identifier": "removeLast", "parameters": "()", "modifiers": "public", "return": "LdapRdn", "signature": "LdapRdn removeLast()", "full_signature": "public LdapRdn removeLast()", "class_method_signature": "DistinguishedName.removeLast()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(String key, String value)", "modifiers": "public", "return": "void", "signature": "void add(String key, String value)", "full_signature": "public void add(String key, String value)", "class_method_signature": "DistinguishedName.add(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(LdapRdn rdn)", "modifiers": "public", "return": "void", "signature": "void add(LdapRdn rdn)", "full_signature": "public void add(LdapRdn rdn)", "class_method_signature": "DistinguishedName.add(LdapRdn rdn)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(int idx, LdapRdn rdn)", "modifiers": "public", "return": "void", "signature": "void add(int idx, LdapRdn rdn)", "full_signature": "public void add(int idx, LdapRdn rdn)", "class_method_signature": "DistinguishedName.add(int idx, LdapRdn rdn)", "testcase": false, "constructor": false}, {"identifier": "immutableDistinguishedName", "parameters": "()", "modifiers": "public", "return": "DistinguishedName", "signature": "DistinguishedName immutableDistinguishedName()", "full_signature": "public DistinguishedName immutableDistinguishedName()", "class_method_signature": "DistinguishedName.immutableDistinguishedName()", "testcase": false, "constructor": false}, {"identifier": "immutableDistinguishedName", "parameters": "(String dnString)", "modifiers": "public static final", "return": "DistinguishedName", "signature": "DistinguishedName immutableDistinguishedName(String dnString)", "full_signature": "public static final DistinguishedName immutableDistinguishedName(String dnString)", "class_method_signature": "DistinguishedName.immutableDistinguishedName(String dnString)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/core/DistinguishedName.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String toString() {\n\t\tString spacedFormatting = System.getProperty(SPACED_DN_FORMAT_PROPERTY);\n\t\tif (!StringUtils.hasText(spacedFormatting)) {\n\t\t\treturn format(COMPACT);\n\t\t}\n\t\telse {\n\t\t\treturn format(NON_COMPACT);\n\t\t}\n\t}", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "DistinguishedName.toString()", "testcase": false, "constructor": false, "invocations": ["getProperty", "hasText", "format", "format"]}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}