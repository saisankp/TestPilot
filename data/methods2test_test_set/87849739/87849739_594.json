{"test_class": {"identifier": "StoppedKamonTimerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private StoppedTimer sut;", "modifier": "private", "type": "StoppedTimer", "declarator": "sut", "var_name": "sut"}], "file": "services/utils/metrics/src/test/java/org/eclipse/ditto/services/utils/metrics/instruments/timer/StoppedKamonTimerTest.java"}, "test_case": {"identifier": "getTags", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getTags() {\n        assertThat(sut.getTags().keySet()).hasSize(1);\n    }", "signature": "void getTags()", "full_signature": "@Test public void getTags()", "class_method_signature": "StoppedKamonTimerTest.getTags()", "testcase": true, "constructor": false, "invocations": ["hasSize", "assertThat", "keySet", "getTags"]}, "focal_class": {"identifier": "StoppedKamonTimer", "superclass": "", "interfaces": "implements StoppedTimer", "fields": [{"original_string": "private static final String SEGMENT_TAG = \"segment\";", "modifier": "private static final", "type": "String", "declarator": "SEGMENT_TAG = \"segment\"", "var_name": "SEGMENT_TAG"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(StoppedKamonTimer.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(StoppedKamonTimer.class)", "var_name": "LOGGER"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final Map<String, String> tags;", "modifier": "private final", "type": "Map<String, String>", "declarator": "tags", "var_name": "tags"}, {"original_string": "private long startTimestamp;", "modifier": "private", "type": "long", "declarator": "startTimestamp", "var_name": "startTimestamp"}, {"original_string": "private long endTimestamp;", "modifier": "private", "type": "long", "declarator": "endTimestamp", "var_name": "endTimestamp"}], "methods": [{"identifier": "StoppedKamonTimer", "parameters": "(final String name, final Map<String, String> tags, final long startTimestamp,\n            final Map<String, StartedTimer> segments, List<OnStopHandler> onStopHandlers)", "modifiers": "private", "return": "", "signature": " StoppedKamonTimer(final String name, final Map<String, String> tags, final long startTimestamp,\n            final Map<String, StartedTimer> segments, List<OnStopHandler> onStopHandlers)", "full_signature": "private  StoppedKamonTimer(final String name, final Map<String, String> tags, final long startTimestamp,\n            final Map<String, StartedTimer> segments, List<OnStopHandler> onStopHandlers)", "class_method_signature": "StoppedKamonTimer.StoppedKamonTimer(final String name, final Map<String, String> tags, final long startTimestamp,\n            final Map<String, StartedTimer> segments, List<OnStopHandler> onStopHandlers)", "testcase": false, "constructor": true}, {"identifier": "fromStartedTimer", "parameters": "(final StartedTimer startedTimer)", "modifiers": "static", "return": "StoppedTimer", "signature": "StoppedTimer fromStartedTimer(final StartedTimer startedTimer)", "full_signature": "static StoppedTimer fromStartedTimer(final StartedTimer startedTimer)", "class_method_signature": "StoppedKamonTimer.fromStartedTimer(final StartedTimer startedTimer)", "testcase": false, "constructor": false}, {"identifier": "getDuration", "parameters": "()", "modifiers": "@Override public", "return": "Duration", "signature": "Duration getDuration()", "full_signature": "@Override public Duration getDuration()", "class_method_signature": "StoppedKamonTimer.getDuration()", "testcase": false, "constructor": false}, {"identifier": "getTags", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getTags()", "full_signature": "@Override public Map<String, String> getTags()", "class_method_signature": "StoppedKamonTimer.getTags()", "testcase": false, "constructor": false}, {"identifier": "getTag", "parameters": "(final String key)", "modifiers": "@Nullable @Override public", "return": "String", "signature": "String getTag(final String key)", "full_signature": "@Nullable @Override public String getTag(final String key)", "class_method_signature": "StoppedKamonTimer.getTag(final String key)", "testcase": false, "constructor": false}, {"identifier": "getKamonInternalTimer", "parameters": "()", "modifiers": "private", "return": "kamon.metric.Timer", "signature": "kamon.metric.Timer getKamonInternalTimer()", "full_signature": "private kamon.metric.Timer getKamonInternalTimer()", "class_method_signature": "StoppedKamonTimer.getKamonInternalTimer()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "StoppedKamonTimer.getName()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "StoppedKamonTimer.toString()", "testcase": false, "constructor": false}], "file": "services/utils/metrics/src/main/java/org/eclipse/ditto/services/utils/metrics/instruments/timer/StoppedKamonTimer.java"}, "focal_method": {"identifier": "getTags", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "body": "@Override\n    public Map<String, String> getTags() {\n        return new HashMap<>(tags);\n    }", "signature": "Map<String, String> getTags()", "full_signature": "@Override public Map<String, String> getTags()", "class_method_signature": "StoppedKamonTimer.getTags()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}