{"test_class": {"identifier": "MessageMappingProcessorActorTest", "superclass": "extends AbstractMessageMappingProcessorActorTest", "interfaces": "", "fields": [], "file": "services/connectivity/messaging/src/test/java/org/eclipse/ditto/services/connectivity/messaging/MessageMappingProcessorActorTest.java"}, "test_case": {"identifier": "testReplacementOfPlaceholders", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReplacementOfPlaceholders() {\n        final String correlationId = UUID.randomUUID().toString();\n        final AuthorizationContext contextWithPlaceholders =\n                AuthorizationModelFactory.newAuthContext(DittoAuthorizationContextType.UNSPECIFIED,\n                        AuthorizationModelFactory.newAuthSubject(\n                                \"integration:{{header:correlation-id}}:hub-{{   header:content-type   }}\"),\n                        AuthorizationModelFactory.newAuthSubject(\n                                \"integration:{{header:content-type}}:hub-{{ header:correlation-id }}\"));\n\n        final AuthorizationContext expectedAuthContext = TestConstants.Authorization.withUnprefixedSubjects(\n                AuthorizationModelFactory.newAuthContext(\n                        DittoAuthorizationContextType.UNSPECIFIED,\n                        AuthorizationModelFactory.newAuthSubject(\n                                \"integration:\" + correlationId + \":hub-application/json\"),\n                        AuthorizationModelFactory.newAuthSubject(\"integration:application/json:hub-\" + correlationId)));\n\n        testMessageMapping(correlationId, contextWithPlaceholders, ModifyAttribute.class, modifyAttribute -> {\n            assertThat(modifyAttribute.getType()).isEqualTo(ModifyAttribute.TYPE);\n            assertThat(modifyAttribute.getDittoHeaders().getCorrelationId()).contains(correlationId);\n            assertThat(modifyAttribute.getDittoHeaders().getAuthorizationContext().getAuthorizationSubjects())\n                    .isEqualTo(expectedAuthContext.getAuthorizationSubjects());\n\n            // mapped by source <- {{ request:subjectId }}\n            assertThat(modifyAttribute.getDittoHeaders().get(\"source\"))\n                    .contains(\"integration:\" + correlationId + \":hub-application/json\");\n        });\n    }", "signature": "void testReplacementOfPlaceholders()", "full_signature": "@Test public void testReplacementOfPlaceholders()", "class_method_signature": "MessageMappingProcessorActorTest.testReplacementOfPlaceholders()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "newAuthContext", "newAuthSubject", "newAuthSubject", "withUnprefixedSubjects", "newAuthContext", "newAuthSubject", "newAuthSubject", "testMessageMapping", "isEqualTo", "assertThat", "getType", "contains", "assertThat", "getCorrelationId", "getDittoHeaders", "isEqualTo", "assertThat", "getAuthorizationSubjects", "getAuthorizationContext", "getDittoHeaders", "getAuthorizationSubjects", "contains", "assertThat", "get", "getDittoHeaders"]}, "focal_class": {"identifier": "MessageMappingProcessorActor", "superclass": "extends AbstractGraphActor<MessageMappingProcessorActor.OutboundSignalWithId, OutboundSignal>", "interfaces": "", "fields": [{"original_string": "public static final String ACTOR_NAME = \"messageMappingProcessor\";", "modifier": "public static final", "type": "String", "declarator": "ACTOR_NAME = \"messageMappingProcessor\"", "var_name": "ACTOR_NAME"}, {"original_string": "private static final String MESSAGE_MAPPING_PROCESSOR_DISPATCHER = \"message-mapping-processor-dispatcher\";", "modifier": "private static final", "type": "String", "declarator": "MESSAGE_MAPPING_PROCESSOR_DISPATCHER = \"message-mapping-processor-dispatcher\"", "var_name": "MESSAGE_MAPPING_PROCESSOR_DISPATCHER"}, {"original_string": "private final ThreadSafeDittoLogger logger;", "modifier": "private final", "type": "ThreadSafeDittoLogger", "declarator": "logger", "var_name": "logger"}, {"original_string": "private final ActorRef clientActor;", "modifier": "private final", "type": "ActorRef", "declarator": "clientActor", "var_name": "clientActor"}, {"original_string": "private final MessageMappingProcessor messageMappingProcessor;", "modifier": "private final", "type": "MessageMappingProcessor", "declarator": "messageMappingProcessor", "var_name": "messageMappingProcessor"}, {"original_string": "private final ConnectionId connectionId;", "modifier": "private final", "type": "ConnectionId", "declarator": "connectionId", "var_name": "connectionId"}, {"original_string": "private final ActorRef proxyActor;", "modifier": "private final", "type": "ActorRef", "declarator": "proxyActor", "var_name": "proxyActor"}, {"original_string": "private final ActorRef connectionActor;", "modifier": "private final", "type": "ActorRef", "declarator": "connectionActor", "var_name": "connectionActor"}, {"original_string": "private final MappingConfig mappingConfig;", "modifier": "private final", "type": "MappingConfig", "declarator": "mappingConfig", "var_name": "mappingConfig"}, {"original_string": "private final DefaultConnectionMonitorRegistry connectionMonitorRegistry;", "modifier": "private final", "type": "DefaultConnectionMonitorRegistry", "declarator": "connectionMonitorRegistry", "var_name": "connectionMonitorRegistry"}, {"original_string": "private final ConnectionMonitor responseDispatchedMonitor;", "modifier": "private final", "type": "ConnectionMonitor", "declarator": "responseDispatchedMonitor", "var_name": "responseDispatchedMonitor"}, {"original_string": "private final ConnectionMonitor responseDroppedMonitor;", "modifier": "private final", "type": "ConnectionMonitor", "declarator": "responseDroppedMonitor", "var_name": "responseDroppedMonitor"}, {"original_string": "private final ConnectionMonitor responseMappedMonitor;", "modifier": "private final", "type": "ConnectionMonitor", "declarator": "responseMappedMonitor", "var_name": "responseMappedMonitor"}, {"original_string": "private final SignalEnrichmentFacade signalEnrichmentFacade;", "modifier": "private final", "type": "SignalEnrichmentFacade", "declarator": "signalEnrichmentFacade", "var_name": "signalEnrichmentFacade"}, {"original_string": "private final int processorPoolSize;", "modifier": "private final", "type": "int", "declarator": "processorPoolSize", "var_name": "processorPoolSize"}, {"original_string": "private final SourceQueue<ExternalMessageWithSender> inboundSourceQueue;", "modifier": "private final", "type": "SourceQueue<ExternalMessageWithSender>", "declarator": "inboundSourceQueue", "var_name": "inboundSourceQueue"}, {"original_string": "private final DittoRuntimeExceptionToErrorResponseFunction toErrorResponseFunction;", "modifier": "private final", "type": "DittoRuntimeExceptionToErrorResponseFunction", "declarator": "toErrorResponseFunction", "var_name": "toErrorResponseFunction"}, {"original_string": "private final AcknowledgementAggregatorActorStarter ackregatorStarter;", "modifier": "private final", "type": "AcknowledgementAggregatorActorStarter", "declarator": "ackregatorStarter", "var_name": "ackregatorStarter"}], "methods": [{"identifier": "MessageMappingProcessorActor", "parameters": "(final ActorRef proxyActor,\n            final ActorRef clientActor,\n            final MessageMappingProcessor messageMappingProcessor,\n            final Connection connection,\n            final ActorRef connectionActor,\n            final int processorPoolSize)", "modifiers": "@SuppressWarnings(\"unused\") private", "return": "", "signature": " MessageMappingProcessorActor(final ActorRef proxyActor,\n            final ActorRef clientActor,\n            final MessageMappingProcessor messageMappingProcessor,\n            final Connection connection,\n            final ActorRef connectionActor,\n            final int processorPoolSize)", "full_signature": "@SuppressWarnings(\"unused\") private  MessageMappingProcessorActor(final ActorRef proxyActor,\n            final ActorRef clientActor,\n            final MessageMappingProcessor messageMappingProcessor,\n            final Connection connection,\n            final ActorRef connectionActor,\n            final int processorPoolSize)", "class_method_signature": "MessageMappingProcessorActor.MessageMappingProcessorActor(final ActorRef proxyActor,\n            final ActorRef clientActor,\n            final MessageMappingProcessor messageMappingProcessor,\n            final Connection connection,\n            final ActorRef connectionActor,\n            final int processorPoolSize)", "testcase": false, "constructor": true}, {"identifier": "determinePoolSize", "parameters": "(final int connectionPoolSize, final int maxPoolSize)", "modifiers": "private", "return": "int", "signature": "int determinePoolSize(final int connectionPoolSize, final int maxPoolSize)", "full_signature": "private int determinePoolSize(final int connectionPoolSize, final int maxPoolSize)", "class_method_signature": "MessageMappingProcessorActor.determinePoolSize(final int connectionPoolSize, final int maxPoolSize)", "testcase": false, "constructor": false}, {"identifier": "props", "parameters": "(final ActorRef proxyActor,\n            final ActorRef clientActor,\n            final MessageMappingProcessor processor,\n            final Connection connection,\n            final ActorRef connectionActor,\n            final int processorPoolSize)", "modifiers": "public static", "return": "Props", "signature": "Props props(final ActorRef proxyActor,\n            final ActorRef clientActor,\n            final MessageMappingProcessor processor,\n            final Connection connection,\n            final ActorRef connectionActor,\n            final int processorPoolSize)", "full_signature": "public static Props props(final ActorRef proxyActor,\n            final ActorRef clientActor,\n            final MessageMappingProcessor processor,\n            final Connection connection,\n            final ActorRef connectionActor,\n            final int processorPoolSize)", "class_method_signature": "MessageMappingProcessorActor.props(final ActorRef proxyActor,\n            final ActorRef clientActor,\n            final MessageMappingProcessor processor,\n            final Connection connection,\n            final ActorRef connectionActor,\n            final int processorPoolSize)", "testcase": false, "constructor": false}, {"identifier": "getBufferSize", "parameters": "()", "modifiers": "@Override protected", "return": "int", "signature": "int getBufferSize()", "full_signature": "@Override protected int getBufferSize()", "class_method_signature": "MessageMappingProcessorActor.getBufferSize()", "testcase": false, "constructor": false}, {"identifier": "preEnhancement", "parameters": "(final ReceiveBuilder receiveBuilder)", "modifiers": "@Override protected", "return": "void", "signature": "void preEnhancement(final ReceiveBuilder receiveBuilder)", "full_signature": "@Override protected void preEnhancement(final ReceiveBuilder receiveBuilder)", "class_method_signature": "MessageMappingProcessorActor.preEnhancement(final ReceiveBuilder receiveBuilder)", "testcase": false, "constructor": false}, {"identifier": "handleNotExpectedAcknowledgement", "parameters": "(final Acknowledgement acknowledgement)", "modifiers": "private", "return": "void", "signature": "void handleNotExpectedAcknowledgement(final Acknowledgement acknowledgement)", "full_signature": "private void handleNotExpectedAcknowledgement(final Acknowledgement acknowledgement)", "class_method_signature": "MessageMappingProcessorActor.handleNotExpectedAcknowledgement(final Acknowledgement acknowledgement)", "testcase": false, "constructor": false}, {"identifier": "materializeInboundStream", "parameters": "(final int processorPoolSize)", "modifiers": "private", "return": "SourceQueue<ExternalMessageWithSender>", "signature": "SourceQueue<ExternalMessageWithSender> materializeInboundStream(final int processorPoolSize)", "full_signature": "private SourceQueue<ExternalMessageWithSender> materializeInboundStream(final int processorPoolSize)", "class_method_signature": "MessageMappingProcessorActor.materializeInboundStream(final int processorPoolSize)", "testcase": false, "constructor": false}, {"identifier": "dispatchIncomingSignal", "parameters": "(final IncomingSignal incomingSignal)", "modifiers": "private", "return": "void", "signature": "void dispatchIncomingSignal(final IncomingSignal incomingSignal)", "full_signature": "private void dispatchIncomingSignal(final IncomingSignal incomingSignal)", "class_method_signature": "MessageMappingProcessorActor.dispatchIncomingSignal(final IncomingSignal incomingSignal)", "testcase": false, "constructor": false}, {"identifier": "isLive", "parameters": "(final Signal<?> signal)", "modifiers": "private static", "return": "boolean", "signature": "boolean isLive(final Signal<?> signal)", "full_signature": "private static boolean isLive(final Signal<?> signal)", "class_method_signature": "MessageMappingProcessorActor.isLive(final Signal<?> signal)", "testcase": false, "constructor": false}, {"identifier": "handleErrorDuringStartingOfAckregator", "parameters": "(final DittoRuntimeException e, final DittoHeaders dittoHeaders,\n            final ActorRef sender)", "modifiers": "private", "return": "void", "signature": "void handleErrorDuringStartingOfAckregator(final DittoRuntimeException e, final DittoHeaders dittoHeaders,\n            final ActorRef sender)", "full_signature": "private void handleErrorDuringStartingOfAckregator(final DittoRuntimeException e, final DittoHeaders dittoHeaders,\n            final ActorRef sender)", "class_method_signature": "MessageMappingProcessorActor.handleErrorDuringStartingOfAckregator(final DittoRuntimeException e, final DittoHeaders dittoHeaders,\n            final ActorRef sender)", "testcase": false, "constructor": false}, {"identifier": "startAckregatorAndForwardSignal", "parameters": "(final Signal<?> signal, final ActorRef sender)", "modifiers": "private", "return": "void", "signature": "void startAckregatorAndForwardSignal(final Signal<?> signal, final ActorRef sender)", "full_signature": "private void startAckregatorAndForwardSignal(final Signal<?> signal, final ActorRef sender)", "class_method_signature": "MessageMappingProcessorActor.startAckregatorAndForwardSignal(final Signal<?> signal, final ActorRef sender)", "testcase": false, "constructor": false}, {"identifier": "handleIncomingMappedSignal", "parameters": "(\n            final Pair<Source<Signal<?>, ?>, ActorRef> mappedSignalsWithSender)", "modifiers": "private", "return": "Source<IncomingSignal, ?>", "signature": "Source<IncomingSignal, ?> handleIncomingMappedSignal(\n            final Pair<Source<Signal<?>, ?>, ActorRef> mappedSignalsWithSender)", "full_signature": "private Source<IncomingSignal, ?> handleIncomingMappedSignal(\n            final Pair<Source<Signal<?>, ?>, ActorRef> mappedSignalsWithSender)", "class_method_signature": "MessageMappingProcessorActor.handleIncomingMappedSignal(\n            final Pair<Source<Signal<?>, ?>, ActorRef> mappedSignalsWithSender)", "testcase": false, "constructor": false}, {"identifier": "onIncomingMappedSignal", "parameters": "(final ActorRef sender)", "modifiers": "private", "return": "PartialFunction<Signal<?>, Source<IncomingSignal, NotUsed>>", "signature": "PartialFunction<Signal<?>, Source<IncomingSignal, NotUsed>> onIncomingMappedSignal(final ActorRef sender)", "full_signature": "private PartialFunction<Signal<?>, Source<IncomingSignal, NotUsed>> onIncomingMappedSignal(final ActorRef sender)", "class_method_signature": "MessageMappingProcessorActor.onIncomingMappedSignal(final ActorRef sender)", "testcase": false, "constructor": false}, {"identifier": "forwardToConnectionActor", "parameters": "(final Signal<?> signal, final ActorRef sender)", "modifiers": "private", "return": "Source<T, NotUsed>", "signature": "Source<T, NotUsed> forwardToConnectionActor(final Signal<?> signal, final ActorRef sender)", "full_signature": "private Source<T, NotUsed> forwardToConnectionActor(final Signal<?> signal, final ActorRef sender)", "class_method_signature": "MessageMappingProcessorActor.forwardToConnectionActor(final Signal<?> signal, final ActorRef sender)", "testcase": false, "constructor": false}, {"identifier": "getReturnAddress", "parameters": "(final Signal<?> signal)", "modifiers": "private", "return": "ActorRef", "signature": "ActorRef getReturnAddress(final Signal<?> signal)", "full_signature": "private ActorRef getReturnAddress(final Signal<?> signal)", "class_method_signature": "MessageMappingProcessorActor.getReturnAddress(final Signal<?> signal)", "testcase": false, "constructor": false}, {"identifier": "appendConnectionAcknowledgementsToSignal", "parameters": "(final ExternalMessage message,\n            final Signal<?> signal)", "modifiers": "private static", "return": "Signal<?>", "signature": "Signal<?> appendConnectionAcknowledgementsToSignal(final ExternalMessage message,\n            final Signal<?> signal)", "full_signature": "private static Signal<?> appendConnectionAcknowledgementsToSignal(final ExternalMessage message,\n            final Signal<?> signal)", "class_method_signature": "MessageMappingProcessorActor.appendConnectionAcknowledgementsToSignal(final ExternalMessage message,\n            final Signal<?> signal)", "testcase": false, "constructor": false}, {"identifier": "filterAcknowledgements", "parameters": "(final Signal<?> signal, final @Nullable String filter)", "modifiers": "static", "return": "Signal<?>", "signature": "Signal<?> filterAcknowledgements(final Signal<?> signal, final @Nullable String filter)", "full_signature": "static Signal<?> filterAcknowledgements(final Signal<?> signal, final @Nullable String filter)", "class_method_signature": "MessageMappingProcessorActor.filterAcknowledgements(final Signal<?> signal, final @Nullable String filter)", "testcase": false, "constructor": false}, {"identifier": "handleDittoRuntimeException", "parameters": "(final DittoRuntimeException exception)", "modifiers": "@Override protected", "return": "void", "signature": "void handleDittoRuntimeException(final DittoRuntimeException exception)", "full_signature": "@Override protected void handleDittoRuntimeException(final DittoRuntimeException exception)", "class_method_signature": "MessageMappingProcessorActor.handleDittoRuntimeException(final DittoRuntimeException exception)", "testcase": false, "constructor": false}, {"identifier": "mapMessage", "parameters": "(final OutboundSignal message)", "modifiers": "@Override protected", "return": "OutboundSignalWithId", "signature": "OutboundSignalWithId mapMessage(final OutboundSignal message)", "full_signature": "@Override protected OutboundSignalWithId mapMessage(final OutboundSignal message)", "class_method_signature": "MessageMappingProcessorActor.mapMessage(final OutboundSignal message)", "testcase": false, "constructor": false}, {"identifier": "processMessageFlow", "parameters": "()", "modifiers": "@Override protected", "return": "Flow<OutboundSignalWithId, OutboundSignalWithId, NotUsed>", "signature": "Flow<OutboundSignalWithId, OutboundSignalWithId, NotUsed> processMessageFlow()", "full_signature": "@Override protected Flow<OutboundSignalWithId, OutboundSignalWithId, NotUsed> processMessageFlow()", "class_method_signature": "MessageMappingProcessorActor.processMessageFlow()", "testcase": false, "constructor": false}, {"identifier": "processedMessageSink", "parameters": "()", "modifiers": "@Override protected", "return": "Sink<OutboundSignalWithId, ?>", "signature": "Sink<OutboundSignalWithId, ?> processedMessageSink()", "full_signature": "@Override protected Sink<OutboundSignalWithId, ?> processedMessageSink()", "class_method_signature": "MessageMappingProcessorActor.processedMessageSink()", "testcase": false, "constructor": false}, {"identifier": "splitByTargetExtraFieldsFlow", "parameters": "()", "modifiers": "private static", "return": "Flow<OutboundSignalWithId, Pair<OutboundSignalWithId, FilteredTopic>, NotUsed>", "signature": "Flow<OutboundSignalWithId, Pair<OutboundSignalWithId, FilteredTopic>, NotUsed> splitByTargetExtraFieldsFlow()", "full_signature": "private static Flow<OutboundSignalWithId, Pair<OutboundSignalWithId, FilteredTopic>, NotUsed> splitByTargetExtraFieldsFlow()", "class_method_signature": "MessageMappingProcessorActor.splitByTargetExtraFieldsFlow()", "testcase": false, "constructor": false}, {"identifier": "enrichAndFilterSignal", "parameters": "(\n            final Pair<OutboundSignalWithId, FilteredTopic> outboundSignalWithExtraFields)", "modifiers": "private", "return": "CompletionStage<Collection<OutboundSignalWithId>>", "signature": "CompletionStage<Collection<OutboundSignalWithId>> enrichAndFilterSignal(\n            final Pair<OutboundSignalWithId, FilteredTopic> outboundSignalWithExtraFields)", "full_signature": "private CompletionStage<Collection<OutboundSignalWithId>> enrichAndFilterSignal(\n            final Pair<OutboundSignalWithId, FilteredTopic> outboundSignalWithExtraFields)", "class_method_signature": "MessageMappingProcessorActor.enrichAndFilterSignal(\n            final Pair<OutboundSignalWithId, FilteredTopic> outboundSignalWithExtraFields)", "testcase": false, "constructor": false}, {"identifier": "recoverFromEnrichmentError", "parameters": "(final OutboundSignalWithId outboundSignal,\n            final Target target, final Throwable error)", "modifiers": "private", "return": "OutboundSignalWithId", "signature": "OutboundSignalWithId recoverFromEnrichmentError(final OutboundSignalWithId outboundSignal,\n            final Target target, final Throwable error)", "full_signature": "private OutboundSignalWithId recoverFromEnrichmentError(final OutboundSignalWithId outboundSignal,\n            final Target target, final Throwable error)", "class_method_signature": "MessageMappingProcessorActor.recoverFromEnrichmentError(final OutboundSignalWithId outboundSignal,\n            final Target target, final Throwable error)", "testcase": false, "constructor": false}, {"identifier": "logEnrichmentFailure", "parameters": "(final OutboundSignal outboundSignal, final ConnectionId connectionId,\n            final Throwable error)", "modifiers": "private", "return": "void", "signature": "void logEnrichmentFailure(final OutboundSignal outboundSignal, final ConnectionId connectionId,\n            final Throwable error)", "full_signature": "private void logEnrichmentFailure(final OutboundSignal outboundSignal, final ConnectionId connectionId,\n            final Throwable error)", "class_method_signature": "MessageMappingProcessorActor.logEnrichmentFailure(final OutboundSignal outboundSignal, final ConnectionId connectionId,\n            final Throwable error)", "testcase": false, "constructor": false}, {"identifier": "handleInboundMessage", "parameters": "(final ExternalMessage externalMessage)", "modifiers": "private", "return": "void", "signature": "void handleInboundMessage(final ExternalMessage externalMessage)", "full_signature": "private void handleInboundMessage(final ExternalMessage externalMessage)", "class_method_signature": "MessageMappingProcessorActor.handleInboundMessage(final ExternalMessage externalMessage)", "testcase": false, "constructor": false}, {"identifier": "mapInboundMessage", "parameters": "(final ExternalMessageWithSender withSender)", "modifiers": "private", "return": "Pair<Source<Signal<?>, ?>, ActorRef>", "signature": "Pair<Source<Signal<?>, ?>, ActorRef> mapInboundMessage(final ExternalMessageWithSender withSender)", "full_signature": "private Pair<Source<Signal<?>, ?>, ActorRef> mapInboundMessage(final ExternalMessageWithSender withSender)", "class_method_signature": "MessageMappingProcessorActor.mapInboundMessage(final ExternalMessageWithSender withSender)", "testcase": false, "constructor": false}, {"identifier": "getCorrelationIdOrNull", "parameters": "(final ExternalMessage externalMessage)", "modifiers": "@Nullable private static", "return": "String", "signature": "String getCorrelationIdOrNull(final ExternalMessage externalMessage)", "full_signature": "@Nullable private static String getCorrelationIdOrNull(final ExternalMessage externalMessage)", "class_method_signature": "MessageMappingProcessorActor.getCorrelationIdOrNull(final ExternalMessage externalMessage)", "testcase": false, "constructor": false}, {"identifier": "handleInboundException", "parameters": "(final Exception e,\n            final ExternalMessageWithSender withSender,\n            @Nullable final TopicPath topicPath,\n            @Nullable final AuthorizationContext authorizationContext)", "modifiers": "private", "return": "void", "signature": "void handleInboundException(final Exception e,\n            final ExternalMessageWithSender withSender,\n            @Nullable final TopicPath topicPath,\n            @Nullable final AuthorizationContext authorizationContext)", "full_signature": "private void handleInboundException(final Exception e,\n            final ExternalMessageWithSender withSender,\n            @Nullable final TopicPath topicPath,\n            @Nullable final AuthorizationContext authorizationContext)", "class_method_signature": "MessageMappingProcessorActor.handleInboundException(final Exception e,\n            final ExternalMessageWithSender withSender,\n            @Nullable final TopicPath topicPath,\n            @Nullable final AuthorizationContext authorizationContext)", "testcase": false, "constructor": false}, {"identifier": "mapExternalMessageToSignal", "parameters": "(final ExternalMessageWithSender withSender)", "modifiers": "private", "return": "Source<Signal<?>, ?>", "signature": "Source<Signal<?>, ?> mapExternalMessageToSignal(final ExternalMessageWithSender withSender)", "full_signature": "private Source<Signal<?>, ?> mapExternalMessageToSignal(final ExternalMessageWithSender withSender)", "class_method_signature": "MessageMappingProcessorActor.mapExternalMessageToSignal(final ExternalMessageWithSender withSender)", "testcase": false, "constructor": false}, {"identifier": "handleMappingResult", "parameters": "(final ExternalMessageWithSender withSender,\n            final AuthorizationContext authorizationContext)", "modifiers": "private", "return": "InboundMappingResultHandler", "signature": "InboundMappingResultHandler handleMappingResult(final ExternalMessageWithSender withSender,\n            final AuthorizationContext authorizationContext)", "full_signature": "private InboundMappingResultHandler handleMappingResult(final ExternalMessageWithSender withSender,\n            final AuthorizationContext authorizationContext)", "class_method_signature": "MessageMappingProcessorActor.handleMappingResult(final ExternalMessageWithSender withSender,\n            final AuthorizationContext authorizationContext)", "testcase": false, "constructor": false}, {"identifier": "handleErrorResponse", "parameters": "(final DittoRuntimeException exception, final ErrorResponse<?> errorResponse,\n            final ActorRef sender)", "modifiers": "private", "return": "void", "signature": "void handleErrorResponse(final DittoRuntimeException exception, final ErrorResponse<?> errorResponse,\n            final ActorRef sender)", "full_signature": "private void handleErrorResponse(final DittoRuntimeException exception, final ErrorResponse<?> errorResponse,\n            final ActorRef sender)", "class_method_signature": "MessageMappingProcessorActor.handleErrorResponse(final DittoRuntimeException exception, final ErrorResponse<?> errorResponse,\n            final ActorRef sender)", "testcase": false, "constructor": false}, {"identifier": "handleCommandResponse", "parameters": "(final CommandResponse<?> response,\n            @Nullable final DittoRuntimeException exception, final ActorRef sender)", "modifiers": "private", "return": "void", "signature": "void handleCommandResponse(final CommandResponse<?> response,\n            @Nullable final DittoRuntimeException exception, final ActorRef sender)", "full_signature": "private void handleCommandResponse(final CommandResponse<?> response,\n            @Nullable final DittoRuntimeException exception, final ActorRef sender)", "class_method_signature": "MessageMappingProcessorActor.handleCommandResponse(final CommandResponse<?> response,\n            @Nullable final DittoRuntimeException exception, final ActorRef sender)", "testcase": false, "constructor": false}, {"identifier": "recordResponse", "parameters": "(final CommandResponse<?> response, @Nullable final DittoRuntimeException exception)", "modifiers": "private", "return": "void", "signature": "void recordResponse(final CommandResponse<?> response, @Nullable final DittoRuntimeException exception)", "full_signature": "private void recordResponse(final CommandResponse<?> response, @Nullable final DittoRuntimeException exception)", "class_method_signature": "MessageMappingProcessorActor.recordResponse(final CommandResponse<?> response, @Nullable final DittoRuntimeException exception)", "testcase": false, "constructor": false}, {"identifier": "handleOutboundSignal", "parameters": "(final OutboundSignalWithId outbound)", "modifiers": "private", "return": "Source<OutboundSignalWithId, ?>", "signature": "Source<OutboundSignalWithId, ?> handleOutboundSignal(final OutboundSignalWithId outbound)", "full_signature": "private Source<OutboundSignalWithId, ?> handleOutboundSignal(final OutboundSignalWithId outbound)", "class_method_signature": "MessageMappingProcessorActor.handleOutboundSignal(final OutboundSignalWithId outbound)", "testcase": false, "constructor": false}, {"identifier": "forwardToPublisherActor", "parameters": "(final OutboundSignal.MultiMapped mappedEnvelop)", "modifiers": "private", "return": "void", "signature": "void forwardToPublisherActor(final OutboundSignal.MultiMapped mappedEnvelop)", "full_signature": "private void forwardToPublisherActor(final OutboundSignal.MultiMapped mappedEnvelop)", "class_method_signature": "MessageMappingProcessorActor.forwardToPublisherActor(final OutboundSignal.MultiMapped mappedEnvelop)", "testcase": false, "constructor": false}, {"identifier": "handleSignal", "parameters": "(final Signal<?> signal, final ActorRef sender)", "modifiers": "private", "return": "void", "signature": "void handleSignal(final Signal<?> signal, final ActorRef sender)", "full_signature": "private void handleSignal(final Signal<?> signal, final ActorRef sender)", "class_method_signature": "MessageMappingProcessorActor.handleSignal(final Signal<?> signal, final ActorRef sender)", "testcase": false, "constructor": false}, {"identifier": "mapToExternalMessage", "parameters": "(final OutboundSignalWithId outbound)", "modifiers": "private", "return": "Source<OutboundSignalWithId, ?>", "signature": "Source<OutboundSignalWithId, ?> mapToExternalMessage(final OutboundSignalWithId outbound)", "full_signature": "private Source<OutboundSignalWithId, ?> mapToExternalMessage(final OutboundSignalWithId outbound)", "class_method_signature": "MessageMappingProcessorActor.mapToExternalMessage(final OutboundSignalWithId outbound)", "testcase": false, "constructor": false}, {"identifier": "getMonitorsForDroppedSignal", "parameters": "(final OutboundSignal outbound,\n            final ConnectionId connectionId)", "modifiers": "private", "return": "Set<ConnectionMonitor>", "signature": "Set<ConnectionMonitor> getMonitorsForDroppedSignal(final OutboundSignal outbound,\n            final ConnectionId connectionId)", "full_signature": "private Set<ConnectionMonitor> getMonitorsForDroppedSignal(final OutboundSignal outbound,\n            final ConnectionId connectionId)", "class_method_signature": "MessageMappingProcessorActor.getMonitorsForDroppedSignal(final OutboundSignal outbound,\n            final ConnectionId connectionId)", "testcase": false, "constructor": false}, {"identifier": "getMonitorsForMappedSignal", "parameters": "(final OutboundSignal outbound,\n            final ConnectionId connectionId)", "modifiers": "private", "return": "Set<ConnectionMonitor>", "signature": "Set<ConnectionMonitor> getMonitorsForMappedSignal(final OutboundSignal outbound,\n            final ConnectionId connectionId)", "full_signature": "private Set<ConnectionMonitor> getMonitorsForMappedSignal(final OutboundSignal outbound,\n            final ConnectionId connectionId)", "class_method_signature": "MessageMappingProcessorActor.getMonitorsForMappedSignal(final OutboundSignal outbound,\n            final ConnectionId connectionId)", "testcase": false, "constructor": false}, {"identifier": "getMonitorsForOutboundSignal", "parameters": "(final OutboundSignal outbound,\n            final ConnectionId connectionId,\n            final MetricType metricType,\n            final LogType logType,\n            final ConnectionMonitor responseMonitor)", "modifiers": "private", "return": "Set<ConnectionMonitor>", "signature": "Set<ConnectionMonitor> getMonitorsForOutboundSignal(final OutboundSignal outbound,\n            final ConnectionId connectionId,\n            final MetricType metricType,\n            final LogType logType,\n            final ConnectionMonitor responseMonitor)", "full_signature": "private Set<ConnectionMonitor> getMonitorsForOutboundSignal(final OutboundSignal outbound,\n            final ConnectionId connectionId,\n            final MetricType metricType,\n            final LogType logType,\n            final ConnectionMonitor responseMonitor)", "class_method_signature": "MessageMappingProcessorActor.getMonitorsForOutboundSignal(final OutboundSignal outbound,\n            final ConnectionId connectionId,\n            final MetricType metricType,\n            final LogType logType,\n            final ConnectionMonitor responseMonitor)", "testcase": false, "constructor": false}, {"identifier": "applySignalIdEnforcement", "parameters": "(final ExternalMessage externalMessage, final Signal<?> signal)", "modifiers": "private", "return": "void", "signature": "void applySignalIdEnforcement(final ExternalMessage externalMessage, final Signal<?> signal)", "full_signature": "private void applySignalIdEnforcement(final ExternalMessage externalMessage, final Signal<?> signal)", "class_method_signature": "MessageMappingProcessorActor.applySignalIdEnforcement(final ExternalMessage externalMessage, final Signal<?> signal)", "testcase": false, "constructor": false}, {"identifier": "applyInboundHeaderMapping", "parameters": "(final Signal<?> signal,\n            final ExternalMessage externalMessage,\n            @Nullable final AuthorizationContext authorizationContext,\n            @Nullable final TopicPath topicPath,\n            final DittoHeaders extraInternalHeaders)", "modifiers": "private", "return": "DittoHeaders", "signature": "DittoHeaders applyInboundHeaderMapping(final Signal<?> signal,\n            final ExternalMessage externalMessage,\n            @Nullable final AuthorizationContext authorizationContext,\n            @Nullable final TopicPath topicPath,\n            final DittoHeaders extraInternalHeaders)", "full_signature": "private DittoHeaders applyInboundHeaderMapping(final Signal<?> signal,\n            final ExternalMessage externalMessage,\n            @Nullable final AuthorizationContext authorizationContext,\n            @Nullable final TopicPath topicPath,\n            final DittoHeaders extraInternalHeaders)", "class_method_signature": "MessageMappingProcessorActor.applyInboundHeaderMapping(final Signal<?> signal,\n            final ExternalMessage externalMessage,\n            @Nullable final AuthorizationContext authorizationContext,\n            @Nullable final TopicPath topicPath,\n            final DittoHeaders extraInternalHeaders)", "testcase": false, "constructor": false}, {"identifier": "appendInternalHeaders", "parameters": "(final DittoHeadersBuilder<?, ?> builder,\n            @Nullable final AuthorizationContext authorizationContext,\n            final DittoHeaders extraInternalHeaders,\n            final boolean appendRandomCorrelationId)", "modifiers": "private", "return": "DittoHeadersBuilder<?, ?>", "signature": "DittoHeadersBuilder<?, ?> appendInternalHeaders(final DittoHeadersBuilder<?, ?> builder,\n            @Nullable final AuthorizationContext authorizationContext,\n            final DittoHeaders extraInternalHeaders,\n            final boolean appendRandomCorrelationId)", "full_signature": "private DittoHeadersBuilder<?, ?> appendInternalHeaders(final DittoHeadersBuilder<?, ?> builder,\n            @Nullable final AuthorizationContext authorizationContext,\n            final DittoHeaders extraInternalHeaders,\n            final boolean appendRandomCorrelationId)", "class_method_signature": "MessageMappingProcessorActor.appendInternalHeaders(final DittoHeadersBuilder<?, ?> builder,\n            @Nullable final AuthorizationContext authorizationContext,\n            final DittoHeaders extraInternalHeaders,\n            final boolean appendRandomCorrelationId)", "testcase": false, "constructor": false}, {"identifier": "toMultiMappedOutboundSignal", "parameters": "(\n            final Source<OutboundSignalWithId, T> source)", "modifiers": "private", "return": "CompletionStage<Collection<OutboundSignal.MultiMapped>>", "signature": "CompletionStage<Collection<OutboundSignal.MultiMapped>> toMultiMappedOutboundSignal(\n            final Source<OutboundSignalWithId, T> source)", "full_signature": "private CompletionStage<Collection<OutboundSignal.MultiMapped>> toMultiMappedOutboundSignal(\n            final Source<OutboundSignalWithId, T> source)", "class_method_signature": "MessageMappingProcessorActor.toMultiMappedOutboundSignal(\n            final Source<OutboundSignalWithId, T> source)", "testcase": false, "constructor": false}, {"identifier": "appendConnectionIdToAcknowledgementOrResponse", "parameters": "(final T commandResponse,\n            final ConnectionId connectionId)", "modifiers": "static", "return": "T", "signature": "T appendConnectionIdToAcknowledgementOrResponse(final T commandResponse,\n            final ConnectionId connectionId)", "full_signature": "static T appendConnectionIdToAcknowledgementOrResponse(final T commandResponse,\n            final ConnectionId connectionId)", "class_method_signature": "MessageMappingProcessorActor.appendConnectionIdToAcknowledgementOrResponse(final T commandResponse,\n            final ConnectionId connectionId)", "testcase": false, "constructor": false}, {"identifier": "appendConnectionIdToAcknowledgements", "parameters": "(final Acknowledgements acknowledgements,\n            final ConnectionId connectionId)", "modifiers": "static", "return": "Acknowledgements", "signature": "Acknowledgements appendConnectionIdToAcknowledgements(final Acknowledgements acknowledgements,\n            final ConnectionId connectionId)", "full_signature": "static Acknowledgements appendConnectionIdToAcknowledgements(final Acknowledgements acknowledgements,\n            final ConnectionId connectionId)", "class_method_signature": "MessageMappingProcessorActor.appendConnectionIdToAcknowledgements(final Acknowledgements acknowledgements,\n            final ConnectionId connectionId)", "testcase": false, "constructor": false}, {"identifier": "applyFilter", "parameters": "(final OutboundSignalWithId outboundSignalWithExtra,\n            final FilteredTopic filteredTopic)", "modifiers": "private static", "return": "Collection<OutboundSignalWithId>", "signature": "Collection<OutboundSignalWithId> applyFilter(final OutboundSignalWithId outboundSignalWithExtra,\n            final FilteredTopic filteredTopic)", "full_signature": "private static Collection<OutboundSignalWithId> applyFilter(final OutboundSignalWithId outboundSignalWithExtra,\n            final FilteredTopic filteredTopic)", "class_method_signature": "MessageMappingProcessorActor.applyFilter(final OutboundSignalWithId outboundSignalWithExtra,\n            final FilteredTopic filteredTopic)", "testcase": false, "constructor": false}, {"identifier": "stackTraceAsString", "parameters": "(final DittoRuntimeException exception)", "modifiers": "private static", "return": "String", "signature": "String stackTraceAsString(final DittoRuntimeException exception)", "full_signature": "private static String stackTraceAsString(final DittoRuntimeException exception)", "class_method_signature": "MessageMappingProcessorActor.stackTraceAsString(final DittoRuntimeException exception)", "testcase": false, "constructor": false}, {"identifier": "isSuccessResponse", "parameters": "(final CommandResponse<?> response)", "modifiers": "private static", "return": "boolean", "signature": "boolean isSuccessResponse(final CommandResponse<?> response)", "full_signature": "private static boolean isSuccessResponse(final CommandResponse<?> response)", "class_method_signature": "MessageMappingProcessorActor.isSuccessResponse(final CommandResponse<?> response)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationContextOrThrow", "parameters": "(final ExternalMessage externalMessage)", "modifiers": "private static", "return": "AuthorizationContext", "signature": "AuthorizationContext getAuthorizationContextOrThrow(final ExternalMessage externalMessage)", "full_signature": "private static AuthorizationContext getAuthorizationContextOrThrow(final ExternalMessage externalMessage)", "class_method_signature": "MessageMappingProcessorActor.getAuthorizationContextOrThrow(final ExternalMessage externalMessage)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationContext", "parameters": "(final ExternalMessage externalMessage)", "modifiers": "private static", "return": "Optional<AuthorizationContext>", "signature": "Optional<AuthorizationContext> getAuthorizationContext(final ExternalMessage externalMessage)", "full_signature": "private static Optional<AuthorizationContext> getAuthorizationContext(final ExternalMessage externalMessage)", "class_method_signature": "MessageMappingProcessorActor.getAuthorizationContext(final ExternalMessage externalMessage)", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationContextAsEither", "parameters": "(\n            final ExternalMessage externalMessage)", "modifiers": "private static", "return": "Either<RuntimeException, AuthorizationContext>", "signature": "Either<RuntimeException, AuthorizationContext> getAuthorizationContextAsEither(\n            final ExternalMessage externalMessage)", "full_signature": "private static Either<RuntimeException, AuthorizationContext> getAuthorizationContextAsEither(\n            final ExternalMessage externalMessage)", "class_method_signature": "MessageMappingProcessorActor.getAuthorizationContextAsEither(\n            final ExternalMessage externalMessage)", "testcase": false, "constructor": false}, {"identifier": "splitTargetsByExtraFields", "parameters": "(\n            final OutboundSignal outboundSignal)", "modifiers": "private static", "return": "Pair<List<Target>, List<Pair<Target, FilteredTopic>>>", "signature": "Pair<List<Target>, List<Pair<Target, FilteredTopic>>> splitTargetsByExtraFields(\n            final OutboundSignal outboundSignal)", "full_signature": "private static Pair<List<Target>, List<Pair<Target, FilteredTopic>>> splitTargetsByExtraFields(\n            final OutboundSignal outboundSignal)", "class_method_signature": "MessageMappingProcessorActor.splitTargetsByExtraFields(\n            final OutboundSignal outboundSignal)", "testcase": false, "constructor": false}, {"identifier": "isTwinCommandResponseWithReplyTarget", "parameters": "(final Signal<?> signal)", "modifiers": "private static", "return": "boolean", "signature": "boolean isTwinCommandResponseWithReplyTarget(final Signal<?> signal)", "full_signature": "private static boolean isTwinCommandResponseWithReplyTarget(final Signal<?> signal)", "class_method_signature": "MessageMappingProcessorActor.isTwinCommandResponseWithReplyTarget(final Signal<?> signal)", "testcase": false, "constructor": false}, {"identifier": "canRequestAcks", "parameters": "(final Signal<?> signal)", "modifiers": "private static", "return": "boolean", "signature": "boolean canRequestAcks(final Signal<?> signal)", "full_signature": "private static boolean canRequestAcks(final Signal<?> signal)", "class_method_signature": "MessageMappingProcessorActor.canRequestAcks(final Signal<?> signal)", "testcase": false, "constructor": false}, {"identifier": "isApplicable", "parameters": "(\n            final AbstractCommandAckRequestSetter<C> setter, final Signal<?> signal)", "modifiers": "private static", "return": "boolean", "signature": "boolean isApplicable(\n            final AbstractCommandAckRequestSetter<C> setter, final Signal<?> signal)", "full_signature": "private static boolean isApplicable(\n            final AbstractCommandAckRequestSetter<C> setter, final Signal<?> signal)", "class_method_signature": "MessageMappingProcessorActor.isApplicable(\n            final AbstractCommandAckRequestSetter<C> setter, final Signal<?> signal)", "testcase": false, "constructor": false}], "file": "services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/MessageMappingProcessorActor.java"}, "focal_method": {"identifier": "getAuthorizationContext", "parameters": "(final ExternalMessage externalMessage)", "modifiers": "private static", "return": "Optional<AuthorizationContext>", "body": "private static Optional<AuthorizationContext> getAuthorizationContext(final ExternalMessage externalMessage) {\n        final Either<RuntimeException, AuthorizationContext> result = getAuthorizationContextAsEither(externalMessage);\n        if (result.isRight()) {\n            return Optional.of(result.right().get());\n        } else {\n            return Optional.empty();\n        }\n    }", "signature": "Optional<AuthorizationContext> getAuthorizationContext(final ExternalMessage externalMessage)", "full_signature": "private static Optional<AuthorizationContext> getAuthorizationContext(final ExternalMessage externalMessage)", "class_method_signature": "MessageMappingProcessorActor.getAuthorizationContext(final ExternalMessage externalMessage)", "testcase": false, "constructor": false, "invocations": ["getAuthorizationContextAsEither", "isRight", "of", "get", "right", "empty"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}