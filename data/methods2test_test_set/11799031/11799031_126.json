{"test_class": {"identifier": "GridCellGeometryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private GridCellGeometry gcg = null;", "modifier": "private", "type": "GridCellGeometry", "declarator": "gcg = null", "var_name": "gcg"}, {"original_string": "private GridCoordSystem gcs = null;", "modifier": "private", "type": "GridCoordSystem", "declarator": "gcs = null", "var_name": "gcs"}], "file": "gdp-core-processing/src/test/java/gov/usgs/cida/gdp/coreprocessing/analysis/grid/GridCellGeometryTest.java"}, "test_case": {"identifier": "testGeometryCellCountY", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGeometryCellCountY() {\n\t\tassertEquals(\"The geometry should have equal Y to dataset\", gcg.getCellCountY(), Y_SIZE);\n\t}", "signature": "void testGeometryCellCountY()", "full_signature": "@Test public void testGeometryCellCountY()", "class_method_signature": "GridCellGeometryTest.testGeometryCellCountY()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getCellCountY"]}, "focal_class": {"identifier": "GridCellGeometry", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final GridCoordSystem gridCoordSystem;", "modifier": "private final", "type": "GridCoordSystem", "declarator": "gridCoordSystem", "var_name": "gridCoordSystem"}, {"original_string": "private final CoordinateReferenceSystem gridCRS;", "modifier": "private final", "type": "CoordinateReferenceSystem", "declarator": "gridCRS", "var_name": "gridCRS"}, {"original_string": "private final int xCellCount;", "modifier": "private final", "type": "int", "declarator": "xCellCount", "var_name": "xCellCount"}, {"original_string": "private final int yCellCount;", "modifier": "private final", "type": "int", "declarator": "yCellCount", "var_name": "yCellCount"}, {"original_string": "private final int cellCount;", "modifier": "private final", "type": "int", "declarator": "cellCount", "var_name": "cellCount"}, {"original_string": "private final GeometryFactory geometryFactory;", "modifier": "private final", "type": "GeometryFactory", "declarator": "geometryFactory", "var_name": "geometryFactory"}, {"original_string": "private final IndexToCoordinateBuilder coordinateBuilder;", "modifier": "private final", "type": "IndexToCoordinateBuilder", "declarator": "coordinateBuilder", "var_name": "coordinateBuilder"}], "methods": [{"identifier": "GridCellGeometry", "parameters": "(GridCoordSystem gridCoordSystem)", "modifiers": "public", "return": "", "signature": " GridCellGeometry(GridCoordSystem gridCoordSystem)", "full_signature": "public  GridCellGeometry(GridCoordSystem gridCoordSystem)", "class_method_signature": "GridCellGeometry.GridCellGeometry(GridCoordSystem gridCoordSystem)", "testcase": false, "constructor": true}, {"identifier": "getGridCoordSystem", "parameters": "()", "modifiers": "public", "return": "GridCoordSystem", "signature": "GridCoordSystem getGridCoordSystem()", "full_signature": "public GridCoordSystem getGridCoordSystem()", "class_method_signature": "GridCellGeometry.getGridCoordSystem()", "testcase": false, "constructor": false}, {"identifier": "getGridCRS", "parameters": "()", "modifiers": "public", "return": "CoordinateReferenceSystem", "signature": "CoordinateReferenceSystem getGridCRS()", "full_signature": "public CoordinateReferenceSystem getGridCRS()", "class_method_signature": "GridCellGeometry.getGridCRS()", "testcase": false, "constructor": false}, {"identifier": "getCellCountX", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCellCountX()", "full_signature": "public int getCellCountX()", "class_method_signature": "GridCellGeometry.getCellCountX()", "testcase": false, "constructor": false}, {"identifier": "getCellCountY", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCellCountY()", "full_signature": "public int getCellCountY()", "class_method_signature": "GridCellGeometry.getCellCountY()", "testcase": false, "constructor": false}, {"identifier": "getCellCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCellCount()", "full_signature": "public int getCellCount()", "class_method_signature": "GridCellGeometry.getCellCount()", "testcase": false, "constructor": false}, {"identifier": "getCellGeometry", "parameters": "(int xIndex, int yIndex)", "modifiers": "public", "return": "Geometry", "signature": "Geometry getCellGeometry(int xIndex, int yIndex)", "full_signature": "public Geometry getCellGeometry(int xIndex, int yIndex)", "class_method_signature": "GridCellGeometry.getCellGeometry(int xIndex, int yIndex)", "testcase": false, "constructor": false}, {"identifier": "getCellGeometryQuick", "parameters": "(int xIndex, int yIndex)", "modifiers": "", "return": "Geometry", "signature": "Geometry getCellGeometryQuick(int xIndex, int yIndex)", "full_signature": " Geometry getCellGeometryQuick(int xIndex, int yIndex)", "class_method_signature": "GridCellGeometry.getCellGeometryQuick(int xIndex, int yIndex)", "testcase": false, "constructor": false}, {"identifier": "getCellGeometryQuick", "parameters": "(int yxIndex)", "modifiers": "", "return": "Geometry", "signature": "Geometry getCellGeometryQuick(int yxIndex)", "full_signature": " Geometry getCellGeometryQuick(int yxIndex)", "class_method_signature": "GridCellGeometry.getCellGeometryQuick(int yxIndex)", "testcase": false, "constructor": false}, {"identifier": "generateCellGeometry", "parameters": "(int xIndex, int yIndex)", "modifiers": "private", "return": "Geometry", "signature": "Geometry generateCellGeometry(int xIndex, int yIndex)", "full_signature": "private Geometry generateCellGeometry(int xIndex, int yIndex)", "class_method_signature": "GridCellGeometry.generateCellGeometry(int xIndex, int yIndex)", "testcase": false, "constructor": false}, {"identifier": "calculateYXIndex", "parameters": "(int xIndex, int yIndex)", "modifiers": "public final", "return": "int", "signature": "int calculateYXIndex(int xIndex, int yIndex)", "full_signature": "public final int calculateYXIndex(int xIndex, int yIndex)", "class_method_signature": "GridCellGeometry.calculateYXIndex(int xIndex, int yIndex)", "testcase": false, "constructor": false}], "file": "gdp-core-processing/src/main/java/gov/usgs/cida/gdp/coreprocessing/analysis/grid/GridCellGeometry.java"}, "focal_method": {"identifier": "getCellCountY", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int getCellCountY() {\n        return yCellCount;\n    }", "signature": "int getCellCountY()", "full_signature": "public int getCellCountY()", "class_method_signature": "GridCellGeometry.getCellCountY()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 11799031, "url": "https://github.com/USGS-CIDA/geo-data-portal", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 9, "size": 178468, "license": "licensed"}}