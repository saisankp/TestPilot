{"test_class": {"identifier": "ValueListTest", "superclass": "", "interfaces": "", "fields": [], "file": "mucommander-commons-conf/src/test/java/com/mucommander/commons/conf/ValueListTest.java"}, "test_case": {"identifier": "testDoubleValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDoubleValues() {\n        testDoubleValues(new ValueList(ValueList.toString(createFloatData(), \";\"), \";\"));\n    }", "signature": "void testDoubleValues()", "full_signature": "@Test public void testDoubleValues()", "class_method_signature": "ValueListTest.testDoubleValues()", "testcase": true, "constructor": false, "invocations": ["testDoubleValues", "toString", "createFloatData"]}, "focal_class": {"identifier": "ValueList", "superclass": "extends ArrayList<String>", "interfaces": "", "fields": [], "methods": [{"identifier": "ValueList", "parameters": "(String data, String separator)", "modifiers": "public", "return": "", "signature": " ValueList(String data, String separator)", "full_signature": "public  ValueList(String data, String separator)", "class_method_signature": "ValueList.ValueList(String data, String separator)", "testcase": false, "constructor": true}, {"identifier": "valueAt", "parameters": "(int index)", "modifiers": "public", "return": "String", "signature": "String valueAt(int index)", "full_signature": "public String valueAt(int index)", "class_method_signature": "ValueList.valueAt(int index)", "testcase": false, "constructor": false}, {"identifier": "integerValueAt", "parameters": "(int index)", "modifiers": "public", "return": "int", "signature": "int integerValueAt(int index)", "full_signature": "public int integerValueAt(int index)", "class_method_signature": "ValueList.integerValueAt(int index)", "testcase": false, "constructor": false}, {"identifier": "floatValueAt", "parameters": "(int index)", "modifiers": "public", "return": "float", "signature": "float floatValueAt(int index)", "full_signature": "public float floatValueAt(int index)", "class_method_signature": "ValueList.floatValueAt(int index)", "testcase": false, "constructor": false}, {"identifier": "doubleValueAt", "parameters": "(int index)", "modifiers": "public", "return": "double", "signature": "double doubleValueAt(int index)", "full_signature": "public double doubleValueAt(int index)", "class_method_signature": "ValueList.doubleValueAt(int index)", "testcase": false, "constructor": false}, {"identifier": "longValueAt", "parameters": "(int index)", "modifiers": "public", "return": "long", "signature": "long longValueAt(int index)", "full_signature": "public long longValueAt(int index)", "class_method_signature": "ValueList.longValueAt(int index)", "testcase": false, "constructor": false}, {"identifier": "booleanValueAt", "parameters": "(int index)", "modifiers": "public", "return": "boolean", "signature": "boolean booleanValueAt(int index)", "full_signature": "public boolean booleanValueAt(int index)", "class_method_signature": "ValueList.booleanValueAt(int index)", "testcase": false, "constructor": false}, {"identifier": "listValueAt", "parameters": "(int index, String separator)", "modifiers": "public", "return": "ValueList", "signature": "ValueList listValueAt(int index, String separator)", "full_signature": "public ValueList listValueAt(int index, String separator)", "class_method_signature": "ValueList.listValueAt(int index, String separator)", "testcase": false, "constructor": false}, {"identifier": "valueIterator", "parameters": "()", "modifiers": "public", "return": "ValueIterator", "signature": "ValueIterator valueIterator()", "full_signature": "public ValueIterator valueIterator()", "class_method_signature": "ValueList.valueIterator()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(List<?> data, String separator)", "modifiers": "public static", "return": "String", "signature": "String toString(List<?> data, String separator)", "full_signature": "public static String toString(List<?> data, String separator)", "class_method_signature": "ValueList.toString(List<?> data, String separator)", "testcase": false, "constructor": false}], "file": "mucommander-commons-conf/src/main/java/com/mucommander/commons/conf/ValueList.java"}, "focal_method": {"identifier": "toString", "parameters": "(List<?> data, String separator)", "modifiers": "public static", "return": "String", "body": "public static String toString(List<?> data, String separator) {\n        StringBuilder buffer;\n        Iterator<?>   values;\n\n        buffer = new StringBuilder();\n        values = data.iterator();\n\n        // Deals with the first value separately.\n        if(values.hasNext())\n            buffer.append(values.next().toString());\n\n        // All subsequent values will be concatenated after a separator.\n        while(values.hasNext()) {\n            buffer.append(separator);\n            buffer.append(values.next().toString());\n        }\n\n        // Returns the final value.\n        return buffer.toString();\n    }", "signature": "String toString(List<?> data, String separator)", "full_signature": "public static String toString(List<?> data, String separator)", "class_method_signature": "ValueList.toString(List<?> data, String separator)", "testcase": false, "constructor": false, "invocations": ["iterator", "hasNext", "append", "toString", "next", "hasNext", "append", "append", "toString", "next", "toString"]}, "repository": {"repo_id": 16462032, "url": "https://github.com/mucommander/mucommander", "language": "Java", "is_fork": false, "fork_count": 124, "stargazer_count": 448, "size": 47123, "license": "licensed"}}