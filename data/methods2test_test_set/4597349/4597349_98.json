{"test_class": {"identifier": "BindingConvertorTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/pentaho/ui/xul/binding/BindingConvertorTest.java"}, "test_case": {"identifier": "testBoolean2String", "parameters": "()", "modifiers": "@SuppressWarnings( \"nls\" ) @Test public", "return": "void", "body": "@SuppressWarnings( \"nls\" )\n  @Test\n  public void testBoolean2String() throws Exception {\n    BindingConvertor<Boolean, String> bc = BindingConvertor.boolean2String();\n    assertEquals( \"true\", bc.sourceToTarget( true ) );\n    assertEquals( \"false\", bc.sourceToTarget( false ) );\n\n    assertTrue( bc.targetToSource( \"true\" ) );\n    assertFalse( bc.targetToSource( \"false\" ) );\n    assertFalse( bc.targetToSource( null ) );\n    assertFalse( bc.targetToSource( \"anything\" ) );\n  }", "signature": "void testBoolean2String()", "full_signature": "@SuppressWarnings( \"nls\" ) @Test public void testBoolean2String()", "class_method_signature": "BindingConvertorTest.testBoolean2String()", "testcase": true, "constructor": false, "invocations": ["boolean2String", "assertEquals", "sourceToTarget", "assertEquals", "sourceToTarget", "assertTrue", "targetToSource", "assertFalse", "targetToSource", "assertFalse", "targetToSource", "assertFalse", "targetToSource"]}, "focal_class": {"identifier": "BindingConvertor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private static BindingConvertor<Integer, String> integer2String = new Integer2String();", "modifier": "private static", "type": "BindingConvertor<Integer, String>", "declarator": "integer2String = new Integer2String()", "var_name": "integer2String"}, {"original_string": "private static BindingConvertor<String, Integer> string2Integer = new String2Integer();", "modifier": "private static", "type": "BindingConvertor<String, Integer>", "declarator": "string2Integer = new String2Integer()", "var_name": "string2Integer"}, {"original_string": "private static BindingConvertor<Long, String> long2String = new Long2String();", "modifier": "private static", "type": "BindingConvertor<Long, String>", "declarator": "long2String = new Long2String()", "var_name": "long2String"}, {"original_string": "private static BindingConvertor<String, String> string2String = new String2String();", "modifier": "private static", "type": "BindingConvertor<String, String>", "declarator": "string2String = new String2String()", "var_name": "string2String"}, {"original_string": "private static BindingConvertor<Boolean, String> boolean2String = new Boolean2String();", "modifier": "private static", "type": "BindingConvertor<Boolean, String>", "declarator": "boolean2String = new Boolean2String()", "var_name": "boolean2String"}, {"original_string": "private static BindingConvertor<Double, String> double2String = new Double2String();", "modifier": "private static", "type": "BindingConvertor<Double, String>", "declarator": "double2String = new Double2String()", "var_name": "double2String"}, {"original_string": "private static BindingConvertor<String, Double> string2Double = new String2Double();", "modifier": "private static", "type": "BindingConvertor<String, Double>", "declarator": "string2Double = new String2Double()", "var_name": "string2Double"}, {"original_string": "private static BindingConvertor<Integer, Boolean> integer2Boolean = new Integer2Boolean();", "modifier": "private static", "type": "BindingConvertor<Integer, Boolean>", "declarator": "integer2Boolean = new Integer2Boolean()", "var_name": "integer2Boolean"}, {"original_string": "private static BindingConvertor<Object, Boolean> object2Boolean = new Object2Boolean();", "modifier": "private static", "type": "BindingConvertor<Object, Boolean>", "declarator": "object2Boolean = new Object2Boolean()", "var_name": "object2Boolean"}, {"original_string": "private static BindingConvertor<Collection, Object[]> collection2ObjectArray = new Collection2ObjectArray();", "modifier": "private static", "type": "BindingConvertor<Collection, Object[]>", "declarator": "collection2ObjectArray = new Collection2ObjectArray()", "var_name": "collection2ObjectArray"}], "methods": [{"identifier": "sourceToTarget", "parameters": "( V value )", "modifiers": "public abstract", "return": "R", "signature": "R sourceToTarget( V value )", "full_signature": "public abstract R sourceToTarget( V value )", "class_method_signature": "BindingConvertor.sourceToTarget( V value )", "testcase": false, "constructor": false}, {"identifier": "targetToSource", "parameters": "( R value )", "modifiers": "public abstract", "return": "V", "signature": "V targetToSource( R value )", "full_signature": "public abstract V targetToSource( R value )", "class_method_signature": "BindingConvertor.targetToSource( R value )", "testcase": false, "constructor": false}, {"identifier": "collection2ObjectArray", "parameters": "()", "modifiers": "public static", "return": "BindingConvertor<Collection, Object[]>", "signature": "BindingConvertor<Collection, Object[]> collection2ObjectArray()", "full_signature": "public static BindingConvertor<Collection, Object[]> collection2ObjectArray()", "class_method_signature": "BindingConvertor.collection2ObjectArray()", "testcase": false, "constructor": false}, {"identifier": "integer2String", "parameters": "()", "modifiers": "public static", "return": "BindingConvertor<Integer, String>", "signature": "BindingConvertor<Integer, String> integer2String()", "full_signature": "public static BindingConvertor<Integer, String> integer2String()", "class_method_signature": "BindingConvertor.integer2String()", "testcase": false, "constructor": false}, {"identifier": "integer2Boolean", "parameters": "()", "modifiers": "public static", "return": "BindingConvertor<Integer, Boolean>", "signature": "BindingConvertor<Integer, Boolean> integer2Boolean()", "full_signature": "public static BindingConvertor<Integer, Boolean> integer2Boolean()", "class_method_signature": "BindingConvertor.integer2Boolean()", "testcase": false, "constructor": false}, {"identifier": "string2Integer", "parameters": "()", "modifiers": "public static", "return": "BindingConvertor<String, Integer>", "signature": "BindingConvertor<String, Integer> string2Integer()", "full_signature": "public static BindingConvertor<String, Integer> string2Integer()", "class_method_signature": "BindingConvertor.string2Integer()", "testcase": false, "constructor": false}, {"identifier": "long2String", "parameters": "()", "modifiers": "public static", "return": "BindingConvertor<Long, String>", "signature": "BindingConvertor<Long, String> long2String()", "full_signature": "public static BindingConvertor<Long, String> long2String()", "class_method_signature": "BindingConvertor.long2String()", "testcase": false, "constructor": false}, {"identifier": "date2String", "parameters": "()", "modifiers": "public static", "return": "BindingConvertor<Date, String>", "signature": "BindingConvertor<Date, String> date2String()", "full_signature": "public static BindingConvertor<Date, String> date2String()", "class_method_signature": "BindingConvertor.date2String()", "testcase": false, "constructor": false}, {"identifier": "date2String", "parameters": "( final DateFormat format )", "modifiers": "public static", "return": "BindingConvertor<Date, String>", "signature": "BindingConvertor<Date, String> date2String( final DateFormat format )", "full_signature": "public static BindingConvertor<Date, String> date2String( final DateFormat format )", "class_method_signature": "BindingConvertor.date2String( final DateFormat format )", "testcase": false, "constructor": false}, {"identifier": "string2String", "parameters": "()", "modifiers": "public static", "return": "BindingConvertor<String, String>", "signature": "BindingConvertor<String, String> string2String()", "full_signature": "public static BindingConvertor<String, String> string2String()", "class_method_signature": "BindingConvertor.string2String()", "testcase": false, "constructor": false}, {"identifier": "boolean2String", "parameters": "()", "modifiers": "public static", "return": "BindingConvertor<Boolean, String>", "signature": "BindingConvertor<Boolean, String> boolean2String()", "full_signature": "public static BindingConvertor<Boolean, String> boolean2String()", "class_method_signature": "BindingConvertor.boolean2String()", "testcase": false, "constructor": false}, {"identifier": "double2String", "parameters": "()", "modifiers": "public static", "return": "BindingConvertor<Double, String>", "signature": "BindingConvertor<Double, String> double2String()", "full_signature": "public static BindingConvertor<Double, String> double2String()", "class_method_signature": "BindingConvertor.double2String()", "testcase": false, "constructor": false}, {"identifier": "string2Double", "parameters": "()", "modifiers": "public static", "return": "BindingConvertor<String, Double>", "signature": "BindingConvertor<String, Double> string2Double()", "full_signature": "public static BindingConvertor<String, Double> string2Double()", "class_method_signature": "BindingConvertor.string2Double()", "testcase": false, "constructor": false}, {"identifier": "object2Boolean", "parameters": "()", "modifiers": "public static", "return": "BindingConvertor<Object, Boolean>", "signature": "BindingConvertor<Object, Boolean> object2Boolean()", "full_signature": "public static BindingConvertor<Object, Boolean> object2Boolean()", "class_method_signature": "BindingConvertor.object2Boolean()", "testcase": false, "constructor": false}, {"identifier": "truncatedString", "parameters": "( int length )", "modifiers": "public static", "return": "BindingConvertor<String, String>", "signature": "BindingConvertor<String, String> truncatedString( int length )", "full_signature": "public static BindingConvertor<String, String> truncatedString( int length )", "class_method_signature": "BindingConvertor.truncatedString( int length )", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/pentaho/ui/xul/binding/BindingConvertor.java"}, "focal_method": {"identifier": "boolean2String", "parameters": "()", "modifiers": "public static", "return": "BindingConvertor<Boolean, String>", "body": "public static BindingConvertor<Boolean, String> boolean2String() {\n    return boolean2String;\n  }", "signature": "BindingConvertor<Boolean, String> boolean2String()", "full_signature": "public static BindingConvertor<Boolean, String> boolean2String()", "class_method_signature": "BindingConvertor.boolean2String()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4597349, "url": "https://github.com/pentaho/pentaho-commons-xul", "language": "Java", "is_fork": false, "fork_count": 108, "stargazer_count": 5, "size": 24225, "license": "licensed"}}