{"test_class": {"identifier": "PersistentMessageBufferTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static File dir = new File(\"build/test-data\");", "modifier": "private static", "type": "File", "declarator": "dir = new File(\"build/test-data\")", "var_name": "dir"}], "file": "src/main/java/io/qdb/buffer/PersistentMessageBufferTest.java"}, "test_case": {"identifier": "testCleanup", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCleanup() throws IOException {\n        File bd = mkdir(\"cleanup\");\n\n        PersistentMessageBuffer b = new PersistentMessageBuffer(bd);\n        b.setSegmentLength(8192 + MessageFile.FILE_HEADER_SIZE);\n        append(b, 0, \"\", 8192);\n        append(b, 0, \"\", 8192);\n        append(b, 0, \"\", 8192);\n        append(b, 0, \"\", 8192);\n        expect(bd.list(),\n                \"0000000000000000-0000000000000000-1.qdb\", \"0000000000002000-0000000000000000-1.qdb\",\n                \"0000000000004000-0000000000000000-1.qdb\", \"0000000000006000-0000000000000000-0.qdb\");\n\n        b.setMaxSize((8192 + MessageFile.FILE_HEADER_SIZE) * 2);\n        b.cleanup();\n        assertEquals(0x4000, b.getOldestId());\n        expect(bd.list(), \"0000000000004000-0000000000000000-1.qdb\", \"0000000000006000-0000000000000000-0.qdb\");\n\n        b.setMaxSize(1);  // can't get rid of last file\n        b.cleanup();\n        expect(bd.list(), \"0000000000006000-0000000000000000-0.qdb\");\n\n        b.close();\n    }", "signature": "void testCleanup()", "full_signature": "@Test public void testCleanup()", "class_method_signature": "PersistentMessageBufferTest.testCleanup()", "testcase": true, "constructor": false, "invocations": ["mkdir", "setSegmentLength", "append", "append", "append", "append", "expect", "list", "setMaxSize", "cleanup", "assertEquals", "getOldestId", "expect", "list", "setMaxSize", "cleanup", "expect", "list", "close"]}, "focal_class": {"identifier": "PersistentMessageBuffer", "superclass": "", "interfaces": "implements MessageBuffer", "fields": [{"original_string": "private final File dir;", "modifier": "private final", "type": "File", "declarator": "dir", "var_name": "dir"}, {"original_string": "private long maxSize = 100 * 1000 * 1000000L;", "modifier": "private", "type": "long", "declarator": "maxSize = 100 * 1000 * 1000000L", "var_name": "maxSize"}, {"original_string": "private int segmentCount = 1000;", "modifier": "private", "type": "int", "declarator": "segmentCount = 1000", "var_name": "segmentCount"}, {"original_string": "private int segmentLength;", "modifier": "private", "type": "int", "declarator": "segmentLength", "var_name": "segmentLength"}, {"original_string": "private int maxPayloadSize = 128 * 1024;", "modifier": "private", "type": "int", "declarator": "maxPayloadSize = 128 * 1024", "var_name": "maxPayloadSize"}, {"original_string": "private long[] files;", "modifier": "private", "type": "long[]", "declarator": "files", "var_name": "files"}, {"original_string": "private long[] timestamps;", "modifier": "private", "type": "long[]", "declarator": "timestamps", "var_name": "timestamps"}, {"original_string": "private int[] counts;", "modifier": "private", "type": "int[]", "declarator": "counts", "var_name": "counts"}, {"original_string": "private int fileOffset;", "modifier": "private", "type": "int", "declarator": "fileOffset", "var_name": "fileOffset"}, {"original_string": "private int firstFile;", "modifier": "private", "type": "int", "declarator": "firstFile", "var_name": "firstFile"}, {"original_string": "private int lastFile;", "modifier": "private", "type": "int", "declarator": "lastFile", "var_name": "lastFile"}, {"original_string": "private MessageFile current;", "modifier": "private", "type": "MessageFile", "declarator": "current", "var_name": "current"}, {"original_string": "private int lastFileLength;", "modifier": "private", "type": "int", "declarator": "lastFileLength", "var_name": "lastFileLength"}, {"original_string": "private long mostRecentTimestamp;", "modifier": "private", "type": "long", "declarator": "mostRecentTimestamp", "var_name": "mostRecentTimestamp"}, {"original_string": "private Cursor[] waitingCursors = new Cursor[1];", "modifier": "private", "type": "Cursor[]", "declarator": "waitingCursors = new Cursor[1]", "var_name": "waitingCursors"}, {"original_string": "private Executor executor;", "modifier": "private", "type": "Executor", "declarator": "executor", "var_name": "executor"}, {"original_string": "private Runnable cleanupJob;", "modifier": "private", "type": "Runnable", "declarator": "cleanupJob", "var_name": "cleanupJob"}, {"original_string": "private int autoSyncIntervalMs = 1000;", "modifier": "private", "type": "int", "declarator": "autoSyncIntervalMs = 1000", "var_name": "autoSyncIntervalMs"}, {"original_string": "private Timer timer;", "modifier": "private", "type": "Timer", "declarator": "timer", "var_name": "timer"}, {"original_string": "private SyncTimerTask syncTask;", "modifier": "private", "type": "SyncTimerTask", "declarator": "syncTask", "var_name": "syncTask"}, {"original_string": "private boolean open;", "modifier": "private", "type": "boolean", "declarator": "open", "var_name": "open"}, {"original_string": "private final long creationTime = System.currentTimeMillis();", "modifier": "private final", "type": "long", "declarator": "creationTime = System.currentTimeMillis()", "var_name": "creationTime"}, {"original_string": "private static final FilenameFilter QDB_FILTER = new FilenameFilter() {\n        @Override\n        public boolean accept(File dir, String name) {\n            return name.endsWith(\".qdb\");\n        }\n    };", "modifier": "private static final", "type": "FilenameFilter", "declarator": "QDB_FILTER = new FilenameFilter() {\n        @Override\n        public boolean accept(File dir, String name) {\n            return name.endsWith(\".qdb\");\n        }\n    }", "var_name": "QDB_FILTER"}, {"original_string": "private static final char[] ZERO_CHARS = \"0000000000000000\".toCharArray();", "modifier": "private static final", "type": "char[]", "declarator": "ZERO_CHARS = \"0000000000000000\".toCharArray()", "var_name": "ZERO_CHARS"}], "methods": [{"identifier": "PersistentMessageBuffer", "parameters": "(File dir)", "modifiers": "public", "return": "", "signature": " PersistentMessageBuffer(File dir)", "full_signature": "public  PersistentMessageBuffer(File dir)", "class_method_signature": "PersistentMessageBuffer.PersistentMessageBuffer(File dir)", "testcase": false, "constructor": true}, {"identifier": "setFirstId", "parameters": "(long firstMessageId)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void setFirstId(long firstMessageId)", "full_signature": "@Override public synchronized void setFirstId(long firstMessageId)", "class_method_signature": "PersistentMessageBuffer.setFirstId(long firstMessageId)", "testcase": false, "constructor": false}, {"identifier": "setMaxSize", "parameters": "(long bytes)", "modifiers": "@Override public", "return": "void", "signature": "void setMaxSize(long bytes)", "full_signature": "@Override public void setMaxSize(long bytes)", "class_method_signature": "PersistentMessageBuffer.setMaxSize(long bytes)", "testcase": false, "constructor": false}, {"identifier": "getMaxSize", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getMaxSize()", "full_signature": "@Override public long getMaxSize()", "class_method_signature": "PersistentMessageBuffer.getMaxSize()", "testcase": false, "constructor": false}, {"identifier": "setSegmentCount", "parameters": "(int segmentCount)", "modifiers": "public", "return": "void", "signature": "void setSegmentCount(int segmentCount)", "full_signature": "public void setSegmentCount(int segmentCount)", "class_method_signature": "PersistentMessageBuffer.setSegmentCount(int segmentCount)", "testcase": false, "constructor": false}, {"identifier": "getSegmentCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSegmentCount()", "full_signature": "public int getSegmentCount()", "class_method_signature": "PersistentMessageBuffer.getSegmentCount()", "testcase": false, "constructor": false}, {"identifier": "setMaxPayloadSize", "parameters": "(int maxPayloadSize)", "modifiers": "@Override public", "return": "void", "signature": "void setMaxPayloadSize(int maxPayloadSize)", "full_signature": "@Override public void setMaxPayloadSize(int maxPayloadSize)", "class_method_signature": "PersistentMessageBuffer.setMaxPayloadSize(int maxPayloadSize)", "testcase": false, "constructor": false}, {"identifier": "getMaxPayloadSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxPayloadSize()", "full_signature": "@Override public int getMaxPayloadSize()", "class_method_signature": "PersistentMessageBuffer.getMaxPayloadSize()", "testcase": false, "constructor": false}, {"identifier": "setSegmentLength", "parameters": "(int segmentLength)", "modifiers": "public", "return": "void", "signature": "void setSegmentLength(int segmentLength)", "full_signature": "public void setSegmentLength(int segmentLength)", "class_method_signature": "PersistentMessageBuffer.setSegmentLength(int segmentLength)", "testcase": false, "constructor": false}, {"identifier": "getSegmentLength", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSegmentLength()", "full_signature": "public int getSegmentLength()", "class_method_signature": "PersistentMessageBuffer.getSegmentLength()", "testcase": false, "constructor": false}, {"identifier": "setExecutor", "parameters": "(Executor executor)", "modifiers": "@Override public", "return": "void", "signature": "void setExecutor(Executor executor)", "full_signature": "@Override public void setExecutor(Executor executor)", "class_method_signature": "PersistentMessageBuffer.setExecutor(Executor executor)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "@Override public synchronized", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "@Override public synchronized boolean isEmpty()", "class_method_signature": "PersistentMessageBuffer.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "@Override public synchronized", "return": "long", "signature": "long getSize()", "full_signature": "@Override public synchronized long getSize()", "class_method_signature": "PersistentMessageBuffer.getSize()", "testcase": false, "constructor": false}, {"identifier": "getFileCount", "parameters": "()", "modifiers": "public synchronized", "return": "int", "signature": "int getFileCount()", "full_signature": "public synchronized int getFileCount()", "class_method_signature": "PersistentMessageBuffer.getFileCount()", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(long timestamp, String routingKey, byte[] payload)", "modifiers": "@Override public", "return": "long", "signature": "long append(long timestamp, String routingKey, byte[] payload)", "full_signature": "@Override public long append(long timestamp, String routingKey, byte[] payload)", "class_method_signature": "PersistentMessageBuffer.append(long timestamp, String routingKey, byte[] payload)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(long timestamp, String routingKey, ReadableByteChannel payload, int payloadSize)", "modifiers": "@SuppressWarnings({\"ConstantConditions\", \"SynchronizationOnLocalVariableOrMethodParameter\"}) @Override public", "return": "long", "signature": "long append(long timestamp, String routingKey, ReadableByteChannel payload, int payloadSize)", "full_signature": "@SuppressWarnings({\"ConstantConditions\", \"SynchronizationOnLocalVariableOrMethodParameter\"}) @Override public long append(long timestamp, String routingKey, ReadableByteChannel payload, int payloadSize)", "class_method_signature": "PersistentMessageBuffer.append(long timestamp, String routingKey, ReadableByteChannel payload, int payloadSize)", "testcase": false, "constructor": false}, {"identifier": "ensureCurrent", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void ensureCurrent()", "full_signature": "private void ensureCurrent()", "class_method_signature": "PersistentMessageBuffer.ensureCurrent()", "testcase": false, "constructor": false}, {"identifier": "ensureSpaceInFiles", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void ensureSpaceInFiles()", "full_signature": "private void ensureSpaceInFiles()", "class_method_signature": "PersistentMessageBuffer.ensureSpaceInFiles()", "testcase": false, "constructor": false}, {"identifier": "getMessageSize", "parameters": "(String routingKey, int payloadSize)", "modifiers": "@Override public", "return": "int", "signature": "int getMessageSize(String routingKey, int payloadSize)", "full_signature": "@Override public int getMessageSize(String routingKey, int payloadSize)", "class_method_signature": "PersistentMessageBuffer.getMessageSize(String routingKey, int payloadSize)", "testcase": false, "constructor": false}, {"identifier": "setAutoSyncInterval", "parameters": "(int ms)", "modifiers": "@Override public", "return": "void", "signature": "void setAutoSyncInterval(int ms)", "full_signature": "@Override public void setAutoSyncInterval(int ms)", "class_method_signature": "PersistentMessageBuffer.setAutoSyncInterval(int ms)", "testcase": false, "constructor": false}, {"identifier": "getAutoSyncInterval", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getAutoSyncInterval()", "full_signature": "@Override public int getAutoSyncInterval()", "class_method_signature": "PersistentMessageBuffer.getAutoSyncInterval()", "testcase": false, "constructor": false}, {"identifier": "setTimer", "parameters": "(Timer timer)", "modifiers": "@Override public", "return": "void", "signature": "void setTimer(Timer timer)", "full_signature": "@Override public void setTimer(Timer timer)", "class_method_signature": "PersistentMessageBuffer.setTimer(Timer timer)", "testcase": false, "constructor": false}, {"identifier": "cleanup", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void cleanup()", "full_signature": "public void cleanup()", "class_method_signature": "PersistentMessageBuffer.cleanup()", "testcase": false, "constructor": false}, {"identifier": "sync", "parameters": "()", "modifiers": "@Override public synchronized", "return": "void", "signature": "void sync()", "full_signature": "@Override public synchronized void sync()", "class_method_signature": "PersistentMessageBuffer.sync()", "testcase": false, "constructor": false}, {"identifier": "toFile", "parameters": "(long firstMessageId, long timestamp, int count)", "modifiers": "private", "return": "File", "signature": "File toFile(long firstMessageId, long timestamp, int count)", "full_signature": "private File toFile(long firstMessageId, long timestamp, int count)", "class_method_signature": "PersistentMessageBuffer.toFile(long firstMessageId, long timestamp, int count)", "testcase": false, "constructor": false}, {"identifier": "getFile", "parameters": "(int i)", "modifiers": "private", "return": "File", "signature": "File getFile(int i)", "full_signature": "private File getFile(int i)", "class_method_signature": "PersistentMessageBuffer.getFile(int i)", "testcase": false, "constructor": false}, {"identifier": "checkOpen", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkOpen()", "full_signature": "private void checkOpen()", "class_method_signature": "PersistentMessageBuffer.checkOpen()", "testcase": false, "constructor": false}, {"identifier": "isOpen", "parameters": "()", "modifiers": "@Override public synchronized", "return": "boolean", "signature": "boolean isOpen()", "full_signature": "@Override public synchronized boolean isOpen()", "class_method_signature": "PersistentMessageBuffer.isOpen()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "PersistentMessageBuffer.close()", "testcase": false, "constructor": false}, {"identifier": "getNextId", "parameters": "()", "modifiers": "@Override public synchronized", "return": "long", "signature": "long getNextId()", "full_signature": "@Override public synchronized long getNextId()", "class_method_signature": "PersistentMessageBuffer.getNextId()", "testcase": false, "constructor": false}, {"identifier": "getMessageCount", "parameters": "()", "modifiers": "@Override public synchronized", "return": "long", "signature": "long getMessageCount()", "full_signature": "@Override public synchronized long getMessageCount()", "class_method_signature": "PersistentMessageBuffer.getMessageCount()", "testcase": false, "constructor": false}, {"identifier": "getOldestTimestamp", "parameters": "()", "modifiers": "@Override public synchronized", "return": "Date", "signature": "Date getOldestTimestamp()", "full_signature": "@Override public synchronized Date getOldestTimestamp()", "class_method_signature": "PersistentMessageBuffer.getOldestTimestamp()", "testcase": false, "constructor": false}, {"identifier": "getOldestId", "parameters": "()", "modifiers": "@Override public synchronized", "return": "long", "signature": "long getOldestId()", "full_signature": "@Override public synchronized long getOldestId()", "class_method_signature": "PersistentMessageBuffer.getOldestId()", "testcase": false, "constructor": false}, {"identifier": "getMostRecentTimestamp", "parameters": "()", "modifiers": "public synchronized", "return": "Date", "signature": "Date getMostRecentTimestamp()", "full_signature": "public synchronized Date getMostRecentTimestamp()", "class_method_signature": "PersistentMessageBuffer.getMostRecentTimestamp()", "testcase": false, "constructor": false}, {"identifier": "getCreationTime", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getCreationTime()", "full_signature": "@Override public long getCreationTime()", "class_method_signature": "PersistentMessageBuffer.getCreationTime()", "testcase": false, "constructor": false}, {"identifier": "getTimeline", "parameters": "()", "modifiers": "@Override public synchronized", "return": "Timeline", "signature": "Timeline getTimeline()", "full_signature": "@Override public synchronized Timeline getTimeline()", "class_method_signature": "PersistentMessageBuffer.getTimeline()", "testcase": false, "constructor": false}, {"identifier": "getTimeline", "parameters": "(long messageId)", "modifiers": "@Override public synchronized", "return": "Timeline", "signature": "Timeline getTimeline(long messageId)", "full_signature": "@Override public synchronized Timeline getTimeline(long messageId)", "class_method_signature": "PersistentMessageBuffer.getTimeline(long messageId)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PersistentMessageBuffer.toString()", "testcase": false, "constructor": false}, {"identifier": "finalize", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void finalize()", "full_signature": "@Override protected void finalize()", "class_method_signature": "PersistentMessageBuffer.finalize()", "testcase": false, "constructor": false}, {"identifier": "cursor", "parameters": "(long messageId)", "modifiers": "@Override public synchronized", "return": "MessageCursor", "signature": "MessageCursor cursor(long messageId)", "full_signature": "@Override public synchronized MessageCursor cursor(long messageId)", "class_method_signature": "PersistentMessageBuffer.cursor(long messageId)", "testcase": false, "constructor": false}, {"identifier": "findFileIndex", "parameters": "(long messageId)", "modifiers": "private", "return": "int", "signature": "int findFileIndex(long messageId)", "full_signature": "private int findFileIndex(long messageId)", "class_method_signature": "PersistentMessageBuffer.findFileIndex(long messageId)", "testcase": false, "constructor": false}, {"identifier": "cursorByTimestamp", "parameters": "(long timestamp)", "modifiers": "@Override public synchronized", "return": "MessageCursor", "signature": "MessageCursor cursorByTimestamp(long timestamp)", "full_signature": "@Override public synchronized MessageCursor cursorByTimestamp(long timestamp)", "class_method_signature": "PersistentMessageBuffer.cursorByTimestamp(long timestamp)", "testcase": false, "constructor": false}, {"identifier": "getMessageFileForCursor", "parameters": "(int i)", "modifiers": "private synchronized", "return": "MessageFile", "signature": "MessageFile getMessageFileForCursor(int i)", "full_signature": "private synchronized MessageFile getMessageFileForCursor(int i)", "class_method_signature": "PersistentMessageBuffer.getMessageFileForCursor(int i)", "testcase": false, "constructor": false}, {"identifier": "addWaitingCursor", "parameters": "(Cursor c)", "modifiers": "private synchronized", "return": "void", "signature": "void addWaitingCursor(Cursor c)", "full_signature": "private synchronized void addWaitingCursor(Cursor c)", "class_method_signature": "PersistentMessageBuffer.addWaitingCursor(Cursor c)", "testcase": false, "constructor": false}, {"identifier": "removeWaitingCursor", "parameters": "(Cursor c)", "modifiers": "private synchronized", "return": "void", "signature": "void removeWaitingCursor(Cursor c)", "full_signature": "private synchronized void removeWaitingCursor(Cursor c)", "class_method_signature": "PersistentMessageBuffer.removeWaitingCursor(Cursor c)", "testcase": false, "constructor": false}, {"identifier": "isCurrentFile", "parameters": "(int fileIndex)", "modifiers": "private synchronized", "return": "boolean", "signature": "boolean isCurrentFile(int fileIndex)", "full_signature": "private synchronized boolean isCurrentFile(int fileIndex)", "class_method_signature": "PersistentMessageBuffer.isCurrentFile(int fileIndex)", "testcase": false, "constructor": false}], "file": "src/main/java/io/qdb/buffer/PersistentMessageBuffer.java"}, "focal_method": {"identifier": "cleanup", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void cleanup() throws IOException {\n        for (;;) {\n            File doomed;\n            synchronized (this) {\n                if (maxSize == 0 || getSize() <= maxSize || firstFile >= lastFile - 1) return;\n                doomed = getFile(firstFile);\n                ++firstFile;\n                // todo what about cursors that might have doomed open?\n            }\n            if (!doomed.delete()) {\n                throw new IOException(\"Unable to delete [\" + doomed + \"]\");\n            }\n        }\n    }", "signature": "void cleanup()", "full_signature": "public void cleanup()", "class_method_signature": "PersistentMessageBuffer.cleanup()", "testcase": false, "constructor": false, "invocations": ["getSize", "getFile", "delete"]}, "repository": {"repo_id": 31758882, "url": "https://github.com/zqhxuyuan/zava", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 10325, "license": "licensed"}}