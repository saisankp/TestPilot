{"test_class": {"identifier": "DefaultConfigValueEvaluatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/spi-support/src/test/java/org/apache/tamaya/spisupport/DefaultConfigValueEvaluatorTest.java"}, "test_case": {"identifier": "testEvaluteRawValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEvaluteRawValue() {\n        Configuration config = Configuration.current();\n        DefaultConfigValueEvaluator instance = new DefaultConfigValueEvaluator();\n        PropertyValue result = instance.evaluateRawValue(\"confkey1\", config.getContext());\n        assertThat(result.getValue()).isEqualTo(\"javaconf-value1\");\n        result = instance.evaluateRawValue(\"missing\", config.getContext());\n        assertThat(result).isNull();\n    }", "signature": "void testEvaluteRawValue()", "full_signature": "@Test public void testEvaluteRawValue()", "class_method_signature": "DefaultConfigValueEvaluatorTest.testEvaluteRawValue()", "testcase": true, "constructor": false, "invocations": ["current", "evaluateRawValue", "getContext", "isEqualTo", "assertThat", "getValue", "evaluateRawValue", "getContext", "isNull", "assertThat"]}, "focal_class": {"identifier": "DefaultConfigValueEvaluator", "superclass": "", "interfaces": "implements ConfigValueEvaluator", "fields": [], "methods": [{"identifier": "evaluateRawValue", "parameters": "(String key, ConfigurationContext context)", "modifiers": "@Override public", "return": "PropertyValue", "signature": "PropertyValue evaluateRawValue(String key, ConfigurationContext context)", "full_signature": "@Override public PropertyValue evaluateRawValue(String key, ConfigurationContext context)", "class_method_signature": "DefaultConfigValueEvaluator.evaluateRawValue(String key, ConfigurationContext context)", "testcase": false, "constructor": false}, {"identifier": "evaluateRawValues", "parameters": "(ConfigurationContext context)", "modifiers": "@Override public", "return": "Map<String, PropertyValue>", "signature": "Map<String, PropertyValue> evaluateRawValues(ConfigurationContext context)", "full_signature": "@Override public Map<String, PropertyValue> evaluateRawValues(ConfigurationContext context)", "class_method_signature": "DefaultConfigValueEvaluator.evaluateRawValues(ConfigurationContext context)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DefaultConfigValueEvaluator.toString()", "testcase": false, "constructor": false}], "file": "code/spi-support/src/main/java/org/apache/tamaya/spisupport/DefaultConfigValueEvaluator.java"}, "focal_method": {"identifier": "evaluateRawValue", "parameters": "(String key, ConfigurationContext context)", "modifiers": "@Override public", "return": "PropertyValue", "body": "@Override\n    public PropertyValue evaluateRawValue(String key, ConfigurationContext context) {\n        PropertyValue unfilteredValue = null;\n        for (PropertySource propertySource : context.getPropertySources()) {\n            PropertyValue val = propertySource.get(key);\n            if(val!=null){\n                unfilteredValue = val;\n            }\n        }\n        if(unfilteredValue==null ||\n                (unfilteredValue.getValueType()== PropertyValue.ValueType.VALUE && unfilteredValue.getValue()==null)){\n            return null;\n        }\n        return unfilteredValue;\n    }", "signature": "PropertyValue evaluateRawValue(String key, ConfigurationContext context)", "full_signature": "@Override public PropertyValue evaluateRawValue(String key, ConfigurationContext context)", "class_method_signature": "DefaultConfigValueEvaluator.evaluateRawValue(String key, ConfigurationContext context)", "testcase": false, "constructor": false, "invocations": ["getPropertySources", "get", "getValueType", "getValue"]}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}