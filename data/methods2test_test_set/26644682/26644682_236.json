{"test_class": {"identifier": "TDPExceptionUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "dataprep-backend-service/src/test/java/org/talend/dataprep/exception/TDPExceptionUtilsTest.java"}, "test_case": {"identifier": "shouldFallbackTDPException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldFallbackTDPException() {\n        // given\n        final HystrixRuntimeException hre = new HystrixRuntimeException( //\n                BAD_REQUEST_EXCEPTION, //\n                TestHystrixCommand.class, //\n                \"hello\", //\n                new Exception(\"middle\", new IllegalArgumentException(\"root\")), //\n                new Throwable(\"fallback\")//\n        );\n\n        // when\n        final TDPException tdpException = TDPExceptionUtils.processHystrixException(hre);\n\n        // then\n        assertNotNull(tdpException);\n        assertEquals(UNEXPECTED_SERVICE_EXCEPTION, tdpException.getCode());\n    }", "signature": "void shouldFallbackTDPException()", "full_signature": "@Test public void shouldFallbackTDPException()", "class_method_signature": "TDPExceptionUtilsTest.shouldFallbackTDPException()", "testcase": true, "constructor": false, "invocations": ["processHystrixException", "assertNotNull", "assertEquals", "getCode"]}, "focal_class": {"identifier": "TDPExceptionUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "TDPExceptionUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " TDPExceptionUtils()", "full_signature": "private  TDPExceptionUtils()", "class_method_signature": "TDPExceptionUtils.TDPExceptionUtils()", "testcase": false, "constructor": true}, {"identifier": "processHystrixException", "parameters": "(HystrixRuntimeException hre)", "modifiers": "static", "return": "TDPException", "signature": "TDPException processHystrixException(HystrixRuntimeException hre)", "full_signature": "static TDPException processHystrixException(HystrixRuntimeException hre)", "class_method_signature": "TDPExceptionUtils.processHystrixException(HystrixRuntimeException hre)", "testcase": false, "constructor": false}], "file": "dataprep-backend-service/src/main/java/org/talend/dataprep/exception/TDPExceptionUtils.java"}, "focal_method": {"identifier": "processHystrixException", "parameters": "(HystrixRuntimeException hre)", "modifiers": "static", "return": "TDPException", "body": "static TDPException processHystrixException(HystrixRuntimeException hre) {\n        // filter out hystrix exception level if possible\n        Throwable e = hre;\n        TDPException innerMostTDPException = null;\n        while (e.getCause() != null) {\n            e = e.getCause();\n            if (e instanceof TDPException) {\n                innerMostTDPException = (TDPException) e;\n            }\n        }\n        if (innerMostTDPException != null) {\n            return innerMostTDPException;\n        } else {\n            return new TDPException(CommonErrorCodes.UNEXPECTED_SERVICE_EXCEPTION, hre);\n        }\n    }", "signature": "TDPException processHystrixException(HystrixRuntimeException hre)", "full_signature": "static TDPException processHystrixException(HystrixRuntimeException hre)", "class_method_signature": "TDPExceptionUtils.processHystrixException(HystrixRuntimeException hre)", "testcase": false, "constructor": false, "invocations": ["getCause", "getCause"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}