{"test_class": {"identifier": "FidoMdsMetadataItemsProviderTest", "superclass": "", "interfaces": "", "fields": [], "file": "webauthn4j-metadata/src/test/java/com/webauthn4j/metadata/FidoMdsMetadataItemsProviderTest.java"}, "test_case": {"identifier": "appendToken", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void appendToken() {\n        assertThat(FidoMdsMetadataItemsProvider.appendToken(\"https://mds2.fidoalliance.org/\", \"dummyToken\")).isEqualTo(\"https://mds2.fidoalliance.org/?token=dummyToken\");\n        assertThat(FidoMdsMetadataItemsProvider.appendToken(\"https://mds2.fidoalliance.org/metadata/4e4e%234005/\", \"dummyToken\")).isEqualTo(\"https://mds2.fidoalliance.org/metadata/4e4e%234005/?token=dummyToken\");\n    }", "signature": "void appendToken()", "full_signature": "@Test void appendToken()", "class_method_signature": "FidoMdsMetadataItemsProviderTest.appendToken()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "appendToken", "isEqualTo", "assertThat", "appendToken"]}, "focal_class": {"identifier": "FidoMdsMetadataItemsProvider", "superclass": "", "interfaces": "implements MetadataItemsProvider", "fields": [{"original_string": "private static final String DEFAULT_FIDO_METADATA_SERVICE_ENDPOINT = \"https://mds2.fidoalliance.org/\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_FIDO_METADATA_SERVICE_ENDPOINT = \"https://mds2.fidoalliance.org/\"", "var_name": "DEFAULT_FIDO_METADATA_SERVICE_ENDPOINT"}, {"original_string": "Map<AAGUID, Set<MetadataItem>> cachedMetadataItemMap;", "modifier": "", "type": "Map<AAGUID, Set<MetadataItem>>", "declarator": "cachedMetadataItemMap", "var_name": "cachedMetadataItemMap"}, {"original_string": "OffsetDateTime nextUpdate;", "modifier": "", "type": "OffsetDateTime", "declarator": "nextUpdate", "var_name": "nextUpdate"}, {"original_string": "OffsetDateTime lastRefresh;", "modifier": "", "type": "OffsetDateTime", "declarator": "lastRefresh", "var_name": "lastRefresh"}, {"original_string": "private final Logger logger = LoggerFactory.getLogger(FidoMdsMetadataItemsProvider.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(FidoMdsMetadataItemsProvider.class)", "var_name": "logger"}, {"original_string": "private final JsonConverter jsonConverter;", "modifier": "private final", "type": "JsonConverter", "declarator": "jsonConverter", "var_name": "jsonConverter"}, {"original_string": "private final JWSFactory jwsFactory;", "modifier": "private final", "type": "JWSFactory", "declarator": "jwsFactory", "var_name": "jwsFactory"}, {"original_string": "private String fidoMetadataServiceEndpoint = DEFAULT_FIDO_METADATA_SERVICE_ENDPOINT;", "modifier": "private", "type": "String", "declarator": "fidoMetadataServiceEndpoint = DEFAULT_FIDO_METADATA_SERVICE_ENDPOINT", "var_name": "fidoMetadataServiceEndpoint"}, {"original_string": "private String token = null;", "modifier": "private", "type": "String", "declarator": "token = null", "var_name": "token"}, {"original_string": "private final HttpClient httpClient;", "modifier": "private final", "type": "HttpClient", "declarator": "httpClient", "var_name": "httpClient"}, {"original_string": "private final TrustAnchor trustAnchor;", "modifier": "private final", "type": "TrustAnchor", "declarator": "trustAnchor", "var_name": "trustAnchor"}, {"original_string": "private final MetadataStatementValidator metadataStatementValidator = new MetadataStatementValidator();", "modifier": "private final", "type": "MetadataStatementValidator", "declarator": "metadataStatementValidator = new MetadataStatementValidator()", "var_name": "metadataStatementValidator"}], "methods": [{"identifier": "FidoMdsMetadataItemsProvider", "parameters": "(ObjectConverter objectConverter, String token, HttpClient httpClient, X509Certificate rootCertificate)", "modifiers": "public", "return": "", "signature": " FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, String token, HttpClient httpClient, X509Certificate rootCertificate)", "full_signature": "public  FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, String token, HttpClient httpClient, X509Certificate rootCertificate)", "class_method_signature": "FidoMdsMetadataItemsProvider.FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, String token, HttpClient httpClient, X509Certificate rootCertificate)", "testcase": false, "constructor": true}, {"identifier": "FidoMdsMetadataItemsProvider", "parameters": "(ObjectConverter objectConverter, String token, HttpClient httpClient, Path path)", "modifiers": "public", "return": "", "signature": " FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, String token, HttpClient httpClient, Path path)", "full_signature": "public  FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, String token, HttpClient httpClient, Path path)", "class_method_signature": "FidoMdsMetadataItemsProvider.FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, String token, HttpClient httpClient, Path path)", "testcase": false, "constructor": true}, {"identifier": "FidoMdsMetadataItemsProvider", "parameters": "(ObjectConverter objectConverter, String token, HttpClient httpClient)", "modifiers": "public", "return": "", "signature": " FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, String token, HttpClient httpClient)", "full_signature": "public  FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, String token, HttpClient httpClient)", "class_method_signature": "FidoMdsMetadataItemsProvider.FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, String token, HttpClient httpClient)", "testcase": false, "constructor": true}, {"identifier": "FidoMdsMetadataItemsProvider", "parameters": "(ObjectConverter objectConverter, String token)", "modifiers": "public", "return": "", "signature": " FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, String token)", "full_signature": "public  FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, String token)", "class_method_signature": "FidoMdsMetadataItemsProvider.FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, String token)", "testcase": false, "constructor": true}, {"identifier": "FidoMdsMetadataItemsProvider", "parameters": "(ObjectConverter objectConverter, HttpClient httpClient, X509Certificate rootCertificate)", "modifiers": "public", "return": "", "signature": " FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, HttpClient httpClient, X509Certificate rootCertificate)", "full_signature": "public  FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, HttpClient httpClient, X509Certificate rootCertificate)", "class_method_signature": "FidoMdsMetadataItemsProvider.FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, HttpClient httpClient, X509Certificate rootCertificate)", "testcase": false, "constructor": true}, {"identifier": "FidoMdsMetadataItemsProvider", "parameters": "(ObjectConverter objectConverter, HttpClient httpClient, Path path)", "modifiers": "public", "return": "", "signature": " FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, HttpClient httpClient, Path path)", "full_signature": "public  FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, HttpClient httpClient, Path path)", "class_method_signature": "FidoMdsMetadataItemsProvider.FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, HttpClient httpClient, Path path)", "testcase": false, "constructor": true}, {"identifier": "FidoMdsMetadataItemsProvider", "parameters": "(ObjectConverter objectConverter, HttpClient httpClient)", "modifiers": "public", "return": "", "signature": " FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, HttpClient httpClient)", "full_signature": "public  FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, HttpClient httpClient)", "class_method_signature": "FidoMdsMetadataItemsProvider.FidoMdsMetadataItemsProvider(ObjectConverter objectConverter, HttpClient httpClient)", "testcase": false, "constructor": true}, {"identifier": "FidoMdsMetadataItemsProvider", "parameters": "(ObjectConverter objectConverter)", "modifiers": "public", "return": "", "signature": " FidoMdsMetadataItemsProvider(ObjectConverter objectConverter)", "full_signature": "public  FidoMdsMetadataItemsProvider(ObjectConverter objectConverter)", "class_method_signature": "FidoMdsMetadataItemsProvider.FidoMdsMetadataItemsProvider(ObjectConverter objectConverter)", "testcase": false, "constructor": true}, {"identifier": "loadRootCertificateFromPath", "parameters": "(Path path)", "modifiers": "private static", "return": "X509Certificate", "signature": "X509Certificate loadRootCertificateFromPath(Path path)", "full_signature": "private static X509Certificate loadRootCertificateFromPath(Path path)", "class_method_signature": "FidoMdsMetadataItemsProvider.loadRootCertificateFromPath(Path path)", "testcase": false, "constructor": false}, {"identifier": "loadEmbeddedFidoMdsRootCertificate", "parameters": "()", "modifiers": "private static", "return": "X509Certificate", "signature": "X509Certificate loadEmbeddedFidoMdsRootCertificate()", "full_signature": "private static X509Certificate loadEmbeddedFidoMdsRootCertificate()", "class_method_signature": "FidoMdsMetadataItemsProvider.loadEmbeddedFidoMdsRootCertificate()", "testcase": false, "constructor": false}, {"identifier": "appendToken", "parameters": "(String url, String token)", "modifiers": "static", "return": "String", "signature": "String appendToken(String url, String token)", "full_signature": "static String appendToken(String url, String token)", "class_method_signature": "FidoMdsMetadataItemsProvider.appendToken(String url, String token)", "testcase": false, "constructor": false}, {"identifier": "provide", "parameters": "()", "modifiers": "@Override public", "return": "Map<AAGUID, Set<MetadataItem>>", "signature": "Map<AAGUID, Set<MetadataItem>> provide()", "full_signature": "@Override public Map<AAGUID, Set<MetadataItem>> provide()", "class_method_signature": "FidoMdsMetadataItemsProvider.provide()", "testcase": false, "constructor": false}, {"identifier": "getFidoMetadataServiceEndpoint", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFidoMetadataServiceEndpoint()", "full_signature": "public String getFidoMetadataServiceEndpoint()", "class_method_signature": "FidoMdsMetadataItemsProvider.getFidoMetadataServiceEndpoint()", "testcase": false, "constructor": false}, {"identifier": "setFidoMetadataServiceEndpoint", "parameters": "(String fidoMetadataServiceEndpoint)", "modifiers": "public", "return": "void", "signature": "void setFidoMetadataServiceEndpoint(String fidoMetadataServiceEndpoint)", "full_signature": "public void setFidoMetadataServiceEndpoint(String fidoMetadataServiceEndpoint)", "class_method_signature": "FidoMdsMetadataItemsProvider.setFidoMetadataServiceEndpoint(String fidoMetadataServiceEndpoint)", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void refresh()", "full_signature": "private void refresh()", "class_method_signature": "FidoMdsMetadataItemsProvider.refresh()", "testcase": false, "constructor": false}, {"identifier": "needsRefresh", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean needsRefresh()", "full_signature": " boolean needsRefresh()", "class_method_signature": "FidoMdsMetadataItemsProvider.needsRefresh()", "testcase": false, "constructor": false}, {"identifier": "fetchMetadataTOCPayload", "parameters": "(boolean skipCertPathValidation)", "modifiers": "", "return": "MetadataTOCPayload", "signature": "MetadataTOCPayload fetchMetadataTOCPayload(boolean skipCertPathValidation)", "full_signature": " MetadataTOCPayload fetchMetadataTOCPayload(boolean skipCertPathValidation)", "class_method_signature": "FidoMdsMetadataItemsProvider.fetchMetadataTOCPayload(boolean skipCertPathValidation)", "testcase": false, "constructor": false}, {"identifier": "fetchFidoMdsMetadataItem", "parameters": "(MetadataTOCPayloadEntry entry)", "modifiers": "private", "return": "MetadataItem", "signature": "MetadataItem fetchFidoMdsMetadataItem(MetadataTOCPayloadEntry entry)", "full_signature": "private MetadataItem fetchFidoMdsMetadataItem(MetadataTOCPayloadEntry entry)", "class_method_signature": "FidoMdsMetadataItemsProvider.fetchFidoMdsMetadataItem(MetadataTOCPayloadEntry entry)", "testcase": false, "constructor": false}, {"identifier": "validateCertPath", "parameters": "(JWS<MetadataTOCPayload> jws)", "modifiers": "private", "return": "void", "signature": "void validateCertPath(JWS<MetadataTOCPayload> jws)", "full_signature": "private void validateCertPath(JWS<MetadataTOCPayload> jws)", "class_method_signature": "FidoMdsMetadataItemsProvider.validateCertPath(JWS<MetadataTOCPayload> jws)", "testcase": false, "constructor": false}, {"identifier": "fetchMetadataStatement", "parameters": "(String uri, byte[] expectedHash)", "modifiers": "", "return": "MetadataStatement", "signature": "MetadataStatement fetchMetadataStatement(String uri, byte[] expectedHash)", "full_signature": " MetadataStatement fetchMetadataStatement(String uri, byte[] expectedHash)", "class_method_signature": "FidoMdsMetadataItemsProvider.fetchMetadataStatement(String uri, byte[] expectedHash)", "testcase": false, "constructor": false}], "file": "webauthn4j-metadata/src/main/java/com/webauthn4j/metadata/FidoMdsMetadataItemsProvider.java"}, "focal_method": {"identifier": "appendToken", "parameters": "(String url, String token)", "modifiers": "static", "return": "String", "body": "static String appendToken(String url, String token) {\n        if (url == null) {\n            throw new IllegalArgumentException(\"url must not be null.\");\n        }\n        if (token == null) {\n            return url;\n        }\n        try {\n            URI uriObject = new URI(url);\n            String query = uriObject.getQuery();\n            if (query == null) {\n                query = \"token=\" + token;\n            } else {\n                query += \"&\" + \"token=\" + token;\n            }\n            return new URI(uriObject.getScheme(), uriObject.getAuthority(),\n                    uriObject.getPath(), query, uriObject.getFragment()).toString();\n        } catch (URISyntaxException e) {\n            throw new IllegalArgumentException(String.format(\"Provided url %s is illegal.\", url), e);\n        }\n    }", "signature": "String appendToken(String url, String token)", "full_signature": "static String appendToken(String url, String token)", "class_method_signature": "FidoMdsMetadataItemsProvider.appendToken(String url, String token)", "testcase": false, "constructor": false, "invocations": ["getQuery", "toString", "getScheme", "getAuthority", "getPath", "getFragment", "format"]}, "repository": {"repo_id": 134147639, "url": "https://github.com/webauthn4j/webauthn4j", "stars": 101, "created": "5/20/2018 12:14:36 PM +00:00", "updates": "2020-01-27T13:01:46+00:00", "fork": "False", "license": "licensed"}}