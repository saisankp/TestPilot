{"test_class": {"identifier": "AkGUIDTest", "superclass": "", "interfaces": "", "fields": [], "file": "fdb-sql-layer-core/src/test/java/com/foundationdb/server/types/aksql/aktypes/AkGUIDTest.java"}, "test_case": {"identifier": "checkUUIDToBytes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkUUIDToBytes() {\n        String uuidString = \"384000008cf011bdb23e10b96e4ef00d\";\n        UUID uuid = UUID.fromString( \"38400000-8cf0-11bd-b23e-10b96e4ef00d\");\n        byte[] bytes = AkGUID.uuidToBytes(uuid);\n        String output = Hex.encodeHexString(bytes);\n        assertEquals(output, uuidString);\n    }", "signature": "void checkUUIDToBytes()", "full_signature": "@Test public void checkUUIDToBytes()", "class_method_signature": "AkGUIDTest.checkUUIDToBytes()", "testcase": true, "constructor": false, "invocations": ["fromString", "uuidToBytes", "encodeHexString", "assertEquals"]}, "focal_class": {"identifier": "AkGUID", "superclass": "extends NoAttrTClass", "interfaces": "", "fields": [{"original_string": "public final static TypeId GUIDTYPE = TypeId.GUID_ID;", "modifier": "public final static", "type": "TypeId", "declarator": "GUIDTYPE = TypeId.GUID_ID", "var_name": "GUIDTYPE"}, {"original_string": "public final static NoAttrTClass INSTANCE = new AkGUID();", "modifier": "public final static", "type": "NoAttrTClass", "declarator": "INSTANCE = new AkGUID()", "var_name": "INSTANCE"}, {"original_string": "public final static ValueCacher CACHER = new GuidCacher();", "modifier": "public final static", "type": "ValueCacher", "declarator": "CACHER = new GuidCacher()", "var_name": "CACHER"}, {"original_string": "private static final ValueIO valueIO = new ValueIO() {\n            \n            protected void copy(ValueSource in, TInstance typeInstance, ValueTarget out) {\n                ValueTargets.copyFrom(in, out);\n            }\n            \n            @Override\n            public void writeCollating(ValueSource in, TInstance typeInstance, ValueTarget out) {\n                UUID guid = (UUID)in.getObject();\n                out.putBytes(uuidToBytes(guid));\n            }\n\n            @Override\n            public void readCollating(ValueSource in, TInstance typeInstance, ValueTarget out) {\n                byte[] bb = in.getBytes();\n                out.putObject(bytesToUUID(bb, 0));\n            }\n\n            @Override\n            public void copyCanonical(ValueSource in, TInstance typeInstance, ValueTarget out) {\n                copy(in, typeInstance, out);\n            }\n        };", "modifier": "private static final", "type": "ValueIO", "declarator": "valueIO = new ValueIO() {\n            \n            protected void copy(ValueSource in, TInstance typeInstance, ValueTarget out) {\n                ValueTargets.copyFrom(in, out);\n            }\n            \n            @Override\n            public void writeCollating(ValueSource in, TInstance typeInstance, ValueTarget out) {\n                UUID guid = (UUID)in.getObject();\n                out.putBytes(uuidToBytes(guid));\n            }\n\n            @Override\n            public void readCollating(ValueSource in, TInstance typeInstance, ValueTarget out) {\n                byte[] bb = in.getBytes();\n                out.putObject(bytesToUUID(bb, 0));\n            }\n\n            @Override\n            public void copyCanonical(ValueSource in, TInstance typeInstance, ValueTarget out) {\n                copy(in, typeInstance, out);\n            }\n        }", "var_name": "valueIO"}], "methods": [{"identifier": "AkGUID", "parameters": "()", "modifiers": "private", "return": "", "signature": " AkGUID()", "full_signature": "private  AkGUID()", "class_method_signature": "AkGUID.AkGUID()", "testcase": false, "constructor": true}, {"identifier": "cacher", "parameters": "()", "modifiers": "@Override public", "return": "ValueCacher", "signature": "ValueCacher cacher()", "full_signature": "@Override public ValueCacher cacher()", "class_method_signature": "AkGUID.cacher()", "testcase": false, "constructor": false}, {"identifier": "getValueIO", "parameters": "()", "modifiers": "@Override protected", "return": "ValueIO", "signature": "ValueIO getValueIO()", "full_signature": "@Override protected ValueIO getValueIO()", "class_method_signature": "AkGUID.getValueIO()", "testcase": false, "constructor": false}, {"identifier": "uuidToBytes", "parameters": "(UUID guid)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] uuidToBytes(UUID guid)", "full_signature": "public static byte[] uuidToBytes(UUID guid)", "class_method_signature": "AkGUID.uuidToBytes(UUID guid)", "testcase": false, "constructor": false}, {"identifier": "bytesToUUID", "parameters": "(byte[] byteAr, int offset)", "modifiers": "public static", "return": "UUID", "signature": "UUID bytesToUUID(byte[] byteAr, int offset)", "full_signature": "public static UUID bytesToUUID(byte[] byteAr, int offset)", "class_method_signature": "AkGUID.bytesToUUID(byte[] byteAr, int offset)", "testcase": false, "constructor": false}], "file": "fdb-sql-layer-core/src/main/java/com/foundationdb/server/types/aksql/aktypes/AkGUID.java"}, "focal_method": {"identifier": "uuidToBytes", "parameters": "(UUID guid)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] uuidToBytes(UUID guid) {\n            ByteBuffer bb = ByteBuffer.allocate(16);\n            bb.putLong(0, guid.getMostSignificantBits());\n            bb.putLong(8, guid.getLeastSignificantBits());\n            return bb.array();\n        }", "signature": "byte[] uuidToBytes(UUID guid)", "full_signature": "public static byte[] uuidToBytes(UUID guid)", "class_method_signature": "AkGUID.uuidToBytes(UUID guid)", "testcase": false, "constructor": false, "invocations": ["allocate", "putLong", "getMostSignificantBits", "putLong", "getLeastSignificantBits", "array"]}, "repository": {"repo_id": 32884360, "url": "https://github.com/jaytaylor/sql-layer", "language": "Java", "is_fork": false, "fork_count": 120, "stargazer_count": 77, "size": 138665, "license": "licensed"}}