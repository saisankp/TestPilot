{"test_class": {"identifier": "MessagesTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "core/src/test/java/ship/util/MessagesTest.java"}, "test_case": {"identifier": "testBind", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testBind() {\n    final String messageId = DirectoryNotEmptyException.class.getName() + \".0\";\n    final String uuid = randomUUID().toString();\n    final String message = Messages.bind(messageId, uuid);\n    logger.debug(\"Message: {}\", message);\n    assertNotNull(message);\n    assertTrue(message.contains(uuid));\n    assertFalse(message.contains(messageId));\n  }", "signature": "void testBind()", "full_signature": "@Test public void testBind()", "class_method_signature": "MessagesTest.testBind()", "testcase": true, "constructor": false, "invocations": ["getName", "toString", "randomUUID", "bind", "debug", "assertNotNull", "assertTrue", "contains", "assertFalse", "contains"]}, "focal_class": {"identifier": "Messages", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static Properties messages;", "modifier": "protected static", "type": "Properties", "declarator": "messages", "var_name": "messages"}], "methods": [{"identifier": "exists", "parameters": "(final String msgId)", "modifiers": "public static", "return": "boolean", "signature": "boolean exists(final String msgId)", "full_signature": "public static boolean exists(final String msgId)", "class_method_signature": "Messages.exists(final String msgId)", "testcase": false, "constructor": false}, {"identifier": "getMessage", "parameters": "(final String msgId)", "modifiers": "public static", "return": "String", "signature": "String getMessage(final String msgId)", "full_signature": "public static String getMessage(final String msgId)", "class_method_signature": "Messages.getMessage(final String msgId)", "testcase": false, "constructor": false}, {"identifier": "bind", "parameters": "(final String msgId, final Object... args)", "modifiers": "public static", "return": "String", "signature": "String bind(final String msgId, final Object... args)", "full_signature": "public static String bind(final String msgId, final Object... args)", "class_method_signature": "Messages.bind(final String msgId, final Object... args)", "testcase": false, "constructor": false}], "file": "core/src/main/java/ship/util/Messages.java"}, "focal_method": {"identifier": "bind", "parameters": "(final String msgId, final Object... args)", "modifiers": "public static", "return": "String", "body": "public static String bind(final String msgId, final Object... args) {\n    final String pattern = getMessage(msgId);\n    if (null == pattern) {\n      final StringJoiner joiner = new StringJoiner(\",\");\n      stream(args).map(Object::toString).forEach(joiner::add);\n      return \"!!\" + msgId + \"!!: \" + joiner.toString();\n    }\n    return MessageFormat.format(pattern, args);\n  }", "signature": "String bind(final String msgId, final Object... args)", "full_signature": "public static String bind(final String msgId, final Object... args)", "class_method_signature": "Messages.bind(final String msgId, final Object... args)", "testcase": false, "constructor": false, "invocations": ["getMessage", "forEach", "map", "stream", "toString", "format"]}, "repository": {"repo_id": 149694816, "url": "https://github.com/aergoio/ship", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 1743, "license": "licensed"}}