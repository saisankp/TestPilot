{"test_class": {"identifier": "LocalMessageStorageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LocalMessageStorage sut = new LocalMessageStorage();", "modifier": "private", "type": "LocalMessageStorage", "declarator": "sut = new LocalMessageStorage()", "var_name": "sut"}], "file": "backend/src/test/java/jmstool/storage/LocalMessageStorageTest.java"}, "test_case": {"identifier": "shouldReturnEmptyResultIfStorageIsEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldReturnEmptyResultIfStorageIsEmpty() {\n\t\tassertThat(sut.getMessagesAfter(0)).isEmpty();\n\t}", "signature": "void shouldReturnEmptyResultIfStorageIsEmpty()", "full_signature": "@Test public void shouldReturnEmptyResultIfStorageIsEmpty()", "class_method_signature": "LocalMessageStorageTest.shouldReturnEmptyResultIfStorageIsEmpty()", "testcase": true, "constructor": false, "invocations": ["isEmpty", "assertThat", "getMessagesAfter"]}, "focal_class": {"identifier": "LocalMessageStorage", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final int MAX_COUNT = 500;", "modifier": "protected static final", "type": "int", "declarator": "MAX_COUNT = 500", "var_name": "MAX_COUNT"}, {"original_string": "private final SortedMap<Long, SimpleMessage> storage = new TreeMap<>();", "modifier": "private final", "type": "SortedMap<Long, SimpleMessage>", "declarator": "storage = new TreeMap<>()", "var_name": "storage"}], "methods": [{"identifier": "getMessagesAfter", "parameters": "(long id)", "modifiers": "public synchronized", "return": "Collection<SimpleMessage>", "signature": "Collection<SimpleMessage> getMessagesAfter(long id)", "full_signature": "public synchronized Collection<SimpleMessage> getMessagesAfter(long id)", "class_method_signature": "LocalMessageStorage.getMessagesAfter(long id)", "testcase": false, "constructor": false}, {"identifier": "addMessage", "parameters": "(SimpleMessage message)", "modifiers": "public synchronized", "return": "void", "signature": "void addMessage(SimpleMessage message)", "full_signature": "public synchronized void addMessage(SimpleMessage message)", "class_method_signature": "LocalMessageStorage.addMessage(SimpleMessage message)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void clear()", "full_signature": "public synchronized void clear()", "class_method_signature": "LocalMessageStorage.clear()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public synchronized", "return": "int", "signature": "int size()", "full_signature": "public synchronized int size()", "class_method_signature": "LocalMessageStorage.size()", "testcase": false, "constructor": false}, {"identifier": "getLastId", "parameters": "()", "modifiers": "public synchronized", "return": "long", "signature": "long getLastId()", "full_signature": "public synchronized long getLastId()", "class_method_signature": "LocalMessageStorage.getLastId()", "testcase": false, "constructor": false}], "file": "backend/src/main/java/jmstool/storage/LocalMessageStorage.java"}, "focal_method": {"identifier": "getMessagesAfter", "parameters": "(long id)", "modifiers": "public synchronized", "return": "Collection<SimpleMessage>", "body": "public synchronized Collection<SimpleMessage> getMessagesAfter(long id) {\n\t\tif (storage.isEmpty()) {\n\t\t\treturn Collections.emptySet();\n\t\t}\n\n\t\treturn storage.entrySet().stream().filter(e -> e.getKey() > id).map(e -> e.getValue())\n\t\t\t\t.collect(Collectors.toSet());\n\t}", "signature": "Collection<SimpleMessage> getMessagesAfter(long id)", "full_signature": "public synchronized Collection<SimpleMessage> getMessagesAfter(long id)", "class_method_signature": "LocalMessageStorage.getMessagesAfter(long id)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "emptySet", "collect", "map", "filter", "stream", "entrySet", "getKey", "getValue", "toSet"]}, "repository": {"repo_id": 100600744, "url": "https://github.com/0xERR0R/jmstool", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 577, "license": "licensed"}}