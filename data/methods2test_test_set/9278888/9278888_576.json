{"test_class": {"identifier": "HexCodecTest", "superclass": "", "interfaces": "", "fields": [], "file": "brave/src/test/java/brave/internal/codec/HexCodecTest.java"}, "test_case": {"identifier": "lowerHexToUnsignedLongTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void lowerHexToUnsignedLongTest() {\n    assertThat(lowerHexToUnsignedLong(\"ffffffffffffffff\")).isEqualTo(-1);\n    assertThat(lowerHexToUnsignedLong(Long.toHexString(Long.MAX_VALUE))).isEqualTo(Long.MAX_VALUE);\n\n    try {\n      lowerHexToUnsignedLong(\"0\"); // invalid\n      failBecauseExceptionWasNotThrown(NumberFormatException.class);\n    } catch (NumberFormatException e) {\n    }\n\n    try {\n      lowerHexToUnsignedLong(Character.toString((char) ('9' + 1))); // invalid\n      failBecauseExceptionWasNotThrown(NumberFormatException.class);\n    } catch (NumberFormatException e) {\n    }\n\n    try {\n      lowerHexToUnsignedLong(Character.toString((char) ('0' - 1))); // invalid\n      failBecauseExceptionWasNotThrown(NumberFormatException.class);\n    } catch (NumberFormatException e) {\n    }\n\n    try {\n      lowerHexToUnsignedLong(Character.toString((char) ('f' + 1))); // invalid\n      failBecauseExceptionWasNotThrown(NumberFormatException.class);\n    } catch (NumberFormatException e) {\n    }\n\n    try {\n      lowerHexToUnsignedLong(Character.toString((char) ('a' - 1))); // invalid\n      failBecauseExceptionWasNotThrown(NumberFormatException.class);\n    } catch (NumberFormatException e) {\n    }\n\n    try {\n      lowerHexToUnsignedLong(\"fffffffffffffffffffffffffffffffff\"); // too long\n      failBecauseExceptionWasNotThrown(NumberFormatException.class);\n    } catch (NumberFormatException e) {\n\n    }\n\n    try {\n      lowerHexToUnsignedLong(\"\"); // too short\n      failBecauseExceptionWasNotThrown(NumberFormatException.class);\n    } catch (NumberFormatException e) {\n\n    }\n\n    try {\n      lowerHexToUnsignedLong(\"rs\"); // bad charset\n      failBecauseExceptionWasNotThrown(NumberFormatException.class);\n    } catch (NumberFormatException e) {\n\n    }\n  }", "signature": "void lowerHexToUnsignedLongTest()", "full_signature": "@Test public void lowerHexToUnsignedLongTest()", "class_method_signature": "HexCodecTest.lowerHexToUnsignedLongTest()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "lowerHexToUnsignedLong", "isEqualTo", "assertThat", "lowerHexToUnsignedLong", "toHexString", "lowerHexToUnsignedLong", "failBecauseExceptionWasNotThrown", "lowerHexToUnsignedLong", "toString", "failBecauseExceptionWasNotThrown", "lowerHexToUnsignedLong", "toString", "failBecauseExceptionWasNotThrown", "lowerHexToUnsignedLong", "toString", "failBecauseExceptionWasNotThrown", "lowerHexToUnsignedLong", "toString", "failBecauseExceptionWasNotThrown", "lowerHexToUnsignedLong", "failBecauseExceptionWasNotThrown", "lowerHexToUnsignedLong", "failBecauseExceptionWasNotThrown", "lowerHexToUnsignedLong", "failBecauseExceptionWasNotThrown"]}, "focal_class": {"identifier": "HexCodec", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final char[] HEX_DIGITS =\n    {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'};", "modifier": "static final", "type": "char[]", "declarator": "HEX_DIGITS =\n    {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'}", "var_name": "HEX_DIGITS"}], "methods": [{"identifier": "lowerHexToUnsignedLong", "parameters": "(CharSequence lowerHex)", "modifiers": "public static", "return": "long", "signature": "long lowerHexToUnsignedLong(CharSequence lowerHex)", "full_signature": "public static long lowerHexToUnsignedLong(CharSequence lowerHex)", "class_method_signature": "HexCodec.lowerHexToUnsignedLong(CharSequence lowerHex)", "testcase": false, "constructor": false}, {"identifier": "lowerHexToUnsignedLong", "parameters": "(CharSequence value, int beginIndex)", "modifiers": "public static", "return": "long", "signature": "long lowerHexToUnsignedLong(CharSequence value, int beginIndex)", "full_signature": "public static long lowerHexToUnsignedLong(CharSequence value, int beginIndex)", "class_method_signature": "HexCodec.lowerHexToUnsignedLong(CharSequence value, int beginIndex)", "testcase": false, "constructor": false}, {"identifier": "lenientLowerHexToUnsignedLong", "parameters": "(CharSequence value, int beginIndex,\n    int endIndex)", "modifiers": "public static", "return": "long", "signature": "long lenientLowerHexToUnsignedLong(CharSequence value, int beginIndex,\n    int endIndex)", "full_signature": "public static long lenientLowerHexToUnsignedLong(CharSequence value, int beginIndex,\n    int endIndex)", "class_method_signature": "HexCodec.lenientLowerHexToUnsignedLong(CharSequence value, int beginIndex,\n    int endIndex)", "testcase": false, "constructor": false}, {"identifier": "isntLowerHexLong", "parameters": "(CharSequence lowerHex)", "modifiers": "static", "return": "NumberFormatException", "signature": "NumberFormatException isntLowerHexLong(CharSequence lowerHex)", "full_signature": "static NumberFormatException isntLowerHexLong(CharSequence lowerHex)", "class_method_signature": "HexCodec.isntLowerHexLong(CharSequence lowerHex)", "testcase": false, "constructor": false}, {"identifier": "toLowerHex", "parameters": "(long v)", "modifiers": "public static", "return": "String", "signature": "String toLowerHex(long v)", "full_signature": "public static String toLowerHex(long v)", "class_method_signature": "HexCodec.toLowerHex(long v)", "testcase": false, "constructor": false}, {"identifier": "writeHexLong", "parameters": "(char[] data, int pos, long v)", "modifiers": "public static", "return": "void", "signature": "void writeHexLong(char[] data, int pos, long v)", "full_signature": "public static void writeHexLong(char[] data, int pos, long v)", "class_method_signature": "HexCodec.writeHexLong(char[] data, int pos, long v)", "testcase": false, "constructor": false}, {"identifier": "writeHexByte", "parameters": "(char[] data, int pos, byte b)", "modifiers": "static", "return": "void", "signature": "void writeHexByte(char[] data, int pos, byte b)", "full_signature": "static void writeHexByte(char[] data, int pos, byte b)", "class_method_signature": "HexCodec.writeHexByte(char[] data, int pos, byte b)", "testcase": false, "constructor": false}, {"identifier": "HexCodec", "parameters": "()", "modifiers": "", "return": "", "signature": " HexCodec()", "full_signature": "  HexCodec()", "class_method_signature": "HexCodec.HexCodec()", "testcase": false, "constructor": true}], "file": "brave/src/main/java/brave/internal/codec/HexCodec.java"}, "focal_method": {"identifier": "lowerHexToUnsignedLong", "parameters": "(CharSequence lowerHex)", "modifiers": "public static", "return": "long", "body": "public static long lowerHexToUnsignedLong(CharSequence lowerHex) {\n    int length = lowerHex.length();\n    if (length < 1 || length > 32) throw isntLowerHexLong(lowerHex);\n\n    // trim off any high bits\n    int beginIndex = length > 16 ? length - 16 : 0;\n\n    return lowerHexToUnsignedLong(lowerHex, beginIndex);\n  }", "signature": "long lowerHexToUnsignedLong(CharSequence lowerHex)", "full_signature": "public static long lowerHexToUnsignedLong(CharSequence lowerHex)", "class_method_signature": "HexCodec.lowerHexToUnsignedLong(CharSequence lowerHex)", "testcase": false, "constructor": false, "invocations": ["length", "isntLowerHexLong", "lowerHexToUnsignedLong"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}