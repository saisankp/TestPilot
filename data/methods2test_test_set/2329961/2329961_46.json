{"test_class": {"identifier": "CloudnamePathTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String[] emptyElements = new String[] {};", "modifier": "private final", "type": "String[]", "declarator": "emptyElements = new String[] {}", "var_name": "emptyElements"}, {"original_string": "private final String[] oneElement = new String[] { \"foo\" };", "modifier": "private final", "type": "String[]", "declarator": "oneElement = new String[] { \"foo\" }", "var_name": "oneElement"}, {"original_string": "private final String[] twoElements = new String[] { \"foo\", \"bar\" };", "modifier": "private final", "type": "String[]", "declarator": "twoElements = new String[] { \"foo\", \"bar\" }", "var_name": "twoElements"}], "file": "cn-core/src/test/java/org/cloudname/core/CloudnamePathTest.java"}, "test_case": {"identifier": "invalidPathNameIsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invalidPathNameIsNull() {\n        assertThat(CloudnamePath.isValidPathElementName(null), is(false));\n    }", "signature": "void invalidPathNameIsNull()", "full_signature": "@Test public void invalidPathNameIsNull()", "class_method_signature": "CloudnamePathTest.invalidPathNameIsNull()", "testcase": true, "constructor": false, "invocations": ["assertThat", "isValidPathElementName", "is"]}, "focal_class": {"identifier": "CloudnamePath", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String[] pathElements;", "modifier": "private final", "type": "String[]", "declarator": "pathElements", "var_name": "pathElements"}, {"original_string": "private static final Pattern NAME_PATTERN = Pattern.compile(\"[a-z0-9-]*\");", "modifier": "private static final", "type": "Pattern", "declarator": "NAME_PATTERN = Pattern.compile(\"[a-z0-9-]*\")", "var_name": "NAME_PATTERN"}], "methods": [{"identifier": "isValidPathElementName", "parameters": "(final String name)", "modifiers": "public static", "return": "boolean", "signature": "boolean isValidPathElementName(final String name)", "full_signature": "public static boolean isValidPathElementName(final String name)", "class_method_signature": "CloudnamePath.isValidPathElementName(final String name)", "testcase": false, "constructor": false}, {"identifier": "CloudnamePath", "parameters": "(final String[] pathElements)", "modifiers": "public", "return": "", "signature": " CloudnamePath(final String[] pathElements)", "full_signature": "public  CloudnamePath(final String[] pathElements)", "class_method_signature": "CloudnamePath.CloudnamePath(final String[] pathElements)", "testcase": false, "constructor": true}, {"identifier": "CloudnamePath", "parameters": "(final CloudnamePath path, final String additionalElement)", "modifiers": "public", "return": "", "signature": " CloudnamePath(final CloudnamePath path, final String additionalElement)", "full_signature": "public  CloudnamePath(final CloudnamePath path, final String additionalElement)", "class_method_signature": "CloudnamePath.CloudnamePath(final CloudnamePath path, final String additionalElement)", "testcase": false, "constructor": true}, {"identifier": "length", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int length()", "full_signature": "public int length()", "class_method_signature": "CloudnamePath.length()", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(final char separator)", "modifiers": "public", "return": "String", "signature": "String join(final char separator)", "full_signature": "public String join(final char separator)", "class_method_signature": "CloudnamePath.join(final char separator)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final int index)", "modifiers": "public", "return": "String", "signature": "String get(final int index)", "full_signature": "public String get(final int index)", "class_method_signature": "CloudnamePath.get(final int index)", "testcase": false, "constructor": false}, {"identifier": "isSubpathOf", "parameters": "(final CloudnamePath other)", "modifiers": "public", "return": "boolean", "signature": "boolean isSubpathOf(final CloudnamePath other)", "full_signature": "public boolean isSubpathOf(final CloudnamePath other)", "class_method_signature": "CloudnamePath.isSubpathOf(final CloudnamePath other)", "testcase": false, "constructor": false}, {"identifier": "getParent", "parameters": "()", "modifiers": "public", "return": "CloudnamePath", "signature": "CloudnamePath getParent()", "full_signature": "public CloudnamePath getParent()", "class_method_signature": "CloudnamePath.getParent()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object other)", "full_signature": "@Override public boolean equals(final Object other)", "class_method_signature": "CloudnamePath.equals(final Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "CloudnamePath.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "CloudnamePath.toString()", "testcase": false, "constructor": false}], "file": "cn-core/src/main/java/org/cloudname/core/CloudnamePath.java"}, "focal_method": {"identifier": "isValidPathElementName", "parameters": "(final String name)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isValidPathElementName(final String name) {\n        if (name == null || name.isEmpty()) {\n            return false;\n        }\n\n        final Matcher matcher = NAME_PATTERN.matcher(name);\n        if (!matcher.matches()) {\n            return false;\n        }\n        if (name.length() > 64) {\n            return false;\n        }\n        if (name.charAt(0) == '-' || name.charAt(name.length() - 1) == '-') {\n            return false;\n        }\n        return true;\n    }", "signature": "boolean isValidPathElementName(final String name)", "full_signature": "public static boolean isValidPathElementName(final String name)", "class_method_signature": "CloudnamePath.isValidPathElementName(final String name)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "matcher", "matches", "length", "charAt", "charAt", "length"]}, "repository": {"repo_id": 2329961, "url": "https://github.com/Cloudname/cloudname", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 21, "size": 26031, "license": "licensed"}}