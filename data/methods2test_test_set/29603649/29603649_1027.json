{"test_class": {"identifier": "BlockLocalhostUsageResponseServletTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int ERROR_CODE = 404;", "modifier": "private static final", "type": "int", "declarator": "ERROR_CODE = 404", "var_name": "ERROR_CODE"}, {"original_string": "private static final String TEXT_PLAIN = \"text/plain\";", "modifier": "private static final", "type": "String", "declarator": "TEXT_PLAIN = \"text/plain\"", "var_name": "TEXT_PLAIN"}, {"original_string": "private static final String BLOCKED_REQUEST_MESSAGE = \"Wilma is configured to ignore request targeting to localhost/127.0.0.1\";", "modifier": "private static final", "type": "String", "declarator": "BLOCKED_REQUEST_MESSAGE = \"Wilma is configured to ignore request targeting to localhost/127.0.0.1\"", "var_name": "BLOCKED_REQUEST_MESSAGE"}, {"original_string": "@InjectMocks\n    private BlockLocalhostUsageResponseServlet underTest;", "modifier": "@InjectMocks\n    private", "type": "BlockLocalhostUsageResponseServlet", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "@Mock\n    private HttpServletRequest req;", "modifier": "@Mock\n    private", "type": "HttpServletRequest", "declarator": "req", "var_name": "req"}, {"original_string": "@Mock\n    private HttpServletResponse resp;", "modifier": "@Mock\n    private", "type": "HttpServletResponse", "declarator": "resp", "var_name": "resp"}, {"original_string": "@Mock\n    private PrintWriter printWriter;", "modifier": "@Mock\n    private", "type": "PrintWriter", "declarator": "printWriter", "var_name": "printWriter"}], "file": "wilma-application/modules/wilma-webapp/src/test/java/com/epam/wilma/webapp/localhost/BlockLocalhostUsageResponseServletTest.java"}, "test_case": {"identifier": "testDoPostShouldDoTheSameAsDoGet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDoPostShouldDoTheSameAsDoGet() throws ServletException, IOException {\n        //GIVEN\n        given(resp.getWriter()).willReturn(printWriter);\n        //WHEN\n        underTest.doPost(req, resp);\n        //THEN\n        verify(resp).setContentType(TEXT_PLAIN);\n        verify(resp).setStatus(ERROR_CODE);\n        verify(printWriter).write(BLOCKED_REQUEST_MESSAGE);\n    }", "signature": "void testDoPostShouldDoTheSameAsDoGet()", "full_signature": "@Test public void testDoPostShouldDoTheSameAsDoGet()", "class_method_signature": "BlockLocalhostUsageResponseServletTest.testDoPostShouldDoTheSameAsDoGet()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getWriter", "doPost", "setContentType", "verify", "setStatus", "verify", "write", "verify"]}, "focal_class": {"identifier": "BlockLocalhostUsageResponseServlet", "superclass": "extends HttpServlet", "interfaces": "", "fields": [{"original_string": "private static final String TEXT_PLAIN = \"text/plain\";", "modifier": "private static final", "type": "String", "declarator": "TEXT_PLAIN = \"text/plain\"", "var_name": "TEXT_PLAIN"}, {"original_string": "private static final String BLOCKED_REQUEST_MESSAGE = \"Wilma is configured to ignore request targeting to localhost/127.0.0.1\";", "modifier": "private static final", "type": "String", "declarator": "BLOCKED_REQUEST_MESSAGE = \"Wilma is configured to ignore request targeting to localhost/127.0.0.1\"", "var_name": "BLOCKED_REQUEST_MESSAGE"}], "methods": [{"identifier": "doGet", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp)", "modifiers": "@Override protected", "return": "void", "signature": "void doGet(final HttpServletRequest req, final HttpServletResponse resp)", "full_signature": "@Override protected void doGet(final HttpServletRequest req, final HttpServletResponse resp)", "class_method_signature": "BlockLocalhostUsageResponseServlet.doGet(final HttpServletRequest req, final HttpServletResponse resp)", "testcase": false, "constructor": false}, {"identifier": "writeAnswer", "parameters": "(final HttpServletResponse resp)", "modifiers": "private", "return": "void", "signature": "void writeAnswer(final HttpServletResponse resp)", "full_signature": "private void writeAnswer(final HttpServletResponse resp)", "class_method_signature": "BlockLocalhostUsageResponseServlet.writeAnswer(final HttpServletResponse resp)", "testcase": false, "constructor": false}, {"identifier": "doPost", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp)", "modifiers": "@Override protected", "return": "void", "signature": "void doPost(final HttpServletRequest req, final HttpServletResponse resp)", "full_signature": "@Override protected void doPost(final HttpServletRequest req, final HttpServletResponse resp)", "class_method_signature": "BlockLocalhostUsageResponseServlet.doPost(final HttpServletRequest req, final HttpServletResponse resp)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-webapp/src/main/java/com/epam/wilma/webapp/localhost/BlockLocalhostUsageResponseServlet.java"}, "focal_method": {"identifier": "doPost", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void doPost(final HttpServletRequest req, final HttpServletResponse resp) throws ServletException, IOException {\n        doGet(req, resp);\n    }", "signature": "void doPost(final HttpServletRequest req, final HttpServletResponse resp)", "full_signature": "@Override protected void doPost(final HttpServletRequest req, final HttpServletResponse resp)", "class_method_signature": "BlockLocalhostUsageResponseServlet.doPost(final HttpServletRequest req, final HttpServletResponse resp)", "testcase": false, "constructor": false, "invocations": ["doGet"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}