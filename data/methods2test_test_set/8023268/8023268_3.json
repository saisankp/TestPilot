{"test_class": {"identifier": "RequestUrlBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String API_VERSION = \"v1\";", "modifier": "private static final", "type": "String", "declarator": "API_VERSION = \"v1\"", "var_name": "API_VERSION"}, {"original_string": "private static final String BASE_URL = \"https://api.keen.io\";", "modifier": "private static final", "type": "String", "declarator": "BASE_URL = \"https://api.keen.io\"", "var_name": "BASE_URL"}, {"original_string": "private static final String PROJECT_ID = \"0123456789abcdef\";", "modifier": "private static final", "type": "String", "declarator": "PROJECT_ID = \"0123456789abcdef\"", "var_name": "PROJECT_ID"}, {"original_string": "private static final String DATASET = \"testing-things\";", "modifier": "private static final", "type": "String", "declarator": "DATASET = \"testing-things\"", "var_name": "DATASET"}, {"original_string": "private final RequestUrlBuilder builder = new RequestUrlBuilder(API_VERSION, BASE_URL);", "modifier": "private final", "type": "RequestUrlBuilder", "declarator": "builder = new RequestUrlBuilder(API_VERSION, BASE_URL)", "var_name": "builder"}], "file": "query/src/test/java/io/keen/client/java/RequestUrlBuilderTest.java"}, "test_case": {"identifier": "shouldCreateSpecificDatasetUrl", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldCreateSpecificDatasetUrl() {\n        URL result = builder.getDatasetsUrl(PROJECT_ID, DATASET, false, Collections.<String, Object>emptyMap());\n\n        assertThat(result.toString(), equalTo(\"https://api.keen.io/v1/projects/0123456789abcdef/datasets/testing-things\"));\n    }", "signature": "void shouldCreateSpecificDatasetUrl()", "full_signature": "@Test public void shouldCreateSpecificDatasetUrl()", "class_method_signature": "RequestUrlBuilderTest.shouldCreateSpecificDatasetUrl()", "testcase": true, "constructor": false, "invocations": ["getDatasetsUrl", "emptyMap", "assertThat", "toString", "equalTo"]}, "focal_class": {"identifier": "RequestUrlBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String apiVersion;", "modifier": "private final", "type": "String", "declarator": "apiVersion", "var_name": "apiVersion"}, {"original_string": "private final String baseUrl;", "modifier": "private final", "type": "String", "declarator": "baseUrl", "var_name": "baseUrl"}], "methods": [{"identifier": "RequestUrlBuilder", "parameters": "(String apiVersion, String baseUrl)", "modifiers": "", "return": "", "signature": " RequestUrlBuilder(String apiVersion, String baseUrl)", "full_signature": "  RequestUrlBuilder(String apiVersion, String baseUrl)", "class_method_signature": "RequestUrlBuilder.RequestUrlBuilder(String apiVersion, String baseUrl)", "testcase": false, "constructor": true}, {"identifier": "getAnalysisUrl", "parameters": "(String projectId, String analysisPath)", "modifiers": "", "return": "URL", "signature": "URL getAnalysisUrl(String projectId, String analysisPath)", "full_signature": " URL getAnalysisUrl(String projectId, String analysisPath)", "class_method_signature": "RequestUrlBuilder.getAnalysisUrl(String projectId, String analysisPath)", "testcase": false, "constructor": false}, {"identifier": "getDatasetsUrl", "parameters": "(String projectId, String datasetName, boolean fetchResults, Map<String, ?> queryParams)", "modifiers": "", "return": "URL", "signature": "URL getDatasetsUrl(String projectId, String datasetName, boolean fetchResults, Map<String, ?> queryParams)", "full_signature": " URL getDatasetsUrl(String projectId, String datasetName, boolean fetchResults, Map<String, ?> queryParams)", "class_method_signature": "RequestUrlBuilder.getDatasetsUrl(String projectId, String datasetName, boolean fetchResults, Map<String, ?> queryParams)", "testcase": false, "constructor": false}, {"identifier": "createBaseDatasetsUrl", "parameters": "(String projectId)", "modifiers": "private", "return": "StringBuilder", "signature": "StringBuilder createBaseDatasetsUrl(String projectId)", "full_signature": "private StringBuilder createBaseDatasetsUrl(String projectId)", "class_method_signature": "RequestUrlBuilder.createBaseDatasetsUrl(String projectId)", "testcase": false, "constructor": false}, {"identifier": "appendDatasetName", "parameters": "(StringBuilder url, String datasetName)", "modifiers": "private", "return": "void", "signature": "void appendDatasetName(StringBuilder url, String datasetName)", "full_signature": "private void appendDatasetName(StringBuilder url, String datasetName)", "class_method_signature": "RequestUrlBuilder.appendDatasetName(StringBuilder url, String datasetName)", "testcase": false, "constructor": false}, {"identifier": "appendQueryParams", "parameters": "(StringBuilder url, Map<String, ?> queryParams)", "modifiers": "private", "return": "void", "signature": "void appendQueryParams(StringBuilder url, Map<String, ?> queryParams)", "full_signature": "private void appendQueryParams(StringBuilder url, Map<String, ?> queryParams)", "class_method_signature": "RequestUrlBuilder.appendQueryParams(StringBuilder url, Map<String, ?> queryParams)", "testcase": false, "constructor": false}, {"identifier": "appendFetchResults", "parameters": "(StringBuilder url)", "modifiers": "private", "return": "void", "signature": "void appendFetchResults(StringBuilder url)", "full_signature": "private void appendFetchResults(StringBuilder url)", "class_method_signature": "RequestUrlBuilder.appendFetchResults(StringBuilder url)", "testcase": false, "constructor": false}], "file": "query/src/main/java/io/keen/client/java/RequestUrlBuilder.java"}, "focal_method": {"identifier": "getDatasetsUrl", "parameters": "(String projectId, String datasetName, boolean fetchResults, Map<String, ?> queryParams)", "modifiers": "", "return": "URL", "body": "URL getDatasetsUrl(String projectId, String datasetName, boolean fetchResults, Map<String, ?> queryParams) throws KeenQueryClientException {\n        try {\n            StringBuilder url = createBaseDatasetsUrl(projectId);\n\n            if (datasetName != null) {\n                appendDatasetName(url, datasetName);\n                if (fetchResults) {\n                    appendFetchResults(url);\n                }\n            }\n\n            if (queryParams != null && !queryParams.isEmpty()) {\n                appendQueryParams(url, queryParams);\n            }\n            return new URL(url.toString());\n        } catch (IOException ex) {\n            Logger.getLogger(RequestUrlBuilder.class.getName())\n                    .log(Level.SEVERE, \"Failed to format dataset URL.\", ex);\n\n            throw new KeenQueryClientException(\"Failed to format dataset URL.\", ex);\n        }\n    }", "signature": "URL getDatasetsUrl(String projectId, String datasetName, boolean fetchResults, Map<String, ?> queryParams)", "full_signature": " URL getDatasetsUrl(String projectId, String datasetName, boolean fetchResults, Map<String, ?> queryParams)", "class_method_signature": "RequestUrlBuilder.getDatasetsUrl(String projectId, String datasetName, boolean fetchResults, Map<String, ?> queryParams)", "testcase": false, "constructor": false, "invocations": ["createBaseDatasetsUrl", "appendDatasetName", "appendFetchResults", "isEmpty", "appendQueryParams", "toString", "log", "getLogger", "getName"]}, "repository": {"repo_id": 8023268, "url": "https://github.com/keenlabs/KeenClient-Java", "language": "Java", "is_fork": false, "fork_count": 48, "stargazer_count": 74, "size": 4291, "license": "licensed"}}