{"test_class": {"identifier": "JSONResponseTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ENTITY_VALUE = \"entityValue\";", "modifier": "private static final", "type": "String", "declarator": "ENTITY_VALUE = \"entityValue\"", "var_name": "ENTITY_VALUE"}, {"original_string": "private static final String ENTITY_JSON_VALUE = \"\\\"\" + ENTITY_VALUE + \"\\\"\";", "modifier": "private static final", "type": "String", "declarator": "ENTITY_JSON_VALUE = \"\\\"\" + ENTITY_VALUE + \"\\\"\"", "var_name": "ENTITY_JSON_VALUE"}], "file": "bundles/org.openhab.core.io.rest/src/test/java/org/openhab/core/io/rest/JSONResponseTest.java"}, "test_case": {"identifier": "createMessageWithErrorStatusShouldCreateErrorResponse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createMessageWithErrorStatusShouldCreateErrorResponse() {\n        Response errorResponse = JSONResponse.createResponse(Status.INTERNAL_SERVER_ERROR, null, \"error\");\n\n        assertThat(errorResponse.getMediaType(), is(equalTo(MediaType.APPLICATION_JSON_TYPE)));\n        assertThat(errorResponse.getStatus(), is(500));\n\n        JsonObject entity = ((JsonObject) errorResponse.getEntity()).get(JSONResponse.JSON_KEY_ERROR).getAsJsonObject();\n        assertThat(entity.get(JSONResponse.JSON_KEY_ERROR_MESSAGE).getAsString(), is(\"error\"));\n        assertThat(entity.get(JSONResponse.JSON_KEY_HTTPCODE).getAsInt(), is(500));\n        assertThat(entity.get(JSONResponse.JSON_KEY_ENTITY), is(nullValue()));\n    }", "signature": "void createMessageWithErrorStatusShouldCreateErrorResponse()", "full_signature": "@Test public void createMessageWithErrorStatusShouldCreateErrorResponse()", "class_method_signature": "JSONResponseTest.createMessageWithErrorStatusShouldCreateErrorResponse()", "testcase": true, "constructor": false, "invocations": ["createResponse", "assertThat", "getMediaType", "is", "equalTo", "assertThat", "getStatus", "is", "getAsJsonObject", "get", "getEntity", "assertThat", "getAsString", "get", "is", "assertThat", "getAsInt", "get", "is", "assertThat", "get", "is", "nullValue"]}, "focal_class": {"identifier": "JSONResponse", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(JSONResponse.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(JSONResponse.class)", "var_name": "logger"}, {"original_string": "private static final JSONResponse INSTANCE = new JSONResponse();", "modifier": "private static final", "type": "JSONResponse", "declarator": "INSTANCE = new JSONResponse()", "var_name": "INSTANCE"}, {"original_string": "private final Gson gson = new GsonBuilder().setDateFormat(DateTimeType.DATE_PATTERN_WITH_TZ_AND_MS).create();", "modifier": "private final", "type": "Gson", "declarator": "gson = new GsonBuilder().setDateFormat(DateTimeType.DATE_PATTERN_WITH_TZ_AND_MS).create()", "var_name": "gson"}, {"original_string": "static final String JSON_KEY_ERROR_MESSAGE = \"message\";", "modifier": "static final", "type": "String", "declarator": "JSON_KEY_ERROR_MESSAGE = \"message\"", "var_name": "JSON_KEY_ERROR_MESSAGE"}, {"original_string": "static final String JSON_KEY_ERROR = \"error\";", "modifier": "static final", "type": "String", "declarator": "JSON_KEY_ERROR = \"error\"", "var_name": "JSON_KEY_ERROR"}, {"original_string": "static final String JSON_KEY_HTTPCODE = \"http-code\";", "modifier": "static final", "type": "String", "declarator": "JSON_KEY_HTTPCODE = \"http-code\"", "var_name": "JSON_KEY_HTTPCODE"}, {"original_string": "static final String JSON_KEY_ENTITY = \"entity\";", "modifier": "static final", "type": "String", "declarator": "JSON_KEY_ENTITY = \"entity\"", "var_name": "JSON_KEY_ENTITY"}], "methods": [{"identifier": "JSONResponse", "parameters": "()", "modifiers": "private", "return": "", "signature": " JSONResponse()", "full_signature": "private  JSONResponse()", "class_method_signature": "JSONResponse.JSONResponse()", "testcase": false, "constructor": true}, {"identifier": "createErrorResponse", "parameters": "(Response.StatusType status, String errormessage)", "modifiers": "public static", "return": "Response", "signature": "Response createErrorResponse(Response.StatusType status, String errormessage)", "full_signature": "public static Response createErrorResponse(Response.StatusType status, String errormessage)", "class_method_signature": "JSONResponse.createErrorResponse(Response.StatusType status, String errormessage)", "testcase": false, "constructor": false}, {"identifier": "createResponse", "parameters": "(Response.StatusType status, Object entity, String errormessage)", "modifiers": "public static", "return": "Response", "signature": "Response createResponse(Response.StatusType status, Object entity, String errormessage)", "full_signature": "public static Response createResponse(Response.StatusType status, Object entity, String errormessage)", "class_method_signature": "JSONResponse.createResponse(Response.StatusType status, Object entity, String errormessage)", "testcase": false, "constructor": false}, {"identifier": "responseBuilder", "parameters": "(Response.StatusType status)", "modifiers": "private", "return": "ResponseBuilder", "signature": "ResponseBuilder responseBuilder(Response.StatusType status)", "full_signature": "private ResponseBuilder responseBuilder(Response.StatusType status)", "class_method_signature": "JSONResponse.responseBuilder(Response.StatusType status)", "testcase": false, "constructor": false}, {"identifier": "createErrorJson", "parameters": "(String message, Response.StatusType status, Object entity, Exception ex)", "modifiers": "private", "return": "JsonElement", "signature": "JsonElement createErrorJson(String message, Response.StatusType status, Object entity, Exception ex)", "full_signature": "private JsonElement createErrorJson(String message, Response.StatusType status, Object entity, Exception ex)", "class_method_signature": "JSONResponse.createErrorJson(String message, Response.StatusType status, Object entity, Exception ex)", "testcase": false, "constructor": false}, {"identifier": "createErrorResponse", "parameters": "(Response.StatusType status, Object entity, String errormessage)", "modifiers": "private", "return": "Response", "signature": "Response createErrorResponse(Response.StatusType status, Object entity, String errormessage)", "full_signature": "private Response createErrorResponse(Response.StatusType status, Object entity, String errormessage)", "class_method_signature": "JSONResponse.createErrorResponse(Response.StatusType status, Object entity, String errormessage)", "testcase": false, "constructor": false}, {"identifier": "createResponse", "parameters": "(Response.StatusType status, final Object entity)", "modifiers": "private", "return": "Response", "signature": "Response createResponse(Response.StatusType status, final Object entity)", "full_signature": "private Response createResponse(Response.StatusType status, final Object entity)", "class_method_signature": "JSONResponse.createResponse(Response.StatusType status, final Object entity)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.io.rest/src/main/java/org/openhab/core/io/rest/JSONResponse.java"}, "focal_method": {"identifier": "createResponse", "parameters": "(Response.StatusType status, Object entity, String errormessage)", "modifiers": "public static", "return": "Response", "body": "public static Response createResponse(Response.StatusType status, Object entity, String errormessage) {\n        if (status.getFamily() != Response.Status.Family.SUCCESSFUL) {\n            return INSTANCE.createErrorResponse(status, entity, errormessage);\n        }\n\n        return INSTANCE.createResponse(status, entity);\n    }", "signature": "Response createResponse(Response.StatusType status, Object entity, String errormessage)", "full_signature": "public static Response createResponse(Response.StatusType status, Object entity, String errormessage)", "class_method_signature": "JSONResponse.createResponse(Response.StatusType status, Object entity, String errormessage)", "testcase": false, "constructor": false, "invocations": ["getFamily", "createErrorResponse", "createResponse"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}