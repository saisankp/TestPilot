{"test_class": {"identifier": "StopTimesMergerTest", "superclass": "", "interfaces": "", "fields": [], "file": "s3tbx-slstr-pdu-stitching/src/test/java/org/esa/s3tbx/slstr/pdu/stitching/manifest/StopTimesMergerTest.java"}, "test_case": {"identifier": "testMergeNodes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMergeNodes() throws Exception {\n        List<Node> fromParents = new ArrayList<>();\n        fromParents.add(ManifestTestUtils.createNode(\n                \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\n                        \"<sentinel-safe:stopTime>2013-07-07T15:37:52.000014Z</sentinel-safe:stopTime>\").getFirstChild());\n        fromParents.add(ManifestTestUtils.createNode(\n                \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\n                        \"<sentinel-safe:stopTime>2013-07-07T15:42:52.000014Z</sentinel-safe:stopTime>\").getFirstChild());\n        fromParents.add(ManifestTestUtils.createNode(\n                \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\n                        \"<sentinel-safe:stopTime>2013-07-07T15:47:52.000014Z</sentinel-safe:stopTime>\").getFirstChild());\n        final Document manifest = ManifestTestUtils.createDocument();\n        final Element manifestElement = manifest.createElement(\"sentinel-safe:stopTime\");\n\n        new StopTimesMerger().mergeNodes(fromParents, manifestElement, manifest);\n\n        assertEquals(0, manifestElement.getAttributes().getLength());\n        assertEquals(1, manifestElement.getChildNodes().getLength());\n        assertEquals(\"2013-07-07T15:47:52.000014Z\", manifestElement.getFirstChild().getNodeValue());\n    }", "signature": "void testMergeNodes()", "full_signature": "@Test public void testMergeNodes()", "class_method_signature": "StopTimesMergerTest.testMergeNodes()", "testcase": true, "constructor": false, "invocations": ["add", "getFirstChild", "createNode", "add", "getFirstChild", "createNode", "add", "getFirstChild", "createNode", "createDocument", "createElement", "mergeNodes", "assertEquals", "getLength", "getAttributes", "assertEquals", "getLength", "getChildNodes", "assertEquals", "getNodeValue", "getFirstChild"]}, "focal_class": {"identifier": "StopTimesMerger", "superclass": "extends AbstractElementMerger", "interfaces": "", "fields": [], "methods": [{"identifier": "mergeNodes", "parameters": "(List<Node> fromParents, Element toParent, Document toDocument)", "modifiers": "@Override public", "return": "void", "signature": "void mergeNodes(List<Node> fromParents, Element toParent, Document toDocument)", "full_signature": "@Override public void mergeNodes(List<Node> fromParents, Element toParent, Document toDocument)", "class_method_signature": "StopTimesMerger.mergeNodes(List<Node> fromParents, Element toParent, Document toDocument)", "testcase": false, "constructor": false}], "file": "s3tbx-slstr-pdu-stitching/src/main/java/org/esa/s3tbx/slstr/pdu/stitching/manifest/StopTimesMerger.java"}, "focal_method": {"identifier": "mergeNodes", "parameters": "(List<Node> fromParents, Element toParent, Document toDocument)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void mergeNodes(List<Node> fromParents, Element toParent, Document toDocument) throws PDUStitchingException {\n        String latetDateAsNodeValue = fromParents.get(0).getFirstChild().getNodeValue();\n        Date latestDate = parseDate(latetDateAsNodeValue);\n        if (fromParents.size() > 1) {\n            for (int i = 1; i < fromParents.size(); i++) {\n                final String nodeValue = fromParents.get(i).getFirstChild().getNodeValue();\n                final Date date = parseDate(nodeValue);\n                if (date.after(latestDate)) {\n                    latetDateAsNodeValue = nodeValue;\n                    latestDate = date;\n                }\n            }\n        }\n        addTextToNode(toParent, latetDateAsNodeValue, toDocument);\n    }", "signature": "void mergeNodes(List<Node> fromParents, Element toParent, Document toDocument)", "full_signature": "@Override public void mergeNodes(List<Node> fromParents, Element toParent, Document toDocument)", "class_method_signature": "StopTimesMerger.mergeNodes(List<Node> fromParents, Element toParent, Document toDocument)", "testcase": false, "constructor": false, "invocations": ["getNodeValue", "getFirstChild", "get", "parseDate", "size", "size", "getNodeValue", "getFirstChild", "get", "parseDate", "after", "addTextToNode"]}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}