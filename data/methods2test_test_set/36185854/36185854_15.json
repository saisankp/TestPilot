{"test_class": {"identifier": "BasenameBuilderTest", "superclass": "extends AbstractTest", "interfaces": "", "fields": [], "file": "feilong-spring-context/src/test/java/com/feilong/spring/messagesource/BasenameBuilderTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test() throws IOException{\n        String urlOrPath = \"classpath:i18n/help_message_zh_HK.properties\";\n        Resource resource = ResourceUtil.getResource(urlOrPath);\n        String build = BasenameBuilder.build(resource);\n\n        LOGGER.debug(build);\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "BasenameBuilderTest.test()", "testcase": true, "constructor": false, "invocations": ["getResource", "build", "debug"]}, "focal_class": {"identifier": "BasenameBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(BasenameBuilder.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(BasenameBuilder.class)", "var_name": "LOGGER"}, {"original_string": "public static final String  REGEX  = \"(_\\\\w+){0,3}\\\\.(properties|xml)\";", "modifier": "public static final", "type": "String", "declarator": "REGEX  = \"(_\\\\w+){0,3}\\\\.(properties|xml)\"", "var_name": "REGEX"}], "methods": [{"identifier": "BasenameBuilder", "parameters": "()", "modifiers": "private", "return": "", "signature": " BasenameBuilder()", "full_signature": "private  BasenameBuilder()", "class_method_signature": "BasenameBuilder.BasenameBuilder()", "testcase": false, "constructor": true}, {"identifier": "build", "parameters": "(Resource resource)", "modifiers": "static", "return": "String", "signature": "String build(Resource resource)", "full_signature": "static String build(Resource resource)", "class_method_signature": "BasenameBuilder.build(Resource resource)", "testcase": false, "constructor": false}, {"identifier": "parseUrl", "parameters": "(URL url,String fileName)", "modifiers": "private static", "return": "String", "signature": "String parseUrl(URL url,String fileName)", "full_signature": "private static String parseUrl(URL url,String fileName)", "class_method_signature": "BasenameBuilder.parseUrl(URL url,String fileName)", "testcase": false, "constructor": false}, {"identifier": "parseBasename", "parameters": "(String replaceFirst)", "modifiers": "private static", "return": "String", "signature": "String parseBasename(String replaceFirst)", "full_signature": "private static String parseBasename(String replaceFirst)", "class_method_signature": "BasenameBuilder.parseBasename(String replaceFirst)", "testcase": false, "constructor": false}], "file": "feilong-spring-context/src/main/java/com/feilong/spring/messagesource/BasenameBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "(Resource resource)", "modifiers": "static", "return": "String", "body": "static String build(Resource resource) throws IOException{\n        Validate.notNull(resource, \"resource can't be null!\");\n\n        //---------------------------------------------------------------\n\n        URL url = resource.getURL();\n        String fileName = url.getFile();\n\n        String afterParseUrl = parseUrl(url, fileName);\n\n        String baseName = parseBasename(afterParseUrl);\n        LOGGER.debug(\"file:[{}],baseName is:[{}]\", fileName, baseName);\n        return baseName;\n    }", "signature": "String build(Resource resource)", "full_signature": "static String build(Resource resource)", "class_method_signature": "BasenameBuilder.build(Resource resource)", "testcase": false, "constructor": false, "invocations": ["notNull", "getURL", "getFile", "parseUrl", "parseBasename", "debug"]}, "repository": {"repo_id": 36185854, "url": "https://github.com/ifeilong/feilong-spring", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 5, "size": 2088, "license": "licensed"}}