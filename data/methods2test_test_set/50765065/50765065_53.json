{"test_class": {"identifier": "PopCheckBoxTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PopCheckBox mPopCheckBox;", "modifier": "private", "type": "PopCheckBox", "declarator": "mPopCheckBox", "var_name": "mPopCheckBox"}, {"original_string": "private ImageView mCheckBox, mCheckBoxFill;", "modifier": "private", "type": "ImageView", "declarator": "mCheckBox", "var_name": "mCheckBox"}, {"original_string": "@Mock\n    private ViewPropertyAnimator mMockAnimatorCheckBox;", "modifier": "@Mock\n    private", "type": "ViewPropertyAnimator", "declarator": "mMockAnimatorCheckBox", "var_name": "mMockAnimatorCheckBox"}, {"original_string": "@Mock\n    private ViewPropertyAnimator  mMockAnimatorCheckBoxFill;", "modifier": "@Mock\n    private", "type": "ViewPropertyAnimator", "declarator": "mMockAnimatorCheckBoxFill", "var_name": "mMockAnimatorCheckBoxFill"}], "file": "app/src/test/java/apidez/com/doit/view/custom/PopCheckBoxTest.java"}, "test_case": {"identifier": "testSetCheckTrueCheckBoxFill", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetCheckTrueCheckBoxFill() throws Exception {\n        mPopCheckBox.setCheck(true);\n        assertEquals(1.0f, mCheckBoxFill.getScaleX());\n        assertEquals(1.0f, mCheckBoxFill.getScaleY());\n    }", "signature": "void testSetCheckTrueCheckBoxFill()", "full_signature": "@Test public void testSetCheckTrueCheckBoxFill()", "class_method_signature": "PopCheckBoxTest.testSetCheckTrueCheckBoxFill()", "testcase": true, "constructor": false, "invocations": ["setCheck", "assertEquals", "getScaleX", "assertEquals", "getScaleY"]}, "focal_class": {"identifier": "PopCheckBox", "superclass": "extends RelativeLayout", "interfaces": "", "fields": [{"original_string": "private final float SCALE_MIN = 0.0f;", "modifier": "private final", "type": "float", "declarator": "SCALE_MIN = 0.0f", "var_name": "SCALE_MIN"}, {"original_string": "private final float SCALE_MAX = 1.0f;", "modifier": "private final", "type": "float", "declarator": "SCALE_MAX = 1.0f", "var_name": "SCALE_MAX"}, {"original_string": "private final int DELAY_DURATION = 75;", "modifier": "private final", "type": "int", "declarator": "DELAY_DURATION = 75", "var_name": "DELAY_DURATION"}, {"original_string": "private final int ANIM_DURATION = 75;", "modifier": "private final", "type": "int", "declarator": "ANIM_DURATION = 75", "var_name": "ANIM_DURATION"}, {"original_string": "private boolean isChecked = false;", "modifier": "private", "type": "boolean", "declarator": "isChecked = false", "var_name": "isChecked"}, {"original_string": "private ImageView mCheckBox;", "modifier": "private", "type": "ImageView", "declarator": "mCheckBox", "var_name": "mCheckBox"}, {"original_string": "private ImageView mCheckBoxFill;", "modifier": "private", "type": "ImageView", "declarator": "mCheckBoxFill", "var_name": "mCheckBoxFill"}], "methods": [{"identifier": "PopCheckBox", "parameters": "(Context context)", "modifiers": "public", "return": "", "signature": " PopCheckBox(Context context)", "full_signature": "public  PopCheckBox(Context context)", "class_method_signature": "PopCheckBox.PopCheckBox(Context context)", "testcase": false, "constructor": true}, {"identifier": "PopCheckBox", "parameters": "(Context context, AttributeSet attrs)", "modifiers": "public", "return": "", "signature": " PopCheckBox(Context context, AttributeSet attrs)", "full_signature": "public  PopCheckBox(Context context, AttributeSet attrs)", "class_method_signature": "PopCheckBox.PopCheckBox(Context context, AttributeSet attrs)", "testcase": false, "constructor": true}, {"identifier": "PopCheckBox", "parameters": "(Context context, AttributeSet attrs, int defStyleAttr)", "modifiers": "public", "return": "", "signature": " PopCheckBox(Context context, AttributeSet attrs, int defStyleAttr)", "full_signature": "public  PopCheckBox(Context context, AttributeSet attrs, int defStyleAttr)", "class_method_signature": "PopCheckBox.PopCheckBox(Context context, AttributeSet attrs, int defStyleAttr)", "testcase": false, "constructor": true}, {"identifier": "initialize", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initialize()", "full_signature": "private void initialize()", "class_method_signature": "PopCheckBox.initialize()", "testcase": false, "constructor": false}, {"identifier": "initViews", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initViews()", "full_signature": "private void initViews()", "class_method_signature": "PopCheckBox.initViews()", "testcase": false, "constructor": false}, {"identifier": "setCheck", "parameters": "(boolean isChecked)", "modifiers": "public", "return": "void", "signature": "void setCheck(boolean isChecked)", "full_signature": "public void setCheck(boolean isChecked)", "class_method_signature": "PopCheckBox.setCheck(boolean isChecked)", "testcase": false, "constructor": false}, {"identifier": "isChecked", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isChecked()", "full_signature": "public boolean isChecked()", "class_method_signature": "PopCheckBox.isChecked()", "testcase": false, "constructor": false}, {"identifier": "animateChecked", "parameters": "(boolean isChecked)", "modifiers": "public", "return": "void", "signature": "void animateChecked(boolean isChecked)", "full_signature": "public void animateChecked(boolean isChecked)", "class_method_signature": "PopCheckBox.animateChecked(boolean isChecked)", "testcase": false, "constructor": false}, {"identifier": "doAnimation", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void doAnimation()", "full_signature": "private void doAnimation()", "class_method_signature": "PopCheckBox.doAnimation()", "testcase": false, "constructor": false}, {"identifier": "stateUnCheck", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void stateUnCheck()", "full_signature": "private void stateUnCheck()", "class_method_signature": "PopCheckBox.stateUnCheck()", "testcase": false, "constructor": false}, {"identifier": "stateCheck", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void stateCheck()", "full_signature": "private void stateCheck()", "class_method_signature": "PopCheckBox.stateCheck()", "testcase": false, "constructor": false}, {"identifier": "checkAnimation", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkAnimation()", "full_signature": "private void checkAnimation()", "class_method_signature": "PopCheckBox.checkAnimation()", "testcase": false, "constructor": false}, {"identifier": "unCheckAnimation", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void unCheckAnimation()", "full_signature": "private void unCheckAnimation()", "class_method_signature": "PopCheckBox.unCheckAnimation()", "testcase": false, "constructor": false}, {"identifier": "scaleAnimation", "parameters": "(View view, int delay, float scale)", "modifiers": "private", "return": "ViewPropertyAnimator", "signature": "ViewPropertyAnimator scaleAnimation(View view, int delay, float scale)", "full_signature": "private ViewPropertyAnimator scaleAnimation(View view, int delay, float scale)", "class_method_signature": "PopCheckBox.scaleAnimation(View view, int delay, float scale)", "testcase": false, "constructor": false}], "file": "app/src/main/java/apidez/com/doit/view/custom/PopCheckBox.java"}, "focal_method": {"identifier": "setCheck", "parameters": "(boolean isChecked)", "modifiers": "public", "return": "void", "body": "public void setCheck(boolean isChecked) {\n        this.isChecked = isChecked;\n        if (this.isChecked) {\n            stateCheck();\n        } else {\n            stateUnCheck();\n        }\n    }", "signature": "void setCheck(boolean isChecked)", "full_signature": "public void setCheck(boolean isChecked)", "class_method_signature": "PopCheckBox.setCheck(boolean isChecked)", "testcase": false, "constructor": false, "invocations": ["stateCheck", "stateUnCheck"]}, "repository": {"repo_id": 50765065, "url": "https://github.com/nongdenchet/DO.IT", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 6, "size": 16808, "license": "licensed"}}