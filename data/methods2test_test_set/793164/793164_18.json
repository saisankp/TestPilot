{"test_class": {"identifier": "XqjTransmogrifierTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private XqjTransmogrifier<String> transformer;", "modifier": "private", "type": "XqjTransmogrifier<String>", "declarator": "transformer", "var_name": "transformer"}], "file": "commons/xml/src/test/java/org/openehealth/ipf/commons/xml/XqjTransmogrifierTest.java"}, "test_case": {"identifier": "zapLocalFunction", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void zapLocalFunction() throws IOException, SAXException {\n        Map<String, Object> dynamicEvalParams = new HashMap<String, Object>();\n        dynamicEvalParams.put(\"language\", \"Bulgarian\");\n        dynamicEvalParams.put(\"author_name\", \"John\");\n        Object[] params = new Object[] { \"xquery/string-q3.xq\", dynamicEvalParams };\n        String zapResult = transformer.zap(source(\"xquery/string.xml\"), params);\n        assertTrue(XMLUnit.compareXML(result(\"xquery/string-q3.xml\"), zapResult).similar());\n    }", "signature": "void zapLocalFunction()", "full_signature": "@Test public void zapLocalFunction()", "class_method_signature": "XqjTransmogrifierTest.zapLocalFunction()", "testcase": true, "constructor": false, "invocations": ["put", "put", "zap", "source", "assertTrue", "similar", "compareXML", "result"]}, "focal_class": {"identifier": "XqjTransmogrifier", "superclass": "", "interfaces": "implements Transmogrifier<Source, T>", "fields": [{"original_string": "private final static Logger LOG = LoggerFactory.getLogger(XqjTransmogrifier.class);", "modifier": "private final static", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(XqjTransmogrifier.class)", "var_name": "LOG"}, {"original_string": "private final Map<Object, XQPreparedExpression> cache = new HashMap<Object, XQPreparedExpression>();", "modifier": "private final", "type": "Map<Object, XQPreparedExpression>", "declarator": "cache = new HashMap<Object, XQPreparedExpression>()", "var_name": "cache"}, {"original_string": "private final XQDataSource ds;", "modifier": "private final", "type": "XQDataSource", "declarator": "ds", "var_name": "ds"}, {"original_string": "private XQConnection connection;", "modifier": "private", "type": "XQConnection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private Map<String, String> staticParams;", "modifier": "private", "type": "Map<String, String>", "declarator": "staticParams", "var_name": "staticParams"}, {"original_string": "private final Class<T> outputFormat;", "modifier": "private final", "type": "Class<T>", "declarator": "outputFormat", "var_name": "outputFormat"}], "methods": [{"identifier": "XqjTransmogrifier", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "", "signature": " XqjTransmogrifier()", "full_signature": "@SuppressWarnings(\"unchecked\") public  XqjTransmogrifier()", "class_method_signature": "XqjTransmogrifier.XqjTransmogrifier()", "testcase": false, "constructor": true}, {"identifier": "XqjTransmogrifier", "parameters": "(Class<T> outputFormat)", "modifiers": "public", "return": "", "signature": " XqjTransmogrifier(Class<T> outputFormat)", "full_signature": "public  XqjTransmogrifier(Class<T> outputFormat)", "class_method_signature": "XqjTransmogrifier.XqjTransmogrifier(Class<T> outputFormat)", "testcase": false, "constructor": true}, {"identifier": "XqjTransmogrifier", "parameters": "(Class<T> outputFormat, Map<String, Object> globalParams)", "modifiers": "public", "return": "", "signature": " XqjTransmogrifier(Class<T> outputFormat, Map<String, Object> globalParams)", "full_signature": "public  XqjTransmogrifier(Class<T> outputFormat, Map<String, Object> globalParams)", "class_method_signature": "XqjTransmogrifier.XqjTransmogrifier(Class<T> outputFormat, Map<String, Object> globalParams)", "testcase": false, "constructor": true}, {"identifier": "initGlobalConfiguration", "parameters": "(Map<String, Object> globalParams)", "modifiers": "private", "return": "void", "signature": "void initGlobalConfiguration(Map<String, Object> globalParams)", "full_signature": "private void initGlobalConfiguration(Map<String, Object> globalParams)", "class_method_signature": "XqjTransmogrifier.initGlobalConfiguration(Map<String, Object> globalParams)", "testcase": false, "constructor": false}, {"identifier": "zap", "parameters": "(Source source, Object... params)", "modifiers": "@Override public", "return": "T", "signature": "T zap(Source source, Object... params)", "full_signature": "@Override public T zap(Source source, Object... params)", "class_method_signature": "XqjTransmogrifier.zap(Source source, Object... params)", "testcase": false, "constructor": false}, {"identifier": "doZap", "parameters": "(Source source, Result result, Object... params)", "modifiers": "private", "return": "void", "signature": "void doZap(Source source, Result result, Object... params)", "full_signature": "private void doZap(Source source, Result result, Object... params)", "class_method_signature": "XqjTransmogrifier.doZap(Source source, Result result, Object... params)", "testcase": false, "constructor": false}, {"identifier": "bindExpressionContext", "parameters": "(XQDynamicContext exp, Map<String, Object> params)", "modifiers": "private", "return": "void", "signature": "void bindExpressionContext(XQDynamicContext exp, Map<String, Object> params)", "full_signature": "private void bindExpressionContext(XQDynamicContext exp, Map<String, Object> params)", "class_method_signature": "XqjTransmogrifier.bindExpressionContext(XQDynamicContext exp, Map<String, Object> params)", "testcase": false, "constructor": false}, {"identifier": "expression", "parameters": "(Object... params)", "modifiers": "synchronized protected", "return": "XQPreparedExpression", "signature": "XQPreparedExpression expression(Object... params)", "full_signature": "synchronized protected XQPreparedExpression expression(Object... params)", "class_method_signature": "XqjTransmogrifier.expression(Object... params)", "testcase": false, "constructor": false}, {"identifier": "doPreparedExpression", "parameters": "(Object... params)", "modifiers": "private", "return": "XQPreparedExpression", "signature": "XQPreparedExpression doPreparedExpression(Object... params)", "full_signature": "private XQPreparedExpression doPreparedExpression(Object... params)", "class_method_signature": "XqjTransmogrifier.doPreparedExpression(Object... params)", "testcase": false, "constructor": false}, {"identifier": "initConnection", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initConnection()", "full_signature": "private void initConnection()", "class_method_signature": "XqjTransmogrifier.initConnection()", "testcase": false, "constructor": false}, {"identifier": "closeQuietly", "parameters": "(XQResultSequence seq)", "modifiers": "private", "return": "void", "signature": "void closeQuietly(XQResultSequence seq)", "full_signature": "private void closeQuietly(XQResultSequence seq)", "class_method_signature": "XqjTransmogrifier.closeQuietly(XQResultSequence seq)", "testcase": false, "constructor": false}, {"identifier": "getStaticParams", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getStaticParams()", "full_signature": "public Map<String, String> getStaticParams()", "class_method_signature": "XqjTransmogrifier.getStaticParams()", "testcase": false, "constructor": false}, {"identifier": "setStaticParams", "parameters": "(Map<String, String> staticParams)", "modifiers": "public", "return": "void", "signature": "void setStaticParams(Map<String, String> staticParams)", "full_signature": "public void setStaticParams(Map<String, String> staticParams)", "class_method_signature": "XqjTransmogrifier.setStaticParams(Map<String, String> staticParams)", "testcase": false, "constructor": false}], "file": "commons/xml/src/main/java/org/openehealth/ipf/commons/xml/XqjTransmogrifier.java"}, "focal_method": {"identifier": "zap", "parameters": "(Source source, Object... params)", "modifiers": "@Override public", "return": "T", "body": "@Override\n    public T zap(Source source, Object... params) {\n        ResultHolder<T> accessor = ResultHolderFactory.create(outputFormat);\n        Result result = accessor.createResult();\n        doZap(source, result, params);\n        return accessor.getResult();\n    }", "signature": "T zap(Source source, Object... params)", "full_signature": "@Override public T zap(Source source, Object... params)", "class_method_signature": "XqjTransmogrifier.zap(Source source, Object... params)", "testcase": false, "constructor": false, "invocations": ["create", "createResult", "doZap", "getResult"]}, "repository": {"repo_id": 793164, "url": "https://github.com/krasserm/ipf", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 30233, "license": "licensed"}}