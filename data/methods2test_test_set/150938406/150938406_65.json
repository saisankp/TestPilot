{"test_class": {"identifier": "JdbcTypeConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/alibaba/alink/operator/common/io/types/JdbcTypeConverterTest.java"}, "test_case": {"identifier": "testUnsupportedFlinkType", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testUnsupportedFlinkType() {\n        JdbcTypeConverter.getIntegerSqlType(TypeInformation.of(JdbcTypeConverter.class));\n    }", "signature": "void testUnsupportedFlinkType()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testUnsupportedFlinkType()", "class_method_signature": "JdbcTypeConverterTest.testUnsupportedFlinkType()", "testcase": true, "constructor": false, "invocations": ["getIntegerSqlType", "of"]}, "focal_class": {"identifier": "JdbcTypeConverter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Map<Integer, TypeInformation<?>> MAP_INDEX_TO_FLINK_TYPE;", "modifier": "private static final", "type": "Map<Integer, TypeInformation<?>>", "declarator": "MAP_INDEX_TO_FLINK_TYPE", "var_name": "MAP_INDEX_TO_FLINK_TYPE"}, {"original_string": "private static final Map<TypeInformation<?>, Integer> MAP_FLINK_TYPE_TO_INDEX;", "modifier": "private static final", "type": "Map<TypeInformation<?>, Integer>", "declarator": "MAP_FLINK_TYPE_TO_INDEX", "var_name": "MAP_FLINK_TYPE_TO_INDEX"}], "methods": [{"identifier": "getIntegerSqlType", "parameters": "(TypeInformation<?> type)", "modifiers": "public static", "return": "int", "signature": "int getIntegerSqlType(TypeInformation<?> type)", "full_signature": "public static int getIntegerSqlType(TypeInformation<?> type)", "class_method_signature": "JdbcTypeConverter.getIntegerSqlType(TypeInformation<?> type)", "testcase": false, "constructor": false}, {"identifier": "getFlinkType", "parameters": "(int typeIndex)", "modifiers": "public static", "return": "TypeInformation<?>", "signature": "TypeInformation<?> getFlinkType(int typeIndex)", "full_signature": "public static TypeInformation<?> getFlinkType(int typeIndex)", "class_method_signature": "JdbcTypeConverter.getFlinkType(int typeIndex)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/alibaba/alink/operator/common/io/types/JdbcTypeConverter.java"}, "focal_method": {"identifier": "getIntegerSqlType", "parameters": "(TypeInformation<?> type)", "modifiers": "public static", "return": "int", "body": "public static int getIntegerSqlType(TypeInformation<?> type) {\n        if (MAP_FLINK_TYPE_TO_INDEX.containsKey(type)) {\n            return MAP_FLINK_TYPE_TO_INDEX.get(type);\n        } else if (type instanceof ObjectArrayTypeInfo || type instanceof PrimitiveArrayTypeInfo) {\n            return Types.ARRAY;\n        } else {\n            throw new IllegalArgumentException(\"Unsupported type: \" + type);\n        }\n    }", "signature": "int getIntegerSqlType(TypeInformation<?> type)", "full_signature": "public static int getIntegerSqlType(TypeInformation<?> type)", "class_method_signature": "JdbcTypeConverter.getIntegerSqlType(TypeInformation<?> type)", "testcase": false, "constructor": false, "invocations": ["containsKey", "get"]}, "repository": {"repo_id": 150938406, "url": "https://github.com/alibaba/Alink", "stars": 1923, "created": "9/30/2018 6:36:11 AM +00:00", "updates": "2020-01-27T10:24:34+00:00", "fork": "False", "license": "licensed"}}