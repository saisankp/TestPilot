{"test_class": {"identifier": "ModifyFeatureDefinitionLiveCommandAnswerBuilderImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ModifyFeatureDefinitionLiveCommand commandMock;", "modifier": "@Mock\n    private", "type": "ModifyFeatureDefinitionLiveCommand", "declarator": "commandMock", "var_name": "commandMock"}, {"original_string": "private ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl underTest;", "modifier": "private", "type": "ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl", "declarator": "underTest", "var_name": "underTest"}], "file": "signals/commands/live/src/test/java/org/eclipse/ditto/signals/commands/live/modify/ModifyFeatureDefinitionLiveCommandAnswerBuilderImplTest.java"}, "test_case": {"identifier": "tryToGetNewInstanceWithNullCommand", "parameters": "()", "modifiers": "@SuppressWarnings(\"ConstantConditions\") @Test public", "return": "void", "body": "@SuppressWarnings(\"ConstantConditions\")\n    @Test\n    public void tryToGetNewInstanceWithNullCommand() {\n        assertThatNullPointerException()\n                .isThrownBy(() -> ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl.newInstance(null))\n                .withMessage(\"The %s must not be null!\", \"command\")\n                .withNoCause();\n    }", "signature": "void tryToGetNewInstanceWithNullCommand()", "full_signature": "@SuppressWarnings(\"ConstantConditions\") @Test public void tryToGetNewInstanceWithNullCommand()", "class_method_signature": "ModifyFeatureDefinitionLiveCommandAnswerBuilderImplTest.tryToGetNewInstanceWithNullCommand()", "testcase": true, "constructor": false, "invocations": ["withNoCause", "withMessage", "isThrownBy", "assertThatNullPointerException", "newInstance"]}, "focal_class": {"identifier": "ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl", "superclass": "extends AbstractLiveCommandAnswerBuilder<ModifyFeatureDefinitionLiveCommand, ModifyFeatureDefinitionLiveCommandAnswerBuilder.ResponseFactory, ModifyFeatureDefinitionLiveCommandAnswerBuilder.EventFactory>", "interfaces": "implements ModifyFeatureDefinitionLiveCommandAnswerBuilder", "fields": [], "methods": [{"identifier": "ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl", "parameters": "(final ModifyFeatureDefinitionLiveCommand command)", "modifiers": "private", "return": "", "signature": " ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl(final ModifyFeatureDefinitionLiveCommand command)", "full_signature": "private  ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl(final ModifyFeatureDefinitionLiveCommand command)", "class_method_signature": "ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl.ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl(final ModifyFeatureDefinitionLiveCommand command)", "testcase": false, "constructor": true}, {"identifier": "newInstance", "parameters": "(\n            final ModifyFeatureDefinitionLiveCommand command)", "modifiers": "public static", "return": "ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl", "signature": "ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl newInstance(\n            final ModifyFeatureDefinitionLiveCommand command)", "full_signature": "public static ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl newInstance(\n            final ModifyFeatureDefinitionLiveCommand command)", "class_method_signature": "ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl.newInstance(\n            final ModifyFeatureDefinitionLiveCommand command)", "testcase": false, "constructor": false}, {"identifier": "doCreateResponse", "parameters": "(\n            final Function<ResponseFactory, CommandResponse<?>> createResponseFunction)", "modifiers": "@Override protected", "return": "CommandResponse", "signature": "CommandResponse doCreateResponse(\n            final Function<ResponseFactory, CommandResponse<?>> createResponseFunction)", "full_signature": "@Override protected CommandResponse doCreateResponse(\n            final Function<ResponseFactory, CommandResponse<?>> createResponseFunction)", "class_method_signature": "ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl.doCreateResponse(\n            final Function<ResponseFactory, CommandResponse<?>> createResponseFunction)", "testcase": false, "constructor": false}, {"identifier": "doCreateEvent", "parameters": "(final Function<EventFactory, Event<?>> createEventFunction)", "modifiers": "@Override protected", "return": "Event", "signature": "Event doCreateEvent(final Function<EventFactory, Event<?>> createEventFunction)", "full_signature": "@Override protected Event doCreateEvent(final Function<EventFactory, Event<?>> createEventFunction)", "class_method_signature": "ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl.doCreateEvent(final Function<EventFactory, Event<?>> createEventFunction)", "testcase": false, "constructor": false}], "file": "signals/commands/live/src/main/java/org/eclipse/ditto/signals/commands/live/modify/ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl.java"}, "focal_method": {"identifier": "newInstance", "parameters": "(\n            final ModifyFeatureDefinitionLiveCommand command)", "modifiers": "public static", "return": "ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl", "body": "public static ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl newInstance(\n            final ModifyFeatureDefinitionLiveCommand command) {\n        return new ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl(command);\n    }", "signature": "ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl newInstance(\n            final ModifyFeatureDefinitionLiveCommand command)", "full_signature": "public static ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl newInstance(\n            final ModifyFeatureDefinitionLiveCommand command)", "class_method_signature": "ModifyFeatureDefinitionLiveCommandAnswerBuilderImpl.newInstance(\n            final ModifyFeatureDefinitionLiveCommand command)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}