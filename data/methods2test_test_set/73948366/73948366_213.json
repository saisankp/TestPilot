{"test_class": {"identifier": "ValidateTest", "superclass": "", "interfaces": "", "fields": [], "file": "libs/java/auth_core/src/test/java/com/yahoo/athenz/auth/util/ValidateTest.java"}, "test_case": {"identifier": "testPrincipalNameValidationValid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPrincipalNameValidationValid() {\n        \n        assertTrue(Validate.principalName(\"user:doe\"));\n        assertTrue(Validate.principalName(\"user:doe\"));\n        assertTrue(Validate.principalName(\"user:john.doe\"));\n        assertTrue(Validate.principalName(\"user.user:doe\"));\n        assertTrue(Validate.principalName(\"user.user:john.doe\"));\n        assertTrue(Validate.principalName(\"user:john_doe\"));\n        assertTrue(Validate.principalName(\"john-doe\"));\n        assertTrue(Validate.principalName(\"user:john-doe\"));\n    }", "signature": "void testPrincipalNameValidationValid()", "full_signature": "@Test public void testPrincipalNameValidationValid()", "class_method_signature": "ValidateTest.testPrincipalNameValidationValid()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "principalName", "assertTrue", "principalName", "assertTrue", "principalName", "assertTrue", "principalName", "assertTrue", "principalName", "assertTrue", "principalName", "assertTrue", "principalName", "assertTrue", "principalName"]}, "focal_class": {"identifier": "Validate", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PRINCIPAL_REGEX = \"((([a-zA-Z0-9_][a-zA-Z0-9_-]*\\\\.)*[a-zA-Z0-9_][a-zA-Z0-9_-]*):)?(([a-zA-Z0-9_][a-zA-Z0-9_-]*\\\\.)*[a-zA-Z0-9_][a-zA-Z0-9_-]*)\";", "modifier": "private static final", "type": "String", "declarator": "PRINCIPAL_REGEX = \"((([a-zA-Z0-9_][a-zA-Z0-9_-]*\\\\.)*[a-zA-Z0-9_][a-zA-Z0-9_-]*):)?(([a-zA-Z0-9_][a-zA-Z0-9_-]*\\\\.)*[a-zA-Z0-9_][a-zA-Z0-9_-]*)\"", "var_name": "PRINCIPAL_REGEX"}, {"original_string": "private static final String DOMAIN_REGEX = \"([a-zA-Z0-9_][a-zA-Z0-9_-]*\\\\.)*[a-zA-Z0-9_][a-zA-Z0-9_-]*\";", "modifier": "private static final", "type": "String", "declarator": "DOMAIN_REGEX = \"([a-zA-Z0-9_][a-zA-Z0-9_-]*\\\\.)*[a-zA-Z0-9_][a-zA-Z0-9_-]*\"", "var_name": "DOMAIN_REGEX"}, {"original_string": "private static Pattern principalPattern = Pattern.compile(PRINCIPAL_REGEX);", "modifier": "private static", "type": "Pattern", "declarator": "principalPattern = Pattern.compile(PRINCIPAL_REGEX)", "var_name": "principalPattern"}, {"original_string": "private static Pattern domainPattern = Pattern.compile(DOMAIN_REGEX);", "modifier": "private static", "type": "Pattern", "declarator": "domainPattern = Pattern.compile(DOMAIN_REGEX)", "var_name": "domainPattern"}], "methods": [{"identifier": "principalName", "parameters": "(String name)", "modifiers": "public static", "return": "boolean", "signature": "boolean principalName(String name)", "full_signature": "public static boolean principalName(String name)", "class_method_signature": "Validate.principalName(String name)", "testcase": false, "constructor": false}, {"identifier": "domainName", "parameters": "(String name)", "modifiers": "public static", "return": "boolean", "signature": "boolean domainName(String name)", "full_signature": "public static boolean domainName(String name)", "class_method_signature": "Validate.domainName(String name)", "testcase": false, "constructor": false}], "file": "libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/util/Validate.java"}, "focal_method": {"identifier": "principalName", "parameters": "(String name)", "modifiers": "public static", "return": "boolean", "body": "public static boolean principalName(String name) {\n        if (name == null || name.isEmpty()) {\n            return false;\n        }\n        Matcher matcher = principalPattern.matcher(name);\n        return matcher.matches();\n    }", "signature": "boolean principalName(String name)", "full_signature": "public static boolean principalName(String name)", "class_method_signature": "Validate.principalName(String name)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "matcher", "matches"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}