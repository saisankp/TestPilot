{"test_class": {"identifier": "LocalTextModificationAccessorTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/src/test/java/org/apache/iotdb/db/engine/modification/io/LocalTextModificationAccessorTest.java"}, "test_case": {"identifier": "readNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void readNull() throws IOException {\n    String tempFileName = TestConstant.BASE_OUTPUT_PATH.concat(\"mod.temp\");\n    LocalTextModificationAccessor accessor;\n    accessor = new LocalTextModificationAccessor(tempFileName);\n    new File(tempFileName).delete();\n    Collection<Modification> modifications = accessor.read();\n    assertEquals(new ArrayList<>(), modifications);\n  }", "signature": "void readNull()", "full_signature": "@Test public void readNull()", "class_method_signature": "LocalTextModificationAccessorTest.readNull()", "testcase": true, "constructor": false, "invocations": ["concat", "delete", "read", "assertEquals"]}, "focal_class": {"identifier": "LocalTextModificationAccessor", "superclass": "", "interfaces": "implements ModificationReader, ModificationWriter, AutoCloseable", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(LocalTextModificationAccessor.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(LocalTextModificationAccessor.class)", "var_name": "logger"}, {"original_string": "private static final String SEPARATOR = \",\";", "modifier": "private static final", "type": "String", "declarator": "SEPARATOR = \",\"", "var_name": "SEPARATOR"}, {"original_string": "private static final String ABORT_MARK = \"aborted\";", "modifier": "private static final", "type": "String", "declarator": "ABORT_MARK = \"aborted\"", "var_name": "ABORT_MARK"}, {"original_string": "private String filePath;", "modifier": "private", "type": "String", "declarator": "filePath", "var_name": "filePath"}, {"original_string": "private BufferedWriter writer;", "modifier": "private", "type": "BufferedWriter", "declarator": "writer", "var_name": "writer"}], "methods": [{"identifier": "LocalTextModificationAccessor", "parameters": "(String filePath)", "modifiers": "public", "return": "", "signature": " LocalTextModificationAccessor(String filePath)", "full_signature": "public  LocalTextModificationAccessor(String filePath)", "class_method_signature": "LocalTextModificationAccessor.LocalTextModificationAccessor(String filePath)", "testcase": false, "constructor": true}, {"identifier": "read", "parameters": "()", "modifiers": "@Override public", "return": "Collection<Modification>", "signature": "Collection<Modification> read()", "full_signature": "@Override public Collection<Modification> read()", "class_method_signature": "LocalTextModificationAccessor.read()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "LocalTextModificationAccessor.close()", "testcase": false, "constructor": false}, {"identifier": "abort", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void abort()", "full_signature": "@Override public void abort()", "class_method_signature": "LocalTextModificationAccessor.abort()", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(Modification mod)", "modifiers": "@Override public", "return": "void", "signature": "void write(Modification mod)", "full_signature": "@Override public void write(Modification mod)", "class_method_signature": "LocalTextModificationAccessor.write(Modification mod)", "testcase": false, "constructor": false}, {"identifier": "encodeModification", "parameters": "(Modification mod)", "modifiers": "private static", "return": "String", "signature": "String encodeModification(Modification mod)", "full_signature": "private static String encodeModification(Modification mod)", "class_method_signature": "LocalTextModificationAccessor.encodeModification(Modification mod)", "testcase": false, "constructor": false}, {"identifier": "decodeModification", "parameters": "(String src)", "modifiers": "private static", "return": "Modification", "signature": "Modification decodeModification(String src)", "full_signature": "private static Modification decodeModification(String src)", "class_method_signature": "LocalTextModificationAccessor.decodeModification(String src)", "testcase": false, "constructor": false}, {"identifier": "encodeDeletion", "parameters": "(Deletion del)", "modifiers": "private static", "return": "String", "signature": "String encodeDeletion(Deletion del)", "full_signature": "private static String encodeDeletion(Deletion del)", "class_method_signature": "LocalTextModificationAccessor.encodeDeletion(Deletion del)", "testcase": false, "constructor": false}, {"identifier": "decodeDeletion", "parameters": "(String[] fields)", "modifiers": "private static", "return": "Deletion", "signature": "Deletion decodeDeletion(String[] fields)", "full_signature": "private static Deletion decodeDeletion(String[] fields)", "class_method_signature": "LocalTextModificationAccessor.decodeDeletion(String[] fields)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/apache/iotdb/db/engine/modification/io/LocalTextModificationAccessor.java"}, "focal_method": {"identifier": "read", "parameters": "()", "modifiers": "@Override public", "return": "Collection<Modification>", "body": "@Override\n  public Collection<Modification> read() {\n    if (!FSFactoryProducer.getFSFactory().getFile(filePath).exists()) {\n      logger.debug(\"No modification has been written to this file\");\n      return new ArrayList<>();\n    }\n\n    String line;\n    List<Modification> modificationList = new ArrayList<>();\n    try(BufferedReader reader = FSFactoryProducer.getFSFactory().getBufferedReader(filePath)) {\n      while ((line = reader.readLine()) != null) {\n        if (line.equals(ABORT_MARK) && !modificationList.isEmpty()) {\n          modificationList.remove(modificationList.size() - 1);\n        } else {\n          modificationList.add(decodeModification(line));\n        }\n      }\n    } catch (IOException e) {\n      logger.error(\"An error occurred when reading modifications, and the remaining modifications \"\n          + \"were ignored.\", e);\n    }\n    return modificationList;\n  }", "signature": "Collection<Modification> read()", "full_signature": "@Override public Collection<Modification> read()", "class_method_signature": "LocalTextModificationAccessor.read()", "testcase": false, "constructor": false, "invocations": ["exists", "getFile", "getFSFactory", "debug", "getBufferedReader", "getFSFactory", "readLine", "equals", "isEmpty", "remove", "size", "add", "decodeModification", "error"]}, "repository": {"repo_id": 158975124, "url": "https://github.com/apache/incubator-iotdb", "stars": 449, "created": "11/24/2018 9:29:17 PM +00:00", "updates": "2020-01-21T08:10:15+00:00", "fork": "False", "license": "licensed"}}