{"test_class": {"identifier": "DefaultMessageMapperFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static MappingConfig mappingConfig;", "modifier": "private static", "type": "MappingConfig", "declarator": "mappingConfig", "var_name": "mappingConfig"}, {"original_string": "private static ActorSystem system;", "modifier": "private static", "type": "ActorSystem", "declarator": "system", "var_name": "system"}, {"original_string": "@Mock\n    private DiagnosticLoggingAdapter log;", "modifier": "@Mock\n    private", "type": "DiagnosticLoggingAdapter", "declarator": "log", "var_name": "log"}, {"original_string": "private DefaultMessageMapperFactory underTest;", "modifier": "private", "type": "DefaultMessageMapperFactory", "declarator": "underTest", "var_name": "underTest"}], "file": "services/connectivity/mapping/src/test/java/org/eclipse/ditto/services/connectivity/mapping/DefaultMessageMapperFactoryTest.java"}, "test_case": {"identifier": "createWithFactoryMethod", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createWithFactoryMethod() {\n        // looking for a method containing 'test' and returning a MessageMapper in Mappers.class\n        assertThat(underTest.createMessageMapperInstance(\"test\")).isPresent();\n    }", "signature": "void createWithFactoryMethod()", "full_signature": "@Test public void createWithFactoryMethod()", "class_method_signature": "DefaultMessageMapperFactoryTest.createWithFactoryMethod()", "testcase": true, "constructor": false, "invocations": ["isPresent", "assertThat", "createMessageMapperInstance"]}, "focal_class": {"identifier": "DefaultMessageMapperFactory", "superclass": "", "interfaces": "implements MessageMapperFactory", "fields": [{"original_string": "private final ConnectionId connectionId;", "modifier": "private final", "type": "ConnectionId", "declarator": "connectionId", "var_name": "connectionId"}, {"original_string": "private final MappingConfig mappingConfig;", "modifier": "private final", "type": "MappingConfig", "declarator": "mappingConfig", "var_name": "mappingConfig"}, {"original_string": "private final ExtendedActorSystem actorSystem;", "modifier": "private final", "type": "ExtendedActorSystem", "declarator": "actorSystem", "var_name": "actorSystem"}, {"original_string": "private final List<MessageMapperExtension> messageMapperExtensions;", "modifier": "private final", "type": "List<MessageMapperExtension>", "declarator": "messageMapperExtensions", "var_name": "messageMapperExtensions"}, {"original_string": "private static final List<Class<? extends MessageMapperExtension>> messageMapperExtensionClasses =\n            loadMessageMapperExtensionClasses();", "modifier": "private static final", "type": "List<Class<? extends MessageMapperExtension>>", "declarator": "messageMapperExtensionClasses =\n            loadMessageMapperExtensionClasses()", "var_name": "messageMapperExtensionClasses"}, {"original_string": "private static final Map<String, Class<?>> registeredMappers = tryToLoadPayloadMappers();", "modifier": "private static final", "type": "Map<String, Class<?>>", "declarator": "registeredMappers = tryToLoadPayloadMappers()", "var_name": "registeredMappers"}, {"original_string": "private final LoggingAdapter log;", "modifier": "private final", "type": "LoggingAdapter", "declarator": "log", "var_name": "log"}], "methods": [{"identifier": "DefaultMessageMapperFactory", "parameters": "(final ConnectionId connectionId,\n            final MappingConfig mappingConfig,\n            final ExtendedActorSystem actorSystem,\n            final List<MessageMapperExtension> messageMapperExtensions,\n            final LoggingAdapter log)", "modifiers": "private", "return": "", "signature": " DefaultMessageMapperFactory(final ConnectionId connectionId,\n            final MappingConfig mappingConfig,\n            final ExtendedActorSystem actorSystem,\n            final List<MessageMapperExtension> messageMapperExtensions,\n            final LoggingAdapter log)", "full_signature": "private  DefaultMessageMapperFactory(final ConnectionId connectionId,\n            final MappingConfig mappingConfig,\n            final ExtendedActorSystem actorSystem,\n            final List<MessageMapperExtension> messageMapperExtensions,\n            final LoggingAdapter log)", "class_method_signature": "DefaultMessageMapperFactory.DefaultMessageMapperFactory(final ConnectionId connectionId,\n            final MappingConfig mappingConfig,\n            final ExtendedActorSystem actorSystem,\n            final List<MessageMapperExtension> messageMapperExtensions,\n            final LoggingAdapter log)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final ConnectionId connectionId,\n            final ActorSystem actorSystem,\n            final MappingConfig mappingConfig,\n            final LoggingAdapter log)", "modifiers": "public static", "return": "DefaultMessageMapperFactory", "signature": "DefaultMessageMapperFactory of(final ConnectionId connectionId,\n            final ActorSystem actorSystem,\n            final MappingConfig mappingConfig,\n            final LoggingAdapter log)", "full_signature": "public static DefaultMessageMapperFactory of(final ConnectionId connectionId,\n            final ActorSystem actorSystem,\n            final MappingConfig mappingConfig,\n            final LoggingAdapter log)", "class_method_signature": "DefaultMessageMapperFactory.of(final ConnectionId connectionId,\n            final ActorSystem actorSystem,\n            final MappingConfig mappingConfig,\n            final LoggingAdapter log)", "testcase": false, "constructor": false}, {"identifier": "mapperOf", "parameters": "(final String mapperId, final MappingContext mappingContext)", "modifiers": "@Override public", "return": "Optional<MessageMapper>", "signature": "Optional<MessageMapper> mapperOf(final String mapperId, final MappingContext mappingContext)", "full_signature": "@Override public Optional<MessageMapper> mapperOf(final String mapperId, final MappingContext mappingContext)", "class_method_signature": "DefaultMessageMapperFactory.mapperOf(final String mapperId, final MappingContext mappingContext)", "testcase": false, "constructor": false}, {"identifier": "mergeMappingOptions", "parameters": "(final JsonObject defaultOptions,\n            final JsonObject configuredOptions)", "modifiers": "private", "return": "MergedJsonObjectMap", "signature": "MergedJsonObjectMap mergeMappingOptions(final JsonObject defaultOptions,\n            final JsonObject configuredOptions)", "full_signature": "private MergedJsonObjectMap mergeMappingOptions(final JsonObject defaultOptions,\n            final JsonObject configuredOptions)", "class_method_signature": "DefaultMessageMapperFactory.mergeMappingOptions(final JsonObject defaultOptions,\n            final JsonObject configuredOptions)", "testcase": false, "constructor": false}, {"identifier": "registryOf", "parameters": "(final MappingContext defaultContext,\n            final PayloadMappingDefinition payloadMappingDefinition)", "modifiers": "@Override public", "return": "MessageMapperRegistry", "signature": "MessageMapperRegistry registryOf(final MappingContext defaultContext,\n            final PayloadMappingDefinition payloadMappingDefinition)", "full_signature": "@Override public MessageMapperRegistry registryOf(final MappingContext defaultContext,\n            final PayloadMappingDefinition payloadMappingDefinition)", "class_method_signature": "DefaultMessageMapperFactory.registryOf(final MappingContext defaultContext,\n            final PayloadMappingDefinition payloadMappingDefinition)", "testcase": false, "constructor": false}, {"identifier": "getEmptyMappingContextForAlias", "parameters": "(final String alias)", "modifiers": "private", "return": "Map.Entry<String, MappingContext>", "signature": "Map.Entry<String, MappingContext> getEmptyMappingContextForAlias(final String alias)", "full_signature": "private Map.Entry<String, MappingContext> getEmptyMappingContextForAlias(final String alias)", "class_method_signature": "DefaultMessageMapperFactory.getEmptyMappingContextForAlias(final String alias)", "testcase": false, "constructor": false}, {"identifier": "instantiateMappers", "parameters": "(final Stream<Map.Entry<String, MappingContext>> definitions)", "modifiers": "private", "return": "Map<String, MessageMapper>", "signature": "Map<String, MessageMapper> instantiateMappers(final Stream<Map.Entry<String, MappingContext>> definitions)", "full_signature": "private Map<String, MessageMapper> instantiateMappers(final Stream<Map.Entry<String, MappingContext>> definitions)", "class_method_signature": "DefaultMessageMapperFactory.instantiateMappers(final Stream<Map.Entry<String, MappingContext>> definitions)", "testcase": false, "constructor": false}, {"identifier": "tryToLoadPayloadMappers", "parameters": "()", "modifiers": "private static", "return": "Map<String, Class<?>>", "signature": "Map<String, Class<?>> tryToLoadPayloadMappers()", "full_signature": "private static Map<String, Class<?>> tryToLoadPayloadMappers()", "class_method_signature": "DefaultMessageMapperFactory.tryToLoadPayloadMappers()", "testcase": false, "constructor": false}, {"identifier": "tryToLoadMessageMappersExtensions", "parameters": "(\n            final ExtendedActorSystem actorSystem)", "modifiers": "private static", "return": "List<MessageMapperExtension>", "signature": "List<MessageMapperExtension> tryToLoadMessageMappersExtensions(\n            final ExtendedActorSystem actorSystem)", "full_signature": "private static List<MessageMapperExtension> tryToLoadMessageMappersExtensions(\n            final ExtendedActorSystem actorSystem)", "class_method_signature": "DefaultMessageMapperFactory.tryToLoadMessageMappersExtensions(\n            final ExtendedActorSystem actorSystem)", "testcase": false, "constructor": false}, {"identifier": "loadMessageMapperExtensions", "parameters": "(final DynamicAccess dynamicAccess)", "modifiers": "private static", "return": "List<MessageMapperExtension>", "signature": "List<MessageMapperExtension> loadMessageMapperExtensions(final DynamicAccess dynamicAccess)", "full_signature": "private static List<MessageMapperExtension> loadMessageMapperExtensions(final DynamicAccess dynamicAccess)", "class_method_signature": "DefaultMessageMapperFactory.loadMessageMapperExtensions(final DynamicAccess dynamicAccess)", "testcase": false, "constructor": false}, {"identifier": "loadMessageMapperExtensionClasses", "parameters": "()", "modifiers": "private static", "return": "List<Class<? extends MessageMapperExtension>>", "signature": "List<Class<? extends MessageMapperExtension>> loadMessageMapperExtensionClasses()", "full_signature": "private static List<Class<? extends MessageMapperExtension>> loadMessageMapperExtensionClasses()", "class_method_signature": "DefaultMessageMapperFactory.loadMessageMapperExtensionClasses()", "testcase": false, "constructor": false}, {"identifier": "createMessageMapperInstance", "parameters": "(final String mappingEngine)", "modifiers": "", "return": "Optional<MessageMapper>", "signature": "Optional<MessageMapper> createMessageMapperInstance(final String mappingEngine)", "full_signature": " Optional<MessageMapper> createMessageMapperInstance(final String mappingEngine)", "class_method_signature": "DefaultMessageMapperFactory.createMessageMapperInstance(final String mappingEngine)", "testcase": false, "constructor": false}, {"identifier": "createAnyMessageMapper", "parameters": "(final Class<?> clazz,\n            final DynamicAccess dynamicAccess)", "modifiers": "@Nullable private static", "return": "MessageMapper", "signature": "MessageMapper createAnyMessageMapper(final Class<?> clazz,\n            final DynamicAccess dynamicAccess)", "full_signature": "@Nullable private static MessageMapper createAnyMessageMapper(final Class<?> clazz,\n            final DynamicAccess dynamicAccess)", "class_method_signature": "DefaultMessageMapperFactory.createAnyMessageMapper(final Class<?> clazz,\n            final DynamicAccess dynamicAccess)", "testcase": false, "constructor": false}, {"identifier": "requiresNoMandatoryConfiguration", "parameters": "()", "modifiers": "private", "return": "Predicate<? super Map.Entry<String, Class<?>>>", "signature": "Predicate<? super Map.Entry<String, Class<?>>> requiresNoMandatoryConfiguration()", "full_signature": "private Predicate<? super Map.Entry<String, Class<?>>> requiresNoMandatoryConfiguration()", "class_method_signature": "DefaultMessageMapperFactory.requiresNoMandatoryConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getPayloadMapperAnnotation", "parameters": "(final Map.Entry<String, Class<?>> entry)", "modifiers": "private static", "return": "PayloadMapper", "signature": "PayloadMapper getPayloadMapperAnnotation(final Map.Entry<String, Class<?>> entry)", "full_signature": "private static PayloadMapper getPayloadMapperAnnotation(final Map.Entry<String, Class<?>> entry)", "class_method_signature": "DefaultMessageMapperFactory.getPayloadMapperAnnotation(final Map.Entry<String, Class<?>> entry)", "testcase": false, "constructor": false}, {"identifier": "configureInstance", "parameters": "(final MessageMapper mapper,\n            final MessageMapperConfiguration options)", "modifiers": "private", "return": "Optional<MessageMapper>", "signature": "Optional<MessageMapper> configureInstance(final MessageMapper mapper,\n            final MessageMapperConfiguration options)", "full_signature": "private Optional<MessageMapper> configureInstance(final MessageMapper mapper,\n            final MessageMapperConfiguration options)", "class_method_signature": "DefaultMessageMapperFactory.configureInstance(final MessageMapper mapper,\n            final MessageMapperConfiguration options)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "DefaultMessageMapperFactory.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DefaultMessageMapperFactory.hashCode()", "testcase": false, "constructor": false}], "file": "services/connectivity/mapping/src/main/java/org/eclipse/ditto/services/connectivity/mapping/DefaultMessageMapperFactory.java"}, "focal_method": {"identifier": "createMessageMapperInstance", "parameters": "(final String mappingEngine)", "modifiers": "", "return": "Optional<MessageMapper>", "body": "Optional<MessageMapper> createMessageMapperInstance(final String mappingEngine) {\n        if (registeredMappers.containsKey(mappingEngine)) {\n            final Class<?> messageMapperClass = registeredMappers.get(mappingEngine);\n            MessageMapper result = createAnyMessageMapper(messageMapperClass,\n                    actorSystem.dynamicAccess());\n            for (final MessageMapperExtension extension : messageMapperExtensions) {\n                if (null == result) {\n                    return Optional.empty();\n                }\n                result = extension.apply(connectionId, result, actorSystem);\n            }\n            return Optional.ofNullable(result);\n        } else {\n            log.info(\"Mapper {} not found.\", mappingEngine);\n            return Optional.empty();\n        }\n    }", "signature": "Optional<MessageMapper> createMessageMapperInstance(final String mappingEngine)", "full_signature": " Optional<MessageMapper> createMessageMapperInstance(final String mappingEngine)", "class_method_signature": "DefaultMessageMapperFactory.createMessageMapperInstance(final String mappingEngine)", "testcase": false, "constructor": false, "invocations": ["containsKey", "get", "createAnyMessageMapper", "dynamicAccess", "empty", "apply", "ofNullable", "info", "empty"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}