{"test_class": {"identifier": "SigUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "java_src/src/test/java/com/google/crypto/tink/signature/SigUtilTest.java"}, "test_case": {"identifier": "testToHashType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testToHashType() throws Exception {\n    assertEquals(Enums.HashType.SHA256, SigUtil.toHashType(HashType.SHA256));\n    assertEquals(Enums.HashType.SHA384, SigUtil.toHashType(HashType.SHA384));\n    assertEquals(Enums.HashType.SHA512, SigUtil.toHashType(HashType.SHA512));\n    try {\n      SigUtil.toHashType(HashType.UNKNOWN_HASH);\n      fail(\"Invalid hash, should have thrown exception\");\n    } catch (GeneralSecurityException expected) {\n    }\n  }", "signature": "void testToHashType()", "full_signature": "@Test public void testToHashType()", "class_method_signature": "SigUtilTest.testToHashType()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toHashType", "assertEquals", "toHashType", "assertEquals", "toHashType", "toHashType", "fail"]}, "focal_class": {"identifier": "SigUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String INVALID_PARAMS = \"Invalid ECDSA parameters\";", "modifier": "static final", "type": "String", "declarator": "INVALID_PARAMS = \"Invalid ECDSA parameters\"", "var_name": "INVALID_PARAMS"}], "methods": [{"identifier": "validateEcdsaParams", "parameters": "(EcdsaParams params)", "modifiers": "public static", "return": "void", "signature": "void validateEcdsaParams(EcdsaParams params)", "full_signature": "public static void validateEcdsaParams(EcdsaParams params)", "class_method_signature": "SigUtil.validateEcdsaParams(EcdsaParams params)", "testcase": false, "constructor": false}, {"identifier": "validateRsaSsaPkcs1Params", "parameters": "(RsaSsaPkcs1Params params)", "modifiers": "public static", "return": "void", "signature": "void validateRsaSsaPkcs1Params(RsaSsaPkcs1Params params)", "full_signature": "public static void validateRsaSsaPkcs1Params(RsaSsaPkcs1Params params)", "class_method_signature": "SigUtil.validateRsaSsaPkcs1Params(RsaSsaPkcs1Params params)", "testcase": false, "constructor": false}, {"identifier": "validateRsaSsaPssParams", "parameters": "(RsaSsaPssParams params)", "modifiers": "public static", "return": "void", "signature": "void validateRsaSsaPssParams(RsaSsaPssParams params)", "full_signature": "public static void validateRsaSsaPssParams(RsaSsaPssParams params)", "class_method_signature": "SigUtil.validateRsaSsaPssParams(RsaSsaPssParams params)", "testcase": false, "constructor": false}, {"identifier": "toHashType", "parameters": "(HashType hash)", "modifiers": "public static", "return": "Enums.HashType", "signature": "Enums.HashType toHashType(HashType hash)", "full_signature": "public static Enums.HashType toHashType(HashType hash)", "class_method_signature": "SigUtil.toHashType(HashType hash)", "testcase": false, "constructor": false}, {"identifier": "toCurveType", "parameters": "(EllipticCurveType type)", "modifiers": "public static", "return": "EllipticCurves.CurveType", "signature": "EllipticCurves.CurveType toCurveType(EllipticCurveType type)", "full_signature": "public static EllipticCurves.CurveType toCurveType(EllipticCurveType type)", "class_method_signature": "SigUtil.toCurveType(EllipticCurveType type)", "testcase": false, "constructor": false}, {"identifier": "toEcdsaEncoding", "parameters": "(EcdsaSignatureEncoding encoding)", "modifiers": "public static", "return": "EllipticCurves.EcdsaEncoding", "signature": "EllipticCurves.EcdsaEncoding toEcdsaEncoding(EcdsaSignatureEncoding encoding)", "full_signature": "public static EllipticCurves.EcdsaEncoding toEcdsaEncoding(EcdsaSignatureEncoding encoding)", "class_method_signature": "SigUtil.toEcdsaEncoding(EcdsaSignatureEncoding encoding)", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/signature/SigUtil.java"}, "focal_method": {"identifier": "toHashType", "parameters": "(HashType hash)", "modifiers": "public static", "return": "Enums.HashType", "body": "public static Enums.HashType toHashType(HashType hash) throws GeneralSecurityException {\n    switch (hash) {\n      case SHA256:\n        return Enums.HashType.SHA256;\n      case SHA384:\n        return Enums.HashType.SHA384;\n      case SHA512:\n        return Enums.HashType.SHA512;\n      default:\n        break;\n    }\n    throw new GeneralSecurityException(\"unsupported hash type: \" + hash.name());\n  }", "signature": "Enums.HashType toHashType(HashType hash)", "full_signature": "public static Enums.HashType toHashType(HashType hash)", "class_method_signature": "SigUtil.toHashType(HashType hash)", "testcase": false, "constructor": false, "invocations": ["name"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}