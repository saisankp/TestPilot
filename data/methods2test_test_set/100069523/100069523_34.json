{"test_class": {"identifier": "TextUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "module/com.sandpolis.core.foundation/src/test/java/com/sandpolis/core/foundation/util/TextUtilTest.java"}, "test_case": {"identifier": "formatByteCount_1", "parameters": "()", "modifiers": "@Test @DisplayName(\"Format byte counts\")", "return": "void", "body": "@Test\n\t@DisplayName(\"Format byte counts\")\n\tvoid formatByteCount_1() {\n\n\t\tassertEquals(\"0 B\", formatByteCount(0L));\n\t\tassertEquals(\"27 B\", formatByteCount(27L));\n\t\tassertEquals(\"999 B\", formatByteCount(999L));\n\t\tassertEquals(\"1000 B\", formatByteCount(1000L));\n\t\tassertEquals(\"1023 B\", formatByteCount(1023L));\n\t\tassertEquals(\"1.0 KiB\", formatByteCount(1024L));\n\t\tassertEquals(\"1.7 KiB\", formatByteCount(1728L));\n\t\tassertEquals(\"108.0 KiB\", formatByteCount(110592L));\n\t\tassertEquals(\"6.8 MiB\", formatByteCount(7077888L));\n\t\tassertEquals(\"432.0 MiB\", formatByteCount(452984832L));\n\t\tassertEquals(\"27.0 GiB\", formatByteCount(28991029248L));\n\t\tassertEquals(\"1.7 TiB\", formatByteCount(1855425871872L));\n\t\tassertEquals(\"8.0 EiB\", formatByteCount(9223372036854775807L));\n\t}", "signature": "void formatByteCount_1()", "full_signature": "@Test @DisplayName(\"Format byte counts\") void formatByteCount_1()", "class_method_signature": "TextUtilTest.formatByteCount_1()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "formatByteCount", "assertEquals", "formatByteCount", "assertEquals", "formatByteCount", "assertEquals", "formatByteCount", "assertEquals", "formatByteCount", "assertEquals", "formatByteCount", "assertEquals", "formatByteCount", "assertEquals", "formatByteCount", "assertEquals", "formatByteCount", "assertEquals", "formatByteCount", "assertEquals", "formatByteCount", "assertEquals", "formatByteCount", "assertEquals", "formatByteCount"]}, "focal_class": {"identifier": "TextUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ChronoUnit[] DEFAULT_DURATION_UNITS = new ChronoUnit[] { ChronoUnit.DAYS, ChronoUnit.HOURS,\n\t\t\tChronoUnit.MINUTES, ChronoUnit.SECONDS };", "modifier": "private static final", "type": "ChronoUnit[]", "declarator": "DEFAULT_DURATION_UNITS = new ChronoUnit[] { ChronoUnit.DAYS, ChronoUnit.HOURS,\n\t\t\tChronoUnit.MINUTES, ChronoUnit.SECONDS }", "var_name": "DEFAULT_DURATION_UNITS"}, {"original_string": "private static final Color[] RAINBOW = Arrays.copyOfRange(Color.values(), 1, 7);", "modifier": "private static final", "type": "Color[]", "declarator": "RAINBOW = Arrays.copyOfRange(Color.values(), 1, 7)", "var_name": "RAINBOW"}], "methods": [{"identifier": "formatByteCount", "parameters": "(long bytes)", "modifiers": "public static", "return": "String", "signature": "String formatByteCount(long bytes)", "full_signature": "public static String formatByteCount(long bytes)", "class_method_signature": "TextUtil.formatByteCount(long bytes)", "testcase": false, "constructor": false}, {"identifier": "formatByteCountSI", "parameters": "(long bytes)", "modifiers": "public static", "return": "String", "signature": "String formatByteCountSI(long bytes)", "full_signature": "public static String formatByteCountSI(long bytes)", "class_method_signature": "TextUtil.formatByteCountSI(long bytes)", "testcase": false, "constructor": false}, {"identifier": "unformatByteCount", "parameters": "(String count)", "modifiers": "public static", "return": "long", "signature": "long unformatByteCount(String count)", "full_signature": "public static long unformatByteCount(String count)", "class_method_signature": "TextUtil.unformatByteCount(String count)", "testcase": false, "constructor": false}], "file": "module/com.sandpolis.core.foundation/src/main/java/com/sandpolis/core/foundation/util/TextUtil.java"}, "focal_method": {"identifier": "formatByteCount", "parameters": "(long bytes)", "modifiers": "public static", "return": "String", "body": "public static String formatByteCount(long bytes) {\n\n\t\tlong b = bytes == Long.MIN_VALUE ? Long.MAX_VALUE : Math.abs(bytes);\n\t\treturn b < 1024L ? bytes + \" B\"\n\t\t\t\t: b <= 0xfffccccccccccccL >> 40 ? String.format(\"%.1f KiB\", bytes / 0x1p10)\n\t\t\t\t\t\t: b <= 0xfffccccccccccccL >> 30 ? String.format(\"%.1f MiB\", bytes / 0x1p20)\n\t\t\t\t\t\t\t\t: b <= 0xfffccccccccccccL >> 20 ? String.format(\"%.1f GiB\", bytes / 0x1p30)\n\t\t\t\t\t\t\t\t\t\t: b <= 0xfffccccccccccccL >> 10 ? String.format(\"%.1f TiB\", bytes / 0x1p40)\n\t\t\t\t\t\t\t\t\t\t\t\t: b <= 0xfffccccccccccccL\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? String.format(\"%.1f PiB\", (bytes >> 10) / 0x1p40)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: String.format(\"%.1f EiB\", (bytes >> 20) / 0x1p40);\n\t}", "signature": "String formatByteCount(long bytes)", "full_signature": "public static String formatByteCount(long bytes)", "class_method_signature": "TextUtil.formatByteCount(long bytes)", "testcase": false, "constructor": false, "invocations": ["abs", "format", "format", "format", "format", "format", "format"]}, "repository": {"repo_id": 100069523, "url": "https://github.com/Subterranean-Security/Sandpolis", "stars": 25, "created": "8/11/2017 8:55:30 PM +00:00", "updates": "2020-01-27T01:41:01+00:00", "fork": "False", "license": "licensed"}}