{"test_class": {"identifier": "SearchTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Fixtures fix;", "modifier": "private", "type": "Fixtures", "declarator": "fix", "var_name": "fix"}, {"original_string": "private Search search;", "modifier": "private", "type": "Search", "declarator": "search", "var_name": "search"}], "file": "geoclient-service/src/test/java/gov/nyc/doitt/gis/geoclient/service/search/SearchTest.java"}, "test_case": {"identifier": "testResponseMessageAppliesTo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testResponseMessageAppliesTo() {\n        String streetName = \"FOO\";\n        assertThat(search.responseMessageAppliesTo(streetName))\n                .isEqualTo(search.getResponse().messageAppliesTo(streetName));\n        assertFalse(search.responseMessageAppliesTo(streetName));\n        search.getResponse().getResponseStatus().getGeosupportReturnCode().setMessage(streetName);\n        assertThat(search.responseMessageAppliesTo(streetName))\n                .isEqualTo(search.getResponse().messageAppliesTo(streetName));\n        assertTrue(search.responseMessageAppliesTo(streetName));\n    }", "signature": "void testResponseMessageAppliesTo()", "full_signature": "@Test public void testResponseMessageAppliesTo()", "class_method_signature": "SearchTest.testResponseMessageAppliesTo()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "responseMessageAppliesTo", "messageAppliesTo", "getResponse", "assertFalse", "responseMessageAppliesTo", "setMessage", "getGeosupportReturnCode", "getResponseStatus", "getResponse", "isEqualTo", "assertThat", "responseMessageAppliesTo", "messageAppliesTo", "getResponse", "assertTrue", "responseMessageAppliesTo"]}, "focal_class": {"identifier": "Search", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Request request;", "modifier": "private final", "type": "Request", "declarator": "request", "var_name": "request"}, {"original_string": "private final Response response;", "modifier": "private final", "type": "Response", "declarator": "response", "var_name": "response"}], "methods": [{"identifier": "Search", "parameters": "(Request request, Response response)", "modifiers": "public", "return": "", "signature": " Search(Request request, Response response)", "full_signature": "public  Search(Request request, Response response)", "class_method_signature": "Search.Search(Request request, Response response)", "testcase": false, "constructor": true}, {"identifier": "getRequest", "parameters": "()", "modifiers": "public", "return": "Request", "signature": "Request getRequest()", "full_signature": "public Request getRequest()", "class_method_signature": "Search.getRequest()", "testcase": false, "constructor": false}, {"identifier": "getResponse", "parameters": "()", "modifiers": "public", "return": "Response", "signature": "Response getResponse()", "full_signature": "public Response getResponse()", "class_method_signature": "Search.getResponse()", "testcase": false, "constructor": false}, {"identifier": "isRejected", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isRejected()", "full_signature": "public boolean isRejected()", "class_method_signature": "Search.isRejected()", "testcase": false, "constructor": false}, {"identifier": "getSimilarNames", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getSimilarNames()", "full_signature": "public List<String> getSimilarNames()", "class_method_signature": "Search.getSimilarNames()", "testcase": false, "constructor": false}, {"identifier": "responseMessageAppliesTo", "parameters": "(String streetName)", "modifiers": "public", "return": "boolean", "signature": "boolean responseMessageAppliesTo(String streetName)", "full_signature": "public boolean responseMessageAppliesTo(String streetName)", "class_method_signature": "Search.responseMessageAppliesTo(String streetName)", "testcase": false, "constructor": false}, {"identifier": "getResponseStatus", "parameters": "()", "modifiers": "public", "return": "ResponseStatus", "signature": "ResponseStatus getResponseStatus()", "full_signature": "public ResponseStatus getResponseStatus()", "class_method_signature": "Search.getResponseStatus()", "testcase": false, "constructor": false}, {"identifier": "getLevel", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLevel()", "full_signature": "public int getLevel()", "class_method_signature": "Search.getLevel()", "testcase": false, "constructor": false}, {"identifier": "lessThanOrEqualTo", "parameters": "(int level)", "modifiers": "public", "return": "boolean", "signature": "boolean lessThanOrEqualTo(int level)", "full_signature": "public boolean lessThanOrEqualTo(int level)", "class_method_signature": "Search.lessThanOrEqualTo(int level)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Search.toString()", "testcase": false, "constructor": false}], "file": "geoclient-service/src/main/java/gov/nyc/doitt/gis/geoclient/service/search/Search.java"}, "focal_method": {"identifier": "responseMessageAppliesTo", "parameters": "(String streetName)", "modifiers": "public", "return": "boolean", "body": "public boolean responseMessageAppliesTo(String streetName)\n    {\n        return this.response.messageAppliesTo(streetName);\n    }", "signature": "boolean responseMessageAppliesTo(String streetName)", "full_signature": "public boolean responseMessageAppliesTo(String streetName)", "class_method_signature": "Search.responseMessageAppliesTo(String streetName)", "testcase": false, "constructor": false, "invocations": ["messageAppliesTo"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}