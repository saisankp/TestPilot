{"test_class": {"identifier": "EncryptionKeyRotatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EncryptedValueDataService encryptedValueDataService;", "modifier": "private", "type": "EncryptedValueDataService", "declarator": "encryptedValueDataService", "var_name": "encryptedValueDataService"}, {"original_string": "private EncryptedValue encryptedValue1;", "modifier": "private", "type": "EncryptedValue", "declarator": "encryptedValue1", "var_name": "encryptedValue1"}, {"original_string": "private EncryptedValue encryptedValue2;", "modifier": "private", "type": "EncryptedValue", "declarator": "encryptedValue2", "var_name": "encryptedValue2"}, {"original_string": "private EncryptedValue encryptedValue3;", "modifier": "private", "type": "EncryptedValue", "declarator": "encryptedValue3", "var_name": "encryptedValue3"}, {"original_string": "private EncryptionKeyCanaryMapper encryptionKeyCanaryMapper;", "modifier": "private", "type": "EncryptionKeyCanaryMapper", "declarator": "encryptionKeyCanaryMapper", "var_name": "encryptionKeyCanaryMapper"}, {"original_string": "private UUID oldUuid;", "modifier": "private", "type": "UUID", "declarator": "oldUuid", "var_name": "oldUuid"}, {"original_string": "private List<UUID> inactiveCanaries;", "modifier": "private", "type": "List<UUID>", "declarator": "inactiveCanaries", "var_name": "inactiveCanaries"}, {"original_string": "private EncryptionKeySet keySet;", "modifier": "private", "type": "EncryptionKeySet", "declarator": "keySet", "var_name": "keySet"}], "file": "components/encryption/src/test/java/org/cloudfoundry/credhub/services/EncryptionKeyRotatorTest.java"}, "test_case": {"identifier": "shouldRotateAllTheCredentialsThatWereEncryptedWithAnAvailableOldKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldRotateAllTheCredentialsThatWereEncryptedWithAnAvailableOldKey() {\n    verify(encryptedValueDataService).rotate(encryptedValue1);\n    verify(encryptedValueDataService).rotate(encryptedValue2);\n    verify(encryptedValueDataService).rotate(encryptedValue3);\n  }", "signature": "void shouldRotateAllTheCredentialsThatWereEncryptedWithAnAvailableOldKey()", "full_signature": "@Test public void shouldRotateAllTheCredentialsThatWereEncryptedWithAnAvailableOldKey()", "class_method_signature": "EncryptionKeyRotatorTest.shouldRotateAllTheCredentialsThatWereEncryptedWithAnAvailableOldKey()", "testcase": true, "constructor": false, "invocations": ["rotate", "verify", "rotate", "verify", "rotate", "verify"]}, "focal_class": {"identifier": "EncryptionKeyRotator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final EncryptedValueDataService encryptedValueDataService;", "modifier": "private final", "type": "EncryptedValueDataService", "declarator": "encryptedValueDataService", "var_name": "encryptedValueDataService"}, {"original_string": "private static final Logger LOGGER = LogManager.getLogger(EncryptionKeyRotator.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LogManager.getLogger(EncryptionKeyRotator.class)", "var_name": "LOGGER"}, {"original_string": "private final EncryptionKeyCanaryMapper encryptionKeyCanaryMapper;", "modifier": "private final", "type": "EncryptionKeyCanaryMapper", "declarator": "encryptionKeyCanaryMapper", "var_name": "encryptionKeyCanaryMapper"}, {"original_string": "private final EncryptionKeySet keySet;", "modifier": "private final", "type": "EncryptionKeySet", "declarator": "keySet", "var_name": "keySet"}], "methods": [{"identifier": "EncryptionKeyRotator", "parameters": "(\n    final EncryptedValueDataService encryptedValueDataService,\n    final EncryptionKeyCanaryMapper encryptionKeyCanaryMapper,\n    final EncryptionKeySet keySet\n  )", "modifiers": "@Autowired", "return": "", "signature": " EncryptionKeyRotator(\n    final EncryptedValueDataService encryptedValueDataService,\n    final EncryptionKeyCanaryMapper encryptionKeyCanaryMapper,\n    final EncryptionKeySet keySet\n  )", "full_signature": "@Autowired  EncryptionKeyRotator(\n    final EncryptedValueDataService encryptedValueDataService,\n    final EncryptionKeyCanaryMapper encryptionKeyCanaryMapper,\n    final EncryptionKeySet keySet\n  )", "class_method_signature": "EncryptionKeyRotator.EncryptionKeyRotator(\n    final EncryptedValueDataService encryptedValueDataService,\n    final EncryptionKeyCanaryMapper encryptionKeyCanaryMapper,\n    final EncryptionKeySet keySet\n  )", "testcase": false, "constructor": true}, {"identifier": "rotate", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void rotate()", "full_signature": "public void rotate()", "class_method_signature": "EncryptionKeyRotator.rotate()", "testcase": false, "constructor": false}], "file": "components/encryption/src/main/java/org/cloudfoundry/credhub/services/EncryptionKeyRotator.java"}, "focal_method": {"identifier": "rotate", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void rotate() {\n    final long start = System.currentTimeMillis();\n    LOGGER.info(\"Starting encryption key rotation.\");\n    int rotatedRecordCount = 0;\n\n    final long startingNotRotatedRecordCount = encryptedValueDataService\n      .countAllByCanaryUuid(keySet.getActive().getUuid());\n\n    final List<UUID> inactiveCanaries = keySet.getInactiveUuids();\n    Slice<EncryptedValue> valuesEncryptedByOldKey = encryptedValueDataService\n      .findByCanaryUuids(inactiveCanaries);\n    while (valuesEncryptedByOldKey.hasContent()) {\n      for (final EncryptedValue value : valuesEncryptedByOldKey.getContent()) {\n        try {\n          encryptedValueDataService.rotate(value);\n          rotatedRecordCount++;\n        } catch (final KeyNotFoundException e) {\n          LOGGER.error(\"key not found for value, unable to rotate\");\n        }\n      }\n      valuesEncryptedByOldKey = encryptedValueDataService.findByCanaryUuids(inactiveCanaries);\n    }\n\n    final long finish = System.currentTimeMillis();\n    final long duration = finish - start;\n    final long endingNotRotatedRecordCount = startingNotRotatedRecordCount - rotatedRecordCount;\n\n    if (rotatedRecordCount == 0 && endingNotRotatedRecordCount == 0) {\n      LOGGER.info(\"Found no records in need of encryption key rotation.\");\n    } else {\n      LOGGER.info(\"Finished encryption key rotation in \" + duration + \" milliseconds. Details:\");\n      LOGGER.info(\"  Successfully rotated \" + rotatedRecordCount + \" item(s)\");\n      LOGGER.info(\"  Skipped \" + endingNotRotatedRecordCount\n        + \" item(s) due to missing master encryption key(s).\");\n    }\n\n    encryptionKeyCanaryMapper.delete(inactiveCanaries);\n  }", "signature": "void rotate()", "full_signature": "public void rotate()", "class_method_signature": "EncryptionKeyRotator.rotate()", "testcase": false, "constructor": false, "invocations": ["currentTimeMillis", "info", "countAllByCanaryUuid", "getUuid", "getActive", "getInactiveUuids", "findByCanaryUuids", "hasContent", "getContent", "rotate", "error", "findByCanaryUuids", "currentTimeMillis", "info", "info", "info", "info", "delete"]}, "repository": {"repo_id": 57061988, "url": "https://github.com/cloudfoundry-incubator/credhub", "stars": 167, "created": "4/25/2016 5:30:51 PM +00:00", "updates": "2020-01-27T21:31:19+00:00", "fork": "False", "license": "licensed"}}