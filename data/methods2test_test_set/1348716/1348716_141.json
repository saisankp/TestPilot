{"test_class": {"identifier": "DecliningBalanceEqualPrincipalWithInterestGeneratorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PrincipalWithInterestGenerator principalWithInterestGenerator;", "modifier": "private", "type": "PrincipalWithInterestGenerator", "declarator": "principalWithInterestGenerator", "var_name": "principalWithInterestGenerator"}], "file": "appdomain/src/test/java/org/mifos/clientportfolio/newloan/domain/DecliningBalanceEqualPrincipalWithInterestGeneratorTest.java"}, "test_case": {"identifier": "shouldReturnPrincipalAndInterestDetailsForMatchingNumberOfInstallments", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnPrincipalAndInterestDetailsForMatchingNumberOfInstallments() {\n\n        LoanInterestCalculationDetails loanInterestCalculationDetails = new LoanInterestCalculationDetailsBuilder().withLoanAmount(\"100.0\")\n                                                                                                                    .withGraceType(GraceType.NONE)\n                                                                                                                    .withGraceDurationOf(0)\n                                                                                                                    .withNumberOfInstallments(1)\n                                                                                                                    .withInterestFractionalRatePerInstallmentOf(\"0.16\")\n                                                                                                                    .withInterestRate(\"10.0\")\n                                                                                                                    .build();\n\n        // exercise test\n        List<InstallmentPrincipalAndInterest> equalInstallments = principalWithInterestGenerator.generateEqualInstallments(loanInterestCalculationDetails);\n\n        // verification\n        assertThat(equalInstallments.size(), is(1));\n    }", "signature": "void shouldReturnPrincipalAndInterestDetailsForMatchingNumberOfInstallments()", "full_signature": "@Test public void shouldReturnPrincipalAndInterestDetailsForMatchingNumberOfInstallments()", "class_method_signature": "DecliningBalanceEqualPrincipalWithInterestGeneratorTest.shouldReturnPrincipalAndInterestDetailsForMatchingNumberOfInstallments()", "testcase": true, "constructor": false, "invocations": ["build", "withInterestRate", "withInterestFractionalRatePerInstallmentOf", "withNumberOfInstallments", "withGraceDurationOf", "withGraceType", "withLoanAmount", "generateEqualInstallments", "assertThat", "size", "is"]}, "focal_class": {"identifier": "DecliningBalanceEqualPrincipalWithInterestGenerator", "superclass": "", "interfaces": "implements PrincipalWithInterestGenerator", "fields": [], "methods": [{"identifier": "generateEqualInstallments", "parameters": "(LoanInterestCalculationDetails loanInterestCalculationDetails)", "modifiers": "@Override public", "return": "List<InstallmentPrincipalAndInterest>", "signature": "List<InstallmentPrincipalAndInterest> generateEqualInstallments(LoanInterestCalculationDetails loanInterestCalculationDetails)", "full_signature": "@Override public List<InstallmentPrincipalAndInterest> generateEqualInstallments(LoanInterestCalculationDetails loanInterestCalculationDetails)", "class_method_signature": "DecliningBalanceEqualPrincipalWithInterestGenerator.generateEqualInstallments(LoanInterestCalculationDetails loanInterestCalculationDetails)", "testcase": false, "constructor": false}, {"identifier": "allDecliningEPIInstallments_v2", "parameters": "(Money loanAmount, Integer numberOfInstallments, Double interestFractionalRatePerInstallment, GraceType graceType, Integer gracePeriodDuration,Integer days,Integer durationInDays)", "modifiers": "private", "return": "List<InstallmentPrincipalAndInterest>", "signature": "List<InstallmentPrincipalAndInterest> allDecliningEPIInstallments_v2(Money loanAmount, Integer numberOfInstallments, Double interestFractionalRatePerInstallment, GraceType graceType, Integer gracePeriodDuration,Integer days,Integer durationInDays)", "full_signature": "private List<InstallmentPrincipalAndInterest> allDecliningEPIInstallments_v2(Money loanAmount, Integer numberOfInstallments, Double interestFractionalRatePerInstallment, GraceType graceType, Integer gracePeriodDuration,Integer days,Integer durationInDays)", "class_method_signature": "DecliningBalanceEqualPrincipalWithInterestGenerator.allDecliningEPIInstallments_v2(Money loanAmount, Integer numberOfInstallments, Double interestFractionalRatePerInstallment, GraceType graceType, Integer gracePeriodDuration,Integer days,Integer durationInDays)", "testcase": false, "constructor": false}, {"identifier": "generateDecliningInstallmentsInterestOnly_v2", "parameters": "(Money loanAmount, Integer gracePeriodDuration, Double interestFractionalRatePerInstallment,Integer days,Integer durationInDays)", "modifiers": "private", "return": "List<InstallmentPrincipalAndInterest>", "signature": "List<InstallmentPrincipalAndInterest> generateDecliningInstallmentsInterestOnly_v2(Money loanAmount, Integer gracePeriodDuration, Double interestFractionalRatePerInstallment,Integer days,Integer durationInDays)", "full_signature": "private List<InstallmentPrincipalAndInterest> generateDecliningInstallmentsInterestOnly_v2(Money loanAmount, Integer gracePeriodDuration, Double interestFractionalRatePerInstallment,Integer days,Integer durationInDays)", "class_method_signature": "DecliningBalanceEqualPrincipalWithInterestGenerator.generateDecliningInstallmentsInterestOnly_v2(Money loanAmount, Integer gracePeriodDuration, Double interestFractionalRatePerInstallment,Integer days,Integer durationInDays)", "testcase": false, "constructor": false}, {"identifier": "allDecliningEPIInstallments_v2", "parameters": "(Money loanAmount, Integer numberOfInstallments, Double interestFractionalRatePerInstallment, GraceType graceType, Integer gracePeriodDuration)", "modifiers": "private", "return": "List<InstallmentPrincipalAndInterest>", "signature": "List<InstallmentPrincipalAndInterest> allDecliningEPIInstallments_v2(Money loanAmount, Integer numberOfInstallments, Double interestFractionalRatePerInstallment, GraceType graceType, Integer gracePeriodDuration)", "full_signature": "private List<InstallmentPrincipalAndInterest> allDecliningEPIInstallments_v2(Money loanAmount, Integer numberOfInstallments, Double interestFractionalRatePerInstallment, GraceType graceType, Integer gracePeriodDuration)", "class_method_signature": "DecliningBalanceEqualPrincipalWithInterestGenerator.allDecliningEPIInstallments_v2(Money loanAmount, Integer numberOfInstallments, Double interestFractionalRatePerInstallment, GraceType graceType, Integer gracePeriodDuration)", "testcase": false, "constructor": false}, {"identifier": "generateDecliningInstallmentsInterestOnly_v2", "parameters": "(Money loanAmount, Integer gracePeriodDuration, Double interestFractionalRatePerInstallment)", "modifiers": "private", "return": "List<InstallmentPrincipalAndInterest>", "signature": "List<InstallmentPrincipalAndInterest> generateDecliningInstallmentsInterestOnly_v2(Money loanAmount, Integer gracePeriodDuration, Double interestFractionalRatePerInstallment)", "full_signature": "private List<InstallmentPrincipalAndInterest> generateDecliningInstallmentsInterestOnly_v2(Money loanAmount, Integer gracePeriodDuration, Double interestFractionalRatePerInstallment)", "class_method_signature": "DecliningBalanceEqualPrincipalWithInterestGenerator.generateDecliningInstallmentsInterestOnly_v2(Money loanAmount, Integer gracePeriodDuration, Double interestFractionalRatePerInstallment)", "testcase": false, "constructor": false}, {"identifier": "generateDecliningEPIInstallmentsNoGrace_v2", "parameters": "(final int numInstallments, Money loanAmount, Double interestFractionalRatePerInstallment)", "modifiers": "private", "return": "List<InstallmentPrincipalAndInterest>", "signature": "List<InstallmentPrincipalAndInterest> generateDecliningEPIInstallmentsNoGrace_v2(final int numInstallments, Money loanAmount, Double interestFractionalRatePerInstallment)", "full_signature": "private List<InstallmentPrincipalAndInterest> generateDecliningEPIInstallmentsNoGrace_v2(final int numInstallments, Money loanAmount, Double interestFractionalRatePerInstallment)", "class_method_signature": "DecliningBalanceEqualPrincipalWithInterestGenerator.generateDecliningEPIInstallmentsNoGrace_v2(final int numInstallments, Money loanAmount, Double interestFractionalRatePerInstallment)", "testcase": false, "constructor": false}], "file": "appdomain/src/main/java/org/mifos/clientportfolio/newloan/domain/DecliningBalanceEqualPrincipalWithInterestGenerator.java"}, "focal_method": {"identifier": "generateEqualInstallments", "parameters": "(LoanInterestCalculationDetails loanInterestCalculationDetails)", "modifiers": "@Override public", "return": "List<InstallmentPrincipalAndInterest>", "body": "@Override\n    public List<InstallmentPrincipalAndInterest> generateEqualInstallments(LoanInterestCalculationDetails loanInterestCalculationDetails) {\n\n        Money loanAmount = loanInterestCalculationDetails.getLoanAmount();\n        Integer numberOfInstallments = loanInterestCalculationDetails.getNumberOfInstallments();\n        Double interestFractionalRatePerInstallment = loanInterestCalculationDetails.getInterestFractionalRatePerInstallment();\n\n        GraceType graceType = loanInterestCalculationDetails.getGraceType();\n        Integer gracePeriodDuration = loanInterestCalculationDetails.getGracePeriodDuration();\n        \n        //For M5193\n        int prorateValue = 0;\n\t\tList<InstallmentPrincipalAndInterest> lstInstallmntPricplIntrst = null;\n\t\t\n\t\tLocalDate disbursalDateInLocalDate=loanInterestCalculationDetails.getDisbursementDate();\n\t\tDateTime disbursalDate=disbursalDateInLocalDate.toDateTimeAtStartOfDay();\n\t\tList<DateTime> scheduledDates=loanInterestCalculationDetails.getLoanScheduleDates();\n\t\tif(scheduledDates.size() > 2){ //chek whether loanscheduledDates are there\n\t\t\tDateTime firstRepaymentDay=scheduledDates.get(0);\n\t\t\tlong  differenceOfTwoDatesinMilliseconds=(firstRepaymentDay.toDate().getTime()-disbursalDate.toDate().getTime());\n\t\t\tlong noOfDays=differenceOfTwoDatesinMilliseconds/(1000*60*60*24);\n\t\t\tint noOfDaysBetweenFirstRepaymentDayAndDisbursalDate=(int)noOfDays;\n\n\n\t\t\tDateTime secondRepaymentDay=scheduledDates.get(1);\n\t\t\tlong duration=(secondRepaymentDay.toDate().getTime()-firstRepaymentDay.toDate().getTime())/(1000*60*60*24);\n\t\t\tint noOfDaysInOneSchedule=(int)duration;\t\n\t\t\t\n\t\t\tprorateValue = new ConfigurationPersistence().getConfigurationValueInteger(PRORATE_RULE);\n\t\t\tif (prorateValue==1)\n\t\t\t\tlstInstallmntPricplIntrst = allDecliningEPIInstallments_v2(loanAmount, numberOfInstallments, interestFractionalRatePerInstallment, graceType, gracePeriodDuration,noOfDaysBetweenFirstRepaymentDayAndDisbursalDate,noOfDaysInOneSchedule);\t\t\n\t\t       }\n\t\t if (prorateValue != 1){\n\t\t  lstInstallmntPricplIntrst = allDecliningEPIInstallments_v2(loanAmount, numberOfInstallments, interestFractionalRatePerInstallment, graceType, gracePeriodDuration);\n\t\t }\n\t\t\n\t\treturn lstInstallmntPricplIntrst;}", "signature": "List<InstallmentPrincipalAndInterest> generateEqualInstallments(LoanInterestCalculationDetails loanInterestCalculationDetails)", "full_signature": "@Override public List<InstallmentPrincipalAndInterest> generateEqualInstallments(LoanInterestCalculationDetails loanInterestCalculationDetails)", "class_method_signature": "DecliningBalanceEqualPrincipalWithInterestGenerator.generateEqualInstallments(LoanInterestCalculationDetails loanInterestCalculationDetails)", "testcase": false, "constructor": false, "invocations": ["getLoanAmount", "getNumberOfInstallments", "getInterestFractionalRatePerInstallment", "getGraceType", "getGracePeriodDuration", "getDisbursementDate", "toDateTimeAtStartOfDay", "getLoanScheduleDates", "size", "get", "getTime", "toDate", "getTime", "toDate", "get", "getTime", "toDate", "getTime", "toDate", "getConfigurationValueInteger", "allDecliningEPIInstallments_v2", "allDecliningEPIInstallments_v2"]}, "repository": {"repo_id": 1348716, "url": "https://github.com/mifos/head", "language": "Java", "is_fork": false, "fork_count": 91, "stargazer_count": 55, "size": 532732, "license": "licensed"}}