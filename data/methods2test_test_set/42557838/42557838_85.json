{"test_class": {"identifier": "ChunkedPrintWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int ONE_KILO = 1024;", "modifier": "private static final", "type": "int", "declarator": "ONE_KILO = 1024", "var_name": "ONE_KILO"}], "file": "http/src/test/java/ro/polak/http/servlet/ChunkedPrintWriterTest.java"}, "test_case": {"identifier": "shouldAppendNewLineProperly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldAppendNewLineProperly() {\n        ByteArrayOutputStream out = new ByteArrayOutputStream(ONE_KILO);\n        ChunkedPrintWriter printWriter = new ChunkedPrintWriter(out);\n\n        printWriter.print(\"Wiki\");\n        printWriter.println();\n        printWriter.flush();\n        assertThat(new String(out.toByteArray()), is(\"4\\r\\nWiki\\r\\n2\\r\\n\\r\\n\\r\\n\"));\n    }", "signature": "void shouldAppendNewLineProperly()", "full_signature": "@Test public void shouldAppendNewLineProperly()", "class_method_signature": "ChunkedPrintWriterTest.shouldAppendNewLineProperly()", "testcase": true, "constructor": false, "invocations": ["print", "println", "flush", "assertThat", "toByteArray", "is"]}, "focal_class": {"identifier": "ChunkedPrintWriter", "superclass": "extends ServletPrintWriter", "interfaces": "", "fields": [{"original_string": "private static final String NEW_LINE = \"\\r\\n\";", "modifier": "private static final", "type": "String", "declarator": "NEW_LINE = \"\\r\\n\"", "var_name": "NEW_LINE"}, {"original_string": "private static final String END_LINE = \"0\\r\\n\\r\\n\";", "modifier": "private static final", "type": "String", "declarator": "END_LINE = \"0\\r\\n\\r\\n\"", "var_name": "END_LINE"}], "methods": [{"identifier": "ChunkedPrintWriter", "parameters": "(final OutputStream out)", "modifiers": "public", "return": "", "signature": " ChunkedPrintWriter(final OutputStream out)", "full_signature": "public  ChunkedPrintWriter(final OutputStream out)", "class_method_signature": "ChunkedPrintWriter.ChunkedPrintWriter(final OutputStream out)", "testcase": false, "constructor": true}, {"identifier": "println", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void println()", "full_signature": "@Override public void println()", "class_method_signature": "ChunkedPrintWriter.println()", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(final String str)", "modifiers": "@Override public", "return": "void", "signature": "void write(final String str)", "full_signature": "@Override public void write(final String str)", "class_method_signature": "ChunkedPrintWriter.write(final String str)", "testcase": false, "constructor": false}, {"identifier": "writeEnd", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void writeEnd()", "full_signature": "@Override public void writeEnd()", "class_method_signature": "ChunkedPrintWriter.writeEnd()", "testcase": false, "constructor": false}], "file": "http/src/main/java/ro/polak/http/servlet/ChunkedPrintWriter.java"}, "focal_method": {"identifier": "println", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void println() {\n        // Overwrites the original new line character\n        synchronized (lock) {\n            print(NEW_LINE);\n        }\n    }", "signature": "void println()", "full_signature": "@Override public void println()", "class_method_signature": "ChunkedPrintWriter.println()", "testcase": false, "constructor": false, "invocations": ["print"]}, "repository": {"repo_id": 42557838, "url": "https://github.com/piotrpolak/android-http-server", "language": "Java", "is_fork": false, "fork_count": 41, "stargazer_count": 136, "size": 2000, "license": "licensed"}}