{"test_class": {"identifier": "CoordinateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static double DELTA = 0.0000001;", "modifier": "private final static", "type": "double", "declarator": "DELTA = 0.0000001", "var_name": "DELTA"}, {"original_string": "private final Coordinate erlangen = new Coordinate(49.592410, 11.004174);", "modifier": "private final", "type": "Coordinate", "declarator": "erlangen = new Coordinate(49.592410, 11.004174)", "var_name": "erlangen"}], "file": "server/src/test/java/org/jvalue/ods/processor/adapter/domain/weather/models/CoordinateTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testEquals() {\n\t\tCoordinate other = new Coordinate(49.592410, 11.004174);\n\n\t\tAssert.assertEquals(erlangen, other);\n\t}", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "CoordinateTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertEquals"]}, "focal_class": {"identifier": "Coordinate", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final double latitude;", "modifier": "private final", "type": "double", "declarator": "latitude", "var_name": "latitude"}, {"original_string": "private final double longitude;", "modifier": "private final", "type": "double", "declarator": "longitude", "var_name": "longitude"}], "methods": [{"identifier": "Coordinate", "parameters": "(\n\t\t@JsonProperty(\"lat\") double latitude,\n\t\t@JsonProperty(\"lng\") double longitude\n\t\t)", "modifiers": "public", "return": "", "signature": " Coordinate(\n\t\t@JsonProperty(\"lat\") double latitude,\n\t\t@JsonProperty(\"lng\") double longitude\n\t\t)", "full_signature": "public  Coordinate(\n\t\t@JsonProperty(\"lat\") double latitude,\n\t\t@JsonProperty(\"lng\") double longitude\n\t\t)", "class_method_signature": "Coordinate.Coordinate(\n\t\t@JsonProperty(\"lat\") double latitude,\n\t\t@JsonProperty(\"lng\") double longitude\n\t\t)", "testcase": false, "constructor": true}, {"identifier": "getLatitude", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getLatitude()", "full_signature": "public double getLatitude()", "class_method_signature": "Coordinate.getLatitude()", "testcase": false, "constructor": false}, {"identifier": "getLongitude", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getLongitude()", "full_signature": "public double getLongitude()", "class_method_signature": "Coordinate.getLongitude()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Coordinate.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Coordinate.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Coordinate.hashCode()", "testcase": false, "constructor": false}, {"identifier": "assertIsValidLatitude", "parameters": "(double value)", "modifiers": "private", "return": "void", "signature": "void assertIsValidLatitude(double value)", "full_signature": "private void assertIsValidLatitude(double value)", "class_method_signature": "Coordinate.assertIsValidLatitude(double value)", "testcase": false, "constructor": false}, {"identifier": "assertIsValidLongitude", "parameters": "(double value)", "modifiers": "private", "return": "void", "signature": "void assertIsValidLongitude(double value)", "full_signature": "private void assertIsValidLongitude(double value)", "class_method_signature": "Coordinate.assertIsValidLongitude(double value)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/jvalue/ods/processor/adapter/domain/weather/models/Coordinate.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean equals(Object o) {\n\t\tif (this == o) return true;\n\t\tif (o == null || getClass() != o.getClass()) return false;\n\t\tCoordinate that = (Coordinate) o;\n\t\treturn Double.compare(that.latitude, latitude) == 0 &&\n\t\t\tDouble.compare(that.longitude, longitude) == 0;\n\t}", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Coordinate.equals(Object o)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "compare", "compare"]}, "repository": {"repo_id": 14989619, "url": "https://github.com/jvalue/open-data-service-v1", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 4525, "license": "licensed"}}