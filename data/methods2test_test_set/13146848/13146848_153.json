{"test_class": {"identifier": "MultiplePdfSourceSingleOutputParametersTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-model/src/test/java/org/sejda/model/parameter/base/MultiplePdfSourceSingleOutputParametersTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n        SingleTaskOutput output = mock(SingleTaskOutput.class);\n        MockMultiplePdfSourceSingleOutputParameters eq1 = new MockMultiplePdfSourceSingleOutputParameters();\n        eq1.setOutput(output);\n        MockMultiplePdfSourceSingleOutputParameters eq2 = new MockMultiplePdfSourceSingleOutputParameters();\n        eq2.setOutput(output);\n        MockMultiplePdfSourceSingleOutputParameters eq3 = new MockMultiplePdfSourceSingleOutputParameters();\n        eq3.setOutput(output);\n        MockMultiplePdfSourceSingleOutputParameters diff = new MockMultiplePdfSourceSingleOutputParameters();\n        diff.setOutput(mock(SingleTaskOutput.class));\n        TestUtils.testEqualsAndHashCodes(eq1, eq2, eq3, diff);\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "MultiplePdfSourceSingleOutputParametersTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["mock", "setOutput", "setOutput", "setOutput", "setOutput", "mock", "testEqualsAndHashCodes"]}, "focal_class": {"identifier": "MultiplePdfSourceSingleOutputParameters", "superclass": "extends MultiplePdfSourceParameters", "interfaces": "implements SingleOutputTaskParameters", "fields": [{"original_string": "@Valid\n    @NotNull\n    private SingleTaskOutput output;", "modifier": "@Valid\n    @NotNull\n    private", "type": "SingleTaskOutput", "declarator": "output", "var_name": "output"}], "methods": [{"identifier": "getOutput", "parameters": "()", "modifiers": "@Override public", "return": "SingleTaskOutput", "signature": "SingleTaskOutput getOutput()", "full_signature": "@Override public SingleTaskOutput getOutput()", "class_method_signature": "MultiplePdfSourceSingleOutputParameters.getOutput()", "testcase": false, "constructor": false}, {"identifier": "setOutput", "parameters": "(SingleTaskOutput output)", "modifiers": "@Override public", "return": "void", "signature": "void setOutput(SingleTaskOutput output)", "full_signature": "@Override public void setOutput(SingleTaskOutput output)", "class_method_signature": "MultiplePdfSourceSingleOutputParameters.setOutput(SingleTaskOutput output)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "MultiplePdfSourceSingleOutputParameters.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "MultiplePdfSourceSingleOutputParameters.equals(Object other)", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/parameter/base/MultiplePdfSourceSingleOutputParameters.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object other) {\n        if (this == other) {\n            return true;\n        }\n        if (!(other instanceof MultiplePdfSourceSingleOutputParameters)) {\n            return false;\n        }\n        MultiplePdfSourceSingleOutputParameters parameter = (MultiplePdfSourceSingleOutputParameters) other;\n        return new EqualsBuilder().appendSuper(super.equals(other)).append(output, parameter.output).isEquals();\n    }", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "MultiplePdfSourceSingleOutputParameters.equals(Object other)", "testcase": false, "constructor": false, "invocations": ["isEquals", "append", "appendSuper", "equals"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}