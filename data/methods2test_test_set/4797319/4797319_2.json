{"test_class": {"identifier": "TestURIUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "final Logger logger = LoggerFactory.getLogger(TestURIUtil.class);", "modifier": "final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(TestURIUtil.class)", "var_name": "logger"}], "file": "sparqled-commons/src/test/java/org/sindice/core/analytics/commons/util/TestURIUtil.java"}, "test_case": {"identifier": "testURL", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testURL()\n  throws Exception {\n    final String s1 = \"http://downloads.dbpedia.org/3.7/de/mappingbased_properties_de.nq.bz2\";\n    final String s2 = \"http://dbpedia.org/resource/Dienvidsus\u00c3\u201e\u00c2\u201cja__mouthPosition__1/\";\n\n    assertEquals(\"dbpedia.org\", URIUtil.getSndDomainFromUrl(s1));\n    assertEquals(\"dbpedia.org\", URIUtil.getSndDomainFromUrl(s2));\n  }", "signature": "void testURL()", "full_signature": "@Test public void testURL()", "class_method_signature": "TestURIUtil.testURL()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getSndDomainFromUrl", "assertEquals", "getSndDomainFromUrl"]}, "focal_class": {"identifier": "URIUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(URIUtil.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(URIUtil.class)", "var_name": "logger"}], "methods": [{"identifier": "getSndDomainFromUrl", "parameters": "(String url)", "modifiers": "public static", "return": "String", "signature": "String getSndDomainFromUrl(String url)", "full_signature": "public static String getSndDomainFromUrl(String url)", "class_method_signature": "URIUtil.getSndDomainFromUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "getSndDomain", "parameters": "(String domain)", "modifiers": "public static", "return": "String", "signature": "String getSndDomain(String domain)", "full_signature": "public static String getSndDomain(String domain)", "class_method_signature": "URIUtil.getSndDomain(String domain)", "testcase": false, "constructor": false}], "file": "sparqled-commons/src/main/java/org/sindice/core/analytics/commons/util/URIUtil.java"}, "focal_method": {"identifier": "getSndDomainFromUrl", "parameters": "(String url)", "modifiers": "public static", "return": "String", "body": "public static String getSndDomainFromUrl(String url) {\n    if (url == null) {\n      return null;\n    }\n    try {\n      final String domain = URI.create(url).getHost();\n      if (domain != null) {\n        return getSndDomain(domain);\n      }\n    } catch (IllegalArgumentException e) {\n    }\n    logger.debug(\"The url={} isn't valid, skipping it\", url);\n    return null;\n  }", "signature": "String getSndDomainFromUrl(String url)", "full_signature": "public static String getSndDomainFromUrl(String url)", "class_method_signature": "URIUtil.getSndDomainFromUrl(String url)", "testcase": false, "constructor": false, "invocations": ["getHost", "create", "getSndDomain", "debug"]}, "repository": {"repo_id": 4797319, "url": "https://github.com/sindice/sparqled", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 33, "size": 12885, "license": "licensed"}}