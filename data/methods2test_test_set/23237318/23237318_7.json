{"test_class": {"identifier": "HTTPBulkLoaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "samza-elasticsearch/src/test/java/com/quantiply/elasticsearch/HTTPBulkLoaderTest.java"}, "test_case": {"identifier": "testDeadWriterDetectionOnFlushCmdSend", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDeadWriterDetectionOnFlushCmdSend() throws Throwable {\n    HTTPBulkLoader loader = getBulkLoader();\n    loader.writerFuture = mock(Future.class);\n    when(loader.writerFuture.isDone()).thenReturn(true);\n    when(loader.writerFuture.get()).thenThrow(new RuntimeException(\"TEST\"));\n\n    HTTPBulkLoader.ActionRequest req = getRequest();\n    loader.addAction(\"test\", req); //this should not fail b/c queue is not yet full\n\n    //This should fail b/c queue is full\n    assertThatThrownBy(loader::flush).isInstanceOf(RuntimeException.class)\n            .hasMessageContaining(\"TEST\");\n  }", "signature": "void testDeadWriterDetectionOnFlushCmdSend()", "full_signature": "@Test public void testDeadWriterDetectionOnFlushCmdSend()", "class_method_signature": "HTTPBulkLoaderTest.testDeadWriterDetectionOnFlushCmdSend()", "testcase": true, "constructor": false, "invocations": ["getBulkLoader", "mock", "thenReturn", "when", "isDone", "thenThrow", "when", "get", "getRequest", "addAction", "hasMessageContaining", "isInstanceOf", "assertThatThrownBy"]}, "focal_class": {"identifier": "HTTPBulkLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected static final int SHUTDOWN_WAIT_MS = 100;", "modifier": "protected static final", "type": "int", "declarator": "SHUTDOWN_WAIT_MS = 100", "var_name": "SHUTDOWN_WAIT_MS"}, {"original_string": "protected final Writer writer;", "modifier": "protected final", "type": "Writer", "declarator": "writer", "var_name": "writer"}, {"original_string": "protected final ArrayBlockingQueue<WriterCommand> writerCmdQueue;", "modifier": "protected final", "type": "ArrayBlockingQueue<WriterCommand>", "declarator": "writerCmdQueue", "var_name": "writerCmdQueue"}, {"original_string": "protected final ExecutorService writerExecSvc;", "modifier": "protected final", "type": "ExecutorService", "declarator": "writerExecSvc", "var_name": "writerExecSvc"}, {"original_string": "protected Future<Void> writerFuture = null;", "modifier": "protected", "type": "Future<Void>", "declarator": "writerFuture = null", "var_name": "writerFuture"}, {"original_string": "protected Logger logger = LoggerFactory.getLogger(new Object() {}.getClass().getEnclosingClass());", "modifier": "protected", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(new Object() {}.getClass().getEnclosingClass())", "var_name": "logger"}], "methods": [{"identifier": "HTTPBulkLoader", "parameters": "(Config config, JestClient client, Optional<Consumer<BulkReport>> onFlushOpt)", "modifiers": "public", "return": "", "signature": " HTTPBulkLoader(Config config, JestClient client, Optional<Consumer<BulkReport>> onFlushOpt)", "full_signature": "public  HTTPBulkLoader(Config config, JestClient client, Optional<Consumer<BulkReport>> onFlushOpt)", "class_method_signature": "HTTPBulkLoader.HTTPBulkLoader(Config config, JestClient client, Optional<Consumer<BulkReport>> onFlushOpt)", "testcase": false, "constructor": true}, {"identifier": "addAction", "parameters": "(String source, ActionRequest req)", "modifiers": "public", "return": "void", "signature": "void addAction(String source, ActionRequest req)", "full_signature": "public void addAction(String source, ActionRequest req)", "class_method_signature": "HTTPBulkLoader.addAction(String source, ActionRequest req)", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void flush()", "full_signature": "public void flush()", "class_method_signature": "HTTPBulkLoader.flush()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "HTTPBulkLoader.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "HTTPBulkLoader.stop()", "testcase": false, "constructor": false}, {"identifier": "convertToJestAction", "parameters": "(ActionRequest req)", "modifiers": "protected", "return": "BulkableAction<DocumentResult>", "signature": "BulkableAction<DocumentResult> convertToJestAction(ActionRequest req)", "full_signature": "protected BulkableAction<DocumentResult> convertToJestAction(ActionRequest req)", "class_method_signature": "HTTPBulkLoader.convertToJestAction(ActionRequest req)", "testcase": false, "constructor": false}, {"identifier": "getAction", "parameters": "(ActionRequest req,\n                                                   Consumer<String> id,\n                                                   Consumer<String> index,\n                                                   Consumer<String> type,\n                                                   BiConsumer<String,Object> setParameter,\n                                                   Supplier<BulkableAction<DocumentResult>> build)", "modifiers": "protected", "return": "BulkableAction<DocumentResult>", "signature": "BulkableAction<DocumentResult> getAction(ActionRequest req,\n                                                   Consumer<String> id,\n                                                   Consumer<String> index,\n                                                   Consumer<String> type,\n                                                   BiConsumer<String,Object> setParameter,\n                                                   Supplier<BulkableAction<DocumentResult>> build)", "full_signature": "protected BulkableAction<DocumentResult> getAction(ActionRequest req,\n                                                   Consumer<String> id,\n                                                   Consumer<String> index,\n                                                   Consumer<String> type,\n                                                   BiConsumer<String,Object> setParameter,\n                                                   Supplier<BulkableAction<DocumentResult>> build)", "class_method_signature": "HTTPBulkLoader.getAction(ActionRequest req,\n                                                   Consumer<String> id,\n                                                   Consumer<String> index,\n                                                   Consumer<String> type,\n                                                   BiConsumer<String,Object> setParameter,\n                                                   Supplier<BulkableAction<DocumentResult>> build)", "testcase": false, "constructor": false}, {"identifier": "getIndexAction", "parameters": "(ActionRequest req)", "modifiers": "protected", "return": "BulkableAction<DocumentResult>", "signature": "BulkableAction<DocumentResult> getIndexAction(ActionRequest req)", "full_signature": "protected BulkableAction<DocumentResult> getIndexAction(ActionRequest req)", "class_method_signature": "HTTPBulkLoader.getIndexAction(ActionRequest req)", "testcase": false, "constructor": false}, {"identifier": "getUpdateAction", "parameters": "(ActionRequest req)", "modifiers": "protected", "return": "BulkableAction<DocumentResult>", "signature": "BulkableAction<DocumentResult> getUpdateAction(ActionRequest req)", "full_signature": "protected BulkableAction<DocumentResult> getUpdateAction(ActionRequest req)", "class_method_signature": "HTTPBulkLoader.getUpdateAction(ActionRequest req)", "testcase": false, "constructor": false}, {"identifier": "getDeleteAction", "parameters": "(ActionRequest req)", "modifiers": "protected", "return": "BulkableAction<DocumentResult>", "signature": "BulkableAction<DocumentResult> getDeleteAction(ActionRequest req)", "full_signature": "protected BulkableAction<DocumentResult> getDeleteAction(ActionRequest req)", "class_method_signature": "HTTPBulkLoader.getDeleteAction(ActionRequest req)", "testcase": false, "constructor": false}, {"identifier": "checkWriter", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void checkWriter()", "full_signature": "protected void checkWriter()", "class_method_signature": "HTTPBulkLoader.checkWriter()", "testcase": false, "constructor": false}, {"identifier": "sendCmd", "parameters": "(WriterCommand cmd)", "modifiers": "protected", "return": "void", "signature": "void sendCmd(WriterCommand cmd)", "full_signature": "protected void sendCmd(WriterCommand cmd)", "class_method_signature": "HTTPBulkLoader.sendCmd(WriterCommand cmd)", "testcase": false, "constructor": false}], "file": "samza-elasticsearch/src/main/java/com/quantiply/elasticsearch/HTTPBulkLoader.java"}, "focal_method": {"identifier": "addAction", "parameters": "(String source, ActionRequest req)", "modifiers": "public", "return": "void", "body": "public void addAction(String source, ActionRequest req) throws Throwable {\n//    if (logger.isTraceEnabled()) {\n//      logger.trace(String.format(\"Add action: key %s, index %s/%s, doc %s\", req.key, req.index, req.docType, req.document));\n//    }\n    BulkableAction<DocumentResult> action = convertToJestAction(req);\n    WriterCommand addCmd = WriterCommand.getAddCmd(new SourcedActionRequest(source, req, action));\n    sendCmd(addCmd);\n  }", "signature": "void addAction(String source, ActionRequest req)", "full_signature": "public void addAction(String source, ActionRequest req)", "class_method_signature": "HTTPBulkLoader.addAction(String source, ActionRequest req)", "testcase": false, "constructor": false, "invocations": ["convertToJestAction", "getAddCmd", "sendCmd"]}, "repository": {"repo_id": 23237318, "url": "https://github.com/quantiply/rico", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 8, "size": 5128, "license": "licensed"}}