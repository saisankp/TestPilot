{"test_class": {"identifier": "TestCLIParser", "superclass": "", "interfaces": "", "fields": [], "file": "client/src/test/java/org/apache/ivory/cli/TestCLIParser.java"}, "test_case": {"identifier": "testEmptyParser", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testEmptyParser() throws Exception {\n\t\ttry {\n\t\t\tCLIParser parser = new CLIParser(\"ivory\", new String[] {});\n\t\t\tCLIParser.Command c = parser.parse(new String[] { \"a\" });\n\t\t\tAssert.fail();\n\t\t} catch (ParseException ex) {\n\t\t\t// nop\n\t\t}\n\t}", "signature": "void testEmptyParser()", "full_signature": "@Test public void testEmptyParser()", "class_method_signature": "TestCLIParser.testEmptyParser()", "testcase": true, "constructor": false, "invocations": ["parse", "fail"]}, "focal_class": {"identifier": "CLIParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String LEFT_PADDING = \"      \";", "modifier": "private static final", "type": "String", "declarator": "LEFT_PADDING = \"      \"", "var_name": "LEFT_PADDING"}, {"original_string": "private String cliName;", "modifier": "private", "type": "String", "declarator": "cliName", "var_name": "cliName"}, {"original_string": "private String[] cliHelp;", "modifier": "private", "type": "String[]", "declarator": "cliHelp", "var_name": "cliHelp"}, {"original_string": "private Map<String, Options> commands = new LinkedHashMap<String, Options>();", "modifier": "private", "type": "Map<String, Options>", "declarator": "commands = new LinkedHashMap<String, Options>()", "var_name": "commands"}, {"original_string": "private Map<String, Boolean> commandWithArgs = new LinkedHashMap<String, Boolean>();", "modifier": "private", "type": "Map<String, Boolean>", "declarator": "commandWithArgs = new LinkedHashMap<String, Boolean>()", "var_name": "commandWithArgs"}, {"original_string": "private Map<String, String> commandsHelp = new LinkedHashMap<String, String>();", "modifier": "private", "type": "Map<String, String>", "declarator": "commandsHelp = new LinkedHashMap<String, String>()", "var_name": "commandsHelp"}], "methods": [{"identifier": "CLIParser", "parameters": "(String cliName, String[] cliHelp)", "modifiers": "public", "return": "", "signature": " CLIParser(String cliName, String[] cliHelp)", "full_signature": "public  CLIParser(String cliName, String[] cliHelp)", "class_method_signature": "CLIParser.CLIParser(String cliName, String[] cliHelp)", "testcase": false, "constructor": true}, {"identifier": "addCommand", "parameters": "(String command, String argsHelp, String commandHelp, Options commandOptions,\n                           boolean hasArguments)", "modifiers": "public", "return": "void", "signature": "void addCommand(String command, String argsHelp, String commandHelp, Options commandOptions,\n                           boolean hasArguments)", "full_signature": "public void addCommand(String command, String argsHelp, String commandHelp, Options commandOptions,\n                           boolean hasArguments)", "class_method_signature": "CLIParser.addCommand(String command, String argsHelp, String commandHelp, Options commandOptions,\n                           boolean hasArguments)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String[] args)", "modifiers": "public", "return": "Command", "signature": "Command parse(String[] args)", "full_signature": "public Command parse(String[] args)", "class_method_signature": "CLIParser.parse(String[] args)", "testcase": false, "constructor": false}, {"identifier": "shortHelp", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String shortHelp()", "full_signature": "public String shortHelp()", "class_method_signature": "CLIParser.shortHelp()", "testcase": false, "constructor": false}, {"identifier": "showHelp", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void showHelp()", "full_signature": "public void showHelp()", "class_method_signature": "CLIParser.showHelp()", "testcase": false, "constructor": false}], "file": "client/src/main/java/org/apache/ivory/cli/CLIParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(String[] args)", "modifiers": "public", "return": "Command", "body": "public Command parse(String[] args) throws ParseException {\n        if (args.length == 0) {\n            throw new ParseException(\"missing sub-command\");\n        }\n        else {\n            if (commands.containsKey(args[0])) {\n                GnuParser parser = new GnuParser();\n                String[] minusCommand = new String[args.length - 1];\n                System.arraycopy(args, 1, minusCommand, 0, minusCommand.length);\n                return new Command(args[0], parser.parse(commands.get(args[0]), minusCommand,\n                                                         commandWithArgs.get(args[0])));\n            }\n            else {\n                throw new ParseException(MessageFormat.format(\"invalid sub-command [{0}]\", args[0]));\n            }\n        }\n    }", "signature": "Command parse(String[] args)", "full_signature": "public Command parse(String[] args)", "class_method_signature": "CLIParser.parse(String[] args)", "testcase": false, "constructor": false, "invocations": ["containsKey", "arraycopy", "parse", "get", "get", "format"]}, "repository": {"repo_id": 2836228, "url": "https://github.com/sriksun/Ivory", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 28, "size": 11708, "license": "licensed"}}