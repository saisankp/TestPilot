{"test_class": {"identifier": "Tuple2Test", "superclass": "", "interfaces": "", "fields": [], "file": "flink-core/src/test/java/org/apache/flink/api/java/tuple/Tuple2Test.java"}, "test_case": {"identifier": "testSwapValues", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testSwapValues() {\n\t\tTuple2<String, Integer> toSwap = new Tuple2<>(\"Test case\", 25);\n\t\tTuple2<Integer, String> swapped = toSwap.swap();\n\n\t\tAssert.assertEquals(swapped.f0, toSwap.f1);\n\n\t\tAssert.assertEquals(swapped.f1, toSwap.f0);\n\t}", "signature": "void testSwapValues()", "full_signature": "@Test public void testSwapValues()", "class_method_signature": "Tuple2Test.testSwapValues()", "testcase": true, "constructor": false, "invocations": ["swap", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "Tuple2", "superclass": "extends Tuple", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "public T0 f0;", "modifier": "public", "type": "T0", "declarator": "f0", "var_name": "f0"}, {"original_string": "public T1 f1;", "modifier": "public", "type": "T1", "declarator": "f1", "var_name": "f1"}], "methods": [{"identifier": "Tuple2", "parameters": "()", "modifiers": "public", "return": "", "signature": " Tuple2()", "full_signature": "public  Tuple2()", "class_method_signature": "Tuple2.Tuple2()", "testcase": false, "constructor": true}, {"identifier": "Tuple2", "parameters": "(T0 value0, T1 value1)", "modifiers": "public", "return": "", "signature": " Tuple2(T0 value0, T1 value1)", "full_signature": "public  Tuple2(T0 value0, T1 value1)", "class_method_signature": "Tuple2.Tuple2(T0 value0, T1 value1)", "testcase": false, "constructor": true}, {"identifier": "getArity", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getArity()", "full_signature": "@Override public int getArity()", "class_method_signature": "Tuple2.getArity()", "testcase": false, "constructor": false}, {"identifier": "getField", "parameters": "(int pos)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "T", "signature": "T getField(int pos)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public T getField(int pos)", "class_method_signature": "Tuple2.getField(int pos)", "testcase": false, "constructor": false}, {"identifier": "setField", "parameters": "(T value, int pos)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "void", "signature": "void setField(T value, int pos)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public void setField(T value, int pos)", "class_method_signature": "Tuple2.setField(T value, int pos)", "testcase": false, "constructor": false}, {"identifier": "setFields", "parameters": "(T0 value0, T1 value1)", "modifiers": "public", "return": "void", "signature": "void setFields(T0 value0, T1 value1)", "full_signature": "public void setFields(T0 value0, T1 value1)", "class_method_signature": "Tuple2.setFields(T0 value0, T1 value1)", "testcase": false, "constructor": false}, {"identifier": "swap", "parameters": "()", "modifiers": "public", "return": "Tuple2<T1, T0>", "signature": "Tuple2<T1, T0> swap()", "full_signature": "public Tuple2<T1, T0> swap()", "class_method_signature": "Tuple2.swap()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Tuple2.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "Tuple2.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Tuple2.hashCode()", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "Tuple2<T0,T1>", "signature": "Tuple2<T0,T1> copy()", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public Tuple2<T0,T1> copy()", "class_method_signature": "Tuple2.copy()", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(T0 value0, T1 value1)", "modifiers": "public static", "return": "Tuple2<T0,T1>", "signature": "Tuple2<T0,T1> of(T0 value0, T1 value1)", "full_signature": "public static Tuple2<T0,T1> of(T0 value0, T1 value1)", "class_method_signature": "Tuple2.of(T0 value0, T1 value1)", "testcase": false, "constructor": false}], "file": "flink-core/src/main/java/org/apache/flink/api/java/tuple/Tuple2.java"}, "focal_method": {"identifier": "swap", "parameters": "()", "modifiers": "public", "return": "Tuple2<T1, T0>", "body": "public Tuple2<T1, T0> swap() {\n\t\treturn new Tuple2<T1, T0>(f1, f0);\n\t}", "signature": "Tuple2<T1, T0> swap()", "full_signature": "public Tuple2<T1, T0> swap()", "class_method_signature": "Tuple2.swap()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}