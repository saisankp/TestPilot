{"test_class": {"identifier": "LollipopNetworkObservingStrategyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule public MockitoRule rule = MockitoJUnit.rule();", "modifier": "@Rule public", "type": "MockitoRule", "declarator": "rule = MockitoJUnit.rule()", "var_name": "rule"}, {"original_string": "@Spy private NetworkObservingStrategy strategy = new LollipopNetworkObservingStrategy();", "modifier": "@Spy private", "type": "NetworkObservingStrategy", "declarator": "strategy = new LollipopNetworkObservingStrategy()", "var_name": "strategy"}], "file": "library/src/test/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategyTest.java"}, "test_case": {"identifier": "shouldCallOnError", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void shouldCallOnError() {\n    // given\n    final String message = \"error message\";\n    final Exception exception = new Exception();\n\n    // when\n    strategy.onError(message, exception);\n\n    // then\n    verify(strategy, times(1)).onError(message, exception);\n  }", "signature": "void shouldCallOnError()", "full_signature": "@Test public void shouldCallOnError()", "class_method_signature": "LollipopNetworkObservingStrategyTest.shouldCallOnError()", "testcase": true, "constructor": false, "invocations": ["onError", "onError", "verify", "times"]}, "focal_class": {"identifier": "LollipopNetworkObservingStrategy", "superclass": "", "interfaces": "implements NetworkObservingStrategy", "fields": [{"original_string": "@SuppressWarnings(\"NullAway\") // it has to be initialized in the Observable due to Context\n  private NetworkCallback networkCallback;", "modifier": "@SuppressWarnings(\"NullAway\") // it has to be initialized in the Observable due to Context\n  private", "type": "NetworkCallback", "declarator": "networkCallback", "var_name": "networkCallback"}], "methods": [{"identifier": "observeNetworkConnectivity", "parameters": "(final Context context)", "modifiers": "@Override public", "return": "Observable<Connectivity>", "signature": "Observable<Connectivity> observeNetworkConnectivity(final Context context)", "full_signature": "@Override public Observable<Connectivity> observeNetworkConnectivity(final Context context)", "class_method_signature": "LollipopNetworkObservingStrategy.observeNetworkConnectivity(final Context context)", "testcase": false, "constructor": false}, {"identifier": "tryToUnregisterCallback", "parameters": "(final ConnectivityManager manager)", "modifiers": "private", "return": "void", "signature": "void tryToUnregisterCallback(final ConnectivityManager manager)", "full_signature": "private void tryToUnregisterCallback(final ConnectivityManager manager)", "class_method_signature": "LollipopNetworkObservingStrategy.tryToUnregisterCallback(final ConnectivityManager manager)", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(final String message, final Exception exception)", "modifiers": "@Override public", "return": "void", "signature": "void onError(final String message, final Exception exception)", "full_signature": "@Override public void onError(final String message, final Exception exception)", "class_method_signature": "LollipopNetworkObservingStrategy.onError(final String message, final Exception exception)", "testcase": false, "constructor": false}, {"identifier": "createNetworkCallback", "parameters": "(final ObservableEmitter<Connectivity> subscriber,\n      final Context context)", "modifiers": "private", "return": "NetworkCallback", "signature": "NetworkCallback createNetworkCallback(final ObservableEmitter<Connectivity> subscriber,\n      final Context context)", "full_signature": "private NetworkCallback createNetworkCallback(final ObservableEmitter<Connectivity> subscriber,\n      final Context context)", "class_method_signature": "LollipopNetworkObservingStrategy.createNetworkCallback(final ObservableEmitter<Connectivity> subscriber,\n      final Context context)", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/github/pwittchen/reactivenetwork/library/rx2/network/observing/strategy/LollipopNetworkObservingStrategy.java"}, "focal_method": {"identifier": "onError", "parameters": "(final String message, final Exception exception)", "modifiers": "@Override public", "return": "void", "body": "@Override public void onError(final String message, final Exception exception) {\n    Log.e(LOG_TAG, message, exception);\n  }", "signature": "void onError(final String message, final Exception exception)", "full_signature": "@Override public void onError(final String message, final Exception exception)", "class_method_signature": "LollipopNetworkObservingStrategy.onError(final String message, final Exception exception)", "testcase": false, "constructor": false, "invocations": ["e"]}, "repository": {"repo_id": 40492118, "url": "https://github.com/pwittchen/ReactiveNetwork", "stars": 2282, "created": "8/10/2015 4:06:58 PM +00:00", "updates": "2020-01-26T20:59:17+00:00", "fork": "False", "license": "licensed"}}