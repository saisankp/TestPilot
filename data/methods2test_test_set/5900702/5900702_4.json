{"test_class": {"identifier": "SliceResourceScannerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n\tprivate Bundle bundle;", "modifier": "@Mock\n\tprivate", "type": "Bundle", "declarator": "bundle", "var_name": "bundle"}], "file": "slice-core/src/test/java/com/cognifide/slice/core/internal/scanner/SliceResourceScannerTest.java"}, "test_case": {"identifier": "testFindSliceInnerClassesResources", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testFindSliceInnerClassesResources() throws ClassNotFoundException {\n\t\tfinal List<String> classList = Lists.newArrayList(\n\t\t\t\t\"com/cognifide/slice/testhelper/TestBundleInnerClass1\",\n\t\t\t\t\"com/cognifide/slice/testhelper/TestBundleInnerClass2\");\n\t\tsetUp(classList);\n\t\tSliceResourceScanner sliceResourceScanner = new SliceResourceScanner();\n\t\tCollection<Class<?>> classes = sliceResourceScanner.findSliceResources(bundle, \"test\");\n\t\tAssert.assertEquals(1, classes.size());\n\t\tAssert.assertEquals(\"TestBundleInnerClass1\", new ArrayList<Class<?>>(classes).get(0).getSimpleName());\n\t}", "signature": "void testFindSliceInnerClassesResources()", "full_signature": "@Test public void testFindSliceInnerClassesResources()", "class_method_signature": "SliceResourceScannerTest.testFindSliceInnerClassesResources()", "testcase": true, "constructor": false, "invocations": ["newArrayList", "setUp", "findSliceResources", "assertEquals", "size", "assertEquals", "getSimpleName", "get"]}, "focal_class": {"identifier": "SliceResourceScanner", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(SliceResourceScanner.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(SliceResourceScanner.class)", "var_name": "LOG"}], "methods": [{"identifier": "findSliceResources", "parameters": "(Bundle bundle, String basePackage)", "modifiers": "public", "return": "Collection<Class<?>>", "signature": "Collection<Class<?>> findSliceResources(Bundle bundle, String basePackage)", "full_signature": "public Collection<Class<?>> findSliceResources(Bundle bundle, String basePackage)", "class_method_signature": "SliceResourceScanner.findSliceResources(Bundle bundle, String basePackage)", "testcase": false, "constructor": false}], "file": "slice-core/src/main/java/com/cognifide/slice/core/internal/scanner/SliceResourceScanner.java"}, "focal_method": {"identifier": "findSliceResources", "parameters": "(Bundle bundle, String basePackage)", "modifiers": "public", "return": "Collection<Class<?>>", "body": "public Collection<Class<?>> findSliceResources(Bundle bundle, String basePackage) {\n\t\tBundleClassesFinder classFinder = new BundleClassesFinder(basePackage);\n\t\tclassFinder.addFilter(new SliceResourceFilter());\n\n\t\tLOG.info(\"Searching for classes annotated with SliceResource, packages: {}, bundle: {}\", basePackage,\n\t\t\t\tbundle.getSymbolicName());\n\n\t\tCollection<Class<?>> classes = classFinder.getClasses(bundle);\n\n\t\tLOG.info(\"Found {} Slice Resource classes. Switch to debug logging level to see them all.\",\n\t\t\t\tclasses.size());\n\n\t\treturn classes;\n\t}", "signature": "Collection<Class<?>> findSliceResources(Bundle bundle, String basePackage)", "full_signature": "public Collection<Class<?>> findSliceResources(Bundle bundle, String basePackage)", "class_method_signature": "SliceResourceScanner.findSliceResources(Bundle bundle, String basePackage)", "testcase": false, "constructor": false, "invocations": ["addFilter", "info", "getSymbolicName", "getClasses", "info", "size"]}, "repository": {"repo_id": 5900702, "url": "https://github.com/Cognifide/Slice", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 61, "size": 11367, "license": "licensed"}}