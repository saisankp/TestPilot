{"test_class": {"identifier": "ComponentTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ListComponent<Void, Object> mListComponent;", "modifier": "private", "type": "ListComponent<Void, Object>", "declarator": "mListComponent", "var_name": "mListComponent"}], "file": "bento/src/test/java/com/yelp/android/bento/core/ComponentTest.java"}, "test_case": {"identifier": "test_GetCountNoGaps_RightCount", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_GetCountNoGaps_RightCount() {\n        assertEquals(0, mListComponent.getCount());\n    }", "signature": "void test_GetCountNoGaps_RightCount()", "full_signature": "@Test public void test_GetCountNoGaps_RightCount()", "class_method_signature": "ComponentTest.test_GetCountNoGaps_RightCount()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getCount"]}, "focal_class": {"identifier": "Component", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ComponentDataObservable mObservable = new ComponentDataObservable();", "modifier": "private final", "type": "ComponentDataObservable", "declarator": "mObservable = new ComponentDataObservable()", "var_name": "mObservable"}, {"original_string": "@Px private int mStartGapSize = 0;", "modifier": "@Px private", "type": "int", "declarator": "mStartGapSize = 0", "var_name": "mStartGapSize"}, {"original_string": "@Px private int mEndGapSize = 0;", "modifier": "@Px private", "type": "int", "declarator": "mEndGapSize = 0", "var_name": "mEndGapSize"}, {"original_string": "@NonNull private List<ItemVisibilityListener> mItemVisibilityListeners = new ArrayList<>();", "modifier": "@NonNull private", "type": "List<ItemVisibilityListener>", "declarator": "mItemVisibilityListeners = new ArrayList<>()", "var_name": "mItemVisibilityListeners"}, {"original_string": "protected SpanSizeLookup mSpanSizeLookup =\n            new SpanSizeLookup() {\n                @Override\n                public int getSpanSize(int position) {\n                    if (hasGap(position)) {\n                        return getNumberLanes();\n                    }\n                    return 1;\n                }\n            };", "modifier": "protected", "type": "SpanSizeLookup", "declarator": "mSpanSizeLookup =\n            new SpanSizeLookup() {\n                @Override\n                public int getSpanSize(int position) {\n                    if (hasGap(position)) {\n                        return getNumberLanes();\n                    }\n                    return 1;\n                }\n            }", "var_name": "mSpanSizeLookup"}], "methods": [{"identifier": "getPresenter", "parameters": "(int position)", "modifiers": "@Nullable public abstract", "return": "Object", "signature": "Object getPresenter(int position)", "full_signature": "@Nullable public abstract Object getPresenter(int position)", "class_method_signature": "Component.getPresenter(int position)", "testcase": false, "constructor": false}, {"identifier": "getItem", "parameters": "(int position)", "modifiers": "@Nullable public abstract", "return": "Object", "signature": "Object getItem(int position)", "full_signature": "@Nullable public abstract Object getItem(int position)", "class_method_signature": "Component.getItem(int position)", "testcase": false, "constructor": false}, {"identifier": "getCount", "parameters": "()", "modifiers": "public abstract", "return": "int", "signature": "int getCount()", "full_signature": "public abstract int getCount()", "class_method_signature": "Component.getCount()", "testcase": false, "constructor": false}, {"identifier": "getHolderType", "parameters": "(int position)", "modifiers": "@NonNull public abstract", "return": "Class<? extends ComponentViewHolder>", "signature": "Class<? extends ComponentViewHolder> getHolderType(int position)", "full_signature": "@NonNull public abstract Class<? extends ComponentViewHolder> getHolderType(int position)", "class_method_signature": "Component.getHolderType(int position)", "testcase": false, "constructor": false}, {"identifier": "notifyDataChanged", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void notifyDataChanged()", "full_signature": "public final void notifyDataChanged()", "class_method_signature": "Component.notifyDataChanged()", "testcase": false, "constructor": false}, {"identifier": "notifyItemRangeChanged", "parameters": "(int positionStart, int itemCount)", "modifiers": "public final", "return": "void", "signature": "void notifyItemRangeChanged(int positionStart, int itemCount)", "full_signature": "public final void notifyItemRangeChanged(int positionStart, int itemCount)", "class_method_signature": "Component.notifyItemRangeChanged(int positionStart, int itemCount)", "testcase": false, "constructor": false}, {"identifier": "notifyItemRangeInserted", "parameters": "(int positionStart, int itemCount)", "modifiers": "public final", "return": "void", "signature": "void notifyItemRangeInserted(int positionStart, int itemCount)", "full_signature": "public final void notifyItemRangeInserted(int positionStart, int itemCount)", "class_method_signature": "Component.notifyItemRangeInserted(int positionStart, int itemCount)", "testcase": false, "constructor": false}, {"identifier": "notifyItemRangeRemoved", "parameters": "(int positionStart, int itemCount)", "modifiers": "public final", "return": "void", "signature": "void notifyItemRangeRemoved(int positionStart, int itemCount)", "full_signature": "public final void notifyItemRangeRemoved(int positionStart, int itemCount)", "class_method_signature": "Component.notifyItemRangeRemoved(int positionStart, int itemCount)", "testcase": false, "constructor": false}, {"identifier": "notifyItemMoved", "parameters": "(int fromPosition, int toPosition)", "modifiers": "public final", "return": "void", "signature": "void notifyItemMoved(int fromPosition, int toPosition)", "full_signature": "public final void notifyItemMoved(int fromPosition, int toPosition)", "class_method_signature": "Component.notifyItemMoved(int fromPosition, int toPosition)", "testcase": false, "constructor": false}, {"identifier": "setStartGap", "parameters": "(@Px int gapSizePx)", "modifiers": "public", "return": "void", "signature": "void setStartGap(@Px int gapSizePx)", "full_signature": "public void setStartGap(@Px int gapSizePx)", "class_method_signature": "Component.setStartGap(@Px int gapSizePx)", "testcase": false, "constructor": false}, {"identifier": "setEndGap", "parameters": "(@Px int gapSizePx)", "modifiers": "public", "return": "void", "signature": "void setEndGap(@Px int gapSizePx)", "full_signature": "public void setEndGap(@Px int gapSizePx)", "class_method_signature": "Component.setEndGap(@Px int gapSizePx)", "testcase": false, "constructor": false}, {"identifier": "registerComponentDataObserver", "parameters": "(@NonNull ComponentDataObserver observer)", "modifiers": "public", "return": "void", "signature": "void registerComponentDataObserver(@NonNull ComponentDataObserver observer)", "full_signature": "public void registerComponentDataObserver(@NonNull ComponentDataObserver observer)", "class_method_signature": "Component.registerComponentDataObserver(@NonNull ComponentDataObserver observer)", "testcase": false, "constructor": false}, {"identifier": "unregisterComponentDataObserver", "parameters": "(@NonNull ComponentDataObserver observer)", "modifiers": "public", "return": "void", "signature": "void unregisterComponentDataObserver(@NonNull ComponentDataObserver observer)", "full_signature": "public void unregisterComponentDataObserver(@NonNull ComponentDataObserver observer)", "class_method_signature": "Component.unregisterComponentDataObserver(@NonNull ComponentDataObserver observer)", "testcase": false, "constructor": false}, {"identifier": "registerItemVisibilityListener", "parameters": "(@NonNull ItemVisibilityListener listener)", "modifiers": "public", "return": "void", "signature": "void registerItemVisibilityListener(@NonNull ItemVisibilityListener listener)", "full_signature": "public void registerItemVisibilityListener(@NonNull ItemVisibilityListener listener)", "class_method_signature": "Component.registerItemVisibilityListener(@NonNull ItemVisibilityListener listener)", "testcase": false, "constructor": false}, {"identifier": "unregisterItemVisibilityListener", "parameters": "(@NonNull ItemVisibilityListener listener)", "modifiers": "public", "return": "void", "signature": "void unregisterItemVisibilityListener(@NonNull ItemVisibilityListener listener)", "full_signature": "public void unregisterItemVisibilityListener(@NonNull ItemVisibilityListener listener)", "class_method_signature": "Component.unregisterItemVisibilityListener(@NonNull ItemVisibilityListener listener)", "testcase": false, "constructor": false}, {"identifier": "getNumberLanes", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberLanes()", "full_signature": "public int getNumberLanes()", "class_method_signature": "Component.getNumberLanes()", "testcase": false, "constructor": false}, {"identifier": "onItemVisible", "parameters": "(int index)", "modifiers": "@CallSuper public", "return": "void", "signature": "void onItemVisible(int index)", "full_signature": "@CallSuper public void onItemVisible(int index)", "class_method_signature": "Component.onItemVisible(int index)", "testcase": false, "constructor": false}, {"identifier": "onItemNotVisible", "parameters": "(int index)", "modifiers": "@CallSuper public", "return": "void", "signature": "void onItemNotVisible(int index)", "full_signature": "@CallSuper public void onItemNotVisible(int index)", "class_method_signature": "Component.onItemNotVisible(int index)", "testcase": false, "constructor": false}, {"identifier": "onItemAtTop", "parameters": "(int index)", "modifiers": "@CallSuper public", "return": "void", "signature": "void onItemAtTop(int index)", "full_signature": "@CallSuper public void onItemAtTop(int index)", "class_method_signature": "Component.onItemAtTop(int index)", "testcase": false, "constructor": false}, {"identifier": "getPresenterInternal", "parameters": "(int position)", "modifiers": "@Nullable final", "return": "Object", "signature": "Object getPresenterInternal(int position)", "full_signature": "@Nullable final Object getPresenterInternal(int position)", "class_method_signature": "Component.getPresenterInternal(int position)", "testcase": false, "constructor": false}, {"identifier": "getHolderTypeInternal", "parameters": "(int position)", "modifiers": "@NonNull public final", "return": "Class<? extends ComponentViewHolder>", "signature": "Class<? extends ComponentViewHolder> getHolderTypeInternal(int position)", "full_signature": "@NonNull public final Class<? extends ComponentViewHolder> getHolderTypeInternal(int position)", "class_method_signature": "Component.getHolderTypeInternal(int position)", "testcase": false, "constructor": false}, {"identifier": "getItemInternal", "parameters": "(int position)", "modifiers": "@Nullable protected final", "return": "Object", "signature": "Object getItemInternal(int position)", "full_signature": "@Nullable protected final Object getItemInternal(int position)", "class_method_signature": "Component.getItemInternal(int position)", "testcase": false, "constructor": false}, {"identifier": "getSpanSizeLookup", "parameters": "()", "modifiers": "@NonNull public", "return": "SpanSizeLookup", "signature": "SpanSizeLookup getSpanSizeLookup()", "full_signature": "@NonNull public SpanSizeLookup getSpanSizeLookup()", "class_method_signature": "Component.getSpanSizeLookup()", "testcase": false, "constructor": false}, {"identifier": "setSpanSizeLookup", "parameters": "(@NonNull SpanSizeLookup lookup)", "modifiers": "public", "return": "void", "signature": "void setSpanSizeLookup(@NonNull SpanSizeLookup lookup)", "full_signature": "public void setSpanSizeLookup(@NonNull SpanSizeLookup lookup)", "class_method_signature": "Component.setSpanSizeLookup(@NonNull SpanSizeLookup lookup)", "testcase": false, "constructor": false}, {"identifier": "onItemsMoved", "parameters": "(int fromIndex, int toIndex)", "modifiers": "public", "return": "void", "signature": "void onItemsMoved(int fromIndex, int toIndex)", "full_signature": "public void onItemsMoved(int fromIndex, int toIndex)", "class_method_signature": "Component.onItemsMoved(int fromIndex, int toIndex)", "testcase": false, "constructor": false}, {"identifier": "canDropItem", "parameters": "(int fromIndex, int toIndex)", "modifiers": "public", "return": "boolean", "signature": "boolean canDropItem(int fromIndex, int toIndex)", "full_signature": "public boolean canDropItem(int fromIndex, int toIndex)", "class_method_signature": "Component.canDropItem(int fromIndex, int toIndex)", "testcase": false, "constructor": false}, {"identifier": "canPickUpItem", "parameters": "(int index)", "modifiers": "public", "return": "boolean", "signature": "boolean canPickUpItem(int index)", "full_signature": "public boolean canPickUpItem(int index)", "class_method_signature": "Component.canPickUpItem(int index)", "testcase": false, "constructor": false}, {"identifier": "getCountInternal", "parameters": "()", "modifiers": "protected final", "return": "int", "signature": "int getCountInternal()", "full_signature": "protected final int getCountInternal()", "class_method_signature": "Component.getCountInternal()", "testcase": false, "constructor": false}, {"identifier": "hasGap", "parameters": "(int position)", "modifiers": "protected", "return": "boolean", "signature": "boolean hasGap(int position)", "full_signature": "protected boolean hasGap(int position)", "class_method_signature": "Component.hasGap(int position)", "testcase": false, "constructor": false}, {"identifier": "getPositionOffset", "parameters": "()", "modifiers": "protected", "return": "int", "signature": "int getPositionOffset()", "full_signature": "protected int getPositionOffset()", "class_method_signature": "Component.getPositionOffset()", "testcase": false, "constructor": false}], "file": "bento/src/main/java/com/yelp/android/bento/core/Component.java"}, "focal_method": {"identifier": "getCount", "parameters": "()", "modifiers": "public abstract", "return": "int", "body": "public abstract int getCount();", "signature": "int getCount()", "full_signature": "public abstract int getCount()", "class_method_signature": "Component.getCount()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 181976854, "url": "https://github.com/Yelp/bento", "language": "Java", "is_fork": false, "fork_count": 24, "stargazer_count": 277, "size": 4887, "license": "licensed"}}