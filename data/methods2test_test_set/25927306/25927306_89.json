{"test_class": {"identifier": "PersistentSearchRequestControlTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/ldaptive/control/PersistentSearchRequestControlTest.java"}, "test_case": {"identifier": "encode", "parameters": "(final byte[] berValue, final PersistentSearchRequestControl expected)", "modifiers": "@Test(groups = \"control\", dataProvider = \"request\") public", "return": "void", "body": "@Test(groups = \"control\", dataProvider = \"request\")\n  public void encode(final byte[] berValue, final PersistentSearchRequestControl expected)\n    throws Exception\n  {\n    Assert.assertEquals(expected.encode(), berValue);\n  }", "signature": "void encode(final byte[] berValue, final PersistentSearchRequestControl expected)", "full_signature": "@Test(groups = \"control\", dataProvider = \"request\") public void encode(final byte[] berValue, final PersistentSearchRequestControl expected)", "class_method_signature": "PersistentSearchRequestControlTest.encode(final byte[] berValue, final PersistentSearchRequestControl expected)", "testcase": true, "constructor": false, "invocations": ["assertEquals", "encode"]}, "focal_class": {"identifier": "PersistentSearchRequestControl", "superclass": "extends AbstractControl", "interfaces": "implements RequestControl", "fields": [{"original_string": "public static final String OID = \"2.16.840.1.113730.3.4.3\";", "modifier": "public static final", "type": "String", "declarator": "OID = \"2.16.840.1.113730.3.4.3\"", "var_name": "OID"}, {"original_string": "private static final int HASH_CODE_SEED = 761;", "modifier": "private static final", "type": "int", "declarator": "HASH_CODE_SEED = 761", "var_name": "HASH_CODE_SEED"}, {"original_string": "private EnumSet<PersistentSearchChangeType> changeTypes;", "modifier": "private", "type": "EnumSet<PersistentSearchChangeType>", "declarator": "changeTypes", "var_name": "changeTypes"}, {"original_string": "private boolean changesOnly;", "modifier": "private", "type": "boolean", "declarator": "changesOnly", "var_name": "changesOnly"}, {"original_string": "private boolean returnEcs;", "modifier": "private", "type": "boolean", "declarator": "returnEcs", "var_name": "returnEcs"}], "methods": [{"identifier": "PersistentSearchRequestControl", "parameters": "()", "modifiers": "public", "return": "", "signature": " PersistentSearchRequestControl()", "full_signature": "public  PersistentSearchRequestControl()", "class_method_signature": "PersistentSearchRequestControl.PersistentSearchRequestControl()", "testcase": false, "constructor": true}, {"identifier": "PersistentSearchRequestControl", "parameters": "(final EnumSet<PersistentSearchChangeType> types)", "modifiers": "public", "return": "", "signature": " PersistentSearchRequestControl(final EnumSet<PersistentSearchChangeType> types)", "full_signature": "public  PersistentSearchRequestControl(final EnumSet<PersistentSearchChangeType> types)", "class_method_signature": "PersistentSearchRequestControl.PersistentSearchRequestControl(final EnumSet<PersistentSearchChangeType> types)", "testcase": false, "constructor": true}, {"identifier": "PersistentSearchRequestControl", "parameters": "(final EnumSet<PersistentSearchChangeType> types, final boolean critical)", "modifiers": "public", "return": "", "signature": " PersistentSearchRequestControl(final EnumSet<PersistentSearchChangeType> types, final boolean critical)", "full_signature": "public  PersistentSearchRequestControl(final EnumSet<PersistentSearchChangeType> types, final boolean critical)", "class_method_signature": "PersistentSearchRequestControl.PersistentSearchRequestControl(final EnumSet<PersistentSearchChangeType> types, final boolean critical)", "testcase": false, "constructor": true}, {"identifier": "PersistentSearchRequestControl", "parameters": "(\n    final EnumSet<PersistentSearchChangeType> types,\n    final boolean co,\n    final boolean re)", "modifiers": "public", "return": "", "signature": " PersistentSearchRequestControl(\n    final EnumSet<PersistentSearchChangeType> types,\n    final boolean co,\n    final boolean re)", "full_signature": "public  PersistentSearchRequestControl(\n    final EnumSet<PersistentSearchChangeType> types,\n    final boolean co,\n    final boolean re)", "class_method_signature": "PersistentSearchRequestControl.PersistentSearchRequestControl(\n    final EnumSet<PersistentSearchChangeType> types,\n    final boolean co,\n    final boolean re)", "testcase": false, "constructor": true}, {"identifier": "PersistentSearchRequestControl", "parameters": "(\n    final EnumSet<PersistentSearchChangeType> types,\n    final boolean co,\n    final boolean re,\n    final boolean critical)", "modifiers": "public", "return": "", "signature": " PersistentSearchRequestControl(\n    final EnumSet<PersistentSearchChangeType> types,\n    final boolean co,\n    final boolean re,\n    final boolean critical)", "full_signature": "public  PersistentSearchRequestControl(\n    final EnumSet<PersistentSearchChangeType> types,\n    final boolean co,\n    final boolean re,\n    final boolean critical)", "class_method_signature": "PersistentSearchRequestControl.PersistentSearchRequestControl(\n    final EnumSet<PersistentSearchChangeType> types,\n    final boolean co,\n    final boolean re,\n    final boolean critical)", "testcase": false, "constructor": true}, {"identifier": "hasValue", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasValue()", "full_signature": "@Override public boolean hasValue()", "class_method_signature": "PersistentSearchRequestControl.hasValue()", "testcase": false, "constructor": false}, {"identifier": "getChangeTypes", "parameters": "()", "modifiers": "public", "return": "EnumSet<PersistentSearchChangeType>", "signature": "EnumSet<PersistentSearchChangeType> getChangeTypes()", "full_signature": "public EnumSet<PersistentSearchChangeType> getChangeTypes()", "class_method_signature": "PersistentSearchRequestControl.getChangeTypes()", "testcase": false, "constructor": false}, {"identifier": "setChangeTypes", "parameters": "(final EnumSet<PersistentSearchChangeType> types)", "modifiers": "public", "return": "void", "signature": "void setChangeTypes(final EnumSet<PersistentSearchChangeType> types)", "full_signature": "public void setChangeTypes(final EnumSet<PersistentSearchChangeType> types)", "class_method_signature": "PersistentSearchRequestControl.setChangeTypes(final EnumSet<PersistentSearchChangeType> types)", "testcase": false, "constructor": false}, {"identifier": "getChangesOnly", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getChangesOnly()", "full_signature": "public boolean getChangesOnly()", "class_method_signature": "PersistentSearchRequestControl.getChangesOnly()", "testcase": false, "constructor": false}, {"identifier": "setChangesOnly", "parameters": "(final boolean b)", "modifiers": "public", "return": "void", "signature": "void setChangesOnly(final boolean b)", "full_signature": "public void setChangesOnly(final boolean b)", "class_method_signature": "PersistentSearchRequestControl.setChangesOnly(final boolean b)", "testcase": false, "constructor": false}, {"identifier": "getReturnEcs", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getReturnEcs()", "full_signature": "public boolean getReturnEcs()", "class_method_signature": "PersistentSearchRequestControl.getReturnEcs()", "testcase": false, "constructor": false}, {"identifier": "setReturnEcs", "parameters": "(final boolean b)", "modifiers": "public", "return": "void", "signature": "void setReturnEcs(final boolean b)", "full_signature": "public void setReturnEcs(final boolean b)", "class_method_signature": "PersistentSearchRequestControl.setReturnEcs(final boolean b)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "PersistentSearchRequestControl.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PersistentSearchRequestControl.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PersistentSearchRequestControl.toString()", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] encode()", "full_signature": "@Override public byte[] encode()", "class_method_signature": "PersistentSearchRequestControl.encode()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/ldaptive/control/PersistentSearchRequestControl.java"}, "focal_method": {"identifier": "encode", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "body": "@Override\n  public byte[] encode()\n  {\n    int types = 0;\n    for (PersistentSearchChangeType type : getChangeTypes()) {\n      types |= type.value();\n    }\n\n    final ConstructedDEREncoder se = new ConstructedDEREncoder(\n      UniversalDERTag.SEQ,\n      new IntegerType(types),\n      new BooleanType(getChangesOnly()),\n      new BooleanType(getReturnEcs()));\n    return se.encode();\n  }", "signature": "byte[] encode()", "full_signature": "@Override public byte[] encode()", "class_method_signature": "PersistentSearchRequestControl.encode()", "testcase": false, "constructor": false, "invocations": ["getChangeTypes", "value", "getChangesOnly", "getReturnEcs", "encode"]}, "repository": {"repo_id": 25927306, "url": "https://github.com/vt-middleware/ldaptive", "stars": 32, "created": "10/29/2014 3:27:31 PM +00:00", "updates": "2020-01-14T22:18:12+00:00", "fork": "False", "license": "licensed"}}