{"test_class": {"identifier": "OnErrorResumeWithStageFactoryTest", "superclass": "extends StageTestBase", "interfaces": "", "fields": [{"original_string": "private final OnErrorResumeStageFactory factory = new OnErrorResumeStageFactory();", "modifier": "private final", "type": "OnErrorResumeStageFactory", "declarator": "factory = new OnErrorResumeStageFactory()", "var_name": "factory"}], "file": "implementation/src/test/java/io/smallrye/reactive/streams/stages/OnErrorResumeWithStageFactoryTest.java"}, "test_case": {"identifier": "createWithoutFunction", "parameters": "()", "modifiers": "@Test(expected = NullPointerException.class) public", "return": "void", "body": "@Test(expected = NullPointerException.class)\n    public void createWithoutFunction() {\n        factory.create(null, () -> null);\n    }", "signature": "void createWithoutFunction()", "full_signature": "@Test(expected = NullPointerException.class) public void createWithoutFunction()", "class_method_signature": "OnErrorResumeWithStageFactoryTest.createWithoutFunction()", "testcase": true, "constructor": false, "invocations": ["create"]}, "focal_class": {"identifier": "OnErrorResumeWithStageFactory", "superclass": "", "interfaces": "implements ProcessingStageFactory<Stage.OnErrorResumeWith>", "fields": [], "methods": [{"identifier": "create", "parameters": "(Engine engine, Stage.OnErrorResumeWith stage)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "ProcessingStage<I, O>", "signature": "ProcessingStage<I, O> create(Engine engine, Stage.OnErrorResumeWith stage)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public ProcessingStage<I, O> create(Engine engine, Stage.OnErrorResumeWith stage)", "class_method_signature": "OnErrorResumeWithStageFactory.create(Engine engine, Stage.OnErrorResumeWith stage)", "testcase": false, "constructor": false}], "file": "implementation/src/main/java/io/smallrye/reactive/streams/stages/OnErrorResumeWithStageFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(Engine engine, Stage.OnErrorResumeWith stage)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "ProcessingStage<I, O>", "body": "@SuppressWarnings(\"unchecked\")\n    @Override\n    public <I, O> ProcessingStage<I, O> create(Engine engine, Stage.OnErrorResumeWith stage) {\n        Function<Throwable, Graph> function = Objects.requireNonNull(stage).getFunction();\n        Objects.requireNonNull(function);\n\n        return source -> (Flowable<O>) RxJavaPlugins.onAssembly(\n                new OnErrorResumeWith<>(source, (Throwable err) -> {\n                    Graph graph = function.apply(err);\n                    return Flowable.fromPublisher(\n                            Objects.requireNonNull(engine.buildPublisher(Objects.requireNonNull(graph))));\n                }));\n    }", "signature": "ProcessingStage<I, O> create(Engine engine, Stage.OnErrorResumeWith stage)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public ProcessingStage<I, O> create(Engine engine, Stage.OnErrorResumeWith stage)", "class_method_signature": "OnErrorResumeWithStageFactory.create(Engine engine, Stage.OnErrorResumeWith stage)", "testcase": false, "constructor": false, "invocations": ["getFunction", "requireNonNull", "requireNonNull", "onAssembly", "apply", "fromPublisher", "requireNonNull", "buildPublisher", "requireNonNull"]}, "repository": {"repo_id": 139009007, "url": "https://github.com/smallrye/smallrye-reactive-streams-operators", "stars": 14, "created": "6/28/2018 11:27:21 AM +00:00", "updates": "2020-01-20T06:48:19+00:00", "fork": "False", "license": "licensed"}}