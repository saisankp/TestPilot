{"test_class": {"identifier": "PrivateKeyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private byte[] seed1 = new byte[32];", "modifier": "private", "type": "byte[]", "declarator": "seed1 = new byte[32]", "var_name": "seed1"}, {"original_string": "private byte[] seed2 = new byte[57];", "modifier": "private", "type": "byte[]", "declarator": "seed2 = new byte[57]", "var_name": "seed2"}], "file": "eddsa/src/test/java/io/moatwel/crypto/PrivateKeyTest.java"}, "test_case": {"identifier": "failure_GeneratePrivateKey", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void failure_GeneratePrivateKey() {\n        PrivateKey.newInstance(new byte[56]);\n        PrivateKey.newInstance(new byte[31]);\n    }", "signature": "void failure_GeneratePrivateKey()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void failure_GeneratePrivateKey()", "class_method_signature": "PrivateKeyTest.failure_GeneratePrivateKey()", "testcase": true, "constructor": false, "invocations": ["newInstance", "newInstance"]}, "focal_class": {"identifier": "PrivateKey", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected final byte[] value;", "modifier": "protected final", "type": "byte[]", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "PrivateKey", "parameters": "(byte[] value)", "modifiers": "protected", "return": "", "signature": " PrivateKey(byte[] value)", "full_signature": "protected  PrivateKey(byte[] value)", "class_method_signature": "PrivateKey.PrivateKey(byte[] value)", "testcase": false, "constructor": true}, {"identifier": "newInstance", "parameters": "(byte[] seed)", "modifiers": "public static", "return": "PrivateKey", "signature": "PrivateKey newInstance(byte[] seed)", "full_signature": "public static PrivateKey newInstance(byte[] seed)", "class_method_signature": "PrivateKey.newInstance(byte[] seed)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(String hexString)", "modifiers": "public static", "return": "PrivateKey", "signature": "PrivateKey newInstance(String hexString)", "full_signature": "public static PrivateKey newInstance(String hexString)", "class_method_signature": "PrivateKey.newInstance(String hexString)", "testcase": false, "constructor": false}, {"identifier": "getScalarSeed", "parameters": "(HashDelegate hashDelegate)", "modifiers": "public abstract", "return": "BigInteger", "signature": "BigInteger getScalarSeed(HashDelegate hashDelegate)", "full_signature": "public abstract BigInteger getScalarSeed(HashDelegate hashDelegate)", "class_method_signature": "PrivateKey.getScalarSeed(HashDelegate hashDelegate)", "testcase": false, "constructor": false}, {"identifier": "getRaw", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getRaw()", "full_signature": "public byte[] getRaw()", "class_method_signature": "PrivateKey.getRaw()", "testcase": false, "constructor": false}, {"identifier": "getInteger", "parameters": "()", "modifiers": "public", "return": "BigInteger", "signature": "BigInteger getInteger()", "full_signature": "public BigInteger getInteger()", "class_method_signature": "PrivateKey.getInteger()", "testcase": false, "constructor": false}, {"identifier": "getHexString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getHexString()", "full_signature": "public String getHexString()", "class_method_signature": "PrivateKey.getHexString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PrivateKey.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object obj)", "full_signature": "@Override public boolean equals(final Object obj)", "class_method_signature": "PrivateKey.equals(final Object obj)", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/crypto/PrivateKey.java"}, "focal_method": {"identifier": "newInstance", "parameters": "(byte[] seed)", "modifiers": "public static", "return": "PrivateKey", "body": "public static PrivateKey newInstance(byte[] seed) {\n        switch (seed.length) {\n            case 32:\n                return PrivateKeyEd25519.fromBytes(seed);\n            case 57:\n                return PrivateKeyEd448.fromBytes(seed);\n            default:\n                throw new IllegalArgumentException(\"PrivateKey byte length \" + seed.length + \" is not supported.\");\n        }\n    }", "signature": "PrivateKey newInstance(byte[] seed)", "full_signature": "public static PrivateKey newInstance(byte[] seed)", "class_method_signature": "PrivateKey.newInstance(byte[] seed)", "testcase": false, "constructor": false, "invocations": ["fromBytes", "fromBytes"]}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}