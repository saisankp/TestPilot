{"test_class": {"identifier": "DynamoDBManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    public AmazonDynamoDB dynamoDB = PowerMock.createMock(AmazonDynamoDB.class);", "modifier": "@Mock\n    public", "type": "AmazonDynamoDB", "declarator": "dynamoDB = PowerMock.createMock(AmazonDynamoDB.class)", "var_name": "dynamoDB"}, {"original_string": "static final String tableName = \"table\";", "modifier": "static final", "type": "String", "declarator": "tableName = \"table\"", "var_name": "tableName"}], "file": "ingester/src/test/java/com/amazonaws/services/dynamodbv2/json/demo/mars/util/DynamoDBManagerTest.java"}, "test_case": {"identifier": "testWaitForTableToBecomeActiveDeleting", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n    public void testWaitForTableToBecomeActiveDeleting() {\n        final TableDescription table = new TableDescription().withTableStatus(TableStatus.DELETING);\n        final DescribeTableResult result = new DescribeTableResult().withTable(table);\n        PowerMock.expectLastCall().andReturn(result);\n        PowerMock.replayAll();\n        DynamoDBManager.waitForTableToBecomeActive(dynamoDB, tableName);\n    }", "signature": "void testWaitForTableToBecomeActiveDeleting()", "full_signature": "@Test(expected = IllegalStateException.class) public void testWaitForTableToBecomeActiveDeleting()", "class_method_signature": "DynamoDBManagerTest.testWaitForTableToBecomeActiveDeleting()", "testcase": true, "constructor": false, "invocations": ["withTableStatus", "withTable", "andReturn", "expectLastCall", "replayAll", "waitForTableToBecomeActive"]}, "focal_class": {"identifier": "DynamoDBManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(DynamoDBManager.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(DynamoDBManager.class.getName())", "var_name": "LOGGER"}, {"original_string": "private static final long RETRY_DELAY = 20 * 1000;", "modifier": "private static final", "type": "long", "declarator": "RETRY_DELAY = 20 * 1000", "var_name": "RETRY_DELAY"}, {"original_string": "private static final int RETRY_COUNT = 3;", "modifier": "private static final", "type": "int", "declarator": "RETRY_COUNT = 3", "var_name": "RETRY_COUNT"}], "methods": [{"identifier": "createTable", "parameters": "(final AmazonDynamoDB dynamoDB, final CreateTableRequest request)", "modifiers": "public static", "return": "TableDescription", "signature": "TableDescription createTable(final AmazonDynamoDB dynamoDB, final CreateTableRequest request)", "full_signature": "public static TableDescription createTable(final AmazonDynamoDB dynamoDB, final CreateTableRequest request)", "class_method_signature": "DynamoDBManager.createTable(final AmazonDynamoDB dynamoDB, final CreateTableRequest request)", "testcase": false, "constructor": false}, {"identifier": "doesTableExist", "parameters": "(final AmazonDynamoDB dynamoDB, final String tableName)", "modifiers": "public static", "return": "boolean", "signature": "boolean doesTableExist(final AmazonDynamoDB dynamoDB, final String tableName)", "full_signature": "public static boolean doesTableExist(final AmazonDynamoDB dynamoDB, final String tableName)", "class_method_signature": "DynamoDBManager.doesTableExist(final AmazonDynamoDB dynamoDB, final String tableName)", "testcase": false, "constructor": false}, {"identifier": "getTableStatus", "parameters": "(final AmazonDynamoDB dynamoDB, final String tableName)", "modifiers": "public static", "return": "TableStatus", "signature": "TableStatus getTableStatus(final AmazonDynamoDB dynamoDB, final String tableName)", "full_signature": "public static TableStatus getTableStatus(final AmazonDynamoDB dynamoDB, final String tableName)", "class_method_signature": "DynamoDBManager.getTableStatus(final AmazonDynamoDB dynamoDB, final String tableName)", "testcase": false, "constructor": false}, {"identifier": "waitForTableToBecomeActive", "parameters": "(final AmazonDynamoDB dynamoDB, final String tableName)", "modifiers": "public static", "return": "void", "signature": "void waitForTableToBecomeActive(final AmazonDynamoDB dynamoDB, final String tableName)", "full_signature": "public static void waitForTableToBecomeActive(final AmazonDynamoDB dynamoDB, final String tableName)", "class_method_signature": "DynamoDBManager.waitForTableToBecomeActive(final AmazonDynamoDB dynamoDB, final String tableName)", "testcase": false, "constructor": false}, {"identifier": "DynamoDBManager", "parameters": "()", "modifiers": "private", "return": "", "signature": " DynamoDBManager()", "full_signature": "private  DynamoDBManager()", "class_method_signature": "DynamoDBManager.DynamoDBManager()", "testcase": false, "constructor": true}], "file": "ingester/src/main/java/com/amazonaws/services/dynamodbv2/json/demo/mars/util/DynamoDBManager.java"}, "focal_method": {"identifier": "waitForTableToBecomeActive", "parameters": "(final AmazonDynamoDB dynamoDB, final String tableName)", "modifiers": "public static", "return": "void", "body": "public static void waitForTableToBecomeActive(final AmazonDynamoDB dynamoDB, final String tableName) {\n        int numTries = 0;\n        TableStatus currentState;\n        try {\n            currentState = getTableStatus(dynamoDB, tableName);\n        } catch (final ResourceNotFoundException e) {\n            throw new IllegalStateException(\"Table \" + tableName + \" does not exist\");\n        }\n        while (numTries < RETRY_COUNT) {\n            try {\n                Thread.sleep(RETRY_DELAY);\n            } catch (final InterruptedException e) {\n                LOGGER.severe(e.getMessage());\n            }\n            currentState = getTableStatus(dynamoDB, tableName);\n            numTries++;\n            LOGGER.info(\"Table \" + tableName + \" is in \" + currentState + \" state\");\n            switch (currentState) {\n                case ACTIVE:\n                    return;\n                case DELETING:\n                    throw new IllegalStateException(\"Table \" + tableName\n                        + \" has DELETING status and will never become active\");\n                case UPDATING:\n                    break;\n                case CREATING:\n                    break;\n                default:\n                    throw new IllegalStateException(\"Unknown table status: \" + currentState);\n            }\n        }\n\n        final DescribeTableResult result = dynamoDB.describeTable(tableName);\n        throw new IllegalStateException(\"Table \" + tableName + \" never went ACTIVE\" + result);\n    }", "signature": "void waitForTableToBecomeActive(final AmazonDynamoDB dynamoDB, final String tableName)", "full_signature": "public static void waitForTableToBecomeActive(final AmazonDynamoDB dynamoDB, final String tableName)", "class_method_signature": "DynamoDBManager.waitForTableToBecomeActive(final AmazonDynamoDB dynamoDB, final String tableName)", "testcase": false, "constructor": false, "invocations": ["getTableStatus", "sleep", "severe", "getMessage", "getTableStatus", "info", "describeTable"]}, "repository": {"repo_id": 24917019, "url": "https://github.com/aws-samples/aws-dynamodb-mars-json-demo", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 48, "size": 1648, "license": "licensed"}}