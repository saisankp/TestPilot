{"test_class": {"identifier": "ElasticsearchUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long TEST_CURRENT_TIME = 1428151913000L;", "modifier": "private static final", "type": "long", "declarator": "TEST_CURRENT_TIME = 1428151913000L", "var_name": "TEST_CURRENT_TIME"}, {"original_string": "@Rule\n    public TestWatcher tzRule = new TestWatcher() {\n\n        private DateTimeZone defaultTz = DateTimeZone.getDefault();\n\n        @Override\n        protected void starting(Description description) {\n            DateTimeZone.setDefault(DateTimeZone.forOffsetHoursMinutes(5, 30));\n        }\n\n        @Override\n        protected void finished(Description description) {\n            DateTimeZone.setDefault(defaultTz);\n        }\n    };", "modifier": "@Rule\n    public", "type": "TestWatcher", "declarator": "tzRule = new TestWatcher() {\n\n        private DateTimeZone defaultTz = DateTimeZone.getDefault();\n\n        @Override\n        protected void starting(Description description) {\n            DateTimeZone.setDefault(DateTimeZone.forOffsetHoursMinutes(5, 30));\n        }\n\n        @Override\n        protected void finished(Description description) {\n            DateTimeZone.setDefault(defaultTz);\n        }\n    }", "var_name": "tzRule"}], "file": "real-time/foxtrot/foxtrot-core/src/test/java/com/flipkart/foxtrot/core/querystore/impl/ElasticsearchUtilsTest.java"}, "test_case": {"identifier": "testGetIndicesLastLastDays", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetIndicesLastLastDays() throws Exception {\n        TestRequest request = new TestRequest();\n        LastFilter filter = new LastFilter();\n        filter.setDuration(Duration.days(2));\n        filter.setCurrentTime(TEST_CURRENT_TIME);\n        request.setFilters(Collections.<Filter>singletonList(filter));\n        String indexes[] = ElasticsearchUtils.getIndices(\"test\", request,\n                new PeriodSelector(request.getFilters()).analyze(TEST_CURRENT_TIME));\n        System.out.println(Arrays.toString(indexes));\n        Assert.assertArrayEquals(new String[]{\n                                            \"foxtrot-test-table-02-4-2015\",\n                                            \"foxtrot-test-table-03-4-2015\",\n                                            \"foxtrot-test-table-04-4-2015\"}, indexes);\n    }", "signature": "void testGetIndicesLastLastDays()", "full_signature": "@Test public void testGetIndicesLastLastDays()", "class_method_signature": "ElasticsearchUtilsTest.testGetIndicesLastLastDays()", "testcase": true, "constructor": false, "invocations": ["setDuration", "days", "setCurrentTime", "setFilters", "singletonList", "getIndices", "analyze", "getFilters", "println", "toString", "assertArrayEquals"]}, "focal_class": {"identifier": "ElasticsearchUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ElasticsearchUtils.class.getSimpleName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ElasticsearchUtils.class.getSimpleName())", "var_name": "logger"}, {"original_string": "public static final String TYPE_NAME = \"document\";", "modifier": "public static final", "type": "String", "declarator": "TYPE_NAME = \"document\"", "var_name": "TYPE_NAME"}, {"original_string": "public static final String TABLENAME_PREFIX = \"foxtrot\";", "modifier": "public static final", "type": "String", "declarator": "TABLENAME_PREFIX = \"foxtrot\"", "var_name": "TABLENAME_PREFIX"}, {"original_string": "public static final String TABLENAME_POSTFIX = \"table\";", "modifier": "public static final", "type": "String", "declarator": "TABLENAME_POSTFIX = \"table\"", "var_name": "TABLENAME_POSTFIX"}, {"original_string": "private static final DateTimeFormatter FORMATTER = DateTimeFormat.forPattern(\"dd-M-yyyy\");", "modifier": "private static final", "type": "DateTimeFormatter", "declarator": "FORMATTER = DateTimeFormat.forPattern(\"dd-M-yyyy\")", "var_name": "FORMATTER"}, {"original_string": "public static final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormat.forPattern(\"dd-M-yyyy\");", "modifier": "public static final", "type": "DateTimeFormatter", "declarator": "DATE_TIME_FORMATTER = DateTimeFormat.forPattern(\"dd-M-yyyy\")", "var_name": "DATE_TIME_FORMATTER"}, {"original_string": "private static ObjectMapper mapper;", "modifier": "private static", "type": "ObjectMapper", "declarator": "mapper", "var_name": "mapper"}], "methods": [{"identifier": "setMapper", "parameters": "(ObjectMapper mapper)", "modifiers": "public static", "return": "void", "signature": "void setMapper(ObjectMapper mapper)", "full_signature": "public static void setMapper(ObjectMapper mapper)", "class_method_signature": "ElasticsearchUtils.setMapper(ObjectMapper mapper)", "testcase": false, "constructor": false}, {"identifier": "getMapper", "parameters": "()", "modifiers": "public static", "return": "ObjectMapper", "signature": "ObjectMapper getMapper()", "full_signature": "public static ObjectMapper getMapper()", "class_method_signature": "ElasticsearchUtils.getMapper()", "testcase": false, "constructor": false}, {"identifier": "getIndexPrefix", "parameters": "(final String table)", "modifiers": "public static", "return": "String", "signature": "String getIndexPrefix(final String table)", "full_signature": "public static String getIndexPrefix(final String table)", "class_method_signature": "ElasticsearchUtils.getIndexPrefix(final String table)", "testcase": false, "constructor": false}, {"identifier": "getIndices", "parameters": "(final String table)", "modifiers": "public static", "return": "String[]", "signature": "String[] getIndices(final String table)", "full_signature": "public static String[] getIndices(final String table)", "class_method_signature": "ElasticsearchUtils.getIndices(final String table)", "testcase": false, "constructor": false}, {"identifier": "getIndices", "parameters": "(final String table, final ActionRequest request)", "modifiers": "public static", "return": "String[]", "signature": "String[] getIndices(final String table, final ActionRequest request)", "full_signature": "public static String[] getIndices(final String table, final ActionRequest request)", "class_method_signature": "ElasticsearchUtils.getIndices(final String table, final ActionRequest request)", "testcase": false, "constructor": false}, {"identifier": "getIndices", "parameters": "(final String table, final ActionRequest request, final Interval interval)", "modifiers": "@VisibleForTesting public static", "return": "String[]", "signature": "String[] getIndices(final String table, final ActionRequest request, final Interval interval)", "full_signature": "@VisibleForTesting public static String[] getIndices(final String table, final ActionRequest request, final Interval interval)", "class_method_signature": "ElasticsearchUtils.getIndices(final String table, final ActionRequest request, final Interval interval)", "testcase": false, "constructor": false}, {"identifier": "getCurrentIndex", "parameters": "(final String table, long timestamp)", "modifiers": "public static", "return": "String", "signature": "String getCurrentIndex(final String table, long timestamp)", "full_signature": "public static String getCurrentIndex(final String table, long timestamp)", "class_method_signature": "ElasticsearchUtils.getCurrentIndex(final String table, long timestamp)", "testcase": false, "constructor": false}, {"identifier": "getClusterTemplateMapping", "parameters": "(IndicesAdminClient indicesAdminClient)", "modifiers": "public static", "return": "PutIndexTemplateRequest", "signature": "PutIndexTemplateRequest getClusterTemplateMapping(IndicesAdminClient indicesAdminClient)", "full_signature": "public static PutIndexTemplateRequest getClusterTemplateMapping(IndicesAdminClient indicesAdminClient)", "class_method_signature": "ElasticsearchUtils.getClusterTemplateMapping(IndicesAdminClient indicesAdminClient)", "testcase": false, "constructor": false}, {"identifier": "initializeMappings", "parameters": "(Client client)", "modifiers": "public static", "return": "void", "signature": "void initializeMappings(Client client)", "full_signature": "public static void initializeMappings(Client client)", "class_method_signature": "ElasticsearchUtils.initializeMappings(Client client)", "testcase": false, "constructor": false}, {"identifier": "getValidTableName", "parameters": "(String table)", "modifiers": "public static", "return": "String", "signature": "String getValidTableName(String table)", "full_signature": "public static String getValidTableName(String table)", "class_method_signature": "ElasticsearchUtils.getValidTableName(String table)", "testcase": false, "constructor": false}, {"identifier": "isIndexValidForTable", "parameters": "(String index, String table)", "modifiers": "public static", "return": "boolean", "signature": "boolean isIndexValidForTable(String index, String table)", "full_signature": "public static boolean isIndexValidForTable(String index, String table)", "class_method_signature": "ElasticsearchUtils.isIndexValidForTable(String index, String table)", "testcase": false, "constructor": false}, {"identifier": "isIndexEligibleForDeletion", "parameters": "(String index, Table table)", "modifiers": "public static", "return": "boolean", "signature": "boolean isIndexEligibleForDeletion(String index, Table table)", "full_signature": "public static boolean isIndexEligibleForDeletion(String index, Table table)", "class_method_signature": "ElasticsearchUtils.isIndexEligibleForDeletion(String index, Table table)", "testcase": false, "constructor": false}, {"identifier": "getTableNameFromIndex", "parameters": "(String currentIndex)", "modifiers": "public static", "return": "String", "signature": "String getTableNameFromIndex(String currentIndex)", "full_signature": "public static String getTableNameFromIndex(String currentIndex)", "class_method_signature": "ElasticsearchUtils.getTableNameFromIndex(String currentIndex)", "testcase": false, "constructor": false}], "file": "real-time/foxtrot/foxtrot-core/src/main/java/com/flipkart/foxtrot/core/querystore/impl/ElasticsearchUtils.java"}, "focal_method": {"identifier": "getIndices", "parameters": "(final String table)", "modifiers": "public static", "return": "String[]", "body": "public static String[] getIndices(final String table) {\n        /*long currentTime = new Date().getTime();\n        String names[] = new String[30]; //TODO::USE TABLE METADATA\n        for(int i = 0 ; i < 30; i++) {\n            String postfix = new SimpleDateFormat(\"dd-M-yyyy\").format(new Date(currentTime));\n            names[i] = String.format(\"%s-%s-%s\", TABLENAME_PREFIX, table, postfix);\n        }*/\n        return new String[]{String.format(\"%s-%s-%s-*\",\n                ElasticsearchUtils.TABLENAME_PREFIX, table, ElasticsearchUtils.TABLENAME_POSTFIX)};\n    }", "signature": "String[] getIndices(final String table)", "full_signature": "public static String[] getIndices(final String table)", "class_method_signature": "ElasticsearchUtils.getIndices(final String table)", "testcase": false, "constructor": false, "invocations": ["format"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}