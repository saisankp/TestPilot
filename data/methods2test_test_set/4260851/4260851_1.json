{"test_class": {"identifier": "DbSetupTest", "superclass": "", "interfaces": "", "fields": [], "file": "DbSetup-core/src/test/java/com/ninja_squad/dbsetup/DbSetupTest.java"}, "test_case": {"identifier": "launchWorksWithCustomConfiguration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void launchWorksWithCustomConfiguration() throws SQLException {\n        Destination destination = mock(Destination.class);\n        Connection connection = mock(Connection.class);\n        when(destination.getConnection()).thenReturn(connection);\n        Operation operation = mock(Operation.class);\n        BinderConfiguration config = mock(BinderConfiguration.class);\n\n        DbSetup setup = new DbSetup(destination, operation, config);\n        setup.launch();\n        InOrder inOrder = inOrder(destination, connection, operation);\n        inOrder.verify(destination).getConnection();\n        inOrder.verify(operation).execute(connection, config);\n        inOrder.verify(connection).commit();\n    }", "signature": "void launchWorksWithCustomConfiguration()", "full_signature": "@Test public void launchWorksWithCustomConfiguration()", "class_method_signature": "DbSetupTest.launchWorksWithCustomConfiguration()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getConnection", "mock", "mock", "launch", "inOrder", "getConnection", "verify", "execute", "verify", "commit", "verify"]}, "focal_class": {"identifier": "DbSetup", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Destination destination;", "modifier": "private final", "type": "Destination", "declarator": "destination", "var_name": "destination"}, {"original_string": "private final Operation operation;", "modifier": "private final", "type": "Operation", "declarator": "operation", "var_name": "operation"}, {"original_string": "private final BinderConfiguration binderConfiguration;", "modifier": "private final", "type": "BinderConfiguration", "declarator": "binderConfiguration", "var_name": "binderConfiguration"}], "methods": [{"identifier": "DbSetup", "parameters": "(@Nonnull Destination destination, @Nonnull Operation operation)", "modifiers": "public", "return": "", "signature": " DbSetup(@Nonnull Destination destination, @Nonnull Operation operation)", "full_signature": "public  DbSetup(@Nonnull Destination destination, @Nonnull Operation operation)", "class_method_signature": "DbSetup.DbSetup(@Nonnull Destination destination, @Nonnull Operation operation)", "testcase": false, "constructor": true}, {"identifier": "DbSetup", "parameters": "(@Nonnull Destination destination,\n                   @Nonnull Operation operation,\n                   @Nonnull BinderConfiguration binderConfiguration)", "modifiers": "public", "return": "", "signature": " DbSetup(@Nonnull Destination destination,\n                   @Nonnull Operation operation,\n                   @Nonnull BinderConfiguration binderConfiguration)", "full_signature": "public  DbSetup(@Nonnull Destination destination,\n                   @Nonnull Operation operation,\n                   @Nonnull BinderConfiguration binderConfiguration)", "class_method_signature": "DbSetup.DbSetup(@Nonnull Destination destination,\n                   @Nonnull Operation operation,\n                   @Nonnull BinderConfiguration binderConfiguration)", "testcase": false, "constructor": true}, {"identifier": "launch", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void launch()", "full_signature": "public void launch()", "class_method_signature": "DbSetup.launch()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DbSetup.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DbSetup.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "DbSetup.equals(Object obj)", "testcase": false, "constructor": false}], "file": "DbSetup-core/src/main/java/com/ninja_squad/dbsetup/DbSetup.java"}, "focal_method": {"identifier": "launch", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void launch() {\n        try {\n            Connection connection = destination.getConnection();\n            try {\n                connection.setAutoCommit(false);\n                operation.execute(connection, binderConfiguration);\n                connection.commit();\n            }\n            catch (SQLException e) {\n                connection.rollback();\n                throw e;\n            }\n            catch (RuntimeException e) {\n                connection.rollback();\n                throw e;\n            }\n            finally {\n                connection.close();\n            }\n        }\n        catch (SQLException e) {\n            throw new DbSetupRuntimeException(e);\n        }\n    }", "signature": "void launch()", "full_signature": "public void launch()", "class_method_signature": "DbSetup.launch()", "testcase": false, "constructor": false, "invocations": ["getConnection", "setAutoCommit", "execute", "commit", "rollback", "rollback", "close"]}, "repository": {"repo_id": 4260851, "url": "https://github.com/Ninja-Squad/DbSetup", "language": "Java", "is_fork": false, "fork_count": 30, "stargazer_count": 183, "size": 1379, "license": "licensed"}}