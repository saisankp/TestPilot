{"test_class": {"identifier": "StatisticsTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-monitor/dubbo-monitor-default/src/test/java/org/apache/dubbo/monitor/dubbo/StatisticsTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToString() {\n        Statistics statistics = new Statistics(new URL(\"dubbo\", \"10.20.153.10\", 0));\n        statistics.setApplication(\"demo\");\n        statistics.setMethod(\"findPerson\");\n        statistics.setServer(\"10.20.153.10\");\n        statistics.setGroup(\"unit-test\");\n        statistics.setService(\"MemberService\");\n        assertThat(statistics.toString(), is(\"dubbo://10.20.153.10\"));\n\n        Statistics statisticsWithDetailInfo = new Statistics(new URLBuilder(DUBBO_PROTOCOL, \"10.20.153.10\", 0)\n                .addParameter(MonitorService.APPLICATION, \"morgan\")\n                .addParameter(MonitorService.INTERFACE, \"MemberService\")\n                .addParameter(MonitorService.METHOD, \"findPerson\")\n                .addParameter(MonitorService.CONSUMER, \"10.20.153.11\")\n                .addParameter(MonitorService.GROUP, \"unit-test\")\n                .addParameter(MonitorService.SUCCESS, 1)\n                .addParameter(MonitorService.FAILURE, 0)\n                .addParameter(MonitorService.ELAPSED, 3)\n                .addParameter(MonitorService.MAX_ELAPSED, 3)\n                .addParameter(MonitorService.CONCURRENT, 1)\n                .addParameter(MonitorService.MAX_CONCURRENT, 1)\n                .build());\n\n        MatcherAssert.assertThat(statisticsWithDetailInfo.getServer(), equalTo(statistics.getServer()));\n        MatcherAssert.assertThat(statisticsWithDetailInfo.getService(), equalTo(statistics.getService()));\n        MatcherAssert.assertThat(statisticsWithDetailInfo.getMethod(), equalTo(statistics.getMethod()));\n\n        MatcherAssert.assertThat(statisticsWithDetailInfo.getGroup(), equalTo(statistics.getGroup()));\n        MatcherAssert.assertThat(statisticsWithDetailInfo, not(equalTo(statistics)));\n    }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "StatisticsTest.testToString()", "testcase": true, "constructor": false, "invocations": ["setApplication", "setMethod", "setServer", "setGroup", "setService", "assertThat", "toString", "is", "build", "addParameter", "addParameter", "addParameter", "addParameter", "addParameter", "addParameter", "addParameter", "addParameter", "addParameter", "addParameter", "addParameter", "assertThat", "getServer", "equalTo", "getServer", "assertThat", "getService", "equalTo", "getService", "assertThat", "getMethod", "equalTo", "getMethod", "assertThat", "getGroup", "equalTo", "getGroup", "assertThat", "not", "equalTo"]}, "focal_class": {"identifier": "Statistics", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -6921183057683641441L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -6921183057683641441L", "var_name": "serialVersionUID"}, {"original_string": "private URL url;", "modifier": "private", "type": "URL", "declarator": "url", "var_name": "url"}, {"original_string": "private String application;", "modifier": "private", "type": "String", "declarator": "application", "var_name": "application"}, {"original_string": "private String service;", "modifier": "private", "type": "String", "declarator": "service", "var_name": "service"}, {"original_string": "private String method;", "modifier": "private", "type": "String", "declarator": "method", "var_name": "method"}, {"original_string": "private String group;", "modifier": "private", "type": "String", "declarator": "group", "var_name": "group"}, {"original_string": "private String version;", "modifier": "private", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "private String client;", "modifier": "private", "type": "String", "declarator": "client", "var_name": "client"}, {"original_string": "private String server;", "modifier": "private", "type": "String", "declarator": "server", "var_name": "server"}], "methods": [{"identifier": "Statistics", "parameters": "(URL url)", "modifiers": "public", "return": "", "signature": " Statistics(URL url)", "full_signature": "public  Statistics(URL url)", "class_method_signature": "Statistics.Statistics(URL url)", "testcase": false, "constructor": true}, {"identifier": "getUrl", "parameters": "()", "modifiers": "public", "return": "URL", "signature": "URL getUrl()", "full_signature": "public URL getUrl()", "class_method_signature": "Statistics.getUrl()", "testcase": false, "constructor": false}, {"identifier": "setUrl", "parameters": "(URL url)", "modifiers": "public", "return": "void", "signature": "void setUrl(URL url)", "full_signature": "public void setUrl(URL url)", "class_method_signature": "Statistics.setUrl(URL url)", "testcase": false, "constructor": false}, {"identifier": "getApplication", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getApplication()", "full_signature": "public String getApplication()", "class_method_signature": "Statistics.getApplication()", "testcase": false, "constructor": false}, {"identifier": "setApplication", "parameters": "(String application)", "modifiers": "public", "return": "Statistics", "signature": "Statistics setApplication(String application)", "full_signature": "public Statistics setApplication(String application)", "class_method_signature": "Statistics.setApplication(String application)", "testcase": false, "constructor": false}, {"identifier": "getService", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getService()", "full_signature": "public String getService()", "class_method_signature": "Statistics.getService()", "testcase": false, "constructor": false}, {"identifier": "setService", "parameters": "(String service)", "modifiers": "public", "return": "Statistics", "signature": "Statistics setService(String service)", "full_signature": "public Statistics setService(String service)", "class_method_signature": "Statistics.setService(String service)", "testcase": false, "constructor": false}, {"identifier": "getGroup", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getGroup()", "full_signature": "public String getGroup()", "class_method_signature": "Statistics.getGroup()", "testcase": false, "constructor": false}, {"identifier": "setGroup", "parameters": "(String group)", "modifiers": "public", "return": "void", "signature": "void setGroup(String group)", "full_signature": "public void setGroup(String group)", "class_method_signature": "Statistics.setGroup(String group)", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "Statistics.getVersion()", "testcase": false, "constructor": false}, {"identifier": "setVersion", "parameters": "(String version)", "modifiers": "public", "return": "void", "signature": "void setVersion(String version)", "full_signature": "public void setVersion(String version)", "class_method_signature": "Statistics.setVersion(String version)", "testcase": false, "constructor": false}, {"identifier": "getMethod", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMethod()", "full_signature": "public String getMethod()", "class_method_signature": "Statistics.getMethod()", "testcase": false, "constructor": false}, {"identifier": "setMethod", "parameters": "(String method)", "modifiers": "public", "return": "Statistics", "signature": "Statistics setMethod(String method)", "full_signature": "public Statistics setMethod(String method)", "class_method_signature": "Statistics.setMethod(String method)", "testcase": false, "constructor": false}, {"identifier": "getClient", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClient()", "full_signature": "public String getClient()", "class_method_signature": "Statistics.getClient()", "testcase": false, "constructor": false}, {"identifier": "setClient", "parameters": "(String client)", "modifiers": "public", "return": "Statistics", "signature": "Statistics setClient(String client)", "full_signature": "public Statistics setClient(String client)", "class_method_signature": "Statistics.setClient(String client)", "testcase": false, "constructor": false}, {"identifier": "getServer", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getServer()", "full_signature": "public String getServer()", "class_method_signature": "Statistics.getServer()", "testcase": false, "constructor": false}, {"identifier": "setServer", "parameters": "(String server)", "modifiers": "public", "return": "Statistics", "signature": "Statistics setServer(String server)", "full_signature": "public Statistics setServer(String server)", "class_method_signature": "Statistics.setServer(String server)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Statistics.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Statistics.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Statistics.toString()", "testcase": false, "constructor": false}], "file": "dubbo-monitor/dubbo-monitor-default/src/main/java/org/apache/dubbo/monitor/dubbo/Statistics.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        return url.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Statistics.toString()", "testcase": false, "constructor": false, "invocations": ["toString"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}