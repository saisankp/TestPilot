{"test_class": {"identifier": "IndexOfFunctionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IndexOfFunction indexOfFunction;", "modifier": "private", "type": "IndexOfFunction", "declarator": "indexOfFunction", "var_name": "indexOfFunction"}], "file": "kie-dmn/kie-dmn-feel/src/test/java/org/kie/dmn/feel/runtime/functions/IndexOfFunctionTest.java"}, "test_case": {"identifier": "invokeBigDecimal", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void invokeBigDecimal() {\n        FunctionTestUtil.assertResult(indexOfFunction.invoke(Arrays.asList(\"test\", null, 12), BigDecimal.valueOf(12)), Collections.emptyList());\n        FunctionTestUtil.assertResult(\n                indexOfFunction.invoke(Arrays.asList(\"test\", null, BigDecimal.valueOf(12)), BigDecimal.valueOf(12)),\n                Collections.singletonList(BigDecimal.valueOf(3)));\n        FunctionTestUtil.assertResult(\n                indexOfFunction.invoke(\n                        Arrays.asList(\"test\", null, BigDecimal.valueOf(12)),\n                        BigDecimal.valueOf(12).setScale(4, BigDecimal.ROUND_HALF_UP)),\n                Collections.singletonList(BigDecimal.valueOf(3)));\n        FunctionTestUtil.assertResult(\n                indexOfFunction.invoke(\n                        Arrays.asList(BigDecimal.valueOf(12.00), \"test\", null, BigDecimal.valueOf(12)),\n                        BigDecimal.valueOf(12)),\n                Arrays.asList(BigDecimal.valueOf(1), BigDecimal.valueOf(4)));\n    }", "signature": "void invokeBigDecimal()", "full_signature": "@Test public void invokeBigDecimal()", "class_method_signature": "IndexOfFunctionTest.invokeBigDecimal()", "testcase": true, "constructor": false, "invocations": ["assertResult", "invoke", "asList", "valueOf", "emptyList", "assertResult", "invoke", "asList", "valueOf", "valueOf", "singletonList", "valueOf", "assertResult", "invoke", "asList", "valueOf", "setScale", "valueOf", "singletonList", "valueOf", "assertResult", "invoke", "asList", "valueOf", "valueOf", "valueOf", "asList", "valueOf", "valueOf"]}, "focal_class": {"identifier": "IndexOfFunction", "superclass": "extends BaseFEELFunction", "interfaces": "", "fields": [], "methods": [{"identifier": "IndexOfFunction", "parameters": "()", "modifiers": "public", "return": "", "signature": " IndexOfFunction()", "full_signature": "public  IndexOfFunction()", "class_method_signature": "IndexOfFunction.IndexOfFunction()", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(@ParameterName( \"list\" ) List list, @ParameterName( \"match\" ) Object match)", "modifiers": "public", "return": "FEELFnResult<List<BigDecimal>>", "signature": "FEELFnResult<List<BigDecimal>> invoke(@ParameterName( \"list\" ) List list, @ParameterName( \"match\" ) Object match)", "full_signature": "public FEELFnResult<List<BigDecimal>> invoke(@ParameterName( \"list\" ) List list, @ParameterName( \"match\" ) Object match)", "class_method_signature": "IndexOfFunction.invoke(@ParameterName( \"list\" ) List list, @ParameterName( \"match\" ) Object match)", "testcase": false, "constructor": false}, {"identifier": "equalsAsBigDecimals", "parameters": "(final Object object, final Object match)", "modifiers": "private", "return": "boolean", "signature": "boolean equalsAsBigDecimals(final Object object, final Object match)", "full_signature": "private boolean equalsAsBigDecimals(final Object object, final Object match)", "class_method_signature": "IndexOfFunction.equalsAsBigDecimals(final Object object, final Object match)", "testcase": false, "constructor": false}], "file": "kie-dmn/kie-dmn-feel/src/main/java/org/kie/dmn/feel/runtime/functions/IndexOfFunction.java"}, "focal_method": {"identifier": "invoke", "parameters": "(@ParameterName( \"list\" ) List list, @ParameterName( \"match\" ) Object match)", "modifiers": "public", "return": "FEELFnResult<List<BigDecimal>>", "body": "public FEELFnResult<List<BigDecimal>> invoke(@ParameterName( \"list\" ) List list, @ParameterName( \"match\" ) Object match) {\n        if ( list == null ) {\n            return FEELFnResult.ofError(new InvalidParametersEvent(Severity.ERROR, \"list\", \"cannot be null\"));\n        }\n\n        final List<BigDecimal> result = new ArrayList<>();\n        for( int i = 0; i < list.size(); i++ ) {\n            Object o = list.get( i );\n            if ( o == null && match == null) {\n                result.add( BigDecimal.valueOf( i+1 ) );\n            } else if ( o != null && match != null ) {\n                if ( equalsAsBigDecimals(o, match) || o.equals(match) ) {\n                    result.add( BigDecimal.valueOf( i+1 ) );\n                }\n            }\n        }\n        return FEELFnResult.ofResult( result );\n    }", "signature": "FEELFnResult<List<BigDecimal>> invoke(@ParameterName( \"list\" ) List list, @ParameterName( \"match\" ) Object match)", "full_signature": "public FEELFnResult<List<BigDecimal>> invoke(@ParameterName( \"list\" ) List list, @ParameterName( \"match\" ) Object match)", "class_method_signature": "IndexOfFunction.invoke(@ParameterName( \"list\" ) List list, @ParameterName( \"match\" ) Object match)", "testcase": false, "constructor": false, "invocations": ["ofError", "size", "get", "add", "valueOf", "equalsAsBigDecimals", "equals", "add", "valueOf", "ofResult"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}