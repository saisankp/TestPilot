{"test_class": {"identifier": "AWTDrawVisitorTest", "superclass": "", "interfaces": "", "fields": [], "file": "display/renderawt/src/test/java/org/openscience/cdk/renderer/visitor/AWTDrawVisitorTest.java"}, "test_case": {"identifier": "testSetFontManager", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetFontManager() {\n        Image image = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);\n        Graphics2D g2d = (Graphics2D) image.getGraphics();\n        AWTDrawVisitor visitor = new AWTDrawVisitor(g2d);\n        visitor.setFontManager(new AWTFontManager());\n        // at least we now know it did not crash...\n        Assert.assertNotNull(visitor);\n    }", "signature": "void testSetFontManager()", "full_signature": "@Test public void testSetFontManager()", "class_method_signature": "AWTDrawVisitorTest.testSetFontManager()", "testcase": true, "constructor": false, "invocations": ["getGraphics", "setFontManager", "assertNotNull"]}, "focal_class": {"identifier": "AWTDrawVisitor", "superclass": "extends AbstractAWTDrawVisitor", "interfaces": "", "fields": [{"original_string": "private AWTFontManager                  fontManager;", "modifier": "private", "type": "AWTFontManager", "declarator": "fontManager", "var_name": "fontManager"}, {"original_string": "private RendererModel                   rendererModel;", "modifier": "private", "type": "RendererModel", "declarator": "rendererModel", "var_name": "rendererModel"}, {"original_string": "private final Map<Integer, BasicStroke> strokeMap = new HashMap<>();", "modifier": "private final", "type": "Map<Integer, BasicStroke>", "declarator": "strokeMap = new HashMap<>()", "var_name": "strokeMap"}, {"original_string": "private final float                      minStroke;", "modifier": "private final", "type": "float", "declarator": "minStroke", "var_name": "minStroke"}, {"original_string": "private final boolean                    strokeCache;", "modifier": "private final", "type": "boolean", "declarator": "strokeCache", "var_name": "strokeCache"}, {"original_string": "private final Graphics2D                 graphics;", "modifier": "private final", "type": "Graphics2D", "declarator": "graphics", "var_name": "graphics"}, {"original_string": "private boolean roundCoords = true;", "modifier": "private", "type": "boolean", "declarator": "roundCoords = true", "var_name": "roundCoords"}], "methods": [{"identifier": "getRendererModel", "parameters": "()", "modifiers": "public", "return": "RendererModel", "signature": "RendererModel getRendererModel()", "full_signature": "public RendererModel getRendererModel()", "class_method_signature": "AWTDrawVisitor.getRendererModel()", "testcase": false, "constructor": false}, {"identifier": "getStrokeMap", "parameters": "()", "modifiers": "public", "return": "Map<Integer, BasicStroke>", "signature": "Map<Integer, BasicStroke> getStrokeMap()", "full_signature": "public Map<Integer, BasicStroke> getStrokeMap()", "class_method_signature": "AWTDrawVisitor.getStrokeMap()", "testcase": false, "constructor": false}, {"identifier": "getGraphics", "parameters": "()", "modifiers": "public", "return": "Graphics2D", "signature": "Graphics2D getGraphics()", "full_signature": "public Graphics2D getGraphics()", "class_method_signature": "AWTDrawVisitor.getGraphics()", "testcase": false, "constructor": false}, {"identifier": "AWTDrawVisitor", "parameters": "(Graphics2D graphics)", "modifiers": "public", "return": "", "signature": " AWTDrawVisitor(Graphics2D graphics)", "full_signature": "public  AWTDrawVisitor(Graphics2D graphics)", "class_method_signature": "AWTDrawVisitor.AWTDrawVisitor(Graphics2D graphics)", "testcase": false, "constructor": true}, {"identifier": "AWTDrawVisitor", "parameters": "(Graphics2D graphics, boolean strokeCache, float minStroke)", "modifiers": "private", "return": "", "signature": " AWTDrawVisitor(Graphics2D graphics, boolean strokeCache, float minStroke)", "full_signature": "private  AWTDrawVisitor(Graphics2D graphics, boolean strokeCache, float minStroke)", "class_method_signature": "AWTDrawVisitor.AWTDrawVisitor(Graphics2D graphics, boolean strokeCache, float minStroke)", "testcase": false, "constructor": true}, {"identifier": "forVectorGraphics", "parameters": "(Graphics2D g2)", "modifiers": "public static", "return": "AWTDrawVisitor", "signature": "AWTDrawVisitor forVectorGraphics(Graphics2D g2)", "full_signature": "public static AWTDrawVisitor forVectorGraphics(Graphics2D g2)", "class_method_signature": "AWTDrawVisitor.forVectorGraphics(Graphics2D g2)", "testcase": false, "constructor": false}, {"identifier": "setRounding", "parameters": "(boolean val)", "modifiers": "public", "return": "void", "signature": "void setRounding(boolean val)", "full_signature": "public void setRounding(boolean val)", "class_method_signature": "AWTDrawVisitor.setRounding(boolean val)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(ElementGroup elementGroup)", "modifiers": "private", "return": "void", "signature": "void visit(ElementGroup elementGroup)", "full_signature": "private void visit(ElementGroup elementGroup)", "class_method_signature": "AWTDrawVisitor.visit(ElementGroup elementGroup)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(LineElement line)", "modifiers": "private", "return": "void", "signature": "void visit(LineElement line)", "full_signature": "private void visit(LineElement line)", "class_method_signature": "AWTDrawVisitor.visit(LineElement line)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(OvalElement oval)", "modifiers": "private", "return": "void", "signature": "void visit(OvalElement oval)", "full_signature": "private void visit(OvalElement oval)", "class_method_signature": "AWTDrawVisitor.visit(OvalElement oval)", "testcase": false, "constructor": false}, {"identifier": "scaleX", "parameters": "(double xCoord)", "modifiers": "private", "return": "int", "signature": "int scaleX(double xCoord)", "full_signature": "private int scaleX(double xCoord)", "class_method_signature": "AWTDrawVisitor.scaleX(double xCoord)", "testcase": false, "constructor": false}, {"identifier": "scaleY", "parameters": "(double yCoord)", "modifiers": "private", "return": "int", "signature": "int scaleY(double yCoord)", "full_signature": "private int scaleY(double yCoord)", "class_method_signature": "AWTDrawVisitor.scaleY(double yCoord)", "testcase": false, "constructor": false}, {"identifier": "transformX", "parameters": "(double xCoord)", "modifiers": "private", "return": "int", "signature": "int transformX(double xCoord)", "full_signature": "private int transformX(double xCoord)", "class_method_signature": "AWTDrawVisitor.transformX(double xCoord)", "testcase": false, "constructor": false}, {"identifier": "transformY", "parameters": "(double yCoord)", "modifiers": "private", "return": "int", "signature": "int transformY(double yCoord)", "full_signature": "private int transformY(double yCoord)", "class_method_signature": "AWTDrawVisitor.transformY(double yCoord)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(double xCoord, double yCoord)", "modifiers": "private", "return": "double[]", "signature": "double[] transform(double xCoord, double yCoord)", "full_signature": "private double[] transform(double xCoord, double yCoord)", "class_method_signature": "AWTDrawVisitor.transform(double xCoord, double yCoord)", "testcase": false, "constructor": false}, {"identifier": "getBackgroundColor", "parameters": "()", "modifiers": "private", "return": "Color", "signature": "Color getBackgroundColor()", "full_signature": "private Color getBackgroundColor()", "class_method_signature": "AWTDrawVisitor.getBackgroundColor()", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(TextElement textElement)", "modifiers": "private", "return": "void", "signature": "void visit(TextElement textElement)", "full_signature": "private void visit(TextElement textElement)", "class_method_signature": "AWTDrawVisitor.visit(TextElement textElement)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(WedgeLineElement wedge)", "modifiers": "private", "return": "void", "signature": "void visit(WedgeLineElement wedge)", "full_signature": "private void visit(WedgeLineElement wedge)", "class_method_signature": "AWTDrawVisitor.visit(WedgeLineElement wedge)", "testcase": false, "constructor": false}, {"identifier": "drawFilledWedge", "parameters": "(Point2d vertexA, Point2d vertexB, Point2d vertexC)", "modifiers": "private", "return": "void", "signature": "void drawFilledWedge(Point2d vertexA, Point2d vertexB, Point2d vertexC)", "full_signature": "private void drawFilledWedge(Point2d vertexA, Point2d vertexB, Point2d vertexC)", "class_method_signature": "AWTDrawVisitor.drawFilledWedge(Point2d vertexA, Point2d vertexB, Point2d vertexC)", "testcase": false, "constructor": false}, {"identifier": "drawDashedWedge", "parameters": "(Point2d vertexA, Point2d vertexB, Point2d vertexC)", "modifiers": "private", "return": "void", "signature": "void drawDashedWedge(Point2d vertexA, Point2d vertexB, Point2d vertexC)", "full_signature": "private void drawDashedWedge(Point2d vertexA, Point2d vertexB, Point2d vertexC)", "class_method_signature": "AWTDrawVisitor.drawDashedWedge(Point2d vertexA, Point2d vertexB, Point2d vertexC)", "testcase": false, "constructor": false}, {"identifier": "drawIndiffWedge", "parameters": "(Point2d vertexA, Point2d vertexB, Point2d vertexC)", "modifiers": "private", "return": "void", "signature": "void drawIndiffWedge(Point2d vertexA, Point2d vertexB, Point2d vertexC)", "full_signature": "private void drawIndiffWedge(Point2d vertexA, Point2d vertexB, Point2d vertexC)", "class_method_signature": "AWTDrawVisitor.drawIndiffWedge(Point2d vertexA, Point2d vertexB, Point2d vertexC)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(AtomSymbolElement atomSymbol)", "modifiers": "private", "return": "void", "signature": "void visit(AtomSymbolElement atomSymbol)", "full_signature": "private void visit(AtomSymbolElement atomSymbol)", "class_method_signature": "AWTDrawVisitor.visit(AtomSymbolElement atomSymbol)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(RectangleElement rectangle)", "modifiers": "private", "return": "void", "signature": "void visit(RectangleElement rectangle)", "full_signature": "private void visit(RectangleElement rectangle)", "class_method_signature": "AWTDrawVisitor.visit(RectangleElement rectangle)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(PathElement path)", "modifiers": "private", "return": "void", "signature": "void visit(PathElement path)", "full_signature": "private void visit(PathElement path)", "class_method_signature": "AWTDrawVisitor.visit(PathElement path)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(GeneralPath path)", "modifiers": "private", "return": "void", "signature": "void visit(GeneralPath path)", "full_signature": "private void visit(GeneralPath path)", "class_method_signature": "AWTDrawVisitor.visit(GeneralPath path)", "testcase": false, "constructor": false}, {"identifier": "getPathIterator", "parameters": "(final GeneralPath path, final AffineTransform transform)", "modifiers": "private static", "return": "PathIterator", "signature": "PathIterator getPathIterator(final GeneralPath path, final AffineTransform transform)", "full_signature": "private static PathIterator getPathIterator(final GeneralPath path, final AffineTransform transform)", "class_method_signature": "AWTDrawVisitor.getPathIterator(final GeneralPath path, final AffineTransform transform)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(ArrowElement line)", "modifiers": "private", "return": "void", "signature": "void visit(ArrowElement line)", "full_signature": "private void visit(ArrowElement line)", "class_method_signature": "AWTDrawVisitor.visit(ArrowElement line)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(TextGroupElement textGroup)", "modifiers": "private", "return": "void", "signature": "void visit(TextGroupElement textGroup)", "full_signature": "private void visit(TextGroupElement textGroup)", "class_method_signature": "AWTDrawVisitor.visit(TextGroupElement textGroup)", "testcase": false, "constructor": false}, {"identifier": "visit", "parameters": "(IRenderingElement element)", "modifiers": "@Override public", "return": "void", "signature": "void visit(IRenderingElement element)", "full_signature": "@Override public void visit(IRenderingElement element)", "class_method_signature": "AWTDrawVisitor.visit(IRenderingElement element)", "testcase": false, "constructor": false}, {"identifier": "setFontManager", "parameters": "(IFontManager fontManager)", "modifiers": "@Override public", "return": "void", "signature": "void setFontManager(IFontManager fontManager)", "full_signature": "@Override public void setFontManager(IFontManager fontManager)", "class_method_signature": "AWTDrawVisitor.setFontManager(IFontManager fontManager)", "testcase": false, "constructor": false}, {"identifier": "setRendererModel", "parameters": "(RendererModel rendererModel)", "modifiers": "@Override public", "return": "void", "signature": "void setRendererModel(RendererModel rendererModel)", "full_signature": "@Override public void setRendererModel(RendererModel rendererModel)", "class_method_signature": "AWTDrawVisitor.setRendererModel(RendererModel rendererModel)", "testcase": false, "constructor": false}], "file": "display/renderawt/src/main/java/org/openscience/cdk/renderer/visitor/AWTDrawVisitor.java"}, "focal_method": {"identifier": "setFontManager", "parameters": "(IFontManager fontManager)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void setFontManager(IFontManager fontManager) {\n        this.fontManager = (AWTFontManager) fontManager;\n    }", "signature": "void setFontManager(IFontManager fontManager)", "full_signature": "@Override public void setFontManager(IFontManager fontManager)", "class_method_signature": "AWTDrawVisitor.setFontManager(IFontManager fontManager)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}