{"test_class": {"identifier": "TestChannelUtils", "superclass": "extends AbstractBasicChannelSemanticsTest", "interfaces": "", "fields": [], "file": "flume-ng-core/src/test/java/org/apache/flume/channel/TestChannelUtils.java"}, "test_case": {"identifier": "testHappyPath2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testHappyPath2() {\n    ChannelUtils.take(channel);\n    Assert.assertTrue(channel.wasLastTransactionCommitted());\n    Assert.assertFalse(channel.wasLastTransactionRolledBack());\n    Assert.assertTrue(channel.wasLastTransactionClosed());\n  }", "signature": "void testHappyPath2()", "full_signature": "@Test public void testHappyPath2()", "class_method_signature": "TestChannelUtils.testHappyPath2()", "testcase": true, "constructor": false, "invocations": ["take", "assertTrue", "wasLastTransactionCommitted", "assertFalse", "wasLastTransactionRolledBack", "assertTrue", "wasLastTransactionClosed"]}, "focal_class": {"identifier": "ChannelUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory\n      .getLogger(ChannelUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory\n      .getLogger(ChannelUtils.class)", "var_name": "logger"}], "methods": [{"identifier": "put", "parameters": "(final Channel channel, final Event event)", "modifiers": "public static", "return": "void", "signature": "void put(final Channel channel, final Event event)", "full_signature": "public static void put(final Channel channel, final Event event)", "class_method_signature": "ChannelUtils.put(final Channel channel, final Event event)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(final Channel channel, final Collection<Event> events)", "modifiers": "public static", "return": "void", "signature": "void put(final Channel channel, final Collection<Event> events)", "full_signature": "public static void put(final Channel channel, final Collection<Event> events)", "class_method_signature": "ChannelUtils.put(final Channel channel, final Collection<Event> events)", "testcase": false, "constructor": false}, {"identifier": "take", "parameters": "(final Channel channel)", "modifiers": "public static", "return": "Event", "signature": "Event take(final Channel channel)", "full_signature": "public static Event take(final Channel channel)", "class_method_signature": "ChannelUtils.take(final Channel channel)", "testcase": false, "constructor": false}, {"identifier": "take", "parameters": "(final Channel channel, final int max)", "modifiers": "public static", "return": "List<Event>", "signature": "List<Event> take(final Channel channel, final int max)", "full_signature": "public static List<Event> take(final Channel channel, final int max)", "class_method_signature": "ChannelUtils.take(final Channel channel, final int max)", "testcase": false, "constructor": false}, {"identifier": "transact", "parameters": "(Channel channel, Runnable transactor)", "modifiers": "public static", "return": "void", "signature": "void transact(Channel channel, Runnable transactor)", "full_signature": "public static void transact(Channel channel, Runnable transactor)", "class_method_signature": "ChannelUtils.transact(Channel channel, Runnable transactor)", "testcase": false, "constructor": false}, {"identifier": "transact", "parameters": "(Channel channel, Callable<T> transactor)", "modifiers": "public static", "return": "T", "signature": "T transact(Channel channel, Callable<T> transactor)", "full_signature": "public static T transact(Channel channel, Callable<T> transactor)", "class_method_signature": "ChannelUtils.transact(Channel channel, Callable<T> transactor)", "testcase": false, "constructor": false}, {"identifier": "ChannelUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " ChannelUtils()", "full_signature": "private  ChannelUtils()", "class_method_signature": "ChannelUtils.ChannelUtils()", "testcase": false, "constructor": true}], "file": "flume-ng-core/src/main/java/org/apache/flume/channel/ChannelUtils.java"}, "focal_method": {"identifier": "take", "parameters": "(final Channel channel)", "modifiers": "public static", "return": "Event", "body": "public static Event take(final Channel channel)\n      throws ChannelException {\n    return transact(channel, new Callable<Event>() {\n        @Override\n        public Event call() {\n          return channel.take();\n        }\n      });\n  }", "signature": "Event take(final Channel channel)", "full_signature": "public static Event take(final Channel channel)", "class_method_signature": "ChannelUtils.take(final Channel channel)", "testcase": false, "constructor": false, "invocations": ["transact", "take"]}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}