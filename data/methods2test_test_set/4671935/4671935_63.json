{"test_class": {"identifier": "StringBuilderUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final double[] testDoubles = {-1, 0, 0.1, 0.5, 0.9, 0.99, 0.995, 0.999, 1, 1.1, 2, 9.8, 10};", "modifier": "private final", "type": "double[]", "declarator": "testDoubles = {-1, 0, 0.1, 0.5, 0.9, 0.99, 0.995, 0.999, 1, 1.1, 2, 9.8, 10}", "var_name": "testDoubles"}, {"original_string": "private final float[] testFloats = {-1f, 0f, 0.1f, 0.5f, 0.9f, 0.99f, 0.995f, 0.999f, 1f, 1.1f, 2f, 9.8f, 10f};", "modifier": "private final", "type": "float[]", "declarator": "testFloats = {-1f, 0f, 0.1f, 0.5f, 0.9f, 0.99f, 0.995f, 0.999f, 1f, 1.1f, 2f, 9.8f, 10f}", "var_name": "testFloats"}, {"original_string": "private final long[] testLongs = {0, 1, 2, 9, 10, 11, 100, 101, 1000};", "modifier": "private final", "type": "long[]", "declarator": "testLongs = {0, 1, 2, 9, 10, 11, 100, 101, 1000}", "var_name": "testLongs"}], "file": "common/src/test/java/com/platypii/baseline/util/StringBuilderUtilTest.java"}, "test_case": {"identifier": "format3f", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void format3f() {\n        StringBuilder sb = new StringBuilder();\n\n        for (double value : testDoubles) {\n            sb.setLength(0);\n            StringBuilderUtil.format3f(sb, value);\n            assertEquals(String.format(\"%.3f\", value), sb.toString());\n        }\n    }", "signature": "void format3f()", "full_signature": "@Test public void format3f()", "class_method_signature": "StringBuilderUtilTest.format3f()", "testcase": true, "constructor": false, "invocations": ["setLength", "format3f", "assertEquals", "format", "toString"]}, "focal_class": {"identifier": "StringBuilderUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "format2f", "parameters": "(@NonNull StringBuilder sb, float x)", "modifiers": "public static", "return": "void", "signature": "void format2f(@NonNull StringBuilder sb, float x)", "full_signature": "public static void format2f(@NonNull StringBuilder sb, float x)", "class_method_signature": "StringBuilderUtil.format2f(@NonNull StringBuilder sb, float x)", "testcase": false, "constructor": false}, {"identifier": "format3f", "parameters": "(@NonNull StringBuilder sb, double x)", "modifiers": "public static", "return": "void", "signature": "void format3f(@NonNull StringBuilder sb, double x)", "full_signature": "public static void format3f(@NonNull StringBuilder sb, double x)", "class_method_signature": "StringBuilderUtil.format3f(@NonNull StringBuilder sb, double x)", "testcase": false, "constructor": false}, {"identifier": "format2d", "parameters": "(@NonNull StringBuilder sb, long x)", "modifiers": "public static", "return": "void", "signature": "void format2d(@NonNull StringBuilder sb, long x)", "full_signature": "public static void format2d(@NonNull StringBuilder sb, long x)", "class_method_signature": "StringBuilderUtil.format2d(@NonNull StringBuilder sb, long x)", "testcase": false, "constructor": false}, {"identifier": "format3d", "parameters": "(@NonNull StringBuilder sb, long x)", "modifiers": "public static", "return": "void", "signature": "void format3d(@NonNull StringBuilder sb, long x)", "full_signature": "public static void format3d(@NonNull StringBuilder sb, long x)", "class_method_signature": "StringBuilderUtil.format3d(@NonNull StringBuilder sb, long x)", "testcase": false, "constructor": false}], "file": "common/src/main/java/com/platypii/baseline/util/StringBuilderUtil.java"}, "focal_method": {"identifier": "format3f", "parameters": "(@NonNull StringBuilder sb, double x)", "modifiers": "public static", "return": "void", "body": "public static void format3f(@NonNull StringBuilder sb, double x) {\n        final long x1000 = Math.round(x * 1000);\n        final long whole = x1000 / 1000;\n        final long tenths = x1000 / 100 % 10;\n        final long hundredths = x1000 / 10 % 10;\n        final long thousandths = x1000 % 10;\n        sb.append(whole);\n        sb.append(\".\");\n        sb.append(tenths);\n        sb.append(hundredths);\n        sb.append(thousandths);\n    }", "signature": "void format3f(@NonNull StringBuilder sb, double x)", "full_signature": "public static void format3f(@NonNull StringBuilder sb, double x)", "class_method_signature": "StringBuilderUtil.format3f(@NonNull StringBuilder sb, double x)", "testcase": false, "constructor": false, "invocations": ["round", "append", "append", "append", "append", "append"]}, "repository": {"repo_id": 4671935, "url": "https://github.com/platypii/BASElineFlightComputer", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 18, "size": 6949, "license": "licensed"}}