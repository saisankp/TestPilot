{"test_class": {"identifier": "WeatherServiceTest", "superclass": "", "interfaces": "", "fields": [], "file": "aula09-restfull-and-gson/src/test/java/org/isel/mpd/weather/WeatherServiceTest.java"}, "test_case": {"identifier": "testPastWeatherInOporto", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPastWeatherInOporto(){\n        // CountableRequest req = new CountableRequest(new HttpRequest());\n        Request r = new HttpRequest();\n        int[] count = {0};\n        Request req = path -> {\n            count[0]++;\n            return r.getLines(path);\n        };\n\n        WeatherService service = new WeatherService(new WeatherWebApi(req));\n        Iterable<Location> locals = service.search(\"oporto\");\n        Assert.assertEquals(1, count[0]);\n\n        Iterable<WeatherInfo> oportoWeather = skip(locals, 1).iterator().next().getPast30daysWeather();\n        int tempC = max(map(oportoWeather, WeatherInfo::getTempC));\n\n        Assert.assertEquals(22, tempC);\n        Assert.assertEquals(3, count[0]);\n\n        count(locals); // + 6 requests of pastWeather for 6 locations\n        Assert.assertEquals(9, count[0]);\n    }", "signature": "void testPastWeatherInOporto()", "full_signature": "@Test public void testPastWeatherInOporto()", "class_method_signature": "WeatherServiceTest.testPastWeatherInOporto()", "testcase": true, "constructor": false, "invocations": ["getLines", "search", "assertEquals", "getPast30daysWeather", "next", "iterator", "skip", "max", "map", "assertEquals", "assertEquals", "count", "assertEquals"]}, "focal_class": {"identifier": "WeatherService", "superclass": "", "interfaces": "", "fields": [{"original_string": "final WeatherApi api;", "modifier": "final", "type": "WeatherApi", "declarator": "api", "var_name": "api"}], "methods": [{"identifier": "WeatherService", "parameters": "(WeatherApi api)", "modifiers": "public", "return": "", "signature": " WeatherService(WeatherApi api)", "full_signature": "public  WeatherService(WeatherApi api)", "class_method_signature": "WeatherService.WeatherService(WeatherApi api)", "testcase": false, "constructor": true}, {"identifier": "WeatherService", "parameters": "()", "modifiers": "public", "return": "", "signature": " WeatherService()", "full_signature": "public  WeatherService()", "class_method_signature": "WeatherService.WeatherService()", "testcase": false, "constructor": true}, {"identifier": "search", "parameters": "(String query)", "modifiers": "public", "return": "Iterable<Location>", "signature": "Iterable<Location> search(String query)", "full_signature": "public Iterable<Location> search(String query)", "class_method_signature": "WeatherService.search(String query)", "testcase": false, "constructor": false}, {"identifier": "toLocation", "parameters": "(LocationInfo l)", "modifiers": "private", "return": "Location", "signature": "Location toLocation(LocationInfo l)", "full_signature": "private Location toLocation(LocationInfo l)", "class_method_signature": "WeatherService.toLocation(LocationInfo l)", "testcase": false, "constructor": false}], "file": "aula09-restfull-and-gson/src/main/java/org/isel/mpd/weather/WeatherService.java"}, "focal_method": {"identifier": "search", "parameters": "(String query)", "modifiers": "public", "return": "Iterable<Location>", "body": "public Iterable<Location> search(String query) {\n        Iterable<LocationInfo> locals = api.search(query);\n        return LazyQueries.map(locals, this::toLocation);\n    }", "signature": "Iterable<Location> search(String query)", "full_signature": "public Iterable<Location> search(String query)", "class_method_signature": "WeatherService.search(String query)", "testcase": false, "constructor": false, "invocations": ["search", "map"]}, "repository": {"repo_id": 171326919, "url": "https://github.com/isel-leic-mpd/mpd-2019-i41n", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 13, "size": 404, "license": "licensed"}}