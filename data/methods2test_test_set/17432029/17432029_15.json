{"test_class": {"identifier": "ImageViewZoomExtenderTest", "superclass": "", "interfaces": "", "fields": [], "file": "volley-views/src/test/java/com/navercorp/volleyextensions/view/ImageViewZoomExtenderTest.java"}, "test_case": {"identifier": "extenderShouldCheckDrawableExistsWhenExtenderZooms", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void extenderShouldCheckDrawableExistsWhenExtenderZooms() {\n\t\t// Given\n\t\tfloat zoomLevel = 7.0f;\n\t\tfloat zoomX = 0.0f;\n\t\tfloat zoomY = 0.0f;\n\t\tImageView imageView = mock(ImageView.class);\n\t\timageView.setImageBitmap(createTestBitmap());\n\t\tZoomableComponent extender = new ImageViewZoomExtender(imageView);\n\t\t// When\n\t\textender.zoomTo(zoomLevel, zoomX, zoomY);\n\t\t// Then\n\t\tverify(imageView).getDrawable();\n\t}", "signature": "void extenderShouldCheckDrawableExistsWhenExtenderZooms()", "full_signature": "@Test public void extenderShouldCheckDrawableExistsWhenExtenderZooms()", "class_method_signature": "ImageViewZoomExtenderTest.extenderShouldCheckDrawableExistsWhenExtenderZooms()", "testcase": true, "constructor": false, "invocations": ["mock", "setImageBitmap", "createTestBitmap", "zoomTo", "getDrawable", "verify"]}, "focal_class": {"identifier": "ImageViewZoomExtender", "superclass": "", "interfaces": "implements ZoomableComponent", "fields": [{"original_string": "public static final int DEFAULT_MATRIX_SIZE = 3 * 3;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_MATRIX_SIZE = 3 * 3", "var_name": "DEFAULT_MATRIX_SIZE"}, {"original_string": "public static final int NONE_DEF_STYLE = 0;", "modifier": "public static final", "type": "int", "declarator": "NONE_DEF_STYLE = 0", "var_name": "NONE_DEF_STYLE"}, {"original_string": "public static final float ORIGINAL_LEVEL = 1.0f;", "modifier": "public static final", "type": "float", "declarator": "ORIGINAL_LEVEL = 1.0f", "var_name": "ORIGINAL_LEVEL"}, {"original_string": "private static final PointF topLeftPoint = new PointF(0.0f, 0.0f);", "modifier": "private static final", "type": "PointF", "declarator": "topLeftPoint = new PointF(0.0f, 0.0f)", "var_name": "topLeftPoint"}, {"original_string": "private float zoomLevel = ORIGINAL_LEVEL;", "modifier": "private", "type": "float", "declarator": "zoomLevel = ORIGINAL_LEVEL", "var_name": "zoomLevel"}, {"original_string": "private ImageView imageView;", "modifier": "private", "type": "ImageView", "declarator": "imageView", "var_name": "imageView"}, {"original_string": "private final Matrix currentMatrix = new Matrix();", "modifier": "private final", "type": "Matrix", "declarator": "currentMatrix = new Matrix()", "var_name": "currentMatrix"}, {"original_string": "private float initialScaleSize;", "modifier": "private", "type": "float", "declarator": "initialScaleSize", "var_name": "initialScaleSize"}, {"original_string": "private int viewWidth;", "modifier": "private", "type": "int", "declarator": "viewWidth", "var_name": "viewWidth"}, {"original_string": "private int viewHeight;", "modifier": "private", "type": "int", "declarator": "viewHeight", "var_name": "viewHeight"}, {"original_string": "private int imageWidth;", "modifier": "private", "type": "int", "declarator": "imageWidth", "var_name": "imageWidth"}, {"original_string": "private int imageHeight;", "modifier": "private", "type": "int", "declarator": "imageHeight", "var_name": "imageHeight"}], "methods": [{"identifier": "ImageViewZoomExtender", "parameters": "(ImageView imageView)", "modifiers": "public", "return": "", "signature": " ImageViewZoomExtender(ImageView imageView)", "full_signature": "public  ImageViewZoomExtender(ImageView imageView)", "class_method_signature": "ImageViewZoomExtender.ImageViewZoomExtender(ImageView imageView)", "testcase": false, "constructor": true}, {"identifier": "setImageView", "parameters": "(ImageView imageView)", "modifiers": "private", "return": "void", "signature": "void setImageView(ImageView imageView)", "full_signature": "private void setImageView(ImageView imageView)", "class_method_signature": "ImageViewZoomExtender.setImageView(ImageView imageView)", "testcase": false, "constructor": false}, {"identifier": "setScaleTypeMatrix", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setScaleTypeMatrix()", "full_signature": "private void setScaleTypeMatrix()", "class_method_signature": "ImageViewZoomExtender.setScaleTypeMatrix()", "testcase": false, "constructor": false}, {"identifier": "getZoomLevel", "parameters": "()", "modifiers": "@Override public", "return": "float", "signature": "float getZoomLevel()", "full_signature": "@Override public float getZoomLevel()", "class_method_signature": "ImageViewZoomExtender.getZoomLevel()", "testcase": false, "constructor": false}, {"identifier": "restore", "parameters": "(ZoomInfo zoomInfo)", "modifiers": "@Override public", "return": "void", "signature": "void restore(ZoomInfo zoomInfo)", "full_signature": "@Override public void restore(ZoomInfo zoomInfo)", "class_method_signature": "ImageViewZoomExtender.restore(ZoomInfo zoomInfo)", "testcase": false, "constructor": false}, {"identifier": "createZoomInfoIfNull", "parameters": "(ZoomInfo zoomInfo)", "modifiers": "private static", "return": "ZoomInfo", "signature": "ZoomInfo createZoomInfoIfNull(ZoomInfo zoomInfo)", "full_signature": "private static ZoomInfo createZoomInfoIfNull(ZoomInfo zoomInfo)", "class_method_signature": "ImageViewZoomExtender.createZoomInfoIfNull(ZoomInfo zoomInfo)", "testcase": false, "constructor": false}, {"identifier": "resetZoomLevel", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void resetZoomLevel()", "full_signature": "private void resetZoomLevel()", "class_method_signature": "ImageViewZoomExtender.resetZoomLevel()", "testcase": false, "constructor": false}, {"identifier": "resetImageMatrix", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void resetImageMatrix()", "full_signature": "private void resetImageMatrix()", "class_method_signature": "ImageViewZoomExtender.resetImageMatrix()", "testcase": false, "constructor": false}, {"identifier": "saveCurrentSizes", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void saveCurrentSizes()", "full_signature": "private void saveCurrentSizes()", "class_method_signature": "ImageViewZoomExtender.saveCurrentSizes()", "testcase": false, "constructor": false}, {"identifier": "initializeScaleSize", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initializeScaleSize()", "full_signature": "private void initializeScaleSize()", "class_method_signature": "ImageViewZoomExtender.initializeScaleSize()", "testcase": false, "constructor": false}, {"identifier": "isImageSizeLargerThanView", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isImageSizeLargerThanView()", "full_signature": "private boolean isImageSizeLargerThanView()", "class_method_signature": "ImageViewZoomExtender.isImageSizeLargerThanView()", "testcase": false, "constructor": false}, {"identifier": "computeFitScaleOfImage", "parameters": "()", "modifiers": "private", "return": "float", "signature": "float computeFitScaleOfImage()", "full_signature": "private float computeFitScaleOfImage()", "class_method_signature": "ImageViewZoomExtender.computeFitScaleOfImage()", "testcase": false, "constructor": false}, {"identifier": "restoreActualZoomPosition", "parameters": "(ZoomInfo zoomInfo)", "modifiers": "private", "return": "void", "signature": "void restoreActualZoomPosition(ZoomInfo zoomInfo)", "full_signature": "private void restoreActualZoomPosition(ZoomInfo zoomInfo)", "class_method_signature": "ImageViewZoomExtender.restoreActualZoomPosition(ZoomInfo zoomInfo)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "()", "modifiers": "@Override public", "return": "ZoomInfo", "signature": "ZoomInfo save()", "full_signature": "@Override public ZoomInfo save()", "class_method_signature": "ImageViewZoomExtender.save()", "testcase": false, "constructor": false}, {"identifier": "createCurrentZoomInfo", "parameters": "()", "modifiers": "private", "return": "ZoomInfo", "signature": "ZoomInfo createCurrentZoomInfo()", "full_signature": "private ZoomInfo createCurrentZoomInfo()", "class_method_signature": "ImageViewZoomExtender.createCurrentZoomInfo()", "testcase": false, "constructor": false}, {"identifier": "zoomTo", "parameters": "(float targetLevel)", "modifiers": "public", "return": "void", "signature": "void zoomTo(float targetLevel)", "full_signature": "public void zoomTo(float targetLevel)", "class_method_signature": "ImageViewZoomExtender.zoomTo(float targetLevel)", "testcase": false, "constructor": false}, {"identifier": "zoomTo", "parameters": "(float targetLevel, PointF zoomPoint)", "modifiers": "public", "return": "void", "signature": "void zoomTo(float targetLevel, PointF zoomPoint)", "full_signature": "public void zoomTo(float targetLevel, PointF zoomPoint)", "class_method_signature": "ImageViewZoomExtender.zoomTo(float targetLevel, PointF zoomPoint)", "testcase": false, "constructor": false}, {"identifier": "zoomTo", "parameters": "(float targetLevel, float zoomX, float zoomY)", "modifiers": "@Override public", "return": "void", "signature": "void zoomTo(float targetLevel, float zoomX, float zoomY)", "full_signature": "@Override public void zoomTo(float targetLevel, float zoomX, float zoomY)", "class_method_signature": "ImageViewZoomExtender.zoomTo(float targetLevel, float zoomX, float zoomY)", "testcase": false, "constructor": false}, {"identifier": "updateZoomLevel", "parameters": "(float targetLevel)", "modifiers": "private", "return": "void", "signature": "void updateZoomLevel(float targetLevel)", "full_signature": "private void updateZoomLevel(float targetLevel)", "class_method_signature": "ImageViewZoomExtender.updateZoomLevel(float targetLevel)", "testcase": false, "constructor": false}, {"identifier": "scaleSize", "parameters": "(Matrix matrix, float targetLevel, float zoomX, float zoomY)", "modifiers": "private", "return": "void", "signature": "void scaleSize(Matrix matrix, float targetLevel, float zoomX, float zoomY)", "full_signature": "private void scaleSize(Matrix matrix, float targetLevel, float zoomX, float zoomY)", "class_method_signature": "ImageViewZoomExtender.scaleSize(Matrix matrix, float targetLevel, float zoomX, float zoomY)", "testcase": false, "constructor": false}, {"identifier": "centerImage", "parameters": "(Matrix matrix)", "modifiers": "private", "return": "void", "signature": "void centerImage(Matrix matrix)", "full_signature": "private void centerImage(Matrix matrix)", "class_method_signature": "ImageViewZoomExtender.centerImage(Matrix matrix)", "testcase": false, "constructor": false}, {"identifier": "isImageEmpty", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isImageEmpty()", "full_signature": "private boolean isImageEmpty()", "class_method_signature": "ImageViewZoomExtender.isImageEmpty()", "testcase": false, "constructor": false}, {"identifier": "panTo", "parameters": "(PointF difference)", "modifiers": "public", "return": "void", "signature": "void panTo(PointF difference)", "full_signature": "public void panTo(PointF difference)", "class_method_signature": "ImageViewZoomExtender.panTo(PointF difference)", "testcase": false, "constructor": false}, {"identifier": "panTo", "parameters": "(float dx, float dy)", "modifiers": "@Override public", "return": "void", "signature": "void panTo(float dx, float dy)", "full_signature": "@Override public void panTo(float dx, float dy)", "class_method_signature": "ImageViewZoomExtender.panTo(float dx, float dy)", "testcase": false, "constructor": false}, {"identifier": "setImageMatrix", "parameters": "(Matrix matrix)", "modifiers": "private", "return": "void", "signature": "void setImageMatrix(Matrix matrix)", "full_signature": "private void setImageMatrix(Matrix matrix)", "class_method_signature": "ImageViewZoomExtender.setImageMatrix(Matrix matrix)", "testcase": false, "constructor": false}, {"identifier": "translatePosition", "parameters": "(Matrix matrix, float dx, float dy)", "modifiers": "private", "return": "void", "signature": "void translatePosition(Matrix matrix, float dx, float dy)", "full_signature": "private void translatePosition(Matrix matrix, float dx, float dy)", "class_method_signature": "ImageViewZoomExtender.translatePosition(Matrix matrix, float dx, float dy)", "testcase": false, "constructor": false}, {"identifier": "boundArea", "parameters": "(Matrix matrix)", "modifiers": "protected", "return": "void", "signature": "void boundArea(Matrix matrix)", "full_signature": "protected void boundArea(Matrix matrix)", "class_method_signature": "ImageViewZoomExtender.boundArea(Matrix matrix)", "testcase": false, "constructor": false}, {"identifier": "getValuesOfMatrix", "parameters": "(Matrix matrix)", "modifiers": "private static", "return": "float[]", "signature": "float[] getValuesOfMatrix(Matrix matrix)", "full_signature": "private static float[] getValuesOfMatrix(Matrix matrix)", "class_method_signature": "ImageViewZoomExtender.getValuesOfMatrix(Matrix matrix)", "testcase": false, "constructor": false}], "file": "volley-views/src/main/java/com/navercorp/volleyextensions/view/ImageViewZoomExtender.java"}, "focal_method": {"identifier": "zoomTo", "parameters": "(float targetLevel)", "modifiers": "public", "return": "void", "body": "public void zoomTo(float targetLevel) {\n\t\tzoomTo(targetLevel, topLeftPoint);\n\t}", "signature": "void zoomTo(float targetLevel)", "full_signature": "public void zoomTo(float targetLevel)", "class_method_signature": "ImageViewZoomExtender.zoomTo(float targetLevel)", "testcase": false, "constructor": false, "invocations": ["zoomTo"]}, "repository": {"repo_id": 17432029, "url": "https://github.com/naver/volley-extensions", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 138, "size": 666, "license": "licensed"}}