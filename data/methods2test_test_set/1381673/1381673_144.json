{"test_class": {"identifier": "PMML4UnitImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static PMML4Compiler compiler = new PMML4Compiler();", "modifier": "private static", "type": "PMML4Compiler", "declarator": "compiler = new PMML4Compiler()", "var_name": "compiler"}, {"original_string": "private static String TEST_PMML_DIRECTORY = \"org/kie/pmml/pmml_4_2/\";", "modifier": "private static", "type": "String", "declarator": "TEST_PMML_DIRECTORY = \"org/kie/pmml/pmml_4_2/\"", "var_name": "TEST_PMML_DIRECTORY"}, {"original_string": "private static String RESOURCE_PATH = TEST_PMML_DIRECTORY +\n                                          \"single_audit_dectree.pmml\";", "modifier": "private static", "type": "String", "declarator": "RESOURCE_PATH = TEST_PMML_DIRECTORY +\n                                          \"single_audit_dectree.pmml\"", "var_name": "RESOURCE_PATH"}, {"original_string": "private static String CAPITALIZED_DICTIONARY_ENTRY = \"Age\";", "modifier": "private static", "type": "String", "declarator": "CAPITALIZED_DICTIONARY_ENTRY = \"Age\"", "var_name": "CAPITALIZED_DICTIONARY_ENTRY"}, {"original_string": "private static String LOWERCASE_DICTIONARY_ENTRY = \"marital\";", "modifier": "private static", "type": "String", "declarator": "LOWERCASE_DICTIONARY_ENTRY = \"marital\"", "var_name": "LOWERCASE_DICTIONARY_ENTRY"}, {"original_string": "private static String NONEXIST_DICTIONARY_ENTRY = \"Marital\";", "modifier": "private static", "type": "String", "declarator": "NONEXIST_DICTIONARY_ENTRY = \"Marital\"", "var_name": "NONEXIST_DICTIONARY_ENTRY"}, {"original_string": "private PMML4Unit pmmlUnit;", "modifier": "private", "type": "PMML4Unit", "declarator": "pmmlUnit", "var_name": "pmmlUnit"}], "file": "kie-pmml/src/test/java/org/kie/pmml/pmml_4_2/model/PMML4UnitImplTest.java"}, "test_case": {"identifier": "testFindCapitalizedDataDictionaryEntry", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFindCapitalizedDataDictionaryEntry() {\n        PMMLDataField field = pmmlUnit.findDataDictionaryEntry(CAPITALIZED_DICTIONARY_ENTRY);\n        assertNotNull(field);\n    }", "signature": "void testFindCapitalizedDataDictionaryEntry()", "full_signature": "@Test public void testFindCapitalizedDataDictionaryEntry()", "class_method_signature": "PMML4UnitImplTest.testFindCapitalizedDataDictionaryEntry()", "testcase": true, "constructor": false, "invocations": ["findDataDictionaryEntry", "assertNotNull"]}, "focal_class": {"identifier": "PMML4UnitImpl", "superclass": "", "interfaces": "implements PMML4Unit", "fields": [{"original_string": "private static PMML4ModelFactory modelFactory = PMML4ModelFactory.getInstance();", "modifier": "private static", "type": "PMML4ModelFactory", "declarator": "modelFactory = PMML4ModelFactory.getInstance()", "var_name": "modelFactory"}, {"original_string": "private PMML rawPmml;", "modifier": "private", "type": "PMML", "declarator": "rawPmml", "var_name": "rawPmml"}, {"original_string": "private Map<String, PMML4Model> modelsMap;", "modifier": "private", "type": "Map<String, PMML4Model>", "declarator": "modelsMap", "var_name": "modelsMap"}, {"original_string": "private Map<String, PMMLDataField> dataDictionaryMap;", "modifier": "private", "type": "Map<String, PMMLDataField>", "declarator": "dataDictionaryMap", "var_name": "dataDictionaryMap"}], "methods": [{"identifier": "PMML4UnitImpl", "parameters": "(PMML rawPmml)", "modifiers": "public", "return": "", "signature": " PMML4UnitImpl(PMML rawPmml)", "full_signature": "public  PMML4UnitImpl(PMML rawPmml)", "class_method_signature": "PMML4UnitImpl.PMML4UnitImpl(PMML rawPmml)", "testcase": false, "constructor": true}, {"identifier": "PMML4UnitImpl", "parameters": "(String pmmlSourcePath)", "modifiers": "public", "return": "", "signature": " PMML4UnitImpl(String pmmlSourcePath)", "full_signature": "public  PMML4UnitImpl(String pmmlSourcePath)", "class_method_signature": "PMML4UnitImpl.PMML4UnitImpl(String pmmlSourcePath)", "testcase": false, "constructor": true}, {"identifier": "initFromPMML", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initFromPMML()", "full_signature": "private void initFromPMML()", "class_method_signature": "PMML4UnitImpl.initFromPMML()", "testcase": false, "constructor": false}, {"identifier": "initDataDictionaryMap", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initDataDictionaryMap()", "full_signature": "private void initDataDictionaryMap()", "class_method_signature": "PMML4UnitImpl.initDataDictionaryMap()", "testcase": false, "constructor": false}, {"identifier": "initModelsMap", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initModelsMap()", "full_signature": "private void initModelsMap()", "class_method_signature": "PMML4UnitImpl.initModelsMap()", "testcase": false, "constructor": false}, {"identifier": "addChildModelsToMap", "parameters": "(PMML4Model parentModel)", "modifiers": "private", "return": "void", "signature": "void addChildModelsToMap(PMML4Model parentModel)", "full_signature": "private void addChildModelsToMap(PMML4Model parentModel)", "class_method_signature": "PMML4UnitImpl.addChildModelsToMap(PMML4Model parentModel)", "testcase": false, "constructor": false}, {"identifier": "getRawPMML", "parameters": "()", "modifiers": "@Override public", "return": "PMML", "signature": "PMML getRawPMML()", "full_signature": "@Override public PMML getRawPMML()", "class_method_signature": "PMML4UnitImpl.getRawPMML()", "testcase": false, "constructor": false}, {"identifier": "getMiningFieldsForModel", "parameters": "(String modelId)", "modifiers": "public", "return": "List<MiningField>", "signature": "List<MiningField> getMiningFieldsForModel(String modelId)", "full_signature": "public List<MiningField> getMiningFieldsForModel(String modelId)", "class_method_signature": "PMML4UnitImpl.getMiningFieldsForModel(String modelId)", "testcase": false, "constructor": false}, {"identifier": "getMiningFields", "parameters": "()", "modifiers": "public", "return": "Map<String, List<MiningField>>", "signature": "Map<String, List<MiningField>> getMiningFields()", "full_signature": "public Map<String, List<MiningField>> getMiningFields()", "class_method_signature": "PMML4UnitImpl.getMiningFields()", "testcase": false, "constructor": false}, {"identifier": "getModelsMap", "parameters": "()", "modifiers": "public", "return": "Map<String, PMML4Model>", "signature": "Map<String, PMML4Model> getModelsMap()", "full_signature": "public Map<String, PMML4Model> getModelsMap()", "class_method_signature": "PMML4UnitImpl.getModelsMap()", "testcase": false, "constructor": false}, {"identifier": "getRootModels", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, PMML4Model>", "signature": "Map<String, PMML4Model> getRootModels()", "full_signature": "@Override public Map<String, PMML4Model> getRootModels()", "class_method_signature": "PMML4UnitImpl.getRootModels()", "testcase": false, "constructor": false}, {"identifier": "getRootMiningModel", "parameters": "()", "modifiers": "@Override public", "return": "Miningmodel", "signature": "Miningmodel getRootMiningModel()", "full_signature": "@Override public Miningmodel getRootMiningModel()", "class_method_signature": "PMML4UnitImpl.getRootMiningModel()", "testcase": false, "constructor": false}, {"identifier": "getChildModels", "parameters": "(String parentModelId)", "modifiers": "public", "return": "Map<String, PMML4Model>", "signature": "Map<String, PMML4Model> getChildModels(String parentModelId)", "full_signature": "public Map<String, PMML4Model> getChildModels(String parentModelId)", "class_method_signature": "PMML4UnitImpl.getChildModels(String parentModelId)", "testcase": false, "constructor": false}, {"identifier": "getModels", "parameters": "(PMML4ModelType type, PMML4Model parent)", "modifiers": "@Override public", "return": "Map<String, PMML4Model>", "signature": "Map<String, PMML4Model> getModels(PMML4ModelType type, PMML4Model parent)", "full_signature": "@Override public Map<String, PMML4Model> getModels(PMML4ModelType type, PMML4Model parent)", "class_method_signature": "PMML4UnitImpl.getModels(PMML4ModelType type, PMML4Model parent)", "testcase": false, "constructor": false}, {"identifier": "getRootModel", "parameters": "()", "modifiers": "@Override public", "return": "PMML4Model", "signature": "PMML4Model getRootModel()", "full_signature": "@Override public PMML4Model getRootModel()", "class_method_signature": "PMML4UnitImpl.getRootModel()", "testcase": false, "constructor": false}, {"identifier": "containsMiningModel", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsMiningModel()", "full_signature": "@Override public boolean containsMiningModel()", "class_method_signature": "PMML4UnitImpl.containsMiningModel()", "testcase": false, "constructor": false}, {"identifier": "getModels", "parameters": "()", "modifiers": "@Override public", "return": "List<PMML4Model>", "signature": "List<PMML4Model> getModels()", "full_signature": "@Override public List<PMML4Model> getModels()", "class_method_signature": "PMML4UnitImpl.getModels()", "testcase": false, "constructor": false}, {"identifier": "getDataDictionaryFields", "parameters": "()", "modifiers": "@Override public", "return": "List<PMMLDataField>", "signature": "List<PMMLDataField> getDataDictionaryFields()", "full_signature": "@Override public List<PMMLDataField> getDataDictionaryFields()", "class_method_signature": "PMML4UnitImpl.getDataDictionaryFields()", "testcase": false, "constructor": false}, {"identifier": "getDataDictionaryMap", "parameters": "()", "modifiers": "public", "return": "Map<String, PMMLDataField>", "signature": "Map<String, PMMLDataField> getDataDictionaryMap()", "full_signature": "public Map<String, PMMLDataField> getDataDictionaryMap()", "class_method_signature": "PMML4UnitImpl.getDataDictionaryMap()", "testcase": false, "constructor": false}, {"identifier": "packageFromRawPmml", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String packageFromRawPmml()", "full_signature": "private String packageFromRawPmml()", "class_method_signature": "PMML4UnitImpl.packageFromRawPmml()", "testcase": false, "constructor": false}, {"identifier": "getRootPackage", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getRootPackage()", "full_signature": "@Override public String getRootPackage()", "class_method_signature": "PMML4UnitImpl.getRootPackage()", "testcase": false, "constructor": false}, {"identifier": "getModelPackageNames", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getModelPackageNames()", "full_signature": "public Map<String, String> getModelPackageNames()", "class_method_signature": "PMML4UnitImpl.getModelPackageNames()", "testcase": false, "constructor": false}, {"identifier": "getModelExternalMiningBeansRules", "parameters": "(String modelName)", "modifiers": "@Override public", "return": "String", "signature": "String getModelExternalMiningBeansRules(String modelName)", "full_signature": "@Override public String getModelExternalMiningBeansRules(String modelName)", "class_method_signature": "PMML4UnitImpl.getModelExternalMiningBeansRules(String modelName)", "testcase": false, "constructor": false}, {"identifier": "findDataDictionaryEntry", "parameters": "(String fieldName)", "modifiers": "@Override public", "return": "PMMLDataField", "signature": "PMMLDataField findDataDictionaryEntry(String fieldName)", "full_signature": "@Override public PMMLDataField findDataDictionaryEntry(String fieldName)", "class_method_signature": "PMML4UnitImpl.findDataDictionaryEntry(String fieldName)", "testcase": false, "constructor": false}], "file": "kie-pmml/src/main/java/org/kie/pmml/pmml_4_2/model/PMML4UnitImpl.java"}, "focal_method": {"identifier": "findDataDictionaryEntry", "parameters": "(String fieldName)", "modifiers": "@Override public", "return": "PMMLDataField", "body": "@Override\n    public PMMLDataField findDataDictionaryEntry(String fieldName) {\n        PMMLDataField field = this.dataDictionaryMap.get(fieldName);\n        // If the field is not found using the name as a key in the map\n        // then iterate through the map's values looking at the raw PMML\n        // field info, to find it.\n        if (field == null) {\n            for (Iterator<PMMLDataField> iter = this.dataDictionaryMap.values().iterator(); iter.hasNext() && field == null;) {\n                PMMLDataField fld = iter.next();\n                if (fld != null && fld.getRawDataField() != null && fld.getRawDataField().getName().equals(fieldName)) {\n                    field = fld;\n                }\n            }\n        }\n        return field;\n    }", "signature": "PMMLDataField findDataDictionaryEntry(String fieldName)", "full_signature": "@Override public PMMLDataField findDataDictionaryEntry(String fieldName)", "class_method_signature": "PMML4UnitImpl.findDataDictionaryEntry(String fieldName)", "testcase": false, "constructor": false, "invocations": ["get", "iterator", "values", "hasNext", "next", "getRawDataField", "equals", "getName", "getRawDataField"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}