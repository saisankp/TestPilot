{"test_class": {"identifier": "ExportKeysTest", "superclass": "extends TestBase", "interfaces": "", "fields": [], "file": "hbase0.98/hbase-manager-0.98/src/test/java/com/kakao/hbase/manager/command/ExportKeysTest.java"}, "test_case": {"identifier": "testInvalidTable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInvalidTable() throws Exception {\n        String[] argsParam = {\"zookeeper\"};\n        Args args = new ManagerArgs(argsParam);\n        assertEquals(\"zookeeper\", args.getZookeeperQuorum());\n\n        try {\n            ExportKeys command = new ExportKeys(admin, args);\n            command.run();\n            fail();\n        } catch (IllegalArgumentException e) {\n            if (!e.getMessage().contains(Args.INVALID_ARGUMENTS)) throw e;\n        }\n    }", "signature": "void testInvalidTable()", "full_signature": "@Test public void testInvalidTable()", "class_method_signature": "ExportKeysTest.testInvalidTable()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getZookeeperQuorum", "run", "fail", "contains", "getMessage"]}, "focal_class": {"identifier": "ExportKeys", "superclass": "", "interfaces": "implements Command", "fields": [{"original_string": "static final String DELIMITER = \"-\";", "modifier": "static final", "type": "String", "declarator": "DELIMITER = \"-\"", "var_name": "DELIMITER"}, {"original_string": "private final HBaseAdmin admin;", "modifier": "private final", "type": "HBaseAdmin", "declarator": "admin", "var_name": "admin"}, {"original_string": "private final Args args;", "modifier": "private final", "type": "Args", "declarator": "args", "var_name": "args"}, {"original_string": "private final String outputFileName;", "modifier": "private final", "type": "String", "declarator": "outputFileName", "var_name": "outputFileName"}, {"original_string": "private final int exportThreshold;", "modifier": "private final", "type": "int", "declarator": "exportThreshold", "var_name": "exportThreshold"}], "methods": [{"identifier": "ExportKeys", "parameters": "(HBaseAdmin admin, Args args)", "modifiers": "public", "return": "", "signature": " ExportKeys(HBaseAdmin admin, Args args)", "full_signature": "public  ExportKeys(HBaseAdmin admin, Args args)", "class_method_signature": "ExportKeys.ExportKeys(HBaseAdmin admin, Args args)", "testcase": false, "constructor": true}, {"identifier": "usage", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String usage()", "full_signature": "public static String usage()", "class_method_signature": "ExportKeys.usage()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "ExportKeys.run()", "testcase": false, "constructor": false}, {"identifier": "parseExportThreshold", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int parseExportThreshold()", "full_signature": "private int parseExportThreshold()", "class_method_signature": "ExportKeys.parseExportThreshold()", "testcase": false, "constructor": false}, {"identifier": "export", "parameters": "(PrintWriter writer, HRegionInfo regionInfo)", "modifiers": "private", "return": "boolean", "signature": "boolean export(PrintWriter writer, HRegionInfo regionInfo)", "full_signature": "private boolean export(PrintWriter writer, HRegionInfo regionInfo)", "class_method_signature": "ExportKeys.export(PrintWriter writer, HRegionInfo regionInfo)", "testcase": false, "constructor": false}], "file": "hbase0.98/hbase-manager-0.98/src/main/java/com/kakao/hbase/manager/command/ExportKeys.java"}, "focal_method": {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void run() throws Exception {\n        try (PrintWriter writer = new PrintWriter(outputFileName, Constant.CHARSET.name())) {\n            writer.print(\"\");\n\n            TableInfo tableInfo = new TableInfo(admin, args.getTableName(), args);\n            tableInfo.refresh();\n            Set<HRegionInfo> regions = tableInfo.getRegionInfoSet();\n\n            int exported = 0, storeFileSizeMBSum = 0;\n            for (HRegionInfo regionInfo : regions) {\n                System.out.println(regionInfo.toString());\n\n                if (args.getOptionSet().has(Args.OPTION_OPTIMIZE)) {\n                    storeFileSizeMBSum += tableInfo.getRegionLoad(regionInfo).getStorefileSizeMB();\n                    if (storeFileSizeMBSum < exportThreshold) {\n                        continue;\n                    }\n                }\n                if (export(writer, regionInfo)) exported++;\n                storeFileSizeMBSum = 0;\n            }\n\n            System.out.println(\"\\n\" + regions.size() + \" regions are scanned.\");\n            System.out.println(exported + \" startkeys are exported.\");\n            System.out.println(\"\\n\" + outputFileName + \" file is successfully created.\");\n        }\n    }", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "ExportKeys.run()", "testcase": false, "constructor": false, "invocations": ["name", "print", "getTableName", "refresh", "getRegionInfoSet", "println", "toString", "has", "getOptionSet", "getStorefileSizeMB", "getRegionLoad", "export", "println", "size", "println", "println"]}, "repository": {"repo_id": 46396068, "url": "https://github.com/kakao/hbase-tools", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 49, "size": 1758, "license": "licensed"}}