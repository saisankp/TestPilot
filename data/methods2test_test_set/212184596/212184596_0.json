{"test_class": {"identifier": "MoneyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Money m1 = new Money(10);", "modifier": "private", "type": "Money", "declarator": "m1 = new Money(10)", "var_name": "m1"}, {"original_string": "private Money m2 = new Money(15);", "modifier": "private", "type": "Money", "declarator": "m2 = new Money(15)", "var_name": "m2"}], "file": "common/src/test/java/net/chrisrichardson/eventstore/examples/customersandorders/common/domain/MoneyTest.java"}, "test_case": {"identifier": "shouldReturnAmount", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldReturnAmount() {\n    assertEquals(new BigDecimal(10), new Money(10).getAmount());\n  }", "signature": "void shouldReturnAmount()", "full_signature": "@Test public void shouldReturnAmount()", "class_method_signature": "MoneyTest.shouldReturnAmount()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getAmount"]}, "focal_class": {"identifier": "Money", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final Money ZERO = new Money(0);", "modifier": "public static final", "type": "Money", "declarator": "ZERO = new Money(0)", "var_name": "ZERO"}, {"original_string": "private BigDecimal amount;", "modifier": "private", "type": "BigDecimal", "declarator": "amount", "var_name": "amount"}], "methods": [{"identifier": "Money", "parameters": "()", "modifiers": "public", "return": "", "signature": " Money()", "full_signature": "public  Money()", "class_method_signature": "Money.Money()", "testcase": false, "constructor": true}, {"identifier": "Money", "parameters": "(int i)", "modifiers": "public", "return": "", "signature": " Money(int i)", "full_signature": "public  Money(int i)", "class_method_signature": "Money.Money(int i)", "testcase": false, "constructor": true}, {"identifier": "Money", "parameters": "(BigDecimal amount)", "modifiers": "public", "return": "", "signature": " Money(BigDecimal amount)", "full_signature": "public  Money(BigDecimal amount)", "class_method_signature": "Money.Money(BigDecimal amount)", "testcase": false, "constructor": true}, {"identifier": "isGreaterThanOrEqual", "parameters": "(Money other)", "modifiers": "public", "return": "boolean", "signature": "boolean isGreaterThanOrEqual(Money other)", "full_signature": "public boolean isGreaterThanOrEqual(Money other)", "class_method_signature": "Money.isGreaterThanOrEqual(Money other)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Money other)", "modifiers": "public", "return": "Money", "signature": "Money add(Money other)", "full_signature": "public Money add(Money other)", "class_method_signature": "Money.add(Money other)", "testcase": false, "constructor": false}, {"identifier": "subtract", "parameters": "(Money other)", "modifiers": "public", "return": "Money", "signature": "Money subtract(Money other)", "full_signature": "public Money subtract(Money other)", "class_method_signature": "Money.subtract(Money other)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Money.toString()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Money.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Money.hashCode()", "testcase": false, "constructor": false}, {"identifier": "getAmount", "parameters": "()", "modifiers": "public", "return": "BigDecimal", "signature": "BigDecimal getAmount()", "full_signature": "public BigDecimal getAmount()", "class_method_signature": "Money.getAmount()", "testcase": false, "constructor": false}, {"identifier": "setAmount", "parameters": "(BigDecimal amount)", "modifiers": "public", "return": "void", "signature": "void setAmount(BigDecimal amount)", "full_signature": "public void setAmount(BigDecimal amount)", "class_method_signature": "Money.setAmount(BigDecimal amount)", "testcase": false, "constructor": false}], "file": "common/src/main/java/net/chrisrichardson/eventstore/examples/customersandorders/common/domain/Money.java"}, "focal_method": {"identifier": "getAmount", "parameters": "()", "modifiers": "public", "return": "BigDecimal", "body": "public BigDecimal getAmount() {\n    return amount;\n  }", "signature": "BigDecimal getAmount()", "full_signature": "public BigDecimal getAmount()", "class_method_signature": "Money.getAmount()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 212184596, "url": "https://github.com/eventuate-examples/eventuate-micronaut-examples-customers-and-orders", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 2529, "license": "licensed"}}