{"test_class": {"identifier": "SamplingTest", "superclass": "", "interfaces": "", "fields": [], "file": "telemetry-lib/src/test/java/com/yammer/telemetry/tracing/SamplingTest.java"}, "test_case": {"identifier": "testSamplingOnAlwaysSamples", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSamplingOnAlwaysSamples() {\n        Sampling sampler = Sampling.ON;\n\n        for (int i = 0; i < 10; i++) {\n            assertTrue(sampler.trace());\n        }\n    }", "signature": "void testSamplingOnAlwaysSamples()", "full_signature": "@Test public void testSamplingOnAlwaysSamples()", "class_method_signature": "SamplingTest.testSamplingOnAlwaysSamples()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "trace"]}, "focal_class": {"identifier": "Sampling", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final Sampling ON = new SamplingOn();", "modifier": "public static final", "type": "Sampling", "declarator": "ON = new SamplingOn()", "var_name": "ON"}, {"original_string": "public static final Sampling OFF = new SamplingOff();", "modifier": "public static final", "type": "Sampling", "declarator": "OFF = new SamplingOff()", "var_name": "OFF"}], "methods": [{"identifier": "trace", "parameters": "()", "modifiers": "public abstract", "return": "boolean", "signature": "boolean trace()", "full_signature": "public abstract boolean trace()", "class_method_signature": "Sampling.trace()", "testcase": false, "constructor": false}, {"identifier": "valueOf", "parameters": "(String samplerName)", "modifiers": "public static", "return": "Sampling", "signature": "Sampling valueOf(String samplerName)", "full_signature": "public static Sampling valueOf(String samplerName)", "class_method_signature": "Sampling.valueOf(String samplerName)", "testcase": false, "constructor": false}], "file": "telemetry-lib/src/main/java/com/yammer/telemetry/tracing/Sampling.java"}, "focal_method": {"identifier": "trace", "parameters": "()", "modifiers": "public abstract", "return": "boolean", "body": "public abstract boolean trace();", "signature": "boolean trace()", "full_signature": "public abstract boolean trace()", "class_method_signature": "Sampling.trace()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 11585818, "url": "https://github.com/yammer/telemetry", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 20, "size": 990, "license": "licensed"}}