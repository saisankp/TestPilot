{"test_class": {"identifier": "PosterSliderPresenterTest", "superclass": "extends UnitTest", "interfaces": "", "fields": [{"original_string": "@Mock private PosterSliderPresenter.View view;", "modifier": "@Mock private", "type": "PosterSliderPresenter.View", "declarator": "view", "var_name": "view"}, {"original_string": "private PosterSliderPresenter presenter;", "modifier": "private", "type": "PosterSliderPresenter", "declarator": "presenter", "var_name": "presenter"}], "file": "app/src/test/java/com/ru/devit/mediateka/presentation/posterslider/PosterSliderPresenterTest.java"}, "test_case": {"identifier": "shouldChangeCurrentPositionWhenPosterSlide", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldChangeCurrentPositionWhenPosterSlide(){\n        presenter.setView(view);\n        presenter.countPosters(2 , 10);\n\n        verify(view , times(1)).showCurrentPosition(\"3/10\"); // 3/10 because position start from 0 i.e currentPos += 1 :)\n    }", "signature": "void shouldChangeCurrentPositionWhenPosterSlide()", "full_signature": "@Test public void shouldChangeCurrentPositionWhenPosterSlide()", "class_method_signature": "PosterSliderPresenterTest.shouldChangeCurrentPositionWhenPosterSlide()", "testcase": true, "constructor": false, "invocations": ["setView", "countPosters", "showCurrentPosition", "verify", "times"]}, "focal_class": {"identifier": "PosterSliderPresenter", "superclass": "extends BasePresenter<PosterSliderPresenter.View>", "interfaces": "", "fields": [], "methods": [{"identifier": "PosterSliderPresenter", "parameters": "()", "modifiers": "@Inject public", "return": "", "signature": " PosterSliderPresenter()", "full_signature": "@Inject public  PosterSliderPresenter()", "class_method_signature": "PosterSliderPresenter.PosterSliderPresenter()", "testcase": false, "constructor": true}, {"identifier": "initialize", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initialize()", "full_signature": "@Override public void initialize()", "class_method_signature": "PosterSliderPresenter.initialize()", "testcase": false, "constructor": false}, {"identifier": "onDestroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onDestroy()", "full_signature": "@Override public void onDestroy()", "class_method_signature": "PosterSliderPresenter.onDestroy()", "testcase": false, "constructor": false}, {"identifier": "countPosters", "parameters": "(int currentItem, int count)", "modifiers": "", "return": "void", "signature": "void countPosters(int currentItem, int count)", "full_signature": " void countPosters(int currentItem, int count)", "class_method_signature": "PosterSliderPresenter.countPosters(int currentItem, int count)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/ru/devit/mediateka/presentation/posterslider/PosterSliderPresenter.java"}, "focal_method": {"identifier": "countPosters", "parameters": "(int currentItem, int count)", "modifiers": "", "return": "void", "body": "void countPosters(int currentItem, int count) {\n        currentItem += 1;\n        getView().showCurrentPosition(String.format(Locale.getDefault() , \"%d/%d\" , currentItem , count));\n    }", "signature": "void countPosters(int currentItem, int count)", "full_signature": " void countPosters(int currentItem, int count)", "class_method_signature": "PosterSliderPresenter.countPosters(int currentItem, int count)", "testcase": false, "constructor": false, "invocations": ["showCurrentPosition", "getView", "format", "getDefault"]}, "repository": {"repo_id": 132759831, "url": "https://github.com/Devit951/Mediateka", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 33, "size": 679, "license": "licensed"}}