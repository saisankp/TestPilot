{"test_class": {"identifier": "AssetGroupManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "compress/src/test/java/com/switchfly/compress/AssetGroupManagerTest.java"}, "test_case": {"identifier": "testAddAsset", "parameters": "()", "modifiers": "@Test() public", "return": "void", "body": "@Test()\n    public void testAddAsset() throws Exception {\n\n        AssetGroupManager assetGroupManager = new AssetGroupManager();\n\n        AssetGroup fooGroup = assetGroupManager.createGroup(\"foo\", AssetType.JAVASCRIPT);\n\n        Asset asset1 = new Asset();\n        asset1.setType(AssetType.JAVASCRIPT);\n        asset1.setGroup(\"foo\");\n\n        assetGroupManager.addAsset(asset1);\n\n        assertEquals(asset1, fooGroup.getAssets().get(0));\n    }", "signature": "void testAddAsset()", "full_signature": "@Test() public void testAddAsset()", "class_method_signature": "AssetGroupManagerTest.testAddAsset()", "testcase": true, "constructor": false, "invocations": ["createGroup", "setType", "setGroup", "addAsset", "assertEquals", "get", "getAssets"]}, "focal_class": {"identifier": "AssetGroupManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final LinkedHashMap<String, AssetGroup> _groups = new LinkedHashMap<String, AssetGroup>();", "modifier": "private final", "type": "LinkedHashMap<String, AssetGroup>", "declarator": "_groups = new LinkedHashMap<String, AssetGroup>()", "var_name": "_groups"}], "methods": [{"identifier": "AssetGroupManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " AssetGroupManager()", "full_signature": "public  AssetGroupManager()", "class_method_signature": "AssetGroupManager.AssetGroupManager()", "testcase": false, "constructor": true}, {"identifier": "createGroup", "parameters": "(String name, AssetType type)", "modifiers": "public", "return": "AssetGroup", "signature": "AssetGroup createGroup(String name, AssetType type)", "full_signature": "public AssetGroup createGroup(String name, AssetType type)", "class_method_signature": "AssetGroupManager.createGroup(String name, AssetType type)", "testcase": false, "constructor": false}, {"identifier": "getGroups", "parameters": "()", "modifiers": "public", "return": "List<AssetGroup>", "signature": "List<AssetGroup> getGroups()", "full_signature": "public List<AssetGroup> getGroups()", "class_method_signature": "AssetGroupManager.getGroups()", "testcase": false, "constructor": false}, {"identifier": "addAsset", "parameters": "(Asset asset)", "modifiers": "public", "return": "void", "signature": "void addAsset(Asset asset)", "full_signature": "public void addAsset(Asset asset)", "class_method_signature": "AssetGroupManager.addAsset(Asset asset)", "testcase": false, "constructor": false}], "file": "compress/src/main/java/com/switchfly/compress/AssetGroupManager.java"}, "focal_method": {"identifier": "addAsset", "parameters": "(Asset asset)", "modifiers": "public", "return": "void", "body": "public void addAsset(Asset asset) {\n        AssetGroup group = _groups.get(asset.getGroup() + \"-\" + asset.getType());\n        if (group == null) {\n            throw new IllegalArgumentException(\"AssetGroup does not exist for asset \" + asset);\n        }\n        group.addAsset(asset);\n    }", "signature": "void addAsset(Asset asset)", "full_signature": "public void addAsset(Asset asset)", "class_method_signature": "AssetGroupManager.addAsset(Asset asset)", "testcase": false, "constructor": false, "invocations": ["get", "getGroup", "getType", "addAsset"]}, "repository": {"repo_id": 5622726, "url": "https://github.com/switchfly/switchfly-java", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 752, "license": "licensed"}}