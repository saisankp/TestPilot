{"test_class": {"identifier": "UnsafeByteArrayOutputStreamTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-common/src/test/java/com/alibaba/dubbo/common/io/UnsafeByteArrayOutputStreamTest.java"}, "test_case": {"identifier": "testToByteBuffer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToByteBuffer() {\n        UnsafeByteArrayOutputStream outputStream = new UnsafeByteArrayOutputStream(1);\n        outputStream.write((int) 'a');\n\n        ByteBuffer byteBuffer = outputStream.toByteBuffer();\n        assertThat(byteBuffer.get(), is(\"a\".getBytes()[0]));\n    }", "signature": "void testToByteBuffer()", "full_signature": "@Test public void testToByteBuffer()", "class_method_signature": "UnsafeByteArrayOutputStreamTest.testToByteBuffer()", "testcase": true, "constructor": false, "invocations": ["write", "toByteBuffer", "assertThat", "get", "is", "getBytes"]}, "focal_class": {"identifier": "UnsafeByteArrayOutputStream", "superclass": "extends OutputStream", "interfaces": "", "fields": [{"original_string": "protected byte mBuffer[];", "modifier": "protected", "type": "byte", "declarator": "mBuffer[]", "var_name": "mBuffer"}, {"original_string": "protected int mCount;", "modifier": "protected", "type": "int", "declarator": "mCount", "var_name": "mCount"}], "methods": [{"identifier": "UnsafeByteArrayOutputStream", "parameters": "()", "modifiers": "public", "return": "", "signature": " UnsafeByteArrayOutputStream()", "full_signature": "public  UnsafeByteArrayOutputStream()", "class_method_signature": "UnsafeByteArrayOutputStream.UnsafeByteArrayOutputStream()", "testcase": false, "constructor": true}, {"identifier": "UnsafeByteArrayOutputStream", "parameters": "(int size)", "modifiers": "public", "return": "", "signature": " UnsafeByteArrayOutputStream(int size)", "full_signature": "public  UnsafeByteArrayOutputStream(int size)", "class_method_signature": "UnsafeByteArrayOutputStream.UnsafeByteArrayOutputStream(int size)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(int b)", "modifiers": "@Override public", "return": "void", "signature": "void write(int b)", "full_signature": "@Override public void write(int b)", "class_method_signature": "UnsafeByteArrayOutputStream.write(int b)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(byte b[], int off, int len)", "modifiers": "@Override public", "return": "void", "signature": "void write(byte b[], int off, int len)", "full_signature": "@Override public void write(byte b[], int off, int len)", "class_method_signature": "UnsafeByteArrayOutputStream.write(byte b[], int off, int len)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "UnsafeByteArrayOutputStream.size()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reset()", "full_signature": "public void reset()", "class_method_signature": "UnsafeByteArrayOutputStream.reset()", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] toByteArray()", "full_signature": "public byte[] toByteArray()", "class_method_signature": "UnsafeByteArrayOutputStream.toByteArray()", "testcase": false, "constructor": false}, {"identifier": "toByteBuffer", "parameters": "()", "modifiers": "public", "return": "ByteBuffer", "signature": "ByteBuffer toByteBuffer()", "full_signature": "public ByteBuffer toByteBuffer()", "class_method_signature": "UnsafeByteArrayOutputStream.toByteBuffer()", "testcase": false, "constructor": false}, {"identifier": "writeTo", "parameters": "(OutputStream out)", "modifiers": "public", "return": "void", "signature": "void writeTo(OutputStream out)", "full_signature": "public void writeTo(OutputStream out)", "class_method_signature": "UnsafeByteArrayOutputStream.writeTo(OutputStream out)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "UnsafeByteArrayOutputStream.toString()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(String charset)", "modifiers": "public", "return": "String", "signature": "String toString(String charset)", "full_signature": "public String toString(String charset)", "class_method_signature": "UnsafeByteArrayOutputStream.toString(String charset)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "UnsafeByteArrayOutputStream.close()", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/com/alibaba/dubbo/common/io/UnsafeByteArrayOutputStream.java"}, "focal_method": {"identifier": "toByteBuffer", "parameters": "()", "modifiers": "public", "return": "ByteBuffer", "body": "public ByteBuffer toByteBuffer() {\n        return ByteBuffer.wrap(mBuffer, 0, mCount);\n    }", "signature": "ByteBuffer toByteBuffer()", "full_signature": "public ByteBuffer toByteBuffer()", "class_method_signature": "UnsafeByteArrayOutputStream.toByteBuffer()", "testcase": false, "constructor": false, "invocations": ["wrap"]}, "repository": {"repo_id": 189562861, "url": "https://github.com/smallFive55/dubbo-dubbo-2.6.6", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 1428, "license": "licensed"}}