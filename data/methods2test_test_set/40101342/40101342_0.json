{"test_class": {"identifier": "OracleDataLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "RelationalDatabaseLoader loader = new OracleDataLoader();", "modifier": "", "type": "RelationalDatabaseLoader", "declarator": "loader = new OracleDataLoader()", "var_name": "loader"}], "file": "hbase-sql/src/test/java/org/apache/hadoop/hbase/ext/loader/impl/OracleDataLoaderTest.java"}, "test_case": {"identifier": "testLoadTable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLoadTable() {\n        String tableName = \"report1\";\n        this.loader.loadTable(tableName, new String[] { \"TIME_ID\", \"AREA_ID\",\n                \"SVC_BRND_ID\" });\n    }", "signature": "void testLoadTable()", "full_signature": "@Test public void testLoadTable()", "class_method_signature": "OracleDataLoaderTest.testLoadTable()", "testcase": true, "constructor": false, "invocations": ["loadTable"]}, "focal_class": {"identifier": "OracleDataLoader", "superclass": "", "interfaces": "implements RelationalDatabaseLoader", "fields": [{"original_string": "private ResultSetHandler<List<Map<String, Object>>> resultSetHandler = new ListMapHandler();", "modifier": "private", "type": "ResultSetHandler<List<Map<String, Object>>>", "declarator": "resultSetHandler = new ListMapHandler()", "var_name": "resultSetHandler"}], "methods": [{"identifier": "loadTable", "parameters": "(String tableName, String[] pkColumnNames)", "modifiers": "@Override public", "return": "void", "signature": "void loadTable(String tableName, String[] pkColumnNames)", "full_signature": "@Override public void loadTable(String tableName, String[] pkColumnNames)", "class_method_signature": "OracleDataLoader.loadTable(String tableName, String[] pkColumnNames)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(String tableName)", "modifiers": "private", "return": "List<Map<String, Object>>", "signature": "List<Map<String, Object>> query(String tableName)", "full_signature": "private List<Map<String, Object>> query(String tableName)", "class_method_signature": "OracleDataLoader.query(String tableName)", "testcase": false, "constructor": false}, {"identifier": "getConnection", "parameters": "()", "modifiers": "private", "return": "Connection", "signature": "Connection getConnection()", "full_signature": "private Connection getConnection()", "class_method_signature": "OracleDataLoader.getConnection()", "testcase": false, "constructor": false}], "file": "hbase-sql/src/main/java/org/apache/hadoop/hbase/ext/loader/impl/OracleDataLoader.java"}, "focal_method": {"identifier": "loadTable", "parameters": "(String tableName, String[] pkColumnNames)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void loadTable(String tableName, String[] pkColumnNames) {\n        List<Map<String, Object>> rows = query(tableName);\n        HbaseUtil.create(tableName, new String[] { DEFAULT_COLUMN_FAMILY });\n        HbaseUtil.put(tableName, DEFAULT_COLUMN_FAMILY, rows, pkColumnNames);\n    }", "signature": "void loadTable(String tableName, String[] pkColumnNames)", "full_signature": "@Override public void loadTable(String tableName, String[] pkColumnNames)", "class_method_signature": "OracleDataLoader.loadTable(String tableName, String[] pkColumnNames)", "testcase": false, "constructor": false, "invocations": ["query", "create", "put"]}, "repository": {"repo_id": 40101342, "url": "https://github.com/ufologist/hbase-sql", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 13, "size": 1604, "license": "licensed"}}