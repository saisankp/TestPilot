{"test_class": {"identifier": "MonomerTest", "superclass": "extends AbstractMonomerTest", "interfaces": "", "fields": [], "file": "base/silent/src/test/java/org/openscience/cdk/silent/MonomerTest.java"}, "test_case": {"identifier": "testMonomer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMonomer() {\n        IMonomer oMonomer = new Monomer();\n        Assert.assertNotNull(oMonomer);\n    }", "signature": "void testMonomer()", "full_signature": "@Test public void testMonomer()", "class_method_signature": "MonomerTest.testMonomer()", "testcase": true, "constructor": false, "invocations": ["assertNotNull"]}, "focal_class": {"identifier": "Monomer", "superclass": "extends AtomContainer", "interfaces": "implements Serializable, IMonomer, Cloneable", "fields": [{"original_string": "private static final long serialVersionUID = -6084164963937650703L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -6084164963937650703L", "var_name": "serialVersionUID"}, {"original_string": "private String            monomerName;", "modifier": "private", "type": "String", "declarator": "monomerName", "var_name": "monomerName"}, {"original_string": "private String            monomerType;", "modifier": "private", "type": "String", "declarator": "monomerType", "var_name": "monomerType"}], "methods": [{"identifier": "Monomer", "parameters": "()", "modifiers": "public", "return": "", "signature": " Monomer()", "full_signature": "public  Monomer()", "class_method_signature": "Monomer.Monomer()", "testcase": false, "constructor": true}, {"identifier": "getMonomerName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getMonomerName()", "full_signature": "@Override public String getMonomerName()", "class_method_signature": "Monomer.getMonomerName()", "testcase": false, "constructor": false}, {"identifier": "getMonomerType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getMonomerType()", "full_signature": "@Override public String getMonomerType()", "class_method_signature": "Monomer.getMonomerType()", "testcase": false, "constructor": false}, {"identifier": "setMonomerName", "parameters": "(String cMonomerName)", "modifiers": "@Override public", "return": "void", "signature": "void setMonomerName(String cMonomerName)", "full_signature": "@Override public void setMonomerName(String cMonomerName)", "class_method_signature": "Monomer.setMonomerName(String cMonomerName)", "testcase": false, "constructor": false}, {"identifier": "setMonomerType", "parameters": "(String cMonomerType)", "modifiers": "@Override public", "return": "void", "signature": "void setMonomerType(String cMonomerType)", "full_signature": "@Override public void setMonomerType(String cMonomerType)", "class_method_signature": "Monomer.setMonomerType(String cMonomerType)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "IMonomer", "signature": "IMonomer clone()", "full_signature": "@Override public IMonomer clone()", "class_method_signature": "Monomer.clone()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Monomer.toString()", "testcase": false, "constructor": false}], "file": "base/silent/src/main/java/org/openscience/cdk/silent/Monomer.java"}, "focal_method": {"identifier": "Monomer", "parameters": "()", "modifiers": "public", "return": "", "body": "public Monomer() {\n        super();\n    }", "signature": " Monomer()", "full_signature": "public  Monomer()", "class_method_signature": "Monomer.Monomer()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}