{"test_class": {"identifier": "DefaultWebApplicationTest", "superclass": "", "interfaces": "", "fields": [], "file": "webapp/impl/src/test/java/cloud/piranha/webapp/impl/DefaultWebApplicationTest.java"}, "test_case": {"identifier": "testGetAttribute", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testGetAttribute() {\n        DefaultWebApplication webApp = new DefaultWebApplication();\n        assertThrows(NullPointerException.class, () -> webApp.getAttribute(null));\n    }", "signature": "void testGetAttribute()", "full_signature": "@Test void testGetAttribute()", "class_method_signature": "DefaultWebApplicationTest.testGetAttribute()", "testcase": true, "constructor": false, "invocations": ["assertThrows", "getAttribute"]}, "focal_class": {"identifier": "DefaultWebApplication", "superclass": "", "interfaces": "implements WebApplication", "fields": [{"original_string": "protected static final int SETUP = 0;", "modifier": "protected static final", "type": "int", "declarator": "SETUP = 0", "var_name": "SETUP"}, {"original_string": "protected static final int INITIALIZED_DECLARED = 4;", "modifier": "protected static final", "type": "int", "declarator": "INITIALIZED_DECLARED = 4", "var_name": "INITIALIZED_DECLARED"}, {"original_string": "protected static final int INITIALIZED = 1;", "modifier": "protected static final", "type": "int", "declarator": "INITIALIZED = 1", "var_name": "INITIALIZED"}, {"original_string": "protected static final int SERVICING = 2;", "modifier": "protected static final", "type": "int", "declarator": "SERVICING = 2", "var_name": "SERVICING"}, {"original_string": "protected static final int ERROR = 3;", "modifier": "protected static final", "type": "int", "declarator": "ERROR = 3", "var_name": "ERROR"}, {"original_string": "private static final Logger LOGGER = Logger.getLogger(DefaultWebApplication.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(DefaultWebApplication.class.getName())", "var_name": "LOGGER"}, {"original_string": "protected AsyncManager asyncManager;", "modifier": "protected", "type": "AsyncManager", "declarator": "asyncManager", "var_name": "asyncManager"}, {"original_string": "protected ClassLoader classLoader;", "modifier": "protected", "type": "ClassLoader", "declarator": "classLoader", "var_name": "classLoader"}, {"original_string": "protected String contextPath;", "modifier": "protected", "type": "String", "declarator": "contextPath", "var_name": "contextPath"}, {"original_string": "protected Servlet defaultServlet;", "modifier": "protected", "type": "Servlet", "declarator": "defaultServlet", "var_name": "defaultServlet"}, {"original_string": "protected boolean distributable;", "modifier": "protected", "type": "boolean", "declarator": "distributable", "var_name": "distributable"}, {"original_string": "protected int effectiveMajorVersion = -1;", "modifier": "protected", "type": "int", "declarator": "effectiveMajorVersion = -1", "var_name": "effectiveMajorVersion"}, {"original_string": "protected int effectiveMinorVersion = -1;", "modifier": "protected", "type": "int", "declarator": "effectiveMinorVersion = -1", "var_name": "effectiveMinorVersion"}, {"original_string": "protected String servletContextName;", "modifier": "protected", "type": "String", "declarator": "servletContextName", "var_name": "servletContextName"}, {"original_string": "protected String virtualServerName = \"server\";", "modifier": "protected", "type": "String", "declarator": "virtualServerName = \"server\"", "var_name": "virtualServerName"}, {"original_string": "protected String responseCharacterEncoding;", "modifier": "protected", "type": "String", "declarator": "responseCharacterEncoding", "var_name": "responseCharacterEncoding"}, {"original_string": "protected int status;", "modifier": "protected", "type": "int", "declarator": "status", "var_name": "status"}, {"original_string": "protected final Map<ServletResponse, ServletRequest> responses;", "modifier": "protected final", "type": "Map<ServletResponse, ServletRequest>", "declarator": "responses", "var_name": "responses"}, {"original_string": "protected final List<ServletContainerInitializer> initializers;", "modifier": "protected final", "type": "List<ServletContainerInitializer>", "declarator": "initializers", "var_name": "initializers"}, {"original_string": "protected final Map<String, String> initParameters;", "modifier": "protected final", "type": "Map<String, String>", "declarator": "initParameters", "var_name": "initParameters"}, {"original_string": "protected final Map<String, Object> attributes;", "modifier": "protected final", "type": "Map<String, Object>", "declarator": "attributes", "var_name": "attributes"}, {"original_string": "protected LocaleEncodingManager localeEncodingManager;", "modifier": "protected", "type": "LocaleEncodingManager", "declarator": "localeEncodingManager", "var_name": "localeEncodingManager"}, {"original_string": "protected final Map<String, DefaultServletEnvironment> servletEnvironments;", "modifier": "protected final", "type": "Map<String, DefaultServletEnvironment>", "declarator": "servletEnvironments", "var_name": "servletEnvironments"}, {"original_string": "protected final Map<String, DefaultFilterEnvironment> filters;", "modifier": "protected final", "type": "Map<String, DefaultFilterEnvironment>", "declarator": "filters", "var_name": "filters"}, {"original_string": "protected final List<ServletContextAttributeListener> contextAttributeListeners;", "modifier": "protected final", "type": "List<ServletContextAttributeListener>", "declarator": "contextAttributeListeners", "var_name": "contextAttributeListeners"}, {"original_string": "protected final List<ServletContextListener> declaredContextListeners;", "modifier": "protected final", "type": "List<ServletContextListener>", "declarator": "declaredContextListeners", "var_name": "declaredContextListeners"}, {"original_string": "protected final List<ServletContextListener> contextListeners;", "modifier": "protected final", "type": "List<ServletContextListener>", "declarator": "contextListeners", "var_name": "contextListeners"}, {"original_string": "protected final List<ServletRequestListener> requestListeners;", "modifier": "protected final", "type": "List<ServletRequestListener>", "declarator": "requestListeners", "var_name": "requestListeners"}, {"original_string": "protected ObjectInstanceManager objectInstanceManager;", "modifier": "protected", "type": "ObjectInstanceManager", "declarator": "objectInstanceManager", "var_name": "objectInstanceManager"}, {"original_string": "protected AnnotationManager annotationManager;", "modifier": "protected", "type": "AnnotationManager", "declarator": "annotationManager", "var_name": "annotationManager"}, {"original_string": "protected ResourceManager resourceManager;", "modifier": "protected", "type": "ResourceManager", "declarator": "resourceManager", "var_name": "resourceManager"}, {"original_string": "protected HttpSessionManager httpSessionManager;", "modifier": "protected", "type": "HttpSessionManager", "declarator": "httpSessionManager", "var_name": "httpSessionManager"}, {"original_string": "protected DefaultErrorPageManager errorPageManager;", "modifier": "protected", "type": "DefaultErrorPageManager", "declarator": "errorPageManager", "var_name": "errorPageManager"}, {"original_string": "protected SecurityManager securityManager;", "modifier": "protected", "type": "SecurityManager", "declarator": "securityManager", "var_name": "securityManager"}, {"original_string": "protected JspManager jspManager;", "modifier": "protected", "type": "JspManager", "declarator": "jspManager", "var_name": "jspManager"}, {"original_string": "protected LoggingManager loggingManager;", "modifier": "protected", "type": "LoggingManager", "declarator": "loggingManager", "var_name": "loggingManager"}, {"original_string": "protected HttpRequestManager httpRequestManager;", "modifier": "protected", "type": "HttpRequestManager", "declarator": "httpRequestManager", "var_name": "httpRequestManager"}, {"original_string": "protected MimeTypeManager mimeTypeManager;", "modifier": "protected", "type": "MimeTypeManager", "declarator": "mimeTypeManager", "var_name": "mimeTypeManager"}, {"original_string": "protected MultiPartManager multiPartManager;", "modifier": "protected", "type": "MultiPartManager", "declarator": "multiPartManager", "var_name": "multiPartManager"}, {"original_string": "protected String requestCharacterEncoding;", "modifier": "protected", "type": "String", "declarator": "requestCharacterEncoding", "var_name": "requestCharacterEncoding"}, {"original_string": "protected WebApplicationRequestMapper webApplicationRequestMapper;", "modifier": "protected", "type": "WebApplicationRequestMapper", "declarator": "webApplicationRequestMapper", "var_name": "webApplicationRequestMapper"}, {"original_string": "protected WelcomeFileManager welcomeFileManager;", "modifier": "protected", "type": "WelcomeFileManager", "declarator": "welcomeFileManager", "var_name": "welcomeFileManager"}, {"original_string": "protected DefaultInvocationFinder invocationFinder;", "modifier": "protected", "type": "DefaultInvocationFinder", "declarator": "invocationFinder", "var_name": "invocationFinder"}, {"original_string": "protected boolean tainted;", "modifier": "protected", "type": "boolean", "declarator": "tainted", "var_name": "tainted"}, {"original_string": "protected Object source;", "modifier": "protected", "type": "Object", "declarator": "source", "var_name": "source"}], "methods": [{"identifier": "DefaultWebApplication", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultWebApplication()", "full_signature": "public  DefaultWebApplication()", "class_method_signature": "DefaultWebApplication.DefaultWebApplication()", "testcase": false, "constructor": true}, {"identifier": "addFilter", "parameters": "(String filterName, Class<? extends Filter> filterClass)", "modifiers": "@Override public", "return": "FilterRegistration.Dynamic", "signature": "FilterRegistration.Dynamic addFilter(String filterName, Class<? extends Filter> filterClass)", "full_signature": "@Override public FilterRegistration.Dynamic addFilter(String filterName, Class<? extends Filter> filterClass)", "class_method_signature": "DefaultWebApplication.addFilter(String filterName, Class<? extends Filter> filterClass)", "testcase": false, "constructor": false}, {"identifier": "addFilter", "parameters": "(String filterName, String className)", "modifiers": "@Override public", "return": "FilterRegistration.Dynamic", "signature": "FilterRegistration.Dynamic addFilter(String filterName, String className)", "full_signature": "@Override public FilterRegistration.Dynamic addFilter(String filterName, String className)", "class_method_signature": "DefaultWebApplication.addFilter(String filterName, String className)", "testcase": false, "constructor": false}, {"identifier": "addFilter", "parameters": "(String filterName, Filter filter)", "modifiers": "@Override public", "return": "FilterRegistration.Dynamic", "signature": "FilterRegistration.Dynamic addFilter(String filterName, Filter filter)", "full_signature": "@Override public FilterRegistration.Dynamic addFilter(String filterName, Filter filter)", "class_method_signature": "DefaultWebApplication.addFilter(String filterName, Filter filter)", "testcase": false, "constructor": false}, {"identifier": "addFilterMapping", "parameters": "(Set<DispatcherType> dispatcherTypes, String filterName, boolean isMatchAfter, String... urlPatterns)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> addFilterMapping(Set<DispatcherType> dispatcherTypes, String filterName, boolean isMatchAfter, String... urlPatterns)", "full_signature": "@Override public Set<String> addFilterMapping(Set<DispatcherType> dispatcherTypes, String filterName, boolean isMatchAfter, String... urlPatterns)", "class_method_signature": "DefaultWebApplication.addFilterMapping(Set<DispatcherType> dispatcherTypes, String filterName, boolean isMatchAfter, String... urlPatterns)", "testcase": false, "constructor": false}, {"identifier": "addInitializer", "parameters": "(String className)", "modifiers": "@Override public", "return": "void", "signature": "void addInitializer(String className)", "full_signature": "@Override public void addInitializer(String className)", "class_method_signature": "DefaultWebApplication.addInitializer(String className)", "testcase": false, "constructor": false}, {"identifier": "addInitializer", "parameters": "(ServletContainerInitializer servletContainerInitializer)", "modifiers": "@Override public", "return": "void", "signature": "void addInitializer(ServletContainerInitializer servletContainerInitializer)", "full_signature": "@Override public void addInitializer(ServletContainerInitializer servletContainerInitializer)", "class_method_signature": "DefaultWebApplication.addInitializer(ServletContainerInitializer servletContainerInitializer)", "testcase": false, "constructor": false}, {"identifier": "addJspFile", "parameters": "(String servletName, String jspFile)", "modifiers": "@Override public", "return": "ServletRegistration.Dynamic", "signature": "ServletRegistration.Dynamic addJspFile(String servletName, String jspFile)", "full_signature": "@Override public ServletRegistration.Dynamic addJspFile(String servletName, String jspFile)", "class_method_signature": "DefaultWebApplication.addJspFile(String servletName, String jspFile)", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(String className)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "void", "signature": "void addListener(String className)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public void addListener(String className)", "class_method_signature": "DefaultWebApplication.addListener(String className)", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(Class<? extends EventListener> type)", "modifiers": "@Override public", "return": "void", "signature": "void addListener(Class<? extends EventListener> type)", "full_signature": "@Override public void addListener(Class<? extends EventListener> type)", "class_method_signature": "DefaultWebApplication.addListener(Class<? extends EventListener> type)", "testcase": false, "constructor": false}, {"identifier": "addListener", "parameters": "(T listener)", "modifiers": "@Override public", "return": "void", "signature": "void addListener(T listener)", "full_signature": "@Override public void addListener(T listener)", "class_method_signature": "DefaultWebApplication.addListener(T listener)", "testcase": false, "constructor": false}, {"identifier": "addResource", "parameters": "(Resource resource)", "modifiers": "@Override public", "return": "void", "signature": "void addResource(Resource resource)", "full_signature": "@Override public void addResource(Resource resource)", "class_method_signature": "DefaultWebApplication.addResource(Resource resource)", "testcase": false, "constructor": false}, {"identifier": "addServlet", "parameters": "(String servletName, Class<? extends Servlet> servletClass)", "modifiers": "@Override public", "return": "Dynamic", "signature": "Dynamic addServlet(String servletName, Class<? extends Servlet> servletClass)", "full_signature": "@Override public Dynamic addServlet(String servletName, Class<? extends Servlet> servletClass)", "class_method_signature": "DefaultWebApplication.addServlet(String servletName, Class<? extends Servlet> servletClass)", "testcase": false, "constructor": false}, {"identifier": "addServlet", "parameters": "(String servletName, String className)", "modifiers": "@Override public", "return": "Dynamic", "signature": "Dynamic addServlet(String servletName, String className)", "full_signature": "@Override public Dynamic addServlet(String servletName, String className)", "class_method_signature": "DefaultWebApplication.addServlet(String servletName, String className)", "testcase": false, "constructor": false}, {"identifier": "addServlet", "parameters": "(String servletName, Servlet servlet)", "modifiers": "@Override public", "return": "Dynamic", "signature": "Dynamic addServlet(String servletName, Servlet servlet)", "full_signature": "@Override public Dynamic addServlet(String servletName, Servlet servlet)", "class_method_signature": "DefaultWebApplication.addServlet(String servletName, Servlet servlet)", "testcase": false, "constructor": false}, {"identifier": "addServletMapping", "parameters": "(String servletName, String... urlPatterns)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> addServletMapping(String servletName, String... urlPatterns)", "full_signature": "@Override public Set<String> addServletMapping(String servletName, String... urlPatterns)", "class_method_signature": "DefaultWebApplication.addServletMapping(String servletName, String... urlPatterns)", "testcase": false, "constructor": false}, {"identifier": "addErrorPage", "parameters": "(int code, String location)", "modifiers": "@Override public", "return": "void", "signature": "void addErrorPage(int code, String location)", "full_signature": "@Override public void addErrorPage(int code, String location)", "class_method_signature": "DefaultWebApplication.addErrorPage(int code, String location)", "testcase": false, "constructor": false}, {"identifier": "addErrorPage", "parameters": "(String exception, String location)", "modifiers": "@Override public", "return": "void", "signature": "void addErrorPage(String exception, String location)", "full_signature": "@Override public void addErrorPage(String exception, String location)", "class_method_signature": "DefaultWebApplication.addErrorPage(String exception, String location)", "testcase": false, "constructor": false}, {"identifier": "createFilter", "parameters": "(Class<T> filterClass)", "modifiers": "@Override public", "return": "T", "signature": "T createFilter(Class<T> filterClass)", "full_signature": "@Override public T createFilter(Class<T> filterClass)", "class_method_signature": "DefaultWebApplication.createFilter(Class<T> filterClass)", "testcase": false, "constructor": false}, {"identifier": "createListener", "parameters": "(Class<T> clazz)", "modifiers": "@Override public", "return": "T", "signature": "T createListener(Class<T> clazz)", "full_signature": "@Override public T createListener(Class<T> clazz)", "class_method_signature": "DefaultWebApplication.createListener(Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "createServlet", "parameters": "(Class<T> servletClass)", "modifiers": "@Override public", "return": "T", "signature": "T createServlet(Class<T> servletClass)", "full_signature": "@Override public T createServlet(Class<T> servletClass)", "class_method_signature": "DefaultWebApplication.createServlet(Class<T> servletClass)", "testcase": false, "constructor": false}, {"identifier": "declareRoles", "parameters": "(String... roles)", "modifiers": "@Override public", "return": "void", "signature": "void declareRoles(String... roles)", "full_signature": "@Override public void declareRoles(String... roles)", "class_method_signature": "DefaultWebApplication.declareRoles(String... roles)", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void destroy()", "full_signature": "@Override public void destroy()", "class_method_signature": "DefaultWebApplication.destroy()", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String name)", "modifiers": "@Override public", "return": "Object", "signature": "Object getAttribute(String name)", "full_signature": "@Override public Object getAttribute(String name)", "class_method_signature": "DefaultWebApplication.getAttribute(String name)", "testcase": false, "constructor": false}, {"identifier": "getAttributeNames", "parameters": "()", "modifiers": "@Override public", "return": "Enumeration<String>", "signature": "Enumeration<String> getAttributeNames()", "full_signature": "@Override public Enumeration<String> getAttributeNames()", "class_method_signature": "DefaultWebApplication.getAttributeNames()", "testcase": false, "constructor": false}, {"identifier": "getDenyUncoveredHttpMethods", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getDenyUncoveredHttpMethods()", "full_signature": "@Override public boolean getDenyUncoveredHttpMethods()", "class_method_signature": "DefaultWebApplication.getDenyUncoveredHttpMethods()", "testcase": false, "constructor": false}, {"identifier": "getClassLoader", "parameters": "()", "modifiers": "@Override public", "return": "ClassLoader", "signature": "ClassLoader getClassLoader()", "full_signature": "@Override public ClassLoader getClassLoader()", "class_method_signature": "DefaultWebApplication.getClassLoader()", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "(String uripath)", "modifiers": "@Override public", "return": "ServletContext", "signature": "ServletContext getContext(String uripath)", "full_signature": "@Override public ServletContext getContext(String uripath)", "class_method_signature": "DefaultWebApplication.getContext(String uripath)", "testcase": false, "constructor": false}, {"identifier": "getContextPath", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getContextPath()", "full_signature": "@Override public String getContextPath()", "class_method_signature": "DefaultWebApplication.getContextPath()", "testcase": false, "constructor": false}, {"identifier": "getDefaultSessionTrackingModes", "parameters": "()", "modifiers": "@Override public", "return": "Set<SessionTrackingMode>", "signature": "Set<SessionTrackingMode> getDefaultSessionTrackingModes()", "full_signature": "@Override public Set<SessionTrackingMode> getDefaultSessionTrackingModes()", "class_method_signature": "DefaultWebApplication.getDefaultSessionTrackingModes()", "testcase": false, "constructor": false}, {"identifier": "getDefaultServlet", "parameters": "()", "modifiers": "@Override public", "return": "Servlet", "signature": "Servlet getDefaultServlet()", "full_signature": "@Override public Servlet getDefaultServlet()", "class_method_signature": "DefaultWebApplication.getDefaultServlet()", "testcase": false, "constructor": false}, {"identifier": "getObjectInstanceManager", "parameters": "()", "modifiers": "@Override public", "return": "ObjectInstanceManager", "signature": "ObjectInstanceManager getObjectInstanceManager()", "full_signature": "@Override public ObjectInstanceManager getObjectInstanceManager()", "class_method_signature": "DefaultWebApplication.getObjectInstanceManager()", "testcase": false, "constructor": false}, {"identifier": "getEffectiveMajorVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getEffectiveMajorVersion()", "full_signature": "@Override public int getEffectiveMajorVersion()", "class_method_signature": "DefaultWebApplication.getEffectiveMajorVersion()", "testcase": false, "constructor": false}, {"identifier": "getEffectiveMinorVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getEffectiveMinorVersion()", "full_signature": "@Override public int getEffectiveMinorVersion()", "class_method_signature": "DefaultWebApplication.getEffectiveMinorVersion()", "testcase": false, "constructor": false}, {"identifier": "setEffectiveMajorVersion", "parameters": "(int effectiveMajorVersion)", "modifiers": "@Override public", "return": "void", "signature": "void setEffectiveMajorVersion(int effectiveMajorVersion)", "full_signature": "@Override public void setEffectiveMajorVersion(int effectiveMajorVersion)", "class_method_signature": "DefaultWebApplication.setEffectiveMajorVersion(int effectiveMajorVersion)", "testcase": false, "constructor": false}, {"identifier": "setEffectiveMinorVersion", "parameters": "(int effectiveMinorVersion)", "modifiers": "@Override public", "return": "void", "signature": "void setEffectiveMinorVersion(int effectiveMinorVersion)", "full_signature": "@Override public void setEffectiveMinorVersion(int effectiveMinorVersion)", "class_method_signature": "DefaultWebApplication.setEffectiveMinorVersion(int effectiveMinorVersion)", "testcase": false, "constructor": false}, {"identifier": "getMultiPartManager", "parameters": "()", "modifiers": "@Override public", "return": "MultiPartManager", "signature": "MultiPartManager getMultiPartManager()", "full_signature": "@Override public MultiPartManager getMultiPartManager()", "class_method_signature": "DefaultWebApplication.getMultiPartManager()", "testcase": false, "constructor": false}, {"identifier": "getEffectiveSessionTrackingModes", "parameters": "()", "modifiers": "@Override public", "return": "Set<SessionTrackingMode>", "signature": "Set<SessionTrackingMode> getEffectiveSessionTrackingModes()", "full_signature": "@Override public Set<SessionTrackingMode> getEffectiveSessionTrackingModes()", "class_method_signature": "DefaultWebApplication.getEffectiveSessionTrackingModes()", "testcase": false, "constructor": false}, {"identifier": "getFilterRegistration", "parameters": "(String filterName)", "modifiers": "@Override public", "return": "FilterRegistration", "signature": "FilterRegistration getFilterRegistration(String filterName)", "full_signature": "@Override public FilterRegistration getFilterRegistration(String filterName)", "class_method_signature": "DefaultWebApplication.getFilterRegistration(String filterName)", "testcase": false, "constructor": false}, {"identifier": "getFilterRegistrations", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, ? extends FilterRegistration>", "signature": "Map<String, ? extends FilterRegistration> getFilterRegistrations()", "full_signature": "@Override public Map<String, ? extends FilterRegistration> getFilterRegistrations()", "class_method_signature": "DefaultWebApplication.getFilterRegistrations()", "testcase": false, "constructor": false}, {"identifier": "getInitParameter", "parameters": "(String name)", "modifiers": "@Override public", "return": "String", "signature": "String getInitParameter(String name)", "full_signature": "@Override public String getInitParameter(String name)", "class_method_signature": "DefaultWebApplication.getInitParameter(String name)", "testcase": false, "constructor": false}, {"identifier": "getInitParameterNames", "parameters": "()", "modifiers": "@Override public", "return": "Enumeration<String>", "signature": "Enumeration<String> getInitParameterNames()", "full_signature": "@Override public Enumeration<String> getInitParameterNames()", "class_method_signature": "DefaultWebApplication.getInitParameterNames()", "testcase": false, "constructor": false}, {"identifier": "getInitializers", "parameters": "()", "modifiers": "@Override public", "return": "List<ServletContainerInitializer>", "signature": "List<ServletContainerInitializer> getInitializers()", "full_signature": "@Override public List<ServletContainerInitializer> getInitializers()", "class_method_signature": "DefaultWebApplication.getInitializers()", "testcase": false, "constructor": false}, {"identifier": "getJspConfigDescriptor", "parameters": "()", "modifiers": "@Override public", "return": "JspConfigDescriptor", "signature": "JspConfigDescriptor getJspConfigDescriptor()", "full_signature": "@Override public JspConfigDescriptor getJspConfigDescriptor()", "class_method_signature": "DefaultWebApplication.getJspConfigDescriptor()", "testcase": false, "constructor": false}, {"identifier": "getMajorVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMajorVersion()", "full_signature": "@Override public int getMajorVersion()", "class_method_signature": "DefaultWebApplication.getMajorVersion()", "testcase": false, "constructor": false}, {"identifier": "getMappings", "parameters": "(String servletName)", "modifiers": "@Override public", "return": "Collection<String>", "signature": "Collection<String> getMappings(String servletName)", "full_signature": "@Override public Collection<String> getMappings(String servletName)", "class_method_signature": "DefaultWebApplication.getMappings(String servletName)", "testcase": false, "constructor": false}, {"identifier": "getMimeType", "parameters": "(String filename)", "modifiers": "@Override public", "return": "String", "signature": "String getMimeType(String filename)", "full_signature": "@Override public String getMimeType(String filename)", "class_method_signature": "DefaultWebApplication.getMimeType(String filename)", "testcase": false, "constructor": false}, {"identifier": "getMimeTypeManager", "parameters": "()", "modifiers": "@Override public", "return": "MimeTypeManager", "signature": "MimeTypeManager getMimeTypeManager()", "full_signature": "@Override public MimeTypeManager getMimeTypeManager()", "class_method_signature": "DefaultWebApplication.getMimeTypeManager()", "testcase": false, "constructor": false}, {"identifier": "getMinorVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMinorVersion()", "full_signature": "@Override public int getMinorVersion()", "class_method_signature": "DefaultWebApplication.getMinorVersion()", "testcase": false, "constructor": false}, {"identifier": "getRealPath", "parameters": "(String path)", "modifiers": "@Override public", "return": "String", "signature": "String getRealPath(String path)", "full_signature": "@Override public String getRealPath(String path)", "class_method_signature": "DefaultWebApplication.getRealPath(String path)", "testcase": false, "constructor": false}, {"identifier": "getRequest", "parameters": "(ServletResponse response)", "modifiers": "@Override public", "return": "ServletRequest", "signature": "ServletRequest getRequest(ServletResponse response)", "full_signature": "@Override public ServletRequest getRequest(ServletResponse response)", "class_method_signature": "DefaultWebApplication.getRequest(ServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getRequestCharacterEncoding", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getRequestCharacterEncoding()", "full_signature": "@Override public String getRequestCharacterEncoding()", "class_method_signature": "DefaultWebApplication.getRequestCharacterEncoding()", "testcase": false, "constructor": false}, {"identifier": "getResponseCharacterEncoding", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getResponseCharacterEncoding()", "full_signature": "@Override public String getResponseCharacterEncoding()", "class_method_signature": "DefaultWebApplication.getResponseCharacterEncoding()", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "(String location)", "modifiers": "@Override public", "return": "URL", "signature": "URL getResource(String location)", "full_signature": "@Override public URL getResource(String location)", "class_method_signature": "DefaultWebApplication.getResource(String location)", "testcase": false, "constructor": false}, {"identifier": "getResourceAsStream", "parameters": "(String location)", "modifiers": "@Override public", "return": "InputStream", "signature": "InputStream getResourceAsStream(String location)", "full_signature": "@Override public InputStream getResourceAsStream(String location)", "class_method_signature": "DefaultWebApplication.getResourceAsStream(String location)", "testcase": false, "constructor": false}, {"identifier": "getFileOrFirstFolder", "parameters": "(String path, String resource)", "modifiers": "private", "return": "String", "signature": "String getFileOrFirstFolder(String path, String resource)", "full_signature": "private String getFileOrFirstFolder(String path, String resource)", "class_method_signature": "DefaultWebApplication.getFileOrFirstFolder(String path, String resource)", "testcase": false, "constructor": false}, {"identifier": "getResourcePathsImpl", "parameters": "(String path)", "modifiers": "private", "return": "Set<String>", "signature": "Set<String> getResourcePathsImpl(String path)", "full_signature": "private Set<String> getResourcePathsImpl(String path)", "class_method_signature": "DefaultWebApplication.getResourcePathsImpl(String path)", "testcase": false, "constructor": false}, {"identifier": "getResourcePaths", "parameters": "(String path)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getResourcePaths(String path)", "full_signature": "@Override public Set<String> getResourcePaths(String path)", "class_method_signature": "DefaultWebApplication.getResourcePaths(String path)", "testcase": false, "constructor": false}, {"identifier": "getResponse", "parameters": "(ServletRequest request)", "modifiers": "@Override public", "return": "ServletResponse", "signature": "ServletResponse getResponse(ServletRequest request)", "full_signature": "@Override public ServletResponse getResponse(ServletRequest request)", "class_method_signature": "DefaultWebApplication.getResponse(ServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "getSecurityManager", "parameters": "()", "modifiers": "@Override public", "return": "SecurityManager", "signature": "SecurityManager getSecurityManager()", "full_signature": "@Override public SecurityManager getSecurityManager()", "class_method_signature": "DefaultWebApplication.getSecurityManager()", "testcase": false, "constructor": false}, {"identifier": "getAnnotationManager", "parameters": "()", "modifiers": "@Override public", "return": "AnnotationManager", "signature": "AnnotationManager getAnnotationManager()", "full_signature": "@Override public AnnotationManager getAnnotationManager()", "class_method_signature": "DefaultWebApplication.getAnnotationManager()", "testcase": false, "constructor": false}, {"identifier": "setAnnotationManager", "parameters": "(AnnotationManager annotationManager)", "modifiers": "@Override public", "return": "void", "signature": "void setAnnotationManager(AnnotationManager annotationManager)", "full_signature": "@Override public void setAnnotationManager(AnnotationManager annotationManager)", "class_method_signature": "DefaultWebApplication.setAnnotationManager(AnnotationManager annotationManager)", "testcase": false, "constructor": false}, {"identifier": "getServerInfo", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getServerInfo()", "full_signature": "@Override public String getServerInfo()", "class_method_signature": "DefaultWebApplication.getServerInfo()", "testcase": false, "constructor": false}, {"identifier": "getServlet", "parameters": "(String name)", "modifiers": "@Deprecated @Override public", "return": "Servlet", "signature": "Servlet getServlet(String name)", "full_signature": "@Deprecated @Override public Servlet getServlet(String name)", "class_method_signature": "DefaultWebApplication.getServlet(String name)", "testcase": false, "constructor": false}, {"identifier": "getServletContextName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getServletContextName()", "full_signature": "@Override public String getServletContextName()", "class_method_signature": "DefaultWebApplication.getServletContextName()", "testcase": false, "constructor": false}, {"identifier": "getServletNames", "parameters": "()", "modifiers": "@Deprecated @Override public", "return": "Enumeration<String>", "signature": "Enumeration<String> getServletNames()", "full_signature": "@Deprecated @Override public Enumeration<String> getServletNames()", "class_method_signature": "DefaultWebApplication.getServletNames()", "testcase": false, "constructor": false}, {"identifier": "getServletRegistration", "parameters": "(String servletName)", "modifiers": "@Override public", "return": "ServletRegistration", "signature": "ServletRegistration getServletRegistration(String servletName)", "full_signature": "@Override public ServletRegistration getServletRegistration(String servletName)", "class_method_signature": "DefaultWebApplication.getServletRegistration(String servletName)", "testcase": false, "constructor": false}, {"identifier": "getServletRegistrations", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, ? extends ServletRegistration>", "signature": "Map<String, ? extends ServletRegistration> getServletRegistrations()", "full_signature": "@Override public Map<String, ? extends ServletRegistration> getServletRegistrations()", "class_method_signature": "DefaultWebApplication.getServletRegistrations()", "testcase": false, "constructor": false}, {"identifier": "getServlets", "parameters": "()", "modifiers": "@Deprecated @Override public", "return": "Enumeration<Servlet>", "signature": "Enumeration<Servlet> getServlets()", "full_signature": "@Deprecated @Override public Enumeration<Servlet> getServlets()", "class_method_signature": "DefaultWebApplication.getServlets()", "testcase": false, "constructor": false}, {"identifier": "getSessionCookieConfig", "parameters": "()", "modifiers": "@Override public", "return": "SessionCookieConfig", "signature": "SessionCookieConfig getSessionCookieConfig()", "full_signature": "@Override public SessionCookieConfig getSessionCookieConfig()", "class_method_signature": "DefaultWebApplication.getSessionCookieConfig()", "testcase": false, "constructor": false}, {"identifier": "getSessionTimeout", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getSessionTimeout()", "full_signature": "@Override public int getSessionTimeout()", "class_method_signature": "DefaultWebApplication.getSessionTimeout()", "testcase": false, "constructor": false}, {"identifier": "getHttpSessionManager", "parameters": "()", "modifiers": "@Override public", "return": "HttpSessionManager", "signature": "HttpSessionManager getHttpSessionManager()", "full_signature": "@Override public HttpSessionManager getHttpSessionManager()", "class_method_signature": "DefaultWebApplication.getHttpSessionManager()", "testcase": false, "constructor": false}, {"identifier": "getVirtualServerName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getVirtualServerName()", "full_signature": "@Override public String getVirtualServerName()", "class_method_signature": "DefaultWebApplication.getVirtualServerName()", "testcase": false, "constructor": false}, {"identifier": "getWelcomeFileManager", "parameters": "()", "modifiers": "@Override public", "return": "WelcomeFileManager", "signature": "WelcomeFileManager getWelcomeFileManager()", "full_signature": "@Override public WelcomeFileManager getWelcomeFileManager()", "class_method_signature": "DefaultWebApplication.getWelcomeFileManager()", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initialize()", "full_signature": "@Override public void initialize()", "class_method_signature": "DefaultWebApplication.initialize()", "testcase": false, "constructor": false}, {"identifier": "initializeDeclaredFinish", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initializeDeclaredFinish()", "full_signature": "@Override public void initializeDeclaredFinish()", "class_method_signature": "DefaultWebApplication.initializeDeclaredFinish()", "testcase": false, "constructor": false}, {"identifier": "initializeFinish", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initializeFinish()", "full_signature": "@Override public void initializeFinish()", "class_method_signature": "DefaultWebApplication.initializeFinish()", "testcase": false, "constructor": false}, {"identifier": "initializeFilters", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initializeFilters()", "full_signature": "@Override public void initializeFilters()", "class_method_signature": "DefaultWebApplication.initializeFilters()", "testcase": false, "constructor": false}, {"identifier": "initializeInitializers", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initializeInitializers()", "full_signature": "@Override public void initializeInitializers()", "class_method_signature": "DefaultWebApplication.initializeInitializers()", "testcase": false, "constructor": false}, {"identifier": "initializeServlets", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void initializeServlets()", "full_signature": "@Override public void initializeServlets()", "class_method_signature": "DefaultWebApplication.initializeServlets()", "testcase": false, "constructor": false}, {"identifier": "isDistributable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDistributable()", "full_signature": "@Override public boolean isDistributable()", "class_method_signature": "DefaultWebApplication.isDistributable()", "testcase": false, "constructor": false}, {"identifier": "isInitialized", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isInitialized()", "full_signature": "@Override public boolean isInitialized()", "class_method_signature": "DefaultWebApplication.isInitialized()", "testcase": false, "constructor": false}, {"identifier": "initializeServlet", "parameters": "(DefaultServletEnvironment environment)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "void", "signature": "void initializeServlet(DefaultServletEnvironment environment)", "full_signature": "@SuppressWarnings(\"unchecked\") private void initializeServlet(DefaultServletEnvironment environment)", "class_method_signature": "DefaultWebApplication.initializeServlet(DefaultServletEnvironment environment)", "testcase": false, "constructor": false}, {"identifier": "linkRequestAndResponse", "parameters": "(ServletRequest request, ServletResponse response)", "modifiers": "@Override public", "return": "void", "signature": "void linkRequestAndResponse(ServletRequest request, ServletResponse response)", "full_signature": "@Override public void linkRequestAndResponse(ServletRequest request, ServletResponse response)", "class_method_signature": "DefaultWebApplication.linkRequestAndResponse(ServletRequest request, ServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(Exception exception, String message)", "modifiers": "@Deprecated @Override public", "return": "void", "signature": "void log(Exception exception, String message)", "full_signature": "@Deprecated @Override public void log(Exception exception, String message)", "class_method_signature": "DefaultWebApplication.log(Exception exception, String message)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(String message, Throwable throwable)", "modifiers": "@Override public", "return": "void", "signature": "void log(String message, Throwable throwable)", "full_signature": "@Override public void log(String message, Throwable throwable)", "class_method_signature": "DefaultWebApplication.log(String message, Throwable throwable)", "testcase": false, "constructor": false}, {"identifier": "log", "parameters": "(String message)", "modifiers": "@Override public", "return": "void", "signature": "void log(String message)", "full_signature": "@Override public void log(String message)", "class_method_signature": "DefaultWebApplication.log(String message)", "testcase": false, "constructor": false}, {"identifier": "removeAttribute", "parameters": "(String name)", "modifiers": "@Override public", "return": "void", "signature": "void removeAttribute(String name)", "full_signature": "@Override public void removeAttribute(String name)", "class_method_signature": "DefaultWebApplication.removeAttribute(String name)", "testcase": false, "constructor": false}, {"identifier": "service", "parameters": "(ServletRequest request, ServletResponse response)", "modifiers": "@Override public", "return": "void", "signature": "void service(ServletRequest request, ServletResponse response)", "full_signature": "@Override public void service(ServletRequest request, ServletResponse response)", "class_method_signature": "DefaultWebApplication.service(ServletRequest request, ServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "setAttribute", "parameters": "(String name, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void setAttribute(String name, Object value)", "full_signature": "@Override public void setAttribute(String name, Object value)", "class_method_signature": "DefaultWebApplication.setAttribute(String name, Object value)", "testcase": false, "constructor": false}, {"identifier": "setClassLoader", "parameters": "(ClassLoader classLoader)", "modifiers": "@Override public", "return": "void", "signature": "void setClassLoader(ClassLoader classLoader)", "full_signature": "@Override public void setClassLoader(ClassLoader classLoader)", "class_method_signature": "DefaultWebApplication.setClassLoader(ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "setContextPath", "parameters": "(String contextPath)", "modifiers": "@Override public", "return": "void", "signature": "void setContextPath(String contextPath)", "full_signature": "@Override public void setContextPath(String contextPath)", "class_method_signature": "DefaultWebApplication.setContextPath(String contextPath)", "testcase": false, "constructor": false}, {"identifier": "setDefaultServlet", "parameters": "(Servlet defaultServlet)", "modifiers": "@Override public", "return": "void", "signature": "void setDefaultServlet(Servlet defaultServlet)", "full_signature": "@Override public void setDefaultServlet(Servlet defaultServlet)", "class_method_signature": "DefaultWebApplication.setDefaultServlet(Servlet defaultServlet)", "testcase": false, "constructor": false}, {"identifier": "setDenyUncoveredHttpMethods", "parameters": "(boolean denyUncoveredHttpMethods)", "modifiers": "@Override public", "return": "void", "signature": "void setDenyUncoveredHttpMethods(boolean denyUncoveredHttpMethods)", "full_signature": "@Override public void setDenyUncoveredHttpMethods(boolean denyUncoveredHttpMethods)", "class_method_signature": "DefaultWebApplication.setDenyUncoveredHttpMethods(boolean denyUncoveredHttpMethods)", "testcase": false, "constructor": false}, {"identifier": "setDistributable", "parameters": "(boolean distributable)", "modifiers": "@Override public", "return": "void", "signature": "void setDistributable(boolean distributable)", "full_signature": "@Override public void setDistributable(boolean distributable)", "class_method_signature": "DefaultWebApplication.setDistributable(boolean distributable)", "testcase": false, "constructor": false}, {"identifier": "setHttpSessionManager", "parameters": "(HttpSessionManager httpSessionManager)", "modifiers": "@Override public", "return": "void", "signature": "void setHttpSessionManager(HttpSessionManager httpSessionManager)", "full_signature": "@Override public void setHttpSessionManager(HttpSessionManager httpSessionManager)", "class_method_signature": "DefaultWebApplication.setHttpSessionManager(HttpSessionManager httpSessionManager)", "testcase": false, "constructor": false}, {"identifier": "getHttpRequestManager", "parameters": "()", "modifiers": "@Override public", "return": "HttpRequestManager", "signature": "HttpRequestManager getHttpRequestManager()", "full_signature": "@Override public HttpRequestManager getHttpRequestManager()", "class_method_signature": "DefaultWebApplication.getHttpRequestManager()", "testcase": false, "constructor": false}, {"identifier": "setHttpRequestManager", "parameters": "(HttpRequestManager httpRequestManager)", "modifiers": "@Override public", "return": "void", "signature": "void setHttpRequestManager(HttpRequestManager httpRequestManager)", "full_signature": "@Override public void setHttpRequestManager(HttpRequestManager httpRequestManager)", "class_method_signature": "DefaultWebApplication.setHttpRequestManager(HttpRequestManager httpRequestManager)", "testcase": false, "constructor": false}, {"identifier": "setInitParameter", "parameters": "(String name, String value)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setInitParameter(String name, String value)", "full_signature": "@Override public boolean setInitParameter(String name, String value)", "class_method_signature": "DefaultWebApplication.setInitParameter(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "setJspManager", "parameters": "(JspManager jspManager)", "modifiers": "@Override public", "return": "void", "signature": "void setJspManager(JspManager jspManager)", "full_signature": "@Override public void setJspManager(JspManager jspManager)", "class_method_signature": "DefaultWebApplication.setJspManager(JspManager jspManager)", "testcase": false, "constructor": false}, {"identifier": "setLoggingManager", "parameters": "(LoggingManager loggingManager)", "modifiers": "@Override public", "return": "void", "signature": "void setLoggingManager(LoggingManager loggingManager)", "full_signature": "@Override public void setLoggingManager(LoggingManager loggingManager)", "class_method_signature": "DefaultWebApplication.setLoggingManager(LoggingManager loggingManager)", "testcase": false, "constructor": false}, {"identifier": "setMimeTypeManager", "parameters": "(MimeTypeManager mimeTypeManager)", "modifiers": "@Override public", "return": "void", "signature": "void setMimeTypeManager(MimeTypeManager mimeTypeManager)", "full_signature": "@Override public void setMimeTypeManager(MimeTypeManager mimeTypeManager)", "class_method_signature": "DefaultWebApplication.setMimeTypeManager(MimeTypeManager mimeTypeManager)", "testcase": false, "constructor": false}, {"identifier": "setMultiPartManager", "parameters": "(MultiPartManager multiPartManager)", "modifiers": "@Override public", "return": "void", "signature": "void setMultiPartManager(MultiPartManager multiPartManager)", "full_signature": "@Override public void setMultiPartManager(MultiPartManager multiPartManager)", "class_method_signature": "DefaultWebApplication.setMultiPartManager(MultiPartManager multiPartManager)", "testcase": false, "constructor": false}, {"identifier": "setObjectInstanceManager", "parameters": "(ObjectInstanceManager objectInstanceManager)", "modifiers": "@Override public", "return": "void", "signature": "void setObjectInstanceManager(ObjectInstanceManager objectInstanceManager)", "full_signature": "@Override public void setObjectInstanceManager(ObjectInstanceManager objectInstanceManager)", "class_method_signature": "DefaultWebApplication.setObjectInstanceManager(ObjectInstanceManager objectInstanceManager)", "testcase": false, "constructor": false}, {"identifier": "setRequestCharacterEncoding", "parameters": "(String requestCharacterEncoding)", "modifiers": "@Override public", "return": "void", "signature": "void setRequestCharacterEncoding(String requestCharacterEncoding)", "full_signature": "@Override public void setRequestCharacterEncoding(String requestCharacterEncoding)", "class_method_signature": "DefaultWebApplication.setRequestCharacterEncoding(String requestCharacterEncoding)", "testcase": false, "constructor": false}, {"identifier": "setResourceManager", "parameters": "(ResourceManager resourceManager)", "modifiers": "@Override public", "return": "void", "signature": "void setResourceManager(ResourceManager resourceManager)", "full_signature": "@Override public void setResourceManager(ResourceManager resourceManager)", "class_method_signature": "DefaultWebApplication.setResourceManager(ResourceManager resourceManager)", "testcase": false, "constructor": false}, {"identifier": "setResponseCharacterEncoding", "parameters": "(String responseCharacterEncoding)", "modifiers": "@Override public", "return": "void", "signature": "void setResponseCharacterEncoding(String responseCharacterEncoding)", "full_signature": "@Override public void setResponseCharacterEncoding(String responseCharacterEncoding)", "class_method_signature": "DefaultWebApplication.setResponseCharacterEncoding(String responseCharacterEncoding)", "testcase": false, "constructor": false}, {"identifier": "setSecurityManager", "parameters": "(SecurityManager securityManager)", "modifiers": "@Override public", "return": "void", "signature": "void setSecurityManager(SecurityManager securityManager)", "full_signature": "@Override public void setSecurityManager(SecurityManager securityManager)", "class_method_signature": "DefaultWebApplication.setSecurityManager(SecurityManager securityManager)", "testcase": false, "constructor": false}, {"identifier": "setServletContextName", "parameters": "(String servletContextName)", "modifiers": "@Override public", "return": "void", "signature": "void setServletContextName(String servletContextName)", "full_signature": "@Override public void setServletContextName(String servletContextName)", "class_method_signature": "DefaultWebApplication.setServletContextName(String servletContextName)", "testcase": false, "constructor": false}, {"identifier": "setSessionTrackingModes", "parameters": "(Set<SessionTrackingMode> sessionTrackingModes)", "modifiers": "@Override public", "return": "void", "signature": "void setSessionTrackingModes(Set<SessionTrackingMode> sessionTrackingModes)", "full_signature": "@Override public void setSessionTrackingModes(Set<SessionTrackingMode> sessionTrackingModes)", "class_method_signature": "DefaultWebApplication.setSessionTrackingModes(Set<SessionTrackingMode> sessionTrackingModes)", "testcase": false, "constructor": false}, {"identifier": "setSessionTimeout", "parameters": "(int sessionTimeout)", "modifiers": "@Override public", "return": "void", "signature": "void setSessionTimeout(int sessionTimeout)", "full_signature": "@Override public void setSessionTimeout(int sessionTimeout)", "class_method_signature": "DefaultWebApplication.setSessionTimeout(int sessionTimeout)", "testcase": false, "constructor": false}, {"identifier": "setVirtualServerName", "parameters": "(String virtualServerName)", "modifiers": "public", "return": "void", "signature": "void setVirtualServerName(String virtualServerName)", "full_signature": "public void setVirtualServerName(String virtualServerName)", "class_method_signature": "DefaultWebApplication.setVirtualServerName(String virtualServerName)", "testcase": false, "constructor": false}, {"identifier": "setWebApplicationRequestMapper", "parameters": "(WebApplicationRequestMapper webApplicationRequestMapper)", "modifiers": "@Override public", "return": "void", "signature": "void setWebApplicationRequestMapper(WebApplicationRequestMapper webApplicationRequestMapper)", "full_signature": "@Override public void setWebApplicationRequestMapper(WebApplicationRequestMapper webApplicationRequestMapper)", "class_method_signature": "DefaultWebApplication.setWebApplicationRequestMapper(WebApplicationRequestMapper webApplicationRequestMapper)", "testcase": false, "constructor": false}, {"identifier": "setWelcomeFileManager", "parameters": "(WelcomeFileManager welcomeFileManager)", "modifiers": "@Override public", "return": "void", "signature": "void setWelcomeFileManager(WelcomeFileManager welcomeFileManager)", "full_signature": "@Override public void setWelcomeFileManager(WelcomeFileManager welcomeFileManager)", "class_method_signature": "DefaultWebApplication.setWelcomeFileManager(WelcomeFileManager welcomeFileManager)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void start()", "full_signature": "@Override public void start()", "class_method_signature": "DefaultWebApplication.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void stop()", "full_signature": "@Override public void stop()", "class_method_signature": "DefaultWebApplication.stop()", "testcase": false, "constructor": false}, {"identifier": "unlinkRequestAndResponse", "parameters": "(ServletRequest request, ServletResponse response)", "modifiers": "@Override public", "return": "void", "signature": "void unlinkRequestAndResponse(ServletRequest request, ServletResponse response)", "full_signature": "@Override public void unlinkRequestAndResponse(ServletRequest request, ServletResponse response)", "class_method_signature": "DefaultWebApplication.unlinkRequestAndResponse(ServletRequest request, ServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getLocaleEncodingManager", "parameters": "()", "modifiers": "@Override public", "return": "LocaleEncodingManager", "signature": "LocaleEncodingManager getLocaleEncodingManager()", "full_signature": "@Override public LocaleEncodingManager getLocaleEncodingManager()", "class_method_signature": "DefaultWebApplication.getLocaleEncodingManager()", "testcase": false, "constructor": false}, {"identifier": "setLocaleEncodingManager", "parameters": "(LocaleEncodingManager localeEncodingManager)", "modifiers": "@Override public", "return": "void", "signature": "void setLocaleEncodingManager(LocaleEncodingManager localeEncodingManager)", "full_signature": "@Override public void setLocaleEncodingManager(LocaleEncodingManager localeEncodingManager)", "class_method_signature": "DefaultWebApplication.setLocaleEncodingManager(LocaleEncodingManager localeEncodingManager)", "testcase": false, "constructor": false}, {"identifier": "getRequestDispatcher", "parameters": "(String path)", "modifiers": "@Override public", "return": "DefaultServletRequestDispatcher", "signature": "DefaultServletRequestDispatcher getRequestDispatcher(String path)", "full_signature": "@Override public DefaultServletRequestDispatcher getRequestDispatcher(String path)", "class_method_signature": "DefaultWebApplication.getRequestDispatcher(String path)", "testcase": false, "constructor": false}, {"identifier": "getNamedDispatcher", "parameters": "(String name)", "modifiers": "@Override public", "return": "RequestDispatcher", "signature": "RequestDispatcher getNamedDispatcher(String name)", "full_signature": "@Override public RequestDispatcher getNamedDispatcher(String name)", "class_method_signature": "DefaultWebApplication.getNamedDispatcher(String name)", "testcase": false, "constructor": false}, {"identifier": "getAsyncManager", "parameters": "()", "modifiers": "@Override public", "return": "AsyncManager", "signature": "AsyncManager getAsyncManager()", "full_signature": "@Override public AsyncManager getAsyncManager()", "class_method_signature": "DefaultWebApplication.getAsyncManager()", "testcase": false, "constructor": false}, {"identifier": "getInvocationDispatcher", "parameters": "(DefaultServletInvocation servletInvocation)", "modifiers": "private", "return": "DefaultServletRequestDispatcher", "signature": "DefaultServletRequestDispatcher getInvocationDispatcher(DefaultServletInvocation servletInvocation)", "full_signature": "private DefaultServletRequestDispatcher getInvocationDispatcher(DefaultServletInvocation servletInvocation)", "class_method_signature": "DefaultWebApplication.getInvocationDispatcher(DefaultServletInvocation servletInvocation)", "testcase": false, "constructor": false}, {"identifier": "verifyRequestResponseTypes", "parameters": "(ServletRequest request, ServletResponse response)", "modifiers": "private", "return": "void", "signature": "void verifyRequestResponseTypes(ServletRequest request, ServletResponse response)", "full_signature": "private void verifyRequestResponseTypes(ServletRequest request, ServletResponse response)", "class_method_signature": "DefaultWebApplication.verifyRequestResponseTypes(ServletRequest request, ServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "verifyState", "parameters": "(int desiredStatus, String message)", "modifiers": "protected", "return": "void", "signature": "void verifyState(int desiredStatus, String message)", "full_signature": "protected void verifyState(int desiredStatus, String message)", "class_method_signature": "DefaultWebApplication.verifyState(int desiredStatus, String message)", "testcase": false, "constructor": false}, {"identifier": "requestInitialized", "parameters": "(ServletRequest request)", "modifiers": "private", "return": "void", "signature": "void requestInitialized(ServletRequest request)", "full_signature": "private void requestInitialized(ServletRequest request)", "class_method_signature": "DefaultWebApplication.requestInitialized(ServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "requestDestroyed", "parameters": "(ServletRequest request)", "modifiers": "private", "return": "void", "signature": "void requestDestroyed(ServletRequest request)", "full_signature": "private void requestDestroyed(ServletRequest request)", "class_method_signature": "DefaultWebApplication.requestDestroyed(ServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "attributeAdded", "parameters": "(String name, Object value)", "modifiers": "private", "return": "void", "signature": "void attributeAdded(String name, Object value)", "full_signature": "private void attributeAdded(String name, Object value)", "class_method_signature": "DefaultWebApplication.attributeAdded(String name, Object value)", "testcase": false, "constructor": false}, {"identifier": "attributeRemoved", "parameters": "(String name, Object previousValue)", "modifiers": "private", "return": "void", "signature": "void attributeRemoved(String name, Object previousValue)", "full_signature": "private void attributeRemoved(String name, Object previousValue)", "class_method_signature": "DefaultWebApplication.attributeRemoved(String name, Object previousValue)", "testcase": false, "constructor": false}, {"identifier": "attributeReplaced", "parameters": "(String name, Object value)", "modifiers": "private", "return": "void", "signature": "void attributeReplaced(String name, Object value)", "full_signature": "private void attributeReplaced(String name, Object value)", "class_method_signature": "DefaultWebApplication.attributeReplaced(String name, Object value)", "testcase": false, "constructor": false}, {"identifier": "isPermanentlyUnavailable", "parameters": "(DefaultServletEnvironment environment)", "modifiers": "private", "return": "boolean", "signature": "boolean isPermanentlyUnavailable(DefaultServletEnvironment environment)", "full_signature": "private boolean isPermanentlyUnavailable(DefaultServletEnvironment environment)", "class_method_signature": "DefaultWebApplication.isPermanentlyUnavailable(DefaultServletEnvironment environment)", "testcase": false, "constructor": false}, {"identifier": "checkTainted", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkTainted()", "full_signature": "private void checkTainted()", "class_method_signature": "DefaultWebApplication.checkTainted()", "testcase": false, "constructor": false}, {"identifier": "checkServicing", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkServicing()", "full_signature": "private void checkServicing()", "class_method_signature": "DefaultWebApplication.checkServicing()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(String string)", "modifiers": "private", "return": "boolean", "signature": "boolean isEmpty(String string)", "full_signature": "private boolean isEmpty(String string)", "class_method_signature": "DefaultWebApplication.isEmpty(String string)", "testcase": false, "constructor": false}], "file": "webapp/impl/src/main/java/cloud/piranha/webapp/impl/DefaultWebApplication.java"}, "focal_method": {"identifier": "getAttribute", "parameters": "(String name)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object getAttribute(String name) {\n        Objects.requireNonNull(name);\n        return attributes.get(name);\n    }", "signature": "Object getAttribute(String name)", "full_signature": "@Override public Object getAttribute(String name)", "class_method_signature": "DefaultWebApplication.getAttribute(String name)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "get"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}