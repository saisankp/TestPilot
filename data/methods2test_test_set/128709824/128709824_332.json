{"test_class": {"identifier": "RpcSofaTracerTest", "superclass": "extends AbstractTracerBase", "interfaces": "", "fields": [{"original_string": "private RpcSofaTracer rpcSofaTracer = new RpcSofaTracer();", "modifier": "private", "type": "RpcSofaTracer", "declarator": "rpcSofaTracer = new RpcSofaTracer()", "var_name": "rpcSofaTracer"}, {"original_string": "private SofaRequest   sofaRequest;", "modifier": "private", "type": "SofaRequest", "declarator": "sofaRequest", "var_name": "sofaRequest"}], "file": "tracer/tracer-opentracing/src/test/java/com/alipay/sofa/rpc/tracer/sofatracer/RpcSofaTracerTest.java"}, "test_case": {"identifier": "testStartRpc", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStartRpc() throws Exception {\n        this.rpcSofaTracer.startRpc(sofaRequest);\n\n        SofaTraceContext sofaTraceContext = SofaTraceContextHolder.getSofaTraceContext();\n        SofaTracerSpan sofaTracerSpan = sofaTraceContext.pop();\n        assertNotNull(sofaTracerSpan);\n        System.err.println(\"\\n\" + sofaTracerSpan);\n    }", "signature": "void testStartRpc()", "full_signature": "@Test public void testStartRpc()", "class_method_signature": "RpcSofaTracerTest.testStartRpc()", "testcase": true, "constructor": false, "invocations": ["startRpc", "getSofaTraceContext", "pop", "assertNotNull", "println"]}, "focal_class": {"identifier": "RpcSofaTracer", "superclass": "extends Tracer", "interfaces": "", "fields": [{"original_string": "public static final String RPC_TRACER_TYPE = \"RPC_TRACER\";", "modifier": "public static final", "type": "String", "declarator": "RPC_TRACER_TYPE = \"RPC_TRACER\"", "var_name": "RPC_TRACER_TYPE"}, {"original_string": "public static final String ERROR_SOURCE    = \"rpc\";", "modifier": "public static final", "type": "String", "declarator": "ERROR_SOURCE    = \"rpc\"", "var_name": "ERROR_SOURCE"}, {"original_string": "protected SofaTracer       sofaTracer;", "modifier": "protected", "type": "SofaTracer", "declarator": "sofaTracer", "var_name": "sofaTracer"}], "methods": [{"identifier": "RpcSofaTracer", "parameters": "()", "modifiers": "public", "return": "", "signature": " RpcSofaTracer()", "full_signature": "public  RpcSofaTracer()", "class_method_signature": "RpcSofaTracer.RpcSofaTracer()", "testcase": false, "constructor": true}, {"identifier": "getClientSpanEncoder", "parameters": "()", "modifiers": "protected", "return": "SpanEncoder<SofaTracerSpan>", "signature": "SpanEncoder<SofaTracerSpan> getClientSpanEncoder()", "full_signature": "protected SpanEncoder<SofaTracerSpan> getClientSpanEncoder()", "class_method_signature": "RpcSofaTracer.getClientSpanEncoder()", "testcase": false, "constructor": false}, {"identifier": "getServerSpanEncoder", "parameters": "()", "modifiers": "protected", "return": "SpanEncoder<SofaTracerSpan>", "signature": "SpanEncoder<SofaTracerSpan> getServerSpanEncoder()", "full_signature": "protected SpanEncoder<SofaTracerSpan> getServerSpanEncoder()", "class_method_signature": "RpcSofaTracer.getServerSpanEncoder()", "testcase": false, "constructor": false}, {"identifier": "generateClientStatReporter", "parameters": "(RpcTracerLogEnum statRpcTracerLogEnum)", "modifiers": "protected", "return": "SofaTracerStatisticReporter", "signature": "SofaTracerStatisticReporter generateClientStatReporter(RpcTracerLogEnum statRpcTracerLogEnum)", "full_signature": "protected SofaTracerStatisticReporter generateClientStatReporter(RpcTracerLogEnum statRpcTracerLogEnum)", "class_method_signature": "RpcSofaTracer.generateClientStatReporter(RpcTracerLogEnum statRpcTracerLogEnum)", "testcase": false, "constructor": false}, {"identifier": "generateServerStatReporter", "parameters": "(RpcTracerLogEnum statRpcTracerLogEnum)", "modifiers": "protected", "return": "SofaTracerStatisticReporter", "signature": "SofaTracerStatisticReporter generateServerStatReporter(RpcTracerLogEnum statRpcTracerLogEnum)", "full_signature": "protected SofaTracerStatisticReporter generateServerStatReporter(RpcTracerLogEnum statRpcTracerLogEnum)", "class_method_signature": "RpcSofaTracer.generateServerStatReporter(RpcTracerLogEnum statRpcTracerLogEnum)", "testcase": false, "constructor": false}, {"identifier": "generateReporter", "parameters": "(SofaTracerStatisticReporter statReporter,\n                                        RpcTracerLogEnum digestRpcTracerLogEnum,\n                                        SpanEncoder<SofaTracerSpan> spanEncoder)", "modifiers": "protected", "return": "Reporter", "signature": "Reporter generateReporter(SofaTracerStatisticReporter statReporter,\n                                        RpcTracerLogEnum digestRpcTracerLogEnum,\n                                        SpanEncoder<SofaTracerSpan> spanEncoder)", "full_signature": "protected Reporter generateReporter(SofaTracerStatisticReporter statReporter,\n                                        RpcTracerLogEnum digestRpcTracerLogEnum,\n                                        SpanEncoder<SofaTracerSpan> spanEncoder)", "class_method_signature": "RpcSofaTracer.generateReporter(SofaTracerStatisticReporter statReporter,\n                                        RpcTracerLogEnum digestRpcTracerLogEnum,\n                                        SpanEncoder<SofaTracerSpan> spanEncoder)", "testcase": false, "constructor": false}, {"identifier": "startRpc", "parameters": "(SofaRequest request)", "modifiers": "@Override public", "return": "void", "signature": "void startRpc(SofaRequest request)", "full_signature": "@Override public void startRpc(SofaRequest request)", "class_method_signature": "RpcSofaTracer.startRpc(SofaRequest request)", "testcase": false, "constructor": false}, {"identifier": "clientBeforeSend", "parameters": "(SofaRequest request)", "modifiers": "@Override public", "return": "void", "signature": "void clientBeforeSend(SofaRequest request)", "full_signature": "@Override public void clientBeforeSend(SofaRequest request)", "class_method_signature": "RpcSofaTracer.clientBeforeSend(SofaRequest request)", "testcase": false, "constructor": false}, {"identifier": "getEmptyStringIfNull", "parameters": "(Map map, String key)", "modifiers": "protected", "return": "String", "signature": "String getEmptyStringIfNull(Map map, String key)", "full_signature": "protected String getEmptyStringIfNull(Map map, String key)", "class_method_signature": "RpcSofaTracer.getEmptyStringIfNull(Map map, String key)", "testcase": false, "constructor": false}, {"identifier": "clientReceived", "parameters": "(SofaRequest request, SofaResponse response, Throwable exceptionThrow)", "modifiers": "@Override public", "return": "void", "signature": "void clientReceived(SofaRequest request, SofaResponse response, Throwable exceptionThrow)", "full_signature": "@Override public void clientReceived(SofaRequest request, SofaResponse response, Throwable exceptionThrow)", "class_method_signature": "RpcSofaTracer.clientReceived(SofaRequest request, SofaResponse response, Throwable exceptionThrow)", "testcase": false, "constructor": false}, {"identifier": "generateClientErrorContext", "parameters": "(Map<String, String> context, SofaRequest request, SofaTracerSpan clientSpan)", "modifiers": "private", "return": "void", "signature": "void generateClientErrorContext(Map<String, String> context, SofaRequest request, SofaTracerSpan clientSpan)", "full_signature": "private void generateClientErrorContext(Map<String, String> context, SofaRequest request, SofaTracerSpan clientSpan)", "class_method_signature": "RpcSofaTracer.generateClientErrorContext(Map<String, String> context, SofaRequest request, SofaTracerSpan clientSpan)", "testcase": false, "constructor": false}, {"identifier": "serverReceived", "parameters": "(SofaRequest request)", "modifiers": "@Override public", "return": "void", "signature": "void serverReceived(SofaRequest request)", "full_signature": "@Override public void serverReceived(SofaRequest request)", "class_method_signature": "RpcSofaTracer.serverReceived(SofaRequest request)", "testcase": false, "constructor": false}, {"identifier": "saveSpanContextAndTags", "parameters": "(Map<String, String> tags, Object oldInstanceMap)", "modifiers": "private", "return": "SofaTracerSpanContext", "signature": "SofaTracerSpanContext saveSpanContextAndTags(Map<String, String> tags, Object oldInstanceMap)", "full_signature": "private SofaTracerSpanContext saveSpanContextAndTags(Map<String, String> tags, Object oldInstanceMap)", "class_method_signature": "RpcSofaTracer.saveSpanContextAndTags(Map<String, String> tags, Object oldInstanceMap)", "testcase": false, "constructor": false}, {"identifier": "parseSampled", "parameters": "(Map<String, String> contextMap, SofaTracerSpanContext spanContext)", "modifiers": "private", "return": "boolean", "signature": "boolean parseSampled(Map<String, String> contextMap, SofaTracerSpanContext spanContext)", "full_signature": "private boolean parseSampled(Map<String, String> contextMap, SofaTracerSpanContext spanContext)", "class_method_signature": "RpcSofaTracer.parseSampled(Map<String, String> contextMap, SofaTracerSpanContext spanContext)", "testcase": false, "constructor": false}, {"identifier": "serverSend", "parameters": "(SofaRequest request, SofaResponse response, Throwable exception)", "modifiers": "@Override public", "return": "void", "signature": "void serverSend(SofaRequest request, SofaResponse response, Throwable exception)", "full_signature": "@Override public void serverSend(SofaRequest request, SofaResponse response, Throwable exception)", "class_method_signature": "RpcSofaTracer.serverSend(SofaRequest request, SofaResponse response, Throwable exception)", "testcase": false, "constructor": false}, {"identifier": "generateServerErrorContext", "parameters": "(Map<String, String> context, SofaRequest request,\n                                            SofaTracerSpan serverSpan)", "modifiers": "private", "return": "void", "signature": "void generateServerErrorContext(Map<String, String> context, SofaRequest request,\n                                            SofaTracerSpan serverSpan)", "full_signature": "private void generateServerErrorContext(Map<String, String> context, SofaRequest request,\n                                            SofaTracerSpan serverSpan)", "class_method_signature": "RpcSofaTracer.generateServerErrorContext(Map<String, String> context, SofaRequest request,\n                                            SofaTracerSpan serverSpan)", "testcase": false, "constructor": false}, {"identifier": "clientAsyncAfterSend", "parameters": "(SofaRequest request)", "modifiers": "@Override public", "return": "void", "signature": "void clientAsyncAfterSend(SofaRequest request)", "full_signature": "@Override public void clientAsyncAfterSend(SofaRequest request)", "class_method_signature": "RpcSofaTracer.clientAsyncAfterSend(SofaRequest request)", "testcase": false, "constructor": false}, {"identifier": "clientAsyncReceivedPrepare", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clientAsyncReceivedPrepare()", "full_signature": "@Override public void clientAsyncReceivedPrepare()", "class_method_signature": "RpcSofaTracer.clientAsyncReceivedPrepare()", "testcase": false, "constructor": false}, {"identifier": "checkState", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void checkState()", "full_signature": "@Override public void checkState()", "class_method_signature": "RpcSofaTracer.checkState()", "testcase": false, "constructor": false}, {"identifier": "profile", "parameters": "(String profileApp, String code, String message)", "modifiers": "@Override public", "return": "void", "signature": "void profile(String profileApp, String code, String message)", "full_signature": "@Override public void profile(String profileApp, String code, String message)", "class_method_signature": "RpcSofaTracer.profile(String profileApp, String code, String message)", "testcase": false, "constructor": false}, {"identifier": "getSofaTracer", "parameters": "()", "modifiers": "public", "return": "SofaTracer", "signature": "SofaTracer getSofaTracer()", "full_signature": "public SofaTracer getSofaTracer()", "class_method_signature": "RpcSofaTracer.getSofaTracer()", "testcase": false, "constructor": false}], "file": "tracer/tracer-opentracing/src/main/java/com/alipay/sofa/rpc/tracer/sofatracer/RpcSofaTracer.java"}, "focal_method": {"identifier": "startRpc", "parameters": "(SofaRequest request)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void startRpc(SofaRequest request) {\n        //\u5ba2\u6237\u7aef\u7684\u542f\u52a8\n        SofaTraceContext sofaTraceContext = SofaTraceContextHolder.getSofaTraceContext();\n        SofaTracerSpan serverSpan = sofaTraceContext.pop();\n\n        SofaTracerSpan clientSpan = (SofaTracerSpan) this.sofaTracer.buildSpan(request.getInterfaceName())\n            .asChildOf(serverSpan)\n            .withTag(Tags.SPAN_KIND.getKey(), Tags.SPAN_KIND_CLIENT)\n            .start();\n\n        if (RpcInternalContext.isAttachmentEnable()) {\n            RpcInternalContext context = RpcInternalContext.getContext();\n            clientSpan\n                .setTag(RpcSpanTags.LOCAL_APP, (String) context.getAttachment(RpcConstants.INTERNAL_KEY_APP_NAME));\n            clientSpan.setTag(RpcSpanTags.PROTOCOL,\n                (String) context.getAttachment(RpcConstants.INTERNAL_KEY_PROTOCOL_NAME));\n            SofaTracerSpanContext spanContext = clientSpan.getSofaTracerSpanContext();\n            if (spanContext != null) {\n                context.setAttachment(RpcConstants.INTERNAL_KEY_TRACE_ID, spanContext.getTraceId());\n                context.setAttachment(RpcConstants.INTERNAL_KEY_SPAN_ID, spanContext.getSpanId());\n            }\n        }\n\n        clientSpan.setTag(RpcSpanTags.SERVICE, request.getTargetServiceUniqueName());\n        clientSpan.setTag(RpcSpanTags.METHOD, request.getMethodName());\n        clientSpan.setTag(RpcSpanTags.CURRENT_THREAD_NAME, Thread.currentThread().getName());\n\n        //\u9700\u8981\u4e3b\u52a8\u7f13\u5b58\u81ea\u5df1\u7684 serverSpan,\u539f\u56e0\u662f:asChildOf \u5173\u6ce8\u7684\u662f spanContext\n        clientSpan.setParentSofaTracerSpan(serverSpan);\n        //push\n        sofaTraceContext.push(clientSpan);\n    }", "signature": "void startRpc(SofaRequest request)", "full_signature": "@Override public void startRpc(SofaRequest request)", "class_method_signature": "RpcSofaTracer.startRpc(SofaRequest request)", "testcase": false, "constructor": false, "invocations": ["getSofaTraceContext", "pop", "start", "withTag", "asChildOf", "buildSpan", "getInterfaceName", "getKey", "isAttachmentEnable", "getContext", "setTag", "getAttachment", "setTag", "getAttachment", "getSofaTracerSpanContext", "setAttachment", "getTraceId", "setAttachment", "getSpanId", "setTag", "getTargetServiceUniqueName", "setTag", "getMethodName", "setTag", "getName", "currentThread", "setParentSofaTracerSpan", "push"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}