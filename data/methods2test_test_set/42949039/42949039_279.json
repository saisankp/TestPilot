{"test_class": {"identifier": "BusinessObjectDataSearchHelperTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/BusinessObjectDataSearchHelperTest.java"}, "test_case": {"identifier": "testValidateBusinessObjectDataSearchRequestMissingRequiredParameters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateBusinessObjectDataSearchRequestMissingRequiredParameters()\n    {\n        try\n        {\n            businessObjectDataSearchHelper.validateBusinessObjectDataSearchRequest(null);\n            fail();\n        }\n        catch (IllegalArgumentException e)\n        {\n            assertEquals(\"A business object data search request must be specified.\", e.getMessage());\n        }\n\n        try\n        {\n            businessObjectDataSearchHelper.validateBusinessObjectDataSearchRequest(new BusinessObjectDataSearchRequest());\n            fail();\n        }\n        catch (IllegalArgumentException e)\n        {\n            assertEquals(\"A business object data search filter must be specified.\", e.getMessage());\n        }\n\n        try\n        {\n            businessObjectDataSearchHelper.validateBusinessObjectDataSearchRequest(new BusinessObjectDataSearchRequest(new ArrayList<>()));\n            fail();\n        }\n        catch (IllegalArgumentException e)\n        {\n            assertEquals(\"A business object data search filter must be specified.\", e.getMessage());\n        }\n\n        try\n        {\n            businessObjectDataSearchHelper\n                .validateBusinessObjectDataSearchRequest(new BusinessObjectDataSearchRequest(Collections.singletonList(new BusinessObjectDataSearchFilter())));\n            fail();\n        }\n        catch (IllegalArgumentException e)\n        {\n            assertEquals(\"A business object data search key must be specified.\", e.getMessage());\n        }\n\n        try\n        {\n            businessObjectDataSearchHelper.validateBusinessObjectDataSearchRequest(\n                new BusinessObjectDataSearchRequest(Collections.singletonList(new BusinessObjectDataSearchFilter(new ArrayList<>()))));\n            fail();\n        }\n        catch (IllegalArgumentException e)\n        {\n            assertEquals(\"A business object data search key must be specified.\", e.getMessage());\n        }\n    }", "signature": "void testValidateBusinessObjectDataSearchRequestMissingRequiredParameters()", "full_signature": "@Test public void testValidateBusinessObjectDataSearchRequestMissingRequiredParameters()", "class_method_signature": "BusinessObjectDataSearchHelperTest.testValidateBusinessObjectDataSearchRequestMissingRequiredParameters()", "testcase": true, "constructor": false, "invocations": ["validateBusinessObjectDataSearchRequest", "fail", "assertEquals", "getMessage", "validateBusinessObjectDataSearchRequest", "fail", "assertEquals", "getMessage", "validateBusinessObjectDataSearchRequest", "fail", "assertEquals", "getMessage", "validateBusinessObjectDataSearchRequest", "singletonList", "fail", "assertEquals", "getMessage", "validateBusinessObjectDataSearchRequest", "singletonList", "fail", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "BusinessObjectDataSearchHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Autowired\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@Autowired\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Autowired\n    private ConfigurationHelper configurationHelper;", "modifier": "@Autowired\n    private", "type": "ConfigurationHelper", "declarator": "configurationHelper", "var_name": "configurationHelper"}], "methods": [{"identifier": "validateBusinessObjectDataSearchRequest", "parameters": "(BusinessObjectDataSearchRequest businessObjectDataSearchRequest)", "modifiers": "public", "return": "void", "signature": "void validateBusinessObjectDataSearchRequest(BusinessObjectDataSearchRequest businessObjectDataSearchRequest)", "full_signature": "public void validateBusinessObjectDataSearchRequest(BusinessObjectDataSearchRequest businessObjectDataSearchRequest)", "class_method_signature": "BusinessObjectDataSearchHelper.validateBusinessObjectDataSearchRequest(BusinessObjectDataSearchRequest businessObjectDataSearchRequest)", "testcase": false, "constructor": false}, {"identifier": "validatePagingParameter", "parameters": "(String parameterName, Integer parameterValue, Integer defaultParameterValue, Integer maxParameterValue)", "modifiers": "public", "return": "Integer", "signature": "Integer validatePagingParameter(String parameterName, Integer parameterValue, Integer defaultParameterValue, Integer maxParameterValue)", "full_signature": "public Integer validatePagingParameter(String parameterName, Integer parameterValue, Integer defaultParameterValue, Integer maxParameterValue)", "class_method_signature": "BusinessObjectDataSearchHelper.validatePagingParameter(String parameterName, Integer parameterValue, Integer defaultParameterValue, Integer maxParameterValue)", "testcase": false, "constructor": false}, {"identifier": "validateBusinessObjectDataSearchKey", "parameters": "(BusinessObjectDataSearchKey businessObjectDataSearchKey)", "modifiers": "", "return": "void", "signature": "void validateBusinessObjectDataSearchKey(BusinessObjectDataSearchKey businessObjectDataSearchKey)", "full_signature": " void validateBusinessObjectDataSearchKey(BusinessObjectDataSearchKey businessObjectDataSearchKey)", "class_method_signature": "BusinessObjectDataSearchHelper.validateBusinessObjectDataSearchKey(BusinessObjectDataSearchKey businessObjectDataSearchKey)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/BusinessObjectDataSearchHelper.java"}, "focal_method": {"identifier": "validateBusinessObjectDataSearchRequest", "parameters": "(BusinessObjectDataSearchRequest businessObjectDataSearchRequest)", "modifiers": "public", "return": "void", "body": "public void validateBusinessObjectDataSearchRequest(BusinessObjectDataSearchRequest businessObjectDataSearchRequest)\n    {\n        Assert.notNull(businessObjectDataSearchRequest, \"A business object data search request must be specified.\");\n\n        List<BusinessObjectDataSearchFilter> businessObjectDataSearchFilters = businessObjectDataSearchRequest.getBusinessObjectDataSearchFilters();\n\n        Assert.isTrue(CollectionUtils.isNotEmpty(businessObjectDataSearchFilters), \"A business object data search filter must be specified.\");\n\n        Assert.isTrue(businessObjectDataSearchFilters.size() == 1, \"A list of business object data search filters can only have one element.\");\n\n        BusinessObjectDataSearchFilter businessObjectDataSearchFilter = businessObjectDataSearchFilters.get(0);\n        List<BusinessObjectDataSearchKey> businessObjectDataSearchKeys = businessObjectDataSearchFilter.getBusinessObjectDataSearchKeys();\n\n        Assert.isTrue(CollectionUtils.isNotEmpty(businessObjectDataSearchKeys), \"A business object data search key must be specified.\");\n\n        Assert.isTrue(businessObjectDataSearchKeys.size() == 1, \"A list of business object data search keys can only have one element.\");\n\n        validateBusinessObjectDataSearchKey(businessObjectDataSearchKeys.get(0));\n    }", "signature": "void validateBusinessObjectDataSearchRequest(BusinessObjectDataSearchRequest businessObjectDataSearchRequest)", "full_signature": "public void validateBusinessObjectDataSearchRequest(BusinessObjectDataSearchRequest businessObjectDataSearchRequest)", "class_method_signature": "BusinessObjectDataSearchHelper.validateBusinessObjectDataSearchRequest(BusinessObjectDataSearchRequest businessObjectDataSearchRequest)", "testcase": false, "constructor": false, "invocations": ["notNull", "getBusinessObjectDataSearchFilters", "isTrue", "isNotEmpty", "isTrue", "size", "get", "getBusinessObjectDataSearchKeys", "isTrue", "isNotEmpty", "isTrue", "size", "validateBusinessObjectDataSearchKey", "get"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}