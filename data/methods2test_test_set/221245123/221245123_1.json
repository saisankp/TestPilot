{"test_class": {"identifier": "OrderResourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final BigDecimal DEFAULT_TOTAL_PRICE = BigDecimal.valueOf(50);", "modifier": "private static final", "type": "BigDecimal", "declarator": "DEFAULT_TOTAL_PRICE = BigDecimal.valueOf(50)", "var_name": "DEFAULT_TOTAL_PRICE"}, {"original_string": "private static final BigDecimal UPDATED_TOTAL_PRICE = BigDecimal.valueOf(150.0);", "modifier": "private static final", "type": "BigDecimal", "declarator": "UPDATED_TOTAL_PRICE = BigDecimal.valueOf(150.0)", "var_name": "UPDATED_TOTAL_PRICE"}, {"original_string": "private static final OrderStatus DEFAULT_STATUS = OrderStatus.SHIPPED;", "modifier": "private static final", "type": "OrderStatus", "declarator": "DEFAULT_STATUS = OrderStatus.SHIPPED", "var_name": "DEFAULT_STATUS"}, {"original_string": "private static final OrderStatus UPDATED_STATUS = OrderStatus.DELIVERED;", "modifier": "private static final", "type": "OrderStatus", "declarator": "UPDATED_STATUS = OrderStatus.DELIVERED", "var_name": "UPDATED_STATUS"}, {"original_string": "private static final String DEFAULT_CUSTOMER = \"AAAAAAAAAAAAAAA\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_CUSTOMER = \"AAAAAAAAAAAAAAA\"", "var_name": "DEFAULT_CUSTOMER"}, {"original_string": "@Inject\n    OrderRepository orderRepository;", "modifier": "@Inject", "type": "OrderRepository", "declarator": "orderRepository", "var_name": "orderRepository"}, {"original_string": "@Inject\n    OrderMapper orderMapper;", "modifier": "@Inject", "type": "OrderMapper", "declarator": "orderMapper", "var_name": "orderMapper"}, {"original_string": "private Order order;", "modifier": "private", "type": "Order", "declarator": "order", "var_name": "order"}, {"original_string": "private Set<OrderItem> orderItems;", "modifier": "private", "type": "Set<OrderItem>", "declarator": "orderItems", "var_name": "orderItems"}], "file": "order-service/src/test/java/io/maxilog/web/rest/OrderResourceTest.java"}, "test_case": {"identifier": "createOrder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createOrder() {\n\n        int databaseSizeBeforeCreate = orderRepository.findAll().size();\n\n        given()\n                .contentType(JSON)\n                .body(orderMapper.toDto(this.order))\n                .when().post(\"/api/orders\")\n                .then()\n                .statusCode(201);\n\n        // Validate the Order in the database\n        List<Order> orderList = orderRepository.findAll();\n        Assertions.assertEquals(orderList.size(), databaseSizeBeforeCreate + 1);\n        Order order = orderList.get(orderList.size() - 1);\n        Assertions.assertEquals(order.getTotalPrice().floatValue(), DEFAULT_TOTAL_PRICE.floatValue());\n    }", "signature": "void createOrder()", "full_signature": "@Test public void createOrder()", "class_method_signature": "OrderResourceTest.createOrder()", "testcase": true, "constructor": false, "invocations": ["size", "findAll", "statusCode", "then", "post", "when", "body", "contentType", "given", "toDto", "findAll", "assertEquals", "size", "get", "size", "assertEquals", "floatValue", "getTotalPrice", "floatValue"]}, "focal_class": {"identifier": "OrderResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(OrderResource.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(OrderResource.class)", "var_name": "LOGGER"}, {"original_string": "private final OrderService orderService;", "modifier": "private final", "type": "OrderService", "declarator": "orderService", "var_name": "orderService"}], "methods": [{"identifier": "OrderResource", "parameters": "(OrderService orderService)", "modifiers": "@Inject public", "return": "", "signature": " OrderResource(OrderService orderService)", "full_signature": "@Inject public  OrderResource(OrderService orderService)", "class_method_signature": "OrderResource.OrderResource(OrderService orderService)", "testcase": false, "constructor": true}, {"identifier": "findAll", "parameters": "(@BeanParam PageableImpl pageable)", "modifiers": "@GET @Path(\"/orders\") public", "return": "Response", "signature": "Response findAll(@BeanParam PageableImpl pageable)", "full_signature": "@GET @Path(\"/orders\") public Response findAll(@BeanParam PageableImpl pageable)", "class_method_signature": "OrderResource.findAll(@BeanParam PageableImpl pageable)", "testcase": false, "constructor": false}, {"identifier": "findMyData", "parameters": "()", "modifiers": "@GET @Path(\"/orders/me\") public", "return": "Response", "signature": "Response findMyData()", "full_signature": "@GET @Path(\"/orders/me\") public Response findMyData()", "class_method_signature": "OrderResource.findMyData()", "testcase": false, "constructor": false}, {"identifier": "findById", "parameters": "(@PathParam(\"id\") long id)", "modifiers": "@GET @Path(\"/orders/{id}\") public", "return": "Response", "signature": "Response findById(@PathParam(\"id\") long id)", "full_signature": "@GET @Path(\"/orders/{id}\") public Response findById(@PathParam(\"id\") long id)", "class_method_signature": "OrderResource.findById(@PathParam(\"id\") long id)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(OrderDTO orderDTO)", "modifiers": "@POST @Path(\"/orders\") public", "return": "Response", "signature": "Response create(OrderDTO orderDTO)", "full_signature": "@POST @Path(\"/orders\") public Response create(OrderDTO orderDTO)", "class_method_signature": "OrderResource.create(OrderDTO orderDTO)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@PathParam(\"id\") long id)", "modifiers": "@DELETE @Path(\"/orders/{id}\") public", "return": "Response", "signature": "Response delete(@PathParam(\"id\") long id)", "full_signature": "@DELETE @Path(\"/orders/{id}\") public Response delete(@PathParam(\"id\") long id)", "class_method_signature": "OrderResource.delete(@PathParam(\"id\") long id)", "testcase": false, "constructor": false}], "file": "order-service/src/main/java/io/maxilog/web/rest/OrderResource.java"}, "focal_method": {"identifier": "findAll", "parameters": "(@BeanParam PageableImpl pageable)", "modifiers": "@GET @Path(\"/orders\") public", "return": "Response", "body": "@GET\n    @Path(\"/orders\")\n    public Response findAll(@BeanParam PageableImpl pageable) {\n        LOGGER.debug(\"REST request to get all Users\");\n        return Response.ok().entity(orderService.findAll(pageable)).build();\n    }", "signature": "Response findAll(@BeanParam PageableImpl pageable)", "full_signature": "@GET @Path(\"/orders\") public Response findAll(@BeanParam PageableImpl pageable)", "class_method_signature": "OrderResource.findAll(@BeanParam PageableImpl pageable)", "testcase": false, "constructor": false, "invocations": ["debug", "build", "entity", "ok", "findAll"]}, "repository": {"repo_id": 221245123, "url": "https://github.com/MossabTN/quarkus-microservices-poc", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 889, "license": "licensed"}}