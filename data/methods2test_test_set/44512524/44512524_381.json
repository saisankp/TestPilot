{"test_class": {"identifier": "FixedStreamFeatureStatisticsTest", "superclass": "", "interfaces": "", "fields": [], "file": "storm/trident-ml/src/test/java/com/github/pmerienne/trident/ml/stats/FixedStreamFeatureStatisticsTest.java"}, "test_case": {"identifier": "testUpdate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testUpdate() {\n\t\t// Given\n\t\tRandom random = new Random();\n\t\tdouble expectedMean = 4.0;\n\t\tdouble stdDev = 6.0;\n\t\tint size = 10000;\n\n\t\tdouble[] features = new double[size];\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\tfeatures[i] = expectedMean + random.nextGaussian() * stdDev;\n\t\t}\n\n\t\t// When\n\t\tFixedStreamFeatureStatistics statistics = new FixedStreamFeatureStatistics();\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\tstatistics.update(features[i]);\n\t\t}\n\n\t\t// Then\n\t\tassertEquals(expectedMean, statistics.getMean(), 0.1);\n\t\tassertEquals(stdDev, statistics.getStdDev(), 0.1);\n\t}", "signature": "void testUpdate()", "full_signature": "@Test public void testUpdate()", "class_method_signature": "FixedStreamFeatureStatisticsTest.testUpdate()", "testcase": true, "constructor": false, "invocations": ["nextGaussian", "update", "assertEquals", "getMean", "assertEquals", "getStdDev"]}, "focal_class": {"identifier": "FixedStreamFeatureStatistics", "superclass": "", "interfaces": "implements StreamFeatureStatistics, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -7406184811401750690L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -7406184811401750690L", "var_name": "serialVersionUID"}, {"original_string": "private long count = 0L;", "modifier": "private", "type": "long", "declarator": "count = 0L", "var_name": "count"}, {"original_string": "private double mean = 0.0;", "modifier": "private", "type": "double", "declarator": "mean = 0.0", "var_name": "mean"}, {"original_string": "private double m2 = 0.0;", "modifier": "private", "type": "double", "declarator": "m2 = 0.0", "var_name": "m2"}], "methods": [{"identifier": "update", "parameters": "(double feature)", "modifiers": "public", "return": "void", "signature": "void update(double feature)", "full_signature": "public void update(double feature)", "class_method_signature": "FixedStreamFeatureStatistics.update(double feature)", "testcase": false, "constructor": false}, {"identifier": "getCount", "parameters": "()", "modifiers": "@Override public", "return": "Long", "signature": "Long getCount()", "full_signature": "@Override public Long getCount()", "class_method_signature": "FixedStreamFeatureStatistics.getCount()", "testcase": false, "constructor": false}, {"identifier": "getMean", "parameters": "()", "modifiers": "@Override public", "return": "Double", "signature": "Double getMean()", "full_signature": "@Override public Double getMean()", "class_method_signature": "FixedStreamFeatureStatistics.getMean()", "testcase": false, "constructor": false}, {"identifier": "getVariance", "parameters": "()", "modifiers": "@Override public", "return": "Double", "signature": "Double getVariance()", "full_signature": "@Override public Double getVariance()", "class_method_signature": "FixedStreamFeatureStatistics.getVariance()", "testcase": false, "constructor": false}, {"identifier": "getStdDev", "parameters": "()", "modifiers": "@Override public", "return": "Double", "signature": "Double getStdDev()", "full_signature": "@Override public Double getStdDev()", "class_method_signature": "FixedStreamFeatureStatistics.getStdDev()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FixedStreamFeatureStatistics.toString()", "testcase": false, "constructor": false}], "file": "storm/trident-ml/src/main/java/com/github/pmerienne/trident/ml/stats/FixedStreamFeatureStatistics.java"}, "focal_method": {"identifier": "update", "parameters": "(double feature)", "modifiers": "public", "return": "void", "body": "public void update(double feature) {\n\t\tthis.count = this.count + 1;\n\t\tdouble delta = feature - this.mean;\n\t\tthis.mean = this.mean + delta / this.count;\n\t\tthis.m2 = this.m2 + delta * (feature - this.mean);\n\t}", "signature": "void update(double feature)", "full_signature": "public void update(double feature)", "class_method_signature": "FixedStreamFeatureStatistics.update(double feature)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}