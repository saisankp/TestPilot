{"test_class": {"identifier": "ClientTest", "superclass": "", "interfaces": "", "fields": [], "file": "models/src/test/java/org/jvalue/ods/api/notifications/ClientTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n\tpublic final void testEquals() {\n\n\t\tDummyClient client1 = new DummyClient(\"0\", \"source1\");\n\t\tDummyClient client2 = new DummyClient(\"0\", \"source1\");\n\t\tDummyClient client3 = new DummyClient(\"1\", \"source1\");\n\t\tDummyClient client4 = new DummyClient(\"0\", \"source2\");\n\n\t\tAssert.assertEquals(client1, client1);\n\t\tAssert.assertEquals(client1, client2);\n\t\tAssert.assertNotEquals(client1, client3);\n\t\tAssert.assertNotEquals(client1, client4);\n\t\tAssert.assertNotEquals(client1, null);\n\t\tAssert.assertNotEquals(client1, new Object());\n\n\t\tAssert.assertEquals(client1.hashCode(), client1.hashCode());\n\t\tAssert.assertEquals(client1.hashCode(), client2.hashCode());\n\t\tAssert.assertNotEquals(client1.hashCode(), client3.hashCode());\n\t\tAssert.assertNotEquals(client1.hashCode(), client4.hashCode());\n\t}", "signature": "void testEquals()", "full_signature": "@Test public final void testEquals()", "class_method_signature": "ClientTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "assertEquals", "assertNotEquals", "assertNotEquals", "assertNotEquals", "assertNotEquals", "assertEquals", "hashCode", "hashCode", "assertEquals", "hashCode", "hashCode", "assertNotEquals", "hashCode", "hashCode", "assertNotEquals", "hashCode", "hashCode"]}, "focal_class": {"identifier": "Client", "superclass": "", "interfaces": "", "fields": [{"original_string": "@NotNull private final String id;", "modifier": "@NotNull private final", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "@NotNull private final String type;", "modifier": "@NotNull private final", "type": "String", "declarator": "type", "var_name": "type"}], "methods": [{"identifier": "Client", "parameters": "(String id, String type)", "modifiers": "protected", "return": "", "signature": " Client(String id, String type)", "full_signature": "protected  Client(String id, String type)", "class_method_signature": "Client.Client(String id, String type)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getId()", "full_signature": "public final String getId()", "class_method_signature": "Client.getId()", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getType()", "full_signature": "public final String getType()", "class_method_signature": "Client.getType()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Client.equals(Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Client.hashCode()", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(ClientVisitor<P,R> visitor, P param)", "modifiers": "public abstract", "return": "R", "signature": "R accept(ClientVisitor<P,R> visitor, P param)", "full_signature": "public abstract R accept(ClientVisitor<P,R> visitor, P param)", "class_method_signature": "Client.accept(ClientVisitor<P,R> visitor, P param)", "testcase": false, "constructor": false}], "file": "models/src/main/java/org/jvalue/ods/api/notifications/Client.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object other)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n\tpublic boolean equals(Object other) {\n\t\tif (!(other instanceof Client)) return false;\n\t\tif (other == this) return true;\n\t\tClient client = (Client) other;\n\t\treturn Objects.equal(id, client.id)\n\t\t\t\t&& Objects.equal(type, client.type);\n\t}", "signature": "boolean equals(Object other)", "full_signature": "@Override public boolean equals(Object other)", "class_method_signature": "Client.equals(Object other)", "testcase": false, "constructor": false, "invocations": ["equal", "equal"]}, "repository": {"repo_id": 14989619, "url": "https://github.com/jvalue/open-data-service-v1", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 4525, "license": "licensed"}}