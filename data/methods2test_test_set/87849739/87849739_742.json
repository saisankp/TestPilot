{"test_class": {"identifier": "SudoRetrievePolicyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JsonObject KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(Command.JsonFields.TYPE, SudoRetrievePolicy.TYPE)\n            .set(SudoCommand.JsonFields.JSON_POLICY_ID, TestConstants.Policy.POLICY_ID.toString())\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(Command.JsonFields.TYPE, SudoRetrievePolicy.TYPE)\n            .set(SudoCommand.JsonFields.JSON_POLICY_ID, TestConstants.Policy.POLICY_ID.toString())\n            .build()", "var_name": "KNOWN_JSON"}, {"original_string": "private static final DittoHeaders EMPTY_DITTO_HEADERS = DittoHeaders.empty();", "modifier": "private static final", "type": "DittoHeaders", "declarator": "EMPTY_DITTO_HEADERS = DittoHeaders.empty()", "var_name": "EMPTY_DITTO_HEADERS"}], "file": "services/models/policies/src/test/java/org/eclipse/ditto/services/models/policies/commands/sudo/SudoRetrievePolicyTest.java"}, "test_case": {"identifier": "toJsonReturnsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toJsonReturnsExpected() {\n        final SudoRetrievePolicy underTest =\n                SudoRetrievePolicy.of(TestConstants.Policy.POLICY_ID, EMPTY_DITTO_HEADERS);\n        final JsonObject actualJson = underTest.toJson(FieldType.REGULAR.or(FieldType.SPECIAL));\n\n        assertThat(actualJson).isEqualTo(KNOWN_JSON);\n    }", "signature": "void toJsonReturnsExpected()", "full_signature": "@Test public void toJsonReturnsExpected()", "class_method_signature": "SudoRetrievePolicyTest.toJsonReturnsExpected()", "testcase": true, "constructor": false, "invocations": ["of", "toJson", "or", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "SudoRetrievePolicy", "superclass": "extends AbstractCommand<SudoRetrievePolicy>", "interfaces": "implements SudoCommand<SudoRetrievePolicy>", "fields": [{"original_string": "public static final String NAME = \"sudoRetrievePolicy\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"sudoRetrievePolicy\"", "var_name": "NAME"}, {"original_string": "public static final String TYPE = SudoCommand.TYPE_PREFIX + NAME;", "modifier": "public static final", "type": "String", "declarator": "TYPE = SudoCommand.TYPE_PREFIX + NAME", "var_name": "TYPE"}, {"original_string": "private final PolicyId policyId;", "modifier": "private final", "type": "PolicyId", "declarator": "policyId", "var_name": "policyId"}], "methods": [{"identifier": "SudoRetrievePolicy", "parameters": "(final PolicyId policyId, final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "", "signature": " SudoRetrievePolicy(final PolicyId policyId, final DittoHeaders dittoHeaders)", "full_signature": "private  SudoRetrievePolicy(final PolicyId policyId, final DittoHeaders dittoHeaders)", "class_method_signature": "SudoRetrievePolicy.SudoRetrievePolicy(final PolicyId policyId, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final PolicyId policyId, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "SudoRetrievePolicy", "signature": "SudoRetrievePolicy of(final PolicyId policyId, final DittoHeaders dittoHeaders)", "full_signature": "public static SudoRetrievePolicy of(final PolicyId policyId, final DittoHeaders dittoHeaders)", "class_method_signature": "SudoRetrievePolicy.of(final PolicyId policyId, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final String jsonString, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "SudoRetrievePolicy", "signature": "SudoRetrievePolicy fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "full_signature": "public static SudoRetrievePolicy fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "class_method_signature": "SudoRetrievePolicy.fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "SudoRetrievePolicy", "signature": "SudoRetrievePolicy fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "full_signature": "public static SudoRetrievePolicy fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "class_method_signature": "SudoRetrievePolicy.fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getEntityId", "parameters": "()", "modifiers": "@Override public", "return": "PolicyId", "signature": "PolicyId getEntityId()", "full_signature": "@Override public PolicyId getEntityId()", "class_method_signature": "SudoRetrievePolicy.getEntityId()", "testcase": false, "constructor": false}, {"identifier": "appendPayload", "parameters": "(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "modifiers": "@Override protected", "return": "void", "signature": "void appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "full_signature": "@Override protected void appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "class_method_signature": "SudoRetrievePolicy.appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "getCategory", "parameters": "()", "modifiers": "@Override public", "return": "Category", "signature": "Category getCategory()", "full_signature": "@Override public Category getCategory()", "class_method_signature": "SudoRetrievePolicy.getCategory()", "testcase": false, "constructor": false}, {"identifier": "setDittoHeaders", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "@Override public", "return": "SudoRetrievePolicy", "signature": "SudoRetrievePolicy setDittoHeaders(final DittoHeaders dittoHeaders)", "full_signature": "@Override public SudoRetrievePolicy setDittoHeaders(final DittoHeaders dittoHeaders)", "class_method_signature": "SudoRetrievePolicy.setDittoHeaders(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object obj)", "modifiers": "@SuppressWarnings({\"squid:MethodCyclomaticComplexity\", \"squid:S1067\"}) @Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object obj)", "full_signature": "@SuppressWarnings({\"squid:MethodCyclomaticComplexity\", \"squid:S1067\"}) @Override public boolean equals(@Nullable final Object obj)", "class_method_signature": "SudoRetrievePolicy.equals(@Nullable final Object obj)", "testcase": false, "constructor": false}, {"identifier": "canEqual", "parameters": "(@Nullable final Object other)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean canEqual(@Nullable final Object other)", "full_signature": "@Override protected boolean canEqual(@Nullable final Object other)", "class_method_signature": "SudoRetrievePolicy.canEqual(@Nullable final Object other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@SuppressWarnings(\"squid:S109\") @Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@SuppressWarnings(\"squid:S109\") @Override public int hashCode()", "class_method_signature": "SudoRetrievePolicy.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SudoRetrievePolicy.toString()", "testcase": false, "constructor": false}], "file": "services/models/policies/src/main/java/org/eclipse/ditto/services/models/policies/commands/sudo/SudoRetrievePolicy.java"}, "focal_method": {"identifier": "of", "parameters": "(final PolicyId policyId, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "SudoRetrievePolicy", "body": "public static SudoRetrievePolicy of(final PolicyId policyId, final DittoHeaders dittoHeaders) {\n        return new SudoRetrievePolicy(policyId, dittoHeaders);\n    }", "signature": "SudoRetrievePolicy of(final PolicyId policyId, final DittoHeaders dittoHeaders)", "full_signature": "public static SudoRetrievePolicy of(final PolicyId policyId, final DittoHeaders dittoHeaders)", "class_method_signature": "SudoRetrievePolicy.of(final PolicyId policyId, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}