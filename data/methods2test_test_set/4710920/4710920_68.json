{"test_class": {"identifier": "DefaultAccessKeyStorageTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-plugin/dubbo-auth/src/test/java/org/apache/dubbo/auth/DefaultAccessKeyStorageTest.java"}, "test_case": {"identifier": "testGetAccessKey", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testGetAccessKey() {\n        URL url = URL.valueOf(\"dubbo://10.10.10.10:2181\")\n                .addParameter(Constants.ACCESS_KEY_ID_KEY, \"ak\")\n                .addParameter(Constants.SECRET_ACCESS_KEY_KEY, \"sk\");\n        DefaultAccessKeyStorage defaultAccessKeyStorage = new DefaultAccessKeyStorage();\n        AccessKeyPair accessKey = defaultAccessKeyStorage.getAccessKey(url, mock(Invocation.class));\n        assertNotNull(accessKey);\n        assertEquals(accessKey.getAccessKey(), \"ak\");\n        assertEquals(accessKey.getSecretKey(), \"sk\");\n    }", "signature": "void testGetAccessKey()", "full_signature": "@Test void testGetAccessKey()", "class_method_signature": "DefaultAccessKeyStorageTest.testGetAccessKey()", "testcase": true, "constructor": false, "invocations": ["addParameter", "addParameter", "valueOf", "getAccessKey", "mock", "assertNotNull", "assertEquals", "getAccessKey", "assertEquals", "getSecretKey"]}, "focal_class": {"identifier": "DefaultAccessKeyStorage", "superclass": "", "interfaces": "implements AccessKeyStorage", "fields": [], "methods": [{"identifier": "getAccessKey", "parameters": "(URL url, Invocation invocation)", "modifiers": "@Override public", "return": "AccessKeyPair", "signature": "AccessKeyPair getAccessKey(URL url, Invocation invocation)", "full_signature": "@Override public AccessKeyPair getAccessKey(URL url, Invocation invocation)", "class_method_signature": "DefaultAccessKeyStorage.getAccessKey(URL url, Invocation invocation)", "testcase": false, "constructor": false}], "file": "dubbo-plugin/dubbo-auth/src/main/java/org/apache/dubbo/auth/DefaultAccessKeyStorage.java"}, "focal_method": {"identifier": "getAccessKey", "parameters": "(URL url, Invocation invocation)", "modifiers": "@Override public", "return": "AccessKeyPair", "body": "@Override\n    public AccessKeyPair getAccessKey(URL url, Invocation invocation) {\n        AccessKeyPair accessKeyPair = new AccessKeyPair();\n        String accessKeyId = url.getParameter(Constants.ACCESS_KEY_ID_KEY);\n        String secretAccessKey = url.getParameter(Constants.SECRET_ACCESS_KEY_KEY);\n        accessKeyPair.setAccessKey(accessKeyId);\n        accessKeyPair.setSecretKey(secretAccessKey);\n        return accessKeyPair;\n    }", "signature": "AccessKeyPair getAccessKey(URL url, Invocation invocation)", "full_signature": "@Override public AccessKeyPair getAccessKey(URL url, Invocation invocation)", "class_method_signature": "DefaultAccessKeyStorage.getAccessKey(URL url, Invocation invocation)", "testcase": false, "constructor": false, "invocations": ["getParameter", "getParameter", "setAccessKey", "setSecretKey"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}