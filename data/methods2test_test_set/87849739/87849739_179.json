{"test_class": {"identifier": "SubstitutionStrategyRegistryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final DittoHeaders DITTO_HEADERS = DittoHeaders.empty();", "modifier": "private static final", "type": "DittoHeaders", "declarator": "DITTO_HEADERS = DittoHeaders.empty()", "var_name": "DITTO_HEADERS"}, {"original_string": "private SubstitutionStrategyRegistry underTest;", "modifier": "private", "type": "SubstitutionStrategyRegistry", "declarator": "underTest", "var_name": "underTest"}], "file": "services/concierge/enforcement/src/test/java/org/eclipse/ditto/services/concierge/enforcement/placeholders/strategies/SubstitutionStrategyRegistryTest.java"}, "test_case": {"identifier": "allSubstitutionStrategiesHaveBeenConfigured", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void allSubstitutionStrategiesHaveBeenConfigured() throws UnsupportedEncodingException {\n        final List<SubstitutionStrategy> strategies = underTest.getStrategies();\n        final List<Class<? extends SubstitutionStrategy>> actualStrategyClasses =\n                strategies.stream().map(SubstitutionStrategy::getClass).collect(Collectors.toList());\n\n        final List<Class<? extends SubstitutionStrategy>> expectedStrategyClasses = getAllStrategyClasses();\n        assertThat(actualStrategyClasses).hasSameElementsAs(expectedStrategyClasses);\n    }", "signature": "void allSubstitutionStrategiesHaveBeenConfigured()", "full_signature": "@Test public void allSubstitutionStrategiesHaveBeenConfigured()", "class_method_signature": "SubstitutionStrategyRegistryTest.allSubstitutionStrategiesHaveBeenConfigured()", "testcase": true, "constructor": false, "invocations": ["getStrategies", "collect", "map", "stream", "toList", "getAllStrategyClasses", "hasSameElementsAs", "assertThat"]}, "focal_class": {"identifier": "SubstitutionStrategyRegistry", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final List<SubstitutionStrategy> strategies;", "modifier": "private final", "type": "List<SubstitutionStrategy>", "declarator": "strategies", "var_name": "strategies"}], "methods": [{"identifier": "SubstitutionStrategyRegistry", "parameters": "()", "modifiers": "private", "return": "", "signature": " SubstitutionStrategyRegistry()", "full_signature": "private  SubstitutionStrategyRegistry()", "class_method_signature": "SubstitutionStrategyRegistry.SubstitutionStrategyRegistry()", "testcase": false, "constructor": true}, {"identifier": "newInstance", "parameters": "()", "modifiers": "public static", "return": "SubstitutionStrategyRegistry", "signature": "SubstitutionStrategyRegistry newInstance()", "full_signature": "public static SubstitutionStrategyRegistry newInstance()", "class_method_signature": "SubstitutionStrategyRegistry.newInstance()", "testcase": false, "constructor": false}, {"identifier": "getMatchingStrategy", "parameters": "(final WithDittoHeaders withDittoHeaders)", "modifiers": "public final", "return": "Optional<SubstitutionStrategy>", "signature": "Optional<SubstitutionStrategy> getMatchingStrategy(final WithDittoHeaders withDittoHeaders)", "full_signature": "public final Optional<SubstitutionStrategy> getMatchingStrategy(final WithDittoHeaders withDittoHeaders)", "class_method_signature": "SubstitutionStrategyRegistry.getMatchingStrategy(final WithDittoHeaders withDittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getStrategies", "parameters": "()", "modifiers": "", "return": "List<SubstitutionStrategy>", "signature": "List<SubstitutionStrategy> getStrategies()", "full_signature": " List<SubstitutionStrategy> getStrategies()", "class_method_signature": "SubstitutionStrategyRegistry.getStrategies()", "testcase": false, "constructor": false}, {"identifier": "createStrategies", "parameters": "()", "modifiers": "private static", "return": "List<SubstitutionStrategy>", "signature": "List<SubstitutionStrategy> createStrategies()", "full_signature": "private static List<SubstitutionStrategy> createStrategies()", "class_method_signature": "SubstitutionStrategyRegistry.createStrategies()", "testcase": false, "constructor": false}], "file": "services/concierge/enforcement/src/main/java/org/eclipse/ditto/services/concierge/enforcement/placeholders/strategies/SubstitutionStrategyRegistry.java"}, "focal_method": {"identifier": "getStrategies", "parameters": "()", "modifiers": "", "return": "List<SubstitutionStrategy>", "body": "List<SubstitutionStrategy> getStrategies() {\n        return strategies;\n    }", "signature": "List<SubstitutionStrategy> getStrategies()", "full_signature": " List<SubstitutionStrategy> getStrategies()", "class_method_signature": "SubstitutionStrategyRegistry.getStrategies()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}