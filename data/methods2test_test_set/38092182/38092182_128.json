{"test_class": {"identifier": "BaseHtmlWebViewTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BaseHtmlWebView subject;", "modifier": "private", "type": "BaseHtmlWebView", "declarator": "subject", "var_name": "subject"}, {"original_string": "private MotionEvent touchDown;", "modifier": "private", "type": "MotionEvent", "declarator": "touchDown", "var_name": "touchDown"}, {"original_string": "private MotionEvent touchUp;", "modifier": "private", "type": "MotionEvent", "declarator": "touchUp", "var_name": "touchUp"}, {"original_string": "private AdConfiguration adConfiguration;", "modifier": "private", "type": "AdConfiguration", "declarator": "adConfiguration", "var_name": "adConfiguration"}], "file": "MoPubAd/mopub-sdk/src/test/java/com/mopub/mobileads/BaseHtmlWebViewTest.java"}, "test_case": {"identifier": "loadUrl_whenUrlIsJavascript_shouldCallSuperLoadUrl", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void loadUrl_whenUrlIsJavascript_shouldCallSuperLoadUrl() throws Exception {\n        String javascriptUrl = \"javascript:function() {alert(\\\"guy\\\")};\";\n        subject.loadUrl(javascriptUrl);\n\n        assertThat(shadowOf(subject).getLastLoadedUrl()).isEqualTo(javascriptUrl);\n    }", "signature": "void loadUrl_whenUrlIsJavascript_shouldCallSuperLoadUrl()", "full_signature": "@Test public void loadUrl_whenUrlIsJavascript_shouldCallSuperLoadUrl()", "class_method_signature": "BaseHtmlWebViewTest.loadUrl_whenUrlIsJavascript_shouldCallSuperLoadUrl()", "testcase": true, "constructor": false, "invocations": ["loadUrl", "isEqualTo", "assertThat", "getLastLoadedUrl", "shadowOf"]}, "focal_class": {"identifier": "BaseHtmlWebView", "superclass": "extends BaseWebView", "interfaces": "implements UserClickListener", "fields": [{"original_string": "private final ViewGestureDetector mViewGestureDetector;", "modifier": "private final", "type": "ViewGestureDetector", "declarator": "mViewGestureDetector", "var_name": "mViewGestureDetector"}, {"original_string": "private boolean mClicked;", "modifier": "private", "type": "boolean", "declarator": "mClicked", "var_name": "mClicked"}], "methods": [{"identifier": "BaseHtmlWebView", "parameters": "(Context context, AdConfiguration adConfiguration)", "modifiers": "public", "return": "", "signature": " BaseHtmlWebView(Context context, AdConfiguration adConfiguration)", "full_signature": "public  BaseHtmlWebView(Context context, AdConfiguration adConfiguration)", "class_method_signature": "BaseHtmlWebView.BaseHtmlWebView(Context context, AdConfiguration adConfiguration)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "(boolean isScrollable)", "modifiers": "public", "return": "void", "signature": "void init(boolean isScrollable)", "full_signature": "public void init(boolean isScrollable)", "class_method_signature": "BaseHtmlWebView.init(boolean isScrollable)", "testcase": false, "constructor": false}, {"identifier": "loadUrl", "parameters": "(String url)", "modifiers": "@Override public", "return": "void", "signature": "void loadUrl(String url)", "full_signature": "@Override public void loadUrl(String url)", "class_method_signature": "BaseHtmlWebView.loadUrl(String url)", "testcase": false, "constructor": false}, {"identifier": "disableScrollingAndZoom", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void disableScrollingAndZoom()", "full_signature": "private void disableScrollingAndZoom()", "class_method_signature": "BaseHtmlWebView.disableScrollingAndZoom()", "testcase": false, "constructor": false}, {"identifier": "loadHtmlResponse", "parameters": "(String htmlResponse)", "modifiers": "", "return": "void", "signature": "void loadHtmlResponse(String htmlResponse)", "full_signature": " void loadHtmlResponse(String htmlResponse)", "class_method_signature": "BaseHtmlWebView.loadHtmlResponse(String htmlResponse)", "testcase": false, "constructor": false}, {"identifier": "initializeOnTouchListener", "parameters": "(final boolean isScrollable)", "modifiers": "", "return": "void", "signature": "void initializeOnTouchListener(final boolean isScrollable)", "full_signature": " void initializeOnTouchListener(final boolean isScrollable)", "class_method_signature": "BaseHtmlWebView.initializeOnTouchListener(final boolean isScrollable)", "testcase": false, "constructor": false}, {"identifier": "onUserClick", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onUserClick()", "full_signature": "@Override public void onUserClick()", "class_method_signature": "BaseHtmlWebView.onUserClick()", "testcase": false, "constructor": false}, {"identifier": "onResetUserClick", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onResetUserClick()", "full_signature": "@Override public void onResetUserClick()", "class_method_signature": "BaseHtmlWebView.onResetUserClick()", "testcase": false, "constructor": false}, {"identifier": "wasClicked", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean wasClicked()", "full_signature": "@Override public boolean wasClicked()", "class_method_signature": "BaseHtmlWebView.wasClicked()", "testcase": false, "constructor": false}], "file": "MoPubAd/mopub-sdk/src/main/java/com/mopub/mobileads/BaseHtmlWebView.java"}, "focal_method": {"identifier": "loadUrl", "parameters": "(String url)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void loadUrl(String url) {\n        if (url == null) return;\n\n        MoPubLog.d(\"Loading url: \" + url);\n        if (url.startsWith(\"javascript:\")) {\n            super.loadUrl(url);\n        }\n    }", "signature": "void loadUrl(String url)", "full_signature": "@Override public void loadUrl(String url)", "class_method_signature": "BaseHtmlWebView.loadUrl(String url)", "testcase": false, "constructor": false, "invocations": ["d", "startsWith", "loadUrl"]}, "repository": {"repo_id": 38092182, "url": "https://github.com/harshalbenake/hbworkspace2-100", "language": "Java", "is_fork": false, "fork_count": 160, "stargazer_count": 191, "size": 307516, "license": "licensed"}}