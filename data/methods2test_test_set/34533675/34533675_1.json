{"test_class": {"identifier": "RDDSampleUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/datasyslab/geospark/utils/RDDSampleUtilsTest.java"}, "test_case": {"identifier": "testGetSampleNumbers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetSampleNumbers()\n    {\n        assertEquals(10, RDDSampleUtils.getSampleNumbers(2, 10, -1));\n        assertEquals(100, RDDSampleUtils.getSampleNumbers(2, 100, -1));\n        assertEquals(10, RDDSampleUtils.getSampleNumbers(5, 1000, -1));\n        assertEquals(100, RDDSampleUtils.getSampleNumbers(5, 10000, -1));\n        assertEquals(100, RDDSampleUtils.getSampleNumbers(5, 10001, -1));\n        assertEquals(1000, RDDSampleUtils.getSampleNumbers(5, 100011, -1));\n        assertEquals(99, RDDSampleUtils.getSampleNumbers(6, 100011, 99));\n        assertEquals(999, RDDSampleUtils.getSampleNumbers(20, 999, -1));\n        assertEquals(40, RDDSampleUtils.getSampleNumbers(20, 1000, -1));\n    }", "signature": "void testGetSampleNumbers()", "full_signature": "@Test public void testGetSampleNumbers()", "class_method_signature": "RDDSampleUtilsTest.testGetSampleNumbers()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getSampleNumbers", "assertEquals", "getSampleNumbers", "assertEquals", "getSampleNumbers", "assertEquals", "getSampleNumbers", "assertEquals", "getSampleNumbers", "assertEquals", "getSampleNumbers", "assertEquals", "getSampleNumbers", "assertEquals", "getSampleNumbers", "assertEquals", "getSampleNumbers"]}, "focal_class": {"identifier": "RDDSampleUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getSampleNumbers", "parameters": "(int numPartitions, long totalNumberOfRecords, int givenSampleNumbers)", "modifiers": "public static", "return": "int", "signature": "int getSampleNumbers(int numPartitions, long totalNumberOfRecords, int givenSampleNumbers)", "full_signature": "public static int getSampleNumbers(int numPartitions, long totalNumberOfRecords, int givenSampleNumbers)", "class_method_signature": "RDDSampleUtils.getSampleNumbers(int numPartitions, long totalNumberOfRecords, int givenSampleNumbers)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/datasyslab/geospark/utils/RDDSampleUtils.java"}, "focal_method": {"identifier": "getSampleNumbers", "parameters": "(int numPartitions, long totalNumberOfRecords, int givenSampleNumbers)", "modifiers": "public static", "return": "int", "body": "public static int getSampleNumbers(int numPartitions, long totalNumberOfRecords, int givenSampleNumbers)\n    {\n        if (givenSampleNumbers > 0) {\n            if (givenSampleNumbers > totalNumberOfRecords) {\n                throw new IllegalArgumentException(\"[GeoSpark] Number of samples \" + givenSampleNumbers + \" cannot be larger than total records num \" + totalNumberOfRecords);\n            }\n            return givenSampleNumbers;\n        }\n\n        // Make sure that number of records >= 2 * number of partitions\n        if (totalNumberOfRecords < 2 * numPartitions) {\n            throw new IllegalArgumentException(\"[GeoSpark] Number of partitions \" + numPartitions + \" cannot be larger than half of total records num \" + totalNumberOfRecords);\n        }\n\n        if (totalNumberOfRecords < 1000) {\n            return (int) totalNumberOfRecords;\n        }\n\n        final int minSampleCnt = numPartitions * 2;\n        return (int) Math.max(minSampleCnt, Math.min(totalNumberOfRecords / 100, Integer.MAX_VALUE));\n    }", "signature": "int getSampleNumbers(int numPartitions, long totalNumberOfRecords, int givenSampleNumbers)", "full_signature": "public static int getSampleNumbers(int numPartitions, long totalNumberOfRecords, int givenSampleNumbers)", "class_method_signature": "RDDSampleUtils.getSampleNumbers(int numPartitions, long totalNumberOfRecords, int givenSampleNumbers)", "testcase": false, "constructor": false, "invocations": ["max", "min"]}, "repository": {"repo_id": 34533675, "url": "https://github.com/DataSystemsLab/GeoSpark", "language": "Java", "is_fork": false, "fork_count": 357, "stargazer_count": 703, "size": 459019, "license": "licensed"}}