{"test_class": {"identifier": "ScriptFragmentTest", "superclass": "", "interfaces": "", "fields": [], "file": "beanmother-core/src/test/java/io/beanmother/core/script/ScriptFragmentTest.java"}, "test_case": {"identifier": "testCheckScriptFixtureValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCheckScriptFixtureValue() {\n        assertFalse(ScriptFragment.isScript(new FixtureValue(\"test\")));\n        assertFalse(ScriptFragment.isScript(new FixtureValue(1)));\n        assertFalse(ScriptFragment.isScript(new FixtureValue(\"{test}\")));\n        assertFalse(ScriptFragment.isScript(new FixtureValue(\"${test\")));\n\n        assertTrue(ScriptFragment.isScript(new FixtureValue(\"${test}\")));\n        assertTrue(ScriptFragment.isScript(new FixtureValue(\"${test.example}\")));\n        assertTrue(ScriptFragment.isScript(new FixtureValue(\"${test.example.abc()}\")));\n    }", "signature": "void testCheckScriptFixtureValue()", "full_signature": "@Test public void testCheckScriptFixtureValue()", "class_method_signature": "ScriptFragmentTest.testCheckScriptFixtureValue()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isScript", "assertFalse", "isScript", "assertFalse", "isScript", "assertFalse", "isScript", "assertTrue", "isScript", "assertTrue", "isScript", "assertTrue", "isScript"]}, "focal_class": {"identifier": "ScriptFragment", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static Pattern FIXTURE_VALUE_SCRIPT_PATTERN = Pattern.compile(\"(?<=\\\\$\\\\{)(.+?)(?=})\");", "modifier": "private final static", "type": "Pattern", "declarator": "FIXTURE_VALUE_SCRIPT_PATTERN = Pattern.compile(\"(?<=\\\\$\\\\{)(.+?)(?=})\")", "var_name": "FIXTURE_VALUE_SCRIPT_PATTERN"}, {"original_string": "private final static Pattern ARGUMENTS_PATTERN = Pattern.compile(\"(?<=\\\\()(.*?)(?=\\\\))\");", "modifier": "private final static", "type": "Pattern", "declarator": "ARGUMENTS_PATTERN = Pattern.compile(\"(?<=\\\\()(.*?)(?=\\\\))\")", "var_name": "ARGUMENTS_PATTERN"}, {"original_string": "private final static String FRAGMENT_DELIM = \"\\\\.\";", "modifier": "private final static", "type": "String", "declarator": "FRAGMENT_DELIM = \"\\\\.\"", "var_name": "FRAGMENT_DELIM"}, {"original_string": "private String methodName;", "modifier": "private", "type": "String", "declarator": "methodName", "var_name": "methodName"}, {"original_string": "private List<String> arguments = new ArrayList<>();", "modifier": "private", "type": "List<String>", "declarator": "arguments = new ArrayList<>()", "var_name": "arguments"}, {"original_string": "private ScriptFragment next;", "modifier": "private", "type": "ScriptFragment", "declarator": "next", "var_name": "next"}], "methods": [{"identifier": "of", "parameters": "(FixtureValue fixtureValue)", "modifiers": "public static", "return": "ScriptFragment", "signature": "ScriptFragment of(FixtureValue fixtureValue)", "full_signature": "public static ScriptFragment of(FixtureValue fixtureValue)", "class_method_signature": "ScriptFragment.of(FixtureValue fixtureValue)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(String script)", "modifiers": "public static", "return": "ScriptFragment", "signature": "ScriptFragment of(String script)", "full_signature": "public static ScriptFragment of(String script)", "class_method_signature": "ScriptFragment.of(String script)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(String script)", "modifiers": "private static", "return": "ScriptFragment", "signature": "ScriptFragment build(String script)", "full_signature": "private static ScriptFragment build(String script)", "class_method_signature": "ScriptFragment.build(String script)", "testcase": false, "constructor": false}, {"identifier": "isScript", "parameters": "(FixtureValue fixtureValue)", "modifiers": "public static", "return": "boolean", "signature": "boolean isScript(FixtureValue fixtureValue)", "full_signature": "public static boolean isScript(FixtureValue fixtureValue)", "class_method_signature": "ScriptFragment.isScript(FixtureValue fixtureValue)", "testcase": false, "constructor": false}, {"identifier": "ScriptFragment", "parameters": "(String methodName)", "modifiers": "public", "return": "", "signature": " ScriptFragment(String methodName)", "full_signature": "public  ScriptFragment(String methodName)", "class_method_signature": "ScriptFragment.ScriptFragment(String methodName)", "testcase": false, "constructor": true}, {"identifier": "ScriptFragment", "parameters": "(String methodName, String ... arguments)", "modifiers": "public", "return": "", "signature": " ScriptFragment(String methodName, String ... arguments)", "full_signature": "public  ScriptFragment(String methodName, String ... arguments)", "class_method_signature": "ScriptFragment.ScriptFragment(String methodName, String ... arguments)", "testcase": false, "constructor": true}, {"identifier": "getMethodName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMethodName()", "full_signature": "public String getMethodName()", "class_method_signature": "ScriptFragment.getMethodName()", "testcase": false, "constructor": false}, {"identifier": "getArguments", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getArguments()", "full_signature": "public List<String> getArguments()", "class_method_signature": "ScriptFragment.getArguments()", "testcase": false, "constructor": false}, {"identifier": "hasArguments", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasArguments()", "full_signature": "public boolean hasArguments()", "class_method_signature": "ScriptFragment.hasArguments()", "testcase": false, "constructor": false}, {"identifier": "getNext", "parameters": "()", "modifiers": "public", "return": "ScriptFragment", "signature": "ScriptFragment getNext()", "full_signature": "public ScriptFragment getNext()", "class_method_signature": "ScriptFragment.getNext()", "testcase": false, "constructor": false}, {"identifier": "appendToTail", "parameters": "(ScriptFragment scriptFragment)", "modifiers": "public", "return": "void", "signature": "void appendToTail(ScriptFragment scriptFragment)", "full_signature": "public void appendToTail(ScriptFragment scriptFragment)", "class_method_signature": "ScriptFragment.appendToTail(ScriptFragment scriptFragment)", "testcase": false, "constructor": false}, {"identifier": "toScriptString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toScriptString()", "full_signature": "public String toScriptString()", "class_method_signature": "ScriptFragment.toScriptString()", "testcase": false, "constructor": false}], "file": "beanmother-core/src/main/java/io/beanmother/core/script/ScriptFragment.java"}, "focal_method": {"identifier": "isScript", "parameters": "(FixtureValue fixtureValue)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isScript(FixtureValue fixtureValue) {\n        return (fixtureValue.getValue() instanceof String)\n                && FIXTURE_VALUE_SCRIPT_PATTERN.matcher((CharSequence) fixtureValue.getValue()).find();\n    }", "signature": "boolean isScript(FixtureValue fixtureValue)", "full_signature": "public static boolean isScript(FixtureValue fixtureValue)", "class_method_signature": "ScriptFragment.isScript(FixtureValue fixtureValue)", "testcase": false, "constructor": false, "invocations": ["getValue", "find", "matcher", "getValue"]}, "repository": {"repo_id": 100366560, "url": "https://github.com/keepcosmos/beanmother", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 95, "size": 688, "license": "licensed"}}