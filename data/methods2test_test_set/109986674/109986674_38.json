{"test_class": {"identifier": "ChartJsonConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ChartJsonConverter chartJsonConverter;", "modifier": "private", "type": "ChartJsonConverter", "declarator": "chartJsonConverter", "var_name": "chartJsonConverter"}], "file": "plugin-code/src/test/java/com/trivago/cluecumber/rendering/pages/charts/ChartJsonConverterTest.java"}, "test_case": {"identifier": "getJsonTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getJsonTest() {\n        String expected = \"{\\n\" +\n                \"  \\\"data\\\": {\\n\" +\n                \"    \\\"labels\\\": [\\n\" +\n                \"      \\\"1\\\",\\n\" +\n                \"      \\\"2\\\",\\n\" +\n                \"      \\\"3\\\",\\n\" +\n                \"      \\\"4\\\",\\n\" +\n                \"      \\\"5\\\",\\n\" +\n                \"      \\\"6\\\"\\n\" +\n                \"    ],\\n\" +\n                \"    \\\"datasets\\\": [\\n\" +\n                \"      {\\n\" +\n                \"        \\\"data\\\": [\\n\" +\n                \"          340,\\n\" +\n                \"          0,\\n\" +\n                \"          0,\\n\" +\n                \"          440,\\n\" +\n                \"          340,\\n\" +\n                \"          0\\n\" +\n                \"        ],\\n\" +\n                \"        \\\"backgroundColor\\\": [\\n\" +\n                \"          \\\"rgba(240,0,0,1.000)\\\"\\n\" +\n                \"        ],\\n\" +\n                \"        \\\"label\\\": \\\"failed\\\",\\n\" +\n                \"        \\\"stack\\\": \\\"complete\\\"\\n\" +\n                \"      },\\n\" +\n                \"      {\\n\" +\n                \"        \\\"data\\\": [\\n\" +\n                \"          0,\\n\" +\n                \"          340,\\n\" +\n                \"          440,\\n\" +\n                \"          0,\\n\" +\n                \"          0,\\n\" +\n                \"          340\\n\" +\n                \"        ],\\n\" +\n                \"        \\\"backgroundColor\\\": [\\n\" +\n                \"          \\\"rgba(0,240,0,1.000)\\\"\\n\" +\n                \"        ],\\n\" +\n                \"        \\\"label\\\": \\\"passed\\\",\\n\" +\n                \"        \\\"stack\\\": \\\"complete\\\"\\n\" +\n                \"      }\\n\" +\n                \"    ]\\n\" +\n                \"  },\\n\" +\n                \"  \\\"options\\\": {\\n\" +\n                \"    \\\"scales\\\": {\\n\" +\n                \"      \\\"xAxes\\\": [\\n\" +\n                \"        {\\n\" +\n                \"          \\\"ticks\\\": {\\n\" +\n                \"            \\\"min\\\": 0,\\n\" +\n                \"            \\\"stepSize\\\": 0,\\n\" +\n                \"            \\\"display\\\": true\\n\" +\n                \"          },\\n\" +\n                \"          \\\"stacked\\\": false,\\n\" +\n                \"          \\\"scaleLabel\\\": {\\n\" +\n                \"            \\\"display\\\": true,\\n\" +\n                \"            \\\"labelString\\\": \\\"Step Number\\\"\\n\" +\n                \"          },\\n\" +\n                \"          \\\"stepSize\\\": 0.0\\n\" +\n                \"        }\\n\" +\n                \"      ],\\n\" +\n                \"      \\\"yAxes\\\": [\\n\" +\n                \"        {\\n\" +\n                \"          \\\"ticks\\\": {\\n\" +\n                \"            \\\"min\\\": 0,\\n\" +\n                \"            \\\"stepSize\\\": 0,\\n\" +\n                \"            \\\"display\\\": true\\n\" +\n                \"          },\\n\" +\n                \"          \\\"stacked\\\": true,\\n\" +\n                \"          \\\"scaleLabel\\\": {\\n\" +\n                \"            \\\"display\\\": true,\\n\" +\n                \"            \\\"labelString\\\": \\\"Step Runtime\\\"\\n\" +\n                \"          },\\n\" +\n                \"          \\\"stepSize\\\": 0.0\\n\" +\n                \"        }\\n\" +\n                \"      ]\\n\" +\n                \"    }\\n\" +\n                \"  },\\n\" +\n                \"  \\\"type\\\": \\\"bar\\\"\\n\" +\n                \"}\";\n\n        Chart chart = new Chart();\n\n        Data data = new Data();\n\n        List<String> labels = new ArrayList<>();\n        labels.add(\"1\");\n        labels.add(\"2\");\n        labels.add(\"3\");\n        labels.add(\"4\");\n        labels.add(\"5\");\n        labels.add(\"6\");\n        data.setLabels(labels);\n\n        List<Dataset> datasets = new ArrayList<>();\n\n        Dataset dataset1 = new Dataset();\n\n        List<Integer> data1 = new ArrayList<>();\n        data1.add(340);\n        data1.add(0);\n        data1.add(0);\n        data1.add(440);\n        data1.add(340);\n        data1.add(0);\n        dataset1.setData(data1);\n        dataset1.setLabel(\"failed\");\n        dataset1.setStack(\"complete\");\n        dataset1.setBackgroundColor(new ArrayList<>(Collections.singletonList(\"rgba(240,0,0,1.000)\")));\n        datasets.add(dataset1);\n\n        Dataset dataset2 = new Dataset();\n        List<Integer> data2 = new ArrayList<>();\n        data2.add(0);\n        data2.add(340);\n        data2.add(440);\n        data2.add(0);\n        data2.add(0);\n        data2.add(340);\n        dataset2.setData(data2);\n        dataset2.setLabel(\"passed\");\n        dataset2.setStack(\"complete\");\n        dataset2.setBackgroundColor(new ArrayList<>(Collections.singletonList(\"rgba(0,240,0,1.000)\")));\n        datasets.add(dataset2);\n\n        data.setDatasets(datasets);\n\n        chart.setData(data);\n\n        Options options = new Options();\n        Scales scales = new Scales();\n        List<Axis> xAxes = new ArrayList<>();\n        Axis xAxis = new Axis();\n        Ticks xTicks = new Ticks();\n        xAxis.setTicks(xTicks);\n        ScaleLabel xScaleLabel = new ScaleLabel();\n        xScaleLabel.setDisplay(true);\n        xScaleLabel.setLabelString(\"Step Number\");\n        xAxis.setScaleLabel(xScaleLabel);\n        xAxes.add(xAxis);\n        scales.setxAxes(xAxes);\n\n        List<Axis> yAxes = new ArrayList<>();\n        Axis yAxis = new Axis();\n        yAxis.setStacked(true);\n        Ticks yTicks = new Ticks();\n        yAxis.setTicks(yTicks);\n        ScaleLabel yScaleLabel = new ScaleLabel();\n        yScaleLabel.setDisplay(true);\n        yScaleLabel.setLabelString(\"Step Runtime\");\n        yAxis.setScaleLabel(yScaleLabel);\n        yAxes.add(yAxis);\n        scales.setyAxes(yAxes);\n\n        options.setScales(scales);\n        chart.setOptions(options);\n\n        chart.setType(ChartConfiguration.Type.bar);\n\n        assertThat(chartJsonConverter.convertChartToJson(chart), is(expected));\n    }", "signature": "void getJsonTest()", "full_signature": "@Test public void getJsonTest()", "class_method_signature": "ChartJsonConverterTest.getJsonTest()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "add", "add", "setLabels", "add", "add", "add", "add", "add", "add", "setData", "setLabel", "setStack", "setBackgroundColor", "singletonList", "add", "add", "add", "add", "add", "add", "add", "setData", "setLabel", "setStack", "setBackgroundColor", "singletonList", "add", "setDatasets", "setData", "setTicks", "setDisplay", "setLabelString", "setScaleLabel", "add", "setxAxes", "setStacked", "setTicks", "setDisplay", "setLabelString", "setScaleLabel", "add", "setyAxes", "setScales", "setOptions", "setType", "assertThat", "convertChartToJson", "is"]}, "focal_class": {"identifier": "ChartJsonConverter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Gson gson;", "modifier": "private final", "type": "Gson", "declarator": "gson", "var_name": "gson"}], "methods": [{"identifier": "ChartJsonConverter", "parameters": "()", "modifiers": "@Inject public", "return": "", "signature": " ChartJsonConverter()", "full_signature": "@Inject public  ChartJsonConverter()", "class_method_signature": "ChartJsonConverter.ChartJsonConverter()", "testcase": false, "constructor": true}, {"identifier": "convertChartToJson", "parameters": "(final Chart chart)", "modifiers": "public", "return": "String", "signature": "String convertChartToJson(final Chart chart)", "full_signature": "public String convertChartToJson(final Chart chart)", "class_method_signature": "ChartJsonConverter.convertChartToJson(final Chart chart)", "testcase": false, "constructor": false}], "file": "plugin-code/src/main/java/com/trivago/cluecumber/rendering/pages/charts/ChartJsonConverter.java"}, "focal_method": {"identifier": "convertChartToJson", "parameters": "(final Chart chart)", "modifiers": "public", "return": "String", "body": "public String convertChartToJson(final Chart chart) {\n        return gson.toJson(chart);\n    }", "signature": "String convertChartToJson(final Chart chart)", "full_signature": "public String convertChartToJson(final Chart chart)", "class_method_signature": "ChartJsonConverter.convertChartToJson(final Chart chart)", "testcase": false, "constructor": false, "invocations": ["toJson"]}, "repository": {"repo_id": 109986674, "url": "https://github.com/trivago/cluecumber-report-plugin", "stars": 124, "created": "11/8/2017 2:30:19 PM +00:00", "updates": "2020-01-27T12:00:16+00:00", "fork": "False", "license": "licensed"}}