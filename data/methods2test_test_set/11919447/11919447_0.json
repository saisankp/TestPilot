{"test_class": {"identifier": "QueryControllerTest", "superclass": "", "interfaces": "", "fields": [], "file": "cucumber-mongodb-rest/src/test/java/at/porscheinformatik/cucumber/mongodb/rest/controller/QueryControllerTest.java"}, "test_case": {"identifier": "last_ten_with_list_nine", "parameters": "(int cursorLength, int lastNrOfDocuments, int expectedNrOfSkips)", "modifiers": "@Test(dataProvider = \"computeNumberOfSkips\") public", "return": "void", "body": "@Test(dataProvider = \"computeNumberOfSkips\")\n    public void last_ten_with_list_nine(int cursorLength, int lastNrOfDocuments, int expectedNrOfSkips)\n    {\n        QueryController queryController = new QueryController();\n        int actualNrOfSkips = queryController.skipToLast(cursorLength, lastNrOfDocuments);\n        assertEquals(actualNrOfSkips, expectedNrOfSkips);\n    }", "signature": "void last_ten_with_list_nine(int cursorLength, int lastNrOfDocuments, int expectedNrOfSkips)", "full_signature": "@Test(dataProvider = \"computeNumberOfSkips\") public void last_ten_with_list_nine(int cursorLength, int lastNrOfDocuments, int expectedNrOfSkips)", "class_method_signature": "QueryControllerTest.last_ten_with_list_nine(int cursorLength, int lastNrOfDocuments, int expectedNrOfSkips)", "testcase": true, "constructor": false, "invocations": ["skipToLast", "assertEquals"]}, "focal_class": {"identifier": "QueryController", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private MongoOperations mongodb;", "modifier": "@Autowired\n    private", "type": "MongoOperations", "declarator": "mongodb", "var_name": "mongodb"}], "methods": [{"identifier": "deleteDocument", "parameters": "(@PathVariable(\"collection\") String collection,\n        @PathVariable(\"id\") String id)", "modifiers": "@Secured(Roles.ROLE_ADMIN) @RequestMapping(value = \"/{collection}/{id}\", method = RequestMethod.DELETE) public", "return": "ResponseEntity<?>", "signature": "ResponseEntity<?> deleteDocument(@PathVariable(\"collection\") String collection,\n        @PathVariable(\"id\") String id)", "full_signature": "@Secured(Roles.ROLE_ADMIN) @RequestMapping(value = \"/{collection}/{id}\", method = RequestMethod.DELETE) public ResponseEntity<?> deleteDocument(@PathVariable(\"collection\") String collection,\n        @PathVariable(\"id\") String id)", "class_method_signature": "QueryController.deleteDocument(@PathVariable(\"collection\") String collection,\n        @PathVariable(\"id\") String id)", "testcase": false, "constructor": false}, {"identifier": "dropWholeCollection", "parameters": "(String collection)", "modifiers": "private", "return": "void", "signature": "void dropWholeCollection(String collection)", "full_signature": "private void dropWholeCollection(String collection)", "class_method_signature": "QueryController.dropWholeCollection(String collection)", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(\n        @PathVariable(\"collection\") String collection,\n        @PathVariable(\"id\") String id)", "modifiers": "@RequestMapping(value = \"/{collection}/{id}\", method = RequestMethod.GET) public", "return": "ResponseEntity<String>", "signature": "ResponseEntity<String> find(\n        @PathVariable(\"collection\") String collection,\n        @PathVariable(\"id\") String id)", "full_signature": "@RequestMapping(value = \"/{collection}/{id}\", method = RequestMethod.GET) public ResponseEntity<String> find(\n        @PathVariable(\"collection\") String collection,\n        @PathVariable(\"id\") String id)", "class_method_signature": "QueryController.find(\n        @PathVariable(\"collection\") String collection,\n        @PathVariable(\"id\") String id)", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(\n        @PathVariable(\"collection\") String collection,\n        @RequestParam(value = \"version\", required = false) String version,\n        @RequestParam(value = \"category\", required = false) String category,\n        @RequestParam(value = \"limit\", required = false) String limit,\n        @RequestParam(value = \"skip\", required = false) String skip,\n        @RequestParam(value = \"sort\", required = false) String sort,\n        @RequestParam(value = \"last\", required = false) String last)", "modifiers": "@RequestMapping(value = \"/{collection}/\", method = RequestMethod.GET) @ResponseBody public", "return": "ResponseEntity<String>", "signature": "ResponseEntity<String> find(\n        @PathVariable(\"collection\") String collection,\n        @RequestParam(value = \"version\", required = false) String version,\n        @RequestParam(value = \"category\", required = false) String category,\n        @RequestParam(value = \"limit\", required = false) String limit,\n        @RequestParam(value = \"skip\", required = false) String skip,\n        @RequestParam(value = \"sort\", required = false) String sort,\n        @RequestParam(value = \"last\", required = false) String last)", "full_signature": "@RequestMapping(value = \"/{collection}/\", method = RequestMethod.GET) @ResponseBody public ResponseEntity<String> find(\n        @PathVariable(\"collection\") String collection,\n        @RequestParam(value = \"version\", required = false) String version,\n        @RequestParam(value = \"category\", required = false) String category,\n        @RequestParam(value = \"limit\", required = false) String limit,\n        @RequestParam(value = \"skip\", required = false) String skip,\n        @RequestParam(value = \"sort\", required = false) String sort,\n        @RequestParam(value = \"last\", required = false) String last)", "class_method_signature": "QueryController.find(\n        @PathVariable(\"collection\") String collection,\n        @RequestParam(value = \"version\", required = false) String version,\n        @RequestParam(value = \"category\", required = false) String category,\n        @RequestParam(value = \"limit\", required = false) String limit,\n        @RequestParam(value = \"skip\", required = false) String skip,\n        @RequestParam(value = \"sort\", required = false) String sort,\n        @RequestParam(value = \"last\", required = false) String last)", "testcase": false, "constructor": false}, {"identifier": "getDbCursor", "parameters": "(final String collection, final String version, final String category)", "modifiers": "private", "return": "DBCursor", "signature": "DBCursor getDbCursor(final String collection, final String version, final String category)", "full_signature": "private DBCursor getDbCursor(final String collection, final String version, final String category)", "class_method_signature": "QueryController.getDbCursor(final String collection, final String version, final String category)", "testcase": false, "constructor": false}, {"identifier": "skipElements", "parameters": "(final String collection, final String skipValue, final String last, final DBCursor dbData)", "modifiers": "private", "return": "void", "signature": "void skipElements(final String collection, final String skipValue, final String last, final DBCursor dbData)", "full_signature": "private void skipElements(final String collection, final String skipValue, final String last, final DBCursor dbData)", "class_method_signature": "QueryController.skipElements(final String collection, final String skipValue, final String last, final DBCursor dbData)", "testcase": false, "constructor": false}, {"identifier": "skipToLast", "parameters": "(int cursorLength, int limit)", "modifiers": "", "return": "int", "signature": "int skipToLast(int cursorLength, int limit)", "full_signature": " int skipToLast(int cursorLength, int limit)", "class_method_signature": "QueryController.skipToLast(int cursorLength, int limit)", "testcase": false, "constructor": false}, {"identifier": "limitResult", "parameters": "(final String limitValue, final DBCursor dbData)", "modifiers": "private", "return": "void", "signature": "void limitResult(final String limitValue, final DBCursor dbData)", "full_signature": "private void limitResult(final String limitValue, final DBCursor dbData)", "class_method_signature": "QueryController.limitResult(final String limitValue, final DBCursor dbData)", "testcase": false, "constructor": false}, {"identifier": "sortResult", "parameters": "(final String sort, final DBCursor dbData)", "modifiers": "private", "return": "void", "signature": "void sortResult(final String sort, final DBCursor dbData)", "full_signature": "private void sortResult(final String sort, final DBCursor dbData)", "class_method_signature": "QueryController.sortResult(final String sort, final DBCursor dbData)", "testcase": false, "constructor": false}], "file": "cucumber-mongodb-rest/src/main/java/at/porscheinformatik/cucumber/mongodb/rest/controller/QueryController.java"}, "focal_method": {"identifier": "skipToLast", "parameters": "(int cursorLength, int limit)", "modifiers": "", "return": "int", "body": "int skipToLast(int cursorLength, int limit)\n    {\n        if (cursorLength > limit)\n        {\n            return cursorLength - limit;\n        }\n        return 0;\n    }", "signature": "int skipToLast(int cursorLength, int limit)", "full_signature": " int skipToLast(int cursorLength, int limit)", "class_method_signature": "QueryController.skipToLast(int cursorLength, int limit)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 11919447, "url": "https://github.com/porscheinformatik/cucumber-report-db", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 16, "size": 2615, "license": "licensed"}}