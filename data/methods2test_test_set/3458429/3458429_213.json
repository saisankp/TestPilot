{"test_class": {"identifier": "TestCollectionUtils", "superclass": "", "interfaces": "", "fields": [], "file": "firefly-common/src/test/java/com/fireflysource/common/collection/TestCollectionUtils.java"}, "test_case": {"identifier": "testUnion", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testUnion() {\n        Set<Integer> a = newHashSet(2, 3, 4);\n        Set<Integer> b = newHashSet(3, 4, 5, 6);\n        Set<Integer> result = CollectionUtils.union(a, b);\n        assertEquals(newHashSet(2, 3, 4, 5, 6), result);\n\n        result = CollectionUtils.union(a, newHashSet());\n        assertEquals(a, result);\n    }", "signature": "void testUnion()", "full_signature": "@Test void testUnion()", "class_method_signature": "TestCollectionUtils.testUnion()", "testcase": true, "constructor": false, "invocations": ["newHashSet", "newHashSet", "union", "assertEquals", "newHashSet", "union", "newHashSet", "assertEquals"]}, "focal_class": {"identifier": "CollectionUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "isEmpty", "parameters": "(Object[] array)", "modifiers": "public static", "return": "boolean", "signature": "boolean isEmpty(Object[] array)", "full_signature": "public static boolean isEmpty(Object[] array)", "class_method_signature": "CollectionUtils.isEmpty(Object[] array)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(Map<?, ?> map)", "modifiers": "public static", "return": "boolean", "signature": "boolean isEmpty(Map<?, ?> map)", "full_signature": "public static boolean isEmpty(Map<?, ?> map)", "class_method_signature": "CollectionUtils.isEmpty(Map<?, ?> map)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(Collection<?> collection)", "modifiers": "public static", "return": "boolean", "signature": "boolean isEmpty(Collection<?> collection)", "full_signature": "public static boolean isEmpty(Collection<?> collection)", "class_method_signature": "CollectionUtils.isEmpty(Collection<?> collection)", "testcase": false, "constructor": false}, {"identifier": "intersect", "parameters": "(Set<T> a, Set<T> b)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> intersect(Set<T> a, Set<T> b)", "full_signature": "public static Set<T> intersect(Set<T> a, Set<T> b)", "class_method_signature": "CollectionUtils.intersect(Set<T> a, Set<T> b)", "testcase": false, "constructor": false}, {"identifier": "union", "parameters": "(Set<T> a, Set<T> b)", "modifiers": "public static", "return": "Set<T>", "signature": "Set<T> union(Set<T> a, Set<T> b)", "full_signature": "public static Set<T> union(Set<T> a, Set<T> b)", "class_method_signature": "CollectionUtils.union(Set<T> a, Set<T> b)", "testcase": false, "constructor": false}, {"identifier": "hasIntersection", "parameters": "(Set<T> a, Set<T> b)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasIntersection(Set<T> a, Set<T> b)", "full_signature": "public static boolean hasIntersection(Set<T> a, Set<T> b)", "class_method_signature": "CollectionUtils.hasIntersection(Set<T> a, Set<T> b)", "testcase": false, "constructor": false}, {"identifier": "newHashSet", "parameters": "(T... values)", "modifiers": "@SafeVarargs public static", "return": "Set<T>", "signature": "Set<T> newHashSet(T... values)", "full_signature": "@SafeVarargs public static Set<T> newHashSet(T... values)", "class_method_signature": "CollectionUtils.newHashSet(T... values)", "testcase": false, "constructor": false}], "file": "firefly-common/src/main/java/com/fireflysource/common/collection/CollectionUtils.java"}, "focal_method": {"identifier": "union", "parameters": "(Set<T> a, Set<T> b)", "modifiers": "public static", "return": "Set<T>", "body": "public static <T> Set<T> union(Set<T> a, Set<T> b) {\n        Set<T> set = new HashSet<>(a);\n        set.addAll(b);\n        return set;\n    }", "signature": "Set<T> union(Set<T> a, Set<T> b)", "full_signature": "public static Set<T> union(Set<T> a, Set<T> b)", "class_method_signature": "CollectionUtils.union(Set<T> a, Set<T> b)", "testcase": false, "constructor": false, "invocations": ["addAll"]}, "repository": {"repo_id": 3458429, "url": "https://github.com/hypercube1024/firefly", "language": "Java", "is_fork": false, "fork_count": 118, "stargazer_count": 271, "size": 29687, "license": "licensed"}}