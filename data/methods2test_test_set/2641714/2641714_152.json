{"test_class": {"identifier": "ResolvingLocaleUrlDefinitionDAOTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int ATTRIBUTE_NAMES_COUNT = 6;", "modifier": "private static final", "type": "int", "declarator": "ATTRIBUTE_NAMES_COUNT = 6", "var_name": "ATTRIBUTE_NAMES_COUNT"}, {"original_string": "private ResolvingLocaleUrlDefinitionDAO definitionDao;", "modifier": "private", "type": "ResolvingLocaleUrlDefinitionDAO", "declarator": "definitionDao", "var_name": "definitionDao"}, {"original_string": "private ApplicationContext applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private ApplicationResource url1;", "modifier": "private", "type": "ApplicationResource", "declarator": "url1", "var_name": "url1"}, {"original_string": "private ApplicationResource url2;", "modifier": "private", "type": "ApplicationResource", "declarator": "url2", "var_name": "url2"}, {"original_string": "private ApplicationResource url3;", "modifier": "private", "type": "ApplicationResource", "declarator": "url3", "var_name": "url3"}, {"original_string": "private ApplicationResource urlWildcard;", "modifier": "private", "type": "ApplicationResource", "declarator": "urlWildcard", "var_name": "urlWildcard"}, {"original_string": "private ApplicationResource url21;", "modifier": "private", "type": "ApplicationResource", "declarator": "url21", "var_name": "url21"}, {"original_string": "private ApplicationResource url513;", "modifier": "private", "type": "ApplicationResource", "declarator": "url513", "var_name": "url513"}], "file": "tiles-core/src/test/java/org/apache/tiles/definition/dao/ResolvingLocaleUrlDefinitionDAOTest.java"}, "test_case": {"identifier": "testResolveInheritanceNoParent", "parameters": "()", "modifiers": "@Test(expected = NoSuchDefinitionException.class) public", "return": "void", "body": "@Test(expected = NoSuchDefinitionException.class)\n    public void testResolveInheritanceNoParent() {\n        Definition definition = new Definition(\"mydef\", null, null);\n        definition.setExtends(\"otherDef\");\n        definitionDao.resolveInheritance(definition, new HashMap<String, Definition>(), Locale.ITALY,\n                new HashSet<String>());\n    }", "signature": "void testResolveInheritanceNoParent()", "full_signature": "@Test(expected = NoSuchDefinitionException.class) public void testResolveInheritanceNoParent()", "class_method_signature": "ResolvingLocaleUrlDefinitionDAOTest.testResolveInheritanceNoParent()", "testcase": true, "constructor": false, "invocations": ["setExtends", "resolveInheritance"]}, "focal_class": {"identifier": "ResolvingLocaleUrlDefinitionDAO", "superclass": "extends\n        CachingLocaleUrlDefinitionDAO", "interfaces": "", "fields": [{"original_string": "private final Logger log = LoggerFactory.getLogger(ResolvingLocaleUrlDefinitionDAO.class);", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(ResolvingLocaleUrlDefinitionDAO.class)", "var_name": "log"}], "methods": [{"identifier": "ResolvingLocaleUrlDefinitionDAO", "parameters": "(ApplicationContext applicationContext)", "modifiers": "public", "return": "", "signature": " ResolvingLocaleUrlDefinitionDAO(ApplicationContext applicationContext)", "full_signature": "public  ResolvingLocaleUrlDefinitionDAO(ApplicationContext applicationContext)", "class_method_signature": "ResolvingLocaleUrlDefinitionDAO.ResolvingLocaleUrlDefinitionDAO(ApplicationContext applicationContext)", "testcase": false, "constructor": true}, {"identifier": "loadParentDefinitions", "parameters": "(Locale parentLocale)", "modifiers": "@Override protected", "return": "Map<String, Definition>", "signature": "Map<String, Definition> loadParentDefinitions(Locale parentLocale)", "full_signature": "@Override protected Map<String, Definition> loadParentDefinitions(Locale parentLocale)", "class_method_signature": "ResolvingLocaleUrlDefinitionDAO.loadParentDefinitions(Locale parentLocale)", "testcase": false, "constructor": false}, {"identifier": "loadDefinitions", "parameters": "(Locale customizationKey)", "modifiers": "@Override protected", "return": "Map<String, Definition>", "signature": "Map<String, Definition> loadDefinitions(Locale customizationKey)", "full_signature": "@Override protected Map<String, Definition> loadDefinitions(Locale customizationKey)", "class_method_signature": "ResolvingLocaleUrlDefinitionDAO.loadDefinitions(Locale customizationKey)", "testcase": false, "constructor": false}, {"identifier": "getDefinitionFromResolver", "parameters": "(String name,\n            Locale customizationKey)", "modifiers": "@Override protected", "return": "Definition", "signature": "Definition getDefinitionFromResolver(String name,\n            Locale customizationKey)", "full_signature": "@Override protected Definition getDefinitionFromResolver(String name,\n            Locale customizationKey)", "class_method_signature": "ResolvingLocaleUrlDefinitionDAO.getDefinitionFromResolver(String name,\n            Locale customizationKey)", "testcase": false, "constructor": false}, {"identifier": "resolveInheritances", "parameters": "(Map<String, Definition> map, Locale locale)", "modifiers": "protected", "return": "void", "signature": "void resolveInheritances(Map<String, Definition> map, Locale locale)", "full_signature": "protected void resolveInheritances(Map<String, Definition> map, Locale locale)", "class_method_signature": "ResolvingLocaleUrlDefinitionDAO.resolveInheritances(Map<String, Definition> map, Locale locale)", "testcase": false, "constructor": false}, {"identifier": "resolveInheritance", "parameters": "(Definition definition,\n            Map<String, Definition> definitions, Locale locale,\n            Set<String> alreadyResolvedDefinitions)", "modifiers": "protected", "return": "void", "signature": "void resolveInheritance(Definition definition,\n            Map<String, Definition> definitions, Locale locale,\n            Set<String> alreadyResolvedDefinitions)", "full_signature": "protected void resolveInheritance(Definition definition,\n            Map<String, Definition> definitions, Locale locale,\n            Set<String> alreadyResolvedDefinitions)", "class_method_signature": "ResolvingLocaleUrlDefinitionDAO.resolveInheritance(Definition definition,\n            Map<String, Definition> definitions, Locale locale,\n            Set<String> alreadyResolvedDefinitions)", "testcase": false, "constructor": false}, {"identifier": "copyDefinitionMap", "parameters": "(\n            Map<String, Definition> localeDefsMap)", "modifiers": "@Override protected", "return": "Map<String, Definition>", "signature": "Map<String, Definition> copyDefinitionMap(\n            Map<String, Definition> localeDefsMap)", "full_signature": "@Override protected Map<String, Definition> copyDefinitionMap(\n            Map<String, Definition> localeDefsMap)", "class_method_signature": "ResolvingLocaleUrlDefinitionDAO.copyDefinitionMap(\n            Map<String, Definition> localeDefsMap)", "testcase": false, "constructor": false}], "file": "tiles-core/src/main/java/org/apache/tiles/definition/dao/ResolvingLocaleUrlDefinitionDAO.java"}, "focal_method": {"identifier": "resolveInheritance", "parameters": "(Definition definition,\n            Map<String, Definition> definitions, Locale locale,\n            Set<String> alreadyResolvedDefinitions)", "modifiers": "protected", "return": "void", "body": "protected void resolveInheritance(Definition definition,\n            Map<String, Definition> definitions, Locale locale,\n            Set<String> alreadyResolvedDefinitions) {\n        // Already done, or not needed ?\n        if (!definition.isExtending()\n                || alreadyResolvedDefinitions.contains(definition.getName())) {\n            return;\n        }\n\n        log.debug(\"Resolve definition for child name='{}' extends='{}.\",\n                definition.getName(), definition.getExtends());\n\n        // Set as visited to avoid endless recursivity.\n        alreadyResolvedDefinitions.add(definition.getName());\n\n        // Resolve parent before itself.\n        Definition parent = definitions.get(definition.getExtends());\n        if (parent == null) { // error\n            String msg = \"Error while resolving definition inheritance: child '\"\n                + definition.getName()\n                + \"' can't find its ancestor '\"\n                + definition.getExtends()\n                + \"'. Please check your description file.\";\n            // to do : find better exception\n            throw new NoSuchDefinitionException(msg);\n        }\n\n        resolveInheritance(parent, definitions, locale,\n                alreadyResolvedDefinitions);\n\n        definition.inherit(parent);\n    }", "signature": "void resolveInheritance(Definition definition,\n            Map<String, Definition> definitions, Locale locale,\n            Set<String> alreadyResolvedDefinitions)", "full_signature": "protected void resolveInheritance(Definition definition,\n            Map<String, Definition> definitions, Locale locale,\n            Set<String> alreadyResolvedDefinitions)", "class_method_signature": "ResolvingLocaleUrlDefinitionDAO.resolveInheritance(Definition definition,\n            Map<String, Definition> definitions, Locale locale,\n            Set<String> alreadyResolvedDefinitions)", "testcase": false, "constructor": false, "invocations": ["isExtending", "contains", "getName", "debug", "getName", "getExtends", "add", "getName", "get", "getExtends", "getName", "getExtends", "resolveInheritance", "inherit"]}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}