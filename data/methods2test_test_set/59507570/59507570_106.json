{"test_class": {"identifier": "LoginPresenterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Inject\n    LoginPresenter loginPresenter;", "modifier": "@Inject", "type": "LoginPresenter", "declarator": "loginPresenter", "var_name": "loginPresenter"}, {"original_string": "@Mock\n    private Context context;", "modifier": "@Mock\n    private", "type": "Context", "declarator": "context", "var_name": "context"}, {"original_string": "@Mock\n    private LoginService loginService;", "modifier": "@Mock\n    private", "type": "LoginService", "declarator": "loginService", "var_name": "loginService"}, {"original_string": "@Mock\n    private SystemSettingsService systemSettingService;", "modifier": "@Mock\n    private", "type": "SystemSettingsService", "declarator": "systemSettingService", "var_name": "systemSettingService"}, {"original_string": "@Mock\n    private LoginView loginView;", "modifier": "@Mock\n    private", "type": "LoginView", "declarator": "loginView", "var_name": "loginView"}], "file": "app/src/test/java/org/unicef/rapidreg/login/LoginPresenterTest.java"}, "test_case": {"identifier": "should_show_error_when_invalid_user_format", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_show_error_when_invalid_user_format() {\n        when(loginService.isUsernameValid(\"pri mero\")).thenReturn(false);\n        when(loginService.isPasswordValid(\"password\")).thenReturn(true);\n        when(loginService.isUrlValid(\"http://10.29.3.184:3000\")).thenReturn(true);\n\n        boolean valid = loginPresenter.validate(\"pri mero\", \"password\", \"http://10.29.3.184:3000\");\n        verify(loginView).showUserNameInvalid();\n        assertEquals(valid, false);\n    }", "signature": "void should_show_error_when_invalid_user_format()", "full_signature": "@Test public void should_show_error_when_invalid_user_format()", "class_method_signature": "LoginPresenterTest.should_show_error_when_invalid_user_format()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "isUsernameValid", "thenReturn", "when", "isPasswordValid", "thenReturn", "when", "isUrlValid", "validate", "showUserNameInvalid", "verify", "assertEquals"]}, "focal_class": {"identifier": "LoginPresenter", "superclass": "extends MvpBasePresenter<LoginView>", "interfaces": "", "fields": [{"original_string": "public static final String TAG = LoginPresenter.class.getSimpleName();", "modifier": "public static final", "type": "String", "declarator": "TAG = LoginPresenter.class.getSimpleName()", "var_name": "TAG"}, {"original_string": "private LoginService loginService;", "modifier": "private", "type": "LoginService", "declarator": "loginService", "var_name": "loginService"}, {"original_string": "private SystemSettingsService systemSettingsService;", "modifier": "private", "type": "SystemSettingsService", "declarator": "systemSettingsService", "var_name": "systemSettingsService"}], "methods": [{"identifier": "LoginPresenter", "parameters": "(Lazy<LoginService> loginService, Lazy<SystemSettingsService> systemSettingsServiceLazy)", "modifiers": "@Inject public", "return": "", "signature": " LoginPresenter(Lazy<LoginService> loginService, Lazy<SystemSettingsService> systemSettingsServiceLazy)", "full_signature": "@Inject public  LoginPresenter(Lazy<LoginService> loginService, Lazy<SystemSettingsService> systemSettingsServiceLazy)", "class_method_signature": "LoginPresenter.LoginPresenter(Lazy<LoginService> loginService, Lazy<SystemSettingsService> systemSettingsServiceLazy)", "testcase": false, "constructor": true}, {"identifier": "loadLastLoginUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String loadLastLoginUrl()", "full_signature": "public String loadLastLoginUrl()", "class_method_signature": "LoginPresenter.loadLastLoginUrl()", "testcase": false, "constructor": false}, {"identifier": "doLogin", "parameters": "(String username, String password, String url, String imei)", "modifiers": "public", "return": "void", "signature": "void doLogin(String username, String password, String url, String imei)", "full_signature": "public void doLogin(String username, String password, String url, String imei)", "class_method_signature": "LoginPresenter.doLogin(String username, String password, String url, String imei)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(String username, String password, String url)", "modifiers": "public", "return": "boolean", "signature": "boolean validate(String username, String password, String url)", "full_signature": "public boolean validate(String username, String password, String url)", "class_method_signature": "LoginPresenter.validate(String username, String password, String url)", "testcase": false, "constructor": false}, {"identifier": "attachView", "parameters": "(LoginView view)", "modifiers": "@Override public", "return": "void", "signature": "void attachView(LoginView view)", "full_signature": "@Override public void attachView(LoginView view)", "class_method_signature": "LoginPresenter.attachView(LoginView view)", "testcase": false, "constructor": false}, {"identifier": "detachView", "parameters": "(boolean retainInstance)", "modifiers": "@Override public", "return": "void", "signature": "void detachView(boolean retainInstance)", "full_signature": "@Override public void detachView(boolean retainInstance)", "class_method_signature": "LoginPresenter.detachView(boolean retainInstance)", "testcase": false, "constructor": false}, {"identifier": "doLoginOnline", "parameters": "(final String username,\n                               final String password,\n                               final String url,\n                               String imei)", "modifiers": "private", "return": "void", "signature": "void doLoginOnline(final String username,\n                               final String password,\n                               final String url,\n                               String imei)", "full_signature": "private void doLoginOnline(final String username,\n                               final String password,\n                               final String url,\n                               String imei)", "class_method_signature": "LoginPresenter.doLoginOnline(final String username,\n                               final String password,\n                               final String url,\n                               String imei)", "testcase": false, "constructor": false}, {"identifier": "sendLoadFormEvent", "parameters": "(User.Role roleType, String cookie)", "modifiers": "private", "return": "void", "signature": "void sendLoadFormEvent(User.Role roleType, String cookie)", "full_signature": "private void sendLoadFormEvent(User.Role roleType, String cookie)", "class_method_signature": "LoginPresenter.sendLoadFormEvent(User.Role roleType, String cookie)", "testcase": false, "constructor": false}, {"identifier": "doLoginOffline", "parameters": "(String username, String password, String url)", "modifiers": "private", "return": "void", "signature": "void doLoginOffline(String username, String password, String url)", "full_signature": "private void doLoginOffline(String username, String password, String url)", "class_method_signature": "LoginPresenter.doLoginOffline(String username, String password, String url)", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/unicef/rapidreg/login/LoginPresenter.java"}, "focal_method": {"identifier": "validate", "parameters": "(String username, String password, String url)", "modifiers": "public", "return": "boolean", "body": "public boolean validate(String username, String password, String url) {\n        boolean isValid = true;\n        if (!loginService.isUsernameValid(username)) {\n            getView().showUserNameInvalid();\n            isValid = false;\n        }\n        if (!loginService.isUsernameValid(password)) {\n            getView().showPasswordInvalid();\n            isValid = false;\n        }\n\n        if (!loginService.isUrlValid(url)) {\n            getView().showUrlInvalid();\n            isValid = false;\n        }\n        return isValid;\n    }", "signature": "boolean validate(String username, String password, String url)", "full_signature": "public boolean validate(String username, String password, String url)", "class_method_signature": "LoginPresenter.validate(String username, String password, String url)", "testcase": false, "constructor": false, "invocations": ["isUsernameValid", "showUserNameInvalid", "getView", "isUsernameValid", "showPasswordInvalid", "getView", "isUrlValid", "showUrlInvalid", "getView"]}, "repository": {"repo_id": 59507570, "url": "https://github.com/UnicefNY/RapidReg", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 10753, "license": "Other"}}