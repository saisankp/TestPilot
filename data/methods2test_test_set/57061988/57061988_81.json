{"test_class": {"identifier": "LunaEncryptionServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LunaEncryptionService subject;", "modifier": "private", "type": "LunaEncryptionService", "declarator": "subject", "var_name": "subject"}, {"original_string": "private LunaConnection connection;", "modifier": "private", "type": "LunaConnection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private SecretKey aesKey;", "modifier": "private", "type": "SecretKey", "declarator": "aesKey", "var_name": "aesKey"}, {"original_string": "private TimedRetry timedRetry;", "modifier": "private", "type": "TimedRetry", "declarator": "timedRetry", "var_name": "timedRetry"}], "file": "components/encryption/src/test/java/org/cloudfoundry/credhub/services/LunaEncryptionServiceTest.java"}, "test_case": {"identifier": "createKeyProxy_getsKeyIfKeyExists", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void createKeyProxy_getsKeyIfKeyExists() throws Exception {\n    setupKeyExists();\n\n    final EncryptionKeyMetadata keyMetadata = new EncryptionKeyMetadata();\n    keyMetadata.setEncryptionKeyName(\"fake_key_name\");\n\n    subject = new LunaEncryptionService(connection, true, timedRetry);\n\n    assertThat(subject.createKeyProxy(keyMetadata).getKey(), equalTo(aesKey));\n    verify(connection, never()).setKeyEntry(\"fake_key_name\", aesKey);\n  }", "signature": "void createKeyProxy_getsKeyIfKeyExists()", "full_signature": "@Test public void createKeyProxy_getsKeyIfKeyExists()", "class_method_signature": "LunaEncryptionServiceTest.createKeyProxy_getsKeyIfKeyExists()", "testcase": true, "constructor": false, "invocations": ["setupKeyExists", "setEncryptionKeyName", "assertThat", "getKey", "createKeyProxy", "equalTo", "setKeyEntry", "verify", "never"]}, "focal_class": {"identifier": "LunaEncryptionService", "superclass": "extends InternalEncryptionService", "interfaces": "", "fields": [{"original_string": "public static final int KEY_POPULATION_WAIT_SEC = 60 * 10;", "modifier": "public static final", "type": "int", "declarator": "KEY_POPULATION_WAIT_SEC = 60 * 10", "var_name": "KEY_POPULATION_WAIT_SEC"}, {"original_string": "private static final Logger LOGGER = LogManager.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LogManager.getLogger()", "var_name": "LOGGER"}, {"original_string": "private final LunaConnection lunaConnection;", "modifier": "private final", "type": "LunaConnection", "declarator": "lunaConnection", "var_name": "lunaConnection"}, {"original_string": "private final boolean keyCreationEnabled;", "modifier": "private final", "type": "boolean", "declarator": "keyCreationEnabled", "var_name": "keyCreationEnabled"}, {"original_string": "private final TimedRetry timedRetry;", "modifier": "private final", "type": "TimedRetry", "declarator": "timedRetry", "var_name": "timedRetry"}], "methods": [{"identifier": "LunaEncryptionService", "parameters": "(\n    final LunaConnection lunaConnection,\n    @Value(\"${encryption.key_creation_enabled}\") final\n    boolean keyCreationEnabled,\n    final TimedRetry timedRetry\n  )", "modifiers": "public", "return": "", "signature": " LunaEncryptionService(\n    final LunaConnection lunaConnection,\n    @Value(\"${encryption.key_creation_enabled}\") final\n    boolean keyCreationEnabled,\n    final TimedRetry timedRetry\n  )", "full_signature": "public  LunaEncryptionService(\n    final LunaConnection lunaConnection,\n    @Value(\"${encryption.key_creation_enabled}\") final\n    boolean keyCreationEnabled,\n    final TimedRetry timedRetry\n  )", "class_method_signature": "LunaEncryptionService.LunaEncryptionService(\n    final LunaConnection lunaConnection,\n    @Value(\"${encryption.key_creation_enabled}\") final\n    boolean keyCreationEnabled,\n    final TimedRetry timedRetry\n  )", "testcase": false, "constructor": true}, {"identifier": "getSecureRandom", "parameters": "()", "modifiers": "@Override public", "return": "SecureRandom", "signature": "SecureRandom getSecureRandom()", "full_signature": "@Override public SecureRandom getSecureRandom()", "class_method_signature": "LunaEncryptionService.getSecureRandom()", "testcase": false, "constructor": false}, {"identifier": "getCipher", "parameters": "()", "modifiers": "@Override public", "return": "CipherWrapper", "signature": "CipherWrapper getCipher()", "full_signature": "@Override public CipherWrapper getCipher()", "class_method_signature": "LunaEncryptionService.getCipher()", "testcase": false, "constructor": false}, {"identifier": "encrypt", "parameters": "(final UUID canaryUuid, final Key key, final String value)", "modifiers": "@Override public", "return": "EncryptedValue", "signature": "EncryptedValue encrypt(final UUID canaryUuid, final Key key, final String value)", "full_signature": "@Override public EncryptedValue encrypt(final UUID canaryUuid, final Key key, final String value)", "class_method_signature": "LunaEncryptionService.encrypt(final UUID canaryUuid, final Key key, final String value)", "testcase": false, "constructor": false}, {"identifier": "generateParameterSpec", "parameters": "(final byte[] iv)", "modifiers": "@Override public", "return": "AlgorithmParameterSpec", "signature": "AlgorithmParameterSpec generateParameterSpec(final byte[] iv)", "full_signature": "@Override public AlgorithmParameterSpec generateParameterSpec(final byte[] iv)", "class_method_signature": "LunaEncryptionService.generateParameterSpec(final byte[] iv)", "testcase": false, "constructor": false}, {"identifier": "createKeyProxy", "parameters": "(final EncryptionKeyMetadata encryptionKeyMetadata)", "modifiers": "@Override public", "return": "KeyProxy", "signature": "KeyProxy createKeyProxy(final EncryptionKeyMetadata encryptionKeyMetadata)", "full_signature": "@Override public KeyProxy createKeyProxy(final EncryptionKeyMetadata encryptionKeyMetadata)", "class_method_signature": "LunaEncryptionService.createKeyProxy(final EncryptionKeyMetadata encryptionKeyMetadata)", "testcase": false, "constructor": false}, {"identifier": "createKey", "parameters": "(final EncryptionKeyMetadata encryptionKeyMetadata,\n                        final LunaConnection connection)", "modifiers": "private", "return": "Key", "signature": "Key createKey(final EncryptionKeyMetadata encryptionKeyMetadata,\n                        final LunaConnection connection)", "full_signature": "private Key createKey(final EncryptionKeyMetadata encryptionKeyMetadata,\n                        final LunaConnection connection)", "class_method_signature": "LunaEncryptionService.createKey(final EncryptionKeyMetadata encryptionKeyMetadata,\n                        final LunaConnection connection)", "testcase": false, "constructor": false}, {"identifier": "reconnect", "parameters": "(final Exception reasonForReconnect)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void reconnect(final Exception reasonForReconnect)", "full_signature": "@Override public synchronized void reconnect(final Exception reasonForReconnect)", "class_method_signature": "LunaEncryptionService.reconnect(final Exception reasonForReconnect)", "testcase": false, "constructor": false}, {"identifier": "isLoggedIn", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isLoggedIn()", "full_signature": "public boolean isLoggedIn()", "class_method_signature": "LunaEncryptionService.isLoggedIn()", "testcase": false, "constructor": false}], "file": "components/encryption/src/main/java/org/cloudfoundry/credhub/services/LunaEncryptionService.java"}, "focal_method": {"identifier": "createKeyProxy", "parameters": "(final EncryptionKeyMetadata encryptionKeyMetadata)", "modifiers": "@Override public", "return": "KeyProxy", "body": "@Override\n  public KeyProxy createKeyProxy(final EncryptionKeyMetadata encryptionKeyMetadata) {\n    return new LunaKeyProxy(createKey(encryptionKeyMetadata, lunaConnection), this);\n  }", "signature": "KeyProxy createKeyProxy(final EncryptionKeyMetadata encryptionKeyMetadata)", "full_signature": "@Override public KeyProxy createKeyProxy(final EncryptionKeyMetadata encryptionKeyMetadata)", "class_method_signature": "LunaEncryptionService.createKeyProxy(final EncryptionKeyMetadata encryptionKeyMetadata)", "testcase": false, "constructor": false, "invocations": ["createKey"]}, "repository": {"repo_id": 57061988, "url": "https://github.com/cloudfoundry-incubator/credhub", "stars": 167, "created": "4/25/2016 5:30:51 PM +00:00", "updates": "2020-01-27T21:31:19+00:00", "fork": "False", "license": "licensed"}}