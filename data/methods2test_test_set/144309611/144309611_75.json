{"test_class": {"identifier": "AtomicFileOperationsTest", "superclass": "", "interfaces": "", "fields": [], "file": "pross-server/src/test/java/com/ibm/pross/server/util/AtomicFileOperationsTest.java"}, "test_case": {"identifier": "testAtomicWrite", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testAtomicWrite() throws IOException {\n\t\t\n\t\tfinal File tempFile = File.createTempFile(\"test-file\", UUID.randomUUID().toString());\n\t\ttempFile.deleteOnExit();\n\n\t\tfor (int i = 0; i < 10; i++) {\n\t\t\tfinal String str = new String(\"hello-\" + i);\n\t\t\t\n\t\t\tlong start = System.nanoTime();\n\t\t\tAtomicFileOperations.atomicWriteString(tempFile, str);\n\t\t\tlong end = System.nanoTime();\n\t\t\tSystem.out.println(\"Atomically wrote file in: \" + (end - start) + \" ns\");\n\t\t\tSystem.out.println(\"Wrote to: \" + tempFile.getAbsolutePath());\n\t\t\t\n\t\t\t//String readString = (String) AtomicFileOperations.readObject(tempFile);\n\t\t\t//Assert.assertEquals(str, readString);\n\t\t}\n\t\t\n\t\ttempFile.delete();\n\t}", "signature": "void testAtomicWrite()", "full_signature": "@Test public void testAtomicWrite()", "class_method_signature": "AtomicFileOperationsTest.testAtomicWrite()", "testcase": true, "constructor": false, "invocations": ["createTempFile", "toString", "randomUUID", "deleteOnExit", "nanoTime", "atomicWriteString", "nanoTime", "println", "println", "getAbsolutePath", "delete"]}, "focal_class": {"identifier": "AtomicFileOperations", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "atomicWriteSignedMessage", "parameters": "(final File destinationFile, final SignedMessage signedMessage)", "modifiers": "public static", "return": "void", "signature": "void atomicWriteSignedMessage(final File destinationFile, final SignedMessage signedMessage)", "full_signature": "public static void atomicWriteSignedMessage(final File destinationFile, final SignedMessage signedMessage)", "class_method_signature": "AtomicFileOperations.atomicWriteSignedMessage(final File destinationFile, final SignedMessage signedMessage)", "testcase": false, "constructor": false}, {"identifier": "atomicWriteString", "parameters": "(final File destinationFile, final String string)", "modifiers": "public static", "return": "void", "signature": "void atomicWriteString(final File destinationFile, final String string)", "full_signature": "public static void atomicWriteString(final File destinationFile, final String string)", "class_method_signature": "AtomicFileOperations.atomicWriteString(final File destinationFile, final String string)", "testcase": false, "constructor": false}, {"identifier": "atomicWriteBytes", "parameters": "(final File destinationFile, final byte[] data)", "modifiers": "public static", "return": "void", "signature": "void atomicWriteBytes(final File destinationFile, final byte[] data)", "full_signature": "public static void atomicWriteBytes(final File destinationFile, final byte[] data)", "class_method_signature": "AtomicFileOperations.atomicWriteBytes(final File destinationFile, final byte[] data)", "testcase": false, "constructor": false}, {"identifier": "readSignedMessage", "parameters": "(final File saveFile)", "modifiers": "public static", "return": "SignedMessage", "signature": "SignedMessage readSignedMessage(final File saveFile)", "full_signature": "public static SignedMessage readSignedMessage(final File saveFile)", "class_method_signature": "AtomicFileOperations.readSignedMessage(final File saveFile)", "testcase": false, "constructor": false}], "file": "pross-server/src/main/java/com/ibm/pross/server/util/AtomicFileOperations.java"}, "focal_method": {"identifier": "atomicWriteString", "parameters": "(final File destinationFile, final String string)", "modifiers": "public static", "return": "void", "body": "public static void atomicWriteString(final File destinationFile, final String string)\n\t\t\tthrows SyncFailedException, IOException {\n\t\tatomicWriteBytes(destinationFile, string.getBytes(StandardCharsets.UTF_8));\n\t}", "signature": "void atomicWriteString(final File destinationFile, final String string)", "full_signature": "public static void atomicWriteString(final File destinationFile, final String string)", "class_method_signature": "AtomicFileOperations.atomicWriteString(final File destinationFile, final String string)", "testcase": false, "constructor": false, "invocations": ["atomicWriteBytes", "getBytes"]}, "repository": {"repo_id": 144309611, "url": "https://github.com/jasonkresch/protect", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 38, "size": 1932, "license": "licensed"}}