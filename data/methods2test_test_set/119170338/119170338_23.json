{"test_class": {"identifier": "TermIdsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Ontology ontology = TestOntology.ontology();", "modifier": "private final", "type": "Ontology", "declarator": "ontology = TestOntology.ontology()", "var_name": "ontology"}, {"original_string": "private final TermId id1 = TestOntology.TERM_ID_1;", "modifier": "private final", "type": "TermId", "declarator": "id1 = TestOntology.TERM_ID_1", "var_name": "id1"}], "file": "phenol-core/src/test/java/org/monarchinitiative/phenol/ontology/data/TermIdsTest.java"}, "test_case": {"identifier": "augmentWithAncestorsIncludeRoot", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void augmentWithAncestorsIncludeRoot() {\n    assertEquals(\n      ImmutableSet.of(\n        TermId.of(\"HP:0000001\"),\n        TermId.of(\"HP:0000002\"),\n        TermId.of(\"HP:0000003\"),\n        TermId.of(\"HP:0000004\"),\n        TermId.of(\"HP:0000005\")\n      ),\n      TermIds.augmentWithAncestors(ontology, Sets.newHashSet(id1), true));\n  }", "signature": "void augmentWithAncestorsIncludeRoot()", "full_signature": "@Test public void augmentWithAncestorsIncludeRoot()", "class_method_signature": "TermIdsTest.augmentWithAncestorsIncludeRoot()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "of", "of", "of", "of", "of", "of", "augmentWithAncestors", "newHashSet"]}, "focal_class": {"identifier": "TermIds", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "TermIds", "parameters": "()", "modifiers": "private", "return": "", "signature": " TermIds()", "full_signature": "private  TermIds()", "class_method_signature": "TermIds.TermIds()", "testcase": false, "constructor": true}, {"identifier": "augmentWithAncestors", "parameters": "(\n    Ontology ontology, Set<TermId> termIds, boolean includeRoot)", "modifiers": "public static", "return": "Set<TermId>", "signature": "Set<TermId> augmentWithAncestors(\n    Ontology ontology, Set<TermId> termIds, boolean includeRoot)", "full_signature": "public static Set<TermId> augmentWithAncestors(\n    Ontology ontology, Set<TermId> termIds, boolean includeRoot)", "class_method_signature": "TermIds.augmentWithAncestors(\n    Ontology ontology, Set<TermId> termIds, boolean includeRoot)", "testcase": false, "constructor": false}], "file": "phenol-core/src/main/java/org/monarchinitiative/phenol/ontology/data/TermIds.java"}, "focal_method": {"identifier": "augmentWithAncestors", "parameters": "(\n    Ontology ontology, Set<TermId> termIds, boolean includeRoot)", "modifiers": "public static", "return": "Set<TermId>", "body": "public static Set<TermId> augmentWithAncestors(\n    Ontology ontology, Set<TermId> termIds, boolean includeRoot) {\n    termIds.addAll(ontology.getAllAncestorTermIds(termIds, includeRoot));\n    return termIds;\n  }", "signature": "Set<TermId> augmentWithAncestors(\n    Ontology ontology, Set<TermId> termIds, boolean includeRoot)", "full_signature": "public static Set<TermId> augmentWithAncestors(\n    Ontology ontology, Set<TermId> termIds, boolean includeRoot)", "class_method_signature": "TermIds.augmentWithAncestors(\n    Ontology ontology, Set<TermId> termIds, boolean includeRoot)", "testcase": false, "constructor": false, "invocations": ["addAll", "getAllAncestorTermIds"]}, "repository": {"repo_id": 119170338, "url": "https://github.com/monarch-initiative/phenol", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 5832, "license": "licensed"}}