{"test_class": {"identifier": "HexEncodeTest", "superclass": "", "interfaces": "", "fields": [], "file": "packethandler/implementation/src/test/java/org/opendaylight/l2switch/packethandler/decoders/utils/HexEncodeTest.java"}, "test_case": {"identifier": "testLongToHexString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLongToHexString() {\n        long value1 = 12345678L;\n        String str1 = HexEncode.longToHexString(value1);\n        Assert.assertTrue(str1.equals(\"00:00:00:00:00:bc:61:4e\"));\n\n        long value2 = 98765432L;\n        String str2 = HexEncode.longToHexString(value2);\n        Assert.assertFalse(str2.equals(\"00:44:33:22:11:bc:61:4e\"));\n\n    }", "signature": "void testLongToHexString()", "full_signature": "@Test public void testLongToHexString()", "class_method_signature": "HexEncodeTest.testLongToHexString()", "testcase": true, "constructor": false, "invocations": ["longToHexString", "assertTrue", "equals", "longToHexString", "assertFalse", "equals"]}, "focal_class": {"identifier": "HexEncode", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "HexEncode", "parameters": "()", "modifiers": "private", "return": "", "signature": " HexEncode()", "full_signature": "private  HexEncode()", "class_method_signature": "HexEncode.HexEncode()", "testcase": false, "constructor": true}, {"identifier": "bytesToHexString", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String bytesToHexString(byte[] bytes)", "full_signature": "public static String bytesToHexString(byte[] bytes)", "class_method_signature": "HexEncode.bytesToHexString(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "longToHexString", "parameters": "(long val)", "modifiers": "public static", "return": "String", "signature": "String longToHexString(long val)", "full_signature": "public static String longToHexString(long val)", "class_method_signature": "HexEncode.longToHexString(long val)", "testcase": false, "constructor": false}, {"identifier": "bytesFromHexString", "parameters": "(String values)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] bytesFromHexString(String values)", "full_signature": "public static byte[] bytesFromHexString(String values)", "class_method_signature": "HexEncode.bytesFromHexString(String values)", "testcase": false, "constructor": false}, {"identifier": "stringToLong", "parameters": "(String values)", "modifiers": "public static", "return": "long", "signature": "long stringToLong(String values)", "full_signature": "public static long stringToLong(String values)", "class_method_signature": "HexEncode.stringToLong(String values)", "testcase": false, "constructor": false}, {"identifier": "bytesToHexStringFormat", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String bytesToHexStringFormat(byte[] bytes)", "full_signature": "public static String bytesToHexStringFormat(byte[] bytes)", "class_method_signature": "HexEncode.bytesToHexStringFormat(byte[] bytes)", "testcase": false, "constructor": false}], "file": "packethandler/implementation/src/main/java/org/opendaylight/l2switch/packethandler/decoders/utils/HexEncode.java"}, "focal_method": {"identifier": "longToHexString", "parameters": "(long val)", "modifiers": "public static", "return": "String", "body": "public static String longToHexString(long val) {\n        char[] arr = Long.toHexString(val).toCharArray();\n        StringBuffer buf = new StringBuffer();\n        // prepend the right number of leading zeros\n        int index = 0;\n        for (; index < 16 - arr.length; index++) {\n            buf.append(\"0\");\n            if ((index & 0x01) == 1) {\n                buf.append(\":\");\n            }\n        }\n        for (int j = 0; j < arr.length; j++) {\n            buf.append(arr[j]);\n            if ((index + j & 0x01) == 1 && j < arr.length - 1) {\n                buf.append(\":\");\n            }\n        }\n        return buf.toString();\n    }", "signature": "String longToHexString(long val)", "full_signature": "public static String longToHexString(long val)", "class_method_signature": "HexEncode.longToHexString(long val)", "testcase": false, "constructor": false, "invocations": ["toCharArray", "toHexString", "append", "append", "append", "append", "toString"]}, "repository": {"repo_id": 20701467, "url": "https://github.com/opendaylight/l2switch", "language": "Java", "is_fork": false, "fork_count": 30, "stargazer_count": 25, "size": 4178, "license": "licensed"}}