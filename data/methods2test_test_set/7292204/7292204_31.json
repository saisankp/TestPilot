{"test_class": {"identifier": "PropertiesLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PropertiesLoader loader = new PropertiesLoader();", "modifier": "private", "type": "PropertiesLoader", "declarator": "loader = new PropertiesLoader()", "var_name": "loader"}, {"original_string": "private static final String UTF_KEY = \"\u0446\u0432\u0435\u0442\";", "modifier": "private static final", "type": "String", "declarator": "UTF_KEY = \"\u0446\u0432\u0435\u0442\";", "var_name": "UTF_KEY"}, {"original_string": "private static final String UTF_VALUE= \"\u0441\u0438\u043d\u0438\u0439\";", "modifier": "private static final", "type": "String", "declarator": "UTF_VALUE= \"\u0441\u0438\u043d\u0438\u0439\";", "var_name": "UTF_VALUE"}, {"original_string": "private static final String UTF_KEY_VALUE = String.format(\"%s:%s\", UTF_KEY, UTF_VALUE);", "modifier": "private static final", "type": "String", "declarator": "UTF_KEY_VALUE = String.format(\"%s:%s\", UTF_KEY, UTF_VALUE)", "var_name": "UTF_KEY_VALUE"}, {"original_string": "private InputStream keyValueStream;", "modifier": "private", "type": "InputStream", "declarator": "keyValueStream", "var_name": "keyValueStream"}], "file": "owner/src/test/java/org/aeonbits/owner/loaders/PropertiesLoaderTest.java"}, "test_case": {"identifier": "testLoadingCyrillicInUTF8", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLoadingCyrillicInUTF8() throws IOException {\n        Properties result = new Properties();\n        loader.load(result, keyValueStream);\n\n        assertTrue(result.containsKey(UTF_KEY));\n        assertTrue(result.getProperty(UTF_KEY).equals(UTF_VALUE));\n    }", "signature": "void testLoadingCyrillicInUTF8()", "full_signature": "@Test public void testLoadingCyrillicInUTF8()", "class_method_signature": "PropertiesLoaderTest.testLoadingCyrillicInUTF8()", "testcase": true, "constructor": false, "invocations": ["load", "assertTrue", "containsKey", "assertTrue", "equals", "getProperty"]}, "focal_class": {"identifier": "PropertiesLoader", "superclass": "", "interfaces": "implements Loader", "fields": [{"original_string": "private static final long serialVersionUID = -1781643040589572341L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -1781643040589572341L", "var_name": "serialVersionUID"}, {"original_string": "private static final String DEFAULT_ENCODING = \"UTF-8\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_ENCODING = \"UTF-8\"", "var_name": "DEFAULT_ENCODING"}], "methods": [{"identifier": "accept", "parameters": "(URI uri)", "modifiers": "public", "return": "boolean", "signature": "boolean accept(URI uri)", "full_signature": "public boolean accept(URI uri)", "class_method_signature": "PropertiesLoader.accept(URI uri)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(Properties result, URI uri)", "modifiers": "public", "return": "void", "signature": "void load(Properties result, URI uri)", "full_signature": "public void load(Properties result, URI uri)", "class_method_signature": "PropertiesLoader.load(Properties result, URI uri)", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(Properties result, InputStream input)", "modifiers": "", "return": "void", "signature": "void load(Properties result, InputStream input)", "full_signature": " void load(Properties result, InputStream input)", "class_method_signature": "PropertiesLoader.load(Properties result, InputStream input)", "testcase": false, "constructor": false}, {"identifier": "defaultSpecFor", "parameters": "(String uriPrefix)", "modifiers": "public", "return": "String", "signature": "String defaultSpecFor(String uriPrefix)", "full_signature": "public String defaultSpecFor(String uriPrefix)", "class_method_signature": "PropertiesLoader.defaultSpecFor(String uriPrefix)", "testcase": false, "constructor": false}], "file": "owner/src/main/java/org/aeonbits/owner/loaders/PropertiesLoader.java"}, "focal_method": {"identifier": "load", "parameters": "(Properties result, URI uri)", "modifiers": "public", "return": "void", "body": "public void load(Properties result, URI uri) throws IOException {\n        URL url = uri.toURL();\n        InputStream input = url.openStream();\n        try {\n            load(result, input);\n        } finally {\n            input.close();\n        }\n    }", "signature": "void load(Properties result, URI uri)", "full_signature": "public void load(Properties result, URI uri)", "class_method_signature": "PropertiesLoader.load(Properties result, URI uri)", "testcase": false, "constructor": false, "invocations": ["toURL", "openStream", "load", "close"]}, "repository": {"repo_id": 7292204, "url": "https://github.com/lviggiano/owner", "stars": 723, "created": "12/23/2012 5:38:31 AM +00:00", "updates": "2020-01-21T03:13:31+00:00", "fork": "False", "license": "licensed"}}