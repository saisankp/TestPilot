{"test_class": {"identifier": "ForwardingBigQueryFileOutputFormatTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_PROJECT_ID = \"domain:project\";", "modifier": "private static final", "type": "String", "declarator": "TEST_PROJECT_ID = \"domain:project\"", "var_name": "TEST_PROJECT_ID"}, {"original_string": "private static final String TEST_DATASET_ID = \"dataset\";", "modifier": "private static final", "type": "String", "declarator": "TEST_DATASET_ID = \"dataset\"", "var_name": "TEST_DATASET_ID"}, {"original_string": "private static final String TEST_TABLE_ID = \"table\";", "modifier": "private static final", "type": "String", "declarator": "TEST_TABLE_ID = \"table\"", "var_name": "TEST_TABLE_ID"}, {"original_string": "private static final String QUALIFIED_TEST_TABLE_ID =\n      String.format(\"%s:%s.%s\", TEST_PROJECT_ID, TEST_DATASET_ID, TEST_TABLE_ID);", "modifier": "private static final", "type": "String", "declarator": "QUALIFIED_TEST_TABLE_ID =\n      String.format(\"%s:%s.%s\", TEST_PROJECT_ID, TEST_DATASET_ID, TEST_TABLE_ID)", "var_name": "QUALIFIED_TEST_TABLE_ID"}, {"original_string": "private static final BigQueryFileFormat TEST_FILE_FORMAT =\n      BigQueryFileFormat.NEWLINE_DELIMITED_JSON;", "modifier": "private static final", "type": "BigQueryFileFormat", "declarator": "TEST_FILE_FORMAT =\n      BigQueryFileFormat.NEWLINE_DELIMITED_JSON", "var_name": "TEST_FILE_FORMAT"}, {"original_string": "@SuppressWarnings(\"rawtypes\")\n  private static final Class<? extends FileOutputFormat> TEST_OUTPUT_CLASS = TextOutputFormat.class;", "modifier": "@SuppressWarnings(\"rawtypes\")\n  private static final", "type": "Class<? extends FileOutputFormat>", "declarator": "TEST_OUTPUT_CLASS = TextOutputFormat.class", "var_name": "TEST_OUTPUT_CLASS"}, {"original_string": "private static final String TEST_OUTPUT_PATH_STRING = \"gs://test_bucket/test_directory/\";", "modifier": "private static final", "type": "String", "declarator": "TEST_OUTPUT_PATH_STRING = \"gs://test_bucket/test_directory/\"", "var_name": "TEST_OUTPUT_PATH_STRING"}, {"original_string": "private static final Path TEST_OUTPUT_PATH = new Path(TEST_OUTPUT_PATH_STRING);", "modifier": "private static final", "type": "Path", "declarator": "TEST_OUTPUT_PATH = new Path(TEST_OUTPUT_PATH_STRING)", "var_name": "TEST_OUTPUT_PATH"}, {"original_string": "private static final TaskAttemptID TEST_TASK_ATTEMPT_ID =\n      new TaskAttemptID(new TaskID(\"sample_task\", 100, false, 200), 1);", "modifier": "private static final", "type": "TaskAttemptID", "declarator": "TEST_TASK_ATTEMPT_ID =\n      new TaskAttemptID(new TaskID(\"sample_task\", 100, false, 200), 1)", "var_name": "TEST_TASK_ATTEMPT_ID"}, {"original_string": "private InMemoryGoogleHadoopFileSystem ghfs;", "modifier": "private", "type": "InMemoryGoogleHadoopFileSystem", "declarator": "ghfs", "var_name": "ghfs"}, {"original_string": "private Configuration conf;", "modifier": "private", "type": "Configuration", "declarator": "conf", "var_name": "conf"}, {"original_string": "private Job job;", "modifier": "private", "type": "Job", "declarator": "job", "var_name": "job"}, {"original_string": "private ForwardingBigQueryFileOutputFormat<Text, Text> outputFormat;", "modifier": "private", "type": "ForwardingBigQueryFileOutputFormat<Text, Text>", "declarator": "outputFormat", "var_name": "outputFormat"}, {"original_string": "@Mock private TaskAttemptContext mockTaskAttemptContext;", "modifier": "@Mock private", "type": "TaskAttemptContext", "declarator": "mockTaskAttemptContext", "var_name": "mockTaskAttemptContext"}, {"original_string": "@Mock private FileOutputFormat<Text, Text> mockFileOutputFormat;", "modifier": "@Mock private", "type": "FileOutputFormat<Text, Text>", "declarator": "mockFileOutputFormat", "var_name": "mockFileOutputFormat"}, {"original_string": "@Mock private OutputCommitter mockOutputCommitter;", "modifier": "@Mock private", "type": "OutputCommitter", "declarator": "mockOutputCommitter", "var_name": "mockOutputCommitter"}, {"original_string": "@Mock private RecordWriter<Text, Text> mockRecordWriter;", "modifier": "@Mock private", "type": "RecordWriter<Text, Text>", "declarator": "mockRecordWriter", "var_name": "mockRecordWriter"}], "file": "bigquery/src/test/java/com/google/cloud/hadoop/io/bigquery/output/ForwardingBigQueryFileOutputFormatTest.java"}, "test_case": {"identifier": "testGetRecordWriter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetRecordWriter() throws Exception {\n    RecordWriter<Text, Text> recordWriter = outputFormat.getRecordWriter(mockTaskAttemptContext);\n\n    // Verify the delegate is being called and the mock RecordWriter is returned.\n    assertThat(recordWriter).isEqualTo(mockRecordWriter);\n    verify(mockFileOutputFormat).getRecordWriter(eq(mockTaskAttemptContext));\n  }", "signature": "void testGetRecordWriter()", "full_signature": "@Test public void testGetRecordWriter()", "class_method_signature": "ForwardingBigQueryFileOutputFormatTest.testGetRecordWriter()", "testcase": true, "constructor": false, "invocations": ["getRecordWriter", "isEqualTo", "assertThat", "getRecordWriter", "verify", "eq"]}, "focal_class": {"identifier": "ForwardingBigQueryFileOutputFormat", "superclass": "extends OutputFormat<K, V>", "interfaces": "", "fields": [{"original_string": "private static final GoogleLogger logger = GoogleLogger.forEnclosingClass();", "modifier": "private static final", "type": "GoogleLogger", "declarator": "logger = GoogleLogger.forEnclosingClass()", "var_name": "logger"}, {"original_string": "private FileOutputFormat<K, V> delegate = null;", "modifier": "private", "type": "FileOutputFormat<K, V>", "declarator": "delegate = null", "var_name": "delegate"}, {"original_string": "private OutputCommitter committer = null;", "modifier": "private", "type": "OutputCommitter", "declarator": "committer = null", "var_name": "committer"}], "methods": [{"identifier": "checkOutputSpecs", "parameters": "(JobContext job)", "modifiers": "@Override public", "return": "void", "signature": "void checkOutputSpecs(JobContext job)", "full_signature": "@Override public void checkOutputSpecs(JobContext job)", "class_method_signature": "ForwardingBigQueryFileOutputFormat.checkOutputSpecs(JobContext job)", "testcase": false, "constructor": false}, {"identifier": "getOutputCommitter", "parameters": "(TaskAttemptContext context)", "modifiers": "@Override public synchronized", "return": "OutputCommitter", "signature": "OutputCommitter getOutputCommitter(TaskAttemptContext context)", "full_signature": "@Override public synchronized OutputCommitter getOutputCommitter(TaskAttemptContext context)", "class_method_signature": "ForwardingBigQueryFileOutputFormat.getOutputCommitter(TaskAttemptContext context)", "testcase": false, "constructor": false}, {"identifier": "getRecordWriter", "parameters": "(TaskAttemptContext context)", "modifiers": "@Override public", "return": "RecordWriter<K, V>", "signature": "RecordWriter<K, V> getRecordWriter(TaskAttemptContext context)", "full_signature": "@Override public RecordWriter<K, V> getRecordWriter(TaskAttemptContext context)", "class_method_signature": "ForwardingBigQueryFileOutputFormat.getRecordWriter(TaskAttemptContext context)", "testcase": false, "constructor": false}, {"identifier": "createCommitter", "parameters": "(TaskAttemptContext context)", "modifiers": "protected", "return": "OutputCommitter", "signature": "OutputCommitter createCommitter(TaskAttemptContext context)", "full_signature": "protected OutputCommitter createCommitter(TaskAttemptContext context)", "class_method_signature": "ForwardingBigQueryFileOutputFormat.createCommitter(TaskAttemptContext context)", "testcase": false, "constructor": false}, {"identifier": "getDelegate", "parameters": "(Configuration conf)", "modifiers": "@SuppressWarnings(\"unchecked\") protected synchronized", "return": "FileOutputFormat<K, V>", "signature": "FileOutputFormat<K, V> getDelegate(Configuration conf)", "full_signature": "@SuppressWarnings(\"unchecked\") protected synchronized FileOutputFormat<K, V> getDelegate(Configuration conf)", "class_method_signature": "ForwardingBigQueryFileOutputFormat.getDelegate(Configuration conf)", "testcase": false, "constructor": false}, {"identifier": "setDelegate", "parameters": "(FileOutputFormat<K, V> delegate)", "modifiers": "@VisibleForTesting synchronized", "return": "void", "signature": "void setDelegate(FileOutputFormat<K, V> delegate)", "full_signature": "@VisibleForTesting synchronized void setDelegate(FileOutputFormat<K, V> delegate)", "class_method_signature": "ForwardingBigQueryFileOutputFormat.setDelegate(FileOutputFormat<K, V> delegate)", "testcase": false, "constructor": false}], "file": "bigquery/src/main/java/com/google/cloud/hadoop/io/bigquery/output/ForwardingBigQueryFileOutputFormat.java"}, "focal_method": {"identifier": "getRecordWriter", "parameters": "(TaskAttemptContext context)", "modifiers": "@Override public", "return": "RecordWriter<K, V>", "body": "@Override\n  public RecordWriter<K, V> getRecordWriter(TaskAttemptContext context)\n      throws IOException, InterruptedException {\n    Configuration conf = context.getConfiguration();\n    return getDelegate(conf).getRecordWriter(context);\n  }", "signature": "RecordWriter<K, V> getRecordWriter(TaskAttemptContext context)", "full_signature": "@Override public RecordWriter<K, V> getRecordWriter(TaskAttemptContext context)", "class_method_signature": "ForwardingBigQueryFileOutputFormat.getRecordWriter(TaskAttemptContext context)", "testcase": false, "constructor": false, "invocations": ["getConfiguration", "getRecordWriter", "getDelegate"]}, "repository": {"repo_id": 19684359, "url": "https://github.com/GoogleCloudDataproc/bigdata-interop", "stars": 178, "created": "5/12/2014 3:11:55 AM +00:00", "updates": "2020-01-23T23:10:40+00:00", "fork": "False", "license": "licensed"}}