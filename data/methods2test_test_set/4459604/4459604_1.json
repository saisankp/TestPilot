{"test_class": {"identifier": "I18nJsPluginTest", "superclass": "", "interfaces": "", "fields": [], "file": "handlebars-maven-plugin/src/test/java/com/github/jknack/handlebars/maven/I18nJsPluginTest.java"}, "test_case": {"identifier": "i18nJsNoMerge", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void i18nJsNoMerge() throws Exception {\n    I18nJsPlugin plugin = new I18nJsPlugin();\n    plugin.setProject(newProject(\"src/test/resources\"));\n    plugin.setOutput(\"target\");\n\n    plugin.execute();\n\n    assertEquals(tokens(\"src/test/resources/messages.expected.js\"),\n        tokens(\"target/messages.js\"));\n\n    assertEquals(tokens(\"src/test/resources/messages_es_AR.expected.js\"),\n        tokens(\"target/messages_es_AR.js\"));\n\n    FileUtils.copyFile(new File(\"target/messages.js\"), new File(\"target/messages-tests.js\"));\n  }", "signature": "void i18nJsNoMerge()", "full_signature": "@Test public void i18nJsNoMerge()", "class_method_signature": "I18nJsPluginTest.i18nJsNoMerge()", "testcase": true, "constructor": false, "invocations": ["setProject", "newProject", "setOutput", "execute", "assertEquals", "tokens", "tokens", "assertEquals", "tokens", "tokens", "copyFile"]}, "focal_class": {"identifier": "I18nJsPlugin", "superclass": "extends HandlebarsPlugin", "interfaces": "", "fields": [{"original_string": "@Parameter\n  private String bundle = \"messages\";", "modifier": "@Parameter\n  private", "type": "String", "declarator": "bundle = \"messages\"", "var_name": "bundle"}, {"original_string": "@Parameter(\n      defaultValue = \"${project.build.directory}/${project.build.finalName}/js\")\n  private String output;", "modifier": "@Parameter(\n      defaultValue = \"${project.build.directory}/${project.build.finalName}/js\")\n  private", "type": "String", "declarator": "output", "var_name": "output"}, {"original_string": "@Parameter(defaultValue = \"false\")\n  private boolean merge;", "modifier": "@Parameter(defaultValue = \"false\")\n  private", "type": "boolean", "declarator": "merge", "var_name": "merge"}, {"original_string": "@Parameter\n  private boolean amd;", "modifier": "@Parameter\n  private", "type": "boolean", "declarator": "amd", "var_name": "amd"}, {"original_string": "@Parameter(defaultValue = \"UTF-8\")\n  private String encoding = \"UTF-8\";", "modifier": "@Parameter(defaultValue = \"UTF-8\")\n  private", "type": "String", "declarator": "encoding = \"UTF-8\"", "var_name": "encoding"}], "methods": [{"identifier": "doExecute", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void doExecute()", "full_signature": "@Override protected void doExecute()", "class_method_signature": "I18nJsPlugin.doExecute()", "testcase": false, "constructor": false}, {"identifier": "wrap", "parameters": "(final String filename, final CharSequence body, final boolean amd)", "modifiers": "private", "return": "String", "signature": "String wrap(final String filename, final CharSequence body, final boolean amd)", "full_signature": "private String wrap(final String filename, final CharSequence body, final boolean amd)", "class_method_signature": "I18nJsPlugin.wrap(final String filename, final CharSequence body, final boolean amd)", "testcase": false, "constructor": false}, {"identifier": "bundles", "parameters": "(final String bundle, final URL[] classpath)", "modifiers": "private", "return": "List<File>", "signature": "List<File> bundles(final String bundle, final URL[] classpath)", "full_signature": "private List<File> bundles(final String bundle, final URL[] classpath)", "class_method_signature": "I18nJsPlugin.bundles(final String bundle, final URL[] classpath)", "testcase": false, "constructor": false}, {"identifier": "setBundle", "parameters": "(final String bundle)", "modifiers": "public", "return": "void", "signature": "void setBundle(final String bundle)", "full_signature": "public void setBundle(final String bundle)", "class_method_signature": "I18nJsPlugin.setBundle(final String bundle)", "testcase": false, "constructor": false}, {"identifier": "setOutput", "parameters": "(final String output)", "modifiers": "public", "return": "void", "signature": "void setOutput(final String output)", "full_signature": "public void setOutput(final String output)", "class_method_signature": "I18nJsPlugin.setOutput(final String output)", "testcase": false, "constructor": false}, {"identifier": "setMerge", "parameters": "(final boolean merge)", "modifiers": "public", "return": "void", "signature": "void setMerge(final boolean merge)", "full_signature": "public void setMerge(final boolean merge)", "class_method_signature": "I18nJsPlugin.setMerge(final boolean merge)", "testcase": false, "constructor": false}, {"identifier": "setAmd", "parameters": "(final boolean amd)", "modifiers": "public", "return": "void", "signature": "void setAmd(final boolean amd)", "full_signature": "public void setAmd(final boolean amd)", "class_method_signature": "I18nJsPlugin.setAmd(final boolean amd)", "testcase": false, "constructor": false}], "file": "handlebars-maven-plugin/src/main/java/com/github/jknack/handlebars/maven/I18nJsPlugin.java"}, "focal_method": {"identifier": "setOutput", "parameters": "(final String output)", "modifiers": "public", "return": "void", "body": "public void setOutput(final String output) {\n    this.output = output;\n  }", "signature": "void setOutput(final String output)", "full_signature": "public void setOutput(final String output)", "class_method_signature": "I18nJsPlugin.setOutput(final String output)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4459604, "url": "https://github.com/jknack/handlebars.java", "stars": 1107, "created": "5/27/2012 3:22:22 AM +00:00", "updates": "2020-01-24T06:58:31+00:00", "fork": "False", "license": "licensed"}}