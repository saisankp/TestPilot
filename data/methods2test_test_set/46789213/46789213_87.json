{"test_class": {"identifier": "BinarySuiteLoggingTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock public ProtocolSuiteBinary<ResourcePool> delegateSuite;", "modifier": "@Mock public", "type": "ProtocolSuiteBinary<ResourcePool>", "declarator": "delegateSuite", "var_name": "delegateSuite"}], "file": "core/src/test/java/dk/alexandra/fresco/logging/BinarySuiteLoggingTest.java"}, "test_case": {"identifier": "reset", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void reset() {\n    PerformanceLoggerCountingAggregate aggregate = mock(PerformanceLoggerCountingAggregate.class);\n    BinarySuiteLogging<ResourcePool> logging = new BinarySuiteLogging<>(delegateSuite,aggregate);\n    logging.reset();\n\n    verify(aggregate, times(1)).reset();\n  }", "signature": "void reset()", "full_signature": "@Test public void reset()", "class_method_signature": "BinarySuiteLoggingTest.reset()", "testcase": true, "constructor": false, "invocations": ["mock", "reset", "reset", "verify", "times"]}, "focal_class": {"identifier": "BinarySuiteLogging", "superclass": "", "interfaces": "implements ProtocolSuiteBinary<ResourcePoolT>, PerformanceLogger", "fields": [{"original_string": "private final ProtocolSuiteBinary<ResourcePoolT> delegateSuite;", "modifier": "private final", "type": "ProtocolSuiteBinary<ResourcePoolT>", "declarator": "delegateSuite", "var_name": "delegateSuite"}, {"original_string": "private final PerformanceLoggerCountingAggregate aggregate;", "modifier": "private final", "type": "PerformanceLoggerCountingAggregate", "declarator": "aggregate", "var_name": "aggregate"}], "methods": [{"identifier": "BinarySuiteLogging", "parameters": "(ProtocolSuiteBinary<ResourcePoolT> protocolSuite)", "modifiers": "public", "return": "", "signature": " BinarySuiteLogging(ProtocolSuiteBinary<ResourcePoolT> protocolSuite)", "full_signature": "public  BinarySuiteLogging(ProtocolSuiteBinary<ResourcePoolT> protocolSuite)", "class_method_signature": "BinarySuiteLogging.BinarySuiteLogging(ProtocolSuiteBinary<ResourcePoolT> protocolSuite)", "testcase": false, "constructor": true}, {"identifier": "BinarySuiteLogging", "parameters": "(ProtocolSuiteBinary<ResourcePoolT> protocolSuite,\n      PerformanceLoggerCountingAggregate aggregate)", "modifiers": "protected", "return": "", "signature": " BinarySuiteLogging(ProtocolSuiteBinary<ResourcePoolT> protocolSuite,\n      PerformanceLoggerCountingAggregate aggregate)", "full_signature": "protected  BinarySuiteLogging(ProtocolSuiteBinary<ResourcePoolT> protocolSuite,\n      PerformanceLoggerCountingAggregate aggregate)", "class_method_signature": "BinarySuiteLogging.BinarySuiteLogging(ProtocolSuiteBinary<ResourcePoolT> protocolSuite,\n      PerformanceLoggerCountingAggregate aggregate)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "(ResourcePoolT resourcePool)", "modifiers": "@Override public", "return": "BuilderFactoryBinary", "signature": "BuilderFactoryBinary init(ResourcePoolT resourcePool)", "full_signature": "@Override public BuilderFactoryBinary init(ResourcePoolT resourcePool)", "class_method_signature": "BinarySuiteLogging.init(ResourcePoolT resourcePool)", "testcase": false, "constructor": false}, {"identifier": "createRoundSynchronization", "parameters": "()", "modifiers": "@Override public", "return": "RoundSynchronization<ResourcePoolT>", "signature": "RoundSynchronization<ResourcePoolT> createRoundSynchronization()", "full_signature": "@Override public RoundSynchronization<ResourcePoolT> createRoundSynchronization()", "class_method_signature": "BinarySuiteLogging.createRoundSynchronization()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "BinarySuiteLogging.reset()", "testcase": false, "constructor": false}, {"identifier": "getLoggedValues", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Long>", "signature": "Map<String, Long> getLoggedValues()", "full_signature": "@Override public Map<String, Long> getLoggedValues()", "class_method_signature": "BinarySuiteLogging.getLoggedValues()", "testcase": false, "constructor": false}], "file": "core/src/main/java/dk/alexandra/fresco/logging/BinarySuiteLogging.java"}, "focal_method": {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void reset() {\n    aggregate.reset();\n  }", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "BinarySuiteLogging.reset()", "testcase": false, "constructor": false, "invocations": ["reset"]}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}