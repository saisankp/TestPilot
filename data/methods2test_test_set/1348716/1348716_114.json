{"test_class": {"identifier": "LoanPrdActionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private QuestionnaireServiceFacade questionnaireServiceFacade;", "modifier": "@Mock\n    private", "type": "QuestionnaireServiceFacade", "declarator": "questionnaireServiceFacade", "var_name": "questionnaireServiceFacade"}, {"original_string": "@Mock\n    private HttpServletRequest request;", "modifier": "@Mock\n    private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private HttpSession session;", "modifier": "@Mock\n    private", "type": "HttpSession", "declarator": "session", "var_name": "session"}, {"original_string": "@Mock\n    private FlowManager flowManager;", "modifier": "@Mock\n    private", "type": "FlowManager", "declarator": "flowManager", "var_name": "flowManager"}, {"original_string": "private LoanPrdAction loanPrdAction;", "modifier": "private", "type": "LoanPrdAction", "declarator": "loanPrdAction", "var_name": "loanPrdAction"}, {"original_string": "private static final String FLOW_KEY = \"FlowKey\";", "modifier": "private static final", "type": "String", "declarator": "FLOW_KEY = \"FlowKey\"", "var_name": "FLOW_KEY"}], "file": "application/src/test/java/org/mifos/accounts/productdefinition/struts/action/LoanPrdActionTest.java"}, "test_case": {"identifier": "shouldGetQuestionGroupResponses", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldGetQuestionGroupResponses() throws PageExpiredException {\n        when(request.getAttribute(Constants.CURRENTFLOWKEY)).thenReturn(FLOW_KEY);\n        when(request.getSession()).thenReturn(session);\n        when(session.getAttribute(Constants.FLOWMANAGER)).thenReturn(flowManager);\n        List<QuestionGroupDetail> questionGroupDetails = asList(getQuestionGroupDetail(1, \"QG1\", true), getQuestionGroupDetail(2, \"QG2\", true), getQuestionGroupDetail(3, \"QG3\", true));\n        when(flowManager.getFromFlow(FLOW_KEY, ProductDefinitionConstants.SELECTEDQGLIST)).thenReturn(questionGroupDetails);\n        Set<QuestionGroupReference> questionGroupReferences = loanPrdAction.getQuestionGroups(request);\n        assertThat(questionGroupReferences, is(notNullValue()));\n        assertThat(questionGroupReferences.size(), is(3));\n        QuestionGroupReference[] qgReferences = questionGroupReferences.toArray(new QuestionGroupReference[questionGroupReferences.size()]);\n        assertThat(qgReferences[0].getQuestionGroupId(), is(1));\n        assertThat(qgReferences[1].getQuestionGroupId(), is(2));\n        assertThat(qgReferences[2].getQuestionGroupId(), is(3));\n        verify(request, times(1)).getAttribute(Constants.CURRENTFLOWKEY);\n        verify(request, times(1)).getSession();\n        verify(session, times(1)).getAttribute(Constants.FLOWMANAGER);\n        verify(flowManager, times(1)).getFromFlow(FLOW_KEY, ProductDefinitionConstants.SELECTEDQGLIST);\n    }", "signature": "void shouldGetQuestionGroupResponses()", "full_signature": "@Test public void shouldGetQuestionGroupResponses()", "class_method_signature": "LoanPrdActionTest.shouldGetQuestionGroupResponses()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getAttribute", "thenReturn", "when", "getSession", "thenReturn", "when", "getAttribute", "asList", "getQuestionGroupDetail", "getQuestionGroupDetail", "getQuestionGroupDetail", "thenReturn", "when", "getFromFlow", "getQuestionGroups", "assertThat", "is", "notNullValue", "assertThat", "size", "is", "toArray", "size", "assertThat", "getQuestionGroupId", "is", "assertThat", "getQuestionGroupId", "is", "assertThat", "getQuestionGroupId", "is", "getAttribute", "verify", "times", "getSession", "verify", "times", "getAttribute", "verify", "times", "getFromFlow", "verify", "times"]}, "focal_class": {"identifier": "LoanPrdAction", "superclass": "extends BaseAction", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(LoanOfferingBO.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(LoanOfferingBO.class)", "var_name": "logger"}, {"original_string": "private LoanPrdBusinessService loanPrdBusinessService;", "modifier": "private", "type": "LoanPrdBusinessService", "declarator": "loanPrdBusinessService", "var_name": "loanPrdBusinessService"}], "methods": [{"identifier": "LoanPrdAction", "parameters": "()", "modifiers": "public", "return": "", "signature": " LoanPrdAction()", "full_signature": "public  LoanPrdAction()", "class_method_signature": "LoanPrdAction.LoanPrdAction()", "testcase": false, "constructor": true}, {"identifier": "getService", "parameters": "()", "modifiers": "@Override protected", "return": "BusinessService", "signature": "BusinessService getService()", "full_signature": "@Override protected BusinessService getService()", "class_method_signature": "LoanPrdAction.getService()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "modifiers": "@TransactionDemarcate(saveToken = true) public", "return": "ActionForward", "signature": "ActionForward load(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "full_signature": "@TransactionDemarcate(saveToken = true) public ActionForward load(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "class_method_signature": "LoanPrdAction.load(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "setRepaymentIndepOfMeetingEnabledFlag", "parameters": "(HttpServletRequest request)", "modifiers": "private", "return": "void", "signature": "void setRepaymentIndepOfMeetingEnabledFlag(HttpServletRequest request)", "full_signature": "private void setRepaymentIndepOfMeetingEnabledFlag(HttpServletRequest request)", "class_method_signature": "LoanPrdAction.setRepaymentIndepOfMeetingEnabledFlag(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "preview", "parameters": "(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) public", "return": "ActionForward", "signature": "ActionForward preview(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) public ActionForward preview(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "class_method_signature": "LoanPrdAction.preview(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "previous", "parameters": "(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) public", "return": "ActionForward", "signature": "ActionForward previous(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) public ActionForward previous(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "class_method_signature": "LoanPrdAction.previous(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "cancelCreate", "parameters": "(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "modifiers": "@TransactionDemarcate(validateAndResetToken = true) public", "return": "ActionForward", "signature": "ActionForward cancelCreate(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "full_signature": "@TransactionDemarcate(validateAndResetToken = true) public ActionForward cancelCreate(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "class_method_signature": "LoanPrdAction.cancelCreate(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) public", "return": "ActionForward", "signature": "ActionForward validate(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) public ActionForward validate(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "class_method_signature": "LoanPrdAction.validate(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "modifiers": "@TransactionDemarcate(validateAndResetToken = true) public", "return": "ActionForward", "signature": "ActionForward create(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "full_signature": "@TransactionDemarcate(validateAndResetToken = true) public ActionForward create(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "class_method_signature": "LoanPrdAction.create(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getQuestionGroups", "parameters": "(HttpServletRequest request)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "Set<QuestionGroupReference>", "signature": "Set<QuestionGroupReference> getQuestionGroups(HttpServletRequest request)", "full_signature": "@SuppressWarnings(\"unchecked\") public Set<QuestionGroupReference> getQuestionGroups(HttpServletRequest request)", "class_method_signature": "LoanPrdAction.getQuestionGroups(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "mapCashFlowDetail", "parameters": "(LoanPrdActionForm loanPrdActionForm, LoanOfferingBO loanOffering)", "modifiers": "private", "return": "void", "signature": "void mapCashFlowDetail(LoanPrdActionForm loanPrdActionForm, LoanOfferingBO loanOffering)", "full_signature": "private void mapCashFlowDetail(LoanPrdActionForm loanPrdActionForm, LoanOfferingBO loanOffering)", "class_method_signature": "LoanPrdAction.mapCashFlowDetail(LoanPrdActionForm loanPrdActionForm, LoanOfferingBO loanOffering)", "testcase": false, "constructor": false}, {"identifier": "mapToCashFlowDetails", "parameters": "(LoanPrdActionForm loanPrdActionForm)", "modifiers": "private", "return": "CashFlowDetail", "signature": "CashFlowDetail mapToCashFlowDetails(LoanPrdActionForm loanPrdActionForm)", "full_signature": "private CashFlowDetail mapToCashFlowDetails(LoanPrdActionForm loanPrdActionForm)", "class_method_signature": "LoanPrdAction.mapToCashFlowDetails(LoanPrdActionForm loanPrdActionForm)", "testcase": false, "constructor": false}, {"identifier": "mapVariableInstallmentDetails", "parameters": "(LoanOfferingBO loanOffering, LoanPrdActionForm loanPrdActionForm)", "modifiers": "private", "return": "void", "signature": "void mapVariableInstallmentDetails(LoanOfferingBO loanOffering, LoanPrdActionForm loanPrdActionForm)", "full_signature": "private void mapVariableInstallmentDetails(LoanOfferingBO loanOffering, LoanPrdActionForm loanPrdActionForm)", "class_method_signature": "LoanPrdAction.mapVariableInstallmentDetails(LoanOfferingBO loanOffering, LoanPrdActionForm loanPrdActionForm)", "testcase": false, "constructor": false}, {"identifier": "mapToVariableInstallmentDetails", "parameters": "(LoanOfferingBO loanOffering, LoanPrdActionForm loanPrdActionForm)", "modifiers": "private", "return": "VariableInstallmentDetailsBO", "signature": "VariableInstallmentDetailsBO mapToVariableInstallmentDetails(LoanOfferingBO loanOffering, LoanPrdActionForm loanPrdActionForm)", "full_signature": "private VariableInstallmentDetailsBO mapToVariableInstallmentDetails(LoanOfferingBO loanOffering, LoanPrdActionForm loanPrdActionForm)", "class_method_signature": "LoanPrdAction.mapToVariableInstallmentDetails(LoanOfferingBO loanOffering, LoanPrdActionForm loanPrdActionForm)", "testcase": false, "constructor": false}, {"identifier": "manage", "parameters": "(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) public", "return": "ActionForward", "signature": "ActionForward manage(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) public ActionForward manage(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "class_method_signature": "LoanPrdAction.manage(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getLoanOffering", "parameters": "(Short prdOfferingId)", "modifiers": "private", "return": "LoanOfferingBO", "signature": "LoanOfferingBO getLoanOffering(Short prdOfferingId)", "full_signature": "private LoanOfferingBO getLoanOffering(Short prdOfferingId)", "class_method_signature": "LoanPrdAction.getLoanOffering(Short prdOfferingId)", "testcase": false, "constructor": false}, {"identifier": "setCurrencyOnSession", "parameters": "(HttpServletRequest request, LoanOfferingBO loanOffering)", "modifiers": "private", "return": "void", "signature": "void setCurrencyOnSession(HttpServletRequest request, LoanOfferingBO loanOffering)", "full_signature": "private void setCurrencyOnSession(HttpServletRequest request, LoanOfferingBO loanOffering)", "class_method_signature": "LoanPrdAction.setCurrencyOnSession(HttpServletRequest request, LoanOfferingBO loanOffering)", "testcase": false, "constructor": false}, {"identifier": "getFeesSelected", "parameters": "(HttpServletRequest request, LoanOfferingBO loanOffering)", "modifiers": "private", "return": "List<FeeDto>", "signature": "List<FeeDto> getFeesSelected(HttpServletRequest request, LoanOfferingBO loanOffering)", "full_signature": "private List<FeeDto> getFeesSelected(HttpServletRequest request, LoanOfferingBO loanOffering)", "class_method_signature": "LoanPrdAction.getFeesSelected(HttpServletRequest request, LoanOfferingBO loanOffering)", "testcase": false, "constructor": false}, {"identifier": "getFundsSelected", "parameters": "(LoanOfferingBO loanOffering)", "modifiers": "private", "return": "List<FundBO>", "signature": "List<FundBO> getFundsSelected(LoanOfferingBO loanOffering)", "full_signature": "private List<FundBO> getFundsSelected(LoanOfferingBO loanOffering)", "class_method_signature": "LoanPrdAction.getFundsSelected(LoanOfferingBO loanOffering)", "testcase": false, "constructor": false}, {"identifier": "getPenaltiesSelected", "parameters": "(LoanOfferingBO loanOffering)", "modifiers": "private", "return": "List<PenaltyDto>", "signature": "List<PenaltyDto> getPenaltiesSelected(LoanOfferingBO loanOffering)", "full_signature": "private List<PenaltyDto> getPenaltiesSelected(LoanOfferingBO loanOffering)", "class_method_signature": "LoanPrdAction.getPenaltiesSelected(LoanOfferingBO loanOffering)", "testcase": false, "constructor": false}, {"identifier": "editPreview", "parameters": "(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) public", "return": "ActionForward", "signature": "ActionForward editPreview(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) public ActionForward editPreview(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "class_method_signature": "LoanPrdAction.editPreview(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "editPrevious", "parameters": "(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "modifiers": "@TransactionDemarcate(joinToken = true) public", "return": "ActionForward", "signature": "ActionForward editPrevious(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "full_signature": "@TransactionDemarcate(joinToken = true) public ActionForward editPrevious(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "class_method_signature": "LoanPrdAction.editPrevious(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "editCancel", "parameters": "(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "modifiers": "@CloseSession @TransactionDemarcate(validateAndResetToken = true) public", "return": "ActionForward", "signature": "ActionForward editCancel(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "full_signature": "@CloseSession @TransactionDemarcate(validateAndResetToken = true) public ActionForward editCancel(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "class_method_signature": "LoanPrdAction.editCancel(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, @SuppressWarnings(\"unused\") HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "modifiers": "@CloseSession @TransactionDemarcate(validateAndResetToken = true) public", "return": "ActionForward", "signature": "ActionForward update(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "full_signature": "@CloseSession @TransactionDemarcate(validateAndResetToken = true) public ActionForward update(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "class_method_signature": "LoanPrdAction.update(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "modifiers": "@TransactionDemarcate(saveToken = true) public", "return": "ActionForward", "signature": "ActionForward get(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "full_signature": "@TransactionDemarcate(saveToken = true) public ActionForward get(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "class_method_signature": "LoanPrdAction.get(ActionMapping mapping, ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "setSelectedQuestionGroupsOnSession", "parameters": "(HttpServletRequest request, LoanOfferingBO loanOffering,\n                                    QuestionnaireServiceFacade questionnaireServiceFacade)", "modifiers": "public", "return": "void", "signature": "void setSelectedQuestionGroupsOnSession(HttpServletRequest request, LoanOfferingBO loanOffering,\n                                    QuestionnaireServiceFacade questionnaireServiceFacade)", "full_signature": "public void setSelectedQuestionGroupsOnSession(HttpServletRequest request, LoanOfferingBO loanOffering,\n                                    QuestionnaireServiceFacade questionnaireServiceFacade)", "class_method_signature": "LoanPrdAction.setSelectedQuestionGroupsOnSession(HttpServletRequest request, LoanOfferingBO loanOffering,\n                                    QuestionnaireServiceFacade questionnaireServiceFacade)", "testcase": false, "constructor": false}, {"identifier": "viewAllLoanProducts", "parameters": "(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "modifiers": "@TransactionDemarcate(saveToken = true) public", "return": "ActionForward", "signature": "ActionForward viewAllLoanProducts(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "full_signature": "@TransactionDemarcate(saveToken = true) public ActionForward viewAllLoanProducts(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "class_method_signature": "LoanPrdAction.viewAllLoanProducts(ActionMapping mapping, @SuppressWarnings(\"unused\") ActionForm form, HttpServletRequest request,\n            @SuppressWarnings(\"unused\") HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "loadMasterData", "parameters": "(HttpServletRequest request)", "modifiers": "private", "return": "void", "signature": "void loadMasterData(HttpServletRequest request)", "full_signature": "private void loadMasterData(HttpServletRequest request)", "class_method_signature": "LoanPrdAction.loadMasterData(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "setQuestionGroupsOnSession", "parameters": "(HttpServletRequest request, QuestionnaireServiceFacade questionnaireServiceFacade)", "modifiers": "public", "return": "void", "signature": "void setQuestionGroupsOnSession(HttpServletRequest request, QuestionnaireServiceFacade questionnaireServiceFacade)", "full_signature": "public void setQuestionGroupsOnSession(HttpServletRequest request, QuestionnaireServiceFacade questionnaireServiceFacade)", "class_method_signature": "LoanPrdAction.setQuestionGroupsOnSession(HttpServletRequest request, QuestionnaireServiceFacade questionnaireServiceFacade)", "testcase": false, "constructor": false}, {"identifier": "loadSelectedFeesPenaltiesAndFunds", "parameters": "(List<FeeDto> feesSelected, List<FundBO> fundsSelected, List<PenaltyDto> penaltiesSelected,\n            HttpServletRequest request)", "modifiers": "private", "return": "void", "signature": "void loadSelectedFeesPenaltiesAndFunds(List<FeeDto> feesSelected, List<FundBO> fundsSelected, List<PenaltyDto> penaltiesSelected,\n            HttpServletRequest request)", "full_signature": "private void loadSelectedFeesPenaltiesAndFunds(List<FeeDto> feesSelected, List<FundBO> fundsSelected, List<PenaltyDto> penaltiesSelected,\n            HttpServletRequest request)", "class_method_signature": "LoanPrdAction.loadSelectedFeesPenaltiesAndFunds(List<FeeDto> feesSelected, List<FundBO> fundsSelected, List<PenaltyDto> penaltiesSelected,\n            HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "loadStatusList", "parameters": "(HttpServletRequest request)", "modifiers": "private", "return": "void", "signature": "void loadStatusList(HttpServletRequest request)", "full_signature": "private void loadStatusList(HttpServletRequest request)", "class_method_signature": "LoanPrdAction.loadStatusList(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "getGLCodes", "parameters": "(FinancialActionConstants financialAction, FinancialConstants debitCredit)", "modifiers": "private", "return": "List<GLCodeEntity>", "signature": "List<GLCodeEntity> getGLCodes(FinancialActionConstants financialAction, FinancialConstants debitCredit)", "full_signature": "private List<GLCodeEntity> getGLCodes(FinancialActionConstants financialAction, FinancialConstants debitCredit)", "class_method_signature": "LoanPrdAction.getGLCodes(FinancialActionConstants financialAction, FinancialConstants debitCredit)", "testcase": false, "constructor": false}, {"identifier": "findMasterEntity", "parameters": "(HttpServletRequest request, String collectionName, Short value)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "MasterDataEntity", "signature": "MasterDataEntity findMasterEntity(HttpServletRequest request, String collectionName, Short value)", "full_signature": "@SuppressWarnings(\"unchecked\") private MasterDataEntity findMasterEntity(HttpServletRequest request, String collectionName, Short value)", "class_method_signature": "LoanPrdAction.findMasterEntity(HttpServletRequest request, String collectionName, Short value)", "testcase": false, "constructor": false}, {"identifier": "findGLCodeEntity", "parameters": "(HttpServletRequest request, String collectionName, String value)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "GLCodeEntity", "signature": "GLCodeEntity findGLCodeEntity(HttpServletRequest request, String collectionName, String value)", "full_signature": "@SuppressWarnings(\"unchecked\") private GLCodeEntity findGLCodeEntity(HttpServletRequest request, String collectionName, String value)", "class_method_signature": "LoanPrdAction.findGLCodeEntity(HttpServletRequest request, String collectionName, String value)", "testcase": false, "constructor": false}, {"identifier": "getProductCategory", "parameters": "(List<ProductCategoryBO> productCategories, Short productCategoryId)", "modifiers": "private", "return": "ProductCategoryBO", "signature": "ProductCategoryBO getProductCategory(List<ProductCategoryBO> productCategories, Short productCategoryId)", "full_signature": "private ProductCategoryBO getProductCategory(List<ProductCategoryBO> productCategories, Short productCategoryId)", "class_method_signature": "LoanPrdAction.getProductCategory(List<ProductCategoryBO> productCategories, Short productCategoryId)", "testcase": false, "constructor": false}, {"identifier": "getFundsFromList", "parameters": "(List<FundBO> funds, String[] fundsSelected)", "modifiers": "private", "return": "List<FundBO>", "signature": "List<FundBO> getFundsFromList(List<FundBO> funds, String[] fundsSelected)", "full_signature": "private List<FundBO> getFundsFromList(List<FundBO> funds, String[] fundsSelected)", "class_method_signature": "LoanPrdAction.getFundsFromList(List<FundBO> funds, String[] fundsSelected)", "testcase": false, "constructor": false}, {"identifier": "getFundFromList", "parameters": "(List<FundBO> funds, String fundSelected)", "modifiers": "private", "return": "FundBO", "signature": "FundBO getFundFromList(List<FundBO> funds, String fundSelected)", "full_signature": "private FundBO getFundFromList(List<FundBO> funds, String fundSelected)", "class_method_signature": "LoanPrdAction.getFundFromList(List<FundBO> funds, String fundSelected)", "testcase": false, "constructor": false}, {"identifier": "getFeeViewList", "parameters": "(UserContext userContext, List<FeeBO> fees)", "modifiers": "private", "return": "List<FeeDto>", "signature": "List<FeeDto> getFeeViewList(UserContext userContext, List<FeeBO> fees)", "full_signature": "private List<FeeDto> getFeeViewList(UserContext userContext, List<FeeBO> fees)", "class_method_signature": "LoanPrdAction.getFeeViewList(UserContext userContext, List<FeeBO> fees)", "testcase": false, "constructor": false}, {"identifier": "getPenaltyViewList", "parameters": "(List<PenaltyBO> penalties)", "modifiers": "private", "return": "List<PenaltyDto>", "signature": "List<PenaltyDto> getPenaltyViewList(List<PenaltyBO> penalties)", "full_signature": "private List<PenaltyDto> getPenaltyViewList(List<PenaltyBO> penalties)", "class_method_signature": "LoanPrdAction.getPenaltyViewList(List<PenaltyBO> penalties)", "testcase": false, "constructor": false}, {"identifier": "getFeeList", "parameters": "(List<FeeBO> fees, String[] feesSelected)", "modifiers": "private", "return": "List<FeeBO>", "signature": "List<FeeBO> getFeeList(List<FeeBO> fees, String[] feesSelected)", "full_signature": "private List<FeeBO> getFeeList(List<FeeBO> fees, String[] feesSelected)", "class_method_signature": "LoanPrdAction.getFeeList(List<FeeBO> fees, String[] feesSelected)", "testcase": false, "constructor": false}, {"identifier": "getPenaltyList", "parameters": "(List<PenaltyBO> penalties, String[] penaltiesSelected)", "modifiers": "private", "return": "List<PenaltyBO>", "signature": "List<PenaltyBO> getPenaltyList(List<PenaltyBO> penalties, String[] penaltiesSelected)", "full_signature": "private List<PenaltyBO> getPenaltyList(List<PenaltyBO> penalties, String[] penaltiesSelected)", "class_method_signature": "LoanPrdAction.getPenaltyList(List<PenaltyBO> penalties, String[] penaltiesSelected)", "testcase": false, "constructor": false}, {"identifier": "getFeeFromList", "parameters": "(List<FeeBO> fees, String feeSelected)", "modifiers": "private", "return": "FeeBO", "signature": "FeeBO getFeeFromList(List<FeeBO> fees, String feeSelected)", "full_signature": "private FeeBO getFeeFromList(List<FeeBO> fees, String feeSelected)", "class_method_signature": "LoanPrdAction.getFeeFromList(List<FeeBO> fees, String feeSelected)", "testcase": false, "constructor": false}, {"identifier": "getPenaltyFromList", "parameters": "(List<PenaltyBO> penalties, String penaltySelected)", "modifiers": "private", "return": "PenaltyBO", "signature": "PenaltyBO getPenaltyFromList(List<PenaltyBO> penalties, String penaltySelected)", "full_signature": "private PenaltyBO getPenaltyFromList(List<PenaltyBO> penalties, String penaltySelected)", "class_method_signature": "LoanPrdAction.getPenaltyFromList(List<PenaltyBO> penalties, String penaltySelected)", "testcase": false, "constructor": false}, {"identifier": "setDataIntoActionForm", "parameters": "(LoanOfferingBO loanProduct, LoanPrdActionForm loanPrdActionForm,\n            HttpServletRequest request)", "modifiers": "private", "return": "void", "signature": "void setDataIntoActionForm(LoanOfferingBO loanProduct, LoanPrdActionForm loanPrdActionForm,\n            HttpServletRequest request)", "full_signature": "private void setDataIntoActionForm(LoanOfferingBO loanProduct, LoanPrdActionForm loanPrdActionForm,\n            HttpServletRequest request)", "class_method_signature": "LoanPrdAction.setDataIntoActionForm(LoanOfferingBO loanProduct, LoanPrdActionForm loanPrdActionForm,\n            HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "getQuestionnaireServiceFacade", "parameters": "(HttpServletRequest request)", "modifiers": "private", "return": "QuestionnaireServiceFacade", "signature": "QuestionnaireServiceFacade getQuestionnaireServiceFacade(HttpServletRequest request)", "full_signature": "private QuestionnaireServiceFacade getQuestionnaireServiceFacade(HttpServletRequest request)", "class_method_signature": "LoanPrdAction.getQuestionnaireServiceFacade(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "setVariableInstallmentDetailsOnLoanProductForm", "parameters": "(LoanPrdActionForm loanPrdActionForm, LoanOfferingBO loanOfferingBO)", "modifiers": "private", "return": "void", "signature": "void setVariableInstallmentDetailsOnLoanProductForm(LoanPrdActionForm loanPrdActionForm, LoanOfferingBO loanOfferingBO)", "full_signature": "private void setVariableInstallmentDetailsOnLoanProductForm(LoanPrdActionForm loanPrdActionForm, LoanOfferingBO loanOfferingBO)", "class_method_signature": "LoanPrdAction.setVariableInstallmentDetailsOnLoanProductForm(LoanPrdActionForm loanPrdActionForm, LoanOfferingBO loanOfferingBO)", "testcase": false, "constructor": false}], "file": "application/src/main/java/org/mifos/accounts/productdefinition/struts/action/LoanPrdAction.java"}, "focal_method": {"identifier": "getQuestionGroups", "parameters": "(HttpServletRequest request)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "Set<QuestionGroupReference>", "body": "@SuppressWarnings(\"unchecked\")\n    public Set<QuestionGroupReference> getQuestionGroups(HttpServletRequest request) throws PageExpiredException {\n        Set<QuestionGroupReference> questionGroupReferences = null;\n        List<QuestionGroupDetail> questionGroups = (List<QuestionGroupDetail>) SessionUtils.getAttribute(ProductDefinitionConstants.SELECTEDQGLIST, request);\n        if (CollectionUtils.isNotEmpty(questionGroups)) {\n            questionGroupReferences = new LinkedHashSet<QuestionGroupReference>(questionGroups.size());\n            for (QuestionGroupDetail questionGroupDetail : questionGroups) {\n                QuestionGroupReference questionGroupReference = new QuestionGroupReference();\n                questionGroupReference.setQuestionGroupId(questionGroupDetail.getId());\n                questionGroupReferences.add(questionGroupReference);\n            }\n        }\n        return questionGroupReferences;\n    }", "signature": "Set<QuestionGroupReference> getQuestionGroups(HttpServletRequest request)", "full_signature": "@SuppressWarnings(\"unchecked\") public Set<QuestionGroupReference> getQuestionGroups(HttpServletRequest request)", "class_method_signature": "LoanPrdAction.getQuestionGroups(HttpServletRequest request)", "testcase": false, "constructor": false, "invocations": ["getAttribute", "isNotEmpty", "size", "setQuestionGroupId", "getId", "add"]}, "repository": {"repo_id": 1348716, "url": "https://github.com/mifos/head", "language": "Java", "is_fork": false, "fork_count": 91, "stargazer_count": 55, "size": 532732, "license": "licensed"}}