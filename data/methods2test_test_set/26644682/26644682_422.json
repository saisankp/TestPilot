{"test_class": {"identifier": "XlsDetectorTest", "superclass": "extends AbstractSchemaTestUtils", "interfaces": "", "fields": [{"original_string": "@Autowired\n    XlsDetector xlsDetector;", "modifier": "@Autowired", "type": "XlsDetector", "declarator": "xlsDetector", "var_name": "xlsDetector"}], "file": "dataprep-backend-service/src/test/java/org/talend/dataprep/schema/xls/XlsDetectorTest.java"}, "test_case": {"identifier": "should_not_read_null_input_stream", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void should_not_read_null_input_stream() throws Exception {\n        xlsDetector.detect(null);\n    }", "signature": "void should_not_read_null_input_stream()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void should_not_read_null_input_stream()", "class_method_signature": "XlsDetectorTest.should_not_read_null_input_stream()", "testcase": true, "constructor": false, "invocations": ["detect"]}, "focal_class": {"identifier": "XlsDetector", "superclass": "extends POIFSContainerDetector", "interfaces": "implements Detector", "fields": [{"original_string": "private static final String OLD_XLS_MEDIA_TYPE =\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";", "modifier": "private static final", "type": "String", "declarator": "OLD_XLS_MEDIA_TYPE =\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"", "var_name": "OLD_XLS_MEDIA_TYPE"}, {"original_string": "private ZipContainerDetector zipContainerDetector = new ZipContainerDetector();", "modifier": "private", "type": "ZipContainerDetector", "declarator": "zipContainerDetector = new ZipContainerDetector()", "var_name": "zipContainerDetector"}, {"original_string": "@Autowired\n    private transient XlsFormatFamily xlsFormatFamily;", "modifier": "@Autowired\n    private transient", "type": "XlsFormatFamily", "declarator": "xlsFormatFamily", "var_name": "xlsFormatFamily"}], "methods": [{"identifier": "detect", "parameters": "(Metadata metadata, TikaInputStream inputStream)", "modifiers": "@Override public", "return": "Format", "signature": "Format detect(Metadata metadata, TikaInputStream inputStream)", "full_signature": "@Override public Format detect(Metadata metadata, TikaInputStream inputStream)", "class_method_signature": "XlsDetector.detect(Metadata metadata, TikaInputStream inputStream)", "testcase": false, "constructor": false}], "file": "dataprep-backend-service/src/main/java/org/talend/dataprep/schema/xls/XlsDetector.java"}, "focal_method": {"identifier": "detect", "parameters": "(Metadata metadata, TikaInputStream inputStream)", "modifiers": "@Override public", "return": "Format", "body": "@Override\n    public Format detect(Metadata metadata, TikaInputStream inputStream) throws IOException {\n\n        Format result = null;\n\n        MediaType mediaType = super.detect(inputStream, metadata);\n        if (mediaType == null || StringUtils.equals(mediaType.toString(), FormatUtils.UNKNOWN_MEDIA_TYPE)) {\n            mediaType = zipContainerDetector.detect(inputStream, new Metadata());\n        }\n\n        if (mediaType != null) {\n            String mediaTypeName = mediaType.toString();\n            if (StringUtils.startsWith(mediaTypeName, XlsFormatFamily.MEDIA_TYPE)\n                    || StringUtils.equals(mediaTypeName, OLD_XLS_MEDIA_TYPE)) {\n                result = new Format(xlsFormatFamily, FormatUtils.DEFAULT_ENCODING);\n            }\n        }\n\n        return result;\n    }", "signature": "Format detect(Metadata metadata, TikaInputStream inputStream)", "full_signature": "@Override public Format detect(Metadata metadata, TikaInputStream inputStream)", "class_method_signature": "XlsDetector.detect(Metadata metadata, TikaInputStream inputStream)", "testcase": false, "constructor": false, "invocations": ["detect", "equals", "toString", "detect", "toString", "startsWith", "equals"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}