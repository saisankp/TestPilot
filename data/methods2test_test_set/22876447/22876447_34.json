{"test_class": {"identifier": "XmlRowReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String XML = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\\n<tests>\"\n\t\t\t+ \"  <test><k1>v11</k1><k2>v12</k2></test>  <test><k1>v21</k1><k2>v22</k2></test>\"\n\t\t\t+ \"  <test><k1>v31</k1><k2>v32</k2></test></tests>\";", "modifier": "private static final", "type": "String", "declarator": "XML = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\\n<tests>\"\n\t\t\t+ \"  <test><k1>v11</k1><k2>v12</k2></test>  <test><k1>v21</k1><k2>v22</k2></test>\"\n\t\t\t+ \"  <test><k1>v31</k1><k2>v32</k2></test></tests>\"", "var_name": "XML"}, {"original_string": "private XPathFactory xPathFactory;", "modifier": "private", "type": "XPathFactory", "declarator": "xPathFactory", "var_name": "xPathFactory"}, {"original_string": "private XmlRowReader xmlRowReader;", "modifier": "private", "type": "XmlRowReader", "declarator": "xmlRowReader", "var_name": "xmlRowReader"}, {"original_string": "private XmlRowAttribute[] attributes;", "modifier": "private", "type": "XmlRowAttribute[]", "declarator": "attributes", "var_name": "attributes"}, {"original_string": "private NodeList nodes;", "modifier": "private", "type": "NodeList", "declarator": "nodes", "var_name": "nodes"}], "file": "link-move/src/test/java/com/nhl/link/move/runtime/xml/XmlRowReaderTest.java"}, "test_case": {"identifier": "testIterator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testIterator() {\n\t\tIterator<Object[]> rowIterator = xmlRowReader.iterator();\n\t\tint i = 0;\n\n\t\twhile (rowIterator.hasNext()) {\n\t\t\ti++;\n\t\t\tObject[] row = rowIterator.next();\n\t\t\tassertEquals(\"v\" + i + \"1\", row[0]);\n\t\t\tassertEquals(\"v\" + i + \"2\", row[1]);\n\t\t}\n\n\t\tassertEquals(3, i);\n\t}", "signature": "void testIterator()", "full_signature": "@Test public void testIterator()", "class_method_signature": "XmlRowReaderTest.testIterator()", "testcase": true, "constructor": false, "invocations": ["iterator", "hasNext", "next", "assertEquals", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "XmlRowReader", "superclass": "", "interfaces": "implements RowReader", "fields": [{"original_string": "private final XmlRowAttribute[] header;", "modifier": "private final", "type": "XmlRowAttribute[]", "declarator": "header", "var_name": "header"}, {"original_string": "private final NodeList nodes;", "modifier": "private final", "type": "NodeList", "declarator": "nodes", "var_name": "nodes"}], "methods": [{"identifier": "XmlRowReader", "parameters": "(XmlRowAttribute[] header, NodeList nodes)", "modifiers": "public", "return": "", "signature": " XmlRowReader(XmlRowAttribute[] header, NodeList nodes)", "full_signature": "public  XmlRowReader(XmlRowAttribute[] header, NodeList nodes)", "class_method_signature": "XmlRowReader.XmlRowReader(XmlRowAttribute[] header, NodeList nodes)", "testcase": false, "constructor": true}, {"identifier": "getHeader", "parameters": "()", "modifiers": "@Override public", "return": "RowAttribute[]", "signature": "RowAttribute[] getHeader()", "full_signature": "@Override public RowAttribute[] getHeader()", "class_method_signature": "XmlRowReader.getHeader()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "XmlRowReader.close()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Object[]>", "signature": "Iterator<Object[]> iterator()", "full_signature": "@Override public Iterator<Object[]> iterator()", "class_method_signature": "XmlRowReader.iterator()", "testcase": false, "constructor": false}, {"identifier": "fromNode", "parameters": "(Node node)", "modifiers": "private", "return": "Object[]", "signature": "Object[] fromNode(Node node)", "full_signature": "private Object[] fromNode(Node node)", "class_method_signature": "XmlRowReader.fromNode(Node node)", "testcase": false, "constructor": false}, {"identifier": "valueFromNode", "parameters": "(XmlRowAttribute attribute, Node node)", "modifiers": "private", "return": "Object", "signature": "Object valueFromNode(XmlRowAttribute attribute, Node node)", "full_signature": "private Object valueFromNode(XmlRowAttribute attribute, Node node)", "class_method_signature": "XmlRowReader.valueFromNode(XmlRowAttribute attribute, Node node)", "testcase": false, "constructor": false}], "file": "link-move/src/main/java/com/nhl/link/move/runtime/xml/XmlRowReader.java"}, "focal_method": {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Object[]>", "body": "@Override\n    public Iterator<Object[]> iterator() {\n        return new Iterator<Object[]>() {\n            private int i = 0;\n\n            @Override\n            public boolean hasNext() {\n                return i < nodes.getLength();\n            }\n\n            @Override\n            public Object[] next() {\n                return fromNode(nodes.item(i++));\n            }\n\n            @Override\n            public void remove() {\n                throw new UnsupportedOperationException();\n            }\n        };\n    }", "signature": "Iterator<Object[]> iterator()", "full_signature": "@Override public Iterator<Object[]> iterator()", "class_method_signature": "XmlRowReader.iterator()", "testcase": false, "constructor": false, "invocations": ["getLength", "fromNode", "item"]}, "repository": {"repo_id": 22876447, "url": "https://github.com/nhl/link-move", "stars": 25, "created": "8/12/2014 12:27:10 PM +00:00", "updates": "2019-12-01T17:30:35+00:00", "fork": "False", "license": "licensed"}}