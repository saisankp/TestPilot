{"test_class": {"identifier": "TestAuthenticatedElement", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final BigInteger modulus = new BigInteger(\"251\");", "modifier": "private final", "type": "BigInteger", "declarator": "modulus = new BigInteger(\"251\")", "var_name": "modulus"}, {"original_string": "private final BigIntegerFieldDefinition definition = new BigIntegerFieldDefinition(modulus);", "modifier": "private final", "type": "BigIntegerFieldDefinition", "declarator": "definition = new BigIntegerFieldDefinition(modulus)", "var_name": "definition"}], "file": "tools/mascot/src/test/java/dk/alexandra/fresco/tools/mascot/field/TestAuthenticatedElement.java"}, "test_case": {"identifier": "testAddPublicFieldElement", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAddPublicFieldElement() {\n    FieldElement macKeyShare = definition.createElement(111);\n    AuthenticatedElement element = new AuthenticatedElement(\n        definition.createElement(2),\n        definition.createElement(222));\n    FieldElement publicElement = definition.createElement(44);\n    AuthenticatedElement actualPartyOne = element.add(definition,\n        publicElement, 1, macKeyShare);\n    AuthenticatedElement expectedPartyOne = new AuthenticatedElement(\n        definition.createElement(46),\n        definition.createElement(86));\n    AuthenticatedElement actualPartyTwo = element.add(definition,\n        publicElement, 2, macKeyShare);\n    AuthenticatedElement expectedPartyTwo = new AuthenticatedElement(\n        definition.createElement(2),\n        definition.createElement(86));\n    CustomAsserts.assertEquals(definition, actualPartyOne, expectedPartyOne);\n    CustomAsserts.assertEquals(definition, actualPartyTwo, expectedPartyTwo);\n  }", "signature": "void testAddPublicFieldElement()", "full_signature": "@Test public void testAddPublicFieldElement()", "class_method_signature": "TestAuthenticatedElement.testAddPublicFieldElement()", "testcase": true, "constructor": false, "invocations": ["createElement", "createElement", "createElement", "createElement", "add", "createElement", "createElement", "add", "createElement", "createElement", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "AuthenticatedElement", "superclass": "", "interfaces": "implements Addable<AuthenticatedElement>", "fields": [{"original_string": "private final FieldElement share;", "modifier": "private final", "type": "FieldElement", "declarator": "share", "var_name": "share"}, {"original_string": "private final FieldElement mac;", "modifier": "private final", "type": "FieldElement", "declarator": "mac", "var_name": "mac"}], "methods": [{"identifier": "AuthenticatedElement", "parameters": "(FieldElement share, FieldElement mac)", "modifiers": "public", "return": "", "signature": " AuthenticatedElement(FieldElement share, FieldElement mac)", "full_signature": "public  AuthenticatedElement(FieldElement share, FieldElement mac)", "class_method_signature": "AuthenticatedElement.AuthenticatedElement(FieldElement share, FieldElement mac)", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(AuthenticatedElement other)", "modifiers": "@Override public", "return": "AuthenticatedElement", "signature": "AuthenticatedElement add(AuthenticatedElement other)", "full_signature": "@Override public AuthenticatedElement add(AuthenticatedElement other)", "class_method_signature": "AuthenticatedElement.add(AuthenticatedElement other)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(\n      FieldDefinition fieldDefinition,\n      FieldElement other, int partyId, FieldElement macKeyShare)", "modifiers": "public", "return": "AuthenticatedElement", "signature": "AuthenticatedElement add(\n      FieldDefinition fieldDefinition,\n      FieldElement other, int partyId, FieldElement macKeyShare)", "full_signature": "public AuthenticatedElement add(\n      FieldDefinition fieldDefinition,\n      FieldElement other, int partyId, FieldElement macKeyShare)", "class_method_signature": "AuthenticatedElement.add(\n      FieldDefinition fieldDefinition,\n      FieldElement other, int partyId, FieldElement macKeyShare)", "testcase": false, "constructor": false}, {"identifier": "subtract", "parameters": "(AuthenticatedElement other)", "modifiers": "public", "return": "AuthenticatedElement", "signature": "AuthenticatedElement subtract(AuthenticatedElement other)", "full_signature": "public AuthenticatedElement subtract(AuthenticatedElement other)", "class_method_signature": "AuthenticatedElement.subtract(AuthenticatedElement other)", "testcase": false, "constructor": false}, {"identifier": "multiply", "parameters": "(FieldElement constant)", "modifiers": "public", "return": "AuthenticatedElement", "signature": "AuthenticatedElement multiply(FieldElement constant)", "full_signature": "public AuthenticatedElement multiply(FieldElement constant)", "class_method_signature": "AuthenticatedElement.multiply(FieldElement constant)", "testcase": false, "constructor": false}, {"identifier": "getMac", "parameters": "()", "modifiers": "public", "return": "FieldElement", "signature": "FieldElement getMac()", "full_signature": "public FieldElement getMac()", "class_method_signature": "AuthenticatedElement.getMac()", "testcase": false, "constructor": false}, {"identifier": "getShare", "parameters": "()", "modifiers": "public", "return": "FieldElement", "signature": "FieldElement getShare()", "full_signature": "public FieldElement getShare()", "class_method_signature": "AuthenticatedElement.getShare()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AuthenticatedElement.toString()", "testcase": false, "constructor": false}], "file": "tools/mascot/src/main/java/dk/alexandra/fresco/tools/mascot/field/AuthenticatedElement.java"}, "focal_method": {"identifier": "add", "parameters": "(AuthenticatedElement other)", "modifiers": "@Override public", "return": "AuthenticatedElement", "body": "@Override\n  public AuthenticatedElement add(AuthenticatedElement other) {\n    return new AuthenticatedElement(share.add(other.share), mac.add(other.mac));\n  }", "signature": "AuthenticatedElement add(AuthenticatedElement other)", "full_signature": "@Override public AuthenticatedElement add(AuthenticatedElement other)", "class_method_signature": "AuthenticatedElement.add(AuthenticatedElement other)", "testcase": false, "constructor": false, "invocations": ["add", "add"]}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}