{"test_class": {"identifier": "WakeOnLanServiceEndPointTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private WakeOnLanServiceEndPoint wakeOnLanServiceEndPoint;", "modifier": "@InjectMocks\n    private", "type": "WakeOnLanServiceEndPoint", "declarator": "wakeOnLanServiceEndPoint", "var_name": "wakeOnLanServiceEndPoint"}, {"original_string": "@Spy\n    private WakeOnLanHostService startHostService;", "modifier": "@Spy\n    private", "type": "WakeOnLanHostService", "declarator": "startHostService", "var_name": "startHostService"}], "file": "wakeonlan-service/src/test/java/br/com/autonomiccs/wakeonlan/controller/WakeOnLanServiceEndPointTest.java"}, "test_case": {"identifier": "consultarTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void consultarTest() {\n        String macTest = \"mac teste\";\n        String returnExpected = \"ok\";\n        Mockito.doReturn(returnExpected).when(startHostService).startHost(Mockito.anyString());\n\n        String returnOfCommand = wakeOnLanServiceEndPoint.startHost(macTest);\n\n        Assert.assertEquals(returnExpected, returnOfCommand);\n        Mockito.verify(startHostService).startHost(macTest);\n    }", "signature": "void consultarTest()", "full_signature": "@Test public void consultarTest()", "class_method_signature": "WakeOnLanServiceEndPointTest.consultarTest()", "testcase": true, "constructor": false, "invocations": ["startHost", "when", "doReturn", "anyString", "startHost", "assertEquals", "startHost", "verify"]}, "focal_class": {"identifier": "WakeOnLanServiceEndPoint", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private WakeOnLanHostService startHostService;", "modifier": "@Autowired\n    private", "type": "WakeOnLanHostService", "declarator": "startHostService", "var_name": "startHostService"}, {"original_string": "private final Logger logger = LoggerFactory.getLogger(this.getClass());", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(this.getClass())", "var_name": "logger"}], "methods": [{"identifier": "startHost", "parameters": "(@PathParam(\"mac\") String mac)", "modifiers": "@GET @Path(\"wakeonlan/{mac}\") public", "return": "String", "signature": "String startHost(@PathParam(\"mac\") String mac)", "full_signature": "@GET @Path(\"wakeonlan/{mac}\") public String startHost(@PathParam(\"mac\") String mac)", "class_method_signature": "WakeOnLanServiceEndPoint.startHost(@PathParam(\"mac\") String mac)", "testcase": false, "constructor": false}], "file": "wakeonlan-service/src/main/java/br/com/autonomiccs/wakeonlan/controller/WakeOnLanServiceEndPoint.java"}, "focal_method": {"identifier": "startHost", "parameters": "(@PathParam(\"mac\") String mac)", "modifiers": "@GET @Path(\"wakeonlan/{mac}\") public", "return": "String", "body": "@GET\n    @Path(\"wakeonlan/{mac}\")\n    public String startHost(@PathParam(\"mac\") String mac) {\n        logger.info(\"Waking up host: \" + mac);\n        return startHostService.startHost(mac);\n    }", "signature": "String startHost(@PathParam(\"mac\") String mac)", "full_signature": "@GET @Path(\"wakeonlan/{mac}\") public String startHost(@PathParam(\"mac\") String mac)", "class_method_signature": "WakeOnLanServiceEndPoint.startHost(@PathParam(\"mac\") String mac)", "testcase": false, "constructor": false, "invocations": ["info", "startHost"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}