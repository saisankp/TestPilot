{"test_class": {"identifier": "JvmAttributeGaugeSetTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final RuntimeMXBean runtime = mock(RuntimeMXBean.class);", "modifier": "private final", "type": "RuntimeMXBean", "declarator": "runtime = mock(RuntimeMXBean.class)", "var_name": "runtime"}, {"original_string": "private final JvmAttributeGaugeSet gauges = new JvmAttributeGaugeSet(runtime);", "modifier": "private final", "type": "JvmAttributeGaugeSet", "declarator": "gauges = new JvmAttributeGaugeSet(runtime)", "var_name": "gauges"}], "file": "metrics-jvm/src/test/java/com/codahale/metrics/jvm/JvmAttributeGaugeSetTest.java"}, "test_case": {"identifier": "hasAGaugeForTheJVMName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void hasAGaugeForTheJVMName() {\n        final Gauge<String> gauge = (Gauge<String>) gauges.getMetrics().get(\"name\");\n\n        assertThat(gauge.getValue())\n                .isEqualTo(\"9928@example.com\");\n    }", "signature": "void hasAGaugeForTheJVMName()", "full_signature": "@Test public void hasAGaugeForTheJVMName()", "class_method_signature": "JvmAttributeGaugeSetTest.hasAGaugeForTheJVMName()", "testcase": true, "constructor": false, "invocations": ["get", "getMetrics", "isEqualTo", "assertThat", "getValue"]}, "focal_class": {"identifier": "JvmAttributeGaugeSet", "superclass": "", "interfaces": "implements MetricSet", "fields": [{"original_string": "private final RuntimeMXBean runtime;", "modifier": "private final", "type": "RuntimeMXBean", "declarator": "runtime", "var_name": "runtime"}], "methods": [{"identifier": "JvmAttributeGaugeSet", "parameters": "()", "modifiers": "public", "return": "", "signature": " JvmAttributeGaugeSet()", "full_signature": "public  JvmAttributeGaugeSet()", "class_method_signature": "JvmAttributeGaugeSet.JvmAttributeGaugeSet()", "testcase": false, "constructor": true}, {"identifier": "JvmAttributeGaugeSet", "parameters": "(RuntimeMXBean runtime)", "modifiers": "public", "return": "", "signature": " JvmAttributeGaugeSet(RuntimeMXBean runtime)", "full_signature": "public  JvmAttributeGaugeSet(RuntimeMXBean runtime)", "class_method_signature": "JvmAttributeGaugeSet.JvmAttributeGaugeSet(RuntimeMXBean runtime)", "testcase": false, "constructor": true}, {"identifier": "getMetrics", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Metric>", "signature": "Map<String, Metric> getMetrics()", "full_signature": "@Override public Map<String, Metric> getMetrics()", "class_method_signature": "JvmAttributeGaugeSet.getMetrics()", "testcase": false, "constructor": false}], "file": "metrics-jvm/src/main/java/com/codahale/metrics/jvm/JvmAttributeGaugeSet.java"}, "focal_method": {"identifier": "getMetrics", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Metric>", "body": "@Override\n    public Map<String, Metric> getMetrics() {\n        final Map<String, Metric> gauges = new HashMap<>();\n\n        gauges.put(\"name\", (Gauge<String>) runtime::getName);\n        gauges.put(\"vendor\", (Gauge<String>) () -> String.format(Locale.US,\n                \"%s %s %s (%s)\",\n                runtime.getVmVendor(),\n                runtime.getVmName(),\n                runtime.getVmVersion(),\n                runtime.getSpecVersion()));\n        gauges.put(\"uptime\", (Gauge<Long>) runtime::getUptime);\n\n        return Collections.unmodifiableMap(gauges);\n    }", "signature": "Map<String, Metric> getMetrics()", "full_signature": "@Override public Map<String, Metric> getMetrics()", "class_method_signature": "JvmAttributeGaugeSet.getMetrics()", "testcase": false, "constructor": false, "invocations": ["put", "put", "format", "getVmVendor", "getVmName", "getVmVersion", "getSpecVersion", "put", "unmodifiableMap"]}, "repository": {"repo_id": 537800, "url": "https://github.com/dropwizard/metrics", "stars": 6879, "created": "2/26/2010 7:44:42 PM +00:00", "updates": "2020-01-26T22:33:14+00:00", "fork": "False", "license": "licensed"}}