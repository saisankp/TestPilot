{"test_class": {"identifier": "CCSManageSvImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String userId = UUIDTool.genId32();", "modifier": "private", "type": "String", "declarator": "userId = UUIDTool.genId32()", "var_name": "userId"}, {"original_string": "private String serviceId = UUIDTool.genId32();", "modifier": "private", "type": "String", "declarator": "serviceId = UUIDTool.genId32()", "var_name": "serviceId"}, {"original_string": "@Autowired\n    private ICCSManageSv manageSv;", "modifier": "@Autowired\n    private", "type": "ICCSManageSv", "declarator": "manageSv", "var_name": "manageSv"}, {"original_string": "@Autowired\n    private IConfigCenterServiceManageSv iConfigCenterServiceManageSv;", "modifier": "@Autowired\n    private", "type": "IConfigCenterServiceManageSv", "declarator": "iConfigCenterServiceManageSv", "var_name": "iConfigCenterServiceManageSv"}], "file": "iPaaS-CCS/src/test/java/com/ai/paas/ipaas/ccs/service/impl/CCSManageSvImplTest.java"}, "test_case": {"identifier": "testModify", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testModify() throws Exception {\n        CCSOperationParam ccsOperationParam = new CCSOperationParam();\n        ccsOperationParam.setUserId(userId);\n        ccsOperationParam.setServiceId(serviceId);\n        ccsOperationParam.setPath(\"/test/testPath\");\n        manageSv.modify(ccsOperationParam, \"modify Value1\");\n        assertTrue(manageSv.exists(ccsOperationParam));\n        assertEquals(\"modify Value1\", manageSv.get(ccsOperationParam));\n    }", "signature": "void testModify()", "full_signature": "@Test public void testModify()", "class_method_signature": "CCSManageSvImplTest.testModify()", "testcase": true, "constructor": false, "invocations": ["setUserId", "setServiceId", "setPath", "modify", "assertTrue", "exists", "assertEquals", "get"]}, "focal_class": {"identifier": "CCSManageSvImpl", "superclass": "", "interfaces": "implements ICCSManageSv", "fields": [{"original_string": "private Logger logger = Logger.getLogger(CCSManageSvImpl.class);", "modifier": "private", "type": "Logger", "declarator": "logger = Logger.getLogger(CCSManageSvImpl.class)", "var_name": "logger"}, {"original_string": "public static Map<String,String> result = new HashMap<String,String>();", "modifier": "public static", "type": "Map<String,String>", "declarator": "result = new HashMap<String,String>()", "var_name": "result"}], "methods": [{"identifier": "add", "parameters": "(CCSOperationParam param, String data)", "modifiers": "@Override public", "return": "void", "signature": "void add(CCSOperationParam param, String data)", "full_signature": "@Override public void add(CCSOperationParam param, String data)", "class_method_signature": "CCSManageSvImpl.add(CCSOperationParam param, String data)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(CCSOperationParam param, byte[] data)", "modifiers": "@Override public", "return": "void", "signature": "void add(CCSOperationParam param, byte[] data)", "full_signature": "@Override public void add(CCSOperationParam param, byte[] data)", "class_method_signature": "CCSManageSvImpl.add(CCSOperationParam param, byte[] data)", "testcase": false, "constructor": false}, {"identifier": "exists", "parameters": "(CCSOperationParam param)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean exists(CCSOperationParam param)", "full_signature": "@Override public boolean exists(CCSOperationParam param)", "class_method_signature": "CCSManageSvImpl.exists(CCSOperationParam param)", "testcase": false, "constructor": false}, {"identifier": "getCcsServiceUserConfig", "parameters": "(String userId, String serviceId)", "modifiers": "private", "return": "CcsServiceUserConfig", "signature": "CcsServiceUserConfig getCcsServiceUserConfig(String userId, String serviceId)", "full_signature": "private CcsServiceUserConfig getCcsServiceUserConfig(String userId, String serviceId)", "class_method_signature": "CCSManageSvImpl.getCcsServiceUserConfig(String userId, String serviceId)", "testcase": false, "constructor": false}, {"identifier": "modify", "parameters": "(CCSOperationParam param, String data)", "modifiers": "@Override public", "return": "void", "signature": "void modify(CCSOperationParam param, String data)", "full_signature": "@Override public void modify(CCSOperationParam param, String data)", "class_method_signature": "CCSManageSvImpl.modify(CCSOperationParam param, String data)", "testcase": false, "constructor": false}, {"identifier": "modify", "parameters": "(CCSOperationParam param, byte[] data)", "modifiers": "@Override public", "return": "void", "signature": "void modify(CCSOperationParam param, byte[] data)", "full_signature": "@Override public void modify(CCSOperationParam param, byte[] data)", "class_method_signature": "CCSManageSvImpl.modify(CCSOperationParam param, byte[] data)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(CCSOperationParam param)", "modifiers": "@Override public", "return": "String", "signature": "String get(CCSOperationParam param)", "full_signature": "@Override public String get(CCSOperationParam param)", "class_method_signature": "CCSManageSvImpl.get(CCSOperationParam param)", "testcase": false, "constructor": false}, {"identifier": "readBytes", "parameters": "(CCSOperationParam param)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] readBytes(CCSOperationParam param)", "full_signature": "@Override public byte[] readBytes(CCSOperationParam param)", "class_method_signature": "CCSManageSvImpl.readBytes(CCSOperationParam param)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(CCSOperationParam param)", "modifiers": "@Override public", "return": "void", "signature": "void delete(CCSOperationParam param)", "full_signature": "@Override public void delete(CCSOperationParam param)", "class_method_signature": "CCSManageSvImpl.delete(CCSOperationParam param)", "testcase": false, "constructor": false}, {"identifier": "listSubPath", "parameters": "(CCSOperationParam param)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listSubPath(CCSOperationParam param)", "full_signature": "@Override public List<String> listSubPath(CCSOperationParam param)", "class_method_signature": "CCSManageSvImpl.listSubPath(CCSOperationParam param)", "testcase": false, "constructor": false}, {"identifier": "listAllPath", "parameters": "(CCSOperationParam param)", "modifiers": "@Override public", "return": "Map<String,String>", "signature": "Map<String,String> listAllPath(CCSOperationParam param)", "full_signature": "@Override public Map<String,String> listAllPath(CCSOperationParam param)", "class_method_signature": "CCSManageSvImpl.listAllPath(CCSOperationParam param)", "testcase": false, "constructor": false}, {"identifier": "formatPath", "parameters": "(List<String> children,CCSOperationParam param)", "modifiers": "public", "return": "List<String>", "signature": "List<String> formatPath(List<String> children,CCSOperationParam param)", "full_signature": "public List<String> formatPath(List<String> children,CCSOperationParam param)", "class_method_signature": "CCSManageSvImpl.formatPath(List<String> children,CCSOperationParam param)", "testcase": false, "constructor": false}, {"identifier": "listSubPathAndData", "parameters": "(CCSOperationParam param)", "modifiers": "@Override public", "return": "List<CCSSubListDTO>", "signature": "List<CCSSubListDTO> listSubPathAndData(CCSOperationParam param)", "full_signature": "@Override public List<CCSSubListDTO> listSubPathAndData(CCSOperationParam param)", "class_method_signature": "CCSManageSvImpl.listSubPathAndData(CCSOperationParam param)", "testcase": false, "constructor": false}, {"identifier": "getServices", "parameters": "(CCSOperationParam param)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getServices(CCSOperationParam param)", "full_signature": "@Override public List<String> getServices(CCSOperationParam param)", "class_method_signature": "CCSManageSvImpl.getServices(CCSOperationParam param)", "testcase": false, "constructor": false}, {"identifier": "appendCustomUserRootNode", "parameters": "(String userId, String serviceId)", "modifiers": "private", "return": "String", "signature": "String appendCustomUserRootNode(String userId, String serviceId)", "full_signature": "private String appendCustomUserRootNode(String userId, String serviceId)", "class_method_signature": "CCSManageSvImpl.appendCustomUserRootNode(String userId, String serviceId)", "testcase": false, "constructor": false}, {"identifier": "getResult", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getResult()", "full_signature": "public Map<String, String> getResult()", "class_method_signature": "CCSManageSvImpl.getResult()", "testcase": false, "constructor": false}, {"identifier": "setResult", "parameters": "(Map<String, String> result)", "modifiers": "public", "return": "void", "signature": "void setResult(Map<String, String> result)", "full_signature": "public void setResult(Map<String, String> result)", "class_method_signature": "CCSManageSvImpl.setResult(Map<String, String> result)", "testcase": false, "constructor": false}], "file": "iPaaS-CCS/src/main/java/com/ai/paas/ipaas/ccs/service/impl/CCSManageSvImpl.java"}, "focal_method": {"identifier": "modify", "parameters": "(CCSOperationParam param, String data)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void modify(CCSOperationParam param, String data) throws PaasException {\n        byte[] value = null;\n        if (!StringUtil.isBlank(data)) {\n            try {\n                value = data.getBytes(PaaSConstant.CHARSET_UTF8);\n            } catch (UnsupportedEncodingException e) {\n            \tlogger.error(e.getMessage(),e);\n                throw new PaasException(ResourceUtil.getMessage(BundleKeyConstants.CONVERT_DATA_FAILED), e);\n            }\n        }\n        modify(param, value);\n    }", "signature": "void modify(CCSOperationParam param, String data)", "full_signature": "@Override public void modify(CCSOperationParam param, String data)", "class_method_signature": "CCSManageSvImpl.modify(CCSOperationParam param, String data)", "testcase": false, "constructor": false, "invocations": ["isBlank", "getBytes", "error", "getMessage", "getMessage", "modify"]}, "repository": {"repo_id": 55138951, "url": "https://github.com/AIPaaS/service-mgmt-backend", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 1116, "license": "licensed"}}