{"test_class": {"identifier": "TestTrailFilePositionSetter", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String MODULE = TestTrailFilePositionSetter.class.getName();", "modifier": "public static final", "type": "String", "declarator": "MODULE = TestTrailFilePositionSetter.class.getName()", "var_name": "MODULE"}, {"original_string": "public static final Logger LOG = Logger.getLogger(MODULE);", "modifier": "public static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(MODULE)", "var_name": "LOG"}, {"original_string": "private static final String TRAIL_FILENAME_PREFIX = \"x3\";", "modifier": "private static final", "type": "String", "declarator": "TRAIL_FILENAME_PREFIX = \"x3\"", "var_name": "TRAIL_FILENAME_PREFIX"}, {"original_string": "private static final String[] _txnPattern =\n    {\n      \"<transaction timestamp=\\\"2013-03-09:02:54:34.000000\\\">\",\n      \" <dbupdate table=\\\"TASKMGR.TASKCTL_JOBS_1\\\" type=\\\"update\\\">\",\n      \"   <columns>\",\n      \"     <column name=\\\"JOB_ID\\\" key=\\\"true\\\">1621745</column>\",\n      \"     <column name=\\\"GG_MODI_TS\\\">2013-03-09:02:54:33.996072000</column>\",\n      \"     <column name=\\\"GG_STATUS\\\">o</column>\",\n      \"   </columns>\",\n      \"   <tokens>\",\n      \"     <token name=\\\"TK-XID\\\">42.8.2681282</token>\",\n      \"     <token name=\\\"TK-CSN\\\">${SCN}</token>\",\n      \"   </tokens>\",\n      \" </dbupdate>\",\n      \" <dbupdate table=\\\"TASKMGR.TASKCTL_JOBS_2\\\" type=\\\"update\\\">\",\n      \"   <columns>\",\n      \"     <column name=\\\"JOB_ID\\\" key=\\\"true\\\">1621745</column>\",\n      \"     <column name=\\\"GG_MODI_TS\\\">2013-03-09:02:54:33.996072000</column>\",\n      \"     <column name=\\\"GG_STATUS\\\">o</column>\",\n      \"   </columns>\",\n      \"   <tokens>\",\n      \"     <token name=\\\"TK-XID\\\">42.8.2681283</token>\",\n      \"     <token name=\\\"TK-CSN\\\">${SCN}</token>\",\n      \"   </tokens>\",\n      \" </dbupdate>\",\n      \"</transaction>\"\n   };", "modifier": "private static final", "type": "String[]", "declarator": "_txnPattern =\n    {\n      \"<transaction timestamp=\\\"2013-03-09:02:54:34.000000\\\">\",\n      \" <dbupdate table=\\\"TASKMGR.TASKCTL_JOBS_1\\\" type=\\\"update\\\">\",\n      \"   <columns>\",\n      \"     <column name=\\\"JOB_ID\\\" key=\\\"true\\\">1621745</column>\",\n      \"     <column name=\\\"GG_MODI_TS\\\">2013-03-09:02:54:33.996072000</column>\",\n      \"     <column name=\\\"GG_STATUS\\\">o</column>\",\n      \"   </columns>\",\n      \"   <tokens>\",\n      \"     <token name=\\\"TK-XID\\\">42.8.2681282</token>\",\n      \"     <token name=\\\"TK-CSN\\\">${SCN}</token>\",\n      \"   </tokens>\",\n      \" </dbupdate>\",\n      \" <dbupdate table=\\\"TASKMGR.TASKCTL_JOBS_2\\\" type=\\\"update\\\">\",\n      \"   <columns>\",\n      \"     <column name=\\\"JOB_ID\\\" key=\\\"true\\\">1621745</column>\",\n      \"     <column name=\\\"GG_MODI_TS\\\">2013-03-09:02:54:33.996072000</column>\",\n      \"     <column name=\\\"GG_STATUS\\\">o</column>\",\n      \"   </columns>\",\n      \"   <tokens>\",\n      \"     <token name=\\\"TK-XID\\\">42.8.2681283</token>\",\n      \"     <token name=\\\"TK-CSN\\\">${SCN}</token>\",\n      \"   </tokens>\",\n      \" </dbupdate>\",\n      \"</transaction>\"\n   }", "var_name": "_txnPattern"}, {"original_string": "private static final String DONE_STRING =\n      \"done\\n----------------------------------------------------------------------------\\n\";", "modifier": "private static final", "type": "String", "declarator": "DONE_STRING =\n      \"done\\n----------------------------------------------------------------------------\\n\"", "var_name": "DONE_STRING"}, {"original_string": "private ArrayList<File> _dirsToDelete = new ArrayList<File>(100);", "modifier": "private", "type": "ArrayList<File>", "declarator": "_dirsToDelete = new ArrayList<File>(100)", "var_name": "_dirsToDelete"}], "file": "databus2-relay/databus2-relay-impl/src/test/java/com/linkedin/databus/core/TestTrailFilePositionSetter.java"}, "test_case": {"identifier": "testScnPositionSetter2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testScnPositionSetter2()\n    throws Exception\n  {\n    final Logger log = Logger.getLogger(\"TestTrailFilePositionSetter.testScnPositionSetter2\");\n    log.info(\"starting\");\n\n    String[] newLines = { \"\\r\", \"\\n\", \"\\r\\n\" };\n\n    for (String newLine : newLines)\n    {\n      // Iterate by Number of Tags per line\n      for (int j = 10; j < 32; j++ )\n      {\n        log.info(\"NumPerLine: \" + j);\n        File dir = createTempDir();\n        createTrailFiles(dir.getAbsolutePath(), TRAIL_FILENAME_PREFIX,100, 200,j,newLine,0, -1, \"\", false, \"\");\n        log.info(\"Directory is: \" + dir);\n\n        TrailFilePositionSetter posSetter = null;\n        //GoldenGateTransactionSCNFinder finder = new GoldenGateTransactionSCNFinder();\n        GGXMLTrailTransactionFinder finder = new GGXMLTrailTransactionFinder();\n\n        //less than minScn\n        log.info(\"less than MinScn case started !!\");\n        for (long i = 0 ; i < 100 ; i ++)\n        {\n          if ( true )break;\n          posSetter = new TrailFilePositionSetter(dir.getAbsolutePath(), TRAIL_FILENAME_PREFIX);\n          //finder = new GoldenGateTransactionSCNFinder();\n          finder = new GGXMLTrailTransactionFinder();\n\n          FilePositionResult res = posSetter.getFilePosition(i,finder);\n          Assert.assertEquals(res.getStatus(),FilePositionResult.Status.ERROR,\"Result Status\");\n        }\n\n        log.info(\"less than MinScn case passed !!\");\n\n\n        //Found Case\n        for (long i = 100 ; i < 300 ; i ++)\n        {\n          posSetter = new TrailFilePositionSetter(dir.getAbsolutePath(), TRAIL_FILENAME_PREFIX);\n          finder = new GGXMLTrailTransactionFinder();\n\n          log.info(\"SCN:  \" + i);\n          FilePositionResult res = posSetter.getFilePosition(i,finder);\n          log.info(\"For scn (\" + i + \"):  the result is:  \"  + res);\n          if (i%2 == 0)\n            assertFilePositionResult(res,dir,i+1,FilePositionResult.Status.EXACT_SCN_NOT_FOUND);\n          else\n            assertFilePositionResult(res,dir,i,FilePositionResult.Status.FOUND);\n\n        }\n\n        //Found Case\n        FilePositionResult res = null;\n        for (long i = 300 ; i < 320 ; i ++)\n        {\n          posSetter = new TrailFilePositionSetter(dir.getAbsolutePath(), TRAIL_FILENAME_PREFIX);\n          //finder = new GoldenGateTransactionSCNFinder();\n          finder = new GGXMLTrailTransactionFinder();\n\n          res = posSetter.getFilePosition(i,finder);\n          //log.info(\"For scn (\" + i + \"):  the result is:  \"  + res);\n          assertFilePositionResult(res,dir,299,FilePositionResult.Status.EXACT_SCN_NOT_FOUND);\n        }\n\n        // USE Latest SCN (-1)\n        posSetter = new TrailFilePositionSetter(dir.getAbsolutePath(), TRAIL_FILENAME_PREFIX);\n        //finder = new GoldenGateTransactionSCNFinder();\n        finder = new GGXMLTrailTransactionFinder();\n\n        res = posSetter.getFilePosition(-1,finder);\n        //log.info(\"For scn (\" + i + \"):  the result is:  \"  + res);\n        assertFilePositionResult(res,dir,299,FilePositionResult.Status.FOUND);\n      }\n    }\n\n    log.info(DONE_STRING);\n  }", "signature": "void testScnPositionSetter2()", "full_signature": "@Test public void testScnPositionSetter2()", "class_method_signature": "TestTrailFilePositionSetter.testScnPositionSetter2()", "testcase": true, "constructor": false, "invocations": ["getLogger", "info", "info", "createTempDir", "createTrailFiles", "getAbsolutePath", "info", "info", "getAbsolutePath", "getFilePosition", "assertEquals", "getStatus", "info", "getAbsolutePath", "info", "getFilePosition", "info", "assertFilePositionResult", "assertFilePositionResult", "getAbsolutePath", "getFilePosition", "assertFilePositionResult", "getAbsolutePath", "getFilePosition", "assertFilePositionResult", "info"]}, "focal_class": {"identifier": "TrailFilePositionSetter", "superclass": "", "interfaces": "", "fields": [{"original_string": "public Logger _log;", "modifier": "public", "type": "Logger", "declarator": "_log", "var_name": "_log"}, {"original_string": "public static final long USE_LATEST_SCN  = -1;", "modifier": "public static final", "type": "long", "declarator": "USE_LATEST_SCN  = -1", "var_name": "USE_LATEST_SCN"}, {"original_string": "public static final long USE_EARLIEST_SCN = -2;", "modifier": "public static final", "type": "long", "declarator": "USE_EARLIEST_SCN = -2", "var_name": "USE_EARLIEST_SCN"}, {"original_string": "private final File _dir;", "modifier": "private final", "type": "File", "declarator": "_dir", "var_name": "_dir"}, {"original_string": "private final String _filePrefix;", "modifier": "private final", "type": "String", "declarator": "_filePrefix", "var_name": "_filePrefix"}, {"original_string": "private final FileFilter _filter;", "modifier": "private final", "type": "FileFilter", "declarator": "_filter", "var_name": "_filter"}, {"original_string": "private String _phySourceName;", "modifier": "private", "type": "String", "declarator": "_phySourceName", "var_name": "_phySourceName"}, {"original_string": "public static final String NEW_LINE_PATTERN_STR = \"\\r?\\n|\\r\";", "modifier": "public static final", "type": "String", "declarator": "NEW_LINE_PATTERN_STR = \"\\r?\\n|\\r\"", "var_name": "NEW_LINE_PATTERN_STR"}, {"original_string": "public static final String DOUBLE_CHAR_NEWLINE = \"\\r\\n\";", "modifier": "public static final", "type": "String", "declarator": "DOUBLE_CHAR_NEWLINE = \"\\r\\n\"", "var_name": "DOUBLE_CHAR_NEWLINE"}, {"original_string": "public static final int NO_NEWLINE_LEN = -1;", "modifier": "public static final", "type": "int", "declarator": "NO_NEWLINE_LEN = -1", "var_name": "NO_NEWLINE_LEN"}], "methods": [{"identifier": "TrailFilePositionSetter", "parameters": "(String dir, String filePrefix)", "modifiers": "public", "return": "", "signature": " TrailFilePositionSetter(String dir, String filePrefix)", "full_signature": "public  TrailFilePositionSetter(String dir, String filePrefix)", "class_method_signature": "TrailFilePositionSetter.TrailFilePositionSetter(String dir, String filePrefix)", "testcase": false, "constructor": true}, {"identifier": "TrailFilePositionSetter", "parameters": "(String dir, String filePrefix, String phySourceName)", "modifiers": "public", "return": "", "signature": " TrailFilePositionSetter(String dir, String filePrefix, String phySourceName)", "full_signature": "public  TrailFilePositionSetter(String dir, String filePrefix, String phySourceName)", "class_method_signature": "TrailFilePositionSetter.TrailFilePositionSetter(String dir, String filePrefix, String phySourceName)", "testcase": false, "constructor": true}, {"identifier": "validateDir", "parameters": "(String dir)", "modifiers": "private static", "return": "void", "signature": "void validateDir(String dir)", "full_signature": "private static void validateDir(String dir)", "class_method_signature": "TrailFilePositionSetter.validateDir(String dir)", "testcase": false, "constructor": false}, {"identifier": "locateFilePosition", "parameters": "(long scn, TransactionSCNFinderCallback callback)", "modifiers": "public synchronized", "return": "FilePositionResult", "signature": "FilePositionResult locateFilePosition(long scn, TransactionSCNFinderCallback callback)", "full_signature": "public synchronized FilePositionResult locateFilePosition(long scn, TransactionSCNFinderCallback callback)", "class_method_signature": "TrailFilePositionSetter.locateFilePosition(long scn, TransactionSCNFinderCallback callback)", "testcase": false, "constructor": false}, {"identifier": "getFilePosition", "parameters": "(long scn, TransactionSCNFinderCallback callback)", "modifiers": "protected synchronized", "return": "FilePositionResult", "signature": "FilePositionResult getFilePosition(long scn, TransactionSCNFinderCallback callback)", "full_signature": "protected synchronized FilePositionResult getFilePosition(long scn, TransactionSCNFinderCallback callback)", "class_method_signature": "TrailFilePositionSetter.getFilePosition(long scn, TransactionSCNFinderCallback callback)", "testcase": false, "constructor": false}, {"identifier": "getFilePosition", "parameters": "(long scn, TransactionSCNFinderCallback callback, String startFile)", "modifiers": "protected synchronized", "return": "FilePositionResult", "signature": "FilePositionResult getFilePosition(long scn, TransactionSCNFinderCallback callback, String startFile)", "full_signature": "protected synchronized FilePositionResult getFilePosition(long scn, TransactionSCNFinderCallback callback, String startFile)", "class_method_signature": "TrailFilePositionSetter.getFilePosition(long scn, TransactionSCNFinderCallback callback, String startFile)", "testcase": false, "constructor": false}, {"identifier": "findTxnScn", "parameters": "(ConcurrentAppendableCompositeFileInputStream stream,\n          long expScn,\n          TransactionSCNFinderCallback callback)", "modifiers": "private", "return": "FilePositionResult", "signature": "FilePositionResult findTxnScn(ConcurrentAppendableCompositeFileInputStream stream,\n          long expScn,\n          TransactionSCNFinderCallback callback)", "full_signature": "private FilePositionResult findTxnScn(ConcurrentAppendableCompositeFileInputStream stream,\n          long expScn,\n          TransactionSCNFinderCallback callback)", "class_method_signature": "TrailFilePositionSetter.findTxnScn(ConcurrentAppendableCompositeFileInputStream stream,\n          long expScn,\n          TransactionSCNFinderCallback callback)", "testcase": false, "constructor": false}, {"identifier": "splitBytesByNewLines", "parameters": "(byte[] buf,\n                                               int numBytes,\n                                               boolean spanFile,\n                                               int endOffset,\n                                               String prevLine,\n                                               List<String> lines,\n                                               List<Integer> lineEndPos)", "modifiers": "protected static", "return": "String", "signature": "String splitBytesByNewLines(byte[] buf,\n                                               int numBytes,\n                                               boolean spanFile,\n                                               int endOffset,\n                                               String prevLine,\n                                               List<String> lines,\n                                               List<Integer> lineEndPos)", "full_signature": "protected static String splitBytesByNewLines(byte[] buf,\n                                               int numBytes,\n                                               boolean spanFile,\n                                               int endOffset,\n                                               String prevLine,\n                                               List<String> lines,\n                                               List<Integer> lineEndPos)", "class_method_signature": "TrailFilePositionSetter.splitBytesByNewLines(byte[] buf,\n                                               int numBytes,\n                                               boolean spanFile,\n                                               int endOffset,\n                                               String prevLine,\n                                               List<String> lines,\n                                               List<Integer> lineEndPos)", "testcase": false, "constructor": false}], "file": "databus2-relay/databus2-relay-impl/src/main/java/com/linkedin/databus/core/TrailFilePositionSetter.java"}, "focal_method": {"identifier": "getFilePosition", "parameters": "(long scn, TransactionSCNFinderCallback callback)", "modifiers": "protected synchronized", "return": "FilePositionResult", "body": "protected synchronized FilePositionResult getFilePosition(long scn, TransactionSCNFinderCallback callback)\n    throws IOException\n  {\n    return getFilePosition(scn,callback,null);\n  }", "signature": "FilePositionResult getFilePosition(long scn, TransactionSCNFinderCallback callback)", "full_signature": "protected synchronized FilePositionResult getFilePosition(long scn, TransactionSCNFinderCallback callback)", "class_method_signature": "TrailFilePositionSetter.getFilePosition(long scn, TransactionSCNFinderCallback callback)", "testcase": false, "constructor": false, "invocations": ["getFilePosition"]}, "repository": {"repo_id": 7209229, "url": "https://github.com/linkedin/databus", "language": "Java", "is_fork": false, "fork_count": 653, "stargazer_count": 2899, "size": 51191, "license": "licensed"}}