{"test_class": {"identifier": "AutonomiccsSystemVirtualMachinesTemplateRegisterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Spy\n    @InjectMocks\n    private AutonomiccsSystemVirtualMachinesTemplateRegister spy;", "modifier": "@Spy\n    @InjectMocks\n    private", "type": "AutonomiccsSystemVirtualMachinesTemplateRegister", "declarator": "spy", "var_name": "spy"}, {"original_string": "@Mock\n    private TemplateApiService templateService;", "modifier": "@Mock\n    private", "type": "TemplateApiService", "declarator": "templateService", "var_name": "templateService"}, {"original_string": "@Mock\n    private GuestOsService guestOsService;", "modifier": "@Mock\n    private", "type": "GuestOsService", "declarator": "guestOsService", "var_name": "guestOsService"}, {"original_string": "@Mock\n    private HostService hostService;", "modifier": "@Mock\n    private", "type": "HostService", "declarator": "hostService", "var_name": "hostService"}, {"original_string": "@Mock\n    private AutonomiccsSystemVmTemplateService autonomiccsSystemVmTemplateService;", "modifier": "@Mock\n    private", "type": "AutonomiccsSystemVmTemplateService", "declarator": "autonomiccsSystemVmTemplateService", "var_name": "autonomiccsSystemVmTemplateService"}, {"original_string": "@Mock\n    private AutonomicClusterManagementHeuristicService autonomicManagementHeuristicService;", "modifier": "@Mock\n    private", "type": "AutonomicClusterManagementHeuristicService", "declarator": "autonomicManagementHeuristicService", "var_name": "autonomicManagementHeuristicService"}, {"original_string": "@Mock\n    private AccountService accountService;", "modifier": "@Mock\n    private", "type": "AccountService", "declarator": "accountService", "var_name": "accountService"}, {"original_string": "@Mock\n    private ReflectionUtils reflectionUtils;", "modifier": "@Mock\n    private", "type": "ReflectionUtils", "declarator": "reflectionUtils", "var_name": "reflectionUtils"}, {"original_string": "private final Long allAvailableZoneMagicNumber = -1L;", "modifier": "private final", "type": "Long", "declarator": "allAvailableZoneMagicNumber = -1L", "var_name": "allAvailableZoneMagicNumber"}, {"original_string": "private final Long systemAccountDomainId = 1L;", "modifier": "private final", "type": "Long", "declarator": "systemAccountDomainId = 1L", "var_name": "systemAccountDomainId"}, {"original_string": "private String guestOsName = \"Debian GNU/Linux 7(64-bit)\";", "modifier": "private", "type": "String", "declarator": "guestOsName = \"Debian GNU/Linux 7(64-bit)\"", "var_name": "guestOsName"}], "file": "autonomic-plugin-common/src/test/java/br/com/autonomiccs/autonomic/plugin/common/template/AutonomiccsSystemVirtualMachinesTemplateRegisterTest.java"}, "test_case": {"identifier": "createRegisterTemplateCommandForHypervisorTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createRegisterTemplateCommandForHypervisorTest() {\n        Map<Object, Object> details = new HashMap<>();\n        Mockito.doReturn(\"return\").when(autonomiccsSystemVmTemplateService).getAutonomiccsSystemVmTemplateDisplayText(Mockito.any(HypervisorType.class));\n        Mockito.doNothing().when(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"displayText\"), Mockito.anyString());\n        Mockito.doReturn(\"return\").when(spy).getSupportedImageFormat(Mockito.any(HypervisorType.class));\n        Mockito.doNothing().when(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"format\"), Mockito.anyString());\n        Mockito.doNothing().when(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"hypervisor\"), Mockito.eq(\"Any\"));\n        Mockito.doReturn(\"return\").when(autonomiccsSystemVmTemplateService).getAutonomiccsSystemVmTemplateName(Mockito.any(HypervisorType.class));\n        Mockito.doNothing().when(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"templateName\"), Mockito.anyString());\n        Mockito.doReturn(0l).when(guestOsService).getGuestOsUuid(Mockito.anyString());\n        Mockito.doNothing().when(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"osTypeId\"), Mockito.anyLong());\n        Mockito.doNothing().when(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"zoneId\"), Mockito.eq(allAvailableZoneMagicNumber));\n        Mockito.doReturn(\"return\").when(autonomiccsSystemVmTemplateService).getSystemVmTemplateUrl(Mockito.any(HypervisorType.class));\n        Mockito.doNothing().when(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"url\"), Mockito.anyString());\n        Mockito.doNothing().when(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"accountName\"), Mockito.eq(\"system\"));\n        Mockito.doNothing().when(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"domainId\"), Mockito.eq(systemAccountDomainId));\n        Mockito.doNothing().when(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"projectId\"), Mockito.eq(null));\n        Mockito.doNothing().when(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"requiresHvm\"), Mockito.eq(false));\n        Mockito.doReturn(details).when(spy).createTemplateDetails();\n        Mockito.doNothing().when(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"details\"), Matchers.<Map<Object, Object>> any());\n        Mockito.doNothing().when(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"_accountService\"), Mockito.eq(accountService));\n\n        spy.createRegisterTemplateCommandForHypervisor(HypervisorType.Any);\n\n        Mockito.verify(autonomiccsSystemVmTemplateService).getAutonomiccsSystemVmTemplateDisplayText(Mockito.any(HypervisorType.class));\n        Mockito.verify(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"displayText\"), Mockito.anyString());\n        Mockito.verify(spy).getSupportedImageFormat(Mockito.any(HypervisorType.class));\n        Mockito.verify(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"format\"), Mockito.anyString());\n        Mockito.verify(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"hypervisor\"), Mockito.eq(\"Any\"));\n        Mockito.verify(autonomiccsSystemVmTemplateService).getAutonomiccsSystemVmTemplateName(Mockito.any(HypervisorType.class));\n        Mockito.verify(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"templateName\"), Mockito.anyString());\n        Mockito.verify(guestOsService).getGuestOsUuid(Mockito.eq(guestOsName));\n        Mockito.verify(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"osTypeId\"), Mockito.anyLong());\n        Mockito.verify(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"zoneId\"), Mockito.eq(allAvailableZoneMagicNumber));\n        Mockito.verify(autonomiccsSystemVmTemplateService).getSystemVmTemplateUrl(Mockito.any(HypervisorType.class));\n        Mockito.verify(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"url\"), Mockito.anyString());\n        Mockito.verify(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"accountName\"), Mockito.eq(\"system\"));\n        Mockito.verify(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"domainId\"), Mockito.eq(systemAccountDomainId));\n        Mockito.verify(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"projectId\"), Mockito.eq(null));\n        Mockito.verify(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"requiresHvm\"), Mockito.eq(false));\n        Mockito.verify(spy).createTemplateDetails();\n        Mockito.verify(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"details\"), Matchers.<Map<Object, Object>> any());\n        Mockito.verify(reflectionUtils).setFieldIntoObject(Mockito.any(RegisterTemplateCmd.class), Mockito.eq(\"_accountService\"), Mockito.eq(accountService));\n    }", "signature": "void createRegisterTemplateCommandForHypervisorTest()", "full_signature": "@Test public void createRegisterTemplateCommandForHypervisorTest()", "class_method_signature": "AutonomiccsSystemVirtualMachinesTemplateRegisterTest.createRegisterTemplateCommandForHypervisorTest()", "testcase": true, "constructor": false, "invocations": ["getAutonomiccsSystemVmTemplateDisplayText", "when", "doReturn", "any", "setFieldIntoObject", "when", "doNothing", "any", "eq", "anyString", "getSupportedImageFormat", "when", "doReturn", "any", "setFieldIntoObject", "when", "doNothing", "any", "eq", "anyString", "setFieldIntoObject", "when", "doNothing", "any", "eq", "eq", "getAutonomiccsSystemVmTemplateName", "when", "doReturn", "any", "setFieldIntoObject", "when", "doNothing", "any", "eq", "anyString", "getGuestOsUuid", "when", "doReturn", "anyString", "setFieldIntoObject", "when", "doNothing", "any", "eq", "anyLong", "setFieldIntoObject", "when", "doNothing", "any", "eq", "eq", "getSystemVmTemplateUrl", "when", "doReturn", "any", "setFieldIntoObject", "when", "doNothing", "any", "eq", "anyString", "setFieldIntoObject", "when", "doNothing", "any", "eq", "eq", "setFieldIntoObject", "when", "doNothing", "any", "eq", "eq", "setFieldIntoObject", "when", "doNothing", "any", "eq", "eq", "setFieldIntoObject", "when", "doNothing", "any", "eq", "eq", "createTemplateDetails", "when", "doReturn", "setFieldIntoObject", "when", "doNothing", "any", "eq", "any", "setFieldIntoObject", "when", "doNothing", "any", "eq", "eq", "createRegisterTemplateCommandForHypervisor", "getAutonomiccsSystemVmTemplateDisplayText", "verify", "any", "setFieldIntoObject", "verify", "any", "eq", "anyString", "getSupportedImageFormat", "verify", "any", "setFieldIntoObject", "verify", "any", "eq", "anyString", "setFieldIntoObject", "verify", "any", "eq", "eq", "getAutonomiccsSystemVmTemplateName", "verify", "any", "setFieldIntoObject", "verify", "any", "eq", "anyString", "getGuestOsUuid", "verify", "eq", "setFieldIntoObject", "verify", "any", "eq", "anyLong", "setFieldIntoObject", "verify", "any", "eq", "eq", "getSystemVmTemplateUrl", "verify", "any", "setFieldIntoObject", "verify", "any", "eq", "anyString", "setFieldIntoObject", "verify", "any", "eq", "eq", "setFieldIntoObject", "verify", "any", "eq", "eq", "setFieldIntoObject", "verify", "any", "eq", "eq", "setFieldIntoObject", "verify", "any", "eq", "eq", "createTemplateDetails", "verify", "setFieldIntoObject", "verify", "any", "eq", "any", "setFieldIntoObject", "verify", "any", "eq", "eq"]}, "focal_class": {"identifier": "AutonomiccsSystemVirtualMachinesTemplateRegister", "superclass": "", "interfaces": "implements InitializingBean", "fields": [{"original_string": "protected Logger logger = LoggerFactory.getLogger(getClass());", "modifier": "protected", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(getClass())", "var_name": "logger"}, {"original_string": "private static final long ONE_MINUTE_IN_MILLISECONDS = 60000;", "modifier": "private static final", "type": "long", "declarator": "ONE_MINUTE_IN_MILLISECONDS = 60000", "var_name": "ONE_MINUTE_IN_MILLISECONDS"}, {"original_string": "private static final int NUMBER_OF_MINUTES_BETWEEN_REGISTRATION_OF_TEMPLATES = 10;", "modifier": "private static final", "type": "int", "declarator": "NUMBER_OF_MINUTES_BETWEEN_REGISTRATION_OF_TEMPLATES = 10", "var_name": "NUMBER_OF_MINUTES_BETWEEN_REGISTRATION_OF_TEMPLATES"}, {"original_string": "@Autowired\n    private TemplateApiService templateService;", "modifier": "@Autowired\n    private", "type": "TemplateApiService", "declarator": "templateService", "var_name": "templateService"}, {"original_string": "@Autowired\n    private GuestOsService guestOsService;", "modifier": "@Autowired\n    private", "type": "GuestOsService", "declarator": "guestOsService", "var_name": "guestOsService"}, {"original_string": "@Autowired\n    private HostService hostService;", "modifier": "@Autowired\n    private", "type": "HostService", "declarator": "hostService", "var_name": "hostService"}, {"original_string": "@Autowired\n    private AutonomiccsSystemVmTemplateService autonomiccsSystemVmTemplateService;", "modifier": "@Autowired\n    private", "type": "AutonomiccsSystemVmTemplateService", "declarator": "autonomiccsSystemVmTemplateService", "var_name": "autonomiccsSystemVmTemplateService"}, {"original_string": "@Autowired\n    private AutonomicClusterManagementHeuristicService autonomicManagementHeuristicService;", "modifier": "@Autowired\n    private", "type": "AutonomicClusterManagementHeuristicService", "declarator": "autonomicManagementHeuristicService", "var_name": "autonomicManagementHeuristicService"}, {"original_string": "@Autowired\n    private AccountService accountService;", "modifier": "@Autowired\n    private", "type": "AccountService", "declarator": "accountService", "var_name": "accountService"}, {"original_string": "@Autowired\n    private ReflectionUtils reflectionUtils;", "modifier": "@Autowired\n    private", "type": "ReflectionUtils", "declarator": "reflectionUtils", "var_name": "reflectionUtils"}, {"original_string": "private final Long allAvailableZoneMagicNumber = -1L;", "modifier": "private final", "type": "Long", "declarator": "allAvailableZoneMagicNumber = -1L", "var_name": "allAvailableZoneMagicNumber"}, {"original_string": "private final Long systemAccountDomainId = 1L;", "modifier": "private final", "type": "Long", "declarator": "systemAccountDomainId = 1L", "var_name": "systemAccountDomainId"}, {"original_string": "private String guestOsName = \"Debian GNU/Linux 7(64-bit)\";", "modifier": "private", "type": "String", "declarator": "guestOsName = \"Debian GNU/Linux 7(64-bit)\"", "var_name": "guestOsName"}], "methods": [{"identifier": "registerTemplatesIfNeeded", "parameters": "()", "modifiers": "@Scheduled(initialDelay = ONE_MINUTE_IN_MILLISECONDS, fixedDelay = ONE_MINUTE_IN_MILLISECONDS * NUMBER_OF_MINUTES_BETWEEN_REGISTRATION_OF_TEMPLATES) public", "return": "void", "signature": "void registerTemplatesIfNeeded()", "full_signature": "@Scheduled(initialDelay = ONE_MINUTE_IN_MILLISECONDS, fixedDelay = ONE_MINUTE_IN_MILLISECONDS * NUMBER_OF_MINUTES_BETWEEN_REGISTRATION_OF_TEMPLATES) public void registerTemplatesIfNeeded()", "class_method_signature": "AutonomiccsSystemVirtualMachinesTemplateRegister.registerTemplatesIfNeeded()", "testcase": false, "constructor": false}, {"identifier": "createRegisterTemplateCommandForHypervisor", "parameters": "(HypervisorType hypervisor)", "modifiers": "protected", "return": "RegisterTemplateCmd", "signature": "RegisterTemplateCmd createRegisterTemplateCommandForHypervisor(HypervisorType hypervisor)", "full_signature": "protected RegisterTemplateCmd createRegisterTemplateCommandForHypervisor(HypervisorType hypervisor)", "class_method_signature": "AutonomiccsSystemVirtualMachinesTemplateRegister.createRegisterTemplateCommandForHypervisor(HypervisorType hypervisor)", "testcase": false, "constructor": false}, {"identifier": "createTemplateDetails", "parameters": "()", "modifiers": "protected", "return": "Map<Object, Object>", "signature": "Map<Object, Object> createTemplateDetails()", "full_signature": "protected Map<Object, Object> createTemplateDetails()", "class_method_signature": "AutonomiccsSystemVirtualMachinesTemplateRegister.createTemplateDetails()", "testcase": false, "constructor": false}, {"identifier": "getSupportedImageFormat", "parameters": "(HypervisorType hypervisor)", "modifiers": "protected", "return": "String", "signature": "String getSupportedImageFormat(HypervisorType hypervisor)", "full_signature": "protected String getSupportedImageFormat(HypervisorType hypervisor)", "class_method_signature": "AutonomiccsSystemVirtualMachinesTemplateRegister.getSupportedImageFormat(HypervisorType hypervisor)", "testcase": false, "constructor": false}, {"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void afterPropertiesSet()", "full_signature": "@Override public void afterPropertiesSet()", "class_method_signature": "AutonomiccsSystemVirtualMachinesTemplateRegister.afterPropertiesSet()", "testcase": false, "constructor": false}], "file": "autonomic-plugin-common/src/main/java/br/com/autonomiccs/autonomic/plugin/common/template/AutonomiccsSystemVirtualMachinesTemplateRegister.java"}, "focal_method": {"identifier": "createRegisterTemplateCommandForHypervisor", "parameters": "(HypervisorType hypervisor)", "modifiers": "protected", "return": "RegisterTemplateCmd", "body": "protected RegisterTemplateCmd createRegisterTemplateCommandForHypervisor(HypervisorType hypervisor) {\n        RegisterTemplateCmd registerTemplateCmd = new RegisterTemplateCmd();\n        reflectionUtils.setFieldIntoObject(registerTemplateCmd, \"displayText\", autonomiccsSystemVmTemplateService.getAutonomiccsSystemVmTemplateDisplayText(hypervisor));\n        reflectionUtils.setFieldIntoObject(registerTemplateCmd, \"format\", getSupportedImageFormat(hypervisor));\n        reflectionUtils.setFieldIntoObject(registerTemplateCmd, \"hypervisor\", hypervisor.name());\n        reflectionUtils.setFieldIntoObject(registerTemplateCmd, \"templateName\", autonomiccsSystemVmTemplateService.getAutonomiccsSystemVmTemplateName(hypervisor));\n        reflectionUtils.setFieldIntoObject(registerTemplateCmd, \"osTypeId\", guestOsService.getGuestOsUuid(guestOsName));\n        reflectionUtils.setFieldIntoObject(registerTemplateCmd, \"zoneId\", allAvailableZoneMagicNumber);\n        reflectionUtils.setFieldIntoObject(registerTemplateCmd, \"url\", autonomiccsSystemVmTemplateService.getSystemVmTemplateUrl(hypervisor));\n        reflectionUtils.setFieldIntoObject(registerTemplateCmd, \"accountName\", \"system\");\n        reflectionUtils.setFieldIntoObject(registerTemplateCmd, \"domainId\", systemAccountDomainId);\n        reflectionUtils.setFieldIntoObject(registerTemplateCmd, \"projectId\", null);\n        reflectionUtils.setFieldIntoObject(registerTemplateCmd, \"requiresHvm\", false);\n        Map<Object, Object> details = createTemplateDetails();\n        reflectionUtils.setFieldIntoObject(registerTemplateCmd, \"details\", details);\n        reflectionUtils.setFieldIntoObject(registerTemplateCmd, \"_accountService\", accountService);\n        return registerTemplateCmd;\n\n    }", "signature": "RegisterTemplateCmd createRegisterTemplateCommandForHypervisor(HypervisorType hypervisor)", "full_signature": "protected RegisterTemplateCmd createRegisterTemplateCommandForHypervisor(HypervisorType hypervisor)", "class_method_signature": "AutonomiccsSystemVirtualMachinesTemplateRegister.createRegisterTemplateCommandForHypervisor(HypervisorType hypervisor)", "testcase": false, "constructor": false, "invocations": ["setFieldIntoObject", "getAutonomiccsSystemVmTemplateDisplayText", "setFieldIntoObject", "getSupportedImageFormat", "setFieldIntoObject", "name", "setFieldIntoObject", "getAutonomiccsSystemVmTemplateName", "setFieldIntoObject", "getGuestOsUuid", "setFieldIntoObject", "setFieldIntoObject", "getSystemVmTemplateUrl", "setFieldIntoObject", "setFieldIntoObject", "setFieldIntoObject", "setFieldIntoObject", "createTemplateDetails", "setFieldIntoObject", "setFieldIntoObject"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}