{"test_class": {"identifier": "LineParametersTest", "superclass": "extends AnalyzerTest", "interfaces": "", "fields": [], "file": "legend/src/test/java/org/orbisgis/legend/thematic/LineParametersTest.java"}, "test_case": {"identifier": "testEquality", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquality() throws Exception {\n        LineParameters lp = new LineParameters(Color.BLUE,.4,2.0,\"2 2\");\n        LineParameters lp2 = new LineParameters(Color.BLUE,.4,2.0,\"2 2\");\n        assertTrue(lp.equals(lp2));\n        lp2 = new LineParameters(Color.BLUE,.4,2.0,\"2 1 2\");\n        assertFalse(lp.equals(lp2));\n        lp2 = new LineParameters(Color.BLUE,.4,3.0,\"2 2\");\n        assertFalse(lp.equals(lp2));\n        lp2 = new LineParameters(Color.BLUE,.5,2.0,\"2 2\");\n        assertFalse(lp.equals(lp2));\n        lp2 = new LineParameters(Color.YELLOW,.4,2.0,\"2 2\");\n        assertFalse(lp.equals(lp2));\n    }", "signature": "void testEquality()", "full_signature": "@Test public void testEquality()", "class_method_signature": "LineParametersTest.testEquality()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals", "assertFalse", "equals"]}, "focal_class": {"identifier": "LineParameters", "superclass": "", "interfaces": "implements SymbolParameters", "fields": [{"original_string": "private Color color;", "modifier": "private", "type": "Color", "declarator": "color", "var_name": "color"}, {"original_string": "private Double opacity;", "modifier": "private", "type": "Double", "declarator": "opacity", "var_name": "opacity"}, {"original_string": "private Double width;", "modifier": "private", "type": "Double", "declarator": "width", "var_name": "width"}, {"original_string": "private String dash;", "modifier": "private", "type": "String", "declarator": "dash", "var_name": "dash"}], "methods": [{"identifier": "LineParameters", "parameters": "(Color c, Double op, Double w, String d)", "modifiers": "public", "return": "", "signature": " LineParameters(Color c, Double op, Double w, String d)", "full_signature": "public  LineParameters(Color c, Double op, Double w, String d)", "class_method_signature": "LineParameters.LineParameters(Color c, Double op, Double w, String d)", "testcase": false, "constructor": true}, {"identifier": "getLineColor", "parameters": "()", "modifiers": "public", "return": "Color", "signature": "Color getLineColor()", "full_signature": "public Color getLineColor()", "class_method_signature": "LineParameters.getLineColor()", "testcase": false, "constructor": false}, {"identifier": "getLineOpacity", "parameters": "()", "modifiers": "public", "return": "Double", "signature": "Double getLineOpacity()", "full_signature": "public Double getLineOpacity()", "class_method_signature": "LineParameters.getLineOpacity()", "testcase": false, "constructor": false}, {"identifier": "getLineWidth", "parameters": "()", "modifiers": "public", "return": "Double", "signature": "Double getLineWidth()", "full_signature": "public Double getLineWidth()", "class_method_signature": "LineParameters.getLineWidth()", "testcase": false, "constructor": false}, {"identifier": "getLineDash", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLineDash()", "full_signature": "public String getLineDash()", "class_method_signature": "LineParameters.getLineDash()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "LineParameters.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "LineParameters.hashCode()", "testcase": false, "constructor": false}], "file": "legend/src/main/java/org/orbisgis/legend/thematic/LineParameters.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object o){\n        if(o instanceof LineParameters){\n            LineParameters bis = (LineParameters) o;\n            return bis.getLineColor().equals(color) &&\n                        bis.getLineWidth().equals(width) &&\n                        bis.getLineDash().equals(dash) &&\n                        bis.getLineOpacity().equals(opacity);\n        } else {\n            return false;\n        }\n    }", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "LineParameters.equals(Object o)", "testcase": false, "constructor": false, "invocations": ["equals", "getLineColor", "equals", "getLineWidth", "equals", "getLineDash", "equals", "getLineOpacity"]}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}