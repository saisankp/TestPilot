{"test_class": {"identifier": "EntityManagerProducerProxyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private CreationalContext<EntityManager> context;", "modifier": "@Mock\n    private", "type": "CreationalContext<EntityManager>", "declarator": "context", "var_name": "context"}, {"original_string": "@Mock\n    private Producer<EntityManager> delegate;", "modifier": "@Mock\n    private", "type": "Producer<EntityManager>", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private List<EntityManager> producedEntityManagers;", "modifier": "private", "type": "List<EntityManager>", "declarator": "producedEntityManagers", "var_name": "producedEntityManagers"}], "file": "cdi/src/test/java/eu/drus/jpa/unit/cdi/EntityManagerProducerProxyTest.java"}, "test_case": {"identifier": "testGetInjectionPoints", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetInjectionPoints() {\n        // GIVEN\n        final EntityManagerProducerProxy producer = new EntityManagerProducerProxy(delegate);\n\n        // WHEN\n        producer.getInjectionPoints();\n\n        // THEN\n        verify(delegate).getInjectionPoints();\n        verifyNoMoreInteractions(delegate);\n    }", "signature": "void testGetInjectionPoints()", "full_signature": "@Test public void testGetInjectionPoints()", "class_method_signature": "EntityManagerProducerProxyTest.testGetInjectionPoints()", "testcase": true, "constructor": false, "invocations": ["getInjectionPoints", "getInjectionPoints", "verify", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "EntityManagerProducerProxy", "superclass": "", "interfaces": "implements Producer<EntityManager>", "fields": [{"original_string": "private Producer<EntityManager> proxied;", "modifier": "private", "type": "Producer<EntityManager>", "declarator": "proxied", "var_name": "proxied"}], "methods": [{"identifier": "EntityManagerProducerProxy", "parameters": "(final Producer<EntityManager> proxied)", "modifiers": "public", "return": "", "signature": " EntityManagerProducerProxy(final Producer<EntityManager> proxied)", "full_signature": "public  EntityManagerProducerProxy(final Producer<EntityManager> proxied)", "class_method_signature": "EntityManagerProducerProxy.EntityManagerProducerProxy(final Producer<EntityManager> proxied)", "testcase": false, "constructor": true}, {"identifier": "produce", "parameters": "(final CreationalContext<EntityManager> ctx)", "modifiers": "@Override public", "return": "EntityManager", "signature": "EntityManager produce(final CreationalContext<EntityManager> ctx)", "full_signature": "@Override public EntityManager produce(final CreationalContext<EntityManager> ctx)", "class_method_signature": "EntityManagerProducerProxy.produce(final CreationalContext<EntityManager> ctx)", "testcase": false, "constructor": false}, {"identifier": "dispose", "parameters": "(final EntityManager instance)", "modifiers": "@Override public", "return": "void", "signature": "void dispose(final EntityManager instance)", "full_signature": "@Override public void dispose(final EntityManager instance)", "class_method_signature": "EntityManagerProducerProxy.dispose(final EntityManager instance)", "testcase": false, "constructor": false}, {"identifier": "getInjectionPoints", "parameters": "()", "modifiers": "@Override public", "return": "Set<InjectionPoint>", "signature": "Set<InjectionPoint> getInjectionPoints()", "full_signature": "@Override public Set<InjectionPoint> getInjectionPoints()", "class_method_signature": "EntityManagerProducerProxy.getInjectionPoints()", "testcase": false, "constructor": false}], "file": "cdi/src/main/java/eu/drus/jpa/unit/cdi/EntityManagerProducerProxy.java"}, "focal_method": {"identifier": "getInjectionPoints", "parameters": "()", "modifiers": "@Override public", "return": "Set<InjectionPoint>", "body": "@Override\n    public Set<InjectionPoint> getInjectionPoints() {\n        return proxied.getInjectionPoints();\n    }", "signature": "Set<InjectionPoint> getInjectionPoints()", "full_signature": "@Override public Set<InjectionPoint> getInjectionPoints()", "class_method_signature": "EntityManagerProducerProxy.getInjectionPoints()", "testcase": false, "constructor": false, "invocations": ["getInjectionPoints"]}, "repository": {"repo_id": 52435170, "url": "https://github.com/dadrus/jpa-unit", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 24, "size": 1190, "license": "licensed"}}