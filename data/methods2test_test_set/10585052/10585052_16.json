{"test_class": {"identifier": "EventTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Event event1 = Events.with(1);", "modifier": "private final", "type": "Event", "declarator": "event1 = Events.with(1)", "var_name": "event1"}, {"original_string": "private final Event event2 = Events.with(2, Events.with(0), Events.with(2));", "modifier": "private final", "type": "Event", "declarator": "event2 = Events.with(2, Events.with(0), Events.with(2))", "var_name": "event2"}, {"original_string": "private final Event event3 = Events.with(3);", "modifier": "private final", "type": "Event", "declarator": "event3 = Events.with(3)", "var_name": "event3"}], "file": "itc4j-core/src/test/java/itc4j/EventTest.java"}, "test_case": {"identifier": "testIsLeaf", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsLeaf() {\n        assertTrue(event1.isLeaf());\n        assertFalse(event2.isLeaf());\n    }", "signature": "void testIsLeaf()", "full_signature": "@Test public void testIsLeaf()", "class_method_signature": "EventTest.testIsLeaf()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isLeaf", "assertFalse", "isLeaf"]}, "focal_class": {"identifier": "Event", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Event", "parameters": "()", "modifiers": "", "return": "", "signature": " Event()", "full_signature": "  Event()", "class_method_signature": "Event.Event()", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "()", "modifiers": "abstract", "return": "int", "signature": "int getValue()", "full_signature": "abstract int getValue()", "class_method_signature": "Event.getValue()", "testcase": false, "constructor": false}, {"identifier": "getLeft", "parameters": "()", "modifiers": "abstract", "return": "Event", "signature": "Event getLeft()", "full_signature": "abstract Event getLeft()", "class_method_signature": "Event.getLeft()", "testcase": false, "constructor": false}, {"identifier": "getRight", "parameters": "()", "modifiers": "abstract", "return": "Event", "signature": "Event getRight()", "full_signature": "abstract Event getRight()", "class_method_signature": "Event.getRight()", "testcase": false, "constructor": false}, {"identifier": "min", "parameters": "()", "modifiers": "abstract", "return": "int", "signature": "int min()", "full_signature": "abstract int min()", "class_method_signature": "Event.min()", "testcase": false, "constructor": false}, {"identifier": "max", "parameters": "()", "modifiers": "abstract", "return": "int", "signature": "int max()", "full_signature": "abstract int max()", "class_method_signature": "Event.max()", "testcase": false, "constructor": false}, {"identifier": "maxDepth", "parameters": "()", "modifiers": "final", "return": "int", "signature": "int maxDepth()", "full_signature": "final int maxDepth()", "class_method_signature": "Event.maxDepth()", "testcase": false, "constructor": false}, {"identifier": "maxDepth", "parameters": "(int depth)", "modifiers": "protected abstract", "return": "int", "signature": "int maxDepth(int depth)", "full_signature": "protected abstract int maxDepth(int depth)", "class_method_signature": "Event.maxDepth(int depth)", "testcase": false, "constructor": false}, {"identifier": "isLeaf", "parameters": "()", "modifiers": "abstract", "return": "boolean", "signature": "boolean isLeaf()", "full_signature": "abstract boolean isLeaf()", "class_method_signature": "Event.isLeaf()", "testcase": false, "constructor": false}, {"identifier": "lift", "parameters": "(int m)", "modifiers": "abstract", "return": "Event", "signature": "Event lift(int m)", "full_signature": "abstract Event lift(int m)", "class_method_signature": "Event.lift(int m)", "testcase": false, "constructor": false}, {"identifier": "sink", "parameters": "(int m)", "modifiers": "abstract", "return": "Event", "signature": "Event sink(int m)", "full_signature": "abstract Event sink(int m)", "class_method_signature": "Event.sink(int m)", "testcase": false, "constructor": false}, {"identifier": "normalize", "parameters": "()", "modifiers": "abstract", "return": "Event", "signature": "Event normalize()", "full_signature": "abstract Event normalize()", "class_method_signature": "Event.normalize()", "testcase": false, "constructor": false}, {"identifier": "leq", "parameters": "(Event other)", "modifiers": "abstract", "return": "boolean", "signature": "boolean leq(Event other)", "full_signature": "abstract boolean leq(Event other)", "class_method_signature": "Event.leq(Event other)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(Event other)", "modifiers": "abstract", "return": "Event", "signature": "Event join(Event other)", "full_signature": "abstract Event join(Event other)", "class_method_signature": "Event.join(Event other)", "testcase": false, "constructor": false}], "file": "itc4j-core/src/main/java/itc4j/Event.java"}, "focal_method": {"identifier": "isLeaf", "parameters": "()", "modifiers": "abstract", "return": "boolean", "body": "abstract boolean isLeaf();", "signature": "boolean isLeaf()", "full_signature": "abstract boolean isLeaf()", "class_method_signature": "Event.isLeaf()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 10585052, "url": "https://github.com/sinabz/itc4j", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 59, "size": 53, "license": "licensed"}}