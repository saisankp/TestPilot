{"test_class": {"identifier": "FilterTemplateTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/ldaptive/FilterTemplateTest.java"}, "test_case": {"identifier": "testFormat", "parameters": "(final String encodedFilter, final FilterTemplate filter)", "modifiers": "@Test(groups = \"filter\", dataProvider = \"filters\") public", "return": "void", "body": "@Test(groups = \"filter\", dataProvider = \"filters\")\n  public void testFormat(final String encodedFilter, final FilterTemplate filter)\n    throws Exception\n  {\n    Assert.assertEquals(filter.format(), encodedFilter);\n  }", "signature": "void testFormat(final String encodedFilter, final FilterTemplate filter)", "full_signature": "@Test(groups = \"filter\", dataProvider = \"filters\") public void testFormat(final String encodedFilter, final FilterTemplate filter)", "class_method_signature": "FilterTemplateTest.testFormat(final String encodedFilter, final FilterTemplate filter)", "testcase": true, "constructor": false, "invocations": ["assertEquals", "format"]}, "focal_class": {"identifier": "FilterTemplate", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int HASH_CODE_SEED = 311;", "modifier": "private static final", "type": "int", "declarator": "HASH_CODE_SEED = 311", "var_name": "HASH_CODE_SEED"}, {"original_string": "private String searchFilter;", "modifier": "private", "type": "String", "declarator": "searchFilter", "var_name": "searchFilter"}, {"original_string": "private final Map<String, Object> parameters = new HashMap<>();", "modifier": "private final", "type": "Map<String, Object>", "declarator": "parameters = new HashMap<>()", "var_name": "parameters"}], "methods": [{"identifier": "FilterTemplate", "parameters": "()", "modifiers": "public", "return": "", "signature": " FilterTemplate()", "full_signature": "public  FilterTemplate()", "class_method_signature": "FilterTemplate.FilterTemplate()", "testcase": false, "constructor": true}, {"identifier": "FilterTemplate", "parameters": "(final String filter)", "modifiers": "public", "return": "", "signature": " FilterTemplate(final String filter)", "full_signature": "public  FilterTemplate(final String filter)", "class_method_signature": "FilterTemplate.FilterTemplate(final String filter)", "testcase": false, "constructor": true}, {"identifier": "FilterTemplate", "parameters": "(final String filter, final Object[] params)", "modifiers": "public", "return": "", "signature": " FilterTemplate(final String filter, final Object[] params)", "full_signature": "public  FilterTemplate(final String filter, final Object[] params)", "class_method_signature": "FilterTemplate.FilterTemplate(final String filter, final Object[] params)", "testcase": false, "constructor": true}, {"identifier": "getFilter", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFilter()", "full_signature": "public String getFilter()", "class_method_signature": "FilterTemplate.getFilter()", "testcase": false, "constructor": false}, {"identifier": "setFilter", "parameters": "(final String filter)", "modifiers": "public", "return": "void", "signature": "void setFilter(final String filter)", "full_signature": "public void setFilter(final String filter)", "class_method_signature": "FilterTemplate.setFilter(final String filter)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> getParameters()", "full_signature": "public Map<String, Object> getParameters()", "class_method_signature": "FilterTemplate.getParameters()", "testcase": false, "constructor": false}, {"identifier": "setParameter", "parameters": "(final int position, final Object value)", "modifiers": "public", "return": "void", "signature": "void setParameter(final int position, final Object value)", "full_signature": "public void setParameter(final int position, final Object value)", "class_method_signature": "FilterTemplate.setParameter(final int position, final Object value)", "testcase": false, "constructor": false}, {"identifier": "setParameter", "parameters": "(final String name, final Object value)", "modifiers": "public", "return": "void", "signature": "void setParameter(final String name, final Object value)", "full_signature": "public void setParameter(final String name, final Object value)", "class_method_signature": "FilterTemplate.setParameter(final String name, final Object value)", "testcase": false, "constructor": false}, {"identifier": "setParameters", "parameters": "(final Object[] values)", "modifiers": "public", "return": "void", "signature": "void setParameters(final Object[] values)", "full_signature": "public void setParameters(final Object[] values)", "class_method_signature": "FilterTemplate.setParameters(final Object[] values)", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String format()", "full_signature": "public String format()", "class_method_signature": "FilterTemplate.format()", "testcase": false, "constructor": false}, {"identifier": "encodeValue", "parameters": "(final byte[] value)", "modifiers": "public static", "return": "String", "signature": "String encodeValue(final byte[] value)", "full_signature": "public static String encodeValue(final byte[] value)", "class_method_signature": "FilterTemplate.encodeValue(final byte[] value)", "testcase": false, "constructor": false}, {"identifier": "encodeValue", "parameters": "(final String value)", "modifiers": "public static", "return": "String", "signature": "String encodeValue(final String value)", "full_signature": "public static String encodeValue(final String value)", "class_method_signature": "FilterTemplate.encodeValue(final String value)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(final Object obj)", "modifiers": "protected static", "return": "String", "signature": "String encode(final Object obj)", "full_signature": "protected static String encode(final Object obj)", "class_method_signature": "FilterTemplate.encode(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "FilterTemplate.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "FilterTemplate.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FilterTemplate.toString()", "testcase": false, "constructor": false}, {"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder builder()", "full_signature": "public static Builder builder()", "class_method_signature": "FilterTemplate.builder()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/ldaptive/FilterTemplate.java"}, "focal_method": {"identifier": "format", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String format()\n  {\n    String s = searchFilter;\n    if (!parameters.isEmpty()) {\n      for (Map.Entry<String, Object> e : parameters.entrySet()) {\n        final String encoded = encode(e.getValue());\n        if (encoded != null) {\n          s = s.replace(\"{\" + e.getKey() + \"}\", encoded);\n        }\n      }\n    }\n    return s;\n  }", "signature": "String format()", "full_signature": "public String format()", "class_method_signature": "FilterTemplate.format()", "testcase": false, "constructor": false, "invocations": ["isEmpty", "entrySet", "encode", "getValue", "replace", "getKey"]}, "repository": {"repo_id": 25927306, "url": "https://github.com/vt-middleware/ldaptive", "stars": 32, "created": "10/29/2014 3:27:31 PM +00:00", "updates": "2020-01-14T22:18:12+00:00", "fork": "False", "license": "licensed"}}