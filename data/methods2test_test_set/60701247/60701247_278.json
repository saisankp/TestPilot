{"test_class": {"identifier": "AsyncDevicesGetterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n  public final AndroidProjectRule myRule = AndroidProjectRule.inMemory();", "modifier": "@Rule\n  public final", "type": "AndroidProjectRule", "declarator": "myRule = AndroidProjectRule.inMemory()", "var_name": "myRule"}, {"original_string": "private Function<ConnectedDevice, String> myGetName;", "modifier": "private", "type": "Function<ConnectedDevice, String>", "declarator": "myGetName", "var_name": "myGetName"}, {"original_string": "private AsyncDevicesGetter myGetter;", "modifier": "private", "type": "AsyncDevicesGetter", "declarator": "myGetter", "var_name": "myGetter"}], "file": "android/testSrc/com/android/tools/idea/run/deployment/AsyncDevicesGetterTest.java"}, "test_case": {"identifier": "initChecker", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void initChecker() {\n    RunConfigurationModule configurationModule = Mockito.mock(RunConfigurationModule.class);\n    Mockito.when(configurationModule.getModule()).thenReturn(myRule.getModule());\n\n    ModuleBasedConfiguration configuration = Mockito.mock(ModuleBasedConfiguration.class);\n    Mockito.when(configuration.getConfigurationModule()).thenReturn(configurationModule);\n\n    RunnerAndConfigurationSettings configurationAndSettings = Mockito.mock(RunnerAndConfigurationSettings.class);\n    Mockito.when(configurationAndSettings.getConfiguration()).thenReturn(configuration);\n\n    myGetter.initChecker(configurationAndSettings, AsyncDevicesGetterTest::newAndroidFacet);\n    assertNull(myGetter.getChecker());\n  }", "signature": "void initChecker()", "full_signature": "@Test public void initChecker()", "class_method_signature": "AsyncDevicesGetterTest.initChecker()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getModule", "getModule", "mock", "thenReturn", "when", "getConfigurationModule", "mock", "thenReturn", "when", "getConfiguration", "initChecker", "assertNull", "getChecker"]}, "focal_class": {"identifier": "AsyncDevicesGetter", "superclass": "", "interfaces": "", "fields": [{"original_string": "@NotNull\n  private final Project myProject;", "modifier": "@NotNull\n  private final", "type": "Project", "declarator": "myProject", "var_name": "myProject"}, {"original_string": "@NotNull\n  private final BooleanSupplier mySelectDeviceSnapshotComboBoxSnapshotsEnabled;", "modifier": "@NotNull\n  private final", "type": "BooleanSupplier", "declarator": "mySelectDeviceSnapshotComboBoxSnapshotsEnabled", "var_name": "mySelectDeviceSnapshotComboBoxSnapshotsEnabled"}, {"original_string": "@NotNull\n  private final Worker<Collection<VirtualDevice>> myVirtualDevicesWorker;", "modifier": "@NotNull\n  private final", "type": "Worker<Collection<VirtualDevice>>", "declarator": "myVirtualDevicesWorker", "var_name": "myVirtualDevicesWorker"}, {"original_string": "@NotNull\n  private final Worker<List<ConnectedDevice>> myConnectedDevicesWorker;", "modifier": "@NotNull\n  private final", "type": "Worker<List<ConnectedDevice>>", "declarator": "myConnectedDevicesWorker", "var_name": "myConnectedDevicesWorker"}, {"original_string": "@NotNull\n  private final KeyToConnectionTimeMap myMap;", "modifier": "@NotNull\n  private final", "type": "KeyToConnectionTimeMap", "declarator": "myMap", "var_name": "myMap"}, {"original_string": "@NotNull\n  private final Function<ConnectedDevice, String> myGetName;", "modifier": "@NotNull\n  private final", "type": "Function<ConnectedDevice, String>", "declarator": "myGetName", "var_name": "myGetName"}, {"original_string": "@Nullable\n  private LaunchCompatibilityChecker myChecker;", "modifier": "@Nullable\n  private", "type": "LaunchCompatibilityChecker", "declarator": "myChecker", "var_name": "myChecker"}], "methods": [{"identifier": "AsyncDevicesGetter", "parameters": "(@NotNull Project project)", "modifiers": "@SuppressWarnings(\"unused\") private", "return": "", "signature": " AsyncDevicesGetter(@NotNull Project project)", "full_signature": "@SuppressWarnings(\"unused\") private  AsyncDevicesGetter(@NotNull Project project)", "class_method_signature": "AsyncDevicesGetter.AsyncDevicesGetter(@NotNull Project project)", "testcase": false, "constructor": true}, {"identifier": "AsyncDevicesGetter", "parameters": "(@NotNull Project project,\n                     @NotNull BooleanSupplier selectDeviceSnapshotComboBoxSnapshotsEnabled,\n                     @NotNull KeyToConnectionTimeMap map,\n                     @NotNull Function<ConnectedDevice, String> getName)", "modifiers": "@NonInjectable @VisibleForTesting", "return": "", "signature": " AsyncDevicesGetter(@NotNull Project project,\n                     @NotNull BooleanSupplier selectDeviceSnapshotComboBoxSnapshotsEnabled,\n                     @NotNull KeyToConnectionTimeMap map,\n                     @NotNull Function<ConnectedDevice, String> getName)", "full_signature": "@NonInjectable @VisibleForTesting  AsyncDevicesGetter(@NotNull Project project,\n                     @NotNull BooleanSupplier selectDeviceSnapshotComboBoxSnapshotsEnabled,\n                     @NotNull KeyToConnectionTimeMap map,\n                     @NotNull Function<ConnectedDevice, String> getName)", "class_method_signature": "AsyncDevicesGetter.AsyncDevicesGetter(@NotNull Project project,\n                     @NotNull BooleanSupplier selectDeviceSnapshotComboBoxSnapshotsEnabled,\n                     @NotNull KeyToConnectionTimeMap map,\n                     @NotNull Function<ConnectedDevice, String> getName)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "()", "modifiers": "@NotNull", "return": "List<Device>", "signature": "List<Device> get()", "full_signature": "@NotNull List<Device> get()", "class_method_signature": "AsyncDevicesGetter.get()", "testcase": false, "constructor": false}, {"identifier": "getImpl", "parameters": "(@NotNull Collection<VirtualDevice> virtualDevices, @NotNull Collection<ConnectedDevice> connectedDevices)", "modifiers": "@NotNull @VisibleForTesting", "return": "List<Device>", "signature": "List<Device> getImpl(@NotNull Collection<VirtualDevice> virtualDevices, @NotNull Collection<ConnectedDevice> connectedDevices)", "full_signature": "@NotNull @VisibleForTesting List<Device> getImpl(@NotNull Collection<VirtualDevice> virtualDevices, @NotNull Collection<ConnectedDevice> connectedDevices)", "class_method_signature": "AsyncDevicesGetter.getImpl(@NotNull Collection<VirtualDevice> virtualDevices, @NotNull Collection<ConnectedDevice> connectedDevices)", "testcase": false, "constructor": false}, {"identifier": "connectedVirtualDeviceStream", "parameters": "(@NotNull Collection<ConnectedDevice> connectedDevices,\n                                                             @NotNull Collection<VirtualDevice> virtualDevices)", "modifiers": "@NotNull private", "return": "Stream<VirtualDevice>", "signature": "Stream<VirtualDevice> connectedVirtualDeviceStream(@NotNull Collection<ConnectedDevice> connectedDevices,\n                                                             @NotNull Collection<VirtualDevice> virtualDevices)", "full_signature": "@NotNull private Stream<VirtualDevice> connectedVirtualDeviceStream(@NotNull Collection<ConnectedDevice> connectedDevices,\n                                                             @NotNull Collection<VirtualDevice> virtualDevices)", "class_method_signature": "AsyncDevicesGetter.connectedVirtualDeviceStream(@NotNull Collection<ConnectedDevice> connectedDevices,\n                                                             @NotNull Collection<VirtualDevice> virtualDevices)", "testcase": false, "constructor": false}, {"identifier": "physicalDeviceStream", "parameters": "(@NotNull Collection<ConnectedDevice> connectedDevices)", "modifiers": "@NotNull private", "return": "Stream<PhysicalDevice>", "signature": "Stream<PhysicalDevice> physicalDeviceStream(@NotNull Collection<ConnectedDevice> connectedDevices)", "full_signature": "@NotNull private Stream<PhysicalDevice> physicalDeviceStream(@NotNull Collection<ConnectedDevice> connectedDevices)", "class_method_signature": "AsyncDevicesGetter.physicalDeviceStream(@NotNull Collection<ConnectedDevice> connectedDevices)", "testcase": false, "constructor": false}, {"identifier": "disconnectedVirtualDeviceStream", "parameters": "(@NotNull Collection<VirtualDevice> virtualDevices,\n                                                                       @NotNull Collection<ConnectedDevice> connectedDevices)", "modifiers": "@NotNull private static", "return": "Stream<VirtualDevice>", "signature": "Stream<VirtualDevice> disconnectedVirtualDeviceStream(@NotNull Collection<VirtualDevice> virtualDevices,\n                                                                       @NotNull Collection<ConnectedDevice> connectedDevices)", "full_signature": "@NotNull private static Stream<VirtualDevice> disconnectedVirtualDeviceStream(@NotNull Collection<VirtualDevice> virtualDevices,\n                                                                       @NotNull Collection<ConnectedDevice> connectedDevices)", "class_method_signature": "AsyncDevicesGetter.disconnectedVirtualDeviceStream(@NotNull Collection<VirtualDevice> virtualDevices,\n                                                                       @NotNull Collection<ConnectedDevice> connectedDevices)", "testcase": false, "constructor": false}, {"identifier": "initChecker", "parameters": "(@Nullable RunnerAndConfigurationSettings configurationAndSettings,\n                         @NotNull Function<Module, AndroidFacet> facetGetter)", "modifiers": "@VisibleForTesting final", "return": "void", "signature": "void initChecker(@Nullable RunnerAndConfigurationSettings configurationAndSettings,\n                         @NotNull Function<Module, AndroidFacet> facetGetter)", "full_signature": "@VisibleForTesting final void initChecker(@Nullable RunnerAndConfigurationSettings configurationAndSettings,\n                         @NotNull Function<Module, AndroidFacet> facetGetter)", "class_method_signature": "AsyncDevicesGetter.initChecker(@Nullable RunnerAndConfigurationSettings configurationAndSettings,\n                         @NotNull Function<Module, AndroidFacet> facetGetter)", "testcase": false, "constructor": false}, {"identifier": "getChecker", "parameters": "()", "modifiers": "@VisibleForTesting final", "return": "Object", "signature": "Object getChecker()", "full_signature": "@VisibleForTesting final Object getChecker()", "class_method_signature": "AsyncDevicesGetter.getChecker()", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/run/deployment/AsyncDevicesGetter.java"}, "focal_method": {"identifier": "initChecker", "parameters": "(@Nullable RunnerAndConfigurationSettings configurationAndSettings,\n                         @NotNull Function<Module, AndroidFacet> facetGetter)", "modifiers": "@VisibleForTesting final", "return": "void", "body": "@VisibleForTesting\n  final void initChecker(@Nullable RunnerAndConfigurationSettings configurationAndSettings,\n                         @NotNull Function<Module, AndroidFacet> facetGetter) {\n    if (configurationAndSettings == null) {\n      myChecker = null;\n      return;\n    }\n\n    Object configuration = configurationAndSettings.getConfiguration();\n\n    if (!(configuration instanceof ModuleBasedConfiguration)) {\n      myChecker = null;\n      return;\n    }\n\n    Module module = ((ModuleBasedConfiguration)configuration).getConfigurationModule().getModule();\n\n    if (module == null) {\n      myChecker = null;\n      return;\n    }\n\n    AndroidFacet facet = facetGetter.apply(module);\n\n    if (facet == null || Disposer.isDisposed(facet)) {\n      myChecker = null;\n      return;\n    }\n\n    Object platform = AndroidPlatform.getInstance(facet.getModule());\n\n    if (platform == null) {\n      myChecker = null;\n      return;\n    }\n\n    myChecker = LaunchCompatibilityCheckerImpl.create(facet, null, null);\n  }", "signature": "void initChecker(@Nullable RunnerAndConfigurationSettings configurationAndSettings,\n                         @NotNull Function<Module, AndroidFacet> facetGetter)", "full_signature": "@VisibleForTesting final void initChecker(@Nullable RunnerAndConfigurationSettings configurationAndSettings,\n                         @NotNull Function<Module, AndroidFacet> facetGetter)", "class_method_signature": "AsyncDevicesGetter.initChecker(@Nullable RunnerAndConfigurationSettings configurationAndSettings,\n                         @NotNull Function<Module, AndroidFacet> facetGetter)", "testcase": false, "constructor": false, "invocations": ["getConfiguration", "getModule", "getConfigurationModule", "apply", "isDisposed", "getInstance", "getModule", "create"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}