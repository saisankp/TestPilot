{"test_class": {"identifier": "TlvUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final byte[] DATA = BytesUtils.fromString(\"70 63 61 13 4f 09 a0 00 00 03 15 10 10 05 28 50\"\n\t\t\t+ \"03 50 49 4e 87 01 01 61 15 4f 07 a0 00 00 00 04 30 60 50 07 4d 41 45 53 54 52 4f 87 01 02 61 1d\"\n\t\t\t+ \"4f 07 a0 00 00 00 04 80 02 50 0f 53 65 63 75 72 65 43 6f 64 65 20 41 75 74 68 87 01 00 61 16 4f\"\n\t\t\t+ \"07 a0 00 00 03 15 60 20 50 08 43 68 69 70 6b 6e 69 70 87 01 00 90 00\");", "modifier": "private static final", "type": "byte[]", "declarator": "DATA = BytesUtils.fromString(\"70 63 61 13 4f 09 a0 00 00 03 15 10 10 05 28 50\"\n\t\t\t+ \"03 50 49 4e 87 01 01 61 15 4f 07 a0 00 00 00 04 30 60 50 07 4d 41 45 53 54 52 4f 87 01 02 61 1d\"\n\t\t\t+ \"4f 07 a0 00 00 00 04 80 02 50 0f 53 65 63 75 72 65 43 6f 64 65 20 41 75 74 68 87 01 00 61 16 4f\"\n\t\t\t+ \"07 a0 00 00 03 15 60 20 50 08 43 68 69 70 6b 6e 69 70 87 01 00 90 00\")", "var_name": "DATA"}], "file": "library/src/test/java/com/github/devnied/emvnfccard/utils/TlvUtilTest.java"}, "test_case": {"identifier": "testPrettyPrint", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testPrettyPrint() {\n\n\t\tString expResult = \"\\n\"//\n\t\t\t\t+ \"70 63 -- Record Template (EMV Proprietary)\\n\" //\n\t\t\t\t+ \"      61 13 -- Application Template\\n\" //\n\t\t\t\t+ \"            4F 09 -- Application Identifier (AID) - card\\n\" //\n\t\t\t\t+ \"                  A0 00 00 03 15 10 10 05 28 (BINARY)\\n\" //\n\t\t\t\t+ \"            50 03 -- Application Label\\n\" //\n\t\t\t\t+ \"                  50 49 4E (=PIN)\\n\" //\n\t\t\t\t+ \"            87 01 -- Application Priority Indicator\\n\"//\n\t\t\t\t+ \"                  01 (BINARY)\\n\" //\n\t\t\t\t+ \"      61 15 -- Application Template\\n\"//\n\t\t\t\t+ \"            4F 07 -- Application Identifier (AID) - card\\n\"//\n\t\t\t\t+ \"                  A0 00 00 00 04 30 60 (BINARY)\\n\" //\n\t\t\t\t+ \"            50 07 -- Application Label\\n\"//\n\t\t\t\t+ \"                  4D 41 45 53 54 52 4F (=MAESTRO)\\n\" //\n\t\t\t\t+ \"            87 01 -- Application Priority Indicator\\n\"//\n\t\t\t\t+ \"                  02 (BINARY)\\n\" //\n\t\t\t\t+ \"      61 1D -- Application Template\\n\"//\n\t\t\t\t+ \"            4F 07 -- Application Identifier (AID) - card\\n\"//\n\t\t\t\t+ \"                  A0 00 00 00 04 80 02 (BINARY)\\n\" //\n\t\t\t\t+ \"            50 0F -- Application Label\\n\"//\n\t\t\t\t+ \"                  53 65 63 75 72 65 43 6F 64 65 20 41 75 74 68 (=SecureCode Auth)\\n\" //\n\t\t\t\t+ \"            87 01 -- Application Priority Indicator\\n\" //\n\t\t\t\t+ \"                  00 (BINARY)\\n\"//\n\t\t\t\t+ \"      61 16 -- Application Template\\n\" //\n\t\t\t\t+ \"            4F 07 -- Application Identifier (AID) - card\\n\"//\n\t\t\t\t+ \"                  A0 00 00 03 15 60 20 (BINARY)\\n\" //\n\t\t\t\t+ \"            50 08 -- Application Label\\n\"//\n\t\t\t\t+ \"                  43 68 69 70 6B 6E 69 70 (=Chipknip)\\n\"//\n\t\t\t\t+ \"            87 01 -- Application Priority Indicator\\n\" //\n\t\t\t\t+ \"                  00 (BINARY)\\n\" //\n\t\t\t\t+ \"90 00 -- Command successfully executed (OK)\";\n\n\t\tAssertions.assertThat(TlvUtil.prettyPrintAPDUResponse(DATA)).isEqualTo(expResult);\n\t}", "signature": "void testPrettyPrint()", "full_signature": "@Test public void testPrettyPrint()", "class_method_signature": "TlvUtilTest.testPrettyPrint()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "prettyPrintAPDUResponse"]}, "focal_class": {"identifier": "TlvUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(TlvUtil.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(TlvUtil.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "searchTagById", "parameters": "(final int tagId)", "modifiers": "private static", "return": "ITag", "signature": "ITag searchTagById(final int tagId)", "full_signature": "private static ITag searchTagById(final int tagId)", "class_method_signature": "TlvUtil.searchTagById(final int tagId)", "testcase": false, "constructor": false}, {"identifier": "getFormattedTagAndLength", "parameters": "(final byte[] data, final int indentLength)", "modifiers": "public static", "return": "String", "signature": "String getFormattedTagAndLength(final byte[] data, final int indentLength)", "full_signature": "public static String getFormattedTagAndLength(final byte[] data, final int indentLength)", "class_method_signature": "TlvUtil.getFormattedTagAndLength(final byte[] data, final int indentLength)", "testcase": false, "constructor": false}, {"identifier": "getNextTLV", "parameters": "(final TLVInputStream stream)", "modifiers": "public static", "return": "TLV", "signature": "TLV getNextTLV(final TLVInputStream stream)", "full_signature": "public static TLV getNextTLV(final TLVInputStream stream)", "class_method_signature": "TlvUtil.getNextTLV(final TLVInputStream stream)", "testcase": false, "constructor": false}, {"identifier": "getTagValueAsString", "parameters": "(final ITag tag, final byte[] value)", "modifiers": "private static", "return": "String", "signature": "String getTagValueAsString(final ITag tag, final byte[] value)", "full_signature": "private static String getTagValueAsString(final ITag tag, final byte[] value)", "class_method_signature": "TlvUtil.getTagValueAsString(final ITag tag, final byte[] value)", "testcase": false, "constructor": false}, {"identifier": "parseTagAndLength", "parameters": "(final byte[] data)", "modifiers": "public static", "return": "List<TagAndLength>", "signature": "List<TagAndLength> parseTagAndLength(final byte[] data)", "full_signature": "public static List<TagAndLength> parseTagAndLength(final byte[] data)", "class_method_signature": "TlvUtil.parseTagAndLength(final byte[] data)", "testcase": false, "constructor": false}, {"identifier": "prettyPrintAPDUResponse", "parameters": "(final byte[] data)", "modifiers": "public static", "return": "String", "signature": "String prettyPrintAPDUResponse(final byte[] data)", "full_signature": "public static String prettyPrintAPDUResponse(final byte[] data)", "class_method_signature": "TlvUtil.prettyPrintAPDUResponse(final byte[] data)", "testcase": false, "constructor": false}, {"identifier": "getlistTLV", "parameters": "(final byte[] pData, final ITag pTag, final boolean pAdd)", "modifiers": "public static", "return": "List<TLV>", "signature": "List<TLV> getlistTLV(final byte[] pData, final ITag pTag, final boolean pAdd)", "full_signature": "public static List<TLV> getlistTLV(final byte[] pData, final ITag pTag, final boolean pAdd)", "class_method_signature": "TlvUtil.getlistTLV(final byte[] pData, final ITag pTag, final boolean pAdd)", "testcase": false, "constructor": false}, {"identifier": "getlistTLV", "parameters": "(final byte[] pData, final ITag... pTag)", "modifiers": "public static", "return": "List<TLV>", "signature": "List<TLV> getlistTLV(final byte[] pData, final ITag... pTag)", "full_signature": "public static List<TLV> getlistTLV(final byte[] pData, final ITag... pTag)", "class_method_signature": "TlvUtil.getlistTLV(final byte[] pData, final ITag... pTag)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(final byte[] pData, final ITag... pTag)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getValue(final byte[] pData, final ITag... pTag)", "full_signature": "public static byte[] getValue(final byte[] pData, final ITag... pTag)", "class_method_signature": "TlvUtil.getValue(final byte[] pData, final ITag... pTag)", "testcase": false, "constructor": false}, {"identifier": "prettyPrintAPDUResponse", "parameters": "(final byte[] data, final int indentLength)", "modifiers": "public static", "return": "String", "signature": "String prettyPrintAPDUResponse(final byte[] data, final int indentLength)", "full_signature": "public static String prettyPrintAPDUResponse(final byte[] data, final int indentLength)", "class_method_signature": "TlvUtil.prettyPrintAPDUResponse(final byte[] data, final int indentLength)", "testcase": false, "constructor": false}, {"identifier": "getSpaces", "parameters": "(final int length)", "modifiers": "public static", "return": "String", "signature": "String getSpaces(final int length)", "full_signature": "public static String getSpaces(final int length)", "class_method_signature": "TlvUtil.getSpaces(final int length)", "testcase": false, "constructor": false}, {"identifier": "prettyPrintHex", "parameters": "(final String in, final int indent)", "modifiers": "public static", "return": "String", "signature": "String prettyPrintHex(final String in, final int indent)", "full_signature": "public static String prettyPrintHex(final String in, final int indent)", "class_method_signature": "TlvUtil.prettyPrintHex(final String in, final int indent)", "testcase": false, "constructor": false}, {"identifier": "prettyPrintHex", "parameters": "(final byte[] data)", "modifiers": "public static", "return": "String", "signature": "String prettyPrintHex(final byte[] data)", "full_signature": "public static String prettyPrintHex(final byte[] data)", "class_method_signature": "TlvUtil.prettyPrintHex(final byte[] data)", "testcase": false, "constructor": false}, {"identifier": "prettyPrintHex", "parameters": "(final String in, final int indent, final boolean wrapLines)", "modifiers": "public static", "return": "String", "signature": "String prettyPrintHex(final String in, final int indent, final boolean wrapLines)", "full_signature": "public static String prettyPrintHex(final String in, final int indent, final boolean wrapLines)", "class_method_signature": "TlvUtil.prettyPrintHex(final String in, final int indent, final boolean wrapLines)", "testcase": false, "constructor": false}, {"identifier": "getSafePrintChars", "parameters": "(final byte[] byteArray)", "modifiers": "public static", "return": "String", "signature": "String getSafePrintChars(final byte[] byteArray)", "full_signature": "public static String getSafePrintChars(final byte[] byteArray)", "class_method_signature": "TlvUtil.getSafePrintChars(final byte[] byteArray)", "testcase": false, "constructor": false}, {"identifier": "getSafePrintChars", "parameters": "(final byte[] byteArray, final int startPos, final int length)", "modifiers": "public static", "return": "String", "signature": "String getSafePrintChars(final byte[] byteArray, final int startPos, final int length)", "full_signature": "public static String getSafePrintChars(final byte[] byteArray, final int startPos, final int length)", "class_method_signature": "TlvUtil.getSafePrintChars(final byte[] byteArray, final int startPos, final int length)", "testcase": false, "constructor": false}, {"identifier": "getLength", "parameters": "(final List<TagAndLength> pList)", "modifiers": "public static", "return": "int", "signature": "int getLength(final List<TagAndLength> pList)", "full_signature": "public static int getLength(final List<TagAndLength> pList)", "class_method_signature": "TlvUtil.getLength(final List<TagAndLength> pList)", "testcase": false, "constructor": false}, {"identifier": "TlvUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " TlvUtil()", "full_signature": "private  TlvUtil()", "class_method_signature": "TlvUtil.TlvUtil()", "testcase": false, "constructor": true}], "file": "library/src/main/java/com/github/devnied/emvnfccard/utils/TlvUtil.java"}, "focal_method": {"identifier": "prettyPrintAPDUResponse", "parameters": "(final byte[] data)", "modifiers": "public static", "return": "String", "body": "public static String prettyPrintAPDUResponse(final byte[] data) {\n\t\treturn prettyPrintAPDUResponse(data, 0);\n\t}", "signature": "String prettyPrintAPDUResponse(final byte[] data)", "full_signature": "public static String prettyPrintAPDUResponse(final byte[] data)", "class_method_signature": "TlvUtil.prettyPrintAPDUResponse(final byte[] data)", "testcase": false, "constructor": false, "invocations": ["prettyPrintAPDUResponse"]}, "repository": {"repo_id": 18467626, "url": "https://github.com/devnied/EMV-NFC-Paycard-Enrollment", "language": "Java", "is_fork": false, "fork_count": 425, "stargazer_count": 934, "size": 4233, "license": "licensed"}}