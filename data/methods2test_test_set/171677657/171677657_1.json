{"test_class": {"identifier": "StreamsTest", "superclass": "", "interfaces": "", "fields": [], "file": "weather-streams/src/test/java/pt/isel/leic/mpd/v1819/li41d/misc/stream/StreamsTest.java"}, "test_case": {"identifier": "collapse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void collapse() {\n        // Arrange & Act\n        final List<String> src = Arrays.asList(\"a\", \"a\", \"b\", \"bb\", \"c\", \"c\", \"a\");\n        final Stream<String> collapsed = Streams.collapse(src.stream()).parallel();\n\n\n        // Assert\n        final List<String> expected = Arrays.asList(\"a\", \"b\", \"bb\", \"c\", \"a\");\n        final Object[] actuals = collapsed.toArray();\n        Assert.assertArrayEquals(expected.toArray(), actuals);\n\n    }", "signature": "void collapse()", "full_signature": "@Test public void collapse()", "class_method_signature": "StreamsTest.collapse()", "testcase": true, "constructor": false, "invocations": ["asList", "parallel", "collapse", "stream", "asList", "toArray", "assertArrayEquals", "toArray"]}, "focal_class": {"identifier": "Streams", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Streams", "parameters": "()", "modifiers": "private", "return": "", "signature": " Streams()", "full_signature": "private  Streams()", "class_method_signature": "Streams.Streams()", "testcase": false, "constructor": true}, {"identifier": "collapse", "parameters": "(Stream<T> src)", "modifiers": "public static", "return": "Stream<T>", "signature": "Stream<T> collapse(Stream<T> src)", "full_signature": "public static Stream<T> collapse(Stream<T> src)", "class_method_signature": "Streams.collapse(Stream<T> src)", "testcase": false, "constructor": false}], "file": "weather-streams/src/main/java/pt/isel/leic/mpd/v1819/li41d/misc/stream/Streams.java"}, "focal_method": {"identifier": "collapse", "parameters": "(Stream<T> src)", "modifiers": "public static", "return": "Stream<T>", "body": "public static <T> Stream<T> collapse(Stream<T> src) {\n        return StreamSupport.stream(new CollapseSpliterator(src.spliterator()), false);\n    }", "signature": "Stream<T> collapse(Stream<T> src)", "full_signature": "public static Stream<T> collapse(Stream<T> src)", "class_method_signature": "Streams.collapse(Stream<T> src)", "testcase": false, "constructor": false, "invocations": ["stream", "spliterator"]}, "repository": {"repo_id": 171677657, "url": "https://github.com/isel-leic-mpd/MPD-1819v-LI41D", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 16, "size": 243, "license": "licensed"}}