{"test_class": {"identifier": "RemotePeerBeanTest", "superclass": "", "interfaces": "", "fields": [], "file": "zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/RemotePeerBeanTest.java"}, "test_case": {"identifier": "testGetClientAddressShouldReturnEmptyStringWhenClientAddressIsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetClientAddressShouldReturnEmptyStringWhenClientAddressIsNull() {\n        InetSocketAddress peerCommunicationAddress = null;\n        // Here peerCommunicationAddress is null, also clientAddr is null\n        QuorumServer peer = new QuorumServer(1, peerCommunicationAddress);\n        RemotePeerBean remotePeerBean = new RemotePeerBean(null, peer);\n        String clientAddress = remotePeerBean.getClientAddress();\n        assertNotNull(clientAddress);\n        assertEquals(0, clientAddress.length());\n    }", "signature": "void testGetClientAddressShouldReturnEmptyStringWhenClientAddressIsNull()", "full_signature": "@Test public void testGetClientAddressShouldReturnEmptyStringWhenClientAddressIsNull()", "class_method_signature": "RemotePeerBeanTest.testGetClientAddressShouldReturnEmptyStringWhenClientAddressIsNull()", "testcase": true, "constructor": false, "invocations": ["getClientAddress", "assertNotNull", "assertEquals", "length"]}, "focal_class": {"identifier": "RemotePeerBean", "superclass": "", "interfaces": "implements RemotePeerMXBean,ZKMBeanInfo", "fields": [{"original_string": "private QuorumPeer.QuorumServer peer;", "modifier": "private", "type": "QuorumPeer.QuorumServer", "declarator": "peer", "var_name": "peer"}, {"original_string": "private final QuorumPeer localPeer;", "modifier": "private final", "type": "QuorumPeer", "declarator": "localPeer", "var_name": "localPeer"}], "methods": [{"identifier": "RemotePeerBean", "parameters": "(QuorumPeer localPeer, QuorumPeer.QuorumServer peer)", "modifiers": "public", "return": "", "signature": " RemotePeerBean(QuorumPeer localPeer, QuorumPeer.QuorumServer peer)", "full_signature": "public  RemotePeerBean(QuorumPeer localPeer, QuorumPeer.QuorumServer peer)", "class_method_signature": "RemotePeerBean.RemotePeerBean(QuorumPeer localPeer, QuorumPeer.QuorumServer peer)", "testcase": false, "constructor": true}, {"identifier": "setQuorumServer", "parameters": "(QuorumPeer.QuorumServer peer)", "modifiers": "public", "return": "void", "signature": "void setQuorumServer(QuorumPeer.QuorumServer peer)", "full_signature": "public void setQuorumServer(QuorumPeer.QuorumServer peer)", "class_method_signature": "RemotePeerBean.setQuorumServer(QuorumPeer.QuorumServer peer)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "RemotePeerBean.getName()", "testcase": false, "constructor": false}, {"identifier": "isHidden", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isHidden()", "full_signature": "public boolean isHidden()", "class_method_signature": "RemotePeerBean.isHidden()", "testcase": false, "constructor": false}, {"identifier": "getQuorumAddress", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getQuorumAddress()", "full_signature": "public String getQuorumAddress()", "class_method_signature": "RemotePeerBean.getQuorumAddress()", "testcase": false, "constructor": false}, {"identifier": "getElectionAddress", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getElectionAddress()", "full_signature": "public String getElectionAddress()", "class_method_signature": "RemotePeerBean.getElectionAddress()", "testcase": false, "constructor": false}, {"identifier": "getClientAddress", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClientAddress()", "full_signature": "public String getClientAddress()", "class_method_signature": "RemotePeerBean.getClientAddress()", "testcase": false, "constructor": false}, {"identifier": "getLearnerType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLearnerType()", "full_signature": "public String getLearnerType()", "class_method_signature": "RemotePeerBean.getLearnerType()", "testcase": false, "constructor": false}, {"identifier": "isLeader", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isLeader()", "full_signature": "@Override public boolean isLeader()", "class_method_signature": "RemotePeerBean.isLeader()", "testcase": false, "constructor": false}], "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/RemotePeerBean.java"}, "focal_method": {"identifier": "getClientAddress", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getClientAddress() {\n        if (null == peer.clientAddr) {\n            return \"\";\n        }\n        return peer.clientAddr.getHostString() + \":\"\n                + peer.clientAddr.getPort();\n    }", "signature": "String getClientAddress()", "full_signature": "public String getClientAddress()", "class_method_signature": "RemotePeerBean.getClientAddress()", "testcase": false, "constructor": false, "invocations": ["getHostString", "getPort"]}, "repository": {"repo_id": 230430206, "url": "https://github.com/boomblog/zookeeper-vip2", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 10, "size": 3105, "license": "licensed"}}