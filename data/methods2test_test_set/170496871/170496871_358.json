{"test_class": {"identifier": "GmmModelTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/ml/src/test/java/org/apache/ignite/ml/clustering/gmm/GmmModelTest.java"}, "test_case": {"identifier": "testTwoComponents", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTwoComponents() {\n        Vector mean1 = VectorUtils.of(1., 2.);\n        DenseMatrix covariance1 = MatrixUtil.fromList(Arrays.asList(\n            VectorUtils.of(1, -0.25),\n            VectorUtils.of(-0.25, 1)),\n            true\n        );\n\n        Vector mean2 = VectorUtils.of(2., 1.);\n        DenseMatrix covariance2 = MatrixUtil.fromList(Arrays.asList(\n            VectorUtils.of(1, 0.5),\n            VectorUtils.of(0.5, 1)),\n            true\n        );\n\n        GmmModel gmm = new GmmModel(\n            VectorUtils.of(0.5, 0.5),\n            Arrays.asList(\n                new MultivariateGaussianDistribution(mean1, covariance1),\n                new MultivariateGaussianDistribution(mean2, covariance2)\n            )\n        );\n\n        Assert.assertEquals(0., gmm.predict(mean1), 0.01);\n        Assert.assertEquals(1., gmm.predict(mean2), 0.01);\n        Assert.assertEquals(0., gmm.predict(VectorUtils.of(1.5, 1.5)), 0.01);\n        Assert.assertEquals(1., gmm.predict(VectorUtils.of(3., 0.)), 0.01);\n    }", "signature": "void testTwoComponents()", "full_signature": "@Test public void testTwoComponents()", "class_method_signature": "GmmModelTest.testTwoComponents()", "testcase": true, "constructor": false, "invocations": ["of", "fromList", "asList", "of", "of", "of", "fromList", "asList", "of", "of", "of", "asList", "assertEquals", "predict", "assertEquals", "predict", "assertEquals", "predict", "of", "assertEquals", "predict", "of"]}, "focal_class": {"identifier": "GmmModel", "superclass": "extends DistributionMixture<MultivariateGaussianDistribution>", "interfaces": "implements IgniteModel<Vector, Double>,\n    DeployableObject", "fields": [{"original_string": "private static final long serialVersionUID = -4484174539118240037L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -4484174539118240037L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "GmmModel", "parameters": "(Vector componentProbs, List<MultivariateGaussianDistribution> distributions)", "modifiers": "public", "return": "", "signature": " GmmModel(Vector componentProbs, List<MultivariateGaussianDistribution> distributions)", "full_signature": "public  GmmModel(Vector componentProbs, List<MultivariateGaussianDistribution> distributions)", "class_method_signature": "GmmModel.GmmModel(Vector componentProbs, List<MultivariateGaussianDistribution> distributions)", "testcase": false, "constructor": true}, {"identifier": "predict", "parameters": "(Vector input)", "modifiers": "@Override public", "return": "Double", "signature": "Double predict(Vector input)", "full_signature": "@Override public Double predict(Vector input)", "class_method_signature": "GmmModel.predict(Vector input)", "testcase": false, "constructor": false}, {"identifier": "getDependencies", "parameters": "()", "modifiers": "@Override public", "return": "List<Object>", "signature": "List<Object> getDependencies()", "full_signature": "@Override public List<Object> getDependencies()", "class_method_signature": "GmmModel.getDependencies()", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/clustering/gmm/GmmModel.java"}, "focal_method": {"identifier": "predict", "parameters": "(Vector input)", "modifiers": "@Override public", "return": "Double", "body": "@Override public Double predict(Vector input) {\n        return (double)likelihood(input).maxElement().index();\n    }", "signature": "Double predict(Vector input)", "full_signature": "@Override public Double predict(Vector input)", "class_method_signature": "GmmModel.predict(Vector input)", "testcase": false, "constructor": false, "invocations": ["index", "maxElement", "likelihood"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}