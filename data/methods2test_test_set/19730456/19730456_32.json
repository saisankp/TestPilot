{"test_class": {"identifier": "ValueTest", "superclass": "", "interfaces": "", "fields": [], "file": "ethereumj-core/src/test/java/org/ethereum/util/ValueTest.java"}, "test_case": {"identifier": "testCmp", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCmp() {\n        Value val1 = new Value(\"hello\");\n        Value val2 = new Value(\"world\");\n\n        assertFalse(\"Expected values not to be equal\", val1.cmp(val2));\n\n        Value val3 = new Value(\"hello\");\n        Value val4 = new Value(\"hello\");\n\n        assertTrue(\"Expected values to be equal\", val3.cmp(val4));\n    }", "signature": "void testCmp()", "full_signature": "@Test public void testCmp()", "class_method_signature": "ValueTest.testCmp()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "cmp", "assertTrue", "cmp"]}, "focal_class": {"identifier": "Value", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Object value;", "modifier": "private", "type": "Object", "declarator": "value", "var_name": "value"}, {"original_string": "private byte[] rlp;", "modifier": "private", "type": "byte[]", "declarator": "rlp", "var_name": "rlp"}, {"original_string": "private byte[] sha3;", "modifier": "private", "type": "byte[]", "declarator": "sha3", "var_name": "sha3"}, {"original_string": "private boolean decoded = false;", "modifier": "private", "type": "boolean", "declarator": "decoded = false", "var_name": "decoded"}], "methods": [{"identifier": "fromRlpEncoded", "parameters": "(byte[] data)", "modifiers": "public static", "return": "Value", "signature": "Value fromRlpEncoded(byte[] data)", "full_signature": "public static Value fromRlpEncoded(byte[] data)", "class_method_signature": "Value.fromRlpEncoded(byte[] data)", "testcase": false, "constructor": false}, {"identifier": "Value", "parameters": "()", "modifiers": "public", "return": "", "signature": " Value()", "full_signature": "public  Value()", "class_method_signature": "Value.Value()", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "(byte[] rlp)", "modifiers": "public", "return": "void", "signature": "void init(byte[] rlp)", "full_signature": "public void init(byte[] rlp)", "class_method_signature": "Value.init(byte[] rlp)", "testcase": false, "constructor": false}, {"identifier": "Value", "parameters": "(Object obj)", "modifiers": "public", "return": "", "signature": " Value(Object obj)", "full_signature": "public  Value(Object obj)", "class_method_signature": "Value.Value(Object obj)", "testcase": false, "constructor": true}, {"identifier": "withHash", "parameters": "(byte[] hash)", "modifiers": "public", "return": "Value", "signature": "Value withHash(byte[] hash)", "full_signature": "public Value withHash(byte[] hash)", "class_method_signature": "Value.withHash(byte[] hash)", "testcase": false, "constructor": false}, {"identifier": "asObj", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object asObj()", "full_signature": "public Object asObj()", "class_method_signature": "Value.asObj()", "testcase": false, "constructor": false}, {"identifier": "asList", "parameters": "()", "modifiers": "public", "return": "List<Object>", "signature": "List<Object> asList()", "full_signature": "public List<Object> asList()", "class_method_signature": "Value.asList()", "testcase": false, "constructor": false}, {"identifier": "asInt", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int asInt()", "full_signature": "public int asInt()", "class_method_signature": "Value.asInt()", "testcase": false, "constructor": false}, {"identifier": "asLong", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long asLong()", "full_signature": "public long asLong()", "class_method_signature": "Value.asLong()", "testcase": false, "constructor": false}, {"identifier": "asBigInt", "parameters": "()", "modifiers": "public", "return": "BigInteger", "signature": "BigInteger asBigInt()", "full_signature": "public BigInteger asBigInt()", "class_method_signature": "Value.asBigInt()", "testcase": false, "constructor": false}, {"identifier": "asString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String asString()", "full_signature": "public String asString()", "class_method_signature": "Value.asString()", "testcase": false, "constructor": false}, {"identifier": "asBytes", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] asBytes()", "full_signature": "public byte[] asBytes()", "class_method_signature": "Value.asBytes()", "testcase": false, "constructor": false}, {"identifier": "getHex", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getHex()", "full_signature": "public String getHex()", "class_method_signature": "Value.getHex()", "testcase": false, "constructor": false}, {"identifier": "getData", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getData()", "full_signature": "public byte[] getData()", "class_method_signature": "Value.getData()", "testcase": false, "constructor": false}, {"identifier": "asSlice", "parameters": "()", "modifiers": "public", "return": "int[]", "signature": "int[] asSlice()", "full_signature": "public int[] asSlice()", "class_method_signature": "Value.asSlice()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int index)", "modifiers": "public", "return": "Value", "signature": "Value get(int index)", "full_signature": "public Value get(int index)", "class_method_signature": "Value.get(int index)", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void decode()", "full_signature": "public void decode()", "class_method_signature": "Value.decode()", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] encode()", "full_signature": "public byte[] encode()", "class_method_signature": "Value.encode()", "testcase": false, "constructor": false}, {"identifier": "hash", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] hash()", "full_signature": "public byte[] hash()", "class_method_signature": "Value.hash()", "testcase": false, "constructor": false}, {"identifier": "cmp", "parameters": "(Value o)", "modifiers": "public", "return": "boolean", "signature": "boolean cmp(Value o)", "full_signature": "public boolean cmp(Value o)", "class_method_signature": "Value.cmp(Value o)", "testcase": false, "constructor": false}, {"identifier": "isList", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isList()", "full_signature": "public boolean isList()", "class_method_signature": "Value.isList()", "testcase": false, "constructor": false}, {"identifier": "isString", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isString()", "full_signature": "public boolean isString()", "class_method_signature": "Value.isString()", "testcase": false, "constructor": false}, {"identifier": "isInt", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isInt()", "full_signature": "public boolean isInt()", "class_method_signature": "Value.isInt()", "testcase": false, "constructor": false}, {"identifier": "isLong", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isLong()", "full_signature": "public boolean isLong()", "class_method_signature": "Value.isLong()", "testcase": false, "constructor": false}, {"identifier": "isBigInt", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isBigInt()", "full_signature": "public boolean isBigInt()", "class_method_signature": "Value.isBigInt()", "testcase": false, "constructor": false}, {"identifier": "isBytes", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isBytes()", "full_signature": "public boolean isBytes()", "class_method_signature": "Value.isBytes()", "testcase": false, "constructor": false}, {"identifier": "isReadableString", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isReadableString()", "full_signature": "public boolean isReadableString()", "class_method_signature": "Value.isReadableString()", "testcase": false, "constructor": false}, {"identifier": "isHexString", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isHexString()", "full_signature": "public boolean isHexString()", "class_method_signature": "Value.isHexString()", "testcase": false, "constructor": false}, {"identifier": "isHashCode", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isHashCode()", "full_signature": "public boolean isHashCode()", "class_method_signature": "Value.isHashCode()", "testcase": false, "constructor": false}, {"identifier": "isNull", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNull()", "full_signature": "public boolean isNull()", "class_method_signature": "Value.isNull()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "Value.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int length()", "full_signature": "public int length()", "class_method_signature": "Value.length()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "Value.toString()", "testcase": false, "constructor": false}, {"identifier": "countBranchNodes", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int countBranchNodes()", "full_signature": "public int countBranchNodes()", "class_method_signature": "Value.countBranchNodes()", "testcase": false, "constructor": false}], "file": "ethereumj-core/src/main/java/org/ethereum/util/Value.java"}, "focal_method": {"identifier": "cmp", "parameters": "(Value o)", "modifiers": "public", "return": "boolean", "body": "public boolean cmp(Value o) {\n        return DeepEquals.deepEquals(this, o);\n    }", "signature": "boolean cmp(Value o)", "full_signature": "public boolean cmp(Value o)", "class_method_signature": "Value.cmp(Value o)", "testcase": false, "constructor": false, "invocations": ["deepEquals"]}, "repository": {"repo_id": 19730456, "url": "https://github.com/ethereum/ethereumj", "language": "Java", "is_fork": false, "fork_count": 1034, "stargazer_count": 2058, "size": 47979, "license": "licensed"}}