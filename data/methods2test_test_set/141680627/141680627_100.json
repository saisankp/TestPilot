{"test_class": {"identifier": "ThemeUtilTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [], "file": "MSDKUIKit/MSDKUILib/src/test/java/com/here/msdkui/common/ThemeUtilTest.java"}, "test_case": {"identifier": "testGetColor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetColor() {\n        int color = ThemeUtil.getColor(getApplicationContext(), R.attr.colorAccentLight);\n        assertNotSame(0, color);\n        color = ThemeUtil.getColor(getApplicationContext(), R.attr.actionBarDivider);\n        assertNotSame(Color.CYAN, color);  // in case of error\n    }", "signature": "void testGetColor()", "full_signature": "@Test public void testGetColor()", "class_method_signature": "ThemeUtilTest.testGetColor()", "testcase": true, "constructor": false, "invocations": ["getColor", "getApplicationContext", "assertNotSame", "getColor", "getApplicationContext", "assertNotSame"]}, "focal_class": {"identifier": "ThemeUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int[] DESIGN_THEME = R.styleable.DarkTheme;", "modifier": "private static final", "type": "int[]", "declarator": "DESIGN_THEME = R.styleable.DarkTheme", "var_name": "DESIGN_THEME"}], "methods": [{"identifier": "ThemeUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " ThemeUtil()", "full_signature": "private  ThemeUtil()", "class_method_signature": "ThemeUtil.ThemeUtil()", "testcase": false, "constructor": true}, {"identifier": "getDrawable", "parameters": "(Context context, final TypedArray typedArray, final int index)", "modifiers": "public static", "return": "Drawable", "signature": "Drawable getDrawable(Context context, final TypedArray typedArray, final int index)", "full_signature": "public static Drawable getDrawable(Context context, final TypedArray typedArray, final int index)", "class_method_signature": "ThemeUtil.getDrawable(Context context, final TypedArray typedArray, final int index)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(final TypedArray typedArray, final int index)", "modifiers": "public static", "return": "String", "signature": "String getString(final TypedArray typedArray, final int index)", "full_signature": "public static String getString(final TypedArray typedArray, final int index)", "class_method_signature": "ThemeUtil.getString(final TypedArray typedArray, final int index)", "testcase": false, "constructor": false}, {"identifier": "getColor", "parameters": "(Context context, int colorAttribute)", "modifiers": "@ColorInt public static", "return": "int", "signature": "int getColor(Context context, int colorAttribute)", "full_signature": "@ColorInt public static int getColor(Context context, int colorAttribute)", "class_method_signature": "ThemeUtil.getColor(Context context, int colorAttribute)", "testcase": false, "constructor": false}, {"identifier": "isColor", "parameters": "(TypedValue value)", "modifiers": "private static", "return": "boolean", "signature": "boolean isColor(TypedValue value)", "full_signature": "private static boolean isColor(TypedValue value)", "class_method_signature": "ThemeUtil.isColor(TypedValue value)", "testcase": false, "constructor": false}, {"identifier": "getColorFromStyleable", "parameters": "(Context context, int colorStyleable)", "modifiers": "private static", "return": "int", "signature": "int getColorFromStyleable(Context context, int colorStyleable)", "full_signature": "private static int getColorFromStyleable(Context context, int colorStyleable)", "class_method_signature": "ThemeUtil.getColorFromStyleable(Context context, int colorStyleable)", "testcase": false, "constructor": false}, {"identifier": "styleableForAttr", "parameters": "(int attribute)", "modifiers": "private static", "return": "int", "signature": "int styleableForAttr(int attribute)", "full_signature": "private static int styleableForAttr(int attribute)", "class_method_signature": "ThemeUtil.styleableForAttr(int attribute)", "testcase": false, "constructor": false}, {"identifier": "getStyleId", "parameters": "(Context context, int themeAttribute)", "modifiers": "public static", "return": "int", "signature": "int getStyleId(Context context, int themeAttribute)", "full_signature": "public static int getStyleId(Context context, int themeAttribute)", "class_method_signature": "ThemeUtil.getStyleId(Context context, int themeAttribute)", "testcase": false, "constructor": false}], "file": "MSDKUIKit/MSDKUILib/src/main/java/com/here/msdkui/common/ThemeUtil.java"}, "focal_method": {"identifier": "getColor", "parameters": "(Context context, int colorAttribute)", "modifiers": "@ColorInt public static", "return": "int", "body": "@ColorInt\n    public static int getColor(Context context, int colorAttribute) {\n        final TypedValue outValue = new TypedValue();\n        context.getTheme().resolveAttribute(colorAttribute, outValue, true);\n        if (isColor(outValue)) {\n            return outValue.data;\n        } else if (outValue.type == TypedValue.TYPE_REFERENCE || outValue.type == TypedValue.TYPE_STRING) {\n            try {\n                final ColorStateList colors = ContextCompat.getColorStateList(context, outValue.resourceId);\n                return colors.getDefaultColor();\n            } catch (Resources.NotFoundException ex) {\n                Log.d(ThemeUtil.class.getName(), ex.getMessage());\n            }\n        } else if (outValue.type == TypedValue.TYPE_NULL) {\n            return getColorFromStyleable(context, styleableForAttr(colorAttribute));\n        }\n        // default to cyan in case of errors\n        return Color.CYAN;\n    }", "signature": "int getColor(Context context, int colorAttribute)", "full_signature": "@ColorInt public static int getColor(Context context, int colorAttribute)", "class_method_signature": "ThemeUtil.getColor(Context context, int colorAttribute)", "testcase": false, "constructor": false, "invocations": ["resolveAttribute", "getTheme", "isColor", "getColorStateList", "getDefaultColor", "d", "getName", "getMessage", "getColorFromStyleable", "styleableForAttr"]}, "repository": {"repo_id": 141680627, "url": "https://github.com/heremaps/msdkui-android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 35, "size": 5559, "license": "licensed"}}