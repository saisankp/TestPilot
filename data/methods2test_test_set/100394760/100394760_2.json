{"test_class": {"identifier": "ObjectPropertyFieldTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String propName = \"dummy\";", "modifier": "private static final", "type": "String", "declarator": "propName = \"dummy\"", "var_name": "propName"}], "file": "config/src/test/java/io/scalecube/config/ObjectPropertyFieldTest.java"}, "test_case": {"identifier": "testListObjectPropertyField", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void testListObjectPropertyField() throws Exception {\n    TypedListConfigClass instance = new TypedListConfigClass();\n\n    Class<TypedListConfigClass> clazz = TypedListConfigClass.class;\n    ObjectPropertyField field_integerList =\n        new ObjectPropertyField(clazz.getDeclaredField(\"integerList\"), propName);\n\n    field_integerList.applyValueParser(instance, \"1,2,3\");\n\n    assertEquals(Stream.of(1, 2, 3).collect(Collectors.toList()), instance.integerList);\n  }", "signature": "void testListObjectPropertyField()", "full_signature": "@Test void testListObjectPropertyField()", "class_method_signature": "ObjectPropertyFieldTest.testListObjectPropertyField()", "testcase": true, "constructor": false, "invocations": ["getDeclaredField", "applyValueParser", "assertEquals", "collect", "of", "toList"]}, "focal_class": {"identifier": "ObjectPropertyField", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Field field;", "modifier": "private final", "type": "Field", "declarator": "field", "var_name": "field"}, {"original_string": "private final String propertyName;", "modifier": "private final", "type": "String", "declarator": "propertyName", "var_name": "propertyName"}, {"original_string": "private final Function<String, ?> valueParser;", "modifier": "private final", "type": "Function<String, ?>", "declarator": "valueParser", "var_name": "valueParser"}], "methods": [{"identifier": "ObjectPropertyField", "parameters": "(Field field, String propertyName)", "modifiers": "", "return": "", "signature": " ObjectPropertyField(Field field, String propertyName)", "full_signature": "  ObjectPropertyField(Field field, String propertyName)", "class_method_signature": "ObjectPropertyField.ObjectPropertyField(Field field, String propertyName)", "testcase": false, "constructor": true}, {"identifier": "isList", "parameters": "(ParameterizedType paramType)", "modifiers": "private", "return": "boolean", "signature": "boolean isList(ParameterizedType paramType)", "full_signature": "private boolean isList(ParameterizedType paramType)", "class_method_signature": "ObjectPropertyField.isList(ParameterizedType paramType)", "testcase": false, "constructor": false}, {"identifier": "isMultimap", "parameters": "(ParameterizedType paramType)", "modifiers": "private", "return": "boolean", "signature": "boolean isMultimap(ParameterizedType paramType)", "full_signature": "private boolean isMultimap(ParameterizedType paramType)", "class_method_signature": "ObjectPropertyField.isMultimap(ParameterizedType paramType)", "testcase": false, "constructor": false}, {"identifier": "getValueParser", "parameters": "(Type type)", "modifiers": "private", "return": "Function<String, ?>", "signature": "Function<String, ?> getValueParser(Type type)", "full_signature": "private Function<String, ?> getValueParser(Type type)", "class_method_signature": "ObjectPropertyField.getValueParser(Type type)", "testcase": false, "constructor": false}, {"identifier": "getPropertyName", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getPropertyName()", "full_signature": " String getPropertyName()", "class_method_signature": "ObjectPropertyField.getPropertyName()", "testcase": false, "constructor": false}, {"identifier": "applyValueParser", "parameters": "(Object instance, String value)", "modifiers": "", "return": "void", "signature": "void applyValueParser(Object instance, String value)", "full_signature": " void applyValueParser(Object instance, String value)", "class_method_signature": "ObjectPropertyField.applyValueParser(Object instance, String value)", "testcase": false, "constructor": false}], "file": "config/src/main/java/io/scalecube/config/ObjectPropertyField.java"}, "focal_method": {"identifier": "applyValueParser", "parameters": "(Object instance, String value)", "modifiers": "", "return": "void", "body": "void applyValueParser(Object instance, String value) {\n    try {\n      field.set(instance, valueParser.apply(value));\n    } catch (IllegalAccessException e) {\n      throw ThrowableUtil.propagate(e);\n    }\n  }", "signature": "void applyValueParser(Object instance, String value)", "full_signature": " void applyValueParser(Object instance, String value)", "class_method_signature": "ObjectPropertyField.applyValueParser(Object instance, String value)", "testcase": false, "constructor": false, "invocations": ["set", "apply", "propagate"]}, "repository": {"repo_id": 100394760, "url": "https://github.com/scalecube/scalecube-config", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 14, "size": 777, "license": "licensed"}}