{"test_class": {"identifier": "JerkKinematicsTest", "superclass": "", "interfaces": "implements UtilityClassTest", "fields": [], "file": "OcavaCore/src/test/java/com/ocadotechnology/physics/JerkKinematicsTest.java"}, "test_case": {"identifier": "getFinalVelocity_whenSuitableValuesGiven_thenGivesCorrectAnswer", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void getFinalVelocity_whenSuitableValuesGiven_thenGivesCorrectAnswer() {\n        double velocity = JerkKinematics.getFinalVelocity(5, 1, 7, 13);\n        Assertions.assertEquals(609.5, velocity);\n    }", "signature": "void getFinalVelocity_whenSuitableValuesGiven_thenGivesCorrectAnswer()", "full_signature": "@Test void getFinalVelocity_whenSuitableValuesGiven_thenGivesCorrectAnswer()", "class_method_signature": "JerkKinematicsTest.getFinalVelocity_whenSuitableValuesGiven_thenGivesCorrectAnswer()", "testcase": true, "constructor": false, "invocations": ["getFinalVelocity", "assertEquals"]}, "focal_class": {"identifier": "JerkKinematics", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "JerkKinematics", "parameters": "()", "modifiers": "private", "return": "", "signature": " JerkKinematics()", "full_signature": "private  JerkKinematics()", "class_method_signature": "JerkKinematics.JerkKinematics()", "testcase": false, "constructor": true}, {"identifier": "getDisplacement", "parameters": "(double initialVelocity, double initialAcceleration, double jerk, double time)", "modifiers": "public static", "return": "double", "signature": "double getDisplacement(double initialVelocity, double initialAcceleration, double jerk, double time)", "full_signature": "public static double getDisplacement(double initialVelocity, double initialAcceleration, double jerk, double time)", "class_method_signature": "JerkKinematics.getDisplacement(double initialVelocity, double initialAcceleration, double jerk, double time)", "testcase": false, "constructor": false}, {"identifier": "getTimeToReachDisplacement", "parameters": "(double displacement, double initialVelocity, double initialAcceleration, double jerk)", "modifiers": "public static", "return": "double", "signature": "double getTimeToReachDisplacement(double displacement, double initialVelocity, double initialAcceleration, double jerk)", "full_signature": "public static double getTimeToReachDisplacement(double displacement, double initialVelocity, double initialAcceleration, double jerk)", "class_method_signature": "JerkKinematics.getTimeToReachDisplacement(double displacement, double initialVelocity, double initialAcceleration, double jerk)", "testcase": false, "constructor": false}, {"identifier": "getFinalVelocity", "parameters": "(double initialVelocity, double initialAcceleration, double jerk, double time)", "modifiers": "public static", "return": "double", "signature": "double getFinalVelocity(double initialVelocity, double initialAcceleration, double jerk, double time)", "full_signature": "public static double getFinalVelocity(double initialVelocity, double initialAcceleration, double jerk, double time)", "class_method_signature": "JerkKinematics.getFinalVelocity(double initialVelocity, double initialAcceleration, double jerk, double time)", "testcase": false, "constructor": false}, {"identifier": "getTimeToReachVelocity", "parameters": "(double initialVelocity, double targetVelocity, double initialAcceleration, double jerk)", "modifiers": "public static", "return": "double", "signature": "double getTimeToReachVelocity(double initialVelocity, double targetVelocity, double initialAcceleration, double jerk)", "full_signature": "public static double getTimeToReachVelocity(double initialVelocity, double targetVelocity, double initialAcceleration, double jerk)", "class_method_signature": "JerkKinematics.getTimeToReachVelocity(double initialVelocity, double targetVelocity, double initialAcceleration, double jerk)", "testcase": false, "constructor": false}], "file": "OcavaCore/src/main/java/com/ocadotechnology/physics/JerkKinematics.java"}, "focal_method": {"identifier": "getFinalVelocity", "parameters": "(double initialVelocity, double initialAcceleration, double jerk, double time)", "modifiers": "public static", "return": "double", "body": "public static double getFinalVelocity(double initialVelocity, double initialAcceleration, double jerk, double time) {\n        return initialVelocity + initialAcceleration * time + (1/2d) * jerk * Math.pow(time, 2);\n    }", "signature": "double getFinalVelocity(double initialVelocity, double initialAcceleration, double jerk, double time)", "full_signature": "public static double getFinalVelocity(double initialVelocity, double initialAcceleration, double jerk, double time)", "class_method_signature": "JerkKinematics.getFinalVelocity(double initialVelocity, double initialAcceleration, double jerk, double time)", "testcase": false, "constructor": false, "invocations": ["pow"]}, "repository": {"repo_id": 99997703, "url": "https://github.com/ocadotechnology/Ocava", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 16, "size": 1137, "license": "licensed"}}