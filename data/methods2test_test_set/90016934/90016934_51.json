{"test_class": {"identifier": "ProcessingUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/fr/gael/dhus/datastore/processing/ProcessingUtilsTest.java"}, "test_case": {"identifier": "getScale_failure_issue_1125", "parameters": "()", "modifiers": "@Test(expectedExceptions = InconsistentImageScale.class) public", "return": "void", "body": "@Test(expectedExceptions = InconsistentImageScale.class)\n   public void getScale_failure_issue_1125() throws InconsistentImageScale\n   {\n      // with updated algorithm, If X<=2 and Y=10000 scale become inconsistent.\n      ProcessingUtils.getScale(2, 10000, 64, 64);\n   }", "signature": "void getScale_failure_issue_1125()", "full_signature": "@Test(expectedExceptions = InconsistentImageScale.class) public void getScale_failure_issue_1125()", "class_method_signature": "ProcessingUtilsTest.getScale_failure_issue_1125()", "testcase": true, "constructor": false, "invocations": ["getScale"]}, "focal_class": {"identifier": "ProcessingUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LogManager.getLogger(ProcessingUtils.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LogManager.getLogger(ProcessingUtils.class)", "var_name": "LOGGER"}, {"original_string": "public static final String THUMBNAIL_SUFFIX = \"-th.jpg\";", "modifier": "public static final", "type": "String", "declarator": "THUMBNAIL_SUFFIX = \"-th.jpg\"", "var_name": "THUMBNAIL_SUFFIX"}, {"original_string": "public static final String QUICKLOOK_SUFFIX = \"-ql.jpg\";", "modifier": "public static final", "type": "String", "declarator": "QUICKLOOK_SUFFIX = \"-ql.jpg\"", "var_name": "QUICKLOOK_SUFFIX"}, {"original_string": "private static final String METADATA_NAMESPACE = \"http://www.gael.fr/dhus#\";", "modifier": "private static final", "type": "String", "declarator": "METADATA_NAMESPACE = \"http://www.gael.fr/dhus#\"", "var_name": "METADATA_NAMESPACE"}, {"original_string": "private final static String MIME_PLAIN_TEXT = \"plain/text\";", "modifier": "private final static", "type": "String", "declarator": "MIME_PLAIN_TEXT = \"plain/text\"", "var_name": "MIME_PLAIN_TEXT"}, {"original_string": "private final static String PROPERTY_METADATA_EXTRACTOR = \"metadataExtractor\";", "modifier": "private final static", "type": "String", "declarator": "PROPERTY_METADATA_EXTRACTOR = \"metadataExtractor\"", "var_name": "PROPERTY_METADATA_EXTRACTOR"}, {"original_string": "private final static String MIME_APPLICATION_GML = \"application/gml+xml\";", "modifier": "private final static", "type": "String", "declarator": "MIME_APPLICATION_GML = \"application/gml+xml\"", "var_name": "MIME_APPLICATION_GML"}], "methods": [{"identifier": "ProcessingUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " ProcessingUtils()", "full_signature": "private  ProcessingUtils()", "class_method_signature": "ProcessingUtils.ProcessingUtils()", "testcase": false, "constructor": true}, {"identifier": "resizeImage", "parameters": "(RenderedImage image, int width, int height)", "modifiers": "public static", "return": "RenderedImage", "signature": "RenderedImage resizeImage(RenderedImage image, int width, int height)", "full_signature": "public static RenderedImage resizeImage(RenderedImage image, int width, int height)", "class_method_signature": "ProcessingUtils.resizeImage(RenderedImage image, int width, int height)", "testcase": false, "constructor": false}, {"identifier": "getScale", "parameters": "(int orig_width, int orig_height, int width, int height)", "modifiers": "static", "return": "float", "signature": "float getScale(int orig_width, int orig_height, int width, int height)", "full_signature": "static float getScale(int orig_width, int orig_height, int width, int height)", "class_method_signature": "ProcessingUtils.getScale(int orig_width, int orig_height, int width, int height)", "testcase": false, "constructor": false}, {"identifier": "getNodeFromPath", "parameters": "(String location)", "modifiers": "public static", "return": "DrbNode", "signature": "DrbNode getNodeFromPath(String location)", "full_signature": "public static DrbNode getNodeFromPath(String location)", "class_method_signature": "ProcessingUtils.getNodeFromPath(String location)", "testcase": false, "constructor": false}, {"identifier": "checkPathElement", "parameters": "(String elt)", "modifiers": "static", "return": "String", "signature": "String checkPathElement(String elt)", "full_signature": "static String checkPathElement(String elt)", "class_method_signature": "ProcessingUtils.checkPathElement(String elt)", "testcase": false, "constructor": false}, {"identifier": "getClassFromNode", "parameters": "(DrbNode node)", "modifiers": "public static", "return": "DrbCortexItemClass", "signature": "DrbCortexItemClass getClassFromNode(DrbNode node)", "full_signature": "public static DrbCortexItemClass getClassFromNode(DrbNode node)", "class_method_signature": "ProcessingUtils.getClassFromNode(DrbNode node)", "testcase": false, "constructor": false}, {"identifier": "getClassLabelFromNode", "parameters": "(DrbNode node)", "modifiers": "public static", "return": "String", "signature": "String getClassLabelFromNode(DrbNode node)", "full_signature": "public static String getClassLabelFromNode(DrbNode node)", "class_method_signature": "ProcessingUtils.getClassLabelFromNode(DrbNode node)", "testcase": false, "constructor": false}, {"identifier": "getClassFromUrl", "parameters": "(URL url)", "modifiers": "public static", "return": "DrbCortexItemClass", "signature": "DrbCortexItemClass getClassFromUrl(URL url)", "full_signature": "public static DrbCortexItemClass getClassFromUrl(URL url)", "class_method_signature": "ProcessingUtils.getClassFromUrl(URL url)", "testcase": false, "constructor": false}, {"identifier": "getSuperClass", "parameters": "(String URI)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getSuperClass(String URI)", "full_signature": "public static List<String> getSuperClass(String URI)", "class_method_signature": "ProcessingUtils.getSuperClass(String URI)", "testcase": false, "constructor": false}, {"identifier": "getSubClass", "parameters": "(String URI)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getSubClass(String URI)", "full_signature": "public static List<String> getSubClass(String URI)", "class_method_signature": "ProcessingUtils.getSubClass(String URI)", "testcase": false, "constructor": false}, {"identifier": "getItemClassUri", "parameters": "(DrbCortexItemClass cl)", "modifiers": "public static", "return": "String", "signature": "String getItemClassUri(DrbCortexItemClass cl)", "full_signature": "public static String getItemClassUri(DrbCortexItemClass cl)", "class_method_signature": "ProcessingUtils.getItemClassUri(DrbCortexItemClass cl)", "testcase": false, "constructor": false}, {"identifier": "getAllClasses", "parameters": "()", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getAllClasses()", "full_signature": "public static List<String> getAllClasses()", "class_method_signature": "ProcessingUtils.getAllClasses()", "testcase": false, "constructor": false}, {"identifier": "checkGMLFootprint", "parameters": "(String footprint)", "modifiers": "public static", "return": "boolean", "signature": "boolean checkGMLFootprint(String footprint)", "full_signature": "public static boolean checkGMLFootprint(String footprint)", "class_method_signature": "ProcessingUtils.checkGMLFootprint(String footprint)", "testcase": false, "constructor": false}, {"identifier": "checkJTSFootprint", "parameters": "(String footprint)", "modifiers": "public static", "return": "boolean", "signature": "boolean checkJTSFootprint(String footprint)", "full_signature": "public static boolean checkJTSFootprint(String footprint)", "class_method_signature": "ProcessingUtils.checkJTSFootprint(String footprint)", "testcase": false, "constructor": false}, {"identifier": "getIndexesFrom", "parameters": "(URL url)", "modifiers": "public static", "return": "List<MetadataIndex>", "signature": "List<MetadataIndex> getIndexesFrom(URL url)", "full_signature": "public static List<MetadataIndex> getIndexesFrom(URL url)", "class_method_signature": "ProcessingUtils.getIndexesFrom(URL url)", "testcase": false, "constructor": false}], "file": "core/src/main/java/fr/gael/dhus/datastore/processing/ProcessingUtils.java"}, "focal_method": {"identifier": "getScale", "parameters": "(int orig_width, int orig_height, int width, int height)", "modifiers": "static", "return": "float", "body": "static float getScale(int orig_width, int orig_height, int width, int height)\n         throws InconsistentImageScale\n   {\n      float orig_ratio=(float)orig_width/orig_height;\n      float target_pix_number = (float)width*height;\n      double target_height = Math.sqrt(target_pix_number/orig_ratio);\n      double target_width = target_height * orig_ratio;\n      if ((target_height < 1) || (target_width) < 1)\n      {\n         throw new InconsistentImageScale(\n               String.format(\"Wrong image scale (%.2f,%.2f)\", target_width, target_height));\n      }\n      float scale = (float)(target_height/orig_height);\n      return scale;\n   }", "signature": "float getScale(int orig_width, int orig_height, int width, int height)", "full_signature": "static float getScale(int orig_width, int orig_height, int width, int height)", "class_method_signature": "ProcessingUtils.getScale(int orig_width, int orig_height, int width, int height)", "testcase": false, "constructor": false, "invocations": ["sqrt", "format"]}, "repository": {"repo_id": 90016934, "url": "https://github.com/SentinelDataHub/dhus-core", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 5, "size": 2371, "license": "licensed"}}