{"test_class": {"identifier": "RetryBoundedBackOffTest", "superclass": "", "interfaces": "", "fields": [], "file": "util/src/test/java/com/google/cloud/hadoop/util/RetryBoundedBackOffTest.java"}, "test_case": {"identifier": "stopsAfterAttempts", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void stopsAfterAttempts() throws Exception {\n    BackOff backoff = new RetryBoundedBackOff(5, new BackOffTester());\n    for (int i = 0; i < 5; i++) {\n      assertThat(i + 1).isEqualTo(backoff.nextBackOffMillis());\n    }\n    assertThat(backoff.nextBackOffMillis()).isEqualTo(BackOff.STOP);\n    assertThat(backoff.nextBackOffMillis()).isEqualTo(BackOff.STOP);\n  }", "signature": "void stopsAfterAttempts()", "full_signature": "@Test public void stopsAfterAttempts()", "class_method_signature": "RetryBoundedBackOffTest.stopsAfterAttempts()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "nextBackOffMillis", "isEqualTo", "assertThat", "nextBackOffMillis", "isEqualTo", "assertThat", "nextBackOffMillis"]}, "focal_class": {"identifier": "RetryBoundedBackOff", "superclass": "", "interfaces": "implements BackOff", "fields": [{"original_string": "private int retriesAttempted = 0;", "modifier": "private", "type": "int", "declarator": "retriesAttempted = 0", "var_name": "retriesAttempted"}, {"original_string": "private final int maxRetries;", "modifier": "private final", "type": "int", "declarator": "maxRetries", "var_name": "maxRetries"}, {"original_string": "private BackOff backoff;", "modifier": "private", "type": "BackOff", "declarator": "backoff", "var_name": "backoff"}], "methods": [{"identifier": "RetryBoundedBackOff", "parameters": "(int maxRetries, BackOff backoff)", "modifiers": "public", "return": "", "signature": " RetryBoundedBackOff(int maxRetries, BackOff backoff)", "full_signature": "public  RetryBoundedBackOff(int maxRetries, BackOff backoff)", "class_method_signature": "RetryBoundedBackOff.RetryBoundedBackOff(int maxRetries, BackOff backoff)", "testcase": false, "constructor": true}, {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "RetryBoundedBackOff.reset()", "testcase": false, "constructor": false}, {"identifier": "nextBackOffMillis", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long nextBackOffMillis()", "full_signature": "@Override public long nextBackOffMillis()", "class_method_signature": "RetryBoundedBackOff.nextBackOffMillis()", "testcase": false, "constructor": false}], "file": "util/src/main/java/com/google/cloud/hadoop/util/RetryBoundedBackOff.java"}, "focal_method": {"identifier": "nextBackOffMillis", "parameters": "()", "modifiers": "@Override public", "return": "long", "body": "@Override\n  public long nextBackOffMillis() throws IOException {\n    if (retriesAttempted >= maxRetries) {\n      return BackOff.STOP;\n    }\n    long next = backoff.nextBackOffMillis();\n    if (next == BackOff.STOP) {\n      return BackOff.STOP;\n    }\n    retriesAttempted++;\n    return next;\n  }", "signature": "long nextBackOffMillis()", "full_signature": "@Override public long nextBackOffMillis()", "class_method_signature": "RetryBoundedBackOff.nextBackOffMillis()", "testcase": false, "constructor": false, "invocations": ["nextBackOffMillis"]}, "repository": {"repo_id": 19684359, "url": "https://github.com/GoogleCloudDataproc/bigdata-interop", "stars": 178, "created": "5/12/2014 3:11:55 AM +00:00", "updates": "2020-01-23T23:10:40+00:00", "fork": "False", "license": "licensed"}}