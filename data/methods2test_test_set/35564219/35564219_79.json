{"test_class": {"identifier": "ImageViewTargetTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [], "file": "library/src/test/java/com/climate/mirage/targets/ImageViewTargetTest.java"}, "test_case": {"identifier": "testOnResult", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnResult() {\n        ImageView imageView = new ImageView(RuntimeEnvironment.application);\n        ImageViewTarget target = new ImageViewTarget(imageView);\n        target.placeHolder(new ColorDrawable(Color.BLUE));\n        target.onPreparingLoad();\n        target.onResult(Bitmap.createBitmap(200, 200, Bitmap.Config.ARGB_8888),\n                Mirage.Source.EXTERNAL, new MirageRequest());\n\n\n        imageView = new ImageView(RuntimeEnvironment.application);\n        target = new ImageViewTarget(imageView);\n        target.placeHolder(new ColorDrawable(Color.BLUE));\n        target.fade();\n        target.onPreparingLoad();\n        target.onResult(Bitmap.createBitmap(200, 200, Bitmap.Config.ARGB_8888),\n                Mirage.Source.EXTERNAL, new MirageRequest());\n    }", "signature": "void testOnResult()", "full_signature": "@Test public void testOnResult()", "class_method_signature": "ImageViewTargetTest.testOnResult()", "testcase": true, "constructor": false, "invocations": ["placeHolder", "onPreparingLoad", "onResult", "createBitmap", "placeHolder", "fade", "onPreparingLoad", "onResult", "createBitmap"]}, "focal_class": {"identifier": "ImageViewTarget", "superclass": "extends ViewTarget<ImageView>", "interfaces": "", "fields": [], "methods": [{"identifier": "ImageViewTarget", "parameters": "(ImageView imageView)", "modifiers": "public", "return": "", "signature": " ImageViewTarget(ImageView imageView)", "full_signature": "public  ImageViewTarget(ImageView imageView)", "class_method_signature": "ImageViewTarget.ImageViewTarget(ImageView imageView)", "testcase": false, "constructor": true}, {"identifier": "ImageViewTarget", "parameters": "(MirageRequest request, ImageView imageView)", "modifiers": "public", "return": "", "signature": " ImageViewTarget(MirageRequest request, ImageView imageView)", "full_signature": "public  ImageViewTarget(MirageRequest request, ImageView imageView)", "class_method_signature": "ImageViewTarget.ImageViewTarget(MirageRequest request, ImageView imageView)", "testcase": false, "constructor": true}, {"identifier": "onPreparingLoad", "parameters": "(ImageView view)", "modifiers": "@Override protected", "return": "void", "signature": "void onPreparingLoad(ImageView view)", "full_signature": "@Override protected void onPreparingLoad(ImageView view)", "class_method_signature": "ImageViewTarget.onPreparingLoad(ImageView view)", "testcase": false, "constructor": false}, {"identifier": "onResult", "parameters": "(ImageView view, Drawable drawable, Mirage.Source source, MirageRequest request)", "modifiers": "@Override protected", "return": "void", "signature": "void onResult(ImageView view, Drawable drawable, Mirage.Source source, MirageRequest request)", "full_signature": "@Override protected void onResult(ImageView view, Drawable drawable, Mirage.Source source, MirageRequest request)", "class_method_signature": "ImageViewTarget.onResult(ImageView view, Drawable drawable, Mirage.Source source, MirageRequest request)", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(ImageView view, Exception e, Mirage.Source source, MirageRequest request)", "modifiers": "@Override protected", "return": "void", "signature": "void onError(ImageView view, Exception e, Mirage.Source source, MirageRequest request)", "full_signature": "@Override protected void onError(ImageView view, Exception e, Mirage.Source source, MirageRequest request)", "class_method_signature": "ImageViewTarget.onError(ImageView view, Exception e, Mirage.Source source, MirageRequest request)", "testcase": false, "constructor": false}, {"identifier": "fade", "parameters": "()", "modifiers": "@Override public", "return": "ViewTarget<ImageView>", "signature": "ViewTarget<ImageView> fade()", "full_signature": "@Override public ViewTarget<ImageView> fade()", "class_method_signature": "ImageViewTarget.fade()", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/climate/mirage/targets/ImageViewTarget.java"}, "focal_method": {"identifier": "onResult", "parameters": "(ImageView view, Drawable drawable, Mirage.Source source, MirageRequest request)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n\tprotected void onResult(ImageView view, Drawable drawable, Mirage.Source source, MirageRequest request) {\n\t\tif (animation() != null) {\n\t\t\tif (!animation().animate(view, drawable, source)) {\n\t\t\t\tview.setImageDrawable(drawable);\n\t\t\t}\n\t\t} else {\n\t\t\tview.setImageDrawable(drawable);\n\t\t}\n\t}", "signature": "void onResult(ImageView view, Drawable drawable, Mirage.Source source, MirageRequest request)", "full_signature": "@Override protected void onResult(ImageView view, Drawable drawable, Mirage.Source source, MirageRequest request)", "class_method_signature": "ImageViewTarget.onResult(ImageView view, Drawable drawable, Mirage.Source source, MirageRequest request)", "testcase": false, "constructor": false, "invocations": ["animation", "animate", "animation", "setImageDrawable", "setImageDrawable"]}, "repository": {"repo_id": 35564219, "url": "https://github.com/TheClimateCorporation/mirage", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 3928, "license": "licensed"}}