{"test_class": {"identifier": "PathTest", "superclass": "", "interfaces": "", "fields": [], "file": "tsfile/src/test/java/org/apache/iotdb/tsfile/read/common/PathTest.java"}, "test_case": {"identifier": "testPath", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testPath() {\n    Path a = new Path(\"\", true);\n    Assert.assertEquals(\"\", a.getDevice());\n    Assert.assertEquals(\"\", a.getMeasurement());\n    Path b = new Path(\"root.\\\"sg\\\".\\\"d1\\\".\\\"s1\\\"\", true);\n    Assert.assertEquals(\"root.\\\"sg\\\".\\\"d1\\\"\", b.getDevice());\n    Assert.assertEquals(\"\\\"s1\\\"\", b.getMeasurement());\n    Path c = new Path(\"root.\\\"sg\\\".\\\"d1\\\".s1\", true);\n    Assert.assertEquals(\"root.\\\"sg\\\".\\\"d1\\\"\", c.getDevice());\n    Assert.assertEquals(\"s1\", c.getMeasurement());\n    Path d = new Path(\"s1\", true);\n    Assert.assertEquals(\"s1\", d.getMeasurement());\n    Assert.assertEquals(\"\", d.getDevice());\n    Path e = new Path(\"root.\\\"s.g\\\".d1.\\\"s..\\\\\\\"s1\\\"\", true);\n    Assert.assertEquals(\"root.\\\"s.g\\\".d1\", e.getDevice());\n    Assert.assertEquals(\"\\\"s..\\\\\\\"s1\\\"\", e.getMeasurement());\n  }", "signature": "void testPath()", "full_signature": "@Test public void testPath()", "class_method_signature": "PathTest.testPath()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getDevice", "assertEquals", "getMeasurement", "assertEquals", "getDevice", "assertEquals", "getMeasurement", "assertEquals", "getDevice", "assertEquals", "getMeasurement", "assertEquals", "getMeasurement", "assertEquals", "getDevice", "assertEquals", "getDevice", "assertEquals", "getMeasurement"]}, "focal_class": {"identifier": "Path", "superclass": "", "interfaces": "implements Serializable, Comparable<Path>", "fields": [{"original_string": "private static final long serialVersionUID = 3405277066329298200L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 3405277066329298200L", "var_name": "serialVersionUID"}, {"original_string": "private String measurement;", "modifier": "private", "type": "String", "declarator": "measurement", "var_name": "measurement"}, {"original_string": "protected String device;", "modifier": "protected", "type": "String", "declarator": "device", "var_name": "device"}, {"original_string": "protected String fullPath;", "modifier": "protected", "type": "String", "declarator": "fullPath", "var_name": "fullPath"}, {"original_string": "private static final String ILLEGAL_PATH_ARGUMENT = \"Path parameter is null\";", "modifier": "private static final", "type": "String", "declarator": "ILLEGAL_PATH_ARGUMENT = \"Path parameter is null\"", "var_name": "ILLEGAL_PATH_ARGUMENT"}], "methods": [{"identifier": "Path", "parameters": "()", "modifiers": "public", "return": "", "signature": " Path()", "full_signature": "public  Path()", "class_method_signature": "Path.Path()", "testcase": false, "constructor": true}, {"identifier": "Path", "parameters": "(String pathSc)", "modifiers": "@SuppressWarnings(\"the path that wouldn't be split\") public", "return": "", "signature": " Path(String pathSc)", "full_signature": "@SuppressWarnings(\"the path that wouldn't be split\") public  Path(String pathSc)", "class_method_signature": "Path.Path(String pathSc)", "testcase": false, "constructor": true}, {"identifier": "Path", "parameters": "(String pathSc, boolean needSplit)", "modifiers": "public", "return": "", "signature": " Path(String pathSc, boolean needSplit)", "full_signature": "public  Path(String pathSc, boolean needSplit)", "class_method_signature": "Path.Path(String pathSc, boolean needSplit)", "testcase": false, "constructor": true}, {"identifier": "Path", "parameters": "(String device, String measurement)", "modifiers": "public", "return": "", "signature": " Path(String device, String measurement)", "full_signature": "public  Path(String device, String measurement)", "class_method_signature": "Path.Path(String device, String measurement)", "testcase": false, "constructor": true}, {"identifier": "getFullPath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFullPath()", "full_signature": "public String getFullPath()", "class_method_signature": "Path.getFullPath()", "testcase": false, "constructor": false}, {"identifier": "getDevice", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDevice()", "full_signature": "public String getDevice()", "class_method_signature": "Path.getDevice()", "testcase": false, "constructor": false}, {"identifier": "getMeasurement", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getMeasurement()", "full_signature": "public String getMeasurement()", "class_method_signature": "Path.getMeasurement()", "testcase": false, "constructor": false}, {"identifier": "getFullPathWithAlias", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFullPathWithAlias()", "full_signature": "public String getFullPathWithAlias()", "class_method_signature": "Path.getFullPathWithAlias()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Path.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Path.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(String obj)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(String obj)", "full_signature": "public boolean equals(String obj)", "class_method_signature": "Path.equals(String obj)", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(Path path)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(Path path)", "full_signature": "@Override public int compareTo(Path path)", "class_method_signature": "Path.compareTo(Path path)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Path.toString()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Path", "signature": "Path clone()", "full_signature": "@Override public Path clone()", "class_method_signature": "Path.clone()", "testcase": false, "constructor": false}], "file": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/common/Path.java"}, "focal_method": {"identifier": "Path", "parameters": "()", "modifiers": "public", "return": "", "body": "public Path() {}", "signature": " Path()", "full_signature": "public  Path()", "class_method_signature": "Path.Path()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 158975124, "url": "https://github.com/apache/incubator-iotdb", "stars": 449, "created": "11/24/2018 9:29:17 PM +00:00", "updates": "2020-01-21T08:10:15+00:00", "fork": "False", "license": "licensed"}}