{"test_class": {"identifier": "ConnectionDetailsViewTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String fakeTrace = \"com.google.downloadUrlToStream(ImageFetcher.java:274)\";", "modifier": "private static final", "type": "String", "declarator": "fakeTrace = \"com.google.downloadUrlToStream(ImageFetcher.java:274)\"", "var_name": "fakeTrace"}, {"original_string": "private static final HttpData DEFAULT_DATA =\n    new HttpData.Builder(1, 10000, 25000, 50000, 100000, 100000, TestHttpData.FAKE_THREAD_LIST)\n      .setUrl(\"dumbUrl\").setTrace(fakeTrace).setMethod(\"GET\")\n      .build();", "modifier": "private static final", "type": "HttpData", "declarator": "DEFAULT_DATA =\n    new HttpData.Builder(1, 10000, 25000, 50000, 100000, 100000, TestHttpData.FAKE_THREAD_LIST)\n      .setUrl(\"dumbUrl\").setTrace(fakeTrace).setMethod(\"GET\")\n      .build()", "var_name": "DEFAULT_DATA"}, {"original_string": "private static final String RESPONSE_HEADERS = \"null =  HTTP/1.1 302 Found \\n Content-Type = 111 \\n Content-Length = 222 \\n\";", "modifier": "private static final", "type": "String", "declarator": "RESPONSE_HEADERS = \"null =  HTTP/1.1 302 Found \\n Content-Type = 111 \\n Content-Length = 222 \\n\"", "var_name": "RESPONSE_HEADERS"}, {"original_string": "private static final String TEST_HEADERS = \"car = car-value \\n border = border-value \\n apple = apple-value \\n 123 = numeric-value \\n\";", "modifier": "private static final", "type": "String", "declarator": "TEST_HEADERS = \"car = car-value \\n border = border-value \\n apple = apple-value \\n 123 = numeric-value \\n\"", "var_name": "TEST_HEADERS"}, {"original_string": "private static final String TEST_REQUEST_PAYLOAD_ID = \"Request Payload\";", "modifier": "private static final", "type": "String", "declarator": "TEST_REQUEST_PAYLOAD_ID = \"Request Payload\"", "var_name": "TEST_REQUEST_PAYLOAD_ID"}, {"original_string": "private static final String TEST_RESPONSE_PAYLOAD_ID = \"Response Payload\";", "modifier": "private static final", "type": "String", "declarator": "TEST_RESPONSE_PAYLOAD_ID = \"Response Payload\"", "var_name": "TEST_RESPONSE_PAYLOAD_ID"}, {"original_string": "private ConnectionDetailsView myView;", "modifier": "private", "type": "ConnectionDetailsView", "declarator": "myView", "var_name": "myView"}, {"original_string": "private NetworkProfilerStage myStage;", "modifier": "private", "type": "NetworkProfilerStage", "declarator": "myStage", "var_name": "myStage"}, {"original_string": "private NetworkProfilerStageView myStageView;", "modifier": "private", "type": "NetworkProfilerStageView", "declarator": "myStageView", "var_name": "myStageView"}, {"original_string": "private FakeIdeProfilerServices myIdeProfilerServices;", "modifier": "private", "type": "FakeIdeProfilerServices", "declarator": "myIdeProfilerServices", "var_name": "myIdeProfilerServices"}, {"original_string": "private final FakeTimer myTimer = new FakeTimer();", "modifier": "private final", "type": "FakeTimer", "declarator": "myTimer = new FakeTimer()", "var_name": "myTimer"}, {"original_string": "private final FakeTransportService myTransportService = new FakeTransportService(myTimer, false);", "modifier": "private final", "type": "FakeTransportService", "declarator": "myTransportService = new FakeTransportService(myTimer, false)", "var_name": "myTransportService"}, {"original_string": "@Rule public FakeGrpcChannel myGrpcChannel =\n    new FakeGrpcChannel(\"StudioProfilerTestChannel\", myTransportService, new FakeProfilerService(myTimer),\n                        FakeNetworkService.newBuilder().setHttpDataList(Collections.singletonList(DEFAULT_DATA)).build());", "modifier": "@Rule public", "type": "FakeGrpcChannel", "declarator": "myGrpcChannel =\n    new FakeGrpcChannel(\"StudioProfilerTestChannel\", myTransportService, new FakeProfilerService(myTimer),\n                        FakeNetworkService.newBuilder().setHttpDataList(Collections.singletonList(DEFAULT_DATA)).build())", "var_name": "myGrpcChannel"}], "file": "profilers-ui/testSrc/com/android/tools/profilers/network/details/ConnectionDetailsViewTest.java"}, "test_case": {"identifier": "callStackNavigationChangesProfilerMode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void callStackNavigationChangesProfilerMode() {\n    HttpData data = new HttpData.Builder(DEFAULT_DATA).build();\n    myView.setHttpData(data);\n\n    StackTrace stackTrace = new StackTrace(data);\n    assertThat(stackTrace.getTrace()).isEqualTo(data.getTrace());\n    assertThat(stackTrace.getCodeLocations()).hasSize(1);\n\n    // Expands Profiler Mode\n    myStage.getTimeline().getSelectionRange().set(0, 10);\n\n    boolean[] modeChanged = {false};\n    AspectObserver observer = new AspectObserver();\n    myStage.getStudioProfilers().addDependency(observer).onChange(ProfilerAspect.MODE, () -> modeChanged[0] = true);\n\n    assertThat(modeChanged[0]).isFalse();\n    assertThat(myStage.getProfilerMode()).isEqualTo(ProfilerMode.EXPANDED);\n\n    StackTraceView stackTraceView = findTab(myView, CallStackTabContent.class).getStackTraceView();\n    stackTraceView.getModel().setSelectedIndex(0);\n    assertThat(modeChanged[0]).isTrue();\n    assertThat(myStage.getProfilerMode()).isEqualTo(ProfilerMode.NORMAL);\n  }", "signature": "void callStackNavigationChangesProfilerMode()", "full_signature": "@Test public void callStackNavigationChangesProfilerMode()", "class_method_signature": "ConnectionDetailsViewTest.callStackNavigationChangesProfilerMode()", "testcase": true, "constructor": false, "invocations": ["build", "setHttpData", "isEqualTo", "assertThat", "getTrace", "getTrace", "hasSize", "assertThat", "getCodeLocations", "set", "getSelectionRange", "getTimeline", "onChange", "addDependency", "getStudioProfilers", "isFalse", "assertThat", "isEqualTo", "assertThat", "getProfilerMode", "getStackTraceView", "findTab", "setSelectedIndex", "getModel", "isTrue", "assertThat", "isEqualTo", "assertThat", "getProfilerMode"]}, "focal_class": {"identifier": "ConnectionDetailsView", "superclass": "extends JPanel", "interfaces": "", "fields": [{"original_string": "@NotNull\n  private final NetworkProfilerStageView myStageView;", "modifier": "@NotNull\n  private final", "type": "NetworkProfilerStageView", "declarator": "myStageView", "var_name": "myStageView"}, {"original_string": "@NotNull\n  private final CommonTabbedPane myTabsPanel;", "modifier": "@NotNull\n  private final", "type": "CommonTabbedPane", "declarator": "myTabsPanel", "var_name": "myTabsPanel"}, {"original_string": "@NotNull\n  private final List<TabContent> myTabs = new ArrayList<>();", "modifier": "@NotNull\n  private final", "type": "List<TabContent>", "declarator": "myTabs = new ArrayList<>()", "var_name": "myTabs"}], "methods": [{"identifier": "ConnectionDetailsView", "parameters": "(@NotNull NetworkProfilerStageView stageView)", "modifiers": "public", "return": "", "signature": " ConnectionDetailsView(@NotNull NetworkProfilerStageView stageView)", "full_signature": "public  ConnectionDetailsView(@NotNull NetworkProfilerStageView stageView)", "class_method_signature": "ConnectionDetailsView.ConnectionDetailsView(@NotNull NetworkProfilerStageView stageView)", "testcase": false, "constructor": true}, {"identifier": "populateTabs", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void populateTabs()", "full_signature": "private void populateTabs()", "class_method_signature": "ConnectionDetailsView.populateTabs()", "testcase": false, "constructor": false}, {"identifier": "trackActiveTab", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void trackActiveTab()", "full_signature": "private void trackActiveTab()", "class_method_signature": "ConnectionDetailsView.trackActiveTab()", "testcase": false, "constructor": false}, {"identifier": "setHttpData", "parameters": "(@Nullable HttpData httpData)", "modifiers": "public", "return": "void", "signature": "void setHttpData(@Nullable HttpData httpData)", "full_signature": "public void setHttpData(@Nullable HttpData httpData)", "class_method_signature": "ConnectionDetailsView.setHttpData(@Nullable HttpData httpData)", "testcase": false, "constructor": false}, {"identifier": "getTabs", "parameters": "()", "modifiers": "@NotNull @VisibleForTesting", "return": "List<TabContent>", "signature": "List<TabContent> getTabs()", "full_signature": "@NotNull @VisibleForTesting List<TabContent> getTabs()", "class_method_signature": "ConnectionDetailsView.getTabs()", "testcase": false, "constructor": false}], "file": "profilers-ui/src/com/android/tools/profilers/network/details/ConnectionDetailsView.java"}, "focal_method": {"identifier": "setHttpData", "parameters": "(@Nullable HttpData httpData)", "modifiers": "public", "return": "void", "body": "public void setHttpData(@Nullable HttpData httpData) {\n    setBackground(JBColor.background());\n    myTabs.forEach(tab -> tab.populateFor(httpData));\n    setVisible(httpData != null);\n    revalidate();\n    repaint();\n  }", "signature": "void setHttpData(@Nullable HttpData httpData)", "full_signature": "public void setHttpData(@Nullable HttpData httpData)", "class_method_signature": "ConnectionDetailsView.setHttpData(@Nullable HttpData httpData)", "testcase": false, "constructor": false, "invocations": ["setBackground", "background", "forEach", "populateFor", "setVisible", "revalidate", "repaint"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}