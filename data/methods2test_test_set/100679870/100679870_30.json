{"test_class": {"identifier": "TestStoreImage", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String IMG_STRING = \"data:image/png;base64,\";", "modifier": "private static final", "type": "String", "declarator": "IMG_STRING = \"data:image/png;base64,\"", "var_name": "IMG_STRING"}, {"original_string": "private static final String IMG_DATA = \"iVBORw0KGgoAAAANSUhEUgAAAM0AAADNCAMAAAAsYgRbAAAAGXRFWHRTb2Z0d\"\n      + \"2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAABJQTFRF3NSmzMewPxIG//ncJEJsldTou1jHgAAAARBJREFUeNrs2EE\"\n      + \"KgCAQBVDLuv+V20dENbMY831wKz4Y/VHb/5RGQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0PzMWtya\"\n      + \"GhoaGhoaGhoaGhoaGhoxtb0QGhoaGhoaGhoaGhoaGhoaMbRLEvv50VTQ9OTQ5OpyZ01GpM2g0bfmDQaL7S+ofFC6xv\"\n      + \"3ZpxJiywakzbvd9r3RWPS9I2+MWk0+kbf0Hih9Y17U0nTHibrDDQ0NDQ0NDQ0NDQ0NDQ0NTXbRSL/AK72o6GhoaGho\"\n      + \"RlL8951vwsNDQ0NDQ1NDc0WyHtDTEhDQ0NDQ0NTS5MdGhoaGhoaGhoaGhoaGhoaGhoaGhoaGposzSHAAErMwwQ2HwR\"\n      + \"QAAAAAElFTkSuQmCC\";", "modifier": "private static final", "type": "String", "declarator": "IMG_DATA = \"iVBORw0KGgoAAAANSUhEUgAAAM0AAADNCAMAAAAsYgRbAAAAGXRFWHRTb2Z0d\"\n      + \"2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAABJQTFRF3NSmzMewPxIG//ncJEJsldTou1jHgAAAARBJREFUeNrs2EE\"\n      + \"KgCAQBVDLuv+V20dENbMY831wKz4Y/VHb/5RGQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0PzMWtya\"\n      + \"GhoaGhoaGhoaGhoaGhoxtb0QGhoaGhoaGhoaGhoaGhoaMbRLEvv50VTQ9OTQ5OpyZ01GpM2g0bfmDQaL7S+ofFC6xv\"\n      + \"3ZpxJiywakzbvd9r3RWPS9I2+MWk0+kbf0Hih9Y17U0nTHibrDDQ0NDQ0NDQ0NDQ0NDQ0NTXbRSL/AK72o6GhoaGho\"\n      + \"RlL8951vwsNDQ0NDQ1NDc0WyHtDTEhDQ0NDQ0NTS5MdGhoaGhoaGhoaGhoaGhoaGhoaGhoaGposzSHAAErMwwQ2HwR\"\n      + \"QAAAAAElFTkSuQmCC\"", "var_name": "IMG_DATA"}, {"original_string": "private static final long IMG_ID0 = 0L;", "modifier": "private static final", "type": "long", "declarator": "IMG_ID0 = 0L", "var_name": "IMG_ID0"}, {"original_string": "private static final long IMG_ID1 = 6648764502374L;", "modifier": "private static final", "type": "long", "declarator": "IMG_ID1 = 6648764502374L", "var_name": "IMG_ID1"}, {"original_string": "private BufferedImage img;", "modifier": "private", "type": "BufferedImage", "declarator": "img", "var_name": "img"}, {"original_string": "@Mock\n  private StoreImage mockedImg0;", "modifier": "@Mock\n  private", "type": "StoreImage", "declarator": "mockedImg0", "var_name": "mockedImg0"}, {"original_string": "@Mock\n  private StoreImage mockedImg1;", "modifier": "@Mock\n  private", "type": "StoreImage", "declarator": "mockedImg1", "var_name": "mockedImg1"}], "file": "services/tools.descartes.teastore.image/src/test/java/tools/descartes/teastore/image/TestStoreImage.java"}, "test_case": {"identifier": "testGetByteSize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetByteSize() {\n    StoreImage uut = new StoreImage(IMG_ID1, IMG_DATA.getBytes(), ImageSizePreset.ICON.getSize());\n    assertEquals(IMG_DATA.getBytes().length, uut.getByteSize());\n  }", "signature": "void testGetByteSize()", "full_signature": "@Test public void testGetByteSize()", "class_method_signature": "TestStoreImage.testGetByteSize()", "testcase": true, "constructor": false, "invocations": ["getBytes", "getSize", "assertEquals", "getBytes", "getByteSize"]}, "focal_class": {"identifier": "StoreImage", "superclass": "", "interfaces": "implements ICachable<StoreImage>", "fields": [{"original_string": "public static final String STORE_IMAGE_FORMAT = \"png\";", "modifier": "public static final", "type": "String", "declarator": "STORE_IMAGE_FORMAT = \"png\"", "var_name": "STORE_IMAGE_FORMAT"}, {"original_string": "public static final String STORE_IMAGE_DATA_STRING = \"data:image/\" + STORE_IMAGE_FORMAT\n      + \";base64,\";", "modifier": "public static final", "type": "String", "declarator": "STORE_IMAGE_DATA_STRING = \"data:image/\" + STORE_IMAGE_FORMAT\n      + \";base64,\"", "var_name": "STORE_IMAGE_DATA_STRING"}, {"original_string": "private final long id;", "modifier": "private final", "type": "long", "declarator": "id", "var_name": "id"}, {"original_string": "private byte[] data;", "modifier": "private", "type": "byte[]", "declarator": "data", "var_name": "data"}, {"original_string": "private ImageSize size;", "modifier": "private", "type": "ImageSize", "declarator": "size", "var_name": "size"}, {"original_string": "private Logger log = LoggerFactory.getLogger(StoreImage.class);", "modifier": "private", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(StoreImage.class)", "var_name": "log"}], "methods": [{"identifier": "StoreImage", "parameters": "(final long id, BufferedImage image, ImageSize size)", "modifiers": "public", "return": "", "signature": " StoreImage(final long id, BufferedImage image, ImageSize size)", "full_signature": "public  StoreImage(final long id, BufferedImage image, ImageSize size)", "class_method_signature": "StoreImage.StoreImage(final long id, BufferedImage image, ImageSize size)", "testcase": false, "constructor": true}, {"identifier": "StoreImage", "parameters": "(final long id, byte[] base64, ImageSize size)", "modifiers": "public", "return": "", "signature": " StoreImage(final long id, byte[] base64, ImageSize size)", "full_signature": "public  StoreImage(final long id, byte[] base64, ImageSize size)", "class_method_signature": "StoreImage.StoreImage(final long id, byte[] base64, ImageSize size)", "testcase": false, "constructor": true}, {"identifier": "setImageSize", "parameters": "(ImageSize size)", "modifiers": "private", "return": "void", "signature": "void setImageSize(ImageSize size)", "full_signature": "private void setImageSize(ImageSize size)", "class_method_signature": "StoreImage.setImageSize(ImageSize size)", "testcase": false, "constructor": false}, {"identifier": "StoreImage", "parameters": "(StoreImage image)", "modifiers": "public", "return": "", "signature": " StoreImage(StoreImage image)", "full_signature": "public  StoreImage(StoreImage image)", "class_method_signature": "StoreImage.StoreImage(StoreImage image)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getId()", "full_signature": "public long getId()", "class_method_signature": "StoreImage.getId()", "testcase": false, "constructor": false}, {"identifier": "setImage", "parameters": "(BufferedImage image)", "modifiers": "private", "return": "void", "signature": "void setImage(BufferedImage image)", "full_signature": "private void setImage(BufferedImage image)", "class_method_signature": "StoreImage.setImage(BufferedImage image)", "testcase": false, "constructor": false}, {"identifier": "getImage", "parameters": "()", "modifiers": "public", "return": "BufferedImage", "signature": "BufferedImage getImage()", "full_signature": "public BufferedImage getImage()", "class_method_signature": "StoreImage.getImage()", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "public", "return": "ImageSize", "signature": "ImageSize getSize()", "full_signature": "public ImageSize getSize()", "class_method_signature": "StoreImage.getSize()", "testcase": false, "constructor": false}, {"identifier": "getByteSize", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getByteSize()", "full_signature": "@Override public long getByteSize()", "class_method_signature": "StoreImage.getByteSize()", "testcase": false, "constructor": false}, {"identifier": "getBase64", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getBase64()", "full_signature": "public String getBase64()", "class_method_signature": "StoreImage.getBase64()", "testcase": false, "constructor": false}, {"identifier": "getByteArray", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getByteArray()", "full_signature": "public byte[] getByteArray()", "class_method_signature": "StoreImage.getByteArray()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "StoreImage.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "StoreImage.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "StoreImage.equals(Object obj)", "testcase": false, "constructor": false}], "file": "services/tools.descartes.teastore.image/src/main/java/tools/descartes/teastore/image/StoreImage.java"}, "focal_method": {"identifier": "getByteSize", "parameters": "()", "modifiers": "@Override public", "return": "long", "body": "@Override\n  public long getByteSize() {\n    return data.length;\n  }", "signature": "long getByteSize()", "full_signature": "@Override public long getByteSize()", "class_method_signature": "StoreImage.getByteSize()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 100679870, "url": "https://github.com/DescartesResearch/TeaStore", "language": "Java", "is_fork": false, "fork_count": 31, "stargazer_count": 43, "size": 91777, "license": "licensed"}}