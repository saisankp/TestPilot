{"test_class": {"identifier": "DocHashCountVectorizerModelMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TableSchema modelSchema = new DocHashCountVectorizerModelDataConverter().getModelSchema();", "modifier": "private", "type": "TableSchema", "declarator": "modelSchema = new DocHashCountVectorizerModelDataConverter().getModelSchema()", "var_name": "modelSchema"}, {"original_string": "private TableSchema dataSchema = new TableSchema(new String[] {\"sentence\"}, new TypeInformation<?>[] {Types.STRING});", "modifier": "private", "type": "TableSchema", "declarator": "dataSchema = new TableSchema(new String[] {\"sentence\"}, new TypeInformation<?>[] {Types.STRING})", "var_name": "dataSchema"}], "file": "core/src/test/java/com/alibaba/alink/operator/common/nlp/DocHashCountVectorizerModelMapperTest.java"}, "test_case": {"identifier": "testWordCount", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWordCount() throws Exception {\n        Row[] rows = new Row[] {\n            Row.of(0L, \"{\\\"numFeatures\\\":\\\"20\\\",\\\"minTF\\\":\\\"1.0\\\",\\\"featureType\\\":\\\"\\\\\\\"WORD_COUNT\\\\\\\"\\\"}\"),\n            Row.of(1048576L, \"{\\\"16\\\":0.4054651081081644,\\\"7\\\":0.0,\\\"13\\\":0.4054651081081644,\\\"14\\\":-0.5108256237659907,\"\n                + \"\\\"15\\\":-0.2876820724517809}\")\n        };\n        List<Row> model = Arrays.asList(rows);\n\n        Params params = new Params()\n            .set(DocHashCountVectorizerPredictParams.SELECTED_COL, \"sentence\");\n\n        DocHashCountVectorizerModelMapper mapper = new DocHashCountVectorizerModelMapper(modelSchema, dataSchema, params);\n        mapper.loadModel(model);\n\n        assertEquals(mapper.map(Row.of(\"a b c d a a \")).getField(0),\n            new SparseVector(20, new int[] {7, 13, 14, 15},\n                new double[] {1.0, 1.0, 3.0, 1.0}));\n    }", "signature": "void testWordCount()", "full_signature": "@Test public void testWordCount()", "class_method_signature": "DocHashCountVectorizerModelMapperTest.testWordCount()", "testcase": true, "constructor": false, "invocations": ["of", "of", "asList", "set", "loadModel", "assertEquals", "getField", "map", "of"]}, "focal_class": {"identifier": "DocHashCountVectorizerModelMapper", "superclass": "extends SISOModelMapper", "interfaces": "", "fields": [{"original_string": "private DocHashCountVectorizerModelData model;", "modifier": "private", "type": "DocHashCountVectorizerModelData", "declarator": "model", "var_name": "model"}, {"original_string": "private FeatureType featureType;", "modifier": "private", "type": "FeatureType", "declarator": "featureType", "var_name": "featureType"}, {"original_string": "private static final HashFunction HASH = murmur3_32(0);", "modifier": "private static final", "type": "HashFunction", "declarator": "HASH = murmur3_32(0)", "var_name": "HASH"}], "methods": [{"identifier": "DocHashCountVectorizerModelMapper", "parameters": "(TableSchema modelSchema, TableSchema dataSchema, Params params)", "modifiers": "public", "return": "", "signature": " DocHashCountVectorizerModelMapper(TableSchema modelSchema, TableSchema dataSchema, Params params)", "full_signature": "public  DocHashCountVectorizerModelMapper(TableSchema modelSchema, TableSchema dataSchema, Params params)", "class_method_signature": "DocHashCountVectorizerModelMapper.DocHashCountVectorizerModelMapper(TableSchema modelSchema, TableSchema dataSchema, Params params)", "testcase": false, "constructor": true}, {"identifier": "loadModel", "parameters": "(List <Row> modelRows)", "modifiers": "@Override public", "return": "void", "signature": "void loadModel(List <Row> modelRows)", "full_signature": "@Override public void loadModel(List <Row> modelRows)", "class_method_signature": "DocHashCountVectorizerModelMapper.loadModel(List <Row> modelRows)", "testcase": false, "constructor": false}, {"identifier": "initPredResultColType", "parameters": "()", "modifiers": "@Override protected", "return": "TypeInformation", "signature": "TypeInformation initPredResultColType()", "full_signature": "@Override protected TypeInformation initPredResultColType()", "class_method_signature": "DocHashCountVectorizerModelMapper.initPredResultColType()", "testcase": false, "constructor": false}, {"identifier": "predictResult", "parameters": "(Object input)", "modifiers": "@Override protected", "return": "Object", "signature": "Object predictResult(Object input)", "full_signature": "@Override protected Object predictResult(Object input)", "class_method_signature": "DocHashCountVectorizerModelMapper.predictResult(Object input)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/alibaba/alink/operator/common/nlp/DocHashCountVectorizerModelMapper.java"}, "focal_method": {"identifier": "loadModel", "parameters": "(List <Row> modelRows)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void loadModel(List <Row> modelRows) {\n\t\tthis.model = new DocHashCountVectorizerModelDataConverter().load(modelRows);\n\t\tthis.featureType = FeatureType.valueOf(model.featureType.toUpperCase());\n\t}", "signature": "void loadModel(List <Row> modelRows)", "full_signature": "@Override public void loadModel(List <Row> modelRows)", "class_method_signature": "DocHashCountVectorizerModelMapper.loadModel(List <Row> modelRows)", "testcase": false, "constructor": false, "invocations": ["load", "valueOf", "toUpperCase"]}, "repository": {"repo_id": 150938406, "url": "https://github.com/alibaba/Alink", "stars": 1923, "created": "9/30/2018 6:36:11 AM +00:00", "updates": "2020-01-27T10:24:34+00:00", "fork": "False", "license": "licensed"}}