{"test_class": {"identifier": "NashornExecutionEngineTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n\tpublic", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private static ObjectNode jsonData;", "modifier": "private static", "type": "ObjectNode", "declarator": "jsonData", "var_name": "jsonData"}, {"original_string": "private static ExecutionEngine executionEngine;", "modifier": "private static", "type": "ExecutionEngine", "declarator": "executionEngine", "var_name": "executionEngine"}, {"original_string": "private static TransformationFunction transformationFunction;", "modifier": "private static", "type": "TransformationFunction", "declarator": "transformationFunction", "var_name": "transformationFunction"}], "file": "server/src/test/java/org/jvalue/ods/transformation/NashornExecutionEngineTest.java"}, "test_case": {"identifier": "testInfiniteLoopTransformationExecution", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testInfiniteLoopTransformationExecution()\n\t\tthrows ScriptException, IOException, NoSuchMethodException, URISyntaxException {\n\n\t\tthrown.expect(ScriptException.class);\n\t\tthrown.expectCause(CoreMatchers.isA(ScriptCPUAbuseException.class));\n\n\t\tString infiniteLoopFunc = resourceFileToString(\"infiniteLoop.js\");\n\t\ttransformationFunction = new TransformationFunction(\"3\", infiniteLoopFunc);\n\t\texecutionEngine.execute(jsonData, transformationFunction);\n\t}", "signature": "void testInfiniteLoopTransformationExecution()", "full_signature": "@Test public void testInfiniteLoopTransformationExecution()", "class_method_signature": "NashornExecutionEngineTest.testInfiniteLoopTransformationExecution()", "testcase": true, "constructor": false, "invocations": ["expect", "expectCause", "isA", "resourceFileToString", "execute"]}, "focal_class": {"identifier": "NashornExecutionEngine", "superclass": "extends AbstractExecutionEngine", "interfaces": "", "fields": [{"original_string": "private NashornSandbox nashornSandbox;", "modifier": "private", "type": "NashornSandbox", "declarator": "nashornSandbox", "var_name": "nashornSandbox"}, {"original_string": "private static String wrapperScript = \"\";", "modifier": "private static", "type": "String", "declarator": "wrapperScript = \"\"", "var_name": "wrapperScript"}], "methods": [{"identifier": "NashornExecutionEngine", "parameters": "()", "modifiers": "public", "return": "", "signature": " NashornExecutionEngine()", "full_signature": "public  NashornExecutionEngine()", "class_method_signature": "NashornExecutionEngine.NashornExecutionEngine()", "testcase": false, "constructor": true}, {"identifier": "initNashornSandbox", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initNashornSandbox()", "full_signature": "private void initNashornSandbox()", "class_method_signature": "NashornExecutionEngine.initNashornSandbox()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(ObjectNode data, TransformationFunction transformationFunction)", "modifiers": "@Override public", "return": "ObjectNode", "signature": "ObjectNode execute(ObjectNode data, TransformationFunction transformationFunction)", "full_signature": "@Override public ObjectNode execute(ObjectNode data, TransformationFunction transformationFunction)", "class_method_signature": "NashornExecutionEngine.execute(ObjectNode data, TransformationFunction transformationFunction)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/jvalue/ods/transformation/NashornExecutionEngine.java"}, "focal_method": {"identifier": "execute", "parameters": "(ObjectNode data, TransformationFunction transformationFunction)", "modifiers": "@Override public", "return": "ObjectNode", "body": "@Override\n\tpublic ObjectNode execute(ObjectNode data, TransformationFunction transformationFunction)\n\t\tthrows ScriptException, IOException, NoSuchMethodException {\n\t\tinitNashornSandbox();\n\t\ttry {\n\t\t\t//append custom transformation function to wrapper script\n\t\t\tString script = wrapperScript + transformationFunction.getTransformFunction();\n\n\t\t\t//execute script\n\t\t\tnashornSandbox.eval(script);\n\t\t\tInvocable sandboxedInvocable = nashornSandbox.getSandboxedInvocable();\n\t\t\tString result = (String) sandboxedInvocable.invokeFunction(WRAPPER_FUNCTION, data.toString());\n\t\t\treturn (ObjectNode) JsonMapper.getInstance().readTree(result);\n\t\t} finally {\n\t\t\tExecutorService executor = nashornSandbox.getExecutor();\n\t\t\texecutor.shutdown();\n\t\t}\n\t}", "signature": "ObjectNode execute(ObjectNode data, TransformationFunction transformationFunction)", "full_signature": "@Override public ObjectNode execute(ObjectNode data, TransformationFunction transformationFunction)", "class_method_signature": "NashornExecutionEngine.execute(ObjectNode data, TransformationFunction transformationFunction)", "testcase": false, "constructor": false, "invocations": ["initNashornSandbox", "getTransformFunction", "eval", "getSandboxedInvocable", "invokeFunction", "toString", "readTree", "getInstance", "getExecutor", "shutdown"]}, "repository": {"repo_id": 14989619, "url": "https://github.com/jvalue/open-data-service-v1", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 4525, "license": "licensed"}}