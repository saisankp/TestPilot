{"test_class": {"identifier": "DXAppletTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ObjectMapper MAPPER = new ObjectMapper();", "modifier": "private static final", "type": "ObjectMapper", "declarator": "MAPPER = new ObjectMapper()", "var_name": "MAPPER"}, {"original_string": "private DXProject testProject;", "modifier": "private", "type": "DXProject", "declarator": "testProject", "var_name": "testProject"}], "file": "src/java/src/test/java/com/dnanexus/DXAppletTest.java"}, "test_case": {"identifier": "testBuilder", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuilder() {\n        DXDataObjectTest.testBuilder(testProject,\n                new DXDataObjectTest.BuilderFactory<DXApplet.Builder, DXApplet>() {\n                    @Override\n                    public DXApplet.Builder getBuilder() {\n                        return DXApplet.newApplet().setRunSpecification(\n                                RunSpecification.newRunSpec(\"bash\", \"false;\", \"Ubuntu\", \"14.04\").build());\n                    }\n                });\n    }", "signature": "void testBuilder()", "full_signature": "@Test public void testBuilder()", "class_method_signature": "DXAppletTest.testBuilder()", "testcase": true, "constructor": false, "invocations": ["testBuilder", "setRunSpecification", "newApplet", "build", "newRunSpec"]}, "focal_class": {"identifier": "DXApplet", "superclass": "extends DXDataObject", "interfaces": "implements DXExecutable<DXJob>", "fields": [], "methods": [{"identifier": "create", "parameters": "(Map<String, Object> value)", "modifiers": "@JsonCreator private static", "return": "DXApplet", "signature": "DXApplet create(Map<String, Object> value)", "full_signature": "@JsonCreator private static DXApplet create(Map<String, Object> value)", "class_method_signature": "DXApplet.create(Map<String, Object> value)", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "(String appletId)", "modifiers": "public static", "return": "DXApplet", "signature": "DXApplet getInstance(String appletId)", "full_signature": "public static DXApplet getInstance(String appletId)", "class_method_signature": "DXApplet.getInstance(String appletId)", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "(String appletId, DXContainer project)", "modifiers": "public static", "return": "DXApplet", "signature": "DXApplet getInstance(String appletId, DXContainer project)", "full_signature": "public static DXApplet getInstance(String appletId, DXContainer project)", "class_method_signature": "DXApplet.getInstance(String appletId, DXContainer project)", "testcase": false, "constructor": false}, {"identifier": "getInstanceWithCachedDescribe", "parameters": "(String appletId, DXContainer project,\n            DXEnvironment env, JsonNode describe)", "modifiers": "static", "return": "DXApplet", "signature": "DXApplet getInstanceWithCachedDescribe(String appletId, DXContainer project,\n            DXEnvironment env, JsonNode describe)", "full_signature": "static DXApplet getInstanceWithCachedDescribe(String appletId, DXContainer project,\n            DXEnvironment env, JsonNode describe)", "class_method_signature": "DXApplet.getInstanceWithCachedDescribe(String appletId, DXContainer project,\n            DXEnvironment env, JsonNode describe)", "testcase": false, "constructor": false}, {"identifier": "getInstanceWithEnvironment", "parameters": "(String appletId, DXContainer project,\n            DXEnvironment env)", "modifiers": "public static", "return": "DXApplet", "signature": "DXApplet getInstanceWithEnvironment(String appletId, DXContainer project,\n            DXEnvironment env)", "full_signature": "public static DXApplet getInstanceWithEnvironment(String appletId, DXContainer project,\n            DXEnvironment env)", "class_method_signature": "DXApplet.getInstanceWithEnvironment(String appletId, DXContainer project,\n            DXEnvironment env)", "testcase": false, "constructor": false}, {"identifier": "getInstanceWithEnvironment", "parameters": "(String appletId, DXEnvironment env)", "modifiers": "public static", "return": "DXApplet", "signature": "DXApplet getInstanceWithEnvironment(String appletId, DXEnvironment env)", "full_signature": "public static DXApplet getInstanceWithEnvironment(String appletId, DXEnvironment env)", "class_method_signature": "DXApplet.getInstanceWithEnvironment(String appletId, DXEnvironment env)", "testcase": false, "constructor": false}, {"identifier": "newApplet", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder newApplet()", "full_signature": "public static Builder newApplet()", "class_method_signature": "DXApplet.newApplet()", "testcase": false, "constructor": false}, {"identifier": "newAppletWithEnvironment", "parameters": "(DXEnvironment env)", "modifiers": "public static", "return": "Builder", "signature": "Builder newAppletWithEnvironment(DXEnvironment env)", "full_signature": "public static Builder newAppletWithEnvironment(DXEnvironment env)", "class_method_signature": "DXApplet.newAppletWithEnvironment(DXEnvironment env)", "testcase": false, "constructor": false}, {"identifier": "DXApplet", "parameters": "(String appletId, DXContainer project, DXEnvironment env, JsonNode describe)", "modifiers": "private", "return": "", "signature": " DXApplet(String appletId, DXContainer project, DXEnvironment env, JsonNode describe)", "full_signature": "private  DXApplet(String appletId, DXContainer project, DXEnvironment env, JsonNode describe)", "class_method_signature": "DXApplet.DXApplet(String appletId, DXContainer project, DXEnvironment env, JsonNode describe)", "testcase": false, "constructor": true}, {"identifier": "DXApplet", "parameters": "(String appletId, DXEnvironment env)", "modifiers": "private", "return": "", "signature": " DXApplet(String appletId, DXEnvironment env)", "full_signature": "private  DXApplet(String appletId, DXEnvironment env)", "class_method_signature": "DXApplet.DXApplet(String appletId, DXEnvironment env)", "testcase": false, "constructor": true}, {"identifier": "describe", "parameters": "()", "modifiers": "@Override public", "return": "Describe", "signature": "Describe describe()", "full_signature": "@Override public Describe describe()", "class_method_signature": "DXApplet.describe()", "testcase": false, "constructor": false}, {"identifier": "describe", "parameters": "(DXDataObject.DescribeOptions options)", "modifiers": "@Override public", "return": "Describe", "signature": "Describe describe(DXDataObject.DescribeOptions options)", "full_signature": "@Override public Describe describe(DXDataObject.DescribeOptions options)", "class_method_signature": "DXApplet.describe(DXDataObject.DescribeOptions options)", "testcase": false, "constructor": false}, {"identifier": "getCachedDescribe", "parameters": "()", "modifiers": "@Override public", "return": "Describe", "signature": "Describe getCachedDescribe()", "full_signature": "@Override public Describe getCachedDescribe()", "class_method_signature": "DXApplet.getCachedDescribe()", "testcase": false, "constructor": false}, {"identifier": "newRun", "parameters": "()", "modifiers": "@Override public", "return": "ExecutableRunner<DXJob>", "signature": "ExecutableRunner<DXJob> newRun()", "full_signature": "@Override public ExecutableRunner<DXJob> newRun()", "class_method_signature": "DXApplet.newRun()", "testcase": false, "constructor": false}], "file": "src/java/src/main/java/com/dnanexus/DXApplet.java"}, "focal_method": {"identifier": "newApplet", "parameters": "()", "modifiers": "public static", "return": "Builder", "body": "public static Builder newApplet() {\n        return new Builder();\n    }", "signature": "Builder newApplet()", "full_signature": "public static Builder newApplet()", "class_method_signature": "DXApplet.newApplet()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4802269, "url": "https://github.com/dnanexus/dx-toolkit", "stars": 59, "created": "6/27/2012 12:23:47 AM +00:00", "updates": "2020-01-21T16:35:18+00:00", "fork": "False", "license": "licensed"}}