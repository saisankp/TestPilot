{"test_class": {"identifier": "ScenarioNodeBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/technophobia/substeps/runner/builder/ScenarioNodeBuilderTest.java"}, "test_case": {"identifier": "testBasicScenarioBuilding", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBasicScenarioBuilding(){\n\n        Scenario scenario = new Scenario();\n\n        scenario.setDescription(\"a test description with a <param>\");\n\n        Map parameters = ImmutableMap.of(\"param\", \"Parameter\");\n        ExampleParameter scenarioParameters = new ExampleParameter(5, parameters);\n\n        TestParameters params = null;\n\n        ScenarioNodeBuilder builder = new ScenarioNodeBuilder(params);\n\n        BasicScenarioNode basicScenarioNode = builder.buildBasicScenarioNode(scenario, scenarioParameters, Collections.emptySet(), 1);\n\n        Assert.assertThat(basicScenarioNode.getDescription() , is(\"a test description with a Parameter\"));\n\n\n        Scenario scenario2 = new Scenario();\n\n        scenario2.setDescription(\"a test description without any parameters\");\n\n        BasicScenarioNode basicScenarioNode2 = builder.buildBasicScenarioNode(scenario2, scenarioParameters, Collections.emptySet(), 1);\n        Assert.assertThat(basicScenarioNode2.getDescription() , is(\"a test description without any parameters\"));\n\n    }", "signature": "void testBasicScenarioBuilding()", "full_signature": "@Test public void testBasicScenarioBuilding()", "class_method_signature": "ScenarioNodeBuilderTest.testBasicScenarioBuilding()", "testcase": true, "constructor": false, "invocations": ["setDescription", "of", "buildBasicScenarioNode", "emptySet", "assertThat", "getDescription", "is", "setDescription", "buildBasicScenarioNode", "emptySet", "assertThat", "getDescription", "is"]}, "focal_class": {"identifier": "ScenarioNodeBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(ScenarioNodeBuilder.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(ScenarioNodeBuilder.class)", "var_name": "log"}, {"original_string": "private final TestParameters parameters;", "modifier": "private final", "type": "TestParameters", "declarator": "parameters", "var_name": "parameters"}, {"original_string": "private final SubstepNodeBuilder substepNodeBuilder;", "modifier": "private final", "type": "SubstepNodeBuilder", "declarator": "substepNodeBuilder", "var_name": "substepNodeBuilder"}], "methods": [{"identifier": "ScenarioNodeBuilder", "parameters": "(TestParameters parameters)", "modifiers": "", "return": "", "signature": " ScenarioNodeBuilder(TestParameters parameters)", "full_signature": "  ScenarioNodeBuilder(TestParameters parameters)", "class_method_signature": "ScenarioNodeBuilder.ScenarioNodeBuilder(TestParameters parameters)", "testcase": false, "constructor": true}, {"identifier": "build", "parameters": "(final Scenario scenario, final Set<String> inheritedTags, int depth)", "modifiers": "public", "return": "ScenarioNode<? extends IExecutionNode>", "signature": "ScenarioNode<? extends IExecutionNode> build(final Scenario scenario, final Set<String> inheritedTags, int depth)", "full_signature": "public ScenarioNode<? extends IExecutionNode> build(final Scenario scenario, final Set<String> inheritedTags, int depth)", "class_method_signature": "ScenarioNodeBuilder.build(final Scenario scenario, final Set<String> inheritedTags, int depth)", "testcase": false, "constructor": false}, {"identifier": "buildRunnableScenarioNode", "parameters": "(final Scenario scenario, Set<String> inheritedTags, int depth)", "modifiers": "private", "return": "ScenarioNode<? extends IExecutionNode>", "signature": "ScenarioNode<? extends IExecutionNode> buildRunnableScenarioNode(final Scenario scenario, Set<String> inheritedTags, int depth)", "full_signature": "private ScenarioNode<? extends IExecutionNode> buildRunnableScenarioNode(final Scenario scenario, Set<String> inheritedTags, int depth)", "class_method_signature": "ScenarioNodeBuilder.buildRunnableScenarioNode(final Scenario scenario, Set<String> inheritedTags, int depth)", "testcase": false, "constructor": false}, {"identifier": "buildOutlineScenarioNode", "parameters": "(final Scenario scenario, Set<String> inheritedTags, int depth)", "modifiers": "public", "return": "OutlineScenarioNode", "signature": "OutlineScenarioNode buildOutlineScenarioNode(final Scenario scenario, Set<String> inheritedTags, int depth)", "full_signature": "public OutlineScenarioNode buildOutlineScenarioNode(final Scenario scenario, Set<String> inheritedTags, int depth)", "class_method_signature": "ScenarioNodeBuilder.buildOutlineScenarioNode(final Scenario scenario, Set<String> inheritedTags, int depth)", "testcase": false, "constructor": false}, {"identifier": "buildBasicScenarioNode", "parameters": "(final Scenario scenario, final ExampleParameter scenarioParameters,\n                                                    Set<String> inheritedTags, int depth)", "modifiers": "public", "return": "BasicScenarioNode", "signature": "BasicScenarioNode buildBasicScenarioNode(final Scenario scenario, final ExampleParameter scenarioParameters,\n                                                    Set<String> inheritedTags, int depth)", "full_signature": "public BasicScenarioNode buildBasicScenarioNode(final Scenario scenario, final ExampleParameter scenarioParameters,\n                                                    Set<String> inheritedTags, int depth)", "class_method_signature": "ScenarioNodeBuilder.buildBasicScenarioNode(final Scenario scenario, final ExampleParameter scenarioParameters,\n                                                    Set<String> inheritedTags, int depth)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/technophobia/substeps/runner/builder/ScenarioNodeBuilder.java"}, "focal_method": {"identifier": "buildBasicScenarioNode", "parameters": "(final Scenario scenario, final ExampleParameter scenarioParameters,\n                                                    Set<String> inheritedTags, int depth)", "modifiers": "public", "return": "BasicScenarioNode", "body": "public BasicScenarioNode buildBasicScenarioNode(final Scenario scenario, final ExampleParameter scenarioParameters,\n                                                    Set<String> inheritedTags, int depth) {\n\n        Set<String> allTags = Sets.newHashSet();\n        allTags.addAll(inheritedTags);\n\n        if (scenario.getTags() != null) {\n\n            allTags.addAll(scenario.getTags());\n        }\n\n        SubstepNode background = scenario.hasBackground() ? substepNodeBuilder.build(scenario.getDescription(),\n                scenario.getBackground().getSteps(), parameters.getSyntax().getSubStepsMap(), null, scenarioParameters,\n                true, allTags, depth + 1) : null;\n\n        List<StepNode> steps = Lists.newArrayList();\n\n        if (scenario.hasSteps()) {\n\n            for (Step step : scenario.getSteps()) {\n\n                steps.add(substepNodeBuilder.buildStepNode(scenario.getDescription(), step,\n                        parameters.getSyntax().getSubStepsMap(), null, scenarioParameters, false, allTags, depth + 1));\n            }\n\n        }\n\n        String scenarioDescription =\n                scenarioParameters == null ? scenario.getDescription() :\n                SubstepNodeBuilder.substitutePlaceholders(scenario.getDescription(), scenarioParameters.getParameters());\n\n        return new BasicScenarioNode(scenarioDescription, background, steps, allTags, depth);\n    }", "signature": "BasicScenarioNode buildBasicScenarioNode(final Scenario scenario, final ExampleParameter scenarioParameters,\n                                                    Set<String> inheritedTags, int depth)", "full_signature": "public BasicScenarioNode buildBasicScenarioNode(final Scenario scenario, final ExampleParameter scenarioParameters,\n                                                    Set<String> inheritedTags, int depth)", "class_method_signature": "ScenarioNodeBuilder.buildBasicScenarioNode(final Scenario scenario, final ExampleParameter scenarioParameters,\n                                                    Set<String> inheritedTags, int depth)", "testcase": false, "constructor": false, "invocations": ["newHashSet", "addAll", "getTags", "addAll", "getTags", "hasBackground", "build", "getDescription", "getSteps", "getBackground", "getSubStepsMap", "getSyntax", "newArrayList", "hasSteps", "getSteps", "add", "buildStepNode", "getDescription", "getSubStepsMap", "getSyntax", "getDescription", "substitutePlaceholders", "getDescription", "getParameters"]}, "repository": {"repo_id": 50430650, "url": "https://github.com/Substeps/substeps-framework", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 5, "size": 2783, "license": "licensed"}}