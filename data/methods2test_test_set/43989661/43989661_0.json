{"test_class": {"identifier": "TimeResolverTest", "superclass": "", "interfaces": "", "fields": [], "file": "httpsig/callout/src/test/java/com/google/apigee/util/TimeResolverTest.java"}, "test_case": {"identifier": "testResolution", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testResolution() {\n    Assert.assertEquals(TimeResolver.resolveExpression(\"30s\"), Long.valueOf(30));\n    Assert.assertEquals(TimeResolver.resolveExpression(\"180s\"), Long.valueOf(180));\n    Assert.assertEquals(TimeResolver.resolveExpression(\"1m\"), Long.valueOf(60));\n    Assert.assertEquals(TimeResolver.resolveExpression(\"10m\"), Long.valueOf(600));\n    Assert.assertEquals(TimeResolver.resolveExpression(\"2h\"), Long.valueOf(7200));\n  }", "signature": "void testResolution()", "full_signature": "@Test public void testResolution()", "class_method_signature": "TimeResolverTest.testResolution()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "resolveExpression", "valueOf", "assertEquals", "resolveExpression", "valueOf", "assertEquals", "resolveExpression", "valueOf", "assertEquals", "resolveExpression", "valueOf", "assertEquals", "resolveExpression", "valueOf"]}, "focal_class": {"identifier": "TimeResolver", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern expiryPattern =\n        Pattern.compile(\"^([1-9][0-9]*)(s|m|h|d|w|)$\", Pattern.CASE_INSENSITIVE);", "modifier": "private static final", "type": "Pattern", "declarator": "expiryPattern =\n        Pattern.compile(\"^([1-9][0-9]*)(s|m|h|d|w|)$\", Pattern.CASE_INSENSITIVE)", "var_name": "expiryPattern"}, {"original_string": "private static final Map<String, Long> timeMultipliers;", "modifier": "private static final", "type": "Map<String, Long>", "declarator": "timeMultipliers", "var_name": "timeMultipliers"}, {"original_string": "private static String defaultUnit = \"s\";", "modifier": "private static", "type": "String", "declarator": "defaultUnit = \"s\"", "var_name": "defaultUnit"}], "methods": [{"identifier": "getExpiryDate", "parameters": "(String expiresInString)", "modifiers": "public static", "return": "ZonedDateTime", "signature": "ZonedDateTime getExpiryDate(String expiresInString)", "full_signature": "public static ZonedDateTime getExpiryDate(String expiresInString)", "class_method_signature": "TimeResolver.getExpiryDate(String expiresInString)", "testcase": false, "constructor": false}, {"identifier": "resolveExpression", "parameters": "(String subject)", "modifiers": "public static", "return": "Long", "signature": "Long resolveExpression(String subject)", "full_signature": "public static Long resolveExpression(String subject)", "class_method_signature": "TimeResolver.resolveExpression(String subject)", "testcase": false, "constructor": false}], "file": "httpsig/callout/src/main/java/com/google/apigee/util/TimeResolver.java"}, "focal_method": {"identifier": "resolveExpression", "parameters": "(String subject)", "modifiers": "public static", "return": "Long", "body": "public static Long resolveExpression(String subject) {\n      Matcher m = expiryPattern.matcher(subject);\n      if (m.find()) {\n        String key = m.group(2);\n        if (key.equals(\"\")) key = defaultUnit;\n        return Long.parseLong(m.group(1), 10) * timeMultipliers.get(key);\n      }\n      return -1L;\n    }", "signature": "Long resolveExpression(String subject)", "full_signature": "public static Long resolveExpression(String subject)", "class_method_signature": "TimeResolver.resolveExpression(String subject)", "testcase": false, "constructor": false, "invocations": ["matcher", "find", "group", "equals", "parseLong", "group", "get"]}, "repository": {"repo_id": 43989661, "url": "https://github.com/apigee/iloveapis2015-hmac-httpsignature", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 10, "size": 6369, "license": "licensed"}}