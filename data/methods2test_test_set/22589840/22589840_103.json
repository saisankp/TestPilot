{"test_class": {"identifier": "PublishDelegateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected PublishDelegate publishDelegateTestObject;", "modifier": "protected", "type": "PublishDelegate", "declarator": "publishDelegateTestObject", "var_name": "publishDelegateTestObject"}, {"original_string": "private Long contextId = 1L;", "modifier": "private", "type": "Long", "declarator": "contextId = 1L", "var_name": "contextId"}, {"original_string": "private ContextType contextType = ContextType.COURSE;", "modifier": "private", "type": "ContextType", "declarator": "contextType = ContextType.COURSE", "var_name": "contextType"}, {"original_string": "private String sourceType = ForumNotificationTypeHandler.FORUM_SOURCE_TYPE;", "modifier": "private", "type": "String", "declarator": "sourceType = ForumNotificationTypeHandler.FORUM_SOURCE_TYPE", "var_name": "sourceType"}, {"original_string": "private String contextTitle = \"ContextTestTitle\";", "modifier": "private", "type": "String", "declarator": "contextTitle = \"ContextTestTitle\"", "var_name": "contextTitle"}, {"original_string": "private Long subcontextId = 2L;", "modifier": "private", "type": "Long", "declarator": "subcontextId = 2L", "var_name": "subcontextId"}, {"original_string": "private Long sourceId = 3L;", "modifier": "private", "type": "Long", "declarator": "sourceId = 3L", "var_name": "sourceId"}, {"original_string": "private String sourceTitle = \"SourceTitle\";", "modifier": "private", "type": "String", "declarator": "sourceTitle = \"SourceTitle\"", "var_name": "sourceTitle"}, {"original_string": "private String sourceEntryTitle = \"SourceEntryTitle\";", "modifier": "private", "type": "String", "declarator": "sourceEntryTitle = \"SourceEntryTitle\"", "var_name": "sourceEntryTitle"}, {"original_string": "private Long sourceEntryId = 4L;", "modifier": "private", "type": "Long", "declarator": "sourceEntryId = 4L", "var_name": "sourceEntryId"}, {"original_string": "private Identity creatorIdentity;", "modifier": "private", "type": "Identity", "declarator": "creatorIdentity", "var_name": "creatorIdentity"}], "file": "OLAT-LMS/src/test/java/org/olat/lms/core/notification/impl/PublishDelegateTest.java"}, "test_case": {"identifier": "createAttributesFrom", "parameters": "()", "modifiers": "@Test @Ignore public", "return": "void", "body": "@Test\n    @Ignore\n    public void createAttributesFrom() {\n        // TODO: NOT YET IMPLEMENTED\n    }", "signature": "void createAttributesFrom()", "full_signature": "@Test @Ignore public void createAttributesFrom()", "class_method_signature": "PublishDelegateTest.createAttributesFrom()", "testcase": true, "constructor": false, "invocations": []}, "focal_class": {"identifier": "PublishDelegate", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerHelper.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerHelper.getLogger()", "var_name": "log"}, {"original_string": "@Autowired\n    PublisherDao publisherDao;", "modifier": "@Autowired", "type": "PublisherDao", "declarator": "publisherDao", "var_name": "publisherDao"}, {"original_string": "@Autowired\n    NotificationEventDao notificationEventDao;", "modifier": "@Autowired", "type": "NotificationEventDao", "declarator": "notificationEventDao", "var_name": "notificationEventDao"}], "methods": [{"identifier": "publishEvent", "parameters": "(PublishEventTO publishEventTO)", "modifiers": "public", "return": "int", "signature": "int publishEvent(PublishEventTO publishEventTO)", "full_signature": "public int publishEvent(PublishEventTO publishEventTO)", "class_method_signature": "PublishDelegate.publishEvent(PublishEventTO publishEventTO)", "testcase": false, "constructor": false}, {"identifier": "getPublisher", "parameters": "(PublishEventTO publishEventTO)", "modifiers": "", "return": "Publisher", "signature": "Publisher getPublisher(PublishEventTO publishEventTO)", "full_signature": " Publisher getPublisher(PublishEventTO publishEventTO)", "class_method_signature": "PublishDelegate.getPublisher(PublishEventTO publishEventTO)", "testcase": false, "constructor": false}, {"identifier": "publisherExists", "parameters": "(PublishEventTO publishEventTO)", "modifiers": "", "return": "boolean", "signature": "boolean publisherExists(PublishEventTO publishEventTO)", "full_signature": " boolean publisherExists(PublishEventTO publishEventTO)", "class_method_signature": "PublishDelegate.publisherExists(PublishEventTO publishEventTO)", "testcase": false, "constructor": false}, {"identifier": "createAttributesFrom", "parameters": "(PublishEventTO publishEventTO)", "modifiers": "", "return": "Map<String, String>", "signature": "Map<String, String> createAttributesFrom(PublishEventTO publishEventTO)", "full_signature": " Map<String, String> createAttributesFrom(PublishEventTO publishEventTO)", "class_method_signature": "PublishDelegate.createAttributesFrom(PublishEventTO publishEventTO)", "testcase": false, "constructor": false}], "file": "OLAT-LMS/src/main/java/org/olat/lms/core/notification/impl/PublishDelegate.java"}, "focal_method": {"identifier": "createAttributesFrom", "parameters": "(PublishEventTO publishEventTO)", "modifiers": "", "return": "Map<String, String>", "body": "Map<String, String> createAttributesFrom(PublishEventTO publishEventTO) {\n        Map<String, String> attributes = new HashMap<String, String>();\n        attributes.put(Attribute.EVENT_TYPE.name(), publishEventTO.getEvenType().name());\n        attributes.put(Attribute.CREATOR_USERNAME.name(), publishEventTO.getCreator().getName());\n        attributes.put(Attribute.CREATOR_FIRST_LAST_NAME.name(), publishEventTO.getCreatorsFirstLastName());\n        attributes.put(Attribute.SOURCE_ENTRY_ID.name(), String.valueOf(publishEventTO.getSourceEntryId()));\n        if (publishEventTO.getContextTitle() != null) {\n            attributes.put(Attribute.CONTEXT_TITLE.name(), publishEventTO.getContextTitle());\n        }\n        if (publishEventTO.getSourceTitle() != null) {\n            attributes.put(Attribute.SOURCE_TITLE.name(), publishEventTO.getSourceTitle());\n        }\n        if (publishEventTO.getSourceEntryTitle() != null) {\n            attributes.put(Attribute.SOURCE_ENTRY_TITLE.name(), publishEventTO.getSourceEntryTitle());\n        }\n        return attributes;\n    }", "signature": "Map<String, String> createAttributesFrom(PublishEventTO publishEventTO)", "full_signature": " Map<String, String> createAttributesFrom(PublishEventTO publishEventTO)", "class_method_signature": "PublishDelegate.createAttributesFrom(PublishEventTO publishEventTO)", "testcase": false, "constructor": false, "invocations": ["put", "name", "name", "getEvenType", "put", "name", "getName", "getCreator", "put", "name", "getCreatorsFirstLastName", "put", "name", "valueOf", "getSourceEntryId", "getContextTitle", "put", "name", "getContextTitle", "getSourceTitle", "put", "name", "getSourceTitle", "getSourceEntryTitle", "put", "name", "getSourceEntryTitle"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}