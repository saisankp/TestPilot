{"test_class": {"identifier": "FilteredObjectStoreTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final FilteredObjectStore<Car> filteredObjectStore = new FilteredObjectStore<Car>(\n            nonEmptyObjectStore(CarFactory.createCollectionOfCars(10)),\n            between(Car.CAR_ID, 2, 4)\n    );", "modifier": "final", "type": "FilteredObjectStore<Car>", "declarator": "filteredObjectStore = new FilteredObjectStore<Car>(\n            nonEmptyObjectStore(CarFactory.createCollectionOfCars(10)),\n            between(Car.CAR_ID, 2, 4)\n    )", "var_name": "filteredObjectStore"}, {"original_string": "final Car dummyCar = CarFactory.createCar(0);", "modifier": "final", "type": "Car", "declarator": "dummyCar = CarFactory.createCar(0)", "var_name": "dummyCar"}], "file": "code/src/test/java/com/googlecode/cqengine/persistence/support/FilteredObjectStoreTest.java"}, "test_case": {"identifier": "testContainsAll", "parameters": "()", "modifiers": "@Test(expected = UnsupportedOperationException.class) public", "return": "void", "body": "@Test(expected = UnsupportedOperationException.class)\n    public void testContainsAll() {\n        filteredObjectStore.containsAll(Collections.singleton(dummyCar), noQueryOptions());\n    }", "signature": "void testContainsAll()", "full_signature": "@Test(expected = UnsupportedOperationException.class) public void testContainsAll()", "class_method_signature": "FilteredObjectStoreTest.testContainsAll()", "testcase": true, "constructor": false, "invocations": ["containsAll", "singleton", "noQueryOptions"]}, "focal_class": {"identifier": "FilteredObjectStore", "superclass": "", "interfaces": "implements ObjectStore<O>", "fields": [{"original_string": "final ObjectStore<O> backingObjectStore;", "modifier": "final", "type": "ObjectStore<O>", "declarator": "backingObjectStore", "var_name": "backingObjectStore"}, {"original_string": "final Query<O> filterQuery;", "modifier": "final", "type": "Query<O>", "declarator": "filterQuery", "var_name": "filterQuery"}], "methods": [{"identifier": "FilteredObjectStore", "parameters": "(ObjectStore<O> backingObjectStore, Query<O> filterQuery)", "modifiers": "public", "return": "", "signature": " FilteredObjectStore(ObjectStore<O> backingObjectStore, Query<O> filterQuery)", "full_signature": "public  FilteredObjectStore(ObjectStore<O> backingObjectStore, Query<O> filterQuery)", "class_method_signature": "FilteredObjectStore.FilteredObjectStore(ObjectStore<O> backingObjectStore, Query<O> filterQuery)", "testcase": false, "constructor": true}, {"identifier": "iterator", "parameters": "(QueryOptions queryOptions)", "modifiers": "@Override public", "return": "CloseableIterator<O>", "signature": "CloseableIterator<O> iterator(QueryOptions queryOptions)", "full_signature": "@Override public CloseableIterator<O> iterator(QueryOptions queryOptions)", "class_method_signature": "FilteredObjectStore.iterator(QueryOptions queryOptions)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "(QueryOptions queryOptions)", "modifiers": "@Override public", "return": "int", "signature": "int size(QueryOptions queryOptions)", "full_signature": "@Override public int size(QueryOptions queryOptions)", "class_method_signature": "FilteredObjectStore.size(QueryOptions queryOptions)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(Object o, QueryOptions queryOptions)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(Object o, QueryOptions queryOptions)", "full_signature": "@Override public boolean contains(Object o, QueryOptions queryOptions)", "class_method_signature": "FilteredObjectStore.contains(Object o, QueryOptions queryOptions)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(QueryOptions queryOptions)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isEmpty(QueryOptions queryOptions)", "full_signature": "@Override public boolean isEmpty(QueryOptions queryOptions)", "class_method_signature": "FilteredObjectStore.isEmpty(QueryOptions queryOptions)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(O object, QueryOptions queryOptions)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean add(O object, QueryOptions queryOptions)", "full_signature": "@Override public boolean add(O object, QueryOptions queryOptions)", "class_method_signature": "FilteredObjectStore.add(O object, QueryOptions queryOptions)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(Object o, QueryOptions queryOptions)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean remove(Object o, QueryOptions queryOptions)", "full_signature": "@Override public boolean remove(Object o, QueryOptions queryOptions)", "class_method_signature": "FilteredObjectStore.remove(Object o, QueryOptions queryOptions)", "testcase": false, "constructor": false}, {"identifier": "containsAll", "parameters": "(Collection<?> c, QueryOptions queryOptions)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsAll(Collection<?> c, QueryOptions queryOptions)", "full_signature": "@Override public boolean containsAll(Collection<?> c, QueryOptions queryOptions)", "class_method_signature": "FilteredObjectStore.containsAll(Collection<?> c, QueryOptions queryOptions)", "testcase": false, "constructor": false}, {"identifier": "addAll", "parameters": "(Collection<? extends O> c, QueryOptions queryOptions)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean addAll(Collection<? extends O> c, QueryOptions queryOptions)", "full_signature": "@Override public boolean addAll(Collection<? extends O> c, QueryOptions queryOptions)", "class_method_signature": "FilteredObjectStore.addAll(Collection<? extends O> c, QueryOptions queryOptions)", "testcase": false, "constructor": false}, {"identifier": "retainAll", "parameters": "(Collection<?> c, QueryOptions queryOptions)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean retainAll(Collection<?> c, QueryOptions queryOptions)", "full_signature": "@Override public boolean retainAll(Collection<?> c, QueryOptions queryOptions)", "class_method_signature": "FilteredObjectStore.retainAll(Collection<?> c, QueryOptions queryOptions)", "testcase": false, "constructor": false}, {"identifier": "removeAll", "parameters": "(Collection<?> c, QueryOptions queryOptions)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeAll(Collection<?> c, QueryOptions queryOptions)", "full_signature": "@Override public boolean removeAll(Collection<?> c, QueryOptions queryOptions)", "class_method_signature": "FilteredObjectStore.removeAll(Collection<?> c, QueryOptions queryOptions)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "(QueryOptions queryOptions)", "modifiers": "@Override public", "return": "void", "signature": "void clear(QueryOptions queryOptions)", "full_signature": "@Override public void clear(QueryOptions queryOptions)", "class_method_signature": "FilteredObjectStore.clear(QueryOptions queryOptions)", "testcase": false, "constructor": false}], "file": "code/src/main/java/com/googlecode/cqengine/persistence/support/FilteredObjectStore.java"}, "focal_method": {"identifier": "containsAll", "parameters": "(Collection<?> c, QueryOptions queryOptions)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean containsAll(Collection<?> c, QueryOptions queryOptions) {\n        throw new UnsupportedOperationException();\n    }", "signature": "boolean containsAll(Collection<?> c, QueryOptions queryOptions)", "full_signature": "@Override public boolean containsAll(Collection<?> c, QueryOptions queryOptions)", "class_method_signature": "FilteredObjectStore.containsAll(Collection<?> c, QueryOptions queryOptions)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 41263775, "url": "https://github.com/npgall/cqengine", "language": "Java", "is_fork": false, "fork_count": 180, "stargazer_count": 1194, "size": 11701, "license": "licensed"}}