{"test_class": {"identifier": "UriValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final UriValidator validator = new UriValidator();", "modifier": "private static final", "type": "UriValidator", "declarator": "validator = new UriValidator()", "var_name": "validator"}], "file": "commons/ihe/xds/src/test/java/org/openehealth/ipf/commons/ihe/xds/core/validate/UriValidatorTest.java"}, "test_case": {"identifier": "testValidateGoodCases", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateGoodCases() throws XDSMetaDataException {\n        validator.validate(Arrays.asList(\"http://localhost:8080\"));\n        validator.validate(Arrays.asList(\"1|http://localhost:8080\"));\n        validator.validate(Arrays.asList(\"1|http://localhost:8080\", \"2|/a\", \"3|/a\", \"4|/a\", \"5|/a\", \"6|/a\", \"7|/a\", \"8|/a\", \"9|/a\"));\n    }", "signature": "void testValidateGoodCases()", "full_signature": "@Test public void testValidateGoodCases()", "class_method_signature": "UriValidatorTest.testValidateGoodCases()", "testcase": true, "constructor": false, "invocations": ["validate", "asList", "validate", "asList", "validate", "asList"]}, "focal_class": {"identifier": "UriValidator", "superclass": "", "interfaces": "implements ValueListValidator", "fields": [{"original_string": "private static final Pattern PATTERN = Pattern.compile(\"([1-9])\\\\|(.*)\");", "modifier": "private static final", "type": "Pattern", "declarator": "PATTERN = Pattern.compile(\"([1-9])\\\\|(.*)\")", "var_name": "PATTERN"}], "methods": [{"identifier": "validate", "parameters": "(List<String> values)", "modifiers": "@Override public", "return": "void", "signature": "void validate(List<String> values)", "full_signature": "@Override public void validate(List<String> values)", "class_method_signature": "UriValidator.validate(List<String> values)", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "(List<String> values)", "modifiers": "private", "return": "String", "signature": "String getUri(List<String> values)", "full_signature": "private String getUri(List<String> values)", "class_method_signature": "UriValidator.getUri(List<String> values)", "testcase": false, "constructor": false}], "file": "commons/ihe/xds/src/main/java/org/openehealth/ipf/commons/ihe/xds/core/validate/UriValidator.java"}, "focal_method": {"identifier": "validate", "parameters": "(List<String> values)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void validate(List<String> values) throws XDSMetaDataException {\n        if (values.size() > 0) {\n            String uri = getUri(values);\n            metaDataAssert(uri != null, NULL_URI);\n            metaDataAssert(!uri.isEmpty(), EMPTY_URI);\n            \n            // Accept anything that the classes URI or URL accept. This is done to\n            // avoid e.g. \"http://\" to fail. The XDSToolKit is using this URI\n            // for some tests and the RFCs do not clearly state if this is a valid\n            // URI or not. The URL class seems to accept it, the URI class doesn't.\n            try {\n                new URI(uri);\n            }\n            catch (URISyntaxException eUri) {\n                try {\n                    new URL(uri);\n                } catch (MalformedURLException eUrl) {\n                    throw new XDSMetaDataException(INVALID_URI, uri);\n                }\n            }\n        }\n    }", "signature": "void validate(List<String> values)", "full_signature": "@Override public void validate(List<String> values)", "class_method_signature": "UriValidator.validate(List<String> values)", "testcase": false, "constructor": false, "invocations": ["size", "getUri", "metaDataAssert", "metaDataAssert", "isEmpty"]}, "repository": {"repo_id": 793164, "url": "https://github.com/krasserm/ipf", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 30233, "license": "licensed"}}