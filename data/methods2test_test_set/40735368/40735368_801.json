{"test_class": {"identifier": "TransformedShapeTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/library/main/src/test/java/org/geotools/geometry/jts/TransformedShapeTest.java"}, "test_case": {"identifier": "testBounds", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBounds() {\n        GeneralPath gp = new GeneralPath();\n        gp.moveTo(0f, 0f);\n        gp.lineTo(1, 0.3);\n        gp.lineTo(0f, 0.6f);\n        gp.closePath();\n        \n        AffineTransform at = AffineTransform.getScaleInstance(1.5, 1.5);\n        TransformedShape ts = new TransformedShape(gp, at);\n\n        assertEquals(new Rectangle(0, 0, 2, 1), ts.getBounds());\n    }", "signature": "void testBounds()", "full_signature": "@Test public void testBounds()", "class_method_signature": "TransformedShapeTest.testBounds()", "testcase": true, "constructor": false, "invocations": ["moveTo", "lineTo", "lineTo", "closePath", "getScaleInstance", "assertEquals", "getBounds"]}, "focal_class": {"identifier": "TransformedShape", "superclass": "extends AffineTransform", "interfaces": "implements Shape", "fields": [{"original_string": "public Shape shape;", "modifier": "public", "type": "Shape", "declarator": "shape", "var_name": "shape"}, {"original_string": "private final Point2D.Double point = new Point2D.Double();", "modifier": "private final", "type": "Point2D.Double", "declarator": "point = new Point2D.Double()", "var_name": "point"}, {"original_string": "private final Rectangle2D.Double rectangle = new Rectangle2D.Double();", "modifier": "private final", "type": "Rectangle2D.Double", "declarator": "rectangle = new Rectangle2D.Double()", "var_name": "rectangle"}], "methods": [{"identifier": "TransformedShape", "parameters": "()", "modifiers": "public", "return": "", "signature": " TransformedShape()", "full_signature": "public  TransformedShape()", "class_method_signature": "TransformedShape.TransformedShape()", "testcase": false, "constructor": true}, {"identifier": "TransformedShape", "parameters": "(Shape shape, AffineTransform at)", "modifiers": "public", "return": "", "signature": " TransformedShape(Shape shape, AffineTransform at)", "full_signature": "public  TransformedShape(Shape shape, AffineTransform at)", "class_method_signature": "TransformedShape.TransformedShape(Shape shape, AffineTransform at)", "testcase": false, "constructor": true}, {"identifier": "getMatrix", "parameters": "(final float[] matrix, int offset)", "modifiers": "public", "return": "void", "signature": "void getMatrix(final float[] matrix, int offset)", "full_signature": "public void getMatrix(final float[] matrix, int offset)", "class_method_signature": "TransformedShape.getMatrix(final float[] matrix, int offset)", "testcase": false, "constructor": false}, {"identifier": "setTransform", "parameters": "(final float[] matrix, int offset)", "modifiers": "public", "return": "void", "signature": "void setTransform(final float[] matrix, int offset)", "full_signature": "public void setTransform(final float[] matrix, int offset)", "class_method_signature": "TransformedShape.setTransform(final float[] matrix, int offset)", "testcase": false, "constructor": false}, {"identifier": "setTransform", "parameters": "(final double[] matrix)", "modifiers": "public", "return": "void", "signature": "void setTransform(final double[] matrix)", "full_signature": "public void setTransform(final double[] matrix)", "class_method_signature": "TransformedShape.setTransform(final double[] matrix)", "testcase": false, "constructor": false}, {"identifier": "scale", "parameters": "(final double s)", "modifiers": "public", "return": "void", "signature": "void scale(final double s)", "full_signature": "public void scale(final double s)", "class_method_signature": "TransformedShape.scale(final double s)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(double x, double y)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(double x, double y)", "full_signature": "public boolean contains(double x, double y)", "class_method_signature": "TransformedShape.contains(double x, double y)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final Point2D p)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(final Point2D p)", "full_signature": "public boolean contains(final Point2D p)", "class_method_signature": "TransformedShape.contains(final Point2D p)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(double x, double y, double width, double height)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(double x, double y, double width, double height)", "full_signature": "public boolean contains(double x, double y, double width, double height)", "class_method_signature": "TransformedShape.contains(double x, double y, double width, double height)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final Rectangle2D r)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(final Rectangle2D r)", "full_signature": "public boolean contains(final Rectangle2D r)", "class_method_signature": "TransformedShape.contains(final Rectangle2D r)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(double x, double y, double width, double height)", "modifiers": "public", "return": "boolean", "signature": "boolean intersects(double x, double y, double width, double height)", "full_signature": "public boolean intersects(double x, double y, double width, double height)", "class_method_signature": "TransformedShape.intersects(double x, double y, double width, double height)", "testcase": false, "constructor": false}, {"identifier": "intersects", "parameters": "(final Rectangle2D r)", "modifiers": "public", "return": "boolean", "signature": "boolean intersects(final Rectangle2D r)", "full_signature": "public boolean intersects(final Rectangle2D r)", "class_method_signature": "TransformedShape.intersects(final Rectangle2D r)", "testcase": false, "constructor": false}, {"identifier": "getBounds", "parameters": "()", "modifiers": "public", "return": "Rectangle", "signature": "Rectangle getBounds()", "full_signature": "public Rectangle getBounds()", "class_method_signature": "TransformedShape.getBounds()", "testcase": false, "constructor": false}, {"identifier": "getBounds2D", "parameters": "()", "modifiers": "public", "return": "Rectangle2D", "signature": "Rectangle2D getBounds2D()", "full_signature": "public Rectangle2D getBounds2D()", "class_method_signature": "TransformedShape.getBounds2D()", "testcase": false, "constructor": false}, {"identifier": "getPathIterator", "parameters": "(AffineTransform at)", "modifiers": "public", "return": "PathIterator", "signature": "PathIterator getPathIterator(AffineTransform at)", "full_signature": "public PathIterator getPathIterator(AffineTransform at)", "class_method_signature": "TransformedShape.getPathIterator(AffineTransform at)", "testcase": false, "constructor": false}, {"identifier": "getPathIterator", "parameters": "(AffineTransform at,\n\t\t\tfinal double flatness)", "modifiers": "public", "return": "PathIterator", "signature": "PathIterator getPathIterator(AffineTransform at,\n\t\t\tfinal double flatness)", "full_signature": "public PathIterator getPathIterator(AffineTransform at,\n\t\t\tfinal double flatness)", "class_method_signature": "TransformedShape.getPathIterator(AffineTransform at,\n\t\t\tfinal double flatness)", "testcase": false, "constructor": false}, {"identifier": "exceptionOccured", "parameters": "(\n\t\t\tfinal NoninvertibleTransformException exception, final String method)", "modifiers": "private static", "return": "void", "signature": "void exceptionOccured(\n\t\t\tfinal NoninvertibleTransformException exception, final String method)", "full_signature": "private static void exceptionOccured(\n\t\t\tfinal NoninvertibleTransformException exception, final String method)", "class_method_signature": "TransformedShape.exceptionOccured(\n\t\t\tfinal NoninvertibleTransformException exception, final String method)", "testcase": false, "constructor": false}], "file": "modules/library/main/src/main/java/org/geotools/geometry/jts/TransformedShape.java"}, "focal_method": {"identifier": "getBounds", "parameters": "()", "modifiers": "public", "return": "Rectangle", "body": "public Rectangle getBounds() {\n\t\tRectangle2D rect = getBounds2D();\n\t\tint minx = (int) Math.floor(rect.getMinX());\n\t\tint miny = (int) Math.floor(rect.getMinY());\n\t\tint maxx = (int) Math.ceil(rect.getMaxX());\n        int maxy = (int) Math.ceil(rect.getMaxY());\n\t\treturn new Rectangle(minx, miny, maxx - minx, maxy - miny);\n\t}", "signature": "Rectangle getBounds()", "full_signature": "public Rectangle getBounds()", "class_method_signature": "TransformedShape.getBounds()", "testcase": false, "constructor": false, "invocations": ["getBounds2D", "floor", "getMinX", "floor", "getMinY", "ceil", "getMaxX", "ceil", "getMaxY"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}