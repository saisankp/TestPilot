{"test_class": {"identifier": "GraphUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "math/src/test/java/com/powsybl/math/graph/GraphUtilTest.java"}, "test_case": {"identifier": "removeIsolatedVertices", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void removeIsolatedVertices() throws Exception {\n        UndirectedGraph<Object, Object> graph = new UndirectedGraphImpl<>();\n\n        graph.addVertex();\n        graph.addVertex();\n        graph.addVertex();\n        graph.addEdge(1, 2, null);\n        graph.setVertexObject(0, new Object());\n\n        assertEquals(3, graph.getVertexCount());\n        // Vertex 0 is isolated but has an associated object: it must not be removed.\n        GraphUtil.removeIsolatedVertices(graph);\n        assertEquals(3, graph.getVertexCount());\n        graph.setVertexObject(0, null);\n        // Now vertex 0 must be removed.\n        GraphUtil.removeIsolatedVertices(graph);\n        assertEquals(2, graph.getVertexCount());\n    }", "signature": "void removeIsolatedVertices()", "full_signature": "@Test public void removeIsolatedVertices()", "class_method_signature": "GraphUtilTest.removeIsolatedVertices()", "testcase": true, "constructor": false, "invocations": ["addVertex", "addVertex", "addVertex", "addEdge", "setVertexObject", "assertEquals", "getVertexCount", "removeIsolatedVertices", "assertEquals", "getVertexCount", "setVertexObject", "removeIsolatedVertices", "assertEquals", "getVertexCount"]}, "focal_class": {"identifier": "GraphUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "GraphUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " GraphUtil()", "full_signature": "private  GraphUtil()", "class_method_signature": "GraphUtil.GraphUtil()", "testcase": false, "constructor": true}, {"identifier": "computeConnectedComponents", "parameters": "(int v1, int c, int[] componentSize, TIntArrayList[] adjacencyList, int[] componentNumber)", "modifiers": "private static", "return": "void", "signature": "void computeConnectedComponents(int v1, int c, int[] componentSize, TIntArrayList[] adjacencyList, int[] componentNumber)", "full_signature": "private static void computeConnectedComponents(int v1, int c, int[] componentSize, TIntArrayList[] adjacencyList, int[] componentNumber)", "class_method_signature": "GraphUtil.computeConnectedComponents(int v1, int c, int[] componentSize, TIntArrayList[] adjacencyList, int[] componentNumber)", "testcase": false, "constructor": false}, {"identifier": "computeConnectedComponents", "parameters": "(TIntArrayList[] adjacencyList)", "modifiers": "public static", "return": "ConnectedComponentsComputationResult", "signature": "ConnectedComponentsComputationResult computeConnectedComponents(TIntArrayList[] adjacencyList)", "full_signature": "public static ConnectedComponentsComputationResult computeConnectedComponents(TIntArrayList[] adjacencyList)", "class_method_signature": "GraphUtil.computeConnectedComponents(TIntArrayList[] adjacencyList)", "testcase": false, "constructor": false}, {"identifier": "removeIsolatedVertices", "parameters": "(UndirectedGraph<V, E> graph)", "modifiers": "public static", "return": "void", "signature": "void removeIsolatedVertices(UndirectedGraph<V, E> graph)", "full_signature": "public static void removeIsolatedVertices(UndirectedGraph<V, E> graph)", "class_method_signature": "GraphUtil.removeIsolatedVertices(UndirectedGraph<V, E> graph)", "testcase": false, "constructor": false}], "file": "math/src/main/java/com/powsybl/math/graph/GraphUtil.java"}, "focal_method": {"identifier": "removeIsolatedVertices", "parameters": "(UndirectedGraph<V, E> graph)", "modifiers": "public static", "return": "void", "body": "public static <V, E> void removeIsolatedVertices(UndirectedGraph<V, E> graph) {\n        Objects.requireNonNull(graph, \"Graph is null.\");\n\n        TIntSet connectedVertices = new TIntHashSet();\n        for (int e : graph.getEdges()) {\n            connectedVertices.add(graph.getEdgeVertex1(e));\n            connectedVertices.add(graph.getEdgeVertex2(e));\n        }\n\n        for (int v : graph.getVertices()) {\n            if (!connectedVertices.contains(v) && graph.getVertexObject(v) == null) {\n                graph.removeVertex(v);\n            }\n        }\n    }", "signature": "void removeIsolatedVertices(UndirectedGraph<V, E> graph)", "full_signature": "public static void removeIsolatedVertices(UndirectedGraph<V, E> graph)", "class_method_signature": "GraphUtil.removeIsolatedVertices(UndirectedGraph<V, E> graph)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "getEdges", "add", "getEdgeVertex1", "add", "getEdgeVertex2", "getVertices", "contains", "getVertexObject", "removeVertex"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}