{"test_class": {"identifier": "UrlEncoderTest", "superclass": "extends Assert", "interfaces": "", "fields": [], "file": "core/src/test/java/com/chillenious/common/util/UrlEncoderTest.java"}, "test_case": {"identifier": "encodeApostrophe", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void encodeApostrophe() {\n        assertEquals(\"someone%27s%20bad%20url\",\n                UrlEncoder.FULL_PATH_INSTANCE.encode(\"someone's bad url\", CharEncoding.UTF_8));\n    }", "signature": "void encodeApostrophe()", "full_signature": "@Test public void encodeApostrophe()", "class_method_signature": "UrlEncoderTest.encodeApostrophe()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "encode"]}, "focal_class": {"identifier": "UrlEncoder", "superclass": "", "interfaces": "", "fields": [{"original_string": "protected BitSet dontNeedEncoding;", "modifier": "protected", "type": "BitSet", "declarator": "dontNeedEncoding", "var_name": "dontNeedEncoding"}, {"original_string": "protected static final int caseDiff = ('a' - 'A');", "modifier": "protected static final", "type": "int", "declarator": "caseDiff = ('a' - 'A')", "var_name": "caseDiff"}, {"original_string": "public static final UrlEncoder QUERY_INSTANCE = new UrlEncoder(Type.QUERY);", "modifier": "public static final", "type": "UrlEncoder", "declarator": "QUERY_INSTANCE = new UrlEncoder(Type.QUERY)", "var_name": "QUERY_INSTANCE"}, {"original_string": "public static final UrlEncoder PATH_INSTANCE = new UrlEncoder(Type.PATH);", "modifier": "public static final", "type": "UrlEncoder", "declarator": "PATH_INSTANCE = new UrlEncoder(Type.PATH)", "var_name": "PATH_INSTANCE"}, {"original_string": "public static final UrlEncoder FULL_PATH_INSTANCE = new UrlEncoder(Type.FULL_PATH);", "modifier": "public static final", "type": "UrlEncoder", "declarator": "FULL_PATH_INSTANCE = new UrlEncoder(Type.FULL_PATH)", "var_name": "FULL_PATH_INSTANCE"}, {"original_string": "private final Type type;", "modifier": "private final", "type": "Type", "declarator": "type", "var_name": "type"}], "methods": [{"identifier": "UrlEncoder", "parameters": "(final Type type)", "modifiers": "protected", "return": "", "signature": " UrlEncoder(final Type type)", "full_signature": "protected  UrlEncoder(final Type type)", "class_method_signature": "UrlEncoder.UrlEncoder(final Type type)", "testcase": false, "constructor": true}, {"identifier": "encode", "parameters": "(final String s, final Charset charset)", "modifiers": "public", "return": "String", "signature": "String encode(final String s, final Charset charset)", "full_signature": "public String encode(final String s, final Charset charset)", "class_method_signature": "UrlEncoder.encode(final String s, final Charset charset)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(final String unsafeInput, final String charsetName)", "modifiers": "public", "return": "String", "signature": "String encode(final String unsafeInput, final String charsetName)", "full_signature": "public String encode(final String unsafeInput, final String charsetName)", "class_method_signature": "UrlEncoder.encode(final String unsafeInput, final String charsetName)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/chillenious/common/util/UrlEncoder.java"}, "focal_method": {"identifier": "encode", "parameters": "(final String s, final Charset charset)", "modifiers": "public", "return": "String", "body": "public String encode(final String s, final Charset charset) {\n        return encode(s, charset.name());\n    }", "signature": "String encode(final String s, final Charset charset)", "full_signature": "public String encode(final String s, final Charset charset)", "class_method_signature": "UrlEncoder.encode(final String s, final Charset charset)", "testcase": false, "constructor": false, "invocations": ["encode", "name"]}, "repository": {"repo_id": 27147147, "url": "https://github.com/chillenious/commons", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 11, "size": 248, "license": "licensed"}}