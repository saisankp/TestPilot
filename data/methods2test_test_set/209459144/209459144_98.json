{"test_class": {"identifier": "TeamMemberServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(TeamMemberServiceTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(TeamMemberServiceTest.class)", "var_name": "LOG"}, {"original_string": "TeamMemberService teamMemberService = new TeamMemberService();", "modifier": "", "type": "TeamMemberService", "declarator": "teamMemberService = new TeamMemberService()", "var_name": "teamMemberService"}], "file": "submarine-server/server-core/src/test/java/org/apache/submarine/server/workbench/database/service/TeamMemberServiceTest.java"}, "test_case": {"identifier": "insertSelective", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void insertSelective() throws Exception {\n    TeamMember teamMember = new TeamMember();\n    teamMember.setTeamId(\"teamId\");\n    teamMember.setTeamName(\"teamName\");\n    teamMember.setCreateBy(\"createBy\");\n    teamMember.setMember(\"member\");\n    teamMember.setInviter(1);\n    Boolean ret = teamMemberService.insertSelective(teamMember);\n    assertTrue(ret);\n\n    List<TeamMember> teamMemberList = teamMemberService.queryList(\"teamId\");\n    assertEquals(teamMemberList.size(), 1);\n    for (TeamMember member : teamMemberList) {\n      assertEquals(member.getTeamName(), teamMember.getTeamName());\n      assertEquals(member.getTeamId(), teamMember.getTeamId());\n      assertEquals(member.getCreateBy(), teamMember.getCreateBy());\n      assertEquals(member.getMember(), teamMember.getMember());\n      assertEquals(member.getInviter(), teamMember.getInviter());\n\n      LOG.info(\"member.createTime:{}, member.updateTime:{}\", member.getCreateTime(), member.getUpdateTime());\n    }\n  }", "signature": "void insertSelective()", "full_signature": "@Test public void insertSelective()", "class_method_signature": "TeamMemberServiceTest.insertSelective()", "testcase": true, "constructor": false, "invocations": ["setTeamId", "setTeamName", "setCreateBy", "setMember", "setInviter", "insertSelective", "assertTrue", "queryList", "assertEquals", "size", "assertEquals", "getTeamName", "getTeamName", "assertEquals", "getTeamId", "getTeamId", "assertEquals", "getCreateBy", "getCreateBy", "assertEquals", "getMember", "getMember", "assertEquals", "getInviter", "getInviter", "info", "getCreateTime", "getUpdateTime"]}, "focal_class": {"identifier": "TeamMemberService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(TeamMemberService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(TeamMemberService.class)", "var_name": "LOG"}], "methods": [{"identifier": "queryList", "parameters": "(String teamId)", "modifiers": "public", "return": "List<TeamMember>", "signature": "List<TeamMember> queryList(String teamId)", "full_signature": "public List<TeamMember> queryList(String teamId)", "class_method_signature": "TeamMemberService.queryList(String teamId)", "testcase": false, "constructor": false}, {"identifier": "insertSelective", "parameters": "(TeamMember teamMember)", "modifiers": "public", "return": "boolean", "signature": "boolean insertSelective(TeamMember teamMember)", "full_signature": "public boolean insertSelective(TeamMember teamMember)", "class_method_signature": "TeamMemberService.insertSelective(TeamMember teamMember)", "testcase": false, "constructor": false}, {"identifier": "deleteByPrimaryKey", "parameters": "(String id)", "modifiers": "public", "return": "void", "signature": "void deleteByPrimaryKey(String id)", "full_signature": "public void deleteByPrimaryKey(String id)", "class_method_signature": "TeamMemberService.deleteByPrimaryKey(String id)", "testcase": false, "constructor": false}], "file": "submarine-server/server-core/src/main/java/org/apache/submarine/server/workbench/database/service/TeamMemberService.java"}, "focal_method": {"identifier": "insertSelective", "parameters": "(TeamMember teamMember)", "modifiers": "public", "return": "boolean", "body": "public boolean insertSelective(TeamMember teamMember) throws Exception {\n    LOG.info(\"insertSelective({})\", teamMember.toString());\n\n    try (SqlSession sqlSession = MyBatisUtil.getSqlSession()) {\n      TeamMemberMapper teamMemberMapper = sqlSession.getMapper(TeamMemberMapper.class);\n      teamMemberMapper.insertSelective(teamMember);\n\n      sqlSession.commit();\n    } catch (Exception e) {\n      LOG.error(e.getMessage(), e);\n      throw new Exception(e);\n    }\n    return true;\n  }", "signature": "boolean insertSelective(TeamMember teamMember)", "full_signature": "public boolean insertSelective(TeamMember teamMember)", "class_method_signature": "TeamMemberService.insertSelective(TeamMember teamMember)", "testcase": false, "constructor": false, "invocations": ["info", "toString", "getSqlSession", "getMapper", "insertSelective", "commit", "error", "getMessage"]}, "repository": {"repo_id": 209459144, "url": "https://github.com/apache/submarine", "stars": 185, "created": "9/19/2019 4:00:17 AM +00:00", "updates": "2020-01-27T15:27:05+00:00", "fork": "False", "license": "licensed"}}