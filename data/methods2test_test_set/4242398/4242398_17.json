{"test_class": {"identifier": "TransactionModificationLockTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/turbospaces/spaces/tx/TransactionModificationLockTest.java"}, "test_case": {"identifier": "canGetExceptionTryingToUnlockFromParallelThread", "parameters": "()", "modifiers": "@Test(expected = IllegalMonitorStateException.class) public", "return": "void", "body": "@Test(expected = IllegalMonitorStateException.class)\n    public void canGetExceptionTryingToUnlockFromParallelThread()\n                                                                 throws Exception {\n        final TransactionModificationContext c1 = new TransactionModificationContext();\n        final TransactionModificationLock lock = new TransactionModificationLock( true );\n\n        throw JVMUtil.runAndGetExecutionException( new Runnable() {\n\n            @Override\n            public void run() {\n                lock.unlock( c1.getTransactionId() );\n            }\n        } );\n    }", "signature": "void canGetExceptionTryingToUnlockFromParallelThread()", "full_signature": "@Test(expected = IllegalMonitorStateException.class) public void canGetExceptionTryingToUnlockFromParallelThread()", "class_method_signature": "TransactionModificationLockTest.canGetExceptionTryingToUnlockFromParallelThread()", "testcase": true, "constructor": false, "invocations": ["runAndGetExecutionException", "unlock", "getTransactionId"]}, "focal_class": {"identifier": "TransactionModificationLock", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Sync sync;", "modifier": "private final", "type": "Sync", "declarator": "sync", "var_name": "sync"}], "methods": [{"identifier": "TransactionModificationLock", "parameters": "(final boolean exclusiveMode)", "modifiers": "", "return": "", "signature": " TransactionModificationLock(final boolean exclusiveMode)", "full_signature": "  TransactionModificationLock(final boolean exclusiveMode)", "class_method_signature": "TransactionModificationLock.TransactionModificationLock(final boolean exclusiveMode)", "testcase": false, "constructor": true}, {"identifier": "lock", "parameters": "(final long transactionID)", "modifiers": "", "return": "boolean", "signature": "boolean lock(final long transactionID)", "full_signature": " boolean lock(final long transactionID)", "class_method_signature": "TransactionModificationLock.lock(final long transactionID)", "testcase": false, "constructor": false}, {"identifier": "tryLock", "parameters": "(final long transactionID,\n                    final long timeout,\n                    final TimeUnit unit)", "modifiers": "", "return": "boolean", "signature": "boolean tryLock(final long transactionID,\n                    final long timeout,\n                    final TimeUnit unit)", "full_signature": " boolean tryLock(final long transactionID,\n                    final long timeout,\n                    final TimeUnit unit)", "class_method_signature": "TransactionModificationLock.tryLock(final long transactionID,\n                    final long timeout,\n                    final TimeUnit unit)", "testcase": false, "constructor": false}, {"identifier": "unlock", "parameters": "(final long transactionID)", "modifiers": "", "return": "void", "signature": "void unlock(final long transactionID)", "full_signature": " void unlock(final long transactionID)", "class_method_signature": "TransactionModificationLock.unlock(final long transactionID)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/turbospaces/spaces/tx/TransactionModificationLock.java"}, "focal_method": {"identifier": "unlock", "parameters": "(final long transactionID)", "modifiers": "", "return": "void", "body": "void unlock(final long transactionID) {\n        sync.release( transactionID );\n    }", "signature": "void unlock(final long transactionID)", "full_signature": " void unlock(final long transactionID)", "class_method_signature": "TransactionModificationLock.unlock(final long transactionID)", "testcase": false, "constructor": false, "invocations": ["release"]}, "repository": {"repo_id": 4242398, "url": "https://github.com/turbospaces/turbospaces", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 10, "size": 915, "license": "licensed"}}