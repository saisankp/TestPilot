{"test_class": {"identifier": "StandardPseudoFunctionFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "css-frontend/src/test/java/org/sonar/css/model/pseudo/pseudofunction/StandardPseudoFunctionFactoryTest.java"}, "test_case": {"identifier": "should_return_a_valid_has_pseudo_function_object_uppercase_test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void should_return_a_valid_has_pseudo_function_object_uppercase_test() {\n    StandardPseudoFunction function = StandardPseudoFunctionFactory.getByName(\"HAS\");\n    assertEquals(Has.class, function.getClass());\n    assertEquals(function.getName(), \"has\");\n    assertEquals(function.getLinks().size(), 1);\n    assertEquals(function.getLinks().get(0), \"https://drafts.csswg.org/selectors-4/#overview\");\n    assertEquals(function.isExperimental(), true);\n    assertEquals(function.isObsolete(), false);\n  }", "signature": "void should_return_a_valid_has_pseudo_function_object_uppercase_test()", "full_signature": "@Test public void should_return_a_valid_has_pseudo_function_object_uppercase_test()", "class_method_signature": "StandardPseudoFunctionFactoryTest.should_return_a_valid_has_pseudo_function_object_uppercase_test()", "testcase": true, "constructor": false, "invocations": ["getByName", "assertEquals", "getClass", "assertEquals", "getName", "assertEquals", "size", "getLinks", "assertEquals", "get", "getLinks", "assertEquals", "isExperimental", "assertEquals", "isObsolete"]}, "focal_class": {"identifier": "StandardPseudoFunctionFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Set<Class> ALL_PSEUDO_FUNCTION_CLASSES = ImmutableSet.of(\n    Any.class,\n    Current.class,\n    Dir.class,\n    Drop.class,\n    Has.class,\n    Lang.class,\n    Matches.class,\n    Not.class,\n    NthChild.class,\n    NthColumn.class,\n    NthLastChild.class,\n    NthLastColumn.class,\n    NthLastOfType.class,\n    NthOfType.class);", "modifier": "private static final", "type": "Set<Class>", "declarator": "ALL_PSEUDO_FUNCTION_CLASSES = ImmutableSet.of(\n    Any.class,\n    Current.class,\n    Dir.class,\n    Drop.class,\n    Has.class,\n    Lang.class,\n    Matches.class,\n    Not.class,\n    NthChild.class,\n    NthColumn.class,\n    NthLastChild.class,\n    NthLastColumn.class,\n    NthLastOfType.class,\n    NthOfType.class)", "var_name": "ALL_PSEUDO_FUNCTION_CLASSES"}, {"original_string": "private static final Map<String, StandardPseudoFunction> ALL = new HashMap<>();", "modifier": "private static final", "type": "Map<String, StandardPseudoFunction>", "declarator": "ALL = new HashMap<>()", "var_name": "ALL"}], "methods": [{"identifier": "StandardPseudoFunctionFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " StandardPseudoFunctionFactory()", "full_signature": "private  StandardPseudoFunctionFactory()", "class_method_signature": "StandardPseudoFunctionFactory.StandardPseudoFunctionFactory()", "testcase": false, "constructor": true}, {"identifier": "getByName", "parameters": "(String functionName)", "modifiers": "public static", "return": "StandardPseudoFunction", "signature": "StandardPseudoFunction getByName(String functionName)", "full_signature": "public static StandardPseudoFunction getByName(String functionName)", "class_method_signature": "StandardPseudoFunctionFactory.getByName(String functionName)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "public static", "return": "List<StandardPseudoFunction>", "signature": "List<StandardPseudoFunction> getAll()", "full_signature": "public static List<StandardPseudoFunction> getAll()", "class_method_signature": "StandardPseudoFunctionFactory.getAll()", "testcase": false, "constructor": false}], "file": "css-frontend/src/main/java/org/sonar/css/model/pseudo/pseudofunction/StandardPseudoFunctionFactory.java"}, "focal_method": {"identifier": "getByName", "parameters": "(String functionName)", "modifiers": "public static", "return": "StandardPseudoFunction", "body": "public static StandardPseudoFunction getByName(String functionName) {\n    StandardPseudoFunction standardPseudoFunction = ALL.get(functionName.toLowerCase(Locale.ENGLISH));\n    return standardPseudoFunction != null ? standardPseudoFunction : new UnknownPseudoFunction(functionName);\n  }", "signature": "StandardPseudoFunction getByName(String functionName)", "full_signature": "public static StandardPseudoFunction getByName(String functionName)", "class_method_signature": "StandardPseudoFunctionFactory.getByName(String functionName)", "testcase": false, "constructor": false, "invocations": ["get", "toLowerCase"]}, "repository": {"repo_id": 84313991, "url": "https://github.com/kalidasya/sonar-css-plugin", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 7, "size": 5062, "license": "licensed"}}