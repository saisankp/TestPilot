{"test_class": {"identifier": "ImmutableMeasurementTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final MetricType TYPE = MetricType.CONSUMED;", "modifier": "private static final", "type": "MetricType", "declarator": "TYPE = MetricType.CONSUMED", "var_name": "TYPE"}, {"original_string": "private static final boolean SUCCESS = true;", "modifier": "private static final", "type": "boolean", "declarator": "SUCCESS = true", "var_name": "SUCCESS"}, {"original_string": "private static final Measurement MEASUREMENT = new ImmutableMeasurement(TYPE, SUCCESS, COUNTERS, INSTANT);", "modifier": "private static final", "type": "Measurement", "declarator": "MEASUREMENT = new ImmutableMeasurement(TYPE, SUCCESS, COUNTERS, INSTANT)", "var_name": "MEASUREMENT"}, {"original_string": "private static final JsonObject MEASUREMENT_JSON = getMeasurementJson(TYPE, SUCCESS);", "modifier": "private static final", "type": "JsonObject", "declarator": "MEASUREMENT_JSON = getMeasurementJson(TYPE, SUCCESS)", "var_name": "MEASUREMENT_JSON"}], "file": "model/connectivity/src/test/java/org/eclipse/ditto/model/connectivity/ImmutableMeasurementTest.java"}, "test_case": {"identifier": "toJsonReturnsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toJsonReturnsExpected() {\n        final JsonObject actual = MEASUREMENT.toJson();\n        assertThat(actual).isEqualTo(MEASUREMENT_JSON);\n    }", "signature": "void toJsonReturnsExpected()", "full_signature": "@Test public void toJsonReturnsExpected()", "class_method_signature": "ImmutableMeasurementTest.toJsonReturnsExpected()", "testcase": true, "constructor": false, "invocations": ["toJson", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "ImmutableMeasurement", "superclass": "", "interfaces": "implements Measurement", "fields": [{"original_string": "private static final String SUCCESS_FIELD_NAME = \"success\";", "modifier": "private static final", "type": "String", "declarator": "SUCCESS_FIELD_NAME = \"success\"", "var_name": "SUCCESS_FIELD_NAME"}, {"original_string": "private static final String FAILURE_FIELD_NAME = \"failure\";", "modifier": "private static final", "type": "String", "declarator": "FAILURE_FIELD_NAME = \"failure\"", "var_name": "FAILURE_FIELD_NAME"}, {"original_string": "private final MetricType metricType;", "modifier": "private final", "type": "MetricType", "declarator": "metricType", "var_name": "metricType"}, {"original_string": "private final boolean success;", "modifier": "private final", "type": "boolean", "declarator": "success", "var_name": "success"}, {"original_string": "private final Map<Duration, Long> values;", "modifier": "private final", "type": "Map<Duration, Long>", "declarator": "values", "var_name": "values"}, {"original_string": "@Nullable private final Instant lastMessageAt;", "modifier": "@Nullable private final", "type": "Instant", "declarator": "lastMessageAt", "var_name": "lastMessageAt"}], "methods": [{"identifier": "ImmutableMeasurement", "parameters": "(final MetricType metricType, final boolean success,\n            final Map<Duration, Long> values, @Nullable final Instant lastMessageAt)", "modifiers": "", "return": "", "signature": " ImmutableMeasurement(final MetricType metricType, final boolean success,\n            final Map<Duration, Long> values, @Nullable final Instant lastMessageAt)", "full_signature": "  ImmutableMeasurement(final MetricType metricType, final boolean success,\n            final Map<Duration, Long> values, @Nullable final Instant lastMessageAt)", "class_method_signature": "ImmutableMeasurement.ImmutableMeasurement(final MetricType metricType, final boolean success,\n            final Map<Duration, Long> values, @Nullable final Instant lastMessageAt)", "testcase": false, "constructor": true}, {"identifier": "getMetricType", "parameters": "()", "modifiers": "@Override public", "return": "MetricType", "signature": "MetricType getMetricType()", "full_signature": "@Override public MetricType getMetricType()", "class_method_signature": "ImmutableMeasurement.getMetricType()", "testcase": false, "constructor": false}, {"identifier": "isSuccess", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSuccess()", "full_signature": "@Override public boolean isSuccess()", "class_method_signature": "ImmutableMeasurement.isSuccess()", "testcase": false, "constructor": false}, {"identifier": "getCounts", "parameters": "()", "modifiers": "@Override public", "return": "Map<Duration, Long>", "signature": "Map<Duration, Long> getCounts()", "full_signature": "@Override public Map<Duration, Long> getCounts()", "class_method_signature": "ImmutableMeasurement.getCounts()", "testcase": false, "constructor": false}, {"identifier": "getLastMessageAt", "parameters": "()", "modifiers": "@Override public", "return": "Optional<Instant>", "signature": "Optional<Instant> getLastMessageAt()", "full_signature": "@Override public Optional<Instant> getLastMessageAt()", "class_method_signature": "ImmutableMeasurement.getLastMessageAt()", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "full_signature": "@Override public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "class_method_signature": "ImmutableMeasurement.toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "getSuccessFieldName", "parameters": "(final boolean success)", "modifiers": "private static", "return": "String", "signature": "String getSuccessFieldName(final boolean success)", "full_signature": "private static String getSuccessFieldName(final boolean success)", "class_method_signature": "ImmutableMeasurement.getSuccessFieldName(final boolean success)", "testcase": false, "constructor": false}, {"identifier": "fromSuccessFieldName", "parameters": "(final String success)", "modifiers": "private static", "return": "boolean", "signature": "boolean fromSuccessFieldName(final String success)", "full_signature": "private static boolean fromSuccessFieldName(final String success)", "class_method_signature": "ImmutableMeasurement.fromSuccessFieldName(final String success)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject)", "modifiers": "public static", "return": "Measurement", "signature": "Measurement fromJson(final JsonObject jsonObject)", "full_signature": "public static Measurement fromJson(final JsonObject jsonObject)", "class_method_signature": "ImmutableMeasurement.fromJson(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "unwrap", "parameters": "(final JsonValue jsonValue)", "modifiers": "private static", "return": "JsonField", "signature": "JsonField unwrap(final JsonValue jsonValue)", "full_signature": "private static JsonField unwrap(final JsonValue jsonValue)", "class_method_signature": "ImmutableMeasurement.unwrap(final JsonValue jsonValue)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ImmutableMeasurement.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableMeasurement.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableMeasurement.toString()", "testcase": false, "constructor": false}], "file": "model/connectivity/src/main/java/org/eclipse/ditto/model/connectivity/ImmutableMeasurement.java"}, "focal_method": {"identifier": "toJson", "parameters": "(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "modifiers": "@Override public", "return": "JsonObject", "body": "@Override\n    public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate) {\n        final JsonObject counts = values.entrySet()\n                .stream()\n                .sorted(Comparator.comparing(Map.Entry::getKey))\n                .map(e -> JsonFactory.newField(JsonFactory.newKey(e.getKey().toString()), JsonValue.of(e.getValue())))\n                .collect(JsonCollectors.fieldsToObject());\n\n        return JsonFactory.newObjectBuilder()\n                .set(metricType.getName(),\n                        JsonFactory.newObjectBuilder()\n                                .set(getSuccessFieldName(success),\n                                        JsonFactory.newObjectBuilder(counts)\n                                                .set(JsonFields.LAST_MESSAGE_AT, getLastMessageAt()\n                                                        .map(Object::toString).orElse(null)\n                                                ).build()\n                                ).build()\n                ).build();\n    }", "signature": "JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "full_signature": "@Override public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "class_method_signature": "ImmutableMeasurement.toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false, "invocations": ["collect", "map", "sorted", "stream", "entrySet", "comparing", "newField", "newKey", "toString", "getKey", "of", "getValue", "fieldsToObject", "build", "set", "newObjectBuilder", "getName", "build", "set", "newObjectBuilder", "getSuccessFieldName", "build", "set", "newObjectBuilder", "orElse", "map", "getLastMessageAt"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}