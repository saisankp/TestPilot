{"test_class": {"identifier": "MemoryMappedFileImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final TemporaryFolder folder = new TemporaryFolder();", "modifier": "@Rule\n    public final", "type": "TemporaryFolder", "declarator": "folder = new TemporaryFolder()", "var_name": "folder"}, {"original_string": "private MemoryMappedFile memoryMappedFile;", "modifier": "private", "type": "MemoryMappedFile", "declarator": "memoryMappedFile", "var_name": "memoryMappedFile"}], "file": "commons/src/test/java/com/powsybl/commons/io/mmap/MemoryMappedFileImplTest.java"}, "test_case": {"identifier": "getBuffer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getBuffer() throws IOException {\n        ByteBuffer buffer = memoryMappedFile.getBuffer(100);\n        assertNotNull(buffer);\n        assertEquals(100, buffer.remaining());\n    }", "signature": "void getBuffer()", "full_signature": "@Test public void getBuffer()", "class_method_signature": "MemoryMappedFileImplTest.getBuffer()", "testcase": true, "constructor": false, "invocations": ["getBuffer", "assertNotNull", "assertEquals", "remaining"]}, "focal_class": {"identifier": "MemoryMappedFileImpl", "superclass": "", "interfaces": "implements MemoryMappedFile", "fields": [{"original_string": "private final File file;", "modifier": "private final", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "private RandomAccessFile raf;", "modifier": "private", "type": "RandomAccessFile", "declarator": "raf", "var_name": "raf"}], "methods": [{"identifier": "MemoryMappedFileImpl", "parameters": "(File file)", "modifiers": "public", "return": "", "signature": " MemoryMappedFileImpl(File file)", "full_signature": "public  MemoryMappedFileImpl(File file)", "class_method_signature": "MemoryMappedFileImpl.MemoryMappedFileImpl(File file)", "testcase": false, "constructor": true}, {"identifier": "exists", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean exists()", "full_signature": "@Override public boolean exists()", "class_method_signature": "MemoryMappedFileImpl.exists()", "testcase": false, "constructor": false}, {"identifier": "getBuffer", "parameters": "(int size)", "modifiers": "@Override public", "return": "ByteBuffer", "signature": "ByteBuffer getBuffer(int size)", "full_signature": "@Override public ByteBuffer getBuffer(int size)", "class_method_signature": "MemoryMappedFileImpl.getBuffer(int size)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "MemoryMappedFileImpl.close()", "testcase": false, "constructor": false}], "file": "commons/src/main/java/com/powsybl/commons/io/mmap/MemoryMappedFileImpl.java"}, "focal_method": {"identifier": "getBuffer", "parameters": "(int size)", "modifiers": "@Override public", "return": "ByteBuffer", "body": "@Override\n    public ByteBuffer getBuffer(int size) throws IOException {\n        if (raf == null) {\n            raf = new RandomAccessFile(file, \"rw\");\n        }\n        return raf.getChannel().map(FileChannel.MapMode.READ_WRITE, 0, size);\n    }", "signature": "ByteBuffer getBuffer(int size)", "full_signature": "@Override public ByteBuffer getBuffer(int size)", "class_method_signature": "MemoryMappedFileImpl.getBuffer(int size)", "testcase": false, "constructor": false, "invocations": ["map", "getChannel"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}