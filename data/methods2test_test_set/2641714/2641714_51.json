{"test_class": {"identifier": "AddListAttributeModelTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AddListAttributeModel model;", "modifier": "private", "type": "AddListAttributeModel", "declarator": "model", "var_name": "model"}], "file": "tiles-template/src/test/java/org/apache/tiles/template/AddListAttributeModelTest.java"}, "test_case": {"identifier": "testExecute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecute() throws IOException {\n        Deque<Object> composeStack = new ArrayDeque<Object>();\n        Request request = createMock(Request.class);\n        Map<String, Object> requestScope = new HashMap<String, Object>();\n        ModelBody modelBody = createMock(ModelBody.class);\n\n        modelBody.evaluateWithoutWriting();\n        requestScope.put(ComposeStackUtil.COMPOSE_STACK_ATTRIBUTE_NAME, composeStack);\n        expect(request.getContext(\"request\")).andReturn(requestScope);\n\n        replay(request, modelBody);\n        ListAttribute parent = new ListAttribute();\n        composeStack.push(parent);\n        model.execute(\"myRole\", request, modelBody);\n        assertEquals(1, composeStack.size());\n        assertEquals(parent, composeStack.pop());\n        assertEquals(1, parent.getValue().size());\n        ListAttribute listAttribute = (ListAttribute) parent.getValue().get(0);\n        assertEquals(\"myRole\", listAttribute.getRole());\n        verify(request, modelBody);\n    }", "signature": "void testExecute()", "full_signature": "@Test public void testExecute()", "class_method_signature": "AddListAttributeModelTest.testExecute()", "testcase": true, "constructor": false, "invocations": ["createMock", "createMock", "evaluateWithoutWriting", "put", "andReturn", "expect", "getContext", "replay", "push", "execute", "assertEquals", "size", "assertEquals", "pop", "assertEquals", "size", "getValue", "get", "getValue", "assertEquals", "getRole", "verify"]}, "focal_class": {"identifier": "AddListAttributeModel", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "execute", "parameters": "(String role, Request request, ModelBody modelBody)", "modifiers": "public", "return": "void", "signature": "void execute(String role, Request request, ModelBody modelBody)", "full_signature": "public void execute(String role, Request request, ModelBody modelBody)", "class_method_signature": "AddListAttributeModel.execute(String role, Request request, ModelBody modelBody)", "testcase": false, "constructor": false}], "file": "tiles-template/src/main/java/org/apache/tiles/template/AddListAttributeModel.java"}, "focal_method": {"identifier": "execute", "parameters": "(String role, Request request, ModelBody modelBody)", "modifiers": "public", "return": "void", "body": "public void execute(String role, Request request, ModelBody modelBody) throws IOException {\n        Deque<Object> composeStack = ComposeStackUtil.getComposeStack(request);\n        ListAttribute listAttribute = new ListAttribute();\n        listAttribute.setRole(role);\n        composeStack.push(listAttribute);\n        modelBody.evaluateWithoutWriting();\n        listAttribute = (ListAttribute) composeStack.pop();\n        ListAttribute parent = (ListAttribute) composeStack.peek();\n        parent.add(listAttribute);\n    }", "signature": "void execute(String role, Request request, ModelBody modelBody)", "full_signature": "public void execute(String role, Request request, ModelBody modelBody)", "class_method_signature": "AddListAttributeModel.execute(String role, Request request, ModelBody modelBody)", "testcase": false, "constructor": false, "invocations": ["getComposeStack", "setRole", "push", "evaluateWithoutWriting", "pop", "peek", "add"]}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}