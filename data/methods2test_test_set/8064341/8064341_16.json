{"test_class": {"identifier": "IOUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "hbc-core/src/test/java/com/twitter/hbc/common/IOUtilsTest.java"}, "test_case": {"identifier": "testReadFully", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testReadFully() throws Exception {\n    String myMessage = \"{this is my message}\";\n    byte[] bytes = myMessage.getBytes(Charsets.UTF_8);\n\n    InputStream stream = new ByteArrayInputStream(bytes);\n    Reader reader = new InputStreamReader(stream);\n\n    char[] buffer = new char[myMessage.length()];\n    IOUtils.readFully(reader, buffer, 0);\n\n    for (int i = 0; i < myMessage.length(); i++) {\n      assertEquals(buffer[i], myMessage.charAt(i));\n    }\n  }", "signature": "void testReadFully()", "full_signature": "@Test public void testReadFully()", "class_method_signature": "IOUtilsTest.testReadFully()", "testcase": true, "constructor": false, "invocations": ["getBytes", "length", "readFully", "length", "assertEquals", "charAt"]}, "focal_class": {"identifier": "IOUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "readFully", "parameters": "(Reader reader, char[] buffer, int offset)", "modifiers": "public static", "return": "void", "signature": "void readFully(Reader reader, char[] buffer, int offset)", "full_signature": "public static void readFully(Reader reader, char[] buffer, int offset)", "class_method_signature": "IOUtils.readFully(Reader reader, char[] buffer, int offset)", "testcase": false, "constructor": false}], "file": "hbc-core/src/main/java/com/twitter/hbc/common/IOUtils.java"}, "focal_method": {"identifier": "readFully", "parameters": "(Reader reader, char[] buffer, int offset)", "modifiers": "public static", "return": "void", "body": "public static void readFully(Reader reader, char[] buffer, int offset) throws IOException {\n    int originalOffset = offset;\n    int expected = buffer.length - offset;\n    while (offset < buffer.length) {\n      int numRead = reader.read(buffer, offset, buffer.length - offset);\n      if (numRead < 0) {\n        throw new IOException(\n                String.format(\"Reached end of stream earlier than expected. Expected to read %d bytes. Actual: %d\",\n                expected, offset - originalOffset));\n      }\n      offset += numRead;\n    }\n  }", "signature": "void readFully(Reader reader, char[] buffer, int offset)", "full_signature": "public static void readFully(Reader reader, char[] buffer, int offset)", "class_method_signature": "IOUtils.readFully(Reader reader, char[] buffer, int offset)", "testcase": false, "constructor": false, "invocations": ["read", "format"]}, "repository": {"repo_id": 8064341, "url": "https://github.com/twitter/hbc", "language": "Java", "is_fork": false, "fork_count": 338, "stargazer_count": 868, "size": 352, "license": "licensed"}}