{"test_class": {"identifier": "KeyFileXmlParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/de/slackspace/openkeepass/parser/KeyFileXmlParserTest.java"}, "test_case": {"identifier": "whenInputIsKeyFileShouldParseFileAndReturnCorrectData", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void whenInputIsKeyFileShouldParseFileAndReturnCorrectData() throws IOException {\n        FileInputStream fileInputStream = new FileInputStream(ResourceUtils.getResource(\"DatabaseWithKeyfile.key\"));\n        byte[] keyFileContent = StreamUtils.toByteArray(fileInputStream);\n\n        SimpleXmlParser parser = new SimpleXmlParser();\n        KeyFile keyFile = new KeyFileXmlParser(parser).fromXml(keyFileContent);\n\n        Assert.assertEquals(\"RP+rYNZL4lrGtDMBPzOuctlh3NAutSG5KGsT38C+qPQ=\", keyFile.getKey().getData());\n    }", "signature": "void whenInputIsKeyFileShouldParseFileAndReturnCorrectData()", "full_signature": "@Test public void whenInputIsKeyFileShouldParseFileAndReturnCorrectData()", "class_method_signature": "KeyFileXmlParserTest.whenInputIsKeyFileShouldParseFileAndReturnCorrectData()", "testcase": true, "constructor": false, "invocations": ["getResource", "toByteArray", "fromXml", "assertEquals", "getData", "getKey"]}, "focal_class": {"identifier": "KeyFileXmlParser", "superclass": "", "interfaces": "implements KeyFileParser", "fields": [{"original_string": "private static final String UTF_8 = \"UTF-8\";", "modifier": "private static final", "type": "String", "declarator": "UTF_8 = \"UTF-8\"", "var_name": "UTF_8"}, {"original_string": "private static final String MSG_UTF8_NOT_SUPPORTED = \"The encoding UTF-8 is not supported\";", "modifier": "private static final", "type": "String", "declarator": "MSG_UTF8_NOT_SUPPORTED = \"The encoding UTF-8 is not supported\"", "var_name": "MSG_UTF8_NOT_SUPPORTED"}, {"original_string": "private final XmlParser parser;", "modifier": "private final", "type": "XmlParser", "declarator": "parser", "var_name": "parser"}], "methods": [{"identifier": "KeyFileXmlParser", "parameters": "(XmlParser parser)", "modifiers": "public", "return": "", "signature": " KeyFileXmlParser(XmlParser parser)", "full_signature": "public  KeyFileXmlParser(XmlParser parser)", "class_method_signature": "KeyFileXmlParser.KeyFileXmlParser(XmlParser parser)", "testcase": false, "constructor": true}, {"identifier": "readKeyFile", "parameters": "(byte[] keyFile)", "modifiers": "@Override public", "return": "KeyFileBytes", "signature": "KeyFileBytes readKeyFile(byte[] keyFile)", "full_signature": "@Override public KeyFileBytes readKeyFile(byte[] keyFile)", "class_method_signature": "KeyFileXmlParser.readKeyFile(byte[] keyFile)", "testcase": false, "constructor": false}, {"identifier": "fromXml", "parameters": "(byte[] inputBytes)", "modifiers": "public", "return": "KeyFile", "signature": "KeyFile fromXml(byte[] inputBytes)", "full_signature": "public KeyFile fromXml(byte[] inputBytes)", "class_method_signature": "KeyFileXmlParser.fromXml(byte[] inputBytes)", "testcase": false, "constructor": false}, {"identifier": "getBytesFromKeyFile", "parameters": "(KeyFile keyFile)", "modifiers": "private", "return": "byte[]", "signature": "byte[] getBytesFromKeyFile(KeyFile keyFile)", "full_signature": "private byte[] getBytesFromKeyFile(KeyFile keyFile)", "class_method_signature": "KeyFileXmlParser.getBytesFromKeyFile(KeyFile keyFile)", "testcase": false, "constructor": false}], "file": "src/de/slackspace/openkeepass/parser/KeyFileXmlParser.java"}, "focal_method": {"identifier": "fromXml", "parameters": "(byte[] inputBytes)", "modifiers": "public", "return": "KeyFile", "body": "public KeyFile fromXml(byte[] inputBytes) {\n        try {\n            ByteArrayInputStream inputStream = new ByteArrayInputStream(inputBytes);\n            return parser.fromXml(inputStream, null, KeyFile.class);\n        } catch (KeePassDatabaseUnreadableException e) {\n            return new KeyFile(false);\n        }\n    }", "signature": "KeyFile fromXml(byte[] inputBytes)", "full_signature": "public KeyFile fromXml(byte[] inputBytes)", "class_method_signature": "KeyFileXmlParser.fromXml(byte[] inputBytes)", "testcase": false, "constructor": false, "invocations": ["fromXml"]}, "repository": {"repo_id": 102137829, "url": "https://github.com/privacyint/ThornSec", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 10, "size": 20604, "license": "licensed"}}