{"test_class": {"identifier": "JsonUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "everrest-core/src/test/java/org/everrest/core/impl/provider/json/JsonUtilsTest.java"}, "test_case": {"identifier": "failsCreateProxyObjectForNonInterface", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void failsCreateProxyObjectForNonInterface() {\n        JsonUtils.createProxy(Book.class);\n    }", "signature": "void failsCreateProxyObjectForNonInterface()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void failsCreateProxyObjectForNonInterface()", "class_method_signature": "JsonUtilsTest.failsCreateProxyObjectForNonInterface()", "testcase": true, "constructor": false, "invocations": ["createProxy"]}, "focal_class": {"identifier": "JsonUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Map<String, Types> KNOWN_TYPES = new HashMap<>();", "modifier": "private static final", "type": "Map<String, Types>", "declarator": "KNOWN_TYPES = new HashMap<>()", "var_name": "KNOWN_TYPES"}], "methods": [{"identifier": "getJsonString", "parameters": "(String string)", "modifiers": "public static", "return": "String", "signature": "String getJsonString(String string)", "full_signature": "public static String getJsonString(String string)", "class_method_signature": "JsonUtils.getJsonString(String string)", "testcase": false, "constructor": false}, {"identifier": "isKnownType", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "boolean", "signature": "boolean isKnownType(Class<?> clazz)", "full_signature": "public static boolean isKnownType(Class<?> clazz)", "class_method_signature": "JsonUtils.isKnownType(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "(Object o)", "modifiers": "public static", "return": "Types", "signature": "Types getType(Object o)", "full_signature": "public static Types getType(Object o)", "class_method_signature": "JsonUtils.getType(Object o)", "testcase": false, "constructor": false}, {"identifier": "getType", "parameters": "(Class<?> clazz)", "modifiers": "public static", "return": "Types", "signature": "Types getType(Class<?> clazz)", "full_signature": "public static Types getType(Class<?> clazz)", "class_method_signature": "JsonUtils.getType(Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "getTransientFields", "parameters": "(Class<?> aClass)", "modifiers": "public static", "return": "Set<String>", "signature": "Set<String> getTransientFields(Class<?> aClass)", "full_signature": "public static Set<String> getTransientFields(Class<?> aClass)", "class_method_signature": "JsonUtils.getTransientFields(Class<?> aClass)", "testcase": false, "constructor": false}, {"identifier": "createProxy", "parameters": "(Class<T> anInterface)", "modifiers": "@SuppressWarnings({\"unchecked\"}) public static", "return": "T", "signature": "T createProxy(Class<T> anInterface)", "full_signature": "@SuppressWarnings({\"unchecked\"}) public static T createProxy(Class<T> anInterface)", "class_method_signature": "JsonUtils.createProxy(Class<T> anInterface)", "testcase": false, "constructor": false}, {"identifier": "getFieldName", "parameters": "(Method method)", "modifiers": "static", "return": "String", "signature": "String getFieldName(Method method)", "full_signature": "static String getFieldName(Method method)", "class_method_signature": "JsonUtils.getFieldName(Method method)", "testcase": false, "constructor": false}, {"identifier": "JsonUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " JsonUtils()", "full_signature": "private  JsonUtils()", "class_method_signature": "JsonUtils.JsonUtils()", "testcase": false, "constructor": true}], "file": "everrest-core/src/main/java/org/everrest/core/impl/provider/json/JsonUtils.java"}, "focal_method": {"identifier": "createProxy", "parameters": "(Class<T> anInterface)", "modifiers": "@SuppressWarnings({\"unchecked\"}) public static", "return": "T", "body": "@SuppressWarnings({\"unchecked\"})\n    public static <T> T createProxy(Class<T> anInterface) {\n        if (anInterface == null) {\n            throw new IllegalArgumentException();\n        }\n        if (anInterface.isInterface()) {\n            return (T)Proxy.newProxyInstance(anInterface.getClassLoader(), new Class[]{anInterface}, new ProxyObject(anInterface));\n        }\n        throw new IllegalArgumentException(String.format(\"Type '%s' is not interface. \", anInterface.getSimpleName()));\n    }", "signature": "T createProxy(Class<T> anInterface)", "full_signature": "@SuppressWarnings({\"unchecked\"}) public static T createProxy(Class<T> anInterface)", "class_method_signature": "JsonUtils.createProxy(Class<T> anInterface)", "testcase": false, "constructor": false, "invocations": ["isInterface", "newProxyInstance", "getClassLoader", "format", "getSimpleName"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}