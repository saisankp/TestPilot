{"test_class": {"identifier": "DefaultOAuthJwtAccessTokenTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JwtParser parser = null;", "modifier": "private", "type": "JwtParser", "declarator": "parser = null", "var_name": "parser"}, {"original_string": "private static final String jwtString =\n            \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJkb21haW4uc2VydmljZSIsImlzcyI6Imh0dHBzOi8vYXRoZW56LmlvIiwiYXVkIjoiaHR0cHM6Ly96bXMuYXRoZW56LmlvIiwiY2xpZW50X2lkIjoidWkuYXRoZW56LmlvIiwiY25mIjp7Ing1dCNTMjU2IjoieDUwOV9jZXJ0aWZpY2F0ZV9oYXNoIn0sInNjb3BlIjoicmVhZCB3cml0ZSIsImlhdCI6MTQ3MDAwMDAwMCwiZXhwIjo5OTkwMDA5OTk5fQ.RTiededpxlFRERP8tZWX5NjvJ1NmTfdyXYK1q6Pa_x_XSv5_1SIPcV0kU5x2F0BtekL1a-zV88glv7Ii0jFP0DVRA6ShFD0DloJwiadhPsoAy49Giusa_F_zOidTB0uZ4evJxpkxWXsjZ6xDJVt8A68j03nBuV0t5Gn_yBQymahEXzAv-CLIFLNGBDIP9ky8pp9iUhONn3jHpXk8J4tJCx-miUCf0q9Zh05KN6UWPTZy1vdCLgI-dHzZrKoK42P5lFY0lZuGIloln7ylzCvImLkZOxW6EvKtMTTIyeZdY5CMJGiCwYottpTzvFfsMobYA1fw4worHXg8200h09x88lTTAve9Gb_e_hcYY4z5_YuyRAKzO3PDJ9LEaZg7SjwRDfe8raI_SMPFvQW91cFqPGM_K1gN1FHASsnGlIpBUzZ-gtDz707l6JxgiOQlKWvwU3TSbWkn1e-FneGcAaGLGlzzosARfY5qxCj9HCMwbwX0Tw01oOhHkxxjOvLFJUJ4kNzjN0bC87CIUBVnhiWBmQglIfNvY8Gjd3tLFvuIDE8_u3VElLpETpYcx8OKdYuOSP_PD6K20WKo-s2MAhLWK_1aXdNJ3ShZoNUHqkxQVtFBJy1IQcCiffhi46oMiGq2XA2VW_3RIDdrTLFElXghHqya7gXvOmyykTX2Kxg0XsU\";", "modifier": "private static final", "type": "String", "declarator": "jwtString =\n            \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJkb21haW4uc2VydmljZSIsImlzcyI6Imh0dHBzOi8vYXRoZW56LmlvIiwiYXVkIjoiaHR0cHM6Ly96bXMuYXRoZW56LmlvIiwiY2xpZW50X2lkIjoidWkuYXRoZW56LmlvIiwiY25mIjp7Ing1dCNTMjU2IjoieDUwOV9jZXJ0aWZpY2F0ZV9oYXNoIn0sInNjb3BlIjoicmVhZCB3cml0ZSIsImlhdCI6MTQ3MDAwMDAwMCwiZXhwIjo5OTkwMDA5OTk5fQ.RTiededpxlFRERP8tZWX5NjvJ1NmTfdyXYK1q6Pa_x_XSv5_1SIPcV0kU5x2F0BtekL1a-zV88glv7Ii0jFP0DVRA6ShFD0DloJwiadhPsoAy49Giusa_F_zOidTB0uZ4evJxpkxWXsjZ6xDJVt8A68j03nBuV0t5Gn_yBQymahEXzAv-CLIFLNGBDIP9ky8pp9iUhONn3jHpXk8J4tJCx-miUCf0q9Zh05KN6UWPTZy1vdCLgI-dHzZrKoK42P5lFY0lZuGIloln7ylzCvImLkZOxW6EvKtMTTIyeZdY5CMJGiCwYottpTzvFfsMobYA1fw4worHXg8200h09x88lTTAve9Gb_e_hcYY4z5_YuyRAKzO3PDJ9LEaZg7SjwRDfe8raI_SMPFvQW91cFqPGM_K1gN1FHASsnGlIpBUzZ-gtDz707l6JxgiOQlKWvwU3TSbWkn1e-FneGcAaGLGlzzosARfY5qxCj9HCMwbwX0Tw01oOhHkxxjOvLFJUJ4kNzjN0bC87CIUBVnhiWBmQglIfNvY8Gjd3tLFvuIDE8_u3VElLpETpYcx8OKdYuOSP_PD6K20WKo-s2MAhLWK_1aXdNJ3ShZoNUHqkxQVtFBJy1IQcCiffhi46oMiGq2XA2VW_3RIDdrTLFElXghHqya7gXvOmyykTX2Kxg0XsU\"", "var_name": "jwtString"}, {"original_string": "private static final String irregularJwtString = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJkb21haW5fRERELnNlcnZpY2VfU1NTIiwiaXNzIjoiaHR0cHM6Ly9hdGhlbnouaW8iLCJhdWQiOlsiaHR0cHM6Ly96bXMuYXRoZW56LmlvIiwiaHR0cHM6Ly96dHMuYXRoZW56LmlvIl0sImNuZiI6IiIsImlhdCI6MTQ3MDAwMDAwMCwiZXhwIjo5OTkwMDA5OTk5fQ.elNLn0tnY2lA-NZWD0BmO_1N2xMNvE4Uhb5RvVi8BEATQFBXUn9E8-2jYZbc3C2UjrMBHbJe06bviwGXqvfgwOdpt3cBTzRNwbl1Dv79QUnarAUimxOXphqilaZKBUXWxY4ZH_i_HTDqzIdSZiClcuWD73BqehRosPmcS_M5jwK5Tn9yJuIpSgQVLOJ9MIb1NpTFzF5EgaL_-eNSuP2NN9DGHFo6o6Ig8RksqbltfMWN7TLJ2yvzTNSDHgrOolkkTKnJWtVqKN3Qho9JDDAca-y2vtNncan1FAb9QwWHCmUz35SM6gH2mfP2DjXZUw7UbzXbGFqaaxjnRnfvU86bRPs0G_WtOZX48Ejn_QP9fbjfSymmp2O1nl9yRyWEq2MrggoukNe_r_-3uw9KgvW_LpUvFlRhHPT86K5_94Gs90nlIjxYoclSbxcTzjU8R1avaZM6TWxCtVc5Z4uylUq2IZvhi_BgRGpYMwEDKPZ1kk0eRr6t1RCRONi0gzYJJ4JX4poHorXx1s9hoBNh7GygGOqVuIT003kkGy1W8jVhI4h40qz5nd7hHZPTS4FHNWCjQDtkPGeeNqAfK0x72xvjXufBgSWchoP6aDDSE3CJkTQL7kR6U6IH57qATnuCWL4DSGLhyHNAvaEr4ymSMCvBRMrwRgVXRT-Z2jtrZEvYhSo\";", "modifier": "private static final", "type": "String", "declarator": "irregularJwtString = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJkb21haW5fRERELnNlcnZpY2VfU1NTIiwiaXNzIjoiaHR0cHM6Ly9hdGhlbnouaW8iLCJhdWQiOlsiaHR0cHM6Ly96bXMuYXRoZW56LmlvIiwiaHR0cHM6Ly96dHMuYXRoZW56LmlvIl0sImNuZiI6IiIsImlhdCI6MTQ3MDAwMDAwMCwiZXhwIjo5OTkwMDA5OTk5fQ.elNLn0tnY2lA-NZWD0BmO_1N2xMNvE4Uhb5RvVi8BEATQFBXUn9E8-2jYZbc3C2UjrMBHbJe06bviwGXqvfgwOdpt3cBTzRNwbl1Dv79QUnarAUimxOXphqilaZKBUXWxY4ZH_i_HTDqzIdSZiClcuWD73BqehRosPmcS_M5jwK5Tn9yJuIpSgQVLOJ9MIb1NpTFzF5EgaL_-eNSuP2NN9DGHFo6o6Ig8RksqbltfMWN7TLJ2yvzTNSDHgrOolkkTKnJWtVqKN3Qho9JDDAca-y2vtNncan1FAb9QwWHCmUz35SM6gH2mfP2DjXZUw7UbzXbGFqaaxjnRnfvU86bRPs0G_WtOZX48Ejn_QP9fbjfSymmp2O1nl9yRyWEq2MrggoukNe_r_-3uw9KgvW_LpUvFlRhHPT86K5_94Gs90nlIjxYoclSbxcTzjU8R1avaZM6TWxCtVc5Z4uylUq2IZvhi_BgRGpYMwEDKPZ1kk0eRr6t1RCRONi0gzYJJ4JX4poHorXx1s9hoBNh7GygGOqVuIT003kkGy1W8jVhI4h40qz5nd7hHZPTS4FHNWCjQDtkPGeeNqAfK0x72xvjXufBgSWchoP6aDDSE3CJkTQL7kR6U6IH57qATnuCWL4DSGLhyHNAvaEr4ymSMCvBRMrwRgVXRT-Z2jtrZEvYhSo\"", "var_name": "irregularJwtString"}, {"original_string": "private static final String emptyJwtString = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.e30.IqroarCD_DWdjEBI86hzXSco7yf9EN8DuGAQ5CYORpntg7I2xtGHALvsfzxO14zc6J70JMdyZJFeJVLk5jBwMDG6U43uP3206WGdEmFEWEnnHE2GyvgY8Sfj6hErYhNCXtjzMdAjM-KB8vh74SLjbADoQw1MTHSQbgjV4cCUhsKvP1Ts8igT0WKl5LZN2RfuDJmtWs04cRAosYnyKbMq6d2CksUN6VwEG_Yb-f_Ezx7v5do1aWb3Yt2SlGG6Qd9-M4Vq4cvHOCHYnVaaLQHhcJdVq1GJAkziEMllf4EGNWSR9r2jSontF56252JJI3LMMWMQYZ7aFBGBzQXq6C_X9vnCMvYMmP3mJVlRU4q1Iy9RSUa7KdLESEWdvqoM4KzqQ7_6uMsL4s378kBB24c8cIDzFu1x0EuYe8VHO55iKUDCgj4vyLmPhb2_4pu83UzAJ7D87PzYllJt62p2QnXZOiW5xvSRNDKAy3wo8f2fx6jhr3sDLoZmdZt3woxuuYvkruo9YHv-8l4zP4Yk6wUL2aGQ-K6QRrc2jw_Of1FNBrkk08lt6YmV6jivHAPIc-Tb6zmfEbzVVjdfMbb8lqbpdfE8xXOx2wgGpNhck7JPFXbFGfLeT2Qv7A19KDfajEjyaJfqqQ1Patf9JjaDiPc0pxx3oNhghK_iD4guFQaD6sQ\";", "modifier": "private static final", "type": "String", "declarator": "emptyJwtString = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.e30.IqroarCD_DWdjEBI86hzXSco7yf9EN8DuGAQ5CYORpntg7I2xtGHALvsfzxO14zc6J70JMdyZJFeJVLk5jBwMDG6U43uP3206WGdEmFEWEnnHE2GyvgY8Sfj6hErYhNCXtjzMdAjM-KB8vh74SLjbADoQw1MTHSQbgjV4cCUhsKvP1Ts8igT0WKl5LZN2RfuDJmtWs04cRAosYnyKbMq6d2CksUN6VwEG_Yb-f_Ezx7v5do1aWb3Yt2SlGG6Qd9-M4Vq4cvHOCHYnVaaLQHhcJdVq1GJAkziEMllf4EGNWSR9r2jSontF56252JJI3LMMWMQYZ7aFBGBzQXq6C_X9vnCMvYMmP3mJVlRU4q1Iy9RSUa7KdLESEWdvqoM4KzqQ7_6uMsL4s378kBB24c8cIDzFu1x0EuYe8VHO55iKUDCgj4vyLmPhb2_4pu83UzAJ7D87PzYllJt62p2QnXZOiW5xvSRNDKAy3wo8f2fx6jhr3sDLoZmdZt3woxuuYvkruo9YHv-8l4zP4Yk6wUL2aGQ-K6QRrc2jw_Of1FNBrkk08lt6YmV6jivHAPIc-Tb6zmfEbzVVjdfMbb8lqbpdfE8xXOx2wgGpNhck7JPFXbFGfLeT2Qv7A19KDfajEjyaJfqqQ1Patf9JjaDiPc0pxx3oNhghK_iD4guFQaD6sQ\"", "var_name": "emptyJwtString"}], "file": "libs/java/auth_core/src/test/java/com/yahoo/athenz/auth/oauth/token/DefaultOAuthJwtAccessTokenTest.java"}, "test_case": {"identifier": "testDefaultOAuthJwtAccessToken", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDefaultOAuthJwtAccessToken() {\n        BiFunction<Field, DefaultOAuthJwtAccessToken, Object> getFieldValue = (f, object) -> {\n            JwtBuilder b = Jwts.builder().setSubject(\"Bob\");\n            try {\n                f.setAccessible(true);\n                return f.get(object);\n            } catch (IllegalArgumentException | IllegalAccessException e) {\n                throw new RuntimeException(e);\n            }\n        };\n\n        Jws<Claims> jws = this.parser.parseClaimsJws(jwtString);\n        DefaultOAuthJwtAccessToken at = new DefaultOAuthJwtAccessToken(jws);\n        assertNotNull(at);\n        for (Field f : at.getClass().getDeclaredFields()) {\n            switch (f.getName()) {\n            case \"body\":\n                assertSame(getFieldValue.apply(f, at), jws.getBody());\n                break;\n            case \"signature\":\n                assertSame(getFieldValue.apply(f, at), jws.getSignature());\n                break;\n            }\n        }\n    }", "signature": "void testDefaultOAuthJwtAccessToken()", "full_signature": "@Test public void testDefaultOAuthJwtAccessToken()", "class_method_signature": "DefaultOAuthJwtAccessTokenTest.testDefaultOAuthJwtAccessToken()", "testcase": true, "constructor": false, "invocations": ["setSubject", "builder", "setAccessible", "get", "parseClaimsJws", "assertNotNull", "getDeclaredFields", "getClass", "getName", "assertSame", "apply", "getBody", "assertSame", "apply", "getSignature"]}, "focal_class": {"identifier": "DefaultOAuthJwtAccessToken", "superclass": "", "interfaces": "implements OAuthJwtAccessToken", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(DefaultOAuthJwtAccessToken.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(DefaultOAuthJwtAccessToken.class)", "var_name": "LOG"}, {"original_string": "protected Claims body;", "modifier": "protected", "type": "Claims", "declarator": "body", "var_name": "body"}, {"original_string": "protected String signature;", "modifier": "protected", "type": "String", "declarator": "signature", "var_name": "signature"}], "methods": [{"identifier": "DefaultOAuthJwtAccessToken", "parameters": "(Jws<Claims> jws)", "modifiers": "public", "return": "", "signature": " DefaultOAuthJwtAccessToken(Jws<Claims> jws)", "full_signature": "public  DefaultOAuthJwtAccessToken(Jws<Claims> jws)", "class_method_signature": "DefaultOAuthJwtAccessToken.DefaultOAuthJwtAccessToken(Jws<Claims> jws)", "testcase": false, "constructor": true}, {"identifier": "getSubject", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSubject()", "full_signature": "@Override public String getSubject()", "class_method_signature": "DefaultOAuthJwtAccessToken.getSubject()", "testcase": false, "constructor": false}, {"identifier": "getIssuer", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getIssuer()", "full_signature": "@Override public String getIssuer()", "class_method_signature": "DefaultOAuthJwtAccessToken.getIssuer()", "testcase": false, "constructor": false}, {"identifier": "getAudience", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAudience()", "full_signature": "@Override public String getAudience()", "class_method_signature": "DefaultOAuthJwtAccessToken.getAudience()", "testcase": false, "constructor": false}, {"identifier": "getAudiences", "parameters": "()", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "List<String>", "signature": "List<String> getAudiences()", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public List<String> getAudiences()", "class_method_signature": "DefaultOAuthJwtAccessToken.getAudiences()", "testcase": false, "constructor": false}, {"identifier": "getClientId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getClientId()", "full_signature": "@Override public String getClientId()", "class_method_signature": "DefaultOAuthJwtAccessToken.getClientId()", "testcase": false, "constructor": false}, {"identifier": "getCertificateThumbprint", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getCertificateThumbprint()", "full_signature": "@Override public String getCertificateThumbprint()", "class_method_signature": "DefaultOAuthJwtAccessToken.getCertificateThumbprint()", "testcase": false, "constructor": false}, {"identifier": "getScope", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getScope()", "full_signature": "@Override public String getScope()", "class_method_signature": "DefaultOAuthJwtAccessToken.getScope()", "testcase": false, "constructor": false}, {"identifier": "getIssuedAt", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getIssuedAt()", "full_signature": "@Override public long getIssuedAt()", "class_method_signature": "DefaultOAuthJwtAccessToken.getIssuedAt()", "testcase": false, "constructor": false}, {"identifier": "getExpiration", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getExpiration()", "full_signature": "@Override public long getExpiration()", "class_method_signature": "DefaultOAuthJwtAccessToken.getExpiration()", "testcase": false, "constructor": false}, {"identifier": "getSignature", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getSignature()", "full_signature": "@Override public String getSignature()", "class_method_signature": "DefaultOAuthJwtAccessToken.getSignature()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "DefaultOAuthJwtAccessToken.toString()", "testcase": false, "constructor": false}], "file": "libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/oauth/token/DefaultOAuthJwtAccessToken.java"}, "focal_method": {"identifier": "DefaultOAuthJwtAccessToken", "parameters": "(Jws<Claims> jws)", "modifiers": "public", "return": "", "body": "public DefaultOAuthJwtAccessToken(Jws<Claims> jws) {\n        // this.header = jws.getHeader();\n        this.body = jws.getBody();\n        this.signature = jws.getSignature();\n    }", "signature": " DefaultOAuthJwtAccessToken(Jws<Claims> jws)", "full_signature": "public  DefaultOAuthJwtAccessToken(Jws<Claims> jws)", "class_method_signature": "DefaultOAuthJwtAccessToken.DefaultOAuthJwtAccessToken(Jws<Claims> jws)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}