{"test_class": {"identifier": "SimpleMatcherTypeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final SimpleMatcherType type = new SimpleMatcherType();", "modifier": "private final", "type": "SimpleMatcherType", "declarator": "type = new SimpleMatcherType()", "var_name": "type"}], "file": "smartparam-engine/src/test/java/org/smartparam/engine/matchers/type/SimpleMatcherTypeTest.java"}, "test_case": {"identifier": "shouldDecodeValueAsStarWhenEqualsStarSymbol", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldDecodeValueAsStarWhenEqualsStarSymbol() {\n        // when\n        Object decoded = type.decode(\"*\", null, null);\n\n        // then\n        assertThat(decoded).isInstanceOf(Star.class);\n    }", "signature": "void shouldDecodeValueAsStarWhenEqualsStarSymbol()", "full_signature": "@Test public void shouldDecodeValueAsStarWhenEqualsStarSymbol()", "class_method_signature": "SimpleMatcherTypeTest.shouldDecodeValueAsStarWhenEqualsStarSymbol()", "testcase": true, "constructor": false, "invocations": ["decode", "isInstanceOf", "assertThat"]}, "focal_class": {"identifier": "SimpleMatcherType", "superclass": "", "interfaces": "implements MatcherType<Object>", "fields": [], "methods": [{"identifier": "decode", "parameters": "(String value, Type<?> type, Matcher matcher)", "modifiers": "@Override public", "return": "Object", "signature": "Object decode(String value, Type<?> type, Matcher matcher)", "full_signature": "@Override public Object decode(String value, Type<?> type, Matcher matcher)", "class_method_signature": "SimpleMatcherType.decode(String value, Type<?> type, Matcher matcher)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(Object object, Type type, Matcher matcher)", "modifiers": "@Override @SuppressWarnings(\"unchecked\") public", "return": "String", "signature": "String encode(Object object, Type type, Matcher matcher)", "full_signature": "@Override @SuppressWarnings(\"unchecked\") public String encode(Object object, Type type, Matcher matcher)", "class_method_signature": "SimpleMatcherType.encode(Object object, Type type, Matcher matcher)", "testcase": false, "constructor": false}], "file": "smartparam-engine/src/main/java/org/smartparam/engine/matchers/type/SimpleMatcherType.java"}, "focal_method": {"identifier": "decode", "parameters": "(String value, Type<?> type, Matcher matcher)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object decode(String value, Type<?> type, Matcher matcher) {\n        if (value != null && value.equals(\"*\")) {\n            return Star.star();\n        }\n\n        if (type != null) {\n            return type.decode(value).getValue();\n        }\n\n        if (value != null && value.isEmpty()) {\n            return null;\n        }\n\n        return value;\n    }", "signature": "Object decode(String value, Type<?> type, Matcher matcher)", "full_signature": "@Override public Object decode(String value, Type<?> type, Matcher matcher)", "class_method_signature": "SimpleMatcherType.decode(String value, Type<?> type, Matcher matcher)", "testcase": false, "constructor": false, "invocations": ["equals", "star", "getValue", "decode", "isEmpty"]}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}