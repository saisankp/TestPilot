{"test_class": {"identifier": "AntennaCLISettingsReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(AntennaCLISettingsReader.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(AntennaCLISettingsReader.class)", "var_name": "LOGGER"}, {"original_string": "@Rule\n    public TemporaryFolder temporaryFolder = new TemporaryFolder();", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "temporaryFolder = new TemporaryFolder()", "var_name": "temporaryFolder"}, {"original_string": "@Mock\n    private MetaDataStoringProject project = mock(MetaDataStoringProject.class);", "modifier": "@Mock\n    private", "type": "MetaDataStoringProject", "declarator": "project = mock(MetaDataStoringProject.class)", "var_name": "project"}, {"original_string": "@Mock\n    private XmlSettingsReader reader = mock(XmlSettingsReader.class);", "modifier": "@Mock\n    private", "type": "XmlSettingsReader", "declarator": "reader = mock(XmlSettingsReader.class)", "var_name": "reader"}, {"original_string": "private AntennaCLISettingsReader tcsr = new AntennaCLISettingsReader();", "modifier": "private", "type": "AntennaCLISettingsReader", "declarator": "tcsr = new AntennaCLISettingsReader()", "var_name": "tcsr"}, {"original_string": "private Map<String,Boolean> booleanAnswers = new HashMap<>();", "modifier": "private", "type": "Map<String,Boolean>", "declarator": "booleanAnswers = new HashMap<>()", "var_name": "booleanAnswers"}, {"original_string": "private Map<String,Function<ToolConfiguration,Boolean>> booleanGetters = new HashMap<>();", "modifier": "private", "type": "Map<String,Function<ToolConfiguration,Boolean>>", "declarator": "booleanGetters = new HashMap<>()", "var_name": "booleanGetters"}, {"original_string": "private Map<String,Integer> intAnswers = new HashMap<>();", "modifier": "private", "type": "Map<String,Integer>", "declarator": "intAnswers = new HashMap<>()", "var_name": "intAnswers"}, {"original_string": "private Map<String,Function<ToolConfiguration,Integer>> intGetters = new HashMap<>();", "modifier": "private", "type": "Map<String,Function<ToolConfiguration,Integer>>", "declarator": "intGetters = new HashMap<>()", "var_name": "intGetters"}, {"original_string": "private Map<String,String> stringAnswers = new HashMap<>();", "modifier": "private", "type": "Map<String,String>", "declarator": "stringAnswers = new HashMap<>()", "var_name": "stringAnswers"}, {"original_string": "private Map<String,Function<ToolConfiguration,String>> stringGetters = new HashMap<>();", "modifier": "private", "type": "Map<String,Function<ToolConfiguration,String>>", "declarator": "stringGetters = new HashMap<>()", "var_name": "stringGetters"}, {"original_string": "private Map<String,List<String>> listAnswers = new HashMap<>();", "modifier": "private", "type": "Map<String,List<String>>", "declarator": "listAnswers = new HashMap<>()", "var_name": "listAnswers"}, {"original_string": "private Map<String,Function<ToolConfiguration,List<String>>> listGetters = new HashMap<>();", "modifier": "private", "type": "Map<String,Function<ToolConfiguration,List<String>>>", "declarator": "listGetters = new HashMap<>()", "var_name": "listGetters"}, {"original_string": "private Map<String, Boolean> testLicenseValidation = new HashMap<>();", "modifier": "private", "type": "Map<String, Boolean>", "declarator": "testLicenseValidation = new HashMap<>()", "var_name": "testLicenseValidation"}], "file": "core/frontend-stubs/cli-frontend-stub/src/test/java/org/eclipse/sw360/antenna/frontend/stub/cli/AntennaCLISettingsReaderTest.java"}, "test_case": {"identifier": "readBasicSettingsToToolConfigurationBuilderTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void readBasicSettingsToToolConfigurationBuilderTest() throws Exception {\n        fillMapsForToolConfiguration();\n\n        ToolConfiguration toolConfiguration = tcsr.readBasicSettingsToToolConfigurationBuilder(reader, project).buildConfiguration();\n\n        booleanGetters.forEach((key, getter) -> {\n            LOGGER.info(\"test for: \" + key);\n            assertEquals(booleanAnswers.get(key), getter.apply(toolConfiguration));\n        });\n        stringGetters.forEach((key, getter) -> {\n            LOGGER.info(\"test for: \" + key);\n            assertEquals(stringAnswers.get(key), getter.apply(toolConfiguration));\n        });\n        intGetters.forEach((key, getter) -> {\n            LOGGER.info(\"test for: \" + key);\n            assertEquals(intAnswers.get(key), getter.apply(toolConfiguration));\n        });\n        listGetters.forEach((key, getter) -> {\n            LOGGER.info(\"test for: \" + key);\n            assertEquals(listAnswers.get(key), getter.apply(toolConfiguration));\n        });\n    }", "signature": "void readBasicSettingsToToolConfigurationBuilderTest()", "full_signature": "@Test public void readBasicSettingsToToolConfigurationBuilderTest()", "class_method_signature": "AntennaCLISettingsReaderTest.readBasicSettingsToToolConfigurationBuilderTest()", "testcase": true, "constructor": false, "invocations": ["fillMapsForToolConfiguration", "buildConfiguration", "readBasicSettingsToToolConfigurationBuilder", "forEach", "info", "assertEquals", "get", "apply", "forEach", "info", "assertEquals", "get", "apply", "forEach", "info", "assertEquals", "get", "apply", "forEach", "info", "assertEquals", "get", "apply"]}, "focal_class": {"identifier": "AntennaCLISettingsReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(AntennaCLISettingsReader.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(AntennaCLISettingsReader.class)", "var_name": "log"}, {"original_string": "private String antennaConfXpath;", "modifier": "private", "type": "String", "declarator": "antennaConfXpath", "var_name": "antennaConfXpath"}, {"original_string": "private TemplateRenderer tr = new TemplateRenderer();", "modifier": "private", "type": "TemplateRenderer", "declarator": "tr = new TemplateRenderer()", "var_name": "tr"}], "methods": [{"identifier": "AntennaCLISettingsReader", "parameters": "()", "modifiers": "public", "return": "", "signature": " AntennaCLISettingsReader()", "full_signature": "public  AntennaCLISettingsReader()", "class_method_signature": "AntennaCLISettingsReader.AntennaCLISettingsReader()", "testcase": false, "constructor": true}, {"identifier": "AntennaCLISettingsReader", "parameters": "(String pluginDescendantArtifactName)", "modifiers": "public", "return": "", "signature": " AntennaCLISettingsReader(String pluginDescendantArtifactName)", "full_signature": "public  AntennaCLISettingsReader(String pluginDescendantArtifactName)", "class_method_signature": "AntennaCLISettingsReader.AntennaCLISettingsReader(String pluginDescendantArtifactName)", "testcase": false, "constructor": true}, {"identifier": "readProjectStringSetting", "parameters": "(XmlSettingsReader reader, String name, Consumer<String> setter)", "modifiers": "private", "return": "void", "signature": "void readProjectStringSetting(XmlSettingsReader reader, String name, Consumer<String> setter)", "full_signature": "private void readProjectStringSetting(XmlSettingsReader reader, String name, Consumer<String> setter)", "class_method_signature": "AntennaCLISettingsReader.readProjectStringSetting(XmlSettingsReader reader, String name, Consumer<String> setter)", "testcase": false, "constructor": false}, {"identifier": "readAntennaStringSetting", "parameters": "(XmlSettingsReader reader, String name, Consumer<String> setter)", "modifiers": "private", "return": "void", "signature": "void readAntennaStringSetting(XmlSettingsReader reader, String name, Consumer<String> setter)", "full_signature": "private void readAntennaStringSetting(XmlSettingsReader reader, String name, Consumer<String> setter)", "class_method_signature": "AntennaCLISettingsReader.readAntennaStringSetting(XmlSettingsReader reader, String name, Consumer<String> setter)", "testcase": false, "constructor": false}, {"identifier": "readAntennaStringSetting", "parameters": "(XmlSettingsReader reader, String name, String defaultValue, Consumer<String> setter)", "modifiers": "private", "return": "void", "signature": "void readAntennaStringSetting(XmlSettingsReader reader, String name, String defaultValue, Consumer<String> setter)", "full_signature": "private void readAntennaStringSetting(XmlSettingsReader reader, String name, String defaultValue, Consumer<String> setter)", "class_method_signature": "AntennaCLISettingsReader.readAntennaStringSetting(XmlSettingsReader reader, String name, String defaultValue, Consumer<String> setter)", "testcase": false, "constructor": false}, {"identifier": "readAntennaIntSetting", "parameters": "(XmlSettingsReader reader, String name, int defaultValue, Consumer<Integer> setter)", "modifiers": "private", "return": "void", "signature": "void readAntennaIntSetting(XmlSettingsReader reader, String name, int defaultValue, Consumer<Integer> setter)", "full_signature": "private void readAntennaIntSetting(XmlSettingsReader reader, String name, int defaultValue, Consumer<Integer> setter)", "class_method_signature": "AntennaCLISettingsReader.readAntennaIntSetting(XmlSettingsReader reader, String name, int defaultValue, Consumer<Integer> setter)", "testcase": false, "constructor": false}, {"identifier": "readAntennaBooleanSetting", "parameters": "(XmlSettingsReader reader, String name, boolean defaultValue, Consumer<Boolean> setter)", "modifiers": "private", "return": "void", "signature": "void readAntennaBooleanSetting(XmlSettingsReader reader, String name, boolean defaultValue, Consumer<Boolean> setter)", "full_signature": "private void readAntennaBooleanSetting(XmlSettingsReader reader, String name, boolean defaultValue, Consumer<Boolean> setter)", "class_method_signature": "AntennaCLISettingsReader.readAntennaBooleanSetting(XmlSettingsReader reader, String name, boolean defaultValue, Consumer<Boolean> setter)", "testcase": false, "constructor": false}, {"identifier": "readStringListSetting", "parameters": "(XmlSettingsReader reader, String name, Consumer<List<String>> setter)", "modifiers": "private", "return": "void", "signature": "void readStringListSetting(XmlSettingsReader reader, String name, Consumer<List<String>> setter)", "full_signature": "private void readStringListSetting(XmlSettingsReader reader, String name, Consumer<List<String>> setter)", "class_method_signature": "AntennaCLISettingsReader.readStringListSetting(XmlSettingsReader reader, String name, Consumer<List<String>> setter)", "testcase": false, "constructor": false}, {"identifier": "buildFileList", "parameters": "(List<String> paths)", "modifiers": "private", "return": "List<File>", "signature": "List<File> buildFileList(List<String> paths)", "full_signature": "private List<File> buildFileList(List<String> paths)", "class_method_signature": "AntennaCLISettingsReader.buildFileList(List<String> paths)", "testcase": false, "constructor": false}, {"identifier": "readFileListSetting", "parameters": "(XmlSettingsReader reader, String name, Consumer<List<File>> setter)", "modifiers": "private", "return": "void", "signature": "void readFileListSetting(XmlSettingsReader reader, String name, Consumer<List<File>> setter)", "full_signature": "private void readFileListSetting(XmlSettingsReader reader, String name, Consumer<List<File>> setter)", "class_method_signature": "AntennaCLISettingsReader.readFileListSetting(XmlSettingsReader reader, String name, Consumer<List<File>> setter)", "testcase": false, "constructor": false}, {"identifier": "readSettingsToToolConfiguration", "parameters": "(MetaDataStoringProject project)", "modifiers": "public", "return": "ToolConfiguration", "signature": "ToolConfiguration readSettingsToToolConfiguration(MetaDataStoringProject project)", "full_signature": "public ToolConfiguration readSettingsToToolConfiguration(MetaDataStoringProject project)", "class_method_signature": "AntennaCLISettingsReader.readSettingsToToolConfiguration(MetaDataStoringProject project)", "testcase": false, "constructor": false}, {"identifier": "setVersionFromPom", "parameters": "(MetaDataStoringProject project)", "modifiers": "private", "return": "void", "signature": "void setVersionFromPom(MetaDataStoringProject project)", "full_signature": "private void setVersionFromPom(MetaDataStoringProject project)", "class_method_signature": "AntennaCLISettingsReader.setVersionFromPom(MetaDataStoringProject project)", "testcase": false, "constructor": false}, {"identifier": "getSettingsReader", "parameters": "(MetaDataStoringProject project)", "modifiers": "private", "return": "XmlSettingsReader", "signature": "XmlSettingsReader getSettingsReader(MetaDataStoringProject project)", "full_signature": "private XmlSettingsReader getSettingsReader(MetaDataStoringProject project)", "class_method_signature": "AntennaCLISettingsReader.getSettingsReader(MetaDataStoringProject project)", "testcase": false, "constructor": false}, {"identifier": "getDefaultAntennaTargetDirectory", "parameters": "(MetaDataStoringProject project)", "modifiers": "private", "return": "String", "signature": "String getDefaultAntennaTargetDirectory(MetaDataStoringProject project)", "full_signature": "private String getDefaultAntennaTargetDirectory(MetaDataStoringProject project)", "class_method_signature": "AntennaCLISettingsReader.getDefaultAntennaTargetDirectory(MetaDataStoringProject project)", "testcase": false, "constructor": false}, {"identifier": "readBasicSettingsToToolConfigurationBuilder", "parameters": "(XmlSettingsReader reader, MetaDataStoringProject project)", "modifiers": "", "return": "ToolConfiguration.ConfigurationBuilder", "signature": "ToolConfiguration.ConfigurationBuilder readBasicSettingsToToolConfigurationBuilder(XmlSettingsReader reader, MetaDataStoringProject project)", "full_signature": " ToolConfiguration.ConfigurationBuilder readBasicSettingsToToolConfigurationBuilder(XmlSettingsReader reader, MetaDataStoringProject project)", "class_method_signature": "AntennaCLISettingsReader.readBasicSettingsToToolConfigurationBuilder(XmlSettingsReader reader, MetaDataStoringProject project)", "testcase": false, "constructor": false}, {"identifier": "readSettingsToToolConfiguration", "parameters": "(XmlSettingsReader reader, MetaDataStoringProject project)", "modifiers": "public", "return": "ToolConfiguration", "signature": "ToolConfiguration readSettingsToToolConfiguration(XmlSettingsReader reader, MetaDataStoringProject project)", "full_signature": "public ToolConfiguration readSettingsToToolConfiguration(XmlSettingsReader reader, MetaDataStoringProject project)", "class_method_signature": "AntennaCLISettingsReader.readSettingsToToolConfiguration(XmlSettingsReader reader, MetaDataStoringProject project)", "testcase": false, "constructor": false}, {"identifier": "mapProperties", "parameters": "(File propertiesFile)", "modifiers": "private", "return": "Map<String, Object>", "signature": "Map<String, Object> mapProperties(File propertiesFile)", "full_signature": "private Map<String, Object> mapProperties(File propertiesFile)", "class_method_signature": "AntennaCLISettingsReader.mapProperties(File propertiesFile)", "testcase": false, "constructor": false}], "file": "core/frontend-stubs/cli-frontend-stub/src/main/java/org/eclipse/sw360/antenna/frontend/stub/cli/AntennaCLISettingsReader.java"}, "focal_method": {"identifier": "readBasicSettingsToToolConfigurationBuilder", "parameters": "(XmlSettingsReader reader, MetaDataStoringProject project)", "modifiers": "", "return": "ToolConfiguration.ConfigurationBuilder", "body": "ToolConfiguration.ConfigurationBuilder readBasicSettingsToToolConfigurationBuilder(XmlSettingsReader reader, MetaDataStoringProject project)\n            throws IllegalArgumentException {\n        ToolConfiguration.ConfigurationBuilder toolConfigBuilder = new ToolConfiguration.ConfigurationBuilder();\n\n        // Simple strings\n        readProjectStringSetting(reader, \"artifactId\", project::setProjectId);\n        readAntennaStringSetting(reader, \"antennaTargetDirectory\", getDefaultAntennaTargetDirectory(project), toolConfigBuilder::setAntennaTargetDirectory);\n        readAntennaStringSetting(reader, \"scanDir\", toolConfigBuilder::setScanDir);\n        readAntennaStringSetting(reader, \"productName\", reader.getStringProperty(\"productName\"), toolConfigBuilder::setProductName);\n        readAntennaStringSetting(reader, \"productFullname\", reader.getStringProperty(\"productFullname\"), toolConfigBuilder::setProductFullName);\n        readAntennaStringSetting(reader, \"version\", \"1.0\", toolConfigBuilder::setVersion);\n        readAntennaStringSetting(reader, \"companyName\", toolConfigBuilder::setCompanyName);\n        readAntennaStringSetting(reader, \"copyrightHoldersName\", toolConfigBuilder::setCopyrightHoldersName);\n        readAntennaStringSetting(reader, \"copyrightNotice\", toolConfigBuilder::setCopyrightNotice);\n        readAntennaStringSetting(reader, \"attributionDocumentNotes\", toolConfigBuilder::setAttributionDocumentNotes);\n        readAntennaStringSetting(reader, \"encodingCharSet\", toolConfigBuilder::setEncoding);\n        readAntennaStringSetting(reader, \"proxyHost\", toolConfigBuilder::setProxyHost);\n\n        readAntennaIntSetting(reader, \"proxyPort\", 0, toolConfigBuilder::setProxyPort);\n\n        // Booleans\n        readAntennaBooleanSetting(reader, \"attachAll\", false, toolConfigBuilder::setAttachAll);\n        readAntennaBooleanSetting(reader, \"skip\", false, toolConfigBuilder::setSkipAntennaExecution);\n        readAntennaBooleanSetting(reader, \"showCopyrightStatements\", false, toolConfigBuilder::setShowCopyrightStatements);\n        readAntennaBooleanSetting(reader, \"isMavenInstalled\", false, toolConfigBuilder::setMavenInstalled);\n\n        // Other lists\n        readStringListSetting(reader, \"filesToAttach\", toolConfigBuilder::setFilesToAttach);\n        readFileListSetting(reader, \"configFiles\", toolConfigBuilder::setConfigFiles);\n\n        return toolConfigBuilder;\n    }", "signature": "ToolConfiguration.ConfigurationBuilder readBasicSettingsToToolConfigurationBuilder(XmlSettingsReader reader, MetaDataStoringProject project)", "full_signature": " ToolConfiguration.ConfigurationBuilder readBasicSettingsToToolConfigurationBuilder(XmlSettingsReader reader, MetaDataStoringProject project)", "class_method_signature": "AntennaCLISettingsReader.readBasicSettingsToToolConfigurationBuilder(XmlSettingsReader reader, MetaDataStoringProject project)", "testcase": false, "constructor": false, "invocations": ["readProjectStringSetting", "readAntennaStringSetting", "getDefaultAntennaTargetDirectory", "readAntennaStringSetting", "readAntennaStringSetting", "getStringProperty", "readAntennaStringSetting", "getStringProperty", "readAntennaStringSetting", "readAntennaStringSetting", "readAntennaStringSetting", "readAntennaStringSetting", "readAntennaStringSetting", "readAntennaStringSetting", "readAntennaStringSetting", "readAntennaIntSetting", "readAntennaBooleanSetting", "readAntennaBooleanSetting", "readAntennaBooleanSetting", "readAntennaBooleanSetting", "readStringListSetting", "readFileListSetting"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}