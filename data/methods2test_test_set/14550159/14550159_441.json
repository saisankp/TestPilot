{"test_class": {"identifier": "AsynchronousJobPoolTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private final String asyncServicePath = \"/async\";", "modifier": "private final", "type": "String", "declarator": "asyncServicePath = \"/async\"", "var_name": "asyncServicePath"}, {"original_string": "private ApplicationContext       applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private AsynchronousJobPool      asynchronousJobPool;", "modifier": "private", "type": "AsynchronousJobPool", "declarator": "asynchronousJobPool", "var_name": "asynchronousJobPool"}, {"original_string": "private Resource                 resource;", "modifier": "private", "type": "Resource", "declarator": "resource", "var_name": "resource"}, {"original_string": "private ResourceMethodDescriptor methodDescriptor;", "modifier": "private", "type": "ResourceMethodDescriptor", "declarator": "methodDescriptor", "var_name": "methodDescriptor"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/async/AsynchronousJobPoolTest.java"}, "test_case": {"identifier": "readsQueueSizeFromConfiguration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void readsQueueSizeFromConfiguration() throws Exception {\n        final EverrestConfiguration configuration = new EverrestConfiguration();\n        configuration.setAsynchronousQueueSize(555);\n        asynchronousJobPool = new AsynchronousJobPool(configuration);\n        assertEquals(555, asynchronousJobPool.getMaxQueueSize());\n    }", "signature": "void readsQueueSizeFromConfiguration()", "full_signature": "@Test public void readsQueueSizeFromConfiguration()", "class_method_signature": "AsynchronousJobPoolTest.readsQueueSizeFromConfiguration()", "testcase": true, "constructor": false, "invocations": ["setAsynchronousQueueSize", "assertEquals", "getMaxQueueSize"]}, "focal_class": {"identifier": "AsynchronousJobPool", "superclass": "", "interfaces": "implements ContextResolver<AsynchronousJobPool>", "fields": [{"original_string": "private static final org.slf4j.Logger LOG = LoggerFactory.getLogger(AsynchronousJobPool.class);", "modifier": "private static final", "type": "org.slf4j.Logger", "declarator": "LOG = LoggerFactory.getLogger(AsynchronousJobPool.class)", "var_name": "LOG"}, {"original_string": "protected final String asynchronousServicePath;", "modifier": "protected final", "type": "String", "declarator": "asynchronousServicePath", "var_name": "asynchronousServicePath"}, {"original_string": "protected final int jobTimeout;", "modifier": "protected final", "type": "int", "declarator": "jobTimeout", "var_name": "jobTimeout"}, {"original_string": "protected final int maxCacheSize;", "modifier": "protected final", "type": "int", "declarator": "maxCacheSize", "var_name": "maxCacheSize"}, {"original_string": "protected final int maxQueueSize;", "modifier": "protected final", "type": "int", "declarator": "maxQueueSize", "var_name": "maxQueueSize"}, {"original_string": "protected final int threadPoolSize;", "modifier": "protected final", "type": "int", "declarator": "threadPoolSize", "var_name": "threadPoolSize"}, {"original_string": "private final ExecutorService pool;", "modifier": "private final", "type": "ExecutorService", "declarator": "pool", "var_name": "pool"}, {"original_string": "private final Map<Long, AsynchronousJob> jobs;", "modifier": "private final", "type": "Map<Long, AsynchronousJob>", "declarator": "jobs", "var_name": "jobs"}, {"original_string": "private final CopyOnWriteArrayList<AsynchronousJobListener> jobListeners;", "modifier": "private final", "type": "CopyOnWriteArrayList<AsynchronousJobListener>", "declarator": "jobListeners", "var_name": "jobListeners"}, {"original_string": "private AsynchronousFutureFactory asynchronousFutureFactory;", "modifier": "private", "type": "AsynchronousFutureFactory", "declarator": "asynchronousFutureFactory", "var_name": "asynchronousFutureFactory"}], "methods": [{"identifier": "AsynchronousJobPool", "parameters": "(EverrestConfiguration config)", "modifiers": "public", "return": "", "signature": " AsynchronousJobPool(EverrestConfiguration config)", "full_signature": "public  AsynchronousJobPool(EverrestConfiguration config)", "class_method_signature": "AsynchronousJobPool.AsynchronousJobPool(EverrestConfiguration config)", "testcase": false, "constructor": true}, {"identifier": "getAsynchronousServicePath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAsynchronousServicePath()", "full_signature": "public String getAsynchronousServicePath()", "class_method_signature": "AsynchronousJobPool.getAsynchronousServicePath()", "testcase": false, "constructor": false}, {"identifier": "getMaxCacheSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxCacheSize()", "full_signature": "public int getMaxCacheSize()", "class_method_signature": "AsynchronousJobPool.getMaxCacheSize()", "testcase": false, "constructor": false}, {"identifier": "getMaxQueueSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxQueueSize()", "full_signature": "public int getMaxQueueSize()", "class_method_signature": "AsynchronousJobPool.getMaxQueueSize()", "testcase": false, "constructor": false}, {"identifier": "getThreadPoolSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getThreadPoolSize()", "full_signature": "public int getThreadPoolSize()", "class_method_signature": "AsynchronousJobPool.getThreadPoolSize()", "testcase": false, "constructor": false}, {"identifier": "getJobTimeout", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getJobTimeout()", "full_signature": "public int getJobTimeout()", "class_method_signature": "AsynchronousJobPool.getJobTimeout()", "testcase": false, "constructor": false}, {"identifier": "setAsynchronousFutureFactory", "parameters": "(AsynchronousFutureFactory asynchronousFutureFactory)", "modifiers": "", "return": "void", "signature": "void setAsynchronousFutureFactory(AsynchronousFutureFactory asynchronousFutureFactory)", "full_signature": " void setAsynchronousFutureFactory(AsynchronousFutureFactory asynchronousFutureFactory)", "class_method_signature": "AsynchronousJobPool.setAsynchronousFutureFactory(AsynchronousFutureFactory asynchronousFutureFactory)", "testcase": false, "constructor": false}, {"identifier": "makeExecutorService", "parameters": "()", "modifiers": "protected", "return": "ExecutorService", "signature": "ExecutorService makeExecutorService()", "full_signature": "protected ExecutorService makeExecutorService()", "class_method_signature": "AsynchronousJobPool.makeExecutorService()", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "(Class<?> type)", "modifiers": "@Override public", "return": "AsynchronousJobPool", "signature": "AsynchronousJobPool getContext(Class<?> type)", "full_signature": "@Override public AsynchronousJobPool getContext(Class<?> type)", "class_method_signature": "AsynchronousJobPool.getContext(Class<?> type)", "testcase": false, "constructor": false}, {"identifier": "addJob", "parameters": "(Object resource, ResourceMethodDescriptor resourceMethod, Object[] params)", "modifiers": "public final", "return": "AsynchronousJob", "signature": "AsynchronousJob addJob(Object resource, ResourceMethodDescriptor resourceMethod, Object[] params)", "full_signature": "public final AsynchronousJob addJob(Object resource, ResourceMethodDescriptor resourceMethod, Object[] params)", "class_method_signature": "AsynchronousJobPool.addJob(Object resource, ResourceMethodDescriptor resourceMethod, Object[] params)", "testcase": false, "constructor": false}, {"identifier": "createRequestCopy", "parameters": "(GenericContainerRequest originRequest, SecurityContext securityContext)", "modifiers": "private", "return": "ContainerRequest", "signature": "ContainerRequest createRequestCopy(GenericContainerRequest originRequest, SecurityContext securityContext)", "full_signature": "private ContainerRequest createRequestCopy(GenericContainerRequest originRequest, SecurityContext securityContext)", "class_method_signature": "AsynchronousJobPool.createRequestCopy(GenericContainerRequest originRequest, SecurityContext securityContext)", "testcase": false, "constructor": false}, {"identifier": "initAsynchronousJobContext", "parameters": "(AsynchronousJob job)", "modifiers": "protected", "return": "void", "signature": "void initAsynchronousJobContext(AsynchronousJob job)", "full_signature": "protected void initAsynchronousJobContext(AsynchronousJob job)", "class_method_signature": "AsynchronousJobPool.initAsynchronousJobContext(AsynchronousJob job)", "testcase": false, "constructor": false}, {"identifier": "getAsynchronousJobUriBuilder", "parameters": "(AsynchronousJob job)", "modifiers": "protected", "return": "UriBuilder", "signature": "UriBuilder getAsynchronousJobUriBuilder(AsynchronousJob job)", "full_signature": "protected UriBuilder getAsynchronousJobUriBuilder(AsynchronousJob job)", "class_method_signature": "AsynchronousJobPool.getAsynchronousJobUriBuilder(AsynchronousJob job)", "testcase": false, "constructor": false}, {"identifier": "newCallable", "parameters": "(Object resource, Method method, Object[] params)", "modifiers": "protected", "return": "Callable<Object>", "signature": "Callable<Object> newCallable(Object resource, Method method, Object[] params)", "full_signature": "protected Callable<Object> newCallable(Object resource, Method method, Object[] params)", "class_method_signature": "AsynchronousJobPool.newCallable(Object resource, Method method, Object[] params)", "testcase": false, "constructor": false}, {"identifier": "getJob", "parameters": "(Long jobId)", "modifiers": "public", "return": "AsynchronousJob", "signature": "AsynchronousJob getJob(Long jobId)", "full_signature": "public AsynchronousJob getJob(Long jobId)", "class_method_signature": "AsynchronousJobPool.getJob(Long jobId)", "testcase": false, "constructor": false}, {"identifier": "removeJob", "parameters": "(Long jobId)", "modifiers": "public", "return": "AsynchronousJob", "signature": "AsynchronousJob removeJob(Long jobId)", "full_signature": "public AsynchronousJob removeJob(Long jobId)", "class_method_signature": "AsynchronousJobPool.removeJob(Long jobId)", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "()", "modifiers": "public", "return": "List<AsynchronousJob>", "signature": "List<AsynchronousJob> getAll()", "full_signature": "public List<AsynchronousJob> getAll()", "class_method_signature": "AsynchronousJobPool.getAll()", "testcase": false, "constructor": false}, {"identifier": "registerListener", "parameters": "(AsynchronousJobListener listener)", "modifiers": "public", "return": "boolean", "signature": "boolean registerListener(AsynchronousJobListener listener)", "full_signature": "public boolean registerListener(AsynchronousJobListener listener)", "class_method_signature": "AsynchronousJobPool.registerListener(AsynchronousJobListener listener)", "testcase": false, "constructor": false}, {"identifier": "unregisterListener", "parameters": "(AsynchronousJobListener listener)", "modifiers": "public", "return": "boolean", "signature": "boolean unregisterListener(AsynchronousJobListener listener)", "full_signature": "public boolean unregisterListener(AsynchronousJobListener listener)", "class_method_signature": "AsynchronousJobPool.unregisterListener(AsynchronousJobListener listener)", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@PreDestroy public", "return": "void", "signature": "void stop()", "full_signature": "@PreDestroy public void stop()", "class_method_signature": "AsynchronousJobPool.stop()", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/async/AsynchronousJobPool.java"}, "focal_method": {"identifier": "getMaxQueueSize", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int getMaxQueueSize() {\n        return maxQueueSize;\n    }", "signature": "int getMaxQueueSize()", "full_signature": "public int getMaxQueueSize()", "class_method_signature": "AsynchronousJobPool.getMaxQueueSize()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}