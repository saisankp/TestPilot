{"test_class": {"identifier": "AccountManagerImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    AccountDao _accountDao;", "modifier": "@Mock", "type": "AccountDao", "declarator": "_accountDao", "var_name": "_accountDao"}, {"original_string": "@Mock\n    ConfigurationDao _configDao;", "modifier": "@Mock", "type": "ConfigurationDao", "declarator": "_configDao", "var_name": "_configDao"}, {"original_string": "@Mock\n    ResourceCountDao _resourceCountDao;", "modifier": "@Mock", "type": "ResourceCountDao", "declarator": "_resourceCountDao", "var_name": "_resourceCountDao"}, {"original_string": "@Mock\n    UserDao _userDao;", "modifier": "@Mock", "type": "UserDao", "declarator": "_userDao", "var_name": "_userDao"}, {"original_string": "@Mock\n    InstanceGroupDao _vmGroupDao;", "modifier": "@Mock", "type": "InstanceGroupDao", "declarator": "_vmGroupDao", "var_name": "_vmGroupDao"}, {"original_string": "@Mock\n    UserAccountDao _userAccountDao;", "modifier": "@Mock", "type": "UserAccountDao", "declarator": "_userAccountDao", "var_name": "_userAccountDao"}, {"original_string": "@Mock\n    VolumeDao _volumeDao;", "modifier": "@Mock", "type": "VolumeDao", "declarator": "_volumeDao", "var_name": "_volumeDao"}, {"original_string": "@Mock\n    UserVmDao _userVmDao;", "modifier": "@Mock", "type": "UserVmDao", "declarator": "_userVmDao", "var_name": "_userVmDao"}, {"original_string": "@Mock\n    VMTemplateDao _templateDao;", "modifier": "@Mock", "type": "VMTemplateDao", "declarator": "_templateDao", "var_name": "_templateDao"}, {"original_string": "@Mock\n    NetworkDao _networkDao;", "modifier": "@Mock", "type": "NetworkDao", "declarator": "_networkDao", "var_name": "_networkDao"}, {"original_string": "@Mock\n    SecurityGroupDao _securityGroupDao;", "modifier": "@Mock", "type": "SecurityGroupDao", "declarator": "_securityGroupDao", "var_name": "_securityGroupDao"}, {"original_string": "@Mock\n    VMInstanceDao _vmDao;", "modifier": "@Mock", "type": "VMInstanceDao", "declarator": "_vmDao", "var_name": "_vmDao"}, {"original_string": "@Mock\n    protected SnapshotDao _snapshotDao;", "modifier": "@Mock\n    protected", "type": "SnapshotDao", "declarator": "_snapshotDao", "var_name": "_snapshotDao"}, {"original_string": "@Mock\n    protected VMTemplateDao _vmTemplateDao;", "modifier": "@Mock\n    protected", "type": "VMTemplateDao", "declarator": "_vmTemplateDao", "var_name": "_vmTemplateDao"}, {"original_string": "@Mock\n    SecurityGroupManager _networkGroupMgr;", "modifier": "@Mock", "type": "SecurityGroupManager", "declarator": "_networkGroupMgr", "var_name": "_networkGroupMgr"}, {"original_string": "@Mock\n    NetworkOrchestrationService _networkMgr;", "modifier": "@Mock", "type": "NetworkOrchestrationService", "declarator": "_networkMgr", "var_name": "_networkMgr"}, {"original_string": "@Mock\n    SnapshotManager _snapMgr;", "modifier": "@Mock", "type": "SnapshotManager", "declarator": "_snapMgr", "var_name": "_snapMgr"}, {"original_string": "@Mock\n    UserVmManager _vmMgr;", "modifier": "@Mock", "type": "UserVmManager", "declarator": "_vmMgr", "var_name": "_vmMgr"}, {"original_string": "@Mock\n    TemplateManager _tmpltMgr;", "modifier": "@Mock", "type": "TemplateManager", "declarator": "_tmpltMgr", "var_name": "_tmpltMgr"}, {"original_string": "@Mock\n    ConfigurationManager _configMgr;", "modifier": "@Mock", "type": "ConfigurationManager", "declarator": "_configMgr", "var_name": "_configMgr"}, {"original_string": "@Mock\n    VirtualMachineManager _itMgr;", "modifier": "@Mock", "type": "VirtualMachineManager", "declarator": "_itMgr", "var_name": "_itMgr"}, {"original_string": "@Mock\n    RemoteAccessVpnDao _remoteAccessVpnDao;", "modifier": "@Mock", "type": "RemoteAccessVpnDao", "declarator": "_remoteAccessVpnDao", "var_name": "_remoteAccessVpnDao"}, {"original_string": "@Mock\n    RemoteAccessVpnService _remoteAccessVpnMgr;", "modifier": "@Mock", "type": "RemoteAccessVpnService", "declarator": "_remoteAccessVpnMgr", "var_name": "_remoteAccessVpnMgr"}, {"original_string": "@Mock\n    VpnUserDao _vpnUser;", "modifier": "@Mock", "type": "VpnUserDao", "declarator": "_vpnUser", "var_name": "_vpnUser"}, {"original_string": "@Mock\n    DataCenterDao _dcDao;", "modifier": "@Mock", "type": "DataCenterDao", "declarator": "_dcDao", "var_name": "_dcDao"}, {"original_string": "@Mock\n    DomainManager _domainMgr;", "modifier": "@Mock", "type": "DomainManager", "declarator": "_domainMgr", "var_name": "_domainMgr"}, {"original_string": "@Mock\n    ProjectManager _projectMgr;", "modifier": "@Mock", "type": "ProjectManager", "declarator": "_projectMgr", "var_name": "_projectMgr"}, {"original_string": "@Mock\n    ProjectDao _projectDao;", "modifier": "@Mock", "type": "ProjectDao", "declarator": "_projectDao", "var_name": "_projectDao"}, {"original_string": "@Mock\n    AccountDetailsDao _accountDetailsDao;", "modifier": "@Mock", "type": "AccountDetailsDao", "declarator": "_accountDetailsDao", "var_name": "_accountDetailsDao"}, {"original_string": "@Mock\n    DomainDao _domainDao;", "modifier": "@Mock", "type": "DomainDao", "declarator": "_domainDao", "var_name": "_domainDao"}, {"original_string": "@Mock\n    ProjectAccountDao _projectAccountDao;", "modifier": "@Mock", "type": "ProjectAccountDao", "declarator": "_projectAccountDao", "var_name": "_projectAccountDao"}, {"original_string": "@Mock\n    IPAddressDao _ipAddressDao;", "modifier": "@Mock", "type": "IPAddressDao", "declarator": "_ipAddressDao", "var_name": "_ipAddressDao"}, {"original_string": "@Mock\n    VpcManager _vpcMgr;", "modifier": "@Mock", "type": "VpcManager", "declarator": "_vpcMgr", "var_name": "_vpcMgr"}, {"original_string": "@Mock\n    DomainRouterDao _routerDao;", "modifier": "@Mock", "type": "DomainRouterDao", "declarator": "_routerDao", "var_name": "_routerDao"}, {"original_string": "@Mock\n    Site2SiteVpnManager _vpnMgr;", "modifier": "@Mock", "type": "Site2SiteVpnManager", "declarator": "_vpnMgr", "var_name": "_vpnMgr"}, {"original_string": "@Mock\n    AutoScaleManager _autoscaleMgr;", "modifier": "@Mock", "type": "AutoScaleManager", "declarator": "_autoscaleMgr", "var_name": "_autoscaleMgr"}, {"original_string": "@Mock\n    VolumeApiService volumeService;", "modifier": "@Mock", "type": "VolumeApiService", "declarator": "volumeService", "var_name": "volumeService"}, {"original_string": "@Mock\n    AffinityGroupDao _affinityGroupDao;", "modifier": "@Mock", "type": "AffinityGroupDao", "declarator": "_affinityGroupDao", "var_name": "_affinityGroupDao"}, {"original_string": "@Mock\n    AccountGuestVlanMapDao _accountGuestVlanMapDao;", "modifier": "@Mock", "type": "AccountGuestVlanMapDao", "declarator": "_accountGuestVlanMapDao", "var_name": "_accountGuestVlanMapDao"}, {"original_string": "@Mock\n    DataCenterVnetDao _dataCenterVnetDao;", "modifier": "@Mock", "type": "DataCenterVnetDao", "declarator": "_dataCenterVnetDao", "var_name": "_dataCenterVnetDao"}, {"original_string": "@Mock\n    ResourceLimitService _resourceLimitMgr;", "modifier": "@Mock", "type": "ResourceLimitService", "declarator": "_resourceLimitMgr", "var_name": "_resourceLimitMgr"}, {"original_string": "@Mock\n    ResourceLimitDao _resourceLimitDao;", "modifier": "@Mock", "type": "ResourceLimitDao", "declarator": "_resourceLimitDao", "var_name": "_resourceLimitDao"}, {"original_string": "@Mock\n    DedicatedResourceDao _dedicatedDao;", "modifier": "@Mock", "type": "DedicatedResourceDao", "declarator": "_dedicatedDao", "var_name": "_dedicatedDao"}, {"original_string": "@Mock\n    GlobalLoadBalancerRuleDao _gslbRuleDao;", "modifier": "@Mock", "type": "GlobalLoadBalancerRuleDao", "declarator": "_gslbRuleDao", "var_name": "_gslbRuleDao"}, {"original_string": "@Mock\n    MessageBus _messageBus;", "modifier": "@Mock", "type": "MessageBus", "declarator": "_messageBus", "var_name": "_messageBus"}, {"original_string": "@Mock\n    VMSnapshotManager _vmSnapshotMgr;", "modifier": "@Mock", "type": "VMSnapshotManager", "declarator": "_vmSnapshotMgr", "var_name": "_vmSnapshotMgr"}, {"original_string": "@Mock\n    VMSnapshotDao _vmSnapshotDao;", "modifier": "@Mock", "type": "VMSnapshotDao", "declarator": "_vmSnapshotDao", "var_name": "_vmSnapshotDao"}, {"original_string": "@Mock\n    User callingUser;", "modifier": "@Mock", "type": "User", "declarator": "callingUser", "var_name": "callingUser"}, {"original_string": "@Mock\n    Account callingAccount;", "modifier": "@Mock", "type": "Account", "declarator": "callingAccount", "var_name": "callingAccount"}, {"original_string": "AccountManagerImpl accountManager;", "modifier": "", "type": "AccountManagerImpl", "declarator": "accountManager", "var_name": "accountManager"}, {"original_string": "@Mock\n    SecurityChecker securityChecker;", "modifier": "@Mock", "type": "SecurityChecker", "declarator": "securityChecker", "var_name": "securityChecker"}, {"original_string": "@Mock\n    private UserAuthenticator userAuthenticator;", "modifier": "@Mock\n    private", "type": "UserAuthenticator", "declarator": "userAuthenticator", "var_name": "userAuthenticator"}], "file": "server/src/test/java/com/cloud/user/AccountManagerImplTest.java"}, "test_case": {"identifier": "disableAccountDisabled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void disableAccountDisabled() throws ConcurrentOperationException,\n            ResourceUnavailableException {\n        AccountVO disabledAccount = new AccountVO();\n        disabledAccount.setState(State.disabled);\n        Mockito.when(_accountDao.findById(42l)).thenReturn(disabledAccount);\n        Assert.assertTrue(accountManager.disableAccount(42));\n    }", "signature": "void disableAccountDisabled()", "full_signature": "@Test public void disableAccountDisabled()", "class_method_signature": "AccountManagerImplTest.disableAccountDisabled()", "testcase": true, "constructor": false, "invocations": ["setState", "thenReturn", "when", "findById", "assertTrue", "disableAccount"]}, "focal_class": {"identifier": "AccountManagerImpl", "superclass": "extends ManagerBase", "interfaces": "implements AccountManager, Manager", "fields": [{"original_string": "public static final Logger s_logger = LoggerFactory.getLogger(AccountManagerImpl.class);", "modifier": "public static final", "type": "Logger", "declarator": "s_logger = LoggerFactory.getLogger(AccountManagerImpl.class)", "var_name": "s_logger"}, {"original_string": "@Inject\n    private AccountDao _accountDao;", "modifier": "@Inject\n    private", "type": "AccountDao", "declarator": "_accountDao", "var_name": "_accountDao"}, {"original_string": "@Inject\n    ConfigurationDao _configDao;", "modifier": "@Inject", "type": "ConfigurationDao", "declarator": "_configDao", "var_name": "_configDao"}, {"original_string": "@Inject\n    private ResourceCountDao _resourceCountDao;", "modifier": "@Inject\n    private", "type": "ResourceCountDao", "declarator": "_resourceCountDao", "var_name": "_resourceCountDao"}, {"original_string": "@Inject\n    private UserDao _userDao;", "modifier": "@Inject\n    private", "type": "UserDao", "declarator": "_userDao", "var_name": "_userDao"}, {"original_string": "@Inject\n    private InstanceGroupDao _vmGroupDao;", "modifier": "@Inject\n    private", "type": "InstanceGroupDao", "declarator": "_vmGroupDao", "var_name": "_vmGroupDao"}, {"original_string": "@Inject\n    private UserAccountDao _userAccountDao;", "modifier": "@Inject\n    private", "type": "UserAccountDao", "declarator": "_userAccountDao", "var_name": "_userAccountDao"}, {"original_string": "@Inject\n    private VolumeDao _volumeDao;", "modifier": "@Inject\n    private", "type": "VolumeDao", "declarator": "_volumeDao", "var_name": "_volumeDao"}, {"original_string": "@Inject\n    private UserVmDao _userVmDao;", "modifier": "@Inject\n    private", "type": "UserVmDao", "declarator": "_userVmDao", "var_name": "_userVmDao"}, {"original_string": "@Inject\n    private VMTemplateDao _templateDao;", "modifier": "@Inject\n    private", "type": "VMTemplateDao", "declarator": "_templateDao", "var_name": "_templateDao"}, {"original_string": "@Inject\n    private NetworkDao _networkDao;", "modifier": "@Inject\n    private", "type": "NetworkDao", "declarator": "_networkDao", "var_name": "_networkDao"}, {"original_string": "@Inject\n    private SecurityGroupDao _securityGroupDao;", "modifier": "@Inject\n    private", "type": "SecurityGroupDao", "declarator": "_securityGroupDao", "var_name": "_securityGroupDao"}, {"original_string": "@Inject\n    private VMInstanceDao _vmDao;", "modifier": "@Inject\n    private", "type": "VMInstanceDao", "declarator": "_vmDao", "var_name": "_vmDao"}, {"original_string": "@Inject\n    protected SnapshotDao _snapshotDao;", "modifier": "@Inject\n    protected", "type": "SnapshotDao", "declarator": "_snapshotDao", "var_name": "_snapshotDao"}, {"original_string": "@Inject\n    protected VMTemplateDao _vmTemplateDao;", "modifier": "@Inject\n    protected", "type": "VMTemplateDao", "declarator": "_vmTemplateDao", "var_name": "_vmTemplateDao"}, {"original_string": "@Inject\n    private SecurityGroupManager _networkGroupMgr;", "modifier": "@Inject\n    private", "type": "SecurityGroupManager", "declarator": "_networkGroupMgr", "var_name": "_networkGroupMgr"}, {"original_string": "@Inject\n    private NetworkOrchestrationService _networkMgr;", "modifier": "@Inject\n    private", "type": "NetworkOrchestrationService", "declarator": "_networkMgr", "var_name": "_networkMgr"}, {"original_string": "@Inject\n    private SnapshotManager _snapMgr;", "modifier": "@Inject\n    private", "type": "SnapshotManager", "declarator": "_snapMgr", "var_name": "_snapMgr"}, {"original_string": "@Inject\n    private VMSnapshotManager _vmSnapshotMgr;", "modifier": "@Inject\n    private", "type": "VMSnapshotManager", "declarator": "_vmSnapshotMgr", "var_name": "_vmSnapshotMgr"}, {"original_string": "@Inject\n    private VMSnapshotDao _vmSnapshotDao;", "modifier": "@Inject\n    private", "type": "VMSnapshotDao", "declarator": "_vmSnapshotDao", "var_name": "_vmSnapshotDao"}, {"original_string": "@Inject\n    private UserVmManager _vmMgr;", "modifier": "@Inject\n    private", "type": "UserVmManager", "declarator": "_vmMgr", "var_name": "_vmMgr"}, {"original_string": "@Inject\n    private TemplateManager _tmpltMgr;", "modifier": "@Inject\n    private", "type": "TemplateManager", "declarator": "_tmpltMgr", "var_name": "_tmpltMgr"}, {"original_string": "@Inject\n    private ConfigurationManager _configMgr;", "modifier": "@Inject\n    private", "type": "ConfigurationManager", "declarator": "_configMgr", "var_name": "_configMgr"}, {"original_string": "@Inject\n    private VirtualMachineManager _itMgr;", "modifier": "@Inject\n    private", "type": "VirtualMachineManager", "declarator": "_itMgr", "var_name": "_itMgr"}, {"original_string": "@Inject\n    private RemoteAccessVpnDao _remoteAccessVpnDao;", "modifier": "@Inject\n    private", "type": "RemoteAccessVpnDao", "declarator": "_remoteAccessVpnDao", "var_name": "_remoteAccessVpnDao"}, {"original_string": "@Inject\n    private RemoteAccessVpnService _remoteAccessVpnMgr;", "modifier": "@Inject\n    private", "type": "RemoteAccessVpnService", "declarator": "_remoteAccessVpnMgr", "var_name": "_remoteAccessVpnMgr"}, {"original_string": "@Inject\n    private VpnUserDao _vpnUser;", "modifier": "@Inject\n    private", "type": "VpnUserDao", "declarator": "_vpnUser", "var_name": "_vpnUser"}, {"original_string": "@Inject\n    private DataCenterDao _dcDao;", "modifier": "@Inject\n    private", "type": "DataCenterDao", "declarator": "_dcDao", "var_name": "_dcDao"}, {"original_string": "@Inject\n    private DomainManager _domainMgr;", "modifier": "@Inject\n    private", "type": "DomainManager", "declarator": "_domainMgr", "var_name": "_domainMgr"}, {"original_string": "@Inject\n    private ProjectManager _projectMgr;", "modifier": "@Inject\n    private", "type": "ProjectManager", "declarator": "_projectMgr", "var_name": "_projectMgr"}, {"original_string": "@Inject\n    private ProjectDao _projectDao;", "modifier": "@Inject\n    private", "type": "ProjectDao", "declarator": "_projectDao", "var_name": "_projectDao"}, {"original_string": "@Inject\n    private AccountDetailsDao _accountDetailsDao;", "modifier": "@Inject\n    private", "type": "AccountDetailsDao", "declarator": "_accountDetailsDao", "var_name": "_accountDetailsDao"}, {"original_string": "@Inject\n    private DomainDao _domainDao;", "modifier": "@Inject\n    private", "type": "DomainDao", "declarator": "_domainDao", "var_name": "_domainDao"}, {"original_string": "@Inject\n    private ProjectAccountDao _projectAccountDao;", "modifier": "@Inject\n    private", "type": "ProjectAccountDao", "declarator": "_projectAccountDao", "var_name": "_projectAccountDao"}, {"original_string": "@Inject\n    private IPAddressDao _ipAddressDao;", "modifier": "@Inject\n    private", "type": "IPAddressDao", "declarator": "_ipAddressDao", "var_name": "_ipAddressDao"}, {"original_string": "@Inject\n    private VpcManager _vpcMgr;", "modifier": "@Inject\n    private", "type": "VpcManager", "declarator": "_vpcMgr", "var_name": "_vpcMgr"}, {"original_string": "@Inject\n    Site2SiteVpnManager _vpnMgr;", "modifier": "@Inject", "type": "Site2SiteVpnManager", "declarator": "_vpnMgr", "var_name": "_vpnMgr"}, {"original_string": "@Inject\n    private AutoScaleManager _autoscaleMgr;", "modifier": "@Inject\n    private", "type": "AutoScaleManager", "declarator": "_autoscaleMgr", "var_name": "_autoscaleMgr"}, {"original_string": "@Inject\n    VolumeApiService volumeService;", "modifier": "@Inject", "type": "VolumeApiService", "declarator": "volumeService", "var_name": "volumeService"}, {"original_string": "@Inject\n    private AffinityGroupDao _affinityGroupDao;", "modifier": "@Inject\n    private", "type": "AffinityGroupDao", "declarator": "_affinityGroupDao", "var_name": "_affinityGroupDao"}, {"original_string": "@Inject\n    private AccountGuestVlanMapDao _accountGuestVlanMapDao;", "modifier": "@Inject\n    private", "type": "AccountGuestVlanMapDao", "declarator": "_accountGuestVlanMapDao", "var_name": "_accountGuestVlanMapDao"}, {"original_string": "@Inject\n    private DataCenterVnetDao _dataCenterVnetDao;", "modifier": "@Inject\n    private", "type": "DataCenterVnetDao", "declarator": "_dataCenterVnetDao", "var_name": "_dataCenterVnetDao"}, {"original_string": "@Inject\n    private ResourceLimitService _resourceLimitMgr;", "modifier": "@Inject\n    private", "type": "ResourceLimitService", "declarator": "_resourceLimitMgr", "var_name": "_resourceLimitMgr"}, {"original_string": "@Inject\n    private ResourceLimitDao _resourceLimitDao;", "modifier": "@Inject\n    private", "type": "ResourceLimitDao", "declarator": "_resourceLimitDao", "var_name": "_resourceLimitDao"}, {"original_string": "@Inject\n    private DedicatedResourceDao _dedicatedDao;", "modifier": "@Inject\n    private", "type": "DedicatedResourceDao", "declarator": "_dedicatedDao", "var_name": "_dedicatedDao"}, {"original_string": "@Inject\n    private GlobalLoadBalancerRuleDao _gslbRuleDao;", "modifier": "@Inject\n    private", "type": "GlobalLoadBalancerRuleDao", "declarator": "_gslbRuleDao", "var_name": "_gslbRuleDao"}, {"original_string": "List<QuerySelector> _querySelectors;", "modifier": "", "type": "List<QuerySelector>", "declarator": "_querySelectors", "var_name": "_querySelectors"}, {"original_string": "@Inject\n    MessageBus _messageBus;", "modifier": "@Inject", "type": "MessageBus", "declarator": "_messageBus", "var_name": "_messageBus"}, {"original_string": "@Inject\n    public com.cloud.region.ha.GlobalLoadBalancingRulesService _gslbService;", "modifier": "@Inject\n    public", "type": "com.cloud.region.ha.GlobalLoadBalancingRulesService", "declarator": "_gslbService", "var_name": "_gslbService"}, {"original_string": "private List<UserAuthenticator> _userAuthenticators;", "modifier": "private", "type": "List<UserAuthenticator>", "declarator": "_userAuthenticators", "var_name": "_userAuthenticators"}, {"original_string": "List<UserAuthenticator> _userPasswordEncoders;", "modifier": "", "type": "List<UserAuthenticator>", "declarator": "_userPasswordEncoders", "var_name": "_userPasswordEncoders"}, {"original_string": "@Inject\n    protected IpAddressManager _ipAddrMgr;", "modifier": "@Inject\n    protected", "type": "IpAddressManager", "declarator": "_ipAddrMgr", "var_name": "_ipAddrMgr"}, {"original_string": "private final ScheduledExecutorService _executor = Executors.newScheduledThreadPool(1, new NamedThreadFactory(\"AccountChecker\"));", "modifier": "private final", "type": "ScheduledExecutorService", "declarator": "_executor = Executors.newScheduledThreadPool(1, new NamedThreadFactory(\"AccountChecker\"))", "var_name": "_executor"}, {"original_string": "int _allowedLoginAttempts;", "modifier": "", "type": "int", "declarator": "_allowedLoginAttempts", "var_name": "_allowedLoginAttempts"}, {"original_string": "UserVO _systemUser;", "modifier": "", "type": "UserVO", "declarator": "_systemUser", "var_name": "_systemUser"}, {"original_string": "AccountVO _systemAccount;", "modifier": "", "type": "AccountVO", "declarator": "_systemAccount", "var_name": "_systemAccount"}, {"original_string": "List<SecurityChecker> _securityCheckers;", "modifier": "", "type": "List<SecurityChecker>", "declarator": "_securityCheckers", "var_name": "_securityCheckers"}, {"original_string": "int _cleanupInterval;", "modifier": "", "type": "int", "declarator": "_cleanupInterval", "var_name": "_cleanupInterval"}], "methods": [{"identifier": "getUserAuthenticators", "parameters": "()", "modifiers": "public", "return": "List<UserAuthenticator>", "signature": "List<UserAuthenticator> getUserAuthenticators()", "full_signature": "public List<UserAuthenticator> getUserAuthenticators()", "class_method_signature": "AccountManagerImpl.getUserAuthenticators()", "testcase": false, "constructor": false}, {"identifier": "setUserAuthenticators", "parameters": "(final List<UserAuthenticator> authenticators)", "modifiers": "public", "return": "void", "signature": "void setUserAuthenticators(final List<UserAuthenticator> authenticators)", "full_signature": "public void setUserAuthenticators(final List<UserAuthenticator> authenticators)", "class_method_signature": "AccountManagerImpl.setUserAuthenticators(final List<UserAuthenticator> authenticators)", "testcase": false, "constructor": false}, {"identifier": "getUserPasswordEncoders", "parameters": "()", "modifiers": "public", "return": "List<UserAuthenticator>", "signature": "List<UserAuthenticator> getUserPasswordEncoders()", "full_signature": "public List<UserAuthenticator> getUserPasswordEncoders()", "class_method_signature": "AccountManagerImpl.getUserPasswordEncoders()", "testcase": false, "constructor": false}, {"identifier": "setUserPasswordEncoders", "parameters": "(final List<UserAuthenticator> encoders)", "modifiers": "public", "return": "void", "signature": "void setUserPasswordEncoders(final List<UserAuthenticator> encoders)", "full_signature": "public void setUserPasswordEncoders(final List<UserAuthenticator> encoders)", "class_method_signature": "AccountManagerImpl.setUserPasswordEncoders(final List<UserAuthenticator> encoders)", "testcase": false, "constructor": false}, {"identifier": "getSecurityCheckers", "parameters": "()", "modifiers": "public", "return": "List<SecurityChecker>", "signature": "List<SecurityChecker> getSecurityCheckers()", "full_signature": "public List<SecurityChecker> getSecurityCheckers()", "class_method_signature": "AccountManagerImpl.getSecurityCheckers()", "testcase": false, "constructor": false}, {"identifier": "setSecurityCheckers", "parameters": "(final List<SecurityChecker> securityCheckers)", "modifiers": "public", "return": "void", "signature": "void setSecurityCheckers(final List<SecurityChecker> securityCheckers)", "full_signature": "public void setSecurityCheckers(final List<SecurityChecker> securityCheckers)", "class_method_signature": "AccountManagerImpl.setSecurityCheckers(final List<SecurityChecker> securityCheckers)", "testcase": false, "constructor": false}, {"identifier": "getQuerySelectors", "parameters": "()", "modifiers": "public", "return": "List<QuerySelector>", "signature": "List<QuerySelector> getQuerySelectors()", "full_signature": "public List<QuerySelector> getQuerySelectors()", "class_method_signature": "AccountManagerImpl.getQuerySelectors()", "testcase": false, "constructor": false}, {"identifier": "setQuerySelectors", "parameters": "(final List<QuerySelector> querySelectors)", "modifiers": "public", "return": "void", "signature": "void setQuerySelectors(final List<QuerySelector> querySelectors)", "full_signature": "public void setQuerySelectors(final List<QuerySelector> querySelectors)", "class_method_signature": "AccountManagerImpl.setQuerySelectors(final List<QuerySelector> querySelectors)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(final String name, final Map<String, Object> params)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean configure(final String name, final Map<String, Object> params)", "full_signature": "@Override public boolean configure(final String name, final Map<String, Object> params)", "class_method_signature": "AccountManagerImpl.configure(final String name, final Map<String, Object> params)", "testcase": false, "constructor": false}, {"identifier": "getSystemUser", "parameters": "()", "modifiers": "@Override public", "return": "UserVO", "signature": "UserVO getSystemUser()", "full_signature": "@Override public UserVO getSystemUser()", "class_method_signature": "AccountManagerImpl.getSystemUser()", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean start()", "full_signature": "@Override public boolean start()", "class_method_signature": "AccountManagerImpl.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean stop()", "full_signature": "@Override public boolean stop()", "class_method_signature": "AccountManagerImpl.stop()", "testcase": false, "constructor": false}, {"identifier": "getSystemAccount", "parameters": "()", "modifiers": "@Override public", "return": "AccountVO", "signature": "AccountVO getSystemAccount()", "full_signature": "@Override public AccountVO getSystemAccount()", "class_method_signature": "AccountManagerImpl.getSystemAccount()", "testcase": false, "constructor": false}, {"identifier": "isAdmin", "parameters": "(final Long accountId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAdmin(final Long accountId)", "full_signature": "@Override public boolean isAdmin(final Long accountId)", "class_method_signature": "AccountManagerImpl.isAdmin(final Long accountId)", "testcase": false, "constructor": false}, {"identifier": "isRootAdmin", "parameters": "(final Long accountId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRootAdmin(final Long accountId)", "full_signature": "@Override public boolean isRootAdmin(final Long accountId)", "class_method_signature": "AccountManagerImpl.isRootAdmin(final Long accountId)", "testcase": false, "constructor": false}, {"identifier": "isDomainAdmin", "parameters": "(final Long accountId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDomainAdmin(final Long accountId)", "full_signature": "@Override public boolean isDomainAdmin(final Long accountId)", "class_method_signature": "AccountManagerImpl.isDomainAdmin(final Long accountId)", "testcase": false, "constructor": false}, {"identifier": "isNormalUser", "parameters": "(final long accountId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isNormalUser(final long accountId)", "full_signature": "@Override public boolean isNormalUser(final long accountId)", "class_method_signature": "AccountManagerImpl.isNormalUser(final long accountId)", "testcase": false, "constructor": false}, {"identifier": "isResourceDomainAdmin", "parameters": "(final Long accountId)", "modifiers": "public", "return": "boolean", "signature": "boolean isResourceDomainAdmin(final Long accountId)", "full_signature": "public boolean isResourceDomainAdmin(final Long accountId)", "class_method_signature": "AccountManagerImpl.isResourceDomainAdmin(final Long accountId)", "testcase": false, "constructor": false}, {"identifier": "isInternalAccount", "parameters": "(final long accountId)", "modifiers": "public", "return": "boolean", "signature": "boolean isInternalAccount(final long accountId)", "full_signature": "public boolean isInternalAccount(final long accountId)", "class_method_signature": "AccountManagerImpl.isInternalAccount(final long accountId)", "testcase": false, "constructor": false}, {"identifier": "checkAccess", "parameters": "(final Account caller, final Domain domain)", "modifiers": "@Override public", "return": "void", "signature": "void checkAccess(final Account caller, final Domain domain)", "full_signature": "@Override public void checkAccess(final Account caller, final Domain domain)", "class_method_signature": "AccountManagerImpl.checkAccess(final Account caller, final Domain domain)", "testcase": false, "constructor": false}, {"identifier": "checkAccess", "parameters": "(final Account caller, final AccessType accessType, final boolean sameOwner, final ControlledEntity... entities)", "modifiers": "@Override public", "return": "void", "signature": "void checkAccess(final Account caller, final AccessType accessType, final boolean sameOwner, final ControlledEntity... entities)", "full_signature": "@Override public void checkAccess(final Account caller, final AccessType accessType, final boolean sameOwner, final ControlledEntity... entities)", "class_method_signature": "AccountManagerImpl.checkAccess(final Account caller, final AccessType accessType, final boolean sameOwner, final ControlledEntity... entities)", "testcase": false, "constructor": false}, {"identifier": "checkAccess", "parameters": "(final Account caller, final AccessType accessType, final boolean sameOwner, final String apiName, final ControlledEntity... entities)", "modifiers": "@Override public", "return": "void", "signature": "void checkAccess(final Account caller, final AccessType accessType, final boolean sameOwner, final String apiName, final ControlledEntity... entities)", "full_signature": "@Override public void checkAccess(final Account caller, final AccessType accessType, final boolean sameOwner, final String apiName, final ControlledEntity... entities)", "class_method_signature": "AccountManagerImpl.checkAccess(final Account caller, final AccessType accessType, final boolean sameOwner, final String apiName, final ControlledEntity... entities)", "testcase": false, "constructor": false}, {"identifier": "checkAccessAndSpecifyAuthority", "parameters": "(final Account caller, final Long zoneId)", "modifiers": "@Override public", "return": "Long", "signature": "Long checkAccessAndSpecifyAuthority(final Account caller, final Long zoneId)", "full_signature": "@Override public Long checkAccessAndSpecifyAuthority(final Account caller, final Long zoneId)", "class_method_signature": "AccountManagerImpl.checkAccessAndSpecifyAuthority(final Account caller, final Long zoneId)", "testcase": false, "constructor": false}, {"identifier": "getZoneIdForAccount", "parameters": "(final Account account)", "modifiers": "private", "return": "Long", "signature": "Long getZoneIdForAccount(final Account account)", "full_signature": "private Long getZoneIdForAccount(final Account account)", "class_method_signature": "AccountManagerImpl.getZoneIdForAccount(final Account account)", "testcase": false, "constructor": false}, {"identifier": "updateLoginAttempts", "parameters": "(final Long id, final int attempts, final boolean toDisable)", "modifiers": "@DB public", "return": "void", "signature": "void updateLoginAttempts(final Long id, final int attempts, final boolean toDisable)", "full_signature": "@DB public void updateLoginAttempts(final Long id, final int attempts, final boolean toDisable)", "class_method_signature": "AccountManagerImpl.updateLoginAttempts(final Long id, final int attempts, final boolean toDisable)", "testcase": false, "constructor": false}, {"identifier": "doSetUserStatus", "parameters": "(final long userId, final State state)", "modifiers": "private", "return": "boolean", "signature": "boolean doSetUserStatus(final long userId, final State state)", "full_signature": "private boolean doSetUserStatus(final long userId, final State state)", "class_method_signature": "AccountManagerImpl.doSetUserStatus(final long userId, final State state)", "testcase": false, "constructor": false}, {"identifier": "enableAccount", "parameters": "(final long accountId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean enableAccount(final long accountId)", "full_signature": "@Override public boolean enableAccount(final long accountId)", "class_method_signature": "AccountManagerImpl.enableAccount(final long accountId)", "testcase": false, "constructor": false}, {"identifier": "lockAccount", "parameters": "(final long accountId)", "modifiers": "protected", "return": "boolean", "signature": "boolean lockAccount(final long accountId)", "full_signature": "protected boolean lockAccount(final long accountId)", "class_method_signature": "AccountManagerImpl.lockAccount(final long accountId)", "testcase": false, "constructor": false}, {"identifier": "deleteAccount", "parameters": "(final AccountVO account, final long callerUserId, final Account caller)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean deleteAccount(final AccountVO account, final long callerUserId, final Account caller)", "full_signature": "@Override public boolean deleteAccount(final AccountVO account, final long callerUserId, final Account caller)", "class_method_signature": "AccountManagerImpl.deleteAccount(final AccountVO account, final long callerUserId, final Account caller)", "testcase": false, "constructor": false}, {"identifier": "cleanupAccount", "parameters": "(final AccountVO account, final long callerUserId, final Account caller)", "modifiers": "protected", "return": "boolean", "signature": "boolean cleanupAccount(final AccountVO account, final long callerUserId, final Account caller)", "full_signature": "protected boolean cleanupAccount(final AccountVO account, final long callerUserId, final Account caller)", "class_method_signature": "AccountManagerImpl.cleanupAccount(final AccountVO account, final long callerUserId, final Account caller)", "testcase": false, "constructor": false}, {"identifier": "disableAccount", "parameters": "(final long accountId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean disableAccount(final long accountId)", "full_signature": "@Override public boolean disableAccount(final long accountId)", "class_method_signature": "AccountManagerImpl.disableAccount(final long accountId)", "testcase": false, "constructor": false}, {"identifier": "doDisableAccount", "parameters": "(final long accountId)", "modifiers": "private", "return": "boolean", "signature": "boolean doDisableAccount(final long accountId)", "full_signature": "private boolean doDisableAccount(final long accountId)", "class_method_signature": "AccountManagerImpl.doDisableAccount(final long accountId)", "testcase": false, "constructor": false}, {"identifier": "createUserAccount", "parameters": "(final String userName, final String password, final String firstName, final String lastName, final String email, final String timezone,\n                                         final String accountName, final short accountType, final Long domainId, final String networkDomain, final Map<String, String> details, final String accountUUID, final String userUUID)", "modifiers": "@Override @ActionEvents({ @ActionEvent(eventType = EventTypes.EVENT_ACCOUNT_CREATE, eventDescription = \"creating Account\"), @ActionEvent(eventType = EventTypes.EVENT_USER_CREATE, eventDescription = \"creating User\") }) public", "return": "UserAccount", "signature": "UserAccount createUserAccount(final String userName, final String password, final String firstName, final String lastName, final String email, final String timezone,\n                                         final String accountName, final short accountType, final Long domainId, final String networkDomain, final Map<String, String> details, final String accountUUID, final String userUUID)", "full_signature": "@Override @ActionEvents({ @ActionEvent(eventType = EventTypes.EVENT_ACCOUNT_CREATE, eventDescription = \"creating Account\"), @ActionEvent(eventType = EventTypes.EVENT_USER_CREATE, eventDescription = \"creating User\") }) public UserAccount createUserAccount(final String userName, final String password, final String firstName, final String lastName, final String email, final String timezone,\n                                         final String accountName, final short accountType, final Long domainId, final String networkDomain, final Map<String, String> details, final String accountUUID, final String userUUID)", "class_method_signature": "AccountManagerImpl.createUserAccount(final String userName, final String password, final String firstName, final String lastName, final String email, final String timezone,\n                                         final String accountName, final short accountType, final Long domainId, final String networkDomain, final Map<String, String> details, final String accountUUID, final String userUUID)", "testcase": false, "constructor": false}, {"identifier": "createUserAccount", "parameters": "(final String userName, final String password, final String firstName, final String lastName, final String email,\n                                         final String timezone, String accountName, final short accountType, Long domainId, final String networkDomain, final Map<String, String> details,\n                                         final String accountUUID, final String userUUID, final User.Source source)", "modifiers": "@Override @DB @ActionEvents({ @ActionEvent(eventType = EventTypes.EVENT_ACCOUNT_CREATE, eventDescription = \"creating Account\"), @ActionEvent(eventType = EventTypes.EVENT_USER_CREATE, eventDescription = \"creating User\") }) public", "return": "UserAccount", "signature": "UserAccount createUserAccount(final String userName, final String password, final String firstName, final String lastName, final String email,\n                                         final String timezone, String accountName, final short accountType, Long domainId, final String networkDomain, final Map<String, String> details,\n                                         final String accountUUID, final String userUUID, final User.Source source)", "full_signature": "@Override @DB @ActionEvents({ @ActionEvent(eventType = EventTypes.EVENT_ACCOUNT_CREATE, eventDescription = \"creating Account\"), @ActionEvent(eventType = EventTypes.EVENT_USER_CREATE, eventDescription = \"creating User\") }) public UserAccount createUserAccount(final String userName, final String password, final String firstName, final String lastName, final String email,\n                                         final String timezone, String accountName, final short accountType, Long domainId, final String networkDomain, final Map<String, String> details,\n                                         final String accountUUID, final String userUUID, final User.Source source)", "class_method_signature": "AccountManagerImpl.createUserAccount(final String userName, final String password, final String firstName, final String lastName, final String email,\n                                         final String timezone, String accountName, final short accountType, Long domainId, final String networkDomain, final Map<String, String> details,\n                                         final String accountUUID, final String userUUID, final User.Source source)", "testcase": false, "constructor": false}, {"identifier": "createUser", "parameters": "(final String userName, final String password, final String firstName, final String lastName, final String email, final String timeZone, final String accountName, Long domainId,\n                             final String userUUID, final User.Source source)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_USER_CREATE, eventDescription = \"creating User\") public", "return": "UserVO", "signature": "UserVO createUser(final String userName, final String password, final String firstName, final String lastName, final String email, final String timeZone, final String accountName, Long domainId,\n                             final String userUUID, final User.Source source)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_USER_CREATE, eventDescription = \"creating User\") public UserVO createUser(final String userName, final String password, final String firstName, final String lastName, final String email, final String timeZone, final String accountName, Long domainId,\n                             final String userUUID, final User.Source source)", "class_method_signature": "AccountManagerImpl.createUser(final String userName, final String password, final String firstName, final String lastName, final String email, final String timeZone, final String accountName, Long domainId,\n                             final String userUUID, final User.Source source)", "testcase": false, "constructor": false}, {"identifier": "createUser", "parameters": "(final String userName, final String password, final String firstName, final String lastName, final String email, final String timeZone, final String accountName, final Long domainId,\n                             final String userUUID)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_USER_CREATE, eventDescription = \"creating User\") public", "return": "UserVO", "signature": "UserVO createUser(final String userName, final String password, final String firstName, final String lastName, final String email, final String timeZone, final String accountName, final Long domainId,\n                             final String userUUID)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_USER_CREATE, eventDescription = \"creating User\") public UserVO createUser(final String userName, final String password, final String firstName, final String lastName, final String email, final String timeZone, final String accountName, final Long domainId,\n                             final String userUUID)", "class_method_signature": "AccountManagerImpl.createUser(final String userName, final String password, final String firstName, final String lastName, final String email, final String timeZone, final String accountName, final Long domainId,\n                             final String userUUID)", "testcase": false, "constructor": false}, {"identifier": "updateUser", "parameters": "(final Long userId, final String firstName, final String lastName, final String email, final String userName, final String password, final String apiKey, final String secretKey, final String timeZone)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_USER_UPDATE, eventDescription = \"updating User\") public", "return": "UserAccount", "signature": "UserAccount updateUser(final Long userId, final String firstName, final String lastName, final String email, final String userName, final String password, final String apiKey, final String secretKey, final String timeZone)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_USER_UPDATE, eventDescription = \"updating User\") public UserAccount updateUser(final Long userId, final String firstName, final String lastName, final String email, final String userName, final String password, final String apiKey, final String secretKey, final String timeZone)", "class_method_signature": "AccountManagerImpl.updateUser(final Long userId, final String firstName, final String lastName, final String email, final String userName, final String password, final String apiKey, final String secretKey, final String timeZone)", "testcase": false, "constructor": false}, {"identifier": "updateUser", "parameters": "(final UpdateUserCmd cmd)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_USER_UPDATE, eventDescription = \"updating User\") public", "return": "UserAccount", "signature": "UserAccount updateUser(final UpdateUserCmd cmd)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_USER_UPDATE, eventDescription = \"updating User\") public UserAccount updateUser(final UpdateUserCmd cmd)", "class_method_signature": "AccountManagerImpl.updateUser(final UpdateUserCmd cmd)", "testcase": false, "constructor": false}, {"identifier": "disableUser", "parameters": "(final long userId)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_USER_DISABLE, eventDescription = \"disabling User\", async = true) public", "return": "UserAccount", "signature": "UserAccount disableUser(final long userId)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_USER_DISABLE, eventDescription = \"disabling User\", async = true) public UserAccount disableUser(final long userId)", "class_method_signature": "AccountManagerImpl.disableUser(final long userId)", "testcase": false, "constructor": false}, {"identifier": "enableUser", "parameters": "(final long userId)", "modifiers": "@Override @DB @ActionEvent(eventType = EventTypes.EVENT_USER_ENABLE, eventDescription = \"enabling User\") public", "return": "UserAccount", "signature": "UserAccount enableUser(final long userId)", "full_signature": "@Override @DB @ActionEvent(eventType = EventTypes.EVENT_USER_ENABLE, eventDescription = \"enabling User\") public UserAccount enableUser(final long userId)", "class_method_signature": "AccountManagerImpl.enableUser(final long userId)", "testcase": false, "constructor": false}, {"identifier": "lockUser", "parameters": "(final long userId)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_USER_LOCK, eventDescription = \"locking User\") public", "return": "UserAccount", "signature": "UserAccount lockUser(final long userId)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_USER_LOCK, eventDescription = \"locking User\") public UserAccount lockUser(final long userId)", "class_method_signature": "AccountManagerImpl.lockUser(final long userId)", "testcase": false, "constructor": false}, {"identifier": "deleteUserAccount", "parameters": "(final long accountId)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_ACCOUNT_DELETE, eventDescription = \"deleting account\", async = true) // This method deletes the account public", "return": "boolean", "signature": "boolean deleteUserAccount(final long accountId)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_ACCOUNT_DELETE, eventDescription = \"deleting account\", async = true) // This method deletes the account public boolean deleteUserAccount(final long accountId)", "class_method_signature": "AccountManagerImpl.deleteUserAccount(final long accountId)", "testcase": false, "constructor": false}, {"identifier": "enableAccount", "parameters": "(final String accountName, final Long domainId, final Long accountId)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_ACCOUNT_ENABLE, eventDescription = \"enabling account\", async = true) public", "return": "AccountVO", "signature": "AccountVO enableAccount(final String accountName, final Long domainId, final Long accountId)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_ACCOUNT_ENABLE, eventDescription = \"enabling account\", async = true) public AccountVO enableAccount(final String accountName, final Long domainId, final Long accountId)", "class_method_signature": "AccountManagerImpl.enableAccount(final String accountName, final Long domainId, final Long accountId)", "testcase": false, "constructor": false}, {"identifier": "lockAccount", "parameters": "(final String accountName, final Long domainId, final Long accountId)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_ACCOUNT_DISABLE, eventDescription = \"locking account\", async = true) public", "return": "AccountVO", "signature": "AccountVO lockAccount(final String accountName, final Long domainId, final Long accountId)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_ACCOUNT_DISABLE, eventDescription = \"locking account\", async = true) public AccountVO lockAccount(final String accountName, final Long domainId, final Long accountId)", "class_method_signature": "AccountManagerImpl.lockAccount(final String accountName, final Long domainId, final Long accountId)", "testcase": false, "constructor": false}, {"identifier": "disableAccount", "parameters": "(final String accountName, final Long domainId, final Long accountId)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_ACCOUNT_DISABLE, eventDescription = \"disabling account\", async = true) public", "return": "AccountVO", "signature": "AccountVO disableAccount(final String accountName, final Long domainId, final Long accountId)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_ACCOUNT_DISABLE, eventDescription = \"disabling account\", async = true) public AccountVO disableAccount(final String accountName, final Long domainId, final Long accountId)", "class_method_signature": "AccountManagerImpl.disableAccount(final String accountName, final Long domainId, final Long accountId)", "testcase": false, "constructor": false}, {"identifier": "updateAccount", "parameters": "(final UpdateAccountCmd cmd)", "modifiers": "@Override @DB @ActionEvent(eventType = EventTypes.EVENT_ACCOUNT_UPDATE, eventDescription = \"updating account\", async = true) public", "return": "AccountVO", "signature": "AccountVO updateAccount(final UpdateAccountCmd cmd)", "full_signature": "@Override @DB @ActionEvent(eventType = EventTypes.EVENT_ACCOUNT_UPDATE, eventDescription = \"updating account\", async = true) public AccountVO updateAccount(final UpdateAccountCmd cmd)", "class_method_signature": "AccountManagerImpl.updateAccount(final UpdateAccountCmd cmd)", "testcase": false, "constructor": false}, {"identifier": "deleteUser", "parameters": "(final DeleteUserCmd deleteUserCmd)", "modifiers": "@Override @ActionEvent(eventType = EventTypes.EVENT_USER_DELETE, eventDescription = \"deleting User\") public", "return": "boolean", "signature": "boolean deleteUser(final DeleteUserCmd deleteUserCmd)", "full_signature": "@Override @ActionEvent(eventType = EventTypes.EVENT_USER_DELETE, eventDescription = \"deleting User\") public boolean deleteUser(final DeleteUserCmd deleteUserCmd)", "class_method_signature": "AccountManagerImpl.deleteUser(final DeleteUserCmd deleteUserCmd)", "testcase": false, "constructor": false}, {"identifier": "finalizeOwner", "parameters": "(final Account caller, final String accountName, final Long domainId, final Long projectId)", "modifiers": "@Override public", "return": "Account", "signature": "Account finalizeOwner(final Account caller, final String accountName, final Long domainId, final Long projectId)", "full_signature": "@Override public Account finalizeOwner(final Account caller, final String accountName, final Long domainId, final Long projectId)", "class_method_signature": "AccountManagerImpl.finalizeOwner(final Account caller, final String accountName, final Long domainId, final Long projectId)", "testcase": false, "constructor": false}, {"identifier": "getActiveAccountByName", "parameters": "(final String accountName, final Long domainId)", "modifiers": "@Override public", "return": "Account", "signature": "Account getActiveAccountByName(final String accountName, final Long domainId)", "full_signature": "@Override public Account getActiveAccountByName(final String accountName, final Long domainId)", "class_method_signature": "AccountManagerImpl.getActiveAccountByName(final String accountName, final Long domainId)", "testcase": false, "constructor": false}, {"identifier": "getActiveUserAccount", "parameters": "(final String username, final Long domainId)", "modifiers": "@Override public", "return": "UserAccount", "signature": "UserAccount getActiveUserAccount(final String username, final Long domainId)", "full_signature": "@Override public UserAccount getActiveUserAccount(final String username, final Long domainId)", "class_method_signature": "AccountManagerImpl.getActiveUserAccount(final String username, final Long domainId)", "testcase": false, "constructor": false}, {"identifier": "getActiveAccountById", "parameters": "(final long accountId)", "modifiers": "@Override public", "return": "Account", "signature": "Account getActiveAccountById(final long accountId)", "full_signature": "@Override public Account getActiveAccountById(final long accountId)", "class_method_signature": "AccountManagerImpl.getActiveAccountById(final long accountId)", "testcase": false, "constructor": false}, {"identifier": "getAccount", "parameters": "(final long accountId)", "modifiers": "@Override public", "return": "Account", "signature": "Account getAccount(final long accountId)", "full_signature": "@Override public Account getAccount(final long accountId)", "class_method_signature": "AccountManagerImpl.getAccount(final long accountId)", "testcase": false, "constructor": false}, {"identifier": "getRoleType", "parameters": "(final Account account)", "modifiers": "@Override public", "return": "RoleType", "signature": "RoleType getRoleType(final Account account)", "full_signature": "@Override public RoleType getRoleType(final Account account)", "class_method_signature": "AccountManagerImpl.getRoleType(final Account account)", "testcase": false, "constructor": false}, {"identifier": "getActiveUser", "parameters": "(final long userId)", "modifiers": "@Override public", "return": "User", "signature": "User getActiveUser(final long userId)", "full_signature": "@Override public User getActiveUser(final long userId)", "class_method_signature": "AccountManagerImpl.getActiveUser(final long userId)", "testcase": false, "constructor": false}, {"identifier": "getUserIncludingRemoved", "parameters": "(final long userId)", "modifiers": "@Override public", "return": "User", "signature": "User getUserIncludingRemoved(final long userId)", "full_signature": "@Override public User getUserIncludingRemoved(final long userId)", "class_method_signature": "AccountManagerImpl.getUserIncludingRemoved(final long userId)", "testcase": false, "constructor": false}, {"identifier": "getActiveUserByRegistrationToken", "parameters": "(final String registrationToken)", "modifiers": "@Override public", "return": "User", "signature": "User getActiveUserByRegistrationToken(final String registrationToken)", "full_signature": "@Override public User getActiveUserByRegistrationToken(final String registrationToken)", "class_method_signature": "AccountManagerImpl.getActiveUserByRegistrationToken(final String registrationToken)", "testcase": false, "constructor": false}, {"identifier": "markUserRegistered", "parameters": "(final long userId)", "modifiers": "@Override public", "return": "void", "signature": "void markUserRegistered(final long userId)", "full_signature": "@Override public void markUserRegistered(final long userId)", "class_method_signature": "AccountManagerImpl.markUserRegistered(final long userId)", "testcase": false, "constructor": false}, {"identifier": "createAccount", "parameters": "(final String accountName, final short accountType, final Long domainId, final String networkDomain, final Map<String, String> details,\n                                   final String uuid)", "modifiers": "@Override @DB public", "return": "AccountVO", "signature": "AccountVO createAccount(final String accountName, final short accountType, final Long domainId, final String networkDomain, final Map<String, String> details,\n                                   final String uuid)", "full_signature": "@Override @DB public AccountVO createAccount(final String accountName, final short accountType, final Long domainId, final String networkDomain, final Map<String, String> details,\n                                   final String uuid)", "class_method_signature": "AccountManagerImpl.createAccount(final String accountName, final short accountType, final Long domainId, final String networkDomain, final Map<String, String> details,\n                                   final String uuid)", "testcase": false, "constructor": false}, {"identifier": "createUser", "parameters": "(final long accountId, final String userName, final String password, final String firstName, final String lastName, final String email, final String timezone, String userUUID,\n                                final User.Source source)", "modifiers": "protected", "return": "UserVO", "signature": "UserVO createUser(final long accountId, final String userName, final String password, final String firstName, final String lastName, final String email, final String timezone, String userUUID,\n                                final User.Source source)", "full_signature": "protected UserVO createUser(final long accountId, final String userName, final String password, final String firstName, final String lastName, final String email, final String timezone, String userUUID,\n                                final User.Source source)", "class_method_signature": "AccountManagerImpl.createUser(final long accountId, final String userName, final String password, final String firstName, final String lastName, final String email, final String timezone, String userUUID,\n                                final User.Source source)", "testcase": false, "constructor": false}, {"identifier": "logoutUser", "parameters": "(final long userId)", "modifiers": "@Override public", "return": "void", "signature": "void logoutUser(final long userId)", "full_signature": "@Override public void logoutUser(final long userId)", "class_method_signature": "AccountManagerImpl.logoutUser(final long userId)", "testcase": false, "constructor": false}, {"identifier": "authenticateUser", "parameters": "(final String username, final String password, final Long domainId, final InetAddress loginIpAddress, final Map<String, Object[]> requestParameters)", "modifiers": "@Override public", "return": "UserAccount", "signature": "UserAccount authenticateUser(final String username, final String password, final Long domainId, final InetAddress loginIpAddress, final Map<String, Object[]> requestParameters)", "full_signature": "@Override public UserAccount authenticateUser(final String username, final String password, final Long domainId, final InetAddress loginIpAddress, final Map<String, Object[]> requestParameters)", "class_method_signature": "AccountManagerImpl.authenticateUser(final String username, final String password, final Long domainId, final InetAddress loginIpAddress, final Map<String, Object[]> requestParameters)", "testcase": false, "constructor": false}, {"identifier": "getUserAccount", "parameters": "(final String username, final String password, final Long domainId, final Map<String, Object[]> requestParameters)", "modifiers": "private", "return": "UserAccount", "signature": "UserAccount getUserAccount(final String username, final String password, final Long domainId, final Map<String, Object[]> requestParameters)", "full_signature": "private UserAccount getUserAccount(final String username, final String password, final Long domainId, final Map<String, Object[]> requestParameters)", "class_method_signature": "AccountManagerImpl.getUserAccount(final String username, final String password, final Long domainId, final Map<String, Object[]> requestParameters)", "testcase": false, "constructor": false}, {"identifier": "findUserByApiKey", "parameters": "(final String apiKey)", "modifiers": "@Override public", "return": "Pair<User, Account>", "signature": "Pair<User, Account> findUserByApiKey(final String apiKey)", "full_signature": "@Override public Pair<User, Account> findUserByApiKey(final String apiKey)", "class_method_signature": "AccountManagerImpl.findUserByApiKey(final String apiKey)", "testcase": false, "constructor": false}, {"identifier": "createApiKeyAndSecretKey", "parameters": "(final RegisterCmd cmd)", "modifiers": "@Override @DB @ActionEvent(eventType = EventTypes.EVENT_REGISTER_FOR_SECRET_API_KEY, eventDescription = \"register for the developer API keys\") public", "return": "String[]", "signature": "String[] createApiKeyAndSecretKey(final RegisterCmd cmd)", "full_signature": "@Override @DB @ActionEvent(eventType = EventTypes.EVENT_REGISTER_FOR_SECRET_API_KEY, eventDescription = \"register for the developer API keys\") public String[] createApiKeyAndSecretKey(final RegisterCmd cmd)", "class_method_signature": "AccountManagerImpl.createApiKeyAndSecretKey(final RegisterCmd cmd)", "testcase": false, "constructor": false}, {"identifier": "createApiKeyAndSecretKey", "parameters": "(final long userId)", "modifiers": "@Override @DB @ActionEvent(eventType = EventTypes.EVENT_REGISTER_FOR_SECRET_API_KEY, eventDescription = \"register for the developer API keys\") public", "return": "String[]", "signature": "String[] createApiKeyAndSecretKey(final long userId)", "full_signature": "@Override @DB @ActionEvent(eventType = EventTypes.EVENT_REGISTER_FOR_SECRET_API_KEY, eventDescription = \"register for the developer API keys\") public String[] createApiKeyAndSecretKey(final long userId)", "class_method_signature": "AccountManagerImpl.createApiKeyAndSecretKey(final long userId)", "testcase": false, "constructor": false}, {"identifier": "createUserApiKey", "parameters": "(final long userId)", "modifiers": "private", "return": "String", "signature": "String createUserApiKey(final long userId)", "full_signature": "private String createUserApiKey(final long userId)", "class_method_signature": "AccountManagerImpl.createUserApiKey(final long userId)", "testcase": false, "constructor": false}, {"identifier": "createUserSecretKey", "parameters": "(final long userId)", "modifiers": "private", "return": "String", "signature": "String createUserSecretKey(final long userId)", "full_signature": "private String createUserSecretKey(final long userId)", "class_method_signature": "AccountManagerImpl.createUserSecretKey(final long userId)", "testcase": false, "constructor": false}, {"identifier": "buildACLSearchBuilder", "parameters": "(final SearchBuilder<? extends ControlledEntity> sb,\n                                      final Long domainId, final boolean isRecursive, final List<Long> permittedAccounts, final ListProjectResourcesCriteria listProjectResourcesCriteria)", "modifiers": "@Override public", "return": "void", "signature": "void buildACLSearchBuilder(final SearchBuilder<? extends ControlledEntity> sb,\n                                      final Long domainId, final boolean isRecursive, final List<Long> permittedAccounts, final ListProjectResourcesCriteria listProjectResourcesCriteria)", "full_signature": "@Override public void buildACLSearchBuilder(final SearchBuilder<? extends ControlledEntity> sb,\n                                      final Long domainId, final boolean isRecursive, final List<Long> permittedAccounts, final ListProjectResourcesCriteria listProjectResourcesCriteria)", "class_method_signature": "AccountManagerImpl.buildACLSearchBuilder(final SearchBuilder<? extends ControlledEntity> sb,\n                                      final Long domainId, final boolean isRecursive, final List<Long> permittedAccounts, final ListProjectResourcesCriteria listProjectResourcesCriteria)", "testcase": false, "constructor": false}, {"identifier": "buildACLSearchCriteria", "parameters": "(final SearchCriteria<? extends ControlledEntity> sc,\n                                       final Long domainId, final boolean isRecursive, final List<Long> permittedAccounts, final ListProjectResourcesCriteria listProjectResourcesCriteria)", "modifiers": "@Override public", "return": "void", "signature": "void buildACLSearchCriteria(final SearchCriteria<? extends ControlledEntity> sc,\n                                       final Long domainId, final boolean isRecursive, final List<Long> permittedAccounts, final ListProjectResourcesCriteria listProjectResourcesCriteria)", "full_signature": "@Override public void buildACLSearchCriteria(final SearchCriteria<? extends ControlledEntity> sc,\n                                       final Long domainId, final boolean isRecursive, final List<Long> permittedAccounts, final ListProjectResourcesCriteria listProjectResourcesCriteria)", "class_method_signature": "AccountManagerImpl.buildACLSearchCriteria(final SearchCriteria<? extends ControlledEntity> sc,\n                                       final Long domainId, final boolean isRecursive, final List<Long> permittedAccounts, final ListProjectResourcesCriteria listProjectResourcesCriteria)", "testcase": false, "constructor": false}, {"identifier": "buildACLSearchParameters", "parameters": "(final Account caller, final Long id, final String accountName, final Long projectId, final List<Long> permittedAccounts,\n                                         final Ternary<Long, Boolean, ListProjectResourcesCriteria> domainIdRecursiveListProject, final boolean listAll, final boolean forProjectInvitation)", "modifiers": "@Override public", "return": "void", "signature": "void buildACLSearchParameters(final Account caller, final Long id, final String accountName, final Long projectId, final List<Long> permittedAccounts,\n                                         final Ternary<Long, Boolean, ListProjectResourcesCriteria> domainIdRecursiveListProject, final boolean listAll, final boolean forProjectInvitation)", "full_signature": "@Override public void buildACLSearchParameters(final Account caller, final Long id, final String accountName, final Long projectId, final List<Long> permittedAccounts,\n                                         final Ternary<Long, Boolean, ListProjectResourcesCriteria> domainIdRecursiveListProject, final boolean listAll, final boolean forProjectInvitation)", "class_method_signature": "AccountManagerImpl.buildACLSearchParameters(final Account caller, final Long id, final String accountName, final Long projectId, final List<Long> permittedAccounts,\n                                         final Ternary<Long, Boolean, ListProjectResourcesCriteria> domainIdRecursiveListProject, final boolean listAll, final boolean forProjectInvitation)", "testcase": false, "constructor": false}, {"identifier": "buildACLViewSearchBuilder", "parameters": "(final SearchBuilder<? extends ControlledViewEntity> sb, final Long domainId,\n                                          final boolean isRecursive, final List<Long> permittedAccounts, final ListProjectResourcesCriteria listProjectResourcesCriteria)", "modifiers": "@Override public", "return": "void", "signature": "void buildACLViewSearchBuilder(final SearchBuilder<? extends ControlledViewEntity> sb, final Long domainId,\n                                          final boolean isRecursive, final List<Long> permittedAccounts, final ListProjectResourcesCriteria listProjectResourcesCriteria)", "full_signature": "@Override public void buildACLViewSearchBuilder(final SearchBuilder<? extends ControlledViewEntity> sb, final Long domainId,\n                                          final boolean isRecursive, final List<Long> permittedAccounts, final ListProjectResourcesCriteria listProjectResourcesCriteria)", "class_method_signature": "AccountManagerImpl.buildACLViewSearchBuilder(final SearchBuilder<? extends ControlledViewEntity> sb, final Long domainId,\n                                          final boolean isRecursive, final List<Long> permittedAccounts, final ListProjectResourcesCriteria listProjectResourcesCriteria)", "testcase": false, "constructor": false}, {"identifier": "buildACLViewSearchCriteria", "parameters": "(final SearchCriteria<? extends ControlledViewEntity> sc,\n                                           final Long domainId, final boolean isRecursive, final List<Long> permittedAccounts, final ListProjectResourcesCriteria listProjectResourcesCriteria)", "modifiers": "@Override public", "return": "void", "signature": "void buildACLViewSearchCriteria(final SearchCriteria<? extends ControlledViewEntity> sc,\n                                           final Long domainId, final boolean isRecursive, final List<Long> permittedAccounts, final ListProjectResourcesCriteria listProjectResourcesCriteria)", "full_signature": "@Override public void buildACLViewSearchCriteria(final SearchCriteria<? extends ControlledViewEntity> sc,\n                                           final Long domainId, final boolean isRecursive, final List<Long> permittedAccounts, final ListProjectResourcesCriteria listProjectResourcesCriteria)", "class_method_signature": "AccountManagerImpl.buildACLViewSearchCriteria(final SearchCriteria<? extends ControlledViewEntity> sc,\n                                           final Long domainId, final boolean isRecursive, final List<Long> permittedAccounts, final ListProjectResourcesCriteria listProjectResourcesCriteria)", "testcase": false, "constructor": false}, {"identifier": "getUserByApiKey", "parameters": "(final String apiKey)", "modifiers": "@Override public", "return": "UserAccount", "signature": "UserAccount getUserByApiKey(final String apiKey)", "full_signature": "@Override public UserAccount getUserByApiKey(final String apiKey)", "class_method_signature": "AccountManagerImpl.getUserByApiKey(final String apiKey)", "testcase": false, "constructor": false}, {"identifier": "listAclGroupsByAccount", "parameters": "(final Long accountId)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listAclGroupsByAccount(final Long accountId)", "full_signature": "@Override public List<String> listAclGroupsByAccount(final Long accountId)", "class_method_signature": "AccountManagerImpl.listAclGroupsByAccount(final Long accountId)", "testcase": false, "constructor": false}, {"identifier": "finalyzeAccountId", "parameters": "(final String accountName, final Long domainId, final Long projectId, final boolean enabledOnly)", "modifiers": "@Override public", "return": "Long", "signature": "Long finalyzeAccountId(final String accountName, final Long domainId, final Long projectId, final boolean enabledOnly)", "full_signature": "@Override public Long finalyzeAccountId(final String accountName, final Long domainId, final Long projectId, final boolean enabledOnly)", "class_method_signature": "AccountManagerImpl.finalyzeAccountId(final String accountName, final Long domainId, final Long projectId, final boolean enabledOnly)", "testcase": false, "constructor": false}, {"identifier": "getUserAccountById", "parameters": "(final Long userId)", "modifiers": "@Override public", "return": "UserAccount", "signature": "UserAccount getUserAccountById(final Long userId)", "full_signature": "@Override public UserAccount getUserAccountById(final Long userId)", "class_method_signature": "AccountManagerImpl.getUserAccountById(final Long userId)", "testcase": false, "constructor": false}, {"identifier": "checkAccess", "parameters": "(final Account account, final ServiceOffering so)", "modifiers": "@Override public", "return": "void", "signature": "void checkAccess(final Account account, final ServiceOffering so)", "full_signature": "@Override public void checkAccess(final Account account, final ServiceOffering so)", "class_method_signature": "AccountManagerImpl.checkAccess(final Account account, final ServiceOffering so)", "testcase": false, "constructor": false}, {"identifier": "checkAccess", "parameters": "(final Account account, final DiskOffering dof)", "modifiers": "@Override public", "return": "void", "signature": "void checkAccess(final Account account, final DiskOffering dof)", "full_signature": "@Override public void checkAccess(final Account account, final DiskOffering dof)", "class_method_signature": "AccountManagerImpl.checkAccess(final Account account, final DiskOffering dof)", "testcase": false, "constructor": false}], "file": "server/src/main/java/com/cloud/user/AccountManagerImpl.java"}, "focal_method": {"identifier": "disableAccount", "parameters": "(final long accountId)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean disableAccount(final long accountId) throws ConcurrentOperationException, ResourceUnavailableException {\n        boolean success = false;\n        if (accountId <= 2) {\n            if (s_logger.isInfoEnabled()) {\n                s_logger.info(\"disableAccount -- invalid account id: \" + accountId);\n            }\n            return false;\n        }\n\n        final AccountVO account = _accountDao.findById(accountId);\n        if ((account == null) || (account.getState().equals(State.disabled) && !account.getNeedsCleanup())) {\n            success = true;\n        } else {\n            AccountVO acctForUpdate = _accountDao.createForUpdate();\n            acctForUpdate.setState(State.disabled);\n            success = _accountDao.update(Long.valueOf(accountId), acctForUpdate);\n\n            if (success) {\n                boolean disableAccountResult = false;\n                try {\n                    disableAccountResult = doDisableAccount(accountId);\n                } finally {\n                    if (!disableAccountResult) {\n                        s_logger.warn(\"Failed to disable account \" + account + \" resources as a part of disableAccount call, marking the account for cleanup\");\n                        _accountDao.markForCleanup(accountId);\n                    } else {\n                        acctForUpdate = _accountDao.createForUpdate();\n                        account.setNeedsCleanup(false);\n                        _accountDao.update(accountId, account);\n                    }\n                }\n            }\n        }\n        return success;\n    }", "signature": "boolean disableAccount(final long accountId)", "full_signature": "@Override public boolean disableAccount(final long accountId)", "class_method_signature": "AccountManagerImpl.disableAccount(final long accountId)", "testcase": false, "constructor": false, "invocations": ["isInfoEnabled", "info", "findById", "equals", "getState", "getNeedsCleanup", "createForUpdate", "setState", "update", "valueOf", "doDisableAccount", "warn", "markForCleanup", "createForUpdate", "setNeedsCleanup", "update"]}, "repository": {"repo_id": 49943894, "url": "https://github.com/MissionCriticalCloudOldRepos/cosmic-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 18165, "license": "licensed"}}