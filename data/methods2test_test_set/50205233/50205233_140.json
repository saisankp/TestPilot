{"test_class": {"identifier": "HexConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "debezium-core/src/test/java/io/debezium/util/HexConverterTest.java"}, "test_case": {"identifier": "shouldRejectNonHexCharacter", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void shouldRejectNonHexCharacter() {\n        HexConverter.convertFromHex(\"GG\");\n    }", "signature": "void shouldRejectNonHexCharacter()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void shouldRejectNonHexCharacter()", "class_method_signature": "HexConverterTest.shouldRejectNonHexCharacter()", "testcase": true, "constructor": false, "invocations": ["convertFromHex"]}, "focal_class": {"identifier": "HexConverter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final char[] HEX_CHARS = new char[]{ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };", "modifier": "private static final", "type": "char[]", "declarator": "HEX_CHARS = new char[]{ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' }", "var_name": "HEX_CHARS"}, {"original_string": "private static final byte[] HEX_BYTES = new byte[]{ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };", "modifier": "private static final", "type": "byte[]", "declarator": "HEX_BYTES = new byte[]{ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' }", "var_name": "HEX_BYTES"}], "methods": [{"identifier": "convertToHexString", "parameters": "(byte[] toBeConverted)", "modifiers": "public static", "return": "String", "signature": "String convertToHexString(byte[] toBeConverted)", "full_signature": "public static String convertToHexString(byte[] toBeConverted)", "class_method_signature": "HexConverter.convertToHexString(byte[] toBeConverted)", "testcase": false, "constructor": false}, {"identifier": "convertToHexBytes", "parameters": "(byte[] toBeConverted)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] convertToHexBytes(byte[] toBeConverted)", "full_signature": "public static byte[] convertToHexBytes(byte[] toBeConverted)", "class_method_signature": "HexConverter.convertToHexBytes(byte[] toBeConverted)", "testcase": false, "constructor": false}, {"identifier": "convertFromHex", "parameters": "(final char[] toConvert)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] convertFromHex(final char[] toConvert)", "full_signature": "public static byte[] convertFromHex(final char[] toConvert)", "class_method_signature": "HexConverter.convertFromHex(final char[] toConvert)", "testcase": false, "constructor": false}, {"identifier": "toByte", "parameters": "(final char[] toConvert, final int pos)", "modifiers": "private static", "return": "byte", "signature": "byte toByte(final char[] toConvert, final int pos)", "full_signature": "private static byte toByte(final char[] toConvert, final int pos)", "class_method_signature": "HexConverter.toByte(final char[] toConvert, final int pos)", "testcase": false, "constructor": false}, {"identifier": "convertFromHex", "parameters": "(final String toConvert)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] convertFromHex(final String toConvert)", "full_signature": "public static byte[] convertFromHex(final String toConvert)", "class_method_signature": "HexConverter.convertFromHex(final String toConvert)", "testcase": false, "constructor": false}], "file": "debezium-core/src/main/java/io/debezium/util/HexConverter.java"}, "focal_method": {"identifier": "convertFromHex", "parameters": "(final char[] toConvert)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] convertFromHex(final char[] toConvert) {\n        if (toConvert.length % 2 != 0) {\n            throw new IllegalArgumentException(\"The supplied character array must contain an even number of hex chars.\");\n        }\n\n        byte[] response = new byte[toConvert.length / 2];\n\n        for (int i = 0; i < response.length; i++) {\n            int posOne = i * 2;\n            response[i] = (byte) (toByte(toConvert, posOne) << 4 | toByte(toConvert, posOne + 1));\n        }\n\n        return response;\n    }", "signature": "byte[] convertFromHex(final char[] toConvert)", "full_signature": "public static byte[] convertFromHex(final char[] toConvert)", "class_method_signature": "HexConverter.convertFromHex(final char[] toConvert)", "testcase": false, "constructor": false, "invocations": ["toByte", "toByte"]}, "repository": {"repo_id": 50205233, "url": "https://github.com/debezium/debezium", "stars": 2686, "created": "1/22/2016 8:17:05 PM +00:00", "updates": "2020-01-27T20:48:54+00:00", "fork": "False", "license": "licensed"}}