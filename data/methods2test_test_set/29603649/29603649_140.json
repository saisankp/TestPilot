{"test_class": {"identifier": "LoadInformationControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private JmxConnectionBuilder jmxConnectionBuilder;", "modifier": "@Mock\n    private", "type": "JmxConnectionBuilder", "declarator": "jmxConnectionBuilder", "var_name": "jmxConnectionBuilder"}, {"original_string": "@Mock\n    private JmxObjectNameProvider jmxObjectNameProvider;", "modifier": "@Mock\n    private", "type": "JmxObjectNameProvider", "declarator": "jmxObjectNameProvider", "var_name": "jmxObjectNameProvider"}, {"original_string": "@Mock\n    private MBeanServerConnection mBeanServerConnection;", "modifier": "@Mock\n    private", "type": "MBeanServerConnection", "declarator": "mBeanServerConnection", "var_name": "mBeanServerConnection"}, {"original_string": "@Mock\n    private ObjectName jmsQueue;", "modifier": "@Mock\n    private", "type": "ObjectName", "declarator": "jmsQueue", "var_name": "jmsQueue"}, {"original_string": "@InjectMocks\n    private LoadInformationController underTest;", "modifier": "@InjectMocks\n    private", "type": "LoadInformationController", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-message-search/modules/wilma-message-search-webapp/src/test/java/com/epam/wilma/message/search/web/controller/LoadInformationControllerTest.java"}, "test_case": {"identifier": "testGetLoadInformationShouldSendBackEmptyJSONWhenExceptionRaised", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetLoadInformationShouldSendBackEmptyJSONWhenExceptionRaised() throws Exception {\n        //GIVEN\n        given(jmxConnectionBuilder.buildMBeanServerConnection(LoadInformationController.JMS_SERVICE_URL)).willReturn(mBeanServerConnection);\n        given(jmxObjectNameProvider.getObjectName(LoadInformationController.JMS_QUEUE_OBJECT_NAME)).willReturn(jmsQueue);\n        given(mBeanServerConnection.getAttribute(jmsQueue, \"QueueSize\")).willThrow(AttributeNotFoundException.class);\n        //WHEN\n        Map<String, Long> result = underTest.getLoadInformation();\n        //THEN\n        assertEquals(0, result.size());\n    }", "signature": "void testGetLoadInformationShouldSendBackEmptyJSONWhenExceptionRaised()", "full_signature": "@Test public void testGetLoadInformationShouldSendBackEmptyJSONWhenExceptionRaised()", "class_method_signature": "LoadInformationControllerTest.testGetLoadInformationShouldSendBackEmptyJSONWhenExceptionRaised()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "buildMBeanServerConnection", "willReturn", "given", "getObjectName", "willThrow", "given", "getAttribute", "getLoadInformation", "assertEquals", "size"]}, "focal_class": {"identifier": "LoadInformationController", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final String JMS_SERVICE_URL = \"service:jmx:rmi:///jndi/rmi://localhost:2015/jmxrmi\";", "modifier": "static final", "type": "String", "declarator": "JMS_SERVICE_URL = \"service:jmx:rmi:///jndi/rmi://localhost:2015/jmxrmi\"", "var_name": "JMS_SERVICE_URL"}, {"original_string": "static final String JMS_QUEUE_OBJECT_NAME = \"org.apache.activemq:type=Broker,brokerName=localhost,destinationType=Queue,destinationName=queue\";", "modifier": "static final", "type": "String", "declarator": "JMS_QUEUE_OBJECT_NAME = \"org.apache.activemq:type=Broker,brokerName=localhost,destinationType=Queue,destinationName=queue\"", "var_name": "JMS_QUEUE_OBJECT_NAME"}, {"original_string": "private final Logger logger = LoggerFactory.getLogger(LoadInformationController.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(LoadInformationController.class)", "var_name": "logger"}, {"original_string": "@Autowired\n    private JmxConnectionBuilder jmxConnectionBuilder;", "modifier": "@Autowired\n    private", "type": "JmxConnectionBuilder", "declarator": "jmxConnectionBuilder", "var_name": "jmxConnectionBuilder"}, {"original_string": "@Autowired\n    private JmxObjectNameProvider jmxObjectNameProvider;", "modifier": "@Autowired\n    private", "type": "JmxObjectNameProvider", "declarator": "jmxObjectNameProvider", "var_name": "jmxObjectNameProvider"}, {"original_string": "private MBeanServerConnection jmsQueueConnection;", "modifier": "private", "type": "MBeanServerConnection", "declarator": "jmsQueueConnection", "var_name": "jmsQueueConnection"}, {"original_string": "private ObjectName jmsQueue;", "modifier": "private", "type": "ObjectName", "declarator": "jmsQueue", "var_name": "jmsQueue"}], "methods": [{"identifier": "getLoadInformation", "parameters": "()", "modifiers": "@ResponseBody @RequestMapping(value = \"/loadinformation\", method = RequestMethod.GET) public", "return": "Map<String, Long>", "signature": "Map<String, Long> getLoadInformation()", "full_signature": "@ResponseBody @RequestMapping(value = \"/loadinformation\", method = RequestMethod.GET) public Map<String, Long> getLoadInformation()", "class_method_signature": "LoadInformationController.getLoadInformation()", "testcase": false, "constructor": false}, {"identifier": "buildConnection", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void buildConnection()", "full_signature": "private void buildConnection()", "class_method_signature": "LoadInformationController.buildConnection()", "testcase": false, "constructor": false}], "file": "wilma-message-search/modules/wilma-message-search-webapp/src/main/java/com/epam/wilma/message/search/web/controller/LoadInformationController.java"}, "focal_method": {"identifier": "getLoadInformation", "parameters": "()", "modifiers": "@ResponseBody @RequestMapping(value = \"/loadinformation\", method = RequestMethod.GET) public", "return": "Map<String, Long>", "body": "@ResponseBody\n    @RequestMapping(value = \"/loadinformation\", method = RequestMethod.GET)\n    public Map<String, Long> getLoadInformation() {\n        Map<String, Long> loadInformation = new HashMap<>();\n        buildConnection();\n        try {\n            Long jmsQueueSize = (Long) jmsQueueConnection.getAttribute(jmsQueue, \"QueueSize\");\n            loadInformation.put(\"loadInformation\", jmsQueueSize);\n        } catch (Exception e) {\n            logger.error(\"Exception while monitoring queue sizes\", e);\n        }\n        return loadInformation;\n    }", "signature": "Map<String, Long> getLoadInformation()", "full_signature": "@ResponseBody @RequestMapping(value = \"/loadinformation\", method = RequestMethod.GET) public Map<String, Long> getLoadInformation()", "class_method_signature": "LoadInformationController.getLoadInformation()", "testcase": false, "constructor": false, "invocations": ["buildConnection", "getAttribute", "put", "error"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}