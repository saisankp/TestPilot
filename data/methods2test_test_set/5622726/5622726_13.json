{"test_class": {"identifier": "HtmlAndQueryStringCanonicalizerTest", "superclass": "", "interfaces": "", "fields": [], "file": "inputvalidation/src/test/java/com/switchfly/inputvalidation/canonicalizer/HtmlAndQueryStringCanonicalizerTest.java"}, "test_case": {"identifier": "testExecute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecute() throws Exception {\n        HtmlAndQueryStringCanonicalizer canonicalizer = new HtmlAndQueryStringCanonicalizer();\n\n        assertEquals(\"\\u00C1\", canonicalizer.execute(\"A\\u0301\"));\n        assertEquals(\"\\u00F6\", canonicalizer.execute(\"o\\u0308\"));\n        assertEquals(\"\\u00E1\", canonicalizer.execute(\"a\\u0301\"));\n        assertEquals(\" \", canonicalizer.execute(\" \"));\n        assertEquals(\"\", canonicalizer.execute(\"\"));\n        assertEquals(null, canonicalizer.execute(null));\n        assertEquals(\"<script\", canonicalizer.execute(\"\\u003Cscript\"));\n        assertEquals(\"<script\", canonicalizer.execute(\"&lt;script\"));\n        assertEquals(\"<script\", canonicalizer.execute(\"&#x3C;&#x73;&#x63;&#x72;&#x69;&#x70;&#x74;\"));\n        assertEquals(\"<script\", canonicalizer.execute(\"%3C%73%63%72%69%70%74\"));\n    }", "signature": "void testExecute()", "full_signature": "@Test public void testExecute()", "class_method_signature": "HtmlAndQueryStringCanonicalizerTest.testExecute()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute"]}, "focal_class": {"identifier": "HtmlAndQueryStringCanonicalizer", "superclass": "extends StringCanonicalizer", "interfaces": "", "fields": [], "methods": [{"identifier": "execute", "parameters": "(String content)", "modifiers": "@Override public", "return": "String", "signature": "String execute(String content)", "full_signature": "@Override public String execute(String content)", "class_method_signature": "HtmlAndQueryStringCanonicalizer.execute(String content)", "testcase": false, "constructor": false}], "file": "inputvalidation/src/main/java/com/switchfly/inputvalidation/canonicalizer/HtmlAndQueryStringCanonicalizer.java"}, "focal_method": {"identifier": "execute", "parameters": "(String content)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String execute(String content) {\n        if (StringUtils.isBlank(content)) {\n            return content;\n        }\n        String s = super.execute(content);\n        try {\n            s = StringEscapeUtils.unescapeHtml(s);\n        } catch (Exception e) {\n            throw new IllegalArgumentException(\"Canonicalization error\", e);\n        }\n        try {\n            s = URLDecoder.decode(s, \"UTF-8\");\n        } catch (Exception e) {\n            // ignore and move on\n        }\n        return s;\n    }", "signature": "String execute(String content)", "full_signature": "@Override public String execute(String content)", "class_method_signature": "HtmlAndQueryStringCanonicalizer.execute(String content)", "testcase": false, "constructor": false, "invocations": ["isBlank", "execute", "unescapeHtml", "decode"]}, "repository": {"repo_id": 5622726, "url": "https://github.com/switchfly/switchfly-java", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 752, "license": "licensed"}}