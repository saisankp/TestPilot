{"test_class": {"identifier": "RequestHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@MockBean\n  private SessionStore mockSessionStore;", "modifier": "@MockBean\n  private", "type": "SessionStore", "declarator": "mockSessionStore", "var_name": "mockSessionStore"}, {"original_string": "@MockBean\n  private ServiceProviderConfig mockServiceProviderConfig;", "modifier": "@MockBean\n  private", "type": "ServiceProviderConfig", "declarator": "mockServiceProviderConfig", "var_name": "mockServiceProviderConfig"}, {"original_string": "@MockBean\n  private ConfigHolder mockConfigHolder;", "modifier": "@MockBean\n  private", "type": "ConfigHolder", "declarator": "mockConfigHolder", "var_name": "mockConfigHolder"}, {"original_string": "private static final String RELAY_STATE = \"State#1542107483529\";", "modifier": "private static final", "type": "String", "declarator": "RELAY_STATE = \"State#1542107483529\"", "var_name": "RELAY_STATE"}, {"original_string": "private static final String GET_REQUEST = \"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\";", "modifier": "private static final", "type": "String", "declarator": "GET_REQUEST = \"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\"", "var_name": "GET_REQUEST"}, {"original_string": "private static final String POST_REQUEST = \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxzYW1sMnA6QXV0aG5SZXF1ZXN0IHhtbG5zOnNhbWwycD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIiB4bWxuczplaWRhcz0iaHR0cDovL2VpZGFzLmV1cm9wYS5ldS9zYW1sLWV4dGVuc2lvbnMiIERlc3RpbmF0aW9uPSJodHRwOi8vbG9jYWxob3N0OjgwODAvZUlEQVNEZW1vQXBwbGljYXRpb24vTmV3UmVjZWl2ZXJTZXJ2bGV0IiBGb3JjZUF1dGhuPSJ0cnVlIiBJRD0icGZ4YjhmY2FmMjQtMGRkNC0wYzRlLTMxYTAtMzhiNWM4NDMxNjRiIiBJc1Bhc3NpdmU9ImZhbHNlIiBJc3N1ZUluc3RhbnQ9IjIwMTgtMTEtMTRUMDk6NTU6MTEuMzMyWiIgUHJvdmlkZXJOYW1lPSJEZWZhdWx0UHJvdmlkZXIiIFZlcnNpb249IjIuMCI+DQoJPHNhbWwyOklzc3VlciB4bWxuczpzYW1sMj0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPmh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9lSURBU0RlbW9BcHBsaWNhdGlvbi9NZXRhZGF0YTwvc2FtbDI6SXNzdWVyPjxkczpTaWduYXR1cmUgeG1sbnM6ZHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPg0KICA8ZHM6U2lnbmVkSW5mbz48ZHM6Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPg0KICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+DQogIDxkczpSZWZlcmVuY2UgVVJJPSIjcGZ4YjhmY2FmMjQtMGRkNC0wYzRlLTMxYTAtMzhiNWM4NDMxNjRiIj48ZHM6VHJhbnNmb3Jtcz48ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz48ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+PC9kczpUcmFuc2Zvcm1zPjxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjc2hhMSIvPjxkczpEaWdlc3RWYWx1ZT5HTlZINTgrR1JlcmJrSXMzbWtWclR6WDNhZDg9PC9kczpEaWdlc3RWYWx1ZT48L2RzOlJlZmVyZW5jZT48L2RzOlNpZ25lZEluZm8+PGRzOlNpZ25hdHVyZVZhbHVlPkhJTldrclFjb3RHeHNXeUNHOTRIZ0ljUDdpbUpTSUVlZGhVdmFHRFFyZWxPMVJNaWJhN2p0eFJEWmhtcGYzTzdOMmo1ZGZlV1BjQWhnSkdCQ2ovdVhpcmdRVTBBYytLTzQrQ1ozY29rMWdRUWx5Szk1THBXVFZJUGErTjVlV3FUekExWlQyREVVRjU5aUZYQWdGZmVMZ1ZXWVVVZzBiUTRuNWZORlZ3TUR6SjZrb21adlFtWk5VUEJFNW1CMjBIYWdPeWxobFViNlNkQjQ4STdLZytzM3dSdnUyZ2xXeXFLL3hTNE9JbTErbTR6UVp6em9MZkxiTW1tM2JrKzBabUV4eWVYdHU5Nk1xMmNBeGJnaTJYMVBVWDdDYmhaVnI3WkZ4YTdZN1JITEpNS2U3NFQxNGZ3RlFUamhrM1Y1ZEtYd3o5bS9zb2Vsa05XdkNnOFJkUXczdz09PC9kczpTaWduYXR1cmVWYWx1ZT4NCjxkczpLZXlJbmZvPjxkczpYNTA5RGF0YT48ZHM6WDUwOUNlcnRpZmljYXRlPk1JSUVOakNDQXg2Z0F3SUJBZ0lJTmtyKzhkM01iUGt3RFFZSktvWklodmNOQVFFTEJRQXdWekVuTUNVR0ExVUVBd3dlWW05eklFTkJJR1ZKUkNCRGIyMXRkVzVwWTJGMGFXOXVJRU5sY25Sek1SOHdIUVlEVlFRS0RCWmljbVZ0Wlc0Z2IyNXNhVzVsSUhObGNuWnBZMlZ6TVFzd0NRWURWUVFHRXdKRVJUQWVGdzB4TXpBMk1URXhNVE16TkRGYUZ3MHhOakEyTVRBeE1UTXpOREZhTUcweEl6QWhCZ05WQkFNTUdtSnZjeTEwWlhOMExYUmpkRzlyWlc0dWMyRnRiQzF6YVdkdU1SZ3dGZ1lEVlFRTERBOTBaWE4wWTJWeWRHbG1hV05oZEdVeEh6QWRCZ05WQkFvTUZtSnlaVzFsYmlCdmJteHBibVVnYzJWeWRtbGpaWE14Q3pBSkJnTlZCQVlUQW1SbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdCtHN3prUklDT2x5em1GNFZKYUJpMVRyMmZPd21iYXJEbXpoZ0VnS01kMWhRNU13MXdkcEVKMlNQcUlZNGVpdExIcjFpUHVDM21ERW9EV2NEMGxhNXFUQm9uUy9QUlZMSFNKRlBsc09qNGZJWjlyWTFFV1RWRmdYK1RyWm5PYXAxUTU1VzIyMktHVmJWeGY4RFZJUVhzcWxmZVJzZXNHZ3p3cG9zL1ZwZDA4Njc0SUJrWDJ6djdDV0dpSWhJbVBlZWlwb016RjNRcnhOSm1hR2o4RzlxT3ByQTA5Zy9HU2lrV21QVVFvbFN6RHZzYkV6LzgyNzVHYU5LRjlHR29hZkRabzlyUDhvSXdDd2hoTlludVhrMkhzcHhuRjlsY2xyWEdmN25HTk5WMlYyb2tSYzBybVF1OHBIenVtSXJkSEVSeHZtNVczeElPSlhPRUJlU0JwT0lRSURBUUFCbzRIdk1JSHNNQXdHQTFVZEV3RUIvd1FDTUFBd1B3WURWUjBsQkRnd05nWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RCQVlLS3dZQkJBR0NOeFFDQWdZS0t3WUJCQUdDTndvREREQWZCZ05WSFNNRUdEQVdnQlFGSXFrOCtLUVIvU3RhNDNMdzg1Y3pWSmx4anpBT0JnTlZIUThCQWY4RUJBTUNCTEF3SFFZRFZSME9CQllFRktZd1pKeCsyT3BGY2VPUStzNHFtZVdBYWt1Uk1Fc0dDQ3NHQVFVRkJ3RUJCRDh3UFRBN0JnZ3JCZ0VGQlFjd0FZWXZhSFIwY0RvdkwyOWpjM0F1WW05ekxXSnlaVzFsYmk1a1pTOXdkV0pzYVdOM1pXSXZjM1JoZEhWekwyOWpjM0F3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUxINS9tL21hWFFnNmREZ1REYzkrMjc1S1dNNVdBc1pFdmMrYjVOcUYvQUF5RkJvNnI1Y2NnZFF6a09xV2JWc29Gd1ZCWmxoQXgxOTZsWXpvdEpoVCtPcWcyWU5SYVB4UFIwb0NTdVh4ZHZVMFBDYzJrOHV6dWtoTFVCZHQ2ejlOOFVFcThONFNla1JUNW1lQzNjZEJQWnNEZWRldHBzZG9DWGZYdnl1TFJJRHp2bW5sZkJ4YWtLaEhXeXU5K3hEMGI1ZEhWbTIwU0dNSVBLVkZWaTkzd3FNeWRVbHRzSFlmVldlN1VpNHE0cW1OTEFOK1lHSFdhM2k2N3ZoMkVaSVMzYnZ4OWxKZk9USTRydlR0UlhjNVM2UHBLVXhodlcxczNZREpUeitraFIva0RYeFlTMlg2RzVQSFZYcktmbWEzMTFwbHB0My84TVZZaGgrcEV1R0ZSMD08L2RzOlg1MDlDZXJ0aWZpY2F0ZT48L2RzOlg1MDlEYXRhPjwvZHM6S2V5SW5mbz48L2RzOlNpZ25hdHVyZT4NCgk8c2FtbDJwOkV4dGVuc2lvbnM+DQoJCTxlaWRhczpSZXF1ZXN0ZWRBdHRyaWJ1dGVzPg0KCQkJPGVpZGFzOlJlcXVlc3RlZEF0dHJpYnV0ZSBOYW1lPSJodHRwOi8vZWlkYXMuZXVyb3BhLmV1L2F0dHJpYnV0ZXMvbmF0dXJhbHBlcnNvbi9EYXRlT2ZCaXJ0aCIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDp1cmkiIGlzUmVxdWlyZWQ9ImZhbHNlIi8+DQoJCQk8ZWlkYXM6UmVxdWVzdGVkQXR0cmlidXRlIE5hbWU9Imh0dHA6Ly9laWRhcy5ldXJvcGEuZXUvYXR0cmlidXRlcy9uYXR1cmFscGVyc29uL0N1cnJlbnRBZGRyZXNzIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OnVyaSIgaXNSZXF1aXJlZD0iZmFsc2UiLz4NCgkJCTxlaWRhczpSZXF1ZXN0ZWRBdHRyaWJ1dGUgTmFtZT0iaHR0cDovL2VpZGFzLmV1cm9wYS5ldS9hdHRyaWJ1dGVzL25hdHVyYWxwZXJzb24vQ3VycmVudEZhbWlseU5hbWUiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6dXJpIiBpc1JlcXVpcmVkPSJ0cnVlIi8+DQoJCQk8ZWlkYXM6UmVxdWVzdGVkQXR0cmlidXRlIE5hbWU9Imh0dHA6Ly9laWRhcy5ldXJvcGEuZXUvYXR0cmlidXRlcy9uYXR1cmFscGVyc29uL1BlcnNvbklkZW50aWZpZXIiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6dXJpIiBpc1JlcXVpcmVkPSJ0cnVlIi8+DQoJCQk8ZWlkYXM6UmVxdWVzdGVkQXR0cmlidXRlIE5hbWU9Imh0dHA6Ly9laWRhcy5ldXJvcGEuZXUvYXR0cmlidXRlcy9uYXR1cmFscGVyc29uL1BsYWNlT2ZCaXJ0aCIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDp1cmkiIGlzUmVxdWlyZWQ9ImZhbHNlIi8+DQoJCQk8ZWlkYXM6UmVxdWVzdGVkQXR0cmlidXRlIE5hbWU9Imh0dHA6Ly9laWRhcy5ldXJvcGEuZXUvYXR0cmlidXRlcy9uYXR1cmFscGVyc29uL0N1cnJlbnRHaXZlbk5hbWUiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6dXJpIiBpc1JlcXVpcmVkPSJ0cnVlIi8+DQoJCQk8ZWlkYXM6UmVxdWVzdGVkQXR0cmlidXRlIE5hbWU9Imh0dHA6Ly9laWRhcy5ldXJvcGEuZXUvYXR0cmlidXRlcy9uYXR1cmFscGVyc29uL0JpcnRoTmFtZSIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDp1cmkiIGlzUmVxdWlyZWQ9ImZhbHNlIi8+DQoJCTwvZWlkYXM6UmVxdWVzdGVkQXR0cmlidXRlcz4NCgk8L3NhbWwycDpFeHRlbnNpb25zPg0KCTxzYW1sMnA6TmFtZUlEUG9saWN5IEFsbG93Q3JlYXRlPSJ0cnVlIiBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIvPg0KCTxzYW1sMnA6UmVxdWVzdGVkQXV0aG5Db250ZXh0IENvbXBhcmlzb249Im1pbmltdW0iPg0KCQk8c2FtbDI6QXV0aG5Db250ZXh0Q2xhc3NSZWYgeG1sbnM6c2FtbDI9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iPmh0dHA6Ly9laWRhcy5ldXJvcGEuZXUvTG9BL2hpZ2g8L3NhbWwyOkF1dGhuQ29udGV4dENsYXNzUmVmPg0KCTwvc2FtbDJwOlJlcXVlc3RlZEF1dGhuQ29udGV4dD4NCjwvc2FtbDJwOkF1dGhuUmVxdWVzdD4=\";", "modifier": "private static final", "type": "String", "declarator": "POST_REQUEST = \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxzYW1sMnA6QXV0aG5SZXF1ZXN0IHhtbG5zOnNhbWwycD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIiB4bWxuczplaWRhcz0iaHR0cDovL2VpZGFzLmV1cm9wYS5ldS9zYW1sLWV4dGVuc2lvbnMiIERlc3RpbmF0aW9uPSJodHRwOi8vbG9jYWxob3N0OjgwODAvZUlEQVNEZW1vQXBwbGljYXRpb24vTmV3UmVjZWl2ZXJTZXJ2bGV0IiBGb3JjZUF1dGhuPSJ0cnVlIiBJRD0icGZ4YjhmY2FmMjQtMGRkNC0wYzRlLTMxYTAtMzhiNWM4NDMxNjRiIiBJc1Bhc3NpdmU9ImZhbHNlIiBJc3N1ZUluc3RhbnQ9IjIwMTgtMTEtMTRUMDk6NTU6MTEuMzMyWiIgUHJvdmlkZXJOYW1lPSJEZWZhdWx0UHJvdmlkZXIiIFZlcnNpb249IjIuMCI+DQoJPHNhbWwyOklzc3VlciB4bWxuczpzYW1sMj0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiIgRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6bmFtZWlkLWZvcm1hdDplbnRpdHkiPmh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9lSURBU0RlbW9BcHBsaWNhdGlvbi9NZXRhZGF0YTwvc2FtbDI6SXNzdWVyPjxkczpTaWduYXR1cmUgeG1sbnM6ZHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPg0KICA8ZHM6U2lnbmVkSW5mbz48ZHM6Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPg0KICAgIDxkczpTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2Ii8+DQogIDxkczpSZWZlcmVuY2UgVVJJPSIjcGZ4YjhmY2FmMjQtMGRkNC0wYzRlLTMxYTAtMzhiNWM4NDMxNjRiIj48ZHM6VHJhbnNmb3Jtcz48ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz48ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIi8+PC9kczpUcmFuc2Zvcm1zPjxkczpEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjc2hhMSIvPjxkczpEaWdlc3RWYWx1ZT5HTlZINTgrR1JlcmJrSXMzbWtWclR6WDNhZDg9PC9kczpEaWdlc3RWYWx1ZT48L2RzOlJlZmVyZW5jZT48L2RzOlNpZ25lZEluZm8+PGRzOlNpZ25hdHVyZVZhbHVlPkhJTldrclFjb3RHeHNXeUNHOTRIZ0ljUDdpbUpTSUVlZGhVdmFHRFFyZWxPMVJNaWJhN2p0eFJEWmhtcGYzTzdOMmo1ZGZlV1BjQWhnSkdCQ2ovdVhpcmdRVTBBYytLTzQrQ1ozY29rMWdRUWx5Szk1THBXVFZJUGErTjVlV3FUekExWlQyREVVRjU5aUZYQWdGZmVMZ1ZXWVVVZzBiUTRuNWZORlZ3TUR6SjZrb21adlFtWk5VUEJFNW1CMjBIYWdPeWxobFViNlNkQjQ4STdLZytzM3dSdnUyZ2xXeXFLL3hTNE9JbTErbTR6UVp6em9MZkxiTW1tM2JrKzBabUV4eWVYdHU5Nk1xMmNBeGJnaTJYMVBVWDdDYmhaVnI3WkZ4YTdZN1JITEpNS2U3NFQxNGZ3RlFUamhrM1Y1ZEtYd3o5bS9zb2Vsa05XdkNnOFJkUXczdz09PC9kczpTaWduYXR1cmVWYWx1ZT4NCjxkczpLZXlJbmZvPjxkczpYNTA5RGF0YT48ZHM6WDUwOUNlcnRpZmljYXRlPk1JSUVOakNDQXg2Z0F3SUJBZ0lJTmtyKzhkM01iUGt3RFFZSktvWklodmNOQVFFTEJRQXdWekVuTUNVR0ExVUVBd3dlWW05eklFTkJJR1ZKUkNCRGIyMXRkVzVwWTJGMGFXOXVJRU5sY25Sek1SOHdIUVlEVlFRS0RCWmljbVZ0Wlc0Z2IyNXNhVzVsSUhObGNuWnBZMlZ6TVFzd0NRWURWUVFHRXdKRVJUQWVGdzB4TXpBMk1URXhNVE16TkRGYUZ3MHhOakEyTVRBeE1UTXpOREZhTUcweEl6QWhCZ05WQkFNTUdtSnZjeTEwWlhOMExYUmpkRzlyWlc0dWMyRnRiQzF6YVdkdU1SZ3dGZ1lEVlFRTERBOTBaWE4wWTJWeWRHbG1hV05oZEdVeEh6QWRCZ05WQkFvTUZtSnlaVzFsYmlCdmJteHBibVVnYzJWeWRtbGpaWE14Q3pBSkJnTlZCQVlUQW1SbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdCtHN3prUklDT2x5em1GNFZKYUJpMVRyMmZPd21iYXJEbXpoZ0VnS01kMWhRNU13MXdkcEVKMlNQcUlZNGVpdExIcjFpUHVDM21ERW9EV2NEMGxhNXFUQm9uUy9QUlZMSFNKRlBsc09qNGZJWjlyWTFFV1RWRmdYK1RyWm5PYXAxUTU1VzIyMktHVmJWeGY4RFZJUVhzcWxmZVJzZXNHZ3p3cG9zL1ZwZDA4Njc0SUJrWDJ6djdDV0dpSWhJbVBlZWlwb016RjNRcnhOSm1hR2o4RzlxT3ByQTA5Zy9HU2lrV21QVVFvbFN6RHZzYkV6LzgyNzVHYU5LRjlHR29hZkRabzlyUDhvSXdDd2hoTlludVhrMkhzcHhuRjlsY2xyWEdmN25HTk5WMlYyb2tSYzBybVF1OHBIenVtSXJkSEVSeHZtNVczeElPSlhPRUJlU0JwT0lRSURBUUFCbzRIdk1JSHNNQXdHQTFVZEV3RUIvd1FDTUFBd1B3WURWUjBsQkRnd05nWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RCQVlLS3dZQkJBR0NOeFFDQWdZS0t3WUJCQUdDTndvREREQWZCZ05WSFNNRUdEQVdnQlFGSXFrOCtLUVIvU3RhNDNMdzg1Y3pWSmx4anpBT0JnTlZIUThCQWY4RUJBTUNCTEF3SFFZRFZSME9CQllFRktZd1pKeCsyT3BGY2VPUStzNHFtZVdBYWt1Uk1Fc0dDQ3NHQVFVRkJ3RUJCRDh3UFRBN0JnZ3JCZ0VGQlFjd0FZWXZhSFIwY0RvdkwyOWpjM0F1WW05ekxXSnlaVzFsYmk1a1pTOXdkV0pzYVdOM1pXSXZjM1JoZEhWekwyOWpjM0F3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUxINS9tL21hWFFnNmREZ1REYzkrMjc1S1dNNVdBc1pFdmMrYjVOcUYvQUF5RkJvNnI1Y2NnZFF6a09xV2JWc29Gd1ZCWmxoQXgxOTZsWXpvdEpoVCtPcWcyWU5SYVB4UFIwb0NTdVh4ZHZVMFBDYzJrOHV6dWtoTFVCZHQ2ejlOOFVFcThONFNla1JUNW1lQzNjZEJQWnNEZWRldHBzZG9DWGZYdnl1TFJJRHp2bW5sZkJ4YWtLaEhXeXU5K3hEMGI1ZEhWbTIwU0dNSVBLVkZWaTkzd3FNeWRVbHRzSFlmVldlN1VpNHE0cW1OTEFOK1lHSFdhM2k2N3ZoMkVaSVMzYnZ4OWxKZk9USTRydlR0UlhjNVM2UHBLVXhodlcxczNZREpUeitraFIva0RYeFlTMlg2RzVQSFZYcktmbWEzMTFwbHB0My84TVZZaGgrcEV1R0ZSMD08L2RzOlg1MDlDZXJ0aWZpY2F0ZT48L2RzOlg1MDlEYXRhPjwvZHM6S2V5SW5mbz48L2RzOlNpZ25hdHVyZT4NCgk8c2FtbDJwOkV4dGVuc2lvbnM+DQoJCTxlaWRhczpSZXF1ZXN0ZWRBdHRyaWJ1dGVzPg0KCQkJPGVpZGFzOlJlcXVlc3RlZEF0dHJpYnV0ZSBOYW1lPSJodHRwOi8vZWlkYXMuZXVyb3BhLmV1L2F0dHJpYnV0ZXMvbmF0dXJhbHBlcnNvbi9EYXRlT2ZCaXJ0aCIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDp1cmkiIGlzUmVxdWlyZWQ9ImZhbHNlIi8+DQoJCQk8ZWlkYXM6UmVxdWVzdGVkQXR0cmlidXRlIE5hbWU9Imh0dHA6Ly9laWRhcy5ldXJvcGEuZXUvYXR0cmlidXRlcy9uYXR1cmFscGVyc29uL0N1cnJlbnRBZGRyZXNzIiBOYW1lRm9ybWF0PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXR0cm5hbWUtZm9ybWF0OnVyaSIgaXNSZXF1aXJlZD0iZmFsc2UiLz4NCgkJCTxlaWRhczpSZXF1ZXN0ZWRBdHRyaWJ1dGUgTmFtZT0iaHR0cDovL2VpZGFzLmV1cm9wYS5ldS9hdHRyaWJ1dGVzL25hdHVyYWxwZXJzb24vQ3VycmVudEZhbWlseU5hbWUiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6dXJpIiBpc1JlcXVpcmVkPSJ0cnVlIi8+DQoJCQk8ZWlkYXM6UmVxdWVzdGVkQXR0cmlidXRlIE5hbWU9Imh0dHA6Ly9laWRhcy5ldXJvcGEuZXUvYXR0cmlidXRlcy9uYXR1cmFscGVyc29uL1BlcnNvbklkZW50aWZpZXIiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6dXJpIiBpc1JlcXVpcmVkPSJ0cnVlIi8+DQoJCQk8ZWlkYXM6UmVxdWVzdGVkQXR0cmlidXRlIE5hbWU9Imh0dHA6Ly9laWRhcy5ldXJvcGEuZXUvYXR0cmlidXRlcy9uYXR1cmFscGVyc29uL1BsYWNlT2ZCaXJ0aCIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDp1cmkiIGlzUmVxdWlyZWQ9ImZhbHNlIi8+DQoJCQk8ZWlkYXM6UmVxdWVzdGVkQXR0cmlidXRlIE5hbWU9Imh0dHA6Ly9laWRhcy5ldXJvcGEuZXUvYXR0cmlidXRlcy9uYXR1cmFscGVyc29uL0N1cnJlbnRHaXZlbk5hbWUiIE5hbWVGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphdHRybmFtZS1mb3JtYXQ6dXJpIiBpc1JlcXVpcmVkPSJ0cnVlIi8+DQoJCQk8ZWlkYXM6UmVxdWVzdGVkQXR0cmlidXRlIE5hbWU9Imh0dHA6Ly9laWRhcy5ldXJvcGEuZXUvYXR0cmlidXRlcy9uYXR1cmFscGVyc29uL0JpcnRoTmFtZSIgTmFtZUZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmF0dHJuYW1lLWZvcm1hdDp1cmkiIGlzUmVxdWlyZWQ9ImZhbHNlIi8+DQoJCTwvZWlkYXM6UmVxdWVzdGVkQXR0cmlidXRlcz4NCgk8L3NhbWwycDpFeHRlbnNpb25zPg0KCTxzYW1sMnA6TmFtZUlEUG9saWN5IEFsbG93Q3JlYXRlPSJ0cnVlIiBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OnRyYW5zaWVudCIvPg0KCTxzYW1sMnA6UmVxdWVzdGVkQXV0aG5Db250ZXh0IENvbXBhcmlzb249Im1pbmltdW0iPg0KCQk8c2FtbDI6QXV0aG5Db250ZXh0Q2xhc3NSZWYgeG1sbnM6c2FtbDI9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iPmh0dHA6Ly9laWRhcy5ldXJvcGEuZXUvTG9BL2hpZ2g8L3NhbWwyOkF1dGhuQ29udGV4dENsYXNzUmVmPg0KCTwvc2FtbDJwOlJlcXVlc3RlZEF1dGhuQ29udGV4dD4NCjwvc2FtbDJwOkF1dGhuUmVxdWVzdD4=\"", "var_name": "POST_REQUEST"}, {"original_string": "private static final String INVALID_BASE64 = \"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\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_BASE64 = \"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\"", "var_name": "INVALID_BASE64"}, {"original_string": "private static final String INVALID_SIGNED_XML = \"1VhZk+I4En6e/hUVdMS+ENU+wGDYpjbkEwM22ICNedkwtnyAL3xg41+/Mkd1zWzPTO9GT8RuPVSV5FTq05epVGZ+/UcdhS8XmOVBEk86xBe88wJjO3GC2Jt0thvhle784+1rbkUhmY5BWfixBs8lzIsXtDDOx/cvk06ZxePEyoN8HFsRzMeFPV4DeTEmv+DjNEuKxE7CzmMNDBwrn3T8okjHGHYbfYFllqQW+oO1Gl9hXcC4xZR3Xji0WxBbxQ3hY1GY2FboJ3kxpnEax6DEgTUHowSkaRjYN1lMgZUGbRig061hdglh0XkRksyGt2NMOkVWws6LxE06/7RGBH0gyMNrf9Cz0a/h4JW2yN7rcNAf0IMDpHvuAInmKyvPkb5Jx7XCvF2c5yWU4ryw4mLSIXGCfiWIV6K3Iahxnxr3yC99At93XlZZcgkcmCmIm0mHg65VhsVzsvOiP/lHbHUebI9vurOPNP8xywgazNqD304ZWQjQHxmlNVPgvLo30TGMi6C4dt7+A3plWFiOVVhfbxYjH3jfvjr5eB14yF5lBh/onW/WrqrqS9X7kmQeRuI4juEjDDmSkwfe587bp+di6Eixm9zHrBUnMbJpGDQ3u6J9/cR5AaGXZEHhR+8+8WvVBEbgrWrkSvarTfTjzx3s2wY3dD+oaYjh1BPka5Rk8HPuWyQ1eM1y61UWBeKpWIMuzNDtgS9bTZp0Pv+YW91BbTIrzltj5L8Z/+lBf8UhjC8wTFLovCJG7zZ4onvf4U81/g512HdgcoGHbucPEklgeL8lElH0oPCJ7a5Gt8ISvpFz7rIzTH5EudfonBjlDOyi7SG86Km/dAbmhd6NjvFF51fy5GuL6ePiT7eZd0MgLttx648fXerdP+87fuKDs8euAxcC6twIbmxyvYHigyFxJbtrLU/0LrtIs13jHhiPM2jMyPR9OrKW3fOeUesGl/i5vU9kjWCi1d8+E72/f8p7QrnbsIua6tZZpmoNvl4f+HUw6u2AubC9NJr30j7ZbU5uQbOgiE5u5BjzgIBeEtqJuPDW80VFyI23fGgMjvLeLDamyZ2IxSYqYn+4N7PEKvXE5RqPNMt+b7PdGI5swD08xf2Ryu70xOGyEwxm9QgWHK4uFulyk0t3jENq5wjaEtAeDLBUUR2eXhriPtaOmBeThZ0qBVQ8RupfrvZBG7BEdMloeocXzDoxZnzID47zo+w7m2w3u2vcXM9lzVvTvbjE0tIi9OspPCea4/vrmX7M5a7Fg3k1mXyzys1DH1Zor8EcXm83v/1/R+EjDgWY9wHbxje3De/wTZYkXjmyLKgHHqgkBniSpJyyLu305MPqVHGqOZsne8m/2ApQ+QWjgkpv+FhmtyIgtjyoKmhGowZpYSRRn2kswx1IonAMKjVJAbeMUYm+hXasNbJGV1PV5HRVnXPMPrAjvdgbfe9AUrllUKE0beX2aJ3eyGpesXdZka9mvLYBUKjwWm4AKW/4Wt7IjcIJVjunHNs58D4ni3gtNcBnPEVngCyL0exiX9EDslPwxU47OuIoQ/uWNikUB5ZoLMMpZc2rBO+234IDo5sswnF1xDCyDMV3xG09bYBz15nIQjS77g0iPATM5RDV6SHaenYrH4XH/U6u2QbM7rLmBkRaiHhmpCNQGO909k+BOKpwBvEpALBkgUqD9jvrzdH/PCi64rA5aRK7DK9NJPT1mcUExCYj3WUVHayMixrf47257BC+SskVUTkpPyPXq7Nk9mFQLKYZEaxKthdxfMIZNoeHFnXeMEm8xlaavpiuZ8IqzJfHvivtR5lJ8MZGF7xdd5Pt46WVEipFGSRJzkX9oNcuzemSusvPoQu1HOai11RpkmN66uD0YNiXmNOObC5D1hADyZeiFYRBmsiN0FOzWplFlnikxdF5mWYAH3mYuA5ORrTaqkm4brhLfuAbjCaHlGgpc2EkionlcvtklK3oRKrYyvcVMy53J3Kap3UsjEI7zHaiO4xFRdFJnUxOmo1nkVrS6bQpIylzprxWXyLK6NXScrZb8gxcM+lSUlFqowIm6U8vsjTNZVC1/uvwFc9glcrKAFSrCtlfw0OG8yrFM6V5ZTKMup2CihdZNheBuhWYSmYZz8sYjxcY1eaQfec3OSCySq2ywPswrhKO44Db+sF0LfMiBwyPUQXpfKK7c1XD1oXV7y0qmrIbfRbWxwYsb7IqzQCX5pHvsswC3O+Mhi8ZxuSFuVntZ3WXXKaCDZdqN++fI2gA61RqMp9/wMkzDEdXqw0YfsBbAdO8WFMNt7nksiBHR7sHyvb+LoynP1On/XpUOcYM3Umltzeki93TfGeqNw/578UEzvMQ3MWUwiIssnaqN3A4b8PZoy4y7dyQKQPke/5idw+UchYwAK4CkwwyyrY9R21Oy7Nx0PNEqHRmH/qgJkaD0GySYuZvusszCsqKZq3qlYYn7Lrc1c5li69YmzzRZVOe/MWWcYpBM1LoLX+mlf4anrQNFUG2ZzvMap9z0IFFmjsJu3N3l2u50CSuuURx6DK1dZr7U+Najro1hx8odMyIxNeiLK3muqCjd6Y6y1dnGxb51HR1Aw63Qf+MKFcWQOma4tSwesFgePFJfi+te4dLPQpn7nIj9bPLptB2NrUerNL5tvYvBpH3TG62abonX8NO3K421+RuIFKrqb7L5m5k9QgiDdOih9Gybvp+N+VLUdDw++vcRvGPgft98h7aW5H3oP98q2+vwnvVwb/XAm+fXh4/X29Vw3i92lxT+JaWB5T1f72XEs/J38o+6hbogKLIgkNZQJRq/fLLLw9V//755Z6t/06ZYr1rwW55lhWmKItHZQcTZIXfLu3cFPxILt7qavPxZzZeZkHnJchbSEEGnWe5gb39bKxsmaGEtRCsKAivPxnzrbz6yyCLqAyL/68QA8fJYI7q2f95r1jdHFly2qLQDWD2EyH/RU6xCi30qLi3q/cT0d6r/J/vwyj0/YVovwW+R0D8buRrA+mjdE/HH0Lss9fTeqnErRIUWK+oYgyTis0gwv3sm/xIXPt1j6FoS9wAOVXL6KOj9A1a25Nhk7hAnZ8XNolSKwuQE046URAHURmh5sB77L/3G25dnMcKNkTdD1T1/TfdkmfP47d9qEUCMD/w/Gd/43v73UG90/jd07z9Cw==\";", "modifier": "private static final", "type": "String", "declarator": "INVALID_SIGNED_XML = \"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\"", "var_name": "INVALID_SIGNED_XML"}, {"original_string": "private static final String DEFAULT_PASSWORD = \"123456\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_PASSWORD = \"123456\"", "var_name": "DEFAULT_PASSWORD"}], "file": "eidas-middleware/src/test/java/de/governikus/eumw/eidasmiddleware/handler/RequestHandlerTest.java"}, "test_case": {"identifier": "testInvalidBase64", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n  void testInvalidBase64()\n  {\n    RequestHandler requestHandler = new RequestHandler(mockSessionStore, mockConfigHolder,\n                                                       mockServiceProviderConfig);\n    RequestProcessingException requestProcessingException = Assertions.assertThrows(RequestProcessingException.class,\n                                                                                    () -> requestHandler.handleSAMLRequest(RELAY_STATE,\n                                                                                                                           INVALID_BASE64,\n                                                                                                                           false));\n    Assertions.assertEquals(DataFormatException.class,\n                            requestProcessingException.getCause().getClass(),\n                            \"ErrorCodeException expected as cause\");\n    Assertions.assertEquals(RequestHandler.CANNOT_PARSE_SAML_REQUEST,\n                            requestProcessingException.getMessage());\n  }", "signature": "void testInvalidBase64()", "full_signature": "@Test void testInvalidBase64()", "class_method_signature": "RequestHandlerTest.testInvalidBase64()", "testcase": true, "constructor": false, "invocations": ["assertThrows", "handleSAMLRequest", "assertEquals", "getClass", "getCause", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "RequestHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String CANNOT_PARSE_SAML_REQUEST = \"Cannot parse SAML Request\";", "modifier": "public static final", "type": "String", "declarator": "CANNOT_PARSE_SAML_REQUEST = \"Cannot parse SAML Request\"", "var_name": "CANNOT_PARSE_SAML_REQUEST"}, {"original_string": "private final SessionStore store;", "modifier": "private final", "type": "SessionStore", "declarator": "store", "var_name": "store"}, {"original_string": "private final ServiceProviderConfig serviceProviderConfig;", "modifier": "private final", "type": "ServiceProviderConfig", "declarator": "serviceProviderConfig", "var_name": "serviceProviderConfig"}, {"original_string": "private final ConfigHolder configHolder;", "modifier": "private final", "type": "ConfigHolder", "declarator": "configHolder", "var_name": "configHolder"}], "methods": [{"identifier": "RequestHandler", "parameters": "(SessionStore store,\n                        ConfigHolder configHolder,\n                        ServiceProviderConfig serviceProviderConfig)", "modifiers": "public", "return": "", "signature": " RequestHandler(SessionStore store,\n                        ConfigHolder configHolder,\n                        ServiceProviderConfig serviceProviderConfig)", "full_signature": "public  RequestHandler(SessionStore store,\n                        ConfigHolder configHolder,\n                        ServiceProviderConfig serviceProviderConfig)", "class_method_signature": "RequestHandler.RequestHandler(SessionStore store,\n                        ConfigHolder configHolder,\n                        ServiceProviderConfig serviceProviderConfig)", "testcase": false, "constructor": true}, {"identifier": "handleSAMLRequest", "parameters": "(String samlRequestBase64, boolean isPost)", "modifiers": "", "return": "String", "signature": "String handleSAMLRequest(String samlRequestBase64, boolean isPost)", "full_signature": " String handleSAMLRequest(String samlRequestBase64, boolean isPost)", "class_method_signature": "RequestHandler.handleSAMLRequest(String samlRequestBase64, boolean isPost)", "testcase": false, "constructor": false}, {"identifier": "handleSAMLRequest", "parameters": "(String relayState, String samlRequestBase64, boolean isPost)", "modifiers": "public", "return": "String", "signature": "String handleSAMLRequest(String relayState, String samlRequestBase64, boolean isPost)", "full_signature": "public String handleSAMLRequest(String relayState, String samlRequestBase64, boolean isPost)", "class_method_signature": "RequestHandler.handleSAMLRequest(String relayState, String samlRequestBase64, boolean isPost)", "testcase": false, "constructor": false}, {"identifier": "parseSAMLRequest", "parameters": "(byte[] samlRequest)", "modifiers": "private", "return": "EidasRequest", "signature": "EidasRequest parseSAMLRequest(byte[] samlRequest)", "full_signature": "private EidasRequest parseSAMLRequest(byte[] samlRequest)", "class_method_signature": "RequestHandler.parseSAMLRequest(byte[] samlRequest)", "testcase": false, "constructor": false}, {"identifier": "getSAMLRequestBytes", "parameters": "(boolean isPost, String samlRequestBase64)", "modifiers": "private", "return": "byte[]", "signature": "byte[] getSAMLRequestBytes(boolean isPost, String samlRequestBase64)", "full_signature": "private byte[] getSAMLRequestBytes(boolean isPost, String samlRequestBase64)", "class_method_signature": "RequestHandler.getSAMLRequestBytes(boolean isPost, String samlRequestBase64)", "testcase": false, "constructor": false}, {"identifier": "getTcTokenURL", "parameters": "(String sessionId)", "modifiers": "public", "return": "String", "signature": "String getTcTokenURL(String sessionId)", "full_signature": "public String getTcTokenURL(String sessionId)", "class_method_signature": "RequestHandler.getTcTokenURL(String sessionId)", "testcase": false, "constructor": false}], "file": "eidas-middleware/src/main/java/de/governikus/eumw/eidasmiddleware/handler/RequestHandler.java"}, "focal_method": {"identifier": "handleSAMLRequest", "parameters": "(String samlRequestBase64, boolean isPost)", "modifiers": "", "return": "String", "body": "String handleSAMLRequest(String samlRequestBase64, boolean isPost)\n  {\n    return handleSAMLRequest(null, samlRequestBase64, isPost);\n  }", "signature": "String handleSAMLRequest(String samlRequestBase64, boolean isPost)", "full_signature": " String handleSAMLRequest(String samlRequestBase64, boolean isPost)", "class_method_signature": "RequestHandler.handleSAMLRequest(String samlRequestBase64, boolean isPost)", "testcase": false, "constructor": false, "invocations": ["handleSAMLRequest"]}, "repository": {"repo_id": 133799133, "url": "https://github.com/Governikus/eidas-middleware", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 15, "size": 2286, "license": "licensed"}}