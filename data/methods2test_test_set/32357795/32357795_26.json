{"test_class": {"identifier": "GenericLocatorTest", "superclass": "extends AbstractLocatorTest", "interfaces": "", "fields": [{"original_string": "protected static final String NOTATION = \"GENERIC\";", "modifier": "protected static final", "type": "String", "declarator": "NOTATION = \"GENERIC\"", "var_name": "NOTATION"}, {"original_string": "protected static final String ADDRESS = \"Some obscure address\";", "modifier": "protected static final", "type": "String", "declarator": "ADDRESS = \"Some obscure address\"", "var_name": "ADDRESS"}], "file": "ontopia-engine/src/test/java/net/ontopia/infoset/impl/basic/GenericLocatorTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEquals() {\n    LocatorIF locator = createLocator(NOTATION, ADDRESS);\n    Assert.assertEquals(\"locator does not equal itself\", locator, locator);\n    Assert.assertFalse(\"locator equals null\", locator.equals(null));\n    \n    LocatorIF locator2 = createLocator(\"generic\", ADDRESS);\n    Assert.assertEquals(\"comparison of notation name not case-insensitive\", locator2, locator);\n  }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "GenericLocatorTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["createLocator", "assertEquals", "assertFalse", "equals", "createLocator", "assertEquals"]}, "focal_class": {"identifier": "GenericLocator", "superclass": "extends AbstractLocator", "interfaces": "implements Externalizable", "fields": [{"original_string": "private static final long serialVersionUID = 3066225165288209215L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 3066225165288209215L", "var_name": "serialVersionUID"}, {"original_string": "protected String notation;", "modifier": "protected", "type": "String", "declarator": "notation", "var_name": "notation"}, {"original_string": "protected String address;", "modifier": "protected", "type": "String", "declarator": "address", "var_name": "address"}], "methods": [{"identifier": "GenericLocator", "parameters": "()", "modifiers": "public", "return": "", "signature": " GenericLocator()", "full_signature": "public  GenericLocator()", "class_method_signature": "GenericLocator.GenericLocator()", "testcase": false, "constructor": true}, {"identifier": "GenericLocator", "parameters": "(String notation, String address)", "modifiers": "public", "return": "", "signature": " GenericLocator(String notation, String address)", "full_signature": "public  GenericLocator(String notation, String address)", "class_method_signature": "GenericLocator.GenericLocator(String notation, String address)", "testcase": false, "constructor": true}, {"identifier": "getNotation", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getNotation()", "full_signature": "@Override public String getNotation()", "class_method_signature": "GenericLocator.getNotation()", "testcase": false, "constructor": false}, {"identifier": "getAddress", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getAddress()", "full_signature": "@Override public String getAddress()", "class_method_signature": "GenericLocator.getAddress()", "testcase": false, "constructor": false}, {"identifier": "resolveAbsolute", "parameters": "(String address)", "modifiers": "@Override public", "return": "LocatorIF", "signature": "LocatorIF resolveAbsolute(String address)", "full_signature": "@Override public LocatorIF resolveAbsolute(String address)", "class_method_signature": "GenericLocator.resolveAbsolute(String address)", "testcase": false, "constructor": false}, {"identifier": "getExternalForm", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getExternalForm()", "full_signature": "@Override public String getExternalForm()", "class_method_signature": "GenericLocator.getExternalForm()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "GenericLocator.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object object)", "full_signature": "@Override public boolean equals(Object object)", "class_method_signature": "GenericLocator.equals(Object object)", "testcase": false, "constructor": false}, {"identifier": "writeExternal", "parameters": "(ObjectOutput out)", "modifiers": "@Override public", "return": "void", "signature": "void writeExternal(ObjectOutput out)", "full_signature": "@Override public void writeExternal(ObjectOutput out)", "class_method_signature": "GenericLocator.writeExternal(ObjectOutput out)", "testcase": false, "constructor": false}, {"identifier": "readExternal", "parameters": "(ObjectInput in)", "modifiers": "@Override public", "return": "void", "signature": "void readExternal(ObjectInput in)", "full_signature": "@Override public void readExternal(ObjectInput in)", "class_method_signature": "GenericLocator.readExternal(ObjectInput in)", "testcase": false, "constructor": false}], "file": "ontopia-engine/src/main/java/net/ontopia/infoset/impl/basic/GenericLocator.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n  public boolean equals(Object object) {\n    try {\n      LocatorIF locator = (LocatorIF)object;\n      return address.equals(locator.getAddress()) &&\n        notation.equalsIgnoreCase(locator.getNotation());\n    } catch (ClassCastException e) {\n      return false; // In case the object is not a locator\n    } catch (NullPointerException e) {\n      return false; // In case the object is null\n    }\n  }", "signature": "boolean equals(Object object)", "full_signature": "@Override public boolean equals(Object object)", "class_method_signature": "GenericLocator.equals(Object object)", "testcase": false, "constructor": false, "invocations": ["equals", "getAddress", "equalsIgnoreCase", "getNotation"]}, "repository": {"repo_id": 32357795, "url": "https://github.com/ontopia/ontopia", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 35, "size": 68637, "license": "licensed"}}