{"test_class": {"identifier": "HerdThreadHelperTest", "superclass": "extends AbstractCoreTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private HerdThreadHelper herdThreadHelper;", "modifier": "@Autowired\n    private", "type": "HerdThreadHelper", "declarator": "herdThreadHelper", "var_name": "herdThreadHelper"}], "file": "herd-code/herd-core/src/test/java/org/finra/herd/core/helper/HerdThreadHelperTest.java"}, "test_case": {"identifier": "testSleep", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSleep() throws Exception\n    {\n        // Sleep for 1 second\n        herdThreadHelper.sleep(1 * 1000L);\n\n        // Passing null should result in Exception that is eaten and logged\n\n        executeWithoutLogging(HerdThreadHelper.class, new Command()\n        {\n            @Override\n            public void execute() throws Exception\n            {\n                (new HerdThreadHelper()).sleep(null);\n            }\n        });\n    }", "signature": "void testSleep()", "full_signature": "@Test public void testSleep()", "class_method_signature": "HerdThreadHelperTest.testSleep()", "testcase": true, "constructor": false, "invocations": ["sleep", "executeWithoutLogging", "sleep"]}, "focal_class": {"identifier": "HerdThreadHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(HerdThreadHelper.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(HerdThreadHelper.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "sleep", "parameters": "(Long millis)", "modifiers": "public", "return": "void", "signature": "void sleep(Long millis)", "full_signature": "public void sleep(Long millis)", "class_method_signature": "HerdThreadHelper.sleep(Long millis)", "testcase": false, "constructor": false}, {"identifier": "executeAsync", "parameters": "(Runnable runnable)", "modifiers": "@Async public", "return": "void", "signature": "void executeAsync(Runnable runnable)", "full_signature": "@Async public void executeAsync(Runnable runnable)", "class_method_signature": "HerdThreadHelper.executeAsync(Runnable runnable)", "testcase": false, "constructor": false}], "file": "herd-code/herd-core/src/main/java/org/finra/herd/core/helper/HerdThreadHelper.java"}, "focal_method": {"identifier": "sleep", "parameters": "(Long millis)", "modifiers": "public", "return": "void", "body": "public void sleep(Long millis)\n    {\n        try\n        {\n            Thread.sleep(millis);\n        }\n        catch (Exception e)\n        {\n            // Don't do anything since this is just a sleep.\n            LOGGER.warn(\"Couldn't sleep for \" + millis + \" milliseconds.\", e);\n        }\n    }", "signature": "void sleep(Long millis)", "full_signature": "public void sleep(Long millis)", "class_method_signature": "HerdThreadHelper.sleep(Long millis)", "testcase": false, "constructor": false, "invocations": ["sleep", "warn"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}