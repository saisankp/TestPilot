{"test_class": {"identifier": "UpdateSerializerTest", "superclass": "", "interfaces": "", "fields": [], "file": "stardao-core/src/test/java/io/stardog/stardao/jackson/UpdateSerializerTest.java"}, "test_case": {"identifier": "serialize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void serialize() throws Exception {\n        Update<TestModel> update = Update.of(TestModel.builder()\n                .email(\"test@example.com\")\n                .birthday(LocalDate.of(2017, 3, 1))\n                .name(\"Test\")\n                .build(),\n                ImmutableSet.of(\"email\", \"birthday\"),\n                ImmutableSet.of(\"country\"));\n\n        ObjectMapper mapper = new ObjectMapper()\n                .registerModule(new JavaTimeModule());\n\n        String json = mapper.writeValueAsString(update);\n        assertEquals(\"{\\\"email\\\":\\\"test@example.com\\\",\\\"birthday\\\":\\\"2017-03-01\\\",\\\"country\\\":null}\", json);\n    }", "signature": "void serialize()", "full_signature": "@Test public void serialize()", "class_method_signature": "UpdateSerializerTest.serialize()", "testcase": true, "constructor": false, "invocations": ["of", "build", "name", "birthday", "email", "builder", "of", "of", "of", "registerModule", "writeValueAsString", "assertEquals"]}, "focal_class": {"identifier": "UpdateSerializer", "superclass": "extends JsonSerializer<Update<?>>", "interfaces": "", "fields": [], "methods": [{"identifier": "serialize", "parameters": "(Update<?> update, JsonGenerator jsonGen, SerializerProvider serializerProvider)", "modifiers": "@Override public", "return": "void", "signature": "void serialize(Update<?> update, JsonGenerator jsonGen, SerializerProvider serializerProvider)", "full_signature": "@Override public void serialize(Update<?> update, JsonGenerator jsonGen, SerializerProvider serializerProvider)", "class_method_signature": "UpdateSerializer.serialize(Update<?> update, JsonGenerator jsonGen, SerializerProvider serializerProvider)", "testcase": false, "constructor": false}], "file": "stardao-core/src/main/java/io/stardog/stardao/jackson/UpdateSerializer.java"}, "focal_method": {"identifier": "serialize", "parameters": "(Update<?> update, JsonGenerator jsonGen, SerializerProvider serializerProvider)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void serialize(Update<?> update, JsonGenerator jsonGen, SerializerProvider serializerProvider) throws IOException {\n        ObjectMapper mapper = (ObjectMapper) jsonGen.getCodec();\n        Map<String,Object> partial = mapper.convertValue(update.getPartial(), new TypeReference<Map<String,Object>>() { });\n\n        jsonGen.writeStartObject();\n        for (String field : update.getSetFields()) {\n            jsonGen.writeObjectField(field, partial.get(field));\n        }\n        for (String field : update.getRemoveFields()) {\n            jsonGen.writeNullField(field);\n        }\n\n        jsonGen.writeEndObject();\n    }", "signature": "void serialize(Update<?> update, JsonGenerator jsonGen, SerializerProvider serializerProvider)", "full_signature": "@Override public void serialize(Update<?> update, JsonGenerator jsonGen, SerializerProvider serializerProvider)", "class_method_signature": "UpdateSerializer.serialize(Update<?> update, JsonGenerator jsonGen, SerializerProvider serializerProvider)", "testcase": false, "constructor": false, "invocations": ["getCodec", "convertValue", "getPartial", "writeStartObject", "getSetFields", "writeObjectField", "get", "getRemoveFields", "writeNullField", "writeEndObject"]}, "repository": {"repo_id": 79784019, "url": "https://github.com/stardogventures/stardao", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 8, "size": 219, "license": "licensed"}}