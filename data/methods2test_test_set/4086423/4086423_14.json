{"test_class": {"identifier": "QtiXmlReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "qtiworks-jqtiplus/src/test/java/uk/ac/ed/ph/jqtiplus/reading/QtiXmlReaderTest.java"}, "test_case": {"identifier": "testReadNullLocator", "parameters": "()", "modifiers": "@Test(expected=IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected=IllegalArgumentException.class)\n    public void testReadNullLocator() throws Exception {\n        new QtiXmlReader().read(null, makeSystemId(\"choice.xml\"), false);\n    }", "signature": "void testReadNullLocator()", "full_signature": "@Test(expected=IllegalArgumentException.class) public void testReadNullLocator()", "class_method_signature": "QtiXmlReaderTest.testReadNullLocator()", "testcase": true, "constructor": false, "invocations": ["read", "makeSystemId"]}, "focal_class": {"identifier": "QtiXmlReader", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String JQTIPLUS_PARSER_RESOURCE_CLASSPATH_BASE_PATH = \"uk/ac/ed/ph/jqtiplus/xml-catalog\";", "modifier": "public static final", "type": "String", "declarator": "JQTIPLUS_PARSER_RESOURCE_CLASSPATH_BASE_PATH = \"uk/ac/ed/ph/jqtiplus/xml-catalog\"", "var_name": "JQTIPLUS_PARSER_RESOURCE_CLASSPATH_BASE_PATH"}, {"original_string": "public static final ResourceLocator JQTIPLUS_PARSER_RESOURCE_LOCATOR = new ClassPathHttpResourceLocator(JQTIPLUS_PARSER_RESOURCE_CLASSPATH_BASE_PATH);", "modifier": "public static final", "type": "ResourceLocator", "declarator": "JQTIPLUS_PARSER_RESOURCE_LOCATOR = new ClassPathHttpResourceLocator(JQTIPLUS_PARSER_RESOURCE_CLASSPATH_BASE_PATH)", "var_name": "JQTIPLUS_PARSER_RESOURCE_LOCATOR"}, {"original_string": "private final JqtiExtensionManager jqtiExtensionManager;", "modifier": "private final", "type": "JqtiExtensionManager", "declarator": "jqtiExtensionManager", "var_name": "jqtiExtensionManager"}, {"original_string": "private final XmlResourceReader xmlResourceReader;", "modifier": "private final", "type": "XmlResourceReader", "declarator": "xmlResourceReader", "var_name": "xmlResourceReader"}], "methods": [{"identifier": "QtiXmlReader", "parameters": "()", "modifiers": "public", "return": "", "signature": " QtiXmlReader()", "full_signature": "public  QtiXmlReader()", "class_method_signature": "QtiXmlReader.QtiXmlReader()", "testcase": false, "constructor": true}, {"identifier": "QtiXmlReader", "parameters": "(final JqtiExtensionManager jqtiExtensionManager)", "modifiers": "public", "return": "", "signature": " QtiXmlReader(final JqtiExtensionManager jqtiExtensionManager)", "full_signature": "public  QtiXmlReader(final JqtiExtensionManager jqtiExtensionManager)", "class_method_signature": "QtiXmlReader.QtiXmlReader(final JqtiExtensionManager jqtiExtensionManager)", "testcase": false, "constructor": true}, {"identifier": "QtiXmlReader", "parameters": "(final JqtiExtensionManager jqtiExtensionManager, final SchemaCache schemaCache)", "modifiers": "public", "return": "", "signature": " QtiXmlReader(final JqtiExtensionManager jqtiExtensionManager, final SchemaCache schemaCache)", "full_signature": "public  QtiXmlReader(final JqtiExtensionManager jqtiExtensionManager, final SchemaCache schemaCache)", "class_method_signature": "QtiXmlReader.QtiXmlReader(final JqtiExtensionManager jqtiExtensionManager, final SchemaCache schemaCache)", "testcase": false, "constructor": true}, {"identifier": "getJqtiExtensionManager", "parameters": "()", "modifiers": "public", "return": "JqtiExtensionManager", "signature": "JqtiExtensionManager getJqtiExtensionManager()", "full_signature": "public JqtiExtensionManager getJqtiExtensionManager()", "class_method_signature": "QtiXmlReader.getJqtiExtensionManager()", "testcase": false, "constructor": false}, {"identifier": "getSchemaCache", "parameters": "()", "modifiers": "public", "return": "SchemaCache", "signature": "SchemaCache getSchemaCache()", "full_signature": "public SchemaCache getSchemaCache()", "class_method_signature": "QtiXmlReader.getSchemaCache()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(final ResourceLocator inputResourceLocator, final URI systemId,\n            final boolean performSchemaValidation)", "modifiers": "public", "return": "XmlReadResult", "signature": "XmlReadResult read(final ResourceLocator inputResourceLocator, final URI systemId,\n            final boolean performSchemaValidation)", "full_signature": "public XmlReadResult read(final ResourceLocator inputResourceLocator, final URI systemId,\n            final boolean performSchemaValidation)", "class_method_signature": "QtiXmlReader.read(final ResourceLocator inputResourceLocator, final URI systemId,\n            final boolean performSchemaValidation)", "testcase": false, "constructor": false}, {"identifier": "createQtiObjectReader", "parameters": "(final ResourceLocator inputResourceLocator, final boolean schemaValidating)", "modifiers": "public", "return": "QtiObjectReader", "signature": "QtiObjectReader createQtiObjectReader(final ResourceLocator inputResourceLocator, final boolean schemaValidating)", "full_signature": "public QtiObjectReader createQtiObjectReader(final ResourceLocator inputResourceLocator, final boolean schemaValidating)", "class_method_signature": "QtiXmlReader.createQtiObjectReader(final ResourceLocator inputResourceLocator, final boolean schemaValidating)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "QtiXmlReader.toString()", "testcase": false, "constructor": false}], "file": "qtiworks-jqtiplus/src/main/java/uk/ac/ed/ph/jqtiplus/reading/QtiXmlReader.java"}, "focal_method": {"identifier": "read", "parameters": "(final ResourceLocator inputResourceLocator, final URI systemId,\n            final boolean performSchemaValidation)", "modifiers": "public", "return": "XmlReadResult", "body": "public XmlReadResult read(final ResourceLocator inputResourceLocator, final URI systemId,\n            final boolean performSchemaValidation)\n            throws XmlResourceNotFoundException {\n        Assert.notNull(inputResourceLocator, \"inputResourceLocator\");\n        Assert.notNull(systemId, \"systemId\");\n        final ResourceLocator entityResourceLocator = new ChainedResourceLocator(JQTIPLUS_PARSER_RESOURCE_LOCATOR, inputResourceLocator);\n        return xmlResourceReader.read(systemId, inputResourceLocator, entityResourceLocator, performSchemaValidation);\n    }", "signature": "XmlReadResult read(final ResourceLocator inputResourceLocator, final URI systemId,\n            final boolean performSchemaValidation)", "full_signature": "public XmlReadResult read(final ResourceLocator inputResourceLocator, final URI systemId,\n            final boolean performSchemaValidation)", "class_method_signature": "QtiXmlReader.read(final ResourceLocator inputResourceLocator, final URI systemId,\n            final boolean performSchemaValidation)", "testcase": false, "constructor": false, "invocations": ["notNull", "notNull", "read"]}, "repository": {"repo_id": 4086423, "url": "https://github.com/davemckain/qtiworks", "language": "Java", "is_fork": false, "fork_count": 48, "stargazer_count": 59, "size": 15696, "license": "licensed"}}