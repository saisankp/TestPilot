{"test_class": {"identifier": "MrzTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String valid_id_mrz =   \"I<NLDCI00383F12999999990<<<<<8\\n\" +\n                                    \"7208148F1108268NLD<<<<<<<<<<<2\\n\" +\n                                    \"VAN<DER<STEEN<<MARIANNE<LOUISE\";", "modifier": "private", "type": "String", "declarator": "valid_id_mrz =   \"I<NLDCI00383F12999999990<<<<<8\\n\" +\n                                    \"7208148F1108268NLD<<<<<<<<<<<2\\n\" +\n                                    \"VAN<DER<STEEN<<MARIANNE<LOUISE\"", "var_name": "valid_id_mrz"}, {"original_string": "private String valid_id_doc_num = \"CI00383F1\";", "modifier": "private", "type": "String", "declarator": "valid_id_doc_num = \"CI00383F1\"", "var_name": "valid_id_doc_num"}, {"original_string": "private String valid_id_data_of_birth = \"720814\";", "modifier": "private", "type": "String", "declarator": "valid_id_data_of_birth = \"720814\"", "var_name": "valid_id_data_of_birth"}, {"original_string": "private String valid_id_expiry_data = \"110826\";", "modifier": "private", "type": "String", "declarator": "valid_id_expiry_data = \"110826\"", "var_name": "valid_id_expiry_data"}, {"original_string": "private String invalid_id_mrz =   \"I<NLDCI00383F12999999990<<<<<8\\n\" +\n                                        \"7208148F11T8268NLD<<<<<<<<<<<2\\n\" +\n                                        \"VAN<DER<STEEN<<MARIANNE<LOUISE\";", "modifier": "private", "type": "String", "declarator": "invalid_id_mrz =   \"I<NLDCI00383F12999999990<<<<<8\\n\" +\n                                        \"7208148F11T8268NLD<<<<<<<<<<<2\\n\" +\n                                        \"VAN<DER<STEEN<<MARIANNE<LOUISE\"", "var_name": "invalid_id_mrz"}, {"original_string": "private String valid_passport_mrz = \"P<NLDBLEH<<JAN<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n\" +\n                                        \"GHD777O861NLD9005226M18062657542648264<<<<04\";", "modifier": "private", "type": "String", "declarator": "valid_passport_mrz = \"P<NLDBLEH<<JAN<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n\" +\n                                        \"GHD777O861NLD9005226M18062657542648264<<<<04\"", "var_name": "valid_passport_mrz"}, {"original_string": "private String valid_pass_doc_num = \"GHD777O86\";", "modifier": "private", "type": "String", "declarator": "valid_pass_doc_num = \"GHD777O86\"", "var_name": "valid_pass_doc_num"}, {"original_string": "private String valid_pass_data_of_birth = \"900522\";", "modifier": "private", "type": "String", "declarator": "valid_pass_data_of_birth = \"900522\"", "var_name": "valid_pass_data_of_birth"}, {"original_string": "private String valid_pass_expiry_data = \"180626\";", "modifier": "private", "type": "String", "declarator": "valid_pass_expiry_data = \"180626\"", "var_name": "valid_pass_expiry_data"}, {"original_string": "private String invalid_passport_mrz = \"P<UTOERIKSSON<<ANNA<MARIA<<<<<<<<<<<<<<<<<<<\\n\"+\n                                            \"L898902C<3UTO6918061F9406236ZE184226B<<<<<14\";", "modifier": "private", "type": "String", "declarator": "invalid_passport_mrz = \"P<UTOERIKSSON<<ANNA<MARIA<<<<<<<<<<<<<<<<<<<\\n\"+\n                                            \"L898902C<3UTO6918061F9406236ZE184226B<<<<<14\"", "var_name": "invalid_passport_mrz"}], "file": "app/src/test/java/com/digitalvotingpass/ocrscanner/MrzTest.java"}, "test_case": {"identifier": "empty_string_is_invalid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void empty_string_is_invalid() throws Exception {\n        Mrz invalid = new Mrz(\"\");\n        assertFalse(invalid.valid());\n    }", "signature": "void empty_string_is_invalid()", "full_signature": "@Test public void empty_string_is_invalid()", "class_method_signature": "MrzTest.empty_string_is_invalid()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "valid"]}, "focal_class": {"identifier": "Mrz", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int[] PASSPORT_DOCNO_INDICES = new int[]{0, 9};", "modifier": "private static final", "type": "int[]", "declarator": "PASSPORT_DOCNO_INDICES = new int[]{0, 9}", "var_name": "PASSPORT_DOCNO_INDICES"}, {"original_string": "private static final int[] PASSPORT_DOB_INDICES = new int[]{13, 19};", "modifier": "private static final", "type": "int[]", "declarator": "PASSPORT_DOB_INDICES = new int[]{13, 19}", "var_name": "PASSPORT_DOB_INDICES"}, {"original_string": "private static final int[] PASSPORT_EXP_INDICES = new int[]{21, 27};", "modifier": "private static final", "type": "int[]", "declarator": "PASSPORT_EXP_INDICES = new int[]{21, 27}", "var_name": "PASSPORT_EXP_INDICES"}, {"original_string": "private static final int[] ID_DOCNO_INDICES = new int[]{5, 14};", "modifier": "private static final", "type": "int[]", "declarator": "ID_DOCNO_INDICES = new int[]{5, 14}", "var_name": "ID_DOCNO_INDICES"}, {"original_string": "private static final int[] ID_DOB_INDICES = new int[]{0, 6};", "modifier": "private static final", "type": "int[]", "declarator": "ID_DOB_INDICES = new int[]{0, 6}", "var_name": "ID_DOB_INDICES"}, {"original_string": "private static final int[] ID_EXP_INDICES = new int[]{8, 14};", "modifier": "private static final", "type": "int[]", "declarator": "ID_EXP_INDICES = new int[]{8, 14}", "var_name": "ID_EXP_INDICES"}, {"original_string": "private static final int[] PASSPORT_PERSONAL_NUMBER_INDICES = new int[]{28, 42};", "modifier": "private static final", "type": "int[]", "declarator": "PASSPORT_PERSONAL_NUMBER_INDICES = new int[]{28, 42}", "var_name": "PASSPORT_PERSONAL_NUMBER_INDICES"}, {"original_string": "private String mrz;", "modifier": "private", "type": "String", "declarator": "mrz", "var_name": "mrz"}], "methods": [{"identifier": "Mrz", "parameters": "(String mrz)", "modifiers": "public", "return": "", "signature": " Mrz(String mrz)", "full_signature": "public  Mrz(String mrz)", "class_method_signature": "Mrz.Mrz(String mrz)", "testcase": false, "constructor": true}, {"identifier": "cleanMRZString", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void cleanMRZString()", "full_signature": "private void cleanMRZString()", "class_method_signature": "Mrz.cleanMRZString()", "testcase": false, "constructor": false}, {"identifier": "checkSum", "parameters": "(String string, int[][] ranges, int checkIndex)", "modifiers": "private static", "return": "boolean", "signature": "boolean checkSum(String string, int[][] ranges, int checkIndex)", "full_signature": "private static boolean checkSum(String string, int[][] ranges, int checkIndex)", "class_method_signature": "Mrz.checkSum(String string, int[][] ranges, int checkIndex)", "testcase": false, "constructor": false}, {"identifier": "getPrettyData", "parameters": "()", "modifiers": "public", "return": "DocumentData", "signature": "DocumentData getPrettyData()", "full_signature": "public DocumentData getPrettyData()", "class_method_signature": "Mrz.getPrettyData()", "testcase": false, "constructor": false}, {"identifier": "valid", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean valid()", "full_signature": "public boolean valid()", "class_method_signature": "Mrz.valid()", "testcase": false, "constructor": false}, {"identifier": "checkIDMRZ", "parameters": "(String mrz)", "modifiers": "private", "return": "boolean", "signature": "boolean checkIDMRZ(String mrz)", "full_signature": "private boolean checkIDMRZ(String mrz)", "class_method_signature": "Mrz.checkIDMRZ(String mrz)", "testcase": false, "constructor": false}, {"identifier": "checkPassportMRZ", "parameters": "(String mrz)", "modifiers": "private", "return": "boolean", "signature": "boolean checkPassportMRZ(String mrz)", "full_signature": "private boolean checkPassportMRZ(String mrz)", "class_method_signature": "Mrz.checkPassportMRZ(String mrz)", "testcase": false, "constructor": false}, {"identifier": "getText", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getText()", "full_signature": "public String getText()", "class_method_signature": "Mrz.getText()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/digitalvotingpass/ocrscanner/Mrz.java"}, "focal_method": {"identifier": "valid", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean valid() {\n        try {\n            if (mrz.startsWith(\"P\")) {\n                return checkPassportMRZ(mrz);\n            } else if (mrz.startsWith(\"I\")){\n                return checkIDMRZ(mrz);\n            }\n        } catch (Exception ignored) {\n            // Probably an outOfBounds indicating the format was incorrect\n        }\n        return false;\n    }", "signature": "boolean valid()", "full_signature": "public boolean valid()", "class_method_signature": "Mrz.valid()", "testcase": false, "constructor": false, "invocations": ["startsWith", "checkPassportMRZ", "startsWith", "checkIDMRZ"]}, "repository": {"repo_id": 89679757, "url": "https://github.com/digital-voting-pass/polling-station-app", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 34, "size": 58794, "license": "licensed"}}