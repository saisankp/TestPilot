{"test_class": {"identifier": "GroupDAOTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Inject DSLContext jooqContext;", "modifier": "@Inject", "type": "DSLContext", "declarator": "jooqContext", "var_name": "jooqContext"}, {"original_string": "@Inject GroupDAOFactory groupDAOFactory;", "modifier": "@Inject", "type": "GroupDAOFactory", "declarator": "groupDAOFactory", "var_name": "groupDAOFactory"}, {"original_string": "Group group1, group2;", "modifier": "", "type": "Group", "declarator": "group1", "var_name": "group1"}, {"original_string": "GroupDAO groupDAO;", "modifier": "", "type": "GroupDAO", "declarator": "groupDAO", "var_name": "groupDAO"}], "file": "server/src/test/java/keywhiz/service/daos/GroupDAOTest.java"}, "test_case": {"identifier": "getGroups", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void getGroups() {\n    assertThat(groupDAO.getGroups()).containsOnly(group1, group2);\n  }", "signature": "void getGroups()", "full_signature": "@Test public void getGroups()", "class_method_signature": "GroupDAOTest.getGroups()", "testcase": true, "constructor": false, "invocations": ["containsOnly", "assertThat", "getGroups"]}, "focal_class": {"identifier": "GroupDAO", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final DSLContext dslContext;", "modifier": "private final", "type": "DSLContext", "declarator": "dslContext", "var_name": "dslContext"}, {"original_string": "private final GroupMapper groupMapper;", "modifier": "private final", "type": "GroupMapper", "declarator": "groupMapper", "var_name": "groupMapper"}, {"original_string": "private final ObjectMapper mapper;", "modifier": "private final", "type": "ObjectMapper", "declarator": "mapper", "var_name": "mapper"}], "methods": [{"identifier": "GroupDAO", "parameters": "(DSLContext dslContext, GroupMapper groupMapper, ObjectMapper mapper)", "modifiers": "private", "return": "", "signature": " GroupDAO(DSLContext dslContext, GroupMapper groupMapper, ObjectMapper mapper)", "full_signature": "private  GroupDAO(DSLContext dslContext, GroupMapper groupMapper, ObjectMapper mapper)", "class_method_signature": "GroupDAO.GroupDAO(DSLContext dslContext, GroupMapper groupMapper, ObjectMapper mapper)", "testcase": false, "constructor": true}, {"identifier": "createGroup", "parameters": "(String name, String creator, String description, ImmutableMap<String, String> metadata)", "modifiers": "public", "return": "long", "signature": "long createGroup(String name, String creator, String description, ImmutableMap<String, String> metadata)", "full_signature": "public long createGroup(String name, String creator, String description, ImmutableMap<String, String> metadata)", "class_method_signature": "GroupDAO.createGroup(String name, String creator, String description, ImmutableMap<String, String> metadata)", "testcase": false, "constructor": false}, {"identifier": "deleteGroup", "parameters": "(Group group)", "modifiers": "public", "return": "void", "signature": "void deleteGroup(Group group)", "full_signature": "public void deleteGroup(Group group)", "class_method_signature": "GroupDAO.deleteGroup(Group group)", "testcase": false, "constructor": false}, {"identifier": "getGroup", "parameters": "(String name)", "modifiers": "public", "return": "Optional<Group>", "signature": "Optional<Group> getGroup(String name)", "full_signature": "public Optional<Group> getGroup(String name)", "class_method_signature": "GroupDAO.getGroup(String name)", "testcase": false, "constructor": false}, {"identifier": "getGroupById", "parameters": "(long id)", "modifiers": "public", "return": "Optional<Group>", "signature": "Optional<Group> getGroupById(long id)", "full_signature": "public Optional<Group> getGroupById(long id)", "class_method_signature": "GroupDAO.getGroupById(long id)", "testcase": false, "constructor": false}, {"identifier": "getGroups", "parameters": "()", "modifiers": "public", "return": "ImmutableSet<Group>", "signature": "ImmutableSet<Group> getGroups()", "full_signature": "public ImmutableSet<Group> getGroups()", "class_method_signature": "GroupDAO.getGroups()", "testcase": false, "constructor": false}], "file": "server/src/main/java/keywhiz/service/daos/GroupDAO.java"}, "focal_method": {"identifier": "getGroups", "parameters": "()", "modifiers": "public", "return": "ImmutableSet<Group>", "body": "public ImmutableSet<Group> getGroups() {\n    List<Group> r = dslContext.selectFrom(GROUPS).fetch().map(groupMapper);\n    return ImmutableSet.copyOf(r);\n  }", "signature": "ImmutableSet<Group> getGroups()", "full_signature": "public ImmutableSet<Group> getGroups()", "class_method_signature": "GroupDAO.getGroups()", "testcase": false, "constructor": false, "invocations": ["map", "fetch", "selectFrom", "copyOf"]}, "repository": {"repo_id": 32866430, "url": "https://github.com/square/keywhiz", "stars": 2186, "created": "3/25/2015 1:31:39 PM +00:00", "updates": "2020-01-24T18:57:02+00:00", "fork": "False", "license": "licensed"}}