{"test_class": {"identifier": "OadrXMLSignatureHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String RID_ID = \"rid\";", "modifier": "private static final", "type": "String", "declarator": "RID_ID = \"rid\"", "var_name": "RID_ID"}, {"original_string": "private static final String REPORT_SPECIFIER_ID = \"reportSpecifierId\";", "modifier": "private static final", "type": "String", "declarator": "REPORT_SPECIFIER_ID = \"reportSpecifierId\"", "var_name": "REPORT_SPECIFIER_ID"}, {"original_string": "private static final String REPORT_REQUEST_ID = \"reportRequestId\";", "modifier": "private static final", "type": "String", "declarator": "REPORT_REQUEST_ID = \"reportRequestId\"", "var_name": "REPORT_REQUEST_ID"}, {"original_string": "private static final String REPORT_ID = \"reportId\";", "modifier": "private static final", "type": "String", "declarator": "REPORT_ID = \"reportId\"", "var_name": "REPORT_ID"}, {"original_string": "private static final String OADR20b_PROFILE_NAME = \"2.0b\";", "modifier": "private static final", "type": "String", "declarator": "OADR20b_PROFILE_NAME = \"2.0b\"", "var_name": "OADR20b_PROFILE_NAME"}, {"original_string": "private static final String VTN_ID = \"vtn\";", "modifier": "private static final", "type": "String", "declarator": "VTN_ID = \"vtn\"", "var_name": "VTN_ID"}, {"original_string": "private static final String REGISTRATION_ID = \"registrationId\";", "modifier": "private static final", "type": "String", "declarator": "REGISTRATION_ID = \"registrationId\"", "var_name": "REGISTRATION_ID"}, {"original_string": "private static final String EVENT_ID = \"eventId\";", "modifier": "private static final", "type": "String", "declarator": "EVENT_ID = \"eventId\"", "var_name": "EVENT_ID"}, {"original_string": "private static final String OPT_ID = \"optId\";", "modifier": "private static final", "type": "String", "declarator": "OPT_ID = \"optId\"", "var_name": "OPT_ID"}, {"original_string": "private static final String NONCE = \"nonce\";", "modifier": "private static final", "type": "String", "declarator": "NONCE = \"nonce\"", "var_name": "NONCE"}, {"original_string": "private static final String VEN_ID = \"venId\";", "modifier": "private static final", "type": "String", "declarator": "VEN_ID = \"venId\"", "var_name": "VEN_ID"}, {"original_string": "private static final String REQUEST_ID = \"REQ_12345\";", "modifier": "private static final", "type": "String", "declarator": "REQUEST_ID = \"REQ_12345\"", "var_name": "REQUEST_ID"}, {"original_string": "private static final String PRIVATE_KEY_FILE_PATH = \"src/test/resources/rsa/TEST_RSA_VTN_17011882657_privkey.pem\";", "modifier": "private static final", "type": "String", "declarator": "PRIVATE_KEY_FILE_PATH = \"src/test/resources/rsa/TEST_RSA_VTN_17011882657_privkey.pem\"", "var_name": "PRIVATE_KEY_FILE_PATH"}, {"original_string": "private static final String CERTIFICATE_FILE_PATH = \"src/test/resources/rsa/TEST_RSA_VTN_17011882657_cert.pem\";", "modifier": "private static final", "type": "String", "declarator": "CERTIFICATE_FILE_PATH = \"src/test/resources/rsa/TEST_RSA_VTN_17011882657_cert.pem\"", "var_name": "CERTIFICATE_FILE_PATH"}, {"original_string": "private PrivateKey privateKey;", "modifier": "private", "type": "PrivateKey", "declarator": "privateKey", "var_name": "privateKey"}, {"original_string": "private X509Certificate certificate;", "modifier": "private", "type": "X509Certificate", "declarator": "certificate", "var_name": "certificate"}, {"original_string": "private Oadr20bJAXBContext jaxbContext;", "modifier": "private", "type": "Oadr20bJAXBContext", "declarator": "jaxbContext", "var_name": "jaxbContext"}], "file": "OpenADRModel20b/src/test/java/com/avob/openadr/model/oadr20b/xmlsignature/OadrXMLSignatureHandlerTest.java"}, "test_case": {"identifier": "testNoSignature", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testNoSignature() throws Oadr20bXMLSignatureException, Oadr20bUnmarshalException {\n\n\t\tOadrRequestEventType oadrRequestEventType = Oadr20bEiEventBuilders\n\t\t\t\t.newOadrRequestEventBuilder(\"ven1\", \"requestId\").withReplyLimit(12).build();\n\t\tOadrPayload createOadrPayload = Oadr20bFactory.createOadrPayload(\"mypayload\", oadrRequestEventType);\n\n\t\tString content = oadrPayloadToString(createOadrPayload);\n\n\t\tboolean exception = false;\n\t\ttry {\n\t\t\tOadrPayload unmarshal = jaxbContext.unmarshal(content, OadrPayload.class, true);\n\t\t\tOadrXMLSignatureHandler.validate(content, unmarshal, 0, -10);\n\t\t} catch (Oadr20bXMLSignatureValidationException e) {\n\t\t\texception = true;\n\t\t}\n\t\tassertTrue(exception);\n\n\t}", "signature": "void testNoSignature()", "full_signature": "@Test public void testNoSignature()", "class_method_signature": "OadrXMLSignatureHandlerTest.testNoSignature()", "testcase": true, "constructor": false, "invocations": ["build", "withReplyLimit", "newOadrRequestEventBuilder", "createOadrPayload", "oadrPayloadToString", "unmarshal", "validate", "assertTrue"]}, "focal_class": {"identifier": "OadrXMLSignatureHandler", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String RSA_SHA256_ALGORITHM = \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\";", "modifier": "public static final", "type": "String", "declarator": "RSA_SHA256_ALGORITHM = \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"", "var_name": "RSA_SHA256_ALGORITHM"}, {"original_string": "public static final String ECDSA_SHA256_ALGORITHM = \"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256\";", "modifier": "public static final", "type": "String", "declarator": "ECDSA_SHA256_ALGORITHM = \"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256\"", "var_name": "ECDSA_SHA256_ALGORITHM"}, {"original_string": "private static final Oadr20bJAXBContext jaxbContext;", "modifier": "private static final", "type": "Oadr20bJAXBContext", "declarator": "jaxbContext", "var_name": "jaxbContext"}, {"original_string": "private static final JAXBContext replayProtectContext;", "modifier": "private static final", "type": "JAXBContext", "declarator": "replayProtectContext", "var_name": "replayProtectContext"}, {"original_string": "private static final String SIGNEDOBJECT_PAYLOAD_ID = \"signedObject\";", "modifier": "private static final", "type": "String", "declarator": "SIGNEDOBJECT_PAYLOAD_ID = \"signedObject\"", "var_name": "SIGNEDOBJECT_PAYLOAD_ID"}, {"original_string": "private static final String SIGNATUREOBJECT_PAYLOAD_ID = \"prop\";", "modifier": "private static final", "type": "String", "declarator": "SIGNATUREOBJECT_PAYLOAD_ID = \"prop\"", "var_name": "SIGNATUREOBJECT_PAYLOAD_ID"}], "methods": [{"identifier": "OadrXMLSignatureHandler", "parameters": "()", "modifiers": "private", "return": "", "signature": " OadrXMLSignatureHandler()", "full_signature": "private  OadrXMLSignatureHandler()", "class_method_signature": "OadrXMLSignatureHandler.OadrXMLSignatureHandler()", "testcase": false, "constructor": true}, {"identifier": "asElement", "parameters": "(List<Object> list, Class<T> klass)", "modifiers": "private static", "return": "List<T>", "signature": "List<T> asElement(List<Object> list, Class<T> klass)", "full_signature": "private static List<T> asElement(List<Object> list, Class<T> klass)", "class_method_signature": "OadrXMLSignatureHandler.asElement(List<Object> list, Class<T> klass)", "testcase": false, "constructor": false}, {"identifier": "validateReplayProtect", "parameters": "(OadrPayload payload, long nowDate, long millisecondAcceptedDelay)", "modifiers": "private static", "return": "void", "signature": "void validateReplayProtect(OadrPayload payload, long nowDate, long millisecondAcceptedDelay)", "full_signature": "private static void validateReplayProtect(OadrPayload payload, long nowDate, long millisecondAcceptedDelay)", "class_method_signature": "OadrXMLSignatureHandler.validateReplayProtect(OadrPayload payload, long nowDate, long millisecondAcceptedDelay)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "(String raw, OadrPayload payload, long nowDate, long millisecondAcceptedDelay)", "modifiers": "public static", "return": "void", "signature": "void validate(String raw, OadrPayload payload, long nowDate, long millisecondAcceptedDelay)", "full_signature": "public static void validate(String raw, OadrPayload payload, long nowDate, long millisecondAcceptedDelay)", "class_method_signature": "OadrXMLSignatureHandler.validate(String raw, OadrPayload payload, long nowDate, long millisecondAcceptedDelay)", "testcase": false, "constructor": false}, {"identifier": "sign", "parameters": "(Object oadrObject, PrivateKey privateKey, X509Certificate certificate, String nonce,\n\t\t\tLong createdtimestamp)", "modifiers": "public static", "return": "String", "signature": "String sign(Object oadrObject, PrivateKey privateKey, X509Certificate certificate, String nonce,\n\t\t\tLong createdtimestamp)", "full_signature": "public static String sign(Object oadrObject, PrivateKey privateKey, X509Certificate certificate, String nonce,\n\t\t\tLong createdtimestamp)", "class_method_signature": "OadrXMLSignatureHandler.sign(Object oadrObject, PrivateKey privateKey, X509Certificate certificate, String nonce,\n\t\t\tLong createdtimestamp)", "testcase": false, "constructor": false}, {"identifier": "sign", "parameters": "(OadrPayload payload, PrivateKey privateKey, X509Certificate certificate, String nonce,\n\t\t\tLong createdtimestamp)", "modifiers": "private static", "return": "String", "signature": "String sign(OadrPayload payload, PrivateKey privateKey, X509Certificate certificate, String nonce,\n\t\t\tLong createdtimestamp)", "full_signature": "private static String sign(OadrPayload payload, PrivateKey privateKey, X509Certificate certificate, String nonce,\n\t\t\tLong createdtimestamp)", "class_method_signature": "OadrXMLSignatureHandler.sign(OadrPayload payload, PrivateKey privateKey, X509Certificate certificate, String nonce,\n\t\t\tLong createdtimestamp)", "testcase": false, "constructor": false}], "file": "OpenADRModel20b/src/main/java/com/avob/openadr/model/oadr20b/xmlsignature/OadrXMLSignatureHandler.java"}, "focal_method": {"identifier": "validate", "parameters": "(String raw, OadrPayload payload, long nowDate, long millisecondAcceptedDelay)", "modifiers": "public static", "return": "void", "body": "public static void validate(String raw, OadrPayload payload, long nowDate, long millisecondAcceptedDelay)\n\t\t\tthrows Oadr20bXMLSignatureValidationException {\n\n\t\tvalidateReplayProtect(payload, nowDate, millisecondAcceptedDelay);\n\n\t\tDocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n\t\tdbf.setNamespaceAware(true);\n\t\tDocumentBuilder builder = null;\n\t\tDocument doc;\n\t\ttry {\n\t\t\tbuilder = dbf.newDocumentBuilder();\n\t\t\tdoc = builder.parse(new InputSource(new StringReader(raw)));\n\t\t} catch (ParserConfigurationException | SAXException | IOException e) {\n\t\t\tthrow new Oadr20bXMLSignatureValidationException(e);\n\t\t}\n\n\t\tXMLSignatureFactory fac = XMLSignatureFactory.getInstance(\"DOM\");\n\n\t\tNodeList nl = doc.getElementsByTagNameNS(XMLSignature.XMLNS, \"Signature\");\n\t\tif (nl.getLength() == 0) {\n\t\t\tthrow new Oadr20bXMLSignatureValidationException(\"Cannot find Signature element\");\n\t\t}\n\n\t\tDOMValidateContext valContext = new DOMValidateContext(new KeyValueKeySelector(), nl.item(0));\n\n\t\tXMLSignature signature;\n\t\ttry {\n\t\t\tsignature = fac.unmarshalXMLSignature(valContext);\n\t\t} catch (MarshalException e) {\n\t\t\tthrow new Oadr20bXMLSignatureValidationException(e);\n\t\t}\n\t\ttry {\n\t\t\tboolean validate = signature.validate(valContext);\n\t\t\tif (!validate) {\n\t\t\t\tif (!signature.getSignatureValue().validate(valContext)) {\n\t\t\t\t\tthrow new Oadr20bXMLSignatureValidationException(\"XMLSignature SignatureValue validation fail\");\n\t\t\t\t}\n\t\t\t\tfor (Object object : signature.getSignedInfo().getReferences()) {\n\t\t\t\t\tif (object instanceof Reference) {\n\t\t\t\t\t\tReference ref = (Reference) object;\n\t\t\t\t\t\tif (!ref.validate(valContext)) {\n\t\t\t\t\t\t\tthrow new Oadr20bXMLSignatureValidationException(\n\t\t\t\t\t\t\t\t\t\"XMLSignature Reference uri: \" + ref.getURI() + \" validation fail\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (XMLSignatureException e) {\n\t\t\tthrow new Oadr20bXMLSignatureValidationException(e);\n\t\t}\n\n\t}", "signature": "void validate(String raw, OadrPayload payload, long nowDate, long millisecondAcceptedDelay)", "full_signature": "public static void validate(String raw, OadrPayload payload, long nowDate, long millisecondAcceptedDelay)", "class_method_signature": "OadrXMLSignatureHandler.validate(String raw, OadrPayload payload, long nowDate, long millisecondAcceptedDelay)", "testcase": false, "constructor": false, "invocations": ["validateReplayProtect", "newInstance", "setNamespaceAware", "newDocumentBuilder", "parse", "getInstance", "getElementsByTagNameNS", "getLength", "item", "unmarshalXMLSignature", "validate", "validate", "getSignatureValue", "getReferences", "getSignedInfo", "validate", "getURI"]}, "repository": {"repo_id": 169761438, "url": "https://github.com/avob/OpenADR", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 55915, "license": "licensed"}}