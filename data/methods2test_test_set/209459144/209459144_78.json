{"test_class": {"identifier": "MetaStoreRestApiTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static MetaStoreRestApi metaStoreApi;", "modifier": "private static", "type": "MetaStoreRestApi", "declarator": "metaStoreApi", "var_name": "metaStoreApi"}], "file": "submarine-server/server-core/src/test/java/org/apache/submarine/server/rest/MetaStoreRestApiTest.java"}, "test_case": {"identifier": "getAllTables", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void getAllTables() {\n    Response response = metaStoreApi.listTables(\"testdb\");\n    assertEquals(response.getStatus(), Response.Status.OK.getStatusCode());\n    assertTrue(((String) response.getEntity()).contains(\"testtable\"));\n  }", "signature": "void getAllTables()", "full_signature": "@Test public void getAllTables()", "class_method_signature": "MetaStoreRestApiTest.getAllTables()", "testcase": true, "constructor": false, "invocations": ["listTables", "assertEquals", "getStatus", "getStatusCode", "assertTrue", "contains", "getEntity"]}, "focal_class": {"identifier": "MetaStoreRestApi", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(MetaStoreRestApi.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(MetaStoreRestApi.class)", "var_name": "LOG"}, {"original_string": "private static final Gson gson = new Gson();", "modifier": "private static final", "type": "Gson", "declarator": "gson = new Gson()", "var_name": "gson"}, {"original_string": "private static final SubmarineConfiguration submarineConf = SubmarineConfiguration.getInstance();", "modifier": "private static final", "type": "SubmarineConfiguration", "declarator": "submarineConf = SubmarineConfiguration.getInstance()", "var_name": "submarineConf"}, {"original_string": "private SubmarineMetaStore submarineMetaStore = new SubmarineMetaStore(submarineConf);", "modifier": "private", "type": "SubmarineMetaStore", "declarator": "submarineMetaStore = new SubmarineMetaStore(submarineConf)", "var_name": "submarineMetaStore"}], "methods": [{"identifier": "MetaStoreRestApi", "parameters": "()", "modifiers": "@Inject public", "return": "", "signature": " MetaStoreRestApi()", "full_signature": "@Inject public  MetaStoreRestApi()", "class_method_signature": "MetaStoreRestApi.MetaStoreRestApi()", "testcase": false, "constructor": true}, {"identifier": "createDatabase", "parameters": "(@QueryParam(\"database\") String databaseJson)", "modifiers": "@POST @Path(\"/database/create\") @SubmarineApi public", "return": "Response", "signature": "Response createDatabase(@QueryParam(\"database\") String databaseJson)", "full_signature": "@POST @Path(\"/database/create\") @SubmarineApi public Response createDatabase(@QueryParam(\"database\") String databaseJson)", "class_method_signature": "MetaStoreRestApi.createDatabase(@QueryParam(\"database\") String databaseJson)", "testcase": false, "constructor": false}, {"identifier": "createTable", "parameters": "(@QueryParam(\"database\") String tableJson)", "modifiers": "@POST @Path(\"/table/create\") @SubmarineApi public", "return": "Response", "signature": "Response createTable(@QueryParam(\"database\") String tableJson)", "full_signature": "@POST @Path(\"/table/create\") @SubmarineApi public Response createTable(@QueryParam(\"database\") String tableJson)", "class_method_signature": "MetaStoreRestApi.createTable(@QueryParam(\"database\") String tableJson)", "testcase": false, "constructor": false}, {"identifier": "getDatabaseCount", "parameters": "()", "modifiers": "@GET @Path(\"/database/count\") @SubmarineApi public", "return": "Response", "signature": "Response getDatabaseCount()", "full_signature": "@GET @Path(\"/database/count\") @SubmarineApi public Response getDatabaseCount()", "class_method_signature": "MetaStoreRestApi.getDatabaseCount()", "testcase": false, "constructor": false}, {"identifier": "listDatabases", "parameters": "()", "modifiers": "@GET @Path(\"/database/list\") @SubmarineApi public", "return": "Response", "signature": "Response listDatabases()", "full_signature": "@GET @Path(\"/database/list\") @SubmarineApi public Response listDatabases()", "class_method_signature": "MetaStoreRestApi.listDatabases()", "testcase": false, "constructor": false}, {"identifier": "getDatabase", "parameters": "(@QueryParam(\"database\") String name)", "modifiers": "@GET @Path(\"/database\") @SubmarineApi public", "return": "Response", "signature": "Response getDatabase(@QueryParam(\"database\") String name)", "full_signature": "@GET @Path(\"/database\") @SubmarineApi public Response getDatabase(@QueryParam(\"database\") String name)", "class_method_signature": "MetaStoreRestApi.getDatabase(@QueryParam(\"database\") String name)", "testcase": false, "constructor": false}, {"identifier": "dropDatabase", "parameters": "(@QueryParam(\"database\") String name)", "modifiers": "@DELETE @Path(\"/database\") @SubmarineApi public", "return": "Response", "signature": "Response dropDatabase(@QueryParam(\"database\") String name)", "full_signature": "@DELETE @Path(\"/database\") @SubmarineApi public Response dropDatabase(@QueryParam(\"database\") String name)", "class_method_signature": "MetaStoreRestApi.dropDatabase(@QueryParam(\"database\") String name)", "testcase": false, "constructor": false}, {"identifier": "listTables", "parameters": "(@QueryParam(\"database\") String databaseName)", "modifiers": "@GET @Path(\"/table/list\") @SubmarineApi public", "return": "Response", "signature": "Response listTables(@QueryParam(\"database\") String databaseName)", "full_signature": "@GET @Path(\"/table/list\") @SubmarineApi public Response listTables(@QueryParam(\"database\") String databaseName)", "class_method_signature": "MetaStoreRestApi.listTables(@QueryParam(\"database\") String databaseName)", "testcase": false, "constructor": false}, {"identifier": "getTableCount", "parameters": "()", "modifiers": "@GET @Path(\"/table/count\") @SubmarineApi public", "return": "Response", "signature": "Response getTableCount()", "full_signature": "@GET @Path(\"/table/count\") @SubmarineApi public Response getTableCount()", "class_method_signature": "MetaStoreRestApi.getTableCount()", "testcase": false, "constructor": false}, {"identifier": "getTable", "parameters": "(@QueryParam(\"database\") String databaseName,\n                           @QueryParam(\"table\") String tableName)", "modifiers": "@GET @Path(\"/table\") @SubmarineApi public", "return": "Response", "signature": "Response getTable(@QueryParam(\"database\") String databaseName,\n                           @QueryParam(\"table\") String tableName)", "full_signature": "@GET @Path(\"/table\") @SubmarineApi public Response getTable(@QueryParam(\"database\") String databaseName,\n                           @QueryParam(\"table\") String tableName)", "class_method_signature": "MetaStoreRestApi.getTable(@QueryParam(\"database\") String databaseName,\n                           @QueryParam(\"table\") String tableName)", "testcase": false, "constructor": false}, {"identifier": "dropTable", "parameters": "(@QueryParam(\"database\") String databaseName,\n                            @QueryParam(\"table\") String tableName)", "modifiers": "@DELETE @Path(\"/table\") @SubmarineApi public", "return": "Response", "signature": "Response dropTable(@QueryParam(\"database\") String databaseName,\n                            @QueryParam(\"table\") String tableName)", "full_signature": "@DELETE @Path(\"/table\") @SubmarineApi public Response dropTable(@QueryParam(\"database\") String databaseName,\n                            @QueryParam(\"table\") String tableName)", "class_method_signature": "MetaStoreRestApi.dropTable(@QueryParam(\"database\") String databaseName,\n                            @QueryParam(\"table\") String tableName)", "testcase": false, "constructor": false}], "file": "submarine-server/server-core/src/main/java/org/apache/submarine/server/rest/MetaStoreRestApi.java"}, "focal_method": {"identifier": "listTables", "parameters": "(@QueryParam(\"database\") String databaseName)", "modifiers": "@GET @Path(\"/table/list\") @SubmarineApi public", "return": "Response", "body": "@GET\n  @Path(\"/table/list\")\n  @SubmarineApi\n  public Response listTables(@QueryParam(\"database\") String databaseName) {\n    List<String> tables;\n    try {\n      tables = submarineMetaStore.getAllTables(databaseName);\n    } catch (MetaException e) {\n      LOG.error(e.getMessage(), e);\n      return new JsonResponse.Builder<String>(Response.Status.INTERNAL_SERVER_ERROR)\n              .success(false).build();\n    }\n    return new JsonResponse.Builder<List<String>>(Response.Status.OK)\n            .success(true).result(tables).build();\n  }", "signature": "Response listTables(@QueryParam(\"database\") String databaseName)", "full_signature": "@GET @Path(\"/table/list\") @SubmarineApi public Response listTables(@QueryParam(\"database\") String databaseName)", "class_method_signature": "MetaStoreRestApi.listTables(@QueryParam(\"database\") String databaseName)", "testcase": false, "constructor": false, "invocations": ["getAllTables", "error", "getMessage", "build", "success", "build", "result", "success"]}, "repository": {"repo_id": 209459144, "url": "https://github.com/apache/submarine", "stars": 185, "created": "9/19/2019 4:00:17 AM +00:00", "updates": "2020-01-27T15:27:05+00:00", "fork": "False", "license": "licensed"}}