{"test_class": {"identifier": "CompositeFileReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "protostuff-parser/src/test/java/io/protostuff/compiler/parser/CompositeFileReaderTest.java"}, "test_case": {"identifier": "testRead", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRead() throws Exception {\n        TestReader r1 = new TestReader(\"1.proto\", \"1\");\n        TestReader r2 = new TestReader(\"2.proto\", \"2\");\n        CompositeFileReader reader = new CompositeFileReader(r1, r2);\n        CharStream s1 = reader.read(\"1.proto\");\n        CharStream s2 = reader.read(\"2.proto\");\n        CharStream s3 = reader.read(\"3.proto\");\n        assertNotNull(s1);\n        assertNotNull(s2);\n        assertNull(s3);\n        assertEquals(\"1\", s1.getText(Interval.of(0, 1)));\n        assertEquals(\"2\", s2.getText(Interval.of(0, 1)));\n    }", "signature": "void testRead()", "full_signature": "@Test public void testRead()", "class_method_signature": "CompositeFileReaderTest.testRead()", "testcase": true, "constructor": false, "invocations": ["read", "read", "read", "assertNotNull", "assertNotNull", "assertNull", "assertEquals", "getText", "of", "assertEquals", "getText", "of"]}, "focal_class": {"identifier": "CompositeFileReader", "superclass": "", "interfaces": "implements FileReader", "fields": [{"original_string": "private final List<FileReader> delegateList;", "modifier": "private final", "type": "List<FileReader>", "declarator": "delegateList", "var_name": "delegateList"}], "methods": [{"identifier": "CompositeFileReader", "parameters": "(List<FileReader> delegateList)", "modifiers": "public", "return": "", "signature": " CompositeFileReader(List<FileReader> delegateList)", "full_signature": "public  CompositeFileReader(List<FileReader> delegateList)", "class_method_signature": "CompositeFileReader.CompositeFileReader(List<FileReader> delegateList)", "testcase": false, "constructor": true}, {"identifier": "CompositeFileReader", "parameters": "(FileReader... delegates)", "modifiers": "public", "return": "", "signature": " CompositeFileReader(FileReader... delegates)", "full_signature": "public  CompositeFileReader(FileReader... delegates)", "class_method_signature": "CompositeFileReader.CompositeFileReader(FileReader... delegates)", "testcase": false, "constructor": true}, {"identifier": "read", "parameters": "(String name)", "modifiers": "@Nullable @Override public", "return": "CharStream", "signature": "CharStream read(String name)", "full_signature": "@Nullable @Override public CharStream read(String name)", "class_method_signature": "CompositeFileReader.read(String name)", "testcase": false, "constructor": false}], "file": "protostuff-parser/src/main/java/io/protostuff/compiler/parser/CompositeFileReader.java"}, "focal_method": {"identifier": "read", "parameters": "(String name)", "modifiers": "@Nullable @Override public", "return": "CharStream", "body": "@Nullable\n    @Override\n    public CharStream read(String name) {\n        for (FileReader delegate : delegateList) {\n            CharStream result = delegate.read(name);\n            if (result != null) {\n                return result;\n            }\n        }\n        return null;\n    }", "signature": "CharStream read(String name)", "full_signature": "@Nullable @Override public CharStream read(String name)", "class_method_signature": "CompositeFileReader.read(String name)", "testcase": false, "constructor": false, "invocations": ["read"]}, "repository": {"repo_id": 32651977, "url": "https://github.com/protostuff/protostuff-compiler", "language": "Java", "is_fork": false, "fork_count": 20, "stargazer_count": 30, "size": 1539, "license": "licensed"}}