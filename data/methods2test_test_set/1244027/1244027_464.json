{"test_class": {"identifier": "RelationalProviderTest", "superclass": "", "interfaces": "", "fields": [], "file": "persistence/modeshape-persistence-relational/src/test/java/org/modeshape/persistence/relational/RelationalProviderTest.java"}, "test_case": {"identifier": "shouldReturnDbConfiguredFromDocument", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnDbConfiguredFromDocument() throws ParsingException {\n        RelationalDb db = Schematic.getDb(RelationalProviderTest.class.getClassLoader().getResourceAsStream(\"db-config-h2-full.json\"));\n        assertNotNull(db);\n        assertEquals(\"jdbc:h2:mem:modeshape\", db.id());\n\n        RelationalDbConfig config = db.config();\n        assertNotNull(config);\n        assertFalse(config.createOnStart());\n        assertTrue(config.dropOnExit());\n        assertEquals(\"REPO\", config.tableName());\n        assertEquals(100, config.fetchSize());\n        assertFalse(config.compress());\n\n        DataSourceManager dsManager = db.dsManager();\n        assertNotNull(dsManager);\n        assertEquals(DatabaseType.Name.H2, dsManager.dbType().name());\n        HikariDataSource dataSource = (HikariDataSource) dsManager.dataSource();\n        assertEquals((int) Integer.valueOf(RelationalDbConfig.DEFAULT_MIN_IDLE), dataSource.getMinimumIdle());\n        assertEquals((int) Integer.valueOf(RelationalDbConfig.DEFAULT_MAX_POOL_SIZE), dataSource.getMaximumPoolSize());\n        assertEquals((long) Integer.valueOf(RelationalDbConfig.DEFAULT_IDLE_TIMEOUT), dataSource.getIdleTimeout());\n    }", "signature": "void shouldReturnDbConfiguredFromDocument()", "full_signature": "@Test public void shouldReturnDbConfiguredFromDocument()", "class_method_signature": "RelationalProviderTest.shouldReturnDbConfiguredFromDocument()", "testcase": true, "constructor": false, "invocations": ["getDb", "getResourceAsStream", "getClassLoader", "assertNotNull", "assertEquals", "id", "config", "assertNotNull", "assertFalse", "createOnStart", "assertTrue", "dropOnExit", "assertEquals", "tableName", "assertEquals", "fetchSize", "assertFalse", "compress", "dsManager", "assertNotNull", "assertEquals", "name", "dbType", "dataSource", "assertEquals", "valueOf", "getMinimumIdle", "assertEquals", "valueOf", "getMaximumPoolSize", "assertEquals", "valueOf", "getIdleTimeout"]}, "focal_class": {"identifier": "RelationalProvider", "superclass": "", "interfaces": "implements SchematicDbProvider<RelationalDb>", "fields": [], "methods": [{"identifier": "getDB", "parameters": "(String type, Document configuration)", "modifiers": "@Override public", "return": "RelationalDb", "signature": "RelationalDb getDB(String type, Document configuration)", "full_signature": "@Override public RelationalDb getDB(String type, Document configuration)", "class_method_signature": "RelationalProvider.getDB(String type, Document configuration)", "testcase": false, "constructor": false}], "file": "persistence/modeshape-persistence-relational/src/main/java/org/modeshape/persistence/relational/RelationalProvider.java"}, "focal_method": {"identifier": "getDB", "parameters": "(String type, Document configuration)", "modifiers": "@Override public", "return": "RelationalDb", "body": "@Override\n    public RelationalDb getDB(String type, Document configuration) {\n        if (!RelationalDbConfig.ALIASES.contains(type.toLowerCase())) {\n            return null;\n        }\n        return new RelationalDb(configuration);\n    }", "signature": "RelationalDb getDB(String type, Document configuration)", "full_signature": "@Override public RelationalDb getDB(String type, Document configuration)", "class_method_signature": "RelationalProvider.getDB(String type, Document configuration)", "testcase": false, "constructor": false, "invocations": ["contains", "toLowerCase"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}