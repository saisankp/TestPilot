{"test_class": {"identifier": "AergoPoolTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "core/src/test/java/ship/util/AergoPoolTest.java"}, "test_case": {"identifier": "testReturnResource", "parameters": "()", "modifiers": "@Test @PrepareForTest(AergoClientBuilder.class) @SuppressWarnings(\"unchecked\") public", "return": "void", "body": "@Test\n  @PrepareForTest(AergoClientBuilder.class)\n  @SuppressWarnings(\"unchecked\")\n  public void testReturnResource() throws Exception {\n    // Given\n    final ConnectStrategy<ManagedChannel> connectStrategy = mock(ConnectStrategy.class);\n    final AergoClient client = mock(AergoClient.class);\n    whenNew(AergoClient.class).withAnyArguments().thenReturn(client);\n\n    // When\n    final AergoPool pool = new AergoPool(randomUUID().toString());\n    final AergoApi api = pool.borrowResource();\n    pool.returnResource(api);\n\n    // Then\n    verify((AergoClient) api).close();\n  }", "signature": "void testReturnResource()", "full_signature": "@Test @PrepareForTest(AergoClientBuilder.class) @SuppressWarnings(\"unchecked\") public void testReturnResource()", "class_method_signature": "AergoPoolTest.testReturnResource()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "withAnyArguments", "whenNew", "toString", "randomUUID", "borrowResource", "returnResource", "close", "verify"]}, "focal_class": {"identifier": "AergoPool", "superclass": "", "interfaces": "implements ResourcePool<AergoApi>", "fields": [{"original_string": "@Getter\n  protected final String hostnameAndPort;", "modifier": "@Getter\n  protected final", "type": "String", "declarator": "hostnameAndPort", "var_name": "hostnameAndPort"}], "methods": [{"identifier": "borrowResource", "parameters": "()", "modifiers": "@Override public", "return": "AergoApi", "signature": "AergoApi borrowResource()", "full_signature": "@Override public AergoApi borrowResource()", "class_method_signature": "AergoPool.borrowResource()", "testcase": false, "constructor": false}, {"identifier": "returnResource", "parameters": "(final AergoApi resource)", "modifiers": "@Override public", "return": "void", "signature": "void returnResource(final AergoApi resource)", "full_signature": "@Override public void returnResource(final AergoApi resource)", "class_method_signature": "AergoPool.returnResource(final AergoApi resource)", "testcase": false, "constructor": false}], "file": "core/src/main/java/ship/util/AergoPool.java"}, "focal_method": {"identifier": "returnResource", "parameters": "(final AergoApi resource)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void returnResource(final AergoApi resource) {\n    tryClose(resource);\n  }", "signature": "void returnResource(final AergoApi resource)", "full_signature": "@Override public void returnResource(final AergoApi resource)", "class_method_signature": "AergoPool.returnResource(final AergoApi resource)", "testcase": false, "constructor": false, "invocations": ["tryClose"]}, "repository": {"repo_id": 149694816, "url": "https://github.com/aergoio/ship", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 1743, "license": "licensed"}}