{"test_class": {"identifier": "RtpHeaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int _HEADER_LENGTH = 12;", "modifier": "public static final", "type": "int", "declarator": "_HEADER_LENGTH = 12", "var_name": "_HEADER_LENGTH"}, {"original_string": "public static final int _TEST_HEADER_LENGTH = 25;", "modifier": "public static final", "type": "int", "declarator": "_TEST_HEADER_LENGTH = 25", "var_name": "_TEST_HEADER_LENGTH"}, {"original_string": "public static final int _OVERLAP = _TEST_HEADER_LENGTH - _HEADER_LENGTH;", "modifier": "public static final", "type": "int", "declarator": "_OVERLAP = _TEST_HEADER_LENGTH - _HEADER_LENGTH", "var_name": "_OVERLAP"}, {"original_string": "private byte[] packet = new byte[]{(byte)0x80, (byte)0x03, (byte)0x08, (byte)0x18, \n    (byte)0xa5, (byte)0x1f, (byte)0xce, (byte)0xb5, (byte)0x57, (byte)0x3d, (byte)0x59, (byte)0xba};", "modifier": "private", "type": "byte[]", "declarator": "packet = new byte[]{(byte)0x80, (byte)0x03, (byte)0x08, (byte)0x18, \n    (byte)0xa5, (byte)0x1f, (byte)0xce, (byte)0xb5, (byte)0x57, (byte)0x3d, (byte)0x59, (byte)0xba}", "var_name": "packet"}], "file": "servers/media/core/server-impl/src/test/java/org/mobicents/media/server/impl/rtp/RtpHeaderTest.java"}, "test_case": {"identifier": "testAppend", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAppend() {\n        boolean marker = false;\n        byte payloadType = 9;\n        int seqNumber = 13717;\n        int timestamp = 1234897;\n        long ssrc = 1438967189;\n\n        byte[] bin = new byte[12];\n        bin[0] = (byte) (0x80);\n\n        bin[1] = marker ? (byte) (payloadType | 0x80) : (byte) (payloadType & 0x7f);\n        bin[2] = ((byte) ((seqNumber & 0xFF00) >> 8));\n        bin[3] = ((byte) (seqNumber & 0x00FF));\n\n        bin[4] = ((byte) ((timestamp & 0xFF000000) >> 24));\n        bin[5] = ((byte) ((timestamp & 0x00FF0000) >> 16));\n        bin[6] = ((byte) ((timestamp & 0x0000FF00) >> 8));\n        bin[7] = ((byte) ((timestamp & 0x000000FF)));\n\n        bin[8] = ((byte) ((ssrc & 0xFF000000) >> 24));\n        bin[9] = ((byte) ((ssrc & 0x00FF0000) >> 16));\n        bin[10] = ((byte) ((ssrc & 0x0000FF00) >> 8));\n        bin[11] = ((byte) ((ssrc & 0x000000FF)));\n\n        RtpHeader h2 = new RtpHeader();\n        int i = 0;\n        while (!h2.isFilled()) {\n            h2.append(bin, i++, 1);\n        }\n        \n        assertEquals(marker, h2.getMarker());\n        assertEquals(payloadType, h2.getPayloadType());\n        assertEquals(seqNumber, h2.getSeqNumber());\n        assertEquals(timestamp, h2.getTimestamp());\n        assertEquals(ssrc, h2.getSsrc());\n    }", "signature": "void testAppend()", "full_signature": "@Test public void testAppend()", "class_method_signature": "RtpHeaderTest.testAppend()", "testcase": true, "constructor": false, "invocations": ["isFilled", "append", "assertEquals", "getMarker", "assertEquals", "getPayloadType", "assertEquals", "getSeqNumber", "assertEquals", "getTimestamp", "assertEquals", "getSsrc"]}, "focal_class": {"identifier": "RtpHeader", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private int version = 2;", "modifier": "private", "type": "int", "declarator": "version = 2", "var_name": "version"}, {"original_string": "private boolean padding = false;", "modifier": "private", "type": "boolean", "declarator": "padding = false", "var_name": "padding"}, {"original_string": "private boolean extensions = false;", "modifier": "private", "type": "boolean", "declarator": "extensions = false", "var_name": "extensions"}, {"original_string": "private int cc = 0;", "modifier": "private", "type": "int", "declarator": "cc = 0", "var_name": "cc"}, {"original_string": "private boolean marker = false;", "modifier": "private", "type": "boolean", "declarator": "marker = false", "var_name": "marker"}, {"original_string": "private int payloadType;", "modifier": "private", "type": "int", "declarator": "payloadType", "var_name": "payloadType"}, {"original_string": "private int seqNumber;", "modifier": "private", "type": "int", "declarator": "seqNumber", "var_name": "seqNumber"}, {"original_string": "private long timestamp;", "modifier": "private", "type": "long", "declarator": "timestamp", "var_name": "timestamp"}, {"original_string": "private long ssrc;", "modifier": "private", "type": "long", "declarator": "ssrc", "var_name": "ssrc"}, {"original_string": "private byte[] bin = new byte[12];", "modifier": "private", "type": "byte[]", "declarator": "bin = new byte[12]", "var_name": "bin"}, {"original_string": "private int pos = 0;", "modifier": "private", "type": "int", "declarator": "pos = 0", "var_name": "pos"}, {"original_string": "private boolean filled = false;", "modifier": "private", "type": "boolean", "declarator": "filled = false", "var_name": "filled"}], "methods": [{"identifier": "RtpHeader", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void RtpHeader()", "full_signature": "public void RtpHeader()", "class_method_signature": "RtpHeader.RtpHeader()", "testcase": false, "constructor": false}, {"identifier": "isFilled", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFilled()", "full_signature": "public boolean isFilled()", "class_method_signature": "RtpHeader.isFilled()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(byte[] bin)", "modifiers": "public", "return": "void", "signature": "void init(byte[] bin)", "full_signature": "public void init(byte[] bin)", "class_method_signature": "RtpHeader.init(byte[] bin)", "testcase": false, "constructor": false}, {"identifier": "getPayloadType", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPayloadType()", "full_signature": "public int getPayloadType()", "class_method_signature": "RtpHeader.getPayloadType()", "testcase": false, "constructor": false}, {"identifier": "getSeqNumber", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSeqNumber()", "full_signature": "public int getSeqNumber()", "class_method_signature": "RtpHeader.getSeqNumber()", "testcase": false, "constructor": false}, {"identifier": "getTimestamp", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTimestamp()", "full_signature": "public long getTimestamp()", "class_method_signature": "RtpHeader.getTimestamp()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getVersion()", "full_signature": "public int getVersion()", "class_method_signature": "RtpHeader.getVersion()", "testcase": false, "constructor": false}, {"identifier": "isPadding", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isPadding()", "full_signature": "public boolean isPadding()", "class_method_signature": "RtpHeader.isPadding()", "testcase": false, "constructor": false}, {"identifier": "isExtensions", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isExtensions()", "full_signature": "public boolean isExtensions()", "class_method_signature": "RtpHeader.isExtensions()", "testcase": false, "constructor": false}, {"identifier": "getCc", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCc()", "full_signature": "public int getCc()", "class_method_signature": "RtpHeader.getCc()", "testcase": false, "constructor": false}, {"identifier": "getSsrc", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getSsrc()", "full_signature": "public long getSsrc()", "class_method_signature": "RtpHeader.getSsrc()", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] toByteArray()", "full_signature": "public byte[] toByteArray()", "class_method_signature": "RtpHeader.toByteArray()", "testcase": false, "constructor": false}, {"identifier": "getMarker", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getMarker()", "full_signature": "public boolean getMarker()", "class_method_signature": "RtpHeader.getMarker()", "testcase": false, "constructor": false}, {"identifier": "setMarker", "parameters": "(boolean marker)", "modifiers": "public", "return": "void", "signature": "void setMarker(boolean marker)", "full_signature": "public void setMarker(boolean marker)", "class_method_signature": "RtpHeader.setMarker(boolean marker)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(byte[] data, int offset, int len)", "modifiers": "protected", "return": "int", "signature": "int append(byte[] data, int offset, int len)", "full_signature": "protected int append(byte[] data, int offset, int len)", "class_method_signature": "RtpHeader.append(byte[] data, int offset, int len)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(boolean marker, byte payloadType, int seqNumber, int timestamp, long ssrc)", "modifiers": "public", "return": "void", "signature": "void init(boolean marker, byte payloadType, int seqNumber, int timestamp, long ssrc)", "full_signature": "public void init(boolean marker, byte payloadType, int seqNumber, int timestamp, long ssrc)", "class_method_signature": "RtpHeader.init(boolean marker, byte payloadType, int seqNumber, int timestamp, long ssrc)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(byte payloadType, int seqNumber, int timestamp, long ssrc)", "modifiers": "public", "return": "void", "signature": "void init(byte payloadType, int seqNumber, int timestamp, long ssrc)", "full_signature": "public void init(byte payloadType, int seqNumber, int timestamp, long ssrc)", "class_method_signature": "RtpHeader.init(byte payloadType, int seqNumber, int timestamp, long ssrc)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "RtpHeader.toString()", "testcase": false, "constructor": false}], "file": "servers/media/core/server-impl/src/main/java/org/mobicents/media/server/impl/rtp/RtpHeader.java"}, "focal_method": {"identifier": "append", "parameters": "(byte[] data, int offset, int len)", "modifiers": "protected", "return": "int", "body": "protected int append(byte[] data, int offset, int len) {\n        int remainder = Math.min(12 - pos, len);\n        System.arraycopy(data, offset, bin, pos, remainder);\n        pos += remainder;\n        if (pos == 12) {\n            init(bin);\n            filled = true;\n        }\n        return len - remainder;\n    }", "signature": "int append(byte[] data, int offset, int len)", "full_signature": "protected int append(byte[] data, int offset, int len)", "class_method_signature": "RtpHeader.append(byte[] data, int offset, int len)", "testcase": false, "constructor": false, "invocations": ["min", "arraycopy", "init"]}, "repository": {"repo_id": 128294, "url": "https://github.com/deruelle/mobicents", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 17, "size": 347121, "license": "licensed"}}