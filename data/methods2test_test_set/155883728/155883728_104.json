{"test_class": {"identifier": "JcrFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final File testBaseDir = new File(\"target/repos/JcrFactoryTest\");", "modifier": "final", "type": "File", "declarator": "testBaseDir = new File(\"target/repos/JcrFactoryTest\")", "var_name": "testBaseDir"}], "file": "webster/src/test/java/net/adamcin/oakpal/webster/JcrFactoryTest.java"}, "test_case": {"identifier": "testGetNodeStoreFixture_withWithoutFDS", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetNodeStoreFixture_withWithoutFDS() throws Exception {\n        final File seedRepoHome = new File(testBaseDir, \"testGetNodeStoreFixture_withFDS/seedRepo\");\n        recursiveDelete(seedRepoHome);\n        final File seedDir = new File(seedRepoHome, \"segmentstore\");\n        final File fdsDir = new File(seedRepoHome, \"datastore\");\n\n        assertFalse(\"fds dir should not exist @ \" + fdsDir.getAbsolutePath(), fdsDir.exists());\n        try (NodeStoreFixture fixture = JcrFactory.getNodeStoreFixture(false, seedDir)) {\n            assertNull(\"blob store should be null without datastore dir\", fixture.getBlobStore());\n        }\n\n        recursiveDelete(seedRepoHome);\n        fdsDir.mkdirs();\n        assertTrue(\"fds dir should exist @ \" + fdsDir.getAbsolutePath(), fdsDir.exists());\n        try (NodeStoreFixture fixture = JcrFactory.getNodeStoreFixture(false, seedDir)) {\n            assertNotNull(\"blob store should not be null\", fixture.getBlobStore());\n        }\n    }", "signature": "void testGetNodeStoreFixture_withWithoutFDS()", "full_signature": "@Test public void testGetNodeStoreFixture_withWithoutFDS()", "class_method_signature": "JcrFactoryTest.testGetNodeStoreFixture_withWithoutFDS()", "testcase": true, "constructor": false, "invocations": ["recursiveDelete", "assertFalse", "getAbsolutePath", "exists", "getNodeStoreFixture", "assertNull", "getBlobStore", "recursiveDelete", "mkdirs", "assertTrue", "getAbsolutePath", "exists", "getNodeStoreFixture", "assertNotNull", "getBlobStore"]}, "focal_class": {"identifier": "JcrFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "JcrFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " JcrFactory()", "full_signature": "private  JcrFactory()", "class_method_signature": "JcrFactory.JcrFactory()", "testcase": false, "constructor": true}, {"identifier": "getJcr", "parameters": "(final NodeStoreFixture nodeStoreFixture)", "modifiers": "public static", "return": "Repository", "signature": "Repository getJcr(final NodeStoreFixture nodeStoreFixture)", "full_signature": "public static Repository getJcr(final NodeStoreFixture nodeStoreFixture)", "class_method_signature": "JcrFactory.getJcr(final NodeStoreFixture nodeStoreFixture)", "testcase": false, "constructor": false}, {"identifier": "getJcr", "parameters": "(final NodeStoreFixture nodeStoreFixture,\n                                    final NodeStore globalStore)", "modifiers": "public static", "return": "Repository", "signature": "Repository getJcr(final NodeStoreFixture nodeStoreFixture,\n                                    final NodeStore globalStore)", "full_signature": "public static Repository getJcr(final NodeStoreFixture nodeStoreFixture,\n                                    final NodeStore globalStore)", "class_method_signature": "JcrFactory.getJcr(final NodeStoreFixture nodeStoreFixture,\n                                    final NodeStore globalStore)", "testcase": false, "constructor": false}, {"identifier": "getNodeStoreFixture", "parameters": "(final boolean readOnly, final String... args)", "modifiers": "public static", "return": "NodeStoreFixture", "signature": "NodeStoreFixture getNodeStoreFixture(final boolean readOnly, final String... args)", "full_signature": "public static NodeStoreFixture getNodeStoreFixture(final boolean readOnly, final String... args)", "class_method_signature": "JcrFactory.getNodeStoreFixture(final boolean readOnly, final String... args)", "testcase": false, "constructor": false}, {"identifier": "getNodeStoreFixture", "parameters": "(final boolean readOnly, final File segmentStore, final String... args)", "modifiers": "public static", "return": "NodeStoreFixture", "signature": "NodeStoreFixture getNodeStoreFixture(final boolean readOnly, final File segmentStore, final String... args)", "full_signature": "public static NodeStoreFixture getNodeStoreFixture(final boolean readOnly, final File segmentStore, final String... args)", "class_method_signature": "JcrFactory.getNodeStoreFixture(final boolean readOnly, final File segmentStore, final String... args)", "testcase": false, "constructor": false}, {"identifier": "getReadOnlyFixture", "parameters": "(final File segmentStore, final String... args)", "modifiers": "public static", "return": "NodeStoreFixture", "signature": "NodeStoreFixture getReadOnlyFixture(final File segmentStore, final String... args)", "full_signature": "public static NodeStoreFixture getReadOnlyFixture(final File segmentStore, final String... args)", "class_method_signature": "JcrFactory.getReadOnlyFixture(final File segmentStore, final String... args)", "testcase": false, "constructor": false}, {"identifier": "getReadWriteFixture", "parameters": "(final File segmentStore, final String... args)", "modifiers": "public static", "return": "NodeStoreFixture", "signature": "NodeStoreFixture getReadWriteFixture(final File segmentStore, final String... args)", "full_signature": "public static NodeStoreFixture getReadWriteFixture(final File segmentStore, final String... args)", "class_method_signature": "JcrFactory.getReadWriteFixture(final File segmentStore, final String... args)", "testcase": false, "constructor": false}], "file": "webster/src/main/java/net/adamcin/oakpal/webster/JcrFactory.java"}, "focal_method": {"identifier": "getNodeStoreFixture", "parameters": "(final boolean readOnly, final String... args)", "modifiers": "public static", "return": "NodeStoreFixture", "body": "public static NodeStoreFixture getNodeStoreFixture(final boolean readOnly, final String... args) throws Exception {\n        OptionParser parser = new OptionParser();\n        Options opts = new Options();\n        OptionSet options = opts.parseAndConfigure(parser, args);\n        return NodeStoreFixtureProvider.create(opts, readOnly);\n    }", "signature": "NodeStoreFixture getNodeStoreFixture(final boolean readOnly, final String... args)", "full_signature": "public static NodeStoreFixture getNodeStoreFixture(final boolean readOnly, final String... args)", "class_method_signature": "JcrFactory.getNodeStoreFixture(final boolean readOnly, final String... args)", "testcase": false, "constructor": false, "invocations": ["parseAndConfigure", "create"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}