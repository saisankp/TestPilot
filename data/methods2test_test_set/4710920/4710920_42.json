{"test_class": {"identifier": "TLadderTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/textui/TLadderTest.java"}, "test_case": {"identifier": "testRendering", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRendering() throws Exception {\n        TLadder ladder = new TLadder();\n        ladder.addItem(\"1\");\n        ladder.addItem(\"2\");\n        ladder.addItem(\"3\");\n        ladder.addItem(\"4\");\n        String result = ladder.rendering();\n        String expected = \"1\" + System.lineSeparator() +\n                \"  `-2\" + System.lineSeparator() +\n                \"    `-3\" + System.lineSeparator() +\n                \"      `-4\" + System.lineSeparator();\n        assertThat(result, equalTo(expected));\n        System.out.println(result);\n    }", "signature": "void testRendering()", "full_signature": "@Test public void testRendering()", "class_method_signature": "TLadderTest.testRendering()", "testcase": true, "constructor": false, "invocations": ["addItem", "addItem", "addItem", "addItem", "rendering", "lineSeparator", "lineSeparator", "lineSeparator", "lineSeparator", "assertThat", "equalTo", "println"]}, "focal_class": {"identifier": "TLadder", "superclass": "", "interfaces": "implements TComponent", "fields": [{"original_string": "private static final String LADDER_CHAR = \"`-\";", "modifier": "private static final", "type": "String", "declarator": "LADDER_CHAR = \"`-\"", "var_name": "LADDER_CHAR"}, {"original_string": "private static final String STEP_CHAR = \" \";", "modifier": "private static final", "type": "String", "declarator": "STEP_CHAR = \" \"", "var_name": "STEP_CHAR"}, {"original_string": "private static final int INDENT_STEP = 2;", "modifier": "private static final", "type": "int", "declarator": "INDENT_STEP = 2", "var_name": "INDENT_STEP"}, {"original_string": "private final List<String> items = new ArrayList<String>();", "modifier": "private final", "type": "List<String>", "declarator": "items = new ArrayList<String>()", "var_name": "items"}], "methods": [{"identifier": "rendering", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String rendering()", "full_signature": "@Override public String rendering()", "class_method_signature": "TLadder.rendering()", "testcase": false, "constructor": false}, {"identifier": "addItem", "parameters": "(String item)", "modifiers": "public", "return": "TLadder", "signature": "TLadder addItem(String item)", "full_signature": "public TLadder addItem(String item)", "class_method_signature": "TLadder.addItem(String item)", "testcase": false, "constructor": false}], "file": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/textui/TLadder.java"}, "focal_method": {"identifier": "rendering", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String rendering() {\n        final StringBuilder ladderSB = new StringBuilder();\n        int deep = 0;\n        for (String item : items) {\n\n            // no separator is required for the first item\n            if (deep == 0) {\n                ladderSB\n                        .append(item)\n                        .append(System.lineSeparator());\n            }\n\n            // need separator for others\n            else {\n                ladderSB\n                        .append(repeat(STEP_CHAR, deep * INDENT_STEP))\n                        .append(LADDER_CHAR)\n                        .append(item)\n                        .append(System.lineSeparator());\n            }\n\n            deep++;\n\n        }\n        return ladderSB.toString();\n    }", "signature": "String rendering()", "full_signature": "@Override public String rendering()", "class_method_signature": "TLadder.rendering()", "testcase": false, "constructor": false, "invocations": ["append", "append", "lineSeparator", "append", "append", "append", "append", "repeat", "lineSeparator", "toString"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}