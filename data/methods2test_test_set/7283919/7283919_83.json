{"test_class": {"identifier": "DbParameterAccessorsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DbParameterAccessors accessors;", "modifier": "private", "type": "DbParameterAccessors", "declarator": "accessors", "var_name": "accessors"}], "file": "dbfit-java/core/src/test/java/dbfit/util/DbParameterAccessorsTest.java"}, "test_case": {"identifier": "canGetDistinctNamesSortedByPosition", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void canGetDistinctNamesSortedByPosition() {\n        assertEquals(\n                asList(\"dummy1\", \"dummy2\", \"dummy3\"),\n                accessors.getSortedAccessorNames());\n    }", "signature": "void canGetDistinctNamesSortedByPosition()", "full_signature": "@Test public void canGetDistinctNamesSortedByPosition()", "class_method_signature": "DbParameterAccessorsTest.canGetDistinctNamesSortedByPosition()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "asList", "getSortedAccessorNames"]}, "focal_class": {"identifier": "DbParameterAccessors", "superclass": "", "interfaces": "implements Iterable<DbParameterAccessor>", "fields": [{"original_string": "private List<DbParameterAccessor> accessors;", "modifier": "private", "type": "List<DbParameterAccessor>", "declarator": "accessors", "var_name": "accessors"}], "methods": [{"identifier": "DbParameterAccessors", "parameters": "(DbParameterAccessor[] accessors)", "modifiers": "public", "return": "", "signature": " DbParameterAccessors(DbParameterAccessor[] accessors)", "full_signature": "public  DbParameterAccessors(DbParameterAccessor[] accessors)", "class_method_signature": "DbParameterAccessors.DbParameterAccessors(DbParameterAccessor[] accessors)", "testcase": false, "constructor": true}, {"identifier": "DbParameterAccessors", "parameters": "()", "modifiers": "public", "return": "", "signature": " DbParameterAccessors()", "full_signature": "public  DbParameterAccessors()", "class_method_signature": "DbParameterAccessors.DbParameterAccessors()", "testcase": false, "constructor": true}, {"identifier": "bindParameters", "parameters": "(StatementExecution statement)", "modifiers": "public", "return": "void", "signature": "void bindParameters(StatementExecution statement)", "full_signature": "public void bindParameters(StatementExecution statement)", "class_method_signature": "DbParameterAccessors.bindParameters(StatementExecution statement)", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "()", "modifiers": "public", "return": "DbParameterAccessor[]", "signature": "DbParameterAccessor[] toArray()", "full_signature": "public DbParameterAccessor[] toArray()", "class_method_signature": "DbParameterAccessors.toArray()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<DbParameterAccessor>", "signature": "Iterator<DbParameterAccessor> iterator()", "full_signature": "@Override public Iterator<DbParameterAccessor> iterator()", "class_method_signature": "DbParameterAccessors.iterator()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(DbParameterAccessor accessor)", "modifiers": "public", "return": "void", "signature": "void add(DbParameterAccessor accessor)", "full_signature": "public void add(DbParameterAccessor accessor)", "class_method_signature": "DbParameterAccessors.add(DbParameterAccessor accessor)", "testcase": false, "constructor": false}, {"identifier": "zipWith", "parameters": "(List<T> items)", "modifiers": "public", "return": "Map<DbParameterAccessor, T>", "signature": "Map<DbParameterAccessor, T> zipWith(List<T> items)", "full_signature": "public Map<DbParameterAccessor, T> zipWith(List<T> items)", "class_method_signature": "DbParameterAccessors.zipWith(List<T> items)", "testcase": false, "constructor": false}, {"identifier": "getOutputAccessors", "parameters": "()", "modifiers": "public", "return": "List<DbParameterAccessor>", "signature": "List<DbParameterAccessor> getOutputAccessors()", "full_signature": "public List<DbParameterAccessor> getOutputAccessors()", "class_method_signature": "DbParameterAccessors.getOutputAccessors()", "testcase": false, "constructor": false}, {"identifier": "getInputAccessors", "parameters": "()", "modifiers": "public", "return": "List<DbParameterAccessor>", "signature": "List<DbParameterAccessor> getInputAccessors()", "full_signature": "public List<DbParameterAccessor> getInputAccessors()", "class_method_signature": "DbParameterAccessors.getInputAccessors()", "testcase": false, "constructor": false}, {"identifier": "getSortedAccessorNames", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getSortedAccessorNames()", "full_signature": "public List<String> getSortedAccessorNames()", "class_method_signature": "DbParameterAccessors.getSortedAccessorNames()", "testcase": false, "constructor": false}, {"identifier": "getNumberOfParameters", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfParameters()", "full_signature": "public int getNumberOfParameters()", "class_method_signature": "DbParameterAccessors.getNumberOfParameters()", "testcase": false, "constructor": false}, {"identifier": "containsReturnValue", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean containsReturnValue()", "full_signature": "public boolean containsReturnValue()", "class_method_signature": "DbParameterAccessors.containsReturnValue()", "testcase": false, "constructor": false}], "file": "dbfit-java/core/src/main/java/dbfit/util/DbParameterAccessors.java"}, "focal_method": {"identifier": "getSortedAccessorNames", "parameters": "()", "modifiers": "public", "return": "List<String>", "body": "public List<String> getSortedAccessorNames() {\n        SortedSet<DbParameterAccessor> nameSet = new TreeSet<>(new PositionComparator());\n        nameSet.addAll(new ArrayList<>(accessors));\n        List<String> nameList = new ArrayList<>();\n        for (DbParameterAccessor p : nameSet) {\n            nameList.add(p.getName());\n        }\n        return nameList;\n    }", "signature": "List<String> getSortedAccessorNames()", "full_signature": "public List<String> getSortedAccessorNames()", "class_method_signature": "DbParameterAccessors.getSortedAccessorNames()", "testcase": false, "constructor": false, "invocations": ["addAll", "add", "getName"]}, "repository": {"repo_id": 7283919, "url": "https://github.com/dbfit/dbfit", "language": "Java", "is_fork": false, "fork_count": 83, "stargazer_count": 181, "size": 6978, "license": "licensed"}}