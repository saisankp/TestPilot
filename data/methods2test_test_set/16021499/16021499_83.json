{"test_class": {"identifier": "RcpTaskManagerImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    BundleContext mockBundleContext;", "modifier": "@Mock", "type": "BundleContext", "declarator": "mockBundleContext", "var_name": "mockBundleContext"}, {"original_string": "@Mock\n    ConfigurationAdmin mockConfigurationAdmin;", "modifier": "@Mock", "type": "ConfigurationAdmin", "declarator": "mockConfigurationAdmin", "var_name": "mockConfigurationAdmin"}, {"original_string": "@Mock\n    Configuration mockConfiguration;", "modifier": "@Mock", "type": "Configuration", "declarator": "mockConfiguration", "var_name": "mockConfiguration"}, {"original_string": "Dictionary<String, Object> configProperties;", "modifier": "", "type": "Dictionary<String, Object>", "declarator": "configProperties", "var_name": "configProperties"}, {"original_string": "RcpTaskManagerImpl taskManager;", "modifier": "", "type": "RcpTaskManagerImpl", "declarator": "taskManager", "var_name": "taskManager"}, {"original_string": "@Rule\n    public TemporaryFolder folder= new TemporaryFolder();", "modifier": "@Rule\n    public", "type": "TemporaryFolder", "declarator": "folder= new TemporaryFolder()", "var_name": "folder"}], "file": "vault-rcp/src/test/java/org/apache/jackrabbit/vault/rcp/impl/RcpTaskManagerImplTest.java"}, "test_case": {"identifier": "testEditTask", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test \n    public void testEditTask() throws IOException, ConfigurationException, URISyntaxException {\n        DefaultWorkspaceFilter filter = new DefaultWorkspaceFilter();\n        try (InputStream input = this.getClass().getResourceAsStream(\"/filter.xml\")) {\n            filter.load(input);\n        }\n        ConnectionOptions.Builder connectionOptionsBuilder = ConnectionOptions.builder();\n        connectionOptionsBuilder.proxyHost(\"proxyHost\");\n        RcpTaskImpl taskOld = (RcpTaskImpl)taskManager.addTask(new RepositoryAddress(\"http://localhost:4502\"), connectionOptionsBuilder.build(), new SimpleCredentials(\"testUser\", \"pw\".toCharArray()), \"/target/path\", \"2\", Arrays.asList(\"exclude1\", \"exclude2\"), false);\n        RcpTaskImpl taskNew = (RcpTaskImpl)taskManager.editTask(taskOld.getId(), null, null, null, null, null, null, null);\n        Assert.assertThat(taskNew, new TaskMatcher(taskOld));\n        \n        RepositoryAddress newSource = new RepositoryAddress(\"http://localhost:4503\");\n        taskNew = (RcpTaskImpl)taskManager.editTask(taskOld.getId(), newSource, null, null, null, null, null, null);\n        Assert.assertThat(taskNew, Matchers.not(new TaskMatcher(taskOld)));\n        Assert.assertEquals(newSource, taskNew.getSource());\n    }", "signature": "void testEditTask()", "full_signature": "@Test public void testEditTask()", "class_method_signature": "RcpTaskManagerImplTest.testEditTask()", "testcase": true, "constructor": false, "invocations": ["getResourceAsStream", "getClass", "load", "builder", "proxyHost", "addTask", "build", "toCharArray", "asList", "editTask", "getId", "assertThat", "editTask", "getId", "assertThat", "not", "assertEquals", "getSource"]}, "focal_class": {"identifier": "RcpTaskManagerImpl", "superclass": "", "interfaces": "implements RcpTaskManager", "fields": [{"original_string": "private static final String TASKS_DATA_FILE_NAME = \"tasks\";", "modifier": "private static final", "type": "String", "declarator": "TASKS_DATA_FILE_NAME = \"tasks\"", "var_name": "TASKS_DATA_FILE_NAME"}, {"original_string": "private static final String PROP_TASKS_SERIALIZATION = \"serialized.tasks.json\";", "modifier": "private static final", "type": "String", "declarator": "PROP_TASKS_SERIALIZATION = \"serialized.tasks.json\"", "var_name": "PROP_TASKS_SERIALIZATION"}, {"original_string": "private static final String PID = RcpTaskManagerImpl.class.getName();", "modifier": "private static final", "type": "String", "declarator": "PID = RcpTaskManagerImpl.class.getName()", "var_name": "PID"}, {"original_string": "private static final Logger log = LoggerFactory.getLogger(RcpTaskManagerImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(RcpTaskManagerImpl.class)", "var_name": "log"}, {"original_string": "SortedMap<String, RcpTaskImpl> tasks;", "modifier": "", "type": "SortedMap<String, RcpTaskImpl>", "declarator": "tasks", "var_name": "tasks"}, {"original_string": "private File dataFile;", "modifier": "private", "type": "File", "declarator": "dataFile", "var_name": "dataFile"}, {"original_string": "private final ObjectMapper mapper = new ObjectMapper();", "modifier": "private final", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}, {"original_string": "private Configuration configuration;", "modifier": "private", "type": "Configuration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "@Reference\n    ConfigurationAdmin configurationAdmin;", "modifier": "@Reference", "type": "ConfigurationAdmin", "declarator": "configurationAdmin", "var_name": "configurationAdmin"}, {"original_string": "private String serializedTasks;", "modifier": "private", "type": "String", "declarator": "serializedTasks", "var_name": "serializedTasks"}], "methods": [{"identifier": "activate", "parameters": "(BundleContext bundleContext, Map <String, Object> newConfigProperties)", "modifiers": "@Activate", "return": "void", "signature": "void activate(BundleContext bundleContext, Map <String, Object> newConfigProperties)", "full_signature": "@Activate void activate(BundleContext bundleContext, Map <String, Object> newConfigProperties)", "class_method_signature": "RcpTaskManagerImpl.activate(BundleContext bundleContext, Map <String, Object> newConfigProperties)", "testcase": false, "constructor": false}, {"identifier": "RcpTaskManagerImpl", "parameters": "()", "modifiers": "public", "return": "", "signature": " RcpTaskManagerImpl()", "full_signature": "public  RcpTaskManagerImpl()", "class_method_signature": "RcpTaskManagerImpl.RcpTaskManagerImpl()", "testcase": false, "constructor": true}, {"identifier": "RcpTaskManagerImpl", "parameters": "(BundleContext bundleContext, ConfigurationAdmin configurationAdmin, Map <String, Object> newConfigProperties)", "modifiers": "public", "return": "", "signature": " RcpTaskManagerImpl(BundleContext bundleContext, ConfigurationAdmin configurationAdmin, Map <String, Object> newConfigProperties)", "full_signature": "public  RcpTaskManagerImpl(BundleContext bundleContext, ConfigurationAdmin configurationAdmin, Map <String, Object> newConfigProperties)", "class_method_signature": "RcpTaskManagerImpl.RcpTaskManagerImpl(BundleContext bundleContext, ConfigurationAdmin configurationAdmin, Map <String, Object> newConfigProperties)", "testcase": false, "constructor": true}, {"identifier": "deactivate", "parameters": "()", "modifiers": "@Deactivate", "return": "void", "signature": "void deactivate()", "full_signature": "@Deactivate void deactivate()", "class_method_signature": "RcpTaskManagerImpl.deactivate()", "testcase": false, "constructor": false}, {"identifier": "modified", "parameters": "(Map <String, Object> newConfigProperties)", "modifiers": "@Modified", "return": "void", "signature": "void modified(Map <String, Object> newConfigProperties)", "full_signature": "@Modified void modified(Map <String, Object> newConfigProperties)", "class_method_signature": "RcpTaskManagerImpl.modified(Map <String, Object> newConfigProperties)", "testcase": false, "constructor": false}, {"identifier": "createMapFromDictionary", "parameters": "(Dictionary<String, Object> dictionary)", "modifiers": "static", "return": "Map<String, Object>", "signature": "Map<String, Object> createMapFromDictionary(Dictionary<String, Object> dictionary)", "full_signature": "static Map<String, Object> createMapFromDictionary(Dictionary<String, Object> dictionary)", "class_method_signature": "RcpTaskManagerImpl.createMapFromDictionary(Dictionary<String, Object> dictionary)", "testcase": false, "constructor": false}, {"identifier": "loadTasks", "parameters": "(String serializedTasks, File dataFile)", "modifiers": "private", "return": "SortedMap<String, RcpTaskImpl>", "signature": "SortedMap<String, RcpTaskImpl> loadTasks(String serializedTasks, File dataFile)", "full_signature": "private SortedMap<String, RcpTaskImpl> loadTasks(String serializedTasks, File dataFile)", "class_method_signature": "RcpTaskManagerImpl.loadTasks(String serializedTasks, File dataFile)", "testcase": false, "constructor": false}, {"identifier": "validateTasks", "parameters": "(SortedMap<String, RcpTaskImpl> tasks)", "modifiers": "", "return": "void", "signature": "void validateTasks(SortedMap<String, RcpTaskImpl> tasks)", "full_signature": " void validateTasks(SortedMap<String, RcpTaskImpl> tasks)", "class_method_signature": "RcpTaskManagerImpl.validateTasks(SortedMap<String, RcpTaskImpl> tasks)", "testcase": false, "constructor": false}, {"identifier": "loadTasksCredentials", "parameters": "(Map<String, RcpTaskImpl> tasks, File dataFile)", "modifiers": "private", "return": "void", "signature": "void loadTasksCredentials(Map<String, RcpTaskImpl> tasks, File dataFile)", "full_signature": "private void loadTasksCredentials(Map<String, RcpTaskImpl> tasks, File dataFile)", "class_method_signature": "RcpTaskManagerImpl.loadTasksCredentials(Map<String, RcpTaskImpl> tasks, File dataFile)", "testcase": false, "constructor": false}, {"identifier": "persistTasks", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void persistTasks()", "full_signature": "private void persistTasks()", "class_method_signature": "RcpTaskManagerImpl.persistTasks()", "testcase": false, "constructor": false}, {"identifier": "persistTasks", "parameters": "(Dictionary<String, Object> configProperties, File dataFile)", "modifiers": "private", "return": "void", "signature": "void persistTasks(Dictionary<String, Object> configProperties, File dataFile)", "full_signature": "private void persistTasks(Dictionary<String, Object> configProperties, File dataFile)", "class_method_signature": "RcpTaskManagerImpl.persistTasks(Dictionary<String, Object> configProperties, File dataFile)", "testcase": false, "constructor": false}, {"identifier": "persistTasksCredentials", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void persistTasksCredentials()", "full_signature": "private void persistTasksCredentials()", "class_method_signature": "RcpTaskManagerImpl.persistTasksCredentials()", "testcase": false, "constructor": false}, {"identifier": "persistTasksCredentials", "parameters": "(File dataFile)", "modifiers": "private", "return": "void", "signature": "void persistTasksCredentials(File dataFile)", "full_signature": "private void persistTasksCredentials(File dataFile)", "class_method_signature": "RcpTaskManagerImpl.persistTasksCredentials(File dataFile)", "testcase": false, "constructor": false}, {"identifier": "getTask", "parameters": "(String taskId)", "modifiers": "public", "return": "RcpTask", "signature": "RcpTask getTask(String taskId)", "full_signature": "public RcpTask getTask(String taskId)", "class_method_signature": "RcpTaskManagerImpl.getTask(String taskId)", "testcase": false, "constructor": false}, {"identifier": "getTasks", "parameters": "()", "modifiers": "public", "return": "Map<String, RcpTask>", "signature": "Map<String, RcpTask> getTasks()", "full_signature": "public Map<String, RcpTask> getTasks()", "class_method_signature": "RcpTaskManagerImpl.getTasks()", "testcase": false, "constructor": false}, {"identifier": "addTask", "parameters": "(RepositoryAddress src, ConnectionOptions connectionOptions, Credentials srcCreds, String dst, String id, List<String> excludes, @Nullable Boolean recursive)", "modifiers": "@Override public", "return": "RcpTask", "signature": "RcpTask addTask(RepositoryAddress src, ConnectionOptions connectionOptions, Credentials srcCreds, String dst, String id, List<String> excludes, @Nullable Boolean recursive)", "full_signature": "@Override public RcpTask addTask(RepositoryAddress src, ConnectionOptions connectionOptions, Credentials srcCreds, String dst, String id, List<String> excludes, @Nullable Boolean recursive)", "class_method_signature": "RcpTaskManagerImpl.addTask(RepositoryAddress src, ConnectionOptions connectionOptions, Credentials srcCreds, String dst, String id, List<String> excludes, @Nullable Boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "addTask", "parameters": "(RepositoryAddress src, ConnectionOptions connectionOptions, Credentials srcCreds, String dst, String id, WorkspaceFilter srcFilter,\n            @Nullable Boolean recursive)", "modifiers": "@Override public", "return": "RcpTask", "signature": "RcpTask addTask(RepositoryAddress src, ConnectionOptions connectionOptions, Credentials srcCreds, String dst, String id, WorkspaceFilter srcFilter,\n            @Nullable Boolean recursive)", "full_signature": "@Override public RcpTask addTask(RepositoryAddress src, ConnectionOptions connectionOptions, Credentials srcCreds, String dst, String id, WorkspaceFilter srcFilter,\n            @Nullable Boolean recursive)", "class_method_signature": "RcpTaskManagerImpl.addTask(RepositoryAddress src, ConnectionOptions connectionOptions, Credentials srcCreds, String dst, String id, WorkspaceFilter srcFilter,\n            @Nullable Boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "editTask", "parameters": "(@NotNull String taskId, @Nullable RepositoryAddress src, @Nullable ConnectionOptions connectionOptions, @Nullable Credentials srcCreds, @Nullable String dst, @Nullable List<String> excludes,\n            @Nullable WorkspaceFilter srcFilter, @Nullable Boolean recursive)", "modifiers": "@Override public", "return": "RcpTask", "signature": "RcpTask editTask(@NotNull String taskId, @Nullable RepositoryAddress src, @Nullable ConnectionOptions connectionOptions, @Nullable Credentials srcCreds, @Nullable String dst, @Nullable List<String> excludes,\n            @Nullable WorkspaceFilter srcFilter, @Nullable Boolean recursive)", "full_signature": "@Override public RcpTask editTask(@NotNull String taskId, @Nullable RepositoryAddress src, @Nullable ConnectionOptions connectionOptions, @Nullable Credentials srcCreds, @Nullable String dst, @Nullable List<String> excludes,\n            @Nullable WorkspaceFilter srcFilter, @Nullable Boolean recursive)", "class_method_signature": "RcpTaskManagerImpl.editTask(@NotNull String taskId, @Nullable RepositoryAddress src, @Nullable ConnectionOptions connectionOptions, @Nullable Credentials srcCreds, @Nullable String dst, @Nullable List<String> excludes,\n            @Nullable WorkspaceFilter srcFilter, @Nullable Boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "removeTask", "parameters": "(String taskId)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean removeTask(String taskId)", "full_signature": "@Override public boolean removeTask(String taskId)", "class_method_signature": "RcpTaskManagerImpl.removeTask(String taskId)", "testcase": false, "constructor": false}, {"identifier": "setSourceCredentials", "parameters": "(String taskId, Credentials srcCreds)", "modifiers": "@Override public", "return": "void", "signature": "void setSourceCredentials(String taskId, Credentials srcCreds)", "full_signature": "@Override public void setSourceCredentials(String taskId, Credentials srcCreds)", "class_method_signature": "RcpTaskManagerImpl.setSourceCredentials(String taskId, Credentials srcCreds)", "testcase": false, "constructor": false}, {"identifier": "getClassLoaderForRepositoryFactory", "parameters": "()", "modifiers": "protected", "return": "ClassLoader", "signature": "ClassLoader getClassLoaderForRepositoryFactory()", "full_signature": "protected ClassLoader getClassLoaderForRepositoryFactory()", "class_method_signature": "RcpTaskManagerImpl.getClassLoaderForRepositoryFactory()", "testcase": false, "constructor": false}], "file": "vault-rcp/src/main/java/org/apache/jackrabbit/vault/rcp/impl/RcpTaskManagerImpl.java"}, "focal_method": {"identifier": "editTask", "parameters": "(@NotNull String taskId, @Nullable RepositoryAddress src, @Nullable ConnectionOptions connectionOptions, @Nullable Credentials srcCreds, @Nullable String dst, @Nullable List<String> excludes,\n            @Nullable WorkspaceFilter srcFilter, @Nullable Boolean recursive)", "modifiers": "@Override public", "return": "RcpTask", "body": "@Override\n    public RcpTask editTask(@NotNull String taskId, @Nullable RepositoryAddress src, @Nullable ConnectionOptions connectionOptions, @Nullable Credentials srcCreds, @Nullable String dst, @Nullable List<String> excludes,\n            @Nullable WorkspaceFilter srcFilter, @Nullable Boolean recursive) throws ConfigurationException {\n        RcpTaskImpl oldTask = tasks.get(taskId);\n        if (oldTask == null) {\n            throw new IllegalArgumentException(\"No such task with id='\" + taskId + \"'\");\n        }\n        RcpTaskImpl newTask = new RcpTaskImpl(oldTask, src, connectionOptions, srcCreds, dst, excludes, srcFilter, recursive);\n        tasks.put(taskId, newTask);\n        persistTasks();\n        return newTask;\n    }", "signature": "RcpTask editTask(@NotNull String taskId, @Nullable RepositoryAddress src, @Nullable ConnectionOptions connectionOptions, @Nullable Credentials srcCreds, @Nullable String dst, @Nullable List<String> excludes,\n            @Nullable WorkspaceFilter srcFilter, @Nullable Boolean recursive)", "full_signature": "@Override public RcpTask editTask(@NotNull String taskId, @Nullable RepositoryAddress src, @Nullable ConnectionOptions connectionOptions, @Nullable Credentials srcCreds, @Nullable String dst, @Nullable List<String> excludes,\n            @Nullable WorkspaceFilter srcFilter, @Nullable Boolean recursive)", "class_method_signature": "RcpTaskManagerImpl.editTask(@NotNull String taskId, @Nullable RepositoryAddress src, @Nullable ConnectionOptions connectionOptions, @Nullable Credentials srcCreds, @Nullable String dst, @Nullable List<String> excludes,\n            @Nullable WorkspaceFilter srcFilter, @Nullable Boolean recursive)", "testcase": false, "constructor": false, "invocations": ["get", "put", "persistTasks"]}, "repository": {"repo_id": 16021499, "url": "https://github.com/apache/jackrabbit-filevault", "stars": 24, "created": "1/18/2014 8:00:07 AM +00:00", "updates": "2020-01-22T11:47:21+00:00", "fork": "False", "license": "licensed"}}