{"test_class": {"identifier": "MonitorBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MonitorBuilderTest.java"}, "test_case": {"identifier": "build", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void build() {\n        MonitorBuilder builder = new MonitorBuilder();\n        builder.protocol(\"protocol\").address(\"address\").group(\"group\").interval(\"interval\").isDefault(true)\n                .password(\"password\").username(\"username\").version(\"version\")\n                .appendParameter(\"default.num\", \"one\").id(\"id\").prefix(\"prefix\");\n\n        MonitorConfig config = builder.build();\n        MonitorConfig config2 = builder.build();\n\n        Assertions.assertEquals(\"protocol\", config.getProtocol());\n        Assertions.assertEquals(\"address\", config.getAddress());\n        Assertions.assertEquals(\"group\", config.getGroup());\n        Assertions.assertEquals(\"interval\", config.getInterval());\n        Assertions.assertEquals(\"password\", config.getPassword());\n        Assertions.assertEquals(\"username\", config.getUsername());\n        Assertions.assertEquals(\"version\", config.getVersion());\n        Assertions.assertTrue(config.isDefault());\n        Assertions.assertTrue(config.getParameters().containsKey(\"default.num\"));\n        Assertions.assertEquals(\"one\", config.getParameters().get(\"default.num\"));\n        Assertions.assertEquals(\"id\", config.getId());\n        Assertions.assertEquals(\"prefix\", config.getPrefix());\n        Assertions.assertNotSame(config, config2);\n    }", "signature": "void build()", "full_signature": "@Test void build()", "class_method_signature": "MonitorBuilderTest.build()", "testcase": true, "constructor": false, "invocations": ["prefix", "id", "appendParameter", "version", "username", "password", "isDefault", "interval", "group", "address", "protocol", "build", "build", "assertEquals", "getProtocol", "assertEquals", "getAddress", "assertEquals", "getGroup", "assertEquals", "getInterval", "assertEquals", "getPassword", "assertEquals", "getUsername", "assertEquals", "getVersion", "assertTrue", "isDefault", "assertTrue", "containsKey", "getParameters", "assertEquals", "get", "getParameters", "assertEquals", "getId", "assertEquals", "getPrefix", "assertNotSame"]}, "focal_class": {"identifier": "MonitorBuilder", "superclass": "extends AbstractBuilder<MonitorConfig, MonitorBuilder>", "interfaces": "", "fields": [{"original_string": "private String protocol;", "modifier": "private", "type": "String", "declarator": "protocol", "var_name": "protocol"}, {"original_string": "private String address;", "modifier": "private", "type": "String", "declarator": "address", "var_name": "address"}, {"original_string": "private String username;", "modifier": "private", "type": "String", "declarator": "username", "var_name": "username"}, {"original_string": "private String password;", "modifier": "private", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "private String group;", "modifier": "private", "type": "String", "declarator": "group", "var_name": "group"}, {"original_string": "private String version;", "modifier": "private", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "private String interval;", "modifier": "private", "type": "String", "declarator": "interval", "var_name": "interval"}, {"original_string": "private Map<String, String> parameters;", "modifier": "private", "type": "Map<String, String>", "declarator": "parameters", "var_name": "parameters"}, {"original_string": "private Boolean isDefault;", "modifier": "private", "type": "Boolean", "declarator": "isDefault", "var_name": "isDefault"}], "methods": [{"identifier": "protocol", "parameters": "(String protocol)", "modifiers": "public", "return": "MonitorBuilder", "signature": "MonitorBuilder protocol(String protocol)", "full_signature": "public MonitorBuilder protocol(String protocol)", "class_method_signature": "MonitorBuilder.protocol(String protocol)", "testcase": false, "constructor": false}, {"identifier": "address", "parameters": "(String address)", "modifiers": "public", "return": "MonitorBuilder", "signature": "MonitorBuilder address(String address)", "full_signature": "public MonitorBuilder address(String address)", "class_method_signature": "MonitorBuilder.address(String address)", "testcase": false, "constructor": false}, {"identifier": "username", "parameters": "(String username)", "modifiers": "public", "return": "MonitorBuilder", "signature": "MonitorBuilder username(String username)", "full_signature": "public MonitorBuilder username(String username)", "class_method_signature": "MonitorBuilder.username(String username)", "testcase": false, "constructor": false}, {"identifier": "password", "parameters": "(String password)", "modifiers": "public", "return": "MonitorBuilder", "signature": "MonitorBuilder password(String password)", "full_signature": "public MonitorBuilder password(String password)", "class_method_signature": "MonitorBuilder.password(String password)", "testcase": false, "constructor": false}, {"identifier": "group", "parameters": "(String group)", "modifiers": "public", "return": "MonitorBuilder", "signature": "MonitorBuilder group(String group)", "full_signature": "public MonitorBuilder group(String group)", "class_method_signature": "MonitorBuilder.group(String group)", "testcase": false, "constructor": false}, {"identifier": "version", "parameters": "(String version)", "modifiers": "public", "return": "MonitorBuilder", "signature": "MonitorBuilder version(String version)", "full_signature": "public MonitorBuilder version(String version)", "class_method_signature": "MonitorBuilder.version(String version)", "testcase": false, "constructor": false}, {"identifier": "interval", "parameters": "(String interval)", "modifiers": "public", "return": "MonitorBuilder", "signature": "MonitorBuilder interval(String interval)", "full_signature": "public MonitorBuilder interval(String interval)", "class_method_signature": "MonitorBuilder.interval(String interval)", "testcase": false, "constructor": false}, {"identifier": "isDefault", "parameters": "(Boolean isDefault)", "modifiers": "public", "return": "MonitorBuilder", "signature": "MonitorBuilder isDefault(Boolean isDefault)", "full_signature": "public MonitorBuilder isDefault(Boolean isDefault)", "class_method_signature": "MonitorBuilder.isDefault(Boolean isDefault)", "testcase": false, "constructor": false}, {"identifier": "appendParameter", "parameters": "(String key, String value)", "modifiers": "public", "return": "MonitorBuilder", "signature": "MonitorBuilder appendParameter(String key, String value)", "full_signature": "public MonitorBuilder appendParameter(String key, String value)", "class_method_signature": "MonitorBuilder.appendParameter(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "appendParameters", "parameters": "(Map<String, String> appendParameters)", "modifiers": "public", "return": "MonitorBuilder", "signature": "MonitorBuilder appendParameters(Map<String, String> appendParameters)", "full_signature": "public MonitorBuilder appendParameters(Map<String, String> appendParameters)", "class_method_signature": "MonitorBuilder.appendParameters(Map<String, String> appendParameters)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "MonitorConfig", "signature": "MonitorConfig build()", "full_signature": "public MonitorConfig build()", "class_method_signature": "MonitorBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "getThis", "parameters": "()", "modifiers": "@Override protected", "return": "MonitorBuilder", "signature": "MonitorBuilder getThis()", "full_signature": "@Override protected MonitorBuilder getThis()", "class_method_signature": "MonitorBuilder.getThis()", "testcase": false, "constructor": false}], "file": "dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/bootstrap/builders/MonitorBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "MonitorConfig", "body": "public MonitorConfig build() {\n        MonitorConfig monitorConfig = new MonitorConfig();\n        super.build(monitorConfig);\n\n        monitorConfig.setProtocol(protocol);\n        monitorConfig.setAddress(address);\n        monitorConfig.setUsername(username);\n        monitorConfig.setPassword(password);\n        monitorConfig.setGroup(group);\n        monitorConfig.setVersion(version);\n        monitorConfig.setInterval(interval);\n        monitorConfig.setParameters(parameters);\n        monitorConfig.setDefault(isDefault);\n\n        return monitorConfig;\n    }", "signature": "MonitorConfig build()", "full_signature": "public MonitorConfig build()", "class_method_signature": "MonitorBuilder.build()", "testcase": false, "constructor": false, "invocations": ["build", "setProtocol", "setAddress", "setUsername", "setPassword", "setGroup", "setVersion", "setInterval", "setParameters", "setDefault"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}