{"test_class": {"identifier": "ReportDeciderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "AddressService addressService = new DefaultAddressService();", "modifier": "", "type": "AddressService", "declarator": "addressService = new DefaultAddressService()", "var_name": "addressService"}, {"original_string": "ReportDecider  reportDecider  = new ReportDecider2(addressService);", "modifier": "", "type": "ReportDecider", "declarator": "reportDecider  = new ReportDecider2(addressService)", "var_name": "reportDecider"}], "file": "client/lookout-reg-server/src/test/java/com/alipay/lookout/remote/report/support/http/ReportDeciderTest.java"}, "test_case": {"identifier": "testChangeSilentTime", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testChangeSilentTime() {\n        Assert.assertFalse(reportDecider.stillSilent());\n        reportDecider.changeSilentTime(1, TimeUnit.MINUTES);\n        Assert.assertTrue(reportDecider.stillSilent());\n    }", "signature": "void testChangeSilentTime()", "full_signature": "@Test public void testChangeSilentTime()", "class_method_signature": "ReportDeciderTest.testChangeSilentTime()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "stillSilent", "changeSilentTime", "assertTrue", "stillSilent"]}, "focal_class": {"identifier": "ReportDecider", "superclass": "", "interfaces": "implements HttpRequestProcessor", "fields": [{"original_string": "private static final Logger      logger                  = LookoutLoggerFactory\n                                                                 .getLogger(ReportDecider.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger                  = LookoutLoggerFactory\n                                                                 .getLogger(ReportDecider.class)", "var_name": "logger"}, {"original_string": "private volatile long            silentTime              = -1;", "modifier": "private volatile", "type": "long", "declarator": "silentTime              = -1", "var_name": "silentTime"}, {"original_string": "private AtomicReference<Address> addressHolder           = new AtomicReference<Address>();", "modifier": "private", "type": "AtomicReference<Address>", "declarator": "addressHolder           = new AtomicReference<Address>()", "var_name": "addressHolder"}, {"original_string": "private volatile long            addressLastModifiedTime = -1;", "modifier": "private volatile", "type": "long", "declarator": "addressLastModifiedTime = -1", "var_name": "addressLastModifiedTime"}, {"original_string": "private long                     expiredTime             = 65000;", "modifier": "private", "type": "long", "declarator": "expiredTime             = 65000", "var_name": "expiredTime"}, {"original_string": "private AddressService           addressService;", "modifier": "private", "type": "AddressService", "declarator": "addressService", "var_name": "addressService"}, {"original_string": "private MetricConfig             metricConfig;", "modifier": "private", "type": "MetricConfig", "declarator": "metricConfig", "var_name": "metricConfig"}], "methods": [{"identifier": "ReportDecider", "parameters": "(AddressService addressService, MetricConfig metricConfig)", "modifiers": "public", "return": "", "signature": " ReportDecider(AddressService addressService, MetricConfig metricConfig)", "full_signature": "public  ReportDecider(AddressService addressService, MetricConfig metricConfig)", "class_method_signature": "ReportDecider.ReportDecider(AddressService addressService, MetricConfig metricConfig)", "testcase": false, "constructor": true}, {"identifier": "getMetricConfig", "parameters": "()", "modifiers": "protected", "return": "MetricConfig", "signature": "MetricConfig getMetricConfig()", "full_signature": "protected MetricConfig getMetricConfig()", "class_method_signature": "ReportDecider.getMetricConfig()", "testcase": false, "constructor": false}, {"identifier": "stillSilent", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean stillSilent()", "full_signature": "public boolean stillSilent()", "class_method_signature": "ReportDecider.stillSilent()", "testcase": false, "constructor": false}, {"identifier": "changeSilentTime", "parameters": "(int wait, TimeUnit timeUnit)", "modifiers": "", "return": "void", "signature": "void changeSilentTime(int wait, TimeUnit timeUnit)", "full_signature": " void changeSilentTime(int wait, TimeUnit timeUnit)", "class_method_signature": "ReportDecider.changeSilentTime(int wait, TimeUnit timeUnit)", "testcase": false, "constructor": false}, {"identifier": "getAvailableAddress", "parameters": "()", "modifiers": "public synchronized", "return": "Address", "signature": "Address getAvailableAddress()", "full_signature": "public synchronized Address getAvailableAddress()", "class_method_signature": "ReportDecider.getAvailableAddress()", "testcase": false, "constructor": false}, {"identifier": "refreshAddressCache", "parameters": "()", "modifiers": "", "return": "void", "signature": "void refreshAddressCache()", "full_signature": " void refreshAddressCache()", "class_method_signature": "ReportDecider.refreshAddressCache()", "testcase": false, "constructor": false}, {"identifier": "isAddressExpired", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isAddressExpired()", "full_signature": "private boolean isAddressExpired()", "class_method_signature": "ReportDecider.isAddressExpired()", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(List<LookoutMeasurement> measures)", "modifiers": "public abstract", "return": "List<LookoutMeasurement>", "signature": "List<LookoutMeasurement> filter(List<LookoutMeasurement> measures)", "full_signature": "public abstract List<LookoutMeasurement> filter(List<LookoutMeasurement> measures)", "class_method_signature": "ReportDecider.filter(List<LookoutMeasurement> measures)", "testcase": false, "constructor": false}], "file": "client/lookout-reg-server/src/main/java/com/alipay/lookout/remote/report/support/http/ReportDecider.java"}, "focal_method": {"identifier": "changeSilentTime", "parameters": "(int wait, TimeUnit timeUnit)", "modifiers": "", "return": "void", "body": "void changeSilentTime(int wait, TimeUnit timeUnit) {\n        if (wait > 0) {\n            long waitTime = timeUnit.toMillis(wait) + System.currentTimeMillis();\n            if (waitTime > silentTime) {\n                //do change\n                silentTime = waitTime;\n            }\n        }\n    }", "signature": "void changeSilentTime(int wait, TimeUnit timeUnit)", "full_signature": " void changeSilentTime(int wait, TimeUnit timeUnit)", "class_method_signature": "ReportDecider.changeSilentTime(int wait, TimeUnit timeUnit)", "testcase": false, "constructor": false, "invocations": ["toMillis", "currentTimeMillis"]}, "repository": {"repo_id": 133381280, "url": "https://github.com/sofastack/sofa-lookout", "language": "Java", "is_fork": false, "fork_count": 113, "stargazer_count": 318, "size": 1394, "license": "licensed"}}