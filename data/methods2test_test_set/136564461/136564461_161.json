{"test_class": {"identifier": "PublicKeyTest", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/crypto/PublicKeyTest.java"}, "test_case": {"identifier": "success_GeneratePublicKey_from_BigInteger", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void success_GeneratePublicKey_from_BigInteger() {\n        BigInteger integer = new BigInteger(\"12345678990\");\n        PublicKey publicKey = new PublicKey(integer);\n\n        assertThat(publicKey.getRaw(), is(integer.toByteArray()));\n    }", "signature": "void success_GeneratePublicKey_from_BigInteger()", "full_signature": "@Test public void success_GeneratePublicKey_from_BigInteger()", "class_method_signature": "PublicKeyTest.success_GeneratePublicKey_from_BigInteger()", "testcase": true, "constructor": false, "invocations": ["assertThat", "getRaw", "is", "toByteArray"]}, "focal_class": {"identifier": "PublicKey", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final byte[] value;", "modifier": "private final", "type": "byte[]", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "PublicKey", "parameters": "(BigInteger integer)", "modifiers": "public", "return": "", "signature": " PublicKey(BigInteger integer)", "full_signature": "public  PublicKey(BigInteger integer)", "class_method_signature": "PublicKey.PublicKey(BigInteger integer)", "testcase": false, "constructor": true}, {"identifier": "PublicKey", "parameters": "(byte[] bytes)", "modifiers": "public", "return": "", "signature": " PublicKey(byte[] bytes)", "full_signature": "public  PublicKey(byte[] bytes)", "class_method_signature": "PublicKey.PublicKey(byte[] bytes)", "testcase": false, "constructor": true}, {"identifier": "fromHexString", "parameters": "(String hex)", "modifiers": "public static", "return": "PublicKey", "signature": "PublicKey fromHexString(String hex)", "full_signature": "public static PublicKey fromHexString(String hex)", "class_method_signature": "PublicKey.fromHexString(String hex)", "testcase": false, "constructor": false}, {"identifier": "getRaw", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getRaw()", "full_signature": "public byte[] getRaw()", "class_method_signature": "PublicKey.getRaw()", "testcase": false, "constructor": false}, {"identifier": "getHexString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getHexString()", "full_signature": "public String getHexString()", "class_method_signature": "PublicKey.getHexString()", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/crypto/PublicKey.java"}, "focal_method": {"identifier": "getRaw", "parameters": "()", "modifiers": "public", "return": "byte[]", "body": "public byte[] getRaw() {\n        return this.value.clone();\n    }", "signature": "byte[] getRaw()", "full_signature": "public byte[] getRaw()", "class_method_signature": "PublicKey.getRaw()", "testcase": false, "constructor": false, "invocations": ["clone"]}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}