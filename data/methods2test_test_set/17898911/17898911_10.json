{"test_class": {"identifier": "DataSetFilterEditorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    ColumnFilterEditor columnFilterEditor;", "modifier": "@Mock", "type": "ColumnFilterEditor", "declarator": "columnFilterEditor", "var_name": "columnFilterEditor"}, {"original_string": "@Mock\n    DataSetFilterEditor.View filterView;", "modifier": "@Mock", "type": "DataSetFilterEditor.View", "declarator": "filterView", "var_name": "filterView"}, {"original_string": "@Mock\n    SyncBeanManager beanManager;", "modifier": "@Mock", "type": "SyncBeanManager", "declarator": "beanManager", "var_name": "beanManager"}, {"original_string": "@Mock\n    SyncBeanDef<ColumnFilterEditor> columnFilterEditorBeanDef;", "modifier": "@Mock", "type": "SyncBeanDef<ColumnFilterEditor>", "declarator": "columnFilterEditorBeanDef", "var_name": "columnFilterEditorBeanDef"}, {"original_string": "@Mock\n    DataSetMetadata metadata;", "modifier": "@Mock", "type": "DataSetMetadata", "declarator": "metadata", "var_name": "metadata"}, {"original_string": "@Mock\n    Event<DataSetFilterChangedEvent> changedEvent;", "modifier": "@Mock", "type": "Event<DataSetFilterChangedEvent>", "declarator": "changedEvent", "var_name": "changedEvent"}], "file": "dashbuilder-client/dashbuilder-displayer-client/src/test/java/org/dashbuilder/displayer/client/widgets/filter/DataSetFilterEditorTest.java"}, "test_case": {"identifier": "testViewInitialization", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testViewInitialization() {\n        DataSetFilter filter = new DataSetFilter();\n        ColumnFilter filter1 = FilterFactory.equalsTo(\"column1\", \"Test\");\n        filter.addFilterColumn(filter1);\n\n        DataSetFilterEditor filterEditor = new DataSetFilterEditor(filterView, beanManager, changedEvent);\n        filterEditor.init(filter, metadata);\n\n        assertEquals(filterView, filterEditor.view);\n        verify(filterView).showNewFilterHome();\n        verify(filterView).addColumn(\"column1\");\n        verify(filterView).addColumn(\"column2\");\n        verify(filterView).addColumn(\"column3\");\n        verify(filterView, times(filter.getColumnFilterList().size())).addColumnFilterEditor(any(ColumnFilterEditor.class));\n    }", "signature": "void testViewInitialization()", "full_signature": "@Test public void testViewInitialization()", "class_method_signature": "DataSetFilterEditorTest.testViewInitialization()", "testcase": true, "constructor": false, "invocations": ["equalsTo", "addFilterColumn", "init", "assertEquals", "showNewFilterHome", "verify", "addColumn", "verify", "addColumn", "verify", "addColumn", "verify", "addColumnFilterEditor", "verify", "times", "size", "getColumnFilterList", "any"]}, "focal_class": {"identifier": "DataSetFilterEditor", "superclass": "", "interfaces": "implements IsWidget", "fields": [{"original_string": "View view = null;", "modifier": "", "type": "View", "declarator": "view = null", "var_name": "view"}, {"original_string": "DataSetFilter filter = null;", "modifier": "", "type": "DataSetFilter", "declarator": "filter = null", "var_name": "filter"}, {"original_string": "DataSetMetadata metadata = null;", "modifier": "", "type": "DataSetMetadata", "declarator": "metadata = null", "var_name": "metadata"}, {"original_string": "SyncBeanManager beanManager;", "modifier": "", "type": "SyncBeanManager", "declarator": "beanManager", "var_name": "beanManager"}, {"original_string": "Event<DataSetFilterChangedEvent> changeEvent;", "modifier": "", "type": "Event<DataSetFilterChangedEvent>", "declarator": "changeEvent", "var_name": "changeEvent"}], "methods": [{"identifier": "DataSetFilterEditor", "parameters": "(View view,\n                               SyncBeanManager beanManager,\n                               Event<DataSetFilterChangedEvent> changeEvent)", "modifiers": "@Inject public", "return": "", "signature": " DataSetFilterEditor(View view,\n                               SyncBeanManager beanManager,\n                               Event<DataSetFilterChangedEvent> changeEvent)", "full_signature": "@Inject public  DataSetFilterEditor(View view,\n                               SyncBeanManager beanManager,\n                               Event<DataSetFilterChangedEvent> changeEvent)", "class_method_signature": "DataSetFilterEditor.DataSetFilterEditor(View view,\n                               SyncBeanManager beanManager,\n                               Event<DataSetFilterChangedEvent> changeEvent)", "testcase": false, "constructor": true}, {"identifier": "asWidget", "parameters": "()", "modifiers": "@Override public", "return": "Widget", "signature": "Widget asWidget()", "full_signature": "@Override public Widget asWidget()", "class_method_signature": "DataSetFilterEditor.asWidget()", "testcase": false, "constructor": false}, {"identifier": "getFilter", "parameters": "()", "modifiers": "public", "return": "DataSetFilter", "signature": "DataSetFilter getFilter()", "full_signature": "public DataSetFilter getFilter()", "class_method_signature": "DataSetFilterEditor.getFilter()", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "(DataSetFilter filter, DataSetMetadata metadata)", "modifiers": "public", "return": "void", "signature": "void init(DataSetFilter filter, DataSetMetadata metadata)", "full_signature": "public void init(DataSetFilter filter, DataSetMetadata metadata)", "class_method_signature": "DataSetFilterEditor.init(DataSetFilter filter, DataSetMetadata metadata)", "testcase": false, "constructor": false}, {"identifier": "onNewFilterStart", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onNewFilterStart()", "full_signature": "public void onNewFilterStart()", "class_method_signature": "DataSetFilterEditor.onNewFilterStart()", "testcase": false, "constructor": false}, {"identifier": "onNewFilterCancel", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onNewFilterCancel()", "full_signature": "public void onNewFilterCancel()", "class_method_signature": "DataSetFilterEditor.onNewFilterCancel()", "testcase": false, "constructor": false}, {"identifier": "onCreateFilter", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onCreateFilter()", "full_signature": "public void onCreateFilter()", "class_method_signature": "DataSetFilterEditor.onCreateFilter()", "testcase": false, "constructor": false}, {"identifier": "onColumnFilterChanged", "parameters": "(@Observes ColumnFilterChangedEvent event)", "modifiers": "protected", "return": "void", "signature": "void onColumnFilterChanged(@Observes ColumnFilterChangedEvent event)", "full_signature": "protected void onColumnFilterChanged(@Observes ColumnFilterChangedEvent event)", "class_method_signature": "DataSetFilterEditor.onColumnFilterChanged(@Observes ColumnFilterChangedEvent event)", "testcase": false, "constructor": false}, {"identifier": "onColumnFilterDeleted", "parameters": "(@Observes final ColumnFilterDeletedEvent event)", "modifiers": "protected", "return": "void", "signature": "void onColumnFilterDeleted(@Observes final ColumnFilterDeletedEvent event)", "full_signature": "protected void onColumnFilterDeleted(@Observes final ColumnFilterDeletedEvent event)", "class_method_signature": "DataSetFilterEditor.onColumnFilterDeleted(@Observes final ColumnFilterDeletedEvent event)", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-displayer-client/src/main/java/org/dashbuilder/displayer/client/widgets/filter/DataSetFilterEditor.java"}, "focal_method": {"identifier": "init", "parameters": "(DataSetFilter filter, DataSetMetadata metadata)", "modifiers": "public", "return": "void", "body": "public void init(DataSetFilter filter, DataSetMetadata metadata) {\n        this.filter = filter;\n        this.metadata = metadata;\n        view.showNewFilterHome();\n        view.clearColumnSelector();\n        if (metadata != null) {\n            for (int i = 0; i < metadata.getNumberOfColumns(); i++) {\n                view.addColumn(metadata.getColumnId(i));\n            }\n        }\n\n        view.clearColumnFilterEditors();\n        if (filter != null) {\n            for (ColumnFilter columnFilter : filter.getColumnFilterList()) {\n                ColumnFilterEditor columnFilterEditor = beanManager.lookupBean(ColumnFilterEditor.class).newInstance();\n                columnFilterEditor.init(metadata, columnFilter);\n                view.addColumnFilterEditor(columnFilterEditor);\n            }\n        }\n    }", "signature": "void init(DataSetFilter filter, DataSetMetadata metadata)", "full_signature": "public void init(DataSetFilter filter, DataSetMetadata metadata)", "class_method_signature": "DataSetFilterEditor.init(DataSetFilter filter, DataSetMetadata metadata)", "testcase": false, "constructor": false, "invocations": ["showNewFilterHome", "clearColumnSelector", "getNumberOfColumns", "addColumn", "getColumnId", "clearColumnFilterEditors", "getColumnFilterList", "newInstance", "lookupBean", "init", "addColumnFilterEditor"]}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}