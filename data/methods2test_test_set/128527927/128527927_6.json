{"test_class": {"identifier": "TestSimpleOomage", "superclass": "", "interfaces": "", "fields": [], "file": "hw3/hw3/hash/TestSimpleOomage.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n        SimpleOomage ooA = new SimpleOomage(5, 10, 20);\n        SimpleOomage ooA2 = new SimpleOomage(5, 10, 20);\n        SimpleOomage ooB = new SimpleOomage(50, 50, 50);\n        assertEquals(ooA, ooA2);\n        assertNotEquals(ooA, ooB);\n        assertNotEquals(ooA2, ooB);\n        assertNotEquals(ooA, \"ketchup\");\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "TestSimpleOomage.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "assertNotEquals", "assertNotEquals", "assertNotEquals"]}, "focal_class": {"identifier": "SimpleOomage", "superclass": "", "interfaces": "implements Oomage", "fields": [{"original_string": "protected int red;", "modifier": "protected", "type": "int", "declarator": "red", "var_name": "red"}, {"original_string": "protected int green;", "modifier": "protected", "type": "int", "declarator": "green", "var_name": "green"}, {"original_string": "protected int blue;", "modifier": "protected", "type": "int", "declarator": "blue", "var_name": "blue"}, {"original_string": "private static final double WIDTH = 0.01;", "modifier": "private static final", "type": "double", "declarator": "WIDTH = 0.01", "var_name": "WIDTH"}, {"original_string": "private static final boolean USE_PERFECT_HASH = false;", "modifier": "private static final", "type": "boolean", "declarator": "USE_PERFECT_HASH = false", "var_name": "USE_PERFECT_HASH"}], "methods": [{"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "SimpleOomage.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "SimpleOomage", "parameters": "(int r, int g, int b)", "modifiers": "public", "return": "", "signature": " SimpleOomage(int r, int g, int b)", "full_signature": "public  SimpleOomage(int r, int g, int b)", "class_method_signature": "SimpleOomage.SimpleOomage(int r, int g, int b)", "testcase": false, "constructor": true}, {"identifier": "draw", "parameters": "(double x, double y, double scalingFactor)", "modifiers": "@Override public", "return": "void", "signature": "void draw(double x, double y, double scalingFactor)", "full_signature": "@Override public void draw(double x, double y, double scalingFactor)", "class_method_signature": "SimpleOomage.draw(double x, double y, double scalingFactor)", "testcase": false, "constructor": false}, {"identifier": "randomSimpleOomage", "parameters": "()", "modifiers": "public static", "return": "SimpleOomage", "signature": "SimpleOomage randomSimpleOomage()", "full_signature": "public static SimpleOomage randomSimpleOomage()", "class_method_signature": "SimpleOomage.randomSimpleOomage()", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "SimpleOomage.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "SimpleOomage.toString()", "testcase": false, "constructor": false}], "file": "hw3/hw3/hash/SimpleOomage.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object o) {\n        // TODO: Write this method.\n        return false;\n    }", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "SimpleOomage.equals(Object o)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 128527927, "url": "https://github.com/shenzheyu/CS61B", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 21, "size": 2766, "license": "licensed"}}