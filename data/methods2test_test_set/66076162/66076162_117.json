{"test_class": {"identifier": "RequestPermissionInteractorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RequestPermissionInteractor requestPermissionInteractor;", "modifier": "private", "type": "RequestPermissionInteractor", "declarator": "requestPermissionInteractor", "var_name": "requestPermissionInteractor"}, {"original_string": "@Mock private PermissionActionProvider mockPermissionActionProvider;", "modifier": "@Mock private", "type": "PermissionActionProvider", "declarator": "mockPermissionActionProvider", "var_name": "mockPermissionActionProvider"}, {"original_string": "@Mock private ThreadExecutor mockThreadExecutor;", "modifier": "@Mock private", "type": "ThreadExecutor", "declarator": "mockThreadExecutor", "var_name": "mockThreadExecutor"}, {"original_string": "@Mock private PostExecutionThread mockPostExecutionThread;", "modifier": "@Mock private", "type": "PostExecutionThread", "declarator": "mockPostExecutionThread", "var_name": "mockPostExecutionThread"}], "file": "domain/src/test/java/com/remotecraft/app/domain/interactor/RequestPermissionInteractorTest.java"}, "test_case": {"identifier": "shouldReturnErrorGivenNullPermission", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldReturnErrorGivenNullPermission() throws Exception {\n    Single<Boolean> reactiveStream = requestPermissionInteractor.buildReactiveStream(null);\n\n    assertThat(reactiveStream).isNotNull();\n    TestObserver<Boolean> testObserver = reactiveStream.test();\n    testObserver.assertError(IllegalArgumentException.class);\n    testObserver.assertErrorMessage(\"Invalid Permission\");\n    testObserver.assertNotComplete();\n  }", "signature": "void shouldReturnErrorGivenNullPermission()", "full_signature": "@Test public void shouldReturnErrorGivenNullPermission()", "class_method_signature": "RequestPermissionInteractorTest.shouldReturnErrorGivenNullPermission()", "testcase": true, "constructor": false, "invocations": ["buildReactiveStream", "isNotNull", "assertThat", "test", "assertError", "assertErrorMessage", "assertNotComplete"]}, "focal_class": {"identifier": "RequestPermissionInteractor", "superclass": "extends SingleInteractor<Boolean, RequestPermissionInteractor.Params>", "interfaces": "", "fields": [{"original_string": "private final PermissionActionProvider permissionActionProvider;", "modifier": "private final", "type": "PermissionActionProvider", "declarator": "permissionActionProvider", "var_name": "permissionActionProvider"}], "methods": [{"identifier": "RequestPermissionInteractor", "parameters": "(PermissionActionProvider permissionActionProvider,\n      ThreadExecutor threadExecutor, PostExecutionThread postExecutionThread)", "modifiers": "public", "return": "", "signature": " RequestPermissionInteractor(PermissionActionProvider permissionActionProvider,\n      ThreadExecutor threadExecutor, PostExecutionThread postExecutionThread)", "full_signature": "public  RequestPermissionInteractor(PermissionActionProvider permissionActionProvider,\n      ThreadExecutor threadExecutor, PostExecutionThread postExecutionThread)", "class_method_signature": "RequestPermissionInteractor.RequestPermissionInteractor(PermissionActionProvider permissionActionProvider,\n      ThreadExecutor threadExecutor, PostExecutionThread postExecutionThread)", "testcase": false, "constructor": true}, {"identifier": "buildReactiveStream", "parameters": "(Params params)", "modifiers": "@Override protected", "return": "Single<Boolean>", "signature": "Single<Boolean> buildReactiveStream(Params params)", "full_signature": "@Override protected Single<Boolean> buildReactiveStream(Params params)", "class_method_signature": "RequestPermissionInteractor.buildReactiveStream(Params params)", "testcase": false, "constructor": false}], "file": "domain/src/main/java/com/remotecraft/app/domain/interactor/RequestPermissionInteractor.java"}, "focal_method": {"identifier": "buildReactiveStream", "parameters": "(Params params)", "modifiers": "@Override protected", "return": "Single<Boolean>", "body": "@Override\n  protected Single<Boolean> buildReactiveStream(Params params) {\n    if (params == null) {\n      return Single.error(new IllegalArgumentException(\"Invalid Permission\"));\n    }\n\n    return permissionActionProvider.request(params.permission);\n  }", "signature": "Single<Boolean> buildReactiveStream(Params params)", "full_signature": "@Override protected Single<Boolean> buildReactiveStream(Params params)", "class_method_signature": "RequestPermissionInteractor.buildReactiveStream(Params params)", "testcase": false, "constructor": false, "invocations": ["error", "request"]}, "repository": {"repo_id": 66076162, "url": "https://github.com/RemotecraftProject/RemotecraftApp", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 2502, "license": "licensed"}}