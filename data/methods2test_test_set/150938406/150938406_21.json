{"test_class": {"identifier": "ApproxVectorSimilarityJoinLSHBatchOpTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/alibaba/alink/operator/batch/similarity/ApproxVectorSimilarityJoinLSHBatchOpTest.java"}, "test_case": {"identifier": "testBRPSimilarity", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testBRPSimilarity(){\n\t\tint len = 200, size = 10;\n\t\tRow[] left = new Row[len];\n\t\tRow[] right = new Row[len];\n\t\tfor(int i = 0; i < left.length; i++){\n\t\t\tleft[i] = Row.of(i, DenseVector.rand(size));\n\t\t\tright[i] = Row.of(i, DenseVector.rand(size));\n\t\t}\n\n\t\tMemSourceBatchOp leftData = new MemSourceBatchOp(Arrays.asList(left), new String[] {\"leftId\", \"leftVec\"});\n\t\tMemSourceBatchOp rightData = new MemSourceBatchOp(Arrays.asList(right), new String[] {\"rightId\", \"rightVec\"});\n\n\t\tBatchOperator op = new ApproxVectorSimilarityJoinLSHBatchOp()\n\t\t\t.setLeftCol(\"leftVec\")\n\t\t\t.setRightCol(\"rightVec\")\n\t\t\t.setLeftIdCol(\"leftId\")\n\t\t\t.setRightIdCol(\"rightId\")\n\t\t\t.setDistanceType(\"EUCLIDEAN\")\n\t\t\t.setOutputCol(\"distance\")\n\t\t\t.setDistanceThreshold(1.0);\n\n\t\tList<Row> res = op.linkFrom(leftData, rightData).collect();\n\t\tfor(Row row : res){\n\t\t\tAssert.assertTrue((double)row.getField(2) < 1.0);\n\t\t}\n\t}", "signature": "void testBRPSimilarity()", "full_signature": "@Test public void testBRPSimilarity()", "class_method_signature": "ApproxVectorSimilarityJoinLSHBatchOpTest.testBRPSimilarity()", "testcase": true, "constructor": false, "invocations": ["of", "rand", "of", "rand", "asList", "asList", "setDistanceThreshold", "setOutputCol", "setDistanceType", "setRightIdCol", "setLeftIdCol", "setRightCol", "setLeftCol", "collect", "linkFrom", "assertTrue", "getField"]}, "focal_class": {"identifier": "ApproxVectorSimilarityJoinLSHBatchOp", "superclass": "extends BatchOperator<ApproxVectorSimilarityJoinLSHBatchOp>", "interfaces": "implements ApproxVectorJoinLSHParams<ApproxVectorSimilarityJoinLSHBatchOp>", "fields": [], "methods": [{"identifier": "ApproxVectorSimilarityJoinLSHBatchOp", "parameters": "()", "modifiers": "public", "return": "", "signature": " ApproxVectorSimilarityJoinLSHBatchOp()", "full_signature": "public  ApproxVectorSimilarityJoinLSHBatchOp()", "class_method_signature": "ApproxVectorSimilarityJoinLSHBatchOp.ApproxVectorSimilarityJoinLSHBatchOp()", "testcase": false, "constructor": true}, {"identifier": "ApproxVectorSimilarityJoinLSHBatchOp", "parameters": "(Params params)", "modifiers": "public", "return": "", "signature": " ApproxVectorSimilarityJoinLSHBatchOp(Params params)", "full_signature": "public  ApproxVectorSimilarityJoinLSHBatchOp(Params params)", "class_method_signature": "ApproxVectorSimilarityJoinLSHBatchOp.ApproxVectorSimilarityJoinLSHBatchOp(Params params)", "testcase": false, "constructor": true}, {"identifier": "linkFrom", "parameters": "(BatchOperator<?>... inputs)", "modifiers": "@Override public", "return": "ApproxVectorSimilarityJoinLSHBatchOp", "signature": "ApproxVectorSimilarityJoinLSHBatchOp linkFrom(BatchOperator<?>... inputs)", "full_signature": "@Override public ApproxVectorSimilarityJoinLSHBatchOp linkFrom(BatchOperator<?>... inputs)", "class_method_signature": "ApproxVectorSimilarityJoinLSHBatchOp.linkFrom(BatchOperator<?>... inputs)", "testcase": false, "constructor": false}, {"identifier": "getJoinOutputSchema", "parameters": "(BatchOperator[] inputs, String leftIdCol, String rightIdCol)", "modifiers": "static", "return": "TableSchema", "signature": "TableSchema getJoinOutputSchema(BatchOperator[] inputs, String leftIdCol, String rightIdCol)", "full_signature": "static TableSchema getJoinOutputSchema(BatchOperator[] inputs, String leftIdCol, String rightIdCol)", "class_method_signature": "ApproxVectorSimilarityJoinLSHBatchOp.getJoinOutputSchema(BatchOperator[] inputs, String leftIdCol, String rightIdCol)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/alibaba/alink/operator/batch/similarity/ApproxVectorSimilarityJoinLSHBatchOp.java"}, "focal_method": {"identifier": "linkFrom", "parameters": "(BatchOperator<?>... inputs)", "modifiers": "@Override public", "return": "ApproxVectorSimilarityJoinLSHBatchOp", "body": "@Override\n    public ApproxVectorSimilarityJoinLSHBatchOp linkFrom(BatchOperator<?>... inputs) {\n        checkOpSize(2, inputs);\n\n        String leftIdCol = this.getLeftIdCol();\n        String rightIdCol = this.getRightIdCol();\n\n        DataSet<BaseLSH> lsh = LocalitySensitiveHashApproxFunctions.buildLSH(inputs[0], inputs[1], this.getParams());\n\n        DataSet<Row> res = LocalitySensitiveHashApproxFunctions.approxSimilarityJoin(\n            inputs[0].select(new String[] {leftIdCol, getLeftCol()}).getDataSet(),\n            inputs[1].select(new String[] {rightIdCol, getRightCol()}).getDataSet(), this.getDistanceThreshold(), lsh);\n\n        this.setOutput(res, getJoinOutputSchema(inputs, leftIdCol, rightIdCol));\n        return this;\n    }", "signature": "ApproxVectorSimilarityJoinLSHBatchOp linkFrom(BatchOperator<?>... inputs)", "full_signature": "@Override public ApproxVectorSimilarityJoinLSHBatchOp linkFrom(BatchOperator<?>... inputs)", "class_method_signature": "ApproxVectorSimilarityJoinLSHBatchOp.linkFrom(BatchOperator<?>... inputs)", "testcase": false, "constructor": false, "invocations": ["checkOpSize", "getLeftIdCol", "getRightIdCol", "buildLSH", "getParams", "approxSimilarityJoin", "getDataSet", "select", "getLeftCol", "getDataSet", "select", "getRightCol", "getDistanceThreshold", "setOutput", "getJoinOutputSchema"]}, "repository": {"repo_id": 150938406, "url": "https://github.com/alibaba/Alink", "stars": 1923, "created": "9/30/2018 6:36:11 AM +00:00", "updates": "2020-01-27T10:24:34+00:00", "fork": "False", "license": "licensed"}}