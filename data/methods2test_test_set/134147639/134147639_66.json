{"test_class": {"identifier": "CredentialProtectionExtensionAuthenticatorInputTest", "superclass": "", "interfaces": "", "fields": [], "file": "webauthn4j-core/src/test/java/com/webauthn4j/data/extension/authenticator/CredentialProtectionExtensionAuthenticatorInputTest.java"}, "test_case": {"identifier": "getValue_with_valid_key_test", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void getValue_with_valid_key_test(){\n        CredentialProtectionExtensionAuthenticatorInput target = new CredentialProtectionExtensionAuthenticatorInput(CredentialProtectionPolicy.USER_VERIFICATION_OPTIONAL_WITH_CREDENTIAL_ID_LIST);\n        assertThatCode(()->target.getValue(\"credProtect\")).doesNotThrowAnyException();\n    }", "signature": "void getValue_with_valid_key_test()", "full_signature": "@Test void getValue_with_valid_key_test()", "class_method_signature": "CredentialProtectionExtensionAuthenticatorInputTest.getValue_with_valid_key_test()", "testcase": true, "constructor": false, "invocations": ["doesNotThrowAnyException", "assertThatCode", "getValue"]}, "focal_class": {"identifier": "CredentialProtectionExtensionAuthenticatorInput", "superclass": "", "interfaces": "implements RegistrationExtensionAuthenticatorInput", "fields": [{"original_string": "public static final String ID = \"credProtect\";", "modifier": "public static final", "type": "String", "declarator": "ID = \"credProtect\"", "var_name": "ID"}, {"original_string": "public static final String KEY_CRED_PROTECT = \"credProtect\";", "modifier": "public static final", "type": "String", "declarator": "KEY_CRED_PROTECT = \"credProtect\"", "var_name": "KEY_CRED_PROTECT"}, {"original_string": "private final CredentialProtectionPolicy credProtect;", "modifier": "private final", "type": "CredentialProtectionPolicy", "declarator": "credProtect", "var_name": "credProtect"}], "methods": [{"identifier": "CredentialProtectionExtensionAuthenticatorInput", "parameters": "(CredentialProtectionPolicy credProtect)", "modifiers": "public", "return": "", "signature": " CredentialProtectionExtensionAuthenticatorInput(CredentialProtectionPolicy credProtect)", "full_signature": "public  CredentialProtectionExtensionAuthenticatorInput(CredentialProtectionPolicy credProtect)", "class_method_signature": "CredentialProtectionExtensionAuthenticatorInput.CredentialProtectionExtensionAuthenticatorInput(CredentialProtectionPolicy credProtect)", "testcase": false, "constructor": true}, {"identifier": "getIdentifier", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getIdentifier()", "full_signature": "@Override public String getIdentifier()", "class_method_signature": "CredentialProtectionExtensionAuthenticatorInput.getIdentifier()", "testcase": false, "constructor": false}, {"identifier": "getCredProtect", "parameters": "()", "modifiers": "public", "return": "CredentialProtectionPolicy", "signature": "CredentialProtectionPolicy getCredProtect()", "full_signature": "public CredentialProtectionPolicy getCredProtect()", "class_method_signature": "CredentialProtectionExtensionAuthenticatorInput.getCredProtect()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "(String key)", "modifiers": "@Override public", "return": "Serializable", "signature": "Serializable getValue(String key)", "full_signature": "@Override public Serializable getValue(String key)", "class_method_signature": "CredentialProtectionExtensionAuthenticatorInput.getValue(String key)", "testcase": false, "constructor": false}, {"identifier": "validate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void validate()", "full_signature": "@Override public void validate()", "class_method_signature": "CredentialProtectionExtensionAuthenticatorInput.validate()", "testcase": false, "constructor": false}], "file": "webauthn4j-core/src/main/java/com/webauthn4j/data/extension/authenticator/CredentialProtectionExtensionAuthenticatorInput.java"}, "focal_method": {"identifier": "getValue", "parameters": "(String key)", "modifiers": "@Override public", "return": "Serializable", "body": "@Override\n    public Serializable getValue(String key) {\n        if (KEY_CRED_PROTECT.equals(key)) {\n            return credProtect;\n        }\n        throw new IllegalArgumentException(String.format(\"%s is not valid key.\", key));\n    }", "signature": "Serializable getValue(String key)", "full_signature": "@Override public Serializable getValue(String key)", "class_method_signature": "CredentialProtectionExtensionAuthenticatorInput.getValue(String key)", "testcase": false, "constructor": false, "invocations": ["equals", "format"]}, "repository": {"repo_id": 134147639, "url": "https://github.com/webauthn4j/webauthn4j", "stars": 101, "created": "5/20/2018 12:14:36 PM +00:00", "updates": "2020-01-27T13:01:46+00:00", "fork": "False", "license": "licensed"}}