{"test_class": {"identifier": "ConfigurationCheckerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TemporaryFolder folder;", "modifier": "private", "type": "TemporaryFolder", "declarator": "folder", "var_name": "folder"}, {"original_string": "private Artifact artifact;", "modifier": "private", "type": "Artifact", "declarator": "artifact", "var_name": "artifact"}, {"original_string": "private ArtifactSelector selector;", "modifier": "private", "type": "ArtifactSelector", "declarator": "selector", "var_name": "selector"}, {"original_string": "private List<Artifact> artifacts;", "modifier": "private", "type": "List<Artifact>", "declarator": "artifacts", "var_name": "artifacts"}, {"original_string": "private Configuration config;", "modifier": "private", "type": "Configuration", "declarator": "config", "var_name": "config"}, {"original_string": "private Reporter reporter;", "modifier": "private", "type": "Reporter", "declarator": "reporter", "var_name": "reporter"}], "file": "core/core-workflow-steps/src/test/java/org/eclipse/sw360/antenna/workflow/processors/checkers/ConfigurationCheckerTest.java"}, "test_case": {"identifier": "testNecessaryIgnoreForSourceResolving", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNecessaryIgnoreForSourceResolving() {\n        List<ArtifactSelector> ignoreForSourceResolving = new ArrayList<>();\n        ignoreForSourceResolving.add(selector);\n        ConfigurationChecker checker = new ConfigurationChecker(reporter, config);\n        artifacts.add(this.artifact);\n        checker.process(artifacts);\n        assertThat(reporter.getProcessingReport().getMessageList()).isEmpty();\n    }", "signature": "void testNecessaryIgnoreForSourceResolving()", "full_signature": "@Test public void testNecessaryIgnoreForSourceResolving()", "class_method_signature": "ConfigurationCheckerTest.testNecessaryIgnoreForSourceResolving()", "testcase": true, "constructor": false, "invocations": ["add", "add", "process", "isEmpty", "assertThat", "getMessageList", "getProcessingReport"]}, "focal_class": {"identifier": "ConfigurationChecker", "superclass": "extends AbstractProcessor", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ConfigurationChecker.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ConfigurationChecker.class)", "var_name": "LOGGER"}, {"original_string": "private Configuration config;", "modifier": "private", "type": "Configuration", "declarator": "config", "var_name": "config"}], "methods": [{"identifier": "ConfigurationChecker", "parameters": "(IProcessingReporter reporter, Configuration config)", "modifiers": "public", "return": "", "signature": " ConfigurationChecker(IProcessingReporter reporter, Configuration config)", "full_signature": "public  ConfigurationChecker(IProcessingReporter reporter, Configuration config)", "class_method_signature": "ConfigurationChecker.ConfigurationChecker(IProcessingReporter reporter, Configuration config)", "testcase": false, "constructor": true}, {"identifier": "process", "parameters": "(Collection<Artifact> intermediates)", "modifiers": "@Override public", "return": "Collection<Artifact>", "signature": "Collection<Artifact> process(Collection<Artifact> intermediates)", "full_signature": "@Override public Collection<Artifact> process(Collection<Artifact> intermediates)", "class_method_signature": "ConfigurationChecker.process(Collection<Artifact> intermediates)", "testcase": false, "constructor": false}, {"identifier": "checkForUnnecessaryInformation", "parameters": "(Collection<Artifact> artifacts)", "modifiers": "private", "return": "void", "signature": "void checkForUnnecessaryInformation(Collection<Artifact> artifacts)", "full_signature": "private void checkForUnnecessaryInformation(Collection<Artifact> artifacts)", "class_method_signature": "ConfigurationChecker.checkForUnnecessaryInformation(Collection<Artifact> artifacts)", "testcase": false, "constructor": false}, {"identifier": "checkSourceResolving", "parameters": "(Collection<Artifact> artifacts)", "modifiers": "private", "return": "void", "signature": "void checkSourceResolving(Collection<Artifact> artifacts)", "full_signature": "private void checkSourceResolving(Collection<Artifact> artifacts)", "class_method_signature": "ConfigurationChecker.checkSourceResolving(Collection<Artifact> artifacts)", "testcase": false, "constructor": false}, {"identifier": "checkSecurityIssue", "parameters": "(Collection<Artifact> artifacts)", "modifiers": "private", "return": "void", "signature": "void checkSecurityIssue(Collection<Artifact> artifacts)", "full_signature": "private void checkSecurityIssue(Collection<Artifact> artifacts)", "class_method_signature": "ConfigurationChecker.checkSecurityIssue(Collection<Artifact> artifacts)", "testcase": false, "constructor": false}, {"identifier": "checkSetFinalLicense", "parameters": "(Collection<Artifact> artifacts)", "modifiers": "private", "return": "void", "signature": "void checkSetFinalLicense(Collection<Artifact> artifacts)", "full_signature": "private void checkSetFinalLicense(Collection<Artifact> artifacts)", "class_method_signature": "ConfigurationChecker.checkSetFinalLicense(Collection<Artifact> artifacts)", "testcase": false, "constructor": false}, {"identifier": "checkHandleSourceAsValid", "parameters": "(Collection<Artifact> artifacts)", "modifiers": "private", "return": "void", "signature": "void checkHandleSourceAsValid(Collection<Artifact> artifacts)", "full_signature": "private void checkHandleSourceAsValid(Collection<Artifact> artifacts)", "class_method_signature": "ConfigurationChecker.checkHandleSourceAsValid(Collection<Artifact> artifacts)", "testcase": false, "constructor": false}, {"identifier": "checkOverrideArtifact", "parameters": "(Collection<Artifact> artifacts)", "modifiers": "private", "return": "void", "signature": "void checkOverrideArtifact(Collection<Artifact> artifacts)", "full_signature": "private void checkOverrideArtifact(Collection<Artifact> artifacts)", "class_method_signature": "ConfigurationChecker.checkOverrideArtifact(Collection<Artifact> artifacts)", "testcase": false, "constructor": false}, {"identifier": "checkRemoveArtifact", "parameters": "(Collection<Artifact> artifacts)", "modifiers": "private", "return": "void", "signature": "void checkRemoveArtifact(Collection<Artifact> artifacts)", "full_signature": "private void checkRemoveArtifact(Collection<Artifact> artifacts)", "class_method_signature": "ConfigurationChecker.checkRemoveArtifact(Collection<Artifact> artifacts)", "testcase": false, "constructor": false}, {"identifier": "check", "parameters": "(Collection<Artifact> artifacts, Map<ArtifactSelector,T>  selectors, String type)", "modifiers": "private", "return": "void", "signature": "void check(Collection<Artifact> artifacts, Map<ArtifactSelector,T>  selectors, String type)", "full_signature": "private void check(Collection<Artifact> artifacts, Map<ArtifactSelector,T>  selectors, String type)", "class_method_signature": "ConfigurationChecker.check(Collection<Artifact> artifacts, Map<ArtifactSelector,T>  selectors, String type)", "testcase": false, "constructor": false}, {"identifier": "checkSecIssues", "parameters": "(Collection<Artifact> artifacts, Map<ArtifactSelector, Issues> securityIssues, String type)", "modifiers": "private", "return": "void", "signature": "void checkSecIssues(Collection<Artifact> artifacts, Map<ArtifactSelector, Issues> securityIssues, String type)", "full_signature": "private void checkSecIssues(Collection<Artifact> artifacts, Map<ArtifactSelector, Issues> securityIssues, String type)", "class_method_signature": "ConfigurationChecker.checkSecIssues(Collection<Artifact> artifacts, Map<ArtifactSelector, Issues> securityIssues, String type)", "testcase": false, "constructor": false}, {"identifier": "check", "parameters": "(Collection<Artifact> artifacts, Collection<ArtifactSelector> selectors, String type)", "modifiers": "private", "return": "void", "signature": "void check(Collection<Artifact> artifacts, Collection<ArtifactSelector> selectors, String type)", "full_signature": "private void check(Collection<Artifact> artifacts, Collection<ArtifactSelector> selectors, String type)", "class_method_signature": "ConfigurationChecker.check(Collection<Artifact> artifacts, Collection<ArtifactSelector> selectors, String type)", "testcase": false, "constructor": false}], "file": "core/core-workflow-steps/src/main/java/org/eclipse/sw360/antenna/workflow/processors/checkers/ConfigurationChecker.java"}, "focal_method": {"identifier": "process", "parameters": "(Collection<Artifact> intermediates)", "modifiers": "@Override public", "return": "Collection<Artifact>", "body": "@Override\n    public Collection<Artifact> process(Collection<Artifact> intermediates) {\n        LOGGER.debug(\"Check for unnecessary configuration configuration ...\");\n        checkForUnnecessaryInformation(intermediates);\n        LOGGER.debug(\"Check for unnecessary configuration configuration... done.\");\n        return intermediates;\n    }", "signature": "Collection<Artifact> process(Collection<Artifact> intermediates)", "full_signature": "@Override public Collection<Artifact> process(Collection<Artifact> intermediates)", "class_method_signature": "ConfigurationChecker.process(Collection<Artifact> intermediates)", "testcase": false, "constructor": false, "invocations": ["debug", "checkForUnnecessaryInformation", "debug"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}