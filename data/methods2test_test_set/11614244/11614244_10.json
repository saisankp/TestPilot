{"test_class": {"identifier": "ScaleToNearestFactorPreprocessorTest", "superclass": "", "interfaces": "", "fields": [], "file": "photohawk-image-evaluator/src/test/java/at/ac/tuwien/photohawk/evaluation/preprocessing/ScaleToNearestFactorPreprocessorTest.java"}, "test_case": {"identifier": "executeTest_ltSize_gtSize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void executeTest_ltSize_gtSize() {\n        BufferedImage img1 = BufferedImageHelper.createSolidImage(new Color(0, 0, 0), 400, 200);\n        BufferedImage img2 = BufferedImageHelper.createSolidImage(new Color(0, 0, 0), 100, 50);\n        ScaleToNearestFactorPreprocessor pp = new ScaleToNearestFactorPreprocessor(img1, img2, 100);\n        pp.process();\n\n        Assert.assertEquals(200, pp.getResult1().getWidth());\n        Assert.assertEquals(100, pp.getResult1().getHeight());\n        Assert.assertEquals(100, pp.getResult2().getWidth());\n        Assert.assertEquals(50, pp.getResult2().getHeight());\n    }", "signature": "void executeTest_ltSize_gtSize()", "full_signature": "@Test public void executeTest_ltSize_gtSize()", "class_method_signature": "ScaleToNearestFactorPreprocessorTest.executeTest_ltSize_gtSize()", "testcase": true, "constructor": false, "invocations": ["createSolidImage", "createSolidImage", "process", "assertEquals", "getWidth", "getResult1", "assertEquals", "getHeight", "getResult1", "assertEquals", "getWidth", "getResult2", "assertEquals", "getHeight", "getResult2"]}, "focal_class": {"identifier": "ScaleToNearestFactorPreprocessor", "superclass": "extends ScalePreprocessor", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LogManager.getLogger(ScaleToNearestFactorPreprocessor.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LogManager.getLogger(ScaleToNearestFactorPreprocessor.class)", "var_name": "LOGGER"}, {"original_string": "private static final float THRESHOLD = 0.95f;", "modifier": "private static final", "type": "float", "declarator": "THRESHOLD = 0.95f", "var_name": "THRESHOLD"}], "methods": [{"identifier": "ScaleToNearestFactorPreprocessor", "parameters": "(final BufferedImage img1, final BufferedImage img2, int targetSize)", "modifiers": "public", "return": "", "signature": " ScaleToNearestFactorPreprocessor(final BufferedImage img1, final BufferedImage img2, int targetSize)", "full_signature": "public  ScaleToNearestFactorPreprocessor(final BufferedImage img1, final BufferedImage img2, int targetSize)", "class_method_signature": "ScaleToNearestFactorPreprocessor.ScaleToNearestFactorPreprocessor(final BufferedImage img1, final BufferedImage img2, int targetSize)", "testcase": false, "constructor": true}, {"identifier": "calcScaleFactor", "parameters": "(final BufferedImage img, final int targetSize)", "modifiers": "private static", "return": "double", "signature": "double calcScaleFactor(final BufferedImage img, final int targetSize)", "full_signature": "private static double calcScaleFactor(final BufferedImage img, final int targetSize)", "class_method_signature": "ScaleToNearestFactorPreprocessor.calcScaleFactor(final BufferedImage img, final int targetSize)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void process()", "full_signature": "@Override public void process()", "class_method_signature": "ScaleToNearestFactorPreprocessor.process()", "testcase": false, "constructor": false}], "file": "photohawk-image-evaluator/src/main/java/at/ac/tuwien/photohawk/evaluation/preprocessing/ScaleToNearestFactorPreprocessor.java"}, "focal_method": {"identifier": "process", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void process() {\n        if (widthFactor1 < THRESHOLD || heightFactor1 < THRESHOLD || widthFactor2 < THRESHOLD ||\n                heightFactor2 < THRESHOLD) {\n            LOGGER.info(\"Scaling image with factors [{}], [{}]\", widthFactor1, heightFactor1);\n            super.process();\n        } else {\n            LOGGER.info(\"All scale factors [{}], [{}], [{}], [{}] are above threshold [{}]\", widthFactor1,\n                        heightFactor1, widthFactor2, heightFactor2, THRESHOLD);\n            result1 = img1;\n            result2 = img2;\n        }\n    }", "signature": "void process()", "full_signature": "@Override public void process()", "class_method_signature": "ScaleToNearestFactorPreprocessor.process()", "testcase": false, "constructor": false, "invocations": ["info", "process", "info"]}, "repository": {"repo_id": 11614244, "url": "https://github.com/datascience/photohawk", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 6, "size": 4209, "license": "licensed"}}