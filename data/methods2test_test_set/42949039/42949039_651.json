{"test_class": {"identifier": "BusinessObjectFormatExternalInterfaceServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "@Mock\n    private BusinessObjectFormatDaoHelper businessObjectFormatDaoHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectFormatDaoHelper", "declarator": "businessObjectFormatDaoHelper", "var_name": "businessObjectFormatDaoHelper"}, {"original_string": "@Mock\n    private BusinessObjectFormatExternalInterfaceDao businessObjectFormatExternalInterfaceDao;", "modifier": "@Mock\n    private", "type": "BusinessObjectFormatExternalInterfaceDao", "declarator": "businessObjectFormatExternalInterfaceDao", "var_name": "businessObjectFormatExternalInterfaceDao"}, {"original_string": "@Mock\n    private BusinessObjectFormatExternalInterfaceDaoHelper businessObjectFormatExternalInterfaceDaoHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectFormatExternalInterfaceDaoHelper", "declarator": "businessObjectFormatExternalInterfaceDaoHelper", "var_name": "businessObjectFormatExternalInterfaceDaoHelper"}, {"original_string": "@Mock\n    private BusinessObjectFormatExternalInterfaceHelper businessObjectFormatExternalInterfaceHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectFormatExternalInterfaceHelper", "declarator": "businessObjectFormatExternalInterfaceHelper", "var_name": "businessObjectFormatExternalInterfaceHelper"}, {"original_string": "@InjectMocks\n    private BusinessObjectFormatExternalInterfaceServiceImpl businessObjectFormatExternalInterfaceService;", "modifier": "@InjectMocks\n    private", "type": "BusinessObjectFormatExternalInterfaceServiceImpl", "declarator": "businessObjectFormatExternalInterfaceService", "var_name": "businessObjectFormatExternalInterfaceService"}, {"original_string": "@Mock\n    private ExternalInterfaceDaoHelper externalInterfaceDaoHelper;", "modifier": "@Mock\n    private", "type": "ExternalInterfaceDaoHelper", "declarator": "externalInterfaceDaoHelper", "var_name": "externalInterfaceDaoHelper"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/impl/BusinessObjectFormatExternalInterfaceServiceImplTest.java"}, "test_case": {"identifier": "testCreateBusinessObjectFormatExternalInterfaceAlreadyExists", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateBusinessObjectFormatExternalInterfaceAlreadyExists()\n    {\n        // Create a business object format to external interface mapping key.\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey =\n            new BusinessObjectFormatExternalInterfaceKey(NAMESPACE, BDEF_NAME, FORMAT_USAGE_CODE, FORMAT_FILE_TYPE_CODE, EXTERNAL_INTERFACE);\n\n        // Create a business object format to external interface mapping create request.\n        BusinessObjectFormatExternalInterfaceCreateRequest businessObjectFormatExternalInterfaceCreateRequest =\n            new BusinessObjectFormatExternalInterfaceCreateRequest(businessObjectFormatExternalInterfaceKey);\n\n        // Create a business object format entity.\n        BusinessObjectFormatEntity businessObjectFormatEntity = new BusinessObjectFormatEntity();\n\n        // Create a external interface entity.\n        ExternalInterfaceEntity externalInterfaceEntity = new ExternalInterfaceEntity();\n\n        // Mock the external calls.\n        when(businessObjectFormatDaoHelper\n            .getBusinessObjectFormatEntity(new BusinessObjectFormatKey(NAMESPACE, BDEF_NAME, FORMAT_USAGE_CODE, FORMAT_FILE_TYPE_CODE, null)))\n            .thenReturn(businessObjectFormatEntity);\n        when(externalInterfaceDaoHelper.getExternalInterfaceEntity(EXTERNAL_INTERFACE)).thenReturn(externalInterfaceEntity);\n        when(businessObjectFormatExternalInterfaceDao\n            .getBusinessObjectFormatExternalInterfaceByBusinessObjectFormatAndExternalInterface(businessObjectFormatEntity, externalInterfaceEntity))\n            .thenReturn(new BusinessObjectFormatExternalInterfaceEntity());\n\n        // Specify the expected exception.\n        expectedException.expect(AlreadyExistsException.class);\n        expectedException.expectMessage(String.format(\"Unable to create business object format to external interface mapping for \\\"%s\\\" namespace, \" +\n            \"\\\"%s\\\" business object definition name, \\\"%s\\\" business object format usage, \\\"%s\\\" business object format file type, and \" +\n            \"\\\"%s\\\" external interface name because it already exists.\", NAMESPACE, BDEF_NAME, FORMAT_USAGE_CODE, FORMAT_FILE_TYPE_CODE, EXTERNAL_INTERFACE));\n\n        // Call the method under test.\n        businessObjectFormatExternalInterfaceService.createBusinessObjectFormatExternalInterface(businessObjectFormatExternalInterfaceCreateRequest);\n\n        // Verify the external calls.\n        verify(businessObjectFormatExternalInterfaceHelper)\n            .validateAndTrimBusinessObjectFormatExternalInterfaceCreateRequest(businessObjectFormatExternalInterfaceCreateRequest);\n        verify(businessObjectFormatDaoHelper)\n            .getBusinessObjectFormatEntity(new BusinessObjectFormatKey(NAMESPACE, BDEF_NAME, FORMAT_USAGE_CODE, FORMAT_FILE_TYPE_CODE, null));\n        verify(externalInterfaceDaoHelper).getExternalInterfaceEntity(EXTERNAL_INTERFACE);\n        verify(businessObjectFormatExternalInterfaceDao)\n            .getBusinessObjectFormatExternalInterfaceByBusinessObjectFormatAndExternalInterface(businessObjectFormatEntity, externalInterfaceEntity);\n        verifyNoMoreInteractionsHelper();\n    }", "signature": "void testCreateBusinessObjectFormatExternalInterfaceAlreadyExists()", "full_signature": "@Test public void testCreateBusinessObjectFormatExternalInterfaceAlreadyExists()", "class_method_signature": "BusinessObjectFormatExternalInterfaceServiceImplTest.testCreateBusinessObjectFormatExternalInterfaceAlreadyExists()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getBusinessObjectFormatEntity", "thenReturn", "when", "getExternalInterfaceEntity", "thenReturn", "when", "getBusinessObjectFormatExternalInterfaceByBusinessObjectFormatAndExternalInterface", "expect", "expectMessage", "format", "createBusinessObjectFormatExternalInterface", "validateAndTrimBusinessObjectFormatExternalInterfaceCreateRequest", "verify", "getBusinessObjectFormatEntity", "verify", "getExternalInterfaceEntity", "verify", "getBusinessObjectFormatExternalInterfaceByBusinessObjectFormatAndExternalInterface", "verify", "verifyNoMoreInteractionsHelper"]}, "focal_class": {"identifier": "BusinessObjectFormatExternalInterfaceServiceImpl", "superclass": "", "interfaces": "implements BusinessObjectFormatExternalInterfaceService", "fields": [{"original_string": "@Autowired\n    private BusinessObjectFormatDaoHelper businessObjectFormatDaoHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectFormatDaoHelper", "declarator": "businessObjectFormatDaoHelper", "var_name": "businessObjectFormatDaoHelper"}, {"original_string": "@Autowired\n    private BusinessObjectFormatExternalInterfaceDao businessObjectFormatExternalInterfaceDao;", "modifier": "@Autowired\n    private", "type": "BusinessObjectFormatExternalInterfaceDao", "declarator": "businessObjectFormatExternalInterfaceDao", "var_name": "businessObjectFormatExternalInterfaceDao"}, {"original_string": "@Autowired\n    private BusinessObjectFormatExternalInterfaceDaoHelper businessObjectFormatExternalInterfaceDaoHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectFormatExternalInterfaceDaoHelper", "declarator": "businessObjectFormatExternalInterfaceDaoHelper", "var_name": "businessObjectFormatExternalInterfaceDaoHelper"}, {"original_string": "@Autowired\n    private BusinessObjectFormatExternalInterfaceHelper businessObjectFormatExternalInterfaceHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectFormatExternalInterfaceHelper", "declarator": "businessObjectFormatExternalInterfaceHelper", "var_name": "businessObjectFormatExternalInterfaceHelper"}, {"original_string": "@Autowired\n    private ExternalInterfaceDaoHelper externalInterfaceDaoHelper;", "modifier": "@Autowired\n    private", "type": "ExternalInterfaceDaoHelper", "declarator": "externalInterfaceDaoHelper", "var_name": "externalInterfaceDaoHelper"}], "methods": [{"identifier": "createBusinessObjectFormatExternalInterface", "parameters": "(\n        BusinessObjectFormatExternalInterfaceCreateRequest businessObjectFormatExternalInterfaceCreateRequest)", "modifiers": "@Override public", "return": "BusinessObjectFormatExternalInterface", "signature": "BusinessObjectFormatExternalInterface createBusinessObjectFormatExternalInterface(\n        BusinessObjectFormatExternalInterfaceCreateRequest businessObjectFormatExternalInterfaceCreateRequest)", "full_signature": "@Override public BusinessObjectFormatExternalInterface createBusinessObjectFormatExternalInterface(\n        BusinessObjectFormatExternalInterfaceCreateRequest businessObjectFormatExternalInterfaceCreateRequest)", "class_method_signature": "BusinessObjectFormatExternalInterfaceServiceImpl.createBusinessObjectFormatExternalInterface(\n        BusinessObjectFormatExternalInterfaceCreateRequest businessObjectFormatExternalInterfaceCreateRequest)", "testcase": false, "constructor": false}, {"identifier": "deleteBusinessObjectFormatExternalInterface", "parameters": "(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)", "modifiers": "@Override public", "return": "BusinessObjectFormatExternalInterface", "signature": "BusinessObjectFormatExternalInterface deleteBusinessObjectFormatExternalInterface(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)", "full_signature": "@Override public BusinessObjectFormatExternalInterface deleteBusinessObjectFormatExternalInterface(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)", "class_method_signature": "BusinessObjectFormatExternalInterfaceServiceImpl.deleteBusinessObjectFormatExternalInterface(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)", "testcase": false, "constructor": false}, {"identifier": "getBusinessObjectFormatExternalInterface", "parameters": "(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)", "modifiers": "@Override public", "return": "BusinessObjectFormatExternalInterface", "signature": "BusinessObjectFormatExternalInterface getBusinessObjectFormatExternalInterface(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)", "full_signature": "@Override public BusinessObjectFormatExternalInterface getBusinessObjectFormatExternalInterface(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)", "class_method_signature": "BusinessObjectFormatExternalInterfaceServiceImpl.getBusinessObjectFormatExternalInterface(\n        BusinessObjectFormatExternalInterfaceKey businessObjectFormatExternalInterfaceKey)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/impl/BusinessObjectFormatExternalInterfaceServiceImpl.java"}, "focal_method": {"identifier": "createBusinessObjectFormatExternalInterface", "parameters": "(\n        BusinessObjectFormatExternalInterfaceCreateRequest businessObjectFormatExternalInterfaceCreateRequest)", "modifiers": "@Override public", "return": "BusinessObjectFormatExternalInterface", "body": "@Override\n    public BusinessObjectFormatExternalInterface createBusinessObjectFormatExternalInterface(\n        BusinessObjectFormatExternalInterfaceCreateRequest businessObjectFormatExternalInterfaceCreateRequest)\n    {\n        // Validate and trim the business object format to external interface mapping create request.\n        businessObjectFormatExternalInterfaceHelper\n            .validateAndTrimBusinessObjectFormatExternalInterfaceCreateRequest(businessObjectFormatExternalInterfaceCreateRequest);\n\n        // Get a business object format key from the request. Please note that the key is version-less.\n        BusinessObjectFormatKey businessObjectFormatKey =\n            new BusinessObjectFormatKey(businessObjectFormatExternalInterfaceCreateRequest.getBusinessObjectFormatExternalInterfaceKey().getNamespace(),\n                businessObjectFormatExternalInterfaceCreateRequest.getBusinessObjectFormatExternalInterfaceKey().getBusinessObjectDefinitionName(),\n                businessObjectFormatExternalInterfaceCreateRequest.getBusinessObjectFormatExternalInterfaceKey().getBusinessObjectFormatUsage(),\n                businessObjectFormatExternalInterfaceCreateRequest.getBusinessObjectFormatExternalInterfaceKey().getBusinessObjectFormatFileType(), null);\n\n        // Get an external interface name from the request.\n        String externalInterfaceName =\n            businessObjectFormatExternalInterfaceCreateRequest.getBusinessObjectFormatExternalInterfaceKey().getExternalInterfaceName();\n\n        // Retrieve and ensure that a business object format with the specified alternate key values exists.\n        BusinessObjectFormatEntity businessObjectFormatEntity = businessObjectFormatDaoHelper.getBusinessObjectFormatEntity(businessObjectFormatKey);\n\n        // Retrieve and ensure that an external interface with the specified name exists.\n        ExternalInterfaceEntity externalInterfaceEntity = externalInterfaceDaoHelper.getExternalInterfaceEntity(externalInterfaceName);\n\n        // Ensure a business object format to external interface mapping with the specified parameters doesn't already exist.\n        BusinessObjectFormatExternalInterfaceEntity businessObjectFormatExternalInterfaceEntity = businessObjectFormatExternalInterfaceDao\n            .getBusinessObjectFormatExternalInterfaceByBusinessObjectFormatAndExternalInterface(businessObjectFormatEntity, externalInterfaceEntity);\n        if (businessObjectFormatExternalInterfaceEntity != null)\n        {\n            throw new AlreadyExistsException(String.format(\"Unable to create business object format to external interface mapping for \\\"%s\\\" namespace, \" +\n                    \"\\\"%s\\\" business object definition name, \\\"%s\\\" business object format usage, \\\"%s\\\" business object format file type, and \" +\n                    \"\\\"%s\\\" external interface name because it already exists.\", businessObjectFormatKey.getNamespace(),\n                businessObjectFormatKey.getBusinessObjectDefinitionName(), businessObjectFormatKey.getBusinessObjectFormatUsage(),\n                businessObjectFormatKey.getBusinessObjectFormatFileType(), externalInterfaceName));\n        }\n\n        // Creates a business object format to external interface mapping entity.\n        businessObjectFormatExternalInterfaceEntity = new BusinessObjectFormatExternalInterfaceEntity();\n        businessObjectFormatExternalInterfaceEntity.setBusinessObjectFormat(businessObjectFormatEntity);\n        businessObjectFormatExternalInterfaceEntity.setExternalInterface(externalInterfaceEntity);\n\n        // Persist the new entity.\n        businessObjectFormatExternalInterfaceDao.saveAndRefresh(businessObjectFormatExternalInterfaceEntity);\n\n        // Create a business object format to external interface mapping object from the entity and return it.\n        return businessObjectFormatExternalInterfaceHelper.createBusinessObjectFormatExternalInterfaceFromEntity(businessObjectFormatExternalInterfaceEntity);\n    }", "signature": "BusinessObjectFormatExternalInterface createBusinessObjectFormatExternalInterface(\n        BusinessObjectFormatExternalInterfaceCreateRequest businessObjectFormatExternalInterfaceCreateRequest)", "full_signature": "@Override public BusinessObjectFormatExternalInterface createBusinessObjectFormatExternalInterface(\n        BusinessObjectFormatExternalInterfaceCreateRequest businessObjectFormatExternalInterfaceCreateRequest)", "class_method_signature": "BusinessObjectFormatExternalInterfaceServiceImpl.createBusinessObjectFormatExternalInterface(\n        BusinessObjectFormatExternalInterfaceCreateRequest businessObjectFormatExternalInterfaceCreateRequest)", "testcase": false, "constructor": false, "invocations": ["validateAndTrimBusinessObjectFormatExternalInterfaceCreateRequest", "getNamespace", "getBusinessObjectFormatExternalInterfaceKey", "getBusinessObjectDefinitionName", "getBusinessObjectFormatExternalInterfaceKey", "getBusinessObjectFormatUsage", "getBusinessObjectFormatExternalInterfaceKey", "getBusinessObjectFormatFileType", "getBusinessObjectFormatExternalInterfaceKey", "getExternalInterfaceName", "getBusinessObjectFormatExternalInterfaceKey", "getBusinessObjectFormatEntity", "getExternalInterfaceEntity", "getBusinessObjectFormatExternalInterfaceByBusinessObjectFormatAndExternalInterface", "format", "getNamespace", "getBusinessObjectDefinitionName", "getBusinessObjectFormatUsage", "getBusinessObjectFormatFileType", "setBusinessObjectFormat", "setExternalInterface", "saveAndRefresh", "createBusinessObjectFormatExternalInterfaceFromEntity"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}