{"test_class": {"identifier": "QueryParameterResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MultivaluedMap<String, String> queryParameters;", "modifier": "private", "type": "MultivaluedMap<String, String>", "declarator": "queryParameters", "var_name": "queryParameters"}, {"original_string": "private ApplicationContext             applicationContext;", "modifier": "private", "type": "ApplicationContext", "declarator": "applicationContext", "var_name": "applicationContext"}, {"original_string": "private Parameter                      parameter;", "modifier": "private", "type": "Parameter", "declarator": "parameter", "var_name": "parameter"}, {"original_string": "private TypeProducer                   typeProducer;", "modifier": "private", "type": "TypeProducer", "declarator": "typeProducer", "var_name": "typeProducer"}, {"original_string": "private QueryParameterResolver queryParameterResolver;", "modifier": "private", "type": "QueryParameterResolver", "declarator": "queryParameterResolver", "var_name": "queryParameterResolver"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/method/QueryParameterResolverTest.java"}, "test_case": {"identifier": "retrievesDefaultValueWhenQueryParameterDoesNotPresentInRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void retrievesDefaultValueWhenQueryParameterDoesNotPresentInRequest() throws Exception {\n        when(parameter.getDefaultValue()).thenReturn(\"default\");\n        when(typeProducer.createValue(\"foo\", queryParameters, \"default\")).thenReturn(\"default\");\n\n        Object resolvedHeader = queryParameterResolver.resolve(parameter, applicationContext);\n\n        assertEquals(\"default\", resolvedHeader);\n    }", "signature": "void retrievesDefaultValueWhenQueryParameterDoesNotPresentInRequest()", "full_signature": "@Test public void retrievesDefaultValueWhenQueryParameterDoesNotPresentInRequest()", "class_method_signature": "QueryParameterResolverTest.retrievesDefaultValueWhenQueryParameterDoesNotPresentInRequest()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getDefaultValue", "thenReturn", "when", "createValue", "resolve", "assertEquals"]}, "focal_class": {"identifier": "QueryParameterResolver", "superclass": "", "interfaces": "implements ParameterResolver<QueryParam>", "fields": [{"original_string": "private final QueryParam          queryParam;", "modifier": "private final", "type": "QueryParam", "declarator": "queryParam", "var_name": "queryParam"}, {"original_string": "private final TypeProducerFactory typeProducerFactory;", "modifier": "private final", "type": "TypeProducerFactory", "declarator": "typeProducerFactory", "var_name": "typeProducerFactory"}], "methods": [{"identifier": "QueryParameterResolver", "parameters": "(QueryParam queryParam, TypeProducerFactory typeProducerFactory)", "modifiers": "", "return": "", "signature": " QueryParameterResolver(QueryParam queryParam, TypeProducerFactory typeProducerFactory)", "full_signature": "  QueryParameterResolver(QueryParam queryParam, TypeProducerFactory typeProducerFactory)", "class_method_signature": "QueryParameterResolver.QueryParameterResolver(QueryParam queryParam, TypeProducerFactory typeProducerFactory)", "testcase": false, "constructor": true}, {"identifier": "resolve", "parameters": "(org.everrest.core.Parameter parameter, ApplicationContext context)", "modifiers": "@Override public", "return": "Object", "signature": "Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "full_signature": "@Override public Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "class_method_signature": "QueryParameterResolver.resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/method/QueryParameterResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(org.everrest.core.Parameter parameter, ApplicationContext context)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context) throws Exception {\n        String param = this.queryParam.value();\n        TypeProducer typeProducer = typeProducerFactory.createTypeProducer(parameter.getParameterClass(), parameter.getGenericType());\n        return typeProducer.createValue(param, context.getQueryParameters(!parameter.isEncoded()), parameter.getDefaultValue());\n    }", "signature": "Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "full_signature": "@Override public Object resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "class_method_signature": "QueryParameterResolver.resolve(org.everrest.core.Parameter parameter, ApplicationContext context)", "testcase": false, "constructor": false, "invocations": ["value", "createTypeProducer", "getParameterClass", "getGenericType", "createValue", "getQueryParameters", "isEncoded", "getDefaultValue"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}