{"test_class": {"identifier": "SoundManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SoundManager soundManager;", "modifier": "private", "type": "SoundManager", "declarator": "soundManager", "var_name": "soundManager"}], "file": "gazeplay-commons/src/test/java/net/gazeplay/commons/soundsmanager/SoundManagerTest.java"}, "test_case": {"identifier": "shouldAddSeveralFilesNameToTheList", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldAddSeveralFilesNameToTheList() {\n        soundManager.add(\"music/mvmt0.wav\");\n        soundManager.add(\"music/hand_sound1.mp3\");\n        soundManager.add(\"music/song.mp3\");\n\n        Assertions.assertTrue(soundManager.getListOfMusicToPlay().contains(\"music/mvmt0.wav\"));\n        Assertions.assertTrue(soundManager.getListOfMusicToPlay().contains(\"music/hand_sound1.mp3\"));\n        Assertions.assertTrue(soundManager.getListOfMusicToPlay().contains(\"music/song.mp3\"));\n    }", "signature": "void shouldAddSeveralFilesNameToTheList()", "full_signature": "@Test void shouldAddSeveralFilesNameToTheList()", "class_method_signature": "SoundManagerTest.shouldAddSeveralFilesNameToTheList()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "assertTrue", "contains", "getListOfMusicToPlay", "assertTrue", "contains", "getListOfMusicToPlay", "assertTrue", "contains", "getListOfMusicToPlay"]}, "focal_class": {"identifier": "SoundManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Getter\n    private ExecutorService executorService;", "modifier": "@Getter\n    private", "type": "ExecutorService", "declarator": "executorService", "var_name": "executorService"}, {"original_string": "@Getter\n    private SoundPlayerRunnable soundPlayerRunnable;", "modifier": "@Getter\n    private", "type": "SoundPlayerRunnable", "declarator": "soundPlayerRunnable", "var_name": "soundPlayerRunnable"}, {"original_string": "@Getter\n    private Queue<String> listOfMusicToPlay = new LinkedList<>();", "modifier": "@Getter\n    private", "type": "Queue<String>", "declarator": "listOfMusicToPlay = new LinkedList<>()", "var_name": "listOfMusicToPlay"}], "methods": [{"identifier": "init", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void init()", "full_signature": "public void init()", "class_method_signature": "SoundManager.init()", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void destroy()", "full_signature": "public void destroy()", "class_method_signature": "SoundManager.destroy()", "testcase": false, "constructor": false}, {"identifier": "playRequestedSounds", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void playRequestedSounds()", "full_signature": "public void playRequestedSounds()", "class_method_signature": "SoundManager.playRequestedSounds()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "SoundManager.clear()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(String resource)", "modifiers": "public", "return": "void", "signature": "void add(String resource)", "full_signature": "public void add(String resource)", "class_method_signature": "SoundManager.add(String resource)", "testcase": false, "constructor": false}], "file": "gazeplay-commons/src/main/java/net/gazeplay/commons/soundsmanager/SoundManager.java"}, "focal_method": {"identifier": "add", "parameters": "(String resource)", "modifiers": "public", "return": "void", "body": "public void add(String resource) {\n            listOfMusicToPlay.add(resource);\n    }", "signature": "void add(String resource)", "full_signature": "public void add(String resource)", "class_method_signature": "SoundManager.add(String resource)", "testcase": false, "constructor": false, "invocations": ["add"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}