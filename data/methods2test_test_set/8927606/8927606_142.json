{"test_class": {"identifier": "CounterStatisticTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/nl/nn/adapterframework/util/CounterStatisticTest.java"}, "test_case": {"identifier": "testGetIntervalValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetIntervalValue() throws Exception {\n        CounterStatistic cs = new CounterStatistic(10);\n        assertEquals( 0, cs.getIntervalValue());\n    }", "signature": "void testGetIntervalValue()", "full_signature": "@Test public void testGetIntervalValue()", "class_method_signature": "CounterStatisticTest.testGetIntervalValue()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getIntervalValue"]}, "focal_class": {"identifier": "CounterStatistic", "superclass": "extends Counter", "interfaces": "", "fields": [{"original_string": "long mark;", "modifier": "", "type": "long", "declarator": "mark", "var_name": "mark"}], "methods": [{"identifier": "CounterStatistic", "parameters": "(int startValue)", "modifiers": "public", "return": "", "signature": " CounterStatistic(int startValue)", "full_signature": "public  CounterStatistic(int startValue)", "class_method_signature": "CounterStatistic.CounterStatistic(int startValue)", "testcase": false, "constructor": true}, {"identifier": "performAction", "parameters": "(int action)", "modifiers": "public", "return": "void", "signature": "void performAction(int action)", "full_signature": "public void performAction(int action)", "class_method_signature": "CounterStatistic.performAction(int action)", "testcase": false, "constructor": false}, {"identifier": "getIntervalValue", "parameters": "()", "modifiers": "public synchronized", "return": "long", "signature": "long getIntervalValue()", "full_signature": "public synchronized long getIntervalValue()", "class_method_signature": "CounterStatistic.getIntervalValue()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public synchronized", "return": "void", "signature": "void clear()", "full_signature": "public synchronized void clear()", "class_method_signature": "CounterStatistic.clear()", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/util/CounterStatistic.java"}, "focal_method": {"identifier": "getIntervalValue", "parameters": "()", "modifiers": "public synchronized", "return": "long", "body": "public synchronized long getIntervalValue() {\n\t\treturn getValue()-mark;\n\t}", "signature": "long getIntervalValue()", "full_signature": "public synchronized long getIntervalValue()", "class_method_signature": "CounterStatistic.getIntervalValue()", "testcase": false, "constructor": false, "invocations": ["getValue"]}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}