{"test_class": {"identifier": "AuthCacheTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Configuration config;", "modifier": "private static", "type": "Configuration", "declarator": "config", "var_name": "config"}, {"original_string": "private static String cookie = null;", "modifier": "private static", "type": "String", "declarator": "cookie = null", "var_name": "cookie"}], "file": "server/src/test/java/qonduit/auth/AuthCacheTest.java"}, "test_case": {"identifier": "testGetAuths", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetAuths() throws Exception {\n        Authorizations a = AuthCache.getAuthorizations(cookie);\n        Assert.assertEquals(\"A,B,C\", a.toString());\n    }", "signature": "void testGetAuths()", "full_signature": "@Test public void testGetAuths()", "class_method_signature": "AuthCacheTest.testGetAuths()", "testcase": true, "constructor": false, "invocations": ["getAuthorizations", "assertEquals", "toString"]}, "focal_class": {"identifier": "AuthCache", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Cache<String, Authentication> CACHE = null;", "modifier": "private static", "type": "Cache<String, Authentication>", "declarator": "CACHE = null", "var_name": "CACHE"}, {"original_string": "private static int sessionMaxAge = -1;", "modifier": "private static", "type": "int", "declarator": "sessionMaxAge = -1", "var_name": "sessionMaxAge"}], "methods": [{"identifier": "resetSessionMaxAge", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void resetSessionMaxAge()", "full_signature": "public static void resetSessionMaxAge()", "class_method_signature": "AuthCache.resetSessionMaxAge()", "testcase": false, "constructor": false}, {"identifier": "setSessionMaxAge", "parameters": "(Configuration config)", "modifiers": "public static", "return": "void", "signature": "void setSessionMaxAge(Configuration config)", "full_signature": "public static void setSessionMaxAge(Configuration config)", "class_method_signature": "AuthCache.setSessionMaxAge(Configuration config)", "testcase": false, "constructor": false}, {"identifier": "getCache", "parameters": "()", "modifiers": "public static", "return": "Cache<String, Authentication>", "signature": "Cache<String, Authentication> getCache()", "full_signature": "public static Cache<String, Authentication> getCache()", "class_method_signature": "AuthCache.getCache()", "testcase": false, "constructor": false}, {"identifier": "getAuthorizations", "parameters": "(String sessionId)", "modifiers": "public static", "return": "Authorizations", "signature": "Authorizations getAuthorizations(String sessionId)", "full_signature": "public static Authorizations getAuthorizations(String sessionId)", "class_method_signature": "AuthCache.getAuthorizations(String sessionId)", "testcase": false, "constructor": false}, {"identifier": "enforceAccess", "parameters": "(Configuration conf, String sessionId)", "modifiers": "public static", "return": "void", "signature": "void enforceAccess(Configuration conf, String sessionId)", "full_signature": "public static void enforceAccess(Configuration conf, String sessionId)", "class_method_signature": "AuthCache.enforceAccess(Configuration conf, String sessionId)", "testcase": false, "constructor": false}], "file": "server/src/main/java/qonduit/auth/AuthCache.java"}, "focal_method": {"identifier": "getAuthorizations", "parameters": "(String sessionId)", "modifiers": "public static", "return": "Authorizations", "body": "public static Authorizations getAuthorizations(String sessionId) {\n        if (!StringUtils.isEmpty(sessionId)) {\n            Authentication auth = CACHE.asMap().get(sessionId);\n            if (null != auth) {\n                Collection<? extends GrantedAuthority> authorities = CACHE.asMap().get(sessionId).getAuthorities();\n                String[] auths = new String[authorities.size()];\n                final AtomicInteger i = new AtomicInteger(0);\n                authorities.forEach(a -> auths[i.getAndIncrement()] = a.getAuthority());\n                return new Authorizations(auths);\n            } else {\n                return null;\n            }\n        } else {\n            throw new IllegalArgumentException(\"session id cannot be null\");\n        }\n    }", "signature": "Authorizations getAuthorizations(String sessionId)", "full_signature": "public static Authorizations getAuthorizations(String sessionId)", "class_method_signature": "AuthCache.getAuthorizations(String sessionId)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "get", "asMap", "getAuthorities", "get", "asMap", "size", "forEach", "getAndIncrement", "getAuthority"]}, "repository": {"repo_id": 87590916, "url": "https://github.com/NationalSecurityAgency/qonduit", "stars": 51, "created": "4/7/2017 10:14:58 PM +00:00", "updates": "2020-01-01T19:51:03+00:00", "fork": "False", "license": "licensed"}}