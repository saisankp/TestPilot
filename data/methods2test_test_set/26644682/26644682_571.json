{"test_class": {"identifier": "SumTest", "superclass": "extends OperationBaseTest", "interfaces": "", "fields": [], "file": "dataprep-transformation/src/test/java/org/talend/dataprep/transformation/aggregation/operation/SumTest.java"}, "test_case": {"identifier": "shouldComputeSum", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldComputeSum() {\n        // given when\n        AggregationResult result = new AggregationResult(Operator.SUM);\n        aggregator.accept(getRow(\"toto\", \"514.3\"), result);\n        aggregator.accept(getRow(\"toto\", \"0\"), result);\n        aggregator.accept(getRow(\"toto\", \"\"), result);\n        aggregator.accept(getRow(\"toto\", \"-786.25\"), result);\n        aggregator.accept(getRow(\"toto\", \"235874\"), result);\n        aggregator.accept(getRow(\"toto\", \"-8760\"), result);\n\n        // then\n        Assert.assertEquals(result.get(\"toto\").getValue(), 226842.05, 0);\n\n    }", "signature": "void shouldComputeSum()", "full_signature": "@Test public void shouldComputeSum()", "class_method_signature": "SumTest.shouldComputeSum()", "testcase": true, "constructor": false, "invocations": ["accept", "getRow", "accept", "getRow", "accept", "getRow", "accept", "getRow", "accept", "getRow", "accept", "getRow", "assertEquals", "getValue", "get"]}, "focal_class": {"identifier": "Sum", "superclass": "extends AbstractAggregator", "interfaces": "implements Aggregator", "fields": [], "methods": [{"identifier": "Sum", "parameters": "(String groupBy, String columnId)", "modifiers": "", "return": "", "signature": " Sum(String groupBy, String columnId)", "full_signature": "  Sum(String groupBy, String columnId)", "class_method_signature": "Sum.Sum(String groupBy, String columnId)", "testcase": false, "constructor": true}, {"identifier": "accept", "parameters": "(DataSetRow row, AggregationResult result)", "modifiers": "@Override public", "return": "void", "signature": "void accept(DataSetRow row, AggregationResult result)", "full_signature": "@Override public void accept(DataSetRow row, AggregationResult result)", "class_method_signature": "Sum.accept(DataSetRow row, AggregationResult result)", "testcase": false, "constructor": false}, {"identifier": "normalize", "parameters": "(AggregationResult result)", "modifiers": "@Override public", "return": "void", "signature": "void normalize(AggregationResult result)", "full_signature": "@Override public void normalize(AggregationResult result)", "class_method_signature": "Sum.normalize(AggregationResult result)", "testcase": false, "constructor": false}], "file": "dataprep-transformation/src/main/java/org/talend/dataprep/transformation/aggregation/operation/Sum.java"}, "focal_method": {"identifier": "accept", "parameters": "(DataSetRow row, AggregationResult result)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void accept(DataSetRow row, AggregationResult result) {\n        final String sumKey = row.get(groupBy);\n\n        // skip value not found\n        if (StringUtils.isEmpty(sumKey)) {\n            return;\n        }\n\n        // get the value\n        double toAdd;\n        try {\n            toAdd = Double.parseDouble(row.get(columnId));\n        } catch (NumberFormatException e) {\n            // skip non number\n            return;\n        }\n\n        // init the group by in the result\n        if (!result.contains(sumKey)) {\n            result.put(sumKey, new NumberContext(0d));\n        }\n\n        NumberContext context = (NumberContext) result.get(sumKey);\n        context.setValue(context.getValue() + toAdd);\n\n    }", "signature": "void accept(DataSetRow row, AggregationResult result)", "full_signature": "@Override public void accept(DataSetRow row, AggregationResult result)", "class_method_signature": "Sum.accept(DataSetRow row, AggregationResult result)", "testcase": false, "constructor": false, "invocations": ["get", "isEmpty", "parseDouble", "get", "contains", "put", "get", "setValue", "getValue"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}