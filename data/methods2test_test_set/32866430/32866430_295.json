{"test_class": {"identifier": "JsonCookieTest", "superclass": "", "interfaces": "", "fields": [], "file": "cli/src/test/java/keywhiz/cli/JsonCookieTest.java"}, "test_case": {"identifier": "deserializesCookie", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void deserializesCookie() throws Exception {\n    JsonCookie expected = JsonCookie.create(\"session\", \"session-contents\", \"localhost\", \"/admin\", true, true);\n\n    String json = Resources.toString(Resources.getResource(\"fixtures/cookie_valid.json\"), UTF_8);\n    JsonCookie actual = Jackson.newObjectMapper().readValue(json, JsonCookie.class);\n\n    assertThat(actual).isEqualTo(expected);\n  }", "signature": "void deserializesCookie()", "full_signature": "@Test public void deserializesCookie()", "class_method_signature": "JsonCookieTest.deserializesCookie()", "testcase": true, "constructor": false, "invocations": ["create", "toString", "getResource", "readValue", "newObjectMapper", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "JsonCookie", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "create", "parameters": "(\n      @JsonProperty(\"name\") String name,\n      @JsonProperty(\"value\") String value,\n      @JsonProperty(\"domain\") String domain,\n      @JsonProperty(\"path\") String path,\n      @JsonProperty(\"secure\") boolean isSecure,\n      @JsonProperty(\"httpOnly\") boolean isHttpOnly)", "modifiers": "@JsonCreator public static", "return": "JsonCookie", "signature": "JsonCookie create(\n      @JsonProperty(\"name\") String name,\n      @JsonProperty(\"value\") String value,\n      @JsonProperty(\"domain\") String domain,\n      @JsonProperty(\"path\") String path,\n      @JsonProperty(\"secure\") boolean isSecure,\n      @JsonProperty(\"httpOnly\") boolean isHttpOnly)", "full_signature": "@JsonCreator public static JsonCookie create(\n      @JsonProperty(\"name\") String name,\n      @JsonProperty(\"value\") String value,\n      @JsonProperty(\"domain\") String domain,\n      @JsonProperty(\"path\") String path,\n      @JsonProperty(\"secure\") boolean isSecure,\n      @JsonProperty(\"httpOnly\") boolean isHttpOnly)", "class_method_signature": "JsonCookie.create(\n      @JsonProperty(\"name\") String name,\n      @JsonProperty(\"value\") String value,\n      @JsonProperty(\"domain\") String domain,\n      @JsonProperty(\"path\") String path,\n      @JsonProperty(\"secure\") boolean isSecure,\n      @JsonProperty(\"httpOnly\") boolean isHttpOnly)", "testcase": false, "constructor": false}, {"identifier": "fromHttpCookie", "parameters": "(HttpCookie cookie)", "modifiers": "public static", "return": "JsonCookie", "signature": "JsonCookie fromHttpCookie(HttpCookie cookie)", "full_signature": "public static JsonCookie fromHttpCookie(HttpCookie cookie)", "class_method_signature": "JsonCookie.fromHttpCookie(HttpCookie cookie)", "testcase": false, "constructor": false}, {"identifier": "toHttpCookie", "parameters": "(JsonCookie cookieContents)", "modifiers": "public static", "return": "HttpCookie", "signature": "HttpCookie toHttpCookie(JsonCookie cookieContents)", "full_signature": "public static HttpCookie toHttpCookie(JsonCookie cookieContents)", "class_method_signature": "JsonCookie.toHttpCookie(JsonCookie cookieContents)", "testcase": false, "constructor": false}, {"identifier": "name", "parameters": "()", "modifiers": "@JsonProperty public abstract", "return": "String", "signature": "String name()", "full_signature": "@JsonProperty public abstract String name()", "class_method_signature": "JsonCookie.name()", "testcase": false, "constructor": false}, {"identifier": "value", "parameters": "()", "modifiers": "@JsonProperty public abstract", "return": "String", "signature": "String value()", "full_signature": "@JsonProperty public abstract String value()", "class_method_signature": "JsonCookie.value()", "testcase": false, "constructor": false}, {"identifier": "domain", "parameters": "()", "modifiers": "@JsonProperty public abstract", "return": "String", "signature": "String domain()", "full_signature": "@JsonProperty public abstract String domain()", "class_method_signature": "JsonCookie.domain()", "testcase": false, "constructor": false}, {"identifier": "path", "parameters": "()", "modifiers": "@JsonProperty public abstract", "return": "String", "signature": "String path()", "full_signature": "@JsonProperty public abstract String path()", "class_method_signature": "JsonCookie.path()", "testcase": false, "constructor": false}, {"identifier": "isSecure", "parameters": "()", "modifiers": "@JsonProperty public abstract", "return": "boolean", "signature": "boolean isSecure()", "full_signature": "@JsonProperty public abstract boolean isSecure()", "class_method_signature": "JsonCookie.isSecure()", "testcase": false, "constructor": false}, {"identifier": "isHttpOnly", "parameters": "()", "modifiers": "@JsonProperty public abstract", "return": "boolean", "signature": "boolean isHttpOnly()", "full_signature": "@JsonProperty public abstract boolean isHttpOnly()", "class_method_signature": "JsonCookie.isHttpOnly()", "testcase": false, "constructor": false}], "file": "cli/src/main/java/keywhiz/cli/JsonCookie.java"}, "focal_method": {"identifier": "create", "parameters": "(\n      @JsonProperty(\"name\") String name,\n      @JsonProperty(\"value\") String value,\n      @JsonProperty(\"domain\") String domain,\n      @JsonProperty(\"path\") String path,\n      @JsonProperty(\"secure\") boolean isSecure,\n      @JsonProperty(\"httpOnly\") boolean isHttpOnly)", "modifiers": "@JsonCreator public static", "return": "JsonCookie", "body": "@JsonCreator public static JsonCookie create(\n      @JsonProperty(\"name\") String name,\n      @JsonProperty(\"value\") String value,\n      @JsonProperty(\"domain\") String domain,\n      @JsonProperty(\"path\") String path,\n      @JsonProperty(\"secure\") boolean isSecure,\n      @JsonProperty(\"httpOnly\") boolean isHttpOnly) {\n    return new AutoValue_JsonCookie(name, value, domain, path, isSecure, isHttpOnly);\n  }", "signature": "JsonCookie create(\n      @JsonProperty(\"name\") String name,\n      @JsonProperty(\"value\") String value,\n      @JsonProperty(\"domain\") String domain,\n      @JsonProperty(\"path\") String path,\n      @JsonProperty(\"secure\") boolean isSecure,\n      @JsonProperty(\"httpOnly\") boolean isHttpOnly)", "full_signature": "@JsonCreator public static JsonCookie create(\n      @JsonProperty(\"name\") String name,\n      @JsonProperty(\"value\") String value,\n      @JsonProperty(\"domain\") String domain,\n      @JsonProperty(\"path\") String path,\n      @JsonProperty(\"secure\") boolean isSecure,\n      @JsonProperty(\"httpOnly\") boolean isHttpOnly)", "class_method_signature": "JsonCookie.create(\n      @JsonProperty(\"name\") String name,\n      @JsonProperty(\"value\") String value,\n      @JsonProperty(\"domain\") String domain,\n      @JsonProperty(\"path\") String path,\n      @JsonProperty(\"secure\") boolean isSecure,\n      @JsonProperty(\"httpOnly\") boolean isHttpOnly)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 32866430, "url": "https://github.com/square/keywhiz", "stars": 2186, "created": "3/25/2015 1:31:39 PM +00:00", "updates": "2020-01-24T18:57:02+00:00", "fork": "False", "license": "licensed"}}