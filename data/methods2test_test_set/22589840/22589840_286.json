{"test_class": {"identifier": "ConfirmationServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ConfirmationServiceImpl confirmationServiceImpl;", "modifier": "private", "type": "ConfirmationServiceImpl", "declarator": "confirmationServiceImpl", "var_name": "confirmationServiceImpl"}, {"original_string": "private ConfirmationDelegate confirmationDelegateMock;", "modifier": "private", "type": "ConfirmationDelegate", "declarator": "confirmationDelegateMock", "var_name": "confirmationDelegateMock"}, {"original_string": "private ConfirmationInfo confirmationInfoMock_sent;", "modifier": "private", "type": "ConfirmationInfo", "declarator": "confirmationInfoMock_sent", "var_name": "confirmationInfoMock_sent"}, {"original_string": "private ConfirmationInfo confirmationInfoMock_notSent;", "modifier": "private", "type": "ConfirmationInfo", "declarator": "confirmationInfoMock_notSent", "var_name": "confirmationInfoMock_notSent"}, {"original_string": "private MailService mailServiceMock;", "modifier": "private", "type": "MailService", "declarator": "mailServiceMock", "var_name": "mailServiceMock"}, {"original_string": "private MailMessageEmailBuilder emailBuilderMock;", "modifier": "private", "type": "MailMessageEmailBuilder", "declarator": "emailBuilderMock", "var_name": "emailBuilderMock"}, {"original_string": "private MailMessage mailMessageMock;", "modifier": "private", "type": "MailMessage", "declarator": "mailMessageMock", "var_name": "mailMessageMock"}, {"original_string": "private String okEmailAddress = \"okEmailAddress@gmail.com\";", "modifier": "private", "type": "String", "declarator": "okEmailAddress = \"okEmailAddress@gmail.com\"", "var_name": "okEmailAddress"}, {"original_string": "private MailMessage mailMessageMock_nok;", "modifier": "private", "type": "MailMessage", "declarator": "mailMessageMock_nok", "var_name": "mailMessageMock_nok"}, {"original_string": "private String wrongEmailAddress = \"wrongEmailAddress@gmail.com\";", "modifier": "private", "type": "String", "declarator": "wrongEmailAddress = \"wrongEmailAddress@gmail.com\"", "var_name": "wrongEmailAddress"}, {"original_string": "private MailMessage mailMessageWithTwoRecipientsMock;", "modifier": "private", "type": "MailMessage", "declarator": "mailMessageWithTwoRecipientsMock", "var_name": "mailMessageWithTwoRecipientsMock"}], "file": "olat7.8/src/test/java/org/olat/lms/core/notification/impl/ConfirmationServiceImplTest.java"}, "test_case": {"identifier": "testMetrics_sendMessage_invalidAddress", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMetrics_sendMessage_invalidAddress() {\n        setNewMetrics();\n\n        try {\n            confirmationServiceImpl.sendMessage(mailMessageMock_nok);\n        } catch (InvalidAddressException e) {\n            // no need to show the exception\n\n            double successRate = getSuccessRate();\n            assertEquals(0.0, successRate, 0);\n            assertEquals(1, getAllSent());\n            assertEquals(1, getSentFailed());\n        }\n    }", "signature": "void testMetrics_sendMessage_invalidAddress()", "full_signature": "@Test public void testMetrics_sendMessage_invalidAddress()", "class_method_signature": "ConfirmationServiceImplTest.testMetrics_sendMessage_invalidAddress()", "testcase": true, "constructor": false, "invocations": ["setNewMetrics", "sendMessage", "getSuccessRate", "assertEquals", "assertEquals", "getAllSent", "assertEquals", "getSentFailed"]}, "focal_class": {"identifier": "ConfirmationServiceImpl", "superclass": "extends CoreBaseService<ConfirmationServiceMetric<ConfirmationServiceContext>, ConfirmationServiceContext>", "interfaces": "implements\n        ConfirmationService", "fields": [{"original_string": "private static final Logger LOG = LoggerHelper.getLogger();", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerHelper.getLogger()", "var_name": "LOG"}, {"original_string": "@Autowired\n    ConfirmationDelegate confirmationDelegate;", "modifier": "@Autowired", "type": "ConfirmationDelegate", "declarator": "confirmationDelegate", "var_name": "confirmationDelegate"}, {"original_string": "@Autowired\n    MailService mailService;", "modifier": "@Autowired", "type": "MailService", "declarator": "mailService", "var_name": "mailService"}, {"original_string": "@Autowired\n    MailMessageEmailBuilder emailBuilder;", "modifier": "@Autowired", "type": "MailMessageEmailBuilder", "declarator": "emailBuilder", "var_name": "emailBuilder"}], "methods": [{"identifier": "setMetrics", "parameters": "(List<ConfirmationServiceMetric<ConfirmationServiceContext>> metrics)", "modifiers": "@Autowired @Override protected", "return": "void", "signature": "void setMetrics(List<ConfirmationServiceMetric<ConfirmationServiceContext>> metrics)", "full_signature": "@Autowired @Override protected void setMetrics(List<ConfirmationServiceMetric<ConfirmationServiceContext>> metrics)", "class_method_signature": "ConfirmationServiceImpl.setMetrics(List<ConfirmationServiceMetric<ConfirmationServiceContext>> metrics)", "testcase": false, "constructor": false}, {"identifier": "getMetrics", "parameters": "()", "modifiers": "", "return": "List<ConfirmationServiceMetric<ConfirmationServiceContext>>", "signature": "List<ConfirmationServiceMetric<ConfirmationServiceContext>> getMetrics()", "full_signature": " List<ConfirmationServiceMetric<ConfirmationServiceContext>> getMetrics()", "class_method_signature": "ConfirmationServiceImpl.getMetrics()", "testcase": false, "constructor": false}, {"identifier": "sendConfirmation", "parameters": "(ConfirmationInfo confirmationInfo)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean sendConfirmation(ConfirmationInfo confirmationInfo)", "full_signature": "@Override public boolean sendConfirmation(ConfirmationInfo confirmationInfo)", "class_method_signature": "ConfirmationServiceImpl.sendConfirmation(ConfirmationInfo confirmationInfo)", "testcase": false, "constructor": false}, {"identifier": "notifyMetrics", "parameters": "(boolean delivered)", "modifiers": "private", "return": "void", "signature": "void notifyMetrics(boolean delivered)", "full_signature": "private void notifyMetrics(boolean delivered)", "class_method_signature": "ConfirmationServiceImpl.notifyMetrics(boolean delivered)", "testcase": false, "constructor": false}, {"identifier": "sendMessage", "parameters": "(MailMessage message)", "modifiers": "@Override @Retryable public", "return": "boolean", "signature": "boolean sendMessage(MailMessage message)", "full_signature": "@Override @Retryable public boolean sendMessage(MailMessage message)", "class_method_signature": "ConfirmationServiceImpl.sendMessage(MailMessage message)", "testcase": false, "constructor": false}, {"identifier": "sendToOneRecipient", "parameters": "(MailMessage messageClone, String toEmailAddress)", "modifiers": "private", "return": "boolean", "signature": "boolean sendToOneRecipient(MailMessage messageClone, String toEmailAddress)", "full_signature": "private boolean sendToOneRecipient(MailMessage messageClone, String toEmailAddress)", "class_method_signature": "ConfirmationServiceImpl.sendToOneRecipient(MailMessage messageClone, String toEmailAddress)", "testcase": false, "constructor": false}], "file": "olat7.8/src/main/java/org/olat/lms/core/notification/impl/ConfirmationServiceImpl.java"}, "focal_method": {"identifier": "sendMessage", "parameters": "(MailMessage message)", "modifiers": "@Override @Retryable public", "return": "boolean", "body": "@Override\n    @Retryable\n    public boolean sendMessage(MailMessage message) throws InvalidAddressException {\n        boolean delivered = false;\n        // send cc only once\n        if (message.hasCC() && !message.getToEmailAddresses().contains(message.getCCEmailAddress())) {\n            delivered = sendToOneRecipient(message, message.getCCEmailAddress());\n        }\n        // send messages without cc\n        message.setNoCC();\n        List<String> toEmailAddresses = message.getToEmailAddresses();\n        for (String toEmailAddress : toEmailAddresses) {\n            delivered = sendToOneRecipient(message, toEmailAddress);\n        }\n\n        return delivered;\n    }", "signature": "boolean sendMessage(MailMessage message)", "full_signature": "@Override @Retryable public boolean sendMessage(MailMessage message)", "class_method_signature": "ConfirmationServiceImpl.sendMessage(MailMessage message)", "testcase": false, "constructor": false, "invocations": ["hasCC", "contains", "getToEmailAddresses", "getCCEmailAddress", "sendToOneRecipient", "getCCEmailAddress", "setNoCC", "getToEmailAddresses", "sendToOneRecipient"]}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}