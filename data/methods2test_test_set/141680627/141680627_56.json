{"test_class": {"identifier": "MultipleChoiceOptionItemTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [{"original_string": "private MultipleChoiceOptionItem mMultipleChoiceOptionItem;", "modifier": "private", "type": "MultipleChoiceOptionItem", "declarator": "mMultipleChoiceOptionItem", "var_name": "mMultipleChoiceOptionItem"}, {"original_string": "private boolean mCallbackCalled;", "modifier": "private", "type": "boolean", "declarator": "mCallbackCalled", "var_name": "mCallbackCalled"}], "file": "MSDKUIKit/MSDKUILib/src/test/java/com/here/msdkui/routing/MultipleChoiceOptionItemTest.java"}, "test_case": {"identifier": "testCallback", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCallback() {\n        mMultipleChoiceOptionItem.setListener(new OptionItem.OnChangedListener() {\n            @Override\n            public void onChanged(OptionItem item) {\n                mCallbackCalled = true;\n            }\n        });\n        final List<String> ids = Collections.singletonList(getString(R.string.msdkui_fastest));\n        mMultipleChoiceOptionItem.setLabels(ids);\n        assertThat(mMultipleChoiceOptionItem.getChildCount(), equalTo(1));\n        final View view = mMultipleChoiceOptionItem.getChildAt(0);\n        final TextView labelView = (TextView) view.findViewById(R.id.multiple_item_label);\n        final CheckBox selectionView = (CheckBox) view.findViewById(R.id.multiple_item_value);\n        assertNotNull(labelView);\n        assertNotNull(selectionView);\n        selectionView.setChecked(true);\n        assertThat(mCallbackCalled, is(true));\n    }", "signature": "void testCallback()", "full_signature": "@Test public void testCallback()", "class_method_signature": "MultipleChoiceOptionItemTest.testCallback()", "testcase": true, "constructor": false, "invocations": ["setListener", "singletonList", "getString", "setLabels", "assertThat", "getChildCount", "equalTo", "getChildAt", "findViewById", "findViewById", "assertNotNull", "assertNotNull", "setChecked", "assertThat", "is"]}, "focal_class": {"identifier": "MultipleChoiceOptionItem", "superclass": "extends OptionItem", "interfaces": "implements CompoundButton.OnCheckedChangeListener", "fields": [{"original_string": "private final List<ItemRow> mItemList = new ArrayList<>();", "modifier": "private final", "type": "List<ItemRow>", "declarator": "mItemList = new ArrayList<>()", "var_name": "mItemList"}], "methods": [{"identifier": "MultipleChoiceOptionItem", "parameters": "(final Context context)", "modifiers": "public", "return": "", "signature": " MultipleChoiceOptionItem(final Context context)", "full_signature": "public  MultipleChoiceOptionItem(final Context context)", "class_method_signature": "MultipleChoiceOptionItem.MultipleChoiceOptionItem(final Context context)", "testcase": false, "constructor": true}, {"identifier": "MultipleChoiceOptionItem", "parameters": "(final Context context, final AttributeSet attrs)", "modifiers": "public", "return": "", "signature": " MultipleChoiceOptionItem(final Context context, final AttributeSet attrs)", "full_signature": "public  MultipleChoiceOptionItem(final Context context, final AttributeSet attrs)", "class_method_signature": "MultipleChoiceOptionItem.MultipleChoiceOptionItem(final Context context, final AttributeSet attrs)", "testcase": false, "constructor": true}, {"identifier": "MultipleChoiceOptionItem", "parameters": "(final Context context, final AttributeSet attrs, final int defStyleAttr)", "modifiers": "public", "return": "", "signature": " MultipleChoiceOptionItem(final Context context, final AttributeSet attrs, final int defStyleAttr)", "full_signature": "public  MultipleChoiceOptionItem(final Context context, final AttributeSet attrs, final int defStyleAttr)", "class_method_signature": "MultipleChoiceOptionItem.MultipleChoiceOptionItem(final Context context, final AttributeSet attrs, final int defStyleAttr)", "testcase": false, "constructor": true}, {"identifier": "MultipleChoiceOptionItem", "parameters": "(final Context context, final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "modifiers": "@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP) public", "return": "", "signature": " MultipleChoiceOptionItem(final Context context, final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "full_signature": "@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP) public  MultipleChoiceOptionItem(final Context context, final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "class_method_signature": "MultipleChoiceOptionItem.MultipleChoiceOptionItem(final Context context, final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "testcase": false, "constructor": true}, {"identifier": "getLabels", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getLabels()", "full_signature": "public List<String> getLabels()", "class_method_signature": "MultipleChoiceOptionItem.getLabels()", "testcase": false, "constructor": false}, {"identifier": "setLabels", "parameters": "(final List<String> labels)", "modifiers": "public", "return": "MultipleChoiceOptionItem", "signature": "MultipleChoiceOptionItem setLabels(final List<String> labels)", "full_signature": "public MultipleChoiceOptionItem setLabels(final List<String> labels)", "class_method_signature": "MultipleChoiceOptionItem.setLabels(final List<String> labels)", "testcase": false, "constructor": false}, {"identifier": "getRow", "parameters": "(final TextView labelView, final CheckBox selectionView)", "modifiers": "private", "return": "ItemRow", "signature": "ItemRow getRow(final TextView labelView, final CheckBox selectionView)", "full_signature": "private ItemRow getRow(final TextView labelView, final CheckBox selectionView)", "class_method_signature": "MultipleChoiceOptionItem.getRow(final TextView labelView, final CheckBox selectionView)", "testcase": false, "constructor": false}, {"identifier": "selectLabels", "parameters": "(final List<String> labels)", "modifiers": "public", "return": "void", "signature": "void selectLabels(final List<String> labels)", "full_signature": "public void selectLabels(final List<String> labels)", "class_method_signature": "MultipleChoiceOptionItem.selectLabels(final List<String> labels)", "testcase": false, "constructor": false}, {"identifier": "getSelectedLabels", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getSelectedLabels()", "full_signature": "public List<String> getSelectedLabels()", "class_method_signature": "MultipleChoiceOptionItem.getSelectedLabels()", "testcase": false, "constructor": false}, {"identifier": "isItemSelected", "parameters": "(final String id)", "modifiers": "public", "return": "boolean", "signature": "boolean isItemSelected(final String id)", "full_signature": "public boolean isItemSelected(final String id)", "class_method_signature": "MultipleChoiceOptionItem.isItemSelected(final String id)", "testcase": false, "constructor": false}, {"identifier": "onCheckedChanged", "parameters": "(final CompoundButton buttonView, final boolean isChecked)", "modifiers": "@Override public", "return": "void", "signature": "void onCheckedChanged(final CompoundButton buttonView, final boolean isChecked)", "full_signature": "@Override public void onCheckedChanged(final CompoundButton buttonView, final boolean isChecked)", "class_method_signature": "MultipleChoiceOptionItem.onCheckedChanged(final CompoundButton buttonView, final boolean isChecked)", "testcase": false, "constructor": false}], "file": "MSDKUIKit/MSDKUILib/src/main/java/com/here/msdkui/routing/MultipleChoiceOptionItem.java"}, "focal_method": {"identifier": "setLabels", "parameters": "(final List<String> labels)", "modifiers": "public", "return": "MultipleChoiceOptionItem", "body": "public MultipleChoiceOptionItem setLabels(final List<String> labels) {\n        if (labels == null) {\n            throw new IllegalArgumentException(getContext().getString(R.string.msdkui_exception_labels_null));\n        }\n        for (final String label : labels) {\n            final View view = View.inflate(getContext(), R.layout.multiple_option_item, null);\n            final TextView labelView = (TextView) view.findViewById(R.id.multiple_item_label);\n            labelView.setText(label);\n            final CheckBox selectionView = (CheckBox) view.findViewById(R.id.multiple_item_value);\n            selectionView.setOnCheckedChangeListener(this);\n            mItemList.add(getRow(labelView, selectionView));\n            addView(view);\n        }\n        return this;\n    }", "signature": "MultipleChoiceOptionItem setLabels(final List<String> labels)", "full_signature": "public MultipleChoiceOptionItem setLabels(final List<String> labels)", "class_method_signature": "MultipleChoiceOptionItem.setLabels(final List<String> labels)", "testcase": false, "constructor": false, "invocations": ["getString", "getContext", "inflate", "getContext", "findViewById", "setText", "findViewById", "setOnCheckedChangeListener", "add", "getRow", "addView"]}, "repository": {"repo_id": 141680627, "url": "https://github.com/heremaps/msdkui-android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 35, "size": 5559, "license": "licensed"}}