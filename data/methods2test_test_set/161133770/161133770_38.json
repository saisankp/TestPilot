{"test_class": {"identifier": "TypeConversionTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/feast/core/util/TypeConversionTest.java"}, "test_case": {"identifier": "convertJsonStringToMapShouldReturnEmptyMapForEmptyJson", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void convertJsonStringToMapShouldReturnEmptyMapForEmptyJson() {\n    String input = \"{}\";\n    Map<String, String> expected = Collections.emptyMap();\n    assertThat(TypeConversion.convertJsonStringToMap(input), equalTo(expected));\n  }", "signature": "void convertJsonStringToMapShouldReturnEmptyMapForEmptyJson()", "full_signature": "@Test public void convertJsonStringToMapShouldReturnEmptyMapForEmptyJson()", "class_method_signature": "TypeConversionTest.convertJsonStringToMapShouldReturnEmptyMapForEmptyJson()", "testcase": true, "constructor": false, "invocations": ["emptyMap", "assertThat", "convertJsonStringToMap", "equalTo"]}, "focal_class": {"identifier": "TypeConversion", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Gson gson = new Gson();", "modifier": "private static", "type": "Gson", "declarator": "gson = new Gson()", "var_name": "gson"}], "methods": [{"identifier": "convertTimestamp", "parameters": "(Date ts)", "modifiers": "public static", "return": "com.google.protobuf.Timestamp", "signature": "com.google.protobuf.Timestamp convertTimestamp(Date ts)", "full_signature": "public static com.google.protobuf.Timestamp convertTimestamp(Date ts)", "class_method_signature": "TypeConversion.convertTimestamp(Date ts)", "testcase": false, "constructor": false}, {"identifier": "convertTagStringToList", "parameters": "(String tags)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> convertTagStringToList(String tags)", "full_signature": "public static List<String> convertTagStringToList(String tags)", "class_method_signature": "TypeConversion.convertTagStringToList(String tags)", "testcase": false, "constructor": false}, {"identifier": "convertJsonStringToMap", "parameters": "(String jsonString)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> convertJsonStringToMap(String jsonString)", "full_signature": "public static Map<String, String> convertJsonStringToMap(String jsonString)", "class_method_signature": "TypeConversion.convertJsonStringToMap(String jsonString)", "testcase": false, "constructor": false}, {"identifier": "convertJsonStringToEnumMap", "parameters": "(String jsonString)", "modifiers": "public static", "return": "Map<String, Enum>", "signature": "Map<String, Enum> convertJsonStringToEnumMap(String jsonString)", "full_signature": "public static Map<String, Enum> convertJsonStringToEnumMap(String jsonString)", "class_method_signature": "TypeConversion.convertJsonStringToEnumMap(String jsonString)", "testcase": false, "constructor": false}, {"identifier": "convertMapToJsonString", "parameters": "(Map<String, String> map)", "modifiers": "public static", "return": "String", "signature": "String convertMapToJsonString(Map<String, String> map)", "full_signature": "public static String convertMapToJsonString(Map<String, String> map)", "class_method_signature": "TypeConversion.convertMapToJsonString(Map<String, String> map)", "testcase": false, "constructor": false}, {"identifier": "convertEnumMapToJsonString", "parameters": "(Map<String, Enum> map)", "modifiers": "public static", "return": "String", "signature": "String convertEnumMapToJsonString(Map<String, Enum> map)", "full_signature": "public static String convertEnumMapToJsonString(Map<String, Enum> map)", "class_method_signature": "TypeConversion.convertEnumMapToJsonString(Map<String, Enum> map)", "testcase": false, "constructor": false}], "file": "core/src/main/java/feast/core/util/TypeConversion.java"}, "focal_method": {"identifier": "convertJsonStringToMap", "parameters": "(String jsonString)", "modifiers": "public static", "return": "Map<String, String>", "body": "public static Map<String, String> convertJsonStringToMap(String jsonString) {\n    if (jsonString == null || jsonString.equals(\"\") || jsonString.equals(\"{}\")) {\n      return Collections.emptyMap();\n    }\n    Type stringMapType = new TypeToken<Map<String, String>>() {}.getType();\n    return gson.fromJson(jsonString, stringMapType);\n  }", "signature": "Map<String, String> convertJsonStringToMap(String jsonString)", "full_signature": "public static Map<String, String> convertJsonStringToMap(String jsonString)", "class_method_signature": "TypeConversion.convertJsonStringToMap(String jsonString)", "testcase": false, "constructor": false, "invocations": ["equals", "equals", "emptyMap", "getType", "fromJson"]}, "repository": {"repo_id": 161133770, "url": "https://github.com/gojek/feast", "stars": 633, "created": "12/10/2018 7:20:15 AM +00:00", "updates": "2020-01-27T12:39:33+00:00", "fork": "False", "license": "licensed"}}