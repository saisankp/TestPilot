{"test_class": {"identifier": "StreamingRendererTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SimpleFeatureType testLineFeatureType;", "modifier": "private", "type": "SimpleFeatureType", "declarator": "testLineFeatureType", "var_name": "testLineFeatureType"}, {"original_string": "private SimpleFeatureType testPointFeatureType;", "modifier": "private", "type": "SimpleFeatureType", "declarator": "testPointFeatureType", "var_name": "testPointFeatureType"}, {"original_string": "private GeometryFactory gf = new GeometryFactory();", "modifier": "private", "type": "GeometryFactory", "declarator": "gf = new GeometryFactory()", "var_name": "gf"}, {"original_string": "protected int errors;", "modifier": "protected", "type": "int", "declarator": "errors", "var_name": "errors"}, {"original_string": "protected int features;", "modifier": "protected", "type": "int", "declarator": "features", "var_name": "features"}], "file": "modules/library/render/src/test/java/org/geotools/renderer/lite/StreamingRendererTest.java"}, "test_case": {"identifier": "testInterpolationByLayer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testInterpolationByLayer() throws Exception {\n        StreamingRenderer sr = new StreamingRenderer();\n        Layer layer = new FeatureLayer(createLineCollection(), createLineStyle());\n        // default is nearest neighbor\n        assertEquals(sr.getRenderingInterpolation(layer),\n                Interpolation.getInstance(Interpolation.INTERP_NEAREST));\n        \n        // test all possible values\n        layer.getUserData().put(StreamingRenderer.BYLAYER_INTERPOLATION,\n                Interpolation.getInstance(Interpolation.INTERP_BICUBIC));\n        assertEquals(sr.getRenderingInterpolation(layer),\n                Interpolation.getInstance(Interpolation.INTERP_BICUBIC));\n        layer.getUserData().put(StreamingRenderer.BYLAYER_INTERPOLATION,\n                Interpolation.getInstance(Interpolation.INTERP_BILINEAR));\n        assertEquals(sr.getRenderingInterpolation(layer),\n                Interpolation.getInstance(Interpolation.INTERP_BILINEAR));\n        layer.getUserData().put(StreamingRenderer.BYLAYER_INTERPOLATION,\n                Interpolation.getInstance(Interpolation.INTERP_NEAREST));\n        assertEquals(sr.getRenderingInterpolation(layer),\n                Interpolation.getInstance(Interpolation.INTERP_NEAREST));\n    }", "signature": "void testInterpolationByLayer()", "full_signature": "@Test public void testInterpolationByLayer()", "class_method_signature": "StreamingRendererTest.testInterpolationByLayer()", "testcase": true, "constructor": false, "invocations": ["createLineCollection", "createLineStyle", "assertEquals", "getRenderingInterpolation", "getInstance", "put", "getUserData", "getInstance", "assertEquals", "getRenderingInterpolation", "getInstance", "put", "getUserData", "getInstance", "assertEquals", "getRenderingInterpolation", "getInstance", "put", "getUserData", "getInstance", "assertEquals", "getRenderingInterpolation", "getInstance"]}, "focal_class": {"identifier": "StreamingRenderer", "superclass": "", "interfaces": "implements GTRenderer", "fields": [{"original_string": "private static final int REPROJECTION_RASTER_GUTTER = 10;", "modifier": "private static final", "type": "int", "declarator": "REPROJECTION_RASTER_GUTTER = 10", "var_name": "REPROJECTION_RASTER_GUTTER"}, {"original_string": "private final static int defaultMaxFiltersToSendToDatastore = 5;", "modifier": "private final static", "type": "int", "declarator": "defaultMaxFiltersToSendToDatastore = 5", "var_name": "defaultMaxFiltersToSendToDatastore"}, {"original_string": "public static final String SCALE_ACCURATE = \"ACCURATE\";", "modifier": "public static final", "type": "String", "declarator": "SCALE_ACCURATE = \"ACCURATE\"", "var_name": "SCALE_ACCURATE"}, {"original_string": "public static final String SCALE_OGC = \"OGC\";", "modifier": "public static final", "type": "String", "declarator": "SCALE_OGC = \"OGC\"", "var_name": "SCALE_OGC"}, {"original_string": "public static final String RENDERING_BUFFER = \"renderingBuffer\";", "modifier": "public static final", "type": "String", "declarator": "RENDERING_BUFFER = \"renderingBuffer\"", "var_name": "RENDERING_BUFFER"}, {"original_string": "private static final double TOLERANCE = 1e-6;", "modifier": "private static final", "type": "double", "declarator": "TOLERANCE = 1e-6", "var_name": "TOLERANCE"}, {"original_string": "private static final Logger LOGGER = org.geotools.util.logging.Logging.getLogger(\"org.geotools.rendering\");", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = org.geotools.util.logging.Logging.getLogger(\"org.geotools.rendering\")", "var_name": "LOGGER"}, {"original_string": "int error = 0;", "modifier": "", "type": "int", "declarator": "error = 0", "var_name": "error"}, {"original_string": "private final static FilterFactory2 filterFactory = CommonFactoryFinder.getFilterFactory2(null);", "modifier": "private final static", "type": "FilterFactory2", "declarator": "filterFactory = CommonFactoryFinder.getFilterFactory2(null)", "var_name": "filterFactory"}, {"original_string": "private final static PropertyName gridPropertyName = filterFactory.property(\"grid\");", "modifier": "private final static", "type": "PropertyName", "declarator": "gridPropertyName = filterFactory.property(\"grid\")", "var_name": "gridPropertyName"}, {"original_string": "private final static PropertyName paramsPropertyName = filterFactory.property(\"params\");", "modifier": "private final static", "type": "PropertyName", "declarator": "paramsPropertyName = filterFactory.property(\"params\")", "var_name": "paramsPropertyName"}, {"original_string": "private final static PropertyName defaultGeometryPropertyName = filterFactory.property(\"\");", "modifier": "private final static", "type": "PropertyName", "declarator": "defaultGeometryPropertyName = filterFactory.property(\"\")", "var_name": "defaultGeometryPropertyName"}, {"original_string": "private MapContent mapContent;", "modifier": "private", "type": "MapContent", "declarator": "mapContent", "var_name": "mapContent"}, {"original_string": "private boolean interactive = true;", "modifier": "private", "type": "boolean", "declarator": "interactive = true", "var_name": "interactive"}, {"original_string": "private boolean concatTransforms = false;", "modifier": "private", "type": "boolean", "declarator": "concatTransforms = false", "var_name": "concatTransforms"}, {"original_string": "private ReferencedEnvelope mapExtent;", "modifier": "private", "type": "ReferencedEnvelope", "declarator": "mapExtent", "var_name": "mapExtent"}, {"original_string": "private ReferencedEnvelope originalMapExtent;", "modifier": "private", "type": "ReferencedEnvelope", "declarator": "originalMapExtent", "var_name": "originalMapExtent"}, {"original_string": "private ProjectionHandler projectionHandler;", "modifier": "private", "type": "ProjectionHandler", "declarator": "projectionHandler", "var_name": "projectionHandler"}, {"original_string": "private Rectangle screenSize;", "modifier": "private", "type": "Rectangle", "declarator": "screenSize", "var_name": "screenSize"}, {"original_string": "private volatile boolean renderingStopRequested = false;", "modifier": "private volatile", "type": "boolean", "declarator": "renderingStopRequested = false", "var_name": "renderingStopRequested"}, {"original_string": "protected double scaleDenominator;", "modifier": "protected", "type": "double", "declarator": "scaleDenominator", "var_name": "scaleDenominator"}, {"original_string": "private double generalizationDistance = 0.8;", "modifier": "private", "type": "double", "declarator": "generalizationDistance = 0.8", "var_name": "generalizationDistance"}, {"original_string": "private SLDStyleFactory styleFactory = new SLDStyleFactory();", "modifier": "private", "type": "SLDStyleFactory", "declarator": "styleFactory = new SLDStyleFactory()", "var_name": "styleFactory"}, {"original_string": "protected LabelCache labelCache = new LabelCacheImpl();", "modifier": "protected", "type": "LabelCache", "declarator": "labelCache = new LabelCacheImpl()", "var_name": "labelCache"}, {"original_string": "private StyledShapePainter painter = new StyledShapePainter(labelCache);", "modifier": "private", "type": "StyledShapePainter", "declarator": "painter = new StyledShapePainter(labelCache)", "var_name": "painter"}, {"original_string": "private BlockingQueue<RenderingRequest> requests;", "modifier": "private", "type": "BlockingQueue<RenderingRequest>", "declarator": "requests", "var_name": "requests"}, {"original_string": "private IndexedFeatureResults indexedFeatureResults;", "modifier": "private", "type": "IndexedFeatureResults", "declarator": "indexedFeatureResults", "var_name": "indexedFeatureResults"}, {"original_string": "private List<RenderListener> renderListeners = new CopyOnWriteArrayList<RenderListener>();", "modifier": "private", "type": "List<RenderListener>", "declarator": "renderListeners = new CopyOnWriteArrayList<RenderListener>()", "var_name": "renderListeners"}, {"original_string": "private RenderingHints java2dHints;", "modifier": "private", "type": "RenderingHints", "declarator": "java2dHints", "var_name": "java2dHints"}, {"original_string": "private int renderingBufferDEFAULT = 0;", "modifier": "private", "type": "int", "declarator": "renderingBufferDEFAULT = 0", "var_name": "renderingBufferDEFAULT"}, {"original_string": "private String scaleComputationMethodDEFAULT = SCALE_OGC;", "modifier": "private", "type": "String", "declarator": "scaleComputationMethodDEFAULT = SCALE_OGC", "var_name": "scaleComputationMethodDEFAULT"}, {"original_string": "public static final String TEXT_RENDERING_STRING = LabelCacheImpl.LabelRenderingMode.STRING.name();", "modifier": "public static final", "type": "String", "declarator": "TEXT_RENDERING_STRING = LabelCacheImpl.LabelRenderingMode.STRING.name()", "var_name": "TEXT_RENDERING_STRING"}, {"original_string": "public static final String TEXT_RENDERING_OUTLINE = LabelCacheImpl.LabelRenderingMode.OUTLINE.name();", "modifier": "public static final", "type": "String", "declarator": "TEXT_RENDERING_OUTLINE = LabelCacheImpl.LabelRenderingMode.OUTLINE.name()", "var_name": "TEXT_RENDERING_OUTLINE"}, {"original_string": "public static final String TEXT_RENDERING_ADAPTIVE = LabelCacheImpl.LabelRenderingMode.ADAPTIVE.name();", "modifier": "public static final", "type": "String", "declarator": "TEXT_RENDERING_ADAPTIVE = LabelCacheImpl.LabelRenderingMode.ADAPTIVE.name()", "var_name": "TEXT_RENDERING_ADAPTIVE"}, {"original_string": "public static final String TEXT_RENDERING_KEY = \"textRenderingMethod\";", "modifier": "public static final", "type": "String", "declarator": "TEXT_RENDERING_KEY = \"textRenderingMethod\"", "var_name": "TEXT_RENDERING_KEY"}, {"original_string": "private String textRenderingModeDEFAULT = TEXT_RENDERING_STRING;", "modifier": "private", "type": "String", "declarator": "textRenderingModeDEFAULT = TEXT_RENDERING_STRING", "var_name": "textRenderingModeDEFAULT"}, {"original_string": "public static final String LINE_WIDTH_OPTIMIZATION_KEY = \"lineWidthOptimization\";", "modifier": "public static final", "type": "String", "declarator": "LINE_WIDTH_OPTIMIZATION_KEY = \"lineWidthOptimization\"", "var_name": "LINE_WIDTH_OPTIMIZATION_KEY"}, {"original_string": "public static final String OPTIMIZE_FTS_RENDERING_KEY = \"optimizeFTSRendering\";", "modifier": "public static final", "type": "String", "declarator": "OPTIMIZE_FTS_RENDERING_KEY = \"optimizeFTSRendering\"", "var_name": "OPTIMIZE_FTS_RENDERING_KEY"}, {"original_string": "public static final String ADVANCED_PROJECTION_HANDLING_KEY = \"advancedProjectionHandling\";", "modifier": "public static final", "type": "String", "declarator": "ADVANCED_PROJECTION_HANDLING_KEY = \"advancedProjectionHandling\"", "var_name": "ADVANCED_PROJECTION_HANDLING_KEY"}, {"original_string": "public static final String CONTINUOUS_MAP_WRAPPING = \"continuousMapWrapping\";", "modifier": "public static final", "type": "String", "declarator": "CONTINUOUS_MAP_WRAPPING = \"continuousMapWrapping\"", "var_name": "CONTINUOUS_MAP_WRAPPING"}, {"original_string": "public static final String VECTOR_RENDERING_KEY = \"vectorRenderingEnabled\";", "modifier": "public static final", "type": "String", "declarator": "VECTOR_RENDERING_KEY = \"vectorRenderingEnabled\"", "var_name": "VECTOR_RENDERING_KEY"}, {"original_string": "private static boolean VECTOR_RENDERING_ENABLED_DEFAULT = false;", "modifier": "private static", "type": "boolean", "declarator": "VECTOR_RENDERING_ENABLED_DEFAULT = false", "var_name": "VECTOR_RENDERING_ENABLED_DEFAULT"}, {"original_string": "public static final String LABEL_CACHE_KEY = \"labelCache\";", "modifier": "public static final", "type": "String", "declarator": "LABEL_CACHE_KEY = \"labelCache\"", "var_name": "LABEL_CACHE_KEY"}, {"original_string": "public static final String FORCE_EPSG_AXIS_ORDER_KEY = \"ForceEPSGAxisOrder\";", "modifier": "public static final", "type": "String", "declarator": "FORCE_EPSG_AXIS_ORDER_KEY = \"ForceEPSGAxisOrder\"", "var_name": "FORCE_EPSG_AXIS_ORDER_KEY"}, {"original_string": "public static final String DPI_KEY = \"dpi\";", "modifier": "public static final", "type": "String", "declarator": "DPI_KEY = \"dpi\"", "var_name": "DPI_KEY"}, {"original_string": "public static final String DECLARED_SCALE_DENOM_KEY = \"declaredScaleDenominator\";", "modifier": "public static final", "type": "String", "declarator": "DECLARED_SCALE_DENOM_KEY = \"declaredScaleDenominator\"", "var_name": "DECLARED_SCALE_DENOM_KEY"}, {"original_string": "public static final String SCALE_COMPUTATION_METHOD_KEY = \"scaleComputationMethod\";", "modifier": "public static final", "type": "String", "declarator": "SCALE_COMPUTATION_METHOD_KEY = \"scaleComputationMethod\"", "var_name": "SCALE_COMPUTATION_METHOD_KEY"}, {"original_string": "public static final String BYLAYER_INTERPOLATION = \"byLayerInterpolation\";", "modifier": "public static final", "type": "String", "declarator": "BYLAYER_INTERPOLATION = \"byLayerInterpolation\"", "var_name": "BYLAYER_INTERPOLATION"}, {"original_string": "private Map rendererHints = null;", "modifier": "private", "type": "Map", "declarator": "rendererHints = null", "var_name": "rendererHints"}, {"original_string": "private AffineTransform worldToScreenTransform = null;", "modifier": "private", "type": "AffineTransform", "declarator": "worldToScreenTransform = null", "var_name": "worldToScreenTransform"}, {"original_string": "private CoordinateReferenceSystem destinationCrs;", "modifier": "private", "type": "CoordinateReferenceSystem", "declarator": "destinationCrs", "var_name": "destinationCrs"}, {"original_string": "private boolean canTransform;", "modifier": "private", "type": "boolean", "declarator": "canTransform", "var_name": "canTransform"}, {"original_string": "private boolean inMemoryGeneralization = true;", "modifier": "private", "type": "boolean", "declarator": "inMemoryGeneralization = true", "var_name": "inMemoryGeneralization"}, {"original_string": "private ExecutorService threadPool;", "modifier": "private", "type": "ExecutorService", "declarator": "threadPool", "var_name": "threadPool"}, {"original_string": "private PainterThread painterThread;", "modifier": "private", "type": "PainterThread", "declarator": "painterThread", "var_name": "painterThread"}, {"original_string": "private int metaBuffer;", "modifier": "private", "type": "int", "declarator": "metaBuffer", "var_name": "metaBuffer"}, {"original_string": "private static final Decimator NULL_DECIMATOR = new Decimator(-1, -1);", "modifier": "private static final", "type": "Decimator", "declarator": "NULL_DECIMATOR = new Decimator(-1, -1)", "var_name": "NULL_DECIMATOR"}], "methods": [{"identifier": "StreamingRenderer", "parameters": "()", "modifiers": "public", "return": "", "signature": " StreamingRenderer()", "full_signature": "public  StreamingRenderer()", "class_method_signature": "StreamingRenderer.StreamingRenderer()", "testcase": false, "constructor": true}, {"identifier": "setThreadPool", "parameters": "(ExecutorService threadPool)", "modifiers": "public", "return": "void", "signature": "void setThreadPool(ExecutorService threadPool)", "full_signature": "public void setThreadPool(ExecutorService threadPool)", "class_method_signature": "StreamingRenderer.setThreadPool(ExecutorService threadPool)", "testcase": false, "constructor": false}, {"identifier": "setConcatTransforms", "parameters": "(boolean flag)", "modifiers": "public", "return": "void", "signature": "void setConcatTransforms(boolean flag)", "full_signature": "public void setConcatTransforms(boolean flag)", "class_method_signature": "StreamingRenderer.setConcatTransforms(boolean flag)", "testcase": false, "constructor": false}, {"identifier": "getConcatTransforms", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean getConcatTransforms()", "full_signature": "public boolean getConcatTransforms()", "class_method_signature": "StreamingRenderer.getConcatTransforms()", "testcase": false, "constructor": false}, {"identifier": "addRenderListener", "parameters": "(RenderListener listener)", "modifiers": "public", "return": "void", "signature": "void addRenderListener(RenderListener listener)", "full_signature": "public void addRenderListener(RenderListener listener)", "class_method_signature": "StreamingRenderer.addRenderListener(RenderListener listener)", "testcase": false, "constructor": false}, {"identifier": "removeRenderListener", "parameters": "(RenderListener listener)", "modifiers": "public", "return": "void", "signature": "void removeRenderListener(RenderListener listener)", "full_signature": "public void removeRenderListener(RenderListener listener)", "class_method_signature": "StreamingRenderer.removeRenderListener(RenderListener listener)", "testcase": false, "constructor": false}, {"identifier": "fireFeatureRenderedEvent", "parameters": "(Object feature)", "modifiers": "private", "return": "void", "signature": "void fireFeatureRenderedEvent(Object feature)", "full_signature": "private void fireFeatureRenderedEvent(Object feature)", "class_method_signature": "StreamingRenderer.fireFeatureRenderedEvent(Object feature)", "testcase": false, "constructor": false}, {"identifier": "fireErrorEvent", "parameters": "(Throwable t)", "modifiers": "private", "return": "void", "signature": "void fireErrorEvent(Throwable t)", "full_signature": "private void fireErrorEvent(Throwable t)", "class_method_signature": "StreamingRenderer.fireErrorEvent(Throwable t)", "testcase": false, "constructor": false}, {"identifier": "stopRendering", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stopRendering()", "full_signature": "public void stopRendering()", "class_method_signature": "StreamingRenderer.stopRendering()", "testcase": false, "constructor": false}, {"identifier": "paint", "parameters": "(Graphics2D graphics, Rectangle paintArea,\n            AffineTransform worldToScreen)", "modifiers": "public", "return": "void", "signature": "void paint(Graphics2D graphics, Rectangle paintArea,\n            AffineTransform worldToScreen)", "full_signature": "public void paint(Graphics2D graphics, Rectangle paintArea,\n            AffineTransform worldToScreen)", "class_method_signature": "StreamingRenderer.paint(Graphics2D graphics, Rectangle paintArea,\n            AffineTransform worldToScreen)", "testcase": false, "constructor": false}, {"identifier": "paint", "parameters": "(Graphics2D graphics, Rectangle paintArea, Envelope mapArea)", "modifiers": "public", "return": "void", "signature": "void paint(Graphics2D graphics, Rectangle paintArea, Envelope mapArea)", "full_signature": "public void paint(Graphics2D graphics, Rectangle paintArea, Envelope mapArea)", "class_method_signature": "StreamingRenderer.paint(Graphics2D graphics, Rectangle paintArea, Envelope mapArea)", "testcase": false, "constructor": false}, {"identifier": "paint", "parameters": "(Graphics2D graphics, Rectangle paintArea,\n            ReferencedEnvelope mapArea)", "modifiers": "public", "return": "void", "signature": "void paint(Graphics2D graphics, Rectangle paintArea,\n            ReferencedEnvelope mapArea)", "full_signature": "public void paint(Graphics2D graphics, Rectangle paintArea,\n            ReferencedEnvelope mapArea)", "class_method_signature": "StreamingRenderer.paint(Graphics2D graphics, Rectangle paintArea,\n            ReferencedEnvelope mapArea)", "testcase": false, "constructor": false}, {"identifier": "paint", "parameters": "(Graphics2D graphics, Rectangle paintArea,\n            Envelope mapArea, AffineTransform worldToScreen)", "modifiers": "public", "return": "void", "signature": "void paint(Graphics2D graphics, Rectangle paintArea,\n            Envelope mapArea, AffineTransform worldToScreen)", "full_signature": "public void paint(Graphics2D graphics, Rectangle paintArea,\n            Envelope mapArea, AffineTransform worldToScreen)", "class_method_signature": "StreamingRenderer.paint(Graphics2D graphics, Rectangle paintArea,\n            Envelope mapArea, AffineTransform worldToScreen)", "testcase": false, "constructor": false}, {"identifier": "computeScale", "parameters": "(ReferencedEnvelope envelope, Rectangle paintArea, \n            AffineTransform worldToScreen, Map hints)", "modifiers": "private", "return": "double", "signature": "double computeScale(ReferencedEnvelope envelope, Rectangle paintArea, \n            AffineTransform worldToScreen, Map hints)", "full_signature": "private double computeScale(ReferencedEnvelope envelope, Rectangle paintArea, \n            AffineTransform worldToScreen, Map hints)", "class_method_signature": "StreamingRenderer.computeScale(ReferencedEnvelope envelope, Rectangle paintArea, \n            AffineTransform worldToScreen, Map hints)", "testcase": false, "constructor": false}, {"identifier": "paint", "parameters": "(Graphics2D graphics, Rectangle paintArea,\n            ReferencedEnvelope mapArea, AffineTransform worldToScreen)", "modifiers": "public", "return": "void", "signature": "void paint(Graphics2D graphics, Rectangle paintArea,\n            ReferencedEnvelope mapArea, AffineTransform worldToScreen)", "full_signature": "public void paint(Graphics2D graphics, Rectangle paintArea,\n            ReferencedEnvelope mapArea, AffineTransform worldToScreen)", "class_method_signature": "StreamingRenderer.paint(Graphics2D graphics, Rectangle paintArea,\n            ReferencedEnvelope mapArea, AffineTransform worldToScreen)", "testcase": false, "constructor": false}, {"identifier": "getRequestsQueue", "parameters": "()", "modifiers": "protected", "return": "BlockingQueue<RenderingRequest>", "signature": "BlockingQueue<RenderingRequest> getRequestsQueue()", "full_signature": "protected BlockingQueue<RenderingRequest> getRequestsQueue()", "class_method_signature": "StreamingRenderer.getRequestsQueue()", "testcase": false, "constructor": false}, {"identifier": "expandEnvelope", "parameters": "(Envelope envelope, AffineTransform worldToScreen, int buffer)", "modifiers": "private", "return": "Envelope", "signature": "Envelope expandEnvelope(Envelope envelope, AffineTransform worldToScreen, int buffer)", "full_signature": "private Envelope expandEnvelope(Envelope envelope, AffineTransform worldToScreen, int buffer)", "class_method_signature": "StreamingRenderer.expandEnvelope(Envelope envelope, AffineTransform worldToScreen, int buffer)", "testcase": false, "constructor": false}, {"identifier": "queryLayer", "parameters": "(MapLayer currLayer, CollectionSource source)", "modifiers": "", "return": "Collection", "signature": "Collection queryLayer(MapLayer currLayer, CollectionSource source)", "full_signature": " Collection queryLayer(MapLayer currLayer, CollectionSource source)", "class_method_signature": "StreamingRenderer.queryLayer(MapLayer currLayer, CollectionSource source)", "testcase": false, "constructor": false}, {"identifier": "getStyleQuery", "parameters": "(FeatureSource<FeatureType, Feature> source,\n            FeatureType schema, List<LiteFeatureTypeStyle> styleList,\n            Envelope mapArea, CoordinateReferenceSystem mapCRS,\n            CoordinateReferenceSystem featCrs, Rectangle screenSize,\n            GeometryDescriptor geometryAttribute,\n            AffineTransform worldToScreenTransform, boolean renderingTransformation)", "modifiers": "", "return": "Query", "signature": "Query getStyleQuery(FeatureSource<FeatureType, Feature> source,\n            FeatureType schema, List<LiteFeatureTypeStyle> styleList,\n            Envelope mapArea, CoordinateReferenceSystem mapCRS,\n            CoordinateReferenceSystem featCrs, Rectangle screenSize,\n            GeometryDescriptor geometryAttribute,\n            AffineTransform worldToScreenTransform, boolean renderingTransformation)", "full_signature": " Query getStyleQuery(FeatureSource<FeatureType, Feature> source,\n            FeatureType schema, List<LiteFeatureTypeStyle> styleList,\n            Envelope mapArea, CoordinateReferenceSystem mapCRS,\n            CoordinateReferenceSystem featCrs, Rectangle screenSize,\n            GeometryDescriptor geometryAttribute,\n            AffineTransform worldToScreenTransform, boolean renderingTransformation)", "class_method_signature": "StreamingRenderer.getStyleQuery(FeatureSource<FeatureType, Feature> source,\n            FeatureType schema, List<LiteFeatureTypeStyle> styleList,\n            Envelope mapArea, CoordinateReferenceSystem mapCRS,\n            CoordinateReferenceSystem featCrs, Rectangle screenSize,\n            GeometryDescriptor geometryAttribute,\n            AffineTransform worldToScreenTransform, boolean renderingTransformation)", "testcase": false, "constructor": false}, {"identifier": "getDefinitionQuery", "parameters": "(MapLayer currLayer, FeatureSource<FeatureType, Feature> source, CoordinateReferenceSystem featCrs)", "modifiers": "", "return": "Query", "signature": "Query getDefinitionQuery(MapLayer currLayer, FeatureSource<FeatureType, Feature> source, CoordinateReferenceSystem featCrs)", "full_signature": " Query getDefinitionQuery(MapLayer currLayer, FeatureSource<FeatureType, Feature> source, CoordinateReferenceSystem featCrs)", "class_method_signature": "StreamingRenderer.getDefinitionQuery(MapLayer currLayer, FeatureSource<FeatureType, Feature> source, CoordinateReferenceSystem featCrs)", "testcase": false, "constructor": false}, {"identifier": "expandEnvelopeByTransformations", "parameters": "(LiteFeatureTypeStyle[] styles,\n            ReferencedEnvelope envelope)", "modifiers": "", "return": "ReferencedEnvelope", "signature": "ReferencedEnvelope expandEnvelopeByTransformations(LiteFeatureTypeStyle[] styles,\n            ReferencedEnvelope envelope)", "full_signature": " ReferencedEnvelope expandEnvelopeByTransformations(LiteFeatureTypeStyle[] styles,\n            ReferencedEnvelope envelope)", "class_method_signature": "StreamingRenderer.expandEnvelopeByTransformations(LiteFeatureTypeStyle[] styles,\n            ReferencedEnvelope envelope)", "testcase": false, "constructor": false}, {"identifier": "buildFullTransform", "parameters": "(CoordinateReferenceSystem sourceCRS,\n            CoordinateReferenceSystem destCRS, AffineTransform worldToScreenTransform)", "modifiers": "private", "return": "MathTransform", "signature": "MathTransform buildFullTransform(CoordinateReferenceSystem sourceCRS,\n            CoordinateReferenceSystem destCRS, AffineTransform worldToScreenTransform)", "full_signature": "private MathTransform buildFullTransform(CoordinateReferenceSystem sourceCRS,\n            CoordinateReferenceSystem destCRS, AffineTransform worldToScreenTransform)", "class_method_signature": "StreamingRenderer.buildFullTransform(CoordinateReferenceSystem sourceCRS,\n            CoordinateReferenceSystem destCRS, AffineTransform worldToScreenTransform)", "testcase": false, "constructor": false}, {"identifier": "buildTransform", "parameters": "(CoordinateReferenceSystem sourceCRS,\n            CoordinateReferenceSystem destCRS)", "modifiers": "private", "return": "MathTransform", "signature": "MathTransform buildTransform(CoordinateReferenceSystem sourceCRS,\n            CoordinateReferenceSystem destCRS)", "full_signature": "private MathTransform buildTransform(CoordinateReferenceSystem sourceCRS,\n            CoordinateReferenceSystem destCRS)", "class_method_signature": "StreamingRenderer.buildTransform(CoordinateReferenceSystem sourceCRS,\n            CoordinateReferenceSystem destCRS)", "testcase": false, "constructor": false}, {"identifier": "getNativeCRS", "parameters": "(FeatureType schema, List<PropertyName> attNames)", "modifiers": "private", "return": "CoordinateReferenceSystem", "signature": "CoordinateReferenceSystem getNativeCRS(FeatureType schema, List<PropertyName> attNames)", "full_signature": "private CoordinateReferenceSystem getNativeCRS(FeatureType schema, List<PropertyName> attNames)", "class_method_signature": "StreamingRenderer.getNativeCRS(FeatureType schema, List<PropertyName> attNames)", "testcase": false, "constructor": false}, {"identifier": "processRuleForQuery", "parameters": "(LiteFeatureTypeStyle[] styles, Query q)", "modifiers": "private", "return": "void", "signature": "void processRuleForQuery(LiteFeatureTypeStyle[] styles, Query q)", "full_signature": "private void processRuleForQuery(LiteFeatureTypeStyle[] styles, Query q)", "class_method_signature": "StreamingRenderer.processRuleForQuery(LiteFeatureTypeStyle[] styles, Query q)", "testcase": false, "constructor": false}, {"identifier": "getMaxFiltersToSendToDatastore", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int getMaxFiltersToSendToDatastore()", "full_signature": "private int getMaxFiltersToSendToDatastore()", "class_method_signature": "StreamingRenderer.getMaxFiltersToSendToDatastore()", "testcase": false, "constructor": false}, {"identifier": "isOptimizedFTSRenderingEnabled", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isOptimizedFTSRenderingEnabled()", "full_signature": "private boolean isOptimizedFTSRenderingEnabled()", "class_method_signature": "StreamingRenderer.isOptimizedFTSRenderingEnabled()", "testcase": false, "constructor": false}, {"identifier": "isAdvancedProjectionHandlingEnabled", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isAdvancedProjectionHandlingEnabled()", "full_signature": "private boolean isAdvancedProjectionHandlingEnabled()", "class_method_signature": "StreamingRenderer.isAdvancedProjectionHandlingEnabled()", "testcase": false, "constructor": false}, {"identifier": "isMapWrappingEnabled", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isMapWrappingEnabled()", "full_signature": "private boolean isMapWrappingEnabled()", "class_method_signature": "StreamingRenderer.isMapWrappingEnabled()", "testcase": false, "constructor": false}, {"identifier": "isEPSGAxisOrderForced", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isEPSGAxisOrderForced()", "full_signature": "private boolean isEPSGAxisOrderForced()", "class_method_signature": "StreamingRenderer.isEPSGAxisOrderForced()", "testcase": false, "constructor": false}, {"identifier": "isVectorRenderingEnabled", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isVectorRenderingEnabled()", "full_signature": "private boolean isVectorRenderingEnabled()", "class_method_signature": "StreamingRenderer.isVectorRenderingEnabled()", "testcase": false, "constructor": false}, {"identifier": "findRenderingBuffer", "parameters": "(LiteFeatureTypeStyle[] styles)", "modifiers": "private", "return": "int", "signature": "int findRenderingBuffer(LiteFeatureTypeStyle[] styles)", "full_signature": "private int findRenderingBuffer(LiteFeatureTypeStyle[] styles)", "class_method_signature": "StreamingRenderer.findRenderingBuffer(LiteFeatureTypeStyle[] styles)", "testcase": false, "constructor": false}, {"identifier": "findStyleAttributes", "parameters": "(LiteFeatureTypeStyle[] styles,\n            FeatureType schema)", "modifiers": "private", "return": "List<PropertyName>", "signature": "List<PropertyName> findStyleAttributes(LiteFeatureTypeStyle[] styles,\n            FeatureType schema)", "full_signature": "private List<PropertyName> findStyleAttributes(LiteFeatureTypeStyle[] styles,\n            FeatureType schema)", "class_method_signature": "StreamingRenderer.findStyleAttributes(LiteFeatureTypeStyle[] styles,\n            FeatureType schema)", "testcase": false, "constructor": false}, {"identifier": "createBBoxFilters", "parameters": "(FeatureType schema, List<PropertyName> attributes,\n            List<ReferencedEnvelope> bboxes)", "modifiers": "private", "return": "Filter", "signature": "Filter createBBoxFilters(FeatureType schema, List<PropertyName> attributes,\n            List<ReferencedEnvelope> bboxes)", "full_signature": "private Filter createBBoxFilters(FeatureType schema, List<PropertyName> attributes,\n            List<ReferencedEnvelope> bboxes)", "class_method_signature": "StreamingRenderer.createBBoxFilters(FeatureType schema, List<PropertyName> attributes,\n            List<ReferencedEnvelope> bboxes)", "testcase": false, "constructor": false}, {"identifier": "isWithInScale", "parameters": "(Rule r)", "modifiers": "private", "return": "boolean", "signature": "boolean isWithInScale(Rule r)", "full_signature": "private boolean isWithInScale(Rule r)", "class_method_signature": "StreamingRenderer.isWithInScale(Rule r)", "testcase": false, "constructor": false}, {"identifier": "createLiteFeatureTypeStyles", "parameters": "(\n            List<FeatureTypeStyle> featureStyles, \n            Object typeDescription, Graphics2D graphics)", "modifiers": "private", "return": "ArrayList<LiteFeatureTypeStyle>", "signature": "ArrayList<LiteFeatureTypeStyle> createLiteFeatureTypeStyles(\n            List<FeatureTypeStyle> featureStyles, \n            Object typeDescription, Graphics2D graphics)", "full_signature": "private ArrayList<LiteFeatureTypeStyle> createLiteFeatureTypeStyles(\n            List<FeatureTypeStyle> featureStyles, \n            Object typeDescription, Graphics2D graphics)", "class_method_signature": "StreamingRenderer.createLiteFeatureTypeStyles(\n            List<FeatureTypeStyle> featureStyles, \n            Object typeDescription, Graphics2D graphics)", "testcase": false, "constructor": false}, {"identifier": "createLiteFeatureTypeStyles", "parameters": "(\n            List<FeatureTypeStyle> featureStyles, FeatureType ftype,\n            Graphics2D graphics)", "modifiers": "private", "return": "ArrayList<LiteFeatureTypeStyle>", "signature": "ArrayList<LiteFeatureTypeStyle> createLiteFeatureTypeStyles(\n            List<FeatureTypeStyle> featureStyles, FeatureType ftype,\n            Graphics2D graphics)", "full_signature": "private ArrayList<LiteFeatureTypeStyle> createLiteFeatureTypeStyles(\n            List<FeatureTypeStyle> featureStyles, FeatureType ftype,\n            Graphics2D graphics)", "class_method_signature": "StreamingRenderer.createLiteFeatureTypeStyles(\n            List<FeatureTypeStyle> featureStyles, FeatureType ftype,\n            Graphics2D graphics)", "testcase": false, "constructor": false}, {"identifier": "screenMapEnabled", "parameters": "(LiteFeatureTypeStyle lfts)", "modifiers": "", "return": "boolean", "signature": "boolean screenMapEnabled(LiteFeatureTypeStyle lfts)", "full_signature": " boolean screenMapEnabled(LiteFeatureTypeStyle lfts)", "class_method_signature": "StreamingRenderer.screenMapEnabled(LiteFeatureTypeStyle lfts)", "testcase": false, "constructor": false}, {"identifier": "isFeatureTypeStyleActive", "parameters": "(FeatureType ftype, FeatureTypeStyle fts)", "modifiers": "private", "return": "boolean", "signature": "boolean isFeatureTypeStyleActive(FeatureType ftype, FeatureTypeStyle fts)", "full_signature": "private boolean isFeatureTypeStyleActive(FeatureType ftype, FeatureTypeStyle fts)", "class_method_signature": "StreamingRenderer.isFeatureTypeStyleActive(FeatureType ftype, FeatureTypeStyle fts)", "testcase": false, "constructor": false}, {"identifier": "splitRules", "parameters": "(FeatureTypeStyle fts)", "modifiers": "private", "return": "List[]", "signature": "List[] splitRules(FeatureTypeStyle fts)", "full_signature": "private List[] splitRules(FeatureTypeStyle fts)", "class_method_signature": "StreamingRenderer.splitRules(FeatureTypeStyle fts)", "testcase": false, "constructor": false}, {"identifier": "getMaxBackBufferMemory", "parameters": "(int width, int height)", "modifiers": "public", "return": "int", "signature": "int getMaxBackBufferMemory(int width, int height)", "full_signature": "public int getMaxBackBufferMemory(int width, int height)", "class_method_signature": "StreamingRenderer.getMaxBackBufferMemory(int width, int height)", "testcase": false, "constructor": false}, {"identifier": "processStylers", "parameters": "(final Graphics2D graphics,\n            final Layer layer, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, Envelope mapArea,\n            Rectangle screenSize, String layerId)", "modifiers": "private", "return": "void", "signature": "void processStylers(final Graphics2D graphics,\n            final Layer layer, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, Envelope mapArea,\n            Rectangle screenSize, String layerId)", "full_signature": "private void processStylers(final Graphics2D graphics,\n            final Layer layer, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, Envelope mapArea,\n            Rectangle screenSize, String layerId)", "class_method_signature": "StreamingRenderer.processStylers(final Graphics2D graphics,\n            final Layer layer, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, Envelope mapArea,\n            Rectangle screenSize, String layerId)", "testcase": false, "constructor": false}, {"identifier": "classifyByTransformation", "parameters": "(List<LiteFeatureTypeStyle> lfts)", "modifiers": "", "return": "List<List<LiteFeatureTypeStyle>>", "signature": "List<List<LiteFeatureTypeStyle>> classifyByTransformation(List<LiteFeatureTypeStyle> lfts)", "full_signature": " List<List<LiteFeatureTypeStyle>> classifyByTransformation(List<LiteFeatureTypeStyle> lfts)", "class_method_signature": "StreamingRenderer.classifyByTransformation(List<LiteFeatureTypeStyle> lfts)", "testcase": false, "constructor": false}, {"identifier": "checkAttributeExistence", "parameters": "(FeatureType schema, Query query)", "modifiers": "", "return": "void", "signature": "void checkAttributeExistence(FeatureType schema, Query query)", "full_signature": " void checkAttributeExistence(FeatureType schema, Query query)", "class_method_signature": "StreamingRenderer.checkAttributeExistence(FeatureType schema, Query query)", "testcase": false, "constructor": false}, {"identifier": "applyUnitRescale", "parameters": "(final ArrayList<LiteFeatureTypeStyle> lfts)", "modifiers": "", "return": "void", "signature": "void applyUnitRescale(final ArrayList<LiteFeatureTypeStyle> lfts)", "full_signature": " void applyUnitRescale(final ArrayList<LiteFeatureTypeStyle> lfts)", "class_method_signature": "StreamingRenderer.applyUnitRescale(final ArrayList<LiteFeatureTypeStyle> lfts)", "testcase": false, "constructor": false}, {"identifier": "reprojectSpatialFilters", "parameters": "(final ArrayList<LiteFeatureTypeStyle> lfts, FeatureSource fs)", "modifiers": "", "return": "void", "signature": "void reprojectSpatialFilters(final ArrayList<LiteFeatureTypeStyle> lfts, FeatureSource fs)", "full_signature": " void reprojectSpatialFilters(final ArrayList<LiteFeatureTypeStyle> lfts, FeatureSource fs)", "class_method_signature": "StreamingRenderer.reprojectSpatialFilters(final ArrayList<LiteFeatureTypeStyle> lfts, FeatureSource fs)", "testcase": false, "constructor": false}, {"identifier": "getDeclaredSRS", "parameters": "(FeatureType schema)", "modifiers": "private", "return": "CoordinateReferenceSystem", "signature": "CoordinateReferenceSystem getDeclaredSRS(FeatureType schema)", "full_signature": "private CoordinateReferenceSystem getDeclaredSRS(FeatureType schema)", "class_method_signature": "StreamingRenderer.getDeclaredSRS(FeatureType schema)", "testcase": false, "constructor": false}, {"identifier": "reprojectQuery", "parameters": "(Query query, FeatureSource<FeatureType, Feature> source)", "modifiers": "private", "return": "Query", "signature": "Query reprojectQuery(Query query, FeatureSource<FeatureType, Feature> source)", "full_signature": "private Query reprojectQuery(Query query, FeatureSource<FeatureType, Feature> source)", "class_method_signature": "StreamingRenderer.reprojectQuery(Query query, FeatureSource<FeatureType, Feature> source)", "testcase": false, "constructor": false}, {"identifier": "reprojectSpatialFilters", "parameters": "(LiteFeatureTypeStyle fts, CoordinateReferenceSystem declaredCRS, FeatureType schema)", "modifiers": "", "return": "void", "signature": "void reprojectSpatialFilters(LiteFeatureTypeStyle fts, CoordinateReferenceSystem declaredCRS, FeatureType schema)", "full_signature": " void reprojectSpatialFilters(LiteFeatureTypeStyle fts, CoordinateReferenceSystem declaredCRS, FeatureType schema)", "class_method_signature": "StreamingRenderer.reprojectSpatialFilters(LiteFeatureTypeStyle fts, CoordinateReferenceSystem declaredCRS, FeatureType schema)", "testcase": false, "constructor": false}, {"identifier": "reprojectSpatialFilters", "parameters": "(Rule rule, CoordinateReferenceSystem declaredCRS, FeatureType schema)", "modifiers": "private", "return": "Rule", "signature": "Rule reprojectSpatialFilters(Rule rule, CoordinateReferenceSystem declaredCRS, FeatureType schema)", "full_signature": "private Rule reprojectSpatialFilters(Rule rule, CoordinateReferenceSystem declaredCRS, FeatureType schema)", "class_method_signature": "StreamingRenderer.reprojectSpatialFilters(Rule rule, CoordinateReferenceSystem declaredCRS, FeatureType schema)", "testcase": false, "constructor": false}, {"identifier": "reprojectSpatialFilter", "parameters": "(CoordinateReferenceSystem declaredCRS,\n            FeatureType schema, Filter filter)", "modifiers": "private", "return": "Filter", "signature": "Filter reprojectSpatialFilter(CoordinateReferenceSystem declaredCRS,\n            FeatureType schema, Filter filter)", "full_signature": "private Filter reprojectSpatialFilter(CoordinateReferenceSystem declaredCRS,\n            FeatureType schema, Filter filter)", "class_method_signature": "StreamingRenderer.reprojectSpatialFilter(CoordinateReferenceSystem declaredCRS,\n            FeatureType schema, Filter filter)", "testcase": false, "constructor": false}, {"identifier": "rescaleFeatureTypeStyle", "parameters": "(LiteFeatureTypeStyle fts, DuplicatingStyleVisitor visitor)", "modifiers": "", "return": "void", "signature": "void rescaleFeatureTypeStyle(LiteFeatureTypeStyle fts, DuplicatingStyleVisitor visitor)", "full_signature": " void rescaleFeatureTypeStyle(LiteFeatureTypeStyle fts, DuplicatingStyleVisitor visitor)", "class_method_signature": "StreamingRenderer.rescaleFeatureTypeStyle(LiteFeatureTypeStyle fts, DuplicatingStyleVisitor visitor)", "testcase": false, "constructor": false}, {"identifier": "drawPlain", "parameters": "(final Graphics2D graphics, MapLayer currLayer, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, String layerId, Collection<?> collection,\n            FeatureCollection<?,?> features, final NumberRange<?> scaleRange,\n            final List<LiteFeatureTypeStyle> lfts)", "modifiers": "private", "return": "void", "signature": "void drawPlain(final Graphics2D graphics, MapLayer currLayer, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, String layerId, Collection<?> collection,\n            FeatureCollection<?,?> features, final NumberRange<?> scaleRange,\n            final List<LiteFeatureTypeStyle> lfts)", "full_signature": "private void drawPlain(final Graphics2D graphics, MapLayer currLayer, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, String layerId, Collection<?> collection,\n            FeatureCollection<?,?> features, final NumberRange<?> scaleRange,\n            final List<LiteFeatureTypeStyle> lfts)", "class_method_signature": "StreamingRenderer.drawPlain(final Graphics2D graphics, MapLayer currLayer, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, String layerId, Collection<?> collection,\n            FeatureCollection<?,?> features, final NumberRange<?> scaleRange,\n            final List<LiteFeatureTypeStyle> lfts)", "testcase": false, "constructor": false}, {"identifier": "drawOptimized", "parameters": "(final Graphics2D graphics, MapLayer currLayer, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, String layerId, Collection collection,\n            FeatureCollection features, final NumberRange scaleRange, final List lfts)", "modifiers": "private", "return": "void", "signature": "void drawOptimized(final Graphics2D graphics, MapLayer currLayer, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, String layerId, Collection collection,\n            FeatureCollection features, final NumberRange scaleRange, final List lfts)", "full_signature": "private void drawOptimized(final Graphics2D graphics, MapLayer currLayer, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, String layerId, Collection collection,\n            FeatureCollection features, final NumberRange scaleRange, final List lfts)", "class_method_signature": "StreamingRenderer.drawOptimized(final Graphics2D graphics, MapLayer currLayer, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, String layerId, Collection collection,\n            FeatureCollection features, final NumberRange scaleRange, final List lfts)", "testcase": false, "constructor": false}, {"identifier": "isCloningRequired", "parameters": "(MapLayer layer, LiteFeatureTypeStyle[] lfts)", "modifiers": "private", "return": "boolean", "signature": "boolean isCloningRequired(MapLayer layer, LiteFeatureTypeStyle[] lfts)", "full_signature": "private boolean isCloningRequired(MapLayer layer, LiteFeatureTypeStyle[] lfts)", "class_method_signature": "StreamingRenderer.isCloningRequired(MapLayer layer, LiteFeatureTypeStyle[] lfts)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(RenderableFeature rf, LiteFeatureTypeStyle fts,\n            NumberRange scaleRange, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, String layerId)", "modifiers": "private", "return": "void", "signature": "void process(RenderableFeature rf, LiteFeatureTypeStyle fts,\n            NumberRange scaleRange, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, String layerId)", "full_signature": "private void process(RenderableFeature rf, LiteFeatureTypeStyle fts,\n            NumberRange scaleRange, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, String layerId)", "class_method_signature": "StreamingRenderer.process(RenderableFeature rf, LiteFeatureTypeStyle fts,\n            NumberRange scaleRange, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, String layerId)", "testcase": false, "constructor": false}, {"identifier": "processSymbolizers", "parameters": "(final Graphics2D graphics,\n            final RenderableFeature drawMe, final List<Symbolizer> symbolizers,\n            NumberRange scaleRange, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, String layerId)", "modifiers": "private", "return": "void", "signature": "void processSymbolizers(final Graphics2D graphics,\n            final RenderableFeature drawMe, final List<Symbolizer> symbolizers,\n            NumberRange scaleRange, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, String layerId)", "full_signature": "private void processSymbolizers(final Graphics2D graphics,\n            final RenderableFeature drawMe, final List<Symbolizer> symbolizers,\n            NumberRange scaleRange, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, String layerId)", "class_method_signature": "StreamingRenderer.processSymbolizers(final Graphics2D graphics,\n            final RenderableFeature drawMe, final List<Symbolizer> symbolizers,\n            NumberRange scaleRange, AffineTransform at,\n            CoordinateReferenceSystem destinationCrs, String layerId)", "testcase": false, "constructor": false}, {"identifier": "getRasterGridGeometry", "parameters": "(CoordinateReferenceSystem destinationCrs,\n            CoordinateReferenceSystem sourceCRS)", "modifiers": "", "return": "GridGeometry2D", "signature": "GridGeometry2D getRasterGridGeometry(CoordinateReferenceSystem destinationCrs,\n            CoordinateReferenceSystem sourceCRS)", "full_signature": " GridGeometry2D getRasterGridGeometry(CoordinateReferenceSystem destinationCrs,\n            CoordinateReferenceSystem sourceCRS)", "class_method_signature": "StreamingRenderer.getRasterGridGeometry(CoordinateReferenceSystem destinationCrs,\n            CoordinateReferenceSystem sourceCRS)", "testcase": false, "constructor": false}, {"identifier": "findGeometry", "parameters": "(Object drawMe,\n            Symbolizer s)", "modifiers": "private", "return": "com.vividsolutions.jts.geom.Geometry", "signature": "com.vividsolutions.jts.geom.Geometry findGeometry(Object drawMe,\n            Symbolizer s)", "full_signature": "private com.vividsolutions.jts.geom.Geometry findGeometry(Object drawMe,\n            Symbolizer s)", "class_method_signature": "StreamingRenderer.findGeometry(Object drawMe,\n            Symbolizer s)", "testcase": false, "constructor": false}, {"identifier": "findGeometryCS", "parameters": "(\n            MapLayer currLayer, Object drawMe, Symbolizer s)", "modifiers": "private", "return": "org.opengis.referencing.crs.CoordinateReferenceSystem", "signature": "org.opengis.referencing.crs.CoordinateReferenceSystem findGeometryCS(\n            MapLayer currLayer, Object drawMe, Symbolizer s)", "full_signature": "private org.opengis.referencing.crs.CoordinateReferenceSystem findGeometryCS(\n            MapLayer currLayer, Object drawMe, Symbolizer s)", "class_method_signature": "StreamingRenderer.findGeometryCS(\n            MapLayer currLayer, Object drawMe, Symbolizer s)", "testcase": false, "constructor": false}, {"identifier": "getAttributeCRS", "parameters": "(PropertyName geomName,\n            FeatureType schema)", "modifiers": "", "return": "org.opengis.referencing.crs.CoordinateReferenceSystem", "signature": "org.opengis.referencing.crs.CoordinateReferenceSystem getAttributeCRS(PropertyName geomName,\n            FeatureType schema)", "full_signature": " org.opengis.referencing.crs.CoordinateReferenceSystem getAttributeCRS(PropertyName geomName,\n            FeatureType schema)", "class_method_signature": "StreamingRenderer.getAttributeCRS(PropertyName geomName,\n            FeatureType schema)", "testcase": false, "constructor": false}, {"identifier": "isInteractive", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isInteractive()", "full_signature": "public boolean isInteractive()", "class_method_signature": "StreamingRenderer.isInteractive()", "testcase": false, "constructor": false}, {"identifier": "setInteractive", "parameters": "(boolean interactive)", "modifiers": "public", "return": "void", "signature": "void setInteractive(boolean interactive)", "full_signature": "public void setInteractive(boolean interactive)", "class_method_signature": "StreamingRenderer.setInteractive(boolean interactive)", "testcase": false, "constructor": false}, {"identifier": "getRenderingBuffer", "parameters": "()", "modifiers": "private", "return": "int", "signature": "int getRenderingBuffer()", "full_signature": "private int getRenderingBuffer()", "class_method_signature": "StreamingRenderer.getRenderingBuffer()", "testcase": false, "constructor": false}, {"identifier": "getScaleComputationMethod", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getScaleComputationMethod()", "full_signature": "private String getScaleComputationMethod()", "class_method_signature": "StreamingRenderer.getScaleComputationMethod()", "testcase": false, "constructor": false}, {"identifier": "getTextRenderingMethod", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getTextRenderingMethod()", "full_signature": "private String getTextRenderingMethod()", "class_method_signature": "StreamingRenderer.getTextRenderingMethod()", "testcase": false, "constructor": false}, {"identifier": "getGeneralizationDistance", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getGeneralizationDistance()", "full_signature": "public double getGeneralizationDistance()", "class_method_signature": "StreamingRenderer.getGeneralizationDistance()", "testcase": false, "constructor": false}, {"identifier": "setGeneralizationDistance", "parameters": "(double d)", "modifiers": "public", "return": "void", "signature": "void setGeneralizationDistance(double d)", "full_signature": "public void setGeneralizationDistance(double d)", "class_method_signature": "StreamingRenderer.setGeneralizationDistance(double d)", "testcase": false, "constructor": false}, {"identifier": "setJava2DHints", "parameters": "(RenderingHints hints)", "modifiers": "public", "return": "void", "signature": "void setJava2DHints(RenderingHints hints)", "full_signature": "public void setJava2DHints(RenderingHints hints)", "class_method_signature": "StreamingRenderer.setJava2DHints(RenderingHints hints)", "testcase": false, "constructor": false}, {"identifier": "getJava2DHints", "parameters": "()", "modifiers": "public", "return": "RenderingHints", "signature": "RenderingHints getJava2DHints()", "full_signature": "public RenderingHints getJava2DHints()", "class_method_signature": "StreamingRenderer.getJava2DHints()", "testcase": false, "constructor": false}, {"identifier": "setRendererHints", "parameters": "(Map hints)", "modifiers": "public", "return": "void", "signature": "void setRendererHints(Map hints)", "full_signature": "public void setRendererHints(Map hints)", "class_method_signature": "StreamingRenderer.setRendererHints(Map hints)", "testcase": false, "constructor": false}, {"identifier": "getRendererHints", "parameters": "()", "modifiers": "public", "return": "Map", "signature": "Map getRendererHints()", "full_signature": "public Map getRendererHints()", "class_method_signature": "StreamingRenderer.getRendererHints()", "testcase": false, "constructor": false}, {"identifier": "setContext", "parameters": "(MapContext context)", "modifiers": "public", "return": "void", "signature": "void setContext(MapContext context)", "full_signature": "public void setContext(MapContext context)", "class_method_signature": "StreamingRenderer.setContext(MapContext context)", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "()", "modifiers": "public", "return": "MapContext", "signature": "MapContext getContext()", "full_signature": "public MapContext getContext()", "class_method_signature": "StreamingRenderer.getContext()", "testcase": false, "constructor": false}, {"identifier": "setMapContent", "parameters": "(MapContent mapContent)", "modifiers": "public", "return": "void", "signature": "void setMapContent(MapContent mapContent)", "full_signature": "public void setMapContent(MapContent mapContent)", "class_method_signature": "StreamingRenderer.setMapContent(MapContent mapContent)", "testcase": false, "constructor": false}, {"identifier": "getMapContent", "parameters": "()", "modifiers": "public", "return": "MapContent", "signature": "MapContent getMapContent()", "full_signature": "public MapContent getMapContent()", "class_method_signature": "StreamingRenderer.getMapContent()", "testcase": false, "constructor": false}, {"identifier": "isCanTransform", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCanTransform()", "full_signature": "public boolean isCanTransform()", "class_method_signature": "StreamingRenderer.isCanTransform()", "testcase": false, "constructor": false}, {"identifier": "getMathTransform", "parameters": "(\n            CoordinateReferenceSystem sourceCRS,\n            CoordinateReferenceSystem destCRS)", "modifiers": "public static", "return": "MathTransform", "signature": "MathTransform getMathTransform(\n            CoordinateReferenceSystem sourceCRS,\n            CoordinateReferenceSystem destCRS)", "full_signature": "public static MathTransform getMathTransform(\n            CoordinateReferenceSystem sourceCRS,\n            CoordinateReferenceSystem destCRS)", "class_method_signature": "StreamingRenderer.getMathTransform(\n            CoordinateReferenceSystem sourceCRS,\n            CoordinateReferenceSystem destCRS)", "testcase": false, "constructor": false}, {"identifier": "getRenderingInterpolation", "parameters": "(Layer currLayer)", "modifiers": "", "return": "Interpolation", "signature": "Interpolation getRenderingInterpolation(Layer currLayer)", "full_signature": " Interpolation getRenderingInterpolation(Layer currLayer)", "class_method_signature": "StreamingRenderer.getRenderingInterpolation(Layer currLayer)", "testcase": false, "constructor": false}], "file": "modules/library/render/src/main/java/org/geotools/renderer/lite/StreamingRenderer.java"}, "focal_method": {"identifier": "getRenderingInterpolation", "parameters": "(Layer currLayer)", "modifiers": "", "return": "Interpolation", "body": "Interpolation getRenderingInterpolation(Layer currLayer) {\n        if (currLayer != null && currLayer.getUserData().containsKey(BYLAYER_INTERPOLATION)) {\n            return (Interpolation) currLayer.getUserData().get(BYLAYER_INTERPOLATION);\n        }\n        if(java2dHints == null) {\n            return Interpolation.getInstance(Interpolation.INTERP_NEAREST);\n        }\n        Object interpolationHint = java2dHints.get(RenderingHints.KEY_INTERPOLATION);\n        if (interpolationHint == null\n                || interpolationHint == RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR) {\n            return Interpolation.getInstance(Interpolation.INTERP_NEAREST);\n        } else if (interpolationHint == RenderingHints.VALUE_INTERPOLATION_BILINEAR) {\n            return Interpolation.getInstance(Interpolation.INTERP_BILINEAR);\n        } else {\n            return Interpolation.getInstance(Interpolation.INTERP_BICUBIC);\n        }\n    }", "signature": "Interpolation getRenderingInterpolation(Layer currLayer)", "full_signature": " Interpolation getRenderingInterpolation(Layer currLayer)", "class_method_signature": "StreamingRenderer.getRenderingInterpolation(Layer currLayer)", "testcase": false, "constructor": false, "invocations": ["containsKey", "getUserData", "get", "getUserData", "getInstance", "get", "getInstance", "getInstance", "getInstance"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}