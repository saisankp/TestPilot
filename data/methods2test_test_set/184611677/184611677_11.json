{"test_class": {"identifier": "DateUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "common/common-framework/src/test/java/cn/iocoder/common/framework/util/DateUtilTest.java"}, "test_case": {"identifier": "testFormat", "parameters": "()", "modifiers": "@Test @Ignore // \u6682\u65f6\u5ffd\u7565\uff0c\u6d4b\u8bd5\u4e0d\u901a\u8fc7\uff0cadd by \u828b\u827f public", "return": "void", "body": "@Test\n    @Ignore // \u6682\u65f6\u5ffd\u7565\uff0c\u6d4b\u8bd5\u4e0d\u901a\u8fc7\uff0cadd by \u828b\u827f\n    public void testFormat() {\n        Assert.assertEquals(\"\", DateUtil.format(null, null));\n        Assert.assertEquals(\"2018-01-10:12:00:00\", DateUtil.format(\n                new Date(1_515_585_600_000L), \"yyyy-MM-dd:HH:mm:ss\"));\n    }", "signature": "void testFormat()", "full_signature": "@Test @Ignore // \u6682\u65f6\u5ffd\u7565\uff0c\u6d4b\u8bd5\u4e0d\u901a\u8fc7\uff0cadd by \u828b\u827f public void testFormat()", "class_method_signature": "DateUtilTest.testFormat()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "format", "assertEquals", "format"]}, "focal_class": {"identifier": "DateUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "addDate", "parameters": "(int field, int amount)", "modifiers": "public static", "return": "Date", "signature": "Date addDate(int field, int amount)", "full_signature": "public static Date addDate(int field, int amount)", "class_method_signature": "DateUtil.addDate(int field, int amount)", "testcase": false, "constructor": false}, {"identifier": "addDate", "parameters": "(Date date, int field, int amount)", "modifiers": "public static", "return": "Date", "signature": "Date addDate(Date date, int field, int amount)", "full_signature": "public static Date addDate(Date date, int field, int amount)", "class_method_signature": "DateUtil.addDate(Date date, int field, int amount)", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "(Date date, String pattern)", "modifiers": "public static", "return": "String", "signature": "String format(Date date, String pattern)", "full_signature": "public static String format(Date date, String pattern)", "class_method_signature": "DateUtil.format(Date date, String pattern)", "testcase": false, "constructor": false}, {"identifier": "getDayBegin", "parameters": "(Date date)", "modifiers": "public static", "return": "Date", "signature": "Date getDayBegin(Date date)", "full_signature": "public static Date getDayBegin(Date date)", "class_method_signature": "DateUtil.getDayBegin(Date date)", "testcase": false, "constructor": false}, {"identifier": "getDayBegin", "parameters": "()", "modifiers": "public static", "return": "Date", "signature": "Date getDayBegin()", "full_signature": "public static Date getDayBegin()", "class_method_signature": "DateUtil.getDayBegin()", "testcase": false, "constructor": false}, {"identifier": "getDayEnd", "parameters": "(Date date)", "modifiers": "public static", "return": "Date", "signature": "Date getDayEnd(Date date)", "full_signature": "public static Date getDayEnd(Date date)", "class_method_signature": "DateUtil.getDayEnd(Date date)", "testcase": false, "constructor": false}, {"identifier": "getDayEnd", "parameters": "()", "modifiers": "public static", "return": "Date", "signature": "Date getDayEnd()", "full_signature": "public static Date getDayEnd()", "class_method_signature": "DateUtil.getDayEnd()", "testcase": false, "constructor": false}, {"identifier": "setCalender", "parameters": "(Calendar calendar, int hour, int minute, int second, int milliSecond)", "modifiers": "public static", "return": "void", "signature": "void setCalender(Calendar calendar, int hour, int minute, int second, int milliSecond)", "full_signature": "public static void setCalender(Calendar calendar, int hour, int minute, int second, int milliSecond)", "class_method_signature": "DateUtil.setCalender(Calendar calendar, int hour, int minute, int second, int milliSecond)", "testcase": false, "constructor": false}, {"identifier": "isBetween", "parameters": "(Date beginTime, Date endTime)", "modifiers": "public static", "return": "boolean", "signature": "boolean isBetween(Date beginTime, Date endTime)", "full_signature": "public static boolean isBetween(Date beginTime, Date endTime)", "class_method_signature": "DateUtil.isBetween(Date beginTime, Date endTime)", "testcase": false, "constructor": false}, {"identifier": "max", "parameters": "(Date a, Date b)", "modifiers": "public static", "return": "Date", "signature": "Date max(Date a, Date b)", "full_signature": "public static Date max(Date a, Date b)", "class_method_signature": "DateUtil.max(Date a, Date b)", "testcase": false, "constructor": false}], "file": "common/common-framework/src/main/java/cn/iocoder/common/framework/util/DateUtil.java"}, "focal_method": {"identifier": "format", "parameters": "(Date date, String pattern)", "modifiers": "public static", "return": "String", "body": "public static String format(Date date, String pattern) {\n        if (date == null) {\n            return \"\";\n        }\n        // TODO \u828b\u827f\uff0c\u540e\u9762\u6539\u6210\u7f13\u5b58\n        return new SimpleDateFormat(pattern).format(date);\n    }", "signature": "String format(Date date, String pattern)", "full_signature": "public static String format(Date date, String pattern)", "class_method_signature": "DateUtil.format(Date date, String pattern)", "testcase": false, "constructor": false, "invocations": ["format"]}, "repository": {"repo_id": 184611677, "url": "https://github.com/YunaiV/onemall", "language": "Java", "is_fork": false, "fork_count": 1162, "stargazer_count": 2893, "size": 7986, "license": "licensed"}}