{"test_class": {"identifier": "PodServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Spy\n    @InjectMocks\n    private PodService spy;", "modifier": "@Spy\n    @InjectMocks\n    private", "type": "PodService", "declarator": "spy", "var_name": "spy"}, {"original_string": "@Mock\n    private HostPodDao hostPodDao;", "modifier": "@Mock\n    private", "type": "HostPodDao", "declarator": "hostPodDao", "var_name": "hostPodDao"}, {"original_string": "@Mock\n    private HostJdbcDao hostJdbcDao;", "modifier": "@Mock\n    private", "type": "HostJdbcDao", "declarator": "hostJdbcDao", "var_name": "hostJdbcDao"}], "file": "autonomic-plugin-common/src/test/java/br/com/autonomiccs/autonomic/plugin/common/services/PodServiceTest.java"}, "test_case": {"identifier": "getAllPodsEnabledFromZoneTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getAllPodsEnabledFromZoneTest() {\n        List<HostPodVO> hosts = new ArrayList<>();\n        Mockito.doReturn(hosts).when(hostPodDao).listByDataCenterId(Mockito.anyLong());\n\n        List<HostPodVO> result = spy.getAllPodsEnabledFromZone(0l);\n\n        Mockito.verify(hostPodDao).listByDataCenterId(Mockito.anyLong());\n        Assert.assertEquals(hosts, result);\n    }", "signature": "void getAllPodsEnabledFromZoneTest()", "full_signature": "@Test public void getAllPodsEnabledFromZoneTest()", "class_method_signature": "PodServiceTest.getAllPodsEnabledFromZoneTest()", "testcase": true, "constructor": false, "invocations": ["listByDataCenterId", "when", "doReturn", "anyLong", "getAllPodsEnabledFromZone", "listByDataCenterId", "verify", "anyLong", "assertEquals"]}, "focal_class": {"identifier": "PodService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private HostPodDao hostPodDao;", "modifier": "@Autowired\n    private", "type": "HostPodDao", "declarator": "hostPodDao", "var_name": "hostPodDao"}, {"original_string": "@Autowired\n    private HostJdbcDao hostJdbcDao;", "modifier": "@Autowired\n    private", "type": "HostJdbcDao", "declarator": "hostJdbcDao", "var_name": "hostJdbcDao"}], "methods": [{"identifier": "getAllPodsEnabledFromZone", "parameters": "(long zoneId)", "modifiers": "public", "return": "List<HostPodVO>", "signature": "List<HostPodVO> getAllPodsEnabledFromZone(long zoneId)", "full_signature": "public List<HostPodVO> getAllPodsEnabledFromZone(long zoneId)", "class_method_signature": "PodService.getAllPodsEnabledFromZone(long zoneId)", "testcase": false, "constructor": false}, {"identifier": "findPodById", "parameters": "(Long podId)", "modifiers": "public", "return": "HostPodVO", "signature": "HostPodVO findPodById(Long podId)", "full_signature": "public HostPodVO findPodById(Long podId)", "class_method_signature": "PodService.findPodById(Long podId)", "testcase": false, "constructor": false}, {"identifier": "isThereAnyHostOnPodDeactivatedByOurManager", "parameters": "(long id)", "modifiers": "public", "return": "boolean", "signature": "boolean isThereAnyHostOnPodDeactivatedByOurManager(long id)", "full_signature": "public boolean isThereAnyHostOnPodDeactivatedByOurManager(long id)", "class_method_signature": "PodService.isThereAnyHostOnPodDeactivatedByOurManager(long id)", "testcase": false, "constructor": false}], "file": "autonomic-plugin-common/src/main/java/br/com/autonomiccs/autonomic/plugin/common/services/PodService.java"}, "focal_method": {"identifier": "getAllPodsEnabledFromZone", "parameters": "(long zoneId)", "modifiers": "public", "return": "List<HostPodVO>", "body": "public List<HostPodVO> getAllPodsEnabledFromZone(long zoneId) {\n        return hostPodDao.listByDataCenterId(zoneId);\n    }", "signature": "List<HostPodVO> getAllPodsEnabledFromZone(long zoneId)", "full_signature": "public List<HostPodVO> getAllPodsEnabledFromZone(long zoneId)", "class_method_signature": "PodService.getAllPodsEnabledFromZone(long zoneId)", "testcase": false, "constructor": false, "invocations": ["listByDataCenterId"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}