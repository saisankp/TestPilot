{"test_class": {"identifier": "RandomProviderTest", "superclass": "", "interfaces": "", "fields": [], "file": "commonprovider/src/test/java/ec/tss/tsproviders/common/random/RandomProviderTest.java"}, "test_case": {"identifier": "testCompliance", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCompliance() {\n        IDataSourceLoaderAssert.assertCompliance(RandomProvider::new, o -> o.newBean());\n    }", "signature": "void testCompliance()", "full_signature": "@Test public void testCompliance()", "class_method_signature": "RandomProviderTest.testCompliance()", "testcase": true, "constructor": false, "invocations": ["assertCompliance", "newBean"]}, "focal_class": {"identifier": "RandomProvider", "superclass": "extends AbstractDataSourceLoader<double[][], RandomBean>", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(RandomProvider.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(RandomProvider.class)", "var_name": "LOGGER"}, {"original_string": "public static final String SOURCE = \"RND\";", "modifier": "public static final", "type": "String", "declarator": "SOURCE = \"RND\"", "var_name": "SOURCE"}, {"original_string": "public static final String VERSION = \"20121021\";", "modifier": "public static final", "type": "String", "declarator": "VERSION = \"20121021\"", "var_name": "VERSION"}, {"original_string": "static final IParam<DataSet, Integer> Z_INDEX = Params.onInteger(0, \"index\");", "modifier": "static final", "type": "IParam<DataSet, Integer>", "declarator": "Z_INDEX = Params.onInteger(0, \"index\")", "var_name": "Z_INDEX"}], "methods": [{"identifier": "RandomProvider", "parameters": "()", "modifiers": "public", "return": "", "signature": " RandomProvider()", "full_signature": "public  RandomProvider()", "class_method_signature": "RandomProvider.RandomProvider()", "testcase": false, "constructor": true}, {"identifier": "loadFromBean", "parameters": "(RandomBean bean)", "modifiers": "@Override protected", "return": "double[][]", "signature": "double[][] loadFromBean(RandomBean bean)", "full_signature": "@Override protected double[][] loadFromBean(RandomBean bean)", "class_method_signature": "RandomProvider.loadFromBean(RandomBean bean)", "testcase": false, "constructor": false}, {"identifier": "getDisplayName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDisplayName()", "full_signature": "@Override public String getDisplayName()", "class_method_signature": "RandomProvider.getDisplayName()", "testcase": false, "constructor": false}, {"identifier": "children", "parameters": "(DataSource dataSource)", "modifiers": "@Override public", "return": "List<DataSet>", "signature": "List<DataSet> children(DataSource dataSource)", "full_signature": "@Override public List<DataSet> children(DataSource dataSource)", "class_method_signature": "RandomProvider.children(DataSource dataSource)", "testcase": false, "constructor": false}, {"identifier": "children", "parameters": "(DataSet parent)", "modifiers": "@Override public", "return": "List<DataSet>", "signature": "List<DataSet> children(DataSet parent)", "full_signature": "@Override public List<DataSet> children(DataSet parent)", "class_method_signature": "RandomProvider.children(DataSet parent)", "testcase": false, "constructor": false}, {"identifier": "getDisplayName", "parameters": "(DataSource dataSource)", "modifiers": "@Override public", "return": "String", "signature": "String getDisplayName(DataSource dataSource)", "full_signature": "@Override public String getDisplayName(DataSource dataSource)", "class_method_signature": "RandomProvider.getDisplayName(DataSource dataSource)", "testcase": false, "constructor": false}, {"identifier": "getDisplayName", "parameters": "(DataSet dataSet)", "modifiers": "@Override public", "return": "String", "signature": "String getDisplayName(DataSet dataSet)", "full_signature": "@Override public String getDisplayName(DataSet dataSet)", "class_method_signature": "RandomProvider.getDisplayName(DataSet dataSet)", "testcase": false, "constructor": false}, {"identifier": "getDisplayNodeName", "parameters": "(DataSet dataSet)", "modifiers": "@Override public", "return": "String", "signature": "String getDisplayNodeName(DataSet dataSet)", "full_signature": "@Override public String getDisplayNodeName(DataSet dataSet)", "class_method_signature": "RandomProvider.getDisplayNodeName(DataSet dataSet)", "testcase": false, "constructor": false}, {"identifier": "fillCollection", "parameters": "(TsCollectionInformation info, DataSource dataSource)", "modifiers": "@Override protected", "return": "void", "signature": "void fillCollection(TsCollectionInformation info, DataSource dataSource)", "full_signature": "@Override protected void fillCollection(TsCollectionInformation info, DataSource dataSource)", "class_method_signature": "RandomProvider.fillCollection(TsCollectionInformation info, DataSource dataSource)", "testcase": false, "constructor": false}, {"identifier": "fillCollection", "parameters": "(TsCollectionInformation info, DataSet dataSet)", "modifiers": "@Override protected", "return": "void", "signature": "void fillCollection(TsCollectionInformation info, DataSet dataSet)", "full_signature": "@Override protected void fillCollection(TsCollectionInformation info, DataSet dataSet)", "class_method_signature": "RandomProvider.fillCollection(TsCollectionInformation info, DataSet dataSet)", "testcase": false, "constructor": false}, {"identifier": "fillSeries", "parameters": "(TsInformation info, DataSet dataSet)", "modifiers": "@Override protected", "return": "void", "signature": "void fillSeries(TsInformation info, DataSet dataSet)", "full_signature": "@Override protected void fillSeries(TsInformation info, DataSet dataSet)", "class_method_signature": "RandomProvider.fillSeries(TsInformation info, DataSet dataSet)", "testcase": false, "constructor": false}, {"identifier": "newBean", "parameters": "()", "modifiers": "@Override public", "return": "RandomBean", "signature": "RandomBean newBean()", "full_signature": "@Override public RandomBean newBean()", "class_method_signature": "RandomProvider.newBean()", "testcase": false, "constructor": false}, {"identifier": "encodeBean", "parameters": "(Object bean)", "modifiers": "@Override public", "return": "DataSource", "signature": "DataSource encodeBean(Object bean)", "full_signature": "@Override public DataSource encodeBean(Object bean)", "class_method_signature": "RandomProvider.encodeBean(Object bean)", "testcase": false, "constructor": false}, {"identifier": "decodeBean", "parameters": "(DataSource dataSource)", "modifiers": "@Override public", "return": "RandomBean", "signature": "RandomBean decodeBean(DataSource dataSource)", "full_signature": "@Override public RandomBean decodeBean(DataSource dataSource)", "class_method_signature": "RandomProvider.decodeBean(DataSource dataSource)", "testcase": false, "constructor": false}], "file": "commonprovider/src/main/java/ec/tss/tsproviders/common/random/RandomProvider.java"}, "focal_method": {"identifier": "newBean", "parameters": "()", "modifiers": "@Override public", "return": "RandomBean", "body": "@Override\n    public RandomBean newBean() {\n        return new RandomBean();\n    }", "signature": "RandomBean newBean()", "full_signature": "@Override public RandomBean newBean()", "class_method_signature": "RandomProvider.newBean()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}