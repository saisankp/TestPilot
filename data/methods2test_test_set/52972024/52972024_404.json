{"test_class": {"identifier": "EntryImplTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [{"original_string": "private ISchedulingStrategy strategy;", "modifier": "private", "type": "ISchedulingStrategy", "declarator": "strategy", "var_name": "strategy"}, {"original_string": "private EntryStorage storage;", "modifier": "private", "type": "EntryStorage", "declarator": "storage", "var_name": "storage"}, {"original_string": "private ITimer timer;", "modifier": "private", "type": "ITimer", "declarator": "timer", "var_name": "timer"}, {"original_string": "private ITimerTask timerTask;", "modifier": "private", "type": "ITimerTask", "declarator": "timerTask", "var_name": "timerTask"}, {"original_string": "private ITimerTask timerTask2;", "modifier": "private", "type": "ITimerTask", "declarator": "timerTask2", "var_name": "timerTask2"}, {"original_string": "private ISchedulerAction action;", "modifier": "private", "type": "ISchedulerAction", "declarator": "action", "var_name": "action"}, {"original_string": "private ISchedulerEntryFilter filter;", "modifier": "private", "type": "ISchedulerEntryFilter", "declarator": "filter", "var_name": "filter"}], "file": "CoreFeatures/Scheduler/SchedulerActor/src/test/java/info/smart_tools/smartactors/scheduler/actor/impl/EntryImplTest.java"}, "test_case": {"identifier": "Should_saveItself", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_saveItself()\n            throws Exception {\n        IObject state = IOC.resolve(Keys.getOrAdd(\"info.smart_tools.smartactors.iobject.iobject.IObject\"),\n                \"{'entryId':'trust-methis-isa-guid'}\".replace('\\'','\"'));\n\n        ISchedulerEntry entry = new EntryImpl(state, strategy, storage, action, false);\n\n        entry.save();\n\n        verify(storage).save(same(entry));\n    }", "signature": "void Should_saveItself()", "full_signature": "@Test public void Should_saveItself()", "class_method_signature": "EntryImplTest.Should_saveItself()", "testcase": true, "constructor": false, "invocations": ["resolve", "getOrAdd", "replace", "save", "save", "verify", "same"]}, "focal_class": {"identifier": "EntryImpl", "superclass": "", "interfaces": "implements ISchedulerEntry", "fields": [{"original_string": "private static final String DEFAULT_ACTION_KEY_NAME = \"default scheduler action\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_ACTION_KEY_NAME = \"default scheduler action\"", "var_name": "DEFAULT_ACTION_KEY_NAME"}, {"original_string": "private final ISchedulerEntryStorage storage;", "modifier": "private final", "type": "ISchedulerEntryStorage", "declarator": "storage", "var_name": "storage"}, {"original_string": "private final IObject state;", "modifier": "private final", "type": "IObject", "declarator": "state", "var_name": "state"}, {"original_string": "private final String id;", "modifier": "private final", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "private final ISchedulingStrategy strategy;", "modifier": "private final", "type": "ISchedulingStrategy", "declarator": "strategy", "var_name": "strategy"}, {"original_string": "private volatile long lastScheduledTime;", "modifier": "private volatile", "type": "long", "declarator": "lastScheduledTime", "var_name": "lastScheduledTime"}, {"original_string": "private final AtomicReference<ITimerTask> timerTask;", "modifier": "private final", "type": "AtomicReference<ITimerTask>", "declarator": "timerTask", "var_name": "timerTask"}, {"original_string": "private boolean isPaused;", "modifier": "private", "type": "boolean", "declarator": "isPaused", "var_name": "isPaused"}, {"original_string": "private boolean isCancelled;", "modifier": "private", "type": "boolean", "declarator": "isCancelled", "var_name": "isCancelled"}, {"original_string": "private boolean isSavedRemotely;", "modifier": "private", "type": "boolean", "declarator": "isSavedRemotely", "var_name": "isSavedRemotely"}, {"original_string": "private final ISchedulerAction action;", "modifier": "private final", "type": "ISchedulerAction", "declarator": "action", "var_name": "action"}, {"original_string": "private final ITask task = this::executeTask;", "modifier": "private final", "type": "ITask", "declarator": "task = this::executeTask", "var_name": "task"}, {"original_string": "private static final Object SHARED_LOCK = new Object();", "modifier": "private static final", "type": "Object", "declarator": "SHARED_LOCK = new Object()", "var_name": "SHARED_LOCK"}, {"original_string": "private final QuickLock entryLock = new QuickLock(SHARED_LOCK);", "modifier": "private final", "type": "QuickLock", "declarator": "entryLock = new QuickLock(SHARED_LOCK)", "var_name": "entryLock"}], "methods": [{"identifier": "EntryImpl", "parameters": "(\n            final IObject state,\n            final ISchedulingStrategy strategy,\n            final ISchedulerEntryStorage storage,\n            final ISchedulerAction action,\n            final boolean isSavedRemotely)", "modifiers": "", "return": "", "signature": " EntryImpl(\n            final IObject state,\n            final ISchedulingStrategy strategy,\n            final ISchedulerEntryStorage storage,\n            final ISchedulerAction action,\n            final boolean isSavedRemotely)", "full_signature": "  EntryImpl(\n            final IObject state,\n            final ISchedulingStrategy strategy,\n            final ISchedulerEntryStorage storage,\n            final ISchedulerAction action,\n            final boolean isSavedRemotely)", "class_method_signature": "EntryImpl.EntryImpl(\n            final IObject state,\n            final ISchedulingStrategy strategy,\n            final ISchedulerEntryStorage storage,\n            final ISchedulerAction action,\n            final boolean isSavedRemotely)", "testcase": false, "constructor": true}, {"identifier": "newEntry", "parameters": "(final IObject args, final ISchedulerEntryStorage storage)", "modifiers": "public static", "return": "EntryImpl", "signature": "EntryImpl newEntry(final IObject args, final ISchedulerEntryStorage storage)", "full_signature": "public static EntryImpl newEntry(final IObject args, final ISchedulerEntryStorage storage)", "class_method_signature": "EntryImpl.newEntry(final IObject args, final ISchedulerEntryStorage storage)", "testcase": false, "constructor": false}, {"identifier": "restoreEntry", "parameters": "(final IObject savedState, final ISchedulerEntryStorage storage)", "modifiers": "public static", "return": "EntryImpl", "signature": "EntryImpl restoreEntry(final IObject savedState, final ISchedulerEntryStorage storage)", "full_signature": "public static EntryImpl restoreEntry(final IObject savedState, final ISchedulerEntryStorage storage)", "class_method_signature": "EntryImpl.restoreEntry(final IObject savedState, final ISchedulerEntryStorage storage)", "testcase": false, "constructor": false}, {"identifier": "executeTask", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void executeTask()", "full_signature": "private void executeTask()", "class_method_signature": "EntryImpl.executeTask()", "testcase": false, "constructor": false}, {"identifier": "processTask", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void processTask()", "full_signature": "private void processTask()", "class_method_signature": "EntryImpl.processTask()", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "()", "modifiers": "@Override public", "return": "IObject", "signature": "IObject getState()", "full_signature": "@Override public IObject getState()", "class_method_signature": "EntryImpl.getState()", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void save()", "full_signature": "@Override public void save()", "class_method_signature": "EntryImpl.save()", "testcase": false, "constructor": false}, {"identifier": "cancel", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void cancel()", "full_signature": "@Override public void cancel()", "class_method_signature": "EntryImpl.cancel()", "testcase": false, "constructor": false}, {"identifier": "scheduleNext", "parameters": "(final long time)", "modifiers": "@Override public", "return": "void", "signature": "void scheduleNext(final long time)", "full_signature": "@Override public void scheduleNext(final long time)", "class_method_signature": "EntryImpl.scheduleNext(final long time)", "testcase": false, "constructor": false}, {"identifier": "getLastTime", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getLastTime()", "full_signature": "@Override public long getLastTime()", "class_method_signature": "EntryImpl.getLastTime()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "EntryImpl.getId()", "testcase": false, "constructor": false}, {"identifier": "suspend", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void suspend()", "full_signature": "@Override public void suspend()", "class_method_signature": "EntryImpl.suspend()", "testcase": false, "constructor": false}, {"identifier": "awake", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void awake()", "full_signature": "@Override public void awake()", "class_method_signature": "EntryImpl.awake()", "testcase": false, "constructor": false}, {"identifier": "isAwake", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAwake()", "full_signature": "@Override public boolean isAwake()", "class_method_signature": "EntryImpl.isAwake()", "testcase": false, "constructor": false}, {"identifier": "pause", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void pause()", "full_signature": "@Override public void pause()", "class_method_signature": "EntryImpl.pause()", "testcase": false, "constructor": false}, {"identifier": "unpause", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void unpause()", "full_signature": "@Override public void unpause()", "class_method_signature": "EntryImpl.unpause()", "testcase": false, "constructor": false}], "file": "CoreFeatures/Scheduler/SchedulerActor/src/main/java/info/smart_tools/smartactors/scheduler/actor/impl/EntryImpl.java"}, "focal_method": {"identifier": "save", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void save() throws EntryStorageAccessException {\n        storage.save(this);\n        this.isSavedRemotely = true;\n    }", "signature": "void save()", "full_signature": "@Override public void save()", "class_method_signature": "EntryImpl.save()", "testcase": false, "constructor": false, "invocations": ["save"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}