{"test_class": {"identifier": "BakeryPart1Test", "superclass": "", "interfaces": "", "fields": [], "file": "Projects/Project_09/BakeryPart1Test.java"}, "test_case": {"identifier": "mainTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void mainTest() {\n      BakeryPart1 bp1 = new BakeryPart1();\n      BakedItem.resetCount();\n      BakeryPart1.main(null);\n      Assert.assertEquals(\"\", 7, BakedItem.getCount());\n   }", "signature": "void mainTest()", "full_signature": "@Test public void mainTest()", "class_method_signature": "BakeryPart1Test.mainTest()", "testcase": true, "constructor": false, "invocations": ["resetCount", "main", "assertEquals", "getCount"]}, "focal_class": {"identifier": "BakeryPart1", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "BakeryPart1.main(String[] args)", "testcase": false, "constructor": false}], "file": "Projects/Project_09/BakeryPart1.java"}, "focal_method": {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "body": "public static void main(String[] args) {\n      // BakedItem class\n\n      // Cookie class\n      Cookie c = new Cookie(\"Chips Delight\", \"Chocolate Chip\", 12,\n            \"flour\", \"sugar\", \"dark chocolate chips\",\n            \"butter\", \"baking soda\", \"salt\");\n            \n      System.out.println(\"Cookie\");\n      System.out.println(c.toString());\n      System.out.println(\"\\tc cost: \" + c.price() + \"\\n\");\n      \n      Cookie cITest = new Cookie(\"Chips Delight\", \"Chocolate Chip\", 12,\n            \"flour\", \"sugar\", \"dark chocolate chips\",\n            \"butter\", \"baking soda\", \"salt\", \"flour\", \"sugar\", \n            \"dark chocolate chips\", \"butter\", \"baking soda\", \"salt\");\n      System.out.println(cITest.toString());\n\n      // Pie class\n      Pie p1 = new Pie(\"Weekly Special\", \"Apple\", 1, 0,\n            \"flour\", \"sugar\", \"apples\", \"cinnamon\",\n            \"butter\", \"baking soda\", \"salt\");\n      Pie p2 = new Pie(\"Summer Special\", \"Key Lime\", 1, 2.0,\n            \"flour\", \"sugar\", \"lime juice\", \"lemon juice\",\n            \"graham crackers\", \"butter\", \"baking soda\", \"salt\");\n            \n      System.out.println(\"Pie\");\n      System.out.println(p1.toString());\n      System.out.println(\"\\tp1 price: $\" + p1.price());\n      System.out.print(\"\\tp1 crust cost: \" + p1.getCrustCost() + \" --> \");\n      p1.setCrustCost(3);\n      System.out.println(p1.getCrustCost());\n      System.out.println(\"\\tp1 price: $\" + p1.price() + \"\\n\");\n      System.out.println(p2.toString());\n      System.out.println(\"\\tp2 price: $\" + p2.price());\n      System.out.print(\"\\tp2 crust cost: \" + p2.getCrustCost() + \" --> \");\n      p2.setCrustCost(1);\n      System.out.println(p2.getCrustCost());\n      System.out.println(\"\\tp2 price: $\" + p2.price() + \"\\n\");\n      \n      // Cake class\n      Cake c1 = new Cake(\"Birthday\", \"Chocolate\", 1, 1,\n            \"flour\", \"sugar\", \"cocoa powder\", \"vanilla\", \"eggs\",\n            \"butter\", \"baking soda\", \"baking powder\", \"salt\");\n      Cake c2 = new Cake(\"2-Layer\", \"Red Velvet\", 1, 2,\n            \"flour\", \"sugar\", \"cocoa powder\", \"food coloring\",\n            \"eggs\", \"butter\", \"baking soda\", \"baking powder\",\n            \"salt\");\n            \n      System.out.println(\"Cake\");\n      System.out.println(c1.toString());\n      System.out.println(\"\\tc1 price: $\" + c1.price());\n      System.out.print(\"\\tc1 layers: \" + c1.getLayers() + \" --> \");\n      c1.setLayers(3);\n      System.out.println(c1.getLayers());\n      System.out.println(\"\\tc1 price: $\" + c1.price() + \"\\n\");\n      System.out.println(c2.toString());\n      System.out.println(\"\\tc2 price: $\" + c2.price());\n      System.out.print(\"\\tc2 layers: \" + c2.getLayers() + \" --> \");\n      c2.setLayers(6);\n      System.out.println(c2.getLayers());\n      System.out.println(\"\\tc2 price: $\" + c2.price() + \"\\n\");\n      \n      // WeddingCake class\n      WeddingCake c3 = new WeddingCake(\"3-Layer/3-Tier\", \"Vanilla\", 1, 3, 3,\n            \"flour\", \"sugar\", \"buttermilk\", \"coffee\",\n            \"eggs\", \"butter\", \"baking soda\", \"baking powder\",\n            \"salt\");\n            \n      System.out.println(\"Wedding Cake\");\n      System.out.println(c3.toString());\n      System.out.println(\"\\tc3 price: $\" + c3.price());\n      System.out.print(\"\\tc3 Tiers: \" + c3.getTiers() + \" --> \");\n      c3.setTiers(1);\n      System.out.println(c3.getTiers());\n      System.out.println(\"\\tc3 price: $\" + c3.price());\n   }", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "BakeryPart1.main(String[] args)", "testcase": false, "constructor": false, "invocations": ["println", "println", "toString", "println", "price", "println", "toString", "println", "println", "toString", "println", "price", "print", "getCrustCost", "setCrustCost", "println", "getCrustCost", "println", "price", "println", "toString", "println", "price", "print", "getCrustCost", "setCrustCost", "println", "getCrustCost", "println", "price", "println", "println", "toString", "println", "price", "print", "getLayers", "setLayers", "println", "getLayers", "println", "price", "println", "toString", "println", "price", "print", "getLayers", "setLayers", "println", "getLayers", "println", "price", "println", "println", "toString", "println", "price", "print", "getTiers", "setTiers", "println", "getTiers", "println", "price"]}, "repository": {"repo_id": 79497496, "url": "https://github.com/perryBunn/COMP1210", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 6, "size": 15825, "license": "MIT License"}}