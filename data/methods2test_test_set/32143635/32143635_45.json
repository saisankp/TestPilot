{"test_class": {"identifier": "StringTypeConverterTest", "superclass": "extends RococoaTestCase", "interfaces": "", "fields": [{"original_string": "private static Class<? extends Number> primitiveTypeOfID = \n        (Class<? extends Number>) new NativeLong().nativeType();", "modifier": "private static", "type": "Class<? extends Number>", "declarator": "primitiveTypeOfID = \n        (Class<? extends Number>) new NativeLong().nativeType()", "var_name": "primitiveTypeOfID"}, {"original_string": "private StringTypeConverter converter = new StringTypeConverter();", "modifier": "private", "type": "StringTypeConverter", "declarator": "converter = new StringTypeConverter()", "var_name": "converter"}], "file": "rococoa/rococoa-core/src/test/java/org/rococoa/internal/StringTypeConverterTest.java"}, "test_case": {"identifier": "convertsNullAsArgumentToNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void convertsNullAsArgumentToNull() {\n        // Not entirely sure about this, maybe 0 would be better than null, \n        // but JNA seems to interpret it properly\n        assertEquals(null, converter.toNative(null, null));\n    }", "signature": "void convertsNullAsArgumentToNull()", "full_signature": "@Test public void convertsNullAsArgumentToNull()", "class_method_signature": "StringTypeConverterTest.convertsNullAsArgumentToNull()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toNative"]}, "focal_class": {"identifier": "StringTypeConverter", "superclass": "", "interfaces": "implements TypeConverter", "fields": [{"original_string": "private static final NativeMapped nativeLongConverter = new ID();", "modifier": "private static final", "type": "NativeMapped", "declarator": "nativeLongConverter = new ID()", "var_name": "nativeLongConverter"}], "methods": [{"identifier": "nativeType", "parameters": "()", "modifiers": "public", "return": "Class<?>", "signature": "Class<?> nativeType()", "full_signature": "public Class<?> nativeType()", "class_method_signature": "StringTypeConverter.nativeType()", "testcase": false, "constructor": false}, {"identifier": "fromNative", "parameters": "(Object nativeValue, FromNativeContext context)", "modifiers": "public", "return": "String", "signature": "String fromNative(Object nativeValue, FromNativeContext context)", "full_signature": "public String fromNative(Object nativeValue, FromNativeContext context)", "class_method_signature": "StringTypeConverter.fromNative(Object nativeValue, FromNativeContext context)", "testcase": false, "constructor": false}, {"identifier": "toNative", "parameters": "(Object value, ToNativeContext context)", "modifiers": "public", "return": "Object", "signature": "Object toNative(Object value, ToNativeContext context)", "full_signature": "public Object toNative(Object value, ToNativeContext context)", "class_method_signature": "StringTypeConverter.toNative(Object value, ToNativeContext context)", "testcase": false, "constructor": false}], "file": "rococoa/rococoa-core/src/main/java/org/rococoa/internal/StringTypeConverter.java"}, "focal_method": {"identifier": "toNative", "parameters": "(Object value, ToNativeContext context)", "modifiers": "public", "return": "Object", "body": "public Object toNative(Object value, ToNativeContext context) {\n        if (value == null) {\n            return null;\n        }\n        String valueAsString = (String) value;\n        ID valueAsID = Foundation.cfString(valueAsString);\n        Foundation.sendReturnsID(valueAsID, \"autorelease\");\n        return valueAsID.toNative();\n    }", "signature": "Object toNative(Object value, ToNativeContext context)", "full_signature": "public Object toNative(Object value, ToNativeContext context)", "class_method_signature": "StringTypeConverter.toNative(Object value, ToNativeContext context)", "testcase": false, "constructor": false, "invocations": ["cfString", "sendReturnsID", "toNative"]}, "repository": {"repo_id": 32143635, "url": "https://github.com/iterate-ch/rococoa", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 17, "size": 2377, "license": "licensed"}}