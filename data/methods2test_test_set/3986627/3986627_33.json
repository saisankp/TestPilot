{"test_class": {"identifier": "EObjectNameComparatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EObjectNameComparator<ResourceFolder> fixture;", "modifier": "private", "type": "EObjectNameComparator<ResourceFolder>", "declarator": "fixture", "var_name": "fixture"}, {"original_string": "private ResourceFolder folder1;", "modifier": "private", "type": "ResourceFolder", "declarator": "folder1", "var_name": "folder1"}, {"original_string": "private ResourceFolder folder2;", "modifier": "private", "type": "ResourceFolder", "declarator": "folder2", "var_name": "folder2"}], "file": "org.jabylon.properties/src/test/java/org/jabylon/properties/util/EObjectNameComparatorTest.java"}, "test_case": {"identifier": "testCompare", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCompare() {\n\t\tfolder1.setName(\"a\");\n\t\tfolder2.setName(\"b\");\n\t\tassertEquals(-1, fixture.compare(folder1, folder2));\n\t\t\n\t\tfolder1.setName(\"a\");\n\t\tfolder2.setName(\"B\");\n\t\tassertEquals(-1, fixture.compare(folder1, folder2));\n\t\t\n\t\tfolder1.setName(\"A\");\n\t\tfolder2.setName(\"b\");\n\t\tassertEquals(-1, fixture.compare(folder1, folder2));\n\t\t\n\t\tfolder1.setName(\"A\");\n\t\tfolder2.setName(\"B\");\n\t\tassertEquals(-1, fixture.compare(folder1, folder2));\n\t}", "signature": "void testCompare()", "full_signature": "@Test public void testCompare()", "class_method_signature": "EObjectNameComparatorTest.testCompare()", "testcase": true, "constructor": false, "invocations": ["setName", "setName", "assertEquals", "compare", "setName", "setName", "assertEquals", "compare", "setName", "setName", "assertEquals", "compare", "setName", "setName", "assertEquals", "compare"]}, "focal_class": {"identifier": "EObjectNameComparator", "superclass": "", "interfaces": "implements Comparator<T>, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 1406111587217218206L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1406111587217218206L", "var_name": "serialVersionUID"}, {"original_string": "private static final Collator COLLATOR = Collator.getInstance(Locale.ENGLISH);", "modifier": "private static final", "type": "Collator", "declarator": "COLLATOR = Collator.getInstance(Locale.ENGLISH)", "var_name": "COLLATOR"}, {"original_string": "private String featureName;", "modifier": "private", "type": "String", "declarator": "featureName", "var_name": "featureName"}], "methods": [{"identifier": "EObjectNameComparator", "parameters": "()", "modifiers": "public", "return": "", "signature": " EObjectNameComparator()", "full_signature": "public  EObjectNameComparator()", "class_method_signature": "EObjectNameComparator.EObjectNameComparator()", "testcase": false, "constructor": true}, {"identifier": "EObjectNameComparator", "parameters": "(String featureName)", "modifiers": "public", "return": "", "signature": " EObjectNameComparator(String featureName)", "full_signature": "public  EObjectNameComparator(String featureName)", "class_method_signature": "EObjectNameComparator.EObjectNameComparator(String featureName)", "testcase": false, "constructor": true}, {"identifier": "compare", "parameters": "(T arg0, T arg1)", "modifiers": "@Override public", "return": "int", "signature": "int compare(T arg0, T arg1)", "full_signature": "@Override public int compare(T arg0, T arg1)", "class_method_signature": "EObjectNameComparator.compare(T arg0, T arg1)", "testcase": false, "constructor": false}], "file": "org.jabylon.properties/src/main/java/org/jabylon/properties/util/EObjectNameComparator.java"}, "focal_method": {"identifier": "compare", "parameters": "(T arg0, T arg1)", "modifiers": "@Override public", "return": "int", "body": "@Override\n\tpublic int compare(T arg0, T arg1) {\n\t\tif(arg0==null)\n\t\t\treturn 1;\n\t\tEStructuralFeature feature1 = arg0.eClass().getEStructuralFeature(featureName);\n\t\tString n1 = (String) (feature1 != null ? arg0.eGet(feature1) : arg0.toString());\n\t\tEStructuralFeature feature2 = arg0.eClass().getEStructuralFeature(featureName);\n\t\tString n2 = (String) (feature2 != null ? arg1.eGet(feature2) : arg1.toString());\n\t\tif(n1==null && n2==null)\n\t\t\treturn 0;\n\t\tif(n1==null)\n\t\t\treturn 1;\n\t\tif(n2==null)\n\t\t\treturn -1;\n\t\treturn COLLATOR.compare(n1, n2);\n\t}", "signature": "int compare(T arg0, T arg1)", "full_signature": "@Override public int compare(T arg0, T arg1)", "class_method_signature": "EObjectNameComparator.compare(T arg0, T arg1)", "testcase": false, "constructor": false, "invocations": ["getEStructuralFeature", "eClass", "eGet", "toString", "getEStructuralFeature", "eClass", "eGet", "toString", "compare"]}, "repository": {"repo_id": 3986627, "url": "https://github.com/jutzig/jabylon", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 51, "size": 13400, "license": "licensed"}}