{"test_class": {"identifier": "ParameterToolTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic TemporaryFolder tmp = new TemporaryFolder();", "modifier": "@Rule\n\tpublic", "type": "TemporaryFolder", "declarator": "tmp = new TemporaryFolder()", "var_name": "tmp"}], "file": "flink-java/src/test/java/org/apache/flink/api/java/utils/ParameterToolTest.java"}, "test_case": {"identifier": "testFromPropertiesFile", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testFromPropertiesFile() throws IOException {\n\t\tFile propertiesFile = tmp.newFile();\n\t\tProperties props = new Properties();\n\t\tprops.setProperty(\"input\", \"myInput\");\n\t\tprops.setProperty(\"expectedCount\", \"15\");\n\t\tprops.store(new FileOutputStream(propertiesFile), \"Test properties\");\n\t\tParameterTool parameter = ParameterTool.fromPropertiesFile(propertiesFile.getAbsolutePath());\n\t\tAssert.assertEquals(2, parameter.getNumberOfParameters());\n\t\tvalidate(parameter);\n\t}", "signature": "void testFromPropertiesFile()", "full_signature": "@Test public void testFromPropertiesFile()", "class_method_signature": "ParameterToolTest.testFromPropertiesFile()", "testcase": true, "constructor": false, "invocations": ["newFile", "setProperty", "setProperty", "store", "fromPropertiesFile", "getAbsolutePath", "assertEquals", "getNumberOfParameters", "validate"]}, "focal_class": {"identifier": "ParameterTool", "superclass": "extends ExecutionConfig.GlobalJobParameters", "interfaces": "implements Serializable, Cloneable", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "protected static String NO_VALUE_KEY = \"__NO_VALUE_KEY\";", "modifier": "protected static", "type": "String", "declarator": "NO_VALUE_KEY = \"__NO_VALUE_KEY\"", "var_name": "NO_VALUE_KEY"}, {"original_string": "protected static String DEFAULT_UNDEFINED = \"<undefined>\";", "modifier": "protected static", "type": "String", "declarator": "DEFAULT_UNDEFINED = \"<undefined>\"", "var_name": "DEFAULT_UNDEFINED"}, {"original_string": "protected final Map<String, String> data;", "modifier": "protected final", "type": "Map<String, String>", "declarator": "data", "var_name": "data"}, {"original_string": "protected final HashMap<String, String> defaultData;", "modifier": "protected final", "type": "HashMap<String, String>", "declarator": "defaultData", "var_name": "defaultData"}], "methods": [{"identifier": "fromArgs", "parameters": "(String[] args)", "modifiers": "public static", "return": "ParameterTool", "signature": "ParameterTool fromArgs(String[] args)", "full_signature": "public static ParameterTool fromArgs(String[] args)", "class_method_signature": "ParameterTool.fromArgs(String[] args)", "testcase": false, "constructor": false}, {"identifier": "fromPropertiesFile", "parameters": "(String path)", "modifiers": "public static", "return": "ParameterTool", "signature": "ParameterTool fromPropertiesFile(String path)", "full_signature": "public static ParameterTool fromPropertiesFile(String path)", "class_method_signature": "ParameterTool.fromPropertiesFile(String path)", "testcase": false, "constructor": false}, {"identifier": "fromMap", "parameters": "(Map<String, String> map)", "modifiers": "public static", "return": "ParameterTool", "signature": "ParameterTool fromMap(Map<String, String> map)", "full_signature": "public static ParameterTool fromMap(Map<String, String> map)", "class_method_signature": "ParameterTool.fromMap(Map<String, String> map)", "testcase": false, "constructor": false}, {"identifier": "fromSystemProperties", "parameters": "()", "modifiers": "public static", "return": "ParameterTool", "signature": "ParameterTool fromSystemProperties()", "full_signature": "public static ParameterTool fromSystemProperties()", "class_method_signature": "ParameterTool.fromSystemProperties()", "testcase": false, "constructor": false}, {"identifier": "fromGenericOptionsParser", "parameters": "(String[] args)", "modifiers": "@PublicEvolving public static", "return": "ParameterTool", "signature": "ParameterTool fromGenericOptionsParser(String[] args)", "full_signature": "@PublicEvolving public static ParameterTool fromGenericOptionsParser(String[] args)", "class_method_signature": "ParameterTool.fromGenericOptionsParser(String[] args)", "testcase": false, "constructor": false}, {"identifier": "ParameterTool", "parameters": "(Map<String, String> data)", "modifiers": "private", "return": "", "signature": " ParameterTool(Map<String, String> data)", "full_signature": "private  ParameterTool(Map<String, String> data)", "class_method_signature": "ParameterTool.ParameterTool(Map<String, String> data)", "testcase": false, "constructor": true}, {"identifier": "getNumberOfParameters", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumberOfParameters()", "full_signature": "public int getNumberOfParameters()", "class_method_signature": "ParameterTool.getNumberOfParameters()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String key)", "modifiers": "public", "return": "String", "signature": "String get(String key)", "full_signature": "public String get(String key)", "class_method_signature": "ParameterTool.get(String key)", "testcase": false, "constructor": false}, {"identifier": "getRequired", "parameters": "(String key)", "modifiers": "public", "return": "String", "signature": "String getRequired(String key)", "full_signature": "public String getRequired(String key)", "class_method_signature": "ParameterTool.getRequired(String key)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(String key, String defaultValue)", "modifiers": "public", "return": "String", "signature": "String get(String key, String defaultValue)", "full_signature": "public String get(String key, String defaultValue)", "class_method_signature": "ParameterTool.get(String key, String defaultValue)", "testcase": false, "constructor": false}, {"identifier": "has", "parameters": "(String value)", "modifiers": "public", "return": "boolean", "signature": "boolean has(String value)", "full_signature": "public boolean has(String value)", "class_method_signature": "ParameterTool.has(String value)", "testcase": false, "constructor": false}, {"identifier": "getInt", "parameters": "(String key)", "modifiers": "public", "return": "int", "signature": "int getInt(String key)", "full_signature": "public int getInt(String key)", "class_method_signature": "ParameterTool.getInt(String key)", "testcase": false, "constructor": false}, {"identifier": "getInt", "parameters": "(String key, int defaultValue)", "modifiers": "public", "return": "int", "signature": "int getInt(String key, int defaultValue)", "full_signature": "public int getInt(String key, int defaultValue)", "class_method_signature": "ParameterTool.getInt(String key, int defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(String key)", "modifiers": "public", "return": "long", "signature": "long getLong(String key)", "full_signature": "public long getLong(String key)", "class_method_signature": "ParameterTool.getLong(String key)", "testcase": false, "constructor": false}, {"identifier": "getLong", "parameters": "(String key, long defaultValue)", "modifiers": "public", "return": "long", "signature": "long getLong(String key, long defaultValue)", "full_signature": "public long getLong(String key, long defaultValue)", "class_method_signature": "ParameterTool.getLong(String key, long defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getFloat", "parameters": "(String key)", "modifiers": "public", "return": "float", "signature": "float getFloat(String key)", "full_signature": "public float getFloat(String key)", "class_method_signature": "ParameterTool.getFloat(String key)", "testcase": false, "constructor": false}, {"identifier": "getFloat", "parameters": "(String key, float defaultValue)", "modifiers": "public", "return": "float", "signature": "float getFloat(String key, float defaultValue)", "full_signature": "public float getFloat(String key, float defaultValue)", "class_method_signature": "ParameterTool.getFloat(String key, float defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "(String key)", "modifiers": "public", "return": "double", "signature": "double getDouble(String key)", "full_signature": "public double getDouble(String key)", "class_method_signature": "ParameterTool.getDouble(String key)", "testcase": false, "constructor": false}, {"identifier": "getDouble", "parameters": "(String key, double defaultValue)", "modifiers": "public", "return": "double", "signature": "double getDouble(String key, double defaultValue)", "full_signature": "public double getDouble(String key, double defaultValue)", "class_method_signature": "ParameterTool.getDouble(String key, double defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(String key)", "modifiers": "public", "return": "boolean", "signature": "boolean getBoolean(String key)", "full_signature": "public boolean getBoolean(String key)", "class_method_signature": "ParameterTool.getBoolean(String key)", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "(String key, boolean defaultValue)", "modifiers": "public", "return": "boolean", "signature": "boolean getBoolean(String key, boolean defaultValue)", "full_signature": "public boolean getBoolean(String key, boolean defaultValue)", "class_method_signature": "ParameterTool.getBoolean(String key, boolean defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getShort", "parameters": "(String key)", "modifiers": "public", "return": "short", "signature": "short getShort(String key)", "full_signature": "public short getShort(String key)", "class_method_signature": "ParameterTool.getShort(String key)", "testcase": false, "constructor": false}, {"identifier": "getShort", "parameters": "(String key, short defaultValue)", "modifiers": "public", "return": "short", "signature": "short getShort(String key, short defaultValue)", "full_signature": "public short getShort(String key, short defaultValue)", "class_method_signature": "ParameterTool.getShort(String key, short defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getByte", "parameters": "(String key)", "modifiers": "public", "return": "byte", "signature": "byte getByte(String key)", "full_signature": "public byte getByte(String key)", "class_method_signature": "ParameterTool.getByte(String key)", "testcase": false, "constructor": false}, {"identifier": "getByte", "parameters": "(String key, byte defaultValue)", "modifiers": "public", "return": "byte", "signature": "byte getByte(String key, byte defaultValue)", "full_signature": "public byte getByte(String key, byte defaultValue)", "class_method_signature": "ParameterTool.getByte(String key, byte defaultValue)", "testcase": false, "constructor": false}, {"identifier": "addToDefaults", "parameters": "(String key, String value)", "modifiers": "protected", "return": "void", "signature": "void addToDefaults(String key, String value)", "full_signature": "protected void addToDefaults(String key, String value)", "class_method_signature": "ParameterTool.addToDefaults(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "getConfiguration", "parameters": "()", "modifiers": "public", "return": "Configuration", "signature": "Configuration getConfiguration()", "full_signature": "public Configuration getConfiguration()", "class_method_signature": "ParameterTool.getConfiguration()", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "public", "return": "Properties", "signature": "Properties getProperties()", "full_signature": "public Properties getProperties()", "class_method_signature": "ParameterTool.getProperties()", "testcase": false, "constructor": false}, {"identifier": "createPropertiesFile", "parameters": "(String pathToFile)", "modifiers": "public", "return": "void", "signature": "void createPropertiesFile(String pathToFile)", "full_signature": "public void createPropertiesFile(String pathToFile)", "class_method_signature": "ParameterTool.createPropertiesFile(String pathToFile)", "testcase": false, "constructor": false}, {"identifier": "createPropertiesFile", "parameters": "(String pathToFile, boolean overwrite)", "modifiers": "public", "return": "void", "signature": "void createPropertiesFile(String pathToFile, boolean overwrite)", "full_signature": "public void createPropertiesFile(String pathToFile, boolean overwrite)", "class_method_signature": "ParameterTool.createPropertiesFile(String pathToFile, boolean overwrite)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override protected", "return": "Object", "signature": "Object clone()", "full_signature": "@Override protected Object clone()", "class_method_signature": "ParameterTool.clone()", "testcase": false, "constructor": false}, {"identifier": "mergeWith", "parameters": "(ParameterTool other)", "modifiers": "public", "return": "ParameterTool", "signature": "ParameterTool mergeWith(ParameterTool other)", "full_signature": "public ParameterTool mergeWith(ParameterTool other)", "class_method_signature": "ParameterTool.mergeWith(ParameterTool other)", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> toMap()", "full_signature": "@Override public Map<String, String> toMap()", "class_method_signature": "ParameterTool.toMap()", "testcase": false, "constructor": false}], "file": "flink-java/src/main/java/org/apache/flink/api/java/utils/ParameterTool.java"}, "focal_method": {"identifier": "fromPropertiesFile", "parameters": "(String path)", "modifiers": "public static", "return": "ParameterTool", "body": "public static ParameterTool fromPropertiesFile(String path) throws IOException {\n\t\tFile propertiesFile = new File(path);\n\t\tif(!propertiesFile.exists()) {\n\t\t\tthrow new FileNotFoundException(\"Properties file \"+path+\" does not exist\");\n\t\t}\n\t\tProperties props = new Properties();\n\t\tFileInputStream fis = new FileInputStream(propertiesFile);\n\t\tprops.load(fis);\n\t\tfis.close();\n\t\treturn fromMap((Map)props);\n\t}", "signature": "ParameterTool fromPropertiesFile(String path)", "full_signature": "public static ParameterTool fromPropertiesFile(String path)", "class_method_signature": "ParameterTool.fromPropertiesFile(String path)", "testcase": false, "constructor": false, "invocations": ["exists", "load", "close", "fromMap"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}