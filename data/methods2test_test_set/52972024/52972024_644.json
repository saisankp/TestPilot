{"test_class": {"identifier": "CloseAsyncOperationActorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CloseAsyncOperationActor testActor;", "modifier": "private", "type": "CloseAsyncOperationActor", "declarator": "testActor", "var_name": "testActor"}, {"original_string": "private IAsyncOperationCollection targetCollection;", "modifier": "private", "type": "IAsyncOperationCollection", "declarator": "targetCollection", "var_name": "targetCollection"}], "file": "CommonFeatures/AsyncOperations/CloseAsyncOperationActor/src/test/java/info/smart_tools/smartactors/async_operations/close_async_operation/CloseAsyncOperationActorTest.java"}, "test_case": {"identifier": "MustInCorrectCompleteAsyncOperationWhenMessageThrowReadValueException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void MustInCorrectCompleteAsyncOperationWhenMessageThrowReadValueException() throws ReadValueException {\n\n        CloseAsyncOpMessage message = mock(CloseAsyncOpMessage.class);\n        when(message.getToken()).thenThrow(new ReadValueException());\n\n        try {\n            testActor.completeAsyncOp(message);\n        } catch (InvalidArgumentException e) {\n            verify(message).getToken();\n            return;\n        }\n        assertTrue(\"Must throw exception\", false);\n    }", "signature": "void MustInCorrectCompleteAsyncOperationWhenMessageThrowReadValueException()", "full_signature": "@Test public void MustInCorrectCompleteAsyncOperationWhenMessageThrowReadValueException()", "class_method_signature": "CloseAsyncOperationActorTest.MustInCorrectCompleteAsyncOperationWhenMessageThrowReadValueException()", "testcase": true, "constructor": false, "invocations": ["mock", "thenThrow", "when", "getToken", "completeAsyncOp", "getToken", "verify", "assertTrue"]}, "focal_class": {"identifier": "CloseAsyncOperationActor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IAsyncOperationCollection collection;", "modifier": "private", "type": "IAsyncOperationCollection", "declarator": "collection", "var_name": "collection"}], "methods": [{"identifier": "CloseAsyncOperationActor", "parameters": "(final IObject params)", "modifiers": "public", "return": "", "signature": " CloseAsyncOperationActor(final IObject params)", "full_signature": "public  CloseAsyncOperationActor(final IObject params)", "class_method_signature": "CloseAsyncOperationActor.CloseAsyncOperationActor(final IObject params)", "testcase": false, "constructor": true}, {"identifier": "completeAsyncOp", "parameters": "(final CloseAsyncOpMessage message)", "modifiers": "public", "return": "void", "signature": "void completeAsyncOp(final CloseAsyncOpMessage message)", "full_signature": "public void completeAsyncOp(final CloseAsyncOpMessage message)", "class_method_signature": "CloseAsyncOperationActor.completeAsyncOp(final CloseAsyncOpMessage message)", "testcase": false, "constructor": false}], "file": "CommonFeatures/AsyncOperations/CloseAsyncOperationActor/src/main/java/info/smart_tools/smartactors/async_operations/close_async_operation/CloseAsyncOperationActor.java"}, "focal_method": {"identifier": "completeAsyncOp", "parameters": "(final CloseAsyncOpMessage message)", "modifiers": "public", "return": "void", "body": "public void completeAsyncOp(final CloseAsyncOpMessage message) throws InvalidArgumentException {\n        try {\n            message.getOperationTokens().remove(message.getToken());\n            collection.complete(message.getOperation());\n        } catch (ReadValueException e) {\n            throw new InvalidArgumentException(\"Can't read some of values in message\", e);\n        } catch (CompleteAsyncOperationException e) {\n            throw new InvalidArgumentException(\"Can't close async operation with this parameters: \" + message, e);\n        }\n    }", "signature": "void completeAsyncOp(final CloseAsyncOpMessage message)", "full_signature": "public void completeAsyncOp(final CloseAsyncOpMessage message)", "class_method_signature": "CloseAsyncOperationActor.completeAsyncOp(final CloseAsyncOpMessage message)", "testcase": false, "constructor": false, "invocations": ["remove", "getOperationTokens", "getToken", "complete", "getOperation"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}