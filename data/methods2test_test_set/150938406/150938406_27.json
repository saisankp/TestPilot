{"test_class": {"identifier": "EvalRegressionBatchOpTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n\tpublic", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "core/src/test/java/com/alibaba/alink/operator/batch/evaluation/EvalRegressionBatchOpTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test() throws Exception {\n\t\tRow[] data =\n\t\t\tnew Row[] {\n\t\t\t\tRow.of(0.4, 0.5),\n\t\t\t\tRow.of(0.3, 0.5),\n\t\t\t\tRow.of(0.2, 0.6),\n\t\t\t\tRow.of(0.6, 0.7),\n\t\t\t\tRow.of(0.1, 0.5)\n\t\t\t};\n\n\t\tMemSourceBatchOp input = new MemSourceBatchOp(data, new String[] {\"label\", \"pred\"});\n\n\t\tRegressionMetrics metrics = new EvalRegressionBatchOp()\n\t\t\t.setLabelCol(\"label\")\n\t\t\t.setPredictionCol(\"pred\")\n\t\t\t.linkFrom(input)\n\t\t\t.collectMetrics();\n\n\t\tAssert.assertEquals(0.275, metrics.getRmse(), 0.01);\n\t\tAssert.assertEquals(-1.56, metrics.getR2(), 0.01);\n\t\tAssert.assertEquals(0.38, metrics.getSse(), 0.01);\n\t\tAssert.assertEquals(141.66, metrics.getMape(), 0.01);\n\t\tAssert.assertEquals(0.24, metrics.getMae(), 0.01);\n\t\tAssert.assertEquals(0.32, metrics.getSsr(), 0.01);\n\t\tAssert.assertEquals(0.14, metrics.getSst(), 0.01);\n\t}", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "EvalRegressionBatchOpTest.test()", "testcase": true, "constructor": false, "invocations": ["of", "of", "of", "of", "of", "collectMetrics", "linkFrom", "setPredictionCol", "setLabelCol", "assertEquals", "getRmse", "assertEquals", "getR2", "assertEquals", "getSse", "assertEquals", "getMape", "assertEquals", "getMae", "assertEquals", "getSsr", "assertEquals", "getSst"]}, "focal_class": {"identifier": "EvalRegressionBatchOp", "superclass": "extends BatchOperator<EvalRegressionBatchOp>", "interfaces": "implements EvalRegressionParams<EvalRegressionBatchOp>, EvaluationMetricsCollector<RegressionMetrics, EvalRegressionBatchOp>", "fields": [], "methods": [{"identifier": "EvalRegressionBatchOp", "parameters": "()", "modifiers": "public", "return": "", "signature": " EvalRegressionBatchOp()", "full_signature": "public  EvalRegressionBatchOp()", "class_method_signature": "EvalRegressionBatchOp.EvalRegressionBatchOp()", "testcase": false, "constructor": true}, {"identifier": "EvalRegressionBatchOp", "parameters": "(Params params)", "modifiers": "public", "return": "", "signature": " EvalRegressionBatchOp(Params params)", "full_signature": "public  EvalRegressionBatchOp(Params params)", "class_method_signature": "EvalRegressionBatchOp.EvalRegressionBatchOp(Params params)", "testcase": false, "constructor": true}, {"identifier": "linkFrom", "parameters": "(BatchOperator<?>... inputs)", "modifiers": "@Override public", "return": "EvalRegressionBatchOp", "signature": "EvalRegressionBatchOp linkFrom(BatchOperator<?>... inputs)", "full_signature": "@Override public EvalRegressionBatchOp linkFrom(BatchOperator<?>... inputs)", "class_method_signature": "EvalRegressionBatchOp.linkFrom(BatchOperator<?>... inputs)", "testcase": false, "constructor": false}, {"identifier": "createMetrics", "parameters": "(List<Row> rows)", "modifiers": "@Override public", "return": "RegressionMetrics", "signature": "RegressionMetrics createMetrics(List<Row> rows)", "full_signature": "@Override public RegressionMetrics createMetrics(List<Row> rows)", "class_method_signature": "EvalRegressionBatchOp.createMetrics(List<Row> rows)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/alibaba/alink/operator/batch/evaluation/EvalRegressionBatchOp.java"}, "focal_method": {"identifier": "linkFrom", "parameters": "(BatchOperator<?>... inputs)", "modifiers": "@Override public", "return": "EvalRegressionBatchOp", "body": "@Override\n    public EvalRegressionBatchOp linkFrom(BatchOperator<?>... inputs) {\n        BatchOperator in = checkAndGetFirst(inputs);\n\n        TableUtil.findColIndexWithAssertAndHint(in.getColNames(), this.getLabelCol());\n        TableUtil.findColIndexWithAssertAndHint(in.getColNames(), this.getPredictionCol());\n\n        TableUtil.assertNumericalCols(in.getSchema(), this.getLabelCol(), this.getPredictionCol());\n        DataSet<Row> filter = in.select(new String[]{this.getLabelCol(), this.getPredictionCol()})\n            .getDataSet()\n            .filter(new FilterFunction<Row>() {\n                @Override\n                public boolean filter(Row value) throws Exception {\n                    return EvaluationUtil.checkRowFieldNotNull(value);\n                }\n            });\n\n        DataSet<Row> out = filter\n            .mapPartition(new CalcLocal())\n            .withBroadcastSet(DataSetUtil.count(filter), \"count\")\n            .reduce(new EvaluationUtil.ReduceBaseMetrics())\n            .flatMap(new EvaluationUtil.SaveDataAsParams());\n\n        this.setOutputTable(DataSetConversionUtil.toTable(getMLEnvironmentId(),\n            out, new TableSchema(new String[] {\"regression_eval_result\"}, new TypeInformation[] {Types.STRING})\n        ));\n        return this;\n    }", "signature": "EvalRegressionBatchOp linkFrom(BatchOperator<?>... inputs)", "full_signature": "@Override public EvalRegressionBatchOp linkFrom(BatchOperator<?>... inputs)", "class_method_signature": "EvalRegressionBatchOp.linkFrom(BatchOperator<?>... inputs)", "testcase": false, "constructor": false, "invocations": ["checkAndGetFirst", "findColIndexWithAssertAndHint", "getColNames", "getLabelCol", "findColIndexWithAssertAndHint", "getColNames", "getPredictionCol", "assertNumericalCols", "getSchema", "getLabelCol", "getPredictionCol", "filter", "getDataSet", "select", "getLabelCol", "getPredictionCol", "checkRowFieldNotNull", "flatMap", "reduce", "withBroadcastSet", "mapPartition", "count", "setOutputTable", "toTable", "getMLEnvironmentId"]}, "repository": {"repo_id": 150938406, "url": "https://github.com/alibaba/Alink", "stars": 1923, "created": "9/30/2018 6:36:11 AM +00:00", "updates": "2020-01-27T10:24:34+00:00", "fork": "False", "license": "licensed"}}