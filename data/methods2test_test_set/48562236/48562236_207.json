{"test_class": {"identifier": "CSVRecordTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String[] values;", "modifier": "private", "type": "String[]", "declarator": "values", "var_name": "values"}, {"original_string": "private CSVRecord record, recordWithHeader;", "modifier": "private", "type": "CSVRecord", "declarator": "record", "var_name": "record"}, {"original_string": "private Map<String, Integer> header;", "modifier": "private", "type": "Map<String, Integer>", "declarator": "header", "var_name": "header"}], "file": "base/lang/src/test/java/leap/lang/csv/CSVRecordTest.java"}, "test_case": {"identifier": "testIsMapped", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsMapped() {\n        assertFalse(record.isMapped(\"first\"));\n        assertTrue(recordWithHeader.isMapped(\"first\"));\n        assertFalse(recordWithHeader.isMapped(\"fourth\"));\n    }", "signature": "void testIsMapped()", "full_signature": "@Test public void testIsMapped()", "class_method_signature": "CSVRecordTest.testIsMapped()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "isMapped", "assertTrue", "isMapped", "assertFalse", "isMapped"]}, "focal_class": {"identifier": "CSVRecord", "superclass": "", "interfaces": "implements Serializable, Iterable<String>", "fields": [{"original_string": "private static final String[] EMPTY_STRING_ARRAY = new String[0];", "modifier": "private static final", "type": "String[]", "declarator": "EMPTY_STRING_ARRAY = new String[0]", "var_name": "EMPTY_STRING_ARRAY"}, {"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private final String comment;", "modifier": "private final", "type": "String", "declarator": "comment", "var_name": "comment"}, {"original_string": "private final Map<String, Integer> mapping;", "modifier": "private final", "type": "Map<String, Integer>", "declarator": "mapping", "var_name": "mapping"}, {"original_string": "private final long recordNumber;", "modifier": "private final", "type": "long", "declarator": "recordNumber", "var_name": "recordNumber"}, {"original_string": "private final String[] values;", "modifier": "private final", "type": "String[]", "declarator": "values", "var_name": "values"}], "methods": [{"identifier": "CSVRecord", "parameters": "(final String[] values, final Map<String, Integer> mapping,\n            final String comment, final long recordNumber)", "modifiers": "", "return": "", "signature": " CSVRecord(final String[] values, final Map<String, Integer> mapping,\n            final String comment, final long recordNumber)", "full_signature": "  CSVRecord(final String[] values, final Map<String, Integer> mapping,\n            final String comment, final long recordNumber)", "class_method_signature": "CSVRecord.CSVRecord(final String[] values, final Map<String, Integer> mapping,\n            final String comment, final long recordNumber)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "(Enum<?> e)", "modifiers": "public", "return": "String", "signature": "String get(Enum<?> e)", "full_signature": "public String get(Enum<?> e)", "class_method_signature": "CSVRecord.get(Enum<?> e)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final int i)", "modifiers": "public", "return": "String", "signature": "String get(final int i)", "full_signature": "public String get(final int i)", "class_method_signature": "CSVRecord.get(final int i)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final String name)", "modifiers": "public", "return": "String", "signature": "String get(final String name)", "full_signature": "public String get(final String name)", "class_method_signature": "CSVRecord.get(final String name)", "testcase": false, "constructor": false}, {"identifier": "getComment", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getComment()", "full_signature": "public String getComment()", "class_method_signature": "CSVRecord.getComment()", "testcase": false, "constructor": false}, {"identifier": "getRecordNumber", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getRecordNumber()", "full_signature": "public long getRecordNumber()", "class_method_signature": "CSVRecord.getRecordNumber()", "testcase": false, "constructor": false}, {"identifier": "isConsistent", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isConsistent()", "full_signature": "public boolean isConsistent()", "class_method_signature": "CSVRecord.isConsistent()", "testcase": false, "constructor": false}, {"identifier": "isMapped", "parameters": "(final String name)", "modifiers": "public", "return": "boolean", "signature": "boolean isMapped(final String name)", "full_signature": "public boolean isMapped(final String name)", "class_method_signature": "CSVRecord.isMapped(final String name)", "testcase": false, "constructor": false}, {"identifier": "isSet", "parameters": "(final String name)", "modifiers": "public", "return": "boolean", "signature": "boolean isSet(final String name)", "full_signature": "public boolean isSet(final String name)", "class_method_signature": "CSVRecord.isSet(final String name)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "public", "return": "Iterator<String>", "signature": "Iterator<String> iterator()", "full_signature": "public Iterator<String> iterator()", "class_method_signature": "CSVRecord.iterator()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "CSVRecord.size()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "CSVRecord.toString()", "testcase": false, "constructor": false}, {"identifier": "values", "parameters": "()", "modifiers": "", "return": "String[]", "signature": "String[] values()", "full_signature": " String[] values()", "class_method_signature": "CSVRecord.values()", "testcase": false, "constructor": false}], "file": "base/lang/src/main/java/leap/lang/csv/CSVRecord.java"}, "focal_method": {"identifier": "isMapped", "parameters": "(final String name)", "modifiers": "public", "return": "boolean", "body": "public boolean isMapped(final String name) {\n        return mapping != null ? mapping.containsKey(name) : false;\n    }", "signature": "boolean isMapped(final String name)", "full_signature": "public boolean isMapped(final String name)", "class_method_signature": "CSVRecord.isMapped(final String name)", "testcase": false, "constructor": false, "invocations": ["containsKey"]}, "repository": {"repo_id": 48562236, "url": "https://github.com/leapframework/framework", "stars": 42, "created": "12/25/2015 1:54:52 AM +00:00", "updates": "2020-01-20T03:04:15+00:00", "fork": "False", "license": "licensed"}}