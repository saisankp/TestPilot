{"test_class": {"identifier": "StatsContextFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private GazePlay mockGazePlay;", "modifier": "@Mock\n    private", "type": "GazePlay", "declarator": "mockGazePlay", "var_name": "mockGazePlay"}, {"original_string": "@Mock\n    private Translator mockTranslator;", "modifier": "@Mock\n    private", "type": "Translator", "declarator": "mockTranslator", "var_name": "mockTranslator"}, {"original_string": "@Mock\n    private Stats mockStats;", "modifier": "@Mock\n    private", "type": "Stats", "declarator": "mockStats", "var_name": "mockStats"}, {"original_string": "@Mock\n    private Configuration mockConfig;", "modifier": "@Mock\n    private", "type": "Configuration", "declarator": "mockConfig", "var_name": "mockConfig"}, {"original_string": "private SavedStatsInfo mockSavedStatsInfo = new SavedStatsInfo(\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\")\n    );", "modifier": "private", "type": "SavedStatsInfo", "declarator": "mockSavedStatsInfo = new SavedStatsInfo(\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\"),\n        new File(\"file.csv\")\n    )", "var_name": "mockSavedStatsInfo"}], "file": "gazeplay-core/src/test/java/net/gazeplay/ui/scenes/stats/StatsContextFactoryTest.java"}, "test_case": {"identifier": "shouldCreateNewInstance", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldCreateNewInstance() {\n        StatsContext result = StatsContextFactory.newInstance(mockGazePlay, mockStats);\n\n        BorderPane pane = (BorderPane) result.getRoot().getChildren().get(1);\n        HBox box = (HBox) pane.getChildren().get(1);\n\n        assertEquals(3, result.getRoot().getChildren().size());\n        assertEquals(4, box.getChildren().size());\n    }", "signature": "void shouldCreateNewInstance()", "full_signature": "@Test void shouldCreateNewInstance()", "class_method_signature": "StatsContextFactoryTest.shouldCreateNewInstance()", "testcase": true, "constructor": false, "invocations": ["newInstance", "get", "getChildren", "getRoot", "get", "getChildren", "assertEquals", "size", "getChildren", "getRoot", "assertEquals", "size", "getChildren"]}, "focal_class": {"identifier": "StatsContextFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "newInstance", "parameters": "(\n        @NonNull GazePlay gazePlay,\n        @NonNull Stats stats\n    )", "modifiers": "public static", "return": "StatsContext", "signature": "StatsContext newInstance(\n        @NonNull GazePlay gazePlay,\n        @NonNull Stats stats\n    )", "full_signature": "public static StatsContext newInstance(\n        @NonNull GazePlay gazePlay,\n        @NonNull Stats stats\n    )", "class_method_signature": "StatsContextFactory.newInstance(\n        @NonNull GazePlay gazePlay,\n        @NonNull Stats stats\n    )", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(\n        @NonNull GazePlay gazePlay,\n        @NonNull Stats stats,\n        CustomButton continueButton\n    )", "modifiers": "public static", "return": "StatsContext", "signature": "StatsContext newInstance(\n        @NonNull GazePlay gazePlay,\n        @NonNull Stats stats,\n        CustomButton continueButton\n    )", "full_signature": "public static StatsContext newInstance(\n        @NonNull GazePlay gazePlay,\n        @NonNull Stats stats,\n        CustomButton continueButton\n    )", "class_method_signature": "StatsContextFactory.newInstance(\n        @NonNull GazePlay gazePlay,\n        @NonNull Stats stats,\n        CustomButton continueButton\n    )", "testcase": false, "constructor": false}], "file": "gazeplay-core/src/main/java/net/gazeplay/ui/scenes/stats/StatsContextFactory.java"}, "focal_method": {"identifier": "newInstance", "parameters": "(\n        @NonNull GazePlay gazePlay,\n        @NonNull Stats stats\n    )", "modifiers": "public static", "return": "StatsContext", "body": "public static StatsContext newInstance(\n        @NonNull GazePlay gazePlay,\n        @NonNull Stats stats\n    ) {\n        return StatsContextFactory.newInstance(gazePlay, stats, null);\n    }", "signature": "StatsContext newInstance(\n        @NonNull GazePlay gazePlay,\n        @NonNull Stats stats\n    )", "full_signature": "public static StatsContext newInstance(\n        @NonNull GazePlay gazePlay,\n        @NonNull Stats stats\n    )", "class_method_signature": "StatsContextFactory.newInstance(\n        @NonNull GazePlay gazePlay,\n        @NonNull Stats stats\n    )", "testcase": false, "constructor": false, "invocations": ["newInstance"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}