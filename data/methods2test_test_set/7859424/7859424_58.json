{"test_class": {"identifier": "SimpleTreeUpdaterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Player player;", "modifier": "private", "type": "Player", "declarator": "player", "var_name": "player"}, {"original_string": "private SimpleTreeUpdater updater;", "modifier": "private", "type": "SimpleTreeUpdater", "declarator": "updater", "var_name": "updater"}], "file": "src/edu/lclark/orego/mcts/SimpleTreeUpdaterTest.java"}, "test_case": {"identifier": "testClear", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testClear() {\n\t\tMcRunnable runnable = player.getMcRunnable(0);\n\t\trunnable.acceptMove(at(\"b1\"));\n\t\trunnable.acceptMove(at(\"c4\"));\n\t\trunnable.acceptMove(at(\"a2\"));\n\t\tupdater.updateTree(BLACK, runnable);\n\t\tupdater.clear();\n\t\tassertEquals(\"Total runs: 60\\n\", updater.toString(5));\n\t}", "signature": "void testClear()", "full_signature": "@Test public void testClear()", "class_method_signature": "SimpleTreeUpdaterTest.testClear()", "testcase": true, "constructor": false, "invocations": ["getMcRunnable", "acceptMove", "at", "acceptMove", "at", "acceptMove", "at", "updateTree", "clear", "assertEquals", "toString"]}, "focal_class": {"identifier": "SimpleTreeUpdater", "superclass": "", "interfaces": "implements TreeUpdater", "fields": [{"original_string": "private final Board board;", "modifier": "private final", "type": "Board", "declarator": "board", "var_name": "board"}, {"original_string": "private final int gestation;", "modifier": "private final", "type": "int", "declarator": "gestation", "var_name": "gestation"}, {"original_string": "private final TranspositionTable table;", "modifier": "private final", "type": "TranspositionTable", "declarator": "table", "var_name": "table"}], "methods": [{"identifier": "SimpleTreeUpdater", "parameters": "(Board board, TranspositionTable table,\n\t\t\tint gestation)", "modifiers": "public", "return": "", "signature": " SimpleTreeUpdater(Board board, TranspositionTable table,\n\t\t\tint gestation)", "full_signature": "public  SimpleTreeUpdater(Board board, TranspositionTable table,\n\t\t\tint gestation)", "class_method_signature": "SimpleTreeUpdater.SimpleTreeUpdater(Board board, TranspositionTable table,\n\t\t\tint gestation)", "testcase": false, "constructor": true}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "SimpleTreeUpdater.clear()", "testcase": false, "constructor": false}, {"identifier": "getGestation", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getGestation()", "full_signature": "@Override public int getGestation()", "class_method_signature": "SimpleTreeUpdater.getGestation()", "testcase": false, "constructor": false}, {"identifier": "getRoot", "parameters": "()", "modifiers": "@Override public", "return": "SearchNode", "signature": "SearchNode getRoot()", "full_signature": "@Override public SearchNode getRoot()", "class_method_signature": "SimpleTreeUpdater.getRoot()", "testcase": false, "constructor": false}, {"identifier": "getTable", "parameters": "()", "modifiers": "", "return": "TranspositionTable", "signature": "TranspositionTable getTable()", "full_signature": " TranspositionTable getTable()", "class_method_signature": "SimpleTreeUpdater.getTable()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(int maxDepth)", "modifiers": "public", "return": "String", "signature": "String toString(int maxDepth)", "full_signature": "public String toString(int maxDepth)", "class_method_signature": "SimpleTreeUpdater.toString(int maxDepth)", "testcase": false, "constructor": false}, {"identifier": "updateForAcceptMove", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void updateForAcceptMove()", "full_signature": "@Override public void updateForAcceptMove()", "class_method_signature": "SimpleTreeUpdater.updateForAcceptMove()", "testcase": false, "constructor": false}, {"identifier": "updateTree", "parameters": "(Color winner, McRunnable runnable)", "modifiers": "@Override public", "return": "void", "signature": "void updateTree(Color winner, McRunnable runnable)", "full_signature": "@Override public void updateTree(Color winner, McRunnable runnable)", "class_method_signature": "SimpleTreeUpdater.updateTree(Color winner, McRunnable runnable)", "testcase": false, "constructor": false}], "file": "src/edu/lclark/orego/mcts/SimpleTreeUpdater.java"}, "focal_method": {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void clear() {\n\t\ttable.sweep();\n\t}", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "SimpleTreeUpdater.clear()", "testcase": false, "constructor": false, "invocations": ["sweep"]}, "repository": {"repo_id": 7859424, "url": "https://github.com/Orego/Orego", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 1341444, "license": "licensed"}}