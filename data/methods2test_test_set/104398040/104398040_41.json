{"test_class": {"identifier": "ButterflyFacadeImplTest", "superclass": "extends PowerMockTestCase", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private ButterflyFacadeImpl butterflyFacadeImpl;", "modifier": "@InjectMocks\n    private", "type": "ButterflyFacadeImpl", "declarator": "butterflyFacadeImpl", "var_name": "butterflyFacadeImpl"}, {"original_string": "@Mock\n    private ExtensionRegistry extensionRegistry;", "modifier": "@Mock\n    private", "type": "ExtensionRegistry", "declarator": "extensionRegistry", "var_name": "extensionRegistry"}, {"original_string": "@Mock\n    private TransformationEngine transformationEngine;", "modifier": "@Mock\n    private", "type": "TransformationEngine", "declarator": "transformationEngine", "var_name": "transformationEngine"}, {"original_string": "private ExtensionRegistry extensionRegistry_test = new ExtensionRegistry();", "modifier": "private", "type": "ExtensionRegistry", "declarator": "extensionRegistry_test = new ExtensionRegistry()", "var_name": "extensionRegistry_test"}, {"original_string": "private File applicationFolder = new File(this.getClass().getClassLoader().getResource(\"test-app-2\").getFile());", "modifier": "private", "type": "File", "declarator": "applicationFolder = new File(this.getClass().getClassLoader().getResource(\"test-app-2\").getFile())", "var_name": "applicationFolder"}], "file": "butterfly-core/src/test/java/com/paypal/butterfly/core/ButterflyFacadeImplTest.java"}, "test_case": {"identifier": "testTransformWithValidUpgradePathInvalidAppFolder", "parameters": "()", "modifiers": "@Test(expectedExceptions = IllegalArgumentException.class, expectedExceptionsMessageRegExp = \"Invalid application folder testTransformation1\") public", "return": "void", "body": "@Test(expectedExceptions = IllegalArgumentException.class, expectedExceptionsMessageRegExp = \"Invalid application folder testTransformation1\")\n    public void testTransformWithValidUpgradePathInvalidAppFolder() {\n        butterflyFacadeImpl.transform(new File(\"testTransformation1\"), SpringBootUpgrade_1_5_6_to_1_5_7.class);\n    }", "signature": "void testTransformWithValidUpgradePathInvalidAppFolder()", "full_signature": "@Test(expectedExceptions = IllegalArgumentException.class, expectedExceptionsMessageRegExp = \"Invalid application folder testTransformation1\") public void testTransformWithValidUpgradePathInvalidAppFolder()", "class_method_signature": "ButterflyFacadeImplTest.testTransformWithValidUpgradePathInvalidAppFolder()", "testcase": true, "constructor": false, "invocations": ["transform"]}, "focal_class": {"identifier": "ButterflyFacadeImpl", "superclass": "", "interfaces": "implements ButterflyFacade", "fields": [{"original_string": "private static final String VERSION = ButterflyProperties.getString(\"butterfly.version\");", "modifier": "private static final", "type": "String", "declarator": "VERSION = ButterflyProperties.getString(\"butterfly.version\")", "var_name": "VERSION"}, {"original_string": "private static final Logger logger = LoggerFactory.getLogger(ButterflyFacadeImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ButterflyFacadeImpl.class)", "var_name": "logger"}, {"original_string": "@Autowired\n    private ExtensionRegistry extensionRegistry;", "modifier": "@Autowired\n    private", "type": "ExtensionRegistry", "declarator": "extensionRegistry", "var_name": "extensionRegistry"}, {"original_string": "@Autowired\n    private TransformationEngine transformationEngine;", "modifier": "@Autowired\n    private", "type": "TransformationEngine", "declarator": "transformationEngine", "var_name": "transformationEngine"}, {"original_string": "@Autowired\n    private CompressionHandler compressionHandler;", "modifier": "@Autowired\n    private", "type": "CompressionHandler", "declarator": "compressionHandler", "var_name": "compressionHandler"}], "methods": [{"identifier": "getButterflyVersion", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getButterflyVersion()", "full_signature": "@Override public String getButterflyVersion()", "class_method_signature": "ButterflyFacadeImpl.getButterflyVersion()", "testcase": false, "constructor": false}, {"identifier": "getExtensions", "parameters": "()", "modifiers": "@Override public", "return": "List<Extension>", "signature": "List<Extension> getExtensions()", "full_signature": "@Override public List<Extension> getExtensions()", "class_method_signature": "ButterflyFacadeImpl.getExtensions()", "testcase": false, "constructor": false}, {"identifier": "automaticResolution", "parameters": "(File applicationFolder)", "modifiers": "@Override public", "return": "Optional<Class<? extends TransformationTemplate>>", "signature": "Optional<Class<? extends TransformationTemplate>> automaticResolution(File applicationFolder)", "full_signature": "@Override public Optional<Class<? extends TransformationTemplate>> automaticResolution(File applicationFolder)", "class_method_signature": "ButterflyFacadeImpl.automaticResolution(File applicationFolder)", "testcase": false, "constructor": false}, {"identifier": "newConfiguration", "parameters": "(Properties properties)", "modifiers": "@Override public", "return": "Configuration", "signature": "Configuration newConfiguration(Properties properties)", "full_signature": "@Override public Configuration newConfiguration(Properties properties)", "class_method_signature": "ButterflyFacadeImpl.newConfiguration(Properties properties)", "testcase": false, "constructor": false}, {"identifier": "newConfiguration", "parameters": "(Properties properties, boolean zipOutput)", "modifiers": "@Override public", "return": "Configuration", "signature": "Configuration newConfiguration(Properties properties, boolean zipOutput)", "full_signature": "@Override public Configuration newConfiguration(Properties properties, boolean zipOutput)", "class_method_signature": "ButterflyFacadeImpl.newConfiguration(Properties properties, boolean zipOutput)", "testcase": false, "constructor": false}, {"identifier": "newConfiguration", "parameters": "(Properties properties, File outputFolder, boolean zipOutput)", "modifiers": "@Override public", "return": "Configuration", "signature": "Configuration newConfiguration(Properties properties, File outputFolder, boolean zipOutput)", "full_signature": "@Override public Configuration newConfiguration(Properties properties, File outputFolder, boolean zipOutput)", "class_method_signature": "ButterflyFacadeImpl.newConfiguration(Properties properties, File outputFolder, boolean zipOutput)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(File applicationFolder, Class<? extends TransformationTemplate> templateClass)", "modifiers": "@Override public", "return": "CompletableFuture<TransformationResult>", "signature": "CompletableFuture<TransformationResult> transform(File applicationFolder, Class<? extends TransformationTemplate> templateClass)", "full_signature": "@Override public CompletableFuture<TransformationResult> transform(File applicationFolder, Class<? extends TransformationTemplate> templateClass)", "class_method_signature": "ButterflyFacadeImpl.transform(File applicationFolder, Class<? extends TransformationTemplate> templateClass)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(File applicationFolder, Class<? extends TransformationTemplate> templateClass, String version, Configuration configuration)", "modifiers": "@Override public", "return": "CompletableFuture<TransformationResult>", "signature": "CompletableFuture<TransformationResult> transform(File applicationFolder, Class<? extends TransformationTemplate> templateClass, String version, Configuration configuration)", "full_signature": "@Override public CompletableFuture<TransformationResult> transform(File applicationFolder, Class<? extends TransformationTemplate> templateClass, String version, Configuration configuration)", "class_method_signature": "ButterflyFacadeImpl.transform(File applicationFolder, Class<? extends TransformationTemplate> templateClass, String version, Configuration configuration)", "testcase": false, "constructor": false}, {"identifier": "getUpgradePath", "parameters": "(Class<? extends TransformationTemplate> transformationTemplate, String version)", "modifiers": "private", "return": "UpgradePath", "signature": "UpgradePath getUpgradePath(Class<? extends TransformationTemplate> transformationTemplate, String version)", "full_signature": "private UpgradePath getUpgradePath(Class<? extends TransformationTemplate> transformationTemplate, String version)", "class_method_signature": "ButterflyFacadeImpl.getUpgradePath(Class<? extends TransformationTemplate> transformationTemplate, String version)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(TransformationRequest transformationRequest)", "modifiers": "private", "return": "CompletableFuture<TransformationResult>", "signature": "CompletableFuture<TransformationResult> transform(TransformationRequest transformationRequest)", "full_signature": "private CompletableFuture<TransformationResult> transform(TransformationRequest transformationRequest)", "class_method_signature": "ButterflyFacadeImpl.transform(TransformationRequest transformationRequest)", "testcase": false, "constructor": false}, {"identifier": "getTemplate", "parameters": "(Class<? extends TransformationTemplate> templateClass)", "modifiers": "private", "return": "TransformationTemplate", "signature": "TransformationTemplate getTemplate(Class<? extends TransformationTemplate> templateClass)", "full_signature": "private TransformationTemplate getTemplate(Class<? extends TransformationTemplate> templateClass)", "class_method_signature": "ButterflyFacadeImpl.getTemplate(Class<? extends TransformationTemplate> templateClass)", "testcase": false, "constructor": false}], "file": "butterfly-core/src/main/java/com/paypal/butterfly/core/ButterflyFacadeImpl.java"}, "focal_method": {"identifier": "transform", "parameters": "(File applicationFolder, Class<? extends TransformationTemplate> templateClass)", "modifiers": "@Override public", "return": "CompletableFuture<TransformationResult>", "body": "@Override\n    public CompletableFuture<TransformationResult> transform(File applicationFolder, Class<? extends TransformationTemplate> templateClass) {\n        return transform(applicationFolder, templateClass, null, new ConfigurationImpl(null));\n    }", "signature": "CompletableFuture<TransformationResult> transform(File applicationFolder, Class<? extends TransformationTemplate> templateClass)", "full_signature": "@Override public CompletableFuture<TransformationResult> transform(File applicationFolder, Class<? extends TransformationTemplate> templateClass)", "class_method_signature": "ButterflyFacadeImpl.transform(File applicationFolder, Class<? extends TransformationTemplate> templateClass)", "testcase": false, "constructor": false, "invocations": ["transform"]}, "repository": {"repo_id": 104398040, "url": "https://github.com/paypal/butterfly", "language": "Java", "is_fork": false, "fork_count": 42, "stargazer_count": 26, "size": 6906, "license": "licensed"}}