{"test_class": {"identifier": "HtmlTextConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String BREAK_LINE = \"<br />\";", "modifier": "public static final", "type": "String", "declarator": "BREAK_LINE = \"<br />\"", "var_name": "BREAK_LINE"}], "file": "racing-car-katas/20151209-text-converter-paul-juan/src/test/java/tddmicroexercises/textconvertor/HtmlTextConverterTest.java"}, "test_case": {"identifier": "givenAnAmplisand_thenItIsEncoded", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void givenAnAmplisand_thenItIsEncoded() throws IOException {\n        HtmlTextConverter converter = new HtmlTextConverter(\"not used\");\n\n        BufferedReader reader = new BufferedReader(new StringReader(\"&\"));\n\n        assertEquals(expect(\"&amp;\"), converter.convertToHtml(reader));\n    }", "signature": "void givenAnAmplisand_thenItIsEncoded()", "full_signature": "@Test public void givenAnAmplisand_thenItIsEncoded()", "class_method_signature": "HtmlTextConverterTest.givenAnAmplisand_thenItIsEncoded()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "expect", "convertToHtml"]}, "focal_class": {"identifier": "HtmlTextConverter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String fullFilenameWithPath;", "modifier": "private", "type": "String", "declarator": "fullFilenameWithPath", "var_name": "fullFilenameWithPath"}], "methods": [{"identifier": "HtmlTextConverter", "parameters": "(String fullFilenameWithPath)", "modifiers": "public", "return": "", "signature": " HtmlTextConverter(String fullFilenameWithPath)", "full_signature": "public  HtmlTextConverter(String fullFilenameWithPath)", "class_method_signature": "HtmlTextConverter.HtmlTextConverter(String fullFilenameWithPath)", "testcase": false, "constructor": true}, {"identifier": "convertToHtml", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String convertToHtml()", "full_signature": "public String convertToHtml()", "class_method_signature": "HtmlTextConverter.convertToHtml()", "testcase": false, "constructor": false}, {"identifier": "readFileFromSystem", "parameters": "()", "modifiers": "private", "return": "BufferedReader", "signature": "BufferedReader readFileFromSystem()", "full_signature": "private BufferedReader readFileFromSystem()", "class_method_signature": "HtmlTextConverter.readFileFromSystem()", "testcase": false, "constructor": false}, {"identifier": "convertToHtml", "parameters": "(BufferedReader reader)", "modifiers": "public", "return": "String", "signature": "String convertToHtml(BufferedReader reader)", "full_signature": "public String convertToHtml(BufferedReader reader)", "class_method_signature": "HtmlTextConverter.convertToHtml(BufferedReader reader)", "testcase": false, "constructor": false}, {"identifier": "escapeHtml", "parameters": "(String input)", "modifiers": "private", "return": "String", "signature": "String escapeHtml(String input)", "full_signature": "private String escapeHtml(String input)", "class_method_signature": "HtmlTextConverter.escapeHtml(String input)", "testcase": false, "constructor": false}, {"identifier": "getFilename", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFilename()", "full_signature": "public String getFilename()", "class_method_signature": "HtmlTextConverter.getFilename()", "testcase": false, "constructor": false}], "file": "racing-car-katas/20151209-text-converter-paul-juan/src/main/java/tddmicroexercises/textconvertor/HtmlTextConverter.java"}, "focal_method": {"identifier": "convertToHtml", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String convertToHtml() throws IOException {\n        BufferedReader reader = readFileFromSystem();\n\n        return convertToHtml(reader);\n    }", "signature": "String convertToHtml()", "full_signature": "public String convertToHtml()", "class_method_signature": "HtmlTextConverter.convertToHtml()", "testcase": false, "constructor": false, "invocations": ["readFileFromSystem", "convertToHtml"]}, "repository": {"repo_id": 6509909, "url": "https://github.com/novoda/dojos", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 72, "size": 12987, "license": "licensed"}}