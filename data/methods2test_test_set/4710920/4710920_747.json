{"test_class": {"identifier": "AbstractChannelBufferTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int CAPACITY = 4096;", "modifier": "private static final", "type": "int", "declarator": "CAPACITY = 4096", "var_name": "CAPACITY"}, {"original_string": "private static final int BLOCK_SIZE = 128;", "modifier": "private static final", "type": "int", "declarator": "BLOCK_SIZE = 128", "var_name": "BLOCK_SIZE"}, {"original_string": "private long seed;", "modifier": "private", "type": "long", "declarator": "seed", "var_name": "seed"}, {"original_string": "private Random random;", "modifier": "private", "type": "Random", "declarator": "random", "var_name": "random"}, {"original_string": "private ChannelBuffer buffer;", "modifier": "private", "type": "ChannelBuffer", "declarator": "buffer", "var_name": "buffer"}], "file": "dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/buffer/AbstractChannelBufferTest.java"}, "test_case": {"identifier": "testCopy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCopy() {\n        for (int i = 0; i < buffer.capacity(); i++) {\n            byte value = (byte) random.nextInt();\n            buffer.setByte(i, value);\n        }\n\n        final int readerIndex = CAPACITY / 3;\n        final int writerIndex = CAPACITY * 2 / 3;\n        buffer.setIndex(readerIndex, writerIndex);\n\n        // Make sure all properties are copied.\n        ChannelBuffer copy = buffer.copy();\n        assertEquals(0, copy.readerIndex());\n        assertEquals(buffer.readableBytes(), copy.writerIndex());\n        assertEquals(buffer.readableBytes(), copy.capacity());\n        for (int i = 0; i < copy.capacity(); i++) {\n            assertEquals(buffer.getByte(i + readerIndex), copy.getByte(i));\n        }\n\n        // Make sure the buffer content is independent from each other.\n        buffer.setByte(readerIndex, (byte) (buffer.getByte(readerIndex) + 1));\n        assertTrue(buffer.getByte(readerIndex) != copy.getByte(0));\n        copy.setByte(1, (byte) (copy.getByte(1) + 1));\n        assertTrue(buffer.getByte(readerIndex + 1) != copy.getByte(1));\n    }", "signature": "void testCopy()", "full_signature": "@Test public void testCopy()", "class_method_signature": "AbstractChannelBufferTest.testCopy()", "testcase": true, "constructor": false, "invocations": ["capacity", "nextInt", "setByte", "setIndex", "copy", "assertEquals", "readerIndex", "assertEquals", "readableBytes", "writerIndex", "assertEquals", "readableBytes", "capacity", "capacity", "assertEquals", "getByte", "getByte", "setByte", "getByte", "assertTrue", "getByte", "getByte", "setByte", "getByte", "assertTrue", "getByte", "getByte"]}, "focal_class": {"identifier": "AbstractChannelBuffer", "superclass": "", "interfaces": "implements ChannelBuffer", "fields": [{"original_string": "private int readerIndex;", "modifier": "private", "type": "int", "declarator": "readerIndex", "var_name": "readerIndex"}, {"original_string": "private int writerIndex;", "modifier": "private", "type": "int", "declarator": "writerIndex", "var_name": "writerIndex"}, {"original_string": "private int markedReaderIndex;", "modifier": "private", "type": "int", "declarator": "markedReaderIndex", "var_name": "markedReaderIndex"}, {"original_string": "private int markedWriterIndex;", "modifier": "private", "type": "int", "declarator": "markedWriterIndex", "var_name": "markedWriterIndex"}], "methods": [{"identifier": "readerIndex", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int readerIndex()", "full_signature": "@Override public int readerIndex()", "class_method_signature": "AbstractChannelBuffer.readerIndex()", "testcase": false, "constructor": false}, {"identifier": "readerIndex", "parameters": "(int readerIndex)", "modifiers": "@Override public", "return": "void", "signature": "void readerIndex(int readerIndex)", "full_signature": "@Override public void readerIndex(int readerIndex)", "class_method_signature": "AbstractChannelBuffer.readerIndex(int readerIndex)", "testcase": false, "constructor": false}, {"identifier": "writerIndex", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int writerIndex()", "full_signature": "@Override public int writerIndex()", "class_method_signature": "AbstractChannelBuffer.writerIndex()", "testcase": false, "constructor": false}, {"identifier": "writerIndex", "parameters": "(int writerIndex)", "modifiers": "@Override public", "return": "void", "signature": "void writerIndex(int writerIndex)", "full_signature": "@Override public void writerIndex(int writerIndex)", "class_method_signature": "AbstractChannelBuffer.writerIndex(int writerIndex)", "testcase": false, "constructor": false}, {"identifier": "setIndex", "parameters": "(int readerIndex, int writerIndex)", "modifiers": "@Override public", "return": "void", "signature": "void setIndex(int readerIndex, int writerIndex)", "full_signature": "@Override public void setIndex(int readerIndex, int writerIndex)", "class_method_signature": "AbstractChannelBuffer.setIndex(int readerIndex, int writerIndex)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clear()", "full_signature": "@Override public void clear()", "class_method_signature": "AbstractChannelBuffer.clear()", "testcase": false, "constructor": false}, {"identifier": "readable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean readable()", "full_signature": "@Override public boolean readable()", "class_method_signature": "AbstractChannelBuffer.readable()", "testcase": false, "constructor": false}, {"identifier": "writable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean writable()", "full_signature": "@Override public boolean writable()", "class_method_signature": "AbstractChannelBuffer.writable()", "testcase": false, "constructor": false}, {"identifier": "readableBytes", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int readableBytes()", "full_signature": "@Override public int readableBytes()", "class_method_signature": "AbstractChannelBuffer.readableBytes()", "testcase": false, "constructor": false}, {"identifier": "writableBytes", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int writableBytes()", "full_signature": "@Override public int writableBytes()", "class_method_signature": "AbstractChannelBuffer.writableBytes()", "testcase": false, "constructor": false}, {"identifier": "markReaderIndex", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void markReaderIndex()", "full_signature": "@Override public void markReaderIndex()", "class_method_signature": "AbstractChannelBuffer.markReaderIndex()", "testcase": false, "constructor": false}, {"identifier": "resetReaderIndex", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void resetReaderIndex()", "full_signature": "@Override public void resetReaderIndex()", "class_method_signature": "AbstractChannelBuffer.resetReaderIndex()", "testcase": false, "constructor": false}, {"identifier": "markWriterIndex", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void markWriterIndex()", "full_signature": "@Override public void markWriterIndex()", "class_method_signature": "AbstractChannelBuffer.markWriterIndex()", "testcase": false, "constructor": false}, {"identifier": "resetWriterIndex", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void resetWriterIndex()", "full_signature": "@Override public void resetWriterIndex()", "class_method_signature": "AbstractChannelBuffer.resetWriterIndex()", "testcase": false, "constructor": false}, {"identifier": "discardReadBytes", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void discardReadBytes()", "full_signature": "@Override public void discardReadBytes()", "class_method_signature": "AbstractChannelBuffer.discardReadBytes()", "testcase": false, "constructor": false}, {"identifier": "ensureWritableBytes", "parameters": "(int writableBytes)", "modifiers": "@Override public", "return": "void", "signature": "void ensureWritableBytes(int writableBytes)", "full_signature": "@Override public void ensureWritableBytes(int writableBytes)", "class_method_signature": "AbstractChannelBuffer.ensureWritableBytes(int writableBytes)", "testcase": false, "constructor": false}, {"identifier": "getBytes", "parameters": "(int index, byte[] dst)", "modifiers": "@Override public", "return": "void", "signature": "void getBytes(int index, byte[] dst)", "full_signature": "@Override public void getBytes(int index, byte[] dst)", "class_method_signature": "AbstractChannelBuffer.getBytes(int index, byte[] dst)", "testcase": false, "constructor": false}, {"identifier": "getBytes", "parameters": "(int index, ChannelBuffer dst)", "modifiers": "@Override public", "return": "void", "signature": "void getBytes(int index, ChannelBuffer dst)", "full_signature": "@Override public void getBytes(int index, ChannelBuffer dst)", "class_method_signature": "AbstractChannelBuffer.getBytes(int index, ChannelBuffer dst)", "testcase": false, "constructor": false}, {"identifier": "getBytes", "parameters": "(int index, ChannelBuffer dst, int length)", "modifiers": "@Override public", "return": "void", "signature": "void getBytes(int index, ChannelBuffer dst, int length)", "full_signature": "@Override public void getBytes(int index, ChannelBuffer dst, int length)", "class_method_signature": "AbstractChannelBuffer.getBytes(int index, ChannelBuffer dst, int length)", "testcase": false, "constructor": false}, {"identifier": "setBytes", "parameters": "(int index, byte[] src)", "modifiers": "@Override public", "return": "void", "signature": "void setBytes(int index, byte[] src)", "full_signature": "@Override public void setBytes(int index, byte[] src)", "class_method_signature": "AbstractChannelBuffer.setBytes(int index, byte[] src)", "testcase": false, "constructor": false}, {"identifier": "setBytes", "parameters": "(int index, ChannelBuffer src)", "modifiers": "@Override public", "return": "void", "signature": "void setBytes(int index, ChannelBuffer src)", "full_signature": "@Override public void setBytes(int index, ChannelBuffer src)", "class_method_signature": "AbstractChannelBuffer.setBytes(int index, ChannelBuffer src)", "testcase": false, "constructor": false}, {"identifier": "setBytes", "parameters": "(int index, ChannelBuffer src, int length)", "modifiers": "@Override public", "return": "void", "signature": "void setBytes(int index, ChannelBuffer src, int length)", "full_signature": "@Override public void setBytes(int index, ChannelBuffer src, int length)", "class_method_signature": "AbstractChannelBuffer.setBytes(int index, ChannelBuffer src, int length)", "testcase": false, "constructor": false}, {"identifier": "readByte", "parameters": "()", "modifiers": "@Override public", "return": "byte", "signature": "byte readByte()", "full_signature": "@Override public byte readByte()", "class_method_signature": "AbstractChannelBuffer.readByte()", "testcase": false, "constructor": false}, {"identifier": "readBytes", "parameters": "(int length)", "modifiers": "@Override public", "return": "ChannelBuffer", "signature": "ChannelBuffer readBytes(int length)", "full_signature": "@Override public ChannelBuffer readBytes(int length)", "class_method_signature": "AbstractChannelBuffer.readBytes(int length)", "testcase": false, "constructor": false}, {"identifier": "readBytes", "parameters": "(byte[] dst, int dstIndex, int length)", "modifiers": "@Override public", "return": "void", "signature": "void readBytes(byte[] dst, int dstIndex, int length)", "full_signature": "@Override public void readBytes(byte[] dst, int dstIndex, int length)", "class_method_signature": "AbstractChannelBuffer.readBytes(byte[] dst, int dstIndex, int length)", "testcase": false, "constructor": false}, {"identifier": "readBytes", "parameters": "(byte[] dst)", "modifiers": "@Override public", "return": "void", "signature": "void readBytes(byte[] dst)", "full_signature": "@Override public void readBytes(byte[] dst)", "class_method_signature": "AbstractChannelBuffer.readBytes(byte[] dst)", "testcase": false, "constructor": false}, {"identifier": "readBytes", "parameters": "(ChannelBuffer dst)", "modifiers": "@Override public", "return": "void", "signature": "void readBytes(ChannelBuffer dst)", "full_signature": "@Override public void readBytes(ChannelBuffer dst)", "class_method_signature": "AbstractChannelBuffer.readBytes(ChannelBuffer dst)", "testcase": false, "constructor": false}, {"identifier": "readBytes", "parameters": "(ChannelBuffer dst, int length)", "modifiers": "@Override public", "return": "void", "signature": "void readBytes(ChannelBuffer dst, int length)", "full_signature": "@Override public void readBytes(ChannelBuffer dst, int length)", "class_method_signature": "AbstractChannelBuffer.readBytes(ChannelBuffer dst, int length)", "testcase": false, "constructor": false}, {"identifier": "readBytes", "parameters": "(ChannelBuffer dst, int dstIndex, int length)", "modifiers": "@Override public", "return": "void", "signature": "void readBytes(ChannelBuffer dst, int dstIndex, int length)", "full_signature": "@Override public void readBytes(ChannelBuffer dst, int dstIndex, int length)", "class_method_signature": "AbstractChannelBuffer.readBytes(ChannelBuffer dst, int dstIndex, int length)", "testcase": false, "constructor": false}, {"identifier": "readBytes", "parameters": "(ByteBuffer dst)", "modifiers": "@Override public", "return": "void", "signature": "void readBytes(ByteBuffer dst)", "full_signature": "@Override public void readBytes(ByteBuffer dst)", "class_method_signature": "AbstractChannelBuffer.readBytes(ByteBuffer dst)", "testcase": false, "constructor": false}, {"identifier": "readBytes", "parameters": "(OutputStream out, int length)", "modifiers": "@Override public", "return": "void", "signature": "void readBytes(OutputStream out, int length)", "full_signature": "@Override public void readBytes(OutputStream out, int length)", "class_method_signature": "AbstractChannelBuffer.readBytes(OutputStream out, int length)", "testcase": false, "constructor": false}, {"identifier": "skipBytes", "parameters": "(int length)", "modifiers": "@Override public", "return": "void", "signature": "void skipBytes(int length)", "full_signature": "@Override public void skipBytes(int length)", "class_method_signature": "AbstractChannelBuffer.skipBytes(int length)", "testcase": false, "constructor": false}, {"identifier": "writeByte", "parameters": "(int value)", "modifiers": "@Override public", "return": "void", "signature": "void writeByte(int value)", "full_signature": "@Override public void writeByte(int value)", "class_method_signature": "AbstractChannelBuffer.writeByte(int value)", "testcase": false, "constructor": false}, {"identifier": "writeBytes", "parameters": "(byte[] src, int srcIndex, int length)", "modifiers": "@Override public", "return": "void", "signature": "void writeBytes(byte[] src, int srcIndex, int length)", "full_signature": "@Override public void writeBytes(byte[] src, int srcIndex, int length)", "class_method_signature": "AbstractChannelBuffer.writeBytes(byte[] src, int srcIndex, int length)", "testcase": false, "constructor": false}, {"identifier": "writeBytes", "parameters": "(byte[] src)", "modifiers": "@Override public", "return": "void", "signature": "void writeBytes(byte[] src)", "full_signature": "@Override public void writeBytes(byte[] src)", "class_method_signature": "AbstractChannelBuffer.writeBytes(byte[] src)", "testcase": false, "constructor": false}, {"identifier": "writeBytes", "parameters": "(ChannelBuffer src)", "modifiers": "@Override public", "return": "void", "signature": "void writeBytes(ChannelBuffer src)", "full_signature": "@Override public void writeBytes(ChannelBuffer src)", "class_method_signature": "AbstractChannelBuffer.writeBytes(ChannelBuffer src)", "testcase": false, "constructor": false}, {"identifier": "writeBytes", "parameters": "(ChannelBuffer src, int length)", "modifiers": "@Override public", "return": "void", "signature": "void writeBytes(ChannelBuffer src, int length)", "full_signature": "@Override public void writeBytes(ChannelBuffer src, int length)", "class_method_signature": "AbstractChannelBuffer.writeBytes(ChannelBuffer src, int length)", "testcase": false, "constructor": false}, {"identifier": "writeBytes", "parameters": "(ChannelBuffer src, int srcIndex, int length)", "modifiers": "@Override public", "return": "void", "signature": "void writeBytes(ChannelBuffer src, int srcIndex, int length)", "full_signature": "@Override public void writeBytes(ChannelBuffer src, int srcIndex, int length)", "class_method_signature": "AbstractChannelBuffer.writeBytes(ChannelBuffer src, int srcIndex, int length)", "testcase": false, "constructor": false}, {"identifier": "writeBytes", "parameters": "(ByteBuffer src)", "modifiers": "@Override public", "return": "void", "signature": "void writeBytes(ByteBuffer src)", "full_signature": "@Override public void writeBytes(ByteBuffer src)", "class_method_signature": "AbstractChannelBuffer.writeBytes(ByteBuffer src)", "testcase": false, "constructor": false}, {"identifier": "writeBytes", "parameters": "(InputStream in, int length)", "modifiers": "@Override public", "return": "int", "signature": "int writeBytes(InputStream in, int length)", "full_signature": "@Override public int writeBytes(InputStream in, int length)", "class_method_signature": "AbstractChannelBuffer.writeBytes(InputStream in, int length)", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "@Override public", "return": "ChannelBuffer", "signature": "ChannelBuffer copy()", "full_signature": "@Override public ChannelBuffer copy()", "class_method_signature": "AbstractChannelBuffer.copy()", "testcase": false, "constructor": false}, {"identifier": "toByteBuffer", "parameters": "()", "modifiers": "@Override public", "return": "ByteBuffer", "signature": "ByteBuffer toByteBuffer()", "full_signature": "@Override public ByteBuffer toByteBuffer()", "class_method_signature": "AbstractChannelBuffer.toByteBuffer()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "AbstractChannelBuffer.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AbstractChannelBuffer.hashCode()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(ChannelBuffer that)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(ChannelBuffer that)", "full_signature": "@Override public int compareTo(ChannelBuffer that)", "class_method_signature": "AbstractChannelBuffer.compareTo(ChannelBuffer that)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AbstractChannelBuffer.toString()", "testcase": false, "constructor": false}, {"identifier": "checkReadableBytes", "parameters": "(int minimumReadableBytes)", "modifiers": "protected", "return": "void", "signature": "void checkReadableBytes(int minimumReadableBytes)", "full_signature": "protected void checkReadableBytes(int minimumReadableBytes)", "class_method_signature": "AbstractChannelBuffer.checkReadableBytes(int minimumReadableBytes)", "testcase": false, "constructor": false}], "file": "dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/buffer/AbstractChannelBuffer.java"}, "focal_method": {"identifier": "copy", "parameters": "()", "modifiers": "@Override public", "return": "ChannelBuffer", "body": "@Override\n    public ChannelBuffer copy() {\n        return copy(readerIndex, readableBytes());\n    }", "signature": "ChannelBuffer copy()", "full_signature": "@Override public ChannelBuffer copy()", "class_method_signature": "AbstractChannelBuffer.copy()", "testcase": false, "constructor": false, "invocations": ["copy", "readableBytes"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}