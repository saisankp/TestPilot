{"test_class": {"identifier": "OpsListenerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final QName TEST_QNAME = QName.create(\"test\", \"2015-06-12\", \"test\");", "modifier": "private static final", "type": "QName", "declarator": "TEST_QNAME = QName.create(\"test\", \"2015-06-12\", \"test\")", "var_name": "TEST_QNAME"}, {"original_string": "private static final Absolute RPC_TYPE = Absolute.of(TEST_QNAME);", "modifier": "private static final", "type": "Absolute", "declarator": "RPC_TYPE = Absolute.of(TEST_QNAME)", "var_name": "RPC_TYPE"}, {"original_string": "private static final YangInstanceIdentifier TEST_PATH =\n            YangInstanceIdentifier.create(new YangInstanceIdentifier.NodeIdentifier(TEST_QNAME));", "modifier": "private static final", "type": "YangInstanceIdentifier", "declarator": "TEST_PATH =\n            YangInstanceIdentifier.create(new YangInstanceIdentifier.NodeIdentifier(TEST_QNAME))", "var_name": "TEST_PATH"}, {"original_string": "private static final DOMRpcIdentifier RPC_ID = DOMRpcIdentifier.create(TEST_QNAME, TEST_PATH);", "modifier": "private static final", "type": "DOMRpcIdentifier", "declarator": "RPC_ID = DOMRpcIdentifier.create(TEST_QNAME, TEST_PATH)", "var_name": "RPC_ID"}, {"original_string": "private static final DOMActionInstance ACTION_INSTANCE = DOMActionInstance.of(RPC_TYPE,\n            LogicalDatastoreType.OPERATIONAL, TEST_PATH);", "modifier": "private static final", "type": "DOMActionInstance", "declarator": "ACTION_INSTANCE = DOMActionInstance.of(RPC_TYPE,\n            LogicalDatastoreType.OPERATIONAL, TEST_PATH)", "var_name": "ACTION_INSTANCE"}, {"original_string": "private static ActorSystem SYSTEM;", "modifier": "private static", "type": "ActorSystem", "declarator": "SYSTEM", "var_name": "SYSTEM"}], "file": "opendaylight/md-sal/sal-remoterpc-connector/src/test/java/org/opendaylight/controller/remote/rpc/OpsListenerTest.java"}, "test_case": {"identifier": "testRouteRemove", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRouteRemove() {\n        // Test announcements\n        final TestKit probeReg = new TestKit(SYSTEM);\n        final ActorRef rpcRegistry = probeReg.getRef();\n\n        final OpsListener opsListener = new OpsListener(rpcRegistry, rpcRegistry);\n        opsListener.onRpcUnavailable(Collections.singleton(RPC_ID));\n        probeReg.expectMsgClass(RpcRegistry.Messages.RemoveRoutes.class);\n    }", "signature": "void testRouteRemove()", "full_signature": "@Test public void testRouteRemove()", "class_method_signature": "OpsListenerTest.testRouteRemove()", "testcase": true, "constructor": false, "invocations": ["getRef", "onRpcUnavailable", "singleton", "expectMsgClass"]}, "focal_class": {"identifier": "OpsListener", "superclass": "", "interfaces": "implements DOMRpcAvailabilityListener, DOMActionAvailabilityExtension.AvailabilityListener", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(OpsListener.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(OpsListener.class)", "var_name": "LOG"}, {"original_string": "private final ActorRef rpcRegistry;", "modifier": "private final", "type": "ActorRef", "declarator": "rpcRegistry", "var_name": "rpcRegistry"}, {"original_string": "private final ActorRef actionRegistry;", "modifier": "private final", "type": "ActorRef", "declarator": "actionRegistry", "var_name": "actionRegistry"}], "methods": [{"identifier": "OpsListener", "parameters": "(final ActorRef rpcRegistry, final ActorRef actionRegistry)", "modifiers": "", "return": "", "signature": " OpsListener(final ActorRef rpcRegistry, final ActorRef actionRegistry)", "full_signature": "  OpsListener(final ActorRef rpcRegistry, final ActorRef actionRegistry)", "class_method_signature": "OpsListener.OpsListener(final ActorRef rpcRegistry, final ActorRef actionRegistry)", "testcase": false, "constructor": true}, {"identifier": "onRpcAvailable", "parameters": "(final Collection<DOMRpcIdentifier> rpcs)", "modifiers": "@Override public", "return": "void", "signature": "void onRpcAvailable(final Collection<DOMRpcIdentifier> rpcs)", "full_signature": "@Override public void onRpcAvailable(final Collection<DOMRpcIdentifier> rpcs)", "class_method_signature": "OpsListener.onRpcAvailable(final Collection<DOMRpcIdentifier> rpcs)", "testcase": false, "constructor": false}, {"identifier": "onRpcUnavailable", "parameters": "(final Collection<DOMRpcIdentifier> rpcs)", "modifiers": "@Override public", "return": "void", "signature": "void onRpcUnavailable(final Collection<DOMRpcIdentifier> rpcs)", "full_signature": "@Override public void onRpcUnavailable(final Collection<DOMRpcIdentifier> rpcs)", "class_method_signature": "OpsListener.onRpcUnavailable(final Collection<DOMRpcIdentifier> rpcs)", "testcase": false, "constructor": false}, {"identifier": "acceptsImplementation", "parameters": "(final DOMRpcImplementation impl)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean acceptsImplementation(final DOMRpcImplementation impl)", "full_signature": "@Override public boolean acceptsImplementation(final DOMRpcImplementation impl)", "class_method_signature": "OpsListener.acceptsImplementation(final DOMRpcImplementation impl)", "testcase": false, "constructor": false}, {"identifier": "acceptsImplementation", "parameters": "(final DOMActionImplementation impl)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean acceptsImplementation(final DOMActionImplementation impl)", "full_signature": "@Override public boolean acceptsImplementation(final DOMActionImplementation impl)", "class_method_signature": "OpsListener.acceptsImplementation(final DOMActionImplementation impl)", "testcase": false, "constructor": false}, {"identifier": "onActionsChanged", "parameters": "(final Set<DOMActionInstance> removed, final Set<DOMActionInstance> added)", "modifiers": "@Override public", "return": "void", "signature": "void onActionsChanged(final Set<DOMActionInstance> removed, final Set<DOMActionInstance> added)", "full_signature": "@Override public void onActionsChanged(final Set<DOMActionInstance> removed, final Set<DOMActionInstance> added)", "class_method_signature": "OpsListener.onActionsChanged(final Set<DOMActionInstance> removed, final Set<DOMActionInstance> added)", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/sal-remoterpc-connector/src/main/java/org/opendaylight/controller/remote/rpc/OpsListener.java"}, "focal_method": {"identifier": "onRpcUnavailable", "parameters": "(final Collection<DOMRpcIdentifier> rpcs)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onRpcUnavailable(final Collection<DOMRpcIdentifier> rpcs) {\n        checkArgument(rpcs != null, \"Input Collection of DOMRpcIdentifier can not be null.\");\n\n        LOG.debug(\"Removing registration for [{}]\", rpcs);\n        rpcRegistry.tell(new RemoveRoutes(rpcs), ActorRef.noSender());\n    }", "signature": "void onRpcUnavailable(final Collection<DOMRpcIdentifier> rpcs)", "full_signature": "@Override public void onRpcUnavailable(final Collection<DOMRpcIdentifier> rpcs)", "class_method_signature": "OpsListener.onRpcUnavailable(final Collection<DOMRpcIdentifier> rpcs)", "testcase": false, "constructor": false, "invocations": ["checkArgument", "debug", "tell", "noSender"]}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}