{"test_class": {"identifier": "VersionHelperTest", "superclass": "extends TestCase", "interfaces": "", "fields": [], "file": "rice-middleware/core/api/src/test/java/org/kuali/rice/core/api/util/VersionHelperTest.java"}, "test_case": {"identifier": "testUndefined", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUndefined() {\n        assertEquals(VersionHelper.compareVersion(\"undefined\", \"2.1.3-snapshot\"), -1);\n        assertEquals(VersionHelper.compareVersion(\"2.1.3\", \"undefined\"), -1);\n\n    }", "signature": "void testUndefined()", "full_signature": "@Test public void testUndefined()", "class_method_signature": "VersionHelperTest.testUndefined()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "compareVersion", "assertEquals", "compareVersion"]}, "focal_class": {"identifier": "VersionHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern extractVersion = Pattern.compile(\"(\\\\D*)((\\\\d*\\\\.?)+)(\\\\S*)\");", "modifier": "private static final", "type": "Pattern", "declarator": "extractVersion = Pattern.compile(\"(\\\\D*)((\\\\d*\\\\.?)+)(\\\\S*)\")", "var_name": "extractVersion"}, {"original_string": "private static final Pattern splitVersion = Pattern.compile(\"\\\\.\");", "modifier": "private static final", "type": "Pattern", "declarator": "splitVersion = Pattern.compile(\"\\\\.\")", "var_name": "splitVersion"}], "methods": [{"identifier": "compareVersion", "parameters": "(String versionOne, String versionTwo)", "modifiers": "public static", "return": "int", "signature": "int compareVersion(String versionOne, String versionTwo)", "full_signature": "public static int compareVersion(String versionOne, String versionTwo)", "class_method_signature": "VersionHelper.compareVersion(String versionOne, String versionTwo)", "testcase": false, "constructor": false}, {"identifier": "compareVersionInt", "parameters": "(String versionOne, String versionTwo)", "modifiers": "private static", "return": "int", "signature": "int compareVersionInt(String versionOne, String versionTwo)", "full_signature": "private static int compareVersionInt(String versionOne, String versionTwo)", "class_method_signature": "VersionHelper.compareVersionInt(String versionOne, String versionTwo)", "testcase": false, "constructor": false}], "file": "rice-middleware/core/api/src/main/java/org/kuali/rice/core/api/util/VersionHelper.java"}, "focal_method": {"identifier": "compareVersion", "parameters": "(String versionOne, String versionTwo)", "modifiers": "public static", "return": "int", "body": "public static int compareVersion(String versionOne, String versionTwo) {\n        try {\n            return compareVersionInt(versionOne, versionTwo);\n        } catch (IllegalArgumentException iae) {\n               return -1;\n        }\n\n    }", "signature": "int compareVersion(String versionOne, String versionTwo)", "full_signature": "public static int compareVersion(String versionOne, String versionTwo)", "class_method_signature": "VersionHelper.compareVersion(String versionOne, String versionTwo)", "testcase": false, "constructor": false, "invocations": ["compareVersionInt"]}, "repository": {"repo_id": 25359676, "url": "https://github.com/kuali/rice", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 16, "size": 289156, "license": "licensed"}}