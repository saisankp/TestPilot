{"test_class": {"identifier": "IssuesImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Janbanery janbanery;", "modifier": "", "type": "Janbanery", "declarator": "janbanery", "var_name": "janbanery"}], "file": "janbanery-core/src/test/java/pl/project13/janbanery/core/dao/IssuesImplTest.java"}, "test_case": {"identifier": "testById", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testById() throws Exception {\n    // given\n    Task task = TestEntityHelper.createTestTaskFlow(janbanery).get();\n    IssuesFlow issuesFlow = janbanery.issues().of(task);\n    Issue issue = issuesFlow.create(TestEntityHelper.createTestIssue()).get();\n\n    // when\n    Long createdTasksId = issue.getId();\n    Issue fetchedIssue = janbanery.issues().of(task).byId(createdTasksId).get();\n\n    // then\n    assertThat(fetchedIssue.getId()).isEqualTo(issue.getId());\n    assertThat(fetchedIssue).isEqualTo(issue);\n  }", "signature": "void testById()", "full_signature": "@Test public void testById()", "class_method_signature": "IssuesImplTest.testById()", "testcase": true, "constructor": false, "invocations": ["get", "createTestTaskFlow", "of", "issues", "get", "create", "createTestIssue", "getId", "get", "byId", "of", "issues", "isEqualTo", "assertThat", "getId", "getId", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "IssuesImpl", "superclass": "", "interfaces": "implements Issues", "fields": [{"original_string": "private Configuration conf;", "modifier": "private", "type": "Configuration", "declarator": "conf", "var_name": "conf"}, {"original_string": "private RestClient restClient;", "modifier": "private", "type": "RestClient", "declarator": "restClient", "var_name": "restClient"}, {"original_string": "private Workspace currentWorkspace;", "modifier": "private", "type": "Workspace", "declarator": "currentWorkspace", "var_name": "currentWorkspace"}], "methods": [{"identifier": "IssuesImpl", "parameters": "(Configuration conf, RestClient restClient)", "modifiers": "public", "return": "", "signature": " IssuesImpl(Configuration conf, RestClient restClient)", "full_signature": "public  IssuesImpl(Configuration conf, RestClient restClient)", "class_method_signature": "IssuesImpl.IssuesImpl(Configuration conf, RestClient restClient)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(Task task, Issue issue)", "modifiers": "@Override public", "return": "IssueFlow", "signature": "IssueFlow create(Task task, Issue issue)", "full_signature": "@Override public IssueFlow create(Task task, Issue issue)", "class_method_signature": "IssuesImpl.create(Task task, Issue issue)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Issue issue, Issue newValues)", "modifiers": "@Override public", "return": "IssueFlow", "signature": "IssueFlow update(Issue issue, Issue newValues)", "full_signature": "@Override public IssueFlow update(Issue issue, Issue newValues)", "class_method_signature": "IssuesImpl.update(Issue issue, Issue newValues)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Issue issue)", "modifiers": "@Override public", "return": "void", "signature": "void delete(Issue issue)", "full_signature": "@Override public void delete(Issue issue)", "class_method_signature": "IssuesImpl.delete(Issue issue)", "testcase": false, "constructor": false}, {"identifier": "all", "parameters": "(Task task)", "modifiers": "@Override public", "return": "List<Issue>", "signature": "List<Issue> all(Task task)", "full_signature": "@Override public List<Issue> all(Task task)", "class_method_signature": "IssuesImpl.all(Task task)", "testcase": false, "constructor": false}, {"identifier": "byId", "parameters": "(Long id)", "modifiers": "@Override public", "return": "IssueFlow", "signature": "IssueFlow byId(Long id)", "full_signature": "@Override public IssueFlow byId(Long id)", "class_method_signature": "IssuesImpl.byId(Long id)", "testcase": false, "constructor": false}, {"identifier": "getIssueUrl", "parameters": "(Issue issue)", "modifiers": "private", "return": "String", "signature": "String getIssueUrl(Issue issue)", "full_signature": "private String getIssueUrl(Issue issue)", "class_method_signature": "IssuesImpl.getIssueUrl(Issue issue)", "testcase": false, "constructor": false}, {"identifier": "getIssueUrl", "parameters": "(Long issueId)", "modifiers": "private", "return": "String", "signature": "String getIssueUrl(Long issueId)", "full_signature": "private String getIssueUrl(Long issueId)", "class_method_signature": "IssuesImpl.getIssueUrl(Long issueId)", "testcase": false, "constructor": false}, {"identifier": "getIssuesUrl", "parameters": "(Task task)", "modifiers": "private", "return": "String", "signature": "String getIssuesUrl(Task task)", "full_signature": "private String getIssuesUrl(Task task)", "class_method_signature": "IssuesImpl.getIssuesUrl(Task task)", "testcase": false, "constructor": false}, {"identifier": "using", "parameters": "(Workspace currentWorkspace)", "modifiers": "public", "return": "Issues", "signature": "Issues using(Workspace currentWorkspace)", "full_signature": "public Issues using(Workspace currentWorkspace)", "class_method_signature": "IssuesImpl.using(Workspace currentWorkspace)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(Task task)", "modifiers": "@Override public", "return": "IssuesFlow", "signature": "IssuesFlow of(Task task)", "full_signature": "@Override public IssuesFlow of(Task task)", "class_method_signature": "IssuesImpl.of(Task task)", "testcase": false, "constructor": false}], "file": "janbanery-core/src/main/java/pl/project13/janbanery/core/dao/IssuesImpl.java"}, "focal_method": {"identifier": "byId", "parameters": "(Long id)", "modifiers": "@Override public", "return": "IssueFlow", "body": "@Override\n  public IssueFlow byId(Long id) {\n    String url = getIssueUrl(id);\n\n    Issue issue = restClient.doGet(url, GsonTypeTokens.ISSUE);\n\n    return new IssueFlowImpl(this, issue);\n  }", "signature": "IssueFlow byId(Long id)", "full_signature": "@Override public IssueFlow byId(Long id)", "class_method_signature": "IssuesImpl.byId(Long id)", "testcase": false, "constructor": false, "invocations": ["getIssueUrl", "doGet"]}, "repository": {"repo_id": 1641128, "url": "https://github.com/ktoso/janbanery", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 9, "size": 2250, "license": "licensed"}}