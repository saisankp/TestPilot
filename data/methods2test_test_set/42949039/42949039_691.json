{"test_class": {"identifier": "ActivitiRuntimeHelperTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private ActivitiRuntimeHelper activitiRuntimeHelper;", "modifier": "@InjectMocks\n    private", "type": "ActivitiRuntimeHelper", "declarator": "activitiRuntimeHelper", "var_name": "activitiRuntimeHelper"}, {"original_string": "@Mock\n    private RuntimeService runtimeService;", "modifier": "@Mock\n    private", "type": "RuntimeService", "declarator": "runtimeService", "var_name": "runtimeService"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/activiti/ActivitiRuntimeHelperTest.java"}, "test_case": {"identifier": "testSetTaskErrorInWorkflow", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetTaskErrorInWorkflow()\n    {\n        // Create variables required for testing.\n        final String currentActivityId = ACTIVITI_ID;\n        final String executionId = ACTIVITI_ID_2;\n        final String statusTaskWorkflowVariableName =\n            activitiRuntimeHelper.buildTaskWorkflowVariableName(currentActivityId, ActivitiRuntimeHelper.VARIABLE_STATUS);\n        final String errorMessageTaskWorkflowVariableName =\n            activitiRuntimeHelper.buildTaskWorkflowVariableName(currentActivityId, ActivitiRuntimeHelper.VARIABLE_ERROR_MESSAGE);\n\n        // Create an exception.\n        Exception exception = new Exception(ERROR_CODE);\n\n        // Mock dependencies.\n        DelegateExecution execution = mock(DelegateExecution.class);\n        when(execution.getCurrentActivityId()).thenReturn(currentActivityId);\n        when(execution.getId()).thenReturn(executionId);\n\n        // Call the method under test.\n        activitiRuntimeHelper.setTaskErrorInWorkflow(execution, ERROR_MESSAGE, exception);\n\n        // Verify the calls.\n        verify(execution, times(3)).getCurrentActivityId();\n        verify(execution, times(3)).getId();\n        verify(runtimeService, times(2)).getVariables(executionId);\n        verify(runtimeService).setVariable(executionId, statusTaskWorkflowVariableName, ActivitiRuntimeHelper.TASK_STATUS_ERROR);\n        verify(runtimeService).setVariable(executionId, errorMessageTaskWorkflowVariableName, ERROR_MESSAGE);\n        verifyNoMoreInteractions(execution, runtimeService);\n    }", "signature": "void testSetTaskErrorInWorkflow()", "full_signature": "@Test public void testSetTaskErrorInWorkflow()", "class_method_signature": "ActivitiRuntimeHelperTest.testSetTaskErrorInWorkflow()", "testcase": true, "constructor": false, "invocations": ["buildTaskWorkflowVariableName", "buildTaskWorkflowVariableName", "mock", "thenReturn", "when", "getCurrentActivityId", "thenReturn", "when", "getId", "setTaskErrorInWorkflow", "getCurrentActivityId", "verify", "times", "getId", "verify", "times", "getVariables", "verify", "times", "setVariable", "verify", "setVariable", "verify", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "ActivitiRuntimeHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ActivitiRuntimeHelper.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ActivitiRuntimeHelper.class)", "var_name": "LOGGER"}, {"original_string": "public static final String VARIABLE_STATUS = \"taskStatus\";", "modifier": "public static final", "type": "String", "declarator": "VARIABLE_STATUS = \"taskStatus\"", "var_name": "VARIABLE_STATUS"}, {"original_string": "public static final String VARIABLE_ERROR_MESSAGE = \"taskErrorMessage\";", "modifier": "public static final", "type": "String", "declarator": "VARIABLE_ERROR_MESSAGE = \"taskErrorMessage\"", "var_name": "VARIABLE_ERROR_MESSAGE"}, {"original_string": "public static final String TASK_STATUS_SUCCESS = \"SUCCESS\";", "modifier": "public static final", "type": "String", "declarator": "TASK_STATUS_SUCCESS = \"SUCCESS\"", "var_name": "TASK_STATUS_SUCCESS"}, {"original_string": "public static final String TASK_STATUS_ERROR = \"ERROR\";", "modifier": "public static final", "type": "String", "declarator": "TASK_STATUS_ERROR = \"ERROR\"", "var_name": "TASK_STATUS_ERROR"}, {"original_string": "public static final String TASK_VARIABLE_MARKER = \"_\";", "modifier": "public static final", "type": "String", "declarator": "TASK_VARIABLE_MARKER = \"_\"", "var_name": "TASK_VARIABLE_MARKER"}, {"original_string": "@Autowired\n    private RuntimeService runtimeService;", "modifier": "@Autowired\n    private", "type": "RuntimeService", "declarator": "runtimeService", "var_name": "runtimeService"}], "methods": [{"identifier": "signal", "parameters": "(String processInstanceId, String signalTaskId)", "modifiers": "public", "return": "void", "signature": "void signal(String processInstanceId, String signalTaskId)", "full_signature": "public void signal(String processInstanceId, String signalTaskId)", "class_method_signature": "ActivitiRuntimeHelper.signal(String processInstanceId, String signalTaskId)", "testcase": false, "constructor": false}, {"identifier": "setTaskWorkflowVariable", "parameters": "(String executionId, String activitiId, String variableName, Object variableValue)", "modifiers": "public", "return": "void", "signature": "void setTaskWorkflowVariable(String executionId, String activitiId, String variableName, Object variableValue)", "full_signature": "public void setTaskWorkflowVariable(String executionId, String activitiId, String variableName, Object variableValue)", "class_method_signature": "ActivitiRuntimeHelper.setTaskWorkflowVariable(String executionId, String activitiId, String variableName, Object variableValue)", "testcase": false, "constructor": false}, {"identifier": "setTaskWorkflowVariable", "parameters": "(DelegateExecution execution, String variableName, Object variableValue)", "modifiers": "public", "return": "void", "signature": "void setTaskWorkflowVariable(DelegateExecution execution, String variableName, Object variableValue)", "full_signature": "public void setTaskWorkflowVariable(DelegateExecution execution, String variableName, Object variableValue)", "class_method_signature": "ActivitiRuntimeHelper.setTaskWorkflowVariable(DelegateExecution execution, String variableName, Object variableValue)", "testcase": false, "constructor": false}, {"identifier": "setTaskSuccessInWorkflow", "parameters": "(DelegateExecution execution)", "modifiers": "public", "return": "void", "signature": "void setTaskSuccessInWorkflow(DelegateExecution execution)", "full_signature": "public void setTaskSuccessInWorkflow(DelegateExecution execution)", "class_method_signature": "ActivitiRuntimeHelper.setTaskSuccessInWorkflow(DelegateExecution execution)", "testcase": false, "constructor": false}, {"identifier": "setTaskErrorInWorkflow", "parameters": "(DelegateExecution execution, String errorMessage, Exception exception)", "modifiers": "public", "return": "void", "signature": "void setTaskErrorInWorkflow(DelegateExecution execution, String errorMessage, Exception exception)", "full_signature": "public void setTaskErrorInWorkflow(DelegateExecution execution, String errorMessage, Exception exception)", "class_method_signature": "ActivitiRuntimeHelper.setTaskErrorInWorkflow(DelegateExecution execution, String errorMessage, Exception exception)", "testcase": false, "constructor": false}, {"identifier": "buildTaskWorkflowVariableName", "parameters": "(String activitiId, String variableName)", "modifiers": "public", "return": "String", "signature": "String buildTaskWorkflowVariableName(String activitiId, String variableName)", "full_signature": "public String buildTaskWorkflowVariableName(String activitiId, String variableName)", "class_method_signature": "ActivitiRuntimeHelper.buildTaskWorkflowVariableName(String activitiId, String variableName)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/activiti/ActivitiRuntimeHelper.java"}, "focal_method": {"identifier": "setTaskErrorInWorkflow", "parameters": "(DelegateExecution execution, String errorMessage, Exception exception)", "modifiers": "public", "return": "void", "body": "public void setTaskErrorInWorkflow(DelegateExecution execution, String errorMessage, Exception exception)\n    {\n        setTaskWorkflowVariable(execution, VARIABLE_STATUS, TASK_STATUS_ERROR);\n        setTaskWorkflowVariable(execution, VARIABLE_ERROR_MESSAGE, errorMessage);\n        if (exception != null)\n        {\n            LOGGER.warn(\"Workflow encountered an error. Logging stack trace in case it is needed to debug an issue. \" +\n                \"activitiCurrentActivityId=\\\"{}\\\" activitiExecutionId=\\\"{}\\\"\", execution.getCurrentActivityId(), execution.getId(), exception);\n            // TODO: Remove this logging statement above and set a workflow variable with the stack trace instead.\n            // setTaskWorkflowVariable(execution, \"taskErrorStackTrace\", ExceptionUtils.getStackTrace(exception));\n        }\n    }", "signature": "void setTaskErrorInWorkflow(DelegateExecution execution, String errorMessage, Exception exception)", "full_signature": "public void setTaskErrorInWorkflow(DelegateExecution execution, String errorMessage, Exception exception)", "class_method_signature": "ActivitiRuntimeHelper.setTaskErrorInWorkflow(DelegateExecution execution, String errorMessage, Exception exception)", "testcase": false, "constructor": false, "invocations": ["setTaskWorkflowVariable", "setTaskWorkflowVariable", "warn", "getCurrentActivityId", "getId"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}