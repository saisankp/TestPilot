{"test_class": {"identifier": "GenericMigrationWrapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final File TEST_FILE_PATH = new File(\n\t    \"tests/test-files/images/vector/dia\");", "modifier": "private static final", "type": "File", "declarator": "TEST_FILE_PATH = new File(\n\t    \"tests/test-files/images/vector/dia\")", "var_name": "TEST_FILE_PATH"}, {"original_string": "private static final String TEST_FILE_NAME = \"Arrows_doublestraight_arrow2.dia\";", "modifier": "private static final", "type": "String", "declarator": "TEST_FILE_NAME = \"Arrows_doublestraight_arrow2.dia\"", "var_name": "TEST_FILE_NAME"}, {"original_string": "private final URI sourceFormatURI;", "modifier": "private final", "type": "URI", "declarator": "sourceFormatURI", "var_name": "sourceFormatURI"}, {"original_string": "private final URI destinationFormatURI;", "modifier": "private final", "type": "URI", "declarator": "destinationFormatURI", "var_name": "destinationFormatURI"}, {"original_string": "private GenericMigrationWrapper genericWrapper;", "modifier": "private", "type": "GenericMigrationWrapper", "declarator": "genericWrapper", "var_name": "genericWrapper"}, {"original_string": "final List<Parameter> testParameters = new ArrayList<Parameter>();", "modifier": "final", "type": "List<Parameter>", "declarator": "testParameters = new ArrayList<Parameter>()", "var_name": "testParameters"}], "file": "framework/generic/src/test/java/eu/planets_project/ifr/core/services/migration/genericwrapper1/GenericMigrationWrapperTest.java"}, "test_case": {"identifier": "testDescribe", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDescribe() {\n\tServiceDescription sb = this.genericWrapper.describe();\n\tassertNotNull(sb);\n    }", "signature": "void testDescribe()", "full_signature": "@Test public void testDescribe()", "class_method_signature": "GenericMigrationWrapperTest.testDescribe()", "testcase": true, "constructor": false, "invocations": ["describe", "assertNotNull"]}, "focal_class": {"identifier": "GenericMigrationWrapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Logger log = Logger.getLogger(GenericMigrationWrapper.class.getName());", "modifier": "private", "type": "Logger", "declarator": "log = Logger.getLogger(GenericMigrationWrapper.class.getName())", "var_name": "log"}, {"original_string": "private MigrationPaths migrationPaths;", "modifier": "private", "type": "MigrationPaths", "declarator": "migrationPaths", "var_name": "migrationPaths"}, {"original_string": "private ServiceDescription serviceDescription;", "modifier": "private", "type": "ServiceDescription", "declarator": "serviceDescription", "var_name": "serviceDescription"}, {"original_string": "private boolean returnByReference;", "modifier": "private", "type": "boolean", "declarator": "returnByReference", "var_name": "returnByReference"}], "methods": [{"identifier": "GenericMigrationWrapper", "parameters": "(Document configuration, String canonicalName)", "modifiers": "public", "return": "", "signature": " GenericMigrationWrapper(Document configuration, String canonicalName)", "full_signature": "public  GenericMigrationWrapper(Document configuration, String canonicalName)", "class_method_signature": "GenericMigrationWrapper.GenericMigrationWrapper(Document configuration, String canonicalName)", "testcase": false, "constructor": true}, {"identifier": "migrate", "parameters": "(DigitalObject sourceObject, URI sourceFormat,\n                                 URI destinationFormat, List<Parameter> toolParameters)", "modifiers": "public", "return": "MigrateResult", "signature": "MigrateResult migrate(DigitalObject sourceObject, URI sourceFormat,\n                                 URI destinationFormat, List<Parameter> toolParameters)", "full_signature": "public MigrateResult migrate(DigitalObject sourceObject, URI sourceFormat,\n                                 URI destinationFormat, List<Parameter> toolParameters)", "class_method_signature": "GenericMigrationWrapper.migrate(DigitalObject sourceObject, URI sourceFormat,\n                                 URI destinationFormat, List<Parameter> toolParameters)", "testcase": false, "constructor": false}, {"identifier": "handleTempDestinationFile", "parameters": "(MigrationPath migrationPath,\n                                           File workfolder)", "modifiers": "private", "return": "void", "signature": "void handleTempDestinationFile(MigrationPath migrationPath,\n                                           File workfolder)", "full_signature": "private void handleTempDestinationFile(MigrationPath migrationPath,\n                                           File workfolder)", "class_method_signature": "GenericMigrationWrapper.handleTempDestinationFile(MigrationPath migrationPath,\n                                           File workfolder)", "testcase": false, "constructor": false}, {"identifier": "handleTempSourceFile", "parameters": "(MigrationPath migrationPath,\n                                      DigitalObject sourceObject,\n                                      File workfolder)", "modifiers": "private", "return": "void", "signature": "void handleTempSourceFile(MigrationPath migrationPath,\n                                      DigitalObject sourceObject,\n                                      File workfolder)", "full_signature": "private void handleTempSourceFile(MigrationPath migrationPath,\n                                      DigitalObject sourceObject,\n                                      File workfolder)", "class_method_signature": "GenericMigrationWrapper.handleTempSourceFile(MigrationPath migrationPath,\n                                      DigitalObject sourceObject,\n                                      File workfolder)", "testcase": false, "constructor": false}, {"identifier": "handleTempfiles", "parameters": "(MigrationPath migrationPath)", "modifiers": "private", "return": "File", "signature": "File handleTempfiles(MigrationPath migrationPath)", "full_signature": "private File handleTempfiles(MigrationPath migrationPath)", "class_method_signature": "GenericMigrationWrapper.handleTempfiles(MigrationPath migrationPath)", "testcase": false, "constructor": false}, {"identifier": "createTemp", "parameters": "(File workfolder, TempFile tempfile)", "modifiers": "private", "return": "File", "signature": "File createTemp(File workfolder, TempFile tempfile)", "full_signature": "private File createTemp(File workfolder, TempFile tempfile)", "class_method_signature": "GenericMigrationWrapper.createTemp(File workfolder, TempFile tempfile)", "testcase": false, "constructor": false}, {"identifier": "describe", "parameters": "()", "modifiers": "public", "return": "ServiceDescription", "signature": "ServiceDescription describe()", "full_signature": "public ServiceDescription describe()", "class_method_signature": "GenericMigrationWrapper.describe()", "testcase": false, "constructor": false}, {"identifier": "executeToolProcess", "parameters": "(ProcessRunner toolProcessRunner,\n                                             List<String> command, InputStream processStandardInput)", "modifiers": "private", "return": "ServiceReport", "signature": "ServiceReport executeToolProcess(ProcessRunner toolProcessRunner,\n                                             List<String> command, InputStream processStandardInput)", "full_signature": "private ServiceReport executeToolProcess(ProcessRunner toolProcessRunner,\n                                             List<String> command, InputStream processStandardInput)", "class_method_signature": "GenericMigrationWrapper.executeToolProcess(ProcessRunner toolProcessRunner,\n                                             List<String> command, InputStream processStandardInput)", "testcase": false, "constructor": false}], "file": "framework/generic/src/main/java/eu/planets_project/ifr/core/services/migration/genericwrapper1/GenericMigrationWrapper.java"}, "focal_method": {"identifier": "describe", "parameters": "()", "modifiers": "public", "return": "ServiceDescription", "body": "public ServiceDescription describe(){\n        return serviceDescription;\n    }", "signature": "ServiceDescription describe()", "full_signature": "public ServiceDescription describe()", "class_method_signature": "GenericMigrationWrapper.describe()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1025030, "url": "https://github.com/opf-labs/planets-suite", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 9, "size": 198462, "license": "licensed"}}