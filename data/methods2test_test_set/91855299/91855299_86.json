{"test_class": {"identifier": "NumberArrayAdapterTest", "superclass": "extends AbstractAdapterTest<double[]>", "interfaces": "", "fields": [], "file": "api/src/test/java/edu/wpi/first/shuffleboard/api/sources/recording/serialization/NumberArrayAdapterTest.java"}, "test_case": {"identifier": "testDecodeEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDecodeEmpty() {\n    byte[] buffer = {0, 0, 0, 0};\n    double[] expected = {};\n    assertArrayEquals(expected, adapter.deserialize(buffer, 0));\n  }", "signature": "void testDecodeEmpty()", "full_signature": "@Test public void testDecodeEmpty()", "class_method_signature": "NumberArrayAdapterTest.testDecodeEmpty()", "testcase": true, "constructor": false, "invocations": ["assertArrayEquals", "deserialize"]}, "focal_class": {"identifier": "NumberArrayAdapter", "superclass": "extends TypeAdapter<double[]>", "interfaces": "", "fields": [], "methods": [{"identifier": "NumberArrayAdapter", "parameters": "()", "modifiers": "public", "return": "", "signature": " NumberArrayAdapter()", "full_signature": "public  NumberArrayAdapter()", "class_method_signature": "NumberArrayAdapter.NumberArrayAdapter()", "testcase": false, "constructor": true}, {"identifier": "serialize", "parameters": "(double[] array)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] serialize(double[] array)", "full_signature": "@Override public byte[] serialize(double[] array)", "class_method_signature": "NumberArrayAdapter.serialize(double[] array)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(byte[] buffer, int bufferPosition)", "modifiers": "@Override public", "return": "double[]", "signature": "double[] deserialize(byte[] buffer, int bufferPosition)", "full_signature": "@Override public double[] deserialize(byte[] buffer, int bufferPosition)", "class_method_signature": "NumberArrayAdapter.deserialize(byte[] buffer, int bufferPosition)", "testcase": false, "constructor": false}, {"identifier": "getSerializedSize", "parameters": "(double[] value)", "modifiers": "@Override public", "return": "int", "signature": "int getSerializedSize(double[] value)", "full_signature": "@Override public int getSerializedSize(double[] value)", "class_method_signature": "NumberArrayAdapter.getSerializedSize(double[] value)", "testcase": false, "constructor": false}], "file": "api/src/main/java/edu/wpi/first/shuffleboard/api/sources/recording/serialization/NumberArrayAdapter.java"}, "focal_method": {"identifier": "deserialize", "parameters": "(byte[] buffer, int bufferPosition)", "modifiers": "@Override public", "return": "double[]", "body": "@Override\n  public double[] deserialize(byte[] buffer, int bufferPosition) {\n    int cursor = bufferPosition;\n    int length = Serialization.readInt(buffer, cursor);\n    cursor += Serialization.SIZE_OF_INT;\n    double[] doubleArray = new double[length];\n    for (int i = 0; i < length; i++) {\n      double val = Serialization.readDouble(buffer, cursor);\n      doubleArray[i] = val;\n      cursor += Serialization.SIZE_OF_DOUBLE;\n    }\n    return doubleArray;\n\n  }", "signature": "double[] deserialize(byte[] buffer, int bufferPosition)", "full_signature": "@Override public double[] deserialize(byte[] buffer, int bufferPosition)", "class_method_signature": "NumberArrayAdapter.deserialize(byte[] buffer, int bufferPosition)", "testcase": false, "constructor": false, "invocations": ["readInt", "readDouble"]}, "repository": {"repo_id": 91855299, "url": "https://github.com/wpilibsuite/shuffleboard", "stars": 52, "created": "5/20/2017 12:38:25 AM +00:00", "updates": "2020-01-23T20:11:35+00:00", "fork": "False", "license": "licensed"}}