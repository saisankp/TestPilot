{"test_class": {"identifier": "ObjectClassTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/ldaptive/schema/ObjectClassTest.java"}, "test_case": {"identifier": "parse", "parameters": "(final ObjectClass objectClass, final String definition)", "modifiers": "@Test(groups = \"schema\", dataProvider = \"definitions\") public", "return": "void", "body": "@Test(groups = \"schema\", dataProvider = \"definitions\")\n  public void parse(final ObjectClass objectClass, final String definition)\n    throws Exception\n  {\n    final ObjectClass parsed = ObjectClass.parse(definition);\n    Assert.assertEquals(objectClass, parsed);\n    Assert.assertEquals(definition, parsed.format());\n    Assert.assertEquals(objectClass.format(), parsed.format());\n  }", "signature": "void parse(final ObjectClass objectClass, final String definition)", "full_signature": "@Test(groups = \"schema\", dataProvider = \"definitions\") public void parse(final ObjectClass objectClass, final String definition)", "class_method_signature": "ObjectClassTest.parse(final ObjectClass objectClass, final String definition)", "testcase": true, "constructor": false, "invocations": ["parse", "assertEquals", "assertEquals", "format", "assertEquals", "format", "format"]}, "focal_class": {"identifier": "ObjectClass", "superclass": "extends AbstractNamedSchemaElement", "interfaces": "", "fields": [{"original_string": "private static final int HASH_CODE_SEED = 1109;", "modifier": "private static final", "type": "int", "declarator": "HASH_CODE_SEED = 1109", "var_name": "HASH_CODE_SEED"}, {"original_string": "private static final Pattern DEFINITION_PATTERN = Pattern.compile(\n    WSP_REGEX + \"\\\\(\" +\n      WSP_REGEX + \"(\" + NO_WSP_REGEX + \")\" +\n      WSP_REGEX + \"(?:NAME (?:'([^']+)'|\\\\(([^\\\\)]+)\\\\)))?\" +\n      WSP_REGEX + \"(?:DESC '([^']*)')?\" +\n      WSP_REGEX + \"(OBSOLETE)?\" +\n      WSP_REGEX + \"(?:SUP (?:(\" + NO_WSP_REGEX + \")|\\\\(([^\\\\)]+)\\\\)))?\" +\n      WSP_REGEX + \"(\\\\p{Alpha}+)?\" +\n      WSP_REGEX + \"(?:MUST (?:(\" + NO_WSP_REGEX + \")|\\\\(([^\\\\)]+)\\\\)))?\" +\n      WSP_REGEX + \"(?:MAY (?:(\" + NO_WSP_REGEX + \")|\\\\(([^\\\\)]+)\\\\)))?\" +\n      WSP_REGEX + \"(?:(X-[^ ]+.*))?\" +\n      WSP_REGEX + \"\\\\)\" + WSP_REGEX);", "modifier": "private static final", "type": "Pattern", "declarator": "DEFINITION_PATTERN = Pattern.compile(\n    WSP_REGEX + \"\\\\(\" +\n      WSP_REGEX + \"(\" + NO_WSP_REGEX + \")\" +\n      WSP_REGEX + \"(?:NAME (?:'([^']+)'|\\\\(([^\\\\)]+)\\\\)))?\" +\n      WSP_REGEX + \"(?:DESC '([^']*)')?\" +\n      WSP_REGEX + \"(OBSOLETE)?\" +\n      WSP_REGEX + \"(?:SUP (?:(\" + NO_WSP_REGEX + \")|\\\\(([^\\\\)]+)\\\\)))?\" +\n      WSP_REGEX + \"(\\\\p{Alpha}+)?\" +\n      WSP_REGEX + \"(?:MUST (?:(\" + NO_WSP_REGEX + \")|\\\\(([^\\\\)]+)\\\\)))?\" +\n      WSP_REGEX + \"(?:MAY (?:(\" + NO_WSP_REGEX + \")|\\\\(([^\\\\)]+)\\\\)))?\" +\n      WSP_REGEX + \"(?:(X-[^ ]+.*))?\" +\n      WSP_REGEX + \"\\\\)\" + WSP_REGEX)", "var_name": "DEFINITION_PATTERN"}, {"original_string": "private final String oid;", "modifier": "private final", "type": "String", "declarator": "oid", "var_name": "oid"}, {"original_string": "private String[] superiorClasses;", "modifier": "private", "type": "String[]", "declarator": "superiorClasses", "var_name": "superiorClasses"}, {"original_string": "private ObjectClassType objectClassType;", "modifier": "private", "type": "ObjectClassType", "declarator": "objectClassType", "var_name": "objectClassType"}, {"original_string": "private String[] requiredAttributes;", "modifier": "private", "type": "String[]", "declarator": "requiredAttributes", "var_name": "requiredAttributes"}, {"original_string": "private String[] optionalAttributes;", "modifier": "private", "type": "String[]", "declarator": "optionalAttributes", "var_name": "optionalAttributes"}], "methods": [{"identifier": "ObjectClass", "parameters": "(final String s)", "modifiers": "public", "return": "", "signature": " ObjectClass(final String s)", "full_signature": "public  ObjectClass(final String s)", "class_method_signature": "ObjectClass.ObjectClass(final String s)", "testcase": false, "constructor": true}, {"identifier": "ObjectClass", "parameters": "(\n    final String oid,\n    final String[] names,\n    final String description,\n    final boolean obsolete,\n    final String[] superiorClasses,\n    final ObjectClassType objectClassType,\n    final String[] requiredAttributes,\n    final String[] optionalAttributes,\n    final Extensions extensions)", "modifiers": "public", "return": "", "signature": " ObjectClass(\n    final String oid,\n    final String[] names,\n    final String description,\n    final boolean obsolete,\n    final String[] superiorClasses,\n    final ObjectClassType objectClassType,\n    final String[] requiredAttributes,\n    final String[] optionalAttributes,\n    final Extensions extensions)", "full_signature": "public  ObjectClass(\n    final String oid,\n    final String[] names,\n    final String description,\n    final boolean obsolete,\n    final String[] superiorClasses,\n    final ObjectClassType objectClassType,\n    final String[] requiredAttributes,\n    final String[] optionalAttributes,\n    final Extensions extensions)", "class_method_signature": "ObjectClass.ObjectClass(\n    final String oid,\n    final String[] names,\n    final String description,\n    final boolean obsolete,\n    final String[] superiorClasses,\n    final ObjectClassType objectClassType,\n    final String[] requiredAttributes,\n    final String[] optionalAttributes,\n    final Extensions extensions)", "testcase": false, "constructor": true}, {"identifier": "getOID", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getOID()", "full_signature": "public String getOID()", "class_method_signature": "ObjectClass.getOID()", "testcase": false, "constructor": false}, {"identifier": "getSuperiorClasses", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getSuperiorClasses()", "full_signature": "public String[] getSuperiorClasses()", "class_method_signature": "ObjectClass.getSuperiorClasses()", "testcase": false, "constructor": false}, {"identifier": "setSuperiorClasses", "parameters": "(final String[] s)", "modifiers": "public", "return": "void", "signature": "void setSuperiorClasses(final String[] s)", "full_signature": "public void setSuperiorClasses(final String[] s)", "class_method_signature": "ObjectClass.setSuperiorClasses(final String[] s)", "testcase": false, "constructor": false}, {"identifier": "getObjectClassType", "parameters": "()", "modifiers": "public", "return": "ObjectClassType", "signature": "ObjectClassType getObjectClassType()", "full_signature": "public ObjectClassType getObjectClassType()", "class_method_signature": "ObjectClass.getObjectClassType()", "testcase": false, "constructor": false}, {"identifier": "setObjectClassType", "parameters": "(final ObjectClassType type)", "modifiers": "public", "return": "void", "signature": "void setObjectClassType(final ObjectClassType type)", "full_signature": "public void setObjectClassType(final ObjectClassType type)", "class_method_signature": "ObjectClass.setObjectClassType(final ObjectClassType type)", "testcase": false, "constructor": false}, {"identifier": "getRequiredAttributes", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getRequiredAttributes()", "full_signature": "public String[] getRequiredAttributes()", "class_method_signature": "ObjectClass.getRequiredAttributes()", "testcase": false, "constructor": false}, {"identifier": "setRequiredAttributes", "parameters": "(final String[] s)", "modifiers": "public", "return": "void", "signature": "void setRequiredAttributes(final String[] s)", "full_signature": "public void setRequiredAttributes(final String[] s)", "class_method_signature": "ObjectClass.setRequiredAttributes(final String[] s)", "testcase": false, "constructor": false}, {"identifier": "getOptionalAttributes", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getOptionalAttributes()", "full_signature": "public String[] getOptionalAttributes()", "class_method_signature": "ObjectClass.getOptionalAttributes()", "testcase": false, "constructor": false}, {"identifier": "setOptionalAttributes", "parameters": "(final String[] s)", "modifiers": "public", "return": "void", "signature": "void setOptionalAttributes(final String[] s)", "full_signature": "public void setOptionalAttributes(final String[] s)", "class_method_signature": "ObjectClass.setOptionalAttributes(final String[] s)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(final String definition)", "modifiers": "public static", "return": "ObjectClass", "signature": "ObjectClass parse(final String definition)", "full_signature": "public static ObjectClass parse(final String definition)", "class_method_signature": "ObjectClass.parse(final String definition)", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String format()", "full_signature": "@Override public String format()", "class_method_signature": "ObjectClass.format()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ObjectClass.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ObjectClass.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ObjectClass.toString()", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/ldaptive/schema/ObjectClass.java"}, "focal_method": {"identifier": "parse", "parameters": "(final String definition)", "modifiers": "public static", "return": "ObjectClass", "body": "public static ObjectClass parse(final String definition)\n    throws ParseException\n  {\n    final Matcher m = DEFINITION_PATTERN.matcher(definition);\n    if (!m.matches()) {\n      throw new ParseException(\"Invalid object class definition: \" + definition, definition.length());\n    }\n\n    final ObjectClass ocd = new ObjectClass(m.group(1).trim());\n\n    // CheckStyle:MagicNumber OFF\n    // parse names\n    if (m.group(2) != null) {\n      ocd.setNames(SchemaUtils.parseDescriptors(m.group(2).trim()));\n    } else if (m.group(3) != null) {\n      ocd.setNames(SchemaUtils.parseDescriptors(m.group(3).trim()));\n    }\n\n    ocd.setDescription(m.group(4) != null ? m.group(4).trim() : null);\n    ocd.setObsolete(m.group(5) != null);\n\n    // parse superior classes\n    if (m.group(6) != null) {\n      ocd.setSuperiorClasses(SchemaUtils.parseOIDs(m.group(6).trim()));\n    } else if (m.group(7) != null) {\n      ocd.setSuperiorClasses(SchemaUtils.parseOIDs(m.group(7).trim()));\n    }\n\n    if (m.group(8) != null) {\n      ocd.setObjectClassType(ObjectClassType.valueOf(m.group(8).trim()));\n    }\n\n    // parse required attributes\n    if (m.group(9) != null) {\n      ocd.setRequiredAttributes(SchemaUtils.parseOIDs(m.group(9).trim()));\n    } else if (m.group(10) != null) {\n      ocd.setRequiredAttributes(SchemaUtils.parseOIDs(m.group(10).trim()));\n    }\n\n    // parse optional attributes\n    if (m.group(11) != null) {\n      ocd.setOptionalAttributes(SchemaUtils.parseOIDs(m.group(11).trim()));\n    } else if (m.group(12) != null) {\n      ocd.setOptionalAttributes(SchemaUtils.parseOIDs(m.group(12).trim()));\n    }\n\n    // parse extensions\n    if (m.group(13) != null) {\n      ocd.setExtensions(Extensions.parse(m.group(13).trim()));\n    }\n    return ocd;\n    // CheckStyle:MagicNumber ON\n  }", "signature": "ObjectClass parse(final String definition)", "full_signature": "public static ObjectClass parse(final String definition)", "class_method_signature": "ObjectClass.parse(final String definition)", "testcase": false, "constructor": false, "invocations": ["matcher", "matches", "length", "trim", "group", "group", "setNames", "parseDescriptors", "trim", "group", "group", "setNames", "parseDescriptors", "trim", "group", "setDescription", "group", "trim", "group", "setObsolete", "group", "group", "setSuperiorClasses", "parseOIDs", "trim", "group", "group", "setSuperiorClasses", "parseOIDs", "trim", "group", "group", "setObjectClassType", "valueOf", "trim", "group", "group", "setRequiredAttributes", "parseOIDs", "trim", "group", "group", "setRequiredAttributes", "parseOIDs", "trim", "group", "group", "setOptionalAttributes", "parseOIDs", "trim", "group", "group", "setOptionalAttributes", "parseOIDs", "trim", "group", "group", "setExtensions", "parse", "trim", "group"]}, "repository": {"repo_id": 25927306, "url": "https://github.com/vt-middleware/ldaptive", "stars": 32, "created": "10/29/2014 3:27:31 PM +00:00", "updates": "2020-01-14T22:18:12+00:00", "fork": "False", "license": "licensed"}}