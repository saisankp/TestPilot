{"test_class": {"identifier": "CustomLocalDateDeserializerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n\tprivate CustomLocalDateDeserializer testee;", "modifier": "@InjectMocks\n\tprivate", "type": "CustomLocalDateDeserializer", "declarator": "testee", "var_name": "testee"}, {"original_string": "@Mock\n\tprivate JsonParser jsonParser;", "modifier": "@Mock\n\tprivate", "type": "JsonParser", "declarator": "jsonParser", "var_name": "jsonParser"}, {"original_string": "@Rule\n\tpublic ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n\tpublic", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "nimbus-core/src/test/java/com/antheminc/oss/nimbus/support/json/CustomLocalDateDeserializerTest.java"}, "test_case": {"identifier": "t3_deserializeBadDate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void t3_deserializeBadDate() throws IOException {\n\t\tMockito.when(this.jsonParser.getText()).thenReturn(\"10-13-1988\");\n\t\tthis.thrown.expect(JsonParseException.class);\n//\t\tthis.thrown.expectMessage(\"Unparseable date: \\\"10-13-1988\\\". Supported format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n\t\tthis.thrown.expectMessage(\"Unparseable date: \\\"10-13-1988\\\". Supported formats: [yyyy-MM-dd, yyyy-MM-dd'T'HH:mm:ss.SSS'Z']\");\n\t\tthis.testee.deserialize(this.jsonParser, null);\n\t}", "signature": "void t3_deserializeBadDate()", "full_signature": "@Test public void t3_deserializeBadDate()", "class_method_signature": "CustomLocalDateDeserializerTest.t3_deserializeBadDate()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getText", "expect", "expectMessage", "deserialize"]}, "focal_class": {"identifier": "CustomLocalDateDeserializer", "superclass": "extends StdDeserializer<LocalDate>", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private static final String[] DATE_FORMATS = new String[] { \"yyyy-MM-dd\", \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\" };", "modifier": "private static final", "type": "String[]", "declarator": "DATE_FORMATS = new String[] { \"yyyy-MM-dd\", \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\" }", "var_name": "DATE_FORMATS"}, {"original_string": "private static final String NULL_STRING = \"null\";", "modifier": "private static final", "type": "String", "declarator": "NULL_STRING = \"null\"", "var_name": "NULL_STRING"}], "methods": [{"identifier": "CustomLocalDateDeserializer", "parameters": "()", "modifiers": "public", "return": "", "signature": " CustomLocalDateDeserializer()", "full_signature": "public  CustomLocalDateDeserializer()", "class_method_signature": "CustomLocalDateDeserializer.CustomLocalDateDeserializer()", "testcase": false, "constructor": true}, {"identifier": "CustomLocalDateDeserializer", "parameters": "(Class<?> vc)", "modifiers": "public", "return": "", "signature": " CustomLocalDateDeserializer(Class<?> vc)", "full_signature": "public  CustomLocalDateDeserializer(Class<?> vc)", "class_method_signature": "CustomLocalDateDeserializer.CustomLocalDateDeserializer(Class<?> vc)", "testcase": false, "constructor": true}, {"identifier": "deserialize", "parameters": "(JsonParser jsonparser, DeserializationContext context)", "modifiers": "@Override public", "return": "LocalDate", "signature": "LocalDate deserialize(JsonParser jsonparser, DeserializationContext context)", "full_signature": "@Override public LocalDate deserialize(JsonParser jsonparser, DeserializationContext context)", "class_method_signature": "CustomLocalDateDeserializer.deserialize(JsonParser jsonparser, DeserializationContext context)", "testcase": false, "constructor": false}], "file": "nimbus-core/src/main/java/com/antheminc/oss/nimbus/support/json/CustomLocalDateDeserializer.java"}, "focal_method": {"identifier": "deserialize", "parameters": "(JsonParser jsonparser, DeserializationContext context)", "modifiers": "@Override public", "return": "LocalDate", "body": "@Override\n\tpublic LocalDate deserialize(JsonParser jsonparser, DeserializationContext context)\n\t\t\tthrows IOException, JsonProcessingException {\n\t\t\n//\t\tLocalDateTime ldtDate = this.deserializer.deserialize(jsonparser, context);\n//\t\treturn null==ldtDate ? null : ldtDate.toLocalDate();\n\t\tString date = jsonparser.getText();\n\t\tif (StringUtils.isEmpty(date) || NULL_STRING.equals(date)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (String DATE_FORMAT : DATE_FORMATS) {\n\t\t\ttry {\n\t\t\t\treturn LocalDate.parse(date, DateTimeFormatter.ofPattern(DATE_FORMAT));\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\t\t}\n\t\tthrow new JsonParseException(jsonparser,\n\t\t\t\t\"Unparseable date: \\\"\" + date + \"\\\". Supported formats: \" + Arrays.toString(DATE_FORMATS));\n\n\t}", "signature": "LocalDate deserialize(JsonParser jsonparser, DeserializationContext context)", "full_signature": "@Override public LocalDate deserialize(JsonParser jsonparser, DeserializationContext context)", "class_method_signature": "CustomLocalDateDeserializer.deserialize(JsonParser jsonparser, DeserializationContext context)", "testcase": false, "constructor": false, "invocations": ["getText", "isEmpty", "equals", "parse", "ofPattern", "toString"]}, "repository": {"repo_id": 96120606, "url": "https://github.com/openanthem/nimbus-core", "language": "Java", "is_fork": false, "fork_count": 48, "stargazer_count": 9, "size": 55787, "license": "licensed"}}