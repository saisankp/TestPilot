{"test_class": {"identifier": "CountyResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@SuppressWarnings(\"serial\")\n    private Map<String, String> boroughNames = new HashMap<String, String>()\n    {{\n        put(\"Bk\",\"BROOKLYN\");\n    }};", "modifier": "@SuppressWarnings(\"serial\")\n    private", "type": "Map<String, String>", "declarator": "boroughNames = new HashMap<String, String>()\n    {{\n        put(\"Bk\",\"BROOKLYN\");\n    }}", "var_name": "boroughNames"}, {"original_string": "private CountyResolver boroughResolver;", "modifier": "private", "type": "CountyResolver", "declarator": "boroughResolver", "var_name": "boroughResolver"}, {"original_string": "private LocationTokens locationTokens;", "modifier": "private", "type": "LocationTokens", "declarator": "locationTokens", "var_name": "locationTokens"}, {"original_string": "private Chunk chunk;", "modifier": "private", "type": "Chunk", "declarator": "chunk", "var_name": "chunk"}, {"original_string": "private Token resolvableBoroughNameToken;", "modifier": "private", "type": "Token", "declarator": "resolvableBoroughNameToken", "var_name": "resolvableBoroughNameToken"}, {"original_string": "private Token unresolvableBoroughNameToken;", "modifier": "private", "type": "Token", "declarator": "unresolvableBoroughNameToken", "var_name": "unresolvableBoroughNameToken"}], "file": "geoclient-service/src/test/java/gov/nyc/doitt/gis/geoclient/service/search/CountyResolverTest.java"}, "test_case": {"identifier": "testResolve_emptyLocationTokensContainsFiveBoroughs", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testResolve_emptyLocationTokensContainsFiveBoroughs()\n    {\n        ValueResolution res = boroughResolver.resolve(locationTokens);\n        assertThat(res).isNotNull();\n        assertThat(res.unresolvedCount()).isEqualTo(0);\n        assertThat(res.resolvedCount()).isEqualTo(5);\n        assertThat(res.totalCount()).isEqualTo(5);\n        assertTrue(res.resolved().contains(CountyResolver.MANHATTAN));\n        assertTrue(res.resolved().contains(CountyResolver.BRONX));\n        assertTrue(res.resolved().contains(CountyResolver.BROOKLYN));\n        assertTrue(res.resolved().contains(CountyResolver.QUEENS));\n        assertTrue(res.resolved().contains(CountyResolver.STATEN_ISLAND));\n    }", "signature": "void testResolve_emptyLocationTokensContainsFiveBoroughs()", "full_signature": "@Test public void testResolve_emptyLocationTokensContainsFiveBoroughs()", "class_method_signature": "CountyResolverTest.testResolve_emptyLocationTokensContainsFiveBoroughs()", "testcase": true, "constructor": false, "invocations": ["resolve", "isNotNull", "assertThat", "isEqualTo", "assertThat", "unresolvedCount", "isEqualTo", "assertThat", "resolvedCount", "isEqualTo", "assertThat", "totalCount", "assertTrue", "contains", "resolved", "assertTrue", "contains", "resolved", "assertTrue", "contains", "resolved", "assertTrue", "contains", "resolved", "assertTrue", "contains", "resolved"]}, "focal_class": {"identifier": "CountyResolver", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final InputValue MANHATTAN = new InputValue(TokenType.BOROUGH_NAME, \"MANHATTAN\");", "modifier": "public static final", "type": "InputValue", "declarator": "MANHATTAN = new InputValue(TokenType.BOROUGH_NAME, \"MANHATTAN\")", "var_name": "MANHATTAN"}, {"original_string": "public static final InputValue BRONX = new InputValue(TokenType.BOROUGH_NAME, \"BRONX\");", "modifier": "public static final", "type": "InputValue", "declarator": "BRONX = new InputValue(TokenType.BOROUGH_NAME, \"BRONX\")", "var_name": "BRONX"}, {"original_string": "public static final InputValue BROOKLYN = new InputValue(TokenType.BOROUGH_NAME, \"BROOKLYN\");", "modifier": "public static final", "type": "InputValue", "declarator": "BROOKLYN = new InputValue(TokenType.BOROUGH_NAME, \"BROOKLYN\")", "var_name": "BROOKLYN"}, {"original_string": "public static final InputValue QUEENS = new InputValue(TokenType.BOROUGH_NAME, \"QUEENS\");", "modifier": "public static final", "type": "InputValue", "declarator": "QUEENS = new InputValue(TokenType.BOROUGH_NAME, \"QUEENS\")", "var_name": "QUEENS"}, {"original_string": "public static final InputValue STATEN_ISLAND = new InputValue(TokenType.BOROUGH_NAME, \"STATEN ISLAND\");", "modifier": "public static final", "type": "InputValue", "declarator": "STATEN_ISLAND = new InputValue(TokenType.BOROUGH_NAME, \"STATEN ISLAND\")", "var_name": "STATEN_ISLAND"}, {"original_string": "private final Map<String, String> mappings = new HashMap<String, String>();", "modifier": "private final", "type": "Map<String, String>", "declarator": "mappings = new HashMap<String, String>()", "var_name": "mappings"}], "methods": [{"identifier": "CountyResolver", "parameters": "(Map<String, String>... mappings)", "modifiers": "@SafeVarargs public", "return": "", "signature": " CountyResolver(Map<String, String>... mappings)", "full_signature": "@SafeVarargs public  CountyResolver(Map<String, String>... mappings)", "class_method_signature": "CountyResolver.CountyResolver(Map<String, String>... mappings)", "testcase": false, "constructor": true}, {"identifier": "resolve", "parameters": "(LocationTokens locationTokens)", "modifiers": "public", "return": "ValueResolution", "signature": "ValueResolution resolve(LocationTokens locationTokens)", "full_signature": "public ValueResolution resolve(LocationTokens locationTokens)", "class_method_signature": "CountyResolver.resolve(LocationTokens locationTokens)", "testcase": false, "constructor": false}, {"identifier": "addUnmappedTokens", "parameters": "(LocationTokens locationTokens, ValueResolution valueResolution)", "modifiers": "protected", "return": "void", "signature": "void addUnmappedTokens(LocationTokens locationTokens, ValueResolution valueResolution)", "full_signature": "protected void addUnmappedTokens(LocationTokens locationTokens, ValueResolution valueResolution)", "class_method_signature": "CountyResolver.addUnmappedTokens(LocationTokens locationTokens, ValueResolution valueResolution)", "testcase": false, "constructor": false}, {"identifier": "addMappedTokens", "parameters": "(LocationTokens locationTokens, ValueResolution valueResolution)", "modifiers": "protected", "return": "void", "signature": "void addMappedTokens(LocationTokens locationTokens, ValueResolution valueResolution)", "full_signature": "protected void addMappedTokens(LocationTokens locationTokens, ValueResolution valueResolution)", "class_method_signature": "CountyResolver.addMappedTokens(LocationTokens locationTokens, ValueResolution valueResolution)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Map<String, String> map)", "modifiers": "protected", "return": "void", "signature": "void add(Map<String, String> map)", "full_signature": "protected void add(Map<String, String> map)", "class_method_signature": "CountyResolver.add(Map<String, String> map)", "testcase": false, "constructor": false}], "file": "geoclient-service/src/main/java/gov/nyc/doitt/gis/geoclient/service/search/CountyResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(LocationTokens locationTokens)", "modifiers": "public", "return": "ValueResolution", "body": "public ValueResolution resolve(LocationTokens locationTokens)\n    {\n        ValueResolution valueResolution = new ValueResolution();\n        addUnmappedTokens(locationTokens, valueResolution);\n        addMappedTokens(locationTokens, valueResolution);\n        if(valueResolution.resolvedCount() == 0)\n        {\n            valueResolution.add(MANHATTAN);\n            valueResolution.add(BRONX);\n            valueResolution.add(BROOKLYN);\n            valueResolution.add(QUEENS);\n            valueResolution.add(STATEN_ISLAND);\n        }\n        return valueResolution;\n    }", "signature": "ValueResolution resolve(LocationTokens locationTokens)", "full_signature": "public ValueResolution resolve(LocationTokens locationTokens)", "class_method_signature": "CountyResolver.resolve(LocationTokens locationTokens)", "testcase": false, "constructor": false, "invocations": ["addUnmappedTokens", "addMappedTokens", "resolvedCount", "add", "add", "add", "add", "add"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}