{"test_class": {"identifier": "DebugReactionTest", "superclass": "extends AbstractReactionTest", "interfaces": "", "fields": [], "file": "base/datadebug/src/test/java/org/openscience/cdk/debug/DebugReactionTest.java"}, "test_case": {"identifier": "testDebugReaction", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDebugReaction() {\n        IReaction polymer = new DebugReaction();\n        Assert.assertTrue(polymer instanceof DebugReaction);\n    }", "signature": "void testDebugReaction()", "full_signature": "@Test public void testDebugReaction()", "class_method_signature": "DebugReactionTest.testDebugReaction()", "testcase": true, "constructor": false, "invocations": ["assertTrue"]}, "focal_class": {"identifier": "DebugReaction", "superclass": "extends Reaction", "interfaces": "implements IReaction", "fields": [{"original_string": "private static final long serialVersionUID = -8958358842308217875L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -8958358842308217875L", "var_name": "serialVersionUID"}, {"original_string": "ILoggingTool              logger           = LoggingToolFactory.createLoggingTool(DebugReaction.class);", "modifier": "", "type": "ILoggingTool", "declarator": "logger           = LoggingToolFactory.createLoggingTool(DebugReaction.class)", "var_name": "logger"}], "methods": [{"identifier": "DebugReaction", "parameters": "()", "modifiers": "public", "return": "", "signature": " DebugReaction()", "full_signature": "public  DebugReaction()", "class_method_signature": "DebugReaction.DebugReaction()", "testcase": false, "constructor": true}, {"identifier": "addListener", "parameters": "(IChemObjectListener col)", "modifiers": "@Override public", "return": "void", "signature": "void addListener(IChemObjectListener col)", "full_signature": "@Override public void addListener(IChemObjectListener col)", "class_method_signature": "DebugReaction.addListener(IChemObjectListener col)", "testcase": false, "constructor": false}, {"identifier": "getListenerCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getListenerCount()", "full_signature": "@Override public int getListenerCount()", "class_method_signature": "DebugReaction.getListenerCount()", "testcase": false, "constructor": false}, {"identifier": "removeListener", "parameters": "(IChemObjectListener col)", "modifiers": "@Override public", "return": "void", "signature": "void removeListener(IChemObjectListener col)", "full_signature": "@Override public void removeListener(IChemObjectListener col)", "class_method_signature": "DebugReaction.removeListener(IChemObjectListener col)", "testcase": false, "constructor": false}, {"identifier": "notifyChanged", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void notifyChanged()", "full_signature": "@Override public void notifyChanged()", "class_method_signature": "DebugReaction.notifyChanged()", "testcase": false, "constructor": false}, {"identifier": "notifyChanged", "parameters": "(IChemObjectChangeEvent evt)", "modifiers": "@Override public", "return": "void", "signature": "void notifyChanged(IChemObjectChangeEvent evt)", "full_signature": "@Override public void notifyChanged(IChemObjectChangeEvent evt)", "class_method_signature": "DebugReaction.notifyChanged(IChemObjectChangeEvent evt)", "testcase": false, "constructor": false}, {"identifier": "setProperty", "parameters": "(Object description, Object property)", "modifiers": "@Override public", "return": "void", "signature": "void setProperty(Object description, Object property)", "full_signature": "@Override public void setProperty(Object description, Object property)", "class_method_signature": "DebugReaction.setProperty(Object description, Object property)", "testcase": false, "constructor": false}, {"identifier": "removeProperty", "parameters": "(Object description)", "modifiers": "@Override public", "return": "void", "signature": "void removeProperty(Object description)", "full_signature": "@Override public void removeProperty(Object description)", "class_method_signature": "DebugReaction.removeProperty(Object description)", "testcase": false, "constructor": false}, {"identifier": "getProperty", "parameters": "(Object description)", "modifiers": "@Override public", "return": "T", "signature": "T getProperty(Object description)", "full_signature": "@Override public T getProperty(Object description)", "class_method_signature": "DebugReaction.getProperty(Object description)", "testcase": false, "constructor": false}, {"identifier": "getProperties", "parameters": "()", "modifiers": "@Override public", "return": "Map<Object, Object>", "signature": "Map<Object, Object> getProperties()", "full_signature": "@Override public Map<Object, Object> getProperties()", "class_method_signature": "DebugReaction.getProperties()", "testcase": false, "constructor": false}, {"identifier": "getID", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getID()", "full_signature": "@Override public String getID()", "class_method_signature": "DebugReaction.getID()", "testcase": false, "constructor": false}, {"identifier": "setID", "parameters": "(String identifier)", "modifiers": "@Override public", "return": "void", "signature": "void setID(String identifier)", "full_signature": "@Override public void setID(String identifier)", "class_method_signature": "DebugReaction.setID(String identifier)", "testcase": false, "constructor": false}, {"identifier": "setFlag", "parameters": "(int flagType, boolean flagValue)", "modifiers": "@Override public", "return": "void", "signature": "void setFlag(int flagType, boolean flagValue)", "full_signature": "@Override public void setFlag(int flagType, boolean flagValue)", "class_method_signature": "DebugReaction.setFlag(int flagType, boolean flagValue)", "testcase": false, "constructor": false}, {"identifier": "getFlag", "parameters": "(int flagType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getFlag(int flagType)", "full_signature": "@Override public boolean getFlag(int flagType)", "class_method_signature": "DebugReaction.getFlag(int flagType)", "testcase": false, "constructor": false}, {"identifier": "addProperties", "parameters": "(Map<Object, Object> properties)", "modifiers": "@Override public", "return": "void", "signature": "void addProperties(Map<Object, Object> properties)", "full_signature": "@Override public void addProperties(Map<Object, Object> properties)", "class_method_signature": "DebugReaction.addProperties(Map<Object, Object> properties)", "testcase": false, "constructor": false}, {"identifier": "setFlags", "parameters": "(boolean[] flagsNew)", "modifiers": "@Override public", "return": "void", "signature": "void setFlags(boolean[] flagsNew)", "full_signature": "@Override public void setFlags(boolean[] flagsNew)", "class_method_signature": "DebugReaction.setFlags(boolean[] flagsNew)", "testcase": false, "constructor": false}, {"identifier": "getFlags", "parameters": "()", "modifiers": "@Override public", "return": "boolean[]", "signature": "boolean[] getFlags()", "full_signature": "@Override public boolean[] getFlags()", "class_method_signature": "DebugReaction.getFlags()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object clone()", "full_signature": "@Override public Object clone()", "class_method_signature": "DebugReaction.clone()", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "()", "modifiers": "@Override public", "return": "IChemObjectBuilder", "signature": "IChemObjectBuilder getBuilder()", "full_signature": "@Override public IChemObjectBuilder getBuilder()", "class_method_signature": "DebugReaction.getBuilder()", "testcase": false, "constructor": false}, {"identifier": "getReactantCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getReactantCount()", "full_signature": "@Override public int getReactantCount()", "class_method_signature": "DebugReaction.getReactantCount()", "testcase": false, "constructor": false}, {"identifier": "getProductCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getProductCount()", "full_signature": "@Override public int getProductCount()", "class_method_signature": "DebugReaction.getProductCount()", "testcase": false, "constructor": false}, {"identifier": "getReactants", "parameters": "()", "modifiers": "@Override public", "return": "IAtomContainerSet", "signature": "IAtomContainerSet getReactants()", "full_signature": "@Override public IAtomContainerSet getReactants()", "class_method_signature": "DebugReaction.getReactants()", "testcase": false, "constructor": false}, {"identifier": "setReactants", "parameters": "(IAtomContainerSet reactants)", "modifiers": "@Override public", "return": "void", "signature": "void setReactants(IAtomContainerSet reactants)", "full_signature": "@Override public void setReactants(IAtomContainerSet reactants)", "class_method_signature": "DebugReaction.setReactants(IAtomContainerSet reactants)", "testcase": false, "constructor": false}, {"identifier": "getProducts", "parameters": "()", "modifiers": "@Override public", "return": "IAtomContainerSet", "signature": "IAtomContainerSet getProducts()", "full_signature": "@Override public IAtomContainerSet getProducts()", "class_method_signature": "DebugReaction.getProducts()", "testcase": false, "constructor": false}, {"identifier": "setProducts", "parameters": "(IAtomContainerSet products)", "modifiers": "@Override public", "return": "void", "signature": "void setProducts(IAtomContainerSet products)", "full_signature": "@Override public void setProducts(IAtomContainerSet products)", "class_method_signature": "DebugReaction.setProducts(IAtomContainerSet products)", "testcase": false, "constructor": false}, {"identifier": "getAgents", "parameters": "()", "modifiers": "@Override public", "return": "IAtomContainerSet", "signature": "IAtomContainerSet getAgents()", "full_signature": "@Override public IAtomContainerSet getAgents()", "class_method_signature": "DebugReaction.getAgents()", "testcase": false, "constructor": false}, {"identifier": "addReactant", "parameters": "(IAtomContainer reactant)", "modifiers": "@Override public", "return": "void", "signature": "void addReactant(IAtomContainer reactant)", "full_signature": "@Override public void addReactant(IAtomContainer reactant)", "class_method_signature": "DebugReaction.addReactant(IAtomContainer reactant)", "testcase": false, "constructor": false}, {"identifier": "addAgent", "parameters": "(IAtomContainer agent)", "modifiers": "@Override public", "return": "void", "signature": "void addAgent(IAtomContainer agent)", "full_signature": "@Override public void addAgent(IAtomContainer agent)", "class_method_signature": "DebugReaction.addAgent(IAtomContainer agent)", "testcase": false, "constructor": false}, {"identifier": "addReactant", "parameters": "(IAtomContainer reactant, Double coefficient)", "modifiers": "@Override public", "return": "void", "signature": "void addReactant(IAtomContainer reactant, Double coefficient)", "full_signature": "@Override public void addReactant(IAtomContainer reactant, Double coefficient)", "class_method_signature": "DebugReaction.addReactant(IAtomContainer reactant, Double coefficient)", "testcase": false, "constructor": false}, {"identifier": "addProduct", "parameters": "(IAtomContainer product)", "modifiers": "@Override public", "return": "void", "signature": "void addProduct(IAtomContainer product)", "full_signature": "@Override public void addProduct(IAtomContainer product)", "class_method_signature": "DebugReaction.addProduct(IAtomContainer product)", "testcase": false, "constructor": false}, {"identifier": "addProduct", "parameters": "(IAtomContainer product, Double coefficient)", "modifiers": "@Override public", "return": "void", "signature": "void addProduct(IAtomContainer product, Double coefficient)", "full_signature": "@Override public void addProduct(IAtomContainer product, Double coefficient)", "class_method_signature": "DebugReaction.addProduct(IAtomContainer product, Double coefficient)", "testcase": false, "constructor": false}, {"identifier": "getReactantCoefficient", "parameters": "(IAtomContainer reactant)", "modifiers": "@Override public", "return": "Double", "signature": "Double getReactantCoefficient(IAtomContainer reactant)", "full_signature": "@Override public Double getReactantCoefficient(IAtomContainer reactant)", "class_method_signature": "DebugReaction.getReactantCoefficient(IAtomContainer reactant)", "testcase": false, "constructor": false}, {"identifier": "getProductCoefficient", "parameters": "(IAtomContainer product)", "modifiers": "@Override public", "return": "Double", "signature": "Double getProductCoefficient(IAtomContainer product)", "full_signature": "@Override public Double getProductCoefficient(IAtomContainer product)", "class_method_signature": "DebugReaction.getProductCoefficient(IAtomContainer product)", "testcase": false, "constructor": false}, {"identifier": "setReactantCoefficient", "parameters": "(IAtomContainer reactant, Double coefficient)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setReactantCoefficient(IAtomContainer reactant, Double coefficient)", "full_signature": "@Override public boolean setReactantCoefficient(IAtomContainer reactant, Double coefficient)", "class_method_signature": "DebugReaction.setReactantCoefficient(IAtomContainer reactant, Double coefficient)", "testcase": false, "constructor": false}, {"identifier": "setProductCoefficient", "parameters": "(IAtomContainer product, Double coefficient)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setProductCoefficient(IAtomContainer product, Double coefficient)", "full_signature": "@Override public boolean setProductCoefficient(IAtomContainer product, Double coefficient)", "class_method_signature": "DebugReaction.setProductCoefficient(IAtomContainer product, Double coefficient)", "testcase": false, "constructor": false}, {"identifier": "getReactantCoefficients", "parameters": "()", "modifiers": "@Override public", "return": "Double[]", "signature": "Double[] getReactantCoefficients()", "full_signature": "@Override public Double[] getReactantCoefficients()", "class_method_signature": "DebugReaction.getReactantCoefficients()", "testcase": false, "constructor": false}, {"identifier": "getProductCoefficients", "parameters": "()", "modifiers": "@Override public", "return": "Double[]", "signature": "Double[] getProductCoefficients()", "full_signature": "@Override public Double[] getProductCoefficients()", "class_method_signature": "DebugReaction.getProductCoefficients()", "testcase": false, "constructor": false}, {"identifier": "setReactantCoefficients", "parameters": "(Double[] coefficients)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setReactantCoefficients(Double[] coefficients)", "full_signature": "@Override public boolean setReactantCoefficients(Double[] coefficients)", "class_method_signature": "DebugReaction.setReactantCoefficients(Double[] coefficients)", "testcase": false, "constructor": false}, {"identifier": "setProductCoefficients", "parameters": "(Double[] coefficients)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean setProductCoefficients(Double[] coefficients)", "full_signature": "@Override public boolean setProductCoefficients(Double[] coefficients)", "class_method_signature": "DebugReaction.setProductCoefficients(Double[] coefficients)", "testcase": false, "constructor": false}, {"identifier": "setDirection", "parameters": "(IReaction.Direction direction)", "modifiers": "@Override public", "return": "void", "signature": "void setDirection(IReaction.Direction direction)", "full_signature": "@Override public void setDirection(IReaction.Direction direction)", "class_method_signature": "DebugReaction.setDirection(IReaction.Direction direction)", "testcase": false, "constructor": false}, {"identifier": "getDirection", "parameters": "()", "modifiers": "@Override public", "return": "IReaction.Direction", "signature": "IReaction.Direction getDirection()", "full_signature": "@Override public IReaction.Direction getDirection()", "class_method_signature": "DebugReaction.getDirection()", "testcase": false, "constructor": false}], "file": "base/datadebug/src/main/java/org/openscience/cdk/debug/DebugReaction.java"}, "focal_method": {"identifier": "DebugReaction", "parameters": "()", "modifiers": "public", "return": "", "body": "public DebugReaction() {\n        super();\n    }", "signature": " DebugReaction()", "full_signature": "public  DebugReaction()", "class_method_signature": "DebugReaction.DebugReaction()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}