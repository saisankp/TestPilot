{"test_class": {"identifier": "FilepathUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/util/src/test/java/hera/util/FilepathUtilsTest.java"}, "test_case": {"identifier": "testAppendWithStartAndEnd", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAppendWithStartAndEnd() {\n    final Object[][] testParameters = new Object[][] {{new String[] {\"/Users\"}, 0, 0, \"/Users\"},\n        {new String[] {\"/Users\", \"/tester\"}, 0, 1, \"/Users/tester\"},\n        {new String[] {\"/Users\", \"/admin\", \"/systems\"}, 0, 2, \"/Users/admin/systems\"},\n        {new String[] {\"/Users\", \"/admin\", \"/systems\"}, 1, 2, \"/admin/systems\"},\n        {new String[] {\"/Users\", \"/admin\", \"/systems\"}, 2, 2, \"/systems\"}};\n\n    assertEquals(\"\", FilepathUtils.append(null, null, null));\n\n    for (final Object[] testParameter : testParameters) {\n      String expected = (String) testParameter[3];\n      String[] fragments = (String[]) testParameter[0];\n      int start = (Integer) testParameter[1];\n      int end = (Integer) testParameter[2];\n      assertEquals(expected, FilepathUtils.append(fragments, start, end));\n    }\n  }", "signature": "void testAppendWithStartAndEnd()", "full_signature": "@Test public void testAppendWithStartAndEnd()", "class_method_signature": "FilepathUtilsTest.testAppendWithStartAndEnd()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "append", "assertEquals", "append"]}, "focal_class": {"identifier": "FilepathUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final char DIRECTORY_SEPARATOR_CHAR = '/';", "modifier": "private static final", "type": "char", "declarator": "DIRECTORY_SEPARATOR_CHAR = '/'", "var_name": "DIRECTORY_SEPARATOR_CHAR"}, {"original_string": "private static final String DIRECTORY_SEPARATOR = \"\" + DIRECTORY_SEPARATOR_CHAR;", "modifier": "private static final", "type": "String", "declarator": "DIRECTORY_SEPARATOR = \"\" + DIRECTORY_SEPARATOR_CHAR", "var_name": "DIRECTORY_SEPARATOR"}, {"original_string": "private static final String CURRENT_DIR = \".\";", "modifier": "private static final", "type": "String", "declarator": "CURRENT_DIR = \".\"", "var_name": "CURRENT_DIR"}, {"original_string": "private static final String PARENT_DIR = \"..\";", "modifier": "private static final", "type": "String", "declarator": "PARENT_DIR = \"..\"", "var_name": "PARENT_DIR"}], "methods": [{"identifier": "getCanonicalFragments", "parameters": "(final String path)", "modifiers": "public static", "return": "String[]", "signature": "String[] getCanonicalFragments(final String path)", "full_signature": "public static String[] getCanonicalFragments(final String path)", "class_method_signature": "FilepathUtils.getCanonicalFragments(final String path)", "testcase": false, "constructor": false}, {"identifier": "getCanonicalForm", "parameters": "(final String path)", "modifiers": "public static", "return": "String", "signature": "String getCanonicalForm(final String path)", "full_signature": "public static String getCanonicalForm(final String path)", "class_method_signature": "FilepathUtils.getCanonicalForm(final String path)", "testcase": false, "constructor": false}, {"identifier": "split", "parameters": "(final String path)", "modifiers": "public static", "return": "String[]", "signature": "String[] split(final String path)", "full_signature": "public static String[] split(final String path)", "class_method_signature": "FilepathUtils.split(final String path)", "testcase": false, "constructor": false}, {"identifier": "getParentPath", "parameters": "(final String path)", "modifiers": "public static", "return": "String", "signature": "String getParentPath(final String path)", "full_signature": "public static String getParentPath(final String path)", "class_method_signature": "FilepathUtils.getParentPath(final String path)", "testcase": false, "constructor": false}, {"identifier": "getFilename", "parameters": "(final String path)", "modifiers": "public static", "return": "String", "signature": "String getFilename(final String path)", "full_signature": "public static String getFilename(final String path)", "class_method_signature": "FilepathUtils.getFilename(final String path)", "testcase": false, "constructor": false}, {"identifier": "concat", "parameters": "(final String... fragments)", "modifiers": "public static", "return": "String", "signature": "String concat(final String... fragments)", "full_signature": "public static String concat(final String... fragments)", "class_method_signature": "FilepathUtils.concat(final String... fragments)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(final String... fragments)", "modifiers": "public static", "return": "String", "signature": "String append(final String... fragments)", "full_signature": "public static String append(final String... fragments)", "class_method_signature": "FilepathUtils.append(final String... fragments)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(final String[] fragments, final int start, final int end)", "modifiers": "public static", "return": "String", "signature": "String append(final String[] fragments, final int start, final int end)", "full_signature": "public static String append(final String[] fragments, final int start, final int end)", "class_method_signature": "FilepathUtils.append(final String[] fragments, final int start, final int end)", "testcase": false, "constructor": false}], "file": "core/util/src/main/java/hera/util/FilepathUtils.java"}, "focal_method": {"identifier": "append", "parameters": "(final String... fragments)", "modifiers": "public static", "return": "String", "body": "public static String append(final String... fragments) {\n    return append(fragments, 0, fragments.length - 1);\n  }", "signature": "String append(final String... fragments)", "full_signature": "public static String append(final String... fragments)", "class_method_signature": "FilepathUtils.append(final String... fragments)", "testcase": false, "constructor": false, "invocations": ["append"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}