{"test_class": {"identifier": "OvenTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Oven oven;", "modifier": "private", "type": "Oven", "declarator": "oven", "var_name": "oven"}], "file": "recipe-java-runtime/src/test/java/ca/derekcormier/recipe/OvenTest.java"}, "test_case": {"identifier": "testBake_throwsOnNoDispatcherForIngredient", "parameters": "()", "modifiers": "@Test(expected = RuntimeException.class) public", "return": "void", "body": "@Test(expected = RuntimeException.class)\n  public void testBake_throwsOnNoDispatcherForIngredient() {\n    Ingredient ingredient = new Ingredient(\"TestIngredient\", \"A\") {};\n    oven.bake(Recipe.prepare(ingredient));\n  }", "signature": "void testBake_throwsOnNoDispatcherForIngredient()", "full_signature": "@Test(expected = RuntimeException.class) public void testBake_throwsOnNoDispatcherForIngredient()", "class_method_signature": "OvenTest.testBake_throwsOnNoDispatcherForIngredient()", "testcase": true, "constructor": false, "invocations": ["bake", "prepare"]}, "focal_class": {"identifier": "Oven", "superclass": "extends AbstractOven", "interfaces": "", "fields": [{"original_string": "private Dispatcher defaultDispatcher;", "modifier": "private", "type": "Dispatcher", "declarator": "defaultDispatcher", "var_name": "defaultDispatcher"}, {"original_string": "private Map<String, Dispatcher> dispatchers = new HashMap<>();", "modifier": "private", "type": "Map<String, Dispatcher>", "declarator": "dispatchers = new HashMap<>()", "var_name": "dispatchers"}, {"original_string": "private ObjectMapper objectMapper;", "modifier": "private", "type": "ObjectMapper", "declarator": "objectMapper", "var_name": "objectMapper"}, {"original_string": "private SubtypeResolver subtypeResolver;", "modifier": "private", "type": "SubtypeResolver", "declarator": "subtypeResolver", "var_name": "subtypeResolver"}], "methods": [{"identifier": "bake", "parameters": "(Recipe recipe)", "modifiers": "public", "return": "Cake", "signature": "Cake bake(Recipe recipe)", "full_signature": "public Cake bake(Recipe recipe)", "class_method_signature": "Oven.bake(Recipe recipe)", "testcase": false, "constructor": false}, {"identifier": "_bake", "parameters": "(Recipe recipe, Cake cake)", "modifiers": "private", "return": "Cake", "signature": "Cake _bake(Recipe recipe, Cake cake)", "full_signature": "private Cake _bake(Recipe recipe, Cake cake)", "class_method_signature": "Oven._bake(Recipe recipe, Cake cake)", "testcase": false, "constructor": false}, {"identifier": "addDispatcher", "parameters": "(String domain, Dispatcher dispatcher)", "modifiers": "public", "return": "void", "signature": "void addDispatcher(String domain, Dispatcher dispatcher)", "full_signature": "public void addDispatcher(String domain, Dispatcher dispatcher)", "class_method_signature": "Oven.addDispatcher(String domain, Dispatcher dispatcher)", "testcase": false, "constructor": false}, {"identifier": "setDefaultDispatcher", "parameters": "(Dispatcher dispatcher)", "modifiers": "public", "return": "void", "signature": "void setDefaultDispatcher(Dispatcher dispatcher)", "full_signature": "public void setDefaultDispatcher(Dispatcher dispatcher)", "class_method_signature": "Oven.setDefaultDispatcher(Dispatcher dispatcher)", "testcase": false, "constructor": false}, {"identifier": "_setDefaultDispatcher", "parameters": "(Dispatcher dispatcher)", "modifiers": "protected", "return": "void", "signature": "void _setDefaultDispatcher(Dispatcher dispatcher)", "full_signature": "protected void _setDefaultDispatcher(Dispatcher dispatcher)", "class_method_signature": "Oven._setDefaultDispatcher(Dispatcher dispatcher)", "testcase": false, "constructor": false}, {"identifier": "serializePayload", "parameters": "(Recipe recipe, Cake cake)", "modifiers": "private", "return": "String", "signature": "String serializePayload(Recipe recipe, Cake cake)", "full_signature": "private String serializePayload(Recipe recipe, Cake cake)", "class_method_signature": "Oven.serializePayload(Recipe recipe, Cake cake)", "testcase": false, "constructor": false}, {"identifier": "deserializeCake", "parameters": "(String json)", "modifiers": "private", "return": "Cake", "signature": "Cake deserializeCake(String json)", "full_signature": "private Cake deserializeCake(String json)", "class_method_signature": "Oven.deserializeCake(String json)", "testcase": false, "constructor": false}, {"identifier": "registerSubtypes", "parameters": "(Recipe recipe)", "modifiers": "private", "return": "void", "signature": "void registerSubtypes(Recipe recipe)", "full_signature": "private void registerSubtypes(Recipe recipe)", "class_method_signature": "Oven.registerSubtypes(Recipe recipe)", "testcase": false, "constructor": false}], "file": "recipe-java-runtime/src/main/java/ca/derekcormier/recipe/Oven.java"}, "focal_method": {"identifier": "bake", "parameters": "(Recipe recipe)", "modifiers": "public", "return": "Cake", "body": "public Cake bake(Recipe recipe) {\n    this.subtypeResolver = new StdSubtypeResolver();\n\n    registerSubtypes(recipe);\n\n    objectMapper = new ObjectMapper();\n    objectMapper.setSubtypeResolver(subtypeResolver);\n\n    Cake cake = _bake(recipe, createCake());\n    return cake;\n  }", "signature": "Cake bake(Recipe recipe)", "full_signature": "public Cake bake(Recipe recipe)", "class_method_signature": "Oven.bake(Recipe recipe)", "testcase": false, "constructor": false, "invocations": ["registerSubtypes", "setSubtypeResolver", "_bake", "createCake"]}, "repository": {"repo_id": 97669395, "url": "https://github.com/kormide/recipe", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 727, "license": "licensed"}}