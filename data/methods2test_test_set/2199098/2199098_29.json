{"test_class": {"identifier": "DefaultModelConfigurationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Mockery mockery = new Mockery();", "modifier": "private", "type": "Mockery", "declarator": "mockery = new Mockery()", "var_name": "mockery"}, {"original_string": "private ModelConfiguration configuration;", "modifier": "private", "type": "ModelConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private ConfigurationSource mockSource;", "modifier": "private", "type": "ConfigurationSource", "declarator": "mockSource", "var_name": "mockSource"}], "file": "xwiki-model-backport/tags/xwiki-core-model-backport-1.0/src/test/java/org/xwiki/model/internal/DefaultModelConfigurationTest.java"}, "test_case": {"identifier": "testGetDefaultReferenceNameWhenNotDefinedInConfiguration", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetDefaultReferenceNameWhenNotDefinedInConfiguration()\n    {\n        this.mockery.checking(new Expectations() {{\n            oneOf(mockSource).getProperty(\"model.reference.default.wiki\", \"xwiki\"); will(returnValue(\"xwiki\"));\n            oneOf(mockSource).getProperty(\"model.reference.default.document\", \"WebHome\"); will(returnValue(\"WebHome\"));\n            oneOf(mockSource).getProperty(\"model.reference.default.space\", \"Main\"); will(returnValue(\"Main\"));\n            oneOf(mockSource).getProperty(\"model.reference.default.attachment\", \"filename\");\n                will(returnValue(\"filename\"));\n            oneOf(mockSource).getProperty(\"model.reference.default.object\", \"object\");\n                will(returnValue(\"Main.WebHome\"));\n            oneOf(mockSource).getProperty(\"model.reference.default.object_property\", \"property\");\n                will(returnValue(\"property\"));\n        }});\n\n        Assert.assertEquals(\"xwiki\", this.configuration.getDefaultReferenceValue(EntityType.WIKI));\n        Assert.assertEquals(\"WebHome\", this.configuration.getDefaultReferenceValue(EntityType.DOCUMENT));\n        Assert.assertEquals(\"Main\", this.configuration.getDefaultReferenceValue(EntityType.SPACE));\n        Assert.assertEquals(\"filename\", this.configuration.getDefaultReferenceValue(EntityType.ATTACHMENT));\n        Assert.assertEquals(\"Main.WebHome\", configuration.getDefaultReferenceValue(EntityType.OBJECT));\n        Assert.assertEquals(\"property\", configuration.getDefaultReferenceValue(EntityType.OBJECT_PROPERTY));\n    }", "signature": "void testGetDefaultReferenceNameWhenNotDefinedInConfiguration()", "full_signature": "@Test public void testGetDefaultReferenceNameWhenNotDefinedInConfiguration()", "class_method_signature": "DefaultModelConfigurationTest.testGetDefaultReferenceNameWhenNotDefinedInConfiguration()", "testcase": true, "constructor": false, "invocations": ["checking", "getProperty", "oneOf", "will", "returnValue", "getProperty", "oneOf", "will", "returnValue", "getProperty", "oneOf", "will", "returnValue", "getProperty", "oneOf", "will", "returnValue", "getProperty", "oneOf", "will", "returnValue", "getProperty", "oneOf", "will", "returnValue", "assertEquals", "getDefaultReferenceValue", "assertEquals", "getDefaultReferenceValue", "assertEquals", "getDefaultReferenceValue", "assertEquals", "getDefaultReferenceValue", "assertEquals", "getDefaultReferenceValue", "assertEquals", "getDefaultReferenceValue"]}, "focal_class": {"identifier": "DefaultModelConfiguration", "superclass": "extends AbstractLogEnabled", "interfaces": "implements ModelConfiguration", "fields": [{"original_string": "private static final String PREFIX = \"model.\";", "modifier": "private static final", "type": "String", "declarator": "PREFIX = \"model.\"", "var_name": "PREFIX"}, {"original_string": "private static final Map<EntityType, String> DEFAULT_VALUES = new HashMap<EntityType, String>() {{\n        put(EntityType.WIKI, \"xwiki\");\n        put(EntityType.SPACE, \"Main\");\n        put(EntityType.DOCUMENT, \"WebHome\");\n        put(EntityType.ATTACHMENT, \"filename\");\n        put(EntityType.OBJECT, \"object\");\n        put(EntityType.OBJECT_PROPERTY, \"property\");\n    }};", "modifier": "private static final", "type": "Map<EntityType, String>", "declarator": "DEFAULT_VALUES = new HashMap<EntityType, String>() {{\n        put(EntityType.WIKI, \"xwiki\");\n        put(EntityType.SPACE, \"Main\");\n        put(EntityType.DOCUMENT, \"WebHome\");\n        put(EntityType.ATTACHMENT, \"filename\");\n        put(EntityType.OBJECT, \"object\");\n        put(EntityType.OBJECT_PROPERTY, \"property\");\n    }}", "var_name": "DEFAULT_VALUES"}, {"original_string": "@Requirement\n    private ComponentManager componentManager;", "modifier": "@Requirement\n    private", "type": "ComponentManager", "declarator": "componentManager", "var_name": "componentManager"}], "methods": [{"identifier": "getDefaultReferenceValue", "parameters": "(EntityType type)", "modifiers": "public", "return": "String", "signature": "String getDefaultReferenceValue(EntityType type)", "full_signature": "public String getDefaultReferenceValue(EntityType type)", "class_method_signature": "DefaultModelConfiguration.getDefaultReferenceValue(EntityType type)", "testcase": false, "constructor": false}], "file": "xwiki-model-backport/tags/xwiki-core-model-backport-1.0/src/main/java/org/xwiki/model/internal/DefaultModelConfiguration.java"}, "focal_method": {"identifier": "getDefaultReferenceValue", "parameters": "(EntityType type)", "modifiers": "public", "return": "String", "body": "public String getDefaultReferenceValue(EntityType type)\n    {\n        String name;\n        try {\n            // TODO: For the moment we only look in the XWiki properties file since otherwise looking into\n            // Wiki, Space and User preferences cause some cyclic dependencies (we'll be able to do that when all\n            // code has been migrated to use References instead of Strings).\n            ConfigurationSource configuration =\n                this.componentManager.lookup(ConfigurationSource.class, \"xwikiproperties\");\n            name = configuration.getProperty(PREFIX + \"reference.default.\" + type.toString().toLowerCase(),\n                DEFAULT_VALUES.get(type));\n        } catch (ComponentLookupException e) {\n            // Failed to load the component, use default values\n            getLogger().debug(\"Failed to load [\" + ConfigurationSource.class.getName()\n                + \"]. Using default Model values\", e);\n            name = DEFAULT_VALUES.get(type);\n        }\n\n        return name;\n    }", "signature": "String getDefaultReferenceValue(EntityType type)", "full_signature": "public String getDefaultReferenceValue(EntityType type)", "class_method_signature": "DefaultModelConfiguration.getDefaultReferenceValue(EntityType type)", "testcase": false, "constructor": false, "invocations": ["lookup", "getProperty", "toLowerCase", "toString", "get", "debug", "getLogger", "getName", "get"]}, "repository": {"repo_id": 2199098, "url": "https://github.com/xwiki-contrib/sandbox", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 8, "size": 14798, "license": "licensed"}}