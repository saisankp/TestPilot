{"test_class": {"identifier": "DocumentationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Documentation documentation;", "modifier": "private", "type": "Documentation", "declarator": "documentation", "var_name": "documentation"}], "file": "geoclient-service/src/test/java/gov/nyc/doitt/gis/geoclient/service/domain/DocumentationTest.java"}, "test_case": {"identifier": "testApplicableFunctions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testApplicableFunctions()\n    {\n        List<String> ids = new ArrayList<String>();\n        ids.add(Function.F1A);\n        ids.add(Function.F3);\n        ids.add(Function.F2);\n        ids.add(Function.FD);\n        ids.add(Function.FDG);\n        ids.add(Function.FDN);\n        ids.add(Function.F1B);\n        ids.add(Function.FBN);\n        ids.add(\"bogus\");\n        ids.add(Function.FBL);\n        ItemDocumentation itemDocumentation = new ItemDocumentation();\n        assertTrue(documentation.applicableFunctions(itemDocumentation).isEmpty());\n        itemDocumentation.setFunctionNames(ids);\n        List<String> result = documentation.applicableFunctions(itemDocumentation);\n        assertEquals(Documentation.BLOCKFACE_FUNCTION, result.get(0));\n        assertEquals(Documentation.INTERSECTION_FUNCTION, result.get(1));\n        assertEquals(Documentation.ADDRESS_AND_PLACE_FUNCTIONS, result.get(2));\n        assertEquals(Documentation.BIN_FUNCTION, result.get(3));\n        assertEquals(Documentation.BBL_FUNCTION, result.get(4));\n        assertEquals(5, result.size());\n    }", "signature": "void testApplicableFunctions()", "full_signature": "@Test public void testApplicableFunctions()", "class_method_signature": "DocumentationTest.testApplicableFunctions()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "assertTrue", "isEmpty", "applicableFunctions", "setFunctionNames", "applicableFunctions", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "size"]}, "focal_class": {"identifier": "Documentation", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String ADDRESS_FUNCTION = \"Address\";", "modifier": "public static final", "type": "String", "declarator": "ADDRESS_FUNCTION = \"Address\"", "var_name": "ADDRESS_FUNCTION"}, {"original_string": "public static final String BBL_FUNCTION = \"BBL\";", "modifier": "public static final", "type": "String", "declarator": "BBL_FUNCTION = \"BBL\"", "var_name": "BBL_FUNCTION"}, {"original_string": "public static final String BIN_FUNCTION = \"BIN\";", "modifier": "public static final", "type": "String", "declarator": "BIN_FUNCTION = \"BIN\"", "var_name": "BIN_FUNCTION"}, {"original_string": "public static final String BLOCKFACE_FUNCTION = \"Blockface\";", "modifier": "public static final", "type": "String", "declarator": "BLOCKFACE_FUNCTION = \"Blockface\"", "var_name": "BLOCKFACE_FUNCTION"}, {"original_string": "public static final String INTERSECTION_FUNCTION = \"Intersection\";", "modifier": "public static final", "type": "String", "declarator": "INTERSECTION_FUNCTION = \"Intersection\"", "var_name": "INTERSECTION_FUNCTION"}, {"original_string": "public static final String PLACE_FUNCTION = \"Place\";", "modifier": "public static final", "type": "String", "declarator": "PLACE_FUNCTION = \"Place\"", "var_name": "PLACE_FUNCTION"}, {"original_string": "public static final String ADDRESS_AND_PLACE_FUNCTIONS = ADDRESS_FUNCTION + \"/\" + PLACE_FUNCTION;", "modifier": "public static final", "type": "String", "declarator": "ADDRESS_AND_PLACE_FUNCTIONS = ADDRESS_FUNCTION + \"/\" + PLACE_FUNCTION", "var_name": "ADDRESS_AND_PLACE_FUNCTIONS"}, {"original_string": "public static final Map<String, String> FUNCTION_MAPPING = new HashMap<String, String>();", "modifier": "public static final", "type": "Map<String, String>", "declarator": "FUNCTION_MAPPING = new HashMap<String, String>()", "var_name": "FUNCTION_MAPPING"}, {"original_string": "private FunctionDocumentation addressDocumentation;", "modifier": "private", "type": "FunctionDocumentation", "declarator": "addressDocumentation", "var_name": "addressDocumentation"}, {"original_string": "private FunctionDocumentation bblDocumentation;", "modifier": "private", "type": "FunctionDocumentation", "declarator": "bblDocumentation", "var_name": "bblDocumentation"}, {"original_string": "private FunctionDocumentation binDocumentation;", "modifier": "private", "type": "FunctionDocumentation", "declarator": "binDocumentation", "var_name": "binDocumentation"}, {"original_string": "private FunctionDocumentation blockfaceDocumentation;", "modifier": "private", "type": "FunctionDocumentation", "declarator": "blockfaceDocumentation", "var_name": "blockfaceDocumentation"}, {"original_string": "private DataDictionary dataDictionary;", "modifier": "private", "type": "DataDictionary", "declarator": "dataDictionary", "var_name": "dataDictionary"}, {"original_string": "private FunctionDocumentation intersectionDocumentation;", "modifier": "private", "type": "FunctionDocumentation", "declarator": "intersectionDocumentation", "var_name": "intersectionDocumentation"}, {"original_string": "private FunctionDocumentation placeDocumentation;", "modifier": "private", "type": "FunctionDocumentation", "declarator": "placeDocumentation", "var_name": "placeDocumentation"}, {"original_string": "private List<FunctionDocumentation> allFunctionDocumentation;", "modifier": "private", "type": "List<FunctionDocumentation>", "declarator": "allFunctionDocumentation", "var_name": "allFunctionDocumentation"}], "methods": [{"identifier": "isSupported", "parameters": "(ItemDocumentation itemDocumentation)", "modifiers": "public", "return": "boolean", "signature": "boolean isSupported(ItemDocumentation itemDocumentation)", "full_signature": "public boolean isSupported(ItemDocumentation itemDocumentation)", "class_method_signature": "Documentation.isSupported(ItemDocumentation itemDocumentation)", "testcase": false, "constructor": false}, {"identifier": "applicableFunctions", "parameters": "(ItemDocumentation itemDocumentation)", "modifiers": "public", "return": "List<String>", "signature": "List<String> applicableFunctions(ItemDocumentation itemDocumentation)", "full_signature": "public List<String> applicableFunctions(ItemDocumentation itemDocumentation)", "class_method_signature": "Documentation.applicableFunctions(ItemDocumentation itemDocumentation)", "testcase": false, "constructor": false}, {"identifier": "getAllFunctionDocumentation", "parameters": "()", "modifiers": "public", "return": "List<FunctionDocumentation>", "signature": "List<FunctionDocumentation> getAllFunctionDocumentation()", "full_signature": "public List<FunctionDocumentation> getAllFunctionDocumentation()", "class_method_signature": "Documentation.getAllFunctionDocumentation()", "testcase": false, "constructor": false}, {"identifier": "getAddressDocumentation", "parameters": "()", "modifiers": "public", "return": "FunctionDocumentation", "signature": "FunctionDocumentation getAddressDocumentation()", "full_signature": "public FunctionDocumentation getAddressDocumentation()", "class_method_signature": "Documentation.getAddressDocumentation()", "testcase": false, "constructor": false}, {"identifier": "getBblDocumentation", "parameters": "()", "modifiers": "public", "return": "FunctionDocumentation", "signature": "FunctionDocumentation getBblDocumentation()", "full_signature": "public FunctionDocumentation getBblDocumentation()", "class_method_signature": "Documentation.getBblDocumentation()", "testcase": false, "constructor": false}, {"identifier": "getBinDocumentation", "parameters": "()", "modifiers": "public", "return": "FunctionDocumentation", "signature": "FunctionDocumentation getBinDocumentation()", "full_signature": "public FunctionDocumentation getBinDocumentation()", "class_method_signature": "Documentation.getBinDocumentation()", "testcase": false, "constructor": false}, {"identifier": "getBlockfaceDocumentation", "parameters": "()", "modifiers": "public", "return": "FunctionDocumentation", "signature": "FunctionDocumentation getBlockfaceDocumentation()", "full_signature": "public FunctionDocumentation getBlockfaceDocumentation()", "class_method_signature": "Documentation.getBlockfaceDocumentation()", "testcase": false, "constructor": false}, {"identifier": "getDataDictionary", "parameters": "()", "modifiers": "public", "return": "DataDictionary", "signature": "DataDictionary getDataDictionary()", "full_signature": "public DataDictionary getDataDictionary()", "class_method_signature": "Documentation.getDataDictionary()", "testcase": false, "constructor": false}, {"identifier": "getIntersectionDocumentation", "parameters": "()", "modifiers": "public", "return": "FunctionDocumentation", "signature": "FunctionDocumentation getIntersectionDocumentation()", "full_signature": "public FunctionDocumentation getIntersectionDocumentation()", "class_method_signature": "Documentation.getIntersectionDocumentation()", "testcase": false, "constructor": false}, {"identifier": "getPlaceDocumentation", "parameters": "()", "modifiers": "public", "return": "FunctionDocumentation", "signature": "FunctionDocumentation getPlaceDocumentation()", "full_signature": "public FunctionDocumentation getPlaceDocumentation()", "class_method_signature": "Documentation.getPlaceDocumentation()", "testcase": false, "constructor": false}, {"identifier": "setAddressDocumentation", "parameters": "(FunctionDocumentation addressDocumentation)", "modifiers": "public", "return": "void", "signature": "void setAddressDocumentation(FunctionDocumentation addressDocumentation)", "full_signature": "public void setAddressDocumentation(FunctionDocumentation addressDocumentation)", "class_method_signature": "Documentation.setAddressDocumentation(FunctionDocumentation addressDocumentation)", "testcase": false, "constructor": false}, {"identifier": "setBblDocumentation", "parameters": "(FunctionDocumentation bblDocumentation)", "modifiers": "public", "return": "void", "signature": "void setBblDocumentation(FunctionDocumentation bblDocumentation)", "full_signature": "public void setBblDocumentation(FunctionDocumentation bblDocumentation)", "class_method_signature": "Documentation.setBblDocumentation(FunctionDocumentation bblDocumentation)", "testcase": false, "constructor": false}, {"identifier": "setBinDocumentation", "parameters": "(FunctionDocumentation binDocumentation)", "modifiers": "public", "return": "void", "signature": "void setBinDocumentation(FunctionDocumentation binDocumentation)", "full_signature": "public void setBinDocumentation(FunctionDocumentation binDocumentation)", "class_method_signature": "Documentation.setBinDocumentation(FunctionDocumentation binDocumentation)", "testcase": false, "constructor": false}, {"identifier": "setBlockfaceDocumentation", "parameters": "(FunctionDocumentation blockfaceDocumentation)", "modifiers": "public", "return": "void", "signature": "void setBlockfaceDocumentation(FunctionDocumentation blockfaceDocumentation)", "full_signature": "public void setBlockfaceDocumentation(FunctionDocumentation blockfaceDocumentation)", "class_method_signature": "Documentation.setBlockfaceDocumentation(FunctionDocumentation blockfaceDocumentation)", "testcase": false, "constructor": false}, {"identifier": "setDataDictionary", "parameters": "(DataDictionary dataDictionary)", "modifiers": "public", "return": "void", "signature": "void setDataDictionary(DataDictionary dataDictionary)", "full_signature": "public void setDataDictionary(DataDictionary dataDictionary)", "class_method_signature": "Documentation.setDataDictionary(DataDictionary dataDictionary)", "testcase": false, "constructor": false}, {"identifier": "setIntersectionDocumentation", "parameters": "(FunctionDocumentation intersectionDocumentation)", "modifiers": "public", "return": "void", "signature": "void setIntersectionDocumentation(FunctionDocumentation intersectionDocumentation)", "full_signature": "public void setIntersectionDocumentation(FunctionDocumentation intersectionDocumentation)", "class_method_signature": "Documentation.setIntersectionDocumentation(FunctionDocumentation intersectionDocumentation)", "testcase": false, "constructor": false}, {"identifier": "setPlaceDocumentation", "parameters": "(FunctionDocumentation placeDocumentation)", "modifiers": "public", "return": "void", "signature": "void setPlaceDocumentation(FunctionDocumentation placeDocumentation)", "full_signature": "public void setPlaceDocumentation(FunctionDocumentation placeDocumentation)", "class_method_signature": "Documentation.setPlaceDocumentation(FunctionDocumentation placeDocumentation)", "testcase": false, "constructor": false}], "file": "geoclient-service/src/main/java/gov/nyc/doitt/gis/geoclient/service/domain/Documentation.java"}, "focal_method": {"identifier": "applicableFunctions", "parameters": "(ItemDocumentation itemDocumentation)", "modifiers": "public", "return": "List<String>", "body": "public List<String> applicableFunctions(ItemDocumentation itemDocumentation)\n    {\n        List<String> result = new ArrayList<String>();\n        List<String> ids = itemDocumentation.getFunctionNames();\n        if (ids != null)\n        {\n            for (String id : ids)\n            {\n                if (FUNCTION_MAPPING.containsKey(id))\n                {\n                    result.add(FUNCTION_MAPPING.get(id));\n                }\n            }\n        }\n        return result;\n    }", "signature": "List<String> applicableFunctions(ItemDocumentation itemDocumentation)", "full_signature": "public List<String> applicableFunctions(ItemDocumentation itemDocumentation)", "class_method_signature": "Documentation.applicableFunctions(ItemDocumentation itemDocumentation)", "testcase": false, "constructor": false, "invocations": ["getFunctionNames", "containsKey", "add", "get"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}