{"test_class": {"identifier": "ParameterSetGeneratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/ml/src/test/java/org/apache/ignite/ml/selection/paramgrid/ParameterSetGeneratorTest.java"}, "test_case": {"identifier": "testParamSetGenerator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParamSetGenerator() {\n        Map<Integer, Double[]> map = new TreeMap<>();\n        map.put(0, new Double[]{1.1, 2.1});\n        map.put(1, new Double[]{1.2, 2.2, 3.2, 4.2});\n        map.put(2, new Double[]{1.3, 2.3});\n        map.put(3, new Double[]{1.4});\n\n        List<Double[]> res = new ParameterSetGenerator(map).generate();\n        assertEquals(res.size(), 16);\n    }", "signature": "void testParamSetGenerator()", "full_signature": "@Test public void testParamSetGenerator()", "class_method_signature": "ParameterSetGeneratorTest.testParamSetGenerator()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "generate", "assertEquals", "size"]}, "focal_class": {"identifier": "ParameterSetGenerator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private int sizeOfParamVector = 100;", "modifier": "private", "type": "int", "declarator": "sizeOfParamVector = 100", "var_name": "sizeOfParamVector"}, {"original_string": "private List<Double[]> params = new ArrayList<>();", "modifier": "private", "type": "List<Double[]>", "declarator": "params = new ArrayList<>()", "var_name": "params"}, {"original_string": "private Map<Integer, Double[]> map;", "modifier": "private", "type": "Map<Integer, Double[]>", "declarator": "map", "var_name": "map"}], "methods": [{"identifier": "ParameterSetGenerator", "parameters": "(Map<Integer, Double[]> map)", "modifiers": "public", "return": "", "signature": " ParameterSetGenerator(Map<Integer, Double[]> map)", "full_signature": "public  ParameterSetGenerator(Map<Integer, Double[]> map)", "class_method_signature": "ParameterSetGenerator.ParameterSetGenerator(Map<Integer, Double[]> map)", "testcase": false, "constructor": true}, {"identifier": "generate", "parameters": "()", "modifiers": "public", "return": "List<Double[]>", "signature": "List<Double[]> generate()", "full_signature": "public List<Double[]> generate()", "class_method_signature": "ParameterSetGenerator.generate()", "testcase": false, "constructor": false}, {"identifier": "traverseTree", "parameters": "(Map<Integer, Double[]> map, Double[] nextPnt, int dimensionNum)", "modifiers": "private", "return": "void", "signature": "void traverseTree(Map<Integer, Double[]> map, Double[] nextPnt, int dimensionNum)", "full_signature": "private void traverseTree(Map<Integer, Double[]> map, Double[] nextPnt, int dimensionNum)", "class_method_signature": "ParameterSetGenerator.traverseTree(Map<Integer, Double[]> map, Double[] nextPnt, int dimensionNum)", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/selection/paramgrid/ParameterSetGenerator.java"}, "focal_method": {"identifier": "generate", "parameters": "()", "modifiers": "public", "return": "List<Double[]>", "body": "public List<Double[]> generate() {\n\n        Double[] nextPnt = new Double[sizeOfParamVector];\n\n        traverseTree(map, nextPnt, -1);\n\n        return Collections.unmodifiableList(params);\n    }", "signature": "List<Double[]> generate()", "full_signature": "public List<Double[]> generate()", "class_method_signature": "ParameterSetGenerator.generate()", "testcase": false, "constructor": false, "invocations": ["traverseTree", "unmodifiableList"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}