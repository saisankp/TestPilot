{"test_class": {"identifier": "BeanSerializerTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/common/src/test/java/com/alipay/sofa/rpc/common/json/BeanSerializerTest.java"}, "test_case": {"identifier": "serializeMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void serializeMap() {\n        boolean error = false;\n        Map<Object, Object> bean = createTestMap();\n        try {\n            Map map = (Map) BeanSerializer.serialize(bean, true);\n            for (Map.Entry<Object, Object> entry : bean.entrySet()) {\n                if (!map.containsKey(entry.getKey())) {\n                    error = true;\n                    break;\n                }\n            }\n            Assert.assertFalse(error);\n\n            map = (Map) BeanSerializer.serialize(bean);\n            for (Map.Entry<Object, Object> entry : bean.entrySet()) {\n                if (!map.containsKey(entry.getKey())) {\n                    error = true;\n                    break;\n                }\n            }\n            Assert.assertFalse(error);\n        } catch (Exception e) {\n            error = true;\n        }\n        Assert.assertFalse(error);\n    }", "signature": "void serializeMap()", "full_signature": "@Test public void serializeMap()", "class_method_signature": "BeanSerializerTest.serializeMap()", "testcase": true, "constructor": false, "invocations": ["createTestMap", "serialize", "entrySet", "containsKey", "getKey", "assertFalse", "serialize", "entrySet", "containsKey", "getKey", "assertFalse", "assertFalse"]}, "focal_class": {"identifier": "BeanSerializer", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "serialize", "parameters": "(Object bean)", "modifiers": "public static", "return": "Object", "signature": "Object serialize(Object bean)", "full_signature": "public static Object serialize(Object bean)", "class_method_signature": "BeanSerializer.serialize(Object bean)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(Object bean, boolean addType)", "modifiers": "public static", "return": "Object", "signature": "Object serialize(Object bean, boolean addType)", "full_signature": "public static Object serialize(Object bean, boolean addType)", "class_method_signature": "BeanSerializer.serialize(Object bean, boolean addType)", "testcase": false, "constructor": false}, {"identifier": "mapToMap", "parameters": "(Map<K, V> src, Class<? extends Map> dstClazz)", "modifiers": "private static", "return": "Map<K, V>", "signature": "Map<K, V> mapToMap(Map<K, V> src, Class<? extends Map> dstClazz)", "full_signature": "private static Map<K, V> mapToMap(Map<K, V> src, Class<? extends Map> dstClazz)", "class_method_signature": "BeanSerializer.mapToMap(Map<K, V> src, Class<? extends Map> dstClazz)", "testcase": false, "constructor": false}, {"identifier": "mapToObject", "parameters": "(Map src, Class<T> dstClazz)", "modifiers": "private static", "return": "T", "signature": "T mapToObject(Map src, Class<T> dstClazz)", "full_signature": "private static T mapToObject(Map src, Class<T> dstClazz)", "class_method_signature": "BeanSerializer.mapToObject(Map src, Class<T> dstClazz)", "testcase": false, "constructor": false}, {"identifier": "arrayToCollection", "parameters": "(Object src,\n                                                       Class<? extends Collection> clazz, Class<T> genericType)", "modifiers": "private static", "return": "Collection<T>", "signature": "Collection<T> arrayToCollection(Object src,\n                                                       Class<? extends Collection> clazz, Class<T> genericType)", "full_signature": "private static Collection<T> arrayToCollection(Object src,\n                                                       Class<? extends Collection> clazz, Class<T> genericType)", "class_method_signature": "BeanSerializer.arrayToCollection(Object src,\n                                                       Class<? extends Collection> clazz, Class<T> genericType)", "testcase": false, "constructor": false}, {"identifier": "collection2Collection", "parameters": "(Collection src,\n                                                           Class<? extends Collection> clazz, Class<T> genericType)", "modifiers": "private static", "return": "Collection<T>", "signature": "Collection<T> collection2Collection(Collection src,\n                                                           Class<? extends Collection> clazz, Class<T> genericType)", "full_signature": "private static Collection<T> collection2Collection(Collection src,\n                                                           Class<? extends Collection> clazz, Class<T> genericType)", "class_method_signature": "BeanSerializer.collection2Collection(Collection src,\n                                                           Class<? extends Collection> clazz, Class<T> genericType)", "testcase": false, "constructor": false}, {"identifier": "collectionToArray", "parameters": "(Collection<T> src, Class<T> componentType)", "modifiers": "private static", "return": "T[]", "signature": "T[] collectionToArray(Collection<T> src, Class<T> componentType)", "full_signature": "private static T[] collectionToArray(Collection<T> src, Class<T> componentType)", "class_method_signature": "BeanSerializer.collectionToArray(Collection<T> src, Class<T> componentType)", "testcase": false, "constructor": false}, {"identifier": "array2Array", "parameters": "(Object[] src, Class<T> componentType)", "modifiers": "private static", "return": "T[]", "signature": "T[] array2Array(Object[] src, Class<T> componentType)", "full_signature": "private static T[] array2Array(Object[] src, Class<T> componentType)", "class_method_signature": "BeanSerializer.array2Array(Object[] src, Class<T> componentType)", "testcase": false, "constructor": false}, {"identifier": "deserializeByType", "parameters": "(Object src, Class<T> clazz)", "modifiers": "public static", "return": "T", "signature": "T deserializeByType(Object src, Class<T> clazz)", "full_signature": "public static T deserializeByType(Object src, Class<T> clazz)", "class_method_signature": "BeanSerializer.deserializeByType(Object src, Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(Object object)", "modifiers": "public static", "return": "Object", "signature": "Object deserialize(Object object)", "full_signature": "public static Object deserialize(Object object)", "class_method_signature": "BeanSerializer.deserialize(Object object)", "testcase": false, "constructor": false}], "file": "core/common/src/main/java/com/alipay/sofa/rpc/common/json/BeanSerializer.java"}, "focal_method": {"identifier": "serialize", "parameters": "(Object bean)", "modifiers": "public static", "return": "Object", "body": "public static Object serialize(Object bean) throws NullPointerException {\n        return serialize(bean, false);\n    }", "signature": "Object serialize(Object bean)", "full_signature": "public static Object serialize(Object bean)", "class_method_signature": "BeanSerializer.serialize(Object bean)", "testcase": false, "constructor": false, "invocations": ["serialize"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}