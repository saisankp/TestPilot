{"test_class": {"identifier": "InBufferTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private InBuffer inBuffer;", "modifier": "@InjectMocks\n    private", "type": "InBuffer", "declarator": "inBuffer", "var_name": "inBuffer"}, {"original_string": "@Mock\n    private QueueDispatcherService queueDispatcher;", "modifier": "@Mock\n    private", "type": "QueueDispatcherService", "declarator": "queueDispatcher", "var_name": "queueDispatcher"}, {"original_string": "@Mock\n    private WorkerManager workerManager;", "modifier": "@Mock\n    private", "type": "WorkerManager", "declarator": "workerManager", "var_name": "workerManager"}, {"original_string": "@Mock\n    private SimpleExecutionRunnableFactory simpleExecutionRunnableFactory;", "modifier": "@Mock\n    private", "type": "SimpleExecutionRunnableFactory", "declarator": "simpleExecutionRunnableFactory", "var_name": "simpleExecutionRunnableFactory"}, {"original_string": "@Mock\n    private OutboundBuffer outBuffer;", "modifier": "@Mock\n    private", "type": "OutboundBuffer", "declarator": "outBuffer", "var_name": "outBuffer"}, {"original_string": "@Mock\n    private WorkerRecoveryManagerImpl recoveryManager;", "modifier": "@Mock\n    private", "type": "WorkerRecoveryManagerImpl", "declarator": "recoveryManager", "var_name": "recoveryManager"}, {"original_string": "@Mock\n    private SynchronizationManager synchronizationManager;", "modifier": "@Mock\n    private", "type": "SynchronizationManager", "declarator": "synchronizationManager", "var_name": "synchronizationManager"}, {"original_string": "@Mock\n    private WorkerStateUpdateService workerStateUpdateService;", "modifier": "@Mock\n    private", "type": "WorkerStateUpdateService", "declarator": "workerStateUpdateService", "var_name": "workerStateUpdateService"}, {"original_string": "@Mock\n    private WorkerConfigurationUtils workerConfigurationUtils;", "modifier": "@Mock\n    private", "type": "WorkerConfigurationUtils", "declarator": "workerConfigurationUtils", "var_name": "workerConfigurationUtils"}], "file": "worker/worker-manager/score-worker-manager-impl/src/test/java/io/cloudslang/worker/management/services/InBufferTest.java"}, "test_case": {"identifier": "testRunBeforeCtxClosedEvent", "parameters": "()", "modifiers": "@Test(timeout = 5000) public", "return": "void", "body": "@Test(timeout = 5000)\n    public void testRunBeforeCtxClosedEvent() throws Exception {\n        ContextRefreshedEvent refreshEvent = mock(ContextRefreshedEvent.class);\n        inBuffer.onApplicationEvent(refreshEvent);\n\n        ContextClosedEvent event = mock(ContextClosedEvent.class);\n        when(workerManager.isUp()).thenReturn(true);\n        doReturn(true).when(workerStateUpdateService).isWorkerEnabled();\n        Thread thread = new Thread(inBuffer);\n        thread.start();\n\n        verify(workerManager, timeout(1000).atLeastOnce()).getInBufferSize();\n\n        inBuffer.onApplicationEvent(event);\n        while (thread.isAlive()) {\n            Thread.sleep(100L);\n        }\n    }", "signature": "void testRunBeforeCtxClosedEvent()", "full_signature": "@Test(timeout = 5000) public void testRunBeforeCtxClosedEvent()", "class_method_signature": "InBufferTest.testRunBeforeCtxClosedEvent()", "testcase": true, "constructor": false, "invocations": ["mock", "onApplicationEvent", "mock", "thenReturn", "when", "isUp", "isWorkerEnabled", "when", "doReturn", "start", "getInBufferSize", "verify", "atLeastOnce", "timeout", "onApplicationEvent", "isAlive", "sleep"]}, "focal_class": {"identifier": "InBuffer", "superclass": "", "interfaces": "implements WorkerRecoveryListener, ApplicationListener, Runnable", "fields": [{"original_string": "private static final Logger logger = Logger.getLogger(InBuffer.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = Logger.getLogger(InBuffer.class)", "var_name": "logger"}, {"original_string": "private static final int MINIMUM_GC_DELTA = 10000;", "modifier": "private static final", "type": "int", "declarator": "MINIMUM_GC_DELTA = 10000", "var_name": "MINIMUM_GC_DELTA"}, {"original_string": "@Autowired\n    private QueueDispatcherService queueDispatcher;", "modifier": "@Autowired\n    private", "type": "QueueDispatcherService", "declarator": "queueDispatcher", "var_name": "queueDispatcher"}, {"original_string": "@Resource\n    private String workerUuid;", "modifier": "@Resource\n    private", "type": "String", "declarator": "workerUuid", "var_name": "workerUuid"}, {"original_string": "@Autowired\n    @Qualifier(\"inBufferCapacity\")\n    private Integer capacity;", "modifier": "@Autowired\n    @Qualifier(\"inBufferCapacity\")\n    private", "type": "Integer", "declarator": "capacity", "var_name": "capacity"}, {"original_string": "@Autowired(required = false)\n    @Qualifier(\"coolDownPollingMillis\")\n    private Integer coolDownPollingMillis = 200;", "modifier": "@Autowired(required = false)\n    @Qualifier(\"coolDownPollingMillis\")\n    private", "type": "Integer", "declarator": "coolDownPollingMillis = 200", "var_name": "coolDownPollingMillis"}, {"original_string": "@Autowired\n    private WorkerManager workerManager;", "modifier": "@Autowired\n    private", "type": "WorkerManager", "declarator": "workerManager", "var_name": "workerManager"}, {"original_string": "@Autowired\n    private SimpleExecutionRunnableFactory simpleExecutionRunnableFactory;", "modifier": "@Autowired\n    private", "type": "SimpleExecutionRunnableFactory", "declarator": "simpleExecutionRunnableFactory", "var_name": "simpleExecutionRunnableFactory"}, {"original_string": "@Autowired\n    private OutboundBuffer outBuffer;", "modifier": "@Autowired\n    private", "type": "OutboundBuffer", "declarator": "outBuffer", "var_name": "outBuffer"}, {"original_string": "@Autowired\n    private SynchronizationManager syncManager;", "modifier": "@Autowired\n    private", "type": "SynchronizationManager", "declarator": "syncManager", "var_name": "syncManager"}, {"original_string": "@Autowired\n    @Qualifier(\"numberOfExecutionThreads\")\n    private Integer numberOfThreads;", "modifier": "@Autowired\n    @Qualifier(\"numberOfExecutionThreads\")\n    private", "type": "Integer", "declarator": "numberOfThreads", "var_name": "numberOfThreads"}, {"original_string": "@Autowired(required = false)\n    private ExecutionsActivityListener executionsActivityListener;", "modifier": "@Autowired(required = false)\n    private", "type": "ExecutionsActivityListener", "declarator": "executionsActivityListener", "var_name": "executionsActivityListener"}, {"original_string": "@Autowired\n    private WorkerConfigurationUtils workerConfigurationUtils;", "modifier": "@Autowired\n    private", "type": "WorkerConfigurationUtils", "declarator": "workerConfigurationUtils", "var_name": "workerConfigurationUtils"}, {"original_string": "@Autowired\n    private WorkerStateUpdateService workerStateUpdateService;", "modifier": "@Autowired\n    private", "type": "WorkerStateUpdateService", "declarator": "workerStateUpdateService", "var_name": "workerStateUpdateService"}, {"original_string": "private Thread fillBufferThread = new Thread(this);", "modifier": "private", "type": "Thread", "declarator": "fillBufferThread = new Thread(this)", "var_name": "fillBufferThread"}, {"original_string": "private boolean inShutdown;", "modifier": "private", "type": "boolean", "declarator": "inShutdown", "var_name": "inShutdown"}, {"original_string": "private boolean endOfInit = false;", "modifier": "private", "type": "boolean", "declarator": "endOfInit = false", "var_name": "endOfInit"}, {"original_string": "private long gcTimer = System.currentTimeMillis();", "modifier": "private", "type": "long", "declarator": "gcTimer = System.currentTimeMillis()", "var_name": "gcTimer"}, {"original_string": "private boolean newInBufferBehaviour;", "modifier": "private", "type": "boolean", "declarator": "newInBufferBehaviour", "var_name": "newInBufferBehaviour"}, {"original_string": "private int newInBufferSize;", "modifier": "private", "type": "int", "declarator": "newInBufferSize", "var_name": "newInBufferSize"}, {"original_string": "private int minInBufferSize;", "modifier": "private", "type": "int", "declarator": "minInBufferSize", "var_name": "minInBufferSize"}, {"original_string": "private double workerFreeMemoryRatio;", "modifier": "private", "type": "double", "declarator": "workerFreeMemoryRatio", "var_name": "workerFreeMemoryRatio"}], "methods": [{"identifier": "init", "parameters": "()", "modifiers": "@PostConstruct", "return": "void", "signature": "void init()", "full_signature": "@PostConstruct void init()", "class_method_signature": "InBuffer.init()", "testcase": false, "constructor": false}, {"identifier": "getWorkerFreeMemoryRatio", "parameters": "()", "modifiers": "private", "return": "double", "signature": "double getWorkerFreeMemoryRatio()", "full_signature": "private double getWorkerFreeMemoryRatio()", "class_method_signature": "InBuffer.getWorkerFreeMemoryRatio()", "testcase": false, "constructor": false}, {"identifier": "fillBufferPeriodically", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void fillBufferPeriodically()", "full_signature": "private void fillBufferPeriodically()", "class_method_signature": "InBuffer.fillBufferPeriodically()", "testcase": false, "constructor": false}, {"identifier": "needToPoll", "parameters": "(int bufferSize, long totalMemory, long freeMemory)", "modifiers": "private", "return": "boolean", "signature": "boolean needToPoll(int bufferSize, long totalMemory, long freeMemory)", "full_signature": "private boolean needToPoll(int bufferSize, long totalMemory, long freeMemory)", "class_method_signature": "InBuffer.needToPoll(int bufferSize, long totalMemory, long freeMemory)", "testcase": false, "constructor": false}, {"identifier": "ackMessages", "parameters": "(List<ExecutionMessage> newMessages)", "modifiers": "private", "return": "void", "signature": "void ackMessages(List<ExecutionMessage> newMessages)", "full_signature": "private void ackMessages(List<ExecutionMessage> newMessages)", "class_method_signature": "InBuffer.ackMessages(List<ExecutionMessage> newMessages)", "testcase": false, "constructor": false}, {"identifier": "addExecutionMessage", "parameters": "(ExecutionMessage msg)", "modifiers": "public", "return": "void", "signature": "void addExecutionMessage(ExecutionMessage msg)", "full_signature": "public void addExecutionMessage(ExecutionMessage msg)", "class_method_signature": "InBuffer.addExecutionMessage(ExecutionMessage msg)", "testcase": false, "constructor": false}, {"identifier": "addExecutionMessageInner", "parameters": "(ExecutionMessage msg)", "modifiers": "private", "return": "void", "signature": "void addExecutionMessageInner(ExecutionMessage msg)", "full_signature": "private void addExecutionMessageInner(ExecutionMessage msg)", "class_method_signature": "InBuffer.addExecutionMessageInner(ExecutionMessage msg)", "testcase": false, "constructor": false}, {"identifier": "onApplicationEvent", "parameters": "(ApplicationEvent applicationEvent)", "modifiers": "@Override public", "return": "void", "signature": "void onApplicationEvent(ApplicationEvent applicationEvent)", "full_signature": "@Override public void onApplicationEvent(ApplicationEvent applicationEvent)", "class_method_signature": "InBuffer.onApplicationEvent(ApplicationEvent applicationEvent)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "InBuffer.run()", "testcase": false, "constructor": false}, {"identifier": "checkFreeMemorySpace", "parameters": "(long totalMemory, long freeMemory)", "modifiers": "private", "return": "boolean", "signature": "boolean checkFreeMemorySpace(long totalMemory, long freeMemory)", "full_signature": "private boolean checkFreeMemorySpace(long totalMemory, long freeMemory)", "class_method_signature": "InBuffer.checkFreeMemorySpace(long totalMemory, long freeMemory)", "testcase": false, "constructor": false}, {"identifier": "doRecovery", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void doRecovery()", "full_signature": "@Override public void doRecovery()", "class_method_signature": "InBuffer.doRecovery()", "testcase": false, "constructor": false}, {"identifier": "getCapacity", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getCapacity()", "full_signature": "public int getCapacity()", "class_method_signature": "InBuffer.getCapacity()", "testcase": false, "constructor": false}], "file": "worker/worker-manager/score-worker-manager-impl/src/main/java/io/cloudslang/worker/management/services/InBuffer.java"}, "focal_method": {"identifier": "onApplicationEvent", "parameters": "(ApplicationEvent applicationEvent)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onApplicationEvent(ApplicationEvent applicationEvent) {\n        if (applicationEvent instanceof ContextRefreshedEvent && !endOfInit) {\n            endOfInit = true;\n            inShutdown = false;\n            fillBufferThread.setName(\"WorkerFillBufferThread\");\n            fillBufferThread.start();\n        } else if (applicationEvent instanceof ContextClosedEvent) {\n            inShutdown = true;\n        }\n    }", "signature": "void onApplicationEvent(ApplicationEvent applicationEvent)", "full_signature": "@Override public void onApplicationEvent(ApplicationEvent applicationEvent)", "class_method_signature": "InBuffer.onApplicationEvent(ApplicationEvent applicationEvent)", "testcase": false, "constructor": false, "invocations": ["setName", "start"]}, "repository": {"repo_id": 28394156, "url": "https://github.com/CloudSlang/score", "stars": 76, "created": "12/23/2014 11:19:26 AM +00:00", "updates": "2020-01-27T14:36:32+00:00", "fork": "False", "license": "licensed"}}