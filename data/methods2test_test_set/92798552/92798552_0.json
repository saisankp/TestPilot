{"test_class": {"identifier": "PassengerStopAssignmentLoaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "distribution/src/test/java/nl/crowndov/displaydirect/distribution/chb/PassengerStopAssignmentLoaderTest.java"}, "test_case": {"identifier": "load", "parameters": "()", "modifiers": "@Test @Ignore public", "return": "void", "body": "@Test\n    @Ignore\n    public void load() throws Exception {\n\n        Map<String,String> bla = PassengerStopAssignmentLoader.load();\n        Assert.assertTrue(bla.size() > 1);\n    }", "signature": "void load()", "full_signature": "@Test @Ignore public void load()", "class_method_signature": "PassengerStopAssignmentLoaderTest.load()", "testcase": true, "constructor": false, "invocations": ["load", "assertTrue", "size"]}, "focal_class": {"identifier": "PassengerStopAssignmentLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(PassengerStopAssignmentLoader.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(PassengerStopAssignmentLoader.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "load", "parameters": "()", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> load()", "full_signature": "public static Map<String, String> load()", "class_method_signature": "PassengerStopAssignmentLoader.load()", "testcase": false, "constructor": false}, {"identifier": "getFile", "parameters": "()", "modifiers": "private static", "return": "File", "signature": "File getFile()", "full_signature": "private static File getFile()", "class_method_signature": "PassengerStopAssignmentLoader.getFile()", "testcase": false, "constructor": false}, {"identifier": "handleExport", "parameters": "(Map<String, String> mapping, Export export)", "modifiers": "private static", "return": "int", "signature": "int handleExport(Map<String, String> mapping, Export export)", "full_signature": "private static int handleExport(Map<String, String> mapping, Export export)", "class_method_signature": "PassengerStopAssignmentLoader.handleExport(Map<String, String> mapping, Export export)", "testcase": false, "constructor": false}], "file": "distribution/src/main/java/nl/crowndov/displaydirect/distribution/chb/PassengerStopAssignmentLoader.java"}, "focal_method": {"identifier": "load", "parameters": "()", "modifiers": "public static", "return": "Map<String, String>", "body": "public static Map<String, String> load() {\n        Map<String, String> mapping = new HashMap<>();\n        File chbFile = getFile();\n        if (chbFile == null) {\n            return null;\n        }\n\n        try (FileInputStream fis = new FileInputStream(chbFile);\n             GZIPInputStream input = new GZIPInputStream(fis)) {\n            Export export = (Export) JAXBContext.newInstance(Export.class).createUnmarshaller().unmarshal(input);\n            if (export != null) {\n                int count = handleExport(mapping, export);\n                MetricStore.getInstance().storeMetric(\"chb.mappings\", count);\n                LOGGER.info(\"Got export, with {} entries\", count);\n            }\n        } catch (JAXBException | IOException e) {\n            LOGGER.info(\"Got exception reading CHB file\", e);\n        }\n        return mapping;\n    }", "signature": "Map<String, String> load()", "full_signature": "public static Map<String, String> load()", "class_method_signature": "PassengerStopAssignmentLoader.load()", "testcase": false, "constructor": false, "invocations": ["getFile", "unmarshal", "createUnmarshaller", "newInstance", "handleExport", "storeMetric", "getInstance", "info", "info"]}, "repository": {"repo_id": 92798552, "url": "https://github.com/CROW-NDOV/displaydirect", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 6, "size": 247, "license": "licensed"}}