{"test_class": {"identifier": "LegofyPicassoTransformationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private Context mockContext;", "modifier": "@Mock\n    private", "type": "Context", "declarator": "mockContext", "var_name": "mockContext"}, {"original_string": "private LegofyPicassoTransformation legofyPicassoTransformation;", "modifier": "private", "type": "LegofyPicassoTransformation", "declarator": "legofyPicassoTransformation", "var_name": "legofyPicassoTransformation"}], "file": "library/src/test/java/com/jeroenmols/legofy/LegofyPicassoTransformationTest.java"}, "test_case": {"identifier": "shouldReturnKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnKey() throws Exception {\n        String key = legofyPicassoTransformation.key();\n\n        assertThat(key).isEqualTo(LegofyPicassoTransformation.LEGOFY);\n    }", "signature": "void shouldReturnKey()", "full_signature": "@Test public void shouldReturnKey()", "class_method_signature": "LegofyPicassoTransformationTest.shouldReturnKey()", "testcase": true, "constructor": false, "invocations": ["key", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "LegofyPicassoTransformation", "superclass": "", "interfaces": "implements Transformation", "fields": [{"original_string": "public static final String LEGOFY = \"legofy\";", "modifier": "public static final", "type": "String", "declarator": "LEGOFY = \"legofy\"", "var_name": "LEGOFY"}, {"original_string": "private final Context applicationContext;", "modifier": "private final", "type": "Context", "declarator": "applicationContext", "var_name": "applicationContext"}], "methods": [{"identifier": "LegofyPicassoTransformation", "parameters": "(Context context)", "modifiers": "public", "return": "", "signature": " LegofyPicassoTransformation(Context context)", "full_signature": "public  LegofyPicassoTransformation(Context context)", "class_method_signature": "LegofyPicassoTransformation.LegofyPicassoTransformation(Context context)", "testcase": false, "constructor": true}, {"identifier": "transform", "parameters": "(Bitmap source)", "modifiers": "@Override public", "return": "Bitmap", "signature": "Bitmap transform(Bitmap source)", "full_signature": "@Override public Bitmap transform(Bitmap source)", "class_method_signature": "LegofyPicassoTransformation.transform(Bitmap source)", "testcase": false, "constructor": false}, {"identifier": "key", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String key()", "full_signature": "@Override public String key()", "class_method_signature": "LegofyPicassoTransformation.key()", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/jeroenmols/legofy/LegofyPicassoTransformation.java"}, "focal_method": {"identifier": "key", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String key() {\n        return LEGOFY;\n    }", "signature": "String key()", "full_signature": "@Override public String key()", "class_method_signature": "LegofyPicassoTransformation.key()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 56089333, "url": "https://github.com/JeroenMols/Legofy", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 42, "size": 10478, "license": "licensed"}}