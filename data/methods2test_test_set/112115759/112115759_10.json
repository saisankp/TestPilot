{"test_class": {"identifier": "OptionsParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "rawhttp-cli/src/test/java/rawhttp/cli/OptionsParserTest.java"}, "test_case": {"identifier": "cannotParseServeRootPathOptionMissingMandatoryArg", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void cannotParseServeRootPathOptionMissingMandatoryArg() {\n        try {\n            OptionsParser.parse(new String[]{\"run\"});\n            fail(\"Should not be able to parse run command without options\");\n        } catch (OptionsException e) {\n            assertEquals(\"No http requests file provided\", e.getMessage());\n        }\n    }", "signature": "void cannotParseServeRootPathOptionMissingMandatoryArg()", "full_signature": "@Test public void cannotParseServeRootPathOptionMissingMandatoryArg()", "class_method_signature": "OptionsParserTest.cannotParseServeRootPathOptionMissingMandatoryArg()", "testcase": true, "constructor": false, "invocations": ["parse", "fail", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "OptionsParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String AVAILABLE_COMMANDS_MSG =\n            \"Available commands are 'send', 'run', 'serve' and 'help'.\\n\" +\n                    \"Use the 'help' command to show more information.\";", "modifier": "private static final", "type": "String", "declarator": "AVAILABLE_COMMANDS_MSG =\n            \"Available commands are 'send', 'run', 'serve' and 'help'.\\n\" +\n                    \"Use the 'help' command to show more information.\"", "var_name": "AVAILABLE_COMMANDS_MSG"}], "methods": [{"identifier": "parse", "parameters": "(String[] args)", "modifiers": "static", "return": "Options", "signature": "Options parse(String[] args)", "full_signature": "static Options parse(String[] args)", "class_method_signature": "OptionsParser.parse(String[] args)", "testcase": false, "constructor": false}, {"identifier": "parseSendCommand", "parameters": "(String[] args)", "modifiers": "private static", "return": "Options", "signature": "Options parseSendCommand(String[] args)", "full_signature": "private static Options parseSendCommand(String[] args)", "class_method_signature": "OptionsParser.parseSendCommand(String[] args)", "testcase": false, "constructor": false}, {"identifier": "parseRunCommand", "parameters": "(String[] args)", "modifiers": "private static", "return": "Options", "signature": "Options parseRunCommand(String[] args)", "full_signature": "private static Options parseRunCommand(String[] args)", "class_method_signature": "OptionsParser.parseRunCommand(String[] args)", "testcase": false, "constructor": false}, {"identifier": "parseServeCommand", "parameters": "(String[] args)", "modifiers": "private static", "return": "Options", "signature": "Options parseServeCommand(String[] args)", "full_signature": "private static Options parseServeCommand(String[] args)", "class_method_signature": "OptionsParser.parseServeCommand(String[] args)", "testcase": false, "constructor": false}], "file": "rawhttp-cli/src/main/java/rawhttp/cli/OptionsParser.java"}, "focal_method": {"identifier": "parse", "parameters": "(String[] args)", "modifiers": "static", "return": "Options", "body": "static Options parse(String[] args) throws OptionsException {\n        if (args.length == 0) {\n            throw new OptionsException(\"No sub-command provided. \" + AVAILABLE_COMMANDS_MSG);\n        }\n        String subCommand = args[0];\n        switch (subCommand) {\n            case \"send\":\n                return parseSendCommand(args);\n            case \"run\":\n                return parseRunCommand(args);\n            case \"serve\":\n                return parseServeCommand(args);\n            case \"help\":\n            case \"-h\":\n                HelpOptions helpOptions = HelpOptions.GENERAL;\n                if (args.length > 1) try {\n                    helpOptions = HelpOptions.valueOf(args[1].toUpperCase());\n                } catch (IllegalArgumentException e) {\n                    // ignore invalid option\n                }\n                return Options.justShowHelp(helpOptions);\n            default:\n                throw new OptionsException(\"Unknown sub-command: \" + subCommand + \". \" +\n                        AVAILABLE_COMMANDS_MSG);\n        }\n    }", "signature": "Options parse(String[] args)", "full_signature": "static Options parse(String[] args)", "class_method_signature": "OptionsParser.parse(String[] args)", "testcase": false, "constructor": false, "invocations": ["parseSendCommand", "parseRunCommand", "parseServeCommand", "valueOf", "toUpperCase", "justShowHelp"]}, "repository": {"repo_id": 112115759, "url": "https://github.com/renatoathaydes/rawhttp", "stars": 63, "created": "11/26/2017 8:52:33 PM +00:00", "updates": "2020-01-18T11:12:00+00:00", "fork": "False", "license": "licensed"}}