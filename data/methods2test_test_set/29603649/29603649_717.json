{"test_class": {"identifier": "InputStreamConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST = \"test\";", "modifier": "private static final", "type": "String", "declarator": "TEST = \"test\"", "var_name": "TEST"}, {"original_string": "private InputStream inputStream;", "modifier": "private", "type": "InputStream", "declarator": "inputStream", "var_name": "inputStream"}, {"original_string": "@Mock\n    private InputStream inputStreamMock;", "modifier": "@Mock\n    private", "type": "InputStream", "declarator": "inputStreamMock", "var_name": "inputStreamMock"}, {"original_string": "private InputStreamConverter underTest;", "modifier": "private", "type": "InputStreamConverter", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-browsermob-integration/src/test/java/com/epam/wilma/browsermob/transformer/helper/InputStreamConverterTest.java"}, "test_case": {"identifier": "testGetStringFromStreamShouldReturnEmptyStringWhenInputStreamIsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetStringFromStreamShouldReturnEmptyStringWhenInputStreamIsNull() throws ApplicationException {\n        //GIVEN\n        inputStream = null;\n        //WHEN\n        String actual = underTest.getStringFromStream(inputStream);\n        //THEN\n        Assert.assertEquals(actual, \"\");\n    }", "signature": "void testGetStringFromStreamShouldReturnEmptyStringWhenInputStreamIsNull()", "full_signature": "@Test public void testGetStringFromStreamShouldReturnEmptyStringWhenInputStreamIsNull()", "class_method_signature": "InputStreamConverterTest.testGetStringFromStreamShouldReturnEmptyStringWhenInputStreamIsNull()", "testcase": true, "constructor": false, "invocations": ["getStringFromStream", "assertEquals"]}, "focal_class": {"identifier": "InputStreamConverter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int BUFFER_SIZE = 1024;", "modifier": "private static final", "type": "int", "declarator": "BUFFER_SIZE = 1024", "var_name": "BUFFER_SIZE"}], "methods": [{"identifier": "getStringFromStream", "parameters": "(final InputStream inputStream)", "modifiers": "public", "return": "String", "signature": "String getStringFromStream(final InputStream inputStream)", "full_signature": "public String getStringFromStream(final InputStream inputStream)", "class_method_signature": "InputStreamConverter.getStringFromStream(final InputStream inputStream)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-browsermob-integration/src/main/java/com/epam/wilma/browsermob/transformer/helper/InputStreamConverter.java"}, "focal_method": {"identifier": "getStringFromStream", "parameters": "(final InputStream inputStream)", "modifiers": "public", "return": "String", "body": "public String getStringFromStream(final InputStream inputStream) throws ApplicationException {\n        String result = \"\";\n        if (inputStream != null) {\n            try {\n                int extendedReadLimit = inputStream.available() + BUFFER_SIZE;\n                inputStream.mark(extendedReadLimit);\n                result = IOUtils.toString(inputStream);\n                inputStream.reset();\n            } catch (IOException e) {\n                throw new ApplicationException(\"Could not transform request input stream into string!\", e);\n            }\n        }\n        return result;\n    }", "signature": "String getStringFromStream(final InputStream inputStream)", "full_signature": "public String getStringFromStream(final InputStream inputStream)", "class_method_signature": "InputStreamConverter.getStringFromStream(final InputStream inputStream)", "testcase": false, "constructor": false, "invocations": ["available", "mark", "toString", "reset"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}