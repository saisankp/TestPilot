{"test_class": {"identifier": "JsonWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}, {"original_string": "private JsonWriter   jsonWriter;", "modifier": "private", "type": "JsonWriter", "declarator": "jsonWriter", "var_name": "jsonWriter"}, {"original_string": "private StringWriter writer;", "modifier": "private", "type": "StringWriter", "declarator": "writer", "var_name": "writer"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/provider/json/JsonWriterTest.java"}, "test_case": {"identifier": "closesUnderlyingWriter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void closesUnderlyingWriter() throws Exception {\n        Writer writer = mock(Writer.class);\n        jsonWriter = new JsonWriter(writer);\n\n        jsonWriter.close();\n        verify(writer).close();\n    }", "signature": "void closesUnderlyingWriter()", "full_signature": "@Test public void closesUnderlyingWriter()", "class_method_signature": "JsonWriterTest.closesUnderlyingWriter()", "testcase": true, "constructor": false, "invocations": ["mock", "close", "close", "verify"]}, "focal_class": {"identifier": "JsonWriter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final JsonStack<JsonToken> stack;", "modifier": "private final", "type": "JsonStack<JsonToken>", "declarator": "stack", "var_name": "stack"}, {"original_string": "private final Writer writer;", "modifier": "private final", "type": "Writer", "declarator": "writer", "var_name": "writer"}, {"original_string": "private boolean commaFirst;", "modifier": "private", "type": "boolean", "declarator": "commaFirst", "var_name": "commaFirst"}, {"original_string": "private String currentKey;", "modifier": "private", "type": "String", "declarator": "currentKey", "var_name": "currentKey"}, {"original_string": "private boolean writeNulls;", "modifier": "private", "type": "boolean", "declarator": "writeNulls", "var_name": "writeNulls"}], "methods": [{"identifier": "JsonWriter", "parameters": "(Writer writer)", "modifiers": "public", "return": "", "signature": " JsonWriter(Writer writer)", "full_signature": "public  JsonWriter(Writer writer)", "class_method_signature": "JsonWriter.JsonWriter(Writer writer)", "testcase": false, "constructor": true}, {"identifier": "JsonWriter", "parameters": "(OutputStream out)", "modifiers": "public", "return": "", "signature": " JsonWriter(OutputStream out)", "full_signature": "public  JsonWriter(OutputStream out)", "class_method_signature": "JsonWriter.JsonWriter(OutputStream out)", "testcase": false, "constructor": true}, {"identifier": "isWriteNulls", "parameters": "()", "modifiers": "public final", "return": "boolean", "signature": "boolean isWriteNulls()", "full_signature": "public final boolean isWriteNulls()", "class_method_signature": "JsonWriter.isWriteNulls()", "testcase": false, "constructor": false}, {"identifier": "setWriteNulls", "parameters": "(boolean writeNulls)", "modifiers": "public final", "return": "void", "signature": "void setWriteNulls(boolean writeNulls)", "full_signature": "public final void setWriteNulls(boolean writeNulls)", "class_method_signature": "JsonWriter.setWriteNulls(boolean writeNulls)", "testcase": false, "constructor": false}, {"identifier": "writeStartObject", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void writeStartObject()", "full_signature": "public void writeStartObject()", "class_method_signature": "JsonWriter.writeStartObject()", "testcase": false, "constructor": false}, {"identifier": "writeEndObject", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void writeEndObject()", "full_signature": "public void writeEndObject()", "class_method_signature": "JsonWriter.writeEndObject()", "testcase": false, "constructor": false}, {"identifier": "writeStartArray", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void writeStartArray()", "full_signature": "public void writeStartArray()", "class_method_signature": "JsonWriter.writeStartArray()", "testcase": false, "constructor": false}, {"identifier": "writeEndArray", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void writeEndArray()", "full_signature": "public void writeEndArray()", "class_method_signature": "JsonWriter.writeEndArray()", "testcase": false, "constructor": false}, {"identifier": "writeKey", "parameters": "(String key)", "modifiers": "public", "return": "void", "signature": "void writeKey(String key)", "full_signature": "public void writeKey(String key)", "class_method_signature": "JsonWriter.writeKey(String key)", "testcase": false, "constructor": false}, {"identifier": "writeCurrentKey", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeCurrentKey()", "full_signature": "private void writeCurrentKey()", "class_method_signature": "JsonWriter.writeCurrentKey()", "testcase": false, "constructor": false}, {"identifier": "writeString", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void writeString(String value)", "full_signature": "public void writeString(String value)", "class_method_signature": "JsonWriter.writeString(String value)", "testcase": false, "constructor": false}, {"identifier": "writeValue", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void writeValue(String value)", "full_signature": "public void writeValue(String value)", "class_method_signature": "JsonWriter.writeValue(String value)", "testcase": false, "constructor": false}, {"identifier": "writeValue", "parameters": "(long value)", "modifiers": "public", "return": "void", "signature": "void writeValue(long value)", "full_signature": "public void writeValue(long value)", "class_method_signature": "JsonWriter.writeValue(long value)", "testcase": false, "constructor": false}, {"identifier": "writeValue", "parameters": "(double value)", "modifiers": "public", "return": "void", "signature": "void writeValue(double value)", "full_signature": "public void writeValue(double value)", "class_method_signature": "JsonWriter.writeValue(double value)", "testcase": false, "constructor": false}, {"identifier": "writeValue", "parameters": "(boolean value)", "modifiers": "public", "return": "void", "signature": "void writeValue(boolean value)", "full_signature": "public void writeValue(boolean value)", "class_method_signature": "JsonWriter.writeValue(boolean value)", "testcase": false, "constructor": false}, {"identifier": "writeNull", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void writeNull()", "full_signature": "public void writeNull()", "class_method_signature": "JsonWriter.writeNull()", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String value)", "modifiers": "private", "return": "void", "signature": "void write(String value)", "full_signature": "private void write(String value)", "class_method_signature": "JsonWriter.write(String value)", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void flush()", "full_signature": "public void flush()", "class_method_signature": "JsonWriter.flush()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "JsonWriter.close()", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/provider/json/JsonWriter.java"}, "focal_method": {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void close() throws JsonException {\n        try {\n            writer.close();\n        } catch (IOException e) {\n            throw new JsonException(e.getMessage(), e);\n        }\n    }", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "JsonWriter.close()", "testcase": false, "constructor": false, "invocations": ["close", "getMessage"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}