{"test_class": {"identifier": "FieldFromArrayTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "String[] testStringArray = { \"0\", \"1\", \"2\", \"3\", \"4\" };", "modifier": "", "type": "String[]", "declarator": "testStringArray = { \"0\", \"1\", \"2\", \"3\", \"4\" }", "var_name": "testStringArray"}, {"original_string": "Integer[] testIntegerArray = { 10, 11, 12, 13, 14 };", "modifier": "", "type": "Integer[]", "declarator": "testIntegerArray = { 10, 11, 12, 13, 14 }", "var_name": "testIntegerArray"}, {"original_string": "int[] testIntArray = { 20, 21, 22, 23, 24 };", "modifier": "", "type": "int[]", "declarator": "testIntArray = { 20, 21, 22, 23, 24 }", "var_name": "testIntArray"}], "file": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/windowing/delta/extractor/FieldFromArrayTest.java"}, "test_case": {"identifier": "testIntArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testIntArray() {\n\t\tfor (int i = 0; i < this.testIntArray.length; i++) {\n\t\t\tassertEquals(new Integer(this.testIntArray[i]),\n\t\t\t\t\tnew FieldFromArray<Integer>(i).extract(testIntArray));\n\t\t}\n\t}", "signature": "void testIntArray()", "full_signature": "@Test public void testIntArray()", "class_method_signature": "FieldFromArrayTest.testIntArray()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "extract"]}, "focal_class": {"identifier": "FieldFromArray", "superclass": "", "interfaces": "implements Extractor<Object, OUT>", "fields": [{"original_string": "private static final long serialVersionUID = -5161386546695574359L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -5161386546695574359L", "var_name": "serialVersionUID"}, {"original_string": "private int fieldId = 0;", "modifier": "private", "type": "int", "declarator": "fieldId = 0", "var_name": "fieldId"}], "methods": [{"identifier": "FieldFromArray", "parameters": "()", "modifiers": "public", "return": "", "signature": " FieldFromArray()", "full_signature": "public  FieldFromArray()", "class_method_signature": "FieldFromArray.FieldFromArray()", "testcase": false, "constructor": true}, {"identifier": "FieldFromArray", "parameters": "(int fieldId)", "modifiers": "public", "return": "", "signature": " FieldFromArray(int fieldId)", "full_signature": "public  FieldFromArray(int fieldId)", "class_method_signature": "FieldFromArray.FieldFromArray(int fieldId)", "testcase": false, "constructor": true}, {"identifier": "extract", "parameters": "(Object in)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "OUT", "signature": "OUT extract(Object in)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public OUT extract(Object in)", "class_method_signature": "FieldFromArray.extract(Object in)", "testcase": false, "constructor": false}], "file": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/functions/windowing/delta/extractor/FieldFromArray.java"}, "focal_method": {"identifier": "extract", "parameters": "(Object in)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "OUT", "body": "@SuppressWarnings(\"unchecked\")\n\t@Override\n\tpublic OUT extract(Object in) {\n\t\treturn (OUT) Array.get(in, fieldId);\n\t}", "signature": "OUT extract(Object in)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public OUT extract(Object in)", "class_method_signature": "FieldFromArray.extract(Object in)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}