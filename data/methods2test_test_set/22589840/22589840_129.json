{"test_class": {"identifier": "OLATPropertyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private OLATProperty property;", "modifier": "private", "type": "OLATProperty", "declarator": "property", "var_name": "property"}, {"original_string": "private static final String DEFAULT_VALUE = \"test-a\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_VALUE = \"test-a\"", "var_name": "DEFAULT_VALUE"}], "file": "OLAT-LMS/src/test/java/org/olat/system/commons/configuration/OLATPropertyTest.java"}, "test_case": {"identifier": "testGetDefaultValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetDefaultValue() {\n        property.setOverwriteValue(\"overwrite\");\n\n        assertTrue(property.isOverwritten());\n        assertEquals(DEFAULT_VALUE, property.getDefaultValue());\n\n    }", "signature": "void testGetDefaultValue()", "full_signature": "@Test public void testGetDefaultValue()", "class_method_signature": "OLATPropertyTest.testGetDefaultValue()", "testcase": true, "constructor": false, "invocations": ["setOverwriteValue", "assertTrue", "isOverwritten", "assertEquals", "getDefaultValue"]}, "focal_class": {"identifier": "OLATProperty", "superclass": "", "interfaces": "implements Comparable<OLATProperty>", "fields": [{"original_string": "String key;", "modifier": "", "type": "String", "declarator": "key", "var_name": "key"}, {"original_string": "String defaultValue;", "modifier": "", "type": "String", "declarator": "defaultValue", "var_name": "defaultValue"}, {"original_string": "String value;", "modifier": "", "type": "String", "declarator": "value", "var_name": "value"}, {"original_string": "String comment;", "modifier": "", "type": "String", "declarator": "comment", "var_name": "comment"}, {"original_string": "int overwriteCount;", "modifier": "", "type": "int", "declarator": "overwriteCount", "var_name": "overwriteCount"}, {"original_string": "boolean hasComment;", "modifier": "", "type": "boolean", "declarator": "hasComment", "var_name": "hasComment"}, {"original_string": "private List<String> availableValues = new ArrayList<String>(3);", "modifier": "private", "type": "List<String>", "declarator": "availableValues = new ArrayList<String>(3)", "var_name": "availableValues"}, {"original_string": "private List<String> overwriteValues = new ArrayList<String>(3);", "modifier": "private", "type": "List<String>", "declarator": "overwriteValues = new ArrayList<String>(3)", "var_name": "overwriteValues"}], "methods": [{"identifier": "OLATProperty", "parameters": "(String key, String value)", "modifiers": "protected", "return": "", "signature": " OLATProperty(String key, String value)", "full_signature": "protected  OLATProperty(String key, String value)", "class_method_signature": "OLATProperty.OLATProperty(String key, String value)", "testcase": false, "constructor": true}, {"identifier": "isOverwritten", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isOverwritten()", "full_signature": "public boolean isOverwritten()", "class_method_signature": "OLATProperty.isOverwritten()", "testcase": false, "constructor": false}, {"identifier": "getOverwriteValues", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getOverwriteValues()", "full_signature": "public List<String> getOverwriteValues()", "class_method_signature": "OLATProperty.getOverwriteValues()", "testcase": false, "constructor": false}, {"identifier": "setOverwriteValue", "parameters": "(String overwriteValue)", "modifiers": "public", "return": "void", "signature": "void setOverwriteValue(String overwriteValue)", "full_signature": "public void setOverwriteValue(String overwriteValue)", "class_method_signature": "OLATProperty.setOverwriteValue(String overwriteValue)", "testcase": false, "constructor": false}, {"identifier": "hasComment", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasComment()", "full_signature": "public boolean hasComment()", "class_method_signature": "OLATProperty.hasComment()", "testcase": false, "constructor": false}, {"identifier": "setComment", "parameters": "(String comment)", "modifiers": "public", "return": "void", "signature": "void setComment(String comment)", "full_signature": "public void setComment(String comment)", "class_method_signature": "OLATProperty.setComment(String comment)", "testcase": false, "constructor": false}, {"identifier": "getComment", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getComment()", "full_signature": "public String getComment()", "class_method_signature": "OLATProperty.getComment()", "testcase": false, "constructor": false}, {"identifier": "getAvailableValues", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getAvailableValues()", "full_signature": "public List<String> getAvailableValues()", "class_method_signature": "OLATProperty.getAvailableValues()", "testcase": false, "constructor": false}, {"identifier": "setAvailableValues", "parameters": "(String availableValuesDelimited)", "modifiers": "public", "return": "void", "signature": "void setAvailableValues(String availableValuesDelimited)", "full_signature": "public void setAvailableValues(String availableValuesDelimited)", "class_method_signature": "OLATProperty.setAvailableValues(String availableValuesDelimited)", "testcase": false, "constructor": false}, {"identifier": "getKey", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getKey()", "full_signature": "public String getKey()", "class_method_signature": "OLATProperty.getKey()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getValue()", "full_signature": "public String getValue()", "class_method_signature": "OLATProperty.getValue()", "testcase": false, "constructor": false}, {"identifier": "getDefaultValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDefaultValue()", "full_signature": "public String getDefaultValue()", "class_method_signature": "OLATProperty.getDefaultValue()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(OLATProperty prop)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(OLATProperty prop)", "full_signature": "@Override public int compareTo(OLATProperty prop)", "class_method_signature": "OLATProperty.compareTo(OLATProperty prop)", "testcase": false, "constructor": false}], "file": "OLAT-LMS/src/main/java/org/olat/system/commons/configuration/OLATProperty.java"}, "focal_method": {"identifier": "getDefaultValue", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getDefaultValue() {\n        return defaultValue;\n    }", "signature": "String getDefaultValue()", "full_signature": "public String getDefaultValue()", "class_method_signature": "OLATProperty.getDefaultValue()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 22589840, "url": "https://github.com/huihoo/olat", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 10, "size": 69738, "license": "licensed"}}