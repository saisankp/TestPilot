{"test_class": {"identifier": "CookbookParseResultTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ChefCookbookConfiguration cookbookConfiguration = new ChefCookbookConfiguration();", "modifier": "private", "type": "ChefCookbookConfiguration", "declarator": "cookbookConfiguration = new ChefCookbookConfiguration()", "var_name": "cookbookConfiguration"}, {"original_string": "private CookbookParseResult cookbookParseResult = new CookbookParseResult(\"testcookbook\");", "modifier": "private", "type": "CookbookParseResult", "declarator": "cookbookParseResult = new CookbookParseResult(\"testcookbook\")", "var_name": "cookbookParseResult"}], "file": "org.eclipse.winery.crawler/src/test/java/org/eclipse/winery/crawler/chefcookbooks/chefcookbook/CookbookParseResultTest.java"}, "test_case": {"identifier": "addAttributeToAllConfigs", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void addAttributeToAllConfigs() {\n        String attributeValue = \"testvalue\";\n        List<String> expectedValues = new ArrayList<>(Arrays.asList(attributeValue));\n        ChefCookbookConfiguration secondCookbookConfiguration = new ChefCookbookConfiguration(cookbookConfiguration);\n        secondCookbookConfiguration.setSupports(new Platform(\"windows\", \"10\"));\n        cookbookParseResult.putCookbookConfig(secondCookbookConfiguration);\n        cookbookParseResult.addAttributeToAllConfigs(\"testname\", Collections.singletonList(attributeValue));\n        assertEquals(expectedValues, cookbookParseResult.getAllConfigsAsList().get(0).getAttribute(\"testname\"));\n        assertEquals(expectedValues, cookbookParseResult.getAllConfigsAsList().get(1).getAttribute(\"testname\"));\n    }", "signature": "void addAttributeToAllConfigs()", "full_signature": "@Test public void addAttributeToAllConfigs()", "class_method_signature": "CookbookParseResultTest.addAttributeToAllConfigs()", "testcase": true, "constructor": false, "invocations": ["asList", "setSupports", "putCookbookConfig", "addAttributeToAllConfigs", "singletonList", "assertEquals", "getAttribute", "get", "getAllConfigsAsList", "assertEquals", "getAttribute", "get", "getAllConfigsAsList"]}, "focal_class": {"identifier": "CookbookParseResult", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String cookbookName;", "modifier": "private", "type": "String", "declarator": "cookbookName", "var_name": "cookbookName"}, {"original_string": "private String cookbookPath;", "modifier": "private", "type": "String", "declarator": "cookbookPath", "var_name": "cookbookPath"}, {"original_string": "private boolean isInDependentRecipe;", "modifier": "private", "type": "boolean", "declarator": "isInDependentRecipe", "var_name": "isInDependentRecipe"}, {"original_string": "private HashMap<String, HashMap<String, ChefCookbookConfiguration>> cookbookConfigs;", "modifier": "private", "type": "HashMap<String, HashMap<String, ChefCookbookConfiguration>>", "declarator": "cookbookConfigs", "var_name": "cookbookConfigs"}, {"original_string": "private HashMap<String, String> attributes;", "modifier": "private", "type": "HashMap<String, String>", "declarator": "attributes", "var_name": "attributes"}, {"original_string": "private boolean isInRecursiveTransformation;", "modifier": "private", "type": "boolean", "declarator": "isInRecursiveTransformation", "var_name": "isInRecursiveTransformation"}, {"original_string": "private ArrayList<ChefPackage> notatedPackages;", "modifier": "private", "type": "ArrayList<ChefPackage>", "declarator": "notatedPackages", "var_name": "notatedPackages"}], "methods": [{"identifier": "CookbookParseResult", "parameters": "(String cookbookName)", "modifiers": "public", "return": "", "signature": " CookbookParseResult(String cookbookName)", "full_signature": "public  CookbookParseResult(String cookbookName)", "class_method_signature": "CookbookParseResult.CookbookParseResult(String cookbookName)", "testcase": false, "constructor": true}, {"identifier": "CookbookParseResult", "parameters": "(CookbookParseResult cookbookParseResult)", "modifiers": "public", "return": "", "signature": " CookbookParseResult(CookbookParseResult cookbookParseResult)", "full_signature": "public  CookbookParseResult(CookbookParseResult cookbookParseResult)", "class_method_signature": "CookbookParseResult.CookbookParseResult(CookbookParseResult cookbookParseResult)", "testcase": false, "constructor": true}, {"identifier": "getCookbookName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCookbookName()", "full_signature": "public String getCookbookName()", "class_method_signature": "CookbookParseResult.getCookbookName()", "testcase": false, "constructor": false}, {"identifier": "setCookbookName", "parameters": "(String cookbookName)", "modifiers": "public", "return": "void", "signature": "void setCookbookName(String cookbookName)", "full_signature": "public void setCookbookName(String cookbookName)", "class_method_signature": "CookbookParseResult.setCookbookName(String cookbookName)", "testcase": false, "constructor": false}, {"identifier": "isInDependentRecipe", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isInDependentRecipe()", "full_signature": "public boolean isInDependentRecipe()", "class_method_signature": "CookbookParseResult.isInDependentRecipe()", "testcase": false, "constructor": false}, {"identifier": "setInDependentRecipe", "parameters": "(boolean inDependentRecipe)", "modifiers": "public", "return": "void", "signature": "void setInDependentRecipe(boolean inDependentRecipe)", "full_signature": "public void setInDependentRecipe(boolean inDependentRecipe)", "class_method_signature": "CookbookParseResult.setInDependentRecipe(boolean inDependentRecipe)", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String key)", "modifiers": "public", "return": "String", "signature": "String getAttribute(String key)", "full_signature": "public String getAttribute(String key)", "class_method_signature": "CookbookParseResult.getAttribute(String key)", "testcase": false, "constructor": false}, {"identifier": "putAttribute", "parameters": "(String key, String value)", "modifiers": "public", "return": "void", "signature": "void putAttribute(String key, String value)", "full_signature": "public void putAttribute(String key, String value)", "class_method_signature": "CookbookParseResult.putAttribute(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "getAttributes", "parameters": "()", "modifiers": "public", "return": "HashMap<String, String>", "signature": "HashMap<String, String> getAttributes()", "full_signature": "public HashMap<String, String> getAttributes()", "class_method_signature": "CookbookParseResult.getAttributes()", "testcase": false, "constructor": false}, {"identifier": "getCookbookConfigs", "parameters": "()", "modifiers": "public", "return": "HashMap<String, HashMap<String, ChefCookbookConfiguration>>", "signature": "HashMap<String, HashMap<String, ChefCookbookConfiguration>> getCookbookConfigs()", "full_signature": "public HashMap<String, HashMap<String, ChefCookbookConfiguration>> getCookbookConfigs()", "class_method_signature": "CookbookParseResult.getCookbookConfigs()", "testcase": false, "constructor": false}, {"identifier": "getCookbookConfigsByPlatform", "parameters": "(String platformName)", "modifiers": "public", "return": "HashMap<String, ChefCookbookConfiguration>", "signature": "HashMap<String, ChefCookbookConfiguration> getCookbookConfigsByPlatform(String platformName)", "full_signature": "public HashMap<String, ChefCookbookConfiguration> getCookbookConfigsByPlatform(String platformName)", "class_method_signature": "CookbookParseResult.getCookbookConfigsByPlatform(String platformName)", "testcase": false, "constructor": false}, {"identifier": "setCookbookConfigs", "parameters": "(HashMap<String, HashMap<String, ChefCookbookConfiguration>> cookbookConfigs)", "modifiers": "public", "return": "void", "signature": "void setCookbookConfigs(HashMap<String, HashMap<String, ChefCookbookConfiguration>> cookbookConfigs)", "full_signature": "public void setCookbookConfigs(HashMap<String, HashMap<String, ChefCookbookConfiguration>> cookbookConfigs)", "class_method_signature": "CookbookParseResult.setCookbookConfigs(HashMap<String, HashMap<String, ChefCookbookConfiguration>> cookbookConfigs)", "testcase": false, "constructor": false}, {"identifier": "putCookbookConfig", "parameters": "(ChefCookbookConfiguration cookbookConfiguration)", "modifiers": "public", "return": "void", "signature": "void putCookbookConfig(ChefCookbookConfiguration cookbookConfiguration)", "full_signature": "public void putCookbookConfig(ChefCookbookConfiguration cookbookConfiguration)", "class_method_signature": "CookbookParseResult.putCookbookConfig(ChefCookbookConfiguration cookbookConfiguration)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "CookbookParseResult.clear()", "testcase": false, "constructor": false}, {"identifier": "clearAttributes", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearAttributes()", "full_signature": "public void clearAttributes()", "class_method_signature": "CookbookParseResult.clearAttributes()", "testcase": false, "constructor": false}, {"identifier": "clearConfigurations", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearConfigurations()", "full_signature": "public void clearConfigurations()", "class_method_signature": "CookbookParseResult.clearConfigurations()", "testcase": false, "constructor": false}, {"identifier": "putCookbookConfigsAsList", "parameters": "(List<ChefCookbookConfiguration> cookbookConfigList)", "modifiers": "public", "return": "void", "signature": "void putCookbookConfigsAsList(List<ChefCookbookConfiguration> cookbookConfigList)", "full_signature": "public void putCookbookConfigsAsList(List<ChefCookbookConfiguration> cookbookConfigList)", "class_method_signature": "CookbookParseResult.putCookbookConfigsAsList(List<ChefCookbookConfiguration> cookbookConfigList)", "testcase": false, "constructor": false}, {"identifier": "getAllConfigsAsList", "parameters": "()", "modifiers": "public", "return": "List<ChefCookbookConfiguration>", "signature": "List<ChefCookbookConfiguration> getAllConfigsAsList()", "full_signature": "public List<ChefCookbookConfiguration> getAllConfigsAsList()", "class_method_signature": "CookbookParseResult.getAllConfigsAsList()", "testcase": false, "constructor": false}, {"identifier": "addNotatedPackage", "parameters": "(ChefPackage chefPackage)", "modifiers": "public", "return": "void", "signature": "void addNotatedPackage(ChefPackage chefPackage)", "full_signature": "public void addNotatedPackage(ChefPackage chefPackage)", "class_method_signature": "CookbookParseResult.addNotatedPackage(ChefPackage chefPackage)", "testcase": false, "constructor": false}, {"identifier": "getNotatedPackages", "parameters": "()", "modifiers": "public", "return": "ArrayList<ChefPackage>", "signature": "ArrayList<ChefPackage> getNotatedPackages()", "full_signature": "public ArrayList<ChefPackage> getNotatedPackages()", "class_method_signature": "CookbookParseResult.getNotatedPackages()", "testcase": false, "constructor": false}, {"identifier": "clearNotatedPackage", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearNotatedPackage()", "full_signature": "public void clearNotatedPackage()", "class_method_signature": "CookbookParseResult.clearNotatedPackage()", "testcase": false, "constructor": false}, {"identifier": "addAttributeToAllConfigs", "parameters": "(String name, List value)", "modifiers": "public", "return": "void", "signature": "void addAttributeToAllConfigs(String name, List value)", "full_signature": "public void addAttributeToAllConfigs(String name, List value)", "class_method_signature": "CookbookParseResult.addAttributeToAllConfigs(String name, List value)", "testcase": false, "constructor": false}, {"identifier": "replaceCookbookConfigs", "parameters": "(List<ChefCookbookConfiguration> cookbookConfigList)", "modifiers": "public", "return": "void", "signature": "void replaceCookbookConfigs(List<ChefCookbookConfiguration> cookbookConfigList)", "full_signature": "public void replaceCookbookConfigs(List<ChefCookbookConfiguration> cookbookConfigList)", "class_method_signature": "CookbookParseResult.replaceCookbookConfigs(List<ChefCookbookConfiguration> cookbookConfigList)", "testcase": false, "constructor": false}, {"identifier": "getListOfConfigsInOwnParseresult", "parameters": "()", "modifiers": "public", "return": "List<CookbookParseResult>", "signature": "List<CookbookParseResult> getListOfConfigsInOwnParseresult()", "full_signature": "public List<CookbookParseResult> getListOfConfigsInOwnParseresult()", "class_method_signature": "CookbookParseResult.getListOfConfigsInOwnParseresult()", "testcase": false, "constructor": false}, {"identifier": "getNumOfCookbookConfigs", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumOfCookbookConfigs()", "full_signature": "public int getNumOfCookbookConfigs()", "class_method_signature": "CookbookParseResult.getNumOfCookbookConfigs()", "testcase": false, "constructor": false}, {"identifier": "getCookbookPath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCookbookPath()", "full_signature": "public String getCookbookPath()", "class_method_signature": "CookbookParseResult.getCookbookPath()", "testcase": false, "constructor": false}, {"identifier": "setCookbookPath", "parameters": "(String cookbookPath)", "modifiers": "public", "return": "void", "signature": "void setCookbookPath(String cookbookPath)", "full_signature": "public void setCookbookPath(String cookbookPath)", "class_method_signature": "CookbookParseResult.setCookbookPath(String cookbookPath)", "testcase": false, "constructor": false}, {"identifier": "prepareForDependencie", "parameters": "(String cookbookName)", "modifiers": "public", "return": "void", "signature": "void prepareForDependencie(String cookbookName)", "full_signature": "public void prepareForDependencie(String cookbookName)", "class_method_signature": "CookbookParseResult.prepareForDependencie(String cookbookName)", "testcase": false, "constructor": false}, {"identifier": "isInRecursiveTransformation", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isInRecursiveTransformation()", "full_signature": "public boolean isInRecursiveTransformation()", "class_method_signature": "CookbookParseResult.isInRecursiveTransformation()", "testcase": false, "constructor": false}, {"identifier": "setInRecursiveTransformation", "parameters": "(boolean inRecursiveTransformation)", "modifiers": "public", "return": "void", "signature": "void setInRecursiveTransformation(boolean inRecursiveTransformation)", "full_signature": "public void setInRecursiveTransformation(boolean inRecursiveTransformation)", "class_method_signature": "CookbookParseResult.setInRecursiveTransformation(boolean inRecursiveTransformation)", "testcase": false, "constructor": false}], "file": "org.eclipse.winery.crawler/src/main/java/org/eclipse/winery/crawler/chefcookbooks/chefcookbook/CookbookParseResult.java"}, "focal_method": {"identifier": "addAttributeToAllConfigs", "parameters": "(String name, List value)", "modifiers": "public", "return": "void", "body": "public void addAttributeToAllConfigs(String name, List value) {\n        for (Map.Entry<String, HashMap<String, ChefCookbookConfiguration>> entry : cookbookConfigs.entrySet()) {\n            for (Map.Entry<String, ChefCookbookConfiguration> innerentry : entry.getValue().entrySet()) {\n                innerentry.getValue().putAttribute(name, value);\n            }\n        }\n    }", "signature": "void addAttributeToAllConfigs(String name, List value)", "full_signature": "public void addAttributeToAllConfigs(String name, List value)", "class_method_signature": "CookbookParseResult.addAttributeToAllConfigs(String name, List value)", "testcase": false, "constructor": false, "invocations": ["entrySet", "entrySet", "getValue", "putAttribute", "getValue"]}, "repository": {"repo_id": 42622157, "url": "https://github.com/eclipse/winery", "stars": 34, "created": "9/17/2015 12:31:44 AM +00:00", "updates": "2020-01-22T09:32:00+00:00", "fork": "False", "license": "licensed"}}