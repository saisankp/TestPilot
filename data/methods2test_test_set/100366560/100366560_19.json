{"test_class": {"identifier": "PrimitiveTypeUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "beanmother-core/src/test/java/io/beanmother/core/util/PrimitiveTypeUtilsTest.java"}, "test_case": {"identifier": "raiseArgumentErrorByNonPrimitiveType", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void raiseArgumentErrorByNonPrimitiveType() {\n        PrimitiveTypeUtils.toWrapper(Integer.class);\n    }", "signature": "void raiseArgumentErrorByNonPrimitiveType()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void raiseArgumentErrorByNonPrimitiveType()", "class_method_signature": "PrimitiveTypeUtilsTest.raiseArgumentErrorByNonPrimitiveType()", "testcase": true, "constructor": false, "invocations": ["toWrapper"]}, "focal_class": {"identifier": "PrimitiveTypeUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "toWrapper", "parameters": "(final TypeToken<?> primitiveTypeToken)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> toWrapper(final TypeToken<?> primitiveTypeToken)", "full_signature": "public static Class<?> toWrapper(final TypeToken<?> primitiveTypeToken)", "class_method_signature": "PrimitiveTypeUtils.toWrapper(final TypeToken<?> primitiveTypeToken)", "testcase": false, "constructor": false}, {"identifier": "toWrapperTypeToken", "parameters": "(final TypeToken<?> primitiveTypeToken)", "modifiers": "public static", "return": "TypeToken<?>", "signature": "TypeToken<?> toWrapperTypeToken(final TypeToken<?> primitiveTypeToken)", "full_signature": "public static TypeToken<?> toWrapperTypeToken(final TypeToken<?> primitiveTypeToken)", "class_method_signature": "PrimitiveTypeUtils.toWrapperTypeToken(final TypeToken<?> primitiveTypeToken)", "testcase": false, "constructor": false}, {"identifier": "toWrapper", "parameters": "(final Class<?> primitiveType)", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> toWrapper(final Class<?> primitiveType)", "full_signature": "public static Class<?> toWrapper(final Class<?> primitiveType)", "class_method_signature": "PrimitiveTypeUtils.toWrapper(final Class<?> primitiveType)", "testcase": false, "constructor": false}, {"identifier": "toWrapperListToPrimitiveArray", "parameters": "(final List wrapperList, Class<?> primitiveType)", "modifiers": "public static", "return": "Object", "signature": "Object toWrapperListToPrimitiveArray(final List wrapperList, Class<?> primitiveType)", "full_signature": "public static Object toWrapperListToPrimitiveArray(final List wrapperList, Class<?> primitiveType)", "class_method_signature": "PrimitiveTypeUtils.toWrapperListToPrimitiveArray(final List wrapperList, Class<?> primitiveType)", "testcase": false, "constructor": false}], "file": "beanmother-core/src/main/java/io/beanmother/core/util/PrimitiveTypeUtils.java"}, "focal_method": {"identifier": "toWrapper", "parameters": "(final TypeToken<?> primitiveTypeToken)", "modifiers": "public static", "return": "Class<?>", "body": "public static Class<?> toWrapper(final TypeToken<?> primitiveTypeToken) {\n        return toWrapper((Class<?>) primitiveTypeToken.getType());\n    }", "signature": "Class<?> toWrapper(final TypeToken<?> primitiveTypeToken)", "full_signature": "public static Class<?> toWrapper(final TypeToken<?> primitiveTypeToken)", "class_method_signature": "PrimitiveTypeUtils.toWrapper(final TypeToken<?> primitiveTypeToken)", "testcase": false, "constructor": false, "invocations": ["toWrapper", "getType"]}, "repository": {"repo_id": 100366560, "url": "https://github.com/keepcosmos/beanmother", "language": "Java", "is_fork": false, "fork_count": 19, "stargazer_count": 95, "size": 688, "license": "licensed"}}