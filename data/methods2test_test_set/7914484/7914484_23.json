{"test_class": {"identifier": "SimplePasswordValidationCallbackHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SimplePasswordValidationCallbackHandler handler;", "modifier": "private", "type": "SimplePasswordValidationCallbackHandler", "declarator": "handler", "var_name": "handler"}], "file": "spring-ws-security/src/test/java/org/springframework/ws/soap/security/xwss/callback/SimplePasswordValidationCallbackHandlerTest.java"}, "test_case": {"identifier": "testDigestPasswordInvalid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testDigestPasswordInvalid() throws Exception {\n\t\tString username = \"Bert\";\n\t\tString nonce = \"9mdsYDCrjjYRur0rxzYt2oD7\";\n\t\tString passwordDigest = \"kwNstEaiFOrI7B31j7GuETYvdgk\";\n\t\tString creationTime = \"2006-06-01T23:48:42Z\";\n\t\tPasswordValidationCallback.DigestPasswordRequest request = new PasswordValidationCallback.DigestPasswordRequest(\n\t\t\t\tusername, passwordDigest, nonce, creationTime);\n\t\tPasswordValidationCallback callback = new PasswordValidationCallback(request);\n\t\thandler.handleInternal(callback);\n\t\tboolean authenticated = callback.getResult();\n\t\tAssert.assertFalse(\"Authenticated\", authenticated);\n\n\t}", "signature": "void testDigestPasswordInvalid()", "full_signature": "@Test public void testDigestPasswordInvalid()", "class_method_signature": "SimplePasswordValidationCallbackHandlerTest.testDigestPasswordInvalid()", "testcase": true, "constructor": false, "invocations": ["handleInternal", "getResult", "assertFalse"]}, "focal_class": {"identifier": "SimplePasswordValidationCallbackHandler", "superclass": "extends AbstractCallbackHandler", "interfaces": "implements InitializingBean", "fields": [{"original_string": "private Map<String, String> users = new HashMap<String, String>();", "modifier": "private", "type": "Map<String, String>", "declarator": "users = new HashMap<String, String>()", "var_name": "users"}], "methods": [{"identifier": "setUsers", "parameters": "(Properties users)", "modifiers": "public", "return": "void", "signature": "void setUsers(Properties users)", "full_signature": "public void setUsers(Properties users)", "class_method_signature": "SimplePasswordValidationCallbackHandler.setUsers(Properties users)", "testcase": false, "constructor": false}, {"identifier": "setUsersMap", "parameters": "(Map<String, String> users)", "modifiers": "public", "return": "void", "signature": "void setUsersMap(Map<String, String> users)", "full_signature": "public void setUsersMap(Map<String, String> users)", "class_method_signature": "SimplePasswordValidationCallbackHandler.setUsersMap(Map<String, String> users)", "testcase": false, "constructor": false}, {"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void afterPropertiesSet()", "full_signature": "@Override public void afterPropertiesSet()", "class_method_signature": "SimplePasswordValidationCallbackHandler.afterPropertiesSet()", "testcase": false, "constructor": false}, {"identifier": "handleInternal", "parameters": "(Callback callback)", "modifiers": "@Override protected", "return": "void", "signature": "void handleInternal(Callback callback)", "full_signature": "@Override protected void handleInternal(Callback callback)", "class_method_signature": "SimplePasswordValidationCallbackHandler.handleInternal(Callback callback)", "testcase": false, "constructor": false}], "file": "spring-ws-security/src/main/java/org/springframework/ws/soap/security/xwss/callback/SimplePasswordValidationCallbackHandler.java"}, "focal_method": {"identifier": "handleInternal", "parameters": "(Callback callback)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n\tprotected void handleInternal(Callback callback) throws IOException, UnsupportedCallbackException {\n\t\tif (callback instanceof PasswordValidationCallback) {\n\t\t\tPasswordValidationCallback passwordCallback = (PasswordValidationCallback) callback;\n\t\t\tif (passwordCallback.getRequest() instanceof PasswordValidationCallback.PlainTextPasswordRequest) {\n\t\t\t\tpasswordCallback.setValidator(new SimplePlainTextPasswordValidator());\n\t\t\t} else if (passwordCallback.getRequest() instanceof PasswordValidationCallback.DigestPasswordRequest) {\n\t\t\t\tPasswordValidationCallback.DigestPasswordRequest digestPasswordRequest = (PasswordValidationCallback.DigestPasswordRequest) passwordCallback\n\t\t\t\t\t\t.getRequest();\n\t\t\t\tString password = users.get(digestPasswordRequest.getUsername());\n\t\t\t\tdigestPasswordRequest.setPassword(password);\n\t\t\t\tpasswordCallback.setValidator(new PasswordValidationCallback.DigestPasswordValidator());\n\t\t\t}\n\t\t} else if (callback instanceof TimestampValidationCallback) {\n\t\t\tTimestampValidationCallback timestampCallback = (TimestampValidationCallback) callback;\n\t\t\ttimestampCallback.setValidator(new DefaultTimestampValidator());\n\t\t} else {\n\t\t\tthrow new UnsupportedCallbackException(callback);\n\t\t}\n\t}", "signature": "void handleInternal(Callback callback)", "full_signature": "@Override protected void handleInternal(Callback callback)", "class_method_signature": "SimplePasswordValidationCallbackHandler.handleInternal(Callback callback)", "testcase": false, "constructor": false, "invocations": ["getRequest", "setValidator", "getRequest", "getRequest", "get", "getUsername", "setPassword", "setValidator", "setValidator"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}