{"test_class": {"identifier": "PipeLineTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/nl/nn/adapterframework/core/PipeLineTest.java"}, "test_case": {"identifier": "testDuplicateExits", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testDuplicateExits() throws ConfigurationException {\n\t\tAdapter adapter = new Adapter();\n\t\tPipeLine pipeline = new PipeLine();\n\t\tPipeLineExit exit = new PipeLineExit();\n\t\texit.setPath(\"success\");\n\t\texit.setState(\"SUCCESS\");\n\t\tpipeline.registerPipeLineExit(exit);\n\t\tpipeline.registerPipeLineExit(exit);\n\t\tadapter.registerPipeLine(pipeline);\n\t\t\n\t\tString lastWarning = ConfigurationWarnings.getInstance().getLast();\n\t\tassertThat(lastWarning,StringEndsWith.endsWith(\"PipeLine exit named [success] already exists\"));\n\t}", "signature": "void testDuplicateExits()", "full_signature": "@Test public void testDuplicateExits()", "class_method_signature": "PipeLineTest.testDuplicateExits()", "testcase": true, "constructor": false, "invocations": ["setPath", "setState", "registerPipeLineExit", "registerPipeLineExit", "registerPipeLine", "getLast", "getInstance", "assertThat", "endsWith"]}, "focal_class": {"identifier": "PipeLine", "superclass": "", "interfaces": "implements ICacheEnabled<String,String>, HasStatistics", "fields": [{"original_string": "private Logger log = LogUtil.getLogger(this);", "modifier": "private", "type": "Logger", "declarator": "log = LogUtil.getLogger(this)", "var_name": "log"}, {"original_string": "private PipeLineProcessor pipeLineProcessor;", "modifier": "private", "type": "PipeLineProcessor", "declarator": "pipeLineProcessor", "var_name": "pipeLineProcessor"}, {"original_string": "private Adapter adapter;", "modifier": "private", "type": "Adapter", "declarator": "adapter", "var_name": "adapter"}, {"original_string": "private INamedObject owner;", "modifier": "private", "type": "INamedObject", "declarator": "owner", "var_name": "owner"}, {"original_string": "private Map<String, StatisticsKeeper> pipeStatistics = new Hashtable<String, StatisticsKeeper>();", "modifier": "private", "type": "Map<String, StatisticsKeeper>", "declarator": "pipeStatistics = new Hashtable<String, StatisticsKeeper>()", "var_name": "pipeStatistics"}, {"original_string": "private Map<String, StatisticsKeeper> pipeWaitingStatistics = new Hashtable<String, StatisticsKeeper>();", "modifier": "private", "type": "Map<String, StatisticsKeeper>", "declarator": "pipeWaitingStatistics = new Hashtable<String, StatisticsKeeper>()", "var_name": "pipeWaitingStatistics"}, {"original_string": "private StatisticsKeeper requestSizeStats;", "modifier": "private", "type": "StatisticsKeeper", "declarator": "requestSizeStats", "var_name": "requestSizeStats"}, {"original_string": "private Map<String, StatisticsKeeper> pipeSizeStats = new Hashtable<String, StatisticsKeeper>();", "modifier": "private", "type": "Map<String, StatisticsKeeper>", "declarator": "pipeSizeStats = new Hashtable<String, StatisticsKeeper>()", "var_name": "pipeSizeStats"}, {"original_string": "private Map<String, PipeForward> globalForwards = new Hashtable<String, PipeForward>();", "modifier": "private", "type": "Map<String, PipeForward>", "declarator": "globalForwards = new Hashtable<String, PipeForward>()", "var_name": "globalForwards"}, {"original_string": "private String firstPipe;", "modifier": "private", "type": "String", "declarator": "firstPipe", "var_name": "firstPipe"}, {"original_string": "private int transactionAttribute = TransactionDefinition.PROPAGATION_SUPPORTS;", "modifier": "private", "type": "int", "declarator": "transactionAttribute = TransactionDefinition.PROPAGATION_SUPPORTS", "var_name": "transactionAttribute"}, {"original_string": "private int transactionTimeout   = 0;", "modifier": "private", "type": "int", "declarator": "transactionTimeout   = 0", "var_name": "transactionTimeout"}, {"original_string": "private Locker locker;", "modifier": "private", "type": "Locker", "declarator": "locker", "var_name": "locker"}, {"original_string": "public final static String INPUT_VALIDATOR_NAME  = \"- pipeline inputValidator\";", "modifier": "public final static", "type": "String", "declarator": "INPUT_VALIDATOR_NAME  = \"- pipeline inputValidator\"", "var_name": "INPUT_VALIDATOR_NAME"}, {"original_string": "public final static String OUTPUT_VALIDATOR_NAME = \"- pipeline outputValidator\";", "modifier": "public final static", "type": "String", "declarator": "OUTPUT_VALIDATOR_NAME = \"- pipeline outputValidator\"", "var_name": "OUTPUT_VALIDATOR_NAME"}, {"original_string": "public final static String INPUT_WRAPPER_NAME    = \"- pipeline inputWrapper\";", "modifier": "public final static", "type": "String", "declarator": "INPUT_WRAPPER_NAME    = \"- pipeline inputWrapper\"", "var_name": "INPUT_WRAPPER_NAME"}, {"original_string": "public final static String OUTPUT_WRAPPER_NAME   = \"- pipeline outputWrapper\";", "modifier": "public final static", "type": "String", "declarator": "OUTPUT_WRAPPER_NAME   = \"- pipeline outputWrapper\"", "var_name": "OUTPUT_WRAPPER_NAME"}, {"original_string": "private IPipe inputValidator  = null;", "modifier": "private", "type": "IPipe", "declarator": "inputValidator  = null", "var_name": "inputValidator"}, {"original_string": "private IPipe outputValidator = null;", "modifier": "private", "type": "IPipe", "declarator": "outputValidator = null", "var_name": "outputValidator"}, {"original_string": "private IPipe inputWrapper    = null;", "modifier": "private", "type": "IPipe", "declarator": "inputWrapper    = null", "var_name": "inputWrapper"}, {"original_string": "private IPipe outputWrapper   = null;", "modifier": "private", "type": "IPipe", "declarator": "outputWrapper   = null", "var_name": "outputWrapper"}, {"original_string": "private TransactionDefinition txDef = null;", "modifier": "private", "type": "TransactionDefinition", "declarator": "txDef = null", "var_name": "txDef"}, {"original_string": "private Map<String, IPipe> pipesByName = new LinkedHashMap<String, IPipe>();", "modifier": "private", "type": "Map<String, IPipe>", "declarator": "pipesByName = new LinkedHashMap<String, IPipe>()", "var_name": "pipesByName"}, {"original_string": "private List<IPipe> pipes              = new ArrayList<IPipe>();", "modifier": "private", "type": "List<IPipe>", "declarator": "pipes              = new ArrayList<IPipe>()", "var_name": "pipes"}, {"original_string": "private Map<String, PipeLineExit> pipeLineExits = new LinkedHashMap<String, PipeLineExit>();", "modifier": "private", "type": "Map<String, PipeLineExit>", "declarator": "pipeLineExits = new LinkedHashMap<String, PipeLineExit>()", "var_name": "pipeLineExits"}, {"original_string": "private String commitOnState = \"success\";", "modifier": "private", "type": "String", "declarator": "commitOnState = \"success\"", "var_name": "commitOnState"}, {"original_string": "private boolean storeOriginalMessageWithoutNamespaces = false;", "modifier": "private", "type": "boolean", "declarator": "storeOriginalMessageWithoutNamespaces = false", "var_name": "storeOriginalMessageWithoutNamespaces"}, {"original_string": "private long messageSizeWarn  = Misc.getMessageSizeWarnByDefault();", "modifier": "private", "type": "long", "declarator": "messageSizeWarn  = Misc.getMessageSizeWarnByDefault()", "var_name": "messageSizeWarn"}, {"original_string": "private boolean forceFixedForwarding = Misc.isForceFixedForwardingByDefault();", "modifier": "private", "type": "boolean", "declarator": "forceFixedForwarding = Misc.isForceFixedForwardingByDefault()", "var_name": "forceFixedForwarding"}, {"original_string": "private Message transformNullMessage = null;", "modifier": "private", "type": "Message", "declarator": "transformNullMessage = null", "var_name": "transformNullMessage"}, {"original_string": "private String adapterToRunBeforeOnEmptyInput = null;", "modifier": "private", "type": "String", "declarator": "adapterToRunBeforeOnEmptyInput = null", "var_name": "adapterToRunBeforeOnEmptyInput"}, {"original_string": "private List<IPipeLineExitHandler> exitHandlers = new ArrayList<IPipeLineExitHandler>();", "modifier": "private", "type": "List<IPipeLineExitHandler>", "declarator": "exitHandlers = new ArrayList<IPipeLineExitHandler>()", "var_name": "exitHandlers"}, {"original_string": "private ICacheAdapter<String,String> cache;", "modifier": "private", "type": "ICacheAdapter<String,String>", "declarator": "cache", "var_name": "cache"}], "methods": [{"identifier": "addPipe", "parameters": "(IPipe pipe)", "modifiers": "public", "return": "void", "signature": "void addPipe(IPipe pipe)", "full_signature": "public void addPipe(IPipe pipe)", "class_method_signature": "PipeLine.addPipe(IPipe pipe)", "testcase": false, "constructor": false}, {"identifier": "getPipe", "parameters": "(String pipeName)", "modifiers": "public", "return": "IPipe", "signature": "IPipe getPipe(String pipeName)", "full_signature": "public IPipe getPipe(String pipeName)", "class_method_signature": "PipeLine.getPipe(String pipeName)", "testcase": false, "constructor": false}, {"identifier": "getPipe", "parameters": "(int index)", "modifiers": "public", "return": "IPipe", "signature": "IPipe getPipe(int index)", "full_signature": "public IPipe getPipe(int index)", "class_method_signature": "PipeLine.getPipe(int index)", "testcase": false, "constructor": false}, {"identifier": "getPipes", "parameters": "()", "modifiers": "public", "return": "List<IPipe>", "signature": "List<IPipe> getPipes()", "full_signature": "public List<IPipe> getPipes()", "class_method_signature": "PipeLine.getPipes()", "testcase": false, "constructor": false}, {"identifier": "registerExitHandler", "parameters": "(IPipeLineExitHandler exitHandler)", "modifiers": "public", "return": "void", "signature": "void registerExitHandler(IPipeLineExitHandler exitHandler)", "full_signature": "public void registerExitHandler(IPipeLineExitHandler exitHandler)", "class_method_signature": "PipeLine.registerExitHandler(IPipeLineExitHandler exitHandler)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void configure()", "full_signature": "public void configure()", "class_method_signature": "PipeLine.configure()", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(IPipe pipe)", "modifiers": "public", "return": "void", "signature": "void configure(IPipe pipe)", "full_signature": "public void configure(IPipe pipe)", "class_method_signature": "PipeLine.configure(IPipe pipe)", "testcase": false, "constructor": false}, {"identifier": "findExitByState", "parameters": "(String state)", "modifiers": "public", "return": "PipeLineExit", "signature": "PipeLineExit findExitByState(String state)", "full_signature": "public PipeLineExit findExitByState(String state)", "class_method_signature": "PipeLine.findExitByState(String state)", "testcase": false, "constructor": false}, {"identifier": "getPipeLineSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPipeLineSize()", "full_signature": "public int getPipeLineSize()", "class_method_signature": "PipeLine.getPipeLineSize()", "testcase": false, "constructor": false}, {"identifier": "iterateOverStatistics", "parameters": "(StatisticsKeeperIterationHandler hski, Object data, int action)", "modifiers": "@Override public", "return": "void", "signature": "void iterateOverStatistics(StatisticsKeeperIterationHandler hski, Object data, int action)", "full_signature": "@Override public void iterateOverStatistics(StatisticsKeeperIterationHandler hski, Object data, int action)", "class_method_signature": "PipeLine.iterateOverStatistics(StatisticsKeeperIterationHandler hski, Object data, int action)", "testcase": false, "constructor": false}, {"identifier": "handlePipeStat", "parameters": "(INamedObject pipe, Map<String, StatisticsKeeper> pipelineStatistics, Object pipeStatsData, StatisticsKeeperIterationHandler handler, boolean deep, int action)", "modifiers": "private", "return": "void", "signature": "void handlePipeStat(INamedObject pipe, Map<String, StatisticsKeeper> pipelineStatistics, Object pipeStatsData, StatisticsKeeperIterationHandler handler, boolean deep, int action)", "full_signature": "private void handlePipeStat(INamedObject pipe, Map<String, StatisticsKeeper> pipelineStatistics, Object pipeStatsData, StatisticsKeeperIterationHandler handler, boolean deep, int action)", "class_method_signature": "PipeLine.handlePipeStat(INamedObject pipe, Map<String, StatisticsKeeper> pipelineStatistics, Object pipeStatsData, StatisticsKeeperIterationHandler handler, boolean deep, int action)", "testcase": false, "constructor": false}, {"identifier": "getPipeStatistics", "parameters": "(INamedObject pipe)", "modifiers": "public", "return": "StatisticsKeeper", "signature": "StatisticsKeeper getPipeStatistics(INamedObject pipe)", "full_signature": "public StatisticsKeeper getPipeStatistics(INamedObject pipe)", "class_method_signature": "PipeLine.getPipeStatistics(INamedObject pipe)", "testcase": false, "constructor": false}, {"identifier": "getPipeWaitingStatistics", "parameters": "(IPipe pipe)", "modifiers": "public", "return": "StatisticsKeeper", "signature": "StatisticsKeeper getPipeWaitingStatistics(IPipe pipe)", "full_signature": "public StatisticsKeeper getPipeWaitingStatistics(IPipe pipe)", "class_method_signature": "PipeLine.getPipeWaitingStatistics(IPipe pipe)", "testcase": false, "constructor": false}, {"identifier": "getPipeSizeStatistics", "parameters": "(IPipe pipe)", "modifiers": "public", "return": "StatisticsKeeper", "signature": "StatisticsKeeper getPipeSizeStatistics(IPipe pipe)", "full_signature": "public StatisticsKeeper getPipeSizeStatistics(IPipe pipe)", "class_method_signature": "PipeLine.getPipeSizeStatistics(IPipe pipe)", "testcase": false, "constructor": false}, {"identifier": "getPipeSizeStatistics", "parameters": "(DummyNamedObject dno)", "modifiers": "public", "return": "StatisticsKeeper", "signature": "StatisticsKeeper getPipeSizeStatistics(DummyNamedObject dno)", "full_signature": "public StatisticsKeeper getPipeSizeStatistics(DummyNamedObject dno)", "class_method_signature": "PipeLine.getPipeSizeStatistics(DummyNamedObject dno)", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(String messageId, Message message, IPipeLineSession pipeLineSession)", "modifiers": "public", "return": "PipeLineResult", "signature": "PipeLineResult process(String messageId, Message message, IPipeLineSession pipeLineSession)", "full_signature": "public PipeLineResult process(String messageId, Message message, IPipeLineSession pipeLineSession)", "class_method_signature": "PipeLine.process(String messageId, Message message, IPipeLineSession pipeLineSession)", "testcase": false, "constructor": false}, {"identifier": "registerForward", "parameters": "(PipeForward forward)", "modifiers": "public", "return": "void", "signature": "void registerForward(PipeForward forward)", "full_signature": "public void registerForward(PipeForward forward)", "class_method_signature": "PipeLine.registerForward(PipeForward forward)", "testcase": false, "constructor": false}, {"identifier": "registerPipeLineExit", "parameters": "(PipeLineExit exit)", "modifiers": "public", "return": "void", "signature": "void registerPipeLineExit(PipeLineExit exit)", "full_signature": "public void registerPipeLineExit(PipeLineExit exit)", "class_method_signature": "PipeLine.registerPipeLineExit(PipeLineExit exit)", "testcase": false, "constructor": false}, {"identifier": "setPipeLineProcessor", "parameters": "(PipeLineProcessor pipeLineProcessor)", "modifiers": "public", "return": "void", "signature": "void setPipeLineProcessor(PipeLineProcessor pipeLineProcessor)", "full_signature": "public void setPipeLineProcessor(PipeLineProcessor pipeLineProcessor)", "class_method_signature": "PipeLine.setPipeLineProcessor(PipeLineProcessor pipeLineProcessor)", "testcase": false, "constructor": false}, {"identifier": "resolveForward", "parameters": "(IPipe pipe, PipeForward forward)", "modifiers": "public", "return": "IForwardTarget", "signature": "IForwardTarget resolveForward(IPipe pipe, PipeForward forward)", "full_signature": "public IForwardTarget resolveForward(IPipe pipe, PipeForward forward)", "class_method_signature": "PipeLine.resolveForward(IPipe pipe, PipeForward forward)", "testcase": false, "constructor": false}, {"identifier": "setAdapter", "parameters": "(Adapter adapter)", "modifiers": "public", "return": "void", "signature": "void setAdapter(Adapter adapter)", "full_signature": "public void setAdapter(Adapter adapter)", "class_method_signature": "PipeLine.setAdapter(Adapter adapter)", "testcase": false, "constructor": false}, {"identifier": "getAdapter", "parameters": "()", "modifiers": "public", "return": "Adapter", "signature": "Adapter getAdapter()", "full_signature": "public Adapter getAdapter()", "class_method_signature": "PipeLine.getAdapter()", "testcase": false, "constructor": false}, {"identifier": "setOwner", "parameters": "(INamedObject owner)", "modifiers": "public", "return": "void", "signature": "void setOwner(INamedObject owner)", "full_signature": "public void setOwner(INamedObject owner)", "class_method_signature": "PipeLine.setOwner(INamedObject owner)", "testcase": false, "constructor": false}, {"identifier": "getOwner", "parameters": "()", "modifiers": "public", "return": "INamedObject", "signature": "INamedObject getOwner()", "full_signature": "public INamedObject getOwner()", "class_method_signature": "PipeLine.getOwner()", "testcase": false, "constructor": false}, {"identifier": "setFirstPipe", "parameters": "(String pipeName)", "modifiers": "@IbisDoc({ \"name of the first pipe to execute when a message is to be processed\", \"\" }) public", "return": "void", "signature": "void setFirstPipe(String pipeName)", "full_signature": "@IbisDoc({ \"name of the first pipe to execute when a message is to be processed\", \"\" }) public void setFirstPipe(String pipeName)", "class_method_signature": "PipeLine.setFirstPipe(String pipeName)", "testcase": false, "constructor": false}, {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "PipeLine.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "PipeLine.stop()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PipeLine.toString()", "testcase": false, "constructor": false}, {"identifier": "setTransacted", "parameters": "(boolean transacted)", "modifiers": "@IbisDoc({\"if set to <code>true, messages will be processed under transaction control. (see below)</code>\", \"<code>false</code>\"}) public", "return": "void", "signature": "void setTransacted(boolean transacted)", "full_signature": "@IbisDoc({\"if set to <code>true, messages will be processed under transaction control. (see below)</code>\", \"<code>false</code>\"}) public void setTransacted(boolean transacted)", "class_method_signature": "PipeLine.setTransacted(boolean transacted)", "testcase": false, "constructor": false}, {"identifier": "isTransacted", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTransacted()", "full_signature": "public boolean isTransacted()", "class_method_signature": "PipeLine.isTransacted()", "testcase": false, "constructor": false}, {"identifier": "setCommitOnState", "parameters": "(String string)", "modifiers": "@IbisDoc({\"if the pipelineresult.getstate() equals this value, the transaction is committed, otherwise it is rolled back.\", \"<code>success</code>\"}) public", "return": "void", "signature": "void setCommitOnState(String string)", "full_signature": "@IbisDoc({\"if the pipelineresult.getstate() equals this value, the transaction is committed, otherwise it is rolled back.\", \"<code>success</code>\"}) public void setCommitOnState(String string)", "class_method_signature": "PipeLine.setCommitOnState(String string)", "testcase": false, "constructor": false}, {"identifier": "getCommitOnState", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCommitOnState()", "full_signature": "public String getCommitOnState()", "class_method_signature": "PipeLine.getCommitOnState()", "testcase": false, "constructor": false}, {"identifier": "setTransactionAttribute", "parameters": "(String attribute)", "modifiers": "@IbisDoc({\"The <code>transactionAttribute</code> declares transactional behavior of pipeline execution. It \" + \"applies both to database transactions and XA transactions.\" + \"The pipeline uses this to start a new transaction or suspend the current one when required. \" + \"For developers: it is equal\" + \"to <a href=\\\"http://java.sun.com/j2ee/sdk_1.2.1/techdocs/guides/ejb/html/Transaction2.html#10494\\\">EJB transaction attribute</a>. \" + \"Possible values for transactionAttribute:\" + \" <table border=\\\"1\\\">\" + \" <tr><th>transactionAttribute</th><th>callers Transaction</th><th>Pipeline excecuted in Transaction</th></tr>\" + \" <tr><td colspan=\\\"1\\\" rowspan=\\\"2\\\">Required</td> <td>none</td><td>T2</td></tr>\" + \" <tr><td>T1</td> <td>T1</td></tr>\" + \" <tr><td colspan=\\\"1\\\" rowspan=\\\"2\\\">RequiresNew</td> <td>none</td><td>T2</td></tr>\" + \" <tr><td>T1</td> <td>T2</td></tr>\" + \" <tr><td colspan=\\\"1\\\" rowspan=\\\"2\\\">Mandatory</td> <td>none</td><td>error</td></tr>\" + \" <tr><td>T1</td> <td>T1</td></tr>\" + \" <tr><td colspan=\\\"1\\\" rowspan=\\\"2\\\">NotSupported</td><td>none</td><td>none</td></tr>\" + \" <tr><td>T1</td> <td>none</td></tr>\" + \" <tr><td colspan=\\\"1\\\" rowspan=\\\"2\\\">Supports</td> <td>none</td><td>none</td></tr>\" + \" <tr><td>T1</td> <td>T1</td></tr>\" + \" <tr><td colspan=\\\"1\\\" rowspan=\\\"2\\\">Never</td> <td>none</td><td>none</td></tr>\" + \" <tr><td>T1</td> <td>error</td></tr>\" + \" </table>\", \"Supports\"}) public", "return": "void", "signature": "void setTransactionAttribute(String attribute)", "full_signature": "@IbisDoc({\"The <code>transactionAttribute</code> declares transactional behavior of pipeline execution. It \" + \"applies both to database transactions and XA transactions.\" + \"The pipeline uses this to start a new transaction or suspend the current one when required. \" + \"For developers: it is equal\" + \"to <a href=\\\"http://java.sun.com/j2ee/sdk_1.2.1/techdocs/guides/ejb/html/Transaction2.html#10494\\\">EJB transaction attribute</a>. \" + \"Possible values for transactionAttribute:\" + \" <table border=\\\"1\\\">\" + \" <tr><th>transactionAttribute</th><th>callers Transaction</th><th>Pipeline excecuted in Transaction</th></tr>\" + \" <tr><td colspan=\\\"1\\\" rowspan=\\\"2\\\">Required</td> <td>none</td><td>T2</td></tr>\" + \" <tr><td>T1</td> <td>T1</td></tr>\" + \" <tr><td colspan=\\\"1\\\" rowspan=\\\"2\\\">RequiresNew</td> <td>none</td><td>T2</td></tr>\" + \" <tr><td>T1</td> <td>T2</td></tr>\" + \" <tr><td colspan=\\\"1\\\" rowspan=\\\"2\\\">Mandatory</td> <td>none</td><td>error</td></tr>\" + \" <tr><td>T1</td> <td>T1</td></tr>\" + \" <tr><td colspan=\\\"1\\\" rowspan=\\\"2\\\">NotSupported</td><td>none</td><td>none</td></tr>\" + \" <tr><td>T1</td> <td>none</td></tr>\" + \" <tr><td colspan=\\\"1\\\" rowspan=\\\"2\\\">Supports</td> <td>none</td><td>none</td></tr>\" + \" <tr><td>T1</td> <td>T1</td></tr>\" + \" <tr><td colspan=\\\"1\\\" rowspan=\\\"2\\\">Never</td> <td>none</td><td>none</td></tr>\" + \" <tr><td>T1</td> <td>error</td></tr>\" + \" </table>\", \"Supports\"}) public void setTransactionAttribute(String attribute)", "class_method_signature": "PipeLine.setTransactionAttribute(String attribute)", "testcase": false, "constructor": false}, {"identifier": "getTransactionAttribute", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTransactionAttribute()", "full_signature": "public String getTransactionAttribute()", "class_method_signature": "PipeLine.getTransactionAttribute()", "testcase": false, "constructor": false}, {"identifier": "setTransactionAttributeNum", "parameters": "(int i)", "modifiers": "@IbisDoc({\"Like <code>transactionAttribute</code>, but the chosen \" + \"option is represented with a number. The numbers mean:\" + \"<table>\" + \"<tr><td>0</td><td>Required</td></tr>\" + \"<tr><td>1</td><td>Supports</td></tr>\" + \"<tr><td>2</td><td>Mandatory</td></tr>\" + \"<tr><td>3</td><td>RequiresNew</td></tr>\" + \"<tr><td>4</td><td>NotSupported</td></tr>\" + \"<tr><td>5</td><td>Never</td></tr>\" + \"</table>\", \"1\"}) public", "return": "void", "signature": "void setTransactionAttributeNum(int i)", "full_signature": "@IbisDoc({\"Like <code>transactionAttribute</code>, but the chosen \" + \"option is represented with a number. The numbers mean:\" + \"<table>\" + \"<tr><td>0</td><td>Required</td></tr>\" + \"<tr><td>1</td><td>Supports</td></tr>\" + \"<tr><td>2</td><td>Mandatory</td></tr>\" + \"<tr><td>3</td><td>RequiresNew</td></tr>\" + \"<tr><td>4</td><td>NotSupported</td></tr>\" + \"<tr><td>5</td><td>Never</td></tr>\" + \"</table>\", \"1\"}) public void setTransactionAttributeNum(int i)", "class_method_signature": "PipeLine.setTransactionAttributeNum(int i)", "testcase": false, "constructor": false}, {"identifier": "getTransactionAttributeNum", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTransactionAttributeNum()", "full_signature": "public int getTransactionAttributeNum()", "class_method_signature": "PipeLine.getTransactionAttributeNum()", "testcase": false, "constructor": false}, {"identifier": "setLocker", "parameters": "(Locker locker)", "modifiers": "public", "return": "void", "signature": "void setLocker(Locker locker)", "full_signature": "public void setLocker(Locker locker)", "class_method_signature": "PipeLine.setLocker(Locker locker)", "testcase": false, "constructor": false}, {"identifier": "getLocker", "parameters": "()", "modifiers": "public", "return": "Locker", "signature": "Locker getLocker()", "full_signature": "public Locker getLocker()", "class_method_signature": "PipeLine.getLocker()", "testcase": false, "constructor": false}, {"identifier": "setInputValidator", "parameters": "(IPipe inputValidator)", "modifiers": "public", "return": "void", "signature": "void setInputValidator(IPipe inputValidator)", "full_signature": "public void setInputValidator(IPipe inputValidator)", "class_method_signature": "PipeLine.setInputValidator(IPipe inputValidator)", "testcase": false, "constructor": false}, {"identifier": "getInputValidator", "parameters": "()", "modifiers": "public", "return": "IPipe", "signature": "IPipe getInputValidator()", "full_signature": "public IPipe getInputValidator()", "class_method_signature": "PipeLine.getInputValidator()", "testcase": false, "constructor": false}, {"identifier": "setOutputValidator", "parameters": "(IPipe outputValidator)", "modifiers": "public", "return": "void", "signature": "void setOutputValidator(IPipe outputValidator)", "full_signature": "public void setOutputValidator(IPipe outputValidator)", "class_method_signature": "PipeLine.setOutputValidator(IPipe outputValidator)", "testcase": false, "constructor": false}, {"identifier": "getOutputValidator", "parameters": "()", "modifiers": "public", "return": "IPipe", "signature": "IPipe getOutputValidator()", "full_signature": "public IPipe getOutputValidator()", "class_method_signature": "PipeLine.getOutputValidator()", "testcase": false, "constructor": false}, {"identifier": "setInputWrapper", "parameters": "(IPipe inputWrapper)", "modifiers": "public", "return": "void", "signature": "void setInputWrapper(IPipe inputWrapper)", "full_signature": "public void setInputWrapper(IPipe inputWrapper)", "class_method_signature": "PipeLine.setInputWrapper(IPipe inputWrapper)", "testcase": false, "constructor": false}, {"identifier": "getInputWrapper", "parameters": "()", "modifiers": "public", "return": "IPipe", "signature": "IPipe getInputWrapper()", "full_signature": "public IPipe getInputWrapper()", "class_method_signature": "PipeLine.getInputWrapper()", "testcase": false, "constructor": false}, {"identifier": "setOutputWrapper", "parameters": "(IPipe outputWrapper)", "modifiers": "public", "return": "void", "signature": "void setOutputWrapper(IPipe outputWrapper)", "full_signature": "public void setOutputWrapper(IPipe outputWrapper)", "class_method_signature": "PipeLine.setOutputWrapper(IPipe outputWrapper)", "testcase": false, "constructor": false}, {"identifier": "getOutputWrapper", "parameters": "()", "modifiers": "public", "return": "IPipe", "signature": "IPipe getOutputWrapper()", "full_signature": "public IPipe getOutputWrapper()", "class_method_signature": "PipeLine.getOutputWrapper()", "testcase": false, "constructor": false}, {"identifier": "setTransactionTimeout", "parameters": "(int i)", "modifiers": "@IbisDoc({\"timeout (in seconds) of transaction started to process a message.\", \"<code>0</code> (use system default)\"}) public", "return": "void", "signature": "void setTransactionTimeout(int i)", "full_signature": "@IbisDoc({\"timeout (in seconds) of transaction started to process a message.\", \"<code>0</code> (use system default)\"}) public void setTransactionTimeout(int i)", "class_method_signature": "PipeLine.setTransactionTimeout(int i)", "testcase": false, "constructor": false}, {"identifier": "getTransactionTimeout", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTransactionTimeout()", "full_signature": "public int getTransactionTimeout()", "class_method_signature": "PipeLine.getTransactionTimeout()", "testcase": false, "constructor": false}, {"identifier": "setStoreOriginalMessageWithoutNamespaces", "parameters": "(boolean b)", "modifiers": "@IbisDoc({\"when set <code>true</code> the original message without namespaces (and prefixes) is stored under the session key originalmessagewithoutnamespaces\", \"false\"}) public", "return": "void", "signature": "void setStoreOriginalMessageWithoutNamespaces(boolean b)", "full_signature": "@IbisDoc({\"when set <code>true</code> the original message without namespaces (and prefixes) is stored under the session key originalmessagewithoutnamespaces\", \"false\"}) public void setStoreOriginalMessageWithoutNamespaces(boolean b)", "class_method_signature": "PipeLine.setStoreOriginalMessageWithoutNamespaces(boolean b)", "testcase": false, "constructor": false}, {"identifier": "isStoreOriginalMessageWithoutNamespaces", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isStoreOriginalMessageWithoutNamespaces()", "full_signature": "public boolean isStoreOriginalMessageWithoutNamespaces()", "class_method_signature": "PipeLine.isStoreOriginalMessageWithoutNamespaces()", "testcase": false, "constructor": false}, {"identifier": "setMessageSizeWarn", "parameters": "(String s)", "modifiers": "@IbisDoc({\"if messagesizewarn>=0 and the size of the input or result pipe message exceeds the value specified a warning message is logged\", \"application default (3mb)\"}) public", "return": "void", "signature": "void setMessageSizeWarn(String s)", "full_signature": "@IbisDoc({\"if messagesizewarn>=0 and the size of the input or result pipe message exceeds the value specified a warning message is logged\", \"application default (3mb)\"}) public void setMessageSizeWarn(String s)", "class_method_signature": "PipeLine.setMessageSizeWarn(String s)", "testcase": false, "constructor": false}, {"identifier": "getMessageSizeWarnNum", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMessageSizeWarnNum()", "full_signature": "public long getMessageSizeWarnNum()", "class_method_signature": "PipeLine.getMessageSizeWarnNum()", "testcase": false, "constructor": false}, {"identifier": "getTxDef", "parameters": "()", "modifiers": "public", "return": "TransactionDefinition", "signature": "TransactionDefinition getTxDef()", "full_signature": "public TransactionDefinition getTxDef()", "class_method_signature": "PipeLine.getTxDef()", "testcase": false, "constructor": false}, {"identifier": "getFirstPipe", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFirstPipe()", "full_signature": "public String getFirstPipe()", "class_method_signature": "PipeLine.getFirstPipe()", "testcase": false, "constructor": false}, {"identifier": "getPipeLineExits", "parameters": "()", "modifiers": "public", "return": "Map<String, PipeLineExit>", "signature": "Map<String, PipeLineExit> getPipeLineExits()", "full_signature": "public Map<String, PipeLineExit> getPipeLineExits()", "class_method_signature": "PipeLine.getPipeLineExits()", "testcase": false, "constructor": false}, {"identifier": "getExitHandlers", "parameters": "()", "modifiers": "public", "return": "List<IPipeLineExitHandler>", "signature": "List<IPipeLineExitHandler> getExitHandlers()", "full_signature": "public List<IPipeLineExitHandler> getExitHandlers()", "class_method_signature": "PipeLine.getExitHandlers()", "testcase": false, "constructor": false}, {"identifier": "registerCache", "parameters": "(ICacheAdapter<String,String> cache)", "modifiers": "@Override public", "return": "void", "signature": "void registerCache(ICacheAdapter<String,String> cache)", "full_signature": "@Override public void registerCache(ICacheAdapter<String,String> cache)", "class_method_signature": "PipeLine.registerCache(ICacheAdapter<String,String> cache)", "testcase": false, "constructor": false}, {"identifier": "getCache", "parameters": "()", "modifiers": "@Override public", "return": "ICacheAdapter<String,String>", "signature": "ICacheAdapter<String,String> getCache()", "full_signature": "@Override public ICacheAdapter<String,String> getCache()", "class_method_signature": "PipeLine.getCache()", "testcase": false, "constructor": false}, {"identifier": "setForceFixedForwarding", "parameters": "(boolean b)", "modifiers": "@IbisDoc({\"forces that each pipe in the pipeline is not automatically added to the globalforwards table\", \"application default\"}) public", "return": "void", "signature": "void setForceFixedForwarding(boolean b)", "full_signature": "@IbisDoc({\"forces that each pipe in the pipeline is not automatically added to the globalforwards table\", \"application default\"}) public void setForceFixedForwarding(boolean b)", "class_method_signature": "PipeLine.setForceFixedForwarding(boolean b)", "testcase": false, "constructor": false}, {"identifier": "isForceFixedForwarding", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isForceFixedForwarding()", "full_signature": "public boolean isForceFixedForwarding()", "class_method_signature": "PipeLine.isForceFixedForwarding()", "testcase": false, "constructor": false}, {"identifier": "setTransformNullMessage", "parameters": "(String s)", "modifiers": "@IbisDoc({\"when specified and <code>null</code> is received as a message the message is changed to the specified value\", \"\"}) public", "return": "void", "signature": "void setTransformNullMessage(String s)", "full_signature": "@IbisDoc({\"when specified and <code>null</code> is received as a message the message is changed to the specified value\", \"\"}) public void setTransformNullMessage(String s)", "class_method_signature": "PipeLine.setTransformNullMessage(String s)", "testcase": false, "constructor": false}, {"identifier": "getRequestSizeStats", "parameters": "()", "modifiers": "public", "return": "StatisticsKeeper", "signature": "StatisticsKeeper getRequestSizeStats()", "full_signature": "public StatisticsKeeper getRequestSizeStats()", "class_method_signature": "PipeLine.getRequestSizeStats()", "testcase": false, "constructor": false}, {"identifier": "setAdapterToRunBeforeOnEmptyInput", "parameters": "(String s)", "modifiers": "@IbisDoc({\"when specified and an empty message is received the specified adapter is run before passing the message (response from specified adapter) to the pipeline\", \"\"}) public", "return": "void", "signature": "void setAdapterToRunBeforeOnEmptyInput(String s)", "full_signature": "@IbisDoc({\"when specified and an empty message is received the specified adapter is run before passing the message (response from specified adapter) to the pipeline\", \"\"}) public void setAdapterToRunBeforeOnEmptyInput(String s)", "class_method_signature": "PipeLine.setAdapterToRunBeforeOnEmptyInput(String s)", "testcase": false, "constructor": false}, {"identifier": "getAdapterToRunBeforeOnEmptyInput", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAdapterToRunBeforeOnEmptyInput()", "full_signature": "public String getAdapterToRunBeforeOnEmptyInput()", "class_method_signature": "PipeLine.getAdapterToRunBeforeOnEmptyInput()", "testcase": false, "constructor": false}, {"identifier": "getLogPrefix", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getLogPrefix()", "full_signature": "private String getLogPrefix()", "class_method_signature": "PipeLine.getLogPrefix()", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/core/PipeLine.java"}, "focal_method": {"identifier": "registerPipeLineExit", "parameters": "(PipeLineExit exit)", "modifiers": "public", "return": "void", "body": "public void registerPipeLineExit(PipeLineExit exit) {\n\t\tif (pipeLineExits.containsKey(exit.getPath())) {\n\t\t\tConfigurationWarnings.add(null, log, getLogPrefix()+\"exit named [\"+exit.getPath()+\"] already exists\");\n\t\t}\n\t\tpipeLineExits.put(exit.getPath(), exit);\n\t}", "signature": "void registerPipeLineExit(PipeLineExit exit)", "full_signature": "public void registerPipeLineExit(PipeLineExit exit)", "class_method_signature": "PipeLine.registerPipeLineExit(PipeLineExit exit)", "testcase": false, "constructor": false, "invocations": ["containsKey", "getPath", "add", "getLogPrefix", "getPath", "put", "getPath"]}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}