{"test_class": {"identifier": "TodoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Long ID = 1L;", "modifier": "private static final", "type": "Long", "declarator": "ID = 1L", "var_name": "ID"}, {"original_string": "private static final String DESCRIPTION = \"description\";", "modifier": "private static final", "type": "String", "declarator": "DESCRIPTION = \"description\"", "var_name": "DESCRIPTION"}, {"original_string": "private static final String TIMESTAMP_STRING = \"2014-02-18 11:13:28\";", "modifier": "private static final", "type": "String", "declarator": "TIMESTAMP_STRING = \"2014-02-18 11:13:28\"", "var_name": "TIMESTAMP_STRING"}, {"original_string": "private static final Timestamp TIMESTAMP = TestDateUtil.parseTimestamp(TIMESTAMP_STRING);", "modifier": "private static final", "type": "Timestamp", "declarator": "TIMESTAMP = TestDateUtil.parseTimestamp(TIMESTAMP_STRING)", "var_name": "TIMESTAMP"}, {"original_string": "private static final String TITLE = \"title\";", "modifier": "private static final", "type": "String", "declarator": "TITLE = \"title\"", "var_name": "TITLE"}], "file": "jooq-only/src/test/java/net/petrikainulainen/spring/jooq/todo/model/TodoTest.java"}, "test_case": {"identifier": "build_titleIsEmpty_ShouldThrowException", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n    public void build_titleIsEmpty_ShouldThrowException() {\n        Todo.getBuilder(\"\").build();\n    }", "signature": "void build_titleIsEmpty_ShouldThrowException()", "full_signature": "@Test(expected = IllegalStateException.class) public void build_titleIsEmpty_ShouldThrowException()", "class_method_signature": "TodoTest.build_titleIsEmpty_ShouldThrowException()", "testcase": true, "constructor": false, "invocations": ["build", "getBuilder"]}, "focal_class": {"identifier": "Todo", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Long id;", "modifier": "private final", "type": "Long", "declarator": "id", "var_name": "id"}, {"original_string": "private final LocalDateTime creationTime;", "modifier": "private final", "type": "LocalDateTime", "declarator": "creationTime", "var_name": "creationTime"}, {"original_string": "private final String description;", "modifier": "private final", "type": "String", "declarator": "description", "var_name": "description"}, {"original_string": "private final LocalDateTime modificationTime;", "modifier": "private final", "type": "LocalDateTime", "declarator": "modificationTime", "var_name": "modificationTime"}, {"original_string": "private final String title;", "modifier": "private final", "type": "String", "declarator": "title", "var_name": "title"}], "methods": [{"identifier": "Todo", "parameters": "(Builder builder)", "modifiers": "private", "return": "", "signature": " Todo(Builder builder)", "full_signature": "private  Todo(Builder builder)", "class_method_signature": "Todo.Todo(Builder builder)", "testcase": false, "constructor": true}, {"identifier": "getBuilder", "parameters": "(String title)", "modifiers": "public static", "return": "Builder", "signature": "Builder getBuilder(String title)", "full_signature": "public static Builder getBuilder(String title)", "class_method_signature": "Todo.getBuilder(String title)", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "Long", "signature": "Long getId()", "full_signature": "public Long getId()", "class_method_signature": "Todo.getId()", "testcase": false, "constructor": false}, {"identifier": "getCreationTime", "parameters": "()", "modifiers": "public", "return": "LocalDateTime", "signature": "LocalDateTime getCreationTime()", "full_signature": "public LocalDateTime getCreationTime()", "class_method_signature": "Todo.getCreationTime()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDescription()", "full_signature": "public String getDescription()", "class_method_signature": "Todo.getDescription()", "testcase": false, "constructor": false}, {"identifier": "getModificationTime", "parameters": "()", "modifiers": "public", "return": "LocalDateTime", "signature": "LocalDateTime getModificationTime()", "full_signature": "public LocalDateTime getModificationTime()", "class_method_signature": "Todo.getModificationTime()", "testcase": false, "constructor": false}, {"identifier": "getTitle", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTitle()", "full_signature": "public String getTitle()", "class_method_signature": "Todo.getTitle()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Todo.toString()", "testcase": false, "constructor": false}], "file": "jooq-only/src/main/java/net/petrikainulainen/spring/jooq/todo/model/Todo.java"}, "focal_method": {"identifier": "getBuilder", "parameters": "(String title)", "modifiers": "public static", "return": "Builder", "body": "public static Builder getBuilder(String title) {\n        return new Builder(title);\n    }", "signature": "Builder getBuilder(String title)", "full_signature": "public static Builder getBuilder(String title)", "class_method_signature": "Todo.getBuilder(String title)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 15566188, "url": "https://github.com/pkainulainen/jooq-with-spring-examples", "language": "Java", "is_fork": false, "fork_count": 51, "stargazer_count": 70, "size": 370, "license": "licensed"}}