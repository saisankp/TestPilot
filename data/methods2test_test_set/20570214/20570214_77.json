{"test_class": {"identifier": "JwtHmacKeyManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final JwtHmacKeyManager manager = new JwtHmacKeyManager();", "modifier": "private final", "type": "JwtHmacKeyManager", "declarator": "manager = new JwtHmacKeyManager()", "var_name": "manager"}, {"original_string": "private final KeyTypeManager.KeyFactory<JwtHmacKeyFormat, JwtHmacKey> factory =\n      manager.keyFactory();", "modifier": "private final", "type": "KeyTypeManager.KeyFactory<JwtHmacKeyFormat, JwtHmacKey>", "declarator": "factory =\n      manager.keyFactory()", "var_name": "factory"}], "file": "java_src/src/test/java/com/google/crypto/tink/jwt/JwtHmacKeyManagerTest.java"}, "test_case": {"identifier": "validateKey_wrongVersion_throws", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void validateKey_wrongVersion_throws() throws Exception {\n    JwtHmacKey validKey = factory.createKey(makeJwtHmacKeyFormat(32, HashType.SHA256));\n    try {\n      manager.validateKey(JwtHmacKey.newBuilder(validKey).setVersion(1).build());\n      fail();\n    } catch (GeneralSecurityException e) {\n      // expected\n    }\n  }", "signature": "void validateKey_wrongVersion_throws()", "full_signature": "@Test public void validateKey_wrongVersion_throws()", "class_method_signature": "JwtHmacKeyManagerTest.validateKey_wrongVersion_throws()", "testcase": true, "constructor": false, "invocations": ["createKey", "makeJwtHmacKeyFormat", "validateKey", "build", "setVersion", "newBuilder", "fail"]}, "focal_class": {"identifier": "JwtHmacKeyManager", "superclass": "extends KeyTypeManager<JwtHmacKey>", "interfaces": "", "fields": [{"original_string": "private static final int MIN_KEY_SIZE_IN_BYTES = 32;", "modifier": "private static final", "type": "int", "declarator": "MIN_KEY_SIZE_IN_BYTES = 32", "var_name": "MIN_KEY_SIZE_IN_BYTES"}], "methods": [{"identifier": "JwtHmacKeyManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " JwtHmacKeyManager()", "full_signature": "public  JwtHmacKeyManager()", "class_method_signature": "JwtHmacKeyManager.JwtHmacKeyManager()", "testcase": false, "constructor": true}, {"identifier": "getKeyType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getKeyType()", "full_signature": "@Override public String getKeyType()", "class_method_signature": "JwtHmacKeyManager.getKeyType()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getVersion()", "full_signature": "@Override public int getVersion()", "class_method_signature": "JwtHmacKeyManager.getVersion()", "testcase": false, "constructor": false}, {"identifier": "keyMaterialType", "parameters": "()", "modifiers": "@Override public", "return": "KeyMaterialType", "signature": "KeyMaterialType keyMaterialType()", "full_signature": "@Override public KeyMaterialType keyMaterialType()", "class_method_signature": "JwtHmacKeyManager.keyMaterialType()", "testcase": false, "constructor": false}, {"identifier": "validateKey", "parameters": "(JwtHmacKey key)", "modifiers": "@Override public", "return": "void", "signature": "void validateKey(JwtHmacKey key)", "full_signature": "@Override public void validateKey(JwtHmacKey key)", "class_method_signature": "JwtHmacKeyManager.validateKey(JwtHmacKey key)", "testcase": false, "constructor": false}, {"identifier": "parseKey", "parameters": "(ByteString byteString)", "modifiers": "@Override public", "return": "JwtHmacKey", "signature": "JwtHmacKey parseKey(ByteString byteString)", "full_signature": "@Override public JwtHmacKey parseKey(ByteString byteString)", "class_method_signature": "JwtHmacKeyManager.parseKey(ByteString byteString)", "testcase": false, "constructor": false}, {"identifier": "keyFactory", "parameters": "()", "modifiers": "@Override public", "return": "KeyFactory<JwtHmacKeyFormat, JwtHmacKey>", "signature": "KeyFactory<JwtHmacKeyFormat, JwtHmacKey> keyFactory()", "full_signature": "@Override public KeyFactory<JwtHmacKeyFormat, JwtHmacKey> keyFactory()", "class_method_signature": "JwtHmacKeyManager.keyFactory()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(boolean newKeyAllowed)", "modifiers": "public static", "return": "void", "signature": "void register(boolean newKeyAllowed)", "full_signature": "public static void register(boolean newKeyAllowed)", "class_method_signature": "JwtHmacKeyManager.register(boolean newKeyAllowed)", "testcase": false, "constructor": false}, {"identifier": "hs256Template", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate hs256Template()", "full_signature": "public static final KeyTemplate hs256Template()", "class_method_signature": "JwtHmacKeyManager.hs256Template()", "testcase": false, "constructor": false}, {"identifier": "hs384Template", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate hs384Template()", "full_signature": "public static final KeyTemplate hs384Template()", "class_method_signature": "JwtHmacKeyManager.hs384Template()", "testcase": false, "constructor": false}, {"identifier": "hs512Template", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate hs512Template()", "full_signature": "public static final KeyTemplate hs512Template()", "class_method_signature": "JwtHmacKeyManager.hs512Template()", "testcase": false, "constructor": false}, {"identifier": "createTemplate", "parameters": "(int keySize, HashType hashType)", "modifiers": "private static", "return": "KeyTemplate", "signature": "KeyTemplate createTemplate(int keySize, HashType hashType)", "full_signature": "private static KeyTemplate createTemplate(int keySize, HashType hashType)", "class_method_signature": "JwtHmacKeyManager.createTemplate(int keySize, HashType hashType)", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/jwt/JwtHmacKeyManager.java"}, "focal_method": {"identifier": "validateKey", "parameters": "(JwtHmacKey key)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void validateKey(JwtHmacKey key) throws GeneralSecurityException {\n    Validators.validateVersion(key.getVersion(), getVersion());\n    if (key.getKeyValue().size() < MIN_KEY_SIZE_IN_BYTES) {\n      throw new GeneralSecurityException(\"key too short\");\n    }\n  }", "signature": "void validateKey(JwtHmacKey key)", "full_signature": "@Override public void validateKey(JwtHmacKey key)", "class_method_signature": "JwtHmacKeyManager.validateKey(JwtHmacKey key)", "testcase": false, "constructor": false, "invocations": ["validateVersion", "getVersion", "getVersion", "size", "getKeyValue"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}