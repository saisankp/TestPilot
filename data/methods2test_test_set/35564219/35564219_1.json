{"test_class": {"identifier": "MatrixProcessorTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [], "file": "library/src/test/java/com/climate/mirage/processors/MatrixProcessorTest.java"}, "test_case": {"identifier": "testReturnsNewBitmap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReturnsNewBitmap() {\n        Bitmap bitmap = Bitmap.createBitmap(400, 400, Bitmap.Config.ARGB_8888);\n        Matrix matrix = new Matrix();\n        matrix.postScale(.5f, 1f);\n        MatrixProcessor processor = new MatrixProcessor(matrix);\n        Bitmap result = processor.process(bitmap);\n        Assert.assertNotNull(result);\n        Assert.assertNotSame(bitmap, result);\n    }", "signature": "void testReturnsNewBitmap()", "full_signature": "@Test public void testReturnsNewBitmap()", "class_method_signature": "MatrixProcessorTest.testReturnsNewBitmap()", "testcase": true, "constructor": false, "invocations": ["createBitmap", "postScale", "process", "assertNotNull", "assertNotSame"]}, "focal_class": {"identifier": "MatrixProcessor", "superclass": "", "interfaces": "implements BitmapProcessor", "fields": [{"original_string": "private Matrix matrix;", "modifier": "private", "type": "Matrix", "declarator": "matrix", "var_name": "matrix"}], "methods": [{"identifier": "MatrixProcessor", "parameters": "(Matrix matrix)", "modifiers": "public", "return": "", "signature": " MatrixProcessor(Matrix matrix)", "full_signature": "public  MatrixProcessor(Matrix matrix)", "class_method_signature": "MatrixProcessor.MatrixProcessor(Matrix matrix)", "testcase": false, "constructor": true}, {"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "MatrixProcessor.getId()", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(Bitmap in)", "modifiers": "@Override public", "return": "Bitmap", "signature": "Bitmap process(Bitmap in)", "full_signature": "@Override public Bitmap process(Bitmap in)", "class_method_signature": "MatrixProcessor.process(Bitmap in)", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/climate/mirage/processors/MatrixProcessor.java"}, "focal_method": {"identifier": "process", "parameters": "(Bitmap in)", "modifiers": "@Override public", "return": "Bitmap", "body": "@Override\n\tpublic Bitmap process(Bitmap in) {\n\t\tBitmap result = Bitmap.createBitmap(in, 0, 0, in.getWidth(), in.getHeight(), matrix, false);\n\t\tif (result != in) in.recycle();\n\t\treturn result;\n\t}", "signature": "Bitmap process(Bitmap in)", "full_signature": "@Override public Bitmap process(Bitmap in)", "class_method_signature": "MatrixProcessor.process(Bitmap in)", "testcase": false, "constructor": false, "invocations": ["createBitmap", "getWidth", "getHeight", "recycle"]}, "repository": {"repo_id": 35564219, "url": "https://github.com/TheClimateCorporation/mirage", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 3928, "license": "licensed"}}