{"test_class": {"identifier": "SpringPlainTextPasswordValidationCallbackHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SpringPlainTextPasswordValidationCallbackHandler callbackHandler;", "modifier": "private", "type": "SpringPlainTextPasswordValidationCallbackHandler", "declarator": "callbackHandler", "var_name": "callbackHandler"}, {"original_string": "private AuthenticationManager authenticationManager;", "modifier": "private", "type": "AuthenticationManager", "declarator": "authenticationManager", "var_name": "authenticationManager"}, {"original_string": "private PasswordValidationCallback callback;", "modifier": "private", "type": "PasswordValidationCallback", "declarator": "callback", "var_name": "callback"}, {"original_string": "private String username;", "modifier": "private", "type": "String", "declarator": "username", "var_name": "username"}, {"original_string": "private String password;", "modifier": "private", "type": "String", "declarator": "password", "var_name": "password"}], "file": "spring-ws-security/src/test/java/org/springframework/ws/soap/security/xwss/callback/SpringPlainTextPasswordValidationCallbackHandlerTest.java"}, "test_case": {"identifier": "testCleanUp", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCleanUp() throws Exception {\n\t\tTestingAuthenticationToken authentication = new TestingAuthenticationToken(new Object(), new Object(),\n\t\t\t\tCollections.<GrantedAuthority> emptyList());\n\t\tSecurityContextHolder.getContext().setAuthentication(authentication);\n\n\t\tCleanupCallback cleanupCallback = new CleanupCallback();\n\t\tcallbackHandler.handleInternal(cleanupCallback);\n\t\tAssert.assertNull(\"Authentication created\", SecurityContextHolder.getContext().getAuthentication());\n\t}", "signature": "void testCleanUp()", "full_signature": "@Test public void testCleanUp()", "class_method_signature": "SpringPlainTextPasswordValidationCallbackHandlerTest.testCleanUp()", "testcase": true, "constructor": false, "invocations": ["emptyList", "setAuthentication", "getContext", "handleInternal", "assertNull", "getAuthentication", "getContext"]}, "focal_class": {"identifier": "SpringPlainTextPasswordValidationCallbackHandler", "superclass": "extends AbstractCallbackHandler", "interfaces": "implements InitializingBean", "fields": [{"original_string": "private AuthenticationManager authenticationManager;", "modifier": "private", "type": "AuthenticationManager", "declarator": "authenticationManager", "var_name": "authenticationManager"}, {"original_string": "private boolean ignoreFailure = false;", "modifier": "private", "type": "boolean", "declarator": "ignoreFailure = false", "var_name": "ignoreFailure"}], "methods": [{"identifier": "setAuthenticationManager", "parameters": "(AuthenticationManager authenticationManager)", "modifiers": "public", "return": "void", "signature": "void setAuthenticationManager(AuthenticationManager authenticationManager)", "full_signature": "public void setAuthenticationManager(AuthenticationManager authenticationManager)", "class_method_signature": "SpringPlainTextPasswordValidationCallbackHandler.setAuthenticationManager(AuthenticationManager authenticationManager)", "testcase": false, "constructor": false}, {"identifier": "setIgnoreFailure", "parameters": "(boolean ignoreFailure)", "modifiers": "public", "return": "void", "signature": "void setIgnoreFailure(boolean ignoreFailure)", "full_signature": "public void setIgnoreFailure(boolean ignoreFailure)", "class_method_signature": "SpringPlainTextPasswordValidationCallbackHandler.setIgnoreFailure(boolean ignoreFailure)", "testcase": false, "constructor": false}, {"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void afterPropertiesSet()", "full_signature": "@Override public void afterPropertiesSet()", "class_method_signature": "SpringPlainTextPasswordValidationCallbackHandler.afterPropertiesSet()", "testcase": false, "constructor": false}, {"identifier": "handleInternal", "parameters": "(Callback callback)", "modifiers": "@Override protected", "return": "void", "signature": "void handleInternal(Callback callback)", "full_signature": "@Override protected void handleInternal(Callback callback)", "class_method_signature": "SpringPlainTextPasswordValidationCallbackHandler.handleInternal(Callback callback)", "testcase": false, "constructor": false}], "file": "spring-ws-security/src/main/java/org/springframework/ws/soap/security/xwss/callback/SpringPlainTextPasswordValidationCallbackHandler.java"}, "focal_method": {"identifier": "handleInternal", "parameters": "(Callback callback)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n\tprotected void handleInternal(Callback callback) throws IOException, UnsupportedCallbackException {\n\t\tif (callback instanceof PasswordValidationCallback) {\n\t\t\tPasswordValidationCallback validationCallback = (PasswordValidationCallback) callback;\n\t\t\tif (validationCallback.getRequest() instanceof PasswordValidationCallback.PlainTextPasswordRequest) {\n\t\t\t\tvalidationCallback.setValidator(new SpringSecurityPlainTextPasswordValidator());\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (callback instanceof CleanupCallback) {\n\t\t\tSecurityContextHolder.clearContext();\n\t\t\treturn;\n\t\t}\n\t\tthrow new UnsupportedCallbackException(callback);\n\t}", "signature": "void handleInternal(Callback callback)", "full_signature": "@Override protected void handleInternal(Callback callback)", "class_method_signature": "SpringPlainTextPasswordValidationCallbackHandler.handleInternal(Callback callback)", "testcase": false, "constructor": false, "invocations": ["getRequest", "setValidator", "clearContext"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}