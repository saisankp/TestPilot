{"test_class": {"identifier": "HelloWorldTest", "superclass": "", "interfaces": "", "fields": [], "file": "tycho-its/projects/surefire.requireBundle/surefire.requireBundle.bundletest/src/org/eclipse/tycho/debugtychosurefire/bundletest/HelloWorldTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test()\n    {\n        final HelloWorld hello = new HelloWorld();\n        assertEquals(\"Hello World\", hello.test());\n    }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "HelloWorldTest.test()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "test"]}, "focal_class": {"identifier": "HelloWorld", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "test", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String test()", "full_signature": "public String test()", "class_method_signature": "HelloWorld.test()", "testcase": false, "constructor": false}], "file": "tycho-its/projects/surefire.requireBundle/surefire.requireBundle.bundle/src/org/eclipse/tycho/debugtychosurefire/bundle/HelloWorld.java"}, "focal_method": {"identifier": "test", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String test()\n    {\n        final SchemaFactory sf = SchemaFactory.newInstance(\"http://www.w3.org/2001/XMLSchema\"); //$NON-NLS-1$\n        if (sf == null) {\n            fail(\"SchemaFactory not found\");\n            return \"SchemaFactory not found\";\n        }\n        return \"Hello World\";\n    }", "signature": "String test()", "full_signature": "public String test()", "class_method_signature": "HelloWorld.test()", "testcase": false, "constructor": false, "invocations": ["newInstance", "fail"]}, "repository": {"repo_id": 2666698, "url": "https://github.com/eclipse/tycho", "language": "Java", "is_fork": false, "fork_count": 67, "stargazer_count": 61, "size": 22429, "license": "licensed"}}