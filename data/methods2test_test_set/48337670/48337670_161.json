{"test_class": {"identifier": "SemanticsServiceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private @Mock ItemRegistry itemRegistry;", "modifier": "private @Mock", "type": "ItemRegistry", "declarator": "itemRegistry", "var_name": "itemRegistry"}, {"original_string": "private @Mock MetadataRegistry metadataRegistry;", "modifier": "private @Mock", "type": "MetadataRegistry", "declarator": "metadataRegistry", "var_name": "metadataRegistry"}, {"original_string": "private GroupItem locationItem;", "modifier": "private", "type": "GroupItem", "declarator": "locationItem", "var_name": "locationItem"}, {"original_string": "private GroupItem equipmentItem;", "modifier": "private", "type": "GroupItem", "declarator": "equipmentItem", "var_name": "equipmentItem"}, {"original_string": "private GenericItem pointItem;", "modifier": "private", "type": "GenericItem", "declarator": "pointItem", "var_name": "pointItem"}, {"original_string": "private SemanticsServiceImpl service;", "modifier": "private", "type": "SemanticsServiceImpl", "declarator": "service", "var_name": "service"}], "file": "bundles/org.openhab.core.semantics/src/test/java/org/openhab/core/semantics/internal/SemanticsServiceImplTest.java"}, "test_case": {"identifier": "testGetItemsInLocationByString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetItemsInLocationByString() throws Exception {\n        Set<Item> items = service.getItemsInLocation(\"joe's room\", Locale.ENGLISH);\n        assertTrue(items.contains(pointItem));\n\n        items = service.getItemsInLocation(LivingRoom.class);\n        assertTrue(items.isEmpty());\n    }", "signature": "void testGetItemsInLocationByString()", "full_signature": "@Test public void testGetItemsInLocationByString()", "class_method_signature": "SemanticsServiceImplTest.testGetItemsInLocationByString()", "testcase": true, "constructor": false, "invocations": ["getItemsInLocation", "assertTrue", "contains", "getItemsInLocation", "assertTrue", "isEmpty"]}, "focal_class": {"identifier": "SemanticsServiceImpl", "superclass": "", "interfaces": "implements SemanticsService", "fields": [{"original_string": "private static final String SYNONYMS_NAMESPACE = \"synonyms\";", "modifier": "private static final", "type": "String", "declarator": "SYNONYMS_NAMESPACE = \"synonyms\"", "var_name": "SYNONYMS_NAMESPACE"}, {"original_string": "private final ItemRegistry itemRegistry;", "modifier": "private final", "type": "ItemRegistry", "declarator": "itemRegistry", "var_name": "itemRegistry"}, {"original_string": "private final MetadataRegistry metadataRegistry;", "modifier": "private final", "type": "MetadataRegistry", "declarator": "metadataRegistry", "var_name": "metadataRegistry"}], "methods": [{"identifier": "SemanticsServiceImpl", "parameters": "(final @Reference ItemRegistry itemRegistry,\n            final @Reference MetadataRegistry metadataRegistry)", "modifiers": "@Activate public", "return": "", "signature": " SemanticsServiceImpl(final @Reference ItemRegistry itemRegistry,\n            final @Reference MetadataRegistry metadataRegistry)", "full_signature": "@Activate public  SemanticsServiceImpl(final @Reference ItemRegistry itemRegistry,\n            final @Reference MetadataRegistry metadataRegistry)", "class_method_signature": "SemanticsServiceImpl.SemanticsServiceImpl(final @Reference ItemRegistry itemRegistry,\n            final @Reference MetadataRegistry metadataRegistry)", "testcase": false, "constructor": true}, {"identifier": "getItemsInLocation", "parameters": "(Class<? extends Location> locationType)", "modifiers": "@Override public", "return": "Set<Item>", "signature": "Set<Item> getItemsInLocation(Class<? extends Location> locationType)", "full_signature": "@Override public Set<Item> getItemsInLocation(Class<? extends Location> locationType)", "class_method_signature": "SemanticsServiceImpl.getItemsInLocation(Class<? extends Location> locationType)", "testcase": false, "constructor": false}, {"identifier": "getItemsInLocation", "parameters": "(String labelOrSynonym, Locale locale)", "modifiers": "@SuppressWarnings({ \"unchecked\" }) @Override public", "return": "Set<Item>", "signature": "Set<Item> getItemsInLocation(String labelOrSynonym, Locale locale)", "full_signature": "@SuppressWarnings({ \"unchecked\" }) @Override public Set<Item> getItemsInLocation(String labelOrSynonym, Locale locale)", "class_method_signature": "SemanticsServiceImpl.getItemsInLocation(String labelOrSynonym, Locale locale)", "testcase": false, "constructor": false}, {"identifier": "hasSynonym", "parameters": "(String labelOrSynonym)", "modifiers": "private", "return": "Predicate<? super Item>", "signature": "Predicate<? super Item> hasSynonym(String labelOrSynonym)", "full_signature": "private Predicate<? super Item> hasSynonym(String labelOrSynonym)", "class_method_signature": "SemanticsServiceImpl.hasSynonym(String labelOrSynonym)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.semantics/src/main/java/org/openhab/core/semantics/internal/SemanticsServiceImpl.java"}, "focal_method": {"identifier": "getItemsInLocation", "parameters": "(Class<? extends Location> locationType)", "modifiers": "@Override public", "return": "Set<Item>", "body": "@Override\n    public Set<Item> getItemsInLocation(Class<? extends Location> locationType) {\n        Set<Item> items = new HashSet<>();\n        Set<Item> locationItems = itemRegistry.stream().filter(SemanticsPredicates.isA(locationType))\n                .collect(Collectors.toSet());\n        for (Item locationItem : locationItems) {\n            if (locationItem instanceof GroupItem) {\n                GroupItem gItem = (GroupItem) locationItem;\n                items.addAll(gItem\n                        .getMembers(SemanticsPredicates.isA(Point.class).or(SemanticsPredicates.isA(Equipment.class))));\n            }\n        }\n        return items;\n    }", "signature": "Set<Item> getItemsInLocation(Class<? extends Location> locationType)", "full_signature": "@Override public Set<Item> getItemsInLocation(Class<? extends Location> locationType)", "class_method_signature": "SemanticsServiceImpl.getItemsInLocation(Class<? extends Location> locationType)", "testcase": false, "constructor": false, "invocations": ["collect", "filter", "stream", "isA", "toSet", "addAll", "getMembers", "or", "isA", "isA"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}