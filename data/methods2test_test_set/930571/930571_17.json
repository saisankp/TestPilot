{"test_class": {"identifier": "DocumentCollectionVariableIndexerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String VARIABLE_NAME = \"dox\";", "modifier": "private static final", "type": "String", "declarator": "VARIABLE_NAME = \"dox\"", "var_name": "VARIABLE_NAME"}, {"original_string": "private static final String DOC_1 = \"doc_1\";", "modifier": "private static final", "type": "String", "declarator": "DOC_1 = \"doc_1\"", "var_name": "DOC_1"}, {"original_string": "private static final String DOC_2 = \"doc_2\";", "modifier": "private static final", "type": "String", "declarator": "DOC_2 = \"doc_2\"", "var_name": "DOC_2"}, {"original_string": "private static final String DOC_3 = \"doc_3\";", "modifier": "private static final", "type": "String", "declarator": "DOC_3 = \"doc_3\"", "var_name": "DOC_3"}, {"original_string": "private DocumentCollectionVariableIndexer indexer = new DocumentCollectionVariableIndexer();", "modifier": "private", "type": "DocumentCollectionVariableIndexer", "declarator": "indexer = new DocumentCollectionVariableIndexer()", "var_name": "indexer"}], "file": "jbpm-document/src/test/java/org/jbpm/document/audit/DocumentCollectionVariableIndexerTest.java"}, "test_case": {"identifier": "testIndex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIndex() {\n\n        DocumentImpl doc1 = new DocumentImpl(DOC_1, DOC_1, 1024, new Date());\n        DocumentImpl doc2 = new DocumentImpl(DOC_2, DOC_3, 1024, new Date());\n        DocumentImpl doc3 = new DocumentImpl(DOC_3, DOC_3, 1024, new Date());\n\n        List<VariableInstanceLog> indexed = indexer.index(VARIABLE_NAME, new DocumentCollectionImpl(Arrays.asList(doc1, doc2, doc3)));\n\n        Assertions.assertThat(indexed)\n                .hasSize(3);\n\n        testDocument(0, 3, indexed.get(0), doc1);\n        testDocument(1, 3, indexed.get(1), doc2);\n        testDocument(2, 3, indexed.get(2), doc3);\n\n    }", "signature": "void testIndex()", "full_signature": "@Test public void testIndex()", "class_method_signature": "DocumentCollectionVariableIndexerTest.testIndex()", "testcase": true, "constructor": false, "invocations": ["index", "asList", "hasSize", "assertThat", "testDocument", "get", "testDocument", "get", "testDocument", "get"]}, "focal_class": {"identifier": "DocumentCollectionVariableIndexer", "superclass": "", "interfaces": "implements ProcessVariableIndexer", "fields": [{"original_string": "private static final String PATTERN = \"{0} ({1}/{2})\";", "modifier": "private static final", "type": "String", "declarator": "PATTERN = \"{0} ({1}/{2})\"", "var_name": "PATTERN"}], "methods": [{"identifier": "accept", "parameters": "(Object variable)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean accept(Object variable)", "full_signature": "@Override public boolean accept(Object variable)", "class_method_signature": "DocumentCollectionVariableIndexer.accept(Object variable)", "testcase": false, "constructor": false}, {"identifier": "index", "parameters": "(String name, Object variable)", "modifiers": "@Override public", "return": "List<VariableInstanceLog>", "signature": "List<VariableInstanceLog> index(String name, Object variable)", "full_signature": "@Override public List<VariableInstanceLog> index(String name, Object variable)", "class_method_signature": "DocumentCollectionVariableIndexer.index(String name, Object variable)", "testcase": false, "constructor": false}, {"identifier": "toVariableLog", "parameters": "(String name, int index, int max, Document document)", "modifiers": "private", "return": "VariableInstanceLog", "signature": "VariableInstanceLog toVariableLog(String name, int index, int max, Document document)", "full_signature": "private VariableInstanceLog toVariableLog(String name, int index, int max, Document document)", "class_method_signature": "DocumentCollectionVariableIndexer.toVariableLog(String name, int index, int max, Document document)", "testcase": false, "constructor": false}], "file": "jbpm-document/src/main/java/org/jbpm/document/audit/DocumentCollectionVariableIndexer.java"}, "focal_method": {"identifier": "index", "parameters": "(String name, Object variable)", "modifiers": "@Override public", "return": "List<VariableInstanceLog>", "body": "@Override\n    public List<VariableInstanceLog> index(String name, Object variable) {\n        DocumentCollection<? extends Document> documentCollection = (DocumentCollection<? extends Document>) variable;\n\n        int max = documentCollection.getDocuments().size();\n\n        return IntStream.range(0, max)\n                .mapToObj(index -> toVariableLog(name, index, max, documentCollection.getDocuments().get(index)))\n                .collect(Collectors.toList());\n    }", "signature": "List<VariableInstanceLog> index(String name, Object variable)", "full_signature": "@Override public List<VariableInstanceLog> index(String name, Object variable)", "class_method_signature": "DocumentCollectionVariableIndexer.index(String name, Object variable)", "testcase": false, "constructor": false, "invocations": ["size", "getDocuments", "collect", "mapToObj", "range", "toVariableLog", "get", "getDocuments", "toList"]}, "repository": {"repo_id": 930571, "url": "https://github.com/kiegroup/jbpm", "stars": 1035, "created": "9/22/2010 1:19:52 PM +00:00", "updates": "2020-01-22T03:39:57+00:00", "fork": "False", "license": "licensed"}}