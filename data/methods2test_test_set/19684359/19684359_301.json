{"test_class": {"identifier": "HadoopCredentialConfigurationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@SuppressWarnings(\"DoubleBraceInitialization\")\n  private static final Map<String, Object> expectedDefaultConfiguration =\n      new HashMap<String, Object>() {\n        {\n          put(\".auth.access.token.provider.impl\", null);\n          put(\".auth.client.file\", USER_HOME.value() + \"/.credentials/storage.json\");\n          put(\".auth.client.id\", null);\n          put(\".client.id\", null);\n          put(\".auth.client.secret\", null);\n          put(\".client.secret\", null);\n          put(\".auth.null.enable\", false);\n          put(\".auth.service.account.email\", null);\n          put(\".service.account.auth.email\", null);\n          put(\".auth.service.account.enable\", true);\n          put(\".enable.service.account.auth\", true);\n          put(\".auth.service.account.json.keyfile\", null);\n          put(\".auth.service.account.keyfile\", null);\n          put(\".service.account.auth.keyfile\", null);\n          put(\".auth.service.account.private.key\", null);\n          put(\".auth.service.account.private.key.id\", null);\n          put(\".token.server.url\", \"https://oauth2.googleapis.com/token\");\n          put(\".http.transport.type\", JAVA_NET);\n          put(\".proxy.address\", null);\n          put(\".proxy.password\", null);\n          put(\".proxy.username\", null);\n          put(\".auth.impersonation.service.account\", null);\n          put(\".auth.impersonation.service.account.for.user.\", ImmutableMap.of());\n          put(\".auth.impersonation.service.account.for.group.\", ImmutableMap.of());\n        }\n      };", "modifier": "@SuppressWarnings(\"DoubleBraceInitialization\")\n  private static final", "type": "Map<String, Object>", "declarator": "expectedDefaultConfiguration =\n      new HashMap<String, Object>() {\n        {\n          put(\".auth.access.token.provider.impl\", null);\n          put(\".auth.client.file\", USER_HOME.value() + \"/.credentials/storage.json\");\n          put(\".auth.client.id\", null);\n          put(\".client.id\", null);\n          put(\".auth.client.secret\", null);\n          put(\".client.secret\", null);\n          put(\".auth.null.enable\", false);\n          put(\".auth.service.account.email\", null);\n          put(\".service.account.auth.email\", null);\n          put(\".auth.service.account.enable\", true);\n          put(\".enable.service.account.auth\", true);\n          put(\".auth.service.account.json.keyfile\", null);\n          put(\".auth.service.account.keyfile\", null);\n          put(\".service.account.auth.keyfile\", null);\n          put(\".auth.service.account.private.key\", null);\n          put(\".auth.service.account.private.key.id\", null);\n          put(\".token.server.url\", \"https://oauth2.googleapis.com/token\");\n          put(\".http.transport.type\", JAVA_NET);\n          put(\".proxy.address\", null);\n          put(\".proxy.password\", null);\n          put(\".proxy.username\", null);\n          put(\".auth.impersonation.service.account\", null);\n          put(\".auth.impersonation.service.account.for.user.\", ImmutableMap.of());\n          put(\".auth.impersonation.service.account.for.group.\", ImmutableMap.of());\n        }\n      }", "var_name": "expectedDefaultConfiguration"}, {"original_string": "private static final ImmutableList<String> TEST_SCOPES = ImmutableList.of(\"scope1\", \"scope2\");", "modifier": "private static final", "type": "ImmutableList<String>", "declarator": "TEST_SCOPES = ImmutableList.of(\"scope1\", \"scope2\")", "var_name": "TEST_SCOPES"}, {"original_string": "private Configuration configuration;", "modifier": "private", "type": "Configuration", "declarator": "configuration", "var_name": "configuration"}], "file": "util-hadoop/src/test/java/com/google/cloud/hadoop/util/HadoopCredentialConfigurationTest.java"}, "test_case": {"identifier": "metadataServiceIsUsedByDefault", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void metadataServiceIsUsedByDefault() throws Exception {\n    TokenResponse token = new TokenResponse().setAccessToken(\"metadata-test-token\");\n\n    MockHttpTransport transport = mockTransport(jsonDataResponse(token));\n    CredentialFactory.setStaticHttpTransport(transport);\n\n    CredentialFactory credentialFactory = getCredentialFactory();\n    Credential credential = credentialFactory.getCredential(TEST_SCOPES);\n\n    assertThat(credential.getAccessToken()).isEqualTo(\"metadata-test-token\");\n  }", "signature": "void metadataServiceIsUsedByDefault()", "full_signature": "@Test public void metadataServiceIsUsedByDefault()", "class_method_signature": "HadoopCredentialConfigurationTest.metadataServiceIsUsedByDefault()", "testcase": true, "constructor": false, "invocations": ["setAccessToken", "mockTransport", "jsonDataResponse", "setStaticHttpTransport", "getCredentialFactory", "getCredential", "isEqualTo", "assertThat", "getAccessToken"]}, "focal_class": {"identifier": "HadoopCredentialConfiguration", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String BASE_KEY_PREFIX = \"google.cloud\";", "modifier": "public static final", "type": "String", "declarator": "BASE_KEY_PREFIX = \"google.cloud\"", "var_name": "BASE_KEY_PREFIX"}, {"original_string": "public static final HadoopConfigurationProperty<Boolean> ENABLE_SERVICE_ACCOUNTS_SUFFIX =\n      new HadoopConfigurationProperty<>(\n          \".auth.service.account.enable\",\n          CredentialOptions.SERVICE_ACCOUNT_ENABLED_DEFAULT,\n          \".enable.service.account.auth\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<Boolean>", "declarator": "ENABLE_SERVICE_ACCOUNTS_SUFFIX =\n      new HadoopConfigurationProperty<>(\n          \".auth.service.account.enable\",\n          CredentialOptions.SERVICE_ACCOUNT_ENABLED_DEFAULT,\n          \".enable.service.account.auth\")", "var_name": "ENABLE_SERVICE_ACCOUNTS_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<String> SERVICE_ACCOUNT_EMAIL_SUFFIX =\n      new HadoopConfigurationProperty<>(\n          \".auth.service.account.email\", /* defaultValue= */ null, \".service.account.auth.email\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "SERVICE_ACCOUNT_EMAIL_SUFFIX =\n      new HadoopConfigurationProperty<>(\n          \".auth.service.account.email\", /* defaultValue= */ null, \".service.account.auth.email\")", "var_name": "SERVICE_ACCOUNT_EMAIL_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<String> SERVICE_ACCOUNT_PRIVATE_KEY_ID_SUFFIX =\n      new HadoopConfigurationProperty<>(\".auth.service.account.private.key.id\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "SERVICE_ACCOUNT_PRIVATE_KEY_ID_SUFFIX =\n      new HadoopConfigurationProperty<>(\".auth.service.account.private.key.id\")", "var_name": "SERVICE_ACCOUNT_PRIVATE_KEY_ID_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<String> SERVICE_ACCOUNT_PRIVATE_KEY_SUFFIX =\n      new HadoopConfigurationProperty<>(\".auth.service.account.private.key\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "SERVICE_ACCOUNT_PRIVATE_KEY_SUFFIX =\n      new HadoopConfigurationProperty<>(\".auth.service.account.private.key\")", "var_name": "SERVICE_ACCOUNT_PRIVATE_KEY_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<String> SERVICE_ACCOUNT_KEYFILE_SUFFIX =\n      new HadoopConfigurationProperty<>(\n          \".auth.service.account.keyfile\",\n          /* defaultValue= */ null,\n          \".service.account.auth.keyfile\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "SERVICE_ACCOUNT_KEYFILE_SUFFIX =\n      new HadoopConfigurationProperty<>(\n          \".auth.service.account.keyfile\",\n          /* defaultValue= */ null,\n          \".service.account.auth.keyfile\")", "var_name": "SERVICE_ACCOUNT_KEYFILE_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<String> SERVICE_ACCOUNT_JSON_KEYFILE_SUFFIX =\n      new HadoopConfigurationProperty<>(\".auth.service.account.json.keyfile\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "SERVICE_ACCOUNT_JSON_KEYFILE_SUFFIX =\n      new HadoopConfigurationProperty<>(\".auth.service.account.json.keyfile\")", "var_name": "SERVICE_ACCOUNT_JSON_KEYFILE_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<String> CLIENT_ID_SUFFIX =\n      new HadoopConfigurationProperty<>(\".auth.client.id\", /* defaultValue= */ null, \".client.id\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "CLIENT_ID_SUFFIX =\n      new HadoopConfigurationProperty<>(\".auth.client.id\", /* defaultValue= */ null, \".client.id\")", "var_name": "CLIENT_ID_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<String> CLIENT_SECRET_SUFFIX =\n      new HadoopConfigurationProperty<>(\n          \".auth.client.secret\", /* defaultValue= */ null, \".client.secret\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "CLIENT_SECRET_SUFFIX =\n      new HadoopConfigurationProperty<>(\n          \".auth.client.secret\", /* defaultValue= */ null, \".client.secret\")", "var_name": "CLIENT_SECRET_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<String> OAUTH_CLIENT_FILE_SUFFIX =\n      new HadoopConfigurationProperty<>(\n          \".auth.client.file\", USER_HOME.value() + \"/.credentials/storage.json\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "OAUTH_CLIENT_FILE_SUFFIX =\n      new HadoopConfigurationProperty<>(\n          \".auth.client.file\", USER_HOME.value() + \"/.credentials/storage.json\")", "var_name": "OAUTH_CLIENT_FILE_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<Boolean> ENABLE_NULL_CREDENTIAL_SUFFIX =\n      new HadoopConfigurationProperty<>(\n          \".auth.null.enable\", CredentialOptions.NULL_CREDENTIALS_ENABLED_DEFAULT);", "modifier": "public static final", "type": "HadoopConfigurationProperty<Boolean>", "declarator": "ENABLE_NULL_CREDENTIAL_SUFFIX =\n      new HadoopConfigurationProperty<>(\n          \".auth.null.enable\", CredentialOptions.NULL_CREDENTIALS_ENABLED_DEFAULT)", "var_name": "ENABLE_NULL_CREDENTIAL_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<String> TOKEN_SERVER_URL_SUFFIX =\n      new HadoopConfigurationProperty<>(\n          \".token.server.url\", CredentialOptions.TOKEN_SERVER_URL_DEFAULT);", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "TOKEN_SERVER_URL_SUFFIX =\n      new HadoopConfigurationProperty<>(\n          \".token.server.url\", CredentialOptions.TOKEN_SERVER_URL_DEFAULT)", "var_name": "TOKEN_SERVER_URL_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<String> PROXY_ADDRESS_SUFFIX =\n      new HadoopConfigurationProperty<>(\".proxy.address\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "PROXY_ADDRESS_SUFFIX =\n      new HadoopConfigurationProperty<>(\".proxy.address\")", "var_name": "PROXY_ADDRESS_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<String> PROXY_USERNAME_SUFFIX =\n      new HadoopConfigurationProperty<>(\".proxy.username\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "PROXY_USERNAME_SUFFIX =\n      new HadoopConfigurationProperty<>(\".proxy.username\")", "var_name": "PROXY_USERNAME_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<String> PROXY_PASSWORD_SUFFIX =\n      new HadoopConfigurationProperty<>(\".proxy.password\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "PROXY_PASSWORD_SUFFIX =\n      new HadoopConfigurationProperty<>(\".proxy.password\")", "var_name": "PROXY_PASSWORD_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<HttpTransportType> HTTP_TRANSPORT_SUFFIX =\n      new HadoopConfigurationProperty<>(\n          \".http.transport.type\", CredentialOptions.HTTP_TRANSPORT_TYPE_DEFAULT);", "modifier": "public static final", "type": "HadoopConfigurationProperty<HttpTransportType>", "declarator": "HTTP_TRANSPORT_SUFFIX =\n      new HadoopConfigurationProperty<>(\n          \".http.transport.type\", CredentialOptions.HTTP_TRANSPORT_TYPE_DEFAULT)", "var_name": "HTTP_TRANSPORT_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<Class<? extends AccessTokenProvider>>\n      ACCESS_TOKEN_PROVIDER_IMPL_SUFFIX =\n          new HadoopConfigurationProperty<>(\".auth.access.token.provider.impl\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<Class<? extends AccessTokenProvider>>", "declarator": "ACCESS_TOKEN_PROVIDER_IMPL_SUFFIX =\n          new HadoopConfigurationProperty<>(\".auth.access.token.provider.impl\")", "var_name": "ACCESS_TOKEN_PROVIDER_IMPL_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<String> IMPERSONATION_SERVICE_ACCOUNT_SUFFIX =\n      new HadoopConfigurationProperty<>(\".auth.impersonation.service.account\");", "modifier": "public static final", "type": "HadoopConfigurationProperty<String>", "declarator": "IMPERSONATION_SERVICE_ACCOUNT_SUFFIX =\n      new HadoopConfigurationProperty<>(\".auth.impersonation.service.account\")", "var_name": "IMPERSONATION_SERVICE_ACCOUNT_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<Map<String, String>>\n      USER_IMPERSONATION_SERVICE_ACCOUNT_SUFFIX =\n          new HadoopConfigurationProperty<>(\n              \".auth.impersonation.service.account.for.user.\", ImmutableMap.of());", "modifier": "public static final", "type": "HadoopConfigurationProperty<Map<String, String>>", "declarator": "USER_IMPERSONATION_SERVICE_ACCOUNT_SUFFIX =\n          new HadoopConfigurationProperty<>(\n              \".auth.impersonation.service.account.for.user.\", ImmutableMap.of())", "var_name": "USER_IMPERSONATION_SERVICE_ACCOUNT_SUFFIX"}, {"original_string": "public static final HadoopConfigurationProperty<Map<String, String>>\n      GROUP_IMPERSONATION_SERVICE_ACCOUNT_SUFFIX =\n          new HadoopConfigurationProperty<>(\n              \".auth.impersonation.service.account.for.group.\", ImmutableMap.of());", "modifier": "public static final", "type": "HadoopConfigurationProperty<Map<String, String>>", "declarator": "GROUP_IMPERSONATION_SERVICE_ACCOUNT_SUFFIX =\n          new HadoopConfigurationProperty<>(\n              \".auth.impersonation.service.account.for.group.\", ImmutableMap.of())", "var_name": "GROUP_IMPERSONATION_SERVICE_ACCOUNT_SUFFIX"}], "methods": [{"identifier": "getCredentialFactory", "parameters": "(\n      Configuration config, String... keyPrefixesVararg)", "modifiers": "public static", "return": "CredentialFactory", "signature": "CredentialFactory getCredentialFactory(\n      Configuration config, String... keyPrefixesVararg)", "full_signature": "public static CredentialFactory getCredentialFactory(\n      Configuration config, String... keyPrefixesVararg)", "class_method_signature": "HadoopCredentialConfiguration.getCredentialFactory(\n      Configuration config, String... keyPrefixesVararg)", "testcase": false, "constructor": false}, {"identifier": "getAccessTokenProviderImplClass", "parameters": "(\n      Configuration config, String... keyPrefixes)", "modifiers": "public static", "return": "Class<? extends AccessTokenProvider>", "signature": "Class<? extends AccessTokenProvider> getAccessTokenProviderImplClass(\n      Configuration config, String... keyPrefixes)", "full_signature": "public static Class<? extends AccessTokenProvider> getAccessTokenProviderImplClass(\n      Configuration config, String... keyPrefixes)", "class_method_signature": "HadoopCredentialConfiguration.getAccessTokenProviderImplClass(\n      Configuration config, String... keyPrefixes)", "testcase": false, "constructor": false}, {"identifier": "getConfigKeyPrefixes", "parameters": "(String... keyPrefixes)", "modifiers": "public static", "return": "ImmutableList<String>", "signature": "ImmutableList<String> getConfigKeyPrefixes(String... keyPrefixes)", "full_signature": "public static ImmutableList<String> getConfigKeyPrefixes(String... keyPrefixes)", "class_method_signature": "HadoopCredentialConfiguration.getConfigKeyPrefixes(String... keyPrefixes)", "testcase": false, "constructor": false}, {"identifier": "HadoopCredentialConfiguration", "parameters": "()", "modifiers": "protected", "return": "", "signature": " HadoopCredentialConfiguration()", "full_signature": "protected  HadoopCredentialConfiguration()", "class_method_signature": "HadoopCredentialConfiguration.HadoopCredentialConfiguration()", "testcase": false, "constructor": true}], "file": "util-hadoop/src/main/java/com/google/cloud/hadoop/util/HadoopCredentialConfiguration.java"}, "focal_method": {"identifier": "getCredentialFactory", "parameters": "(\n      Configuration config, String... keyPrefixesVararg)", "modifiers": "public static", "return": "CredentialFactory", "body": "public static CredentialFactory getCredentialFactory(\n      Configuration config, String... keyPrefixesVararg) {\n    List<String> keyPrefixes = getConfigKeyPrefixes(keyPrefixesVararg);\n    CredentialOptions credentialOptions =\n        CredentialOptions.builder()\n            .setServiceAccountEnabled(\n                ENABLE_SERVICE_ACCOUNTS_SUFFIX\n                    .withPrefixes(keyPrefixes)\n                    .get(config, config::getBoolean))\n            .setServiceAccountPrivateKeyId(\n                RedactedString.create(\n                    SERVICE_ACCOUNT_PRIVATE_KEY_ID_SUFFIX\n                        .withPrefixes(keyPrefixes)\n                        .getPassword(config)))\n            .setServiceAccountPrivateKey(\n                RedactedString.create(\n                    SERVICE_ACCOUNT_PRIVATE_KEY_SUFFIX\n                        .withPrefixes(keyPrefixes)\n                        .getPassword(config)))\n            .setServiceAccountEmail(\n                SERVICE_ACCOUNT_EMAIL_SUFFIX.withPrefixes(keyPrefixes).getPassword(config))\n            .setServiceAccountKeyFile(\n                SERVICE_ACCOUNT_KEYFILE_SUFFIX.withPrefixes(keyPrefixes).get(config, config::get))\n            .setServiceAccountJsonKeyFile(\n                SERVICE_ACCOUNT_JSON_KEYFILE_SUFFIX\n                    .withPrefixes(keyPrefixes)\n                    .get(config, config::get))\n            .setClientId(\n                RedactedString.create(\n                    CLIENT_ID_SUFFIX.withPrefixes(keyPrefixes).get(config, config::get)))\n            .setClientSecret(\n                RedactedString.create(\n                    CLIENT_SECRET_SUFFIX.withPrefixes(keyPrefixes).get(config, config::get)))\n            .setOAuthCredentialFile(\n                OAUTH_CLIENT_FILE_SUFFIX.withPrefixes(keyPrefixes).get(config, config::get))\n            .setNullCredentialEnabled(\n                ENABLE_NULL_CREDENTIAL_SUFFIX\n                    .withPrefixes(keyPrefixes)\n                    .get(config, config::getBoolean))\n            .setTransportType(\n                HTTP_TRANSPORT_SUFFIX.withPrefixes(keyPrefixes).get(config, config::getEnum))\n            .setTokenServerUrl(\n                TOKEN_SERVER_URL_SUFFIX.withPrefixes(keyPrefixes).get(config, config::get))\n            .setProxyAddress(\n                PROXY_ADDRESS_SUFFIX.withPrefixes(keyPrefixes).get(config, config::get))\n            .setProxyUsername(\n                RedactedString.create(\n                    PROXY_USERNAME_SUFFIX.withPrefixes(keyPrefixes).getPassword(config)))\n            .setProxyPassword(\n                RedactedString.create(\n                    PROXY_PASSWORD_SUFFIX.withPrefixes(keyPrefixes).getPassword(config)))\n            .build();\n    return new CredentialFactory(credentialOptions);\n  }", "signature": "CredentialFactory getCredentialFactory(\n      Configuration config, String... keyPrefixesVararg)", "full_signature": "public static CredentialFactory getCredentialFactory(\n      Configuration config, String... keyPrefixesVararg)", "class_method_signature": "HadoopCredentialConfiguration.getCredentialFactory(\n      Configuration config, String... keyPrefixesVararg)", "testcase": false, "constructor": false, "invocations": ["getConfigKeyPrefixes", "build", "setProxyPassword", "setProxyUsername", "setProxyAddress", "setTokenServerUrl", "setTransportType", "setNullCredentialEnabled", "setOAuthCredentialFile", "setClientSecret", "setClientId", "setServiceAccountJsonKeyFile", "setServiceAccountKeyFile", "setServiceAccountEmail", "setServiceAccountPrivateKey", "setServiceAccountPrivateKeyId", "setServiceAccountEnabled", "builder", "get", "withPrefixes", "create", "getPassword", "withPrefixes", "create", "getPassword", "withPrefixes", "getPassword", "withPrefixes", "get", "withPrefixes", "get", "withPrefixes", "create", "get", "withPrefixes", "create", "get", "withPrefixes", "get", "withPrefixes", "get", "withPrefixes", "get", "withPrefixes", "get", "withPrefixes", "get", "withPrefixes", "create", "getPassword", "withPrefixes", "create", "getPassword", "withPrefixes"]}, "repository": {"repo_id": 19684359, "url": "https://github.com/GoogleCloudDataproc/bigdata-interop", "stars": 178, "created": "5/12/2014 3:11:55 AM +00:00", "updates": "2020-01-23T23:10:40+00:00", "fork": "False", "license": "licensed"}}