{"test_class": {"identifier": "ContractTemplateTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "protected final ContextStorage<Context> contextStorage = new UnmodifiableContextStorage(\n      EmptyContext.getInstance());", "modifier": "protected final", "type": "ContextStorage<Context>", "declarator": "contextStorage = new UnmodifiableContextStorage(\n      EmptyContext.getInstance())", "var_name": "contextStorage"}], "file": "core/transport/src/test/java/hera/client/ContractTemplateTest.java"}, "test_case": {"identifier": "testRedeployTx", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRedeployTx() throws Exception {\n    // given\n    final ContractTemplate contractTemplate = new ContractTemplate(contextStorage);\n    final Requester mockRequester = mock(Requester.class);\n    final ContractTxHash expected = ContractTxHash.of(BytesValue.EMPTY);\n    when(mockRequester.request(ArgumentMatchers.<Invocation<?>>any()))\n        .thenReturn(expected);\n    contractTemplate.requester = mockRequester;\n\n    // then\n    assertEquals(expected, contractTemplate\n        .redeploy(anySigner, anyContractAddress, anyDefinition, anyNonce, anyFee));\n    assertEquals(expected, contractTemplate\n        .redeployTx(anySigner, anyContractAddress, anyDefinition, anyNonce, anyFee));\n  }", "signature": "void testRedeployTx()", "full_signature": "@Test public void testRedeployTx()", "class_method_signature": "ContractTemplateTest.testRedeployTx()", "testcase": true, "constructor": false, "invocations": ["mock", "of", "thenReturn", "when", "request", "any", "assertEquals", "redeploy", "assertEquals", "redeployTx"]}, "focal_class": {"identifier": "ContractTemplate", "superclass": "extends AbstractTemplate", "interfaces": "implements ContractOperation", "fields": [{"original_string": "protected final ContractMethods contractMethods = new ContractMethods();", "modifier": "protected final", "type": "ContractMethods", "declarator": "contractMethods = new ContractMethods()", "var_name": "contractMethods"}], "methods": [{"identifier": "ContractTemplate", "parameters": "(final ContextStorage<Context> contextStorage)", "modifiers": "", "return": "", "signature": " ContractTemplate(final ContextStorage<Context> contextStorage)", "full_signature": "  ContractTemplate(final ContextStorage<Context> contextStorage)", "class_method_signature": "ContractTemplate.ContractTemplate(final ContextStorage<Context> contextStorage)", "testcase": false, "constructor": true}, {"identifier": "getReceipt", "parameters": "(final ContractTxHash contractTxHash)", "modifiers": "@Override public", "return": "ContractTxReceipt", "signature": "ContractTxReceipt getReceipt(final ContractTxHash contractTxHash)", "full_signature": "@Override public ContractTxReceipt getReceipt(final ContractTxHash contractTxHash)", "class_method_signature": "ContractTemplate.getReceipt(final ContractTxHash contractTxHash)", "testcase": false, "constructor": false}, {"identifier": "getContractTxReceipt", "parameters": "(final TxHash txHash)", "modifiers": "@Override public", "return": "ContractTxReceipt", "signature": "ContractTxReceipt getContractTxReceipt(final TxHash txHash)", "full_signature": "@Override public ContractTxReceipt getContractTxReceipt(final TxHash txHash)", "class_method_signature": "ContractTemplate.getContractTxReceipt(final TxHash txHash)", "testcase": false, "constructor": false}, {"identifier": "deploy", "parameters": "(final Account creator, final ContractDefinition contractDefinition,\n      final long nonce)", "modifiers": "@Override public", "return": "ContractTxHash", "signature": "ContractTxHash deploy(final Account creator, final ContractDefinition contractDefinition,\n      final long nonce)", "full_signature": "@Override public ContractTxHash deploy(final Account creator, final ContractDefinition contractDefinition,\n      final long nonce)", "class_method_signature": "ContractTemplate.deploy(final Account creator, final ContractDefinition contractDefinition,\n      final long nonce)", "testcase": false, "constructor": false}, {"identifier": "deploy", "parameters": "(final Account creator, final ContractDefinition contractDefinition,\n      final long nonce, final Fee fee)", "modifiers": "@Override public", "return": "ContractTxHash", "signature": "ContractTxHash deploy(final Account creator, final ContractDefinition contractDefinition,\n      final long nonce, final Fee fee)", "full_signature": "@Override public ContractTxHash deploy(final Account creator, final ContractDefinition contractDefinition,\n      final long nonce, final Fee fee)", "class_method_signature": "ContractTemplate.deploy(final Account creator, final ContractDefinition contractDefinition,\n      final long nonce, final Fee fee)", "testcase": false, "constructor": false}, {"identifier": "deploy", "parameters": "(final Signer signer, final ContractDefinition contractDefinition,\n      final long nonce, final Fee fee)", "modifiers": "@Override public", "return": "ContractTxHash", "signature": "ContractTxHash deploy(final Signer signer, final ContractDefinition contractDefinition,\n      final long nonce, final Fee fee)", "full_signature": "@Override public ContractTxHash deploy(final Signer signer, final ContractDefinition contractDefinition,\n      final long nonce, final Fee fee)", "class_method_signature": "ContractTemplate.deploy(final Signer signer, final ContractDefinition contractDefinition,\n      final long nonce, final Fee fee)", "testcase": false, "constructor": false}, {"identifier": "deployTx", "parameters": "(final Signer signer, final ContractDefinition contractDefinition,\n      final long nonce, final Fee fee)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash deployTx(final Signer signer, final ContractDefinition contractDefinition,\n      final long nonce, final Fee fee)", "full_signature": "@Override public TxHash deployTx(final Signer signer, final ContractDefinition contractDefinition,\n      final long nonce, final Fee fee)", "class_method_signature": "ContractTemplate.deployTx(final Signer signer, final ContractDefinition contractDefinition,\n      final long nonce, final Fee fee)", "testcase": false, "constructor": false}, {"identifier": "redeploy", "parameters": "(final Signer signer, final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final long nonce, final Fee fee)", "modifiers": "@Override public", "return": "ContractTxHash", "signature": "ContractTxHash redeploy(final Signer signer, final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final long nonce, final Fee fee)", "full_signature": "@Override public ContractTxHash redeploy(final Signer signer, final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final long nonce, final Fee fee)", "class_method_signature": "ContractTemplate.redeploy(final Signer signer, final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final long nonce, final Fee fee)", "testcase": false, "constructor": false}, {"identifier": "redeployTx", "parameters": "(final Signer signer, final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final long nonce, final Fee fee)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash redeployTx(final Signer signer, final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final long nonce, final Fee fee)", "full_signature": "@Override public TxHash redeployTx(final Signer signer, final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final long nonce, final Fee fee)", "class_method_signature": "ContractTemplate.redeployTx(final Signer signer, final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final long nonce, final Fee fee)", "testcase": false, "constructor": false}, {"identifier": "getContractInterface", "parameters": "(final ContractAddress contractAddress)", "modifiers": "@Override public", "return": "ContractInterface", "signature": "ContractInterface getContractInterface(final ContractAddress contractAddress)", "full_signature": "@Override public ContractInterface getContractInterface(final ContractAddress contractAddress)", "class_method_signature": "ContractTemplate.getContractInterface(final ContractAddress contractAddress)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(final Account executor, final ContractInvocation contractInvocation,\n      final long nonce)", "modifiers": "@Override public", "return": "ContractTxHash", "signature": "ContractTxHash execute(final Account executor, final ContractInvocation contractInvocation,\n      final long nonce)", "full_signature": "@Override public ContractTxHash execute(final Account executor, final ContractInvocation contractInvocation,\n      final long nonce)", "class_method_signature": "ContractTemplate.execute(final Account executor, final ContractInvocation contractInvocation,\n      final long nonce)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(final Account executor, final ContractInvocation contractInvocation,\n      final long nonce, final Fee fee)", "modifiers": "@Override public", "return": "ContractTxHash", "signature": "ContractTxHash execute(final Account executor, final ContractInvocation contractInvocation,\n      final long nonce, final Fee fee)", "full_signature": "@Override public ContractTxHash execute(final Account executor, final ContractInvocation contractInvocation,\n      final long nonce, final Fee fee)", "class_method_signature": "ContractTemplate.execute(final Account executor, final ContractInvocation contractInvocation,\n      final long nonce, final Fee fee)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(final Signer signer, final ContractInvocation contractInvocation,\n      final long nonce, final Fee fee)", "modifiers": "@Override public", "return": "ContractTxHash", "signature": "ContractTxHash execute(final Signer signer, final ContractInvocation contractInvocation,\n      final long nonce, final Fee fee)", "full_signature": "@Override public ContractTxHash execute(final Signer signer, final ContractInvocation contractInvocation,\n      final long nonce, final Fee fee)", "class_method_signature": "ContractTemplate.execute(final Signer signer, final ContractInvocation contractInvocation,\n      final long nonce, final Fee fee)", "testcase": false, "constructor": false}, {"identifier": "executeTx", "parameters": "(final Signer signer, final ContractInvocation contractInvocation,\n      final long nonce, final Fee fee)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash executeTx(final Signer signer, final ContractInvocation contractInvocation,\n      final long nonce, final Fee fee)", "full_signature": "@Override public TxHash executeTx(final Signer signer, final ContractInvocation contractInvocation,\n      final long nonce, final Fee fee)", "class_method_signature": "ContractTemplate.executeTx(final Signer signer, final ContractInvocation contractInvocation,\n      final long nonce, final Fee fee)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(final ContractInvocation contractInvocation)", "modifiers": "@Override public", "return": "ContractResult", "signature": "ContractResult query(final ContractInvocation contractInvocation)", "full_signature": "@Override public ContractResult query(final ContractInvocation contractInvocation)", "class_method_signature": "ContractTemplate.query(final ContractInvocation contractInvocation)", "testcase": false, "constructor": false}, {"identifier": "listEvents", "parameters": "(final EventFilter filter)", "modifiers": "@Override public", "return": "List<Event>", "signature": "List<Event> listEvents(final EventFilter filter)", "full_signature": "@Override public List<Event> listEvents(final EventFilter filter)", "class_method_signature": "ContractTemplate.listEvents(final EventFilter filter)", "testcase": false, "constructor": false}, {"identifier": "subscribeEvent", "parameters": "(final EventFilter filter,\n      final StreamObserver<Event> observer)", "modifiers": "@Override public", "return": "Subscription<Event>", "signature": "Subscription<Event> subscribeEvent(final EventFilter filter,\n      final StreamObserver<Event> observer)", "full_signature": "@Override public Subscription<Event> subscribeEvent(final EventFilter filter,\n      final StreamObserver<Event> observer)", "class_method_signature": "ContractTemplate.subscribeEvent(final EventFilter filter,\n      final StreamObserver<Event> observer)", "testcase": false, "constructor": false}], "file": "core/transport/src/main/java/hera/client/ContractTemplate.java"}, "focal_method": {"identifier": "redeployTx", "parameters": "(final Signer signer, final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final long nonce, final Fee fee)", "modifiers": "@Override public", "return": "TxHash", "body": "@Override\n  public TxHash redeployTx(final Signer signer, final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final long nonce, final Fee fee) {\n    return request(contractMethods.getRedeployTx(),\n        Arrays.asList(signer, existingContract, contractDefinition, nonce, fee));\n  }", "signature": "TxHash redeployTx(final Signer signer, final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final long nonce, final Fee fee)", "full_signature": "@Override public TxHash redeployTx(final Signer signer, final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final long nonce, final Fee fee)", "class_method_signature": "ContractTemplate.redeployTx(final Signer signer, final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final long nonce, final Fee fee)", "testcase": false, "constructor": false, "invocations": ["request", "getRedeployTx", "asList"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}