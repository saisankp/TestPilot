{"test_class": {"identifier": "RateLimitedLoggerTest", "superclass": "", "interfaces": "", "fields": [], "file": "agent/core/src/test/java/org/glowroot/agent/util/RateLimitedLoggerTest.java"}, "test_case": {"identifier": "testMultipleException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMultipleException() {\n        // given\n        Exception exception = new Exception();\n        // when\n        Object[] args =\n                RateLimitedLogger.newArgsWithCountSinceLastWarning(new Object[] {1, exception}, 0);\n        // then\n        assertThat(args).containsExactly(1, 0, exception);\n    }", "signature": "void testMultipleException()", "full_signature": "@Test public void testMultipleException()", "class_method_signature": "RateLimitedLoggerTest.testMultipleException()", "testcase": true, "constructor": false, "invocations": ["newArgsWithCountSinceLastWarning", "containsExactly", "assertThat"]}, "focal_class": {"identifier": "RateLimitedLogger", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger logger;", "modifier": "private final", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "private final RateLimiter warningRateLimiter = RateLimiter.create(1.0 / 60);", "modifier": "private final", "type": "RateLimiter", "declarator": "warningRateLimiter = RateLimiter.create(1.0 / 60)", "var_name": "warningRateLimiter"}, {"original_string": "@GuardedBy(\"warningRateLimiter\")\n    private int countSinceLastWarning;", "modifier": "@GuardedBy(\"warningRateLimiter\")\n    private", "type": "int", "declarator": "countSinceLastWarning", "var_name": "countSinceLastWarning"}], "methods": [{"identifier": "RateLimitedLogger", "parameters": "(Class<?> clazz)", "modifiers": "public", "return": "", "signature": " RateLimitedLogger(Class<?> clazz)", "full_signature": "public  RateLimitedLogger(Class<?> clazz)", "class_method_signature": "RateLimitedLogger.RateLimitedLogger(Class<?> clazz)", "testcase": false, "constructor": true}, {"identifier": "warn", "parameters": "(String format, /*@Nullable*/ Object... args)", "modifiers": "public", "return": "void", "signature": "void warn(String format, /*@Nullable*/ Object... args)", "full_signature": "public void warn(String format, /*@Nullable*/ Object... args)", "class_method_signature": "RateLimitedLogger.warn(String format, /*@Nullable*/ Object... args)", "testcase": false, "constructor": false}, {"identifier": "newArgsWithCountSinceLastWarning", "parameters": "(/*@Nullable*/ Object[] args,\n            int countSinceLastWarning)", "modifiers": "@VisibleForTesting static @Nullable", "return": "Object[]", "signature": "Object[] newArgsWithCountSinceLastWarning(/*@Nullable*/ Object[] args,\n            int countSinceLastWarning)", "full_signature": "@VisibleForTesting static @Nullable Object[] newArgsWithCountSinceLastWarning(/*@Nullable*/ Object[] args,\n            int countSinceLastWarning)", "class_method_signature": "RateLimitedLogger.newArgsWithCountSinceLastWarning(/*@Nullable*/ Object[] args,\n            int countSinceLastWarning)", "testcase": false, "constructor": false}], "file": "agent/core/src/main/java/org/glowroot/agent/util/RateLimitedLogger.java"}, "focal_method": {"identifier": "newArgsWithCountSinceLastWarning", "parameters": "(/*@Nullable*/ Object[] args,\n            int countSinceLastWarning)", "modifiers": "@VisibleForTesting static @Nullable", "return": "Object[]", "body": "@VisibleForTesting\n    static @Nullable Object[] newArgsWithCountSinceLastWarning(/*@Nullable*/ Object[] args,\n            int countSinceLastWarning) {\n        if (args.length == 0) {\n            return new Object[] {countSinceLastWarning};\n        }\n        @Nullable\n        Object[] argsPlus = new Object[args.length + 1];\n        if (args[args.length - 1] instanceof Throwable) {\n            System.arraycopy(args, 0, argsPlus, 0, args.length - 1);\n            argsPlus[args.length - 1] = countSinceLastWarning;\n            argsPlus[args.length] = args[args.length - 1];\n            return argsPlus;\n        } else {\n            System.arraycopy(args, 0, argsPlus, 0, args.length);\n            argsPlus[args.length] = countSinceLastWarning;\n            return argsPlus;\n        }\n    }", "signature": "Object[] newArgsWithCountSinceLastWarning(/*@Nullable*/ Object[] args,\n            int countSinceLastWarning)", "full_signature": "@VisibleForTesting static @Nullable Object[] newArgsWithCountSinceLastWarning(/*@Nullable*/ Object[] args,\n            int countSinceLastWarning)", "class_method_signature": "RateLimitedLogger.newArgsWithCountSinceLastWarning(/*@Nullable*/ Object[] args,\n            int countSinceLastWarning)", "testcase": false, "constructor": false, "invocations": ["arraycopy", "arraycopy"]}, "repository": {"repo_id": 16336212, "url": "https://github.com/glowroot/glowroot", "stars": 736, "created": "1/29/2014 5:25:58 AM +00:00", "updates": "2020-01-24T11:13:42+00:00", "fork": "False", "license": "licensed"}}