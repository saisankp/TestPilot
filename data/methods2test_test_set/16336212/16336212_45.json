{"test_class": {"identifier": "PropertiesFilesTest", "superclass": "", "interfaces": "", "fields": [], "file": "agent/core/src/test/java/org/glowroot/agent/PropertiesFilesTest.java"}, "test_case": {"identifier": "testUpgradeToCollectorAddress", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUpgradeToCollectorAddress() {\n        List<String> lines = ImmutableList.of(\"before=test\", \"collector.host=localhost\",\n                \"collector.port=8181\", \"after=test\");\n        List<String> newLines = PropertiesFiles.upgradeToCollectorAddressIfNeeded(lines);\n        assertThat(newLines).containsExactly(\"before=test\", \"collector.address=localhost:8181\",\n                \"after=test\");\n    }", "signature": "void testUpgradeToCollectorAddress()", "full_signature": "@Test public void testUpgradeToCollectorAddress()", "class_method_signature": "PropertiesFilesTest.testUpgradeToCollectorAddress()", "testcase": true, "constructor": false, "invocations": ["of", "upgradeToCollectorAddressIfNeeded", "containsExactly", "assertThat"]}, "focal_class": {"identifier": "PropertiesFiles", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "PropertiesFiles", "parameters": "()", "modifiers": "private", "return": "", "signature": " PropertiesFiles()", "full_signature": "private  PropertiesFiles()", "class_method_signature": "PropertiesFiles.PropertiesFiles()", "testcase": false, "constructor": true}, {"identifier": "upgradeIfNeededAndLoadInto", "parameters": "(File confDir, Map<String, String> properties)", "modifiers": "static", "return": "void", "signature": "void upgradeIfNeededAndLoadInto(File confDir, Map<String, String> properties)", "full_signature": "static void upgradeIfNeededAndLoadInto(File confDir, Map<String, String> properties)", "class_method_signature": "PropertiesFiles.upgradeIfNeededAndLoadInto(File confDir, Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "upgradeToCollectorAddressIfNeeded", "parameters": "(File propFile)", "modifiers": "private static", "return": "void", "signature": "void upgradeToCollectorAddressIfNeeded(File propFile)", "full_signature": "private static void upgradeToCollectorAddressIfNeeded(File propFile)", "class_method_signature": "PropertiesFiles.upgradeToCollectorAddressIfNeeded(File propFile)", "testcase": false, "constructor": false}, {"identifier": "upgradeToCollectorAddressIfNeeded", "parameters": "(List<String> lines)", "modifiers": "@VisibleForTesting static", "return": "List<String>", "signature": "List<String> upgradeToCollectorAddressIfNeeded(List<String> lines)", "full_signature": "@VisibleForTesting static List<String> upgradeToCollectorAddressIfNeeded(List<String> lines)", "class_method_signature": "PropertiesFiles.upgradeToCollectorAddressIfNeeded(List<String> lines)", "testcase": false, "constructor": false}, {"identifier": "addSchemeToCollectorAddressIfNeeded", "parameters": "(File propFile)", "modifiers": "private static", "return": "void", "signature": "void addSchemeToCollectorAddressIfNeeded(File propFile)", "full_signature": "private static void addSchemeToCollectorAddressIfNeeded(File propFile)", "class_method_signature": "PropertiesFiles.addSchemeToCollectorAddressIfNeeded(File propFile)", "testcase": false, "constructor": false}, {"identifier": "addSchemeToCollectorAddressIfNeeded", "parameters": "(List<String> lines)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> addSchemeToCollectorAddressIfNeeded(List<String> lines)", "full_signature": "private static List<String> addSchemeToCollectorAddressIfNeeded(List<String> lines)", "class_method_signature": "PropertiesFiles.addSchemeToCollectorAddressIfNeeded(List<String> lines)", "testcase": false, "constructor": false}, {"identifier": "prependAgentRollupToAgentIdIfNeeded", "parameters": "(File propFile)", "modifiers": "private static", "return": "void", "signature": "void prependAgentRollupToAgentIdIfNeeded(File propFile)", "full_signature": "private static void prependAgentRollupToAgentIdIfNeeded(File propFile)", "class_method_signature": "PropertiesFiles.prependAgentRollupToAgentIdIfNeeded(File propFile)", "testcase": false, "constructor": false}, {"identifier": "prependAgentRollupToAgentIdIfNeeded", "parameters": "(List<String> lines)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> prependAgentRollupToAgentIdIfNeeded(List<String> lines)", "full_signature": "private static List<String> prependAgentRollupToAgentIdIfNeeded(List<String> lines)", "class_method_signature": "PropertiesFiles.prependAgentRollupToAgentIdIfNeeded(List<String> lines)", "testcase": false, "constructor": false}, {"identifier": "readPropertiesFile", "parameters": "(File propFile)", "modifiers": "private static", "return": "List<String>", "signature": "List<String> readPropertiesFile(File propFile)", "full_signature": "private static List<String> readPropertiesFile(File propFile)", "class_method_signature": "PropertiesFiles.readPropertiesFile(File propFile)", "testcase": false, "constructor": false}, {"identifier": "writePropertiesFile", "parameters": "(File propFile, List<String> newLines)", "modifiers": "private static", "return": "void", "signature": "void writePropertiesFile(File propFile, List<String> newLines)", "full_signature": "private static void writePropertiesFile(File propFile, List<String> newLines)", "class_method_signature": "PropertiesFiles.writePropertiesFile(File propFile, List<String> newLines)", "testcase": false, "constructor": false}], "file": "agent/core/src/main/java/org/glowroot/agent/PropertiesFiles.java"}, "focal_method": {"identifier": "upgradeToCollectorAddressIfNeeded", "parameters": "(File propFile)", "modifiers": "private static", "return": "void", "body": "private static void upgradeToCollectorAddressIfNeeded(File propFile) throws IOException {\n        List<String> lines = readPropertiesFile(propFile);\n        List<String> newLines = upgradeToCollectorAddressIfNeeded(lines);\n        if (!newLines.equals(lines)) {\n            writePropertiesFile(propFile, newLines);\n        }\n    }", "signature": "void upgradeToCollectorAddressIfNeeded(File propFile)", "full_signature": "private static void upgradeToCollectorAddressIfNeeded(File propFile)", "class_method_signature": "PropertiesFiles.upgradeToCollectorAddressIfNeeded(File propFile)", "testcase": false, "constructor": false, "invocations": ["readPropertiesFile", "upgradeToCollectorAddressIfNeeded", "equals", "writePropertiesFile"]}, "repository": {"repo_id": 16336212, "url": "https://github.com/glowroot/glowroot", "stars": 736, "created": "1/29/2014 5:25:58 AM +00:00", "updates": "2020-01-24T11:13:42+00:00", "fork": "False", "license": "licensed"}}