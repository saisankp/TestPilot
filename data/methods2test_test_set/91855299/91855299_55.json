{"test_class": {"identifier": "ShutdownHooksTest", "superclass": "extends UtilityClassTest<ShutdownHooks>", "interfaces": "", "fields": [], "file": "api/src/test/java/edu/wpi/first/shuffleboard/api/util/ShutdownHooksTest.java"}, "test_case": {"identifier": "testRemoveHook", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRemoveHook() {\n    // given\n    boolean[] ran = {false};\n    ShutdownHooks.Hook hook = () -> ran[0] = true;\n\n    // when\n    ShutdownHooks.addHook(hook);\n    ShutdownHooks.removeHook(hook);\n    ShutdownHooks.runAllHooks();\n\n    // then\n    assertFalse(ran[0], \"The hook should not have run\");\n  }", "signature": "void testRemoveHook()", "full_signature": "@Test public void testRemoveHook()", "class_method_signature": "ShutdownHooksTest.testRemoveHook()", "testcase": true, "constructor": false, "invocations": ["addHook", "removeHook", "runAllHooks", "assertFalse"]}, "focal_class": {"identifier": "ShutdownHooks", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Queue<Hook> hooks = new ConcurrentLinkedQueue<>();", "modifier": "private static final", "type": "Queue<Hook>", "declarator": "hooks = new ConcurrentLinkedQueue<>()", "var_name": "hooks"}, {"original_string": "private static volatile boolean runningHooks = false;", "modifier": "private static volatile", "type": "boolean", "declarator": "runningHooks = false", "var_name": "runningHooks"}], "methods": [{"identifier": "ShutdownHooks", "parameters": "()", "modifiers": "private", "return": "", "signature": " ShutdownHooks()", "full_signature": "private  ShutdownHooks()", "class_method_signature": "ShutdownHooks.ShutdownHooks()", "testcase": false, "constructor": true}, {"identifier": "addHook", "parameters": "(Hook hook)", "modifiers": "public static", "return": "void", "signature": "void addHook(Hook hook)", "full_signature": "public static void addHook(Hook hook)", "class_method_signature": "ShutdownHooks.addHook(Hook hook)", "testcase": false, "constructor": false}, {"identifier": "removeHook", "parameters": "(Hook hook)", "modifiers": "public static", "return": "void", "signature": "void removeHook(Hook hook)", "full_signature": "public static void removeHook(Hook hook)", "class_method_signature": "ShutdownHooks.removeHook(Hook hook)", "testcase": false, "constructor": false}, {"identifier": "runAllHooks", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void runAllHooks()", "full_signature": "public static void runAllHooks()", "class_method_signature": "ShutdownHooks.runAllHooks()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "@VisibleForTesting static", "return": "void", "signature": "void reset()", "full_signature": "@VisibleForTesting static void reset()", "class_method_signature": "ShutdownHooks.reset()", "testcase": false, "constructor": false}, {"identifier": "removeAllHooks", "parameters": "()", "modifiers": "@VisibleForTesting static", "return": "void", "signature": "void removeAllHooks()", "full_signature": "@VisibleForTesting static void removeAllHooks()", "class_method_signature": "ShutdownHooks.removeAllHooks()", "testcase": false, "constructor": false}], "file": "api/src/main/java/edu/wpi/first/shuffleboard/api/util/ShutdownHooks.java"}, "focal_method": {"identifier": "removeHook", "parameters": "(Hook hook)", "modifiers": "public static", "return": "void", "body": "public static void removeHook(Hook hook) {\n    if (runningHooks) {\n      return;\n    }\n    hooks.remove(hook);\n  }", "signature": "void removeHook(Hook hook)", "full_signature": "public static void removeHook(Hook hook)", "class_method_signature": "ShutdownHooks.removeHook(Hook hook)", "testcase": false, "constructor": false, "invocations": ["remove"]}, "repository": {"repo_id": 91855299, "url": "https://github.com/wpilibsuite/shuffleboard", "stars": 52, "created": "5/20/2017 12:38:25 AM +00:00", "updates": "2020-01-23T20:11:35+00:00", "fork": "False", "license": "licensed"}}