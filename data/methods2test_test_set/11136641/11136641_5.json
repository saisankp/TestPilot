{"test_class": {"identifier": "NamingExceptionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ByteArrayOutputStream byteArrayOutputStream;", "modifier": "private", "type": "ByteArrayOutputStream", "declarator": "byteArrayOutputStream", "var_name": "byteArrayOutputStream"}], "file": "core/src/test/java/org/springframework/ldap/NamingExceptionTest.java"}, "test_case": {"identifier": "testNamingExceptionWithNonSerializableResolvedObj", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNamingExceptionWithNonSerializableResolvedObj()\n            throws Exception {\n        javax.naming.NameAlreadyBoundException wrappedException = new javax.naming.NameAlreadyBoundException(\n                \"some error\");\n        wrappedException.setResolvedObj(new InitialDirContext());\n        NamingException exception = new NameAlreadyBoundException(\n                wrappedException);\n        writeToStream(exception);\n        NamingException deSerializedException = readFromStream();\n        assertNotNull(\n                \"Original exception resolvedObj after serialization should not be null\",\n                exception.getResolvedObj());\n        assertNull(\"De-serialized exception resolvedObj should be null\",\n                deSerializedException.getResolvedObj());\n    }", "signature": "void testNamingExceptionWithNonSerializableResolvedObj()", "full_signature": "@Test public void testNamingExceptionWithNonSerializableResolvedObj()", "class_method_signature": "NamingExceptionTest.testNamingExceptionWithNonSerializableResolvedObj()", "testcase": true, "constructor": false, "invocations": ["setResolvedObj", "writeToStream", "readFromStream", "assertNotNull", "getResolvedObj", "assertNull", "getResolvedObj"]}, "focal_class": {"identifier": "NamingException", "superclass": "extends NestedRuntimeException", "interfaces": "", "fields": [{"original_string": "private Throwable cause;", "modifier": "private", "type": "Throwable", "declarator": "cause", "var_name": "cause"}], "methods": [{"identifier": "getCause", "parameters": "()", "modifiers": "public", "return": "Throwable", "signature": "Throwable getCause()", "full_signature": "public Throwable getCause()", "class_method_signature": "NamingException.getCause()", "testcase": false, "constructor": false}, {"identifier": "NamingException", "parameters": "(String msg)", "modifiers": "public", "return": "", "signature": " NamingException(String msg)", "full_signature": "public  NamingException(String msg)", "class_method_signature": "NamingException.NamingException(String msg)", "testcase": false, "constructor": true}, {"identifier": "NamingException", "parameters": "(String msg, Throwable cause)", "modifiers": "public", "return": "", "signature": " NamingException(String msg, Throwable cause)", "full_signature": "public  NamingException(String msg, Throwable cause)", "class_method_signature": "NamingException.NamingException(String msg, Throwable cause)", "testcase": false, "constructor": true}, {"identifier": "NamingException", "parameters": "(Throwable cause)", "modifiers": "public", "return": "", "signature": " NamingException(Throwable cause)", "full_signature": "public  NamingException(Throwable cause)", "class_method_signature": "NamingException.NamingException(Throwable cause)", "testcase": false, "constructor": true}, {"identifier": "getExplanation", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getExplanation()", "full_signature": "public String getExplanation()", "class_method_signature": "NamingException.getExplanation()", "testcase": false, "constructor": false}, {"identifier": "getRemainingName", "parameters": "()", "modifiers": "public", "return": "Name", "signature": "Name getRemainingName()", "full_signature": "public Name getRemainingName()", "class_method_signature": "NamingException.getRemainingName()", "testcase": false, "constructor": false}, {"identifier": "getResolvedName", "parameters": "()", "modifiers": "public", "return": "Name", "signature": "Name getResolvedName()", "full_signature": "public Name getResolvedName()", "class_method_signature": "NamingException.getResolvedName()", "testcase": false, "constructor": false}, {"identifier": "getResolvedObj", "parameters": "()", "modifiers": "public", "return": "Object", "signature": "Object getResolvedObj()", "full_signature": "public Object getResolvedObj()", "class_method_signature": "NamingException.getResolvedObj()", "testcase": false, "constructor": false}, {"identifier": "writeObject", "parameters": "(ObjectOutputStream stream)", "modifiers": "private", "return": "void", "signature": "void writeObject(ObjectOutputStream stream)", "full_signature": "private void writeObject(ObjectOutputStream stream)", "class_method_signature": "NamingException.writeObject(ObjectOutputStream stream)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/NamingException.java"}, "focal_method": {"identifier": "getResolvedObj", "parameters": "()", "modifiers": "public", "return": "Object", "body": "public Object getResolvedObj() {\n        if (getCause() instanceof javax.naming.NamingException) {\n            return ((javax.naming.NamingException) getCause()).getResolvedObj();\n        }\n        return null;\n    }", "signature": "Object getResolvedObj()", "full_signature": "public Object getResolvedObj()", "class_method_signature": "NamingException.getResolvedObj()", "testcase": false, "constructor": false, "invocations": ["getCause", "getResolvedObj", "getCause"]}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}