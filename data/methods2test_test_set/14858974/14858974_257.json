{"test_class": {"identifier": "DBLicenseTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DbArtifact sut = new DbArtifact();", "modifier": "private", "type": "DbArtifact", "declarator": "sut = new DbArtifact()", "var_name": "sut"}, {"original_string": "@Rule\n    public ExpectedException exc = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "exc = ExpectedException.none()", "var_name": "exc"}], "file": "server/src/test/java/org/axway/grapes/server/db/datamodel/DBLicenseTest.java"}, "test_case": {"identifier": "testAddNullNamedLicense", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddNullNamedLicense() {\n        DbLicense lic = new DbLicense();\n        lic.setName(null);\n        sut.addLicense(lic);\n        assertEquals(0, sut.getLicenses().size());\n    }", "signature": "void testAddNullNamedLicense()", "full_signature": "@Test public void testAddNullNamedLicense()", "class_method_signature": "DBLicenseTest.testAddNullNamedLicense()", "testcase": true, "constructor": false, "invocations": ["setName", "addLicense", "assertEquals", "size", "getLicenses"]}, "focal_class": {"identifier": "DbLicense", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String DATA_MODEL_VERSION = \"DATAMODEL_VERSION\";", "modifier": "public static final", "type": "String", "declarator": "DATA_MODEL_VERSION = \"DATAMODEL_VERSION\"", "var_name": "DATA_MODEL_VERSION"}, {"original_string": "private String datamodelVersion = DbCollections.DATAMODEL_VERSION;", "modifier": "private", "type": "String", "declarator": "datamodelVersion = DbCollections.DATAMODEL_VERSION", "var_name": "datamodelVersion"}, {"original_string": "@Id\n\tprivate String name = \"\";", "modifier": "@Id\n\tprivate", "type": "String", "declarator": "name = \"\"", "var_name": "name"}, {"original_string": "public static final String LONG_NAME_DB_FIELD = \"longName\";", "modifier": "public static final", "type": "String", "declarator": "LONG_NAME_DB_FIELD = \"longName\"", "var_name": "LONG_NAME_DB_FIELD"}, {"original_string": "private String longName = \"\";", "modifier": "private", "type": "String", "declarator": "longName = \"\"", "var_name": "longName"}, {"original_string": "public static final String URL_DB_FIELD = \"url\";", "modifier": "public static final", "type": "String", "declarator": "URL_DB_FIELD = \"url\"", "var_name": "URL_DB_FIELD"}, {"original_string": "private String url = \"\";", "modifier": "private", "type": "String", "declarator": "url = \"\"", "var_name": "url"}, {"original_string": "public static final String COMMENTS_DB_FIELD = \"comments\";", "modifier": "public static final", "type": "String", "declarator": "COMMENTS_DB_FIELD = \"comments\"", "var_name": "COMMENTS_DB_FIELD"}, {"original_string": "private String comments = \"\";", "modifier": "private", "type": "String", "declarator": "comments = \"\"", "var_name": "comments"}, {"original_string": "public static final String REGEXP_DB_FIELD = \"regexp\";", "modifier": "public static final", "type": "String", "declarator": "REGEXP_DB_FIELD = \"regexp\"", "var_name": "REGEXP_DB_FIELD"}, {"original_string": "private String regexp = \"\";", "modifier": "private", "type": "String", "declarator": "regexp = \"\"", "var_name": "regexp"}, {"original_string": "public static final String APPROVED_DB_FIELD = \"approved\";", "modifier": "public static final", "type": "String", "declarator": "APPROVED_DB_FIELD = \"approved\"", "var_name": "APPROVED_DB_FIELD"}, {"original_string": "private Boolean approved = null;", "modifier": "private", "type": "Boolean", "declarator": "approved = null", "var_name": "approved"}], "methods": [{"identifier": "setDataModelVersion", "parameters": "(final String newVersion)", "modifiers": "public", "return": "void", "signature": "void setDataModelVersion(final String newVersion)", "full_signature": "public void setDataModelVersion(final String newVersion)", "class_method_signature": "DbLicense.setDataModelVersion(final String newVersion)", "testcase": false, "constructor": false}, {"identifier": "getDataModelVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDataModelVersion()", "full_signature": "public String getDataModelVersion()", "class_method_signature": "DbLicense.getDataModelVersion()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getName()", "full_signature": "public final String getName()", "class_method_signature": "DbLicense.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(final String name)", "modifiers": "public final", "return": "void", "signature": "void setName(final String name)", "full_signature": "public final void setName(final String name)", "class_method_signature": "DbLicense.setName(final String name)", "testcase": false, "constructor": false}, {"identifier": "getLongName", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getLongName()", "full_signature": "public final String getLongName()", "class_method_signature": "DbLicense.getLongName()", "testcase": false, "constructor": false}, {"identifier": "setLongName", "parameters": "(final String longName)", "modifiers": "public final", "return": "void", "signature": "void setLongName(final String longName)", "full_signature": "public final void setLongName(final String longName)", "class_method_signature": "DbLicense.setLongName(final String longName)", "testcase": false, "constructor": false}, {"identifier": "getUrl", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getUrl()", "full_signature": "public final String getUrl()", "class_method_signature": "DbLicense.getUrl()", "testcase": false, "constructor": false}, {"identifier": "setUrl", "parameters": "(final String url)", "modifiers": "public final", "return": "void", "signature": "void setUrl(final String url)", "full_signature": "public final void setUrl(final String url)", "class_method_signature": "DbLicense.setUrl(final String url)", "testcase": false, "constructor": false}, {"identifier": "getComments", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getComments()", "full_signature": "public final String getComments()", "class_method_signature": "DbLicense.getComments()", "testcase": false, "constructor": false}, {"identifier": "setComments", "parameters": "(final String comments)", "modifiers": "public final", "return": "void", "signature": "void setComments(final String comments)", "full_signature": "public final void setComments(final String comments)", "class_method_signature": "DbLicense.setComments(final String comments)", "testcase": false, "constructor": false}, {"identifier": "getRegexp", "parameters": "()", "modifiers": "public final", "return": "String", "signature": "String getRegexp()", "full_signature": "public final String getRegexp()", "class_method_signature": "DbLicense.getRegexp()", "testcase": false, "constructor": false}, {"identifier": "setRegexp", "parameters": "(final String regexp)", "modifiers": "public final", "return": "void", "signature": "void setRegexp(final String regexp)", "full_signature": "public final void setRegexp(final String regexp)", "class_method_signature": "DbLicense.setRegexp(final String regexp)", "testcase": false, "constructor": false}, {"identifier": "isApproved", "parameters": "()", "modifiers": "public final", "return": "Boolean", "signature": "Boolean isApproved()", "full_signature": "public final Boolean isApproved()", "class_method_signature": "DbLicense.isApproved()", "testcase": false, "constructor": false}, {"identifier": "setApproved", "parameters": "(final Boolean approved)", "modifiers": "public final", "return": "void", "signature": "void setApproved(final Boolean approved)", "full_signature": "public final void setApproved(final Boolean approved)", "class_method_signature": "DbLicense.setApproved(final Boolean approved)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "DbLicense.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DbLicense.hashCode()", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/axway/grapes/server/db/datamodel/DbLicense.java"}, "focal_method": {"identifier": "setName", "parameters": "(final String name)", "modifiers": "public final", "return": "void", "body": "public final void setName(final String name) {\n\t\tthis.name = name;\n\t}", "signature": "void setName(final String name)", "full_signature": "public final void setName(final String name)", "class_method_signature": "DbLicense.setName(final String name)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}