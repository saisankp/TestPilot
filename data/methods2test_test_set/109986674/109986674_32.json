{"test_class": {"identifier": "JsonPojoConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JsonPojoConverter pojoConverter;", "modifier": "private", "type": "JsonPojoConverter", "declarator": "pojoConverter", "var_name": "pojoConverter"}], "file": "plugin-code/src/test/java/com/trivago/cluecumber/json/JsonPojoConverterTest.java"}, "test_case": {"identifier": "convertJsonToReportPojosTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void convertJsonToReportPojosTest() throws CluecumberPluginException {\n        String json = \"[\\n\" +\n                \"  {\\n\" +\n                \"    \\\"line\\\": 1,\\n\" +\n                \"    \\\"elements\\\": [\\n\" +\n                \"      {\\n\" +\n                \"        \\\"before\\\": [\\n\" +\n                \"          {\\n\" +\n                \"            \\\"result\\\": {\\n\" +\n                \"              \\\"duration\\\": 5554929,\\n\" +\n                \"              \\\"status\\\": \\\"passed\\\"\\n\" +\n                \"            },\\n\" +\n                \"            \\\"match\\\": {\\n\" +\n                \"              \\\"location\\\": \\\"BeforeAfterScenario.before(Scenario)\\\"\\n\" +\n                \"            }\\n\" +\n                \"          }\\n\" +\n                \"        ],\\n\" +\n                \"        \\\"line\\\": 5,\\n\" +\n                \"        \\\"name\\\": \\\"Test feature\\\",\\n\" +\n                \"        \\\"description\\\": \\\"\\\",\\n\" +\n                \"        \\\"id\\\": \\\"test;id\\\",\\n\" +\n                \"        \\\"after\\\": [\\n\" +\n                \"          {\\n\" +\n                \"            \\\"result\\\": {\\n\" +\n                \"              \\\"duration\\\": 153270,\\n\" +\n                \"              \\\"status\\\": \\\"passed\\\"\\n\" +\n                \"            },\\n\" +\n                \"            \\\"match\\\": {\\n\" +\n                \"              \\\"location\\\": \\\"BeforeAfterScenario.after(Scenario)\\\"\\n\" +\n                \"            }\\n\" +\n                \"          }\\n\" +\n                \"        ],\\n\" +\n                \"        \\\"type\\\": \\\"scenario\\\",\\n\" +\n                \"        \\\"keyword\\\": \\\"Scenario\\\",\\n\" +\n                \"        \\\"steps\\\": [\\n\" +\n                \"          {\\n\" +\n                \"            \\\"result\\\": {\\n\" +\n                \"              \\\"duration\\\": 12453061125,\\n\" +\n                \"              \\\"status\\\": \\\"passed\\\"\\n\" +\n                \"            },\\n\" +\n                \"            \\\"line\\\": 7,\\n\" +\n                \"            \\\"name\\\": \\\"the start page is opened\\\",\\n\" +\n                \"            \\\"match\\\": {\\n\" +\n                \"              \\\"location\\\": \\\"PageSteps.theStartPageIsOpened()\\\"\\n\" +\n                \"            },\\n\" +\n                \"            \\\"keyword\\\": \\\"Given \\\"\\n\" +\n                \"          },\\n\" +\n                \"          {\\n\" +\n                \"            \\\"result\\\": {\\n\" +\n                \"              \\\"duration\\\": 292465492,\\n\" +\n                \"              \\\"status\\\": \\\"passed\\\"\\n\" +\n                \"            },\\n\" +\n                \"            \\\"line\\\": 8,\\n\" +\n                \"            \\\"name\\\": \\\"I see something\\\",\\n\" +\n                \"            \\\"match\\\": {\\n\" +\n                \"              \\\"location\\\": \\\"SomeSteps.iSeeSomething()\\\"\\n\" +\n                \"            },\\n\" +\n                \"            \\\"keyword\\\": \\\"Then \\\"\\n\" +\n                \"          }\\n\" +\n                \"        ],\\n\" +\n                \"        \\\"tags\\\": [\\n\" +\n                \"          {\\n\" +\n                \"            \\\"line\\\": 3,\\n\" +\n                \"            \\\"name\\\": \\\"@sometag\\\"\\n\" +\n                \"          },\\n\" +\n                \"          {\\n\" +\n                \"            \\\"line\\\": 4,\\n\" +\n                \"            \\\"name\\\": \\\"@someothertag\\\"\\n\" +\n                \"          }\\n\" +\n                \"        ]\\n\" +\n                \"      }\\n\" +\n                \"    ],\\n\" +\n                \"    \\\"name\\\": \\\"Test\\\",\\n\" +\n                \"    \\\"description\\\": \\\"\\\",\\n\" +\n                \"    \\\"id\\\": \\\"test\\\",\\n\" +\n                \"    \\\"keyword\\\": \\\"Feature\\\",\\n\" +\n                \"    \\\"uri\\\": \\\"parallel/features/Test.feature\\\"\\n\" +\n                \"  }\\n\" +\n                \"]\";\n        Report[] reports = pojoConverter.convertJsonToReportPojos(json);\n        assertThat(reports.length, is(1));\n        Report report = reports[0];\n        assertThat(report.getName(), is(\"Test\"));\n        assertThat(report.getId(), is(\"test\"));\n        assertThat(report.getFeatureIndex(), is(-1));\n        assertThat(report.getTotalDuration(), is(12751234816L));\n        assertThat(report.getDescription(), is(\"\"));\n        assertThat(report.getLine(), is(1));\n        assertThat(report.getUri(), is(\"parallel/features/Test.feature\"));\n        assertThat(report.getElements().size(), is(1));\n        Element element = report.getElements().get(0);\n        assertThat(element.getStatus(), is(Status.PASSED));\n        assertThat(element.getSteps().size(), is(2));\n        assertThat(element.getBefore().size(), is(1));\n        assertThat(element.getAfter().size(), is(1));\n        assertThat(element.getScenarioIndex(), is(0));\n        assertThat(element.getTotalDuration(), is(12751234816L));\n        assertThat(element.getTotalNumberOfPassedSteps(), is(2));\n        assertThat(element.getTotalNumberOfSkippedSteps(), is(0));\n        assertThat(element.getTotalNumberOfFailedSteps(), is(0));\n        assertThat(element.getAllResultMatches().size(), is(4));\n    }", "signature": "void convertJsonToReportPojosTest()", "full_signature": "@Test public void convertJsonToReportPojosTest()", "class_method_signature": "JsonPojoConverterTest.convertJsonToReportPojosTest()", "testcase": true, "constructor": false, "invocations": ["convertJsonToReportPojos", "assertThat", "is", "assertThat", "getName", "is", "assertThat", "getId", "is", "assertThat", "getFeatureIndex", "is", "assertThat", "getTotalDuration", "is", "assertThat", "getDescription", "is", "assertThat", "getLine", "is", "assertThat", "getUri", "is", "assertThat", "size", "getElements", "is", "get", "getElements", "assertThat", "getStatus", "is", "assertThat", "size", "getSteps", "is", "assertThat", "size", "getBefore", "is", "assertThat", "size", "getAfter", "is", "assertThat", "getScenarioIndex", "is", "assertThat", "getTotalDuration", "is", "assertThat", "getTotalNumberOfPassedSteps", "is", "assertThat", "getTotalNumberOfSkippedSteps", "is", "assertThat", "getTotalNumberOfFailedSteps", "is", "assertThat", "size", "getAllResultMatches", "is"]}, "focal_class": {"identifier": "JsonPojoConverter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Gson gsonParserWithProcessors;", "modifier": "private final", "type": "Gson", "declarator": "gsonParserWithProcessors", "var_name": "gsonParserWithProcessors"}], "methods": [{"identifier": "JsonPojoConverter", "parameters": "(\n            final ReportJsonPostProcessor reportJsonPostProcessor,\n            final ElementJsonPostProcessor elementJsonPostProcessor\n    )", "modifiers": "@Inject public", "return": "", "signature": " JsonPojoConverter(\n            final ReportJsonPostProcessor reportJsonPostProcessor,\n            final ElementJsonPostProcessor elementJsonPostProcessor\n    )", "full_signature": "@Inject public  JsonPojoConverter(\n            final ReportJsonPostProcessor reportJsonPostProcessor,\n            final ElementJsonPostProcessor elementJsonPostProcessor\n    )", "class_method_signature": "JsonPojoConverter.JsonPojoConverter(\n            final ReportJsonPostProcessor reportJsonPostProcessor,\n            final ElementJsonPostProcessor elementJsonPostProcessor\n    )", "testcase": false, "constructor": true}, {"identifier": "readJsonStream", "parameters": "(InputStream in)", "modifiers": "public", "return": "List<Report>", "signature": "List<Report> readJsonStream(InputStream in)", "full_signature": "public List<Report> readJsonStream(InputStream in)", "class_method_signature": "JsonPojoConverter.readJsonStream(InputStream in)", "testcase": false, "constructor": false}, {"identifier": "convertJsonToReportPojos", "parameters": "(final String json)", "modifiers": "public", "return": "Report[]", "signature": "Report[] convertJsonToReportPojos(final String json)", "full_signature": "public Report[] convertJsonToReportPojos(final String json)", "class_method_signature": "JsonPojoConverter.convertJsonToReportPojos(final String json)", "testcase": false, "constructor": false}], "file": "plugin-code/src/main/java/com/trivago/cluecumber/json/JsonPojoConverter.java"}, "focal_method": {"identifier": "convertJsonToReportPojos", "parameters": "(final String json)", "modifiers": "public", "return": "Report[]", "body": "public Report[] convertJsonToReportPojos(final String json) throws CluecumberPluginException {\n        Report[] reports;\n        try {\n            reports = gsonParserWithProcessors.fromJson(json, Report[].class);\n        } catch (JsonParseException e) {\n            throw new CluecumberPluginException(e.getMessage());\n        }\n        return reports;\n    }", "signature": "Report[] convertJsonToReportPojos(final String json)", "full_signature": "public Report[] convertJsonToReportPojos(final String json)", "class_method_signature": "JsonPojoConverter.convertJsonToReportPojos(final String json)", "testcase": false, "constructor": false, "invocations": ["fromJson", "getMessage"]}, "repository": {"repo_id": 109986674, "url": "https://github.com/trivago/cluecumber-report-plugin", "stars": 124, "created": "11/8/2017 2:30:19 PM +00:00", "updates": "2020-01-27T12:00:16+00:00", "fork": "False", "license": "licensed"}}