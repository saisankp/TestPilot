{"test_class": {"identifier": "DebugPDBMonomerTest", "superclass": "extends AbstractPDBMonomerTest", "interfaces": "", "fields": [], "file": "base/datadebug/src/test/java/org/openscience/cdk/debug/DebugPDBMonomerTest.java"}, "test_case": {"identifier": "testDebugPDBMonomer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDebugPDBMonomer() {\n        IPDBMonomer monomer = new DebugPDBMonomer();\n        Assert.assertNotNull(monomer);\n        Assert.assertEquals(monomer.getICode(), null);\n    }", "signature": "void testDebugPDBMonomer()", "full_signature": "@Test public void testDebugPDBMonomer()", "class_method_signature": "DebugPDBMonomerTest.testDebugPDBMonomer()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "assertEquals", "getICode"]}, "focal_class": {"identifier": "DebugPDBMonomer", "superclass": "extends PDBMonomer", "interfaces": "implements IPDBMonomer", "fields": [{"original_string": "private static final long serialVersionUID = -5156111560946745699L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -5156111560946745699L", "var_name": "serialVersionUID"}, {"original_string": "ILoggingTool              logger           = LoggingToolFactory.createLoggingTool(DebugAtomContainer.class);", "modifier": "", "type": "ILoggingTool", "declarator": "logger           = LoggingToolFactory.createLoggingTool(DebugAtomContainer.class)", "var_name": "logger"}], "methods": [{"identifier": "setICode", "parameters": "(String newICode)", "modifiers": "@Override public", "return": "void", "signature": "void setICode(String newICode)", "full_signature": "@Override public void setICode(String newICode)", "class_method_signature": "DebugPDBMonomer.setICode(String newICode)", "testcase": false, "constructor": false}, {"identifier": "getICode", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getICode()", "full_signature": "@Override public String getICode()", "class_method_signature": "DebugPDBMonomer.getICode()", "testcase": false, "constructor": false}, {"identifier": "setChainID", "parameters": "(String newChainID)", "modifiers": "@Override public", "return": "void", "signature": "void setChainID(String newChainID)", "full_signature": "@Override public void setChainID(String newChainID)", "class_method_signature": "DebugPDBMonomer.setChainID(String newChainID)", "testcase": false, "constructor": false}, {"identifier": "getChainID", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getChainID()", "full_signature": "@Override public String getChainID()", "class_method_signature": "DebugPDBMonomer.getChainID()", "testcase": false, "constructor": false}], "file": "base/datadebug/src/main/java/org/openscience/cdk/debug/DebugPDBMonomer.java"}, "focal_method": {"identifier": "getICode", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getICode() {\n        logger.debug(\"Getting I Code: \", super.getICode());\n        return super.getICode();\n    }", "signature": "String getICode()", "full_signature": "@Override public String getICode()", "class_method_signature": "DebugPDBMonomer.getICode()", "testcase": false, "constructor": false, "invocations": ["debug", "getICode", "getICode"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}