{"test_class": {"identifier": "ZonesCommandTest", "superclass": "extends CommandTestSupport", "interfaces": "", "fields": [{"original_string": "private final Set<Zone> zones = Sets.newHashSet(Zone.builder()\n        .id(\"zone-1\")\n        .name(\"zone-one\")\n        .securityGroupsEnabled(false)\n        .build());", "modifier": "private final", "type": "Set<Zone>", "declarator": "zones = Sets.newHashSet(Zone.builder()\n        .id(\"zone-1\")\n        .name(\"zone-one\")\n        .securityGroupsEnabled(false)\n        .build())", "var_name": "zones"}], "file": "providers/cloudstack/src/test/java/com/axemblr/provisionr/cloudstack/commands/ZonesCommandTest.java"}, "test_case": {"identifier": "testZonesCommandPrintsZones", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testZonesCommandPrintsZones() throws Exception {\n        final ZonesCommand zonesCommand = new ZonesCommand(defaultProviderConfig);\n        final ZoneClient zoneClient = mock(ZoneClient.class);\n        when(client.getZoneClient()).thenReturn(zoneClient);\n        when(zoneClient.listZones()).thenReturn(zones);\n\n        zonesCommand.doExecuteWithContext(client, out);\n        out.close();\n\n        final String result = byteArrayOutputStream.toString();\n\n        assertThat(result)\n            .contains(\"zone-1\")\n            .contains(\"zone-one\")\n            .contains(\"false\");\n    }", "signature": "void testZonesCommandPrintsZones()", "full_signature": "@Test public void testZonesCommandPrintsZones()", "class_method_signature": "ZonesCommandTest.testZonesCommandPrintsZones()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getZoneClient", "thenReturn", "when", "listZones", "doExecuteWithContext", "close", "toString", "contains", "contains", "contains", "assertThat"]}, "focal_class": {"identifier": "ZonesCommand", "superclass": "extends CommandSupport", "interfaces": "", "fields": [{"original_string": "public static final String NAME = \"zones\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"zones\"", "var_name": "NAME"}], "methods": [{"identifier": "ZonesCommand", "parameters": "(DefaultProviderConfig defaultProviderConfig)", "modifiers": "public", "return": "", "signature": " ZonesCommand(DefaultProviderConfig defaultProviderConfig)", "full_signature": "public  ZonesCommand(DefaultProviderConfig defaultProviderConfig)", "class_method_signature": "ZonesCommand.ZonesCommand(DefaultProviderConfig defaultProviderConfig)", "testcase": false, "constructor": true}, {"identifier": "doExecuteWithContext", "parameters": "(CloudStackClient client, PrintStream out)", "modifiers": "@Override public", "return": "Object", "signature": "Object doExecuteWithContext(CloudStackClient client, PrintStream out)", "full_signature": "@Override public Object doExecuteWithContext(CloudStackClient client, PrintStream out)", "class_method_signature": "ZonesCommand.doExecuteWithContext(CloudStackClient client, PrintStream out)", "testcase": false, "constructor": false}], "file": "providers/cloudstack/src/main/java/com/axemblr/provisionr/cloudstack/commands/ZonesCommand.java"}, "focal_method": {"identifier": "doExecuteWithContext", "parameters": "(CloudStackClient client, PrintStream out)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object doExecuteWithContext(CloudStackClient client, PrintStream out) throws Exception {\n        out.printf(\"CloudStack zones for provider %s\\n\", getProvider().getId());\n        for (Zone zone : client.getZoneClient().listZones()) {\n            out.printf(\"---\\n%s\\n\", zone.toString());\n        }\n        out.println();\n        return null;\n    }", "signature": "Object doExecuteWithContext(CloudStackClient client, PrintStream out)", "full_signature": "@Override public Object doExecuteWithContext(CloudStackClient client, PrintStream out)", "class_method_signature": "ZonesCommand.doExecuteWithContext(CloudStackClient client, PrintStream out)", "testcase": false, "constructor": false, "invocations": ["printf", "getId", "getProvider", "listZones", "getZoneClient", "printf", "toString", "println"]}, "repository": {"repo_id": 6035195, "url": "https://github.com/axemblr/axemblr-provisionr", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 30, "size": 3329, "license": "licensed"}}