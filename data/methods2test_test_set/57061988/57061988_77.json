{"test_class": {"identifier": "EncryptedValueDataServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@MockBean\n  private EncryptedValueRepository encryptedValueRepository;", "modifier": "@MockBean\n  private", "type": "EncryptedValueRepository", "declarator": "encryptedValueRepository", "var_name": "encryptedValueRepository"}, {"original_string": "@MockBean\n  private Encryptor encryptor;", "modifier": "@MockBean\n  private", "type": "Encryptor", "declarator": "encryptor", "var_name": "encryptor"}, {"original_string": "private EncryptedValueDataService subject;", "modifier": "private", "type": "EncryptedValueDataService", "declarator": "subject", "var_name": "subject"}], "file": "components/encryption/src/test/java/org/cloudfoundry/credhub/data/EncryptedValueDataServiceTest.java"}, "test_case": {"identifier": "findByCanaryUuids", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void findByCanaryUuids() throws Exception {\n    final List<UUID> canaryUuids = Collections.singletonList(UUID.randomUUID());\n    final Slice<EncryptedValue> encryptedValues = new SliceImpl(Collections.singletonList(new EncryptedValue()));\n    when(encryptedValueRepository.findByEncryptionKeyUuidIn(eq(canaryUuids), any())).thenReturn(encryptedValues);\n\n    assertThat(subject.findByCanaryUuids(canaryUuids), equalTo(encryptedValues));\n  }", "signature": "void findByCanaryUuids()", "full_signature": "@Test public void findByCanaryUuids()", "class_method_signature": "EncryptedValueDataServiceTest.findByCanaryUuids()", "testcase": true, "constructor": false, "invocations": ["singletonList", "randomUUID", "singletonList", "thenReturn", "when", "findByEncryptionKeyUuidIn", "eq", "any", "assertThat", "findByCanaryUuids", "equalTo"]}, "focal_class": {"identifier": "EncryptedValueDataService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final EncryptedValueRepository encryptedValueRepository;", "modifier": "private final", "type": "EncryptedValueRepository", "declarator": "encryptedValueRepository", "var_name": "encryptedValueRepository"}, {"original_string": "private final Encryptor encryptor;", "modifier": "private final", "type": "Encryptor", "declarator": "encryptor", "var_name": "encryptor"}], "methods": [{"identifier": "EncryptedValueDataService", "parameters": "(\n    final EncryptedValueRepository encryptedValueRepository,\n    final Encryptor encryptor)", "modifiers": "@Autowired protected", "return": "", "signature": " EncryptedValueDataService(\n    final EncryptedValueRepository encryptedValueRepository,\n    final Encryptor encryptor)", "full_signature": "@Autowired protected  EncryptedValueDataService(\n    final EncryptedValueRepository encryptedValueRepository,\n    final Encryptor encryptor)", "class_method_signature": "EncryptedValueDataService.EncryptedValueDataService(\n    final EncryptedValueRepository encryptedValueRepository,\n    final Encryptor encryptor)", "testcase": false, "constructor": true}, {"identifier": "countAllByCanaryUuid", "parameters": "(final UUID uuid)", "modifiers": "public", "return": "Long", "signature": "Long countAllByCanaryUuid(final UUID uuid)", "full_signature": "public Long countAllByCanaryUuid(final UUID uuid)", "class_method_signature": "EncryptedValueDataService.countAllByCanaryUuid(final UUID uuid)", "testcase": false, "constructor": false}, {"identifier": "findByCanaryUuids", "parameters": "(final List<UUID> canaryUuids)", "modifiers": "public", "return": "Slice<EncryptedValue>", "signature": "Slice<EncryptedValue> findByCanaryUuids(final List<UUID> canaryUuids)", "full_signature": "public Slice<EncryptedValue> findByCanaryUuids(final List<UUID> canaryUuids)", "class_method_signature": "EncryptedValueDataService.findByCanaryUuids(final List<UUID> canaryUuids)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(final EncryptedValue encryptedValue)", "modifiers": "public", "return": "void", "signature": "void rotate(final EncryptedValue encryptedValue)", "full_signature": "public void rotate(final EncryptedValue encryptedValue)", "class_method_signature": "EncryptedValueDataService.rotate(final EncryptedValue encryptedValue)", "testcase": false, "constructor": false}], "file": "components/encryption/src/main/java/org/cloudfoundry/credhub/data/EncryptedValueDataService.java"}, "focal_method": {"identifier": "findByCanaryUuids", "parameters": "(final List<UUID> canaryUuids)", "modifiers": "public", "return": "Slice<EncryptedValue>", "body": "public Slice<EncryptedValue> findByCanaryUuids(final List<UUID> canaryUuids) {\n    return encryptedValueRepository\n      .findByEncryptionKeyUuidIn(canaryUuids,\n        PageRequest.of(0, EncryptedValueRepository.BATCH_SIZE)\n      );\n  }", "signature": "Slice<EncryptedValue> findByCanaryUuids(final List<UUID> canaryUuids)", "full_signature": "public Slice<EncryptedValue> findByCanaryUuids(final List<UUID> canaryUuids)", "class_method_signature": "EncryptedValueDataService.findByCanaryUuids(final List<UUID> canaryUuids)", "testcase": false, "constructor": false, "invocations": ["findByEncryptionKeyUuidIn", "of"]}, "repository": {"repo_id": 57061988, "url": "https://github.com/cloudfoundry-incubator/credhub", "stars": 167, "created": "4/25/2016 5:30:51 PM +00:00", "updates": "2020-01-27T21:31:19+00:00", "fork": "False", "license": "licensed"}}