{"test_class": {"identifier": "HerdSearchQueryHelperTest", "superclass": "extends AbstractDaoTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private HerdSearchQueryHelper herdSearchQueryHelper;", "modifier": "@Autowired\n    private", "type": "HerdSearchQueryHelper", "declarator": "herdSearchQueryHelper", "var_name": "herdSearchQueryHelper"}], "file": "herd-code/herd-dao/src/test/java/org/finra/herd/dao/helper/HerdSearchQueryHelperTest.java"}, "test_case": {"identifier": "extractNegationTerms", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void extractNegationTerms() throws Exception\n    {\n        IndexSearchRequest indexSearchRequest = new IndexSearchRequest();\n\n        indexSearchRequest.setSearchTerm(\"foo -foo bar -bar foobar\");\n        Assert.assertEquals(Arrays.asList(\"foo\", \"bar\"), herdSearchQueryHelper.extractNegationTerms(indexSearchRequest));\n\n        indexSearchRequest.setSearchTerm(\"foo -foo bar -bar foobar\");\n        Assert.assertEquals(Arrays.asList(\"foo\", \"bar\"), herdSearchQueryHelper.extractNegationTerms(indexSearchRequest));\n    }", "signature": "void extractNegationTerms()", "full_signature": "@Test public void extractNegationTerms()", "class_method_signature": "HerdSearchQueryHelperTest.extractNegationTerms()", "testcase": true, "constructor": false, "invocations": ["setSearchTerm", "assertEquals", "asList", "extractNegationTerms", "setSearchTerm", "assertEquals", "asList", "extractNegationTerms"]}, "focal_class": {"identifier": "HerdSearchQueryHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getNegationTermMatcher", "parameters": "(final IndexSearchRequest indexSearchRequest)", "modifiers": "private", "return": "Matcher", "signature": "Matcher getNegationTermMatcher(final IndexSearchRequest indexSearchRequest)", "full_signature": "private Matcher getNegationTermMatcher(final IndexSearchRequest indexSearchRequest)", "class_method_signature": "HerdSearchQueryHelper.getNegationTermMatcher(final IndexSearchRequest indexSearchRequest)", "testcase": false, "constructor": false}, {"identifier": "determineNegationTermsPresent", "parameters": "(final IndexSearchRequest indexSearchRequest)", "modifiers": "public", "return": "boolean", "signature": "boolean determineNegationTermsPresent(final IndexSearchRequest indexSearchRequest)", "full_signature": "public boolean determineNegationTermsPresent(final IndexSearchRequest indexSearchRequest)", "class_method_signature": "HerdSearchQueryHelper.determineNegationTermsPresent(final IndexSearchRequest indexSearchRequest)", "testcase": false, "constructor": false}, {"identifier": "extractNegationTerms", "parameters": "(final IndexSearchRequest indexSearchRequest)", "modifiers": "public", "return": "List<String>", "signature": "List<String> extractNegationTerms(final IndexSearchRequest indexSearchRequest)", "full_signature": "public List<String> extractNegationTerms(final IndexSearchRequest indexSearchRequest)", "class_method_signature": "HerdSearchQueryHelper.extractNegationTerms(final IndexSearchRequest indexSearchRequest)", "testcase": false, "constructor": false}, {"identifier": "extractSearchPhrase", "parameters": "(final IndexSearchRequest indexSearchRequest)", "modifiers": "public", "return": "String", "signature": "String extractSearchPhrase(final IndexSearchRequest indexSearchRequest)", "full_signature": "public String extractSearchPhrase(final IndexSearchRequest indexSearchRequest)", "class_method_signature": "HerdSearchQueryHelper.extractSearchPhrase(final IndexSearchRequest indexSearchRequest)", "testcase": false, "constructor": false}], "file": "herd-code/herd-dao/src/main/java/org/finra/herd/dao/helper/HerdSearchQueryHelper.java"}, "focal_method": {"identifier": "extractNegationTerms", "parameters": "(final IndexSearchRequest indexSearchRequest)", "modifiers": "public", "return": "List<String>", "body": "public List<String> extractNegationTerms(final IndexSearchRequest indexSearchRequest)\n    {\n        final Matcher regexMatcher = getNegationTermMatcher(indexSearchRequest);\n\n        final List<String> negationTerms = new ArrayList<>();\n\n        while (regexMatcher.find())\n        {\n            // extract all matches and return only the words\n            negationTerms.add(regexMatcher.group().replaceAll(\"-\", \"\").trim());\n        }\n\n        return negationTerms;\n    }", "signature": "List<String> extractNegationTerms(final IndexSearchRequest indexSearchRequest)", "full_signature": "public List<String> extractNegationTerms(final IndexSearchRequest indexSearchRequest)", "class_method_signature": "HerdSearchQueryHelper.extractNegationTerms(final IndexSearchRequest indexSearchRequest)", "testcase": false, "constructor": false, "invocations": ["getNegationTermMatcher", "find", "add", "trim", "replaceAll", "group"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}