{"test_class": {"identifier": "StringToCharArrayConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private StringToCharArrayConverter converter;", "modifier": "private", "type": "StringToCharArrayConverter", "declarator": "converter", "var_name": "converter"}], "file": "dubbo-common/src/test/java/org/apache/dubbo/common/convert/StringToCharArrayConverterTest.java"}, "test_case": {"identifier": "testConvert", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConvert() {\n        assertArrayEquals(new char[]{'1', '2', '3'}, converter.convert(\"123\"));\n        assertNull(converter.convert(null));\n    }", "signature": "void testConvert()", "full_signature": "@Test public void testConvert()", "class_method_signature": "StringToCharArrayConverterTest.testConvert()", "testcase": true, "constructor": false, "invocations": ["assertArrayEquals", "convert", "assertNull", "convert"]}, "focal_class": {"identifier": "StringToCharArrayConverter", "superclass": "", "interfaces": "implements StringConverter<char[]>", "fields": [], "methods": [{"identifier": "convert", "parameters": "(String source)", "modifiers": "@Override public", "return": "char[]", "signature": "char[] convert(String source)", "full_signature": "@Override public char[] convert(String source)", "class_method_signature": "StringToCharArrayConverter.convert(String source)", "testcase": false, "constructor": false}, {"identifier": "getPriority", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getPriority()", "full_signature": "@Override public int getPriority()", "class_method_signature": "StringToCharArrayConverter.getPriority()", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/org/apache/dubbo/common/convert/StringToCharArrayConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(String source)", "modifiers": "@Override public", "return": "char[]", "body": "@Override\n    public char[] convert(String source) {\n        return isNotEmpty(source) ? source.toCharArray() : null;\n    }", "signature": "char[] convert(String source)", "full_signature": "@Override public char[] convert(String source)", "class_method_signature": "StringToCharArrayConverter.convert(String source)", "testcase": false, "constructor": false, "invocations": ["isNotEmpty", "toCharArray"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}