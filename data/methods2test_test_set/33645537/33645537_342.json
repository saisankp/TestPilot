{"test_class": {"identifier": "RotateMatrixTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RotateMatrix rotateMatrix;", "modifier": "private", "type": "RotateMatrix", "declarator": "rotateMatrix", "var_name": "rotateMatrix"}], "file": "algs/src/test/java/com/github/pedrovgs/problem54/RotateMatrixTest.java"}, "test_case": {"identifier": "shouldNotAcceptNullMatrix", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class) public void shouldNotAcceptNullMatrix() {\n    rotateMatrix.rotate(null);\n  }", "signature": "void shouldNotAcceptNullMatrix()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void shouldNotAcceptNullMatrix()", "class_method_signature": "RotateMatrixTest.shouldNotAcceptNullMatrix()", "testcase": true, "constructor": false, "invocations": ["rotate"]}, "focal_class": {"identifier": "RotateMatrix", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "rotate", "parameters": "(int[][] matrix)", "modifiers": "public", "return": "void", "signature": "void rotate(int[][] matrix)", "full_signature": "public void rotate(int[][] matrix)", "class_method_signature": "RotateMatrix.rotate(int[][] matrix)", "testcase": false, "constructor": false}, {"identifier": "moveTopToRight", "parameters": "(int[][] matrix, int last, int i, int top)", "modifiers": "private", "return": "void", "signature": "void moveTopToRight(int[][] matrix, int last, int i, int top)", "full_signature": "private void moveTopToRight(int[][] matrix, int last, int i, int top)", "class_method_signature": "RotateMatrix.moveTopToRight(int[][] matrix, int last, int i, int top)", "testcase": false, "constructor": false}, {"identifier": "moveRithToBottom", "parameters": "(int[][] matrix, int last, int i, int offset)", "modifiers": "private", "return": "void", "signature": "void moveRithToBottom(int[][] matrix, int last, int i, int offset)", "full_signature": "private void moveRithToBottom(int[][] matrix, int last, int i, int offset)", "class_method_signature": "RotateMatrix.moveRithToBottom(int[][] matrix, int last, int i, int offset)", "testcase": false, "constructor": false}, {"identifier": "moveBottomToLeft", "parameters": "(int[][] matrix, int first, int last, int offset)", "modifiers": "private", "return": "void", "signature": "void moveBottomToLeft(int[][] matrix, int first, int last, int offset)", "full_signature": "private void moveBottomToLeft(int[][] matrix, int first, int last, int offset)", "class_method_signature": "RotateMatrix.moveBottomToLeft(int[][] matrix, int first, int last, int offset)", "testcase": false, "constructor": false}, {"identifier": "moveLeftToTop", "parameters": "(int[][] matrix, int first, int last, int i, int offset)", "modifiers": "private", "return": "void", "signature": "void moveLeftToTop(int[][] matrix, int first, int last, int i, int offset)", "full_signature": "private void moveLeftToTop(int[][] matrix, int first, int last, int i, int offset)", "class_method_signature": "RotateMatrix.moveLeftToTop(int[][] matrix, int first, int last, int i, int offset)", "testcase": false, "constructor": false}, {"identifier": "validateInput", "parameters": "(int[][] matrix)", "modifiers": "private", "return": "void", "signature": "void validateInput(int[][] matrix)", "full_signature": "private void validateInput(int[][] matrix)", "class_method_signature": "RotateMatrix.validateInput(int[][] matrix)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem54/RotateMatrix.java"}, "focal_method": {"identifier": "rotate", "parameters": "(int[][] matrix)", "modifiers": "public", "return": "void", "body": "public void rotate(int[][] matrix) {\n    validateInput(matrix);\n\n    int length = matrix.length;\n    for (int i = 0; i < length / 2; ++i) {\n      int first = i;\n      int last = length - 1 - i;\n      for (int j = first; j < last; ++j) {\n        int offset = j - first;\n        int top = matrix[first][j];\n        moveLeftToTop(matrix, first, last, j, offset);\n        moveBottomToLeft(matrix, first, last, offset);\n        moveRithToBottom(matrix, last, j, offset);\n        moveTopToRight(matrix, last, j, top);\n      }\n    }\n  }", "signature": "void rotate(int[][] matrix)", "full_signature": "public void rotate(int[][] matrix)", "class_method_signature": "RotateMatrix.rotate(int[][] matrix)", "testcase": false, "constructor": false, "invocations": ["validateInput", "moveLeftToTop", "moveBottomToLeft", "moveRithToBottom", "moveTopToRight"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}