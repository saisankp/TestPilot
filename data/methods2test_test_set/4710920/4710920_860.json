{"test_class": {"identifier": "ProviderBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ProviderBuilderTest.java"}, "test_case": {"identifier": "port", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void port() {\n        ProviderBuilder builder = new ProviderBuilder();\n        builder.port(8080);\n        Assertions.assertEquals(8080, builder.build().getPort());\n    }", "signature": "void port()", "full_signature": "@Test void port()", "class_method_signature": "ProviderBuilderTest.port()", "testcase": true, "constructor": false, "invocations": ["port", "assertEquals", "getPort", "build"]}, "focal_class": {"identifier": "ProviderBuilder", "superclass": "extends AbstractServiceBuilder<ProviderConfig, ProviderBuilder>", "interfaces": "", "fields": [{"original_string": "private String host;", "modifier": "private", "type": "String", "declarator": "host", "var_name": "host"}, {"original_string": "private Integer port;", "modifier": "private", "type": "Integer", "declarator": "port", "var_name": "port"}, {"original_string": "private String contextpath;", "modifier": "private", "type": "String", "declarator": "contextpath", "var_name": "contextpath"}, {"original_string": "private String threadpool;", "modifier": "private", "type": "String", "declarator": "threadpool", "var_name": "threadpool"}, {"original_string": "private Integer threads;", "modifier": "private", "type": "Integer", "declarator": "threads", "var_name": "threads"}, {"original_string": "private Integer iothreads;", "modifier": "private", "type": "Integer", "declarator": "iothreads", "var_name": "iothreads"}, {"original_string": "private Integer queues;", "modifier": "private", "type": "Integer", "declarator": "queues", "var_name": "queues"}, {"original_string": "private Integer accepts;", "modifier": "private", "type": "Integer", "declarator": "accepts", "var_name": "accepts"}, {"original_string": "private String codec;", "modifier": "private", "type": "String", "declarator": "codec", "var_name": "codec"}, {"original_string": "private String charset;", "modifier": "private", "type": "String", "declarator": "charset", "var_name": "charset"}, {"original_string": "private Integer payload;", "modifier": "private", "type": "Integer", "declarator": "payload", "var_name": "payload"}, {"original_string": "private Integer buffer;", "modifier": "private", "type": "Integer", "declarator": "buffer", "var_name": "buffer"}, {"original_string": "private String transporter;", "modifier": "private", "type": "String", "declarator": "transporter", "var_name": "transporter"}, {"original_string": "private String exchanger;", "modifier": "private", "type": "String", "declarator": "exchanger", "var_name": "exchanger"}, {"original_string": "private String dispatcher;", "modifier": "private", "type": "String", "declarator": "dispatcher", "var_name": "dispatcher"}, {"original_string": "private String networker;", "modifier": "private", "type": "String", "declarator": "networker", "var_name": "networker"}, {"original_string": "private String server;", "modifier": "private", "type": "String", "declarator": "server", "var_name": "server"}, {"original_string": "private String client;", "modifier": "private", "type": "String", "declarator": "client", "var_name": "client"}, {"original_string": "private String telnet;", "modifier": "private", "type": "String", "declarator": "telnet", "var_name": "telnet"}, {"original_string": "private String prompt;", "modifier": "private", "type": "String", "declarator": "prompt", "var_name": "prompt"}, {"original_string": "private String status;", "modifier": "private", "type": "String", "declarator": "status", "var_name": "status"}, {"original_string": "private Integer wait;", "modifier": "private", "type": "Integer", "declarator": "wait", "var_name": "wait"}, {"original_string": "private Boolean isDefault;", "modifier": "private", "type": "Boolean", "declarator": "isDefault", "var_name": "isDefault"}], "methods": [{"identifier": "host", "parameters": "(String host)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder host(String host)", "full_signature": "public ProviderBuilder host(String host)", "class_method_signature": "ProviderBuilder.host(String host)", "testcase": false, "constructor": false}, {"identifier": "port", "parameters": "(Integer port)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder port(Integer port)", "full_signature": "public ProviderBuilder port(Integer port)", "class_method_signature": "ProviderBuilder.port(Integer port)", "testcase": false, "constructor": false}, {"identifier": "contextPath", "parameters": "(String contextPath)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder contextPath(String contextPath)", "full_signature": "public ProviderBuilder contextPath(String contextPath)", "class_method_signature": "ProviderBuilder.contextPath(String contextPath)", "testcase": false, "constructor": false}, {"identifier": "threadPool", "parameters": "(String threadPool)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder threadPool(String threadPool)", "full_signature": "public ProviderBuilder threadPool(String threadPool)", "class_method_signature": "ProviderBuilder.threadPool(String threadPool)", "testcase": false, "constructor": false}, {"identifier": "threads", "parameters": "(Integer threads)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder threads(Integer threads)", "full_signature": "public ProviderBuilder threads(Integer threads)", "class_method_signature": "ProviderBuilder.threads(Integer threads)", "testcase": false, "constructor": false}, {"identifier": "ioThreads", "parameters": "(Integer ioThreads)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder ioThreads(Integer ioThreads)", "full_signature": "public ProviderBuilder ioThreads(Integer ioThreads)", "class_method_signature": "ProviderBuilder.ioThreads(Integer ioThreads)", "testcase": false, "constructor": false}, {"identifier": "queues", "parameters": "(Integer queues)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder queues(Integer queues)", "full_signature": "public ProviderBuilder queues(Integer queues)", "class_method_signature": "ProviderBuilder.queues(Integer queues)", "testcase": false, "constructor": false}, {"identifier": "accepts", "parameters": "(Integer accepts)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder accepts(Integer accepts)", "full_signature": "public ProviderBuilder accepts(Integer accepts)", "class_method_signature": "ProviderBuilder.accepts(Integer accepts)", "testcase": false, "constructor": false}, {"identifier": "codec", "parameters": "(String codec)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder codec(String codec)", "full_signature": "public ProviderBuilder codec(String codec)", "class_method_signature": "ProviderBuilder.codec(String codec)", "testcase": false, "constructor": false}, {"identifier": "charset", "parameters": "(String charset)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder charset(String charset)", "full_signature": "public ProviderBuilder charset(String charset)", "class_method_signature": "ProviderBuilder.charset(String charset)", "testcase": false, "constructor": false}, {"identifier": "payload", "parameters": "(Integer payload)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder payload(Integer payload)", "full_signature": "public ProviderBuilder payload(Integer payload)", "class_method_signature": "ProviderBuilder.payload(Integer payload)", "testcase": false, "constructor": false}, {"identifier": "buffer", "parameters": "(Integer buffer)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder buffer(Integer buffer)", "full_signature": "public ProviderBuilder buffer(Integer buffer)", "class_method_signature": "ProviderBuilder.buffer(Integer buffer)", "testcase": false, "constructor": false}, {"identifier": "transporter", "parameters": "(String transporter)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder transporter(String transporter)", "full_signature": "public ProviderBuilder transporter(String transporter)", "class_method_signature": "ProviderBuilder.transporter(String transporter)", "testcase": false, "constructor": false}, {"identifier": "exchanger", "parameters": "(String exchanger)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder exchanger(String exchanger)", "full_signature": "public ProviderBuilder exchanger(String exchanger)", "class_method_signature": "ProviderBuilder.exchanger(String exchanger)", "testcase": false, "constructor": false}, {"identifier": "dispatcher", "parameters": "(String dispatcher)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder dispatcher(String dispatcher)", "full_signature": "public ProviderBuilder dispatcher(String dispatcher)", "class_method_signature": "ProviderBuilder.dispatcher(String dispatcher)", "testcase": false, "constructor": false}, {"identifier": "networker", "parameters": "(String networker)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder networker(String networker)", "full_signature": "public ProviderBuilder networker(String networker)", "class_method_signature": "ProviderBuilder.networker(String networker)", "testcase": false, "constructor": false}, {"identifier": "server", "parameters": "(String server)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder server(String server)", "full_signature": "public ProviderBuilder server(String server)", "class_method_signature": "ProviderBuilder.server(String server)", "testcase": false, "constructor": false}, {"identifier": "client", "parameters": "(String client)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder client(String client)", "full_signature": "public ProviderBuilder client(String client)", "class_method_signature": "ProviderBuilder.client(String client)", "testcase": false, "constructor": false}, {"identifier": "telnet", "parameters": "(String telnet)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder telnet(String telnet)", "full_signature": "public ProviderBuilder telnet(String telnet)", "class_method_signature": "ProviderBuilder.telnet(String telnet)", "testcase": false, "constructor": false}, {"identifier": "prompt", "parameters": "(String prompt)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder prompt(String prompt)", "full_signature": "public ProviderBuilder prompt(String prompt)", "class_method_signature": "ProviderBuilder.prompt(String prompt)", "testcase": false, "constructor": false}, {"identifier": "status", "parameters": "(String status)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder status(String status)", "full_signature": "public ProviderBuilder status(String status)", "class_method_signature": "ProviderBuilder.status(String status)", "testcase": false, "constructor": false}, {"identifier": "wait", "parameters": "(Integer wait)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder wait(Integer wait)", "full_signature": "public ProviderBuilder wait(Integer wait)", "class_method_signature": "ProviderBuilder.wait(Integer wait)", "testcase": false, "constructor": false}, {"identifier": "isDefault", "parameters": "(Boolean isDefault)", "modifiers": "public", "return": "ProviderBuilder", "signature": "ProviderBuilder isDefault(Boolean isDefault)", "full_signature": "public ProviderBuilder isDefault(Boolean isDefault)", "class_method_signature": "ProviderBuilder.isDefault(Boolean isDefault)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "ProviderConfig", "signature": "ProviderConfig build()", "full_signature": "public ProviderConfig build()", "class_method_signature": "ProviderBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "getThis", "parameters": "()", "modifiers": "@Override protected", "return": "ProviderBuilder", "signature": "ProviderBuilder getThis()", "full_signature": "@Override protected ProviderBuilder getThis()", "class_method_signature": "ProviderBuilder.getThis()", "testcase": false, "constructor": false}], "file": "dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/bootstrap/builders/ProviderBuilder.java"}, "focal_method": {"identifier": "port", "parameters": "(Integer port)", "modifiers": "public", "return": "ProviderBuilder", "body": "public ProviderBuilder port(Integer port) {\n        this.port = port;\n        return getThis();\n    }", "signature": "ProviderBuilder port(Integer port)", "full_signature": "public ProviderBuilder port(Integer port)", "class_method_signature": "ProviderBuilder.port(Integer port)", "testcase": false, "constructor": false, "invocations": ["getThis"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}