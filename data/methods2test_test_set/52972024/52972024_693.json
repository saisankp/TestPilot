{"test_class": {"identifier": "ActorCollectionReceiverTest", "superclass": "extends PluginsLoadingTestBase", "interfaces": "", "fields": [{"original_string": "private IResolveDependencyStrategy fullCreatorResolutionStrategy;", "modifier": "private", "type": "IResolveDependencyStrategy", "declarator": "fullCreatorResolutionStrategy", "var_name": "fullCreatorResolutionStrategy"}, {"original_string": "private IReceiverObjectCreator[] creatorMocks;", "modifier": "private", "type": "IReceiverObjectCreator[]", "declarator": "creatorMocks", "var_name": "creatorMocks"}, {"original_string": "private IMessageProcessor[] processorMocks;", "modifier": "private", "type": "IMessageProcessor[]", "declarator": "processorMocks", "var_name": "processorMocks"}, {"original_string": "private IObject[] childObjectConfigMocks;", "modifier": "private", "type": "IObject[]", "declarator": "childObjectConfigMocks", "var_name": "childObjectConfigMocks"}, {"original_string": "private IMessageReceiver[] childReceiverMocks;", "modifier": "private", "type": "IMessageReceiver[]", "declarator": "childReceiverMocks", "var_name": "childReceiverMocks"}], "file": "SystemActors/SystemActorPack/ActorCollectionReceiver/src/test/java/info/smart_tools/smartactors/system_actors_pack/actor_collection_receiver/ActorCollectionReceiverTest.java"}, "test_case": {"identifier": "Should_createChildReceivers", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void Should_createChildReceivers()\n            throws Exception {\n        IMessageReceiver receiver = new ActorCollectionReceiver(new HashMap<>());\n\n        receiver.receive(processorMocks[0]);\n        receiver.receive(processorMocks[1]);\n        receiver.receive(processorMocks[2]);\n        receiver.receive(processorMocks[2]);\n        receiver.receive(processorMocks[1]);\n        receiver.receive(processorMocks[1]);\n\n        verify(childReceiverMocks[0], times(1)).receive(same(processorMocks[0]));\n        verify(childReceiverMocks[1], times(3)).receive(same(processorMocks[1]));\n        verify(childReceiverMocks[2], times(2)).receive(same(processorMocks[2]));\n\n        verify(creatorMocks[0], times(1)).create(any(), any(), any());\n        verify(creatorMocks[1], times(1)).create(any(), any(), any());\n        verify(creatorMocks[2], times(1)).create(any(), any(), any());\n    }", "signature": "void Should_createChildReceivers()", "full_signature": "@Test public void Should_createChildReceivers()", "class_method_signature": "ActorCollectionReceiverTest.Should_createChildReceivers()", "testcase": true, "constructor": false, "invocations": ["receive", "receive", "receive", "receive", "receive", "receive", "receive", "verify", "times", "same", "receive", "verify", "times", "same", "receive", "verify", "times", "same", "create", "verify", "times", "any", "any", "any", "create", "verify", "times", "any", "any", "any", "create", "verify", "times", "any", "any", "any"]}, "focal_class": {"identifier": "ActorCollectionReceiver", "superclass": "", "interfaces": "implements IMessageReceiver", "fields": [{"original_string": "private final IFieldName keyFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "keyFieldName", "var_name": "keyFieldName"}, {"original_string": "private final IFieldName newFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "newFieldName", "var_name": "newFieldName"}, {"original_string": "private final IFieldName deletionActionFieldName;", "modifier": "private final", "type": "IFieldName", "declarator": "deletionActionFieldName", "var_name": "deletionActionFieldName"}, {"original_string": "private Map<Object, IMessageReceiver> childReceivers;", "modifier": "private", "type": "Map<Object, IMessageReceiver>", "declarator": "childReceivers", "var_name": "childReceivers"}, {"original_string": "private final IAction<IObject> deletionAction;", "modifier": "private final", "type": "IAction<IObject>", "declarator": "deletionAction", "var_name": "deletionAction"}], "methods": [{"identifier": "ActorCollectionReceiver", "parameters": "(final Map<Object, IMessageReceiver> childStorage)", "modifiers": "public", "return": "", "signature": " ActorCollectionReceiver(final Map<Object, IMessageReceiver> childStorage)", "full_signature": "public  ActorCollectionReceiver(final Map<Object, IMessageReceiver> childStorage)", "class_method_signature": "ActorCollectionReceiver.ActorCollectionReceiver(final Map<Object, IMessageReceiver> childStorage)", "testcase": false, "constructor": true}, {"identifier": "createReceiver", "parameters": "(final IObject stepConf, final Object id)", "modifiers": "private", "return": "IMessageReceiver", "signature": "IMessageReceiver createReceiver(final IObject stepConf, final Object id)", "full_signature": "private IMessageReceiver createReceiver(final IObject stepConf, final Object id)", "class_method_signature": "ActorCollectionReceiver.createReceiver(final IObject stepConf, final Object id)", "testcase": false, "constructor": false}, {"identifier": "resolveReceiver", "parameters": "(final Object id, final IObject stepConf)", "modifiers": "private", "return": "IMessageReceiver", "signature": "IMessageReceiver resolveReceiver(final Object id, final IObject stepConf)", "full_signature": "private IMessageReceiver resolveReceiver(final Object id, final IObject stepConf)", "class_method_signature": "ActorCollectionReceiver.resolveReceiver(final Object id, final IObject stepConf)", "testcase": false, "constructor": false}, {"identifier": "receive", "parameters": "(final IMessageProcessor processor)", "modifiers": "@Override public", "return": "void", "signature": "void receive(final IMessageProcessor processor)", "full_signature": "@Override public void receive(final IMessageProcessor processor)", "class_method_signature": "ActorCollectionReceiver.receive(final IMessageProcessor processor)", "testcase": false, "constructor": false}], "file": "SystemActors/SystemActorPack/ActorCollectionReceiver/src/main/java/info/smart_tools/smartactors/system_actors_pack/actor_collection_receiver/ActorCollectionReceiver.java"}, "focal_method": {"identifier": "receive", "parameters": "(final IMessageProcessor processor)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void receive(final IMessageProcessor processor)\n            throws MessageReceiveException, AsynchronousOperationException {\n        try {\n            IObject stepConf = processor.getSequence().getCurrentReceiverArguments();\n\n            IFieldName fieldNameForKeyName = IOC.resolve(\n                    Keys.getOrAdd(\"info.smart_tools.smartactors.iobject.ifield_name.IFieldName\"),\n                    stepConf.getValue(this.keyFieldName));\n\n            Object id =  processor.getEnvironment().getValue(fieldNameForKeyName);\n\n            IMessageReceiver child = resolveReceiver(id, stepConf);\n\n            try {\n                child.receive(processor);\n            } catch (MessageReceiveException e) {\n                throw new MessageReceiveException(\n                        MessageFormat.format(\"Error occurred in child receiver for key \\\"{0}\\\"\", id), e);\n            }\n        } catch (ReadValueException | ResolutionException | InvalidArgumentException e) {\n            throw new MessageReceiveException(\"Could not execute ActorCollectionReceiver.receive.\", e);\n        }\n    }", "signature": "void receive(final IMessageProcessor processor)", "full_signature": "@Override public void receive(final IMessageProcessor processor)", "class_method_signature": "ActorCollectionReceiver.receive(final IMessageProcessor processor)", "testcase": false, "constructor": false, "invocations": ["getCurrentReceiverArguments", "getSequence", "resolve", "getOrAdd", "getValue", "getValue", "getEnvironment", "resolveReceiver", "receive", "format"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}