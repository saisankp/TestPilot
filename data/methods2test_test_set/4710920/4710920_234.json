{"test_class": {"identifier": "EurekaServiceDiscoveryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EurekaServiceDiscovery serviceDiscovery;", "modifier": "private", "type": "EurekaServiceDiscovery", "declarator": "serviceDiscovery", "var_name": "serviceDiscovery"}, {"original_string": "private ServiceInstance serviceInstance;", "modifier": "private", "type": "ServiceInstance", "declarator": "serviceInstance", "var_name": "serviceInstance"}, {"original_string": "private URL registryURL = URL.valueOf(\"eureka://127.0.0.1:\" + NetUtils.getAvailablePort() + \"/eureka\");", "modifier": "private", "type": "URL", "declarator": "registryURL = URL.valueOf(\"eureka://127.0.0.1:\" + NetUtils.getAvailablePort() + \"/eureka\")", "var_name": "registryURL"}], "file": "dubbo-registry/dubbo-registry-eureka/src/test/java/org/apache/dubbo/registry/eureka/EurekaServiceDiscoveryTest.java"}, "test_case": {"identifier": "testGetInstances", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetInstances() {\n        serviceDiscovery.getServices().forEach(serviceName -> {\n            assertNotNull(serviceDiscovery.getInstances(serviceName));\n        });\n    }", "signature": "void testGetInstances()", "full_signature": "@Test public void testGetInstances()", "class_method_signature": "EurekaServiceDiscoveryTest.testGetInstances()", "testcase": true, "constructor": false, "invocations": ["forEach", "getServices", "assertNotNull", "getInstances"]}, "focal_class": {"identifier": "EurekaServiceDiscovery", "superclass": "extends AbstractServiceDiscovery", "interfaces": "", "fields": [{"original_string": "private final EventDispatcher eventDispatcher = getDefaultExtension();", "modifier": "private final", "type": "EventDispatcher", "declarator": "eventDispatcher = getDefaultExtension()", "var_name": "eventDispatcher"}, {"original_string": "private ApplicationInfoManager applicationInfoManager;", "modifier": "private", "type": "ApplicationInfoManager", "declarator": "applicationInfoManager", "var_name": "applicationInfoManager"}, {"original_string": "private EurekaClient eurekaClient;", "modifier": "private", "type": "EurekaClient", "declarator": "eurekaClient", "var_name": "eurekaClient"}, {"original_string": "private Set<String> subscribedServices;", "modifier": "private", "type": "Set<String>", "declarator": "subscribedServices", "var_name": "subscribedServices"}, {"original_string": "private String lastAppsHashCode;", "modifier": "private", "type": "String", "declarator": "lastAppsHashCode", "var_name": "lastAppsHashCode"}], "methods": [{"identifier": "initialize", "parameters": "(URL registryURL)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(URL registryURL)", "full_signature": "@Override public void initialize(URL registryURL)", "class_method_signature": "EurekaServiceDiscovery.initialize(URL registryURL)", "testcase": false, "constructor": false}, {"identifier": "buildEurekaConfigProperties", "parameters": "(URL registryURL)", "modifiers": "private", "return": "Properties", "signature": "Properties buildEurekaConfigProperties(URL registryURL)", "full_signature": "private Properties buildEurekaConfigProperties(URL registryURL)", "class_method_signature": "EurekaServiceDiscovery.buildEurekaConfigProperties(URL registryURL)", "testcase": false, "constructor": false}, {"identifier": "initSubscribedServices", "parameters": "(URL registryURL)", "modifiers": "private", "return": "void", "signature": "void initSubscribedServices(URL registryURL)", "full_signature": "private void initSubscribedServices(URL registryURL)", "class_method_signature": "EurekaServiceDiscovery.initSubscribedServices(URL registryURL)", "testcase": false, "constructor": false}, {"identifier": "filterEurekaProperty", "parameters": "(Map.Entry<String, String> propertyEntry)", "modifiers": "private", "return": "boolean", "signature": "boolean filterEurekaProperty(Map.Entry<String, String> propertyEntry)", "full_signature": "private boolean filterEurekaProperty(Map.Entry<String, String> propertyEntry)", "class_method_signature": "EurekaServiceDiscovery.filterEurekaProperty(Map.Entry<String, String> propertyEntry)", "testcase": false, "constructor": false}, {"identifier": "setDefaultProperties", "parameters": "(URL registryURL, Properties properties)", "modifiers": "private", "return": "void", "signature": "void setDefaultProperties(URL registryURL, Properties properties)", "full_signature": "private void setDefaultProperties(URL registryURL, Properties properties)", "class_method_signature": "EurekaServiceDiscovery.setDefaultProperties(URL registryURL, Properties properties)", "testcase": false, "constructor": false}, {"identifier": "setDefaultServiceURL", "parameters": "(URL registryURL, Properties properties)", "modifiers": "private", "return": "void", "signature": "void setDefaultServiceURL(URL registryURL, Properties properties)", "full_signature": "private void setDefaultServiceURL(URL registryURL, Properties properties)", "class_method_signature": "EurekaServiceDiscovery.setDefaultServiceURL(URL registryURL, Properties properties)", "testcase": false, "constructor": false}, {"identifier": "setDefaultInitialInstanceInfoReplicationIntervalSeconds", "parameters": "(Properties properties)", "modifiers": "private", "return": "void", "signature": "void setDefaultInitialInstanceInfoReplicationIntervalSeconds(Properties properties)", "full_signature": "private void setDefaultInitialInstanceInfoReplicationIntervalSeconds(Properties properties)", "class_method_signature": "EurekaServiceDiscovery.setDefaultInitialInstanceInfoReplicationIntervalSeconds(Properties properties)", "testcase": false, "constructor": false}, {"identifier": "initConfigurationManager", "parameters": "(Properties eurekaConfigProperties)", "modifiers": "private", "return": "void", "signature": "void initConfigurationManager(Properties eurekaConfigProperties)", "full_signature": "private void initConfigurationManager(Properties eurekaConfigProperties)", "class_method_signature": "EurekaServiceDiscovery.initConfigurationManager(Properties eurekaConfigProperties)", "testcase": false, "constructor": false}, {"identifier": "initApplicationInfoManager", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "private", "return": "void", "signature": "void initApplicationInfoManager(ServiceInstance serviceInstance)", "full_signature": "private void initApplicationInfoManager(ServiceInstance serviceInstance)", "class_method_signature": "EurekaServiceDiscovery.initApplicationInfoManager(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}, {"identifier": "initEurekaClient", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "private", "return": "void", "signature": "void initEurekaClient(ServiceInstance serviceInstance)", "full_signature": "private void initEurekaClient(ServiceInstance serviceInstance)", "class_method_signature": "EurekaServiceDiscovery.initEurekaClient(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}, {"identifier": "registerEurekaEventListener", "parameters": "(EurekaClient eurekaClient)", "modifiers": "private", "return": "void", "signature": "void registerEurekaEventListener(EurekaClient eurekaClient)", "full_signature": "private void registerEurekaEventListener(EurekaClient eurekaClient)", "class_method_signature": "EurekaServiceDiscovery.registerEurekaEventListener(EurekaClient eurekaClient)", "testcase": false, "constructor": false}, {"identifier": "onEurekaEvent", "parameters": "(EurekaEvent event)", "modifiers": "private", "return": "void", "signature": "void onEurekaEvent(EurekaEvent event)", "full_signature": "private void onEurekaEvent(EurekaEvent event)", "class_method_signature": "EurekaServiceDiscovery.onEurekaEvent(EurekaEvent event)", "testcase": false, "constructor": false}, {"identifier": "onCacheRefreshedEvent", "parameters": "(CacheRefreshedEvent event)", "modifiers": "private", "return": "void", "signature": "void onCacheRefreshedEvent(CacheRefreshedEvent event)", "full_signature": "private void onCacheRefreshedEvent(CacheRefreshedEvent event)", "class_method_signature": "EurekaServiceDiscovery.onCacheRefreshedEvent(CacheRefreshedEvent event)", "testcase": false, "constructor": false}, {"identifier": "dispatchServiceInstancesChangedEvent", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void dispatchServiceInstancesChangedEvent()", "full_signature": "private void dispatchServiceInstancesChangedEvent()", "class_method_signature": "EurekaServiceDiscovery.dispatchServiceInstancesChangedEvent()", "testcase": false, "constructor": false}, {"identifier": "createEurekaClient", "parameters": "()", "modifiers": "private", "return": "EurekaClient", "signature": "EurekaClient createEurekaClient()", "full_signature": "private EurekaClient createEurekaClient()", "class_method_signature": "EurekaServiceDiscovery.createEurekaClient()", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void destroy()", "full_signature": "@Override public void destroy()", "class_method_signature": "EurekaServiceDiscovery.destroy()", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "@Override public", "return": "void", "signature": "void register(ServiceInstance serviceInstance)", "full_signature": "@Override public void register(ServiceInstance serviceInstance)", "class_method_signature": "EurekaServiceDiscovery.register(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}, {"identifier": "setInstanceStatus", "parameters": "(InstanceInfo.InstanceStatus status)", "modifiers": "private", "return": "void", "signature": "void setInstanceStatus(InstanceInfo.InstanceStatus status)", "full_signature": "private void setInstanceStatus(InstanceInfo.InstanceStatus status)", "class_method_signature": "EurekaServiceDiscovery.setInstanceStatus(InstanceInfo.InstanceStatus status)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "@Override public", "return": "void", "signature": "void update(ServiceInstance serviceInstance)", "full_signature": "@Override public void update(ServiceInstance serviceInstance)", "class_method_signature": "EurekaServiceDiscovery.update(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}, {"identifier": "unregister", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "@Override public", "return": "void", "signature": "void unregister(ServiceInstance serviceInstance)", "full_signature": "@Override public void unregister(ServiceInstance serviceInstance)", "class_method_signature": "EurekaServiceDiscovery.unregister(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}, {"identifier": "getServices", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getServices()", "full_signature": "@Override public Set<String> getServices()", "class_method_signature": "EurekaServiceDiscovery.getServices()", "testcase": false, "constructor": false}, {"identifier": "getInstances", "parameters": "(String serviceName)", "modifiers": "@Override public", "return": "List<ServiceInstance>", "signature": "List<ServiceInstance> getInstances(String serviceName)", "full_signature": "@Override public List<ServiceInstance> getInstances(String serviceName)", "class_method_signature": "EurekaServiceDiscovery.getInstances(String serviceName)", "testcase": false, "constructor": false}, {"identifier": "buildServiceInstance", "parameters": "(InstanceInfo instance)", "modifiers": "private", "return": "ServiceInstance", "signature": "ServiceInstance buildServiceInstance(InstanceInfo instance)", "full_signature": "private ServiceInstance buildServiceInstance(InstanceInfo instance)", "class_method_signature": "EurekaServiceDiscovery.buildServiceInstance(InstanceInfo instance)", "testcase": false, "constructor": false}, {"identifier": "buildEurekaInstanceConfig", "parameters": "(ServiceInstance serviceInstance)", "modifiers": "private", "return": "EurekaInstanceConfig", "signature": "EurekaInstanceConfig buildEurekaInstanceConfig(ServiceInstance serviceInstance)", "full_signature": "private EurekaInstanceConfig buildEurekaInstanceConfig(ServiceInstance serviceInstance)", "class_method_signature": "EurekaServiceDiscovery.buildEurekaInstanceConfig(ServiceInstance serviceInstance)", "testcase": false, "constructor": false}], "file": "dubbo-registry/dubbo-registry-eureka/src/main/java/org/apache/dubbo/registry/eureka/EurekaServiceDiscovery.java"}, "focal_method": {"identifier": "getInstances", "parameters": "(String serviceName)", "modifiers": "@Override public", "return": "List<ServiceInstance>", "body": "@Override\n    public List<ServiceInstance> getInstances(String serviceName) throws NullPointerException {\n        Application application = this.eurekaClient.getApplication(serviceName);\n\n        if (application == null) {\n            return emptyList();\n        }\n\n        List<InstanceInfo> infos = application.getInstances();\n        List<ServiceInstance> instances = new ArrayList<>();\n        for (InstanceInfo info : infos) {\n            instances.add(buildServiceInstance(info));\n        }\n        return instances;\n    }", "signature": "List<ServiceInstance> getInstances(String serviceName)", "full_signature": "@Override public List<ServiceInstance> getInstances(String serviceName)", "class_method_signature": "EurekaServiceDiscovery.getInstances(String serviceName)", "testcase": false, "constructor": false, "invocations": ["getApplication", "emptyList", "getInstances", "add", "buildServiceInstance"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}