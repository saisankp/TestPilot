{"test_class": {"identifier": "OperationDocumentNameResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String fileSeparator = FileSystems.getDefault().getSeparator();", "modifier": "private final", "type": "String", "declarator": "fileSeparator = FileSystems.getDefault().getSeparator()", "var_name": "fileSeparator"}, {"original_string": "private SwaggerPathOperation operation;", "modifier": "private", "type": "SwaggerPathOperation", "declarator": "operation", "var_name": "operation"}], "file": "swagger2markup/src/test/java/io/github/swagger2markup/internal/resolver/OperationDocumentNameResolverTest.java"}, "test_case": {"identifier": "testWithSeparatedOperationsAndInterDocumentCrossReferences", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWithSeparatedOperationsAndInterDocumentCrossReferences() {\n        Swagger2MarkupConfig config = new Swagger2MarkupConfigBuilder()\n                .withSeparatedOperations()\n                .withInterDocumentCrossReferences()\n                .build();\n        Swagger2MarkupConverter.SwaggerContext context = createContext(config);\n\n        assertThat(new OperationDocumentNameResolver(context).apply(operation))\n                .isEqualTo(\"operations\" + fileSeparator + \"test_get.adoc\");\n    }", "signature": "void testWithSeparatedOperationsAndInterDocumentCrossReferences()", "full_signature": "@Test public void testWithSeparatedOperationsAndInterDocumentCrossReferences()", "class_method_signature": "OperationDocumentNameResolverTest.testWithSeparatedOperationsAndInterDocumentCrossReferences()", "testcase": true, "constructor": false, "invocations": ["build", "withInterDocumentCrossReferences", "withSeparatedOperations", "createContext", "isEqualTo", "assertThat", "apply"]}, "focal_class": {"identifier": "OperationDocumentNameResolver", "superclass": "extends OperationDocumentResolver", "interfaces": "", "fields": [], "methods": [{"identifier": "OperationDocumentNameResolver", "parameters": "(Swagger2MarkupConverter.SwaggerContext context)", "modifiers": "public", "return": "", "signature": " OperationDocumentNameResolver(Swagger2MarkupConverter.SwaggerContext context)", "full_signature": "public  OperationDocumentNameResolver(Swagger2MarkupConverter.SwaggerContext context)", "class_method_signature": "OperationDocumentNameResolver.OperationDocumentNameResolver(Swagger2MarkupConverter.SwaggerContext context)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(PathOperation operation)", "modifiers": "public", "return": "String", "signature": "String apply(PathOperation operation)", "full_signature": "public String apply(PathOperation operation)", "class_method_signature": "OperationDocumentNameResolver.apply(PathOperation operation)", "testcase": false, "constructor": false}], "file": "swagger2markup/src/main/java/io/github/swagger2markup/internal/resolver/OperationDocumentNameResolver.java"}, "focal_method": {"identifier": "apply", "parameters": "(PathOperation operation)", "modifiers": "public", "return": "String", "body": "public String apply(PathOperation operation) {\n        if (config.isSeparatedOperationsEnabled())\n            return new File(config.getSeparatedOperationsFolder(), markupDocBuilder.addFileExtension(normalizeName(operation.getId()))).getPath();\n        else\n            return markupDocBuilder.addFileExtension(config.getPathsDocument());\n    }", "signature": "String apply(PathOperation operation)", "full_signature": "public String apply(PathOperation operation)", "class_method_signature": "OperationDocumentNameResolver.apply(PathOperation operation)", "testcase": false, "constructor": false, "invocations": ["isSeparatedOperationsEnabled", "getPath", "getSeparatedOperationsFolder", "addFileExtension", "normalizeName", "getId", "addFileExtension", "getPathsDocument"]}, "repository": {"repo_id": 30644093, "url": "https://github.com/Swagger2Markup/swagger2markup", "language": "Java", "is_fork": false, "fork_count": 340, "stargazer_count": 2130, "size": 5225, "license": "licensed"}}