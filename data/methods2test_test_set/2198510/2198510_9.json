{"test_class": {"identifier": "TestFlumeEventPointer", "superclass": "", "interfaces": "", "fields": [], "file": "flume-ng-channels/flume-file-channel/src/test/java/org/apache/flume/channel/file/TestFlumeEventPointer.java"}, "test_case": {"identifier": "testHashCode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testHashCode() {\n    FlumeEventPointer pointerA = new FlumeEventPointer(1, 1);\n    FlumeEventPointer pointerB = new FlumeEventPointer(1, 1);\n    Assert.assertEquals(pointerA.hashCode(), pointerB.hashCode());\n    pointerA = new FlumeEventPointer(1, 1);\n    pointerB = new FlumeEventPointer(2, 2);\n    Assert.assertFalse(pointerA.hashCode() == pointerB.hashCode());\n  }", "signature": "void testHashCode()", "full_signature": "@Test public void testHashCode()", "class_method_signature": "TestFlumeEventPointer.testHashCode()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "hashCode", "hashCode", "assertFalse", "hashCode", "hashCode"]}, "focal_class": {"identifier": "FlumeEventPointer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final int fileID;", "modifier": "private final", "type": "int", "declarator": "fileID", "var_name": "fileID"}, {"original_string": "private final int offset;", "modifier": "private final", "type": "int", "declarator": "offset", "var_name": "offset"}], "methods": [{"identifier": "FlumeEventPointer", "parameters": "(int fileID, int offset)", "modifiers": "", "return": "", "signature": " FlumeEventPointer(int fileID, int offset)", "full_signature": "  FlumeEventPointer(int fileID, int offset)", "class_method_signature": "FlumeEventPointer.FlumeEventPointer(int fileID, int offset)", "testcase": false, "constructor": true}, {"identifier": "getFileID", "parameters": "()", "modifiers": "", "return": "int", "signature": "int getFileID()", "full_signature": " int getFileID()", "class_method_signature": "FlumeEventPointer.getFileID()", "testcase": false, "constructor": false}, {"identifier": "getOffset", "parameters": "()", "modifiers": "", "return": "int", "signature": "int getOffset()", "full_signature": " int getOffset()", "class_method_signature": "FlumeEventPointer.getOffset()", "testcase": false, "constructor": false}, {"identifier": "toLong", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long toLong()", "full_signature": "public long toLong()", "class_method_signature": "FlumeEventPointer.toLong()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "FlumeEventPointer.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "FlumeEventPointer.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FlumeEventPointer.toString()", "testcase": false, "constructor": false}, {"identifier": "fromLong", "parameters": "(long value)", "modifiers": "public static", "return": "FlumeEventPointer", "signature": "FlumeEventPointer fromLong(long value)", "full_signature": "public static FlumeEventPointer fromLong(long value)", "class_method_signature": "FlumeEventPointer.fromLong(long value)", "testcase": false, "constructor": false}], "file": "flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/FlumeEventPointer.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + fileID;\n    result = prime * result + offset;\n    return result;\n  }", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "FlumeEventPointer.hashCode()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2198510, "url": "https://github.com/apache/flume", "language": "Java", "is_fork": false, "fork_count": 1372, "stargazer_count": 1971, "size": 44377, "license": "licensed"}}