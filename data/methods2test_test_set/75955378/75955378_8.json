{"test_class": {"identifier": "RegexDeserializerTest", "superclass": "", "interfaces": "", "fields": [], "file": "deserializers/src/test/java/com/nextdoor/bender/deserializer/regex/RegexDeserializerTest.java"}, "test_case": {"identifier": "testTestAlbLog", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testTestAlbLog() throws FieldNotFoundException {\n    List<ReFieldConfig> fields = new ArrayList<>();\n    fields.add(new ReFieldConfig(\"type\", ReFieldType.STRING));\n    fields.add(new ReFieldConfig(\"timestamp\", ReFieldType.STRING));\n    fields.add(new ReFieldConfig(\"elb\", ReFieldType.STRING));\n    fields.add(new ReFieldConfig(\"client_ip\", ReFieldType.STRING));\n    fields.add(new ReFieldConfig(\"client_port\", ReFieldType.NUMBER));\n    fields.add(new ReFieldConfig(\"target_ip\", ReFieldType.STRING));\n    fields.add(new ReFieldConfig(\"target_port\", ReFieldType.NUMBER));\n    fields.add(new ReFieldConfig(\"request_processing_time\", ReFieldType.NUMBER));\n    fields.add(new ReFieldConfig(\"target_processing_time\", ReFieldType.NUMBER));\n    fields.add(new ReFieldConfig(\"response_processing_time\", ReFieldType.NUMBER));\n    fields.add(new ReFieldConfig(\"elb_status_code\", ReFieldType.NUMBER));\n    fields.add(new ReFieldConfig(\"target_status_code\", ReFieldType.NUMBER));\n    fields.add(new ReFieldConfig(\"received_bytes\", ReFieldType.NUMBER));\n    fields.add(new ReFieldConfig(\"sent_bytes\", ReFieldType.NUMBER));\n    fields.add(new ReFieldConfig(\"request_verb\", ReFieldType.STRING));\n    fields.add(new ReFieldConfig(\"url\", ReFieldType.STRING));\n    fields.add(new ReFieldConfig(\"protocol\", ReFieldType.STRING));\n    fields.add(new ReFieldConfig(\"user_agent\", ReFieldType.STRING));\n    fields.add(new ReFieldConfig(\"ssl_cipher\", ReFieldType.STRING));\n    fields.add(new ReFieldConfig(\"ssl_protocol\", ReFieldType.STRING));\n    fields.add(new ReFieldConfig(\"target_group_arn\", ReFieldType.STRING));\n    fields.add(new ReFieldConfig(\"trace_id\", ReFieldType.STRING));\n\n    Pattern p = Pattern.compile(\n        \"([^ ]*) ([^ ]*) ([^ ]*) ([^ ]*):([0-9]*) ([^ ]*):([0-9]*) ([.0-9]*) ([.0-9]*) ([.0-9]*) (-|[0-9]*) (-|[0-9]*) ([-0-9]*) ([-0-9]*) \\\\\\\"([^ ]*) ([^ ]*) (- |[^ ]*)\\\\\\\" (\\\\\\\"[^\\\\\\\"]*\\\\\\\") ([A-Z0-9-]+) ([A-Za-z0-9.-]*) ([^ ]*) ([^ ]*)$\",\n        Pattern.DOTALL);\n    RegexDeserializer deser = new RegexDeserializer(p, fields);\n    DeserializedEvent event = deser.deserialize(\n        \"https 2017-06-15T04:55:00.142369Z app/foo/1234 127.12.12.12:1337 127.13.13.13:7331 1.001 2.002 3.003 201 200 687 461 \\\"GET https://foo.com:443/bar/123?baz=1 HTTP/1.1\\\" \\\"123-123-123-123-123\\\" ECDHE-RSA-AES128-GCM-SHA256 TLSv1.2 arn:aws:elasticloadbalancing:us-west-1:123:targetgroup/foo-bar-https/123 \\\"Root=1-123-123\\\"\");\n\n    assertEquals(\"https\", event.getField(\"type\"));\n    assertEquals(\"2017-06-15T04:55:00.142369Z\", event.getField(\"timestamp\"));\n    assertEquals(\"app/foo/1234\", event.getField(\"elb\"));\n    assertEquals(\"127.12.12.12\", event.getField(\"client_ip\"));\n    assertEquals(new JsonPrimitive(1337), event.getField(\"client_port\"));\n    assertEquals(\"127.13.13.13\", event.getField(\"target_ip\"));\n    assertEquals(new JsonPrimitive(7331), event.getField(\"target_port\"));\n    assertEquals(\"1.001\", event.getFieldAsString(\"request_processing_time\"));\n    assertEquals(new JsonPrimitive(new Double(2.002)), event.getField(\"target_processing_time\"));\n    assertEquals(new JsonPrimitive(new Double(3.003)), event.getField(\"response_processing_time\"));\n    assertEquals(new JsonPrimitive(201), event.getField(\"elb_status_code\"));\n    assertEquals(new JsonPrimitive(200), event.getField(\"target_status_code\"));\n    assertEquals(new JsonPrimitive(687), event.getField(\"received_bytes\"));\n    assertEquals(new JsonPrimitive(461), event.getField(\"sent_bytes\"));\n    assertEquals(\"GET\", event.getField(\"request_verb\"));\n    assertEquals(\"https://foo.com:443/bar/123?baz=1\", event.getField(\"url\"));\n    assertEquals(\"HTTP/1.1\", event.getField(\"protocol\"));\n    assertEquals(\"\\\"123-123-123-123-123\\\"\", event.getField(\"user_agent\"));\n    assertEquals(\"ECDHE-RSA-AES128-GCM-SHA256\", event.getField(\"ssl_cipher\"));\n    assertEquals(\"TLSv1.2\", event.getField(\"ssl_protocol\"));\n    assertEquals(\"arn:aws:elasticloadbalancing:us-west-1:123:targetgroup/foo-bar-https/123\",\n        event.getField(\"target_group_arn\"));\n    assertEquals(\"\\\"Root=1-123-123\\\"\", event.getField(\"trace_id\"));\n  }", "signature": "void testTestAlbLog()", "full_signature": "@Test public void testTestAlbLog()", "class_method_signature": "RegexDeserializerTest.testTestAlbLog()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "add", "compile", "deserialize", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getFieldAsString", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField", "assertEquals", "getField"]}, "focal_class": {"identifier": "RegexDeserializer", "superclass": "extends Deserializer", "interfaces": "", "fields": [{"original_string": "private final Pattern pattern;", "modifier": "private final", "type": "Pattern", "declarator": "pattern", "var_name": "pattern"}, {"original_string": "private final List<ReFieldConfig> fields;", "modifier": "private final", "type": "List<ReFieldConfig>", "declarator": "fields", "var_name": "fields"}], "methods": [{"identifier": "RegexDeserializer", "parameters": "(final Pattern pattern, final List<ReFieldConfig> fields)", "modifiers": "public", "return": "", "signature": " RegexDeserializer(final Pattern pattern, final List<ReFieldConfig> fields)", "full_signature": "public  RegexDeserializer(final Pattern pattern, final List<ReFieldConfig> fields)", "class_method_signature": "RegexDeserializer.RegexDeserializer(final Pattern pattern, final List<ReFieldConfig> fields)", "testcase": false, "constructor": true}, {"identifier": "deserialize", "parameters": "(String raw)", "modifiers": "@Override public", "return": "DeserializedEvent", "signature": "DeserializedEvent deserialize(String raw)", "full_signature": "@Override public DeserializedEvent deserialize(String raw)", "class_method_signature": "RegexDeserializer.deserialize(String raw)", "testcase": false, "constructor": false}, {"identifier": "init", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void init()", "full_signature": "@Override public void init()", "class_method_signature": "RegexDeserializer.init()", "testcase": false, "constructor": false}], "file": "deserializers/src/main/java/com/nextdoor/bender/deserializer/regex/RegexDeserializer.java"}, "focal_method": {"identifier": "deserialize", "parameters": "(String raw)", "modifiers": "@Override public", "return": "DeserializedEvent", "body": "@Override\n  public DeserializedEvent deserialize(String raw) {\n    Matcher m = this.pattern.matcher(raw);\n\n    if (!m.matches()) {\n      throw new DeserializationException(\"raw event does not match string\");\n    }\n\n    int groups = m.groupCount();\n\n    JsonObject obj = new JsonObject();\n    for (int i = 0; i < groups && i < fields.size(); i++) {\n      String str = m.group(i + 1);\n      ReFieldConfig field = this.fields.get(i);\n\n      switch (field.getType()) {\n        case BOOLEAN:\n          obj.addProperty(field.getName(), Boolean.parseBoolean(str));\n          break;\n        case NUMBER:\n          obj.addProperty(field.getName(), NumberUtils.createNumber(str));\n          break;\n        case STRING:\n          obj.addProperty(field.getName(), str);\n          break;\n        default:\n          obj.addProperty(field.getName(), str);\n          break;\n      }\n    }\n\n    return new GenericJsonEvent(obj);\n  }", "signature": "DeserializedEvent deserialize(String raw)", "full_signature": "@Override public DeserializedEvent deserialize(String raw)", "class_method_signature": "RegexDeserializer.deserialize(String raw)", "testcase": false, "constructor": false, "invocations": ["matcher", "matches", "groupCount", "size", "group", "get", "getType", "addProperty", "getName", "parseBoolean", "addProperty", "getName", "createNumber", "addProperty", "getName", "addProperty", "getName"]}, "repository": {"repo_id": 75955378, "url": "https://github.com/Nextdoor/bender", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 163, "size": 1503, "license": "licensed"}}