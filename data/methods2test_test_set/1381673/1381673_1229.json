{"test_class": {"identifier": "KiePMMLDescrRhsFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PACKAGE_NAME = \"package\";", "modifier": "private static final", "type": "String", "declarator": "PACKAGE_NAME = \"package\"", "var_name": "PACKAGE_NAME"}, {"original_string": "private static final String CURRENT_RULE = \"currentRule\";", "modifier": "private static final", "type": "String", "declarator": "CURRENT_RULE = \"currentRule\"", "var_name": "CURRENT_RULE"}, {"original_string": "private RuleDescrBuilder ruleBuilder;", "modifier": "private", "type": "RuleDescrBuilder", "declarator": "ruleBuilder", "var_name": "ruleBuilder"}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/commons/factories/KiePMMLDescrRhsFactoryTest.java"}, "test_case": {"identifier": "commonDeclareThen", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void commonDeclareThen() {\n        String ruleName = \"RULENAME\";\n        String statusToSet = \"STATUSTOSET\";\n        String outputFieldName = \"OUTPUTFIELDNAME\";\n        Object result = \"RESULT\";\n        List<KiePMMLOutputField> outputFields = Collections.singletonList(KiePMMLOutputField.builder(outputFieldName, null).withResultFeature(PREDICTED_VALUE).build());\n        KiePMMLDroolsRule.Builder builder = KiePMMLDroolsRule.builder(ruleName, statusToSet, outputFields);\n        KiePMMLDroolsRule rule = builder.build();\n        StringJoiner joiner = new StringJoiner(\"\");\n        KiePMMLDescrRhsFactory.factory(ruleBuilder).commonDeclareThen(rule, joiner);\n        String retrieved = joiner.toString();\n        assertTrue(retrieved.isEmpty());\n        //\n        ResultCode resultCode = ResultCode.OK;\n        builder = builder.withResultCode(resultCode);\n        rule = builder.build();\n        joiner = new StringJoiner(\"\");\n        KiePMMLDescrRhsFactory.factory(ruleBuilder).commonDeclareThen(rule, joiner);\n        retrieved = joiner.toString();\n        String expected = String.format(SET_PMML4_RESULT_CODE, resultCode);\n        assertTrue(retrieved.contains(expected));\n        //\n        builder = builder.withResult(result);\n        rule = builder.build();\n        joiner = new StringJoiner(\"\");\n        KiePMMLDescrRhsFactory.factory(ruleBuilder).commonDeclareThen(rule, joiner);\n        retrieved = joiner.toString();\n        expected = String.format(ADD_PMML4_RESULT_VARIABLE, result);\n        assertTrue(retrieved.contains(expected));\n        expected = String.format(ADD_PMML4_OUTPUT_FIELD, outputFieldName, result);\n        assertTrue(retrieved.contains(expected));\n        //\n        String focusedAgendaGroup = \"FOCUSEDAGENDAGROUP\";\n        builder = builder.withFocusedAgendaGroup(focusedAgendaGroup);\n        rule = builder.build();\n        joiner = new StringJoiner(\"\");\n        KiePMMLDescrRhsFactory.factory(ruleBuilder).commonDeclareThen(rule, joiner);\n        retrieved = joiner.toString();\n        expected = String.format(FOCUS_AGENDA_GROUP, focusedAgendaGroup);\n        assertTrue(retrieved.contains(expected));\n        //\n    }", "signature": "void commonDeclareThen()", "full_signature": "@Test public void commonDeclareThen()", "class_method_signature": "KiePMMLDescrRhsFactoryTest.commonDeclareThen()", "testcase": true, "constructor": false, "invocations": ["singletonList", "build", "withResultFeature", "builder", "builder", "build", "commonDeclareThen", "factory", "toString", "assertTrue", "isEmpty", "withResultCode", "build", "commonDeclareThen", "factory", "toString", "format", "assertTrue", "contains", "withResult", "build", "commonDeclareThen", "factory", "toString", "format", "assertTrue", "contains", "format", "assertTrue", "contains", "withFocusedAgendaGroup", "build", "commonDeclareThen", "factory", "toString", "format", "assertTrue", "contains"]}, "focal_class": {"identifier": "KiePMMLDescrRhsFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String SET_PMML4_RESULT_CODE = \"\\r\\n\" + KiePMMLDescrFactory.PMML4_RESULT_IDENTIFIER + \".setResultCode(\\\"%s\\\");\";", "modifier": "public static final", "type": "String", "declarator": "SET_PMML4_RESULT_CODE = \"\\r\\n\" + KiePMMLDescrFactory.PMML4_RESULT_IDENTIFIER + \".setResultCode(\\\"%s\\\");\"", "var_name": "SET_PMML4_RESULT_CODE"}, {"original_string": "public static final String ADD_PMML4_RESULT_VARIABLE = \"\\r\\n\" + KiePMMLDescrFactory.PMML4_RESULT_IDENTIFIER + \".addResultVariable(\" + KiePMMLDescrFactory.PMML4_RESULT_IDENTIFIER + \".getResultObjectName()\" + \", %s);\";", "modifier": "public static final", "type": "String", "declarator": "ADD_PMML4_RESULT_VARIABLE = \"\\r\\n\" + KiePMMLDescrFactory.PMML4_RESULT_IDENTIFIER + \".addResultVariable(\" + KiePMMLDescrFactory.PMML4_RESULT_IDENTIFIER + \".getResultObjectName()\" + \", %s);\"", "var_name": "ADD_PMML4_RESULT_VARIABLE"}, {"original_string": "public static final String ADD_PMML4_OUTPUT_FIELD = \"\\r\\n\" + KiePMMLDescrFactory.PMML4_RESULT_IDENTIFIER + \".addResultVariable(\\\"%s\\\", %s);\";", "modifier": "public static final", "type": "String", "declarator": "ADD_PMML4_OUTPUT_FIELD = \"\\r\\n\" + KiePMMLDescrFactory.PMML4_RESULT_IDENTIFIER + \".addResultVariable(\\\"%s\\\", %s);\"", "var_name": "ADD_PMML4_OUTPUT_FIELD"}, {"original_string": "public static final String ADD_OUTPUTFIELD_VALUE = \"\\r\\n\" + KiePMMLDescrFactory.OUTPUTFIELDS_MAP_IDENTIFIER + \".put(\\\"%s\\\", %s);\";", "modifier": "public static final", "type": "String", "declarator": "ADD_OUTPUTFIELD_VALUE = \"\\r\\n\" + KiePMMLDescrFactory.OUTPUTFIELDS_MAP_IDENTIFIER + \".put(\\\"%s\\\", %s);\"", "var_name": "ADD_OUTPUTFIELD_VALUE"}, {"original_string": "public static final String UPDATE_STATUS_HOLDER_STATUS = \"\\r\\n\" + KiePMMLDescrRulesFactory.STATUS_HOLDER + \".setStatus(\\\"%s\\\");\";", "modifier": "public static final", "type": "String", "declarator": "UPDATE_STATUS_HOLDER_STATUS = \"\\r\\n\" + KiePMMLDescrRulesFactory.STATUS_HOLDER + \".setStatus(\\\"%s\\\");\"", "var_name": "UPDATE_STATUS_HOLDER_STATUS"}, {"original_string": "public static final String UPDATE_STATUS_HOLDER_ACCUMULATE = \"\\r\\n\" + KiePMMLDescrRulesFactory.STATUS_HOLDER + \".accumulate(%s);\";", "modifier": "public static final", "type": "String", "declarator": "UPDATE_STATUS_HOLDER_ACCUMULATE = \"\\r\\n\" + KiePMMLDescrRulesFactory.STATUS_HOLDER + \".accumulate(%s);\"", "var_name": "UPDATE_STATUS_HOLDER_ACCUMULATE"}, {"original_string": "public static final String UPDATE_STATUS_HOLDER = \"\\r\\nupdate(\" + KiePMMLDescrRulesFactory.STATUS_HOLDER + \");\";", "modifier": "public static final", "type": "String", "declarator": "UPDATE_STATUS_HOLDER = \"\\r\\nupdate(\" + KiePMMLDescrRulesFactory.STATUS_HOLDER + \");\"", "var_name": "UPDATE_STATUS_HOLDER"}, {"original_string": "public static final String RETURN_ACCUMULATION = \"\\r\\n\" + KiePMMLDescrFactory.PMML4_RESULT_IDENTIFIER + \".addResultVariable($pmml4Result.getResultObjectName(), $statusHolder.getAccumulator());\";", "modifier": "public static final", "type": "String", "declarator": "RETURN_ACCUMULATION = \"\\r\\n\" + KiePMMLDescrFactory.PMML4_RESULT_IDENTIFIER + \".addResultVariable($pmml4Result.getResultObjectName(), $statusHolder.getAccumulator());\"", "var_name": "RETURN_ACCUMULATION"}, {"original_string": "public static final String FOCUS_AGENDA_GROUP = \"\\r\\nkcontext.getKieRuntime().getAgenda().getAgendaGroup( \\\"%s\\\" ).setFocus();\";", "modifier": "public static final", "type": "String", "declarator": "FOCUS_AGENDA_GROUP = \"\\r\\nkcontext.getKieRuntime().getAgenda().getAgendaGroup( \\\"%s\\\" ).setFocus();\"", "var_name": "FOCUS_AGENDA_GROUP"}, {"original_string": "private static final Logger logger = LoggerFactory.getLogger(KiePMMLDescrRhsFactory.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(KiePMMLDescrRhsFactory.class.getName())", "var_name": "logger"}, {"original_string": "final RuleDescrBuilder builder;", "modifier": "final", "type": "RuleDescrBuilder", "declarator": "builder", "var_name": "builder"}], "methods": [{"identifier": "KiePMMLDescrRhsFactory", "parameters": "(final RuleDescrBuilder builder)", "modifiers": "private", "return": "", "signature": " KiePMMLDescrRhsFactory(final RuleDescrBuilder builder)", "full_signature": "private  KiePMMLDescrRhsFactory(final RuleDescrBuilder builder)", "class_method_signature": "KiePMMLDescrRhsFactory.KiePMMLDescrRhsFactory(final RuleDescrBuilder builder)", "testcase": false, "constructor": true}, {"identifier": "factory", "parameters": "(final RuleDescrBuilder builder)", "modifiers": "public static", "return": "KiePMMLDescrRhsFactory", "signature": "KiePMMLDescrRhsFactory factory(final RuleDescrBuilder builder)", "full_signature": "public static KiePMMLDescrRhsFactory factory(final RuleDescrBuilder builder)", "class_method_signature": "KiePMMLDescrRhsFactory.factory(final RuleDescrBuilder builder)", "testcase": false, "constructor": false}, {"identifier": "declareRhs", "parameters": "(final KiePMMLDroolsRule rule)", "modifiers": "public", "return": "void", "signature": "void declareRhs(final KiePMMLDroolsRule rule)", "full_signature": "public void declareRhs(final KiePMMLDroolsRule rule)", "class_method_signature": "KiePMMLDescrRhsFactory.declareRhs(final KiePMMLDroolsRule rule)", "testcase": false, "constructor": false}, {"identifier": "declareDefaultThen", "parameters": "(final KiePMMLDroolsRule rule)", "modifiers": "protected", "return": "void", "signature": "void declareDefaultThen(final KiePMMLDroolsRule rule)", "full_signature": "protected void declareDefaultThen(final KiePMMLDroolsRule rule)", "class_method_signature": "KiePMMLDescrRhsFactory.declareDefaultThen(final KiePMMLDroolsRule rule)", "testcase": false, "constructor": false}, {"identifier": "declareIfThen", "parameters": "(final KiePMMLDroolsRule rule)", "modifiers": "protected", "return": "void", "signature": "void declareIfThen(final KiePMMLDroolsRule rule)", "full_signature": "protected void declareIfThen(final KiePMMLDroolsRule rule)", "class_method_signature": "KiePMMLDescrRhsFactory.declareIfThen(final KiePMMLDroolsRule rule)", "testcase": false, "constructor": false}, {"identifier": "commonDeclareThen", "parameters": "(final KiePMMLDroolsRule rule, final StringJoiner joiner)", "modifiers": "protected", "return": "void", "signature": "void commonDeclareThen(final KiePMMLDroolsRule rule, final StringJoiner joiner)", "full_signature": "protected void commonDeclareThen(final KiePMMLDroolsRule rule, final StringJoiner joiner)", "class_method_signature": "KiePMMLDescrRhsFactory.commonDeclareThen(final KiePMMLDroolsRule rule, final StringJoiner joiner)", "testcase": false, "constructor": false}, {"identifier": "commonDeclareOutputFields", "parameters": "(final List<KiePMMLOutputField> outputFields, final Object result, final StringJoiner joiner)", "modifiers": "protected", "return": "void", "signature": "void commonDeclareOutputFields(final List<KiePMMLOutputField> outputFields, final Object result, final StringJoiner joiner)", "full_signature": "protected void commonDeclareOutputFields(final List<KiePMMLOutputField> outputFields, final Object result, final StringJoiner joiner)", "class_method_signature": "KiePMMLDescrRhsFactory.commonDeclareOutputFields(final List<KiePMMLOutputField> outputFields, final Object result, final StringJoiner joiner)", "testcase": false, "constructor": false}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/commons/factories/KiePMMLDescrRhsFactory.java"}, "focal_method": {"identifier": "commonDeclareThen", "parameters": "(final KiePMMLDroolsRule rule, final StringJoiner joiner)", "modifiers": "protected", "return": "void", "body": "protected void commonDeclareThen(final KiePMMLDroolsRule rule, final StringJoiner joiner) {\n        if (rule.getFocusedAgendaGroup() != null) {\n            joiner.add(String.format(FOCUS_AGENDA_GROUP, rule.getFocusedAgendaGroup()));\n        }\n        if (rule.getToAccumulate() != null) {\n            joiner.add(String.format(UPDATE_STATUS_HOLDER_ACCUMULATE, rule.getToAccumulate()));\n        }\n        if (rule.isAccumulationResult()) {\n            joiner.add(RETURN_ACCUMULATION);\n        }\n        if (rule.getResultCode() != null) {\n            joiner.add(String.format(SET_PMML4_RESULT_CODE, rule.getResultCode()));\n        }\n        if (rule.getResult() != null) {\n            joiner.add(String.format(ADD_PMML4_RESULT_VARIABLE, rule.getResult()));\n        }\n        if (rule.getReasonCodeAndValue() != null) {\n            final KiePMMLReasonCodeAndValue reasonCodeAndValue = rule.getReasonCodeAndValue();\n            joiner.add(String.format(ADD_OUTPUTFIELD_VALUE, reasonCodeAndValue.getReasonCode(), reasonCodeAndValue.getValue()));\n        }\n        if (rule.getOutputFields() != null) {\n            if (rule.getResult() != null) {\n                commonDeclareOutputFields(rule.getOutputFields(), rule.getResult(), joiner);\n            } else if (rule.isAccumulationResult()) {\n                commonDeclareOutputFields(rule.getOutputFields(), \"$statusHolder.getAccumulator()\", joiner);\n            }\n        }\n    }", "signature": "void commonDeclareThen(final KiePMMLDroolsRule rule, final StringJoiner joiner)", "full_signature": "protected void commonDeclareThen(final KiePMMLDroolsRule rule, final StringJoiner joiner)", "class_method_signature": "KiePMMLDescrRhsFactory.commonDeclareThen(final KiePMMLDroolsRule rule, final StringJoiner joiner)", "testcase": false, "constructor": false, "invocations": ["getFocusedAgendaGroup", "add", "format", "getFocusedAgendaGroup", "getToAccumulate", "add", "format", "getToAccumulate", "isAccumulationResult", "add", "getResultCode", "add", "format", "getResultCode", "getResult", "add", "format", "getResult", "getReasonCodeAndValue", "getReasonCodeAndValue", "add", "format", "getReasonCode", "getValue", "getOutputFields", "getResult", "commonDeclareOutputFields", "getOutputFields", "getResult", "isAccumulationResult", "commonDeclareOutputFields", "getOutputFields"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}