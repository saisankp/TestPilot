{"test_class": {"identifier": "MetatableTransformerTest", "superclass": "", "interfaces": "", "fields": [], "file": "storage-service/src/test/java/com/stnetix/ariaddna/persistence/transformers/MetatableTransformerTest.java"}, "test_case": {"identifier": "metafileEntityToDTO", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void metafileEntityToDTO() throws Exception {\n        MetatableTransformer metatableTransformer = new MetatableTransformer();\n\n        MetatableEntity metatableEntity = TestHelper.getMetatableEntity(MetatableType.MASTER);\n\n        MetatableDTO metatableDTO = metatableTransformer.metafileEntityToDTO(metatableEntity);\n\n        assertEquals(metatableDTO.getType(), metatableEntity.getType());\n        assertEquals(metatableDTO.getVersion(), metatableEntity.getVersion());\n        assertEquals(metatableDTO.getUuid(), metatableEntity.getUuid());\n        assertEquals(metatableDTO.getLastUpdateTimestamp(),\n                metatableEntity.getLastUpdateTimestamp());\n\n        assertEquals(metatableDTO.getMetafileSet().size(), metatableEntity.getMetafileSet()\n                .size());\n\n        int countEquals = compareMetafileDTOAndEntitySet(metatableDTO.getMetafileSet(),\n                metatableEntity.getMetafileSet());\n        assertEquals(countEquals, metatableDTO.getMetafileSet().size());\n    }", "signature": "void metafileEntityToDTO()", "full_signature": "@Test public void metafileEntityToDTO()", "class_method_signature": "MetatableTransformerTest.metafileEntityToDTO()", "testcase": true, "constructor": false, "invocations": ["getMetatableEntity", "metafileEntityToDTO", "assertEquals", "getType", "getType", "assertEquals", "getVersion", "getVersion", "assertEquals", "getUuid", "getUuid", "assertEquals", "getLastUpdateTimestamp", "getLastUpdateTimestamp", "assertEquals", "size", "getMetafileSet", "size", "getMetafileSet", "compareMetafileDTOAndEntitySet", "getMetafileSet", "getMetafileSet", "assertEquals", "size", "getMetafileSet"]}, "focal_class": {"identifier": "MetatableTransformer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MetafileTransformer metafileTransformer;", "modifier": "private", "type": "MetafileTransformer", "declarator": "metafileTransformer", "var_name": "metafileTransformer"}], "methods": [{"identifier": "MetatableTransformer", "parameters": "()", "modifiers": "public", "return": "", "signature": " MetatableTransformer()", "full_signature": "public  MetatableTransformer()", "class_method_signature": "MetatableTransformer.MetatableTransformer()", "testcase": false, "constructor": true}, {"identifier": "metafileEntityToDTO", "parameters": "(MetatableEntity metatableEntity)", "modifiers": "public", "return": "MetatableDTO", "signature": "MetatableDTO metafileEntityToDTO(MetatableEntity metatableEntity)", "full_signature": "public MetatableDTO metafileEntityToDTO(MetatableEntity metatableEntity)", "class_method_signature": "MetatableTransformer.metafileEntityToDTO(MetatableEntity metatableEntity)", "testcase": false, "constructor": false}, {"identifier": "metafileDTOtoEntity", "parameters": "(MetatableDTO metatableDTO)", "modifiers": "public", "return": "MetatableEntity", "signature": "MetatableEntity metafileDTOtoEntity(MetatableDTO metatableDTO)", "full_signature": "public MetatableEntity metafileDTOtoEntity(MetatableDTO metatableDTO)", "class_method_signature": "MetatableTransformer.metafileDTOtoEntity(MetatableDTO metatableDTO)", "testcase": false, "constructor": false}], "file": "storage-service/src/main/java/com/stnetix/ariaddna/persistence/transformers/MetatableTransformer.java"}, "focal_method": {"identifier": "metafileEntityToDTO", "parameters": "(MetatableEntity metatableEntity)", "modifiers": "public", "return": "MetatableDTO", "body": "public MetatableDTO metafileEntityToDTO(MetatableEntity metatableEntity) {\n        MetatableDTO metatableDTO = new MetatableDTO();\n\n        metatableDTO.setUuid(metatableEntity.getUuid() != null ? metatableEntity.getUuid() : null);\n        metatableDTO.setType(metatableEntity.getType() != null ?\n                metatableEntity.getType() :\n                null);\n\n        Set<MetafileDTO> metafileDTOSet = new HashSet<>();\n        metatableEntity.getMetafileSet().forEach(metafileEntity -> metafileDTOSet\n                .add(metafileTransformer.metafileEntityToDTO(metafileEntity)));\n        metatableDTO.setMetafileSet(metafileDTOSet);\n\n        metatableDTO.setLastUpdateTimestamp(metatableEntity.getLastUpdateTimestamp() != null ?\n                metatableEntity.getLastUpdateTimestamp() :\n                null);\n        metatableDTO.setVersion(\n                metatableEntity.getVersion() != null ? metatableEntity.getVersion() : null);\n        return metatableDTO;\n    }", "signature": "MetatableDTO metafileEntityToDTO(MetatableEntity metatableEntity)", "full_signature": "public MetatableDTO metafileEntityToDTO(MetatableEntity metatableEntity)", "class_method_signature": "MetatableTransformer.metafileEntityToDTO(MetatableEntity metatableEntity)", "testcase": false, "constructor": false, "invocations": ["setUuid", "getUuid", "getUuid", "setType", "getType", "getType", "forEach", "getMetafileSet", "add", "metafileEntityToDTO", "setMetafileSet", "setLastUpdateTimestamp", "getLastUpdateTimestamp", "getLastUpdateTimestamp", "setVersion", "getVersion", "getVersion"]}, "repository": {"repo_id": 73354878, "url": "https://github.com/StnetixDevTeam/ariADDna", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 11, "size": 971, "license": "licensed"}}