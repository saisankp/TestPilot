{"test_class": {"identifier": "NetworkProfilerStageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final float EPSILON = 0.00001f;", "modifier": "private static final", "type": "float", "declarator": "EPSILON = 0.00001f", "var_name": "EPSILON"}, {"original_string": "private static final ImmutableList<NetworkProfilerData> FAKE_DATA =\n    new ImmutableList.Builder<NetworkProfilerData>()\n      .add(FakeNetworkService.newSpeedData(0, 1, 2))\n      .add(FakeNetworkService.newSpeedData(10, 3, 4))\n      .add(FakeNetworkService.newSpeedData(100, 3000000, 4000000))\n      .add(FakeNetworkService.newConnectionData(0, 4))\n      .add(FakeNetworkService.newConnectionData(10, 6))\n      .add(FakeNetworkService.newConnectionData(100, 8000))\n      .add(FakeNetworkService.newRadioData(5, Network.NetworkTypeData.NetworkType.MOBILE))\n      .build();", "modifier": "private static final", "type": "ImmutableList<NetworkProfilerData>", "declarator": "FAKE_DATA =\n    new ImmutableList.Builder<NetworkProfilerData>()\n      .add(FakeNetworkService.newSpeedData(0, 1, 2))\n      .add(FakeNetworkService.newSpeedData(10, 3, 4))\n      .add(FakeNetworkService.newSpeedData(100, 3000000, 4000000))\n      .add(FakeNetworkService.newConnectionData(0, 4))\n      .add(FakeNetworkService.newConnectionData(10, 6))\n      .add(FakeNetworkService.newConnectionData(100, 8000))\n      .add(FakeNetworkService.newRadioData(5, Network.NetworkTypeData.NetworkType.MOBILE))\n      .build()", "var_name": "FAKE_DATA"}, {"original_string": "private static final String TEST_PAYLOAD_ID = \"test\";", "modifier": "private static final", "type": "String", "declarator": "TEST_PAYLOAD_ID = \"test\"", "var_name": "TEST_PAYLOAD_ID"}, {"original_string": "private static final ImmutableList<HttpData> FAKE_HTTP_DATA =\n    new ImmutableList.Builder<HttpData>()\n      .add(TestHttpData.newBuilder(1, 1, 14)\n             .setRequestPayloadId(TEST_PAYLOAD_ID)\n             .setResponsePayloadId(TEST_PAYLOAD_ID).build())\n      .build();", "modifier": "private static final", "type": "ImmutableList<HttpData>", "declarator": "FAKE_HTTP_DATA =\n    new ImmutableList.Builder<HttpData>()\n      .add(TestHttpData.newBuilder(1, 1, 14)\n             .setRequestPayloadId(TEST_PAYLOAD_ID)\n             .setResponsePayloadId(TEST_PAYLOAD_ID).build())\n      .build()", "var_name": "FAKE_HTTP_DATA"}, {"original_string": "private FakeTimer myTimer = new FakeTimer();", "modifier": "private", "type": "FakeTimer", "declarator": "myTimer = new FakeTimer()", "var_name": "myTimer"}, {"original_string": "private FakeTransportService myTransportService = new FakeTransportService(myTimer, true);", "modifier": "private", "type": "FakeTransportService", "declarator": "myTransportService = new FakeTransportService(myTimer, true)", "var_name": "myTransportService"}, {"original_string": "@Rule public FakeGrpcChannel myGrpcChannel =\n    new FakeGrpcChannel(\"NetworkProfilerStageTest\", myTransportService, new FakeProfilerService(myTimer),\n                        new FakeEventService(), new FakeCpuService(), new FakeMemoryService(),\n                        FakeNetworkService.newBuilder().setNetworkDataList(FAKE_DATA)\n                          .setHttpDataList(FAKE_HTTP_DATA).build());", "modifier": "@Rule public", "type": "FakeGrpcChannel", "declarator": "myGrpcChannel =\n    new FakeGrpcChannel(\"NetworkProfilerStageTest\", myTransportService, new FakeProfilerService(myTimer),\n                        new FakeEventService(), new FakeCpuService(), new FakeMemoryService(),\n                        FakeNetworkService.newBuilder().setNetworkDataList(FAKE_DATA)\n                          .setHttpDataList(FAKE_HTTP_DATA).build())", "var_name": "myGrpcChannel"}, {"original_string": "private NetworkProfilerStage myStage;", "modifier": "private", "type": "NetworkProfilerStage", "declarator": "myStage", "var_name": "myStage"}, {"original_string": "private StudioProfilers myStudioProfilers;", "modifier": "private", "type": "StudioProfilers", "declarator": "myStudioProfilers", "var_name": "myStudioProfilers"}], "file": "profilers/testSrc/com/android/tools/profilers/network/NetworkProfilerStageTest.java"}, "test_case": {"identifier": "selectionDisabledWithoutAgent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void selectionDisabledWithoutAgent() {\n    Range selection = myStage.getTimeline().getSelectionRange();\n\n    myTransportService.setAgentStatus(DEFAULT_AGENT_ATTACHED_RESPONSE);\n    myTimer.tick(TimeUnit.SECONDS.toNanos(1));\n    // Need to re-enter the stage again given the device/process can be set and return to the default StudioMonitorStage.\n    myStage.getStudioProfilers().setStage(myStage);\n\n    assertThat(myStage.getStudioProfilers().isAgentAttached()).isTrue();\n\n    myStage.getRangeSelectionModel().set(0, 100);\n    assertThat(selection.getMin()).isWithin(EPSILON).of(0);\n    assertThat(selection.getMax()).isWithin(EPSILON).of(100);\n\n    myTransportService.setAgentStatus(DEFAULT_AGENT_DETACHED_RESPONSE);\n    myTimer.tick(TimeUnit.SECONDS.toNanos(1));\n    assertThat(myStage.getStudioProfilers().isAgentAttached()).isFalse();\n\n    // Attempting to select a range should do nothing.\n    myStage.getRangeSelectionModel().set(100, 200);\n    assertThat(selection.getMin()).isWithin(EPSILON).of(0);\n    assertThat(selection.getMax()).isWithin(EPSILON).of(100);\n  }", "signature": "void selectionDisabledWithoutAgent()", "full_signature": "@Test public void selectionDisabledWithoutAgent()", "class_method_signature": "NetworkProfilerStageTest.selectionDisabledWithoutAgent()", "testcase": true, "constructor": false, "invocations": ["getSelectionRange", "getTimeline", "setAgentStatus", "tick", "toNanos", "setStage", "getStudioProfilers", "isTrue", "assertThat", "isAgentAttached", "getStudioProfilers", "set", "getRangeSelectionModel", "of", "isWithin", "assertThat", "getMin", "of", "isWithin", "assertThat", "getMax", "setAgentStatus", "tick", "toNanos", "isFalse", "assertThat", "isAgentAttached", "getStudioProfilers", "set", "getRangeSelectionModel", "of", "isWithin", "assertThat", "getMin", "of", "isWithin", "assertThat", "getMax"]}, "focal_class": {"identifier": "NetworkProfilerStage", "superclass": "extends StreamingStage", "interfaces": "implements CodeNavigator.Listener", "fields": [{"original_string": "private static final String HAS_USED_NETWORK_SELECTION = \"network.used.selection\";", "modifier": "private static final", "type": "String", "declarator": "HAS_USED_NETWORK_SELECTION = \"network.used.selection\"", "var_name": "HAS_USED_NETWORK_SELECTION"}, {"original_string": "private static final BaseAxisFormatter TRAFFIC_AXIS_FORMATTER = new NetworkTrafficFormatter(1, 5, 5);", "modifier": "private static final", "type": "BaseAxisFormatter", "declarator": "TRAFFIC_AXIS_FORMATTER = new NetworkTrafficFormatter(1, 5, 5)", "var_name": "TRAFFIC_AXIS_FORMATTER"}, {"original_string": "private static final BaseAxisFormatter CONNECTIONS_AXIS_FORMATTER = new SingleUnitAxisFormatter(1, 5, 1, \"\");", "modifier": "private static final", "type": "BaseAxisFormatter", "declarator": "CONNECTIONS_AXIS_FORMATTER = new SingleUnitAxisFormatter(1, 5, 1, \"\")", "var_name": "CONNECTIONS_AXIS_FORMATTER"}, {"original_string": "@Nullable\n  private HttpData mySelectedConnection;", "modifier": "@Nullable\n  private", "type": "HttpData", "declarator": "mySelectedConnection", "var_name": "mySelectedConnection"}, {"original_string": "@SuppressWarnings(\"FieldCanBeLocal\") private AspectObserver myAspectObserver = new AspectObserver();", "modifier": "@SuppressWarnings(\"FieldCanBeLocal\") private", "type": "AspectObserver", "declarator": "myAspectObserver = new AspectObserver()", "var_name": "myAspectObserver"}, {"original_string": "private AspectModel<NetworkProfilerAspect> myAspect = new AspectModel<>();", "modifier": "private", "type": "AspectModel<NetworkProfilerAspect>", "declarator": "myAspect = new AspectModel<>()", "var_name": "myAspect"}, {"original_string": "private final NetworkConnectionsModel myConnectionsModel;", "modifier": "private final", "type": "NetworkConnectionsModel", "declarator": "myConnectionsModel", "var_name": "myConnectionsModel"}, {"original_string": "private final DetailedNetworkUsage myDetailedNetworkUsage;", "modifier": "private final", "type": "DetailedNetworkUsage", "declarator": "myDetailedNetworkUsage", "var_name": "myDetailedNetworkUsage"}, {"original_string": "private final NetworkStageLegends myLegends;", "modifier": "private final", "type": "NetworkStageLegends", "declarator": "myLegends", "var_name": "myLegends"}, {"original_string": "private final NetworkStageLegends myTooltipLegends;", "modifier": "private final", "type": "NetworkStageLegends", "declarator": "myTooltipLegends", "var_name": "myTooltipLegends"}, {"original_string": "private final ClampedAxisComponentModel myTrafficAxis;", "modifier": "private final", "type": "ClampedAxisComponentModel", "declarator": "myTrafficAxis", "var_name": "myTrafficAxis"}, {"original_string": "private final ClampedAxisComponentModel myConnectionsAxis;", "modifier": "private final", "type": "ClampedAxisComponentModel", "declarator": "myConnectionsAxis", "var_name": "myConnectionsAxis"}, {"original_string": "private final EventMonitor myEventMonitor;", "modifier": "private final", "type": "EventMonitor", "declarator": "myEventMonitor", "var_name": "myEventMonitor"}, {"original_string": "private final StackTraceModel myStackTraceModel;", "modifier": "private final", "type": "StackTraceModel", "declarator": "myStackTraceModel", "var_name": "myStackTraceModel"}, {"original_string": "private final RangeSelectionModel myRangeSelectionModel;", "modifier": "private final", "type": "RangeSelectionModel", "declarator": "myRangeSelectionModel", "var_name": "myRangeSelectionModel"}, {"original_string": "private final HttpDataFetcher myHttpDataFetcher;", "modifier": "private final", "type": "HttpDataFetcher", "declarator": "myHttpDataFetcher", "var_name": "myHttpDataFetcher"}, {"original_string": "private final EaseOutModel myInstructionsEaseOutModel;", "modifier": "private final", "type": "EaseOutModel", "declarator": "myInstructionsEaseOutModel", "var_name": "myInstructionsEaseOutModel"}], "methods": [{"identifier": "NetworkProfilerStage", "parameters": "(StudioProfilers profilers)", "modifiers": "public", "return": "", "signature": " NetworkProfilerStage(StudioProfilers profilers)", "full_signature": "public  NetworkProfilerStage(StudioProfilers profilers)", "class_method_signature": "NetworkProfilerStage.NetworkProfilerStage(StudioProfilers profilers)", "testcase": false, "constructor": true}, {"identifier": "hasUserUsedNetworkSelection", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasUserUsedNetworkSelection()", "full_signature": "public boolean hasUserUsedNetworkSelection()", "class_method_signature": "NetworkProfilerStage.hasUserUsedNetworkSelection()", "testcase": false, "constructor": false}, {"identifier": "getConnectionsModel", "parameters": "()", "modifiers": "@NotNull public", "return": "NetworkConnectionsModel", "signature": "NetworkConnectionsModel getConnectionsModel()", "full_signature": "@NotNull public NetworkConnectionsModel getConnectionsModel()", "class_method_signature": "NetworkProfilerStage.getConnectionsModel()", "testcase": false, "constructor": false}, {"identifier": "getRangeSelectionModel", "parameters": "()", "modifiers": "@NotNull public", "return": "RangeSelectionModel", "signature": "RangeSelectionModel getRangeSelectionModel()", "full_signature": "@NotNull public RangeSelectionModel getRangeSelectionModel()", "class_method_signature": "NetworkProfilerStage.getRangeSelectionModel()", "testcase": false, "constructor": false}, {"identifier": "getStackTraceModel", "parameters": "()", "modifiers": "@NotNull public", "return": "StackTraceModel", "signature": "StackTraceModel getStackTraceModel()", "full_signature": "@NotNull public StackTraceModel getStackTraceModel()", "class_method_signature": "NetworkProfilerStage.getStackTraceModel()", "testcase": false, "constructor": false}, {"identifier": "getHttpDataFetcher", "parameters": "()", "modifiers": "@NotNull public", "return": "HttpDataFetcher", "signature": "HttpDataFetcher getHttpDataFetcher()", "full_signature": "@NotNull public HttpDataFetcher getHttpDataFetcher()", "class_method_signature": "NetworkProfilerStage.getHttpDataFetcher()", "testcase": false, "constructor": false}, {"identifier": "setSelectedConnection", "parameters": "(@Nullable HttpData data)", "modifiers": "public", "return": "boolean", "signature": "boolean setSelectedConnection(@Nullable HttpData data)", "full_signature": "public boolean setSelectedConnection(@Nullable HttpData data)", "class_method_signature": "NetworkProfilerStage.setSelectedConnection(@Nullable HttpData data)", "testcase": false, "constructor": false}, {"identifier": "getSelectedConnection", "parameters": "()", "modifiers": "@Nullable public", "return": "HttpData", "signature": "HttpData getSelectedConnection()", "full_signature": "@Nullable public HttpData getSelectedConnection()", "class_method_signature": "NetworkProfilerStage.getSelectedConnection()", "testcase": false, "constructor": false}, {"identifier": "getAspect", "parameters": "()", "modifiers": "@NotNull public", "return": "AspectModel<NetworkProfilerAspect>", "signature": "AspectModel<NetworkProfilerAspect> getAspect()", "full_signature": "@NotNull public AspectModel<NetworkProfilerAspect> getAspect()", "class_method_signature": "NetworkProfilerStage.getAspect()", "testcase": false, "constructor": false}, {"identifier": "enter", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void enter()", "full_signature": "@Override public void enter()", "class_method_signature": "NetworkProfilerStage.enter()", "testcase": false, "constructor": false}, {"identifier": "exit", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void exit()", "full_signature": "@Override public void exit()", "class_method_signature": "NetworkProfilerStage.exit()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@NotNull public", "return": "String", "signature": "String getName()", "full_signature": "@NotNull public String getName()", "class_method_signature": "NetworkProfilerStage.getName()", "testcase": false, "constructor": false}, {"identifier": "getDetailedNetworkUsage", "parameters": "()", "modifiers": "@NotNull public", "return": "DetailedNetworkUsage", "signature": "DetailedNetworkUsage getDetailedNetworkUsage()", "full_signature": "@NotNull public DetailedNetworkUsage getDetailedNetworkUsage()", "class_method_signature": "NetworkProfilerStage.getDetailedNetworkUsage()", "testcase": false, "constructor": false}, {"identifier": "getTrafficAxis", "parameters": "()", "modifiers": "@NotNull public", "return": "AxisComponentModel", "signature": "AxisComponentModel getTrafficAxis()", "full_signature": "@NotNull public AxisComponentModel getTrafficAxis()", "class_method_signature": "NetworkProfilerStage.getTrafficAxis()", "testcase": false, "constructor": false}, {"identifier": "getConnectionsAxis", "parameters": "()", "modifiers": "@NotNull public", "return": "AxisComponentModel", "signature": "AxisComponentModel getConnectionsAxis()", "full_signature": "@NotNull public AxisComponentModel getConnectionsAxis()", "class_method_signature": "NetworkProfilerStage.getConnectionsAxis()", "testcase": false, "constructor": false}, {"identifier": "getLegends", "parameters": "()", "modifiers": "@NotNull public", "return": "NetworkStageLegends", "signature": "NetworkStageLegends getLegends()", "full_signature": "@NotNull public NetworkStageLegends getLegends()", "class_method_signature": "NetworkProfilerStage.getLegends()", "testcase": false, "constructor": false}, {"identifier": "getTooltipLegends", "parameters": "()", "modifiers": "@NotNull public", "return": "NetworkStageLegends", "signature": "NetworkStageLegends getTooltipLegends()", "full_signature": "@NotNull public NetworkStageLegends getTooltipLegends()", "class_method_signature": "NetworkProfilerStage.getTooltipLegends()", "testcase": false, "constructor": false}, {"identifier": "getInstructionsEaseOutModel", "parameters": "()", "modifiers": "@NotNull public", "return": "EaseOutModel", "signature": "EaseOutModel getInstructionsEaseOutModel()", "full_signature": "@NotNull public EaseOutModel getInstructionsEaseOutModel()", "class_method_signature": "NetworkProfilerStage.getInstructionsEaseOutModel()", "testcase": false, "constructor": false}, {"identifier": "getEventMonitor", "parameters": "()", "modifiers": "@NotNull public", "return": "EventMonitor", "signature": "EventMonitor getEventMonitor()", "full_signature": "@NotNull public EventMonitor getEventMonitor()", "class_method_signature": "NetworkProfilerStage.getEventMonitor()", "testcase": false, "constructor": false}, {"identifier": "onNavigated", "parameters": "(@NotNull CodeLocation location)", "modifiers": "@Override public", "return": "void", "signature": "void onNavigated(@NotNull CodeLocation location)", "full_signature": "@Override public void onNavigated(@NotNull CodeLocation location)", "class_method_signature": "NetworkProfilerStage.onNavigated(@NotNull CodeLocation location)", "testcase": false, "constructor": false}], "file": "profilers/src/com/android/tools/profilers/network/NetworkProfilerStage.java"}, "focal_method": {"identifier": "getRangeSelectionModel", "parameters": "()", "modifiers": "@NotNull public", "return": "RangeSelectionModel", "body": "@NotNull\n  public RangeSelectionModel getRangeSelectionModel() {\n    return myRangeSelectionModel;\n  }", "signature": "RangeSelectionModel getRangeSelectionModel()", "full_signature": "@NotNull public RangeSelectionModel getRangeSelectionModel()", "class_method_signature": "NetworkProfilerStage.getRangeSelectionModel()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}