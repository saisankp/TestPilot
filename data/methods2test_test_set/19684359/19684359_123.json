{"test_class": {"identifier": "NoopFederatedExportToCloudStorageTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Table table;", "modifier": "private", "type": "Table", "declarator": "table", "var_name": "table"}, {"original_string": "private Configuration conf;", "modifier": "private", "type": "Configuration", "declarator": "conf", "var_name": "conf"}, {"original_string": "private final BigQueryHelper helper = new BigQueryHelper(null);", "modifier": "private final", "type": "BigQueryHelper", "declarator": "helper = new BigQueryHelper(null)", "var_name": "helper"}, {"original_string": "private final String projectId = \"project-id\";", "modifier": "private final", "type": "String", "declarator": "projectId = \"project-id\"", "var_name": "projectId"}], "file": "bigquery/src/test/java/com/google/cloud/hadoop/io/bigquery/NoopFederatedExportToCloudStorageTest.java"}, "test_case": {"identifier": "testGetCommaSeparatedGcsPathList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetCommaSeparatedGcsPathList() throws Exception {\n    String result = NoopFederatedExportToCloudStorage.getCommaSeparatedGcsPathList(table);\n    assertThat(result)\n        .isEqualTo(\"gs://foo-bucket/bar-dir/glob-*.avro,gs://foo-bucket/bar-dir/file.avro\");\n  }", "signature": "void testGetCommaSeparatedGcsPathList()", "full_signature": "@Test public void testGetCommaSeparatedGcsPathList()", "class_method_signature": "NoopFederatedExportToCloudStorageTest.testGetCommaSeparatedGcsPathList()", "testcase": true, "constructor": false, "invocations": ["getCommaSeparatedGcsPathList", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "NoopFederatedExportToCloudStorage", "superclass": "extends UnshardedExportToCloudStorage", "interfaces": "", "fields": [{"original_string": "protected final List<String> gcsPaths;", "modifier": "protected final", "type": "List<String>", "declarator": "gcsPaths", "var_name": "gcsPaths"}], "methods": [{"identifier": "NoopFederatedExportToCloudStorage", "parameters": "(\n      Configuration configuration,\n      ExportFileFormat fileFormat,\n      BigQueryHelper bigQueryHelper,\n      String projectId,\n      Table table,\n      @Nullable InputFormat<LongWritable, Text> delegateInputFormat)", "modifiers": "public", "return": "", "signature": " NoopFederatedExportToCloudStorage(\n      Configuration configuration,\n      ExportFileFormat fileFormat,\n      BigQueryHelper bigQueryHelper,\n      String projectId,\n      Table table,\n      @Nullable InputFormat<LongWritable, Text> delegateInputFormat)", "full_signature": "public  NoopFederatedExportToCloudStorage(\n      Configuration configuration,\n      ExportFileFormat fileFormat,\n      BigQueryHelper bigQueryHelper,\n      String projectId,\n      Table table,\n      @Nullable InputFormat<LongWritable, Text> delegateInputFormat)", "class_method_signature": "NoopFederatedExportToCloudStorage.NoopFederatedExportToCloudStorage(\n      Configuration configuration,\n      ExportFileFormat fileFormat,\n      BigQueryHelper bigQueryHelper,\n      String projectId,\n      Table table,\n      @Nullable InputFormat<LongWritable, Text> delegateInputFormat)", "testcase": false, "constructor": true}, {"identifier": "getCommaSeparatedGcsPathList", "parameters": "(final Table table)", "modifiers": "@VisibleForTesting static", "return": "String", "signature": "String getCommaSeparatedGcsPathList(final Table table)", "full_signature": "@VisibleForTesting static String getCommaSeparatedGcsPathList(final Table table)", "class_method_signature": "NoopFederatedExportToCloudStorage.getCommaSeparatedGcsPathList(final Table table)", "testcase": false, "constructor": false}, {"identifier": "prepare", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void prepare()", "full_signature": "@Override public void prepare()", "class_method_signature": "NoopFederatedExportToCloudStorage.prepare()", "testcase": false, "constructor": false}, {"identifier": "beginExport", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void beginExport()", "full_signature": "@Override public void beginExport()", "class_method_signature": "NoopFederatedExportToCloudStorage.beginExport()", "testcase": false, "constructor": false}, {"identifier": "waitForUsableMapReduceInput", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void waitForUsableMapReduceInput()", "full_signature": "@Override public void waitForUsableMapReduceInput()", "class_method_signature": "NoopFederatedExportToCloudStorage.waitForUsableMapReduceInput()", "testcase": false, "constructor": false}, {"identifier": "getExportPaths", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getExportPaths()", "full_signature": "@Override public List<String> getExportPaths()", "class_method_signature": "NoopFederatedExportToCloudStorage.getExportPaths()", "testcase": false, "constructor": false}, {"identifier": "cleanupExport", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void cleanupExport()", "full_signature": "@Override public void cleanupExport()", "class_method_signature": "NoopFederatedExportToCloudStorage.cleanupExport()", "testcase": false, "constructor": false}], "file": "bigquery/src/main/java/com/google/cloud/hadoop/io/bigquery/NoopFederatedExportToCloudStorage.java"}, "focal_method": {"identifier": "getCommaSeparatedGcsPathList", "parameters": "(final Table table)", "modifiers": "@VisibleForTesting static", "return": "String", "body": "@VisibleForTesting\n  static String getCommaSeparatedGcsPathList(final Table table) {\n    Preconditions.checkNotNull(table.getExternalDataConfiguration());\n    for (String uri : table.getExternalDataConfiguration().getSourceUris()) {\n      Preconditions.checkArgument(uri.startsWith(\"gs://\"), \"Invalid GCS resource: '%s'\", uri);\n    }\n    // FileInputFormat accepts a comma separated list of potentially globbed paths.\n    return Joiner.on(\",\").join(table.getExternalDataConfiguration().getSourceUris());\n  }", "signature": "String getCommaSeparatedGcsPathList(final Table table)", "full_signature": "@VisibleForTesting static String getCommaSeparatedGcsPathList(final Table table)", "class_method_signature": "NoopFederatedExportToCloudStorage.getCommaSeparatedGcsPathList(final Table table)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "getExternalDataConfiguration", "getSourceUris", "getExternalDataConfiguration", "checkArgument", "startsWith", "join", "on", "getSourceUris", "getExternalDataConfiguration"]}, "repository": {"repo_id": 19684359, "url": "https://github.com/GoogleCloudDataproc/bigdata-interop", "stars": 178, "created": "5/12/2014 3:11:55 AM +00:00", "updates": "2020-01-23T23:10:40+00:00", "fork": "False", "license": "licensed"}}