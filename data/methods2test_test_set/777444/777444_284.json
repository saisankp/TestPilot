{"test_class": {"identifier": "WebSphereDetectorTest", "superclass": "extends BaseDetectorTest", "interfaces": "", "fields": [{"original_string": "private static String SERVER_MBEAN = \"WebSphere:cell=bhutNode02Cell,j2eeType=J2EEServer,\" +\n                                         \"mbeanIdentifier=cells/bhutNode02Cell/nodes/bhutNode02/servers/server1/server.xml#Server_1245012281417,\" +\n                                         \"name=server1,node=bhutNode02,platform=proxy,process=server1,processType=UnManagedProcess,\" +\n                                         \"spec=1.0,type=Server,version=6.1.0.33\";", "modifier": "private static", "type": "String", "declarator": "SERVER_MBEAN = \"WebSphere:cell=bhutNode02Cell,j2eeType=J2EEServer,\" +\n                                         \"mbeanIdentifier=cells/bhutNode02Cell/nodes/bhutNode02/servers/server1/server.xml#Server_1245012281417,\" +\n                                         \"name=server1,node=bhutNode02,platform=proxy,process=server1,processType=UnManagedProcess,\" +\n                                         \"spec=1.0,type=Server,version=6.1.0.33\"", "var_name": "SERVER_MBEAN"}, {"original_string": "private static String SERVER_VERSION_V6 =\n            \"--------------------------------------------------------------------------------\\n\" +\n            \"IBM WebSphere Application Server Product Installation Status Report\\n\" +\n            \"--------------------------------------------------------------------------------\\n\" +\n            \"\\n\" +\n            \"Report at date and time November 29, 2010 11:46:41 AM CET\\n\" +\n            \"\\n\" +\n            \"Installation\\n\" +\n            \"--------------------------------------------------------------------------------\\n\" +\n            \"Product Directory        /opt/websphere/was61\\n\" +\n            \"Version Directory        /opt/websphere/was61/properties/version\\n\" +\n            \"DTD Directory            /opt/websphere/was61/properties/version/dtd\\n\" +\n            \"Log Directory            /opt/websphere/was61/logs\\n\" +\n            \"Backup Directory         /opt/websphere/was61/properties/version/nif/backup\\n\" +\n            \"TMP Directory            /tmp\\n\" +\n            \"\\n\" +\n            \"Product List\\n\" +\n            \"--------------------------------------------------------------------------------\\n\" +\n            \"ND                       installed\\n\" +\n            \"\\n\" +\n            \"Installed Product\\n\" +\n            \"--------------------------------------------------------------------------------\\n\" +\n            \"Name                     IBM WebSphere Application Server - ND\\n\" +\n            \"Version                  6.1.0.33\\n\" +\n            \"ID                       ND\\n\" +\n            \"Build Level              cf331032.09\\n\" +\n            \"Build Date               8/14/10\\n\" +\n            \"\\n\" +\n            \"--------------------------------------------------------------------------------\\n\" +\n            \"End Installation Status Report\\n\" +\n            \"--------------------------------------------------------------------------------\";", "modifier": "private static", "type": "String", "declarator": "SERVER_VERSION_V6 =\n            \"--------------------------------------------------------------------------------\\n\" +\n            \"IBM WebSphere Application Server Product Installation Status Report\\n\" +\n            \"--------------------------------------------------------------------------------\\n\" +\n            \"\\n\" +\n            \"Report at date and time November 29, 2010 11:46:41 AM CET\\n\" +\n            \"\\n\" +\n            \"Installation\\n\" +\n            \"--------------------------------------------------------------------------------\\n\" +\n            \"Product Directory        /opt/websphere/was61\\n\" +\n            \"Version Directory        /opt/websphere/was61/properties/version\\n\" +\n            \"DTD Directory            /opt/websphere/was61/properties/version/dtd\\n\" +\n            \"Log Directory            /opt/websphere/was61/logs\\n\" +\n            \"Backup Directory         /opt/websphere/was61/properties/version/nif/backup\\n\" +\n            \"TMP Directory            /tmp\\n\" +\n            \"\\n\" +\n            \"Product List\\n\" +\n            \"--------------------------------------------------------------------------------\\n\" +\n            \"ND                       installed\\n\" +\n            \"\\n\" +\n            \"Installed Product\\n\" +\n            \"--------------------------------------------------------------------------------\\n\" +\n            \"Name                     IBM WebSphere Application Server - ND\\n\" +\n            \"Version                  6.1.0.33\\n\" +\n            \"ID                       ND\\n\" +\n            \"Build Level              cf331032.09\\n\" +\n            \"Build Date               8/14/10\\n\" +\n            \"\\n\" +\n            \"--------------------------------------------------------------------------------\\n\" +\n            \"End Installation Status Report\\n\" +\n            \"--------------------------------------------------------------------------------\"", "var_name": "SERVER_VERSION_V6"}], "file": "agent/core/src/test/java/org/jolokia/detector/WebSphereDetectorTest.java"}, "test_case": {"identifier": "detect", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void detect() throws MalformedObjectNameException, InstanceNotFoundException, ReflectionException, AttributeNotFoundException, MBeanException {\n        ServerDetector detector = new WebsphereDetector();\n        ObjectName serverMbean = new ObjectName(SERVER_MBEAN);\n        MBeanServer mockServer = createMock(MBeanServer.class);\n        expect(mockServer.queryNames(new ObjectName(\"*:j2eeType=J2EEServer,type=Server,*\"),null)).\n                andStubReturn(new HashSet<ObjectName>(Arrays.asList(serverMbean)));\n        expect(mockServer.isRegistered(serverMbean)).andStubReturn(true);\n        expect(mockServer.getAttribute(serverMbean,\"platformName\")).andReturn(\"IBM WebSphere Application Server\");\n        expect(mockServer.getAttribute(serverMbean,\"serverVersion\")).andReturn(SERVER_VERSION_V6);\n        replay(mockServer);\n\n        ServerHandle info = detector.detect(getMBeanServerManager(mockServer));\n        assertEquals(info.getVendor(),\"IBM\");\n        assertEquals(info.getProduct(),\"websphere\");\n        assertNotNull(info.getExtraInfo(null));\n        assertEquals(info.getExtraInfo(null).get(\"buildDate\"),\"8/14/10\");\n    }", "signature": "void detect()", "full_signature": "@Test public void detect()", "class_method_signature": "WebSphereDetectorTest.detect()", "testcase": true, "constructor": false, "invocations": ["createMock", "andStubReturn", "expect", "queryNames", "asList", "andStubReturn", "expect", "isRegistered", "andReturn", "expect", "getAttribute", "andReturn", "expect", "getAttribute", "replay", "detect", "getMBeanServerManager", "assertEquals", "getVendor", "assertEquals", "getProduct", "assertNotNull", "getExtraInfo", "assertEquals", "get", "getExtraInfo"]}, "focal_class": {"identifier": "WebsphereDetector", "superclass": "extends AbstractServerDetector", "interfaces": "", "fields": [{"original_string": "private static final Pattern SERVER_VERSION_PATTERN =\n            Pattern.compile(\"^Version\\\\s+([0-9.]+)\\\\s*$.*?^Build Date\\\\s+([0-9/]+)\\\\s*$\",\n                            Pattern.MULTILINE | Pattern.DOTALL | Pattern.CASE_INSENSITIVE);", "modifier": "private static final", "type": "Pattern", "declarator": "SERVER_VERSION_PATTERN =\n            Pattern.compile(\"^Version\\\\s+([0-9.]+)\\\\s*$.*?^Build Date\\\\s+([0-9/]+)\\\\s*$\",\n                            Pattern.MULTILINE | Pattern.DOTALL | Pattern.CASE_INSENSITIVE)", "var_name": "SERVER_VERSION_PATTERN"}, {"original_string": "public static final  String  INTERNAL_ERROR_MSG = \"Internal: Found AdminServiceFactory but can not call methods on it (wrong WAS version ?)\";", "modifier": "public static final", "type": "String", "declarator": "INTERNAL_ERROR_MSG = \"Internal: Found AdminServiceFactory but can not call methods on it (wrong WAS version ?)\"", "var_name": "INTERNAL_ERROR_MSG"}, {"original_string": "private boolean isWebsphere = ClassUtil.checkForClass(\"com.ibm.websphere.management.AdminServiceFactory\");", "modifier": "private", "type": "boolean", "declarator": "isWebsphere = ClassUtil.checkForClass(\"com.ibm.websphere.management.AdminServiceFactory\")", "var_name": "isWebsphere"}, {"original_string": "private boolean isWebsphere7 = ClassUtil.checkForClass(\"com.ibm.websphere.management.AdminContext\");", "modifier": "private", "type": "boolean", "declarator": "isWebsphere7 = ClassUtil.checkForClass(\"com.ibm.websphere.management.AdminContext\")", "var_name": "isWebsphere7"}, {"original_string": "private boolean isWebsphere6 = isWebsphere && !isWebsphere7;", "modifier": "private", "type": "boolean", "declarator": "isWebsphere6 = isWebsphere && !isWebsphere7", "var_name": "isWebsphere6"}], "methods": [{"identifier": "detect", "parameters": "(MBeanServerExecutor pMBeanServerExecutor)", "modifiers": "public", "return": "ServerHandle", "signature": "ServerHandle detect(MBeanServerExecutor pMBeanServerExecutor)", "full_signature": "public ServerHandle detect(MBeanServerExecutor pMBeanServerExecutor)", "class_method_signature": "WebsphereDetector.detect(MBeanServerExecutor pMBeanServerExecutor)", "testcase": false, "constructor": false}, {"identifier": "addMBeanServers", "parameters": "(Set<MBeanServerConnection> servers)", "modifiers": "@Override public", "return": "void", "signature": "void addMBeanServers(Set<MBeanServerConnection> servers)", "full_signature": "@Override public void addMBeanServers(Set<MBeanServerConnection> servers)", "class_method_signature": "WebsphereDetector.addMBeanServers(Set<MBeanServerConnection> servers)", "testcase": false, "constructor": false}], "file": "agent/core/src/main/java/org/jolokia/detector/WebsphereDetector.java"}, "focal_method": {"identifier": "detect", "parameters": "(MBeanServerExecutor pMBeanServerExecutor)", "modifiers": "public", "return": "ServerHandle", "body": "public ServerHandle detect(MBeanServerExecutor pMBeanServerExecutor) {\n        String serverVersion =\n                getSingleStringAttribute(pMBeanServerExecutor, \"*:j2eeType=J2EEServer,type=Server,*\", \"serverVersion\");\n        if (serverVersion != null && serverVersion.contains(\"WebSphere\")) {\n            Matcher matcher = SERVER_VERSION_PATTERN.matcher(serverVersion);\n            if (matcher.find()) {\n                String version = matcher.group(1);\n                String date = matcher.group(2);\n                JSONObject extraInfo = new JSONObject();\n                if (date != null) {\n                    extraInfo.put(\"buildDate\",date);\n                }\n                return new WebsphereServerHandle(version, extraInfo.size() > 0 ? extraInfo : null);\n            }\n            return null;\n        } else if (isWebsphere) {\n            return new WebsphereServerHandle(isWebsphere6 ? \"6\" : \"7 or 8\", null);\n        }\n        return null;\n    }", "signature": "ServerHandle detect(MBeanServerExecutor pMBeanServerExecutor)", "full_signature": "public ServerHandle detect(MBeanServerExecutor pMBeanServerExecutor)", "class_method_signature": "WebsphereDetector.detect(MBeanServerExecutor pMBeanServerExecutor)", "testcase": false, "constructor": false, "invocations": ["getSingleStringAttribute", "contains", "matcher", "find", "group", "group", "put", "size"]}, "repository": {"repo_id": 777444, "url": "https://github.com/rhuss/jolokia", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 682, "size": 20451, "license": "licensed"}}