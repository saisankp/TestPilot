{"test_class": {"identifier": "SymbolicAddressMapTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BoundedSetFactory<SymbolicAddress> bsf2;", "modifier": "private", "type": "BoundedSetFactory<SymbolicAddress>", "declarator": "bsf2", "var_name": "bsf2"}], "file": "java/tools/src/com/jopdesign/dfa/analyses/SymbolicAddressMapTest.java"}, "test_case": {"identifier": "testClone", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testClone() {\n\t\tSymbolicAddressMap m1 = map1();\n\t\tSymbolicAddressMap m2 = map2();\n\t\tSymbolicAddressMap top = SymbolicAddressMap.top().clone();\n\t\tassert(m1.equals(m1.clone()));\n\t\tassert(m1.equals(m2.clone()));\n\t\tassert(m1.equals(top.clone()));\n\t}", "signature": "void testClone()", "full_signature": "@Test public void testClone()", "class_method_signature": "SymbolicAddressMapTest.testClone()", "testcase": true, "constructor": false, "invocations": ["map1", "map2", "clone", "top", "equals", "clone", "equals", "clone", "equals", "clone"]}, "focal_class": {"identifier": "SymbolicAddressMap", "superclass": "", "interfaces": "", "fields": [{"original_string": "@SuppressWarnings(\"unchecked\")\n\tprivate static SymbolicAddressMap _top =\n\t\tnew SymbolicAddressMap(new BoundedSetFactory(0), (HashMap)null, (HashMap) null);", "modifier": "@SuppressWarnings(\"unchecked\")\n\tprivate static", "type": "SymbolicAddressMap", "declarator": "_top =\n\t\tnew SymbolicAddressMap(new BoundedSetFactory(0), (HashMap)null, (HashMap) null)", "var_name": "_top"}, {"original_string": "private BoundedSetFactory<SymbolicAddress> bsFactory;", "modifier": "private", "type": "BoundedSetFactory<SymbolicAddress>", "declarator": "bsFactory", "var_name": "bsFactory"}, {"original_string": "private Map<Location, BoundedSet<SymbolicAddress>> mapP;", "modifier": "private", "type": "Map<Location, BoundedSet<SymbolicAddress>>", "declarator": "mapP", "var_name": "mapP"}, {"original_string": "private HashMap<String, BoundedSet<SymbolicAddress>> mapA;", "modifier": "private", "type": "HashMap<String, BoundedSet<SymbolicAddress>>", "declarator": "mapA", "var_name": "mapA"}], "methods": [{"identifier": "isTop", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isTop()", "full_signature": "public boolean isTop()", "class_method_signature": "SymbolicAddressMap.isTop()", "testcase": false, "constructor": false}, {"identifier": "setTop", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setTop()", "full_signature": "private void setTop()", "class_method_signature": "SymbolicAddressMap.setTop()", "testcase": false, "constructor": false}, {"identifier": "SymbolicAddressMap", "parameters": "(BoundedSetFactory<SymbolicAddress> bsFactory)", "modifiers": "public", "return": "", "signature": " SymbolicAddressMap(BoundedSetFactory<SymbolicAddress> bsFactory)", "full_signature": "public  SymbolicAddressMap(BoundedSetFactory<SymbolicAddress> bsFactory)", "class_method_signature": "SymbolicAddressMap.SymbolicAddressMap(BoundedSetFactory<SymbolicAddress> bsFactory)", "testcase": false, "constructor": true}, {"identifier": "top", "parameters": "()", "modifiers": "public static", "return": "SymbolicAddressMap", "signature": "SymbolicAddressMap top()", "full_signature": "public static SymbolicAddressMap top()", "class_method_signature": "SymbolicAddressMap.top()", "testcase": false, "constructor": false}, {"identifier": "SymbolicAddressMap", "parameters": "(BoundedSetFactory<SymbolicAddress> bsFactory,\n\t\t\t\t\t\t\t   HashMap<Location,BoundedSet<SymbolicAddress>> initP,\n\t\t\t\t\t\t\t   HashMap<String,BoundedSet<SymbolicAddress>> initA)", "modifiers": "private", "return": "", "signature": " SymbolicAddressMap(BoundedSetFactory<SymbolicAddress> bsFactory,\n\t\t\t\t\t\t\t   HashMap<Location,BoundedSet<SymbolicAddress>> initP,\n\t\t\t\t\t\t\t   HashMap<String,BoundedSet<SymbolicAddress>> initA)", "full_signature": "private  SymbolicAddressMap(BoundedSetFactory<SymbolicAddress> bsFactory,\n\t\t\t\t\t\t\t   HashMap<Location,BoundedSet<SymbolicAddress>> initP,\n\t\t\t\t\t\t\t   HashMap<String,BoundedSet<SymbolicAddress>> initA)", "class_method_signature": "SymbolicAddressMap.SymbolicAddressMap(BoundedSetFactory<SymbolicAddress> bsFactory,\n\t\t\t\t\t\t\t   HashMap<Location,BoundedSet<SymbolicAddress>> initP,\n\t\t\t\t\t\t\t   HashMap<String,BoundedSet<SymbolicAddress>> initA)", "testcase": false, "constructor": true}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "SymbolicAddressMap.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "SymbolicAddressMap.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "isSubset", "parameters": "(SymbolicAddressMap other)", "modifiers": "public", "return": "boolean", "signature": "boolean isSubset(SymbolicAddressMap other)", "full_signature": "public boolean isSubset(SymbolicAddressMap other)", "class_method_signature": "SymbolicAddressMap.isSubset(SymbolicAddressMap other)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override protected", "return": "SymbolicAddressMap", "signature": "SymbolicAddressMap clone()", "full_signature": "@Override protected SymbolicAddressMap clone()", "class_method_signature": "SymbolicAddressMap.clone()", "testcase": false, "constructor": false}, {"identifier": "cloneFilterStack", "parameters": "(int bound)", "modifiers": "public", "return": "SymbolicAddressMap", "signature": "SymbolicAddressMap cloneFilterStack(int bound)", "full_signature": "public SymbolicAddressMap cloneFilterStack(int bound)", "class_method_signature": "SymbolicAddressMap.cloneFilterStack(int bound)", "testcase": false, "constructor": false}, {"identifier": "cloneInvoke", "parameters": "(int framePtr)", "modifiers": "public", "return": "SymbolicAddressMap", "signature": "SymbolicAddressMap cloneInvoke(int framePtr)", "full_signature": "public SymbolicAddressMap cloneInvoke(int framePtr)", "class_method_signature": "SymbolicAddressMap.cloneInvoke(int framePtr)", "testcase": false, "constructor": false}, {"identifier": "addStackUpto", "parameters": "(SymbolicAddressMap in, int bound)", "modifiers": "public", "return": "void", "signature": "void addStackUpto(SymbolicAddressMap in, int bound)", "full_signature": "public void addStackUpto(SymbolicAddressMap in, int bound)", "class_method_signature": "SymbolicAddressMap.addStackUpto(SymbolicAddressMap in, int bound)", "testcase": false, "constructor": false}, {"identifier": "join", "parameters": "(SymbolicAddressMap b)", "modifiers": "public", "return": "void", "signature": "void join(SymbolicAddressMap b)", "full_signature": "public void join(SymbolicAddressMap b)", "class_method_signature": "SymbolicAddressMap.join(SymbolicAddressMap b)", "testcase": false, "constructor": false}, {"identifier": "joinReturned", "parameters": "(SymbolicAddressMap returned, int framePtr)", "modifiers": "public", "return": "void", "signature": "void joinReturned(SymbolicAddressMap returned, int framePtr)", "full_signature": "public void joinReturned(SymbolicAddressMap returned, int framePtr)", "class_method_signature": "SymbolicAddressMap.joinReturned(SymbolicAddressMap returned, int framePtr)", "testcase": false, "constructor": false}, {"identifier": "copyStack", "parameters": "(SymbolicAddressMap in, int dst, int src)", "modifiers": "public", "return": "void", "signature": "void copyStack(SymbolicAddressMap in, int dst, int src)", "full_signature": "public void copyStack(SymbolicAddressMap in, int dst, int src)", "class_method_signature": "SymbolicAddressMap.copyStack(SymbolicAddressMap in, int dst, int src)", "testcase": false, "constructor": false}, {"identifier": "getStack", "parameters": "(int index)", "modifiers": "public", "return": "BoundedSet<SymbolicAddress>", "signature": "BoundedSet<SymbolicAddress> getStack(int index)", "full_signature": "public BoundedSet<SymbolicAddress> getStack(int index)", "class_method_signature": "SymbolicAddressMap.getStack(int index)", "testcase": false, "constructor": false}, {"identifier": "putStack", "parameters": "(int index, BoundedSet<SymbolicAddress> bs)", "modifiers": "public", "return": "void", "signature": "void putStack(int index, BoundedSet<SymbolicAddress> bs)", "full_signature": "public void putStack(int index, BoundedSet<SymbolicAddress> bs)", "class_method_signature": "SymbolicAddressMap.putStack(int index, BoundedSet<SymbolicAddress> bs)", "testcase": false, "constructor": false}, {"identifier": "getHeap", "parameters": "(String staticfield)", "modifiers": "public", "return": "BoundedSet<SymbolicAddress>", "signature": "BoundedSet<SymbolicAddress> getHeap(String staticfield)", "full_signature": "public BoundedSet<SymbolicAddress> getHeap(String staticfield)", "class_method_signature": "SymbolicAddressMap.getHeap(String staticfield)", "testcase": false, "constructor": false}, {"identifier": "putHeap", "parameters": "(String staticfield, BoundedSet<SymbolicAddress> pointers)", "modifiers": "public", "return": "void", "signature": "void putHeap(String staticfield, BoundedSet<SymbolicAddress> pointers)", "full_signature": "public void putHeap(String staticfield, BoundedSet<SymbolicAddress> pointers)", "class_method_signature": "SymbolicAddressMap.putHeap(String staticfield, BoundedSet<SymbolicAddress> pointers)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(Location l, BoundedSet<SymbolicAddress> bs)", "modifiers": "public", "return": "void", "signature": "void put(Location l, BoundedSet<SymbolicAddress> bs)", "full_signature": "public void put(Location l, BoundedSet<SymbolicAddress> bs)", "class_method_signature": "SymbolicAddressMap.put(Location l, BoundedSet<SymbolicAddress> bs)", "testcase": false, "constructor": false}, {"identifier": "addAlias", "parameters": "(String ty, BoundedSet<SymbolicAddress> newAliases)", "modifiers": "public", "return": "void", "signature": "void addAlias(String ty, BoundedSet<SymbolicAddress> newAliases)", "full_signature": "public void addAlias(String ty, BoundedSet<SymbolicAddress> newAliases)", "class_method_signature": "SymbolicAddressMap.addAlias(String ty, BoundedSet<SymbolicAddress> newAliases)", "testcase": false, "constructor": false}, {"identifier": "getAliases", "parameters": "(String fieldType)", "modifiers": "public", "return": "BoundedSet<SymbolicAddress>", "signature": "BoundedSet<SymbolicAddress> getAliases(String fieldType)", "full_signature": "public BoundedSet<SymbolicAddress> getAliases(String fieldType)", "class_method_signature": "SymbolicAddressMap.getAliases(String fieldType)", "testcase": false, "constructor": false}, {"identifier": "print", "parameters": "(PrintStream out, int indent)", "modifiers": "public", "return": "void", "signature": "void print(PrintStream out, int indent)", "full_signature": "public void print(PrintStream out, int indent)", "class_method_signature": "SymbolicAddressMap.print(PrintStream out, int indent)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SymbolicAddressMap.toString()", "testcase": false, "constructor": false}], "file": "java/tools/src/com/jopdesign/dfa/analyses/SymbolicAddressMap.java"}, "focal_method": {"identifier": "clone", "parameters": "()", "modifiers": "@Override protected", "return": "SymbolicAddressMap", "body": "@Override\n\tprotected SymbolicAddressMap clone() {\n\t\tif(this.isTop()) return this;\n\t\treturn new SymbolicAddressMap(this.bsFactory,\n\t\t\t\tnew HashMap<Location, BoundedSet<SymbolicAddress>>(this.mapP),\n\t\t\t\tnew HashMap<String, BoundedSet<SymbolicAddress>>(this.mapA));\n\t}", "signature": "SymbolicAddressMap clone()", "full_signature": "@Override protected SymbolicAddressMap clone()", "class_method_signature": "SymbolicAddressMap.clone()", "testcase": false, "constructor": false, "invocations": ["isTop"]}, "repository": {"repo_id": 1473579, "url": "https://github.com/arekinath/jop", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 20020, "license": "licensed"}}