{"test_class": {"identifier": "DefaultDataDictionaryProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static DataDictionary dictionaryForTest1;", "modifier": "private static", "type": "DataDictionary", "declarator": "dictionaryForTest1", "var_name": "dictionaryForTest1"}, {"original_string": "private static DataDictionary dictionaryForTest2;", "modifier": "private static", "type": "DataDictionary", "declarator": "dictionaryForTest2", "var_name": "dictionaryForTest2"}], "file": "core/src/test/java/quickfix/DefaultDataDictionaryProviderTest.java"}, "test_case": {"identifier": "throwExceptionIfAppDictionaryIsNotFound", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void throwExceptionIfAppDictionaryIsNotFound() throws Exception {\n        DefaultDataDictionaryProvider provider = new DefaultDataDictionaryProvider();\n        \n        try {\n            provider.getApplicationDataDictionary(new ApplVerID(\"Invalid_Test\"));\n        } catch (QFJException e) {\n            assertThat(e.getMessage(), containsString(\"Unknown or unsupported ApplVerID\"));\n        }\n    }", "signature": "void throwExceptionIfAppDictionaryIsNotFound()", "full_signature": "@Test public void throwExceptionIfAppDictionaryIsNotFound()", "class_method_signature": "DefaultDataDictionaryProviderTest.throwExceptionIfAppDictionaryIsNotFound()", "testcase": true, "constructor": false, "invocations": ["getApplicationDataDictionary", "assertThat", "getMessage", "containsString"]}, "focal_class": {"identifier": "DefaultDataDictionaryProvider", "superclass": "", "interfaces": "implements DataDictionaryProvider", "fields": [{"original_string": "private Map<String, DataDictionary> transportDictionaries = new ConcurrentHashMap<String, DataDictionary>();", "modifier": "private", "type": "Map<String, DataDictionary>", "declarator": "transportDictionaries = new ConcurrentHashMap<String, DataDictionary>()", "var_name": "transportDictionaries"}, {"original_string": "private Map<AppVersionKey, DataDictionary> applicationDictionaries = new ConcurrentHashMap<AppVersionKey, DataDictionary>();", "modifier": "private", "type": "Map<AppVersionKey, DataDictionary>", "declarator": "applicationDictionaries = new ConcurrentHashMap<AppVersionKey, DataDictionary>()", "var_name": "applicationDictionaries"}, {"original_string": "private final boolean findDataDictionaries;", "modifier": "private final", "type": "boolean", "declarator": "findDataDictionaries", "var_name": "findDataDictionaries"}], "methods": [{"identifier": "DefaultDataDictionaryProvider", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultDataDictionaryProvider()", "full_signature": "public  DefaultDataDictionaryProvider()", "class_method_signature": "DefaultDataDictionaryProvider.DefaultDataDictionaryProvider()", "testcase": false, "constructor": true}, {"identifier": "DefaultDataDictionaryProvider", "parameters": "(boolean findDataDictionaries)", "modifiers": "public", "return": "", "signature": " DefaultDataDictionaryProvider(boolean findDataDictionaries)", "full_signature": "public  DefaultDataDictionaryProvider(boolean findDataDictionaries)", "class_method_signature": "DefaultDataDictionaryProvider.DefaultDataDictionaryProvider(boolean findDataDictionaries)", "testcase": false, "constructor": true}, {"identifier": "getSessionDataDictionary", "parameters": "(String beginString)", "modifiers": "public synchronized", "return": "DataDictionary", "signature": "DataDictionary getSessionDataDictionary(String beginString)", "full_signature": "public synchronized DataDictionary getSessionDataDictionary(String beginString)", "class_method_signature": "DefaultDataDictionaryProvider.getSessionDataDictionary(String beginString)", "testcase": false, "constructor": false}, {"identifier": "getApplicationDataDictionary", "parameters": "(ApplVerID applVerID)", "modifiers": "public", "return": "DataDictionary", "signature": "DataDictionary getApplicationDataDictionary(ApplVerID applVerID)", "full_signature": "public DataDictionary getApplicationDataDictionary(ApplVerID applVerID)", "class_method_signature": "DefaultDataDictionaryProvider.getApplicationDataDictionary(ApplVerID applVerID)", "testcase": false, "constructor": false}, {"identifier": "addTransportDictionary", "parameters": "(String beginString, DataDictionary dd)", "modifiers": "public", "return": "void", "signature": "void addTransportDictionary(String beginString, DataDictionary dd)", "full_signature": "public void addTransportDictionary(String beginString, DataDictionary dd)", "class_method_signature": "DefaultDataDictionaryProvider.addTransportDictionary(String beginString, DataDictionary dd)", "testcase": false, "constructor": false}, {"identifier": "addApplicationDictionary", "parameters": "(ApplVerID applVerID, DataDictionary dataDictionary)", "modifiers": "public", "return": "void", "signature": "void addApplicationDictionary(ApplVerID applVerID, DataDictionary dataDictionary)", "full_signature": "public void addApplicationDictionary(ApplVerID applVerID, DataDictionary dataDictionary)", "class_method_signature": "DefaultDataDictionaryProvider.addApplicationDictionary(ApplVerID applVerID, DataDictionary dataDictionary)", "testcase": false, "constructor": false}], "file": "core/src/main/java/quickfix/DefaultDataDictionaryProvider.java"}, "focal_method": {"identifier": "getApplicationDataDictionary", "parameters": "(ApplVerID applVerID)", "modifiers": "public", "return": "DataDictionary", "body": "public DataDictionary getApplicationDataDictionary(ApplVerID applVerID) {\n        AppVersionKey appVersionKey = new AppVersionKey(applVerID);\n        DataDictionary dd = applicationDictionaries.get(appVersionKey);\n        if (dd == null && findDataDictionaries) {\n            String beginString = toBeginString(applVerID);\n            String path = beginString.replace(\".\", \"\") + \".xml\";\n            try {\n                dd = new DataDictionary(path);\n                applicationDictionaries.put(appVersionKey, dd);\n            } catch (ConfigError e) {\n                throw new QFJException(e);\n            }\n        }\n        return dd;\n    }", "signature": "DataDictionary getApplicationDataDictionary(ApplVerID applVerID)", "full_signature": "public DataDictionary getApplicationDataDictionary(ApplVerID applVerID)", "class_method_signature": "DefaultDataDictionaryProvider.getApplicationDataDictionary(ApplVerID applVerID)", "testcase": false, "constructor": false, "invocations": ["get", "toBeginString", "replace", "put"]}, "repository": {"repo_id": 3480699, "url": "https://github.com/quickfixj/mirror", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 6, "size": 29054, "license": "licensed"}}