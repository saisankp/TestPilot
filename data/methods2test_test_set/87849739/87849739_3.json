{"test_class": {"identifier": "ByteBufferOutputStreamTest", "superclass": "", "interfaces": "", "fields": [], "file": "json-cbor/src/test/java/org/eclipse/ditto/json/cbor/ByteBufferOutputStreamTest.java"}, "test_case": {"identifier": "writesThroughToBuffer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void writesThroughToBuffer() throws IOException {\n        final int expectedCount = 11;\n        final ByteBuffer buffer = ByteBuffer.allocate(expectedCount);\n        final ByteBufferOutputStream outputStream = new ByteBufferOutputStream(buffer);\n\n\n        for (int i = 0; i < 5; i++) {\n            outputStream.write(i);\n        }\n        outputStream.write(new byte[]{7,8,9});\n        outputStream.write(new byte[]{10,11,12,13,14}, 1, 3);\n\n        Assertions.assertThat(buffer.position()).isEqualTo(expectedCount);\n    }", "signature": "void writesThroughToBuffer()", "full_signature": "@Test public void writesThroughToBuffer()", "class_method_signature": "ByteBufferOutputStreamTest.writesThroughToBuffer()", "testcase": true, "constructor": false, "invocations": ["allocate", "write", "write", "write", "isEqualTo", "assertThat", "position"]}, "focal_class": {"identifier": "ByteBufferOutputStream", "superclass": "extends OutputStream", "interfaces": "", "fields": [{"original_string": "private final ByteBuffer destinationBuffer;", "modifier": "private final", "type": "ByteBuffer", "declarator": "destinationBuffer", "var_name": "destinationBuffer"}], "methods": [{"identifier": "ByteBufferOutputStream", "parameters": "(final ByteBuffer destinationBuffer)", "modifiers": "", "return": "", "signature": " ByteBufferOutputStream(final ByteBuffer destinationBuffer)", "full_signature": "  ByteBufferOutputStream(final ByteBuffer destinationBuffer)", "class_method_signature": "ByteBufferOutputStream.ByteBufferOutputStream(final ByteBuffer destinationBuffer)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(final int b)", "modifiers": "@Override public", "return": "void", "signature": "void write(final int b)", "full_signature": "@Override public void write(final int b)", "class_method_signature": "ByteBufferOutputStream.write(final int b)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(final byte[] b, final int off, final int len)", "modifiers": "@Override public", "return": "void", "signature": "void write(final byte[] b, final int off, final int len)", "full_signature": "@Override public void write(final byte[] b, final int off, final int len)", "class_method_signature": "ByteBufferOutputStream.write(final byte[] b, final int off, final int len)", "testcase": false, "constructor": false}], "file": "json-cbor/src/main/java/org/eclipse/ditto/json/cbor/ByteBufferOutputStream.java"}, "focal_method": {"identifier": "write", "parameters": "(final int b)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void write(final int b) {\n        // super specifies to ignore everything except the lower 8 bits.\n        destinationBuffer.put((byte) b);\n    }", "signature": "void write(final int b)", "full_signature": "@Override public void write(final int b)", "class_method_signature": "ByteBufferOutputStream.write(final int b)", "testcase": false, "constructor": false, "invocations": ["put"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}