{"test_class": {"identifier": "LogUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "log/src/test/java/org/cloudname/log/LogUtilTest.java"}, "test_case": {"identifier": "testTextEvent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTextEvent() throws Exception\n    {\n        Timber.LogEvent event = LogUtil.textEvent(20,\n                                                  \"some.service\",\n                                                  \"the.source\",\n                                                  \"the message\");\n        assertEquals(20, event.getLevel());\n        assertEquals(\"some.service\", event.getServiceName());\n        assertEquals(\"the.source\", event.getSource());\n        assertEquals(\"the message\", event.getPayload(0).getPayload().toStringUtf8());\n\n        assertTrue((System.currentTimeMillis() - event.getTimestamp()) < 10);\n    }", "signature": "void testTextEvent()", "full_signature": "@Test public void testTextEvent()", "class_method_signature": "LogUtilTest.testTextEvent()", "testcase": true, "constructor": false, "invocations": ["textEvent", "assertEquals", "getLevel", "assertEquals", "getServiceName", "assertEquals", "getSource", "assertEquals", "toStringUtf8", "getPayload", "getPayload", "assertTrue", "currentTimeMillis", "getTimestamp"]}, "focal_class": {"identifier": "LogUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static String hostName;", "modifier": "private static", "type": "String", "declarator": "hostName", "var_name": "hostName"}], "methods": [{"identifier": "textEvent", "parameters": "(int level,\n                                            String service,\n                                            String source,\n                                            String message)", "modifiers": "public static", "return": "Timber.LogEvent", "signature": "Timber.LogEvent textEvent(int level,\n                                            String service,\n                                            String source,\n                                            String message)", "full_signature": "public static Timber.LogEvent textEvent(int level,\n                                            String service,\n                                            String source,\n                                            String message)", "class_method_signature": "LogUtil.textEvent(int level,\n                                            String service,\n                                            String source,\n                                            String message)", "testcase": false, "constructor": false}, {"identifier": "getHostName", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getHostName()", "full_signature": "public static String getHostName()", "class_method_signature": "LogUtil.getHostName()", "testcase": false, "constructor": false}], "file": "log/src/main/java/org/cloudname/log/LogUtil.java"}, "focal_method": {"identifier": "textEvent", "parameters": "(int level,\n                                            String service,\n                                            String source,\n                                            String message)", "modifiers": "public static", "return": "Timber.LogEvent", "body": "public static Timber.LogEvent textEvent(int level,\n                                            String service,\n                                            String source,\n                                            String message)\n    {\n        return Timber.LogEvent.newBuilder()\n            .setTimestamp(System.currentTimeMillis())\n            .setConsistencyLevel(ConsistencyLevel.BESTEFFORT)\n            .setLevel(level)\n            .setHost(hostName)\n            .setServiceName(service)\n            .setSource(source)\n            .setPid(0)\n            .setTid((int) Thread.currentThread().getId())\n            .setType(\"T\")\n            .addPayload(\n                Timber.Payload.newBuilder()\n                .setName(\"msg\")\n                .setPayload(ByteString.copyFromUtf8(message)))\n            .build();\n    }", "signature": "Timber.LogEvent textEvent(int level,\n                                            String service,\n                                            String source,\n                                            String message)", "full_signature": "public static Timber.LogEvent textEvent(int level,\n                                            String service,\n                                            String source,\n                                            String message)", "class_method_signature": "LogUtil.textEvent(int level,\n                                            String service,\n                                            String source,\n                                            String message)", "testcase": false, "constructor": false, "invocations": ["build", "addPayload", "setType", "setTid", "setPid", "setSource", "setServiceName", "setHost", "setLevel", "setConsistencyLevel", "setTimestamp", "newBuilder", "currentTimeMillis", "getId", "currentThread", "setPayload", "setName", "newBuilder", "copyFromUtf8"]}, "repository": {"repo_id": 2329961, "url": "https://github.com/Cloudname/cloudname", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 21, "size": 26031, "license": "licensed"}}