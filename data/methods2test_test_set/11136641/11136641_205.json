{"test_class": {"identifier": "ContextMapperCallbackHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ContextMapper mapperMock;", "modifier": "private", "type": "ContextMapper", "declarator": "mapperMock", "var_name": "mapperMock"}, {"original_string": "private ContextMapperCallbackHandler tested;", "modifier": "private", "type": "ContextMapperCallbackHandler", "declarator": "tested", "var_name": "tested"}], "file": "core/src/test/java/org/springframework/ldap/core/ContextMapperCallbackHandlerTest.java"}, "test_case": {"identifier": "testGetObjectFromNameClassPair", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetObjectFromNameClassPair() throws NamingException {\n        Object expectedObject = \"object\";\n        Object expectedResult = \"result\";\n        Binding expectedBinding = new Binding(\"some name\", expectedObject);\n\n        when(mapperMock.mapFromContext(expectedObject)).thenReturn(expectedResult);\n        Object actualResult = tested\n                .getObjectFromNameClassPair(expectedBinding);\n        assertThat(actualResult).isEqualTo(expectedResult);\n    }", "signature": "void testGetObjectFromNameClassPair()", "full_signature": "@Test public void testGetObjectFromNameClassPair()", "class_method_signature": "ContextMapperCallbackHandlerTest.testGetObjectFromNameClassPair()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "mapFromContext", "getObjectFromNameClassPair", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "ContextMapperCallbackHandler", "superclass": "extends\n        CollectingNameClassPairCallbackHandler<T>", "interfaces": "", "fields": [{"original_string": "private ContextMapper<T> mapper;", "modifier": "private", "type": "ContextMapper<T>", "declarator": "mapper", "var_name": "mapper"}], "methods": [{"identifier": "ContextMapperCallbackHandler", "parameters": "(ContextMapper<T> mapper)", "modifiers": "public", "return": "", "signature": " ContextMapperCallbackHandler(ContextMapper<T> mapper)", "full_signature": "public  ContextMapperCallbackHandler(ContextMapper<T> mapper)", "class_method_signature": "ContextMapperCallbackHandler.ContextMapperCallbackHandler(ContextMapper<T> mapper)", "testcase": false, "constructor": true}, {"identifier": "getObjectFromNameClassPair", "parameters": "(NameClassPair nameClassPair)", "modifiers": "public", "return": "T", "signature": "T getObjectFromNameClassPair(NameClassPair nameClassPair)", "full_signature": "public T getObjectFromNameClassPair(NameClassPair nameClassPair)", "class_method_signature": "ContextMapperCallbackHandler.getObjectFromNameClassPair(NameClassPair nameClassPair)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/core/ContextMapperCallbackHandler.java"}, "focal_method": {"identifier": "getObjectFromNameClassPair", "parameters": "(NameClassPair nameClassPair)", "modifiers": "public", "return": "T", "body": "public T getObjectFromNameClassPair(NameClassPair nameClassPair) throws NamingException {\n\t\tif (!(nameClassPair instanceof Binding)) {\n\t\t\tthrow new IllegalArgumentException(\"Parameter must be an instance of Binding\");\n\t\t}\n\n\t\tBinding binding = (Binding) nameClassPair;\n        Object object = binding.getObject();\n        if (object == null) {\n            throw new ObjectRetrievalException(\n                    \"Binding did not contain any object.\");\n        }\n        return mapper.mapFromContext(object);\n    }", "signature": "T getObjectFromNameClassPair(NameClassPair nameClassPair)", "full_signature": "public T getObjectFromNameClassPair(NameClassPair nameClassPair)", "class_method_signature": "ContextMapperCallbackHandler.getObjectFromNameClassPair(NameClassPair nameClassPair)", "testcase": false, "constructor": false, "invocations": ["getObject", "mapFromContext"]}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}