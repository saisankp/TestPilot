{"test_class": {"identifier": "DocumentationConfigurerTest", "superclass": "", "interfaces": "", "fields": [], "file": "geoclient-service/src/test/java/gov/nyc/doitt/gis/geoclient/service/invoker/DocumentationConfigurerTest.java"}, "test_case": {"identifier": "testConfigureDocumentation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConfigureDocumentation()\n    {\n        GeosupportConfig geosupportConfigMock = Mockito.mock(GeosupportConfig.class);\n        DataDictionary dataDictionary = new DataDictionary(new ArrayList<ItemDocumentation>());\n        Mockito.when(geosupportConfigMock.getDataDictionary()).thenReturn(dataDictionary);\n\n        //FunctionDocumentation addressDocumentation = new FunctionDocumentation(Function.F1B,new Description(\"Textxt\"),new ArrayList<ItemDocumentation>());\n        FunctionDocumentation addressDocumentation = new FunctionDocumentation();\n        addressDocumentation.setId(Function.F1B);\n        addressDocumentation.setDisplayName(\"address\");\n        addressDocumentation.setFields(new TreeSet<ItemDocumentation>());\n        Mockito.when(geosupportConfigMock.getFunctionDocumentation(Function.F1B)).thenReturn(addressDocumentation);\n\n        FunctionDocumentation bblDocumentation = new FunctionDocumentation();\n        bblDocumentation.setId(Function.FBL);\n        bblDocumentation.setFields(new TreeSet<ItemDocumentation>());\n        Mockito.when(geosupportConfigMock.getFunctionDocumentation(Function.FBL)).thenReturn(bblDocumentation);\n\n        FunctionDocumentation binDocumentation = new FunctionDocumentation();\n        binDocumentation.setId(Function.FBN);\n        binDocumentation.setFields(new TreeSet<ItemDocumentation>());\n        Mockito.when(geosupportConfigMock.getFunctionDocumentation(Function.FBN)).thenReturn(binDocumentation);\n\n        FunctionDocumentation blockfaceDocumentation = new FunctionDocumentation();\n        Mockito.when(geosupportConfigMock.getFunctionDocumentation(Function.F3)).thenReturn(blockfaceDocumentation);\n\n        FunctionDocumentation intersectionDocumentation = new FunctionDocumentation();\n        intersectionDocumentation.setId(Function.F2);\n        intersectionDocumentation.setFields(new TreeSet<ItemDocumentation>());\n        Mockito.when(geosupportConfigMock.getFunctionDocumentation(Function.F2)).thenReturn(intersectionDocumentation);\n\n        LatLongEnhancer latLongEnhancerMock = Mockito.mock(LatLongEnhancer.class);\n\n        LatLongConfig latLongConfig = LatLongEnhancer.DEFAULT_CONFIGS.get(0);\n        LatLongConfig latLongInternalConfig = LatLongEnhancer.DEFAULT_CONFIGS.get(1);\n        List<ItemDocumentation> expectedLatLongDocs = new ArrayList<ItemDocumentation>();\n        expectedLatLongDocs.add(latLongConfig.getLatDocumentation());\n        expectedLatLongDocs.add(latLongConfig.getLongDocumentation());\n        expectedLatLongDocs.add(latLongInternalConfig.getLatDocumentation());\n        expectedLatLongDocs.add(latLongInternalConfig.getLongDocumentation());\n        Mockito.when(latLongEnhancerMock.getItemDocumentation()).thenReturn(expectedLatLongDocs);\n\n        Documentation result = new DocumentationConfigurer(geosupportConfigMock, latLongEnhancerMock).configureDocumentation();\n\n        assertSame(dataDictionary, result.getDataDictionary());\n        assertSame(addressDocumentation, result.getAddressDocumentation());\n        assertSame(bblDocumentation, result.getBblDocumentation());\n        assertSame(binDocumentation, result.getBinDocumentation());\n        assertSame(blockfaceDocumentation, result.getBlockfaceDocumentation());\n        assertSame(intersectionDocumentation, result.getIntersectionDocumentation());\n        assertNotSame(result.getAddressDocumentation(),result.getPlaceDocumentation());\n        assertSame(addressDocumentation.getId(), result.getPlaceDocumentation().getId());\n        assertSame(addressDocumentation.getDescription(), result.getPlaceDocumentation().getDescription());\n        assertEquals(addressDocumentation.getFields(), result.getPlaceDocumentation().getFields());\n\n        assertTrue(addressDocumentation.getFields().contains(latLongConfig.getLatDocumentation()));\n        assertTrue(addressDocumentation.getFields().contains(latLongConfig.getLongDocumentation()));\n        assertTrue(addressDocumentation.getFields().contains(latLongInternalConfig.getLatDocumentation()));\n        assertTrue(addressDocumentation.getFields().contains(latLongInternalConfig.getLongDocumentation()));\n\n        assertTrue(result.getPlaceDocumentation().getFields().contains(latLongConfig.getLatDocumentation()));\n        assertTrue(result.getPlaceDocumentation().getFields().contains(latLongConfig.getLongDocumentation()));\n        assertTrue(result.getPlaceDocumentation().getFields().contains(latLongInternalConfig.getLatDocumentation()));\n        assertTrue(result.getPlaceDocumentation().getFields().contains(latLongInternalConfig.getLongDocumentation()));\n\n        assertTrue(result.getIntersectionDocumentation().getFields().contains(latLongConfig.getLatDocumentation()));\n        assertTrue(result.getIntersectionDocumentation().getFields().contains(latLongConfig.getLongDocumentation()));\n        assertFalse(result.getIntersectionDocumentation().getFields().contains(latLongInternalConfig.getLatDocumentation()));\n        assertFalse(result.getIntersectionDocumentation().getFields().contains(latLongInternalConfig.getLongDocumentation()));\n\n        assertFalse(result.getBblDocumentation().getFields().contains(latLongConfig.getLatDocumentation()));\n        assertFalse(result.getBblDocumentation().getFields().contains(latLongConfig.getLongDocumentation()));\n        assertTrue(result.getBblDocumentation().getFields().contains(latLongInternalConfig.getLatDocumentation()));\n        assertTrue(result.getBblDocumentation().getFields().contains(latLongInternalConfig.getLongDocumentation()));\n\n        assertFalse(result.getBinDocumentation().getFields().contains(latLongConfig.getLatDocumentation()));\n        assertFalse(result.getBinDocumentation().getFields().contains(latLongConfig.getLongDocumentation()));\n        assertTrue(result.getBinDocumentation().getFields().contains(latLongInternalConfig.getLatDocumentation()));\n        assertTrue(result.getBinDocumentation().getFields().contains(latLongInternalConfig.getLongDocumentation()));\n\n        assertTrue(result.getDataDictionary().getItems().contains(latLongConfig.getLatDocumentation()));\n        assertTrue(result.getDataDictionary().getItems().contains(latLongConfig.getLongDocumentation()));\n        assertTrue(result.getDataDictionary().getItems().contains(latLongInternalConfig.getLatDocumentation()));\n        assertTrue(result.getDataDictionary().getItems().contains(latLongInternalConfig.getLongDocumentation()));\n\n        assertEquals(Documentation.ADDRESS_FUNCTION,addressDocumentation.getDisplayName());\n        assertEquals(Documentation.BBL_FUNCTION,bblDocumentation.getDisplayName());\n        assertEquals(Documentation.BIN_FUNCTION,binDocumentation.getDisplayName());\n        assertEquals(Documentation.BLOCKFACE_FUNCTION,blockfaceDocumentation.getDisplayName());\n        assertEquals(Documentation.INTERSECTION_FUNCTION,intersectionDocumentation.getDisplayName());\n        assertEquals(Documentation.PLACE_FUNCTION,result.getPlaceDocumentation().getDisplayName());\n    }", "signature": "void testConfigureDocumentation()", "full_signature": "@Test public void testConfigureDocumentation()", "class_method_signature": "DocumentationConfigurerTest.testConfigureDocumentation()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getDataDictionary", "setId", "setDisplayName", "setFields", "thenReturn", "when", "getFunctionDocumentation", "setId", "setFields", "thenReturn", "when", "getFunctionDocumentation", "setId", "setFields", "thenReturn", "when", "getFunctionDocumentation", "thenReturn", "when", "getFunctionDocumentation", "setId", "setFields", "thenReturn", "when", "getFunctionDocumentation", "mock", "get", "get", "add", "getLatDocumentation", "add", "getLongDocumentation", "add", "getLatDocumentation", "add", "getLongDocumentation", "thenReturn", "when", "getItemDocumentation", "configureDocumentation", "assertSame", "getDataDictionary", "assertSame", "getAddressDocumentation", "assertSame", "getBblDocumentation", "assertSame", "getBinDocumentation", "assertSame", "getBlockfaceDocumentation", "assertSame", "getIntersectionDocumentation", "assertNotSame", "getAddressDocumentation", "getPlaceDocumentation", "assertSame", "getId", "getId", "getPlaceDocumentation", "assertSame", "getDescription", "getDescription", "getPlaceDocumentation", "assertEquals", "getFields", "getFields", "getPlaceDocumentation", "assertTrue", "contains", "getFields", "getLatDocumentation", "assertTrue", "contains", "getFields", "getLongDocumentation", "assertTrue", "contains", "getFields", "getLatDocumentation", "assertTrue", "contains", "getFields", "getLongDocumentation", "assertTrue", "contains", "getFields", "getPlaceDocumentation", "getLatDocumentation", "assertTrue", "contains", "getFields", "getPlaceDocumentation", "getLongDocumentation", "assertTrue", "contains", "getFields", "getPlaceDocumentation", "getLatDocumentation", "assertTrue", "contains", "getFields", "getPlaceDocumentation", "getLongDocumentation", "assertTrue", "contains", "getFields", "getIntersectionDocumentation", "getLatDocumentation", "assertTrue", "contains", "getFields", "getIntersectionDocumentation", "getLongDocumentation", "assertFalse", "contains", "getFields", "getIntersectionDocumentation", "getLatDocumentation", "assertFalse", "contains", "getFields", "getIntersectionDocumentation", "getLongDocumentation", "assertFalse", "contains", "getFields", "getBblDocumentation", "getLatDocumentation", "assertFalse", "contains", "getFields", "getBblDocumentation", "getLongDocumentation", "assertTrue", "contains", "getFields", "getBblDocumentation", "getLatDocumentation", "assertTrue", "contains", "getFields", "getBblDocumentation", "getLongDocumentation", "assertFalse", "contains", "getFields", "getBinDocumentation", "getLatDocumentation", "assertFalse", "contains", "getFields", "getBinDocumentation", "getLongDocumentation", "assertTrue", "contains", "getFields", "getBinDocumentation", "getLatDocumentation", "assertTrue", "contains", "getFields", "getBinDocumentation", "getLongDocumentation", "assertTrue", "contains", "getItems", "getDataDictionary", "getLatDocumentation", "assertTrue", "contains", "getItems", "getDataDictionary", "getLongDocumentation", "assertTrue", "contains", "getItems", "getDataDictionary", "getLatDocumentation", "assertTrue", "contains", "getItems", "getDataDictionary", "getLongDocumentation", "assertEquals", "getDisplayName", "assertEquals", "getDisplayName", "assertEquals", "getDisplayName", "assertEquals", "getDisplayName", "assertEquals", "getDisplayName", "assertEquals", "getDisplayName", "getPlaceDocumentation"]}, "focal_class": {"identifier": "DocumentationConfigurer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final GeosupportConfig geosupportConfig;", "modifier": "private final", "type": "GeosupportConfig", "declarator": "geosupportConfig", "var_name": "geosupportConfig"}, {"original_string": "private final LatLongEnhancer latLongEnhancer;", "modifier": "private final", "type": "LatLongEnhancer", "declarator": "latLongEnhancer", "var_name": "latLongEnhancer"}], "methods": [{"identifier": "DocumentationConfigurer", "parameters": "(GeosupportConfig geosupportConfig, LatLongEnhancer latLongEnhancer)", "modifiers": "public", "return": "", "signature": " DocumentationConfigurer(GeosupportConfig geosupportConfig, LatLongEnhancer latLongEnhancer)", "full_signature": "public  DocumentationConfigurer(GeosupportConfig geosupportConfig, LatLongEnhancer latLongEnhancer)", "class_method_signature": "DocumentationConfigurer.DocumentationConfigurer(GeosupportConfig geosupportConfig, LatLongEnhancer latLongEnhancer)", "testcase": false, "constructor": true}, {"identifier": "configureDocumentation", "parameters": "()", "modifiers": "public", "return": "Documentation", "signature": "Documentation configureDocumentation()", "full_signature": "public Documentation configureDocumentation()", "class_method_signature": "DocumentationConfigurer.configureDocumentation()", "testcase": false, "constructor": false}, {"identifier": "configureDataDictionary", "parameters": "(Documentation documentation)", "modifiers": "private", "return": "void", "signature": "void configureDataDictionary(Documentation documentation)", "full_signature": "private void configureDataDictionary(Documentation documentation)", "class_method_signature": "DocumentationConfigurer.configureDataDictionary(Documentation documentation)", "testcase": false, "constructor": false}, {"identifier": "configureAddressDocumentation", "parameters": "(Documentation documentation)", "modifiers": "private", "return": "void", "signature": "void configureAddressDocumentation(Documentation documentation)", "full_signature": "private void configureAddressDocumentation(Documentation documentation)", "class_method_signature": "DocumentationConfigurer.configureAddressDocumentation(Documentation documentation)", "testcase": false, "constructor": false}, {"identifier": "configureBblDocumentation", "parameters": "(Documentation documentation)", "modifiers": "private", "return": "void", "signature": "void configureBblDocumentation(Documentation documentation)", "full_signature": "private void configureBblDocumentation(Documentation documentation)", "class_method_signature": "DocumentationConfigurer.configureBblDocumentation(Documentation documentation)", "testcase": false, "constructor": false}, {"identifier": "configureBinDocumentation", "parameters": "(Documentation documentation)", "modifiers": "private", "return": "void", "signature": "void configureBinDocumentation(Documentation documentation)", "full_signature": "private void configureBinDocumentation(Documentation documentation)", "class_method_signature": "DocumentationConfigurer.configureBinDocumentation(Documentation documentation)", "testcase": false, "constructor": false}, {"identifier": "configureBlockfaceDocumentation", "parameters": "(Documentation documentation)", "modifiers": "private", "return": "void", "signature": "void configureBlockfaceDocumentation(Documentation documentation)", "full_signature": "private void configureBlockfaceDocumentation(Documentation documentation)", "class_method_signature": "DocumentationConfigurer.configureBlockfaceDocumentation(Documentation documentation)", "testcase": false, "constructor": false}, {"identifier": "configureIntersectionDocumentation", "parameters": "(Documentation documentation)", "modifiers": "private", "return": "void", "signature": "void configureIntersectionDocumentation(Documentation documentation)", "full_signature": "private void configureIntersectionDocumentation(Documentation documentation)", "class_method_signature": "DocumentationConfigurer.configureIntersectionDocumentation(Documentation documentation)", "testcase": false, "constructor": false}, {"identifier": "configurePlaceDocumentation", "parameters": "(Documentation documentation)", "modifiers": "private", "return": "void", "signature": "void configurePlaceDocumentation(Documentation documentation)", "full_signature": "private void configurePlaceDocumentation(Documentation documentation)", "class_method_signature": "DocumentationConfigurer.configurePlaceDocumentation(Documentation documentation)", "testcase": false, "constructor": false}, {"identifier": "addLatLong", "parameters": "(FunctionDocumentation functionDocumentation)", "modifiers": "private", "return": "void", "signature": "void addLatLong(FunctionDocumentation functionDocumentation)", "full_signature": "private void addLatLong(FunctionDocumentation functionDocumentation)", "class_method_signature": "DocumentationConfigurer.addLatLong(FunctionDocumentation functionDocumentation)", "testcase": false, "constructor": false}, {"identifier": "appliesToFunction", "parameters": "(String functionId, ItemDocumentation itemDocumentation)", "modifiers": "private", "return": "boolean", "signature": "boolean appliesToFunction(String functionId, ItemDocumentation itemDocumentation)", "full_signature": "private boolean appliesToFunction(String functionId, ItemDocumentation itemDocumentation)", "class_method_signature": "DocumentationConfigurer.appliesToFunction(String functionId, ItemDocumentation itemDocumentation)", "testcase": false, "constructor": false}], "file": "geoclient-service/src/main/java/gov/nyc/doitt/gis/geoclient/service/invoker/DocumentationConfigurer.java"}, "focal_method": {"identifier": "configureDocumentation", "parameters": "()", "modifiers": "public", "return": "Documentation", "body": "public Documentation configureDocumentation()\n    {\n        Documentation documentation = new Documentation();\n        configureDataDictionary(documentation);\n        configureAddressDocumentation(documentation);\n        configureBblDocumentation(documentation);\n        configureBinDocumentation(documentation);\n        configureBlockfaceDocumentation(documentation);\n        configureIntersectionDocumentation(documentation);\n        configurePlaceDocumentation(documentation);\n        return documentation;\n    }", "signature": "Documentation configureDocumentation()", "full_signature": "public Documentation configureDocumentation()", "class_method_signature": "DocumentationConfigurer.configureDocumentation()", "testcase": false, "constructor": false, "invocations": ["configureDataDictionary", "configureAddressDocumentation", "configureBblDocumentation", "configureBinDocumentation", "configureBlockfaceDocumentation", "configureIntersectionDocumentation", "configurePlaceDocumentation"]}, "repository": {"repo_id": 49475567, "url": "https://github.com/CityOfNewYork/geoclient", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 42, "size": 9801, "license": "licensed"}}