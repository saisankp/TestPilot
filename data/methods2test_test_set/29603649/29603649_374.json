{"test_class": {"identifier": "PropertyLoaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String configFile = \"wilma.conf.properties\";", "modifier": "private final", "type": "String", "declarator": "configFile = \"wilma.conf.properties\"", "var_name": "configFile"}, {"original_string": "private final String validationFile = \"wilma.conf.validation.properties\";", "modifier": "private final", "type": "String", "declarator": "validationFile = \"wilma.conf.validation.properties\"", "var_name": "validationFile"}, {"original_string": "@Mock\n    private Properties properties;", "modifier": "@Mock\n    private", "type": "Properties", "declarator": "properties", "var_name": "properties"}, {"original_string": "@Mock\n    private Properties validationProperties;", "modifier": "@Mock\n    private", "type": "Properties", "declarator": "validationProperties", "var_name": "validationProperties"}, {"original_string": "@Mock\n    private FileInputStream inputStream;", "modifier": "@Mock\n    private", "type": "FileInputStream", "declarator": "inputStream", "var_name": "inputStream"}, {"original_string": "@Mock\n    private FileInputStreamFactory inputStreamFactory;", "modifier": "@Mock\n    private", "type": "FileInputStreamFactory", "declarator": "inputStreamFactory", "var_name": "inputStreamFactory"}, {"original_string": "@Mock\n    private PropertiesFactory propertiesFactory;", "modifier": "@Mock\n    private", "type": "PropertiesFactory", "declarator": "propertiesFactory", "var_name": "propertiesFactory"}, {"original_string": "@Mock\n    private PropertyReader propertyReader;", "modifier": "@Mock\n    private", "type": "PropertyReader", "declarator": "propertyReader", "var_name": "propertyReader"}, {"original_string": "@Mock\n    private PropertyValidator propertyValidator;", "modifier": "@Mock\n    private", "type": "PropertyValidator", "declarator": "propertyValidator", "var_name": "propertyValidator"}, {"original_string": "@InjectMocks\n    private PropertyLoader underTest;", "modifier": "@InjectMocks\n    private", "type": "PropertyLoader", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-engine/src/test/java/com/epam/wilma/engine/properties/PropertyLoaderTest.java"}, "test_case": {"identifier": "testLoadPropertiesWhenArgumentsAreValidShouldLoadProperties", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLoadPropertiesWhenArgumentsAreValidShouldLoadProperties() throws IOException {\n        //GIVEN in setUp\n        //WHEN\n        underTest.loadProperties();\n        //THEN\n        verify(properties).load(inputStream);\n    }", "signature": "void testLoadPropertiesWhenArgumentsAreValidShouldLoadProperties()", "full_signature": "@Test public void testLoadPropertiesWhenArgumentsAreValidShouldLoadProperties()", "class_method_signature": "PropertyLoaderTest.testLoadPropertiesWhenArgumentsAreValidShouldLoadProperties()", "testcase": true, "constructor": false, "invocations": ["loadProperties", "load", "verify"]}, "focal_class": {"identifier": "PropertyLoader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(PropertyLoader.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(PropertyLoader.class)", "var_name": "logger"}, {"original_string": "@Value(\"#{programArgs}\")\n    private String configFile;", "modifier": "@Value(\"#{programArgs}\")\n    private", "type": "String", "declarator": "configFile", "var_name": "configFile"}, {"original_string": "@Value(\"#{configValidationFile}\")\n    private String validationFile;", "modifier": "@Value(\"#{configValidationFile}\")\n    private", "type": "String", "declarator": "validationFile", "var_name": "validationFile"}, {"original_string": "private Properties properties;", "modifier": "private", "type": "Properties", "declarator": "properties", "var_name": "properties"}, {"original_string": "private Properties validationProperties;", "modifier": "private", "type": "Properties", "declarator": "validationProperties", "var_name": "validationProperties"}, {"original_string": "private FileInputStream inputStream;", "modifier": "private", "type": "FileInputStream", "declarator": "inputStream", "var_name": "inputStream"}, {"original_string": "@Autowired\n    private FileInputStreamFactory inputStreamFactory;", "modifier": "@Autowired\n    private", "type": "FileInputStreamFactory", "declarator": "inputStreamFactory", "var_name": "inputStreamFactory"}, {"original_string": "@Autowired\n    private PropertiesFactory propertiesFactory;", "modifier": "@Autowired\n    private", "type": "PropertiesFactory", "declarator": "propertiesFactory", "var_name": "propertiesFactory"}, {"original_string": "@Autowired\n    private PropertyReader propertyReader;", "modifier": "@Autowired\n    private", "type": "PropertyReader", "declarator": "propertyReader", "var_name": "propertyReader"}, {"original_string": "@Autowired\n    private PropertyValidator propertyValidator;", "modifier": "@Autowired\n    private", "type": "PropertyValidator", "declarator": "propertyValidator", "var_name": "propertyValidator"}], "methods": [{"identifier": "loadProperties", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void loadProperties()", "full_signature": "public void loadProperties()", "class_method_signature": "PropertyLoader.loadProperties()", "testcase": false, "constructor": false}, {"identifier": "loadValidationProperties", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void loadValidationProperties()", "full_signature": "public void loadValidationProperties()", "class_method_signature": "PropertyLoader.loadValidationProperties()", "testcase": false, "constructor": false}, {"identifier": "createValidationProperties", "parameters": "()", "modifiers": "", "return": "Properties", "signature": "Properties createValidationProperties()", "full_signature": " Properties createValidationProperties()", "class_method_signature": "PropertyLoader.createValidationProperties()", "testcase": false, "constructor": false}, {"identifier": "checkPropertyFileArgument", "parameters": "(final String args)", "modifiers": "private", "return": "void", "signature": "void checkPropertyFileArgument(final String args)", "full_signature": "private void checkPropertyFileArgument(final String args)", "class_method_signature": "PropertyLoader.checkPropertyFileArgument(final String args)", "testcase": false, "constructor": false}, {"identifier": "loadExternalProperties", "parameters": "(final String location, final Properties properties)", "modifiers": "private", "return": "void", "signature": "void loadExternalProperties(final String location, final Properties properties)", "full_signature": "private void loadExternalProperties(final String location, final Properties properties)", "class_method_signature": "PropertyLoader.loadExternalProperties(final String location, final Properties properties)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-engine/src/main/java/com/epam/wilma/engine/properties/PropertyLoader.java"}, "focal_method": {"identifier": "loadProperties", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void loadProperties() {\n        properties = propertiesFactory.createProperties();\n        try {\n            checkPropertyFileArgument(configFile);\n            loadExternalProperties(configFile, properties);\n            propertyReader.setProperties(properties);\n            logger.debug(\"Properties loaded from external configuration.\");\n        } catch (IOException e) {\n            throw new PropertiesNotAvailableException(\"Configuration file \" + configFile + \" cannot be loaded\", e);\n        }\n    }", "signature": "void loadProperties()", "full_signature": "public void loadProperties()", "class_method_signature": "PropertyLoader.loadProperties()", "testcase": false, "constructor": false, "invocations": ["createProperties", "checkPropertyFileArgument", "loadExternalProperties", "setProperties", "debug"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}