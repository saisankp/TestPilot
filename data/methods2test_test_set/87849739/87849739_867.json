{"test_class": {"identifier": "ImmutableSourceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final AuthorizationContext AUTHORIZATION_CONTEXT =\n            AuthorizationModelFactory.newAuthContext(DittoAuthorizationContextType.PRE_AUTHENTICATED_CONNECTION,\n                    AuthorizationModelFactory.newAuthSubject(\"eclipse\"),\n                    AuthorizationModelFactory.newAuthSubject(\"ditto\"));", "modifier": "private static final", "type": "AuthorizationContext", "declarator": "AUTHORIZATION_CONTEXT =\n            AuthorizationModelFactory.newAuthContext(DittoAuthorizationContextType.PRE_AUTHENTICATED_CONNECTION,\n                    AuthorizationModelFactory.newAuthSubject(\"eclipse\"),\n                    AuthorizationModelFactory.newAuthSubject(\"ditto\"))", "var_name": "AUTHORIZATION_CONTEXT"}, {"original_string": "private static final Map<String, String> MAPPING;", "modifier": "private static final", "type": "Map<String, String>", "declarator": "MAPPING", "var_name": "MAPPING"}, {"original_string": "private static final FilteredAcknowledgementRequest FILTERED_ACKNOWLEDGEMENT_REQUEST =\n            FilteredAcknowledgementRequest.of(new HashSet<>(\n                            Arrays.asList(AcknowledgementRequest.of(AcknowledgementLabel.of(\"custom-ack\")),\n                                    AcknowledgementRequest.of(AcknowledgementLabel.of(\"second-custom-ack\")))),\n                    \"fn:filter(header:qos,'ne',0)\");", "modifier": "private static final", "type": "FilteredAcknowledgementRequest", "declarator": "FILTERED_ACKNOWLEDGEMENT_REQUEST =\n            FilteredAcknowledgementRequest.of(new HashSet<>(\n                            Arrays.asList(AcknowledgementRequest.of(AcknowledgementLabel.of(\"custom-ack\")),\n                                    AcknowledgementRequest.of(AcknowledgementLabel.of(\"second-custom-ack\")))),\n                    \"fn:filter(header:qos,'ne',0)\")", "var_name": "FILTERED_ACKNOWLEDGEMENT_REQUEST"}, {"original_string": "private static final String AMQP_SOURCE1 = \"amqp/source1\";", "modifier": "private static final", "type": "String", "declarator": "AMQP_SOURCE1 = \"amqp/source1\"", "var_name": "AMQP_SOURCE1"}, {"original_string": "private static final String DITTO_MAPPING = \"ditto-mapping\";", "modifier": "private static final", "type": "String", "declarator": "DITTO_MAPPING = \"ditto-mapping\"", "var_name": "DITTO_MAPPING"}, {"original_string": "private static final String CUSTOM_MAPPING = \"custom-mapping\";", "modifier": "private static final", "type": "String", "declarator": "CUSTOM_MAPPING = \"custom-mapping\"", "var_name": "CUSTOM_MAPPING"}, {"original_string": "private static final Source SOURCE_WITH_AUTH_CONTEXT =\n            ConnectivityModelFactory.newSourceBuilder()\n                    .authorizationContext(AUTHORIZATION_CONTEXT)\n                    .consumerCount(2)\n                    .index(0)\n                    .address(AMQP_SOURCE1)\n                    .acknowledgementRequests(FILTERED_ACKNOWLEDGEMENT_REQUEST)\n                    .headerMapping(ConnectivityModelFactory.newHeaderMapping(MAPPING))\n                    .payloadMapping(ConnectivityModelFactory.newPayloadMapping(DITTO_MAPPING, CUSTOM_MAPPING))\n                    .replyTarget(ImmutableReplyTargetTest.REPLY_TARGET)\n                    .build();", "modifier": "private static final", "type": "Source", "declarator": "SOURCE_WITH_AUTH_CONTEXT =\n            ConnectivityModelFactory.newSourceBuilder()\n                    .authorizationContext(AUTHORIZATION_CONTEXT)\n                    .consumerCount(2)\n                    .index(0)\n                    .address(AMQP_SOURCE1)\n                    .acknowledgementRequests(FILTERED_ACKNOWLEDGEMENT_REQUEST)\n                    .headerMapping(ConnectivityModelFactory.newHeaderMapping(MAPPING))\n                    .payloadMapping(ConnectivityModelFactory.newPayloadMapping(DITTO_MAPPING, CUSTOM_MAPPING))\n                    .replyTarget(ImmutableReplyTargetTest.REPLY_TARGET)\n                    .build()", "var_name": "SOURCE_WITH_AUTH_CONTEXT"}, {"original_string": "private static final JsonObject SOURCE_JSON = JsonObject\n            .newBuilder()\n            .set(Source.JsonFields.ADDRESSES, JsonFactory.newArrayBuilder().add(AMQP_SOURCE1).build())\n            .set(Source.JsonFields.CONSUMER_COUNT, 2)\n            .set(Source.JsonFields.ACKNOWLEDGEMENT_REQUESTS,\n                    JsonFactory.newObjectBuilder()\n                            .set(FilteredAcknowledgementRequest.JsonFields.INCLUDES,\n                                    FILTERED_ACKNOWLEDGEMENT_REQUEST.getIncludes()\n                                            .stream()\n                                            .map(AcknowledgementRequest::getLabel)\n                                            .map(AcknowledgementLabel::toString)\n                                            .map(JsonFactory::newValue)\n                                            .collect(\n                                                    JsonCollectors.valuesToArray()))\n                            .set(FilteredAcknowledgementRequest.JsonFields.FILTER,\n                                    FILTERED_ACKNOWLEDGEMENT_REQUEST.getFilter().orElse(null))\n                            .build())\n            .set(Source.JsonFields.HEADER_MAPPING,\n                    JsonFactory.newObjectBuilder().setAll(MAPPING.entrySet().stream()\n                            .map(e -> JsonFactory.newField(JsonFactory.newKey(e.getKey()), JsonValue.of(e.getValue())))\n                            .collect(Collectors.toList())).build())\n            .set(Source.JsonFields.PAYLOAD_MAPPING, JsonArray.of(DITTO_MAPPING, CUSTOM_MAPPING))\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "SOURCE_JSON = JsonObject\n            .newBuilder()\n            .set(Source.JsonFields.ADDRESSES, JsonFactory.newArrayBuilder().add(AMQP_SOURCE1).build())\n            .set(Source.JsonFields.CONSUMER_COUNT, 2)\n            .set(Source.JsonFields.ACKNOWLEDGEMENT_REQUESTS,\n                    JsonFactory.newObjectBuilder()\n                            .set(FilteredAcknowledgementRequest.JsonFields.INCLUDES,\n                                    FILTERED_ACKNOWLEDGEMENT_REQUEST.getIncludes()\n                                            .stream()\n                                            .map(AcknowledgementRequest::getLabel)\n                                            .map(AcknowledgementLabel::toString)\n                                            .map(JsonFactory::newValue)\n                                            .collect(\n                                                    JsonCollectors.valuesToArray()))\n                            .set(FilteredAcknowledgementRequest.JsonFields.FILTER,\n                                    FILTERED_ACKNOWLEDGEMENT_REQUEST.getFilter().orElse(null))\n                            .build())\n            .set(Source.JsonFields.HEADER_MAPPING,\n                    JsonFactory.newObjectBuilder().setAll(MAPPING.entrySet().stream()\n                            .map(e -> JsonFactory.newField(JsonFactory.newKey(e.getKey()), JsonValue.of(e.getValue())))\n                            .collect(Collectors.toList())).build())\n            .set(Source.JsonFields.PAYLOAD_MAPPING, JsonArray.of(DITTO_MAPPING, CUSTOM_MAPPING))\n            .build()", "var_name": "SOURCE_JSON"}, {"original_string": "private static final JsonObject SOURCE_JSON_WITH_AUTH_CONTEXT = SOURCE_JSON.toBuilder()\n            .set(Source.JsonFields.AUTHORIZATION_CONTEXT, JsonFactory.newArrayBuilder().add(\"eclipse\", \"ditto\").build())\n            .set(Source.JsonFields.REPLY_TARGET, ImmutableReplyTargetTest.REPLY_TARGET_JSON)\n            .set(Source.JsonFields.REPLY_TARGET_ENABLED, true)\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "SOURCE_JSON_WITH_AUTH_CONTEXT = SOURCE_JSON.toBuilder()\n            .set(Source.JsonFields.AUTHORIZATION_CONTEXT, JsonFactory.newArrayBuilder().add(\"eclipse\", \"ditto\").build())\n            .set(Source.JsonFields.REPLY_TARGET, ImmutableReplyTargetTest.REPLY_TARGET_JSON)\n            .set(Source.JsonFields.REPLY_TARGET_ENABLED, true)\n            .build()", "var_name": "SOURCE_JSON_WITH_AUTH_CONTEXT"}, {"original_string": "private static final String MQTT_SOURCE1 = \"mqtt/source1\";", "modifier": "private static final", "type": "String", "declarator": "MQTT_SOURCE1 = \"mqtt/source1\"", "var_name": "MQTT_SOURCE1"}, {"original_string": "private static final String MQTT_FILTER = \"topic/{{ thing.id }}\";", "modifier": "private static final", "type": "String", "declarator": "MQTT_FILTER = \"topic/{{ thing.id }}\"", "var_name": "MQTT_FILTER"}, {"original_string": "private static final Enforcement ENFORCEMENT = ConnectivityModelFactory.newEnforcement(\"{{ topic }}\", MQTT_FILTER);", "modifier": "private static final", "type": "Enforcement", "declarator": "ENFORCEMENT = ConnectivityModelFactory.newEnforcement(\"{{ topic }}\", MQTT_FILTER)", "var_name": "ENFORCEMENT"}, {"original_string": "private static final Source MQTT_SOURCE = ConnectivityModelFactory\n            .newSourceBuilder()\n            .authorizationContext(AUTHORIZATION_CONTEXT)\n            .address(MQTT_SOURCE1)\n            .enforcement(ENFORCEMENT)\n            .acknowledgementRequests(FILTERED_ACKNOWLEDGEMENT_REQUEST)\n            .consumerCount(2)\n            .index(0)\n            .qos(1)\n            .build();", "modifier": "private static final", "type": "Source", "declarator": "MQTT_SOURCE = ConnectivityModelFactory\n            .newSourceBuilder()\n            .authorizationContext(AUTHORIZATION_CONTEXT)\n            .address(MQTT_SOURCE1)\n            .enforcement(ENFORCEMENT)\n            .acknowledgementRequests(FILTERED_ACKNOWLEDGEMENT_REQUEST)\n            .consumerCount(2)\n            .index(0)\n            .qos(1)\n            .build()", "var_name": "MQTT_SOURCE"}, {"original_string": "private static final JsonObject MQTT_SOURCE_JSON = JsonObject\n            .newBuilder()\n            .set(Source.JsonFields.ADDRESSES, JsonFactory.newArrayBuilder().add(MQTT_SOURCE1).build())\n            .set(Source.JsonFields.CONSUMER_COUNT, 2)\n            .set(Source.JsonFields.QOS, 1)\n            .set(Source.JsonFields.AUTHORIZATION_CONTEXT, JsonFactory.newArrayBuilder().add(\"eclipse\", \"ditto\").build())\n            .set(Source.JsonFields.ENFORCEMENT, JsonFactory.newObjectBuilder()\n                    .set(Enforcement.JsonFields.INPUT, \"{{ topic }}\")\n                    .set(Enforcement.JsonFields.FILTERS, JsonFactory.newArrayBuilder().add(MQTT_FILTER).build())\n                    .build())\n            .set(Source.JsonFields.ACKNOWLEDGEMENT_REQUESTS,\n                    JsonFactory.newObjectBuilder()\n                            .set(FilteredAcknowledgementRequest.JsonFields.INCLUDES,\n                                    FILTERED_ACKNOWLEDGEMENT_REQUEST.getIncludes()\n                                            .stream()\n                                            .map(AcknowledgementRequest::getLabel)\n                                            .map(AcknowledgementLabel::toString)\n                                            .map(JsonFactory::newValue)\n                                            .collect(\n                                                    JsonCollectors.valuesToArray()))\n                            .set(FilteredAcknowledgementRequest.JsonFields.FILTER,\n                                    FILTERED_ACKNOWLEDGEMENT_REQUEST.getFilter().orElse(null))\n                            .build())\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "MQTT_SOURCE_JSON = JsonObject\n            .newBuilder()\n            .set(Source.JsonFields.ADDRESSES, JsonFactory.newArrayBuilder().add(MQTT_SOURCE1).build())\n            .set(Source.JsonFields.CONSUMER_COUNT, 2)\n            .set(Source.JsonFields.QOS, 1)\n            .set(Source.JsonFields.AUTHORIZATION_CONTEXT, JsonFactory.newArrayBuilder().add(\"eclipse\", \"ditto\").build())\n            .set(Source.JsonFields.ENFORCEMENT, JsonFactory.newObjectBuilder()\n                    .set(Enforcement.JsonFields.INPUT, \"{{ topic }}\")\n                    .set(Enforcement.JsonFields.FILTERS, JsonFactory.newArrayBuilder().add(MQTT_FILTER).build())\n                    .build())\n            .set(Source.JsonFields.ACKNOWLEDGEMENT_REQUESTS,\n                    JsonFactory.newObjectBuilder()\n                            .set(FilteredAcknowledgementRequest.JsonFields.INCLUDES,\n                                    FILTERED_ACKNOWLEDGEMENT_REQUEST.getIncludes()\n                                            .stream()\n                                            .map(AcknowledgementRequest::getLabel)\n                                            .map(AcknowledgementLabel::toString)\n                                            .map(JsonFactory::newValue)\n                                            .collect(\n                                                    JsonCollectors.valuesToArray()))\n                            .set(FilteredAcknowledgementRequest.JsonFields.FILTER,\n                                    FILTERED_ACKNOWLEDGEMENT_REQUEST.getFilter().orElse(null))\n                            .build())\n            .build()", "var_name": "MQTT_SOURCE_JSON"}], "file": "model/connectivity/src/test/java/org/eclipse/ditto/model/connectivity/ImmutableSourceTest.java"}, "test_case": {"identifier": "toJsonReturnsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toJsonReturnsExpected() {\n        final JsonObject actual = SOURCE_WITH_AUTH_CONTEXT.toJson();\n\n        assertThat(actual).isEqualTo(SOURCE_JSON_WITH_AUTH_CONTEXT);\n    }", "signature": "void toJsonReturnsExpected()", "full_signature": "@Test public void toJsonReturnsExpected()", "class_method_signature": "ImmutableSourceTest.toJsonReturnsExpected()", "testcase": true, "constructor": false, "invocations": ["toJson", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "ImmutableSource", "superclass": "", "interfaces": "implements Source", "fields": [{"original_string": "static final String DEFAULT_REPLY_TARGET_ADDRESS = \"{{header:reply-to}}\";", "modifier": "static final", "type": "String", "declarator": "DEFAULT_REPLY_TARGET_ADDRESS = \"{{header:reply-to}}\"", "var_name": "DEFAULT_REPLY_TARGET_ADDRESS"}, {"original_string": "private static final String HEADER_CORRELATION_ID = \"{{header:correlation-id}}\";", "modifier": "private static final", "type": "String", "declarator": "HEADER_CORRELATION_ID = \"{{header:correlation-id}}\"", "var_name": "HEADER_CORRELATION_ID"}, {"original_string": "private static final String HEADER_CONTENT_TYPE = \"{{header:content-type}}\";", "modifier": "private static final", "type": "String", "declarator": "HEADER_CONTENT_TYPE = \"{{header:content-type}}\"", "var_name": "HEADER_CONTENT_TYPE"}, {"original_string": "static final HeaderMapping DEFAULT_SOURCE_HEADER_MAPPING =\n            ConnectivityModelFactory.newHeaderMapping(JsonObject.newBuilder()\n                    .set(\"correlation-id\", HEADER_CORRELATION_ID)\n                    .set(\"content-type\", HEADER_CONTENT_TYPE)\n                    .set(\"reply-to\", DEFAULT_REPLY_TARGET_ADDRESS)\n                    .build());", "modifier": "static final", "type": "HeaderMapping", "declarator": "DEFAULT_SOURCE_HEADER_MAPPING =\n            ConnectivityModelFactory.newHeaderMapping(JsonObject.newBuilder()\n                    .set(\"correlation-id\", HEADER_CORRELATION_ID)\n                    .set(\"content-type\", HEADER_CONTENT_TYPE)\n                    .set(\"reply-to\", DEFAULT_REPLY_TARGET_ADDRESS)\n                    .build())", "var_name": "DEFAULT_SOURCE_HEADER_MAPPING"}, {"original_string": "static final HeaderMapping DEFAULT_REPLY_TARGET_HEADER_MAPPING =\n            ConnectivityModelFactory.newHeaderMapping(JsonObject.newBuilder()\n                    .set(\"correlation-id\", HEADER_CORRELATION_ID)\n                    .set(\"content-type\", HEADER_CONTENT_TYPE)\n                    .build());", "modifier": "static final", "type": "HeaderMapping", "declarator": "DEFAULT_REPLY_TARGET_HEADER_MAPPING =\n            ConnectivityModelFactory.newHeaderMapping(JsonObject.newBuilder()\n                    .set(\"correlation-id\", HEADER_CORRELATION_ID)\n                    .set(\"content-type\", HEADER_CONTENT_TYPE)\n                    .build())", "var_name": "DEFAULT_REPLY_TARGET_HEADER_MAPPING"}, {"original_string": "private static final int DEFAULT_CONSUMER_COUNT = 1;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_CONSUMER_COUNT = 1", "var_name": "DEFAULT_CONSUMER_COUNT"}, {"original_string": "private static final int DEFAULT_INDEX = 0;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_INDEX = 0", "var_name": "DEFAULT_INDEX"}, {"original_string": "private static final boolean DEFAULT_REPLY_TARGET_ENABLED = true;", "modifier": "private static final", "type": "boolean", "declarator": "DEFAULT_REPLY_TARGET_ENABLED = true", "var_name": "DEFAULT_REPLY_TARGET_ENABLED"}, {"original_string": "private final Set<String> addresses;", "modifier": "private final", "type": "Set<String>", "declarator": "addresses", "var_name": "addresses"}, {"original_string": "private final int consumerCount;", "modifier": "private final", "type": "int", "declarator": "consumerCount", "var_name": "consumerCount"}, {"original_string": "@Nullable private final Integer qos;", "modifier": "@Nullable private final", "type": "Integer", "declarator": "qos", "var_name": "qos"}, {"original_string": "private final int index;", "modifier": "private final", "type": "int", "declarator": "index", "var_name": "index"}, {"original_string": "private final AuthorizationContext authorizationContext;", "modifier": "private final", "type": "AuthorizationContext", "declarator": "authorizationContext", "var_name": "authorizationContext"}, {"original_string": "@Nullable private final Enforcement enforcement;", "modifier": "@Nullable private final", "type": "Enforcement", "declarator": "enforcement", "var_name": "enforcement"}, {"original_string": "@Nullable private final FilteredAcknowledgementRequest acknowledgementRequests;", "modifier": "@Nullable private final", "type": "FilteredAcknowledgementRequest", "declarator": "acknowledgementRequests", "var_name": "acknowledgementRequests"}, {"original_string": "@Nullable private final HeaderMapping headerMapping;", "modifier": "@Nullable private final", "type": "HeaderMapping", "declarator": "headerMapping", "var_name": "headerMapping"}, {"original_string": "private final PayloadMapping payloadMapping;", "modifier": "private final", "type": "PayloadMapping", "declarator": "payloadMapping", "var_name": "payloadMapping"}, {"original_string": "private final boolean replyTargetEnabled;", "modifier": "private final", "type": "boolean", "declarator": "replyTargetEnabled", "var_name": "replyTargetEnabled"}, {"original_string": "@Nullable private final ReplyTarget replyTarget;", "modifier": "@Nullable private final", "type": "ReplyTarget", "declarator": "replyTarget", "var_name": "replyTarget"}], "methods": [{"identifier": "ImmutableSource", "parameters": "(final Builder builder)", "modifiers": "private", "return": "", "signature": " ImmutableSource(final Builder builder)", "full_signature": "private  ImmutableSource(final Builder builder)", "class_method_signature": "ImmutableSource.ImmutableSource(final Builder builder)", "testcase": false, "constructor": true}, {"identifier": "getAddresses", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getAddresses()", "full_signature": "@Override public Set<String> getAddresses()", "class_method_signature": "ImmutableSource.getAddresses()", "testcase": false, "constructor": false}, {"identifier": "getConsumerCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getConsumerCount()", "full_signature": "@Override public int getConsumerCount()", "class_method_signature": "ImmutableSource.getConsumerCount()", "testcase": false, "constructor": false}, {"identifier": "getAuthorizationContext", "parameters": "()", "modifiers": "@Override public", "return": "AuthorizationContext", "signature": "AuthorizationContext getAuthorizationContext()", "full_signature": "@Override public AuthorizationContext getAuthorizationContext()", "class_method_signature": "ImmutableSource.getAuthorizationContext()", "testcase": false, "constructor": false}, {"identifier": "getIndex", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getIndex()", "full_signature": "@Override public int getIndex()", "class_method_signature": "ImmutableSource.getIndex()", "testcase": false, "constructor": false}, {"identifier": "getQos", "parameters": "()", "modifiers": "@Override public", "return": "Optional<Integer>", "signature": "Optional<Integer> getQos()", "full_signature": "@Override public Optional<Integer> getQos()", "class_method_signature": "ImmutableSource.getQos()", "testcase": false, "constructor": false}, {"identifier": "getEnforcement", "parameters": "()", "modifiers": "@Override public", "return": "Optional<Enforcement>", "signature": "Optional<Enforcement> getEnforcement()", "full_signature": "@Override public Optional<Enforcement> getEnforcement()", "class_method_signature": "ImmutableSource.getEnforcement()", "testcase": false, "constructor": false}, {"identifier": "getAcknowledgementRequests", "parameters": "()", "modifiers": "@Override public", "return": "Optional<FilteredAcknowledgementRequest>", "signature": "Optional<FilteredAcknowledgementRequest> getAcknowledgementRequests()", "full_signature": "@Override public Optional<FilteredAcknowledgementRequest> getAcknowledgementRequests()", "class_method_signature": "ImmutableSource.getAcknowledgementRequests()", "testcase": false, "constructor": false}, {"identifier": "getHeaderMapping", "parameters": "()", "modifiers": "@Override public", "return": "Optional<HeaderMapping>", "signature": "Optional<HeaderMapping> getHeaderMapping()", "full_signature": "@Override public Optional<HeaderMapping> getHeaderMapping()", "class_method_signature": "ImmutableSource.getHeaderMapping()", "testcase": false, "constructor": false}, {"identifier": "getPayloadMapping", "parameters": "()", "modifiers": "@Override public", "return": "PayloadMapping", "signature": "PayloadMapping getPayloadMapping()", "full_signature": "@Override public PayloadMapping getPayloadMapping()", "class_method_signature": "ImmutableSource.getPayloadMapping()", "testcase": false, "constructor": false}, {"identifier": "getReplyTarget", "parameters": "()", "modifiers": "@Override public", "return": "Optional<ReplyTarget>", "signature": "Optional<ReplyTarget> getReplyTarget()", "full_signature": "@Override public Optional<ReplyTarget> getReplyTarget()", "class_method_signature": "ImmutableSource.getReplyTarget()", "testcase": false, "constructor": false}, {"identifier": "isReplyTargetEnabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isReplyTargetEnabled()", "full_signature": "@Override public boolean isReplyTargetEnabled()", "class_method_signature": "ImmutableSource.isReplyTargetEnabled()", "testcase": false, "constructor": false}, {"identifier": "toJson", "parameters": "(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "full_signature": "@Override public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "class_method_signature": "ImmutableSource.toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject, final int index)", "modifiers": "public static", "return": "Source", "signature": "Source fromJson(final JsonObject jsonObject, final int index)", "full_signature": "public static Source fromJson(final JsonObject jsonObject, final int index)", "class_method_signature": "ImmutableSource.fromJson(final JsonObject jsonObject, final int index)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ImmutableSource.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableSource.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableSource.toString()", "testcase": false, "constructor": false}, {"identifier": "migrateReplyTarget", "parameters": "(final Source source, final ConnectionType connectionType)", "modifiers": "static", "return": "Source", "signature": "Source migrateReplyTarget(final Source source, final ConnectionType connectionType)", "full_signature": "static Source migrateReplyTarget(final Source source, final ConnectionType connectionType)", "class_method_signature": "ImmutableSource.migrateReplyTarget(final Source source, final ConnectionType connectionType)", "testcase": false, "constructor": false}, {"identifier": "migrateReplyTargetWithoutHeaders", "parameters": "(final Source source)", "modifiers": "private static", "return": "Source", "signature": "Source migrateReplyTargetWithoutHeaders(final Source source)", "full_signature": "private static Source migrateReplyTargetWithoutHeaders(final Source source)", "class_method_signature": "ImmutableSource.migrateReplyTargetWithoutHeaders(final Source source)", "testcase": false, "constructor": false}, {"identifier": "migrateReplyTargetWithHeaders", "parameters": "(final Source source)", "modifiers": "private static", "return": "Source", "signature": "Source migrateReplyTargetWithHeaders(final Source source)", "full_signature": "private static Source migrateReplyTargetWithHeaders(final Source source)", "class_method_signature": "ImmutableSource.migrateReplyTargetWithHeaders(final Source source)", "testcase": false, "constructor": false}], "file": "model/connectivity/src/main/java/org/eclipse/ditto/model/connectivity/ImmutableSource.java"}, "focal_method": {"identifier": "toJson", "parameters": "(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "modifiers": "@Override public", "return": "JsonObject", "body": "@Override\n    public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate) {\n        final Predicate<JsonField> predicate = schemaVersion.and(thePredicate);\n        final JsonObjectBuilder jsonObjectBuilder = JsonFactory.newObjectBuilder();\n\n        jsonObjectBuilder.set(JsonFields.SCHEMA_VERSION, schemaVersion.toInt(), predicate);\n        jsonObjectBuilder.set(JsonFields.ADDRESSES, addresses.stream()\n                .map(JsonFactory::newValue)\n                .collect(JsonCollectors.valuesToArray()), predicate.and(Objects::nonNull));\n        jsonObjectBuilder.set(JsonFields.CONSUMER_COUNT, consumerCount, predicate);\n        if (qos != null) {\n            jsonObjectBuilder.set(JsonFields.QOS, qos);\n        }\n\n        if (!authorizationContext.isEmpty()) {\n            jsonObjectBuilder.set(JsonFields.AUTHORIZATION_CONTEXT, authorizationContext.stream()\n                    .map(AuthorizationSubject::getId)\n                    .map(JsonFactory::newValue)\n                    .collect(JsonCollectors.valuesToArray()), predicate);\n        }\n\n        if (enforcement != null) {\n            jsonObjectBuilder.set(JsonFields.ENFORCEMENT, enforcement.toJson(schemaVersion, thePredicate), predicate);\n        }\n\n        if (acknowledgementRequests != null) {\n            jsonObjectBuilder.set(JsonFields.ACKNOWLEDGEMENT_REQUESTS,\n                    acknowledgementRequests.toJson(schemaVersion, thePredicate), predicate);\n        }\n\n        if (headerMapping != null) {\n            jsonObjectBuilder.set(JsonFields.HEADER_MAPPING, headerMapping.toJson(schemaVersion, thePredicate),\n                    predicate);\n        }\n\n        if (!payloadMapping.isEmpty()) {\n            jsonObjectBuilder.set(JsonFields.PAYLOAD_MAPPING, payloadMapping.toJson(), predicate);\n        }\n\n        if (replyTarget != null) {\n            jsonObjectBuilder.set(JsonFields.REPLY_TARGET, replyTarget.toJson(schemaVersion, thePredicate), predicate);\n        }\n\n        if (!(replyTargetEnabled && replyTarget == null)) {\n            // only set replyTargetEnabled if it is not set by reply-target migration\n            jsonObjectBuilder.set(JsonFields.REPLY_TARGET_ENABLED, replyTargetEnabled, predicate);\n        }\n\n        return jsonObjectBuilder.build();\n    }", "signature": "JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "full_signature": "@Override public JsonObject toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "class_method_signature": "ImmutableSource.toJson(final JsonSchemaVersion schemaVersion, final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false, "invocations": ["and", "newObjectBuilder", "set", "toInt", "set", "collect", "map", "stream", "valuesToArray", "and", "set", "set", "isEmpty", "set", "collect", "map", "map", "stream", "valuesToArray", "set", "toJson", "set", "toJson", "set", "toJson", "isEmpty", "set", "toJson", "set", "toJson", "set", "build"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}