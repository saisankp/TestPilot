{"test_class": {"identifier": "SoapUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "spring-ws-core/src/test/java/org/springframework/ws/soap/support/SoapUtilsTest.java"}, "test_case": {"identifier": "testExtractActionFromContentType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testExtractActionFromContentType() throws Exception {\n\t\tString soapAction = \"http://springframework.org/spring-ws/Action\";\n\n\t\tString contentType = \"application/soap+xml; action=\" + soapAction;\n\t\tString result = SoapUtils.extractActionFromContentType(contentType);\n\t\tAssert.assertEquals(\"Invalid SOAP action\", soapAction, result);\n\n\t\tcontentType = \"application/soap+xml; action\t  = \" + soapAction;\n\t\tresult = SoapUtils.extractActionFromContentType(contentType);\n\t\tAssert.assertEquals(\"Invalid SOAP action\", soapAction, result);\n\n\t\tcontentType = \"application/soap+xml; action=\" + soapAction + \" ; charset=UTF-8\";\n\t\tresult = SoapUtils.extractActionFromContentType(contentType);\n\t\tAssert.assertEquals(\"Invalid SOAP action\", soapAction, result);\n\n\t\tcontentType = \"application/soap+xml; charset=UTF-8; action=\" + soapAction;\n\t\tresult = SoapUtils.extractActionFromContentType(contentType);\n\t\tAssert.assertEquals(\"Invalid SOAP action\", soapAction, result);\n\t}", "signature": "void testExtractActionFromContentType()", "full_signature": "@Test public void testExtractActionFromContentType()", "class_method_signature": "SoapUtilsTest.testExtractActionFromContentType()", "testcase": true, "constructor": false, "invocations": ["extractActionFromContentType", "assertEquals", "extractActionFromContentType", "assertEquals", "extractActionFromContentType", "assertEquals", "extractActionFromContentType", "assertEquals"]}, "focal_class": {"identifier": "SoapUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Pattern ACTION_PATTERN = Pattern.compile(\"action\\\\s*=\\\\s*([^;]+)\");", "modifier": "private static final", "type": "Pattern", "declarator": "ACTION_PATTERN = Pattern.compile(\"action\\\\s*=\\\\s*([^;]+)\")", "var_name": "ACTION_PATTERN"}], "methods": [{"identifier": "SoapUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " SoapUtils()", "full_signature": "private  SoapUtils()", "class_method_signature": "SoapUtils.SoapUtils()", "testcase": false, "constructor": true}, {"identifier": "escapeAction", "parameters": "(String soapAction)", "modifiers": "public static", "return": "String", "signature": "String escapeAction(String soapAction)", "full_signature": "public static String escapeAction(String soapAction)", "class_method_signature": "SoapUtils.escapeAction(String soapAction)", "testcase": false, "constructor": false}, {"identifier": "extractActionFromContentType", "parameters": "(String contentType)", "modifiers": "public static", "return": "String", "signature": "String extractActionFromContentType(String contentType)", "full_signature": "public static String extractActionFromContentType(String contentType)", "class_method_signature": "SoapUtils.extractActionFromContentType(String contentType)", "testcase": false, "constructor": false}, {"identifier": "setActionInContentType", "parameters": "(String contentType, String action)", "modifiers": "public static", "return": "String", "signature": "String setActionInContentType(String contentType, String action)", "full_signature": "public static String setActionInContentType(String contentType, String action)", "class_method_signature": "SoapUtils.setActionInContentType(String contentType, String action)", "testcase": false, "constructor": false}], "file": "spring-ws-core/src/main/java/org/springframework/ws/soap/support/SoapUtils.java"}, "focal_method": {"identifier": "extractActionFromContentType", "parameters": "(String contentType)", "modifiers": "public static", "return": "String", "body": "public static String extractActionFromContentType(String contentType) {\n\t\tif (contentType != null) {\n\t\t\tMatcher matcher = ACTION_PATTERN.matcher(contentType);\n\t\t\tif (matcher.find() && matcher.groupCount() == 1) {\n\t\t\t\treturn matcher.group(1).trim();\n\t\t\t}\n\t\t}\n\t\treturn TransportConstants.EMPTY_SOAP_ACTION;\n\t}", "signature": "String extractActionFromContentType(String contentType)", "full_signature": "public static String extractActionFromContentType(String contentType)", "class_method_signature": "SoapUtils.extractActionFromContentType(String contentType)", "testcase": false, "constructor": false, "invocations": ["matcher", "find", "groupCount", "trim", "group"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}