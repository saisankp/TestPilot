{"test_class": {"identifier": "ServerStatsTest", "superclass": "extends ZKTestCase", "interfaces": "", "fields": [{"original_string": "private ServerStats.Provider providerMock;", "modifier": "private", "type": "ServerStats.Provider", "declarator": "providerMock", "var_name": "providerMock"}], "file": "zookeeper-server/src/test/java/org/apache/zookeeper/server/ServerStatsTest.java"}, "test_case": {"identifier": "testReset", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReset() {\n        // Given ...\n        ServerStats serverStats = new ServerStats(providerMock);\n\n        assertAllPacketsZero(serverStats);\n        assertAllLatencyZero(serverStats);\n\n        // When ...\n        serverStats.incrementPacketsSent();\n        serverStats.incrementPacketsReceived();\n        serverStats.updateLatency(Time.currentElapsedTime()-1000);\n\n        serverStats.reset();\n\n        // Then ...\n        assertAllPacketsZero(serverStats);\n        assertAllLatencyZero(serverStats);\n    }", "signature": "void testReset()", "full_signature": "@Test public void testReset()", "class_method_signature": "ServerStatsTest.testReset()", "testcase": true, "constructor": false, "invocations": ["assertAllPacketsZero", "assertAllLatencyZero", "incrementPacketsSent", "incrementPacketsReceived", "updateLatency", "currentElapsedTime", "reset", "assertAllPacketsZero", "assertAllLatencyZero"]}, "focal_class": {"identifier": "ServerStats", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ServerStats.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ServerStats.class)", "var_name": "LOG"}, {"original_string": "private long packetsSent;", "modifier": "private", "type": "long", "declarator": "packetsSent", "var_name": "packetsSent"}, {"original_string": "private long packetsReceived;", "modifier": "private", "type": "long", "declarator": "packetsReceived", "var_name": "packetsReceived"}, {"original_string": "private long maxLatency;", "modifier": "private", "type": "long", "declarator": "maxLatency", "var_name": "maxLatency"}, {"original_string": "private long minLatency = Long.MAX_VALUE;", "modifier": "private", "type": "long", "declarator": "minLatency = Long.MAX_VALUE", "var_name": "minLatency"}, {"original_string": "private long totalLatency = 0;", "modifier": "private", "type": "long", "declarator": "totalLatency = 0", "var_name": "totalLatency"}, {"original_string": "private long count = 0;", "modifier": "private", "type": "long", "declarator": "count = 0", "var_name": "count"}, {"original_string": "private AtomicLong fsyncThresholdExceedCount = new AtomicLong(0);", "modifier": "private", "type": "AtomicLong", "declarator": "fsyncThresholdExceedCount = new AtomicLong(0)", "var_name": "fsyncThresholdExceedCount"}, {"original_string": "private final BufferStats clientResponseStats = new BufferStats();", "modifier": "private final", "type": "BufferStats", "declarator": "clientResponseStats = new BufferStats()", "var_name": "clientResponseStats"}, {"original_string": "private final Provider provider;", "modifier": "private final", "type": "Provider", "declarator": "provider", "var_name": "provider"}], "methods": [{"identifier": "ServerStats", "parameters": "(Provider provider)", "modifiers": "public", "return": "", "signature": " ServerStats(Provider provider)", "full_signature": "public  ServerStats(Provider provider)", "class_method_signature": "ServerStats.ServerStats(Provider provider)", "testcase": false, "constructor": true}, {"identifier": "getMinLatency", "parameters": "()", "modifiers": "synchronized public", "return": "long", "signature": "long getMinLatency()", "full_signature": "synchronized public long getMinLatency()", "class_method_signature": "ServerStats.getMinLatency()", "testcase": false, "constructor": false}, {"identifier": "getAvgLatency", "parameters": "()", "modifiers": "synchronized public", "return": "long", "signature": "long getAvgLatency()", "full_signature": "synchronized public long getAvgLatency()", "class_method_signature": "ServerStats.getAvgLatency()", "testcase": false, "constructor": false}, {"identifier": "getMaxLatency", "parameters": "()", "modifiers": "synchronized public", "return": "long", "signature": "long getMaxLatency()", "full_signature": "synchronized public long getMaxLatency()", "class_method_signature": "ServerStats.getMaxLatency()", "testcase": false, "constructor": false}, {"identifier": "getOutstandingRequests", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getOutstandingRequests()", "full_signature": "public long getOutstandingRequests()", "class_method_signature": "ServerStats.getOutstandingRequests()", "testcase": false, "constructor": false}, {"identifier": "getLastProcessedZxid", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLastProcessedZxid()", "full_signature": "public long getLastProcessedZxid()", "class_method_signature": "ServerStats.getLastProcessedZxid()", "testcase": false, "constructor": false}, {"identifier": "getDataDirSize", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getDataDirSize()", "full_signature": "public long getDataDirSize()", "class_method_signature": "ServerStats.getDataDirSize()", "testcase": false, "constructor": false}, {"identifier": "getLogDirSize", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getLogDirSize()", "full_signature": "public long getLogDirSize()", "class_method_signature": "ServerStats.getLogDirSize()", "testcase": false, "constructor": false}, {"identifier": "getPacketsReceived", "parameters": "()", "modifiers": "synchronized public", "return": "long", "signature": "long getPacketsReceived()", "full_signature": "synchronized public long getPacketsReceived()", "class_method_signature": "ServerStats.getPacketsReceived()", "testcase": false, "constructor": false}, {"identifier": "getPacketsSent", "parameters": "()", "modifiers": "synchronized public", "return": "long", "signature": "long getPacketsSent()", "full_signature": "synchronized public long getPacketsSent()", "class_method_signature": "ServerStats.getPacketsSent()", "testcase": false, "constructor": false}, {"identifier": "getServerState", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getServerState()", "full_signature": "public String getServerState()", "class_method_signature": "ServerStats.getServerState()", "testcase": false, "constructor": false}, {"identifier": "getNumAliveClientConnections", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getNumAliveClientConnections()", "full_signature": "public int getNumAliveClientConnections()", "class_method_signature": "ServerStats.getNumAliveClientConnections()", "testcase": false, "constructor": false}, {"identifier": "isProviderNull", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isProviderNull()", "full_signature": "public boolean isProviderNull()", "class_method_signature": "ServerStats.isProviderNull()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ServerStats.toString()", "testcase": false, "constructor": false}, {"identifier": "updateLatency", "parameters": "(long requestCreateTime)", "modifiers": "synchronized", "return": "void", "signature": "void updateLatency(long requestCreateTime)", "full_signature": "synchronized void updateLatency(long requestCreateTime)", "class_method_signature": "ServerStats.updateLatency(long requestCreateTime)", "testcase": false, "constructor": false}, {"identifier": "resetLatency", "parameters": "()", "modifiers": "synchronized public", "return": "void", "signature": "void resetLatency()", "full_signature": "synchronized public void resetLatency()", "class_method_signature": "ServerStats.resetLatency()", "testcase": false, "constructor": false}, {"identifier": "resetMaxLatency", "parameters": "()", "modifiers": "synchronized public", "return": "void", "signature": "void resetMaxLatency()", "full_signature": "synchronized public void resetMaxLatency()", "class_method_signature": "ServerStats.resetMaxLatency()", "testcase": false, "constructor": false}, {"identifier": "incrementPacketsReceived", "parameters": "()", "modifiers": "synchronized public", "return": "void", "signature": "void incrementPacketsReceived()", "full_signature": "synchronized public void incrementPacketsReceived()", "class_method_signature": "ServerStats.incrementPacketsReceived()", "testcase": false, "constructor": false}, {"identifier": "incrementPacketsSent", "parameters": "()", "modifiers": "synchronized public", "return": "void", "signature": "void incrementPacketsSent()", "full_signature": "synchronized public void incrementPacketsSent()", "class_method_signature": "ServerStats.incrementPacketsSent()", "testcase": false, "constructor": false}, {"identifier": "resetRequestCounters", "parameters": "()", "modifiers": "synchronized public", "return": "void", "signature": "void resetRequestCounters()", "full_signature": "synchronized public void resetRequestCounters()", "class_method_signature": "ServerStats.resetRequestCounters()", "testcase": false, "constructor": false}, {"identifier": "getFsyncThresholdExceedCount", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getFsyncThresholdExceedCount()", "full_signature": "public long getFsyncThresholdExceedCount()", "class_method_signature": "ServerStats.getFsyncThresholdExceedCount()", "testcase": false, "constructor": false}, {"identifier": "incrementFsyncThresholdExceedCount", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void incrementFsyncThresholdExceedCount()", "full_signature": "public void incrementFsyncThresholdExceedCount()", "class_method_signature": "ServerStats.incrementFsyncThresholdExceedCount()", "testcase": false, "constructor": false}, {"identifier": "resetFsyncThresholdExceedCount", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void resetFsyncThresholdExceedCount()", "full_signature": "public void resetFsyncThresholdExceedCount()", "class_method_signature": "ServerStats.resetFsyncThresholdExceedCount()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "synchronized public", "return": "void", "signature": "void reset()", "full_signature": "synchronized public void reset()", "class_method_signature": "ServerStats.reset()", "testcase": false, "constructor": false}, {"identifier": "updateClientResponseSize", "parameters": "(int size)", "modifiers": "public", "return": "void", "signature": "void updateClientResponseSize(int size)", "full_signature": "public void updateClientResponseSize(int size)", "class_method_signature": "ServerStats.updateClientResponseSize(int size)", "testcase": false, "constructor": false}, {"identifier": "getClientResponseStats", "parameters": "()", "modifiers": "public", "return": "BufferStats", "signature": "BufferStats getClientResponseStats()", "full_signature": "public BufferStats getClientResponseStats()", "class_method_signature": "ServerStats.getClientResponseStats()", "testcase": false, "constructor": false}], "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/ServerStats.java"}, "focal_method": {"identifier": "reset", "parameters": "()", "modifiers": "synchronized public", "return": "void", "body": "synchronized public void reset() {\n        resetLatency();\n        resetRequestCounters();\n        clientResponseStats.reset();\n    }", "signature": "void reset()", "full_signature": "synchronized public void reset()", "class_method_signature": "ServerStats.reset()", "testcase": false, "constructor": false, "invocations": ["resetLatency", "resetRequestCounters", "reset"]}, "repository": {"repo_id": 230430206, "url": "https://github.com/boomblog/zookeeper-vip2", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 10, "size": 3105, "license": "licensed"}}