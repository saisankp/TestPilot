{"test_class": {"identifier": "TimesTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/de/slackspace/openkeepass/domain/TimesTest.java"}, "test_case": {"identifier": "shouldMarshallObjectToXml", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldMarshallObjectToXml() throws Exception {\n        Times times = new TimesBuilder()\n            .creationTime(CalendarHandler.createCalendar(2016, 1, 15))\n            .expires(true)\n            .expiryTime(CalendarHandler.createCalendar(2016, 1, 16))\n            .lastAccessTime(CalendarHandler.createCalendar(2016, 1, 17))\n            .lastModificationTime(CalendarHandler.createCalendar(2016, 1, 18))\n            .locationChanged(CalendarHandler.createCalendar(2016, 1, 19))\n            .usageCount(23)\n            .build();\n\n        ByteArrayOutputStream bos = new SimpleXmlParser().toXml(times);\n        \n        String xml = XmlStringCleaner.cleanXmlString(new String(bos.toByteArray()));\n        Assert.assertEquals(\"<times><LastModificationTime>2016-01-18T00:00:00</LastModificationTime><CreationTime>2016-01-15T00:00:00</CreationTime><LastAccessTime>2016-01-17T00:00:00</LastAccessTime><ExpiryTime>2016-01-16T00:00:00</ExpiryTime><Expires>True</Expires><UsageCount>23</UsageCount><LocationChanged>2016-01-19T00:00:00</LocationChanged></times>\", xml);\n    }", "signature": "void shouldMarshallObjectToXml()", "full_signature": "@Test public void shouldMarshallObjectToXml()", "class_method_signature": "TimesTest.shouldMarshallObjectToXml()", "testcase": true, "constructor": false, "invocations": ["build", "usageCount", "locationChanged", "lastModificationTime", "lastAccessTime", "expiryTime", "expires", "creationTime", "createCalendar", "createCalendar", "createCalendar", "createCalendar", "createCalendar", "toXml", "cleanXmlString", "toByteArray", "assertEquals"]}, "focal_class": {"identifier": "Times", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Element(name = \"LastModificationTime\", type = GregorianCalendar.class, required = false)\n    private Calendar lastModificationTime;", "modifier": "@Element(name = \"LastModificationTime\", type = GregorianCalendar.class, required = false)\n    private", "type": "Calendar", "declarator": "lastModificationTime", "var_name": "lastModificationTime"}, {"original_string": "@Element(name = \"CreationTime\", type = GregorianCalendar.class, required = false)\n    private Calendar creationTime;", "modifier": "@Element(name = \"CreationTime\", type = GregorianCalendar.class, required = false)\n    private", "type": "Calendar", "declarator": "creationTime", "var_name": "creationTime"}, {"original_string": "@Element(name = \"LastAccessTime\", type = GregorianCalendar.class, required = false)\n    private Calendar lastAccessTime;", "modifier": "@Element(name = \"LastAccessTime\", type = GregorianCalendar.class, required = false)\n    private", "type": "Calendar", "declarator": "lastAccessTime", "var_name": "lastAccessTime"}, {"original_string": "@Element(name = \"ExpiryTime\", type = GregorianCalendar.class, required = false)\n    private Calendar expiryTime;", "modifier": "@Element(name = \"ExpiryTime\", type = GregorianCalendar.class, required = false)\n    private", "type": "Calendar", "declarator": "expiryTime", "var_name": "expiryTime"}, {"original_string": "@Element(name = \"Expires\", required = false)\n    private Boolean expires;", "modifier": "@Element(name = \"Expires\", required = false)\n    private", "type": "Boolean", "declarator": "expires", "var_name": "expires"}, {"original_string": "@Element(name = \"UsageCount\", required = false)\n    private int usageCount;", "modifier": "@Element(name = \"UsageCount\", required = false)\n    private", "type": "int", "declarator": "usageCount", "var_name": "usageCount"}, {"original_string": "@Element(name = \"LocationChanged\", type = GregorianCalendar.class, required = false)\n    private Calendar locationChanged;", "modifier": "@Element(name = \"LocationChanged\", type = GregorianCalendar.class, required = false)\n    private", "type": "Calendar", "declarator": "locationChanged", "var_name": "locationChanged"}], "methods": [{"identifier": "Times", "parameters": "()", "modifiers": "", "return": "", "signature": " Times()", "full_signature": "  Times()", "class_method_signature": "Times.Times()", "testcase": false, "constructor": true}, {"identifier": "Times", "parameters": "(TimesContract timesContract)", "modifiers": "public", "return": "", "signature": " Times(TimesContract timesContract)", "full_signature": "public  Times(TimesContract timesContract)", "class_method_signature": "Times.Times(TimesContract timesContract)", "testcase": false, "constructor": true}, {"identifier": "getLastModificationTime", "parameters": "()", "modifiers": "public", "return": "Calendar", "signature": "Calendar getLastModificationTime()", "full_signature": "public Calendar getLastModificationTime()", "class_method_signature": "Times.getLastModificationTime()", "testcase": false, "constructor": false}, {"identifier": "getCreationTime", "parameters": "()", "modifiers": "public", "return": "Calendar", "signature": "Calendar getCreationTime()", "full_signature": "public Calendar getCreationTime()", "class_method_signature": "Times.getCreationTime()", "testcase": false, "constructor": false}, {"identifier": "getLastAccessTime", "parameters": "()", "modifiers": "public", "return": "Calendar", "signature": "Calendar getLastAccessTime()", "full_signature": "public Calendar getLastAccessTime()", "class_method_signature": "Times.getLastAccessTime()", "testcase": false, "constructor": false}, {"identifier": "getExpiryTime", "parameters": "()", "modifiers": "public", "return": "Calendar", "signature": "Calendar getExpiryTime()", "full_signature": "public Calendar getExpiryTime()", "class_method_signature": "Times.getExpiryTime()", "testcase": false, "constructor": false}, {"identifier": "expires", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean expires()", "full_signature": "public boolean expires()", "class_method_signature": "Times.expires()", "testcase": false, "constructor": false}, {"identifier": "getUsageCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getUsageCount()", "full_signature": "public int getUsageCount()", "class_method_signature": "Times.getUsageCount()", "testcase": false, "constructor": false}, {"identifier": "getLocationChanged", "parameters": "()", "modifiers": "public", "return": "Calendar", "signature": "Calendar getLocationChanged()", "full_signature": "public Calendar getLocationChanged()", "class_method_signature": "Times.getLocationChanged()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public final", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public final int hashCode()", "class_method_signature": "Times.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public final boolean equals(Object obj)", "class_method_signature": "Times.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Times.toString()", "testcase": false, "constructor": false}], "file": "src/de/slackspace/openkeepass/domain/Times.java"}, "focal_method": {"identifier": "expires", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean expires() {\n        return expires;\n    }", "signature": "boolean expires()", "full_signature": "public boolean expires()", "class_method_signature": "Times.expires()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 102137829, "url": "https://github.com/privacyint/ThornSec", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 10, "size": 20604, "license": "licensed"}}