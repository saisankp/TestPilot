{"test_class": {"identifier": "KieModuleModelExampleTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NL = System.getProperty(\"line.separator\");", "modifier": "private static final", "type": "String", "declarator": "NL = System.getProperty(\"line.separator\")", "var_name": "NL"}], "file": "drools-examples-api/kiemodulemodel-example/src/test/java/org/drools/example/api/kiemodulemodel/KieModuleModelExampleTest.java"}, "test_case": {"identifier": "testGo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGo() {\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        PrintStream ps = new PrintStream(baos);\n        new KieModuleModelExample().go(ps);\n        ps.close();\n\n        String actual = new String(baos.toByteArray());\n        String expected = \"\" +\n                          \"Dave: Hello, HAL. Do you read me, HAL?\" + NL +\n                          \"HAL: Dave. I read you.\" + NL +\n                          \"Dave: Open the pod bay doors, HAL.\" + NL +\n                          \"HAL: I'm sorry, Dave. I'm afraid I can't do that.\" + NL +\n                          \"Dave: What's the problem?\" + NL +\n                          \"HAL: I think you know what the problem is just as well as I do.\" + NL;\n        assertEquals(expected, actual);\n    }", "signature": "void testGo()", "full_signature": "@Test public void testGo()", "class_method_signature": "KieModuleModelExampleTest.testGo()", "testcase": true, "constructor": false, "invocations": ["go", "close", "toByteArray", "assertEquals"]}, "focal_class": {"identifier": "KieModuleModelExample", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "go", "parameters": "(PrintStream out)", "modifiers": "public", "return": "void", "signature": "void go(PrintStream out)", "full_signature": "public void go(PrintStream out)", "class_method_signature": "KieModuleModelExample.go(PrintStream out)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "KieModuleModelExample.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "getRule", "parameters": "()", "modifiers": "private static", "return": "String", "signature": "String getRule()", "full_signature": "private static String getRule()", "class_method_signature": "KieModuleModelExample.getRule()", "testcase": false, "constructor": false}, {"identifier": "createMessage", "parameters": "(KieContainer kContainer, String name, String text)", "modifiers": "private static", "return": "Object", "signature": "Object createMessage(KieContainer kContainer, String name, String text)", "full_signature": "private static Object createMessage(KieContainer kContainer, String name, String text)", "class_method_signature": "KieModuleModelExample.createMessage(KieContainer kContainer, String name, String text)", "testcase": false, "constructor": false}, {"identifier": "getFile", "parameters": "(String exampleName)", "modifiers": "public static", "return": "File", "signature": "File getFile(String exampleName)", "full_signature": "public static File getFile(String exampleName)", "class_method_signature": "KieModuleModelExample.getFile(String exampleName)", "testcase": false, "constructor": false}], "file": "drools-examples-api/kiemodulemodel-example/src/main/java/org/drools/example/api/kiemodulemodel/KieModuleModelExample.java"}, "focal_method": {"identifier": "go", "parameters": "(PrintStream out)", "modifiers": "public", "return": "void", "body": "public void go(PrintStream out) {\n        KieServices ks = KieServices.Factory.get();\n        KieFileSystem kfs = ks.newKieFileSystem();\n\n        Resource ex1Res = ks.getResources().newFileSystemResource(getFile(\"named-kiesession\"));\n        Resource ex2Res = ks.getResources().newFileSystemResource(getFile(\"kiebase-inclusion\"));\n\n        ReleaseId rid = ks.newReleaseId(\"org.drools\", \"kiemodulemodel-example\", Drools.getFullVersion());\n        kfs.generateAndWritePomXML(rid);\n\n        KieModuleModel kModuleModel = ks.newKieModuleModel();\n        kModuleModel.newKieBaseModel(\"kiemodulemodel\")\n                    .addInclude(\"kbase1\")\n                    .addInclude(\"kbase2\")\n                    .newKieSessionModel(\"ksession6\");\n\n        kfs.writeKModuleXML(kModuleModel.toXML());\n        kfs.write(\"src/main/resources/kiemodulemodel/HAL6.drl\", getRule());\n\n        KieBuilder kb = ks.newKieBuilder(kfs);\n        kb.setDependencies(ex1Res, ex2Res);\n        kb.buildAll(); // kieModule is automatically deployed to KieRepository if successfully built.\n        if (kb.getResults().hasMessages(Level.ERROR)) {\n            throw new RuntimeException(\"Build Errors:\\n\" + kb.getResults().toString());\n        }\n\n        KieContainer kContainer = ks.newKieContainer(rid);\n\n        KieSession kSession = kContainer.newKieSession(\"ksession6\");\n        kSession.setGlobal(\"out\", out);\n\n        Object msg1 = createMessage(kContainer, \"Dave\", \"Hello, HAL. Do you read me, HAL?\");\n        kSession.insert(msg1);\n        kSession.fireAllRules();\n\n        Object msg2 = createMessage(kContainer, \"Dave\", \"Open the pod bay doors, HAL.\");\n        kSession.insert(msg2);\n        kSession.fireAllRules();\n\n        Object msg3 = createMessage(kContainer, \"Dave\", \"What's the problem?\");\n        kSession.insert(msg3);\n        kSession.fireAllRules();\n    }", "signature": "void go(PrintStream out)", "full_signature": "public void go(PrintStream out)", "class_method_signature": "KieModuleModelExample.go(PrintStream out)", "testcase": false, "constructor": false, "invocations": ["get", "newKieFileSystem", "newFileSystemResource", "getResources", "getFile", "newFileSystemResource", "getResources", "getFile", "newReleaseId", "getFullVersion", "generateAndWritePomXML", "newKieModuleModel", "newKieSessionModel", "addInclude", "addInclude", "newKieBaseModel", "writeKModuleXML", "toXML", "write", "getRule", "newKieBuilder", "setDependencies", "buildAll", "hasMessages", "getResults", "toString", "getResults", "newKieContainer", "newKieSession", "setGlobal", "createMessage", "insert", "fireAllRules", "createMessage", "insert", "fireAllRules", "createMessage", "insert", "fireAllRules"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}