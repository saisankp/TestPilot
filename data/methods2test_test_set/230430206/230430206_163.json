{"test_class": {"identifier": "LeaderBeanTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Leader leader;", "modifier": "private", "type": "Leader", "declarator": "leader", "var_name": "leader"}, {"original_string": "private LeaderBean leaderBean;", "modifier": "private", "type": "LeaderBean", "declarator": "leaderBean", "var_name": "leaderBean"}, {"original_string": "private FileTxnSnapLog fileTxnSnapLog;", "modifier": "private", "type": "FileTxnSnapLog", "declarator": "fileTxnSnapLog", "var_name": "fileTxnSnapLog"}, {"original_string": "private LeaderZooKeeperServer zks;", "modifier": "private", "type": "LeaderZooKeeperServer", "declarator": "zks", "var_name": "zks"}, {"original_string": "private QuorumPeer qp;", "modifier": "private", "type": "QuorumPeer", "declarator": "qp", "var_name": "qp"}], "file": "zookeeper-server/src/test/java/org/apache/zookeeper/server/quorum/LeaderBeanTest.java"}, "test_case": {"identifier": "testGetName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetName() {\n        assertEquals(\"Leader\", leaderBean.getName());\n    }", "signature": "void testGetName()", "full_signature": "@Test public void testGetName()", "class_method_signature": "LeaderBeanTest.testGetName()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getName"]}, "focal_class": {"identifier": "LeaderBean", "superclass": "extends ZooKeeperServerBean", "interfaces": "implements LeaderMXBean", "fields": [{"original_string": "private final Leader leader;", "modifier": "private final", "type": "Leader", "declarator": "leader", "var_name": "leader"}], "methods": [{"identifier": "LeaderBean", "parameters": "(Leader leader, ZooKeeperServer zks)", "modifiers": "public", "return": "", "signature": " LeaderBean(Leader leader, ZooKeeperServer zks)", "full_signature": "public  LeaderBean(Leader leader, ZooKeeperServer zks)", "class_method_signature": "LeaderBean.LeaderBean(Leader leader, ZooKeeperServer zks)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "LeaderBean.getName()", "testcase": false, "constructor": false}, {"identifier": "getCurrentZxid", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCurrentZxid()", "full_signature": "public String getCurrentZxid()", "class_method_signature": "LeaderBean.getCurrentZxid()", "testcase": false, "constructor": false}, {"identifier": "followerInfo", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String followerInfo()", "full_signature": "public String followerInfo()", "class_method_signature": "LeaderBean.followerInfo()", "testcase": false, "constructor": false}, {"identifier": "getElectionTimeTaken", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getElectionTimeTaken()", "full_signature": "@Override public long getElectionTimeTaken()", "class_method_signature": "LeaderBean.getElectionTimeTaken()", "testcase": false, "constructor": false}, {"identifier": "getLastProposalSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getLastProposalSize()", "full_signature": "@Override public int getLastProposalSize()", "class_method_signature": "LeaderBean.getLastProposalSize()", "testcase": false, "constructor": false}, {"identifier": "getMinProposalSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMinProposalSize()", "full_signature": "@Override public int getMinProposalSize()", "class_method_signature": "LeaderBean.getMinProposalSize()", "testcase": false, "constructor": false}, {"identifier": "getMaxProposalSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getMaxProposalSize()", "full_signature": "@Override public int getMaxProposalSize()", "class_method_signature": "LeaderBean.getMaxProposalSize()", "testcase": false, "constructor": false}, {"identifier": "resetProposalStatistics", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void resetProposalStatistics()", "full_signature": "@Override public void resetProposalStatistics()", "class_method_signature": "LeaderBean.resetProposalStatistics()", "testcase": false, "constructor": false}], "file": "zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/LeaderBean.java"}, "focal_method": {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getName() {\n        return \"Leader\";\n    }", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "LeaderBean.getName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 230430206, "url": "https://github.com/boomblog/zookeeper-vip2", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 10, "size": 3105, "license": "licensed"}}