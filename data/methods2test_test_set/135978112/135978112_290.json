{"test_class": {"identifier": "StreamsConfigTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Properties props = new Properties();", "modifier": "private", "type": "Properties", "declarator": "props = new Properties()", "var_name": "props"}, {"original_string": "private StreamsConfig streamsConfig;", "modifier": "private", "type": "StreamsConfig", "declarator": "streamsConfig", "var_name": "streamsConfig"}], "file": "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java"}, "test_case": {"identifier": "testGetRestoreConsumerConfigs", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetRestoreConsumerConfigs() throws Exception {\n        Map<String, Object> returnedProps = streamsConfig.getRestoreConsumerConfigs(\"client\");\n        assertEquals(returnedProps.get(ConsumerConfig.CLIENT_ID_CONFIG), \"client-restore-consumer\");\n        assertNull(returnedProps.get(ConsumerConfig.GROUP_ID_CONFIG));\n    }", "signature": "void testGetRestoreConsumerConfigs()", "full_signature": "@Test public void testGetRestoreConsumerConfigs()", "class_method_signature": "StreamsConfigTest.testGetRestoreConsumerConfigs()", "testcase": true, "constructor": false, "invocations": ["getRestoreConsumerConfigs", "assertEquals", "get", "assertNull", "get"]}, "focal_class": {"identifier": "StreamsConfig", "superclass": "extends AbstractConfig", "interfaces": "", "fields": [{"original_string": "private static final ConfigDef CONFIG;", "modifier": "private static final", "type": "ConfigDef", "declarator": "CONFIG", "var_name": "CONFIG"}, {"original_string": "public static final String STATE_DIR_CONFIG = \"state.dir\";", "modifier": "public static final", "type": "String", "declarator": "STATE_DIR_CONFIG = \"state.dir\"", "var_name": "STATE_DIR_CONFIG"}, {"original_string": "private static final String STATE_DIR_DOC = \"Directory location for state store.\";", "modifier": "private static final", "type": "String", "declarator": "STATE_DIR_DOC = \"Directory location for state store.\"", "var_name": "STATE_DIR_DOC"}, {"original_string": "public static final String ZOOKEEPER_CONNECT_CONFIG = \"zookeeper.connect\";", "modifier": "public static final", "type": "String", "declarator": "ZOOKEEPER_CONNECT_CONFIG = \"zookeeper.connect\"", "var_name": "ZOOKEEPER_CONNECT_CONFIG"}, {"original_string": "private static final String ZOOKEEPER_CONNECT_DOC = \"Zookeeper connect string for Kafka topics management.\";", "modifier": "private static final", "type": "String", "declarator": "ZOOKEEPER_CONNECT_DOC = \"Zookeeper connect string for Kafka topics management.\"", "var_name": "ZOOKEEPER_CONNECT_DOC"}, {"original_string": "public static final String COMMIT_INTERVAL_MS_CONFIG = \"commit.interval.ms\";", "modifier": "public static final", "type": "String", "declarator": "COMMIT_INTERVAL_MS_CONFIG = \"commit.interval.ms\"", "var_name": "COMMIT_INTERVAL_MS_CONFIG"}, {"original_string": "private static final String COMMIT_INTERVAL_MS_DOC = \"The frequency with which to save the position of the processor.\";", "modifier": "private static final", "type": "String", "declarator": "COMMIT_INTERVAL_MS_DOC = \"The frequency with which to save the position of the processor.\"", "var_name": "COMMIT_INTERVAL_MS_DOC"}, {"original_string": "public static final String POLL_MS_CONFIG = \"poll.ms\";", "modifier": "public static final", "type": "String", "declarator": "POLL_MS_CONFIG = \"poll.ms\"", "var_name": "POLL_MS_CONFIG"}, {"original_string": "private static final String POLL_MS_DOC = \"The amount of time in milliseconds to block waiting for input.\";", "modifier": "private static final", "type": "String", "declarator": "POLL_MS_DOC = \"The amount of time in milliseconds to block waiting for input.\"", "var_name": "POLL_MS_DOC"}, {"original_string": "public static final String NUM_STREAM_THREADS_CONFIG = \"num.stream.threads\";", "modifier": "public static final", "type": "String", "declarator": "NUM_STREAM_THREADS_CONFIG = \"num.stream.threads\"", "var_name": "NUM_STREAM_THREADS_CONFIG"}, {"original_string": "private static final String NUM_STREAM_THREADS_DOC = \"The number of threads to execute stream processing.\";", "modifier": "private static final", "type": "String", "declarator": "NUM_STREAM_THREADS_DOC = \"The number of threads to execute stream processing.\"", "var_name": "NUM_STREAM_THREADS_DOC"}, {"original_string": "public static final String NUM_STANDBY_REPLICAS_CONFIG = \"num.standby.replicas\";", "modifier": "public static final", "type": "String", "declarator": "NUM_STANDBY_REPLICAS_CONFIG = \"num.standby.replicas\"", "var_name": "NUM_STANDBY_REPLICAS_CONFIG"}, {"original_string": "private static final String NUM_STANDBY_REPLICAS_DOC = \"The number of standby replicas for each task.\";", "modifier": "private static final", "type": "String", "declarator": "NUM_STANDBY_REPLICAS_DOC = \"The number of standby replicas for each task.\"", "var_name": "NUM_STANDBY_REPLICAS_DOC"}, {"original_string": "public static final String BUFFERED_RECORDS_PER_PARTITION_CONFIG = \"buffered.records.per.partition\";", "modifier": "public static final", "type": "String", "declarator": "BUFFERED_RECORDS_PER_PARTITION_CONFIG = \"buffered.records.per.partition\"", "var_name": "BUFFERED_RECORDS_PER_PARTITION_CONFIG"}, {"original_string": "private static final String BUFFERED_RECORDS_PER_PARTITION_DOC = \"The maximum number of records to buffer per partition.\";", "modifier": "private static final", "type": "String", "declarator": "BUFFERED_RECORDS_PER_PARTITION_DOC = \"The maximum number of records to buffer per partition.\"", "var_name": "BUFFERED_RECORDS_PER_PARTITION_DOC"}, {"original_string": "public static final String STATE_CLEANUP_DELAY_MS_CONFIG = \"state.cleanup.delay.ms\";", "modifier": "public static final", "type": "String", "declarator": "STATE_CLEANUP_DELAY_MS_CONFIG = \"state.cleanup.delay.ms\"", "var_name": "STATE_CLEANUP_DELAY_MS_CONFIG"}, {"original_string": "private static final String STATE_CLEANUP_DELAY_MS_DOC = \"The amount of time in milliseconds to wait before deleting state when a partition has migrated.\";", "modifier": "private static final", "type": "String", "declarator": "STATE_CLEANUP_DELAY_MS_DOC = \"The amount of time in milliseconds to wait before deleting state when a partition has migrated.\"", "var_name": "STATE_CLEANUP_DELAY_MS_DOC"}, {"original_string": "public static final String TIMESTAMP_EXTRACTOR_CLASS_CONFIG = \"timestamp.extractor\";", "modifier": "public static final", "type": "String", "declarator": "TIMESTAMP_EXTRACTOR_CLASS_CONFIG = \"timestamp.extractor\"", "var_name": "TIMESTAMP_EXTRACTOR_CLASS_CONFIG"}, {"original_string": "private static final String TIMESTAMP_EXTRACTOR_CLASS_DOC = \"Timestamp extractor class that implements the <code>TimestampExtractor</code> interface.\";", "modifier": "private static final", "type": "String", "declarator": "TIMESTAMP_EXTRACTOR_CLASS_DOC = \"Timestamp extractor class that implements the <code>TimestampExtractor</code> interface.\"", "var_name": "TIMESTAMP_EXTRACTOR_CLASS_DOC"}, {"original_string": "public static final String PARTITION_GROUPER_CLASS_CONFIG = \"partition.grouper\";", "modifier": "public static final", "type": "String", "declarator": "PARTITION_GROUPER_CLASS_CONFIG = \"partition.grouper\"", "var_name": "PARTITION_GROUPER_CLASS_CONFIG"}, {"original_string": "private static final String PARTITION_GROUPER_CLASS_DOC = \"Partition grouper class that implements the <code>PartitionGrouper</code> interface.\";", "modifier": "private static final", "type": "String", "declarator": "PARTITION_GROUPER_CLASS_DOC = \"Partition grouper class that implements the <code>PartitionGrouper</code> interface.\"", "var_name": "PARTITION_GROUPER_CLASS_DOC"}, {"original_string": "public static final String APPLICATION_ID_CONFIG = \"application.id\";", "modifier": "public static final", "type": "String", "declarator": "APPLICATION_ID_CONFIG = \"application.id\"", "var_name": "APPLICATION_ID_CONFIG"}, {"original_string": "public static final String APPLICATION_ID_DOC = \"An identifier for the stream processing application. Must be unique within the Kafka cluster. It is used as 1) the default client-id prefix, 2) the group-id for membership management, 3) the changelog topic prefix.\";", "modifier": "public static final", "type": "String", "declarator": "APPLICATION_ID_DOC = \"An identifier for the stream processing application. Must be unique within the Kafka cluster. It is used as 1) the default client-id prefix, 2) the group-id for membership management, 3) the changelog topic prefix.\"", "var_name": "APPLICATION_ID_DOC"}, {"original_string": "public static final String REPLICATION_FACTOR_CONFIG = \"replication.factor\";", "modifier": "public static final", "type": "String", "declarator": "REPLICATION_FACTOR_CONFIG = \"replication.factor\"", "var_name": "REPLICATION_FACTOR_CONFIG"}, {"original_string": "public static final String REPLICATION_FACTOR_DOC = \"The replication factor for change log topics and repartition topics created by the stream processing application.\";", "modifier": "public static final", "type": "String", "declarator": "REPLICATION_FACTOR_DOC = \"The replication factor for change log topics and repartition topics created by the stream processing application.\"", "var_name": "REPLICATION_FACTOR_DOC"}, {"original_string": "public static final String KEY_SERDE_CLASS_CONFIG = \"key.serde\";", "modifier": "public static final", "type": "String", "declarator": "KEY_SERDE_CLASS_CONFIG = \"key.serde\"", "var_name": "KEY_SERDE_CLASS_CONFIG"}, {"original_string": "public static final String KEY_SERDE_CLASS_DOC = \"Serializer / deserializer class for key that implements the <code>Serde</code> interface.\";", "modifier": "public static final", "type": "String", "declarator": "KEY_SERDE_CLASS_DOC = \"Serializer / deserializer class for key that implements the <code>Serde</code> interface.\"", "var_name": "KEY_SERDE_CLASS_DOC"}, {"original_string": "public static final String VALUE_SERDE_CLASS_CONFIG = \"value.serde\";", "modifier": "public static final", "type": "String", "declarator": "VALUE_SERDE_CLASS_CONFIG = \"value.serde\"", "var_name": "VALUE_SERDE_CLASS_CONFIG"}, {"original_string": "public static final String VALUE_SERDE_CLASS_DOC = \"Serializer / deserializer class for value that implements the <code>Serde</code> interface.\";", "modifier": "public static final", "type": "String", "declarator": "VALUE_SERDE_CLASS_DOC = \"Serializer / deserializer class for value that implements the <code>Serde</code> interface.\"", "var_name": "VALUE_SERDE_CLASS_DOC"}, {"original_string": "public static final String METRICS_SAMPLE_WINDOW_MS_CONFIG = CommonClientConfigs.METRICS_SAMPLE_WINDOW_MS_CONFIG;", "modifier": "public static final", "type": "String", "declarator": "METRICS_SAMPLE_WINDOW_MS_CONFIG = CommonClientConfigs.METRICS_SAMPLE_WINDOW_MS_CONFIG", "var_name": "METRICS_SAMPLE_WINDOW_MS_CONFIG"}, {"original_string": "public static final String METRICS_NUM_SAMPLES_CONFIG = CommonClientConfigs.METRICS_NUM_SAMPLES_CONFIG;", "modifier": "public static final", "type": "String", "declarator": "METRICS_NUM_SAMPLES_CONFIG = CommonClientConfigs.METRICS_NUM_SAMPLES_CONFIG", "var_name": "METRICS_NUM_SAMPLES_CONFIG"}, {"original_string": "public static final String METRIC_REPORTER_CLASSES_CONFIG = CommonClientConfigs.METRIC_REPORTER_CLASSES_CONFIG;", "modifier": "public static final", "type": "String", "declarator": "METRIC_REPORTER_CLASSES_CONFIG = CommonClientConfigs.METRIC_REPORTER_CLASSES_CONFIG", "var_name": "METRIC_REPORTER_CLASSES_CONFIG"}, {"original_string": "public static final String BOOTSTRAP_SERVERS_CONFIG = CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG;", "modifier": "public static final", "type": "String", "declarator": "BOOTSTRAP_SERVERS_CONFIG = CommonClientConfigs.BOOTSTRAP_SERVERS_CONFIG", "var_name": "BOOTSTRAP_SERVERS_CONFIG"}, {"original_string": "public static final String CLIENT_ID_CONFIG = CommonClientConfigs.CLIENT_ID_CONFIG;", "modifier": "public static final", "type": "String", "declarator": "CLIENT_ID_CONFIG = CommonClientConfigs.CLIENT_ID_CONFIG", "var_name": "CLIENT_ID_CONFIG"}], "methods": [{"identifier": "StreamsConfig", "parameters": "(Map<?, ?> props)", "modifiers": "public", "return": "", "signature": " StreamsConfig(Map<?, ?> props)", "full_signature": "public  StreamsConfig(Map<?, ?> props)", "class_method_signature": "StreamsConfig.StreamsConfig(Map<?, ?> props)", "testcase": false, "constructor": true}, {"identifier": "getConsumerConfigs", "parameters": "(StreamThread streamThread, String groupId, String clientId)", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> getConsumerConfigs(StreamThread streamThread, String groupId, String clientId)", "full_signature": "public Map<String, Object> getConsumerConfigs(StreamThread streamThread, String groupId, String clientId)", "class_method_signature": "StreamsConfig.getConsumerConfigs(StreamThread streamThread, String groupId, String clientId)", "testcase": false, "constructor": false}, {"identifier": "getRestoreConsumerConfigs", "parameters": "(String clientId)", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> getRestoreConsumerConfigs(String clientId)", "full_signature": "public Map<String, Object> getRestoreConsumerConfigs(String clientId)", "class_method_signature": "StreamsConfig.getRestoreConsumerConfigs(String clientId)", "testcase": false, "constructor": false}, {"identifier": "getBaseConsumerConfigs", "parameters": "()", "modifiers": "private", "return": "Map<String, Object>", "signature": "Map<String, Object> getBaseConsumerConfigs()", "full_signature": "private Map<String, Object> getBaseConsumerConfigs()", "class_method_signature": "StreamsConfig.getBaseConsumerConfigs()", "testcase": false, "constructor": false}, {"identifier": "getProducerConfigs", "parameters": "(String clientId)", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> getProducerConfigs(String clientId)", "full_signature": "public Map<String, Object> getProducerConfigs(String clientId)", "class_method_signature": "StreamsConfig.getProducerConfigs(String clientId)", "testcase": false, "constructor": false}, {"identifier": "removeStreamsSpecificConfigs", "parameters": "(Map<String, Object> props)", "modifiers": "private", "return": "void", "signature": "void removeStreamsSpecificConfigs(Map<String, Object> props)", "full_signature": "private void removeStreamsSpecificConfigs(Map<String, Object> props)", "class_method_signature": "StreamsConfig.removeStreamsSpecificConfigs(Map<String, Object> props)", "testcase": false, "constructor": false}, {"identifier": "keySerde", "parameters": "()", "modifiers": "public", "return": "Serde", "signature": "Serde keySerde()", "full_signature": "public Serde keySerde()", "class_method_signature": "StreamsConfig.keySerde()", "testcase": false, "constructor": false}, {"identifier": "valueSerde", "parameters": "()", "modifiers": "public", "return": "Serde", "signature": "Serde valueSerde()", "full_signature": "public Serde valueSerde()", "class_method_signature": "StreamsConfig.valueSerde()", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "StreamsConfig.main(String[] args)", "testcase": false, "constructor": false}], "file": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java"}, "focal_method": {"identifier": "getRestoreConsumerConfigs", "parameters": "(String clientId)", "modifiers": "public", "return": "Map<String, Object>", "body": "public Map<String, Object> getRestoreConsumerConfigs(String clientId) {\n        Map<String, Object> props = getBaseConsumerConfigs();\n\n        // no need to set group id for a restore consumer\n        props.remove(ConsumerConfig.GROUP_ID_CONFIG);\n\n        // add client id with stream client id prefix\n        props.put(CommonClientConfigs.CLIENT_ID_CONFIG, clientId + \"-restore-consumer\");\n\n        return props;\n    }", "signature": "Map<String, Object> getRestoreConsumerConfigs(String clientId)", "full_signature": "public Map<String, Object> getRestoreConsumerConfigs(String clientId)", "class_method_signature": "StreamsConfig.getRestoreConsumerConfigs(String clientId)", "testcase": false, "constructor": false, "invocations": ["getBaseConsumerConfigs", "remove", "put"]}, "repository": {"repo_id": 135978112, "url": "https://github.com/anurnomeru/kafka-0.10.0.1-source-reading", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 7, "size": 2953, "license": "licensed"}}