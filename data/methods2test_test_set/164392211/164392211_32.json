{"test_class": {"identifier": "EmptySeriesTest", "superclass": "", "interfaces": "", "fields": [], "file": "dflib/src/test/java/com/nhl/dflib/series/EmptySeriesTest.java"}, "test_case": {"identifier": "testFilter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testFilter() {\n        Series<Object> s = new EmptySeries<>()\n                .filter(BooleanSeries.forBooleans(true, false));\n\n        new SeriesAsserts(s).expectData();\n    }", "signature": "void testFilter()", "full_signature": "@Test public void testFilter()", "class_method_signature": "EmptySeriesTest.testFilter()", "testcase": true, "constructor": false, "invocations": ["filter", "forBooleans", "expectData"]}, "focal_class": {"identifier": "EmptySeries", "superclass": "extends ObjectSeries<T>", "interfaces": "", "fields": [], "methods": [{"identifier": "EmptySeries", "parameters": "()", "modifiers": "public", "return": "", "signature": " EmptySeries()", "full_signature": "public  EmptySeries()", "class_method_signature": "EmptySeries.EmptySeries()", "testcase": false, "constructor": true}, {"identifier": "EmptySeries", "parameters": "(Class<?> nominalType)", "modifiers": "public", "return": "", "signature": " EmptySeries(Class<?> nominalType)", "full_signature": "public  EmptySeries(Class<?> nominalType)", "class_method_signature": "EmptySeries.EmptySeries(Class<?> nominalType)", "testcase": false, "constructor": true}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "EmptySeries.size()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int index)", "modifiers": "@Override public", "return": "T", "signature": "T get(int index)", "full_signature": "@Override public T get(int index)", "class_method_signature": "EmptySeries.get(int index)", "testcase": false, "constructor": false}, {"identifier": "copyTo", "parameters": "(Object[] to, int fromOffset, int toOffset, int len)", "modifiers": "@Override public", "return": "void", "signature": "void copyTo(Object[] to, int fromOffset, int toOffset, int len)", "full_signature": "@Override public void copyTo(Object[] to, int fromOffset, int toOffset, int len)", "class_method_signature": "EmptySeries.copyTo(Object[] to, int fromOffset, int toOffset, int len)", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(ValuePredicate<T> p)", "modifiers": "@Override public", "return": "Series<T>", "signature": "Series<T> filter(ValuePredicate<T> p)", "full_signature": "@Override public Series<T> filter(ValuePredicate<T> p)", "class_method_signature": "EmptySeries.filter(ValuePredicate<T> p)", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(BooleanSeries positions)", "modifiers": "@Override public", "return": "Series<T>", "signature": "Series<T> filter(BooleanSeries positions)", "full_signature": "@Override public Series<T> filter(BooleanSeries positions)", "class_method_signature": "EmptySeries.filter(BooleanSeries positions)", "testcase": false, "constructor": false}, {"identifier": "sort", "parameters": "(Comparator<? super T> comparator)", "modifiers": "@Override public", "return": "Series<T>", "signature": "Series<T> sort(Comparator<? super T> comparator)", "full_signature": "@Override public Series<T> sort(Comparator<? super T> comparator)", "class_method_signature": "EmptySeries.sort(Comparator<? super T> comparator)", "testcase": false, "constructor": false}, {"identifier": "materialize", "parameters": "()", "modifiers": "@Override public", "return": "Series<T>", "signature": "Series<T> materialize()", "full_signature": "@Override public Series<T> materialize()", "class_method_signature": "EmptySeries.materialize()", "testcase": false, "constructor": false}, {"identifier": "fillNulls", "parameters": "(T value)", "modifiers": "@Override public", "return": "Series<T>", "signature": "Series<T> fillNulls(T value)", "full_signature": "@Override public Series<T> fillNulls(T value)", "class_method_signature": "EmptySeries.fillNulls(T value)", "testcase": false, "constructor": false}, {"identifier": "fillNullsFromSeries", "parameters": "(Series<? extends T> values)", "modifiers": "@Override public", "return": "Series<T>", "signature": "Series<T> fillNullsFromSeries(Series<? extends T> values)", "full_signature": "@Override public Series<T> fillNullsFromSeries(Series<? extends T> values)", "class_method_signature": "EmptySeries.fillNullsFromSeries(Series<? extends T> values)", "testcase": false, "constructor": false}, {"identifier": "fillNullsBackwards", "parameters": "()", "modifiers": "@Override public", "return": "Series<T>", "signature": "Series<T> fillNullsBackwards()", "full_signature": "@Override public Series<T> fillNullsBackwards()", "class_method_signature": "EmptySeries.fillNullsBackwards()", "testcase": false, "constructor": false}, {"identifier": "fillNullsForward", "parameters": "()", "modifiers": "@Override public", "return": "Series<T>", "signature": "Series<T> fillNullsForward()", "full_signature": "@Override public Series<T> fillNullsForward()", "class_method_signature": "EmptySeries.fillNullsForward()", "testcase": false, "constructor": false}], "file": "dflib/src/main/java/com/nhl/dflib/series/EmptySeries.java"}, "focal_method": {"identifier": "filter", "parameters": "(ValuePredicate<T> p)", "modifiers": "@Override public", "return": "Series<T>", "body": "@Override\n    public Series<T> filter(ValuePredicate<T> p) {\n        return this;\n    }", "signature": "Series<T> filter(ValuePredicate<T> p)", "full_signature": "@Override public Series<T> filter(ValuePredicate<T> p)", "class_method_signature": "EmptySeries.filter(ValuePredicate<T> p)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 164392211, "url": "https://github.com/nhl/dflib", "stars": 13, "created": "1/7/2019 7:07:58 AM +00:00", "updates": "2019-12-23T13:26:53+00:00", "fork": "False", "license": "licensed"}}