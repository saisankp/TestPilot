{"test_class": {"identifier": "TestStatusController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MonitoredServiceStub monitoredService;", "modifier": "private", "type": "MonitoredServiceStub", "declarator": "monitoredService", "var_name": "monitoredService"}, {"original_string": "private StatusController impl;", "modifier": "private", "type": "StatusController", "declarator": "impl", "var_name": "impl"}, {"original_string": "private MockHttpServletRequest req;", "modifier": "private", "type": "MockHttpServletRequest", "declarator": "req", "var_name": "req"}, {"original_string": "private MockHttpServletResponse resp;", "modifier": "private", "type": "MockHttpServletResponse", "declarator": "resp", "var_name": "resp"}], "file": "jrugged-spring/src/test/java/org/fishwife/jrugged/spring/TestStatusController.java"}, "test_case": {"identifier": "handlesRequestInternally", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void handlesRequestInternally() throws Exception {\n        assertNull(impl.handleRequest(req, resp));\n    }", "signature": "void handlesRequestInternally()", "full_signature": "@Test public void handlesRequestInternally()", "class_method_signature": "TestStatusController.handlesRequestInternally()", "testcase": true, "constructor": false, "invocations": ["assertNull", "handleRequest"]}, "focal_class": {"identifier": "StatusController", "superclass": "", "interfaces": "implements Controller", "fields": [{"original_string": "private static Map<Status,Integer> responseCodeMap;", "modifier": "private static", "type": "Map<Status,Integer>", "declarator": "responseCodeMap", "var_name": "responseCodeMap"}, {"original_string": "private MonitoredService monitoredService;", "modifier": "private", "type": "MonitoredService", "declarator": "monitoredService", "var_name": "monitoredService"}], "methods": [{"identifier": "StatusController", "parameters": "(MonitoredService monitoredService)", "modifiers": "public", "return": "", "signature": " StatusController(MonitoredService monitoredService)", "full_signature": "public  StatusController(MonitoredService monitoredService)", "class_method_signature": "StatusController.StatusController(MonitoredService monitoredService)", "testcase": false, "constructor": true}, {"identifier": "handleRequest", "parameters": "(HttpServletRequest req,\n            HttpServletResponse resp)", "modifiers": "public", "return": "ModelAndView", "signature": "ModelAndView handleRequest(HttpServletRequest req,\n            HttpServletResponse resp)", "full_signature": "public ModelAndView handleRequest(HttpServletRequest req,\n            HttpServletResponse resp)", "class_method_signature": "StatusController.handleRequest(HttpServletRequest req,\n            HttpServletResponse resp)", "testcase": false, "constructor": false}, {"identifier": "setCachingHeaders", "parameters": "(HttpServletResponse resp)", "modifiers": "private", "return": "void", "signature": "void setCachingHeaders(HttpServletResponse resp)", "full_signature": "private void setCachingHeaders(HttpServletResponse resp)", "class_method_signature": "StatusController.setCachingHeaders(HttpServletResponse resp)", "testcase": false, "constructor": false}, {"identifier": "setAppropriateWarningHeaders", "parameters": "(HttpServletResponse resp,\n            Status currentStatus)", "modifiers": "private", "return": "void", "signature": "void setAppropriateWarningHeaders(HttpServletResponse resp,\n            Status currentStatus)", "full_signature": "private void setAppropriateWarningHeaders(HttpServletResponse resp,\n            Status currentStatus)", "class_method_signature": "StatusController.setAppropriateWarningHeaders(HttpServletResponse resp,\n            Status currentStatus)", "testcase": false, "constructor": false}, {"identifier": "writeOutCurrentStatusInResponseBody", "parameters": "(HttpServletResponse resp,\n            Status currentStatus)", "modifiers": "private", "return": "void", "signature": "void writeOutCurrentStatusInResponseBody(HttpServletResponse resp,\n            Status currentStatus)", "full_signature": "private void writeOutCurrentStatusInResponseBody(HttpServletResponse resp,\n            Status currentStatus)", "class_method_signature": "StatusController.writeOutCurrentStatusInResponseBody(HttpServletResponse resp,\n            Status currentStatus)", "testcase": false, "constructor": false}, {"identifier": "setResponseCode", "parameters": "(Status currentStatus, HttpServletResponse resp)", "modifiers": "private", "return": "void", "signature": "void setResponseCode(Status currentStatus, HttpServletResponse resp)", "full_signature": "private void setResponseCode(Status currentStatus, HttpServletResponse resp)", "class_method_signature": "StatusController.setResponseCode(Status currentStatus, HttpServletResponse resp)", "testcase": false, "constructor": false}], "file": "jrugged-spring/src/main/java/org/fishwife/jrugged/spring/StatusController.java"}, "focal_method": {"identifier": "handleRequest", "parameters": "(HttpServletRequest req,\n            HttpServletResponse resp)", "modifiers": "public", "return": "ModelAndView", "body": "public ModelAndView handleRequest(HttpServletRequest req,\n            HttpServletResponse resp) throws Exception {\n        Status currentStatus = monitoredService.getServiceStatus().getStatus();\n        setResponseCode(currentStatus, resp);\n        setAppropriateWarningHeaders(resp, currentStatus);\n        setCachingHeaders(resp);\n        writeOutCurrentStatusInResponseBody(resp, currentStatus);\n        return null;\n    }", "signature": "ModelAndView handleRequest(HttpServletRequest req,\n            HttpServletResponse resp)", "full_signature": "public ModelAndView handleRequest(HttpServletRequest req,\n            HttpServletResponse resp)", "class_method_signature": "StatusController.handleRequest(HttpServletRequest req,\n            HttpServletResponse resp)", "testcase": false, "constructor": false, "invocations": ["getStatus", "getServiceStatus", "setResponseCode", "setAppropriateWarningHeaders", "setCachingHeaders", "writeOutCurrentStatusInResponseBody"]}, "repository": {"repo_id": 6602723, "url": "https://github.com/Comcast/jrugged", "language": "Java", "is_fork": false, "fork_count": 90, "stargazer_count": 236, "size": 1302, "license": "licensed"}}