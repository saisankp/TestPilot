{"test_class": {"identifier": "AbstractJdbcEventAnalyticsManagerTest", "superclass": "extends\n    EventAnalyticsTest", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoRule mockitoRule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = MockitoJUnit.rule()", "var_name": "mockitoRule"}, {"original_string": "@Mock\n    private JdbcTemplate jdbcTemplate;", "modifier": "@Mock\n    private", "type": "JdbcTemplate", "declarator": "jdbcTemplate", "var_name": "jdbcTemplate"}, {"original_string": "@Mock\n    private ProgramIndicatorService programIndicatorService;", "modifier": "@Mock\n    private", "type": "ProgramIndicatorService", "declarator": "programIndicatorService", "var_name": "programIndicatorService"}, {"original_string": "private JdbcEventAnalyticsManager subject;", "modifier": "private", "type": "JdbcEventAnalyticsManager", "declarator": "subject", "var_name": "subject"}, {"original_string": "private Program programA;", "modifier": "private", "type": "Program", "declarator": "programA", "var_name": "programA"}, {"original_string": "private DataElement dataElementA;", "modifier": "private", "type": "DataElement", "declarator": "dataElementA", "var_name": "dataElementA"}, {"original_string": "private Date from = getDate( 2017, 10, 10 );", "modifier": "private", "type": "Date", "declarator": "from = getDate( 2017, 10, 10 )", "var_name": "from"}, {"original_string": "private Date to = getDate( 2018, 10, 10 );", "modifier": "private", "type": "Date", "declarator": "to = getDate( 2018, 10, 10 )", "var_name": "to"}], "file": "dhis-2/dhis-services/dhis-service-analytics/src/test/java/org/hisp/dhis/analytics/event/data/AbstractJdbcEventAnalyticsManagerTest.java"}, "test_case": {"identifier": "verifyGetColumn", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void verifyGetColumn()\n    {\n        DimensionalItemObject dio = new BaseDimensionalItemObject( dataElementA.getUid() );\n\n        QueryItem item = new QueryItem( dio );\n\n        String column = subject.getColumn( item );\n\n        assertThat( column, is( \"ax.\\\"\" + dataElementA.getUid() + \"\\\"\" ) );\n    }", "signature": "void verifyGetColumn()", "full_signature": "@Test public void verifyGetColumn()", "class_method_signature": "AbstractJdbcEventAnalyticsManagerTest.verifyGetColumn()", "testcase": true, "constructor": false, "invocations": ["getUid", "getColumn", "assertThat", "is", "getUid"]}, "focal_class": {"identifier": "AbstractJdbcEventAnalyticsManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ITEM_NAME_SEP = \": \";", "modifier": "private static final", "type": "String", "declarator": "ITEM_NAME_SEP = \": \"", "var_name": "ITEM_NAME_SEP"}, {"original_string": "private static final String NA = \"[N/A]\";", "modifier": "private static final", "type": "String", "declarator": "NA = \"[N/A]\"", "var_name": "NA"}, {"original_string": "protected static final String COL_COUNT = \"count\";", "modifier": "protected static final", "type": "String", "declarator": "COL_COUNT = \"count\"", "var_name": "COL_COUNT"}, {"original_string": "protected static final String COL_EXTENT = \"extent\";", "modifier": "protected static final", "type": "String", "declarator": "COL_EXTENT = \"extent\"", "var_name": "COL_EXTENT"}, {"original_string": "protected static final int COORD_DEC = 6;", "modifier": "protected static final", "type": "int", "declarator": "COORD_DEC = 6", "var_name": "COORD_DEC"}, {"original_string": "protected static final int LAST_VALUE_YEARS_OFFSET = -10;", "modifier": "protected static final", "type": "int", "declarator": "LAST_VALUE_YEARS_OFFSET = -10", "var_name": "LAST_VALUE_YEARS_OFFSET"}, {"original_string": "protected final JdbcTemplate jdbcTemplate;", "modifier": "protected final", "type": "JdbcTemplate", "declarator": "jdbcTemplate", "var_name": "jdbcTemplate"}, {"original_string": "protected final StatementBuilder statementBuilder;", "modifier": "protected final", "type": "StatementBuilder", "declarator": "statementBuilder", "var_name": "statementBuilder"}, {"original_string": "protected final ProgramIndicatorService programIndicatorService;", "modifier": "protected final", "type": "ProgramIndicatorService", "declarator": "programIndicatorService", "var_name": "programIndicatorService"}, {"original_string": "protected final ProgramIndicatorSubqueryBuilder programIndicatorSubqueryBuilder;", "modifier": "protected final", "type": "ProgramIndicatorSubqueryBuilder", "declarator": "programIndicatorSubqueryBuilder", "var_name": "programIndicatorSubqueryBuilder"}], "methods": [{"identifier": "AbstractJdbcEventAnalyticsManager", "parameters": "( @Qualifier( \"readOnlyJdbcTemplate\" ) JdbcTemplate jdbcTemplate,\n        StatementBuilder statementBuilder, ProgramIndicatorService programIndicatorService,\n        ProgramIndicatorSubqueryBuilder programIndicatorSubqueryBuilder )", "modifiers": "public", "return": "", "signature": " AbstractJdbcEventAnalyticsManager( @Qualifier( \"readOnlyJdbcTemplate\" ) JdbcTemplate jdbcTemplate,\n        StatementBuilder statementBuilder, ProgramIndicatorService programIndicatorService,\n        ProgramIndicatorSubqueryBuilder programIndicatorSubqueryBuilder )", "full_signature": "public  AbstractJdbcEventAnalyticsManager( @Qualifier( \"readOnlyJdbcTemplate\" ) JdbcTemplate jdbcTemplate,\n        StatementBuilder statementBuilder, ProgramIndicatorService programIndicatorService,\n        ProgramIndicatorSubqueryBuilder programIndicatorSubqueryBuilder )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.AbstractJdbcEventAnalyticsManager( @Qualifier( \"readOnlyJdbcTemplate\" ) JdbcTemplate jdbcTemplate,\n        StatementBuilder statementBuilder, ProgramIndicatorService programIndicatorService,\n        ProgramIndicatorSubqueryBuilder programIndicatorSubqueryBuilder )", "testcase": false, "constructor": true}, {"identifier": "getPagingClause", "parameters": "( EventQueryParams params, int maxLimit )", "modifiers": "private", "return": "String", "signature": "String getPagingClause( EventQueryParams params, int maxLimit )", "full_signature": "private String getPagingClause( EventQueryParams params, int maxLimit )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getPagingClause( EventQueryParams params, int maxLimit )", "testcase": false, "constructor": false}, {"identifier": "getSortClause", "parameters": "( EventQueryParams params )", "modifiers": "private", "return": "String", "signature": "String getSortClause( EventQueryParams params )", "full_signature": "private String getSortClause( EventQueryParams params )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getSortClause( EventQueryParams params )", "testcase": false, "constructor": false}, {"identifier": "getSortColumns", "parameters": "(EventQueryParams params , SortOrder order)", "modifiers": "private", "return": "String", "signature": "String getSortColumns(EventQueryParams params , SortOrder order)", "full_signature": "private String getSortColumns(EventQueryParams params , SortOrder order)", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getSortColumns(EventQueryParams params , SortOrder order)", "testcase": false, "constructor": false}, {"identifier": "getGroupByColumnNames", "parameters": "( EventQueryParams params )", "modifiers": "private", "return": "List<String>", "signature": "List<String> getGroupByColumnNames( EventQueryParams params )", "full_signature": "private List<String> getGroupByColumnNames( EventQueryParams params )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getGroupByColumnNames( EventQueryParams params )", "testcase": false, "constructor": false}, {"identifier": "getSelectColumns", "parameters": "( EventQueryParams params )", "modifiers": "protected", "return": "List<String>", "signature": "List<String> getSelectColumns( EventQueryParams params )", "full_signature": "protected List<String> getSelectColumns( EventQueryParams params )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getSelectColumns( EventQueryParams params )", "testcase": false, "constructor": false}, {"identifier": "getSelectColumns", "parameters": "( EventQueryParams params, boolean isGroupByClause )", "modifiers": "private", "return": "List<String>", "signature": "List<String> getSelectColumns( EventQueryParams params, boolean isGroupByClause )", "full_signature": "private List<String> getSelectColumns( EventQueryParams params, boolean isGroupByClause )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getSelectColumns( EventQueryParams params, boolean isGroupByClause )", "testcase": false, "constructor": false}, {"identifier": "getAggregatedEventData", "parameters": "( EventQueryParams params, Grid grid, int maxLimit )", "modifiers": "public", "return": "Grid", "signature": "Grid getAggregatedEventData( EventQueryParams params, Grid grid, int maxLimit )", "full_signature": "public Grid getAggregatedEventData( EventQueryParams params, Grid grid, int maxLimit )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getAggregatedEventData( EventQueryParams params, Grid grid, int maxLimit )", "testcase": false, "constructor": false}, {"identifier": "getAggregatedEventData", "parameters": "( Grid grid, EventQueryParams params, String sql )", "modifiers": "private", "return": "void", "signature": "void getAggregatedEventData( Grid grid, EventQueryParams params, String sql )", "full_signature": "private void getAggregatedEventData( Grid grid, EventQueryParams params, String sql )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getAggregatedEventData( Grid grid, EventQueryParams params, String sql )", "testcase": false, "constructor": false}, {"identifier": "getAggregateClause", "parameters": "( EventQueryParams params )", "modifiers": "protected", "return": "String", "signature": "String getAggregateClause( EventQueryParams params )", "full_signature": "protected String getAggregateClause( EventQueryParams params )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getAggregateClause( EventQueryParams params )", "testcase": false, "constructor": false}, {"identifier": "getCollapsedDataItemValue", "parameters": "( QueryItem item, String itemValue )", "modifiers": "private", "return": "String", "signature": "String getCollapsedDataItemValue( QueryItem item, String itemValue )", "full_signature": "private String getCollapsedDataItemValue( QueryItem item, String itemValue )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getCollapsedDataItemValue( QueryItem item, String itemValue )", "testcase": false, "constructor": false}, {"identifier": "getColumn", "parameters": "( QueryItem item )", "modifiers": "protected", "return": "String", "signature": "String getColumn( QueryItem item )", "full_signature": "protected String getColumn( QueryItem item )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getColumn( QueryItem item )", "testcase": false, "constructor": false}, {"identifier": "wrapLower", "parameters": "( String column )", "modifiers": "private", "return": "String", "signature": "String wrapLower( String column )", "full_signature": "private String wrapLower( String column )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.wrapLower( String column )", "testcase": false, "constructor": false}, {"identifier": "getSelectSql", "parameters": "( QueryItem item, Date startDate, Date endDate )", "modifiers": "protected", "return": "String", "signature": "String getSelectSql( QueryItem item, Date startDate, Date endDate )", "full_signature": "protected String getSelectSql( QueryItem item, Date startDate, Date endDate )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getSelectSql( QueryItem item, Date startDate, Date endDate )", "testcase": false, "constructor": false}, {"identifier": "getSqlFilter", "parameters": "( QueryFilter filter, QueryItem item )", "modifiers": "protected", "return": "String", "signature": "String getSqlFilter( QueryFilter filter, QueryItem item )", "full_signature": "protected String getSqlFilter( QueryFilter filter, QueryItem item )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getSqlFilter( QueryFilter filter, QueryItem item )", "testcase": false, "constructor": false}, {"identifier": "getPeriodAlias", "parameters": "( EventQueryParams params )", "modifiers": "protected", "return": "String", "signature": "String getPeriodAlias( EventQueryParams params )", "full_signature": "protected String getPeriodAlias( EventQueryParams params )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getPeriodAlias( EventQueryParams params )", "testcase": false, "constructor": false}, {"identifier": "getOrgUnitAlias", "parameters": "( EventQueryParams params )", "modifiers": "protected", "return": "String", "signature": "String getOrgUnitAlias( EventQueryParams params )", "full_signature": "protected String getOrgUnitAlias( EventQueryParams params )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getOrgUnitAlias( EventQueryParams params )", "testcase": false, "constructor": false}, {"identifier": "getAlias", "parameters": "( EventQueryParams params, DimensionType dimensionType )", "modifiers": "private", "return": "String", "signature": "String getAlias( EventQueryParams params, DimensionType dimensionType )", "full_signature": "private String getAlias( EventQueryParams params, DimensionType dimensionType )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getAlias( EventQueryParams params, DimensionType dimensionType )", "testcase": false, "constructor": false}, {"identifier": "getEventsOrEnrollmentsSql", "parameters": "( EventQueryParams params, int maxLimit )", "modifiers": "", "return": "String", "signature": "String getEventsOrEnrollmentsSql( EventQueryParams params, int maxLimit )", "full_signature": " String getEventsOrEnrollmentsSql( EventQueryParams params, int maxLimit )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getEventsOrEnrollmentsSql( EventQueryParams params, int maxLimit )", "testcase": false, "constructor": false}, {"identifier": "withExceptionHandling", "parameters": "( Runnable r )", "modifiers": "", "return": "void", "signature": "void withExceptionHandling( Runnable r )", "full_signature": " void withExceptionHandling( Runnable r )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.withExceptionHandling( Runnable r )", "testcase": false, "constructor": false}, {"identifier": "getSelectClause", "parameters": "( EventQueryParams params )", "modifiers": "protected abstract", "return": "String", "signature": "String getSelectClause( EventQueryParams params )", "full_signature": "protected abstract String getSelectClause( EventQueryParams params )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getSelectClause( EventQueryParams params )", "testcase": false, "constructor": false}, {"identifier": "getFromClause", "parameters": "( EventQueryParams params )", "modifiers": "protected abstract", "return": "String", "signature": "String getFromClause( EventQueryParams params )", "full_signature": "protected abstract String getFromClause( EventQueryParams params )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getFromClause( EventQueryParams params )", "testcase": false, "constructor": false}, {"identifier": "getWhereClause", "parameters": "( EventQueryParams params )", "modifiers": "protected abstract", "return": "String", "signature": "String getWhereClause( EventQueryParams params )", "full_signature": "protected abstract String getWhereClause( EventQueryParams params )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getWhereClause( EventQueryParams params )", "testcase": false, "constructor": false}, {"identifier": "getAnalyticsType", "parameters": "()", "modifiers": "protected abstract", "return": "AnalyticsType", "signature": "AnalyticsType getAnalyticsType()", "full_signature": "protected abstract AnalyticsType getAnalyticsType()", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getAnalyticsType()", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-analytics/src/main/java/org/hisp/dhis/analytics/event/data/AbstractJdbcEventAnalyticsManager.java"}, "focal_method": {"identifier": "getColumn", "parameters": "( QueryItem item )", "modifiers": "protected", "return": "String", "body": "protected String getColumn( QueryItem item )\n    {\n        return quoteAlias( item.getItemName() );\n    }", "signature": "String getColumn( QueryItem item )", "full_signature": "protected String getColumn( QueryItem item )", "class_method_signature": "AbstractJdbcEventAnalyticsManager.getColumn( QueryItem item )", "testcase": false, "constructor": false, "invocations": ["quoteAlias", "getItemName"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}