{"test_class": {"identifier": "PackageResourceTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [], "file": "core/src/test/java/ship/build/res/PackageResourceTest.java"}, "test_case": {"identifier": "testAdapt", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAdapt() {\n    final Project project = new Project(randomUUID().toString(), new ProjectFile());\n    final ResourceManager resourceManager = new ResourceManager(project);\n    final PackageResource packageResource = new PackageResource(resourceManager);\n    assertNotNull(packageResource.adapt(ResourceManager.class));\n  }", "signature": "void testAdapt()", "full_signature": "@Test public void testAdapt()", "class_method_signature": "PackageResourceTest.testAdapt()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "assertNotNull", "adapt"]}, "focal_class": {"identifier": "PackageResource", "superclass": "extends BuildResource", "interfaces": "", "fields": [{"original_string": "protected final ResourceManager resourceManager;", "modifier": "protected final", "type": "ResourceManager", "declarator": "resourceManager", "var_name": "resourceManager"}], "methods": [{"identifier": "PackageResource", "parameters": "(final ResourceManager resourceManager)", "modifiers": "public", "return": "", "signature": " PackageResource(final ResourceManager resourceManager)", "full_signature": "public  PackageResource(final ResourceManager resourceManager)", "class_method_signature": "PackageResource.PackageResource(final ResourceManager resourceManager)", "testcase": false, "constructor": true}, {"identifier": "adapt", "parameters": "(Class<T> adaptor)", "modifiers": "@Override public", "return": "T", "signature": "T adapt(Class<T> adaptor)", "full_signature": "@Override public T adapt(Class<T> adaptor)", "class_method_signature": "PackageResource.adapt(Class<T> adaptor)", "testcase": false, "constructor": false}], "file": "core/src/main/java/ship/build/res/PackageResource.java"}, "focal_method": {"identifier": "adapt", "parameters": "(Class<T> adaptor)", "modifiers": "@Override public", "return": "T", "body": "@Override\n  public <T> T adapt(Class<T> adaptor) {\n    if (adaptor.isInstance(resourceManager)) {\n      return (T) resourceManager;\n    }\n    return super.adapt(adaptor);\n  }", "signature": "T adapt(Class<T> adaptor)", "full_signature": "@Override public T adapt(Class<T> adaptor)", "class_method_signature": "PackageResource.adapt(Class<T> adaptor)", "testcase": false, "constructor": false, "invocations": ["isInstance", "adapt"]}, "repository": {"repo_id": 149694816, "url": "https://github.com/aergoio/ship", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 11, "size": 1743, "license": "licensed"}}