{"test_class": {"identifier": "ExpressionTest", "superclass": "", "interfaces": "", "fields": [], "file": "tiles-api/src/test/java/org/apache/tiles/ExpressionTest.java"}, "test_case": {"identifier": "testCreateExpressionFromDescribedExpression", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateExpressionFromDescribedExpression() {\n        Expression expression = Expression.createExpressionFromDescribedExpression(\"hello\");\n        assertEquals(\"hello\", expression.getExpression());\n        assertNull(expression.getLanguage());\n        expression = Expression.createExpressionFromDescribedExpression(\"there:hello\");\n        assertEquals(\"hello\", expression.getExpression());\n        assertEquals(\"there\", expression.getLanguage());\n        expression = Expression.createExpressionFromDescribedExpression(\"there_:hello\");\n        assertEquals(\"there_:hello\", expression.getExpression());\n        assertNull(expression.getLanguage());\n        assertNull(Expression.createExpressionFromDescribedExpression(null));\n    }", "signature": "void testCreateExpressionFromDescribedExpression()", "full_signature": "@Test public void testCreateExpressionFromDescribedExpression()", "class_method_signature": "ExpressionTest.testCreateExpressionFromDescribedExpression()", "testcase": true, "constructor": false, "invocations": ["createExpressionFromDescribedExpression", "assertEquals", "getExpression", "assertNull", "getLanguage", "createExpressionFromDescribedExpression", "assertEquals", "getExpression", "assertEquals", "getLanguage", "createExpressionFromDescribedExpression", "assertEquals", "getExpression", "assertNull", "getLanguage", "assertNull", "createExpressionFromDescribedExpression"]}, "focal_class": {"identifier": "Expression", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String expression;", "modifier": "private", "type": "String", "declarator": "expression", "var_name": "expression"}, {"original_string": "private String language;", "modifier": "private", "type": "String", "declarator": "language", "var_name": "language"}], "methods": [{"identifier": "Expression", "parameters": "(String expression, String language)", "modifiers": "public", "return": "", "signature": " Expression(String expression, String language)", "full_signature": "public  Expression(String expression, String language)", "class_method_signature": "Expression.Expression(String expression, String language)", "testcase": false, "constructor": true}, {"identifier": "Expression", "parameters": "(String expression)", "modifiers": "public", "return": "", "signature": " Expression(String expression)", "full_signature": "public  Expression(String expression)", "class_method_signature": "Expression.Expression(String expression)", "testcase": false, "constructor": true}, {"identifier": "Expression", "parameters": "(Expression toCopy)", "modifiers": "public", "return": "", "signature": " Expression(Expression toCopy)", "full_signature": "public  Expression(Expression toCopy)", "class_method_signature": "Expression.Expression(Expression toCopy)", "testcase": false, "constructor": true}, {"identifier": "createExpressionFromDescribedExpression", "parameters": "(String describedExpression)", "modifiers": "public static", "return": "Expression", "signature": "Expression createExpressionFromDescribedExpression(String describedExpression)", "full_signature": "public static Expression createExpressionFromDescribedExpression(String describedExpression)", "class_method_signature": "Expression.createExpressionFromDescribedExpression(String describedExpression)", "testcase": false, "constructor": false}, {"identifier": "createExpression", "parameters": "(String expression, String language)", "modifiers": "public static", "return": "Expression", "signature": "Expression createExpression(String expression, String language)", "full_signature": "public static Expression createExpression(String expression, String language)", "class_method_signature": "Expression.createExpression(String expression, String language)", "testcase": false, "constructor": false}, {"identifier": "getExpression", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getExpression()", "full_signature": "public String getExpression()", "class_method_signature": "Expression.getExpression()", "testcase": false, "constructor": false}, {"identifier": "getLanguage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLanguage()", "full_signature": "public String getLanguage()", "class_method_signature": "Expression.getLanguage()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Expression.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Expression.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Expression.toString()", "testcase": false, "constructor": false}], "file": "tiles-api/src/main/java/org/apache/tiles/Expression.java"}, "focal_method": {"identifier": "createExpressionFromDescribedExpression", "parameters": "(String describedExpression)", "modifiers": "public static", "return": "Expression", "body": "public static Expression createExpressionFromDescribedExpression(String describedExpression) {\n        if (describedExpression != null) {\n            String language = null;\n            String expression = describedExpression;\n            if (describedExpression.matches(\"[a-zA-Z0-9]+:.+\")) {\n                language = describedExpression.substring(0, describedExpression.indexOf(':'));\n                expression = describedExpression.substring(describedExpression.indexOf(':') + 1);\n            }\n            return new Expression(expression, language);\n        }\n\n        return null;\n    }", "signature": "Expression createExpressionFromDescribedExpression(String describedExpression)", "full_signature": "public static Expression createExpressionFromDescribedExpression(String describedExpression)", "class_method_signature": "Expression.createExpressionFromDescribedExpression(String describedExpression)", "testcase": false, "constructor": false, "invocations": ["matches", "substring", "indexOf", "substring", "indexOf"]}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}