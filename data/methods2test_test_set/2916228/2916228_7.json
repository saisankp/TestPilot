{"test_class": {"identifier": "NumberConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "propoid-ui/src/test/java/propoid/ui/convert/NumberConverterTest.java"}, "test_case": {"identifier": "testFromProperty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testFromProperty() throws Exception {\n\t\tassertEquals(\"0\", converter(new Foo().byteP).toString((byte) 0));\n\t\tassertEquals(\"0\", converter(new Foo().shortP).toString((short) 0));\n\t\tassertEquals(\"0\", converter(new Foo().intP).toString((int) 0));\n\t\tassertEquals(\"0\", converter(new Foo().longP).toString((long) 0));\n\t\tassertEquals(\"0\", converter(new Foo().floatP).toString((float) 0));\n\t\tassertEquals(\"0\", converter(new Foo().doubleP).toString((double) 0));\n\n\t\tassertEquals(\"\", converter(new Foo().doubleP).toString(null));\n\t}", "signature": "void testFromProperty()", "full_signature": "@Test public void testFromProperty()", "class_method_signature": "NumberConverterTest.testFromProperty()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "toString", "converter", "assertEquals", "toString", "converter", "assertEquals", "toString", "converter", "assertEquals", "toString", "converter", "assertEquals", "toString", "converter", "assertEquals", "toString", "converter", "assertEquals", "toString", "converter"]}, "focal_class": {"identifier": "NumberConverter", "superclass": "", "interfaces": "implements Converter<N>", "fields": [{"original_string": "private Property<N> property;", "modifier": "private", "type": "Property<N>", "declarator": "property", "var_name": "property"}, {"original_string": "private int resId;", "modifier": "private", "type": "int", "declarator": "resId", "var_name": "resId"}, {"original_string": "private NumberFormat format = NumberFormat.getInstance();", "modifier": "private", "type": "NumberFormat", "declarator": "format = NumberFormat.getInstance()", "var_name": "format"}], "methods": [{"identifier": "NumberConverter", "parameters": "(Property<N> property, int resId)", "modifiers": "public", "return": "", "signature": " NumberConverter(Property<N> property, int resId)", "full_signature": "public  NumberConverter(Property<N> property, int resId)", "class_method_signature": "NumberConverter.NumberConverter(Property<N> property, int resId)", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "(N value)", "modifiers": "@Override public", "return": "String", "signature": "String toString(N value)", "full_signature": "@Override public String toString(N value)", "class_method_signature": "NumberConverter.toString(N value)", "testcase": false, "constructor": false}, {"identifier": "fromString", "parameters": "(String string)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override public", "return": "N", "signature": "N fromString(String string)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override public N fromString(String string)", "class_method_signature": "NumberConverter.fromString(String string)", "testcase": false, "constructor": false}], "file": "propoid-ui/src/main/java/propoid/ui/convert/NumberConverter.java"}, "focal_method": {"identifier": "toString", "parameters": "(N value)", "modifiers": "@Override public", "return": "String", "body": "@Override\n\tpublic String toString(N value) {\n\t\tif (value == null) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\treturn format.format(value);\n\t}", "signature": "String toString(N value)", "full_signature": "@Override public String toString(N value)", "class_method_signature": "NumberConverter.toString(N value)", "testcase": false, "constructor": false, "invocations": ["format"]}, "repository": {"repo_id": 2916228, "url": "https://github.com/svenmeier/propoid", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 7, "size": 475, "license": "licensed"}}