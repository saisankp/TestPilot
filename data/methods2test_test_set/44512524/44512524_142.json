{"test_class": {"identifier": "DocumentResourceTest", "superclass": "extends ResourceTest", "interfaces": "", "fields": [{"original_string": "private ObjectMapper mapper = new ObjectMapper();", "modifier": "private", "type": "ObjectMapper", "declarator": "mapper = new ObjectMapper()", "var_name": "mapper"}, {"original_string": "private JsonNodeFactory factory = JsonNodeFactory.instance;", "modifier": "private", "type": "JsonNodeFactory", "declarator": "factory = JsonNodeFactory.instance", "var_name": "factory"}, {"original_string": "private TableMetadataManager tableMetadataManager;", "modifier": "private", "type": "TableMetadataManager", "declarator": "tableMetadataManager", "var_name": "tableMetadataManager"}, {"original_string": "private MockElasticsearchServer elasticsearchServer;", "modifier": "private", "type": "MockElasticsearchServer", "declarator": "elasticsearchServer", "var_name": "elasticsearchServer"}, {"original_string": "private HazelcastInstance hazelcastInstance;", "modifier": "private", "type": "HazelcastInstance", "declarator": "hazelcastInstance", "var_name": "hazelcastInstance"}, {"original_string": "private QueryStore queryStore;", "modifier": "private", "type": "QueryStore", "declarator": "queryStore", "var_name": "queryStore"}], "file": "real-time/foxtrot/foxtrot-server/src/test/java/com/flipkart/foxtrot/server/resources/DocumentResourceTest.java"}, "test_case": {"identifier": "testSaveDocuments", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSaveDocuments() throws Exception {\n        List<Document> documents = new ArrayList<Document>();\n        String id1 = UUID.randomUUID().toString();\n        Document document1 = new Document(id1, System.currentTimeMillis(), factory.objectNode().put(\"D\", \"data\"));\n        String id2 = UUID.randomUUID().toString();\n        Document document2 = new Document(id2, System.currentTimeMillis(), factory.objectNode().put(\"D\", \"data\"));\n        documents.add(document1);\n        documents.add(document2);\n        client().resource(String.format(\"/v1/document/%s/bulk\", TestUtils.TEST_TABLE_NAME)).type(MediaType.APPLICATION_JSON_TYPE).post(documents);\n\n        compare(document1, queryStore.get(TestUtils.TEST_TABLE_NAME, id1));\n        compare(document2, queryStore.get(TestUtils.TEST_TABLE_NAME, id2));\n    }", "signature": "void testSaveDocuments()", "full_signature": "@Test public void testSaveDocuments()", "class_method_signature": "DocumentResourceTest.testSaveDocuments()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "currentTimeMillis", "put", "objectNode", "toString", "randomUUID", "currentTimeMillis", "put", "objectNode", "add", "add", "post", "type", "resource", "client", "format", "compare", "get", "compare", "get"]}, "focal_class": {"identifier": "DocumentResource", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(DocumentResource.class.getSimpleName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(DocumentResource.class.getSimpleName())", "var_name": "logger"}, {"original_string": "private final QueryStore queryStore;", "modifier": "private final", "type": "QueryStore", "declarator": "queryStore", "var_name": "queryStore"}], "methods": [{"identifier": "DocumentResource", "parameters": "(QueryStore queryStore)", "modifiers": "public", "return": "", "signature": " DocumentResource(QueryStore queryStore)", "full_signature": "public  DocumentResource(QueryStore queryStore)", "class_method_signature": "DocumentResource.DocumentResource(QueryStore queryStore)", "testcase": false, "constructor": true}, {"identifier": "saveDocument", "parameters": "(@PathParam(\"table\") final String table, @Valid final Document document)", "modifiers": "@POST public", "return": "Response", "signature": "Response saveDocument(@PathParam(\"table\") final String table, @Valid final Document document)", "full_signature": "@POST public Response saveDocument(@PathParam(\"table\") final String table, @Valid final Document document)", "class_method_signature": "DocumentResource.saveDocument(@PathParam(\"table\") final String table, @Valid final Document document)", "testcase": false, "constructor": false}, {"identifier": "saveDocuments", "parameters": "(@PathParam(\"table\") final String table, @Valid final List<Document> document)", "modifiers": "@POST @Path(\"/bulk\") public", "return": "Response", "signature": "Response saveDocuments(@PathParam(\"table\") final String table, @Valid final List<Document> document)", "full_signature": "@POST @Path(\"/bulk\") public Response saveDocuments(@PathParam(\"table\") final String table, @Valid final List<Document> document)", "class_method_signature": "DocumentResource.saveDocuments(@PathParam(\"table\") final String table, @Valid final List<Document> document)", "testcase": false, "constructor": false}, {"identifier": "getDocument", "parameters": "(@PathParam(\"table\") final String table, @PathParam(\"id\") @NotNull final String id)", "modifiers": "@GET @Path(\"/{id}\") public", "return": "Response", "signature": "Response getDocument(@PathParam(\"table\") final String table, @PathParam(\"id\") @NotNull final String id)", "full_signature": "@GET @Path(\"/{id}\") public Response getDocument(@PathParam(\"table\") final String table, @PathParam(\"id\") @NotNull final String id)", "class_method_signature": "DocumentResource.getDocument(@PathParam(\"table\") final String table, @PathParam(\"id\") @NotNull final String id)", "testcase": false, "constructor": false}, {"identifier": "getDocuments", "parameters": "(@PathParam(\"table\") final String table, @QueryParam(\"id\") @NotNull final List<String> ids)", "modifiers": "@GET public", "return": "Response", "signature": "Response getDocuments(@PathParam(\"table\") final String table, @QueryParam(\"id\") @NotNull final List<String> ids)", "full_signature": "@GET public Response getDocuments(@PathParam(\"table\") final String table, @QueryParam(\"id\") @NotNull final List<String> ids)", "class_method_signature": "DocumentResource.getDocuments(@PathParam(\"table\") final String table, @QueryParam(\"id\") @NotNull final List<String> ids)", "testcase": false, "constructor": false}], "file": "real-time/foxtrot/foxtrot-server/src/main/java/com/flipkart/foxtrot/server/resources/DocumentResource.java"}, "focal_method": {"identifier": "saveDocuments", "parameters": "(@PathParam(\"table\") final String table, @Valid final List<Document> document)", "modifiers": "@POST @Path(\"/bulk\") public", "return": "Response", "body": "@POST\n    @Path(\"/bulk\")\n    public Response saveDocuments(@PathParam(\"table\") final String table, @Valid final List<Document> document) {\n        try {\n            queryStore.save(table, document);\n        } catch (QueryStoreException ex) {\n            logger.error(\"Save error: \", ex);\n            switch (ex.getErrorCode()) {\n                case NO_SUCH_TABLE:\n                case INVALID_REQUEST:\n                    return Response.status(Response.Status.BAD_REQUEST)\n                            .entity(Collections.singletonMap(\"error\", ex.getErrorCode()))\n                            .build();\n                case DOCUMENT_SAVE_ERROR:\n                default:\n                    return Response.serverError()\n                            .entity(Collections.singletonMap(\"error\", ex.getErrorCode()))\n                            .build();\n\n            }\n        }\n        return Response.created(URI.create(\"/\" + table)).build();\n    }", "signature": "Response saveDocuments(@PathParam(\"table\") final String table, @Valid final List<Document> document)", "full_signature": "@POST @Path(\"/bulk\") public Response saveDocuments(@PathParam(\"table\") final String table, @Valid final List<Document> document)", "class_method_signature": "DocumentResource.saveDocuments(@PathParam(\"table\") final String table, @Valid final List<Document> document)", "testcase": false, "constructor": false, "invocations": ["save", "error", "getErrorCode", "build", "entity", "status", "singletonMap", "getErrorCode", "build", "entity", "serverError", "singletonMap", "getErrorCode", "build", "created", "create"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}