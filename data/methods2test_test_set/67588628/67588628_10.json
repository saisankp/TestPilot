{"test_class": {"identifier": "DefaultColumnMapperSelectBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Inject\n    private ColumnQueryMapperBuilder mapperBuilder;", "modifier": "@Inject\n    private", "type": "ColumnQueryMapperBuilder", "declarator": "mapperBuilder", "var_name": "mapperBuilder"}], "file": "artemis-column/src/test/java/org/jnosql/artemis/column/query/DefaultColumnMapperSelectBuilderTest.java"}, "test_case": {"identifier": "shouldReturnSelectStarFrom", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnSelectStarFrom() {\n        ColumnMapperFrom columnFrom = mapperBuilder.selectFrom(Person.class);\n        ColumnQuery query = columnFrom.build();\n        ColumnQuery queryExpected = ColumnQueryBuilder.select().from(\"Person\").build();\n        assertEquals(queryExpected, query);\n    }", "signature": "void shouldReturnSelectStarFrom()", "full_signature": "@Test public void shouldReturnSelectStarFrom()", "class_method_signature": "DefaultColumnMapperSelectBuilderTest.shouldReturnSelectStarFrom()", "testcase": true, "constructor": false, "invocations": ["selectFrom", "build", "build", "from", "select", "assertEquals"]}, "focal_class": {"identifier": "DefaultColumnMapperSelectBuilder", "superclass": "extends AbstractMapperQuery", "interfaces": "implements ColumnMapperFrom, ColumnMapperLimit, ColumnMapperSkip,\n        ColumnMapperOrder, ColumnMapperNameCondition, ColumnMapperNotCondition, ColumnMapperNameOrder, ColumnMapperWhere", "fields": [{"original_string": "private final List<Sort> sorts = new ArrayList<>();", "modifier": "private final", "type": "List<Sort>", "declarator": "sorts = new ArrayList<>()", "var_name": "sorts"}], "methods": [{"identifier": "DefaultColumnMapperSelectBuilder", "parameters": "(ClassMapping mapping, Converters converters)", "modifiers": "", "return": "", "signature": " DefaultColumnMapperSelectBuilder(ClassMapping mapping, Converters converters)", "full_signature": "  DefaultColumnMapperSelectBuilder(ClassMapping mapping, Converters converters)", "class_method_signature": "DefaultColumnMapperSelectBuilder.DefaultColumnMapperSelectBuilder(ClassMapping mapping, Converters converters)", "testcase": false, "constructor": true}, {"identifier": "and", "parameters": "(String name)", "modifiers": "@Override public", "return": "ColumnMapperNameCondition", "signature": "ColumnMapperNameCondition and(String name)", "full_signature": "@Override public ColumnMapperNameCondition and(String name)", "class_method_signature": "DefaultColumnMapperSelectBuilder.and(String name)", "testcase": false, "constructor": false}, {"identifier": "or", "parameters": "(String name)", "modifiers": "@Override public", "return": "ColumnMapperNameCondition", "signature": "ColumnMapperNameCondition or(String name)", "full_signature": "@Override public ColumnMapperNameCondition or(String name)", "class_method_signature": "DefaultColumnMapperSelectBuilder.or(String name)", "testcase": false, "constructor": false}, {"identifier": "where", "parameters": "(String name)", "modifiers": "@Override public", "return": "ColumnMapperNameCondition", "signature": "ColumnMapperNameCondition where(String name)", "full_signature": "@Override public ColumnMapperNameCondition where(String name)", "class_method_signature": "DefaultColumnMapperSelectBuilder.where(String name)", "testcase": false, "constructor": false}, {"identifier": "skip", "parameters": "(long skip)", "modifiers": "@Override public", "return": "ColumnMapperSkip", "signature": "ColumnMapperSkip skip(long skip)", "full_signature": "@Override public ColumnMapperSkip skip(long skip)", "class_method_signature": "DefaultColumnMapperSelectBuilder.skip(long skip)", "testcase": false, "constructor": false}, {"identifier": "limit", "parameters": "(long limit)", "modifiers": "@Override public", "return": "ColumnMapperLimit", "signature": "ColumnMapperLimit limit(long limit)", "full_signature": "@Override public ColumnMapperLimit limit(long limit)", "class_method_signature": "DefaultColumnMapperSelectBuilder.limit(long limit)", "testcase": false, "constructor": false}, {"identifier": "orderBy", "parameters": "(String name)", "modifiers": "@Override public", "return": "ColumnMapperOrder", "signature": "ColumnMapperOrder orderBy(String name)", "full_signature": "@Override public ColumnMapperOrder orderBy(String name)", "class_method_signature": "DefaultColumnMapperSelectBuilder.orderBy(String name)", "testcase": false, "constructor": false}, {"identifier": "not", "parameters": "()", "modifiers": "@Override public", "return": "ColumnMapperNotCondition", "signature": "ColumnMapperNotCondition not()", "full_signature": "@Override public ColumnMapperNotCondition not()", "class_method_signature": "DefaultColumnMapperSelectBuilder.not()", "testcase": false, "constructor": false}, {"identifier": "eq", "parameters": "(T value)", "modifiers": "@Override public", "return": "ColumnMapperWhere", "signature": "ColumnMapperWhere eq(T value)", "full_signature": "@Override public ColumnMapperWhere eq(T value)", "class_method_signature": "DefaultColumnMapperSelectBuilder.eq(T value)", "testcase": false, "constructor": false}, {"identifier": "like", "parameters": "(String value)", "modifiers": "@Override public", "return": "ColumnMapperWhere", "signature": "ColumnMapperWhere like(String value)", "full_signature": "@Override public ColumnMapperWhere like(String value)", "class_method_signature": "DefaultColumnMapperSelectBuilder.like(String value)", "testcase": false, "constructor": false}, {"identifier": "gt", "parameters": "(T value)", "modifiers": "@Override public", "return": "ColumnMapperWhere", "signature": "ColumnMapperWhere gt(T value)", "full_signature": "@Override public ColumnMapperWhere gt(T value)", "class_method_signature": "DefaultColumnMapperSelectBuilder.gt(T value)", "testcase": false, "constructor": false}, {"identifier": "gte", "parameters": "(T value)", "modifiers": "@Override public", "return": "ColumnMapperWhere", "signature": "ColumnMapperWhere gte(T value)", "full_signature": "@Override public ColumnMapperWhere gte(T value)", "class_method_signature": "DefaultColumnMapperSelectBuilder.gte(T value)", "testcase": false, "constructor": false}, {"identifier": "lt", "parameters": "(T value)", "modifiers": "@Override public", "return": "ColumnMapperWhere", "signature": "ColumnMapperWhere lt(T value)", "full_signature": "@Override public ColumnMapperWhere lt(T value)", "class_method_signature": "DefaultColumnMapperSelectBuilder.lt(T value)", "testcase": false, "constructor": false}, {"identifier": "lte", "parameters": "(T value)", "modifiers": "@Override public", "return": "ColumnMapperWhere", "signature": "ColumnMapperWhere lte(T value)", "full_signature": "@Override public ColumnMapperWhere lte(T value)", "class_method_signature": "DefaultColumnMapperSelectBuilder.lte(T value)", "testcase": false, "constructor": false}, {"identifier": "between", "parameters": "(T valueA, T valueB)", "modifiers": "@Override public", "return": "ColumnMapperWhere", "signature": "ColumnMapperWhere between(T valueA, T valueB)", "full_signature": "@Override public ColumnMapperWhere between(T valueA, T valueB)", "class_method_signature": "DefaultColumnMapperSelectBuilder.between(T valueA, T valueB)", "testcase": false, "constructor": false}, {"identifier": "in", "parameters": "(Iterable<T> values)", "modifiers": "@Override public", "return": "ColumnMapperWhere", "signature": "ColumnMapperWhere in(Iterable<T> values)", "full_signature": "@Override public ColumnMapperWhere in(Iterable<T> values)", "class_method_signature": "DefaultColumnMapperSelectBuilder.in(Iterable<T> values)", "testcase": false, "constructor": false}, {"identifier": "asc", "parameters": "()", "modifiers": "@Override public", "return": "ColumnMapperNameOrder", "signature": "ColumnMapperNameOrder asc()", "full_signature": "@Override public ColumnMapperNameOrder asc()", "class_method_signature": "DefaultColumnMapperSelectBuilder.asc()", "testcase": false, "constructor": false}, {"identifier": "desc", "parameters": "()", "modifiers": "@Override public", "return": "ColumnMapperNameOrder", "signature": "ColumnMapperNameOrder desc()", "full_signature": "@Override public ColumnMapperNameOrder desc()", "class_method_signature": "DefaultColumnMapperSelectBuilder.desc()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "@Override public", "return": "ColumnQuery", "signature": "ColumnQuery build()", "full_signature": "@Override public ColumnQuery build()", "class_method_signature": "DefaultColumnMapperSelectBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(ColumnTemplate template)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> execute(ColumnTemplate template)", "full_signature": "@Override public List<T> execute(ColumnTemplate template)", "class_method_signature": "DefaultColumnMapperSelectBuilder.execute(ColumnTemplate template)", "testcase": false, "constructor": false}, {"identifier": "executeSingle", "parameters": "(ColumnTemplate template)", "modifiers": "@Override public", "return": "Optional<T>", "signature": "Optional<T> executeSingle(ColumnTemplate template)", "full_signature": "@Override public Optional<T> executeSingle(ColumnTemplate template)", "class_method_signature": "DefaultColumnMapperSelectBuilder.executeSingle(ColumnTemplate template)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(ColumnTemplateAsync template, Consumer<List<T>> callback)", "modifiers": "@Override public", "return": "void", "signature": "void execute(ColumnTemplateAsync template, Consumer<List<T>> callback)", "full_signature": "@Override public void execute(ColumnTemplateAsync template, Consumer<List<T>> callback)", "class_method_signature": "DefaultColumnMapperSelectBuilder.execute(ColumnTemplateAsync template, Consumer<List<T>> callback)", "testcase": false, "constructor": false}, {"identifier": "executeSingle", "parameters": "(ColumnTemplateAsync template, Consumer<Optional<T>> callback)", "modifiers": "@Override public", "return": "void", "signature": "void executeSingle(ColumnTemplateAsync template, Consumer<Optional<T>> callback)", "full_signature": "@Override public void executeSingle(ColumnTemplateAsync template, Consumer<Optional<T>> callback)", "class_method_signature": "DefaultColumnMapperSelectBuilder.executeSingle(ColumnTemplateAsync template, Consumer<Optional<T>> callback)", "testcase": false, "constructor": false}], "file": "artemis-column/src/main/java/org/jnosql/artemis/column/query/DefaultColumnMapperSelectBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "@Override public", "return": "ColumnQuery", "body": "@Override\n    public ColumnQuery build() {\n        return new ArtemisColumnQuery(sorts, limit, start, condition, columnFamily);\n    }", "signature": "ColumnQuery build()", "full_signature": "@Override public ColumnQuery build()", "class_method_signature": "DefaultColumnMapperSelectBuilder.build()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 67588628, "url": "https://github.com/eclipse/jnosql-artemis", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 43, "size": 2612, "license": "licensed"}}