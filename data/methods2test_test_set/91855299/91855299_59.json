{"test_class": {"identifier": "EqualityUtilsTest", "superclass": "extends UtilityClassTest<EqualityUtils>", "interfaces": "", "fields": [], "file": "api/src/test/java/edu/wpi/first/shuffleboard/api/util/EqualityUtilsTest.java"}, "test_case": {"identifier": "isDifferentArrayTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void isDifferentArrayTest() {\n    assertTrue(EqualityUtils.isDifferent(new Object[]{\"\"}, new Object[]{\"A\"}));\n  }", "signature": "void isDifferentArrayTest()", "full_signature": "@Test public void isDifferentArrayTest()", "class_method_signature": "EqualityUtilsTest.isDifferentArrayTest()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isDifferent"]}, "focal_class": {"identifier": "EqualityUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "EqualityUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " EqualityUtils()", "full_signature": "private  EqualityUtils()", "class_method_signature": "EqualityUtils.EqualityUtils()", "testcase": false, "constructor": true}, {"identifier": "isDifferent", "parameters": "(Object o1, Object o2)", "modifiers": "public static", "return": "boolean", "signature": "boolean isDifferent(Object o1, Object o2)", "full_signature": "public static boolean isDifferent(Object o1, Object o2)", "class_method_signature": "EqualityUtils.isDifferent(Object o1, Object o2)", "testcase": false, "constructor": false}, {"identifier": "isDifferent", "parameters": "(T[] array1, T[] array2)", "modifiers": "public static", "return": "boolean", "signature": "boolean isDifferent(T[] array1, T[] array2)", "full_signature": "public static boolean isDifferent(T[] array1, T[] array2)", "class_method_signature": "EqualityUtils.isDifferent(T[] array1, T[] array2)", "testcase": false, "constructor": false}, {"identifier": "isEqual", "parameters": "(Object o1, Object o2)", "modifiers": "public static", "return": "boolean", "signature": "boolean isEqual(Object o1, Object o2)", "full_signature": "public static boolean isEqual(Object o1, Object o2)", "class_method_signature": "EqualityUtils.isEqual(Object o1, Object o2)", "testcase": false, "constructor": false}, {"identifier": "isEqual", "parameters": "(T[] array1, T[] array2)", "modifiers": "public static", "return": "boolean", "signature": "boolean isEqual(T[] array1, T[] array2)", "full_signature": "public static boolean isEqual(T[] array1, T[] array2)", "class_method_signature": "EqualityUtils.isEqual(T[] array1, T[] array2)", "testcase": false, "constructor": false}], "file": "api/src/main/java/edu/wpi/first/shuffleboard/api/util/EqualityUtils.java"}, "focal_method": {"identifier": "isDifferent", "parameters": "(Object o1, Object o2)", "modifiers": "public static", "return": "boolean", "body": "public static boolean isDifferent(Object o1, Object o2) {\n    return !isEqual(o1, o2);\n  }", "signature": "boolean isDifferent(Object o1, Object o2)", "full_signature": "public static boolean isDifferent(Object o1, Object o2)", "class_method_signature": "EqualityUtils.isDifferent(Object o1, Object o2)", "testcase": false, "constructor": false, "invocations": ["isEqual"]}, "repository": {"repo_id": 91855299, "url": "https://github.com/wpilibsuite/shuffleboard", "stars": 52, "created": "5/20/2017 12:38:25 AM +00:00", "updates": "2020-01-23T20:11:35+00:00", "fork": "False", "license": "licensed"}}