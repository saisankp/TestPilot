{"test_class": {"identifier": "RedisStreamReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int SIZE = 8192;", "modifier": "private static final", "type": "int", "declarator": "SIZE = 8192", "var_name": "SIZE"}, {"original_string": "RedisStreamReader reader;", "modifier": "", "type": "RedisStreamReader", "declarator": "reader", "var_name": "reader"}, {"original_string": "@Mock\n  private InputStream inputStream;", "modifier": "@Mock\n  private", "type": "InputStream", "declarator": "inputStream", "var_name": "inputStream"}], "file": "imcache-redis/src/test/java/com/cetsoft/imcache/redis/client/RedisStreamReaderTest.java"}, "test_case": {"identifier": "readString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void readString() throws IOException {\n    final byte[] bytes = {'O', 'K', '\\r', '\\n'};\n    setupInputStreamRead(bytes, SIZE);\n    String actualStatus = reader.readString();\n    assertEquals(\"OK\", actualStatus);\n  }", "signature": "void readString()", "full_signature": "@Test public void readString()", "class_method_signature": "RedisStreamReaderTest.readString()", "testcase": true, "constructor": false, "invocations": ["setupInputStreamRead", "readString", "assertEquals"]}, "focal_class": {"identifier": "RedisStreamReader", "superclass": "", "interfaces": "implements Closeable", "fields": [{"original_string": "public static final int BUFFER_SIZE = 8192;", "modifier": "public static final", "type": "int", "declarator": "BUFFER_SIZE = 8192", "var_name": "BUFFER_SIZE"}, {"original_string": "private final InputStream inputStream;", "modifier": "private final", "type": "InputStream", "declarator": "inputStream", "var_name": "inputStream"}], "methods": [{"identifier": "RedisStreamReader", "parameters": "(InputStream inputStream)", "modifiers": "public", "return": "", "signature": " RedisStreamReader(InputStream inputStream)", "full_signature": "public  RedisStreamReader(InputStream inputStream)", "class_method_signature": "RedisStreamReader.RedisStreamReader(InputStream inputStream)", "testcase": false, "constructor": true}, {"identifier": "readByte", "parameters": "()", "modifiers": "public", "return": "byte", "signature": "byte readByte()", "full_signature": "public byte readByte()", "class_method_signature": "RedisStreamReader.readByte()", "testcase": false, "constructor": false}, {"identifier": "readString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String readString()", "full_signature": "public String readString()", "class_method_signature": "RedisStreamReader.readString()", "testcase": false, "constructor": false}, {"identifier": "readInt", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int readInt()", "full_signature": "public int readInt()", "class_method_signature": "RedisStreamReader.readInt()", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(int length)", "modifiers": "public", "return": "byte[]", "signature": "byte[] read(int length)", "full_signature": "public byte[] read(int length)", "class_method_signature": "RedisStreamReader.read(int length)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "RedisStreamReader.close()", "testcase": false, "constructor": false}], "file": "imcache-redis/src/main/java/com/cetsoft/imcache/redis/client/RedisStreamReader.java"}, "focal_method": {"identifier": "readString", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String readString() throws IOException {\n    int noOfBytesRead, newLength;\n    byte[] bytes = new byte[0];\n    final byte[] tempBytes = new byte[BUFFER_SIZE];\n    do {\n      noOfBytesRead = inputStream.read(tempBytes);\n      newLength = noOfBytesRead\n          - (noOfBytesRead > 1 && tempBytes[noOfBytesRead - 2] == RedisBytes.CARRIAGE_RETURN_BYTE\n          ? 2 : 0)\n          - (noOfBytesRead > 0 && tempBytes[noOfBytesRead - 1] == RedisBytes.CARRIAGE_RETURN_BYTE\n          ? 1 : 0);\n      byte[] newBytes = new byte[newLength + bytes.length];\n      System.arraycopy(bytes, 0, newBytes, 0, bytes.length);\n      System.arraycopy(tempBytes, 0, newBytes, bytes.length, newLength);\n      bytes = newBytes;\n    } while (noOfBytesRead != -1 && newLength == noOfBytesRead);\n    return new String(bytes);\n  }", "signature": "String readString()", "full_signature": "public String readString()", "class_method_signature": "RedisStreamReader.readString()", "testcase": false, "constructor": false, "invocations": ["read", "arraycopy", "arraycopy"]}, "repository": {"repo_id": 12849994, "url": "https://github.com/Cetsoft/imcache", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 121, "size": 1599, "license": "licensed"}}