{"test_class": {"identifier": "KiePMMLScorecardModelASTFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SOURCE_SAMPLE = \"ScorecardSample.pmml\";", "modifier": "private static final", "type": "String", "declarator": "SOURCE_SAMPLE = \"ScorecardSample.pmml\"", "var_name": "SOURCE_SAMPLE"}, {"original_string": "private PMML samplePmml;", "modifier": "private", "type": "PMML", "declarator": "samplePmml", "var_name": "samplePmml"}, {"original_string": "private Scorecard scorecardModel;", "modifier": "private", "type": "Scorecard", "declarator": "scorecardModel", "var_name": "scorecardModel"}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-compiler/src/test/java/org/kie/pmml/models/drools/scorecard/compiler/factories/KiePMMLScorecardModelASTFactoryTest.java"}, "test_case": {"identifier": "getKiePMMLDroolsSampleAST", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getKiePMMLDroolsSampleAST() {\n        final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap = getFieldTypeMap(samplePmml.getDataDictionary(), samplePmml.getTransformationDictionary(),  scorecardModel.getLocalTransformations());\n        List<KiePMMLDroolsType> types = Collections.emptyList();\n        KiePMMLDroolsAST retrieved = KiePMMLScorecardModelASTFactory.getKiePMMLDroolsAST(samplePmml.getDataDictionary(), scorecardModel, fieldTypeMap, types);\n        assertNotNull(retrieved);\n        assertEquals(types, retrieved.getTypes());\n        assertFalse(retrieved.getRules().isEmpty());\n    }", "signature": "void getKiePMMLDroolsSampleAST()", "full_signature": "@Test public void getKiePMMLDroolsSampleAST()", "class_method_signature": "KiePMMLScorecardModelASTFactoryTest.getKiePMMLDroolsSampleAST()", "testcase": true, "constructor": false, "invocations": ["getFieldTypeMap", "getDataDictionary", "getTransformationDictionary", "getLocalTransformations", "emptyList", "getKiePMMLDroolsAST", "getDataDictionary", "assertNotNull", "assertEquals", "getTypes", "assertFalse", "isEmpty", "getRules"]}, "focal_class": {"identifier": "KiePMMLScorecardModelASTFactory", "superclass": "extends KiePMMLAbstractModelASTFactory", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(KiePMMLScorecardModelASTFactory.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(KiePMMLScorecardModelASTFactory.class.getName())", "var_name": "logger"}], "methods": [{"identifier": "KiePMMLScorecardModelASTFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " KiePMMLScorecardModelASTFactory()", "full_signature": "private  KiePMMLScorecardModelASTFactory()", "class_method_signature": "KiePMMLScorecardModelASTFactory.KiePMMLScorecardModelASTFactory()", "testcase": false, "constructor": true}, {"identifier": "getKiePMMLDroolsAST", "parameters": "(final DataDictionary dataDictionary,\n                                                       final Scorecard model,\n                                                       final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                       final List<KiePMMLDroolsType> types)", "modifiers": "public static", "return": "KiePMMLDroolsAST", "signature": "KiePMMLDroolsAST getKiePMMLDroolsAST(final DataDictionary dataDictionary,\n                                                       final Scorecard model,\n                                                       final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                       final List<KiePMMLDroolsType> types)", "full_signature": "public static KiePMMLDroolsAST getKiePMMLDroolsAST(final DataDictionary dataDictionary,\n                                                       final Scorecard model,\n                                                       final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                       final List<KiePMMLDroolsType> types)", "class_method_signature": "KiePMMLScorecardModelASTFactory.getKiePMMLDroolsAST(final DataDictionary dataDictionary,\n                                                       final Scorecard model,\n                                                       final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                       final List<KiePMMLDroolsType> types)", "testcase": false, "constructor": false}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-scorecard/kie-pmml-models-drools-scorecard-compiler/src/main/java/org/kie/pmml/models/drools/scorecard/compiler/factories/KiePMMLScorecardModelASTFactory.java"}, "focal_method": {"identifier": "getKiePMMLDroolsAST", "parameters": "(final DataDictionary dataDictionary,\n                                                       final Scorecard model,\n                                                       final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                       final List<KiePMMLDroolsType> types)", "modifiers": "public static", "return": "KiePMMLDroolsAST", "body": "public static KiePMMLDroolsAST getKiePMMLDroolsAST(final DataDictionary dataDictionary,\n                                                       final Scorecard model,\n                                                       final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                       final List<KiePMMLDroolsType> types) {\n        logger.trace(\"getKiePMMLDroolsAST {} {} {}\", dataDictionary, model, fieldTypeMap);\n        DATA_TYPE targetType = getTargetFieldType(dataDictionary, model);\n        final List<KiePMMLOutputField> outputFields = getOutputFields(model);\n        KiePMMLScorecardModelCharacteristicASTFactory factory = KiePMMLScorecardModelCharacteristicASTFactory.factory(fieldTypeMap, outputFields, targetType);\n        if (model.isUseReasonCodes()) {\n            factory = factory.withReasonCodes(model.getBaselineScore(), REASONCODE_ALGORITHM.byName(model.getReasonCodeAlgorithm().value()));\n        }\n        final List<KiePMMLDroolsRule> rules = factory\n                .declareRulesFromCharacteristics(model.getCharacteristics(), \"\", model.getInitialScore());\n        return new KiePMMLDroolsAST(types, rules);\n    }", "signature": "KiePMMLDroolsAST getKiePMMLDroolsAST(final DataDictionary dataDictionary,\n                                                       final Scorecard model,\n                                                       final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                       final List<KiePMMLDroolsType> types)", "full_signature": "public static KiePMMLDroolsAST getKiePMMLDroolsAST(final DataDictionary dataDictionary,\n                                                       final Scorecard model,\n                                                       final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                       final List<KiePMMLDroolsType> types)", "class_method_signature": "KiePMMLScorecardModelASTFactory.getKiePMMLDroolsAST(final DataDictionary dataDictionary,\n                                                       final Scorecard model,\n                                                       final Map<String, KiePMMLOriginalTypeGeneratedType> fieldTypeMap,\n                                                       final List<KiePMMLDroolsType> types)", "testcase": false, "constructor": false, "invocations": ["trace", "getTargetFieldType", "getOutputFields", "factory", "isUseReasonCodes", "withReasonCodes", "getBaselineScore", "byName", "value", "getReasonCodeAlgorithm", "declareRulesFromCharacteristics", "getCharacteristics", "getInitialScore"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}