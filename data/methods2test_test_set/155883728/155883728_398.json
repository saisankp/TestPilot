{"test_class": {"identifier": "QueryFacadeTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/jcrfacade/query/QueryFacadeTest.java"}, "test_case": {"identifier": "testExecute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecute() throws Exception {\n        new FacadeGetterMapping.Tester<>(Query.class, this::getFacade)\n                .testFacadeGetter(QueryResult.class, QueryResultFacade.class, Query::execute);\n    }", "signature": "void testExecute()", "full_signature": "@Test public void testExecute()", "class_method_signature": "QueryFacadeTest.testExecute()", "testcase": true, "constructor": false, "invocations": ["testFacadeGetter"]}, "focal_class": {"identifier": "QueryFacade", "superclass": "", "interfaces": "implements Query", "fields": [{"original_string": "protected final @NotNull Q delegate;", "modifier": "protected final @NotNull", "type": "Q", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private final @NotNull SessionFacade<S> session;", "modifier": "private final @NotNull", "type": "SessionFacade<S>", "declarator": "session", "var_name": "session"}], "methods": [{"identifier": "QueryFacade", "parameters": "(final @NotNull Q delegate, final @NotNull SessionFacade<S> session)", "modifiers": "public", "return": "", "signature": " QueryFacade(final @NotNull Q delegate, final @NotNull SessionFacade<S> session)", "full_signature": "public  QueryFacade(final @NotNull Q delegate, final @NotNull SessionFacade<S> session)", "class_method_signature": "QueryFacade.QueryFacade(final @NotNull Q delegate, final @NotNull SessionFacade<S> session)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "QueryResult", "signature": "QueryResult execute()", "full_signature": "@Override public QueryResult execute()", "class_method_signature": "QueryFacade.execute()", "testcase": false, "constructor": false}, {"identifier": "setLimit", "parameters": "(long limit)", "modifiers": "@Override public", "return": "void", "signature": "void setLimit(long limit)", "full_signature": "@Override public void setLimit(long limit)", "class_method_signature": "QueryFacade.setLimit(long limit)", "testcase": false, "constructor": false}, {"identifier": "setOffset", "parameters": "(long offset)", "modifiers": "@Override public", "return": "void", "signature": "void setOffset(long offset)", "full_signature": "@Override public void setOffset(long offset)", "class_method_signature": "QueryFacade.setOffset(long offset)", "testcase": false, "constructor": false}, {"identifier": "getStatement", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getStatement()", "full_signature": "@Override public String getStatement()", "class_method_signature": "QueryFacade.getStatement()", "testcase": false, "constructor": false}, {"identifier": "getLanguage", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getLanguage()", "full_signature": "@Override public String getLanguage()", "class_method_signature": "QueryFacade.getLanguage()", "testcase": false, "constructor": false}, {"identifier": "getStoredQueryPath", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getStoredQueryPath()", "full_signature": "@Override public String getStoredQueryPath()", "class_method_signature": "QueryFacade.getStoredQueryPath()", "testcase": false, "constructor": false}, {"identifier": "bindValue", "parameters": "(String varName, Value value)", "modifiers": "@Override public", "return": "void", "signature": "void bindValue(String varName, Value value)", "full_signature": "@Override public void bindValue(String varName, Value value)", "class_method_signature": "QueryFacade.bindValue(String varName, Value value)", "testcase": false, "constructor": false}, {"identifier": "getBindVariableNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getBindVariableNames()", "full_signature": "@Override public String[] getBindVariableNames()", "class_method_signature": "QueryFacade.getBindVariableNames()", "testcase": false, "constructor": false}, {"identifier": "storeAsNode", "parameters": "(String absPath)", "modifiers": "@Override public final", "return": "Node", "signature": "Node storeAsNode(String absPath)", "full_signature": "@Override public final Node storeAsNode(String absPath)", "class_method_signature": "QueryFacade.storeAsNode(String absPath)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/jcrfacade/query/QueryFacade.java"}, "focal_method": {"identifier": "execute", "parameters": "()", "modifiers": "@Override public", "return": "QueryResult", "body": "@Override\n    public QueryResult execute() throws RepositoryException {\n        QueryResult internal = delegate.execute();\n        return new QueryResultFacade<>(internal, session);\n    }", "signature": "QueryResult execute()", "full_signature": "@Override public QueryResult execute()", "class_method_signature": "QueryFacade.execute()", "testcase": false, "constructor": false, "invocations": ["execute"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}