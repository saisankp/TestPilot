{"test_class": {"identifier": "CollectionMultipartFormDataMessageBodyWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CollectionMultipartFormDataMessageBodyWriter collectionMultipartFormDataMessageBodyWriter;", "modifier": "private", "type": "CollectionMultipartFormDataMessageBodyWriter", "declarator": "collectionMultipartFormDataMessageBodyWriter", "var_name": "collectionMultipartFormDataMessageBodyWriter"}, {"original_string": "private MultipartFormDataWriter                      multipartFormDataWriter;", "modifier": "private", "type": "MultipartFormDataWriter", "declarator": "multipartFormDataWriter", "var_name": "multipartFormDataWriter"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/provider/multipart/CollectionMultipartFormDataMessageBodyWriterTest.java"}, "test_case": {"identifier": "writesCollectionOfOutputItems", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void writesCollectionOfOutputItems() throws Exception {\n        OutputItem item1 = anOutputItem().withName(\"item1\").withEntity(\"item1 entity\").withMediaType(TEXT_PLAIN_TYPE).withFilename(\"item1.txt\").build();\n        OutputItem item2 = anOutputItem().withName(\"item2\").withEntity(\"{\\\"item2\\\":\\\"entity\\\"}\").withMediaType(APPLICATION_JSON_TYPE).withFilename(\"item2.json\").build();\n        Collection<OutputItem> items = newArrayList(item1, item2);\n        Class<Collection> type = Collection.class;\n        ParameterizedType genericType = ParameterizedTypeImpl.newParameterizedType(Collection.class, OutputItem.class);\n        Annotation[] annotations = new Annotation[0];\n        MediaType mediaType = new MediaType(\"multipart\", \"form-data\", ImmutableMap.of(\"boundary\", \"1234567\"));\n        MultivaluedMap<String, Object> headers = new MultivaluedHashMap<>();\n        OutputStream out = new ByteArrayOutputStream();\n\n        collectionMultipartFormDataMessageBodyWriter.writeTo(items, type, genericType, annotations, mediaType, headers, out);\n\n        verify(multipartFormDataWriter).writeItems(same(items), same(out), aryEq(\"1234567\".getBytes()));\n\n        MediaType mediaTypeWithBoundary = (MediaType)headers.getFirst(\"Content-type\");\n        assertNotNull(mediaTypeWithBoundary);\n        String boundary = mediaTypeWithBoundary.getParameters().get(\"boundary\");\n        assertEquals(\"1234567\", boundary);\n    }", "signature": "void writesCollectionOfOutputItems()", "full_signature": "@Test public void writesCollectionOfOutputItems()", "class_method_signature": "CollectionMultipartFormDataMessageBodyWriterTest.writesCollectionOfOutputItems()", "testcase": true, "constructor": false, "invocations": ["build", "withFilename", "withMediaType", "withEntity", "withName", "anOutputItem", "build", "withFilename", "withMediaType", "withEntity", "withName", "anOutputItem", "newArrayList", "newParameterizedType", "of", "writeTo", "writeItems", "verify", "same", "same", "aryEq", "getBytes", "getFirst", "assertNotNull", "get", "getParameters", "assertEquals"]}, "focal_class": {"identifier": "CollectionMultipartFormDataMessageBodyWriter", "superclass": "", "interfaces": "implements MessageBodyWriter<Collection<OutputItem>>", "fields": [{"original_string": "private final MultipartFormDataWriter multipartFormDataWriter;", "modifier": "private final", "type": "MultipartFormDataWriter", "declarator": "multipartFormDataWriter", "var_name": "multipartFormDataWriter"}], "methods": [{"identifier": "CollectionMultipartFormDataMessageBodyWriter", "parameters": "(@Context Providers providers)", "modifiers": "public", "return": "", "signature": " CollectionMultipartFormDataMessageBodyWriter(@Context Providers providers)", "full_signature": "public  CollectionMultipartFormDataMessageBodyWriter(@Context Providers providers)", "class_method_signature": "CollectionMultipartFormDataMessageBodyWriter.CollectionMultipartFormDataMessageBodyWriter(@Context Providers providers)", "testcase": false, "constructor": true}, {"identifier": "CollectionMultipartFormDataMessageBodyWriter", "parameters": "(MultipartFormDataWriter multipartFormDataWriter)", "modifiers": "", "return": "", "signature": " CollectionMultipartFormDataMessageBodyWriter(MultipartFormDataWriter multipartFormDataWriter)", "full_signature": "  CollectionMultipartFormDataMessageBodyWriter(MultipartFormDataWriter multipartFormDataWriter)", "class_method_signature": "CollectionMultipartFormDataMessageBodyWriter.CollectionMultipartFormDataMessageBodyWriter(MultipartFormDataWriter multipartFormDataWriter)", "testcase": false, "constructor": true}, {"identifier": "isWriteable", "parameters": "(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "CollectionMultipartFormDataMessageBodyWriter.isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "(Collection<OutputItem> items, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "long", "signature": "long getSize(Collection<OutputItem> items, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public long getSize(Collection<OutputItem> items, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "CollectionMultipartFormDataMessageBodyWriter.getSize(Collection<OutputItem> items, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "writeTo", "parameters": "(Collection<OutputItem> items, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)", "modifiers": "@Override public", "return": "void", "signature": "void writeTo(Collection<OutputItem> items, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)", "full_signature": "@Override public void writeTo(Collection<OutputItem> items, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)", "class_method_signature": "CollectionMultipartFormDataMessageBodyWriter.writeTo(Collection<OutputItem> items, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)", "testcase": false, "constructor": false}, {"identifier": "createMediaTypeWithBoundary", "parameters": "(MediaType mediaType, String boundary)", "modifiers": "private", "return": "MediaType", "signature": "MediaType createMediaTypeWithBoundary(MediaType mediaType, String boundary)", "full_signature": "private MediaType createMediaTypeWithBoundary(MediaType mediaType, String boundary)", "class_method_signature": "CollectionMultipartFormDataMessageBodyWriter.createMediaTypeWithBoundary(MediaType mediaType, String boundary)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/provider/multipart/CollectionMultipartFormDataMessageBodyWriter.java"}, "focal_method": {"identifier": "writeTo", "parameters": "(Collection<OutputItem> items, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void writeTo(Collection<OutputItem> items, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)\n            throws IOException, WebApplicationException {\n        String boundary = mediaType.getParameters().get(\"boundary\");\n        if (boundary == null) {\n            boundary = Long.toString(System.currentTimeMillis());\n        }\n        httpHeaders.putSingle(\"Content-type\", createMediaTypeWithBoundary(mediaType, boundary));\n        final byte[] boundaryBytes = boundary.getBytes();\n        multipartFormDataWriter.writeItems(items, entityStream, boundaryBytes);\n    }", "signature": "void writeTo(Collection<OutputItem> items, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)", "full_signature": "@Override public void writeTo(Collection<OutputItem> items, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)", "class_method_signature": "CollectionMultipartFormDataMessageBodyWriter.writeTo(Collection<OutputItem> items, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)", "testcase": false, "constructor": false, "invocations": ["get", "getParameters", "toString", "currentTimeMillis", "putSingle", "createMediaTypeWithBoundary", "getBytes", "writeItems"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}