{"test_class": {"identifier": "IoTDBThreadPoolFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String POOL_NAME = \"test\";", "modifier": "private final", "type": "String", "declarator": "POOL_NAME = \"test\"", "var_name": "POOL_NAME"}, {"original_string": "private AtomicInteger count;", "modifier": "private", "type": "AtomicInteger", "declarator": "count", "var_name": "count"}, {"original_string": "private CountDownLatch latch;", "modifier": "private", "type": "CountDownLatch", "declarator": "latch", "var_name": "latch"}], "file": "server/src/test/java/org/apache/iotdb/db/concurrent/IoTDBThreadPoolFactoryTest.java"}, "test_case": {"identifier": "testNewScheduledThreadPool", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testNewScheduledThreadPool() throws InterruptedException {\n    String reason = \"(can be ignored in Tests) NewScheduledThreadPool\";\n    Thread.UncaughtExceptionHandler handler = new TestExceptionHandler(reason);\n    int threadCount = 4;\n    latch = new CountDownLatch(threadCount);\n    ScheduledExecutorService exec = IoTDBThreadPoolFactory\n        .newScheduledThreadPool(threadCount / 2, POOL_NAME, handler);\n    for (int i = 0; i < threadCount; i++) {\n      Runnable task = new TestThread(reason);\n      ScheduledFuture<?> future = exec.scheduleAtFixedRate(task, 0, 1, TimeUnit.SECONDS);\n      try {\n        future.get();\n      } catch (ExecutionException e) {\n        assertEquals(reason, e.getCause().getMessage());\n        count.addAndGet(1);\n        latch.countDown();\n      }\n    }\n    try {\n      latch.await();\n      assertEquals(count.get(), threadCount);\n    } catch (InterruptedException E) {\n      fail();\n    }\n  }", "signature": "void testNewScheduledThreadPool()", "full_signature": "@Test public void testNewScheduledThreadPool()", "class_method_signature": "IoTDBThreadPoolFactoryTest.testNewScheduledThreadPool()", "testcase": true, "constructor": false, "invocations": ["newScheduledThreadPool", "scheduleAtFixedRate", "get", "assertEquals", "getMessage", "getCause", "addAndGet", "countDown", "await", "assertEquals", "get", "fail"]}, "focal_class": {"identifier": "IoTDBThreadPoolFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(IoTDBThreadPoolFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(IoTDBThreadPoolFactory.class)", "var_name": "logger"}], "methods": [{"identifier": "IoTDBThreadPoolFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " IoTDBThreadPoolFactory()", "full_signature": "private  IoTDBThreadPoolFactory()", "class_method_signature": "IoTDBThreadPoolFactory.IoTDBThreadPoolFactory()", "testcase": false, "constructor": true}, {"identifier": "newFixedThreadPool", "parameters": "(int nthreads, String poolName)", "modifiers": "public static", "return": "ExecutorService", "signature": "ExecutorService newFixedThreadPool(int nthreads, String poolName)", "full_signature": "public static ExecutorService newFixedThreadPool(int nthreads, String poolName)", "class_method_signature": "IoTDBThreadPoolFactory.newFixedThreadPool(int nthreads, String poolName)", "testcase": false, "constructor": false}, {"identifier": "newFixedThreadPool", "parameters": "(int nthreads, String poolName,\n      Thread.UncaughtExceptionHandler handler)", "modifiers": "public static", "return": "ExecutorService", "signature": "ExecutorService newFixedThreadPool(int nthreads, String poolName,\n      Thread.UncaughtExceptionHandler handler)", "full_signature": "public static ExecutorService newFixedThreadPool(int nthreads, String poolName,\n      Thread.UncaughtExceptionHandler handler)", "class_method_signature": "IoTDBThreadPoolFactory.newFixedThreadPool(int nthreads, String poolName,\n      Thread.UncaughtExceptionHandler handler)", "testcase": false, "constructor": false}, {"identifier": "newSingleThreadExecutor", "parameters": "(String poolName)", "modifiers": "public static", "return": "ExecutorService", "signature": "ExecutorService newSingleThreadExecutor(String poolName)", "full_signature": "public static ExecutorService newSingleThreadExecutor(String poolName)", "class_method_signature": "IoTDBThreadPoolFactory.newSingleThreadExecutor(String poolName)", "testcase": false, "constructor": false}, {"identifier": "newSingleThreadExecutor", "parameters": "(String poolName,\n      Thread.UncaughtExceptionHandler handler)", "modifiers": "public static", "return": "ExecutorService", "signature": "ExecutorService newSingleThreadExecutor(String poolName,\n      Thread.UncaughtExceptionHandler handler)", "full_signature": "public static ExecutorService newSingleThreadExecutor(String poolName,\n      Thread.UncaughtExceptionHandler handler)", "class_method_signature": "IoTDBThreadPoolFactory.newSingleThreadExecutor(String poolName,\n      Thread.UncaughtExceptionHandler handler)", "testcase": false, "constructor": false}, {"identifier": "newCachedThreadPool", "parameters": "(String poolName)", "modifiers": "public static", "return": "ExecutorService", "signature": "ExecutorService newCachedThreadPool(String poolName)", "full_signature": "public static ExecutorService newCachedThreadPool(String poolName)", "class_method_signature": "IoTDBThreadPoolFactory.newCachedThreadPool(String poolName)", "testcase": false, "constructor": false}, {"identifier": "newCachedThreadPool", "parameters": "(String poolName,\n      Thread.UncaughtExceptionHandler handler)", "modifiers": "public static", "return": "ExecutorService", "signature": "ExecutorService newCachedThreadPool(String poolName,\n      Thread.UncaughtExceptionHandler handler)", "full_signature": "public static ExecutorService newCachedThreadPool(String poolName,\n      Thread.UncaughtExceptionHandler handler)", "class_method_signature": "IoTDBThreadPoolFactory.newCachedThreadPool(String poolName,\n      Thread.UncaughtExceptionHandler handler)", "testcase": false, "constructor": false}, {"identifier": "newSingleThreadScheduledExecutor", "parameters": "(String poolName)", "modifiers": "public static", "return": "ScheduledExecutorService", "signature": "ScheduledExecutorService newSingleThreadScheduledExecutor(String poolName)", "full_signature": "public static ScheduledExecutorService newSingleThreadScheduledExecutor(String poolName)", "class_method_signature": "IoTDBThreadPoolFactory.newSingleThreadScheduledExecutor(String poolName)", "testcase": false, "constructor": false}, {"identifier": "newSingleThreadScheduledExecutor", "parameters": "(String poolName,\n      Thread.UncaughtExceptionHandler handler)", "modifiers": "public static", "return": "ScheduledExecutorService", "signature": "ScheduledExecutorService newSingleThreadScheduledExecutor(String poolName,\n      Thread.UncaughtExceptionHandler handler)", "full_signature": "public static ScheduledExecutorService newSingleThreadScheduledExecutor(String poolName,\n      Thread.UncaughtExceptionHandler handler)", "class_method_signature": "IoTDBThreadPoolFactory.newSingleThreadScheduledExecutor(String poolName,\n      Thread.UncaughtExceptionHandler handler)", "testcase": false, "constructor": false}, {"identifier": "newScheduledThreadPool", "parameters": "(int corePoolSize, String poolName)", "modifiers": "public static", "return": "ScheduledExecutorService", "signature": "ScheduledExecutorService newScheduledThreadPool(int corePoolSize, String poolName)", "full_signature": "public static ScheduledExecutorService newScheduledThreadPool(int corePoolSize, String poolName)", "class_method_signature": "IoTDBThreadPoolFactory.newScheduledThreadPool(int corePoolSize, String poolName)", "testcase": false, "constructor": false}, {"identifier": "newScheduledThreadPool", "parameters": "(int corePoolSize, String poolName,\n      Thread.UncaughtExceptionHandler handler)", "modifiers": "public static", "return": "ScheduledExecutorService", "signature": "ScheduledExecutorService newScheduledThreadPool(int corePoolSize, String poolName,\n      Thread.UncaughtExceptionHandler handler)", "full_signature": "public static ScheduledExecutorService newScheduledThreadPool(int corePoolSize, String poolName,\n      Thread.UncaughtExceptionHandler handler)", "class_method_signature": "IoTDBThreadPoolFactory.newScheduledThreadPool(int corePoolSize, String poolName,\n      Thread.UncaughtExceptionHandler handler)", "testcase": false, "constructor": false}, {"identifier": "createThriftRpcClientThreadPool", "parameters": "(TThreadPoolServer.Args args, String poolName)", "modifiers": "public static", "return": "ExecutorService", "signature": "ExecutorService createThriftRpcClientThreadPool(TThreadPoolServer.Args args, String poolName)", "full_signature": "public static ExecutorService createThriftRpcClientThreadPool(TThreadPoolServer.Args args, String poolName)", "class_method_signature": "IoTDBThreadPoolFactory.createThriftRpcClientThreadPool(TThreadPoolServer.Args args, String poolName)", "testcase": false, "constructor": false}, {"identifier": "createThriftRpcClientThreadPool", "parameters": "(TThreadPoolServer.Args args, String poolName,\n      Thread.UncaughtExceptionHandler handler)", "modifiers": "public static", "return": "ExecutorService", "signature": "ExecutorService createThriftRpcClientThreadPool(TThreadPoolServer.Args args, String poolName,\n      Thread.UncaughtExceptionHandler handler)", "full_signature": "public static ExecutorService createThriftRpcClientThreadPool(TThreadPoolServer.Args args, String poolName,\n      Thread.UncaughtExceptionHandler handler)", "class_method_signature": "IoTDBThreadPoolFactory.createThriftRpcClientThreadPool(TThreadPoolServer.Args args, String poolName,\n      Thread.UncaughtExceptionHandler handler)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/apache/iotdb/db/concurrent/IoTDBThreadPoolFactory.java"}, "focal_method": {"identifier": "newScheduledThreadPool", "parameters": "(int corePoolSize, String poolName)", "modifiers": "public static", "return": "ScheduledExecutorService", "body": "public static ScheduledExecutorService newScheduledThreadPool(int corePoolSize, String poolName) {\n    return Executors.newScheduledThreadPool(corePoolSize, new IoTThreadFactory(poolName));\n  }", "signature": "ScheduledExecutorService newScheduledThreadPool(int corePoolSize, String poolName)", "full_signature": "public static ScheduledExecutorService newScheduledThreadPool(int corePoolSize, String poolName)", "class_method_signature": "IoTDBThreadPoolFactory.newScheduledThreadPool(int corePoolSize, String poolName)", "testcase": false, "constructor": false, "invocations": ["newScheduledThreadPool"]}, "repository": {"repo_id": 158975124, "url": "https://github.com/apache/incubator-iotdb", "stars": 449, "created": "11/24/2018 9:29:17 PM +00:00", "updates": "2020-01-21T08:10:15+00:00", "fork": "False", "license": "licensed"}}