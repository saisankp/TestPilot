{"test_class": {"identifier": "AddressTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final NetworkParameters testParams = TestNet3Params.get();", "modifier": "static final", "type": "NetworkParameters", "declarator": "testParams = TestNet3Params.get()", "var_name": "testParams"}, {"original_string": "static final NetworkParameters mainParams = MainNetParams.get();", "modifier": "static final", "type": "NetworkParameters", "declarator": "mainParams = MainNetParams.get()", "var_name": "mainParams"}], "file": "core/src/test/java/com/google/bitcoin/core/AddressTest.java"}, "test_case": {"identifier": "decoding", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void decoding() throws Exception {\n        if(CoinDefinition.supportsTestNet)\n        {\n            Address a = new Address(testParams, \"n4eA2nbYqErp7H6jebchxAN59DmNpksexv\");\n            assertEquals(\"fda79a24e50ff70ff42f7d89585da5bd19d9e5cc\", Utils.bytesToHexString(a.getHash160()));\n        }\n\n        Address b = new Address(mainParams, CoinDefinition.UNITTEST_ADDRESS);\n        assertEquals(\"4a22c3c4cbb31e4d03b15550636762bda0baf85a\", Utils.bytesToHexString(b.getHash160()));\n    }", "signature": "void decoding()", "full_signature": "@Test public void decoding()", "class_method_signature": "AddressTest.decoding()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "bytesToHexString", "getHash160", "assertEquals", "bytesToHexString", "getHash160"]}, "focal_class": {"identifier": "Address", "superclass": "extends VersionedChecksummedBytes", "interfaces": "", "fields": [{"original_string": "public static final int LENGTH = 20;", "modifier": "public static final", "type": "int", "declarator": "LENGTH = 20", "var_name": "LENGTH"}], "methods": [{"identifier": "Address", "parameters": "(NetworkParameters params, int version, byte[] hash160)", "modifiers": "public", "return": "", "signature": " Address(NetworkParameters params, int version, byte[] hash160)", "full_signature": "public  Address(NetworkParameters params, int version, byte[] hash160)", "class_method_signature": "Address.Address(NetworkParameters params, int version, byte[] hash160)", "testcase": false, "constructor": true}, {"identifier": "fromP2SHHash", "parameters": "(NetworkParameters params, byte[] hash160)", "modifiers": "public static", "return": "Address", "signature": "Address fromP2SHHash(NetworkParameters params, byte[] hash160)", "full_signature": "public static Address fromP2SHHash(NetworkParameters params, byte[] hash160)", "class_method_signature": "Address.fromP2SHHash(NetworkParameters params, byte[] hash160)", "testcase": false, "constructor": false}, {"identifier": "fromP2SHScript", "parameters": "(NetworkParameters params, Script scriptPubKey)", "modifiers": "public static", "return": "Address", "signature": "Address fromP2SHScript(NetworkParameters params, Script scriptPubKey)", "full_signature": "public static Address fromP2SHScript(NetworkParameters params, Script scriptPubKey)", "class_method_signature": "Address.fromP2SHScript(NetworkParameters params, Script scriptPubKey)", "testcase": false, "constructor": false}, {"identifier": "Address", "parameters": "(NetworkParameters params, byte[] hash160)", "modifiers": "public", "return": "", "signature": " Address(NetworkParameters params, byte[] hash160)", "full_signature": "public  Address(NetworkParameters params, byte[] hash160)", "class_method_signature": "Address.Address(NetworkParameters params, byte[] hash160)", "testcase": false, "constructor": true}, {"identifier": "Address", "parameters": "(@Nullable NetworkParameters params, String address)", "modifiers": "public", "return": "", "signature": " Address(@Nullable NetworkParameters params, String address)", "full_signature": "public  Address(@Nullable NetworkParameters params, String address)", "class_method_signature": "Address.Address(@Nullable NetworkParameters params, String address)", "testcase": false, "constructor": true}, {"identifier": "getHash160", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getHash160()", "full_signature": "public byte[] getHash160()", "class_method_signature": "Address.getHash160()", "testcase": false, "constructor": false}, {"identifier": "isP2SHAddress", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isP2SHAddress()", "full_signature": "public boolean isP2SHAddress()", "class_method_signature": "Address.isP2SHAddress()", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "@Nullable public", "return": "NetworkParameters", "signature": "NetworkParameters getParameters()", "full_signature": "@Nullable public NetworkParameters getParameters()", "class_method_signature": "Address.getParameters()", "testcase": false, "constructor": false}, {"identifier": "getParametersFromAddress", "parameters": "(String address)", "modifiers": "@Nullable public static", "return": "NetworkParameters", "signature": "NetworkParameters getParametersFromAddress(String address)", "full_signature": "@Nullable public static NetworkParameters getParametersFromAddress(String address)", "class_method_signature": "Address.getParametersFromAddress(String address)", "testcase": false, "constructor": false}, {"identifier": "isAcceptableVersion", "parameters": "(NetworkParameters params, int version)", "modifiers": "private static", "return": "boolean", "signature": "boolean isAcceptableVersion(NetworkParameters params, int version)", "full_signature": "private static boolean isAcceptableVersion(NetworkParameters params, int version)", "class_method_signature": "Address.isAcceptableVersion(NetworkParameters params, int version)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/google/bitcoin/core/Address.java"}, "focal_method": {"identifier": "getHash160", "parameters": "()", "modifiers": "public", "return": "byte[]", "body": "public byte[] getHash160() {\n        return bytes;\n    }", "signature": "byte[] getHash160()", "full_signature": "public byte[] getHash160()", "class_method_signature": "Address.getHash160()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 24363680, "url": "https://github.com/cannabiscoindev/cannabiscoinj", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 5, "size": 10126, "license": "licensed"}}