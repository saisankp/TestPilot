{"test_class": {"identifier": "SearchIndexValidationRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private SearchIndexValidationRestController searchIndexValidationRestController;", "modifier": "@InjectMocks\n    private", "type": "SearchIndexValidationRestController", "declarator": "searchIndexValidationRestController", "var_name": "searchIndexValidationRestController"}, {"original_string": "@Mock\n    private SearchIndexValidationService searchIndexValidationService;", "modifier": "@Mock\n    private", "type": "SearchIndexValidationService", "declarator": "searchIndexValidationService", "var_name": "searchIndexValidationService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/SearchIndexValidationRestControllerTest.java"}, "test_case": {"identifier": "testCreateSearchIndexValidation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateSearchIndexValidation()\n    {\n        // Create a search index validation create request.\n        SearchIndexValidationCreateRequest searchIndexValidationCreateRequest =\n            new SearchIndexValidationCreateRequest(new SearchIndexKey(SEARCH_INDEX_NAME), PERFORM_FULL_SEARCH_INDEX_VALIDATION);\n\n        // Create a search index validation response.\n        SearchIndexValidation searchIndexValidation =\n            new SearchIndexValidation(new SearchIndexKey(SEARCH_INDEX_NAME), SEARCH_INDEX_STATISTICS_CREATION_DATE, false, false, false);\n\n        // Mock the call to the search index validation service.\n        when(searchIndexValidationService.createSearchIndexValidation(searchIndexValidationCreateRequest)).thenReturn(searchIndexValidation);\n\n        // Create a search index validation.\n        SearchIndexValidation response = searchIndexValidationRestController.createSearchIndexValidation(searchIndexValidationCreateRequest);\n\n        // Verify the calls.\n        verify(searchIndexValidationService, times(1)).createSearchIndexValidation(searchIndexValidationCreateRequest);\n\n        response.setValidateStartTime(SEARCH_INDEX_STATISTICS_CREATION_DATE);\n        // Validate the returned object.\n        assertEquals(searchIndexValidation, response);\n    }", "signature": "void testCreateSearchIndexValidation()", "full_signature": "@Test public void testCreateSearchIndexValidation()", "class_method_signature": "SearchIndexValidationRestControllerTest.testCreateSearchIndexValidation()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "createSearchIndexValidation", "createSearchIndexValidation", "createSearchIndexValidation", "verify", "times", "setValidateStartTime", "assertEquals"]}, "focal_class": {"identifier": "SearchIndexValidationRestController", "superclass": "extends HerdBaseController", "interfaces": "", "fields": [{"original_string": "public static final String SEARCH_INDEX_VALIDATION_URI_PREFIX = \"/searchIndexValidations\";", "modifier": "public static final", "type": "String", "declarator": "SEARCH_INDEX_VALIDATION_URI_PREFIX = \"/searchIndexValidations\"", "var_name": "SEARCH_INDEX_VALIDATION_URI_PREFIX"}, {"original_string": "@Autowired\n    private SearchIndexValidationService searchIndexValidationService;", "modifier": "@Autowired\n    private", "type": "SearchIndexValidationService", "declarator": "searchIndexValidationService", "var_name": "searchIndexValidationService"}], "methods": [{"identifier": "createSearchIndexValidation", "parameters": "(@RequestBody SearchIndexValidationCreateRequest request)", "modifiers": "@RequestMapping(value = SEARCH_INDEX_VALIDATION_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_SEARCH_INDEXES_VALIDATION_POST) public", "return": "SearchIndexValidation", "signature": "SearchIndexValidation createSearchIndexValidation(@RequestBody SearchIndexValidationCreateRequest request)", "full_signature": "@RequestMapping(value = SEARCH_INDEX_VALIDATION_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_SEARCH_INDEXES_VALIDATION_POST) public SearchIndexValidation createSearchIndexValidation(@RequestBody SearchIndexValidationCreateRequest request)", "class_method_signature": "SearchIndexValidationRestController.createSearchIndexValidation(@RequestBody SearchIndexValidationCreateRequest request)", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/SearchIndexValidationRestController.java"}, "focal_method": {"identifier": "createSearchIndexValidation", "parameters": "(@RequestBody SearchIndexValidationCreateRequest request)", "modifiers": "@RequestMapping(value = SEARCH_INDEX_VALIDATION_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_SEARCH_INDEXES_VALIDATION_POST) public", "return": "SearchIndexValidation", "body": "@RequestMapping(value = SEARCH_INDEX_VALIDATION_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"})\n    @Secured(SecurityFunctions.FN_SEARCH_INDEXES_VALIDATION_POST)\n    public SearchIndexValidation createSearchIndexValidation(@RequestBody SearchIndexValidationCreateRequest request)\n    {\n        return searchIndexValidationService.createSearchIndexValidation(request);\n    }", "signature": "SearchIndexValidation createSearchIndexValidation(@RequestBody SearchIndexValidationCreateRequest request)", "full_signature": "@RequestMapping(value = SEARCH_INDEX_VALIDATION_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_SEARCH_INDEXES_VALIDATION_POST) public SearchIndexValidation createSearchIndexValidation(@RequestBody SearchIndexValidationCreateRequest request)", "class_method_signature": "SearchIndexValidationRestController.createSearchIndexValidation(@RequestBody SearchIndexValidationCreateRequest request)", "testcase": false, "constructor": false, "invocations": ["createSearchIndexValidation"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}