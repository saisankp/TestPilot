{"test_class": {"identifier": "TestHttpSessionNotifier", "superclass": "", "interfaces": "", "fields": [{"original_string": "private HttpSessionNotifier notifier;", "modifier": "private", "type": "HttpSessionNotifier", "declarator": "notifier", "var_name": "notifier"}, {"original_string": "private RepositoryBackedSession session;", "modifier": "private", "type": "RepositoryBackedSession", "declarator": "session", "var_name": "session"}, {"original_string": "private ServletContextDescriptor descriptor;", "modifier": "private", "type": "ServletContextDescriptor", "declarator": "descriptor", "var_name": "descriptor"}], "file": "session-replacement/src/test/java/com/amadeus/session/servlet/TestHttpSessionNotifier.java"}, "test_case": {"identifier": "testAttributeReplaced", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testAttributeReplaced() {\n    HttpSessionAttributeListener listener = mock(HttpSessionAttributeListener.class);\n    notifier.attributeReplaced(session, \"Test\", \"very-old-value\");\n    verify(listener, never()).attributeReplaced(any(HttpSessionBindingEvent.class));\n    descriptor.addHttpSessionAttributeListener(listener);\n    notifier.attributeReplaced(session, \"Test\", \"old-value\");\n    verify(listener).attributeReplaced(any(HttpSessionBindingEvent.class));\n    HttpSessionBindingListener bindingListener = mock(HttpSessionBindingListener.class);\n    notifier.attributeReplaced(session, \"Test\", bindingListener);\n    verify(listener, times(2)).attributeReplaced(any(HttpSessionBindingEvent.class));\n    verify(bindingListener).valueUnbound(any(HttpSessionBindingEvent.class));\n  }", "signature": "void testAttributeReplaced()", "full_signature": "@Test public void testAttributeReplaced()", "class_method_signature": "TestHttpSessionNotifier.testAttributeReplaced()", "testcase": true, "constructor": false, "invocations": ["mock", "attributeReplaced", "attributeReplaced", "verify", "never", "any", "addHttpSessionAttributeListener", "attributeReplaced", "attributeReplaced", "verify", "any", "mock", "attributeReplaced", "attributeReplaced", "verify", "times", "any", "valueUnbound", "verify", "any"]}, "focal_class": {"identifier": "HttpSessionNotifier", "superclass": "", "interfaces": "implements SessionNotifier", "fields": [{"original_string": "private ServletContextDescriptor descriptor;", "modifier": "private", "type": "ServletContextDescriptor", "declarator": "descriptor", "var_name": "descriptor"}], "methods": [{"identifier": "HttpSessionNotifier", "parameters": "(ServletContextDescriptor descriptor)", "modifiers": "", "return": "", "signature": " HttpSessionNotifier(ServletContextDescriptor descriptor)", "full_signature": "  HttpSessionNotifier(ServletContextDescriptor descriptor)", "class_method_signature": "HttpSessionNotifier.HttpSessionNotifier(ServletContextDescriptor descriptor)", "testcase": false, "constructor": true}, {"identifier": "sessionCreated", "parameters": "(RepositoryBackedSession session)", "modifiers": "@Override public", "return": "void", "signature": "void sessionCreated(RepositoryBackedSession session)", "full_signature": "@Override public void sessionCreated(RepositoryBackedSession session)", "class_method_signature": "HttpSessionNotifier.sessionCreated(RepositoryBackedSession session)", "testcase": false, "constructor": false}, {"identifier": "attributeAdded", "parameters": "(RepositoryBackedSession session, String key, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void attributeAdded(RepositoryBackedSession session, String key, Object value)", "full_signature": "@Override public void attributeAdded(RepositoryBackedSession session, String key, Object value)", "class_method_signature": "HttpSessionNotifier.attributeAdded(RepositoryBackedSession session, String key, Object value)", "testcase": false, "constructor": false}, {"identifier": "attributeReplaced", "parameters": "(RepositoryBackedSession session, String key, Object replacedValue)", "modifiers": "@Override public", "return": "void", "signature": "void attributeReplaced(RepositoryBackedSession session, String key, Object replacedValue)", "full_signature": "@Override public void attributeReplaced(RepositoryBackedSession session, String key, Object replacedValue)", "class_method_signature": "HttpSessionNotifier.attributeReplaced(RepositoryBackedSession session, String key, Object replacedValue)", "testcase": false, "constructor": false}, {"identifier": "attributeRemoved", "parameters": "(RepositoryBackedSession session, String key, Object removedValue)", "modifiers": "@Override public", "return": "void", "signature": "void attributeRemoved(RepositoryBackedSession session, String key, Object removedValue)", "full_signature": "@Override public void attributeRemoved(RepositoryBackedSession session, String key, Object removedValue)", "class_method_signature": "HttpSessionNotifier.attributeRemoved(RepositoryBackedSession session, String key, Object removedValue)", "testcase": false, "constructor": false}, {"identifier": "attributeBeingStored", "parameters": "(RepositoryBackedSession session, String key, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void attributeBeingStored(RepositoryBackedSession session, String key, Object value)", "full_signature": "@Override public void attributeBeingStored(RepositoryBackedSession session, String key, Object value)", "class_method_signature": "HttpSessionNotifier.attributeBeingStored(RepositoryBackedSession session, String key, Object value)", "testcase": false, "constructor": false}, {"identifier": "attributeHasBeenRestored", "parameters": "(RepositoryBackedSession session, String key, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void attributeHasBeenRestored(RepositoryBackedSession session, String key, Object value)", "full_signature": "@Override public void attributeHasBeenRestored(RepositoryBackedSession session, String key, Object value)", "class_method_signature": "HttpSessionNotifier.attributeHasBeenRestored(RepositoryBackedSession session, String key, Object value)", "testcase": false, "constructor": false}, {"identifier": "sessionDestroyed", "parameters": "(RepositoryBackedSession session, boolean shutdown)", "modifiers": "@Override public", "return": "void", "signature": "void sessionDestroyed(RepositoryBackedSession session, boolean shutdown)", "full_signature": "@Override public void sessionDestroyed(RepositoryBackedSession session, boolean shutdown)", "class_method_signature": "HttpSessionNotifier.sessionDestroyed(RepositoryBackedSession session, boolean shutdown)", "testcase": false, "constructor": false}, {"identifier": "sessionIdChanged", "parameters": "(RepositoryBackedSession session, String oldId)", "modifiers": "@Override public", "return": "void", "signature": "void sessionIdChanged(RepositoryBackedSession session, String oldId)", "full_signature": "@Override public void sessionIdChanged(RepositoryBackedSession session, String oldId)", "class_method_signature": "HttpSessionNotifier.sessionIdChanged(RepositoryBackedSession session, String oldId)", "testcase": false, "constructor": false}], "file": "session-replacement/src/main/java/com/amadeus/session/servlet/HttpSessionNotifier.java"}, "focal_method": {"identifier": "attributeReplaced", "parameters": "(RepositoryBackedSession session, String key, Object replacedValue)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void attributeReplaced(RepositoryBackedSession session, String key, Object replacedValue) {\n    if (session instanceof HttpSession && replacedValue instanceof HttpSessionBindingListener) {\n      ((HttpSessionBindingListener)replacedValue).valueUnbound(new HttpSessionBindingEvent((HttpSession)session, key));\n    }\n    HttpSessionBindingEvent event = new HttpSessionBindingEvent((HttpSession)session, key, replacedValue);\n    for (HttpSessionAttributeListener listener : descriptor.getHttpSessionAttributeListeners()) {\n      listener.attributeReplaced(event);\n    }\n  }", "signature": "void attributeReplaced(RepositoryBackedSession session, String key, Object replacedValue)", "full_signature": "@Override public void attributeReplaced(RepositoryBackedSession session, String key, Object replacedValue)", "class_method_signature": "HttpSessionNotifier.attributeReplaced(RepositoryBackedSession session, String key, Object replacedValue)", "testcase": false, "constructor": false, "invocations": ["valueUnbound", "getHttpSessionAttributeListeners", "attributeReplaced"]}, "repository": {"repo_id": 74458764, "url": "https://github.com/AmadeusITGroup/HttpSessionReplacer", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 45, "size": 514, "license": "licensed"}}