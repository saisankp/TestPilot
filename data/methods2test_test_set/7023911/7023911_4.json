{"test_class": {"identifier": "AsyncRetrieveMessageFormatTest", "superclass": "extends AbstractDateAwareTests", "interfaces": "", "fields": [{"original_string": "FormatTS msgFormat;", "modifier": "", "type": "FormatTS", "declarator": "msgFormat", "var_name": "msgFormat"}], "file": "das/das_wrap_nwhin/src/test/java/org/osehra/das/repo/bluebutton/AsyncRetrieveMessageFormatTest.java"}, "test_case": {"identifier": "parse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void parse() {\n\t\tObject item = msgFormat.parse(\"20121110090807:1234:fred\");\n\t\tAssert.assertNotNull(item);\n\t\tAssert.assertTrue(item instanceof AsyncRetrieveMessage);\n\t\tAsyncRetrieveMessage msg = (AsyncRetrieveMessage)item;\n\t\tAssert.assertEquals(\"1234\", msg.getPatientId());\n\t\tAssert.assertEquals(\"fred\", msg.getPatientName());\n\t\tassertDateEquals(msg.getDate(), 2012, 10, 10, 9, 8, 7);\n\t}", "signature": "void parse()", "full_signature": "@Test public void parse()", "class_method_signature": "AsyncRetrieveMessageFormatTest.parse()", "testcase": true, "constructor": false, "invocations": ["parse", "assertNotNull", "assertTrue", "assertEquals", "getPatientId", "assertEquals", "getPatientName", "assertDateEquals", "getDate"]}, "focal_class": {"identifier": "AsyncRetrieveMessageFormat", "superclass": "", "interfaces": "implements FormatTS", "fields": [{"original_string": "protected FormatTS dateFormat = new SimpleDateFormatTS();", "modifier": "protected", "type": "FormatTS", "declarator": "dateFormat = new SimpleDateFormatTS()", "var_name": "dateFormat"}, {"original_string": "protected Log logger = LogFactory.getLog(this.getClass());", "modifier": "protected", "type": "Log", "declarator": "logger = LogFactory.getLog(this.getClass())", "var_name": "logger"}, {"original_string": "protected String separator = \":\";", "modifier": "protected", "type": "String", "declarator": "separator = \":\"", "var_name": "separator"}], "methods": [{"identifier": "getSeparator", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSeparator()", "full_signature": "public String getSeparator()", "class_method_signature": "AsyncRetrieveMessageFormat.getSeparator()", "testcase": false, "constructor": false}, {"identifier": "setSeparator", "parameters": "(String separator)", "modifiers": "public", "return": "void", "signature": "void setSeparator(String separator)", "full_signature": "public void setSeparator(String separator)", "class_method_signature": "AsyncRetrieveMessageFormat.setSeparator(String separator)", "testcase": false, "constructor": false}, {"identifier": "getDateFormat", "parameters": "()", "modifiers": "public", "return": "FormatTS", "signature": "FormatTS getDateFormat()", "full_signature": "public FormatTS getDateFormat()", "class_method_signature": "AsyncRetrieveMessageFormat.getDateFormat()", "testcase": false, "constructor": false}, {"identifier": "setDateFormat", "parameters": "(FormatTS dateFormat)", "modifiers": "public", "return": "void", "signature": "void setDateFormat(FormatTS dateFormat)", "full_signature": "public void setDateFormat(FormatTS dateFormat)", "class_method_signature": "AsyncRetrieveMessageFormat.setDateFormat(FormatTS dateFormat)", "testcase": false, "constructor": false}, {"identifier": "formatObject", "parameters": "(Object item)", "modifiers": "@Override public", "return": "String", "signature": "String formatObject(Object item)", "full_signature": "@Override public String formatObject(Object item)", "class_method_signature": "AsyncRetrieveMessageFormat.formatObject(Object item)", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String data)", "modifiers": "@Override public", "return": "Object", "signature": "Object parse(String data)", "full_signature": "@Override public Object parse(String data)", "class_method_signature": "AsyncRetrieveMessageFormat.parse(String data)", "testcase": false, "constructor": false}, {"identifier": "getStringOrBlank", "parameters": "(String aString)", "modifiers": "protected static", "return": "String", "signature": "String getStringOrBlank(String aString)", "full_signature": "protected static String getStringOrBlank(String aString)", "class_method_signature": "AsyncRetrieveMessageFormat.getStringOrBlank(String aString)", "testcase": false, "constructor": false}], "file": "das/das_wrap_nwhin/src/main/java/org/osehra/das/repo/bluebutton/AsyncRetrieveMessageFormat.java"}, "focal_method": {"identifier": "parse", "parameters": "(String data)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n\tpublic Object parse(String data) {\n\t\tif (data!=null && data.length()>0) {\n\t\t\tString[] items = data.split(getSeparator());\n\t\t\treturn new AsyncRetrieveMessage((Date)dateFormat.parse(items[0]), items[1], items[2]);\n\t\t}\n\t\t// TODO Update for handling parsing errors\n\t\treturn null;\n\t}", "signature": "Object parse(String data)", "full_signature": "@Override public Object parse(String data)", "class_method_signature": "AsyncRetrieveMessageFormat.parse(String data)", "testcase": false, "constructor": false, "invocations": ["length", "split", "getSeparator", "parse"]}, "repository": {"repo_id": 7023911, "url": "https://github.com/WorldVistA/Blue-Button-Document-Adapter", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 2081, "license": "licensed"}}