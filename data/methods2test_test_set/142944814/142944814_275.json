{"test_class": {"identifier": "ExceptionUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/util/src/test/java/hera/util/ExceptionUtilsTest.java"}, "test_case": {"identifier": "testBuildExceptionMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testBuildExceptionMessage() {\n    assertNull(ExceptionUtils.buildExceptionMessage(null, null));\n\n    for (int i = 0; i < 100; ++i) {\n      assertNotNull(ExceptionUtils.buildExceptionMessage(randomUUID().toString(), new Throwable()));\n    }\n  }", "signature": "void testBuildExceptionMessage()", "full_signature": "@Test public void testBuildExceptionMessage()", "class_method_signature": "ExceptionUtilsTest.testBuildExceptionMessage()", "testcase": true, "constructor": false, "invocations": ["assertNull", "buildExceptionMessage", "assertNotNull", "buildExceptionMessage", "toString", "randomUUID"]}, "focal_class": {"identifier": "ExceptionUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "buildExceptionMessage", "parameters": "(\n      final String message,\n      final Throwable cause)", "modifiers": "public static", "return": "String", "signature": "String buildExceptionMessage(\n      final String message,\n      final Throwable cause)", "full_signature": "public static String buildExceptionMessage(\n      final String message,\n      final Throwable cause)", "class_method_signature": "ExceptionUtils.buildExceptionMessage(\n      final String message,\n      final Throwable cause)", "testcase": false, "constructor": false}, {"identifier": "trace", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String trace()", "full_signature": "public static String trace()", "class_method_signature": "ExceptionUtils.trace()", "testcase": false, "constructor": false}, {"identifier": "trace", "parameters": "(\n      final StackTraceElement[] elements)", "modifiers": "public static", "return": "String", "signature": "String trace(\n      final StackTraceElement[] elements)", "full_signature": "public static String trace(\n      final StackTraceElement[] elements)", "class_method_signature": "ExceptionUtils.trace(\n      final StackTraceElement[] elements)", "testcase": false, "constructor": false}, {"identifier": "trace", "parameters": "(\n      final StackTraceElement[] elements,\n      final int start,\n      final int end)", "modifiers": "public static", "return": "String", "signature": "String trace(\n      final StackTraceElement[] elements,\n      final int start,\n      final int end)", "full_signature": "public static String trace(\n      final StackTraceElement[] elements,\n      final int start,\n      final int end)", "class_method_signature": "ExceptionUtils.trace(\n      final StackTraceElement[] elements,\n      final int start,\n      final int end)", "testcase": false, "constructor": false}, {"identifier": "getStackTraceOf", "parameters": "(\n      final Throwable e)", "modifiers": "public static", "return": "String", "signature": "String getStackTraceOf(\n      final Throwable e)", "full_signature": "public static String getStackTraceOf(\n      final Throwable e)", "class_method_signature": "ExceptionUtils.getStackTraceOf(\n      final Throwable e)", "testcase": false, "constructor": false}, {"identifier": "concat", "parameters": "(final StackTraceElement[] left,\n      final StackTraceElement[] right)", "modifiers": "public static", "return": "StackTraceElement[]", "signature": "StackTraceElement[] concat(final StackTraceElement[] left,\n      final StackTraceElement[] right)", "full_signature": "public static StackTraceElement[] concat(final StackTraceElement[] left,\n      final StackTraceElement[] right)", "class_method_signature": "ExceptionUtils.concat(final StackTraceElement[] left,\n      final StackTraceElement[] right)", "testcase": false, "constructor": false}], "file": "core/util/src/main/java/hera/util/ExceptionUtils.java"}, "focal_method": {"identifier": "buildExceptionMessage", "parameters": "(\n      final String message,\n      final Throwable cause)", "modifiers": "public static", "return": "String", "body": "public static String buildExceptionMessage(\n      final String message,\n      final Throwable cause) {\n    if (null == cause) {\n      return message;\n    }\n    final StringBuilder sb = new StringBuilder();\n    if (null != message) {\n      sb.append(message).append(\"; \");\n    }\n\n    sb.append(\"nested exception is \").append(cause);\n    return sb.toString();\n  }", "signature": "String buildExceptionMessage(\n      final String message,\n      final Throwable cause)", "full_signature": "public static String buildExceptionMessage(\n      final String message,\n      final Throwable cause)", "class_method_signature": "ExceptionUtils.buildExceptionMessage(\n      final String message,\n      final Throwable cause)", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "append", "toString"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}