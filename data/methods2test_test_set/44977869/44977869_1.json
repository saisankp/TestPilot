{"test_class": {"identifier": "CalibrationCyclicBarierStageTest", "superclass": "", "interfaces": "", "fields": [], "file": "foglight/src/test/java/com/ociweb/pronghorn/image/CalibrationCyclicBarierStageTest.java"}, "test_case": {"identifier": "simpleTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void simpleTest() {\n\t\t\n\t\t\n\t\tGraphManager gm = new GraphManager();\n\t\t\n\t\tint tracks = 4;\n\t\t\n\t\tPipe<CalibrationStatusSchema> calibrationDoneOutput = CalibrationStatusSchema.instance.newPipe(10, 100);\n\t\tPipe<CalibrationStatusSchema>[] calibrationDoneInputs = Pipe.buildPipes(tracks, calibrationDoneOutput.config());\n\t\t\n\t\tint i = tracks;\n\t\twhile (--i>=0) {\n\t\t\tcalibrationDoneInputs[i].initBuffers();\n\t\t\t\n\t\t\tint fieldStartValue = 10000;\n\t\t\tint fieldTotalUnits =  1000;\n\t\t\tCalibrationStatusSchema.publishCycleCalibrated(calibrationDoneInputs[i], fieldStartValue, fieldTotalUnits);\n\t\t\t\n\t\t\tPipe.publishEOF(calibrationDoneInputs[i]);\n\t\t}\n\t\t\n\t\t\n\t\tnew CalibrationCyclicBarierStage(gm, calibrationDoneOutput, calibrationDoneInputs);\n\t\t\n\t\tStringBuilder results = new StringBuilder();\n\t\tPronghornStage watch = ConsoleJSONDumpStage.newInstance(gm, calibrationDoneOutput, results);\n\t\t\n\t\tStageScheduler sched = StageScheduler.defaultScheduler(gm);\n\t\t\n\t\tsched.startup();\n\t\t\n\t\tGraphManager.blockUntilStageTerminated(gm, watch);\n\n\t\tassertEquals(\"{\\\"CycleCalibrated\\\":  {\\\"StartValue\\\":10000}  {\\\"TotalUnits\\\":1000}}\\n\",results.toString());\n\t\t\n\t}", "signature": "void simpleTest()", "full_signature": "@Test public void simpleTest()", "class_method_signature": "CalibrationCyclicBarierStageTest.simpleTest()", "testcase": true, "constructor": false, "invocations": ["newPipe", "buildPipes", "config", "initBuffers", "publishCycleCalibrated", "publishEOF", "newInstance", "defaultScheduler", "startup", "blockUntilStageTerminated", "assertEquals", "toString"]}, "focal_class": {"identifier": "CalibrationCyclicBarierStage", "superclass": "extends PronghornStage", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(CalibrationCyclicBarierStage.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(CalibrationCyclicBarierStage.class)", "var_name": "logger"}, {"original_string": "private Pipe<CalibrationStatusSchema> calibrationDone;", "modifier": "private", "type": "Pipe<CalibrationStatusSchema>", "declarator": "calibrationDone", "var_name": "calibrationDone"}, {"original_string": "private Pipe<CalibrationStatusSchema>[] calibrationDoneInputs;", "modifier": "private", "type": "Pipe<CalibrationStatusSchema>[]", "declarator": "calibrationDoneInputs", "var_name": "calibrationDoneInputs"}, {"original_string": "private int activeLocation = -1;", "modifier": "private", "type": "int", "declarator": "activeLocation = -1", "var_name": "activeLocation"}, {"original_string": "private int previousLocation = -1;", "modifier": "private", "type": "int", "declarator": "previousLocation = -1", "var_name": "previousLocation"}, {"original_string": "private int activeCount = 0;", "modifier": "private", "type": "int", "declarator": "activeCount = 0", "var_name": "activeCount"}, {"original_string": "private int shutdownCount;", "modifier": "private", "type": "int", "declarator": "shutdownCount", "var_name": "shutdownCount"}], "methods": [{"identifier": "newInstance", "parameters": "(GraphManager gm, \n\t\t\tPipe<CalibrationStatusSchema> calibrationDone, \n\t\t\tPipe<CalibrationStatusSchema> ... calibrationDoneInputs)", "modifiers": "public static", "return": "CalibrationCyclicBarierStage", "signature": "CalibrationCyclicBarierStage newInstance(GraphManager gm, \n\t\t\tPipe<CalibrationStatusSchema> calibrationDone, \n\t\t\tPipe<CalibrationStatusSchema> ... calibrationDoneInputs)", "full_signature": "public static CalibrationCyclicBarierStage newInstance(GraphManager gm, \n\t\t\tPipe<CalibrationStatusSchema> calibrationDone, \n\t\t\tPipe<CalibrationStatusSchema> ... calibrationDoneInputs)", "class_method_signature": "CalibrationCyclicBarierStage.newInstance(GraphManager gm, \n\t\t\tPipe<CalibrationStatusSchema> calibrationDone, \n\t\t\tPipe<CalibrationStatusSchema> ... calibrationDoneInputs)", "testcase": false, "constructor": false}, {"identifier": "CalibrationCyclicBarierStage", "parameters": "(GraphManager gm, \n\t\t\t\tPipe<CalibrationStatusSchema> calibrationDone, \n\t\t\t\tPipe<CalibrationStatusSchema> ... calibrationDoneInputs)", "modifiers": "public", "return": "", "signature": " CalibrationCyclicBarierStage(GraphManager gm, \n\t\t\t\tPipe<CalibrationStatusSchema> calibrationDone, \n\t\t\t\tPipe<CalibrationStatusSchema> ... calibrationDoneInputs)", "full_signature": "public  CalibrationCyclicBarierStage(GraphManager gm, \n\t\t\t\tPipe<CalibrationStatusSchema> calibrationDone, \n\t\t\t\tPipe<CalibrationStatusSchema> ... calibrationDoneInputs)", "class_method_signature": "CalibrationCyclicBarierStage.CalibrationCyclicBarierStage(GraphManager gm, \n\t\t\t\tPipe<CalibrationStatusSchema> calibrationDone, \n\t\t\t\tPipe<CalibrationStatusSchema> ... calibrationDoneInputs)", "testcase": false, "constructor": true}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "CalibrationCyclicBarierStage.run()", "testcase": false, "constructor": false}, {"identifier": "clearOld", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void clearOld()", "full_signature": "private void clearOld()", "class_method_signature": "CalibrationCyclicBarierStage.clearOld()", "testcase": false, "constructor": false}, {"identifier": "process", "parameters": "(Pipe<CalibrationStatusSchema> pipe)", "modifiers": "private", "return": "int", "signature": "int process(Pipe<CalibrationStatusSchema> pipe)", "full_signature": "private int process(Pipe<CalibrationStatusSchema> pipe)", "class_method_signature": "CalibrationCyclicBarierStage.process(Pipe<CalibrationStatusSchema> pipe)", "testcase": false, "constructor": false}], "file": "foglight/src/main/java/com/ociweb/pronghorn/image/CalibrationCyclicBarierStage.java"}, "focal_method": {"identifier": "newInstance", "parameters": "(GraphManager gm, \n\t\t\tPipe<CalibrationStatusSchema> calibrationDone, \n\t\t\tPipe<CalibrationStatusSchema> ... calibrationDoneInputs)", "modifiers": "public static", "return": "CalibrationCyclicBarierStage", "body": "public static CalibrationCyclicBarierStage newInstance(GraphManager gm, \n\t\t\tPipe<CalibrationStatusSchema> calibrationDone, \n\t\t\tPipe<CalibrationStatusSchema> ... calibrationDoneInputs) {\n\t\treturn new CalibrationCyclicBarierStage(gm, calibrationDone, calibrationDoneInputs);\n\t}", "signature": "CalibrationCyclicBarierStage newInstance(GraphManager gm, \n\t\t\tPipe<CalibrationStatusSchema> calibrationDone, \n\t\t\tPipe<CalibrationStatusSchema> ... calibrationDoneInputs)", "full_signature": "public static CalibrationCyclicBarierStage newInstance(GraphManager gm, \n\t\t\tPipe<CalibrationStatusSchema> calibrationDone, \n\t\t\tPipe<CalibrationStatusSchema> ... calibrationDoneInputs)", "class_method_signature": "CalibrationCyclicBarierStage.newInstance(GraphManager gm, \n\t\t\tPipe<CalibrationStatusSchema> calibrationDone, \n\t\t\tPipe<CalibrationStatusSchema> ... calibrationDoneInputs)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 44977869, "url": "https://github.com/oci-pronghorn/FogLight", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 124921, "license": "licensed"}}