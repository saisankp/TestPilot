{"test_class": {"identifier": "ToolsArgumentHelperTest", "superclass": "extends AbstractCoreTest", "interfaces": "", "fields": [{"original_string": "@Rule\n    public EnvironmentVariables environmentVariables = new EnvironmentVariables();", "modifier": "@Rule\n    public", "type": "EnvironmentVariables", "declarator": "environmentVariables = new EnvironmentVariables()", "var_name": "environmentVariables"}], "file": "herd-code/herd-tools/herd-tools-common/src/test/java/org/finra/herd/tools/common/ToolsArgumentHelperTest.java"}, "test_case": {"identifier": "getCliEnvArgumentValueEnableEnvVarFalse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getCliEnvArgumentValueEnableEnvVarFalse() throws ParseException\n    {\n        environmentVariables.set(\"HERD_PASSWORD\", \"envPassword\");\n        String[] argumentsWithCliOpt = {\"--enableEnvVariables\", \"false\"};\n        validateCliEnvArgument(argumentsWithCliOpt, null);\n        environmentVariables.clear(\"HERD_PASSWORD\");\n    }", "signature": "void getCliEnvArgumentValueEnableEnvVarFalse()", "full_signature": "@Test public void getCliEnvArgumentValueEnableEnvVarFalse()", "class_method_signature": "ToolsArgumentHelperTest.getCliEnvArgumentValueEnableEnvVarFalse()", "testcase": true, "constructor": false, "invocations": ["set", "validateCliEnvArgument", "clear"]}, "focal_class": {"identifier": "ToolsArgumentHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "validateCliEnvArgument", "parameters": "(ArgumentParser argParser, Option cliOpt, Option enableEnvVariablesOpt)", "modifiers": "public static", "return": "void", "signature": "void validateCliEnvArgument(ArgumentParser argParser, Option cliOpt, Option enableEnvVariablesOpt)", "full_signature": "public static void validateCliEnvArgument(ArgumentParser argParser, Option cliOpt, Option enableEnvVariablesOpt)", "class_method_signature": "ToolsArgumentHelper.validateCliEnvArgument(ArgumentParser argParser, Option cliOpt, Option enableEnvVariablesOpt)", "testcase": false, "constructor": false}, {"identifier": "getCliEnvArgumentValue", "parameters": "(ArgumentParser argParser, Option cliOpt, Option enableEnvVariablesOpt)", "modifiers": "public static", "return": "String", "signature": "String getCliEnvArgumentValue(ArgumentParser argParser, Option cliOpt, Option enableEnvVariablesOpt)", "full_signature": "public static String getCliEnvArgumentValue(ArgumentParser argParser, Option cliOpt, Option enableEnvVariablesOpt)", "class_method_signature": "ToolsArgumentHelper.getCliEnvArgumentValue(ArgumentParser argParser, Option cliOpt, Option enableEnvVariablesOpt)", "testcase": false, "constructor": false}, {"identifier": "getEnvValue", "parameters": "(Option option)", "modifiers": "private static", "return": "String", "signature": "String getEnvValue(Option option)", "full_signature": "private static String getEnvValue(Option option)", "class_method_signature": "ToolsArgumentHelper.getEnvValue(Option option)", "testcase": false, "constructor": false}, {"identifier": "getEnvVarName", "parameters": "(Option option)", "modifiers": "private static", "return": "String", "signature": "String getEnvVarName(Option option)", "full_signature": "private static String getEnvVarName(Option option)", "class_method_signature": "ToolsArgumentHelper.getEnvVarName(Option option)", "testcase": false, "constructor": false}], "file": "herd-code/herd-tools/herd-tools-common/src/main/java/org/finra/herd/tools/common/ToolsArgumentHelper.java"}, "focal_method": {"identifier": "validateCliEnvArgument", "parameters": "(ArgumentParser argParser, Option cliOpt, Option enableEnvVariablesOpt)", "modifiers": "public static", "return": "void", "body": "public static void validateCliEnvArgument(ArgumentParser argParser, Option cliOpt, Option enableEnvVariablesOpt) throws ParseException\n    {\n        String optionName = cliOpt.getLongOpt();\n        String envVarName = getEnvVarName(cliOpt);\n        //check password cli input, then env vars if enableEnvVariables is true\n        boolean blankCliOption = StringUtils.isBlank(argParser.getStringValue(cliOpt));\n        boolean enableEnvVars = argParser.getStringValueAsBoolean(enableEnvVariablesOpt, false);\n        boolean blankEnvVars = StringUtils.isBlank(ToolsArgumentHelper.getEnvValue(cliOpt));\n        if (blankCliOption && !enableEnvVars || blankCliOption && blankEnvVars)\n        {\n            {\n                throw new ParseException(String.format(\"Either %s or enableEnvVariables with env variable %s is required.\", optionName, envVarName));\n            }\n\n        }\n\n    }", "signature": "void validateCliEnvArgument(ArgumentParser argParser, Option cliOpt, Option enableEnvVariablesOpt)", "full_signature": "public static void validateCliEnvArgument(ArgumentParser argParser, Option cliOpt, Option enableEnvVariablesOpt)", "class_method_signature": "ToolsArgumentHelper.validateCliEnvArgument(ArgumentParser argParser, Option cliOpt, Option enableEnvVariablesOpt)", "testcase": false, "constructor": false, "invocations": ["getLongOpt", "getEnvVarName", "isBlank", "getStringValue", "getStringValueAsBoolean", "isBlank", "getEnvValue", "format"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}