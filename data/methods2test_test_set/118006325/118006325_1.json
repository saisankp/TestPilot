{"test_class": {"identifier": "StarWarsServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private RestTemplate restTemplate;", "modifier": "@Mock\n    private", "type": "RestTemplate", "declarator": "restTemplate", "var_name": "restTemplate"}, {"original_string": "@Autowired\n    @InjectMocks\n    private StarWarsService service;", "modifier": "@Autowired\n    @InjectMocks\n    private", "type": "StarWarsService", "declarator": "service", "var_name": "service"}, {"original_string": "private PeopleDTO lukeSkywalker = fromJson(\"luke-skywalker\", PeopleDTO.class);", "modifier": "private", "type": "PeopleDTO", "declarator": "lukeSkywalker = fromJson(\"luke-skywalker\", PeopleDTO.class)", "var_name": "lukeSkywalker"}, {"original_string": "private FilmDTO attackOfTheClones = fromJson(\"attack-of-the-clones\", FilmDTO.class);", "modifier": "private", "type": "FilmDTO", "declarator": "attackOfTheClones = fromJson(\"attack-of-the-clones\", FilmDTO.class)", "var_name": "attackOfTheClones"}, {"original_string": "private Planet tatooine = fromJson(\"tatooine\", Planet.class);", "modifier": "private", "type": "Planet", "declarator": "tatooine = fromJson(\"tatooine\", Planet.class)", "var_name": "tatooine"}], "file": "snapshot-matcher-example/src/test/java/com/zenika/snapshotmatcherexample/starwars/StarWarsServiceTest.java"}, "test_case": {"identifier": "getPlanetTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getPlanetTest() {\n        PlanetDTO planet = service.getPlanet(1L);\n\n        assertThat(planet, matchesSnapshot());\n    }", "signature": "void getPlanetTest()", "full_signature": "@Test public void getPlanetTest()", "class_method_signature": "StarWarsServiceTest.getPlanetTest()", "testcase": true, "constructor": false, "invocations": ["getPlanet", "assertThat", "matchesSnapshot"]}, "focal_class": {"identifier": "StarWarsService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private RestTemplate restTemplate;", "modifier": "@Autowired\n    private", "type": "RestTemplate", "declarator": "restTemplate", "var_name": "restTemplate"}, {"original_string": "@Autowired\n    private PlanetConverter planetConverter;", "modifier": "@Autowired\n    private", "type": "PlanetConverter", "declarator": "planetConverter", "var_name": "planetConverter"}, {"original_string": "@Value(\"${endpoints.planets}\")\n    private String endpoint;", "modifier": "@Value(\"${endpoints.planets}\")\n    private", "type": "String", "declarator": "endpoint", "var_name": "endpoint"}], "methods": [{"identifier": "getPlanet", "parameters": "(Long id)", "modifiers": "public", "return": "PlanetDTO", "signature": "PlanetDTO getPlanet(Long id)", "full_signature": "public PlanetDTO getPlanet(Long id)", "class_method_signature": "StarWarsService.getPlanet(Long id)", "testcase": false, "constructor": false}], "file": "snapshot-matcher-example/src/main/java/com/zenika/snapshotmatcherexample/starwars/StarWarsService.java"}, "focal_method": {"identifier": "getPlanet", "parameters": "(Long id)", "modifiers": "public", "return": "PlanetDTO", "body": "public PlanetDTO getPlanet(Long id){\n        return planetConverter.convertPlanet(restTemplate.getForObject(endpoint + id, Planet.class));\n    }", "signature": "PlanetDTO getPlanet(Long id)", "full_signature": "public PlanetDTO getPlanet(Long id)", "class_method_signature": "StarWarsService.getPlanet(Long id)", "testcase": false, "constructor": false, "invocations": ["convertPlanet", "getForObject"]}, "repository": {"repo_id": 118006325, "url": "https://github.com/Zenika/java-snapshot-matcher", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 11, "size": 55, "license": "licensed"}}