{"test_class": {"identifier": "NiceDateTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/modules/common/src/test/java/org/onetwo/common/date/NiceDateTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test() throws ParseException{\n\t\tLocalDateTime date = LocalDateTime.of(2015, 11, 11, 11, 11, 11, 510000000);\n\t\tString format = date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss SSS\"));\n//\t\tSystem.out.println(\"format: \" + format);\n\t\tAssert.assertEquals(\"2015-11-11 11:11:11 510\", format);\n\t\t\n\t\tString str = \"Tue, 24 Nov 2015 06:33:31 GMT\";\n\t\tSimpleDateFormat sdf = new SimpleDateFormat(\"EEE, dd MMM yyyy HH:mm:ss Z\", Locale.ENGLISH);\n//\t\tSystem.out.println(\"f:\"+sdf.format(new Date()));\n\t\tDate d = sdf.parse(str);\n\t\tSystem.out.println(\"parse:\"+d.toLocaleString());\n\t\t\n\t}", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "NiceDateTest.test()", "testcase": true, "constructor": false, "invocations": ["of", "format", "ofPattern", "assertEquals", "parse", "println", "toLocaleString"]}, "focal_class": {"identifier": "NiceDate", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Calendar calendar = Calendar.getInstance();", "modifier": "private", "type": "Calendar", "declarator": "calendar = Calendar.getInstance()", "var_name": "calendar"}, {"original_string": "private DateType dateType = DateType.date;", "modifier": "private", "type": "DateType", "declarator": "dateType = DateType.date", "var_name": "dateType"}], "methods": [{"identifier": "New", "parameters": "()", "modifiers": "public static", "return": "NiceDate", "signature": "NiceDate New()", "full_signature": "public static NiceDate New()", "class_method_signature": "NiceDate.New()", "testcase": false, "constructor": false}, {"identifier": "Now", "parameters": "()", "modifiers": "public static", "return": "NiceDate", "signature": "NiceDate Now()", "full_signature": "public static NiceDate Now()", "class_method_signature": "NiceDate.Now()", "testcase": false, "constructor": false}, {"identifier": "New", "parameters": "(Date date)", "modifiers": "public static", "return": "NiceDate", "signature": "NiceDate New(Date date)", "full_signature": "public static NiceDate New(Date date)", "class_method_signature": "NiceDate.New(Date date)", "testcase": false, "constructor": false}, {"identifier": "New", "parameters": "(String dateStr)", "modifiers": "public static", "return": "NiceDate", "signature": "NiceDate New(String dateStr)", "full_signature": "public static NiceDate New(String dateStr)", "class_method_signature": "NiceDate.New(String dateStr)", "testcase": false, "constructor": false}, {"identifier": "New", "parameters": "(String dateStr, String format)", "modifiers": "public static", "return": "NiceDate", "signature": "NiceDate New(String dateStr, String format)", "full_signature": "public static NiceDate New(String dateStr, String format)", "class_method_signature": "NiceDate.New(String dateStr, String format)", "testcase": false, "constructor": false}, {"identifier": "NiceDate", "parameters": "()", "modifiers": "public", "return": "", "signature": " NiceDate()", "full_signature": "public  NiceDate()", "class_method_signature": "NiceDate.NiceDate()", "testcase": false, "constructor": true}, {"identifier": "NiceDate", "parameters": "(Date date)", "modifiers": "public", "return": "", "signature": " NiceDate(Date date)", "full_signature": "public  NiceDate(Date date)", "class_method_signature": "NiceDate.NiceDate(Date date)", "testcase": false, "constructor": true}, {"identifier": "precise", "parameters": "(DateType dateType)", "modifiers": "protected", "return": "void", "signature": "void precise(DateType dateType)", "full_signature": "protected void precise(DateType dateType)", "class_method_signature": "NiceDate.precise(DateType dateType)", "testcase": false, "constructor": false}, {"identifier": "setTimeByString", "parameters": "(String timeString)", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate setTimeByString(String timeString)", "full_signature": "public NiceDate setTimeByString(String timeString)", "class_method_signature": "NiceDate.setTimeByString(String timeString)", "testcase": false, "constructor": false}, {"identifier": "getTime", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getTime()", "full_signature": "public Date getTime()", "class_method_signature": "NiceDate.getTime()", "testcase": false, "constructor": false}, {"identifier": "getTimeInMillis", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTimeInMillis()", "full_signature": "public long getTimeInMillis()", "class_method_signature": "NiceDate.getTimeInMillis()", "testcase": false, "constructor": false}, {"identifier": "getMillis", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getMillis()", "full_signature": "public long getMillis()", "class_method_signature": "NiceDate.getMillis()", "testcase": false, "constructor": false}, {"identifier": "setMillis", "parameters": "(long millis)", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate setMillis(long millis)", "full_signature": "public NiceDate setMillis(long millis)", "class_method_signature": "NiceDate.setMillis(long millis)", "testcase": false, "constructor": false}, {"identifier": "setTimeInSeconds", "parameters": "(long seconds)", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate setTimeInSeconds(long seconds)", "full_signature": "public NiceDate setTimeInSeconds(long seconds)", "class_method_signature": "NiceDate.setTimeInSeconds(long seconds)", "testcase": false, "constructor": false}, {"identifier": "setTime", "parameters": "(Date time)", "modifiers": "public", "return": "void", "signature": "void setTime(Date time)", "full_signature": "public void setTime(Date time)", "class_method_signature": "NiceDate.setTime(Date time)", "testcase": false, "constructor": false}, {"identifier": "today", "parameters": "()", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate today()", "full_signature": "public NiceDate today()", "class_method_signature": "NiceDate.today()", "testcase": false, "constructor": false}, {"identifier": "yesterday", "parameters": "()", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate yesterday()", "full_signature": "public NiceDate yesterday()", "class_method_signature": "NiceDate.yesterday()", "testcase": false, "constructor": false}, {"identifier": "nextDay", "parameters": "(int number)", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate nextDay(int number)", "full_signature": "public NiceDate nextDay(int number)", "class_method_signature": "NiceDate.nextDay(int number)", "testcase": false, "constructor": false}, {"identifier": "nextHour", "parameters": "(int amount)", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate nextHour(int amount)", "full_signature": "public NiceDate nextHour(int amount)", "class_method_signature": "NiceDate.nextHour(int amount)", "testcase": false, "constructor": false}, {"identifier": "nextMonth", "parameters": "(int amount)", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate nextMonth(int amount)", "full_signature": "public NiceDate nextMonth(int amount)", "class_method_signature": "NiceDate.nextMonth(int amount)", "testcase": false, "constructor": false}, {"identifier": "nextYear", "parameters": "(int amount)", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate nextYear(int amount)", "full_signature": "public NiceDate nextYear(int amount)", "class_method_signature": "NiceDate.nextYear(int amount)", "testcase": false, "constructor": false}, {"identifier": "nextMinute", "parameters": "(int amount)", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate nextMinute(int amount)", "full_signature": "public NiceDate nextMinute(int amount)", "class_method_signature": "NiceDate.nextMinute(int amount)", "testcase": false, "constructor": false}, {"identifier": "nextSecond", "parameters": "(int amount)", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate nextSecond(int amount)", "full_signature": "public NiceDate nextSecond(int amount)", "class_method_signature": "NiceDate.nextSecond(int amount)", "testcase": false, "constructor": false}, {"identifier": "tomorrow", "parameters": "()", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate tomorrow()", "full_signature": "public NiceDate tomorrow()", "class_method_signature": "NiceDate.tomorrow()", "testcase": false, "constructor": false}, {"identifier": "thisYear", "parameters": "()", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate thisYear()", "full_signature": "public NiceDate thisYear()", "class_method_signature": "NiceDate.thisYear()", "testcase": false, "constructor": false}, {"identifier": "thisMonth", "parameters": "()", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate thisMonth()", "full_signature": "public NiceDate thisMonth()", "class_method_signature": "NiceDate.thisMonth()", "testcase": false, "constructor": false}, {"identifier": "thisHour", "parameters": "()", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate thisHour()", "full_signature": "public NiceDate thisHour()", "class_method_signature": "NiceDate.thisHour()", "testcase": false, "constructor": false}, {"identifier": "thisDate", "parameters": "()", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate thisDate()", "full_signature": "public NiceDate thisDate()", "class_method_signature": "NiceDate.thisDate()", "testcase": false, "constructor": false}, {"identifier": "preciseDate", "parameters": "()", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate preciseDate()", "full_signature": "public NiceDate preciseDate()", "class_method_signature": "NiceDate.preciseDate()", "testcase": false, "constructor": false}, {"identifier": "thisMin", "parameters": "()", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate thisMin()", "full_signature": "public NiceDate thisMin()", "class_method_signature": "NiceDate.thisMin()", "testcase": false, "constructor": false}, {"identifier": "thisSec", "parameters": "()", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate thisSec()", "full_signature": "public NiceDate thisSec()", "class_method_signature": "NiceDate.thisSec()", "testcase": false, "constructor": false}, {"identifier": "thisMisec", "parameters": "()", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate thisMisec()", "full_signature": "public NiceDate thisMisec()", "class_method_signature": "NiceDate.thisMisec()", "testcase": false, "constructor": false}, {"identifier": "atTheBeginning", "parameters": "()", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate atTheBeginning()", "full_signature": "public NiceDate atTheBeginning()", "class_method_signature": "NiceDate.atTheBeginning()", "testcase": false, "constructor": false}, {"identifier": "atTheEnd", "parameters": "()", "modifiers": "public", "return": "NiceDate", "signature": "NiceDate atTheEnd()", "full_signature": "public NiceDate atTheEnd()", "class_method_signature": "NiceDate.atTheEnd()", "testcase": false, "constructor": false}, {"identifier": "isBetween", "parameters": "(Date start, Date end)", "modifiers": "public", "return": "boolean", "signature": "boolean isBetween(Date start, Date end)", "full_signature": "public boolean isBetween(Date start, Date end)", "class_method_signature": "NiceDate.isBetween(Date start, Date end)", "testcase": false, "constructor": false}, {"identifier": "getDatePhase", "parameters": "()", "modifiers": "public", "return": "DatePhase", "signature": "DatePhase getDatePhase()", "full_signature": "public DatePhase getDatePhase()", "class_method_signature": "NiceDate.getDatePhase()", "testcase": false, "constructor": false}, {"identifier": "isMorning", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isMorning()", "full_signature": "public boolean isMorning()", "class_method_signature": "NiceDate.isMorning()", "testcase": false, "constructor": false}, {"identifier": "isNoon", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNoon()", "full_signature": "public boolean isNoon()", "class_method_signature": "NiceDate.isNoon()", "testcase": false, "constructor": false}, {"identifier": "isAfternoon", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAfternoon()", "full_signature": "public boolean isAfternoon()", "class_method_signature": "NiceDate.isAfternoon()", "testcase": false, "constructor": false}, {"identifier": "isNight", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNight()", "full_signature": "public boolean isNight()", "class_method_signature": "NiceDate.isNight()", "testcase": false, "constructor": false}, {"identifier": "isDeepnight", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDeepnight()", "full_signature": "public boolean isDeepnight()", "class_method_signature": "NiceDate.isDeepnight()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "NiceDate.toString()", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "(String format)", "modifiers": "public", "return": "String", "signature": "String format(String format)", "full_signature": "public String format(String format)", "class_method_signature": "NiceDate.format(String format)", "testcase": false, "constructor": false}, {"identifier": "formatAsDate", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String formatAsDate()", "full_signature": "public String formatAsDate()", "class_method_signature": "NiceDate.formatAsDate()", "testcase": false, "constructor": false}, {"identifier": "formatAsTime", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String formatAsTime()", "full_signature": "public String formatAsTime()", "class_method_signature": "NiceDate.formatAsTime()", "testcase": false, "constructor": false}, {"identifier": "formatAsDateTime", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String formatAsDateTime()", "full_signature": "public String formatAsDateTime()", "class_method_signature": "NiceDate.formatAsDateTime()", "testcase": false, "constructor": false}, {"identifier": "formatDateTimeMillis", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String formatDateTimeMillis()", "full_signature": "public String formatDateTimeMillis()", "class_method_signature": "NiceDate.formatDateTimeMillis()", "testcase": false, "constructor": false}, {"identifier": "getYear", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getYear()", "full_signature": "public int getYear()", "class_method_signature": "NiceDate.getYear()", "testcase": false, "constructor": false}, {"identifier": "getMonth", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMonth()", "full_signature": "public int getMonth()", "class_method_signature": "NiceDate.getMonth()", "testcase": false, "constructor": false}, {"identifier": "getDayOfMonth", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDayOfMonth()", "full_signature": "public int getDayOfMonth()", "class_method_signature": "NiceDate.getDayOfMonth()", "testcase": false, "constructor": false}, {"identifier": "getHourOfDay", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getHourOfDay()", "full_signature": "public int getHourOfDay()", "class_method_signature": "NiceDate.getHourOfDay()", "testcase": false, "constructor": false}, {"identifier": "isBeforeOrEquals", "parameters": "(NiceDate date)", "modifiers": "public", "return": "boolean", "signature": "boolean isBeforeOrEquals(NiceDate date)", "full_signature": "public boolean isBeforeOrEquals(NiceDate date)", "class_method_signature": "NiceDate.isBeforeOrEquals(NiceDate date)", "testcase": false, "constructor": false}, {"identifier": "isAfterOrEquals", "parameters": "(NiceDate date)", "modifiers": "public", "return": "boolean", "signature": "boolean isAfterOrEquals(NiceDate date)", "full_signature": "public boolean isAfterOrEquals(NiceDate date)", "class_method_signature": "NiceDate.isAfterOrEquals(NiceDate date)", "testcase": false, "constructor": false}, {"identifier": "isBefore", "parameters": "(NiceDate date)", "modifiers": "public", "return": "boolean", "signature": "boolean isBefore(NiceDate date)", "full_signature": "public boolean isBefore(NiceDate date)", "class_method_signature": "NiceDate.isBefore(NiceDate date)", "testcase": false, "constructor": false}, {"identifier": "isAfter", "parameters": "(NiceDate date)", "modifiers": "public", "return": "boolean", "signature": "boolean isAfter(NiceDate date)", "full_signature": "public boolean isAfter(NiceDate date)", "class_method_signature": "NiceDate.isAfter(NiceDate date)", "testcase": false, "constructor": false}, {"identifier": "isEquals", "parameters": "(NiceDate date)", "modifiers": "public", "return": "boolean", "signature": "boolean isEquals(NiceDate date)", "full_signature": "public boolean isEquals(NiceDate date)", "class_method_signature": "NiceDate.isEquals(NiceDate date)", "testcase": false, "constructor": false}, {"identifier": "awayFrom", "parameters": "(NiceDate date)", "modifiers": "public", "return": "Duration", "signature": "Duration awayFrom(NiceDate date)", "full_signature": "public Duration awayFrom(NiceDate date)", "class_method_signature": "NiceDate.awayFrom(NiceDate date)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "NiceDate.main(String[] args)", "testcase": false, "constructor": false}], "file": "core/modules/common/src/main/java/org/onetwo/common/date/NiceDate.java"}, "focal_method": {"identifier": "format", "parameters": "(String format)", "modifiers": "public", "return": "String", "body": "public String format(String format){\n\t\treturn DateUtils.format(format, calendar.getTime());\n\t}", "signature": "String format(String format)", "full_signature": "public String format(String format)", "class_method_signature": "NiceDate.format(String format)", "testcase": false, "constructor": false, "invocations": ["format", "getTime"]}, "repository": {"repo_id": 47802308, "url": "https://github.com/wayshall/onetwo", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 16, "size": 57582, "license": "licensed"}}