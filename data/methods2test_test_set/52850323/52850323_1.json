{"test_class": {"identifier": "RCLJavaTest", "superclass": "", "interfaces": "", "fields": [], "file": "rcljava/src/test/java/org/ros2/rcljava/RCLJavaTest.java"}, "test_case": {"identifier": "testOk", "parameters": "()", "modifiers": "@Test public final", "return": "void", "body": "@Test\n  public final void testOk() {\n    RCLJava.rclJavaInit();\n    assertEquals(true, RCLJava.ok());\n    RCLJava.shutdown();\n    assertEquals(false, RCLJava.ok());\n  }", "signature": "void testOk()", "full_signature": "@Test public final void testOk()", "class_method_signature": "RCLJavaTest.testOk()", "testcase": true, "constructor": false, "invocations": ["rclJavaInit", "assertEquals", "ok", "shutdown", "assertEquals", "ok"]}, "focal_class": {"identifier": "RCLJava", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(RCLJava.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(RCLJava.class)", "var_name": "logger"}, {"original_string": "private static SingleThreadedExecutor globalExecutor = null;", "modifier": "private static", "type": "SingleThreadedExecutor", "declarator": "globalExecutor = null", "var_name": "globalExecutor"}, {"original_string": "private static Collection<Node> nodes;", "modifier": "private static", "type": "Collection<Node>", "declarator": "nodes", "var_name": "nodes"}, {"original_string": "private static boolean initialized = false;", "modifier": "private static", "type": "boolean", "declarator": "initialized = false", "var_name": "initialized"}], "methods": [{"identifier": "getGlobalExecutor", "parameters": "()", "modifiers": "private static", "return": "SingleThreadedExecutor", "signature": "SingleThreadedExecutor getGlobalExecutor()", "full_signature": "private static SingleThreadedExecutor getGlobalExecutor()", "class_method_signature": "RCLJava.getGlobalExecutor()", "testcase": false, "constructor": false}, {"identifier": "RCLJava", "parameters": "()", "modifiers": "private", "return": "", "signature": " RCLJava()", "full_signature": "private  RCLJava()", "class_method_signature": "RCLJava.RCLJava()", "testcase": false, "constructor": true}, {"identifier": "cleanup", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void cleanup()", "full_signature": "private static void cleanup()", "class_method_signature": "RCLJava.cleanup()", "testcase": false, "constructor": false}, {"identifier": "isInitialized", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isInitialized()", "full_signature": "public static boolean isInitialized()", "class_method_signature": "RCLJava.isInitialized()", "testcase": false, "constructor": false}, {"identifier": "rclJavaInit", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void rclJavaInit()", "full_signature": "public static void rclJavaInit()", "class_method_signature": "RCLJava.rclJavaInit()", "testcase": false, "constructor": false}, {"identifier": "nativeRCLJavaInit", "parameters": "()", "modifiers": "private static native", "return": "void", "signature": "void nativeRCLJavaInit()", "full_signature": "private static native void nativeRCLJavaInit()", "class_method_signature": "RCLJava.nativeRCLJavaInit()", "testcase": false, "constructor": false}, {"identifier": "nativeCreateNodeHandle", "parameters": "(String nodeName, String namespace)", "modifiers": "private static native", "return": "long", "signature": "long nativeCreateNodeHandle(String nodeName, String namespace)", "full_signature": "private static native long nativeCreateNodeHandle(String nodeName, String namespace)", "class_method_signature": "RCLJava.nativeCreateNodeHandle(String nodeName, String namespace)", "testcase": false, "constructor": false}, {"identifier": "nativeGetRMWIdentifier", "parameters": "()", "modifiers": "private static native", "return": "String", "signature": "String nativeGetRMWIdentifier()", "full_signature": "private static native String nativeGetRMWIdentifier()", "class_method_signature": "RCLJava.nativeGetRMWIdentifier()", "testcase": false, "constructor": false}, {"identifier": "getRMWIdentifier", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getRMWIdentifier()", "full_signature": "public static String getRMWIdentifier()", "class_method_signature": "RCLJava.getRMWIdentifier()", "testcase": false, "constructor": false}, {"identifier": "nativeOk", "parameters": "()", "modifiers": "private static native", "return": "boolean", "signature": "boolean nativeOk()", "full_signature": "private static native boolean nativeOk()", "class_method_signature": "RCLJava.nativeOk()", "testcase": false, "constructor": false}, {"identifier": "ok", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean ok()", "full_signature": "public static boolean ok()", "class_method_signature": "RCLJava.ok()", "testcase": false, "constructor": false}, {"identifier": "createNode", "parameters": "(final String nodeName)", "modifiers": "public static", "return": "Node", "signature": "Node createNode(final String nodeName)", "full_signature": "public static Node createNode(final String nodeName)", "class_method_signature": "RCLJava.createNode(final String nodeName)", "testcase": false, "constructor": false}, {"identifier": "createNode", "parameters": "(final String nodeName, final String namespace)", "modifiers": "public static", "return": "Node", "signature": "Node createNode(final String nodeName, final String namespace)", "full_signature": "public static Node createNode(final String nodeName, final String namespace)", "class_method_signature": "RCLJava.createNode(final String nodeName, final String namespace)", "testcase": false, "constructor": false}, {"identifier": "spin", "parameters": "(final Node node)", "modifiers": "public static", "return": "void", "signature": "void spin(final Node node)", "full_signature": "public static void spin(final Node node)", "class_method_signature": "RCLJava.spin(final Node node)", "testcase": false, "constructor": false}, {"identifier": "spin", "parameters": "(final ComposableNode composableNode)", "modifiers": "public static", "return": "void", "signature": "void spin(final ComposableNode composableNode)", "full_signature": "public static void spin(final ComposableNode composableNode)", "class_method_signature": "RCLJava.spin(final ComposableNode composableNode)", "testcase": false, "constructor": false}, {"identifier": "spinOnce", "parameters": "(final Node node)", "modifiers": "public static", "return": "void", "signature": "void spinOnce(final Node node)", "full_signature": "public static void spinOnce(final Node node)", "class_method_signature": "RCLJava.spinOnce(final Node node)", "testcase": false, "constructor": false}, {"identifier": "spinOnce", "parameters": "(final ComposableNode composableNode)", "modifiers": "public static", "return": "void", "signature": "void spinOnce(final ComposableNode composableNode)", "full_signature": "public static void spinOnce(final ComposableNode composableNode)", "class_method_signature": "RCLJava.spinOnce(final ComposableNode composableNode)", "testcase": false, "constructor": false}, {"identifier": "spinSome", "parameters": "(final Node node)", "modifiers": "public static", "return": "void", "signature": "void spinSome(final Node node)", "full_signature": "public static void spinSome(final Node node)", "class_method_signature": "RCLJava.spinSome(final Node node)", "testcase": false, "constructor": false}, {"identifier": "spinSome", "parameters": "(final ComposableNode composableNode)", "modifiers": "public static", "return": "void", "signature": "void spinSome(final ComposableNode composableNode)", "full_signature": "public static void spinSome(final ComposableNode composableNode)", "class_method_signature": "RCLJava.spinSome(final ComposableNode composableNode)", "testcase": false, "constructor": false}, {"identifier": "nativeShutdown", "parameters": "()", "modifiers": "private static native", "return": "void", "signature": "void nativeShutdown()", "full_signature": "private static native void nativeShutdown()", "class_method_signature": "RCLJava.nativeShutdown()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void shutdown()", "full_signature": "public static void shutdown()", "class_method_signature": "RCLJava.shutdown()", "testcase": false, "constructor": false}, {"identifier": "convertQoSProfileToHandle", "parameters": "(final QoSProfile qosProfile)", "modifiers": "public static", "return": "long", "signature": "long convertQoSProfileToHandle(final QoSProfile qosProfile)", "full_signature": "public static long convertQoSProfileToHandle(final QoSProfile qosProfile)", "class_method_signature": "RCLJava.convertQoSProfileToHandle(final QoSProfile qosProfile)", "testcase": false, "constructor": false}, {"identifier": "nativeConvertQoSProfileToHandle", "parameters": "(int history, int depth,\n      int reliability, int durability, boolean avoidROSNamespaceConventions)", "modifiers": "private static native", "return": "long", "signature": "long nativeConvertQoSProfileToHandle(int history, int depth,\n      int reliability, int durability, boolean avoidROSNamespaceConventions)", "full_signature": "private static native long nativeConvertQoSProfileToHandle(int history, int depth,\n      int reliability, int durability, boolean avoidROSNamespaceConventions)", "class_method_signature": "RCLJava.nativeConvertQoSProfileToHandle(int history, int depth,\n      int reliability, int durability, boolean avoidROSNamespaceConventions)", "testcase": false, "constructor": false}, {"identifier": "disposeQoSProfile", "parameters": "(final long qosProfileHandle)", "modifiers": "public static", "return": "void", "signature": "void disposeQoSProfile(final long qosProfileHandle)", "full_signature": "public static void disposeQoSProfile(final long qosProfileHandle)", "class_method_signature": "RCLJava.disposeQoSProfile(final long qosProfileHandle)", "testcase": false, "constructor": false}, {"identifier": "nativeDisposeQoSProfile", "parameters": "(long qosProfileHandle)", "modifiers": "private static native", "return": "void", "signature": "void nativeDisposeQoSProfile(long qosProfileHandle)", "full_signature": "private static native void nativeDisposeQoSProfile(long qosProfileHandle)", "class_method_signature": "RCLJava.nativeDisposeQoSProfile(long qosProfileHandle)", "testcase": false, "constructor": false}], "file": "rcljava/src/main/java/org/ros2/rcljava/RCLJava.java"}, "focal_method": {"identifier": "ok", "parameters": "()", "modifiers": "public static", "return": "boolean", "body": "public static boolean ok() {\n    return nativeOk();\n  }", "signature": "boolean ok()", "full_signature": "public static boolean ok()", "class_method_signature": "RCLJava.ok()", "testcase": false, "constructor": false, "invocations": ["nativeOk"]}, "repository": {"repo_id": 52850323, "url": "https://github.com/ros2-java/ros2_java", "stars": 39, "created": "3/1/2016 5:22:50 AM +00:00", "updates": "2020-01-17T13:46:29+00:00", "fork": "False", "license": "licensed"}}