{"test_class": {"identifier": "StoragePlatformRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "private static Logger logger = LoggerFactory.getLogger(StoragePlatformRestControllerTest.class);", "modifier": "private static", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(StoragePlatformRestControllerTest.class)", "var_name": "logger"}, {"original_string": "@InjectMocks\n    private StoragePlatformRestController storagePlatformRestController;", "modifier": "@InjectMocks\n    private", "type": "StoragePlatformRestController", "declarator": "storagePlatformRestController", "var_name": "storagePlatformRestController"}, {"original_string": "@Mock\n    private StoragePlatformService storagePlatformService;", "modifier": "@Mock\n    private", "type": "StoragePlatformService", "declarator": "storagePlatformService", "var_name": "storagePlatformService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/StoragePlatformRestControllerTest.java"}, "test_case": {"identifier": "testGetStoragePlatforms", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetStoragePlatforms() throws Exception\n    {\n        StoragePlatforms storagePlatforms = new StoragePlatforms(Arrays.asList(new StoragePlatform()));\n        when(storagePlatformService.getStoragePlatforms()).thenReturn(storagePlatforms);\n        StoragePlatforms resultStoragePlatforms = storagePlatformRestController.getStoragePlatforms();\n        assertNotNull(storagePlatforms);\n        logger.info(\"Total number of storage platforms: \" + storagePlatforms.getStoragePlatforms().size());\n        assertTrue(storagePlatforms.getStoragePlatforms().size() >= 1); // We should have at least 1 row of reference data present (i.e. S3).\n\n        // Verify the external calls.\n        verify(storagePlatformService).getStoragePlatforms();\n        verifyNoMoreInteractions(storagePlatformService);\n        // Validate the returned object.\n        assertEquals(storagePlatforms, resultStoragePlatforms);\n    }", "signature": "void testGetStoragePlatforms()", "full_signature": "@Test public void testGetStoragePlatforms()", "class_method_signature": "StoragePlatformRestControllerTest.testGetStoragePlatforms()", "testcase": true, "constructor": false, "invocations": ["asList", "thenReturn", "when", "getStoragePlatforms", "getStoragePlatforms", "assertNotNull", "info", "size", "getStoragePlatforms", "assertTrue", "size", "getStoragePlatforms", "getStoragePlatforms", "verify", "verifyNoMoreInteractions", "assertEquals"]}, "focal_class": {"identifier": "StoragePlatformRestController", "superclass": "extends HerdBaseController", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private StoragePlatformService storagePlatformService;", "modifier": "@Autowired\n    private", "type": "StoragePlatformService", "declarator": "storagePlatformService", "var_name": "storagePlatformService"}], "methods": [{"identifier": "getStoragePlatform", "parameters": "(@PathVariable(\"name\") String name)", "modifiers": "@RequestMapping(value = \"/storagePlatforms/{name}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_STORAGE_PLATFORMS_GET) public", "return": "StoragePlatform", "signature": "StoragePlatform getStoragePlatform(@PathVariable(\"name\") String name)", "full_signature": "@RequestMapping(value = \"/storagePlatforms/{name}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_STORAGE_PLATFORMS_GET) public StoragePlatform getStoragePlatform(@PathVariable(\"name\") String name)", "class_method_signature": "StoragePlatformRestController.getStoragePlatform(@PathVariable(\"name\") String name)", "testcase": false, "constructor": false}, {"identifier": "getStoragePlatforms", "parameters": "()", "modifiers": "@RequestMapping(value = \"/storagePlatforms\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_STORAGE_PLATFORMS_ALL_GET) public", "return": "StoragePlatforms", "signature": "StoragePlatforms getStoragePlatforms()", "full_signature": "@RequestMapping(value = \"/storagePlatforms\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_STORAGE_PLATFORMS_ALL_GET) public StoragePlatforms getStoragePlatforms()", "class_method_signature": "StoragePlatformRestController.getStoragePlatforms()", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/StoragePlatformRestController.java"}, "focal_method": {"identifier": "getStoragePlatforms", "parameters": "()", "modifiers": "@RequestMapping(value = \"/storagePlatforms\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_STORAGE_PLATFORMS_ALL_GET) public", "return": "StoragePlatforms", "body": "@RequestMapping(value = \"/storagePlatforms\", method = RequestMethod.GET)\n    @Secured(SecurityFunctions.FN_STORAGE_PLATFORMS_ALL_GET)\n    public StoragePlatforms getStoragePlatforms()\n    {\n        return storagePlatformService.getStoragePlatforms();\n    }", "signature": "StoragePlatforms getStoragePlatforms()", "full_signature": "@RequestMapping(value = \"/storagePlatforms\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_STORAGE_PLATFORMS_ALL_GET) public StoragePlatforms getStoragePlatforms()", "class_method_signature": "StoragePlatformRestController.getStoragePlatforms()", "testcase": false, "constructor": false, "invocations": ["getStoragePlatforms"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}