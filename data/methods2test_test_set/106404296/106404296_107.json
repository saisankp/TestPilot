{"test_class": {"identifier": "WebConfigurerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private WebConfigurer webConfigurer;", "modifier": "private", "type": "WebConfigurer", "declarator": "webConfigurer", "var_name": "webConfigurer"}, {"original_string": "private MockServletContext servletContext;", "modifier": "private", "type": "MockServletContext", "declarator": "servletContext", "var_name": "servletContext"}, {"original_string": "private MockEnvironment env;", "modifier": "private", "type": "MockEnvironment", "declarator": "env", "var_name": "env"}, {"original_string": "private JHipsterProperties props;", "modifier": "private", "type": "JHipsterProperties", "declarator": "props", "var_name": "props"}, {"original_string": "private MetricRegistry metricRegistry;", "modifier": "private", "type": "MetricRegistry", "declarator": "metricRegistry", "var_name": "metricRegistry"}], "file": "gamecraft-gateway/src/test/java/com/gamecraft/config/WebConfigurerTest.java"}, "test_case": {"identifier": "testStartUpDevServletContext", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStartUpDevServletContext() throws ServletException {\n        env.setActiveProfiles(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT);\n        webConfigurer.onStartup(servletContext);\n\n        assertThat(servletContext.getAttribute(InstrumentedFilter.REGISTRY_ATTRIBUTE)).isEqualTo(metricRegistry);\n        assertThat(servletContext.getAttribute(MetricsServlet.METRICS_REGISTRY)).isEqualTo(metricRegistry);\n        verify(servletContext).addFilter(eq(\"hazelcastWebFilter\"), any(SpringAwareWebFilter.class));\n        verify(servletContext).addFilter(eq(\"webappMetricsFilter\"), any(InstrumentedFilter.class));\n        verify(servletContext).addServlet(eq(\"metricsServlet\"), any(MetricsServlet.class));\n        verify(servletContext, never()).addFilter(eq(\"cachingHttpHeadersFilter\"), any(CachingHttpHeadersFilter.class));\n        verify(servletContext).addServlet(eq(\"H2Console\"), any(WebServlet.class));\n    }", "signature": "void testStartUpDevServletContext()", "full_signature": "@Test public void testStartUpDevServletContext()", "class_method_signature": "WebConfigurerTest.testStartUpDevServletContext()", "testcase": true, "constructor": false, "invocations": ["setActiveProfiles", "onStartup", "isEqualTo", "assertThat", "getAttribute", "isEqualTo", "assertThat", "getAttribute", "addFilter", "verify", "eq", "any", "addFilter", "verify", "eq", "any", "addServlet", "verify", "eq", "any", "addFilter", "verify", "never", "eq", "any", "addServlet", "verify", "eq", "any"]}, "focal_class": {"identifier": "WebConfigurer", "superclass": "", "interfaces": "implements ServletContextInitializer, EmbeddedServletContainerCustomizer", "fields": [{"original_string": "private final Logger log = LoggerFactory.getLogger(WebConfigurer.class);", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(WebConfigurer.class)", "var_name": "log"}, {"original_string": "private final Environment env;", "modifier": "private final", "type": "Environment", "declarator": "env", "var_name": "env"}, {"original_string": "private final JHipsterProperties jHipsterProperties;", "modifier": "private final", "type": "JHipsterProperties", "declarator": "jHipsterProperties", "var_name": "jHipsterProperties"}, {"original_string": "private final HazelcastInstance hazelcastInstance;", "modifier": "private final", "type": "HazelcastInstance", "declarator": "hazelcastInstance", "var_name": "hazelcastInstance"}, {"original_string": "private MetricRegistry metricRegistry;", "modifier": "private", "type": "MetricRegistry", "declarator": "metricRegistry", "var_name": "metricRegistry"}], "methods": [{"identifier": "WebConfigurer", "parameters": "(Environment env, JHipsterProperties jHipsterProperties, HazelcastInstance hazelcastInstance)", "modifiers": "public", "return": "", "signature": " WebConfigurer(Environment env, JHipsterProperties jHipsterProperties, HazelcastInstance hazelcastInstance)", "full_signature": "public  WebConfigurer(Environment env, JHipsterProperties jHipsterProperties, HazelcastInstance hazelcastInstance)", "class_method_signature": "WebConfigurer.WebConfigurer(Environment env, JHipsterProperties jHipsterProperties, HazelcastInstance hazelcastInstance)", "testcase": false, "constructor": true}, {"identifier": "onStartup", "parameters": "(ServletContext servletContext)", "modifiers": "@Override public", "return": "void", "signature": "void onStartup(ServletContext servletContext)", "full_signature": "@Override public void onStartup(ServletContext servletContext)", "class_method_signature": "WebConfigurer.onStartup(ServletContext servletContext)", "testcase": false, "constructor": false}, {"identifier": "initClusteredHttpSessionFilter", "parameters": "(ServletContext servletContext, EnumSet<DispatcherType> disps)", "modifiers": "private", "return": "void", "signature": "void initClusteredHttpSessionFilter(ServletContext servletContext, EnumSet<DispatcherType> disps)", "full_signature": "private void initClusteredHttpSessionFilter(ServletContext servletContext, EnumSet<DispatcherType> disps)", "class_method_signature": "WebConfigurer.initClusteredHttpSessionFilter(ServletContext servletContext, EnumSet<DispatcherType> disps)", "testcase": false, "constructor": false}, {"identifier": "customize", "parameters": "(ConfigurableEmbeddedServletContainer container)", "modifiers": "@Override public", "return": "void", "signature": "void customize(ConfigurableEmbeddedServletContainer container)", "full_signature": "@Override public void customize(ConfigurableEmbeddedServletContainer container)", "class_method_signature": "WebConfigurer.customize(ConfigurableEmbeddedServletContainer container)", "testcase": false, "constructor": false}, {"identifier": "setLocationForStaticAssets", "parameters": "(ConfigurableEmbeddedServletContainer container)", "modifiers": "private", "return": "void", "signature": "void setLocationForStaticAssets(ConfigurableEmbeddedServletContainer container)", "full_signature": "private void setLocationForStaticAssets(ConfigurableEmbeddedServletContainer container)", "class_method_signature": "WebConfigurer.setLocationForStaticAssets(ConfigurableEmbeddedServletContainer container)", "testcase": false, "constructor": false}, {"identifier": "resolvePathPrefix", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String resolvePathPrefix()", "full_signature": "private String resolvePathPrefix()", "class_method_signature": "WebConfigurer.resolvePathPrefix()", "testcase": false, "constructor": false}, {"identifier": "initCachingHttpHeadersFilter", "parameters": "(ServletContext servletContext,\n                                              EnumSet<DispatcherType> disps)", "modifiers": "private", "return": "void", "signature": "void initCachingHttpHeadersFilter(ServletContext servletContext,\n                                              EnumSet<DispatcherType> disps)", "full_signature": "private void initCachingHttpHeadersFilter(ServletContext servletContext,\n                                              EnumSet<DispatcherType> disps)", "class_method_signature": "WebConfigurer.initCachingHttpHeadersFilter(ServletContext servletContext,\n                                              EnumSet<DispatcherType> disps)", "testcase": false, "constructor": false}, {"identifier": "initMetrics", "parameters": "(ServletContext servletContext, EnumSet<DispatcherType> disps)", "modifiers": "private", "return": "void", "signature": "void initMetrics(ServletContext servletContext, EnumSet<DispatcherType> disps)", "full_signature": "private void initMetrics(ServletContext servletContext, EnumSet<DispatcherType> disps)", "class_method_signature": "WebConfigurer.initMetrics(ServletContext servletContext, EnumSet<DispatcherType> disps)", "testcase": false, "constructor": false}, {"identifier": "corsFilter", "parameters": "()", "modifiers": "@Bean public", "return": "CorsFilter", "signature": "CorsFilter corsFilter()", "full_signature": "@Bean public CorsFilter corsFilter()", "class_method_signature": "WebConfigurer.corsFilter()", "testcase": false, "constructor": false}, {"identifier": "initH2Console", "parameters": "(ServletContext servletContext)", "modifiers": "private", "return": "void", "signature": "void initH2Console(ServletContext servletContext)", "full_signature": "private void initH2Console(ServletContext servletContext)", "class_method_signature": "WebConfigurer.initH2Console(ServletContext servletContext)", "testcase": false, "constructor": false}, {"identifier": "setMetricRegistry", "parameters": "(MetricRegistry metricRegistry)", "modifiers": "@Autowired(required = false) public", "return": "void", "signature": "void setMetricRegistry(MetricRegistry metricRegistry)", "full_signature": "@Autowired(required = false) public void setMetricRegistry(MetricRegistry metricRegistry)", "class_method_signature": "WebConfigurer.setMetricRegistry(MetricRegistry metricRegistry)", "testcase": false, "constructor": false}], "file": "gamecraft-gateway/src/main/java/com/gamecraft/config/WebConfigurer.java"}, "focal_method": {"identifier": "onStartup", "parameters": "(ServletContext servletContext)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onStartup(ServletContext servletContext) throws ServletException {\n        if (env.getActiveProfiles().length != 0) {\n            log.info(\"Web application configuration, using profiles: {}\", (Object[]) env.getActiveProfiles());\n        }\n        EnumSet<DispatcherType> disps = EnumSet.of(DispatcherType.REQUEST, DispatcherType.FORWARD, DispatcherType.ASYNC);\n        initClusteredHttpSessionFilter(servletContext, disps);\n        initMetrics(servletContext, disps);\n        if (env.acceptsProfiles(JHipsterConstants.SPRING_PROFILE_PRODUCTION)) {\n            initCachingHttpHeadersFilter(servletContext, disps);\n        }\n        if (env.acceptsProfiles(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {\n            initH2Console(servletContext);\n        }\n        log.info(\"Web application fully configured\");\n    }", "signature": "void onStartup(ServletContext servletContext)", "full_signature": "@Override public void onStartup(ServletContext servletContext)", "class_method_signature": "WebConfigurer.onStartup(ServletContext servletContext)", "testcase": false, "constructor": false, "invocations": ["getActiveProfiles", "info", "getActiveProfiles", "of", "initClusteredHttpSessionFilter", "initMetrics", "acceptsProfiles", "initCachingHttpHeadersFilter", "acceptsProfiles", "initH2Console", "info"]}, "repository": {"repo_id": 106404296, "url": "https://github.com/iMartinezMateu/gamecraft", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 6, "size": 2528, "license": "licensed"}}