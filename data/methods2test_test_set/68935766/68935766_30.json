{"test_class": {"identifier": "ConcurrentProxiedClassMapTest", "superclass": "", "interfaces": "", "fields": [], "file": "commons/src/test/java/com/karuslabs/commons/util/collection/ConcurrentClassMapTest.java"}, "test_case": {"identifier": "map", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void map() {\n        var proxied = new ConcurrentHashMap<Class<? extends Object>, Object>(0);\n        var map = ConcurrentClassMap.of(proxied);\n        assertSame(proxied, map.map());\n    }", "signature": "void map()", "full_signature": "@Test void map()", "class_method_signature": "ConcurrentProxiedClassMapTest.map()", "testcase": true, "constructor": false, "invocations": ["of", "assertSame", "map"]}, "focal_class": {"identifier": "ConcurrentHashClassMap", "superclass": "extends ConcurrentHashMap<Class<? extends T>, T>", "interfaces": "implements ConcurrentClassMap<T>", "fields": [], "methods": [{"identifier": "ConcurrentHashClassMap", "parameters": "()", "modifiers": "", "return": "", "signature": " ConcurrentHashClassMap()", "full_signature": "  ConcurrentHashClassMap()", "class_method_signature": "ConcurrentHashClassMap.ConcurrentHashClassMap()", "testcase": false, "constructor": true}, {"identifier": "ConcurrentHashClassMap", "parameters": "(int capacity)", "modifiers": "", "return": "", "signature": " ConcurrentHashClassMap(int capacity)", "full_signature": "  ConcurrentHashClassMap(int capacity)", "class_method_signature": "ConcurrentHashClassMap.ConcurrentHashClassMap(int capacity)", "testcase": false, "constructor": true}, {"identifier": "map", "parameters": "()", "modifiers": "@Override public", "return": "ConcurrentMap<Class<? extends T>, T>", "signature": "ConcurrentMap<Class<? extends T>, T> map()", "full_signature": "@Override public ConcurrentMap<Class<? extends T>, T> map()", "class_method_signature": "ConcurrentHashClassMap.map()", "testcase": false, "constructor": false}], "file": "commons/src/main/java/com/karuslabs/commons/util/collection/ConcurrentClassMap.java"}, "focal_method": {"identifier": "map", "parameters": "()", "modifiers": "@Override public", "return": "ConcurrentMap<Class<? extends T>, T>", "body": "@Override\n    public ConcurrentMap<Class<? extends T>, T> map() {\n        return this;\n    }", "signature": "ConcurrentMap<Class<? extends T>, T> map()", "full_signature": "@Override public ConcurrentMap<Class<? extends T>, T> map()", "class_method_signature": "ConcurrentHashClassMap.map()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 68935766, "url": "https://github.com/Pante/Chimera", "stars": 13, "created": "9/22/2016 3:36:39 PM +00:00", "updates": "2020-01-27T21:22:29+00:00", "fork": "False", "license": "licensed"}}