{"test_class": {"identifier": "URLTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(URLTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(URLTest.class)", "var_name": "logger"}], "file": "ch-commons-util/src/test/java/com/cloudhopper/commons/util/URLTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() throws Exception {\n        URL url0 = URLParser.parse(\"http://www.google.com/\");\n        URL url1 = URLParser.parse(\"http://www.google.com/\");\n\n        Assert.assertEquals(url0, url1);\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "URLTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["parse", "parse", "assertEquals"]}, "focal_class": {"identifier": "URL", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String protocol;", "modifier": "private", "type": "String", "declarator": "protocol", "var_name": "protocol"}, {"original_string": "private String username;", "modifier": "private", "type": "String", "declarator": "username", "var_name": "username"}, {"original_string": "private String password;", "modifier": "private", "type": "String", "declarator": "password", "var_name": "password"}, {"original_string": "private String host;", "modifier": "private", "type": "String", "declarator": "host", "var_name": "host"}, {"original_string": "private Integer port;", "modifier": "private", "type": "Integer", "declarator": "port", "var_name": "port"}, {"original_string": "private String path;", "modifier": "private", "type": "String", "declarator": "path", "var_name": "path"}, {"original_string": "private String query;", "modifier": "private", "type": "String", "declarator": "query", "var_name": "query"}, {"original_string": "private Properties queryProperties;", "modifier": "private", "type": "Properties", "declarator": "queryProperties", "var_name": "queryProperties"}], "methods": [{"identifier": "URL", "parameters": "()", "modifiers": "public", "return": "", "signature": " URL()", "full_signature": "public  URL()", "class_method_signature": "URL.URL()", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "URL.toString()", "testcase": false, "constructor": false}, {"identifier": "setProtocol", "parameters": "(String protocol)", "modifiers": "public", "return": "void", "signature": "void setProtocol(String protocol)", "full_signature": "public void setProtocol(String protocol)", "class_method_signature": "URL.setProtocol(String protocol)", "testcase": false, "constructor": false}, {"identifier": "getProtocol", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getProtocol()", "full_signature": "public String getProtocol()", "class_method_signature": "URL.getProtocol()", "testcase": false, "constructor": false}, {"identifier": "setUsername", "parameters": "(String username)", "modifiers": "public", "return": "void", "signature": "void setUsername(String username)", "full_signature": "public void setUsername(String username)", "class_method_signature": "URL.setUsername(String username)", "testcase": false, "constructor": false}, {"identifier": "getUsername", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUsername()", "full_signature": "public String getUsername()", "class_method_signature": "URL.getUsername()", "testcase": false, "constructor": false}, {"identifier": "setPassword", "parameters": "(String password)", "modifiers": "public", "return": "void", "signature": "void setPassword(String password)", "full_signature": "public void setPassword(String password)", "class_method_signature": "URL.setPassword(String password)", "testcase": false, "constructor": false}, {"identifier": "getPassword", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPassword()", "full_signature": "public String getPassword()", "class_method_signature": "URL.getPassword()", "testcase": false, "constructor": false}, {"identifier": "setHost", "parameters": "(String host)", "modifiers": "public", "return": "void", "signature": "void setHost(String host)", "full_signature": "public void setHost(String host)", "class_method_signature": "URL.setHost(String host)", "testcase": false, "constructor": false}, {"identifier": "getHost", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getHost()", "full_signature": "public String getHost()", "class_method_signature": "URL.getHost()", "testcase": false, "constructor": false}, {"identifier": "setPort", "parameters": "(Integer port)", "modifiers": "public", "return": "void", "signature": "void setPort(Integer port)", "full_signature": "public void setPort(Integer port)", "class_method_signature": "URL.setPort(Integer port)", "testcase": false, "constructor": false}, {"identifier": "getPort", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getPort()", "full_signature": "public Integer getPort()", "class_method_signature": "URL.getPort()", "testcase": false, "constructor": false}, {"identifier": "setPath", "parameters": "(String path)", "modifiers": "public", "return": "void", "signature": "void setPath(String path)", "full_signature": "public void setPath(String path)", "class_method_signature": "URL.setPath(String path)", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPath()", "full_signature": "public String getPath()", "class_method_signature": "URL.getPath()", "testcase": false, "constructor": false}, {"identifier": "getQuery", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getQuery()", "full_signature": "public String getQuery()", "class_method_signature": "URL.getQuery()", "testcase": false, "constructor": false}, {"identifier": "setQuery", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void setQuery(String value)", "full_signature": "public void setQuery(String value)", "class_method_signature": "URL.setQuery(String value)", "testcase": false, "constructor": false}, {"identifier": "getQueryProperty", "parameters": "(String name)", "modifiers": "public", "return": "String", "signature": "String getQueryProperty(String name)", "full_signature": "public String getQueryProperty(String name)", "class_method_signature": "URL.getQueryProperty(String name)", "testcase": false, "constructor": false}, {"identifier": "getQueryProperties", "parameters": "()", "modifiers": "public", "return": "Properties", "signature": "Properties getQueryProperties()", "full_signature": "public Properties getQueryProperties()", "class_method_signature": "URL.getQueryProperties()", "testcase": false, "constructor": false}, {"identifier": "parseQueryProperties", "parameters": "(String q, Properties props)", "modifiers": "public static", "return": "void", "signature": "void parseQueryProperties(String q, Properties props)", "full_signature": "public static void parseQueryProperties(String q, Properties props)", "class_method_signature": "URL.parseQueryProperties(String q, Properties props)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object object)", "full_signature": "@Override public boolean equals(Object object)", "class_method_signature": "URL.equals(Object object)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "URL.hashCode()", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(String str0)", "modifiers": "static private", "return": "String", "signature": "String encode(String str0)", "full_signature": "static private String encode(String str0)", "class_method_signature": "URL.encode(String str0)", "testcase": false, "constructor": false}], "file": "ch-commons-util/src/main/java/com/cloudhopper/commons/util/URL.java"}, "focal_method": {"identifier": "equals", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(Object object) {\n        if (object == null) {\n            return false;\n        }\n        if (object instanceof URL) {\n            URL otherURL = (URL)object;\n            String otherURLString = otherURL.toString();\n            return this.toString().equals(otherURLString);\n        } else if (object instanceof String) {\n            String otherURLString = (String)object;\n            return this.toString().equals(otherURLString);\n        } else {\n            return false;\n        }\n    }", "signature": "boolean equals(Object object)", "full_signature": "@Override public boolean equals(Object object)", "class_method_signature": "URL.equals(Object object)", "testcase": false, "constructor": false, "invocations": ["toString", "equals", "toString", "equals", "toString"]}, "repository": {"repo_id": 14960307, "url": "https://github.com/twitter/cloudhopper-commons", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 36, "size": 6452, "license": "licensed"}}