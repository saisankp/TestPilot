{"test_class": {"identifier": "DefaultScreenInfoProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    Context mMockContext;", "modifier": "@Mock", "type": "Context", "declarator": "mMockContext", "var_name": "mMockContext"}, {"original_string": "@Mock\n    Resources mMockedResources;", "modifier": "@Mock", "type": "Resources", "declarator": "mMockedResources", "var_name": "mMockedResources"}, {"original_string": "IScreenInfoProvider mScreenInfoProvider;", "modifier": "", "type": "IScreenInfoProvider", "declarator": "mScreenInfoProvider", "var_name": "mScreenInfoProvider"}, {"original_string": "DisplayMetrics mDisplayMetrics;", "modifier": "", "type": "DisplayMetrics", "declarator": "mDisplayMetrics", "var_name": "mDisplayMetrics"}], "file": "coachmarks/src/test/java/com/myntra/coachmarks/providers/DefaultScreenInfoProviderTest.java"}, "test_case": {"identifier": "getScreenWidthInPixelsTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getScreenWidthInPixelsTest() throws Exception {\n        when(mMockContext.getResources()).thenReturn(mMockedResources);\n        when(mMockedResources.getDisplayMetrics()).thenReturn(mDisplayMetrics);\n        assert (mScreenInfoProvider.getScreenWidthInPixels() == mDisplayMetrics.widthPixels);\n        verify(mMockContext, times(1)).getResources();\n        verify(mMockedResources, times(1)).getDisplayMetrics();\n        verifyNoMoreInteractions(mMockContext);\n        verifyNoMoreInteractions(mMockedResources);\n    }", "signature": "void getScreenWidthInPixelsTest()", "full_signature": "@Test public void getScreenWidthInPixelsTest()", "class_method_signature": "DefaultScreenInfoProviderTest.getScreenWidthInPixelsTest()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getResources", "thenReturn", "when", "getDisplayMetrics", "getScreenWidthInPixels", "getResources", "verify", "times", "getDisplayMetrics", "verify", "times", "verifyNoMoreInteractions", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "DefaultScreenInfoProvider", "superclass": "", "interfaces": "implements IScreenInfoProvider", "fields": [{"original_string": "private final Context mContext;", "modifier": "private final", "type": "Context", "declarator": "mContext", "var_name": "mContext"}], "methods": [{"identifier": "DefaultScreenInfoProvider", "parameters": "(final Context context)", "modifiers": "public", "return": "", "signature": " DefaultScreenInfoProvider(final Context context)", "full_signature": "public  DefaultScreenInfoProvider(final Context context)", "class_method_signature": "DefaultScreenInfoProvider.DefaultScreenInfoProvider(final Context context)", "testcase": false, "constructor": true}, {"identifier": "getScreenHeightInPixels", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getScreenHeightInPixels()", "full_signature": "@Override public int getScreenHeightInPixels()", "class_method_signature": "DefaultScreenInfoProvider.getScreenHeightInPixels()", "testcase": false, "constructor": false}, {"identifier": "getScreenWidthInPixels", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getScreenWidthInPixels()", "full_signature": "@Override public int getScreenWidthInPixels()", "class_method_signature": "DefaultScreenInfoProvider.getScreenWidthInPixels()", "testcase": false, "constructor": false}], "file": "coachmarks/src/main/java/com/myntra/coachmarks/providers/DefaultScreenInfoProvider.java"}, "focal_method": {"identifier": "getScreenWidthInPixels", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int getScreenWidthInPixels() {\n        DisplayMetrics displayMetrics = mContext.getResources().getDisplayMetrics();\n        return displayMetrics.widthPixels;\n    }", "signature": "int getScreenWidthInPixels()", "full_signature": "@Override public int getScreenWidthInPixels()", "class_method_signature": "DefaultScreenInfoProvider.getScreenWidthInPixels()", "testcase": false, "constructor": false, "invocations": ["getDisplayMetrics", "getResources"]}, "repository": {"repo_id": 84286382, "url": "https://github.com/myntra/CoachMarks", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 28, "size": 18753, "license": "licensed"}}