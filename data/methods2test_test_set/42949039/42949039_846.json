{"test_class": {"identifier": "EmrHelperTest", "superclass": "extends AbstractDaoTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n    EmrHelper emrHelper;", "modifier": "@Autowired", "type": "EmrHelper", "declarator": "emrHelper", "var_name": "emrHelper"}], "file": "herd-code/herd-dao/src/test/java/org/finra/herd/dao/helper/EmrHelperTest.java"}, "test_case": {"identifier": "testBuildEmrClusterInstanceFleetFromAwsResult", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuildEmrClusterInstanceFleetFromAwsResult()\n    {\n        ListInstanceFleetsResult listInstanceFleetsResult = null;\n        assertNull(emrHelper.buildEmrClusterInstanceFleetFromAwsResult(listInstanceFleetsResult));\n\n        listInstanceFleetsResult = new ListInstanceFleetsResult();\n        assertNull(emrHelper.buildEmrClusterInstanceFleetFromAwsResult(listInstanceFleetsResult));\n\n        String instanceId = \"instance id\";\n        String instanceName = \"instance name\";\n        String instanceFleetType = \"instance fleet type\";\n        int targetOnDemandCapacity = 1;\n        int targetSpotCapacity = 2;\n        int provisionedOnDemandCapacity = 3;\n        int provisionedSpotCapacity = 4;\n\n        EmrClusterInstanceFleet expectedEmrInstanceFleet = new EmrClusterInstanceFleet();\n        expectedEmrInstanceFleet.setId(instanceId);\n        expectedEmrInstanceFleet.setName(instanceName);\n        expectedEmrInstanceFleet.setInstanceFleetType(instanceFleetType);\n        expectedEmrInstanceFleet.setTargetOnDemandCapacity(targetOnDemandCapacity);\n        expectedEmrInstanceFleet.setTargetSpotCapacity(targetSpotCapacity);\n        expectedEmrInstanceFleet.setProvisionedOnDemandCapacity(provisionedOnDemandCapacity);\n        expectedEmrInstanceFleet.setProvisionedSpotCapacity(provisionedSpotCapacity);\n\n        InstanceFleet instanceFleet = new InstanceFleet();\n        instanceFleet.setId(instanceId);\n        instanceFleet.setName(instanceName);\n        instanceFleet.setInstanceFleetType(instanceFleetType);\n        instanceFleet.setTargetOnDemandCapacity(targetOnDemandCapacity);\n        instanceFleet.setTargetSpotCapacity(targetSpotCapacity);\n        instanceFleet.setProvisionedSpotCapacity(provisionedSpotCapacity);\n        instanceFleet.setProvisionedOnDemandCapacity(provisionedOnDemandCapacity);\n\n        List<InstanceFleet> instanceFleets = new ArrayList<>();\n        instanceFleets.add(null);\n        instanceFleets.add(instanceFleet);\n        listInstanceFleetsResult.setInstanceFleets(instanceFleets);\n\n        assertEquals(Lists.newArrayList(expectedEmrInstanceFleet), emrHelper.buildEmrClusterInstanceFleetFromAwsResult(listInstanceFleetsResult));\n\n        EmrClusterInstanceFleetStatus emrClusterInstanceFleetStatus = new EmrClusterInstanceFleetStatus();\n        String emrClusterInstanceFleetStatus_State = \"state 1\";\n        emrClusterInstanceFleetStatus.setState(emrClusterInstanceFleetStatus_State);\n        expectedEmrInstanceFleet.setInstanceFleetStatus(emrClusterInstanceFleetStatus);\n\n        InstanceFleetStatus instanceFleetStatus = new InstanceFleetStatus();\n        instanceFleetStatus.setState(emrClusterInstanceFleetStatus_State);\n        instanceFleet.setStatus(instanceFleetStatus);\n\n        assertEquals(Lists.newArrayList(expectedEmrInstanceFleet), emrHelper.buildEmrClusterInstanceFleetFromAwsResult(listInstanceFleetsResult));\n\n        String emrClusterInstanceFleetStatus_StateChangeCode = \"change code 1\";\n        String emrClusterInstanceFleetStatus_StateChangeMsg = \"change msg 1\";\n        InstanceFleetStateChangeReason instanceFleetStateChangeReason = new InstanceFleetStateChangeReason();\n        instanceFleetStateChangeReason.setCode(emrClusterInstanceFleetStatus_StateChangeCode);\n        instanceFleetStateChangeReason.setMessage(emrClusterInstanceFleetStatus_StateChangeMsg);\n        instanceFleetStatus.setStateChangeReason(instanceFleetStateChangeReason);\n        InstanceFleetTimeline instanceFleetTimeline = new InstanceFleetTimeline();\n        java.util.Date now = Calendar.getInstance().getTime();\n        instanceFleetTimeline.setCreationDateTime(now);\n        instanceFleetTimeline.setReadyDateTime(now);\n        instanceFleetTimeline.setEndDateTime(now);\n        instanceFleetStatus.setTimeline(instanceFleetTimeline);\n\n        EmrClusterInstanceFleetStateChangeReason emrClusterInstanceFleetStateChangeReason = new EmrClusterInstanceFleetStateChangeReason();\n        emrClusterInstanceFleetStateChangeReason.setCode(emrClusterInstanceFleetStatus_StateChangeCode);\n        emrClusterInstanceFleetStateChangeReason.setMessage(emrClusterInstanceFleetStatus_StateChangeMsg);\n        emrClusterInstanceFleetStatus.setStateChangeReason(emrClusterInstanceFleetStateChangeReason);\n        EmrClusterInstanceFleetTimeline emrClusterInstanceFleetTimeline = new EmrClusterInstanceFleetTimeline();\n        emrClusterInstanceFleetTimeline.setCreationDateTime(HerdDateUtils.getXMLGregorianCalendarValue(now));\n        emrClusterInstanceFleetTimeline.setReadyDateTime(HerdDateUtils.getXMLGregorianCalendarValue(now));\n        emrClusterInstanceFleetTimeline.setEndDateTime(HerdDateUtils.getXMLGregorianCalendarValue(now));\n        emrClusterInstanceFleetStatus.setTimeline(emrClusterInstanceFleetTimeline);\n\n        assertEquals(Lists.newArrayList(expectedEmrInstanceFleet), emrHelper.buildEmrClusterInstanceFleetFromAwsResult(listInstanceFleetsResult));\n\n        String instanceType = \"instance type 1\";\n        int weightedCapacity = 1;\n        String bidPrice = \"1.0\";\n        double bidPricePercent = 0.8;\n        boolean ebsOptimized = true;\n        InstanceTypeSpecification instanceTypeSpecification = new InstanceTypeSpecification();\n        instanceTypeSpecification.setInstanceType(instanceType);\n        instanceTypeSpecification.setWeightedCapacity(weightedCapacity);\n        instanceTypeSpecification.setBidPrice(bidPrice);\n        instanceTypeSpecification.setBidPriceAsPercentageOfOnDemandPrice(bidPricePercent);\n        instanceTypeSpecification.setEbsOptimized(ebsOptimized);\n\n        List<InstanceTypeSpecification> instanceTypeSpecifications = new ArrayList<>();\n        instanceTypeSpecifications.add(null);\n        instanceTypeSpecifications.add(instanceTypeSpecification);\n        instanceFleet.setInstanceTypeSpecifications(instanceTypeSpecifications);\n\n        EmrClusterInstanceTypeSpecification emrClusterInstanceTypeSpecification = new EmrClusterInstanceTypeSpecification();\n        emrClusterInstanceTypeSpecification.setInstanceType(instanceType);\n        emrClusterInstanceTypeSpecification.setWeightedCapacity(weightedCapacity);\n        emrClusterInstanceTypeSpecification.setBidPrice(bidPrice);\n        emrClusterInstanceTypeSpecification.setBidPriceAsPercentageOfOnDemandPrice(bidPricePercent);\n        emrClusterInstanceTypeSpecification.setEbsOptimized(ebsOptimized);\n        expectedEmrInstanceFleet.setInstanceTypeSpecifications(Lists.newArrayList(emrClusterInstanceTypeSpecification));\n\n        assertEquals(Lists.newArrayList(expectedEmrInstanceFleet), emrHelper.buildEmrClusterInstanceFleetFromAwsResult(listInstanceFleetsResult));\n\n        EbsBlockDevice ebsBlockDevice = new EbsBlockDevice();\n        String device = \"device 1\";\n        ebsBlockDevice.setDevice(device);\n        List<EbsBlockDevice> ebsBlockDevices = new ArrayList<>();\n        ebsBlockDevices.add(ebsBlockDevice);\n        ebsBlockDevices.add(null);\n        instanceTypeSpecification.setEbsBlockDevices(ebsBlockDevices);\n        EmrClusterEbsBlockDevice emrClusterEbsBlockDevice = new EmrClusterEbsBlockDevice();\n        emrClusterEbsBlockDevice.setDevice(device);\n        emrClusterInstanceTypeSpecification.setEbsBlockDevices(Lists.newArrayList(emrClusterEbsBlockDevice));\n        assertEquals(Lists.newArrayList(expectedEmrInstanceFleet), emrHelper.buildEmrClusterInstanceFleetFromAwsResult(listInstanceFleetsResult));\n\n        int iops = 100;\n        int sizeInGB = 20;\n        String volumeType = \"volume type 1\";\n        VolumeSpecification volumeSpecification = new VolumeSpecification();\n        volumeSpecification.setIops(iops);\n        volumeSpecification.setSizeInGB(sizeInGB);\n        volumeSpecification.setVolumeType(volumeType);\n        ebsBlockDevice.setVolumeSpecification(volumeSpecification);\n        EmrClusterVolumeSpecification emrClusterVolumeSpecification = new EmrClusterVolumeSpecification();\n        emrClusterVolumeSpecification.setIops(iops);\n        emrClusterVolumeSpecification.setSizeInGB(sizeInGB);\n        emrClusterVolumeSpecification.setVolumeType(volumeType);\n        emrClusterEbsBlockDevice.setVolumeSpecification(emrClusterVolumeSpecification);\n        assertEquals(Lists.newArrayList(expectedEmrInstanceFleet), emrHelper.buildEmrClusterInstanceFleetFromAwsResult(listInstanceFleetsResult));\n\n        InstanceFleetProvisioningSpecifications instanceFleetProvisioningSpecifications = new InstanceFleetProvisioningSpecifications();\n        instanceFleet.setLaunchSpecifications(instanceFleetProvisioningSpecifications);\n        EmrClusterInstanceFleetProvisioningSpecifications emrClusterInstanceFleetProvisioningSpecifications =\n            new EmrClusterInstanceFleetProvisioningSpecifications();\n        expectedEmrInstanceFleet.setLaunchSpecifications(emrClusterInstanceFleetProvisioningSpecifications);\n\n        assertEquals(Lists.newArrayList(expectedEmrInstanceFleet), emrHelper.buildEmrClusterInstanceFleetFromAwsResult(listInstanceFleetsResult));\n\n        List<Configuration> configurations = new ArrayList<>();\n        Configuration configuration = new Configuration();\n        String classification = \"classification 1\";\n        configuration.setClassification(classification);\n        configurations.add(null);\n        configurations.add(configuration);\n        instanceTypeSpecification.setConfigurations(configurations);\n        EmrClusterInstanceTypeConfiguration emrClusterInstanceTypeConfiguration = new EmrClusterInstanceTypeConfiguration();\n        emrClusterInstanceTypeConfiguration.setClassification(classification);\n        emrClusterInstanceTypeSpecification.setConfigurations(Lists.newArrayList(emrClusterInstanceTypeConfiguration));\n\n        assertEquals(Lists.newArrayList(expectedEmrInstanceFleet), emrHelper.buildEmrClusterInstanceFleetFromAwsResult(listInstanceFleetsResult));\n\n        String paramKey = \"param 1\";\n        String paramVal = \"param val 1\";\n        java.util.Map<String, String> map = new HashMap<>();\n        map.put(paramKey, paramVal);\n        configuration.setProperties(map);\n        Parameter parameter = new Parameter(paramKey, paramVal);\n        emrClusterInstanceTypeConfiguration.setProperties(Lists.newArrayList(parameter));\n\n        assertEquals(Lists.newArrayList(expectedEmrInstanceFleet), emrHelper.buildEmrClusterInstanceFleetFromAwsResult(listInstanceFleetsResult));\n\n        int blockDurationMin = 30;\n        String timeoutAction = \"action 1\";\n        int timeoutDurationMin = 60;\n\n        //to do time out action\n        SpotProvisioningSpecification spotProvisioningSpecification = new SpotProvisioningSpecification();\n        spotProvisioningSpecification.setBlockDurationMinutes(blockDurationMin);\n        spotProvisioningSpecification.setTimeoutAction(timeoutAction);\n        spotProvisioningSpecification.setTimeoutDurationMinutes(timeoutDurationMin);\n        instanceFleetProvisioningSpecifications.setSpotSpecification(spotProvisioningSpecification);\n\n        EmrClusterSpotProvisioningSpecification emrClusterSpotProvisioningSpecification = new EmrClusterSpotProvisioningSpecification();\n        emrClusterSpotProvisioningSpecification.setBlockDurationMinutes(blockDurationMin);\n        emrClusterSpotProvisioningSpecification.setTimeoutAction(timeoutAction);\n        emrClusterSpotProvisioningSpecification.setTimeoutDurationMinutes(timeoutDurationMin);\n        emrClusterInstanceFleetProvisioningSpecifications.setSpotSpecification(emrClusterSpotProvisioningSpecification);\n\n        assertEquals(Lists.newArrayList(expectedEmrInstanceFleet), emrHelper.buildEmrClusterInstanceFleetFromAwsResult(listInstanceFleetsResult));\n\n    }", "signature": "void testBuildEmrClusterInstanceFleetFromAwsResult()", "full_signature": "@Test public void testBuildEmrClusterInstanceFleetFromAwsResult()", "class_method_signature": "EmrHelperTest.testBuildEmrClusterInstanceFleetFromAwsResult()", "testcase": true, "constructor": false, "invocations": ["assertNull", "buildEmrClusterInstanceFleetFromAwsResult", "assertNull", "buildEmrClusterInstanceFleetFromAwsResult", "setId", "setName", "setInstanceFleetType", "setTargetOnDemandCapacity", "setTargetSpotCapacity", "setProvisionedOnDemandCapacity", "setProvisionedSpotCapacity", "setId", "setName", "setInstanceFleetType", "setTargetOnDemandCapacity", "setTargetSpotCapacity", "setProvisionedSpotCapacity", "setProvisionedOnDemandCapacity", "add", "add", "setInstanceFleets", "assertEquals", "newArrayList", "buildEmrClusterInstanceFleetFromAwsResult", "setState", "setInstanceFleetStatus", "setState", "setStatus", "assertEquals", "newArrayList", "buildEmrClusterInstanceFleetFromAwsResult", "setCode", "setMessage", "setStateChangeReason", "getTime", "getInstance", "setCreationDateTime", "setReadyDateTime", "setEndDateTime", "setTimeline", "setCode", "setMessage", "setStateChangeReason", "setCreationDateTime", "getXMLGregorianCalendarValue", "setReadyDateTime", "getXMLGregorianCalendarValue", "setEndDateTime", "getXMLGregorianCalendarValue", "setTimeline", "assertEquals", "newArrayList", "buildEmrClusterInstanceFleetFromAwsResult", "setInstanceType", "setWeightedCapacity", "setBidPrice", "setBidPriceAsPercentageOfOnDemandPrice", "setEbsOptimized", "add", "add", "setInstanceTypeSpecifications", "setInstanceType", "setWeightedCapacity", "setBidPrice", "setBidPriceAsPercentageOfOnDemandPrice", "setEbsOptimized", "setInstanceTypeSpecifications", "newArrayList", "assertEquals", "newArrayList", "buildEmrClusterInstanceFleetFromAwsResult", "setDevice", "add", "add", "setEbsBlockDevices", "setDevice", "setEbsBlockDevices", "newArrayList", "assertEquals", "newArrayList", "buildEmrClusterInstanceFleetFromAwsResult", "setIops", "setSizeInGB", "setVolumeType", "setVolumeSpecification", "setIops", "setSizeInGB", "setVolumeType", "setVolumeSpecification", "assertEquals", "newArrayList", "buildEmrClusterInstanceFleetFromAwsResult", "setLaunchSpecifications", "setLaunchSpecifications", "assertEquals", "newArrayList", "buildEmrClusterInstanceFleetFromAwsResult", "setClassification", "add", "add", "setConfigurations", "setClassification", "setConfigurations", "newArrayList", "assertEquals", "newArrayList", "buildEmrClusterInstanceFleetFromAwsResult", "put", "setProperties", "setProperties", "newArrayList", "assertEquals", "newArrayList", "buildEmrClusterInstanceFleetFromAwsResult", "setBlockDurationMinutes", "setTimeoutAction", "setTimeoutDurationMinutes", "setSpotSpecification", "setBlockDurationMinutes", "setTimeoutAction", "setTimeoutDurationMinutes", "setSpotSpecification", "assertEquals", "newArrayList", "buildEmrClusterInstanceFleetFromAwsResult"]}, "focal_class": {"identifier": "EmrHelper", "superclass": "extends AwsHelper", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private EmrDao emrDao;", "modifier": "@Autowired\n    private", "type": "EmrDao", "declarator": "emrDao", "var_name": "emrDao"}, {"original_string": "@Autowired\n    private StsDao stsDao;", "modifier": "@Autowired\n    private", "type": "StsDao", "declarator": "stsDao", "var_name": "stsDao"}, {"original_string": "@Autowired\n    private TrustingAccountDaoHelper trustingAccountDaoHelper;", "modifier": "@Autowired\n    private", "type": "TrustingAccountDaoHelper", "declarator": "trustingAccountDaoHelper", "var_name": "trustingAccountDaoHelper"}], "methods": [{"identifier": "buildEmrClusterName", "parameters": "(String namespaceCd, String emrDefinitionName, String clusterName)", "modifiers": "public", "return": "String", "signature": "String buildEmrClusterName(String namespaceCd, String emrDefinitionName, String clusterName)", "full_signature": "public String buildEmrClusterName(String namespaceCd, String emrDefinitionName, String clusterName)", "class_method_signature": "EmrHelper.buildEmrClusterName(String namespaceCd, String emrDefinitionName, String clusterName)", "testcase": false, "constructor": false}, {"identifier": "getActiveEmrClusterId", "parameters": "(String emrClusterId, String emrClusterName, String accountId)", "modifiers": "public", "return": "String", "signature": "String getActiveEmrClusterId(String emrClusterId, String emrClusterName, String accountId)", "full_signature": "public String getActiveEmrClusterId(String emrClusterId, String emrClusterName, String accountId)", "class_method_signature": "EmrHelper.getActiveEmrClusterId(String emrClusterId, String emrClusterName, String accountId)", "testcase": false, "constructor": false}, {"identifier": "getEmrParamsDtoByAccountId", "parameters": "(String accountId)", "modifiers": "public", "return": "EmrParamsDto", "signature": "EmrParamsDto getEmrParamsDtoByAccountId(String accountId)", "full_signature": "public EmrParamsDto getEmrParamsDtoByAccountId(String accountId)", "class_method_signature": "EmrHelper.getEmrParamsDtoByAccountId(String accountId)", "testcase": false, "constructor": false}, {"identifier": "getEmrDao", "parameters": "()", "modifiers": "public", "return": "EmrDao", "signature": "EmrDao getEmrDao()", "full_signature": "public EmrDao getEmrDao()", "class_method_signature": "EmrHelper.getEmrDao()", "testcase": false, "constructor": false}, {"identifier": "setEmrDao", "parameters": "(EmrDao emrDao)", "modifiers": "public", "return": "void", "signature": "void setEmrDao(EmrDao emrDao)", "full_signature": "public void setEmrDao(EmrDao emrDao)", "class_method_signature": "EmrHelper.setEmrDao(EmrDao emrDao)", "testcase": false, "constructor": false}, {"identifier": "getEmrHadoopJarStepConfig", "parameters": "(String stepName, String jarLocation, String mainClass, List<String> scriptArguments, Boolean isContinueOnError)", "modifiers": "public", "return": "StepConfig", "signature": "StepConfig getEmrHadoopJarStepConfig(String stepName, String jarLocation, String mainClass, List<String> scriptArguments, Boolean isContinueOnError)", "full_signature": "public StepConfig getEmrHadoopJarStepConfig(String stepName, String jarLocation, String mainClass, List<String> scriptArguments, Boolean isContinueOnError)", "class_method_signature": "EmrHelper.getEmrHadoopJarStepConfig(String stepName, String jarLocation, String mainClass, List<String> scriptArguments, Boolean isContinueOnError)", "testcase": false, "constructor": false}, {"identifier": "getS3StagingLocation", "parameters": "(String trustingAccountStagingBucketName)", "modifiers": "public", "return": "String", "signature": "String getS3StagingLocation(String trustingAccountStagingBucketName)", "full_signature": "public String getS3StagingLocation(String trustingAccountStagingBucketName)", "class_method_signature": "EmrHelper.getS3StagingLocation(String trustingAccountStagingBucketName)", "testcase": false, "constructor": false}, {"identifier": "isActiveEmrState", "parameters": "(String status)", "modifiers": "public", "return": "boolean", "signature": "boolean isActiveEmrState(String status)", "full_signature": "public boolean isActiveEmrState(String status)", "class_method_signature": "EmrHelper.isActiveEmrState(String status)", "testcase": false, "constructor": false}, {"identifier": "isInstanceDefinitionsEmpty", "parameters": "(InstanceDefinitions instanceDefinitions)", "modifiers": "public", "return": "boolean", "signature": "boolean isInstanceDefinitionsEmpty(InstanceDefinitions instanceDefinitions)", "full_signature": "public boolean isInstanceDefinitionsEmpty(InstanceDefinitions instanceDefinitions)", "class_method_signature": "EmrHelper.isInstanceDefinitionsEmpty(InstanceDefinitions instanceDefinitions)", "testcase": false, "constructor": false}, {"identifier": "getActiveEmrClusterStates", "parameters": "()", "modifiers": "private", "return": "String[]", "signature": "String[] getActiveEmrClusterStates()", "full_signature": "private String[] getActiveEmrClusterStates()", "class_method_signature": "EmrHelper.getActiveEmrClusterStates()", "testcase": false, "constructor": false}, {"identifier": "updateEmrParamsForCrossAccountAccess", "parameters": "(EmrParamsDto emrParamsDto, String accountId)", "modifiers": "private", "return": "void", "signature": "void updateEmrParamsForCrossAccountAccess(EmrParamsDto emrParamsDto, String accountId)", "full_signature": "private void updateEmrParamsForCrossAccountAccess(EmrParamsDto emrParamsDto, String accountId)", "class_method_signature": "EmrHelper.updateEmrParamsForCrossAccountAccess(EmrParamsDto emrParamsDto, String accountId)", "testcase": false, "constructor": false}, {"identifier": "buildEmrClusterInstanceFleetFromAwsResult", "parameters": "(ListInstanceFleetsResult awsInstanceFleetsResult)", "modifiers": "public", "return": "List<EmrClusterInstanceFleet>", "signature": "List<EmrClusterInstanceFleet> buildEmrClusterInstanceFleetFromAwsResult(ListInstanceFleetsResult awsInstanceFleetsResult)", "full_signature": "public List<EmrClusterInstanceFleet> buildEmrClusterInstanceFleetFromAwsResult(ListInstanceFleetsResult awsInstanceFleetsResult)", "class_method_signature": "EmrHelper.buildEmrClusterInstanceFleetFromAwsResult(ListInstanceFleetsResult awsInstanceFleetsResult)", "testcase": false, "constructor": false}, {"identifier": "getEmrClusterInstanceFleetStatus", "parameters": "(InstanceFleetStatus instanceFleetStatus)", "modifiers": "protected", "return": "EmrClusterInstanceFleetStatus", "signature": "EmrClusterInstanceFleetStatus getEmrClusterInstanceFleetStatus(InstanceFleetStatus instanceFleetStatus)", "full_signature": "protected EmrClusterInstanceFleetStatus getEmrClusterInstanceFleetStatus(InstanceFleetStatus instanceFleetStatus)", "class_method_signature": "EmrHelper.getEmrClusterInstanceFleetStatus(InstanceFleetStatus instanceFleetStatus)", "testcase": false, "constructor": false}, {"identifier": "getLaunchSpecifications", "parameters": "(\n        InstanceFleetProvisioningSpecifications instanceFleetProvisioningSpecifications)", "modifiers": "protected", "return": "EmrClusterInstanceFleetProvisioningSpecifications", "signature": "EmrClusterInstanceFleetProvisioningSpecifications getLaunchSpecifications(\n        InstanceFleetProvisioningSpecifications instanceFleetProvisioningSpecifications)", "full_signature": "protected EmrClusterInstanceFleetProvisioningSpecifications getLaunchSpecifications(\n        InstanceFleetProvisioningSpecifications instanceFleetProvisioningSpecifications)", "class_method_signature": "EmrHelper.getLaunchSpecifications(\n        InstanceFleetProvisioningSpecifications instanceFleetProvisioningSpecifications)", "testcase": false, "constructor": false}, {"identifier": "getSpotSpecification", "parameters": "(SpotProvisioningSpecification spotProvisioningSpecification)", "modifiers": "protected", "return": "EmrClusterSpotProvisioningSpecification", "signature": "EmrClusterSpotProvisioningSpecification getSpotSpecification(SpotProvisioningSpecification spotProvisioningSpecification)", "full_signature": "protected EmrClusterSpotProvisioningSpecification getSpotSpecification(SpotProvisioningSpecification spotProvisioningSpecification)", "class_method_signature": "EmrHelper.getSpotSpecification(SpotProvisioningSpecification spotProvisioningSpecification)", "testcase": false, "constructor": false}, {"identifier": "getEbsBlockDevices", "parameters": "(List<EbsBlockDevice> ebsBlockDevices)", "modifiers": "protected", "return": "List<EmrClusterEbsBlockDevice>", "signature": "List<EmrClusterEbsBlockDevice> getEbsBlockDevices(List<EbsBlockDevice> ebsBlockDevices)", "full_signature": "protected List<EmrClusterEbsBlockDevice> getEbsBlockDevices(List<EbsBlockDevice> ebsBlockDevices)", "class_method_signature": "EmrHelper.getEbsBlockDevices(List<EbsBlockDevice> ebsBlockDevices)", "testcase": false, "constructor": false}, {"identifier": "getVolumeSpecification", "parameters": "(VolumeSpecification volumeSpecification)", "modifiers": "protected", "return": "EmrClusterVolumeSpecification", "signature": "EmrClusterVolumeSpecification getVolumeSpecification(VolumeSpecification volumeSpecification)", "full_signature": "protected EmrClusterVolumeSpecification getVolumeSpecification(VolumeSpecification volumeSpecification)", "class_method_signature": "EmrHelper.getVolumeSpecification(VolumeSpecification volumeSpecification)", "testcase": false, "constructor": false}, {"identifier": "getInstanceTypeSpecifications", "parameters": "(List<InstanceTypeSpecification> awsInstanceTypeConfigs)", "modifiers": "protected", "return": "List<EmrClusterInstanceTypeSpecification>", "signature": "List<EmrClusterInstanceTypeSpecification> getInstanceTypeSpecifications(List<InstanceTypeSpecification> awsInstanceTypeConfigs)", "full_signature": "protected List<EmrClusterInstanceTypeSpecification> getInstanceTypeSpecifications(List<InstanceTypeSpecification> awsInstanceTypeConfigs)", "class_method_signature": "EmrHelper.getInstanceTypeSpecifications(List<InstanceTypeSpecification> awsInstanceTypeConfigs)", "testcase": false, "constructor": false}, {"identifier": "getConfigurations", "parameters": "(List<Configuration> configurations)", "modifiers": "protected", "return": "List<EmrClusterInstanceTypeConfiguration>", "signature": "List<EmrClusterInstanceTypeConfiguration> getConfigurations(List<Configuration> configurations)", "full_signature": "protected List<EmrClusterInstanceTypeConfiguration> getConfigurations(List<Configuration> configurations)", "class_method_signature": "EmrHelper.getConfigurations(List<Configuration> configurations)", "testcase": false, "constructor": false}, {"identifier": "getParameterList", "parameters": "(Map<String, String> properties)", "modifiers": "protected", "return": "List<Parameter>", "signature": "List<Parameter> getParameterList(Map<String, String> properties)", "full_signature": "protected List<Parameter> getParameterList(Map<String, String> properties)", "class_method_signature": "EmrHelper.getParameterList(Map<String, String> properties)", "testcase": false, "constructor": false}], "file": "herd-code/herd-dao/src/main/java/org/finra/herd/dao/helper/EmrHelper.java"}, "focal_method": {"identifier": "buildEmrClusterInstanceFleetFromAwsResult", "parameters": "(ListInstanceFleetsResult awsInstanceFleetsResult)", "modifiers": "public", "return": "List<EmrClusterInstanceFleet>", "body": "public List<EmrClusterInstanceFleet> buildEmrClusterInstanceFleetFromAwsResult(ListInstanceFleetsResult awsInstanceFleetsResult)\n    {\n        List<EmrClusterInstanceFleet> emrInstanceFleets = null;\n\n        if (awsInstanceFleetsResult != null && !CollectionUtils.isEmpty(awsInstanceFleetsResult.getInstanceFleets()))\n        {\n            emrInstanceFleets = new ArrayList<>();\n\n            for (InstanceFleet awsInstanceFleet : awsInstanceFleetsResult.getInstanceFleets())\n            {\n                if (awsInstanceFleet != null)\n                {\n                    EmrClusterInstanceFleet emrInstanceFleet = new EmrClusterInstanceFleet();\n                    emrInstanceFleet.setId(awsInstanceFleet.getId());\n                    emrInstanceFleet.setName(awsInstanceFleet.getName());\n                    emrInstanceFleet.setInstanceFleetType(awsInstanceFleet.getInstanceFleetType());\n                    emrInstanceFleet.setTargetOnDemandCapacity(awsInstanceFleet.getTargetOnDemandCapacity());\n                    emrInstanceFleet.setTargetSpotCapacity(awsInstanceFleet.getTargetSpotCapacity());\n                    emrInstanceFleet.setProvisionedOnDemandCapacity(awsInstanceFleet.getProvisionedOnDemandCapacity());\n                    emrInstanceFleet.setProvisionedSpotCapacity(awsInstanceFleet.getProvisionedSpotCapacity());\n                    emrInstanceFleet.setInstanceTypeSpecifications(getInstanceTypeSpecifications(awsInstanceFleet.getInstanceTypeSpecifications()));\n                    emrInstanceFleet.setLaunchSpecifications(getLaunchSpecifications(awsInstanceFleet.getLaunchSpecifications()));\n                    emrInstanceFleet.setInstanceFleetStatus(getEmrClusterInstanceFleetStatus(awsInstanceFleet.getStatus()));\n                    emrInstanceFleets.add(emrInstanceFleet);\n                }\n            }\n        }\n\n        return emrInstanceFleets;\n    }", "signature": "List<EmrClusterInstanceFleet> buildEmrClusterInstanceFleetFromAwsResult(ListInstanceFleetsResult awsInstanceFleetsResult)", "full_signature": "public List<EmrClusterInstanceFleet> buildEmrClusterInstanceFleetFromAwsResult(ListInstanceFleetsResult awsInstanceFleetsResult)", "class_method_signature": "EmrHelper.buildEmrClusterInstanceFleetFromAwsResult(ListInstanceFleetsResult awsInstanceFleetsResult)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "getInstanceFleets", "getInstanceFleets", "setId", "getId", "setName", "getName", "setInstanceFleetType", "getInstanceFleetType", "setTargetOnDemandCapacity", "getTargetOnDemandCapacity", "setTargetSpotCapacity", "getTargetSpotCapacity", "setProvisionedOnDemandCapacity", "getProvisionedOnDemandCapacity", "setProvisionedSpotCapacity", "getProvisionedSpotCapacity", "setInstanceTypeSpecifications", "getInstanceTypeSpecifications", "getInstanceTypeSpecifications", "setLaunchSpecifications", "getLaunchSpecifications", "getLaunchSpecifications", "setInstanceFleetStatus", "getEmrClusterInstanceFleetStatus", "getStatus", "add"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}