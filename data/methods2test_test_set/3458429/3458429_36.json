{"test_class": {"identifier": "QuotedQualityCSVTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String[] preferBrotli = {\"br\", \"gzip\"};", "modifier": "private static final", "type": "String[]", "declarator": "preferBrotli = {\"br\", \"gzip\"}", "var_name": "preferBrotli"}, {"original_string": "private static final String[] preferGzip = {\"gzip\", \"br\"};", "modifier": "private static final", "type": "String[]", "declarator": "preferGzip = {\"gzip\", \"br\"}", "var_name": "preferGzip"}, {"original_string": "private static final String[] noFormats = {};", "modifier": "private static final", "type": "String[]", "declarator": "noFormats = {}", "var_name": "noFormats"}], "file": "firefly-net/src/test/java/com/fireflysource/net/http/common/model/QuotedQualityCSVTest.java"}, "test_case": {"identifier": "testStarEncodingWithBrotliPreference", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testStarEncodingWithBrotliPreference() {\n        QuotedQualityCSV values = new QuotedQualityCSV(preferBrotli);\n        values.addValue(\"gzip, *\");\n        assertContains(values.getValues(), \"*\", \"gzip\");\n    }", "signature": "void testStarEncodingWithBrotliPreference()", "full_signature": "@Test void testStarEncodingWithBrotliPreference()", "class_method_signature": "QuotedQualityCSVTest.testStarEncodingWithBrotliPreference()", "testcase": true, "constructor": false, "invocations": ["addValue", "assertContains", "getValues"]}, "focal_class": {"identifier": "QuotedQualityCSV", "superclass": "extends QuotedCSV", "interfaces": "implements Iterable<String>", "fields": [{"original_string": "private final static Double ZERO = 0.0;", "modifier": "private final static", "type": "Double", "declarator": "ZERO = 0.0", "var_name": "ZERO"}, {"original_string": "private final static Double ONE = 1.0;", "modifier": "private final static", "type": "Double", "declarator": "ONE = 1.0", "var_name": "ONE"}, {"original_string": "public static Function<String, Integer> MOST_SPECIFIC = s -> {\n        String[] elements = s.split(\"/\");\n        return 1000000 * elements.length + 1000 * elements[0].length() + elements[elements.length - 1].length();\n    };", "modifier": "public static", "type": "Function<String, Integer>", "declarator": "MOST_SPECIFIC = s -> {\n        String[] elements = s.split(\"/\");\n        return 1000000 * elements.length + 1000 * elements[0].length() + elements[elements.length - 1].length();\n    }", "var_name": "MOST_SPECIFIC"}, {"original_string": "private final List<Double> quality = new ArrayList<>();", "modifier": "private final", "type": "List<Double>", "declarator": "quality = new ArrayList<>()", "var_name": "quality"}, {"original_string": "private final Function<String, Integer> secondaryOrdering;", "modifier": "private final", "type": "Function<String, Integer>", "declarator": "secondaryOrdering", "var_name": "secondaryOrdering"}, {"original_string": "private boolean sorted = false;", "modifier": "private", "type": "boolean", "declarator": "sorted = false", "var_name": "sorted"}], "methods": [{"identifier": "QuotedQualityCSV", "parameters": "()", "modifiers": "public", "return": "", "signature": " QuotedQualityCSV()", "full_signature": "public  QuotedQualityCSV()", "class_method_signature": "QuotedQualityCSV.QuotedQualityCSV()", "testcase": false, "constructor": true}, {"identifier": "QuotedQualityCSV", "parameters": "(String[] preferredOrder)", "modifiers": "public", "return": "", "signature": " QuotedQualityCSV(String[] preferredOrder)", "full_signature": "public  QuotedQualityCSV(String[] preferredOrder)", "class_method_signature": "QuotedQualityCSV.QuotedQualityCSV(String[] preferredOrder)", "testcase": false, "constructor": true}, {"identifier": "QuotedQualityCSV", "parameters": "(Function<String, Integer> secondaryOrdering)", "modifiers": "public", "return": "", "signature": " QuotedQualityCSV(Function<String, Integer> secondaryOrdering)", "full_signature": "public  QuotedQualityCSV(Function<String, Integer> secondaryOrdering)", "class_method_signature": "QuotedQualityCSV.QuotedQualityCSV(Function<String, Integer> secondaryOrdering)", "testcase": false, "constructor": true}, {"identifier": "parsedValue", "parameters": "(StringBuilder buffer)", "modifiers": "@Override protected", "return": "void", "signature": "void parsedValue(StringBuilder buffer)", "full_signature": "@Override protected void parsedValue(StringBuilder buffer)", "class_method_signature": "QuotedQualityCSV.parsedValue(StringBuilder buffer)", "testcase": false, "constructor": false}, {"identifier": "parsedParam", "parameters": "(StringBuilder buffer, int valueLength, int paramName, int paramValue)", "modifiers": "@Override protected", "return": "void", "signature": "void parsedParam(StringBuilder buffer, int valueLength, int paramName, int paramValue)", "full_signature": "@Override protected void parsedParam(StringBuilder buffer, int valueLength, int paramName, int paramValue)", "class_method_signature": "QuotedQualityCSV.parsedParam(StringBuilder buffer, int valueLength, int paramName, int paramValue)", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getValues()", "full_signature": "public List<String> getValues()", "class_method_signature": "QuotedQualityCSV.getValues()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<String>", "signature": "Iterator<String> iterator()", "full_signature": "@Override public Iterator<String> iterator()", "class_method_signature": "QuotedQualityCSV.iterator()", "testcase": false, "constructor": false}, {"identifier": "sort", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void sort()", "full_signature": "protected void sort()", "class_method_signature": "QuotedQualityCSV.sort()", "testcase": false, "constructor": false}], "file": "firefly-net/src/main/java/com/fireflysource/net/http/common/model/QuotedQualityCSV.java"}, "focal_method": {"identifier": "getValues", "parameters": "()", "modifiers": "public", "return": "List<String>", "body": "public List<String> getValues() {\n        if (!sorted) {\n            sort();\n        }\n        return values;\n    }", "signature": "List<String> getValues()", "full_signature": "public List<String> getValues()", "class_method_signature": "QuotedQualityCSV.getValues()", "testcase": false, "constructor": false, "invocations": ["sort"]}, "repository": {"repo_id": 3458429, "url": "https://github.com/hypercube1024/firefly", "language": "Java", "is_fork": false, "fork_count": 118, "stargazer_count": 271, "size": 29687, "license": "licensed"}}