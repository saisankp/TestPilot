{"test_class": {"identifier": "BlockTemplateTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "protected final ContextStorage<Context> contextStorage = new UnmodifiableContextStorage(\n      EmptyContext.getInstance());", "modifier": "protected final", "type": "ContextStorage<Context>", "declarator": "contextStorage = new UnmodifiableContextStorage(\n      EmptyContext.getInstance())", "var_name": "contextStorage"}], "file": "core/transport/src/test/java/hera/client/BlockTemplateTest.java"}, "test_case": {"identifier": "testListBlockMetadatasByHeight", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testListBlockMetadatasByHeight() throws Exception {\n    // given\n    final BlockTemplate blockTemplate = new BlockTemplate(contextStorage);\n    final Requester mockRequester = mock(Requester.class);\n    final List<BlockMetadata> expected = emptyList();\n    when(mockRequester.request(ArgumentMatchers.<Invocation<?>>any()))\n        .thenReturn(expected);\n    blockTemplate.requester = mockRequester;\n\n    // then\n    final List<BlockMetadata> actual = blockTemplate.listBlockMetadatas(anyHeight, anySize);\n    assertEquals(expected, actual);\n  }", "signature": "void testListBlockMetadatasByHeight()", "full_signature": "@Test public void testListBlockMetadatasByHeight()", "class_method_signature": "BlockTemplateTest.testListBlockMetadatasByHeight()", "testcase": true, "constructor": false, "invocations": ["mock", "emptyList", "thenReturn", "when", "request", "any", "listBlockMetadatas", "assertEquals"]}, "focal_class": {"identifier": "BlockTemplate", "superclass": "extends AbstractTemplate", "interfaces": "implements BlockOperation", "fields": [{"original_string": "protected final BlockMethods blockMethods = new BlockMethods();", "modifier": "protected final", "type": "BlockMethods", "declarator": "blockMethods = new BlockMethods()", "var_name": "blockMethods"}], "methods": [{"identifier": "BlockTemplate", "parameters": "(final ContextStorage<Context> contextStorage)", "modifiers": "", "return": "", "signature": " BlockTemplate(final ContextStorage<Context> contextStorage)", "full_signature": "  BlockTemplate(final ContextStorage<Context> contextStorage)", "class_method_signature": "BlockTemplate.BlockTemplate(final ContextStorage<Context> contextStorage)", "testcase": false, "constructor": true}, {"identifier": "getBlockMetadata", "parameters": "(final BlockHash blockHash)", "modifiers": "@Override public", "return": "BlockMetadata", "signature": "BlockMetadata getBlockMetadata(final BlockHash blockHash)", "full_signature": "@Override public BlockMetadata getBlockMetadata(final BlockHash blockHash)", "class_method_signature": "BlockTemplate.getBlockMetadata(final BlockHash blockHash)", "testcase": false, "constructor": false}, {"identifier": "getBlockMetadata", "parameters": "(final long height)", "modifiers": "@Override public", "return": "BlockMetadata", "signature": "BlockMetadata getBlockMetadata(final long height)", "full_signature": "@Override public BlockMetadata getBlockMetadata(final long height)", "class_method_signature": "BlockTemplate.getBlockMetadata(final long height)", "testcase": false, "constructor": false}, {"identifier": "listBlockMetadatas", "parameters": "(final BlockHash blockHash, final int size)", "modifiers": "@Override public", "return": "List<BlockMetadata>", "signature": "List<BlockMetadata> listBlockMetadatas(final BlockHash blockHash, final int size)", "full_signature": "@Override public List<BlockMetadata> listBlockMetadatas(final BlockHash blockHash, final int size)", "class_method_signature": "BlockTemplate.listBlockMetadatas(final BlockHash blockHash, final int size)", "testcase": false, "constructor": false}, {"identifier": "listBlockMetadatas", "parameters": "(final long height, final int size)", "modifiers": "@Override public", "return": "List<BlockMetadata>", "signature": "List<BlockMetadata> listBlockMetadatas(final long height, final int size)", "full_signature": "@Override public List<BlockMetadata> listBlockMetadatas(final long height, final int size)", "class_method_signature": "BlockTemplate.listBlockMetadatas(final long height, final int size)", "testcase": false, "constructor": false}, {"identifier": "getBlock", "parameters": "(final BlockHash blockHash)", "modifiers": "@Override public", "return": "Block", "signature": "Block getBlock(final BlockHash blockHash)", "full_signature": "@Override public Block getBlock(final BlockHash blockHash)", "class_method_signature": "BlockTemplate.getBlock(final BlockHash blockHash)", "testcase": false, "constructor": false}, {"identifier": "getBlock", "parameters": "(final long height)", "modifiers": "@Override public", "return": "Block", "signature": "Block getBlock(final long height)", "full_signature": "@Override public Block getBlock(final long height)", "class_method_signature": "BlockTemplate.getBlock(final long height)", "testcase": false, "constructor": false}, {"identifier": "subscribeNewBlockMetadata", "parameters": "(\n      final StreamObserver<BlockMetadata> observer)", "modifiers": "@Override public", "return": "Subscription<BlockMetadata>", "signature": "Subscription<BlockMetadata> subscribeNewBlockMetadata(\n      final StreamObserver<BlockMetadata> observer)", "full_signature": "@Override public Subscription<BlockMetadata> subscribeNewBlockMetadata(\n      final StreamObserver<BlockMetadata> observer)", "class_method_signature": "BlockTemplate.subscribeNewBlockMetadata(\n      final StreamObserver<BlockMetadata> observer)", "testcase": false, "constructor": false}, {"identifier": "subscribeBlockMetadata", "parameters": "(\n      final StreamObserver<BlockMetadata> observer)", "modifiers": "@Override public", "return": "Subscription<BlockMetadata>", "signature": "Subscription<BlockMetadata> subscribeBlockMetadata(\n      final StreamObserver<BlockMetadata> observer)", "full_signature": "@Override public Subscription<BlockMetadata> subscribeBlockMetadata(\n      final StreamObserver<BlockMetadata> observer)", "class_method_signature": "BlockTemplate.subscribeBlockMetadata(\n      final StreamObserver<BlockMetadata> observer)", "testcase": false, "constructor": false}, {"identifier": "subscribeNewBlock", "parameters": "(final StreamObserver<Block> observer)", "modifiers": "@Override public", "return": "Subscription<Block>", "signature": "Subscription<Block> subscribeNewBlock(final StreamObserver<Block> observer)", "full_signature": "@Override public Subscription<Block> subscribeNewBlock(final StreamObserver<Block> observer)", "class_method_signature": "BlockTemplate.subscribeNewBlock(final StreamObserver<Block> observer)", "testcase": false, "constructor": false}, {"identifier": "subscribeBlock", "parameters": "(final StreamObserver<Block> observer)", "modifiers": "@Override public", "return": "Subscription<Block>", "signature": "Subscription<Block> subscribeBlock(final StreamObserver<Block> observer)", "full_signature": "@Override public Subscription<Block> subscribeBlock(final StreamObserver<Block> observer)", "class_method_signature": "BlockTemplate.subscribeBlock(final StreamObserver<Block> observer)", "testcase": false, "constructor": false}], "file": "core/transport/src/main/java/hera/client/BlockTemplate.java"}, "focal_method": {"identifier": "listBlockMetadatas", "parameters": "(final BlockHash blockHash, final int size)", "modifiers": "@Override public", "return": "List<BlockMetadata>", "body": "@Override\n  public List<BlockMetadata> listBlockMetadatas(final BlockHash blockHash, final int size) {\n    return request(blockMethods.getListBlockMetadatasByHash(),\n        Arrays.<Object>asList(blockHash, size));\n  }", "signature": "List<BlockMetadata> listBlockMetadatas(final BlockHash blockHash, final int size)", "full_signature": "@Override public List<BlockMetadata> listBlockMetadatas(final BlockHash blockHash, final int size)", "class_method_signature": "BlockTemplate.listBlockMetadatas(final BlockHash blockHash, final int size)", "testcase": false, "constructor": false, "invocations": ["request", "getListBlockMetadatasByHash", "asList"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}