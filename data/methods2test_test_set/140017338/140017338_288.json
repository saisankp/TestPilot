{"test_class": {"identifier": "AntennaComplianceToolOptionsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PROPERTIES_PATH = \"path/to/compliancetool.properties\";", "modifier": "private static final", "type": "String", "declarator": "PROPERTIES_PATH = \"path/to/compliancetool.properties\"", "var_name": "PROPERTIES_PATH"}], "file": "assembly/compliance-tool/src/test/java/org/eclipse/sw360/antenna/frontend/compliancetool/main/AntennaComplianceToolOptionsTest.java"}, "test_case": {"identifier": "testParametersAreImmutable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testParametersAreImmutable() {\n        Set<String> parameterSet = new HashSet<>();\n        final AntennaComplianceToolOptions antennaComplianceToolOptions = new AntennaComplianceToolOptions(PROPERTIES_PATH, AntennaComplianceToolOptions.MODE_NAME_REPORTER, parameterSet, false, false, true);\n        Set<String> parametersFromOptions = antennaComplianceToolOptions.getParameters();\n        parametersFromOptions.add(\"--parameter=x\");\n\n        assertThat(parametersFromOptions).isNotEqualTo(antennaComplianceToolOptions.getParameters());\n        assertThat(antennaComplianceToolOptions.getParameters()).isEqualTo(parameterSet);\n    }", "signature": "void testParametersAreImmutable()", "full_signature": "@Test public void testParametersAreImmutable()", "class_method_signature": "AntennaComplianceToolOptionsTest.testParametersAreImmutable()", "testcase": true, "constructor": false, "invocations": ["getParameters", "add", "isNotEqualTo", "assertThat", "getParameters", "isEqualTo", "assertThat", "getParameters"]}, "focal_class": {"identifier": "AntennaComplianceToolOptions", "superclass": "extends AbstractAntennaCLIOptions", "interfaces": "", "fields": [{"original_string": "static final String SWITCH_UPDATER_SHORT = SWITCH_PREFIX + \"u\";", "modifier": "static final", "type": "String", "declarator": "SWITCH_UPDATER_SHORT = SWITCH_PREFIX + \"u\"", "var_name": "SWITCH_UPDATER_SHORT"}, {"original_string": "static final String SWITCH_UPDATER_LONG = SWITCH_PREFIX + \"-updater\";", "modifier": "static final", "type": "String", "declarator": "SWITCH_UPDATER_LONG = SWITCH_PREFIX + \"-updater\"", "var_name": "SWITCH_UPDATER_LONG"}, {"original_string": "static final String SWITCH_EXPORTER_SHORT = SWITCH_PREFIX + \"e\";", "modifier": "static final", "type": "String", "declarator": "SWITCH_EXPORTER_SHORT = SWITCH_PREFIX + \"e\"", "var_name": "SWITCH_EXPORTER_SHORT"}, {"original_string": "static final String SWITCH_EXPORTER_LONG = SWITCH_PREFIX + \"-exporter\";", "modifier": "static final", "type": "String", "declarator": "SWITCH_EXPORTER_LONG = SWITCH_PREFIX + \"-exporter\"", "var_name": "SWITCH_EXPORTER_LONG"}, {"original_string": "public static final String SWITCH_REPORTER = SWITCH_PREFIX + \"-reporter\";", "modifier": "public static final", "type": "String", "declarator": "SWITCH_REPORTER = SWITCH_PREFIX + \"-reporter\"", "var_name": "SWITCH_REPORTER"}, {"original_string": "static final String MODE_NAME_EXPORTER = \"exporter\";", "modifier": "static final", "type": "String", "declarator": "MODE_NAME_EXPORTER = \"exporter\"", "var_name": "MODE_NAME_EXPORTER"}, {"original_string": "static final String MODE_NAME_UPDATER = \"updater\";", "modifier": "static final", "type": "String", "declarator": "MODE_NAME_UPDATER = \"updater\"", "var_name": "MODE_NAME_UPDATER"}, {"original_string": "static final String MODE_NAME_REPORTER = \"reporter\";", "modifier": "static final", "type": "String", "declarator": "MODE_NAME_REPORTER = \"reporter\"", "var_name": "MODE_NAME_REPORTER"}, {"original_string": "private static final AntennaComplianceToolOptions INVALID_OPTIONS =\n            new AntennaComplianceToolOptions(null, null, null, false, true, false);", "modifier": "private static final", "type": "AntennaComplianceToolOptions", "declarator": "INVALID_OPTIONS =\n            new AntennaComplianceToolOptions(null, null, null, false, true, false)", "var_name": "INVALID_OPTIONS"}, {"original_string": "private final String propertiesFilePath;", "modifier": "private final", "type": "String", "declarator": "propertiesFilePath", "var_name": "propertiesFilePath"}, {"original_string": "private final String complianceMode;", "modifier": "private final", "type": "String", "declarator": "complianceMode", "var_name": "complianceMode"}, {"original_string": "private final Set<String> parameters;", "modifier": "private final", "type": "Set<String>", "declarator": "parameters", "var_name": "parameters"}], "methods": [{"identifier": "AntennaComplianceToolOptions", "parameters": "(String propertiesFilePath, String complianceMode, Set<String> parameters, boolean debugLog, boolean showHelp, boolean valid)", "modifiers": "", "return": "", "signature": " AntennaComplianceToolOptions(String propertiesFilePath, String complianceMode, Set<String> parameters, boolean debugLog, boolean showHelp, boolean valid)", "full_signature": "  AntennaComplianceToolOptions(String propertiesFilePath, String complianceMode, Set<String> parameters, boolean debugLog, boolean showHelp, boolean valid)", "class_method_signature": "AntennaComplianceToolOptions.AntennaComplianceToolOptions(String propertiesFilePath, String complianceMode, Set<String> parameters, boolean debugLog, boolean showHelp, boolean valid)", "testcase": false, "constructor": true}, {"identifier": "getPropertiesFilePath", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getPropertiesFilePath()", "full_signature": " String getPropertiesFilePath()", "class_method_signature": "AntennaComplianceToolOptions.getPropertiesFilePath()", "testcase": false, "constructor": false}, {"identifier": "getComplianceMode", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getComplianceMode()", "full_signature": " String getComplianceMode()", "class_method_signature": "AntennaComplianceToolOptions.getComplianceMode()", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "", "return": "Set<String>", "signature": "Set<String> getParameters()", "full_signature": " Set<String> getParameters()", "class_method_signature": "AntennaComplianceToolOptions.getParameters()", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String[] args)", "modifiers": "static", "return": "AntennaComplianceToolOptions", "signature": "AntennaComplianceToolOptions parse(String[] args)", "full_signature": "static AntennaComplianceToolOptions parse(String[] args)", "class_method_signature": "AntennaComplianceToolOptions.parse(String[] args)", "testcase": false, "constructor": false}, {"identifier": "helpMessage", "parameters": "()", "modifiers": "static", "return": "String", "signature": "String helpMessage()", "full_signature": "static String helpMessage()", "class_method_signature": "AntennaComplianceToolOptions.helpMessage()", "testcase": false, "constructor": false}, {"identifier": "getComplianceModeFromSwitches", "parameters": "(Set<String> switches)", "modifiers": "private static", "return": "Optional<String>", "signature": "Optional<String> getComplianceModeFromSwitches(Set<String> switches)", "full_signature": "private static Optional<String> getComplianceModeFromSwitches(Set<String> switches)", "class_method_signature": "AntennaComplianceToolOptions.getComplianceModeFromSwitches(Set<String> switches)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "AntennaComplianceToolOptions.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AntennaComplianceToolOptions.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AntennaComplianceToolOptions.toString()", "testcase": false, "constructor": false}], "file": "assembly/compliance-tool/src/main/java/org/eclipse/sw360/antenna/frontend/compliancetool/main/AntennaComplianceToolOptions.java"}, "focal_method": {"identifier": "getParameters", "parameters": "()", "modifiers": "", "return": "Set<String>", "body": "Set<String> getParameters() {\n        return parameters == null ? Collections.emptySet() : new HashSet<>(parameters);\n    }", "signature": "Set<String> getParameters()", "full_signature": " Set<String> getParameters()", "class_method_signature": "AntennaComplianceToolOptions.getParameters()", "testcase": false, "constructor": false, "invocations": ["emptySet"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}