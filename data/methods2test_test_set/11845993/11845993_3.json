{"test_class": {"identifier": "PreExecutionInterceptorContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PreExecutionInterceptorContext interceptorContext = new PreExecutionInterceptorContext(mock(SpanContextInformation.class));", "modifier": "private", "type": "PreExecutionInterceptorContext", "declarator": "interceptorContext = new PreExecutionInterceptorContext(mock(SpanContextInformation.class))", "var_name": "interceptorContext"}], "file": "stagemonitor-tracing/src/test/java/org/stagemonitor/tracing/sampling/PreExecutionInterceptorContextTest.java"}, "test_case": {"identifier": "shouldNotCollectCallTree", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void shouldNotCollectCallTree() throws Exception {\n\t\tassertTrue(interceptorContext.isCollectCallTree());\n\n\t\tinterceptorContext.shouldNotCollectCallTree(\"reasons\");\n\n\t\tassertFalse(interceptorContext.isCollectCallTree());\n\t}", "signature": "void shouldNotCollectCallTree()", "full_signature": "@Test public void shouldNotCollectCallTree()", "class_method_signature": "PreExecutionInterceptorContextTest.shouldNotCollectCallTree()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isCollectCallTree", "shouldNotCollectCallTree", "assertFalse", "isCollectCallTree"]}, "focal_class": {"identifier": "PreExecutionInterceptorContext", "superclass": "extends AbstractInterceptorContext<PreExecutionInterceptorContext>", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(PreExecutionInterceptorContext.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(PreExecutionInterceptorContext.class)", "var_name": "logger"}, {"original_string": "private boolean mustCollectCallTree = false;", "modifier": "private", "type": "boolean", "declarator": "mustCollectCallTree = false", "var_name": "mustCollectCallTree"}, {"original_string": "private boolean collectCallTree = true;", "modifier": "private", "type": "boolean", "declarator": "collectCallTree = true", "var_name": "collectCallTree"}], "methods": [{"identifier": "PreExecutionInterceptorContext", "parameters": "(SpanContextInformation spanContext)", "modifiers": "public", "return": "", "signature": " PreExecutionInterceptorContext(SpanContextInformation spanContext)", "full_signature": "public  PreExecutionInterceptorContext(SpanContextInformation spanContext)", "class_method_signature": "PreExecutionInterceptorContext.PreExecutionInterceptorContext(SpanContextInformation spanContext)", "testcase": false, "constructor": true}, {"identifier": "mustCollectCallTree", "parameters": "(String reason)", "modifiers": "public", "return": "PreExecutionInterceptorContext", "signature": "PreExecutionInterceptorContext mustCollectCallTree(String reason)", "full_signature": "public PreExecutionInterceptorContext mustCollectCallTree(String reason)", "class_method_signature": "PreExecutionInterceptorContext.mustCollectCallTree(String reason)", "testcase": false, "constructor": false}, {"identifier": "shouldNotCollectCallTree", "parameters": "(String reason)", "modifiers": "public", "return": "PreExecutionInterceptorContext", "signature": "PreExecutionInterceptorContext shouldNotCollectCallTree(String reason)", "full_signature": "public PreExecutionInterceptorContext shouldNotCollectCallTree(String reason)", "class_method_signature": "PreExecutionInterceptorContext.shouldNotCollectCallTree(String reason)", "testcase": false, "constructor": false}, {"identifier": "isCollectCallTree", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCollectCallTree()", "full_signature": "public boolean isCollectCallTree()", "class_method_signature": "PreExecutionInterceptorContext.isCollectCallTree()", "testcase": false, "constructor": false}], "file": "stagemonitor-tracing/src/main/java/org/stagemonitor/tracing/sampling/PreExecutionInterceptorContext.java"}, "focal_method": {"identifier": "shouldNotCollectCallTree", "parameters": "(String reason)", "modifiers": "public", "return": "PreExecutionInterceptorContext", "body": "public PreExecutionInterceptorContext shouldNotCollectCallTree(String reason) {\n\t\tif (!mustCollectCallTree) {\n\t\t\tlogger.debug(\"Should not collect call tree because {}\", reason);\n\t\t\tcollectCallTree = false;\n\t\t}\n\t\treturn this;\n\t}", "signature": "PreExecutionInterceptorContext shouldNotCollectCallTree(String reason)", "full_signature": "public PreExecutionInterceptorContext shouldNotCollectCallTree(String reason)", "class_method_signature": "PreExecutionInterceptorContext.shouldNotCollectCallTree(String reason)", "testcase": false, "constructor": false, "invocations": ["debug"]}, "repository": {"repo_id": 11845993, "url": "https://github.com/stagemonitor/stagemonitor", "language": "Java", "is_fork": false, "fork_count": 268, "stargazer_count": 1585, "size": 10342, "license": "licensed"}}