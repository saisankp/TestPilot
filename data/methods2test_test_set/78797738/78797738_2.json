{"test_class": {"identifier": "RestUserControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Logger logger = LoggerFactory.getLogger(RestUserControllerTest.class);", "modifier": "private", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(RestUserControllerTest.class)", "var_name": "logger"}, {"original_string": "private static final String GET_POST_URL = \"http://localhost:8080/users\";", "modifier": "private static final", "type": "String", "declarator": "GET_POST_URL = \"http://localhost:8080/users\"", "var_name": "GET_POST_URL"}, {"original_string": "private static final String GET_PUT_DEL_URL = \"http://localhost:8080/users/{$username}\";", "modifier": "private static final", "type": "String", "declarator": "GET_PUT_DEL_URL = \"http://localhost:8080/users/{$username}\"", "var_name": "GET_PUT_DEL_URL"}, {"original_string": "private static final String GET_EMAILS_BY_TYPE_URL = \"http://localhost:8080/emails/{$type}\";", "modifier": "private static final", "type": "String", "declarator": "GET_EMAILS_BY_TYPE_URL = \"http://localhost:8080/emails/{$type}\"", "var_name": "GET_EMAILS_BY_TYPE_URL"}, {"original_string": "private RestTemplate restTemplate = null;", "modifier": "private", "type": "RestTemplate", "declarator": "restTemplate = null", "var_name": "restTemplate"}], "file": "15-ps-rest-boot-sample/src/test/java/com/ps/rest/RestUserControllerTest.java"}, "test_case": {"identifier": "deleteUser", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void deleteUser() {\n        restTemplate.delete(GET_PUT_DEL_URL, \"doctorwho\");\n        // test insertion\n        User newUser = restTemplate.getForObject(GET_PUT_DEL_URL, User.class, \"doctorwho\");\n        assertNull(newUser);\n    }", "signature": "void deleteUser()", "full_signature": "@Test public void deleteUser()", "class_method_signature": "RestUserControllerTest.deleteUser()", "testcase": true, "constructor": false, "invocations": ["delete", "getForObject", "assertNull"]}, "focal_class": {"identifier": "RestUserController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Map<String, User> userService = new HashMap<>();", "modifier": "private", "type": "Map<String, User>", "declarator": "userService = new HashMap<>()", "var_name": "userService"}], "methods": [{"identifier": "init", "parameters": "()", "modifiers": "@PostConstruct public", "return": "void", "signature": "void init()", "full_signature": "@PostConstruct public void init()", "class_method_signature": "RestUserController.init()", "testcase": false, "constructor": false}, {"identifier": "all", "parameters": "()", "modifiers": "@RequestMapping(value = \"/users\", method = RequestMethod.GET) public", "return": "List<User>", "signature": "List<User> all()", "full_signature": "@RequestMapping(value = \"/users\", method = RequestMethod.GET) public List<User> all()", "class_method_signature": "RestUserController.all()", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(@RequestBody @Valid User newUser, @Value(\"#{request.requestURL}\")\n            StringBuffer originalUrl, HttpServletResponse response)", "modifiers": "@ResponseStatus(HttpStatus.CREATED) @RequestMapping(value = \"/users\", method = RequestMethod.POST) public", "return": "void", "signature": "void create(@RequestBody @Valid User newUser, @Value(\"#{request.requestURL}\")\n            StringBuffer originalUrl, HttpServletResponse response)", "full_signature": "@ResponseStatus(HttpStatus.CREATED) @RequestMapping(value = \"/users\", method = RequestMethod.POST) public void create(@RequestBody @Valid User newUser, @Value(\"#{request.requestURL}\")\n            StringBuffer originalUrl, HttpServletResponse response)", "class_method_signature": "RestUserController.create(@RequestBody @Valid User newUser, @Value(\"#{request.requestURL}\")\n            StringBuffer originalUrl, HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "getByUsername", "parameters": "(@PathVariable(\"$username\") String username)", "modifiers": "@ResponseStatus(HttpStatus.OK) @RequestMapping(value = \"/users/{$username}\", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE) public", "return": "User", "signature": "User getByUsername(@PathVariable(\"$username\") String username)", "full_signature": "@ResponseStatus(HttpStatus.OK) @RequestMapping(value = \"/users/{$username}\", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE) public User getByUsername(@PathVariable(\"$username\") String username)", "class_method_signature": "RestUserController.getByUsername(@PathVariable(\"$username\") String username)", "testcase": false, "constructor": false}, {"identifier": "getLocationForUser", "parameters": "(StringBuffer url, Object childIdentifier)", "modifiers": "protected static", "return": "String", "signature": "String getLocationForUser(StringBuffer url, Object childIdentifier)", "full_signature": "protected static String getLocationForUser(StringBuffer url, Object childIdentifier)", "class_method_signature": "RestUserController.getLocationForUser(StringBuffer url, Object childIdentifier)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(@PathVariable(\"$username\") String username, @RequestBody User newUser)", "modifiers": "@ResponseStatus(HttpStatus.OK) @RequestMapping(value = \"/users/{$username}\", method = RequestMethod.PUT, produces = MediaType.APPLICATION_JSON_VALUE) public", "return": "User", "signature": "User update(@PathVariable(\"$username\") String username, @RequestBody User newUser)", "full_signature": "@ResponseStatus(HttpStatus.OK) @RequestMapping(value = \"/users/{$username}\", method = RequestMethod.PUT, produces = MediaType.APPLICATION_JSON_VALUE) public User update(@PathVariable(\"$username\") String username, @RequestBody User newUser)", "class_method_signature": "RestUserController.update(@PathVariable(\"$username\") String username, @RequestBody User newUser)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@PathVariable(\"$username\") String username)", "modifiers": "@ResponseStatus(HttpStatus.NO_CONTENT) @RequestMapping(value = \"/users/{$username}\", method = RequestMethod.DELETE) public", "return": "void", "signature": "void delete(@PathVariable(\"$username\") String username)", "full_signature": "@ResponseStatus(HttpStatus.NO_CONTENT) @RequestMapping(value = \"/users/{$username}\", method = RequestMethod.DELETE) public void delete(@PathVariable(\"$username\") String username)", "class_method_signature": "RestUserController.delete(@PathVariable(\"$username\") String username)", "testcase": false, "constructor": false}], "file": "15-ps-rest-boot-sample/src/main/java/com/ps/rest/RestUserController.java"}, "focal_method": {"identifier": "delete", "parameters": "(@PathVariable(\"$username\") String username)", "modifiers": "@ResponseStatus(HttpStatus.NO_CONTENT) @RequestMapping(value = \"/users/{$username}\", method = RequestMethod.DELETE) public", "return": "void", "body": "@ResponseStatus(HttpStatus.NO_CONTENT)\n    @RequestMapping(value = \"/users/{$username}\", method = RequestMethod.DELETE)\n    public void delete(@PathVariable(\"$username\") String username) throws UserException {\n        User user = userService.get(username);\n        if (user == null ) {\n            throw new UserException(\"No user found for username \" + username);\n        }\n        userService.remove(username);\n    }", "signature": "void delete(@PathVariable(\"$username\") String username)", "full_signature": "@ResponseStatus(HttpStatus.NO_CONTENT) @RequestMapping(value = \"/users/{$username}\", method = RequestMethod.DELETE) public void delete(@PathVariable(\"$username\") String username)", "class_method_signature": "RestUserController.delete(@PathVariable(\"$username\") String username)", "testcase": false, "constructor": false, "invocations": ["get", "remove"]}, "repository": {"repo_id": 78797738, "url": "https://github.com/Apress/pivotal-certified-pro-spring-dev-exam", "language": "Java", "is_fork": false, "fork_count": 116, "stargazer_count": 82, "size": 62744, "license": "licensed"}}