{"test_class": {"identifier": "PropertyTest", "superclass": "", "interfaces": "", "fields": [], "file": "hydrograph.ui/hydrograph.ui.propertywindow/src/test/java/hydrograph/ui/propertywindow/property/PropertyTest.java"}, "test_case": {"identifier": "itShouldGiveAlmostUniqHashCode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void itShouldGiveAlmostUniqHashCode(){\n\t\t//Given\n\t\tint expectedHashCode = 790634273; \n\t\t\t\t\n\t\t//When\n\t\tProperty property=new Property.Builder(\"String\",\"delimiter\",\"TEXT\")\n\t\t.group(\"TextProperties\")\n\t\t.subGroup(\"TextSubgroup\")\n\t\t.type(\"System\").build();\n\t\t\n\t\t//Then\n\t\tassertEquals(expectedHashCode,property.hashCode());\n\t}", "signature": "void itShouldGiveAlmostUniqHashCode()", "full_signature": "@Test public void itShouldGiveAlmostUniqHashCode()", "class_method_signature": "PropertyTest.itShouldGiveAlmostUniqHashCode()", "testcase": true, "constructor": false, "invocations": ["build", "type", "subGroup", "group", "assertEquals", "hashCode"]}, "focal_class": {"identifier": "Property", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String renderer;", "modifier": "private", "type": "String", "declarator": "renderer", "var_name": "renderer"}, {"original_string": "private String dataType;", "modifier": "private", "type": "String", "declarator": "dataType", "var_name": "dataType"}, {"original_string": "private String group;", "modifier": "private", "type": "String", "declarator": "group", "var_name": "group"}, {"original_string": "private String subGroup;", "modifier": "private", "type": "String", "declarator": "subGroup", "var_name": "subGroup"}, {"original_string": "private String type;", "modifier": "private", "type": "String", "declarator": "type", "var_name": "type"}], "methods": [{"identifier": "Property", "parameters": "(Builder builder)", "modifiers": "private", "return": "", "signature": " Property(Builder builder)", "full_signature": "private  Property(Builder builder)", "class_method_signature": "Property.Property(Builder builder)", "testcase": false, "constructor": true}, {"identifier": "getPropertyName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPropertyName()", "full_signature": "public String getPropertyName()", "class_method_signature": "Property.getPropertyName()", "testcase": false, "constructor": false}, {"identifier": "getPropertyRenderer", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPropertyRenderer()", "full_signature": "public String getPropertyRenderer()", "class_method_signature": "Property.getPropertyRenderer()", "testcase": false, "constructor": false}, {"identifier": "getPropertyGroup", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPropertyGroup()", "full_signature": "public String getPropertyGroup()", "class_method_signature": "Property.getPropertyGroup()", "testcase": false, "constructor": false}, {"identifier": "getPropertySubGroupID", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPropertySubGroupID()", "full_signature": "public String getPropertySubGroupID()", "class_method_signature": "Property.getPropertySubGroupID()", "testcase": false, "constructor": false}, {"identifier": "getPropertySubGroup", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPropertySubGroup()", "full_signature": "public String getPropertySubGroup()", "class_method_signature": "Property.getPropertySubGroup()", "testcase": false, "constructor": false}, {"identifier": "getPropertyDataType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPropertyDataType()", "full_signature": "public String getPropertyDataType()", "class_method_signature": "Property.getPropertyDataType()", "testcase": false, "constructor": false}, {"identifier": "getPropertyType", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPropertyType()", "full_signature": "public String getPropertyType()", "class_method_signature": "Property.getPropertyType()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Property.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Property.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Property.toString()", "testcase": false, "constructor": false}], "file": "hydrograph.ui/hydrograph.ui.propertywindow/src/main/java/hydrograph/ui/propertywindow/property/Property.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime\n\t\t\t\t* result\n\t\t\t\t+ ((dataType == null) ? 0 : dataType.hashCode());\n\t\tresult = prime * result\n\t\t\t\t+ ((group == null) ? 0 : group.hashCode());\n\t\tresult = prime * result\n\t\t\t\t+ ((name == null) ? 0 : name.hashCode());\n\t\tresult = prime\n\t\t\t\t* result\n\t\t\t\t+ ((renderer == null) ? 0 : renderer.hashCode());\n\t\tresult = prime\n\t\t\t\t* result\n\t\t\t\t+ ((subGroup == null) ? 0 : subGroup.hashCode());\n\t\tresult = prime * result\n\t\t\t\t+ ((type == null) ? 0 : type.hashCode());\n\t\treturn result;\n\t}", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "Property.hashCode()", "testcase": false, "constructor": false, "invocations": ["hashCode", "hashCode", "hashCode", "hashCode", "hashCode", "hashCode"]}, "repository": {"repo_id": 84487370, "url": "https://github.com/BitwiseInc/Hydrograph", "language": "Java", "is_fork": false, "fork_count": 104, "stargazer_count": 139, "size": 35089, "license": "licensed"}}