{"test_class": {"identifier": "BondCountDescriptorTest", "superclass": "extends MolecularDescriptorTest", "interfaces": "", "fields": [{"original_string": "private static final SmilesParser sp = new SmilesParser(SilentChemObjectBuilder.getInstance());", "modifier": "private static final", "type": "SmilesParser", "declarator": "sp = new SmilesParser(SilentChemObjectBuilder.getInstance())", "var_name": "sp"}], "file": "descriptor/qsarmolecular/src/test/java/org/openscience/cdk/qsar/descriptors/molecular/BondCountDescriptorTest.java"}, "test_case": {"identifier": "testBondCountDescriptor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBondCountDescriptor() throws Exception {\n        Assert.assertNotNull(descriptor);\n    }", "signature": "void testBondCountDescriptor()", "full_signature": "@Test public void testBondCountDescriptor()", "class_method_signature": "BondCountDescriptorTest.testBondCountDescriptor()", "testcase": true, "constructor": false, "invocations": ["assertNotNull"]}, "focal_class": {"identifier": "BondCountDescriptor", "superclass": "extends AbstractMolecularDescriptor", "interfaces": "implements IMolecularDescriptor", "fields": [{"original_string": "private String order = \"\";", "modifier": "private", "type": "String", "declarator": "order = \"\"", "var_name": "order"}], "methods": [{"identifier": "BondCountDescriptor", "parameters": "()", "modifiers": "public", "return": "", "signature": " BondCountDescriptor()", "full_signature": "public  BondCountDescriptor()", "class_method_signature": "BondCountDescriptor.BondCountDescriptor()", "testcase": false, "constructor": true}, {"identifier": "getSpecification", "parameters": "()", "modifiers": "@Override public", "return": "DescriptorSpecification", "signature": "DescriptorSpecification getSpecification()", "full_signature": "@Override public DescriptorSpecification getSpecification()", "class_method_signature": "BondCountDescriptor.getSpecification()", "testcase": false, "constructor": false}, {"identifier": "setParameters", "parameters": "(Object[] params)", "modifiers": "@Override public", "return": "void", "signature": "void setParameters(Object[] params)", "full_signature": "@Override public void setParameters(Object[] params)", "class_method_signature": "BondCountDescriptor.setParameters(Object[] params)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] getParameters()", "full_signature": "@Override public Object[] getParameters()", "class_method_signature": "BondCountDescriptor.getParameters()", "testcase": false, "constructor": false}, {"identifier": "getDescriptorNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getDescriptorNames()", "full_signature": "@Override public String[] getDescriptorNames()", "class_method_signature": "BondCountDescriptor.getDescriptorNames()", "testcase": false, "constructor": false}, {"identifier": "calculate", "parameters": "(IAtomContainer container)", "modifiers": "@Override public", "return": "DescriptorValue", "signature": "DescriptorValue calculate(IAtomContainer container)", "full_signature": "@Override public DescriptorValue calculate(IAtomContainer container)", "class_method_signature": "BondCountDescriptor.calculate(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "bondMatch", "parameters": "(Order order, String orderString)", "modifiers": "private", "return": "boolean", "signature": "boolean bondMatch(Order order, String orderString)", "full_signature": "private boolean bondMatch(Order order, String orderString)", "class_method_signature": "BondCountDescriptor.bondMatch(Order order, String orderString)", "testcase": false, "constructor": false}, {"identifier": "getDescriptorResultType", "parameters": "()", "modifiers": "@Override public", "return": "IDescriptorResult", "signature": "IDescriptorResult getDescriptorResultType()", "full_signature": "@Override public IDescriptorResult getDescriptorResultType()", "class_method_signature": "BondCountDescriptor.getDescriptorResultType()", "testcase": false, "constructor": false}, {"identifier": "getParameterNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getParameterNames()", "full_signature": "@Override public String[] getParameterNames()", "class_method_signature": "BondCountDescriptor.getParameterNames()", "testcase": false, "constructor": false}, {"identifier": "getParameterType", "parameters": "(String name)", "modifiers": "@Override public", "return": "Object", "signature": "Object getParameterType(String name)", "full_signature": "@Override public Object getParameterType(String name)", "class_method_signature": "BondCountDescriptor.getParameterType(String name)", "testcase": false, "constructor": false}], "file": "descriptor/qsarmolecular/src/main/java/org/openscience/cdk/qsar/descriptors/molecular/BondCountDescriptor.java"}, "focal_method": {"identifier": "BondCountDescriptor", "parameters": "()", "modifiers": "public", "return": "", "body": "public BondCountDescriptor() {}", "signature": " BondCountDescriptor()", "full_signature": "public  BondCountDescriptor()", "class_method_signature": "BondCountDescriptor.BondCountDescriptor()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}