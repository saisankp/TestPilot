{"test_class": {"identifier": "OADProfileTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "byte[] rawImageA = intArrayToByteArray(new int[]{\n            0x2B, 0x65,                // CRC\n            0xFF, 0xFF,                // CRC Shadow\n            0x64, 0x00,                // Version\n            0x00, 0x7C,                // Length\n            0x41, 0x41, 0x41, 0x41,    // Image A (ASCII 41)\n            0xFF, 0xFF, 0xFF, 0xFF     // Reserved\n    });", "modifier": "", "type": "byte[]", "declarator": "rawImageA = intArrayToByteArray(new int[]{\n            0x2B, 0x65,                // CRC\n            0xFF, 0xFF,                // CRC Shadow\n            0x64, 0x00,                // Version\n            0x00, 0x7C,                // Length\n            0x41, 0x41, 0x41, 0x41,    // Image A (ASCII 41)\n            0xFF, 0xFF, 0xFF, 0xFF     // Reserved\n    })", "var_name": "rawImageA"}, {"original_string": "byte[] rawImageB = intArrayToByteArray(new int[]{\n            0x2B, 0x65,                // CRC\n            0xFF, 0xFF,                // CRC Shadow\n            0x64, 0x00,                // Version\n            0x00, 0x7C,                // Length\n            0x42, 0x42, 0x42, 0x42,    // Image B (ASCII 42)\n            0xFF, 0xFF, 0xFF, 0xFF     // Reserved\n    });", "modifier": "", "type": "byte[]", "declarator": "rawImageB = intArrayToByteArray(new int[]{\n            0x2B, 0x65,                // CRC\n            0xFF, 0xFF,                // CRC Shadow\n            0x64, 0x00,                // Version\n            0x00, 0x7C,                // Length\n            0x42, 0x42, 0x42, 0x42,    // Image B (ASCII 42)\n            0xFF, 0xFF, 0xFF, 0xFF     // Reserved\n    })", "var_name": "rawImageB"}, {"original_string": "DeviceProfile.VersionCallback fwVersionCallback;", "modifier": "", "type": "DeviceProfile.VersionCallback", "declarator": "fwVersionCallback", "var_name": "fwVersionCallback"}, {"original_string": "List<BeanError> testErrors = new ArrayList<>();", "modifier": "", "type": "List<BeanError>", "declarator": "testErrors = new ArrayList<>()", "var_name": "testErrors"}, {"original_string": "GattClient mockGattClient;", "modifier": "", "type": "GattClient", "declarator": "mockGattClient", "var_name": "mockGattClient"}, {"original_string": "BluetoothGattService mockOADService;", "modifier": "", "type": "BluetoothGattService", "declarator": "mockOADService", "var_name": "mockOADService"}, {"original_string": "BluetoothGattCharacteristic mockOADIdentify;", "modifier": "", "type": "BluetoothGattCharacteristic", "declarator": "mockOADIdentify", "var_name": "mockOADIdentify"}, {"original_string": "BluetoothGattCharacteristic mockOADBlock;", "modifier": "", "type": "BluetoothGattCharacteristic", "declarator": "mockOADBlock", "var_name": "mockOADBlock"}, {"original_string": "BluetoothGattDescriptor mockOADIdentifyDescriptor;", "modifier": "", "type": "BluetoothGattDescriptor", "declarator": "mockOADIdentifyDescriptor", "var_name": "mockOADIdentifyDescriptor"}, {"original_string": "BluetoothGattDescriptor mockOADBlockDescriptor;", "modifier": "", "type": "BluetoothGattDescriptor", "declarator": "mockOADBlockDescriptor", "var_name": "mockOADBlockDescriptor"}, {"original_string": "List<BluetoothGattService> services = new ArrayList<>();", "modifier": "", "type": "List<BluetoothGattService>", "declarator": "services = new ArrayList<>()", "var_name": "services"}, {"original_string": "DeviceProfile mockDeviceProfile;", "modifier": "", "type": "DeviceProfile", "declarator": "mockDeviceProfile", "var_name": "mockDeviceProfile"}, {"original_string": "BeanManager mockBeanManager;", "modifier": "", "type": "BeanManager", "declarator": "mockBeanManager", "var_name": "mockBeanManager"}, {"original_string": "OADProfile oadProfile;", "modifier": "", "type": "OADProfile", "declarator": "oadProfile", "var_name": "oadProfile"}], "file": "sdk/src/test/java/com/punchthrough/bean/sdk/internal/upload/firmware/OADProfileTest.java"}, "test_case": {"identifier": "testNoUpdateNeeded", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNoUpdateNeeded() throws ImageParsingException {\n        OADProfile.OADListener oadListener = mock(OADProfile.OADListener.class);\n        OADProfile.OADApproval oadApproval = oadProfile.programWithFirmware(buildBundle(), oadListener);\n        assertState(OADState.CHECKING_FW_VERSION);\n        fwVersionCallback.onComplete(\"12345\");  // Same as bundle version\n        assertState(OADState.INACTIVE);\n        verify(oadListener).updateRequired(false);\n        verify(oadListener, never()).error(any(BeanError.class));\n    }", "signature": "void testNoUpdateNeeded()", "full_signature": "@Test public void testNoUpdateNeeded()", "class_method_signature": "OADProfileTest.testNoUpdateNeeded()", "testcase": true, "constructor": false, "invocations": ["mock", "programWithFirmware", "buildBundle", "assertState", "onComplete", "assertState", "updateRequired", "verify", "error", "verify", "never", "any"]}, "focal_class": {"identifier": "OADProfile", "superclass": "extends BaseProfile", "interfaces": "", "fields": [{"original_string": "protected static final String TAG = \"OADProfile\";", "modifier": "protected static final", "type": "String", "declarator": "TAG = \"OADProfile\"", "var_name": "TAG"}, {"original_string": "private BluetoothGattCharacteristic oadIdentify;", "modifier": "private", "type": "BluetoothGattCharacteristic", "declarator": "oadIdentify", "var_name": "oadIdentify"}, {"original_string": "private BluetoothGattCharacteristic oadBlock;", "modifier": "private", "type": "BluetoothGattCharacteristic", "declarator": "oadBlock", "var_name": "oadBlock"}, {"original_string": "private Watchdog watchdog;", "modifier": "private", "type": "Watchdog", "declarator": "watchdog", "var_name": "watchdog"}, {"original_string": "private static final int OAD_TIMEOUT_SECONDS = 30;", "modifier": "private static final", "type": "int", "declarator": "OAD_TIMEOUT_SECONDS = 30", "var_name": "OAD_TIMEOUT_SECONDS"}, {"original_string": "private boolean ready = false;", "modifier": "private", "type": "boolean", "declarator": "ready = false", "var_name": "ready"}, {"original_string": "private OADState oadState = OADState.INACTIVE;", "modifier": "private", "type": "OADState", "declarator": "oadState = OADState.INACTIVE", "var_name": "oadState"}, {"original_string": "private FirmwareImage currentImage;", "modifier": "private", "type": "FirmwareImage", "declarator": "currentImage", "var_name": "currentImage"}, {"original_string": "private FirmwareBundle firmwareBundle;", "modifier": "private", "type": "FirmwareBundle", "declarator": "firmwareBundle", "var_name": "firmwareBundle"}, {"original_string": "private OADListener oadListener;", "modifier": "private", "type": "OADListener", "declarator": "oadListener", "var_name": "oadListener"}, {"original_string": "private final int MAX_IN_AIR_BLOCKS = 8;", "modifier": "private final", "type": "int", "declarator": "MAX_IN_AIR_BLOCKS = 8", "var_name": "MAX_IN_AIR_BLOCKS"}, {"original_string": "private int nextBlock = 0;", "modifier": "private", "type": "int", "declarator": "nextBlock = 0", "var_name": "nextBlock"}, {"original_string": "private long blockTransferStarted = 0;", "modifier": "private", "type": "long", "declarator": "blockTransferStarted = 0", "var_name": "blockTransferStarted"}, {"original_string": "private Watchdog.WatchdogListener watchdogListener = new Watchdog.WatchdogListener() {\n        @Override\n        public void expired() {\n            fail(BeanError.OAD_TIMEOUT);\n        }\n    };", "modifier": "private", "type": "Watchdog.WatchdogListener", "declarator": "watchdogListener = new Watchdog.WatchdogListener() {\n        @Override\n        public void expired() {\n            fail(BeanError.OAD_TIMEOUT);\n        }\n    }", "var_name": "watchdogListener"}, {"original_string": "private OADApproval oadApproval = new OADApproval() {\n\n        public boolean approved = false;\n\n        @Override\n        public void allow() {\n            Log.i(TAG, \"Client has allowed the OAD Process to continue.\");\n            approved = true;\n            startOfferingImages();\n            watchdog.start(OAD_TIMEOUT_SECONDS, watchdogListener);\n        }\n\n        @Override\n        public void deny() {\n            Log.i(TAG, \"Client denied the OAD Process from continuing.\");\n            approved = false;\n            fail(BeanError.CLIENT_REJECTED);\n        }\n\n        @Override\n        public void reset() {\n            approved = false;\n        }\n\n        @Override\n        public boolean isApproved() {\n            return approved;\n        }\n    };", "modifier": "private", "type": "OADApproval", "declarator": "oadApproval = new OADApproval() {\n\n        public boolean approved = false;\n\n        @Override\n        public void allow() {\n            Log.i(TAG, \"Client has allowed the OAD Process to continue.\");\n            approved = true;\n            startOfferingImages();\n            watchdog.start(OAD_TIMEOUT_SECONDS, watchdogListener);\n        }\n\n        @Override\n        public void deny() {\n            Log.i(TAG, \"Client denied the OAD Process from continuing.\");\n            approved = false;\n            fail(BeanError.CLIENT_REJECTED);\n        }\n\n        @Override\n        public void reset() {\n            approved = false;\n        }\n\n        @Override\n        public boolean isApproved() {\n            return approved;\n        }\n    }", "var_name": "oadApproval"}], "methods": [{"identifier": "OADProfile", "parameters": "(GattClient client, Watchdog watchdog)", "modifiers": "public", "return": "", "signature": " OADProfile(GattClient client, Watchdog watchdog)", "full_signature": "public  OADProfile(GattClient client, Watchdog watchdog)", "class_method_signature": "OADProfile.OADProfile(GattClient client, Watchdog watchdog)", "testcase": false, "constructor": true}, {"identifier": "setState", "parameters": "(OADState state)", "modifiers": "private", "return": "void", "signature": "void setState(OADState state)", "full_signature": "private void setState(OADState state)", "class_method_signature": "OADProfile.setState(OADState state)", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void reset()", "full_signature": "private void reset()", "class_method_signature": "OADProfile.reset()", "testcase": false, "constructor": false}, {"identifier": "reconnect", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void reconnect()", "full_signature": "private void reconnect()", "class_method_signature": "OADProfile.reconnect()", "testcase": false, "constructor": false}, {"identifier": "offerNextImage", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void offerNextImage()", "full_signature": "private void offerNextImage()", "class_method_signature": "OADProfile.offerNextImage()", "testcase": false, "constructor": false}, {"identifier": "startOfferingImages", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void startOfferingImages()", "full_signature": "private void startOfferingImages()", "class_method_signature": "OADProfile.startOfferingImages()", "testcase": false, "constructor": false}, {"identifier": "onNotificationIdentify", "parameters": "(BluetoothGattCharacteristic characteristic)", "modifiers": "private", "return": "void", "signature": "void onNotificationIdentify(BluetoothGattCharacteristic characteristic)", "full_signature": "private void onNotificationIdentify(BluetoothGattCharacteristic characteristic)", "class_method_signature": "OADProfile.onNotificationIdentify(BluetoothGattCharacteristic characteristic)", "testcase": false, "constructor": false}, {"identifier": "onNotificationBlock", "parameters": "(BluetoothGattCharacteristic characteristic)", "modifiers": "private", "return": "void", "signature": "void onNotificationBlock(BluetoothGattCharacteristic characteristic)", "full_signature": "private void onNotificationBlock(BluetoothGattCharacteristic characteristic)", "class_method_signature": "OADProfile.onNotificationBlock(BluetoothGattCharacteristic characteristic)", "testcase": false, "constructor": false}, {"identifier": "setupOAD", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setupOAD()", "full_signature": "private void setupOAD()", "class_method_signature": "OADProfile.setupOAD()", "testcase": false, "constructor": false}, {"identifier": "setupNotifications", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setupNotifications()", "full_signature": "private void setupNotifications()", "class_method_signature": "OADProfile.setupNotifications()", "testcase": false, "constructor": false}, {"identifier": "enableNotifyForChar", "parameters": "(BluetoothGattCharacteristic characteristic)", "modifiers": "private", "return": "boolean", "signature": "boolean enableNotifyForChar(BluetoothGattCharacteristic characteristic)", "full_signature": "private boolean enableNotifyForChar(BluetoothGattCharacteristic characteristic)", "class_method_signature": "OADProfile.enableNotifyForChar(BluetoothGattCharacteristic characteristic)", "testcase": false, "constructor": false}, {"identifier": "writeToCharacteristic", "parameters": "(BluetoothGattCharacteristic charc, byte[] data)", "modifiers": "private", "return": "boolean", "signature": "boolean writeToCharacteristic(BluetoothGattCharacteristic charc, byte[] data)", "full_signature": "private boolean writeToCharacteristic(BluetoothGattCharacteristic charc, byte[] data)", "class_method_signature": "OADProfile.writeToCharacteristic(BluetoothGattCharacteristic charc, byte[] data)", "testcase": false, "constructor": false}, {"identifier": "needsUpdate", "parameters": "(Long bundleVersion, String beanVersion)", "modifiers": "private", "return": "boolean", "signature": "boolean needsUpdate(Long bundleVersion, String beanVersion)", "full_signature": "private boolean needsUpdate(Long bundleVersion, String beanVersion)", "class_method_signature": "OADProfile.needsUpdate(Long bundleVersion, String beanVersion)", "testcase": false, "constructor": false}, {"identifier": "checkFirmwareVersion", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void checkFirmwareVersion()", "full_signature": "private void checkFirmwareVersion()", "class_method_signature": "OADProfile.checkFirmwareVersion()", "testcase": false, "constructor": false}, {"identifier": "fail", "parameters": "(BeanError error)", "modifiers": "private", "return": "void", "signature": "void fail(BeanError error)", "full_signature": "private void fail(BeanError error)", "class_method_signature": "OADProfile.fail(BeanError error)", "testcase": false, "constructor": false}, {"identifier": "finishUpdateOccurred", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void finishUpdateOccurred()", "full_signature": "private void finishUpdateOccurred()", "class_method_signature": "OADProfile.finishUpdateOccurred()", "testcase": false, "constructor": false}, {"identifier": "finishNoUpdateOccurred", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void finishNoUpdateOccurred()", "full_signature": "private void finishNoUpdateOccurred()", "class_method_signature": "OADProfile.finishNoUpdateOccurred()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "OADProfile.getName()", "testcase": false, "constructor": false}, {"identifier": "isReady", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isReady()", "full_signature": "public boolean isReady()", "class_method_signature": "OADProfile.isReady()", "testcase": false, "constructor": false}, {"identifier": "clearReady", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearReady()", "full_signature": "public void clearReady()", "class_method_signature": "OADProfile.clearReady()", "testcase": false, "constructor": false}, {"identifier": "uploadInProgress", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean uploadInProgress()", "full_signature": "public boolean uploadInProgress()", "class_method_signature": "OADProfile.uploadInProgress()", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "()", "modifiers": "public", "return": "OADState", "signature": "OADState getState()", "full_signature": "public OADState getState()", "class_method_signature": "OADProfile.getState()", "testcase": false, "constructor": false}, {"identifier": "onProfileReady", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onProfileReady()", "full_signature": "@Override public void onProfileReady()", "class_method_signature": "OADProfile.onProfileReady()", "testcase": false, "constructor": false}, {"identifier": "continueOAD", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void continueOAD()", "full_signature": "public void continueOAD()", "class_method_signature": "OADProfile.continueOAD()", "testcase": false, "constructor": false}, {"identifier": "onBeanConnected", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onBeanConnected()", "full_signature": "@Override public void onBeanConnected()", "class_method_signature": "OADProfile.onBeanConnected()", "testcase": false, "constructor": false}, {"identifier": "onBeanDisconnected", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onBeanDisconnected()", "full_signature": "@Override public void onBeanDisconnected()", "class_method_signature": "OADProfile.onBeanDisconnected()", "testcase": false, "constructor": false}, {"identifier": "onBeanConnectionFailed", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onBeanConnectionFailed()", "full_signature": "@Override public void onBeanConnectionFailed()", "class_method_signature": "OADProfile.onBeanConnectionFailed()", "testcase": false, "constructor": false}, {"identifier": "onCharacteristicChanged", "parameters": "(GattClient client, BluetoothGattCharacteristic characteristic)", "modifiers": "@Override public", "return": "void", "signature": "void onCharacteristicChanged(GattClient client, BluetoothGattCharacteristic characteristic)", "full_signature": "@Override public void onCharacteristicChanged(GattClient client, BluetoothGattCharacteristic characteristic)", "class_method_signature": "OADProfile.onCharacteristicChanged(GattClient client, BluetoothGattCharacteristic characteristic)", "testcase": false, "constructor": false}, {"identifier": "programWithFirmware", "parameters": "(final FirmwareBundle bundle, OADListener listener)", "modifiers": "public", "return": "OADApproval", "signature": "OADApproval programWithFirmware(final FirmwareBundle bundle, OADListener listener)", "full_signature": "public OADApproval programWithFirmware(final FirmwareBundle bundle, OADListener listener)", "class_method_signature": "OADProfile.programWithFirmware(final FirmwareBundle bundle, OADListener listener)", "testcase": false, "constructor": false}], "file": "sdk/src/main/java/com/punchthrough/bean/sdk/internal/upload/firmware/OADProfile.java"}, "focal_method": {"identifier": "programWithFirmware", "parameters": "(final FirmwareBundle bundle, OADListener listener)", "modifiers": "public", "return": "OADApproval", "body": "public OADApproval programWithFirmware(final FirmwareBundle bundle, OADListener listener) {\n\n        if (!mGattClient.isConnected()) {\n            listener.error(BeanError.NOT_CONNECTED);\n        }\n\n        Log.i(TAG, \"Starting firmware update procedure\");\n\n        // Save state for this firmware procedure\n        this.oadListener = listener;\n        this.firmwareBundle = bundle;\n\n        watchdog.start(OAD_TIMEOUT_SECONDS, watchdogListener);\n        checkFirmwareVersion();\n\n        return this.oadApproval;\n    }", "signature": "OADApproval programWithFirmware(final FirmwareBundle bundle, OADListener listener)", "full_signature": "public OADApproval programWithFirmware(final FirmwareBundle bundle, OADListener listener)", "class_method_signature": "OADProfile.programWithFirmware(final FirmwareBundle bundle, OADListener listener)", "testcase": false, "constructor": false, "invocations": ["isConnected", "error", "i", "start", "checkFirmwareVersion"]}, "repository": {"repo_id": 33499067, "url": "https://github.com/PunchThrough/bean-sdk-android", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 55, "size": 2818, "license": "licensed"}}