{"test_class": {"identifier": "ExplicitConnectionAtomTest", "superclass": "", "interfaces": "", "fields": [], "file": "legacy/src/test/java/org/openscience/cdk/isomorphism/matchers/smarts/ExplicitConnectionAtomTest.java"}, "test_case": {"identifier": "matches", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void matches() throws Exception {\n        ExplicitConnectionAtom matcher = new ExplicitConnectionAtom(2, mock(IChemObjectBuilder.class));\n        IAtom atom = mock(IAtom.class);\n        when(atom.getProperty(SMARTSAtomInvariants.KEY)).thenReturn(\n                new SMARTSAtomInvariants(mock(IAtomContainer.class), 0, 0, Collections.<Integer> emptySet(), 0, 0, // <- degree not used due to old CDK bug\n                        2, 0));\n        assertTrue(matcher.matches(atom));\n    }", "signature": "void matches()", "full_signature": "@Test public void matches()", "class_method_signature": "ExplicitConnectionAtomTest.matches()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getProperty", "mock", "emptySet", "assertTrue", "matches"]}, "focal_class": {"identifier": "ExplicitConnectionAtom", "superclass": "extends SMARTSAtom", "interfaces": "", "fields": [{"original_string": "private int degree;", "modifier": "private", "type": "int", "declarator": "degree", "var_name": "degree"}], "methods": [{"identifier": "ExplicitConnectionAtom", "parameters": "(int degree, IChemObjectBuilder builder)", "modifiers": "public", "return": "", "signature": " ExplicitConnectionAtom(int degree, IChemObjectBuilder builder)", "full_signature": "public  ExplicitConnectionAtom(int degree, IChemObjectBuilder builder)", "class_method_signature": "ExplicitConnectionAtom.ExplicitConnectionAtom(int degree, IChemObjectBuilder builder)", "testcase": false, "constructor": true}, {"identifier": "matches", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean matches(IAtom atom)", "full_signature": "@Override public boolean matches(IAtom atom)", "class_method_signature": "ExplicitConnectionAtom.matches(IAtom atom)", "testcase": false, "constructor": false}], "file": "legacy/src/main/java/org/openscience/cdk/isomorphism/matchers/smarts/ExplicitConnectionAtom.java"}, "focal_method": {"identifier": "matches", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean matches(IAtom atom) {\n        // XXX: this is incorrect but bug 824 expects this behaviour. The reason\n        //      Daylight matches is because the explicit hydrogens are\n        //      suppressed by default turning on explicit hydrogens in depict\n        //      match shows correct functionality. Discussion needed to revert\n        //      but because other invariants aren't adjusted (implicit h) we\n        //      can't really do this and the correct option is to enable/disable\n        //      hydrogen suppression (removal of explicit H atoms) as a prepossessing\n        //      step\n        return invariants(atom).connectivity() - invariants(atom).totalHydrogenCount() == degree;\n    }", "signature": "boolean matches(IAtom atom)", "full_signature": "@Override public boolean matches(IAtom atom)", "class_method_signature": "ExplicitConnectionAtom.matches(IAtom atom)", "testcase": false, "constructor": false, "invocations": ["connectivity", "invariants", "totalHydrogenCount", "invariants"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}