{"test_class": {"identifier": "TestEidasSaml", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_P12 = \"/eidassignertest.p12\";", "modifier": "private static final", "type": "String", "declarator": "TEST_P12 = \"/eidassignertest.p12\"", "var_name": "TEST_P12"}], "file": "eidas-starterkit/src/test/java/de/governikus/eumw/eidasstarterkit/TestEidasSaml.java"}, "test_case": {"identifier": "createParseResponse", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void createParseResponse() throws CertificateException, IOException, UnrecoverableKeyException,\n    KeyStoreException, NoSuchAlgorithmException, NoSuchProviderException, KeyException, XMLParserException,\n    UnmarshallingException, EncryptionException, MarshallingException, SignatureException,\n    TransformerFactoryConfigurationError, TransformerException, ErrorCodeException, InitializationException,\n    ComponentInitializationException\n  {\n    BirthNameAttribute birthName = new BirthNameAttribute(\"Meyer\");\n    CurrentAddressAttribute currentAddress = new CurrentAddressAttribute(\"Am Fallturm\", \"33\", \"Bremen\",\n                                                                         \"28207\", \"100\", \"bla\", \"bla\", \"bla\",\n                                                                         \"bla\");\n    DateOfBirthAttribute dao = new DateOfBirthAttribute(\"1982-02-11\");\n    FamilyNameAttribute familyName = new FamilyNameAttribute(\"Muller\", \"M\u00fcller\");\n    GenderAttribute gender = new GenderAttribute(GenderType.MALE);\n    GivenNameAttribute givenName = new GivenNameAttribute(\"Bjorn\", \"Bj\u00f8rn\");\n    PersonIdentifierAttribute pi = new PersonIdentifierAttribute(\"test12321\");\n    PlaceOfBirthAttribute pob = new PlaceOfBirthAttribute(\"Saint-\u00c9tienne, France\");\n    ArrayList<EidasAttribute> att = new ArrayList<>();\n    att.add(birthName);\n    att.add(currentAddress);\n    att.add(dao);\n    att.add(familyName);\n    att.add(gender);\n    att.add(givenName);\n    att.add(pi);\n    att.add(pob);\n\n    String destination = \"test destination\";\n    String recipient = \"test_recipient\";\n    EidasNameId nameid = new EidasPersistentNameId(\"eidasnameidTest\");\n    String issuer = \"test issuer\";\n    String inResponseTo = \"test inResponseTo\";\n    EidasLoA loa = EidasLoA.SUBSTANTIAL;\n    X509Certificate[] cert = {Utils.readCert(TestEidasSaml.class.getResourceAsStream(\"/EidasSignerTest_x509.cer\"))};\n    X509KeyPair[] keypair = {Utils.readPKCS12(TestEidasSaml.class.getResourceAsStream(TEST_P12),\n                                              \"123456\".toCharArray())};\n    PrivateKey pk = keypair[0].getKey();\n    EidasEncrypter encrypter = new EidasEncrypter(true, cert[0]);\n    EidasSigner signer = new EidasSigner(true, pk, cert[0]);\n\n    byte[] response = EidasSaml.createResponse(att,\n                                               destination,\n                                               recipient,\n                                               nameid,\n                                               issuer,\n                                               loa,\n                                               inResponseTo,\n                                               encrypter,\n                                               signer);\n    System.out.println(\"-->>Response-->>\" + new String(response));\n\n    EidasResponse result = EidasResponse.parse(new ByteArrayInputStream(response), keypair, cert);\n\n    assertEquals(result.getDestination(), destination);\n    assertEquals(result.getNameId().getValue(), nameid.getValue());\n    assertEquals(result.getIssuer(), issuer);\n    assertEquals(result.getInResponseTo(), inResponseTo);\n    for ( int i = 0 ; i < att.size() ; i++ )\n    {\n      assertEquals(result.getAttributes().get(i).getLatinScript().replaceAll(\"\\\\s+\", \"\"),\n                   att.get(i).getLatinScript().replaceAll(\"\\\\s+\", \"\"));\n    }\n\n  }", "signature": "void createParseResponse()", "full_signature": "@Test public void createParseResponse()", "class_method_signature": "TestEidasSaml.createParseResponse()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "add", "add", "add", "add", "readCert", "getResourceAsStream", "readPKCS12", "getResourceAsStream", "toCharArray", "getKey", "createResponse", "println", "parse", "assertEquals", "getDestination", "assertEquals", "getValue", "getNameId", "getValue", "assertEquals", "getIssuer", "assertEquals", "getInResponseTo", "size", "assertEquals", "replaceAll", "getLatinScript", "get", "getAttributes", "replaceAll", "getLatinScript", "get"]}, "focal_class": {"identifier": "EidasSaml", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static boolean isInit = false;", "modifier": "private static", "type": "boolean", "declarator": "isInit = false", "var_name": "isInit"}], "methods": [{"identifier": "init", "parameters": "()", "modifiers": "public static synchronized", "return": "void", "signature": "void init()", "full_signature": "public static synchronized void init()", "class_method_signature": "EidasSaml.init()", "testcase": false, "constructor": false}, {"identifier": "createRequest", "parameters": "(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes)", "full_signature": "public static byte[] createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes)", "class_method_signature": "EidasSaml.createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes)", "testcase": false, "constructor": false}, {"identifier": "createRequest", "parameters": "(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     String id)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     String id)", "full_signature": "public static byte[] createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     String id)", "class_method_signature": "EidasSaml.createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     String id)", "testcase": false, "constructor": false}, {"identifier": "createRequest", "parameters": "(String issuer,\n                                     String destination,\n                                     String providerName,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createRequest(String issuer,\n                                     String destination,\n                                     String providerName,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "full_signature": "public static byte[] createRequest(String issuer,\n                                     String destination,\n                                     String providerName,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "class_method_signature": "EidasSaml.createRequest(String issuer,\n                                     String destination,\n                                     String providerName,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "testcase": false, "constructor": false}, {"identifier": "createRequest", "parameters": "(String id,\n                                     String issuer,\n                                     String destination,\n                                     String providerName,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createRequest(String id,\n                                     String issuer,\n                                     String destination,\n                                     String providerName,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "full_signature": "public static byte[] createRequest(String id,\n                                     String issuer,\n                                     String destination,\n                                     String providerName,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "class_method_signature": "EidasSaml.createRequest(String id,\n                                     String issuer,\n                                     String destination,\n                                     String providerName,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "testcase": false, "constructor": false}, {"identifier": "createRequest", "parameters": "(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "full_signature": "public static byte[] createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "class_method_signature": "EidasSaml.createRequest(String issuer,\n                                     String destination,\n                                     EidasSigner signer,\n                                     Map<EidasPersonAttributes, Boolean> requestedAttributes,\n                                     EidasRequestSectorType sectorType,\n                                     EidasNameIdType nameIdPolicy,\n                                     EidasLoA loa)", "testcase": false, "constructor": false}, {"identifier": "parseRequest", "parameters": "(InputStream is)", "modifiers": "public static", "return": "EidasRequest", "signature": "EidasRequest parseRequest(InputStream is)", "full_signature": "public static EidasRequest parseRequest(InputStream is)", "class_method_signature": "EidasSaml.parseRequest(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "parseRequest", "parameters": "(InputStream is, List<X509Certificate> authors)", "modifiers": "public static", "return": "EidasRequest", "signature": "EidasRequest parseRequest(InputStream is, List<X509Certificate> authors)", "full_signature": "public static EidasRequest parseRequest(InputStream is, List<X509Certificate> authors)", "class_method_signature": "EidasSaml.parseRequest(InputStream is, List<X509Certificate> authors)", "testcase": false, "constructor": false}, {"identifier": "verifyRequest", "parameters": "(EidasRequest request, List<X509Certificate> authors)", "modifiers": "public static", "return": "void", "signature": "void verifyRequest(EidasRequest request, List<X509Certificate> authors)", "full_signature": "public static void verifyRequest(EidasRequest request, List<X509Certificate> authors)", "class_method_signature": "EidasSaml.verifyRequest(EidasRequest request, List<X509Certificate> authors)", "testcase": false, "constructor": false}, {"identifier": "createResponse", "parameters": "(List<EidasAttribute> att,\n                                      String destination,\n                                      String recipient,\n                                      EidasNameId nameid,\n                                      String issuer,\n                                      EidasLoA loa,\n                                      String inResponseTo,\n                                      EidasEncrypter encrypter,\n                                      EidasSigner signer)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createResponse(List<EidasAttribute> att,\n                                      String destination,\n                                      String recipient,\n                                      EidasNameId nameid,\n                                      String issuer,\n                                      EidasLoA loa,\n                                      String inResponseTo,\n                                      EidasEncrypter encrypter,\n                                      EidasSigner signer)", "full_signature": "public static byte[] createResponse(List<EidasAttribute> att,\n                                      String destination,\n                                      String recipient,\n                                      EidasNameId nameid,\n                                      String issuer,\n                                      EidasLoA loa,\n                                      String inResponseTo,\n                                      EidasEncrypter encrypter,\n                                      EidasSigner signer)", "class_method_signature": "EidasSaml.createResponse(List<EidasAttribute> att,\n                                      String destination,\n                                      String recipient,\n                                      EidasNameId nameid,\n                                      String issuer,\n                                      EidasLoA loa,\n                                      String inResponseTo,\n                                      EidasEncrypter encrypter,\n                                      EidasSigner signer)", "testcase": false, "constructor": false}, {"identifier": "parseResponse", "parameters": "(InputStream is,\n                                            X509KeyPair[] decryptionKeyPairs,\n                                            X509Certificate[] signatureAuthors)", "modifiers": "public static", "return": "EidasResponse", "signature": "EidasResponse parseResponse(InputStream is,\n                                            X509KeyPair[] decryptionKeyPairs,\n                                            X509Certificate[] signatureAuthors)", "full_signature": "public static EidasResponse parseResponse(InputStream is,\n                                            X509KeyPair[] decryptionKeyPairs,\n                                            X509Certificate[] signatureAuthors)", "class_method_signature": "EidasSaml.parseResponse(InputStream is,\n                                            X509KeyPair[] decryptionKeyPairs,\n                                            X509Certificate[] signatureAuthors)", "testcase": false, "constructor": false}, {"identifier": "createMetaDataService", "parameters": "(String id,\n                                             String entityId,\n                                             Date validUntil,\n                                             X509Certificate sigCert,\n                                             X509Certificate encCert,\n                                             EidasOrganisation organisation,\n                                             EidasContactPerson technicalcontact,\n                                             EidasContactPerson supportContact,\n                                             String postEndpoint,\n                                             String redirectEndpoint,\n                                             List<EidasNameIdType> supportedNameIdTypes,\n                                             List<EidasPersonAttributes> attributes,\n                                             EidasSigner signer,\n                                             String middlewareVersion,\n                                             boolean doSign,\n                                             boolean requesterIdFlag)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createMetaDataService(String id,\n                                             String entityId,\n                                             Date validUntil,\n                                             X509Certificate sigCert,\n                                             X509Certificate encCert,\n                                             EidasOrganisation organisation,\n                                             EidasContactPerson technicalcontact,\n                                             EidasContactPerson supportContact,\n                                             String postEndpoint,\n                                             String redirectEndpoint,\n                                             List<EidasNameIdType> supportedNameIdTypes,\n                                             List<EidasPersonAttributes> attributes,\n                                             EidasSigner signer,\n                                             String middlewareVersion,\n                                             boolean doSign,\n                                             boolean requesterIdFlag)", "full_signature": "public static byte[] createMetaDataService(String id,\n                                             String entityId,\n                                             Date validUntil,\n                                             X509Certificate sigCert,\n                                             X509Certificate encCert,\n                                             EidasOrganisation organisation,\n                                             EidasContactPerson technicalcontact,\n                                             EidasContactPerson supportContact,\n                                             String postEndpoint,\n                                             String redirectEndpoint,\n                                             List<EidasNameIdType> supportedNameIdTypes,\n                                             List<EidasPersonAttributes> attributes,\n                                             EidasSigner signer,\n                                             String middlewareVersion,\n                                             boolean doSign,\n                                             boolean requesterIdFlag)", "class_method_signature": "EidasSaml.createMetaDataService(String id,\n                                             String entityId,\n                                             Date validUntil,\n                                             X509Certificate sigCert,\n                                             X509Certificate encCert,\n                                             EidasOrganisation organisation,\n                                             EidasContactPerson technicalcontact,\n                                             EidasContactPerson supportContact,\n                                             String postEndpoint,\n                                             String redirectEndpoint,\n                                             List<EidasNameIdType> supportedNameIdTypes,\n                                             List<EidasPersonAttributes> attributes,\n                                             EidasSigner signer,\n                                             String middlewareVersion,\n                                             boolean doSign,\n                                             boolean requesterIdFlag)", "testcase": false, "constructor": false}, {"identifier": "parseMetaDataService", "parameters": "(InputStream is)", "modifiers": "static", "return": "EidasMetadataService", "signature": "EidasMetadataService parseMetaDataService(InputStream is)", "full_signature": "static EidasMetadataService parseMetaDataService(InputStream is)", "class_method_signature": "EidasSaml.parseMetaDataService(InputStream is)", "testcase": false, "constructor": false}, {"identifier": "createMetaDataNode", "parameters": "(String id,\n                                          String entityId,\n                                          Date validUntil,\n                                          X509Certificate sigCert,\n                                          X509Certificate encCert,\n                                          EidasOrganisation organisation,\n                                          EidasContactPerson techcontact,\n                                          EidasContactPerson supportcontact,\n                                          String postEndpoint,\n                                          EidasRequestSectorType spType,\n                                          List<EidasNameIdType> supportedNameIdTypes,\n                                          EidasSigner signer)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] createMetaDataNode(String id,\n                                          String entityId,\n                                          Date validUntil,\n                                          X509Certificate sigCert,\n                                          X509Certificate encCert,\n                                          EidasOrganisation organisation,\n                                          EidasContactPerson techcontact,\n                                          EidasContactPerson supportcontact,\n                                          String postEndpoint,\n                                          EidasRequestSectorType spType,\n                                          List<EidasNameIdType> supportedNameIdTypes,\n                                          EidasSigner signer)", "full_signature": "public static byte[] createMetaDataNode(String id,\n                                          String entityId,\n                                          Date validUntil,\n                                          X509Certificate sigCert,\n                                          X509Certificate encCert,\n                                          EidasOrganisation organisation,\n                                          EidasContactPerson techcontact,\n                                          EidasContactPerson supportcontact,\n                                          String postEndpoint,\n                                          EidasRequestSectorType spType,\n                                          List<EidasNameIdType> supportedNameIdTypes,\n                                          EidasSigner signer)", "class_method_signature": "EidasSaml.createMetaDataNode(String id,\n                                          String entityId,\n                                          Date validUntil,\n                                          X509Certificate sigCert,\n                                          X509Certificate encCert,\n                                          EidasOrganisation organisation,\n                                          EidasContactPerson techcontact,\n                                          EidasContactPerson supportcontact,\n                                          String postEndpoint,\n                                          EidasRequestSectorType spType,\n                                          List<EidasNameIdType> supportedNameIdTypes,\n                                          EidasSigner signer)", "testcase": false, "constructor": false}, {"identifier": "parseMetaDataNode", "parameters": "(InputStream is, X509Certificate signer)", "modifiers": "public static", "return": "EidasMetadataNode", "signature": "EidasMetadataNode parseMetaDataNode(InputStream is, X509Certificate signer)", "full_signature": "public static EidasMetadataNode parseMetaDataNode(InputStream is, X509Certificate signer)", "class_method_signature": "EidasSaml.parseMetaDataNode(InputStream is, X509Certificate signer)", "testcase": false, "constructor": false}, {"identifier": "validateXMLRequest", "parameters": "(InputStream is, boolean resetStreamAfterValidation)", "modifiers": "public static", "return": "void", "signature": "void validateXMLRequest(InputStream is, boolean resetStreamAfterValidation)", "full_signature": "public static void validateXMLRequest(InputStream is, boolean resetStreamAfterValidation)", "class_method_signature": "EidasSaml.validateXMLRequest(InputStream is, boolean resetStreamAfterValidation)", "testcase": false, "constructor": false}, {"identifier": "EidasSaml", "parameters": "()", "modifiers": "private", "return": "", "signature": " EidasSaml()", "full_signature": "private  EidasSaml()", "class_method_signature": "EidasSaml.EidasSaml()", "testcase": false, "constructor": true}], "file": "eidas-starterkit/src/main/java/de/governikus/eumw/eidasstarterkit/EidasSaml.java"}, "focal_method": {"identifier": "createResponse", "parameters": "(List<EidasAttribute> att,\n                                      String destination,\n                                      String recipient,\n                                      EidasNameId nameid,\n                                      String issuer,\n                                      EidasLoA loa,\n                                      String inResponseTo,\n                                      EidasEncrypter encrypter,\n                                      EidasSigner signer)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] createResponse(List<EidasAttribute> att,\n                                      String destination,\n                                      String recipient,\n                                      EidasNameId nameid,\n                                      String issuer,\n                                      EidasLoA loa,\n                                      String inResponseTo,\n                                      EidasEncrypter encrypter,\n                                      EidasSigner signer)\n    throws InitializationException, CertificateEncodingException, XMLParserException, IOException,\n    UnmarshallingException, EncryptionException, MarshallingException, SignatureException,\n    TransformerFactoryConfigurationError, TransformerException, ComponentInitializationException\n  {\n    init();\n    EidasResponse response = new EidasResponse(att, destination, recipient, nameid, inResponseTo, issuer, loa,\n                                               signer, encrypter);\n    return response.generate();\n  }", "signature": "byte[] createResponse(List<EidasAttribute> att,\n                                      String destination,\n                                      String recipient,\n                                      EidasNameId nameid,\n                                      String issuer,\n                                      EidasLoA loa,\n                                      String inResponseTo,\n                                      EidasEncrypter encrypter,\n                                      EidasSigner signer)", "full_signature": "public static byte[] createResponse(List<EidasAttribute> att,\n                                      String destination,\n                                      String recipient,\n                                      EidasNameId nameid,\n                                      String issuer,\n                                      EidasLoA loa,\n                                      String inResponseTo,\n                                      EidasEncrypter encrypter,\n                                      EidasSigner signer)", "class_method_signature": "EidasSaml.createResponse(List<EidasAttribute> att,\n                                      String destination,\n                                      String recipient,\n                                      EidasNameId nameid,\n                                      String issuer,\n                                      EidasLoA loa,\n                                      String inResponseTo,\n                                      EidasEncrypter encrypter,\n                                      EidasSigner signer)", "testcase": false, "constructor": false, "invocations": ["init", "generate"]}, "repository": {"repo_id": 133799133, "url": "https://github.com/Governikus/eidas-middleware", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 15, "size": 2286, "license": "licensed"}}