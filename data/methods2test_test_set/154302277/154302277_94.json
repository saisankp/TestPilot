{"test_class": {"identifier": "ProtocolRequestMessageSenderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private ProtocolRequestMessageSender messageSender;", "modifier": "@Autowired\n    private", "type": "ProtocolRequestMessageSender", "declarator": "messageSender", "var_name": "messageSender"}, {"original_string": "@Autowired\n    private int messageGroupCacheSize;", "modifier": "@Autowired\n    private", "type": "int", "declarator": "messageGroupCacheSize", "var_name": "messageGroupCacheSize"}], "file": "osgp/platform/osgp-core/src/test/java/org/opensmartgridplatform/core/infra/jms/protocol/outbound/ProtocolRequestMessageSenderTest.java"}, "test_case": {"identifier": "testMessageGroupIdShouldBeBetween0AndCacheSize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMessageGroupIdShouldBeBetween0AndCacheSize() {\n        for (int i = 0; i < 10000; i++) {\n            final String uuid = UUID.randomUUID().toString();\n            final String messageGroupId = this.messageSender.getMessageGroupId(uuid);\n            final int actual = Integer.valueOf(messageGroupId);\n\n            assertThat(actual >= 0 && actual < this.messageGroupCacheSize)\n                    .as(\"Message group id should be between 0 and cache size \" + this.messageGroupCacheSize).isTrue();\n        }\n    }", "signature": "void testMessageGroupIdShouldBeBetween0AndCacheSize()", "full_signature": "@Test public void testMessageGroupIdShouldBeBetween0AndCacheSize()", "class_method_signature": "ProtocolRequestMessageSenderTest.testMessageGroupIdShouldBeBetween0AndCacheSize()", "testcase": true, "constructor": false, "invocations": ["toString", "randomUUID", "getMessageGroupId", "valueOf", "isTrue", "as", "assertThat"]}, "focal_class": {"identifier": "ProtocolRequestMessageSender", "superclass": "", "interfaces": "implements ProtocolRequestService", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ProtocolRequestMessageSender.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ProtocolRequestMessageSender.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private int messageGroupCacheSize;", "modifier": "@Autowired\n    private", "type": "int", "declarator": "messageGroupCacheSize", "var_name": "messageGroupCacheSize"}, {"original_string": "@Autowired\n    private CoreLogItemRequestMessageSender coreLogItemRequestMessageSender;", "modifier": "@Autowired\n    private", "type": "CoreLogItemRequestMessageSender", "declarator": "coreLogItemRequestMessageSender", "var_name": "coreLogItemRequestMessageSender"}, {"original_string": "@Autowired\n    private ProtocolRequestMessageJmsTemplateFactory protocolRequestMessageJmsTemplateFactory;", "modifier": "@Autowired\n    private", "type": "ProtocolRequestMessageJmsTemplateFactory", "declarator": "protocolRequestMessageJmsTemplateFactory", "var_name": "protocolRequestMessageJmsTemplateFactory"}, {"original_string": "@Autowired\n    private Long getPowerUsageHistoryRequestTimeToLive;", "modifier": "@Autowired\n    private", "type": "Long", "declarator": "getPowerUsageHistoryRequestTimeToLive", "var_name": "getPowerUsageHistoryRequestTimeToLive"}], "methods": [{"identifier": "isSupported", "parameters": "(final ProtocolInfo protocolInfo)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSupported(final ProtocolInfo protocolInfo)", "full_signature": "@Override public boolean isSupported(final ProtocolInfo protocolInfo)", "class_method_signature": "ProtocolRequestMessageSender.isSupported(final ProtocolInfo protocolInfo)", "testcase": false, "constructor": false}, {"identifier": "send", "parameters": "(final ProtocolRequestMessage message, final ProtocolInfo protocolInfo)", "modifiers": "@Override public", "return": "void", "signature": "void send(final ProtocolRequestMessage message, final ProtocolInfo protocolInfo)", "full_signature": "@Override public void send(final ProtocolRequestMessage message, final ProtocolInfo protocolInfo)", "class_method_signature": "ProtocolRequestMessageSender.send(final ProtocolRequestMessage message, final ProtocolInfo protocolInfo)", "testcase": false, "constructor": false}, {"identifier": "sendMessage", "parameters": "(final ProtocolRequestMessage requestMessage, final ProtocolInfo protocolInfo,\n            final JmsTemplate jmsTemplate)", "modifiers": "private", "return": "void", "signature": "void sendMessage(final ProtocolRequestMessage requestMessage, final ProtocolInfo protocolInfo,\n            final JmsTemplate jmsTemplate)", "full_signature": "private void sendMessage(final ProtocolRequestMessage requestMessage, final ProtocolInfo protocolInfo,\n            final JmsTemplate jmsTemplate)", "class_method_signature": "ProtocolRequestMessageSender.sendMessage(final ProtocolRequestMessage requestMessage, final ProtocolInfo protocolInfo,\n            final JmsTemplate jmsTemplate)", "testcase": false, "constructor": false}, {"identifier": "createObjectMessage", "parameters": "(ProtocolRequestMessage requestMessage, ProtocolInfo protocolInfo,\n            Session session)", "modifiers": "private", "return": "ObjectMessage", "signature": "ObjectMessage createObjectMessage(ProtocolRequestMessage requestMessage, ProtocolInfo protocolInfo,\n            Session session)", "full_signature": "private ObjectMessage createObjectMessage(ProtocolRequestMessage requestMessage, ProtocolInfo protocolInfo,\n            Session session)", "class_method_signature": "ProtocolRequestMessageSender.createObjectMessage(ProtocolRequestMessage requestMessage, ProtocolInfo protocolInfo,\n            Session session)", "testcase": false, "constructor": false}, {"identifier": "getMessageGroupId", "parameters": "(final String deviceIdentification)", "modifiers": "protected", "return": "String", "signature": "String getMessageGroupId(final String deviceIdentification)", "full_signature": "protected String getMessageGroupId(final String deviceIdentification)", "class_method_signature": "ProtocolRequestMessageSender.getMessageGroupId(final String deviceIdentification)", "testcase": false, "constructor": false}], "file": "osgp/platform/osgp-core/src/main/java/org/opensmartgridplatform/core/infra/jms/protocol/outbound/ProtocolRequestMessageSender.java"}, "focal_method": {"identifier": "getMessageGroupId", "parameters": "(final String deviceIdentification)", "modifiers": "protected", "return": "String", "body": "protected String getMessageGroupId(final String deviceIdentification) {\n        return String.valueOf(Math.abs(deviceIdentification.hashCode() % this.messageGroupCacheSize));\n    }", "signature": "String getMessageGroupId(final String deviceIdentification)", "full_signature": "protected String getMessageGroupId(final String deviceIdentification)", "class_method_signature": "ProtocolRequestMessageSender.getMessageGroupId(final String deviceIdentification)", "testcase": false, "constructor": false, "invocations": ["valueOf", "abs", "hashCode"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}