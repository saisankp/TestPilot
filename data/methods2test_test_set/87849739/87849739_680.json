{"test_class": {"identifier": "MongoClientWrapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int KNOWN_MAX_POOL_SIZE = 100;", "modifier": "private static final", "type": "int", "declarator": "KNOWN_MAX_POOL_SIZE = 100", "var_name": "KNOWN_MAX_POOL_SIZE"}, {"original_string": "private static final int KNOWN_MAX_POOL_WAIT_QUEUE_SIZE = 5000;", "modifier": "private static final", "type": "int", "declarator": "KNOWN_MAX_POOL_WAIT_QUEUE_SIZE = 5000", "var_name": "KNOWN_MAX_POOL_WAIT_QUEUE_SIZE"}, {"original_string": "private static final long KNOWN_MAX_POOL_WAIT_SECS = 10L;", "modifier": "private static final", "type": "long", "declarator": "KNOWN_MAX_POOL_WAIT_SECS = 10L", "var_name": "KNOWN_MAX_POOL_WAIT_SECS"}, {"original_string": "private static final String KNOWN_DB_NAME = \"someGeneratedName\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_DB_NAME = \"someGeneratedName\"", "var_name": "KNOWN_DB_NAME"}, {"original_string": "private static final String KNOWN_USER = \"theUser\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_USER = \"theUser\"", "var_name": "KNOWN_USER"}, {"original_string": "private static final String KNOWN_PASSWORD = \"thePassword\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_PASSWORD = \"thePassword\"", "var_name": "KNOWN_PASSWORD"}, {"original_string": "private static final String KNOWN_HOST = \"xy.example.org\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_HOST = \"xy.example.org\"", "var_name": "KNOWN_HOST"}, {"original_string": "private static final int KNOWN_PORT = 27777;", "modifier": "private static final", "type": "int", "declarator": "KNOWN_PORT = 27777", "var_name": "KNOWN_PORT"}, {"original_string": "private static final String KNOWN_SERVER_ADDRESS = KNOWN_HOST + \":\" + KNOWN_PORT;", "modifier": "private static final", "type": "String", "declarator": "KNOWN_SERVER_ADDRESS = KNOWN_HOST + \":\" + KNOWN_PORT", "var_name": "KNOWN_SERVER_ADDRESS"}, {"original_string": "private static final Duration KNOWN_MAX_QUERY_TIME = Duration.ofSeconds(13);", "modifier": "private static final", "type": "Duration", "declarator": "KNOWN_MAX_QUERY_TIME = Duration.ofSeconds(13)", "var_name": "KNOWN_MAX_QUERY_TIME"}, {"original_string": "private static final Config CONFIG = ConfigFactory.load(\"test\");", "modifier": "private static final", "type": "Config", "declarator": "CONFIG = ConfigFactory.load(\"test\")", "var_name": "CONFIG"}, {"original_string": "private static final String MONGO_URI_CONFIG_KEY = \"mongodb.uri\";", "modifier": "private static final", "type": "String", "declarator": "MONGO_URI_CONFIG_KEY = \"mongodb.uri\"", "var_name": "MONGO_URI_CONFIG_KEY"}, {"original_string": "private static final String MONGO_SSL_CONFIG_KEY = \"mongodb.options.ssl\";", "modifier": "private static final", "type": "String", "declarator": "MONGO_SSL_CONFIG_KEY = \"mongodb.options.ssl\"", "var_name": "MONGO_SSL_CONFIG_KEY"}, {"original_string": "private static final String MONGO_MAX_QUERY_TIME_CONFIG_KEY = \"mongodb.maxQueryTime\";", "modifier": "private static final", "type": "String", "declarator": "MONGO_MAX_QUERY_TIME_CONFIG_KEY = \"mongodb.maxQueryTime\"", "var_name": "MONGO_MAX_QUERY_TIME_CONFIG_KEY"}], "file": "services/utils/persistence/src/test/java/org/eclipse/ditto/services/utils/persistence/mongo/MongoClientWrapperTest.java"}, "test_case": {"identifier": "createByUriWithSslEnabled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createByUriWithSslEnabled() {\n        // prepare\n        final String uriWithSslEnabled = createUri(true);\n        final Config config = CONFIG.withValue(MONGO_URI_CONFIG_KEY, ConfigValueFactory.fromAnyRef(uriWithSslEnabled));\n        final DefaultMongoDbConfig mongoDbConfig = DefaultMongoDbConfig.of(config);\n\n        // test\n        final MongoClientWrapper underTest = MongoClientWrapper.newInstance(mongoDbConfig);\n\n        // verify\n        assertWithExpected(underTest, true, true);\n    }", "signature": "void createByUriWithSslEnabled()", "full_signature": "@Test public void createByUriWithSslEnabled()", "class_method_signature": "MongoClientWrapperTest.createByUriWithSslEnabled()", "testcase": true, "constructor": false, "invocations": ["createUri", "withValue", "fromAnyRef", "of", "newInstance", "assertWithExpected"]}, "focal_class": {"identifier": "MongoClientWrapper", "superclass": "", "interfaces": "implements DittoMongoClient", "fields": [{"original_string": "private final MongoClient mongoClient;", "modifier": "private final", "type": "MongoClient", "declarator": "mongoClient", "var_name": "mongoClient"}, {"original_string": "private final MongoDatabase defaultDatabase;", "modifier": "private final", "type": "MongoDatabase", "declarator": "defaultDatabase", "var_name": "defaultDatabase"}, {"original_string": "private final DittoMongoClientSettings dittoMongoClientSettings;", "modifier": "private final", "type": "DittoMongoClientSettings", "declarator": "dittoMongoClientSettings", "var_name": "dittoMongoClientSettings"}, {"original_string": "@Nullable private final EventLoopGroup eventLoopGroup;", "modifier": "@Nullable private final", "type": "EventLoopGroup", "declarator": "eventLoopGroup", "var_name": "eventLoopGroup"}], "methods": [{"identifier": "MongoClientWrapper", "parameters": "(final MongoClient theMongoClient,\n            final String defaultDatabaseName,\n            final DittoMongoClientSettings theDittoMongoClientSettings,\n            @Nullable final EventLoopGroup theEventLoopGroup)", "modifiers": "private", "return": "", "signature": " MongoClientWrapper(final MongoClient theMongoClient,\n            final String defaultDatabaseName,\n            final DittoMongoClientSettings theDittoMongoClientSettings,\n            @Nullable final EventLoopGroup theEventLoopGroup)", "full_signature": "private  MongoClientWrapper(final MongoClient theMongoClient,\n            final String defaultDatabaseName,\n            final DittoMongoClientSettings theDittoMongoClientSettings,\n            @Nullable final EventLoopGroup theEventLoopGroup)", "class_method_signature": "MongoClientWrapper.MongoClientWrapper(final MongoClient theMongoClient,\n            final String defaultDatabaseName,\n            final DittoMongoClientSettings theDittoMongoClientSettings,\n            @Nullable final EventLoopGroup theEventLoopGroup)", "testcase": false, "constructor": true}, {"identifier": "newInstance", "parameters": "(final MongoDbConfig mongoDbConfig)", "modifiers": "public static", "return": "MongoClientWrapper", "signature": "MongoClientWrapper newInstance(final MongoDbConfig mongoDbConfig)", "full_signature": "public static MongoClientWrapper newInstance(final MongoDbConfig mongoDbConfig)", "class_method_signature": "MongoClientWrapper.newInstance(final MongoDbConfig mongoDbConfig)", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "()", "modifiers": "public static", "return": "DittoMongoClientBuilder.ConnectionCoordinatesStep", "signature": "DittoMongoClientBuilder.ConnectionCoordinatesStep getBuilder()", "full_signature": "public static DittoMongoClientBuilder.ConnectionCoordinatesStep getBuilder()", "class_method_signature": "MongoClientWrapper.getBuilder()", "testcase": false, "constructor": false}, {"identifier": "getBuilder", "parameters": "(final MongoDbConfig mongoDbConfig)", "modifiers": "public static", "return": "DittoMongoClientBuilder.GeneralPropertiesStep", "signature": "DittoMongoClientBuilder.GeneralPropertiesStep getBuilder(final MongoDbConfig mongoDbConfig)", "full_signature": "public static DittoMongoClientBuilder.GeneralPropertiesStep getBuilder(final MongoDbConfig mongoDbConfig)", "class_method_signature": "MongoClientWrapper.getBuilder(final MongoDbConfig mongoDbConfig)", "testcase": false, "constructor": false}, {"identifier": "getDefaultDatabase", "parameters": "()", "modifiers": "@Override public", "return": "MongoDatabase", "signature": "MongoDatabase getDefaultDatabase()", "full_signature": "@Override public MongoDatabase getDefaultDatabase()", "class_method_signature": "MongoClientWrapper.getDefaultDatabase()", "testcase": false, "constructor": false}, {"identifier": "getCollection", "parameters": "(final CharSequence name)", "modifiers": "@Override public", "return": "MongoCollection<Document>", "signature": "MongoCollection<Document> getCollection(final CharSequence name)", "full_signature": "@Override public MongoCollection<Document> getCollection(final CharSequence name)", "class_method_signature": "MongoClientWrapper.getCollection(final CharSequence name)", "testcase": false, "constructor": false}, {"identifier": "getDittoSettings", "parameters": "()", "modifiers": "@Override public", "return": "DittoMongoClientSettings", "signature": "DittoMongoClientSettings getDittoSettings()", "full_signature": "@Override public DittoMongoClientSettings getDittoSettings()", "class_method_signature": "MongoClientWrapper.getDittoSettings()", "testcase": false, "constructor": false}, {"identifier": "getDatabase", "parameters": "(final String name)", "modifiers": "@Override public", "return": "MongoDatabase", "signature": "MongoDatabase getDatabase(final String name)", "full_signature": "@Override public MongoDatabase getDatabase(final String name)", "class_method_signature": "MongoClientWrapper.getDatabase(final String name)", "testcase": false, "constructor": false}, {"identifier": "getSettings", "parameters": "()", "modifiers": "@Override @Deprecated public", "return": "com.mongodb.async.client.MongoClientSettings", "signature": "com.mongodb.async.client.MongoClientSettings getSettings()", "full_signature": "@Override @Deprecated public com.mongodb.async.client.MongoClientSettings getSettings()", "class_method_signature": "MongoClientWrapper.getSettings()", "testcase": false, "constructor": false}, {"identifier": "listDatabaseNames", "parameters": "()", "modifiers": "@Override public", "return": "Publisher<String>", "signature": "Publisher<String> listDatabaseNames()", "full_signature": "@Override public Publisher<String> listDatabaseNames()", "class_method_signature": "MongoClientWrapper.listDatabaseNames()", "testcase": false, "constructor": false}, {"identifier": "listDatabaseNames", "parameters": "(final ClientSession clientSession)", "modifiers": "@Override public", "return": "Publisher<String>", "signature": "Publisher<String> listDatabaseNames(final ClientSession clientSession)", "full_signature": "@Override public Publisher<String> listDatabaseNames(final ClientSession clientSession)", "class_method_signature": "MongoClientWrapper.listDatabaseNames(final ClientSession clientSession)", "testcase": false, "constructor": false}, {"identifier": "listDatabases", "parameters": "()", "modifiers": "@Override public", "return": "ListDatabasesPublisher<Document>", "signature": "ListDatabasesPublisher<Document> listDatabases()", "full_signature": "@Override public ListDatabasesPublisher<Document> listDatabases()", "class_method_signature": "MongoClientWrapper.listDatabases()", "testcase": false, "constructor": false}, {"identifier": "listDatabases", "parameters": "(final Class<TResult> clazz)", "modifiers": "@Override public", "return": "ListDatabasesPublisher<TResult>", "signature": "ListDatabasesPublisher<TResult> listDatabases(final Class<TResult> clazz)", "full_signature": "@Override public ListDatabasesPublisher<TResult> listDatabases(final Class<TResult> clazz)", "class_method_signature": "MongoClientWrapper.listDatabases(final Class<TResult> clazz)", "testcase": false, "constructor": false}, {"identifier": "listDatabases", "parameters": "(final ClientSession clientSession)", "modifiers": "@Override public", "return": "ListDatabasesPublisher<Document>", "signature": "ListDatabasesPublisher<Document> listDatabases(final ClientSession clientSession)", "full_signature": "@Override public ListDatabasesPublisher<Document> listDatabases(final ClientSession clientSession)", "class_method_signature": "MongoClientWrapper.listDatabases(final ClientSession clientSession)", "testcase": false, "constructor": false}, {"identifier": "listDatabases", "parameters": "(final ClientSession clientSession,\n            final Class<TResult> clazz)", "modifiers": "@Override public", "return": "ListDatabasesPublisher<TResult>", "signature": "ListDatabasesPublisher<TResult> listDatabases(final ClientSession clientSession,\n            final Class<TResult> clazz)", "full_signature": "@Override public ListDatabasesPublisher<TResult> listDatabases(final ClientSession clientSession,\n            final Class<TResult> clazz)", "class_method_signature": "MongoClientWrapper.listDatabases(final ClientSession clientSession,\n            final Class<TResult> clazz)", "testcase": false, "constructor": false}, {"identifier": "watch", "parameters": "()", "modifiers": "@Override public", "return": "ChangeStreamPublisher<Document>", "signature": "ChangeStreamPublisher<Document> watch()", "full_signature": "@Override public ChangeStreamPublisher<Document> watch()", "class_method_signature": "MongoClientWrapper.watch()", "testcase": false, "constructor": false}, {"identifier": "watch", "parameters": "(final Class<TResult> tResultClass)", "modifiers": "@Override public", "return": "ChangeStreamPublisher<TResult>", "signature": "ChangeStreamPublisher<TResult> watch(final Class<TResult> tResultClass)", "full_signature": "@Override public ChangeStreamPublisher<TResult> watch(final Class<TResult> tResultClass)", "class_method_signature": "MongoClientWrapper.watch(final Class<TResult> tResultClass)", "testcase": false, "constructor": false}, {"identifier": "watch", "parameters": "(final List<? extends Bson> pipeline)", "modifiers": "@Override public", "return": "ChangeStreamPublisher<Document>", "signature": "ChangeStreamPublisher<Document> watch(final List<? extends Bson> pipeline)", "full_signature": "@Override public ChangeStreamPublisher<Document> watch(final List<? extends Bson> pipeline)", "class_method_signature": "MongoClientWrapper.watch(final List<? extends Bson> pipeline)", "testcase": false, "constructor": false}, {"identifier": "watch", "parameters": "(final List<? extends Bson> pipeline,\n            final Class<TResult> tResultClass)", "modifiers": "@Override public", "return": "ChangeStreamPublisher<TResult>", "signature": "ChangeStreamPublisher<TResult> watch(final List<? extends Bson> pipeline,\n            final Class<TResult> tResultClass)", "full_signature": "@Override public ChangeStreamPublisher<TResult> watch(final List<? extends Bson> pipeline,\n            final Class<TResult> tResultClass)", "class_method_signature": "MongoClientWrapper.watch(final List<? extends Bson> pipeline,\n            final Class<TResult> tResultClass)", "testcase": false, "constructor": false}, {"identifier": "watch", "parameters": "(final ClientSession clientSession)", "modifiers": "@Override public", "return": "ChangeStreamPublisher<Document>", "signature": "ChangeStreamPublisher<Document> watch(final ClientSession clientSession)", "full_signature": "@Override public ChangeStreamPublisher<Document> watch(final ClientSession clientSession)", "class_method_signature": "MongoClientWrapper.watch(final ClientSession clientSession)", "testcase": false, "constructor": false}, {"identifier": "watch", "parameters": "(final ClientSession clientSession,\n            final Class<TResult> tResultClass)", "modifiers": "@Override public", "return": "ChangeStreamPublisher<TResult>", "signature": "ChangeStreamPublisher<TResult> watch(final ClientSession clientSession,\n            final Class<TResult> tResultClass)", "full_signature": "@Override public ChangeStreamPublisher<TResult> watch(final ClientSession clientSession,\n            final Class<TResult> tResultClass)", "class_method_signature": "MongoClientWrapper.watch(final ClientSession clientSession,\n            final Class<TResult> tResultClass)", "testcase": false, "constructor": false}, {"identifier": "watch", "parameters": "(final ClientSession clientSession,\n            final List<? extends Bson> pipeline)", "modifiers": "@Override public", "return": "ChangeStreamPublisher<Document>", "signature": "ChangeStreamPublisher<Document> watch(final ClientSession clientSession,\n            final List<? extends Bson> pipeline)", "full_signature": "@Override public ChangeStreamPublisher<Document> watch(final ClientSession clientSession,\n            final List<? extends Bson> pipeline)", "class_method_signature": "MongoClientWrapper.watch(final ClientSession clientSession,\n            final List<? extends Bson> pipeline)", "testcase": false, "constructor": false}, {"identifier": "watch", "parameters": "(final ClientSession clientSession,\n            final List<? extends Bson> pipeline, final Class<TResult> tResultClass)", "modifiers": "@Override public", "return": "ChangeStreamPublisher<TResult>", "signature": "ChangeStreamPublisher<TResult> watch(final ClientSession clientSession,\n            final List<? extends Bson> pipeline, final Class<TResult> tResultClass)", "full_signature": "@Override public ChangeStreamPublisher<TResult> watch(final ClientSession clientSession,\n            final List<? extends Bson> pipeline, final Class<TResult> tResultClass)", "class_method_signature": "MongoClientWrapper.watch(final ClientSession clientSession,\n            final List<? extends Bson> pipeline, final Class<TResult> tResultClass)", "testcase": false, "constructor": false}, {"identifier": "startSession", "parameters": "()", "modifiers": "@Override public", "return": "Publisher<ClientSession>", "signature": "Publisher<ClientSession> startSession()", "full_signature": "@Override public Publisher<ClientSession> startSession()", "class_method_signature": "MongoClientWrapper.startSession()", "testcase": false, "constructor": false}, {"identifier": "startSession", "parameters": "(final ClientSessionOptions options)", "modifiers": "@Override public", "return": "Publisher<ClientSession>", "signature": "Publisher<ClientSession> startSession(final ClientSessionOptions options)", "full_signature": "@Override public Publisher<ClientSession> startSession(final ClientSessionOptions options)", "class_method_signature": "MongoClientWrapper.startSession(final ClientSessionOptions options)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "MongoClientWrapper.close()", "testcase": false, "constructor": false}], "file": "services/utils/persistence/src/main/java/org/eclipse/ditto/services/utils/persistence/mongo/MongoClientWrapper.java"}, "focal_method": {"identifier": "newInstance", "parameters": "(final MongoDbConfig mongoDbConfig)", "modifiers": "public static", "return": "MongoClientWrapper", "body": "public static MongoClientWrapper newInstance(final MongoDbConfig mongoDbConfig) {\n        return (MongoClientWrapper) getBuilder(mongoDbConfig).build();\n    }", "signature": "MongoClientWrapper newInstance(final MongoDbConfig mongoDbConfig)", "full_signature": "public static MongoClientWrapper newInstance(final MongoDbConfig mongoDbConfig)", "class_method_signature": "MongoClientWrapper.newInstance(final MongoDbConfig mongoDbConfig)", "testcase": false, "constructor": false, "invocations": ["build", "getBuilder"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}