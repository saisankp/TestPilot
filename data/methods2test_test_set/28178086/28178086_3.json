{"test_class": {"identifier": "FileWorkspaceImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static FileSystem JIM_FS;", "modifier": "private static", "type": "FileSystem", "declarator": "JIM_FS", "var_name": "JIM_FS"}], "file": "demetra-workspace/src/test/java/internal/workspace/file/FileWorkspaceImplTest.java"}, "test_case": {"identifier": "testUnexpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUnexpected() throws IOException {\n        assertThatThrownBy(() -> FileWorkspaceImpl.open(GENERIC_INDEX, FileFormat.GENERIC, FileWorkspaceImplTest::getHandlersButThrowUnexpected))\n                .isInstanceOf(IOException.class)\n                .hasCauseInstanceOf(RuntimeException.class);\n    }", "signature": "void testUnexpected()", "full_signature": "@Test public void testUnexpected()", "class_method_signature": "FileWorkspaceImplTest.testUnexpected()", "testcase": true, "constructor": false, "invocations": ["hasCauseInstanceOf", "isInstanceOf", "assertThatThrownBy", "open"]}, "focal_class": {"identifier": "FileWorkspaceImpl", "superclass": "", "interfaces": "implements FileWorkspace", "fields": [{"original_string": "private final Path indexFile;", "modifier": "private final", "type": "Path", "declarator": "indexFile", "var_name": "indexFile"}, {"original_string": "private final FileFormat fileFormat;", "modifier": "private final", "type": "FileFormat", "declarator": "fileFormat", "var_name": "fileFormat"}, {"original_string": "private final Path rootFolder;", "modifier": "private final", "type": "Path", "declarator": "rootFolder", "var_name": "rootFolder"}, {"original_string": "private final Indexer indexer;", "modifier": "private final", "type": "Indexer", "declarator": "indexer", "var_name": "indexer"}, {"original_string": "private final SafeHandler handlers;", "modifier": "private final", "type": "SafeHandler", "declarator": "handlers", "var_name": "handlers"}], "methods": [{"identifier": "probeFormat", "parameters": "(@NonNull Path file)", "modifiers": "@NonNull public static", "return": "Optional<FileFormat>", "signature": "Optional<FileFormat> probeFormat(@NonNull Path file)", "full_signature": "@NonNull public static Optional<FileFormat> probeFormat(@NonNull Path file)", "class_method_signature": "FileWorkspaceImpl.probeFormat(@NonNull Path file)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(@NonNull Path file, @NonNull FileFormat format, @NonNull Supplier<Iterable<FamilyHandler>> handlers)", "modifiers": "@NonNull public static", "return": "FileWorkspaceImpl", "signature": "FileWorkspaceImpl create(@NonNull Path file, @NonNull FileFormat format, @NonNull Supplier<Iterable<FamilyHandler>> handlers)", "full_signature": "@NonNull public static FileWorkspaceImpl create(@NonNull Path file, @NonNull FileFormat format, @NonNull Supplier<Iterable<FamilyHandler>> handlers)", "class_method_signature": "FileWorkspaceImpl.create(@NonNull Path file, @NonNull FileFormat format, @NonNull Supplier<Iterable<FamilyHandler>> handlers)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(@NonNull Path file, @NonNull FileFormat format, @NonNull Supplier<Iterable<FamilyHandler>> handlers)", "modifiers": "@NonNull public static", "return": "FileWorkspaceImpl", "signature": "FileWorkspaceImpl open(@NonNull Path file, @NonNull FileFormat format, @NonNull Supplier<Iterable<FamilyHandler>> handlers)", "full_signature": "@NonNull public static FileWorkspaceImpl open(@NonNull Path file, @NonNull FileFormat format, @NonNull Supplier<Iterable<FamilyHandler>> handlers)", "class_method_signature": "FileWorkspaceImpl.open(@NonNull Path file, @NonNull FileFormat format, @NonNull Supplier<Iterable<FamilyHandler>> handlers)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(Logger logger, Path file, FileFormat format, Supplier<Iterable<FamilyHandler>> handlers)", "modifiers": "static", "return": "FileWorkspaceImpl", "signature": "FileWorkspaceImpl create(Logger logger, Path file, FileFormat format, Supplier<Iterable<FamilyHandler>> handlers)", "full_signature": "static FileWorkspaceImpl create(Logger logger, Path file, FileFormat format, Supplier<Iterable<FamilyHandler>> handlers)", "class_method_signature": "FileWorkspaceImpl.create(Logger logger, Path file, FileFormat format, Supplier<Iterable<FamilyHandler>> handlers)", "testcase": false, "constructor": false}, {"identifier": "open", "parameters": "(Logger logger, Path file, FileFormat format, Supplier<Iterable<FamilyHandler>> handlers)", "modifiers": "static", "return": "FileWorkspaceImpl", "signature": "FileWorkspaceImpl open(Logger logger, Path file, FileFormat format, Supplier<Iterable<FamilyHandler>> handlers)", "full_signature": "static FileWorkspaceImpl open(Logger logger, Path file, FileFormat format, Supplier<Iterable<FamilyHandler>> handlers)", "class_method_signature": "FileWorkspaceImpl.open(Logger logger, Path file, FileFormat format, Supplier<Iterable<FamilyHandler>> handlers)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(Path indexFile, FileFormat format, Path rootFolder, Indexer indexer, Logger logger, Supplier<Iterable<FamilyHandler>> handlers)", "modifiers": "private static", "return": "FileWorkspaceImpl", "signature": "FileWorkspaceImpl of(Path indexFile, FileFormat format, Path rootFolder, Indexer indexer, Logger logger, Supplier<Iterable<FamilyHandler>> handlers)", "full_signature": "private static FileWorkspaceImpl of(Path indexFile, FileFormat format, Path rootFolder, Indexer indexer, Logger logger, Supplier<Iterable<FamilyHandler>> handlers)", "class_method_signature": "FileWorkspaceImpl.of(Path indexFile, FileFormat format, Path rootFolder, Indexer indexer, Logger logger, Supplier<Iterable<FamilyHandler>> handlers)", "testcase": false, "constructor": false}, {"identifier": "FileWorkspaceImpl", "parameters": "(Path indexFile, FileFormat fileFormat, Path rootFolder, Indexer indexer, SafeHandler handlers)", "modifiers": "private", "return": "", "signature": " FileWorkspaceImpl(Path indexFile, FileFormat fileFormat, Path rootFolder, Indexer indexer, SafeHandler handlers)", "full_signature": "private  FileWorkspaceImpl(Path indexFile, FileFormat fileFormat, Path rootFolder, Indexer indexer, SafeHandler handlers)", "class_method_signature": "FileWorkspaceImpl.FileWorkspaceImpl(Path indexFile, FileFormat fileFormat, Path rootFolder, Indexer indexer, SafeHandler handlers)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "FileWorkspaceImpl.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "@Override public", "return": "void", "signature": "void setName(String name)", "full_signature": "@Override public void setName(String name)", "class_method_signature": "FileWorkspaceImpl.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "getSupportedFamilies", "parameters": "()", "modifiers": "@Override public", "return": "Collection<WorkspaceFamily>", "signature": "Collection<WorkspaceFamily> getSupportedFamilies()", "full_signature": "@Override public Collection<WorkspaceFamily> getSupportedFamilies()", "class_method_signature": "FileWorkspaceImpl.getSupportedFamilies()", "testcase": false, "constructor": false}, {"identifier": "getItems", "parameters": "()", "modifiers": "@Override public", "return": "Collection<WorkspaceItem>", "signature": "Collection<WorkspaceItem> getItems()", "full_signature": "@Override public Collection<WorkspaceItem> getItems()", "class_method_signature": "FileWorkspaceImpl.getItems()", "testcase": false, "constructor": false}, {"identifier": "load", "parameters": "(WorkspaceItem item)", "modifiers": "@Override public", "return": "Object", "signature": "Object load(WorkspaceItem item)", "full_signature": "@Override public Object load(WorkspaceItem item)", "class_method_signature": "FileWorkspaceImpl.load(WorkspaceItem item)", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "(WorkspaceItem item, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void store(WorkspaceItem item, Object value)", "full_signature": "@Override public void store(WorkspaceItem item, Object value)", "class_method_signature": "FileWorkspaceImpl.store(WorkspaceItem item, Object value)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(WorkspaceItem item)", "modifiers": "@Override public", "return": "void", "signature": "void delete(WorkspaceItem item)", "full_signature": "@Override public void delete(WorkspaceItem item)", "class_method_signature": "FileWorkspaceImpl.delete(WorkspaceItem item)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "FileWorkspaceImpl.close()", "testcase": false, "constructor": false}, {"identifier": "getFileFormat", "parameters": "()", "modifiers": "@Override public", "return": "FileFormat", "signature": "FileFormat getFileFormat()", "full_signature": "@Override public FileFormat getFileFormat()", "class_method_signature": "FileWorkspaceImpl.getFileFormat()", "testcase": false, "constructor": false}, {"identifier": "getFile", "parameters": "()", "modifiers": "@Override public", "return": "Path", "signature": "Path getFile()", "full_signature": "@Override public Path getFile()", "class_method_signature": "FileWorkspaceImpl.getFile()", "testcase": false, "constructor": false}, {"identifier": "getRootFolder", "parameters": "()", "modifiers": "@Override public", "return": "Path", "signature": "Path getRootFolder()", "full_signature": "@Override public Path getRootFolder()", "class_method_signature": "FileWorkspaceImpl.getRootFolder()", "testcase": false, "constructor": false}, {"identifier": "getFile", "parameters": "(WorkspaceItem item)", "modifiers": "@Override public", "return": "Path", "signature": "Path getFile(WorkspaceItem item)", "full_signature": "@Override public Path getFile(WorkspaceItem item)", "class_method_signature": "FileWorkspaceImpl.getFile(WorkspaceItem item)", "testcase": false, "constructor": false}, {"identifier": "toItem", "parameters": "(WorkspaceItem.Builder b, Index.Key k, Index.Value v)", "modifiers": "static", "return": "WorkspaceItem", "signature": "WorkspaceItem toItem(WorkspaceItem.Builder b, Index.Key k, Index.Value v)", "full_signature": "static WorkspaceItem toItem(WorkspaceItem.Builder b, Index.Key k, Index.Value v)", "class_method_signature": "FileWorkspaceImpl.toItem(WorkspaceItem.Builder b, Index.Key k, Index.Value v)", "testcase": false, "constructor": false}, {"identifier": "toKey", "parameters": "(WorkspaceItem item)", "modifiers": "static", "return": "Index.Key", "signature": "Index.Key toKey(WorkspaceItem item)", "full_signature": "static Index.Key toKey(WorkspaceItem item)", "class_method_signature": "FileWorkspaceImpl.toKey(WorkspaceItem item)", "testcase": false, "constructor": false}, {"identifier": "toValue", "parameters": "(WorkspaceItem item)", "modifiers": "static", "return": "Index.Value", "signature": "Index.Value toValue(WorkspaceItem item)", "full_signature": "static Index.Value toValue(WorkspaceItem item)", "class_method_signature": "FileWorkspaceImpl.toValue(WorkspaceItem item)", "testcase": false, "constructor": false}, {"identifier": "getRootFolder", "parameters": "(Path indexFile)", "modifiers": "static", "return": "Path", "signature": "Path getRootFolder(Path indexFile)", "full_signature": "static Path getRootFolder(Path indexFile)", "class_method_signature": "FileWorkspaceImpl.getRootFolder(Path indexFile)", "testcase": false, "constructor": false}, {"identifier": "getIndexer", "parameters": "(FileFormat format, Path file, Path rootFolder)", "modifiers": "private static", "return": "Indexer", "signature": "Indexer getIndexer(FileFormat format, Path file, Path rootFolder)", "full_signature": "private static Indexer getIndexer(FileFormat format, Path file, Path rootFolder)", "class_method_signature": "FileWorkspaceImpl.getIndexer(FileFormat format, Path file, Path rootFolder)", "testcase": false, "constructor": false}], "file": "demetra-workspace/src/main/java/internal/workspace/file/FileWorkspaceImpl.java"}, "focal_method": {"identifier": "open", "parameters": "(@NonNull Path file, @NonNull FileFormat format, @NonNull Supplier<Iterable<FamilyHandler>> handlers)", "modifiers": "@NonNull public static", "return": "FileWorkspaceImpl", "body": "@NonNull\n    public static FileWorkspaceImpl open(@NonNull Path file, @NonNull FileFormat format, @NonNull Supplier<Iterable<FamilyHandler>> handlers) throws IOException {\n        Objects.requireNonNull(file, \"file\");\n        Objects.requireNonNull(format, \"format\");\n        Objects.requireNonNull(handlers, \"handler\");\n        return open(LoggerFactory.getLogger(FileWorkspaceImpl.class), file, format, handlers);\n    }", "signature": "FileWorkspaceImpl open(@NonNull Path file, @NonNull FileFormat format, @NonNull Supplier<Iterable<FamilyHandler>> handlers)", "full_signature": "@NonNull public static FileWorkspaceImpl open(@NonNull Path file, @NonNull FileFormat format, @NonNull Supplier<Iterable<FamilyHandler>> handlers)", "class_method_signature": "FileWorkspaceImpl.open(@NonNull Path file, @NonNull FileFormat format, @NonNull Supplier<Iterable<FamilyHandler>> handlers)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "requireNonNull", "requireNonNull", "open", "getLogger"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}