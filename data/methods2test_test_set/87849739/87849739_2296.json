{"test_class": {"identifier": "ModifyPolicyIdTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final PolicyId KNOWN_POLICY_ID = PolicyId.of(\"foo:barpolicy\");", "modifier": "private static final", "type": "PolicyId", "declarator": "KNOWN_POLICY_ID = PolicyId.of(\"foo:barpolicy\")", "var_name": "KNOWN_POLICY_ID"}, {"original_string": "private static final JsonObject KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(ThingCommand.JsonFields.TYPE, ModifyPolicyId.TYPE)\n            .set(ThingCommand.JsonFields.JSON_THING_ID, TestConstants.Thing.THING_ID.toString())\n            .set(ModifyPolicyId.JSON_POLICY_ID, KNOWN_POLICY_ID.toString())\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(ThingCommand.JsonFields.TYPE, ModifyPolicyId.TYPE)\n            .set(ThingCommand.JsonFields.JSON_THING_ID, TestConstants.Thing.THING_ID.toString())\n            .set(ModifyPolicyId.JSON_POLICY_ID, KNOWN_POLICY_ID.toString())\n            .build()", "var_name": "KNOWN_JSON"}], "file": "signals/commands/things/src/test/java/org/eclipse/ditto/signals/commands/things/modify/ModifyPolicyIdTest.java"}, "test_case": {"identifier": "toJsonReturnsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toJsonReturnsExpected() {\n        final ModifyPolicyId underTest =\n                ModifyPolicyId.of(TestConstants.Thing.THING_ID, KNOWN_POLICY_ID, DittoHeaders.empty());\n        final JsonObject actualJson = underTest.toJson(FieldType.regularOrSpecial());\n\n        assertThat(actualJson).isEqualTo(KNOWN_JSON);\n    }", "signature": "void toJsonReturnsExpected()", "full_signature": "@Test public void toJsonReturnsExpected()", "class_method_signature": "ModifyPolicyIdTest.toJsonReturnsExpected()", "testcase": true, "constructor": false, "invocations": ["of", "empty", "toJson", "regularOrSpecial", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "ModifyPolicyId", "superclass": "extends AbstractCommand<ModifyPolicyId>", "interfaces": "implements ThingModifyCommand<ModifyPolicyId>", "fields": [{"original_string": "public static final String NAME = \"modifyPolicyId\";", "modifier": "public static final", "type": "String", "declarator": "NAME = \"modifyPolicyId\"", "var_name": "NAME"}, {"original_string": "public static final String TYPE = TYPE_PREFIX + NAME;", "modifier": "public static final", "type": "String", "declarator": "TYPE = TYPE_PREFIX + NAME", "var_name": "TYPE"}, {"original_string": "static final JsonFieldDefinition<String> JSON_POLICY_ID =\n            JsonFactory.newStringFieldDefinition(\"policyId\", FieldType.REGULAR, JsonSchemaVersion.V_2);", "modifier": "static final", "type": "JsonFieldDefinition<String>", "declarator": "JSON_POLICY_ID =\n            JsonFactory.newStringFieldDefinition(\"policyId\", FieldType.REGULAR, JsonSchemaVersion.V_2)", "var_name": "JSON_POLICY_ID"}, {"original_string": "private final ThingId thingId;", "modifier": "private final", "type": "ThingId", "declarator": "thingId", "var_name": "thingId"}, {"original_string": "private final PolicyId policyId;", "modifier": "private final", "type": "PolicyId", "declarator": "policyId", "var_name": "policyId"}], "methods": [{"identifier": "ModifyPolicyId", "parameters": "(final ThingId thingId, final PolicyId policyId, final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "", "signature": " ModifyPolicyId(final ThingId thingId, final PolicyId policyId, final DittoHeaders dittoHeaders)", "full_signature": "private  ModifyPolicyId(final ThingId thingId, final PolicyId policyId, final DittoHeaders dittoHeaders)", "class_method_signature": "ModifyPolicyId.ModifyPolicyId(final ThingId thingId, final PolicyId policyId, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": true}, {"identifier": "getSupportedSchemaVersions", "parameters": "()", "modifiers": "@Override public", "return": "JsonSchemaVersion[]", "signature": "JsonSchemaVersion[] getSupportedSchemaVersions()", "full_signature": "@Override public JsonSchemaVersion[] getSupportedSchemaVersions()", "class_method_signature": "ModifyPolicyId.getSupportedSchemaVersions()", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final String thingId, final String policyId, final DittoHeaders dittoHeaders)", "modifiers": "@Deprecated public static", "return": "ModifyPolicyId", "signature": "ModifyPolicyId of(final String thingId, final String policyId, final DittoHeaders dittoHeaders)", "full_signature": "@Deprecated public static ModifyPolicyId of(final String thingId, final String policyId, final DittoHeaders dittoHeaders)", "class_method_signature": "ModifyPolicyId.of(final String thingId, final String policyId, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final ThingId thingId, final PolicyId policyId,\n            final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "ModifyPolicyId", "signature": "ModifyPolicyId of(final ThingId thingId, final PolicyId policyId,\n            final DittoHeaders dittoHeaders)", "full_signature": "public static ModifyPolicyId of(final ThingId thingId, final PolicyId policyId,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "ModifyPolicyId.of(final ThingId thingId, final PolicyId policyId,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final String jsonString, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "ModifyPolicyId", "signature": "ModifyPolicyId fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "full_signature": "public static ModifyPolicyId fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "class_method_signature": "ModifyPolicyId.fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "ModifyPolicyId", "signature": "ModifyPolicyId fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "full_signature": "public static ModifyPolicyId fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "class_method_signature": "ModifyPolicyId.fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getPolicyId", "parameters": "()", "modifiers": "@Deprecated public", "return": "String", "signature": "String getPolicyId()", "full_signature": "@Deprecated public String getPolicyId()", "class_method_signature": "ModifyPolicyId.getPolicyId()", "testcase": false, "constructor": false}, {"identifier": "getPolicyEntityId", "parameters": "()", "modifiers": "public", "return": "PolicyId", "signature": "PolicyId getPolicyEntityId()", "full_signature": "public PolicyId getPolicyEntityId()", "class_method_signature": "ModifyPolicyId.getPolicyEntityId()", "testcase": false, "constructor": false}, {"identifier": "getThingEntityId", "parameters": "()", "modifiers": "@Override public", "return": "ThingId", "signature": "ThingId getThingEntityId()", "full_signature": "@Override public ThingId getThingEntityId()", "class_method_signature": "ModifyPolicyId.getThingEntityId()", "testcase": false, "constructor": false}, {"identifier": "getEntity", "parameters": "(final JsonSchemaVersion schemaVersion)", "modifiers": "@Override public", "return": "Optional<JsonValue>", "signature": "Optional<JsonValue> getEntity(final JsonSchemaVersion schemaVersion)", "full_signature": "@Override public Optional<JsonValue> getEntity(final JsonSchemaVersion schemaVersion)", "class_method_signature": "ModifyPolicyId.getEntity(final JsonSchemaVersion schemaVersion)", "testcase": false, "constructor": false}, {"identifier": "getResourcePath", "parameters": "()", "modifiers": "@Override public", "return": "JsonPointer", "signature": "JsonPointer getResourcePath()", "full_signature": "@Override public JsonPointer getResourcePath()", "class_method_signature": "ModifyPolicyId.getResourcePath()", "testcase": false, "constructor": false}, {"identifier": "appendPayload", "parameters": "(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "modifiers": "@Override protected", "return": "void", "signature": "void appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "full_signature": "@Override protected void appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "class_method_signature": "ModifyPolicyId.appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "getCategory", "parameters": "()", "modifiers": "@Override public", "return": "Category", "signature": "Category getCategory()", "full_signature": "@Override public Category getCategory()", "class_method_signature": "ModifyPolicyId.getCategory()", "testcase": false, "constructor": false}, {"identifier": "setDittoHeaders", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "@Override public", "return": "ModifyPolicyId", "signature": "ModifyPolicyId setDittoHeaders(final DittoHeaders dittoHeaders)", "full_signature": "@Override public ModifyPolicyId setDittoHeaders(final DittoHeaders dittoHeaders)", "class_method_signature": "ModifyPolicyId.setDittoHeaders(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "changesAuthorization", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean changesAuthorization()", "full_signature": "@Override public boolean changesAuthorization()", "class_method_signature": "ModifyPolicyId.changesAuthorization()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ModifyPolicyId.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object obj)", "modifiers": "@SuppressWarnings({\"squid:MethodCyclomaticComplexity\", \"squid:S1067\", \"OverlyComplexMethod\"}) @Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object obj)", "full_signature": "@SuppressWarnings({\"squid:MethodCyclomaticComplexity\", \"squid:S1067\", \"OverlyComplexMethod\"}) @Override public boolean equals(@Nullable final Object obj)", "class_method_signature": "ModifyPolicyId.equals(@Nullable final Object obj)", "testcase": false, "constructor": false}, {"identifier": "canEqual", "parameters": "(@Nullable final Object other)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean canEqual(@Nullable final Object other)", "full_signature": "@Override protected boolean canEqual(@Nullable final Object other)", "class_method_signature": "ModifyPolicyId.canEqual(@Nullable final Object other)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ModifyPolicyId.toString()", "testcase": false, "constructor": false}], "file": "signals/commands/things/src/main/java/org/eclipse/ditto/signals/commands/things/modify/ModifyPolicyId.java"}, "focal_method": {"identifier": "of", "parameters": "(final String thingId, final String policyId, final DittoHeaders dittoHeaders)", "modifiers": "@Deprecated public static", "return": "ModifyPolicyId", "body": "@Deprecated\n    public static ModifyPolicyId of(final String thingId, final String policyId, final DittoHeaders dittoHeaders) {\n        return of(ThingId.of(thingId), PolicyId.of(policyId), dittoHeaders);\n    }", "signature": "ModifyPolicyId of(final String thingId, final String policyId, final DittoHeaders dittoHeaders)", "full_signature": "@Deprecated public static ModifyPolicyId of(final String thingId, final String policyId, final DittoHeaders dittoHeaders)", "class_method_signature": "ModifyPolicyId.of(final String thingId, final String policyId, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false, "invocations": ["of", "of", "of"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}