{"test_class": {"identifier": "PenStrokeTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundles/core-map/src/test/java/org/orbisgis/coremap/renderer/se/stroke/PenStrokeTest.java"}, "test_case": {"identifier": "testSetLineCap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetLineCap() throws Exception {\n        PenStroke ps = new PenStroke();\n        assertEquals(ps.getLineCap(), PenStroke.LineCap.BUTT);\n        ps.setLineCap(null);\n        assertEquals(ps.getLineCap(), PenStroke.LineCap.BUTT);\n        ps.setLineCap(PenStroke.LineCap.SQUARE);\n        assertEquals(ps.getLineCap(), PenStroke.LineCap.SQUARE);\n    }", "signature": "void testSetLineCap()", "full_signature": "@Test public void testSetLineCap()", "class_method_signature": "PenStrokeTest.testSetLineCap()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getLineCap", "setLineCap", "assertEquals", "getLineCap", "setLineCap", "assertEquals", "getLineCap"]}, "focal_class": {"identifier": "PenStroke", "superclass": "extends Stroke", "interfaces": "implements FillNode", "fields": [{"original_string": "private static final I18n I18N = I18nFactory.getI18n(PenStroke.class, Locale.getDefault(), I18nFactory.FALLBACK);", "modifier": "private static final", "type": "I18n", "declarator": "I18N = I18nFactory.getI18n(PenStroke.class, Locale.getDefault(), I18nFactory.FALLBACK)", "var_name": "I18N"}, {"original_string": "private static final double DEFAULT_WIDTH_PX = 1.0;", "modifier": "private static final", "type": "double", "declarator": "DEFAULT_WIDTH_PX = 1.0", "var_name": "DEFAULT_WIDTH_PX"}, {"original_string": "public static final double DEFAULT_WIDTH = .25;", "modifier": "public static final", "type": "double", "declarator": "DEFAULT_WIDTH = .25", "var_name": "DEFAULT_WIDTH"}, {"original_string": "public static final LineCap DEFAULT_CAP = LineCap.BUTT;", "modifier": "public static final", "type": "LineCap", "declarator": "DEFAULT_CAP = LineCap.BUTT", "var_name": "DEFAULT_CAP"}, {"original_string": "public static final LineJoin DEFAULT_JOIN = LineJoin.MITRE;", "modifier": "public static final", "type": "LineJoin", "declarator": "DEFAULT_JOIN = LineJoin.MITRE", "var_name": "DEFAULT_JOIN"}, {"original_string": "private Fill fill;", "modifier": "private", "type": "Fill", "declarator": "fill", "var_name": "fill"}, {"original_string": "private RealParameter width;", "modifier": "private", "type": "RealParameter", "declarator": "width", "var_name": "width"}, {"original_string": "private LineJoin lineJoin;", "modifier": "private", "type": "LineJoin", "declarator": "lineJoin", "var_name": "lineJoin"}, {"original_string": "private LineCap lineCap;", "modifier": "private", "type": "LineCap", "declarator": "lineCap", "var_name": "lineCap"}, {"original_string": "private StringParameter dashArray;", "modifier": "private", "type": "StringParameter", "declarator": "dashArray", "var_name": "dashArray"}, {"original_string": "private RealParameter dashOffset;", "modifier": "private", "type": "RealParameter", "declarator": "dashOffset", "var_name": "dashOffset"}], "methods": [{"identifier": "PenStroke", "parameters": "()", "modifiers": "public", "return": "", "signature": " PenStroke()", "full_signature": "public  PenStroke()", "class_method_signature": "PenStroke.PenStroke()", "testcase": false, "constructor": true}, {"identifier": "PenStroke", "parameters": "(PenStrokeType t)", "modifiers": "public", "return": "", "signature": " PenStroke(PenStrokeType t)", "full_signature": "public  PenStroke(PenStrokeType t)", "class_method_signature": "PenStroke.PenStroke(PenStrokeType t)", "testcase": false, "constructor": true}, {"identifier": "PenStroke", "parameters": "(JAXBElement<PenStrokeType> s)", "modifiers": "public", "return": "", "signature": " PenStroke(JAXBElement<PenStrokeType> s)", "full_signature": "public  PenStroke(JAXBElement<PenStrokeType> s)", "class_method_signature": "PenStroke.PenStroke(JAXBElement<PenStrokeType> s)", "testcase": false, "constructor": true}, {"identifier": "getNaturalLength", "parameters": "(Map<String,Object> map, Shape shp, MapTransform mt)", "modifiers": "@Override public", "return": "Double", "signature": "Double getNaturalLength(Map<String,Object> map, Shape shp, MapTransform mt)", "full_signature": "@Override public Double getNaturalLength(Map<String,Object> map, Shape shp, MapTransform mt)", "class_method_signature": "PenStroke.getNaturalLength(Map<String,Object> map, Shape shp, MapTransform mt)", "testcase": false, "constructor": false}, {"identifier": "getNaturalLengthForCompound", "parameters": "(Map<String,Object> map,\n            Shape shp, MapTransform mt)", "modifiers": "@Override public", "return": "Double", "signature": "Double getNaturalLengthForCompound(Map<String,Object> map,\n            Shape shp, MapTransform mt)", "full_signature": "@Override public Double getNaturalLengthForCompound(Map<String,Object> map,\n            Shape shp, MapTransform mt)", "class_method_signature": "PenStroke.getNaturalLengthForCompound(Map<String,Object> map,\n            Shape shp, MapTransform mt)", "testcase": false, "constructor": false}, {"identifier": "getChildren", "parameters": "()", "modifiers": "@Override public", "return": "List<SymbolizerNode>", "signature": "List<SymbolizerNode> getChildren()", "full_signature": "@Override public List<SymbolizerNode> getChildren()", "class_method_signature": "PenStroke.getChildren()", "testcase": false, "constructor": false}, {"identifier": "getFill", "parameters": "()", "modifiers": "@Override public", "return": "Fill", "signature": "Fill getFill()", "full_signature": "@Override public Fill getFill()", "class_method_signature": "PenStroke.getFill()", "testcase": false, "constructor": false}, {"identifier": "setFill", "parameters": "(Fill fill)", "modifiers": "@Override public", "return": "void", "signature": "void setFill(Fill fill)", "full_signature": "@Override public void setFill(Fill fill)", "class_method_signature": "PenStroke.setFill(Fill fill)", "testcase": false, "constructor": false}, {"identifier": "getDefaultFill", "parameters": "()", "modifiers": "private", "return": "Fill", "signature": "Fill getDefaultFill()", "full_signature": "private Fill getDefaultFill()", "class_method_signature": "PenStroke.getDefaultFill()", "testcase": false, "constructor": false}, {"identifier": "setLineCap", "parameters": "(LineCap cap)", "modifiers": "public", "return": "void", "signature": "void setLineCap(LineCap cap)", "full_signature": "public void setLineCap(LineCap cap)", "class_method_signature": "PenStroke.setLineCap(LineCap cap)", "testcase": false, "constructor": false}, {"identifier": "getLineCap", "parameters": "()", "modifiers": "public", "return": "LineCap", "signature": "LineCap getLineCap()", "full_signature": "public LineCap getLineCap()", "class_method_signature": "PenStroke.getLineCap()", "testcase": false, "constructor": false}, {"identifier": "setLineJoin", "parameters": "(LineJoin join)", "modifiers": "public", "return": "void", "signature": "void setLineJoin(LineJoin join)", "full_signature": "public void setLineJoin(LineJoin join)", "class_method_signature": "PenStroke.setLineJoin(LineJoin join)", "testcase": false, "constructor": false}, {"identifier": "getLineJoin", "parameters": "()", "modifiers": "public", "return": "LineJoin", "signature": "LineJoin getLineJoin()", "full_signature": "public LineJoin getLineJoin()", "class_method_signature": "PenStroke.getLineJoin()", "testcase": false, "constructor": false}, {"identifier": "setWidth", "parameters": "(RealParameter width)", "modifiers": "public", "return": "void", "signature": "void setWidth(RealParameter width)", "full_signature": "public void setWidth(RealParameter width)", "class_method_signature": "PenStroke.setWidth(RealParameter width)", "testcase": false, "constructor": false}, {"identifier": "getWidth", "parameters": "()", "modifiers": "public", "return": "RealParameter", "signature": "RealParameter getWidth()", "full_signature": "public RealParameter getWidth()", "class_method_signature": "PenStroke.getWidth()", "testcase": false, "constructor": false}, {"identifier": "getDashOffset", "parameters": "()", "modifiers": "public", "return": "RealParameter", "signature": "RealParameter getDashOffset()", "full_signature": "public RealParameter getDashOffset()", "class_method_signature": "PenStroke.getDashOffset()", "testcase": false, "constructor": false}, {"identifier": "setDashOffset", "parameters": "(RealParameter dashOffset)", "modifiers": "public", "return": "void", "signature": "void setDashOffset(RealParameter dashOffset)", "full_signature": "public void setDashOffset(RealParameter dashOffset)", "class_method_signature": "PenStroke.setDashOffset(RealParameter dashOffset)", "testcase": false, "constructor": false}, {"identifier": "getDashArray", "parameters": "()", "modifiers": "public", "return": "StringParameter", "signature": "StringParameter getDashArray()", "full_signature": "public StringParameter getDashArray()", "class_method_signature": "PenStroke.getDashArray()", "testcase": false, "constructor": false}, {"identifier": "setDashArray", "parameters": "(StringParameter dashArray)", "modifiers": "public", "return": "void", "signature": "void setDashArray(StringParameter dashArray)", "full_signature": "public void setDashArray(StringParameter dashArray)", "class_method_signature": "PenStroke.setDashArray(StringParameter dashArray)", "testcase": false, "constructor": false}, {"identifier": "createBasicStroke", "parameters": "(Map<String,Object> map,\n            Shape shp, MapTransform mt, Double v100p, boolean useDash)", "modifiers": "private", "return": "BasicStroke", "signature": "BasicStroke createBasicStroke(Map<String,Object> map,\n            Shape shp, MapTransform mt, Double v100p, boolean useDash)", "full_signature": "private BasicStroke createBasicStroke(Map<String,Object> map,\n            Shape shp, MapTransform mt, Double v100p, boolean useDash)", "class_method_signature": "PenStroke.createBasicStroke(Map<String,Object> map,\n            Shape shp, MapTransform mt, Double v100p, boolean useDash)", "testcase": false, "constructor": false}, {"identifier": "getBasicStroke", "parameters": "(Map<String,Object> map, MapTransform mt, Double v100p)", "modifiers": "public", "return": "BasicStroke", "signature": "BasicStroke getBasicStroke(Map<String,Object> map, MapTransform mt, Double v100p)", "full_signature": "public BasicStroke getBasicStroke(Map<String,Object> map, MapTransform mt, Double v100p)", "class_method_signature": "PenStroke.getBasicStroke(Map<String,Object> map, MapTransform mt, Double v100p)", "testcase": false, "constructor": false}, {"identifier": "scaleDashArrayLength", "parameters": "(double[] dashes, Shape shp)", "modifiers": "private", "return": "void", "signature": "void scaleDashArrayLength(double[] dashes, Shape shp)", "full_signature": "private void scaleDashArrayLength(double[] dashes, Shape shp)", "class_method_signature": "PenStroke.scaleDashArrayLength(double[] dashes, Shape shp)", "testcase": false, "constructor": false}, {"identifier": "draw", "parameters": "(Graphics2D g2, Map<String,Object> map, Shape shape,\n            boolean selected, MapTransform mt, double offset)", "modifiers": "@Override public", "return": "void", "signature": "void draw(Graphics2D g2, Map<String,Object> map, Shape shape,\n            boolean selected, MapTransform mt, double offset)", "full_signature": "@Override public void draw(Graphics2D g2, Map<String,Object> map, Shape shape,\n            boolean selected, MapTransform mt, double offset)", "class_method_signature": "PenStroke.draw(Graphics2D g2, Map<String,Object> map, Shape shape,\n            boolean selected, MapTransform mt, double offset)", "testcase": false, "constructor": false}, {"identifier": "getWidthInPixel", "parameters": "(Map<String,Object> map, MapTransform mt)", "modifiers": "public", "return": "double", "signature": "double getWidthInPixel(Map<String,Object> map, MapTransform mt)", "full_signature": "public double getWidthInPixel(Map<String,Object> map, MapTransform mt)", "class_method_signature": "PenStroke.getWidthInPixel(Map<String,Object> map, MapTransform mt)", "testcase": false, "constructor": false}, {"identifier": "getMinLength", "parameters": "(Map<String,Object> map, MapTransform mt)", "modifiers": "public", "return": "double", "signature": "double getMinLength(Map<String,Object> map, MapTransform mt)", "full_signature": "public double getMinLength(Map<String,Object> map, MapTransform mt)", "class_method_signature": "PenStroke.getMinLength(Map<String,Object> map, MapTransform mt)", "testcase": false, "constructor": false}, {"identifier": "getJAXBElement", "parameters": "()", "modifiers": "@Override public", "return": "JAXBElement<PenStrokeType>", "signature": "JAXBElement<PenStrokeType> getJAXBElement()", "full_signature": "@Override public JAXBElement<PenStrokeType> getJAXBElement()", "class_method_signature": "PenStroke.getJAXBElement()", "testcase": false, "constructor": false}, {"identifier": "getJAXBType", "parameters": "()", "modifiers": "public", "return": "PenStrokeType", "signature": "PenStrokeType getJAXBType()", "full_signature": "public PenStrokeType getJAXBType()", "class_method_signature": "PenStroke.getJAXBType()", "testcase": false, "constructor": false}], "file": "bundles/core-map/src/main/java/org/orbisgis/coremap/renderer/se/stroke/PenStroke.java"}, "focal_method": {"identifier": "setLineCap", "parameters": "(LineCap cap)", "modifiers": "public", "return": "void", "body": "public void setLineCap(LineCap cap) {\n        lineCap = cap == null ? DEFAULT_CAP : cap;\n    }", "signature": "void setLineCap(LineCap cap)", "full_signature": "public void setLineCap(LineCap cap)", "class_method_signature": "PenStroke.setLineCap(LineCap cap)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 4735878, "url": "https://github.com/orbisgis/orbisgis", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 63, "size": 76463, "license": "licensed"}}