{"test_class": {"identifier": "SensitivityAnalysisTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_PROVIDER_NAME = \"SensitivityAnalysisMock\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_PROVIDER_NAME = \"SensitivityAnalysisMock\"", "var_name": "DEFAULT_PROVIDER_NAME"}, {"original_string": "private Network network;", "modifier": "private", "type": "Network", "declarator": "network", "var_name": "network"}, {"original_string": "private ComputationManager computationManager;", "modifier": "private", "type": "ComputationManager", "declarator": "computationManager", "var_name": "computationManager"}, {"original_string": "private SensitivityFactorsProvider sensitivityFactorsProvider;", "modifier": "private", "type": "SensitivityFactorsProvider", "declarator": "sensitivityFactorsProvider", "var_name": "sensitivityFactorsProvider"}, {"original_string": "private ContingenciesProvider contingenciesProvider;", "modifier": "private", "type": "ContingenciesProvider", "declarator": "contingenciesProvider", "var_name": "contingenciesProvider"}, {"original_string": "private SensitivityAnalysisParameters parameters;", "modifier": "private", "type": "SensitivityAnalysisParameters", "declarator": "parameters", "var_name": "parameters"}], "file": "sensitivity-analysis-api/src/test/java/com/powsybl/sensitivity/SensitivityAnalysisTest.java"}, "test_case": {"identifier": "testStaticSimpleRunMethodWithNoContingencies", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStaticSimpleRunMethodWithNoContingencies() {\n        SensitivityAnalysisResult result = SensitivityAnalysis.run(network, sensitivityFactorsProvider, null);\n        assertNotNull(result);\n    }", "signature": "void testStaticSimpleRunMethodWithNoContingencies()", "full_signature": "@Test public void testStaticSimpleRunMethodWithNoContingencies()", "class_method_signature": "SensitivityAnalysisTest.testStaticSimpleRunMethodWithNoContingencies()", "testcase": true, "constructor": false, "invocations": ["run", "assertNotNull"]}, "focal_class": {"identifier": "SensitivityAnalysis", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "SensitivityAnalysis", "parameters": "()", "modifiers": "private", "return": "", "signature": " SensitivityAnalysis()", "full_signature": "private  SensitivityAnalysis()", "class_method_signature": "SensitivityAnalysis.SensitivityAnalysis()", "testcase": false, "constructor": true}, {"identifier": "find", "parameters": "(String name)", "modifiers": "public static", "return": "Runner", "signature": "Runner find(String name)", "full_signature": "public static Runner find(String name)", "class_method_signature": "SensitivityAnalysis.find(String name)", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "()", "modifiers": "public static", "return": "Runner", "signature": "Runner find()", "full_signature": "public static Runner find()", "class_method_signature": "SensitivityAnalysis.find()", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(Network network,\n                                                String workingStateId,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider,\n                                                SensitivityAnalysisParameters parameters)", "modifiers": "public static", "return": "SensitivityAnalysisResult", "signature": "SensitivityAnalysisResult run(Network network,\n                                                String workingStateId,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider,\n                                                SensitivityAnalysisParameters parameters)", "full_signature": "public static SensitivityAnalysisResult run(Network network,\n                                                String workingStateId,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider,\n                                                SensitivityAnalysisParameters parameters)", "class_method_signature": "SensitivityAnalysis.run(Network network,\n                                                String workingStateId,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider,\n                                                SensitivityAnalysisParameters parameters)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(Network network,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider,\n                                                SensitivityAnalysisParameters parameters)", "modifiers": "public static", "return": "SensitivityAnalysisResult", "signature": "SensitivityAnalysisResult run(Network network,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider,\n                                                SensitivityAnalysisParameters parameters)", "full_signature": "public static SensitivityAnalysisResult run(Network network,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider,\n                                                SensitivityAnalysisParameters parameters)", "class_method_signature": "SensitivityAnalysis.run(Network network,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider,\n                                                SensitivityAnalysisParameters parameters)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "(Network network,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider)", "modifiers": "public static", "return": "SensitivityAnalysisResult", "signature": "SensitivityAnalysisResult run(Network network,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider)", "full_signature": "public static SensitivityAnalysisResult run(Network network,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider)", "class_method_signature": "SensitivityAnalysis.run(Network network,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider)", "testcase": false, "constructor": false}], "file": "sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/SensitivityAnalysis.java"}, "focal_method": {"identifier": "run", "parameters": "(Network network,\n                                                String workingStateId,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider,\n                                                SensitivityAnalysisParameters parameters)", "modifiers": "public static", "return": "SensitivityAnalysisResult", "body": "public static SensitivityAnalysisResult run(Network network,\n                                                String workingStateId,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider,\n                                                SensitivityAnalysisParameters parameters) {\n        return find().run(network, workingStateId, factorsProvider, contingenciesProvider, parameters);\n    }", "signature": "SensitivityAnalysisResult run(Network network,\n                                                String workingStateId,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider,\n                                                SensitivityAnalysisParameters parameters)", "full_signature": "public static SensitivityAnalysisResult run(Network network,\n                                                String workingStateId,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider,\n                                                SensitivityAnalysisParameters parameters)", "class_method_signature": "SensitivityAnalysis.run(Network network,\n                                                String workingStateId,\n                                                SensitivityFactorsProvider factorsProvider,\n                                                ContingenciesProvider contingenciesProvider,\n                                                SensitivityAnalysisParameters parameters)", "testcase": false, "constructor": false, "invocations": ["run", "find"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}