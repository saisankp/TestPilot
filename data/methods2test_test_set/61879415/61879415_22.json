{"test_class": {"identifier": "IdentityUsernameGeneratorTest", "superclass": "extends AbstractGeneratorTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate IdmIdentityService identityService;", "modifier": "@Autowired\n\tprivate", "type": "IdmIdentityService", "declarator": "identityService", "var_name": "identityService"}], "file": "Realization/backend/core/core-impl/src/test/java/eu/bcvsolutions/idm/core/generator/identity/IdentityUsernameGeneratorTest.java"}, "test_case": {"identifier": "generateShorterProperties", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void generateShorterProperties() {\n\t\tString firstName = \"firstName\";\n\t\tString lastName = \"lastName\";\n\t\t\n\t\tString newFirstName = \"first\";\n\t\tString newLastName = \"last\";\n\n\n\t\tValueGeneratorDto generator = getGenerator();\n\n\t\tthis.createGenerator(getDtoType(), getGeneratorType(),\n\t\t\t\tthis.createConfiguration(generator.getFormDefinition(),\n\t\t\t\t\t\tImmutableMap.of(\n\t\t\t\t\t\t\t\tIdentityUsernameGenerator.FIRST_NAME_CHARACTERS_COUNT, \"5\",\n\t\t\t\t\t\t\t\tIdentityUsernameGenerator.LAST_NAME_CHARACTERS_COUNT, \"4\",\n\t\t\t\t\t\t\t\tIdentityUsernameGenerator.FIRST_NAME_FIRST, Boolean.TRUE.toString())),\n\t\t\t\t1, null);\n\n\t\tIdmIdentityDto identityDto = new IdmIdentityDto();\n\t\tidentityDto.setFirstName(firstName);\n\t\tidentityDto.setLastName(lastName);\n\t\tIdmIdentityDto generatedDto = valueGeneratorManager.generate(identityDto);\n\t\t\n\t\tassertEquals(identityDto.getLastName(), generatedDto.getLastName());\n\t\tassertEquals(identityDto.getFirstName(), generatedDto.getFirstName());\n\t\t\n\t\tassertNotNull(generatedDto.getUsername());\n\t\tassertEquals(newFirstName + newLastName, generatedDto.getUsername());\n\t}", "signature": "void generateShorterProperties()", "full_signature": "@Test public void generateShorterProperties()", "class_method_signature": "IdentityUsernameGeneratorTest.generateShorterProperties()", "testcase": true, "constructor": false, "invocations": ["getGenerator", "createGenerator", "getDtoType", "getGeneratorType", "createConfiguration", "getFormDefinition", "of", "toString", "setFirstName", "setLastName", "generate", "assertEquals", "getLastName", "getLastName", "assertEquals", "getFirstName", "getFirstName", "assertNotNull", "getUsername", "assertEquals", "getUsername"]}, "focal_class": {"identifier": "IdentityUsernameGenerator", "superclass": "extends AbstractIdentityValueGenerator", "interfaces": "", "fields": [{"original_string": "public static final String GENERATOR_NAME = \"core-identity-username-value-generator\";", "modifier": "public static final", "type": "String", "declarator": "GENERATOR_NAME = \"core-identity-username-value-generator\"", "var_name": "GENERATOR_NAME"}, {"original_string": "public static String SEARCH_UNIQUE_USERNAME = \"searchUniqueUsername\";", "modifier": "public static", "type": "String", "declarator": "SEARCH_UNIQUE_USERNAME = \"searchUniqueUsername\"", "var_name": "SEARCH_UNIQUE_USERNAME"}, {"original_string": "private static int MAXIMUM_SEARCH_FOR_UNIQUE_USERNAME = 100;", "modifier": "private static", "type": "int", "declarator": "MAXIMUM_SEARCH_FOR_UNIQUE_USERNAME = 100", "var_name": "MAXIMUM_SEARCH_FOR_UNIQUE_USERNAME"}, {"original_string": "@Autowired\n\tprivate IdmIdentityService identityService;", "modifier": "@Autowired\n\tprivate", "type": "IdmIdentityService", "declarator": "identityService", "var_name": "identityService"}], "methods": [{"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "IdentityUsernameGenerator.getName()", "testcase": false, "constructor": false}, {"identifier": "getPropertyNames", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getPropertyNames()", "full_signature": "@Override public List<String> getPropertyNames()", "class_method_signature": "IdentityUsernameGenerator.getPropertyNames()", "testcase": false, "constructor": false}, {"identifier": "generate", "parameters": "(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator)", "modifiers": "@Override public", "return": "IdmIdentityDto", "signature": "IdmIdentityDto generate(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator)", "full_signature": "@Override public IdmIdentityDto generate(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator)", "class_method_signature": "IdentityUsernameGenerator.generate(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator)", "testcase": false, "constructor": false}, {"identifier": "getUniqueUsername", "parameters": "(String username)", "modifiers": "private", "return": "String", "signature": "String getUniqueUsername(String username)", "full_signature": "private String getUniqueUsername(String username)", "class_method_signature": "IdentityUsernameGenerator.getUniqueUsername(String username)", "testcase": false, "constructor": false}, {"identifier": "isSearchUniqueUsername", "parameters": "(IdmGenerateValueDto valueGenerator)", "modifiers": "protected", "return": "boolean", "signature": "boolean isSearchUniqueUsername(IdmGenerateValueDto valueGenerator)", "full_signature": "protected boolean isSearchUniqueUsername(IdmGenerateValueDto valueGenerator)", "class_method_signature": "IdentityUsernameGenerator.isSearchUniqueUsername(IdmGenerateValueDto valueGenerator)", "testcase": false, "constructor": false}, {"identifier": "getFormAttributes", "parameters": "()", "modifiers": "@Override public", "return": "List<IdmFormAttributeDto>", "signature": "List<IdmFormAttributeDto> getFormAttributes()", "full_signature": "@Override public List<IdmFormAttributeDto> getFormAttributes()", "class_method_signature": "IdentityUsernameGenerator.getFormAttributes()", "testcase": false, "constructor": false}], "file": "Realization/backend/core/core-impl/src/main/java/eu/bcvsolutions/idm/core/generator/identity/IdentityUsernameGenerator.java"}, "focal_method": {"identifier": "generate", "parameters": "(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator)", "modifiers": "@Override public", "return": "IdmIdentityDto", "body": "@Override\n\tpublic IdmIdentityDto generate(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator) {\n\t\tAssert.notNull(dto, \"DTO is required.\");\n\t\tAssert.notNull(valueGenerator, \"Value generator is required.\");\n\t\t//\n\t\t// if exists username and configuration doesn't allow regenerate return dto\n\t\tif (!valueGenerator.isRegenerateValue() && StringUtils.isNotEmpty(dto.getUsername())) {\n\t\t\treturn dto;\n\t\t}\n\t\t//\n\t\tString resultUsername = generateUsername(dto, valueGenerator);\n\t\tif (StringUtils.isEmpty(resultUsername)) {\n\t\t\treturn dto;\n\t\t}\n\t\t//\n\t\tif (isSearchUniqueUsername(valueGenerator)) {\n\t\t\tdto.setUsername(getUniqueUsername(resultUsername));\n\t\t} else {\n\t\t\tdto.setUsername(resultUsername);\n\t\t}\n\t\t//\n\t\treturn dto;\n\t}", "signature": "IdmIdentityDto generate(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator)", "full_signature": "@Override public IdmIdentityDto generate(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator)", "class_method_signature": "IdentityUsernameGenerator.generate(IdmIdentityDto dto, IdmGenerateValueDto valueGenerator)", "testcase": false, "constructor": false, "invocations": ["notNull", "notNull", "isRegenerateValue", "isNotEmpty", "getUsername", "generateUsername", "isEmpty", "isSearchUniqueUsername", "setUsername", "getUniqueUsername", "setUsername"]}, "repository": {"repo_id": 61879415, "url": "https://github.com/bcvsolutions/CzechIdMng", "stars": 25, "created": "6/24/2016 11:18:23 AM +00:00", "updates": "2020-01-27T15:14:40+00:00", "fork": "False", "license": "licensed"}}