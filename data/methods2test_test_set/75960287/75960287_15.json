{"test_class": {"identifier": "GMTimesTest", "superclass": "", "interfaces": "", "fields": [], "file": "Plan/common/src/test/java/com/djrapitops/plan/gathering/domain/GMTimesTest.java"}, "test_case": {"identifier": "allGMTimesAreSetWithTooFewArguments", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void allGMTimesAreSetWithTooFewArguments() {\n        GMTimes times = new GMTimes();\n        times.setAllGMTimes(1L, 2L);\n\n        assertEquals(1L, times.getTime(\"SURVIVAL\"));\n        assertEquals(2L, times.getTime(\"CREATIVE\"));\n        assertEquals(0L, times.getTime(\"ADVENTURE\"));\n        assertEquals(0L, times.getTime(\"SPECTATOR\"));\n    }", "signature": "void allGMTimesAreSetWithTooFewArguments()", "full_signature": "@Test void allGMTimesAreSetWithTooFewArguments()", "class_method_signature": "GMTimesTest.allGMTimesAreSetWithTooFewArguments()", "testcase": true, "constructor": false, "invocations": ["setAllGMTimes", "assertEquals", "getTime", "assertEquals", "getTime", "assertEquals", "getTime", "assertEquals", "getTime"]}, "focal_class": {"identifier": "GMTimes", "superclass": "extends TimeKeeper", "interfaces": "", "fields": [{"original_string": "private static final String SURVIVAL = \"SURVIVAL\";", "modifier": "private static final", "type": "String", "declarator": "SURVIVAL = \"SURVIVAL\"", "var_name": "SURVIVAL"}, {"original_string": "private static final String CREATIVE = \"CREATIVE\";", "modifier": "private static final", "type": "String", "declarator": "CREATIVE = \"CREATIVE\"", "var_name": "CREATIVE"}, {"original_string": "private static final String ADVENTURE = \"ADVENTURE\";", "modifier": "private static final", "type": "String", "declarator": "ADVENTURE = \"ADVENTURE\"", "var_name": "ADVENTURE"}, {"original_string": "private static final String SPECTATOR = \"SPECTATOR\";", "modifier": "private static final", "type": "String", "declarator": "SPECTATOR = \"SPECTATOR\"", "var_name": "SPECTATOR"}], "methods": [{"identifier": "GMTimes", "parameters": "(Map<String, Long> times, String lastState, long lastStateChange)", "modifiers": "public", "return": "", "signature": " GMTimes(Map<String, Long> times, String lastState, long lastStateChange)", "full_signature": "public  GMTimes(Map<String, Long> times, String lastState, long lastStateChange)", "class_method_signature": "GMTimes.GMTimes(Map<String, Long> times, String lastState, long lastStateChange)", "testcase": false, "constructor": true}, {"identifier": "GMTimes", "parameters": "(String lastState, long lastStateChange)", "modifiers": "public", "return": "", "signature": " GMTimes(String lastState, long lastStateChange)", "full_signature": "public  GMTimes(String lastState, long lastStateChange)", "class_method_signature": "GMTimes.GMTimes(String lastState, long lastStateChange)", "testcase": false, "constructor": true}, {"identifier": "GMTimes", "parameters": "(String lastState)", "modifiers": "public", "return": "", "signature": " GMTimes(String lastState)", "full_signature": "public  GMTimes(String lastState)", "class_method_signature": "GMTimes.GMTimes(String lastState)", "testcase": false, "constructor": true}, {"identifier": "GMTimes", "parameters": "(Map<String, Long> times)", "modifiers": "public", "return": "", "signature": " GMTimes(Map<String, Long> times)", "full_signature": "public  GMTimes(Map<String, Long> times)", "class_method_signature": "GMTimes.GMTimes(Map<String, Long> times)", "testcase": false, "constructor": true}, {"identifier": "GMTimes", "parameters": "()", "modifiers": "public", "return": "", "signature": " GMTimes()", "full_signature": "public  GMTimes()", "class_method_signature": "GMTimes.GMTimes()", "testcase": false, "constructor": true}, {"identifier": "getGMKeyArray", "parameters": "()", "modifiers": "public static", "return": "String[]", "signature": "String[] getGMKeyArray()", "full_signature": "public static String[] getGMKeyArray()", "class_method_signature": "GMTimes.getGMKeyArray()", "testcase": false, "constructor": false}, {"identifier": "magicNumberToGMName", "parameters": "(int magicNumber)", "modifiers": "public static", "return": "String", "signature": "String magicNumberToGMName(int magicNumber)", "full_signature": "public static String magicNumberToGMName(int magicNumber)", "class_method_signature": "GMTimes.magicNumberToGMName(int magicNumber)", "testcase": false, "constructor": false}, {"identifier": "getMostUsedGameMode", "parameters": "()", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> getMostUsedGameMode()", "full_signature": "public Optional<String> getMostUsedGameMode()", "class_method_signature": "GMTimes.getMostUsedGameMode()", "testcase": false, "constructor": false}, {"identifier": "setAllGMTimes", "parameters": "(long... times)", "modifiers": "public", "return": "void", "signature": "void setAllGMTimes(long... times)", "full_signature": "public void setAllGMTimes(long... times)", "class_method_signature": "GMTimes.setAllGMTimes(long... times)", "testcase": false, "constructor": false}, {"identifier": "resetTimes", "parameters": "(long time)", "modifiers": "public", "return": "void", "signature": "void resetTimes(long time)", "full_signature": "public void resetTimes(long time)", "class_method_signature": "GMTimes.resetTimes(long time)", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getState()", "full_signature": "@Override public String getState()", "class_method_signature": "GMTimes.getState()", "testcase": false, "constructor": false}], "file": "Plan/common/src/main/java/com/djrapitops/plan/gathering/domain/GMTimes.java"}, "focal_method": {"identifier": "setAllGMTimes", "parameters": "(long... times)", "modifiers": "public", "return": "void", "body": "public void setAllGMTimes(long... times) {\n        Verify.nullCheck(times);\n        String[] gms = getGMKeyArray();\n        int size = times.length;\n        for (int i = 0; i < 4; i++) {\n            if (i >= size) {\n                setTime(gms[i], 0L);\n            } else {\n                setTime(gms[i], times[i]);\n            }\n        }\n    }", "signature": "void setAllGMTimes(long... times)", "full_signature": "public void setAllGMTimes(long... times)", "class_method_signature": "GMTimes.setAllGMTimes(long... times)", "testcase": false, "constructor": false, "invocations": ["nullCheck", "getGMKeyArray", "setTime", "setTime"]}, "repository": {"repo_id": 75960287, "url": "https://github.com/plan-player-analytics/Plan", "stars": 172, "created": "12/8/2016 5:34:11 PM +00:00", "updates": "2020-01-27T14:34:49+00:00", "fork": "False", "license": "licensed"}}