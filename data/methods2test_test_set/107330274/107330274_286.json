{"test_class": {"identifier": "ResourceConsumptionLogTest", "superclass": "", "interfaces": "", "fields": [], "file": "titus-server-master/src/test/java/com/netflix/titus/master/service/management/internal/ResourceConsumptionLogTest.java"}, "test_case": {"identifier": "testGroupUndefinedEvent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGroupUndefinedEvent() throws Exception {\n        CapacityGroupUndefinedEvent event = new CapacityGroupUndefinedEvent(\"myCapacityGroup\", System.currentTimeMillis());\n        String result = ResourceConsumptionLog.doLog(event);\n\n        String expected = \"Capacity group not defined: group=myCapacityGroup\";\n        assertThat(result).isEqualTo(expected);\n    }", "signature": "void testGroupUndefinedEvent()", "full_signature": "@Test public void testGroupUndefinedEvent()", "class_method_signature": "ResourceConsumptionLogTest.testGroupUndefinedEvent()", "testcase": true, "constructor": false, "invocations": ["currentTimeMillis", "doLog", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "ResourceConsumptionLog", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ResourceConsumptionLog.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ResourceConsumptionLog.class)", "var_name": "logger"}, {"original_string": "private final ResourceConsumptionService resourceConsumptionService;", "modifier": "private final", "type": "ResourceConsumptionService", "declarator": "resourceConsumptionService", "var_name": "resourceConsumptionService"}, {"original_string": "private Subscription subscription;", "modifier": "private", "type": "Subscription", "declarator": "subscription", "var_name": "subscription"}], "methods": [{"identifier": "ResourceConsumptionLog", "parameters": "(ResourceConsumptionService resourceConsumptionService)", "modifiers": "@Inject public", "return": "", "signature": " ResourceConsumptionLog(ResourceConsumptionService resourceConsumptionService)", "full_signature": "@Inject public  ResourceConsumptionLog(ResourceConsumptionService resourceConsumptionService)", "class_method_signature": "ResourceConsumptionLog.ResourceConsumptionLog(ResourceConsumptionService resourceConsumptionService)", "testcase": false, "constructor": true}, {"identifier": "enterActiveMode", "parameters": "()", "modifiers": "@Activator public", "return": "Observable<Void>", "signature": "Observable<Void> enterActiveMode()", "full_signature": "@Activator public Observable<Void> enterActiveMode()", "class_method_signature": "ResourceConsumptionLog.enterActiveMode()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "@PreDestroy public", "return": "void", "signature": "void shutdown()", "full_signature": "@PreDestroy public void shutdown()", "class_method_signature": "ResourceConsumptionLog.shutdown()", "testcase": false, "constructor": false}, {"identifier": "doLog", "parameters": "(ResourceConsumptionEvents.ResourceConsumptionEvent event)", "modifiers": "static", "return": "String", "signature": "String doLog(ResourceConsumptionEvents.ResourceConsumptionEvent event)", "full_signature": "static String doLog(ResourceConsumptionEvents.ResourceConsumptionEvent event)", "class_method_signature": "ResourceConsumptionLog.doLog(ResourceConsumptionEvents.ResourceConsumptionEvent event)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/service/management/internal/ResourceConsumptionLog.java"}, "focal_method": {"identifier": "doLog", "parameters": "(ResourceConsumptionEvents.ResourceConsumptionEvent event)", "modifiers": "static", "return": "String", "body": "static String doLog(ResourceConsumptionEvents.ResourceConsumptionEvent event) {\n        if (event instanceof CapacityGroupAllocationEvent) {\n            CapacityGroupAllocationEvent changeEvent = (CapacityGroupAllocationEvent) event;\n            CompositeResourceConsumption consumption = changeEvent.getCapacityGroupConsumption();\n\n            StringBuilder sb = new StringBuilder(\"Resource consumption change: group=\");\n            sb.append(consumption.getConsumerName());\n\n            if (consumption.isAboveLimit()) {\n                sb.append(\" [above limit] \");\n            } else {\n                sb.append(\" [below limit] \");\n            }\n\n            sb.append(\"actual=\");\n            ResourceDimensions.format(consumption.getCurrentConsumption(), sb);\n            sb.append(\", max=\");\n            ResourceDimensions.format(consumption.getMaxConsumption(), sb);\n            sb.append(\", limit=\");\n            ResourceDimensions.format(consumption.getAllowedConsumption(), sb);\n\n            if (consumption.getAttributes().isEmpty()) {\n                sb.append(\", attrs={}\");\n            } else {\n                sb.append(\", attrs={\");\n                consumption.getAttributes().forEach((k, v) -> sb.append(k).append('=').append(v).append(','));\n                sb.setCharAt(sb.length() - 1, '}');\n            }\n\n            String message = sb.toString();\n            if (consumption.isAboveLimit()) {\n                logger.warn(message);\n            } else {\n                logger.info(message);\n            }\n            return message;\n        }\n\n        if (event instanceof CapacityGroupUndefinedEvent) {\n            String message = \"Capacity group not defined: group=\" + event.getCapacityGroup();\n            logger.warn(message);\n            return message;\n        }\n\n        if (event instanceof CapacityGroupRemovedEvent) {\n            String message = \"Capacity group no longer defined: group=\" + event.getCapacityGroup();\n            logger.info(message);\n            return message;\n        }\n\n        String message = \"Unrecognized resource consumption event type \" + event.getClass();\n        logger.error(message);\n        return message;\n    }", "signature": "String doLog(ResourceConsumptionEvents.ResourceConsumptionEvent event)", "full_signature": "static String doLog(ResourceConsumptionEvents.ResourceConsumptionEvent event)", "class_method_signature": "ResourceConsumptionLog.doLog(ResourceConsumptionEvents.ResourceConsumptionEvent event)", "testcase": false, "constructor": false, "invocations": ["getCapacityGroupConsumption", "append", "getConsumerName", "isAboveLimit", "append", "append", "append", "format", "getCurrentConsumption", "append", "format", "getMaxConsumption", "append", "format", "getAllowedConsumption", "isEmpty", "getAttributes", "append", "append", "forEach", "getAttributes", "append", "append", "append", "append", "setCharAt", "length", "toString", "isAboveLimit", "warn", "info", "getCapacityGroup", "warn", "getCapacityGroup", "info", "getClass", "error"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}