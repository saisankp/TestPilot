{"test_class": {"identifier": "GoogleCloudStorageStringsTest", "superclass": "", "interfaces": "", "fields": [], "file": "gcsio/src/test/java/com/google/cloud/hadoop/gcsio/GoogleCloudStorageStringsTest.java"}, "test_case": {"identifier": "testMatchListPrefixIllegalArguments", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testMatchListPrefixIllegalArguments() {\n    String[][] invalidArgs = {\n      {\"my-prefix\", null},\n      {\"my-prefix\", \"\"},\n      // Even if prefix is null, the argument-check should throw.\n      {null, null},\n      {null, \"\"},\n    };\n\n    for (String[] args : invalidArgs) {\n      IllegalArgumentException iae =\n          assertThrows(\n              IllegalArgumentException.class,\n              () ->\n                  GoogleCloudStorageStrings.matchListPrefix(\n                      args[0], args[1], ListObjectOptions.DEFAULT));\n      assertThat(iae).hasMessageThat().matches(\".*objectName.*\");\n    }\n  }", "signature": "void testMatchListPrefixIllegalArguments()", "full_signature": "@Test public void testMatchListPrefixIllegalArguments()", "class_method_signature": "GoogleCloudStorageStringsTest.testMatchListPrefixIllegalArguments()", "testcase": true, "constructor": false, "invocations": ["assertThrows", "matchListPrefix", "matches", "hasMessageThat", "assertThat"]}, "focal_class": {"identifier": "GoogleCloudStorageStrings", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "matchListPrefix", "parameters": "(\n      String objectNamePrefix, String objectName, ListObjectOptions listOptions)", "modifiers": "public static", "return": "String", "signature": "String matchListPrefix(\n      String objectNamePrefix, String objectName, ListObjectOptions listOptions)", "full_signature": "public static String matchListPrefix(\n      String objectNamePrefix, String objectName, ListObjectOptions listOptions)", "class_method_signature": "GoogleCloudStorageStrings.matchListPrefix(\n      String objectNamePrefix, String objectName, ListObjectOptions listOptions)", "testcase": false, "constructor": false}], "file": "gcsio/src/main/java/com/google/cloud/hadoop/gcsio/GoogleCloudStorageStrings.java"}, "focal_method": {"identifier": "matchListPrefix", "parameters": "(\n      String objectNamePrefix, String objectName, ListObjectOptions listOptions)", "modifiers": "public static", "return": "String", "body": "public static String matchListPrefix(\n      String objectNamePrefix, String objectName, ListObjectOptions listOptions) {\n    checkArgument(\n        !isNullOrEmpty(objectName),\n        \"matchListPrefix(%s, %s, %s): objectName must not be null or empty.\",\n        objectNamePrefix,\n        objectName,\n        listOptions);\n\n    // The suffix that we'll use to check for the delimiter is just the whole name if no prefix\n    // was supplied.\n    String suffix = objectName;\n    int suffixIndex = 0;\n    if (objectNamePrefix != null) {\n      // The underlying GCS API does return objectName when it equals the prefix, but our\n      // GoogleCloudStorage wrapper filters this case if the objectName also ends with\n      // PATH_DELIMITER.\n      if (!objectName.startsWith(objectNamePrefix)\n          || (objectName.equals(objectNamePrefix)\n              && objectNamePrefix.endsWith(PATH_DELIMITER)\n              && !listOptions.isIncludePrefix())) {\n        return null;\n      }\n      suffixIndex = objectNamePrefix.length();\n      suffix = objectName.substring(suffixIndex);\n    }\n\n    String delimiter = listOptions.getDelimiter();\n    return !isNullOrEmpty(delimiter) && suffix.contains(delimiter)\n        // Return the full prefix and suffix up through first occurrence of delimiter after\n        // the prefix, inclusive of the delimiter.\n        ? objectName.substring(0, objectName.indexOf(delimiter, suffixIndex) + delimiter.length())\n        : objectName;\n  }", "signature": "String matchListPrefix(\n      String objectNamePrefix, String objectName, ListObjectOptions listOptions)", "full_signature": "public static String matchListPrefix(\n      String objectNamePrefix, String objectName, ListObjectOptions listOptions)", "class_method_signature": "GoogleCloudStorageStrings.matchListPrefix(\n      String objectNamePrefix, String objectName, ListObjectOptions listOptions)", "testcase": false, "constructor": false, "invocations": ["checkArgument", "isNullOrEmpty", "startsWith", "equals", "endsWith", "isIncludePrefix", "length", "substring", "getDelimiter", "isNullOrEmpty", "contains", "substring", "indexOf", "length"]}, "repository": {"repo_id": 19684359, "url": "https://github.com/GoogleCloudDataproc/bigdata-interop", "stars": 178, "created": "5/12/2014 3:11:55 AM +00:00", "updates": "2020-01-23T23:10:40+00:00", "fork": "False", "license": "licensed"}}