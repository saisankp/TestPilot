{"test_class": {"identifier": "UtilitiesTest", "superclass": "", "interfaces": "", "fields": [], "file": "jtstoolkit/src/test/java/ec/tstoolkit/timeseries/calendars/UtilitiesTest.java"}, "test_case": {"identifier": "testEaster2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEaster2() {\n        for (int i = 1900; i < 4100; ++i) {\n            Day easter = Utilities.easter(i);\n            Day easter2 = Utilities.easter2(i);\n//            System.out.print(easter);\n//            System.out.print(\"  \");\n//            System.out.println(easter2);\n            Assert.assertEquals(easter, easter2);\n        }\n    }", "signature": "void testEaster2()", "full_signature": "@Test public void testEaster2()", "class_method_signature": "UtilitiesTest.testEaster2()", "testcase": true, "constructor": false, "invocations": ["easter", "easter2", "assertEquals"]}, "focal_class": {"identifier": "Utilities", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final double LUNARY = 29.53059, DEC_LUNARY = .53059;", "modifier": "public static final", "type": "double", "declarator": "LUNARY = 29.53059", "var_name": "LUNARY"}, {"original_string": "static final int CYCLE = 532, TWOCYCLE=CYCLE<<1;", "modifier": "static final", "type": "int", "declarator": "CYCLE = 532", "var_name": "CYCLE"}, {"original_string": "static final int[] PROB = new int[]{\n        4, 8, 8, 12, 16, 16, 20, 16, 16, 20, 16, 16, 20, 16, 20, 20, 16, 20, 16, 16, 20, 16, 16, 20, 16, 20, 16, 16, 20, 16, 12, 12, 8, 8, 4\n    };", "modifier": "static final", "type": "int[]", "declarator": "PROB = new int[]{\n        4, 8, 8, 12, 16, 16, 20, 16, 16, 20, 16, 16, 20, 16, 20, 20, 16, 20, 16, 16, 20, 16, 16, 20, 16, 20, 16, 16, 20, 16, 12, 12, 8, 8, 4\n    }", "var_name": "PROB"}, {"original_string": "private static final int[] JD={\n        1,1,3,9,15,11,14,27,36,28,24,32,40,39,33,31,\n        34,36,42,39,33,31,33,42,38,33,30,32,39,40,\n        33,29,26,31,33,22,7,15,12,7,1,1,1\n    };", "modifier": "private static final", "type": "int[]", "declarator": "JD={\n        1,1,3,9,15,11,14,27,36,28,24,32,40,39,33,31,\n        34,36,42,39,33,31,33,42,38,33,30,32,39,40,\n        33,29,26,31,33,22,7,15,12,7,1,1,1\n    }", "var_name": "JD"}], "methods": [{"identifier": "daysCount", "parameters": "(TsDomain domain)", "modifiers": "public static", "return": "int[]", "signature": "int[] daysCount(TsDomain domain)", "full_signature": "public static int[] daysCount(TsDomain domain)", "class_method_signature": "Utilities.daysCount(TsDomain domain)", "testcase": false, "constructor": false}, {"identifier": "daysCount", "parameters": "(TsDomain domain, DayOfWeek day)", "modifiers": "public static", "return": "int[]", "signature": "int[] daysCount(TsDomain domain, DayOfWeek day)", "full_signature": "public static int[] daysCount(TsDomain domain, DayOfWeek day)", "class_method_signature": "Utilities.daysCount(TsDomain domain, DayOfWeek day)", "testcase": false, "constructor": false}, {"identifier": "easter", "parameters": "(int y)", "modifiers": "public static", "return": "Day", "signature": "Day easter(int y)", "full_signature": "public static Day easter(int y)", "class_method_signature": "Utilities.easter(int y)", "testcase": false, "constructor": false}, {"identifier": "easter2", "parameters": "(int y)", "modifiers": "public static", "return": "Day", "signature": "Day easter2(int y)", "full_signature": "public static Day easter2(int y)", "class_method_signature": "Utilities.easter2(int y)", "testcase": false, "constructor": false}, {"identifier": "julianEaster", "parameters": "(int year, boolean gregorian)", "modifiers": "@Deprecated public static", "return": "Day", "signature": "Day julianEaster(int year, boolean gregorian)", "full_signature": "@Deprecated public static Day julianEaster(int year, boolean gregorian)", "class_method_signature": "Utilities.julianEaster(int year, boolean gregorian)", "testcase": false, "constructor": false}, {"identifier": "julianEaster2", "parameters": "(int year, boolean gregorian)", "modifiers": "@Deprecated public static", "return": "Day", "signature": "Day julianEaster2(int year, boolean gregorian)", "full_signature": "@Deprecated public static Day julianEaster2(int year, boolean gregorian)", "class_method_signature": "Utilities.julianEaster2(int year, boolean gregorian)", "testcase": false, "constructor": false}, {"identifier": "julianDate2JDN", "parameters": "(int year, int month, int day)", "modifiers": "public static", "return": "int", "signature": "int julianDate2JDN(int year, int month, int day)", "full_signature": "public static int julianDate2JDN(int year, int month, int day)", "class_method_signature": "Utilities.julianDate2JDN(int year, int month, int day)", "testcase": false, "constructor": false}, {"identifier": "gregorianDate2JDN", "parameters": "(int year, int month, int day)", "modifiers": "public static", "return": "int", "signature": "int gregorianDate2JDN(int year, int month, int day)", "full_signature": "public static int gregorianDate2JDN(int year, int month, int day)", "class_method_signature": "Utilities.gregorianDate2JDN(int year, int month, int day)", "testcase": false, "constructor": false}, {"identifier": "JDN2GregorianDate", "parameters": "(int jdn)", "modifiers": "public static", "return": "Day", "signature": "Day JDN2GregorianDate(int jdn)", "full_signature": "public static Day JDN2GregorianDate(int jdn)", "class_method_signature": "Utilities.JDN2GregorianDate(int jdn)", "testcase": false, "constructor": false}, {"identifier": "julianEaster3", "parameters": "(int year, boolean gregorian)", "modifiers": "public static", "return": "Day", "signature": "Day julianEaster3(int year, boolean gregorian)", "full_signature": "public static Day julianEaster3(int year, boolean gregorian)", "class_method_signature": "Utilities.julianEaster3(int year, boolean gregorian)", "testcase": false, "constructor": false}, {"identifier": "firstWeekDay", "parameters": "(DayOfWeek day, int year, Month month)", "modifiers": "public static", "return": "Day", "signature": "Day firstWeekDay(DayOfWeek day, int year, Month month)", "full_signature": "public static Day firstWeekDay(DayOfWeek day, int year, Month month)", "class_method_signature": "Utilities.firstWeekDay(DayOfWeek day, int year, Month month)", "testcase": false, "constructor": false}, {"identifier": "lastDay", "parameters": "(TsDomain domain)", "modifiers": "public static", "return": "int[]", "signature": "int[] lastDay(TsDomain domain)", "full_signature": "public static int[] lastDay(TsDomain domain)", "class_method_signature": "Utilities.lastDay(TsDomain domain)", "testcase": false, "constructor": false}, {"identifier": "leapYear", "parameters": "(TsPeriod start, DataBlock buffer)", "modifiers": "public static", "return": "void", "signature": "void leapYear(TsPeriod start, DataBlock buffer)", "full_signature": "public static void leapYear(TsPeriod start, DataBlock buffer)", "class_method_signature": "Utilities.leapYear(TsPeriod start, DataBlock buffer)", "testcase": false, "constructor": false}, {"identifier": "lengthofPeriod", "parameters": "(TsPeriod start, DataBlock buffer)", "modifiers": "public static", "return": "void", "signature": "void lengthofPeriod(TsPeriod start, DataBlock buffer)", "full_signature": "public static void lengthofPeriod(TsPeriod start, DataBlock buffer)", "class_method_signature": "Utilities.lengthofPeriod(TsPeriod start, DataBlock buffer)", "testcase": false, "constructor": false}, {"identifier": "logJacobian", "parameters": "(LengthOfPeriodType kind, TsDomain domain,\n            boolean back)", "modifiers": "public static", "return": "double", "signature": "double logJacobian(LengthOfPeriodType kind, TsDomain domain,\n            boolean back)", "full_signature": "public static double logJacobian(LengthOfPeriodType kind, TsDomain domain,\n            boolean back)", "class_method_signature": "Utilities.logJacobian(LengthOfPeriodType kind, TsDomain domain,\n            boolean back)", "testcase": false, "constructor": false}, {"identifier": "tradingDays", "parameters": "(TsDomain domain)", "modifiers": "@Deprecated public static", "return": "int[][]", "signature": "int[][] tradingDays(TsDomain domain)", "full_signature": "@Deprecated public static int[][] tradingDays(TsDomain domain)", "class_method_signature": "Utilities.tradingDays(TsDomain domain)", "testcase": false, "constructor": false}, {"identifier": "tdCount", "parameters": "(TsDomain domain)", "modifiers": "public static", "return": "int[][]", "signature": "int[][] tdCount(TsDomain domain)", "full_signature": "public static int[][] tdCount(TsDomain domain)", "class_method_signature": "Utilities.tdCount(TsDomain domain)", "testcase": false, "constructor": false}, {"identifier": "transform", "parameters": "(LengthOfPeriodType kind, TsData tsdata,\n            boolean back)", "modifiers": "public static", "return": "void", "signature": "void transform(LengthOfPeriodType kind, TsData tsdata,\n            boolean back)", "full_signature": "public static void transform(LengthOfPeriodType kind, TsData tsdata,\n            boolean back)", "class_method_signature": "Utilities.transform(LengthOfPeriodType kind, TsData tsdata,\n            boolean back)", "testcase": false, "constructor": false}, {"identifier": "probJulianEaster", "parameters": "(int pos)", "modifiers": "public static", "return": "double", "signature": "double probJulianEaster(int pos)", "full_signature": "public static double probJulianEaster(int pos)", "class_method_signature": "Utilities.probJulianEaster(int pos)", "testcase": false, "constructor": false}, {"identifier": "probEaster", "parameters": "(int pos)", "modifiers": "public static", "return": "double", "signature": "double probEaster(int pos)", "full_signature": "public static double probEaster(int pos)", "class_method_signature": "Utilities.probEaster(int pos)", "testcase": false, "constructor": false}], "file": "jtstoolkit/src/main/java/ec/tstoolkit/timeseries/calendars/Utilities.java"}, "focal_method": {"identifier": "easter2", "parameters": "(int y)", "modifiers": "public static", "return": "Day", "body": "public static Day easter2(int y) {\n        int firstdig = y / 100;\n        int remain19 = y % 19;\n        // calculate PFM date (Paschal Full Moon)\n        int temp = (firstdig - 15) / 2 + 202 - 11 * remain19;\n        if (firstdig == 21 || firstdig == 24 || firstdig == 25\n                || (firstdig >= 27 && firstdig <= 32) || firstdig == 34\n                || firstdig == 35 || firstdig == 38) {\n            --temp;\n        } else if (firstdig == 33 || firstdig == 36 || firstdig == 37\n                || firstdig == 39 || firstdig == 40) {\n            temp -= 2;\n        }\n        temp = temp % 30;\n        int ta = temp + 21;\n        if (temp == 29) {\n            --ta;\n        }\n        if (temp == 28 && remain19 > 10) {\n            --ta;\n        }\n        // find the next sunday\n        int tb = (ta - 19) % 7;\n        int tc = (40 - firstdig) % 4;\n        if (tc == 3) {\n            ++tc;\n        }\n        if (tc > 1) {\n            ++tc;\n        }\n        temp = y % 100;\n        int td = (temp + temp / 4) % 7;\n        int te = ((20 - tb - tc - td) % 7) + 1;\n        int d = ta + te;\n        // return the date\n        if (d > 31) {\n            return new Day(y, Month.April, d - 32);\n        } else {\n            return new Day(y, Month.March, d - 1);\n        }\n    }", "signature": "Day easter2(int y)", "full_signature": "public static Day easter2(int y)", "class_method_signature": "Utilities.easter2(int y)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}