{"test_class": {"identifier": "TestLexicalIncludePaths", "superclass": "", "interfaces": "", "fields": [], "file": "android/testSrc/com/android/tools/idea/navigator/nodes/ndk/includes/utils/TestLexicalIncludePaths.java"}, "test_case": {"identifier": "testTrimPathSeparator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testTrimPathSeparator() {\n    assertThat(LexicalIncludePaths.trimPathSeparators(\"a\")).isEqualTo(\"a\");\n    assertThat(LexicalIncludePaths.trimPathSeparators(\"/a\")).isEqualTo(\"a\");\n    assertThat(LexicalIncludePaths.trimPathSeparators(\"a/\")).isEqualTo(\"a\");\n    assertThat(LexicalIncludePaths.trimPathSeparators(\"/a/\")).isEqualTo(\"a\");\n  }", "signature": "void testTrimPathSeparator()", "full_signature": "@Test public void testTrimPathSeparator()", "class_method_signature": "TestLexicalIncludePaths.testTrimPathSeparator()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "trimPathSeparators", "isEqualTo", "assertThat", "trimPathSeparators", "isEqualTo", "assertThat", "trimPathSeparators", "isEqualTo", "assertThat", "trimPathSeparators"]}, "focal_class": {"identifier": "LexicalIncludePaths", "superclass": "", "interfaces": "", "fields": [{"original_string": "@NotNull\n  public static final ImmutableSet<String> HEADER_FILE_EXTENSIONS = ImmutableSet.of(\"\", \"h\", \"hpp\", \"hh\", \"h++\", \"hxx\", \"inl\", \"tcc\", \"pch\");", "modifier": "@NotNull\n  public static final", "type": "ImmutableSet<String>", "declarator": "HEADER_FILE_EXTENSIONS = ImmutableSet.of(\"\", \"h\", \"hpp\", \"hh\", \"h++\", \"hxx\", \"inl\", \"tcc\", \"pch\")", "var_name": "HEADER_FILE_EXTENSIONS"}, {"original_string": "@NotNull\n  private final static String UNIX_SEPARATOR = \"/\";", "modifier": "@NotNull\n  private final static", "type": "String", "declarator": "UNIX_SEPARATOR = \"/\"", "var_name": "UNIX_SEPARATOR"}], "methods": [{"identifier": "hasHeaderExtension", "parameters": "(@NotNull String filename)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasHeaderExtension(@NotNull String filename)", "full_signature": "public static boolean hasHeaderExtension(@NotNull String filename)", "class_method_signature": "LexicalIncludePaths.hasHeaderExtension(@NotNull String filename)", "testcase": false, "constructor": false}, {"identifier": "findCommonParentFolder", "parameters": "(@NotNull Collection<String> folders)", "modifiers": "@NotNull public static", "return": "String", "signature": "String findCommonParentFolder(@NotNull Collection<String> folders)", "full_signature": "@NotNull public static String findCommonParentFolder(@NotNull Collection<String> folders)", "class_method_signature": "LexicalIncludePaths.findCommonParentFolder(@NotNull Collection<String> folders)", "testcase": false, "constructor": false}, {"identifier": "trimPathSeparators", "parameters": "(@NotNull String path)", "modifiers": "@NotNull public static", "return": "String", "signature": "String trimPathSeparators(@NotNull String path)", "full_signature": "@NotNull public static String trimPathSeparators(@NotNull String path)", "class_method_signature": "LexicalIncludePaths.trimPathSeparators(@NotNull String path)", "testcase": false, "constructor": false}, {"identifier": "matchFolderToRegex", "parameters": "(@NotNull Pattern pattern, @NotNull File folder)", "modifiers": "@NotNull public static", "return": "Matcher", "signature": "Matcher matchFolderToRegex(@NotNull Pattern pattern, @NotNull File folder)", "full_signature": "@NotNull public static Matcher matchFolderToRegex(@NotNull Pattern pattern, @NotNull File folder)", "class_method_signature": "LexicalIncludePaths.matchFolderToRegex(@NotNull Pattern pattern, @NotNull File folder)", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/navigator/nodes/ndk/includes/utils/LexicalIncludePaths.java"}, "focal_method": {"identifier": "trimPathSeparators", "parameters": "(@NotNull String path)", "modifiers": "@NotNull public static", "return": "String", "body": "@NotNull\n  public static String trimPathSeparators(@NotNull String path) {\n    String result = path;\n    if (result.endsWith(UNIX_SEPARATOR)) {\n      result = result.substring(0, result.length() - 1);\n    }\n    if (result.startsWith(UNIX_SEPARATOR)) {\n      result = result.substring(1);\n    }\n    return result;\n  }", "signature": "String trimPathSeparators(@NotNull String path)", "full_signature": "@NotNull public static String trimPathSeparators(@NotNull String path)", "class_method_signature": "LexicalIncludePaths.trimPathSeparators(@NotNull String path)", "testcase": false, "constructor": false, "invocations": ["endsWith", "substring", "length", "startsWith", "substring"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}