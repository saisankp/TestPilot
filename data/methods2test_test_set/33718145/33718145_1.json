{"test_class": {"identifier": "CadControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate BordereauParcellaireHelper cadController;", "modifier": "@Autowired\n\tprivate", "type": "BordereauParcellaireHelper", "declarator": "cadController", "var_name": "cadController"}], "file": "cadastrapp/src/test/java/org/georchestra/cadastrapp/service/CadControllerTest.java"}, "test_case": {"identifier": "testCheckAreMandatoryParametersValid", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCheckAreMandatoryParametersValid() {\n\t\t\n\t\tAssert.assertFalse(cadController.checkAreMandatoryParametersValid(null));\n\t\t\n\t\tArrayList<String> testList = new ArrayList<String>();\n\t\tAssert.assertFalse(cadController.checkAreMandatoryParametersValid(testList));\n\t\t\n\t\ttestList.add(\"test\");\n\t\tAssert.assertTrue(cadController.checkAreMandatoryParametersValid(testList));\n\t\t\n\t\ttestList.add(null);\n\t\tAssert.assertFalse(cadController.checkAreMandatoryParametersValid(testList));\n\t}", "signature": "void testCheckAreMandatoryParametersValid()", "full_signature": "@Test public void testCheckAreMandatoryParametersValid()", "class_method_signature": "CadControllerTest.testCheckAreMandatoryParametersValid()", "testcase": true, "constructor": false, "invocations": ["assertFalse", "checkAreMandatoryParametersValid", "assertFalse", "checkAreMandatoryParametersValid", "add", "assertTrue", "checkAreMandatoryParametersValid", "add", "assertFalse", "checkAreMandatoryParametersValid"]}, "focal_class": {"identifier": "CadController", "superclass": "", "interfaces": "", "fields": [{"original_string": "static final Logger logger = LoggerFactory.getLogger(CadController.class);", "modifier": "static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(CadController.class)", "var_name": "logger"}, {"original_string": "@Resource(name = \"dbDataSource\")\n\tprotected DataSource dataSource;", "modifier": "@Resource(name = \"dbDataSource\")\n\tprotected", "type": "DataSource", "declarator": "dataSource", "var_name": "dataSource"}, {"original_string": "protected String databaseSchema;", "modifier": "protected", "type": "String", "declarator": "databaseSchema", "var_name": "databaseSchema"}, {"original_string": "protected String cnil2RoleName;", "modifier": "protected", "type": "String", "declarator": "cnil2RoleName", "var_name": "cnil2RoleName"}, {"original_string": "protected String cnil1RoleName;", "modifier": "protected", "type": "String", "declarator": "cnil1RoleName", "var_name": "cnil1RoleName"}, {"original_string": "protected String roleSeparator;", "modifier": "protected", "type": "String", "declarator": "roleSeparator", "var_name": "roleSeparator"}, {"original_string": "protected int minNbCharForSearch;", "modifier": "protected", "type": "int", "declarator": "minNbCharForSearch", "var_name": "minNbCharForSearch"}, {"original_string": "protected int parcelleLength;", "modifier": "protected", "type": "int", "declarator": "parcelleLength", "var_name": "parcelleLength"}, {"original_string": "protected boolean isSearchFiltered;", "modifier": "protected", "type": "boolean", "declarator": "isSearchFiltered", "var_name": "isSearchFiltered"}, {"original_string": "protected final String ACCES_ERROR_LOG = \"User does not have rights to see thoses informations\";", "modifier": "protected final", "type": "String", "declarator": "ACCES_ERROR_LOG = \"User does not have rights to see thoses informations\"", "var_name": "ACCES_ERROR_LOG"}, {"original_string": "protected final String EMPTY_REQUEST_LOG = \"Parcelle Id List is empty nothing to search\";", "modifier": "protected final", "type": "String", "declarator": "EMPTY_REQUEST_LOG = \"Parcelle Id List is empty nothing to search\"", "var_name": "EMPTY_REQUEST_LOG"}], "methods": [{"identifier": "CadController", "parameters": "()", "modifiers": "public", "return": "", "signature": " CadController()", "full_signature": "public  CadController()", "class_method_signature": "CadController.CadController()", "testcase": false, "constructor": true}, {"identifier": "isMandatoryParameterValid", "parameters": "(String parameter)", "modifiers": "protected", "return": "boolean", "signature": "boolean isMandatoryParameterValid(String parameter)", "full_signature": "protected boolean isMandatoryParameterValid(String parameter)", "class_method_signature": "CadController.isMandatoryParameterValid(String parameter)", "testcase": false, "constructor": false}, {"identifier": "checkAreMandatoryParametersValid", "parameters": "(List<String> mandatoryList)", "modifiers": "protected", "return": "boolean", "signature": "boolean checkAreMandatoryParametersValid(List<String> mandatoryList)", "full_signature": "protected boolean checkAreMandatoryParametersValid(List<String> mandatoryList)", "class_method_signature": "CadController.checkAreMandatoryParametersValid(List<String> mandatoryList)", "testcase": false, "constructor": false}, {"identifier": "getUserCNILLevel", "parameters": "(HttpHeaders headers)", "modifiers": "protected", "return": "int", "signature": "int getUserCNILLevel(HttpHeaders headers)", "full_signature": "protected int getUserCNILLevel(HttpHeaders headers)", "class_method_signature": "CadController.getUserCNILLevel(HttpHeaders headers)", "testcase": false, "constructor": false}, {"identifier": "addAuthorizationFiltering", "parameters": "(HttpHeaders headers)", "modifiers": "protected", "return": "String", "signature": "String addAuthorizationFiltering(HttpHeaders headers)", "full_signature": "protected String addAuthorizationFiltering(HttpHeaders headers)", "class_method_signature": "CadController.addAuthorizationFiltering(HttpHeaders headers)", "testcase": false, "constructor": false}, {"identifier": "addAuthorizationFiltering", "parameters": "(HttpHeaders headers, String tableAlias)", "modifiers": "protected", "return": "String", "signature": "String addAuthorizationFiltering(HttpHeaders headers, String tableAlias)", "full_signature": "protected String addAuthorizationFiltering(HttpHeaders headers, String tableAlias)", "class_method_signature": "CadController.addAuthorizationFiltering(HttpHeaders headers, String tableAlias)", "testcase": false, "constructor": false}, {"identifier": "createLikeClauseRequest", "parameters": "(boolean isWhereAdded, StringBuilder sb, String libelle, String value, List<String> paramList)", "modifiers": "protected", "return": "boolean", "signature": "boolean createLikeClauseRequest(boolean isWhereAdded, StringBuilder sb, String libelle, String value, List<String> paramList)", "full_signature": "protected boolean createLikeClauseRequest(boolean isWhereAdded, StringBuilder sb, String libelle, String value, List<String> paramList)", "class_method_signature": "CadController.createLikeClauseRequest(boolean isWhereAdded, StringBuilder sb, String libelle, String value, List<String> paramList)", "testcase": false, "constructor": false}, {"identifier": "createRightLikeClauseRequest", "parameters": "(boolean isWhereAdded, StringBuilder sb, String libelle, String value, List<String> paramList)", "modifiers": "protected", "return": "boolean", "signature": "boolean createRightLikeClauseRequest(boolean isWhereAdded, StringBuilder sb, String libelle, String value, List<String> paramList)", "full_signature": "protected boolean createRightLikeClauseRequest(boolean isWhereAdded, StringBuilder sb, String libelle, String value, List<String> paramList)", "class_method_signature": "CadController.createRightLikeClauseRequest(boolean isWhereAdded, StringBuilder sb, String libelle, String value, List<String> paramList)", "testcase": false, "constructor": false}, {"identifier": "createEqualsClauseRequest", "parameters": "(boolean isWhereAdded, StringBuilder sb, String libelle, String value, List<String> paramList)", "modifiers": "protected", "return": "boolean", "signature": "boolean createEqualsClauseRequest(boolean isWhereAdded, StringBuilder sb, String libelle, String value, List<String> paramList)", "full_signature": "protected boolean createEqualsClauseRequest(boolean isWhereAdded, StringBuilder sb, String libelle, String value, List<String> paramList)", "class_method_signature": "CadController.createEqualsClauseRequest(boolean isWhereAdded, StringBuilder sb, String libelle, String value, List<String> paramList)", "testcase": false, "constructor": false}, {"identifier": "createListToStringQuery", "parameters": "(List<String> values)", "modifiers": "protected", "return": "String", "signature": "String createListToStringQuery(List<String> values)", "full_signature": "protected String createListToStringQuery(List<String> values)", "class_method_signature": "CadController.createListToStringQuery(List<String> values)", "testcase": false, "constructor": false}, {"identifier": "createWhereInQuery", "parameters": "(int size, String paramName)", "modifiers": "protected", "return": "String", "signature": "String createWhereInQuery(int size, String paramName)", "full_signature": "protected String createWhereInQuery(int size, String paramName)", "class_method_signature": "CadController.createWhereInQuery(int size, String paramName)", "testcase": false, "constructor": false}], "file": "cadastrapp/src/main/java/org/georchestra/cadastrapp/service/CadController.java"}, "focal_method": {"identifier": "checkAreMandatoryParametersValid", "parameters": "(List<String> mandatoryList)", "modifiers": "protected", "return": "boolean", "body": "protected boolean checkAreMandatoryParametersValid(List<String> mandatoryList) {\n\n\t\tboolean valid = false;\n\t\tlogger.debug(\" Mandatory parameters to check : \" + mandatoryList);\n\t\t\n\t\t// Valid if list not empty and if all parameter are present\n\t\tif (mandatoryList != null && !mandatoryList.isEmpty() && !mandatoryList.contains(null)){\n\t\t\tvalid = true;\n\t\t\tlogger.debug(\" Mandatory parameters are ok\");\n\t\t}\n\t\t\n\t\treturn valid;\n\t}", "signature": "boolean checkAreMandatoryParametersValid(List<String> mandatoryList)", "full_signature": "protected boolean checkAreMandatoryParametersValid(List<String> mandatoryList)", "class_method_signature": "CadController.checkAreMandatoryParametersValid(List<String> mandatoryList)", "testcase": false, "constructor": false, "invocations": ["debug", "isEmpty", "contains", "debug"]}, "repository": {"repo_id": 33718145, "url": "https://github.com/georchestra/cadastrapp", "language": "Java", "is_fork": false, "fork_count": 16, "stargazer_count": 7, "size": 6139, "license": "licensed"}}