{"test_class": {"identifier": "MetadataCommandDescriptionProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ITEM_NAME = \"itemName\";", "modifier": "private static final", "type": "String", "declarator": "ITEM_NAME = \"itemName\"", "var_name": "ITEM_NAME"}, {"original_string": "@SuppressWarnings(\"rawtypes\")\n    private @Mock ServiceReference managedProviderRef;", "modifier": "@SuppressWarnings(\"rawtypes\")\n    private @Mock", "type": "ServiceReference", "declarator": "managedProviderRef", "var_name": "managedProviderRef"}, {"original_string": "private @Mock BundleContext bundleContext;", "modifier": "private @Mock", "type": "BundleContext", "declarator": "bundleContext", "var_name": "bundleContext"}, {"original_string": "private @Mock ManagedMetadataProvider managedProvider;", "modifier": "private @Mock", "type": "ManagedMetadataProvider", "declarator": "managedProvider", "var_name": "managedProvider"}, {"original_string": "private @Mock MetadataRegistryImpl metadataRegistry;", "modifier": "private @Mock", "type": "MetadataRegistryImpl", "declarator": "metadataRegistry", "var_name": "metadataRegistry"}, {"original_string": "private MetadataCommandDescriptionProvider commandDescriptionProvider;", "modifier": "private", "type": "MetadataCommandDescriptionProvider", "declarator": "commandDescriptionProvider", "var_name": "commandDescriptionProvider"}, {"original_string": "private ServiceListener providerTracker;", "modifier": "private", "type": "ServiceListener", "declarator": "providerTracker", "var_name": "providerTracker"}], "file": "bundles/org.openhab.core/src/test/java/org/openhab/core/internal/items/MetadataCommandDescriptionProviderTest.java"}, "test_case": {"identifier": "testEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEmpty() throws Exception {\n        CommandDescription commandDescription = commandDescriptionProvider.getCommandDescription(ITEM_NAME, null);\n        assertNull(commandDescription);\n    }", "signature": "void testEmpty()", "full_signature": "@Test public void testEmpty()", "class_method_signature": "MetadataCommandDescriptionProviderTest.testEmpty()", "testcase": true, "constructor": false, "invocations": ["getCommandDescription", "assertNull"]}, "focal_class": {"identifier": "MetadataCommandDescriptionProvider", "superclass": "", "interfaces": "implements CommandDescriptionProvider", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(MetadataCommandDescriptionProvider.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(MetadataCommandDescriptionProvider.class)", "var_name": "logger"}, {"original_string": "public static final String COMMANDDESCRIPTION_METADATA_NAMESPACE = \"commandDescription\";", "modifier": "public static final", "type": "String", "declarator": "COMMANDDESCRIPTION_METADATA_NAMESPACE = \"commandDescription\"", "var_name": "COMMANDDESCRIPTION_METADATA_NAMESPACE"}, {"original_string": "private MetadataRegistry metadataRegistry;", "modifier": "private", "type": "MetadataRegistry", "declarator": "metadataRegistry", "var_name": "metadataRegistry"}], "methods": [{"identifier": "MetadataCommandDescriptionProvider", "parameters": "(final @Reference MetadataRegistry metadataRegistry,\n            Map<String, Object> properties)", "modifiers": "@Activate public", "return": "", "signature": " MetadataCommandDescriptionProvider(final @Reference MetadataRegistry metadataRegistry,\n            Map<String, Object> properties)", "full_signature": "@Activate public  MetadataCommandDescriptionProvider(final @Reference MetadataRegistry metadataRegistry,\n            Map<String, Object> properties)", "class_method_signature": "MetadataCommandDescriptionProvider.MetadataCommandDescriptionProvider(final @Reference MetadataRegistry metadataRegistry,\n            Map<String, Object> properties)", "testcase": false, "constructor": true}, {"identifier": "getCommandDescription", "parameters": "(String itemName, @Nullable Locale locale)", "modifiers": "@Override public @Nullable", "return": "CommandDescription", "signature": "CommandDescription getCommandDescription(String itemName, @Nullable Locale locale)", "full_signature": "@Override public @Nullable CommandDescription getCommandDescription(String itemName, @Nullable Locale locale)", "class_method_signature": "MetadataCommandDescriptionProvider.getCommandDescription(String itemName, @Nullable Locale locale)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core/src/main/java/org/openhab/core/internal/items/MetadataCommandDescriptionProvider.java"}, "focal_method": {"identifier": "getCommandDescription", "parameters": "(String itemName, @Nullable Locale locale)", "modifiers": "@Override public @Nullable", "return": "CommandDescription", "body": "@Override\n    public @Nullable CommandDescription getCommandDescription(String itemName, @Nullable Locale locale) {\n        Metadata metadata = metadataRegistry.get(new MetadataKey(COMMANDDESCRIPTION_METADATA_NAMESPACE, itemName));\n\n        if (metadata != null) {\n            try {\n                CommandDescriptionImpl commandDescription = new CommandDescriptionImpl();\n                if (metadata.getConfiguration().containsKey(\"options\")) {\n                    Stream.of(metadata.getConfiguration().get(\"options\").toString().split(\",\")).forEach(o -> {\n                        if (o.contains(\"=\")) {\n                            commandDescription.addCommandOption(\n                                    new CommandOption(o.split(\"=\")[0].trim(), o.split(\"=\")[1].trim()));\n                        } else {\n                            commandDescription.addCommandOption(new CommandOption(o.trim(), null));\n                        }\n                    });\n\n                    return commandDescription;\n                }\n            } catch (Exception e) {\n                logger.warn(\"Unable to parse the commandDescription from metadata for item {}, ignoring it\", itemName);\n                return null;\n            }\n        }\n\n        return null;\n    }", "signature": "CommandDescription getCommandDescription(String itemName, @Nullable Locale locale)", "full_signature": "@Override public @Nullable CommandDescription getCommandDescription(String itemName, @Nullable Locale locale)", "class_method_signature": "MetadataCommandDescriptionProvider.getCommandDescription(String itemName, @Nullable Locale locale)", "testcase": false, "constructor": false, "invocations": ["get", "containsKey", "getConfiguration", "forEach", "of", "split", "toString", "get", "getConfiguration", "contains", "addCommandOption", "trim", "split", "trim", "split", "addCommandOption", "trim", "warn"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}