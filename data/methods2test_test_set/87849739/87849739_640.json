{"test_class": {"identifier": "VcapServicesStringParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@ClassRule\n    public static final EnvironmentVariables ENVIRONMENT_VARIABLES = new EnvironmentVariables();", "modifier": "@ClassRule\n    public static final", "type": "EnvironmentVariables", "declarator": "ENVIRONMENT_VARIABLES = new EnvironmentVariables()", "var_name": "ENVIRONMENT_VARIABLES"}, {"original_string": "private static final String KNOWN_CONFIG_FILE_NAME = \"/vcap_services_test.json\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_CONFIG_FILE_NAME = \"/vcap_services_test.json\"", "var_name": "KNOWN_CONFIG_FILE_NAME"}, {"original_string": "private static String knownSystemVcapServicesString;", "modifier": "private static", "type": "String", "declarator": "knownSystemVcapServicesString", "var_name": "knownSystemVcapServicesString"}, {"original_string": "private VcapServicesStringParser underTest;", "modifier": "private", "type": "VcapServicesStringParser", "declarator": "underTest", "var_name": "underTest"}], "file": "services/utils/config/src/test/java/org/eclipse/ditto/services/utils/config/raw/VcapServicesStringParserTest.java"}, "test_case": {"identifier": "parseEmptyString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void parseEmptyString() {\n        final Config actual = underTest.apply(\"\");\n\n        assertThat(actual.isEmpty()).isTrue();\n    }", "signature": "void parseEmptyString()", "full_signature": "@Test public void parseEmptyString()", "class_method_signature": "VcapServicesStringParserTest.parseEmptyString()", "testcase": true, "constructor": false, "invocations": ["apply", "isTrue", "assertThat", "isEmpty"]}, "focal_class": {"identifier": "VcapServicesStringParser", "superclass": "", "interfaces": "implements Function<String, Config>", "fields": [{"original_string": "private static final String VCAP_SERVICE_NAME_CONFIG_PATH = \"name\";", "modifier": "private static final", "type": "String", "declarator": "VCAP_SERVICE_NAME_CONFIG_PATH = \"name\"", "var_name": "VCAP_SERVICE_NAME_CONFIG_PATH"}, {"original_string": "private static final VcapServicesStringParser INSTANCE = new VcapServicesStringParser();", "modifier": "private static final", "type": "VcapServicesStringParser", "declarator": "INSTANCE = new VcapServicesStringParser()", "var_name": "INSTANCE"}], "methods": [{"identifier": "VcapServicesStringParser", "parameters": "()", "modifiers": "private", "return": "", "signature": " VcapServicesStringParser()", "full_signature": "private  VcapServicesStringParser()", "class_method_signature": "VcapServicesStringParser.VcapServicesStringParser()", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "()", "modifiers": "static", "return": "VcapServicesStringParser", "signature": "VcapServicesStringParser getInstance()", "full_signature": "static VcapServicesStringParser getInstance()", "class_method_signature": "VcapServicesStringParser.getInstance()", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(final String systemVcapServices)", "modifiers": "@Override public", "return": "Config", "signature": "Config apply(final String systemVcapServices)", "full_signature": "@Override public Config apply(final String systemVcapServices)", "class_method_signature": "VcapServicesStringParser.apply(final String systemVcapServices)", "testcase": false, "constructor": false}, {"identifier": "tryToParseString", "parameters": "(final String s)", "modifiers": "private static", "return": "Config", "signature": "Config tryToParseString(final String s)", "full_signature": "private static Config tryToParseString(final String s)", "class_method_signature": "VcapServicesStringParser.tryToParseString(final String s)", "testcase": false, "constructor": false}, {"identifier": "convertConfigListToConfigObject", "parameters": "(final ConfigValue configValue)", "modifiers": "private static", "return": "ConfigValue", "signature": "ConfigValue convertConfigListToConfigObject(final ConfigValue configValue)", "full_signature": "private static ConfigValue convertConfigListToConfigObject(final ConfigValue configValue)", "class_method_signature": "VcapServicesStringParser.convertConfigListToConfigObject(final ConfigValue configValue)", "testcase": false, "constructor": false}, {"identifier": "getAsConfigObject", "parameters": "(final ConfigList configList)", "modifiers": "private static", "return": "ConfigObject", "signature": "ConfigObject getAsConfigObject(final ConfigList configList)", "full_signature": "private static ConfigObject getAsConfigObject(final ConfigList configList)", "class_method_signature": "VcapServicesStringParser.getAsConfigObject(final ConfigList configList)", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "(final ConfigObject configObject)", "modifiers": "private static", "return": "String", "signature": "String getName(final ConfigObject configObject)", "full_signature": "private static String getName(final ConfigObject configObject)", "class_method_signature": "VcapServicesStringParser.getName(final ConfigObject configObject)", "testcase": false, "constructor": false}], "file": "services/utils/config/src/main/java/org/eclipse/ditto/services/utils/config/raw/VcapServicesStringParser.java"}, "focal_method": {"identifier": "apply", "parameters": "(final String systemVcapServices)", "modifiers": "@Override public", "return": "Config", "body": "@Override\n    public Config apply(final String systemVcapServices) {\n        checkNotNull(systemVcapServices, \"system VCAP services string\");\n        if (systemVcapServices.isEmpty()) {\n            return ConfigFactory.empty();\n        }\n\n        final Config vcapServicesConfig = tryToParseString(systemVcapServices);\n        final Set<Map.Entry<String, ConfigValue>> vcapServicesConfigEntries = vcapServicesConfig.entrySet();\n\n        final Map<String, Object> result = new HashMap<>(vcapServicesConfigEntries.size());\n        for (final Map.Entry<String, ConfigValue> serviceConfigEntry : vcapServicesConfigEntries) {\n            result.put(serviceConfigEntry.getKey(), convertConfigListToConfigObject(serviceConfigEntry.getValue()));\n        }\n        return ConfigFactory.parseMap(result);\n    }", "signature": "Config apply(final String systemVcapServices)", "full_signature": "@Override public Config apply(final String systemVcapServices)", "class_method_signature": "VcapServicesStringParser.apply(final String systemVcapServices)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "isEmpty", "empty", "tryToParseString", "entrySet", "size", "put", "getKey", "convertConfigListToConfigObject", "getValue", "parseMap"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}