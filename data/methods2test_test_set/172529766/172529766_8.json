{"test_class": {"identifier": "SystemServiceTest", "superclass": "extends PrimeTimeTest", "interfaces": "", "fields": [{"original_string": "private SystemService systemService;", "modifier": "private", "type": "SystemService", "declarator": "systemService", "var_name": "systemService"}], "file": "common/app/src/test/java/com/sap/primetime/api/SystemServiceTest.java"}, "test_case": {"identifier": "testGetSystemInfo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetSystemInfo() throws Exception {\n\t\tassertNotNull(systemService.getSytemInfo().getCurrentTime());\n\t}", "signature": "void testGetSystemInfo()", "full_signature": "@Test public void testGetSystemInfo()", "class_method_signature": "SystemServiceTest.testGetSystemInfo()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getCurrentTime", "getSytemInfo"]}, "focal_class": {"identifier": "SystemService", "superclass": "extends BasicService", "interfaces": "", "fields": [], "methods": [{"identifier": "getSytemInfo", "parameters": "()", "modifiers": "@GET @Path(\"/info\") @Produces(MediaType.APPLICATION_JSON) public", "return": "SystemInfo", "signature": "SystemInfo getSytemInfo()", "full_signature": "@GET @Path(\"/info\") @Produces(MediaType.APPLICATION_JSON) public SystemInfo getSytemInfo()", "class_method_signature": "SystemService.getSytemInfo()", "testcase": false, "constructor": false}, {"identifier": "createSampleData", "parameters": "()", "modifiers": "@GET @Path(\"/sampledata\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response createSampleData()", "full_signature": "@GET @Path(\"/sampledata\") @Produces(MediaType.APPLICATION_JSON) public Response createSampleData()", "class_method_signature": "SystemService.createSampleData()", "testcase": false, "constructor": false}, {"identifier": "getConfigSections", "parameters": "()", "modifiers": "@GET @Path(\"/configsections\") @Produces(MediaType.APPLICATION_JSON) public", "return": "List<ConfigSection>", "signature": "List<ConfigSection> getConfigSections()", "full_signature": "@GET @Path(\"/configsections\") @Produces(MediaType.APPLICATION_JSON) public List<ConfigSection> getConfigSections()", "class_method_signature": "SystemService.getConfigSections()", "testcase": false, "constructor": false}, {"identifier": "updateConfigSection", "parameters": "(ConfigSection section, @PathParam(\"group\") String group)", "modifiers": "@PUT @Path(\"/configsections/{group}\") @Consumes(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response updateConfigSection(ConfigSection section, @PathParam(\"group\") String group)", "full_signature": "@PUT @Path(\"/configsections/{group}\") @Consumes(MediaType.APPLICATION_JSON) public Response updateConfigSection(ConfigSection section, @PathParam(\"group\") String group)", "class_method_signature": "SystemService.updateConfigSection(ConfigSection section, @PathParam(\"group\") String group)", "testcase": false, "constructor": false}, {"identifier": "deleteDBConfigKey", "parameters": "(@PathParam(\"group\") String group, @PathParam(\"key\") String key)", "modifiers": "@DELETE @Path(\"/configsections/{group}/{key}\") @Consumes(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response deleteDBConfigKey(@PathParam(\"group\") String group, @PathParam(\"key\") String key)", "full_signature": "@DELETE @Path(\"/configsections/{group}/{key}\") @Consumes(MediaType.APPLICATION_JSON) public Response deleteDBConfigKey(@PathParam(\"group\") String group, @PathParam(\"key\") String key)", "class_method_signature": "SystemService.deleteDBConfigKey(@PathParam(\"group\") String group, @PathParam(\"key\") String key)", "testcase": false, "constructor": false}, {"identifier": "reloadConfiguration", "parameters": "()", "modifiers": "@POST @Path(\"/reloadconfig\") public", "return": "Response", "signature": "Response reloadConfiguration()", "full_signature": "@POST @Path(\"/reloadconfig\") public Response reloadConfiguration()", "class_method_signature": "SystemService.reloadConfiguration()", "testcase": false, "constructor": false}, {"identifier": "clearCaches", "parameters": "()", "modifiers": "@POST @Path(\"/clearcache\") @Produces(MediaType.APPLICATION_JSON) public", "return": "Response", "signature": "Response clearCaches()", "full_signature": "@POST @Path(\"/clearcache\") @Produces(MediaType.APPLICATION_JSON) public Response clearCaches()", "class_method_signature": "SystemService.clearCaches()", "testcase": false, "constructor": false}], "file": "common/app/src/main/java/com/sap/primetime/api/SystemService.java"}, "focal_method": {"identifier": "getSytemInfo", "parameters": "()", "modifiers": "@GET @Path(\"/info\") @Produces(MediaType.APPLICATION_JSON) public", "return": "SystemInfo", "body": "@GET\n\t@Path(\"/info\")\n\t@Produces(MediaType.APPLICATION_JSON)\n\tpublic SystemInfo getSytemInfo() {\n\t\tSystemInfo result = new SystemInfo();\n\n\t\tString userId = userUtil.getLoggedInDBUser(request).getUserId();\n\t\tString infoCondition = ConfigUtil.getProperty(Consts.APP, Consts.PROP_INFOCONDITION);\n\n\t\tresult.setBuildTime(ConfigUtil.getProperty(Consts.APP, Consts.PROP_BUILDTIME));\n\t\tresult.setCurrentTime(new Date());\n\t\tresult.setDefaultTimezone(Calendar.getInstance().getTimeZone().getID());\n\t\tresult.setDateFormat(Consts.DATEFORMAT);\n\t\tresult.setVersion(Consts.VERSION);\n\t\tresult.setAnalyticsToken(ConfigUtil.getProperty(Consts.APP, Consts.PROP_ANALYTICSTOKEN));\n\t\tresult.setxDim(Consts.xDim);\n\t\tresult.setyDim(Consts.yDim);\n\t\tresult.setCurrentUser(userId);\n\t\tresult.setAdminMode(isAdmin() && userUtil.isImpersonating(request) == null);\n\t\tresult.setDbAdminMode(isDBAdmin() && userUtil.isImpersonating(request) == null);\n\t\tresult.setImpersonation(userUtil.isImpersonating(request));\n\t\tresult.setLogoutUrl(ConfigUtil.getProperty(Consts.APP, Consts.PROP_LOGOUTURL));\n\t\tresult.setGettingStartedUrl(ConfigUtil.getProperty(Consts.APP, Consts.PROP_GETTINGSTARTEDURL));\n\t\tresult.setDevelopmentUrl(ConfigUtil.getProperty(Consts.APP, Consts.PROP_DEVELOPMENTURL));\n\t\tresult.setNewsUrl(ConfigUtil.getProperty(Consts.APP, Consts.PROP_NEWSURL));\n\t\tresult.setAdministrators(ConfigUtil.getProperty(Consts.APP, Consts.PROP_ADMINISTRATORS));\n\t\tresult.setFileSupport(ConfigUtil.getBooleanProperty(Consts.APP, Consts.PROP_FILESUPPORT));\n\t\tresult.setRecommendedAppleTVAppVersion(\n\t\t\t\tConfigUtil.getProperty(Consts.APP, Consts.PROP_RECOMMENDEDAPPLETVAPPVERSION));\n\t\tresult.setInfoCondition(infoCondition);\n\t\tresult.setInfoConditionMet(StringUtils.isNotBlank(infoCondition) && userId.matches(infoCondition));\n\t\tresult.setInfoText(ConfigUtil.getProperty(Consts.APP, Consts.PROP_INFOTEXT));\n\t\tresult.setInfoLink(ConfigUtil.getProperty(Consts.APP, Consts.PROP_INFOLINK));\n\t\tresult.setConfigRefreshInterval(ConfigUtil.getIntProperty(Consts.APPLIANCE, Consts.PROP_CONFIGREFRESHINTERVAL));\n\t\tresult.setReloadInterval(ConfigUtil.getIntProperty(Consts.APPLIANCE, Consts.PROP_RELOADINTERVAL));\n\t\tresult.setScreenshotInterval(ConfigUtil.getIntProperty(Consts.APPLIANCE, Consts.PROP_SCREENSHOTINTERVAL));\n\t\tresult.setTechnicalUser(ConfigUtil.getProperty(Consts.APPLIANCE, Consts.PROP_TECHNICALUSER));\n\t\tresult.setAutoScreenshotInstances(ScreenDAO.getScreenshotInstances(true).size());\n\t\tresult.setStats_playlists(new PlaylistDAO().getCount());\n\t\tresult.setStats_pages(new PageDAO().getCount());\n\t\tresult.setStats_files(new FileDAO().getCount());\n\t\tresult.setStats_screens(new ScreenDAO().getCount());\n\t\tresult.setStats_activescreens(ScreenDAO.getActiveScreens().size());\n\n\t\treturn result;\n\t}", "signature": "SystemInfo getSytemInfo()", "full_signature": "@GET @Path(\"/info\") @Produces(MediaType.APPLICATION_JSON) public SystemInfo getSytemInfo()", "class_method_signature": "SystemService.getSytemInfo()", "testcase": false, "constructor": false, "invocations": ["getUserId", "getLoggedInDBUser", "getProperty", "setBuildTime", "getProperty", "setCurrentTime", "setDefaultTimezone", "getID", "getTimeZone", "getInstance", "setDateFormat", "setVersion", "setAnalyticsToken", "getProperty", "setxDim", "setyDim", "setCurrentUser", "setAdminMode", "isAdmin", "isImpersonating", "setDbAdminMode", "isDBAdmin", "isImpersonating", "setImpersonation", "isImpersonating", "setLogoutUrl", "getProperty", "setGettingStartedUrl", "getProperty", "setDevelopmentUrl", "getProperty", "setNewsUrl", "getProperty", "setAdministrators", "getProperty", "setFileSupport", "getBooleanProperty", "setRecommendedAppleTVAppVersion", "getProperty", "setInfoCondition", "setInfoConditionMet", "isNotBlank", "matches", "setInfoText", "getProperty", "setInfoLink", "getProperty", "setConfigRefreshInterval", "getIntProperty", "setReloadInterval", "getIntProperty", "setScreenshotInterval", "getIntProperty", "setTechnicalUser", "getProperty", "setAutoScreenshotInstances", "size", "getScreenshotInstances", "setStats_playlists", "getCount", "setStats_pages", "getCount", "setStats_files", "getCount", "setStats_screens", "getCount", "setStats_activescreens", "size", "getActiveScreens"]}, "repository": {"repo_id": 172529766, "url": "https://github.com/SAP/cloud-primetime", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 25, "size": 7529, "license": "licensed"}}