{"test_class": {"identifier": "StreamLoggerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(Ssh.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(Ssh.class)", "var_name": "LOG"}], "file": "core/src/test/java/com/axemblr/provisionr/core/logging/StreamLoggerTest.java"}, "test_case": {"identifier": "testStreamLogger", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testStreamLogger() throws InterruptedException {\n        final List<String> lines = Lists.newCopyOnWriteArrayList();\n\n        final byte[] bytes = \"line1\\nline2\\nline3\".getBytes(Charsets.UTF_8);\n        ByteArrayInputStream inputStream = new ByteArrayInputStream(bytes);\n\n        final StreamLogger logger = new StreamLogger(inputStream, LOG, MarkerFactory.getMarker(\"test\")) {\n            @Override\n            protected void log(Logger logger, Marker marker, String line) {\n                logger.info(marker, line);  /* just for visual inspection */\n                lines.add(line);\n            }\n        };\n        logger.start();\n\n        logger.join();\n        assertThat(lines).contains(\"line1\", \"line2\", \"line3\");\n    }", "signature": "void testStreamLogger()", "full_signature": "@Test public void testStreamLogger()", "class_method_signature": "StreamLoggerTest.testStreamLogger()", "testcase": true, "constructor": false, "invocations": ["newCopyOnWriteArrayList", "getBytes", "getMarker", "info", "add", "start", "join", "contains", "assertThat"]}, "focal_class": {"identifier": "StreamLogger", "superclass": "extends Thread", "interfaces": "", "fields": [{"original_string": "private final InputStream inputStream;", "modifier": "private final", "type": "InputStream", "declarator": "inputStream", "var_name": "inputStream"}, {"original_string": "private final Logger logger;", "modifier": "private final", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "private final Marker marker;", "modifier": "private final", "type": "Marker", "declarator": "marker", "var_name": "marker"}], "methods": [{"identifier": "StreamLogger", "parameters": "(InputStream inputStream, Logger logger, Marker marker)", "modifiers": "public", "return": "", "signature": " StreamLogger(InputStream inputStream, Logger logger, Marker marker)", "full_signature": "public  StreamLogger(InputStream inputStream, Logger logger, Marker marker)", "class_method_signature": "StreamLogger.StreamLogger(InputStream inputStream, Logger logger, Marker marker)", "testcase": false, "constructor": true}, {"identifier": "log", "parameters": "(Logger logger, Marker marker, String line)", "modifiers": "protected abstract", "return": "void", "signature": "void log(Logger logger, Marker marker, String line)", "full_signature": "protected abstract void log(Logger logger, Marker marker, String line)", "class_method_signature": "StreamLogger.log(Logger logger, Marker marker, String line)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "StreamLogger.run()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/axemblr/provisionr/core/logging/StreamLogger.java"}, "focal_method": {"identifier": "StreamLogger", "parameters": "(InputStream inputStream, Logger logger, Marker marker)", "modifiers": "public", "return": "", "body": "public StreamLogger(InputStream inputStream, Logger logger, Marker marker) {\n        this.inputStream = checkNotNull(inputStream, \"inputStream is null\");\n        this.logger = checkNotNull(logger, \"logger is null\");\n        this.marker = checkNotNull(marker, \"marker is null\");\n\n        setName(marker.getName());\n        setDaemon(true);\n    }", "signature": " StreamLogger(InputStream inputStream, Logger logger, Marker marker)", "full_signature": "public  StreamLogger(InputStream inputStream, Logger logger, Marker marker)", "class_method_signature": "StreamLogger.StreamLogger(InputStream inputStream, Logger logger, Marker marker)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 6035195, "url": "https://github.com/axemblr/axemblr-provisionr", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 30, "size": 3329, "license": "licensed"}}