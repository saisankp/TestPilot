{"test_class": {"identifier": "ExecutionContextStackImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ExecutionContextStackImpl contextStack;", "modifier": "private", "type": "ExecutionContextStackImpl", "declarator": "contextStack", "var_name": "contextStack"}], "file": "slice-core/src/test/java/com/cognifide/slice/core/internal/execution/ExecutionContextStackImplTest.java"}, "test_case": {"identifier": "testGetAbsolutePath", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetAbsolutePath() {\n\t\tString path = contextStack.getAbsolutePath(\"/examplePath\");\n\t\tAssert.assertEquals(path, \"/examplePath\");\n\t\tpath = contextStack.getAbsolutePath(\"examplePath\");\n\t\tAssert.assertEquals(path, \"/content/examplePath\");\n\n\t\tcontextStack.push(new ExecutionContextImpl(\"/secondContent\"));\n\t\tAssert.assertEquals(contextStack.size(), 1);\n\t\tpath = contextStack.getAbsolutePath(\"./examplePath\");\n\t\tAssert.assertEquals(path, \"/secondContent/examplePath\");\n\t\tcontextStack.pop();\n\t\tAssert.assertEquals(contextStack.size(), 0);\n\t}", "signature": "void testGetAbsolutePath()", "full_signature": "@Test public void testGetAbsolutePath()", "class_method_signature": "ExecutionContextStackImplTest.testGetAbsolutePath()", "testcase": true, "constructor": false, "invocations": ["getAbsolutePath", "assertEquals", "getAbsolutePath", "assertEquals", "push", "assertEquals", "size", "getAbsolutePath", "assertEquals", "pop", "assertEquals", "size"]}, "focal_class": {"identifier": "ExecutionContextStackImpl", "superclass": "", "interfaces": "implements ExecutionContextStack", "fields": [{"original_string": "private final Stack<ExecutionContext> items = new Stack<ExecutionContext>();", "modifier": "private final", "type": "Stack<ExecutionContext>", "declarator": "items = new Stack<ExecutionContext>()", "var_name": "items"}, {"original_string": "private final String rootPath;", "modifier": "private final", "type": "String", "declarator": "rootPath", "var_name": "rootPath"}], "methods": [{"identifier": "ExecutionContextStackImpl", "parameters": "(final String rootPath)", "modifiers": "public", "return": "", "signature": " ExecutionContextStackImpl(final String rootPath)", "full_signature": "public  ExecutionContextStackImpl(final String rootPath)", "class_method_signature": "ExecutionContextStackImpl.ExecutionContextStackImpl(final String rootPath)", "testcase": false, "constructor": true}, {"identifier": "peek", "parameters": "()", "modifiers": "@Override public", "return": "ExecutionContext", "signature": "ExecutionContext peek()", "full_signature": "@Override public ExecutionContext peek()", "class_method_signature": "ExecutionContextStackImpl.peek()", "testcase": false, "constructor": false}, {"identifier": "push", "parameters": "(final ExecutionContext executionContext)", "modifiers": "@Override public", "return": "void", "signature": "void push(final ExecutionContext executionContext)", "full_signature": "@Override public void push(final ExecutionContext executionContext)", "class_method_signature": "ExecutionContextStackImpl.push(final ExecutionContext executionContext)", "testcase": false, "constructor": false}, {"identifier": "pop", "parameters": "()", "modifiers": "@Override public", "return": "ExecutionContext", "signature": "ExecutionContext pop()", "full_signature": "@Override public ExecutionContext pop()", "class_method_signature": "ExecutionContextStackImpl.pop()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "ExecutionContextStackImpl.size()", "testcase": false, "constructor": false}, {"identifier": "getRootPath", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getRootPath()", "full_signature": "private String getRootPath()", "class_method_signature": "ExecutionContextStackImpl.getRootPath()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "private boolean isEmpty()", "class_method_signature": "ExecutionContextStackImpl.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "joinPath", "parameters": "(final Object... args)", "modifiers": "private", "return": "String", "signature": "String joinPath(final Object... args)", "full_signature": "private String joinPath(final Object... args)", "class_method_signature": "ExecutionContextStackImpl.joinPath(final Object... args)", "testcase": false, "constructor": false}, {"identifier": "getAbsolutePath", "parameters": "(final String path)", "modifiers": "@Override public", "return": "String", "signature": "String getAbsolutePath(final String path)", "full_signature": "@Override public String getAbsolutePath(final String path)", "class_method_signature": "ExecutionContextStackImpl.getAbsolutePath(final String path)", "testcase": false, "constructor": false}], "file": "slice-core/src/main/java/com/cognifide/slice/core/internal/execution/ExecutionContextStackImpl.java"}, "focal_method": {"identifier": "getAbsolutePath", "parameters": "(final String path)", "modifiers": "@Override public", "return": "String", "body": "@Override\n\tpublic String getAbsolutePath(final String path) {\n\t\tif (path.charAt(0) == '/') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (!path.startsWith(\"./\")) {\n\t\t\treturn joinPath(getRootPath(), path);\n\t\t}\n\n\t\tif (isEmpty()) {\n\t\t\tthrow new InvalidExecutionContextException(\"Relative path not allowed on top of ExecutionContext: \" + path);\n\t\t}\n\n\t\t// remove \"./\" from path\n\t\treturn joinPath(peek().getPath(), path.substring(2));\n\t}", "signature": "String getAbsolutePath(final String path)", "full_signature": "@Override public String getAbsolutePath(final String path)", "class_method_signature": "ExecutionContextStackImpl.getAbsolutePath(final String path)", "testcase": false, "constructor": false, "invocations": ["charAt", "startsWith", "joinPath", "getRootPath", "isEmpty", "joinPath", "getPath", "peek", "substring"]}, "repository": {"repo_id": 5900702, "url": "https://github.com/Cognifide/Slice", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 61, "size": 11367, "license": "licensed"}}