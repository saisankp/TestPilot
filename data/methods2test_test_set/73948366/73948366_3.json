{"test_class": {"identifier": "HttpTest", "superclass": "", "interfaces": "", "fields": [], "file": "libs/java/server_common/src/test/java/com/yahoo/athenz/common/server/rest/HttpTest.java"}, "test_case": {"identifier": "testAuthenticateCertificate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAuthenticateCertificate() {\n        HttpServletRequest httpServletRequest = Mockito.mock(HttpServletRequest.class);\n        Http.AuthorityList authorities = new Http.AuthorityList();\n        Authority authority = Mockito.mock(Authority.class);\n        Mockito.when(authority.getCredSource()).thenReturn(CredSource.CERTIFICATE);\n        X509Certificate[] certs = new X509Certificate[1];\n        certs[0] = Mockito.mock(X509Certificate.class);\n        Mockito.when(httpServletRequest.getAttribute(Http.JAVAX_CERT_ATTR)).thenReturn(certs);\n        Principal principal = Mockito.mock(Principal.class);\n        Mockito.when(authority.authenticate(ArgumentMatchers.any(X509Certificate[].class),\n                ArgumentMatchers.any())).thenReturn(principal);\n        authorities.add(authority);\n        assertNotNull(Http.authenticate(httpServletRequest, authorities));\n    }", "signature": "void testAuthenticateCertificate()", "full_signature": "@Test public void testAuthenticateCertificate()", "class_method_signature": "HttpTest.testAuthenticateCertificate()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "thenReturn", "when", "getCredSource", "mock", "thenReturn", "when", "getAttribute", "mock", "thenReturn", "when", "authenticate", "any", "any", "add", "assertNotNull", "authenticate"]}, "focal_class": {"identifier": "Http", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(Http.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(Http.class)", "var_name": "LOG"}, {"original_string": "public static final String WWW_AUTHENTICATE  = \"WWW-Authenticate\";", "modifier": "public static final", "type": "String", "declarator": "WWW_AUTHENTICATE  = \"WWW-Authenticate\"", "var_name": "WWW_AUTHENTICATE"}, {"original_string": "public static final String INVALID_CRED_ATTR = \"com.yahoo.athenz.auth.credential.error\";", "modifier": "public static final", "type": "String", "declarator": "INVALID_CRED_ATTR = \"com.yahoo.athenz.auth.credential.error\"", "var_name": "INVALID_CRED_ATTR"}, {"original_string": "public static final String AUTH_CHALLENGES   = \"com.yahoo.athenz.auth.credential.challenges\";", "modifier": "public static final", "type": "String", "declarator": "AUTH_CHALLENGES   = \"com.yahoo.athenz.auth.credential.challenges\"", "var_name": "AUTH_CHALLENGES"}, {"original_string": "public static final String JAVAX_CERT_ATTR   = \"javax.servlet.request.X509Certificate\";", "modifier": "public static final", "type": "String", "declarator": "JAVAX_CERT_ATTR   = \"javax.servlet.request.X509Certificate\"", "var_name": "JAVAX_CERT_ATTR"}], "methods": [{"identifier": "getCookieValue", "parameters": "(HttpServletRequest hreq, String name)", "modifiers": "static", "return": "String", "signature": "String getCookieValue(HttpServletRequest hreq, String name)", "full_signature": "static String getCookieValue(HttpServletRequest hreq, String name)", "class_method_signature": "Http.getCookieValue(HttpServletRequest hreq, String name)", "testcase": false, "constructor": false}, {"identifier": "authenticatingCredentials", "parameters": "(HttpServletRequest request,\n            Authority authority)", "modifiers": "static", "return": "String", "signature": "String authenticatingCredentials(HttpServletRequest request,\n            Authority authority)", "full_signature": "static String authenticatingCredentials(HttpServletRequest request,\n            Authority authority)", "class_method_signature": "Http.authenticatingCredentials(HttpServletRequest request,\n            Authority authority)", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(HttpServletRequest request,\n            AuthorityList authorities)", "modifiers": "public static", "return": "Principal", "signature": "Principal authenticate(HttpServletRequest request,\n            AuthorityList authorities)", "full_signature": "public static Principal authenticate(HttpServletRequest request,\n            AuthorityList authorities)", "class_method_signature": "Http.authenticate(HttpServletRequest request,\n            AuthorityList authorities)", "testcase": false, "constructor": false}, {"identifier": "authenticate", "parameters": "(HttpServletRequest request,\n            AuthorityList authorities, boolean optionalAuth)", "modifiers": "public static", "return": "Principal", "signature": "Principal authenticate(HttpServletRequest request,\n            AuthorityList authorities, boolean optionalAuth)", "full_signature": "public static Principal authenticate(HttpServletRequest request,\n            AuthorityList authorities, boolean optionalAuth)", "class_method_signature": "Http.authenticate(HttpServletRequest request,\n            AuthorityList authorities, boolean optionalAuth)", "testcase": false, "constructor": false}, {"identifier": "authenticatedUser", "parameters": "(HttpServletRequest request,\n            AuthorityList authorities)", "modifiers": "public static", "return": "String", "signature": "String authenticatedUser(HttpServletRequest request,\n            AuthorityList authorities)", "full_signature": "public static String authenticatedUser(HttpServletRequest request,\n            AuthorityList authorities)", "class_method_signature": "Http.authenticatedUser(HttpServletRequest request,\n            AuthorityList authorities)", "testcase": false, "constructor": false}, {"identifier": "authorizedUser", "parameters": "(HttpServletRequest request,\n            AuthorityList authorities, Authorizer authorizer, String action,\n            String resource, String otherDomain)", "modifiers": "public static", "return": "String", "signature": "String authorizedUser(HttpServletRequest request,\n            AuthorityList authorities, Authorizer authorizer, String action,\n            String resource, String otherDomain)", "full_signature": "public static String authorizedUser(HttpServletRequest request,\n            AuthorityList authorities, Authorizer authorizer, String action,\n            String resource, String otherDomain)", "class_method_signature": "Http.authorizedUser(HttpServletRequest request,\n            AuthorityList authorities, Authorizer authorizer, String action,\n            String resource, String otherDomain)", "testcase": false, "constructor": false}, {"identifier": "authorize", "parameters": "(Authorizer authorizer, Principal principal,\n            String action, String resource, String otherDomain)", "modifiers": "public static", "return": "Principal", "signature": "Principal authorize(Authorizer authorizer, Principal principal,\n            String action, String resource, String otherDomain)", "full_signature": "public static Principal authorize(Authorizer authorizer, Principal principal,\n            String action, String resource, String otherDomain)", "class_method_signature": "Http.authorize(Authorizer authorizer, Principal principal,\n            String action, String resource, String otherDomain)", "testcase": false, "constructor": false}], "file": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/rest/Http.java"}, "focal_method": {"identifier": "authenticate", "parameters": "(HttpServletRequest request,\n            AuthorityList authorities)", "modifiers": "public static", "return": "Principal", "body": "public static Principal authenticate(HttpServletRequest request,\n            AuthorityList authorities) {\n        return authenticate(request, authorities, false);\n    }", "signature": "Principal authenticate(HttpServletRequest request,\n            AuthorityList authorities)", "full_signature": "public static Principal authenticate(HttpServletRequest request,\n            AuthorityList authorities)", "class_method_signature": "Http.authenticate(HttpServletRequest request,\n            AuthorityList authorities)", "testcase": false, "constructor": false, "invocations": ["authenticate"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}