{"test_class": {"identifier": "CanVectorTest", "superclass": "", "interfaces": "", "fields": [], "file": "commons/src/test/java/org/apache/isis/commons/collections/CanVectorTest.java"}, "test_case": {"identifier": "populatedCanVector_shouldBeSerializable", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void populatedCanVector_shouldBeSerializable() {\n        val vector = new CanVector<String>(3);\n        vector.set(0, Can.<String>of(\"hi\"));\n        vector.set(1, Can.<String>of(\"hi\", \"there\"));\n        SerializationTester.assertEqualsOnRoundtrip(Can.<String>of(\"hi\"));\n    }", "signature": "void populatedCanVector_shouldBeSerializable()", "full_signature": "@Test void populatedCanVector_shouldBeSerializable()", "class_method_signature": "CanVectorTest.populatedCanVector_shouldBeSerializable()", "testcase": true, "constructor": false, "invocations": ["set", "of", "set", "of", "assertEqualsOnRoundtrip", "of"]}, "focal_class": {"identifier": "CanVector", "superclass": "", "interfaces": "implements Iterable<Can<T>>, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 1L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 1L", "var_name": "serialVersionUID"}, {"original_string": "private final int size;", "modifier": "private final", "type": "int", "declarator": "size", "var_name": "size"}, {"original_string": "private final List<Can<T>> cans;", "modifier": "private final", "type": "List<Can<T>>", "declarator": "cans", "var_name": "cans"}], "methods": [{"identifier": "CanVector", "parameters": "(int size)", "modifiers": "public", "return": "", "signature": " CanVector(int size)", "full_signature": "public  CanVector(int size)", "class_method_signature": "CanVector.CanVector(int size)", "testcase": false, "constructor": true}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "CanVector.size()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<Can<T>>", "signature": "Iterator<Can<T>> iterator()", "full_signature": "@Override public Iterator<Can<T>> iterator()", "class_method_signature": "CanVector.iterator()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int index)", "modifiers": "public", "return": "Can<T>", "signature": "Can<T> get(int index)", "full_signature": "public Can<T> get(int index)", "class_method_signature": "CanVector.get(int index)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int index, @NonNull Can<T> can)", "modifiers": "public", "return": "CanVector<T>", "signature": "CanVector<T> set(int index, @NonNull Can<T> can)", "full_signature": "public CanVector<T> set(int index, @NonNull Can<T> can)", "class_method_signature": "CanVector.set(int index, @NonNull Can<T> can)", "testcase": false, "constructor": false}, {"identifier": "empty", "parameters": "()", "modifiers": "public static", "return": "CanVector<T>", "signature": "CanVector<T> empty()", "full_signature": "public static CanVector<T> empty()", "class_method_signature": "CanVector.empty()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "CanVector.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "CanVector.hashCode()", "testcase": false, "constructor": false}], "file": "commons/src/main/java/org/apache/isis/commons/collections/CanVector.java"}, "focal_method": {"identifier": "set", "parameters": "(int index, @NonNull Can<T> can)", "modifiers": "public", "return": "CanVector<T>", "body": "public CanVector<T> set(int index, @NonNull Can<T> can) {\n        cans.set(index, can);\n        return this;\n    }", "signature": "CanVector<T> set(int index, @NonNull Can<T> can)", "full_signature": "public CanVector<T> set(int index, @NonNull Can<T> can)", "class_method_signature": "CanVector.set(int index, @NonNull Can<T> can)", "testcase": false, "constructor": false, "invocations": ["set"]}, "repository": {"repo_id": 6935442, "url": "https://github.com/apache/isis", "stars": 516, "created": "11/30/2012 8:00:24 AM +00:00", "updates": "2020-01-27T13:28:09+00:00", "fork": "False", "license": "licensed"}}