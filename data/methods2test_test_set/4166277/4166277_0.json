{"test_class": {"identifier": "FormatsTest", "superclass": "", "interfaces": "", "fields": [], "file": "sjk-core/src/test/java/org/gridkit/util/formating/FormatsTest.java"}, "test_case": {"identifier": "testformatRate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testformatRate() {\n    assertEquals(\"    0\", formatRate(0d));\n    assertEquals(\"50.00\", formatRate(50d));\n    assertEquals(\"500.0\", formatRate(500d));\n    assertEquals(\"50.0k\", formatRate(50e3d));\n    assertEquals(\"50.0m\", formatRate(50e6d));\n    assertEquals(\"50.0g\", formatRate(50e9d));\n    assertEquals(\"1.5e+11\", formatRate(150e9d));\n  }", "signature": "void testformatRate()", "full_signature": "@Test public void testformatRate()", "class_method_signature": "FormatsTest.testformatRate()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "formatRate", "assertEquals", "formatRate", "assertEquals", "formatRate", "assertEquals", "formatRate", "assertEquals", "formatRate", "assertEquals", "formatRate", "assertEquals", "formatRate"]}, "focal_class": {"identifier": "Formats", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String ZERO_LEAD_DECIMAL_6 = \"%06d\";", "modifier": "public static final", "type": "String", "declarator": "ZERO_LEAD_DECIMAL_6 = \"%06d\"", "var_name": "ZERO_LEAD_DECIMAL_6"}, {"original_string": "public static final String DATE_STAMP = \"%1$tFT%1$tT.%1$tL%1$tz\";", "modifier": "public static final", "type": "String", "declarator": "DATE_STAMP = \"%1$tFT%1$tT.%1$tL%1$tz\"", "var_name": "DATE_STAMP"}, {"original_string": "public static final String FILE_DATE_STAMP = \"%1$tY%1$tm%1$td-%1$tH%1$tM%1$tS\";", "modifier": "public static final", "type": "String", "declarator": "FILE_DATE_STAMP = \"%1$tY%1$tm%1$td-%1$tH%1$tM%1$tS\"", "var_name": "FILE_DATE_STAMP"}, {"original_string": "public static final String TIME_STAMP = \"%1$tT.%1$tL\";", "modifier": "public static final", "type": "String", "declarator": "TIME_STAMP = \"%1$tT.%1$tL\"", "var_name": "TIME_STAMP"}], "methods": [{"identifier": "toTimestamp", "parameters": "(long millis)", "modifiers": "public static final", "return": "String", "signature": "String toTimestamp(long millis)", "full_signature": "public static final String toTimestamp(long millis)", "class_method_signature": "Formats.toTimestamp(long millis)", "testcase": false, "constructor": false}, {"identifier": "toDatestamp", "parameters": "(long millis)", "modifiers": "public static final", "return": "String", "signature": "String toDatestamp(long millis)", "full_signature": "public static final String toDatestamp(long millis)", "class_method_signature": "Formats.toDatestamp(long millis)", "testcase": false, "constructor": false}, {"identifier": "toFileDatestamp", "parameters": "(long millis)", "modifiers": "public static final", "return": "String", "signature": "String toFileDatestamp(long millis)", "full_signature": "public static final String toFileDatestamp(long millis)", "class_method_signature": "Formats.toFileDatestamp(long millis)", "testcase": false, "constructor": false}, {"identifier": "currentDatestamp", "parameters": "()", "modifiers": "public static final", "return": "String", "signature": "String currentDatestamp()", "full_signature": "public static final String currentDatestamp()", "class_method_signature": "Formats.currentDatestamp()", "testcase": false, "constructor": false}, {"identifier": "currentFileDatestamp", "parameters": "()", "modifiers": "public static final", "return": "String", "signature": "String currentFileDatestamp()", "full_signature": "public static final String currentFileDatestamp()", "class_method_signature": "Formats.currentFileDatestamp()", "testcase": false, "constructor": false}, {"identifier": "formatRate", "parameters": "(double rate)", "modifiers": "public static final", "return": "String", "signature": "String formatRate(double rate)", "full_signature": "public static final String formatRate(double rate)", "class_method_signature": "Formats.formatRate(double rate)", "testcase": false, "constructor": false}, {"identifier": "toMemorySize", "parameters": "(long n)", "modifiers": "public static final", "return": "String", "signature": "String toMemorySize(long n)", "full_signature": "public static final String toMemorySize(long n)", "class_method_signature": "Formats.toMemorySize(long n)", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "Formats.main(String[] args)", "testcase": false, "constructor": false}], "file": "sjk-core/src/main/java/org/gridkit/util/formating/Formats.java"}, "focal_method": {"identifier": "formatRate", "parameters": "(double rate)", "modifiers": "public static final", "return": "String", "body": "public static final String formatRate(double rate) {\n        if (rate == 0) {\n            return \"    0\";\n        }\n        else if (rate < 100) {\n            return String.format(\"%5.2f\", rate);\n        }\n        else if (rate < 1000) {\n            return String.format(\"%5.1f\", rate);\n        }\n        else if (rate < 100e3) {\n            return String.format(\"%4.1fk\", rate / 1e3);\n        }\n        else if (rate < 100e6) {\n            return String.format(\"%4.1fm\", rate / 1e6);\n        }\n        else if (rate < 100e9) {\n            return String.format(\"%4.1fg\", rate / 1e9);\n        }\n        else {\n            return String.format(\"%5.1e\", rate);\n        }\n    }", "signature": "String formatRate(double rate)", "full_signature": "public static final String formatRate(double rate)", "class_method_signature": "Formats.formatRate(double rate)", "testcase": false, "constructor": false, "invocations": ["format", "format", "format", "format", "format", "format"]}, "repository": {"repo_id": 4166277, "url": "https://github.com/aragozin/jvm-tools", "language": "Java", "is_fork": false, "fork_count": 443, "stargazer_count": 2728, "size": 4961, "license": "licensed"}}