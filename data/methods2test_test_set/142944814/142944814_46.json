{"test_class": {"identifier": "TransactionApiImplTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "protected final TxRequester txRequester = new TxRequester() {\n    @Override\n    public TxHash request(AergoClient aergoClient, Signer signer, TxRequestFunction requestFunction)\n        throws Exception {\n      return requestFunction.apply(signer, 1L);\n    }\n  };", "modifier": "protected final", "type": "TxRequester", "declarator": "txRequester = new TxRequester() {\n    @Override\n    public TxHash request(AergoClient aergoClient, Signer signer, TxRequestFunction requestFunction)\n        throws Exception {\n      return requestFunction.apply(signer, 1L);\n    }\n  }", "var_name": "txRequester"}], "file": "client/wallet/src/test/java/hera/wallet/TransactionApiImplTest.java"}, "test_case": {"identifier": "testUnstake", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testUnstake() {\n    // given\n    final AccountOperation mockOperation = mock(AccountOperation.class);\n    when(mockOperation.unstakeTx(any(Signer.class), any(Aer.class), anyLong()))\n        .thenReturn(TxHash.of(BytesValue.EMPTY));\n    final AergoClient mockClient = mock(AergoClient.class);\n    when(mockClient.getAccountOperation()).thenReturn(mockOperation);\n    final ClientProvider mockClientProvider = mock(ClientProvider.class);\n    when(mockClientProvider.getClient()).thenReturn(mockClient);\n\n    // then\n    final AergoKey signer = new AergoKeyGenerator().create();\n    final TransactionApi transactionApi = new TransactionApiImpl(mockClientProvider, signer,\n        txRequester);\n    final TxHash txHash = transactionApi.unstake(anyAmount);\n    assertNotNull(txHash);\n  }", "signature": "void testUnstake()", "full_signature": "@Test public void testUnstake()", "class_method_signature": "TransactionApiImplTest.testUnstake()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "unstakeTx", "any", "any", "anyLong", "of", "mock", "thenReturn", "when", "getAccountOperation", "mock", "thenReturn", "when", "getClient", "create", "unstake", "assertNotNull"]}, "focal_class": {"identifier": "TransactionApiImpl", "superclass": "extends AbstractApi", "interfaces": "implements TransactionApi", "fields": [{"original_string": "@NonNull\n  protected final ClientProvider clientProvider;", "modifier": "@NonNull\n  protected final", "type": "ClientProvider", "declarator": "clientProvider", "var_name": "clientProvider"}, {"original_string": "@NonNull\n  protected final Signer signer;", "modifier": "@NonNull\n  protected final", "type": "Signer", "declarator": "signer", "var_name": "signer"}, {"original_string": "@NonNull\n  protected final TxRequester txRequester;", "modifier": "@NonNull\n  protected final", "type": "TxRequester", "declarator": "txRequester", "var_name": "txRequester"}], "methods": [{"identifier": "createName", "parameters": "(final String name)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash createName(final String name)", "full_signature": "@Override public TxHash createName(final String name)", "class_method_signature": "TransactionApiImpl.createName(final String name)", "testcase": false, "constructor": false}, {"identifier": "createName", "parameters": "(final Name name)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash createName(final Name name)", "full_signature": "@Override public TxHash createName(final Name name)", "class_method_signature": "TransactionApiImpl.createName(final Name name)", "testcase": false, "constructor": false}, {"identifier": "updateName", "parameters": "(final String name, final AccountAddress newOwner)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash updateName(final String name, final AccountAddress newOwner)", "full_signature": "@Override public TxHash updateName(final String name, final AccountAddress newOwner)", "class_method_signature": "TransactionApiImpl.updateName(final String name, final AccountAddress newOwner)", "testcase": false, "constructor": false}, {"identifier": "updateName", "parameters": "(final Name name, final AccountAddress newOwner)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash updateName(final Name name, final AccountAddress newOwner)", "full_signature": "@Override public TxHash updateName(final Name name, final AccountAddress newOwner)", "class_method_signature": "TransactionApiImpl.updateName(final Name name, final AccountAddress newOwner)", "testcase": false, "constructor": false}, {"identifier": "stake", "parameters": "(final Aer amount)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash stake(final Aer amount)", "full_signature": "@Override public TxHash stake(final Aer amount)", "class_method_signature": "TransactionApiImpl.stake(final Aer amount)", "testcase": false, "constructor": false}, {"identifier": "unstake", "parameters": "(final Aer amount)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash unstake(final Aer amount)", "full_signature": "@Override public TxHash unstake(final Aer amount)", "class_method_signature": "TransactionApiImpl.unstake(final Aer amount)", "testcase": false, "constructor": false}, {"identifier": "voteBp", "parameters": "(List<String> candidates)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash voteBp(List<String> candidates)", "full_signature": "@Override public TxHash voteBp(List<String> candidates)", "class_method_signature": "TransactionApiImpl.voteBp(List<String> candidates)", "testcase": false, "constructor": false}, {"identifier": "vote", "parameters": "(final String voteId, final List<String> candidates)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash vote(final String voteId, final List<String> candidates)", "full_signature": "@Override public TxHash vote(final String voteId, final List<String> candidates)", "class_method_signature": "TransactionApiImpl.vote(final String voteId, final List<String> candidates)", "testcase": false, "constructor": false}, {"identifier": "send", "parameters": "(AccountAddress recipient, Aer amount, Fee fee)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash send(AccountAddress recipient, Aer amount, Fee fee)", "full_signature": "@Override public TxHash send(AccountAddress recipient, Aer amount, Fee fee)", "class_method_signature": "TransactionApiImpl.send(AccountAddress recipient, Aer amount, Fee fee)", "testcase": false, "constructor": false}, {"identifier": "send", "parameters": "(final AccountAddress recipient, final Aer amount, final Fee fee,\n      final BytesValue payload)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash send(final AccountAddress recipient, final Aer amount, final Fee fee,\n      final BytesValue payload)", "full_signature": "@Override public TxHash send(final AccountAddress recipient, final Aer amount, final Fee fee,\n      final BytesValue payload)", "class_method_signature": "TransactionApiImpl.send(final AccountAddress recipient, final Aer amount, final Fee fee,\n      final BytesValue payload)", "testcase": false, "constructor": false}, {"identifier": "send", "parameters": "(final String recipient, final Aer amount, final Fee fee)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash send(final String recipient, final Aer amount, final Fee fee)", "full_signature": "@Override public TxHash send(final String recipient, final Aer amount, final Fee fee)", "class_method_signature": "TransactionApiImpl.send(final String recipient, final Aer amount, final Fee fee)", "testcase": false, "constructor": false}, {"identifier": "send", "parameters": "(final String recipient, final Aer amount, final Fee fee,\n      final BytesValue payload)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash send(final String recipient, final Aer amount, final Fee fee,\n      final BytesValue payload)", "full_signature": "@Override public TxHash send(final String recipient, final Aer amount, final Fee fee,\n      final BytesValue payload)", "class_method_signature": "TransactionApiImpl.send(final String recipient, final Aer amount, final Fee fee,\n      final BytesValue payload)", "testcase": false, "constructor": false}, {"identifier": "send", "parameters": "(final Name recipient, final Aer amount, final Fee fee)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash send(final Name recipient, final Aer amount, final Fee fee)", "full_signature": "@Override public TxHash send(final Name recipient, final Aer amount, final Fee fee)", "class_method_signature": "TransactionApiImpl.send(final Name recipient, final Aer amount, final Fee fee)", "testcase": false, "constructor": false}, {"identifier": "send", "parameters": "(final Name recipient, final Aer amount, final Fee fee,\n      final BytesValue payload)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash send(final Name recipient, final Aer amount, final Fee fee,\n      final BytesValue payload)", "full_signature": "@Override public TxHash send(final Name recipient, final Aer amount, final Fee fee,\n      final BytesValue payload)", "class_method_signature": "TransactionApiImpl.send(final Name recipient, final Aer amount, final Fee fee,\n      final BytesValue payload)", "testcase": false, "constructor": false}, {"identifier": "commit", "parameters": "(final RawTransaction rawTransaction)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash commit(final RawTransaction rawTransaction)", "full_signature": "@Override public TxHash commit(final RawTransaction rawTransaction)", "class_method_signature": "TransactionApiImpl.commit(final RawTransaction rawTransaction)", "testcase": false, "constructor": false}, {"identifier": "commit", "parameters": "(final Transaction signedTransaction)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash commit(final Transaction signedTransaction)", "full_signature": "@Override public TxHash commit(final Transaction signedTransaction)", "class_method_signature": "TransactionApiImpl.commit(final Transaction signedTransaction)", "testcase": false, "constructor": false}, {"identifier": "deploy", "parameters": "(final ContractDefinition contractDefinition, final Fee fee)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash deploy(final ContractDefinition contractDefinition, final Fee fee)", "full_signature": "@Override public TxHash deploy(final ContractDefinition contractDefinition, final Fee fee)", "class_method_signature": "TransactionApiImpl.deploy(final ContractDefinition contractDefinition, final Fee fee)", "testcase": false, "constructor": false}, {"identifier": "redeploy", "parameters": "(final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final Fee fee)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash redeploy(final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final Fee fee)", "full_signature": "@Override public TxHash redeploy(final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final Fee fee)", "class_method_signature": "TransactionApiImpl.redeploy(final ContractAddress existingContract,\n      final ContractDefinition contractDefinition, final Fee fee)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "(final ContractInvocation contractInvocation, final Fee fee)", "modifiers": "@Override public", "return": "TxHash", "signature": "TxHash execute(final ContractInvocation contractInvocation, final Fee fee)", "full_signature": "@Override public TxHash execute(final ContractInvocation contractInvocation, final Fee fee)", "class_method_signature": "TransactionApiImpl.execute(final ContractInvocation contractInvocation, final Fee fee)", "testcase": false, "constructor": false}, {"identifier": "getClient", "parameters": "()", "modifiers": "protected", "return": "AergoClient", "signature": "AergoClient getClient()", "full_signature": "protected AergoClient getClient()", "class_method_signature": "TransactionApiImpl.getClient()", "testcase": false, "constructor": false}, {"identifier": "getSigner", "parameters": "()", "modifiers": "protected", "return": "Signer", "signature": "Signer getSigner()", "full_signature": "protected Signer getSigner()", "class_method_signature": "TransactionApiImpl.getSigner()", "testcase": false, "constructor": false}], "file": "client/wallet/src/main/java/hera/wallet/TransactionApiImpl.java"}, "focal_method": {"identifier": "unstake", "parameters": "(final Aer amount)", "modifiers": "@Override public", "return": "TxHash", "body": "@Override\n  public TxHash unstake(final Aer amount) {\n    try {\n      return txRequester.request(getClient(), getSigner(), new TxRequestFunction() {\n\n        @Override\n        public TxHash apply(Signer signer, Long t) {\n          return getClient().getAccountOperation().unstakeTx(signer, amount, t);\n        }\n      });\n    } catch (Exception e) {\n      throw converter.convert(e);\n    }\n  }", "signature": "TxHash unstake(final Aer amount)", "full_signature": "@Override public TxHash unstake(final Aer amount)", "class_method_signature": "TransactionApiImpl.unstake(final Aer amount)", "testcase": false, "constructor": false, "invocations": ["request", "getClient", "getSigner", "unstakeTx", "getAccountOperation", "getClient", "convert"]}, "repository": {"repo_id": 142944814, "url": "https://github.com/aergoio/heraj", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 18, "size": 11443, "license": "licensed"}}