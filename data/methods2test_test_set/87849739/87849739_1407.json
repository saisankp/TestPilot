{"test_class": {"identifier": "ImmutableAcknowledgementLabelTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String KNOWN_LABEL_VALUE = \"KEEP-ALESIA\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_LABEL_VALUE = \"KEEP-ALESIA\"", "var_name": "KNOWN_LABEL_VALUE"}], "file": "model/base/src/test/java/org/eclipse/ditto/model/base/acks/ImmutableAcknowledgementLabelTest.java"}, "test_case": {"identifier": "compareToWorksAsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void compareToWorksAsExpected() {\n        final ImmutableAcknowledgementLabel ackLabelAbc = ImmutableAcknowledgementLabel.of(\"abc\");\n        final ImmutableAcknowledgementLabel ackLabelDef = ImmutableAcknowledgementLabel.of(\"def\");\n\n        try (final AutoCloseableSoftAssertions softly = new AutoCloseableSoftAssertions()) {\n            softly.assertThat(ackLabelAbc.compareTo(ackLabelAbc))\n                    .as(\"compare with equal\")\n                    .isZero();\n            softly.assertThat(ackLabelAbc.compareTo(ackLabelDef))\n                    .as(\"compare with greater\")\n                    .isNegative();\n            softly.assertThat(ackLabelDef.compareTo(ackLabelAbc))\n                    .as(\"compare with less\")\n                    .isPositive();\n        }\n    }", "signature": "void compareToWorksAsExpected()", "full_signature": "@Test public void compareToWorksAsExpected()", "class_method_signature": "ImmutableAcknowledgementLabelTest.compareToWorksAsExpected()", "testcase": true, "constructor": false, "invocations": ["of", "of", "isZero", "as", "assertThat", "compareTo", "isNegative", "as", "assertThat", "compareTo", "isPositive", "as", "assertThat", "compareTo"]}, "focal_class": {"identifier": "ImmutableAcknowledgementLabel", "superclass": "", "interfaces": "implements AcknowledgementLabel", "fields": [{"original_string": "private final String label;", "modifier": "private final", "type": "String", "declarator": "label", "var_name": "label"}], "methods": [{"identifier": "ImmutableAcknowledgementLabel", "parameters": "(final String label)", "modifiers": "private", "return": "", "signature": " ImmutableAcknowledgementLabel(final String label)", "full_signature": "private  ImmutableAcknowledgementLabel(final String label)", "class_method_signature": "ImmutableAcknowledgementLabel.ImmutableAcknowledgementLabel(final String label)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final CharSequence label)", "modifiers": "static", "return": "ImmutableAcknowledgementLabel", "signature": "ImmutableAcknowledgementLabel of(final CharSequence label)", "full_signature": "static ImmutableAcknowledgementLabel of(final CharSequence label)", "class_method_signature": "ImmutableAcknowledgementLabel.of(final CharSequence label)", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int length()", "full_signature": "@Override public int length()", "class_method_signature": "ImmutableAcknowledgementLabel.length()", "testcase": false, "constructor": false}, {"identifier": "charAt", "parameters": "(final int index)", "modifiers": "@Override public", "return": "char", "signature": "char charAt(final int index)", "full_signature": "@Override public char charAt(final int index)", "class_method_signature": "ImmutableAcknowledgementLabel.charAt(final int index)", "testcase": false, "constructor": false}, {"identifier": "subSequence", "parameters": "(final int start, final int end)", "modifiers": "@Override public", "return": "CharSequence", "signature": "CharSequence subSequence(final int start, final int end)", "full_signature": "@Override public CharSequence subSequence(final int start, final int end)", "class_method_signature": "ImmutableAcknowledgementLabel.subSequence(final int start, final int end)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object o)", "modifiers": "@SuppressWarnings(\"squid:S2097\") @Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object o)", "full_signature": "@SuppressWarnings(\"squid:S2097\") @Override public boolean equals(@Nullable final Object o)", "class_method_signature": "ImmutableAcknowledgementLabel.equals(@Nullable final Object o)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final Class<?>[] interfaceClasses, final Class<?> searchedInterfaceClass)", "modifiers": "private static", "return": "boolean", "signature": "boolean contains(final Class<?>[] interfaceClasses, final Class<?> searchedInterfaceClass)", "full_signature": "private static boolean contains(final Class<?>[] interfaceClasses, final Class<?> searchedInterfaceClass)", "class_method_signature": "ImmutableAcknowledgementLabel.contains(final Class<?>[] interfaceClasses, final Class<?> searchedInterfaceClass)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableAcknowledgementLabel.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableAcknowledgementLabel.toString()", "testcase": false, "constructor": false}], "file": "model/base/src/main/java/org/eclipse/ditto/model/base/acks/ImmutableAcknowledgementLabel.java"}, "focal_method": {"identifier": "of", "parameters": "(final CharSequence label)", "modifiers": "static", "return": "ImmutableAcknowledgementLabel", "body": "static ImmutableAcknowledgementLabel of(final CharSequence label) {\n        return new ImmutableAcknowledgementLabel(label.toString());\n    }", "signature": "ImmutableAcknowledgementLabel of(final CharSequence label)", "full_signature": "static ImmutableAcknowledgementLabel of(final CharSequence label)", "class_method_signature": "ImmutableAcknowledgementLabel.of(final CharSequence label)", "testcase": false, "constructor": false, "invocations": ["toString"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}