{"test_class": {"identifier": "EasterSpecTest", "superclass": "", "interfaces": "", "fields": [], "file": "jtstoolkit/src/test/java/ec/tstoolkit/arima/special/EasterSpecTest.java"}, "test_case": {"identifier": "testSetDurationUpperBound", "parameters": "()", "modifiers": "@Test (expected = TsException.class) public", "return": "void", "body": "@Test (expected = TsException.class)\n    public void testSetDurationUpperBound() {\n        EasterSpec spec = new EasterSpec();\n        spec.setDuration(16);\n    }", "signature": "void testSetDurationUpperBound()", "full_signature": "@Test (expected = TsException.class) public void testSetDurationUpperBound()", "class_method_signature": "EasterSpecTest.testSetDurationUpperBound()", "testcase": true, "constructor": false, "invocations": ["setDuration"]}, "focal_class": {"identifier": "EasterSpec", "superclass": "", "interfaces": "implements Cloneable, InformationSetSerializable", "fields": [{"original_string": "public static final String DURATION = \"duration\", TYPE = \"type\", JULIAN=\"julian\";", "modifier": "public static final", "type": "String", "declarator": "DURATION = \"duration\"", "var_name": "DURATION"}, {"original_string": "private int duration_ = DEF_IDUR;", "modifier": "private", "type": "int", "declarator": "duration_ = DEF_IDUR", "var_name": "duration_"}, {"original_string": "private Type type_ = Type.Unused;", "modifier": "private", "type": "Type", "declarator": "type_ = Type.Unused", "var_name": "type_"}, {"original_string": "private boolean julian=DEF_JULIAN;", "modifier": "private", "type": "boolean", "declarator": "julian=DEF_JULIAN", "var_name": "julian"}, {"original_string": "public static final int DEF_IDUR = 6;", "modifier": "public static final", "type": "int", "declarator": "DEF_IDUR = 6", "var_name": "DEF_IDUR"}, {"original_string": "public static boolean DEF_JULIAN=false;", "modifier": "public static", "type": "boolean", "declarator": "DEF_JULIAN=false", "var_name": "DEF_JULIAN"}], "methods": [{"identifier": "fillDictionary", "parameters": "(String prefix, Map<String, Class> dic)", "modifiers": "public static", "return": "void", "signature": "void fillDictionary(String prefix, Map<String, Class> dic)", "full_signature": "public static void fillDictionary(String prefix, Map<String, Class> dic)", "class_method_signature": "EasterSpec.fillDictionary(String prefix, Map<String, Class> dic)", "testcase": false, "constructor": false}, {"identifier": "EasterSpec", "parameters": "()", "modifiers": "public", "return": "", "signature": " EasterSpec()", "full_signature": "public  EasterSpec()", "class_method_signature": "EasterSpec.EasterSpec()", "testcase": false, "constructor": true}, {"identifier": "reset", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reset()", "full_signature": "public void reset()", "class_method_signature": "EasterSpec.reset()", "testcase": false, "constructor": false}, {"identifier": "getDuration", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDuration()", "full_signature": "public int getDuration()", "class_method_signature": "EasterSpec.getDuration()", "testcase": false, "constructor": false}, {"identifier": "setDuration", "parameters": "(int value)", "modifiers": "public", "return": "void", "signature": "void setDuration(int value)", "full_signature": "public void setDuration(int value)", "class_method_signature": "EasterSpec.setDuration(int value)", "testcase": false, "constructor": false}, {"identifier": "getOption", "parameters": "()", "modifiers": "public", "return": "Type", "signature": "Type getOption()", "full_signature": "public Type getOption()", "class_method_signature": "EasterSpec.getOption()", "testcase": false, "constructor": false}, {"identifier": "isUsed", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isUsed()", "full_signature": "public boolean isUsed()", "class_method_signature": "EasterSpec.isUsed()", "testcase": false, "constructor": false}, {"identifier": "setOption", "parameters": "(Type type)", "modifiers": "public", "return": "void", "signature": "void setOption(Type type)", "full_signature": "public void setOption(Type type)", "class_method_signature": "EasterSpec.setOption(Type type)", "testcase": false, "constructor": false}, {"identifier": "isJulian", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isJulian()", "full_signature": "public boolean isJulian()", "class_method_signature": "EasterSpec.isJulian()", "testcase": false, "constructor": false}, {"identifier": "setJulian", "parameters": "(boolean julian)", "modifiers": "public", "return": "void", "signature": "void setJulian(boolean julian)", "full_signature": "public void setJulian(boolean julian)", "class_method_signature": "EasterSpec.setJulian(boolean julian)", "testcase": false, "constructor": false}, {"identifier": "isDefault", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDefault()", "full_signature": "public boolean isDefault()", "class_method_signature": "EasterSpec.isDefault()", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "EasterSpec", "signature": "EasterSpec clone()", "full_signature": "@Override public EasterSpec clone()", "class_method_signature": "EasterSpec.clone()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "EasterSpec.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(EasterSpec other)", "modifiers": "private", "return": "boolean", "signature": "boolean equals(EasterSpec other)", "full_signature": "private boolean equals(EasterSpec other)", "class_method_signature": "EasterSpec.equals(EasterSpec other)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "EasterSpec.hashCode()", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(boolean verbose)", "modifiers": "@Override public", "return": "InformationSet", "signature": "InformationSet write(boolean verbose)", "full_signature": "@Override public InformationSet write(boolean verbose)", "class_method_signature": "EasterSpec.write(boolean verbose)", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "(InformationSet info)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean read(InformationSet info)", "full_signature": "@Override public boolean read(InformationSet info)", "class_method_signature": "EasterSpec.read(InformationSet info)", "testcase": false, "constructor": false}], "file": "jtstoolkit/src/main/java/ec/tstoolkit/arima/special/EasterSpec.java"}, "focal_method": {"identifier": "setDuration", "parameters": "(int value)", "modifiers": "public", "return": "void", "body": "public void setDuration(int value) {\n        if (value <= 0 || value > 15) {\n            throw new TsException(\"Duration\", \"Should be inside [1, 15]\");\n        }\n        duration_ = value;\n    }", "signature": "void setDuration(int value)", "full_signature": "public void setDuration(int value)", "class_method_signature": "EasterSpec.setDuration(int value)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}