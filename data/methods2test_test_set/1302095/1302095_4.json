{"test_class": {"identifier": "ClassLoaderProxyServiceTest", "superclass": "", "interfaces": "", "fields": [], "file": "webbeans-impl/src/test/java/org/apache/webbeans/service/ClassLoaderProxyServiceTest.java"}, "test_case": {"identifier": "defineInProxy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void defineInProxy() throws NoSuchMethodException\n    {\n        final Properties config = new Properties();\n        config.setProperty(DefiningClassService.class.getName(), ClassLoaderProxyService.class.getName());\n        final WebBeansContext context = new WebBeansContext(emptyMap(), config);\n        final NormalScopeProxyFactory factory = new NormalScopeProxyFactory(context);\n        final ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();\n        final Class<MyBean> proxyClass = factory.createProxyClass(contextClassLoader, MyBean.class);\n        assertNotEquals(contextClassLoader, proxyClass.getClassLoader());\n        final ClassLoader proxyLoader = context.getService(DefiningClassService.class).getProxyClassLoader(proxyClass);\n        assertEquals(proxyLoader, proxyClass.getClassLoader());\n        proxyClass.getMethod(\"ok\", String.class); // this line would fail if not here, no assert needed\n    }", "signature": "void defineInProxy()", "full_signature": "@Test public void defineInProxy()", "class_method_signature": "ClassLoaderProxyServiceTest.defineInProxy()", "testcase": true, "constructor": false, "invocations": ["setProperty", "getName", "getName", "emptyMap", "getContextClassLoader", "currentThread", "createProxyClass", "assertNotEquals", "getClassLoader", "getProxyClassLoader", "getService", "assertEquals", "getClassLoader", "getMethod"]}, "focal_class": {"identifier": "ClassLoaderProxyService", "superclass": "", "interfaces": "implements DefiningClassService", "fields": [{"original_string": "private final ProxiesClassLoader loader;", "modifier": "private final", "type": "ProxiesClassLoader", "declarator": "loader", "var_name": "loader"}], "methods": [{"identifier": "ClassLoaderProxyService", "parameters": "(final WebBeansContext context)", "modifiers": "public", "return": "", "signature": " ClassLoaderProxyService(final WebBeansContext context)", "full_signature": "public  ClassLoaderProxyService(final WebBeansContext context)", "class_method_signature": "ClassLoaderProxyService.ClassLoaderProxyService(final WebBeansContext context)", "testcase": false, "constructor": true}, {"identifier": "ClassLoaderProxyService", "parameters": "(final ProxiesClassLoader loader)", "modifiers": "protected", "return": "", "signature": " ClassLoaderProxyService(final ProxiesClassLoader loader)", "full_signature": "protected  ClassLoaderProxyService(final ProxiesClassLoader loader)", "class_method_signature": "ClassLoaderProxyService.ClassLoaderProxyService(final ProxiesClassLoader loader)", "testcase": false, "constructor": true}, {"identifier": "getProxyClassLoader", "parameters": "(final Class<?> forClass)", "modifiers": "@Override public", "return": "ClassLoader", "signature": "ClassLoader getProxyClassLoader(final Class<?> forClass)", "full_signature": "@Override public ClassLoader getProxyClassLoader(final Class<?> forClass)", "class_method_signature": "ClassLoaderProxyService.getProxyClassLoader(final Class<?> forClass)", "testcase": false, "constructor": false}, {"identifier": "defineAndLoad", "parameters": "(final String name, final byte[] bytecode, final Class<T> proxiedClass)", "modifiers": "@Override public", "return": "Class<T>", "signature": "Class<T> defineAndLoad(final String name, final byte[] bytecode, final Class<T> proxiedClass)", "full_signature": "@Override public Class<T> defineAndLoad(final String name, final byte[] bytecode, final Class<T> proxiedClass)", "class_method_signature": "ClassLoaderProxyService.defineAndLoad(final String name, final byte[] bytecode, final Class<T> proxiedClass)", "testcase": false, "constructor": false}], "file": "webbeans-impl/src/main/java/org/apache/webbeans/service/ClassLoaderProxyService.java"}, "focal_method": {"identifier": "getProxyClassLoader", "parameters": "(final Class<?> forClass)", "modifiers": "@Override public", "return": "ClassLoader", "body": "@Override\n    public ClassLoader getProxyClassLoader(final Class<?> forClass)\n    {\n        return loader;\n    }", "signature": "ClassLoader getProxyClassLoader(final Class<?> forClass)", "full_signature": "@Override public ClassLoader getProxyClassLoader(final Class<?> forClass)", "class_method_signature": "ClassLoaderProxyService.getProxyClassLoader(final Class<?> forClass)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1302095, "url": "https://github.com/apache/openwebbeans", "language": "Java", "is_fork": false, "fork_count": 43, "stargazer_count": 45, "size": 23214, "license": "licensed"}}