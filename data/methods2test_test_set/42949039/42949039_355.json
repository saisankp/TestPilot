{"test_class": {"identifier": "SecurityRoleFunctionHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "@Mock\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Mock\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}, {"original_string": "@InjectMocks\n    private SecurityRoleFunctionHelper securityRoleFunctionHelper;", "modifier": "@InjectMocks\n    private", "type": "SecurityRoleFunctionHelper", "declarator": "securityRoleFunctionHelper", "var_name": "securityRoleFunctionHelper"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/SecurityRoleFunctionHelperTest.java"}, "test_case": {"identifier": "testValidateAndTrimSecurityRoleFunctionKeyMissingSecurityRoleFunctionKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidateAndTrimSecurityRoleFunctionKeyMissingSecurityRoleFunctionKey()\n    {\n        // Specify the expected exception.\n        expectedException.expect(IllegalArgumentException.class);\n        expectedException.expectMessage(\"A security role to function mapping key must be specified.\");\n\n        // Call the method under test.\n        securityRoleFunctionHelper.validateAndTrimSecurityRoleFunctionKey(null);\n\n        // Verify the external calls.\n        verifyNoMoreInteractions(alternateKeyHelper);\n    }", "signature": "void testValidateAndTrimSecurityRoleFunctionKeyMissingSecurityRoleFunctionKey()", "full_signature": "@Test public void testValidateAndTrimSecurityRoleFunctionKeyMissingSecurityRoleFunctionKey()", "class_method_signature": "SecurityRoleFunctionHelperTest.testValidateAndTrimSecurityRoleFunctionKeyMissingSecurityRoleFunctionKey()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "validateAndTrimSecurityRoleFunctionKey", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "SecurityRoleFunctionHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private AlternateKeyHelper alternateKeyHelper;", "modifier": "@Autowired\n    private", "type": "AlternateKeyHelper", "declarator": "alternateKeyHelper", "var_name": "alternateKeyHelper"}], "methods": [{"identifier": "validateAndTrimSecurityRoleFunctionCreateRequest", "parameters": "(SecurityRoleFunctionCreateRequest securityRoleFunctionCreateRequest)", "modifiers": "public", "return": "void", "signature": "void validateAndTrimSecurityRoleFunctionCreateRequest(SecurityRoleFunctionCreateRequest securityRoleFunctionCreateRequest)", "full_signature": "public void validateAndTrimSecurityRoleFunctionCreateRequest(SecurityRoleFunctionCreateRequest securityRoleFunctionCreateRequest)", "class_method_signature": "SecurityRoleFunctionHelper.validateAndTrimSecurityRoleFunctionCreateRequest(SecurityRoleFunctionCreateRequest securityRoleFunctionCreateRequest)", "testcase": false, "constructor": false}, {"identifier": "validateAndTrimSecurityRoleFunctionKey", "parameters": "(SecurityRoleFunctionKey securityRoleFunctionKey)", "modifiers": "public", "return": "void", "signature": "void validateAndTrimSecurityRoleFunctionKey(SecurityRoleFunctionKey securityRoleFunctionKey)", "full_signature": "public void validateAndTrimSecurityRoleFunctionKey(SecurityRoleFunctionKey securityRoleFunctionKey)", "class_method_signature": "SecurityRoleFunctionHelper.validateAndTrimSecurityRoleFunctionKey(SecurityRoleFunctionKey securityRoleFunctionKey)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/SecurityRoleFunctionHelper.java"}, "focal_method": {"identifier": "validateAndTrimSecurityRoleFunctionKey", "parameters": "(SecurityRoleFunctionKey securityRoleFunctionKey)", "modifiers": "public", "return": "void", "body": "public void validateAndTrimSecurityRoleFunctionKey(SecurityRoleFunctionKey securityRoleFunctionKey)\n    {\n        Assert.notNull(securityRoleFunctionKey, \"A security role to function mapping key must be specified.\");\n        securityRoleFunctionKey\n            .setSecurityRoleName(alternateKeyHelper.validateStringParameter(\"security role name\", securityRoleFunctionKey.getSecurityRoleName()));\n        securityRoleFunctionKey\n            .setSecurityFunctionName(alternateKeyHelper.validateStringParameter(\"security function name\", securityRoleFunctionKey.getSecurityFunctionName()));\n    }", "signature": "void validateAndTrimSecurityRoleFunctionKey(SecurityRoleFunctionKey securityRoleFunctionKey)", "full_signature": "public void validateAndTrimSecurityRoleFunctionKey(SecurityRoleFunctionKey securityRoleFunctionKey)", "class_method_signature": "SecurityRoleFunctionHelper.validateAndTrimSecurityRoleFunctionKey(SecurityRoleFunctionKey securityRoleFunctionKey)", "testcase": false, "constructor": false, "invocations": ["notNull", "setSecurityRoleName", "validateStringParameter", "getSecurityRoleName", "setSecurityFunctionName", "validateStringParameter", "getSecurityFunctionName"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}