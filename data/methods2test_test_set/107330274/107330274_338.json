{"test_class": {"identifier": "KubeApiServerIntegratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "titus-server-master/src/test/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegratorTest.java"}, "test_case": {"identifier": "testHasRequiredNodeAttributes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHasRequiredNodeAttributes() {\n        List<Protos.Attribute> attributes = new ArrayList<>();\n        assertThat(KubeApiServerIntegrator.hasRequiredNodeAttributes(attributes)).isFalse();\n\n        attributes.add(Protos.Attribute.newBuilder().setName(KubeApiServerIntegrator.NODE_ATTRIBUTE_ID).setType(Protos.Value.Type.TEXT).build());\n        attributes.add(Protos.Attribute.newBuilder().setName(KubeApiServerIntegrator.NODE_ATTRIBUTE_HOST_IP).setType(Protos.Value.Type.TEXT).build());\n        attributes.add(Protos.Attribute.newBuilder().setName(KubeApiServerIntegrator.NODE_ATTRIBUTE_RES).setType(Protos.Value.Type.TEXT).build());\n        attributes.add(Protos.Attribute.newBuilder().setName(KubeApiServerIntegrator.NODE_ATTRIBUTE_REGION).setType(Protos.Value.Type.TEXT).build());\n        attributes.add(Protos.Attribute.newBuilder().setName(KubeApiServerIntegrator.NODE_ATTRIBUTE_ZONE).setType(Protos.Value.Type.TEXT).build());\n        attributes.add(Protos.Attribute.newBuilder().setName(KubeApiServerIntegrator.NODE_ATTRIBUTE_I_TYPE).setType(Protos.Value.Type.TEXT).build());\n        assertThat(KubeApiServerIntegrator.hasRequiredNodeAttributes(attributes)).isTrue();\n    }", "signature": "void testHasRequiredNodeAttributes()", "full_signature": "@Test public void testHasRequiredNodeAttributes()", "class_method_signature": "KubeApiServerIntegratorTest.testHasRequiredNodeAttributes()", "testcase": true, "constructor": false, "invocations": ["isFalse", "assertThat", "hasRequiredNodeAttributes", "add", "build", "setType", "setName", "newBuilder", "add", "build", "setType", "setName", "newBuilder", "add", "build", "setType", "setName", "newBuilder", "add", "build", "setType", "setName", "newBuilder", "add", "build", "setType", "setName", "newBuilder", "add", "build", "setType", "setName", "newBuilder", "isTrue", "assertThat", "hasRequiredNodeAttributes"]}, "focal_class": {"identifier": "KubeApiServerIntegrator", "superclass": "", "interfaces": "implements VirtualMachineMasterService", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(KubeApiServerIntegrator.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(KubeApiServerIntegrator.class)", "var_name": "logger"}, {"original_string": "private static final String ATTRIBUTE_PREFIX = \"com.netflix.titus.agent.attribute/\";", "modifier": "private static final", "type": "String", "declarator": "ATTRIBUTE_PREFIX = \"com.netflix.titus.agent.attribute/\"", "var_name": "ATTRIBUTE_PREFIX"}, {"original_string": "private static final String KUBERNETES_NAMESPACE = \"default\";", "modifier": "private static final", "type": "String", "declarator": "KUBERNETES_NAMESPACE = \"default\"", "var_name": "KUBERNETES_NAMESPACE"}, {"original_string": "public static final String CLIENT_METRICS_PREFIX = \"titusMaster.mesos.kubeApiServerIntegration\";", "modifier": "public static final", "type": "String", "declarator": "CLIENT_METRICS_PREFIX = \"titusMaster.mesos.kubeApiServerIntegration\"", "var_name": "CLIENT_METRICS_PREFIX"}, {"original_string": "private static final String NEVER_RESTART_POLICY = \"Never\";", "modifier": "private static final", "type": "String", "declarator": "NEVER_RESTART_POLICY = \"Never\"", "var_name": "NEVER_RESTART_POLICY"}, {"original_string": "private static final Quantity DEFAULT_QUANTITY = Quantity.fromString(\"0\");", "modifier": "private static final", "type": "Quantity", "declarator": "DEFAULT_QUANTITY = Quantity.fromString(\"0\")", "var_name": "DEFAULT_QUANTITY"}, {"original_string": "private static final String TASK_STARTING = \"TASK_STARTING\";", "modifier": "private static final", "type": "String", "declarator": "TASK_STARTING = \"TASK_STARTING\"", "var_name": "TASK_STARTING"}, {"original_string": "static final String NODE_ATTRIBUTE_ID = \"id\";", "modifier": "static final", "type": "String", "declarator": "NODE_ATTRIBUTE_ID = \"id\"", "var_name": "NODE_ATTRIBUTE_ID"}, {"original_string": "static final String NODE_ATTRIBUTE_HOST_IP = \"hostIp\";", "modifier": "static final", "type": "String", "declarator": "NODE_ATTRIBUTE_HOST_IP = \"hostIp\"", "var_name": "NODE_ATTRIBUTE_HOST_IP"}, {"original_string": "static final String NODE_ATTRIBUTE_RES = \"res\";", "modifier": "static final", "type": "String", "declarator": "NODE_ATTRIBUTE_RES = \"res\"", "var_name": "NODE_ATTRIBUTE_RES"}, {"original_string": "static final String NODE_ATTRIBUTE_REGION = \"region\";", "modifier": "static final", "type": "String", "declarator": "NODE_ATTRIBUTE_REGION = \"region\"", "var_name": "NODE_ATTRIBUTE_REGION"}, {"original_string": "static final String NODE_ATTRIBUTE_ZONE = \"zone\";", "modifier": "static final", "type": "String", "declarator": "NODE_ATTRIBUTE_ZONE = \"zone\"", "var_name": "NODE_ATTRIBUTE_ZONE"}, {"original_string": "static final String NODE_ATTRIBUTE_I_TYPE = \"itype\";", "modifier": "static final", "type": "String", "declarator": "NODE_ATTRIBUTE_I_TYPE = \"itype\"", "var_name": "NODE_ATTRIBUTE_I_TYPE"}, {"original_string": "private static final Set<String> REQUIRED_NODE_ATTRIBUTES = CollectionsExt.asSet(\n            NODE_ATTRIBUTE_ID,\n            NODE_ATTRIBUTE_HOST_IP,\n            NODE_ATTRIBUTE_RES,\n            NODE_ATTRIBUTE_REGION,\n            NODE_ATTRIBUTE_ZONE,\n            NODE_ATTRIBUTE_I_TYPE\n    );", "modifier": "private static final", "type": "Set<String>", "declarator": "REQUIRED_NODE_ATTRIBUTES = CollectionsExt.asSet(\n            NODE_ATTRIBUTE_ID,\n            NODE_ATTRIBUTE_HOST_IP,\n            NODE_ATTRIBUTE_RES,\n            NODE_ATTRIBUTE_REGION,\n            NODE_ATTRIBUTE_ZONE,\n            NODE_ATTRIBUTE_I_TYPE\n    )", "var_name": "REQUIRED_NODE_ATTRIBUTES"}, {"original_string": "private final TitusRuntime titusRuntime;", "modifier": "private final", "type": "TitusRuntime", "declarator": "titusRuntime", "var_name": "titusRuntime"}, {"original_string": "private final MesosConfiguration mesosConfiguration;", "modifier": "private final", "type": "MesosConfiguration", "declarator": "mesosConfiguration", "var_name": "mesosConfiguration"}, {"original_string": "private final DirectKubeConfiguration directKubeConfiguration;", "modifier": "private final", "type": "DirectKubeConfiguration", "declarator": "directKubeConfiguration", "var_name": "directKubeConfiguration"}, {"original_string": "private final Injector injector;", "modifier": "private final", "type": "Injector", "declarator": "injector", "var_name": "injector"}, {"original_string": "private final KubeApiFacade kubeApiFacade;", "modifier": "private final", "type": "KubeApiFacade", "declarator": "kubeApiFacade", "var_name": "kubeApiFacade"}, {"original_string": "private final ContainerResultCodeResolver containerResultCodeResolver;", "modifier": "private final", "type": "ContainerResultCodeResolver", "declarator": "containerResultCodeResolver", "var_name": "containerResultCodeResolver"}, {"original_string": "private final Counter launchTaskCounter;", "modifier": "private final", "type": "Counter", "declarator": "launchTaskCounter", "var_name": "launchTaskCounter"}, {"original_string": "private final Timer launchTasksTimer;", "modifier": "private final", "type": "Timer", "declarator": "launchTasksTimer", "var_name": "launchTasksTimer"}, {"original_string": "private final BucketCounter podSizeMetrics;", "modifier": "private final", "type": "BucketCounter", "declarator": "podSizeMetrics", "var_name": "podSizeMetrics"}, {"original_string": "private final Counter rejectLeaseCounter;", "modifier": "private final", "type": "Counter", "declarator": "rejectLeaseCounter", "var_name": "rejectLeaseCounter"}, {"original_string": "private final Counter killTaskCounter;", "modifier": "private final", "type": "Counter", "declarator": "killTaskCounter", "var_name": "killTaskCounter"}, {"original_string": "private final Counter nodeAddCounter;", "modifier": "private final", "type": "Counter", "declarator": "nodeAddCounter", "var_name": "nodeAddCounter"}, {"original_string": "private final Counter nodeUpdateCounter;", "modifier": "private final", "type": "Counter", "declarator": "nodeUpdateCounter", "var_name": "nodeUpdateCounter"}, {"original_string": "private final Counter nodeDeleteCounter;", "modifier": "private final", "type": "Counter", "declarator": "nodeDeleteCounter", "var_name": "nodeDeleteCounter"}, {"original_string": "private final Counter podAddCounter;", "modifier": "private final", "type": "Counter", "declarator": "podAddCounter", "var_name": "podAddCounter"}, {"original_string": "private final Counter podUpdateCounter;", "modifier": "private final", "type": "Counter", "declarator": "podUpdateCounter", "var_name": "podUpdateCounter"}, {"original_string": "private final Counter podDeleteCounter;", "modifier": "private final", "type": "Counter", "declarator": "podDeleteCounter", "var_name": "podDeleteCounter"}, {"original_string": "private final Subject<ContainerEvent, ContainerEvent> vmTaskStatusObserver;", "modifier": "private final", "type": "Subject<ContainerEvent, ContainerEvent>", "declarator": "vmTaskStatusObserver", "var_name": "vmTaskStatusObserver"}, {"original_string": "private com.netflix.fenzo.functions.Action1<List<? extends VirtualMachineLease>> leaseHandler;", "modifier": "private", "type": "com.netflix.fenzo.functions.Action1<List<? extends VirtualMachineLease>>", "declarator": "leaseHandler", "var_name": "leaseHandler"}, {"original_string": "private Action1<List<LeaseRescindedEvent>> rescindLeaseHandler;", "modifier": "private", "type": "Action1<List<LeaseRescindedEvent>>", "declarator": "rescindLeaseHandler", "var_name": "rescindLeaseHandler"}, {"original_string": "private V3JobOperations v3JobOperations;", "modifier": "private", "type": "V3JobOperations", "declarator": "v3JobOperations", "var_name": "v3JobOperations"}], "methods": [{"identifier": "KubeApiServerIntegrator", "parameters": "(TitusRuntime titusRuntime,\n                                   MesosConfiguration mesosConfiguration,\n                                   DirectKubeConfiguration directKubeConfiguration,\n                                   Injector injector,\n                                   KubeApiFacade kubeApiFacade,\n                                   ContainerResultCodeResolver containerResultCodeResolver)", "modifiers": "@Inject public", "return": "", "signature": " KubeApiServerIntegrator(TitusRuntime titusRuntime,\n                                   MesosConfiguration mesosConfiguration,\n                                   DirectKubeConfiguration directKubeConfiguration,\n                                   Injector injector,\n                                   KubeApiFacade kubeApiFacade,\n                                   ContainerResultCodeResolver containerResultCodeResolver)", "full_signature": "@Inject public  KubeApiServerIntegrator(TitusRuntime titusRuntime,\n                                   MesosConfiguration mesosConfiguration,\n                                   DirectKubeConfiguration directKubeConfiguration,\n                                   Injector injector,\n                                   KubeApiFacade kubeApiFacade,\n                                   ContainerResultCodeResolver containerResultCodeResolver)", "class_method_signature": "KubeApiServerIntegrator.KubeApiServerIntegrator(TitusRuntime titusRuntime,\n                                   MesosConfiguration mesosConfiguration,\n                                   DirectKubeConfiguration directKubeConfiguration,\n                                   Injector injector,\n                                   KubeApiFacade kubeApiFacade,\n                                   ContainerResultCodeResolver containerResultCodeResolver)", "testcase": false, "constructor": true}, {"identifier": "enterActiveMode", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void enterActiveMode()", "full_signature": "@Override public void enterActiveMode()", "class_method_signature": "KubeApiServerIntegrator.enterActiveMode()", "testcase": false, "constructor": false}, {"identifier": "launchTasks", "parameters": "(TaskAssignments assignments)", "modifiers": "@Override public", "return": "void", "signature": "void launchTasks(TaskAssignments assignments)", "full_signature": "@Override public void launchTasks(TaskAssignments assignments)", "class_method_signature": "KubeApiServerIntegrator.launchTasks(TaskAssignments assignments)", "testcase": false, "constructor": false}, {"identifier": "launchTasksSync", "parameters": "(TaskAssignments assignments)", "modifiers": "private", "return": "void", "signature": "void launchTasksSync(TaskAssignments assignments)", "full_signature": "private void launchTasksSync(TaskAssignments assignments)", "class_method_signature": "KubeApiServerIntegrator.launchTasksSync(TaskAssignments assignments)", "testcase": false, "constructor": false}, {"identifier": "launchTasksConcurrently", "parameters": "(TaskAssignments assignments)", "modifiers": "private", "return": "void", "signature": "void launchTasksConcurrently(TaskAssignments assignments)", "full_signature": "private void launchTasksConcurrently(TaskAssignments assignments)", "class_method_signature": "KubeApiServerIntegrator.launchTasksConcurrently(TaskAssignments assignments)", "testcase": false, "constructor": false}, {"identifier": "rejectLease", "parameters": "(VirtualMachineLease lease)", "modifiers": "@Override public", "return": "void", "signature": "void rejectLease(VirtualMachineLease lease)", "full_signature": "@Override public void rejectLease(VirtualMachineLease lease)", "class_method_signature": "KubeApiServerIntegrator.rejectLease(VirtualMachineLease lease)", "testcase": false, "constructor": false}, {"identifier": "killTask", "parameters": "(String taskId)", "modifiers": "@Override public", "return": "void", "signature": "void killTask(String taskId)", "full_signature": "@Override public void killTask(String taskId)", "class_method_signature": "KubeApiServerIntegrator.killTask(String taskId)", "testcase": false, "constructor": false}, {"identifier": "setVMLeaseHandler", "parameters": "(Action1<List<? extends VirtualMachineLease>> leaseHandler)", "modifiers": "@Override public", "return": "void", "signature": "void setVMLeaseHandler(Action1<List<? extends VirtualMachineLease>> leaseHandler)", "full_signature": "@Override public void setVMLeaseHandler(Action1<List<? extends VirtualMachineLease>> leaseHandler)", "class_method_signature": "KubeApiServerIntegrator.setVMLeaseHandler(Action1<List<? extends VirtualMachineLease>> leaseHandler)", "testcase": false, "constructor": false}, {"identifier": "setRescindLeaseHandler", "parameters": "(Action1<List<LeaseRescindedEvent>> rescindLeaseHandler)", "modifiers": "@Override public", "return": "void", "signature": "void setRescindLeaseHandler(Action1<List<LeaseRescindedEvent>> rescindLeaseHandler)", "full_signature": "@Override public void setRescindLeaseHandler(Action1<List<LeaseRescindedEvent>> rescindLeaseHandler)", "class_method_signature": "KubeApiServerIntegrator.setRescindLeaseHandler(Action1<List<LeaseRescindedEvent>> rescindLeaseHandler)", "testcase": false, "constructor": false}, {"identifier": "getLeaseRescindedObservable", "parameters": "()", "modifiers": "@Override public", "return": "Observable<LeaseRescindedEvent>", "signature": "Observable<LeaseRescindedEvent> getLeaseRescindedObservable()", "full_signature": "@Override public Observable<LeaseRescindedEvent> getLeaseRescindedObservable()", "class_method_signature": "KubeApiServerIntegrator.getLeaseRescindedObservable()", "testcase": false, "constructor": false}, {"identifier": "getTaskStatusObservable", "parameters": "()", "modifiers": "@Override public", "return": "Observable<ContainerEvent>", "signature": "Observable<ContainerEvent> getTaskStatusObservable()", "full_signature": "@Override public Observable<ContainerEvent> getTaskStatusObservable()", "class_method_signature": "KubeApiServerIntegrator.getTaskStatusObservable()", "testcase": false, "constructor": false}, {"identifier": "subscribeToNodeInformer", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void subscribeToNodeInformer()", "full_signature": "private void subscribeToNodeInformer()", "class_method_signature": "KubeApiServerIntegrator.subscribeToNodeInformer()", "testcase": false, "constructor": false}, {"identifier": "nodeUpdated", "parameters": "(V1Node node)", "modifiers": "private", "return": "void", "signature": "void nodeUpdated(V1Node node)", "full_signature": "private void nodeUpdated(V1Node node)", "class_method_signature": "KubeApiServerIntegrator.nodeUpdated(V1Node node)", "testcase": false, "constructor": false}, {"identifier": "nodeDeleted", "parameters": "(V1Node node)", "modifiers": "private", "return": "void", "signature": "void nodeDeleted(V1Node node)", "full_signature": "private void nodeDeleted(V1Node node)", "class_method_signature": "KubeApiServerIntegrator.nodeDeleted(V1Node node)", "testcase": false, "constructor": false}, {"identifier": "subscribeToPodInformer", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void subscribeToPodInformer()", "full_signature": "private void subscribeToPodInformer()", "class_method_signature": "KubeApiServerIntegrator.subscribeToPodInformer()", "testcase": false, "constructor": false}, {"identifier": "nodeToLease", "parameters": "(V1Node node)", "modifiers": "private", "return": "VirtualMachineLease", "signature": "VirtualMachineLease nodeToLease(V1Node node)", "full_signature": "private VirtualMachineLease nodeToLease(V1Node node)", "class_method_signature": "KubeApiServerIntegrator.nodeToLease(V1Node node)", "testcase": false, "constructor": false}, {"identifier": "nodeToOffer", "parameters": "(V1Node node)", "modifiers": "private", "return": "Protos.Offer", "signature": "Protos.Offer nodeToOffer(V1Node node)", "full_signature": "private Protos.Offer nodeToOffer(V1Node node)", "class_method_signature": "KubeApiServerIntegrator.nodeToOffer(V1Node node)", "testcase": false, "constructor": false}, {"identifier": "nodeToResources", "parameters": "(V1Node node)", "modifiers": "private", "return": "Iterable<? extends Protos.Resource>", "signature": "Iterable<? extends Protos.Resource> nodeToResources(V1Node node)", "full_signature": "private Iterable<? extends Protos.Resource> nodeToResources(V1Node node)", "class_method_signature": "KubeApiServerIntegrator.nodeToResources(V1Node node)", "testcase": false, "constructor": false}, {"identifier": "createResource", "parameters": "(String name, double value)", "modifiers": "private", "return": "Protos.Resource", "signature": "Protos.Resource createResource(String name, double value)", "full_signature": "private Protos.Resource createResource(String name, double value)", "class_method_signature": "KubeApiServerIntegrator.createResource(String name, double value)", "testcase": false, "constructor": false}, {"identifier": "nodeToAttributes", "parameters": "(V1Node node)", "modifiers": "private", "return": "List<Protos.Attribute>", "signature": "List<Protos.Attribute> nodeToAttributes(V1Node node)", "full_signature": "private List<Protos.Attribute> nodeToAttributes(V1Node node)", "class_method_signature": "KubeApiServerIntegrator.nodeToAttributes(V1Node node)", "testcase": false, "constructor": false}, {"identifier": "hasRequiredNodeAttributes", "parameters": "(List<Protos.Attribute> nodeAttributes)", "modifiers": "@VisibleForTesting static", "return": "boolean", "signature": "boolean hasRequiredNodeAttributes(List<Protos.Attribute> nodeAttributes)", "full_signature": "@VisibleForTesting static boolean hasRequiredNodeAttributes(List<Protos.Attribute> nodeAttributes)", "class_method_signature": "KubeApiServerIntegrator.hasRequiredNodeAttributes(List<Protos.Attribute> nodeAttributes)", "testcase": false, "constructor": false}, {"identifier": "createAttribute", "parameters": "(String name, String value)", "modifiers": "private", "return": "Protos.Attribute", "signature": "Protos.Attribute createAttribute(String name, String value)", "full_signature": "private Protos.Attribute createAttribute(String name, String value)", "class_method_signature": "KubeApiServerIntegrator.createAttribute(String name, String value)", "testcase": false, "constructor": false}, {"identifier": "taskInfoToPod", "parameters": "(TaskInfoRequest taskInfoRequest)", "modifiers": "private", "return": "V1Pod", "signature": "V1Pod taskInfoToPod(TaskInfoRequest taskInfoRequest)", "full_signature": "private V1Pod taskInfoToPod(TaskInfoRequest taskInfoRequest)", "class_method_signature": "KubeApiServerIntegrator.taskInfoToPod(TaskInfoRequest taskInfoRequest)", "testcase": false, "constructor": false}, {"identifier": "taskInfoToResources", "parameters": "(Protos.TaskInfo taskInfo)", "modifiers": "private", "return": "V1ResourceRequirements", "signature": "V1ResourceRequirements taskInfoToResources(Protos.TaskInfo taskInfo)", "full_signature": "private V1ResourceRequirements taskInfoToResources(Protos.TaskInfo taskInfo)", "class_method_signature": "KubeApiServerIntegrator.taskInfoToResources(Protos.TaskInfo taskInfo)", "testcase": false, "constructor": false}, {"identifier": "podUpdated", "parameters": "(V1Pod pod)", "modifiers": "private", "return": "void", "signature": "void podUpdated(V1Pod pod)", "full_signature": "private void podUpdated(V1Pod pod)", "class_method_signature": "KubeApiServerIntegrator.podUpdated(V1Pod pod)", "testcase": false, "constructor": false}, {"identifier": "podDeleted", "parameters": "(V1Pod pod)", "modifiers": "private", "return": "void", "signature": "void podDeleted(V1Pod pod)", "full_signature": "private void podDeleted(V1Pod pod)", "class_method_signature": "KubeApiServerIntegrator.podDeleted(V1Pod pod)", "testcase": false, "constructor": false}, {"identifier": "fillInMissingTaskStatusesIfNeeded", "parameters": "(TaskState state, V1Pod pod, Task task,\n                                                   Optional<TitusExecutorDetails> executorDetailsOpt)", "modifiers": "private", "return": "void", "signature": "void fillInMissingTaskStatusesIfNeeded(TaskState state, V1Pod pod, Task task,\n                                                   Optional<TitusExecutorDetails> executorDetailsOpt)", "full_signature": "private void fillInMissingTaskStatusesIfNeeded(TaskState state, V1Pod pod, Task task,\n                                                   Optional<TitusExecutorDetails> executorDetailsOpt)", "class_method_signature": "KubeApiServerIntegrator.fillInMissingTaskStatusesIfNeeded(TaskState state, V1Pod pod, Task task,\n                                                   Optional<TitusExecutorDetails> executorDetailsOpt)", "testcase": false, "constructor": false}, {"identifier": "publishContainerEvent", "parameters": "(String taskId, TaskState taskState, String reasonCode, String reasonMessage,\n                                       Optional<TitusExecutorDetails> executorDetails)", "modifiers": "private", "return": "void", "signature": "void publishContainerEvent(String taskId, TaskState taskState, String reasonCode, String reasonMessage,\n                                       Optional<TitusExecutorDetails> executorDetails)", "full_signature": "private void publishContainerEvent(String taskId, TaskState taskState, String reasonCode, String reasonMessage,\n                                       Optional<TitusExecutorDetails> executorDetails)", "class_method_signature": "KubeApiServerIntegrator.publishContainerEvent(String taskId, TaskState taskState, String reasonCode, String reasonMessage,\n                                       Optional<TitusExecutorDetails> executorDetails)", "testcase": false, "constructor": false}, {"identifier": "publishContainerEvent", "parameters": "(String taskId, TaskState taskState, String reasonCode, String reasonMessage,\n                                       Optional<TitusExecutorDetails> executorDetails, Optional<Long> timestampOpt)", "modifiers": "private", "return": "void", "signature": "void publishContainerEvent(String taskId, TaskState taskState, String reasonCode, String reasonMessage,\n                                       Optional<TitusExecutorDetails> executorDetails, Optional<Long> timestampOpt)", "full_signature": "private void publishContainerEvent(String taskId, TaskState taskState, String reasonCode, String reasonMessage,\n                                       Optional<TitusExecutorDetails> executorDetails, Optional<Long> timestampOpt)", "class_method_signature": "KubeApiServerIntegrator.publishContainerEvent(String taskId, TaskState taskState, String reasonCode, String reasonMessage,\n                                       Optional<TitusExecutorDetails> executorDetails, Optional<Long> timestampOpt)", "testcase": false, "constructor": false}, {"identifier": "taskKilledInAccepted", "parameters": "(String taskId)", "modifiers": "private", "return": "boolean", "signature": "boolean taskKilledInAccepted(String taskId)", "full_signature": "private boolean taskKilledInAccepted(String taskId)", "class_method_signature": "KubeApiServerIntegrator.taskKilledInAccepted(String taskId)", "testcase": false, "constructor": false}, {"identifier": "getTaskIfNotTerminal", "parameters": "(String podName)", "modifiers": "private", "return": "Optional<Task>", "signature": "Optional<Task> getTaskIfNotTerminal(String podName)", "full_signature": "private Optional<Task> getTaskIfNotTerminal(String podName)", "class_method_signature": "KubeApiServerIntegrator.getTaskIfNotTerminal(String podName)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java"}, "focal_method": {"identifier": "hasRequiredNodeAttributes", "parameters": "(List<Protos.Attribute> nodeAttributes)", "modifiers": "@VisibleForTesting static", "return": "boolean", "body": "@VisibleForTesting\n    static boolean hasRequiredNodeAttributes(List<Protos.Attribute> nodeAttributes) {\n        Set<String> names = nodeAttributes.stream().map(Protos.Attribute::getName).collect(Collectors.toSet());\n        return names.containsAll(REQUIRED_NODE_ATTRIBUTES);\n    }", "signature": "boolean hasRequiredNodeAttributes(List<Protos.Attribute> nodeAttributes)", "full_signature": "@VisibleForTesting static boolean hasRequiredNodeAttributes(List<Protos.Attribute> nodeAttributes)", "class_method_signature": "KubeApiServerIntegrator.hasRequiredNodeAttributes(List<Protos.Attribute> nodeAttributes)", "testcase": false, "constructor": false, "invocations": ["collect", "map", "stream", "toSet", "containsAll"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}