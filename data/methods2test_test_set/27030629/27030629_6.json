{"test_class": {"identifier": "UserListPresenterTest", "superclass": "extends PresentationSpec", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    UserListPresenter userListPresenter;", "modifier": "@InjectMocks", "type": "UserListPresenter", "declarator": "userListPresenter", "var_name": "userListPresenter"}, {"original_string": "@Mock\n    UserListView mockUserListView;", "modifier": "@Mock", "type": "UserListView", "declarator": "mockUserListView", "var_name": "mockUserListView"}, {"original_string": "GetUserListUseCase mockGetUserListUseCase;", "modifier": "", "type": "GetUserListUseCase", "declarator": "mockGetUserListUseCase", "var_name": "mockGetUserListUseCase"}, {"original_string": "UserModelDataMapper userModelDataMapper = new UserModelDataMapper();", "modifier": "", "type": "UserModelDataMapper", "declarator": "userModelDataMapper = new UserModelDataMapper()", "var_name": "userModelDataMapper"}, {"original_string": "Collection<User> emptyUserCollection = new ArrayList<>();", "modifier": "", "type": "Collection<User>", "declarator": "emptyUserCollection = new ArrayList<>()", "var_name": "emptyUserCollection"}, {"original_string": "UserModel user;", "modifier": "", "type": "UserModel", "declarator": "user", "var_name": "user"}, {"original_string": "ArgumentCaptor<GetUserListUseCase.Callback> callbackArgumentCaptor = ArgumentCaptor.forClass(GetUserListUseCase.Callback.class);", "modifier": "", "type": "ArgumentCaptor<GetUserListUseCase.Callback>", "declarator": "callbackArgumentCaptor = ArgumentCaptor.forClass(GetUserListUseCase.Callback.class)", "var_name": "callbackArgumentCaptor"}, {"original_string": "private TestErrorBundle errorBundle = new TestErrorBundle();", "modifier": "private", "type": "TestErrorBundle", "declarator": "errorBundle = new TestErrorBundle()", "var_name": "errorBundle"}], "file": "Presentation/src/test/java/com/example/presentation/userlist/UserListPresenterTest.java"}, "test_case": {"identifier": "testOnUserSelected_shouldShowUserDetails", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnUserSelected_shouldShowUserDetails() {\n        userListPresenter.onUserClicked(user);\n        verify(mockUserListView).viewUser(user);\n    }", "signature": "void testOnUserSelected_shouldShowUserDetails()", "full_signature": "@Test public void testOnUserSelected_shouldShowUserDetails()", "class_method_signature": "UserListPresenterTest.testOnUserSelected_shouldShowUserDetails()", "testcase": true, "constructor": false, "invocations": ["onUserClicked", "viewUser", "verify"]}, "focal_class": {"identifier": "UserListPresenter", "superclass": "", "interfaces": "implements Presenter", "fields": [{"original_string": "public static final String TASK_ID_GET_USER_LIST = \"cancellable_task\";", "modifier": "public static final", "type": "String", "declarator": "TASK_ID_GET_USER_LIST = \"cancellable_task\"", "var_name": "TASK_ID_GET_USER_LIST"}, {"original_string": "private UserListView viewListView;", "modifier": "private", "type": "UserListView", "declarator": "viewListView", "var_name": "viewListView"}, {"original_string": "@Inject\n    protected GetUserListUseCase getUserListUseCase;", "modifier": "@Inject\n    protected", "type": "GetUserListUseCase", "declarator": "getUserListUseCase", "var_name": "getUserListUseCase"}, {"original_string": "@Bean\n    protected UserModelDataMapper userModelDataMapper;", "modifier": "@Bean\n    protected", "type": "UserModelDataMapper", "declarator": "userModelDataMapper", "var_name": "userModelDataMapper"}], "methods": [{"identifier": "setView", "parameters": "(UserListView viewListView)", "modifiers": "public", "return": "void", "signature": "void setView(UserListView viewListView)", "full_signature": "public void setView(UserListView viewListView)", "class_method_signature": "UserListPresenter.setView(UserListView viewListView)", "testcase": false, "constructor": false}, {"identifier": "afterInject", "parameters": "()", "modifiers": "@AfterInject protected", "return": "void", "signature": "void afterInject()", "full_signature": "@AfterInject protected void afterInject()", "class_method_signature": "UserListPresenter.afterInject()", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(UserListView userListFragment)", "modifiers": "public", "return": "void", "signature": "void initialize(UserListView userListFragment)", "full_signature": "public void initialize(UserListView userListFragment)", "class_method_signature": "UserListPresenter.initialize(UserListView userListFragment)", "testcase": false, "constructor": false}, {"identifier": "loadUserList", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void loadUserList()", "full_signature": "private void loadUserList()", "class_method_signature": "UserListPresenter.loadUserList()", "testcase": false, "constructor": false}, {"identifier": "onUserClicked", "parameters": "(UserModel userModel)", "modifiers": "public", "return": "void", "signature": "void onUserClicked(UserModel userModel)", "full_signature": "public void onUserClicked(UserModel userModel)", "class_method_signature": "UserListPresenter.onUserClicked(UserModel userModel)", "testcase": false, "constructor": false}, {"identifier": "showViewLoading", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void showViewLoading()", "full_signature": "private void showViewLoading()", "class_method_signature": "UserListPresenter.showViewLoading()", "testcase": false, "constructor": false}, {"identifier": "hideViewLoading", "parameters": "()", "modifiers": "", "return": "void", "signature": "void hideViewLoading()", "full_signature": " void hideViewLoading()", "class_method_signature": "UserListPresenter.hideViewLoading()", "testcase": false, "constructor": false}, {"identifier": "showViewRetry", "parameters": "()", "modifiers": "", "return": "void", "signature": "void showViewRetry()", "full_signature": " void showViewRetry()", "class_method_signature": "UserListPresenter.showViewRetry()", "testcase": false, "constructor": false}, {"identifier": "hideViewRetry", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void hideViewRetry()", "full_signature": "private void hideViewRetry()", "class_method_signature": "UserListPresenter.hideViewRetry()", "testcase": false, "constructor": false}, {"identifier": "showErrorMessage", "parameters": "(ErrorBundle errorBundle)", "modifiers": "", "return": "void", "signature": "void showErrorMessage(ErrorBundle errorBundle)", "full_signature": " void showErrorMessage(ErrorBundle errorBundle)", "class_method_signature": "UserListPresenter.showErrorMessage(ErrorBundle errorBundle)", "testcase": false, "constructor": false}, {"identifier": "showUsersCollectionInView", "parameters": "(Collection<User> usersCollection)", "modifiers": "", "return": "void", "signature": "void showUsersCollectionInView(Collection<User> usersCollection)", "full_signature": " void showUsersCollectionInView(Collection<User> usersCollection)", "class_method_signature": "UserListPresenter.showUsersCollectionInView(Collection<User> usersCollection)", "testcase": false, "constructor": false}, {"identifier": "getUserList", "parameters": "()", "modifiers": "@Background(id= TASK_ID_GET_USER_LIST) protected", "return": "void", "signature": "void getUserList()", "full_signature": "@Background(id= TASK_ID_GET_USER_LIST) protected void getUserList()", "class_method_signature": "UserListPresenter.getUserList()", "testcase": false, "constructor": false}, {"identifier": "onUserListLoaded", "parameters": "(Collection<User> usersCollection)", "modifiers": "@UiThread(propagation = REUSE) protected", "return": "void", "signature": "void onUserListLoaded(Collection<User> usersCollection)", "full_signature": "@UiThread(propagation = REUSE) protected void onUserListLoaded(Collection<User> usersCollection)", "class_method_signature": "UserListPresenter.onUserListLoaded(Collection<User> usersCollection)", "testcase": false, "constructor": false}, {"identifier": "onError", "parameters": "(ErrorBundle errorBundle)", "modifiers": "@UiThread(propagation = REUSE) protected", "return": "void", "signature": "void onError(ErrorBundle errorBundle)", "full_signature": "@UiThread(propagation = REUSE) protected void onError(ErrorBundle errorBundle)", "class_method_signature": "UserListPresenter.onError(ErrorBundle errorBundle)", "testcase": false, "constructor": false}, {"identifier": "onViewDestroyed", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void onViewDestroyed()", "full_signature": "public void onViewDestroyed()", "class_method_signature": "UserListPresenter.onViewDestroyed()", "testcase": false, "constructor": false}], "file": "Presentation/src/main/java/com/example/presentation/userlist/UserListPresenter.java"}, "focal_method": {"identifier": "onUserClicked", "parameters": "(UserModel userModel)", "modifiers": "public", "return": "void", "body": "public void onUserClicked(UserModel userModel) {\n        this.viewListView.viewUser(userModel);\n    }", "signature": "void onUserClicked(UserModel userModel)", "full_signature": "public void onUserClicked(UserModel userModel)", "class_method_signature": "UserListPresenter.onUserClicked(UserModel userModel)", "testcase": false, "constructor": false, "invocations": ["viewUser"]}, "repository": {"repo_id": 27030629, "url": "https://github.com/nenick/AndroidAppDevelopment", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 17, "size": 6155, "license": "licensed"}}