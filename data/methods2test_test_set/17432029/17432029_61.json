{"test_class": {"identifier": "VolleyerRequestTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "final String url = \"http://test\";", "modifier": "final", "type": "String", "declarator": "url = \"http://test\"", "var_name": "url"}, {"original_string": "final HttpMethod httpMethod = HttpMethod.GET;", "modifier": "final", "type": "HttpMethod", "declarator": "httpMethod = HttpMethod.GET", "var_name": "httpMethod"}, {"original_string": "final Listener<String> listener = new Listener<String>(){\n\n\t\t@Override\n\t\tpublic void onResponse(String response) {\n\t\t}};", "modifier": "final", "type": "Listener<String>", "declarator": "listener = new Listener<String>(){\n\n\t\t@Override\n\t\tpublic void onResponse(String response) {\n\t\t}}", "var_name": "listener"}, {"original_string": "final ErrorListener errorListener = new ErrorListener() {\n\n\t\t@Override\n\t\tpublic void onErrorResponse(VolleyError error) {\n\t\t}};", "modifier": "final", "type": "ErrorListener", "declarator": "errorListener = new ErrorListener() {\n\n\t\t@Override\n\t\tpublic void onErrorResponse(VolleyError error) {\n\t\t}}", "var_name": "errorListener"}, {"original_string": "final NetworkResponseParser responseParser = new StringNetworkResponseParser();", "modifier": "final", "type": "NetworkResponseParser", "declarator": "responseParser = new StringNetworkResponseParser()", "var_name": "responseParser"}, {"original_string": "final Class<String> clazz = String.class;", "modifier": "final", "type": "Class<String>", "declarator": "clazz = String.class", "var_name": "clazz"}, {"original_string": "HttpContent httpContent = null;", "modifier": "", "type": "HttpContent", "declarator": "httpContent = null", "var_name": "httpContent"}], "file": "volleyer/src/test/java/com/navercorp/volleyextensions/volleyer/request/VolleyerRequestTest.java"}, "test_case": {"identifier": "responseShouldBeDeliveredWhenDeliveredResponseIsCalled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void responseShouldBeDeliveredWhenDeliveredResponseIsCalled() {\n\t\t// Given\n\t\tString content = \"test response\";\n\t\tTestListener<String> testListener = new TestListener<String>(content);\n\t\t// When\n\t\tVolleyerRequest<String> request = new VolleyerRequest<String>(httpContent, clazz, responseParser, testListener, errorListener);\n\t\trequest.deliverResponse(content);\n\t\t// Then\n\t\tassertThat(testListener.isDelivered(), is(true));\n\t}", "signature": "void responseShouldBeDeliveredWhenDeliveredResponseIsCalled()", "full_signature": "@Test public void responseShouldBeDeliveredWhenDeliveredResponseIsCalled()", "class_method_signature": "VolleyerRequestTest.responseShouldBeDeliveredWhenDeliveredResponseIsCalled()", "testcase": true, "constructor": false, "invocations": ["deliverResponse", "assertThat", "isDelivered", "is"]}, "focal_class": {"identifier": "VolleyerRequest", "superclass": "extends Request<T>", "interfaces": "implements MultipartContainer", "fields": [{"original_string": "private NetworkResponseParser responseParser;", "modifier": "private", "type": "NetworkResponseParser", "declarator": "responseParser", "var_name": "responseParser"}, {"original_string": "private Listener<T> listener;", "modifier": "private", "type": "Listener<T>", "declarator": "listener", "var_name": "listener"}, {"original_string": "private Class<T> clazz;", "modifier": "private", "type": "Class<T>", "declarator": "clazz", "var_name": "clazz"}, {"original_string": "private HttpContent httpContent;", "modifier": "private", "type": "HttpContent", "declarator": "httpContent", "var_name": "httpContent"}], "methods": [{"identifier": "VolleyerRequest", "parameters": "(HttpContent httpContent, Class<T> clazz, NetworkResponseParser responseParser, Listener<T> listener, ErrorListener errorListener)", "modifiers": "public", "return": "", "signature": " VolleyerRequest(HttpContent httpContent, Class<T> clazz, NetworkResponseParser responseParser, Listener<T> listener, ErrorListener errorListener)", "full_signature": "public  VolleyerRequest(HttpContent httpContent, Class<T> clazz, NetworkResponseParser responseParser, Listener<T> listener, ErrorListener errorListener)", "class_method_signature": "VolleyerRequest.VolleyerRequest(HttpContent httpContent, Class<T> clazz, NetworkResponseParser responseParser, Listener<T> listener, ErrorListener errorListener)", "testcase": false, "constructor": true}, {"identifier": "getHeaders", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getHeaders()", "full_signature": "@Override public Map<String, String> getHeaders()", "class_method_signature": "VolleyerRequest.getHeaders()", "testcase": false, "constructor": false}, {"identifier": "getBody", "parameters": "()", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] getBody()", "full_signature": "@Override public byte[] getBody()", "class_method_signature": "VolleyerRequest.getBody()", "testcase": false, "constructor": false}, {"identifier": "deliverResponse", "parameters": "(T result)", "modifiers": "@Override protected", "return": "void", "signature": "void deliverResponse(T result)", "full_signature": "@Override protected void deliverResponse(T result)", "class_method_signature": "VolleyerRequest.deliverResponse(T result)", "testcase": false, "constructor": false}, {"identifier": "getTargetClass", "parameters": "()", "modifiers": "protected", "return": "Class<T>", "signature": "Class<T> getTargetClass()", "full_signature": "protected Class<T> getTargetClass()", "class_method_signature": "VolleyerRequest.getTargetClass()", "testcase": false, "constructor": false}, {"identifier": "parseNetworkResponse", "parameters": "(NetworkResponse response)", "modifiers": "protected", "return": "Response<T>", "signature": "Response<T> parseNetworkResponse(NetworkResponse response)", "full_signature": "protected Response<T> parseNetworkResponse(NetworkResponse response)", "class_method_signature": "VolleyerRequest.parseNetworkResponse(NetworkResponse response)", "testcase": false, "constructor": false}, {"identifier": "hasMultipart", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasMultipart()", "full_signature": "@Override public boolean hasMultipart()", "class_method_signature": "VolleyerRequest.hasMultipart()", "testcase": false, "constructor": false}, {"identifier": "getMultipart", "parameters": "()", "modifiers": "@Override public", "return": "Multipart", "signature": "Multipart getMultipart()", "full_signature": "@Override public Multipart getMultipart()", "class_method_signature": "VolleyerRequest.getMultipart()", "testcase": false, "constructor": false}], "file": "volleyer/src/main/java/com/navercorp/volleyextensions/volleyer/request/VolleyerRequest.java"}, "focal_method": {"identifier": "deliverResponse", "parameters": "(T result)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n\tprotected void deliverResponse(T result) {\n\t\tlistener.onResponse(result);\n\t}", "signature": "void deliverResponse(T result)", "full_signature": "@Override protected void deliverResponse(T result)", "class_method_signature": "VolleyerRequest.deliverResponse(T result)", "testcase": false, "constructor": false, "invocations": ["onResponse"]}, "repository": {"repo_id": 17432029, "url": "https://github.com/naver/volley-extensions", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 138, "size": 666, "license": "licensed"}}