{"test_class": {"identifier": "GeometryToolsTest", "superclass": "extends CDKTestCase", "interfaces": "", "fields": [], "file": "legacy/src/test/java/org/openscience/cdk/geometry/GeometryToolsTest.java"}, "test_case": {"identifier": "testHas2DCoordinates_IBond", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHas2DCoordinates_IBond() {\n        Atom atom1 = new Atom(\"C\");\n        atom1.setPoint2d(new Point2d(1, 1));\n        Atom atom2 = new Atom(\"C\");\n        atom2.setPoint2d(new Point2d(1, 0));\n        IBond bond = new Bond(atom1, atom2);\n        Assert.assertTrue(GeometryTools.has2DCoordinates(bond));\n\n        atom1 = new Atom(\"C\");\n        atom1.setPoint3d(new Point3d(1, 1, 1));\n        atom2 = new Atom(\"C\");\n        atom2.setPoint3d(new Point3d(1, 0, 5));\n        bond = new Bond(atom1, atom2);\n        Assert.assertFalse(GeometryTools.has2DCoordinates(bond));\n    }", "signature": "void testHas2DCoordinates_IBond()", "full_signature": "@Test public void testHas2DCoordinates_IBond()", "class_method_signature": "GeometryToolsTest.testHas2DCoordinates_IBond()", "testcase": true, "constructor": false, "invocations": ["setPoint2d", "setPoint2d", "assertTrue", "has2DCoordinates", "setPoint3d", "setPoint3d", "assertFalse", "has2DCoordinates"]}, "focal_class": {"identifier": "GeometryTools", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static ILoggingTool logger = LoggingToolFactory.createLoggingTool(GeometryTools.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(GeometryTools.class)", "var_name": "logger"}], "methods": [{"identifier": "translateAllPositive", "parameters": "(IAtomContainer atomCon)", "modifiers": "public static", "return": "void", "signature": "void translateAllPositive(IAtomContainer atomCon)", "full_signature": "public static void translateAllPositive(IAtomContainer atomCon)", "class_method_signature": "GeometryTools.translateAllPositive(IAtomContainer atomCon)", "testcase": false, "constructor": false}, {"identifier": "translate2D", "parameters": "(IAtomContainer atomCon, double transX, double transY)", "modifiers": "public static", "return": "void", "signature": "void translate2D(IAtomContainer atomCon, double transX, double transY)", "full_signature": "public static void translate2D(IAtomContainer atomCon, double transX, double transY)", "class_method_signature": "GeometryTools.translate2D(IAtomContainer atomCon, double transX, double transY)", "testcase": false, "constructor": false}, {"identifier": "scaleMolecule", "parameters": "(IAtomContainer atomCon, Dimension areaDim, double fillFactor)", "modifiers": "public static", "return": "void", "signature": "void scaleMolecule(IAtomContainer atomCon, Dimension areaDim, double fillFactor)", "full_signature": "public static void scaleMolecule(IAtomContainer atomCon, Dimension areaDim, double fillFactor)", "class_method_signature": "GeometryTools.scaleMolecule(IAtomContainer atomCon, Dimension areaDim, double fillFactor)", "testcase": false, "constructor": false}, {"identifier": "scaleMolecule", "parameters": "(IAtomContainer atomCon, double scaleFactor)", "modifiers": "public static", "return": "void", "signature": "void scaleMolecule(IAtomContainer atomCon, double scaleFactor)", "full_signature": "public static void scaleMolecule(IAtomContainer atomCon, double scaleFactor)", "class_method_signature": "GeometryTools.scaleMolecule(IAtomContainer atomCon, double scaleFactor)", "testcase": false, "constructor": false}, {"identifier": "center", "parameters": "(IAtomContainer atomCon, Dimension areaDim)", "modifiers": "public static", "return": "void", "signature": "void center(IAtomContainer atomCon, Dimension areaDim)", "full_signature": "public static void center(IAtomContainer atomCon, Dimension areaDim)", "class_method_signature": "GeometryTools.center(IAtomContainer atomCon, Dimension areaDim)", "testcase": false, "constructor": false}, {"identifier": "translate2D", "parameters": "(IAtomContainer atomCon, Vector2d vector)", "modifiers": "public static", "return": "void", "signature": "void translate2D(IAtomContainer atomCon, Vector2d vector)", "full_signature": "public static void translate2D(IAtomContainer atomCon, Vector2d vector)", "class_method_signature": "GeometryTools.translate2D(IAtomContainer atomCon, Vector2d vector)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(IAtomContainer atomCon, Point2d center, double angle)", "modifiers": "public static", "return": "void", "signature": "void rotate(IAtomContainer atomCon, Point2d center, double angle)", "full_signature": "public static void rotate(IAtomContainer atomCon, Point2d center, double angle)", "class_method_signature": "GeometryTools.rotate(IAtomContainer atomCon, Point2d center, double angle)", "testcase": false, "constructor": false}, {"identifier": "rotate", "parameters": "(IAtom atom, Point3d p1, Point3d p2, double angle)", "modifiers": "public static", "return": "void", "signature": "void rotate(IAtom atom, Point3d p1, Point3d p2, double angle)", "full_signature": "public static void rotate(IAtom atom, Point3d p1, Point3d p2, double angle)", "class_method_signature": "GeometryTools.rotate(IAtom atom, Point3d p1, Point3d p2, double angle)", "testcase": false, "constructor": false}, {"identifier": "normalize", "parameters": "(Point3d point)", "modifiers": "public static", "return": "void", "signature": "void normalize(Point3d point)", "full_signature": "public static void normalize(Point3d point)", "class_method_signature": "GeometryTools.normalize(Point3d point)", "testcase": false, "constructor": false}, {"identifier": "get2DDimension", "parameters": "(IAtomContainer atomCon)", "modifiers": "public static", "return": "Dimension", "signature": "Dimension get2DDimension(IAtomContainer atomCon)", "full_signature": "public static Dimension get2DDimension(IAtomContainer atomCon)", "class_method_signature": "GeometryTools.get2DDimension(IAtomContainer atomCon)", "testcase": false, "constructor": false}, {"identifier": "getRectangle2D", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "Rectangle2D", "signature": "Rectangle2D getRectangle2D(IAtomContainer container)", "full_signature": "public static Rectangle2D getRectangle2D(IAtomContainer container)", "class_method_signature": "GeometryTools.getRectangle2D(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "getMinMax", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "double[]", "signature": "double[] getMinMax(IAtomContainer container)", "full_signature": "public static double[] getMinMax(IAtomContainer container)", "class_method_signature": "GeometryTools.getMinMax(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "translate2DCentreOfMassTo", "parameters": "(IAtomContainer atomCon, Point2d p)", "modifiers": "public static", "return": "void", "signature": "void translate2DCentreOfMassTo(IAtomContainer atomCon, Point2d p)", "full_signature": "public static void translate2DCentreOfMassTo(IAtomContainer atomCon, Point2d p)", "class_method_signature": "GeometryTools.translate2DCentreOfMassTo(IAtomContainer atomCon, Point2d p)", "testcase": false, "constructor": false}, {"identifier": "get2DCenter", "parameters": "(Iterable<IAtom> atoms)", "modifiers": "public static", "return": "Point2d", "signature": "Point2d get2DCenter(Iterable<IAtom> atoms)", "full_signature": "public static Point2d get2DCenter(Iterable<IAtom> atoms)", "class_method_signature": "GeometryTools.get2DCenter(Iterable<IAtom> atoms)", "testcase": false, "constructor": false}, {"identifier": "get2DCenter", "parameters": "(Iterator<IAtom> atoms)", "modifiers": "public static", "return": "Point2d", "signature": "Point2d get2DCenter(Iterator<IAtom> atoms)", "full_signature": "public static Point2d get2DCenter(Iterator<IAtom> atoms)", "class_method_signature": "GeometryTools.get2DCenter(Iterator<IAtom> atoms)", "testcase": false, "constructor": false}, {"identifier": "get2DCenter", "parameters": "(IRingSet ringSet)", "modifiers": "public static", "return": "Point2d", "signature": "Point2d get2DCenter(IRingSet ringSet)", "full_signature": "public static Point2d get2DCenter(IRingSet ringSet)", "class_method_signature": "GeometryTools.get2DCenter(IRingSet ringSet)", "testcase": false, "constructor": false}, {"identifier": "get2DCentreOfMass", "parameters": "(IAtomContainer ac)", "modifiers": "public static", "return": "Point2d", "signature": "Point2d get2DCentreOfMass(IAtomContainer ac)", "full_signature": "public static Point2d get2DCentreOfMass(IAtomContainer ac)", "class_method_signature": "GeometryTools.get2DCentreOfMass(IAtomContainer ac)", "testcase": false, "constructor": false}, {"identifier": "get2DCenter", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "Point2d", "signature": "Point2d get2DCenter(IAtomContainer container)", "full_signature": "public static Point2d get2DCenter(IAtomContainer container)", "class_method_signature": "GeometryTools.get2DCenter(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "translate2DCenterTo", "parameters": "(IAtomContainer container, Point2d p)", "modifiers": "public static", "return": "void", "signature": "void translate2DCenterTo(IAtomContainer container, Point2d p)", "full_signature": "public static void translate2DCenterTo(IAtomContainer container, Point2d p)", "class_method_signature": "GeometryTools.translate2DCenterTo(IAtomContainer container, Point2d p)", "testcase": false, "constructor": false}, {"identifier": "get3DCentreOfMass", "parameters": "(IAtomContainer ac)", "modifiers": "public static", "return": "Point3d", "signature": "Point3d get3DCentreOfMass(IAtomContainer ac)", "full_signature": "public static Point3d get3DCentreOfMass(IAtomContainer ac)", "class_method_signature": "GeometryTools.get3DCentreOfMass(IAtomContainer ac)", "testcase": false, "constructor": false}, {"identifier": "get3DCenter", "parameters": "(IAtomContainer ac)", "modifiers": "public static", "return": "Point3d", "signature": "Point3d get3DCenter(IAtomContainer ac)", "full_signature": "public static Point3d get3DCenter(IAtomContainer ac)", "class_method_signature": "GeometryTools.get3DCenter(IAtomContainer ac)", "testcase": false, "constructor": false}, {"identifier": "getAngle", "parameters": "(double xDiff, double yDiff)", "modifiers": "public static", "return": "double", "signature": "double getAngle(double xDiff, double yDiff)", "full_signature": "public static double getAngle(double xDiff, double yDiff)", "class_method_signature": "GeometryTools.getAngle(double xDiff, double yDiff)", "testcase": false, "constructor": false}, {"identifier": "distanceCalculator", "parameters": "(int[] coords, double dist)", "modifiers": "public static", "return": "int[]", "signature": "int[] distanceCalculator(int[] coords, double dist)", "full_signature": "public static int[] distanceCalculator(int[] coords, double dist)", "class_method_signature": "GeometryTools.distanceCalculator(int[] coords, double dist)", "testcase": false, "constructor": false}, {"identifier": "distanceCalculator", "parameters": "(double[] coords, double dist)", "modifiers": "public static", "return": "double[]", "signature": "double[] distanceCalculator(double[] coords, double dist)", "full_signature": "public static double[] distanceCalculator(double[] coords, double dist)", "class_method_signature": "GeometryTools.distanceCalculator(double[] coords, double dist)", "testcase": false, "constructor": false}, {"identifier": "getBondCoordinates", "parameters": "(IBond bond)", "modifiers": "public static", "return": "int[]", "signature": "int[] getBondCoordinates(IBond bond)", "full_signature": "public static int[] getBondCoordinates(IBond bond)", "class_method_signature": "GeometryTools.getBondCoordinates(IBond bond)", "testcase": false, "constructor": false}, {"identifier": "getClosestAtom", "parameters": "(int xPosition, int yPosition, IAtomContainer atomCon)", "modifiers": "public static", "return": "IAtom", "signature": "IAtom getClosestAtom(int xPosition, int yPosition, IAtomContainer atomCon)", "full_signature": "public static IAtom getClosestAtom(int xPosition, int yPosition, IAtomContainer atomCon)", "class_method_signature": "GeometryTools.getClosestAtom(int xPosition, int yPosition, IAtomContainer atomCon)", "testcase": false, "constructor": false}, {"identifier": "getClosestAtom", "parameters": "(IAtomContainer atomCon, IAtom atom)", "modifiers": "public static", "return": "IAtom", "signature": "IAtom getClosestAtom(IAtomContainer atomCon, IAtom atom)", "full_signature": "public static IAtom getClosestAtom(IAtomContainer atomCon, IAtom atom)", "class_method_signature": "GeometryTools.getClosestAtom(IAtomContainer atomCon, IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getClosestAtom", "parameters": "(double xPosition, double yPosition, IAtomContainer atomCon, IAtom toignore)", "modifiers": "public static", "return": "IAtom", "signature": "IAtom getClosestAtom(double xPosition, double yPosition, IAtomContainer atomCon, IAtom toignore)", "full_signature": "public static IAtom getClosestAtom(double xPosition, double yPosition, IAtomContainer atomCon, IAtom toignore)", "class_method_signature": "GeometryTools.getClosestAtom(double xPosition, double yPosition, IAtomContainer atomCon, IAtom toignore)", "testcase": false, "constructor": false}, {"identifier": "getClosestAtom", "parameters": "(double xPosition, double yPosition, IAtomContainer atomCon)", "modifiers": "public static", "return": "IAtom", "signature": "IAtom getClosestAtom(double xPosition, double yPosition, IAtomContainer atomCon)", "full_signature": "public static IAtom getClosestAtom(double xPosition, double yPosition, IAtomContainer atomCon)", "class_method_signature": "GeometryTools.getClosestAtom(double xPosition, double yPosition, IAtomContainer atomCon)", "testcase": false, "constructor": false}, {"identifier": "getClosestBond", "parameters": "(int xPosition, int yPosition, IAtomContainer atomCon)", "modifiers": "public static", "return": "IBond", "signature": "IBond getClosestBond(int xPosition, int yPosition, IAtomContainer atomCon)", "full_signature": "public static IBond getClosestBond(int xPosition, int yPosition, IAtomContainer atomCon)", "class_method_signature": "GeometryTools.getClosestBond(int xPosition, int yPosition, IAtomContainer atomCon)", "testcase": false, "constructor": false}, {"identifier": "getClosestBond", "parameters": "(double xPosition, double yPosition, IAtomContainer atomCon)", "modifiers": "public static", "return": "IBond", "signature": "IBond getClosestBond(double xPosition, double yPosition, IAtomContainer atomCon)", "full_signature": "public static IBond getClosestBond(double xPosition, double yPosition, IAtomContainer atomCon)", "class_method_signature": "GeometryTools.getClosestBond(double xPosition, double yPosition, IAtomContainer atomCon)", "testcase": false, "constructor": false}, {"identifier": "sortBy2DDistance", "parameters": "(IAtom[] atoms, Point2d point)", "modifiers": "public static", "return": "void", "signature": "void sortBy2DDistance(IAtom[] atoms, Point2d point)", "full_signature": "public static void sortBy2DDistance(IAtom[] atoms, Point2d point)", "class_method_signature": "GeometryTools.sortBy2DDistance(IAtom[] atoms, Point2d point)", "testcase": false, "constructor": false}, {"identifier": "getScaleFactor", "parameters": "(IAtomContainer container, double bondLength)", "modifiers": "public static", "return": "double", "signature": "double getScaleFactor(IAtomContainer container, double bondLength)", "full_signature": "public static double getScaleFactor(IAtomContainer container, double bondLength)", "class_method_signature": "GeometryTools.getScaleFactor(IAtomContainer container, double bondLength)", "testcase": false, "constructor": false}, {"identifier": "getBondLengthAverage", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "double", "signature": "double getBondLengthAverage(IAtomContainer container)", "full_signature": "public static double getBondLengthAverage(IAtomContainer container)", "class_method_signature": "GeometryTools.getBondLengthAverage(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "getBondLengthMedian", "parameters": "(final IAtomContainer container)", "modifiers": "public static", "return": "double", "signature": "double getBondLengthMedian(final IAtomContainer container)", "full_signature": "public static double getBondLengthMedian(final IAtomContainer container)", "class_method_signature": "GeometryTools.getBondLengthMedian(final IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "getLength2D", "parameters": "(IBond bond)", "modifiers": "public static", "return": "double", "signature": "double getLength2D(IBond bond)", "full_signature": "public static double getLength2D(IBond bond)", "class_method_signature": "GeometryTools.getLength2D(IBond bond)", "testcase": false, "constructor": false}, {"identifier": "has2DCoordinates", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "boolean", "signature": "boolean has2DCoordinates(IAtomContainer container)", "full_signature": "public static boolean has2DCoordinates(IAtomContainer container)", "class_method_signature": "GeometryTools.has2DCoordinates(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "get2DCoordinateCoverage", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "CoordinateCoverage", "signature": "CoordinateCoverage get2DCoordinateCoverage(IAtomContainer container)", "full_signature": "public static CoordinateCoverage get2DCoordinateCoverage(IAtomContainer container)", "class_method_signature": "GeometryTools.get2DCoordinateCoverage(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "has2DCoordinatesNew", "parameters": "(IAtomContainer container)", "modifiers": "@Deprecated public static", "return": "int", "signature": "int has2DCoordinatesNew(IAtomContainer container)", "full_signature": "@Deprecated public static int has2DCoordinatesNew(IAtomContainer container)", "class_method_signature": "GeometryTools.has2DCoordinatesNew(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "has2DCoordinates", "parameters": "(IAtom atom)", "modifiers": "public static", "return": "boolean", "signature": "boolean has2DCoordinates(IAtom atom)", "full_signature": "public static boolean has2DCoordinates(IAtom atom)", "class_method_signature": "GeometryTools.has2DCoordinates(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "has2DCoordinates", "parameters": "(IBond bond)", "modifiers": "public static", "return": "boolean", "signature": "boolean has2DCoordinates(IBond bond)", "full_signature": "public static boolean has2DCoordinates(IBond bond)", "class_method_signature": "GeometryTools.has2DCoordinates(IBond bond)", "testcase": false, "constructor": false}, {"identifier": "has3DCoordinates", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "boolean", "signature": "boolean has3DCoordinates(IAtomContainer container)", "full_signature": "public static boolean has3DCoordinates(IAtomContainer container)", "class_method_signature": "GeometryTools.has3DCoordinates(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "get3DCoordinateCoverage", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "CoordinateCoverage", "signature": "CoordinateCoverage get3DCoordinateCoverage(IAtomContainer container)", "full_signature": "public static CoordinateCoverage get3DCoordinateCoverage(IAtomContainer container)", "class_method_signature": "GeometryTools.get3DCoordinateCoverage(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "calculatePerpendicularUnitVector", "parameters": "(Point2d point1, Point2d point2)", "modifiers": "public static", "return": "Vector2d", "signature": "Vector2d calculatePerpendicularUnitVector(Point2d point1, Point2d point2)", "full_signature": "public static Vector2d calculatePerpendicularUnitVector(Point2d point1, Point2d point2)", "class_method_signature": "GeometryTools.calculatePerpendicularUnitVector(Point2d point1, Point2d point2)", "testcase": false, "constructor": false}, {"identifier": "getNormalizationFactor", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "double", "signature": "double getNormalizationFactor(IAtomContainer container)", "full_signature": "public static double getNormalizationFactor(IAtomContainer container)", "class_method_signature": "GeometryTools.getNormalizationFactor(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "getBestAlignmentForLabel", "parameters": "(IAtomContainer container, IAtom atom)", "modifiers": "public static", "return": "int", "signature": "int getBestAlignmentForLabel(IAtomContainer container, IAtom atom)", "full_signature": "public static int getBestAlignmentForLabel(IAtomContainer container, IAtom atom)", "class_method_signature": "GeometryTools.getBestAlignmentForLabel(IAtomContainer container, IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "getBestAlignmentForLabelXY", "parameters": "(IAtomContainer container, IAtom atom)", "modifiers": "public static", "return": "int", "signature": "int getBestAlignmentForLabelXY(IAtomContainer container, IAtom atom)", "full_signature": "public static int getBestAlignmentForLabelXY(IAtomContainer container, IAtom atom)", "class_method_signature": "GeometryTools.getBestAlignmentForLabelXY(IAtomContainer container, IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "findClosestInSpace", "parameters": "(IAtomContainer container, IAtom startAtom, int max)", "modifiers": "public static", "return": "List<IAtom>", "signature": "List<IAtom> findClosestInSpace(IAtomContainer container, IAtom startAtom, int max)", "full_signature": "public static List<IAtom> findClosestInSpace(IAtomContainer container, IAtom startAtom, int max)", "class_method_signature": "GeometryTools.findClosestInSpace(IAtomContainer container, IAtom startAtom, int max)", "testcase": false, "constructor": false}, {"identifier": "mapAtomsOfAlignedStructures", "parameters": "(IAtomContainer firstAtomContainer,\n            IAtomContainer secondAtomContainer, double searchRadius, Map<Integer, Integer> mappedAtoms)", "modifiers": "public static", "return": "Map<Integer, Integer>", "signature": "Map<Integer, Integer> mapAtomsOfAlignedStructures(IAtomContainer firstAtomContainer,\n            IAtomContainer secondAtomContainer, double searchRadius, Map<Integer, Integer> mappedAtoms)", "full_signature": "public static Map<Integer, Integer> mapAtomsOfAlignedStructures(IAtomContainer firstAtomContainer,\n            IAtomContainer secondAtomContainer, double searchRadius, Map<Integer, Integer> mappedAtoms)", "class_method_signature": "GeometryTools.mapAtomsOfAlignedStructures(IAtomContainer firstAtomContainer,\n            IAtomContainer secondAtomContainer, double searchRadius, Map<Integer, Integer> mappedAtoms)", "testcase": false, "constructor": false}, {"identifier": "getLargestAtomContainer", "parameters": "(IAtomContainer firstAC, IAtomContainer secondAC)", "modifiers": "private static", "return": "void", "signature": "void getLargestAtomContainer(IAtomContainer firstAC, IAtomContainer secondAC)", "full_signature": "private static void getLargestAtomContainer(IAtomContainer firstAC, IAtomContainer secondAC)", "class_method_signature": "GeometryTools.getLargestAtomContainer(IAtomContainer firstAC, IAtomContainer secondAC)", "testcase": false, "constructor": false}, {"identifier": "checkAtomMapping", "parameters": "(IAtomContainer firstAC, IAtomContainer secondAC, int posFirstAtom,\n            int posSecondAtom)", "modifiers": "private static", "return": "boolean", "signature": "boolean checkAtomMapping(IAtomContainer firstAC, IAtomContainer secondAC, int posFirstAtom,\n            int posSecondAtom)", "full_signature": "private static boolean checkAtomMapping(IAtomContainer firstAC, IAtomContainer secondAC, int posFirstAtom,\n            int posSecondAtom)", "class_method_signature": "GeometryTools.checkAtomMapping(IAtomContainer firstAC, IAtomContainer secondAC, int posFirstAtom,\n            int posSecondAtom)", "testcase": false, "constructor": false}, {"identifier": "setVisitedFlagsToFalse", "parameters": "(IAtomContainer atomContainer)", "modifiers": "private static", "return": "IAtomContainer", "signature": "IAtomContainer setVisitedFlagsToFalse(IAtomContainer atomContainer)", "full_signature": "private static IAtomContainer setVisitedFlagsToFalse(IAtomContainer atomContainer)", "class_method_signature": "GeometryTools.setVisitedFlagsToFalse(IAtomContainer atomContainer)", "testcase": false, "constructor": false}, {"identifier": "getBondLengthRMSD", "parameters": "(IAtomContainer firstAtomContainer, IAtomContainer secondAtomContainer,\n            Map<Integer, Integer> mappedAtoms, boolean Coords3d)", "modifiers": "public static", "return": "double", "signature": "double getBondLengthRMSD(IAtomContainer firstAtomContainer, IAtomContainer secondAtomContainer,\n            Map<Integer, Integer> mappedAtoms, boolean Coords3d)", "full_signature": "public static double getBondLengthRMSD(IAtomContainer firstAtomContainer, IAtomContainer secondAtomContainer,\n            Map<Integer, Integer> mappedAtoms, boolean Coords3d)", "class_method_signature": "GeometryTools.getBondLengthRMSD(IAtomContainer firstAtomContainer, IAtomContainer secondAtomContainer,\n            Map<Integer, Integer> mappedAtoms, boolean Coords3d)", "testcase": false, "constructor": false}, {"identifier": "getAngleRMSD", "parameters": "(IAtomContainer firstAtomContainer, IAtomContainer secondAtomContainer,\n            Map<Integer, Integer> mappedAtoms)", "modifiers": "public static", "return": "double", "signature": "double getAngleRMSD(IAtomContainer firstAtomContainer, IAtomContainer secondAtomContainer,\n            Map<Integer, Integer> mappedAtoms)", "full_signature": "public static double getAngleRMSD(IAtomContainer firstAtomContainer, IAtomContainer secondAtomContainer,\n            Map<Integer, Integer> mappedAtoms)", "class_method_signature": "GeometryTools.getAngleRMSD(IAtomContainer firstAtomContainer, IAtomContainer secondAtomContainer,\n            Map<Integer, Integer> mappedAtoms)", "testcase": false, "constructor": false}, {"identifier": "getAngle", "parameters": "(IAtom atom1, IAtom atom2, IAtom atom3)", "modifiers": "private static", "return": "double", "signature": "double getAngle(IAtom atom1, IAtom atom2, IAtom atom3)", "full_signature": "private static double getAngle(IAtom atom1, IAtom atom2, IAtom atom3)", "class_method_signature": "GeometryTools.getAngle(IAtom atom1, IAtom atom2, IAtom atom3)", "testcase": false, "constructor": false}, {"identifier": "getAllAtomRMSD", "parameters": "(IAtomContainer firstAtomContainer, IAtomContainer secondAtomContainer,\n            Map<Integer, Integer> mappedAtoms, boolean Coords3d)", "modifiers": "public static", "return": "double", "signature": "double getAllAtomRMSD(IAtomContainer firstAtomContainer, IAtomContainer secondAtomContainer,\n            Map<Integer, Integer> mappedAtoms, boolean Coords3d)", "full_signature": "public static double getAllAtomRMSD(IAtomContainer firstAtomContainer, IAtomContainer secondAtomContainer,\n            Map<Integer, Integer> mappedAtoms, boolean Coords3d)", "class_method_signature": "GeometryTools.getAllAtomRMSD(IAtomContainer firstAtomContainer, IAtomContainer secondAtomContainer,\n            Map<Integer, Integer> mappedAtoms, boolean Coords3d)", "testcase": false, "constructor": false}, {"identifier": "getHeavyAtomRMSD", "parameters": "(IAtomContainer firstAtomContainer, IAtomContainer secondAtomContainer,\n            Map<Integer, Integer> mappedAtoms, boolean hetAtomOnly, boolean Coords3d)", "modifiers": "public static", "return": "double", "signature": "double getHeavyAtomRMSD(IAtomContainer firstAtomContainer, IAtomContainer secondAtomContainer,\n            Map<Integer, Integer> mappedAtoms, boolean hetAtomOnly, boolean Coords3d)", "full_signature": "public static double getHeavyAtomRMSD(IAtomContainer firstAtomContainer, IAtomContainer secondAtomContainer,\n            Map<Integer, Integer> mappedAtoms, boolean hetAtomOnly, boolean Coords3d)", "class_method_signature": "GeometryTools.getHeavyAtomRMSD(IAtomContainer firstAtomContainer, IAtomContainer secondAtomContainer,\n            Map<Integer, Integer> mappedAtoms, boolean hetAtomOnly, boolean Coords3d)", "testcase": false, "constructor": false}, {"identifier": "getBondLengthAverage3D", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "double", "signature": "double getBondLengthAverage3D(IAtomContainer container)", "full_signature": "public static double getBondLengthAverage3D(IAtomContainer container)", "class_method_signature": "GeometryTools.getBondLengthAverage3D(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "shiftContainer", "parameters": "(IAtomContainer container, Rectangle2D bounds, Rectangle2D last, double gap)", "modifiers": "public static", "return": "Rectangle2D", "signature": "Rectangle2D shiftContainer(IAtomContainer container, Rectangle2D bounds, Rectangle2D last, double gap)", "full_signature": "public static Rectangle2D shiftContainer(IAtomContainer container, Rectangle2D bounds, Rectangle2D last, double gap)", "class_method_signature": "GeometryTools.shiftContainer(IAtomContainer container, Rectangle2D bounds, Rectangle2D last, double gap)", "testcase": false, "constructor": false}, {"identifier": "getBondLengthAverage", "parameters": "(IReaction reaction)", "modifiers": "public static", "return": "double", "signature": "double getBondLengthAverage(IReaction reaction)", "full_signature": "public static double getBondLengthAverage(IReaction reaction)", "class_method_signature": "GeometryTools.getBondLengthAverage(IReaction reaction)", "testcase": false, "constructor": false}, {"identifier": "has3DCoordinates", "parameters": "(IChemModel chemModel)", "modifiers": "public static", "return": "boolean", "signature": "boolean has3DCoordinates(IChemModel chemModel)", "full_signature": "public static boolean has3DCoordinates(IChemModel chemModel)", "class_method_signature": "GeometryTools.has3DCoordinates(IChemModel chemModel)", "testcase": false, "constructor": false}, {"identifier": "shiftReactionVertical", "parameters": "(IReaction reaction, Rectangle2D bounds, Rectangle2D last, double gap)", "modifiers": "public static", "return": "Rectangle2D", "signature": "Rectangle2D shiftReactionVertical(IReaction reaction, Rectangle2D bounds, Rectangle2D last, double gap)", "full_signature": "public static Rectangle2D shiftReactionVertical(IReaction reaction, Rectangle2D bounds, Rectangle2D last, double gap)", "class_method_signature": "GeometryTools.shiftReactionVertical(IReaction reaction, Rectangle2D bounds, Rectangle2D last, double gap)", "testcase": false, "constructor": false}], "file": "legacy/src/main/java/org/openscience/cdk/geometry/GeometryTools.java"}, "focal_method": {"identifier": "has2DCoordinates", "parameters": "(IAtomContainer container)", "modifiers": "public static", "return": "boolean", "body": "public static boolean has2DCoordinates(IAtomContainer container) {\n\n        if (container == null || container.getAtomCount() == 0) return Boolean.FALSE;\n\n        for (IAtom atom : container.atoms()) {\n\n            if (atom == null || atom.getPoint2d() == null) return Boolean.FALSE;\n\n        }\n\n        return Boolean.TRUE;\n\n    }", "signature": "boolean has2DCoordinates(IAtomContainer container)", "full_signature": "public static boolean has2DCoordinates(IAtomContainer container)", "class_method_signature": "GeometryTools.has2DCoordinates(IAtomContainer container)", "testcase": false, "constructor": false, "invocations": ["getAtomCount", "atoms", "getPoint2d"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}