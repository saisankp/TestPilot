{"test_class": {"identifier": "CompetitionGroupMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CompetitionGroupMapper mapper = Mappers.getMapper(CompetitionGroupMapper.class);", "modifier": "private", "type": "CompetitionGroupMapper", "declarator": "mapper = Mappers.getMapper(CompetitionGroupMapper.class)", "var_name": "mapper"}], "file": "service/src/test/java/org/coner/core/mapper/CompetitionGroupMapperTest.java"}, "test_case": {"identifier": "whenToDomainAddPayloadFromApiAddRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void whenToDomainAddPayloadFromApiAddRequest() {\n        AddCompetitionGroupRequest apiAddRequest = ApiRequestTestUtils.fullAddCompetitionGroup();\n        CompetitionGroupAddPayload expected = DomainPayloadTestUtils.fullCompetitionGroupAdd();\n\n        CompetitionGroupAddPayload actual = mapper.toDomainAddPayload(apiAddRequest);\n\n        assertThat(actual).isEqualTo(expected);\n    }", "signature": "void whenToDomainAddPayloadFromApiAddRequest()", "full_signature": "@Test public void whenToDomainAddPayloadFromApiAddRequest()", "class_method_signature": "CompetitionGroupMapperTest.whenToDomainAddPayloadFromApiAddRequest()", "testcase": true, "constructor": false, "invocations": ["fullAddCompetitionGroup", "fullCompetitionGroupAdd", "toDomainAddPayload", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "CompetitionGroupMapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CompetitionGroupDao dao;", "modifier": "private", "type": "CompetitionGroupDao", "declarator": "dao", "var_name": "dao"}], "methods": [{"identifier": "toDomainAddPayload", "parameters": "(AddCompetitionGroupRequest apiAddRequest)", "modifiers": "public abstract", "return": "CompetitionGroupAddPayload", "signature": "CompetitionGroupAddPayload toDomainAddPayload(AddCompetitionGroupRequest apiAddRequest)", "full_signature": "public abstract CompetitionGroupAddPayload toDomainAddPayload(AddCompetitionGroupRequest apiAddRequest)", "class_method_signature": "CompetitionGroupMapper.toDomainAddPayload(AddCompetitionGroupRequest apiAddRequest)", "testcase": false, "constructor": false}, {"identifier": "toApiEntity", "parameters": "(CompetitionGroup domainEntity)", "modifiers": "public abstract", "return": "CompetitionGroupApiEntity", "signature": "CompetitionGroupApiEntity toApiEntity(CompetitionGroup domainEntity)", "full_signature": "public abstract CompetitionGroupApiEntity toApiEntity(CompetitionGroup domainEntity)", "class_method_signature": "CompetitionGroupMapper.toApiEntity(CompetitionGroup domainEntity)", "testcase": false, "constructor": false}, {"identifier": "toApiEntityList", "parameters": "(List<CompetitionGroup> domainEntityList)", "modifiers": "public abstract", "return": "List<CompetitionGroupApiEntity>", "signature": "List<CompetitionGroupApiEntity> toApiEntityList(List<CompetitionGroup> domainEntityList)", "full_signature": "public abstract List<CompetitionGroupApiEntity> toApiEntityList(List<CompetitionGroup> domainEntityList)", "class_method_signature": "CompetitionGroupMapper.toApiEntityList(List<CompetitionGroup> domainEntityList)", "testcase": false, "constructor": false}, {"identifier": "toHibernateEntity", "parameters": "(CompetitionGroupAddPayload domainAddPayload)", "modifiers": "public abstract", "return": "CompetitionGroupHibernateEntity", "signature": "CompetitionGroupHibernateEntity toHibernateEntity(CompetitionGroupAddPayload domainAddPayload)", "full_signature": "public abstract CompetitionGroupHibernateEntity toHibernateEntity(CompetitionGroupAddPayload domainAddPayload)", "class_method_signature": "CompetitionGroupMapper.toHibernateEntity(CompetitionGroupAddPayload domainAddPayload)", "testcase": false, "constructor": false}, {"identifier": "toHibernateEntity", "parameters": "(CompetitionGroup domainEntity)", "modifiers": "public", "return": "CompetitionGroupHibernateEntity", "signature": "CompetitionGroupHibernateEntity toHibernateEntity(CompetitionGroup domainEntity)", "full_signature": "public CompetitionGroupHibernateEntity toHibernateEntity(CompetitionGroup domainEntity)", "class_method_signature": "CompetitionGroupMapper.toHibernateEntity(CompetitionGroup domainEntity)", "testcase": false, "constructor": false}, {"identifier": "updateHibernateEntity", "parameters": "(\n            CompetitionGroup domainEntity,\n            @MappingTarget CompetitionGroupHibernateEntity hibernateEntity\n    )", "modifiers": "public abstract", "return": "void", "signature": "void updateHibernateEntity(\n            CompetitionGroup domainEntity,\n            @MappingTarget CompetitionGroupHibernateEntity hibernateEntity\n    )", "full_signature": "public abstract void updateHibernateEntity(\n            CompetitionGroup domainEntity,\n            @MappingTarget CompetitionGroupHibernateEntity hibernateEntity\n    )", "class_method_signature": "CompetitionGroupMapper.updateHibernateEntity(\n            CompetitionGroup domainEntity,\n            @MappingTarget CompetitionGroupHibernateEntity hibernateEntity\n    )", "testcase": false, "constructor": false}, {"identifier": "toDomainEntity", "parameters": "(CompetitionGroupHibernateEntity hibernateEntity)", "modifiers": "public abstract", "return": "CompetitionGroup", "signature": "CompetitionGroup toDomainEntity(CompetitionGroupHibernateEntity hibernateEntity)", "full_signature": "public abstract CompetitionGroup toDomainEntity(CompetitionGroupHibernateEntity hibernateEntity)", "class_method_signature": "CompetitionGroupMapper.toDomainEntity(CompetitionGroupHibernateEntity hibernateEntity)", "testcase": false, "constructor": false}, {"identifier": "toDomainEntityList", "parameters": "(\n            List<CompetitionGroupHibernateEntity> hibernateEntityList\n    )", "modifiers": "public abstract", "return": "List<CompetitionGroup>", "signature": "List<CompetitionGroup> toDomainEntityList(\n            List<CompetitionGroupHibernateEntity> hibernateEntityList\n    )", "full_signature": "public abstract List<CompetitionGroup> toDomainEntityList(\n            List<CompetitionGroupHibernateEntity> hibernateEntityList\n    )", "class_method_signature": "CompetitionGroupMapper.toDomainEntityList(\n            List<CompetitionGroupHibernateEntity> hibernateEntityList\n    )", "testcase": false, "constructor": false}, {"identifier": "setDao", "parameters": "(CompetitionGroupDao dao)", "modifiers": "public", "return": "void", "signature": "void setDao(CompetitionGroupDao dao)", "full_signature": "public void setDao(CompetitionGroupDao dao)", "class_method_signature": "CompetitionGroupMapper.setDao(CompetitionGroupDao dao)", "testcase": false, "constructor": false}], "file": "service/src/main/java/org/coner/core/mapper/CompetitionGroupMapper.java"}, "focal_method": {"identifier": "toDomainAddPayload", "parameters": "(AddCompetitionGroupRequest apiAddRequest)", "modifiers": "public abstract", "return": "CompetitionGroupAddPayload", "body": "public abstract CompetitionGroupAddPayload toDomainAddPayload(AddCompetitionGroupRequest apiAddRequest);", "signature": "CompetitionGroupAddPayload toDomainAddPayload(AddCompetitionGroupRequest apiAddRequest)", "full_signature": "public abstract CompetitionGroupAddPayload toDomainAddPayload(AddCompetitionGroupRequest apiAddRequest)", "class_method_signature": "CompetitionGroupMapper.toDomainAddPayload(AddCompetitionGroupRequest apiAddRequest)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 28649714, "url": "https://github.com/caeos/coner-core", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 1027, "license": "licensed"}}