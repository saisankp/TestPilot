{"test_class": {"identifier": "TransformersTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PublishSubject<String> upstream;", "modifier": "private", "type": "PublishSubject<String>", "declarator": "upstream", "var_name": "upstream"}, {"original_string": "private TestAction action;", "modifier": "private", "type": "TestAction", "declarator": "action", "var_name": "action"}, {"original_string": "private TestScheduler scheduler;", "modifier": "private", "type": "TestScheduler", "declarator": "scheduler", "var_name": "scheduler"}, {"original_string": "private TestConsumer<String> consumer;", "modifier": "private", "type": "TestConsumer<String>", "declarator": "consumer", "var_name": "consumer"}], "file": "mobius-rx/src/test/java/com/spotify/mobius/rx/TransformersTest.java"}, "test_case": {"identifier": "effectPerformerInvokesFunctionWithReceivedEffectAndErrorsForUnhandledExceptions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void effectPerformerInvokesFunctionWithReceivedEffectAndErrorsForUnhandledExceptions() {\n    PublishSubject<String> upstream = PublishSubject.create();\n    TestScheduler scheduler = new TestScheduler();\n    Function<String, Integer> function =\n        s -> {\n          throw new RuntimeException(\"Something bad happened\");\n        };\n    AssertableSubscriber<Integer> observer =\n        upstream.compose(Transformers.fromFunction(function, scheduler)).test();\n\n    upstream.onNext(\"Hello\");\n    scheduler.triggerActions();\n    observer.assertError(RuntimeException.class);\n  }", "signature": "void effectPerformerInvokesFunctionWithReceivedEffectAndErrorsForUnhandledExceptions()", "full_signature": "@Test public void effectPerformerInvokesFunctionWithReceivedEffectAndErrorsForUnhandledExceptions()", "class_method_signature": "TransformersTest.effectPerformerInvokesFunctionWithReceivedEffectAndErrorsForUnhandledExceptions()", "testcase": true, "constructor": false, "invocations": ["create", "test", "compose", "fromFunction", "onNext", "triggerActions", "assertError"]}, "focal_class": {"identifier": "Transformers", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Transformers", "parameters": "()", "modifiers": "private", "return": "", "signature": " Transformers()", "full_signature": "private  Transformers()", "class_method_signature": "Transformers.Transformers()", "testcase": false, "constructor": true}, {"identifier": "fromAction", "parameters": "(final Action0 doEffect)", "modifiers": "static", "return": "Transformer<F, E>", "signature": "Transformer<F, E> fromAction(final Action0 doEffect)", "full_signature": "static Transformer<F, E> fromAction(final Action0 doEffect)", "class_method_signature": "Transformers.fromAction(final Action0 doEffect)", "testcase": false, "constructor": false}, {"identifier": "fromAction", "parameters": "(\n      final Action0 doEffect, @Nullable final Scheduler scheduler)", "modifiers": "static", "return": "Transformer<F, E>", "signature": "Transformer<F, E> fromAction(\n      final Action0 doEffect, @Nullable final Scheduler scheduler)", "full_signature": "static Transformer<F, E> fromAction(\n      final Action0 doEffect, @Nullable final Scheduler scheduler)", "class_method_signature": "Transformers.fromAction(\n      final Action0 doEffect, @Nullable final Scheduler scheduler)", "testcase": false, "constructor": false}, {"identifier": "fromConsumer", "parameters": "(final Action1<F> doEffect)", "modifiers": "static", "return": "Transformer<F, E>", "signature": "Transformer<F, E> fromConsumer(final Action1<F> doEffect)", "full_signature": "static Transformer<F, E> fromConsumer(final Action1<F> doEffect)", "class_method_signature": "Transformers.fromConsumer(final Action1<F> doEffect)", "testcase": false, "constructor": false}, {"identifier": "fromConsumer", "parameters": "(\n      final Action1<F> doEffect, @Nullable final Scheduler scheduler)", "modifiers": "static", "return": "Transformer<F, E>", "signature": "Transformer<F, E> fromConsumer(\n      final Action1<F> doEffect, @Nullable final Scheduler scheduler)", "full_signature": "static Transformer<F, E> fromConsumer(\n      final Action1<F> doEffect, @Nullable final Scheduler scheduler)", "class_method_signature": "Transformers.fromConsumer(\n      final Action1<F> doEffect, @Nullable final Scheduler scheduler)", "testcase": false, "constructor": false}, {"identifier": "fromFunction", "parameters": "(\n      final Function<F, E> function, @Nullable final Scheduler scheduler)", "modifiers": "static", "return": "Observable.Transformer<F, E>", "signature": "Observable.Transformer<F, E> fromFunction(\n      final Function<F, E> function, @Nullable final Scheduler scheduler)", "full_signature": "static Observable.Transformer<F, E> fromFunction(\n      final Function<F, E> function, @Nullable final Scheduler scheduler)", "class_method_signature": "Transformers.fromFunction(\n      final Function<F, E> function, @Nullable final Scheduler scheduler)", "testcase": false, "constructor": false}, {"identifier": "fromFunction", "parameters": "(final Function<F, E> function)", "modifiers": "static", "return": "Observable.Transformer<F, E>", "signature": "Observable.Transformer<F, E> fromFunction(final Function<F, E> function)", "full_signature": "static Observable.Transformer<F, E> fromFunction(final Function<F, E> function)", "class_method_signature": "Transformers.fromFunction(final Function<F, E> function)", "testcase": false, "constructor": false}], "file": "mobius-rx/src/main/java/com/spotify/mobius/rx/Transformers.java"}, "focal_method": {"identifier": "fromFunction", "parameters": "(\n      final Function<F, E> function, @Nullable final Scheduler scheduler)", "modifiers": "static", "return": "Observable.Transformer<F, E>", "body": "static <F, E> Observable.Transformer<F, E> fromFunction(\n      final Function<F, E> function, @Nullable final Scheduler scheduler) {\n    return new Observable.Transformer<F, E>() {\n      @Override\n      public Observable<E> call(Observable<F> effectStream) {\n        return effectStream.flatMap(\n            new Func1<F, Observable<E>>() {\n              @Override\n              public Observable<E> call(final F f) {\n                Observable<E> eventObservable =\n                    Observable.fromCallable(\n                        new Callable<E>() {\n                          @Override\n                          public E call() throws Exception {\n                            return function.apply(f);\n                          }\n                        });\n                return scheduler == null ? eventObservable : eventObservable.subscribeOn(scheduler);\n              }\n            });\n      }\n    };\n  }", "signature": "Observable.Transformer<F, E> fromFunction(\n      final Function<F, E> function, @Nullable final Scheduler scheduler)", "full_signature": "static Observable.Transformer<F, E> fromFunction(\n      final Function<F, E> function, @Nullable final Scheduler scheduler)", "class_method_signature": "Transformers.fromFunction(\n      final Function<F, E> function, @Nullable final Scheduler scheduler)", "testcase": false, "constructor": false, "invocations": ["flatMap", "fromCallable", "apply", "subscribeOn"]}, "repository": {"repo_id": 118132535, "url": "https://github.com/spotify/mobius", "stars": 663, "created": "1/19/2018 2:07:51 PM +00:00", "updates": "2020-01-27T22:05:43+00:00", "fork": "False", "license": "licensed"}}