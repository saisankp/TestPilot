{"test_class": {"identifier": "AsynchronousProcessListWriterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AsynchronousProcessListWriter processListWriter;", "modifier": "private", "type": "AsynchronousProcessListWriter", "declarator": "processListWriter", "var_name": "processListWriter"}], "file": "everrest-core/src/test/java/org/everrest/core/impl/async/AsynchronousProcessListWriterTest.java"}, "test_case": {"identifier": "testIsWritable", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsWritable() throws Exception {\n        assertTrue(processListWriter.isWriteable(List.class,\n                                                 newParameterizedType(List.class, AsynchronousProcess.class),\n                                                 new Annotation[0],\n                                                 MediaType.TEXT_PLAIN_TYPE));\n    }", "signature": "void testIsWritable()", "full_signature": "@Test public void testIsWritable()", "class_method_signature": "AsynchronousProcessListWriterTest.testIsWritable()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isWriteable", "newParameterizedType"]}, "focal_class": {"identifier": "AsynchronousProcessListWriter", "superclass": "", "interfaces": "implements MessageBodyWriter<Iterable<AsynchronousProcess>>", "fields": [{"original_string": "private static final String OUTPUT_FORMAT = \"%-30s%-10s%-10s%s%n\";", "modifier": "private static final", "type": "String", "declarator": "OUTPUT_FORMAT = \"%-30s%-10s%-10s%s%n\"", "var_name": "OUTPUT_FORMAT"}], "methods": [{"identifier": "isWriteable", "parameters": "(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "AsynchronousProcessListWriter.isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "(Iterable<AsynchronousProcess> asynchronousProcesses,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType)", "modifiers": "@Override public", "return": "long", "signature": "long getSize(Iterable<AsynchronousProcess> asynchronousProcesses,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType)", "full_signature": "@Override public long getSize(Iterable<AsynchronousProcess> asynchronousProcesses,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType)", "class_method_signature": "AsynchronousProcessListWriter.getSize(Iterable<AsynchronousProcess> asynchronousProcesses,\n                        Class<?> type,\n                        Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType)", "testcase": false, "constructor": false}, {"identifier": "writeTo", "parameters": "(Iterable<AsynchronousProcess> asynchronousProcesses,\n                        Class<?> type, Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "modifiers": "@Override public", "return": "void", "signature": "void writeTo(Iterable<AsynchronousProcess> asynchronousProcesses,\n                        Class<?> type, Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "full_signature": "@Override public void writeTo(Iterable<AsynchronousProcess> asynchronousProcesses,\n                        Class<?> type, Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "class_method_signature": "AsynchronousProcessListWriter.writeTo(Iterable<AsynchronousProcess> asynchronousProcesses,\n                        Class<?> type, Type genericType,\n                        Annotation[] annotations,\n                        MediaType mediaType,\n                        MultivaluedMap<String, Object> httpHeaders,\n                        OutputStream entityStream)", "testcase": false, "constructor": false}], "file": "everrest-core/src/main/java/org/everrest/core/impl/async/AsynchronousProcessListWriter.java"}, "focal_method": {"identifier": "isWriteable", "parameters": "(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType) {\n        if (Iterable.class.isAssignableFrom(type) && (genericType instanceof ParameterizedType)) {\n            Type[] types = ((ParameterizedType)genericType).getActualTypeArguments();\n            return types.length == 1 && types[0] == AsynchronousProcess.class;\n        }\n        return false;\n    }", "signature": "boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "full_signature": "@Override public boolean isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "class_method_signature": "AsynchronousProcessListWriter.isWriteable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType)", "testcase": false, "constructor": false, "invocations": ["isAssignableFrom", "getActualTypeArguments"]}, "repository": {"repo_id": 14550159, "url": "https://github.com/codenvy/everrest", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 24, "size": 4563, "license": "licensed"}}