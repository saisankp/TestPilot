{"test_class": {"identifier": "ByteArrayTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private byte[] data = \"0123456789\".getBytes();", "modifier": "private", "type": "byte[]", "declarator": "data = \"0123456789\".getBytes()", "var_name": "data"}], "file": "concurrency/src/test/java/com/baidu/unbiz/common/io/ByteArrayTest.java"}, "test_case": {"identifier": "writeTo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void writeTo() throws Exception {\n        ByteArray ba;\n\n        ba = new ByteArray(data);\n\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        ba.writeTo(baos);\n\n        assertArrayEquals(data, baos.toByteArray());\n    }", "signature": "void writeTo()", "full_signature": "@Test public void writeTo()", "class_method_signature": "ByteArrayTest.writeTo()", "testcase": true, "constructor": false, "invocations": ["writeTo", "assertArrayEquals", "toByteArray"]}, "focal_class": {"identifier": "ByteArray", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final byte[] bytes;", "modifier": "private final", "type": "byte[]", "declarator": "bytes", "var_name": "bytes"}, {"original_string": "private final int offset;", "modifier": "private final", "type": "int", "declarator": "offset", "var_name": "offset"}, {"original_string": "private final int length;", "modifier": "private final", "type": "int", "declarator": "length", "var_name": "length"}], "methods": [{"identifier": "ByteArray", "parameters": "(byte[] bytes)", "modifiers": "public", "return": "", "signature": " ByteArray(byte[] bytes)", "full_signature": "public  ByteArray(byte[] bytes)", "class_method_signature": "ByteArray.ByteArray(byte[] bytes)", "testcase": false, "constructor": true}, {"identifier": "ByteArray", "parameters": "(byte[] bytes, int offset, int length)", "modifiers": "public", "return": "", "signature": " ByteArray(byte[] bytes, int offset, int length)", "full_signature": "public  ByteArray(byte[] bytes, int offset, int length)", "class_method_signature": "ByteArray.ByteArray(byte[] bytes, int offset, int length)", "testcase": false, "constructor": true}, {"identifier": "getRawBytes", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] getRawBytes()", "full_signature": "public byte[] getRawBytes()", "class_method_signature": "ByteArray.getRawBytes()", "testcase": false, "constructor": false}, {"identifier": "getOffset", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getOffset()", "full_signature": "public int getOffset()", "class_method_signature": "ByteArray.getOffset()", "testcase": false, "constructor": false}, {"identifier": "getLength", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getLength()", "full_signature": "public int getLength()", "class_method_signature": "ByteArray.getLength()", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "()", "modifiers": "public", "return": "byte[]", "signature": "byte[] toByteArray()", "full_signature": "public byte[] toByteArray()", "class_method_signature": "ByteArray.toByteArray()", "testcase": false, "constructor": false}, {"identifier": "toInputStream", "parameters": "()", "modifiers": "public", "return": "InputStream", "signature": "InputStream toInputStream()", "full_signature": "public InputStream toInputStream()", "class_method_signature": "ByteArray.toInputStream()", "testcase": false, "constructor": false}, {"identifier": "writeTo", "parameters": "(OutputStream out)", "modifiers": "public", "return": "void", "signature": "void writeTo(OutputStream out)", "full_signature": "public void writeTo(OutputStream out)", "class_method_signature": "ByteArray.writeTo(OutputStream out)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ByteArray.toString()", "testcase": false, "constructor": false}], "file": "concurrency/src/main/java/com/baidu/unbiz/common/io/ByteArray.java"}, "focal_method": {"identifier": "writeTo", "parameters": "(OutputStream out)", "modifiers": "public", "return": "void", "body": "public void writeTo(OutputStream out) throws IOException {\n        out.write(bytes, offset, length);\n    }", "signature": "void writeTo(OutputStream out)", "full_signature": "public void writeTo(OutputStream out)", "class_method_signature": "ByteArray.writeTo(OutputStream out)", "testcase": false, "constructor": false, "invocations": ["write"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}