{"test_class": {"identifier": "RegExpExtTest", "superclass": "", "interfaces": "", "fields": [], "file": "titus-common/src/test/java/com/netflix/titus/common/util/RegExpExtTest.java"}, "test_case": {"identifier": "testDynamicMatcher", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDynamicMatcher() {\n        String message = \"hello\\nend\";\n        boolean matches = RegExpExt.dynamicMatcher(() -> \".*hello.*\", Pattern.DOTALL, e -> {\n            throw new IllegalStateException(e);\n        }).apply(message).matches();\n        assertThat(matches).isTrue();\n    }", "signature": "void testDynamicMatcher()", "full_signature": "@Test public void testDynamicMatcher()", "class_method_signature": "RegExpExtTest.testDynamicMatcher()", "testcase": true, "constructor": false, "invocations": ["matches", "apply", "dynamicMatcher", "isTrue", "assertThat"]}, "focal_class": {"identifier": "RegExpExt", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "RegExpExt", "parameters": "()", "modifiers": "private", "return": "", "signature": " RegExpExt()", "full_signature": "private  RegExpExt()", "class_method_signature": "RegExpExt.RegExpExt()", "testcase": false, "constructor": true}, {"identifier": "dynamicMatcher", "parameters": "(Supplier<String> regExpSource, int flags, Consumer<Throwable> onError)", "modifiers": "public static", "return": "Function<String, Matcher>", "signature": "Function<String, Matcher> dynamicMatcher(Supplier<String> regExpSource, int flags, Consumer<Throwable> onError)", "full_signature": "public static Function<String, Matcher> dynamicMatcher(Supplier<String> regExpSource, int flags, Consumer<Throwable> onError)", "class_method_signature": "RegExpExt.dynamicMatcher(Supplier<String> regExpSource, int flags, Consumer<Throwable> onError)", "testcase": false, "constructor": false}, {"identifier": "dynamicMatcher", "parameters": "(Supplier<String> regExpSource, String propertyName, int flags, Logger errorLogger)", "modifiers": "public static", "return": "Function<String, Matcher>", "signature": "Function<String, Matcher> dynamicMatcher(Supplier<String> regExpSource, String propertyName, int flags, Logger errorLogger)", "full_signature": "public static Function<String, Matcher> dynamicMatcher(Supplier<String> regExpSource, String propertyName, int flags, Logger errorLogger)", "class_method_signature": "RegExpExt.dynamicMatcher(Supplier<String> regExpSource, String propertyName, int flags, Logger errorLogger)", "testcase": false, "constructor": false}, {"identifier": "dynamicMatcherInternal", "parameters": "(Supplier<String> regExpSource, int flags, Consumer<Throwable> onError)", "modifiers": "private static", "return": "Function<String, Matcher>", "signature": "Function<String, Matcher> dynamicMatcherInternal(Supplier<String> regExpSource, int flags, Consumer<Throwable> onError)", "full_signature": "private static Function<String, Matcher> dynamicMatcherInternal(Supplier<String> regExpSource, int flags, Consumer<Throwable> onError)", "class_method_signature": "RegExpExt.dynamicMatcherInternal(Supplier<String> regExpSource, int flags, Consumer<Throwable> onError)", "testcase": false, "constructor": false}], "file": "titus-common/src/main/java/com/netflix/titus/common/util/RegExpExt.java"}, "focal_method": {"identifier": "dynamicMatcher", "parameters": "(Supplier<String> regExpSource, int flags, Consumer<Throwable> onError)", "modifiers": "public static", "return": "Function<String, Matcher>", "body": "public static Function<String, Matcher> dynamicMatcher(Supplier<String> regExpSource, int flags, Consumer<Throwable> onError) {\n        return dynamicMatcherInternal(regExpSource, flags, onError);\n    }", "signature": "Function<String, Matcher> dynamicMatcher(Supplier<String> regExpSource, int flags, Consumer<Throwable> onError)", "full_signature": "public static Function<String, Matcher> dynamicMatcher(Supplier<String> regExpSource, int flags, Consumer<Throwable> onError)", "class_method_signature": "RegExpExt.dynamicMatcher(Supplier<String> regExpSource, int flags, Consumer<Throwable> onError)", "testcase": false, "constructor": false, "invocations": ["dynamicMatcherInternal"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}