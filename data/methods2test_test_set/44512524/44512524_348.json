{"test_class": {"identifier": "FilterBoltTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TO_FILTER = \"to_filter\";", "modifier": "private static final", "type": "String", "declarator": "TO_FILTER = \"to_filter\"", "var_name": "TO_FILTER"}, {"original_string": "private static final String NON_FILTER = \"non_filter\";", "modifier": "private static final", "type": "String", "declarator": "NON_FILTER = \"non_filter\"", "var_name": "NON_FILTER"}, {"original_string": "private FilterBolt bolt;", "modifier": "private", "type": "FilterBolt", "declarator": "bolt", "var_name": "bolt"}, {"original_string": "private Tuple tuple;", "modifier": "private", "type": "Tuple", "declarator": "tuple", "var_name": "tuple"}, {"original_string": "private BasicOutputCollector collector;", "modifier": "private", "type": "BasicOutputCollector", "declarator": "collector", "var_name": "collector"}, {"original_string": "private OutputFieldsDeclarer declarer;", "modifier": "private", "type": "OutputFieldsDeclarer", "declarator": "declarer", "var_name": "declarer"}], "file": "storm/storm-benchmark/src/test/java/storm/benchmark/lib/bolt/FilterBoltTest.java"}, "test_case": {"identifier": "shouldEmitSecondFieldIfNotFiltered", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldEmitSecondFieldIfNotFiltered() {\n    when(tuple.getValue(0)).thenReturn(NON_FILTER);\n\n    bolt.execute(tuple, collector);\n\n    verify(tuple, times(1)).getValue(1);\n    verify(collector, times(1)).emit(any(Values.class));\n  }", "signature": "void shouldEmitSecondFieldIfNotFiltered()", "full_signature": "@Test public void shouldEmitSecondFieldIfNotFiltered()", "class_method_signature": "FilterBoltTest.shouldEmitSecondFieldIfNotFiltered()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getValue", "execute", "getValue", "verify", "times", "emit", "verify", "times", "any"]}, "focal_class": {"identifier": "FilterBolt", "superclass": "extends BaseBasicBolt", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = -4957635695743420459L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -4957635695743420459L", "var_name": "serialVersionUID"}, {"original_string": "public static final String FIELDS = \"filtered\";", "modifier": "public static final", "type": "String", "declarator": "FIELDS = \"filtered\"", "var_name": "FIELDS"}, {"original_string": "private final T toFilter;", "modifier": "private final", "type": "T", "declarator": "toFilter", "var_name": "toFilter"}], "methods": [{"identifier": "FilterBolt", "parameters": "(T toFilter)", "modifiers": "public", "return": "", "signature": " FilterBolt(T toFilter)", "full_signature": "public  FilterBolt(T toFilter)", "class_method_signature": "FilterBolt.FilterBolt(T toFilter)", "testcase": false, "constructor": true}, {"identifier": "execute", "parameters": "(Tuple input, BasicOutputCollector collector)", "modifiers": "@Override public", "return": "void", "signature": "void execute(Tuple input, BasicOutputCollector collector)", "full_signature": "@Override public void execute(Tuple input, BasicOutputCollector collector)", "class_method_signature": "FilterBolt.execute(Tuple input, BasicOutputCollector collector)", "testcase": false, "constructor": false}, {"identifier": "declareOutputFields", "parameters": "(OutputFieldsDeclarer declarer)", "modifiers": "@Override public", "return": "void", "signature": "void declareOutputFields(OutputFieldsDeclarer declarer)", "full_signature": "@Override public void declareOutputFields(OutputFieldsDeclarer declarer)", "class_method_signature": "FilterBolt.declareOutputFields(OutputFieldsDeclarer declarer)", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(Tuple input, T toFilter)", "modifiers": "public static", "return": "boolean", "signature": "boolean filter(Tuple input, T toFilter)", "full_signature": "public static boolean filter(Tuple input, T toFilter)", "class_method_signature": "FilterBolt.filter(Tuple input, T toFilter)", "testcase": false, "constructor": false}], "file": "storm/storm-benchmark/src/main/java/storm/benchmark/lib/bolt/FilterBolt.java"}, "focal_method": {"identifier": "execute", "parameters": "(Tuple input, BasicOutputCollector collector)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void execute(Tuple input, BasicOutputCollector collector) {\n    if (!filter(input, toFilter)) {\n      collector.emit(new Values(input.getValue(1)));\n    }\n  }", "signature": "void execute(Tuple input, BasicOutputCollector collector)", "full_signature": "@Override public void execute(Tuple input, BasicOutputCollector collector)", "class_method_signature": "FilterBolt.execute(Tuple input, BasicOutputCollector collector)", "testcase": false, "constructor": false, "invocations": ["filter", "emit", "getValue"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}