{"test_class": {"identifier": "StripHtmlSanitizerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String URL = \"http://www.foo.com?a=1&num_rooms=1&children=0&int=VA&b=2\";", "modifier": "private static final", "type": "String", "declarator": "URL = \"http://www.foo.com?a=1&num_rooms=1&children=0&int=VA&b=2\"", "var_name": "URL"}], "file": "inputvalidation/src/test/java/com/switchfly/inputvalidation/sanitizer/StripHtmlSanitizerTest.java"}, "test_case": {"identifier": "testExecute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecute() throws Exception {\n\n        StripHtmlSanitizer sanitizer = new StripHtmlSanitizer();\n\n        String html = IOUtils.toString(getClass().getResourceAsStream(\"StripHtmlSanitizerTest_dirty.html\"));\n\n        assertEquals(\"SPG Flights FAQs Home Frequently Asked Questions\", sanitizer.execute(html));\n    }", "signature": "void testExecute()", "full_signature": "@Test public void testExecute()", "class_method_signature": "StripHtmlSanitizerTest.testExecute()", "testcase": true, "constructor": false, "invocations": ["toString", "getResourceAsStream", "getClass", "assertEquals", "execute"]}, "focal_class": {"identifier": "StripHtmlSanitizer", "superclass": "", "interfaces": "implements Sanitizer<String>", "fields": [], "methods": [{"identifier": "execute", "parameters": "(String content)", "modifiers": "@Override public", "return": "String", "signature": "String execute(String content)", "full_signature": "@Override public String execute(String content)", "class_method_signature": "StripHtmlSanitizer.execute(String content)", "testcase": false, "constructor": false}], "file": "inputvalidation/src/main/java/com/switchfly/inputvalidation/sanitizer/StripHtmlSanitizer.java"}, "focal_method": {"identifier": "execute", "parameters": "(String content)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String execute(String content) {\n        if (StringUtils.isBlank(content)) {\n            return content;\n        }\n        Document document = Jsoup.parse(content);\n        document.outputSettings().escapeMode(Entities.EscapeMode.xhtml);\n        for (Element element : document.select(\"script,link,iframe,style\")) {\n            element.remove();\n        }\n        return document.text();\n    }", "signature": "String execute(String content)", "full_signature": "@Override public String execute(String content)", "class_method_signature": "StripHtmlSanitizer.execute(String content)", "testcase": false, "constructor": false, "invocations": ["isBlank", "parse", "escapeMode", "outputSettings", "select", "remove", "text"]}, "repository": {"repo_id": 5622726, "url": "https://github.com/switchfly/switchfly-java", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 752, "license": "licensed"}}