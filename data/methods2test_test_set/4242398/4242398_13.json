{"test_class": {"identifier": "NetworkCommunicationDispatcherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Address address1 = UUID.randomUUID();", "modifier": "", "type": "Address", "declarator": "address1 = UUID.randomUUID()", "var_name": "address1"}, {"original_string": "Address address2 = UUID.randomUUID();", "modifier": "", "type": "Address", "declarator": "address2 = UUID.randomUUID()", "var_name": "address2"}, {"original_string": "Address address3 = UUID.randomUUID();", "modifier": "", "type": "Address", "declarator": "address3 = UUID.randomUUID()", "var_name": "address3"}, {"original_string": "Message[] messages;", "modifier": "", "type": "Message[]", "declarator": "messages", "var_name": "messages"}], "file": "core/src/test/java/com/turbospaces/network/NetworkCommunicationDispatcherTest.java"}, "test_case": {"identifier": "testSunnyDayScenario", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSunnyDayScenario() {\n        MethodCall request = new BeginTransactionMethodCall();\n        NetworkCommunicationDispatcher.verifyNoExceptions( dummyResponses(), messages, request );\n    }", "signature": "void testSunnyDayScenario()", "full_signature": "@Test public void testSunnyDayScenario()", "class_method_signature": "NetworkCommunicationDispatcherTest.testSunnyDayScenario()", "testcase": true, "constructor": false, "invocations": ["verifyNoExceptions", "dummyResponses"]}, "focal_class": {"identifier": "NetworkCommunicationDispatcher", "superclass": "extends ServerCommunicationDispatcher", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger( NetworkCommunicationDispatcher.class );", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger( NetworkCommunicationDispatcher.class )", "var_name": "LOGGER"}, {"original_string": "private final AtomicLong correlationIds = new AtomicLong();", "modifier": "private final", "type": "AtomicLong", "declarator": "correlationIds = new AtomicLong()", "var_name": "correlationIds"}, {"original_string": "private Kryo kryo;", "modifier": "private", "type": "Kryo", "declarator": "kryo", "var_name": "kryo"}, {"original_string": "private final SimpleRequestResponseCorrelator<Long, MethodCall> requestResponseCorrelator = new SimpleRequestResponseCorrelator<Long, MethodCall>();", "modifier": "private final", "type": "SimpleRequestResponseCorrelator<Long, MethodCall>", "declarator": "requestResponseCorrelator = new SimpleRequestResponseCorrelator<Long, MethodCall>()", "var_name": "requestResponseCorrelator"}], "methods": [{"identifier": "NetworkCommunicationDispatcher", "parameters": "(final AbstractSpaceConfiguration configuration)", "modifiers": "public", "return": "", "signature": " NetworkCommunicationDispatcher(final AbstractSpaceConfiguration configuration)", "full_signature": "public  NetworkCommunicationDispatcher(final AbstractSpaceConfiguration configuration)", "class_method_signature": "NetworkCommunicationDispatcher.NetworkCommunicationDispatcher(final AbstractSpaceConfiguration configuration)", "testcase": false, "constructor": true}, {"identifier": "setKryo", "parameters": "(final Kryo kryo)", "modifiers": "public", "return": "void", "signature": "void setKryo(final Kryo kryo)", "full_signature": "public void setKryo(final Kryo kryo)", "class_method_signature": "NetworkCommunicationDispatcher.setKryo(final Kryo kryo)", "testcase": false, "constructor": false}, {"identifier": "sendAndReceive", "parameters": "(final MethodCall methodCall,\n                                       final ObjectBuffer objectBuffer,\n                                       final Address... destinations)", "modifiers": "public", "return": "MethodCall[]", "signature": "MethodCall[] sendAndReceive(final MethodCall methodCall,\n                                       final ObjectBuffer objectBuffer,\n                                       final Address... destinations)", "full_signature": "public MethodCall[] sendAndReceive(final MethodCall methodCall,\n                                       final ObjectBuffer objectBuffer,\n                                       final Address... destinations)", "class_method_signature": "NetworkCommunicationDispatcher.sendAndReceive(final MethodCall methodCall,\n                                       final ObjectBuffer objectBuffer,\n                                       final Address... destinations)", "testcase": false, "constructor": false}, {"identifier": "receive", "parameters": "(final Message msg)", "modifiers": "@Override public", "return": "void", "signature": "void receive(final Message msg)", "full_signature": "@Override public void receive(final Message msg)", "class_method_signature": "NetworkCommunicationDispatcher.receive(final Message msg)", "testcase": false, "constructor": false}, {"identifier": "verifyNoExceptions", "parameters": "(final MethodCall[] result,\n                                           final Message[] messages,\n                                           final MethodCall methodCall)", "modifiers": "@VisibleForTesting static", "return": "MethodCall[]", "signature": "MethodCall[] verifyNoExceptions(final MethodCall[] result,\n                                           final Message[] messages,\n                                           final MethodCall methodCall)", "full_signature": "@VisibleForTesting static MethodCall[] verifyNoExceptions(final MethodCall[] result,\n                                           final Message[] messages,\n                                           final MethodCall methodCall)", "class_method_signature": "NetworkCommunicationDispatcher.verifyNoExceptions(final MethodCall[] result,\n                                           final Message[] messages,\n                                           final MethodCall methodCall)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/turbospaces/network/NetworkCommunicationDispatcher.java"}, "focal_method": {"identifier": "verifyNoExceptions", "parameters": "(final MethodCall[] result,\n                                           final Message[] messages,\n                                           final MethodCall methodCall)", "modifiers": "@VisibleForTesting static", "return": "MethodCall[]", "body": "@VisibleForTesting\n    static MethodCall[] verifyNoExceptions(final MethodCall[] result,\n                                           final Message[] messages,\n                                           final MethodCall methodCall) {\n        int size = result.length;\n        List<String> remoteExceptions = null;\n        for ( int i = 0; i < size; i++ ) {\n            Message message = messages[i];\n            Address destination = message.getDest();\n            if ( result[i] != null ) {\n                String exceptionAsString = result[i].getExceptionAsString();\n                if ( exceptionAsString != null ) {\n                    if ( remoteExceptions == null )\n                        remoteExceptions = Lists.newArrayList();\n                    remoteExceptions.add( String.format( \"failed to execute %s on %s due to: \\n %s\", methodCall, destination, exceptionAsString ) );\n                }\n            }\n        }\n\n        if ( remoteExceptions != null ) {\n            StringBuilder builder = new StringBuilder();\n            builder.append( \"unable to call remote method(s) due to single(multiple) failures: \" ).append( \"\\n\" );\n            for ( String e : remoteExceptions ) {\n                builder.append( \"\\t\" );\n                builder.append( e );\n                builder.append( \"\\n\" );\n            }\n            String failure = builder.toString();\n            LOGGER.error( failure );\n            throw new RemoteAccessException( failure );\n        }\n        return result;\n    }", "signature": "MethodCall[] verifyNoExceptions(final MethodCall[] result,\n                                           final Message[] messages,\n                                           final MethodCall methodCall)", "full_signature": "@VisibleForTesting static MethodCall[] verifyNoExceptions(final MethodCall[] result,\n                                           final Message[] messages,\n                                           final MethodCall methodCall)", "class_method_signature": "NetworkCommunicationDispatcher.verifyNoExceptions(final MethodCall[] result,\n                                           final Message[] messages,\n                                           final MethodCall methodCall)", "testcase": false, "constructor": false, "invocations": ["getDest", "getExceptionAsString", "newArrayList", "add", "format", "append", "append", "append", "append", "append", "toString", "error"]}, "repository": {"repo_id": 4242398, "url": "https://github.com/turbospaces/turbospaces", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 10, "size": 915, "license": "licensed"}}