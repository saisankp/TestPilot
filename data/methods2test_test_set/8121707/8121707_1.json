{"test_class": {"identifier": "InterfaceTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/mybatis-generator-core/src/test/java/org/mybatis/generator/api/dom/java/InterfaceTest.java"}, "test_case": {"identifier": "testAddImportedType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddImportedType() {\n\n        Interface interfaze = new Interface(\"com.foo.UserInterface\");\n        FullyQualifiedJavaType arrayList = FullyQualifiedJavaType.getNewArrayListInstance();\n        interfaze.addImportedType(arrayList);\n\n        assertNotNull(interfaze.getImportedTypes());\n        assertEquals(1, interfaze.getImportedTypes().size());\n        assertTrue(interfaze.getImportedTypes().contains(arrayList));\n    }", "signature": "void testAddImportedType()", "full_signature": "@Test public void testAddImportedType()", "class_method_signature": "InterfaceTest.testAddImportedType()", "testcase": true, "constructor": false, "invocations": ["getNewArrayListInstance", "addImportedType", "assertNotNull", "getImportedTypes", "assertEquals", "size", "getImportedTypes", "assertTrue", "contains", "getImportedTypes"]}, "focal_class": {"identifier": "Interface", "superclass": "extends InnerInterface", "interfaces": "implements CompilationUnit", "fields": [{"original_string": "private Set<FullyQualifiedJavaType> importedTypes = new TreeSet<>();", "modifier": "private", "type": "Set<FullyQualifiedJavaType>", "declarator": "importedTypes = new TreeSet<>()", "var_name": "importedTypes"}, {"original_string": "private Set<String> staticImports = new TreeSet<>();", "modifier": "private", "type": "Set<String>", "declarator": "staticImports = new TreeSet<>()", "var_name": "staticImports"}, {"original_string": "private List<String> fileCommentLines = new ArrayList<>();", "modifier": "private", "type": "List<String>", "declarator": "fileCommentLines = new ArrayList<>()", "var_name": "fileCommentLines"}], "methods": [{"identifier": "Interface", "parameters": "(FullyQualifiedJavaType type)", "modifiers": "public", "return": "", "signature": " Interface(FullyQualifiedJavaType type)", "full_signature": "public  Interface(FullyQualifiedJavaType type)", "class_method_signature": "Interface.Interface(FullyQualifiedJavaType type)", "testcase": false, "constructor": true}, {"identifier": "Interface", "parameters": "(String type)", "modifiers": "public", "return": "", "signature": " Interface(String type)", "full_signature": "public  Interface(String type)", "class_method_signature": "Interface.Interface(String type)", "testcase": false, "constructor": true}, {"identifier": "getImportedTypes", "parameters": "()", "modifiers": "@Override public", "return": "Set<FullyQualifiedJavaType>", "signature": "Set<FullyQualifiedJavaType> getImportedTypes()", "full_signature": "@Override public Set<FullyQualifiedJavaType> getImportedTypes()", "class_method_signature": "Interface.getImportedTypes()", "testcase": false, "constructor": false}, {"identifier": "addImportedType", "parameters": "(FullyQualifiedJavaType importedType)", "modifiers": "@Override public", "return": "void", "signature": "void addImportedType(FullyQualifiedJavaType importedType)", "full_signature": "@Override public void addImportedType(FullyQualifiedJavaType importedType)", "class_method_signature": "Interface.addImportedType(FullyQualifiedJavaType importedType)", "testcase": false, "constructor": false}, {"identifier": "addFileCommentLine", "parameters": "(String commentLine)", "modifiers": "@Override public", "return": "void", "signature": "void addFileCommentLine(String commentLine)", "full_signature": "@Override public void addFileCommentLine(String commentLine)", "class_method_signature": "Interface.addFileCommentLine(String commentLine)", "testcase": false, "constructor": false}, {"identifier": "getFileCommentLines", "parameters": "()", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getFileCommentLines()", "full_signature": "@Override public List<String> getFileCommentLines()", "class_method_signature": "Interface.getFileCommentLines()", "testcase": false, "constructor": false}, {"identifier": "addImportedTypes", "parameters": "(Set<FullyQualifiedJavaType> importedTypes)", "modifiers": "@Override public", "return": "void", "signature": "void addImportedTypes(Set<FullyQualifiedJavaType> importedTypes)", "full_signature": "@Override public void addImportedTypes(Set<FullyQualifiedJavaType> importedTypes)", "class_method_signature": "Interface.addImportedTypes(Set<FullyQualifiedJavaType> importedTypes)", "testcase": false, "constructor": false}, {"identifier": "getStaticImports", "parameters": "()", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getStaticImports()", "full_signature": "@Override public Set<String> getStaticImports()", "class_method_signature": "Interface.getStaticImports()", "testcase": false, "constructor": false}, {"identifier": "addStaticImport", "parameters": "(String staticImport)", "modifiers": "@Override public", "return": "void", "signature": "void addStaticImport(String staticImport)", "full_signature": "@Override public void addStaticImport(String staticImport)", "class_method_signature": "Interface.addStaticImport(String staticImport)", "testcase": false, "constructor": false}, {"identifier": "addStaticImports", "parameters": "(Set<String> staticImports)", "modifiers": "@Override public", "return": "void", "signature": "void addStaticImports(Set<String> staticImports)", "full_signature": "@Override public void addStaticImports(Set<String> staticImports)", "class_method_signature": "Interface.addStaticImports(Set<String> staticImports)", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(CompilationUnitVisitor<R> visitor)", "modifiers": "@Override public", "return": "R", "signature": "R accept(CompilationUnitVisitor<R> visitor)", "full_signature": "@Override public R accept(CompilationUnitVisitor<R> visitor)", "class_method_signature": "Interface.accept(CompilationUnitVisitor<R> visitor)", "testcase": false, "constructor": false}], "file": "core/mybatis-generator-core/src/main/java/org/mybatis/generator/api/dom/java/Interface.java"}, "focal_method": {"identifier": "addImportedType", "parameters": "(FullyQualifiedJavaType importedType)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void addImportedType(FullyQualifiedJavaType importedType) {\n        if (importedType.isExplicitlyImported()\n                && !importedType.getPackageName().equals(getType().getPackageName())) {\n            importedTypes.add(importedType);\n        }\n    }", "signature": "void addImportedType(FullyQualifiedJavaType importedType)", "full_signature": "@Override public void addImportedType(FullyQualifiedJavaType importedType)", "class_method_signature": "Interface.addImportedType(FullyQualifiedJavaType importedType)", "testcase": false, "constructor": false, "invocations": ["isExplicitlyImported", "equals", "getPackageName", "getPackageName", "getType", "add"]}, "repository": {"repo_id": 8121707, "url": "https://github.com/mybatis/generator", "stars": 4099, "created": "2/10/2013 11:14:50 AM +00:00", "updates": "2020-01-27T16:52:10+00:00", "fork": "False", "license": "licensed"}}