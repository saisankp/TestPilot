{"test_class": {"identifier": "EncoderTest", "superclass": "extends TestBase", "interfaces": "", "fields": [], "file": "domain/src/test/java/org/m4m/domain/EncoderTest.java"}, "test_case": {"identifier": "test_setTrackId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test_setTrackId() {\n        VideoEncoder videoEncoder = create.videoEncoder().construct();\n\n        videoEncoder.setTrackId(1);\n\n        assertEquals(1, videoEncoder.getTrackId());\n    }", "signature": "void test_setTrackId()", "full_signature": "@Test public void test_setTrackId()", "class_method_signature": "EncoderTest.test_setTrackId()", "testcase": true, "constructor": false, "invocations": ["construct", "videoEncoder", "setTrackId", "assertEquals", "getTrackId"]}, "focal_class": {"identifier": "Encoder", "superclass": "extends MediaCodecPlugin", "interfaces": "implements ITransform, ISurfaceCreator", "fields": [{"original_string": "private ISurface surface;", "modifier": "private", "type": "ISurface", "declarator": "surface", "var_name": "surface"}, {"original_string": "ArrayList<IOnSurfaceReady> listeners = new ArrayList();", "modifier": "", "type": "ArrayList<IOnSurfaceReady>", "declarator": "listeners = new ArrayList()", "var_name": "listeners"}], "methods": [{"identifier": "Encoder", "parameters": "(IMediaCodec mediaCodec)", "modifiers": "public", "return": "", "signature": " Encoder(IMediaCodec mediaCodec)", "full_signature": "public  Encoder(IMediaCodec mediaCodec)", "class_method_signature": "Encoder.Encoder(IMediaCodec mediaCodec)", "testcase": false, "constructor": true}, {"identifier": "getSurface", "parameters": "()", "modifiers": "@Override public", "return": "ISurface", "signature": "ISurface getSurface()", "full_signature": "@Override public ISurface getSurface()", "class_method_signature": "Encoder.getSurface()", "testcase": false, "constructor": false}, {"identifier": "getSimpleSurface", "parameters": "(IEglContext eglContext)", "modifiers": "@Override public", "return": "ISurface", "signature": "ISurface getSimpleSurface(IEglContext eglContext)", "full_signature": "@Override public ISurface getSimpleSurface(IEglContext eglContext)", "class_method_signature": "Encoder.getSimpleSurface(IEglContext eglContext)", "testcase": false, "constructor": false}, {"identifier": "checkIfOutputQueueHasData", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void checkIfOutputQueueHasData()", "full_signature": "@Override public void checkIfOutputQueueHasData()", "class_method_signature": "Encoder.checkIfOutputQueueHasData()", "testcase": false, "constructor": false}, {"identifier": "push", "parameters": "(Frame frame)", "modifiers": "@Override public", "return": "void", "signature": "void push(Frame frame)", "full_signature": "@Override public void push(Frame frame)", "class_method_signature": "Encoder.push(Frame frame)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void configure()", "full_signature": "@Override public void configure()", "class_method_signature": "Encoder.configure()", "testcase": false, "constructor": false}, {"identifier": "onSurfaceAvailable", "parameters": "(IOnSurfaceReady listener)", "modifiers": "@Override public", "return": "void", "signature": "void onSurfaceAvailable(IOnSurfaceReady listener)", "full_signature": "@Override public void onSurfaceAvailable(IOnSurfaceReady listener)", "class_method_signature": "Encoder.onSurfaceAvailable(IOnSurfaceReady listener)", "testcase": false, "constructor": false}, {"identifier": "pull", "parameters": "(Frame frame)", "modifiers": "@Override public", "return": "void", "signature": "void pull(Frame frame)", "full_signature": "@Override public void pull(Frame frame)", "class_method_signature": "Encoder.pull(Frame frame)", "testcase": false, "constructor": false}, {"identifier": "releaseOutputBuffer", "parameters": "(int outputBufferIndex)", "modifiers": "@Override public", "return": "void", "signature": "void releaseOutputBuffer(int outputBufferIndex)", "full_signature": "@Override public void releaseOutputBuffer(int outputBufferIndex)", "class_method_signature": "Encoder.releaseOutputBuffer(int outputBufferIndex)", "testcase": false, "constructor": false}, {"identifier": "setTrackId", "parameters": "(int trackId)", "modifiers": "@Override public", "return": "void", "signature": "void setTrackId(int trackId)", "full_signature": "@Override public void setTrackId(int trackId)", "class_method_signature": "Encoder.setTrackId(int trackId)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "Encoder.close()", "testcase": false, "constructor": false}], "file": "domain/src/main/java/org/m4m/domain/Encoder.java"}, "focal_method": {"identifier": "setTrackId", "parameters": "(int trackId)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void setTrackId(int trackId) {\n        this.trackId = trackId;\n    }", "signature": "void setTrackId(int trackId)", "full_signature": "@Override public void setTrackId(int trackId)", "class_method_signature": "Encoder.setTrackId(int trackId)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 25040346, "url": "https://github.com/INDExOS/media-for-mobile", "language": "Java", "is_fork": false, "fork_count": 167, "stargazer_count": 416, "size": 619, "license": "licensed"}}