{"test_class": {"identifier": "RequireRedhatCompatibleVersionRuleTest", "superclass": "", "interfaces": "", "fields": [], "file": "jetty-build-support/src/test/java/org/eclipse/jetty/toolchain/enforcer/rules/RequireRedhatCompatibleVersionRuleTest.java"}, "test_case": {"identifier": "testBadRedhatVersionReservedAlpha", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBadRedhatVersionReservedAlpha()\n        throws EnforcerRuleException\n    {\n        Assertions.assertThrows( EnforcerRuleException.class, () -> {\n            RequireRedhatCompatibleVersionRule rule = new RequireRedhatCompatibleVersionRule();\n            rule.ensureValidRedhatVersion( \"7.1.0.alpha3\" );\n        } );\n    }", "signature": "void testBadRedhatVersionReservedAlpha()", "full_signature": "@Test public void testBadRedhatVersionReservedAlpha()", "class_method_signature": "RequireRedhatCompatibleVersionRuleTest.testBadRedhatVersionReservedAlpha()", "testcase": true, "constructor": false, "invocations": ["assertThrows", "ensureValidRedhatVersion"]}, "focal_class": {"identifier": "RequireRedhatCompatibleVersionRule", "superclass": "", "interfaces": "implements EnforcerRule", "fields": [], "methods": [{"identifier": "execute", "parameters": "(EnforcerRuleHelper helper)", "modifiers": "public", "return": "void", "signature": "void execute(EnforcerRuleHelper helper)", "full_signature": "public void execute(EnforcerRuleHelper helper)", "class_method_signature": "RequireRedhatCompatibleVersionRule.execute(EnforcerRuleHelper helper)", "testcase": false, "constructor": false}, {"identifier": "ensureValidRedhatVersion", "parameters": "(String version)", "modifiers": "public", "return": "void", "signature": "void ensureValidRedhatVersion(String version)", "full_signature": "public void ensureValidRedhatVersion(String version)", "class_method_signature": "RequireRedhatCompatibleVersionRule.ensureValidRedhatVersion(String version)", "testcase": false, "constructor": false}, {"identifier": "getCacheId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCacheId()", "full_signature": "public String getCacheId()", "class_method_signature": "RequireRedhatCompatibleVersionRule.getCacheId()", "testcase": false, "constructor": false}, {"identifier": "isCacheable", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCacheable()", "full_signature": "public boolean isCacheable()", "class_method_signature": "RequireRedhatCompatibleVersionRule.isCacheable()", "testcase": false, "constructor": false}, {"identifier": "isResultValid", "parameters": "(EnforcerRule rule)", "modifiers": "public", "return": "boolean", "signature": "boolean isResultValid(EnforcerRule rule)", "full_signature": "public boolean isResultValid(EnforcerRule rule)", "class_method_signature": "RequireRedhatCompatibleVersionRule.isResultValid(EnforcerRule rule)", "testcase": false, "constructor": false}], "file": "jetty-build-support/src/main/java/org/eclipse/jetty/toolchain/enforcer/rules/RequireRedhatCompatibleVersionRule.java"}, "focal_method": {"identifier": "ensureValidRedhatVersion", "parameters": "(String version)", "modifiers": "public", "return": "void", "body": "public void ensureValidRedhatVersion(String version) throws EnforcerRuleException\n    {\n        if (version.endsWith(\"SNAPSHOT\"))\n        {\n            // Skip check on SNAPSHOT versions.\n            return;\n        }\n\n        if (version.contains(\"-\"))\n        {\n            throw new EnforcerRuleException(\"The version \\\"\" + version + \"\\\" does not conform to the Redhat (linux packaging) version requirements.  \"\n                    + \"It can't have the '-' character as it has a special meaning reserved for the RPM process.\");\n        }\n\n        String reserved[] =\n        {\n                // Special IDs \n                \"noarch\", \"nosrc\",\n                \"src\",\n                // Optimization IDs \n                \"fat\", \"i386\", \"i486\", \"i586\", \"i686\", \"pentium\", \"athlon\", \"ia64\", \"x86_64\", \"amd64\", \"ia32e\", \"alpha\", \"sparc\", \"m68k\", \"ppc\", \"parisc\",\n                \"hppa\", \"mips\", \"mipsel\", \"armv\", \"atari\", \"falcon\", \"milan\", \"hades\", \"s390\",\n                // OS IDs\n                \"aix\", \"amigaos\", \"bsd\", \"cygwin\", \"darwin\", \"freebsd\", \"freemint\", \"hp\", \"hpux\", \"irix\", \"linux\", \"machten\", \"macosx\", \"mint\", \"mp_ras\",\n                \"nextstep\", \"os/390\", \"osf1\", \"osf3.2\", \"osf4.0\", \"sco_sv\", \"solaris\", \"sunos\", \"unix\", \"ux\", \"vm\", \"esa\",\n                // Architecture IDs (without overlap from above)\n                \"sun\", \"xtensa\", \"rs6000\", \"sgi\" };\n\n        String lversion = version.toLowerCase();\n        for (String id : reserved)\n        {\n            if (lversion.contains(id))\n            {\n                throw new EnforcerRuleException(\"The version \\\"\" + version + \"\\\" does not conform to the Redhat (linux packaging) version requirements.  \"\n                        + \"It can't use the RPM reserved word \\\"\" + id + \"\\\".\");\n            }\n        }\n    }", "signature": "void ensureValidRedhatVersion(String version)", "full_signature": "public void ensureValidRedhatVersion(String version)", "class_method_signature": "RequireRedhatCompatibleVersionRule.ensureValidRedhatVersion(String version)", "testcase": false, "constructor": false, "invocations": ["endsWith", "contains", "toLowerCase", "contains"]}, "repository": {"repo_id": 2045140, "url": "https://github.com/eclipse/jetty.toolchain", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 10, "size": 2094, "license": "licensed"}}