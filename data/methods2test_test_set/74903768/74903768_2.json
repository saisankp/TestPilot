{"test_class": {"identifier": "SignatureVerifierTest", "superclass": "", "interfaces": "", "fields": [], "file": "configuration-lib/src/test/java/ee/ria/DigiDoc/configuration/verify/SignatureVerifierTest.java"}, "test_case": {"identifier": "verifyInvalidSignature", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void verifyInvalidSignature() {\n        String configJson = FileUtils.readFileContent(getClass().getClassLoader().getResourceAsStream(\"config.json\"));\n        byte[] configSignature = FileUtils.readFileContentBytes(getClass().getClassLoader().getResourceAsStream(\"config.rsa\"));\n        String configSignaturePublicKey = FileUtils.readFileContent(getClass().getClassLoader().getResourceAsStream(\"config.pub\"));\n        assertFalse(SignatureVerifier.verify(configSignature, configSignaturePublicKey, configJson + \"a\"));\n    }", "signature": "void verifyInvalidSignature()", "full_signature": "@Test public void verifyInvalidSignature()", "class_method_signature": "SignatureVerifierTest.verifyInvalidSignature()", "testcase": true, "constructor": false, "invocations": ["readFileContent", "getResourceAsStream", "getClassLoader", "getClass", "readFileContentBytes", "getResourceAsStream", "getClassLoader", "getClass", "readFileContent", "getResourceAsStream", "getClassLoader", "getClass", "assertFalse", "verify"]}, "focal_class": {"identifier": "SignatureVerifier", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "verify", "parameters": "(byte[] signature, String publicKeyPEM, String signedContent)", "modifiers": "static", "return": "boolean", "signature": "boolean verify(byte[] signature, String publicKeyPEM, String signedContent)", "full_signature": "static boolean verify(byte[] signature, String publicKeyPEM, String signedContent)", "class_method_signature": "SignatureVerifier.verify(byte[] signature, String publicKeyPEM, String signedContent)", "testcase": false, "constructor": false}, {"identifier": "convertPublicKeyInfoToPublicKey", "parameters": "(SubjectPublicKeyInfo publicKeyInfo)", "modifiers": "private static", "return": "PublicKey", "signature": "PublicKey convertPublicKeyInfoToPublicKey(SubjectPublicKeyInfo publicKeyInfo)", "full_signature": "private static PublicKey convertPublicKeyInfoToPublicKey(SubjectPublicKeyInfo publicKeyInfo)", "class_method_signature": "SignatureVerifier.convertPublicKeyInfoToPublicKey(SubjectPublicKeyInfo publicKeyInfo)", "testcase": false, "constructor": false}, {"identifier": "parsePublicKeyInfo", "parameters": "(String PKCS1PublicKeyPEM)", "modifiers": "private static", "return": "SubjectPublicKeyInfo", "signature": "SubjectPublicKeyInfo parsePublicKeyInfo(String PKCS1PublicKeyPEM)", "full_signature": "private static SubjectPublicKeyInfo parsePublicKeyInfo(String PKCS1PublicKeyPEM)", "class_method_signature": "SignatureVerifier.parsePublicKeyInfo(String PKCS1PublicKeyPEM)", "testcase": false, "constructor": false}, {"identifier": "verifySignature", "parameters": "(byte[] signatureBytes, PublicKey publicKey, String signedContent)", "modifiers": "private static", "return": "boolean", "signature": "boolean verifySignature(byte[] signatureBytes, PublicKey publicKey, String signedContent)", "full_signature": "private static boolean verifySignature(byte[] signatureBytes, PublicKey publicKey, String signedContent)", "class_method_signature": "SignatureVerifier.verifySignature(byte[] signatureBytes, PublicKey publicKey, String signedContent)", "testcase": false, "constructor": false}], "file": "configuration-lib/src/main/java/ee/ria/DigiDoc/configuration/verify/SignatureVerifier.java"}, "focal_method": {"identifier": "verify", "parameters": "(byte[] signature, String publicKeyPEM, String signedContent)", "modifiers": "static", "return": "boolean", "body": "static boolean verify(byte[] signature, String publicKeyPEM, String signedContent) {\n        SubjectPublicKeyInfo publicKeyInfo = parsePublicKeyInfo(publicKeyPEM);\n        PublicKey publicKey = convertPublicKeyInfoToPublicKey(publicKeyInfo);\n        return verifySignature(signature, publicKey, signedContent);\n    }", "signature": "boolean verify(byte[] signature, String publicKeyPEM, String signedContent)", "full_signature": "static boolean verify(byte[] signature, String publicKeyPEM, String signedContent)", "class_method_signature": "SignatureVerifier.verify(byte[] signature, String publicKeyPEM, String signedContent)", "testcase": false, "constructor": false, "invocations": ["parsePublicKeyInfo", "convertPublicKeyInfoToPublicKey", "verifySignature"]}, "repository": {"repo_id": 74903768, "url": "https://github.com/open-eid/MOPP-Android", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 9, "size": 526035, "license": "licensed"}}