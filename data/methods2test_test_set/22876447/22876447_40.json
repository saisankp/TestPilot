{"test_class": {"identifier": "TaskServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TaskService taskService;", "modifier": "private", "type": "TaskService", "declarator": "taskService", "var_name": "taskService"}], "file": "link-move/src/test/java/com/nhl/link/move/runtime/task/TaskServiceTest.java"}, "test_case": {"identifier": "testDelete", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testDelete() {\n\t\tDeleteBuilder<Etl1t> builder = taskService.delete(Etl1t.class);\n\t\tassertNotNull(builder);\n\t\t// TODO: anything else we can assert here?\n\t}", "signature": "void testDelete()", "full_signature": "@Test public void testDelete()", "class_method_signature": "TaskServiceTest.testDelete()", "testcase": true, "constructor": false, "invocations": ["delete", "assertNotNull"]}, "focal_class": {"identifier": "TaskService", "superclass": "", "interfaces": "implements ITaskService", "fields": [{"original_string": "private IExtractorService extractorService;", "modifier": "private", "type": "IExtractorService", "declarator": "extractorService", "var_name": "extractorService"}, {"original_string": "private ITargetCayenneService targetCayenneService;", "modifier": "private", "type": "ITargetCayenneService", "declarator": "targetCayenneService", "var_name": "targetCayenneService"}, {"original_string": "private ITokenManager tokenManager;", "modifier": "private", "type": "ITokenManager", "declarator": "tokenManager", "var_name": "tokenManager"}, {"original_string": "private IKeyAdapterFactory keyAdapterFactory;", "modifier": "private", "type": "IKeyAdapterFactory", "declarator": "keyAdapterFactory", "var_name": "keyAdapterFactory"}, {"original_string": "private TargetEntityMap targetEntityMap;", "modifier": "private", "type": "TargetEntityMap", "declarator": "targetEntityMap", "var_name": "targetEntityMap"}, {"original_string": "private ITargetPropertyWriterService writerService;", "modifier": "private", "type": "ITargetPropertyWriterService", "declarator": "writerService", "var_name": "writerService"}, {"original_string": "private ValueConverterFactory valueConverterFactory;", "modifier": "private", "type": "ValueConverterFactory", "declarator": "valueConverterFactory", "var_name": "valueConverterFactory"}], "methods": [{"identifier": "TaskService", "parameters": "(\n            @Inject IExtractorService extractorService,\n            @Inject ITargetCayenneService targetCayenneService,\n            @Inject ITokenManager tokenManager,\n            @Inject IKeyAdapterFactory keyAdapterFactory,\n            @Inject TargetEntityMap targetEntityMap,\n            @Inject ITargetPropertyWriterService writerService,\n            @Inject ValueConverterFactory valueConverterFactory)", "modifiers": "public", "return": "", "signature": " TaskService(\n            @Inject IExtractorService extractorService,\n            @Inject ITargetCayenneService targetCayenneService,\n            @Inject ITokenManager tokenManager,\n            @Inject IKeyAdapterFactory keyAdapterFactory,\n            @Inject TargetEntityMap targetEntityMap,\n            @Inject ITargetPropertyWriterService writerService,\n            @Inject ValueConverterFactory valueConverterFactory)", "full_signature": "public  TaskService(\n            @Inject IExtractorService extractorService,\n            @Inject ITargetCayenneService targetCayenneService,\n            @Inject ITokenManager tokenManager,\n            @Inject IKeyAdapterFactory keyAdapterFactory,\n            @Inject TargetEntityMap targetEntityMap,\n            @Inject ITargetPropertyWriterService writerService,\n            @Inject ValueConverterFactory valueConverterFactory)", "class_method_signature": "TaskService.TaskService(\n            @Inject IExtractorService extractorService,\n            @Inject ITargetCayenneService targetCayenneService,\n            @Inject ITokenManager tokenManager,\n            @Inject IKeyAdapterFactory keyAdapterFactory,\n            @Inject TargetEntityMap targetEntityMap,\n            @Inject ITargetPropertyWriterService writerService,\n            @Inject ValueConverterFactory valueConverterFactory)", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(Class<T> type)", "modifiers": "@Override public", "return": "CreateBuilder<T>", "signature": "CreateBuilder<T> create(Class<T> type)", "full_signature": "@Override public CreateBuilder<T> create(Class<T> type)", "class_method_signature": "TaskService.create(Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "createOrUpdate", "parameters": "(Class<T> type)", "modifiers": "@Override public", "return": "CreateOrUpdateBuilder<T>", "signature": "CreateOrUpdateBuilder<T> createOrUpdate(Class<T> type)", "full_signature": "@Override public CreateOrUpdateBuilder<T> createOrUpdate(Class<T> type)", "class_method_signature": "TaskService.createOrUpdate(Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "lookupEntity", "parameters": "(Class<T> type)", "modifiers": "protected", "return": "ObjEntity", "signature": "ObjEntity lookupEntity(Class<T> type)", "full_signature": "protected ObjEntity lookupEntity(Class<T> type)", "class_method_signature": "TaskService.lookupEntity(Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "extractSourceKeys", "parameters": "(Class<T> type)", "modifiers": "@Override public", "return": "SourceKeysBuilder", "signature": "SourceKeysBuilder extractSourceKeys(Class<T> type)", "full_signature": "@Override public SourceKeysBuilder extractSourceKeys(Class<T> type)", "class_method_signature": "TaskService.extractSourceKeys(Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "extractSourceKeys", "parameters": "(String targetEntityName)", "modifiers": "@Override public", "return": "SourceKeysBuilder", "signature": "SourceKeysBuilder extractSourceKeys(String targetEntityName)", "full_signature": "@Override public SourceKeysBuilder extractSourceKeys(String targetEntityName)", "class_method_signature": "TaskService.extractSourceKeys(String targetEntityName)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Class<T> type)", "modifiers": "@Override public", "return": "DeleteBuilder<T>", "signature": "DeleteBuilder<T> delete(Class<T> type)", "full_signature": "@Override public DeleteBuilder<T> delete(Class<T> type)", "class_method_signature": "TaskService.delete(Class<T> type)", "testcase": false, "constructor": false}], "file": "link-move/src/main/java/com/nhl/link/move/runtime/task/TaskService.java"}, "focal_method": {"identifier": "delete", "parameters": "(Class<T> type)", "modifiers": "@Override public", "return": "DeleteBuilder<T>", "body": "@Override\n    public <T extends DataObject> DeleteBuilder<T> delete(Class<T> type) {\n\n        ObjEntity entity = targetCayenneService.entityResolver().getObjEntity(type);\n        if (entity == null) {\n            throw new LmRuntimeException(\"Java class \" + type.getName() + \" is not mapped in Cayenne\");\n        }\n\n        TargetEntity targetEntity = targetEntityMap.get(entity);\n        MapperBuilder mapperBuilder = new MapperBuilder(entity, targetEntity, keyAdapterFactory);\n\n        return new DefaultDeleteBuilder<>(\n                type,\n                targetCayenneService,\n                tokenManager,\n                this,\n                mapperBuilder);\n    }", "signature": "DeleteBuilder<T> delete(Class<T> type)", "full_signature": "@Override public DeleteBuilder<T> delete(Class<T> type)", "class_method_signature": "TaskService.delete(Class<T> type)", "testcase": false, "constructor": false, "invocations": ["getObjEntity", "entityResolver", "getName", "get"]}, "repository": {"repo_id": 22876447, "url": "https://github.com/nhl/link-move", "stars": 25, "created": "8/12/2014 12:27:10 PM +00:00", "updates": "2019-12-01T17:30:35+00:00", "fork": "False", "license": "licensed"}}