{"test_class": {"identifier": "ResourceDimensionsTest", "superclass": "", "interfaces": "", "fields": [], "file": "titus-server-master/src/test/java/com/netflix/titus/master/model/ResourceDimensionsTest.java"}, "test_case": {"identifier": "testAligningUpToHigherMemory", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAligningUpToHigherMemory() throws Exception {\n        ResourceDimension small2X = ResourceDimensionSample.SmallWithGpuAndOpportunisticX2.build();\n        ResourceDimension original = ResourceDimensionSample.SmallWithGpuAndOpportunistic.builder().withMemoryMB(small2X.getMemoryMB()).build();\n\n        assertThat(ResourceDimensions.alignUp(original, small2X)).isEqualTo(small2X);\n    }", "signature": "void testAligningUpToHigherMemory()", "full_signature": "@Test public void testAligningUpToHigherMemory()", "class_method_signature": "ResourceDimensionsTest.testAligningUpToHigherMemory()", "testcase": true, "constructor": false, "invocations": ["build", "build", "withMemoryMB", "builder", "getMemoryMB", "isEqualTo", "assertThat", "alignUp"]}, "focal_class": {"identifier": "ResourceDimensions", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "add", "parameters": "(ResourceDimension... parts)", "modifiers": "public static", "return": "ResourceDimension", "signature": "ResourceDimension add(ResourceDimension... parts)", "full_signature": "public static ResourceDimension add(ResourceDimension... parts)", "class_method_signature": "ResourceDimensions.add(ResourceDimension... parts)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Collection<ResourceDimension> parts)", "modifiers": "public static", "return": "ResourceDimension", "signature": "ResourceDimension add(Collection<ResourceDimension> parts)", "full_signature": "public static ResourceDimension add(Collection<ResourceDimension> parts)", "class_method_signature": "ResourceDimensions.add(Collection<ResourceDimension> parts)", "testcase": false, "constructor": false}, {"identifier": "subtractPositive", "parameters": "(ResourceDimension left, ResourceDimension right)", "modifiers": "public static", "return": "ResourceDimension", "signature": "ResourceDimension subtractPositive(ResourceDimension left, ResourceDimension right)", "full_signature": "public static ResourceDimension subtractPositive(ResourceDimension left, ResourceDimension right)", "class_method_signature": "ResourceDimensions.subtractPositive(ResourceDimension left, ResourceDimension right)", "testcase": false, "constructor": false}, {"identifier": "multiply", "parameters": "(ResourceDimension base, double multiplier)", "modifiers": "public static", "return": "ResourceDimension", "signature": "ResourceDimension multiply(ResourceDimension base, double multiplier)", "full_signature": "public static ResourceDimension multiply(ResourceDimension base, double multiplier)", "class_method_signature": "ResourceDimensions.multiply(ResourceDimension base, double multiplier)", "testcase": false, "constructor": false}, {"identifier": "divide", "parameters": "(ResourceDimension left, ResourceDimension right)", "modifiers": "public static", "return": "Pair<Long, ResourceDimension>", "signature": "Pair<Long, ResourceDimension> divide(ResourceDimension left, ResourceDimension right)", "full_signature": "public static Pair<Long, ResourceDimension> divide(ResourceDimension left, ResourceDimension right)", "class_method_signature": "ResourceDimensions.divide(ResourceDimension left, ResourceDimension right)", "testcase": false, "constructor": false}, {"identifier": "divideAndRoundUp", "parameters": "(ResourceDimension left, ResourceDimension right)", "modifiers": "public static", "return": "long", "signature": "long divideAndRoundUp(ResourceDimension left, ResourceDimension right)", "full_signature": "public static long divideAndRoundUp(ResourceDimension left, ResourceDimension right)", "class_method_signature": "ResourceDimensions.divideAndRoundUp(ResourceDimension left, ResourceDimension right)", "testcase": false, "constructor": false}, {"identifier": "alignUp", "parameters": "(ResourceDimension source, ResourceDimension reference)", "modifiers": "public static", "return": "ResourceDimension", "signature": "ResourceDimension alignUp(ResourceDimension source, ResourceDimension reference)", "full_signature": "public static ResourceDimension alignUp(ResourceDimension source, ResourceDimension reference)", "class_method_signature": "ResourceDimensions.alignUp(ResourceDimension source, ResourceDimension reference)", "testcase": false, "constructor": false}, {"identifier": "isBigger", "parameters": "(ResourceDimension dimension, ResourceDimension subDimension)", "modifiers": "public static", "return": "boolean", "signature": "boolean isBigger(ResourceDimension dimension, ResourceDimension subDimension)", "full_signature": "public static boolean isBigger(ResourceDimension dimension, ResourceDimension subDimension)", "class_method_signature": "ResourceDimensions.isBigger(ResourceDimension dimension, ResourceDimension subDimension)", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "(ResourceDimension input, StringBuilder output)", "modifiers": "public static", "return": "StringBuilder", "signature": "StringBuilder format(ResourceDimension input, StringBuilder output)", "full_signature": "public static StringBuilder format(ResourceDimension input, StringBuilder output)", "class_method_signature": "ResourceDimensions.format(ResourceDimension input, StringBuilder output)", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "(ResourceDimension input)", "modifiers": "public static", "return": "String", "signature": "String format(ResourceDimension input)", "full_signature": "public static String format(ResourceDimension input)", "class_method_signature": "ResourceDimensions.format(ResourceDimension input)", "testcase": false, "constructor": false}, {"identifier": "fromServerInfo", "parameters": "(ServerInfo serverInfo)", "modifiers": "public static", "return": "ResourceDimension", "signature": "ResourceDimension fromServerInfo(ServerInfo serverInfo)", "full_signature": "public static ResourceDimension fromServerInfo(ServerInfo serverInfo)", "class_method_signature": "ResourceDimensions.fromServerInfo(ServerInfo serverInfo)", "testcase": false, "constructor": false}, {"identifier": "fromAwsInstanceType", "parameters": "(AwsInstanceType instanceType)", "modifiers": "public static", "return": "ResourceDimension", "signature": "ResourceDimension fromAwsInstanceType(AwsInstanceType instanceType)", "full_signature": "public static ResourceDimension fromAwsInstanceType(AwsInstanceType instanceType)", "class_method_signature": "ResourceDimensions.fromAwsInstanceType(AwsInstanceType instanceType)", "testcase": false, "constructor": false}, {"identifier": "toResAllocs", "parameters": "(String name, ResourceDimension resourceDimension)", "modifiers": "public static", "return": "ResAllocs", "signature": "ResAllocs toResAllocs(String name, ResourceDimension resourceDimension)", "full_signature": "public static ResAllocs toResAllocs(String name, ResourceDimension resourceDimension)", "class_method_signature": "ResourceDimensions.toResAllocs(String name, ResourceDimension resourceDimension)", "testcase": false, "constructor": false}, {"identifier": "fromResAllocs", "parameters": "(ResAllocs resAllocs)", "modifiers": "public static", "return": "ResourceDimension", "signature": "ResourceDimension fromResAllocs(ResAllocs resAllocs)", "full_signature": "public static ResourceDimension fromResAllocs(ResAllocs resAllocs)", "class_method_signature": "ResourceDimensions.fromResAllocs(ResAllocs resAllocs)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/model/ResourceDimensions.java"}, "focal_method": {"identifier": "alignUp", "parameters": "(ResourceDimension source, ResourceDimension reference)", "modifiers": "public static", "return": "ResourceDimension", "body": "public static ResourceDimension alignUp(ResourceDimension source, ResourceDimension reference) {\n        double cpuRatio = source.getCpu() / reference.getCpu();\n        double memoryRatio = source.getMemoryMB() / reference.getMemoryMB();\n\n        if (cpuRatio == memoryRatio) {\n            return source;\n        }\n        if (cpuRatio > memoryRatio) {\n            return ResourceDimension.newBuilder()\n                    .withCpus(source.getCpu())\n                    .withMemoryMB((long) (reference.getMemoryMB() * cpuRatio))\n                    .withDiskMB((long) (reference.getDiskMB() * cpuRatio))\n                    .withNetworkMbs((long) (reference.getNetworkMbs() * cpuRatio))\n                    .withGpu((long) (reference.getGpu() * cpuRatio))\n                    .withOpportunisticCpus((long) (reference.getOpportunisticCpu() * cpuRatio))\n                    .build();\n        }\n\n        // memoryRatio > cpuRatio\n        return ResourceDimension.newBuilder()\n                .withCpus(reference.getCpu() * memoryRatio)\n                .withMemoryMB(source.getMemoryMB())\n                .withDiskMB((long) (reference.getDiskMB() * memoryRatio))\n                .withNetworkMbs((long) (reference.getNetworkMbs() * memoryRatio))\n                .withGpu((long) (reference.getGpu() * memoryRatio))\n                .withOpportunisticCpus((long) (reference.getOpportunisticCpu() * memoryRatio))\n                .build();\n    }", "signature": "ResourceDimension alignUp(ResourceDimension source, ResourceDimension reference)", "full_signature": "public static ResourceDimension alignUp(ResourceDimension source, ResourceDimension reference)", "class_method_signature": "ResourceDimensions.alignUp(ResourceDimension source, ResourceDimension reference)", "testcase": false, "constructor": false, "invocations": ["getCpu", "getCpu", "getMemoryMB", "getMemoryMB", "build", "withOpportunisticCpus", "withGpu", "withNetworkMbs", "withDiskMB", "withMemoryMB", "withCpus", "newBuilder", "getCpu", "getMemoryMB", "getDiskMB", "getNetworkMbs", "getGpu", "getOpportunisticCpu", "build", "withOpportunisticCpus", "withGpu", "withNetworkMbs", "withDiskMB", "withMemoryMB", "withCpus", "newBuilder", "getCpu", "getMemoryMB", "getDiskMB", "getNetworkMbs", "getGpu", "getOpportunisticCpu"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}