{"test_class": {"identifier": "OAuthAuthorityUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "libs/java/auth_core/src/test/java/com/yahoo/athenz/auth/oauth/util/OAuthAuthorityUtilsTest.java"}, "test_case": {"identifier": "testCsvToSet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCsvToSet() {\n        Set<String> propValue = null;\n\n        // empty csv\n        propValue = OAuthAuthorityUtils.csvToSet(null, \",\");\n        assertNull(propValue);\n        propValue = OAuthAuthorityUtils.csvToSet(\"\", \",\");\n        assertNull(propValue);\n        // empty delimiter\n        propValue = OAuthAuthorityUtils.csvToSet(\"csv_1,csv_2\", null);\n        assertEquals(propValue, new HashSet<>(Arrays.asList(\"csv_1,csv_2\")));\n        propValue = OAuthAuthorityUtils.csvToSet(\"csv_1,csv_2\", \"\");\n        assertEquals(propValue, new HashSet<>(Arrays.asList(\"csv_1,csv_2\")));\n        // string delimiter\n        propValue = OAuthAuthorityUtils.csvToSet(\"csv_1,csv_2\", \",\");\n        assertEquals(propValue, new HashSet<>(Arrays.asList(\"csv_1\", \"csv_2\")));\n        propValue = OAuthAuthorityUtils.csvToSet(\"csv_1,csv_2\", \"_\");\n        assertEquals(propValue, new HashSet<>(Arrays.asList(\"csv\", \"1,csv\", \"2\")));\n        propValue = OAuthAuthorityUtils.csvToSet(\"csv_1,csv_2,\", \",\");\n        assertEquals(propValue, new HashSet<>(Arrays.asList(\"csv_1\", \"csv_2\")));\n        // regex delimiter\n        propValue = OAuthAuthorityUtils.csvToSet(\"csv_1,csv_2\", \"\\\\d\");\n        assertEquals(propValue, new HashSet<>(Arrays.asList(\"csv_\", \",csv_\")));\n        propValue = OAuthAuthorityUtils.csvToSet(\"csv_1,csv_2,csv_3\", \"\\\\d\");\n        assertEquals(propValue, new HashSet<>(Arrays.asList(\"csv_\", \",csv_\")));\n    }", "signature": "void testCsvToSet()", "full_signature": "@Test public void testCsvToSet()", "class_method_signature": "OAuthAuthorityUtilsTest.testCsvToSet()", "testcase": true, "constructor": false, "invocations": ["csvToSet", "assertNull", "csvToSet", "assertNull", "csvToSet", "assertEquals", "asList", "csvToSet", "assertEquals", "asList", "csvToSet", "assertEquals", "asList", "csvToSet", "assertEquals", "asList", "csvToSet", "assertEquals", "asList", "csvToSet", "assertEquals", "asList", "csvToSet", "assertEquals", "asList"]}, "focal_class": {"identifier": "OAuthAuthorityUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getProperty", "parameters": "(String key, String def)", "modifiers": "public static final", "return": "String", "signature": "String getProperty(String key, String def)", "full_signature": "public static final String getProperty(String key, String def)", "class_method_signature": "OAuthAuthorityUtils.getProperty(String key, String def)", "testcase": false, "constructor": false}, {"identifier": "csvToSet", "parameters": "(String csv, String delimiter)", "modifiers": "public static final", "return": "Set<String>", "signature": "Set<String> csvToSet(String csv, String delimiter)", "full_signature": "public static final Set<String> csvToSet(String csv, String delimiter)", "class_method_signature": "OAuthAuthorityUtils.csvToSet(String csv, String delimiter)", "testcase": false, "constructor": false}, {"identifier": "extractHeaderToken", "parameters": "(HttpServletRequest request)", "modifiers": "public static final", "return": "String", "signature": "String extractHeaderToken(HttpServletRequest request)", "full_signature": "public static final String extractHeaderToken(HttpServletRequest request)", "class_method_signature": "OAuthAuthorityUtils.extractHeaderToken(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "OAuthAuthorityUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " OAuthAuthorityUtils()", "full_signature": "private  OAuthAuthorityUtils()", "class_method_signature": "OAuthAuthorityUtils.OAuthAuthorityUtils()", "testcase": false, "constructor": true}], "file": "libs/java/auth_core/src/main/java/com/yahoo/athenz/auth/oauth/util/OAuthAuthorityUtils.java"}, "focal_method": {"identifier": "csvToSet", "parameters": "(String csv, String delimiter)", "modifiers": "public static final", "return": "Set<String>", "body": "public static final Set<String> csvToSet(String csv, String delimiter) {\n        if (csv == null || csv.isEmpty()) {\n            return null;\n        }\n        Set<String> set = new HashSet<String>();\n        if (delimiter == null || delimiter.isEmpty()) {\n            set.add(csv);\n        } else {\n            Collections.addAll(set, csv.split(delimiter));\n        }\n        return set;\n    }", "signature": "Set<String> csvToSet(String csv, String delimiter)", "full_signature": "public static final Set<String> csvToSet(String csv, String delimiter)", "class_method_signature": "OAuthAuthorityUtils.csvToSet(String csv, String delimiter)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "isEmpty", "add", "addAll", "split"]}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}