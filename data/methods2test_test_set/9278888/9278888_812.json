{"test_class": {"identifier": "SpanCustomizerShieldTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Tracing tracing = Tracing.newBuilder().build();", "modifier": "", "type": "Tracing", "declarator": "tracing = Tracing.newBuilder().build()", "var_name": "tracing"}], "file": "brave/src/test/java/brave/SpanCustomizerShieldTest.java"}, "test_case": {"identifier": "doesNotStackOverflowOnToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void doesNotStackOverflowOnToString() {\n    Span span = tracing.tracer().newTrace();\n    SpanCustomizerShield shield = new SpanCustomizerShield(span);\n    assertThat(shield.toString())\n      .isNotEmpty()\n      .isEqualTo(\"SpanCustomizer(RealSpan(\" + span.context().traceIdString() + \"/\" + span.context()\n        .spanIdString() + \"))\");\n  }", "signature": "void doesNotStackOverflowOnToString()", "full_signature": "@Test public void doesNotStackOverflowOnToString()", "class_method_signature": "SpanCustomizerShieldTest.doesNotStackOverflowOnToString()", "testcase": true, "constructor": false, "invocations": ["newTrace", "tracer", "isEqualTo", "isNotEmpty", "assertThat", "toString", "traceIdString", "context", "spanIdString", "context"]}, "focal_class": {"identifier": "SpanCustomizerShield", "superclass": "", "interfaces": "implements SpanCustomizer", "fields": [{"original_string": "final Span delegate;", "modifier": "final", "type": "Span", "declarator": "delegate", "var_name": "delegate"}], "methods": [{"identifier": "SpanCustomizerShield", "parameters": "(Span delegate)", "modifiers": "", "return": "", "signature": " SpanCustomizerShield(Span delegate)", "full_signature": "  SpanCustomizerShield(Span delegate)", "class_method_signature": "SpanCustomizerShield.SpanCustomizerShield(Span delegate)", "testcase": false, "constructor": true}, {"identifier": "name", "parameters": "(String name)", "modifiers": "@Override public", "return": "SpanCustomizer", "signature": "SpanCustomizer name(String name)", "full_signature": "@Override public SpanCustomizer name(String name)", "class_method_signature": "SpanCustomizerShield.name(String name)", "testcase": false, "constructor": false}, {"identifier": "annotate", "parameters": "(String value)", "modifiers": "@Override public", "return": "SpanCustomizer", "signature": "SpanCustomizer annotate(String value)", "full_signature": "@Override public SpanCustomizer annotate(String value)", "class_method_signature": "SpanCustomizerShield.annotate(String value)", "testcase": false, "constructor": false}, {"identifier": "tag", "parameters": "(String key, String value)", "modifiers": "@Override public", "return": "SpanCustomizer", "signature": "SpanCustomizer tag(String key, String value)", "full_signature": "@Override public SpanCustomizer tag(String key, String value)", "class_method_signature": "SpanCustomizerShield.tag(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SpanCustomizerShield.toString()", "testcase": false, "constructor": false}], "file": "brave/src/main/java/brave/SpanCustomizerShield.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override public String toString() {\n    return \"SpanCustomizer(\" + delegate + \")\";\n  }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SpanCustomizerShield.toString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}