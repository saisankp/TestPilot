{"test_class": {"identifier": "TestValidationManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER =\n      LoggerFactory.getLogger(TestValidationManager.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER =\n      LoggerFactory.getLogger(TestValidationManager.class)", "var_name": "LOGGER"}, {"original_string": "private static KafkaBrokerTopicObserver kafkaBrokerTopicObserver;", "modifier": "private static", "type": "KafkaBrokerTopicObserver", "declarator": "kafkaBrokerTopicObserver", "var_name": "kafkaBrokerTopicObserver"}, {"original_string": "private KafkaServerStartable kafkaStarter;", "modifier": "private", "type": "KafkaServerStartable", "declarator": "kafkaStarter", "var_name": "kafkaStarter"}, {"original_string": "private HelixMirrorMakerManager helixMirrorMakerManager;", "modifier": "private", "type": "HelixMirrorMakerManager", "declarator": "helixMirrorMakerManager", "var_name": "helixMirrorMakerManager"}, {"original_string": "private ValidationManager validationManager;", "modifier": "private", "type": "ValidationManager", "declarator": "validationManager", "var_name": "validationManager"}, {"original_string": "private final String helixClusterName = \"TestValidationManager\";", "modifier": "private final", "type": "String", "declarator": "helixClusterName = \"TestValidationManager\"", "var_name": "helixClusterName"}, {"original_string": "private final String deploymentHelixClusterName = \"TestValidationManagerDeployment\";", "modifier": "private final", "type": "String", "declarator": "deploymentHelixClusterName = \"TestValidationManagerDeployment\"", "var_name": "deploymentHelixClusterName"}, {"original_string": "public static List<FakeInstance> fakeInstances = new ArrayList<FakeInstance>();", "modifier": "public static", "type": "List<FakeInstance>", "declarator": "fakeInstances = new ArrayList<FakeInstance>()", "var_name": "fakeInstances"}], "file": "uReplicator-Controller/src/test/java/com/uber/stream/kafka/mirrormaker/controller/validation/TestValidationManager.java"}, "test_case": {"identifier": "testValidation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testValidation() {\n    helixMirrorMakerManager.addTopicToMirrorMaker(\"testTopic0\", 1);\n    // {\"ExternalView\":{\"Server_localhost_0\":1},\n    // \"IdealState\":{\"Server_localhost_0\":1},\n    // \"numErrorTopicPartitions\":0,\n    // \"numErrorTopics\":0,\n    // \"numOfflineTopicPartitions\":0,\n    // \"numOnlineTopicPartitions\":1,\n    // \"numTopicPartitions\":1,\n    // \"numTopics\":1}\n    try {\n      Thread.sleep(3000);\n    } catch (Exception e) {\n    }\n    JSONObject validationResultJson =\n        JSONObject.parseObject(validationManager.validateExternalView());\n    Assert.assertEquals(validationResultJson.getIntValue(\"numErrorTopicPartitions\"), 0);\n    Assert.assertEquals(validationResultJson.getIntValue(\"numErrorTopics\"), 0);\n    Assert.assertEquals(validationResultJson.getIntValue(\"numOfflineTopicPartitions\"), 0);\n    Assert.assertEquals(validationResultJson.getIntValue(\"numOnlineTopicPartitions\"), 1);\n    Assert.assertEquals(validationResultJson.getIntValue(\"numTopicPartitions\"), 1);\n    Assert.assertEquals(validationResultJson.getIntValue(\"numTopics\"), 1);\n    helixMirrorMakerManager.addTopicToMirrorMaker(\"testTopic1\", 2);\n    try {\n      Thread.sleep(3000);\n    } catch (Exception e) {\n    }\n    validationResultJson = JSONObject.parseObject(validationManager.validateExternalView());\n    Assert.assertEquals(validationResultJson.getIntValue(\"numErrorTopicPartitions\"), 0);\n    Assert.assertEquals(validationResultJson.getIntValue(\"numErrorTopics\"), 0);\n    Assert.assertEquals(validationResultJson.getIntValue(\"numOfflineTopicPartitions\"), 0);\n    Assert.assertEquals(validationResultJson.getIntValue(\"numOnlineTopicPartitions\"), 3);\n    Assert.assertEquals(validationResultJson.getIntValue(\"numTopicPartitions\"), 3);\n    Assert.assertEquals(validationResultJson.getIntValue(\"numTopics\"), 2);\n  }", "signature": "void testValidation()", "full_signature": "@Test public void testValidation()", "class_method_signature": "TestValidationManager.testValidation()", "testcase": true, "constructor": false, "invocations": ["addTopicToMirrorMaker", "sleep", "parseObject", "validateExternalView", "assertEquals", "getIntValue", "assertEquals", "getIntValue", "assertEquals", "getIntValue", "assertEquals", "getIntValue", "assertEquals", "getIntValue", "assertEquals", "getIntValue", "addTopicToMirrorMaker", "sleep", "parseObject", "validateExternalView", "assertEquals", "getIntValue", "assertEquals", "getIntValue", "assertEquals", "getIntValue", "assertEquals", "getIntValue", "assertEquals", "getIntValue", "assertEquals", "getIntValue"]}, "focal_class": {"identifier": "ValidationManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER =\n      LoggerFactory.getLogger(ValidationManager.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER =\n      LoggerFactory.getLogger(ValidationManager.class)", "var_name": "LOGGER"}, {"original_string": "private static final String IDEALSTATE_PER_WORKER_METRICS_FORMAT =\n      \"idealStates.topicPartitions.%s.totalNumber\";", "modifier": "private static final", "type": "String", "declarator": "IDEALSTATE_PER_WORKER_METRICS_FORMAT =\n      \"idealStates.topicPartitions.%s.totalNumber\"", "var_name": "IDEALSTATE_PER_WORKER_METRICS_FORMAT"}, {"original_string": "private static final String EXTERNALVIEW_PER_WORKER_METRICS_FORMAT =\n      \"externalView.topicPartitions.%s.totalNumber\";", "modifier": "private static final", "type": "String", "declarator": "EXTERNALVIEW_PER_WORKER_METRICS_FORMAT =\n      \"externalView.topicPartitions.%s.totalNumber\"", "var_name": "EXTERNALVIEW_PER_WORKER_METRICS_FORMAT"}, {"original_string": "private static final int STOP_TIMEOUT_SEC = 5;", "modifier": "private static final", "type": "int", "declarator": "STOP_TIMEOUT_SEC = 5", "var_name": "STOP_TIMEOUT_SEC"}, {"original_string": "private final HelixMirrorMakerManager _helixMirrorMakerManager;", "modifier": "private final", "type": "HelixMirrorMakerManager", "declarator": "_helixMirrorMakerManager", "var_name": "_helixMirrorMakerManager"}, {"original_string": "private final ScheduledExecutorService _executorService =\n      Executors.newSingleThreadScheduledExecutor();", "modifier": "private final", "type": "ScheduledExecutorService", "declarator": "_executorService =\n      Executors.newSingleThreadScheduledExecutor()", "var_name": "_executorService"}, {"original_string": "private int _timeValue = 60;", "modifier": "private", "type": "int", "declarator": "_timeValue = 60", "var_name": "_timeValue"}, {"original_string": "private TimeUnit _timeUnit = TimeUnit.SECONDS;", "modifier": "private", "type": "TimeUnit", "declarator": "_timeUnit = TimeUnit.SECONDS", "var_name": "_timeUnit"}, {"original_string": "private final Counter _isLeaderCounter = new Counter();", "modifier": "private final", "type": "Counter", "declarator": "_isLeaderCounter = new Counter()", "var_name": "_isLeaderCounter"}, {"original_string": "private final Counter _numServingTopics = new Counter();", "modifier": "private final", "type": "Counter", "declarator": "_numServingTopics = new Counter()", "var_name": "_numServingTopics"}, {"original_string": "private final Counter _numTopicPartitions = new Counter();", "modifier": "private final", "type": "Counter", "declarator": "_numTopicPartitions = new Counter()", "var_name": "_numTopicPartitions"}, {"original_string": "private final Counter _numOnlineTopicPartitions = new Counter();", "modifier": "private final", "type": "Counter", "declarator": "_numOnlineTopicPartitions = new Counter()", "var_name": "_numOnlineTopicPartitions"}, {"original_string": "private final Counter _numOfflineTopicPartitions = new Counter();", "modifier": "private final", "type": "Counter", "declarator": "_numOfflineTopicPartitions = new Counter()", "var_name": "_numOfflineTopicPartitions"}, {"original_string": "private final Counter _numErrorTopicPartitions = new Counter();", "modifier": "private final", "type": "Counter", "declarator": "_numErrorTopicPartitions = new Counter()", "var_name": "_numErrorTopicPartitions"}, {"original_string": "private final Counter _numErrorTopics = new Counter();", "modifier": "private final", "type": "Counter", "declarator": "_numErrorTopics = new Counter()", "var_name": "_numErrorTopics"}, {"original_string": "private final Map<String, Counter> _idealStatePerWorkerTopicPartitionCounter =\n      new HashMap<String, Counter>();", "modifier": "private final", "type": "Map<String, Counter>", "declarator": "_idealStatePerWorkerTopicPartitionCounter =\n      new HashMap<String, Counter>()", "var_name": "_idealStatePerWorkerTopicPartitionCounter"}, {"original_string": "private final Map<String, Counter> _externalViewPerWorkerTopicPartitionCounter =\n      new HashMap<String, Counter>();", "modifier": "private final", "type": "Map<String, Counter>", "declarator": "_externalViewPerWorkerTopicPartitionCounter =\n      new HashMap<String, Counter>()", "var_name": "_externalViewPerWorkerTopicPartitionCounter"}], "methods": [{"identifier": "ValidationManager", "parameters": "(HelixMirrorMakerManager helixMirrorMakerManager)", "modifiers": "public", "return": "", "signature": " ValidationManager(HelixMirrorMakerManager helixMirrorMakerManager)", "full_signature": "public  ValidationManager(HelixMirrorMakerManager helixMirrorMakerManager)", "class_method_signature": "ValidationManager.ValidationManager(HelixMirrorMakerManager helixMirrorMakerManager)", "testcase": false, "constructor": true}, {"identifier": "start", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void start()", "full_signature": "public void start()", "class_method_signature": "ValidationManager.start()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "ValidationManager.stop()", "testcase": false, "constructor": false}, {"identifier": "registerMetrics", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void registerMetrics()", "full_signature": "private void registerMetrics()", "class_method_signature": "ValidationManager.registerMetrics()", "testcase": false, "constructor": false}, {"identifier": "unregisterMetrics", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void unregisterMetrics()", "full_signature": "private void unregisterMetrics()", "class_method_signature": "ValidationManager.unregisterMetrics()", "testcase": false, "constructor": false}, {"identifier": "validateExternalView", "parameters": "()", "modifiers": "public synchronized", "return": "String", "signature": "String validateExternalView()", "full_signature": "public synchronized String validateExternalView()", "class_method_signature": "ValidationManager.validateExternalView()", "testcase": false, "constructor": false}, {"identifier": "constructValidationResultJson", "parameters": "(\n      int numOnlineTopicPartitions,\n      int numOfflineTopicPartitions,\n      int numErrorTopicPartitions, int numTopicPartitions, int numServingTopics, int numErrorTopics,\n      JSONObject perWorkerISCounterJson, JSONObject perWorkerEVCounterJson)", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject constructValidationResultJson(\n      int numOnlineTopicPartitions,\n      int numOfflineTopicPartitions,\n      int numErrorTopicPartitions, int numTopicPartitions, int numServingTopics, int numErrorTopics,\n      JSONObject perWorkerISCounterJson, JSONObject perWorkerEVCounterJson)", "full_signature": "private JSONObject constructValidationResultJson(\n      int numOnlineTopicPartitions,\n      int numOfflineTopicPartitions,\n      int numErrorTopicPartitions, int numTopicPartitions, int numServingTopics, int numErrorTopics,\n      JSONObject perWorkerISCounterJson, JSONObject perWorkerEVCounterJson)", "class_method_signature": "ValidationManager.constructValidationResultJson(\n      int numOnlineTopicPartitions,\n      int numOfflineTopicPartitions,\n      int numErrorTopicPartitions, int numTopicPartitions, int numServingTopics, int numErrorTopics,\n      JSONObject perWorkerISCounterJson, JSONObject perWorkerEVCounterJson)", "testcase": false, "constructor": false}, {"identifier": "constructPerWorkerISCounterJson", "parameters": "(\n      Map<String, Integer> topicPartitionMapForIdealState)", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject constructPerWorkerISCounterJson(\n      Map<String, Integer> topicPartitionMapForIdealState)", "full_signature": "private JSONObject constructPerWorkerISCounterJson(\n      Map<String, Integer> topicPartitionMapForIdealState)", "class_method_signature": "ValidationManager.constructPerWorkerISCounterJson(\n      Map<String, Integer> topicPartitionMapForIdealState)", "testcase": false, "constructor": false}, {"identifier": "constructPerWorkerEVCounterJson", "parameters": "(\n      Map<String, Integer> topicPartitionMapForExternalView)", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject constructPerWorkerEVCounterJson(\n      Map<String, Integer> topicPartitionMapForExternalView)", "full_signature": "private JSONObject constructPerWorkerEVCounterJson(\n      Map<String, Integer> topicPartitionMapForExternalView)", "class_method_signature": "ValidationManager.constructPerWorkerEVCounterJson(\n      Map<String, Integer> topicPartitionMapForExternalView)", "testcase": false, "constructor": false}, {"identifier": "updatePerWorkerISMetrics", "parameters": "(\n      Map<String, Integer> topicPartitionMapForIdealState)", "modifiers": "private synchronized", "return": "void", "signature": "void updatePerWorkerISMetrics(\n      Map<String, Integer> topicPartitionMapForIdealState)", "full_signature": "private synchronized void updatePerWorkerISMetrics(\n      Map<String, Integer> topicPartitionMapForIdealState)", "class_method_signature": "ValidationManager.updatePerWorkerISMetrics(\n      Map<String, Integer> topicPartitionMapForIdealState)", "testcase": false, "constructor": false}, {"identifier": "updatePerWorkerEVMetrics", "parameters": "(\n      Map<String, Integer> topicPartitionMapForExternalView)", "modifiers": "private synchronized", "return": "void", "signature": "void updatePerWorkerEVMetrics(\n      Map<String, Integer> topicPartitionMapForExternalView)", "full_signature": "private synchronized void updatePerWorkerEVMetrics(\n      Map<String, Integer> topicPartitionMapForExternalView)", "class_method_signature": "ValidationManager.updatePerWorkerEVMetrics(\n      Map<String, Integer> topicPartitionMapForExternalView)", "testcase": false, "constructor": false}, {"identifier": "updateMetrics", "parameters": "(\n      int numOnlineTopicPartitions,\n      int numOfflineTopicPartitions,\n      int numErrorTopicPartitions, int numTopicPartitions, int numServingTopics,\n      int numErrorTopics)", "modifiers": "private synchronized", "return": "void", "signature": "void updateMetrics(\n      int numOnlineTopicPartitions,\n      int numOfflineTopicPartitions,\n      int numErrorTopicPartitions, int numTopicPartitions, int numServingTopics,\n      int numErrorTopics)", "full_signature": "private synchronized void updateMetrics(\n      int numOnlineTopicPartitions,\n      int numOfflineTopicPartitions,\n      int numErrorTopicPartitions, int numTopicPartitions, int numServingTopics,\n      int numErrorTopics)", "class_method_signature": "ValidationManager.updateMetrics(\n      int numOnlineTopicPartitions,\n      int numOfflineTopicPartitions,\n      int numErrorTopicPartitions, int numTopicPartitions, int numServingTopics,\n      int numErrorTopics)", "testcase": false, "constructor": false}, {"identifier": "updateIdealstateInfo", "parameters": "(\n      Map<String, Integer> topicPartitionMapForIdealState,\n      IdealState idealStateForTopic)", "modifiers": "private", "return": "void", "signature": "void updateIdealstateInfo(\n      Map<String, Integer> topicPartitionMapForIdealState,\n      IdealState idealStateForTopic)", "full_signature": "private void updateIdealstateInfo(\n      Map<String, Integer> topicPartitionMapForIdealState,\n      IdealState idealStateForTopic)", "class_method_signature": "ValidationManager.updateIdealstateInfo(\n      Map<String, Integer> topicPartitionMapForIdealState,\n      IdealState idealStateForTopic)", "testcase": false, "constructor": false}, {"identifier": "getIdealStatePerWorkMetricName", "parameters": "(String worker)", "modifiers": "private static", "return": "String", "signature": "String getIdealStatePerWorkMetricName(String worker)", "full_signature": "private static String getIdealStatePerWorkMetricName(String worker)", "class_method_signature": "ValidationManager.getIdealStatePerWorkMetricName(String worker)", "testcase": false, "constructor": false}, {"identifier": "getExternalViewPerWorkMetricName", "parameters": "(String worker)", "modifiers": "private static", "return": "String", "signature": "String getExternalViewPerWorkMetricName(String worker)", "full_signature": "private static String getExternalViewPerWorkMetricName(String worker)", "class_method_signature": "ValidationManager.getExternalViewPerWorkMetricName(String worker)", "testcase": false, "constructor": false}], "file": "uReplicator-Controller/src/main/java/com/uber/stream/kafka/mirrormaker/controller/validation/ValidationManager.java"}, "focal_method": {"identifier": "validateExternalView", "parameters": "()", "modifiers": "public synchronized", "return": "String", "body": "public synchronized String validateExternalView() {\n    try {\n      Map<String, Integer> topicPartitionMapForIdealState =\n          new HashMap<String, Integer>();\n      Map<String, Integer> topicPartitionMapForExternalView =\n          new HashMap<String, Integer>();\n      int numOnlineTopicPartitions = 0;\n      int numOfflineTopicPartitions = 0;\n      int numErrorTopicPartitions = 0;\n      int numTopicPartitions = 0;\n      int numServingTopics = 0;\n      int numErrorTopics = 0;\n      for (String topicName : _helixMirrorMakerManager.getTopicLists()) {\n        numServingTopics++;\n        IdealState idealStateForTopic =\n            _helixMirrorMakerManager.getIdealStateForTopic(topicName);\n        ExternalView externalViewForTopic =\n            _helixMirrorMakerManager.getExternalViewForTopic(topicName);\n        numTopicPartitions += idealStateForTopic.getNumPartitions();\n        if (idealStateForTopic.getNumPartitions() != externalViewForTopic.getPartitionSet()\n            .size()) {\n          numErrorTopics++;\n          LOGGER.error(\n              \"For topic:{}, number of partitions for IdealState: {} doesn't match ExternalView: {}\",\n              topicName, idealStateForTopic, externalViewForTopic);\n        }\n\n        // IdealState Counting\n        updateIdealstateInfo(topicPartitionMapForIdealState, idealStateForTopic);\n        // ExternalView Counting\n        for (String partition : externalViewForTopic.getPartitionSet()) {\n          Map<String, String> stateMap = externalViewForTopic.getStateMap(partition);\n          for (String instance : stateMap.keySet()) {\n            String state = stateMap.get(instance);\n            if (!topicPartitionMapForExternalView.containsKey(instance)) {\n              topicPartitionMapForExternalView.put(instance, 1);\n            } else {\n              topicPartitionMapForExternalView.put(instance,\n                  topicPartitionMapForExternalView.get(instance) + 1);\n            }\n            if (\"ONLINE\".equalsIgnoreCase(state)) {\n              numOnlineTopicPartitions++;\n            } else if (\"OFFLINE\".equalsIgnoreCase(state)) {\n              numOfflineTopicPartitions++;\n            } else if (\"ERROR\".equalsIgnoreCase(state)) {\n              numErrorTopicPartitions++;\n            }\n          }\n        }\n      }\n\n      if (_helixMirrorMakerManager.isLeader()) {\n        updateMetrics(numOnlineTopicPartitions, numOfflineTopicPartitions, numErrorTopicPartitions,\n            numTopicPartitions, numServingTopics, numErrorTopics);\n        updatePerWorkerISMetrics(topicPartitionMapForIdealState);\n        updatePerWorkerEVMetrics(topicPartitionMapForExternalView);\n      }\n      JSONObject perWorkerISCounterJson =\n          constructPerWorkerISCounterJson(topicPartitionMapForIdealState);\n      JSONObject perWorkerEVCounterJson =\n          constructPerWorkerEVCounterJson(topicPartitionMapForExternalView);\n      JSONObject validationResultJson = constructValidationResultJson(numOnlineTopicPartitions,\n          numOfflineTopicPartitions, numErrorTopicPartitions, numTopicPartitions,\n          numServingTopics, numErrorTopics, perWorkerISCounterJson, perWorkerEVCounterJson);\n      return validationResultJson.toJSONString();\n    } catch (Exception e) {\n      JSONObject jsonObject = new JSONObject();\n      jsonObject.put(\"excpetion\", e);\n      return jsonObject.toJSONString();\n    }\n  }", "signature": "String validateExternalView()", "full_signature": "public synchronized String validateExternalView()", "class_method_signature": "ValidationManager.validateExternalView()", "testcase": false, "constructor": false, "invocations": ["getTopicLists", "getIdealStateForTopic", "getExternalViewForTopic", "getNumPartitions", "getNumPartitions", "size", "getPartitionSet", "error", "updateIdealstateInfo", "getPartitionSet", "getStateMap", "keySet", "get", "containsKey", "put", "put", "get", "equalsIgnoreCase", "equalsIgnoreCase", "equalsIgnoreCase", "isLeader", "updateMetrics", "updatePerWorkerISMetrics", "updatePerWorkerEVMetrics", "constructPerWorkerISCounterJson", "constructPerWorkerEVCounterJson", "constructValidationResultJson", "toJSONString", "put", "toJSONString"]}, "repository": {"repo_id": 60201162, "url": "https://github.com/uber/uReplicator", "language": "Java", "is_fork": false, "fork_count": 148, "stargazer_count": 652, "size": 2223, "license": "licensed"}}