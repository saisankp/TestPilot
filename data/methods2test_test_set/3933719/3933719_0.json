{"test_class": {"identifier": "TestLazyListImpl", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LazyListImpl list;", "modifier": "private", "type": "LazyListImpl", "declarator": "list", "var_name": "list"}], "file": "exo.core.component.organization.api/src/test/java/org/exoplatform/services/organization/impl/mock/TestLazyListImpl.java"}, "test_case": {"identifier": "testLoad", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testLoad() throws Exception\n   {\n      try\n      {\n         list.load(-1, 5);\n         fail(\"An IllegalArgumentException is expected\");\n      }\n      catch (IllegalArgumentException e)\n      {\n         // ok\n      }\n      try\n      {\n         list.load(0, -1);\n         fail(\"An IllegalArgumentException is expected\");\n      }\n      catch (IllegalArgumentException e)\n      {\n         // ok\n      }\n      try\n      {\n         list.load(0, 6);\n         fail(\"An IllegalArgumentException is expected\");\n      }\n      catch (IllegalArgumentException e)\n      {\n         // ok\n      }\n      try\n      {\n         list.load(1, 5);\n         fail(\"An IllegalArgumentException is expected\");\n      }\n      catch (IllegalArgumentException e)\n      {\n         // ok\n      }\n      // Length == size\n      User[] users = list.load(0, 5);\n      assertNotNull(users);\n      assertEquals(5, users.length);\n      int startIndex = 1;\n      for (User user : users)\n      {\n         assertNotNull(user);\n         assertEquals(\"foo\" + startIndex++, user.getUserName());\n      }\n      // Length < size\n      users = list.load(0, 3);\n      assertNotNull(users);\n      assertEquals(3, users.length);\n      startIndex = 1;\n      for (User user : users)\n      {\n         assertNotNull(user);\n         assertEquals(\"foo\" + startIndex++, user.getUserName());\n      }\n      // Length < size and index > 0\n      users = list.load(2, 3);\n      assertNotNull(users);\n      assertEquals(3, users.length);\n      startIndex = 3;\n      for (User user : users)\n      {\n         assertNotNull(user);\n         assertEquals(\"foo\" + startIndex++, user.getUserName());\n      }\n   }", "signature": "void testLoad()", "full_signature": "@Test public void testLoad()", "class_method_signature": "TestLazyListImpl.testLoad()", "testcase": true, "constructor": false, "invocations": ["load", "fail", "load", "fail", "load", "fail", "load", "fail", "load", "assertNotNull", "assertEquals", "assertNotNull", "assertEquals", "getUserName", "load", "assertNotNull", "assertEquals", "assertNotNull", "assertEquals", "getUserName", "load", "assertNotNull", "assertEquals", "assertNotNull", "assertEquals", "getUserName"]}, "focal_class": {"identifier": "LazyListImpl", "superclass": "extends ArrayList<User>", "interfaces": "implements ListAccess<User>", "fields": [{"original_string": "private static final long serialVersionUID = -7362190564402962310L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -7362190564402962310L", "var_name": "serialVersionUID"}], "methods": [{"identifier": "load", "parameters": "(int index, int length)", "modifiers": "public", "return": "User[]", "signature": "User[] load(int index, int length)", "full_signature": "public User[] load(int index, int length)", "class_method_signature": "LazyListImpl.load(int index, int length)", "testcase": false, "constructor": false}, {"identifier": "getSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSize()", "full_signature": "public int getSize()", "class_method_signature": "LazyListImpl.getSize()", "testcase": false, "constructor": false}], "file": "exo.core.component.organization.api/src/main/java/org/exoplatform/services/organization/impl/mock/LazyListImpl.java"}, "focal_method": {"identifier": "load", "parameters": "(int index, int length)", "modifiers": "public", "return": "User[]", "body": "public User[] load(int index, int length) throws Exception, IllegalArgumentException\n   {\n      if (index < 0 || length < 0)\n         throw new IllegalArgumentException(\"The index value and the length value cannot be negative\");\n      if (index + length > size())\n         throw new IllegalArgumentException(\"The sum of the index and the length cannot be greater than the list size\");\n      User[] users = new User[length];\n      for (int i = 0; i < length; i++)\n      {\n         users[i] = get(index + i);\n      }\n      return users;\n   }", "signature": "User[] load(int index, int length)", "full_signature": "public User[] load(int index, int length)", "class_method_signature": "LazyListImpl.load(int index, int length)", "testcase": false, "constructor": false, "invocations": ["size", "get"]}, "repository": {"repo_id": 3933719, "url": "https://github.com/exoplatform/core", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 5, "size": 10000, "license": "licensed"}}