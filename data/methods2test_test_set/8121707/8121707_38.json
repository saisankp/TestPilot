{"test_class": {"identifier": "FullyQualifiedTableTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/mybatis-generator-core/src/test/java/org/mybatis/generator/api/FullyQualifiedTableTest.java"}, "test_case": {"identifier": "testRenamingRuleNoUnderscore2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRenamingRuleNoUnderscore2() {\n        DomainObjectRenamingRule renamingRule = new DomainObjectRenamingRule();\n        renamingRule.setSearchString(\"^Sys\");\n        renamingRule.setReplaceString(\"\");\n        FullyQualifiedTable fqt = new FullyQualifiedTable(null, \"myschema\", \"sysmy_table\", null, null, false, null, null, null, false, renamingRule, null);\n\n        assertThat(fqt.getDomainObjectName()).isEqualTo(\"MyTable\");\n    }", "signature": "void testRenamingRuleNoUnderscore2()", "full_signature": "@Test public void testRenamingRuleNoUnderscore2()", "class_method_signature": "FullyQualifiedTableTest.testRenamingRuleNoUnderscore2()", "testcase": true, "constructor": false, "invocations": ["setSearchString", "setReplaceString", "isEqualTo", "assertThat", "getDomainObjectName"]}, "focal_class": {"identifier": "FullyQualifiedTable", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String introspectedCatalog;", "modifier": "private", "type": "String", "declarator": "introspectedCatalog", "var_name": "introspectedCatalog"}, {"original_string": "private String introspectedSchema;", "modifier": "private", "type": "String", "declarator": "introspectedSchema", "var_name": "introspectedSchema"}, {"original_string": "private String introspectedTableName;", "modifier": "private", "type": "String", "declarator": "introspectedTableName", "var_name": "introspectedTableName"}, {"original_string": "private String runtimeCatalog;", "modifier": "private", "type": "String", "declarator": "runtimeCatalog", "var_name": "runtimeCatalog"}, {"original_string": "private String runtimeSchema;", "modifier": "private", "type": "String", "declarator": "runtimeSchema", "var_name": "runtimeSchema"}, {"original_string": "private String runtimeTableName;", "modifier": "private", "type": "String", "declarator": "runtimeTableName", "var_name": "runtimeTableName"}, {"original_string": "private String domainObjectName;", "modifier": "private", "type": "String", "declarator": "domainObjectName", "var_name": "domainObjectName"}, {"original_string": "private String domainObjectSubPackage;", "modifier": "private", "type": "String", "declarator": "domainObjectSubPackage", "var_name": "domainObjectSubPackage"}, {"original_string": "private String alias;", "modifier": "private", "type": "String", "declarator": "alias", "var_name": "alias"}, {"original_string": "private boolean ignoreQualifiersAtRuntime;", "modifier": "private", "type": "boolean", "declarator": "ignoreQualifiersAtRuntime", "var_name": "ignoreQualifiersAtRuntime"}, {"original_string": "private String beginningDelimiter;", "modifier": "private", "type": "String", "declarator": "beginningDelimiter", "var_name": "beginningDelimiter"}, {"original_string": "private String endingDelimiter;", "modifier": "private", "type": "String", "declarator": "endingDelimiter", "var_name": "endingDelimiter"}, {"original_string": "private DomainObjectRenamingRule domainObjectRenamingRule;", "modifier": "private", "type": "DomainObjectRenamingRule", "declarator": "domainObjectRenamingRule", "var_name": "domainObjectRenamingRule"}], "methods": [{"identifier": "FullyQualifiedTable", "parameters": "(String introspectedCatalog,\n            String introspectedSchema, String introspectedTableName,\n            String domainObjectName, String alias,\n            boolean ignoreQualifiersAtRuntime, String runtimeCatalog,\n            String runtimeSchema, String runtimeTableName,\n            boolean delimitIdentifiers, DomainObjectRenamingRule domainObjectRenamingRule,\n            Context context)", "modifiers": "public", "return": "", "signature": " FullyQualifiedTable(String introspectedCatalog,\n            String introspectedSchema, String introspectedTableName,\n            String domainObjectName, String alias,\n            boolean ignoreQualifiersAtRuntime, String runtimeCatalog,\n            String runtimeSchema, String runtimeTableName,\n            boolean delimitIdentifiers, DomainObjectRenamingRule domainObjectRenamingRule,\n            Context context)", "full_signature": "public  FullyQualifiedTable(String introspectedCatalog,\n            String introspectedSchema, String introspectedTableName,\n            String domainObjectName, String alias,\n            boolean ignoreQualifiersAtRuntime, String runtimeCatalog,\n            String runtimeSchema, String runtimeTableName,\n            boolean delimitIdentifiers, DomainObjectRenamingRule domainObjectRenamingRule,\n            Context context)", "class_method_signature": "FullyQualifiedTable.FullyQualifiedTable(String introspectedCatalog,\n            String introspectedSchema, String introspectedTableName,\n            String domainObjectName, String alias,\n            boolean ignoreQualifiersAtRuntime, String runtimeCatalog,\n            String runtimeSchema, String runtimeTableName,\n            boolean delimitIdentifiers, DomainObjectRenamingRule domainObjectRenamingRule,\n            Context context)", "testcase": false, "constructor": true}, {"identifier": "getIntrospectedCatalog", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIntrospectedCatalog()", "full_signature": "public String getIntrospectedCatalog()", "class_method_signature": "FullyQualifiedTable.getIntrospectedCatalog()", "testcase": false, "constructor": false}, {"identifier": "getIntrospectedSchema", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIntrospectedSchema()", "full_signature": "public String getIntrospectedSchema()", "class_method_signature": "FullyQualifiedTable.getIntrospectedSchema()", "testcase": false, "constructor": false}, {"identifier": "getIntrospectedTableName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getIntrospectedTableName()", "full_signature": "public String getIntrospectedTableName()", "class_method_signature": "FullyQualifiedTable.getIntrospectedTableName()", "testcase": false, "constructor": false}, {"identifier": "getFullyQualifiedTableNameAtRuntime", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getFullyQualifiedTableNameAtRuntime()", "full_signature": "public String getFullyQualifiedTableNameAtRuntime()", "class_method_signature": "FullyQualifiedTable.getFullyQualifiedTableNameAtRuntime()", "testcase": false, "constructor": false}, {"identifier": "getAliasedFullyQualifiedTableNameAtRuntime", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAliasedFullyQualifiedTableNameAtRuntime()", "full_signature": "public String getAliasedFullyQualifiedTableNameAtRuntime()", "class_method_signature": "FullyQualifiedTable.getAliasedFullyQualifiedTableNameAtRuntime()", "testcase": false, "constructor": false}, {"identifier": "getDomainObjectName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDomainObjectName()", "full_signature": "public String getDomainObjectName()", "class_method_signature": "FullyQualifiedTable.getDomainObjectName()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "FullyQualifiedTable.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "FullyQualifiedTable.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "FullyQualifiedTable.toString()", "testcase": false, "constructor": false}, {"identifier": "getAlias", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getAlias()", "full_signature": "public String getAlias()", "class_method_signature": "FullyQualifiedTable.getAlias()", "testcase": false, "constructor": false}, {"identifier": "getSubPackageForClientOrSqlMap", "parameters": "(boolean isSubPackagesEnabled)", "modifiers": "public", "return": "String", "signature": "String getSubPackageForClientOrSqlMap(boolean isSubPackagesEnabled)", "full_signature": "public String getSubPackageForClientOrSqlMap(boolean isSubPackagesEnabled)", "class_method_signature": "FullyQualifiedTable.getSubPackageForClientOrSqlMap(boolean isSubPackagesEnabled)", "testcase": false, "constructor": false}, {"identifier": "getSubPackageForModel", "parameters": "(boolean isSubPackagesEnabled)", "modifiers": "public", "return": "String", "signature": "String getSubPackageForModel(boolean isSubPackagesEnabled)", "full_signature": "public String getSubPackageForModel(boolean isSubPackagesEnabled)", "class_method_signature": "FullyQualifiedTable.getSubPackageForModel(boolean isSubPackagesEnabled)", "testcase": false, "constructor": false}, {"identifier": "addDelimiters", "parameters": "(StringBuilder sb)", "modifiers": "private", "return": "void", "signature": "void addDelimiters(StringBuilder sb)", "full_signature": "private void addDelimiters(StringBuilder sb)", "class_method_signature": "FullyQualifiedTable.addDelimiters(StringBuilder sb)", "testcase": false, "constructor": false}, {"identifier": "getDomainObjectSubPackage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDomainObjectSubPackage()", "full_signature": "public String getDomainObjectSubPackage()", "class_method_signature": "FullyQualifiedTable.getDomainObjectSubPackage()", "testcase": false, "constructor": false}], "file": "core/mybatis-generator-core/src/main/java/org/mybatis/generator/api/FullyQualifiedTable.java"}, "focal_method": {"identifier": "getDomainObjectName", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getDomainObjectName() {\n        if (stringHasValue(domainObjectName)) {\n            return domainObjectName;\n        }\n\n        String finalDomainObjectName;\n        if (stringHasValue(runtimeTableName)) {\n            finalDomainObjectName = JavaBeansUtil.getCamelCaseString(runtimeTableName, true);\n        } else {\n            finalDomainObjectName = JavaBeansUtil.getCamelCaseString(introspectedTableName, true);\n        }\n\n        if (domainObjectRenamingRule != null) {\n            Pattern pattern = Pattern.compile(domainObjectRenamingRule.getSearchString());\n            String replaceString = domainObjectRenamingRule.getReplaceString();\n            replaceString = replaceString == null ? \"\" : replaceString; //$NON-NLS-1$\n            Matcher matcher = pattern.matcher(finalDomainObjectName);\n            finalDomainObjectName = JavaBeansUtil.getFirstCharacterUppercase(matcher.replaceAll(replaceString));\n        }\n        return finalDomainObjectName;\n    }", "signature": "String getDomainObjectName()", "full_signature": "public String getDomainObjectName()", "class_method_signature": "FullyQualifiedTable.getDomainObjectName()", "testcase": false, "constructor": false, "invocations": ["stringHasValue", "stringHasValue", "getCamelCaseString", "getCamelCaseString", "compile", "getSearchString", "getReplaceString", "matcher", "getFirstCharacterUppercase", "replaceAll"]}, "repository": {"repo_id": 8121707, "url": "https://github.com/mybatis/generator", "stars": 4099, "created": "2/10/2013 11:14:50 AM +00:00", "updates": "2020-01-27T16:52:10+00:00", "fork": "False", "license": "licensed"}}