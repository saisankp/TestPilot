{"test_class": {"identifier": "InvokerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger logger = mock(Logger.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = mock(Logger.class)", "var_name": "logger"}, {"original_string": "private final Invoker invoker = new Invoker(new GsonWebRenderer(new Gson()), logger);", "modifier": "private final", "type": "Invoker", "declarator": "invoker = new Invoker(new GsonWebRenderer(new Gson()), logger)", "var_name": "invoker"}], "file": "services/src/test/java/com/greensopinion/finance/services/web/dispatch/InvokerTest.java"}, "test_case": {"identifier": "createParametersWithEmptyString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void createParametersWithEmptyString() throws Exception {\n\t\tHandler handler = createHandler(\"get\");\n\t\tMap<String, Object> parameters = invoker.createParameters(new WebRequest(\"GET\", \"/path\", null),\n\t\t\t\tnew MatchResult(true, ImmutableMap.of(\"a\", \"\")), handler);\n\t\tassertEquals(null, parameters.get(\"a\"));\n\t}", "signature": "void createParametersWithEmptyString()", "full_signature": "@Test public void createParametersWithEmptyString()", "class_method_signature": "InvokerTest.createParametersWithEmptyString()", "testcase": true, "constructor": false, "invocations": ["createHandler", "createParameters", "of", "assertEquals", "get"]}, "focal_class": {"identifier": "Invoker", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final GsonWebRenderer webRenderer;", "modifier": "private final", "type": "GsonWebRenderer", "declarator": "webRenderer", "var_name": "webRenderer"}, {"original_string": "private final Logger logger;", "modifier": "private final", "type": "Logger", "declarator": "logger", "var_name": "logger"}], "methods": [{"identifier": "Invoker", "parameters": "(GsonWebRenderer webRenderer, Logger logger)", "modifiers": "@Inject public", "return": "", "signature": " Invoker(GsonWebRenderer webRenderer, Logger logger)", "full_signature": "@Inject public  Invoker(GsonWebRenderer webRenderer, Logger logger)", "class_method_signature": "Invoker.Invoker(GsonWebRenderer webRenderer, Logger logger)", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(WebRequest request, MatchResult match, Handler handler)", "modifiers": "public", "return": "WebResponse", "signature": "WebResponse invoke(WebRequest request, MatchResult match, Handler handler)", "full_signature": "public WebResponse invoke(WebRequest request, MatchResult match, Handler handler)", "class_method_signature": "Invoker.invoke(WebRequest request, MatchResult match, Handler handler)", "testcase": false, "constructor": false}, {"identifier": "logInvocationException", "parameters": "(Exception e)", "modifiers": "protected", "return": "void", "signature": "void logInvocationException(Exception e)", "full_signature": "protected void logInvocationException(Exception e)", "class_method_signature": "Invoker.logInvocationException(Exception e)", "testcase": false, "constructor": false}, {"identifier": "toWebResponse", "parameters": "(Exception e)", "modifiers": "", "return": "WebResponse", "signature": "WebResponse toWebResponse(Exception e)", "full_signature": " WebResponse toWebResponse(Exception e)", "class_method_signature": "Invoker.toWebResponse(Exception e)", "testcase": false, "constructor": false}, {"identifier": "toWebResponse", "parameters": "(Response response)", "modifiers": "", "return": "WebResponse", "signature": "WebResponse toWebResponse(Response response)", "full_signature": " WebResponse toWebResponse(Response response)", "class_method_signature": "Invoker.toWebResponse(Response response)", "testcase": false, "constructor": false}, {"identifier": "createParameters", "parameters": "(WebRequest request, MatchResult match, Handler handler)", "modifiers": "", "return": "Map<String, Object>", "signature": "Map<String, Object> createParameters(WebRequest request, MatchResult match, Handler handler)", "full_signature": " Map<String, Object> createParameters(WebRequest request, MatchResult match, Handler handler)", "class_method_signature": "Invoker.createParameters(WebRequest request, MatchResult match, Handler handler)", "testcase": false, "constructor": false}, {"identifier": "convert", "parameters": "(Type type, Object value)", "modifiers": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" })", "return": "Object", "signature": "Object convert(Type type, Object value)", "full_signature": "@SuppressWarnings({ \"rawtypes\", \"unchecked\" }) Object convert(Type type, Object value)", "class_method_signature": "Invoker.convert(Type type, Object value)", "testcase": false, "constructor": false}, {"identifier": "classOf", "parameters": "(Type type)", "modifiers": "private", "return": "Class<?>", "signature": "Class<?> classOf(Type type)", "full_signature": "private Class<?> classOf(Type type)", "class_method_signature": "Invoker.classOf(Type type)", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/greensopinion/finance/services/web/dispatch/Invoker.java"}, "focal_method": {"identifier": "createParameters", "parameters": "(WebRequest request, MatchResult match, Handler handler)", "modifiers": "", "return": "Map<String, Object>", "body": "Map<String, Object> createParameters(WebRequest request, MatchResult match, Handler handler) throws Exception {\n\t\tMap<String, Object> parameters = new HashMap<>();\n\t\tfor (Map.Entry<String, Type> parameter : handler.getParameterNameToType().entrySet()) {\n\t\t\tString name = parameter.getKey();\n\t\t\tObject value;\n\t\t\tif (Handler.NAME_ENTITY.equals(name)) {\n\t\t\t\tvalue = request.getEntity();\n\t\t\t} else {\n\t\t\t\tvalue = match.getVariables().get(name);\n\t\t\t}\n\t\t\tparameters.put(name, convert(parameter.getValue(), value));\n\t\t}\n\t\treturn parameters;\n\t}", "signature": "Map<String, Object> createParameters(WebRequest request, MatchResult match, Handler handler)", "full_signature": " Map<String, Object> createParameters(WebRequest request, MatchResult match, Handler handler)", "class_method_signature": "Invoker.createParameters(WebRequest request, MatchResult match, Handler handler)", "testcase": false, "constructor": false, "invocations": ["entrySet", "getParameterNameToType", "getKey", "equals", "getEntity", "get", "getVariables", "put", "convert", "getValue"]}, "repository": {"repo_id": 54854741, "url": "https://github.com/greensopinion/greenbeans", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 30, "size": 1684, "license": "licensed"}}