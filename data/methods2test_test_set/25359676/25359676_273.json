{"test_class": {"identifier": "LegacyDataAdapterImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock private LegacyDataAdapter knsLegacyDataAdapter;", "modifier": "@Mock private", "type": "LegacyDataAdapter", "declarator": "knsLegacyDataAdapter", "var_name": "knsLegacyDataAdapter"}, {"original_string": "@Mock private LegacyDataAdapter kradLegacyDataAdapter;", "modifier": "@Mock private", "type": "LegacyDataAdapter", "declarator": "kradLegacyDataAdapter", "var_name": "kradLegacyDataAdapter"}, {"original_string": "@Mock private DataDictionaryService dataDictionaryService;", "modifier": "@Mock private", "type": "DataDictionaryService", "declarator": "dataDictionaryService", "var_name": "dataDictionaryService"}, {"original_string": "@Mock private MetadataRepository metadataRepository;", "modifier": "@Mock private", "type": "MetadataRepository", "declarator": "metadataRepository", "var_name": "metadataRepository"}, {"original_string": "@InjectMocks private LegacyDataAdapterImpl lda = new LegacyDataAdapterImpl();", "modifier": "@InjectMocks private", "type": "LegacyDataAdapterImpl", "declarator": "lda = new LegacyDataAdapterImpl()", "var_name": "lda"}], "file": "rice-framework/krad-service-impl/src/test/java/org/kuali/rice/krad/service/impl/LegacyDataAdapterImplTest.java"}, "test_case": {"identifier": "testAllPrimaryKeyValuesPresentAndNotWildcard", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAllPrimaryKeyValuesPresentAndNotWildcard() throws Exception {\n        lda.allPrimaryKeyValuesPresentAndNotWildcard(NonLegacy.class, new HashMap<String, String>());\n        verify(kradLegacyDataAdapter).allPrimaryKeyValuesPresentAndNotWildcard(eq(NonLegacy.class), anyMapOf(\n                String.class, String.class));\n        verifyZeroInteractions(knsLegacyDataAdapter);\n    }", "signature": "void testAllPrimaryKeyValuesPresentAndNotWildcard()", "full_signature": "@Test public void testAllPrimaryKeyValuesPresentAndNotWildcard()", "class_method_signature": "LegacyDataAdapterImplTest.testAllPrimaryKeyValuesPresentAndNotWildcard()", "testcase": true, "constructor": false, "invocations": ["allPrimaryKeyValuesPresentAndNotWildcard", "allPrimaryKeyValuesPresentAndNotWildcard", "verify", "eq", "anyMapOf", "verifyZeroInteractions"]}, "focal_class": {"identifier": "LegacyDataAdapterImpl", "superclass": "", "interfaces": "implements LegacyDataAdapter", "fields": [{"original_string": "private LegacyDataAdapter kradLegacyDataAdapter;", "modifier": "private", "type": "LegacyDataAdapter", "declarator": "kradLegacyDataAdapter", "var_name": "kradLegacyDataAdapter"}, {"original_string": "private LegacyDataAdapter knsLegacyDataAdapter;", "modifier": "private", "type": "LegacyDataAdapter", "declarator": "knsLegacyDataAdapter", "var_name": "knsLegacyDataAdapter"}], "methods": [{"identifier": "save", "parameters": "(T dataObject)", "modifiers": "@Override public", "return": "T", "signature": "T save(T dataObject)", "full_signature": "@Override public T save(T dataObject)", "class_method_signature": "LegacyDataAdapterImpl.save(T dataObject)", "testcase": false, "constructor": false}, {"identifier": "linkAndSave", "parameters": "(T dataObject)", "modifiers": "@Override public", "return": "T", "signature": "T linkAndSave(T dataObject)", "full_signature": "@Override public T linkAndSave(T dataObject)", "class_method_signature": "LegacyDataAdapterImpl.linkAndSave(T dataObject)", "testcase": false, "constructor": false}, {"identifier": "saveDocument", "parameters": "(T document)", "modifiers": "@Override public", "return": "T", "signature": "T saveDocument(T document)", "full_signature": "@Override public T saveDocument(T document)", "class_method_signature": "LegacyDataAdapterImpl.saveDocument(T document)", "testcase": false, "constructor": false}, {"identifier": "findByPrimaryKey", "parameters": "(Class<T> clazz, Map<String, ?> primaryKeys)", "modifiers": "@Override public", "return": "T", "signature": "T findByPrimaryKey(Class<T> clazz, Map<String, ?> primaryKeys)", "full_signature": "@Override public T findByPrimaryKey(Class<T> clazz, Map<String, ?> primaryKeys)", "class_method_signature": "LegacyDataAdapterImpl.findByPrimaryKey(Class<T> clazz, Map<String, ?> primaryKeys)", "testcase": false, "constructor": false}, {"identifier": "findBySinglePrimaryKey", "parameters": "(Class<T> clazz, Object primaryKey)", "modifiers": "@Override public", "return": "T", "signature": "T findBySinglePrimaryKey(Class<T> clazz, Object primaryKey)", "full_signature": "@Override public T findBySinglePrimaryKey(Class<T> clazz, Object primaryKey)", "class_method_signature": "LegacyDataAdapterImpl.findBySinglePrimaryKey(Class<T> clazz, Object primaryKey)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Object dataObject)", "modifiers": "@Override public", "return": "void", "signature": "void delete(Object dataObject)", "full_signature": "@Override public void delete(Object dataObject)", "class_method_signature": "LegacyDataAdapterImpl.delete(Object dataObject)", "testcase": false, "constructor": false}, {"identifier": "deleteMatching", "parameters": "(Class<?> type, Map<String, ?> fieldValues)", "modifiers": "@Override public", "return": "void", "signature": "void deleteMatching(Class<?> type, Map<String, ?> fieldValues)", "full_signature": "@Override public void deleteMatching(Class<?> type, Map<String, ?> fieldValues)", "class_method_signature": "LegacyDataAdapterImpl.deleteMatching(Class<?> type, Map<String, ?> fieldValues)", "testcase": false, "constructor": false}, {"identifier": "retrieve", "parameters": "(T dataObject)", "modifiers": "@Override public", "return": "T", "signature": "T retrieve(T dataObject)", "full_signature": "@Override public T retrieve(T dataObject)", "class_method_signature": "LegacyDataAdapterImpl.retrieve(T dataObject)", "testcase": false, "constructor": false}, {"identifier": "findAll", "parameters": "(Class<T> clazz)", "modifiers": "@Override public", "return": "Collection<T>", "signature": "Collection<T> findAll(Class<T> clazz)", "full_signature": "@Override public Collection<T> findAll(Class<T> clazz)", "class_method_signature": "LegacyDataAdapterImpl.findAll(Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "findMatching", "parameters": "(Class<T> clazz, Map<String, ?> fieldValues)", "modifiers": "@Override public", "return": "Collection<T>", "signature": "Collection<T> findMatching(Class<T> clazz, Map<String, ?> fieldValues)", "full_signature": "@Override public Collection<T> findMatching(Class<T> clazz, Map<String, ?> fieldValues)", "class_method_signature": "LegacyDataAdapterImpl.findMatching(Class<T> clazz, Map<String, ?> fieldValues)", "testcase": false, "constructor": false}, {"identifier": "findMatchingOrderBy", "parameters": "(Class<T> clazz, Map<String, ?> fieldValues, String sortField,\n            boolean sortAscending)", "modifiers": "@Override public", "return": "Collection<T>", "signature": "Collection<T> findMatchingOrderBy(Class<T> clazz, Map<String, ?> fieldValues, String sortField,\n            boolean sortAscending)", "full_signature": "@Override public Collection<T> findMatchingOrderBy(Class<T> clazz, Map<String, ?> fieldValues, String sortField,\n            boolean sortAscending)", "class_method_signature": "LegacyDataAdapterImpl.findMatchingOrderBy(Class<T> clazz, Map<String, ?> fieldValues, String sortField,\n            boolean sortAscending)", "testcase": false, "constructor": false}, {"identifier": "getPrimaryKeyFieldValues", "parameters": "(Object dataObject)", "modifiers": "@Override public", "return": "Map<String, ?>", "signature": "Map<String, ?> getPrimaryKeyFieldValues(Object dataObject)", "full_signature": "@Override public Map<String, ?> getPrimaryKeyFieldValues(Object dataObject)", "class_method_signature": "LegacyDataAdapterImpl.getPrimaryKeyFieldValues(Object dataObject)", "testcase": false, "constructor": false}, {"identifier": "retrieveNonKeyFields", "parameters": "(Object persistableObject)", "modifiers": "@Override public", "return": "void", "signature": "void retrieveNonKeyFields(Object persistableObject)", "full_signature": "@Override public void retrieveNonKeyFields(Object persistableObject)", "class_method_signature": "LegacyDataAdapterImpl.retrieveNonKeyFields(Object persistableObject)", "testcase": false, "constructor": false}, {"identifier": "retrieveReferenceObject", "parameters": "(Object persistableObject, String referenceObjectName)", "modifiers": "@Override public", "return": "void", "signature": "void retrieveReferenceObject(Object persistableObject, String referenceObjectName)", "full_signature": "@Override public void retrieveReferenceObject(Object persistableObject, String referenceObjectName)", "class_method_signature": "LegacyDataAdapterImpl.retrieveReferenceObject(Object persistableObject, String referenceObjectName)", "testcase": false, "constructor": false}, {"identifier": "refreshAllNonUpdatingReferences", "parameters": "(Object persistableObject)", "modifiers": "@Override public", "return": "void", "signature": "void refreshAllNonUpdatingReferences(Object persistableObject)", "full_signature": "@Override public void refreshAllNonUpdatingReferences(Object persistableObject)", "class_method_signature": "LegacyDataAdapterImpl.refreshAllNonUpdatingReferences(Object persistableObject)", "testcase": false, "constructor": false}, {"identifier": "isProxied", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isProxied(Object object)", "full_signature": "@Override public boolean isProxied(Object object)", "class_method_signature": "LegacyDataAdapterImpl.isProxied(Object object)", "testcase": false, "constructor": false}, {"identifier": "resolveProxy", "parameters": "(Object object)", "modifiers": "@Override public", "return": "Object", "signature": "Object resolveProxy(Object object)", "full_signature": "@Override public Object resolveProxy(Object object)", "class_method_signature": "LegacyDataAdapterImpl.resolveProxy(Object object)", "testcase": false, "constructor": false}, {"identifier": "findCollectionBySearchHelper", "parameters": "(Class<T> dataObjectClass, Map<String, String> formProperties,\n            boolean unbounded, boolean allPrimaryKeyValuesPresentAndNotWildcard, Integer searchResultsLimit)", "modifiers": "@Override public", "return": "Collection<T>", "signature": "Collection<T> findCollectionBySearchHelper(Class<T> dataObjectClass, Map<String, String> formProperties,\n            boolean unbounded, boolean allPrimaryKeyValuesPresentAndNotWildcard, Integer searchResultsLimit)", "full_signature": "@Override public Collection<T> findCollectionBySearchHelper(Class<T> dataObjectClass, Map<String, String> formProperties,\n            boolean unbounded, boolean allPrimaryKeyValuesPresentAndNotWildcard, Integer searchResultsLimit)", "class_method_signature": "LegacyDataAdapterImpl.findCollectionBySearchHelper(Class<T> dataObjectClass, Map<String, String> formProperties,\n            boolean unbounded, boolean allPrimaryKeyValuesPresentAndNotWildcard, Integer searchResultsLimit)", "testcase": false, "constructor": false}, {"identifier": "findCollectionBySearchHelper", "parameters": "(Class<T> dataObjectClass, Map<String, String> formProperties,\n            List<String> wildcardAsLiteralPropertyNames, boolean unbounded,\n            boolean allPrimaryKeyValuesPresentAndNotWildcard, Integer searchResultsLimit)", "modifiers": "@Override public", "return": "Collection<T>", "signature": "Collection<T> findCollectionBySearchHelper(Class<T> dataObjectClass, Map<String, String> formProperties,\n            List<String> wildcardAsLiteralPropertyNames, boolean unbounded,\n            boolean allPrimaryKeyValuesPresentAndNotWildcard, Integer searchResultsLimit)", "full_signature": "@Override public Collection<T> findCollectionBySearchHelper(Class<T> dataObjectClass, Map<String, String> formProperties,\n            List<String> wildcardAsLiteralPropertyNames, boolean unbounded,\n            boolean allPrimaryKeyValuesPresentAndNotWildcard, Integer searchResultsLimit)", "class_method_signature": "LegacyDataAdapterImpl.findCollectionBySearchHelper(Class<T> dataObjectClass, Map<String, String> formProperties,\n            List<String> wildcardAsLiteralPropertyNames, boolean unbounded,\n            boolean allPrimaryKeyValuesPresentAndNotWildcard, Integer searchResultsLimit)", "testcase": false, "constructor": false}, {"identifier": "findObjectBySearch", "parameters": "(Class<T> type, Map<String, String> formProps)", "modifiers": "@Override public", "return": "T", "signature": "T findObjectBySearch(Class<T> type, Map<String, String> formProps)", "full_signature": "@Override public T findObjectBySearch(Class<T> type, Map<String, String> formProps)", "class_method_signature": "LegacyDataAdapterImpl.findObjectBySearch(Class<T> type, Map<String, String> formProps)", "testcase": false, "constructor": false}, {"identifier": "allPrimaryKeyValuesPresentAndNotWildcard", "parameters": "(Class<?> boClass, Map<String, String> formProps)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean allPrimaryKeyValuesPresentAndNotWildcard(Class<?> boClass, Map<String, String> formProps)", "full_signature": "@Override public boolean allPrimaryKeyValuesPresentAndNotWildcard(Class<?> boClass, Map<String, String> formProps)", "class_method_signature": "LegacyDataAdapterImpl.allPrimaryKeyValuesPresentAndNotWildcard(Class<?> boClass, Map<String, String> formProps)", "testcase": false, "constructor": false}, {"identifier": "listPrimaryKeyFieldNames", "parameters": "(Class<?> type)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> listPrimaryKeyFieldNames(Class<?> type)", "full_signature": "@Override public List<String> listPrimaryKeyFieldNames(Class<?> type)", "class_method_signature": "LegacyDataAdapterImpl.listPrimaryKeyFieldNames(Class<?> type)", "testcase": false, "constructor": false}, {"identifier": "determineCollectionObjectType", "parameters": "(Class<?> containingType, String collectionPropertyName)", "modifiers": "@Override public", "return": "Class<?>", "signature": "Class<?> determineCollectionObjectType(Class<?> containingType, String collectionPropertyName)", "full_signature": "@Override public Class<?> determineCollectionObjectType(Class<?> containingType, String collectionPropertyName)", "class_method_signature": "LegacyDataAdapterImpl.determineCollectionObjectType(Class<?> containingType, String collectionPropertyName)", "testcase": false, "constructor": false}, {"identifier": "hasReference", "parameters": "(Class<?> boClass, String referenceName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasReference(Class<?> boClass, String referenceName)", "full_signature": "@Override public boolean hasReference(Class<?> boClass, String referenceName)", "class_method_signature": "LegacyDataAdapterImpl.hasReference(Class<?> boClass, String referenceName)", "testcase": false, "constructor": false}, {"identifier": "hasCollection", "parameters": "(Class<?> boClass, String collectionName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasCollection(Class<?> boClass, String collectionName)", "full_signature": "@Override public boolean hasCollection(Class<?> boClass, String collectionName)", "class_method_signature": "LegacyDataAdapterImpl.hasCollection(Class<?> boClass, String collectionName)", "testcase": false, "constructor": false}, {"identifier": "isExtensionAttribute", "parameters": "(Class<?> boClass, String attributePropertyName, Class<?> propertyType)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isExtensionAttribute(Class<?> boClass, String attributePropertyName, Class<?> propertyType)", "full_signature": "@Override public boolean isExtensionAttribute(Class<?> boClass, String attributePropertyName, Class<?> propertyType)", "class_method_signature": "LegacyDataAdapterImpl.isExtensionAttribute(Class<?> boClass, String attributePropertyName, Class<?> propertyType)", "testcase": false, "constructor": false}, {"identifier": "getExtensionAttributeClass", "parameters": "(Class<?> boClass, String attributePropertyName)", "modifiers": "@Override public", "return": "Class<?>", "signature": "Class<?> getExtensionAttributeClass(Class<?> boClass, String attributePropertyName)", "full_signature": "@Override public Class<?> getExtensionAttributeClass(Class<?> boClass, String attributePropertyName)", "class_method_signature": "LegacyDataAdapterImpl.getExtensionAttributeClass(Class<?> boClass, String attributePropertyName)", "testcase": false, "constructor": false}, {"identifier": "getPrimaryKeyFieldValuesDOMDS", "parameters": "(Object dataObject)", "modifiers": "@Override public", "return": "Map<String, ?>", "signature": "Map<String, ?> getPrimaryKeyFieldValuesDOMDS(Object dataObject)", "full_signature": "@Override public Map<String, ?> getPrimaryKeyFieldValuesDOMDS(Object dataObject)", "class_method_signature": "LegacyDataAdapterImpl.getPrimaryKeyFieldValuesDOMDS(Object dataObject)", "testcase": false, "constructor": false}, {"identifier": "equalsByPrimaryKeys", "parameters": "(Object do1, Object do2)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equalsByPrimaryKeys(Object do1, Object do2)", "full_signature": "@Override public boolean equalsByPrimaryKeys(Object do1, Object do2)", "class_method_signature": "LegacyDataAdapterImpl.equalsByPrimaryKeys(Object do1, Object do2)", "testcase": false, "constructor": false}, {"identifier": "materializeAllSubObjects", "parameters": "(Object object)", "modifiers": "@Override public", "return": "void", "signature": "void materializeAllSubObjects(Object object)", "full_signature": "@Override public void materializeAllSubObjects(Object object)", "class_method_signature": "LegacyDataAdapterImpl.materializeAllSubObjects(Object object)", "testcase": false, "constructor": false}, {"identifier": "getPropertyType", "parameters": "(Object object, String propertyName)", "modifiers": "@Override public", "return": "Class<?>", "signature": "Class<?> getPropertyType(Object object, String propertyName)", "full_signature": "@Override public Class<?> getPropertyType(Object object, String propertyName)", "class_method_signature": "LegacyDataAdapterImpl.getPropertyType(Object object, String propertyName)", "testcase": false, "constructor": false}, {"identifier": "getExtension", "parameters": "(\n            Class<?> businessObjectClass)", "modifiers": "@Override public", "return": "Object", "signature": "Object getExtension(\n            Class<?> businessObjectClass)", "full_signature": "@Override public Object getExtension(\n            Class<?> businessObjectClass)", "class_method_signature": "LegacyDataAdapterImpl.getExtension(\n            Class<?> businessObjectClass)", "testcase": false, "constructor": false}, {"identifier": "refreshReferenceObject", "parameters": "(Object businessObject, String referenceObjectName)", "modifiers": "@Override public", "return": "void", "signature": "void refreshReferenceObject(Object businessObject, String referenceObjectName)", "full_signature": "@Override public void refreshReferenceObject(Object businessObject, String referenceObjectName)", "class_method_signature": "LegacyDataAdapterImpl.refreshReferenceObject(Object businessObject, String referenceObjectName)", "testcase": false, "constructor": false}, {"identifier": "isLockable", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isLockable(Object object)", "full_signature": "@Override public boolean isLockable(Object object)", "class_method_signature": "LegacyDataAdapterImpl.isLockable(Object object)", "testcase": false, "constructor": false}, {"identifier": "verifyVersionNumber", "parameters": "(Object dataObject)", "modifiers": "@Override public", "return": "void", "signature": "void verifyVersionNumber(Object dataObject)", "full_signature": "@Override public void verifyVersionNumber(Object dataObject)", "class_method_signature": "LegacyDataAdapterImpl.verifyVersionNumber(Object dataObject)", "testcase": false, "constructor": false}, {"identifier": "createQuickFinder", "parameters": "(Class<?> containingClass, String attributeName)", "modifiers": "@Override public", "return": "RemotableQuickFinder.Builder", "signature": "RemotableQuickFinder.Builder createQuickFinder(Class<?> containingClass, String attributeName)", "full_signature": "@Override public RemotableQuickFinder.Builder createQuickFinder(Class<?> containingClass, String attributeName)", "class_method_signature": "LegacyDataAdapterImpl.createQuickFinder(Class<?> containingClass, String attributeName)", "testcase": false, "constructor": false}, {"identifier": "isReferenceUpdatable", "parameters": "(Class<?> type, String referenceName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isReferenceUpdatable(Class<?> type, String referenceName)", "full_signature": "@Override public boolean isReferenceUpdatable(Class<?> type, String referenceName)", "class_method_signature": "LegacyDataAdapterImpl.isReferenceUpdatable(Class<?> type, String referenceName)", "testcase": false, "constructor": false}, {"identifier": "listReferenceObjectFields", "parameters": "(Class<?> type)", "modifiers": "@Override @SuppressWarnings(\"rawtypes\") public", "return": "Map<String, Class>", "signature": "Map<String, Class> listReferenceObjectFields(Class<?> type)", "full_signature": "@Override @SuppressWarnings(\"rawtypes\") public Map<String, Class> listReferenceObjectFields(Class<?> type)", "class_method_signature": "LegacyDataAdapterImpl.listReferenceObjectFields(Class<?> type)", "testcase": false, "constructor": false}, {"identifier": "isCollectionUpdatable", "parameters": "(Class<?> type, String collectionName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isCollectionUpdatable(Class<?> type, String collectionName)", "full_signature": "@Override public boolean isCollectionUpdatable(Class<?> type, String collectionName)", "class_method_signature": "LegacyDataAdapterImpl.isCollectionUpdatable(Class<?> type, String collectionName)", "testcase": false, "constructor": false}, {"identifier": "listCollectionObjectTypes", "parameters": "(Class<?> type)", "modifiers": "@Override @SuppressWarnings(\"rawtypes\") public", "return": "Map<String, Class>", "signature": "Map<String, Class> listCollectionObjectTypes(Class<?> type)", "full_signature": "@Override @SuppressWarnings(\"rawtypes\") public Map<String, Class> listCollectionObjectTypes(Class<?> type)", "class_method_signature": "LegacyDataAdapterImpl.listCollectionObjectTypes(Class<?> type)", "testcase": false, "constructor": false}, {"identifier": "getReferenceIfExists", "parameters": "(Object bo, String referenceName)", "modifiers": "@Override public", "return": "Object", "signature": "Object getReferenceIfExists(Object bo, String referenceName)", "full_signature": "@Override public Object getReferenceIfExists(Object bo, String referenceName)", "class_method_signature": "LegacyDataAdapterImpl.getReferenceIfExists(Object bo, String referenceName)", "testcase": false, "constructor": false}, {"identifier": "allForeignKeyValuesPopulatedForReference", "parameters": "(Object bo, String referenceName)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean allForeignKeyValuesPopulatedForReference(Object bo, String referenceName)", "full_signature": "@Override public boolean allForeignKeyValuesPopulatedForReference(Object bo, String referenceName)", "class_method_signature": "LegacyDataAdapterImpl.allForeignKeyValuesPopulatedForReference(Object bo, String referenceName)", "testcase": false, "constructor": false}, {"identifier": "getDictionaryRelationship", "parameters": "(Class<?> c, String attributeName)", "modifiers": "@Override public", "return": "RelationshipDefinition", "signature": "RelationshipDefinition getDictionaryRelationship(Class<?> c, String attributeName)", "full_signature": "@Override public RelationshipDefinition getDictionaryRelationship(Class<?> c, String attributeName)", "class_method_signature": "LegacyDataAdapterImpl.getDictionaryRelationship(Class<?> c, String attributeName)", "testcase": false, "constructor": false}, {"identifier": "getTitleAttribute", "parameters": "(Class<?> dataObjectClass)", "modifiers": "@Override public", "return": "String", "signature": "String getTitleAttribute(Class<?> dataObjectClass)", "full_signature": "@Override public String getTitleAttribute(Class<?> dataObjectClass)", "class_method_signature": "LegacyDataAdapterImpl.getTitleAttribute(Class<?> dataObjectClass)", "testcase": false, "constructor": false}, {"identifier": "areNotesSupported", "parameters": "(Class<?> dataObjectClass)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean areNotesSupported(Class<?> dataObjectClass)", "full_signature": "@Override public boolean areNotesSupported(Class<?> dataObjectClass)", "class_method_signature": "LegacyDataAdapterImpl.areNotesSupported(Class<?> dataObjectClass)", "testcase": false, "constructor": false}, {"identifier": "getDataObjectIdentifierString", "parameters": "(Object dataObject)", "modifiers": "@Override public", "return": "String", "signature": "String getDataObjectIdentifierString(Object dataObject)", "full_signature": "@Override public String getDataObjectIdentifierString(Object dataObject)", "class_method_signature": "LegacyDataAdapterImpl.getDataObjectIdentifierString(Object dataObject)", "testcase": false, "constructor": false}, {"identifier": "getInquiryObjectClassIfNotTitle", "parameters": "(Object dataObject, String propertyName)", "modifiers": "@Override public", "return": "Class<?>", "signature": "Class<?> getInquiryObjectClassIfNotTitle(Object dataObject, String propertyName)", "full_signature": "@Override public Class<?> getInquiryObjectClassIfNotTitle(Object dataObject, String propertyName)", "class_method_signature": "LegacyDataAdapterImpl.getInquiryObjectClassIfNotTitle(Object dataObject, String propertyName)", "testcase": false, "constructor": false}, {"identifier": "getInquiryParameters", "parameters": "(Object dataObject, List<String> keys, String propertyName)", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getInquiryParameters(Object dataObject, List<String> keys, String propertyName)", "full_signature": "@Override public Map<String, String> getInquiryParameters(Object dataObject, List<String> keys, String propertyName)", "class_method_signature": "LegacyDataAdapterImpl.getInquiryParameters(Object dataObject, List<String> keys, String propertyName)", "testcase": false, "constructor": false}, {"identifier": "hasLocalLookup", "parameters": "(Class<?> dataObjectClass)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasLocalLookup(Class<?> dataObjectClass)", "full_signature": "@Override public boolean hasLocalLookup(Class<?> dataObjectClass)", "class_method_signature": "LegacyDataAdapterImpl.hasLocalLookup(Class<?> dataObjectClass)", "testcase": false, "constructor": false}, {"identifier": "hasLocalInquiry", "parameters": "(Class<?> dataObjectClass)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasLocalInquiry(Class<?> dataObjectClass)", "full_signature": "@Override public boolean hasLocalInquiry(Class<?> dataObjectClass)", "class_method_signature": "LegacyDataAdapterImpl.hasLocalInquiry(Class<?> dataObjectClass)", "testcase": false, "constructor": false}, {"identifier": "getDataObjectRelationship", "parameters": "(Object dataObject,\n            Class<?> dataObjectClass, String attributeName, String attributePrefix, boolean keysOnly,\n            boolean supportsLookup, boolean supportsInquiry)", "modifiers": "@Override public", "return": "org.kuali.rice.krad.bo.DataObjectRelationship", "signature": "org.kuali.rice.krad.bo.DataObjectRelationship getDataObjectRelationship(Object dataObject,\n            Class<?> dataObjectClass, String attributeName, String attributePrefix, boolean keysOnly,\n            boolean supportsLookup, boolean supportsInquiry)", "full_signature": "@Override public org.kuali.rice.krad.bo.DataObjectRelationship getDataObjectRelationship(Object dataObject,\n            Class<?> dataObjectClass, String attributeName, String attributePrefix, boolean keysOnly,\n            boolean supportsLookup, boolean supportsInquiry)", "class_method_signature": "LegacyDataAdapterImpl.getDataObjectRelationship(Object dataObject,\n            Class<?> dataObjectClass, String attributeName, String attributePrefix, boolean keysOnly,\n            boolean supportsLookup, boolean supportsInquiry)", "testcase": false, "constructor": false}, {"identifier": "isPersistable", "parameters": "(Class<?> dataObjectClass)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isPersistable(Class<?> dataObjectClass)", "full_signature": "@Override public boolean isPersistable(Class<?> dataObjectClass)", "class_method_signature": "LegacyDataAdapterImpl.isPersistable(Class<?> dataObjectClass)", "testcase": false, "constructor": false}, {"identifier": "getForeignKeyFieldsPopulationState", "parameters": "(Object dataObject, String referenceName)", "modifiers": "@Override public", "return": "ForeignKeyFieldsPopulationState", "signature": "ForeignKeyFieldsPopulationState getForeignKeyFieldsPopulationState(Object dataObject, String referenceName)", "full_signature": "@Override public ForeignKeyFieldsPopulationState getForeignKeyFieldsPopulationState(Object dataObject, String referenceName)", "class_method_signature": "LegacyDataAdapterImpl.getForeignKeyFieldsPopulationState(Object dataObject, String referenceName)", "testcase": false, "constructor": false}, {"identifier": "getForeignKeysForReference", "parameters": "(Class<?> clazz, String attributeName)", "modifiers": "@Override public", "return": "Map<String, String>", "signature": "Map<String, String> getForeignKeysForReference(Class<?> clazz, String attributeName)", "full_signature": "@Override public Map<String, String> getForeignKeysForReference(Class<?> clazz, String attributeName)", "class_method_signature": "LegacyDataAdapterImpl.getForeignKeysForReference(Class<?> clazz, String attributeName)", "testcase": false, "constructor": false}, {"identifier": "hasPrimaryKeyFieldValues", "parameters": "(Object dataObject)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasPrimaryKeyFieldValues(Object dataObject)", "full_signature": "@Override public boolean hasPrimaryKeyFieldValues(Object dataObject)", "class_method_signature": "LegacyDataAdapterImpl.hasPrimaryKeyFieldValues(Object dataObject)", "testcase": false, "constructor": false}, {"identifier": "setObjectPropertyDeep", "parameters": "(Object bo, String propertyName, Class type,\n            Object propertyValue)", "modifiers": "@Override public", "return": "void", "signature": "void setObjectPropertyDeep(Object bo, String propertyName, Class type,\n            Object propertyValue)", "full_signature": "@Override public void setObjectPropertyDeep(Object bo, String propertyName, Class type,\n            Object propertyValue)", "class_method_signature": "LegacyDataAdapterImpl.setObjectPropertyDeep(Object bo, String propertyName, Class type,\n            Object propertyValue)", "testcase": false, "constructor": false}, {"identifier": "materializeClassForProxiedObject", "parameters": "(Object object)", "modifiers": "@Override @SuppressWarnings(\"rawtypes\") public", "return": "Class", "signature": "Class materializeClassForProxiedObject(Object object)", "full_signature": "@Override @SuppressWarnings(\"rawtypes\") public Class materializeClassForProxiedObject(Object object)", "class_method_signature": "LegacyDataAdapterImpl.materializeClassForProxiedObject(Object object)", "testcase": false, "constructor": false}, {"identifier": "getNestedValue", "parameters": "(Object bo, String fieldName)", "modifiers": "@Override public", "return": "Object", "signature": "Object getNestedValue(Object bo, String fieldName)", "full_signature": "@Override public Object getNestedValue(Object bo, String fieldName)", "class_method_signature": "LegacyDataAdapterImpl.getNestedValue(Object bo, String fieldName)", "testcase": false, "constructor": false}, {"identifier": "createNewObjectFromClass", "parameters": "(Class clazz)", "modifiers": "@Override @SuppressWarnings(\"rawtypes\") public", "return": "Object", "signature": "Object createNewObjectFromClass(Class clazz)", "full_signature": "@Override @SuppressWarnings(\"rawtypes\") public Object createNewObjectFromClass(Class clazz)", "class_method_signature": "LegacyDataAdapterImpl.createNewObjectFromClass(Class clazz)", "testcase": false, "constructor": false}, {"identifier": "isNull", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isNull(Object object)", "full_signature": "@Override public boolean isNull(Object object)", "class_method_signature": "LegacyDataAdapterImpl.isNull(Object object)", "testcase": false, "constructor": false}, {"identifier": "setObjectProperty", "parameters": "(Object bo, String propertyName, Class propertyType,\n            Object propertyValue)", "modifiers": "@Override public", "return": "void", "signature": "void setObjectProperty(Object bo, String propertyName, Class propertyType,\n            Object propertyValue)", "full_signature": "@Override public void setObjectProperty(Object bo, String propertyName, Class propertyType,\n            Object propertyValue)", "class_method_signature": "LegacyDataAdapterImpl.setObjectProperty(Object bo, String propertyName, Class propertyType,\n            Object propertyValue)", "testcase": false, "constructor": false}, {"identifier": "findByDocumentHeaderId", "parameters": "(Class<T> documentClass, String id)", "modifiers": "@Override public", "return": "T", "signature": "T findByDocumentHeaderId(Class<T> documentClass, String id)", "full_signature": "@Override public T findByDocumentHeaderId(Class<T> documentClass, String id)", "class_method_signature": "LegacyDataAdapterImpl.findByDocumentHeaderId(Class<T> documentClass, String id)", "testcase": false, "constructor": false}, {"identifier": "findByDocumentHeaderIds", "parameters": "(Class<T> documentClass, List<String> ids)", "modifiers": "@Override public", "return": "List<T>", "signature": "List<T> findByDocumentHeaderIds(Class<T> documentClass, List<String> ids)", "full_signature": "@Override public List<T> findByDocumentHeaderIds(Class<T> documentClass, List<String> ids)", "class_method_signature": "LegacyDataAdapterImpl.findByDocumentHeaderIds(Class<T> documentClass, List<String> ids)", "testcase": false, "constructor": false}, {"identifier": "selectAdapter", "parameters": "(Object dataObject)", "modifiers": "protected", "return": "LegacyDataAdapter", "signature": "LegacyDataAdapter selectAdapter(Object dataObject)", "full_signature": "protected LegacyDataAdapter selectAdapter(Object dataObject)", "class_method_signature": "LegacyDataAdapterImpl.selectAdapter(Object dataObject)", "testcase": false, "constructor": false}, {"identifier": "getKradLegacyDataAdapter", "parameters": "()", "modifiers": "public", "return": "LegacyDataAdapter", "signature": "LegacyDataAdapter getKradLegacyDataAdapter()", "full_signature": "public LegacyDataAdapter getKradLegacyDataAdapter()", "class_method_signature": "LegacyDataAdapterImpl.getKradLegacyDataAdapter()", "testcase": false, "constructor": false}, {"identifier": "setKradLegacyDataAdapter", "parameters": "(LegacyDataAdapter kradLegacyDataAdapter)", "modifiers": "public", "return": "void", "signature": "void setKradLegacyDataAdapter(LegacyDataAdapter kradLegacyDataAdapter)", "full_signature": "public void setKradLegacyDataAdapter(LegacyDataAdapter kradLegacyDataAdapter)", "class_method_signature": "LegacyDataAdapterImpl.setKradLegacyDataAdapter(LegacyDataAdapter kradLegacyDataAdapter)", "testcase": false, "constructor": false}, {"identifier": "getKnsLegacyDataAdapter", "parameters": "()", "modifiers": "public", "return": "LegacyDataAdapter", "signature": "LegacyDataAdapter getKnsLegacyDataAdapter()", "full_signature": "public LegacyDataAdapter getKnsLegacyDataAdapter()", "class_method_signature": "LegacyDataAdapterImpl.getKnsLegacyDataAdapter()", "testcase": false, "constructor": false}, {"identifier": "setKnsLegacyDataAdapter", "parameters": "(LegacyDataAdapter knsLegacyDataAdapter)", "modifiers": "public", "return": "void", "signature": "void setKnsLegacyDataAdapter(LegacyDataAdapter knsLegacyDataAdapter)", "full_signature": "public void setKnsLegacyDataAdapter(LegacyDataAdapter knsLegacyDataAdapter)", "class_method_signature": "LegacyDataAdapterImpl.setKnsLegacyDataAdapter(LegacyDataAdapter knsLegacyDataAdapter)", "testcase": false, "constructor": false}], "file": "rice-framework/krad-service-impl/src/main/java/org/kuali/rice/krad/service/impl/LegacyDataAdapterImpl.java"}, "focal_method": {"identifier": "allPrimaryKeyValuesPresentAndNotWildcard", "parameters": "(Class<?> boClass, Map<String, String> formProps)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean allPrimaryKeyValuesPresentAndNotWildcard(Class<?> boClass, Map<String, String> formProps) {\n        return selectAdapter(boClass).allPrimaryKeyValuesPresentAndNotWildcard(boClass, formProps);\n    }", "signature": "boolean allPrimaryKeyValuesPresentAndNotWildcard(Class<?> boClass, Map<String, String> formProps)", "full_signature": "@Override public boolean allPrimaryKeyValuesPresentAndNotWildcard(Class<?> boClass, Map<String, String> formProps)", "class_method_signature": "LegacyDataAdapterImpl.allPrimaryKeyValuesPresentAndNotWildcard(Class<?> boClass, Map<String, String> formProps)", "testcase": false, "constructor": false, "invocations": ["allPrimaryKeyValuesPresentAndNotWildcard", "selectAdapter"]}, "repository": {"repo_id": 25359676, "url": "https://github.com/kuali/rice", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 16, "size": 289156, "license": "licensed"}}