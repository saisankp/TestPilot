{"test_class": {"identifier": "KafkaClientConfigUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final KafkaClientConfigUtil util = new KafkaClientConfigUtil(\"/tmp\", \"TestPrefix\");", "modifier": "private final", "type": "KafkaClientConfigUtil", "declarator": "util = new KafkaClientConfigUtil(\"/tmp\", \"TestPrefix\")", "var_name": "util"}, {"original_string": "private final String consumerId = \"MyConsumer\";", "modifier": "private final", "type": "String", "declarator": "consumerId = \"MyConsumer\"", "var_name": "consumerId"}, {"original_string": "private final String expectedFinalGroupId = \"TestPrefix-MyConsumer\";", "modifier": "private final", "type": "String", "declarator": "expectedFinalGroupId = \"TestPrefix-MyConsumer\"", "var_name": "expectedFinalGroupId"}, {"original_string": "private final String expectedFinalConsumerId = \"TestPrefix-MyConsumer-\" + Thread.currentThread().getId();", "modifier": "private final", "type": "String", "declarator": "expectedFinalConsumerId = \"TestPrefix-MyConsumer-\" + Thread.currentThread().getId()", "var_name": "expectedFinalConsumerId"}, {"original_string": "private final String expectedBrokerHosts = \"localhost:9092,yourHost:8282\";", "modifier": "private final", "type": "String", "declarator": "expectedBrokerHosts = \"localhost:9092,yourHost:8282\"", "var_name": "expectedBrokerHosts"}, {"original_string": "private final int expectedRequestTimeoutValue = 15000;", "modifier": "private final", "type": "int", "declarator": "expectedRequestTimeoutValue = 15000", "var_name": "expectedRequestTimeoutValue"}, {"original_string": "private final String expectedKeyStoreFile = \"myKey.file\";", "modifier": "private final", "type": "String", "declarator": "expectedKeyStoreFile = \"myKey.file\"", "var_name": "expectedKeyStoreFile"}, {"original_string": "private final String expectedKeyStorePassword = \"keyPass\";", "modifier": "private final", "type": "String", "declarator": "expectedKeyStorePassword = \"keyPass\"", "var_name": "expectedKeyStorePassword"}, {"original_string": "private final String expectedTrustStoreFile = \"myKey.file\";", "modifier": "private final", "type": "String", "declarator": "expectedTrustStoreFile = \"myKey.file\"", "var_name": "expectedTrustStoreFile"}, {"original_string": "private final String expectedTrustStorePassword = \"keyPass\";", "modifier": "private final", "type": "String", "declarator": "expectedTrustStorePassword = \"keyPass\"", "var_name": "expectedTrustStorePassword"}, {"original_string": "private final String expectedSaslPlainMechanism = \"PLAIN\";", "modifier": "private final", "type": "String", "declarator": "expectedSaslPlainMechanism = \"PLAIN\"", "var_name": "expectedSaslPlainMechanism"}, {"original_string": "private final String expectedSaslUsername = \"my-sasl-user\";", "modifier": "private final", "type": "String", "declarator": "expectedSaslUsername = \"my-sasl-user\"", "var_name": "expectedSaslUsername"}, {"original_string": "private final String expectedSaslPassword = \"my-sasl-password\";", "modifier": "private final", "type": "String", "declarator": "expectedSaslPassword = \"my-sasl-password\"", "var_name": "expectedSaslPassword"}, {"original_string": "private final String expectedSaslCustomMechanism = \"Custom\";", "modifier": "private final", "type": "String", "declarator": "expectedSaslCustomMechanism = \"Custom\"", "var_name": "expectedSaslCustomMechanism"}, {"original_string": "private final String expectedSaslJaas = \"Custom Jaas stuff\";", "modifier": "private final", "type": "String", "declarator": "expectedSaslJaas = \"Custom Jaas stuff\"", "var_name": "expectedSaslJaas"}], "file": "kafka-webview-ui/src/test/java/org/sourcelab/kafka/webview/ui/manager/kafka/KafkaClientConfigUtilTest.java"}, "test_case": {"identifier": "testApplyCommonSettings_withSsl_withSasl_withNoTrustStore", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testApplyCommonSettings_withSsl_withSasl_withNoTrustStore() {\n        final ClusterConfig clusterConfig = ClusterConfig.newBuilder()\n            .withBrokerHosts(expectedBrokerHosts)\n            .withUseSsl(true)\n            .withKeyStoreFile(expectedKeyStoreFile)\n            .withKeyStorePassword(expectedKeyStorePassword)\n            .withTrustStoreFile(null)\n            .withTrustStorePassword(null)\n            .withUseSasl(true)\n            .withSaslMechanism(expectedSaslPlainMechanism)\n            .withSaslPlaintextUsername(expectedSaslUsername)\n            .withSaslPlaintextPassword(expectedSaslPassword)\n            .withSaslJaas(expectedSaslJaas)\n            .build();\n\n        final Map<String, Object> config = util.applyCommonSettings(clusterConfig, consumerId);\n\n        // Validate\n        validateDefaultKeys(config);\n        validateSsl(config, \"SASL_SSL\", false, false);\n        validateSaslPlainMechanism(config, \"SASL_SSL\");\n    }", "signature": "void testApplyCommonSettings_withSsl_withSasl_withNoTrustStore()", "full_signature": "@Test public void testApplyCommonSettings_withSsl_withSasl_withNoTrustStore()", "class_method_signature": "KafkaClientConfigUtilTest.testApplyCommonSettings_withSsl_withSasl_withNoTrustStore()", "testcase": true, "constructor": false, "invocations": ["build", "withSaslJaas", "withSaslPlaintextPassword", "withSaslPlaintextUsername", "withSaslMechanism", "withUseSasl", "withTrustStorePassword", "withTrustStoreFile", "withKeyStorePassword", "withKeyStoreFile", "withUseSsl", "withBrokerHosts", "newBuilder", "applyCommonSettings", "validateDefaultKeys", "validateSsl", "validateSaslPlainMechanism"]}, "focal_class": {"identifier": "KafkaClientConfigUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(KafkaClientConfigUtil.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(KafkaClientConfigUtil.class)", "var_name": "logger"}, {"original_string": "private final String keyStoreRootPath;", "modifier": "private final", "type": "String", "declarator": "keyStoreRootPath", "var_name": "keyStoreRootPath"}, {"original_string": "private final String consumerIdPrefix;", "modifier": "private final", "type": "String", "declarator": "consumerIdPrefix", "var_name": "consumerIdPrefix"}, {"original_string": "private final int requestTimeoutMs = 15000;", "modifier": "private final", "type": "int", "declarator": "requestTimeoutMs = 15000", "var_name": "requestTimeoutMs"}], "methods": [{"identifier": "KafkaClientConfigUtil", "parameters": "(final String keyStoreRootPath, final String consumerIdPrefix)", "modifiers": "public", "return": "", "signature": " KafkaClientConfigUtil(final String keyStoreRootPath, final String consumerIdPrefix)", "full_signature": "public  KafkaClientConfigUtil(final String keyStoreRootPath, final String consumerIdPrefix)", "class_method_signature": "KafkaClientConfigUtil.KafkaClientConfigUtil(final String keyStoreRootPath, final String consumerIdPrefix)", "testcase": false, "constructor": true}, {"identifier": "applyCommonSettings", "parameters": "(final ClusterConfig clusterConfig, final String consumerId)", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> applyCommonSettings(final ClusterConfig clusterConfig, final String consumerId)", "full_signature": "public Map<String, Object> applyCommonSettings(final ClusterConfig clusterConfig, final String consumerId)", "class_method_signature": "KafkaClientConfigUtil.applyCommonSettings(final ClusterConfig clusterConfig, final String consumerId)", "testcase": false, "constructor": false}, {"identifier": "applyCommonSettings", "parameters": "(\n        final ClusterConfig clusterConfig,\n        final String consumerId,\n        final Map<String, Object> config\n    )", "modifiers": "private", "return": "Map<String, Object>", "signature": "Map<String, Object> applyCommonSettings(\n        final ClusterConfig clusterConfig,\n        final String consumerId,\n        final Map<String, Object> config\n    )", "full_signature": "private Map<String, Object> applyCommonSettings(\n        final ClusterConfig clusterConfig,\n        final String consumerId,\n        final Map<String, Object> config\n    )", "class_method_signature": "KafkaClientConfigUtil.applyCommonSettings(\n        final ClusterConfig clusterConfig,\n        final String consumerId,\n        final Map<String, Object> config\n    )", "testcase": false, "constructor": false}, {"identifier": "applyClusterClientProperties", "parameters": "(final ClusterConfig clusterConfig, final Map<String, Object> config)", "modifiers": "private", "return": "void", "signature": "void applyClusterClientProperties(final ClusterConfig clusterConfig, final Map<String, Object> config)", "full_signature": "private void applyClusterClientProperties(final ClusterConfig clusterConfig, final Map<String, Object> config)", "class_method_signature": "KafkaClientConfigUtil.applyClusterClientProperties(final ClusterConfig clusterConfig, final Map<String, Object> config)", "testcase": false, "constructor": false}, {"identifier": "applySslSettings", "parameters": "(final ClusterConfig clusterConfig, final Map<String, Object> config)", "modifiers": "private", "return": "void", "signature": "void applySslSettings(final ClusterConfig clusterConfig, final Map<String, Object> config)", "full_signature": "private void applySslSettings(final ClusterConfig clusterConfig, final Map<String, Object> config)", "class_method_signature": "KafkaClientConfigUtil.applySslSettings(final ClusterConfig clusterConfig, final Map<String, Object> config)", "testcase": false, "constructor": false}, {"identifier": "applySaslSettings", "parameters": "(final ClusterConfig clusterConfig, final Map<String, Object> config)", "modifiers": "private", "return": "void", "signature": "void applySaslSettings(final ClusterConfig clusterConfig, final Map<String, Object> config)", "full_signature": "private void applySaslSettings(final ClusterConfig clusterConfig, final Map<String, Object> config)", "class_method_signature": "KafkaClientConfigUtil.applySaslSettings(final ClusterConfig clusterConfig, final Map<String, Object> config)", "testcase": false, "constructor": false}, {"identifier": "getAllKafkaConsumerProperties", "parameters": "()", "modifiers": "public static", "return": "List<KafkaSettings>", "signature": "List<KafkaSettings> getAllKafkaConsumerProperties()", "full_signature": "public static List<KafkaSettings> getAllKafkaConsumerProperties()", "class_method_signature": "KafkaClientConfigUtil.getAllKafkaConsumerProperties()", "testcase": false, "constructor": false}], "file": "kafka-webview-ui/src/main/java/org/sourcelab/kafka/webview/ui/manager/kafka/KafkaClientConfigUtil.java"}, "focal_method": {"identifier": "applyCommonSettings", "parameters": "(final ClusterConfig clusterConfig, final String consumerId)", "modifiers": "public", "return": "Map<String, Object>", "body": "public Map<String, Object> applyCommonSettings(final ClusterConfig clusterConfig, final String consumerId) {\n        return applyCommonSettings(clusterConfig, consumerId, new HashMap<>());\n    }", "signature": "Map<String, Object> applyCommonSettings(final ClusterConfig clusterConfig, final String consumerId)", "full_signature": "public Map<String, Object> applyCommonSettings(final ClusterConfig clusterConfig, final String consumerId)", "class_method_signature": "KafkaClientConfigUtil.applyCommonSettings(final ClusterConfig clusterConfig, final String consumerId)", "testcase": false, "constructor": false, "invocations": ["applyCommonSettings"]}, "repository": {"repo_id": 106082622, "url": "https://github.com/SourceLabOrg/kafka-webview", "stars": 256, "created": "10/7/2017 8:28:45 AM +00:00", "updates": "2020-01-25T06:02:44+00:00", "fork": "False", "license": "licensed"}}