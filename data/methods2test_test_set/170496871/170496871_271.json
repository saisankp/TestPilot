{"test_class": {"identifier": "PrecisionTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/ml/src/test/java/org/apache/ignite/ml/selection/scoring/metric/classification/PrecisionTest.java"}, "test_case": {"identifier": "testScore", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testScore() {\n        Precision<Integer> scoreCalculator = new Precision<>(0);\n\n        LabelPairCursor<Integer> cursor = new TestLabelPairCursor<>(\n            Arrays.asList(1, 0, 1, 0, 1, 0),\n            Arrays.asList(1, 0, 0, 1, 1, 0)\n        );\n\n        double score = scoreCalculator.score(cursor.iterator());\n\n        assertEquals((double)2 / 3, score, 1e-12);\n    }", "signature": "void testScore()", "full_signature": "@Test public void testScore()", "class_method_signature": "PrecisionTest.testScore()", "testcase": true, "constructor": false, "invocations": ["asList", "asList", "score", "iterator", "assertEquals"]}, "focal_class": {"identifier": "Precision", "superclass": "extends ClassMetric<L>", "interfaces": "", "fields": [], "methods": [{"identifier": "Precision", "parameters": "(L clsLb)", "modifiers": "public", "return": "", "signature": " Precision(L clsLb)", "full_signature": "public  Precision(L clsLb)", "class_method_signature": "Precision.Precision(L clsLb)", "testcase": false, "constructor": true}, {"identifier": "score", "parameters": "(Iterator<LabelPair<L>> it)", "modifiers": "@Override public", "return": "double", "signature": "double score(Iterator<LabelPair<L>> it)", "full_signature": "@Override public double score(Iterator<LabelPair<L>> it)", "class_method_signature": "Precision.score(Iterator<LabelPair<L>> it)", "testcase": false, "constructor": false}, {"identifier": "name", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String name()", "full_signature": "@Override public String name()", "class_method_signature": "Precision.name()", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/selection/scoring/metric/classification/Precision.java"}, "focal_method": {"identifier": "score", "parameters": "(Iterator<LabelPair<L>> it)", "modifiers": "@Override public", "return": "double", "body": "@Override public double score(Iterator<LabelPair<L>> it) {\n        if (clsLb != null) {\n            long tp = 0;\n            long fp = 0;\n\n            while (it.hasNext()) {\n                LabelPair<L> e = it.next();\n\n                L prediction = e.getPrediction();\n                L truth = e.getTruth();\n\n                if (clsLb.equals(prediction)) {\n                    if (prediction.equals(truth))\n                        tp++;\n                    else\n                        fp++;\n                }\n            }\n            long denominator = tp + fp;\n\n            if (denominator == 0)\n                return 1; // according to https://github.com/dice-group/gerbil/wiki/Precision,-Recall-and-F1-measure\n\n            return (double)tp / denominator;\n        }\n        else\n            return Double.NaN;\n    }", "signature": "double score(Iterator<LabelPair<L>> it)", "full_signature": "@Override public double score(Iterator<LabelPair<L>> it)", "class_method_signature": "Precision.score(Iterator<LabelPair<L>> it)", "testcase": false, "constructor": false, "invocations": ["hasNext", "next", "getPrediction", "getTruth", "equals", "equals"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}