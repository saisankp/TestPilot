{"test_class": {"identifier": "DefaultLocalMasterInstanceResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final LocalMasterReadinessResolver localMasterReadinessResolver = mock(LocalMasterReadinessResolver.class);", "modifier": "private final", "type": "LocalMasterReadinessResolver", "declarator": "localMasterReadinessResolver = mock(LocalMasterReadinessResolver.class)", "var_name": "localMasterReadinessResolver"}, {"original_string": "private MasterInstance initial = MasterInstanceGenerator.masterInstances(MasterState.Starting, \"testId\").getValue();", "modifier": "private", "type": "MasterInstance", "declarator": "initial = MasterInstanceGenerator.masterInstances(MasterState.Starting, \"testId\").getValue()", "var_name": "initial"}, {"original_string": "private DefaultLocalMasterInstanceResolver resolver;", "modifier": "private", "type": "DefaultLocalMasterInstanceResolver", "declarator": "resolver", "var_name": "resolver"}, {"original_string": "private final EmitterProcessor<ReadinessStatus> readinessUpdatesProcessor = EmitterProcessor.create(1);", "modifier": "private final", "type": "EmitterProcessor<ReadinessStatus>", "declarator": "readinessUpdatesProcessor = EmitterProcessor.create(1)", "var_name": "readinessUpdatesProcessor"}], "file": "titus-server-master/src/test/java/com/netflix/titus/master/supervisor/service/resolver/DefaultLocalMasterInstanceResolverTest.java"}, "test_case": {"identifier": "testResolver", "parameters": "()", "modifiers": "@Test(timeout = 30_000) public", "return": "void", "body": "@Test(timeout = 30_000)\n    public void testResolver() {\n        Iterator<MasterInstance> it = resolver.observeLocalMasterInstanceUpdates().toIterable().iterator();\n\n        readinessUpdatesProcessor.onNext(newReadinessStatus(ReadinessState.NotReady));\n        assertThat(it.next().getStatus().getState()).isEqualTo(MasterState.Starting);\n\n        readinessUpdatesProcessor.onNext(newReadinessStatus(ReadinessState.Enabled));\n        assertThat(it.next().getStatus().getState()).isEqualTo(MasterState.NonLeader);\n    }", "signature": "void testResolver()", "full_signature": "@Test(timeout = 30_000) public void testResolver()", "class_method_signature": "DefaultLocalMasterInstanceResolverTest.testResolver()", "testcase": true, "constructor": false, "invocations": ["iterator", "toIterable", "observeLocalMasterInstanceUpdates", "onNext", "newReadinessStatus", "isEqualTo", "assertThat", "getState", "getStatus", "next", "onNext", "newReadinessStatus", "isEqualTo", "assertThat", "getState", "getStatus", "next"]}, "focal_class": {"identifier": "DefaultLocalMasterInstanceResolver", "superclass": "", "interfaces": "implements LocalMasterInstanceResolver", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(DefaultLocalMasterInstanceResolver.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(DefaultLocalMasterInstanceResolver.class)", "var_name": "logger"}, {"original_string": "private final LocalMasterReadinessResolver localMasterReadinessResolver;", "modifier": "private final", "type": "LocalMasterReadinessResolver", "declarator": "localMasterReadinessResolver", "var_name": "localMasterReadinessResolver"}, {"original_string": "private final MasterInstance initial;", "modifier": "private final", "type": "MasterInstance", "declarator": "initial", "var_name": "initial"}], "methods": [{"identifier": "DefaultLocalMasterInstanceResolver", "parameters": "(LocalMasterReadinessResolver localMasterReadinessResolver,\n                                              MasterInstance initial)", "modifiers": "@Inject public", "return": "", "signature": " DefaultLocalMasterInstanceResolver(LocalMasterReadinessResolver localMasterReadinessResolver,\n                                              MasterInstance initial)", "full_signature": "@Inject public  DefaultLocalMasterInstanceResolver(LocalMasterReadinessResolver localMasterReadinessResolver,\n                                              MasterInstance initial)", "class_method_signature": "DefaultLocalMasterInstanceResolver.DefaultLocalMasterInstanceResolver(LocalMasterReadinessResolver localMasterReadinessResolver,\n                                              MasterInstance initial)", "testcase": false, "constructor": true}, {"identifier": "observeLocalMasterInstanceUpdates", "parameters": "()", "modifiers": "@Override public", "return": "Flux<MasterInstance>", "signature": "Flux<MasterInstance> observeLocalMasterInstanceUpdates()", "full_signature": "@Override public Flux<MasterInstance> observeLocalMasterInstanceUpdates()", "class_method_signature": "DefaultLocalMasterInstanceResolver.observeLocalMasterInstanceUpdates()", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "(@Nullable MasterInstance previousMasterInstance, ReadinessStatus currentReadinessStatus)", "modifiers": "private", "return": "Optional<MasterInstance>", "signature": "Optional<MasterInstance> refresh(@Nullable MasterInstance previousMasterInstance, ReadinessStatus currentReadinessStatus)", "full_signature": "private Optional<MasterInstance> refresh(@Nullable MasterInstance previousMasterInstance, ReadinessStatus currentReadinessStatus)", "class_method_signature": "DefaultLocalMasterInstanceResolver.refresh(@Nullable MasterInstance previousMasterInstance, ReadinessStatus currentReadinessStatus)", "testcase": false, "constructor": false}], "file": "titus-server-master/src/main/java/com/netflix/titus/master/supervisor/service/resolver/DefaultLocalMasterInstanceResolver.java"}, "focal_method": {"identifier": "observeLocalMasterInstanceUpdates", "parameters": "()", "modifiers": "@Override public", "return": "Flux<MasterInstance>", "body": "@Override\n    public Flux<MasterInstance> observeLocalMasterInstanceUpdates() {\n        return Flux.defer(() -> {\n            AtomicReference<MasterInstance> lastRef = new AtomicReference<>(initial);\n            return localMasterReadinessResolver.observeLocalMasterReadinessUpdates()\n                    .flatMap(update -> {\n                        Optional<MasterInstance> refreshedOpt = refresh(lastRef.get(), update);\n                        if (refreshedOpt.isPresent()) {\n                            MasterInstance refreshed = refreshedOpt.get();\n                            lastRef.set(refreshed);\n                            return Flux.just(refreshed);\n                        }\n                        return Flux.empty();\n                    });\n        });\n    }", "signature": "Flux<MasterInstance> observeLocalMasterInstanceUpdates()", "full_signature": "@Override public Flux<MasterInstance> observeLocalMasterInstanceUpdates()", "class_method_signature": "DefaultLocalMasterInstanceResolver.observeLocalMasterInstanceUpdates()", "testcase": false, "constructor": false, "invocations": ["defer", "flatMap", "observeLocalMasterReadinessUpdates", "refresh", "get", "isPresent", "get", "set", "just", "empty"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}