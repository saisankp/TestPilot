{"test_class": {"identifier": "SignatureQuotientGraphTest", "superclass": "extends AbstractSignatureTest", "interfaces": "", "fields": [], "file": "descriptor/signature/src/test/java/org/openscience/cdk/signature/SignatureQuotientGraphTest.java"}, "test_case": {"identifier": "isConnectedTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isConnectedTest() {\n        IAtomContainer singleBond = builder.newInstance(IAtomContainer.class);\n        singleBond.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        singleBond.addAtom(builder.newInstance(IAtom.class, \"C\"));\n        singleBond.addBond(0, 1, IBond.Order.SINGLE);\n        SignatureQuotientGraph quotientGraph = new SignatureQuotientGraph(singleBond);\n        Assert.assertTrue(quotientGraph.isConnected(0, 1));\n    }", "signature": "void isConnectedTest()", "full_signature": "@Test public void isConnectedTest()", "class_method_signature": "SignatureQuotientGraphTest.isConnectedTest()", "testcase": true, "constructor": false, "invocations": ["newInstance", "addAtom", "newInstance", "addAtom", "newInstance", "addBond", "assertTrue", "isConnected"]}, "focal_class": {"identifier": "SignatureQuotientGraph", "superclass": "extends AbstractQuotientGraph", "interfaces": "", "fields": [{"original_string": "private IAtomContainer atomContainer;", "modifier": "private", "type": "IAtomContainer", "declarator": "atomContainer", "var_name": "atomContainer"}], "methods": [{"identifier": "SignatureQuotientGraph", "parameters": "(IAtomContainer atomContainer)", "modifiers": "public", "return": "", "signature": " SignatureQuotientGraph(IAtomContainer atomContainer)", "full_signature": "public  SignatureQuotientGraph(IAtomContainer atomContainer)", "class_method_signature": "SignatureQuotientGraph.SignatureQuotientGraph(IAtomContainer atomContainer)", "testcase": false, "constructor": true}, {"identifier": "SignatureQuotientGraph", "parameters": "(IAtomContainer atomContainer, int height)", "modifiers": "public", "return": "", "signature": " SignatureQuotientGraph(IAtomContainer atomContainer, int height)", "full_signature": "public  SignatureQuotientGraph(IAtomContainer atomContainer, int height)", "class_method_signature": "SignatureQuotientGraph.SignatureQuotientGraph(IAtomContainer atomContainer, int height)", "testcase": false, "constructor": true}, {"identifier": "isConnected", "parameters": "(int index1, int index2)", "modifiers": "@Override /** {@inheritDoc} */ public", "return": "boolean", "signature": "boolean isConnected(int index1, int index2)", "full_signature": "@Override /** {@inheritDoc} */ public boolean isConnected(int index1, int index2)", "class_method_signature": "SignatureQuotientGraph.isConnected(int index1, int index2)", "testcase": false, "constructor": false}], "file": "descriptor/signature/src/main/java/org/openscience/cdk/signature/SignatureQuotientGraph.java"}, "focal_method": {"identifier": "isConnected", "parameters": "(int index1, int index2)", "modifiers": "@Override /** {@inheritDoc} */ public", "return": "boolean", "body": "@Override\n    /** {@inheritDoc} */\n    public boolean isConnected(int index1, int index2) {\n        IAtom atom1 = atomContainer.getAtom(index1);\n        IAtom atom2 = atomContainer.getAtom(index2);\n        return atomContainer.getBond(atom1, atom2) != null;\n    }", "signature": "boolean isConnected(int index1, int index2)", "full_signature": "@Override /** {@inheritDoc} */ public boolean isConnected(int index1, int index2)", "class_method_signature": "SignatureQuotientGraph.isConnected(int index1, int index2)", "testcase": false, "constructor": false, "invocations": ["getAtom", "getAtom", "getBond"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}