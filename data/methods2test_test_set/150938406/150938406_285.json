{"test_class": {"identifier": "LazyEvaluationTest", "superclass": "extends BaseLazyTest", "interfaces": "", "fields": [], "file": "core/src/test/java/com/alibaba/alink/common/lazy/LazyEvaluationTest.java"}, "test_case": {"identifier": "testExceptionNoValue", "parameters": "()", "modifiers": "@Test(expected = RuntimeException.class) public", "return": "void", "body": "@Test(expected = RuntimeException.class)\n    public void testExceptionNoValue() {\n        LazyEvaluation<Long> lazyLong = new LazyEvaluation<>();\n        lazyLong.getLatestValue();\n        System.out.println(\"latest value: \" + lazyLong.getLatestValue());\n    }", "signature": "void testExceptionNoValue()", "full_signature": "@Test(expected = RuntimeException.class) public void testExceptionNoValue()", "class_method_signature": "LazyEvaluationTest.testExceptionNoValue()", "testcase": true, "constructor": false, "invocations": ["getLatestValue", "println", "getLatestValue"]}, "focal_class": {"identifier": "LazyEvaluation", "superclass": "", "interfaces": "", "fields": [{"original_string": "ReplaySubject<T> replaySubject;", "modifier": "", "type": "ReplaySubject<T>", "declarator": "replaySubject", "var_name": "replaySubject"}, {"original_string": "private Throwable throwable = null;", "modifier": "private", "type": "Throwable", "declarator": "throwable = null", "var_name": "throwable"}], "methods": [{"identifier": "LazyEvaluation", "parameters": "()", "modifiers": "public", "return": "", "signature": " LazyEvaluation()", "full_signature": "public  LazyEvaluation()", "class_method_signature": "LazyEvaluation.LazyEvaluation()", "testcase": false, "constructor": true}, {"identifier": "addCallback", "parameters": "(Consumer<T> fn)", "modifiers": "public", "return": "void", "signature": "void addCallback(Consumer<T> fn)", "full_signature": "public void addCallback(Consumer<T> fn)", "class_method_signature": "LazyEvaluation.addCallback(Consumer<T> fn)", "testcase": false, "constructor": false}, {"identifier": "addCallbacks", "parameters": "(List<Consumer<T>> callbacks)", "modifiers": "public", "return": "void", "signature": "void addCallbacks(List<Consumer<T>> callbacks)", "full_signature": "public void addCallbacks(List<Consumer<T>> callbacks)", "class_method_signature": "LazyEvaluation.addCallbacks(List<Consumer<T>> callbacks)", "testcase": false, "constructor": false}, {"identifier": "addValue", "parameters": "(T v)", "modifiers": "public", "return": "void", "signature": "void addValue(T v)", "full_signature": "public void addValue(T v)", "class_method_signature": "LazyEvaluation.addValue(T v)", "testcase": false, "constructor": false}, {"identifier": "getLatestValue", "parameters": "()", "modifiers": "public", "return": "T", "signature": "T getLatestValue()", "full_signature": "public T getLatestValue()", "class_method_signature": "LazyEvaluation.getLatestValue()", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/alibaba/alink/common/lazy/LazyEvaluation.java"}, "focal_method": {"identifier": "getLatestValue", "parameters": "()", "modifiers": "public", "return": "T", "body": "public T getLatestValue() {\n        if (replaySubject.hasValue()) {\n            return replaySubject.getValue();\n        } else {\n            throw new RuntimeException(\"Result not set\");\n        }\n    }", "signature": "T getLatestValue()", "full_signature": "public T getLatestValue()", "class_method_signature": "LazyEvaluation.getLatestValue()", "testcase": false, "constructor": false, "invocations": ["hasValue", "getValue"]}, "repository": {"repo_id": 150938406, "url": "https://github.com/alibaba/Alink", "stars": 1923, "created": "9/30/2018 6:36:11 AM +00:00", "updates": "2020-01-27T10:24:34+00:00", "fork": "False", "license": "licensed"}}