{"test_class": {"identifier": "RaceTest", "superclass": "", "interfaces": "", "fields": [], "file": "racing-car-katas/Leaderboard/src/test/java/tddmicroexercises/leaderboard/RaceTest.java"}, "test_case": {"identifier": "isShouldCalculateDriverPoints", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void isShouldCalculateDriverPoints() {\n        Assert.assertEquals(25, TestData.race1.getPoints(TestData.driver1));\n        Assert.assertEquals(18, TestData.race1.getPoints(TestData.driver2));\n        Assert.assertEquals(15, TestData.race1.getPoints(TestData.driver3));\n    }", "signature": "void isShouldCalculateDriverPoints()", "full_signature": "@Test public void isShouldCalculateDriverPoints()", "class_method_signature": "RaceTest.isShouldCalculateDriverPoints()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getPoints", "assertEquals", "getPoints", "assertEquals", "getPoints"]}, "focal_class": {"identifier": "Race", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Integer[] POINTS = new Integer[]{25, 18, 15};", "modifier": "private static final", "type": "Integer[]", "declarator": "POINTS = new Integer[]{25, 18, 15}", "var_name": "POINTS"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final List<Driver> results;", "modifier": "private final", "type": "List<Driver>", "declarator": "results", "var_name": "results"}, {"original_string": "private final Map<Driver, String> driverNames;", "modifier": "private final", "type": "Map<Driver, String>", "declarator": "driverNames", "var_name": "driverNames"}], "methods": [{"identifier": "Race", "parameters": "(String name, Driver... drivers)", "modifiers": "public", "return": "", "signature": " Race(String name, Driver... drivers)", "full_signature": "public  Race(String name, Driver... drivers)", "class_method_signature": "Race.Race(String name, Driver... drivers)", "testcase": false, "constructor": true}, {"identifier": "position", "parameters": "(Driver driver)", "modifiers": "public", "return": "int", "signature": "int position(Driver driver)", "full_signature": "public int position(Driver driver)", "class_method_signature": "Race.position(Driver driver)", "testcase": false, "constructor": false}, {"identifier": "getPoints", "parameters": "(Driver driver)", "modifiers": "public", "return": "int", "signature": "int getPoints(Driver driver)", "full_signature": "public int getPoints(Driver driver)", "class_method_signature": "Race.getPoints(Driver driver)", "testcase": false, "constructor": false}, {"identifier": "getResults", "parameters": "()", "modifiers": "public", "return": "List<Driver>", "signature": "List<Driver> getResults()", "full_signature": "public List<Driver> getResults()", "class_method_signature": "Race.getResults()", "testcase": false, "constructor": false}, {"identifier": "getDriverName", "parameters": "(Driver driver)", "modifiers": "public", "return": "String", "signature": "String getDriverName(Driver driver)", "full_signature": "public String getDriverName(Driver driver)", "class_method_signature": "Race.getDriverName(Driver driver)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Race.toString()", "testcase": false, "constructor": false}], "file": "racing-car-katas/Leaderboard/src/main/java/tddmicroexercises/leaderboard/Race.java"}, "focal_method": {"identifier": "getPoints", "parameters": "(Driver driver)", "modifiers": "public", "return": "int", "body": "public int getPoints(Driver driver) {\n        return Race.POINTS[position(driver)];\n    }", "signature": "int getPoints(Driver driver)", "full_signature": "public int getPoints(Driver driver)", "class_method_signature": "Race.getPoints(Driver driver)", "testcase": false, "constructor": false, "invocations": ["position"]}, "repository": {"repo_id": 6509909, "url": "https://github.com/novoda/dojos", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 72, "size": 12987, "license": "licensed"}}