{"test_class": {"identifier": "StringUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "data-client/src/test/java/org/wikipedia/util/StringUtilTest.java"}, "test_case": {"identifier": "testHasSectionAnchor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHasSectionAnchor() {\n        assertThat(StringUtil.hasSectionAnchor(\"te_st\"), is(false));\n        assertThat(StringUtil.hasSectionAnchor(\"#te_st\"), is(true));\n    }", "signature": "void testHasSectionAnchor()", "full_signature": "@Test public void testHasSectionAnchor()", "class_method_signature": "StringUtilTest.testHasSectionAnchor()", "testcase": true, "constructor": false, "invocations": ["assertThat", "hasSectionAnchor", "is", "assertThat", "hasSectionAnchor", "is"]}, "focal_class": {"identifier": "StringUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CSV_DELIMITER = \",\";", "modifier": "private static final", "type": "String", "declarator": "CSV_DELIMITER = \",\"", "var_name": "CSV_DELIMITER"}], "methods": [{"identifier": "listToCsv", "parameters": "(@NonNull List<String> list)", "modifiers": "@NonNull public static", "return": "String", "signature": "String listToCsv(@NonNull List<String> list)", "full_signature": "@NonNull public static String listToCsv(@NonNull List<String> list)", "class_method_signature": "StringUtil.listToCsv(@NonNull List<String> list)", "testcase": false, "constructor": false}, {"identifier": "csvToList", "parameters": "(@NonNull String csv)", "modifiers": "@NonNull public static", "return": "List<String>", "signature": "List<String> csvToList(@NonNull String csv)", "full_signature": "@NonNull public static List<String> csvToList(@NonNull String csv)", "class_method_signature": "StringUtil.csvToList(@NonNull String csv)", "testcase": false, "constructor": false}, {"identifier": "delimiterStringToList", "parameters": "(@NonNull String delimitedString,\n                                                     @NonNull String delimiter)", "modifiers": "@NonNull public static", "return": "List<String>", "signature": "List<String> delimiterStringToList(@NonNull String delimitedString,\n                                                     @NonNull String delimiter)", "full_signature": "@NonNull public static List<String> delimiterStringToList(@NonNull String delimitedString,\n                                                     @NonNull String delimiter)", "class_method_signature": "StringUtil.delimiterStringToList(@NonNull String delimitedString,\n                                                     @NonNull String delimiter)", "testcase": false, "constructor": false}, {"identifier": "md5string", "parameters": "(@NonNull String s)", "modifiers": "@NonNull public static", "return": "String", "signature": "String md5string(@NonNull String s)", "full_signature": "@NonNull public static String md5string(@NonNull String s)", "class_method_signature": "StringUtil.md5string(@NonNull String s)", "testcase": false, "constructor": false}, {"identifier": "strip", "parameters": "(@Nullable CharSequence str)", "modifiers": "@NonNull public static", "return": "CharSequence", "signature": "CharSequence strip(@Nullable CharSequence str)", "full_signature": "@NonNull public static CharSequence strip(@Nullable CharSequence str)", "class_method_signature": "StringUtil.strip(@Nullable CharSequence str)", "testcase": false, "constructor": false}, {"identifier": "intToHexStr", "parameters": "(int i)", "modifiers": "@NonNull public static", "return": "String", "signature": "String intToHexStr(int i)", "full_signature": "@NonNull public static String intToHexStr(int i)", "class_method_signature": "StringUtil.intToHexStr(int i)", "testcase": false, "constructor": false}, {"identifier": "addUnderscores", "parameters": "(@NonNull String text)", "modifiers": "public static", "return": "String", "signature": "String addUnderscores(@NonNull String text)", "full_signature": "public static String addUnderscores(@NonNull String text)", "class_method_signature": "StringUtil.addUnderscores(@NonNull String text)", "testcase": false, "constructor": false}, {"identifier": "removeUnderscores", "parameters": "(@NonNull String text)", "modifiers": "public static", "return": "String", "signature": "String removeUnderscores(@NonNull String text)", "full_signature": "public static String removeUnderscores(@NonNull String text)", "class_method_signature": "StringUtil.removeUnderscores(@NonNull String text)", "testcase": false, "constructor": false}, {"identifier": "hasSectionAnchor", "parameters": "(@NonNull String text)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasSectionAnchor(@NonNull String text)", "full_signature": "public static boolean hasSectionAnchor(@NonNull String text)", "class_method_signature": "StringUtil.hasSectionAnchor(@NonNull String text)", "testcase": false, "constructor": false}, {"identifier": "removeSectionAnchor", "parameters": "(String text)", "modifiers": "public static", "return": "String", "signature": "String removeSectionAnchor(String text)", "full_signature": "public static String removeSectionAnchor(String text)", "class_method_signature": "StringUtil.removeSectionAnchor(String text)", "testcase": false, "constructor": false}, {"identifier": "removeNamespace", "parameters": "(@NonNull String text)", "modifiers": "public static", "return": "String", "signature": "String removeNamespace(@NonNull String text)", "full_signature": "public static String removeNamespace(@NonNull String text)", "class_method_signature": "StringUtil.removeNamespace(@NonNull String text)", "testcase": false, "constructor": false}, {"identifier": "removeHTMLTags", "parameters": "(@NonNull String text)", "modifiers": "public static", "return": "String", "signature": "String removeHTMLTags(@NonNull String text)", "full_signature": "public static String removeHTMLTags(@NonNull String text)", "class_method_signature": "StringUtil.removeHTMLTags(@NonNull String text)", "testcase": false, "constructor": false}, {"identifier": "sanitizeText", "parameters": "(@NonNull String selectedText)", "modifiers": "public static", "return": "String", "signature": "String sanitizeText(@NonNull String selectedText)", "full_signature": "public static String sanitizeText(@NonNull String selectedText)", "class_method_signature": "StringUtil.sanitizeText(@NonNull String selectedText)", "testcase": false, "constructor": false}, {"identifier": "normalizedEquals", "parameters": "(@Nullable String str1, @Nullable String str2)", "modifiers": "public static", "return": "boolean", "signature": "boolean normalizedEquals(@Nullable String str1, @Nullable String str2)", "full_signature": "public static boolean normalizedEquals(@Nullable String str1, @Nullable String str2)", "class_method_signature": "StringUtil.normalizedEquals(@Nullable String str1, @Nullable String str2)", "testcase": false, "constructor": false}, {"identifier": "fromHtml", "parameters": "(@Nullable String source)", "modifiers": "@NonNull public static", "return": "Spanned", "signature": "Spanned fromHtml(@Nullable String source)", "full_signature": "@NonNull public static Spanned fromHtml(@Nullable String source)", "class_method_signature": "StringUtil.fromHtml(@Nullable String source)", "testcase": false, "constructor": false}, {"identifier": "boldenSubstrings", "parameters": "(@NonNull String text, @NonNull List<String> subStrings)", "modifiers": "@NonNull public static", "return": "SpannableStringBuilder", "signature": "SpannableStringBuilder boldenSubstrings(@NonNull String text, @NonNull List<String> subStrings)", "full_signature": "@NonNull public static SpannableStringBuilder boldenSubstrings(@NonNull String text, @NonNull List<String> subStrings)", "class_method_signature": "StringUtil.boldenSubstrings(@NonNull String text, @NonNull List<String> subStrings)", "testcase": false, "constructor": false}, {"identifier": "highlightEditText", "parameters": "(@NonNull EditText editText, @NonNull String parentText, @NonNull String highlightText)", "modifiers": "public static", "return": "void", "signature": "void highlightEditText(@NonNull EditText editText, @NonNull String parentText, @NonNull String highlightText)", "full_signature": "public static void highlightEditText(@NonNull EditText editText, @NonNull String parentText, @NonNull String highlightText)", "class_method_signature": "StringUtil.highlightEditText(@NonNull EditText editText, @NonNull String parentText, @NonNull String highlightText)", "testcase": false, "constructor": false}, {"identifier": "boldenKeywordText", "parameters": "(@NonNull TextView textView, @NonNull String parentText, @Nullable String searchQuery)", "modifiers": "public static", "return": "void", "signature": "void boldenKeywordText(@NonNull TextView textView, @NonNull String parentText, @Nullable String searchQuery)", "full_signature": "public static void boldenKeywordText(@NonNull TextView textView, @NonNull String parentText, @Nullable String searchQuery)", "class_method_signature": "StringUtil.boldenKeywordText(@NonNull TextView textView, @NonNull String parentText, @Nullable String searchQuery)", "testcase": false, "constructor": false}, {"identifier": "indexOf", "parameters": "(@NonNull String original, @Nullable String search)", "modifiers": "private static", "return": "int", "signature": "int indexOf(@NonNull String original, @Nullable String search)", "full_signature": "private static int indexOf(@NonNull String original, @Nullable String search)", "class_method_signature": "StringUtil.indexOf(@NonNull String original, @Nullable String search)", "testcase": false, "constructor": false}, {"identifier": "getBase26String", "parameters": "(@IntRange(from = 1) int number)", "modifiers": "@NonNull public static", "return": "String", "signature": "String getBase26String(@IntRange(from = 1) int number)", "full_signature": "@NonNull public static String getBase26String(@IntRange(from = 1) int number)", "class_method_signature": "StringUtil.getBase26String(@IntRange(from = 1) int number)", "testcase": false, "constructor": false}, {"identifier": "listToJsonArrayString", "parameters": "(@NonNull List<String> list)", "modifiers": "@NonNull public static", "return": "String", "signature": "String listToJsonArrayString(@NonNull List<String> list)", "full_signature": "@NonNull public static String listToJsonArrayString(@NonNull List<String> list)", "class_method_signature": "StringUtil.listToJsonArrayString(@NonNull List<String> list)", "testcase": false, "constructor": false}, {"identifier": "stringToListMapToJSONString", "parameters": "(@Nullable Map<String, List<Integer>> map)", "modifiers": "public static", "return": "String", "signature": "String stringToListMapToJSONString(@Nullable Map<String, List<Integer>> map)", "full_signature": "public static String stringToListMapToJSONString(@Nullable Map<String, List<Integer>> map)", "class_method_signature": "StringUtil.stringToListMapToJSONString(@Nullable Map<String, List<Integer>> map)", "testcase": false, "constructor": false}, {"identifier": "listToJSONString", "parameters": "(@Nullable List<Integer> list)", "modifiers": "public static", "return": "String", "signature": "String listToJSONString(@Nullable List<Integer> list)", "full_signature": "public static String listToJSONString(@Nullable List<Integer> list)", "class_method_signature": "StringUtil.listToJSONString(@Nullable List<Integer> list)", "testcase": false, "constructor": false}, {"identifier": "StringUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " StringUtil()", "full_signature": "private  StringUtil()", "class_method_signature": "StringUtil.StringUtil()", "testcase": false, "constructor": true}], "file": "data-client/src/main/java/org/wikipedia/util/StringUtil.java"}, "focal_method": {"identifier": "hasSectionAnchor", "parameters": "(@NonNull String text)", "modifiers": "public static", "return": "boolean", "body": "public static boolean hasSectionAnchor(@NonNull String text) {\n        return text.contains(\"#\");\n    }", "signature": "boolean hasSectionAnchor(@NonNull String text)", "full_signature": "public static boolean hasSectionAnchor(@NonNull String text)", "class_method_signature": "StringUtil.hasSectionAnchor(@NonNull String text)", "testcase": false, "constructor": false, "invocations": ["contains"]}, "repository": {"repo_id": 42032884, "url": "https://github.com/commons-app/apps-android-commons", "stars": 546, "created": "9/7/2015 5:23:27 AM +00:00", "updates": "2020-01-27T16:36:58+00:00", "fork": "False", "license": "licensed"}}