{"test_class": {"identifier": "SignatureClipperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private COSDictionary dictionary;", "modifier": "private", "type": "COSDictionary", "declarator": "dictionary", "var_name": "dictionary"}], "file": "sejda-sambox/src/test/java/org/sejda/impl/sambox/component/SignatureClipperTest.java"}, "test_case": {"identifier": "clipWidget", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void clipWidget() {\n        PDAnnotationWidget widget = new PDAnnotationWidget(dictionary);\n        SignatureClipper.clipSignatures(Arrays.asList(widget));\n        assertFalse(widget.getCOSObject().containsKey(COSName.V));\n        assertFalse(widget.getCOSObject().containsKey(COSName.SV));\n        assertFalse(widget.getCOSObject().containsKey(COSName.LOCK));\n    }", "signature": "void clipWidget()", "full_signature": "@Test public void clipWidget()", "class_method_signature": "SignatureClipperTest.clipWidget()", "testcase": true, "constructor": false, "invocations": ["clipSignatures", "asList", "assertFalse", "containsKey", "getCOSObject", "assertFalse", "containsKey", "getCOSObject", "assertFalse", "containsKey", "getCOSObject"]}, "focal_class": {"identifier": "SignatureClipper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(SignatureClipper.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(SignatureClipper.class)", "var_name": "LOG"}], "methods": [{"identifier": "SignatureClipper", "parameters": "()", "modifiers": "private", "return": "", "signature": " SignatureClipper()", "full_signature": "private  SignatureClipper()", "class_method_signature": "SignatureClipper.SignatureClipper()", "testcase": false, "constructor": true}, {"identifier": "clipSignatures", "parameters": "(Collection<PDAnnotation> annotations)", "modifiers": "public static", "return": "void", "signature": "void clipSignatures(Collection<PDAnnotation> annotations)", "full_signature": "public static void clipSignatures(Collection<PDAnnotation> annotations)", "class_method_signature": "SignatureClipper.clipSignatures(Collection<PDAnnotation> annotations)", "testcase": false, "constructor": false}, {"identifier": "clipSignatures", "parameters": "(PDDocument doc)", "modifiers": "public static", "return": "void", "signature": "void clipSignatures(PDDocument doc)", "full_signature": "public static void clipSignatures(PDDocument doc)", "class_method_signature": "SignatureClipper.clipSignatures(PDDocument doc)", "testcase": false, "constructor": false}, {"identifier": "clipSignature", "parameters": "(PDField field)", "modifiers": "public static", "return": "boolean", "signature": "boolean clipSignature(PDField field)", "full_signature": "public static boolean clipSignature(PDField field)", "class_method_signature": "SignatureClipper.clipSignature(PDField field)", "testcase": false, "constructor": false}, {"identifier": "clipSignature", "parameters": "(COSDictionary item)", "modifiers": "private static", "return": "void", "signature": "void clipSignature(COSDictionary item)", "full_signature": "private static void clipSignature(COSDictionary item)", "class_method_signature": "SignatureClipper.clipSignature(COSDictionary item)", "testcase": false, "constructor": false}], "file": "sejda-sambox/src/main/java/org/sejda/impl/sambox/component/SignatureClipper.java"}, "focal_method": {"identifier": "clipSignatures", "parameters": "(Collection<PDAnnotation> annotations)", "modifiers": "public static", "return": "void", "body": "public static void clipSignatures(Collection<PDAnnotation> annotations) {\n        if (nonNull(annotations)) {\n            for (PDAnnotation annotation : annotations) {\n                if (COSName.WIDGET.getName().equals(annotation.getSubtype())\n                        && COSName.SIG.equals(annotation.getCOSObject().getCOSName(COSName.FT))) {\n                    clipSignature(annotation.getCOSObject());\n                }\n            }\n        }\n    }", "signature": "void clipSignatures(Collection<PDAnnotation> annotations)", "full_signature": "public static void clipSignatures(Collection<PDAnnotation> annotations)", "class_method_signature": "SignatureClipper.clipSignatures(Collection<PDAnnotation> annotations)", "testcase": false, "constructor": false, "invocations": ["nonNull", "equals", "getName", "getSubtype", "equals", "getCOSName", "getCOSObject", "clipSignature", "getCOSObject"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}