{"test_class": {"identifier": "MainTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String MESSAGE_TEMPLATE = \"Main.integrate(%s, %f, %f);\";", "modifier": "private static final", "type": "String", "declarator": "MESSAGE_TEMPLATE = \"Main.integrate(%s, %f, %f);\"", "var_name": "MESSAGE_TEMPLATE"}, {"original_string": "private static Method integrate;", "modifier": "private static", "type": "Method", "declarator": "integrate", "var_name": "integrate"}, {"original_string": "private static Class<?> mainClass;", "modifier": "private static", "type": "Class<?>", "declarator": "mainClass", "var_name": "mainClass"}], "file": "section539/lesson14513/step49950/src/MainTest.java"}, "test_case": {"identifier": "integrateSample2", "parameters": "()", "modifiers": "@Test(timeout = 8000L) public", "return": "void", "body": "@Test(timeout = 8000L)\n    public void integrateSample2() throws Throwable {\n        integrate(x -> x, -458, 100, -99882.0004536563, \"x -> x\");\n    }", "signature": "void integrateSample2()", "full_signature": "@Test(timeout = 8000L) public void integrateSample2()", "class_method_signature": "MainTest.integrateSample2()", "testcase": true, "constructor": false, "invocations": ["integrate"]}, "focal_class": {"identifier": "Main", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "integrate", "parameters": "(DoubleUnaryOperator f, double a, double b)", "modifiers": "public static", "return": "double", "signature": "double integrate(DoubleUnaryOperator f, double a, double b)", "full_signature": "public static double integrate(DoubleUnaryOperator f, double a, double b)", "class_method_signature": "Main.integrate(DoubleUnaryOperator f, double a, double b)", "testcase": false, "constructor": false}], "file": "section539/lesson14513/step49950/src/Main.java"}, "focal_method": {"identifier": "integrate", "parameters": "(DoubleUnaryOperator f, double a, double b)", "modifiers": "public static", "return": "double", "body": "public static double integrate(DoubleUnaryOperator f, double a, double b) {\n        return f.applyAsDouble(a);\n    }", "signature": "double integrate(DoubleUnaryOperator f, double a, double b)", "full_signature": "public static double integrate(DoubleUnaryOperator f, double a, double b)", "class_method_signature": "Main.integrate(DoubleUnaryOperator f, double a, double b)", "testcase": false, "constructor": false, "invocations": ["applyAsDouble"]}, "repository": {"repo_id": 69660791, "url": "https://github.com/meanmail/java_base", "language": "Java", "is_fork": false, "fork_count": 17, "stargazer_count": 24, "size": 432, "license": "licensed"}}