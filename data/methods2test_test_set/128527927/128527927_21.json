{"test_class": {"identifier": "TestPalindrome", "superclass": "", "interfaces": "", "fields": [{"original_string": "static Palindrome palindrome = new Palindrome();", "modifier": "static", "type": "Palindrome", "declarator": "palindrome = new Palindrome()", "var_name": "palindrome"}], "file": "proj1b/TestPalindrome.java"}, "test_case": {"identifier": "testWordToDeque", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWordToDeque() {\n        Deque d = palindrome.wordToDeque(\"persiflage\");\n        String actual = \"\";\n        for (int i = 0; i < \"persiflage\".length(); i++) {\n            actual += d.removeFirst();\n        }\n        assertEquals(\"persiflage\", actual);\n    }", "signature": "void testWordToDeque()", "full_signature": "@Test public void testWordToDeque()", "class_method_signature": "TestPalindrome.testWordToDeque()", "testcase": true, "constructor": false, "invocations": ["wordToDeque", "length", "removeFirst", "assertEquals"]}, "focal_class": {"identifier": "Palindrome", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "wordToDeque", "parameters": "(String word)", "modifiers": "public", "return": "Deque<Character>", "signature": "Deque<Character> wordToDeque(String word)", "full_signature": "public Deque<Character> wordToDeque(String word)", "class_method_signature": "Palindrome.wordToDeque(String word)", "testcase": false, "constructor": false}, {"identifier": "isPalindrome", "parameters": "(String word)", "modifiers": "public", "return": "boolean", "signature": "boolean isPalindrome(String word)", "full_signature": "public boolean isPalindrome(String word)", "class_method_signature": "Palindrome.isPalindrome(String word)", "testcase": false, "constructor": false}, {"identifier": "isPalindrome", "parameters": "(String word, CharacterComparator cc)", "modifiers": "public", "return": "boolean", "signature": "boolean isPalindrome(String word, CharacterComparator cc)", "full_signature": "public boolean isPalindrome(String word, CharacterComparator cc)", "class_method_signature": "Palindrome.isPalindrome(String word, CharacterComparator cc)", "testcase": false, "constructor": false}], "file": "proj1b/Palindrome.java"}, "focal_method": {"identifier": "wordToDeque", "parameters": "(String word)", "modifiers": "public", "return": "Deque<Character>", "body": "public Deque<Character> wordToDeque(String word) {\n        Deque<Character> deque = new LinkedListDeque<Character>();\n        for(int i = 0; i < word.length(); i++) {\n            deque.addLast(word.charAt(i));\n        }\n        return deque;\n    }", "signature": "Deque<Character> wordToDeque(String word)", "full_signature": "public Deque<Character> wordToDeque(String word)", "class_method_signature": "Palindrome.wordToDeque(String word)", "testcase": false, "constructor": false, "invocations": ["length", "addLast", "charAt"]}, "repository": {"repo_id": 128527927, "url": "https://github.com/shenzheyu/CS61B", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 21, "size": 2766, "license": "licensed"}}