{"test_class": {"identifier": "CompatibilityMatrixTest", "superclass": "", "interfaces": "", "fields": [], "file": "base/isomorphism/src/test/java/org/openscience/cdk/isomorphism/CompatibilityMatrixTest.java"}, "test_case": {"identifier": "markRow", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void markRow() throws Exception {\n        CompatibilityMatrix m = new CompatibilityMatrix(5, 5);\n        m.set(0, 1);\n        m.set(0, 2);\n        m.set(0, 4);\n        assertThat(m.fix()[0], is(new int[]{0, 1, 1, 0, 1}));\n        m.markRow(0, -1);\n        assertThat(m.fix()[0], is(new int[]{0, -1, -1, 0, -1}));\n    }", "signature": "void markRow()", "full_signature": "@Test public void markRow()", "class_method_signature": "CompatibilityMatrixTest.markRow()", "testcase": true, "constructor": false, "invocations": ["set", "set", "set", "assertThat", "fix", "is", "markRow", "assertThat", "fix", "is"]}, "focal_class": {"identifier": "CompatibilityMatrix", "superclass": "", "interfaces": "", "fields": [{"original_string": "final int[] data;", "modifier": "final", "type": "int[]", "declarator": "data", "var_name": "data"}, {"original_string": "final int   nRows, mCols;", "modifier": "final", "type": "int", "declarator": "nRows", "var_name": "nRows"}], "methods": [{"identifier": "CompatibilityMatrix", "parameters": "(int nRows, int mCols)", "modifiers": "", "return": "", "signature": " CompatibilityMatrix(int nRows, int mCols)", "full_signature": "  CompatibilityMatrix(int nRows, int mCols)", "class_method_signature": "CompatibilityMatrix.CompatibilityMatrix(int nRows, int mCols)", "testcase": false, "constructor": true}, {"identifier": "set", "parameters": "(int i, int j)", "modifiers": "", "return": "void", "signature": "void set(int i, int j)", "full_signature": " void set(int i, int j)", "class_method_signature": "CompatibilityMatrix.set(int i, int j)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int i)", "modifiers": "", "return": "boolean", "signature": "boolean get(int i)", "full_signature": " boolean get(int i)", "class_method_signature": "CompatibilityMatrix.get(int i)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int i, int j)", "modifiers": "", "return": "boolean", "signature": "boolean get(int i, int j)", "full_signature": " boolean get(int i, int j)", "class_method_signature": "CompatibilityMatrix.get(int i, int j)", "testcase": false, "constructor": false}, {"identifier": "mark", "parameters": "(int i, int j, int marking)", "modifiers": "", "return": "void", "signature": "void mark(int i, int j, int marking)", "full_signature": " void mark(int i, int j, int marking)", "class_method_signature": "CompatibilityMatrix.mark(int i, int j, int marking)", "testcase": false, "constructor": false}, {"identifier": "markRow", "parameters": "(int i, int marking)", "modifiers": "", "return": "void", "signature": "void markRow(int i, int marking)", "full_signature": " void markRow(int i, int marking)", "class_method_signature": "CompatibilityMatrix.markRow(int i, int marking)", "testcase": false, "constructor": false}, {"identifier": "resetRows", "parameters": "(int i, int marking)", "modifiers": "", "return": "void", "signature": "void resetRows(int i, int marking)", "full_signature": " void resetRows(int i, int marking)", "class_method_signature": "CompatibilityMatrix.resetRows(int i, int marking)", "testcase": false, "constructor": false}, {"identifier": "fix", "parameters": "()", "modifiers": "", "return": "int[][]", "signature": "int[][] fix()", "full_signature": " int[][] fix()", "class_method_signature": "CompatibilityMatrix.fix()", "testcase": false, "constructor": false}], "file": "base/isomorphism/src/main/java/org/openscience/cdk/isomorphism/CompatibilityMatrix.java"}, "focal_method": {"identifier": "markRow", "parameters": "(int i, int marking)", "modifiers": "", "return": "void", "body": "void markRow(int i, int marking) {\n        for (int j = (i * mCols), end = j + mCols; j < end; j++)\n            if (data[j] > 0) data[j] = marking;\n    }", "signature": "void markRow(int i, int marking)", "full_signature": " void markRow(int i, int marking)", "class_method_signature": "CompatibilityMatrix.markRow(int i, int marking)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}