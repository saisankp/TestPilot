{"test_class": {"identifier": "XPathExpressionFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "spring-xml/src/test/java/org/springframework/xml/xpath/XPathExpressionFactoryTest.java"}, "test_case": {"identifier": "testCreateEmptyXPathExpression", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testCreateEmptyXPathExpression() throws Exception {\n\t\ttry {\n\t\t\tXPathExpressionFactory.createXPathExpression(\"\");\n\t\t\tAssert.fail(\"Should have thrown an Exception\");\n\t\t} catch (IllegalArgumentException ex) {\n\t\t\t// expected\n\t\t}\n\t}", "signature": "void testCreateEmptyXPathExpression()", "full_signature": "@Test public void testCreateEmptyXPathExpression()", "class_method_signature": "XPathExpressionFactoryTest.testCreateEmptyXPathExpression()", "testcase": true, "constructor": false, "invocations": ["createXPathExpression", "fail"]}, "focal_class": {"identifier": "XPathExpressionFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Log logger = LogFactory.getLog(XPathExpressionFactory.class);", "modifier": "private static final", "type": "Log", "declarator": "logger = LogFactory.getLog(XPathExpressionFactory.class)", "var_name": "logger"}], "methods": [{"identifier": "createXPathExpression", "parameters": "(String expression)", "modifiers": "public static", "return": "XPathExpression", "signature": "XPathExpression createXPathExpression(String expression)", "full_signature": "public static XPathExpression createXPathExpression(String expression)", "class_method_signature": "XPathExpressionFactory.createXPathExpression(String expression)", "testcase": false, "constructor": false}, {"identifier": "createXPathExpression", "parameters": "(String expression, Map<String, String> namespaces)", "modifiers": "public static", "return": "XPathExpression", "signature": "XPathExpression createXPathExpression(String expression, Map<String, String> namespaces)", "full_signature": "public static XPathExpression createXPathExpression(String expression, Map<String, String> namespaces)", "class_method_signature": "XPathExpressionFactory.createXPathExpression(String expression, Map<String, String> namespaces)", "testcase": false, "constructor": false}], "file": "spring-xml/src/main/java/org/springframework/xml/xpath/XPathExpressionFactory.java"}, "focal_method": {"identifier": "createXPathExpression", "parameters": "(String expression)", "modifiers": "public static", "return": "XPathExpression", "body": "public static XPathExpression createXPathExpression(String expression)\n\t\t\tthrows IllegalStateException, XPathParseException {\n\t\treturn createXPathExpression(expression, Collections.<String, String> emptyMap());\n\t}", "signature": "XPathExpression createXPathExpression(String expression)", "full_signature": "public static XPathExpression createXPathExpression(String expression)", "class_method_signature": "XPathExpressionFactory.createXPathExpression(String expression)", "testcase": false, "constructor": false, "invocations": ["createXPathExpression", "emptyMap"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}