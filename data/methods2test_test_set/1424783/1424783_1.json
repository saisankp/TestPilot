{"test_class": {"identifier": "PlotStatisticsTest", "superclass": "extends AndroidplotTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    Canvas canvas;", "modifier": "@Mock", "type": "Canvas", "declarator": "canvas", "var_name": "canvas"}, {"original_string": "@Mock\n    Paint paint;", "modifier": "@Mock", "type": "Paint", "declarator": "paint", "var_name": "paint"}, {"original_string": "@Mock\n    Plot plot;", "modifier": "@Mock", "type": "Plot", "declarator": "plot", "var_name": "plot"}, {"original_string": "@InjectMocks\n    PlotStatistics ps = new PlotStatistics(1, true);", "modifier": "@InjectMocks", "type": "PlotStatistics", "declarator": "ps = new PlotStatistics(1, true)", "var_name": "ps"}], "file": "androidplot-core/src/test/java/com/androidplot/util/PlotStatisticsTest.java"}, "test_case": {"identifier": "annotatePlot_annotates_ifEnabled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void annotatePlot_annotates_ifEnabled() {\n        ps.onAfterDraw(plot, canvas);\n        verify(canvas).drawText(anyString(), anyFloat(), anyFloat(), any(Paint.class));\n    }", "signature": "void annotatePlot_annotates_ifEnabled()", "full_signature": "@Test public void annotatePlot_annotates_ifEnabled()", "class_method_signature": "PlotStatisticsTest.annotatePlot_annotates_ifEnabled()", "testcase": true, "constructor": false, "invocations": ["onAfterDraw", "drawText", "verify", "anyString", "anyFloat", "anyFloat", "any"]}, "focal_class": {"identifier": "PlotStatistics", "superclass": "", "interfaces": "implements PlotListener", "fields": [{"original_string": "long updateDelayMs;", "modifier": "", "type": "long", "declarator": "updateDelayMs", "var_name": "updateDelayMs"}, {"original_string": "long longestRenderMs = 0;", "modifier": "", "type": "long", "declarator": "longestRenderMs = 0", "var_name": "longestRenderMs"}, {"original_string": "long shortestRenderMs = 0;", "modifier": "", "type": "long", "declarator": "shortestRenderMs = 0", "var_name": "shortestRenderMs"}, {"original_string": "long lastStart = 0;", "modifier": "", "type": "long", "declarator": "lastStart = 0", "var_name": "lastStart"}, {"original_string": "long lastLatency = 0;", "modifier": "", "type": "long", "declarator": "lastLatency = 0", "var_name": "lastLatency"}, {"original_string": "long lastAnnotation;", "modifier": "", "type": "long", "declarator": "lastAnnotation", "var_name": "lastAnnotation"}, {"original_string": "long latencySamples = 0;", "modifier": "", "type": "long", "declarator": "latencySamples = 0", "var_name": "latencySamples"}, {"original_string": "long latencySum = 0;", "modifier": "", "type": "long", "declarator": "latencySum = 0", "var_name": "latencySum"}, {"original_string": "String annotationString = \"\";", "modifier": "", "type": "String", "declarator": "annotationString = \"\"", "var_name": "annotationString"}, {"original_string": "private boolean annotatePlotEnabled;", "modifier": "private", "type": "boolean", "declarator": "annotatePlotEnabled", "var_name": "annotatePlotEnabled"}, {"original_string": "private Paint paint;", "modifier": "private", "type": "Paint", "declarator": "paint", "var_name": "paint"}], "methods": [{"identifier": "PlotStatistics", "parameters": "(long updateDelayMs, boolean annotatePlotEnabled)", "modifiers": "public", "return": "", "signature": " PlotStatistics(long updateDelayMs, boolean annotatePlotEnabled)", "full_signature": "public  PlotStatistics(long updateDelayMs, boolean annotatePlotEnabled)", "class_method_signature": "PlotStatistics.PlotStatistics(long updateDelayMs, boolean annotatePlotEnabled)", "testcase": false, "constructor": true}, {"identifier": "setAnnotatePlotEnabled", "parameters": "(boolean enabled)", "modifiers": "public", "return": "void", "signature": "void setAnnotatePlotEnabled(boolean enabled)", "full_signature": "public void setAnnotatePlotEnabled(boolean enabled)", "class_method_signature": "PlotStatistics.setAnnotatePlotEnabled(boolean enabled)", "testcase": false, "constructor": false}, {"identifier": "resetCounters", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void resetCounters()", "full_signature": "private void resetCounters()", "class_method_signature": "PlotStatistics.resetCounters()", "testcase": false, "constructor": false}, {"identifier": "annotatePlot", "parameters": "(Plot source, Canvas canvas)", "modifiers": "private", "return": "void", "signature": "void annotatePlot(Plot source, Canvas canvas)", "full_signature": "private void annotatePlot(Plot source, Canvas canvas)", "class_method_signature": "PlotStatistics.annotatePlot(Plot source, Canvas canvas)", "testcase": false, "constructor": false}, {"identifier": "onBeforeDraw", "parameters": "(Plot source, Canvas canvas)", "modifiers": "@Override public", "return": "void", "signature": "void onBeforeDraw(Plot source, Canvas canvas)", "full_signature": "@Override public void onBeforeDraw(Plot source, Canvas canvas)", "class_method_signature": "PlotStatistics.onBeforeDraw(Plot source, Canvas canvas)", "testcase": false, "constructor": false}, {"identifier": "onAfterDraw", "parameters": "(Plot source, Canvas canvas)", "modifiers": "@Override public", "return": "void", "signature": "void onAfterDraw(Plot source, Canvas canvas)", "full_signature": "@Override public void onAfterDraw(Plot source, Canvas canvas)", "class_method_signature": "PlotStatistics.onAfterDraw(Plot source, Canvas canvas)", "testcase": false, "constructor": false}, {"identifier": "setEnabled", "parameters": "(boolean isEnabled)", "modifiers": "public", "return": "void", "signature": "void setEnabled(boolean isEnabled)", "full_signature": "public void setEnabled(boolean isEnabled)", "class_method_signature": "PlotStatistics.setEnabled(boolean isEnabled)", "testcase": false, "constructor": false}], "file": "androidplot-core/src/main/java/com/androidplot/util/PlotStatistics.java"}, "focal_method": {"identifier": "onAfterDraw", "parameters": "(Plot source, Canvas canvas)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onAfterDraw(Plot source, Canvas canvas) {\n        lastLatency = System.currentTimeMillis() - lastStart;\n        if(lastLatency < shortestRenderMs) {\n            shortestRenderMs = lastLatency;\n        }\n\n        if(lastLatency > longestRenderMs) {\n            longestRenderMs = lastLatency;\n        }\n        latencySum += lastLatency;\n        latencySamples++;\n        annotatePlot(source, canvas);\n    }", "signature": "void onAfterDraw(Plot source, Canvas canvas)", "full_signature": "@Override public void onAfterDraw(Plot source, Canvas canvas)", "class_method_signature": "PlotStatistics.onAfterDraw(Plot source, Canvas canvas)", "testcase": false, "constructor": false, "invocations": ["currentTimeMillis", "annotatePlot"]}, "repository": {"repo_id": 1424783, "url": "https://github.com/halfhp/androidplot", "language": "Java", "is_fork": false, "fork_count": 129, "stargazer_count": 369, "size": 7178, "license": "licensed"}}