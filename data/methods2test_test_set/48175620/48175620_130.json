{"test_class": {"identifier": "DataBindingRepositoryPresentersTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String STRING = \"string\";", "modifier": "private static final", "type": "String", "declarator": "STRING = \"string\"", "var_name": "STRING"}, {"original_string": "private static final String FIRST_STRING_CHARACTER = \"s\";", "modifier": "private static final", "type": "String", "declarator": "FIRST_STRING_CHARACTER = \"s\"", "var_name": "FIRST_STRING_CHARACTER"}, {"original_string": "private static final String SECOND_STRING = \"string2\";", "modifier": "private static final", "type": "String", "declarator": "SECOND_STRING = \"string2\"", "var_name": "SECOND_STRING"}, {"original_string": "private static final Result<String> STRING_RESULT = present(STRING);", "modifier": "private static final", "type": "Result<String>", "declarator": "STRING_RESULT = present(STRING)", "var_name": "STRING_RESULT"}, {"original_string": "private static final List<String> STRING_LIST = asList(STRING, SECOND_STRING);", "modifier": "private static final", "type": "List<String>", "declarator": "STRING_LIST = asList(STRING, SECOND_STRING)", "var_name": "STRING_LIST"}, {"original_string": "private static final Result<List<String>> STRING_LIST_RESULT = success(STRING_LIST);", "modifier": "private static final", "type": "Result<List<String>>", "declarator": "STRING_LIST_RESULT = success(STRING_LIST)", "var_name": "STRING_LIST_RESULT"}, {"original_string": "private static final Result<String> FAILURE = failure();", "modifier": "private static final", "type": "Result<String>", "declarator": "FAILURE = failure()", "var_name": "FAILURE"}, {"original_string": "private static final Result<List<String>> LIST_FAILURE = failure();", "modifier": "private static final", "type": "Result<List<String>>", "declarator": "LIST_FAILURE = failure()", "var_name": "LIST_FAILURE"}, {"original_string": "private static final Object HANDLER = new Object();", "modifier": "private static final", "type": "Object", "declarator": "HANDLER = new Object()", "var_name": "HANDLER"}, {"original_string": "private static final Object SECOND_HANDLER = new Object();", "modifier": "private static final", "type": "Object", "declarator": "SECOND_HANDLER = new Object()", "var_name": "SECOND_HANDLER"}, {"original_string": "@LayoutRes\n  private static final int LAYOUT_ID = 1;", "modifier": "@LayoutRes\n  private static final", "type": "int", "declarator": "LAYOUT_ID = 1", "var_name": "LAYOUT_ID"}, {"original_string": "private static final int DYNAMIC_LAYOUT_ID = 2;", "modifier": "private static final", "type": "int", "declarator": "DYNAMIC_LAYOUT_ID = 2", "var_name": "DYNAMIC_LAYOUT_ID"}, {"original_string": "private static final int ITEM_ID = 3;", "modifier": "private static final", "type": "int", "declarator": "ITEM_ID = 3", "var_name": "ITEM_ID"}, {"original_string": "private static final int HANDLER_ID = 4;", "modifier": "private static final", "type": "int", "declarator": "HANDLER_ID = 4", "var_name": "HANDLER_ID"}, {"original_string": "private static final int SECOND_HANDLER_ID = 5;", "modifier": "private static final", "type": "int", "declarator": "SECOND_HANDLER_ID = 5", "var_name": "SECOND_HANDLER_ID"}, {"original_string": "private static final int COLLECTION_ID = 6;", "modifier": "private static final", "type": "int", "declarator": "COLLECTION_ID = 6", "var_name": "COLLECTION_ID"}, {"original_string": "private static final long STABLE_ID = 2;", "modifier": "private static final", "type": "long", "declarator": "STABLE_ID = 2", "var_name": "STABLE_ID"}, {"original_string": "@Mock\n  private Function<String, Integer> layoutForItem;", "modifier": "@Mock\n  private", "type": "Function<String, Integer>", "declarator": "layoutForItem", "var_name": "layoutForItem"}, {"original_string": "@Mock\n  private Function<String, Integer> itemIdForItem;", "modifier": "@Mock\n  private", "type": "Function<String, Integer>", "declarator": "itemIdForItem", "var_name": "itemIdForItem"}, {"original_string": "@Mock\n  private ViewDataBinding viewDataBinding;", "modifier": "@Mock\n  private", "type": "ViewDataBinding", "declarator": "viewDataBinding", "var_name": "viewDataBinding"}, {"original_string": "@Mock\n  private View view;", "modifier": "@Mock\n  private", "type": "View", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock\n  private ListUpdateCallback listUpdateCallback;", "modifier": "@Mock\n  private", "type": "ListUpdateCallback", "declarator": "listUpdateCallback", "var_name": "listUpdateCallback"}, {"original_string": "private ViewHolder viewHolder;", "modifier": "private", "type": "ViewHolder", "declarator": "viewHolder", "var_name": "viewHolder"}], "file": "extensions/rvdatabinding/src/test/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresentersTest.java"}, "test_case": {"identifier": "shouldReturnStaticStableIdForRepositoryPresenterOfItem", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldReturnStaticStableIdForRepositoryPresenterOfItem() {\n    final RepositoryPresenter<String> resultRepositoryPresenter =\n        dataBindingRepositoryPresenterOf(String.class)\n            .layout(LAYOUT_ID)\n            .itemId(ITEM_ID)\n            .stableId(STABLE_ID)\n            .forItem();\n    assertThat(resultRepositoryPresenter.getItemId(STRING, 0), is(STABLE_ID));\n  }", "signature": "void shouldReturnStaticStableIdForRepositoryPresenterOfItem()", "full_signature": "@Test public void shouldReturnStaticStableIdForRepositoryPresenterOfItem()", "class_method_signature": "DataBindingRepositoryPresentersTest.shouldReturnStaticStableIdForRepositoryPresenterOfItem()", "testcase": true, "constructor": false, "invocations": ["forItem", "stableId", "itemId", "layout", "dataBindingRepositoryPresenterOf", "assertThat", "getItemId", "is"]}, "focal_class": {"identifier": "DataBindingRepositoryPresenters", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "dataBindingRepositoryPresenterOf", "parameters": "(\n      @Nullable final Class<T> type)", "modifiers": "@SuppressWarnings(\"unchecked\") @NonNull public static", "return": "RPLayout<T, DBRPMain<T>>", "signature": "RPLayout<T, DBRPMain<T>> dataBindingRepositoryPresenterOf(\n      @Nullable final Class<T> type)", "full_signature": "@SuppressWarnings(\"unchecked\") @NonNull public static RPLayout<T, DBRPMain<T>> dataBindingRepositoryPresenterOf(\n      @Nullable final Class<T> type)", "class_method_signature": "DataBindingRepositoryPresenters.dataBindingRepositoryPresenterOf(\n      @Nullable final Class<T> type)", "testcase": false, "constructor": false}, {"identifier": "DataBindingRepositoryPresenters", "parameters": "()", "modifiers": "private", "return": "", "signature": " DataBindingRepositoryPresenters()", "full_signature": "private  DataBindingRepositoryPresenters()", "class_method_signature": "DataBindingRepositoryPresenters.DataBindingRepositoryPresenters()", "testcase": false, "constructor": true}], "file": "extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenters.java"}, "focal_method": {"identifier": "dataBindingRepositoryPresenterOf", "parameters": "(\n      @Nullable final Class<T> type)", "modifiers": "@SuppressWarnings(\"unchecked\") @NonNull public static", "return": "RPLayout<T, DBRPMain<T>>", "body": "@SuppressWarnings(\"unchecked\")\n  @NonNull\n  public static <T> RPLayout<T, DBRPMain<T>> dataBindingRepositoryPresenterOf(\n      @Nullable final Class<T> type) {\n    return new DataBindingRepositoryPresenterCompiler();\n  }", "signature": "RPLayout<T, DBRPMain<T>> dataBindingRepositoryPresenterOf(\n      @Nullable final Class<T> type)", "full_signature": "@SuppressWarnings(\"unchecked\") @NonNull public static RPLayout<T, DBRPMain<T>> dataBindingRepositoryPresenterOf(\n      @Nullable final Class<T> type)", "class_method_signature": "DataBindingRepositoryPresenters.dataBindingRepositoryPresenterOf(\n      @Nullable final Class<T> type)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 48175620, "url": "https://github.com/google/agera", "language": "Java", "is_fork": false, "fork_count": 669, "stargazer_count": 7333, "size": 968, "license": "licensed"}}