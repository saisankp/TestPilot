{"test_class": {"identifier": "MethodBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/MethodBuilderTest.java"}, "test_case": {"identifier": "build", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void build() {\n        ArgumentConfig argument = new ArgumentConfig();\n        MethodBuilder builder = new MethodBuilder();\n        builder.name(\"name\").stat(1).retry(true).reliable(false).executes(2).deprecated(true).sticky(false)\n                .isReturn(true).oninvoke(\"on-invoke-object\").oninvokeMethod(\"on-invoke-method\").service(\"service\")\n                .onreturn(\"on-return-object\").onreturnMethod(\"on-return-method\").serviceId(\"serviceId\")\n                .onthrow(\"on-throw-object\").onthrowMethod(\"on-throw-method\").addArgument(argument);\n\n        MethodConfig config = builder.build();\n        MethodConfig config2 = builder.build();\n\n        Assertions.assertTrue(config.isRetry());\n        Assertions.assertFalse(config.isReliable());\n        Assertions.assertTrue(config.getDeprecated());\n        Assertions.assertFalse(config.getSticky());\n        Assertions.assertTrue(config.isReturn());\n        Assertions.assertEquals(1, config.getStat());\n        Assertions.assertEquals(2, config.getExecutes());\n        Assertions.assertEquals(\"on-invoke-object\", config.getOninvoke());\n        Assertions.assertEquals(\"on-invoke-method\", config.getOninvokeMethod());\n        Assertions.assertEquals(\"on-return-object\", config.getOnreturn());\n        Assertions.assertEquals(\"on-return-method\", config.getOnreturnMethod());\n        Assertions.assertEquals(\"on-throw-object\", config.getOnthrow());\n        Assertions.assertEquals(\"on-throw-method\", config.getOnthrowMethod());\n        Assertions.assertEquals(\"name\", config.getName());\n        Assertions.assertEquals(\"service\", config.getService());\n        Assertions.assertEquals(\"serviceId\", config.getServiceId());\n        Assertions.assertNotSame(config, config2);\n    }", "signature": "void build()", "full_signature": "@Test void build()", "class_method_signature": "MethodBuilderTest.build()", "testcase": true, "constructor": false, "invocations": ["addArgument", "onthrowMethod", "onthrow", "serviceId", "onreturnMethod", "onreturn", "service", "oninvokeMethod", "oninvoke", "isReturn", "sticky", "deprecated", "executes", "reliable", "retry", "stat", "name", "build", "build", "assertTrue", "isRetry", "assertFalse", "isReliable", "assertTrue", "getDeprecated", "assertFalse", "getSticky", "assertTrue", "isReturn", "assertEquals", "getStat", "assertEquals", "getExecutes", "assertEquals", "getOninvoke", "assertEquals", "getOninvokeMethod", "assertEquals", "getOnreturn", "assertEquals", "getOnreturnMethod", "assertEquals", "getOnthrow", "assertEquals", "getOnthrowMethod", "assertEquals", "getName", "assertEquals", "getService", "assertEquals", "getServiceId", "assertNotSame"]}, "focal_class": {"identifier": "MethodBuilder", "superclass": "extends AbstractMethodBuilder<MethodConfig, MethodBuilder>", "interfaces": "", "fields": [{"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private Integer stat;", "modifier": "private", "type": "Integer", "declarator": "stat", "var_name": "stat"}, {"original_string": "private Boolean retry;", "modifier": "private", "type": "Boolean", "declarator": "retry", "var_name": "retry"}, {"original_string": "private Boolean reliable;", "modifier": "private", "type": "Boolean", "declarator": "reliable", "var_name": "reliable"}, {"original_string": "private Integer executes;", "modifier": "private", "type": "Integer", "declarator": "executes", "var_name": "executes"}, {"original_string": "private Boolean deprecated;", "modifier": "private", "type": "Boolean", "declarator": "deprecated", "var_name": "deprecated"}, {"original_string": "private Boolean sticky;", "modifier": "private", "type": "Boolean", "declarator": "sticky", "var_name": "sticky"}, {"original_string": "private Boolean isReturn;", "modifier": "private", "type": "Boolean", "declarator": "isReturn", "var_name": "isReturn"}, {"original_string": "private Object oninvoke;", "modifier": "private", "type": "Object", "declarator": "oninvoke", "var_name": "oninvoke"}, {"original_string": "private String oninvokeMethod;", "modifier": "private", "type": "String", "declarator": "oninvokeMethod", "var_name": "oninvokeMethod"}, {"original_string": "private Object onreturn;", "modifier": "private", "type": "Object", "declarator": "onreturn", "var_name": "onreturn"}, {"original_string": "private String onreturnMethod;", "modifier": "private", "type": "String", "declarator": "onreturnMethod", "var_name": "onreturnMethod"}, {"original_string": "private Object onthrow;", "modifier": "private", "type": "Object", "declarator": "onthrow", "var_name": "onthrow"}, {"original_string": "private String onthrowMethod;", "modifier": "private", "type": "String", "declarator": "onthrowMethod", "var_name": "onthrowMethod"}, {"original_string": "private List<ArgumentConfig> arguments;", "modifier": "private", "type": "List<ArgumentConfig>", "declarator": "arguments", "var_name": "arguments"}, {"original_string": "private String service;", "modifier": "private", "type": "String", "declarator": "service", "var_name": "service"}, {"original_string": "private String serviceId;", "modifier": "private", "type": "String", "declarator": "serviceId", "var_name": "serviceId"}], "methods": [{"identifier": "name", "parameters": "(String name)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder name(String name)", "full_signature": "public MethodBuilder name(String name)", "class_method_signature": "MethodBuilder.name(String name)", "testcase": false, "constructor": false}, {"identifier": "stat", "parameters": "(Integer stat)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder stat(Integer stat)", "full_signature": "public MethodBuilder stat(Integer stat)", "class_method_signature": "MethodBuilder.stat(Integer stat)", "testcase": false, "constructor": false}, {"identifier": "retry", "parameters": "(Boolean retry)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder retry(Boolean retry)", "full_signature": "public MethodBuilder retry(Boolean retry)", "class_method_signature": "MethodBuilder.retry(Boolean retry)", "testcase": false, "constructor": false}, {"identifier": "reliable", "parameters": "(Boolean reliable)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder reliable(Boolean reliable)", "full_signature": "public MethodBuilder reliable(Boolean reliable)", "class_method_signature": "MethodBuilder.reliable(Boolean reliable)", "testcase": false, "constructor": false}, {"identifier": "executes", "parameters": "(Integer executes)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder executes(Integer executes)", "full_signature": "public MethodBuilder executes(Integer executes)", "class_method_signature": "MethodBuilder.executes(Integer executes)", "testcase": false, "constructor": false}, {"identifier": "deprecated", "parameters": "(Boolean deprecated)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder deprecated(Boolean deprecated)", "full_signature": "public MethodBuilder deprecated(Boolean deprecated)", "class_method_signature": "MethodBuilder.deprecated(Boolean deprecated)", "testcase": false, "constructor": false}, {"identifier": "sticky", "parameters": "(Boolean sticky)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder sticky(Boolean sticky)", "full_signature": "public MethodBuilder sticky(Boolean sticky)", "class_method_signature": "MethodBuilder.sticky(Boolean sticky)", "testcase": false, "constructor": false}, {"identifier": "isReturn", "parameters": "(Boolean isReturn)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder isReturn(Boolean isReturn)", "full_signature": "public MethodBuilder isReturn(Boolean isReturn)", "class_method_signature": "MethodBuilder.isReturn(Boolean isReturn)", "testcase": false, "constructor": false}, {"identifier": "oninvoke", "parameters": "(Object oninvoke)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder oninvoke(Object oninvoke)", "full_signature": "public MethodBuilder oninvoke(Object oninvoke)", "class_method_signature": "MethodBuilder.oninvoke(Object oninvoke)", "testcase": false, "constructor": false}, {"identifier": "oninvokeMethod", "parameters": "(String oninvokeMethod)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder oninvokeMethod(String oninvokeMethod)", "full_signature": "public MethodBuilder oninvokeMethod(String oninvokeMethod)", "class_method_signature": "MethodBuilder.oninvokeMethod(String oninvokeMethod)", "testcase": false, "constructor": false}, {"identifier": "onreturn", "parameters": "(Object onreturn)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder onreturn(Object onreturn)", "full_signature": "public MethodBuilder onreturn(Object onreturn)", "class_method_signature": "MethodBuilder.onreturn(Object onreturn)", "testcase": false, "constructor": false}, {"identifier": "onreturnMethod", "parameters": "(String onreturnMethod)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder onreturnMethod(String onreturnMethod)", "full_signature": "public MethodBuilder onreturnMethod(String onreturnMethod)", "class_method_signature": "MethodBuilder.onreturnMethod(String onreturnMethod)", "testcase": false, "constructor": false}, {"identifier": "onthrow", "parameters": "(Object onthrow)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder onthrow(Object onthrow)", "full_signature": "public MethodBuilder onthrow(Object onthrow)", "class_method_signature": "MethodBuilder.onthrow(Object onthrow)", "testcase": false, "constructor": false}, {"identifier": "onthrowMethod", "parameters": "(String onthrowMethod)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder onthrowMethod(String onthrowMethod)", "full_signature": "public MethodBuilder onthrowMethod(String onthrowMethod)", "class_method_signature": "MethodBuilder.onthrowMethod(String onthrowMethod)", "testcase": false, "constructor": false}, {"identifier": "addArguments", "parameters": "(List<? extends ArgumentConfig> arguments)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder addArguments(List<? extends ArgumentConfig> arguments)", "full_signature": "public MethodBuilder addArguments(List<? extends ArgumentConfig> arguments)", "class_method_signature": "MethodBuilder.addArguments(List<? extends ArgumentConfig> arguments)", "testcase": false, "constructor": false}, {"identifier": "addArgument", "parameters": "(ArgumentConfig argument)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder addArgument(ArgumentConfig argument)", "full_signature": "public MethodBuilder addArgument(ArgumentConfig argument)", "class_method_signature": "MethodBuilder.addArgument(ArgumentConfig argument)", "testcase": false, "constructor": false}, {"identifier": "service", "parameters": "(String service)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder service(String service)", "full_signature": "public MethodBuilder service(String service)", "class_method_signature": "MethodBuilder.service(String service)", "testcase": false, "constructor": false}, {"identifier": "serviceId", "parameters": "(String serviceId)", "modifiers": "public", "return": "MethodBuilder", "signature": "MethodBuilder serviceId(String serviceId)", "full_signature": "public MethodBuilder serviceId(String serviceId)", "class_method_signature": "MethodBuilder.serviceId(String serviceId)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "MethodConfig", "signature": "MethodConfig build()", "full_signature": "public MethodConfig build()", "class_method_signature": "MethodBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "getThis", "parameters": "()", "modifiers": "@Override protected", "return": "MethodBuilder", "signature": "MethodBuilder getThis()", "full_signature": "@Override protected MethodBuilder getThis()", "class_method_signature": "MethodBuilder.getThis()", "testcase": false, "constructor": false}], "file": "dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/bootstrap/builders/MethodBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "MethodConfig", "body": "public MethodConfig build() {\n        MethodConfig methodConfig = new MethodConfig();\n        super.build(methodConfig);\n\n        methodConfig.setArguments(arguments);\n        methodConfig.setDeprecated(deprecated);\n        methodConfig.setExecutes(executes);\n        methodConfig.setName(name);\n        methodConfig.setOninvoke(oninvoke);\n        methodConfig.setOninvokeMethod(oninvokeMethod);\n        methodConfig.setOnreturn(onreturn);\n        methodConfig.setOnreturnMethod(onreturnMethod);\n        methodConfig.setOnthrow(onthrow);\n        methodConfig.setOnthrowMethod(onthrowMethod);\n        methodConfig.setReturn(isReturn);\n        methodConfig.setService(service);\n        methodConfig.setServiceId(serviceId);\n        methodConfig.setSticky(sticky);\n        methodConfig.setReliable(reliable);\n        methodConfig.setStat(stat);\n        methodConfig.setRetry(retry);\n\n        return methodConfig;\n    }", "signature": "MethodConfig build()", "full_signature": "public MethodConfig build()", "class_method_signature": "MethodBuilder.build()", "testcase": false, "constructor": false, "invocations": ["build", "setArguments", "setDeprecated", "setExecutes", "setName", "setOninvoke", "setOninvokeMethod", "setOnreturn", "setOnreturnMethod", "setOnthrow", "setOnthrowMethod", "setReturn", "setService", "setServiceId", "setSticky", "setReliable", "setStat", "setRetry"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}