{"test_class": {"identifier": "AlsPredictBatchOpTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Row[] rows1 = new Row[]{\n        Row.of(1L, 1L, 0.6),\n        Row.of(2L, 2L, 0.8),\n        Row.of(2L, 3L, 0.6),\n        Row.of(3L, 1L, 0.6),\n        Row.of(3L, 2L, 0.3),\n        Row.of(3L, 3L, 0.4),\n    };", "modifier": "private", "type": "Row[]", "declarator": "rows1 = new Row[]{\n        Row.of(1L, 1L, 0.6),\n        Row.of(2L, 2L, 0.8),\n        Row.of(2L, 3L, 0.6),\n        Row.of(3L, 1L, 0.6),\n        Row.of(3L, 2L, 0.3),\n        Row.of(3L, 3L, 0.4),\n    }", "var_name": "rows1"}], "file": "core/src/test/java/com/alibaba/alink/operator/batch/recommendation/AlsPredictBatchOpTest.java"}, "test_case": {"identifier": "testRating", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testRating() throws Exception {\n        BatchOperator data = BatchOperator.fromTable(\n            MLEnvironmentFactory.getDefault().createBatchTable(rows1, new String[]{\"user\", \"item\", \"rating\"}));\n\n        ALS als = new ALS()\n            .setUserCol(\"user\")\n            .setItemCol(\"item\")\n            .setRateCol(\"rating\")\n            .setLambda(0.01)\n            .setRank(10)\n            .setNumIter(10)\n            .setPredictionCol(\"recommendations\");\n\n        ALSModel model = als.fit(data);\n        BatchOperator modelData = BatchOperator.fromTable(model.getModelData());\n\n        BatchOperator pred = new AlsPredictBatchOp()\n            .setUserCol(\"user\").setItemCol(\"item\").setPredictionCol(\"predicted_rating\").linkFrom(modelData, data);\n\n        checkRatingError(pred);\n    }", "signature": "void testRating()", "full_signature": "@Test public void testRating()", "class_method_signature": "AlsPredictBatchOpTest.testRating()", "testcase": true, "constructor": false, "invocations": ["fromTable", "createBatchTable", "getDefault", "setPredictionCol", "setNumIter", "setRank", "setLambda", "setRateCol", "setItemCol", "setUserCol", "fit", "fromTable", "getModelData", "linkFrom", "setPredictionCol", "setItemCol", "setUserCol", "checkRatingError"]}, "focal_class": {"identifier": "AlsPredictBatchOp", "superclass": "extends BatchOperator<AlsPredictBatchOp>", "interfaces": "implements AlsPredictParams<AlsPredictBatchOp>", "fields": [], "methods": [{"identifier": "AlsPredictBatchOp", "parameters": "()", "modifiers": "public", "return": "", "signature": " AlsPredictBatchOp()", "full_signature": "public  AlsPredictBatchOp()", "class_method_signature": "AlsPredictBatchOp.AlsPredictBatchOp()", "testcase": false, "constructor": true}, {"identifier": "AlsPredictBatchOp", "parameters": "(Params params)", "modifiers": "public", "return": "", "signature": " AlsPredictBatchOp(Params params)", "full_signature": "public  AlsPredictBatchOp(Params params)", "class_method_signature": "AlsPredictBatchOp.AlsPredictBatchOp(Params params)", "testcase": false, "constructor": true}, {"identifier": "getFactors", "parameters": "(BatchOperator<?> model, final int identity)", "modifiers": "private static", "return": "DataSet<Tuple2<Long, float[]>>", "signature": "DataSet<Tuple2<Long, float[]>> getFactors(BatchOperator<?> model, final int identity)", "full_signature": "private static DataSet<Tuple2<Long, float[]>> getFactors(BatchOperator<?> model, final int identity)", "class_method_signature": "AlsPredictBatchOp.getFactors(BatchOperator<?> model, final int identity)", "testcase": false, "constructor": false}, {"identifier": "linkFrom", "parameters": "(BatchOperator<?>... inputs)", "modifiers": "@Override public", "return": "AlsPredictBatchOp", "signature": "AlsPredictBatchOp linkFrom(BatchOperator<?>... inputs)", "full_signature": "@Override public AlsPredictBatchOp linkFrom(BatchOperator<?>... inputs)", "class_method_signature": "AlsPredictBatchOp.linkFrom(BatchOperator<?>... inputs)", "testcase": false, "constructor": false}, {"identifier": "rate", "parameters": "(BatchOperator model, BatchOperator data)", "modifiers": "public", "return": "Table", "signature": "Table rate(BatchOperator model, BatchOperator data)", "full_signature": "public Table rate(BatchOperator model, BatchOperator data)", "class_method_signature": "AlsPredictBatchOp.rate(BatchOperator model, BatchOperator data)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/alibaba/alink/operator/batch/recommendation/AlsPredictBatchOp.java"}, "focal_method": {"identifier": "linkFrom", "parameters": "(BatchOperator<?>... inputs)", "modifiers": "@Override public", "return": "AlsPredictBatchOp", "body": "@Override\n    public AlsPredictBatchOp linkFrom(BatchOperator<?>... inputs) {\n        checkOpSize(2, inputs);\n\n        BatchOperator model = inputs[0];\n        BatchOperator data = inputs[1];\n\n        this.setOutputTable(rate(model, data));\n        return this;\n    }", "signature": "AlsPredictBatchOp linkFrom(BatchOperator<?>... inputs)", "full_signature": "@Override public AlsPredictBatchOp linkFrom(BatchOperator<?>... inputs)", "class_method_signature": "AlsPredictBatchOp.linkFrom(BatchOperator<?>... inputs)", "testcase": false, "constructor": false, "invocations": ["checkOpSize", "setOutputTable", "rate"]}, "repository": {"repo_id": 150938406, "url": "https://github.com/alibaba/Alink", "stars": 1923, "created": "9/30/2018 6:36:11 AM +00:00", "updates": "2020-01-27T10:24:34+00:00", "fork": "False", "license": "licensed"}}