{"test_class": {"identifier": "ProxyContextTest", "superclass": "", "interfaces": "", "fields": [], "file": "karate-core/src/test/java/com/intuit/karate/netty/ProxyContextTest.java"}, "test_case": {"identifier": "testProxyContext", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProxyContext() {\n        test(\"http://localhost:8080\", false, \"localhost\", 8080);\n        test(\"http://localhost:8080/foo\", false, \"localhost\", 8080);\n        test(\"localhost:8080\", false, \"localhost\", 8080);\n        test(\"localhost:8080/foo\", false, \"localhost\", 8080);\n        test(\"localhost\", false, \"localhost\", 80);\n        test(\"localhost/foo\", false, \"localhost\", 80);\n        test(\"http://localhost\", false, \"localhost\", 80);\n        test(\"http://localhost/foo\", false, \"localhost\", 80);\n        test(\"httpbin.org:443\", false, \"httpbin.org\", 443);\n        test(\"httpbin.org:443\", true, \"httpbin.org\", 443);\n        test(\"httpbin.org:443/foo\", true, \"httpbin.org\", 443);\n        test(\"httpbin.org\", true, \"httpbin.org\", 443);\n        test(\"httpbin.org/foo\", true, \"httpbin.org\", 443);\n    }", "signature": "void testProxyContext()", "full_signature": "@Test public void testProxyContext()", "class_method_signature": "ProxyContextTest.testProxyContext()", "testcase": true, "constructor": false, "invocations": ["test", "test", "test", "test", "test", "test", "test", "test", "test", "test", "test", "test", "test"]}, "focal_class": {"identifier": "ProxyContext", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final String host;", "modifier": "public final", "type": "String", "declarator": "host", "var_name": "host"}, {"original_string": "public final int port;", "modifier": "public final", "type": "int", "declarator": "port", "var_name": "port"}, {"original_string": "public final boolean ssl;", "modifier": "public final", "type": "boolean", "declarator": "ssl", "var_name": "ssl"}, {"original_string": "public final String hostColonPort;", "modifier": "public final", "type": "String", "declarator": "hostColonPort", "var_name": "hostColonPort"}, {"original_string": "private static final int HTTPS_PORT = 443;", "modifier": "private static final", "type": "int", "declarator": "HTTPS_PORT = 443", "var_name": "HTTPS_PORT"}, {"original_string": "private static final int HTTP_PORT = 80;", "modifier": "private static final", "type": "int", "declarator": "HTTP_PORT = 80", "var_name": "HTTP_PORT"}], "methods": [{"identifier": "ProxyContext", "parameters": "(HttpRequest request, boolean ssl)", "modifiers": "public", "return": "", "signature": " ProxyContext(HttpRequest request, boolean ssl)", "full_signature": "public  ProxyContext(HttpRequest request, boolean ssl)", "class_method_signature": "ProxyContext.ProxyContext(HttpRequest request, boolean ssl)", "testcase": false, "constructor": true}, {"identifier": "ProxyContext", "parameters": "(String raw, boolean ssl)", "modifiers": "public", "return": "", "signature": " ProxyContext(String raw, boolean ssl)", "full_signature": "public  ProxyContext(String raw, boolean ssl)", "class_method_signature": "ProxyContext.ProxyContext(String raw, boolean ssl)", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ProxyContext.toString()", "testcase": false, "constructor": false}, {"identifier": "parsePort", "parameters": "(String raw, boolean ssl)", "modifiers": "private static", "return": "int", "signature": "int parsePort(String raw, boolean ssl)", "full_signature": "private static int parsePort(String raw, boolean ssl)", "class_method_signature": "ProxyContext.parsePort(String raw, boolean ssl)", "testcase": false, "constructor": false}, {"identifier": "getHostColonPortFromHeader", "parameters": "(HttpRequest request)", "modifiers": "private static", "return": "String", "signature": "String getHostColonPortFromHeader(HttpRequest request)", "full_signature": "private static String getHostColonPortFromHeader(HttpRequest request)", "class_method_signature": "ProxyContext.getHostColonPortFromHeader(HttpRequest request)", "testcase": false, "constructor": false}, {"identifier": "extractHostColonPort", "parameters": "(String uri)", "modifiers": "private static", "return": "String", "signature": "String extractHostColonPort(String uri)", "full_signature": "private static String extractHostColonPort(String uri)", "class_method_signature": "ProxyContext.extractHostColonPort(String uri)", "testcase": false, "constructor": false}, {"identifier": "removeHostColonPort", "parameters": "(String uri)", "modifiers": "public static", "return": "String", "signature": "String removeHostColonPort(String uri)", "full_signature": "public static String removeHostColonPort(String uri)", "class_method_signature": "ProxyContext.removeHostColonPort(String uri)", "testcase": false, "constructor": false}], "file": "karate-core/src/main/java/com/intuit/karate/netty/ProxyContext.java"}, "focal_method": {"identifier": "ProxyContext", "parameters": "(HttpRequest request, boolean ssl)", "modifiers": "public", "return": "", "body": "public ProxyContext(HttpRequest request, boolean ssl) {\n        this(getHostColonPortFromHeader(request), ssl);\n    }", "signature": " ProxyContext(HttpRequest request, boolean ssl)", "full_signature": "public  ProxyContext(HttpRequest request, boolean ssl)", "class_method_signature": "ProxyContext.ProxyContext(HttpRequest request, boolean ssl)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 81226206, "url": "https://github.com/intuit/karate", "stars": 2712, "created": "2/7/2017 3:59:17 PM +00:00", "updates": "2020-01-27T21:00:57+00:00", "fork": "False", "license": "licensed"}}