{"test_class": {"identifier": "ExecutionContextTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ExecutionContext context;", "modifier": "private", "type": "ExecutionContext", "declarator": "context", "var_name": "context"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/ExecutionContextTest.java"}, "test_case": {"identifier": "shouldHaveIdentifierThatIsUnique", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldHaveIdentifierThatIsUnique() {\n        // Can't really test this, but we certainly can test that there are no duplicates in many contexts ...\n        Set<String> ids = new HashSet<String>();\n        for (int i = 0; i != 50; ++i) {\n            assertThat(ids.add(new ExecutionContext().getId()), is(true));\n        }\n    }", "signature": "void shouldHaveIdentifierThatIsUnique()", "full_signature": "@Test public void shouldHaveIdentifierThatIsUnique()", "class_method_signature": "ExecutionContextTest.shouldHaveIdentifierThatIsUnique()", "testcase": true, "constructor": false, "invocations": ["assertThat", "add", "getId", "is"]}, "focal_class": {"identifier": "ExecutionContext", "superclass": "", "interfaces": "implements ThreadPoolFactory, Cloneable, NamespaceRegistry.Holder", "fields": [{"original_string": "public static final ExecutionContext DEFAULT_CONTEXT = new ExecutionContext();", "modifier": "public static final", "type": "ExecutionContext", "declarator": "DEFAULT_CONTEXT = new ExecutionContext()", "var_name": "DEFAULT_CONTEXT"}, {"original_string": "private final ThreadPoolFactory threadPools;", "modifier": "private final", "type": "ThreadPoolFactory", "declarator": "threadPools", "var_name": "threadPools"}, {"original_string": "private final PropertyFactory propertyFactory;", "modifier": "private final", "type": "PropertyFactory", "declarator": "propertyFactory", "var_name": "propertyFactory"}, {"original_string": "private final ValueFactories valueFactories;", "modifier": "private final", "type": "ValueFactories", "declarator": "valueFactories", "var_name": "valueFactories"}, {"original_string": "private final NamespaceRegistry namespaceRegistry;", "modifier": "private final", "type": "NamespaceRegistry", "declarator": "namespaceRegistry", "var_name": "namespaceRegistry"}, {"original_string": "private final SecurityContext securityContext;", "modifier": "private final", "type": "SecurityContext", "declarator": "securityContext", "var_name": "securityContext"}, {"original_string": "private final BinaryStore binaryStore;", "modifier": "private final", "type": "BinaryStore", "declarator": "binaryStore", "var_name": "binaryStore"}, {"original_string": "private final String id = SecureHash.sha1(UUID.randomUUID().toString()).substring(0, 9);", "modifier": "private final", "type": "String", "declarator": "id = SecureHash.sha1(UUID.randomUUID().toString()).substring(0, 9)", "var_name": "id"}, {"original_string": "private final String processId;", "modifier": "private final", "type": "String", "declarator": "processId", "var_name": "processId"}, {"original_string": "private final Map<String, String> data;", "modifier": "private final", "type": "Map<String, String>", "declarator": "data", "var_name": "data"}, {"original_string": "private final TextDecoder decoder;", "modifier": "private final", "type": "TextDecoder", "declarator": "decoder", "var_name": "decoder"}, {"original_string": "private final TextEncoder encoder;", "modifier": "private final", "type": "TextEncoder", "declarator": "encoder", "var_name": "encoder"}, {"original_string": "private final StringFactory stringFactory;", "modifier": "private final", "type": "StringFactory", "declarator": "stringFactory", "var_name": "stringFactory"}, {"original_string": "private final BinaryFactory binaryFactory;", "modifier": "private final", "type": "BinaryFactory", "declarator": "binaryFactory", "var_name": "binaryFactory"}, {"original_string": "private final ValueFactory<Boolean> booleanFactory;", "modifier": "private final", "type": "ValueFactory<Boolean>", "declarator": "booleanFactory", "var_name": "booleanFactory"}, {"original_string": "private final DateTimeFactory dateFactory;", "modifier": "private final", "type": "DateTimeFactory", "declarator": "dateFactory", "var_name": "dateFactory"}, {"original_string": "private final ValueFactory<BigDecimal> decimalFactory;", "modifier": "private final", "type": "ValueFactory<BigDecimal>", "declarator": "decimalFactory", "var_name": "decimalFactory"}, {"original_string": "private final ValueFactory<Double> doubleFactory;", "modifier": "private final", "type": "ValueFactory<Double>", "declarator": "doubleFactory", "var_name": "doubleFactory"}, {"original_string": "private final ValueFactory<Long> longFactory;", "modifier": "private final", "type": "ValueFactory<Long>", "declarator": "longFactory", "var_name": "longFactory"}, {"original_string": "private final NameFactory nameFactory;", "modifier": "private final", "type": "NameFactory", "declarator": "nameFactory", "var_name": "nameFactory"}, {"original_string": "private final PathFactory pathFactory;", "modifier": "private final", "type": "PathFactory", "declarator": "pathFactory", "var_name": "pathFactory"}, {"original_string": "private final ReferenceFactory referenceFactory;", "modifier": "private final", "type": "ReferenceFactory", "declarator": "referenceFactory", "var_name": "referenceFactory"}, {"original_string": "private final ReferenceFactory weakReferenceFactory;", "modifier": "private final", "type": "ReferenceFactory", "declarator": "weakReferenceFactory", "var_name": "weakReferenceFactory"}, {"original_string": "private final ReferenceFactory simpleReferenceFactory;", "modifier": "private final", "type": "ReferenceFactory", "declarator": "simpleReferenceFactory", "var_name": "simpleReferenceFactory"}, {"original_string": "private final UriFactory uriFactory;", "modifier": "private final", "type": "UriFactory", "declarator": "uriFactory", "var_name": "uriFactory"}, {"original_string": "private final ValueFactory<Object> objectFactory;", "modifier": "private final", "type": "ValueFactory<Object>", "declarator": "objectFactory", "var_name": "objectFactory"}, {"original_string": "private final TypeSystem typeSystem;", "modifier": "private final", "type": "TypeSystem", "declarator": "typeSystem", "var_name": "typeSystem"}, {"original_string": "private final Locale locale;", "modifier": "private final", "type": "Locale", "declarator": "locale", "var_name": "locale"}], "methods": [{"identifier": "ExecutionContext", "parameters": "()", "modifiers": "@SuppressWarnings( \"synthetic-access\" ) public", "return": "", "signature": " ExecutionContext()", "full_signature": "@SuppressWarnings( \"synthetic-access\" ) public  ExecutionContext()", "class_method_signature": "ExecutionContext.ExecutionContext()", "testcase": false, "constructor": true}, {"identifier": "ExecutionContext", "parameters": "( ExecutionContext context )", "modifiers": "protected", "return": "", "signature": " ExecutionContext( ExecutionContext context )", "full_signature": "protected  ExecutionContext( ExecutionContext context )", "class_method_signature": "ExecutionContext.ExecutionContext( ExecutionContext context )", "testcase": false, "constructor": true}, {"identifier": "ExecutionContext", "parameters": "( SecurityContext securityContext,\n                                NamespaceRegistry namespaceRegistry,\n                                PropertyFactory propertyFactory,\n                                ThreadPoolFactory threadPoolFactory,\n                                BinaryStore binaryStore,\n                                Map<String, String> data,\n                                String processId,\n                                TextDecoder decoder,\n                                TextEncoder encoder,\n                                StringFactory stringFactory,\n                                BinaryFactory binaryFactory,\n                                ValueFactory<Boolean> booleanFactory,\n                                DateTimeFactory dateFactory,\n                                ValueFactory<BigDecimal> decimalFactory,\n                                ValueFactory<Double> doubleFactory,\n                                ValueFactory<Long> longFactory,\n                                NameFactory nameFactory,\n                                PathFactory pathFactory,\n                                ReferenceFactory referenceFactory,\n                                ReferenceFactory weakReferenceFactory,\n                                ReferenceFactory simpleReferenceFactory,\n                                UriFactory uriFactory,\n                                ValueFactory<Object> objectFactory, \n                                Locale locale )", "modifiers": "protected", "return": "", "signature": " ExecutionContext( SecurityContext securityContext,\n                                NamespaceRegistry namespaceRegistry,\n                                PropertyFactory propertyFactory,\n                                ThreadPoolFactory threadPoolFactory,\n                                BinaryStore binaryStore,\n                                Map<String, String> data,\n                                String processId,\n                                TextDecoder decoder,\n                                TextEncoder encoder,\n                                StringFactory stringFactory,\n                                BinaryFactory binaryFactory,\n                                ValueFactory<Boolean> booleanFactory,\n                                DateTimeFactory dateFactory,\n                                ValueFactory<BigDecimal> decimalFactory,\n                                ValueFactory<Double> doubleFactory,\n                                ValueFactory<Long> longFactory,\n                                NameFactory nameFactory,\n                                PathFactory pathFactory,\n                                ReferenceFactory referenceFactory,\n                                ReferenceFactory weakReferenceFactory,\n                                ReferenceFactory simpleReferenceFactory,\n                                UriFactory uriFactory,\n                                ValueFactory<Object> objectFactory, \n                                Locale locale )", "full_signature": "protected  ExecutionContext( SecurityContext securityContext,\n                                NamespaceRegistry namespaceRegistry,\n                                PropertyFactory propertyFactory,\n                                ThreadPoolFactory threadPoolFactory,\n                                BinaryStore binaryStore,\n                                Map<String, String> data,\n                                String processId,\n                                TextDecoder decoder,\n                                TextEncoder encoder,\n                                StringFactory stringFactory,\n                                BinaryFactory binaryFactory,\n                                ValueFactory<Boolean> booleanFactory,\n                                DateTimeFactory dateFactory,\n                                ValueFactory<BigDecimal> decimalFactory,\n                                ValueFactory<Double> doubleFactory,\n                                ValueFactory<Long> longFactory,\n                                NameFactory nameFactory,\n                                PathFactory pathFactory,\n                                ReferenceFactory referenceFactory,\n                                ReferenceFactory weakReferenceFactory,\n                                ReferenceFactory simpleReferenceFactory,\n                                UriFactory uriFactory,\n                                ValueFactory<Object> objectFactory, \n                                Locale locale )", "class_method_signature": "ExecutionContext.ExecutionContext( SecurityContext securityContext,\n                                NamespaceRegistry namespaceRegistry,\n                                PropertyFactory propertyFactory,\n                                ThreadPoolFactory threadPoolFactory,\n                                BinaryStore binaryStore,\n                                Map<String, String> data,\n                                String processId,\n                                TextDecoder decoder,\n                                TextEncoder encoder,\n                                StringFactory stringFactory,\n                                BinaryFactory binaryFactory,\n                                ValueFactory<Boolean> booleanFactory,\n                                DateTimeFactory dateFactory,\n                                ValueFactory<BigDecimal> decimalFactory,\n                                ValueFactory<Double> doubleFactory,\n                                ValueFactory<Long> longFactory,\n                                NameFactory nameFactory,\n                                PathFactory pathFactory,\n                                ReferenceFactory referenceFactory,\n                                ReferenceFactory weakReferenceFactory,\n                                ReferenceFactory simpleReferenceFactory,\n                                UriFactory uriFactory,\n                                ValueFactory<Object> objectFactory, \n                                Locale locale )", "testcase": false, "constructor": true}, {"identifier": "getThreadPoolFactory", "parameters": "()", "modifiers": "protected", "return": "ThreadPoolFactory", "signature": "ThreadPoolFactory getThreadPoolFactory()", "full_signature": "protected ThreadPoolFactory getThreadPoolFactory()", "class_method_signature": "ExecutionContext.getThreadPoolFactory()", "testcase": false, "constructor": false}, {"identifier": "getLogger", "parameters": "( Class<?> clazz )", "modifiers": "public", "return": "Logger", "signature": "Logger getLogger( Class<?> clazz )", "full_signature": "public Logger getLogger( Class<?> clazz )", "class_method_signature": "ExecutionContext.getLogger( Class<?> clazz )", "testcase": false, "constructor": false}, {"identifier": "getLogger", "parameters": "( String name )", "modifiers": "public", "return": "Logger", "signature": "Logger getLogger( String name )", "full_signature": "public Logger getLogger( String name )", "class_method_signature": "ExecutionContext.getLogger( String name )", "testcase": false, "constructor": false}, {"identifier": "getSecurityContext", "parameters": "()", "modifiers": "public", "return": "SecurityContext", "signature": "SecurityContext getSecurityContext()", "full_signature": "public SecurityContext getSecurityContext()", "class_method_signature": "ExecutionContext.getSecurityContext()", "testcase": false, "constructor": false}, {"identifier": "getNamespaceRegistry", "parameters": "()", "modifiers": "@Override public", "return": "NamespaceRegistry", "signature": "NamespaceRegistry getNamespaceRegistry()", "full_signature": "@Override public NamespaceRegistry getNamespaceRegistry()", "class_method_signature": "ExecutionContext.getNamespaceRegistry()", "testcase": false, "constructor": false}, {"identifier": "getPropertyFactory", "parameters": "()", "modifiers": "public final", "return": "PropertyFactory", "signature": "PropertyFactory getPropertyFactory()", "full_signature": "public final PropertyFactory getPropertyFactory()", "class_method_signature": "ExecutionContext.getPropertyFactory()", "testcase": false, "constructor": false}, {"identifier": "getValueFactories", "parameters": "()", "modifiers": "public", "return": "ValueFactories", "signature": "ValueFactories getValueFactories()", "full_signature": "public ValueFactories getValueFactories()", "class_method_signature": "ExecutionContext.getValueFactories()", "testcase": false, "constructor": false}, {"identifier": "getBinaryStore", "parameters": "()", "modifiers": "public", "return": "BinaryStore", "signature": "BinaryStore getBinaryStore()", "full_signature": "public BinaryStore getBinaryStore()", "class_method_signature": "ExecutionContext.getBinaryStore()", "testcase": false, "constructor": false}, {"identifier": "getThreadPool", "parameters": "( String name )", "modifiers": "@Override public", "return": "ExecutorService", "signature": "ExecutorService getThreadPool( String name )", "full_signature": "@Override public ExecutorService getThreadPool( String name )", "class_method_signature": "ExecutionContext.getThreadPool( String name )", "testcase": false, "constructor": false}, {"identifier": "releaseThreadPool", "parameters": "( ExecutorService pool )", "modifiers": "@Override public", "return": "void", "signature": "void releaseThreadPool( ExecutorService pool )", "full_signature": "@Override public void releaseThreadPool( ExecutorService pool )", "class_method_signature": "ExecutionContext.releaseThreadPool( ExecutorService pool )", "testcase": false, "constructor": false}, {"identifier": "getCachedTreadPool", "parameters": "( String name, int maxPoolSize )", "modifiers": "@Override public", "return": "ExecutorService", "signature": "ExecutorService getCachedTreadPool( String name, int maxPoolSize )", "full_signature": "@Override public ExecutorService getCachedTreadPool( String name, int maxPoolSize )", "class_method_signature": "ExecutionContext.getCachedTreadPool( String name, int maxPoolSize )", "testcase": false, "constructor": false}, {"identifier": "getScheduledThreadPool", "parameters": "( String name )", "modifiers": "@Override public", "return": "ScheduledExecutorService", "signature": "ScheduledExecutorService getScheduledThreadPool( String name )", "full_signature": "@Override public ScheduledExecutorService getScheduledThreadPool( String name )", "class_method_signature": "ExecutionContext.getScheduledThreadPool( String name )", "testcase": false, "constructor": false}, {"identifier": "terminateAllPools", "parameters": "( long maxWaitTime,\n                                   TimeUnit timeUnit )", "modifiers": "@Override public", "return": "void", "signature": "void terminateAllPools( long maxWaitTime,\n                                   TimeUnit timeUnit )", "full_signature": "@Override public void terminateAllPools( long maxWaitTime,\n                                   TimeUnit timeUnit )", "class_method_signature": "ExecutionContext.terminateAllPools( long maxWaitTime,\n                                   TimeUnit timeUnit )", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "ExecutionContext.getId()", "testcase": false, "constructor": false}, {"identifier": "getProcessId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getProcessId()", "full_signature": "public String getProcessId()", "class_method_signature": "ExecutionContext.getProcessId()", "testcase": false, "constructor": false}, {"identifier": "getData", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getData()", "full_signature": "public Map<String, String> getData()", "class_method_signature": "ExecutionContext.getData()", "testcase": false, "constructor": false}, {"identifier": "getDecoder", "parameters": "()", "modifiers": "public", "return": "TextDecoder", "signature": "TextDecoder getDecoder()", "full_signature": "public TextDecoder getDecoder()", "class_method_signature": "ExecutionContext.getDecoder()", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "( BinaryStore binaryStore )", "modifiers": "public", "return": "ExecutionContext", "signature": "ExecutionContext with( BinaryStore binaryStore )", "full_signature": "public ExecutionContext with( BinaryStore binaryStore )", "class_method_signature": "ExecutionContext.with( BinaryStore binaryStore )", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "( NamespaceRegistry namespaceRegistry )", "modifiers": "public", "return": "ExecutionContext", "signature": "ExecutionContext with( NamespaceRegistry namespaceRegistry )", "full_signature": "public ExecutionContext with( NamespaceRegistry namespaceRegistry )", "class_method_signature": "ExecutionContext.with( NamespaceRegistry namespaceRegistry )", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "( ThreadPoolFactory threadPoolFactory )", "modifiers": "public", "return": "ExecutionContext", "signature": "ExecutionContext with( ThreadPoolFactory threadPoolFactory )", "full_signature": "public ExecutionContext with( ThreadPoolFactory threadPoolFactory )", "class_method_signature": "ExecutionContext.with( ThreadPoolFactory threadPoolFactory )", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "( PropertyFactory propertyFactory )", "modifiers": "public", "return": "ExecutionContext", "signature": "ExecutionContext with( PropertyFactory propertyFactory )", "full_signature": "public ExecutionContext with( PropertyFactory propertyFactory )", "class_method_signature": "ExecutionContext.with( PropertyFactory propertyFactory )", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "( SecurityContext securityContext )", "modifiers": "public", "return": "ExecutionContext", "signature": "ExecutionContext with( SecurityContext securityContext )", "full_signature": "public ExecutionContext with( SecurityContext securityContext )", "class_method_signature": "ExecutionContext.with( SecurityContext securityContext )", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "( Map<String, String> data )", "modifiers": "public", "return": "ExecutionContext", "signature": "ExecutionContext with( Map<String, String> data )", "full_signature": "public ExecutionContext with( Map<String, String> data )", "class_method_signature": "ExecutionContext.with( Map<String, String> data )", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "( ReferenceFactory referenceFactory )", "modifiers": "protected", "return": "ExecutionContext", "signature": "ExecutionContext with( ReferenceFactory referenceFactory )", "full_signature": "protected ExecutionContext with( ReferenceFactory referenceFactory )", "class_method_signature": "ExecutionContext.with( ReferenceFactory referenceFactory )", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "( String key,\n                                  String value )", "modifiers": "public", "return": "ExecutionContext", "signature": "ExecutionContext with( String key,\n                                  String value )", "full_signature": "public ExecutionContext with( String key,\n                                  String value )", "class_method_signature": "ExecutionContext.with( String key,\n                                  String value )", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "( String processId )", "modifiers": "public", "return": "ExecutionContext", "signature": "ExecutionContext with( String processId )", "full_signature": "public ExecutionContext with( String processId )", "class_method_signature": "ExecutionContext.with( String processId )", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "(Locale locale)", "modifiers": "public", "return": "ExecutionContext", "signature": "ExecutionContext with(Locale locale)", "full_signature": "public ExecutionContext with(Locale locale)", "class_method_signature": "ExecutionContext.with(Locale locale)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "ExecutionContext", "signature": "ExecutionContext clone()", "full_signature": "@Override public ExecutionContext clone()", "class_method_signature": "ExecutionContext.clone()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ExecutionContext.toString()", "testcase": false, "constructor": false}, {"identifier": "initializeDefaultNamespaces", "parameters": "( NamespaceRegistry namespaceRegistry )", "modifiers": "protected", "return": "void", "signature": "void initializeDefaultNamespaces( NamespaceRegistry namespaceRegistry )", "full_signature": "protected void initializeDefaultNamespaces( NamespaceRegistry namespaceRegistry )", "class_method_signature": "ExecutionContext.initializeDefaultNamespaces( NamespaceRegistry namespaceRegistry )", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/ExecutionContext.java"}, "focal_method": {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String getId() {\n        return id;\n    }", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "ExecutionContext.getId()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}