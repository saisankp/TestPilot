{"test_class": {"identifier": "NumSetBitsTest", "superclass": "", "interfaces": "", "fields": [], "file": "algs/src/test/java/com/github/kowshik/bigo/bitsandbytes/NumSetBitsTest.java"}, "test_case": {"identifier": "getNumSetBits_ByteArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void getNumSetBits_ByteArray() {\n\t\tbyte[] array = new byte[] { (byte) 100, (byte) 255, (byte) 255,\n\t\t\t\t(byte) 175 };\n\t\tassertEquals(25, NumSetBits.getNumSetBitsBetweenWholeBytes(array, 0, 3));\n\t\tassertEquals(16, NumSetBits.getNumSetBitsBetweenWholeBytes(array, 1, 2));\n\t}", "signature": "void getNumSetBits_ByteArray()", "full_signature": "@Test public void getNumSetBits_ByteArray()", "class_method_signature": "NumSetBitsTest.getNumSetBits_ByteArray()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getNumSetBitsBetweenWholeBytes", "assertEquals", "getNumSetBitsBetweenWholeBytes"]}, "focal_class": {"identifier": "NumSetBits", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getNumSetBits", "parameters": "(byte[] leds, long offset, long length)", "modifiers": "public static", "return": "long", "signature": "long getNumSetBits(byte[] leds, long offset, long length)", "full_signature": "public static long getNumSetBits(byte[] leds, long offset, long length)", "class_method_signature": "NumSetBits.getNumSetBits(byte[] leds, long offset, long length)", "testcase": false, "constructor": false}, {"identifier": "getNumSetBits", "parameters": "(byte b, int startOffset, int endOffset)", "modifiers": "public static", "return": "int", "signature": "int getNumSetBits(byte b, int startOffset, int endOffset)", "full_signature": "public static int getNumSetBits(byte b, int startOffset, int endOffset)", "class_method_signature": "NumSetBits.getNumSetBits(byte b, int startOffset, int endOffset)", "testcase": false, "constructor": false}, {"identifier": "getNumSetBitsBetweenWholeBytes", "parameters": "(byte[] array,\n\t\t\tint firstByte, int lastByte)", "modifiers": "public static", "return": "long", "signature": "long getNumSetBitsBetweenWholeBytes(byte[] array,\n\t\t\tint firstByte, int lastByte)", "full_signature": "public static long getNumSetBitsBetweenWholeBytes(byte[] array,\n\t\t\tint firstByte, int lastByte)", "class_method_signature": "NumSetBits.getNumSetBitsBetweenWholeBytes(byte[] array,\n\t\t\tint firstByte, int lastByte)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/kowshik/bigo/bitsandbytes/NumSetBits.java"}, "focal_method": {"identifier": "getNumSetBitsBetweenWholeBytes", "parameters": "(byte[] array,\n\t\t\tint firstByte, int lastByte)", "modifiers": "public static", "return": "long", "body": "public static long getNumSetBitsBetweenWholeBytes(byte[] array,\n\t\t\tint firstByte, int lastByte) {\n\t\tlong totalBits = 0;\n\t\tfor (int index = firstByte; index <= lastByte; index++) {\n\t\t\ttotalBits += getNumSetBits(array[index], 0, 7);\n\t\t}\n\n\t\treturn totalBits;\n\t}", "signature": "long getNumSetBitsBetweenWholeBytes(byte[] array,\n\t\t\tint firstByte, int lastByte)", "full_signature": "public static long getNumSetBitsBetweenWholeBytes(byte[] array,\n\t\t\tint firstByte, int lastByte)", "class_method_signature": "NumSetBits.getNumSetBitsBetweenWholeBytes(byte[] array,\n\t\t\tint firstByte, int lastByte)", "testcase": false, "constructor": false, "invocations": ["getNumSetBits"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}