{"test_class": {"identifier": "MyServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private  MyService myService;", "modifier": "@Autowired\n    private", "type": "MyService", "declarator": "myService", "var_name": "myService"}], "file": "spring-boot-study-helloworld-service/src/test/java/com/fishpro/helloworld/service/MyServiceTest.java"}, "test_case": {"identifier": "contextLoads", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void contextLoads(){\n        assertThat(myService.message()).isNotNull();\n    }", "signature": "void contextLoads()", "full_signature": "@Test public void contextLoads()", "class_method_signature": "MyServiceTest.contextLoads()", "testcase": true, "constructor": false, "invocations": ["isNotNull", "assertThat", "message"]}, "focal_class": {"identifier": "MyService", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "message", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String message()", "full_signature": "public String message()", "class_method_signature": "MyService.message()", "testcase": false, "constructor": false}], "file": "spring-boot-study-helloworld-service/src/main/java/com/fishpro/helloworld/service/MyService.java"}, "focal_method": {"identifier": "message", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String message(){\n        return \"this is module for helloworld.service method message\";\n    }", "signature": "String message()", "full_signature": "public String message()", "class_method_signature": "MyService.message()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 196205406, "url": "https://github.com/fishpro/spring-boot-study", "language": "Java", "is_fork": false, "fork_count": 67, "stargazer_count": 60, "size": 531, "license": "licensed"}}