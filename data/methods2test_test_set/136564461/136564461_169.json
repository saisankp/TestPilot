{"test_class": {"identifier": "HashesTest", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/crypto/HashesTest.java"}, "test_case": {"identifier": "success_ripemd", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void success_ripemd() {\n        // Test Vector from https://md5calc.com/hash/ripemd160\n        String seed1 = \"This is a pen.\";\n        byte[] result1 = Hashes.hash(HashAlgorithm.RIPEMD_160, seed1.getBytes());\n        assertThat(HexEncoder.getString(result1), is(\"539f1d6a8339b49e607ee55e5345b9ac3b3ae252\"));\n\n        String seed2 = \"lkadjlkfalkgnlaksdnfkladf\";\n        byte[] result2 = Hashes.hash(HashAlgorithm.RIPEMD_160, seed2.getBytes());\n        assertThat(HexEncoder.getString(result2), is(\"174a10788898aa542a198ee27a59a039d5671bc8\"));\n\n        String seed3 = \"fjadklfasdufopadsf089q2ohiasjdlkfary80p oiajfdklf\";\n        byte[] result3 = Hashes.hash(HashAlgorithm.RIPEMD_160, seed3.getBytes());\n        assertThat(HexEncoder.getString(result3), is(\"311a4846f7f7889dcb32c4ff4500e9923fb61988\"));\n\n    }", "signature": "void success_ripemd()", "full_signature": "@Test public void success_ripemd()", "class_method_signature": "HashesTest.success_ripemd()", "testcase": true, "constructor": false, "invocations": ["hash", "getBytes", "assertThat", "getString", "is", "hash", "getBytes", "assertThat", "getString", "is", "hash", "getBytes", "assertThat", "getString", "is"]}, "focal_class": {"identifier": "Hashes", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "hash", "parameters": "(HashAlgorithm algorithm, byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "full_signature": "public static byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "class_method_signature": "Hashes.hash(HashAlgorithm algorithm, byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "hash", "parameters": "(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] hash(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "full_signature": "public static byte[] hash(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "class_method_signature": "Hashes.hash(HashAlgorithm algorithm, int outputByteLength, byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "hash", "parameters": "(String algorithm, byte[]... inputs)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] hash(String algorithm, byte[]... inputs)", "full_signature": "private static byte[] hash(String algorithm, byte[]... inputs)", "class_method_signature": "Hashes.hash(String algorithm, byte[]... inputs)", "testcase": false, "constructor": false}, {"identifier": "hashVariableOutput", "parameters": "(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] hashVariableOutput(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "full_signature": "private static byte[] hashVariableOutput(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "class_method_signature": "Hashes.hashVariableOutput(HashAlgorithm algorithm, int byteLength, byte[]... inputs)", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/crypto/Hashes.java"}, "focal_method": {"identifier": "hash", "parameters": "(HashAlgorithm algorithm, byte[]... inputs)", "modifiers": "public static", "return": "byte[]", "body": "public static byte[] hash(HashAlgorithm algorithm, byte[]... inputs) {\n        return hash(algorithm, algorithm.getDefaultBitLength() / 8, inputs);\n    }", "signature": "byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "full_signature": "public static byte[] hash(HashAlgorithm algorithm, byte[]... inputs)", "class_method_signature": "Hashes.hash(HashAlgorithm algorithm, byte[]... inputs)", "testcase": false, "constructor": false, "invocations": ["hash", "getDefaultBitLength"]}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}