{"test_class": {"identifier": "ConsulTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String EP_PROPERTY = \"consul.endpoint\";", "modifier": "public static final", "type": "String", "declarator": "EP_PROPERTY = \"consul.endpoint\"", "var_name": "EP_PROPERTY"}, {"original_string": "private final Random random = new Random();", "modifier": "private final", "type": "Random", "declarator": "random = new Random()", "var_name": "random"}], "file": "cn-consul/src/test/java/org/cloudname/backends/consul/ConsulTest.java"}, "test_case": {"identifier": "createSession", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createSession() {\n        final Consul consul = new Consul(System.getProperty(EP_PROPERTY));\n        assertTrue(consul.isValid());\n\n        final ConsulSession session = consul.createSession(getSessionName(), 10, 0);\n        assertThat(session, is(notNullValue()));\n\n        assertThat(session.getId(), is(not(\"\")));\n\n        session.close();\n    }", "signature": "void createSession()", "full_signature": "@Test public void createSession()", "class_method_signature": "ConsulTest.createSession()", "testcase": true, "constructor": false, "invocations": ["getProperty", "assertTrue", "isValid", "createSession", "getSessionName", "assertThat", "is", "notNullValue", "assertThat", "getId", "is", "not", "close"]}, "focal_class": {"identifier": "Consul", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(Consul.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(Consul.class.getName())", "var_name": "LOG"}, {"original_string": "public static final int DEFAULT_LOCK_DELAY = 15;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_LOCK_DELAY = 15", "var_name": "DEFAULT_LOCK_DELAY"}, {"original_string": "private final String endpoint;", "modifier": "private final", "type": "String", "declarator": "endpoint", "var_name": "endpoint"}, {"original_string": "private final Client httpClient;", "modifier": "private final", "type": "Client", "declarator": "httpClient", "var_name": "httpClient"}], "methods": [{"identifier": "Consul", "parameters": "(final String endpoint)", "modifiers": "public", "return": "", "signature": " Consul(final String endpoint)", "full_signature": "public  Consul(final String endpoint)", "class_method_signature": "Consul.Consul(final String endpoint)", "testcase": false, "constructor": true}, {"identifier": "isValid", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isValid()", "full_signature": "public boolean isValid()", "class_method_signature": "Consul.isValid()", "testcase": false, "constructor": false}, {"identifier": "createSession", "parameters": "(final String name, final int ttlMs, final int lockDelay)", "modifiers": "public", "return": "ConsulSession", "signature": "ConsulSession createSession(final String name, final int ttlMs, final int lockDelay)", "full_signature": "public ConsulSession createSession(final String name, final int ttlMs, final int lockDelay)", "class_method_signature": "Consul.createSession(final String name, final int ttlMs, final int lockDelay)", "testcase": false, "constructor": false}, {"identifier": "writeSessionData", "parameters": "(final String name, final String data, final String sessionId)", "modifiers": "public", "return": "boolean", "signature": "boolean writeSessionData(final String name, final String data, final String sessionId)", "full_signature": "public boolean writeSessionData(final String name, final String data, final String sessionId)", "class_method_signature": "Consul.writeSessionData(final String name, final String data, final String sessionId)", "testcase": false, "constructor": false}, {"identifier": "createPermanentData", "parameters": "(final String name, final String data)", "modifiers": "public", "return": "boolean", "signature": "boolean createPermanentData(final String name, final String data)", "full_signature": "public boolean createPermanentData(final String name, final String data)", "class_method_signature": "Consul.createPermanentData(final String name, final String data)", "testcase": false, "constructor": false}, {"identifier": "writePermanentData", "parameters": "(\n            final String name, final String data)", "modifiers": "public", "return": "boolean", "signature": "boolean writePermanentData(\n            final String name, final String data)", "full_signature": "public boolean writePermanentData(\n            final String name, final String data)", "class_method_signature": "Consul.writePermanentData(\n            final String name, final String data)", "testcase": false, "constructor": false}, {"identifier": "removePermanentData", "parameters": "(final String name)", "modifiers": "public", "return": "boolean", "signature": "boolean removePermanentData(final String name)", "full_signature": "public boolean removePermanentData(final String name)", "class_method_signature": "Consul.removePermanentData(final String name)", "testcase": false, "constructor": false}, {"identifier": "readData", "parameters": "(final String name)", "modifiers": "public", "return": "String", "signature": "String readData(final String name)", "full_signature": "public String readData(final String name)", "class_method_signature": "Consul.readData(final String name)", "testcase": false, "constructor": false}, {"identifier": "createWatch", "parameters": "(final String pathToWatch)", "modifiers": "public", "return": "ConsulWatch", "signature": "ConsulWatch createWatch(final String pathToWatch)", "full_signature": "public ConsulWatch createWatch(final String pathToWatch)", "class_method_signature": "Consul.createWatch(final String pathToWatch)", "testcase": false, "constructor": false}], "file": "cn-consul/src/main/java/org/cloudname/backends/consul/Consul.java"}, "focal_method": {"identifier": "createSession", "parameters": "(final String name, final int ttlMs, final int lockDelay)", "modifiers": "public", "return": "ConsulSession", "body": "public ConsulSession createSession(final String name, final int ttlMs, final int lockDelay) {\n        // TODO: move http stuff into the session class.\n        final ConsulSession newSession\n                = new ConsulSession(this.endpoint, \"id\", name, ttlMs, lockDelay);\n        final String sessionString = newSession.toJson();\n        final Entity<String> entity = Entity.entity(sessionString, MediaType.APPLICATION_JSON);\n        final Response response = httpClient\n                .target(endpoint)\n                .path(\"/v1/session/create\")\n                .request()\n                .accept(MediaType.APPLICATION_JSON)\n                .put(entity);\n        if (response.getStatus() != Response.Status.OK.getStatusCode()) {\n            LOG.log(Level.WARNING, \"Expected 200 when creating session \"\n                    + sessionString + \" but got \" + response.getStatus() + \". Consul Agent\"\n                    + \" responded with \" + response.readEntity(String.class));\n            return null;\n        }\n\n        final ConsulSession session\n                = ConsulSession.fromJsonResponse(newSession, response.readEntity(String.class));\n        if (session != null) {\n            session.startKeepAlive();\n        }\n        return session;\n\n    }", "signature": "ConsulSession createSession(final String name, final int ttlMs, final int lockDelay)", "full_signature": "public ConsulSession createSession(final String name, final int ttlMs, final int lockDelay)", "class_method_signature": "Consul.createSession(final String name, final int ttlMs, final int lockDelay)", "testcase": false, "constructor": false, "invocations": ["toJson", "entity", "put", "accept", "request", "path", "target", "getStatus", "getStatusCode", "log", "getStatus", "readEntity", "fromJsonResponse", "readEntity", "startKeepAlive"]}, "repository": {"repo_id": 2329961, "url": "https://github.com/Cloudname/cloudname", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 21, "size": 26031, "license": "licensed"}}