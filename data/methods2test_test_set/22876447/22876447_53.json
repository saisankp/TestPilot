{"test_class": {"identifier": "FolderResourceResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FolderResourceResolver resolver;", "modifier": "private", "type": "FolderResourceResolver", "declarator": "resolver", "var_name": "resolver"}, {"original_string": "private File rootDir;", "modifier": "private", "type": "File", "declarator": "rootDir", "var_name": "rootDir"}], "file": "link-move/src/test/java/com/nhl/link/move/resource/FolderResourceResolverTest.java"}, "test_case": {"identifier": "testReader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReader() throws IOException {\n\n        try (Reader r = resolver.reader(\"dummy.xml\")) {\n\n            assertNotNull(r);\n\n            char[] buffer = new char[100];\n            int read = r.read(buffer, 0, buffer.length);\n            assertEquals(\"<dummy/>\", new String(buffer, 0, read));\n        }\n    }", "signature": "void testReader()", "full_signature": "@Test public void testReader()", "class_method_signature": "FolderResourceResolverTest.testReader()", "testcase": true, "constructor": false, "invocations": ["reader", "assertNotNull", "read", "assertEquals"]}, "focal_class": {"identifier": "FolderResourceResolver", "superclass": "", "interfaces": "implements ResourceResolver", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(FolderResourceResolver.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(FolderResourceResolver.class)", "var_name": "LOGGER"}, {"original_string": "private final File baseDir;", "modifier": "private final", "type": "File", "declarator": "baseDir", "var_name": "baseDir"}], "methods": [{"identifier": "FolderResourceResolver", "parameters": "(File baseDir)", "modifiers": "public", "return": "", "signature": " FolderResourceResolver(File baseDir)", "full_signature": "public  FolderResourceResolver(File baseDir)", "class_method_signature": "FolderResourceResolver.FolderResourceResolver(File baseDir)", "testcase": false, "constructor": true}, {"identifier": "reader", "parameters": "(String name)", "modifiers": "@Override public", "return": "Reader", "signature": "Reader reader(String name)", "full_signature": "@Override public Reader reader(String name)", "class_method_signature": "FolderResourceResolver.reader(String name)", "testcase": false, "constructor": false}, {"identifier": "needsReload", "parameters": "(String location, long lastLoadedOn)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean needsReload(String location, long lastLoadedOn)", "full_signature": "@Override public boolean needsReload(String location, long lastLoadedOn)", "class_method_signature": "FolderResourceResolver.needsReload(String location, long lastLoadedOn)", "testcase": false, "constructor": false}, {"identifier": "getFile", "parameters": "(String name)", "modifiers": "protected", "return": "File", "signature": "File getFile(String name)", "full_signature": "protected File getFile(String name)", "class_method_signature": "FolderResourceResolver.getFile(String name)", "testcase": false, "constructor": false}], "file": "link-move/src/main/java/com/nhl/link/move/resource/FolderResourceResolver.java"}, "focal_method": {"identifier": "reader", "parameters": "(String name)", "modifiers": "@Override public", "return": "Reader", "body": "@Override\n    public Reader reader(String name) {\n\n        File file = getFile(name);\n\n        LOGGER.info(\"Will extract XML from {}\", file.getAbsolutePath());\n\n        try {\n            return new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8);\n        } catch (IOException e) {\n            throw new LmRuntimeException(\"Error reading extractor config XML from file \" + file, e);\n        }\n    }", "signature": "Reader reader(String name)", "full_signature": "@Override public Reader reader(String name)", "class_method_signature": "FolderResourceResolver.reader(String name)", "testcase": false, "constructor": false, "invocations": ["getFile", "info", "getAbsolutePath"]}, "repository": {"repo_id": 22876447, "url": "https://github.com/nhl/link-move", "stars": 25, "created": "8/12/2014 12:27:10 PM +00:00", "updates": "2019-12-01T17:30:35+00:00", "fork": "False", "license": "licensed"}}