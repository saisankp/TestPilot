{"test_class": {"identifier": "AttributeOptionComboDateCheckTest", "superclass": "extends BaseValidationTest", "interfaces": "", "fields": [{"original_string": "private AttributeOptionComboDateCheck rule;", "modifier": "private", "type": "AttributeOptionComboDateCheck", "declarator": "rule", "var_name": "rule"}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/test/java/org/hisp/dhis/dxf2/events/importer/shared/validation/AttributeOptionComboDateCheckTest.java"}, "test_case": {"identifier": "failOnCategoryOptionStartDateBeforeEventDate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void failOnCategoryOptionStartDateBeforeEventDate()\n    {\n        event.setEventDate( \"2019-05-01\" );\n        event.setDueDate( \"2019-05-10\" );\n\n        CategoryOptionCombo categoryOptionCombo = createCategoryOptionCombo( \"2020-01-01\", true );\n        mockContext( categoryOptionCombo );\n\n        ImportSummary importSummary = rule.check( new ImmutableEvent( event ), this.workContext );\n        assertHasError( importSummary, event,\n            \"Event date 2019-05-01 is before start date 2020-01-01 for attributeOption 'test'\" );\n    }", "signature": "void failOnCategoryOptionStartDateBeforeEventDate()", "full_signature": "@Test public void failOnCategoryOptionStartDateBeforeEventDate()", "class_method_signature": "AttributeOptionComboDateCheckTest.failOnCategoryOptionStartDateBeforeEventDate()", "testcase": true, "constructor": false, "invocations": ["setEventDate", "setDueDate", "createCategoryOptionCombo", "mockContext", "check", "assertHasError"]}, "focal_class": {"identifier": "AttributeOptionComboDateCheck", "superclass": "", "interfaces": "implements Checker", "fields": [], "methods": [{"identifier": "check", "parameters": "( ImmutableEvent event, WorkContext ctx )", "modifiers": "@Override public", "return": "ImportSummary", "signature": "ImportSummary check( ImmutableEvent event, WorkContext ctx )", "full_signature": "@Override public ImportSummary check( ImmutableEvent event, WorkContext ctx )", "class_method_signature": "AttributeOptionComboDateCheck.check( ImmutableEvent event, WorkContext ctx )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/events/importer/shared/validation/AttributeOptionComboDateCheck.java"}, "focal_method": {"identifier": "check", "parameters": "( ImmutableEvent event, WorkContext ctx )", "modifiers": "@Override public", "return": "ImportSummary", "body": "@Override\n    public ImportSummary check( ImmutableEvent event, WorkContext ctx )\n    {\n        CategoryOptionCombo attributeOptionCombo = ctx.getCategoryOptionComboMap().get( event.getUid() );\n\n        Date executionDate = null;\n\n        if ( event.getEventDate() != null )\n        {\n            executionDate = DateUtils.parseDate( event.getEventDate() );\n        }\n\n        Date dueDate = new Date();\n\n        if ( event.getDueDate() != null )\n        {\n            dueDate = DateUtils.parseDate( event.getDueDate() );\n        }\n\n        Date eventDate = executionDate != null ? executionDate : dueDate;\n\n        if ( eventDate == null )\n        {\n            return error( \"Event date can not be empty\", event.getEvent() );\n        }\n\n        for ( CategoryOption categoryOption : attributeOptionCombo.getCategoryOptions() )\n        {\n            if ( categoryOption.getStartDate() != null && eventDate.compareTo( categoryOption.getStartDate() ) < 0 )\n            {\n                return error( \"Event date \" + getMediumDateString( eventDate ) + \" is before start date \"\n                    + getMediumDateString( categoryOption.getStartDate() ) + \" for attributeOption '\"\n                    + categoryOption.getName() + \"'\", event.getEvent() );\n            }\n\n            if ( categoryOption.getEndDate() != null && eventDate.compareTo( categoryOption.getEndDate() ) > 0 )\n            {\n                return error( \"Event date \" + getMediumDateString( eventDate ) + \" is after end date \"\n                    + getMediumDateString( categoryOption.getEndDate() ) + \" for attributeOption '\"\n                    + categoryOption.getName() + \"'\", event.getEvent() );\n            }\n        }\n\n        return success();\n    }", "signature": "ImportSummary check( ImmutableEvent event, WorkContext ctx )", "full_signature": "@Override public ImportSummary check( ImmutableEvent event, WorkContext ctx )", "class_method_signature": "AttributeOptionComboDateCheck.check( ImmutableEvent event, WorkContext ctx )", "testcase": false, "constructor": false, "invocations": ["get", "getCategoryOptionComboMap", "getUid", "getEventDate", "parseDate", "getEventDate", "getDueDate", "parseDate", "getDueDate", "error", "getEvent", "getCategoryOptions", "getStartDate", "compareTo", "getStartDate", "error", "getMediumDateString", "getMediumDateString", "getStartDate", "getName", "getEvent", "getEndDate", "compareTo", "getEndDate", "error", "getMediumDateString", "getMediumDateString", "getEndDate", "getName", "getEvent", "success"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}