{"test_class": {"identifier": "LoggingPrefixProcessorDecoratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "sejda-core/src/test/java/org/sejda/core/support/prefix/processor/LoggingPrefixProcessorDecoratorTest.java"}, "test_case": {"identifier": "testProcess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcess() {\n        PrefixProcessor decorated = mock(PrefixProcessor.class);\n        LoggingPrefixProcessorDecorator victim = new LoggingPrefixProcessorDecorator(decorated);\n        NameGenerationRequest request = NameGenerationRequest.nameRequest();\n        victim.process(\"\", request);\n        verify(decorated).process(\"\", request);\n    }", "signature": "void testProcess()", "full_signature": "@Test public void testProcess()", "class_method_signature": "LoggingPrefixProcessorDecoratorTest.testProcess()", "testcase": true, "constructor": false, "invocations": ["mock", "nameRequest", "process", "process", "verify"]}, "focal_class": {"identifier": "LoggingPrefixProcessorDecorator", "superclass": "", "interfaces": "implements PrefixProcessor", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(LoggingPrefixProcessorDecorator.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(LoggingPrefixProcessorDecorator.class)", "var_name": "LOG"}, {"original_string": "private PrefixProcessor decorated;", "modifier": "private", "type": "PrefixProcessor", "declarator": "decorated", "var_name": "decorated"}], "methods": [{"identifier": "LoggingPrefixProcessorDecorator", "parameters": "(PrefixProcessor decorated)", "modifiers": "public", "return": "", "signature": " LoggingPrefixProcessorDecorator(PrefixProcessor decorated)", "full_signature": "public  LoggingPrefixProcessorDecorator(PrefixProcessor decorated)", "class_method_signature": "LoggingPrefixProcessorDecorator.LoggingPrefixProcessorDecorator(PrefixProcessor decorated)", "testcase": false, "constructor": true}, {"identifier": "process", "parameters": "(String inputPrefix, NameGenerationRequest request)", "modifiers": "@Override public", "return": "String", "signature": "String process(String inputPrefix, NameGenerationRequest request)", "full_signature": "@Override public String process(String inputPrefix, NameGenerationRequest request)", "class_method_signature": "LoggingPrefixProcessorDecorator.process(String inputPrefix, NameGenerationRequest request)", "testcase": false, "constructor": false}], "file": "sejda-core/src/main/java/org/sejda/core/support/prefix/processor/LoggingPrefixProcessorDecorator.java"}, "focal_method": {"identifier": "process", "parameters": "(String inputPrefix, NameGenerationRequest request)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String process(String inputPrefix, NameGenerationRequest request) {\n        LOG.trace(\"Processing prefix '{}' with processor '{}'\", inputPrefix, decorated.getClass());\n        String retVal = decorated.process(inputPrefix, request);\n        LOG.trace(\"Processed prefix value: '{}'\", retVal);\n        return retVal;\n    }", "signature": "String process(String inputPrefix, NameGenerationRequest request)", "full_signature": "@Override public String process(String inputPrefix, NameGenerationRequest request)", "class_method_signature": "LoggingPrefixProcessorDecorator.process(String inputPrefix, NameGenerationRequest request)", "testcase": false, "constructor": false, "invocations": ["trace", "getClass", "process", "trace"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}