{"test_class": {"identifier": "DefaultMultiPartManagerTest", "superclass": "", "interfaces": "", "fields": [], "file": "webapp/impl/src/test/java/cloud/piranha/webapp/impl/DefaultMultiPartManagerTest.java"}, "test_case": {"identifier": "testGetPart", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testGetPart() throws Exception {\n        DefaultWebApplication webApplication = new DefaultWebApplication();\n        DefaultMultiPartManager manager = new DefaultMultiPartManager();\n        DefaultWebApplicationRequest request = new DefaultWebApplicationRequest() {\n        };\n        request.setContentType(\"multipart/form-data; boundary=------------------------12345\");\n        assertNull(manager.getPart(webApplication, request, \"notfound\"));\n    }", "signature": "void testGetPart()", "full_signature": "@Test void testGetPart()", "class_method_signature": "DefaultMultiPartManagerTest.testGetPart()", "testcase": true, "constructor": false, "invocations": ["setContentType", "assertNull", "getPart"]}, "focal_class": {"identifier": "DefaultMultiPartManager", "superclass": "", "interfaces": "implements MultiPartManager", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(DefaultMultiPartManager.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(DefaultMultiPartManager.class.getName())", "var_name": "LOGGER"}], "methods": [{"identifier": "getParts", "parameters": "(WebApplication webApplication,\n            WebApplicationRequest request)", "modifiers": "@Override public", "return": "Collection<Part>", "signature": "Collection<Part> getParts(WebApplication webApplication,\n            WebApplicationRequest request)", "full_signature": "@Override public Collection<Part> getParts(WebApplication webApplication,\n            WebApplicationRequest request)", "class_method_signature": "DefaultMultiPartManager.getParts(WebApplication webApplication,\n            WebApplicationRequest request)", "testcase": false, "constructor": false}, {"identifier": "getPart", "parameters": "(WebApplication webApplication,\n            WebApplicationRequest request, String name)", "modifiers": "@Override public", "return": "Part", "signature": "Part getPart(WebApplication webApplication,\n            WebApplicationRequest request, String name)", "full_signature": "@Override public Part getPart(WebApplication webApplication,\n            WebApplicationRequest request, String name)", "class_method_signature": "DefaultMultiPartManager.getPart(WebApplication webApplication,\n            WebApplicationRequest request, String name)", "testcase": false, "constructor": false}], "file": "webapp/impl/src/main/java/cloud/piranha/webapp/impl/DefaultMultiPartManager.java"}, "focal_method": {"identifier": "getPart", "parameters": "(WebApplication webApplication,\n            WebApplicationRequest request, String name)", "modifiers": "@Override public", "return": "Part", "body": "@Override\n    public Part getPart(WebApplication webApplication,\n            WebApplicationRequest request, String name) throws ServletException {\n        LOGGER.log(Level.FINE, \"Getting part: {0} for request: {1}\", new Object[]{name, request});\n        return null;\n    }", "signature": "Part getPart(WebApplication webApplication,\n            WebApplicationRequest request, String name)", "full_signature": "@Override public Part getPart(WebApplication webApplication,\n            WebApplicationRequest request, String name)", "class_method_signature": "DefaultMultiPartManager.getPart(WebApplication webApplication,\n            WebApplicationRequest request, String name)", "testcase": false, "constructor": false, "invocations": ["log"]}, "repository": {"repo_id": 114777829, "url": "https://github.com/piranhacloud/piranha", "stars": 27, "created": "12/19/2017 2:55:23 PM +00:00", "updates": "2020-01-27T11:57:41+00:00", "fork": "False", "license": "licensed"}}