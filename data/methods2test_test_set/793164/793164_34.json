{"test_class": {"identifier": "PatientInfoTransformerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PatientInfoTransformer transformer;", "modifier": "private", "type": "PatientInfoTransformer", "declarator": "transformer", "var_name": "transformer"}], "file": "commons/ihe/xds/src/test/java/org/openehealth/ipf/commons/ihe/xds/core/transform/hl7/PatientInfoTransformerTest.java"}, "test_case": {"identifier": "testToHL7", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToHL7() {\n        PatientInfo patientInfo = new PatientInfo();\n        \n        Identifiable id = new Identifiable();\n        id.setId(\"abcdef\");\n        patientInfo.getIds().add(id);\n        \n        Name name = new XcnName();\n        name.setFamilyName(\"Joman\");\n        patientInfo.setName(name);\n\n        Address address = new Address();\n        address.setStreetAddress(\"Jo Str. 3\");\n        patientInfo.setAddress(address);\n\n        patientInfo.setDateOfBirth(\"1234\");\n        patientInfo.setGender(\"A\");\n        \n        List<String> hl7Data = transformer.toHL7(patientInfo);\n        assertEquals(5, hl7Data.size());\n        \n        assertEquals(\"PID-3|abcdef\", hl7Data.get(0));\n        assertEquals(\"PID-5|Joman\", hl7Data.get(1));\n        assertEquals(\"PID-7|1234\", hl7Data.get(2));\n        assertEquals(\"PID-8|A\", hl7Data.get(3));\n        assertEquals(\"PID-11|Jo Str. 3\", hl7Data.get(4));\n    }", "signature": "void testToHL7()", "full_signature": "@Test public void testToHL7()", "class_method_signature": "PatientInfoTransformerTest.testToHL7()", "testcase": true, "constructor": false, "invocations": ["setId", "add", "getIds", "setFamilyName", "setName", "setStreetAddress", "setAddress", "setDateOfBirth", "setGender", "toHL7", "assertEquals", "size", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "PatientInfoTransformer", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PID_PREFIX = \"PID-\";", "modifier": "private static final", "type": "String", "declarator": "PID_PREFIX = \"PID-\"", "var_name": "PID_PREFIX"}, {"original_string": "private static final Map<Integer, PIDTransformer> pidTransformers;", "modifier": "private static final", "type": "Map<Integer, PIDTransformer>", "declarator": "pidTransformers", "var_name": "pidTransformers"}], "methods": [{"identifier": "fromHL7", "parameters": "(List<String> hl7PID)", "modifiers": "public", "return": "PatientInfo", "signature": "PatientInfo fromHL7(List<String> hl7PID)", "full_signature": "public PatientInfo fromHL7(List<String> hl7PID)", "class_method_signature": "PatientInfoTransformer.fromHL7(List<String> hl7PID)", "testcase": false, "constructor": false}, {"identifier": "toHL7", "parameters": "(PatientInfo patientInfo)", "modifiers": "public", "return": "List<String>", "signature": "List<String> toHL7(PatientInfo patientInfo)", "full_signature": "public List<String> toHL7(PatientInfo patientInfo)", "class_method_signature": "PatientInfoTransformer.toHL7(PatientInfo patientInfo)", "testcase": false, "constructor": false}, {"identifier": "getPidNumber", "parameters": "(String pidNoStr)", "modifiers": "private", "return": "Integer", "signature": "Integer getPidNumber(String pidNoStr)", "full_signature": "private Integer getPidNumber(String pidNoStr)", "class_method_signature": "PatientInfoTransformer.getPidNumber(String pidNoStr)", "testcase": false, "constructor": false}], "file": "commons/ihe/xds/src/main/java/org/openehealth/ipf/commons/ihe/xds/core/transform/hl7/PatientInfoTransformer.java"}, "focal_method": {"identifier": "toHL7", "parameters": "(PatientInfo patientInfo)", "modifiers": "public", "return": "List<String>", "body": "public List<String> toHL7(PatientInfo patientInfo) {\n        if (patientInfo == null) {\n            return Collections.emptyList();\n        }\n        \n        List<String> hl7Strings = new ArrayList<String>();\n        for (Map.Entry<Integer, PIDTransformer> entry : pidTransformers.entrySet()) {\n            String pidNoStr = PID_PREFIX + entry.getKey();\n            List<String> repetitions = entry.getValue().toHL7(patientInfo);\n            if (repetitions != null) {\n                for (String repetition : repetitions) {\n                    hl7Strings.add(pidNoStr + '|' + repetition);\n                }\n            }\n        }\n        \n        return hl7Strings;\n    }", "signature": "List<String> toHL7(PatientInfo patientInfo)", "full_signature": "public List<String> toHL7(PatientInfo patientInfo)", "class_method_signature": "PatientInfoTransformer.toHL7(PatientInfo patientInfo)", "testcase": false, "constructor": false, "invocations": ["emptyList", "entrySet", "getKey", "toHL7", "getValue", "add"]}, "repository": {"repo_id": 793164, "url": "https://github.com/krasserm/ipf", "language": "Java", "is_fork": false, "fork_count": 23, "stargazer_count": 29, "size": 30233, "license": "licensed"}}