{"test_class": {"identifier": "SimpleGrantedAuthoritiesMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "SimpleGrantedAuthoritiesMapper mapper;", "modifier": "", "type": "SimpleGrantedAuthoritiesMapper", "declarator": "mapper", "var_name": "mapper"}, {"original_string": "private Map<String, String> roleMappings;", "modifier": "private", "type": "Map<String, String>", "declarator": "roleMappings", "var_name": "roleMappings"}, {"original_string": "List<GrantedAuthority> authorities;", "modifier": "", "type": "List<GrantedAuthority>", "declarator": "authorities", "var_name": "authorities"}], "file": "src/core/security/src/test/java/it/geosolutions/geostore/core/security/SimpleGrantedAuthoritiesMapperTest.java"}, "test_case": {"identifier": "testMapping", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n   public void testMapping() {\n       roleMappings.put(\"A\", \"B\");\n       authorities.add(new GrantedAuthorityImpl(\"A\"));\n       Collection<? extends GrantedAuthority> mapped = mapper.mapAuthorities(authorities);\n       assertEquals(1, mapped.size());\n       assertEquals(\"B\", mapped.iterator().next().getAuthority());\n   }", "signature": "void testMapping()", "full_signature": "@Test public void testMapping()", "class_method_signature": "SimpleGrantedAuthoritiesMapperTest.testMapping()", "testcase": true, "constructor": false, "invocations": ["put", "add", "mapAuthorities", "assertEquals", "size", "assertEquals", "getAuthority", "next", "iterator"]}, "focal_class": {"identifier": "SimpleGrantedAuthoritiesMapper", "superclass": "", "interfaces": "implements GrantedAuthoritiesMapper", "fields": [{"original_string": "private Map<String, String> mappings = new HashMap<String, String>();", "modifier": "private", "type": "Map<String, String>", "declarator": "mappings = new HashMap<String, String>()", "var_name": "mappings"}], "methods": [{"identifier": "SimpleGrantedAuthoritiesMapper", "parameters": "(Map<String, String> mappings)", "modifiers": "public", "return": "", "signature": " SimpleGrantedAuthoritiesMapper(Map<String, String> mappings)", "full_signature": "public  SimpleGrantedAuthoritiesMapper(Map<String, String> mappings)", "class_method_signature": "SimpleGrantedAuthoritiesMapper.SimpleGrantedAuthoritiesMapper(Map<String, String> mappings)", "testcase": false, "constructor": true}, {"identifier": "mapAuthorities", "parameters": "(\n            Collection<? extends GrantedAuthority> authorities)", "modifiers": "@Override public", "return": "Collection<? extends GrantedAuthority>", "signature": "Collection<? extends GrantedAuthority> mapAuthorities(\n            Collection<? extends GrantedAuthority> authorities)", "full_signature": "@Override public Collection<? extends GrantedAuthority> mapAuthorities(\n            Collection<? extends GrantedAuthority> authorities)", "class_method_signature": "SimpleGrantedAuthoritiesMapper.mapAuthorities(\n            Collection<? extends GrantedAuthority> authorities)", "testcase": false, "constructor": false}], "file": "src/core/security/src/main/java/it/geosolutions/geostore/core/security/SimpleGrantedAuthoritiesMapper.java"}, "focal_method": {"identifier": "mapAuthorities", "parameters": "(\n            Collection<? extends GrantedAuthority> authorities)", "modifiers": "@Override public", "return": "Collection<? extends GrantedAuthority>", "body": "@Override\n    public Collection<? extends GrantedAuthority> mapAuthorities(\n            Collection<? extends GrantedAuthority> authorities) {\n        if(mappings.isEmpty()) {\n            return authorities;\n        }\n        List<GrantedAuthority> result = new ArrayList<GrantedAuthority>();\n        for(GrantedAuthority authority : authorities) {\n            if(mappings.containsKey(authority.getAuthority())) {\n                result.add(new GrantedAuthorityImpl(mappings.get(authority.getAuthority())));\n            } else {\n                result.add(authority);\n            }\n        }\n        return result;\n    }", "signature": "Collection<? extends GrantedAuthority> mapAuthorities(\n            Collection<? extends GrantedAuthority> authorities)", "full_signature": "@Override public Collection<? extends GrantedAuthority> mapAuthorities(\n            Collection<? extends GrantedAuthority> authorities)", "class_method_signature": "SimpleGrantedAuthoritiesMapper.mapAuthorities(\n            Collection<? extends GrantedAuthority> authorities)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "containsKey", "getAuthority", "add", "get", "getAuthority", "add"]}, "repository": {"repo_id": 4157021, "url": "https://github.com/geosolutions-it/geostore", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 19, "size": 1798, "license": "licensed"}}