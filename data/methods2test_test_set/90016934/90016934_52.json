{"test_class": {"identifier": "HierarchicalDirectoryBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Log logger = LogFactory.getLog (\n      HierarchicalDirectoryBuilderTest.class);", "modifier": "private static", "type": "Log", "declarator": "logger = LogFactory.getLog (\n      HierarchicalDirectoryBuilderTest.class)", "var_name": "logger"}, {"original_string": "File tmp;", "modifier": "", "type": "File", "declarator": "tmp", "var_name": "tmp"}], "file": "core/src/test/java/fr/gael/dhus/datastore/HierarchicalDirectoryBuilderTest.java"}, "test_case": {"identifier": "getDirectory", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test \n   public void getDirectory() throws IOException\n   {\n      HierarchicalDirectoryBuilder db=new HierarchicalDirectoryBuilder(tmp,3,5);\n      File f = db.getDirectory ();\n      Assert.assertTrue (f.exists ());\n      String fileName = \"file\";\n      f = db.getDirectory (fileName);\n      File file = new File (f, fileName);\n      file.createNewFile ();\n      File f2 = db.getDirectory (fileName);\n      Assert.assertNotEquals (f.getAbsolutePath (), f2.getAbsolutePath ());\n   }", "signature": "void getDirectory()", "full_signature": "@Test public void getDirectory()", "class_method_signature": "HierarchicalDirectoryBuilderTest.getDirectory()", "testcase": true, "constructor": false, "invocations": ["getDirectory", "assertTrue", "exists", "getDirectory", "createNewFile", "getDirectory", "assertNotEquals", "getAbsolutePath", "getAbsolutePath"]}, "focal_class": {"identifier": "HierarchicalDirectoryBuilder", "superclass": "", "interfaces": "implements DirectoryBuilder", "fields": [{"original_string": "public static final String DHUS_ENTRY_NAME = \"dhus_entry\";", "modifier": "public static final", "type": "String", "declarator": "DHUS_ENTRY_NAME = \"dhus_entry\"", "var_name": "DHUS_ENTRY_NAME"}, {"original_string": "private static final Logger LOGGER = LogManager.getLogger(HierarchicalDirectoryBuilder.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LogManager.getLogger(HierarchicalDirectoryBuilder.class)", "var_name": "LOGGER"}, {"original_string": "private static final String COUNTER_FILE_NAME = \".counter\";", "modifier": "private static final", "type": "String", "declarator": "COUNTER_FILE_NAME = \".counter\"", "var_name": "COUNTER_FILE_NAME"}, {"original_string": "private static boolean isHookInstalled = false;", "modifier": "private static", "type": "boolean", "declarator": "isHookInstalled = false", "var_name": "isHookInstalled"}, {"original_string": "private Long counter = 0L;", "modifier": "private", "type": "Long", "declarator": "counter = 0L", "var_name": "counter"}, {"original_string": "private Long lastSaved = 0L;", "modifier": "private", "type": "Long", "declarator": "lastSaved = 0L", "var_name": "lastSaved"}, {"original_string": "private File root;", "modifier": "private", "type": "File", "declarator": "root", "var_name": "root"}, {"original_string": "private Long maxOccurence;", "modifier": "private", "type": "Long", "declarator": "maxOccurence", "var_name": "maxOccurence"}, {"original_string": "private Long maxItems;", "modifier": "private", "type": "Long", "declarator": "maxItems", "var_name": "maxItems"}], "methods": [{"identifier": "HierarchicalDirectoryBuilder", "parameters": "(File root, int max_occurence, int maxItems)", "modifiers": "public", "return": "", "signature": " HierarchicalDirectoryBuilder(File root, int max_occurence, int maxItems)", "full_signature": "public  HierarchicalDirectoryBuilder(File root, int max_occurence, int maxItems)", "class_method_signature": "HierarchicalDirectoryBuilder.HierarchicalDirectoryBuilder(File root, int max_occurence, int maxItems)", "testcase": false, "constructor": true}, {"identifier": "getHierarchicalPath", "parameters": "(final long counter,\n         final long max_occurrence)", "modifiers": "static", "return": "String", "signature": "String getHierarchicalPath(final long counter,\n         final long max_occurrence)", "full_signature": "static String getHierarchicalPath(final long counter,\n         final long max_occurrence)", "class_method_signature": "HierarchicalDirectoryBuilder.getHierarchicalPath(final long counter,\n         final long max_occurrence)", "testcase": false, "constructor": false}, {"identifier": "getDirectory", "parameters": "(String filename)", "modifiers": "@Override public", "return": "File", "signature": "File getDirectory(String filename)", "full_signature": "@Override public File getDirectory(String filename)", "class_method_signature": "HierarchicalDirectoryBuilder.getDirectory(String filename)", "testcase": false, "constructor": false}, {"identifier": "getRoot", "parameters": "()", "modifiers": "public", "return": "File", "signature": "File getRoot()", "full_signature": "public File getRoot()", "class_method_signature": "HierarchicalDirectoryBuilder.getRoot()", "testcase": false, "constructor": false}, {"identifier": "getUnused", "parameters": "(String filename)", "modifiers": "private", "return": "File", "signature": "File getUnused(String filename)", "full_signature": "private File getUnused(String filename)", "class_method_signature": "HierarchicalDirectoryBuilder.getUnused(String filename)", "testcase": false, "constructor": false}, {"identifier": "writeCounter", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void writeCounter()", "full_signature": "private void writeCounter()", "class_method_signature": "HierarchicalDirectoryBuilder.writeCounter()", "testcase": false, "constructor": false}], "file": "core/src/main/java/fr/gael/dhus/datastore/HierarchicalDirectoryBuilder.java"}, "focal_method": {"identifier": "getDirectory", "parameters": "(String filename)", "modifiers": "@Override public", "return": "File", "body": "@Override\n   public File getDirectory(String filename)\n   {\n      return getUnused(filename);\n   }", "signature": "File getDirectory(String filename)", "full_signature": "@Override public File getDirectory(String filename)", "class_method_signature": "HierarchicalDirectoryBuilder.getDirectory(String filename)", "testcase": false, "constructor": false, "invocations": ["getUnused"]}, "repository": {"repo_id": 90016934, "url": "https://github.com/SentinelDataHub/dhus-core", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 5, "size": 2371, "license": "licensed"}}