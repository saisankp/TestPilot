{"test_class": {"identifier": "KeysTest", "superclass": "", "interfaces": "", "fields": [], "file": "CoreFeatures/IOC/NamedKeysStorage/src/test/java/info/smart_tools/smartactors/ioc/named_keys_storage/KeysTest.java"}, "test_case": {"identifier": "checkGetOrAdd", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkGetOrAdd()\n            throws Exception {\n        IStrategyContainer strategyContainer = mock(IStrategyContainer.class);\n        IResolveDependencyStrategy strategy = mock(IResolveDependencyStrategy.class);\n        IKey key = mock(IKey.class);\n        ScopeProvider.subscribeOnCreationNewScope(\n                scope -> {\n                    try {\n                        scope.setValue(IOC.getIocKey(), strategyContainer);\n                    } catch (Exception e) {\n                        throw new Error(e);\n                    }\n                }\n        );\n        Object scopeId = ScopeProvider.createScope(null);\n        IScope scope = ScopeProvider.getScope(scopeId);\n        ScopeProvider.setCurrentScope(scope);\n        when(strategyContainer.resolve(any())).thenReturn(strategy);\n        when(strategy.resolve(\"test\")).thenReturn(key);\n        IKey result = Keys.getOrAdd(\"test\");\n        assertNotNull(result);\n        assertEquals(result, key);\n    }", "signature": "void checkGetOrAdd()", "full_signature": "@Test public void checkGetOrAdd()", "class_method_signature": "KeysTest.checkGetOrAdd()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "mock", "subscribeOnCreationNewScope", "setValue", "getIocKey", "createScope", "getScope", "setCurrentScope", "thenReturn", "when", "resolve", "any", "thenReturn", "when", "resolve", "getOrAdd", "assertNotNull", "assertEquals"]}, "focal_class": {"identifier": "Keys", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "Keys", "parameters": "()", "modifiers": "private", "return": "", "signature": " Keys()", "full_signature": "private  Keys()", "class_method_signature": "Keys.Keys()", "testcase": false, "constructor": true}, {"identifier": "getOrAdd", "parameters": "(final String keyName)", "modifiers": "public static", "return": "IKey", "signature": "IKey getOrAdd(final String keyName)", "full_signature": "public static IKey getOrAdd(final String keyName)", "class_method_signature": "Keys.getOrAdd(final String keyName)", "testcase": false, "constructor": false}], "file": "CoreFeatures/IOC/NamedKeysStorage/src/main/java/info/smart_tools/smartactors/ioc/named_keys_storage/Keys.java"}, "focal_method": {"identifier": "getOrAdd", "parameters": "(final String keyName)", "modifiers": "public static", "return": "IKey", "body": "public static IKey getOrAdd(final String keyName)\n            throws ResolutionException {\n        return (IKey) IOC.resolve(IOC.getKeyForKeyStorage(), keyName);\n    }", "signature": "IKey getOrAdd(final String keyName)", "full_signature": "public static IKey getOrAdd(final String keyName)", "class_method_signature": "Keys.getOrAdd(final String keyName)", "testcase": false, "constructor": false, "invocations": ["resolve", "getKeyForKeyStorage"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}