{"test_class": {"identifier": "WSClientSDKTest", "superclass": "", "interfaces": "", "fields": [], "file": "ws-client/src/test/java/com/alibaba/csb/ws/sdk/WSClientSDKTest.java"}, "test_case": {"identifier": "testSignHeaders", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSignHeaders() {\n    WSParams params = WSParams.create();\n\n    params.api(\"api\");\n    params.version(\"1.0.0\");\n    params.accessKey(\"ak\");\n    params.secretKey(\"sk\");\n    params.nonce(true);\n    params.fingerPrinter(\"wiseking\");\n    Map<String, String> headers = WSClientSDK.generateSignHeaders(params);\n\n    System.out.println(headers);\n    Assert.assertTrue(\"must include api\", headers.containsKey(CsbSDKConstants.API_NAME_KEY));\n  }", "signature": "void testSignHeaders()", "full_signature": "@Test public void testSignHeaders()", "class_method_signature": "WSClientSDKTest.testSignHeaders()", "testcase": true, "constructor": false, "invocations": ["create", "api", "version", "accessKey", "secretKey", "nonce", "fingerPrinter", "generateSignHeaders", "println", "assertTrue", "containsKey"]}, "focal_class": {"identifier": "WSClientSDK", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static boolean warmupFlag = false;", "modifier": "private static", "type": "boolean", "declarator": "warmupFlag = false", "var_name": "warmupFlag"}, {"original_string": "private static final String BOUND_HANDLER_KEY = \"__DynamicProxyHandler\";", "modifier": "private static final", "type": "String", "declarator": "BOUND_HANDLER_KEY = \"__DynamicProxyHandler\"", "var_name": "BOUND_HANDLER_KEY"}, {"original_string": "public static final boolean PRINT_SIGNINFO = Boolean.getBoolean(\"WSClientSDK.print.signinfo\");", "modifier": "public static final", "type": "boolean", "declarator": "PRINT_SIGNINFO = Boolean.getBoolean(\"WSClientSDK.print.signinfo\")", "var_name": "PRINT_SIGNINFO"}, {"original_string": "private static AtomicReference<String> BIZ_ID_KEY = new AtomicReference<String>();", "modifier": "private static", "type": "AtomicReference<String>", "declarator": "BIZ_ID_KEY = new AtomicReference<String>()", "var_name": "BIZ_ID_KEY"}], "methods": [{"identifier": "disableSslVerification", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void disableSslVerification()", "full_signature": "private static void disableSslVerification()", "class_method_signature": "WSClientSDK.disableSslVerification()", "testcase": false, "constructor": false}, {"identifier": "warmup", "parameters": "()", "modifiers": "public static synchronized", "return": "void", "signature": "void warmup()", "full_signature": "public static synchronized void warmup()", "class_method_signature": "WSClientSDK.warmup()", "testcase": false, "constructor": false}, {"identifier": "bizIdKey", "parameters": "(String bizIdKey)", "modifiers": "public static", "return": "void", "signature": "void bizIdKey(String bizIdKey)", "full_signature": "public static void bizIdKey(String bizIdKey)", "class_method_signature": "WSClientSDK.bizIdKey(String bizIdKey)", "testcase": false, "constructor": false}, {"identifier": "bizIdKey", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String bizIdKey()", "full_signature": "public static String bizIdKey()", "class_method_signature": "WSClientSDK.bizIdKey()", "testcase": false, "constructor": false}, {"identifier": "bind", "parameters": "(T proxy, String accessKey, String secretKey)", "modifiers": "public static", "return": "T", "signature": "T bind(T proxy, String accessKey, String secretKey)", "full_signature": "public static T bind(T proxy, String accessKey, String secretKey)", "class_method_signature": "WSClientSDK.bind(T proxy, String accessKey, String secretKey)", "testcase": false, "constructor": false}, {"identifier": "bind", "parameters": "(T proxy, WSParams params)", "modifiers": "public static", "return": "T", "signature": "T bind(T proxy, WSParams params)", "full_signature": "public static T bind(T proxy, WSParams params)", "class_method_signature": "WSClientSDK.bind(T proxy, WSParams params)", "testcase": false, "constructor": false}, {"identifier": "bind", "parameters": "(T proxy, WSParams params)", "modifiers": "public static", "return": "Object", "signature": "Object bind(T proxy, WSParams params)", "full_signature": "public static Object bind(T proxy, WSParams params)", "class_method_signature": "WSClientSDK.bind(T proxy, WSParams params)", "testcase": false, "constructor": false}, {"identifier": "bind", "parameters": "(T proxy, String accessKey, String secretKey, String apiName, String apiVersion, boolean printHeaders)", "modifiers": "public static", "return": "T", "signature": "T bind(T proxy, String accessKey, String secretKey, String apiName, String apiVersion, boolean printHeaders)", "full_signature": "public static T bind(T proxy, String accessKey, String secretKey, String apiName, String apiVersion, boolean printHeaders)", "class_method_signature": "WSClientSDK.bind(T proxy, String accessKey, String secretKey, String apiName, String apiVersion, boolean printHeaders)", "testcase": false, "constructor": false}, {"identifier": "bind", "parameters": "(T proxy, String accessKey, String secretKey, String apiName, String apiVersion)", "modifiers": "public static", "return": "T", "signature": "T bind(T proxy, String accessKey, String secretKey, String apiName, String apiVersion)", "full_signature": "public static T bind(T proxy, String accessKey, String secretKey, String apiName, String apiVersion)", "class_method_signature": "WSClientSDK.bind(T proxy, String accessKey, String secretKey, String apiName, String apiVersion)", "testcase": false, "constructor": false}, {"identifier": "setResponseMock", "parameters": "(T proxy, boolean isMock)", "modifiers": "public static", "return": "T", "signature": "T setResponseMock(T proxy, boolean isMock)", "full_signature": "public static T setResponseMock(T proxy, boolean isMock)", "class_method_signature": "WSClientSDK.setResponseMock(T proxy, boolean isMock)", "testcase": false, "constructor": false}, {"identifier": "getHandler", "parameters": "(BindingProvider bp)", "modifiers": "private static", "return": "BindingDynamicProxyHandler", "signature": "BindingDynamicProxyHandler getHandler(BindingProvider bp)", "full_signature": "private static BindingDynamicProxyHandler getHandler(BindingProvider bp)", "class_method_signature": "WSClientSDK.getHandler(BindingProvider bp)", "testcase": false, "constructor": false}, {"identifier": "validateProxy", "parameters": "(Object proxy)", "modifiers": "private static", "return": "void", "signature": "void validateProxy(Object proxy)", "full_signature": "private static void validateProxy(Object proxy)", "class_method_signature": "WSClientSDK.validateProxy(Object proxy)", "testcase": false, "constructor": false}, {"identifier": "genExtHeader", "parameters": "(String fingerStr)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> genExtHeader(String fingerStr)", "full_signature": "public static Map<String, String> genExtHeader(String fingerStr)", "class_method_signature": "WSClientSDK.genExtHeader(String fingerStr)", "testcase": false, "constructor": false}, {"identifier": "generateSignHeaders", "parameters": "(WSParams params)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> generateSignHeaders(WSParams params)", "full_signature": "public static Map<String, String> generateSignHeaders(WSParams params)", "class_method_signature": "WSClientSDK.generateSignHeaders(WSParams params)", "testcase": false, "constructor": false}], "file": "ws-client/src/main/java/com/alibaba/csb/ws/sdk/WSClientSDK.java"}, "focal_method": {"identifier": "generateSignHeaders", "parameters": "(WSParams params)", "modifiers": "public static", "return": "Map<String, String>", "body": "public static Map<String, String> generateSignHeaders(WSParams params) {\n\t\tMap<String, String> extSignHeaderMap = genExtHeader(params.getFingerPrinter());\n\t\tMap<String, String> requestHeaders = SignUtil.newParamsMap(null, params.getApi(), params.getVersion(),\n\t\t\t\tparams.getAk(), params.getSk(), params.isTimestamp(), params.isNonce(), extSignHeaderMap, null, params.getSignImpl(),params.getVerifySignImpl());\n\n\t\tif (params.isMockRequest()) {\n\t\t\trequestHeaders.put(CsbSDKConstants.HEADER_MOCK, \"true\");\n\t\t}\n\n\t\treturn requestHeaders;\n\t}", "signature": "Map<String, String> generateSignHeaders(WSParams params)", "full_signature": "public static Map<String, String> generateSignHeaders(WSParams params)", "class_method_signature": "WSClientSDK.generateSignHeaders(WSParams params)", "testcase": false, "constructor": false, "invocations": ["genExtHeader", "getFingerPrinter", "newParamsMap", "getApi", "getVersion", "getAk", "getSk", "isTimestamp", "isNonce", "getSignImpl", "getVerifySignImpl", "isMockRequest", "put"]}, "repository": {"repo_id": 94076429, "url": "https://github.com/aliyun/csb-sdk", "stars": 27, "created": "6/12/2017 9:04:20 AM +00:00", "updates": "2020-01-22T02:25:09+00:00", "fork": "False", "license": "licensed"}}