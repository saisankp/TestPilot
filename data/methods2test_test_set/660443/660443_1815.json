{"test_class": {"identifier": "BondsToAtomDescriptorTest", "superclass": "extends AtomicDescriptorTest", "interfaces": "", "fields": [], "file": "descriptor/qsaratomic/src/test/java/org/openscience/cdk/qsar/descriptors/atomic/BondsToAtomDescriptorTest.java"}, "test_case": {"identifier": "testBondsToAtomDescriptor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBondsToAtomDescriptor() throws ClassNotFoundException, CDKException, java.lang.Exception {\n        BondsToAtomDescriptor descriptor = new BondsToAtomDescriptor();\n        Object[] params = {Integer.valueOf(5)};\n        descriptor.setParameters(params);\n        SmilesParser sp = new SmilesParser(DefaultChemObjectBuilder.getInstance());\n        IAtomContainer mol = sp.parseSmiles(\"CCCCCC\"); //\n        Assert.assertEquals(5, ((IntegerResult) descriptor.calculate(mol.getAtom(0), mol).getValue()).intValue());\n    }", "signature": "void testBondsToAtomDescriptor()", "full_signature": "@Test public void testBondsToAtomDescriptor()", "class_method_signature": "BondsToAtomDescriptorTest.testBondsToAtomDescriptor()", "testcase": true, "constructor": false, "invocations": ["valueOf", "setParameters", "getInstance", "parseSmiles", "assertEquals", "intValue", "getValue", "calculate", "getAtom"]}, "focal_class": {"identifier": "BondsToAtomDescriptor", "superclass": "extends AbstractAtomicDescriptor", "interfaces": "implements IAtomicDescriptor", "fields": [{"original_string": "private int focusPosition = 0;", "modifier": "private", "type": "int", "declarator": "focusPosition = 0", "var_name": "focusPosition"}], "methods": [{"identifier": "BondsToAtomDescriptor", "parameters": "()", "modifiers": "public", "return": "", "signature": " BondsToAtomDescriptor()", "full_signature": "public  BondsToAtomDescriptor()", "class_method_signature": "BondsToAtomDescriptor.BondsToAtomDescriptor()", "testcase": false, "constructor": true}, {"identifier": "getSpecification", "parameters": "()", "modifiers": "@Override public", "return": "DescriptorSpecification", "signature": "DescriptorSpecification getSpecification()", "full_signature": "@Override public DescriptorSpecification getSpecification()", "class_method_signature": "BondsToAtomDescriptor.getSpecification()", "testcase": false, "constructor": false}, {"identifier": "setParameters", "parameters": "(Object[] params)", "modifiers": "@Override public", "return": "void", "signature": "void setParameters(Object[] params)", "full_signature": "@Override public void setParameters(Object[] params)", "class_method_signature": "BondsToAtomDescriptor.setParameters(Object[] params)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] getParameters()", "full_signature": "@Override public Object[] getParameters()", "class_method_signature": "BondsToAtomDescriptor.getParameters()", "testcase": false, "constructor": false}, {"identifier": "getDescriptorNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getDescriptorNames()", "full_signature": "@Override public String[] getDescriptorNames()", "class_method_signature": "BondsToAtomDescriptor.getDescriptorNames()", "testcase": false, "constructor": false}, {"identifier": "calculate", "parameters": "(IAtom atom, IAtomContainer container)", "modifiers": "@Override public", "return": "DescriptorValue", "signature": "DescriptorValue calculate(IAtom atom, IAtomContainer container)", "full_signature": "@Override public DescriptorValue calculate(IAtom atom, IAtomContainer container)", "class_method_signature": "BondsToAtomDescriptor.calculate(IAtom atom, IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "getParameterNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getParameterNames()", "full_signature": "@Override public String[] getParameterNames()", "class_method_signature": "BondsToAtomDescriptor.getParameterNames()", "testcase": false, "constructor": false}, {"identifier": "getParameterType", "parameters": "(String name)", "modifiers": "@Override public", "return": "Object", "signature": "Object getParameterType(String name)", "full_signature": "@Override public Object getParameterType(String name)", "class_method_signature": "BondsToAtomDescriptor.getParameterType(String name)", "testcase": false, "constructor": false}], "file": "descriptor/qsaratomic/src/main/java/org/openscience/cdk/qsar/descriptors/atomic/BondsToAtomDescriptor.java"}, "focal_method": {"identifier": "BondsToAtomDescriptor", "parameters": "()", "modifiers": "public", "return": "", "body": "public BondsToAtomDescriptor() {}", "signature": " BondsToAtomDescriptor()", "full_signature": "public  BondsToAtomDescriptor()", "class_method_signature": "BondsToAtomDescriptor.BondsToAtomDescriptor()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}