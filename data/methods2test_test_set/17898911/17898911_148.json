{"test_class": {"identifier": "CSVDataSetEditorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock protected DataSetDefBasicAttributesEditor basicAttributesEditor;", "modifier": "@Mock protected", "type": "DataSetDefBasicAttributesEditor", "declarator": "basicAttributesEditor", "var_name": "basicAttributesEditor"}, {"original_string": "@Mock protected DataSetDefColumnsFilterEditor columnsAndFilterEditor;", "modifier": "@Mock protected", "type": "DataSetDefColumnsFilterEditor", "declarator": "columnsAndFilterEditor", "var_name": "columnsAndFilterEditor"}, {"original_string": "@Mock protected DataSetDefPreviewTable previewTable;", "modifier": "@Mock protected", "type": "DataSetDefPreviewTable", "declarator": "previewTable", "var_name": "previewTable"}, {"original_string": "@Mock protected DataSetDefBackendCacheAttributesEditor backendCacheAttributesEditor;", "modifier": "@Mock protected", "type": "DataSetDefBackendCacheAttributesEditor", "declarator": "backendCacheAttributesEditor", "var_name": "backendCacheAttributesEditor"}, {"original_string": "@Mock protected DataSetDefClientCacheAttributesEditor clientCacheAttributesEditor;", "modifier": "@Mock protected", "type": "DataSetDefClientCacheAttributesEditor", "declarator": "clientCacheAttributesEditor", "var_name": "clientCacheAttributesEditor"}, {"original_string": "@Mock protected DataSetDefRefreshAttributesEditor refreshEditor;", "modifier": "@Mock protected", "type": "DataSetDefRefreshAttributesEditor", "declarator": "refreshEditor", "var_name": "refreshEditor"}, {"original_string": "@Mock protected DataSetClientServices clientServices;", "modifier": "@Mock protected", "type": "DataSetClientServices", "declarator": "clientServices", "var_name": "clientServices"}, {"original_string": "@Mock protected LoadingBox loadingBox;", "modifier": "@Mock protected", "type": "LoadingBox", "declarator": "loadingBox", "var_name": "loadingBox"}, {"original_string": "@Mock protected EventSourceMock<ErrorEvent> errorEvent;", "modifier": "@Mock protected", "type": "EventSourceMock<ErrorEvent>", "declarator": "errorEvent", "var_name": "errorEvent"}, {"original_string": "@Mock protected EventSourceMock<TabChangedEvent> tabChangedEvent;", "modifier": "@Mock protected", "type": "EventSourceMock<TabChangedEvent>", "declarator": "tabChangedEvent", "var_name": "tabChangedEvent"}, {"original_string": "@Mock protected DataSetEditor.View view;", "modifier": "@Mock protected", "type": "DataSetEditor.View", "declarator": "view", "var_name": "view"}, {"original_string": "@Mock protected CSVDataSetDef dataSetDef;", "modifier": "@Mock protected", "type": "CSVDataSetDef", "declarator": "dataSetDef", "var_name": "dataSetDef"}, {"original_string": "@Mock CSVDataSetDefAttributesEditor attributesEditor;", "modifier": "@Mock", "type": "CSVDataSetDefAttributesEditor", "declarator": "attributesEditor", "var_name": "attributesEditor"}, {"original_string": "CSVDataSetEditor presenter;", "modifier": "", "type": "CSVDataSetEditor", "declarator": "presenter", "var_name": "presenter"}], "file": "dashbuilder-client/dashbuilder-widgets/src/test/java/org/dashbuilder/client/widgets/dataset/editor/csv/CSVDataSetEditorTest.java"}, "test_case": {"identifier": "testQuoteChar", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testQuoteChar() {\n        assertEquals(attributesEditor.quoteChar, presenter.quoteChar());\n    }", "signature": "void testQuoteChar()", "full_signature": "@Test public void testQuoteChar()", "class_method_signature": "CSVDataSetEditorTest.testQuoteChar()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "quoteChar"]}, "focal_class": {"identifier": "CSVDataSetEditor", "superclass": "extends DataSetEditor<CSVDataSetDef>", "interfaces": "implements org.dashbuilder.dataset.client.editor.CSVDataSetDefEditor", "fields": [{"original_string": "CSVDataSetDefAttributesEditor attributesEditor;", "modifier": "", "type": "CSVDataSetDefAttributesEditor", "declarator": "attributesEditor", "var_name": "attributesEditor"}], "methods": [{"identifier": "CSVDataSetEditor", "parameters": "(final DataSetDefBasicAttributesEditor basicAttributesEditor,\n                            final CSVDataSetDefAttributesEditor attributesEditor,\n                            final DataSetDefColumnsFilterEditor columnsAndFilterEditor,\n                            final DataSetDefPreviewTable previewTable,\n                            final DataSetDefBackendCacheAttributesEditor backendCacheAttributesEditor,\n                            final DataSetDefClientCacheAttributesEditor clientCacheAttributesEditor,\n                            final DataSetDefRefreshAttributesEditor refreshEditor,\n                            final DataSetClientServices clientServices,\n                            final LoadingBox loadingBox,\n                            final Event<ErrorEvent> errorEvent,\n                            final Event<TabChangedEvent> tabChangedEvent,\n                            final View view)", "modifiers": "@Inject public", "return": "", "signature": " CSVDataSetEditor(final DataSetDefBasicAttributesEditor basicAttributesEditor,\n                            final CSVDataSetDefAttributesEditor attributesEditor,\n                            final DataSetDefColumnsFilterEditor columnsAndFilterEditor,\n                            final DataSetDefPreviewTable previewTable,\n                            final DataSetDefBackendCacheAttributesEditor backendCacheAttributesEditor,\n                            final DataSetDefClientCacheAttributesEditor clientCacheAttributesEditor,\n                            final DataSetDefRefreshAttributesEditor refreshEditor,\n                            final DataSetClientServices clientServices,\n                            final LoadingBox loadingBox,\n                            final Event<ErrorEvent> errorEvent,\n                            final Event<TabChangedEvent> tabChangedEvent,\n                            final View view)", "full_signature": "@Inject public  CSVDataSetEditor(final DataSetDefBasicAttributesEditor basicAttributesEditor,\n                            final CSVDataSetDefAttributesEditor attributesEditor,\n                            final DataSetDefColumnsFilterEditor columnsAndFilterEditor,\n                            final DataSetDefPreviewTable previewTable,\n                            final DataSetDefBackendCacheAttributesEditor backendCacheAttributesEditor,\n                            final DataSetDefClientCacheAttributesEditor clientCacheAttributesEditor,\n                            final DataSetDefRefreshAttributesEditor refreshEditor,\n                            final DataSetClientServices clientServices,\n                            final LoadingBox loadingBox,\n                            final Event<ErrorEvent> errorEvent,\n                            final Event<TabChangedEvent> tabChangedEvent,\n                            final View view)", "class_method_signature": "CSVDataSetEditor.CSVDataSetEditor(final DataSetDefBasicAttributesEditor basicAttributesEditor,\n                            final CSVDataSetDefAttributesEditor attributesEditor,\n                            final DataSetDefColumnsFilterEditor columnsAndFilterEditor,\n                            final DataSetDefPreviewTable previewTable,\n                            final DataSetDefBackendCacheAttributesEditor backendCacheAttributesEditor,\n                            final DataSetDefClientCacheAttributesEditor clientCacheAttributesEditor,\n                            final DataSetDefRefreshAttributesEditor refreshEditor,\n                            final DataSetClientServices clientServices,\n                            final LoadingBox loadingBox,\n                            final Event<ErrorEvent> errorEvent,\n                            final Event<TabChangedEvent> tabChangedEvent,\n                            final View view)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "@PostConstruct public", "return": "void", "signature": "void init()", "full_signature": "@PostConstruct public void init()", "class_method_signature": "CSVDataSetEditor.init()", "testcase": false, "constructor": false}, {"identifier": "fileURL", "parameters": "()", "modifiers": "@Override public", "return": "ValueBoxEditor<String>", "signature": "ValueBoxEditor<String> fileURL()", "full_signature": "@Override public ValueBoxEditor<String> fileURL()", "class_method_signature": "CSVDataSetEditor.fileURL()", "testcase": false, "constructor": false}, {"identifier": "filePath", "parameters": "()", "modifiers": "@Override public", "return": "FileUploadEditor", "signature": "FileUploadEditor filePath()", "full_signature": "@Override public FileUploadEditor filePath()", "class_method_signature": "CSVDataSetEditor.filePath()", "testcase": false, "constructor": false}, {"identifier": "separatorChar", "parameters": "()", "modifiers": "@Override public", "return": "ValueBoxEditor<Character>", "signature": "ValueBoxEditor<Character> separatorChar()", "full_signature": "@Override public ValueBoxEditor<Character> separatorChar()", "class_method_signature": "CSVDataSetEditor.separatorChar()", "testcase": false, "constructor": false}, {"identifier": "quoteChar", "parameters": "()", "modifiers": "@Override public", "return": "ValueBoxEditor<Character>", "signature": "ValueBoxEditor<Character> quoteChar()", "full_signature": "@Override public ValueBoxEditor<Character> quoteChar()", "class_method_signature": "CSVDataSetEditor.quoteChar()", "testcase": false, "constructor": false}, {"identifier": "escapeChar", "parameters": "()", "modifiers": "@Override public", "return": "ValueBoxEditor<Character>", "signature": "ValueBoxEditor<Character> escapeChar()", "full_signature": "@Override public ValueBoxEditor<Character> escapeChar()", "class_method_signature": "CSVDataSetEditor.escapeChar()", "testcase": false, "constructor": false}, {"identifier": "datePattern", "parameters": "()", "modifiers": "@Override public", "return": "ValueBoxEditor<String>", "signature": "ValueBoxEditor<String> datePattern()", "full_signature": "@Override public ValueBoxEditor<String> datePattern()", "class_method_signature": "CSVDataSetEditor.datePattern()", "testcase": false, "constructor": false}, {"identifier": "numberPattern", "parameters": "()", "modifiers": "@Override public", "return": "ValueBoxEditor<String>", "signature": "ValueBoxEditor<String> numberPattern()", "full_signature": "@Override public ValueBoxEditor<String> numberPattern()", "class_method_signature": "CSVDataSetEditor.numberPattern()", "testcase": false, "constructor": false}, {"identifier": "isUsingFilePath", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isUsingFilePath()", "full_signature": "public boolean isUsingFilePath()", "class_method_signature": "CSVDataSetEditor.isUsingFilePath()", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(final CSVDataSetDef value)", "modifiers": "@Override public", "return": "void", "signature": "void setValue(final CSVDataSetDef value)", "full_signature": "@Override public void setValue(final CSVDataSetDef value)", "class_method_signature": "CSVDataSetEditor.setValue(final CSVDataSetDef value)", "testcase": false, "constructor": false}], "file": "dashbuilder-client/dashbuilder-widgets/src/main/java/org/dashbuilder/client/widgets/dataset/editor/csv/CSVDataSetEditor.java"}, "focal_method": {"identifier": "quoteChar", "parameters": "()", "modifiers": "@Override public", "return": "ValueBoxEditor<Character>", "body": "@Override\n    public ValueBoxEditor<Character> quoteChar() {\n        return attributesEditor.quoteChar();\n    }", "signature": "ValueBoxEditor<Character> quoteChar()", "full_signature": "@Override public ValueBoxEditor<Character> quoteChar()", "class_method_signature": "CSVDataSetEditor.quoteChar()", "testcase": false, "constructor": false, "invocations": ["quoteChar"]}, "repository": {"repo_id": 17898911, "url": "https://github.com/dashbuilder/dashbuilder", "language": "Java", "is_fork": false, "fork_count": 119, "stargazer_count": 160, "size": 10456, "license": "licensed"}}