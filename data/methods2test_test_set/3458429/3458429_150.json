{"test_class": {"identifier": "TestBufferUtils", "superclass": "", "interfaces": "", "fields": [], "file": "firefly-common/src/test/java/com/fireflysource/common/io/TestBufferUtils.java"}, "test_case": {"identifier": "testPutHexInt", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testPutHexInt() {\n        int[] val = {\n                0, 42, 43, -44, -45, -2147483648, 2147483647\n        };\n\n        String[] str = {\n                \"0\", \"2A\", \"2B\", \"-2C\", \"-2D\", \"-80000000\", \"7FFFFFFF\"\n        };\n\n        ByteBuffer buffer = ByteBuffer.allocate(50);\n\n        for (int i = 0; i < val.length; i++) {\n            BufferUtils.clearToFill(buffer);\n            BufferUtils.putHexInt(buffer, val[i]);\n            BufferUtils.flipToFlush(buffer, 0);\n            assertEquals(str[i], BufferUtils.toString(buffer), \"t\" + i);\n        }\n    }", "signature": "void testPutHexInt()", "full_signature": "@Test void testPutHexInt()", "class_method_signature": "TestBufferUtils.testPutHexInt()", "testcase": true, "constructor": false, "invocations": ["allocate", "clearToFill", "putHexInt", "flipToFlush", "assertEquals", "toString"]}, "focal_class": {"identifier": "BufferUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final ByteBuffer EMPTY_BUFFER = ByteBuffer.allocate(0);", "modifier": "public static final", "type": "ByteBuffer", "declarator": "EMPTY_BUFFER = ByteBuffer.allocate(0)", "var_name": "EMPTY_BUFFER"}, {"original_string": "static final int TEMP_BUFFER_SIZE = 4096;", "modifier": "static final", "type": "int", "declarator": "TEMP_BUFFER_SIZE = 4096", "var_name": "TEMP_BUFFER_SIZE"}, {"original_string": "static final byte SPACE = 0x20;", "modifier": "static final", "type": "byte", "declarator": "SPACE = 0x20", "var_name": "SPACE"}, {"original_string": "static final byte MINUS = '-';", "modifier": "static final", "type": "byte", "declarator": "MINUS = '-'", "var_name": "MINUS"}, {"original_string": "static final byte[] DIGIT = {(byte) '0', (byte) '1', (byte) '2', (byte) '3', (byte) '4', (byte) '5', (byte) '6', (byte) '7', (byte) '8', (byte) '9', (byte) 'A', (byte) 'B', (byte) 'C', (byte) 'D', (byte) 'E', (byte) 'F'};", "modifier": "static final", "type": "byte[]", "declarator": "DIGIT = {(byte) '0', (byte) '1', (byte) '2', (byte) '3', (byte) '4', (byte) '5', (byte) '6', (byte) '7', (byte) '8', (byte) '9', (byte) 'A', (byte) 'B', (byte) 'C', (byte) 'D', (byte) 'E', (byte) 'F'}", "var_name": "DIGIT"}, {"original_string": "private final static int[] decDivisors = {1000000000, 100000000, 10000000, 1000000, 100000, 10000, 1000, 100, 10, 1};", "modifier": "private final static", "type": "int[]", "declarator": "decDivisors = {1000000000, 100000000, 10000000, 1000000, 100000, 10000, 1000, 100, 10, 1}", "var_name": "decDivisors"}, {"original_string": "private final static int[] hexDivisors = {0x10000000, 0x1000000, 0x100000, 0x10000, 0x1000, 0x100, 0x10, 0x1};", "modifier": "private final static", "type": "int[]", "declarator": "hexDivisors = {0x10000000, 0x1000000, 0x100000, 0x10000, 0x1000, 0x100, 0x10, 0x1}", "var_name": "hexDivisors"}, {"original_string": "private final static long[] decDivisorsL = {1000000000000000000L, 100000000000000000L, 10000000000000000L, 1000000000000000L, 100000000000000L, 10000000000000L, 1000000000000L, 100000000000L, 10000000000L, 1000000000L, 100000000L, 10000000L, 1000000L, 100000L, 10000L, 1000L, 100L, 10L, 1L};", "modifier": "private final static", "type": "long[]", "declarator": "decDivisorsL = {1000000000000000000L, 100000000000000000L, 10000000000000000L, 1000000000000000L, 100000000000000L, 10000000000000L, 1000000000000L, 100000000000L, 10000000000L, 1000000000L, 100000000L, 10000000L, 1000000L, 100000L, 10000L, 1000L, 100L, 10L, 1L}", "var_name": "decDivisorsL"}], "methods": [{"identifier": "allocate", "parameters": "(int capacity)", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer allocate(int capacity)", "full_signature": "public static ByteBuffer allocate(int capacity)", "class_method_signature": "BufferUtils.allocate(int capacity)", "testcase": false, "constructor": false}, {"identifier": "allocateDirect", "parameters": "(int capacity)", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer allocateDirect(int capacity)", "full_signature": "public static ByteBuffer allocateDirect(int capacity)", "class_method_signature": "BufferUtils.allocateDirect(int capacity)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "void", "signature": "void clear(ByteBuffer buffer)", "full_signature": "public static void clear(ByteBuffer buffer)", "class_method_signature": "BufferUtils.clear(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "clearToFill", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "void", "signature": "void clearToFill(ByteBuffer buffer)", "full_signature": "public static void clearToFill(ByteBuffer buffer)", "class_method_signature": "BufferUtils.clearToFill(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "flipToFill", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "int", "signature": "int flipToFill(ByteBuffer buffer)", "full_signature": "public static int flipToFill(ByteBuffer buffer)", "class_method_signature": "BufferUtils.flipToFill(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "flipToFlush", "parameters": "(ByteBuffer buffer, int position)", "modifiers": "public static", "return": "void", "signature": "void flipToFlush(ByteBuffer buffer, int position)", "full_signature": "public static void flipToFlush(ByteBuffer buffer, int position)", "class_method_signature": "BufferUtils.flipToFlush(ByteBuffer buffer, int position)", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toArray(ByteBuffer buffer)", "full_signature": "public static byte[] toArray(ByteBuffer buffer)", "class_method_signature": "BufferUtils.toArray(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "toArray", "parameters": "(Collection<ByteBuffer> buffers)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toArray(Collection<ByteBuffer> buffers)", "full_signature": "public static byte[] toArray(Collection<ByteBuffer> buffers)", "class_method_signature": "BufferUtils.toArray(Collection<ByteBuffer> buffers)", "testcase": false, "constructor": false}, {"identifier": "isTheEmptyBuffer", "parameters": "(ByteBuffer buf)", "modifiers": "public static", "return": "boolean", "signature": "boolean isTheEmptyBuffer(ByteBuffer buf)", "full_signature": "public static boolean isTheEmptyBuffer(ByteBuffer buf)", "class_method_signature": "BufferUtils.isTheEmptyBuffer(ByteBuffer buf)", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(ByteBuffer buf)", "modifiers": "public static", "return": "boolean", "signature": "boolean isEmpty(ByteBuffer buf)", "full_signature": "public static boolean isEmpty(ByteBuffer buf)", "class_method_signature": "BufferUtils.isEmpty(ByteBuffer buf)", "testcase": false, "constructor": false}, {"identifier": "hasContent", "parameters": "(ByteBuffer buf)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasContent(ByteBuffer buf)", "full_signature": "public static boolean hasContent(ByteBuffer buf)", "class_method_signature": "BufferUtils.hasContent(ByteBuffer buf)", "testcase": false, "constructor": false}, {"identifier": "isFull", "parameters": "(ByteBuffer buf)", "modifiers": "public static", "return": "boolean", "signature": "boolean isFull(ByteBuffer buf)", "full_signature": "public static boolean isFull(ByteBuffer buf)", "class_method_signature": "BufferUtils.isFull(ByteBuffer buf)", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "int", "signature": "int length(ByteBuffer buffer)", "full_signature": "public static int length(ByteBuffer buffer)", "class_method_signature": "BufferUtils.length(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "space", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "int", "signature": "int space(ByteBuffer buffer)", "full_signature": "public static int space(ByteBuffer buffer)", "class_method_signature": "BufferUtils.space(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "compact", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "boolean", "signature": "boolean compact(ByteBuffer buffer)", "full_signature": "public static boolean compact(ByteBuffer buffer)", "class_method_signature": "BufferUtils.compact(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(ByteBuffer from, ByteBuffer to)", "modifiers": "public static", "return": "int", "signature": "int put(ByteBuffer from, ByteBuffer to)", "full_signature": "public static int put(ByteBuffer from, ByteBuffer to)", "class_method_signature": "BufferUtils.put(ByteBuffer from, ByteBuffer to)", "testcase": false, "constructor": false}, {"identifier": "flipPutFlip", "parameters": "(ByteBuffer from, ByteBuffer to)", "modifiers": "public static", "return": "int", "signature": "int flipPutFlip(ByteBuffer from, ByteBuffer to)", "full_signature": "public static int flipPutFlip(ByteBuffer from, ByteBuffer to)", "class_method_signature": "BufferUtils.flipPutFlip(ByteBuffer from, ByteBuffer to)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(ByteBuffer to, byte[] b, int off, int len)", "modifiers": "public static", "return": "void", "signature": "void append(ByteBuffer to, byte[] b, int off, int len)", "full_signature": "public static void append(ByteBuffer to, byte[] b, int off, int len)", "class_method_signature": "BufferUtils.append(ByteBuffer to, byte[] b, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(ByteBuffer to, byte b)", "modifiers": "public static", "return": "void", "signature": "void append(ByteBuffer to, byte b)", "full_signature": "public static void append(ByteBuffer to, byte b)", "class_method_signature": "BufferUtils.append(ByteBuffer to, byte b)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(ByteBuffer to, ByteBuffer b)", "modifiers": "public static", "return": "int", "signature": "int append(ByteBuffer to, ByteBuffer b)", "full_signature": "public static int append(ByteBuffer to, ByteBuffer b)", "class_method_signature": "BufferUtils.append(ByteBuffer to, ByteBuffer b)", "testcase": false, "constructor": false}, {"identifier": "fill", "parameters": "(ByteBuffer to, byte[] b, int off, int len)", "modifiers": "public static", "return": "int", "signature": "int fill(ByteBuffer to, byte[] b, int off, int len)", "full_signature": "public static int fill(ByteBuffer to, byte[] b, int off, int len)", "class_method_signature": "BufferUtils.fill(ByteBuffer to, byte[] b, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "readFrom", "parameters": "(File file, ByteBuffer buffer)", "modifiers": "public static", "return": "void", "signature": "void readFrom(File file, ByteBuffer buffer)", "full_signature": "public static void readFrom(File file, ByteBuffer buffer)", "class_method_signature": "BufferUtils.readFrom(File file, ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "readFrom", "parameters": "(InputStream is, int needed, ByteBuffer buffer)", "modifiers": "public static", "return": "void", "signature": "void readFrom(InputStream is, int needed, ByteBuffer buffer)", "full_signature": "public static void readFrom(InputStream is, int needed, ByteBuffer buffer)", "class_method_signature": "BufferUtils.readFrom(InputStream is, int needed, ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "writeTo", "parameters": "(ByteBuffer buffer, OutputStream out)", "modifiers": "public static", "return": "void", "signature": "void writeTo(ByteBuffer buffer, OutputStream out)", "full_signature": "public static void writeTo(ByteBuffer buffer, OutputStream out)", "class_method_signature": "BufferUtils.writeTo(ByteBuffer buffer, OutputStream out)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "String", "signature": "String toString(ByteBuffer buffer)", "full_signature": "public static String toString(ByteBuffer buffer)", "class_method_signature": "BufferUtils.toString(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "toUTF8String", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "String", "signature": "String toUTF8String(ByteBuffer buffer)", "full_signature": "public static String toUTF8String(ByteBuffer buffer)", "class_method_signature": "BufferUtils.toUTF8String(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(ByteBuffer buffer, Charset charset)", "modifiers": "public static", "return": "String", "signature": "String toString(ByteBuffer buffer, Charset charset)", "full_signature": "public static String toString(ByteBuffer buffer, Charset charset)", "class_method_signature": "BufferUtils.toString(ByteBuffer buffer, Charset charset)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(List<ByteBuffer> buffers, Charset charset)", "modifiers": "public static", "return": "String", "signature": "String toString(List<ByteBuffer> buffers, Charset charset)", "full_signature": "public static String toString(List<ByteBuffer> buffers, Charset charset)", "class_method_signature": "BufferUtils.toString(List<ByteBuffer> buffers, Charset charset)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "(ByteBuffer buffer, int position, int length, Charset charset)", "modifiers": "public static", "return": "String", "signature": "String toString(ByteBuffer buffer, int position, int length, Charset charset)", "full_signature": "public static String toString(ByteBuffer buffer, int position, int length, Charset charset)", "class_method_signature": "BufferUtils.toString(ByteBuffer buffer, int position, int length, Charset charset)", "testcase": false, "constructor": false}, {"identifier": "toInt", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "int", "signature": "int toInt(ByteBuffer buffer)", "full_signature": "public static int toInt(ByteBuffer buffer)", "class_method_signature": "BufferUtils.toInt(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "toInt", "parameters": "(ByteBuffer buffer, int position, int length)", "modifiers": "public static", "return": "int", "signature": "int toInt(ByteBuffer buffer, int position, int length)", "full_signature": "public static int toInt(ByteBuffer buffer, int position, int length)", "class_method_signature": "BufferUtils.toInt(ByteBuffer buffer, int position, int length)", "testcase": false, "constructor": false}, {"identifier": "takeInt", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "int", "signature": "int takeInt(ByteBuffer buffer)", "full_signature": "public static int takeInt(ByteBuffer buffer)", "class_method_signature": "BufferUtils.takeInt(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "toLong", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "long", "signature": "long toLong(ByteBuffer buffer)", "full_signature": "public static long toLong(ByteBuffer buffer)", "class_method_signature": "BufferUtils.toLong(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "putHexInt", "parameters": "(ByteBuffer buffer, int n)", "modifiers": "public static", "return": "void", "signature": "void putHexInt(ByteBuffer buffer, int n)", "full_signature": "public static void putHexInt(ByteBuffer buffer, int n)", "class_method_signature": "BufferUtils.putHexInt(ByteBuffer buffer, int n)", "testcase": false, "constructor": false}, {"identifier": "putDecInt", "parameters": "(ByteBuffer buffer, int n)", "modifiers": "public static", "return": "void", "signature": "void putDecInt(ByteBuffer buffer, int n)", "full_signature": "public static void putDecInt(ByteBuffer buffer, int n)", "class_method_signature": "BufferUtils.putDecInt(ByteBuffer buffer, int n)", "testcase": false, "constructor": false}, {"identifier": "putDecLong", "parameters": "(ByteBuffer buffer, long n)", "modifiers": "public static", "return": "void", "signature": "void putDecLong(ByteBuffer buffer, long n)", "full_signature": "public static void putDecLong(ByteBuffer buffer, long n)", "class_method_signature": "BufferUtils.putDecLong(ByteBuffer buffer, long n)", "testcase": false, "constructor": false}, {"identifier": "toBuffer", "parameters": "(int value)", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer toBuffer(int value)", "full_signature": "public static ByteBuffer toBuffer(int value)", "class_method_signature": "BufferUtils.toBuffer(int value)", "testcase": false, "constructor": false}, {"identifier": "toBuffer", "parameters": "(long value)", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer toBuffer(long value)", "full_signature": "public static ByteBuffer toBuffer(long value)", "class_method_signature": "BufferUtils.toBuffer(long value)", "testcase": false, "constructor": false}, {"identifier": "toBuffer", "parameters": "(String s)", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer toBuffer(String s)", "full_signature": "public static ByteBuffer toBuffer(String s)", "class_method_signature": "BufferUtils.toBuffer(String s)", "testcase": false, "constructor": false}, {"identifier": "toBuffer", "parameters": "(String s, Charset charset)", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer toBuffer(String s, Charset charset)", "full_signature": "public static ByteBuffer toBuffer(String s, Charset charset)", "class_method_signature": "BufferUtils.toBuffer(String s, Charset charset)", "testcase": false, "constructor": false}, {"identifier": "toBuffer", "parameters": "(byte[] array)", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer toBuffer(byte[] array)", "full_signature": "public static ByteBuffer toBuffer(byte[] array)", "class_method_signature": "BufferUtils.toBuffer(byte[] array)", "testcase": false, "constructor": false}, {"identifier": "toBuffer", "parameters": "(byte[] array, int offset, int length)", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer toBuffer(byte[] array, int offset, int length)", "full_signature": "public static ByteBuffer toBuffer(byte[] array, int offset, int length)", "class_method_signature": "BufferUtils.toBuffer(byte[] array, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "toDirectBuffer", "parameters": "(String s)", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer toDirectBuffer(String s)", "full_signature": "public static ByteBuffer toDirectBuffer(String s)", "class_method_signature": "BufferUtils.toDirectBuffer(String s)", "testcase": false, "constructor": false}, {"identifier": "toDirectBuffer", "parameters": "(String s, Charset charset)", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer toDirectBuffer(String s, Charset charset)", "full_signature": "public static ByteBuffer toDirectBuffer(String s, Charset charset)", "class_method_signature": "BufferUtils.toDirectBuffer(String s, Charset charset)", "testcase": false, "constructor": false}, {"identifier": "toMappedBuffer", "parameters": "(File file)", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer toMappedBuffer(File file)", "full_signature": "public static ByteBuffer toMappedBuffer(File file)", "class_method_signature": "BufferUtils.toMappedBuffer(File file)", "testcase": false, "constructor": false}, {"identifier": "isMappedBuffer", "parameters": "(ByteBuffer buffer)", "modifiers": "@Deprecated public static", "return": "boolean", "signature": "boolean isMappedBuffer(ByteBuffer buffer)", "full_signature": "@Deprecated public static boolean isMappedBuffer(ByteBuffer buffer)", "class_method_signature": "BufferUtils.isMappedBuffer(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "toSummaryString", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "String", "signature": "String toSummaryString(ByteBuffer buffer)", "full_signature": "public static String toSummaryString(ByteBuffer buffer)", "class_method_signature": "BufferUtils.toSummaryString(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "toDetailString", "parameters": "(ByteBuffer[] buffer)", "modifiers": "public static", "return": "String", "signature": "String toDetailString(ByteBuffer[] buffer)", "full_signature": "public static String toDetailString(ByteBuffer[] buffer)", "class_method_signature": "BufferUtils.toDetailString(ByteBuffer[] buffer)", "testcase": false, "constructor": false}, {"identifier": "idString", "parameters": "(ByteBuffer buffer, StringBuilder out)", "modifiers": "private static", "return": "void", "signature": "void idString(ByteBuffer buffer, StringBuilder out)", "full_signature": "private static void idString(ByteBuffer buffer, StringBuilder out)", "class_method_signature": "BufferUtils.idString(ByteBuffer buffer, StringBuilder out)", "testcase": false, "constructor": false}, {"identifier": "toIDString", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "String", "signature": "String toIDString(ByteBuffer buffer)", "full_signature": "public static String toIDString(ByteBuffer buffer)", "class_method_signature": "BufferUtils.toIDString(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "toDetailString", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "String", "signature": "String toDetailString(ByteBuffer buffer)", "full_signature": "public static String toDetailString(ByteBuffer buffer)", "class_method_signature": "BufferUtils.toDetailString(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "appendDebugString", "parameters": "(StringBuilder buf, ByteBuffer buffer)", "modifiers": "private static", "return": "void", "signature": "void appendDebugString(StringBuilder buf, ByteBuffer buffer)", "full_signature": "private static void appendDebugString(StringBuilder buf, ByteBuffer buffer)", "class_method_signature": "BufferUtils.appendDebugString(StringBuilder buf, ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "appendContentChar", "parameters": "(StringBuilder buf, byte b)", "modifiers": "private static", "return": "void", "signature": "void appendContentChar(StringBuilder buf, byte b)", "full_signature": "private static void appendContentChar(StringBuilder buf, byte b)", "class_method_signature": "BufferUtils.appendContentChar(StringBuilder buf, byte b)", "testcase": false, "constructor": false}, {"identifier": "toHexSummary", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "String", "signature": "String toHexSummary(ByteBuffer buffer)", "full_signature": "public static String toHexSummary(ByteBuffer buffer)", "class_method_signature": "BufferUtils.toHexSummary(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "toHexString", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "String", "signature": "String toHexString(ByteBuffer buffer)", "full_signature": "public static String toHexString(ByteBuffer buffer)", "class_method_signature": "BufferUtils.toHexString(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "putCRLF", "parameters": "(ByteBuffer buffer)", "modifiers": "public static", "return": "void", "signature": "void putCRLF(ByteBuffer buffer)", "full_signature": "public static void putCRLF(ByteBuffer buffer)", "class_method_signature": "BufferUtils.putCRLF(ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "isPrefix", "parameters": "(ByteBuffer prefix, ByteBuffer buffer)", "modifiers": "public static", "return": "boolean", "signature": "boolean isPrefix(ByteBuffer prefix, ByteBuffer buffer)", "full_signature": "public static boolean isPrefix(ByteBuffer prefix, ByteBuffer buffer)", "class_method_signature": "BufferUtils.isPrefix(ByteBuffer prefix, ByteBuffer buffer)", "testcase": false, "constructor": false}, {"identifier": "ensureCapacity", "parameters": "(ByteBuffer buffer, int capacity)", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer ensureCapacity(ByteBuffer buffer, int capacity)", "full_signature": "public static ByteBuffer ensureCapacity(ByteBuffer buffer, int capacity)", "class_method_signature": "BufferUtils.ensureCapacity(ByteBuffer buffer, int capacity)", "testcase": false, "constructor": false}, {"identifier": "addCapacity", "parameters": "(ByteBuffer buffer, int capacity)", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer addCapacity(ByteBuffer buffer, int capacity)", "full_signature": "public static ByteBuffer addCapacity(ByteBuffer buffer, int capacity)", "class_method_signature": "BufferUtils.addCapacity(ByteBuffer buffer, int capacity)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(List<ByteBuffer> buffers)", "modifiers": "public static", "return": "ByteBuffer", "signature": "ByteBuffer merge(List<ByteBuffer> buffers)", "full_signature": "public static ByteBuffer merge(List<ByteBuffer> buffers)", "class_method_signature": "BufferUtils.merge(List<ByteBuffer> buffers)", "testcase": false, "constructor": false}], "file": "firefly-common/src/main/java/com/fireflysource/common/io/BufferUtils.java"}, "focal_method": {"identifier": "putHexInt", "parameters": "(ByteBuffer buffer, int n)", "modifiers": "public static", "return": "void", "body": "public static void putHexInt(ByteBuffer buffer, int n) {\n        if (n < 0) {\n            buffer.put((byte) '-');\n\n            if (n == Integer.MIN_VALUE) {\n                buffer.put((byte) (0x7f & '8'));\n                buffer.put((byte) (0x7f & '0'));\n                buffer.put((byte) (0x7f & '0'));\n                buffer.put((byte) (0x7f & '0'));\n                buffer.put((byte) (0x7f & '0'));\n                buffer.put((byte) (0x7f & '0'));\n                buffer.put((byte) (0x7f & '0'));\n                buffer.put((byte) (0x7f & '0'));\n\n                return;\n            }\n            n = -n;\n        }\n\n        if (n < 0x10) {\n            buffer.put(DIGIT[n]);\n        } else {\n            boolean started = false;\n            // This assumes constant time int arithmatic\n            for (int hexDivisor : hexDivisors) {\n                if (n < hexDivisor) {\n                    if (started)\n                        buffer.put((byte) '0');\n                    continue;\n                }\n\n                started = true;\n                int d = n / hexDivisor;\n                buffer.put(DIGIT[d]);\n                n = n - d * hexDivisor;\n            }\n        }\n    }", "signature": "void putHexInt(ByteBuffer buffer, int n)", "full_signature": "public static void putHexInt(ByteBuffer buffer, int n)", "class_method_signature": "BufferUtils.putHexInt(ByteBuffer buffer, int n)", "testcase": false, "constructor": false, "invocations": ["put", "put", "put", "put", "put", "put", "put", "put", "put", "put", "put", "put"]}, "repository": {"repo_id": 3458429, "url": "https://github.com/hypercube1024/firefly", "language": "Java", "is_fork": false, "fork_count": 118, "stargazer_count": 271, "size": 29687, "license": "licensed"}}