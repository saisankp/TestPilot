{"test_class": {"identifier": "MemoryServiceProxyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Common.Session SESSION1 = Common.Session.newBuilder().setSessionId(1).setPid(1).build();", "modifier": "private static final", "type": "Common.Session", "declarator": "SESSION1 = Common.Session.newBuilder().setSessionId(1).setPid(1).build()", "var_name": "SESSION1"}, {"original_string": "private static final Common.Session SESSION2 = Common.Session.newBuilder().setSessionId(2).setPid(2).build();", "modifier": "private static final", "type": "Common.Session", "declarator": "SESSION2 = Common.Session.newBuilder().setSessionId(2).setPid(2).build()", "var_name": "SESSION2"}, {"original_string": "@NotNull private final FakeMemoryService myService = new FakeMemoryService();", "modifier": "@NotNull private final", "type": "FakeMemoryService", "declarator": "myService = new FakeMemoryService()", "var_name": "myService"}, {"original_string": "@Rule public FakeGrpcChannel myGrpcChannel = new FakeGrpcChannel(\"MemoryServiceProxyTest\", myService);", "modifier": "@Rule public", "type": "FakeGrpcChannel", "declarator": "myGrpcChannel = new FakeGrpcChannel(\"MemoryServiceProxyTest\", myService)", "var_name": "myGrpcChannel"}, {"original_string": "@NotNull private MemoryServiceProxy myProxy;", "modifier": "@NotNull private", "type": "MemoryServiceProxy", "declarator": "myProxy", "var_name": "myProxy"}, {"original_string": "private IDevice myDevice;", "modifier": "private", "type": "IDevice", "declarator": "myDevice", "var_name": "myDevice"}, {"original_string": "private Map<String, ByteString> myProxyBytesCache = new HashMap<>();", "modifier": "private", "type": "Map<String, ByteString>", "declarator": "myProxyBytesCache = new HashMap<>()", "var_name": "myProxyBytesCache"}, {"original_string": "private FakeLegacyAllocationTracker myTracker = new FakeLegacyAllocationTracker();", "modifier": "private", "type": "FakeLegacyAllocationTracker", "declarator": "myTracker = new FakeLegacyAllocationTracker()", "var_name": "myTracker"}], "file": "profilers-android/testSrc/com/android/tools/idea/profilers/perfd/MemoryServiceProxyTest.java"}, "test_case": {"identifier": "testGetDataWithoutAllocationsInfo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetDataWithoutAllocationsInfo() throws Exception {\n    MemoryData.MemorySample memSample = MemoryData.MemorySample.newBuilder().setTimestamp(1)\n      .setMemoryUsage(Memory.MemoryUsageData.newBuilder().setJavaMem(1)).build();\n    MemoryData memData = MemoryProfiler.MemoryData.newBuilder().addMemSamples(memSample).build();\n    myService.setMemoryData(memData);\n\n    StreamObserver<MemoryData> observer = mock(StreamObserver.class);\n    myProxy.getData(MemoryRequest.newBuilder().setSession(SESSION1).build(), observer);\n    verify(observer, times(1)).onNext(memData);\n    verify(observer, times(1)).onCompleted();\n  }", "signature": "void testGetDataWithoutAllocationsInfo()", "full_signature": "@Test public void testGetDataWithoutAllocationsInfo()", "class_method_signature": "MemoryServiceProxyTest.testGetDataWithoutAllocationsInfo()", "testcase": true, "constructor": false, "invocations": ["build", "setMemoryUsage", "setTimestamp", "newBuilder", "setJavaMem", "newBuilder", "build", "addMemSamples", "newBuilder", "setMemoryData", "mock", "getData", "build", "setSession", "newBuilder", "onNext", "verify", "times", "onCompleted", "verify", "times"]}, "focal_class": {"identifier": "MemoryServiceProxy", "superclass": "extends ServiceProxy", "interfaces": "", "fields": [{"original_string": "@NotNull private Executor myFetchExecutor;", "modifier": "@NotNull private", "type": "Executor", "declarator": "myFetchExecutor", "var_name": "myFetchExecutor"}, {"original_string": "@NotNull private final MemoryServiceGrpc.MemoryServiceBlockingStub myServiceStub;", "modifier": "@NotNull private final", "type": "MemoryServiceGrpc.MemoryServiceBlockingStub", "declarator": "myServiceStub", "var_name": "myServiceStub"}, {"original_string": "@NotNull private final IDevice myDevice;", "modifier": "@NotNull private final", "type": "IDevice", "declarator": "myDevice", "var_name": "myDevice"}, {"original_string": "@NotNull private BiFunction<IDevice, Integer, LegacyAllocationTracker> myTrackerSupplier;", "modifier": "@NotNull private", "type": "BiFunction<IDevice, Integer, LegacyAllocationTracker>", "declarator": "myTrackerSupplier", "var_name": "myTrackerSupplier"}, {"original_string": "@NotNull private final Map<String, ByteString> myProxyBytesCache;", "modifier": "@NotNull private final", "type": "Map<String, ByteString>", "declarator": "myProxyBytesCache", "var_name": "myProxyBytesCache"}, {"original_string": "private boolean myUseLegacyTracking;", "modifier": "private", "type": "boolean", "declarator": "myUseLegacyTracking", "var_name": "myUseLegacyTracking"}, {"original_string": "private final Object myUpdatingDataLock;", "modifier": "private final", "type": "Object", "declarator": "myUpdatingDataLock", "var_name": "myUpdatingDataLock"}, {"original_string": "@Nullable private Long2ObjectMap<LegacyAllocationTracker> myLegacyTrackers;", "modifier": "@Nullable private", "type": "Long2ObjectMap<LegacyAllocationTracker>", "declarator": "myLegacyTrackers", "var_name": "myLegacyTrackers"}, {"original_string": "@Nullable private Long2ObjectMap<Long2ObjectMap<AllocationsInfo>> myTrackingInfos;", "modifier": "@Nullable private", "type": "Long2ObjectMap<Long2ObjectMap<AllocationsInfo>>", "declarator": "myTrackingInfos", "var_name": "myTrackingInfos"}, {"original_string": "@Nullable private Long2ObjectMap<AllocationsInfo> myInProgressTrackingInfo;", "modifier": "@Nullable private", "type": "Long2ObjectMap<AllocationsInfo>", "declarator": "myInProgressTrackingInfo", "var_name": "myInProgressTrackingInfo"}, {"original_string": "@Nullable private Long2ObjectMap<Long2ObjectMap<AllocatedClass>> myAllocatedClasses;", "modifier": "@Nullable private", "type": "Long2ObjectMap<Long2ObjectMap<AllocatedClass>>", "declarator": "myAllocatedClasses", "var_name": "myAllocatedClasses"}, {"original_string": "@Nullable private Long2ObjectMap<Long2ObjectMap<AllocationStack>> myAllocationStacks;", "modifier": "@Nullable private", "type": "Long2ObjectMap<Long2ObjectMap<AllocationStack>>", "declarator": "myAllocationStacks", "var_name": "myAllocationStacks"}], "methods": [{"identifier": "getLogger", "parameters": "()", "modifiers": "private static", "return": "Logger", "signature": "Logger getLogger()", "full_signature": "private static Logger getLogger()", "class_method_signature": "MemoryServiceProxy.getLogger()", "testcase": false, "constructor": false}, {"identifier": "MemoryServiceProxy", "parameters": "(@NotNull IDevice device,\n                            @NotNull ManagedChannel channel,\n                            @NotNull Executor fetchExecutor,\n                            @NotNull BiFunction<IDevice, Integer, LegacyAllocationTracker> legacyTrackerSupplier,\n                            Map<String, ByteString> proxyBytesCache)", "modifiers": "public", "return": "", "signature": " MemoryServiceProxy(@NotNull IDevice device,\n                            @NotNull ManagedChannel channel,\n                            @NotNull Executor fetchExecutor,\n                            @NotNull BiFunction<IDevice, Integer, LegacyAllocationTracker> legacyTrackerSupplier,\n                            Map<String, ByteString> proxyBytesCache)", "full_signature": "public  MemoryServiceProxy(@NotNull IDevice device,\n                            @NotNull ManagedChannel channel,\n                            @NotNull Executor fetchExecutor,\n                            @NotNull BiFunction<IDevice, Integer, LegacyAllocationTracker> legacyTrackerSupplier,\n                            Map<String, ByteString> proxyBytesCache)", "class_method_signature": "MemoryServiceProxy.MemoryServiceProxy(@NotNull IDevice device,\n                            @NotNull ManagedChannel channel,\n                            @NotNull Executor fetchExecutor,\n                            @NotNull BiFunction<IDevice, Integer, LegacyAllocationTracker> legacyTrackerSupplier,\n                            Map<String, ByteString> proxyBytesCache)", "testcase": false, "constructor": true}, {"identifier": "startMonitoringApp", "parameters": "(MemoryProfiler.MemoryStartRequest request,\n                                 StreamObserver<MemoryProfiler.MemoryStartResponse> responseObserver)", "modifiers": "public", "return": "void", "signature": "void startMonitoringApp(MemoryProfiler.MemoryStartRequest request,\n                                 StreamObserver<MemoryProfiler.MemoryStartResponse> responseObserver)", "full_signature": "public void startMonitoringApp(MemoryProfiler.MemoryStartRequest request,\n                                 StreamObserver<MemoryProfiler.MemoryStartResponse> responseObserver)", "class_method_signature": "MemoryServiceProxy.startMonitoringApp(MemoryProfiler.MemoryStartRequest request,\n                                 StreamObserver<MemoryProfiler.MemoryStartResponse> responseObserver)", "testcase": false, "constructor": false}, {"identifier": "stopMonitoringApp", "parameters": "(MemoryProfiler.MemoryStopRequest request,\n                                StreamObserver<MemoryProfiler.MemoryStopResponse> responseObserver)", "modifiers": "public", "return": "void", "signature": "void stopMonitoringApp(MemoryProfiler.MemoryStopRequest request,\n                                StreamObserver<MemoryProfiler.MemoryStopResponse> responseObserver)", "full_signature": "public void stopMonitoringApp(MemoryProfiler.MemoryStopRequest request,\n                                StreamObserver<MemoryProfiler.MemoryStopResponse> responseObserver)", "class_method_signature": "MemoryServiceProxy.stopMonitoringApp(MemoryProfiler.MemoryStopRequest request,\n                                StreamObserver<MemoryProfiler.MemoryStopResponse> responseObserver)", "testcase": false, "constructor": false}, {"identifier": "getData", "parameters": "(MemoryProfiler.MemoryRequest request, StreamObserver<MemoryProfiler.MemoryData> responseObserver)", "modifiers": "public", "return": "void", "signature": "void getData(MemoryProfiler.MemoryRequest request, StreamObserver<MemoryProfiler.MemoryData> responseObserver)", "full_signature": "public void getData(MemoryProfiler.MemoryRequest request, StreamObserver<MemoryProfiler.MemoryData> responseObserver)", "class_method_signature": "MemoryServiceProxy.getData(MemoryProfiler.MemoryRequest request, StreamObserver<MemoryProfiler.MemoryData> responseObserver)", "testcase": false, "constructor": false}, {"identifier": "trackAllocations", "parameters": "(TrackAllocationsRequest request,\n                               StreamObserver<TrackAllocationsResponse> responseObserver)", "modifiers": "public", "return": "void", "signature": "void trackAllocations(TrackAllocationsRequest request,\n                               StreamObserver<TrackAllocationsResponse> responseObserver)", "full_signature": "public void trackAllocations(TrackAllocationsRequest request,\n                               StreamObserver<TrackAllocationsResponse> responseObserver)", "class_method_signature": "MemoryServiceProxy.trackAllocations(TrackAllocationsRequest request,\n                               StreamObserver<TrackAllocationsResponse> responseObserver)", "testcase": false, "constructor": false}, {"identifier": "enableAllocations", "parameters": "(long startTimeNs, long sessionId)", "modifiers": "private", "return": "TrackAllocationsResponse", "signature": "TrackAllocationsResponse enableAllocations(long startTimeNs, long sessionId)", "full_signature": "private TrackAllocationsResponse enableAllocations(long startTimeNs, long sessionId)", "class_method_signature": "MemoryServiceProxy.enableAllocations(long startTimeNs, long sessionId)", "testcase": false, "constructor": false}, {"identifier": "disableAllocations", "parameters": "(long endtimeNs, long sessionId)", "modifiers": "private", "return": "TrackAllocationsResponse", "signature": "TrackAllocationsResponse disableAllocations(long endtimeNs, long sessionId)", "full_signature": "private TrackAllocationsResponse disableAllocations(long endtimeNs, long sessionId)", "class_method_signature": "MemoryServiceProxy.disableAllocations(long endtimeNs, long sessionId)", "testcase": false, "constructor": false}, {"identifier": "saveAllocationData", "parameters": "(long sessionId, long infoId, @Nullable byte[] rawBytes)", "modifiers": "private", "return": "void", "signature": "void saveAllocationData(long sessionId, long infoId, @Nullable byte[] rawBytes)", "full_signature": "private void saveAllocationData(long sessionId, long infoId, @Nullable byte[] rawBytes)", "class_method_signature": "MemoryServiceProxy.saveAllocationData(long sessionId, long infoId, @Nullable byte[] rawBytes)", "testcase": false, "constructor": false}, {"identifier": "forceGarbageCollection", "parameters": "(ForceGarbageCollectionRequest request, StreamObserver<ForceGarbageCollectionResponse> observer)", "modifiers": "public", "return": "void", "signature": "void forceGarbageCollection(ForceGarbageCollectionRequest request, StreamObserver<ForceGarbageCollectionResponse> observer)", "full_signature": "public void forceGarbageCollection(ForceGarbageCollectionRequest request, StreamObserver<ForceGarbageCollectionResponse> observer)", "class_method_signature": "MemoryServiceProxy.forceGarbageCollection(ForceGarbageCollectionRequest request, StreamObserver<ForceGarbageCollectionResponse> observer)", "testcase": false, "constructor": false}, {"identifier": "getServiceDefinition", "parameters": "()", "modifiers": "@Override public", "return": "ServerServiceDefinition", "signature": "ServerServiceDefinition getServiceDefinition()", "full_signature": "@Override public ServerServiceDefinition getServiceDefinition()", "class_method_signature": "MemoryServiceProxy.getServiceDefinition()", "testcase": false, "constructor": false}], "file": "profilers-android/src/com/android/tools/idea/profilers/perfd/MemoryServiceProxy.java"}, "focal_method": {"identifier": "getData", "parameters": "(MemoryProfiler.MemoryRequest request, StreamObserver<MemoryProfiler.MemoryData> responseObserver)", "modifiers": "public", "return": "void", "body": "public void getData(MemoryProfiler.MemoryRequest request, StreamObserver<MemoryProfiler.MemoryData> responseObserver) {\n    try {\n      MemoryProfiler.MemoryData data = myServiceStub.getData(request);\n\n      if (myUseLegacyTracking) {\n        synchronized (myUpdatingDataLock) {\n          Long2ObjectMap<AllocationsInfo> infos = myTrackingInfos.get(request.getSession().getSessionId());\n          MemoryProfiler.MemoryData.Builder rebuilder = data.toBuilder();\n          long requestStartTime = request.getStartTime();\n          long requestEndTime = request.getEndTime();\n\n          // Note - the following is going to continuously return any unfinished whose start times are before the request's end time.\n          // Dedeup is handled in MemoryDataPoller.\n          List<AllocationsInfo> infosToReturn = new ArrayList<>();\n          for (AllocationsInfo info : infos.values()) {\n            if (info.getStartTime() <= requestEndTime && info.getEndTime() > requestStartTime) {\n              infosToReturn.add(info);\n            }\n          }\n\n          infosToReturn.sort(Comparator.comparingLong(AllocationsInfo::getStartTime));\n          for (AllocationsInfo info : infosToReturn) {\n            rebuilder.addAllocationsInfo(info);\n            long infoMax = info.getEndTime() == Long.MAX_VALUE ? info.getStartTime() : info.getEndTime();\n            rebuilder.setEndTimestamp(Math.max(rebuilder.getEndTimestamp(), infoMax));\n          }\n\n          data = rebuilder.build();\n        }\n      }\n\n      responseObserver.onNext(data);\n      responseObserver.onCompleted();\n    }\n    catch (RuntimeException e) {\n      responseObserver.onError(e);\n    }\n  }", "signature": "void getData(MemoryProfiler.MemoryRequest request, StreamObserver<MemoryProfiler.MemoryData> responseObserver)", "full_signature": "public void getData(MemoryProfiler.MemoryRequest request, StreamObserver<MemoryProfiler.MemoryData> responseObserver)", "class_method_signature": "MemoryServiceProxy.getData(MemoryProfiler.MemoryRequest request, StreamObserver<MemoryProfiler.MemoryData> responseObserver)", "testcase": false, "constructor": false, "invocations": ["getData", "get", "getSessionId", "getSession", "toBuilder", "getStartTime", "getEndTime", "values", "getStartTime", "getEndTime", "add", "sort", "comparingLong", "addAllocationsInfo", "getEndTime", "getStartTime", "getEndTime", "setEndTimestamp", "max", "getEndTimestamp", "build", "onNext", "onCompleted", "onError"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}