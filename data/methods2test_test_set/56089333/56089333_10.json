{"test_class": {"identifier": "LegofyTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int BRICKS_INWIDTH = 10;", "modifier": "public static final", "type": "int", "declarator": "BRICKS_INWIDTH = 10", "var_name": "BRICKS_INWIDTH"}, {"original_string": "public static final int BRICK_SIZE = 30;", "modifier": "public static final", "type": "int", "declarator": "BRICK_SIZE = 30", "var_name": "BRICK_SIZE"}, {"original_string": "@Mock\n    private Context mockContext;", "modifier": "@Mock\n    private", "type": "Context", "declarator": "mockContext", "var_name": "mockContext"}, {"original_string": "@Mock\n    private BrickDrawer mockDrawer;", "modifier": "@Mock\n    private", "type": "BrickDrawer", "declarator": "mockDrawer", "var_name": "mockDrawer"}, {"original_string": "private Legofy legofy;", "modifier": "private", "type": "Legofy", "declarator": "legofy", "var_name": "legofy"}], "file": "library/src/test/java/com/jeroenmols/legofy/LegofyTest.java"}, "test_case": {"identifier": "setBrickSizeBrickDrawer", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setBrickSizeBrickDrawer() throws Exception {\n        Bitmap mockBitmap = createMockBitmap(234, 257);\n\n        legofy.convert(mockBitmap);\n\n        verify(mockDrawer).setBitmap(any(Resources.class), any(Bitmap.class), eq(23));\n    }", "signature": "void setBrickSizeBrickDrawer()", "full_signature": "@Test public void setBrickSizeBrickDrawer()", "class_method_signature": "LegofyTest.setBrickSizeBrickDrawer()", "testcase": true, "constructor": false, "invocations": ["createMockBitmap", "convert", "setBitmap", "verify", "any", "any", "eq"]}, "focal_class": {"identifier": "Legofy", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int MINIMUM_BRICKSIZE = 20;", "modifier": "public static final", "type": "int", "declarator": "MINIMUM_BRICKSIZE = 20", "var_name": "MINIMUM_BRICKSIZE"}, {"original_string": "public static final int DEFAULT_AMOUNTOFBRICKS = 20;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_AMOUNTOFBRICKS = 20", "var_name": "DEFAULT_AMOUNTOFBRICKS"}, {"original_string": "public static final int DEFAULT_MAXOUTPUTSIZE = 1080;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_MAXOUTPUTSIZE = 1080", "var_name": "DEFAULT_MAXOUTPUTSIZE"}, {"original_string": "public static final int DEFAULT_SCALE = 1;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_SCALE = 1", "var_name": "DEFAULT_SCALE"}, {"original_string": "private Context context;", "modifier": "private", "type": "Context", "declarator": "context", "var_name": "context"}, {"original_string": "private BrickDrawer brickDrawer;", "modifier": "private", "type": "BrickDrawer", "declarator": "brickDrawer", "var_name": "brickDrawer"}, {"original_string": "private final BitmapWrapper bitmapWrapper;", "modifier": "private final", "type": "BitmapWrapper", "declarator": "bitmapWrapper", "var_name": "bitmapWrapper"}, {"original_string": "private int requestedBricksInWidth = DEFAULT_AMOUNTOFBRICKS;", "modifier": "private", "type": "int", "declarator": "requestedBricksInWidth = DEFAULT_AMOUNTOFBRICKS", "var_name": "requestedBricksInWidth"}], "methods": [{"identifier": "with", "parameters": "(Context context)", "modifiers": "public static", "return": "Legofy", "signature": "Legofy with(Context context)", "full_signature": "public static Legofy with(Context context)", "class_method_signature": "Legofy.with(Context context)", "testcase": false, "constructor": false}, {"identifier": "amountOfBricks", "parameters": "(int minimumBricks)", "modifiers": "public", "return": "Legofy", "signature": "Legofy amountOfBricks(int minimumBricks)", "full_signature": "public Legofy amountOfBricks(int minimumBricks)", "class_method_signature": "Legofy.amountOfBricks(int minimumBricks)", "testcase": false, "constructor": false}, {"identifier": "Legofy", "parameters": "(Context context, BitmapWrapper bitmapWrapper, BrickDrawer brickDrawer)", "modifiers": "protected", "return": "", "signature": " Legofy(Context context, BitmapWrapper bitmapWrapper, BrickDrawer brickDrawer)", "full_signature": "protected  Legofy(Context context, BitmapWrapper bitmapWrapper, BrickDrawer brickDrawer)", "class_method_signature": "Legofy.Legofy(Context context, BitmapWrapper bitmapWrapper, BrickDrawer brickDrawer)", "testcase": false, "constructor": true}, {"identifier": "Legofy", "parameters": "(Context context)", "modifiers": "private", "return": "", "signature": " Legofy(Context context)", "full_signature": "private  Legofy(Context context)", "class_method_signature": "Legofy.Legofy(Context context)", "testcase": false, "constructor": true}, {"identifier": "convert", "parameters": "(Bitmap bitmap)", "modifiers": "public", "return": "Bitmap", "signature": "Bitmap convert(Bitmap bitmap)", "full_signature": "public Bitmap convert(Bitmap bitmap)", "class_method_signature": "Legofy.convert(Bitmap bitmap)", "testcase": false, "constructor": false}, {"identifier": "createLegofiedBitmap", "parameters": "(Bitmap bitmap, int brickSize, int bricksInWidth, int bricksInHeight)", "modifiers": "private", "return": "Bitmap", "signature": "Bitmap createLegofiedBitmap(Bitmap bitmap, int brickSize, int bricksInWidth, int bricksInHeight)", "full_signature": "private Bitmap createLegofiedBitmap(Bitmap bitmap, int brickSize, int bricksInWidth, int bricksInHeight)", "class_method_signature": "Legofy.createLegofiedBitmap(Bitmap bitmap, int brickSize, int bricksInWidth, int bricksInHeight)", "testcase": false, "constructor": false}, {"identifier": "createOutputBitmap", "parameters": "(int bricksInWidth, int bricksInHeight, int actualBrickSize)", "modifiers": "private", "return": "Bitmap", "signature": "Bitmap createOutputBitmap(int bricksInWidth, int bricksInHeight, int actualBrickSize)", "full_signature": "private Bitmap createOutputBitmap(int bricksInWidth, int bricksInHeight, int actualBrickSize)", "class_method_signature": "Legofy.createOutputBitmap(int bricksInWidth, int bricksInHeight, int actualBrickSize)", "testcase": false, "constructor": false}, {"identifier": "getActualBrickSize", "parameters": "(Bitmap bitmap)", "modifiers": "private", "return": "int", "signature": "int getActualBrickSize(Bitmap bitmap)", "full_signature": "private int getActualBrickSize(Bitmap bitmap)", "class_method_signature": "Legofy.getActualBrickSize(Bitmap bitmap)", "testcase": false, "constructor": false}, {"identifier": "getRequestedBrickSize", "parameters": "(Bitmap bitmap)", "modifiers": "private", "return": "int", "signature": "int getRequestedBrickSize(Bitmap bitmap)", "full_signature": "private int getRequestedBrickSize(Bitmap bitmap)", "class_method_signature": "Legofy.getRequestedBrickSize(Bitmap bitmap)", "testcase": false, "constructor": false}, {"identifier": "getBricksInWidth", "parameters": "(Bitmap bitmap, int actualBrickSize)", "modifiers": "private", "return": "int", "signature": "int getBricksInWidth(Bitmap bitmap, int actualBrickSize)", "full_signature": "private int getBricksInWidth(Bitmap bitmap, int actualBrickSize)", "class_method_signature": "Legofy.getBricksInWidth(Bitmap bitmap, int actualBrickSize)", "testcase": false, "constructor": false}, {"identifier": "getBricksInHeight", "parameters": "(Bitmap bitmap, int actualBrickSize)", "modifiers": "private", "return": "int", "signature": "int getBricksInHeight(Bitmap bitmap, int actualBrickSize)", "full_signature": "private int getBricksInHeight(Bitmap bitmap, int actualBrickSize)", "class_method_signature": "Legofy.getBricksInHeight(Bitmap bitmap, int actualBrickSize)", "testcase": false, "constructor": false}, {"identifier": "getUpScaleFactorToFitRequestedBricks", "parameters": "(Bitmap bitmap)", "modifiers": "private", "return": "float", "signature": "float getUpScaleFactorToFitRequestedBricks(Bitmap bitmap)", "full_signature": "private float getUpScaleFactorToFitRequestedBricks(Bitmap bitmap)", "class_method_signature": "Legofy.getUpScaleFactorToFitRequestedBricks(Bitmap bitmap)", "testcase": false, "constructor": false}, {"identifier": "getDownScaleFactorToLimitOutputSize", "parameters": "(Bitmap bitmap)", "modifiers": "private", "return": "float", "signature": "float getDownScaleFactorToLimitOutputSize(Bitmap bitmap)", "full_signature": "private float getDownScaleFactorToLimitOutputSize(Bitmap bitmap)", "class_method_signature": "Legofy.getDownScaleFactorToLimitOutputSize(Bitmap bitmap)", "testcase": false, "constructor": false}, {"identifier": "getBricksInWidth", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getBricksInWidth()", "full_signature": "public int getBricksInWidth()", "class_method_signature": "Legofy.getBricksInWidth()", "testcase": false, "constructor": false}, {"identifier": "drawAllBricks", "parameters": "(Bitmap inputBitmap, int bricksInWidth, int bricksInHeight, int brickSize)", "modifiers": "private", "return": "void", "signature": "void drawAllBricks(Bitmap inputBitmap, int bricksInWidth, int bricksInHeight, int brickSize)", "full_signature": "private void drawAllBricks(Bitmap inputBitmap, int bricksInWidth, int bricksInHeight, int brickSize)", "class_method_signature": "Legofy.drawAllBricks(Bitmap inputBitmap, int bricksInWidth, int bricksInHeight, int brickSize)", "testcase": false, "constructor": false}], "file": "library/src/main/java/com/jeroenmols/legofy/Legofy.java"}, "focal_method": {"identifier": "convert", "parameters": "(Bitmap bitmap)", "modifiers": "public", "return": "Bitmap", "body": "public Bitmap convert(Bitmap bitmap) {\n        int brickSize = getActualBrickSize(bitmap);\n        int bricksInWidth = getBricksInWidth(bitmap, brickSize);\n        int bricksInHeight = getBricksInHeight(bitmap, brickSize);\n\n        return createLegofiedBitmap(bitmap, brickSize, bricksInWidth, bricksInHeight);\n    }", "signature": "Bitmap convert(Bitmap bitmap)", "full_signature": "public Bitmap convert(Bitmap bitmap)", "class_method_signature": "Legofy.convert(Bitmap bitmap)", "testcase": false, "constructor": false, "invocations": ["getActualBrickSize", "getBricksInWidth", "getBricksInHeight", "createLegofiedBitmap"]}, "repository": {"repo_id": 56089333, "url": "https://github.com/JeroenMols/Legofy", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 42, "size": 10478, "license": "licensed"}}