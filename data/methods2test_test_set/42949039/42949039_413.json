{"test_class": {"identifier": "BusinessObjectDataStatusChangeMessageBuilderTest", "superclass": "extends AbstractNotificationMessageBuilderTestHelper", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private BusinessObjectDataStatusChangeMessageBuilder businessObjectDataStatusChangeMessageBuilder;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataStatusChangeMessageBuilder", "declarator": "businessObjectDataStatusChangeMessageBuilder", "var_name": "businessObjectDataStatusChangeMessageBuilder"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/notification/BusinessObjectDataStatusChangeMessageBuilderTest.java"}, "test_case": {"identifier": "testGetBusinessObjectDataStatusChangeMessageVelocityContextMap", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetBusinessObjectDataStatusChangeMessageVelocityContextMap()\n    {\n        // Create a business object data key with values that require JSON and XML escaping.\n        BusinessObjectDataKey businessObjectDataKey =\n            new BusinessObjectDataKey(BDEF_NAMESPACE + SUFFIX_UNESCAPED, BDEF_NAME + SUFFIX_UNESCAPED, FORMAT_USAGE_CODE + SUFFIX_UNESCAPED,\n                FORMAT_FILE_TYPE_CODE + SUFFIX_UNESCAPED, FORMAT_VERSION, PARTITION_VALUE + SUFFIX_UNESCAPED, Lists\n                .newArrayList(SUBPARTITION_VALUES.get(0) + SUFFIX_UNESCAPED, SUBPARTITION_VALUES.get(1) + SUFFIX_UNESCAPED,\n                    SUBPARTITION_VALUES.get(2) + SUFFIX_UNESCAPED, SUBPARTITION_VALUES.get(3) + SUFFIX_UNESCAPED), DATA_VERSION);\n\n        // Create a list of attributes that require JSON and XML escaping.\n        // An attribute with a null value is required for code coverage.\n        List<Attribute> attributes = new ArrayList<>();\n        attributes.add(new Attribute(ATTRIBUTE_NAME_1_MIXED_CASE + SUFFIX_UNESCAPED, ATTRIBUTE_VALUE_1 + SUFFIX_UNESCAPED));\n        attributes.add(new Attribute(ATTRIBUTE_NAME_2_MIXED_CASE + SUFFIX_UNESCAPED, ATTRIBUTE_VALUE_2 + SUFFIX_UNESCAPED));\n        attributes.add(new Attribute(ATTRIBUTE_NAME_3_MIXED_CASE + SUFFIX_UNESCAPED, null));\n\n        // Create and persist a business object data entity.\n        BusinessObjectDataEntity businessObjectDataEntity = businessObjectDataDaoTestHelper\n            .createBusinessObjectDataEntity(businessObjectDataKey, LATEST_VERSION_FLAG_SET, BusinessObjectDataStatusEntity.VALID);\n\n        // Create and persist business object data attribute entities.\n        for (Attribute attribute : attributes)\n        {\n            businessObjectDataAttributeDaoTestHelper\n                .createBusinessObjectDataAttributeEntity(businessObjectDataEntity, attribute.getName(), attribute.getValue());\n        }\n\n        // Add business object data attribute definitions to the business object format.\n        for (Attribute attribute : attributes)\n        {\n            businessObjectFormatDaoTestHelper\n                .createBusinessObjectDataAttributeDefinitionEntity(businessObjectDataEntity.getBusinessObjectFormat(), attribute.getName(), PUBLISH_ATTRIBUTE, NO_PUBLISH_FOR_FILTER);\n        }\n\n        // Call the method under test.\n        Map<String, Object> result = businessObjectDataStatusChangeMessageBuilder.getNotificationMessageVelocityContextMap(\n            new BusinessObjectDataStatusChangeNotificationEvent(businessObjectDataKey, BDATA_STATUS_2 + SUFFIX_UNESCAPED, BDATA_STATUS + SUFFIX_UNESCAPED));\n\n        // Create a map of expected businessObjectDataAttributes.\n        Map<String, String> expectedBusinessObjectDataAttributes = new LinkedHashMap<>();\n        expectedBusinessObjectDataAttributes.put(ATTRIBUTE_NAME_1_MIXED_CASE + SUFFIX_UNESCAPED, ATTRIBUTE_VALUE_1 + SUFFIX_UNESCAPED);\n        expectedBusinessObjectDataAttributes.put(ATTRIBUTE_NAME_2_MIXED_CASE + SUFFIX_UNESCAPED, ATTRIBUTE_VALUE_2 + SUFFIX_UNESCAPED);\n        expectedBusinessObjectDataAttributes.put(ATTRIBUTE_NAME_3_MIXED_CASE + SUFFIX_UNESCAPED, null);\n\n        // Create a map of expected businessObjectDataAttributes.\n        Map<String, String> expectedBusinessObjectDataAttributesWithJson = new LinkedHashMap<>();\n        expectedBusinessObjectDataAttributesWithJson.put(ATTRIBUTE_NAME_1_MIXED_CASE + SUFFIX_ESCAPED_JSON, ATTRIBUTE_VALUE_1 + SUFFIX_ESCAPED_JSON);\n        expectedBusinessObjectDataAttributesWithJson.put(ATTRIBUTE_NAME_2_MIXED_CASE + SUFFIX_ESCAPED_JSON, ATTRIBUTE_VALUE_2 + SUFFIX_ESCAPED_JSON);\n        expectedBusinessObjectDataAttributesWithJson.put(ATTRIBUTE_NAME_3_MIXED_CASE + SUFFIX_ESCAPED_JSON, null);\n\n        // Create a map of expected XML escaped businessObjectDataAttributes.\n        Map<String, String> expectedBusinessObjectDataAttributesWithXml = new LinkedHashMap<>();\n        expectedBusinessObjectDataAttributesWithXml.put(ATTRIBUTE_NAME_1_MIXED_CASE + SUFFIX_ESCAPED_XML, ATTRIBUTE_VALUE_1 + SUFFIX_ESCAPED_XML);\n        expectedBusinessObjectDataAttributesWithXml.put(ATTRIBUTE_NAME_2_MIXED_CASE + SUFFIX_ESCAPED_XML, ATTRIBUTE_VALUE_2 + SUFFIX_ESCAPED_XML);\n        expectedBusinessObjectDataAttributesWithXml.put(ATTRIBUTE_NAME_3_MIXED_CASE + SUFFIX_ESCAPED_XML, null);\n\n        // Create an expected JSON escaped business object data key.\n        BusinessObjectDataKey expectedBusinessObjectDataKeyWithJson =\n            new BusinessObjectDataKey(BDEF_NAMESPACE + SUFFIX_ESCAPED_JSON, BDEF_NAME + SUFFIX_ESCAPED_JSON, FORMAT_USAGE_CODE + SUFFIX_ESCAPED_JSON,\n                FORMAT_FILE_TYPE_CODE + SUFFIX_ESCAPED_JSON, FORMAT_VERSION, PARTITION_VALUE + SUFFIX_ESCAPED_JSON, Lists\n                .newArrayList(SUBPARTITION_VALUES.get(0) + SUFFIX_ESCAPED_JSON, SUBPARTITION_VALUES.get(1) + SUFFIX_ESCAPED_JSON,\n                    SUBPARTITION_VALUES.get(2) + SUFFIX_ESCAPED_JSON, SUBPARTITION_VALUES.get(3) + SUFFIX_ESCAPED_JSON), DATA_VERSION);\n\n        // Create an expected XML escaped business object data key.\n        BusinessObjectDataKey expectedBusinessObjectDataKeyWithXml =\n            new BusinessObjectDataKey(BDEF_NAMESPACE + SUFFIX_ESCAPED_XML, BDEF_NAME + SUFFIX_ESCAPED_XML, FORMAT_USAGE_CODE + SUFFIX_ESCAPED_XML,\n                FORMAT_FILE_TYPE_CODE + SUFFIX_ESCAPED_XML, FORMAT_VERSION, PARTITION_VALUE + SUFFIX_ESCAPED_XML, Lists\n                .newArrayList(SUBPARTITION_VALUES.get(0) + SUFFIX_ESCAPED_XML, SUBPARTITION_VALUES.get(1) + SUFFIX_ESCAPED_XML,\n                    SUBPARTITION_VALUES.get(2) + SUFFIX_ESCAPED_XML, SUBPARTITION_VALUES.get(3) + SUFFIX_ESCAPED_XML), DATA_VERSION);\n\n        // Validate the results.\n        assertEquals(16, CollectionUtils.size(result));\n\n        assertEquals(businessObjectDataKey, result.get(\"businessObjectDataKey\"));\n        assertEquals(expectedBusinessObjectDataKeyWithJson, result.get(\"businessObjectDataKeyWithJson\"));\n        assertEquals(expectedBusinessObjectDataKeyWithXml, result.get(\"businessObjectDataKeyWithXml\"));\n\n        assertEquals(BDATA_STATUS_2 + SUFFIX_UNESCAPED, result.get(\"newBusinessObjectDataStatus\"));\n        assertEquals(BDATA_STATUS_2 + SUFFIX_ESCAPED_JSON, result.get(\"newBusinessObjectDataStatusWithJson\"));\n        assertEquals(BDATA_STATUS_2 + SUFFIX_ESCAPED_XML, result.get(\"newBusinessObjectDataStatusWithXml\"));\n\n        assertEquals(BDATA_STATUS + SUFFIX_UNESCAPED, result.get(\"oldBusinessObjectDataStatus\"));\n        assertEquals(BDATA_STATUS + SUFFIX_ESCAPED_JSON, result.get(\"oldBusinessObjectDataStatusWithJson\"));\n        assertEquals(BDATA_STATUS + SUFFIX_ESCAPED_XML, result.get(\"oldBusinessObjectDataStatusWithXml\"));\n\n        assertEquals(businessObjectDataEntity.getId(), result.get(\"businessObjectDataId\"));\n\n        assertEquals(expectedBusinessObjectDataAttributes, result.get(\"businessObjectDataAttributes\"));\n        assertEquals(expectedBusinessObjectDataAttributesWithJson, result.get(\"businessObjectDataAttributesWithJson\"));\n        assertEquals(expectedBusinessObjectDataAttributesWithXml, result.get(\"businessObjectDataAttributesWithXml\"));\n\n        assertEquals(BDEF_NAMESPACE + SUFFIX_UNESCAPED, result.get(\"namespace\"));\n        assertEquals(BDEF_NAMESPACE + SUFFIX_ESCAPED_JSON, result.get(\"namespaceWithJson\"));\n        assertEquals(BDEF_NAMESPACE + SUFFIX_ESCAPED_XML, result.get(\"namespaceWithXml\"));\n    }", "signature": "void testGetBusinessObjectDataStatusChangeMessageVelocityContextMap()", "full_signature": "@Test public void testGetBusinessObjectDataStatusChangeMessageVelocityContextMap()", "class_method_signature": "BusinessObjectDataStatusChangeMessageBuilderTest.testGetBusinessObjectDataStatusChangeMessageVelocityContextMap()", "testcase": true, "constructor": false, "invocations": ["newArrayList", "get", "get", "get", "get", "add", "add", "add", "createBusinessObjectDataEntity", "createBusinessObjectDataAttributeEntity", "getName", "getValue", "createBusinessObjectDataAttributeDefinitionEntity", "getBusinessObjectFormat", "getName", "getNotificationMessageVelocityContextMap", "put", "put", "put", "put", "put", "put", "put", "put", "put", "newArrayList", "get", "get", "get", "get", "newArrayList", "get", "get", "get", "get", "assertEquals", "size", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "getId", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "BusinessObjectDataStatusChangeMessageBuilder", "superclass": "extends AbstractNotificationMessageBuilder", "interfaces": "implements NotificationMessageBuilder", "fields": [{"original_string": "@Autowired\n    private BusinessObjectDataDaoHelper businessObjectDataDaoHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataDaoHelper", "declarator": "businessObjectDataDaoHelper", "var_name": "businessObjectDataDaoHelper"}, {"original_string": "@Autowired\n    private BusinessObjectFormatHelper businessObjectFormatHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectFormatHelper", "declarator": "businessObjectFormatHelper", "var_name": "businessObjectFormatHelper"}, {"original_string": "@Autowired\n    private ConfigurationHelper configurationHelper;", "modifier": "@Autowired\n    private", "type": "ConfigurationHelper", "declarator": "configurationHelper", "var_name": "configurationHelper"}], "methods": [{"identifier": "getNotificationMessageVelocityContextMap", "parameters": "(NotificationEvent notificationEvent)", "modifiers": "@Override @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST\", justification = \"The NotificationEvent is cast to a BusinessObjectDataStatusChangeNotificationEvent which is always the case since\" + \" we manage the event type to a builder in a map defined in NotificationMessageManager\") public", "return": "Map<String, Object>", "signature": "Map<String, Object> getNotificationMessageVelocityContextMap(NotificationEvent notificationEvent)", "full_signature": "@Override @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST\", justification = \"The NotificationEvent is cast to a BusinessObjectDataStatusChangeNotificationEvent which is always the case since\" + \" we manage the event type to a builder in a map defined in NotificationMessageManager\") public Map<String, Object> getNotificationMessageVelocityContextMap(NotificationEvent notificationEvent)", "class_method_signature": "BusinessObjectDataStatusChangeMessageBuilder.getNotificationMessageVelocityContextMap(NotificationEvent notificationEvent)", "testcase": false, "constructor": false}, {"identifier": "escapeXmlBusinessObjectDataKey", "parameters": "(final BusinessObjectDataKey businessObjectDataKey)", "modifiers": "private", "return": "BusinessObjectDataKey", "signature": "BusinessObjectDataKey escapeXmlBusinessObjectDataKey(final BusinessObjectDataKey businessObjectDataKey)", "full_signature": "private BusinessObjectDataKey escapeXmlBusinessObjectDataKey(final BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "BusinessObjectDataStatusChangeMessageBuilder.escapeXmlBusinessObjectDataKey(final BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false}, {"identifier": "escapeJsonBusinessObjectDataKey", "parameters": "(final BusinessObjectDataKey businessObjectDataKey)", "modifiers": "private", "return": "BusinessObjectDataKey", "signature": "BusinessObjectDataKey escapeJsonBusinessObjectDataKey(final BusinessObjectDataKey businessObjectDataKey)", "full_signature": "private BusinessObjectDataKey escapeJsonBusinessObjectDataKey(final BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "BusinessObjectDataStatusChangeMessageBuilder.escapeJsonBusinessObjectDataKey(final BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/notification/BusinessObjectDataStatusChangeMessageBuilder.java"}, "focal_method": {"identifier": "getNotificationMessageVelocityContextMap", "parameters": "(NotificationEvent notificationEvent)", "modifiers": "@Override @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST\", justification = \"The NotificationEvent is cast to a BusinessObjectDataStatusChangeNotificationEvent which is always the case since\" + \" we manage the event type to a builder in a map defined in NotificationMessageManager\") public", "return": "Map<String, Object>", "body": "@Override\n    @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST\", justification =\n        \"The NotificationEvent is cast to a BusinessObjectDataStatusChangeNotificationEvent which is always the case since\" +\n            \" we manage the event type to a builder in a map defined in NotificationMessageManager\")\n    public Map<String, Object> getNotificationMessageVelocityContextMap(NotificationEvent notificationEvent)\n    {\n        BusinessObjectDataStatusChangeNotificationEvent event = (BusinessObjectDataStatusChangeNotificationEvent) notificationEvent;\n\n        // Create a context map of values that can be used when building the message.\n        Map<String, Object> velocityContextMap = new HashMap<>();\n        addObjectPropertyToContext(velocityContextMap, \"businessObjectDataKey\", event.getBusinessObjectDataKey(),\n            escapeJsonBusinessObjectDataKey(event.getBusinessObjectDataKey()), escapeXmlBusinessObjectDataKey(event.getBusinessObjectDataKey()));\n        addStringPropertyToContext(velocityContextMap, \"newBusinessObjectDataStatus\", event.getNewBusinessObjectDataStatus());\n        addStringPropertyToContext(velocityContextMap, \"oldBusinessObjectDataStatus\", event.getOldBusinessObjectDataStatus());\n\n        // Retrieve business object data entity and business object data id to the context.\n        BusinessObjectDataEntity businessObjectDataEntity = businessObjectDataDaoHelper.getBusinessObjectDataEntity(event.getBusinessObjectDataKey());\n        velocityContextMap.put(\"businessObjectDataId\", businessObjectDataEntity.getId());\n\n        BusinessObjectFormatEntity businessObjectFormatEntity = businessObjectDataEntity.getBusinessObjectFormat();\n\n        // Load all attribute definitions for this business object data in a map for easy access.\n        Map<String, BusinessObjectDataAttributeDefinitionEntity> attributeDefinitionEntityMap =\n            businessObjectFormatHelper.getAttributeDefinitionEntities(businessObjectFormatEntity);\n\n        // Build an ordered map of business object data attributes that are flagged to be published in notification messages.\n        Map<String, String> businessObjectDataAttributes = new LinkedHashMap<>();\n        Map<String, String> businessObjectDataAttributesWithJson = new LinkedHashMap<>();\n        Map<String, String> businessObjectDataAttributesWithXml = new LinkedHashMap<>();\n        if (!attributeDefinitionEntityMap.isEmpty())\n        {\n            for (BusinessObjectDataAttributeEntity attributeEntity : businessObjectDataEntity.getAttributes())\n            {\n                if (attributeDefinitionEntityMap.containsKey(attributeEntity.getName().toUpperCase()))\n                {\n                    BusinessObjectDataAttributeDefinitionEntity attributeDefinitionEntity =\n                        attributeDefinitionEntityMap.get(attributeEntity.getName().toUpperCase());\n\n                    if (BooleanUtils.isTrue(attributeDefinitionEntity.getPublish()))\n                    {\n                        businessObjectDataAttributes.put(attributeEntity.getName(), attributeEntity.getValue());\n                        businessObjectDataAttributesWithJson.put(escapeJson(attributeEntity.getName()), escapeJson(attributeEntity.getValue()));\n                        businessObjectDataAttributesWithXml.put(escapeXml(attributeEntity.getName()), escapeXml(attributeEntity.getValue()));\n                    }\n\n                    if (BooleanUtils.isTrue(attributeDefinitionEntity.getPublishForFilter()))\n                    {\n\n                        // Get notification header key for filter attribute value\n                        String filterAttributeKey = configurationHelper.getRequiredProperty(ConfigurationValue.MESSAGE_HEADER_KEY_FILTER_ATTRIBUTE_VALUE);\n                        if (velocityContextMap.containsKey(filterAttributeKey))\n                        {\n                            throw new IllegalStateException(String.format(\"Multiple attributes are marked as publishForFilter for business object format {%s}.\",\n                                    businessObjectFormatHelper.businessObjectFormatEntityAltKeyToString(businessObjectFormatEntity)));\n                        }\n\n                        addStringPropertyToContext(velocityContextMap, filterAttributeKey, attributeEntity.getValue());\n                    }\n                }\n            }\n        }\n\n        // Add the map of business object data attributes to the context.\n        addObjectPropertyToContext(velocityContextMap, \"businessObjectDataAttributes\", businessObjectDataAttributes, businessObjectDataAttributesWithJson,\n            businessObjectDataAttributesWithXml);\n\n        // Add the namespace Velocity property for the header.\n        addStringPropertyToContext(velocityContextMap, \"namespace\", event.getBusinessObjectDataKey().getNamespace());\n\n        return velocityContextMap;\n    }", "signature": "Map<String, Object> getNotificationMessageVelocityContextMap(NotificationEvent notificationEvent)", "full_signature": "@Override @SuppressFBWarnings(value = \"BC_UNCONFIRMED_CAST\", justification = \"The NotificationEvent is cast to a BusinessObjectDataStatusChangeNotificationEvent which is always the case since\" + \" we manage the event type to a builder in a map defined in NotificationMessageManager\") public Map<String, Object> getNotificationMessageVelocityContextMap(NotificationEvent notificationEvent)", "class_method_signature": "BusinessObjectDataStatusChangeMessageBuilder.getNotificationMessageVelocityContextMap(NotificationEvent notificationEvent)", "testcase": false, "constructor": false, "invocations": ["addObjectPropertyToContext", "getBusinessObjectDataKey", "escapeJsonBusinessObjectDataKey", "getBusinessObjectDataKey", "escapeXmlBusinessObjectDataKey", "getBusinessObjectDataKey", "addStringPropertyToContext", "getNewBusinessObjectDataStatus", "addStringPropertyToContext", "getOldBusinessObjectDataStatus", "getBusinessObjectDataEntity", "getBusinessObjectDataKey", "put", "getId", "getBusinessObjectFormat", "getAttributeDefinitionEntities", "isEmpty", "getAttributes", "containsKey", "toUpperCase", "getName", "get", "toUpperCase", "getName", "isTrue", "getPublish", "put", "getName", "getValue", "put", "escapeJson", "getName", "escapeJson", "getValue", "put", "escapeXml", "getName", "escapeXml", "getValue", "isTrue", "getPublishForFilter", "getRequiredProperty", "containsKey", "format", "businessObjectFormatEntityAltKeyToString", "addStringPropertyToContext", "getValue", "addObjectPropertyToContext", "addStringPropertyToContext", "getNamespace", "getBusinessObjectDataKey"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}