{"test_class": {"identifier": "AcknowledgementAggregatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ThingId ENTITY_ID = ThingId.generateRandom();", "modifier": "private static final", "type": "ThingId", "declarator": "ENTITY_ID = ThingId.generateRandom()", "var_name": "ENTITY_ID"}, {"original_string": "private static final Duration TIMEOUT = Duration.ofMillis(1337);", "modifier": "private static final", "type": "Duration", "declarator": "TIMEOUT = Duration.ofMillis(1337)", "var_name": "TIMEOUT"}, {"original_string": "private static final HeaderTranslator HEADER_TRANSLATOR = HeaderTranslator.empty();", "modifier": "private static final", "type": "HeaderTranslator", "declarator": "HEADER_TRANSLATOR = HeaderTranslator.empty()", "var_name": "HEADER_TRANSLATOR"}, {"original_string": "@Rule\n    public final TestName testName = new TestName();", "modifier": "@Rule\n    public final", "type": "TestName", "declarator": "testName = new TestName()", "var_name": "testName"}, {"original_string": "private String correlationId;", "modifier": "private", "type": "String", "declarator": "correlationId", "var_name": "correlationId"}, {"original_string": "private DittoHeaders dittoHeaders;", "modifier": "private", "type": "DittoHeaders", "declarator": "dittoHeaders", "var_name": "dittoHeaders"}], "file": "services/models/acks/src/test/java/org/eclipse/ditto/services/models/acks/AcknowledgementAggregatorTest.java"}, "test_case": {"identifier": "receivedAllRequestedAcknowledgements", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void receivedAllRequestedAcknowledgements() {\n        final AcknowledgementAggregator underTest =\n                AcknowledgementAggregator.getInstance(ENTITY_ID, correlationId, TIMEOUT, HEADER_TRANSLATOR);\n        final List<Acknowledgement> acknowledgements = createAcknowledgements(3, HttpStatusCode.NO_CONTENT);\n        acknowledgements.addAll(createAcknowledgements(2, HttpStatusCode.BAD_REQUEST));\n        acknowledgements.forEach(\n                ack -> underTest.addAcknowledgementRequest(AcknowledgementRequest.of(ack.getLabel())));\n        acknowledgements.forEach(underTest::addReceivedAcknowledgment);\n\n        assertThat(underTest.receivedAllRequestedAcknowledgements()).isTrue();\n    }", "signature": "void receivedAllRequestedAcknowledgements()", "full_signature": "@Test public void receivedAllRequestedAcknowledgements()", "class_method_signature": "AcknowledgementAggregatorTest.receivedAllRequestedAcknowledgements()", "testcase": true, "constructor": false, "invocations": ["getInstance", "createAcknowledgements", "addAll", "createAcknowledgements", "forEach", "addAcknowledgementRequest", "of", "getLabel", "forEach", "isTrue", "assertThat", "receivedAllRequestedAcknowledgements"]}, "focal_class": {"identifier": "AcknowledgementAggregator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final byte DEFAULT_INITIAL_CAPACITY = 4;", "modifier": "private static final", "type": "byte", "declarator": "DEFAULT_INITIAL_CAPACITY = 4", "var_name": "DEFAULT_INITIAL_CAPACITY"}, {"original_string": "private final EntityIdWithType entityId;", "modifier": "private final", "type": "EntityIdWithType", "declarator": "entityId", "var_name": "entityId"}, {"original_string": "private final String correlationId;", "modifier": "private final", "type": "String", "declarator": "correlationId", "var_name": "correlationId"}, {"original_string": "private final HeaderTranslator headerTranslator;", "modifier": "private final", "type": "HeaderTranslator", "declarator": "headerTranslator", "var_name": "headerTranslator"}, {"original_string": "private final Map<AcknowledgementLabel, Acknowledgement> acknowledgementMap;", "modifier": "private final", "type": "Map<AcknowledgementLabel, Acknowledgement>", "declarator": "acknowledgementMap", "var_name": "acknowledgementMap"}, {"original_string": "private final Duration timeout;", "modifier": "private final", "type": "Duration", "declarator": "timeout", "var_name": "timeout"}, {"original_string": "private final Set<AcknowledgementLabel> expectedLabels;", "modifier": "private final", "type": "Set<AcknowledgementLabel>", "declarator": "expectedLabels", "var_name": "expectedLabels"}], "methods": [{"identifier": "AcknowledgementAggregator", "parameters": "(final EntityIdWithType entityId,\n            final CharSequence correlationId,\n            final Duration timeout,\n            final HeaderTranslator headerTranslator)", "modifiers": "private", "return": "", "signature": " AcknowledgementAggregator(final EntityIdWithType entityId,\n            final CharSequence correlationId,\n            final Duration timeout,\n            final HeaderTranslator headerTranslator)", "full_signature": "private  AcknowledgementAggregator(final EntityIdWithType entityId,\n            final CharSequence correlationId,\n            final Duration timeout,\n            final HeaderTranslator headerTranslator)", "class_method_signature": "AcknowledgementAggregator.AcknowledgementAggregator(final EntityIdWithType entityId,\n            final CharSequence correlationId,\n            final Duration timeout,\n            final HeaderTranslator headerTranslator)", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "(final EntityIdWithType entityId,\n            final CharSequence correlationId,\n            final Duration timeout,\n            final HeaderTranslator headerTranslator)", "modifiers": "public static", "return": "AcknowledgementAggregator", "signature": "AcknowledgementAggregator getInstance(final EntityIdWithType entityId,\n            final CharSequence correlationId,\n            final Duration timeout,\n            final HeaderTranslator headerTranslator)", "full_signature": "public static AcknowledgementAggregator getInstance(final EntityIdWithType entityId,\n            final CharSequence correlationId,\n            final Duration timeout,\n            final HeaderTranslator headerTranslator)", "class_method_signature": "AcknowledgementAggregator.getInstance(final EntityIdWithType entityId,\n            final CharSequence correlationId,\n            final Duration timeout,\n            final HeaderTranslator headerTranslator)", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "(final NamespacedEntityIdWithType entityId,\n            final CharSequence correlationId,\n            final Duration timeout,\n            final HeaderTranslator headerTranslator)", "modifiers": "public static", "return": "AcknowledgementAggregator", "signature": "AcknowledgementAggregator getInstance(final NamespacedEntityIdWithType entityId,\n            final CharSequence correlationId,\n            final Duration timeout,\n            final HeaderTranslator headerTranslator)", "full_signature": "public static AcknowledgementAggregator getInstance(final NamespacedEntityIdWithType entityId,\n            final CharSequence correlationId,\n            final Duration timeout,\n            final HeaderTranslator headerTranslator)", "class_method_signature": "AcknowledgementAggregator.getInstance(final NamespacedEntityIdWithType entityId,\n            final CharSequence correlationId,\n            final Duration timeout,\n            final HeaderTranslator headerTranslator)", "testcase": false, "constructor": false}, {"identifier": "getCorrelationId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getCorrelationId()", "full_signature": "public String getCorrelationId()", "class_method_signature": "AcknowledgementAggregator.getCorrelationId()", "testcase": false, "constructor": false}, {"identifier": "addAcknowledgementRequest", "parameters": "(final AcknowledgementRequest acknowledgementRequest)", "modifiers": "public", "return": "void", "signature": "void addAcknowledgementRequest(final AcknowledgementRequest acknowledgementRequest)", "full_signature": "public void addAcknowledgementRequest(final AcknowledgementRequest acknowledgementRequest)", "class_method_signature": "AcknowledgementAggregator.addAcknowledgementRequest(final AcknowledgementRequest acknowledgementRequest)", "testcase": false, "constructor": false}, {"identifier": "getTimeoutAcknowledgement", "parameters": "(final AcknowledgementLabel acknowledgementLabel)", "modifiers": "private", "return": "Acknowledgement", "signature": "Acknowledgement getTimeoutAcknowledgement(final AcknowledgementLabel acknowledgementLabel)", "full_signature": "private Acknowledgement getTimeoutAcknowledgement(final AcknowledgementLabel acknowledgementLabel)", "class_method_signature": "AcknowledgementAggregator.getTimeoutAcknowledgement(final AcknowledgementLabel acknowledgementLabel)", "testcase": false, "constructor": false}, {"identifier": "addAcknowledgementRequests", "parameters": "(final Collection<AcknowledgementRequest> acknowledgementRequests)", "modifiers": "public", "return": "void", "signature": "void addAcknowledgementRequests(final Collection<AcknowledgementRequest> acknowledgementRequests)", "full_signature": "public void addAcknowledgementRequests(final Collection<AcknowledgementRequest> acknowledgementRequests)", "class_method_signature": "AcknowledgementAggregator.addAcknowledgementRequests(final Collection<AcknowledgementRequest> acknowledgementRequests)", "testcase": false, "constructor": false}, {"identifier": "addReceivedAcknowledgment", "parameters": "(final Acknowledgement acknowledgement)", "modifiers": "public", "return": "void", "signature": "void addReceivedAcknowledgment(final Acknowledgement acknowledgement)", "full_signature": "public void addReceivedAcknowledgment(final Acknowledgement acknowledgement)", "class_method_signature": "AcknowledgementAggregator.addReceivedAcknowledgment(final Acknowledgement acknowledgement)", "testcase": false, "constructor": false}, {"identifier": "isExpected", "parameters": "(final Acknowledgement acknowledgement)", "modifiers": "private", "return": "boolean", "signature": "boolean isExpected(final Acknowledgement acknowledgement)", "full_signature": "private boolean isExpected(final Acknowledgement acknowledgement)", "class_method_signature": "AcknowledgementAggregator.isExpected(final Acknowledgement acknowledgement)", "testcase": false, "constructor": false}, {"identifier": "filterHeaders", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "DittoHeaders", "signature": "DittoHeaders filterHeaders(final DittoHeaders dittoHeaders)", "full_signature": "private DittoHeaders filterHeaders(final DittoHeaders dittoHeaders)", "class_method_signature": "AcknowledgementAggregator.filterHeaders(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "receivedAllRequestedAcknowledgements", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean receivedAllRequestedAcknowledgements()", "full_signature": "public boolean receivedAllRequestedAcknowledgements()", "class_method_signature": "AcknowledgementAggregator.receivedAllRequestedAcknowledgements()", "testcase": false, "constructor": false}, {"identifier": "isSuccessful", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSuccessful()", "full_signature": "public boolean isSuccessful()", "class_method_signature": "AcknowledgementAggregator.isSuccessful()", "testcase": false, "constructor": false}, {"identifier": "getAggregatedAcknowledgements", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "public", "return": "Acknowledgements", "signature": "Acknowledgements getAggregatedAcknowledgements(final DittoHeaders dittoHeaders)", "full_signature": "public Acknowledgements getAggregatedAcknowledgements(final DittoHeaders dittoHeaders)", "class_method_signature": "AcknowledgementAggregator.getAggregatedAcknowledgements(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "validateCorrelationId", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "void", "signature": "void validateCorrelationId(final DittoHeaders dittoHeaders)", "full_signature": "private void validateCorrelationId(final DittoHeaders dittoHeaders)", "class_method_signature": "AcknowledgementAggregator.validateCorrelationId(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}], "file": "services/models/acks/src/main/java/org/eclipse/ditto/services/models/acks/AcknowledgementAggregator.java"}, "focal_method": {"identifier": "receivedAllRequestedAcknowledgements", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean receivedAllRequestedAcknowledgements() {\n        return expectedLabels.isEmpty();\n    }", "signature": "boolean receivedAllRequestedAcknowledgements()", "full_signature": "public boolean receivedAllRequestedAcknowledgements()", "class_method_signature": "AcknowledgementAggregator.receivedAllRequestedAcknowledgements()", "testcase": false, "constructor": false, "invocations": ["isEmpty"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}