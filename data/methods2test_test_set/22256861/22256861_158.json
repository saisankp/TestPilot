{"test_class": {"identifier": "XfduManifestTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Manifest manifestTest;", "modifier": "private static", "type": "Manifest", "declarator": "manifestTest", "var_name": "manifestTest"}], "file": "s3tbx-sentinel3-reader/src/test/java/org/esa/s3tbx/dataio/s3/XfduManifestTest.java"}, "test_case": {"identifier": "testGetStopTime", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetStopTime() throws Exception {\n        ProductData.UTC expected = ProductData.UTC.parse(\"2013-06-21T10:14:13.646463\", \"yyyy-MM-dd'T'HH:mm:ss\");\n        final ProductData.UTC stopTime = manifestTest.getStopTime();\n        assertTrue(expected.equalElems(stopTime));\n    }", "signature": "void testGetStopTime()", "full_signature": "@Test public void testGetStopTime()", "class_method_signature": "XfduManifestTest.testGetStopTime()", "testcase": true, "constructor": false, "invocations": ["parse", "getStopTime", "assertTrue", "equalElems"]}, "focal_class": {"identifier": "XfduManifest", "superclass": "", "interfaces": "implements Manifest", "fields": [{"original_string": "protected static final String MANIFEST_FILE_NAME = \"xfdumanifest.xml\";", "modifier": "protected static final", "type": "String", "declarator": "MANIFEST_FILE_NAME = \"xfdumanifest.xml\"", "var_name": "MANIFEST_FILE_NAME"}, {"original_string": "private final Document doc;", "modifier": "private final", "type": "Document", "declarator": "doc", "var_name": "doc"}, {"original_string": "private final XPathHelper xPathHelper;", "modifier": "private final", "type": "XPathHelper", "declarator": "xPathHelper", "var_name": "xPathHelper"}, {"original_string": "private MetadataElement manifestElement;", "modifier": "private", "type": "MetadataElement", "declarator": "manifestElement", "var_name": "manifestElement"}], "methods": [{"identifier": "createManifest", "parameters": "(Document manifestDocument)", "modifiers": "public static", "return": "Manifest", "signature": "Manifest createManifest(Document manifestDocument)", "full_signature": "public static Manifest createManifest(Document manifestDocument)", "class_method_signature": "XfduManifest.createManifest(Document manifestDocument)", "testcase": false, "constructor": false}, {"identifier": "XfduManifest", "parameters": "(Document manifestDocument)", "modifiers": "private", "return": "", "signature": " XfduManifest(Document manifestDocument)", "full_signature": "private  XfduManifest(Document manifestDocument)", "class_method_signature": "XfduManifest.XfduManifest(Document manifestDocument)", "testcase": false, "constructor": true}, {"identifier": "getProductName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getProductName()", "full_signature": "@Override public String getProductName()", "class_method_signature": "XfduManifest.getProductName()", "testcase": false, "constructor": false}, {"identifier": "getProductType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getProductType()", "full_signature": "@Override public String getProductType()", "class_method_signature": "XfduManifest.getProductType()", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDescription()", "full_signature": "@Override public String getDescription()", "class_method_signature": "XfduManifest.getDescription()", "testcase": false, "constructor": false}, {"identifier": "getStartTime", "parameters": "()", "modifiers": "@Override public", "return": "ProductData.UTC", "signature": "ProductData.UTC getStartTime()", "full_signature": "@Override public ProductData.UTC getStartTime()", "class_method_signature": "XfduManifest.getStartTime()", "testcase": false, "constructor": false}, {"identifier": "getStopTime", "parameters": "()", "modifiers": "@Override public", "return": "ProductData.UTC", "signature": "ProductData.UTC getStopTime()", "full_signature": "@Override public ProductData.UTC getStopTime()", "class_method_signature": "XfduManifest.getStopTime()", "testcase": false, "constructor": false}, {"identifier": "getFileNames", "parameters": "(final String schema)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getFileNames(final String schema)", "full_signature": "@Override public List<String> getFileNames(final String schema)", "class_method_signature": "XfduManifest.getFileNames(final String schema)", "testcase": false, "constructor": false}, {"identifier": "getFileNames", "parameters": "(String[] excluded)", "modifiers": "@Override public", "return": "List<String>", "signature": "List<String> getFileNames(String[] excluded)", "full_signature": "@Override public List<String> getFileNames(String[] excluded)", "class_method_signature": "XfduManifest.getFileNames(String[] excluded)", "testcase": false, "constructor": false}, {"identifier": "getMetadata", "parameters": "()", "modifiers": "@Override public", "return": "MetadataElement", "signature": "MetadataElement getMetadata()", "full_signature": "@Override public MetadataElement getMetadata()", "class_method_signature": "XfduManifest.getMetadata()", "testcase": false, "constructor": false}, {"identifier": "removeNamespace", "parameters": "(String withNamespace)", "modifiers": "private static", "return": "String", "signature": "String removeNamespace(String withNamespace)", "full_signature": "private static String removeNamespace(String withNamespace)", "class_method_signature": "XfduManifest.removeNamespace(String withNamespace)", "testcase": false, "constructor": false}, {"identifier": "convertNodeToMetadataElement", "parameters": "(Node rootNode, MetadataElement rootMetadata)", "modifiers": "private", "return": "MetadataElement", "signature": "MetadataElement convertNodeToMetadataElement(Node rootNode, MetadataElement rootMetadata)", "full_signature": "private MetadataElement convertNodeToMetadataElement(Node rootNode, MetadataElement rootMetadata)", "class_method_signature": "XfduManifest.convertNodeToMetadataElement(Node rootNode, MetadataElement rootMetadata)", "testcase": false, "constructor": false}, {"identifier": "addAttributesToElement", "parameters": "(Node node, MetadataElement element)", "modifiers": "private", "return": "void", "signature": "void addAttributesToElement(Node node, MetadataElement element)", "full_signature": "private void addAttributesToElement(Node node, MetadataElement element)", "class_method_signature": "XfduManifest.addAttributesToElement(Node node, MetadataElement element)", "testcase": false, "constructor": false}, {"identifier": "hasElementChildNodes", "parameters": "(Node rootNode)", "modifiers": "private static", "return": "boolean", "signature": "boolean hasElementChildNodes(Node rootNode)", "full_signature": "private static boolean hasElementChildNodes(Node rootNode)", "class_method_signature": "XfduManifest.hasElementChildNodes(Node rootNode)", "testcase": false, "constructor": false}, {"identifier": "hasAttributeChildNodes", "parameters": "(Node rootNode)", "modifiers": "private static", "return": "boolean", "signature": "boolean hasAttributeChildNodes(Node rootNode)", "full_signature": "private static boolean hasAttributeChildNodes(Node rootNode)", "class_method_signature": "XfduManifest.hasAttributeChildNodes(Node rootNode)", "testcase": false, "constructor": false}, {"identifier": "getFileNames", "parameters": "(String objectPath, List<String> fileNameList)", "modifiers": "private", "return": "List<String>", "signature": "List<String> getFileNames(String objectPath, List<String> fileNameList)", "full_signature": "private List<String> getFileNames(String objectPath, List<String> fileNameList)", "class_method_signature": "XfduManifest.getFileNames(String objectPath, List<String> fileNameList)", "testcase": false, "constructor": false}, {"identifier": "getTime", "parameters": "(final String name)", "modifiers": "private", "return": "ProductData.UTC", "signature": "ProductData.UTC getTime(final String name)", "full_signature": "private ProductData.UTC getTime(final String name)", "class_method_signature": "XfduManifest.getTime(final String name)", "testcase": false, "constructor": false}, {"identifier": "removeUnderbarsAtEnd", "parameters": "(String typeString)", "modifiers": "private", "return": "String", "signature": "String removeUnderbarsAtEnd(String typeString)", "full_signature": "private String removeUnderbarsAtEnd(String typeString)", "class_method_signature": "XfduManifest.removeUnderbarsAtEnd(String typeString)", "testcase": false, "constructor": false}], "file": "s3tbx-sentinel3-reader/src/main/java/org/esa/s3tbx/dataio/s3/XfduManifest.java"}, "focal_method": {"identifier": "getStopTime", "parameters": "()", "modifiers": "@Override public", "return": "ProductData.UTC", "body": "@Override\n    public ProductData.UTC getStopTime() {\n        return getTime(\"stopTime\");\n    }", "signature": "ProductData.UTC getStopTime()", "full_signature": "@Override public ProductData.UTC getStopTime()", "class_method_signature": "XfduManifest.getStopTime()", "testcase": false, "constructor": false, "invocations": ["getTime"]}, "repository": {"repo_id": 22256861, "url": "https://github.com/senbox-org/s3tbx", "stars": 22, "created": "7/25/2014 12:57:22 PM +00:00", "updates": "2020-01-27T10:23:46+00:00", "fork": "False", "license": "licensed"}}