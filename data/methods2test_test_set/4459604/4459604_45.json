{"test_class": {"identifier": "TextTest", "superclass": "", "interfaces": "", "fields": [], "file": "handlebars/src/test/java/com/github/jknack/handlebars/internal/TextTest.java"}, "test_case": {"identifier": "newText", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void newText() {\n    assertEquals(\"a\", new Text(new Handlebars(), \"a\").text());\n  }", "signature": "void newText()", "full_signature": "@Test public void newText()", "class_method_signature": "TextTest.newText()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "text"]}, "focal_class": {"identifier": "Text", "superclass": "extends BaseTemplate", "interfaces": "", "fields": [{"original_string": "private char[] text;", "modifier": "private", "type": "char[]", "declarator": "text", "var_name": "text"}, {"original_string": "private String escapeChar;", "modifier": "private", "type": "String", "declarator": "escapeChar", "var_name": "escapeChar"}], "methods": [{"identifier": "Text", "parameters": "(final Handlebars handlebars, final String text, final String escapeChar)", "modifiers": "", "return": "", "signature": " Text(final Handlebars handlebars, final String text, final String escapeChar)", "full_signature": "  Text(final Handlebars handlebars, final String text, final String escapeChar)", "class_method_signature": "Text.Text(final Handlebars handlebars, final String text, final String escapeChar)", "testcase": false, "constructor": true}, {"identifier": "Text", "parameters": "(final Handlebars handlebars, final String text)", "modifiers": "", "return": "", "signature": " Text(final Handlebars handlebars, final String text)", "full_signature": "  Text(final Handlebars handlebars, final String text)", "class_method_signature": "Text.Text(final Handlebars handlebars, final String text)", "testcase": false, "constructor": true}, {"identifier": "text", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String text()", "full_signature": "@Override public String text()", "class_method_signature": "Text.text()", "testcase": false, "constructor": false}, {"identifier": "textWithoutEscapeChar", "parameters": "()", "modifiers": "public", "return": "char[]", "signature": "char[] textWithoutEscapeChar()", "full_signature": "public char[] textWithoutEscapeChar()", "class_method_signature": "Text.textWithoutEscapeChar()", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(final Context scope, final Writer writer)", "modifiers": "@Override protected", "return": "void", "signature": "void merge(final Context scope, final Writer writer)", "full_signature": "@Override protected void merge(final Context scope, final Writer writer)", "class_method_signature": "Text.merge(final Context scope, final Writer writer)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(final char[] text)", "modifiers": "public", "return": "Text", "signature": "Text append(final char[] text)", "full_signature": "public Text append(final char[] text)", "class_method_signature": "Text.append(final char[] text)", "testcase": false, "constructor": false}], "file": "handlebars/src/main/java/com/github/jknack/handlebars/internal/Text.java"}, "focal_method": {"identifier": "Text", "parameters": "(final Handlebars handlebars, final String text, final String escapeChar)", "modifiers": "", "return": "", "body": "Text(final Handlebars handlebars, final String text, final String escapeChar) {\n    super(handlebars);\n    int length = text.length();\n    this.text = new char[length];\n    text.getChars(0, length, this.text, 0);\n    this.escapeChar = escapeChar;\n  }", "signature": " Text(final Handlebars handlebars, final String text, final String escapeChar)", "full_signature": "  Text(final Handlebars handlebars, final String text, final String escapeChar)", "class_method_signature": "Text.Text(final Handlebars handlebars, final String text, final String escapeChar)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 4459604, "url": "https://github.com/jknack/handlebars.java", "stars": 1107, "created": "5/27/2012 3:22:22 AM +00:00", "updates": "2020-01-24T06:58:31+00:00", "fork": "False", "license": "licensed"}}