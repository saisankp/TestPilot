{"test_class": {"identifier": "URIUtilsTest", "superclass": "", "interfaces": "", "fields": [], "file": "firefly-net/src/test/java/com/fireflysource/net/http/common/codec/URIUtilsTest.java"}, "test_case": {"identifier": "testEncodeString", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void testEncodeString() {\n        StringBuilder buf = new StringBuilder();\n        buf.setLength(0);\n        URIUtils.encodeString(buf, \"foo%23;,:=b a r\", \";,= \");\n        assertEquals(\"foo%2523%3b%2c:%3db%20a%20r\", buf.toString());\n    }", "signature": "void testEncodeString()", "full_signature": "@Test void testEncodeString()", "class_method_signature": "URIUtilsTest.testEncodeString()", "testcase": true, "constructor": false, "invocations": ["setLength", "encodeString", "assertEquals", "toString"]}, "focal_class": {"identifier": "URIUtils", "superclass": "", "interfaces": "implements Cloneable", "fields": [{"original_string": "public static final String SLASH = \"/\";", "modifier": "public static final", "type": "String", "declarator": "SLASH = \"/\"", "var_name": "SLASH"}, {"original_string": "public static final String HTTP = \"http\";", "modifier": "public static final", "type": "String", "declarator": "HTTP = \"http\"", "var_name": "HTTP"}, {"original_string": "public static final String HTTPS = \"https\";", "modifier": "public static final", "type": "String", "declarator": "HTTPS = \"https\"", "var_name": "HTTPS"}, {"original_string": "public static final Charset __CHARSET = StandardCharsets.UTF_8;", "modifier": "public static final", "type": "Charset", "declarator": "__CHARSET = StandardCharsets.UTF_8", "var_name": "__CHARSET"}], "methods": [{"identifier": "URIUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " URIUtils()", "full_signature": "private  URIUtils()", "class_method_signature": "URIUtils.URIUtils()", "testcase": false, "constructor": true}, {"identifier": "encodePath", "parameters": "(String path)", "modifiers": "public static", "return": "String", "signature": "String encodePath(String path)", "full_signature": "public static String encodePath(String path)", "class_method_signature": "URIUtils.encodePath(String path)", "testcase": false, "constructor": false}, {"identifier": "encodePath", "parameters": "(StringBuilder buf, String path)", "modifiers": "public static", "return": "StringBuilder", "signature": "StringBuilder encodePath(StringBuilder buf, String path)", "full_signature": "public static StringBuilder encodePath(StringBuilder buf, String path)", "class_method_signature": "URIUtils.encodePath(StringBuilder buf, String path)", "testcase": false, "constructor": false}, {"identifier": "encodePath", "parameters": "(StringBuilder buf, String path, int offset)", "modifiers": "private static", "return": "StringBuilder", "signature": "StringBuilder encodePath(StringBuilder buf, String path, int offset)", "full_signature": "private static StringBuilder encodePath(StringBuilder buf, String path, int offset)", "class_method_signature": "URIUtils.encodePath(StringBuilder buf, String path, int offset)", "testcase": false, "constructor": false}, {"identifier": "encodeSpaces", "parameters": "(String str)", "modifiers": "public static", "return": "String", "signature": "String encodeSpaces(String str)", "full_signature": "public static String encodeSpaces(String str)", "class_method_signature": "URIUtils.encodeSpaces(String str)", "testcase": false, "constructor": false}, {"identifier": "encodeSpecific", "parameters": "(String str, String charsToEncode)", "modifiers": "@SuppressWarnings(\"Duplicates\") public static", "return": "String", "signature": "String encodeSpecific(String str, String charsToEncode)", "full_signature": "@SuppressWarnings(\"Duplicates\") public static String encodeSpecific(String str, String charsToEncode)", "class_method_signature": "URIUtils.encodeSpecific(String str, String charsToEncode)", "testcase": false, "constructor": false}, {"identifier": "decodeSpecific", "parameters": "(String str, String charsToDecode)", "modifiers": "@SuppressWarnings(\"Duplicates\") public static", "return": "String", "signature": "String decodeSpecific(String str, String charsToDecode)", "full_signature": "@SuppressWarnings(\"Duplicates\") public static String decodeSpecific(String str, String charsToDecode)", "class_method_signature": "URIUtils.decodeSpecific(String str, String charsToDecode)", "testcase": false, "constructor": false}, {"identifier": "encodeString", "parameters": "(StringBuilder buf,\n                                             String path,\n                                             String encode)", "modifiers": "public static", "return": "StringBuilder", "signature": "StringBuilder encodeString(StringBuilder buf,\n                                             String path,\n                                             String encode)", "full_signature": "public static StringBuilder encodeString(StringBuilder buf,\n                                             String path,\n                                             String encode)", "class_method_signature": "URIUtils.encodeString(StringBuilder buf,\n                                             String path,\n                                             String encode)", "testcase": false, "constructor": false}, {"identifier": "decodePath", "parameters": "(String path)", "modifiers": "public static", "return": "String", "signature": "String decodePath(String path)", "full_signature": "public static String decodePath(String path)", "class_method_signature": "URIUtils.decodePath(String path)", "testcase": false, "constructor": false}, {"identifier": "decodePath", "parameters": "(String path, int offset, int length)", "modifiers": "public static", "return": "String", "signature": "String decodePath(String path, int offset, int length)", "full_signature": "public static String decodePath(String path, int offset, int length)", "class_method_signature": "URIUtils.decodePath(String path, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "decodeISO88591Path", "parameters": "(String path, int offset, int length)", "modifiers": "private static", "return": "String", "signature": "String decodeISO88591Path(String path, int offset, int length)", "full_signature": "private static String decodeISO88591Path(String path, int offset, int length)", "class_method_signature": "URIUtils.decodeISO88591Path(String path, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "addEncodedPaths", "parameters": "(String p1, String p2)", "modifiers": "public static", "return": "String", "signature": "String addEncodedPaths(String p1, String p2)", "full_signature": "public static String addEncodedPaths(String p1, String p2)", "class_method_signature": "URIUtils.addEncodedPaths(String p1, String p2)", "testcase": false, "constructor": false}, {"identifier": "addPaths", "parameters": "(String p1, String p2)", "modifiers": "public static", "return": "String", "signature": "String addPaths(String p1, String p2)", "full_signature": "public static String addPaths(String p1, String p2)", "class_method_signature": "URIUtils.addPaths(String p1, String p2)", "testcase": false, "constructor": false}, {"identifier": "parentPath", "parameters": "(String p)", "modifiers": "public static", "return": "String", "signature": "String parentPath(String p)", "full_signature": "public static String parentPath(String p)", "class_method_signature": "URIUtils.parentPath(String p)", "testcase": false, "constructor": false}, {"identifier": "canonicalPath", "parameters": "(String path)", "modifiers": "public static", "return": "String", "signature": "String canonicalPath(String path)", "full_signature": "public static String canonicalPath(String path)", "class_method_signature": "URIUtils.canonicalPath(String path)", "testcase": false, "constructor": false}, {"identifier": "canonicalEncodedPath", "parameters": "(String path)", "modifiers": "public static", "return": "String", "signature": "String canonicalEncodedPath(String path)", "full_signature": "public static String canonicalEncodedPath(String path)", "class_method_signature": "URIUtils.canonicalEncodedPath(String path)", "testcase": false, "constructor": false}, {"identifier": "compactPath", "parameters": "(String path)", "modifiers": "public static", "return": "String", "signature": "String compactPath(String path)", "full_signature": "public static String compactPath(String path)", "class_method_signature": "URIUtils.compactPath(String path)", "testcase": false, "constructor": false}, {"identifier": "hasScheme", "parameters": "(String uri)", "modifiers": "public static", "return": "boolean", "signature": "boolean hasScheme(String uri)", "full_signature": "public static boolean hasScheme(String uri)", "class_method_signature": "URIUtils.hasScheme(String uri)", "testcase": false, "constructor": false}, {"identifier": "newURI", "parameters": "(String scheme, String server, int port, String path, String query)", "modifiers": "public static", "return": "String", "signature": "String newURI(String scheme, String server, int port, String path, String query)", "full_signature": "public static String newURI(String scheme, String server, int port, String path, String query)", "class_method_signature": "URIUtils.newURI(String scheme, String server, int port, String path, String query)", "testcase": false, "constructor": false}, {"identifier": "newURIBuilder", "parameters": "(String scheme, String server, int port)", "modifiers": "public static", "return": "StringBuilder", "signature": "StringBuilder newURIBuilder(String scheme, String server, int port)", "full_signature": "public static StringBuilder newURIBuilder(String scheme, String server, int port)", "class_method_signature": "URIUtils.newURIBuilder(String scheme, String server, int port)", "testcase": false, "constructor": false}, {"identifier": "appendSchemeHostPort", "parameters": "(StringBuilder url, String scheme, String server, int port)", "modifiers": "public static", "return": "void", "signature": "void appendSchemeHostPort(StringBuilder url, String scheme, String server, int port)", "full_signature": "public static void appendSchemeHostPort(StringBuilder url, String scheme, String server, int port)", "class_method_signature": "URIUtils.appendSchemeHostPort(StringBuilder url, String scheme, String server, int port)", "testcase": false, "constructor": false}, {"identifier": "appendSchemeHostPort", "parameters": "(StringBuffer url, String scheme, String server, int port)", "modifiers": "public static", "return": "void", "signature": "void appendSchemeHostPort(StringBuffer url, String scheme, String server, int port)", "full_signature": "public static void appendSchemeHostPort(StringBuffer url, String scheme, String server, int port)", "class_method_signature": "URIUtils.appendSchemeHostPort(StringBuffer url, String scheme, String server, int port)", "testcase": false, "constructor": false}, {"identifier": "equalsIgnoreEncodings", "parameters": "(String uriA, String uriB)", "modifiers": "public static", "return": "boolean", "signature": "boolean equalsIgnoreEncodings(String uriA, String uriB)", "full_signature": "public static boolean equalsIgnoreEncodings(String uriA, String uriB)", "class_method_signature": "URIUtils.equalsIgnoreEncodings(String uriA, String uriB)", "testcase": false, "constructor": false}, {"identifier": "lenientPercentDecode", "parameters": "(String str, int offset)", "modifiers": "private static", "return": "int", "signature": "int lenientPercentDecode(String str, int offset)", "full_signature": "private static int lenientPercentDecode(String str, int offset)", "class_method_signature": "URIUtils.lenientPercentDecode(String str, int offset)", "testcase": false, "constructor": false}, {"identifier": "equalsIgnoreEncodings", "parameters": "(URI uriA, URI uriB)", "modifiers": "public static", "return": "boolean", "signature": "boolean equalsIgnoreEncodings(URI uriA, URI uriB)", "full_signature": "public static boolean equalsIgnoreEncodings(URI uriA, URI uriB)", "class_method_signature": "URIUtils.equalsIgnoreEncodings(URI uriA, URI uriB)", "testcase": false, "constructor": false}, {"identifier": "addPath", "parameters": "(URI uri, String path)", "modifiers": "public static", "return": "URI", "signature": "URI addPath(URI uri, String path)", "full_signature": "public static URI addPath(URI uri, String path)", "class_method_signature": "URIUtils.addPath(URI uri, String path)", "testcase": false, "constructor": false}, {"identifier": "getJarSource", "parameters": "(URI uri)", "modifiers": "public static", "return": "URI", "signature": "URI getJarSource(URI uri)", "full_signature": "public static URI getJarSource(URI uri)", "class_method_signature": "URIUtils.getJarSource(URI uri)", "testcase": false, "constructor": false}, {"identifier": "getJarSource", "parameters": "(String uri)", "modifiers": "public static", "return": "String", "signature": "String getJarSource(String uri)", "full_signature": "public static String getJarSource(String uri)", "class_method_signature": "URIUtils.getJarSource(String uri)", "testcase": false, "constructor": false}], "file": "firefly-net/src/main/java/com/fireflysource/net/http/common/codec/URIUtils.java"}, "focal_method": {"identifier": "encodeString", "parameters": "(StringBuilder buf,\n                                             String path,\n                                             String encode)", "modifiers": "public static", "return": "StringBuilder", "body": "public static StringBuilder encodeString(StringBuilder buf,\n                                             String path,\n                                             String encode) {\n        if (buf == null) {\n            for (int i = 0; i < path.length(); i++) {\n                char c = path.charAt(i);\n                if (c == '%' || encode.indexOf(c) >= 0) {\n                    buf = new StringBuilder(path.length() << 1);\n                    break;\n                }\n            }\n            if (buf == null)\n                return null;\n        }\n\n        for (int i = 0; i < path.length(); i++) {\n            char c = path.charAt(i);\n            if (c == '%' || encode.indexOf(c) >= 0) {\n                buf.append('%');\n                StringUtils.append(buf, (byte) (0xff & c), 16);\n            } else\n                buf.append(c);\n        }\n\n        return buf;\n    }", "signature": "StringBuilder encodeString(StringBuilder buf,\n                                             String path,\n                                             String encode)", "full_signature": "public static StringBuilder encodeString(StringBuilder buf,\n                                             String path,\n                                             String encode)", "class_method_signature": "URIUtils.encodeString(StringBuilder buf,\n                                             String path,\n                                             String encode)", "testcase": false, "constructor": false, "invocations": ["length", "charAt", "indexOf", "length", "length", "charAt", "indexOf", "append", "append", "append"]}, "repository": {"repo_id": 3458429, "url": "https://github.com/hypercube1024/firefly", "language": "Java", "is_fork": false, "fork_count": 118, "stargazer_count": 271, "size": 29687, "license": "licensed"}}