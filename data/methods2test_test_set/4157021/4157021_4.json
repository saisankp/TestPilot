{"test_class": {"identifier": "RESTExtJsServiceImplTest", "superclass": "extends ServiceTestBase", "interfaces": "", "fields": [{"original_string": "private RESTExtJsServiceImpl restExtJsService;", "modifier": "private", "type": "RESTExtJsServiceImpl", "declarator": "restExtJsService", "var_name": "restExtJsService"}], "file": "src/modules/rest/extjs/src/test/java/it/geosolutions/geostore/services/rest/impl/RESTExtJsServiceImplTest.java"}, "test_case": {"identifier": "testGetAllResources_auth_base", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetAllResources_auth_base() throws Exception\n    {\n        final String CAT_NAME = \"CAT000\";\n\n        assertEquals(0, resourceService.getAll(null, null, buildFakeAdminUser()).size());\n\n        long u0 = restCreateUser(\"u0\", Role.USER, \"p0\");\n        long u1 = restCreateUser(\"u1\", Role.USER, \"p1\");\n\n        Category cat = createCategory(CAT_NAME);\n\n        restCreateResource(\"r_u0_0\", \"x\", CAT_NAME, u0);\n\n        restCreateResource(\"r_u1_0\", \"x\", CAT_NAME, u1);\n        restCreateResource(\"r_u1_1\", \"x\", CAT_NAME, u1);\n\n        {\n            SecurityContext sc = new SimpleSecurityContext(u0);\n            String response = restExtJsService.getAllResources(sc, \"*\", 0, 1000);\n\n            System.out.println(\"JSON \" + response);\n\n            JSONResult result = parse(response);\n            assertEquals(1, result.total);\n            assertEquals(1, result.returnedCount);\n\n            assertTrue(result.names.contains(\"r_u0_0\"));\n        }\n\n        {\n            SecurityContext sc = new SimpleSecurityContext(u1);\n            String response = restExtJsService.getAllResources(sc, \"*\", 0, 1000);\n\n            System.out.println(\"JSON \" + response);\n\n            JSONResult result = parse(response);\n            assertEquals(2, result.total);\n            assertEquals(2, result.returnedCount);\n\n            assertTrue(result.names.contains(\"r_u1_0\"));\n            assertTrue(result.names.contains(\"r_u1_1\"));\n\n            assertFalse(result.names.contains(\"r_u0_0\"));\n        }\n    }", "signature": "void testGetAllResources_auth_base()", "full_signature": "@Test public void testGetAllResources_auth_base()", "class_method_signature": "RESTExtJsServiceImplTest.testGetAllResources_auth_base()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "size", "getAll", "buildFakeAdminUser", "restCreateUser", "restCreateUser", "createCategory", "restCreateResource", "restCreateResource", "restCreateResource", "getAllResources", "println", "parse", "assertEquals", "assertEquals", "assertTrue", "contains", "getAllResources", "println", "parse", "assertEquals", "assertEquals", "assertTrue", "contains", "assertTrue", "contains", "assertFalse", "contains"]}, "focal_class": {"identifier": "RESTExtJsServiceImpl", "superclass": "extends RESTServiceImpl", "interfaces": "implements RESTExtJsService", "fields": [{"original_string": "private final static Logger LOGGER = Logger.getLogger(RESTExtJsServiceImpl.class);", "modifier": "private final static", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(RESTExtJsServiceImpl.class)", "var_name": "LOGGER"}, {"original_string": "private ResourceService resourceService;", "modifier": "private", "type": "ResourceService", "declarator": "resourceService", "var_name": "resourceService"}, {"original_string": "private UserService userService;", "modifier": "private", "type": "UserService", "declarator": "userService", "var_name": "userService"}, {"original_string": "private UserGroupService groupService;", "modifier": "private", "type": "UserGroupService", "declarator": "groupService", "var_name": "groupService"}], "methods": [{"identifier": "setResourceService", "parameters": "(ResourceService resourceService)", "modifiers": "public", "return": "void", "signature": "void setResourceService(ResourceService resourceService)", "full_signature": "public void setResourceService(ResourceService resourceService)", "class_method_signature": "RESTExtJsServiceImpl.setResourceService(ResourceService resourceService)", "testcase": false, "constructor": false}, {"identifier": "setUserService", "parameters": "(UserService userService)", "modifiers": "public", "return": "void", "signature": "void setUserService(UserService userService)", "full_signature": "public void setUserService(UserService userService)", "class_method_signature": "RESTExtJsServiceImpl.setUserService(UserService userService)", "testcase": false, "constructor": false}, {"identifier": "setUserGroupService", "parameters": "(UserGroupService userGroupService)", "modifiers": "public", "return": "void", "signature": "void setUserGroupService(UserGroupService userGroupService)", "full_signature": "public void setUserGroupService(UserGroupService userGroupService)", "class_method_signature": "RESTExtJsServiceImpl.setUserGroupService(UserGroupService userGroupService)", "testcase": false, "constructor": false}, {"identifier": "getAllResources", "parameters": "(SecurityContext sc, String nameLike,\n            Integer start, Integer limit)", "modifiers": "@Override public", "return": "String", "signature": "String getAllResources(SecurityContext sc, String nameLike,\n            Integer start, Integer limit)", "full_signature": "@Override public String getAllResources(SecurityContext sc, String nameLike,\n            Integer start, Integer limit)", "class_method_signature": "RESTExtJsServiceImpl.getAllResources(SecurityContext sc, String nameLike,\n            Integer start, Integer limit)", "testcase": false, "constructor": false}, {"identifier": "getResourcesByCategory", "parameters": "(SecurityContext sc, String categoryName, Integer start,\n            Integer limit, boolean includeAttributes,\n            boolean includeData)", "modifiers": "@Override public", "return": "String", "signature": "String getResourcesByCategory(SecurityContext sc, String categoryName, Integer start,\n            Integer limit, boolean includeAttributes,\n            boolean includeData)", "full_signature": "@Override public String getResourcesByCategory(SecurityContext sc, String categoryName, Integer start,\n            Integer limit, boolean includeAttributes,\n            boolean includeData)", "class_method_signature": "RESTExtJsServiceImpl.getResourcesByCategory(SecurityContext sc, String categoryName, Integer start,\n            Integer limit, boolean includeAttributes,\n            boolean includeData)", "testcase": false, "constructor": false}, {"identifier": "getResourcesByCategory", "parameters": "(SecurityContext sc, String categoryName, String resourceNameLike, Integer start,\n            Integer limit, boolean includeAttributes, boolean includeData)", "modifiers": "@Override public", "return": "String", "signature": "String getResourcesByCategory(SecurityContext sc, String categoryName, String resourceNameLike, Integer start,\n            Integer limit, boolean includeAttributes, boolean includeData)", "full_signature": "@Override public String getResourcesByCategory(SecurityContext sc, String categoryName, String resourceNameLike, Integer start,\n            Integer limit, boolean includeAttributes, boolean includeData)", "class_method_signature": "RESTExtJsServiceImpl.getResourcesByCategory(SecurityContext sc, String categoryName, String resourceNameLike, Integer start,\n            Integer limit, boolean includeAttributes, boolean includeData)", "testcase": false, "constructor": false}, {"identifier": "getResourcesByCategory", "parameters": "(SecurityContext sc,\n            String categoryName, String resourceNameLike, String extraAttributes,\n            Integer start, Integer limit, boolean includeAttributes, boolean includeData)", "modifiers": "@Override public", "return": "String", "signature": "String getResourcesByCategory(SecurityContext sc,\n            String categoryName, String resourceNameLike, String extraAttributes,\n            Integer start, Integer limit, boolean includeAttributes, boolean includeData)", "full_signature": "@Override public String getResourcesByCategory(SecurityContext sc,\n            String categoryName, String resourceNameLike, String extraAttributes,\n            Integer start, Integer limit, boolean includeAttributes, boolean includeData)", "class_method_signature": "RESTExtJsServiceImpl.getResourcesByCategory(SecurityContext sc,\n            String categoryName, String resourceNameLike, String extraAttributes,\n            Integer start, Integer limit, boolean includeAttributes, boolean includeData)", "testcase": false, "constructor": false}, {"identifier": "getExtResourcesList", "parameters": "(SecurityContext sc, Integer start, Integer limit,\n            boolean includeAttributes, boolean includeData, SearchFilter filter)", "modifiers": "@Override public", "return": "ExtResourceList", "signature": "ExtResourceList getExtResourcesList(SecurityContext sc, Integer start, Integer limit,\n            boolean includeAttributes, boolean includeData, SearchFilter filter)", "full_signature": "@Override public ExtResourceList getExtResourcesList(SecurityContext sc, Integer start, Integer limit,\n            boolean includeAttributes, boolean includeData, SearchFilter filter)", "class_method_signature": "RESTExtJsServiceImpl.getExtResourcesList(SecurityContext sc, Integer start, Integer limit,\n            boolean includeAttributes, boolean includeData, SearchFilter filter)", "testcase": false, "constructor": false}, {"identifier": "makeExtendedJSONResult", "parameters": "(boolean success, long count, List<Resource> resources,\n            User authUser, List<String> extraAttributes, boolean includeAttributes, boolean includeData)", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject makeExtendedJSONResult(boolean success, long count, List<Resource> resources,\n            User authUser, List<String> extraAttributes, boolean includeAttributes, boolean includeData)", "full_signature": "private JSONObject makeExtendedJSONResult(boolean success, long count, List<Resource> resources,\n            User authUser, List<String> extraAttributes, boolean includeAttributes, boolean includeData)", "class_method_signature": "RESTExtJsServiceImpl.makeExtendedJSONResult(boolean success, long count, List<Resource> resources,\n            User authUser, List<String> extraAttributes, boolean includeAttributes, boolean includeData)", "testcase": false, "constructor": false}, {"identifier": "makeJSONResult", "parameters": "(boolean success, long count, List<ShortResource> resources,\n            User authUser)", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject makeJSONResult(boolean success, long count, List<ShortResource> resources,\n            User authUser)", "full_signature": "private JSONObject makeJSONResult(boolean success, long count, List<ShortResource> resources,\n            User authUser)", "class_method_signature": "RESTExtJsServiceImpl.makeJSONResult(boolean success, long count, List<ShortResource> resources,\n            User authUser)", "testcase": false, "constructor": false}, {"identifier": "getUsersList", "parameters": "(SecurityContext sc, String nameLike, Integer start,\n            Integer limit, boolean includeAttributes)", "modifiers": "@Override public", "return": "ExtUserList", "signature": "ExtUserList getUsersList(SecurityContext sc, String nameLike, Integer start,\n            Integer limit, boolean includeAttributes)", "full_signature": "@Override public ExtUserList getUsersList(SecurityContext sc, String nameLike, Integer start,\n            Integer limit, boolean includeAttributes)", "class_method_signature": "RESTExtJsServiceImpl.getUsersList(SecurityContext sc, String nameLike, Integer start,\n            Integer limit, boolean includeAttributes)", "testcase": false, "constructor": false}, {"identifier": "getGroupsList", "parameters": "(SecurityContext sc, String nameLike, Integer start,\n            Integer limit, boolean all)", "modifiers": "@Override public", "return": "ExtGroupList", "signature": "ExtGroupList getGroupsList(SecurityContext sc, String nameLike, Integer start,\n            Integer limit, boolean all)", "full_signature": "@Override public ExtGroupList getGroupsList(SecurityContext sc, String nameLike, Integer start,\n            Integer limit, boolean all)", "class_method_signature": "RESTExtJsServiceImpl.getGroupsList(SecurityContext sc, String nameLike, Integer start,\n            Integer limit, boolean all)", "testcase": false, "constructor": false}, {"identifier": "getSecurityService", "parameters": "()", "modifiers": "@Override protected", "return": "SecurityService", "signature": "SecurityService getSecurityService()", "full_signature": "@Override protected SecurityService getSecurityService()", "class_method_signature": "RESTExtJsServiceImpl.getSecurityService()", "testcase": false, "constructor": false}, {"identifier": "makeGeneralizedJSONResult", "parameters": "(boolean success, long count, List<?> resources,\n            User authUser, List<String> extraAttributes, boolean includeAttributes, boolean includeData)", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject makeGeneralizedJSONResult(boolean success, long count, List<?> resources,\n            User authUser, List<String> extraAttributes, boolean includeAttributes, boolean includeData)", "full_signature": "private JSONObject makeGeneralizedJSONResult(boolean success, long count, List<?> resources,\n            User authUser, List<String> extraAttributes, boolean includeAttributes, boolean includeData)", "class_method_signature": "RESTExtJsServiceImpl.makeGeneralizedJSONResult(boolean success, long count, List<?> resources,\n            User authUser, List<String> extraAttributes, boolean includeAttributes, boolean includeData)", "testcase": false, "constructor": false}, {"identifier": "getResource", "parameters": "(SecurityContext sc, long id)", "modifiers": "@Override public", "return": "ShortResource", "signature": "ShortResource getResource(SecurityContext sc, long id)", "full_signature": "@Override public ShortResource getResource(SecurityContext sc, long id)", "class_method_signature": "RESTExtJsServiceImpl.getResource(SecurityContext sc, long id)", "testcase": false, "constructor": false}], "file": "src/modules/rest/extjs/src/main/java/it/geosolutions/geostore/services/rest/impl/RESTExtJsServiceImpl.java"}, "focal_method": {"identifier": "getAllResources", "parameters": "(SecurityContext sc, String nameLike,\n            Integer start, Integer limit)", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getAllResources(SecurityContext sc, String nameLike,\n            Integer start, Integer limit)\n            throws BadRequestWebEx {\n\n        if (start == null || limit == null) {\n            throw new BadRequestWebEx(\"Request parameters are missing !\");\n        }\n\n        if (LOGGER.isInfoEnabled()) {\n            LOGGER.info(\"Retrieving paginated resource list (start=\"+start+\" limit=\"+limit+\")\");\n        }\n\n        User authUser = null;\n        try {\n            authUser = extractAuthUser(sc);\n        } catch (InternalErrorWebEx ie) {\n            // serch without user information\n            LOGGER.warn(\"Error in validating user (this action should probably be aborted)\", ie); // why is this exception caught?\n        }\n\n        int page = start == 0 ? start : start / limit;\n\n        try {\n            nameLike = nameLike.replaceAll(\"[*]\", \"%\");\n            // TOOD: implement includeAttributes and includeData\n\n            List<ShortResource> resources = resourceService.getList(nameLike, page, limit, authUser);\n\n            long count = 0;\n            if (resources != null && resources.size() > 0) {\n                count = resourceService.getCountByFilterAndUser(nameLike, authUser);\n            }\n\n            JSONObject result = makeJSONResult(true, count, resources, authUser);\n            return result.toString();\n\n        } catch (BadRequestServiceEx e) {\n            LOGGER.warn(e.getMessage(), e);\n\n            JSONObject obj = makeJSONResult(false, 0, null, authUser);\n            return obj.toString();\n        }\n    }", "signature": "String getAllResources(SecurityContext sc, String nameLike,\n            Integer start, Integer limit)", "full_signature": "@Override public String getAllResources(SecurityContext sc, String nameLike,\n            Integer start, Integer limit)", "class_method_signature": "RESTExtJsServiceImpl.getAllResources(SecurityContext sc, String nameLike,\n            Integer start, Integer limit)", "testcase": false, "constructor": false, "invocations": ["isInfoEnabled", "info", "extractAuthUser", "warn", "replaceAll", "getList", "size", "getCountByFilterAndUser", "makeJSONResult", "toString", "warn", "getMessage", "makeJSONResult", "toString"]}, "repository": {"repo_id": 4157021, "url": "https://github.com/geosolutions-it/geostore", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 19, "size": 1798, "license": "licensed"}}