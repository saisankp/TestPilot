{"test_class": {"identifier": "InMemoryDatabaseTest", "superclass": "", "interfaces": "", "fields": [], "file": "CoreFeatures/Database-in-memory/InMemoryDatabase/src/test/java/info/smart_tools/smartactors/database_in_memory/in_memory_database/InMemoryDatabaseTest.java"}, "test_case": {"identifier": "testInsertToNotExistingCollection", "parameters": "()", "modifiers": "@Test(expected = IDatabaseException.class) public", "return": "void", "body": "@Test(expected = IDatabaseException.class)\n    public void testInsertToNotExistingCollection() throws InvalidArgumentException, IDatabaseException, SerializeException, ReadValueException {\n        InMemoryDatabase database = new InMemoryDatabase();\n        IObject document = new DSObject(\"{}\");\n        database.insert(document, \"collection_name\");\n    }", "signature": "void testInsertToNotExistingCollection()", "full_signature": "@Test(expected = IDatabaseException.class) public void testInsertToNotExistingCollection()", "class_method_signature": "InMemoryDatabaseTest.testInsertToNotExistingCollection()", "testcase": true, "constructor": false, "invocations": ["insert"]}, "focal_class": {"identifier": "InMemoryDatabase", "superclass": "", "interfaces": "implements IDatabase", "fields": [{"original_string": "private Map<String, List<DataBaseItem>> dataBase = new HashMap<>();", "modifier": "private", "type": "Map<String, List<DataBaseItem>>", "declarator": "dataBase = new HashMap<>()", "var_name": "dataBase"}, {"original_string": "private IFieldName filterFieldName;", "modifier": "private", "type": "IFieldName", "declarator": "filterFieldName", "var_name": "filterFieldName"}], "methods": [{"identifier": "InMemoryDatabase", "parameters": "()", "modifiers": "public", "return": "", "signature": " InMemoryDatabase()", "full_signature": "public  InMemoryDatabase()", "class_method_signature": "InMemoryDatabase.InMemoryDatabase()", "testcase": false, "constructor": true}, {"identifier": "upsert", "parameters": "(final IObject document, final String collectionName)", "modifiers": "@Override public", "return": "void", "signature": "void upsert(final IObject document, final String collectionName)", "full_signature": "@Override public void upsert(final IObject document, final String collectionName)", "class_method_signature": "InMemoryDatabase.upsert(final IObject document, final String collectionName)", "testcase": false, "constructor": false}, {"identifier": "createCollection", "parameters": "(final String collectionName)", "modifiers": "@Override public", "return": "void", "signature": "void createCollection(final String collectionName)", "full_signature": "@Override public void createCollection(final String collectionName)", "class_method_signature": "InMemoryDatabase.createCollection(final String collectionName)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(final IObject document, final String collectionName)", "modifiers": "@Override public", "return": "void", "signature": "void insert(final IObject document, final String collectionName)", "full_signature": "@Override public void insert(final IObject document, final String collectionName)", "class_method_signature": "InMemoryDatabase.insert(final IObject document, final String collectionName)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(final IObject document, final String collectionName)", "modifiers": "@Override public", "return": "void", "signature": "void update(final IObject document, final String collectionName)", "full_signature": "@Override public void update(final IObject document, final String collectionName)", "class_method_signature": "InMemoryDatabase.update(final IObject document, final String collectionName)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(final DataBaseItem item)", "modifiers": "private", "return": "void", "signature": "void update(final DataBaseItem item)", "full_signature": "private void update(final DataBaseItem item)", "class_method_signature": "InMemoryDatabase.update(final DataBaseItem item)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(final DataBaseItem item)", "modifiers": "private", "return": "void", "signature": "void insert(final DataBaseItem item)", "full_signature": "private void insert(final DataBaseItem item)", "class_method_signature": "InMemoryDatabase.insert(final DataBaseItem item)", "testcase": false, "constructor": false}, {"identifier": "getById", "parameters": "(final Object id, final String collectionName)", "modifiers": "@Override public", "return": "IObject", "signature": "IObject getById(final Object id, final String collectionName)", "full_signature": "@Override public IObject getById(final Object id, final String collectionName)", "class_method_signature": "InMemoryDatabase.getById(final Object id, final String collectionName)", "testcase": false, "constructor": false}, {"identifier": "nextId", "parameters": "(final String collectionName)", "modifiers": "private", "return": "Object", "signature": "Object nextId(final String collectionName)", "full_signature": "private Object nextId(final String collectionName)", "class_method_signature": "InMemoryDatabase.nextId(final String collectionName)", "testcase": false, "constructor": false}, {"identifier": "select", "parameters": "(final IObject condition, final String collectionName)", "modifiers": "@Override public", "return": "List<IObject>", "signature": "List<IObject> select(final IObject condition, final String collectionName)", "full_signature": "@Override public List<IObject> select(final IObject condition, final String collectionName)", "class_method_signature": "InMemoryDatabase.select(final IObject condition, final String collectionName)", "testcase": false, "constructor": false}, {"identifier": "generalConditionParser", "parameters": "(final IObject condition, final IObject document)", "modifiers": "private", "return": "boolean", "signature": "boolean generalConditionParser(final IObject condition, final IObject document)", "full_signature": "private boolean generalConditionParser(final IObject condition, final IObject document)", "class_method_signature": "InMemoryDatabase.generalConditionParser(final IObject condition, final IObject document)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "(final IObject iObject)", "modifiers": "private", "return": "IObject", "signature": "IObject clone(final IObject iObject)", "full_signature": "private IObject clone(final IObject iObject)", "class_method_signature": "InMemoryDatabase.clone(final IObject iObject)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(final IObject document, final String collectionName)", "modifiers": "@Override public", "return": "void", "signature": "void delete(final IObject document, final String collectionName)", "full_signature": "@Override public void delete(final IObject document, final String collectionName)", "class_method_signature": "InMemoryDatabase.delete(final IObject document, final String collectionName)", "testcase": false, "constructor": false}, {"identifier": "count", "parameters": "(final IObject condition, final String collectionName)", "modifiers": "@Override public", "return": "Long", "signature": "Long count(final IObject condition, final String collectionName)", "full_signature": "@Override public Long count(final IObject condition, final String collectionName)", "class_method_signature": "InMemoryDatabase.count(final IObject condition, final String collectionName)", "testcase": false, "constructor": false}], "file": "CoreFeatures/Database-in-memory/InMemoryDatabase/src/main/java/info/smart_tools/smartactors/database_in_memory/in_memory_database/InMemoryDatabase.java"}, "focal_method": {"identifier": "insert", "parameters": "(final IObject document, final String collectionName)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void insert(final IObject document, final String collectionName) throws IDatabaseException {\n        synchronized (this) {\n            try {\n                DataBaseItem item = IOC.resolve(Keys.getOrAdd(DataBaseItem.class.getCanonicalName()), document, collectionName);\n                insert(item);\n            } catch (ResolutionException e) {\n                throw new IDatabaseException(\"Failed to create DataBaseItem\", e);\n            }\n        }\n    }", "signature": "void insert(final IObject document, final String collectionName)", "full_signature": "@Override public void insert(final IObject document, final String collectionName)", "class_method_signature": "InMemoryDatabase.insert(final IObject document, final String collectionName)", "testcase": false, "constructor": false, "invocations": ["resolve", "getOrAdd", "getCanonicalName", "insert"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}