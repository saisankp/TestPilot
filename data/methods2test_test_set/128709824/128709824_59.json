{"test_class": {"identifier": "SerializerFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/api/src/test/java/com/alipay/sofa/rpc/codec/SerializerFactoryTest.java"}, "test_case": {"identifier": "getCodeByAlias", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getCodeByAlias() {\n        Assert.assertTrue(SerializerFactory.getCodeByAlias(\"test\") == 117);\n    }", "signature": "void getCodeByAlias()", "full_signature": "@Test public void getCodeByAlias()", "class_method_signature": "SerializerFactoryTest.getCodeByAlias()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "getCodeByAlias"]}, "focal_class": {"identifier": "SerializerFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static ConcurrentMap<Byte, Serializer> TYPE_SERIALIZER_MAP = new ConcurrentHashMap<Byte, Serializer>();", "modifier": "private final static", "type": "ConcurrentMap<Byte, Serializer>", "declarator": "TYPE_SERIALIZER_MAP = new ConcurrentHashMap<Byte, Serializer>()", "var_name": "TYPE_SERIALIZER_MAP"}, {"original_string": "private final static TwoWayMap<String, Byte>         TYPE_CODE_MAP       = new TwoWayMap<String, Byte>();", "modifier": "private final static", "type": "TwoWayMap<String, Byte>", "declarator": "TYPE_CODE_MAP       = new TwoWayMap<String, Byte>()", "var_name": "TYPE_CODE_MAP"}, {"original_string": "private final static ExtensionLoader<Serializer>     EXTENSION_LOADER    = buildLoader();", "modifier": "private final static", "type": "ExtensionLoader<Serializer>", "declarator": "EXTENSION_LOADER    = buildLoader()", "var_name": "EXTENSION_LOADER"}], "methods": [{"identifier": "buildLoader", "parameters": "()", "modifiers": "private static", "return": "ExtensionLoader<Serializer>", "signature": "ExtensionLoader<Serializer> buildLoader()", "full_signature": "private static ExtensionLoader<Serializer> buildLoader()", "class_method_signature": "SerializerFactory.buildLoader()", "testcase": false, "constructor": false}, {"identifier": "getSerializer", "parameters": "(String alias)", "modifiers": "public static", "return": "Serializer", "signature": "Serializer getSerializer(String alias)", "full_signature": "public static Serializer getSerializer(String alias)", "class_method_signature": "SerializerFactory.getSerializer(String alias)", "testcase": false, "constructor": false}, {"identifier": "getSerializer", "parameters": "(byte type)", "modifiers": "public static", "return": "Serializer", "signature": "Serializer getSerializer(byte type)", "full_signature": "public static Serializer getSerializer(byte type)", "class_method_signature": "SerializerFactory.getSerializer(byte type)", "testcase": false, "constructor": false}, {"identifier": "getCodeByAlias", "parameters": "(String serializer)", "modifiers": "public static", "return": "Byte", "signature": "Byte getCodeByAlias(String serializer)", "full_signature": "public static Byte getCodeByAlias(String serializer)", "class_method_signature": "SerializerFactory.getCodeByAlias(String serializer)", "testcase": false, "constructor": false}, {"identifier": "getAliasByCode", "parameters": "(byte code)", "modifiers": "public static", "return": "String", "signature": "String getAliasByCode(byte code)", "full_signature": "public static String getAliasByCode(byte code)", "class_method_signature": "SerializerFactory.getAliasByCode(byte code)", "testcase": false, "constructor": false}], "file": "core/api/src/main/java/com/alipay/sofa/rpc/codec/SerializerFactory.java"}, "focal_method": {"identifier": "getCodeByAlias", "parameters": "(String serializer)", "modifiers": "public static", "return": "Byte", "body": "public static Byte getCodeByAlias(String serializer) {\n        return TYPE_CODE_MAP.get(serializer);\n    }", "signature": "Byte getCodeByAlias(String serializer)", "full_signature": "public static Byte getCodeByAlias(String serializer)", "class_method_signature": "SerializerFactory.getCodeByAlias(String serializer)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}