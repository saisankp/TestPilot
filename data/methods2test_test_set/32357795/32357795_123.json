{"test_class": {"identifier": "CachedGrabberTest", "superclass": "extends AbstractGrabberTest", "interfaces": "", "fields": [], "file": "ontopia-engine/src/test/java/net/ontopia/utils/CachedGrabberTest.java"}, "test_case": {"identifier": "testCachedGrabber", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCachedGrabber() {\n    CachedGrabber grb = new CachedGrabber(new SubstringGrabber(5, 15));\n    \n    String str = \"Jazz is not dead, it just smells funny!\";\n    testGrabber(grb.grab(str), grb.getGrabber().grab(str), grb.getGrabber().grab(str.substring(2)));\n    str.replace(' ', '-');\n    testGrabber(grb.grab(str), grb.getGrabber().grab(str), grb.getGrabber().grab(str.substring(2)));\n    testGrabber(grb.grab(str), grb.getGrabber().grab(str), grb.getGrabber().grab(str.substring(2)));\n    grb.refresh();\n    testGrabber(grb.grab(str), grb.getGrabber().grab(str), grb.getGrabber().grab(str.substring(2)));\n    str.replace('-', '_');\n    testGrabber(grb.grab(str), grb.getGrabber().grab(str), grb.getGrabber().grab(str.substring(2)));\n    testGrabber(grb.grab(str), grb.getGrabber().grab(str), grb.getGrabber().grab(str.substring(2)));\n\n    grb.setGrabber(new UpperCaseGrabber());\n    testGrabber(grb.grab(str), grb.grab(str), grb.getGrabber().grab(str));\n    grb.refresh();\n    testGrabber(grb.grab(str), grb.getGrabber().grab(str), grb.getGrabber().grab(str.substring(2)));\n  }", "signature": "void testCachedGrabber()", "full_signature": "@Test public void testCachedGrabber()", "class_method_signature": "CachedGrabberTest.testCachedGrabber()", "testcase": true, "constructor": false, "invocations": ["testGrabber", "grab", "grab", "getGrabber", "grab", "getGrabber", "substring", "replace", "testGrabber", "grab", "grab", "getGrabber", "grab", "getGrabber", "substring", "testGrabber", "grab", "grab", "getGrabber", "grab", "getGrabber", "substring", "refresh", "testGrabber", "grab", "grab", "getGrabber", "grab", "getGrabber", "substring", "replace", "testGrabber", "grab", "grab", "getGrabber", "grab", "getGrabber", "substring", "testGrabber", "grab", "grab", "getGrabber", "grab", "getGrabber", "substring", "setGrabber", "testGrabber", "grab", "grab", "grab", "getGrabber", "refresh", "testGrabber", "grab", "grab", "getGrabber", "grab", "getGrabber", "substring"]}, "focal_class": {"identifier": "CachedGrabber", "superclass": "", "interfaces": "implements GrabberIF<O, G>, CachedIF", "fields": [{"original_string": "protected GrabberIF<O, G> grabber;", "modifier": "protected", "type": "GrabberIF<O, G>", "declarator": "grabber", "var_name": "grabber"}, {"original_string": "protected Map<O, G> cache = new HashMap<O, G>();", "modifier": "protected", "type": "Map<O, G>", "declarator": "cache = new HashMap<O, G>()", "var_name": "cache"}], "methods": [{"identifier": "CachedGrabber", "parameters": "(GrabberIF<O, G> grabber)", "modifiers": "public", "return": "", "signature": " CachedGrabber(GrabberIF<O, G> grabber)", "full_signature": "public  CachedGrabber(GrabberIF<O, G> grabber)", "class_method_signature": "CachedGrabber.CachedGrabber(GrabberIF<O, G> grabber)", "testcase": false, "constructor": true}, {"identifier": "getGrabber", "parameters": "()", "modifiers": "public", "return": "GrabberIF<O, G>", "signature": "GrabberIF<O, G> getGrabber()", "full_signature": "public GrabberIF<O, G> getGrabber()", "class_method_signature": "CachedGrabber.getGrabber()", "testcase": false, "constructor": false}, {"identifier": "setGrabber", "parameters": "(GrabberIF<O, G> grabber)", "modifiers": "public", "return": "void", "signature": "void setGrabber(GrabberIF<O, G> grabber)", "full_signature": "public void setGrabber(GrabberIF<O, G> grabber)", "class_method_signature": "CachedGrabber.setGrabber(GrabberIF<O, G> grabber)", "testcase": false, "constructor": false}, {"identifier": "grab", "parameters": "(O object)", "modifiers": "@Override public", "return": "G", "signature": "G grab(O object)", "full_signature": "@Override public G grab(O object)", "class_method_signature": "CachedGrabber.grab(O object)", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void refresh()", "full_signature": "@Override public void refresh()", "class_method_signature": "CachedGrabber.refresh()", "testcase": false, "constructor": false}], "file": "ontopia-engine/src/main/java/net/ontopia/utils/CachedGrabber.java"}, "focal_method": {"identifier": "CachedGrabber", "parameters": "(GrabberIF<O, G> grabber)", "modifiers": "public", "return": "", "body": "public CachedGrabber(GrabberIF<O, G> grabber) {\n    this.grabber = grabber;\n  }", "signature": " CachedGrabber(GrabberIF<O, G> grabber)", "full_signature": "public  CachedGrabber(GrabberIF<O, G> grabber)", "class_method_signature": "CachedGrabber.CachedGrabber(GrabberIF<O, G> grabber)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 32357795, "url": "https://github.com/ontopia/ontopia", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 35, "size": 68637, "license": "licensed"}}