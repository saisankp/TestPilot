{"test_class": {"identifier": "BPolDescriptorTest", "superclass": "extends MolecularDescriptorTest", "interfaces": "", "fields": [], "file": "descriptor/qsarmolecular/src/test/java/org/openscience/cdk/qsar/descriptors/molecular/BPolDescriptorTest.java"}, "test_case": {"identifier": "testBPolDescriptor", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBPolDescriptor() throws ClassNotFoundException, CDKException, java.lang.Exception {\n        SmilesParser sp = new SmilesParser(DefaultChemObjectBuilder.getInstance());\n        IAtomContainer mol = sp.parseSmiles(\"O=C(O)CC\");\n        addExplicitHydrogens(mol);\n        Assert.assertEquals(7.517242, ((DoubleResult) descriptor.calculate(mol).getValue()).doubleValue(), 0.01);\n    }", "signature": "void testBPolDescriptor()", "full_signature": "@Test public void testBPolDescriptor()", "class_method_signature": "BPolDescriptorTest.testBPolDescriptor()", "testcase": true, "constructor": false, "invocations": ["getInstance", "parseSmiles", "addExplicitHydrogens", "assertEquals", "doubleValue", "getValue", "calculate"]}, "focal_class": {"identifier": "BPolDescriptor", "superclass": "extends AbstractMolecularDescriptor", "interfaces": "implements IMolecularDescriptor", "fields": [{"original_string": "private static ILoggingTool   logger = LoggingToolFactory.createLoggingTool(BPolDescriptor.class);", "modifier": "private static", "type": "ILoggingTool", "declarator": "logger = LoggingToolFactory.createLoggingTool(BPolDescriptor.class)", "var_name": "logger"}, {"original_string": "private static double[]       polarizabilities;", "modifier": "private static", "type": "double[]", "declarator": "polarizabilities", "var_name": "polarizabilities"}, {"original_string": "private static final String[] NAMES  = {\"bpol\"};", "modifier": "private static final", "type": "String[]", "declarator": "NAMES  = {\"bpol\"}", "var_name": "NAMES"}], "methods": [{"identifier": "BPolDescriptor", "parameters": "()", "modifiers": "public", "return": "", "signature": " BPolDescriptor()", "full_signature": "public  BPolDescriptor()", "class_method_signature": "BPolDescriptor.BPolDescriptor()", "testcase": false, "constructor": true}, {"identifier": "getSpecification", "parameters": "()", "modifiers": "@Override public", "return": "DescriptorSpecification", "signature": "DescriptorSpecification getSpecification()", "full_signature": "@Override public DescriptorSpecification getSpecification()", "class_method_signature": "BPolDescriptor.getSpecification()", "testcase": false, "constructor": false}, {"identifier": "setParameters", "parameters": "(Object[] params)", "modifiers": "@Override public", "return": "void", "signature": "void setParameters(Object[] params)", "full_signature": "@Override public void setParameters(Object[] params)", "class_method_signature": "BPolDescriptor.setParameters(Object[] params)", "testcase": false, "constructor": false}, {"identifier": "getParameters", "parameters": "()", "modifiers": "@Override public", "return": "Object[]", "signature": "Object[] getParameters()", "full_signature": "@Override public Object[] getParameters()", "class_method_signature": "BPolDescriptor.getParameters()", "testcase": false, "constructor": false}, {"identifier": "getDescriptorNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getDescriptorNames()", "full_signature": "@Override public String[] getDescriptorNames()", "class_method_signature": "BPolDescriptor.getDescriptorNames()", "testcase": false, "constructor": false}, {"identifier": "calculate", "parameters": "(IAtomContainer container)", "modifiers": "@Override public", "return": "DescriptorValue", "signature": "DescriptorValue calculate(IAtomContainer container)", "full_signature": "@Override public DescriptorValue calculate(IAtomContainer container)", "class_method_signature": "BPolDescriptor.calculate(IAtomContainer container)", "testcase": false, "constructor": false}, {"identifier": "getDescriptorResultType", "parameters": "()", "modifiers": "@Override public", "return": "IDescriptorResult", "signature": "IDescriptorResult getDescriptorResultType()", "full_signature": "@Override public IDescriptorResult getDescriptorResultType()", "class_method_signature": "BPolDescriptor.getDescriptorResultType()", "testcase": false, "constructor": false}, {"identifier": "getParameterNames", "parameters": "()", "modifiers": "@Override public", "return": "String[]", "signature": "String[] getParameterNames()", "full_signature": "@Override public String[] getParameterNames()", "class_method_signature": "BPolDescriptor.getParameterNames()", "testcase": false, "constructor": false}, {"identifier": "getParameterType", "parameters": "(String name)", "modifiers": "@Override public", "return": "Object", "signature": "Object getParameterType(String name)", "full_signature": "@Override public Object getParameterType(String name)", "class_method_signature": "BPolDescriptor.getParameterType(String name)", "testcase": false, "constructor": false}], "file": "descriptor/qsarmolecular/src/main/java/org/openscience/cdk/qsar/descriptors/molecular/BPolDescriptor.java"}, "focal_method": {"identifier": "BPolDescriptor", "parameters": "()", "modifiers": "public", "return": "", "body": "public BPolDescriptor() {\n        // atomic polarizabilities ordered by atomic number from 1 to 102\n        if (polarizabilities == null) {\n            polarizabilities = new double[]{0, 0.666793, 0.204956, 24.3, 5.6, 3.03, 1.76, 1.1, 0.802, 0.557, 0.3956,\n                    23.6, 10.6, 6.8, 5.38, 3.63, 2.9, 2.18, 1.6411, 43.4, 22.8, 17.8, 14.6, 12.4, 11.6, 9.4, 8.4, 7.5,\n                    6.8, 6.1, 7.1, 8.12, 6.07, 4.31, 3.77, 3.05, 2.4844, 47.3, 27.6, 22.7, 17.9, 15.7, 12.8, 11.4, 9.6,\n                    8.6, 4.8, 7.2, 7.2, 10.2, 7.7, 6.6, 5.5, 5.35, 4.044, 59.6, 39.7, 31.1, 29.6, 28.2, 31.4, 30.1,\n                    28.8, 27.7, 23.5, 25.5, 24.5, 23.6, 22.7, 21.8, 21, 21.9, 16.2, 13.1, 11.1, 9.7, 8.5, 7.6, 6.5,\n                    5.8, 5.7, 7.6, 6.8, 7.4, 6.8, 6, 5.3, 48.7, 38.3, 32.1, 32.1, 25.4, 27.4, 24.8, 24.5, 23.3, 23,\n                    22.7, 20.5, 19.7, 23.8, 18.2, 17.5};\n        }\n    }", "signature": " BPolDescriptor()", "full_signature": "public  BPolDescriptor()", "class_method_signature": "BPolDescriptor.BPolDescriptor()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}