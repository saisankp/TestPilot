{"test_class": {"identifier": "CryptoTest", "superclass": "", "interfaces": "", "fields": [], "file": "restx-common/src/test/java/restx/common/CryptoTest.java"}, "test_case": {"identifier": "testSign", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSign() throws Exception {\n        String signature = Crypto.sign(\"My message to sign\", \"my grain of salt\".getBytes(Charsets.UTF_8.name()));\n\n        assertThat(signature)\n                .isNotNull()\n                .isEqualTo(\"yIDXrtZ71qCfHnUNvlYSS//0YPE=\")\n                .isEqualTo(Crypto.sign(\"My message to sign\", \"my grain of salt\".getBytes(Charsets.UTF_8.name())));\n    }", "signature": "void testSign()", "full_signature": "@Test public void testSign()", "class_method_signature": "CryptoTest.testSign()", "testcase": true, "constructor": false, "invocations": ["sign", "getBytes", "name", "isEqualTo", "isEqualTo", "isNotNull", "assertThat", "sign", "getBytes", "name"]}, "focal_class": {"identifier": "Crypto", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "sign", "parameters": "(String message, byte[] key)", "modifiers": "public static", "return": "String", "signature": "String sign(String message, byte[] key)", "full_signature": "public static String sign(String message, byte[] key)", "class_method_signature": "Crypto.sign(String message, byte[] key)", "testcase": false, "constructor": false}], "file": "restx-common/src/main/java/restx/common/Crypto.java"}, "focal_method": {"identifier": "sign", "parameters": "(String message, byte[] key)", "modifiers": "public static", "return": "String", "body": "public static String sign(String message, byte[] key) {\n        if (key.length == 0) {\n            return message;\n        }\n\n        try {\n            Mac mac = Mac.getInstance(\"HmacSHA1\");\n            SecretKeySpec signingKey = new SecretKeySpec(key, \"HmacSHA1\");\n            mac.init(signingKey);\n            byte[] messageBytes = message.getBytes(Charsets.UTF_8);\n            byte[] result = mac.doFinal(messageBytes);\n            return BaseEncoding.base64().encode(result);\n        } catch (Exception ex) {\n            throw new RuntimeException(ex);\n        }\n    }", "signature": "String sign(String message, byte[] key)", "full_signature": "public static String sign(String message, byte[] key)", "class_method_signature": "Crypto.sign(String message, byte[] key)", "testcase": false, "constructor": false, "invocations": ["getInstance", "init", "getBytes", "doFinal", "encode", "base64"]}, "repository": {"repo_id": 9836833, "url": "https://github.com/restx/restx", "language": "Java", "is_fork": false, "fork_count": 78, "stargazer_count": 433, "size": 7896, "license": "licensed"}}