{"test_class": {"identifier": "LicensesLocatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "android/testSrc/com/android/tools/idea/actions/license/LicensesLocatorTest.java"}, "test_case": {"identifier": "linuxOrWindowsLayout", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void linuxOrWindowsLayout() throws Exception {\n    Path testRoot = Paths.get(AndroidTestBase.getTestDataPath(), \"licenseLocator\");\n    Path ideHome = testRoot.resolve(\"linux\");\n\n    LicensesLocator locator = new LicensesLocator(ideHome, false);\n    List<String> expectedPaths = Arrays.asList(\n      \"LICENSE.txt\",\n      \"NOTICE.txt\",\n      \"license/ant_license.txt\",\n      \"plugins/android/lib/licenses/antlr4-runtime-4.5.3.jar-NOTICE\",\n      \"plugins/android/lib/licenses/asm-5.0.3-NOTICE\"\n    );\n\n    assertThat(relativize(locator.getLicenseFiles(), ideHome)).containsAllIn(expectedPaths);\n  }", "signature": "void linuxOrWindowsLayout()", "full_signature": "@Test public void linuxOrWindowsLayout()", "class_method_signature": "LicensesLocatorTest.linuxOrWindowsLayout()", "testcase": true, "constructor": false, "invocations": ["get", "getTestDataPath", "resolve", "asList", "containsAllIn", "assertThat", "relativize", "getLicenseFiles"]}, "focal_class": {"identifier": "LicensesLocator", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Path myIdeHome;", "modifier": "private final", "type": "Path", "declarator": "myIdeHome", "var_name": "myIdeHome"}, {"original_string": "private final boolean myOnMac;", "modifier": "private final", "type": "boolean", "declarator": "myOnMac", "var_name": "myOnMac"}, {"original_string": "private final List<String> myGooglePlugins = Arrays.asList(\n    \"android\",\n    \"firebase\",\n    \"firebase-testing\",\n    \"google-appindexing\",\n    \"google-cloud-tools\",\n    \"google-cloud-tools-core\",\n    \"google-login\",\n    \"google-services\",\n    \"test-recorder\"\n  );", "modifier": "private final", "type": "List<String>", "declarator": "myGooglePlugins = Arrays.asList(\n    \"android\",\n    \"firebase\",\n    \"firebase-testing\",\n    \"google-appindexing\",\n    \"google-cloud-tools\",\n    \"google-cloud-tools-core\",\n    \"google-login\",\n    \"google-services\",\n    \"test-recorder\"\n  )", "var_name": "myGooglePlugins"}], "methods": [{"identifier": "LicensesLocator", "parameters": "(@NotNull Path ideHome, boolean isMacLayout)", "modifiers": "public", "return": "", "signature": " LicensesLocator(@NotNull Path ideHome, boolean isMacLayout)", "full_signature": "public  LicensesLocator(@NotNull Path ideHome, boolean isMacLayout)", "class_method_signature": "LicensesLocator.LicensesLocator(@NotNull Path ideHome, boolean isMacLayout)", "testcase": false, "constructor": true}, {"identifier": "getLicenseFiles", "parameters": "()", "modifiers": "@NotNull public", "return": "List<Path>", "signature": "List<Path> getLicenseFiles()", "full_signature": "@NotNull public List<Path> getLicenseFiles()", "class_method_signature": "LicensesLocator.getLicenseFiles()", "testcase": false, "constructor": false}, {"identifier": "getIdeLicenseAndNotice", "parameters": "()", "modifiers": "@NotNull private", "return": "List<Path>", "signature": "List<Path> getIdeLicenseAndNotice()", "full_signature": "@NotNull private List<Path> getIdeLicenseAndNotice()", "class_method_signature": "LicensesLocator.getIdeLicenseAndNotice()", "testcase": false, "constructor": false}, {"identifier": "getIdeWideThirdPartyLibLicenses", "parameters": "()", "modifiers": "@NotNull private", "return": "List<Path>", "signature": "List<Path> getIdeWideThirdPartyLibLicenses()", "full_signature": "@NotNull private List<Path> getIdeWideThirdPartyLibLicenses()", "class_method_signature": "LicensesLocator.getIdeWideThirdPartyLibLicenses()", "testcase": false, "constructor": false}, {"identifier": "getThirdPartyLibrariesForPlugin", "parameters": "(@NonNull String plugin)", "modifiers": "@NonNull private", "return": "List<Path>", "signature": "List<Path> getThirdPartyLibrariesForPlugin(@NonNull String plugin)", "full_signature": "@NonNull private List<Path> getThirdPartyLibrariesForPlugin(@NonNull String plugin)", "class_method_signature": "LicensesLocator.getThirdPartyLibrariesForPlugin(@NonNull String plugin)", "testcase": false, "constructor": false}], "file": "android/src/com/android/tools/idea/actions/license/LicensesLocator.java"}, "focal_method": {"identifier": "getLicenseFiles", "parameters": "()", "modifiers": "@NotNull public", "return": "List<Path>", "body": "@NotNull\n  public List<Path> getLicenseFiles() {\n    List<Path> licenses = new ArrayList<>();\n\n    licenses.addAll(getIdeLicenseAndNotice());\n    licenses.addAll(getIdeWideThirdPartyLibLicenses());\n\n    for (String plugin : myGooglePlugins) {\n      licenses.addAll(getThirdPartyLibrariesForPlugin(plugin));\n    }\n\n    return licenses;\n  }", "signature": "List<Path> getLicenseFiles()", "full_signature": "@NotNull public List<Path> getLicenseFiles()", "class_method_signature": "LicensesLocator.getLicenseFiles()", "testcase": false, "constructor": false, "invocations": ["addAll", "getIdeLicenseAndNotice", "addAll", "getIdeWideThirdPartyLibLicenses", "addAll", "getThirdPartyLibrariesForPlugin"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}