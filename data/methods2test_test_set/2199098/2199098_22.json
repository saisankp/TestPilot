{"test_class": {"identifier": "DefaultStringEntityReferenceSerializerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DEFAULT_WIKI = \"xwiki\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_WIKI = \"xwiki\"", "var_name": "DEFAULT_WIKI"}, {"original_string": "private static final String DEFAULT_SPACE = \"XWiki\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_SPACE = \"XWiki\"", "var_name": "DEFAULT_SPACE"}, {"original_string": "private static final String DEFAULT_PAGE = \"WebHome\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_PAGE = \"WebHome\"", "var_name": "DEFAULT_PAGE"}, {"original_string": "private static final String DEFAULT_ATTACHMENT = \"filename\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_ATTACHMENT = \"filename\"", "var_name": "DEFAULT_ATTACHMENT"}, {"original_string": "private static final String DEFAULT_OBJECT = \"Object\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_OBJECT = \"Object\"", "var_name": "DEFAULT_OBJECT"}, {"original_string": "private static final String DEFAULT_OBJECT_PROPERTY = \"Property\";", "modifier": "private static final", "type": "String", "declarator": "DEFAULT_OBJECT_PROPERTY = \"Property\"", "var_name": "DEFAULT_OBJECT_PROPERTY"}, {"original_string": "private EntityReferenceSerializer serializer;", "modifier": "private", "type": "EntityReferenceSerializer", "declarator": "serializer", "var_name": "serializer"}, {"original_string": "private EntityReferenceResolver resolver;", "modifier": "private", "type": "EntityReferenceResolver", "declarator": "resolver", "var_name": "resolver"}, {"original_string": "private Mockery mockery = new Mockery();", "modifier": "private", "type": "Mockery", "declarator": "mockery = new Mockery()", "var_name": "mockery"}, {"original_string": "private ModelConfiguration mockModelConfiguration;", "modifier": "private", "type": "ModelConfiguration", "declarator": "mockModelConfiguration", "var_name": "mockModelConfiguration"}], "file": "xwiki-model-backport/tags/xwiki-core-model-backport-1.0/src/test/java/org/xwiki/model/internal/reference/DefaultStringEntityReferenceSerializerTest.java"}, "test_case": {"identifier": "testSerializeDocumentReference", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSerializeDocumentReference() throws Exception\n    {\n        EntityReference reference = resolver.resolve(\"wiki:space.page\", EntityType.DOCUMENT);\n        Assert.assertEquals(\"wiki:space.page\", serializer.serialize(reference));\n\n        reference = resolver.resolve(\"wiki:space.\", EntityType.DOCUMENT);\n        Assert.assertEquals(\"wiki:space.WebHome\", serializer.serialize(reference));\n\n        reference = resolver.resolve(\"space.\", EntityType.DOCUMENT);\n        Assert.assertEquals(\"xwiki:space.WebHome\", serializer.serialize(reference));\n\n        reference = resolver.resolve(\"page\", EntityType.DOCUMENT);\n        Assert.assertEquals(\"xwiki:XWiki.page\", serializer.serialize(reference));\n\n        reference = resolver.resolve(\".\", EntityType.DOCUMENT);\n        Assert.assertEquals(\"xwiki:XWiki.WebHome\", serializer.serialize(reference));\n\n        reference = resolver.resolve(null, EntityType.DOCUMENT);\n        Assert.assertEquals(\"xwiki:XWiki.WebHome\", serializer.serialize(reference));\n\n        reference = resolver.resolve(\"\", EntityType.DOCUMENT);\n        Assert.assertEquals(\"xwiki:XWiki.WebHome\", serializer.serialize(reference));\n\n        reference = resolver.resolve(\"wiki1.wiki2:wiki3:some.space.page\", EntityType.DOCUMENT);\n        Assert.assertEquals(\"wiki1.wiki2:wiki3:some\\\\.space.page\", serializer.serialize(reference));\n\n        reference = resolver.resolve(\"some.space.page\", EntityType.DOCUMENT);\n        Assert.assertEquals(\"xwiki:some\\\\.space.page\", serializer.serialize(reference));\n\n        reference = resolver.resolve(\"wiki:page\", EntityType.DOCUMENT);\n        Assert.assertEquals(\"xwiki:XWiki.wiki:page\", serializer.serialize(reference));\n\n        // Verify that passing null doesn't throw a NPE\n        Assert.assertNull(serializer.serialize(null));\n        \n        // Test escapes\n\n        reference = resolver.resolve(\"\\\\.:@\\\\.\", EntityType.DOCUMENT);\n        Assert.assertEquals(\"xwiki:XWiki.\\\\.:@\\\\.\", serializer.serialize(reference));\n    }", "signature": "void testSerializeDocumentReference()", "full_signature": "@Test public void testSerializeDocumentReference()", "class_method_signature": "DefaultStringEntityReferenceSerializerTest.testSerializeDocumentReference()", "testcase": true, "constructor": false, "invocations": ["resolve", "assertEquals", "serialize", "resolve", "assertEquals", "serialize", "resolve", "assertEquals", "serialize", "resolve", "assertEquals", "serialize", "resolve", "assertEquals", "serialize", "resolve", "assertEquals", "serialize", "resolve", "assertEquals", "serialize", "resolve", "assertEquals", "serialize", "resolve", "assertEquals", "serialize", "resolve", "assertEquals", "serialize", "assertNull", "serialize", "resolve", "assertEquals", "serialize"]}, "focal_class": {"identifier": "DefaultStringEntityReferenceSerializer", "superclass": "", "interfaces": "implements EntityReferenceSerializer<String>", "fields": [{"original_string": "private Map<EntityType, List<String>> escapes = new HashMap<EntityType, List<String>>() {{\n        put(EntityType.ATTACHMENT, Arrays.asList(\"@\"));\n        put(EntityType.DOCUMENT, Arrays.asList(\".\"));\n        put(EntityType.SPACE, Arrays.asList(\":\", \".\"));\n        put(EntityType.OBJECT, Arrays.asList(\"^\"));\n        put(EntityType.OBJECT_PROPERTY, Arrays.asList(\".\"));        \n    }};", "modifier": "private", "type": "Map<EntityType, List<String>>", "declarator": "escapes = new HashMap<EntityType, List<String>>() {{\n        put(EntityType.ATTACHMENT, Arrays.asList(\"@\"));\n        put(EntityType.DOCUMENT, Arrays.asList(\".\"));\n        put(EntityType.SPACE, Arrays.asList(\":\", \".\"));\n        put(EntityType.OBJECT, Arrays.asList(\"^\"));\n        put(EntityType.OBJECT_PROPERTY, Arrays.asList(\".\"));        \n    }}", "var_name": "escapes"}, {"original_string": "private Map<EntityType, List<String>> replacements = new HashMap<EntityType, List<String>>() {{\n        put(EntityType.ATTACHMENT, Arrays.asList(\"\\\\@\"));\n        put(EntityType.DOCUMENT, Arrays.asList(\"\\\\.\"));\n        put(EntityType.SPACE, Arrays.asList(\"\\\\:\", \"\\\\.\"));\n        put(EntityType.OBJECT, Arrays.asList(\"\\\\^\"));\n        put(EntityType.OBJECT_PROPERTY, Arrays.asList(\"\\\\.\"));        \n    }};", "modifier": "private", "type": "Map<EntityType, List<String>>", "declarator": "replacements = new HashMap<EntityType, List<String>>() {{\n        put(EntityType.ATTACHMENT, Arrays.asList(\"\\\\@\"));\n        put(EntityType.DOCUMENT, Arrays.asList(\"\\\\.\"));\n        put(EntityType.SPACE, Arrays.asList(\"\\\\:\", \"\\\\.\"));\n        put(EntityType.OBJECT, Arrays.asList(\"\\\\^\"));\n        put(EntityType.OBJECT_PROPERTY, Arrays.asList(\"\\\\.\"));        \n    }}", "var_name": "replacements"}], "methods": [{"identifier": "serialize", "parameters": "(EntityReference reference)", "modifiers": "public", "return": "String", "signature": "String serialize(EntityReference reference)", "full_signature": "public String serialize(EntityReference reference)", "class_method_signature": "DefaultStringEntityReferenceSerializer.serialize(EntityReference reference)", "testcase": false, "constructor": false}, {"identifier": "serializeEntityReference", "parameters": "(EntityReference currentReference, StringBuilder representation, \n        boolean isLastReference)", "modifiers": "protected", "return": "void", "signature": "void serializeEntityReference(EntityReference currentReference, StringBuilder representation, \n        boolean isLastReference)", "full_signature": "protected void serializeEntityReference(EntityReference currentReference, StringBuilder representation, \n        boolean isLastReference)", "class_method_signature": "DefaultStringEntityReferenceSerializer.serializeEntityReference(EntityReference currentReference, StringBuilder representation, \n        boolean isLastReference)", "testcase": false, "constructor": false}], "file": "xwiki-model-backport/tags/xwiki-core-model-backport-1.0/src/main/java/org/xwiki/model/internal/reference/DefaultStringEntityReferenceSerializer.java"}, "focal_method": {"identifier": "serialize", "parameters": "(EntityReference reference)", "modifiers": "public", "return": "String", "body": "public String serialize(EntityReference reference)\n    {\n        if (reference == null) {\n            return null;\n        }\n\n        EntityReference currentReference = reference.getRoot();\n        StringBuilder representation = new StringBuilder();\n        // While we still have children and they're not the children of the reference to serialize \n        while (currentReference != null && currentReference != reference.getChild()) {\n            serializeEntityReference(currentReference, representation, currentReference == reference);\n            currentReference = currentReference.getChild();\n        }\n        return representation.toString();\n    }", "signature": "String serialize(EntityReference reference)", "full_signature": "public String serialize(EntityReference reference)", "class_method_signature": "DefaultStringEntityReferenceSerializer.serialize(EntityReference reference)", "testcase": false, "constructor": false, "invocations": ["getRoot", "getChild", "serializeEntityReference", "getChild", "toString"]}, "repository": {"repo_id": 2199098, "url": "https://github.com/xwiki-contrib/sandbox", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 8, "size": 14798, "license": "licensed"}}