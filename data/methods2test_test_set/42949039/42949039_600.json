{"test_class": {"identifier": "StoragePolicyProcessorHelperServiceImplTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    private BusinessObjectDataDaoHelper businessObjectDataDaoHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectDataDaoHelper", "declarator": "businessObjectDataDaoHelper", "var_name": "businessObjectDataDaoHelper"}, {"original_string": "@Mock\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Mock\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Mock\n    private ConfigurationHelper configurationHelper;", "modifier": "@Mock\n    private", "type": "ConfigurationHelper", "declarator": "configurationHelper", "var_name": "configurationHelper"}, {"original_string": "@Mock\n    private JsonHelper jsonHelper;", "modifier": "@Mock\n    private", "type": "JsonHelper", "declarator": "jsonHelper", "var_name": "jsonHelper"}, {"original_string": "@Mock\n    private S3KeyPrefixHelper s3KeyPrefixHelper;", "modifier": "@Mock\n    private", "type": "S3KeyPrefixHelper", "declarator": "s3KeyPrefixHelper", "var_name": "s3KeyPrefixHelper"}, {"original_string": "@Mock\n    private S3Service s3Service;", "modifier": "@Mock\n    private", "type": "S3Service", "declarator": "s3Service", "var_name": "s3Service"}, {"original_string": "@Mock\n    private StorageFileHelper storageFileHelper;", "modifier": "@Mock\n    private", "type": "StorageFileHelper", "declarator": "storageFileHelper", "var_name": "storageFileHelper"}, {"original_string": "@Mock\n    private StorageHelper storageHelper;", "modifier": "@Mock\n    private", "type": "StorageHelper", "declarator": "storageHelper", "var_name": "storageHelper"}, {"original_string": "@Mock\n    private StoragePolicyDaoHelper storagePolicyDaoHelper;", "modifier": "@Mock\n    private", "type": "StoragePolicyDaoHelper", "declarator": "storagePolicyDaoHelper", "var_name": "storagePolicyDaoHelper"}, {"original_string": "@Mock\n    private StoragePolicyHelper storagePolicyHelper;", "modifier": "@Mock\n    private", "type": "StoragePolicyHelper", "declarator": "storagePolicyHelper", "var_name": "storagePolicyHelper"}, {"original_string": "@InjectMocks\n    private StoragePolicyProcessorHelperServiceImpl storagePolicyProcessorHelperServiceImpl;", "modifier": "@InjectMocks\n    private", "type": "StoragePolicyProcessorHelperServiceImpl", "declarator": "storagePolicyProcessorHelperServiceImpl", "var_name": "storagePolicyProcessorHelperServiceImpl"}, {"original_string": "@Mock\n    private StorageUnitDao storageUnitDao;", "modifier": "@Mock\n    private", "type": "StorageUnitDao", "declarator": "storageUnitDao", "var_name": "storageUnitDao"}, {"original_string": "@Mock\n    private StorageUnitDaoHelper storageUnitDaoHelper;", "modifier": "@Mock\n    private", "type": "StorageUnitDaoHelper", "declarator": "storageUnitDaoHelper", "var_name": "storageUnitDaoHelper"}, {"original_string": "@Mock\n    private StorageUnitHelper storageUnitHelper;", "modifier": "@Mock\n    private", "type": "StorageUnitHelper", "declarator": "storageUnitHelper", "var_name": "storageUnitHelper"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/impl/StoragePolicyProcessorHelperServiceImplTest.java"}, "test_case": {"identifier": "testCompleteStoragePolicyTransitionImpl", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCompleteStoragePolicyTransitionImpl()\n    {\n        // Create a business object data key.\n        BusinessObjectDataKey businessObjectDataKey =\n            new BusinessObjectDataKey(BDEF_NAMESPACE, BDEF_NAME, FORMAT_USAGE_CODE, FORMAT_FILE_TYPE_CODE, FORMAT_VERSION, PARTITION_VALUE,\n                NO_SUBPARTITION_VALUES, DATA_VERSION);\n\n        // Create a business object data status entity.\n        BusinessObjectDataStatusEntity businessObjectDataStatusEntity = new BusinessObjectDataStatusEntity();\n        businessObjectDataStatusEntity.setCode(BusinessObjectDataStatusEntity.VALID);\n\n        // Create a business object data entity.\n        BusinessObjectDataEntity businessObjectDataEntity = new BusinessObjectDataEntity();\n        businessObjectDataEntity.setStatus(businessObjectDataStatusEntity);\n\n        // Create a storage unit status entity.\n        StorageUnitStatusEntity storageUnitStatusEntity = new StorageUnitStatusEntity();\n        storageUnitStatusEntity.setCode(StorageUnitStatusEntity.ARCHIVING);\n\n        // Create a storage unit entity.\n        StorageUnitEntity storageUnitEntity = new StorageUnitEntity();\n        storageUnitEntity.setStatus(storageUnitStatusEntity);\n\n        // Create a list of storage files.\n        List<StorageFile> storageFiles = Arrays.asList(new StorageFile(TEST_S3_KEY_PREFIX + \"/\" + LOCAL_FILE, FILE_SIZE_1_KB, ROW_COUNT_1000));\n\n        // Create a storage policy transition parameters DTO.\n        StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto =\n            new StoragePolicyTransitionParamsDto(businessObjectDataKey, STORAGE_NAME, S3_ENDPOINT, S3_BUCKET_NAME, TEST_S3_KEY_PREFIX,\n                StorageUnitStatusEntity.ARCHIVING, StorageUnitStatusEntity.ARCHIVING, storageFiles, S3_OBJECT_TAG_KEY, S3_OBJECT_TAG_VALUE,\n                S3_OBJECT_TAGGER_ROLE_ARN, S3_OBJECT_TAGGER_ROLE_SESSION_NAME);\n\n        // Mock the external calls.\n        when(businessObjectDataDaoHelper.getBusinessObjectDataEntity(businessObjectDataKey)).thenReturn(businessObjectDataEntity);\n        when(storageUnitDaoHelper.getStorageUnitEntity(STORAGE_NAME, businessObjectDataEntity)).thenReturn(storageUnitEntity);\n        doAnswer(new Answer<Void>()\n        {\n            public Void answer(InvocationOnMock invocation)\n            {\n                // Get the new storage unit status.\n                String storageUnitStatus = (String) invocation.getArguments()[1];\n\n                // Create a storage unit status entity for the new storage unit status.\n                StorageUnitStatusEntity storageUnitStatusEntity = new StorageUnitStatusEntity();\n                storageUnitStatusEntity.setCode(storageUnitStatus);\n\n                // Update the storage unit with the new status.\n                StorageUnitEntity storageUnitEntity = (StorageUnitEntity) invocation.getArguments()[0];\n                storageUnitEntity.setStatus(storageUnitStatusEntity);\n\n                return null;\n            }\n        }).when(storageUnitDaoHelper).updateStorageUnitStatus(storageUnitEntity, StorageUnitStatusEntity.ARCHIVED, StorageUnitStatusEntity.ARCHIVED);\n\n        // Call the method under test.\n        storagePolicyProcessorHelperServiceImpl.completeStoragePolicyTransitionImpl(storagePolicyTransitionParamsDto);\n\n        // Verify the external calls.\n        verify(businessObjectDataDaoHelper).getBusinessObjectDataEntity(businessObjectDataKey);\n        verify(businessObjectDataHelper, times(2)).businessObjectDataKeyToString(businessObjectDataKey);\n        verify(storageUnitDaoHelper).getStorageUnitEntity(STORAGE_NAME, businessObjectDataEntity);\n        verify(storageUnitDaoHelper).updateStorageUnitStatus(storageUnitEntity, StorageUnitStatusEntity.ARCHIVED, StorageUnitStatusEntity.ARCHIVED);\n        verifyNoMoreInteractionsHelper();\n\n        // Validate the results.\n        assertEquals(new StoragePolicyTransitionParamsDto(businessObjectDataKey, STORAGE_NAME, S3_ENDPOINT, S3_BUCKET_NAME, TEST_S3_KEY_PREFIX,\n            StorageUnitStatusEntity.ARCHIVED, StorageUnitStatusEntity.ARCHIVING, storageFiles, S3_OBJECT_TAG_KEY, S3_OBJECT_TAG_VALUE,\n            S3_OBJECT_TAGGER_ROLE_ARN, S3_OBJECT_TAGGER_ROLE_SESSION_NAME), storagePolicyTransitionParamsDto);\n    }", "signature": "void testCompleteStoragePolicyTransitionImpl()", "full_signature": "@Test public void testCompleteStoragePolicyTransitionImpl()", "class_method_signature": "StoragePolicyProcessorHelperServiceImplTest.testCompleteStoragePolicyTransitionImpl()", "testcase": true, "constructor": false, "invocations": ["setCode", "setStatus", "setCode", "setStatus", "asList", "thenReturn", "when", "getBusinessObjectDataEntity", "thenReturn", "when", "getStorageUnitEntity", "updateStorageUnitStatus", "when", "doAnswer", "getArguments", "setCode", "getArguments", "setStatus", "completeStoragePolicyTransitionImpl", "getBusinessObjectDataEntity", "verify", "businessObjectDataKeyToString", "verify", "times", "getStorageUnitEntity", "verify", "updateStorageUnitStatus", "verify", "verifyNoMoreInteractionsHelper", "assertEquals"]}, "focal_class": {"identifier": "StoragePolicyProcessorHelperServiceImpl", "superclass": "", "interfaces": "implements StoragePolicyProcessorHelperService", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(StoragePolicyProcessorHelperServiceImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(StoragePolicyProcessorHelperServiceImpl.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private BusinessObjectDataDaoHelper businessObjectDataDaoHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataDaoHelper", "declarator": "businessObjectDataDaoHelper", "var_name": "businessObjectDataDaoHelper"}, {"original_string": "@Autowired\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Autowired\n    private ConfigurationHelper configurationHelper;", "modifier": "@Autowired\n    private", "type": "ConfigurationHelper", "declarator": "configurationHelper", "var_name": "configurationHelper"}, {"original_string": "@Autowired\n    private JsonHelper jsonHelper;", "modifier": "@Autowired\n    private", "type": "JsonHelper", "declarator": "jsonHelper", "var_name": "jsonHelper"}, {"original_string": "@Autowired\n    private S3KeyPrefixHelper s3KeyPrefixHelper;", "modifier": "@Autowired\n    private", "type": "S3KeyPrefixHelper", "declarator": "s3KeyPrefixHelper", "var_name": "s3KeyPrefixHelper"}, {"original_string": "@Autowired\n    private S3Service s3Service;", "modifier": "@Autowired\n    private", "type": "S3Service", "declarator": "s3Service", "var_name": "s3Service"}, {"original_string": "@Autowired\n    private StorageFileHelper storageFileHelper;", "modifier": "@Autowired\n    private", "type": "StorageFileHelper", "declarator": "storageFileHelper", "var_name": "storageFileHelper"}, {"original_string": "@Autowired\n    private StorageHelper storageHelper;", "modifier": "@Autowired\n    private", "type": "StorageHelper", "declarator": "storageHelper", "var_name": "storageHelper"}, {"original_string": "@Autowired\n    private StoragePolicyDaoHelper storagePolicyDaoHelper;", "modifier": "@Autowired\n    private", "type": "StoragePolicyDaoHelper", "declarator": "storagePolicyDaoHelper", "var_name": "storagePolicyDaoHelper"}, {"original_string": "@Autowired\n    private StoragePolicyHelper storagePolicyHelper;", "modifier": "@Autowired\n    private", "type": "StoragePolicyHelper", "declarator": "storagePolicyHelper", "var_name": "storagePolicyHelper"}, {"original_string": "@Autowired\n    private StorageUnitDao storageUnitDao;", "modifier": "@Autowired\n    private", "type": "StorageUnitDao", "declarator": "storageUnitDao", "var_name": "storageUnitDao"}, {"original_string": "@Autowired\n    private StorageUnitDaoHelper storageUnitDaoHelper;", "modifier": "@Autowired\n    private", "type": "StorageUnitDaoHelper", "declarator": "storageUnitDaoHelper", "var_name": "storageUnitDaoHelper"}, {"original_string": "@Autowired\n    private StorageUnitHelper storageUnitHelper;", "modifier": "@Autowired\n    private", "type": "StorageUnitHelper", "declarator": "storageUnitHelper", "var_name": "storageUnitHelper"}], "methods": [{"identifier": "initiateStoragePolicyTransition", "parameters": "(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto,\n        StoragePolicySelection storagePolicySelection)", "modifiers": "@PublishNotificationMessages @Override @Transactional(propagation = Propagation.REQUIRES_NEW) public", "return": "void", "signature": "void initiateStoragePolicyTransition(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto,\n        StoragePolicySelection storagePolicySelection)", "full_signature": "@PublishNotificationMessages @Override @Transactional(propagation = Propagation.REQUIRES_NEW) public void initiateStoragePolicyTransition(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto,\n        StoragePolicySelection storagePolicySelection)", "class_method_signature": "StoragePolicyProcessorHelperServiceImpl.initiateStoragePolicyTransition(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto,\n        StoragePolicySelection storagePolicySelection)", "testcase": false, "constructor": false}, {"identifier": "initiateStoragePolicyTransitionImpl", "parameters": "(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto,\n        StoragePolicySelection storagePolicySelection)", "modifiers": "protected", "return": "void", "signature": "void initiateStoragePolicyTransitionImpl(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto,\n        StoragePolicySelection storagePolicySelection)", "full_signature": "protected void initiateStoragePolicyTransitionImpl(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto,\n        StoragePolicySelection storagePolicySelection)", "class_method_signature": "StoragePolicyProcessorHelperServiceImpl.initiateStoragePolicyTransitionImpl(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto,\n        StoragePolicySelection storagePolicySelection)", "testcase": false, "constructor": false}, {"identifier": "validateStoragePolicySelection", "parameters": "(StoragePolicySelection storagePolicySelection)", "modifiers": "private", "return": "void", "signature": "void validateStoragePolicySelection(StoragePolicySelection storagePolicySelection)", "full_signature": "private void validateStoragePolicySelection(StoragePolicySelection storagePolicySelection)", "class_method_signature": "StoragePolicyProcessorHelperServiceImpl.validateStoragePolicySelection(StoragePolicySelection storagePolicySelection)", "testcase": false, "constructor": false}, {"identifier": "validateBusinessObjectData", "parameters": "(BusinessObjectDataEntity businessObjectDataEntity, BusinessObjectDataKey businessObjectDataKey)", "modifiers": "private", "return": "void", "signature": "void validateBusinessObjectData(BusinessObjectDataEntity businessObjectDataEntity, BusinessObjectDataKey businessObjectDataKey)", "full_signature": "private void validateBusinessObjectData(BusinessObjectDataEntity businessObjectDataEntity, BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "StoragePolicyProcessorHelperServiceImpl.validateBusinessObjectData(BusinessObjectDataEntity businessObjectDataEntity, BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false}, {"identifier": "validateStorage", "parameters": "(StorageEntity storageEntity, StoragePolicyKey storagePolicyKey, Integer storagePolicyVersion)", "modifiers": "private", "return": "void", "signature": "void validateStorage(StorageEntity storageEntity, StoragePolicyKey storagePolicyKey, Integer storagePolicyVersion)", "full_signature": "private void validateStorage(StorageEntity storageEntity, StoragePolicyKey storagePolicyKey, Integer storagePolicyVersion)", "class_method_signature": "StoragePolicyProcessorHelperServiceImpl.validateStorage(StorageEntity storageEntity, StoragePolicyKey storagePolicyKey, Integer storagePolicyVersion)", "testcase": false, "constructor": false}, {"identifier": "validateStorageUnit", "parameters": "(StorageUnitEntity storageUnitEntity, String storageName, BusinessObjectDataKey businessObjectDataKey)", "modifiers": "private", "return": "void", "signature": "void validateStorageUnit(StorageUnitEntity storageUnitEntity, String storageName, BusinessObjectDataKey businessObjectDataKey)", "full_signature": "private void validateStorageUnit(StorageUnitEntity storageUnitEntity, String storageName, BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "StoragePolicyProcessorHelperServiceImpl.validateStorageUnit(StorageUnitEntity storageUnitEntity, String storageName, BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false}, {"identifier": "executeStoragePolicyTransition", "parameters": "(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "modifiers": "@Override @Transactional(propagation = Propagation.NOT_SUPPORTED) public", "return": "void", "signature": "void executeStoragePolicyTransition(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "full_signature": "@Override @Transactional(propagation = Propagation.NOT_SUPPORTED) public void executeStoragePolicyTransition(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "class_method_signature": "StoragePolicyProcessorHelperServiceImpl.executeStoragePolicyTransition(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "testcase": false, "constructor": false}, {"identifier": "executeStoragePolicyTransitionImpl", "parameters": "(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "modifiers": "protected", "return": "void", "signature": "void executeStoragePolicyTransitionImpl(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "full_signature": "protected void executeStoragePolicyTransitionImpl(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "class_method_signature": "StoragePolicyProcessorHelperServiceImpl.executeStoragePolicyTransitionImpl(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "testcase": false, "constructor": false}, {"identifier": "completeStoragePolicyTransition", "parameters": "(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "modifiers": "@PublishNotificationMessages @Override @Transactional(propagation = Propagation.REQUIRES_NEW) public", "return": "void", "signature": "void completeStoragePolicyTransition(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "full_signature": "@PublishNotificationMessages @Override @Transactional(propagation = Propagation.REQUIRES_NEW) public void completeStoragePolicyTransition(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "class_method_signature": "StoragePolicyProcessorHelperServiceImpl.completeStoragePolicyTransition(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "testcase": false, "constructor": false}, {"identifier": "completeStoragePolicyTransitionImpl", "parameters": "(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "modifiers": "protected", "return": "void", "signature": "void completeStoragePolicyTransitionImpl(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "full_signature": "protected void completeStoragePolicyTransitionImpl(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "class_method_signature": "StoragePolicyProcessorHelperServiceImpl.completeStoragePolicyTransitionImpl(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "testcase": false, "constructor": false}, {"identifier": "updateStoragePolicyTransitionFailedAttemptsIgnoreException", "parameters": "(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "modifiers": "@Override @Transactional(propagation = Propagation.REQUIRES_NEW) public", "return": "void", "signature": "void updateStoragePolicyTransitionFailedAttemptsIgnoreException(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "full_signature": "@Override @Transactional(propagation = Propagation.REQUIRES_NEW) public void updateStoragePolicyTransitionFailedAttemptsIgnoreException(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "class_method_signature": "StoragePolicyProcessorHelperServiceImpl.updateStoragePolicyTransitionFailedAttemptsIgnoreException(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "testcase": false, "constructor": false}, {"identifier": "updateStoragePolicyTransitionFailedAttemptsIgnoreExceptionImpl", "parameters": "(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "modifiers": "protected", "return": "void", "signature": "void updateStoragePolicyTransitionFailedAttemptsIgnoreExceptionImpl(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "full_signature": "protected void updateStoragePolicyTransitionFailedAttemptsIgnoreExceptionImpl(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "class_method_signature": "StoragePolicyProcessorHelperServiceImpl.updateStoragePolicyTransitionFailedAttemptsIgnoreExceptionImpl(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/impl/StoragePolicyProcessorHelperServiceImpl.java"}, "focal_method": {"identifier": "completeStoragePolicyTransitionImpl", "parameters": "(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "modifiers": "protected", "return": "void", "body": "protected void completeStoragePolicyTransitionImpl(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)\n    {\n        // Get the business object data key.\n        BusinessObjectDataKey businessObjectDataKey = storagePolicyTransitionParamsDto.getBusinessObjectDataKey();\n\n        // Retrieve the business object data and ensure it exists.\n        BusinessObjectDataEntity businessObjectDataEntity = businessObjectDataDaoHelper.getBusinessObjectDataEntity(businessObjectDataKey);\n\n        // Validate that business object data status is supported by the storage policy feature.\n        String businessObjectDataStatus = businessObjectDataEntity.getStatus().getCode();\n        Assert.isTrue(StoragePolicySelectorServiceImpl.SUPPORTED_BUSINESS_OBJECT_DATA_STATUSES.contains(businessObjectDataStatus), String\n            .format(\"Business object data status \\\"%s\\\" is not supported by the storage policy feature. Business object data: {%s}\", businessObjectDataStatus,\n                businessObjectDataHelper.businessObjectDataKeyToString(businessObjectDataKey)));\n\n        // Retrieve storage unit and ensure it exists.\n        StorageUnitEntity storageUnitEntity =\n            storageUnitDaoHelper.getStorageUnitEntity(storagePolicyTransitionParamsDto.getStorageName(), businessObjectDataEntity);\n\n        // Validate that storage unit status is ARCHIVING.\n        Assert.isTrue(StorageUnitStatusEntity.ARCHIVING.equals(storageUnitEntity.getStatus().getCode()), String\n            .format(\"Storage unit status is \\\"%s\\\", but must be \\\"%s\\\" for storage policy transition to proceed. Storage: {%s}, business object data: {%s}\",\n                storageUnitEntity.getStatus().getCode(), StorageUnitStatusEntity.ARCHIVING, storagePolicyTransitionParamsDto.getStorageName(),\n                businessObjectDataHelper.businessObjectDataKeyToString(businessObjectDataKey)));\n\n        // Change the storage unit status to ARCHIVED.\n        String reason = StorageUnitStatusEntity.ARCHIVED;\n        storagePolicyTransitionParamsDto.setOldStorageUnitStatus(storageUnitEntity.getStatus().getCode());\n        storageUnitDaoHelper.updateStorageUnitStatus(storageUnitEntity, StorageUnitStatusEntity.ARCHIVED, reason);\n        storagePolicyTransitionParamsDto.setNewStorageUnitStatus(storageUnitEntity.getStatus().getCode());\n    }", "signature": "void completeStoragePolicyTransitionImpl(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "full_signature": "protected void completeStoragePolicyTransitionImpl(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "class_method_signature": "StoragePolicyProcessorHelperServiceImpl.completeStoragePolicyTransitionImpl(StoragePolicyTransitionParamsDto storagePolicyTransitionParamsDto)", "testcase": false, "constructor": false, "invocations": ["getBusinessObjectDataKey", "getBusinessObjectDataEntity", "getCode", "getStatus", "isTrue", "contains", "format", "businessObjectDataKeyToString", "getStorageUnitEntity", "getStorageName", "isTrue", "equals", "getCode", "getStatus", "format", "getCode", "getStatus", "getStorageName", "businessObjectDataKeyToString", "setOldStorageUnitStatus", "getCode", "getStatus", "updateStorageUnitStatus", "setNewStorageUnitStatus", "getCode", "getStatus"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}