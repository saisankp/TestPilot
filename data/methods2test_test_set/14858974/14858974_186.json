{"test_class": {"identifier": "DataBaseCheckTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/src/test/java/org/axway/grapes/server/webapp/healthcheck/DataBaseCheckTest.java"}, "test_case": {"identifier": "checkUnhealthy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void checkUnhealthy() {\n\t\tDataBaseConfig dataBaseConfig = mock(DataBaseConfig.class);\n\t\twhen(dataBaseConfig.getHost()).thenReturn(\"localhost\");\n\t\twhen(dataBaseConfig.getPort()).thenReturn(8074);\n\t\t\n\t\tDataBaseCheck dbCheck = new DataBaseCheck(dataBaseConfig);\n\t\tResult result = dbCheck.check();\n\t\t\n\t\tassertNotNull(result);\n\t\tassertFalse(result.isHealthy());\n\t\t\n\t}", "signature": "void checkUnhealthy()", "full_signature": "@Test public void checkUnhealthy()", "class_method_signature": "DataBaseCheckTest.checkUnhealthy()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getHost", "thenReturn", "when", "getPort", "check", "assertNotNull", "assertFalse", "isHealthy"]}, "focal_class": {"identifier": "DataBaseCheck", "superclass": "extends HealthCheck", "interfaces": "", "fields": [{"original_string": "private final DataBaseConfig config;", "modifier": "private final", "type": "DataBaseConfig", "declarator": "config", "var_name": "config"}], "methods": [{"identifier": "DataBaseCheck", "parameters": "(final DataBaseConfig dataBaseConfig)", "modifiers": "public", "return": "", "signature": " DataBaseCheck(final DataBaseConfig dataBaseConfig)", "full_signature": "public  DataBaseCheck(final DataBaseConfig dataBaseConfig)", "class_method_signature": "DataBaseCheck.DataBaseCheck(final DataBaseConfig dataBaseConfig)", "testcase": false, "constructor": true}, {"identifier": "check", "parameters": "()", "modifiers": "@Override protected", "return": "Result", "signature": "Result check()", "full_signature": "@Override protected Result check()", "class_method_signature": "DataBaseCheck.check()", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/axway/grapes/server/webapp/healthcheck/DataBaseCheck.java"}, "focal_method": {"identifier": "check", "parameters": "()", "modifiers": "@Override protected", "return": "Result", "body": "@Override\n\tprotected Result check() {\t\n        Mongo mongo = null;\n        \n\t\ttry{\n\t\t\tfinal ServerAddress adress = new ServerAddress(config.getHost() , config.getPort());\n            mongo = new MongoClient(adress);\n\n            final StringBuilder sb = new StringBuilder();\n            sb.append(\"MogoDb version \" + mongo.getVersion() + '\\n');\n\n            sb.append(\"  Available databases: \");\n            for(final String dbName: mongo.getDatabaseNames()){\n                sb.append(dbName);\n                sb.append(' ');\n            }\n            sb.append('\\n');\n\n            return Result.healthy(sb.toString());\n\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\treturn Result.unhealthy(e);\n\t\t}\n        finally{\n            if(mongo != null){\n                mongo.close();\n            }\n        }\n\t}", "signature": "Result check()", "full_signature": "@Override protected Result check()", "class_method_signature": "DataBaseCheck.check()", "testcase": false, "constructor": false, "invocations": ["getHost", "getPort", "append", "getVersion", "append", "getDatabaseNames", "append", "append", "append", "healthy", "toString", "unhealthy", "close"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}