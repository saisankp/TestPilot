{"test_class": {"identifier": "PasswordExpiringControlTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/ldaptive/control/PasswordExpiringControlTest.java"}, "test_case": {"identifier": "decode", "parameters": "(final DERBuffer berValue, final PasswordExpiringControl expected)", "modifiers": "@Test(groups = \"control\", dataProvider = \"response\") public", "return": "void", "body": "@Test(groups = \"control\", dataProvider = \"response\")\n  public void decode(final DERBuffer berValue, final PasswordExpiringControl expected)\n    throws Exception\n  {\n    final PasswordExpiringControl actual = new PasswordExpiringControl(expected.getCriticality());\n    actual.decode(berValue);\n    Assert.assertEquals(actual, expected);\n  }", "signature": "void decode(final DERBuffer berValue, final PasswordExpiringControl expected)", "full_signature": "@Test(groups = \"control\", dataProvider = \"response\") public void decode(final DERBuffer berValue, final PasswordExpiringControl expected)", "class_method_signature": "PasswordExpiringControlTest.decode(final DERBuffer berValue, final PasswordExpiringControl expected)", "testcase": true, "constructor": false, "invocations": ["getCriticality", "decode", "assertEquals"]}, "focal_class": {"identifier": "PasswordExpiringControl", "superclass": "extends AbstractControl", "interfaces": "implements ResponseControl", "fields": [{"original_string": "public static final String OID = \"2.16.840.1.113730.3.4.5\";", "modifier": "public static final", "type": "String", "declarator": "OID = \"2.16.840.1.113730.3.4.5\"", "var_name": "OID"}, {"original_string": "private static final int HASH_CODE_SEED = 797;", "modifier": "private static final", "type": "int", "declarator": "HASH_CODE_SEED = 797", "var_name": "HASH_CODE_SEED"}, {"original_string": "private int timeBeforeExpiration;", "modifier": "private", "type": "int", "declarator": "timeBeforeExpiration", "var_name": "timeBeforeExpiration"}], "methods": [{"identifier": "PasswordExpiringControl", "parameters": "()", "modifiers": "public", "return": "", "signature": " PasswordExpiringControl()", "full_signature": "public  PasswordExpiringControl()", "class_method_signature": "PasswordExpiringControl.PasswordExpiringControl()", "testcase": false, "constructor": true}, {"identifier": "PasswordExpiringControl", "parameters": "(final boolean critical)", "modifiers": "public", "return": "", "signature": " PasswordExpiringControl(final boolean critical)", "full_signature": "public  PasswordExpiringControl(final boolean critical)", "class_method_signature": "PasswordExpiringControl.PasswordExpiringControl(final boolean critical)", "testcase": false, "constructor": true}, {"identifier": "PasswordExpiringControl", "parameters": "(final int time)", "modifiers": "public", "return": "", "signature": " PasswordExpiringControl(final int time)", "full_signature": "public  PasswordExpiringControl(final int time)", "class_method_signature": "PasswordExpiringControl.PasswordExpiringControl(final int time)", "testcase": false, "constructor": true}, {"identifier": "PasswordExpiringControl", "parameters": "(final int time, final boolean critical)", "modifiers": "public", "return": "", "signature": " PasswordExpiringControl(final int time, final boolean critical)", "full_signature": "public  PasswordExpiringControl(final int time, final boolean critical)", "class_method_signature": "PasswordExpiringControl.PasswordExpiringControl(final int time, final boolean critical)", "testcase": false, "constructor": true}, {"identifier": "getTimeBeforeExpiration", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getTimeBeforeExpiration()", "full_signature": "public int getTimeBeforeExpiration()", "class_method_signature": "PasswordExpiringControl.getTimeBeforeExpiration()", "testcase": false, "constructor": false}, {"identifier": "setTimeBeforeExpiration", "parameters": "(final int time)", "modifiers": "public", "return": "void", "signature": "void setTimeBeforeExpiration(final int time)", "full_signature": "public void setTimeBeforeExpiration(final int time)", "class_method_signature": "PasswordExpiringControl.setTimeBeforeExpiration(final int time)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "PasswordExpiringControl.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PasswordExpiringControl.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PasswordExpiringControl.toString()", "testcase": false, "constructor": false}, {"identifier": "decode", "parameters": "(final DERBuffer encoded)", "modifiers": "@Override public", "return": "void", "signature": "void decode(final DERBuffer encoded)", "full_signature": "@Override public void decode(final DERBuffer encoded)", "class_method_signature": "PasswordExpiringControl.decode(final DERBuffer encoded)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/ldaptive/control/PasswordExpiringControl.java"}, "focal_method": {"identifier": "decode", "parameters": "(final DERBuffer encoded)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void decode(final DERBuffer encoded)\n  {\n    final String time = OctetStringType.decode(encoded);\n    setTimeBeforeExpiration(Integer.valueOf(time));\n  }", "signature": "void decode(final DERBuffer encoded)", "full_signature": "@Override public void decode(final DERBuffer encoded)", "class_method_signature": "PasswordExpiringControl.decode(final DERBuffer encoded)", "testcase": false, "constructor": false, "invocations": ["decode", "setTimeBeforeExpiration", "valueOf"]}, "repository": {"repo_id": 25927306, "url": "https://github.com/vt-middleware/ldaptive", "stars": 32, "created": "10/29/2014 3:27:31 PM +00:00", "updates": "2020-01-14T22:18:12+00:00", "fork": "False", "license": "licensed"}}