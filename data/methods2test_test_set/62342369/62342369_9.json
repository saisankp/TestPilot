{"test_class": {"identifier": "FunctionRunnerTest", "superclass": "", "interfaces": "", "fields": [], "file": "step-functions/step-functions-client/src/test/java/step/functions/runner/FunctionRunnerTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test() throws IOException {\n\t\tTestFunction f = new TestFunction();\n\t\tf.setId(new ObjectId());\n\t\tMap<String, String> attributes = new HashMap<>();\n\t\tattributes.put(AbstractOrganizableObject.NAME, \"moustache\");\n\t\tf.setAttributes(attributes);\n\t\t\n\t\ttry(Context context = FunctionRunner.getContext(new TestFunctionType())) {\n\t\t\tOutput<JsonObject> o = context.run(f, \"{}\");\n\t\t\tAssert.assertEquals(\"tache\", o.getPayload().getString(\"mous\"));\n\t\t}\n\t}", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "FunctionRunnerTest.test()", "testcase": true, "constructor": false, "invocations": ["setId", "put", "setAttributes", "getContext", "run", "assertEquals", "getString", "getPayload"]}, "focal_class": {"identifier": "FunctionRunner", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getContext", "parameters": "(AbstractFunctionType<?> functionType)", "modifiers": "public static", "return": "Context", "signature": "Context getContext(AbstractFunctionType<?> functionType)", "full_signature": "public static Context getContext(AbstractFunctionType<?> functionType)", "class_method_signature": "FunctionRunner.getContext(AbstractFunctionType<?> functionType)", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "(AbstractFunctionType<?> functionType, Map<String, String> properties)", "modifiers": "public static", "return": "Context", "signature": "Context getContext(AbstractFunctionType<?> functionType, Map<String, String> properties)", "full_signature": "public static Context getContext(AbstractFunctionType<?> functionType, Map<String, String> properties)", "class_method_signature": "FunctionRunner.getContext(AbstractFunctionType<?> functionType, Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "getContext", "parameters": "(Configuration configuration,AbstractFunctionType<?> functionType, Map<String, String> properties)", "modifiers": "public static", "return": "Context", "signature": "Context getContext(Configuration configuration,AbstractFunctionType<?> functionType, Map<String, String> properties)", "full_signature": "public static Context getContext(Configuration configuration,AbstractFunctionType<?> functionType, Map<String, String> properties)", "class_method_signature": "FunctionRunner.getContext(Configuration configuration,AbstractFunctionType<?> functionType, Map<String, String> properties)", "testcase": false, "constructor": false}], "file": "step-functions/step-functions-client/src/main/java/step/functions/runner/FunctionRunner.java"}, "focal_method": {"identifier": "getContext", "parameters": "(AbstractFunctionType<?> functionType)", "modifiers": "public static", "return": "Context", "body": "public static Context getContext(AbstractFunctionType<?> functionType) {\n\t\treturn new Context(new Configuration(),functionType, new HashMap<>());\n\t}", "signature": "Context getContext(AbstractFunctionType<?> functionType)", "full_signature": "public static Context getContext(AbstractFunctionType<?> functionType)", "class_method_signature": "FunctionRunner.getContext(AbstractFunctionType<?> functionType)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 62342369, "url": "https://github.com/exense/step", "stars": 12, "created": "6/30/2016 9:08:29 PM +00:00", "updates": "2020-01-24T17:13:24+00:00", "fork": "False", "license": "licensed"}}