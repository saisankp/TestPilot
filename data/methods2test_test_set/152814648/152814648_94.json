{"test_class": {"identifier": "StaticAnalysisLabelProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String ID = \"id\";", "modifier": "private static final", "type": "String", "declarator": "ID = \"id\"", "var_name": "ID"}, {"original_string": "private static final String NAME = \"name\";", "modifier": "private static final", "type": "String", "declarator": "NAME = \"name\"", "var_name": "NAME"}, {"original_string": "private static final String OTHER_NAME = \"other\";", "modifier": "private static final", "type": "String", "declarator": "OTHER_NAME = \"other\"", "var_name": "OTHER_NAME"}], "file": "plugin/src/test/java/io/jenkins/plugins/analysis/core/model/StaticAnalysisLabelProviderTest.java"}, "test_case": {"identifier": "shouldReturnIdAndDefaultNameIfNoNameIsGiven", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldReturnIdAndDefaultNameIfNoNameIsGiven() {\n        StaticAnalysisLabelProvider emptyNameLabelProvider = new StaticAnalysisLabelProvider(ID, \"\");\n\n        assertThat(emptyNameLabelProvider).hasId(ID);\n        assertThat(emptyNameLabelProvider).hasName(emptyNameLabelProvider.getDefaultName());\n\n        StaticAnalysisLabelProvider nullNameLabelProvider = new StaticAnalysisLabelProvider(ID, null);\n\n        assertThat(nullNameLabelProvider).hasId(ID);\n        assertThat(nullNameLabelProvider).hasName(nullNameLabelProvider.getDefaultName());\n\n        StaticAnalysisLabelProvider noNameLabelProvider = new StaticAnalysisLabelProvider(ID);\n\n        assertThat(noNameLabelProvider).hasId(ID);\n        assertThat(noNameLabelProvider).hasName(noNameLabelProvider.getDefaultName());\n    }", "signature": "void shouldReturnIdAndDefaultNameIfNoNameIsGiven()", "full_signature": "@Test void shouldReturnIdAndDefaultNameIfNoNameIsGiven()", "class_method_signature": "StaticAnalysisLabelProviderTest.shouldReturnIdAndDefaultNameIfNoNameIsGiven()", "testcase": true, "constructor": false, "invocations": ["hasId", "assertThat", "hasName", "assertThat", "getDefaultName", "hasId", "assertThat", "hasName", "assertThat", "getDefaultName", "hasId", "assertThat", "hasName", "assertThat", "getDefaultName"]}, "focal_class": {"identifier": "StaticAnalysisLabelProvider", "superclass": "", "interfaces": "implements DescriptionProvider", "fields": [{"original_string": "private static final Sanitizer SANITIZER = new Sanitizer();", "modifier": "private static final", "type": "Sanitizer", "declarator": "SANITIZER = new Sanitizer()", "var_name": "SANITIZER"}, {"original_string": "private static final String ICONS_PREFIX = \"/plugin/warnings-ng/icons/\";", "modifier": "private static final", "type": "String", "declarator": "ICONS_PREFIX = \"/plugin/warnings-ng/icons/\"", "var_name": "ICONS_PREFIX"}, {"original_string": "private static final String SMALL_ICON_URL = ICONS_PREFIX + \"analysis-24x24.png\";", "modifier": "private static final", "type": "String", "declarator": "SMALL_ICON_URL = ICONS_PREFIX + \"analysis-24x24.png\"", "var_name": "SMALL_ICON_URL"}, {"original_string": "private static final String LARGE_ICON_URL = ICONS_PREFIX + \"analysis-48x48.png\";", "modifier": "private static final", "type": "String", "declarator": "LARGE_ICON_URL = ICONS_PREFIX + \"analysis-48x48.png\"", "var_name": "LARGE_ICON_URL"}, {"original_string": "@VisibleForTesting\n    static final String ERROR_ICON = \"exclamation-triangle\";", "modifier": "@VisibleForTesting\n    static final", "type": "String", "declarator": "ERROR_ICON = \"exclamation-triangle\"", "var_name": "ERROR_ICON"}, {"original_string": "@VisibleForTesting\n    static final String INFO_ICON = \"info-circle\";", "modifier": "@VisibleForTesting\n    static final", "type": "String", "declarator": "INFO_ICON = \"info-circle\"", "var_name": "INFO_ICON"}, {"original_string": "private final String id;", "modifier": "private final", "type": "String", "declarator": "id", "var_name": "id"}, {"original_string": "@CheckForNull\n    private String name;", "modifier": "@CheckForNull\n    private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final JenkinsFacade jenkins;", "modifier": "private final", "type": "JenkinsFacade", "declarator": "jenkins", "var_name": "jenkins"}], "methods": [{"identifier": "StaticAnalysisLabelProvider", "parameters": "(final String id)", "modifiers": "public", "return": "", "signature": " StaticAnalysisLabelProvider(final String id)", "full_signature": "public  StaticAnalysisLabelProvider(final String id)", "class_method_signature": "StaticAnalysisLabelProvider.StaticAnalysisLabelProvider(final String id)", "testcase": false, "constructor": true}, {"identifier": "StaticAnalysisLabelProvider", "parameters": "(final String id, @CheckForNull final String name)", "modifiers": "public", "return": "", "signature": " StaticAnalysisLabelProvider(final String id, @CheckForNull final String name)", "full_signature": "public  StaticAnalysisLabelProvider(final String id, @CheckForNull final String name)", "class_method_signature": "StaticAnalysisLabelProvider.StaticAnalysisLabelProvider(final String id, @CheckForNull final String name)", "testcase": false, "constructor": true}, {"identifier": "StaticAnalysisLabelProvider", "parameters": "(final String id, @CheckForNull final String name, final JenkinsFacade jenkins)", "modifiers": "@VisibleForTesting", "return": "", "signature": " StaticAnalysisLabelProvider(final String id, @CheckForNull final String name, final JenkinsFacade jenkins)", "full_signature": "@VisibleForTesting  StaticAnalysisLabelProvider(final String id, @CheckForNull final String name, final JenkinsFacade jenkins)", "class_method_signature": "StaticAnalysisLabelProvider.StaticAnalysisLabelProvider(final String id, @CheckForNull final String name, final JenkinsFacade jenkins)", "testcase": false, "constructor": true}, {"identifier": "getIssuesModel", "parameters": "(final Run<?, ?> build, final String url, final Report report)", "modifiers": "public", "return": "DetailsTableModel", "signature": "DetailsTableModel getIssuesModel(final Run<?, ?> build, final String url, final Report report)", "full_signature": "public DetailsTableModel getIssuesModel(final Run<?, ?> build, final String url, final Report report)", "class_method_signature": "StaticAnalysisLabelProvider.getIssuesModel(final Run<?, ?> build, final String url, final Report report)", "testcase": false, "constructor": false}, {"identifier": "getAgeBuilder", "parameters": "(final Run<?, ?> owner, final String url)", "modifiers": "protected", "return": "DefaultAgeBuilder", "signature": "DefaultAgeBuilder getAgeBuilder(final Run<?, ?> owner, final String url)", "full_signature": "protected DefaultAgeBuilder getAgeBuilder(final Run<?, ?> owner, final String url)", "class_method_signature": "StaticAnalysisLabelProvider.getAgeBuilder(final Run<?, ?> owner, final String url)", "testcase": false, "constructor": false}, {"identifier": "getFileNameRenderer", "parameters": "(final Run<?, ?> owner)", "modifiers": "protected", "return": "FileNameRenderer", "signature": "FileNameRenderer getFileNameRenderer(final Run<?, ?> owner)", "full_signature": "protected FileNameRenderer getFileNameRenderer(final Run<?, ?> owner)", "class_method_signature": "StaticAnalysisLabelProvider.getFileNameRenderer(final Run<?, ?> owner)", "testcase": false, "constructor": false}, {"identifier": "getDefaultName", "parameters": "()", "modifiers": "@VisibleForTesting", "return": "String", "signature": "String getDefaultName()", "full_signature": "@VisibleForTesting String getDefaultName()", "class_method_signature": "StaticAnalysisLabelProvider.getDefaultName()", "testcase": false, "constructor": false}, {"identifier": "getId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getId()", "full_signature": "public String getId()", "class_method_signature": "StaticAnalysisLabelProvider.getId()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "StaticAnalysisLabelProvider.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(@CheckForNull final String name)", "modifiers": "public", "return": "StaticAnalysisLabelProvider", "signature": "StaticAnalysisLabelProvider setName(@CheckForNull final String name)", "full_signature": "public StaticAnalysisLabelProvider setName(@CheckForNull final String name)", "class_method_signature": "StaticAnalysisLabelProvider.setName(@CheckForNull final String name)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "StaticAnalysisLabelProvider.toString()", "testcase": false, "constructor": false}, {"identifier": "getLinkName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLinkName()", "full_signature": "public String getLinkName()", "class_method_signature": "StaticAnalysisLabelProvider.getLinkName()", "testcase": false, "constructor": false}, {"identifier": "getTrendName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTrendName()", "full_signature": "public String getTrendName()", "class_method_signature": "StaticAnalysisLabelProvider.getTrendName()", "testcase": false, "constructor": false}, {"identifier": "getSmallIconUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSmallIconUrl()", "full_signature": "public String getSmallIconUrl()", "class_method_signature": "StaticAnalysisLabelProvider.getSmallIconUrl()", "testcase": false, "constructor": false}, {"identifier": "getLargeIconUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLargeIconUrl()", "full_signature": "public String getLargeIconUrl()", "class_method_signature": "StaticAnalysisLabelProvider.getLargeIconUrl()", "testcase": false, "constructor": false}, {"identifier": "getTitle", "parameters": "(final AnalysisResult result, final boolean hasErrors)", "modifiers": "public", "return": "ContainerTag", "signature": "ContainerTag getTitle(final AnalysisResult result, final boolean hasErrors)", "full_signature": "public ContainerTag getTitle(final AnalysisResult result, final boolean hasErrors)", "class_method_signature": "StaticAnalysisLabelProvider.getTitle(final AnalysisResult result, final boolean hasErrors)", "testcase": false, "constructor": false}, {"identifier": "getNewIssuesLabel", "parameters": "(final int newSize)", "modifiers": "public", "return": "ContainerTag", "signature": "ContainerTag getNewIssuesLabel(final int newSize)", "full_signature": "public ContainerTag getNewIssuesLabel(final int newSize)", "class_method_signature": "StaticAnalysisLabelProvider.getNewIssuesLabel(final int newSize)", "testcase": false, "constructor": false}, {"identifier": "getFixedIssuesLabel", "parameters": "(final int fixedSize)", "modifiers": "public", "return": "ContainerTag", "signature": "ContainerTag getFixedIssuesLabel(final int fixedSize)", "full_signature": "public ContainerTag getFixedIssuesLabel(final int fixedSize)", "class_method_signature": "StaticAnalysisLabelProvider.getFixedIssuesLabel(final int fixedSize)", "testcase": false, "constructor": false}, {"identifier": "getNoIssuesSinceLabel", "parameters": "(final int currentBuild, final int noIssuesSinceBuild)", "modifiers": "public", "return": "DomContent", "signature": "DomContent getNoIssuesSinceLabel(final int currentBuild, final int noIssuesSinceBuild)", "full_signature": "public DomContent getNoIssuesSinceLabel(final int currentBuild, final int noIssuesSinceBuild)", "class_method_signature": "StaticAnalysisLabelProvider.getNoIssuesSinceLabel(final int currentBuild, final int noIssuesSinceBuild)", "testcase": false, "constructor": false}, {"identifier": "getWarningsCount", "parameters": "(final AnalysisResult analysisRun)", "modifiers": "@SuppressWarnings(\"PMD.AvoidLiteralsInIfCondition\") private", "return": "Object", "signature": "Object getWarningsCount(final AnalysisResult analysisRun)", "full_signature": "@SuppressWarnings(\"PMD.AvoidLiteralsInIfCondition\") private Object getWarningsCount(final AnalysisResult analysisRun)", "class_method_signature": "StaticAnalysisLabelProvider.getWarningsCount(final AnalysisResult analysisRun)", "testcase": false, "constructor": false}, {"identifier": "linkToIssues", "parameters": "(final String linkText)", "modifiers": "private", "return": "ContainerTag", "signature": "ContainerTag linkToIssues(final String linkText)", "full_signature": "private ContainerTag linkToIssues(final String linkText)", "class_method_signature": "StaticAnalysisLabelProvider.linkToIssues(final String linkText)", "testcase": false, "constructor": false}, {"identifier": "getQualityGateResult", "parameters": "(final QualityGateStatus qualityGateStatus)", "modifiers": "public", "return": "DomContent", "signature": "DomContent getQualityGateResult(final QualityGateStatus qualityGateStatus)", "full_signature": "public DomContent getQualityGateResult(final QualityGateStatus qualityGateStatus)", "class_method_signature": "StaticAnalysisLabelProvider.getQualityGateResult(final QualityGateStatus qualityGateStatus)", "testcase": false, "constructor": false}, {"identifier": "getQualityGateResult", "parameters": "(final QualityGateStatus qualityGateStatus, final boolean hasResetLink)", "modifiers": "public", "return": "DomContent", "signature": "DomContent getQualityGateResult(final QualityGateStatus qualityGateStatus, final boolean hasResetLink)", "full_signature": "public DomContent getQualityGateResult(final QualityGateStatus qualityGateStatus, final boolean hasResetLink)", "class_method_signature": "StaticAnalysisLabelProvider.getQualityGateResult(final QualityGateStatus qualityGateStatus, final boolean hasResetLink)", "testcase": false, "constructor": false}, {"identifier": "getReferenceBuild", "parameters": "(final Run<?, ?> referenceBuild)", "modifiers": "public", "return": "DomContent", "signature": "DomContent getReferenceBuild(final Run<?, ?> referenceBuild)", "full_signature": "public DomContent getReferenceBuild(final Run<?, ?> referenceBuild)", "class_method_signature": "StaticAnalysisLabelProvider.getReferenceBuild(final Run<?, ?> referenceBuild)", "testcase": false, "constructor": false}, {"identifier": "createReferenceBuildLink", "parameters": "(final Run<?, ?> referenceBuild)", "modifiers": "private", "return": "ContainerTag", "signature": "ContainerTag createReferenceBuildLink(final Run<?, ?> referenceBuild)", "full_signature": "private ContainerTag createReferenceBuildLink(final Run<?, ?> referenceBuild)", "class_method_signature": "StaticAnalysisLabelProvider.createReferenceBuildLink(final Run<?, ?> referenceBuild)", "testcase": false, "constructor": false}, {"identifier": "getResultIcon", "parameters": "(final QualityGateStatus qualityGateStatus)", "modifiers": "private", "return": "UnescapedText", "signature": "UnescapedText getResultIcon(final QualityGateStatus qualityGateStatus)", "full_signature": "private UnescapedText getResultIcon(final QualityGateStatus qualityGateStatus)", "class_method_signature": "StaticAnalysisLabelProvider.getResultIcon(final QualityGateStatus qualityGateStatus)", "testcase": false, "constructor": false}, {"identifier": "getToolTip", "parameters": "(final int numberOfItems)", "modifiers": "public", "return": "String", "signature": "String getToolTip(final int numberOfItems)", "full_signature": "public String getToolTip(final int numberOfItems)", "class_method_signature": "StaticAnalysisLabelProvider.getToolTip(final int numberOfItems)", "testcase": false, "constructor": false}, {"identifier": "getToolTipLocalizable", "parameters": "(final int numberOfItems)", "modifiers": "", "return": "Localizable", "signature": "Localizable getToolTipLocalizable(final int numberOfItems)", "full_signature": " Localizable getToolTipLocalizable(final int numberOfItems)", "class_method_signature": "StaticAnalysisLabelProvider.getToolTipLocalizable(final int numberOfItems)", "testcase": false, "constructor": false}, {"identifier": "createToolTipSuffix", "parameters": "(final int numberOfItems)", "modifiers": "@SuppressWarnings(\"PMD.AvoidLiteralsInIfCondition\") private", "return": "Localizable", "signature": "Localizable createToolTipSuffix(final int numberOfItems)", "full_signature": "@SuppressWarnings(\"PMD.AvoidLiteralsInIfCondition\") private Localizable createToolTipSuffix(final int numberOfItems)", "class_method_signature": "StaticAnalysisLabelProvider.createToolTipSuffix(final int numberOfItems)", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "(final Issue issue)", "modifiers": "@Override public", "return": "String", "signature": "String getDescription(final Issue issue)", "full_signature": "@Override public String getDescription(final Issue issue)", "class_method_signature": "StaticAnalysisLabelProvider.getDescription(final Issue issue)", "testcase": false, "constructor": false}, {"identifier": "getSourceCodeDescription", "parameters": "(final Run<?, ?> build, final Issue issue)", "modifiers": "public", "return": "String", "signature": "String getSourceCodeDescription(final Run<?, ?> build, final Issue issue)", "full_signature": "public String getSourceCodeDescription(final Run<?, ?> build, final Issue issue)", "class_method_signature": "StaticAnalysisLabelProvider.getSourceCodeDescription(final Run<?, ?> build, final Issue issue)", "testcase": false, "constructor": false}], "file": "plugin/src/main/java/io/jenkins/plugins/analysis/core/model/StaticAnalysisLabelProvider.java"}, "focal_method": {"identifier": "getDefaultName", "parameters": "()", "modifiers": "@VisibleForTesting", "return": "String", "body": "@VisibleForTesting\n    String getDefaultName() {\n        return Messages.Tool_Default_Name();\n    }", "signature": "String getDefaultName()", "full_signature": "@VisibleForTesting String getDefaultName()", "class_method_signature": "StaticAnalysisLabelProvider.getDefaultName()", "testcase": false, "constructor": false, "invocations": ["Tool_Default_Name"]}, "repository": {"repo_id": 152814648, "url": "https://github.com/jenkinsci/warnings-ng-plugin", "stars": 158, "created": "10/12/2018 10:41:36 PM +00:00", "updates": "2020-01-27T14:00:03+00:00", "fork": "False", "license": "licensed"}}