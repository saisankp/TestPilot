{"test_class": {"identifier": "KeenClientTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static KeenProject TEST_PROJECT;", "modifier": "private static", "type": "KeenProject", "declarator": "TEST_PROJECT", "var_name": "TEST_PROJECT"}, {"original_string": "private static List<Map<String, Object>> TEST_EVENTS;", "modifier": "private static", "type": "List<Map<String, Object>>", "declarator": "TEST_EVENTS", "var_name": "TEST_EVENTS"}, {"original_string": "private static final String TEST_COLLECTION = \"test_collection\";", "modifier": "private static final", "type": "String", "declarator": "TEST_COLLECTION = \"test_collection\"", "var_name": "TEST_COLLECTION"}, {"original_string": "private static final String TEST_COLLECTION_2 = \"test_collection_2\";", "modifier": "private static final", "type": "String", "declarator": "TEST_COLLECTION_2 = \"test_collection_2\"", "var_name": "TEST_COLLECTION_2"}, {"original_string": "private static final String POST_EVENT_SUCCESS = \"{\\\"created\\\": true}\";", "modifier": "private static final", "type": "String", "declarator": "POST_EVENT_SUCCESS = \"{\\\"created\\\": true}\"", "var_name": "POST_EVENT_SUCCESS"}, {"original_string": "private static ObjectMapper JSON_MAPPER;", "modifier": "private static", "type": "ObjectMapper", "declarator": "JSON_MAPPER", "var_name": "JSON_MAPPER"}, {"original_string": "private KeenClient client;", "modifier": "private", "type": "KeenClient", "declarator": "client", "var_name": "client"}, {"original_string": "private HttpHandler mockHttpHandler;", "modifier": "private", "type": "HttpHandler", "declarator": "mockHttpHandler", "var_name": "mockHttpHandler"}], "file": "core/src/test/java/io/keen/client/java/KeenClientTest.java"}, "test_case": {"identifier": "testAddEventWithCallback", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddEventWithCallback() throws Exception {\n        setMockResponse(201, POST_EVENT_SUCCESS);\n        final CountDownLatch latch = new CountDownLatch(1);\n        client.addEvent(null, TEST_COLLECTION, TEST_EVENTS.get(0), null, new LatchKeenCallback(latch));\n        latch.await(2, TimeUnit.SECONDS);\n    }", "signature": "void testAddEventWithCallback()", "full_signature": "@Test public void testAddEventWithCallback()", "class_method_signature": "KeenClientTest.testAddEventWithCallback()", "testcase": true, "constructor": false, "invocations": ["setMockResponse", "addEvent", "get", "await"]}, "focal_class": {"identifier": "KeenClient", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final DateFormat ISO_8601_FORMAT =\n            new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\", Locale.US);", "modifier": "private static final", "type": "DateFormat", "declarator": "ISO_8601_FORMAT =\n            new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\", Locale.US)", "var_name": "ISO_8601_FORMAT"}, {"original_string": "private final HttpHandler httpHandler;", "modifier": "private final", "type": "HttpHandler", "declarator": "httpHandler", "var_name": "httpHandler"}, {"original_string": "private final KeenJsonHandler jsonHandler;", "modifier": "private final", "type": "KeenJsonHandler", "declarator": "jsonHandler", "var_name": "jsonHandler"}, {"original_string": "private final KeenEventStore eventStore;", "modifier": "private final", "type": "KeenEventStore", "declarator": "eventStore", "var_name": "eventStore"}, {"original_string": "private final Executor publishExecutor;", "modifier": "private final", "type": "Executor", "declarator": "publishExecutor", "var_name": "publishExecutor"}, {"original_string": "private final KeenNetworkStatusHandler networkStatusHandler;", "modifier": "private final", "type": "KeenNetworkStatusHandler", "declarator": "networkStatusHandler", "var_name": "networkStatusHandler"}, {"original_string": "private final Object attemptsLock = new Object();", "modifier": "private final", "type": "Object", "declarator": "attemptsLock = new Object()", "var_name": "attemptsLock"}, {"original_string": "private final int connectTimeout;", "modifier": "private final", "type": "int", "declarator": "connectTimeout", "var_name": "connectTimeout"}, {"original_string": "private final int readTimeout;", "modifier": "private final", "type": "int", "declarator": "readTimeout", "var_name": "readTimeout"}, {"original_string": "private boolean isActive = true;", "modifier": "private", "type": "boolean", "declarator": "isActive = true", "var_name": "isActive"}, {"original_string": "private boolean isDebugMode;", "modifier": "private", "type": "boolean", "declarator": "isDebugMode", "var_name": "isDebugMode"}, {"original_string": "private int maxAttempts = KeenConstants.DEFAULT_MAX_ATTEMPTS;", "modifier": "private", "type": "int", "declarator": "maxAttempts = KeenConstants.DEFAULT_MAX_ATTEMPTS", "var_name": "maxAttempts"}, {"original_string": "private KeenProject defaultProject;", "modifier": "private", "type": "KeenProject", "declarator": "defaultProject", "var_name": "defaultProject"}, {"original_string": "private String baseUrl;", "modifier": "private", "type": "String", "declarator": "baseUrl", "var_name": "baseUrl"}, {"original_string": "private GlobalPropertiesEvaluator globalPropertiesEvaluator;", "modifier": "private", "type": "GlobalPropertiesEvaluator", "declarator": "globalPropertiesEvaluator", "var_name": "globalPropertiesEvaluator"}, {"original_string": "private Map<String, Object> globalProperties;", "modifier": "private", "type": "Map<String, Object>", "declarator": "globalProperties", "var_name": "globalProperties"}, {"original_string": "private Proxy proxy;", "modifier": "private", "type": "Proxy", "declarator": "proxy", "var_name": "proxy"}, {"original_string": "private static final String ENCODING = \"UTF-8\";", "modifier": "private static final", "type": "String", "declarator": "ENCODING = \"UTF-8\"", "var_name": "ENCODING"}, {"original_string": "private static final int DEFAULT_CONNECT_TIMEOUT = 30000;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_CONNECT_TIMEOUT = 30000", "var_name": "DEFAULT_CONNECT_TIMEOUT"}, {"original_string": "private static final int DEFAULT_READ_TIMEOUT = 30000;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_READ_TIMEOUT = 30000", "var_name": "DEFAULT_READ_TIMEOUT"}], "methods": [{"identifier": "client", "parameters": "()", "modifiers": "public static", "return": "KeenClient", "signature": "KeenClient client()", "full_signature": "public static KeenClient client()", "class_method_signature": "KeenClient.client()", "testcase": false, "constructor": false}, {"identifier": "initialize", "parameters": "(KeenClient client)", "modifiers": "public static", "return": "void", "signature": "void initialize(KeenClient client)", "full_signature": "public static void initialize(KeenClient client)", "class_method_signature": "KeenClient.initialize(KeenClient client)", "testcase": false, "constructor": false}, {"identifier": "isInitialized", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isInitialized()", "full_signature": "public static boolean isInitialized()", "class_method_signature": "KeenClient.isInitialized()", "testcase": false, "constructor": false}, {"identifier": "addEvent", "parameters": "(String eventCollection, Map<String, Object> event)", "modifiers": "public", "return": "void", "signature": "void addEvent(String eventCollection, Map<String, Object> event)", "full_signature": "public void addEvent(String eventCollection, Map<String, Object> event)", "class_method_signature": "KeenClient.addEvent(String eventCollection, Map<String, Object> event)", "testcase": false, "constructor": false}, {"identifier": "addEvent", "parameters": "(String eventCollection, Map<String, Object> event,\n                         Map<String, Object> keenProperties)", "modifiers": "public", "return": "void", "signature": "void addEvent(String eventCollection, Map<String, Object> event,\n                         Map<String, Object> keenProperties)", "full_signature": "public void addEvent(String eventCollection, Map<String, Object> event,\n                         Map<String, Object> keenProperties)", "class_method_signature": "KeenClient.addEvent(String eventCollection, Map<String, Object> event,\n                         Map<String, Object> keenProperties)", "testcase": false, "constructor": false}, {"identifier": "addEvent", "parameters": "(KeenProject project, String eventCollection, Map<String, Object> event,\n                         Map<String, Object> keenProperties, KeenCallback callback)", "modifiers": "public", "return": "void", "signature": "void addEvent(KeenProject project, String eventCollection, Map<String, Object> event,\n                         Map<String, Object> keenProperties, KeenCallback callback)", "full_signature": "public void addEvent(KeenProject project, String eventCollection, Map<String, Object> event,\n                         Map<String, Object> keenProperties, KeenCallback callback)", "class_method_signature": "KeenClient.addEvent(KeenProject project, String eventCollection, Map<String, Object> event,\n                         Map<String, Object> keenProperties, KeenCallback callback)", "testcase": false, "constructor": false}, {"identifier": "addEventAsync", "parameters": "(String eventCollection, Map<String, Object> event)", "modifiers": "public", "return": "void", "signature": "void addEventAsync(String eventCollection, Map<String, Object> event)", "full_signature": "public void addEventAsync(String eventCollection, Map<String, Object> event)", "class_method_signature": "KeenClient.addEventAsync(String eventCollection, Map<String, Object> event)", "testcase": false, "constructor": false}, {"identifier": "addEventAsync", "parameters": "(String eventCollection, Map<String, Object> event,\n                              final Map<String, Object> keenProperties)", "modifiers": "public", "return": "void", "signature": "void addEventAsync(String eventCollection, Map<String, Object> event,\n                              final Map<String, Object> keenProperties)", "full_signature": "public void addEventAsync(String eventCollection, Map<String, Object> event,\n                              final Map<String, Object> keenProperties)", "class_method_signature": "KeenClient.addEventAsync(String eventCollection, Map<String, Object> event,\n                              final Map<String, Object> keenProperties)", "testcase": false, "constructor": false}, {"identifier": "addEventAsync", "parameters": "(final KeenProject project, final String eventCollection,\n                              final Map<String, Object> event,\n                              final Map<String, Object> keenProperties,\n                              final KeenCallback callback)", "modifiers": "public", "return": "void", "signature": "void addEventAsync(final KeenProject project, final String eventCollection,\n                              final Map<String, Object> event,\n                              final Map<String, Object> keenProperties,\n                              final KeenCallback callback)", "full_signature": "public void addEventAsync(final KeenProject project, final String eventCollection,\n                              final Map<String, Object> event,\n                              final Map<String, Object> keenProperties,\n                              final KeenCallback callback)", "class_method_signature": "KeenClient.addEventAsync(final KeenProject project, final String eventCollection,\n                              final Map<String, Object> event,\n                              final Map<String, Object> keenProperties,\n                              final KeenCallback callback)", "testcase": false, "constructor": false}, {"identifier": "queueEvent", "parameters": "(String eventCollection, Map<String, Object> event)", "modifiers": "public", "return": "void", "signature": "void queueEvent(String eventCollection, Map<String, Object> event)", "full_signature": "public void queueEvent(String eventCollection, Map<String, Object> event)", "class_method_signature": "KeenClient.queueEvent(String eventCollection, Map<String, Object> event)", "testcase": false, "constructor": false}, {"identifier": "queueEvent", "parameters": "(String eventCollection, Map<String, Object> event,\n                           Map<String, Object> keenProperties)", "modifiers": "public", "return": "void", "signature": "void queueEvent(String eventCollection, Map<String, Object> event,\n                           Map<String, Object> keenProperties)", "full_signature": "public void queueEvent(String eventCollection, Map<String, Object> event,\n                           Map<String, Object> keenProperties)", "class_method_signature": "KeenClient.queueEvent(String eventCollection, Map<String, Object> event,\n                           Map<String, Object> keenProperties)", "testcase": false, "constructor": false}, {"identifier": "queueEvent", "parameters": "(KeenProject project, String eventCollection, Map<String, Object> event,\n                           Map<String, Object> keenProperties, final KeenCallback callback)", "modifiers": "public", "return": "void", "signature": "void queueEvent(KeenProject project, String eventCollection, Map<String, Object> event,\n                           Map<String, Object> keenProperties, final KeenCallback callback)", "full_signature": "public void queueEvent(KeenProject project, String eventCollection, Map<String, Object> event,\n                           Map<String, Object> keenProperties, final KeenCallback callback)", "class_method_signature": "KeenClient.queueEvent(KeenProject project, String eventCollection, Map<String, Object> event,\n                           Map<String, Object> keenProperties, final KeenCallback callback)", "testcase": false, "constructor": false}, {"identifier": "sendQueuedEvents", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void sendQueuedEvents()", "full_signature": "public void sendQueuedEvents()", "class_method_signature": "KeenClient.sendQueuedEvents()", "testcase": false, "constructor": false}, {"identifier": "sendQueuedEvents", "parameters": "(KeenProject project)", "modifiers": "public", "return": "void", "signature": "void sendQueuedEvents(KeenProject project)", "full_signature": "public void sendQueuedEvents(KeenProject project)", "class_method_signature": "KeenClient.sendQueuedEvents(KeenProject project)", "testcase": false, "constructor": false}, {"identifier": "sendQueuedEvents", "parameters": "(KeenProject project, KeenCallback callback)", "modifiers": "public synchronized", "return": "void", "signature": "void sendQueuedEvents(KeenProject project, KeenCallback callback)", "full_signature": "public synchronized void sendQueuedEvents(KeenProject project, KeenCallback callback)", "class_method_signature": "KeenClient.sendQueuedEvents(KeenProject project, KeenCallback callback)", "testcase": false, "constructor": false}, {"identifier": "sendQueuedEventsAsync", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void sendQueuedEventsAsync()", "full_signature": "public void sendQueuedEventsAsync()", "class_method_signature": "KeenClient.sendQueuedEventsAsync()", "testcase": false, "constructor": false}, {"identifier": "sendQueuedEventsAsync", "parameters": "(final KeenProject project)", "modifiers": "public", "return": "void", "signature": "void sendQueuedEventsAsync(final KeenProject project)", "full_signature": "public void sendQueuedEventsAsync(final KeenProject project)", "class_method_signature": "KeenClient.sendQueuedEventsAsync(final KeenProject project)", "testcase": false, "constructor": false}, {"identifier": "sendQueuedEventsAsync", "parameters": "(final KeenProject project, final KeenCallback callback)", "modifiers": "public", "return": "void", "signature": "void sendQueuedEventsAsync(final KeenProject project, final KeenCallback callback)", "full_signature": "public void sendQueuedEventsAsync(final KeenProject project, final KeenCallback callback)", "class_method_signature": "KeenClient.sendQueuedEventsAsync(final KeenProject project, final KeenCallback callback)", "testcase": false, "constructor": false}, {"identifier": "getJsonHandler", "parameters": "()", "modifiers": "public", "return": "KeenJsonHandler", "signature": "KeenJsonHandler getJsonHandler()", "full_signature": "public KeenJsonHandler getJsonHandler()", "class_method_signature": "KeenClient.getJsonHandler()", "testcase": false, "constructor": false}, {"identifier": "getEventStore", "parameters": "()", "modifiers": "public", "return": "KeenEventStore", "signature": "KeenEventStore getEventStore()", "full_signature": "public KeenEventStore getEventStore()", "class_method_signature": "KeenClient.getEventStore()", "testcase": false, "constructor": false}, {"identifier": "getPublishExecutor", "parameters": "()", "modifiers": "public", "return": "Executor", "signature": "Executor getPublishExecutor()", "full_signature": "public Executor getPublishExecutor()", "class_method_signature": "KeenClient.getPublishExecutor()", "testcase": false, "constructor": false}, {"identifier": "getDefaultProject", "parameters": "()", "modifiers": "public", "return": "KeenProject", "signature": "KeenProject getDefaultProject()", "full_signature": "public KeenProject getDefaultProject()", "class_method_signature": "KeenClient.getDefaultProject()", "testcase": false, "constructor": false}, {"identifier": "setDefaultProject", "parameters": "(KeenProject defaultProject)", "modifiers": "public", "return": "void", "signature": "void setDefaultProject(KeenProject defaultProject)", "full_signature": "public void setDefaultProject(KeenProject defaultProject)", "class_method_signature": "KeenClient.setDefaultProject(KeenProject defaultProject)", "testcase": false, "constructor": false}, {"identifier": "getBaseUrl", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getBaseUrl()", "full_signature": "public String getBaseUrl()", "class_method_signature": "KeenClient.getBaseUrl()", "testcase": false, "constructor": false}, {"identifier": "setBaseUrl", "parameters": "(String baseUrl)", "modifiers": "public", "return": "void", "signature": "void setBaseUrl(String baseUrl)", "full_signature": "public void setBaseUrl(String baseUrl)", "class_method_signature": "KeenClient.setBaseUrl(String baseUrl)", "testcase": false, "constructor": false}, {"identifier": "setMaxAttempts", "parameters": "(int maxAttempts)", "modifiers": "public", "return": "void", "signature": "void setMaxAttempts(int maxAttempts)", "full_signature": "public void setMaxAttempts(int maxAttempts)", "class_method_signature": "KeenClient.setMaxAttempts(int maxAttempts)", "testcase": false, "constructor": false}, {"identifier": "getMaxAttempts", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getMaxAttempts()", "full_signature": "public int getMaxAttempts()", "class_method_signature": "KeenClient.getMaxAttempts()", "testcase": false, "constructor": false}, {"identifier": "getGlobalPropertiesEvaluator", "parameters": "()", "modifiers": "public", "return": "GlobalPropertiesEvaluator", "signature": "GlobalPropertiesEvaluator getGlobalPropertiesEvaluator()", "full_signature": "public GlobalPropertiesEvaluator getGlobalPropertiesEvaluator()", "class_method_signature": "KeenClient.getGlobalPropertiesEvaluator()", "testcase": false, "constructor": false}, {"identifier": "setGlobalPropertiesEvaluator", "parameters": "(GlobalPropertiesEvaluator globalPropertiesEvaluator)", "modifiers": "public", "return": "void", "signature": "void setGlobalPropertiesEvaluator(GlobalPropertiesEvaluator globalPropertiesEvaluator)", "full_signature": "public void setGlobalPropertiesEvaluator(GlobalPropertiesEvaluator globalPropertiesEvaluator)", "class_method_signature": "KeenClient.setGlobalPropertiesEvaluator(GlobalPropertiesEvaluator globalPropertiesEvaluator)", "testcase": false, "constructor": false}, {"identifier": "getGlobalProperties", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> getGlobalProperties()", "full_signature": "public Map<String, Object> getGlobalProperties()", "class_method_signature": "KeenClient.getGlobalProperties()", "testcase": false, "constructor": false}, {"identifier": "setGlobalProperties", "parameters": "(Map<String, Object> globalProperties)", "modifiers": "public", "return": "void", "signature": "void setGlobalProperties(Map<String, Object> globalProperties)", "full_signature": "public void setGlobalProperties(Map<String, Object> globalProperties)", "class_method_signature": "KeenClient.setGlobalProperties(Map<String, Object> globalProperties)", "testcase": false, "constructor": false}, {"identifier": "isDebugMode", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isDebugMode()", "full_signature": "public boolean isDebugMode()", "class_method_signature": "KeenClient.isDebugMode()", "testcase": false, "constructor": false}, {"identifier": "setDebugMode", "parameters": "(boolean isDebugMode)", "modifiers": "public", "return": "void", "signature": "void setDebugMode(boolean isDebugMode)", "full_signature": "public void setDebugMode(boolean isDebugMode)", "class_method_signature": "KeenClient.setDebugMode(boolean isDebugMode)", "testcase": false, "constructor": false}, {"identifier": "isActive", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isActive()", "full_signature": "public boolean isActive()", "class_method_signature": "KeenClient.isActive()", "testcase": false, "constructor": false}, {"identifier": "setProxy", "parameters": "(String proxyHost, int proxyPort)", "modifiers": "public", "return": "void", "signature": "void setProxy(String proxyHost, int proxyPort)", "full_signature": "public void setProxy(String proxyHost, int proxyPort)", "class_method_signature": "KeenClient.setProxy(String proxyHost, int proxyPort)", "testcase": false, "constructor": false}, {"identifier": "setProxy", "parameters": "(Proxy proxy)", "modifiers": "public", "return": "void", "signature": "void setProxy(Proxy proxy)", "full_signature": "public void setProxy(Proxy proxy)", "class_method_signature": "KeenClient.setProxy(Proxy proxy)", "testcase": false, "constructor": false}, {"identifier": "getProxy", "parameters": "()", "modifiers": "public", "return": "Proxy", "signature": "Proxy getProxy()", "full_signature": "public Proxy getProxy()", "class_method_signature": "KeenClient.getProxy()", "testcase": false, "constructor": false}, {"identifier": "KeenClient", "parameters": "(Builder builder)", "modifiers": "protected", "return": "", "signature": " KeenClient(Builder builder)", "full_signature": "protected  KeenClient(Builder builder)", "class_method_signature": "KeenClient.KeenClient(Builder builder)", "testcase": false, "constructor": true}, {"identifier": "KeenClient", "parameters": "(Builder builder, Environment env)", "modifiers": "", "return": "", "signature": " KeenClient(Builder builder, Environment env)", "full_signature": "  KeenClient(Builder builder, Environment env)", "class_method_signature": "KeenClient.KeenClient(Builder builder, Environment env)", "testcase": false, "constructor": true}, {"identifier": "setActive", "parameters": "(boolean isActive)", "modifiers": "protected", "return": "void", "signature": "void setActive(boolean isActive)", "full_signature": "protected void setActive(boolean isActive)", "class_method_signature": "KeenClient.setActive(boolean isActive)", "testcase": false, "constructor": false}, {"identifier": "validateAndBuildEvent", "parameters": "(KeenProject project,\n                                                        String eventCollection, Map<String, Object> event, Map<String, Object> keenProperties)", "modifiers": "protected", "return": "Map<String, Object>", "signature": "Map<String, Object> validateAndBuildEvent(KeenProject project,\n                                                        String eventCollection, Map<String, Object> event, Map<String, Object> keenProperties)", "full_signature": "protected Map<String, Object> validateAndBuildEvent(KeenProject project,\n                                                        String eventCollection, Map<String, Object> event, Map<String, Object> keenProperties)", "class_method_signature": "KeenClient.validateAndBuildEvent(KeenProject project,\n                                                        String eventCollection, Map<String, Object> event, Map<String, Object> keenProperties)", "testcase": false, "constructor": false}, {"identifier": "mergeGlobalProperties", "parameters": "(Map<String, Object> globalProperties, Map<String, Object> keenProperties,\n                                       Map<String, Object> newEvent)", "modifiers": "private", "return": "void", "signature": "void mergeGlobalProperties(Map<String, Object> globalProperties, Map<String, Object> keenProperties,\n                                       Map<String, Object> newEvent)", "full_signature": "private void mergeGlobalProperties(Map<String, Object> globalProperties, Map<String, Object> keenProperties,\n                                       Map<String, Object> newEvent)", "class_method_signature": "KeenClient.mergeGlobalProperties(Map<String, Object> globalProperties, Map<String, Object> keenProperties,\n                                       Map<String, Object> newEvent)", "testcase": false, "constructor": false}, {"identifier": "validateEventCollection", "parameters": "(String eventCollection)", "modifiers": "private", "return": "void", "signature": "void validateEventCollection(String eventCollection)", "full_signature": "private void validateEventCollection(String eventCollection)", "class_method_signature": "KeenClient.validateEventCollection(String eventCollection)", "testcase": false, "constructor": false}, {"identifier": "validateEvent", "parameters": "(Map<String, Object> event)", "modifiers": "private", "return": "void", "signature": "void validateEvent(Map<String, Object> event)", "full_signature": "private void validateEvent(Map<String, Object> event)", "class_method_signature": "KeenClient.validateEvent(Map<String, Object> event)", "testcase": false, "constructor": false}, {"identifier": "validateEvent", "parameters": "(Map<String, Object> event, int depth)", "modifiers": "@SuppressWarnings(\"unchecked\") // cast to generic Map will always be okay in this case private", "return": "void", "signature": "void validateEvent(Map<String, Object> event, int depth)", "full_signature": "@SuppressWarnings(\"unchecked\") // cast to generic Map will always be okay in this case private void validateEvent(Map<String, Object> event, int depth)", "class_method_signature": "KeenClient.validateEvent(Map<String, Object> event, int depth)", "testcase": false, "constructor": false}, {"identifier": "validateEventValue", "parameters": "(Object value, int depth)", "modifiers": "@SuppressWarnings(\"unchecked\") // cast to generic Map will always be okay in this case private", "return": "void", "signature": "void validateEventValue(Object value, int depth)", "full_signature": "@SuppressWarnings(\"unchecked\") // cast to generic Map will always be okay in this case private void validateEventValue(Object value, int depth)", "class_method_signature": "KeenClient.validateEventValue(Object value, int depth)", "testcase": false, "constructor": false}, {"identifier": "buildEventMap", "parameters": "(String projectId,\n            Map<String, List<Object>> eventHandles)", "modifiers": "private", "return": "Map<String, List<Map<String, Object>>>", "signature": "Map<String, List<Map<String, Object>>> buildEventMap(String projectId,\n            Map<String, List<Object>> eventHandles)", "full_signature": "private Map<String, List<Map<String, Object>>> buildEventMap(String projectId,\n            Map<String, List<Object>> eventHandles)", "class_method_signature": "KeenClient.buildEventMap(String projectId,\n            Map<String, List<Object>> eventHandles)", "testcase": false, "constructor": false}, {"identifier": "publish", "parameters": "(KeenProject project, String eventCollection, Map<String, Object> event)", "modifiers": "private", "return": "String", "signature": "String publish(KeenProject project, String eventCollection, Map<String, Object> event)", "full_signature": "private String publish(KeenProject project, String eventCollection, Map<String, Object> event)", "class_method_signature": "KeenClient.publish(KeenProject project, String eventCollection, Map<String, Object> event)", "testcase": false, "constructor": false}, {"identifier": "createURL", "parameters": "(KeenProject project, String eventCollection)", "modifiers": "private", "return": "URL", "signature": "URL createURL(KeenProject project, String eventCollection)", "full_signature": "private URL createURL(KeenProject project, String eventCollection)", "class_method_signature": "KeenClient.createURL(KeenProject project, String eventCollection)", "testcase": false, "constructor": false}, {"identifier": "publishAll", "parameters": "(KeenProject project,\n                              Map<String, List<Map<String, Object>>> events)", "modifiers": "private", "return": "String", "signature": "String publishAll(KeenProject project,\n                              Map<String, List<Map<String, Object>>> events)", "full_signature": "private String publishAll(KeenProject project,\n                              Map<String, List<Map<String, Object>>> events)", "class_method_signature": "KeenClient.publishAll(KeenProject project,\n                              Map<String, List<Map<String, Object>>> events)", "testcase": false, "constructor": false}, {"identifier": "publishObject", "parameters": "(KeenProject project, URL url,\n                                              final Map<String, ?> requestData)", "modifiers": "private synchronized", "return": "String", "signature": "String publishObject(KeenProject project, URL url,\n                                              final Map<String, ?> requestData)", "full_signature": "private synchronized String publishObject(KeenProject project, URL url,\n                                              final Map<String, ?> requestData)", "class_method_signature": "KeenClient.publishObject(KeenProject project, URL url,\n                                              final Map<String, ?> requestData)", "testcase": false, "constructor": false}, {"identifier": "isNetworkConnected", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isNetworkConnected()", "full_signature": "private boolean isNetworkConnected()", "class_method_signature": "KeenClient.isNetworkConnected()", "testcase": false, "constructor": false}, {"identifier": "handleAddEventsResponse", "parameters": "(Map<String, List<Object>> handles, String response)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "void", "signature": "void handleAddEventsResponse(Map<String, List<Object>> handles, String response)", "full_signature": "@SuppressWarnings(\"unchecked\") private void handleAddEventsResponse(Map<String, List<Object>> handles, String response)", "class_method_signature": "KeenClient.handleAddEventsResponse(Map<String, List<Object>> handles, String response)", "testcase": false, "constructor": false}, {"identifier": "handleSuccess", "parameters": "(KeenCallback callback)", "modifiers": "private", "return": "void", "signature": "void handleSuccess(KeenCallback callback)", "full_signature": "private void handleSuccess(KeenCallback callback)", "class_method_signature": "KeenClient.handleSuccess(KeenCallback callback)", "testcase": false, "constructor": false}, {"identifier": "handleSuccess", "parameters": "(KeenCallback callback,\n                               KeenProject project,\n                               String eventCollection,\n                               Map<String, Object> event,\n                               Map<String, Object> keenProperties)", "modifiers": "private", "return": "void", "signature": "void handleSuccess(KeenCallback callback,\n                               KeenProject project,\n                               String eventCollection,\n                               Map<String, Object> event,\n                               Map<String, Object> keenProperties)", "full_signature": "private void handleSuccess(KeenCallback callback,\n                               KeenProject project,\n                               String eventCollection,\n                               Map<String, Object> event,\n                               Map<String, Object> keenProperties)", "class_method_signature": "KeenClient.handleSuccess(KeenCallback callback,\n                               KeenProject project,\n                               String eventCollection,\n                               Map<String, Object> event,\n                               Map<String, Object> keenProperties)", "testcase": false, "constructor": false}, {"identifier": "handleFailure", "parameters": "(KeenCallback callback, Exception e)", "modifiers": "private", "return": "void", "signature": "void handleFailure(KeenCallback callback, Exception e)", "full_signature": "private void handleFailure(KeenCallback callback, Exception e)", "class_method_signature": "KeenClient.handleFailure(KeenCallback callback, Exception e)", "testcase": false, "constructor": false}, {"identifier": "handleFailure", "parameters": "(KeenCallback callback,\n                               KeenProject project,\n                               String eventCollection,\n                               Map<String, Object> event,\n                               Map<String, Object> keenProperties,\n                               Exception e)", "modifiers": "private", "return": "void", "signature": "void handleFailure(KeenCallback callback,\n                               KeenProject project,\n                               String eventCollection,\n                               Map<String, Object> event,\n                               Map<String, Object> keenProperties,\n                               Exception e)", "full_signature": "private void handleFailure(KeenCallback callback,\n                               KeenProject project,\n                               String eventCollection,\n                               Map<String, Object> event,\n                               Map<String, Object> keenProperties,\n                               Exception e)", "class_method_signature": "KeenClient.handleFailure(KeenCallback callback,\n                               KeenProject project,\n                               String eventCollection,\n                               Map<String, Object> event,\n                               Map<String, Object> keenProperties,\n                               Exception e)", "testcase": false, "constructor": false}, {"identifier": "handleLibraryInactive", "parameters": "(KeenCallback callback)", "modifiers": "private", "return": "void", "signature": "void handleLibraryInactive(KeenCallback callback)", "full_signature": "private void handleLibraryInactive(KeenCallback callback)", "class_method_signature": "KeenClient.handleLibraryInactive(KeenCallback callback)", "testcase": false, "constructor": false}, {"identifier": "getEvent", "parameters": "(Object handle)", "modifiers": "private", "return": "Map<String, Object>", "signature": "Map<String, Object> getEvent(Object handle)", "full_signature": "private Map<String, Object> getEvent(Object handle)", "class_method_signature": "KeenClient.getEvent(Object handle)", "testcase": false, "constructor": false}, {"identifier": "getAttemptsMap", "parameters": "(String projectId, String eventCollection)", "modifiers": "private", "return": "Map<String, Integer>", "signature": "Map<String, Integer> getAttemptsMap(String projectId, String eventCollection)", "full_signature": "private Map<String, Integer> getAttemptsMap(String projectId, String eventCollection)", "class_method_signature": "KeenClient.getAttemptsMap(String projectId, String eventCollection)", "testcase": false, "constructor": false}, {"identifier": "setAttemptsMap", "parameters": "(String projectId, String eventCollection, Map<String, Integer> attempts)", "modifiers": "private", "return": "void", "signature": "void setAttemptsMap(String projectId, String eventCollection, Map<String, Integer> attempts)", "full_signature": "private void setAttemptsMap(String projectId, String eventCollection, Map<String, Integer> attempts)", "class_method_signature": "KeenClient.setAttemptsMap(String projectId, String eventCollection, Map<String, Integer> attempts)", "testcase": false, "constructor": false}], "file": "core/src/main/java/io/keen/client/java/KeenClient.java"}, "focal_method": {"identifier": "addEvent", "parameters": "(String eventCollection, Map<String, Object> event)", "modifiers": "public", "return": "void", "body": "public void addEvent(String eventCollection, Map<String, Object> event) {\n        addEvent(eventCollection, event, null);\n    }", "signature": "void addEvent(String eventCollection, Map<String, Object> event)", "full_signature": "public void addEvent(String eventCollection, Map<String, Object> event)", "class_method_signature": "KeenClient.addEvent(String eventCollection, Map<String, Object> event)", "testcase": false, "constructor": false, "invocations": ["addEvent"]}, "repository": {"repo_id": 8023268, "url": "https://github.com/keenlabs/KeenClient-Java", "language": "Java", "is_fork": false, "fork_count": 48, "stargazer_count": 74, "size": 4291, "license": "licensed"}}