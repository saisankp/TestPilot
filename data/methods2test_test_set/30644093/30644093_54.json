{"test_class": {"identifier": "BodyParameterComponentTest", "superclass": "extends AbstractComponentTest", "interfaces": "", "fields": [{"original_string": "private static final String COMPONENT_NAME = \"body_parameter\";", "modifier": "private static final", "type": "String", "declarator": "COMPONENT_NAME = \"body_parameter\"", "var_name": "COMPONENT_NAME"}, {"original_string": "private Path outputDirectory;", "modifier": "private", "type": "Path", "declarator": "outputDirectory", "var_name": "outputDirectory"}], "file": "swagger2markup/src/test/java/io/github/swagger2markup/internal/component/BodyParameterComponentTest.java"}, "test_case": {"identifier": "testBodyParameterComponent", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBodyParameterComponent() throws URISyntaxException {\n        //Given\n        Path file = Paths.get(AsciidocConverterTest.class.getResource(\"/yaml/swagger_petstore.yaml\").toURI());\n        Swagger2MarkupConfig config = new Swagger2MarkupConfigBuilder().withFlatBody().build();\n        Swagger2MarkupConverter converter = Swagger2MarkupConverter.from(file).withConfig(config).build();\n        Swagger swagger = converter.getContext().getSchema();\n\n        io.swagger.models.Path path = swagger.getPaths().get(\"/pets\");\n        List<SwaggerPathOperation> pathOperations = PathUtils.toPathOperationsList(\"/pets\", path);\n\n        Swagger2MarkupConverter.SwaggerContext context = converter.getContext();\n        MarkupDocBuilder markupDocBuilder = context.createMarkupDocBuilder();\n\n        //When\n        markupDocBuilder = new BodyParameterComponent(converter.getContext(),\n                new DefinitionDocumentResolverFromOperation(context))\n                .apply(markupDocBuilder, BodyParameterComponent.parameters(pathOperations.get(0), new ArrayList<>()));\n\n        markupDocBuilder.writeToFileWithoutExtension(outputDirectory, StandardCharsets.UTF_8);\n\n        //Then\n        Path expectedFile = getExpectedFile(COMPONENT_NAME);\n        DiffUtils.assertThatFileIsEqual(expectedFile, outputDirectory, getReportName(COMPONENT_NAME));\n\n    }", "signature": "void testBodyParameterComponent()", "full_signature": "@Test public void testBodyParameterComponent()", "class_method_signature": "BodyParameterComponentTest.testBodyParameterComponent()", "testcase": true, "constructor": false, "invocations": ["get", "toURI", "getResource", "build", "withFlatBody", "build", "withConfig", "from", "getSchema", "getContext", "get", "getPaths", "toPathOperationsList", "getContext", "createMarkupDocBuilder", "apply", "getContext", "parameters", "get", "writeToFileWithoutExtension", "getExpectedFile", "assertThatFileIsEqual", "getReportName"]}, "focal_class": {"identifier": "BodyParameterComponent", "superclass": "extends MarkupComponent<BodyParameterComponent.Parameters>", "interfaces": "", "fields": [{"original_string": "private final DocumentResolver definitionDocumentResolver;", "modifier": "private final", "type": "DocumentResolver", "declarator": "definitionDocumentResolver", "var_name": "definitionDocumentResolver"}, {"original_string": "private final PropertiesTableComponent propertiesTableComponent;", "modifier": "private final", "type": "PropertiesTableComponent", "declarator": "propertiesTableComponent", "var_name": "propertiesTableComponent"}], "methods": [{"identifier": "BodyParameterComponent", "parameters": "(Swagger2MarkupConverter.SwaggerContext context,\n                                  DocumentResolver definitionDocumentResolver)", "modifiers": "public", "return": "", "signature": " BodyParameterComponent(Swagger2MarkupConverter.SwaggerContext context,\n                                  DocumentResolver definitionDocumentResolver)", "full_signature": "public  BodyParameterComponent(Swagger2MarkupConverter.SwaggerContext context,\n                                  DocumentResolver definitionDocumentResolver)", "class_method_signature": "BodyParameterComponent.BodyParameterComponent(Swagger2MarkupConverter.SwaggerContext context,\n                                  DocumentResolver definitionDocumentResolver)", "testcase": false, "constructor": true}, {"identifier": "parameters", "parameters": "(SwaggerPathOperation operation,\n                                                               List<ObjectType> inlineDefinitions)", "modifiers": "public static", "return": "BodyParameterComponent.Parameters", "signature": "BodyParameterComponent.Parameters parameters(SwaggerPathOperation operation,\n                                                               List<ObjectType> inlineDefinitions)", "full_signature": "public static BodyParameterComponent.Parameters parameters(SwaggerPathOperation operation,\n                                                               List<ObjectType> inlineDefinitions)", "class_method_signature": "BodyParameterComponent.parameters(SwaggerPathOperation operation,\n                                                               List<ObjectType> inlineDefinitions)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(MarkupDocBuilder markupDocBuilder, Parameters params)", "modifiers": "@Override public", "return": "MarkupDocBuilder", "signature": "MarkupDocBuilder apply(MarkupDocBuilder markupDocBuilder, Parameters params)", "full_signature": "@Override public MarkupDocBuilder apply(MarkupDocBuilder markupDocBuilder, Parameters params)", "class_method_signature": "BodyParameterComponent.apply(MarkupDocBuilder markupDocBuilder, Parameters params)", "testcase": false, "constructor": false}, {"identifier": "buildSectionTitle", "parameters": "(MarkupDocBuilder markupDocBuilder, String title)", "modifiers": "private", "return": "void", "signature": "void buildSectionTitle(MarkupDocBuilder markupDocBuilder, String title)", "full_signature": "private void buildSectionTitle(MarkupDocBuilder markupDocBuilder, String title)", "class_method_signature": "BodyParameterComponent.buildSectionTitle(MarkupDocBuilder markupDocBuilder, String title)", "testcase": false, "constructor": false}], "file": "swagger2markup/src/main/java/io/github/swagger2markup/internal/component/BodyParameterComponent.java"}, "focal_method": {"identifier": "BodyParameterComponent", "parameters": "(Swagger2MarkupConverter.SwaggerContext context,\n                                  DocumentResolver definitionDocumentResolver)", "modifiers": "public", "return": "", "body": "public BodyParameterComponent(Swagger2MarkupConverter.SwaggerContext context,\n                                  DocumentResolver definitionDocumentResolver) {\n        super(context);\n        this.definitionDocumentResolver = Validate.notNull(definitionDocumentResolver, \"DocumentResolver must not be null\");\n        this.propertiesTableComponent = new PropertiesTableComponent(context, definitionDocumentResolver);\n    }", "signature": " BodyParameterComponent(Swagger2MarkupConverter.SwaggerContext context,\n                                  DocumentResolver definitionDocumentResolver)", "full_signature": "public  BodyParameterComponent(Swagger2MarkupConverter.SwaggerContext context,\n                                  DocumentResolver definitionDocumentResolver)", "class_method_signature": "BodyParameterComponent.BodyParameterComponent(Swagger2MarkupConverter.SwaggerContext context,\n                                  DocumentResolver definitionDocumentResolver)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 30644093, "url": "https://github.com/Swagger2Markup/swagger2markup", "language": "Java", "is_fork": false, "fork_count": 340, "stargazer_count": 2130, "size": 5225, "license": "licensed"}}