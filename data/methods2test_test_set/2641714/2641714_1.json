{"test_class": {"identifier": "CompleteAutoloadTilesContainerFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CompleteAutoloadTilesContainerFactory factory;", "modifier": "private", "type": "CompleteAutoloadTilesContainerFactory", "declarator": "factory", "var_name": "factory"}], "file": "tiles-extras/src/test/java/org/apache/tiles/extras/complete/CompleteAutoloadTilesContainerFactoryTest.java"}, "test_case": {"identifier": "testRegisterAttributeRenderers", "parameters": "()", "modifiers": "@SuppressWarnings(\"deprecation\") @Test public", "return": "void", "body": "@SuppressWarnings(\"deprecation\")\n    @Test\n    public void testRegisterAttributeRenderers() {\n        BasicRendererFactory rendererFactory = createMock(BasicRendererFactory.class);\n        ServletApplicationContext applicationContext = createMock(ServletApplicationContext.class);\n        TilesContainer container = createMock(TilesContainer.class);\n        AttributeEvaluatorFactory attributeEvaluatorFactory = createMock(AttributeEvaluatorFactory.class);\n        ServletContext servletContext = createMock(ServletContext.class);\n\n        rendererFactory.registerRenderer(eq(\"string\"), isA(StringRenderer.class));\n        rendererFactory.registerRenderer(eq(\"template\"), isA(DispatchRenderer.class));\n        rendererFactory.registerRenderer(eq(\"definition\"), isA(DefinitionRenderer.class));\n        rendererFactory.registerRenderer(eq(\"freemarker\"), isA(FreemarkerRenderer.class));\n        rendererFactory.registerRenderer(eq(\"velocity\"), isA(VelocityRenderer.class));\n        rendererFactory.registerRenderer(eq(\"mustache\"), isA(MustacheRenderer.class));\n\n        expect(applicationContext.getContext()).andReturn(servletContext).anyTimes();\n        expect(servletContext.getInitParameter(VelocityView.PROPERTIES_KEY)).andReturn(null);\n        expect(servletContext.getInitParameter(VelocityView.TOOLS_KEY)).andReturn(null);\n        expect(servletContext.getAttribute(VelocityView.TOOLS_KEY)).andReturn(null);\n        expect(servletContext.getResourceAsStream(\"/WEB-INF/velocity.properties\")).andReturn(\n                getClass().getResourceAsStream(\"/velocity.properties\"));\n        expect(servletContext.getResourceAsStream(\"/WEB-INF/VM_global_library.vm\")).andReturn(\n                getClass().getResourceAsStream(\"/VM_global_library.vm\"));\n        expect(servletContext.getResourceAsStream(\"/WEB-INF/tools.xml\")).andReturn(\n                getClass().getResourceAsStream(\"/tools.xml\"));\n        expect(servletContext.getResourceAsStream(VelocityView.DEPRECATED_USER_TOOLS_PATH)).andReturn(null);\n        servletContext.log((String) anyObject());\n        expectLastCall().anyTimes();\n        expect(servletContext.getRealPath(\"/\")).andReturn(null);\n\n        replay(rendererFactory, applicationContext, container, attributeEvaluatorFactory, servletContext);\n        factory.registerAttributeRenderers(rendererFactory, applicationContext, container, attributeEvaluatorFactory);\n        verify(rendererFactory, applicationContext, container, attributeEvaluatorFactory, servletContext);\n    }", "signature": "void testRegisterAttributeRenderers()", "full_signature": "@SuppressWarnings(\"deprecation\") @Test public void testRegisterAttributeRenderers()", "class_method_signature": "CompleteAutoloadTilesContainerFactoryTest.testRegisterAttributeRenderers()", "testcase": true, "constructor": false, "invocations": ["createMock", "createMock", "createMock", "createMock", "createMock", "registerRenderer", "eq", "isA", "registerRenderer", "eq", "isA", "registerRenderer", "eq", "isA", "registerRenderer", "eq", "isA", "registerRenderer", "eq", "isA", "registerRenderer", "eq", "isA", "anyTimes", "andReturn", "expect", "getContext", "andReturn", "expect", "getInitParameter", "andReturn", "expect", "getInitParameter", "andReturn", "expect", "getAttribute", "andReturn", "expect", "getResourceAsStream", "getResourceAsStream", "getClass", "andReturn", "expect", "getResourceAsStream", "getResourceAsStream", "getClass", "andReturn", "expect", "getResourceAsStream", "getResourceAsStream", "getClass", "andReturn", "expect", "getResourceAsStream", "log", "anyObject", "anyTimes", "expectLastCall", "andReturn", "expect", "getRealPath", "replay", "registerAttributeRenderers", "verify"]}, "focal_class": {"identifier": "CompleteAutoloadTilesContainerFactory", "superclass": "extends BasicTilesContainerFactory", "interfaces": "", "fields": [{"original_string": "private static final String FREEMARKER_RENDERER_NAME = \"freemarker\";", "modifier": "private static final", "type": "String", "declarator": "FREEMARKER_RENDERER_NAME = \"freemarker\"", "var_name": "FREEMARKER_RENDERER_NAME"}, {"original_string": "private static final String VELOCITY_RENDERER_NAME = \"velocity\";", "modifier": "private static final", "type": "String", "declarator": "VELOCITY_RENDERER_NAME = \"velocity\"", "var_name": "VELOCITY_RENDERER_NAME"}, {"original_string": "private static final String MUSTACHE_RENDERER_NAME = \"mustache\";", "modifier": "private static final", "type": "String", "declarator": "MUSTACHE_RENDERER_NAME = \"mustache\"", "var_name": "MUSTACHE_RENDERER_NAME"}], "methods": [{"identifier": "createDecoratedContainer", "parameters": "(TilesContainer originalContainer,\n            ApplicationContext applicationContext)", "modifiers": "@Override public", "return": "TilesContainer", "signature": "TilesContainer createDecoratedContainer(TilesContainer originalContainer,\n            ApplicationContext applicationContext)", "full_signature": "@Override public TilesContainer createDecoratedContainer(TilesContainer originalContainer,\n            ApplicationContext applicationContext)", "class_method_signature": "CompleteAutoloadTilesContainerFactory.createDecoratedContainer(TilesContainer originalContainer,\n            ApplicationContext applicationContext)", "testcase": false, "constructor": false}, {"identifier": "registerAttributeRenderers", "parameters": "(\n            final BasicRendererFactory rendererFactory,\n            final ApplicationContext applicationContext,\n            final TilesContainer container,\n            final AttributeEvaluatorFactory attributeEvaluatorFactory)", "modifiers": "@Override protected", "return": "void", "signature": "void registerAttributeRenderers(\n            final BasicRendererFactory rendererFactory,\n            final ApplicationContext applicationContext,\n            final TilesContainer container,\n            final AttributeEvaluatorFactory attributeEvaluatorFactory)", "full_signature": "@Override protected void registerAttributeRenderers(\n            final BasicRendererFactory rendererFactory,\n            final ApplicationContext applicationContext,\n            final TilesContainer container,\n            final AttributeEvaluatorFactory attributeEvaluatorFactory)", "class_method_signature": "CompleteAutoloadTilesContainerFactory.registerAttributeRenderers(\n            final BasicRendererFactory rendererFactory,\n            final ApplicationContext applicationContext,\n            final TilesContainer container,\n            final AttributeEvaluatorFactory attributeEvaluatorFactory)", "testcase": false, "constructor": false}, {"identifier": "createDefaultAttributeRenderer", "parameters": "(BasicRendererFactory rendererFactory,\n            ApplicationContext applicationContext, TilesContainer container,\n            AttributeEvaluatorFactory attributeEvaluatorFactory)", "modifiers": "@Override protected", "return": "Renderer", "signature": "Renderer createDefaultAttributeRenderer(BasicRendererFactory rendererFactory,\n            ApplicationContext applicationContext, TilesContainer container,\n            AttributeEvaluatorFactory attributeEvaluatorFactory)", "full_signature": "@Override protected Renderer createDefaultAttributeRenderer(BasicRendererFactory rendererFactory,\n            ApplicationContext applicationContext, TilesContainer container,\n            AttributeEvaluatorFactory attributeEvaluatorFactory)", "class_method_signature": "CompleteAutoloadTilesContainerFactory.createDefaultAttributeRenderer(BasicRendererFactory rendererFactory,\n            ApplicationContext applicationContext, TilesContainer container,\n            AttributeEvaluatorFactory attributeEvaluatorFactory)", "testcase": false, "constructor": false}, {"identifier": "createAttributeEvaluatorFactory", "parameters": "(ApplicationContext applicationContext,\n            LocaleResolver resolver)", "modifiers": "@Override protected", "return": "AttributeEvaluatorFactory", "signature": "AttributeEvaluatorFactory createAttributeEvaluatorFactory(ApplicationContext applicationContext,\n            LocaleResolver resolver)", "full_signature": "@Override protected AttributeEvaluatorFactory createAttributeEvaluatorFactory(ApplicationContext applicationContext,\n            LocaleResolver resolver)", "class_method_signature": "CompleteAutoloadTilesContainerFactory.createAttributeEvaluatorFactory(ApplicationContext applicationContext,\n            LocaleResolver resolver)", "testcase": false, "constructor": false}, {"identifier": "createPatternDefinitionResolver", "parameters": "(Class<T> customizationKeyClass)", "modifiers": "@Override protected", "return": "PatternDefinitionResolver<T>", "signature": "PatternDefinitionResolver<T> createPatternDefinitionResolver(Class<T> customizationKeyClass)", "full_signature": "@Override protected PatternDefinitionResolver<T> createPatternDefinitionResolver(Class<T> customizationKeyClass)", "class_method_signature": "CompleteAutoloadTilesContainerFactory.createPatternDefinitionResolver(Class<T> customizationKeyClass)", "testcase": false, "constructor": false}, {"identifier": "getSources", "parameters": "(ApplicationContext applicationContext)", "modifiers": "@Override protected", "return": "List<ApplicationResource>", "signature": "List<ApplicationResource> getSources(ApplicationContext applicationContext)", "full_signature": "@Override protected List<ApplicationResource> getSources(ApplicationContext applicationContext)", "class_method_signature": "CompleteAutoloadTilesContainerFactory.getSources(ApplicationContext applicationContext)", "testcase": false, "constructor": false}, {"identifier": "createDefinitionsReader", "parameters": "(ApplicationContext applicationContext)", "modifiers": "@Override protected", "return": "DefinitionsReader", "signature": "DefinitionsReader createDefinitionsReader(ApplicationContext applicationContext)", "full_signature": "@Override protected DefinitionsReader createDefinitionsReader(ApplicationContext applicationContext)", "class_method_signature": "CompleteAutoloadTilesContainerFactory.createDefinitionsReader(ApplicationContext applicationContext)", "testcase": false, "constructor": false}, {"identifier": "createELEvaluator", "parameters": "(ApplicationContext applicationContext)", "modifiers": "private", "return": "ELAttributeEvaluator", "signature": "ELAttributeEvaluator createELEvaluator(ApplicationContext applicationContext)", "full_signature": "private ELAttributeEvaluator createELEvaluator(ApplicationContext applicationContext)", "class_method_signature": "CompleteAutoloadTilesContainerFactory.createELEvaluator(ApplicationContext applicationContext)", "testcase": false, "constructor": false}, {"identifier": "createMVELEvaluator", "parameters": "()", "modifiers": "private", "return": "MVELAttributeEvaluator", "signature": "MVELAttributeEvaluator createMVELEvaluator()", "full_signature": "private MVELAttributeEvaluator createMVELEvaluator()", "class_method_signature": "CompleteAutoloadTilesContainerFactory.createMVELEvaluator()", "testcase": false, "constructor": false}, {"identifier": "createOGNLEvaluator", "parameters": "()", "modifiers": "private", "return": "OGNLAttributeEvaluator", "signature": "OGNLAttributeEvaluator createOGNLEvaluator()", "full_signature": "private OGNLAttributeEvaluator createOGNLEvaluator()", "class_method_signature": "CompleteAutoloadTilesContainerFactory.createOGNLEvaluator()", "testcase": false, "constructor": false}], "file": "tiles-extras/src/main/java/org/apache/tiles/extras/complete/CompleteAutoloadTilesContainerFactory.java"}, "focal_method": {"identifier": "registerAttributeRenderers", "parameters": "(\n            final BasicRendererFactory rendererFactory,\n            final ApplicationContext applicationContext,\n            final TilesContainer container,\n            final AttributeEvaluatorFactory attributeEvaluatorFactory)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void registerAttributeRenderers(\n            final BasicRendererFactory rendererFactory,\n            final ApplicationContext applicationContext,\n            final TilesContainer container,\n            final AttributeEvaluatorFactory attributeEvaluatorFactory) {\n        super.registerAttributeRenderers(rendererFactory, applicationContext, container, attributeEvaluatorFactory);\n\n        FreemarkerRenderer freemarkerRenderer = FreemarkerRendererBuilder\n                .createInstance()\n                .setApplicationContext(applicationContext)\n                .setParameter(\"TemplatePath\", \"/\")\n                .setParameter(\"NoCache\", \"true\")\n                .setParameter(\"ContentType\", \"text/html\")\n                .setParameter(\"template_update_delay\", \"0\")\n                .setParameter(\"default_encoding\", \"ISO-8859-1\")\n                .setParameter(\"number_format\", \"0.##########\")\n                .setParameter(SharedVariableLoaderFreemarkerServlet.CUSTOM_SHARED_VARIABLE_FACTORIES_INIT_PARAM,\n                        \"tiles,\" + TilesSharedVariableFactory.class.getName()).build();\n        rendererFactory.registerRenderer(FREEMARKER_RENDERER_NAME, freemarkerRenderer);\n\n        VelocityRenderer velocityRenderer = VelocityRendererBuilder.createInstance()\n                .setApplicationContext(applicationContext).build();\n        rendererFactory.registerRenderer(VELOCITY_RENDERER_NAME, velocityRenderer);\n\n        MustacheRenderer mustacheRenderer = new MustacheRenderer();\n        mustacheRenderer.setAcceptPattern(Pattern.compile(\".+\\\\.mustache\"));\n        rendererFactory.registerRenderer(MUSTACHE_RENDERER_NAME, mustacheRenderer);\n    }", "signature": "void registerAttributeRenderers(\n            final BasicRendererFactory rendererFactory,\n            final ApplicationContext applicationContext,\n            final TilesContainer container,\n            final AttributeEvaluatorFactory attributeEvaluatorFactory)", "full_signature": "@Override protected void registerAttributeRenderers(\n            final BasicRendererFactory rendererFactory,\n            final ApplicationContext applicationContext,\n            final TilesContainer container,\n            final AttributeEvaluatorFactory attributeEvaluatorFactory)", "class_method_signature": "CompleteAutoloadTilesContainerFactory.registerAttributeRenderers(\n            final BasicRendererFactory rendererFactory,\n            final ApplicationContext applicationContext,\n            final TilesContainer container,\n            final AttributeEvaluatorFactory attributeEvaluatorFactory)", "testcase": false, "constructor": false, "invocations": ["registerAttributeRenderers", "build", "setParameter", "setParameter", "setParameter", "setParameter", "setParameter", "setParameter", "setParameter", "setApplicationContext", "createInstance", "getName", "registerRenderer", "build", "setApplicationContext", "createInstance", "registerRenderer", "setAcceptPattern", "compile", "registerRenderer"]}, "repository": {"repo_id": 2641714, "url": "https://github.com/apache/tiles", "language": "Java", "is_fork": false, "fork_count": 65, "stargazer_count": 99, "size": 12554, "license": "licensed"}}