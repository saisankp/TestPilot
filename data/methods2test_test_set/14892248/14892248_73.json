{"test_class": {"identifier": "PdfDictionaryTest", "superclass": "", "interfaces": "", "fields": [], "file": "itext/src/test/java/com/itextpdf/text/pdf/PdfDictionaryTest.java"}, "test_case": {"identifier": "pdfDictionaryPutThrowsExceptionIfKeyIsNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void pdfDictionaryPutThrowsExceptionIfKeyIsNull() {\n        PdfDictionary dictionary = new PdfDictionary();\n\n        try {\n            dictionary.put(null, new PdfName(\"null\"));\n            Assert.fail(\"IllegalArgumentException expected\");\n        } catch (IllegalArgumentException e) {\n            Assert.assertEquals(e.getMessage(), \"key is null.\");\n        }\n    }", "signature": "void pdfDictionaryPutThrowsExceptionIfKeyIsNull()", "full_signature": "@Test public void pdfDictionaryPutThrowsExceptionIfKeyIsNull()", "class_method_signature": "PdfDictionaryTest.pdfDictionaryPutThrowsExceptionIfKeyIsNull()", "testcase": true, "constructor": false, "invocations": ["put", "fail", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "PdfDictionary", "superclass": "extends PdfObject", "interfaces": "", "fields": [{"original_string": "public static final PdfName FONT = PdfName.FONT;", "modifier": "public static final", "type": "PdfName", "declarator": "FONT = PdfName.FONT", "var_name": "FONT"}, {"original_string": "public static final PdfName OUTLINES = PdfName.OUTLINES;", "modifier": "public static final", "type": "PdfName", "declarator": "OUTLINES = PdfName.OUTLINES", "var_name": "OUTLINES"}, {"original_string": "public static final PdfName PAGE = PdfName.PAGE;", "modifier": "public static final", "type": "PdfName", "declarator": "PAGE = PdfName.PAGE", "var_name": "PAGE"}, {"original_string": "public static final PdfName PAGES = PdfName.PAGES;", "modifier": "public static final", "type": "PdfName", "declarator": "PAGES = PdfName.PAGES", "var_name": "PAGES"}, {"original_string": "public static final PdfName CATALOG = PdfName.CATALOG;", "modifier": "public static final", "type": "PdfName", "declarator": "CATALOG = PdfName.CATALOG", "var_name": "CATALOG"}, {"original_string": "private PdfName dictionaryType = null;", "modifier": "private", "type": "PdfName", "declarator": "dictionaryType = null", "var_name": "dictionaryType"}, {"original_string": "protected LinkedHashMap<PdfName, PdfObject> hashMap;", "modifier": "protected", "type": "LinkedHashMap<PdfName, PdfObject>", "declarator": "hashMap", "var_name": "hashMap"}], "methods": [{"identifier": "PdfDictionary", "parameters": "()", "modifiers": "public", "return": "", "signature": " PdfDictionary()", "full_signature": "public  PdfDictionary()", "class_method_signature": "PdfDictionary.PdfDictionary()", "testcase": false, "constructor": true}, {"identifier": "PdfDictionary", "parameters": "(int capacity)", "modifiers": "public", "return": "", "signature": " PdfDictionary(int capacity)", "full_signature": "public  PdfDictionary(int capacity)", "class_method_signature": "PdfDictionary.PdfDictionary(int capacity)", "testcase": false, "constructor": true}, {"identifier": "PdfDictionary", "parameters": "(final PdfName type)", "modifiers": "public", "return": "", "signature": " PdfDictionary(final PdfName type)", "full_signature": "public  PdfDictionary(final PdfName type)", "class_method_signature": "PdfDictionary.PdfDictionary(final PdfName type)", "testcase": false, "constructor": true}, {"identifier": "toPdf", "parameters": "(final PdfWriter writer, final OutputStream os)", "modifiers": "@Override public", "return": "void", "signature": "void toPdf(final PdfWriter writer, final OutputStream os)", "full_signature": "@Override public void toPdf(final PdfWriter writer, final OutputStream os)", "class_method_signature": "PdfDictionary.toPdf(final PdfWriter writer, final OutputStream os)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PdfDictionary.toString()", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "(final PdfName key, final PdfObject object)", "modifiers": "public", "return": "void", "signature": "void put(final PdfName key, final PdfObject object)", "full_signature": "public void put(final PdfName key, final PdfObject object)", "class_method_signature": "PdfDictionary.put(final PdfName key, final PdfObject object)", "testcase": false, "constructor": false}, {"identifier": "putEx", "parameters": "(final PdfName key, final PdfObject value)", "modifiers": "public", "return": "void", "signature": "void putEx(final PdfName key, final PdfObject value)", "full_signature": "public void putEx(final PdfName key, final PdfObject value)", "class_method_signature": "PdfDictionary.putEx(final PdfName key, final PdfObject value)", "testcase": false, "constructor": false}, {"identifier": "putAll", "parameters": "(final PdfDictionary dic)", "modifiers": "public", "return": "void", "signature": "void putAll(final PdfDictionary dic)", "full_signature": "public void putAll(final PdfDictionary dic)", "class_method_signature": "PdfDictionary.putAll(final PdfDictionary dic)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(final PdfName key)", "modifiers": "public", "return": "void", "signature": "void remove(final PdfName key)", "full_signature": "public void remove(final PdfName key)", "class_method_signature": "PdfDictionary.remove(final PdfName key)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "PdfDictionary.clear()", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(final PdfName key)", "modifiers": "public", "return": "PdfObject", "signature": "PdfObject get(final PdfName key)", "full_signature": "public PdfObject get(final PdfName key)", "class_method_signature": "PdfDictionary.get(final PdfName key)", "testcase": false, "constructor": false}, {"identifier": "getDirectObject", "parameters": "(final PdfName key)", "modifiers": "public", "return": "PdfObject", "signature": "PdfObject getDirectObject(final PdfName key)", "full_signature": "public PdfObject getDirectObject(final PdfName key)", "class_method_signature": "PdfDictionary.getDirectObject(final PdfName key)", "testcase": false, "constructor": false}, {"identifier": "getKeys", "parameters": "()", "modifiers": "public", "return": "Set<PdfName>", "signature": "Set<PdfName> getKeys()", "full_signature": "public Set<PdfName> getKeys()", "class_method_signature": "PdfDictionary.getKeys()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "PdfDictionary.size()", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(final PdfName key)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(final PdfName key)", "full_signature": "public boolean contains(final PdfName key)", "class_method_signature": "PdfDictionary.contains(final PdfName key)", "testcase": false, "constructor": false}, {"identifier": "isFont", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFont()", "full_signature": "public boolean isFont()", "class_method_signature": "PdfDictionary.isFont()", "testcase": false, "constructor": false}, {"identifier": "isPage", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isPage()", "full_signature": "public boolean isPage()", "class_method_signature": "PdfDictionary.isPage()", "testcase": false, "constructor": false}, {"identifier": "isPages", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isPages()", "full_signature": "public boolean isPages()", "class_method_signature": "PdfDictionary.isPages()", "testcase": false, "constructor": false}, {"identifier": "isCatalog", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCatalog()", "full_signature": "public boolean isCatalog()", "class_method_signature": "PdfDictionary.isCatalog()", "testcase": false, "constructor": false}, {"identifier": "isOutlineTree", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isOutlineTree()", "full_signature": "public boolean isOutlineTree()", "class_method_signature": "PdfDictionary.isOutlineTree()", "testcase": false, "constructor": false}, {"identifier": "checkType", "parameters": "(PdfName type)", "modifiers": "public", "return": "boolean", "signature": "boolean checkType(PdfName type)", "full_signature": "public boolean checkType(PdfName type)", "class_method_signature": "PdfDictionary.checkType(PdfName type)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(final PdfDictionary other)", "modifiers": "public", "return": "void", "signature": "void merge(final PdfDictionary other)", "full_signature": "public void merge(final PdfDictionary other)", "class_method_signature": "PdfDictionary.merge(final PdfDictionary other)", "testcase": false, "constructor": false}, {"identifier": "mergeDifferent", "parameters": "(final PdfDictionary other)", "modifiers": "public", "return": "void", "signature": "void mergeDifferent(final PdfDictionary other)", "full_signature": "public void mergeDifferent(final PdfDictionary other)", "class_method_signature": "PdfDictionary.mergeDifferent(final PdfDictionary other)", "testcase": false, "constructor": false}, {"identifier": "getAsDict", "parameters": "(final PdfName key)", "modifiers": "public", "return": "PdfDictionary", "signature": "PdfDictionary getAsDict(final PdfName key)", "full_signature": "public PdfDictionary getAsDict(final PdfName key)", "class_method_signature": "PdfDictionary.getAsDict(final PdfName key)", "testcase": false, "constructor": false}, {"identifier": "getAsArray", "parameters": "(final PdfName key)", "modifiers": "public", "return": "PdfArray", "signature": "PdfArray getAsArray(final PdfName key)", "full_signature": "public PdfArray getAsArray(final PdfName key)", "class_method_signature": "PdfDictionary.getAsArray(final PdfName key)", "testcase": false, "constructor": false}, {"identifier": "getAsStream", "parameters": "(final PdfName key)", "modifiers": "public", "return": "PdfStream", "signature": "PdfStream getAsStream(final PdfName key)", "full_signature": "public PdfStream getAsStream(final PdfName key)", "class_method_signature": "PdfDictionary.getAsStream(final PdfName key)", "testcase": false, "constructor": false}, {"identifier": "getAsString", "parameters": "(final PdfName key)", "modifiers": "public", "return": "PdfString", "signature": "PdfString getAsString(final PdfName key)", "full_signature": "public PdfString getAsString(final PdfName key)", "class_method_signature": "PdfDictionary.getAsString(final PdfName key)", "testcase": false, "constructor": false}, {"identifier": "getAsNumber", "parameters": "(final PdfName key)", "modifiers": "public", "return": "PdfNumber", "signature": "PdfNumber getAsNumber(final PdfName key)", "full_signature": "public PdfNumber getAsNumber(final PdfName key)", "class_method_signature": "PdfDictionary.getAsNumber(final PdfName key)", "testcase": false, "constructor": false}, {"identifier": "getAsName", "parameters": "(final PdfName key)", "modifiers": "public", "return": "PdfName", "signature": "PdfName getAsName(final PdfName key)", "full_signature": "public PdfName getAsName(final PdfName key)", "class_method_signature": "PdfDictionary.getAsName(final PdfName key)", "testcase": false, "constructor": false}, {"identifier": "getAsBoolean", "parameters": "(final PdfName key)", "modifiers": "public", "return": "PdfBoolean", "signature": "PdfBoolean getAsBoolean(final PdfName key)", "full_signature": "public PdfBoolean getAsBoolean(final PdfName key)", "class_method_signature": "PdfDictionary.getAsBoolean(final PdfName key)", "testcase": false, "constructor": false}, {"identifier": "getAsIndirectObject", "parameters": "(final PdfName key)", "modifiers": "public", "return": "PdfIndirectReference", "signature": "PdfIndirectReference getAsIndirectObject(final PdfName key)", "full_signature": "public PdfIndirectReference getAsIndirectObject(final PdfName key)", "class_method_signature": "PdfDictionary.getAsIndirectObject(final PdfName key)", "testcase": false, "constructor": false}], "file": "itext/src/main/java/com/itextpdf/text/pdf/PdfDictionary.java"}, "focal_method": {"identifier": "put", "parameters": "(final PdfName key, final PdfObject object)", "modifiers": "public", "return": "void", "body": "public void put(final PdfName key, final PdfObject object) {\n        if (key == null)\n            throw new IllegalArgumentException(MessageLocalization.getComposedMessage(\"key.is.null\"));\n        if (object == null || object.isNull())\n            hashMap.remove(key);\n        else\n            hashMap.put(key, object);\n    }", "signature": "void put(final PdfName key, final PdfObject object)", "full_signature": "public void put(final PdfName key, final PdfObject object)", "class_method_signature": "PdfDictionary.put(final PdfName key, final PdfObject object)", "testcase": false, "constructor": false, "invocations": ["getComposedMessage", "isNull", "remove", "put"]}, "repository": {"repo_id": 14892248, "url": "https://github.com/itext/itextpdf", "language": "Java", "is_fork": false, "fork_count": 400, "stargazer_count": 1164, "size": 115070, "license": "licensed"}}