{"test_class": {"identifier": "CassandraBoltTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger LOG = LoggerFactory.getLogger(CassandraBoltTest.class);", "modifier": "private static", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(CassandraBoltTest.class)", "var_name": "LOG"}, {"original_string": "private static String KEYSPACE = CassandraBoltTest.class.getSimpleName().toLowerCase();", "modifier": "private static", "type": "String", "declarator": "KEYSPACE = CassandraBoltTest.class.getSimpleName().toLowerCase()", "var_name": "KEYSPACE"}], "file": "storm/storm-cassandra/src/test/java/com/hmsonline/storm/cassandra/bolt/CassandraBoltTest.java"}, "test_case": {"identifier": "testBolt", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBolt() throws Exception {\n        TupleMapper<String, String, String> tupleMapper = new DefaultTupleMapper(KEYSPACE, \"users\", \"VALUE\");\n        String configKey = \"cassandra-config\";\n        CassandraBatchingBolt<String, String, String> bolt = new CassandraBatchingBolt<String, String, String>(configKey, tupleMapper);\n        TopologyBuilder builder = new TopologyBuilder();\n        builder.setBolt(\"TEST_BOLT\", bolt);\n\n        Fields fields = new Fields(\"VALUE\");\n        TopologyContext context = new MockTopologyContext(builder.createTopology(), fields);\n\n        Config config = new Config();\n        config.put(Config.TOPOLOGY_MAX_SPOUT_PENDING, 5000);\n        \n        Map<String, Object> clientConfig = new HashMap<String, Object>();\n        clientConfig.put(StormCassandraConstants.CASSANDRA_HOST, \"localhost:9160\");\n        clientConfig.put(StormCassandraConstants.CASSANDRA_KEYSPACE, Arrays.asList(new String [] {KEYSPACE}));\n        config.put(configKey, clientConfig);\n\n        bolt.prepare(config, context, null);\n        System.out.println(\"Bolt Preparation Complete.\");\n\n        Values values = new Values(42);\n        Tuple tuple = new TupleImpl(context, values, 5, \"test\");\n        bolt.execute(tuple);\n\n        // wait very briefly for the batch to complete\n        Thread.sleep(250);\n\n        AstyanaxContext<Keyspace> astyContext = newContext(\"localhost:9160\", KEYSPACE);\n        Keyspace ks = astyContext.getEntity();\n\n        Column<String> result = ks\n                .prepareQuery(new ColumnFamily<String, String>(\"users\", StringSerializer.get(), StringSerializer.get()))\n                .getKey(\"42\").getColumn(\"VALUE\").execute().getResult();\n        assertEquals(\"42\", result.getStringValue());\n\n    }", "signature": "void testBolt()", "full_signature": "@Test public void testBolt()", "class_method_signature": "CassandraBoltTest.testBolt()", "testcase": true, "constructor": false, "invocations": ["setBolt", "createTopology", "put", "put", "put", "asList", "put", "prepare", "println", "execute", "sleep", "newContext", "getEntity", "getResult", "execute", "getColumn", "getKey", "prepareQuery", "get", "get", "assertEquals", "getStringValue"]}, "focal_class": {"identifier": "CassandraBolt", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(CassandraBolt.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(CassandraBolt.class)", "var_name": "LOG"}, {"original_string": "private String clientConfigKey;", "modifier": "private", "type": "String", "declarator": "clientConfigKey", "var_name": "clientConfigKey"}, {"original_string": "protected transient AstyanaxClient<K, C, V> client;", "modifier": "protected transient", "type": "AstyanaxClient<K, C, V>", "declarator": "client", "var_name": "client"}, {"original_string": "protected TupleMapper<K, C, V> tupleMapper;", "modifier": "protected", "type": "TupleMapper<K, C, V>", "declarator": "tupleMapper", "var_name": "tupleMapper"}], "methods": [{"identifier": "CassandraBolt", "parameters": "(String clientConfigKey, TupleMapper<K, C, V> tupleMapper)", "modifiers": "public", "return": "", "signature": " CassandraBolt(String clientConfigKey, TupleMapper<K, C, V> tupleMapper)", "full_signature": "public  CassandraBolt(String clientConfigKey, TupleMapper<K, C, V> tupleMapper)", "class_method_signature": "CassandraBolt.CassandraBolt(String clientConfigKey, TupleMapper<K, C, V> tupleMapper)", "testcase": false, "constructor": true}, {"identifier": "prepare", "parameters": "(Map<String, Object> stormConf, TopologyContext context)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "void", "signature": "void prepare(Map<String, Object> stormConf, TopologyContext context)", "full_signature": "@SuppressWarnings(\"unchecked\") public void prepare(Map<String, Object> stormConf, TopologyContext context)", "class_method_signature": "CassandraBolt.prepare(Map<String, Object> stormConf, TopologyContext context)", "testcase": false, "constructor": false}, {"identifier": "cleanup", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void cleanup()", "full_signature": "public void cleanup()", "class_method_signature": "CassandraBolt.cleanup()", "testcase": false, "constructor": false}, {"identifier": "writeTuple", "parameters": "(Tuple input, TupleMapper<K, C, V> tupleMapper)", "modifiers": "public", "return": "void", "signature": "void writeTuple(Tuple input, TupleMapper<K, C, V> tupleMapper)", "full_signature": "public void writeTuple(Tuple input, TupleMapper<K, C, V> tupleMapper)", "class_method_signature": "CassandraBolt.writeTuple(Tuple input, TupleMapper<K, C, V> tupleMapper)", "testcase": false, "constructor": false}, {"identifier": "writeTuples", "parameters": "(List<Tuple> inputs, TupleMapper<K, C, V> tupleMapper)", "modifiers": "public", "return": "void", "signature": "void writeTuples(List<Tuple> inputs, TupleMapper<K, C, V> tupleMapper)", "full_signature": "public void writeTuples(List<Tuple> inputs, TupleMapper<K, C, V> tupleMapper)", "class_method_signature": "CassandraBolt.writeTuples(List<Tuple> inputs, TupleMapper<K, C, V> tupleMapper)", "testcase": false, "constructor": false}, {"identifier": "getComponentConfiguration", "parameters": "()", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> getComponentConfiguration()", "full_signature": "public Map<String, Object> getComponentConfiguration()", "class_method_signature": "CassandraBolt.getComponentConfiguration()", "testcase": false, "constructor": false}, {"identifier": "incrementCounter", "parameters": "(Tuple input, TupleCounterMapper tupleMapper)", "modifiers": "public", "return": "void", "signature": "void incrementCounter(Tuple input, TupleCounterMapper tupleMapper)", "full_signature": "public void incrementCounter(Tuple input, TupleCounterMapper tupleMapper)", "class_method_signature": "CassandraBolt.incrementCounter(Tuple input, TupleCounterMapper tupleMapper)", "testcase": false, "constructor": false}, {"identifier": "incrementCounters", "parameters": "(List<Tuple> inputs, TupleCounterMapper tupleMapper)", "modifiers": "public", "return": "void", "signature": "void incrementCounters(List<Tuple> inputs, TupleCounterMapper tupleMapper)", "full_signature": "public void incrementCounters(List<Tuple> inputs, TupleCounterMapper tupleMapper)", "class_method_signature": "CassandraBolt.incrementCounters(List<Tuple> inputs, TupleCounterMapper tupleMapper)", "testcase": false, "constructor": false}], "file": "storm/storm-cassandra/src/main/java/com/hmsonline/storm/cassandra/bolt/CassandraBolt.java"}, "focal_method": {"identifier": "prepare", "parameters": "(Map<String, Object> stormConf, TopologyContext context)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "void", "body": "@SuppressWarnings(\"unchecked\")\n    public void prepare(Map<String, Object> stormConf, TopologyContext context) {\n        Map<String, Object> config = (Map<String, Object>) stormConf.get(this.clientConfigKey);\n        this.client = new AstyanaxClient<K, C, V>();\n        this.client.start(config);\n    }", "signature": "void prepare(Map<String, Object> stormConf, TopologyContext context)", "full_signature": "@SuppressWarnings(\"unchecked\") public void prepare(Map<String, Object> stormConf, TopologyContext context)", "class_method_signature": "CassandraBolt.prepare(Map<String, Object> stormConf, TopologyContext context)", "testcase": false, "constructor": false, "invocations": ["get", "start"]}, "repository": {"repo_id": 44512524, "url": "https://github.com/zqhxuyuan/bigdata", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 8, "size": 91550, "license": "licensed"}}