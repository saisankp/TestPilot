{"test_class": {"identifier": "GzipCompressTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static ProtobufRpcMethodInfo protobufRpcMethodInfo;", "modifier": "private static", "type": "ProtobufRpcMethodInfo", "declarator": "protobufRpcMethodInfo", "var_name": "protobufRpcMethodInfo"}, {"original_string": "private static JprotobufRpcMethodInfo jprotobufRpcMethodInfo;", "modifier": "private static", "type": "JprotobufRpcMethodInfo", "declarator": "jprotobufRpcMethodInfo", "var_name": "jprotobufRpcMethodInfo"}, {"original_string": "private static GzipCompress compress;", "modifier": "private static", "type": "GzipCompress", "declarator": "compress", "var_name": "compress"}], "file": "brpc-java-communication/src/test/java/com/baidu/brpc/compress/GzipCompressTest.java"}, "test_case": {"identifier": "testCompressInputForJprotobuf", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCompressInputForJprotobuf() throws IOException {\n        EchoRequest request = new EchoRequest();\n        request.setMessage(\"hello\");\n        ByteBuf byteBuf = compress.compressInput(request, jprotobufRpcMethodInfo);\n        System.out.println(byteBuf.readableBytes());\n    }", "signature": "void testCompressInputForJprotobuf()", "full_signature": "@Test public void testCompressInputForJprotobuf()", "class_method_signature": "GzipCompressTest.testCompressInputForJprotobuf()", "testcase": true, "constructor": false, "invocations": ["setMessage", "compressInput", "println", "readableBytes"]}, "focal_class": {"identifier": "GzipCompress", "superclass": "", "interfaces": "implements Compress", "fields": [], "methods": [{"identifier": "compressInput", "parameters": "(Object proto, RpcMethodInfo rpcMethodInfo)", "modifiers": "@Override public", "return": "ByteBuf", "signature": "ByteBuf compressInput(Object proto, RpcMethodInfo rpcMethodInfo)", "full_signature": "@Override public ByteBuf compressInput(Object proto, RpcMethodInfo rpcMethodInfo)", "class_method_signature": "GzipCompress.compressInput(Object proto, RpcMethodInfo rpcMethodInfo)", "testcase": false, "constructor": false}, {"identifier": "uncompressOutput", "parameters": "(ByteBuf byteBuf, RpcMethodInfo rpcMethodInfo)", "modifiers": "@Override public", "return": "Object", "signature": "Object uncompressOutput(ByteBuf byteBuf, RpcMethodInfo rpcMethodInfo)", "full_signature": "@Override public Object uncompressOutput(ByteBuf byteBuf, RpcMethodInfo rpcMethodInfo)", "class_method_signature": "GzipCompress.uncompressOutput(ByteBuf byteBuf, RpcMethodInfo rpcMethodInfo)", "testcase": false, "constructor": false}, {"identifier": "uncompressOutput", "parameters": "(byte[] bytes, RpcMethodInfo rpcMethodInfo)", "modifiers": "@Override public", "return": "Object", "signature": "Object uncompressOutput(byte[] bytes, RpcMethodInfo rpcMethodInfo)", "full_signature": "@Override public Object uncompressOutput(byte[] bytes, RpcMethodInfo rpcMethodInfo)", "class_method_signature": "GzipCompress.uncompressOutput(byte[] bytes, RpcMethodInfo rpcMethodInfo)", "testcase": false, "constructor": false}, {"identifier": "uncompressOutput", "parameters": "(DynamicCompositeByteBuf byteBuf, RpcMethodInfo rpcMethodInfo)", "modifiers": "@Override public", "return": "Object", "signature": "Object uncompressOutput(DynamicCompositeByteBuf byteBuf, RpcMethodInfo rpcMethodInfo)", "full_signature": "@Override public Object uncompressOutput(DynamicCompositeByteBuf byteBuf, RpcMethodInfo rpcMethodInfo)", "class_method_signature": "GzipCompress.uncompressOutput(DynamicCompositeByteBuf byteBuf, RpcMethodInfo rpcMethodInfo)", "testcase": false, "constructor": false}, {"identifier": "uncompressInput", "parameters": "(ByteBuf byteBuf, RpcMethodInfo rpcMethodInfo)", "modifiers": "@Override public", "return": "Object", "signature": "Object uncompressInput(ByteBuf byteBuf, RpcMethodInfo rpcMethodInfo)", "full_signature": "@Override public Object uncompressInput(ByteBuf byteBuf, RpcMethodInfo rpcMethodInfo)", "class_method_signature": "GzipCompress.uncompressInput(ByteBuf byteBuf, RpcMethodInfo rpcMethodInfo)", "testcase": false, "constructor": false}, {"identifier": "uncompressInput", "parameters": "(byte[] bytes, RpcMethodInfo rpcMethodInfo)", "modifiers": "@Override public", "return": "Object", "signature": "Object uncompressInput(byte[] bytes, RpcMethodInfo rpcMethodInfo)", "full_signature": "@Override public Object uncompressInput(byte[] bytes, RpcMethodInfo rpcMethodInfo)", "class_method_signature": "GzipCompress.uncompressInput(byte[] bytes, RpcMethodInfo rpcMethodInfo)", "testcase": false, "constructor": false}, {"identifier": "uncompressInput", "parameters": "(DynamicCompositeByteBuf byteBuf, RpcMethodInfo rpcMethodInfo)", "modifiers": "public", "return": "Object", "signature": "Object uncompressInput(DynamicCompositeByteBuf byteBuf, RpcMethodInfo rpcMethodInfo)", "full_signature": "public Object uncompressInput(DynamicCompositeByteBuf byteBuf, RpcMethodInfo rpcMethodInfo)", "class_method_signature": "GzipCompress.uncompressInput(DynamicCompositeByteBuf byteBuf, RpcMethodInfo rpcMethodInfo)", "testcase": false, "constructor": false}, {"identifier": "compressOutput", "parameters": "(Object proto, RpcMethodInfo rpcMethodInfo)", "modifiers": "@Override public", "return": "ByteBuf", "signature": "ByteBuf compressOutput(Object proto, RpcMethodInfo rpcMethodInfo)", "full_signature": "@Override public ByteBuf compressOutput(Object proto, RpcMethodInfo rpcMethodInfo)", "class_method_signature": "GzipCompress.compressOutput(Object proto, RpcMethodInfo rpcMethodInfo)", "testcase": false, "constructor": false}], "file": "brpc-java-communication/src/main/java/com/baidu/brpc/compress/GzipCompress.java"}, "focal_method": {"identifier": "compressInput", "parameters": "(Object proto, RpcMethodInfo rpcMethodInfo)", "modifiers": "@Override public", "return": "ByteBuf", "body": "@Override\n    public ByteBuf compressInput(Object proto, RpcMethodInfo rpcMethodInfo) throws IOException {\n        int protoSize = rpcMethodInfo.getInputSerializedSize(proto);\n        ByteBuf resBuf = Unpooled.buffer(protoSize);\n        OutputStream outputStream = new ByteBufOutputStream(resBuf);\n        GZIPOutputStream gzipOutputStream = new GZIPOutputStream(outputStream);\n\n        if (protoSize > CodedOutputStream.DEFAULT_BUFFER_SIZE) {\n            protoSize = CodedOutputStream.DEFAULT_BUFFER_SIZE;\n        }\n        final CodedOutputStream codedOutputStream =\n                CodedOutputStream.newInstance(gzipOutputStream, protoSize);\n        rpcMethodInfo.inputWriteToStream(proto, codedOutputStream);\n        gzipOutputStream.close();\n        return resBuf;\n    }", "signature": "ByteBuf compressInput(Object proto, RpcMethodInfo rpcMethodInfo)", "full_signature": "@Override public ByteBuf compressInput(Object proto, RpcMethodInfo rpcMethodInfo)", "class_method_signature": "GzipCompress.compressInput(Object proto, RpcMethodInfo rpcMethodInfo)", "testcase": false, "constructor": false, "invocations": ["getInputSerializedSize", "buffer", "newInstance", "inputWriteToStream", "close"]}, "repository": {"repo_id": 162548942, "url": "https://github.com/baidu/brpc-java", "language": "Java", "is_fork": false, "fork_count": 175, "stargazer_count": 551, "size": 3271, "license": "licensed"}}