{"test_class": {"identifier": "TrackerPreheatTest", "superclass": "", "interfaces": "", "fields": [], "file": "dhis-2/dhis-services/dhis-service-tracker/src/test/java/org/hisp/dhis/tracker/preheat/TrackerPreheatTest.java"}, "test_case": {"identifier": "testAllEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAllEmpty()\n    {\n        TrackerPreheat preheat = new TrackerPreheat();\n\n        assertTrue( preheat.isEmpty() );\n        assertTrue( preheat.isEmpty( TrackerIdScheme.UID ) );\n        assertTrue( preheat.isEmpty( TrackerIdScheme.CODE ) );\n    }", "signature": "void testAllEmpty()", "full_signature": "@Test public void testAllEmpty()", "class_method_signature": "TrackerPreheatTest.testAllEmpty()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isEmpty", "assertTrue", "isEmpty", "assertTrue", "isEmpty"]}, "focal_class": {"identifier": "TrackerPreheat", "superclass": "", "interfaces": "", "fields": [{"original_string": "private User user;", "modifier": "private", "type": "User", "declarator": "user", "var_name": "user"}, {"original_string": "private Map<TrackerIdScheme, Map<Class<? extends IdentifiableObject>, Map<String, IdentifiableObject>>> map = new HashMap<>();", "modifier": "private", "type": "Map<TrackerIdScheme, Map<Class<? extends IdentifiableObject>, Map<String, IdentifiableObject>>>", "declarator": "map = new HashMap<>()", "var_name": "map"}, {"original_string": "private Map<Class<? extends IdentifiableObject>, IdentifiableObject> defaults = new HashMap<>();", "modifier": "private", "type": "Map<Class<? extends IdentifiableObject>, IdentifiableObject>", "declarator": "defaults = new HashMap<>()", "var_name": "defaults"}, {"original_string": "private Map<String, Period> periodMap = new HashMap<>();", "modifier": "private", "type": "Map<String, Period>", "declarator": "periodMap = new HashMap<>()", "var_name": "periodMap"}, {"original_string": "private Map<String, PeriodType> periodTypeMap = new HashMap<>();", "modifier": "private", "type": "Map<String, PeriodType>", "declarator": "periodTypeMap = new HashMap<>()", "var_name": "periodTypeMap"}, {"original_string": "private Set<String> uniqueTrackedEntityAttributes = new HashSet<>();", "modifier": "private", "type": "Set<String>", "declarator": "uniqueTrackedEntityAttributes = new HashSet<>()", "var_name": "uniqueTrackedEntityAttributes"}, {"original_string": "private Map<String, String> mandatoryProgramAttributes = new HashMap<>();", "modifier": "private", "type": "Map<String, String>", "declarator": "mandatoryProgramAttributes = new HashMap<>()", "var_name": "mandatoryProgramAttributes"}, {"original_string": "private Map<TrackerIdScheme, Map<String, TrackedEntityInstance>> trackedEntities = new HashMap<>();", "modifier": "private", "type": "Map<TrackerIdScheme, Map<String, TrackedEntityInstance>>", "declarator": "trackedEntities = new HashMap<>()", "var_name": "trackedEntities"}, {"original_string": "private Map<TrackerIdScheme, Map<String, TrackedEntityAttributeValue>> trackedEntityAttributes = new HashMap<>();", "modifier": "private", "type": "Map<TrackerIdScheme, Map<String, TrackedEntityAttributeValue>>", "declarator": "trackedEntityAttributes = new HashMap<>()", "var_name": "trackedEntityAttributes"}, {"original_string": "private Map<TrackerIdScheme, Map<String, ProgramInstance>> enrollments = new HashMap<>();", "modifier": "private", "type": "Map<TrackerIdScheme, Map<String, ProgramInstance>>", "declarator": "enrollments = new HashMap<>()", "var_name": "enrollments"}, {"original_string": "private Map<TrackerIdScheme, Map<String, ProgramStageInstance>> events = new HashMap<>();", "modifier": "private", "type": "Map<TrackerIdScheme, Map<String, ProgramStageInstance>>", "declarator": "events = new HashMap<>()", "var_name": "events"}, {"original_string": "private Map<TrackerIdScheme, Map<String, Relationship>> relationships = new EnumMap<>( TrackerIdScheme.class );", "modifier": "private", "type": "Map<TrackerIdScheme, Map<String, Relationship>>", "declarator": "relationships = new EnumMap<>( TrackerIdScheme.class )", "var_name": "relationships"}, {"original_string": "private Map<String, List<ProgramInstance>> programInstances = new HashMap<>();", "modifier": "private", "type": "Map<String, List<ProgramInstance>>", "declarator": "programInstances = new HashMap<>()", "var_name": "programInstances"}, {"original_string": "private Map<String, User> users = new HashMap<>();", "modifier": "private", "type": "Map<String, User>", "declarator": "users = new HashMap<>()", "var_name": "users"}, {"original_string": "private TrackerIdentifierParams identifiers = new TrackerIdentifierParams();", "modifier": "private", "type": "TrackerIdentifierParams", "declarator": "identifiers = new TrackerIdentifierParams()", "var_name": "identifiers"}], "methods": [{"identifier": "TrackerPreheat", "parameters": "()", "modifiers": "public", "return": "", "signature": " TrackerPreheat()", "full_signature": "public  TrackerPreheat()", "class_method_signature": "TrackerPreheat.TrackerPreheat()", "testcase": false, "constructor": true}, {"identifier": "getUser", "parameters": "()", "modifiers": "public", "return": "User", "signature": "User getUser()", "full_signature": "public User getUser()", "class_method_signature": "TrackerPreheat.getUser()", "testcase": false, "constructor": false}, {"identifier": "getUsername", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getUsername()", "full_signature": "public String getUsername()", "class_method_signature": "TrackerPreheat.getUsername()", "testcase": false, "constructor": false}, {"identifier": "setUser", "parameters": "( User user )", "modifiers": "public", "return": "void", "signature": "void setUser( User user )", "full_signature": "public void setUser( User user )", "class_method_signature": "TrackerPreheat.setUser( User user )", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "( TrackerIdentifier identifier,\n        Class<? extends IdentifiableObject> klass, IdentifiableObject object )", "modifiers": "public", "return": "T", "signature": "T get( TrackerIdentifier identifier,\n        Class<? extends IdentifiableObject> klass, IdentifiableObject object )", "full_signature": "public T get( TrackerIdentifier identifier,\n        Class<? extends IdentifiableObject> klass, IdentifiableObject object )", "class_method_signature": "TrackerPreheat.get( TrackerIdentifier identifier,\n        Class<? extends IdentifiableObject> klass, IdentifiableObject object )", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass,\n        String key )", "modifiers": "@SuppressWarnings( \"unchecked\" ) public", "return": "T", "signature": "T get( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass,\n        String key )", "full_signature": "@SuppressWarnings( \"unchecked\" ) public T get( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass,\n        String key )", "class_method_signature": "TrackerPreheat.get( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass,\n        String key )", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "( TrackerIdentifier identifier, List<T> keys )", "modifiers": "public", "return": "List<T>", "signature": "List<T> getAll( TrackerIdentifier identifier, List<T> keys )", "full_signature": "public List<T> getAll( TrackerIdentifier identifier, List<T> keys )", "class_method_signature": "TrackerPreheat.getAll( TrackerIdentifier identifier, List<T> keys )", "testcase": false, "constructor": false}, {"identifier": "getAll", "parameters": "( TrackerIdScheme identifier, Class<T> klass )", "modifiers": "@SuppressWarnings( \"unchecked\" ) public", "return": "List<T>", "signature": "List<T> getAll( TrackerIdScheme identifier, Class<T> klass )", "full_signature": "@SuppressWarnings( \"unchecked\" ) public List<T> getAll( TrackerIdScheme identifier, Class<T> klass )", "class_method_signature": "TrackerPreheat.getAll( TrackerIdScheme identifier, Class<T> klass )", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "( TrackerIdentifier identifier, T object )", "modifiers": "@SuppressWarnings( \"unchecked\" ) public", "return": "T", "signature": "T get( TrackerIdentifier identifier, T object )", "full_signature": "@SuppressWarnings( \"unchecked\" ) public T get( TrackerIdentifier identifier, T object )", "class_method_signature": "TrackerPreheat.get( TrackerIdentifier identifier, T object )", "testcase": false, "constructor": false}, {"identifier": "containsKey", "parameters": "( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass, String key )", "modifiers": "public", "return": "boolean", "signature": "boolean containsKey( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass, String key )", "full_signature": "public boolean containsKey( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass, String key )", "class_method_signature": "TrackerPreheat.containsKey( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass, String key )", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "TrackerPreheat.isEmpty()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "( TrackerIdScheme identifier )", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty( TrackerIdScheme identifier )", "full_signature": "public boolean isEmpty( TrackerIdScheme identifier )", "class_method_signature": "TrackerPreheat.isEmpty( TrackerIdScheme identifier )", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass )", "modifiers": "public", "return": "boolean", "signature": "boolean isEmpty( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass )", "full_signature": "public boolean isEmpty( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass )", "class_method_signature": "TrackerPreheat.isEmpty( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass )", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "( TrackerIdentifier identifier, T object )", "modifiers": "@SuppressWarnings( \"unchecked\" ) public", "return": "TrackerPreheat", "signature": "TrackerPreheat put( TrackerIdentifier identifier, T object )", "full_signature": "@SuppressWarnings( \"unchecked\" ) public TrackerPreheat put( TrackerIdentifier identifier, T object )", "class_method_signature": "TrackerPreheat.put( TrackerIdentifier identifier, T object )", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "( TrackerIdentifier identifier, T object )", "modifiers": "@SuppressWarnings( \"unchecked\" ) public", "return": "TrackerPreheat", "signature": "TrackerPreheat replace( TrackerIdentifier identifier, T object )", "full_signature": "@SuppressWarnings( \"unchecked\" ) public TrackerPreheat replace( TrackerIdentifier identifier, T object )", "class_method_signature": "TrackerPreheat.replace( TrackerIdentifier identifier, T object )", "testcase": false, "constructor": false}, {"identifier": "put", "parameters": "( TrackerIdentifier identifier, Collection<T> objects )", "modifiers": "public", "return": "TrackerPreheat", "signature": "TrackerPreheat put( TrackerIdentifier identifier, Collection<T> objects )", "full_signature": "public TrackerPreheat put( TrackerIdentifier identifier, Collection<T> objects )", "class_method_signature": "TrackerPreheat.put( TrackerIdentifier identifier, Collection<T> objects )", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass, String key )", "modifiers": "public", "return": "TrackerPreheat", "signature": "TrackerPreheat remove( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass, String key )", "full_signature": "public TrackerPreheat remove( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass, String key )", "class_method_signature": "TrackerPreheat.remove( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass, String key )", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "( TrackerIdentifier identifier, IdentifiableObject object )", "modifiers": "@SuppressWarnings( \"unchecked\" ) public", "return": "TrackerPreheat", "signature": "TrackerPreheat remove( TrackerIdentifier identifier, IdentifiableObject object )", "full_signature": "@SuppressWarnings( \"unchecked\" ) public TrackerPreheat remove( TrackerIdentifier identifier, IdentifiableObject object )", "class_method_signature": "TrackerPreheat.remove( TrackerIdentifier identifier, IdentifiableObject object )", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass,\n        Collection<String> keys )", "modifiers": "public", "return": "TrackerPreheat", "signature": "TrackerPreheat remove( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass,\n        Collection<String> keys )", "full_signature": "public TrackerPreheat remove( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass,\n        Collection<String> keys )", "class_method_signature": "TrackerPreheat.remove( TrackerIdScheme identifier, Class<? extends IdentifiableObject> klass,\n        Collection<String> keys )", "testcase": false, "constructor": false}, {"identifier": "getMap", "parameters": "()", "modifiers": "public", "return": "Map<TrackerIdScheme, Map<Class<? extends IdentifiableObject>, Map<String, IdentifiableObject>>>", "signature": "Map<TrackerIdScheme, Map<Class<? extends IdentifiableObject>, Map<String, IdentifiableObject>>> getMap()", "full_signature": "public Map<TrackerIdScheme, Map<Class<? extends IdentifiableObject>, Map<String, IdentifiableObject>>> getMap()", "class_method_signature": "TrackerPreheat.getMap()", "testcase": false, "constructor": false}, {"identifier": "getDefaults", "parameters": "()", "modifiers": "public", "return": "Map<Class<? extends IdentifiableObject>, IdentifiableObject>", "signature": "Map<Class<? extends IdentifiableObject>, IdentifiableObject> getDefaults()", "full_signature": "public Map<Class<? extends IdentifiableObject>, IdentifiableObject> getDefaults()", "class_method_signature": "TrackerPreheat.getDefaults()", "testcase": false, "constructor": false}, {"identifier": "setDefaults", "parameters": "( Map<Class<? extends IdentifiableObject>, IdentifiableObject> defaults )", "modifiers": "public", "return": "void", "signature": "void setDefaults( Map<Class<? extends IdentifiableObject>, IdentifiableObject> defaults )", "full_signature": "public void setDefaults( Map<Class<? extends IdentifiableObject>, IdentifiableObject> defaults )", "class_method_signature": "TrackerPreheat.setDefaults( Map<Class<? extends IdentifiableObject>, IdentifiableObject> defaults )", "testcase": false, "constructor": false}, {"identifier": "getPeriodMap", "parameters": "()", "modifiers": "public", "return": "Map<String, Period>", "signature": "Map<String, Period> getPeriodMap()", "full_signature": "public Map<String, Period> getPeriodMap()", "class_method_signature": "TrackerPreheat.getPeriodMap()", "testcase": false, "constructor": false}, {"identifier": "setPeriodMap", "parameters": "( Map<String, Period> periodMap )", "modifiers": "public", "return": "void", "signature": "void setPeriodMap( Map<String, Period> periodMap )", "full_signature": "public void setPeriodMap( Map<String, Period> periodMap )", "class_method_signature": "TrackerPreheat.setPeriodMap( Map<String, Period> periodMap )", "testcase": false, "constructor": false}, {"identifier": "getPeriodTypeMap", "parameters": "()", "modifiers": "public", "return": "Map<String, PeriodType>", "signature": "Map<String, PeriodType> getPeriodTypeMap()", "full_signature": "public Map<String, PeriodType> getPeriodTypeMap()", "class_method_signature": "TrackerPreheat.getPeriodTypeMap()", "testcase": false, "constructor": false}, {"identifier": "setPeriodTypeMap", "parameters": "( Map<String, PeriodType> periodTypeMap )", "modifiers": "public", "return": "void", "signature": "void setPeriodTypeMap( Map<String, PeriodType> periodTypeMap )", "full_signature": "public void setPeriodTypeMap( Map<String, PeriodType> periodTypeMap )", "class_method_signature": "TrackerPreheat.setPeriodTypeMap( Map<String, PeriodType> periodTypeMap )", "testcase": false, "constructor": false}, {"identifier": "getUniqueTrackedEntityAttributes", "parameters": "()", "modifiers": "public", "return": "Set<String>", "signature": "Set<String> getUniqueTrackedEntityAttributes()", "full_signature": "public Set<String> getUniqueTrackedEntityAttributes()", "class_method_signature": "TrackerPreheat.getUniqueTrackedEntityAttributes()", "testcase": false, "constructor": false}, {"identifier": "setUniqueTrackedEntityAttributes", "parameters": "( Set<String> uniqueTrackedEntityAttributes )", "modifiers": "public", "return": "void", "signature": "void setUniqueTrackedEntityAttributes( Set<String> uniqueTrackedEntityAttributes )", "full_signature": "public void setUniqueTrackedEntityAttributes( Set<String> uniqueTrackedEntityAttributes )", "class_method_signature": "TrackerPreheat.setUniqueTrackedEntityAttributes( Set<String> uniqueTrackedEntityAttributes )", "testcase": false, "constructor": false}, {"identifier": "getMandatoryProgramAttributes", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getMandatoryProgramAttributes()", "full_signature": "public Map<String, String> getMandatoryProgramAttributes()", "class_method_signature": "TrackerPreheat.getMandatoryProgramAttributes()", "testcase": false, "constructor": false}, {"identifier": "setMandatoryProgramAttributes", "parameters": "( Map<String, String> mandatoryProgramAttributes )", "modifiers": "public", "return": "void", "signature": "void setMandatoryProgramAttributes( Map<String, String> mandatoryProgramAttributes )", "full_signature": "public void setMandatoryProgramAttributes( Map<String, String> mandatoryProgramAttributes )", "class_method_signature": "TrackerPreheat.setMandatoryProgramAttributes( Map<String, String> mandatoryProgramAttributes )", "testcase": false, "constructor": false}, {"identifier": "getTrackedEntities", "parameters": "()", "modifiers": "public", "return": "Map<TrackerIdScheme, Map<String, TrackedEntityInstance>>", "signature": "Map<TrackerIdScheme, Map<String, TrackedEntityInstance>> getTrackedEntities()", "full_signature": "public Map<TrackerIdScheme, Map<String, TrackedEntityInstance>> getTrackedEntities()", "class_method_signature": "TrackerPreheat.getTrackedEntities()", "testcase": false, "constructor": false}, {"identifier": "setTrackedEntities", "parameters": "( Map<TrackerIdScheme, Map<String, TrackedEntityInstance>> trackedEntities )", "modifiers": "public", "return": "void", "signature": "void setTrackedEntities( Map<TrackerIdScheme, Map<String, TrackedEntityInstance>> trackedEntities )", "full_signature": "public void setTrackedEntities( Map<TrackerIdScheme, Map<String, TrackedEntityInstance>> trackedEntities )", "class_method_signature": "TrackerPreheat.setTrackedEntities( Map<TrackerIdScheme, Map<String, TrackedEntityInstance>> trackedEntities )", "testcase": false, "constructor": false}, {"identifier": "getTrackedEntity", "parameters": "( TrackerIdScheme identifier, String trackedEntity )", "modifiers": "public", "return": "TrackedEntityInstance", "signature": "TrackedEntityInstance getTrackedEntity( TrackerIdScheme identifier, String trackedEntity )", "full_signature": "public TrackedEntityInstance getTrackedEntity( TrackerIdScheme identifier, String trackedEntity )", "class_method_signature": "TrackerPreheat.getTrackedEntity( TrackerIdScheme identifier, String trackedEntity )", "testcase": false, "constructor": false}, {"identifier": "putTrackedEntities", "parameters": "( TrackerIdScheme identifier, List<TrackedEntityInstance> trackedEntityInstances )", "modifiers": "public", "return": "void", "signature": "void putTrackedEntities( TrackerIdScheme identifier, List<TrackedEntityInstance> trackedEntityInstances )", "full_signature": "public void putTrackedEntities( TrackerIdScheme identifier, List<TrackedEntityInstance> trackedEntityInstances )", "class_method_signature": "TrackerPreheat.putTrackedEntities( TrackerIdScheme identifier, List<TrackedEntityInstance> trackedEntityInstances )", "testcase": false, "constructor": false}, {"identifier": "putTrackedEntity", "parameters": "( TrackerIdScheme identifier, String trackedEntity,\n        TrackedEntityInstance trackedEntityInstance )", "modifiers": "private", "return": "void", "signature": "void putTrackedEntity( TrackerIdScheme identifier, String trackedEntity,\n        TrackedEntityInstance trackedEntityInstance )", "full_signature": "private void putTrackedEntity( TrackerIdScheme identifier, String trackedEntity,\n        TrackedEntityInstance trackedEntityInstance )", "class_method_signature": "TrackerPreheat.putTrackedEntity( TrackerIdScheme identifier, String trackedEntity,\n        TrackedEntityInstance trackedEntityInstance )", "testcase": false, "constructor": false}, {"identifier": "getTrackedEntityAttributes", "parameters": "()", "modifiers": "public", "return": "Map<TrackerIdScheme, Map<String, TrackedEntityAttributeValue>>", "signature": "Map<TrackerIdScheme, Map<String, TrackedEntityAttributeValue>> getTrackedEntityAttributes()", "full_signature": "public Map<TrackerIdScheme, Map<String, TrackedEntityAttributeValue>> getTrackedEntityAttributes()", "class_method_signature": "TrackerPreheat.getTrackedEntityAttributes()", "testcase": false, "constructor": false}, {"identifier": "setTrackedEntityAttributes", "parameters": "(\n        Map<TrackerIdScheme, Map<String, TrackedEntityAttributeValue>> trackedEntityAttributes )", "modifiers": "public", "return": "void", "signature": "void setTrackedEntityAttributes(\n        Map<TrackerIdScheme, Map<String, TrackedEntityAttributeValue>> trackedEntityAttributes )", "full_signature": "public void setTrackedEntityAttributes(\n        Map<TrackerIdScheme, Map<String, TrackedEntityAttributeValue>> trackedEntityAttributes )", "class_method_signature": "TrackerPreheat.setTrackedEntityAttributes(\n        Map<TrackerIdScheme, Map<String, TrackedEntityAttributeValue>> trackedEntityAttributes )", "testcase": false, "constructor": false}, {"identifier": "getEnrollments", "parameters": "()", "modifiers": "public", "return": "Map<TrackerIdScheme, Map<String, ProgramInstance>>", "signature": "Map<TrackerIdScheme, Map<String, ProgramInstance>> getEnrollments()", "full_signature": "public Map<TrackerIdScheme, Map<String, ProgramInstance>> getEnrollments()", "class_method_signature": "TrackerPreheat.getEnrollments()", "testcase": false, "constructor": false}, {"identifier": "setEnrollments", "parameters": "( Map<TrackerIdScheme, Map<String, ProgramInstance>> enrollments )", "modifiers": "public", "return": "void", "signature": "void setEnrollments( Map<TrackerIdScheme, Map<String, ProgramInstance>> enrollments )", "full_signature": "public void setEnrollments( Map<TrackerIdScheme, Map<String, ProgramInstance>> enrollments )", "class_method_signature": "TrackerPreheat.setEnrollments( Map<TrackerIdScheme, Map<String, ProgramInstance>> enrollments )", "testcase": false, "constructor": false}, {"identifier": "getEnrollment", "parameters": "( TrackerIdScheme identifier, String enrollment )", "modifiers": "public", "return": "ProgramInstance", "signature": "ProgramInstance getEnrollment( TrackerIdScheme identifier, String enrollment )", "full_signature": "public ProgramInstance getEnrollment( TrackerIdScheme identifier, String enrollment )", "class_method_signature": "TrackerPreheat.getEnrollment( TrackerIdScheme identifier, String enrollment )", "testcase": false, "constructor": false}, {"identifier": "putEnrollments", "parameters": "( TrackerIdScheme identifier, List<ProgramInstance> programInstances )", "modifiers": "public", "return": "void", "signature": "void putEnrollments( TrackerIdScheme identifier, List<ProgramInstance> programInstances )", "full_signature": "public void putEnrollments( TrackerIdScheme identifier, List<ProgramInstance> programInstances )", "class_method_signature": "TrackerPreheat.putEnrollments( TrackerIdScheme identifier, List<ProgramInstance> programInstances )", "testcase": false, "constructor": false}, {"identifier": "putEnrollment", "parameters": "( TrackerIdScheme identifier, String enrollment, ProgramInstance programInstance )", "modifiers": "public", "return": "void", "signature": "void putEnrollment( TrackerIdScheme identifier, String enrollment, ProgramInstance programInstance )", "full_signature": "public void putEnrollment( TrackerIdScheme identifier, String enrollment, ProgramInstance programInstance )", "class_method_signature": "TrackerPreheat.putEnrollment( TrackerIdScheme identifier, String enrollment, ProgramInstance programInstance )", "testcase": false, "constructor": false}, {"identifier": "getEvents", "parameters": "()", "modifiers": "public", "return": "Map<TrackerIdScheme, Map<String, ProgramStageInstance>>", "signature": "Map<TrackerIdScheme, Map<String, ProgramStageInstance>> getEvents()", "full_signature": "public Map<TrackerIdScheme, Map<String, ProgramStageInstance>> getEvents()", "class_method_signature": "TrackerPreheat.getEvents()", "testcase": false, "constructor": false}, {"identifier": "setEvents", "parameters": "( Map<TrackerIdScheme, Map<String, ProgramStageInstance>> events )", "modifiers": "public", "return": "void", "signature": "void setEvents( Map<TrackerIdScheme, Map<String, ProgramStageInstance>> events )", "full_signature": "public void setEvents( Map<TrackerIdScheme, Map<String, ProgramStageInstance>> events )", "class_method_signature": "TrackerPreheat.setEvents( Map<TrackerIdScheme, Map<String, ProgramStageInstance>> events )", "testcase": false, "constructor": false}, {"identifier": "getEvent", "parameters": "( TrackerIdScheme identifier, String event )", "modifiers": "public", "return": "ProgramStageInstance", "signature": "ProgramStageInstance getEvent( TrackerIdScheme identifier, String event )", "full_signature": "public ProgramStageInstance getEvent( TrackerIdScheme identifier, String event )", "class_method_signature": "TrackerPreheat.getEvent( TrackerIdScheme identifier, String event )", "testcase": false, "constructor": false}, {"identifier": "putEvents", "parameters": "( TrackerIdScheme identifier, List<ProgramStageInstance> programStageInstances )", "modifiers": "public", "return": "void", "signature": "void putEvents( TrackerIdScheme identifier, List<ProgramStageInstance> programStageInstances )", "full_signature": "public void putEvents( TrackerIdScheme identifier, List<ProgramStageInstance> programStageInstances )", "class_method_signature": "TrackerPreheat.putEvents( TrackerIdScheme identifier, List<ProgramStageInstance> programStageInstances )", "testcase": false, "constructor": false}, {"identifier": "putEvent", "parameters": "( TrackerIdScheme identifier, String event, ProgramStageInstance programStageInstance )", "modifiers": "public", "return": "void", "signature": "void putEvent( TrackerIdScheme identifier, String event, ProgramStageInstance programStageInstance )", "full_signature": "public void putEvent( TrackerIdScheme identifier, String event, ProgramStageInstance programStageInstance )", "class_method_signature": "TrackerPreheat.putEvent( TrackerIdScheme identifier, String event, ProgramStageInstance programStageInstance )", "testcase": false, "constructor": false}, {"identifier": "getRelationships", "parameters": "()", "modifiers": "public", "return": "Map<TrackerIdScheme, Map<String, Relationship>>", "signature": "Map<TrackerIdScheme, Map<String, Relationship>> getRelationships()", "full_signature": "public Map<TrackerIdScheme, Map<String, Relationship>> getRelationships()", "class_method_signature": "TrackerPreheat.getRelationships()", "testcase": false, "constructor": false}, {"identifier": "setRelationships", "parameters": "( Map<TrackerIdScheme, Map<String, Relationship>> relationships )", "modifiers": "public", "return": "void", "signature": "void setRelationships( Map<TrackerIdScheme, Map<String, Relationship>> relationships )", "full_signature": "public void setRelationships( Map<TrackerIdScheme, Map<String, Relationship>> relationships )", "class_method_signature": "TrackerPreheat.setRelationships( Map<TrackerIdScheme, Map<String, Relationship>> relationships )", "testcase": false, "constructor": false}, {"identifier": "getRelationship", "parameters": "( TrackerIdScheme identifier, String relationship )", "modifiers": "public", "return": "Relationship", "signature": "Relationship getRelationship( TrackerIdScheme identifier, String relationship )", "full_signature": "public Relationship getRelationship( TrackerIdScheme identifier, String relationship )", "class_method_signature": "TrackerPreheat.getRelationship( TrackerIdScheme identifier, String relationship )", "testcase": false, "constructor": false}, {"identifier": "putRelationships", "parameters": "( TrackerIdScheme identifier, List<Relationship> relationships )", "modifiers": "public", "return": "void", "signature": "void putRelationships( TrackerIdScheme identifier, List<Relationship> relationships )", "full_signature": "public void putRelationships( TrackerIdScheme identifier, List<Relationship> relationships )", "class_method_signature": "TrackerPreheat.putRelationships( TrackerIdScheme identifier, List<Relationship> relationships )", "testcase": false, "constructor": false}, {"identifier": "putRelationship", "parameters": "( TrackerIdScheme identifier, String relationshipUid, Relationship relationship )", "modifiers": "public", "return": "void", "signature": "void putRelationship( TrackerIdScheme identifier, String relationshipUid, Relationship relationship )", "full_signature": "public void putRelationship( TrackerIdScheme identifier, String relationshipUid, Relationship relationship )", "class_method_signature": "TrackerPreheat.putRelationship( TrackerIdScheme identifier, String relationshipUid, Relationship relationship )", "testcase": false, "constructor": false}, {"identifier": "getRealClass", "parameters": "( Class<?> klass )", "modifiers": "public static", "return": "Class<?>", "signature": "Class<?> getRealClass( Class<?> klass )", "full_signature": "public static Class<?> getRealClass( Class<?> klass )", "class_method_signature": "TrackerPreheat.getRealClass( Class<?> klass )", "testcase": false, "constructor": false}, {"identifier": "isDefaultClass", "parameters": "( IdentifiableObject object )", "modifiers": "public static", "return": "boolean", "signature": "boolean isDefaultClass( IdentifiableObject object )", "full_signature": "public static boolean isDefaultClass( IdentifiableObject object )", "class_method_signature": "TrackerPreheat.isDefaultClass( IdentifiableObject object )", "testcase": false, "constructor": false}, {"identifier": "isDefaultClass", "parameters": "( Class<?> klass )", "modifiers": "public static", "return": "boolean", "signature": "boolean isDefaultClass( Class<?> klass )", "full_signature": "public static boolean isDefaultClass( Class<?> klass )", "class_method_signature": "TrackerPreheat.isDefaultClass( Class<?> klass )", "testcase": false, "constructor": false}, {"identifier": "isDefault", "parameters": "( IdentifiableObject object )", "modifiers": "public", "return": "boolean", "signature": "boolean isDefault( IdentifiableObject object )", "full_signature": "public boolean isDefault( IdentifiableObject object )", "class_method_signature": "TrackerPreheat.isDefault( IdentifiableObject object )", "testcase": false, "constructor": false}, {"identifier": "getIdentifiers", "parameters": "()", "modifiers": "public", "return": "TrackerIdentifierParams", "signature": "TrackerIdentifierParams getIdentifiers()", "full_signature": "public TrackerIdentifierParams getIdentifiers()", "class_method_signature": "TrackerPreheat.getIdentifiers()", "testcase": false, "constructor": false}, {"identifier": "setIdentifiers", "parameters": "( TrackerIdentifierParams identifiers )", "modifiers": "public", "return": "void", "signature": "void setIdentifiers( TrackerIdentifierParams identifiers )", "full_signature": "public void setIdentifiers( TrackerIdentifierParams identifiers )", "class_method_signature": "TrackerPreheat.setIdentifiers( TrackerIdentifierParams identifiers )", "testcase": false, "constructor": false}, {"identifier": "getProgramInstances", "parameters": "()", "modifiers": "public", "return": "Map<String, List<ProgramInstance>>", "signature": "Map<String, List<ProgramInstance>> getProgramInstances()", "full_signature": "public Map<String, List<ProgramInstance>> getProgramInstances()", "class_method_signature": "TrackerPreheat.getProgramInstances()", "testcase": false, "constructor": false}, {"identifier": "setProgramInstances", "parameters": "(Map<String, List<ProgramInstance>> programInstances)", "modifiers": "public", "return": "void", "signature": "void setProgramInstances(Map<String, List<ProgramInstance>> programInstances)", "full_signature": "public void setProgramInstances(Map<String, List<ProgramInstance>> programInstances)", "class_method_signature": "TrackerPreheat.setProgramInstances(Map<String, List<ProgramInstance>> programInstances)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TrackerPreheat.toString()", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-tracker/src/main/java/org/hisp/dhis/tracker/preheat/TrackerPreheat.java"}, "focal_method": {"identifier": "isEmpty", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isEmpty()\n    {\n        return map.isEmpty();\n    }", "signature": "boolean isEmpty()", "full_signature": "public boolean isEmpty()", "class_method_signature": "TrackerPreheat.isEmpty()", "testcase": false, "constructor": false, "invocations": ["isEmpty"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}