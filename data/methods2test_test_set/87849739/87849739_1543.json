{"test_class": {"identifier": "ImmutableAuthorizationContextTypeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String KNOWN_TYPE_VALUE = \"test-auth-context-type\";", "modifier": "private static final", "type": "String", "declarator": "KNOWN_TYPE_VALUE = \"test-auth-context-type\"", "var_name": "KNOWN_TYPE_VALUE"}], "file": "model/base/src/test/java/org/eclipse/ditto/model/base/auth/ImmutableAuthorizationContextTypeTest.java"}, "test_case": {"identifier": "compareToWorksAsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void compareToWorksAsExpected() {\n        final ImmutableAuthorizationContextType authCtxTypeAbc = ImmutableAuthorizationContextType.of(\"abc\");\n        final ImmutableAuthorizationContextType authCtxTypeDef = ImmutableAuthorizationContextType.of(\"def\");\n\n        try (final AutoCloseableSoftAssertions softly = new AutoCloseableSoftAssertions()) {\n            softly.assertThat(authCtxTypeAbc.compareTo(authCtxTypeAbc))\n                    .as(\"compare with equal\")\n                    .isZero();\n            softly.assertThat(authCtxTypeAbc.compareTo(authCtxTypeDef))\n                    .as(\"compare with greater\")\n                    .isNegative();\n            softly.assertThat(authCtxTypeDef.compareTo(authCtxTypeAbc))\n                    .as(\"compare with less\")\n                    .isPositive();\n        }\n    }", "signature": "void compareToWorksAsExpected()", "full_signature": "@Test public void compareToWorksAsExpected()", "class_method_signature": "ImmutableAuthorizationContextTypeTest.compareToWorksAsExpected()", "testcase": true, "constructor": false, "invocations": ["of", "of", "isZero", "as", "assertThat", "compareTo", "isNegative", "as", "assertThat", "compareTo", "isPositive", "as", "assertThat", "compareTo"]}, "focal_class": {"identifier": "ImmutableAuthorizationContextType", "superclass": "extends AuthorizationContextType", "interfaces": "", "fields": [], "methods": [{"identifier": "ImmutableAuthorizationContextType", "parameters": "(final String type)", "modifiers": "private", "return": "", "signature": " ImmutableAuthorizationContextType(final String type)", "full_signature": "private  ImmutableAuthorizationContextType(final String type)", "class_method_signature": "ImmutableAuthorizationContextType.ImmutableAuthorizationContextType(final String type)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final CharSequence type)", "modifiers": "static", "return": "ImmutableAuthorizationContextType", "signature": "ImmutableAuthorizationContextType of(final CharSequence type)", "full_signature": "static ImmutableAuthorizationContextType of(final CharSequence type)", "class_method_signature": "ImmutableAuthorizationContextType.of(final CharSequence type)", "testcase": false, "constructor": false}], "file": "model/base/src/main/java/org/eclipse/ditto/model/base/auth/ImmutableAuthorizationContextType.java"}, "focal_method": {"identifier": "of", "parameters": "(final CharSequence type)", "modifiers": "static", "return": "ImmutableAuthorizationContextType", "body": "static ImmutableAuthorizationContextType of(final CharSequence type) {\n        return new ImmutableAuthorizationContextType(checkNotNull(type, \"type\").toString());\n    }", "signature": "ImmutableAuthorizationContextType of(final CharSequence type)", "full_signature": "static ImmutableAuthorizationContextType of(final CharSequence type)", "class_method_signature": "ImmutableAuthorizationContextType.of(final CharSequence type)", "testcase": false, "constructor": false, "invocations": ["toString", "checkNotNull"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}