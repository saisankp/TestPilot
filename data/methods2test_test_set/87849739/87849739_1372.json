{"test_class": {"identifier": "ImmutableLabelTest", "superclass": "extends LengthRestrictionTestBase", "interfaces": "", "fields": [], "file": "model/policies/src/test/java/org/eclipse/ditto/model/policies/ImmutableLabelTest.java"}, "test_case": {"identifier": "createValidLabelAttribute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createValidLabelAttribute() {\n        ImmutableLabel.of(generateStringWithMaxLength());\n    }", "signature": "void createValidLabelAttribute()", "full_signature": "@Test public void createValidLabelAttribute()", "class_method_signature": "ImmutableLabelTest.createValidLabelAttribute()", "testcase": true, "constructor": false, "invocations": ["of", "generateStringWithMaxLength"]}, "focal_class": {"identifier": "ImmutableLabel", "superclass": "", "interfaces": "implements Label", "fields": [{"original_string": "private final String labelValue;", "modifier": "private final", "type": "String", "declarator": "labelValue", "var_name": "labelValue"}], "methods": [{"identifier": "ImmutableLabel", "parameters": "(final String theLabelValue)", "modifiers": "private", "return": "", "signature": " ImmutableLabel(final String theLabelValue)", "full_signature": "private  ImmutableLabel(final String theLabelValue)", "class_method_signature": "ImmutableLabel.ImmutableLabel(final String theLabelValue)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final CharSequence labelValue)", "modifiers": "public static", "return": "Label", "signature": "Label of(final CharSequence labelValue)", "full_signature": "public static Label of(final CharSequence labelValue)", "class_method_signature": "ImmutableLabel.of(final CharSequence labelValue)", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int length()", "full_signature": "@Override public int length()", "class_method_signature": "ImmutableLabel.length()", "testcase": false, "constructor": false}, {"identifier": "charAt", "parameters": "(final int index)", "modifiers": "@Override public", "return": "char", "signature": "char charAt(final int index)", "full_signature": "@Override public char charAt(final int index)", "class_method_signature": "ImmutableLabel.charAt(final int index)", "testcase": false, "constructor": false}, {"identifier": "subSequence", "parameters": "(final int start, final int end)", "modifiers": "@Override public", "return": "CharSequence", "signature": "CharSequence subSequence(final int start, final int end)", "full_signature": "@Override public CharSequence subSequence(final int start, final int end)", "class_method_signature": "ImmutableLabel.subSequence(final int start, final int end)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ImmutableLabel.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableLabel.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override @Nonnull public", "return": "String", "signature": "String toString()", "full_signature": "@Override @Nonnull public String toString()", "class_method_signature": "ImmutableLabel.toString()", "testcase": false, "constructor": false}], "file": "model/policies/src/main/java/org/eclipse/ditto/model/policies/ImmutableLabel.java"}, "focal_method": {"identifier": "of", "parameters": "(final CharSequence labelValue)", "modifiers": "public static", "return": "Label", "body": "public static Label of(final CharSequence labelValue) {\n        argumentNotEmpty(labelValue, \"label value\");\n\n        final Validator validator = NoControlCharactersNoSlashesValidator.getInstance(labelValue);\n        if (!validator.isValid()) {\n            throw PolicyEntryInvalidException.newBuilder()\n                    .message(\"The Policy Label \" + labelValue + \" is invalid\")\n                    .description(validator.getReason().orElse(null))\n                    .build();\n        }\n\n        return new ImmutableLabel(labelValue.toString());\n    }", "signature": "Label of(final CharSequence labelValue)", "full_signature": "public static Label of(final CharSequence labelValue)", "class_method_signature": "ImmutableLabel.of(final CharSequence labelValue)", "testcase": false, "constructor": false, "invocations": ["argumentNotEmpty", "getInstance", "isValid", "build", "description", "message", "newBuilder", "orElse", "getReason", "toString"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}