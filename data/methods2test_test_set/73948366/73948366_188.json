{"test_class": {"identifier": "SSHCertRecordTest", "superclass": "", "interfaces": "", "fields": [], "file": "libs/java/server_common/src/test/java/com/yahoo/athenz/common/server/ssh/SSHCertRecordTest.java"}, "test_case": {"identifier": "testSSHCertRecord", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSSHCertRecord() {\n        \n        SSHCertRecord certRecord = new SSHCertRecord();\n\n        certRecord.setService(\"cn\");\n        certRecord.setInstanceId(\"instance-id\");\n        certRecord.setPrincipals(\"host1,host2\");\n        certRecord.setClientIP(\"10.1.1.1\");\n        certRecord.setPrivateIP(\"10.1.1.2\");\n\n        assertEquals(certRecord.getService(), \"cn\");\n        assertEquals(certRecord.getInstanceId(), \"instance-id\");\n        assertEquals(certRecord.getPrincipals(), \"host1,host2\");\n        assertEquals(certRecord.getClientIP(), \"10.1.1.1\");\n        assertEquals(certRecord.getPrivateIP(), \"10.1.1.2\");\n    }", "signature": "void testSSHCertRecord()", "full_signature": "@Test public void testSSHCertRecord()", "class_method_signature": "SSHCertRecordTest.testSSHCertRecord()", "testcase": true, "constructor": false, "invocations": ["setService", "setInstanceId", "setPrincipals", "setClientIP", "setPrivateIP", "assertEquals", "getService", "assertEquals", "getInstanceId", "assertEquals", "getPrincipals", "assertEquals", "getClientIP", "assertEquals", "getPrivateIP"]}, "focal_class": {"identifier": "SSHCertRecord", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String service;", "modifier": "private", "type": "String", "declarator": "service", "var_name": "service"}, {"original_string": "private String instanceId;", "modifier": "private", "type": "String", "declarator": "instanceId", "var_name": "instanceId"}, {"original_string": "private String principals;", "modifier": "private", "type": "String", "declarator": "principals", "var_name": "principals"}, {"original_string": "private String clientIP;", "modifier": "private", "type": "String", "declarator": "clientIP", "var_name": "clientIP"}, {"original_string": "private String privateIP;", "modifier": "private", "type": "String", "declarator": "privateIP", "var_name": "privateIP"}], "methods": [{"identifier": "SSHCertRecord", "parameters": "()", "modifiers": "public", "return": "", "signature": " SSHCertRecord()", "full_signature": "public  SSHCertRecord()", "class_method_signature": "SSHCertRecord.SSHCertRecord()", "testcase": false, "constructor": true}, {"identifier": "getInstanceId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getInstanceId()", "full_signature": "public String getInstanceId()", "class_method_signature": "SSHCertRecord.getInstanceId()", "testcase": false, "constructor": false}, {"identifier": "setInstanceId", "parameters": "(String instanceId)", "modifiers": "public", "return": "void", "signature": "void setInstanceId(String instanceId)", "full_signature": "public void setInstanceId(String instanceId)", "class_method_signature": "SSHCertRecord.setInstanceId(String instanceId)", "testcase": false, "constructor": false}, {"identifier": "getService", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getService()", "full_signature": "public String getService()", "class_method_signature": "SSHCertRecord.getService()", "testcase": false, "constructor": false}, {"identifier": "setService", "parameters": "(String service)", "modifiers": "public", "return": "void", "signature": "void setService(String service)", "full_signature": "public void setService(String service)", "class_method_signature": "SSHCertRecord.setService(String service)", "testcase": false, "constructor": false}, {"identifier": "getPrincipals", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPrincipals()", "full_signature": "public String getPrincipals()", "class_method_signature": "SSHCertRecord.getPrincipals()", "testcase": false, "constructor": false}, {"identifier": "setPrincipals", "parameters": "(String principals)", "modifiers": "public", "return": "void", "signature": "void setPrincipals(String principals)", "full_signature": "public void setPrincipals(String principals)", "class_method_signature": "SSHCertRecord.setPrincipals(String principals)", "testcase": false, "constructor": false}, {"identifier": "getClientIP", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClientIP()", "full_signature": "public String getClientIP()", "class_method_signature": "SSHCertRecord.getClientIP()", "testcase": false, "constructor": false}, {"identifier": "setClientIP", "parameters": "(String clientIP)", "modifiers": "public", "return": "void", "signature": "void setClientIP(String clientIP)", "full_signature": "public void setClientIP(String clientIP)", "class_method_signature": "SSHCertRecord.setClientIP(String clientIP)", "testcase": false, "constructor": false}, {"identifier": "getPrivateIP", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPrivateIP()", "full_signature": "public String getPrivateIP()", "class_method_signature": "SSHCertRecord.getPrivateIP()", "testcase": false, "constructor": false}, {"identifier": "setPrivateIP", "parameters": "(String privateIP)", "modifiers": "public", "return": "void", "signature": "void setPrivateIP(String privateIP)", "full_signature": "public void setPrivateIP(String privateIP)", "class_method_signature": "SSHCertRecord.setPrivateIP(String privateIP)", "testcase": false, "constructor": false}], "file": "libs/java/server_common/src/main/java/com/yahoo/athenz/common/server/ssh/SSHCertRecord.java"}, "focal_method": {"identifier": "SSHCertRecord", "parameters": "()", "modifiers": "public", "return": "", "body": "public SSHCertRecord() {\n    }", "signature": " SSHCertRecord()", "full_signature": "public  SSHCertRecord()", "class_method_signature": "SSHCertRecord.SSHCertRecord()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 73948366, "url": "https://github.com/yahoo/athenz", "stars": 394, "created": "11/16/2016 6:23:08 PM +00:00", "updates": "2020-01-27T15:36:13+00:00", "fork": "False", "license": "licensed"}}