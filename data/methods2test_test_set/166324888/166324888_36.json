{"test_class": {"identifier": "SendTransactionPresenterTest", "superclass": "extends BaseTestCase", "interfaces": "", "fields": [{"original_string": "@Mock\n    private SendTransationContract.View view;", "modifier": "@Mock\n    private", "type": "SendTransationContract.View", "declarator": "view", "var_name": "view"}, {"original_string": "private SendTransactionPresenter presenter;", "modifier": "private", "type": "SendTransactionPresenter", "declarator": "presenter", "var_name": "presenter"}], "file": "wallet/src/test/java/com/platon/aton/component/ui/presenter/SendTransactionPresenterTest.java"}, "test_case": {"identifier": "checkToAddressNotSelf", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkToAddressNotSelf(){\n        String toAddress = \"lat1x8z5nfgjnaryutayxxkzzkrfzenpwl7k6r2a81\";\n        presenter.checkToAddressNotSelf(toAddress,toAddress);\n\n    }", "signature": "void checkToAddressNotSelf()", "full_signature": "@Test public void checkToAddressNotSelf()", "class_method_signature": "SendTransactionPresenterTest.checkToAddressNotSelf()", "testcase": true, "constructor": false, "invocations": ["checkToAddressNotSelf"]}, "focal_class": {"identifier": "SendTransactionPresenter", "superclass": "extends BasePresenter<SendTransationContract.View>", "interfaces": "implements SendTransationContract.Presenter", "fields": [{"original_string": "private final static int DEFAULT_PERCENT = 0;", "modifier": "private final static", "type": "int", "declarator": "DEFAULT_PERCENT = 0", "var_name": "DEFAULT_PERCENT"}, {"original_string": "private final static BigInteger DEFAULT_EXCHANGE_RATE = BigInteger.valueOf(1000000000000000000L);", "modifier": "private final static", "type": "BigInteger", "declarator": "DEFAULT_EXCHANGE_RATE = BigInteger.valueOf(1000000000000000000L)", "var_name": "DEFAULT_EXCHANGE_RATE"}, {"original_string": "private final static BigInteger DEFAULT_GAS_LIMIT = DefaultGasProvider.GAS_LIMIT;", "modifier": "private final static", "type": "BigInteger", "declarator": "DEFAULT_GAS_LIMIT = DefaultGasProvider.GAS_LIMIT", "var_name": "DEFAULT_GAS_LIMIT"}, {"original_string": "private final static BigInteger DEFAULT_MIN_GASPRICE = new BigInteger(AppConfigManager.getInstance().getMinGasPrice());", "modifier": "private final static", "type": "BigInteger", "declarator": "DEFAULT_MIN_GASPRICE = new BigInteger(AppConfigManager.getInstance().getMinGasPrice())", "var_name": "DEFAULT_MIN_GASPRICE"}, {"original_string": "private BigInteger gasLimit = DEFAULT_GAS_LIMIT;", "modifier": "private", "type": "BigInteger", "declarator": "gasLimit = DEFAULT_GAS_LIMIT", "var_name": "gasLimit"}, {"original_string": "private BigInteger minGasPrice = DEFAULT_MIN_GASPRICE;", "modifier": "private", "type": "BigInteger", "declarator": "minGasPrice = DEFAULT_MIN_GASPRICE", "var_name": "minGasPrice"}, {"original_string": "private BigInteger maxGasPrice = DEFAULT_MIN_GASPRICE.multiply(BigInteger.valueOf(6));", "modifier": "private", "type": "BigInteger", "declarator": "maxGasPrice = DEFAULT_MIN_GASPRICE.multiply(BigInteger.valueOf(6))", "var_name": "maxGasPrice"}, {"original_string": "private BigInteger gasPrice;", "modifier": "private", "type": "BigInteger", "declarator": "gasPrice", "var_name": "gasPrice"}, {"original_string": "private float progress = DEFAULT_PERCENT;", "modifier": "private", "type": "float", "declarator": "progress = DEFAULT_PERCENT", "var_name": "progress"}, {"original_string": "private BigInteger nonce;", "modifier": "private", "type": "BigInteger", "declarator": "nonce", "var_name": "nonce"}, {"original_string": "private String feeAmount;", "modifier": "private", "type": "String", "declarator": "feeAmount", "var_name": "feeAmount"}, {"original_string": "private Wallet walletEntity;", "modifier": "private", "type": "Wallet", "declarator": "walletEntity", "var_name": "walletEntity"}, {"original_string": "private String toAddress;", "modifier": "private", "type": "String", "declarator": "toAddress", "var_name": "toAddress"}, {"original_string": "private String balance = \"\";", "modifier": "private", "type": "String", "declarator": "balance = \"\"", "var_name": "balance"}], "methods": [{"identifier": "init", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void init()", "full_signature": "@Override public void init()", "class_method_signature": "SendTransactionPresenter.init()", "testcase": false, "constructor": false}, {"identifier": "getSenderAddress", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getSenderAddress()", "full_signature": "public String getSenderAddress()", "class_method_signature": "SendTransactionPresenter.getSenderAddress()", "testcase": false, "constructor": false}, {"identifier": "fetchDefaultWalletInfo", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void fetchDefaultWalletInfo()", "full_signature": "@Override public void fetchDefaultWalletInfo()", "class_method_signature": "SendTransactionPresenter.fetchDefaultWalletInfo()", "testcase": false, "constructor": false}, {"identifier": "getAccountBalance", "parameters": "(Wallet wallet)", "modifiers": "private", "return": "void", "signature": "void getAccountBalance(Wallet wallet)", "full_signature": "private void getAccountBalance(Wallet wallet)", "class_method_signature": "SendTransactionPresenter.getAccountBalance(Wallet wallet)", "testcase": false, "constructor": false}, {"identifier": "getEstimateGas", "parameters": "(Wallet mWallet)", "modifiers": "public", "return": "void", "signature": "void getEstimateGas(Wallet mWallet)", "full_signature": "public void getEstimateGas(Wallet mWallet)", "class_method_signature": "SendTransactionPresenter.getEstimateGas(Wallet mWallet)", "testcase": false, "constructor": false}, {"identifier": "getGasPrice", "parameters": "()", "modifiers": "private", "return": "Disposable", "signature": "Disposable getGasPrice()", "full_signature": "private Disposable getGasPrice()", "class_method_signature": "SendTransactionPresenter.getGasPrice()", "testcase": false, "constructor": false}, {"identifier": "transferAllBalance", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void transferAllBalance()", "full_signature": "@Override public void transferAllBalance()", "class_method_signature": "SendTransactionPresenter.transferAllBalance()", "testcase": false, "constructor": false}, {"identifier": "calculateFee", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void calculateFee()", "full_signature": "@Override public void calculateFee()", "class_method_signature": "SendTransactionPresenter.calculateFee()", "testcase": false, "constructor": false}, {"identifier": "calculateFeeAndTime", "parameters": "(float progress)", "modifiers": "@Override public", "return": "void", "signature": "void calculateFeeAndTime(float progress)", "full_signature": "@Override public void calculateFeeAndTime(float progress)", "class_method_signature": "SendTransactionPresenter.calculateFeeAndTime(float progress)", "testcase": false, "constructor": false}, {"identifier": "checkToAddress", "parameters": "(String toAddress)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean checkToAddress(String toAddress)", "full_signature": "@Override public boolean checkToAddress(String toAddress)", "class_method_signature": "SendTransactionPresenter.checkToAddress(String toAddress)", "testcase": false, "constructor": false}, {"identifier": "checkToAddressNotSelf", "parameters": "(String toAddress,String address)", "modifiers": "public", "return": "boolean", "signature": "boolean checkToAddressNotSelf(String toAddress,String address)", "full_signature": "public boolean checkToAddressNotSelf(String toAddress,String address)", "class_method_signature": "SendTransactionPresenter.checkToAddressNotSelf(String toAddress,String address)", "testcase": false, "constructor": false}, {"identifier": "checkTransferAmount", "parameters": "(String transferAmount)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean checkTransferAmount(String transferAmount)", "full_signature": "@Override public boolean checkTransferAmount(String transferAmount)", "class_method_signature": "SendTransactionPresenter.checkTransferAmount(String transferAmount)", "testcase": false, "constructor": false}, {"identifier": "checkTransferAmountDueToGasLimitChanged", "parameters": "(String transferAmount)", "modifiers": "public", "return": "void", "signature": "void checkTransferAmountDueToGasLimitChanged(String transferAmount)", "full_signature": "public void checkTransferAmountDueToGasLimitChanged(String transferAmount)", "class_method_signature": "SendTransactionPresenter.checkTransferAmountDueToGasLimitChanged(String transferAmount)", "testcase": false, "constructor": false}, {"identifier": "submit", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void submit()", "full_signature": "@Override public void submit()", "class_method_signature": "SendTransactionPresenter.submit()", "testcase": false, "constructor": false}, {"identifier": "updateSendTransactionButtonStatus", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void updateSendTransactionButtonStatus()", "full_signature": "@Override public void updateSendTransactionButtonStatus()", "class_method_signature": "SendTransactionPresenter.updateSendTransactionButtonStatus()", "testcase": false, "constructor": false}, {"identifier": "saveWallet", "parameters": "(String name, String address)", "modifiers": "@Override public", "return": "void", "signature": "void saveWallet(String name, String address)", "full_signature": "@Override public void saveWallet(String name, String address)", "class_method_signature": "SendTransactionPresenter.saveWallet(String name, String address)", "testcase": false, "constructor": false}, {"identifier": "updateAssetsTab", "parameters": "(int tabIndex)", "modifiers": "@Override public", "return": "void", "signature": "void updateAssetsTab(int tabIndex)", "full_signature": "@Override public void updateAssetsTab(int tabIndex)", "class_method_signature": "SendTransactionPresenter.updateAssetsTab(int tabIndex)", "testcase": false, "constructor": false}, {"identifier": "setGasLimit", "parameters": "(String gasLimit)", "modifiers": "@Override public", "return": "void", "signature": "void setGasLimit(String gasLimit)", "full_signature": "@Override public void setGasLimit(String gasLimit)", "class_method_signature": "SendTransactionPresenter.setGasLimit(String gasLimit)", "testcase": false, "constructor": false}, {"identifier": "checkAddressBook", "parameters": "(String address)", "modifiers": "@Override public", "return": "void", "signature": "void checkAddressBook(String address)", "full_signature": "@Override public void checkAddressBook(String address)", "class_method_signature": "SendTransactionPresenter.checkAddressBook(String address)", "testcase": false, "constructor": false}, {"identifier": "sendTransaction", "parameters": "(String toAddress, String transferAmount, String remark)", "modifiers": "@SuppressLint(\"CheckResult\") private", "return": "void", "signature": "void sendTransaction(String toAddress, String transferAmount, String remark)", "full_signature": "@SuppressLint(\"CheckResult\") private void sendTransaction(String toAddress, String transferAmount, String remark)", "class_method_signature": "SendTransactionPresenter.sendTransaction(String toAddress, String transferAmount, String remark)", "testcase": false, "constructor": false}, {"identifier": "showResendTransactionReminderDialogFragment", "parameters": "(TransactionRecordEntity transactionRecordEntity, String remark)", "modifiers": "private", "return": "void", "signature": "void showResendTransactionReminderDialogFragment(TransactionRecordEntity transactionRecordEntity, String remark)", "full_signature": "private void showResendTransactionReminderDialogFragment(TransactionRecordEntity transactionRecordEntity, String remark)", "class_method_signature": "SendTransactionPresenter.showResendTransactionReminderDialogFragment(TransactionRecordEntity transactionRecordEntity, String remark)", "testcase": false, "constructor": false}, {"identifier": "showTransactionInfoDialogFragment", "parameters": "(TransactionRecordEntity transactionRecordEntity, String remark)", "modifiers": "@SuppressLint(\"CheckResult\") private", "return": "void", "signature": "void showTransactionInfoDialogFragment(TransactionRecordEntity transactionRecordEntity, String remark)", "full_signature": "@SuppressLint(\"CheckResult\") private void showTransactionInfoDialogFragment(TransactionRecordEntity transactionRecordEntity, String remark)", "class_method_signature": "SendTransactionPresenter.showTransactionInfoDialogFragment(TransactionRecordEntity transactionRecordEntity, String remark)", "testcase": false, "constructor": false}, {"identifier": "getDefaultProgress", "parameters": "()", "modifiers": "private", "return": "float", "signature": "float getDefaultProgress()", "full_signature": "private float getDefaultProgress()", "class_method_signature": "SendTransactionPresenter.getDefaultProgress()", "testcase": false, "constructor": false}, {"identifier": "initGasPrice", "parameters": "(BigInteger recommendedGasPrice)", "modifiers": "private", "return": "void", "signature": "void initGasPrice(BigInteger recommendedGasPrice)", "full_signature": "private void initGasPrice(BigInteger recommendedGasPrice)", "class_method_signature": "SendTransactionPresenter.initGasPrice(BigInteger recommendedGasPrice)", "testcase": false, "constructor": false}, {"identifier": "getDGasPrice", "parameters": "()", "modifiers": "private", "return": "BigInteger", "signature": "BigInteger getDGasPrice()", "full_signature": "private BigInteger getDGasPrice()", "class_method_signature": "SendTransactionPresenter.getDGasPrice()", "testcase": false, "constructor": false}, {"identifier": "getDFeeAmount", "parameters": "()", "modifiers": "private", "return": "BigInteger", "signature": "BigInteger getDFeeAmount()", "full_signature": "private BigInteger getDFeeAmount()", "class_method_signature": "SendTransactionPresenter.getDFeeAmount()", "testcase": false, "constructor": false}, {"identifier": "getMinFeeAmount", "parameters": "()", "modifiers": "private", "return": "BigInteger", "signature": "BigInteger getMinFeeAmount()", "full_signature": "private BigInteger getMinFeeAmount()", "class_method_signature": "SendTransactionPresenter.getMinFeeAmount()", "testcase": false, "constructor": false}, {"identifier": "getMaxFeeAmount", "parameters": "()", "modifiers": "private", "return": "BigInteger", "signature": "BigInteger getMaxFeeAmount()", "full_signature": "private BigInteger getMaxFeeAmount()", "class_method_signature": "SendTransactionPresenter.getMaxFeeAmount()", "testcase": false, "constructor": false}, {"identifier": "sendTransaction", "parameters": "(TransactionRecordEntity transactionRecordEntity, ECKeyPair ecKeyPair, String feeAmount, String remark)", "modifiers": "@SuppressLint(\"CheckResult\") private", "return": "void", "signature": "void sendTransaction(TransactionRecordEntity transactionRecordEntity, ECKeyPair ecKeyPair, String feeAmount, String remark)", "full_signature": "@SuppressLint(\"CheckResult\") private void sendTransaction(TransactionRecordEntity transactionRecordEntity, ECKeyPair ecKeyPair, String feeAmount, String remark)", "class_method_signature": "SendTransactionPresenter.sendTransaction(TransactionRecordEntity transactionRecordEntity, ECKeyPair ecKeyPair, String feeAmount, String remark)", "testcase": false, "constructor": false}, {"identifier": "backToTransactionListWithDelay", "parameters": "()", "modifiers": "@SuppressLint(\"CheckResult\") private", "return": "void", "signature": "void backToTransactionListWithDelay()", "full_signature": "@SuppressLint(\"CheckResult\") private void backToTransactionListWithDelay()", "class_method_signature": "SendTransactionPresenter.backToTransactionListWithDelay()", "testcase": false, "constructor": false}, {"identifier": "checkBalance", "parameters": "(Wallet walletEntity, Credentials credentials, BigInteger gasPrice)", "modifiers": "private", "return": "Single<Credentials>", "signature": "Single<Credentials> checkBalance(Wallet walletEntity, Credentials credentials, BigInteger gasPrice)", "full_signature": "private Single<Credentials> checkBalance(Wallet walletEntity, Credentials credentials, BigInteger gasPrice)", "class_method_signature": "SendTransactionPresenter.checkBalance(Wallet walletEntity, Credentials credentials, BigInteger gasPrice)", "testcase": false, "constructor": false}, {"identifier": "showInputWalletPasswordDialogFragment", "parameters": "(TransactionRecordEntity transactionRecordEntity, String feeAmount, String remark)", "modifiers": "private", "return": "void", "signature": "void showInputWalletPasswordDialogFragment(TransactionRecordEntity transactionRecordEntity, String feeAmount, String remark)", "full_signature": "private void showInputWalletPasswordDialogFragment(TransactionRecordEntity transactionRecordEntity, String feeAmount, String remark)", "class_method_signature": "SendTransactionPresenter.showInputWalletPasswordDialogFragment(TransactionRecordEntity transactionRecordEntity, String feeAmount, String remark)", "testcase": false, "constructor": false}, {"identifier": "showTransactionAuthorizationDialogFragment", "parameters": "(TransactionRecordEntity transactionRecordEntity, String gasLimit, String gasPrice,BigInteger nonce, String remark)", "modifiers": "private", "return": "void", "signature": "void showTransactionAuthorizationDialogFragment(TransactionRecordEntity transactionRecordEntity, String gasLimit, String gasPrice,BigInteger nonce, String remark)", "full_signature": "private void showTransactionAuthorizationDialogFragment(TransactionRecordEntity transactionRecordEntity, String gasLimit, String gasPrice,BigInteger nonce, String remark)", "class_method_signature": "SendTransactionPresenter.showTransactionAuthorizationDialogFragment(TransactionRecordEntity transactionRecordEntity, String gasLimit, String gasPrice,BigInteger nonce, String remark)", "testcase": false, "constructor": false}, {"identifier": "insertAndDeleteTransactionRecord", "parameters": "(TransactionRecordEntity transactionRecordEntity)", "modifiers": "private", "return": "void", "signature": "void insertAndDeleteTransactionRecord(TransactionRecordEntity transactionRecordEntity)", "full_signature": "private void insertAndDeleteTransactionRecord(TransactionRecordEntity transactionRecordEntity)", "class_method_signature": "SendTransactionPresenter.insertAndDeleteTransactionRecord(TransactionRecordEntity transactionRecordEntity)", "testcase": false, "constructor": false}, {"identifier": "updateFeeAmount", "parameters": "(float progress)", "modifiers": "private", "return": "void", "signature": "void updateFeeAmount(float progress)", "full_signature": "private void updateFeeAmount(float progress)", "class_method_signature": "SendTransactionPresenter.updateFeeAmount(float progress)", "testcase": false, "constructor": false}, {"identifier": "setDefaultProgress", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setDefaultProgress()", "full_signature": "private void setDefaultProgress()", "class_method_signature": "SendTransactionPresenter.setDefaultProgress()", "testcase": false, "constructor": false}, {"identifier": "setDefaultFeeAmount", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setDefaultFeeAmount()", "full_signature": "private void setDefaultFeeAmount()", "class_method_signature": "SendTransactionPresenter.setDefaultFeeAmount()", "testcase": false, "constructor": false}, {"identifier": "setDefaultGasLimit", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void setDefaultGasLimit()", "full_signature": "private void setDefaultGasLimit()", "class_method_signature": "SendTransactionPresenter.setDefaultGasLimit()", "testcase": false, "constructor": false}, {"identifier": "updateGasPrice", "parameters": "(float progress)", "modifiers": "private", "return": "void", "signature": "void updateGasPrice(float progress)", "full_signature": "private void updateGasPrice(float progress)", "class_method_signature": "SendTransactionPresenter.updateGasPrice(float progress)", "testcase": false, "constructor": false}, {"identifier": "isBalanceEnough", "parameters": "(String transferAmount)", "modifiers": "private", "return": "boolean", "signature": "boolean isBalanceEnough(String transferAmount)", "full_signature": "private boolean isBalanceEnough(String transferAmount)", "class_method_signature": "SendTransactionPresenter.isBalanceEnough(String transferAmount)", "testcase": false, "constructor": false}, {"identifier": "buildSendTransactionInfo", "parameters": "(String fromWallet, String recipient, String fee)", "modifiers": "private", "return": "Map<String, String>", "signature": "Map<String, String> buildSendTransactionInfo(String fromWallet, String recipient, String fee)", "full_signature": "private Map<String, String> buildSendTransactionInfo(String fromWallet, String recipient, String fee)", "class_method_signature": "SendTransactionPresenter.buildSendTransactionInfo(String fromWallet, String recipient, String fee)", "testcase": false, "constructor": false}], "file": "wallet/src/main/java/com/platon/aton/component/ui/presenter/SendTransactionPresenter.java"}, "focal_method": {"identifier": "checkToAddressNotSelf", "parameters": "(String toAddress,String address)", "modifiers": "public", "return": "boolean", "body": "public boolean checkToAddressNotSelf(String toAddress,String address){\n\n        if (toAddress.equalsIgnoreCase(address)) {\n            showLongToast(R.string.can_not_send_to_itself);\n            return false;\n        }\n        return true;\n    }", "signature": "boolean checkToAddressNotSelf(String toAddress,String address)", "full_signature": "public boolean checkToAddressNotSelf(String toAddress,String address)", "class_method_signature": "SendTransactionPresenter.checkToAddressNotSelf(String toAddress,String address)", "testcase": false, "constructor": false, "invocations": ["equalsIgnoreCase", "showLongToast"]}, "repository": {"repo_id": 166324888, "url": "https://github.com/PlatONnetwork/ATON-Android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 118901, "license": "licensed"}}