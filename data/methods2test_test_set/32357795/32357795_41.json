{"test_class": {"identifier": "TopicMapSourceManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TopicMapSourceManager manager;", "modifier": "private", "type": "TopicMapSourceManager", "declarator": "manager", "var_name": "manager"}], "file": "ontopia-engine/src/test/java/net/ontopia/topicmaps/entry/TopicMapSourceManagerTest.java"}, "test_case": {"identifier": "testEmpty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEmpty() {\n    verifyEmptyManager(\"\");\n    manager.refresh();\n    verifyEmptyManager(\" after refresh\");\n  }", "signature": "void testEmpty()", "full_signature": "@Test public void testEmpty()", "class_method_signature": "TopicMapSourceManagerTest.testEmpty()", "testcase": true, "constructor": false, "invocations": ["verifyEmptyManager", "refresh", "verifyEmptyManager"]}, "focal_class": {"identifier": "TopicMapSourceManager", "superclass": "", "interfaces": "implements TopicMapRepositoryIF", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(TopicMapSourceManager.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(TopicMapSourceManager.class.getName())", "var_name": "log"}, {"original_string": "protected Set<TopicMapSourceIF> sources = new CompactHashSet<TopicMapSourceIF>();", "modifier": "protected", "type": "Set<TopicMapSourceIF>", "declarator": "sources = new CompactHashSet<TopicMapSourceIF>()", "var_name": "sources"}, {"original_string": "protected Map<String, TopicMapSourceIF> smap = new HashMap<String, TopicMapSourceIF>();", "modifier": "protected", "type": "Map<String, TopicMapSourceIF>", "declarator": "smap = new HashMap<String, TopicMapSourceIF>()", "var_name": "smap"}, {"original_string": "protected boolean refreshed = false;", "modifier": "protected", "type": "boolean", "declarator": "refreshed = false", "var_name": "refreshed"}, {"original_string": "protected Map<String, TopicMapReferenceIF> keyrefs = new HashMap<String, TopicMapReferenceIF>();", "modifier": "protected", "type": "Map<String, TopicMapReferenceIF>", "declarator": "keyrefs = new HashMap<String, TopicMapReferenceIF>()", "var_name": "keyrefs"}, {"original_string": "protected Map<TopicMapReferenceIF, String> refkeys = new HashMap<TopicMapReferenceIF, String>();", "modifier": "protected", "type": "Map<TopicMapReferenceIF, String>", "declarator": "refkeys = new HashMap<TopicMapReferenceIF, String>()", "var_name": "refkeys"}], "methods": [{"identifier": "TopicMapSourceManager", "parameters": "()", "modifiers": "public", "return": "", "signature": " TopicMapSourceManager()", "full_signature": "public  TopicMapSourceManager()", "class_method_signature": "TopicMapSourceManager.TopicMapSourceManager()", "testcase": false, "constructor": true}, {"identifier": "TopicMapSourceManager", "parameters": "(TopicMapSourceIF source)", "modifiers": "public", "return": "", "signature": " TopicMapSourceManager(TopicMapSourceIF source)", "full_signature": "public  TopicMapSourceManager(TopicMapSourceIF source)", "class_method_signature": "TopicMapSourceManager.TopicMapSourceManager(TopicMapSourceIF source)", "testcase": false, "constructor": true}, {"identifier": "TopicMapSourceManager", "parameters": "(Collection<TopicMapSourceIF> sources)", "modifiers": "public", "return": "", "signature": " TopicMapSourceManager(Collection<TopicMapSourceIF> sources)", "full_signature": "public  TopicMapSourceManager(Collection<TopicMapSourceIF> sources)", "class_method_signature": "TopicMapSourceManager.TopicMapSourceManager(Collection<TopicMapSourceIF> sources)", "testcase": false, "constructor": true}, {"identifier": "getReferences", "parameters": "()", "modifiers": "@Override public synchronized", "return": "Collection<TopicMapReferenceIF>", "signature": "Collection<TopicMapReferenceIF> getReferences()", "full_signature": "@Override public synchronized Collection<TopicMapReferenceIF> getReferences()", "class_method_signature": "TopicMapSourceManager.getReferences()", "testcase": false, "constructor": false}, {"identifier": "getReferenceKeys", "parameters": "()", "modifiers": "@Override public synchronized", "return": "Collection<String>", "signature": "Collection<String> getReferenceKeys()", "full_signature": "@Override public synchronized Collection<String> getReferenceKeys()", "class_method_signature": "TopicMapSourceManager.getReferenceKeys()", "testcase": false, "constructor": false}, {"identifier": "getReferenceByKey", "parameters": "(String key)", "modifiers": "@Override public synchronized", "return": "TopicMapReferenceIF", "signature": "TopicMapReferenceIF getReferenceByKey(String key)", "full_signature": "@Override public synchronized TopicMapReferenceIF getReferenceByKey(String key)", "class_method_signature": "TopicMapSourceManager.getReferenceByKey(String key)", "testcase": false, "constructor": false}, {"identifier": "getReferenceKey", "parameters": "(TopicMapReferenceIF ref)", "modifiers": "@Override public synchronized", "return": "String", "signature": "String getReferenceKey(TopicMapReferenceIF ref)", "full_signature": "@Override public synchronized String getReferenceKey(TopicMapReferenceIF ref)", "class_method_signature": "TopicMapSourceManager.getReferenceKey(TopicMapReferenceIF ref)", "testcase": false, "constructor": false}, {"identifier": "createStore", "parameters": "(String refkey, boolean readonly)", "modifiers": "@Override public", "return": "TopicMapStoreIF", "signature": "TopicMapStoreIF createStore(String refkey, boolean readonly)", "full_signature": "@Override public TopicMapStoreIF createStore(String refkey, boolean readonly)", "class_method_signature": "TopicMapSourceManager.createStore(String refkey, boolean readonly)", "testcase": false, "constructor": false}, {"identifier": "getSourceById", "parameters": "(String source_id)", "modifiers": "@Override public synchronized", "return": "TopicMapSourceIF", "signature": "TopicMapSourceIF getSourceById(String source_id)", "full_signature": "@Override public synchronized TopicMapSourceIF getSourceById(String source_id)", "class_method_signature": "TopicMapSourceManager.getSourceById(String source_id)", "testcase": false, "constructor": false}, {"identifier": "getSources", "parameters": "()", "modifiers": "@Override public synchronized", "return": "Collection<TopicMapSourceIF>", "signature": "Collection<TopicMapSourceIF> getSources()", "full_signature": "@Override public synchronized Collection<TopicMapSourceIF> getSources()", "class_method_signature": "TopicMapSourceManager.getSources()", "testcase": false, "constructor": false}, {"identifier": "addSource", "parameters": "(TopicMapSourceIF source)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void addSource(TopicMapSourceIF source)", "full_signature": "@Override public synchronized void addSource(TopicMapSourceIF source)", "class_method_signature": "TopicMapSourceManager.addSource(TopicMapSourceIF source)", "testcase": false, "constructor": false}, {"identifier": "removeSource", "parameters": "(TopicMapSourceIF source)", "modifiers": "@Override public synchronized", "return": "void", "signature": "void removeSource(TopicMapSourceIF source)", "full_signature": "@Override public synchronized void removeSource(TopicMapSourceIF source)", "class_method_signature": "TopicMapSourceManager.removeSource(TopicMapSourceIF source)", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "()", "modifiers": "@Override public synchronized", "return": "void", "signature": "void refresh()", "full_signature": "@Override public synchronized void refresh()", "class_method_signature": "TopicMapSourceManager.refresh()", "testcase": false, "constructor": false}, {"identifier": "createReferenceKey", "parameters": "(TopicMapReferenceIF ref)", "modifiers": "protected", "return": "String", "signature": "String createReferenceKey(TopicMapReferenceIF ref)", "full_signature": "protected String createReferenceKey(TopicMapReferenceIF ref)", "class_method_signature": "TopicMapSourceManager.createReferenceKey(TopicMapReferenceIF ref)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public synchronized", "return": "void", "signature": "void close()", "full_signature": "@Override public synchronized void close()", "class_method_signature": "TopicMapSourceManager.close()", "testcase": false, "constructor": false}, {"identifier": "getReferenceById", "parameters": "(String reference_id)", "modifiers": "@Deprecated public", "return": "TopicMapReferenceIF", "signature": "TopicMapReferenceIF getReferenceById(String reference_id)", "full_signature": "@Deprecated public TopicMapReferenceIF getReferenceById(String reference_id)", "class_method_signature": "TopicMapSourceManager.getReferenceById(String reference_id)", "testcase": false, "constructor": false}, {"identifier": "hasId", "parameters": "(String reference_id)", "modifiers": "@Deprecated public", "return": "boolean", "signature": "boolean hasId(String reference_id)", "full_signature": "@Deprecated public boolean hasId(String reference_id)", "class_method_signature": "TopicMapSourceManager.hasId(String reference_id)", "testcase": false, "constructor": false}, {"identifier": "getIds", "parameters": "()", "modifiers": "@Deprecated public", "return": "Collection<String>", "signature": "Collection<String> getIds()", "full_signature": "@Deprecated public Collection<String> getIds()", "class_method_signature": "TopicMapSourceManager.getIds()", "testcase": false, "constructor": false}], "file": "ontopia-engine/src/main/java/net/ontopia/topicmaps/entry/TopicMapSourceManager.java"}, "focal_method": {"identifier": "refresh", "parameters": "()", "modifiers": "@Override public synchronized", "return": "void", "body": "@Override\n  public synchronized void refresh() {\n    // Clear reference map\n    refreshed = false;\n    keyrefs.clear();\n    refkeys.clear();\n\n    // Refresh sources and rebuild reference map\n    Iterator<TopicMapSourceIF> siter = sources.iterator();\n    while (siter.hasNext()) {\n      TopicMapSourceIF source = siter.next();\n      try {\n        // Refresh source\n        source.refresh();\n        Iterator<TopicMapReferenceIF> riter = source.getReferences().iterator();\n        while (riter.hasNext()) {\n          TopicMapReferenceIF ref = riter.next();\n          // Create reference key and update reference map\n          String refkey = createReferenceKey(ref);\n          // ! System.out.println(\"KEY: \" + refkey + \" <= \" + ref);\n          keyrefs.put(refkey, ref);\n          refkeys.put(ref, refkey);\n        }\n      } catch (Throwable t) {\n        log.error(\"Could not refresh topic map source \" + source + \". Ignoring.\", t);\n      }\n    }\n    refreshed = true;\n  }", "signature": "void refresh()", "full_signature": "@Override public synchronized void refresh()", "class_method_signature": "TopicMapSourceManager.refresh()", "testcase": false, "constructor": false, "invocations": ["clear", "clear", "iterator", "hasNext", "next", "refresh", "iterator", "getReferences", "hasNext", "next", "createReferenceKey", "put", "put", "error"]}, "repository": {"repo_id": 32357795, "url": "https://github.com/ontopia/ontopia", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 35, "size": 68637, "license": "licensed"}}