{"test_class": {"identifier": "JavaToKotlinTypeConverterTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/mybatis-generator-core/src/test/java/org/mybatis/generator/api/dom/kotlin/JavaToKotlinTypeConverterTest.java"}, "test_case": {"identifier": "testPrimitiveByteArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPrimitiveByteArray() {\n        FullyQualifiedJavaType jt = new FullyQualifiedJavaType(\"byte[]\");\n        FullyQualifiedKotlinType kt = JavaToKotlinTypeConverter.convert(jt);\n\n        assertThat(kt.getShortNameWithTypeArguments()).isEqualTo(\"ByteArray\");\n        assertThat(kt.getImportList()).isEmpty();\n    }", "signature": "void testPrimitiveByteArray()", "full_signature": "@Test public void testPrimitiveByteArray()", "class_method_signature": "JavaToKotlinTypeConverterTest.testPrimitiveByteArray()", "testcase": true, "constructor": false, "invocations": ["convert", "isEqualTo", "assertThat", "getShortNameWithTypeArguments", "isEmpty", "assertThat", "getImportList"]}, "focal_class": {"identifier": "JavaToKotlinTypeConverter", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Map<String, String> typeMap = new HashMap<>();", "modifier": "private static", "type": "Map<String, String>", "declarator": "typeMap = new HashMap<>()", "var_name": "typeMap"}], "methods": [{"identifier": "JavaToKotlinTypeConverter", "parameters": "()", "modifiers": "private", "return": "", "signature": " JavaToKotlinTypeConverter()", "full_signature": "private  JavaToKotlinTypeConverter()", "class_method_signature": "JavaToKotlinTypeConverter.JavaToKotlinTypeConverter()", "testcase": false, "constructor": true}, {"identifier": "convert", "parameters": "(FullyQualifiedJavaType javaType)", "modifiers": "public static", "return": "FullyQualifiedKotlinType", "signature": "FullyQualifiedKotlinType convert(FullyQualifiedJavaType javaType)", "full_signature": "public static FullyQualifiedKotlinType convert(FullyQualifiedJavaType javaType)", "class_method_signature": "JavaToKotlinTypeConverter.convert(FullyQualifiedJavaType javaType)", "testcase": false, "constructor": false}, {"identifier": "convertBaseType", "parameters": "(FullyQualifiedJavaType javaType)", "modifiers": "private static", "return": "FullyQualifiedKotlinType", "signature": "FullyQualifiedKotlinType convertBaseType(FullyQualifiedJavaType javaType)", "full_signature": "private static FullyQualifiedKotlinType convertBaseType(FullyQualifiedJavaType javaType)", "class_method_signature": "JavaToKotlinTypeConverter.convertBaseType(FullyQualifiedJavaType javaType)", "testcase": false, "constructor": false}], "file": "core/mybatis-generator-core/src/main/java/org/mybatis/generator/api/dom/kotlin/JavaToKotlinTypeConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(FullyQualifiedJavaType javaType)", "modifiers": "public static", "return": "FullyQualifiedKotlinType", "body": "public static FullyQualifiedKotlinType convert(FullyQualifiedJavaType javaType) {\n        FullyQualifiedKotlinType kotlinType = convertBaseType(javaType);\n\n        for (FullyQualifiedJavaType argument : javaType.getTypeArguments()) {\n            kotlinType.addTypeArgument(convert(argument));\n        }\n\n        return kotlinType;\n    }", "signature": "FullyQualifiedKotlinType convert(FullyQualifiedJavaType javaType)", "full_signature": "public static FullyQualifiedKotlinType convert(FullyQualifiedJavaType javaType)", "class_method_signature": "JavaToKotlinTypeConverter.convert(FullyQualifiedJavaType javaType)", "testcase": false, "constructor": false, "invocations": ["convertBaseType", "getTypeArguments", "addTypeArgument", "convert"]}, "repository": {"repo_id": 8121707, "url": "https://github.com/mybatis/generator", "stars": 4099, "created": "2/10/2013 11:14:50 AM +00:00", "updates": "2020-01-27T16:52:10+00:00", "fork": "False", "license": "licensed"}}