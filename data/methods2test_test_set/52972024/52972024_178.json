{"test_class": {"identifier": "FeaturesCreatorActorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private IStrategyContainer container = new StrategyContainer();", "modifier": "private", "type": "IStrategyContainer", "declarator": "container = new StrategyContainer()", "var_name": "container"}], "file": "CoreFeatures/FeatureManagement/FeatureCreatorActor/src/test/java/info/smart_tools/smartactors/feature_management/feature_creator_actor/FeaturesCreatorActorTest.java"}, "test_case": {"identifier": "checkCreateMessageByJsonFileMethod", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void checkCreateMessageByJsonFileMethod()\n            throws Exception {\n        FeaturesCreatorActor actor = new FeaturesCreatorActor();\n        CreateMessageWrapper wrapper = mock(CreateMessageWrapper.class);\n        when(wrapper.getFileName()).thenReturn(\"features.json\");\n        when(wrapper.getObservedDirectory()).thenReturn(\"target/test-classes/\");\n        doAnswer(invocationOnMock -> {\n            try {\n                IObject featureDescription = (IObject) ((List) invocationOnMock.getArguments()[0]).get(0);\n                assertEquals(featureDescription.getValue(new FieldName(\"name\")), \"feature1\");\n                assertEquals(featureDescription.getValue(new FieldName(\"version\")), \"0.0.0\");\n                assertEquals(featureDescription.getValue(new FieldName(\"group\")), \"info.smart_tools.smartactors\");\n            } catch (Throwable e) {\n                throw new RuntimeException(e);\n            }\n            return null;\n        }).when(wrapper).setJsonFeaturesDescription(any());\n        doAnswer(invocationOnMock -> {\n            try {\n                IObject featureDescription = (IObject) ((List) invocationOnMock.getArguments()[0]).get(0);\n                assertEquals(featureDescription.getValue(new FieldName(\"repositoryId\")), \"repository1\");\n                assertEquals(featureDescription.getValue(new FieldName(\"type\")), \"default\");\n                assertEquals(featureDescription.getValue(new FieldName(\"url\")), \"info.smart_tools.smartactors\");\n            } catch (Throwable e) {\n                throw new RuntimeException(e);\n            }\n            return null;\n        }).when(wrapper).setJsonRepositoriesDescription(any());\n        actor.createMessageByFile(wrapper);\n        actor.createMessageByFile(wrapper);\n    }", "signature": "void checkCreateMessageByJsonFileMethod()", "full_signature": "@Test public void checkCreateMessageByJsonFileMethod()", "class_method_signature": "FeaturesCreatorActorTest.checkCreateMessageByJsonFileMethod()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getFileName", "thenReturn", "when", "getObservedDirectory", "setJsonFeaturesDescription", "when", "doAnswer", "get", "getArguments", "assertEquals", "getValue", "assertEquals", "getValue", "assertEquals", "getValue", "any", "setJsonRepositoriesDescription", "when", "doAnswer", "get", "getArguments", "assertEquals", "getValue", "assertEquals", "getValue", "assertEquals", "getValue", "any", "createMessageByFile", "createMessageByFile"]}, "focal_class": {"identifier": "FeaturesCreatorActor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final IFieldName nameFN;", "modifier": "private final", "type": "IFieldName", "declarator": "nameFN", "var_name": "nameFN"}, {"original_string": "private final IFieldName groupFN;", "modifier": "private final", "type": "IFieldName", "declarator": "groupFN", "var_name": "groupFN"}, {"original_string": "private final IFieldName versionFN;", "modifier": "private final", "type": "IFieldName", "declarator": "versionFN", "var_name": "versionFN"}, {"original_string": "private final IFieldName featureLocationFN;", "modifier": "private final", "type": "IFieldName", "declarator": "featureLocationFN", "var_name": "featureLocationFN"}, {"original_string": "private final IFieldName featuresFN;", "modifier": "private final", "type": "IFieldName", "declarator": "featuresFN", "var_name": "featuresFN"}, {"original_string": "private final IFieldName repositoriesFN;", "modifier": "private final", "type": "IFieldName", "declarator": "repositoriesFN", "var_name": "repositoriesFN"}], "methods": [{"identifier": "FeaturesCreatorActor", "parameters": "()", "modifiers": "public", "return": "", "signature": " FeaturesCreatorActor()", "full_signature": "public  FeaturesCreatorActor()", "class_method_signature": "FeaturesCreatorActor.FeaturesCreatorActor()", "testcase": false, "constructor": true}, {"identifier": "createMessageByFile", "parameters": "(final CreateMessageWrapper wrapper)", "modifiers": "public", "return": "void", "signature": "void createMessageByFile(final CreateMessageWrapper wrapper)", "full_signature": "public void createMessageByFile(final CreateMessageWrapper wrapper)", "class_method_signature": "FeaturesCreatorActor.createMessageByFile(final CreateMessageWrapper wrapper)", "testcase": false, "constructor": false}, {"identifier": "createFeaturesByMessage", "parameters": "(final CreateFeaturesWrapper wrapper)", "modifiers": "public", "return": "void", "signature": "void createFeaturesByMessage(final CreateFeaturesWrapper wrapper)", "full_signature": "public void createFeaturesByMessage(final CreateFeaturesWrapper wrapper)", "class_method_signature": "FeaturesCreatorActor.createFeaturesByMessage(final CreateFeaturesWrapper wrapper)", "testcase": false, "constructor": false}, {"identifier": "createJsonFeatureDescriptionByZip", "parameters": "(final File file, final String observedDirectory)", "modifiers": "private", "return": "List<IObject>", "signature": "List<IObject> createJsonFeatureDescriptionByZip(final File file, final String observedDirectory)", "full_signature": "private List<IObject> createJsonFeatureDescriptionByZip(final File file, final String observedDirectory)", "class_method_signature": "FeaturesCreatorActor.createJsonFeatureDescriptionByZip(final File file, final String observedDirectory)", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "(final File file, final IFieldName fieldName)", "modifiers": "private", "return": "List<IObject>", "signature": "List<IObject> getDescription(final File file, final IFieldName fieldName)", "full_signature": "private List<IObject> getDescription(final File file, final IFieldName fieldName)", "class_method_signature": "FeaturesCreatorActor.getDescription(final File file, final IFieldName fieldName)", "testcase": false, "constructor": false}], "file": "CoreFeatures/FeatureManagement/FeatureCreatorActor/src/main/java/info/smart_tools/smartactors/feature_management/feature_creator_actor/FeaturesCreatorActor.java"}, "focal_method": {"identifier": "createMessageByFile", "parameters": "(final CreateMessageWrapper wrapper)", "modifiers": "public", "return": "void", "body": "public void createMessageByFile(final CreateMessageWrapper wrapper)\n            throws FeatureCreationException {\n        try {\n            File file = new File(wrapper.getObservedDirectory() + File.separator + wrapper.getFileName());\n            if (file.exists() && !file.isDirectory()) {\n                if (file.getName().endsWith(\".zip\")) {\n                    wrapper.setJsonFeaturesDescription(createJsonFeatureDescriptionByZip(file, wrapper.getObservedDirectory()));\n                    wrapper.setJsonRepositoriesDescription(new ArrayList<IObject>());\n                }\n                if (file.getName().endsWith(\".json\")) {\n                    wrapper.setJsonFeaturesDescription(getDescription(file, this.featuresFN));\n                    wrapper.setJsonRepositoriesDescription(getDescription(file, this.repositoriesFN));\n                }\n            }\n        } catch (ReadValueException | ChangeValueException e) {\n            throw new FeatureCreationException(\"Could not create features by given file.\", e);\n        }\n    }", "signature": "void createMessageByFile(final CreateMessageWrapper wrapper)", "full_signature": "public void createMessageByFile(final CreateMessageWrapper wrapper)", "class_method_signature": "FeaturesCreatorActor.createMessageByFile(final CreateMessageWrapper wrapper)", "testcase": false, "constructor": false, "invocations": ["getObservedDirectory", "getFileName", "exists", "isDirectory", "endsWith", "getName", "setJsonFeaturesDescription", "createJsonFeatureDescriptionByZip", "getObservedDirectory", "setJsonRepositoriesDescription", "endsWith", "getName", "setJsonFeaturesDescription", "getDescription", "setJsonRepositoriesDescription", "getDescription"]}, "repository": {"repo_id": 52972024, "url": "https://github.com/SmartTools/smartactors-core", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 58816, "license": "licensed"}}