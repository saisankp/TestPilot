{"test_class": {"identifier": "SiddhiUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<Attribute> listAttributes;", "modifier": "private", "type": "List<Attribute>", "declarator": "listAttributes", "var_name": "listAttributes"}], "file": "engine/src/test/java/com/stratio/decision/utils/SiddhiUtilsTest.java"}, "test_case": {"identifier": "testIsStreamAllowedOperation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsStreamAllowedOperation() throws Exception {\n        String streamName= \"myStream\";\n        assertTrue(\"True value expected\", SiddhiUtils.isStreamAllowedForThisOperation(\n                streamName, STREAM_OPERATIONS.ACTION.LISTEN));\n        assertFalse(\"False value expected\", SiddhiUtils.isStreamAllowedForThisOperation(\n                streamName, \"DASDSADASDSADAS\"));\n        assertTrue(\"True value expected\", SiddhiUtils.isStreamAllowedForThisOperation(\n                streamName, STREAM_OPERATIONS.MANIPULATION.INSERT));\n        assertFalse(\"False value expected\", SiddhiUtils.isStreamAllowedForThisOperation(\n                STREAMING.STATS_NAMES.STATS_STREAMS[0], STREAM_OPERATIONS.MANIPULATION.INSERT));\n\n    }", "signature": "void testIsStreamAllowedOperation()", "full_signature": "@Test public void testIsStreamAllowedOperation()", "class_method_signature": "SiddhiUtilsTest.testIsStreamAllowedOperation()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isStreamAllowedForThisOperation", "assertFalse", "isStreamAllowedForThisOperation", "assertTrue", "isStreamAllowedForThisOperation", "assertFalse", "isStreamAllowedForThisOperation"]}, "focal_class": {"identifier": "SiddhiUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String QUERY_PLAN_IDENTIFIER = \"StratioStreamingCEP-Cluster\";", "modifier": "public static final", "type": "String", "declarator": "QUERY_PLAN_IDENTIFIER = \"StratioStreamingCEP-Cluster\"", "var_name": "QUERY_PLAN_IDENTIFIER"}], "methods": [{"identifier": "SiddhiUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " SiddhiUtils()", "full_signature": "private  SiddhiUtils()", "class_method_signature": "SiddhiUtils.SiddhiUtils()", "testcase": false, "constructor": true}, {"identifier": "columnAlreadyExistsInStream", "parameters": "(String columnName, StreamDefinition streamMetaData)", "modifiers": "public static", "return": "boolean", "signature": "boolean columnAlreadyExistsInStream(String columnName, StreamDefinition streamMetaData)", "full_signature": "public static boolean columnAlreadyExistsInStream(String columnName, StreamDefinition streamMetaData)", "class_method_signature": "SiddhiUtils.columnAlreadyExistsInStream(String columnName, StreamDefinition streamMetaData)", "testcase": false, "constructor": false}, {"identifier": "getOrderedValues", "parameters": "(StreamDefinition streamMetaData, List<ColumnNameTypeValue> columns)", "modifiers": "public static", "return": "Object[]", "signature": "Object[] getOrderedValues(StreamDefinition streamMetaData, List<ColumnNameTypeValue> columns)", "full_signature": "public static Object[] getOrderedValues(StreamDefinition streamMetaData, List<ColumnNameTypeValue> columns)", "class_method_signature": "SiddhiUtils.getOrderedValues(StreamDefinition streamMetaData, List<ColumnNameTypeValue> columns)", "testcase": false, "constructor": false}, {"identifier": "decodeSiddhiValue", "parameters": "(String originalValue, Attribute.Type type)", "modifiers": "protected static", "return": "Object", "signature": "Object decodeSiddhiValue(String originalValue, Attribute.Type type)", "full_signature": "protected static Object decodeSiddhiValue(String originalValue, Attribute.Type type)", "class_method_signature": "SiddhiUtils.decodeSiddhiValue(String originalValue, Attribute.Type type)", "testcase": false, "constructor": false}, {"identifier": "decodeSiddhiValue", "parameters": "(Double originalValue, Attribute.Type type)", "modifiers": "protected static", "return": "Object", "signature": "Object decodeSiddhiValue(Double originalValue, Attribute.Type type)", "full_signature": "protected static Object decodeSiddhiValue(Double originalValue, Attribute.Type type)", "class_method_signature": "SiddhiUtils.decodeSiddhiValue(Double originalValue, Attribute.Type type)", "testcase": false, "constructor": false}, {"identifier": "isStreamAllowedForThisOperation", "parameters": "(String streamName, String operation)", "modifiers": "public static", "return": "Boolean", "signature": "Boolean isStreamAllowedForThisOperation(String streamName, String operation)", "full_signature": "public static Boolean isStreamAllowedForThisOperation(String streamName, String operation)", "class_method_signature": "SiddhiUtils.isStreamAllowedForThisOperation(String streamName, String operation)", "testcase": false, "constructor": false}], "file": "engine/src/main/java/com/stratio/decision/utils/SiddhiUtils.java"}, "focal_method": {"identifier": "isStreamAllowedForThisOperation", "parameters": "(String streamName, String operation)", "modifiers": "public static", "return": "Boolean", "body": "public static Boolean isStreamAllowedForThisOperation(String streamName, String operation) {\n\n        switch (operation.toUpperCase()) {\n        case STREAM_OPERATIONS.DEFINITION.ADD_QUERY:\n        case STREAM_OPERATIONS.DEFINITION.ALTER:\n        case STREAM_OPERATIONS.DEFINITION.CREATE:\n        case STREAM_OPERATIONS.DEFINITION.DROP:\n        case STREAM_OPERATIONS.DEFINITION.REMOVE_QUERY:\n        case STREAM_OPERATIONS.MANIPULATION.INSERT:\n            if (Arrays.asList(STREAMING.STATS_NAMES.STATS_STREAMS).contains(streamName)) {\n                return Boolean.FALSE;\n            }\n            return Boolean.TRUE;\n\n        case STREAM_OPERATIONS.ACTION.LISTEN:\n        case STREAM_OPERATIONS.ACTION.SAVETO_CASSANDRA:\n        case STREAM_OPERATIONS.ACTION.SAVETO_MONGO:\n        case STREAM_OPERATIONS.ACTION.SAVETO_SOLR:\n        case STREAM_OPERATIONS.ACTION.START_SENDTODROOLS:\n        case STREAM_OPERATIONS.ACTION.STOP_SAVETO_MONGO:\n        case STREAM_OPERATIONS.ACTION.STOP_SAVETO_CASSANDRA:\n        case STREAM_OPERATIONS.ACTION.STOP_SAVETO_SOLR:\n        case STREAM_OPERATIONS.ACTION.STOP_SENDTODROOLS:\n        case STREAM_OPERATIONS.ACTION.INDEX:\n        case STREAM_OPERATIONS.ACTION.STOP_LISTEN:\n        case STREAM_OPERATIONS.ACTION.STOP_INDEX:\n        case STREAM_OPERATIONS.MANIPULATION.LIST:\n\n            return Boolean.TRUE;\n        default:\n            return Boolean.FALSE;\n        }\n    }", "signature": "Boolean isStreamAllowedForThisOperation(String streamName, String operation)", "full_signature": "public static Boolean isStreamAllowedForThisOperation(String streamName, String operation)", "class_method_signature": "SiddhiUtils.isStreamAllowedForThisOperation(String streamName, String operation)", "testcase": false, "constructor": false, "invocations": ["toUpperCase", "contains", "asList"]}, "repository": {"repo_id": 20521495, "url": "https://github.com/Stratio/Decision", "language": "Java", "is_fork": false, "fork_count": 85, "stargazer_count": 305, "size": 41858, "license": "licensed"}}