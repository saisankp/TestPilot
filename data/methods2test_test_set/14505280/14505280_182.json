{"test_class": {"identifier": "AutomaticDispatcherUrlServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String X_FORWARD_HOST_HEADER = \"X-Forwarded-Host\";", "modifier": "private static final", "type": "String", "declarator": "X_FORWARD_HOST_HEADER = \"X-Forwarded-Host\"", "var_name": "X_FORWARD_HOST_HEADER"}, {"original_string": "private static final String X_GWT_MODULE_HEADER = \"X-GWT-Module-Base\";", "modifier": "private static final", "type": "String", "declarator": "X_GWT_MODULE_HEADER = \"X-GWT-Module-Base\"", "var_name": "X_GWT_MODULE_HEADER"}], "file": "common-servlet/src/test/java/org/geomajas/servlet/AutomaticDispatcherUrlServiceTest.java"}, "test_case": {"identifier": "testLocalizeAutomatic", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testLocalizeAutomatic() {\n\t\tAutomaticDispatcherUrlService adus = new AutomaticDispatcherUrlService();\n\n\t\t// set mock request in context holder\n\t\tMockHttpServletRequest mockRequest = new MockHttpServletRequest();\n\t\tmockRequest.setScheme(\"http\");\n\t\tmockRequest.setServerName(\"myhost\");\n\t\tmockRequest.setServerPort(80);\n\t\tmockRequest.setLocalName(\"localhost\");\n\t\tmockRequest.setLocalPort(8080);\n\t\tmockRequest.setContextPath(\"/test\");\n\t\tmockRequest.addHeader(X_FORWARD_HOST_HEADER, \"geomajas.org\");\n\t\tServletRequestAttributes attributes = new ServletRequestAttributes(mockRequest);\n\t\tRequestContextHolder.setRequestAttributes(attributes);\n\t\tAssert.assertEquals(\"http://localhost:8080/test/d/something\", adus.localize(\"http://geomajas.org/test/d/something\"));\n\n\t\t// clean up\n\t\tRequestContextHolder.setRequestAttributes(null);\n\t}", "signature": "void testLocalizeAutomatic()", "full_signature": "@Test public void testLocalizeAutomatic()", "class_method_signature": "AutomaticDispatcherUrlServiceTest.testLocalizeAutomatic()", "testcase": true, "constructor": false, "invocations": ["setScheme", "setServerName", "setServerPort", "setLocalName", "setLocalPort", "setContextPath", "addHeader", "setRequestAttributes", "assertEquals", "localize", "setRequestAttributes"]}, "focal_class": {"identifier": "AutomaticDispatcherUrlService", "superclass": "", "interfaces": "implements DispatcherUrlService", "fields": [{"original_string": "private static final long serialVersionUID = 110L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 110L", "var_name": "serialVersionUID"}, {"original_string": "private static final String X_FORWARD_HOST_HEADER = \"X-Forwarded-Host\";", "modifier": "private static final", "type": "String", "declarator": "X_FORWARD_HOST_HEADER = \"X-Forwarded-Host\"", "var_name": "X_FORWARD_HOST_HEADER"}, {"original_string": "private static final String X_GWT_MODULE_HEADER = \"X-GWT-Module-Base\";", "modifier": "private static final", "type": "String", "declarator": "X_GWT_MODULE_HEADER = \"X-GWT-Module-Base\"", "var_name": "X_GWT_MODULE_HEADER"}, {"original_string": "private final Logger log = LoggerFactory.getLogger(AutomaticDispatcherUrlService.class);", "modifier": "private final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(AutomaticDispatcherUrlService.class)", "var_name": "log"}, {"original_string": "private String localDispatcherUrl;", "modifier": "private", "type": "String", "declarator": "localDispatcherUrl", "var_name": "localDispatcherUrl"}], "methods": [{"identifier": "getDispatcherUrl", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDispatcherUrl()", "full_signature": "@Override public String getDispatcherUrl()", "class_method_signature": "AutomaticDispatcherUrlService.getDispatcherUrl()", "testcase": false, "constructor": false}, {"identifier": "getLocalDispatcherUrl", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getLocalDispatcherUrl()", "full_signature": "@Override public String getLocalDispatcherUrl()", "class_method_signature": "AutomaticDispatcherUrlService.getLocalDispatcherUrl()", "testcase": false, "constructor": false}, {"identifier": "setLocalDispatcherUrl", "parameters": "(String localDispatcherUrl)", "modifiers": "@Api public", "return": "void", "signature": "void setLocalDispatcherUrl(String localDispatcherUrl)", "full_signature": "@Api public void setLocalDispatcherUrl(String localDispatcherUrl)", "class_method_signature": "AutomaticDispatcherUrlService.setLocalDispatcherUrl(String localDispatcherUrl)", "testcase": false, "constructor": false}, {"identifier": "localize", "parameters": "(String externalUrl)", "modifiers": "@Override public", "return": "String", "signature": "String localize(String externalUrl)", "full_signature": "@Override public String localize(String externalUrl)", "class_method_signature": "AutomaticDispatcherUrlService.localize(String externalUrl)", "testcase": false, "constructor": false}, {"identifier": "getBasePathForHostNamePort", "parameters": "(HttpServletRequest request, String hostName, int port)", "modifiers": "private", "return": "String", "signature": "String getBasePathForHostNamePort(HttpServletRequest request, String hostName, int port)", "full_signature": "private String getBasePathForHostNamePort(HttpServletRequest request, String hostName, int port)", "class_method_signature": "AutomaticDispatcherUrlService.getBasePathForHostNamePort(HttpServletRequest request, String hostName, int port)", "testcase": false, "constructor": false}], "file": "common-servlet/src/main/java/org/geomajas/servlet/AutomaticDispatcherUrlService.java"}, "focal_method": {"identifier": "localize", "parameters": "(String externalUrl)", "modifiers": "@Override public", "return": "String", "body": "@Override\n\tpublic String localize(String externalUrl) {\n\t\tString localBase = getLocalDispatcherUrl();\n\t\tString dispatcherBase = getDispatcherUrl();\n\t\tif (externalUrl.startsWith(dispatcherBase)) {\n\t\t\treturn localBase + externalUrl.substring(dispatcherBase.length());\n\t\t} else {\n\t\t\t// not a dispatcher url, return the original one\n\t\t\treturn externalUrl;\n\t\t}\n\t}", "signature": "String localize(String externalUrl)", "full_signature": "@Override public String localize(String externalUrl)", "class_method_signature": "AutomaticDispatcherUrlService.localize(String externalUrl)", "testcase": false, "constructor": false, "invocations": ["getLocalDispatcherUrl", "getDispatcherUrl", "startsWith", "substring", "length"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}