{"test_class": {"identifier": "InterceptorCoreTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private InterceptorCore underTest;", "modifier": "private", "type": "InterceptorCore", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-extras/lookandsay.service/src/test/java/com/epam/wilma/extras/lookandsayservice/InterceptorCoreTest.java"}, "test_case": {"identifier": "test1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void test1() {\n        String response = underTest.handleIteration(\"1\");\n        assertTrue(\"11\".equals(response));\n    }", "signature": "void test1()", "full_signature": "@Test public void test1()", "class_method_signature": "InterceptorCoreTest.test1()", "testcase": true, "constructor": false, "invocations": ["handleIteration", "assertTrue", "equals"]}, "focal_class": {"identifier": "InterceptorCore", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "handleIteration", "parameters": "(final String input)", "modifiers": "protected", "return": "String", "signature": "String handleIteration(final String input)", "full_signature": "protected String handleIteration(final String input)", "class_method_signature": "InterceptorCore.handleIteration(final String input)", "testcase": false, "constructor": false}], "file": "wilma-extras/lookandsay.service/src/main/java/com/epam/wilma/extras/lookandsayservice/InterceptorCore.java"}, "focal_method": {"identifier": "handleIteration", "parameters": "(final String input)", "modifiers": "protected", "return": "String", "body": "protected String handleIteration(final String input) {\n        String response = \"\";\n        boolean inSequence = false;\n        char activeChar = ' '; //not necessary, compiler does not recognize, that it is always assigned properly\n        int activeCharLength = 0; //not necessary, compiler does not recognize, that it is always assigned properly\n        for (int i = 0; i < input.length(); i++) {\n            if (!inSequence) {\n                activeChar = input.charAt(i);\n                activeCharLength = 1;\n                inSequence = true;\n            } else {\n                if (activeChar == input.charAt(i)) {\n                    activeCharLength++;\n                } else {\n                    response = response + activeCharLength + activeChar;\n                    activeChar = input.charAt(i);\n                    activeCharLength = 1;\n                }\n            }\n        }\n        if (input.length() > 0) {\n            response = response + activeCharLength + activeChar;\n        }\n        return response;\n    }", "signature": "String handleIteration(final String input)", "full_signature": "protected String handleIteration(final String input)", "class_method_signature": "InterceptorCore.handleIteration(final String input)", "testcase": false, "constructor": false, "invocations": ["length", "charAt", "charAt", "charAt", "length"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}