{"test_class": {"identifier": "Ed25519PrivateKeyManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Ed25519PrivateKeyManager manager = new Ed25519PrivateKeyManager();", "modifier": "private final", "type": "Ed25519PrivateKeyManager", "declarator": "manager = new Ed25519PrivateKeyManager()", "var_name": "manager"}, {"original_string": "private final KeyTypeManager.KeyFactory<Ed25519KeyFormat, Ed25519PrivateKey> factory =\n      manager.keyFactory();", "modifier": "private final", "type": "KeyTypeManager.KeyFactory<Ed25519KeyFormat, Ed25519PrivateKey>", "declarator": "factory =\n      manager.keyFactory()", "var_name": "factory"}], "file": "java_src/src/test/java/com/google/crypto/tink/signature/Ed25519PrivateKeyManagerTest.java"}, "test_case": {"identifier": "testEd25519Template", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testEd25519Template() throws Exception {\n    KeyTemplate template = Ed25519PrivateKeyManager.ed25519Template();\n    assertThat(template.getTypeUrl()).isEqualTo(new Ed25519PrivateKeyManager().getKeyType());\n    assertThat(template.getOutputPrefixType()).isEqualTo(KeyTemplate.OutputPrefixType.TINK);\n    Ed25519KeyFormat unused =\n        Ed25519KeyFormat.parseFrom(template.getValue(), ExtensionRegistryLite.getEmptyRegistry());\n  }", "signature": "void testEd25519Template()", "full_signature": "@Test public void testEd25519Template()", "class_method_signature": "Ed25519PrivateKeyManagerTest.testEd25519Template()", "testcase": true, "constructor": false, "invocations": ["ed25519Template", "isEqualTo", "assertThat", "getTypeUrl", "getKeyType", "isEqualTo", "assertThat", "getOutputPrefixType", "parseFrom", "getValue", "getEmptyRegistry"]}, "focal_class": {"identifier": "Ed25519PrivateKeyManager", "superclass": "extends PrivateKeyTypeManager<Ed25519PrivateKey, Ed25519PublicKey>", "interfaces": "", "fields": [], "methods": [{"identifier": "Ed25519PrivateKeyManager", "parameters": "()", "modifiers": "", "return": "", "signature": " Ed25519PrivateKeyManager()", "full_signature": "  Ed25519PrivateKeyManager()", "class_method_signature": "Ed25519PrivateKeyManager.Ed25519PrivateKeyManager()", "testcase": false, "constructor": true}, {"identifier": "getKeyType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getKeyType()", "full_signature": "@Override public String getKeyType()", "class_method_signature": "Ed25519PrivateKeyManager.getKeyType()", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getVersion()", "full_signature": "@Override public int getVersion()", "class_method_signature": "Ed25519PrivateKeyManager.getVersion()", "testcase": false, "constructor": false}, {"identifier": "getPublicKey", "parameters": "(Ed25519PrivateKey key)", "modifiers": "@Override public", "return": "Ed25519PublicKey", "signature": "Ed25519PublicKey getPublicKey(Ed25519PrivateKey key)", "full_signature": "@Override public Ed25519PublicKey getPublicKey(Ed25519PrivateKey key)", "class_method_signature": "Ed25519PrivateKeyManager.getPublicKey(Ed25519PrivateKey key)", "testcase": false, "constructor": false}, {"identifier": "keyMaterialType", "parameters": "()", "modifiers": "@Override public", "return": "KeyMaterialType", "signature": "KeyMaterialType keyMaterialType()", "full_signature": "@Override public KeyMaterialType keyMaterialType()", "class_method_signature": "Ed25519PrivateKeyManager.keyMaterialType()", "testcase": false, "constructor": false}, {"identifier": "parseKey", "parameters": "(ByteString byteString)", "modifiers": "@Override public", "return": "Ed25519PrivateKey", "signature": "Ed25519PrivateKey parseKey(ByteString byteString)", "full_signature": "@Override public Ed25519PrivateKey parseKey(ByteString byteString)", "class_method_signature": "Ed25519PrivateKeyManager.parseKey(ByteString byteString)", "testcase": false, "constructor": false}, {"identifier": "validateKey", "parameters": "(Ed25519PrivateKey keyProto)", "modifiers": "@Override public", "return": "void", "signature": "void validateKey(Ed25519PrivateKey keyProto)", "full_signature": "@Override public void validateKey(Ed25519PrivateKey keyProto)", "class_method_signature": "Ed25519PrivateKeyManager.validateKey(Ed25519PrivateKey keyProto)", "testcase": false, "constructor": false}, {"identifier": "keyFactory", "parameters": "()", "modifiers": "@Override public", "return": "KeyFactory<Ed25519KeyFormat, Ed25519PrivateKey>", "signature": "KeyFactory<Ed25519KeyFormat, Ed25519PrivateKey> keyFactory()", "full_signature": "@Override public KeyFactory<Ed25519KeyFormat, Ed25519PrivateKey> keyFactory()", "class_method_signature": "Ed25519PrivateKeyManager.keyFactory()", "testcase": false, "constructor": false}, {"identifier": "registerPair", "parameters": "(boolean newKeyAllowed)", "modifiers": "public static", "return": "void", "signature": "void registerPair(boolean newKeyAllowed)", "full_signature": "public static void registerPair(boolean newKeyAllowed)", "class_method_signature": "Ed25519PrivateKeyManager.registerPair(boolean newKeyAllowed)", "testcase": false, "constructor": false}, {"identifier": "ed25519Template", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate ed25519Template()", "full_signature": "public static final KeyTemplate ed25519Template()", "class_method_signature": "Ed25519PrivateKeyManager.ed25519Template()", "testcase": false, "constructor": false}, {"identifier": "rawEd25519Template", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "signature": "KeyTemplate rawEd25519Template()", "full_signature": "public static final KeyTemplate rawEd25519Template()", "class_method_signature": "Ed25519PrivateKeyManager.rawEd25519Template()", "testcase": false, "constructor": false}], "file": "java_src/src/main/java/com/google/crypto/tink/signature/Ed25519PrivateKeyManager.java"}, "focal_method": {"identifier": "ed25519Template", "parameters": "()", "modifiers": "public static final", "return": "KeyTemplate", "body": "public static final KeyTemplate ed25519Template() {\n    return KeyTemplate.create(\n        new Ed25519PrivateKeyManager().getKeyType(),\n        /*value=*/ new byte[0],\n        KeyTemplate.OutputPrefixType.TINK);\n  }", "signature": "KeyTemplate ed25519Template()", "full_signature": "public static final KeyTemplate ed25519Template()", "class_method_signature": "Ed25519PrivateKeyManager.ed25519Template()", "testcase": false, "constructor": false, "invocations": ["create", "getKeyType"]}, "repository": {"repo_id": 20570214, "url": "https://github.com/google/tink", "stars": 8884, "created": "6/6/2014 4:21:09 PM +00:00", "updates": "2020-01-27T11:52:16+00:00", "fork": "False", "license": "licensed"}}