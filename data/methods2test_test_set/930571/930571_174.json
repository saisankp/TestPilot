{"test_class": {"identifier": "EmailNotificationPublisherTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Wiser wiser;", "modifier": "private", "type": "Wiser", "declarator": "wiser", "var_name": "wiser"}, {"original_string": "private String emailHost;", "modifier": "private", "type": "String", "declarator": "emailHost", "var_name": "emailHost"}, {"original_string": "private String emailPort;", "modifier": "private", "type": "String", "declarator": "emailPort", "var_name": "emailPort"}, {"original_string": "private Connection connection;", "modifier": "private", "type": "Connection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private UserInfo userInfo;", "modifier": "private", "type": "UserInfo", "declarator": "userInfo", "var_name": "userInfo"}, {"original_string": "private TaskModelFactory factory = TaskModelProvider.getFactory();", "modifier": "private", "type": "TaskModelFactory", "declarator": "factory = TaskModelProvider.getFactory()", "var_name": "factory"}], "file": "jbpm-workitems/jbpm-workitems-email/src/test/java/org/jbpm/process/workitem/email/EmailNotificationPublisherTest.java"}, "test_case": {"identifier": "testEmailNotificationWithoutTemplateToGroup", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEmailNotificationWithoutTemplateToGroup() throws Exception {\n                        \n        EmailNotificationPublisher publisher = new EmailNotificationPublisher(connection, userInfo);\n        \n        Set<OrganizationalEntity> recipients = new HashSet<>(Arrays.asList(factory.newGroup(\"managers\")));\n        publisher.publish(\"admin@jbpm.org\", \"Test notification\", recipients, \"Test body\");\n        \n        assertEquals( 1, wiser.getMessages().size() );\n\n        MimeMessage msg = (( WiserMessage  ) wiser.getMessages().get( 0 )).getMimeMessage();\n        // Side effect of MIME encoding (I think.. ): \\r\\n..\n        String content = ((String) msg.getContent()).replace(\"\\r\\n\", \"\");\n        assertEquals( \"Test body\", content );\n        assertEquals( \"Test notification\", msg.getSubject() );\n        assertEquals( \"admin@jbpm.org\", ((InternetAddress)msg.getFrom()[0]).getAddress() );        \n        assertEquals( \"john@domain.com\", ((InternetAddress)msg.getRecipients( RecipientType.TO )[0]).getAddress() );\n        assertNull( msg.getRecipients( RecipientType.CC ) );\n        assertNull( msg.getRecipients( RecipientType.BCC ) );\n    }", "signature": "void testEmailNotificationWithoutTemplateToGroup()", "full_signature": "@Test public void testEmailNotificationWithoutTemplateToGroup()", "class_method_signature": "EmailNotificationPublisherTest.testEmailNotificationWithoutTemplateToGroup()", "testcase": true, "constructor": false, "invocations": ["asList", "newGroup", "publish", "assertEquals", "size", "getMessages", "getMimeMessage", "get", "getMessages", "replace", "getContent", "assertEquals", "assertEquals", "getSubject", "assertEquals", "getAddress", "getFrom", "assertEquals", "getAddress", "getRecipients", "assertNull", "getRecipients", "assertNull", "getRecipients"]}, "focal_class": {"identifier": "EmailNotificationPublisher", "superclass": "", "interfaces": "implements NotificationPublisher", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(EmailNotificationPublisher.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(EmailNotificationPublisher.class)", "var_name": "logger"}, {"original_string": "private boolean active = Boolean.parseBoolean(System.getProperty(\"org.jbpm.email.publisher.enabled\", \"true\"));", "modifier": "private", "type": "boolean", "declarator": "active = Boolean.parseBoolean(System.getProperty(\"org.jbpm.email.publisher.enabled\", \"true\"))", "var_name": "active"}, {"original_string": "private UserInfo userInfo;", "modifier": "private", "type": "UserInfo", "declarator": "userInfo", "var_name": "userInfo"}, {"original_string": "private Connection connection;", "modifier": "private", "type": "Connection", "declarator": "connection", "var_name": "connection"}, {"original_string": "private TemplateManager templateManager = TemplateManager.get();", "modifier": "private", "type": "TemplateManager", "declarator": "templateManager = TemplateManager.get()", "var_name": "templateManager"}], "methods": [{"identifier": "EmailNotificationPublisher", "parameters": "()", "modifiers": "public", "return": "", "signature": " EmailNotificationPublisher()", "full_signature": "public  EmailNotificationPublisher()", "class_method_signature": "EmailNotificationPublisher.EmailNotificationPublisher()", "testcase": false, "constructor": true}, {"identifier": "EmailNotificationPublisher", "parameters": "(Connection connection, UserInfo userInfo)", "modifiers": "public", "return": "", "signature": " EmailNotificationPublisher(Connection connection, UserInfo userInfo)", "full_signature": "public  EmailNotificationPublisher(Connection connection, UserInfo userInfo)", "class_method_signature": "EmailNotificationPublisher.EmailNotificationPublisher(Connection connection, UserInfo userInfo)", "testcase": false, "constructor": true}, {"identifier": "publish", "parameters": "(String sender, String subject, Set<OrganizationalEntity> recipients, String body)", "modifiers": "@Override public", "return": "void", "signature": "void publish(String sender, String subject, Set<OrganizationalEntity> recipients, String body)", "full_signature": "@Override public void publish(String sender, String subject, Set<OrganizationalEntity> recipients, String body)", "class_method_signature": "EmailNotificationPublisher.publish(String sender, String subject, Set<OrganizationalEntity> recipients, String body)", "testcase": false, "constructor": false}, {"identifier": "publish", "parameters": "(String sender, String subject, Set<OrganizationalEntity> recipients, String template, Map<String, Object> parameters)", "modifiers": "@Override public", "return": "void", "signature": "void publish(String sender, String subject, Set<OrganizationalEntity> recipients, String template, Map<String, Object> parameters)", "full_signature": "@Override public void publish(String sender, String subject, Set<OrganizationalEntity> recipients, String template, Map<String, Object> parameters)", "class_method_signature": "EmailNotificationPublisher.publish(String sender, String subject, Set<OrganizationalEntity> recipients, String template, Map<String, Object> parameters)", "testcase": false, "constructor": false}, {"identifier": "getEmailAddress", "parameters": "(OrganizationalEntity entity)", "modifiers": "protected", "return": "String", "signature": "String getEmailAddress(OrganizationalEntity entity)", "full_signature": "protected String getEmailAddress(OrganizationalEntity entity)", "class_method_signature": "EmailNotificationPublisher.getEmailAddress(OrganizationalEntity entity)", "testcase": false, "constructor": false}, {"identifier": "createEmail", "parameters": "(String sender, String subject, Set<OrganizationalEntity> recipients, String body, Connection connection)", "modifiers": "protected", "return": "Email", "signature": "Email createEmail(String sender, String subject, Set<OrganizationalEntity> recipients, String body, Connection connection)", "full_signature": "protected Email createEmail(String sender, String subject, Set<OrganizationalEntity> recipients, String body, Connection connection)", "class_method_signature": "EmailNotificationPublisher.createEmail(String sender, String subject, Set<OrganizationalEntity> recipients, String body, Connection connection)", "testcase": false, "constructor": false}, {"identifier": "collectRecipients", "parameters": "(Set<String> emailRecipients, OrganizationalEntity entity)", "modifiers": "protected", "return": "void", "signature": "void collectRecipients(Set<String> emailRecipients, OrganizationalEntity entity)", "full_signature": "protected void collectRecipients(Set<String> emailRecipients, OrganizationalEntity entity)", "class_method_signature": "EmailNotificationPublisher.collectRecipients(Set<String> emailRecipients, OrganizationalEntity entity)", "testcase": false, "constructor": false}, {"identifier": "isActive", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isActive()", "full_signature": "@Override public boolean isActive()", "class_method_signature": "EmailNotificationPublisher.isActive()", "testcase": false, "constructor": false}], "file": "jbpm-workitems/jbpm-workitems-email/src/main/java/org/jbpm/process/workitem/email/EmailNotificationPublisher.java"}, "focal_method": {"identifier": "publish", "parameters": "(String sender, String subject, Set<OrganizationalEntity> recipients, String body)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void publish(String sender, String subject, Set<OrganizationalEntity> recipients, String body) {\n        Email emailNotification = createEmail(sender, subject, recipients, body, connection);\n        \n        SendHtml.sendHtml(emailNotification, false);\n    }", "signature": "void publish(String sender, String subject, Set<OrganizationalEntity> recipients, String body)", "full_signature": "@Override public void publish(String sender, String subject, Set<OrganizationalEntity> recipients, String body)", "class_method_signature": "EmailNotificationPublisher.publish(String sender, String subject, Set<OrganizationalEntity> recipients, String body)", "testcase": false, "constructor": false, "invocations": ["createEmail", "sendHtml"]}, "repository": {"repo_id": 930571, "url": "https://github.com/kiegroup/jbpm", "stars": 1035, "created": "9/22/2010 1:19:52 PM +00:00", "updates": "2020-01-22T03:39:57+00:00", "fork": "False", "license": "licensed"}}