{"test_class": {"identifier": "CssRulesDefinitionTest", "superclass": "", "interfaces": "", "fields": [], "file": "sonar-css-plugin/src/test/java/org/sonar/plugins/css/css/CssRulesDefinitionTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void test() {\n    CssRulesDefinition rulesDefinition = new CssRulesDefinition();\n    RulesDefinition.Context context = new RulesDefinition.Context();\n    rulesDefinition.define(context);\n    RulesDefinition.Repository repository = context.repository(\"css\");\n\n    assertThat(repository.name()).isEqualTo(\"SonarQube\");\n    assertThat(repository.language()).isEqualTo(\"css\");\n    assertThat(repository.rules()).hasSize(87);\n    assertThat(CheckList.getEmbeddedCssChecks()).hasSize(repository.rules().size() - 6);\n\n\n    RulesDefinition.Rule todoRule = repository.rule(TodoTagCheck.class.getAnnotation(Rule.class).key());\n    assertThat(todoRule).isNotNull();\n    assertThat(todoRule.name()).isEqualTo(TodoTagCheck.class.getAnnotation(Rule.class).name());\n  }", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "CssRulesDefinitionTest.test()", "testcase": true, "constructor": false, "invocations": ["define", "repository", "isEqualTo", "assertThat", "name", "isEqualTo", "assertThat", "language", "hasSize", "assertThat", "rules", "hasSize", "assertThat", "getEmbeddedCssChecks", "size", "rules", "rule", "key", "getAnnotation", "isNotNull", "assertThat", "isEqualTo", "assertThat", "name", "name", "getAnnotation"]}, "focal_class": {"identifier": "CssRulesDefinition", "superclass": "", "interfaces": "implements RulesDefinition", "fields": [], "methods": [{"identifier": "define", "parameters": "(Context context)", "modifiers": "@Override public", "return": "void", "signature": "void define(Context context)", "full_signature": "@Override public void define(Context context)", "class_method_signature": "CssRulesDefinition.define(Context context)", "testcase": false, "constructor": false}], "file": "sonar-css-plugin/src/main/java/org/sonar/plugins/css/css/CssRulesDefinition.java"}, "focal_method": {"identifier": "define", "parameters": "(Context context)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void define(Context context) {\n    NewRepository repository = context\n      .createRepository(CheckList.CSS_REPOSITORY_KEY, CssLanguage.KEY)\n      .setName(CheckList.CSS_REPOSITORY_NAME);\n\n    new AnnotationBasedRulesDefinition(repository, CssLanguage.KEY).addRuleClasses(false, CheckList.getCssChecks());\n    repository.done();\n  }", "signature": "void define(Context context)", "full_signature": "@Override public void define(Context context)", "class_method_signature": "CssRulesDefinition.define(Context context)", "testcase": false, "constructor": false, "invocations": ["setName", "createRepository", "addRuleClasses", "getCssChecks", "done"]}, "repository": {"repo_id": 84313991, "url": "https://github.com/kalidasya/sonar-css-plugin", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 7, "size": 5062, "license": "licensed"}}