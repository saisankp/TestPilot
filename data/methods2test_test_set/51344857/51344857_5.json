{"test_class": {"identifier": "ImageActionTest", "superclass": "", "interfaces": "", "fields": [], "file": "app/src/test/java/derpibooru/derpy/ui/views/htmltextview/imageactions/ImageActionTest.java"}, "test_case": {"identifier": "testEmbeddedImageAction", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEmbeddedImageAction() {\n        int imageId = 110;\n        String imageSource = \"https://sometotallyunknowndomain.org/embedded.png\";\n\n        EmbeddedImageAction action = (EmbeddedImageAction)\n                getSerializedDeserialized(new EmbeddedImageAction(imageId, imageSource));\n\n        assertThat(action.getImageId(), is(imageId));\n        assertThat(action.getImageSource(), is(imageSource));\n    }", "signature": "void testEmbeddedImageAction()", "full_signature": "@Test public void testEmbeddedImageAction()", "class_method_signature": "ImageActionTest.testEmbeddedImageAction()", "testcase": true, "constructor": false, "invocations": ["getSerializedDeserialized", "assertThat", "getImageId", "is", "assertThat", "getImageSource", "is"]}, "focal_class": {"identifier": "ImageAction", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getImageSource", "parameters": "()", "modifiers": "public abstract", "return": "String", "signature": "String getImageSource()", "full_signature": "public abstract String getImageSource()", "class_method_signature": "ImageAction.getImageSource()", "testcase": false, "constructor": false}, {"identifier": "doesStringRepresentImageAction", "parameters": "(String assumedRepresentation)", "modifiers": "public static", "return": "boolean", "signature": "boolean doesStringRepresentImageAction(String assumedRepresentation)", "full_signature": "public static boolean doesStringRepresentImageAction(String assumedRepresentation)", "class_method_signature": "ImageAction.doesStringRepresentImageAction(String assumedRepresentation)", "testcase": false, "constructor": false}, {"identifier": "toStringRepresentation", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toStringRepresentation()", "full_signature": "public String toStringRepresentation()", "class_method_signature": "ImageAction.toStringRepresentation()", "testcase": false, "constructor": false}, {"identifier": "fromStringRepresentation", "parameters": "(String representation)", "modifiers": "public static", "return": "ImageAction", "signature": "ImageAction fromStringRepresentation(String representation)", "full_signature": "public static ImageAction fromStringRepresentation(String representation)", "class_method_signature": "ImageAction.fromStringRepresentation(String representation)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object o)", "full_signature": "@Override public boolean equals(Object o)", "class_method_signature": "ImageAction.equals(Object o)", "testcase": false, "constructor": false}, {"identifier": "getGsonInstance", "parameters": "()", "modifiers": "private static", "return": "Gson", "signature": "Gson getGsonInstance()", "full_signature": "private static Gson getGsonInstance()", "class_method_signature": "ImageAction.getGsonInstance()", "testcase": false, "constructor": false}], "file": "app/src/main/java/derpibooru/derpy/ui/views/htmltextview/imageactions/ImageAction.java"}, "focal_method": {"identifier": "getImageSource", "parameters": "()", "modifiers": "public abstract", "return": "String", "body": "public abstract String getImageSource();", "signature": "String getImageSource()", "full_signature": "public abstract String getImageSource()", "class_method_signature": "ImageAction.getImageSource()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 51344857, "url": "https://github.com/deliciousblackink/Derpibooru", "language": "Java", "is_fork": false, "fork_count": 5, "stargazer_count": 13, "size": 2552, "license": "licensed"}}