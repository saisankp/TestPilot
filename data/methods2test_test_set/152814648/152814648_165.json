{"test_class": {"identifier": "CompositeBuildResultTest", "superclass": "", "interfaces": "", "fields": [], "file": "plugin/src/test/java/io/jenkins/plugins/analysis/core/charts/CompositeBuildResultTest.java"}, "test_case": {"identifier": "shouldMergeNumberOfTotalIssues", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldMergeNumberOfTotalIssues() {\n        AnalysisBuildResult first = createAnalysisBuildResult(1, 2, 3, 4);\n        AnalysisBuildResult second = createAnalysisBuildResult(5, 6, 7, 8);\n\n        CompositeBuildResult run = new CompositeBuildResult();\n\n        assertThat(run).hasTotalSize(0);\n        assertThat(run.add(first)).hasTotalSize(10);\n        assertThat(run.add(second)).hasTotalSize(36);\n    }", "signature": "void shouldMergeNumberOfTotalIssues()", "full_signature": "@Test void shouldMergeNumberOfTotalIssues()", "class_method_signature": "CompositeBuildResultTest.shouldMergeNumberOfTotalIssues()", "testcase": true, "constructor": false, "invocations": ["createAnalysisBuildResult", "createAnalysisBuildResult", "hasTotalSize", "assertThat", "hasTotalSize", "assertThat", "add", "hasTotalSize", "assertThat", "add"]}, "focal_class": {"identifier": "CompositeBuildResult", "superclass": "", "interfaces": "implements AnalysisBuildResult", "fields": [{"original_string": "private final Map<String, Integer> sizesPerOrigin = new HashMap<>();", "modifier": "private final", "type": "Map<String, Integer>", "declarator": "sizesPerOrigin = new HashMap<>()", "var_name": "sizesPerOrigin"}, {"original_string": "private final Map<Severity, Integer> sizesPerSeverity = new HashMap<>();", "modifier": "private final", "type": "Map<Severity, Integer>", "declarator": "sizesPerSeverity = new HashMap<>()", "var_name": "sizesPerSeverity"}, {"original_string": "private final Map<Severity, Integer> newSizesPerSeverity = new HashMap<>();", "modifier": "private final", "type": "Map<Severity, Integer>", "declarator": "newSizesPerSeverity = new HashMap<>()", "var_name": "newSizesPerSeverity"}, {"original_string": "private int fixedSize = 0;", "modifier": "private", "type": "int", "declarator": "fixedSize = 0", "var_name": "fixedSize"}], "methods": [{"identifier": "add", "parameters": "(final AnalysisBuildResult... additionalResults)", "modifiers": "public", "return": "CompositeBuildResult", "signature": "CompositeBuildResult add(final AnalysisBuildResult... additionalResults)", "full_signature": "public CompositeBuildResult add(final AnalysisBuildResult... additionalResults)", "class_method_signature": "CompositeBuildResult.add(final AnalysisBuildResult... additionalResults)", "testcase": false, "constructor": false}, {"identifier": "getSizePerOrigin", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Integer>", "signature": "Map<String, Integer> getSizePerOrigin()", "full_signature": "@Override public Map<String, Integer> getSizePerOrigin()", "class_method_signature": "CompositeBuildResult.getSizePerOrigin()", "testcase": false, "constructor": false}, {"identifier": "getFixedSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getFixedSize()", "full_signature": "@Override public int getFixedSize()", "class_method_signature": "CompositeBuildResult.getFixedSize()", "testcase": false, "constructor": false}, {"identifier": "getTotalSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getTotalSize()", "full_signature": "@Override public int getTotalSize()", "class_method_signature": "CompositeBuildResult.getTotalSize()", "testcase": false, "constructor": false}, {"identifier": "getTotalSizeOf", "parameters": "(final Severity severity)", "modifiers": "@Override public", "return": "int", "signature": "int getTotalSizeOf(final Severity severity)", "full_signature": "@Override public int getTotalSizeOf(final Severity severity)", "class_method_signature": "CompositeBuildResult.getTotalSizeOf(final Severity severity)", "testcase": false, "constructor": false}, {"identifier": "getNewSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getNewSize()", "full_signature": "@Override public int getNewSize()", "class_method_signature": "CompositeBuildResult.getNewSize()", "testcase": false, "constructor": false}, {"identifier": "sum", "parameters": "(final Map<Severity, Integer> map)", "modifiers": "private", "return": "Integer", "signature": "Integer sum(final Map<Severity, Integer> map)", "full_signature": "private Integer sum(final Map<Severity, Integer> map)", "class_method_signature": "CompositeBuildResult.sum(final Map<Severity, Integer> map)", "testcase": false, "constructor": false}, {"identifier": "getNewSizeOf", "parameters": "(final Severity severity)", "modifiers": "@Override public", "return": "int", "signature": "int getNewSizeOf(final Severity severity)", "full_signature": "@Override public int getNewSizeOf(final Severity severity)", "class_method_signature": "CompositeBuildResult.getNewSizeOf(final Severity severity)", "testcase": false, "constructor": false}], "file": "plugin/src/main/java/io/jenkins/plugins/analysis/core/charts/CompositeBuildResult.java"}, "focal_method": {"identifier": "add", "parameters": "(final AnalysisBuildResult... additionalResults)", "modifiers": "public", "return": "CompositeBuildResult", "body": "public CompositeBuildResult add(final AnalysisBuildResult... additionalResults) {\n        for (AnalysisBuildResult another : additionalResults) {\n            sizesPerOrigin.putAll(another.getSizePerOrigin());\n            for (Severity severity : Severity.getPredefinedValues()) {\n                sizesPerSeverity.merge(severity, another.getTotalSizeOf(severity), Integer::sum);\n                newSizesPerSeverity.merge(severity, another.getNewSizeOf(severity), Integer::sum);\n            }\n            fixedSize += another.getFixedSize();\n        }\n        return this;\n    }", "signature": "CompositeBuildResult add(final AnalysisBuildResult... additionalResults)", "full_signature": "public CompositeBuildResult add(final AnalysisBuildResult... additionalResults)", "class_method_signature": "CompositeBuildResult.add(final AnalysisBuildResult... additionalResults)", "testcase": false, "constructor": false, "invocations": ["putAll", "getSizePerOrigin", "getPredefinedValues", "merge", "getTotalSizeOf", "merge", "getNewSizeOf", "getFixedSize"]}, "repository": {"repo_id": 152814648, "url": "https://github.com/jenkinsci/warnings-ng-plugin", "stars": 158, "created": "10/12/2018 10:41:36 PM +00:00", "updates": "2020-01-27T14:00:03+00:00", "fork": "False", "license": "licensed"}}