{"test_class": {"identifier": "CacheUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Map<String, String> tags;", "modifier": "private", "type": "Map<String, String>", "declarator": "tags", "var_name": "tags"}, {"original_string": "private String cacheKey;", "modifier": "private", "type": "String", "declarator": "cacheKey", "var_name": "cacheKey"}, {"original_string": "private List<Detector> detectors;", "modifier": "private", "type": "List<Detector>", "declarator": "detectors", "var_name": "detectors"}, {"original_string": "private String cacheValue;", "modifier": "private", "type": "String", "declarator": "cacheValue", "var_name": "cacheValue"}], "file": "anomdetect/src/test/java/com/expedia/adaptivealerting/anomdetect/mapper/CacheUtilTest.java"}, "test_case": {"identifier": "getKey", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getKey() {\n        initMap();\n        Assert.assertEquals(cacheKey, CacheUtil.getKey(tags));\n    }", "signature": "void getKey()", "full_signature": "@Test public void getKey()", "class_method_signature": "CacheUtilTest.getKey()", "testcase": true, "constructor": false, "invocations": ["initMap", "assertEquals", "getKey"]}, "focal_class": {"identifier": "CacheUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CACHE_KEY_DELIMITER = \"->\";", "modifier": "private static final", "type": "String", "declarator": "CACHE_KEY_DELIMITER = \"->\"", "var_name": "CACHE_KEY_DELIMITER"}, {"original_string": "private static final String CACHE_VALUE_DELIMITER = \"|\";", "modifier": "private static final", "type": "String", "declarator": "CACHE_VALUE_DELIMITER = \"|\"", "var_name": "CACHE_VALUE_DELIMITER"}], "methods": [{"identifier": "getKey", "parameters": "(Map<String, String> tags)", "modifiers": "public static", "return": "String", "signature": "String getKey(Map<String, String> tags)", "full_signature": "public static String getKey(Map<String, String> tags)", "class_method_signature": "CacheUtil.getKey(Map<String, String> tags)", "testcase": false, "constructor": false}, {"identifier": "getTags", "parameters": "(String key)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> getTags(String key)", "full_signature": "public static Map<String, String> getTags(String key)", "class_method_signature": "CacheUtil.getTags(String key)", "testcase": false, "constructor": false}, {"identifier": "getDetectors", "parameters": "(List<Detector> detectors)", "modifiers": "public static", "return": "String", "signature": "String getDetectors(List<Detector> detectors)", "full_signature": "public static String getDetectors(List<Detector> detectors)", "class_method_signature": "CacheUtil.getDetectors(List<Detector> detectors)", "testcase": false, "constructor": false}, {"identifier": "buildDetectors", "parameters": "(String detectorsString)", "modifiers": "public static", "return": "List<Detector>", "signature": "List<Detector> buildDetectors(String detectorsString)", "full_signature": "public static List<Detector> buildDetectors(String detectorsString)", "class_method_signature": "CacheUtil.buildDetectors(String detectorsString)", "testcase": false, "constructor": false}], "file": "anomdetect/src/main/java/com/expedia/adaptivealerting/anomdetect/mapper/CacheUtil.java"}, "focal_method": {"identifier": "getKey", "parameters": "(Map<String, String> tags)", "modifiers": "public static", "return": "String", "body": "public static String getKey(Map<String, String> tags) {\n        List<String> listOfEntries = tags.entrySet()\n                .stream()\n                .map(entry -> {\n                    String encodedValue = Base64.getEncoder().encodeToString(entry.getValue().getBytes());\n                    return entry.getKey() + CACHE_KEY_DELIMITER + encodedValue;\n                })\n                .sorted()\n                .collect(Collectors.toList());\n        return String.join(\",\", listOfEntries);\n    }", "signature": "String getKey(Map<String, String> tags)", "full_signature": "public static String getKey(Map<String, String> tags)", "class_method_signature": "CacheUtil.getKey(Map<String, String> tags)", "testcase": false, "constructor": false, "invocations": ["collect", "sorted", "map", "stream", "entrySet", "encodeToString", "getEncoder", "getBytes", "getValue", "getKey", "toList", "join"]}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}