{"test_class": {"identifier": "ThingTypeBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String CONF_URI = \"conf:uri\";", "modifier": "private static final", "type": "String", "declarator": "CONF_URI = \"conf:uri\"", "var_name": "CONF_URI"}, {"original_string": "private static final String REPRESENTATION_PROPERTY = \"representationProperty\";", "modifier": "private static final", "type": "String", "declarator": "REPRESENTATION_PROPERTY = \"representationProperty\"", "var_name": "REPRESENTATION_PROPERTY"}, {"original_string": "private static final String DESCRIPTION = \"description\";", "modifier": "private static final", "type": "String", "declarator": "DESCRIPTION = \"description\"", "var_name": "DESCRIPTION"}, {"original_string": "private static final String CATEGORY = \"category\";", "modifier": "private static final", "type": "String", "declarator": "CATEGORY = \"category\"", "var_name": "CATEGORY"}, {"original_string": "private static final String LABEL = \"label\";", "modifier": "private static final", "type": "String", "declarator": "LABEL = \"label\"", "var_name": "LABEL"}, {"original_string": "private static final String THING_TYPE_ID = \"thingTypeId\";", "modifier": "private static final", "type": "String", "declarator": "THING_TYPE_ID = \"thingTypeId\"", "var_name": "THING_TYPE_ID"}, {"original_string": "private static final String BINDING_ID = \"bindingId\";", "modifier": "private static final", "type": "String", "declarator": "BINDING_ID = \"bindingId\"", "var_name": "BINDING_ID"}, {"original_string": "private @NonNullByDefault({}) ThingTypeBuilder builder;", "modifier": "private @NonNullByDefault({})", "type": "ThingTypeBuilder", "declarator": "builder", "var_name": "builder"}], "file": "bundles/org.openhab.core.thing/src/test/java/org/openhab/core/thing/type/ThingTypeBuilderTest.java"}, "test_case": {"identifier": "withLabelAndThingTypeIdAndBindingIDShouldCreateThingType", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void withLabelAndThingTypeIdAndBindingIDShouldCreateThingType() {\n        ThingType thingType = builder.build();\n\n        assertThat(thingType.getBindingId(), is(BINDING_ID));\n        assertThat(thingType.getUID().getBindingId(), is(BINDING_ID));\n        assertThat(thingType.getUID().getId(), is(THING_TYPE_ID));\n        assertThat(thingType.getLabel(), is(LABEL));\n    }", "signature": "void withLabelAndThingTypeIdAndBindingIDShouldCreateThingType()", "full_signature": "@Test public void withLabelAndThingTypeIdAndBindingIDShouldCreateThingType()", "class_method_signature": "ThingTypeBuilderTest.withLabelAndThingTypeIdAndBindingIDShouldCreateThingType()", "testcase": true, "constructor": false, "invocations": ["build", "assertThat", "getBindingId", "is", "assertThat", "getBindingId", "getUID", "is", "assertThat", "getId", "getUID", "is", "assertThat", "getLabel", "is"]}, "focal_class": {"identifier": "ThingTypeBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private @Nullable List<ChannelGroupDefinition> channelGroupDefinitions;", "modifier": "private @Nullable", "type": "List<ChannelGroupDefinition>", "declarator": "channelGroupDefinitions", "var_name": "channelGroupDefinitions"}, {"original_string": "private @Nullable List<ChannelDefinition> channelDefinitions;", "modifier": "private @Nullable", "type": "List<ChannelDefinition>", "declarator": "channelDefinitions", "var_name": "channelDefinitions"}, {"original_string": "private @Nullable List<String> extensibleChannelTypeIds;", "modifier": "private @Nullable", "type": "List<String>", "declarator": "extensibleChannelTypeIds", "var_name": "extensibleChannelTypeIds"}, {"original_string": "private @Nullable List<String> supportedBridgeTypeUIDs;", "modifier": "private @Nullable", "type": "List<String>", "declarator": "supportedBridgeTypeUIDs", "var_name": "supportedBridgeTypeUIDs"}, {"original_string": "private @Nullable Map<String, String> properties;", "modifier": "private @Nullable", "type": "Map<String, String>", "declarator": "properties", "var_name": "properties"}, {"original_string": "private @Nullable String representationProperty;", "modifier": "private @Nullable", "type": "String", "declarator": "representationProperty", "var_name": "representationProperty"}, {"original_string": "private @Nullable URI configDescriptionURI;", "modifier": "private @Nullable", "type": "URI", "declarator": "configDescriptionURI", "var_name": "configDescriptionURI"}, {"original_string": "private boolean listed;", "modifier": "private", "type": "boolean", "declarator": "listed", "var_name": "listed"}, {"original_string": "private @Nullable String category;", "modifier": "private @Nullable", "type": "String", "declarator": "category", "var_name": "category"}, {"original_string": "private @Nullable String description;", "modifier": "private @Nullable", "type": "String", "declarator": "description", "var_name": "description"}, {"original_string": "private final String bindingId;", "modifier": "private final", "type": "String", "declarator": "bindingId", "var_name": "bindingId"}, {"original_string": "private final String thingTypeId;", "modifier": "private final", "type": "String", "declarator": "thingTypeId", "var_name": "thingTypeId"}, {"original_string": "private String label;", "modifier": "private", "type": "String", "declarator": "label", "var_name": "label"}], "methods": [{"identifier": "instance", "parameters": "(String bindingId, String thingTypeId, String label)", "modifiers": "public static", "return": "ThingTypeBuilder", "signature": "ThingTypeBuilder instance(String bindingId, String thingTypeId, String label)", "full_signature": "public static ThingTypeBuilder instance(String bindingId, String thingTypeId, String label)", "class_method_signature": "ThingTypeBuilder.instance(String bindingId, String thingTypeId, String label)", "testcase": false, "constructor": false}, {"identifier": "instance", "parameters": "(ThingTypeUID thingTypeUID, String label)", "modifiers": "public static", "return": "ThingTypeBuilder", "signature": "ThingTypeBuilder instance(ThingTypeUID thingTypeUID, String label)", "full_signature": "public static ThingTypeBuilder instance(ThingTypeUID thingTypeUID, String label)", "class_method_signature": "ThingTypeBuilder.instance(ThingTypeUID thingTypeUID, String label)", "testcase": false, "constructor": false}, {"identifier": "instance", "parameters": "(ThingType thingType)", "modifiers": "public static", "return": "ThingTypeBuilder", "signature": "ThingTypeBuilder instance(ThingType thingType)", "full_signature": "public static ThingTypeBuilder instance(ThingType thingType)", "class_method_signature": "ThingTypeBuilder.instance(ThingType thingType)", "testcase": false, "constructor": false}, {"identifier": "ThingTypeBuilder", "parameters": "(String bindingId, String thingTypeId, String label)", "modifiers": "private", "return": "", "signature": " ThingTypeBuilder(String bindingId, String thingTypeId, String label)", "full_signature": "private  ThingTypeBuilder(String bindingId, String thingTypeId, String label)", "class_method_signature": "ThingTypeBuilder.ThingTypeBuilder(String bindingId, String thingTypeId, String label)", "testcase": false, "constructor": true}, {"identifier": "ThingTypeBuilder", "parameters": "(ThingType thingType)", "modifiers": "private", "return": "", "signature": " ThingTypeBuilder(ThingType thingType)", "full_signature": "private  ThingTypeBuilder(ThingType thingType)", "class_method_signature": "ThingTypeBuilder.ThingTypeBuilder(ThingType thingType)", "testcase": false, "constructor": true}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "ThingType", "signature": "ThingType build()", "full_signature": "public ThingType build()", "class_method_signature": "ThingTypeBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "buildBridge", "parameters": "()", "modifiers": "public", "return": "BridgeType", "signature": "BridgeType buildBridge()", "full_signature": "public BridgeType buildBridge()", "class_method_signature": "ThingTypeBuilder.buildBridge()", "testcase": false, "constructor": false}, {"identifier": "withLabel", "parameters": "(String label)", "modifiers": "public", "return": "ThingTypeBuilder", "signature": "ThingTypeBuilder withLabel(String label)", "full_signature": "public ThingTypeBuilder withLabel(String label)", "class_method_signature": "ThingTypeBuilder.withLabel(String label)", "testcase": false, "constructor": false}, {"identifier": "withDescription", "parameters": "(String description)", "modifiers": "public", "return": "ThingTypeBuilder", "signature": "ThingTypeBuilder withDescription(String description)", "full_signature": "public ThingTypeBuilder withDescription(String description)", "class_method_signature": "ThingTypeBuilder.withDescription(String description)", "testcase": false, "constructor": false}, {"identifier": "withCategory", "parameters": "(String category)", "modifiers": "public", "return": "ThingTypeBuilder", "signature": "ThingTypeBuilder withCategory(String category)", "full_signature": "public ThingTypeBuilder withCategory(String category)", "class_method_signature": "ThingTypeBuilder.withCategory(String category)", "testcase": false, "constructor": false}, {"identifier": "isListed", "parameters": "(boolean listed)", "modifiers": "public", "return": "ThingTypeBuilder", "signature": "ThingTypeBuilder isListed(boolean listed)", "full_signature": "public ThingTypeBuilder isListed(boolean listed)", "class_method_signature": "ThingTypeBuilder.isListed(boolean listed)", "testcase": false, "constructor": false}, {"identifier": "withRepresentationProperty", "parameters": "(String representationProperty)", "modifiers": "public", "return": "ThingTypeBuilder", "signature": "ThingTypeBuilder withRepresentationProperty(String representationProperty)", "full_signature": "public ThingTypeBuilder withRepresentationProperty(String representationProperty)", "class_method_signature": "ThingTypeBuilder.withRepresentationProperty(String representationProperty)", "testcase": false, "constructor": false}, {"identifier": "withChannelDefinitions", "parameters": "(List<ChannelDefinition> channelDefinitions)", "modifiers": "public", "return": "ThingTypeBuilder", "signature": "ThingTypeBuilder withChannelDefinitions(List<ChannelDefinition> channelDefinitions)", "full_signature": "public ThingTypeBuilder withChannelDefinitions(List<ChannelDefinition> channelDefinitions)", "class_method_signature": "ThingTypeBuilder.withChannelDefinitions(List<ChannelDefinition> channelDefinitions)", "testcase": false, "constructor": false}, {"identifier": "withChannelGroupDefinitions", "parameters": "(List<ChannelGroupDefinition> channelGroupDefinitions)", "modifiers": "public", "return": "ThingTypeBuilder", "signature": "ThingTypeBuilder withChannelGroupDefinitions(List<ChannelGroupDefinition> channelGroupDefinitions)", "full_signature": "public ThingTypeBuilder withChannelGroupDefinitions(List<ChannelGroupDefinition> channelGroupDefinitions)", "class_method_signature": "ThingTypeBuilder.withChannelGroupDefinitions(List<ChannelGroupDefinition> channelGroupDefinitions)", "testcase": false, "constructor": false}, {"identifier": "withProperties", "parameters": "(Map<String, String> properties)", "modifiers": "public", "return": "ThingTypeBuilder", "signature": "ThingTypeBuilder withProperties(Map<String, String> properties)", "full_signature": "public ThingTypeBuilder withProperties(Map<String, String> properties)", "class_method_signature": "ThingTypeBuilder.withProperties(Map<String, String> properties)", "testcase": false, "constructor": false}, {"identifier": "withConfigDescriptionURI", "parameters": "(URI configDescriptionURI)", "modifiers": "public", "return": "ThingTypeBuilder", "signature": "ThingTypeBuilder withConfigDescriptionURI(URI configDescriptionURI)", "full_signature": "public ThingTypeBuilder withConfigDescriptionURI(URI configDescriptionURI)", "class_method_signature": "ThingTypeBuilder.withConfigDescriptionURI(URI configDescriptionURI)", "testcase": false, "constructor": false}, {"identifier": "withExtensibleChannelTypeIds", "parameters": "(List<String> extensibleChannelTypeIds)", "modifiers": "public", "return": "ThingTypeBuilder", "signature": "ThingTypeBuilder withExtensibleChannelTypeIds(List<String> extensibleChannelTypeIds)", "full_signature": "public ThingTypeBuilder withExtensibleChannelTypeIds(List<String> extensibleChannelTypeIds)", "class_method_signature": "ThingTypeBuilder.withExtensibleChannelTypeIds(List<String> extensibleChannelTypeIds)", "testcase": false, "constructor": false}, {"identifier": "withSupportedBridgeTypeUIDs", "parameters": "(List<String> supportedBridgeTypeUIDs)", "modifiers": "public", "return": "ThingTypeBuilder", "signature": "ThingTypeBuilder withSupportedBridgeTypeUIDs(List<String> supportedBridgeTypeUIDs)", "full_signature": "public ThingTypeBuilder withSupportedBridgeTypeUIDs(List<String> supportedBridgeTypeUIDs)", "class_method_signature": "ThingTypeBuilder.withSupportedBridgeTypeUIDs(List<String> supportedBridgeTypeUIDs)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core.thing/src/main/java/org/openhab/core/thing/type/ThingTypeBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "ThingType", "body": "public ThingType build() {\n        if (bindingId == null || bindingId.isBlank()) {\n            throw new IllegalArgumentException(\"The bindingId must neither be null nor empty.\");\n        }\n        if (thingTypeId == null || thingTypeId.isBlank()) {\n            throw new IllegalArgumentException(\"The thingTypeId must neither be null nor empty.\");\n        }\n        if (label == null || label.isBlank()) {\n            throw new IllegalArgumentException(\"The label must neither be null nor empty.\");\n        }\n\n        return new ThingType(new ThingTypeUID(bindingId, thingTypeId), supportedBridgeTypeUIDs, label, description,\n                category, listed, representationProperty, channelDefinitions, channelGroupDefinitions, properties,\n                configDescriptionURI, extensibleChannelTypeIds);\n    }", "signature": "ThingType build()", "full_signature": "public ThingType build()", "class_method_signature": "ThingTypeBuilder.build()", "testcase": false, "constructor": false, "invocations": ["isBlank", "isBlank", "isBlank"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}