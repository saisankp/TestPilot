{"test_class": {"identifier": "NormalizedMessageMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final ProtocolAdapter ADAPTER = DittoProtocolAdapter.newInstance();", "modifier": "private static final", "type": "ProtocolAdapter", "declarator": "ADAPTER = DittoProtocolAdapter.newInstance()", "var_name": "ADAPTER"}, {"original_string": "private MessageMapper underTest;", "modifier": "private", "type": "MessageMapper", "declarator": "underTest", "var_name": "underTest"}], "file": "services/connectivity/mapping/src/test/java/org/eclipse/ditto/services/connectivity/mapping/NormalizedMessageMapperTest.java"}, "test_case": {"identifier": "headersFromAdaptableAreNotMapped", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void headersFromAdaptableAreNotMapped() {\n        final FeaturePropertyModified event = FeaturePropertyModified.of(\n                ThingId.of(\"thing:id\"),\n                \"featureId\",\n                JsonPointer.of(\"/the/quick/brown/fox/jumps/over/the/lazy/dog\"),\n                JsonValue.of(9),\n                2L,\n                Instant.ofEpochSecond(2L),\n                DittoHeaders.newBuilder().putHeader(\"random\", \"header\").build(),\n                null);\n\n        final Adaptable adaptable = ADAPTER.toAdaptable(event, TopicPath.Channel.TWIN);\n        Assertions.assertThat(underTest.map(adaptable).get(0).getHeaders()).isEmpty();\n    }", "signature": "void headersFromAdaptableAreNotMapped()", "full_signature": "@Test public void headersFromAdaptableAreNotMapped()", "class_method_signature": "NormalizedMessageMapperTest.headersFromAdaptableAreNotMapped()", "testcase": true, "constructor": false, "invocations": ["of", "of", "of", "of", "ofEpochSecond", "build", "putHeader", "newBuilder", "toAdaptable", "isEmpty", "assertThat", "getHeaders", "get", "map"]}, "focal_class": {"identifier": "NormalizedMessageMapper", "superclass": "extends AbstractMessageMapper", "interfaces": "", "fields": [{"original_string": "public static final String FIELDS = \"fields\";", "modifier": "public static final", "type": "String", "declarator": "FIELDS = \"fields\"", "var_name": "FIELDS"}, {"original_string": "private static final JsonFieldDefinition<String> THING_ID = Thing.JsonFields.ID;", "modifier": "private static final", "type": "JsonFieldDefinition<String>", "declarator": "THING_ID = Thing.JsonFields.ID", "var_name": "THING_ID"}, {"original_string": "private static final JsonFieldDefinition<String> MODIFIED = Thing.JsonFields.MODIFIED;", "modifier": "private static final", "type": "JsonFieldDefinition<String>", "declarator": "MODIFIED = Thing.JsonFields.MODIFIED", "var_name": "MODIFIED"}, {"original_string": "private static final JsonFieldDefinition<Long> REVISION = Thing.JsonFields.REVISION;", "modifier": "private static final", "type": "JsonFieldDefinition<Long>", "declarator": "REVISION = Thing.JsonFields.REVISION", "var_name": "REVISION"}, {"original_string": "private static final JsonFieldDefinition<JsonObject> ABRIDGED_ORIGINAL_MESSAGE =\n            JsonFactory.newJsonObjectFieldDefinition(\"_context\");", "modifier": "private static final", "type": "JsonFieldDefinition<JsonObject>", "declarator": "ABRIDGED_ORIGINAL_MESSAGE =\n            JsonFactory.newJsonObjectFieldDefinition(\"_context\")", "var_name": "ABRIDGED_ORIGINAL_MESSAGE"}, {"original_string": "@Nullable\n    private JsonFieldSelector jsonFieldSelector;", "modifier": "@Nullable\n    private", "type": "JsonFieldSelector", "declarator": "jsonFieldSelector", "var_name": "jsonFieldSelector"}], "methods": [{"identifier": "getId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getId()", "full_signature": "@Override public String getId()", "class_method_signature": "NormalizedMessageMapper.getId()", "testcase": false, "constructor": false}, {"identifier": "doConfigure", "parameters": "(final MappingConfig mappingConfig, final MessageMapperConfiguration configuration)", "modifiers": "@Override public", "return": "void", "signature": "void doConfigure(final MappingConfig mappingConfig, final MessageMapperConfiguration configuration)", "full_signature": "@Override public void doConfigure(final MappingConfig mappingConfig, final MessageMapperConfiguration configuration)", "class_method_signature": "NormalizedMessageMapper.doConfigure(final MappingConfig mappingConfig, final MessageMapperConfiguration configuration)", "testcase": false, "constructor": false}, {"identifier": "map", "parameters": "(final ExternalMessage message)", "modifiers": "@Override public", "return": "List<Adaptable>", "signature": "List<Adaptable> map(final ExternalMessage message)", "full_signature": "@Override public List<Adaptable> map(final ExternalMessage message)", "class_method_signature": "NormalizedMessageMapper.map(final ExternalMessage message)", "testcase": false, "constructor": false}, {"identifier": "map", "parameters": "(final Adaptable adaptable)", "modifiers": "@Override public", "return": "List<ExternalMessage>", "signature": "List<ExternalMessage> map(final Adaptable adaptable)", "full_signature": "@Override public List<ExternalMessage> map(final Adaptable adaptable)", "class_method_signature": "NormalizedMessageMapper.map(final Adaptable adaptable)", "testcase": false, "constructor": false}, {"identifier": "flattenAsThingChange", "parameters": "(final Adaptable adaptable)", "modifiers": "private", "return": "ExternalMessage", "signature": "ExternalMessage flattenAsThingChange(final Adaptable adaptable)", "full_signature": "private ExternalMessage flattenAsThingChange(final Adaptable adaptable)", "class_method_signature": "NormalizedMessageMapper.flattenAsThingChange(final Adaptable adaptable)", "testcase": false, "constructor": false}, {"identifier": "abridgeMessage", "parameters": "(final Adaptable adaptable)", "modifiers": "private static", "return": "JsonObject", "signature": "JsonObject abridgeMessage(final Adaptable adaptable)", "full_signature": "private static JsonObject abridgeMessage(final Adaptable adaptable)", "class_method_signature": "NormalizedMessageMapper.abridgeMessage(final Adaptable adaptable)", "testcase": false, "constructor": false}, {"identifier": "dittoHeadersToJson", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "private static", "return": "JsonObject", "signature": "JsonObject dittoHeadersToJson(final DittoHeaders dittoHeaders)", "full_signature": "private static JsonObject dittoHeadersToJson(final DittoHeaders dittoHeaders)", "class_method_signature": "NormalizedMessageMapper.dittoHeadersToJson(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "isCreatedOrModifiedThingEvent", "parameters": "(final TopicPath topicPath)", "modifiers": "private static", "return": "boolean", "signature": "boolean isCreatedOrModifiedThingEvent(final TopicPath topicPath)", "full_signature": "private static boolean isCreatedOrModifiedThingEvent(final TopicPath topicPath)", "class_method_signature": "NormalizedMessageMapper.isCreatedOrModifiedThingEvent(final TopicPath topicPath)", "testcase": false, "constructor": false}], "file": "services/connectivity/mapping/src/main/java/org/eclipse/ditto/services/connectivity/mapping/NormalizedMessageMapper.java"}, "focal_method": {"identifier": "map", "parameters": "(final ExternalMessage message)", "modifiers": "@Override public", "return": "List<Adaptable>", "body": "@Override\n    public List<Adaptable> map(final ExternalMessage message) {\n        // All incoming messages are dropped.\n        return Collections.emptyList();\n    }", "signature": "List<Adaptable> map(final ExternalMessage message)", "full_signature": "@Override public List<Adaptable> map(final ExternalMessage message)", "class_method_signature": "NormalizedMessageMapper.map(final ExternalMessage message)", "testcase": false, "constructor": false, "invocations": ["emptyList"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}