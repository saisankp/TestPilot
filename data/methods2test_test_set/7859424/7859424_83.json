{"test_class": {"identifier": "LgrfTableTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CoordinateSystem coords;", "modifier": "private", "type": "CoordinateSystem", "declarator": "coords", "var_name": "coords"}, {"original_string": "private LgrfTable table;", "modifier": "private", "type": "LgrfTable", "declarator": "table", "var_name": "table"}], "file": "src/edu/lclark/orego/feature/LgrfTableTest.java"}, "test_case": {"identifier": "testUpdate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testUpdate() {\n\t\ttable.update(BLACK, true, coords.at(\"a1\"), coords.at(\"b1\"), coords.at(\"c1\"));\n\t\tassertEquals(coords.at(\"c1\"), table.getFirstLevelReply(BLACK, coords.at(\"b1\")));\n\t\tassertEquals(NO_POINT, table.getFirstLevelReply(BLACK, coords.at(\"a1\")));\n\t\tassertEquals(coords.at(\"c1\"), table.getSecondLevelReply(BLACK, coords.at(\"a1\"), coords.at(\"b1\")));\n\t}", "signature": "void testUpdate()", "full_signature": "@Test public void testUpdate()", "class_method_signature": "LgrfTableTest.testUpdate()", "testcase": true, "constructor": false, "invocations": ["update", "at", "at", "at", "assertEquals", "at", "getFirstLevelReply", "at", "assertEquals", "getFirstLevelReply", "at", "assertEquals", "at", "getSecondLevelReply", "at", "at"]}, "focal_class": {"identifier": "LgrfTable", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private final short[][] replies1;", "modifier": "private final", "type": "short[][]", "declarator": "replies1", "var_name": "replies1"}, {"original_string": "private final short[][][] replies2;", "modifier": "private final", "type": "short[][][]", "declarator": "replies2", "var_name": "replies2"}], "methods": [{"identifier": "LgrfTable", "parameters": "(CoordinateSystem coords)", "modifiers": "public", "return": "", "signature": " LgrfTable(CoordinateSystem coords)", "full_signature": "public  LgrfTable(CoordinateSystem coords)", "class_method_signature": "LgrfTable.LgrfTable(CoordinateSystem coords)", "testcase": false, "constructor": true}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "LgrfTable.clear()", "testcase": false, "constructor": false}, {"identifier": "getFirstLevelReply", "parameters": "(Color color, short previousMove)", "modifiers": "public", "return": "short", "signature": "short getFirstLevelReply(Color color, short previousMove)", "full_signature": "public short getFirstLevelReply(Color color, short previousMove)", "class_method_signature": "LgrfTable.getFirstLevelReply(Color color, short previousMove)", "testcase": false, "constructor": false}, {"identifier": "getSecondLevelReply", "parameters": "(Color color, short penultimateMove,\n\t\t\tshort previousMove)", "modifiers": "public", "return": "short", "signature": "short getSecondLevelReply(Color color, short penultimateMove,\n\t\t\tshort previousMove)", "full_signature": "public short getSecondLevelReply(Color color, short penultimateMove,\n\t\t\tshort previousMove)", "class_method_signature": "LgrfTable.getSecondLevelReply(Color color, short penultimateMove,\n\t\t\tshort previousMove)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Color colorToPlay, boolean playoutWon,\n\t\t\tshort penultimateMove, short previousMove, short reply)", "modifiers": "public", "return": "void", "signature": "void update(Color colorToPlay, boolean playoutWon,\n\t\t\tshort penultimateMove, short previousMove, short reply)", "full_signature": "public void update(Color colorToPlay, boolean playoutWon,\n\t\t\tshort penultimateMove, short previousMove, short reply)", "class_method_signature": "LgrfTable.update(Color colorToPlay, boolean playoutWon,\n\t\t\tshort penultimateMove, short previousMove, short reply)", "testcase": false, "constructor": false}], "file": "src/edu/lclark/orego/feature/LgrfTable.java"}, "focal_method": {"identifier": "update", "parameters": "(Color colorToPlay, boolean playoutWon,\n\t\t\tshort penultimateMove, short previousMove, short reply)", "modifiers": "public", "return": "void", "body": "public void update(Color colorToPlay, boolean playoutWon,\n\t\t\tshort penultimateMove, short previousMove, short reply) {\n\t\tif (reply != PASS) {\n\t\t\tif (playoutWon) {\n\t\t\t\treplies1[colorToPlay.index()][previousMove] = reply;\n\t\t\t\treplies2[colorToPlay.index()][penultimateMove][previousMove] = reply;\n\t\t\t} else {\n\t\t\t\tif (replies1[colorToPlay.index()][previousMove] == reply) {\n\t\t\t\t\treplies1[colorToPlay.index()][previousMove] = NO_POINT;\n\t\t\t\t}\n\t\t\t\tif (replies2[colorToPlay.index()][penultimateMove][previousMove] == reply) {\n\t\t\t\t\treplies2[colorToPlay.index()][penultimateMove][previousMove] = NO_POINT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "signature": "void update(Color colorToPlay, boolean playoutWon,\n\t\t\tshort penultimateMove, short previousMove, short reply)", "full_signature": "public void update(Color colorToPlay, boolean playoutWon,\n\t\t\tshort penultimateMove, short previousMove, short reply)", "class_method_signature": "LgrfTable.update(Color colorToPlay, boolean playoutWon,\n\t\t\tshort penultimateMove, short previousMove, short reply)", "testcase": false, "constructor": false, "invocations": ["index", "index", "index", "index", "index", "index"]}, "repository": {"repo_id": 7859424, "url": "https://github.com/Orego/Orego", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 1341444, "license": "licensed"}}