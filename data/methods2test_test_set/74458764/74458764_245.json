{"test_class": {"identifier": "TestRandomIdProvider", "superclass": "", "interfaces": "", "fields": [], "file": "session-replacement/src/test/java/com/amadeus/session/TestRandomIdProvider.java"}, "test_case": {"identifier": "testNewIdWith40Characters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testNewIdWith40Characters() {\n    RandomIdProvider provider = new RandomIdProvider(40);\n    assertEquals(56, provider.newId().length());\n    assertThat(provider.newId(), RegexMatchers.matchesPattern(\"[A-Za-z0-9_\\\\-]{56}\"));\n  }", "signature": "void testNewIdWith40Characters()", "full_signature": "@Test public void testNewIdWith40Characters()", "class_method_signature": "TestRandomIdProvider.testNewIdWith40Characters()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "length", "newId", "assertThat", "newId", "matchesPattern"]}, "focal_class": {"identifier": "RandomIdProvider", "superclass": "", "interfaces": "implements SessionIdProvider", "fields": [{"original_string": "private static final int FILLER_CHARACTER_INDEX = 63;", "modifier": "private static final", "type": "int", "declarator": "FILLER_CHARACTER_INDEX = 63", "var_name": "FILLER_CHARACTER_INDEX"}, {"original_string": "private static final int MASK_6_BITS = 0x3F;", "modifier": "private static final", "type": "int", "declarator": "MASK_6_BITS = 0x3F", "var_name": "MASK_6_BITS"}, {"original_string": "private static final int DIVIDE_BY_64 = 6;", "modifier": "private static final", "type": "int", "declarator": "DIVIDE_BY_64 = 6", "var_name": "DIVIDE_BY_64"}, {"original_string": "private static final int MULTIPLY_BY_256 = 8;", "modifier": "private static final", "type": "int", "declarator": "MULTIPLY_BY_256 = 8", "var_name": "MULTIPLY_BY_256"}, {"original_string": "private static final int BYTES_IN_BLOCK = 3;", "modifier": "private static final", "type": "int", "declarator": "BYTES_IN_BLOCK = 3", "var_name": "BYTES_IN_BLOCK"}, {"original_string": "private static final int DEFAULT_ID_LENGTH = 30;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_ID_LENGTH = 30", "var_name": "DEFAULT_ID_LENGTH"}, {"original_string": "private static final int CHARACTERS_IN_BLOCK = 4;", "modifier": "private static final", "type": "int", "declarator": "CHARACTERS_IN_BLOCK = 4", "var_name": "CHARACTERS_IN_BLOCK"}, {"original_string": "private static final char[] SESSION_ID_ALPHABET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\"\n      .toCharArray();", "modifier": "private static final", "type": "char[]", "declarator": "SESSION_ID_ALPHABET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\"\n      .toCharArray()", "var_name": "SESSION_ID_ALPHABET"}, {"original_string": "private final SecureRandom random = new SecureRandom();", "modifier": "private final", "type": "SecureRandom", "declarator": "random = new SecureRandom()", "var_name": "random"}, {"original_string": "private int length;", "modifier": "private", "type": "int", "declarator": "length", "var_name": "length"}], "methods": [{"identifier": "RandomIdProvider", "parameters": "()", "modifiers": "public", "return": "", "signature": " RandomIdProvider()", "full_signature": "public  RandomIdProvider()", "class_method_signature": "RandomIdProvider.RandomIdProvider()", "testcase": false, "constructor": true}, {"identifier": "RandomIdProvider", "parameters": "(int length)", "modifiers": "", "return": "", "signature": " RandomIdProvider(int length)", "full_signature": "  RandomIdProvider(int length)", "class_method_signature": "RandomIdProvider.RandomIdProvider(int length)", "testcase": false, "constructor": true}, {"identifier": "encode", "parameters": "(byte[] data)", "modifiers": "private", "return": "char[]", "signature": "char[] encode(byte[] data)", "full_signature": "private char[] encode(byte[] data)", "class_method_signature": "RandomIdProvider.encode(byte[] data)", "testcase": false, "constructor": false}, {"identifier": "byteValue", "parameters": "(byte data)", "modifiers": "private static", "return": "int", "signature": "int byteValue(byte data)", "full_signature": "private static int byteValue(byte data)", "class_method_signature": "RandomIdProvider.byteValue(byte data)", "testcase": false, "constructor": false}, {"identifier": "newId", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String newId()", "full_signature": "@Override public String newId()", "class_method_signature": "RandomIdProvider.newId()", "testcase": false, "constructor": false}, {"identifier": "readId", "parameters": "(String value)", "modifiers": "@Override public", "return": "String", "signature": "String readId(String value)", "full_signature": "@Override public String readId(String value)", "class_method_signature": "RandomIdProvider.readId(String value)", "testcase": false, "constructor": false}, {"identifier": "configure", "parameters": "(SessionConfiguration configuration)", "modifiers": "@Override public", "return": "void", "signature": "void configure(SessionConfiguration configuration)", "full_signature": "@Override public void configure(SessionConfiguration configuration)", "class_method_signature": "RandomIdProvider.configure(SessionConfiguration configuration)", "testcase": false, "constructor": false}, {"identifier": "getLengthInCharacters", "parameters": "()", "modifiers": "", "return": "int", "signature": "int getLengthInCharacters()", "full_signature": " int getLengthInCharacters()", "class_method_signature": "RandomIdProvider.getLengthInCharacters()", "testcase": false, "constructor": false}, {"identifier": "getLengthInCharacters", "parameters": "(int len)", "modifiers": "static", "return": "int", "signature": "int getLengthInCharacters(int len)", "full_signature": "static int getLengthInCharacters(int len)", "class_method_signature": "RandomIdProvider.getLengthInCharacters(int len)", "testcase": false, "constructor": false}], "file": "session-replacement/src/main/java/com/amadeus/session/RandomIdProvider.java"}, "focal_method": {"identifier": "newId", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String newId() {\n    final byte[] bytes = new byte[length];\n    random.nextBytes(bytes);\n    return new String(encode(bytes));\n  }", "signature": "String newId()", "full_signature": "@Override public String newId()", "class_method_signature": "RandomIdProvider.newId()", "testcase": false, "constructor": false, "invocations": ["nextBytes", "encode"]}, "repository": {"repo_id": 74458764, "url": "https://github.com/AmadeusITGroup/HttpSessionReplacer", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 45, "size": 514, "license": "licensed"}}