{"test_class": {"identifier": "ModelMapperTest", "superclass": "", "interfaces": "", "fields": [], "file": "server/src/test/java/org/axway/grapes/server/db/ModelMapperTest.java"}, "test_case": {"identifier": "getDbOrganizationFromOrganization", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getDbOrganizationFromOrganization(){\n        final Organization organization = DataModelFactory.createOrganization(\"test\");\n        organization.getCorporateGroupIdPrefixes().add(\"com.test\");\n\n        final ModelMapper modelMapper = new ModelMapper(mock(RepositoryHandler.class));\n        final DbOrganization dbOrganization = modelMapper.getDbOrganization(organization);\n\n        assertEquals(organization.getName(), dbOrganization.getName());\n        assertEquals(1, dbOrganization.getCorporateGroupIdPrefixes().size());\n        assertEquals(organization.getCorporateGroupIdPrefixes().get(0), dbOrganization.getCorporateGroupIdPrefixes().get(0));\n    }", "signature": "void getDbOrganizationFromOrganization()", "full_signature": "@Test public void getDbOrganizationFromOrganization()", "class_method_signature": "ModelMapperTest.getDbOrganizationFromOrganization()", "testcase": true, "constructor": false, "invocations": ["createOrganization", "add", "getCorporateGroupIdPrefixes", "mock", "getDbOrganization", "assertEquals", "getName", "getName", "assertEquals", "size", "getCorporateGroupIdPrefixes", "assertEquals", "get", "getCorporateGroupIdPrefixes", "get", "getCorporateGroupIdPrefixes"]}, "focal_class": {"identifier": "ModelMapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final RepositoryHandler repositoryHandler;", "modifier": "private final", "type": "RepositoryHandler", "declarator": "repositoryHandler", "var_name": "repositoryHandler"}], "methods": [{"identifier": "ModelMapper", "parameters": "(final RepositoryHandler repoHandler)", "modifiers": "public", "return": "", "signature": " ModelMapper(final RepositoryHandler repoHandler)", "full_signature": "public  ModelMapper(final RepositoryHandler repoHandler)", "class_method_signature": "ModelMapper.ModelMapper(final RepositoryHandler repoHandler)", "testcase": false, "constructor": true}, {"identifier": "getDbOrganization", "parameters": "(final Organization organization)", "modifiers": "public", "return": "DbOrganization", "signature": "DbOrganization getDbOrganization(final Organization organization)", "full_signature": "public DbOrganization getDbOrganization(final Organization organization)", "class_method_signature": "ModelMapper.getDbOrganization(final Organization organization)", "testcase": false, "constructor": false}, {"identifier": "getOrganization", "parameters": "(final DbOrganization dbOrganization)", "modifiers": "public", "return": "Organization", "signature": "Organization getOrganization(final DbOrganization dbOrganization)", "full_signature": "public Organization getOrganization(final DbOrganization dbOrganization)", "class_method_signature": "ModelMapper.getOrganization(final DbOrganization dbOrganization)", "testcase": false, "constructor": false}, {"identifier": "getDbLicense", "parameters": "(final License license)", "modifiers": "public", "return": "DbLicense", "signature": "DbLicense getDbLicense(final License license)", "full_signature": "public DbLicense getDbLicense(final License license)", "class_method_signature": "ModelMapper.getDbLicense(final License license)", "testcase": false, "constructor": false}, {"identifier": "getLicense", "parameters": "(final DbLicense dbLicense)", "modifiers": "public", "return": "License", "signature": "License getLicense(final DbLicense dbLicense)", "full_signature": "public License getLicense(final DbLicense dbLicense)", "class_method_signature": "ModelMapper.getLicense(final DbLicense dbLicense)", "testcase": false, "constructor": false}, {"identifier": "getDbArtifact", "parameters": "(final Artifact artifact)", "modifiers": "public", "return": "DbArtifact", "signature": "DbArtifact getDbArtifact(final Artifact artifact)", "full_signature": "public DbArtifact getDbArtifact(final Artifact artifact)", "class_method_signature": "ModelMapper.getDbArtifact(final Artifact artifact)", "testcase": false, "constructor": false}, {"identifier": "getArtifact", "parameters": "(final DbArtifact dbArtifact)", "modifiers": "public", "return": "Artifact", "signature": "Artifact getArtifact(final DbArtifact dbArtifact)", "full_signature": "public Artifact getArtifact(final DbArtifact dbArtifact)", "class_method_signature": "ModelMapper.getArtifact(final DbArtifact dbArtifact)", "testcase": false, "constructor": false}, {"identifier": "getDbModule", "parameters": "(final Module module)", "modifiers": "public", "return": "DbModule", "signature": "DbModule getDbModule(final Module module)", "full_signature": "public DbModule getDbModule(final Module module)", "class_method_signature": "ModelMapper.getDbModule(final Module module)", "testcase": false, "constructor": false}, {"identifier": "getModule", "parameters": "(final DbModule dbModule)", "modifiers": "public", "return": "Module", "signature": "Module getModule(final DbModule dbModule)", "full_signature": "public Module getModule(final DbModule dbModule)", "class_method_signature": "ModelMapper.getModule(final DbModule dbModule)", "testcase": false, "constructor": false}, {"identifier": "getDependency", "parameters": "(final DbDependency dbDependency, final String sourceName, final String sourceVersion)", "modifiers": "public", "return": "Dependency", "signature": "Dependency getDependency(final DbDependency dbDependency, final String sourceName, final String sourceVersion)", "full_signature": "public Dependency getDependency(final DbDependency dbDependency, final String sourceName, final String sourceVersion)", "class_method_signature": "ModelMapper.getDependency(final DbDependency dbDependency, final String sourceName, final String sourceVersion)", "testcase": false, "constructor": false}, {"identifier": "getComment", "parameters": "(final DbComment dbComment)", "modifiers": "public", "return": "Comment", "signature": "Comment getComment(final DbComment dbComment)", "full_signature": "public Comment getComment(final DbComment dbComment)", "class_method_signature": "ModelMapper.getComment(final DbComment dbComment)", "testcase": false, "constructor": false}, {"identifier": "getDbComment", "parameters": "(final Comment comment)", "modifiers": "public", "return": "DbComment", "signature": "DbComment getDbComment(final Comment comment)", "full_signature": "public DbComment getDbComment(final Comment comment)", "class_method_signature": "ModelMapper.getDbComment(final Comment comment)", "testcase": false, "constructor": false}], "file": "server/src/main/java/org/axway/grapes/server/db/ModelMapper.java"}, "focal_method": {"identifier": "getDbOrganization", "parameters": "(final Organization organization)", "modifiers": "public", "return": "DbOrganization", "body": "public DbOrganization getDbOrganization(final Organization organization) {\n        final DbOrganization dbOrganization = new DbOrganization();\n        dbOrganization.setName(organization.getName());\n        dbOrganization.getCorporateGroupIdPrefixes().addAll(organization.getCorporateGroupIdPrefixes());\n\n        return dbOrganization;\n    }", "signature": "DbOrganization getDbOrganization(final Organization organization)", "full_signature": "public DbOrganization getDbOrganization(final Organization organization)", "class_method_signature": "ModelMapper.getDbOrganization(final Organization organization)", "testcase": false, "constructor": false, "invocations": ["setName", "getName", "addAll", "getCorporateGroupIdPrefixes", "getCorporateGroupIdPrefixes"]}, "repository": {"repo_id": 14858974, "url": "https://github.com/Axway/Grapes", "language": "Java", "is_fork": false, "fork_count": 9, "stargazer_count": 8, "size": 3620, "license": "licensed"}}