{"test_class": {"identifier": "AlarmSentenceFetchSchedulerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private FetchAlarmManager mFetchAlarmManager;", "modifier": "@Mock\n    private", "type": "FetchAlarmManager", "declarator": "mFetchAlarmManager", "var_name": "mFetchAlarmManager"}, {"original_string": "@Mock\n    AlarmSentenceFetchScheduler mAlarmSentenceFetchScheduler;", "modifier": "@Mock", "type": "AlarmSentenceFetchScheduler", "declarator": "mAlarmSentenceFetchScheduler", "var_name": "mAlarmSentenceFetchScheduler"}, {"original_string": "@Captor\n    private ArgumentCaptor<Long> mLongCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<Long>", "declarator": "mLongCaptor", "var_name": "mLongCaptor"}], "file": "app/src/test/java/com/xixicm/de/infrastructure/alarm/AlarmSentenceFetchSchedulerTest.java"}, "test_case": {"identifier": "testNextFetchScheduleAt", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNextFetchScheduleAt() {\n        long time = System.currentTimeMillis();\n        mAlarmSentenceFetchScheduler.nextFetchScheduleAt(time);\n        verify(mFetchAlarmManager).setNextFetchAlarmAt(mLongCaptor.capture());\n        assertEquals(mLongCaptor.getValue(), (Long) time);\n    }", "signature": "void testNextFetchScheduleAt()", "full_signature": "@Test public void testNextFetchScheduleAt()", "class_method_signature": "AlarmSentenceFetchSchedulerTest.testNextFetchScheduleAt()", "testcase": true, "constructor": false, "invocations": ["currentTimeMillis", "nextFetchScheduleAt", "setNextFetchAlarmAt", "verify", "capture", "assertEquals", "getValue"]}, "focal_class": {"identifier": "AlarmSentenceFetchScheduler", "superclass": "", "interfaces": "implements SentenceFetchScheduler", "fields": [{"original_string": "private static AlarmSentenceFetchScheduler sInstance;", "modifier": "private static", "type": "AlarmSentenceFetchScheduler", "declarator": "sInstance", "var_name": "sInstance"}, {"original_string": "private FetchAlarmManager mFetchAlarmManager;", "modifier": "private", "type": "FetchAlarmManager", "declarator": "mFetchAlarmManager", "var_name": "mFetchAlarmManager"}], "methods": [{"identifier": "AlarmSentenceFetchScheduler", "parameters": "(FetchAlarmManager fetchAlarmManager)", "modifiers": "@VisibleForTesting", "return": "", "signature": " AlarmSentenceFetchScheduler(FetchAlarmManager fetchAlarmManager)", "full_signature": "@VisibleForTesting  AlarmSentenceFetchScheduler(FetchAlarmManager fetchAlarmManager)", "class_method_signature": "AlarmSentenceFetchScheduler.AlarmSentenceFetchScheduler(FetchAlarmManager fetchAlarmManager)", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "(@NonNull FetchAlarmManager fetchAlarmManager)", "modifiers": "public static synchronized", "return": "AlarmSentenceFetchScheduler", "signature": "AlarmSentenceFetchScheduler getInstance(@NonNull FetchAlarmManager fetchAlarmManager)", "full_signature": "public static synchronized AlarmSentenceFetchScheduler getInstance(@NonNull FetchAlarmManager fetchAlarmManager)", "class_method_signature": "AlarmSentenceFetchScheduler.getInstance(@NonNull FetchAlarmManager fetchAlarmManager)", "testcase": false, "constructor": false}, {"identifier": "nextFetchScheduleAt", "parameters": "(long time)", "modifiers": "@Override public", "return": "void", "signature": "void nextFetchScheduleAt(long time)", "full_signature": "@Override public void nextFetchScheduleAt(long time)", "class_method_signature": "AlarmSentenceFetchScheduler.nextFetchScheduleAt(long time)", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/xixicm/de/infrastructure/alarm/AlarmSentenceFetchScheduler.java"}, "focal_method": {"identifier": "nextFetchScheduleAt", "parameters": "(long time)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void nextFetchScheduleAt(long time) {\n        LogUtils.v(Constants.TAG, AlarmSentenceFetchScheduler.class.getCanonicalName() + \" nextFetchScheduleAt:\" + time);\n        mFetchAlarmManager.setNextFetchAlarmAt(time);\n    }", "signature": "void nextFetchScheduleAt(long time)", "full_signature": "@Override public void nextFetchScheduleAt(long time)", "class_method_signature": "AlarmSentenceFetchScheduler.nextFetchScheduleAt(long time)", "testcase": false, "constructor": false, "invocations": ["v", "getCanonicalName", "setNextFetchAlarmAt"]}, "repository": {"repo_id": 66622989, "url": "https://github.com/enuoCM/DE-MVP-Clean", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 17, "size": 278, "license": "licensed"}}