{"test_class": {"identifier": "BootstrapsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String oldP;", "modifier": "private", "type": "String", "declarator": "oldP", "var_name": "oldP"}, {"original_string": "private String oldC;", "modifier": "private", "type": "String", "declarator": "oldC", "var_name": "oldC"}], "file": "core/api/src/test/java/com/alipay/sofa/rpc/bootstrap/BootstrapsTest.java"}, "test_case": {"identifier": "from", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void from() throws Exception {\n        ProviderConfig providerConfig = new ProviderConfig().setBootstrap(\"test\");\n        ProviderBootstrap bootstrap = Bootstraps.from(providerConfig);\n        Assert.assertEquals(TestProviderBootstrap.class, bootstrap.getClass());\n        Assert.assertEquals(providerConfig, bootstrap.getProviderConfig());\n        // if not set bootstrap\n        providerConfig = new ProviderConfig();\n        bootstrap = Bootstraps.from(providerConfig);\n        Assert.assertEquals(TestProviderBootstrap.class, bootstrap.getClass());\n        Assert.assertEquals(providerConfig, bootstrap.getProviderConfig());\n    }", "signature": "void from()", "full_signature": "@Test public void from()", "class_method_signature": "BootstrapsTest.from()", "testcase": true, "constructor": false, "invocations": ["setBootstrap", "from", "assertEquals", "getClass", "assertEquals", "getProviderConfig", "from", "assertEquals", "getClass", "assertEquals", "getProviderConfig"]}, "focal_class": {"identifier": "Bootstraps", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "from", "parameters": "(ProviderConfig<T> providerConfig)", "modifiers": "public static", "return": "ProviderBootstrap<T>", "signature": "ProviderBootstrap<T> from(ProviderConfig<T> providerConfig)", "full_signature": "public static ProviderBootstrap<T> from(ProviderConfig<T> providerConfig)", "class_method_signature": "Bootstraps.from(ProviderConfig<T> providerConfig)", "testcase": false, "constructor": false}, {"identifier": "from", "parameters": "(ConsumerConfig<T> consumerConfig)", "modifiers": "public static", "return": "ConsumerBootstrap<T>", "signature": "ConsumerBootstrap<T> from(ConsumerConfig<T> consumerConfig)", "full_signature": "public static ConsumerBootstrap<T> from(ConsumerConfig<T> consumerConfig)", "class_method_signature": "Bootstraps.from(ConsumerConfig<T> consumerConfig)", "testcase": false, "constructor": false}], "file": "core/api/src/main/java/com/alipay/sofa/rpc/bootstrap/Bootstraps.java"}, "focal_method": {"identifier": "from", "parameters": "(ProviderConfig<T> providerConfig)", "modifiers": "public static", "return": "ProviderBootstrap<T>", "body": "public static <T> ProviderBootstrap<T> from(ProviderConfig<T> providerConfig) {\n        String bootstrap = providerConfig.getBootstrap();\n        if (StringUtils.isEmpty(bootstrap)) {\n            // Use default provider bootstrap\n            bootstrap = RpcConfigs.getStringValue(RpcOptions.DEFAULT_PROVIDER_BOOTSTRAP);\n            providerConfig.setBootstrap(bootstrap);\n        }\n        ProviderBootstrap providerBootstrap = ExtensionLoaderFactory.getExtensionLoader(ProviderBootstrap.class)\n            .getExtension(bootstrap, new Class[] { ProviderConfig.class }, new Object[] { providerConfig });\n        return (ProviderBootstrap<T>) providerBootstrap;\n    }", "signature": "ProviderBootstrap<T> from(ProviderConfig<T> providerConfig)", "full_signature": "public static ProviderBootstrap<T> from(ProviderConfig<T> providerConfig)", "class_method_signature": "Bootstraps.from(ProviderConfig<T> providerConfig)", "testcase": false, "constructor": false, "invocations": ["getBootstrap", "isEmpty", "getStringValue", "setBootstrap", "getExtension", "getExtensionLoader"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}