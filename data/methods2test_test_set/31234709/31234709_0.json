{"test_class": {"identifier": "ErrorProcessingFilterTest", "superclass": "", "interfaces": "", "fields": [], "file": "sdk/src/test/java/com/centurylink/cloud/sdk/core/client/errors/ErrorProcessingFilterTest.java"}, "test_case": {"identifier": "testIncorrectLogin", "parameters": "()", "modifiers": "@Test(expectedExceptions = ClcBadRequestException.class) public", "return": "void", "body": "@Test(expectedExceptions = ClcBadRequestException.class)\n    public void testIncorrectLogin() throws Throwable {\n        SdkInjector\n            .createInjector(\n                SdkConfiguration.DEFAULT.asModule(),\n                new AuthModule(new StaticCredentialsProvider(\"12345\", \"456789\"))\n            )\n            .getInstance(BearerAuthentication.class)\n            .filter(Mockito.mock(ClientRequestContext.class));\n    }", "signature": "void testIncorrectLogin()", "full_signature": "@Test(expectedExceptions = ClcBadRequestException.class) public void testIncorrectLogin()", "class_method_signature": "ErrorProcessingFilterTest.testIncorrectLogin()", "testcase": true, "constructor": false, "invocations": ["filter", "getInstance", "createInjector", "asModule", "mock"]}, "focal_class": {"identifier": "ErrorProcessingFilter", "superclass": "", "interfaces": "implements ClientResponseFilter", "fields": [], "methods": [{"identifier": "filter", "parameters": "(ClientRequestContext requestContext, ClientResponseContext responseContext)", "modifiers": "@Override public", "return": "void", "signature": "void filter(ClientRequestContext requestContext, ClientResponseContext responseContext)", "full_signature": "@Override public void filter(ClientRequestContext requestContext, ClientResponseContext responseContext)", "class_method_signature": "ErrorProcessingFilter.filter(ClientRequestContext requestContext, ClientResponseContext responseContext)", "testcase": false, "constructor": false}], "file": "sdk/src/main/java/com/centurylink/cloud/sdk/core/client/errors/ErrorProcessingFilter.java"}, "focal_method": {"identifier": "filter", "parameters": "(ClientRequestContext requestContext, ClientResponseContext responseContext)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void filter(ClientRequestContext requestContext, ClientResponseContext responseContext) throws IOException {\n        if (responseContext.getStatus() == SC_BAD_REQUEST) {\n            throw new ClcBadRequestException(responseContext);\n        } else if (responseContext.getStatus() >= 400) {\n            throw new ClcHttpClientException(responseContext);\n        }\n    }", "signature": "void filter(ClientRequestContext requestContext, ClientResponseContext responseContext)", "full_signature": "@Override public void filter(ClientRequestContext requestContext, ClientResponseContext responseContext)", "class_method_signature": "ErrorProcessingFilter.filter(ClientRequestContext requestContext, ClientResponseContext responseContext)", "testcase": false, "constructor": false, "invocations": ["getStatus", "getStatus"]}, "repository": {"repo_id": 31234709, "url": "https://github.com/CenturyLinkCloud/clc-java-sdk", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 5036, "license": "licensed"}}