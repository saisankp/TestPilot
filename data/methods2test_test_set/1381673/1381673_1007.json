{"test_class": {"identifier": "ValueTypeTest", "superclass": "", "interfaces": "", "fields": [], "file": "drools-core/src/test/java/org/drools/core/base/ValueTypeTest.java"}, "test_case": {"identifier": "testIsBoolean", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsBoolean() {\n        assertTrue( ValueType.BOOLEAN_TYPE.isBoolean() );\n        assertTrue( ValueType.PBOOLEAN_TYPE.isBoolean() );\n    }", "signature": "void testIsBoolean()", "full_signature": "@Test public void testIsBoolean()", "class_method_signature": "ValueTypeTest.testIsBoolean()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isBoolean", "assertTrue", "isBoolean"]}, "focal_class": {"identifier": "ValueType", "superclass": "", "interfaces": "implements\n    Externalizable", "fields": [{"original_string": "private static final long      serialVersionUID  = 510l;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID  = 510l", "var_name": "serialVersionUID"}, {"original_string": "public static final ValueType  NULL_TYPE         = new ValueType( \"null\",\n                                                                      null,\n                                                                      SimpleValueType.NULL);", "modifier": "public static final", "type": "ValueType", "declarator": "NULL_TYPE         = new ValueType( \"null\",\n                                                                      null,\n                                                                      SimpleValueType.NULL)", "var_name": "NULL_TYPE"}, {"original_string": "public static final ValueType  PCHAR_TYPE        = new ValueType( \"char\",\n                                                                      Character.TYPE,\n                                                                      SimpleValueType.CHAR );", "modifier": "public static final", "type": "ValueType", "declarator": "PCHAR_TYPE        = new ValueType( \"char\",\n                                                                      Character.TYPE,\n                                                                      SimpleValueType.CHAR )", "var_name": "PCHAR_TYPE"}, {"original_string": "public static final ValueType  PBYTE_TYPE        = new ValueType( \"byte\",\n                                                                      Byte.TYPE,\n                                                                      SimpleValueType.INTEGER );", "modifier": "public static final", "type": "ValueType", "declarator": "PBYTE_TYPE        = new ValueType( \"byte\",\n                                                                      Byte.TYPE,\n                                                                      SimpleValueType.INTEGER )", "var_name": "PBYTE_TYPE"}, {"original_string": "public static final ValueType  PSHORT_TYPE       = new ValueType( \"short\",\n                                                                      Short.TYPE,\n                                                                      SimpleValueType.INTEGER );", "modifier": "public static final", "type": "ValueType", "declarator": "PSHORT_TYPE       = new ValueType( \"short\",\n                                                                      Short.TYPE,\n                                                                      SimpleValueType.INTEGER )", "var_name": "PSHORT_TYPE"}, {"original_string": "public static final ValueType  PINTEGER_TYPE     = new ValueType( \"int\",\n                                                                      Integer.TYPE,\n                                                                      SimpleValueType.INTEGER );", "modifier": "public static final", "type": "ValueType", "declarator": "PINTEGER_TYPE     = new ValueType( \"int\",\n                                                                      Integer.TYPE,\n                                                                      SimpleValueType.INTEGER )", "var_name": "PINTEGER_TYPE"}, {"original_string": "public static final ValueType  PLONG_TYPE        = new ValueType( \"long\",\n                                                                      Long.TYPE,\n                                                                      SimpleValueType.INTEGER );", "modifier": "public static final", "type": "ValueType", "declarator": "PLONG_TYPE        = new ValueType( \"long\",\n                                                                      Long.TYPE,\n                                                                      SimpleValueType.INTEGER )", "var_name": "PLONG_TYPE"}, {"original_string": "public static final ValueType  PFLOAT_TYPE       = new ValueType( \"float\",\n                                                                      Float.TYPE,\n                                                                      SimpleValueType.DECIMAL );", "modifier": "public static final", "type": "ValueType", "declarator": "PFLOAT_TYPE       = new ValueType( \"float\",\n                                                                      Float.TYPE,\n                                                                      SimpleValueType.DECIMAL )", "var_name": "PFLOAT_TYPE"}, {"original_string": "public static final ValueType  PDOUBLE_TYPE      = new ValueType( \"double\",\n                                                                      Double.TYPE,\n                                                                      SimpleValueType.DECIMAL );", "modifier": "public static final", "type": "ValueType", "declarator": "PDOUBLE_TYPE      = new ValueType( \"double\",\n                                                                      Double.TYPE,\n                                                                      SimpleValueType.DECIMAL )", "var_name": "PDOUBLE_TYPE"}, {"original_string": "public static final ValueType  PBOOLEAN_TYPE     = new ValueType( \"boolean\",\n                                                                      Boolean.TYPE,\n                                                                      SimpleValueType.BOOLEAN );", "modifier": "public static final", "type": "ValueType", "declarator": "PBOOLEAN_TYPE     = new ValueType( \"boolean\",\n                                                                      Boolean.TYPE,\n                                                                      SimpleValueType.BOOLEAN )", "var_name": "PBOOLEAN_TYPE"}, {"original_string": "public static final ValueType  CHAR_TYPE         = new ValueType( \"Character\",\n                                                                      Character.class,\n                                                                      SimpleValueType.CHAR );", "modifier": "public static final", "type": "ValueType", "declarator": "CHAR_TYPE         = new ValueType( \"Character\",\n                                                                      Character.class,\n                                                                      SimpleValueType.CHAR )", "var_name": "CHAR_TYPE"}, {"original_string": "public static final ValueType  BYTE_TYPE         = new ValueType( \"Byte\",\n                                                                      Byte.class,\n                                                                      SimpleValueType.INTEGER);", "modifier": "public static final", "type": "ValueType", "declarator": "BYTE_TYPE         = new ValueType( \"Byte\",\n                                                                      Byte.class,\n                                                                      SimpleValueType.INTEGER)", "var_name": "BYTE_TYPE"}, {"original_string": "public static final ValueType  SHORT_TYPE        = new ValueType( \"Short\",\n                                                                      Short.class,\n                                                                      SimpleValueType.INTEGER );", "modifier": "public static final", "type": "ValueType", "declarator": "SHORT_TYPE        = new ValueType( \"Short\",\n                                                                      Short.class,\n                                                                      SimpleValueType.INTEGER )", "var_name": "SHORT_TYPE"}, {"original_string": "public static final ValueType  INTEGER_TYPE      = new ValueType( \"Integer\",\n                                                                      Integer.class,\n                                                                      SimpleValueType.INTEGER );", "modifier": "public static final", "type": "ValueType", "declarator": "INTEGER_TYPE      = new ValueType( \"Integer\",\n                                                                      Integer.class,\n                                                                      SimpleValueType.INTEGER )", "var_name": "INTEGER_TYPE"}, {"original_string": "public static final ValueType  LONG_TYPE         = new ValueType( \"Long\",\n                                                                      Long.class,\n                                                                      SimpleValueType.INTEGER );", "modifier": "public static final", "type": "ValueType", "declarator": "LONG_TYPE         = new ValueType( \"Long\",\n                                                                      Long.class,\n                                                                      SimpleValueType.INTEGER )", "var_name": "LONG_TYPE"}, {"original_string": "public static final ValueType  FLOAT_TYPE        = new ValueType( \"Float\",\n                                                                      Float.class,\n                                                                      SimpleValueType.DECIMAL );", "modifier": "public static final", "type": "ValueType", "declarator": "FLOAT_TYPE        = new ValueType( \"Float\",\n                                                                      Float.class,\n                                                                      SimpleValueType.DECIMAL )", "var_name": "FLOAT_TYPE"}, {"original_string": "public static final ValueType  DOUBLE_TYPE       = new ValueType( \"Double\",\n                                                                      Double.class,\n                                                                      SimpleValueType.DECIMAL );", "modifier": "public static final", "type": "ValueType", "declarator": "DOUBLE_TYPE       = new ValueType( \"Double\",\n                                                                      Double.class,\n                                                                      SimpleValueType.DECIMAL )", "var_name": "DOUBLE_TYPE"}, {"original_string": "public static final ValueType  BOOLEAN_TYPE      = new ValueType( \"Boolean\",\n                                                                      Boolean.class,\n                                                                      SimpleValueType.BOOLEAN );", "modifier": "public static final", "type": "ValueType", "declarator": "BOOLEAN_TYPE      = new ValueType( \"Boolean\",\n                                                                      Boolean.class,\n                                                                      SimpleValueType.BOOLEAN )", "var_name": "BOOLEAN_TYPE"}, {"original_string": "public static final ValueType  NUMBER_TYPE         = new ValueType( \"Number\",\n                                                                        Number.class,\n                                                                        SimpleValueType.NUMBER );", "modifier": "public static final", "type": "ValueType", "declarator": "NUMBER_TYPE         = new ValueType( \"Number\",\n                                                                        Number.class,\n                                                                        SimpleValueType.NUMBER )", "var_name": "NUMBER_TYPE"}, {"original_string": "public static final ValueType  BIG_DECIMAL_TYPE  = new BigDecimalValueType();", "modifier": "public static final", "type": "ValueType", "declarator": "BIG_DECIMAL_TYPE  = new BigDecimalValueType()", "var_name": "BIG_DECIMAL_TYPE"}, {"original_string": "public static final ValueType  BIG_INTEGER_TYPE  = new BigIntegerValueType();", "modifier": "public static final", "type": "ValueType", "declarator": "BIG_INTEGER_TYPE  = new BigIntegerValueType()", "var_name": "BIG_INTEGER_TYPE"}, {"original_string": "public static final ValueType  DATE_TYPE         = new ValueType( \"Date\",\n                                                                      Date.class,\n                                                                      SimpleValueType.DATE );", "modifier": "public static final", "type": "ValueType", "declarator": "DATE_TYPE         = new ValueType( \"Date\",\n                                                                      Date.class,\n                                                                      SimpleValueType.DATE )", "var_name": "DATE_TYPE"}, {"original_string": "public static final ValueType  LOCAL_DATE_TYPE   = new ValueType( \"LocalDate\",\n                                                                      LocalDate.class,\n                                                                      SimpleValueType.DATE );", "modifier": "public static final", "type": "ValueType", "declarator": "LOCAL_DATE_TYPE   = new ValueType( \"LocalDate\",\n                                                                      LocalDate.class,\n                                                                      SimpleValueType.DATE )", "var_name": "LOCAL_DATE_TYPE"}, {"original_string": "public static final ValueType  LOCAL_TIME_TYPE   = new ValueType( \"LocalTime\",\n                                                                      LocalDateTime.class,\n                                                                      SimpleValueType.DATE );", "modifier": "public static final", "type": "ValueType", "declarator": "LOCAL_TIME_TYPE   = new ValueType( \"LocalTime\",\n                                                                      LocalDateTime.class,\n                                                                      SimpleValueType.DATE )", "var_name": "LOCAL_TIME_TYPE"}, {"original_string": "public static final ValueType  ARRAY_TYPE        = new ValueType( \"Array\",\n                                                                      Object[].class,\n                                                                      SimpleValueType.LIST );", "modifier": "public static final", "type": "ValueType", "declarator": "ARRAY_TYPE        = new ValueType( \"Array\",\n                                                                      Object[].class,\n                                                                      SimpleValueType.LIST )", "var_name": "ARRAY_TYPE"}, {"original_string": "public static final ValueType  STRING_TYPE       = new StringValueType();", "modifier": "public static final", "type": "ValueType", "declarator": "STRING_TYPE       = new StringValueType()", "var_name": "STRING_TYPE"}, {"original_string": "public static final ValueType  OBJECT_TYPE       = new ValueType( \"Object\",\n                                                                      Object.class,\n                                                                      SimpleValueType.OBJECT );", "modifier": "public static final", "type": "ValueType", "declarator": "OBJECT_TYPE       = new ValueType( \"Object\",\n                                                                      Object.class,\n                                                                      SimpleValueType.OBJECT )", "var_name": "OBJECT_TYPE"}, {"original_string": "public static final ValueType  FACTTEMPLATE_TYPE = new ValueType( \"FactTemplate\",\n                                                                      FactTemplate.class,\n                                                                      SimpleValueType.UNKNOWN );", "modifier": "public static final", "type": "ValueType", "declarator": "FACTTEMPLATE_TYPE = new ValueType( \"FactTemplate\",\n                                                                      FactTemplate.class,\n                                                                      SimpleValueType.UNKNOWN )", "var_name": "FACTTEMPLATE_TYPE"}, {"original_string": "public static final ValueType  EVENT_TYPE        = new ValueType( \"Event\",\n                                                                      EventFactHandle.class,\n                                                                      SimpleValueType.OBJECT );", "modifier": "public static final", "type": "ValueType", "declarator": "EVENT_TYPE        = new ValueType( \"Event\",\n                                                                      EventFactHandle.class,\n                                                                      SimpleValueType.OBJECT )", "var_name": "EVENT_TYPE"}, {"original_string": "public static final ValueType  QUERY_TYPE        = new ValueType( \"Query\",\n                                                                      DroolsQuery.class,\n                                                                      SimpleValueType.OBJECT );", "modifier": "public static final", "type": "ValueType", "declarator": "QUERY_TYPE        = new ValueType( \"Query\",\n                                                                      DroolsQuery.class,\n                                                                      SimpleValueType.OBJECT )", "var_name": "QUERY_TYPE"}, {"original_string": "public static final ValueType  TRAIT_TYPE        = new ValueType( \"Trait\",\n                                                                      Thing.class,\n                                                                      SimpleValueType.OBJECT );", "modifier": "public static final", "type": "ValueType", "declarator": "TRAIT_TYPE        = new ValueType( \"Trait\",\n                                                                      Thing.class,\n                                                                      SimpleValueType.OBJECT )", "var_name": "TRAIT_TYPE"}, {"original_string": "public static final ValueType  CLASS_TYPE        = new ValueType( \"Class\",\n                                                                      Class.class,\n                                                                      SimpleValueType.OBJECT );", "modifier": "public static final", "type": "ValueType", "declarator": "CLASS_TYPE        = new ValueType( \"Class\",\n                                                                      Class.class,\n                                                                      SimpleValueType.OBJECT )", "var_name": "CLASS_TYPE"}, {"original_string": "private String           name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private Class<T>         classType;", "modifier": "private", "type": "Class<T>", "declarator": "classType", "var_name": "classType"}, {"original_string": "private int              simpleType;", "modifier": "private", "type": "int", "declarator": "simpleType", "var_name": "simpleType"}], "methods": [{"identifier": "ValueType", "parameters": "()", "modifiers": "public", "return": "", "signature": " ValueType()", "full_signature": "public  ValueType()", "class_method_signature": "ValueType.ValueType()", "testcase": false, "constructor": true}, {"identifier": "ValueType", "parameters": "(final String name,\n                      final Class<T> classType,\n                      final int simpleType)", "modifiers": "private", "return": "", "signature": " ValueType(final String name,\n                      final Class<T> classType,\n                      final int simpleType)", "full_signature": "private  ValueType(final String name,\n                      final Class<T> classType,\n                      final int simpleType)", "class_method_signature": "ValueType.ValueType(final String name,\n                      final Class<T> classType,\n                      final int simpleType)", "testcase": false, "constructor": true}, {"identifier": "readExternal", "parameters": "(ObjectInput in)", "modifiers": "public", "return": "void", "signature": "void readExternal(ObjectInput in)", "full_signature": "public void readExternal(ObjectInput in)", "class_method_signature": "ValueType.readExternal(ObjectInput in)", "testcase": false, "constructor": false}, {"identifier": "writeExternal", "parameters": "(ObjectOutput out)", "modifiers": "public", "return": "void", "signature": "void writeExternal(ObjectOutput out)", "full_signature": "public void writeExternal(ObjectOutput out)", "class_method_signature": "ValueType.writeExternal(ObjectOutput out)", "testcase": false, "constructor": false}, {"identifier": "readResolve", "parameters": "()", "modifiers": "private", "return": "Object", "signature": "Object readResolve()", "full_signature": "private Object readResolve()", "class_method_signature": "ValueType.readResolve()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "ValueType.getName()", "testcase": false, "constructor": false}, {"identifier": "getClassType", "parameters": "()", "modifiers": "public", "return": "Class<T>", "signature": "Class<T> getClassType()", "full_signature": "public Class<T> getClassType()", "class_method_signature": "ValueType.getClassType()", "testcase": false, "constructor": false}, {"identifier": "getSimpleType", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getSimpleType()", "full_signature": "public int getSimpleType()", "class_method_signature": "ValueType.getSimpleType()", "testcase": false, "constructor": false}, {"identifier": "determineValueType", "parameters": "(final Class<?> clazz)", "modifiers": "public static", "return": "ValueType", "signature": "ValueType determineValueType(final Class<?> clazz)", "full_signature": "public static ValueType determineValueType(final Class<?> clazz)", "class_method_signature": "ValueType.determineValueType(final Class<?> clazz)", "testcase": false, "constructor": false}, {"identifier": "isDateType", "parameters": "( Class<?> clazz )", "modifiers": "public static", "return": "boolean", "signature": "boolean isDateType( Class<?> clazz )", "full_signature": "public static boolean isDateType( Class<?> clazz )", "class_method_signature": "ValueType.isDateType( Class<?> clazz )", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String toString()", "full_signature": "public String toString()", "class_method_signature": "ValueType.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int hashCode()", "full_signature": "public int hashCode()", "class_method_signature": "ValueType.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object object)", "modifiers": "public", "return": "boolean", "signature": "boolean equals(final Object object)", "full_signature": "public boolean equals(final Object object)", "class_method_signature": "ValueType.equals(final Object object)", "testcase": false, "constructor": false}, {"identifier": "isBoolean", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isBoolean()", "full_signature": "public boolean isBoolean()", "class_method_signature": "ValueType.isBoolean()", "testcase": false, "constructor": false}, {"identifier": "isNumber", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isNumber()", "full_signature": "public boolean isNumber()", "class_method_signature": "ValueType.isNumber()", "testcase": false, "constructor": false}, {"identifier": "isIntegerNumber", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isIntegerNumber()", "full_signature": "public boolean isIntegerNumber()", "class_method_signature": "ValueType.isIntegerNumber()", "testcase": false, "constructor": false}, {"identifier": "isFloatNumber", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isFloatNumber()", "full_signature": "public boolean isFloatNumber()", "class_method_signature": "ValueType.isFloatNumber()", "testcase": false, "constructor": false}, {"identifier": "isChar", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isChar()", "full_signature": "public boolean isChar()", "class_method_signature": "ValueType.isChar()", "testcase": false, "constructor": false}, {"identifier": "isEvent", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isEvent()", "full_signature": "public boolean isEvent()", "class_method_signature": "ValueType.isEvent()", "testcase": false, "constructor": false}, {"identifier": "coerce", "parameters": "(Object value)", "modifiers": "public", "return": "T", "signature": "T coerce(Object value)", "full_signature": "public T coerce(Object value)", "class_method_signature": "ValueType.coerce(Object value)", "testcase": false, "constructor": false}], "file": "drools-core/src/main/java/org/drools/core/base/ValueType.java"}, "focal_method": {"identifier": "isBoolean", "parameters": "()", "modifiers": "public", "return": "boolean", "body": "public boolean isBoolean() {\n        return ((this.classType == Boolean.class) || (this.classType == Boolean.TYPE));\n    }", "signature": "boolean isBoolean()", "full_signature": "public boolean isBoolean()", "class_method_signature": "ValueType.isBoolean()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}