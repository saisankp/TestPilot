{"test_class": {"identifier": "AppPrefsProviderTest", "superclass": "extends FDroidProviderTest", "interfaces": "", "fields": [], "file": "app/src/test/java/org/fdroid/fdroid/data/AppPrefsProviderTest.java"}, "test_case": {"identifier": "newPreferences", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void newPreferences() {\n        App withPrefs = Assert.insertApp(context, \"com.example.withPrefs\", \"With Prefs\");\n        App withoutPrefs = Assert.insertApp(context, \"com.example.withoutPrefs\", \"Without Prefs\");\n\n        assertNull(AppPrefsProvider.Helper.getPrefsOrNull(context, withPrefs));\n        assertNull(AppPrefsProvider.Helper.getPrefsOrNull(context, withoutPrefs));\n\n        AppPrefs defaultPrefs = AppPrefsProvider.Helper.getPrefsOrDefault(context, withPrefs);\n        assertEquals(0, defaultPrefs.ignoreThisUpdate);\n        assertFalse(defaultPrefs.ignoreAllUpdates);\n        assertFalse(defaultPrefs.ignoreVulnerabilities);\n\n        AppPrefsProvider.Helper.update(context, withPrefs, new AppPrefs(12, false, false));\n        AppPrefs newPrefs = AppPrefsProvider.Helper.getPrefsOrDefault(context, withPrefs);\n        assertEquals(12, newPrefs.ignoreThisUpdate);\n        assertFalse(newPrefs.ignoreAllUpdates);\n        assertFalse(newPrefs.ignoreVulnerabilities);\n\n        AppPrefsProvider.Helper.update(context, withPrefs, new AppPrefs(14, true, true));\n        AppPrefs evenNewerPrefs = AppPrefsProvider.Helper.getPrefsOrDefault(context, withPrefs);\n        assertEquals(14, evenNewerPrefs.ignoreThisUpdate);\n        assertTrue(evenNewerPrefs.ignoreAllUpdates);\n        assertTrue(evenNewerPrefs.ignoreVulnerabilities);\n\n        assertNull(AppPrefsProvider.Helper.getPrefsOrNull(context, withoutPrefs));\n    }", "signature": "void newPreferences()", "full_signature": "@Test public void newPreferences()", "class_method_signature": "AppPrefsProviderTest.newPreferences()", "testcase": true, "constructor": false, "invocations": ["insertApp", "insertApp", "assertNull", "getPrefsOrNull", "assertNull", "getPrefsOrNull", "getPrefsOrDefault", "assertEquals", "assertFalse", "assertFalse", "update", "getPrefsOrDefault", "assertEquals", "assertFalse", "assertFalse", "update", "getPrefsOrDefault", "assertEquals", "assertTrue", "assertTrue", "assertNull", "getPrefsOrNull"]}, "focal_class": {"identifier": "AppPrefsProvider", "superclass": "extends FDroidProvider", "interfaces": "", "fields": [{"original_string": "private static final String PROVIDER_NAME = \"AppPrefsProvider\";", "modifier": "private static final", "type": "String", "declarator": "PROVIDER_NAME = \"AppPrefsProvider\"", "var_name": "PROVIDER_NAME"}, {"original_string": "private static final UriMatcher MATCHER = new UriMatcher(-1);", "modifier": "private static final", "type": "UriMatcher", "declarator": "MATCHER = new UriMatcher(-1)", "var_name": "MATCHER"}, {"original_string": "private static final String PATH_PACKAGE_NAME = \"packageName\";", "modifier": "private static final", "type": "String", "declarator": "PATH_PACKAGE_NAME = \"packageName\"", "var_name": "PATH_PACKAGE_NAME"}], "methods": [{"identifier": "getContentUri", "parameters": "()", "modifiers": "private static", "return": "Uri", "signature": "Uri getContentUri()", "full_signature": "private static Uri getContentUri()", "class_method_signature": "AppPrefsProvider.getContentUri()", "testcase": false, "constructor": false}, {"identifier": "getAppUri", "parameters": "(String packageName)", "modifiers": "public static", "return": "Uri", "signature": "Uri getAppUri(String packageName)", "full_signature": "public static Uri getAppUri(String packageName)", "class_method_signature": "AppPrefsProvider.getAppUri(String packageName)", "testcase": false, "constructor": false}, {"identifier": "getTableName", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getTableName()", "full_signature": "@Override protected String getTableName()", "class_method_signature": "AppPrefsProvider.getTableName()", "testcase": false, "constructor": false}, {"identifier": "getProviderName", "parameters": "()", "modifiers": "@Override protected", "return": "String", "signature": "String getProviderName()", "full_signature": "@Override protected String getProviderName()", "class_method_signature": "AppPrefsProvider.getProviderName()", "testcase": false, "constructor": false}, {"identifier": "getAuthority", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getAuthority()", "full_signature": "public static String getAuthority()", "class_method_signature": "AppPrefsProvider.getAuthority()", "testcase": false, "constructor": false}, {"identifier": "getMatcher", "parameters": "()", "modifiers": "@Override protected", "return": "UriMatcher", "signature": "UriMatcher getMatcher()", "full_signature": "@Override protected UriMatcher getMatcher()", "class_method_signature": "AppPrefsProvider.getMatcher()", "testcase": false, "constructor": false}, {"identifier": "querySingle", "parameters": "(String packageName)", "modifiers": "protected", "return": "QuerySelection", "signature": "QuerySelection querySingle(String packageName)", "full_signature": "protected QuerySelection querySingle(String packageName)", "class_method_signature": "AppPrefsProvider.querySingle(String packageName)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(@NonNull Uri uri, String[] projection,\n                        String customSelection, String[] selectionArgs, String sortOrder)", "modifiers": "@Override public", "return": "Cursor", "signature": "Cursor query(@NonNull Uri uri, String[] projection,\n                        String customSelection, String[] selectionArgs, String sortOrder)", "full_signature": "@Override public Cursor query(@NonNull Uri uri, String[] projection,\n                        String customSelection, String[] selectionArgs, String sortOrder)", "class_method_signature": "AppPrefsProvider.query(@NonNull Uri uri, String[] projection,\n                        String customSelection, String[] selectionArgs, String sortOrder)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(@NonNull Uri uri, String where, String[] whereArgs)", "modifiers": "@Override public", "return": "int", "signature": "int delete(@NonNull Uri uri, String where, String[] whereArgs)", "full_signature": "@Override public int delete(@NonNull Uri uri, String where, String[] whereArgs)", "class_method_signature": "AppPrefsProvider.delete(@NonNull Uri uri, String where, String[] whereArgs)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(@NonNull Uri uri, ContentValues values)", "modifiers": "@Override public", "return": "Uri", "signature": "Uri insert(@NonNull Uri uri, ContentValues values)", "full_signature": "@Override public Uri insert(@NonNull Uri uri, ContentValues values)", "class_method_signature": "AppPrefsProvider.insert(@NonNull Uri uri, ContentValues values)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(@NonNull Uri uri, ContentValues values, String where, String[] whereArgs)", "modifiers": "@Override public", "return": "int", "signature": "int update(@NonNull Uri uri, ContentValues values, String where, String[] whereArgs)", "full_signature": "@Override public int update(@NonNull Uri uri, ContentValues values, String where, String[] whereArgs)", "class_method_signature": "AppPrefsProvider.update(@NonNull Uri uri, ContentValues values, String where, String[] whereArgs)", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/fdroid/fdroid/data/AppPrefsProvider.java"}, "focal_method": {"identifier": "update", "parameters": "(@NonNull Uri uri, ContentValues values, String where, String[] whereArgs)", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int update(@NonNull Uri uri, ContentValues values, String where, String[] whereArgs) {\n        if (MATCHER.match(uri) != CODE_SINGLE) {\n            throw new UnsupportedOperationException(\"Update not supported for \" + uri + \".\");\n        }\n\n        QuerySelection query = new QuerySelection(where, whereArgs).add(querySingle(uri.getLastPathSegment()));\n        int count = db().update(getTableName(), values, query.getSelection(), query.getArgs());\n        getContext().getContentResolver().notifyChange(AppProvider.getCanUpdateUri(), null);\n        return count;\n    }", "signature": "int update(@NonNull Uri uri, ContentValues values, String where, String[] whereArgs)", "full_signature": "@Override public int update(@NonNull Uri uri, ContentValues values, String where, String[] whereArgs)", "class_method_signature": "AppPrefsProvider.update(@NonNull Uri uri, ContentValues values, String where, String[] whereArgs)", "testcase": false, "constructor": false, "invocations": ["match", "add", "querySingle", "getLastPathSegment", "update", "db", "getTableName", "getSelection", "getArgs", "notifyChange", "getContentResolver", "getContext", "getCanUpdateUri"]}, "repository": {"repo_id": 22165604, "url": "https://github.com/f-droid/fdroidclient", "stars": 331, "created": "7/23/2014 5:46:02 PM +00:00", "updates": "2020-01-25T14:27:31+00:00", "fork": "False", "license": "licensed"}}