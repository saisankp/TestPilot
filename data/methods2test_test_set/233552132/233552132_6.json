{"test_class": {"identifier": "GatewayFlowRuleControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_APP = \"test_app\";", "modifier": "private static final", "type": "String", "declarator": "TEST_APP = \"test_app\"", "var_name": "TEST_APP"}, {"original_string": "private static final String TEST_IP = \"localhost\";", "modifier": "private static final", "type": "String", "declarator": "TEST_IP = \"localhost\"", "var_name": "TEST_IP"}, {"original_string": "private static final Integer TEST_PORT = 8719;", "modifier": "private static final", "type": "Integer", "declarator": "TEST_PORT = 8719", "var_name": "TEST_PORT"}, {"original_string": "@Autowired\n    private MockMvc mockMvc;", "modifier": "@Autowired\n    private", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}, {"original_string": "@Autowired\n    private InMemGatewayFlowRuleStore repository;", "modifier": "@Autowired\n    private", "type": "InMemGatewayFlowRuleStore", "declarator": "repository", "var_name": "repository"}, {"original_string": "@MockBean\n    private SentinelApiClient sentinelApiClient;", "modifier": "@MockBean\n    private", "type": "SentinelApiClient", "declarator": "sentinelApiClient", "var_name": "sentinelApiClient"}], "file": "sentinel-dashboard/src/test/java/com/alibaba/csp/sentinel/dashboard/controller/gateway/GatewayFlowRuleControllerTest.java"}, "test_case": {"identifier": "testAddFlowRule", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddFlowRule() throws Exception {\n        String path = \"/gateway/flow/new.json\";\n\n        AddFlowRuleReqVo reqVo = new AddFlowRuleReqVo();\n        reqVo.setApp(TEST_APP);\n        reqVo.setIp(TEST_IP);\n        reqVo.setPort(TEST_PORT);\n\n        reqVo.setResourceMode(RESOURCE_MODE_ROUTE_ID);\n        reqVo.setResource(\"httpbin_route\");\n\n        reqVo.setGrade(FLOW_GRADE_QPS);\n        reqVo.setCount(5D);\n        reqVo.setInterval(30L);\n        reqVo.setIntervalUnit(GatewayFlowRuleEntity.INTERVAL_UNIT_SECOND);\n        reqVo.setControlBehavior(CONTROL_BEHAVIOR_DEFAULT);\n        reqVo.setBurst(0);\n        reqVo.setMaxQueueingTimeoutMs(0);\n\n        given(sentinelApiClient.modifyGatewayFlowRules(eq(TEST_APP), eq(TEST_IP), eq(TEST_PORT), any())).willReturn(true);\n\n        MockHttpServletRequestBuilder requestBuilder = MockMvcRequestBuilders.post(path);\n        requestBuilder.content(JSON.toJSONString(reqVo)).contentType(MediaType.APPLICATION_JSON);\n\n        // Do controller logic\n        MvcResult mvcResult = mockMvc.perform(requestBuilder)\n                .andExpect(MockMvcResultMatchers.status().isOk())\n                .andDo(MockMvcResultHandlers.print()).andReturn();\n\n        // Verify the modifyGatewayFlowRules method has been called\n        verify(sentinelApiClient).modifyGatewayFlowRules(eq(TEST_APP), eq(TEST_IP), eq(TEST_PORT), any());\n\n        Result<GatewayFlowRuleEntity> result = JSONObject.parseObject(mvcResult.getResponse().getContentAsString(), new TypeReference<Result<GatewayFlowRuleEntity>>() {});\n        assertTrue(result.isSuccess());\n\n        // Verify the result\n        GatewayFlowRuleEntity entity = result.getData();\n        assertNotNull(entity);\n        assertEquals(TEST_APP, entity.getApp());\n        assertEquals(TEST_IP, entity.getIp());\n        assertEquals(TEST_PORT, entity.getPort());\n        assertEquals(RESOURCE_MODE_ROUTE_ID, entity.getResourceMode().intValue());\n        assertEquals(\"httpbin_route\", entity.getResource());\n        assertNotNull(entity.getId());\n        assertNotNull(entity.getGmtCreate());\n        assertNotNull(entity.getGmtModified());\n\n        // Verify the entity which is add in memory repository\n        List<GatewayFlowRuleEntity> entitiesInMem = repository.findAllByApp(TEST_APP);\n        assertEquals(1, entitiesInMem.size());\n        assertEquals(entity, entitiesInMem.get(0));\n    }", "signature": "void testAddFlowRule()", "full_signature": "@Test public void testAddFlowRule()", "class_method_signature": "GatewayFlowRuleControllerTest.testAddFlowRule()", "testcase": true, "constructor": false, "invocations": ["setApp", "setIp", "setPort", "setResourceMode", "setResource", "setGrade", "setCount", "setInterval", "setIntervalUnit", "setControlBehavior", "setBurst", "setMaxQueueingTimeoutMs", "willReturn", "given", "modifyGatewayFlowRules", "eq", "eq", "eq", "any", "post", "contentType", "content", "toJSONString", "andReturn", "andDo", "andExpect", "perform", "isOk", "status", "print", "modifyGatewayFlowRules", "verify", "eq", "eq", "eq", "any", "parseObject", "getContentAsString", "getResponse", "assertTrue", "isSuccess", "getData", "assertNotNull", "assertEquals", "getApp", "assertEquals", "getIp", "assertEquals", "getPort", "assertEquals", "intValue", "getResourceMode", "assertEquals", "getResource", "assertNotNull", "getId", "assertNotNull", "getGmtCreate", "assertNotNull", "getGmtModified", "findAllByApp", "assertEquals", "size", "assertEquals", "get"]}, "focal_class": {"identifier": "GatewayFlowRuleController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(GatewayFlowRuleController.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(GatewayFlowRuleController.class)", "var_name": "logger"}, {"original_string": "@Autowired\n    private InMemGatewayFlowRuleStore repository;", "modifier": "@Autowired\n    private", "type": "InMemGatewayFlowRuleStore", "declarator": "repository", "var_name": "repository"}, {"original_string": "@Autowired\n    private SentinelApiClient sentinelApiClient;", "modifier": "@Autowired\n    private", "type": "SentinelApiClient", "declarator": "sentinelApiClient", "var_name": "sentinelApiClient"}], "methods": [{"identifier": "queryFlowRules", "parameters": "(String app, String ip, Integer port)", "modifiers": "@GetMapping(\"/list.json\") @AuthAction(AuthService.PrivilegeType.READ_RULE) public", "return": "Result<List<GatewayFlowRuleEntity>>", "signature": "Result<List<GatewayFlowRuleEntity>> queryFlowRules(String app, String ip, Integer port)", "full_signature": "@GetMapping(\"/list.json\") @AuthAction(AuthService.PrivilegeType.READ_RULE) public Result<List<GatewayFlowRuleEntity>> queryFlowRules(String app, String ip, Integer port)", "class_method_signature": "GatewayFlowRuleController.queryFlowRules(String app, String ip, Integer port)", "testcase": false, "constructor": false}, {"identifier": "addFlowRule", "parameters": "(@RequestBody AddFlowRuleReqVo reqVo)", "modifiers": "@PostMapping(\"/new.json\") @AuthAction(AuthService.PrivilegeType.WRITE_RULE) public", "return": "Result<GatewayFlowRuleEntity>", "signature": "Result<GatewayFlowRuleEntity> addFlowRule(@RequestBody AddFlowRuleReqVo reqVo)", "full_signature": "@PostMapping(\"/new.json\") @AuthAction(AuthService.PrivilegeType.WRITE_RULE) public Result<GatewayFlowRuleEntity> addFlowRule(@RequestBody AddFlowRuleReqVo reqVo)", "class_method_signature": "GatewayFlowRuleController.addFlowRule(@RequestBody AddFlowRuleReqVo reqVo)", "testcase": false, "constructor": false}, {"identifier": "updateFlowRule", "parameters": "(@RequestBody UpdateFlowRuleReqVo reqVo)", "modifiers": "@PostMapping(\"/save.json\") @AuthAction(AuthService.PrivilegeType.WRITE_RULE) public", "return": "Result<GatewayFlowRuleEntity>", "signature": "Result<GatewayFlowRuleEntity> updateFlowRule(@RequestBody UpdateFlowRuleReqVo reqVo)", "full_signature": "@PostMapping(\"/save.json\") @AuthAction(AuthService.PrivilegeType.WRITE_RULE) public Result<GatewayFlowRuleEntity> updateFlowRule(@RequestBody UpdateFlowRuleReqVo reqVo)", "class_method_signature": "GatewayFlowRuleController.updateFlowRule(@RequestBody UpdateFlowRuleReqVo reqVo)", "testcase": false, "constructor": false}, {"identifier": "deleteFlowRule", "parameters": "(Long id)", "modifiers": "@PostMapping(\"/delete.json\") @AuthAction(AuthService.PrivilegeType.DELETE_RULE) public", "return": "Result<Long>", "signature": "Result<Long> deleteFlowRule(Long id)", "full_signature": "@PostMapping(\"/delete.json\") @AuthAction(AuthService.PrivilegeType.DELETE_RULE) public Result<Long> deleteFlowRule(Long id)", "class_method_signature": "GatewayFlowRuleController.deleteFlowRule(Long id)", "testcase": false, "constructor": false}, {"identifier": "publishRules", "parameters": "(String app, String ip, Integer port)", "modifiers": "private", "return": "boolean", "signature": "boolean publishRules(String app, String ip, Integer port)", "full_signature": "private boolean publishRules(String app, String ip, Integer port)", "class_method_signature": "GatewayFlowRuleController.publishRules(String app, String ip, Integer port)", "testcase": false, "constructor": false}], "file": "sentinel-dashboard/src/main/java/com/alibaba/csp/sentinel/dashboard/controller/gateway/GatewayFlowRuleController.java"}, "focal_method": {"identifier": "addFlowRule", "parameters": "(@RequestBody AddFlowRuleReqVo reqVo)", "modifiers": "@PostMapping(\"/new.json\") @AuthAction(AuthService.PrivilegeType.WRITE_RULE) public", "return": "Result<GatewayFlowRuleEntity>", "body": "@PostMapping(\"/new.json\")\n    @AuthAction(AuthService.PrivilegeType.WRITE_RULE)\n    public Result<GatewayFlowRuleEntity> addFlowRule(@RequestBody AddFlowRuleReqVo reqVo) {\n\n        String app = reqVo.getApp();\n        if (StringUtil.isBlank(app)) {\n            return Result.ofFail(-1, \"app can't be null or empty\");\n        }\n\n        GatewayFlowRuleEntity entity = new GatewayFlowRuleEntity();\n        entity.setApp(app.trim());\n\n        String ip = reqVo.getIp();\n        if (StringUtil.isBlank(ip)) {\n            return Result.ofFail(-1, \"ip can't be null or empty\");\n        }\n        entity.setIp(ip.trim());\n\n        Integer port = reqVo.getPort();\n        if (port == null) {\n            return Result.ofFail(-1, \"port can't be null\");\n        }\n        entity.setPort(port);\n\n        // API\u7c7b\u578b, Route ID\u6216API\u5206\u7ec4\n        Integer resourceMode = reqVo.getResourceMode();\n        if (resourceMode == null) {\n            return Result.ofFail(-1, \"resourceMode can't be null\");\n        }\n        if (!Arrays.asList(RESOURCE_MODE_ROUTE_ID, RESOURCE_MODE_CUSTOM_API_NAME).contains(resourceMode)) {\n            return Result.ofFail(-1, \"invalid resourceMode: \" + resourceMode);\n        }\n        entity.setResourceMode(resourceMode);\n\n        // API\u540d\u79f0\n        String resource = reqVo.getResource();\n        if (StringUtil.isBlank(resource)) {\n            return Result.ofFail(-1, \"resource can't be null or empty\");\n        }\n        entity.setResource(resource.trim());\n\n        // \u9488\u5bf9\u8bf7\u6c42\u5c5e\u6027\n        GatewayParamFlowItemVo paramItem = reqVo.getParamItem();\n        if (paramItem != null) {\n            GatewayParamFlowItemEntity itemEntity = new GatewayParamFlowItemEntity();\n            entity.setParamItem(itemEntity);\n\n            // \u53c2\u6570\u5c5e\u6027 0-ClientIP 1-Remote Host 2-Header 3-URL\u53c2\u6570 4-Cookie\n            Integer parseStrategy = paramItem.getParseStrategy();\n            if (!Arrays.asList(PARAM_PARSE_STRATEGY_CLIENT_IP, PARAM_PARSE_STRATEGY_HOST, PARAM_PARSE_STRATEGY_HEADER\n                    , PARAM_PARSE_STRATEGY_URL_PARAM, PARAM_PARSE_STRATEGY_COOKIE).contains(parseStrategy)) {\n                return Result.ofFail(-1, \"invalid parseStrategy: \" + parseStrategy);\n            }\n            itemEntity.setParseStrategy(paramItem.getParseStrategy());\n\n            // \u5f53\u53c2\u6570\u5c5e\u6027\u4e3a2-Header 3-URL\u53c2\u6570 4-Cookie\u65f6\uff0c\u53c2\u6570\u540d\u79f0\u5fc5\u586b\n            if (Arrays.asList(PARAM_PARSE_STRATEGY_HEADER, PARAM_PARSE_STRATEGY_URL_PARAM, PARAM_PARSE_STRATEGY_COOKIE).contains(parseStrategy)) {\n                // \u53c2\u6570\u540d\u79f0\n                String fieldName = paramItem.getFieldName();\n                if (StringUtil.isBlank(fieldName)) {\n                    return Result.ofFail(-1, \"fieldName can't be null or empty\");\n                }\n                itemEntity.setFieldName(paramItem.getFieldName());\n\n                String pattern = paramItem.getPattern();\n                // \u5982\u679c\u5339\u914d\u4e32\u4e0d\u4e3a\u7a7a\uff0c\u9a8c\u8bc1\u5339\u914d\u6a21\u5f0f\n                if (StringUtil.isNotEmpty(pattern)) {\n                    itemEntity.setPattern(pattern);\n\n                    Integer matchStrategy = paramItem.getMatchStrategy();\n                    if (!Arrays.asList(PARAM_MATCH_STRATEGY_EXACT, PARAM_MATCH_STRATEGY_CONTAINS, PARAM_MATCH_STRATEGY_REGEX).contains(matchStrategy)) {\n                        return Result.ofFail(-1, \"invalid matchStrategy: \" + matchStrategy);\n                    }\n                    itemEntity.setMatchStrategy(matchStrategy);\n                }\n            }\n        }\n\n        // \u9608\u503c\u7c7b\u578b 0-\u7ebf\u7a0b\u6570 1-QPS\n        Integer grade = reqVo.getGrade();\n        if (grade == null) {\n            return Result.ofFail(-1, \"grade can't be null\");\n        }\n        if (!Arrays.asList(FLOW_GRADE_THREAD, FLOW_GRADE_QPS).contains(grade)) {\n            return Result.ofFail(-1, \"invalid grade: \" + grade);\n        }\n        entity.setGrade(grade);\n\n        // QPS\u9608\u503c\n        Double count = reqVo.getCount();\n        if (count == null) {\n            return Result.ofFail(-1, \"count can't be null\");\n        }\n        if (count < 0) {\n            return Result.ofFail(-1, \"count should be at lease zero\");\n        }\n        entity.setCount(count);\n\n        // \u95f4\u9694\n        Long interval = reqVo.getInterval();\n        if (interval == null) {\n            return Result.ofFail(-1, \"interval can't be null\");\n        }\n        if (interval <= 0) {\n            return Result.ofFail(-1, \"interval should be greater than zero\");\n        }\n        entity.setInterval(interval);\n\n        // \u95f4\u9694\u5355\u4f4d\n        Integer intervalUnit = reqVo.getIntervalUnit();\n        if (intervalUnit == null) {\n            return Result.ofFail(-1, \"intervalUnit can't be null\");\n        }\n        if (!Arrays.asList(INTERVAL_UNIT_SECOND, INTERVAL_UNIT_MINUTE, INTERVAL_UNIT_HOUR, INTERVAL_UNIT_DAY).contains(intervalUnit)) {\n            return Result.ofFail(-1, \"Invalid intervalUnit: \" + intervalUnit);\n        }\n        entity.setIntervalUnit(intervalUnit);\n\n        // \u6d41\u63a7\u65b9\u5f0f 0-\u5feb\u901f\u5931\u8d25 2-\u5300\u901f\u6392\u961f\n        Integer controlBehavior = reqVo.getControlBehavior();\n        if (controlBehavior == null) {\n            return Result.ofFail(-1, \"controlBehavior can't be null\");\n        }\n        if (!Arrays.asList(CONTROL_BEHAVIOR_DEFAULT, CONTROL_BEHAVIOR_RATE_LIMITER).contains(controlBehavior)) {\n            return Result.ofFail(-1, \"invalid controlBehavior: \" + controlBehavior);\n        }\n        entity.setControlBehavior(controlBehavior);\n\n        if (CONTROL_BEHAVIOR_DEFAULT == controlBehavior) {\n            // 0-\u5feb\u901f\u5931\u8d25, \u5219Burst size\u5fc5\u586b\n            Integer burst = reqVo.getBurst();\n            if (burst == null) {\n                return Result.ofFail(-1, \"burst can't be null\");\n            }\n            if (burst < 0) {\n                return Result.ofFail(-1, \"invalid burst: \" + burst);\n            }\n            entity.setBurst(burst);\n        } else if (CONTROL_BEHAVIOR_RATE_LIMITER == controlBehavior) {\n            // 1-\u5300\u901f\u6392\u961f, \u5219\u8d85\u65f6\u65f6\u95f4\u5fc5\u586b\n            Integer maxQueueingTimeoutMs = reqVo.getMaxQueueingTimeoutMs();\n            if (maxQueueingTimeoutMs == null) {\n                return Result.ofFail(-1, \"maxQueueingTimeoutMs can't be null\");\n            }\n            if (maxQueueingTimeoutMs < 0) {\n                return Result.ofFail(-1, \"invalid maxQueueingTimeoutMs: \" + maxQueueingTimeoutMs);\n            }\n            entity.setMaxQueueingTimeoutMs(maxQueueingTimeoutMs);\n        }\n\n        Date date = new Date();\n        entity.setGmtCreate(date);\n        entity.setGmtModified(date);\n\n        try {\n            entity = repository.save(entity);\n        } catch (Throwable throwable) {\n            logger.error(\"add gateway flow rule error:\", throwable);\n            return Result.ofThrowable(-1, throwable);\n        }\n\n        if (!publishRules(app, ip, port)) {\n            logger.warn(\"publish gateway flow rules fail after add\");\n        }\n\n        return Result.ofSuccess(entity);\n    }", "signature": "Result<GatewayFlowRuleEntity> addFlowRule(@RequestBody AddFlowRuleReqVo reqVo)", "full_signature": "@PostMapping(\"/new.json\") @AuthAction(AuthService.PrivilegeType.WRITE_RULE) public Result<GatewayFlowRuleEntity> addFlowRule(@RequestBody AddFlowRuleReqVo reqVo)", "class_method_signature": "GatewayFlowRuleController.addFlowRule(@RequestBody AddFlowRuleReqVo reqVo)", "testcase": false, "constructor": false, "invocations": ["getApp", "isBlank", "ofFail", "setApp", "trim", "getIp", "isBlank", "ofFail", "setIp", "trim", "getPort", "ofFail", "setPort", "getResourceMode", "ofFail", "contains", "asList", "ofFail", "setResourceMode", "getResource", "isBlank", "ofFail", "setResource", "trim", "getParamItem", "setParamItem", "getParseStrategy", "contains", "asList", "ofFail", "setParseStrategy", "getParseStrategy", "contains", "asList", "getFieldName", "isBlank", "ofFail", "setFieldName", "getFieldName", "getPattern", "isNotEmpty", "setPattern", "getMatchStrategy", "contains", "asList", "ofFail", "setMatchStrategy", "getGrade", "ofFail", "contains", "asList", "ofFail", "setGrade", "getCount", "ofFail", "ofFail", "setCount", "getInterval", "ofFail", "ofFail", "setInterval", "getIntervalUnit", "ofFail", "contains", "asList", "ofFail", "setIntervalUnit", "getControlBehavior", "ofFail", "contains", "asList", "ofFail", "setControlBehavior", "getBurst", "ofFail", "ofFail", "setBurst", "getMaxQueueingTimeoutMs", "ofFail", "ofFail", "setMaxQueueingTimeoutMs", "setGmtCreate", "setGmtModified", "save", "error", "ofThrowable", "publishRules", "warn", "ofSuccess"]}, "repository": {"repo_id": 233552132, "url": "https://github.com/2227324689/Spring-Cloud-Alibaba-", "language": "Java", "is_fork": false, "fork_count": 27, "stargazer_count": 33, "size": 5389, "license": "licensed"}}