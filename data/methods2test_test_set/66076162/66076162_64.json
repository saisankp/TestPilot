{"test_class": {"identifier": "InfrastructureErrorBundleTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private InfrastructureErrorBundle infrastructureErrorBundle;", "modifier": "private", "type": "InfrastructureErrorBundle", "declarator": "infrastructureErrorBundle", "var_name": "infrastructureErrorBundle"}, {"original_string": "@Mock private Exception mockException;", "modifier": "@Mock private", "type": "Exception", "declarator": "mockException", "var_name": "mockException"}], "file": "infrastructure/src/test/java/com/remotecraft/app/infrastructure/exception/InfrastructureErrorBundleTest.java"}, "test_case": {"identifier": "shouldReturnEmptyErrorMessageGivenANullException", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldReturnEmptyErrorMessageGivenANullException() throws Exception {\n    InfrastructureErrorBundle infrastructureErrorBundleWithNullException =\n        new InfrastructureErrorBundle(null);\n    String errorMessage = infrastructureErrorBundleWithNullException.getErrorMessage();\n\n    assertThat(errorMessage, is(\"\"));\n  }", "signature": "void shouldReturnEmptyErrorMessageGivenANullException()", "full_signature": "@Test public void shouldReturnEmptyErrorMessageGivenANullException()", "class_method_signature": "InfrastructureErrorBundleTest.shouldReturnEmptyErrorMessageGivenANullException()", "testcase": true, "constructor": false, "invocations": ["getErrorMessage", "assertThat", "is"]}, "focal_class": {"identifier": "InfrastructureErrorBundle", "superclass": "", "interfaces": "implements ErrorBundle", "fields": [{"original_string": "private final Exception exception;", "modifier": "private final", "type": "Exception", "declarator": "exception", "var_name": "exception"}], "methods": [{"identifier": "InfrastructureErrorBundle", "parameters": "(Exception exception)", "modifiers": "public", "return": "", "signature": " InfrastructureErrorBundle(Exception exception)", "full_signature": "public  InfrastructureErrorBundle(Exception exception)", "class_method_signature": "InfrastructureErrorBundle.InfrastructureErrorBundle(Exception exception)", "testcase": false, "constructor": true}, {"identifier": "getException", "parameters": "()", "modifiers": "@Override public", "return": "Exception", "signature": "Exception getException()", "full_signature": "@Override public Exception getException()", "class_method_signature": "InfrastructureErrorBundle.getException()", "testcase": false, "constructor": false}, {"identifier": "getErrorMessage", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getErrorMessage()", "full_signature": "@Override public String getErrorMessage()", "class_method_signature": "InfrastructureErrorBundle.getErrorMessage()", "testcase": false, "constructor": false}], "file": "infrastructure/src/main/java/com/remotecraft/app/infrastructure/exception/InfrastructureErrorBundle.java"}, "focal_method": {"identifier": "getErrorMessage", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String getErrorMessage() {\n    String errorMessage = \"\";\n    if (exception != null && exception.getMessage() != null) {\n      errorMessage = exception.getMessage();\n    }\n\n    return errorMessage;\n  }", "signature": "String getErrorMessage()", "full_signature": "@Override public String getErrorMessage()", "class_method_signature": "InfrastructureErrorBundle.getErrorMessage()", "testcase": false, "constructor": false, "invocations": ["getMessage", "getMessage"]}, "repository": {"repo_id": 66076162, "url": "https://github.com/RemotecraftProject/RemotecraftApp", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 2502, "license": "licensed"}}