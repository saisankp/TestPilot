{"test_class": {"identifier": "SpringUsernamePasswordCallbackHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SpringUsernamePasswordCallbackHandler handler;", "modifier": "private", "type": "SpringUsernamePasswordCallbackHandler", "declarator": "handler", "var_name": "handler"}], "file": "spring-ws-security/src/test/java/org/springframework/ws/soap/security/xwss/callback/SpringUsernamePasswordCallbackHandlerTest.java"}, "test_case": {"identifier": "testPasswordCallback", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testPasswordCallback() throws Exception {\n\t\tPasswordCallback passwordCallback = new PasswordCallback();\n\t\thandler.handleInternal(passwordCallback);\n\t\tAssert.assertEquals(\"Invalid username\", \"Ernie\", passwordCallback.getPassword());\n\t}", "signature": "void testPasswordCallback()", "full_signature": "@Test public void testPasswordCallback()", "class_method_signature": "SpringUsernamePasswordCallbackHandlerTest.testPasswordCallback()", "testcase": true, "constructor": false, "invocations": ["handleInternal", "assertEquals", "getPassword"]}, "focal_class": {"identifier": "SpringUsernamePasswordCallbackHandler", "superclass": "extends AbstractCallbackHandler", "interfaces": "", "fields": [], "methods": [{"identifier": "handleInternal", "parameters": "(Callback callback)", "modifiers": "@Override protected", "return": "void", "signature": "void handleInternal(Callback callback)", "full_signature": "@Override protected void handleInternal(Callback callback)", "class_method_signature": "SpringUsernamePasswordCallbackHandler.handleInternal(Callback callback)", "testcase": false, "constructor": false}], "file": "spring-ws-security/src/main/java/org/springframework/ws/soap/security/xwss/callback/SpringUsernamePasswordCallbackHandler.java"}, "focal_method": {"identifier": "handleInternal", "parameters": "(Callback callback)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n\tprotected void handleInternal(Callback callback) throws IOException, UnsupportedCallbackException {\n\t\tif (callback instanceof UsernameCallback) {\n\t\t\tAuthentication authentication = SecurityContextHolder.getContext().getAuthentication();\n\t\t\tif (authentication != null && authentication.getName() != null) {\n\t\t\t\tUsernameCallback usernameCallback = (UsernameCallback) callback;\n\t\t\t\tusernameCallback.setUsername(authentication.getName());\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tlogger.warn(\"Cannot handle UsernameCallback: Spring Security SecurityContext contains no Authentication\");\n\t\t\t}\n\t\t} else if (callback instanceof PasswordCallback) {\n\t\t\tAuthentication authentication = SecurityContextHolder.getContext().getAuthentication();\n\t\t\tif (authentication != null && authentication.getName() != null) {\n\t\t\t\tPasswordCallback passwordCallback = (PasswordCallback) callback;\n\t\t\t\tpasswordCallback.setPassword(authentication.getCredentials().toString());\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tlogger.warn(\"Canot handle PasswordCallback: Spring Security SecurityContext contains no Authentication\");\n\t\t\t}\n\t\t}\n\t\tthrow new UnsupportedCallbackException(callback);\n\t}", "signature": "void handleInternal(Callback callback)", "full_signature": "@Override protected void handleInternal(Callback callback)", "class_method_signature": "SpringUsernamePasswordCallbackHandler.handleInternal(Callback callback)", "testcase": false, "constructor": false, "invocations": ["getAuthentication", "getContext", "getName", "setUsername", "getName", "warn", "getAuthentication", "getContext", "getName", "setPassword", "toString", "getCredentials", "warn"]}, "repository": {"repo_id": 7914484, "url": "https://github.com/spring-projects/spring-ws", "language": "Java", "is_fork": false, "fork_count": 232, "stargazer_count": 209, "size": 20360, "license": "licensed"}}