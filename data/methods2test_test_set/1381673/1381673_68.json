{"test_class": {"identifier": "RuleScenarioRunnerHelperTest", "superclass": "extends AbstractRuleCoverageTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    protected RuleScenarioExecutableBuilder ruleScenarioExecutableBuilderMock;", "modifier": "@Mock\n    protected", "type": "RuleScenarioExecutableBuilder", "declarator": "ruleScenarioExecutableBuilderMock", "var_name": "ruleScenarioExecutableBuilderMock"}, {"original_string": "@Mock\n    protected KieContainer kieContainerMock;", "modifier": "@Mock\n    protected", "type": "KieContainer", "declarator": "kieContainerMock", "var_name": "kieContainerMock"}, {"original_string": "private static final String NAME = \"NAME\";", "modifier": "private static final", "type": "String", "declarator": "NAME = \"NAME\"", "var_name": "NAME"}, {"original_string": "private static final String AMOUNT = \"10\";", "modifier": "private static final", "type": "String", "declarator": "AMOUNT = \"10\"", "var_name": "AMOUNT"}, {"original_string": "private static final String TEST_DESCRIPTION = \"Test description\";", "modifier": "private static final", "type": "String", "declarator": "TEST_DESCRIPTION = \"Test description\"", "var_name": "TEST_DESCRIPTION"}, {"original_string": "private static final ClassLoader classLoader = RuleScenarioRunnerHelperTest.class.getClassLoader();", "modifier": "private static final", "type": "ClassLoader", "declarator": "classLoader = RuleScenarioRunnerHelperTest.class.getClassLoader()", "var_name": "classLoader"}, {"original_string": "private static final ExpressionEvaluatorFactory expressionEvaluatorFactory = ExpressionEvaluatorFactory.create(classLoader, ScenarioSimulationModel.Type.RULE);", "modifier": "private static final", "type": "ExpressionEvaluatorFactory", "declarator": "expressionEvaluatorFactory = ExpressionEvaluatorFactory.create(classLoader, ScenarioSimulationModel.Type.RULE)", "var_name": "expressionEvaluatorFactory"}, {"original_string": "private static final ExpressionEvaluator expressionEvaluator = new BaseExpressionEvaluator(classLoader);", "modifier": "private static final", "type": "ExpressionEvaluator", "declarator": "expressionEvaluator = new BaseExpressionEvaluator(classLoader)", "var_name": "expressionEvaluator"}, {"original_string": "private final RuleScenarioRunnerHelper runnerHelper = new RuleScenarioRunnerHelper() {\n        @Override\n        protected RuleScenarioExecutableBuilder createBuilderWrapper(KieContainer kieContainer, Settings settings) {\n            return ruleScenarioExecutableBuilderMock;\n        }\n    };", "modifier": "private final", "type": "RuleScenarioRunnerHelper", "declarator": "runnerHelper = new RuleScenarioRunnerHelper() {\n        @Override\n        protected RuleScenarioExecutableBuilder createBuilderWrapper(KieContainer kieContainer, Settings settings) {\n            return ruleScenarioExecutableBuilderMock;\n        }\n    }", "var_name": "runnerHelper"}, {"original_string": "private Simulation simulation;", "modifier": "private", "type": "Simulation", "declarator": "simulation", "var_name": "simulation"}, {"original_string": "private Background background;", "modifier": "private", "type": "Background", "declarator": "background", "var_name": "background"}, {"original_string": "private Settings settings;", "modifier": "private", "type": "Settings", "declarator": "settings", "var_name": "settings"}, {"original_string": "private FactIdentifier personFactIdentifier;", "modifier": "private", "type": "FactIdentifier", "declarator": "personFactIdentifier", "var_name": "personFactIdentifier"}, {"original_string": "private ExpressionIdentifier firstNameGivenExpressionIdentifier;", "modifier": "private", "type": "ExpressionIdentifier", "declarator": "firstNameGivenExpressionIdentifier", "var_name": "firstNameGivenExpressionIdentifier"}, {"original_string": "private FactMapping firstNameGivenFactMapping;", "modifier": "private", "type": "FactMapping", "declarator": "firstNameGivenFactMapping", "var_name": "firstNameGivenFactMapping"}, {"original_string": "private FactMapping backgroundFirstNameGivenFactMapping;", "modifier": "private", "type": "FactMapping", "declarator": "backgroundFirstNameGivenFactMapping", "var_name": "backgroundFirstNameGivenFactMapping"}, {"original_string": "private Scenario scenario1;", "modifier": "private", "type": "Scenario", "declarator": "scenario1", "var_name": "scenario1"}, {"original_string": "private Scenario scenario2;", "modifier": "private", "type": "Scenario", "declarator": "scenario2", "var_name": "scenario2"}, {"original_string": "private BackgroundData backgroundData1;", "modifier": "private", "type": "BackgroundData", "declarator": "backgroundData1", "var_name": "backgroundData1"}, {"original_string": "private BackgroundData backgroundData2;", "modifier": "private", "type": "BackgroundData", "declarator": "backgroundData2", "var_name": "backgroundData2"}, {"original_string": "private ExpressionIdentifier firstNameExpectedExpressionIdentifier;", "modifier": "private", "type": "ExpressionIdentifier", "declarator": "firstNameExpectedExpressionIdentifier", "var_name": "firstNameExpectedExpressionIdentifier"}, {"original_string": "private FactMapping firstNameExpectedFactMapping;", "modifier": "private", "type": "FactMapping", "declarator": "firstNameExpectedFactMapping", "var_name": "firstNameExpectedFactMapping"}, {"original_string": "private FactIdentifier disputeFactIdentifier;", "modifier": "private", "type": "FactIdentifier", "declarator": "disputeFactIdentifier", "var_name": "disputeFactIdentifier"}, {"original_string": "private ExpressionIdentifier amountGivenExpressionIdentifier;", "modifier": "private", "type": "ExpressionIdentifier", "declarator": "amountGivenExpressionIdentifier", "var_name": "amountGivenExpressionIdentifier"}, {"original_string": "private FactMapping amountNameGivenFactMapping;", "modifier": "private", "type": "FactMapping", "declarator": "amountNameGivenFactMapping", "var_name": "amountNameGivenFactMapping"}, {"original_string": "private FactMapping backgroundAmountNameGivenFactMapping;", "modifier": "private", "type": "FactMapping", "declarator": "backgroundAmountNameGivenFactMapping", "var_name": "backgroundAmountNameGivenFactMapping"}, {"original_string": "private ExpressionIdentifier amountExpectedExpressionIdentifier;", "modifier": "private", "type": "ExpressionIdentifier", "declarator": "amountExpectedExpressionIdentifier", "var_name": "amountExpectedExpressionIdentifier"}, {"original_string": "private FactMapping amountNameExpectedFactMapping;", "modifier": "private", "type": "FactMapping", "declarator": "amountNameExpectedFactMapping", "var_name": "amountNameExpectedFactMapping"}, {"original_string": "private FactMappingValue amountNameExpectedFactMappingValue;", "modifier": "private", "type": "FactMappingValue", "declarator": "amountNameExpectedFactMappingValue", "var_name": "amountNameExpectedFactMappingValue"}, {"original_string": "private FactMapping disputeExpressionGivenFactMapping;", "modifier": "private", "type": "FactMapping", "declarator": "disputeExpressionGivenFactMapping", "var_name": "disputeExpressionGivenFactMapping"}, {"original_string": "private ExpressionIdentifier expressionGivenExpressionIdentifier;", "modifier": "private", "type": "ExpressionIdentifier", "declarator": "expressionGivenExpressionIdentifier", "var_name": "expressionGivenExpressionIdentifier"}], "file": "drools-scenario-simulation/drools-scenario-simulation-backend/src/test/java/org/drools/scenariosimulation/backend/runner/RuleScenarioRunnerHelperTest.java"}, "test_case": {"identifier": "createObject", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createObject() {\n        Map<List<String>, Object> params = new HashMap<>();\n        params.put(singletonList(\"firstName\"), \"TestName\");\n        params.put(singletonList(\"age\"), 10);\n\n        ValueWrapper<Object> initialInstance = runnerHelper.getDirectMapping(params);\n        Object objectRaw = runnerHelper.createObject(\n                initialInstance,\n                Person.class.getCanonicalName(),\n                params,\n                this.getClass().getClassLoader());\n        assertTrue(objectRaw instanceof Person);\n\n        Person object = (Person) objectRaw;\n        assertEquals(10, object.getAge());\n        assertEquals(\"TestName\", object.getFirstName());\n    }", "signature": "void createObject()", "full_signature": "@Test public void createObject()", "class_method_signature": "RuleScenarioRunnerHelperTest.createObject()", "testcase": true, "constructor": false, "invocations": ["put", "singletonList", "put", "singletonList", "getDirectMapping", "createObject", "getCanonicalName", "getClassLoader", "getClass", "assertTrue", "assertEquals", "getAge", "assertEquals", "getFirstName"]}, "focal_class": {"identifier": "RuleScenarioRunnerHelper", "superclass": "extends AbstractRunnerHelper", "interfaces": "", "fields": [], "methods": [{"identifier": "executeScenario", "parameters": "(KieContainer kieContainer,\n                                                  ScenarioRunnerData scenarioRunnerData,\n                                                  ExpressionEvaluatorFactory expressionEvaluatorFactory,\n                                                  ScesimModelDescriptor scesimModelDescriptor,\n                                                  Settings settings)", "modifiers": "@Override protected", "return": "Map<String, Object>", "signature": "Map<String, Object> executeScenario(KieContainer kieContainer,\n                                                  ScenarioRunnerData scenarioRunnerData,\n                                                  ExpressionEvaluatorFactory expressionEvaluatorFactory,\n                                                  ScesimModelDescriptor scesimModelDescriptor,\n                                                  Settings settings)", "full_signature": "@Override protected Map<String, Object> executeScenario(KieContainer kieContainer,\n                                                  ScenarioRunnerData scenarioRunnerData,\n                                                  ExpressionEvaluatorFactory expressionEvaluatorFactory,\n                                                  ScesimModelDescriptor scesimModelDescriptor,\n                                                  Settings settings)", "class_method_signature": "RuleScenarioRunnerHelper.executeScenario(KieContainer kieContainer,\n                                                  ScenarioRunnerData scenarioRunnerData,\n                                                  ExpressionEvaluatorFactory expressionEvaluatorFactory,\n                                                  ScesimModelDescriptor scesimModelDescriptor,\n                                                  Settings settings)", "testcase": false, "constructor": false}, {"identifier": "extractResultMetadata", "parameters": "(Map<String, Object> requestContext, ScenarioWithIndex scenarioWithIndex)", "modifiers": "@SuppressWarnings(\"unchecked\") @Override protected", "return": "ScenarioResultMetadata", "signature": "ScenarioResultMetadata extractResultMetadata(Map<String, Object> requestContext, ScenarioWithIndex scenarioWithIndex)", "full_signature": "@SuppressWarnings(\"unchecked\") @Override protected ScenarioResultMetadata extractResultMetadata(Map<String, Object> requestContext, ScenarioWithIndex scenarioWithIndex)", "class_method_signature": "RuleScenarioRunnerHelper.extractResultMetadata(Map<String, Object> requestContext, ScenarioWithIndex scenarioWithIndex)", "testcase": false, "constructor": false}, {"identifier": "verifyConditions", "parameters": "(ScesimModelDescriptor scesimModelDescriptor,\n                                    ScenarioRunnerData scenarioRunnerData,\n                                    ExpressionEvaluatorFactory expressionEvaluatorFactory,\n                                    Map<String, Object> requestContext)", "modifiers": "@Override protected", "return": "void", "signature": "void verifyConditions(ScesimModelDescriptor scesimModelDescriptor,\n                                    ScenarioRunnerData scenarioRunnerData,\n                                    ExpressionEvaluatorFactory expressionEvaluatorFactory,\n                                    Map<String, Object> requestContext)", "full_signature": "@Override protected void verifyConditions(ScesimModelDescriptor scesimModelDescriptor,\n                                    ScenarioRunnerData scenarioRunnerData,\n                                    ExpressionEvaluatorFactory expressionEvaluatorFactory,\n                                    Map<String, Object> requestContext)", "class_method_signature": "RuleScenarioRunnerHelper.verifyConditions(ScesimModelDescriptor scesimModelDescriptor,\n                                    ScenarioRunnerData scenarioRunnerData,\n                                    ExpressionEvaluatorFactory expressionEvaluatorFactory,\n                                    Map<String, Object> requestContext)", "testcase": false, "constructor": false}, {"identifier": "getScenarioResultsFromGivenFacts", "parameters": "(ScesimModelDescriptor scesimModelDescriptor,\n                                                                    List<ScenarioExpect> scenarioOutputsPerFact,\n                                                                    InstanceGiven input,\n                                                                    ExpressionEvaluatorFactory expressionEvaluatorFactory)", "modifiers": "protected", "return": "List<ScenarioResult>", "signature": "List<ScenarioResult> getScenarioResultsFromGivenFacts(ScesimModelDescriptor scesimModelDescriptor,\n                                                                    List<ScenarioExpect> scenarioOutputsPerFact,\n                                                                    InstanceGiven input,\n                                                                    ExpressionEvaluatorFactory expressionEvaluatorFactory)", "full_signature": "protected List<ScenarioResult> getScenarioResultsFromGivenFacts(ScesimModelDescriptor scesimModelDescriptor,\n                                                                    List<ScenarioExpect> scenarioOutputsPerFact,\n                                                                    InstanceGiven input,\n                                                                    ExpressionEvaluatorFactory expressionEvaluatorFactory)", "class_method_signature": "RuleScenarioRunnerHelper.getScenarioResultsFromGivenFacts(ScesimModelDescriptor scesimModelDescriptor,\n                                                                    List<ScenarioExpect> scenarioOutputsPerFact,\n                                                                    InstanceGiven input,\n                                                                    ExpressionEvaluatorFactory expressionEvaluatorFactory)", "testcase": false, "constructor": false}, {"identifier": "createExtractorFunction", "parameters": "(ExpressionEvaluator expressionEvaluator,\n                                                                     FactMappingValue expectedResult,\n                                                                     ScesimModelDescriptor scesimModelDescriptor)", "modifiers": "protected", "return": "Function<Object, ValueWrapper>", "signature": "Function<Object, ValueWrapper> createExtractorFunction(ExpressionEvaluator expressionEvaluator,\n                                                                     FactMappingValue expectedResult,\n                                                                     ScesimModelDescriptor scesimModelDescriptor)", "full_signature": "protected Function<Object, ValueWrapper> createExtractorFunction(ExpressionEvaluator expressionEvaluator,\n                                                                     FactMappingValue expectedResult,\n                                                                     ScesimModelDescriptor scesimModelDescriptor)", "class_method_signature": "RuleScenarioRunnerHelper.createExtractorFunction(ExpressionEvaluator expressionEvaluator,\n                                                                     FactMappingValue expectedResult,\n                                                                     ScesimModelDescriptor scesimModelDescriptor)", "testcase": false, "constructor": false}, {"identifier": "loadInputData", "parameters": "(List<InstanceGiven> dataToLoad, RuleScenarioExecutableBuilder executableBuilder)", "modifiers": "protected", "return": "void", "signature": "void loadInputData(List<InstanceGiven> dataToLoad, RuleScenarioExecutableBuilder executableBuilder)", "full_signature": "protected void loadInputData(List<InstanceGiven> dataToLoad, RuleScenarioExecutableBuilder executableBuilder)", "class_method_signature": "RuleScenarioRunnerHelper.loadInputData(List<InstanceGiven> dataToLoad, RuleScenarioExecutableBuilder executableBuilder)", "testcase": false, "constructor": false}, {"identifier": "createObject", "parameters": "(ValueWrapper<Object> initialInstance, String className, Map<List<String>, Object> params, ClassLoader classLoader)", "modifiers": "@Override protected", "return": "Object", "signature": "Object createObject(ValueWrapper<Object> initialInstance, String className, Map<List<String>, Object> params, ClassLoader classLoader)", "full_signature": "@Override protected Object createObject(ValueWrapper<Object> initialInstance, String className, Map<List<String>, Object> params, ClassLoader classLoader)", "class_method_signature": "RuleScenarioRunnerHelper.createObject(ValueWrapper<Object> initialInstance, String className, Map<List<String>, Object> params, ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "createBuilderWrapper", "parameters": "(KieContainer kieContainer, Settings settings)", "modifiers": "protected", "return": "RuleScenarioExecutableBuilder", "signature": "RuleScenarioExecutableBuilder createBuilderWrapper(KieContainer kieContainer, Settings settings)", "full_signature": "protected RuleScenarioExecutableBuilder createBuilderWrapper(KieContainer kieContainer, Settings settings)", "class_method_signature": "RuleScenarioRunnerHelper.createBuilderWrapper(KieContainer kieContainer, Settings settings)", "testcase": false, "constructor": false}], "file": "drools-scenario-simulation/drools-scenario-simulation-backend/src/main/java/org/drools/scenariosimulation/backend/runner/RuleScenarioRunnerHelper.java"}, "focal_method": {"identifier": "createObject", "parameters": "(ValueWrapper<Object> initialInstance, String className, Map<List<String>, Object> params, ClassLoader classLoader)", "modifiers": "@Override protected", "return": "Object", "body": "@Override\n    protected Object createObject(ValueWrapper<Object> initialInstance, String className, Map<List<String>, Object> params, ClassLoader classLoader) {\n        return fillBean(initialInstance, className, params, classLoader);\n    }", "signature": "Object createObject(ValueWrapper<Object> initialInstance, String className, Map<List<String>, Object> params, ClassLoader classLoader)", "full_signature": "@Override protected Object createObject(ValueWrapper<Object> initialInstance, String className, Map<List<String>, Object> params, ClassLoader classLoader)", "class_method_signature": "RuleScenarioRunnerHelper.createObject(ValueWrapper<Object> initialInstance, String className, Map<List<String>, Object> params, ClassLoader classLoader)", "testcase": false, "constructor": false, "invocations": ["fillBean"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}