{"test_class": {"identifier": "CameraStreamAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CameraStreamAdapter adapter;", "modifier": "private", "type": "CameraStreamAdapter", "declarator": "adapter", "var_name": "adapter"}], "file": "plugins/cameraserver/src/test/java/edu/wpi/first/shuffleboard/plugin/cameraserver/source/CameraStreamAdapterTest.java"}, "test_case": {"identifier": "testSerializedSize", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSerializedSize() {\n    CameraServerData data = new CameraServerData(\"name\", null, 0, 0);\n    assertEquals(4 + 4 + 1 + 2 + 4 + 2, adapter.getSerializedSize(data));\n  }", "signature": "void testSerializedSize()", "full_signature": "@Test public void testSerializedSize()", "class_method_signature": "CameraStreamAdapterTest.testSerializedSize()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getSerializedSize"]}, "focal_class": {"identifier": "CameraStreamAdapter", "superclass": "extends TypeAdapter<CameraServerData>", "interfaces": "", "fields": [{"original_string": "private static final Logger log = Logger.getLogger(CameraStreamReader.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "log = Logger.getLogger(CameraStreamReader.class.getName())", "var_name": "log"}, {"original_string": "private final Map<String, CameraStreamSaver> savers = new ConcurrentHashMap<>();", "modifier": "private final", "type": "Map<String, CameraStreamSaver>", "declarator": "savers = new ConcurrentHashMap<>()", "var_name": "savers"}, {"original_string": "private final Map<String, CameraStreamReader> readers = new ConcurrentHashMap<>();", "modifier": "private final", "type": "Map<String, CameraStreamReader>", "declarator": "readers = new ConcurrentHashMap<>()", "var_name": "readers"}, {"original_string": "private final Function<String, CameraStreamSaver> newSaver = name -> new CameraStreamSaver(name, getCurrentFile());", "modifier": "private final", "type": "Function<String, CameraStreamSaver>", "declarator": "newSaver = name -> new CameraStreamSaver(name, getCurrentFile())", "var_name": "newSaver"}], "methods": [{"identifier": "CameraStreamAdapter", "parameters": "()", "modifiers": "public", "return": "", "signature": " CameraStreamAdapter()", "full_signature": "public  CameraStreamAdapter()", "class_method_signature": "CameraStreamAdapter.CameraStreamAdapter()", "testcase": false, "constructor": true}, {"identifier": "flush", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void flush()", "full_signature": "@Override public void flush()", "class_method_signature": "CameraStreamAdapter.flush()", "testcase": false, "constructor": false}, {"identifier": "cleanUp", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void cleanUp()", "full_signature": "@Override public void cleanUp()", "class_method_signature": "CameraStreamAdapter.cleanUp()", "testcase": false, "constructor": false}, {"identifier": "deserialize", "parameters": "(byte[] buffer, int bufferPosition)", "modifiers": "@Override public", "return": "CameraServerData", "signature": "CameraServerData deserialize(byte[] buffer, int bufferPosition)", "full_signature": "@Override public CameraServerData deserialize(byte[] buffer, int bufferPosition)", "class_method_signature": "CameraStreamAdapter.deserialize(byte[] buffer, int bufferPosition)", "testcase": false, "constructor": false}, {"identifier": "getSerializedSize", "parameters": "(CameraServerData value)", "modifiers": "@Override public", "return": "int", "signature": "int getSerializedSize(CameraServerData value)", "full_signature": "@Override public int getSerializedSize(CameraServerData value)", "class_method_signature": "CameraStreamAdapter.getSerializedSize(CameraServerData value)", "testcase": false, "constructor": false}, {"identifier": "serialize", "parameters": "(CameraServerData data)", "modifiers": "@Override public", "return": "byte[]", "signature": "byte[] serialize(CameraServerData data)", "full_signature": "@Override public byte[] serialize(CameraServerData data)", "class_method_signature": "CameraStreamAdapter.serialize(CameraServerData data)", "testcase": false, "constructor": false}, {"identifier": "videoFilePath", "parameters": "(File rootRecordingFile, String cameraName, int fileIndex)", "modifiers": "public static", "return": "String", "signature": "String videoFilePath(File rootRecordingFile, String cameraName, int fileIndex)", "full_signature": "public static String videoFilePath(File rootRecordingFile, String cameraName, int fileIndex)", "class_method_signature": "CameraStreamAdapter.videoFilePath(File rootRecordingFile, String cameraName, int fileIndex)", "testcase": false, "constructor": false}], "file": "plugins/cameraserver/src/main/java/edu/wpi/first/shuffleboard/plugin/cameraserver/source/CameraStreamAdapter.java"}, "focal_method": {"identifier": "getSerializedSize", "parameters": "(CameraServerData value)", "modifiers": "@Override public", "return": "int", "body": "@Override\n  public int getSerializedSize(CameraServerData value) {\n    return value.getName().length() + SIZE_OF_INT // name\n        + SIZE_OF_BYTE   // video file number\n        + SIZE_OF_SHORT  // frame number\n        + SIZE_OF_INT    // bandwidth\n        + SIZE_OF_SHORT; // FPS\n  }", "signature": "int getSerializedSize(CameraServerData value)", "full_signature": "@Override public int getSerializedSize(CameraServerData value)", "class_method_signature": "CameraStreamAdapter.getSerializedSize(CameraServerData value)", "testcase": false, "constructor": false, "invocations": ["length", "getName"]}, "repository": {"repo_id": 91855299, "url": "https://github.com/wpilibsuite/shuffleboard", "stars": 52, "created": "5/20/2017 12:38:25 AM +00:00", "updates": "2020-01-23T20:11:35+00:00", "fork": "False", "license": "licensed"}}