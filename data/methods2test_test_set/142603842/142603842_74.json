{"test_class": {"identifier": "WebSocketRoutingPlanSenderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private SimpMessagingTemplate webSocket;", "modifier": "@Mock\n    private", "type": "SimpMessagingTemplate", "declarator": "webSocket", "var_name": "webSocket"}, {"original_string": "@InjectMocks\n    private WebSocketRoutingPlanSender routingPlanSender;", "modifier": "@InjectMocks\n    private", "type": "WebSocketRoutingPlanSender", "declarator": "routingPlanSender", "var_name": "routingPlanSender"}], "file": "optaweb-vehicle-routing-backend/src/test/java/org/optaweb/vehiclerouting/plugin/websocket/WebSocketRoutingPlanSenderTest.java"}, "test_case": {"identifier": "should_send_consumed_routing_plan_over_websocket", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void should_send_consumed_routing_plan_over_websocket() {\n        routingPlanSender.consumePlan(RoutingPlan.empty());\n        verify(webSocket).convertAndSend(\n                eq(WebSocketRoutingPlanSender.TOPIC_ROUTE),\n                any(PortableRoutingPlan.class));\n    }", "signature": "void should_send_consumed_routing_plan_over_websocket()", "full_signature": "@Test void should_send_consumed_routing_plan_over_websocket()", "class_method_signature": "WebSocketRoutingPlanSenderTest.should_send_consumed_routing_plan_over_websocket()", "testcase": true, "constructor": false, "invocations": ["consumePlan", "empty", "convertAndSend", "verify", "eq", "any"]}, "focal_class": {"identifier": "WebSocketRoutingPlanSender", "superclass": "", "interfaces": "implements RoutingPlanConsumer", "fields": [{"original_string": "static final String TOPIC_ROUTE = \"/topic/route\";", "modifier": "static final", "type": "String", "declarator": "TOPIC_ROUTE = \"/topic/route\"", "var_name": "TOPIC_ROUTE"}, {"original_string": "private final SimpMessagingTemplate webSocket;", "modifier": "private final", "type": "SimpMessagingTemplate", "declarator": "webSocket", "var_name": "webSocket"}], "methods": [{"identifier": "WebSocketRoutingPlanSender", "parameters": "(SimpMessagingTemplate webSocket)", "modifiers": "@Autowired", "return": "", "signature": " WebSocketRoutingPlanSender(SimpMessagingTemplate webSocket)", "full_signature": "@Autowired  WebSocketRoutingPlanSender(SimpMessagingTemplate webSocket)", "class_method_signature": "WebSocketRoutingPlanSender.WebSocketRoutingPlanSender(SimpMessagingTemplate webSocket)", "testcase": false, "constructor": true}, {"identifier": "consumePlan", "parameters": "(RoutingPlan routingPlan)", "modifiers": "@Override public", "return": "void", "signature": "void consumePlan(RoutingPlan routingPlan)", "full_signature": "@Override public void consumePlan(RoutingPlan routingPlan)", "class_method_signature": "WebSocketRoutingPlanSender.consumePlan(RoutingPlan routingPlan)", "testcase": false, "constructor": false}], "file": "optaweb-vehicle-routing-backend/src/main/java/org/optaweb/vehiclerouting/plugin/websocket/WebSocketRoutingPlanSender.java"}, "focal_method": {"identifier": "consumePlan", "parameters": "(RoutingPlan routingPlan)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void consumePlan(RoutingPlan routingPlan) {\n        webSocket.convertAndSend(TOPIC_ROUTE, PortableRoutingPlanFactory.fromRoutingPlan(routingPlan));\n    }", "signature": "void consumePlan(RoutingPlan routingPlan)", "full_signature": "@Override public void consumePlan(RoutingPlan routingPlan)", "class_method_signature": "WebSocketRoutingPlanSender.consumePlan(RoutingPlan routingPlan)", "testcase": false, "constructor": false, "invocations": ["convertAndSend", "fromRoutingPlan"]}, "repository": {"repo_id": 142603842, "url": "https://github.com/kiegroup/optaweb-vehicle-routing", "stars": 42, "created": "7/27/2018 5:08:08 PM +00:00", "updates": "2020-01-27T22:19:48+00:00", "fork": "False", "license": "licensed"}}