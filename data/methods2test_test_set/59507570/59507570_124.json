{"test_class": {"identifier": "EncryptHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String plainText = \"123456\";", "modifier": "private", "type": "String", "declarator": "plainText = \"123456\"", "var_name": "plainText"}], "file": "app/src/test/java/org/unicef/rapidreg/utils/EncryptHelperTest.java"}, "test_case": {"identifier": "should_encrypt_plain_text", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_encrypt_plain_text() {\n        String encryptedText = EncryptHelper.encrypt(plainText);\n\n        assertThat(encryptedText, not(plainText));\n    }", "signature": "void should_encrypt_plain_text()", "full_signature": "@Test public void should_encrypt_plain_text()", "class_method_signature": "EncryptHelperTest.should_encrypt_plain_text()", "testcase": true, "constructor": false, "invocations": ["encrypt", "assertThat", "not"]}, "focal_class": {"identifier": "EncryptHelper", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "encrypt", "parameters": "(String plainText)", "modifiers": "public static", "return": "String", "signature": "String encrypt(String plainText)", "full_signature": "public static String encrypt(String plainText)", "class_method_signature": "EncryptHelper.encrypt(String plainText)", "testcase": false, "constructor": false}, {"identifier": "isMatched", "parameters": "(String plainText, String hashedText)", "modifiers": "public static", "return": "boolean", "signature": "boolean isMatched(String plainText, String hashedText)", "full_signature": "public static boolean isMatched(String plainText, String hashedText)", "class_method_signature": "EncryptHelper.isMatched(String plainText, String hashedText)", "testcase": false, "constructor": false}], "file": "app/src/main/java/org/unicef/rapidreg/utils/EncryptHelper.java"}, "focal_method": {"identifier": "encrypt", "parameters": "(String plainText)", "modifiers": "public static", "return": "String", "body": "public static String encrypt(String plainText) {\n        return BCrypt.hashpw(plainText, BCrypt.gensalt(12));\n    }", "signature": "String encrypt(String plainText)", "full_signature": "public static String encrypt(String plainText)", "class_method_signature": "EncryptHelper.encrypt(String plainText)", "testcase": false, "constructor": false, "invocations": ["hashpw", "gensalt"]}, "repository": {"repo_id": 59507570, "url": "https://github.com/UnicefNY/RapidReg", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 7, "size": 10753, "license": "Other"}}