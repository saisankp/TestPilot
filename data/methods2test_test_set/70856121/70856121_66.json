{"test_class": {"identifier": "AutoSchedulingManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Cluster CLUSTER_1 = Cluster.builder()\n      .withName(\"cluster1\")\n      .withSeedHosts(ImmutableSet.of(\"127.0.0.1\"))\n      .withState(Cluster.State.ACTIVE)\n      .build();", "modifier": "private static final", "type": "Cluster", "declarator": "CLUSTER_1 = Cluster.builder()\n      .withName(\"cluster1\")\n      .withSeedHosts(ImmutableSet.of(\"127.0.0.1\"))\n      .withState(Cluster.State.ACTIVE)\n      .build()", "var_name": "CLUSTER_1"}, {"original_string": "private static final Cluster CLUSTER_2 = Cluster.builder()\n      .withName(\"cluster2\")\n      .withSeedHosts(ImmutableSet.of(\"127.0.0.1\"))\n      .withState(Cluster.State.ACTIVE)\n      .build();", "modifier": "private static final", "type": "Cluster", "declarator": "CLUSTER_2 = Cluster.builder()\n      .withName(\"cluster2\")\n      .withSeedHosts(ImmutableSet.of(\"127.0.0.1\"))\n      .withState(Cluster.State.ACTIVE)\n      .build()", "var_name": "CLUSTER_2"}, {"original_string": "private AppContext context;", "modifier": "private", "type": "AppContext", "declarator": "context", "var_name": "context"}, {"original_string": "private AutoSchedulingManager repairAutoSchedulingManager;", "modifier": "private", "type": "AutoSchedulingManager", "declarator": "repairAutoSchedulingManager", "var_name": "repairAutoSchedulingManager"}, {"original_string": "private ClusterRepairScheduler clusterRepairScheduler;", "modifier": "private", "type": "ClusterRepairScheduler", "declarator": "clusterRepairScheduler", "var_name": "clusterRepairScheduler"}], "file": "src/server/src/test/java/io/cassandrareaper/service/AutoSchedulingManagerTest.java"}, "test_case": {"identifier": "schedulesRepairForAllKeyspacesInAllClusters", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void schedulesRepairForAllKeyspacesInAllClusters() throws Exception {\n    context.storage.addCluster(CLUSTER_1);\n    context.storage.addCluster(CLUSTER_2);\n\n    repairAutoSchedulingManager.run();\n\n    verify(clusterRepairScheduler).scheduleRepairs(CLUSTER_1);\n    verify(clusterRepairScheduler).scheduleRepairs(CLUSTER_2);\n  }", "signature": "void schedulesRepairForAllKeyspacesInAllClusters()", "full_signature": "@Test public void schedulesRepairForAllKeyspacesInAllClusters()", "class_method_signature": "AutoSchedulingManagerTest.schedulesRepairForAllKeyspacesInAllClusters()", "testcase": true, "constructor": false, "invocations": ["addCluster", "addCluster", "run", "scheduleRepairs", "verify", "scheduleRepairs", "verify"]}, "focal_class": {"identifier": "AutoSchedulingManager", "superclass": "extends TimerTask", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(AutoSchedulingManager.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(AutoSchedulingManager.class)", "var_name": "LOG"}, {"original_string": "private static AutoSchedulingManager repairAutoSchedulingManager;", "modifier": "private static", "type": "AutoSchedulingManager", "declarator": "repairAutoSchedulingManager", "var_name": "repairAutoSchedulingManager"}, {"original_string": "private final AppContext context;", "modifier": "private final", "type": "AppContext", "declarator": "context", "var_name": "context"}, {"original_string": "private final ClusterRepairScheduler clusterRepairScheduler;", "modifier": "private final", "type": "ClusterRepairScheduler", "declarator": "clusterRepairScheduler", "var_name": "clusterRepairScheduler"}], "methods": [{"identifier": "AutoSchedulingManager", "parameters": "(AppContext context)", "modifiers": "private", "return": "", "signature": " AutoSchedulingManager(AppContext context)", "full_signature": "private  AutoSchedulingManager(AppContext context)", "class_method_signature": "AutoSchedulingManager.AutoSchedulingManager(AppContext context)", "testcase": false, "constructor": true}, {"identifier": "AutoSchedulingManager", "parameters": "(AppContext context, ClusterRepairScheduler clusterRepairScheduler)", "modifiers": "public", "return": "", "signature": " AutoSchedulingManager(AppContext context, ClusterRepairScheduler clusterRepairScheduler)", "full_signature": "public  AutoSchedulingManager(AppContext context, ClusterRepairScheduler clusterRepairScheduler)", "class_method_signature": "AutoSchedulingManager.AutoSchedulingManager(AppContext context, ClusterRepairScheduler clusterRepairScheduler)", "testcase": false, "constructor": true}, {"identifier": "start", "parameters": "(AppContext context)", "modifiers": "public static synchronized", "return": "void", "signature": "void start(AppContext context)", "full_signature": "public static synchronized void start(AppContext context)", "class_method_signature": "AutoSchedulingManager.start(AppContext context)", "testcase": false, "constructor": false}, {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "AutoSchedulingManager.run()", "testcase": false, "constructor": false}], "file": "src/server/src/main/java/io/cassandrareaper/service/AutoSchedulingManager.java"}, "focal_method": {"identifier": "run", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void run() {\n    LOG.debug(\"Checking cluster keyspaces to identify which ones require repair schedules...\");\n    Collection<Cluster> clusters = context.storage.getClusters();\n    for (Cluster cluster : clusters) {\n      try {\n        clusterRepairScheduler.scheduleRepairs(cluster);\n      } catch (ReaperException | RuntimeException e) {\n        LOG.error(\"Error while scheduling repairs for cluster {}\", cluster, e);\n      }\n    }\n  }", "signature": "void run()", "full_signature": "@Override public void run()", "class_method_signature": "AutoSchedulingManager.run()", "testcase": false, "constructor": false, "invocations": ["debug", "getClusters", "scheduleRepairs", "error"]}, "repository": {"repo_id": 70856121, "url": "https://github.com/thelastpickle/cassandra-reaper", "language": "Java", "is_fork": false, "fork_count": 156, "stargazer_count": 353, "size": 43662, "license": "licensed"}}