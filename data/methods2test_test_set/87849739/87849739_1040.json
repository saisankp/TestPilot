{"test_class": {"identifier": "ImmutableLimitOptionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int KNOWN_OFFSET = 23;", "modifier": "private static final", "type": "int", "declarator": "KNOWN_OFFSET = 23", "var_name": "KNOWN_OFFSET"}, {"original_string": "private static final int KNOWN_COUNT = 42;", "modifier": "private static final", "type": "int", "declarator": "KNOWN_COUNT = 42", "var_name": "KNOWN_COUNT"}, {"original_string": "private ImmutableLimitOption underTest = null;", "modifier": "private", "type": "ImmutableLimitOption", "declarator": "underTest = null", "var_name": "underTest"}], "file": "model/thingsearch/src/test/java/org/eclipse/ditto/model/thingsearch/ImmutableLimitOptionTest.java"}, "test_case": {"identifier": "getOffsetReturnsExpected", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getOffsetReturnsExpected() {\n        assertThat(underTest.getOffset()).isEqualTo(KNOWN_OFFSET);\n    }", "signature": "void getOffsetReturnsExpected()", "full_signature": "@Test public void getOffsetReturnsExpected()", "class_method_signature": "ImmutableLimitOptionTest.getOffsetReturnsExpected()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "getOffset"]}, "focal_class": {"identifier": "ImmutableLimitOption", "superclass": "", "interfaces": "implements LimitOption", "fields": [{"original_string": "static final int MAX_COUNT = ImmutableSizeOption.MAX_SIZE;", "modifier": "static final", "type": "int", "declarator": "MAX_COUNT = ImmutableSizeOption.MAX_SIZE", "var_name": "MAX_COUNT"}, {"original_string": "private final int offset;", "modifier": "private final", "type": "int", "declarator": "offset", "var_name": "offset"}, {"original_string": "private final int count;", "modifier": "private final", "type": "int", "declarator": "count", "var_name": "count"}], "methods": [{"identifier": "ImmutableLimitOption", "parameters": "(final int offset, final int count)", "modifiers": "private", "return": "", "signature": " ImmutableLimitOption(final int offset, final int count)", "full_signature": "private  ImmutableLimitOption(final int offset, final int count)", "class_method_signature": "ImmutableLimitOption.ImmutableLimitOption(final int offset, final int count)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final int offset, final int count)", "modifiers": "public static", "return": "ImmutableLimitOption", "signature": "ImmutableLimitOption of(final int offset, final int count)", "full_signature": "public static ImmutableLimitOption of(final int offset, final int count)", "class_method_signature": "ImmutableLimitOption.of(final int offset, final int count)", "testcase": false, "constructor": false}, {"identifier": "accept", "parameters": "(final OptionVisitor visitor)", "modifiers": "@Override public", "return": "void", "signature": "void accept(final OptionVisitor visitor)", "full_signature": "@Override public void accept(final OptionVisitor visitor)", "class_method_signature": "ImmutableLimitOption.accept(final OptionVisitor visitor)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ImmutableLimitOption.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "getOffset", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getOffset()", "full_signature": "@Override public int getOffset()", "class_method_signature": "ImmutableLimitOption.getOffset()", "testcase": false, "constructor": false}, {"identifier": "getCount", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getCount()", "full_signature": "@Override public int getCount()", "class_method_signature": "ImmutableLimitOption.getCount()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableLimitOption.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ImmutableLimitOption.toString()", "testcase": false, "constructor": false}], "file": "model/thingsearch/src/main/java/org/eclipse/ditto/model/thingsearch/ImmutableLimitOption.java"}, "focal_method": {"identifier": "getOffset", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int getOffset() {\n        return offset;\n    }", "signature": "int getOffset()", "full_signature": "@Override public int getOffset()", "class_method_signature": "ImmutableLimitOption.getOffset()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}