{"test_class": {"identifier": "ImmutableSubjectIssuerTest", "superclass": "", "interfaces": "", "fields": [], "file": "model/policies/src/test/java/org/eclipse/ditto/model/policies/ImmutableSubjectIssuerTest.java"}, "test_case": {"identifier": "createSubjectIssuerWithNullSubjectIssuerValueFails", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createSubjectIssuerWithNullSubjectIssuerValueFails() {\n        assertThatExceptionOfType(NullPointerException.class)\n                .isThrownBy(() -> ImmutableSubjectIssuer.of(null));\n    }", "signature": "void createSubjectIssuerWithNullSubjectIssuerValueFails()", "full_signature": "@Test public void createSubjectIssuerWithNullSubjectIssuerValueFails()", "class_method_signature": "ImmutableSubjectIssuerTest.createSubjectIssuerWithNullSubjectIssuerValueFails()", "testcase": true, "constructor": false, "invocations": ["isThrownBy", "assertThatExceptionOfType", "of"]}, "focal_class": {"identifier": "ImmutableSubjectIssuer", "superclass": "", "interfaces": "implements SubjectIssuer", "fields": [{"original_string": "private final String subjectIssuer;", "modifier": "private final", "type": "String", "declarator": "subjectIssuer", "var_name": "subjectIssuer"}], "methods": [{"identifier": "ImmutableSubjectIssuer", "parameters": "(final String subjectIssuer)", "modifiers": "private", "return": "", "signature": " ImmutableSubjectIssuer(final String subjectIssuer)", "full_signature": "private  ImmutableSubjectIssuer(final String subjectIssuer)", "class_method_signature": "ImmutableSubjectIssuer.ImmutableSubjectIssuer(final String subjectIssuer)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final CharSequence subjectIssuerValue)", "modifiers": "public static", "return": "SubjectIssuer", "signature": "SubjectIssuer of(final CharSequence subjectIssuerValue)", "full_signature": "public static SubjectIssuer of(final CharSequence subjectIssuerValue)", "class_method_signature": "ImmutableSubjectIssuer.of(final CharSequence subjectIssuerValue)", "testcase": false, "constructor": false}, {"identifier": "length", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int length()", "full_signature": "@Override public int length()", "class_method_signature": "ImmutableSubjectIssuer.length()", "testcase": false, "constructor": false}, {"identifier": "charAt", "parameters": "(final int index)", "modifiers": "@Override public", "return": "char", "signature": "char charAt(final int index)", "full_signature": "@Override public char charAt(final int index)", "class_method_signature": "ImmutableSubjectIssuer.charAt(final int index)", "testcase": false, "constructor": false}, {"identifier": "subSequence", "parameters": "(final int start, final int end)", "modifiers": "@Override public", "return": "CharSequence", "signature": "CharSequence subSequence(final int start, final int end)", "full_signature": "@Override public CharSequence subSequence(final int start, final int end)", "class_method_signature": "ImmutableSubjectIssuer.subSequence(final int start, final int end)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "ImmutableSubjectIssuer.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ImmutableSubjectIssuer.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override @Nonnull public", "return": "String", "signature": "String toString()", "full_signature": "@Override @Nonnull public String toString()", "class_method_signature": "ImmutableSubjectIssuer.toString()", "testcase": false, "constructor": false}], "file": "model/policies/src/main/java/org/eclipse/ditto/model/policies/ImmutableSubjectIssuer.java"}, "focal_method": {"identifier": "of", "parameters": "(final CharSequence subjectIssuerValue)", "modifiers": "public static", "return": "SubjectIssuer", "body": "public static SubjectIssuer of(final CharSequence subjectIssuerValue) {\n        checkNotNull(subjectIssuerValue, \"subjectIssuerValue\");\n\n        return new ImmutableSubjectIssuer(subjectIssuerValue.toString());\n    }", "signature": "SubjectIssuer of(final CharSequence subjectIssuerValue)", "full_signature": "public static SubjectIssuer of(final CharSequence subjectIssuerValue)", "class_method_signature": "ImmutableSubjectIssuer.of(final CharSequence subjectIssuerValue)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "toString"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}