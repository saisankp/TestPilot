{"test_class": {"identifier": "ZwitscherControllerTest", "superclass": "", "interfaces": "", "fields": [], "file": "solution/zwitscher-service/src/test/java/de/qaware/oss/cloud/nativ/wjax2016/ZwitscherControllerTest.java"}, "test_case": {"identifier": "tweets", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void tweets() throws Exception {\n        ZwitscherRepository repository = mock(ZwitscherRepository.class);\n        ZwitscherController controller = new ZwitscherController(repository);\n        controller.setQuery(\"cloudnativenerd\");\n        controller.setPageSize(42);\n\n        when(repository.search(\"cloudnativenerd\", 42)).thenReturn(Collections.singleton(\"Hello Test.\"));\n\n        HttpEntity<Collection<String>> tweets = controller.tweets(null);\n        assertFalse(tweets.getBody().isEmpty());\n    }", "signature": "void tweets()", "full_signature": "@Test public void tweets()", "class_method_signature": "ZwitscherControllerTest.tweets()", "testcase": true, "constructor": false, "invocations": ["mock", "setQuery", "setPageSize", "thenReturn", "when", "search", "singleton", "tweets", "assertFalse", "isEmpty", "getBody"]}, "focal_class": {"identifier": "ZwitscherController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ZwitscherRepository repository;", "modifier": "private final", "type": "ZwitscherRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "private String query;", "modifier": "private", "type": "String", "declarator": "query", "var_name": "query"}, {"original_string": "private int pageSize;", "modifier": "private", "type": "int", "declarator": "pageSize", "var_name": "pageSize"}], "methods": [{"identifier": "ZwitscherController", "parameters": "(ZwitscherRepository repository)", "modifiers": "@Autowired public", "return": "", "signature": " ZwitscherController(ZwitscherRepository repository)", "full_signature": "@Autowired public  ZwitscherController(ZwitscherRepository repository)", "class_method_signature": "ZwitscherController.ZwitscherController(ZwitscherRepository repository)", "testcase": false, "constructor": true}, {"identifier": "tweets", "parameters": "(@RequestParam(value = \"q\", required = false) String q)", "modifiers": "@RequestMapping(method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_UTF8_VALUE) public", "return": "HttpEntity<Collection<String>>", "signature": "HttpEntity<Collection<String>> tweets(@RequestParam(value = \"q\", required = false) String q)", "full_signature": "@RequestMapping(method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_UTF8_VALUE) public HttpEntity<Collection<String>> tweets(@RequestParam(value = \"q\", required = false) String q)", "class_method_signature": "ZwitscherController.tweets(@RequestParam(value = \"q\", required = false) String q)", "testcase": false, "constructor": false}, {"identifier": "setQuery", "parameters": "(String query)", "modifiers": "@Value(\"${tweet.query:cloudnativenerd}\") public", "return": "void", "signature": "void setQuery(String query)", "full_signature": "@Value(\"${tweet.query:cloudnativenerd}\") public void setQuery(String query)", "class_method_signature": "ZwitscherController.setQuery(String query)", "testcase": false, "constructor": false}, {"identifier": "setPageSize", "parameters": "(int pageSize)", "modifiers": "@Value(\"${tweet.pageSize:42}\") public", "return": "void", "signature": "void setPageSize(int pageSize)", "full_signature": "@Value(\"${tweet.pageSize:42}\") public void setPageSize(int pageSize)", "class_method_signature": "ZwitscherController.setPageSize(int pageSize)", "testcase": false, "constructor": false}], "file": "solution/zwitscher-service/src/main/java/de/qaware/oss/cloud/nativ/wjax2016/ZwitscherController.java"}, "focal_method": {"identifier": "tweets", "parameters": "(@RequestParam(value = \"q\", required = false) String q)", "modifiers": "@RequestMapping(method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_UTF8_VALUE) public", "return": "HttpEntity<Collection<String>>", "body": "@RequestMapping(method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)\n    public HttpEntity<Collection<String>> tweets(@RequestParam(value = \"q\", required = false) String q) {\n        Collection<String> tweets = repository.search(ofNullable(q).orElse(query), pageSize);\n        return new ResponseEntity<>(tweets, HttpStatus.OK);\n    }", "signature": "HttpEntity<Collection<String>> tweets(@RequestParam(value = \"q\", required = false) String q)", "full_signature": "@RequestMapping(method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_UTF8_VALUE) public HttpEntity<Collection<String>> tweets(@RequestParam(value = \"q\", required = false) String q)", "class_method_signature": "ZwitscherController.tweets(@RequestParam(value = \"q\", required = false) String q)", "testcase": false, "constructor": false, "invocations": ["search", "orElse", "ofNullable"]}, "repository": {"repo_id": 71127071, "url": "https://github.com/qaware/hitchhikers-guide-cloudnative", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 31, "size": 34556, "license": "licensed"}}