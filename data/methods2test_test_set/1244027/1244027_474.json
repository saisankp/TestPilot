{"test_class": {"identifier": "EsIndexTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final static ExecutionContext context = new ExecutionContext();", "modifier": "private final static", "type": "ExecutionContext", "declarator": "context = new ExecutionContext()", "var_name": "context"}, {"original_string": "private final static EsIndexColumn def1 = new EsIndexColumn(context, \"field1\", PropertyType.STRING);", "modifier": "private final static", "type": "EsIndexColumn", "declarator": "def1 = new EsIndexColumn(context, \"field1\", PropertyType.STRING)", "var_name": "def1"}, {"original_string": "private final static EsIndexColumn def2 = new EsIndexColumn(context, \"field2\", PropertyType.DECIMAL);", "modifier": "private final static", "type": "EsIndexColumn", "declarator": "def2 = new EsIndexColumn(context, \"field2\", PropertyType.DECIMAL)", "var_name": "def2"}, {"original_string": "private final static EsIndexColumn def3 = new EsIndexColumn(context, \"field3\", PropertyType.STRING);", "modifier": "private final static", "type": "EsIndexColumn", "declarator": "def3 = new EsIndexColumn(context, \"field3\", PropertyType.STRING)", "var_name": "def3"}, {"original_string": "private final static EsIndexColumn def4 = new EsIndexColumn(context, \"mixinTypes\", PropertyType.NAME);", "modifier": "private final static", "type": "EsIndexColumn", "declarator": "def4 = new EsIndexColumn(context, \"mixinTypes\", PropertyType.NAME)", "var_name": "def4"}, {"original_string": "private final static EsIndexColumn def5 = new EsIndexColumn(context, \"myfield\", PropertyType.STRING);", "modifier": "private final static", "type": "EsIndexColumn", "declarator": "def5 = new EsIndexColumn(context, \"myfield\", PropertyType.STRING)", "var_name": "def5"}, {"original_string": "private static Node esNode;", "modifier": "private static", "type": "Node", "declarator": "esNode", "var_name": "esNode"}, {"original_string": "private static EsClient client;", "modifier": "private static", "type": "EsClient", "declarator": "client", "var_name": "client"}, {"original_string": "private static EsIndex index;", "modifier": "private static", "type": "EsIndex", "declarator": "index", "var_name": "index"}, {"original_string": "private static final String NODE_KEY_PREFIX = \"12345671234567-\";", "modifier": "private static final", "type": "String", "declarator": "NODE_KEY_PREFIX = \"12345671234567-\"", "var_name": "NODE_KEY_PREFIX"}], "file": "index-providers/modeshape-elasticsearch-index-provider/src/test/java/org/modeshape/jcr/index/elasticsearch/EsIndexTest.java"}, "test_case": {"identifier": "shouldSupportPropertyExistanceConstraint", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldSupportPropertyExistanceConstraint() {\n        PropertyExistence pe = new PropertyExistence(new SelectorName(\"test\"), def2.getName());\n        validate(pe, \"key1\", \"key2\", \"key3\", \"key4\", \"key5\", \"key6\");\n    }", "signature": "void shouldSupportPropertyExistanceConstraint()", "full_signature": "@Test public void shouldSupportPropertyExistanceConstraint()", "class_method_signature": "EsIndexTest.shouldSupportPropertyExistanceConstraint()", "testcase": true, "constructor": false, "invocations": ["getName", "validate"]}, "focal_class": {"identifier": "EsIndex", "superclass": "", "interfaces": "implements ProvidedIndex", "fields": [{"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private final String workspace;", "modifier": "private final", "type": "String", "declarator": "workspace", "var_name": "workspace"}, {"original_string": "private final EsIndexColumns columns;", "modifier": "private final", "type": "EsIndexColumns", "declarator": "columns", "var_name": "columns"}, {"original_string": "private final Operations operations;", "modifier": "private final", "type": "Operations", "declarator": "operations", "var_name": "operations"}, {"original_string": "private final EsClient client;", "modifier": "private final", "type": "EsClient", "declarator": "client", "var_name": "client"}], "methods": [{"identifier": "EsIndex", "parameters": "(EsClient client, ExecutionContext context, IndexDefinition defn, String workspace)", "modifiers": "public", "return": "", "signature": " EsIndex(EsClient client, ExecutionContext context, IndexDefinition defn, String workspace)", "full_signature": "public  EsIndex(EsClient client, ExecutionContext context, IndexDefinition defn, String workspace)", "class_method_signature": "EsIndex.EsIndex(EsClient client, ExecutionContext context, IndexDefinition defn, String workspace)", "testcase": false, "constructor": true}, {"identifier": "EsIndex", "parameters": "(EsClient client, EsIndexColumns columns, ExecutionContext context, String name, String workspace)", "modifiers": "protected", "return": "", "signature": " EsIndex(EsClient client, EsIndexColumns columns, ExecutionContext context, String name, String workspace)", "full_signature": "protected  EsIndex(EsClient client, EsIndexColumns columns, ExecutionContext context, String name, String workspace)", "class_method_signature": "EsIndex.EsIndex(EsClient client, EsIndexColumns columns, ExecutionContext context, String name, String workspace)", "testcase": false, "constructor": true}, {"identifier": "name", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String name()", "full_signature": "private String name()", "class_method_signature": "EsIndex.name()", "testcase": false, "constructor": false}, {"identifier": "createIndex", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createIndex()", "full_signature": "private void createIndex()", "class_method_signature": "EsIndex.createIndex()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(String nodeKey, String propertyName, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void add(String nodeKey, String propertyName, Object value)", "full_signature": "@Override public void add(String nodeKey, String propertyName, Object value)", "class_method_signature": "EsIndex.add(String nodeKey, String propertyName, Object value)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(String nodeKey, String propertyName, Object[] values)", "modifiers": "@Override public", "return": "void", "signature": "void add(String nodeKey, String propertyName, Object[] values)", "full_signature": "@Override public void add(String nodeKey, String propertyName, Object[] values)", "class_method_signature": "EsIndex.add(String nodeKey, String propertyName, Object[] values)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String nodeKey)", "modifiers": "@Override public", "return": "void", "signature": "void remove(String nodeKey)", "full_signature": "@Override public void remove(String nodeKey)", "class_method_signature": "EsIndex.remove(String nodeKey)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String nodeKey, String propertyName, Object value)", "modifiers": "@Override public", "return": "void", "signature": "void remove(String nodeKey, String propertyName, Object value)", "full_signature": "@Override public void remove(String nodeKey, String propertyName, Object value)", "class_method_signature": "EsIndex.remove(String nodeKey, String propertyName, Object value)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(String nodeKey, String propertyName, Object[] values)", "modifiers": "@Override public", "return": "void", "signature": "void remove(String nodeKey, String propertyName, Object[] values)", "full_signature": "@Override public void remove(String nodeKey, String propertyName, Object[] values)", "class_method_signature": "EsIndex.remove(String nodeKey, String propertyName, Object[] values)", "testcase": false, "constructor": false}, {"identifier": "find", "parameters": "(String nodeKey)", "modifiers": "private", "return": "EsRequest", "signature": "EsRequest find(String nodeKey)", "full_signature": "private EsRequest find(String nodeKey)", "class_method_signature": "EsIndex.find(String nodeKey)", "testcase": false, "constructor": false}, {"identifier": "findOrCreateDoc", "parameters": "(String nodeKey)", "modifiers": "private", "return": "EsRequest", "signature": "EsRequest findOrCreateDoc(String nodeKey)", "full_signature": "private EsRequest findOrCreateDoc(String nodeKey)", "class_method_signature": "EsIndex.findOrCreateDoc(String nodeKey)", "testcase": false, "constructor": false}, {"identifier": "putValue", "parameters": "(EsRequest doc, EsIndexColumn column, Object value)", "modifiers": "private", "return": "void", "signature": "void putValue(EsRequest doc, EsIndexColumn column, Object value)", "full_signature": "private void putValue(EsRequest doc, EsIndexColumn column, Object value)", "class_method_signature": "EsIndex.putValue(EsRequest doc, EsIndexColumn column, Object value)", "testcase": false, "constructor": false}, {"identifier": "putValues", "parameters": "(EsRequest doc, EsIndexColumn column, Object[] value)", "modifiers": "private", "return": "void", "signature": "void putValues(EsRequest doc, EsIndexColumn column, Object[] value)", "full_signature": "private void putValues(EsRequest doc, EsIndexColumn column, Object[] value)", "class_method_signature": "EsIndex.putValues(EsRequest doc, EsIndexColumn column, Object[] value)", "testcase": false, "constructor": false}, {"identifier": "commit", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void commit()", "full_signature": "@Override public void commit()", "class_method_signature": "EsIndex.commit()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "EsIndex.getName()", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(IndexConstraints constraints, long cardinalityEstimate)", "modifiers": "@Override public", "return": "Results", "signature": "Results filter(IndexConstraints constraints, long cardinalityEstimate)", "full_signature": "@Override public Results filter(IndexConstraints constraints, long cardinalityEstimate)", "class_method_signature": "EsIndex.filter(IndexConstraints constraints, long cardinalityEstimate)", "testcase": false, "constructor": false}, {"identifier": "estimateCardinality", "parameters": "(List<Constraint> constraints, Map<String, Object> variables)", "modifiers": "@Override public", "return": "long", "signature": "long estimateCardinality(List<Constraint> constraints, Map<String, Object> variables)", "full_signature": "@Override public long estimateCardinality(List<Constraint> constraints, Map<String, Object> variables)", "class_method_signature": "EsIndex.estimateCardinality(List<Constraint> constraints, Map<String, Object> variables)", "testcase": false, "constructor": false}, {"identifier": "estimateTotalCount", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long estimateTotalCount()", "full_signature": "@Override public long estimateTotalCount()", "class_method_signature": "EsIndex.estimateTotalCount()", "testcase": false, "constructor": false}, {"identifier": "requiresReindexing", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean requiresReindexing()", "full_signature": "@Override public boolean requiresReindexing()", "class_method_signature": "EsIndex.requiresReindexing()", "testcase": false, "constructor": false}, {"identifier": "clearAllData", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clearAllData()", "full_signature": "@Override public void clearAllData()", "class_method_signature": "EsIndex.clearAllData()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "(boolean destroyed)", "modifiers": "@Override public", "return": "void", "signature": "void shutdown(boolean destroyed)", "full_signature": "@Override public void shutdown(boolean destroyed)", "class_method_signature": "EsIndex.shutdown(boolean destroyed)", "testcase": false, "constructor": false}], "file": "index-providers/modeshape-elasticsearch-index-provider/src/main/java/org/modeshape/jcr/index/elasticsearch/EsIndex.java"}, "focal_method": {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String getName() {\n        return name;\n    }", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "EsIndex.getName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}