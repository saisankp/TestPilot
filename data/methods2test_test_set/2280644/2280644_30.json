{"test_class": {"identifier": "ParsedLineTest", "superclass": "", "interfaces": "", "fields": [], "file": "aesh/src/test/java/org/aesh/parser/ParsedLineTest.java"}, "test_case": {"identifier": "firstWordFromEmptyLine", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void firstWordFromEmptyLine() throws Exception {\n        List<ParsedWord> words = new ArrayList<>();\n        ParsedLine pl = new ParsedLine(\"\", words, -1,\n                0, 0, ParserStatus.OK, \"\", OperatorType.NONE);\n        assertEquals(pl.firstWord().word(), \"\");\n    }", "signature": "void firstWordFromEmptyLine()", "full_signature": "@Test public void firstWordFromEmptyLine()", "class_method_signature": "ParsedLineTest.firstWordFromEmptyLine()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "word", "firstWord"]}, "focal_class": {"identifier": "ParsedLine", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String originalInput;", "modifier": "private final", "type": "String", "declarator": "originalInput", "var_name": "originalInput"}, {"original_string": "private final String errorMessage;", "modifier": "private final", "type": "String", "declarator": "errorMessage", "var_name": "errorMessage"}, {"original_string": "private final List<ParsedWord> words;", "modifier": "private final", "type": "List<ParsedWord>", "declarator": "words", "var_name": "words"}, {"original_string": "private final ParserStatus status;", "modifier": "private final", "type": "ParserStatus", "declarator": "status", "var_name": "status"}, {"original_string": "private final int cursor;", "modifier": "private final", "type": "int", "declarator": "cursor", "var_name": "cursor"}, {"original_string": "private final int cursorWord;", "modifier": "private final", "type": "int", "declarator": "cursorWord", "var_name": "cursorWord"}, {"original_string": "private final int wordCursor;", "modifier": "private final", "type": "int", "declarator": "wordCursor", "var_name": "wordCursor"}, {"original_string": "private final OperatorType operator;", "modifier": "private final", "type": "OperatorType", "declarator": "operator", "var_name": "operator"}], "methods": [{"identifier": "ParsedLine", "parameters": "(String originalInput, List<ParsedWord> words,\n                      int cursor, int cursorWord, int wordCursor,\n                      ParserStatus status, String errorMessage, OperatorType operator)", "modifiers": "public", "return": "", "signature": " ParsedLine(String originalInput, List<ParsedWord> words,\n                      int cursor, int cursorWord, int wordCursor,\n                      ParserStatus status, String errorMessage, OperatorType operator)", "full_signature": "public  ParsedLine(String originalInput, List<ParsedWord> words,\n                      int cursor, int cursorWord, int wordCursor,\n                      ParserStatus status, String errorMessage, OperatorType operator)", "class_method_signature": "ParsedLine.ParsedLine(String originalInput, List<ParsedWord> words,\n                      int cursor, int cursorWord, int wordCursor,\n                      ParserStatus status, String errorMessage, OperatorType operator)", "testcase": false, "constructor": true}, {"identifier": "cursor", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int cursor()", "full_signature": "public int cursor()", "class_method_signature": "ParsedLine.cursor()", "testcase": false, "constructor": false}, {"identifier": "selectedIndex", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int selectedIndex()", "full_signature": "public int selectedIndex()", "class_method_signature": "ParsedLine.selectedIndex()", "testcase": false, "constructor": false}, {"identifier": "selectedWord", "parameters": "()", "modifiers": "public", "return": "ParsedWord", "signature": "ParsedWord selectedWord()", "full_signature": "public ParsedWord selectedWord()", "class_method_signature": "ParsedLine.selectedWord()", "testcase": false, "constructor": false}, {"identifier": "selectedWordToCursor", "parameters": "()", "modifiers": "public", "return": "ParsedWord", "signature": "ParsedWord selectedWordToCursor()", "full_signature": "public ParsedWord selectedWordToCursor()", "class_method_signature": "ParsedLine.selectedWordToCursor()", "testcase": false, "constructor": false}, {"identifier": "wordCursor", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int wordCursor()", "full_signature": "public int wordCursor()", "class_method_signature": "ParsedLine.wordCursor()", "testcase": false, "constructor": false}, {"identifier": "line", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String line()", "full_signature": "public String line()", "class_method_signature": "ParsedLine.line()", "testcase": false, "constructor": false}, {"identifier": "errorMessage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String errorMessage()", "full_signature": "public String errorMessage()", "class_method_signature": "ParsedLine.errorMessage()", "testcase": false, "constructor": false}, {"identifier": "words", "parameters": "()", "modifiers": "public", "return": "List<ParsedWord>", "signature": "List<ParsedWord> words()", "full_signature": "public List<ParsedWord> words()", "class_method_signature": "ParsedLine.words()", "testcase": false, "constructor": false}, {"identifier": "status", "parameters": "()", "modifiers": "public", "return": "ParserStatus", "signature": "ParserStatus status()", "full_signature": "public ParserStatus status()", "class_method_signature": "ParsedLine.status()", "testcase": false, "constructor": false}, {"identifier": "lastWord", "parameters": "()", "modifiers": "public", "return": "ParsedWord", "signature": "ParsedWord lastWord()", "full_signature": "public ParsedWord lastWord()", "class_method_signature": "ParsedLine.lastWord()", "testcase": false, "constructor": false}, {"identifier": "firstWord", "parameters": "()", "modifiers": "public", "return": "ParsedWord", "signature": "ParsedWord firstWord()", "full_signature": "public ParsedWord firstWord()", "class_method_signature": "ParsedLine.firstWord()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "ParsedLine.size()", "testcase": false, "constructor": false}, {"identifier": "hasWords", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean hasWords()", "full_signature": "public boolean hasWords()", "class_method_signature": "ParsedLine.hasWords()", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "public", "return": "ParsedLineIterator", "signature": "ParsedLineIterator iterator()", "full_signature": "public ParsedLineIterator iterator()", "class_method_signature": "ParsedLine.iterator()", "testcase": false, "constructor": false}, {"identifier": "operator", "parameters": "()", "modifiers": "public", "return": "OperatorType", "signature": "OperatorType operator()", "full_signature": "public OperatorType operator()", "class_method_signature": "ParsedLine.operator()", "testcase": false, "constructor": false}, {"identifier": "cursorAtEnd", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean cursorAtEnd()", "full_signature": "public boolean cursorAtEnd()", "class_method_signature": "ParsedLine.cursorAtEnd()", "testcase": false, "constructor": false}, {"identifier": "spaceAtEnd", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean spaceAtEnd()", "full_signature": "public boolean spaceAtEnd()", "class_method_signature": "ParsedLine.spaceAtEnd()", "testcase": false, "constructor": false}, {"identifier": "isCursorAtEndOfSelectedWord", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCursorAtEndOfSelectedWord()", "full_signature": "public boolean isCursorAtEndOfSelectedWord()", "class_method_signature": "ParsedLine.isCursorAtEndOfSelectedWord()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ParsedLine.toString()", "testcase": false, "constructor": false}], "file": "aesh/src/main/java/org/aesh/parser/ParsedLine.java"}, "focal_method": {"identifier": "firstWord", "parameters": "()", "modifiers": "public", "return": "ParsedWord", "body": "public ParsedWord firstWord() {\n        if(words.size() > 0 )\n            return words.get(0);\n        else\n            return new ParsedWord(\"\", 0);\n    }", "signature": "ParsedWord firstWord()", "full_signature": "public ParsedWord firstWord()", "class_method_signature": "ParsedLine.firstWord()", "testcase": false, "constructor": false, "invocations": ["size", "get"]}, "repository": {"repo_id": 2280644, "url": "https://github.com/aeshell/aesh", "language": "Java", "is_fork": false, "fork_count": 62, "stargazer_count": 83, "size": 6068, "license": "licensed"}}