{"test_class": {"identifier": "TooltipLabelTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private JPanel myRootPanel;", "modifier": "private", "type": "JPanel", "declarator": "myRootPanel", "var_name": "myRootPanel"}, {"original_string": "private TooltipLabel myTooltipLabel;", "modifier": "private", "type": "TooltipLabel", "declarator": "myTooltipLabel", "var_name": "myTooltipLabel"}, {"original_string": "private JPanel myNode1;", "modifier": "private", "type": "JPanel", "declarator": "myNode1", "var_name": "myNode1"}, {"original_string": "private JPanel myNode2;", "modifier": "private", "type": "JPanel", "declarator": "myNode2", "var_name": "myNode2"}, {"original_string": "private JPanel myNode1_1;", "modifier": "private", "type": "JPanel", "declarator": "myNode1_1", "var_name": "myNode1_1"}, {"original_string": "private JPanel myNode1_2;", "modifier": "private", "type": "JPanel", "declarator": "myNode1_2", "var_name": "myNode1_2"}, {"original_string": "private JPanel myNode1_1_1;", "modifier": "private", "type": "JPanel", "declarator": "myNode1_1_1", "var_name": "myNode1_1_1"}, {"original_string": "private JPanel myNode1_2_1_notooltip;", "modifier": "private", "type": "JPanel", "declarator": "myNode1_2_1_notooltip", "var_name": "myNode1_2_1_notooltip"}, {"original_string": "private JPanel myNode1_2_2_notooltip;", "modifier": "private", "type": "JPanel", "declarator": "myNode1_2_2_notooltip", "var_name": "myNode1_2_2_notooltip"}, {"original_string": "private JPanel myNode1_2_2_1_notooltip;", "modifier": "private", "type": "JPanel", "declarator": "myNode1_2_2_1_notooltip", "var_name": "myNode1_2_2_1_notooltip"}, {"original_string": "private JPanel myNode2_1;", "modifier": "private", "type": "JPanel", "declarator": "myNode2_1", "var_name": "myNode2_1"}, {"original_string": "private JPanel myNode2_1_1_notooltip;", "modifier": "private", "type": "JPanel", "declarator": "myNode2_1_1_notooltip", "var_name": "myNode2_1_1_notooltip"}], "file": "adt-ui/src/test/java/com/android/tools/adtui/TooltipLabelTest.java"}, "test_case": {"identifier": "tooltipLabelCantSetTextDirectly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void tooltipLabelCantSetTextDirectly() throws Exception {\n    String text = myTooltipLabel.getText();\n    myTooltipLabel.setText(\"IGNORED TEXT\");\n    assertThat(myTooltipLabel.getText()).isEqualTo(text);\n  }", "signature": "void tooltipLabelCantSetTextDirectly()", "full_signature": "@Test public void tooltipLabelCantSetTextDirectly()", "class_method_signature": "TooltipLabelTest.tooltipLabelCantSetTextDirectly()", "testcase": true, "constructor": false, "invocations": ["getText", "setText", "isEqualTo", "assertThat", "getText"]}, "focal_class": {"identifier": "TooltipLabel", "superclass": "extends JBLabel", "interfaces": "", "fields": [{"original_string": "private static final String PROPERTY_FOCUS_OWNER = \"focusOwner\";", "modifier": "private static final", "type": "String", "declarator": "PROPERTY_FOCUS_OWNER = \"focusOwner\"", "var_name": "PROPERTY_FOCUS_OWNER"}, {"original_string": "@Nullable private Container myScope;", "modifier": "@Nullable private", "type": "Container", "declarator": "myScope", "var_name": "myScope"}], "methods": [{"identifier": "TooltipLabel", "parameters": "()", "modifiers": "public", "return": "", "signature": " TooltipLabel()", "full_signature": "public  TooltipLabel()", "class_method_signature": "TooltipLabel.TooltipLabel()", "testcase": false, "constructor": true}, {"identifier": "setText", "parameters": "(String text)", "modifiers": "@Override public", "return": "void", "signature": "void setText(String text)", "full_signature": "@Override public void setText(String text)", "class_method_signature": "TooltipLabel.setText(String text)", "testcase": false, "constructor": false}, {"identifier": "setScope", "parameters": "(@Nullable Container scope)", "modifiers": "public", "return": "void", "signature": "void setScope(@Nullable Container scope)", "full_signature": "public void setScope(@Nullable Container scope)", "class_method_signature": "TooltipLabel.setScope(@Nullable Container scope)", "testcase": false, "constructor": false}, {"identifier": "isInScope", "parameters": "(@NotNull Component component)", "modifiers": "private", "return": "boolean", "signature": "boolean isInScope(@NotNull Component component)", "full_signature": "private boolean isInScope(@NotNull Component component)", "class_method_signature": "TooltipLabel.isInScope(@NotNull Component component)", "testcase": false, "constructor": false}, {"identifier": "getTooltip", "parameters": "(@NotNull Component component)", "modifiers": "@VisibleForTesting // Unit testing Swing focus is not trivial, test this directly instead @Nullable", "return": "String", "signature": "String getTooltip(@NotNull Component component)", "full_signature": "@VisibleForTesting // Unit testing Swing focus is not trivial, test this directly instead @Nullable String getTooltip(@NotNull Component component)", "class_method_signature": "TooltipLabel.getTooltip(@NotNull Component component)", "testcase": false, "constructor": false}], "file": "adt-ui/src/main/java/com/android/tools/adtui/TooltipLabel.java"}, "focal_method": {"identifier": "setText", "parameters": "(String text)", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void setText(String text) {\n    // Disabled. Text can only be set internally.\n  }", "signature": "void setText(String text)", "full_signature": "@Override public void setText(String text)", "class_method_signature": "TooltipLabel.setText(String text)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}