{"test_class": {"identifier": "LinkedInAdapterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LinkedInAdapter apiAdapter = new LinkedInAdapter();", "modifier": "private", "type": "LinkedInAdapter", "declarator": "apiAdapter = new LinkedInAdapter()", "var_name": "apiAdapter"}, {"original_string": "private LinkedIn linkedin = Mockito.mock(LinkedIn.class);", "modifier": "private", "type": "LinkedIn", "declarator": "linkedin = Mockito.mock(LinkedIn.class)", "var_name": "linkedin"}], "file": "spring-social-linkedin/src/test/java/org/springframework/social/linkedin/connect/LinkedInAdapterTest.java"}, "test_case": {"identifier": "updateStatus", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void updateStatus() {\n\t\tNetworkUpdateOperations networkOperations = Mockito.mock(NetworkUpdateOperations.class);\n\t\tMockito.when(linkedin.networkUpdateOperations()).thenReturn(networkOperations);\n\t\tapiAdapter.updateStatus(linkedin, \"Hello world!\");\n\t\tMockito.verify(networkOperations).createNetworkUpdate(\"Hello world!\");\n\t}", "signature": "void updateStatus()", "full_signature": "@Test public void updateStatus()", "class_method_signature": "LinkedInAdapterTest.updateStatus()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "networkUpdateOperations", "updateStatus", "createNetworkUpdate", "verify"]}, "focal_class": {"identifier": "LinkedInAdapter", "superclass": "", "interfaces": "implements ApiAdapter<LinkedIn>", "fields": [], "methods": [{"identifier": "test", "parameters": "(LinkedIn linkedin)", "modifiers": "public", "return": "boolean", "signature": "boolean test(LinkedIn linkedin)", "full_signature": "public boolean test(LinkedIn linkedin)", "class_method_signature": "LinkedInAdapter.test(LinkedIn linkedin)", "testcase": false, "constructor": false}, {"identifier": "setConnectionValues", "parameters": "(LinkedIn linkedin, ConnectionValues values)", "modifiers": "public", "return": "void", "signature": "void setConnectionValues(LinkedIn linkedin, ConnectionValues values)", "full_signature": "public void setConnectionValues(LinkedIn linkedin, ConnectionValues values)", "class_method_signature": "LinkedInAdapter.setConnectionValues(LinkedIn linkedin, ConnectionValues values)", "testcase": false, "constructor": false}, {"identifier": "fetchUserProfile", "parameters": "(LinkedIn linkedin)", "modifiers": "public", "return": "UserProfile", "signature": "UserProfile fetchUserProfile(LinkedIn linkedin)", "full_signature": "public UserProfile fetchUserProfile(LinkedIn linkedin)", "class_method_signature": "LinkedInAdapter.fetchUserProfile(LinkedIn linkedin)", "testcase": false, "constructor": false}, {"identifier": "updateStatus", "parameters": "(LinkedIn linkedin, String message)", "modifiers": "public", "return": "void", "signature": "void updateStatus(LinkedIn linkedin, String message)", "full_signature": "public void updateStatus(LinkedIn linkedin, String message)", "class_method_signature": "LinkedInAdapter.updateStatus(LinkedIn linkedin, String message)", "testcase": false, "constructor": false}], "file": "spring-social-linkedin/src/main/java/org/springframework/social/linkedin/connect/LinkedInAdapter.java"}, "focal_method": {"identifier": "updateStatus", "parameters": "(LinkedIn linkedin, String message)", "modifiers": "public", "return": "void", "body": "public void updateStatus(LinkedIn linkedin, String message) {\n\t\tlinkedin.networkUpdateOperations().createNetworkUpdate(message);\n\t}", "signature": "void updateStatus(LinkedIn linkedin, String message)", "full_signature": "public void updateStatus(LinkedIn linkedin, String message)", "class_method_signature": "LinkedInAdapter.updateStatus(LinkedIn linkedin, String message)", "testcase": false, "constructor": false, "invocations": ["createNetworkUpdate", "networkUpdateOperations"]}, "repository": {"repo_id": 1767898, "url": "https://github.com/spring-projects/spring-social-linkedin", "language": "Java", "is_fork": false, "fork_count": 66, "stargazer_count": 71, "size": 12391, "license": "licensed"}}