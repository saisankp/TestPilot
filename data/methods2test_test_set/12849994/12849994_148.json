{"test_class": {"identifier": "AndFilterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "AndFilter andFilter;", "modifier": "", "type": "AndFilter", "declarator": "andFilter", "var_name": "andFilter"}, {"original_string": "@Mock\n  Filter filter;", "modifier": "@Mock", "type": "Filter", "declarator": "filter", "var_name": "filter"}], "file": "imcache-core/src/test/java/com/cetsoft/imcache/cache/search/filter/AndFilterTest.java"}, "test_case": {"identifier": "filter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void filter() {\n    Object object1 = new Object();\n    Object object2 = new Object();\n    Object object3 = new Object();\n    List<Object> list1 = new ArrayList<Object>();\n    list1.add(object1);\n    list1.add(object2);\n    List<Object> list2 = new ArrayList<Object>();\n    list2.add(object2);\n    list2.add(object3);\n    doReturn(list1).doReturn(list2).when(filter).filter(anyList());\n    List<Object> actualObjects = andFilter.filter(list1);\n    assertEquals(object2, actualObjects.get(0));\n  }", "signature": "void filter()", "full_signature": "@Test public void filter()", "class_method_signature": "AndFilterTest.filter()", "testcase": true, "constructor": false, "invocations": ["add", "add", "add", "add", "filter", "when", "doReturn", "doReturn", "anyList", "filter", "assertEquals", "get"]}, "focal_class": {"identifier": "AndFilter", "superclass": "extends LogicalFilter", "interfaces": "", "fields": [{"original_string": "private Filter[] filters;", "modifier": "private", "type": "Filter[]", "declarator": "filters", "var_name": "filters"}], "methods": [{"identifier": "AndFilter", "parameters": "(final Filter... filters)", "modifiers": "public", "return": "", "signature": " AndFilter(final Filter... filters)", "full_signature": "public  AndFilter(final Filter... filters)", "class_method_signature": "AndFilter.AndFilter(final Filter... filters)", "testcase": false, "constructor": true}, {"identifier": "getFilters", "parameters": "()", "modifiers": "public", "return": "Filter[]", "signature": "Filter[] getFilters()", "full_signature": "public Filter[] getFilters()", "class_method_signature": "AndFilter.getFilters()", "testcase": false, "constructor": false}, {"identifier": "filter", "parameters": "(final List<Object> objects)", "modifiers": "public", "return": "List<Object>", "signature": "List<Object> filter(final List<Object> objects)", "full_signature": "public List<Object> filter(final List<Object> objects)", "class_method_signature": "AndFilter.filter(final List<Object> objects)", "testcase": false, "constructor": false}], "file": "imcache-core/src/main/java/com/cetsoft/imcache/cache/search/filter/AndFilter.java"}, "focal_method": {"identifier": "filter", "parameters": "(final List<Object> objects)", "modifiers": "public", "return": "List<Object>", "body": "public List<Object> filter(final List<Object> objects) {\n    List<Object> results = new ArrayList<>();\n    for (final Filter filter : filters) {\n      results = filter.filter(objects);\n    }\n    return results;\n  }", "signature": "List<Object> filter(final List<Object> objects)", "full_signature": "public List<Object> filter(final List<Object> objects)", "class_method_signature": "AndFilter.filter(final List<Object> objects)", "testcase": false, "constructor": false, "invocations": ["filter"]}, "repository": {"repo_id": 12849994, "url": "https://github.com/Cetsoft/imcache", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 121, "size": 1599, "license": "licensed"}}