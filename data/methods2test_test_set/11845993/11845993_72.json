{"test_class": {"identifier": "ConfigurationRegistryTest", "superclass": "", "interfaces": "", "fields": [], "file": "stagemonitor-configuration/src/test/java/org/stagemonitor/configuration/ConfigurationRegistryTest.java"}, "test_case": {"identifier": "testValidateConfigurationOption", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testValidateConfigurationOption() throws Exception {\n\t\tfinal ConfigurationOption<Boolean> configurationOption = ConfigurationOption.booleanOption()\n\t\t\t\t.key(\"foo\")\n\t\t\t\t.addValidator((value) -> {\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tthrow new IllegalArgumentException(\"Validation failed\");\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.buildWithDefault(true);\n\n\t\tfinal ConfigurationOptionProvider optionProvider = TestConfigurationOptionProvider.of(configurationOption);\n\t\tfinal SimpleSource configurationSource = new SimpleSource(\"test\");\n\t\tfinal ConfigurationRegistry config = ConfigurationRegistry.builder()\n\t\t\t\t.addOptionProvider(optionProvider)\n\t\t\t\t.addConfigSource(configurationSource)\n\t\t\t\t.build();\n\t\ttry {\n\t\t\tconfig.save(\"foo\", \"false\", \"test\");\n\t\t\tfail();\n\t\t} catch (IllegalArgumentException e) {\n\t\t\tassertEquals(\"Validation failed\", e.getMessage());\n\t\t}\n\t}", "signature": "void testValidateConfigurationOption()", "full_signature": "@Test public void testValidateConfigurationOption()", "class_method_signature": "ConfigurationRegistryTest.testValidateConfigurationOption()", "testcase": true, "constructor": false, "invocations": ["buildWithDefault", "addValidator", "key", "booleanOption", "of", "build", "addConfigSource", "addOptionProvider", "builder", "save", "fail", "assertEquals", "getMessage"]}, "focal_class": {"identifier": "ConfigurationRegistry", "superclass": "", "interfaces": "implements Closeable", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(getClass());", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(getClass())", "var_name": "logger"}, {"original_string": "private final List<ConfigurationSource> configurationSources = new CopyOnWriteArrayList<ConfigurationSource>();", "modifier": "private final", "type": "List<ConfigurationSource>", "declarator": "configurationSources = new CopyOnWriteArrayList<ConfigurationSource>()", "var_name": "configurationSources"}, {"original_string": "private final boolean failOnMissingRequiredValues;", "modifier": "private final", "type": "boolean", "declarator": "failOnMissingRequiredValues", "var_name": "failOnMissingRequiredValues"}, {"original_string": "private Map<Class<? extends ConfigurationOptionProvider>, ConfigurationOptionProvider> optionProvidersByClass = new HashMap<Class<? extends ConfigurationOptionProvider>, ConfigurationOptionProvider>();", "modifier": "private", "type": "Map<Class<? extends ConfigurationOptionProvider>, ConfigurationOptionProvider>", "declarator": "optionProvidersByClass = new HashMap<Class<? extends ConfigurationOptionProvider>, ConfigurationOptionProvider>()", "var_name": "optionProvidersByClass"}, {"original_string": "private Map<String, ConfigurationOption<?>> configurationOptionsByKey = new LinkedHashMap<String, ConfigurationOption<?>>();", "modifier": "private", "type": "Map<String, ConfigurationOption<?>>", "declarator": "configurationOptionsByKey = new LinkedHashMap<String, ConfigurationOption<?>>()", "var_name": "configurationOptionsByKey"}, {"original_string": "private Map<String, List<ConfigurationOption<?>>> configurationOptionsByCategory = new LinkedHashMap<String, List<ConfigurationOption<?>>>();", "modifier": "private", "type": "Map<String, List<ConfigurationOption<?>>>", "declarator": "configurationOptionsByCategory = new LinkedHashMap<String, List<ConfigurationOption<?>>>()", "var_name": "configurationOptionsByCategory"}, {"original_string": "private ScheduledExecutorService configurationReloader;", "modifier": "private", "type": "ScheduledExecutorService", "declarator": "configurationReloader", "var_name": "configurationReloader"}], "methods": [{"identifier": "builder", "parameters": "()", "modifiers": "public static", "return": "Builder", "signature": "Builder builder()", "full_signature": "public static Builder builder()", "class_method_signature": "ConfigurationRegistry.builder()", "testcase": false, "constructor": false}, {"identifier": "ConfigurationRegistry", "parameters": "(Iterable<? extends ConfigurationOptionProvider> optionProviders,\n\t\t\t\t\t\t\t\t List<ConfigurationSource> configSources)", "modifiers": "@Deprecated public", "return": "", "signature": " ConfigurationRegistry(Iterable<? extends ConfigurationOptionProvider> optionProviders,\n\t\t\t\t\t\t\t\t List<ConfigurationSource> configSources)", "full_signature": "@Deprecated public  ConfigurationRegistry(Iterable<? extends ConfigurationOptionProvider> optionProviders,\n\t\t\t\t\t\t\t\t List<ConfigurationSource> configSources)", "class_method_signature": "ConfigurationRegistry.ConfigurationRegistry(Iterable<? extends ConfigurationOptionProvider> optionProviders,\n\t\t\t\t\t\t\t\t List<ConfigurationSource> configSources)", "testcase": false, "constructor": true}, {"identifier": "ConfigurationRegistry", "parameters": "(Iterable<? extends ConfigurationOptionProvider> optionProviders,\n\t\t\t\t\t\t\t\t List<ConfigurationSource> configSources, boolean failOnMissingRequiredValues)", "modifiers": "@Deprecated public", "return": "", "signature": " ConfigurationRegistry(Iterable<? extends ConfigurationOptionProvider> optionProviders,\n\t\t\t\t\t\t\t\t List<ConfigurationSource> configSources, boolean failOnMissingRequiredValues)", "full_signature": "@Deprecated public  ConfigurationRegistry(Iterable<? extends ConfigurationOptionProvider> optionProviders,\n\t\t\t\t\t\t\t\t List<ConfigurationSource> configSources, boolean failOnMissingRequiredValues)", "class_method_signature": "ConfigurationRegistry.ConfigurationRegistry(Iterable<? extends ConfigurationOptionProvider> optionProviders,\n\t\t\t\t\t\t\t\t List<ConfigurationSource> configSources, boolean failOnMissingRequiredValues)", "testcase": false, "constructor": true}, {"identifier": "registerConfigurationOptions", "parameters": "(Iterable<? extends ConfigurationOptionProvider> optionProviders)", "modifiers": "private", "return": "void", "signature": "void registerConfigurationOptions(Iterable<? extends ConfigurationOptionProvider> optionProviders)", "full_signature": "private void registerConfigurationOptions(Iterable<? extends ConfigurationOptionProvider> optionProviders)", "class_method_signature": "ConfigurationRegistry.registerConfigurationOptions(Iterable<? extends ConfigurationOptionProvider> optionProviders)", "testcase": false, "constructor": false}, {"identifier": "registerOptionProvider", "parameters": "(ConfigurationOptionProvider configurationOptionProvider)", "modifiers": "private", "return": "void", "signature": "void registerOptionProvider(ConfigurationOptionProvider configurationOptionProvider)", "full_signature": "private void registerOptionProvider(ConfigurationOptionProvider configurationOptionProvider)", "class_method_signature": "ConfigurationRegistry.registerOptionProvider(ConfigurationOptionProvider configurationOptionProvider)", "testcase": false, "constructor": false}, {"identifier": "getConfig", "parameters": "(Class<T> configClass)", "modifiers": "public", "return": "T", "signature": "T getConfig(Class<T> configClass)", "full_signature": "public T getConfig(Class<T> configClass)", "class_method_signature": "ConfigurationRegistry.getConfig(Class<T> configClass)", "testcase": false, "constructor": false}, {"identifier": "getConfigurationOptionProviders", "parameters": "()", "modifiers": "public", "return": "Collection<ConfigurationOptionProvider>", "signature": "Collection<ConfigurationOptionProvider> getConfigurationOptionProviders()", "full_signature": "public Collection<ConfigurationOptionProvider> getConfigurationOptionProviders()", "class_method_signature": "ConfigurationRegistry.getConfigurationOptionProviders()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(final ConfigurationOption<?> configurationOption)", "modifiers": "private", "return": "void", "signature": "void add(final ConfigurationOption<?> configurationOption)", "full_signature": "private void add(final ConfigurationOption<?> configurationOption)", "class_method_signature": "ConfigurationRegistry.add(final ConfigurationOption<?> configurationOption)", "testcase": false, "constructor": false}, {"identifier": "addConfigurationOptionByKey", "parameters": "(ConfigurationOption<?> configurationOption, String key)", "modifiers": "private", "return": "void", "signature": "void addConfigurationOptionByKey(ConfigurationOption<?> configurationOption, String key)", "full_signature": "private void addConfigurationOptionByKey(ConfigurationOption<?> configurationOption, String key)", "class_method_signature": "ConfigurationRegistry.addConfigurationOptionByKey(ConfigurationOption<?> configurationOption, String key)", "testcase": false, "constructor": false}, {"identifier": "addConfigurationOptionByCategory", "parameters": "(String configurationCategory, final ConfigurationOption<?> configurationOption)", "modifiers": "private", "return": "void", "signature": "void addConfigurationOptionByCategory(String configurationCategory, final ConfigurationOption<?> configurationOption)", "full_signature": "private void addConfigurationOptionByCategory(String configurationCategory, final ConfigurationOption<?> configurationOption)", "class_method_signature": "ConfigurationRegistry.addConfigurationOptionByCategory(String configurationCategory, final ConfigurationOption<?> configurationOption)", "testcase": false, "constructor": false}, {"identifier": "getConfigurationOptionsByCategory", "parameters": "()", "modifiers": "public", "return": "Map<String, List<ConfigurationOption<?>>>", "signature": "Map<String, List<ConfigurationOption<?>>> getConfigurationOptionsByCategory()", "full_signature": "public Map<String, List<ConfigurationOption<?>>> getConfigurationOptionsByCategory()", "class_method_signature": "ConfigurationRegistry.getConfigurationOptionsByCategory()", "testcase": false, "constructor": false}, {"identifier": "getConfigurationOptionsByKey", "parameters": "()", "modifiers": "public", "return": "Map<String, ConfigurationOption<?>>", "signature": "Map<String, ConfigurationOption<?>> getConfigurationOptionsByKey()", "full_signature": "public Map<String, ConfigurationOption<?>> getConfigurationOptionsByKey()", "class_method_signature": "ConfigurationRegistry.getConfigurationOptionsByKey()", "testcase": false, "constructor": false}, {"identifier": "getNamesOfConfigurationSources", "parameters": "()", "modifiers": "public", "return": "Map<String, Boolean>", "signature": "Map<String, Boolean> getNamesOfConfigurationSources()", "full_signature": "public Map<String, Boolean> getNamesOfConfigurationSources()", "class_method_signature": "ConfigurationRegistry.getNamesOfConfigurationSources()", "testcase": false, "constructor": false}, {"identifier": "getConfigurationOptionByKey", "parameters": "(String key)", "modifiers": "public", "return": "ConfigurationOption<?>", "signature": "ConfigurationOption<?> getConfigurationOptionByKey(String key)", "full_signature": "public ConfigurationOption<?> getConfigurationOptionByKey(String key)", "class_method_signature": "ConfigurationRegistry.getConfigurationOptionByKey(String key)", "testcase": false, "constructor": false}, {"identifier": "scheduleReloadAtRate", "parameters": "(final long rate, TimeUnit timeUnit)", "modifiers": "public", "return": "void", "signature": "void scheduleReloadAtRate(final long rate, TimeUnit timeUnit)", "full_signature": "public void scheduleReloadAtRate(final long rate, TimeUnit timeUnit)", "class_method_signature": "ConfigurationRegistry.scheduleReloadAtRate(final long rate, TimeUnit timeUnit)", "testcase": false, "constructor": false}, {"identifier": "initThreadPool", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initThreadPool()", "full_signature": "private void initThreadPool()", "class_method_signature": "ConfigurationRegistry.initThreadPool()", "testcase": false, "constructor": false}, {"identifier": "reload", "parameters": "(String key)", "modifiers": "public", "return": "void", "signature": "void reload(String key)", "full_signature": "public void reload(String key)", "class_method_signature": "ConfigurationRegistry.reload(String key)", "testcase": false, "constructor": false}, {"identifier": "reloadAllConfigurationOptions", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reloadAllConfigurationOptions()", "full_signature": "public void reloadAllConfigurationOptions()", "class_method_signature": "ConfigurationRegistry.reloadAllConfigurationOptions()", "testcase": false, "constructor": false}, {"identifier": "reloadDynamicConfigurationOptions", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void reloadDynamicConfigurationOptions()", "full_signature": "public void reloadDynamicConfigurationOptions()", "class_method_signature": "ConfigurationRegistry.reloadDynamicConfigurationOptions()", "testcase": false, "constructor": false}, {"identifier": "reload", "parameters": "(final boolean reloadNonDynamicValues)", "modifiers": "private", "return": "void", "signature": "void reload(final boolean reloadNonDynamicValues)", "full_signature": "private void reload(final boolean reloadNonDynamicValues)", "class_method_signature": "ConfigurationRegistry.reload(final boolean reloadNonDynamicValues)", "testcase": false, "constructor": false}, {"identifier": "addConfigurationSource", "parameters": "(ConfigurationSource configurationSource)", "modifiers": "public", "return": "void", "signature": "void addConfigurationSource(ConfigurationSource configurationSource)", "full_signature": "public void addConfigurationSource(ConfigurationSource configurationSource)", "class_method_signature": "ConfigurationRegistry.addConfigurationSource(ConfigurationSource configurationSource)", "testcase": false, "constructor": false}, {"identifier": "addConfigurationSourceAfter", "parameters": "(ConfigurationSource configurationSource, Class<? extends ConfigurationSource> addAfter)", "modifiers": "public", "return": "void", "signature": "void addConfigurationSourceAfter(ConfigurationSource configurationSource, Class<? extends ConfigurationSource> addAfter)", "full_signature": "public void addConfigurationSourceAfter(ConfigurationSource configurationSource, Class<? extends ConfigurationSource> addAfter)", "class_method_signature": "ConfigurationRegistry.addConfigurationSourceAfter(ConfigurationSource configurationSource, Class<? extends ConfigurationSource> addAfter)", "testcase": false, "constructor": false}, {"identifier": "addConfigurationSource", "parameters": "(ConfigurationSource configurationSource, boolean firstPrio)", "modifiers": "public", "return": "void", "signature": "void addConfigurationSource(ConfigurationSource configurationSource, boolean firstPrio)", "full_signature": "public void addConfigurationSource(ConfigurationSource configurationSource, boolean firstPrio)", "class_method_signature": "ConfigurationRegistry.addConfigurationSource(ConfigurationSource configurationSource, boolean firstPrio)", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(String key, String value, String configurationSourceName)", "modifiers": "public", "return": "void", "signature": "void save(String key, String value, String configurationSourceName)", "full_signature": "public void save(String key, String value, String configurationSourceName)", "class_method_signature": "ConfigurationRegistry.save(String key, String value, String configurationSourceName)", "testcase": false, "constructor": false}, {"identifier": "validateConfigurationOption", "parameters": "(String key, String value)", "modifiers": "private", "return": "ConfigurationOption<?>", "signature": "ConfigurationOption<?> validateConfigurationOption(String key, String value)", "full_signature": "private ConfigurationOption<?> validateConfigurationOption(String key, String value)", "class_method_signature": "ConfigurationRegistry.validateConfigurationOption(String key, String value)", "testcase": false, "constructor": false}, {"identifier": "saveToConfigurationSource", "parameters": "(String key, String value, String configurationSourceName, ConfigurationOption<?> configurationOption)", "modifiers": "private", "return": "void", "signature": "void saveToConfigurationSource(String key, String value, String configurationSourceName, ConfigurationOption<?> configurationOption)", "full_signature": "private void saveToConfigurationSource(String key, String value, String configurationSourceName, ConfigurationOption<?> configurationOption)", "class_method_signature": "ConfigurationRegistry.saveToConfigurationSource(String key, String value, String configurationSourceName, ConfigurationOption<?> configurationOption)", "testcase": false, "constructor": false}, {"identifier": "maskSensitivConfigurationValues", "parameters": "(ConfigurationOption<?> configurationOption, String value)", "modifiers": "private", "return": "String", "signature": "String maskSensitivConfigurationValues(ConfigurationOption<?> configurationOption, String value)", "full_signature": "private String maskSensitivConfigurationValues(ConfigurationOption<?> configurationOption, String value)", "class_method_signature": "ConfigurationRegistry.maskSensitivConfigurationValues(ConfigurationOption<?> configurationOption, String value)", "testcase": false, "constructor": false}, {"identifier": "validateConfigurationSource", "parameters": "(ConfigurationSource configurationSource, ConfigurationOption<?> configurationOption)", "modifiers": "private", "return": "void", "signature": "void validateConfigurationSource(ConfigurationSource configurationSource, ConfigurationOption<?> configurationOption)", "full_signature": "private void validateConfigurationSource(ConfigurationSource configurationSource, ConfigurationOption<?> configurationOption)", "class_method_signature": "ConfigurationRegistry.validateConfigurationSource(ConfigurationSource configurationSource, ConfigurationOption<?> configurationOption)", "testcase": false, "constructor": false}, {"identifier": "getString", "parameters": "(String key)", "modifiers": "public", "return": "String", "signature": "String getString(String key)", "full_signature": "public String getString(String key)", "class_method_signature": "ConfigurationRegistry.getString(String key)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "ConfigurationRegistry.close()", "testcase": false, "constructor": false}, {"identifier": "isFailOnMissingRequiredValues", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isFailOnMissingRequiredValues()", "full_signature": " boolean isFailOnMissingRequiredValues()", "class_method_signature": "ConfigurationRegistry.isFailOnMissingRequiredValues()", "testcase": false, "constructor": false}], "file": "stagemonitor-configuration/src/main/java/org/stagemonitor/configuration/ConfigurationRegistry.java"}, "focal_method": {"identifier": "validateConfigurationOption", "parameters": "(String key, String value)", "modifiers": "private", "return": "ConfigurationOption<?>", "body": "private ConfigurationOption<?> validateConfigurationOption(String key, String value) throws IllegalArgumentException {\n\t\tfinal ConfigurationOption configurationOption = getConfigurationOptionByKey(key);\n\t\tif (configurationOption != null) {\n\t\t\tconfigurationOption.assertValid(value);\n\t\t\treturn configurationOption;\n\t\t} else {\n\t\t\tthrow new IllegalArgumentException(\"Config key '\" + key + \"' does not exist.\");\n\t\t}\n\t}", "signature": "ConfigurationOption<?> validateConfigurationOption(String key, String value)", "full_signature": "private ConfigurationOption<?> validateConfigurationOption(String key, String value)", "class_method_signature": "ConfigurationRegistry.validateConfigurationOption(String key, String value)", "testcase": false, "constructor": false, "invocations": ["getConfigurationOptionByKey", "assertValid"]}, "repository": {"repo_id": 11845993, "url": "https://github.com/stagemonitor/stagemonitor", "language": "Java", "is_fork": false, "fork_count": 268, "stargazer_count": 1585, "size": 10342, "license": "licensed"}}