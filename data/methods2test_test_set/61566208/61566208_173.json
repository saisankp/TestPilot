{"test_class": {"identifier": "PowerUpServerTaskTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/hms-core/src/test/java/com/vmware/vrack/hms/task/oob/ipmi/PowerUpServerTaskTest.java"}, "test_case": {"identifier": "testExecutePowerUpTaskForNonDiscverableNodeWrongOSCreds", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecutePowerUpTaskForNonDiscverableNodeWrongOSCreds() throws Exception {\n        System.out.println(\"[TS]: testExecutePowerUpTaskForNonDiscverableNodeWrongOSCreds\");\n//        IpmiTaskConnector ITConnector=new IpmiTaskConnector(\"10.28.197.204\",\"ADMIN\",\"ADMIN\");\n//        ITConnector.createConnection();\n        TaskResponse TR = new TaskResponse(new ServerNode(\"4\",\"10.28.197.204\",\"ADMIN\",\"ADMIN\"));\n        PowerUpServerTask PUSTask = new PowerUpServerTask(TR);\n        PUSTask.executeTask();\n        //TR.getNode().refreshNodeStatus();\n        System.out.println(\"[TS]: Expected Result : Server Node is Powered = false , Actual Result : Server Node is Powered = \"+TR.getNode().isPowered());\n        assertFalse(TR.getNode().isPowered());\n    }", "signature": "void testExecutePowerUpTaskForNonDiscverableNodeWrongOSCreds()", "full_signature": "@Test public void testExecutePowerUpTaskForNonDiscverableNodeWrongOSCreds()", "class_method_signature": "PowerUpServerTaskTest.testExecutePowerUpTaskForNonDiscverableNodeWrongOSCreds()", "testcase": true, "constructor": false, "invocations": ["println", "executeTask", "println", "isPowered", "getNode", "assertFalse", "isPowered", "getNode"]}, "focal_class": {"identifier": "PowerUpServerTask", "superclass": "extends IpmiTask", "interfaces": "", "fields": [{"original_string": "private static Logger logger = Logger.getLogger( PowerUpServerTask.class );", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger( PowerUpServerTask.class )", "var_name": "logger"}, {"original_string": "public ServerNode node;", "modifier": "public", "type": "ServerNode", "declarator": "node", "var_name": "node"}, {"original_string": "public TaskResponse response;", "modifier": "public", "type": "TaskResponse", "declarator": "response", "var_name": "response"}], "methods": [{"identifier": "PowerUpServerTask", "parameters": "( TaskResponse response )", "modifiers": "public", "return": "", "signature": " PowerUpServerTask( TaskResponse response )", "full_signature": "public  PowerUpServerTask( TaskResponse response )", "class_method_signature": "PowerUpServerTask.PowerUpServerTask( TaskResponse response )", "testcase": false, "constructor": true}, {"identifier": "executeTask", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void executeTask()", "full_signature": "@Override public void executeTask()", "class_method_signature": "PowerUpServerTask.executeTask()", "testcase": false, "constructor": false}, {"identifier": "getTaskOutput", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTaskOutput()", "full_signature": "public String getTaskOutput()", "class_method_signature": "PowerUpServerTask.getTaskOutput()", "testcase": false, "constructor": false}], "file": "modules/hms-core/src/main/java/com/vmware/vrack/hms/task/oob/ipmi/PowerUpServerTask.java"}, "focal_method": {"identifier": "executeTask", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void executeTask()\n        throws Exception\n    {\n        try\n        {\n            ServiceServerNode serviceServerNode = (ServiceServerNode) node.getServiceObject();\n            IBoardService boardService = BoardServiceProvider.getBoardService( serviceServerNode );\n            if ( boardService != null )\n            {\n                // Object[] paramsArray = new Object[] { serviceServerNode,\n                // PowerOperationAction.POWERUP };\n                boolean status = boardService.powerOperations( serviceServerNode, PowerOperationAction.POWERUP );\n                // boolean status =\n                // HmsPluginServiceCallWrapper.invokeHmsPluginService(boardService,\n                // serviceServerNode, \"powerOperations\", paramsArray);\n            }\n            else\n            {\n                throw new Exception( \"Board Service is NULL for node: \" + node.getNodeID() );\n            }\n\n        }\n        catch ( HmsResourceBusyException e )\n        {\n            String error =\n                String.format( \"HMS Resource is Busy for the node [%s]. Please try after some time\", node.getNodeID() );\n            logger.debug( error, e );\n            throw e;\n        }\n        catch ( Exception e )\n        {\n            throw new HmsException( \"Error while triggering Power Up Server for Node: \" + node.getNodeID(), e );\n        }\n    }", "signature": "void executeTask()", "full_signature": "@Override public void executeTask()", "class_method_signature": "PowerUpServerTask.executeTask()", "testcase": false, "constructor": false, "invocations": ["getServiceObject", "getBoardService", "powerOperations", "getNodeID", "format", "getNodeID", "debug", "getNodeID"]}, "repository": {"repo_id": 61566208, "url": "https://github.com/vmware-archive/OHMS", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 16092, "license": "licensed"}}