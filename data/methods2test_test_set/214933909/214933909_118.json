{"test_class": {"identifier": "ServerConfigServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ServerConfigService serverConfigService;", "modifier": "@Mock\n    private", "type": "ServerConfigService", "declarator": "serverConfigService", "var_name": "serverConfigService"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/service/ServerConfigServiceTest.java"}, "test_case": {"identifier": "findServerAppConfigPageListTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void findServerAppConfigPageListTest() throws SQLException {\n        Paging<ServerConfig> paging = new Paging<>();\n        paging.setData(new ServerConfig());\n        Assert.assertTrue(serverConfigService.findServerAppConfigPageList(paging).getList().size() > 0);\n    }", "signature": "void findServerAppConfigPageListTest()", "full_signature": "@Test public void findServerAppConfigPageListTest()", "class_method_signature": "ServerConfigServiceTest.findServerAppConfigPageListTest()", "testcase": true, "constructor": false, "invocations": ["setData", "assertTrue", "size", "getList", "findServerAppConfigPageList"]}, "focal_class": {"identifier": "ServerConfigService", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    private Message message;", "modifier": "@Autowired\n    private", "type": "Message", "declarator": "message", "var_name": "message"}, {"original_string": "@Autowired\n    private ServerConfigDao serverAppConfigDao;", "modifier": "@Autowired\n    private", "type": "ServerConfigDao", "declarator": "serverAppConfigDao", "var_name": "serverAppConfigDao"}, {"original_string": "@Autowired\n    private PermissionService permissionService;", "modifier": "@Autowired\n    private", "type": "PermissionService", "declarator": "permissionService", "var_name": "permissionService"}], "methods": [{"identifier": "validatePermision", "parameters": "(LoginUser user, Errors errors)", "modifiers": "public", "return": "ValidatorChain", "signature": "ValidatorChain validatePermision(LoginUser user, Errors errors)", "full_signature": "public ValidatorChain validatePermision(LoginUser user, Errors errors)", "class_method_signature": "ServerConfigService.validatePermision(LoginUser user, Errors errors)", "testcase": false, "constructor": false}, {"identifier": "findServerAppConfigPageList", "parameters": "(Paging<ServerConfig> paging)", "modifiers": "public", "return": "ListResult<ServerConfig>", "signature": "ListResult<ServerConfig> findServerAppConfigPageList(Paging<ServerConfig> paging)", "full_signature": "public ListResult<ServerConfig> findServerAppConfigPageList(Paging<ServerConfig> paging)", "class_method_signature": "ServerConfigService.findServerAppConfigPageList(Paging<ServerConfig> paging)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/service/ServerConfigService.java"}, "focal_method": {"identifier": "findServerAppConfigPageList", "parameters": "(Paging<ServerConfig> paging)", "modifiers": "public", "return": "ListResult<ServerConfig>", "body": "public ListResult<ServerConfig> findServerAppConfigPageList(Paging<ServerConfig> paging) throws SQLException {\n        Long count = serverAppConfigDao.getServerAppConfigTotalCount(paging);\n        return PagerUtil.find(count, paging.getPage(), paging.getPageSize(), () -> {\n            List<ServerConfig> list = serverAppConfigDao.findServerAppConfigPageList(paging);\n            if (CollectionUtils.isEmpty(list)) {\n                return Collections.emptyList();\n            }\n            return list;\n        });\n    }", "signature": "ListResult<ServerConfig> findServerAppConfigPageList(Paging<ServerConfig> paging)", "full_signature": "public ListResult<ServerConfig> findServerAppConfigPageList(Paging<ServerConfig> paging)", "class_method_signature": "ServerConfigService.findServerAppConfigPageList(Paging<ServerConfig> paging)", "testcase": false, "constructor": false, "invocations": ["getServerAppConfigTotalCount", "find", "getPage", "getPageSize", "findServerAppConfigPageList", "isEmpty", "emptyList"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}