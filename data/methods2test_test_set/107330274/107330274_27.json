{"test_class": {"identifier": "SpringProxyInvocationHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final MockEnvironment environment = new MockEnvironment();", "modifier": "private final", "type": "MockEnvironment", "declarator": "environment = new MockEnvironment()", "var_name": "environment"}, {"original_string": "private SomeConfiguration configuration;", "modifier": "private", "type": "SomeConfiguration", "declarator": "configuration", "var_name": "configuration"}], "file": "titus-common/src/test/java/com/netflix/titus/common/util/archaius2/SpringProxyInvocationHandlerTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToString() {\n        String[] expectedParts = {\"float=4.5\", \"boolean=true\", \"double=3.3\", \"intWithNoDefault=11\", \"list=[a, b, c]\", \"set=[d, e, f]\", \"int=1\", \"long=2\"};\n        String actual = configuration.toString();\n        for (String part : expectedParts) {\n            assertThat(actual).contains(part);\n        }\n    }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "SpringProxyInvocationHandlerTest.testToString()", "testcase": true, "constructor": false, "invocations": ["toString", "contains", "assertThat"]}, "focal_class": {"identifier": "SpringProxyInvocationHandler", "superclass": "", "interfaces": "implements InvocationHandler", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(SpringProxyInvocationHandler.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(SpringProxyInvocationHandler.class)", "var_name": "logger"}, {"original_string": "private final Class<?> apiInterface;", "modifier": "private final", "type": "Class<?>", "declarator": "apiInterface", "var_name": "apiInterface"}, {"original_string": "private final String prefix;", "modifier": "private final", "type": "String", "declarator": "prefix", "var_name": "prefix"}, {"original_string": "private final Environment environment;", "modifier": "private final", "type": "Environment", "declarator": "environment", "var_name": "environment"}, {"original_string": "private final Map<Method, MethodHandler> methodWrappers;", "modifier": "private final", "type": "Map<Method, MethodHandler>", "declarator": "methodWrappers", "var_name": "methodWrappers"}], "methods": [{"identifier": "SpringProxyInvocationHandler", "parameters": "(Class<?> apiInterface, String prefix, Environment environment)", "modifiers": "", "return": "", "signature": " SpringProxyInvocationHandler(Class<?> apiInterface, String prefix, Environment environment)", "full_signature": "  SpringProxyInvocationHandler(Class<?> apiInterface, String prefix, Environment environment)", "class_method_signature": "SpringProxyInvocationHandler.SpringProxyInvocationHandler(Class<?> apiInterface, String prefix, Environment environment)", "testcase": false, "constructor": true}, {"identifier": "invoke", "parameters": "(Object proxy, Method method, Object[] args)", "modifiers": "@Override public", "return": "Object", "signature": "Object invoke(Object proxy, Method method, Object[] args)", "full_signature": "@Override public Object invoke(Object proxy, Method method, Object[] args)", "class_method_signature": "SpringProxyInvocationHandler.invoke(Object proxy, Method method, Object[] args)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SpringProxyInvocationHandler.toString()", "testcase": false, "constructor": false}, {"identifier": "newProxy", "parameters": "(Class<I> apiInterface, String prefix, Environment environment)", "modifiers": "static", "return": "I", "signature": "I newProxy(Class<I> apiInterface, String prefix, Environment environment)", "full_signature": "static I newProxy(Class<I> apiInterface, String prefix, Environment environment)", "class_method_signature": "SpringProxyInvocationHandler.newProxy(Class<I> apiInterface, String prefix, Environment environment)", "testcase": false, "constructor": false}], "file": "titus-common/src/main/java/com/netflix/titus/common/util/archaius2/SpringProxyInvocationHandler.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        StringBuilder builder = new StringBuilder(apiInterface.getSimpleName()).append('{');\n\n        methodWrappers.forEach((method, handler) -> {\n            if (handler instanceof PropertyMethodHandler) {\n                builder.append(handler).append(\", \");\n            }\n        });\n        builder.setLength(builder.length() - 2);\n        builder.append('}');\n\n        return builder.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "SpringProxyInvocationHandler.toString()", "testcase": false, "constructor": false, "invocations": ["append", "getSimpleName", "forEach", "append", "append", "setLength", "length", "append", "toString"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}