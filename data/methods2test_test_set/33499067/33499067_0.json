{"test_class": {"identifier": "BeanTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Context mockContext;", "modifier": "", "type": "Context", "declarator": "mockContext", "var_name": "mockContext"}, {"original_string": "BluetoothDevice mockDevice;", "modifier": "", "type": "BluetoothDevice", "declarator": "mockDevice", "var_name": "mockDevice"}, {"original_string": "Handler mockHandler;", "modifier": "", "type": "Handler", "declarator": "mockHandler", "var_name": "mockHandler"}, {"original_string": "GattClient mockGattClient;", "modifier": "", "type": "GattClient", "declarator": "mockGattClient", "var_name": "mockGattClient"}, {"original_string": "GattSerialTransportProfile mockGattSerialTransportProfile;", "modifier": "", "type": "GattSerialTransportProfile", "declarator": "mockGattSerialTransportProfile", "var_name": "mockGattSerialTransportProfile"}, {"original_string": "DeviceProfile mockDeviceProfile;", "modifier": "", "type": "DeviceProfile", "declarator": "mockDeviceProfile", "var_name": "mockDeviceProfile"}, {"original_string": "GattClient.ConnectionListener testListener;", "modifier": "", "type": "GattClient.ConnectionListener", "declarator": "testListener", "var_name": "testListener"}, {"original_string": "List<Runnable> handlerRunnables = new ArrayList<>();", "modifier": "", "type": "List<Runnable>", "declarator": "handlerRunnables = new ArrayList<>()", "var_name": "handlerRunnables"}, {"original_string": "DeviceProfile.VersionCallback fwVersionCallback;", "modifier": "", "type": "DeviceProfile.VersionCallback", "declarator": "fwVersionCallback", "var_name": "fwVersionCallback"}, {"original_string": "DeviceProfile.VersionCallback hwVersionCallback;", "modifier": "", "type": "DeviceProfile.VersionCallback", "declarator": "hwVersionCallback", "var_name": "hwVersionCallback"}, {"original_string": "Bean bean;", "modifier": "", "type": "Bean", "declarator": "bean", "var_name": "bean"}], "file": "sdk/src/test/java/com/punchthrough/bean/sdk/BeanTest.java"}, "test_case": {"identifier": "testBeanConnection", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBeanConnection() {\n        BeanListener mockListener = mock(BeanListener.class);\n        bean.connect(mockContext, mockListener);\n        testListener.onConnected();\n        for (Runnable r : handlerRunnables) {\n            r.run();\n        }\n        verify(mockListener).onConnected();\n    }", "signature": "void testBeanConnection()", "full_signature": "@Test public void testBeanConnection()", "class_method_signature": "BeanTest.testBeanConnection()", "testcase": true, "constructor": false, "invocations": ["mock", "connect", "onConnected", "run", "onConnected", "verify"]}, "focal_class": {"identifier": "Bean", "superclass": "", "interfaces": "implements Parcelable", "fields": [{"original_string": "public static final Creator<Bean> CREATOR = new Creator<Bean>() {\n\n        @Override\n        public Bean createFromParcel(Parcel source) {\n            Log.i(TAG, \"Creating Bean from Parcel!\");\n\n            // ugly cast to fix bogus warning in Android Studio...\n            BluetoothDevice device = source.readParcelable(((Object) this).getClass().getClassLoader());\n            if (device == null) {\n                throw new IllegalStateException(\"Device is null\");\n            }\n            return new Bean(device);\n        }\n\n        @Override\n        public Bean[] newArray(int size) {\n            return new Bean[size];\n        }\n    };", "modifier": "public static final", "type": "Creator<Bean>", "declarator": "CREATOR = new Creator<Bean>() {\n\n        @Override\n        public Bean createFromParcel(Parcel source) {\n            Log.i(TAG, \"Creating Bean from Parcel!\");\n\n            // ugly cast to fix bogus warning in Android Studio...\n            BluetoothDevice device = source.readParcelable(((Object) this).getClass().getClassLoader());\n            if (device == null) {\n                throw new IllegalStateException(\"Device is null\");\n            }\n            return new Bean(device);\n        }\n\n        @Override\n        public Bean[] newArray(int size) {\n            return new Bean[size];\n        }\n    }", "var_name": "CREATOR"}, {"original_string": "private static final String TAG = \"BeanSDK\";", "modifier": "private static final", "type": "String", "declarator": "TAG = \"BeanSDK\"", "var_name": "TAG"}, {"original_string": "private BeanListener internalBeanListener = new BeanListener() {\n        @Override\n        public void onConnected() {\n            Log.w(TAG, \"onConnected after disconnect from device \" + getDevice().getAddress());\n        }\n\n        @Override\n        public void onConnectionFailed() {\n            Log.w(TAG, \"onConnectionFailed after disconnect from device \" +\n                    getDevice().getAddress());\n        }\n\n        @Override\n        public void onDisconnected() {}\n\n        @Override\n        public void onSerialMessageReceived(byte[] data) {}\n\n        @Override\n        public void onScratchValueChanged(ScratchBank bank, byte[] value) {}\n\n        @Override\n        public void onError(BeanError error) {\n            Log.e(TAG, \"Bean returned error: \" + error);\n        }\n\n        @Override\n        public void onReadRemoteRssi(final int rssi) {}\n    };", "modifier": "private", "type": "BeanListener", "declarator": "internalBeanListener = new BeanListener() {\n        @Override\n        public void onConnected() {\n            Log.w(TAG, \"onConnected after disconnect from device \" + getDevice().getAddress());\n        }\n\n        @Override\n        public void onConnectionFailed() {\n            Log.w(TAG, \"onConnectionFailed after disconnect from device \" +\n                    getDevice().getAddress());\n        }\n\n        @Override\n        public void onDisconnected() {}\n\n        @Override\n        public void onSerialMessageReceived(byte[] data) {}\n\n        @Override\n        public void onScratchValueChanged(ScratchBank bank, byte[] value) {}\n\n        @Override\n        public void onError(BeanError error) {\n            Log.e(TAG, \"Bean returned error: \" + error);\n        }\n\n        @Override\n        public void onReadRemoteRssi(final int rssi) {}\n    }", "var_name": "internalBeanListener"}, {"original_string": "private BeanListener beanListener = internalBeanListener;", "modifier": "private", "type": "BeanListener", "declarator": "beanListener = internalBeanListener", "var_name": "beanListener"}, {"original_string": "private final GattClient gattClient;", "modifier": "private final", "type": "GattClient", "declarator": "gattClient", "var_name": "gattClient"}, {"original_string": "private final BluetoothDevice device;", "modifier": "private final", "type": "BluetoothDevice", "declarator": "device", "var_name": "device"}, {"original_string": "private final Handler handler;", "modifier": "private final", "type": "Handler", "declarator": "handler", "var_name": "handler"}, {"original_string": "private Context lastKnownContext;", "modifier": "private", "type": "Context", "declarator": "lastKnownContext", "var_name": "lastKnownContext"}, {"original_string": "private HashMap<BeanMessageID, List<Callback<?>>> beanCallbacks = new HashMap<>(16);", "modifier": "private", "type": "HashMap<BeanMessageID, List<Callback<?>>>", "declarator": "beanCallbacks = new HashMap<>(16)", "var_name": "beanCallbacks"}, {"original_string": "private static final int SKETCH_UPLOAD_STATE_TIMEOUT = 3000;", "modifier": "private static final", "type": "int", "declarator": "SKETCH_UPLOAD_STATE_TIMEOUT = 3000", "var_name": "SKETCH_UPLOAD_STATE_TIMEOUT"}, {"original_string": "private static final int SKETCH_BLOCK_SEND_INTERVAL = 200;", "modifier": "private static final", "type": "int", "declarator": "SKETCH_BLOCK_SEND_INTERVAL = 200", "var_name": "SKETCH_BLOCK_SEND_INTERVAL"}, {"original_string": "private static final int MAX_BLOCK_SIZE_BYTES = 64;", "modifier": "private static final", "type": "int", "declarator": "MAX_BLOCK_SIZE_BYTES = 64", "var_name": "MAX_BLOCK_SIZE_BYTES"}, {"original_string": "private SketchUploadState sketchUploadState = SketchUploadState.INACTIVE;", "modifier": "private", "type": "SketchUploadState", "declarator": "sketchUploadState = SketchUploadState.INACTIVE", "var_name": "sketchUploadState"}, {"original_string": "private Timer sketchStateTimeout;", "modifier": "private", "type": "Timer", "declarator": "sketchStateTimeout", "var_name": "sketchStateTimeout"}, {"original_string": "private Timer sketchBlockSendTimeout;", "modifier": "private", "type": "Timer", "declarator": "sketchBlockSendTimeout", "var_name": "sketchBlockSendTimeout"}, {"original_string": "private List<byte[]> sketchBlocksToSend;", "modifier": "private", "type": "List<byte[]>", "declarator": "sketchBlocksToSend", "var_name": "sketchBlocksToSend"}, {"original_string": "private int currSketchBlockNum;", "modifier": "private", "type": "int", "declarator": "currSketchBlockNum", "var_name": "currSketchBlockNum"}, {"original_string": "private Callback<UploadProgress> onSketchUploadProgress;", "modifier": "private", "type": "Callback<UploadProgress>", "declarator": "onSketchUploadProgress", "var_name": "onSketchUploadProgress"}, {"original_string": "private Runnable onSketchUploadComplete;", "modifier": "private", "type": "Runnable", "declarator": "onSketchUploadComplete", "var_name": "onSketchUploadComplete"}], "methods": [{"identifier": "Bean", "parameters": "(BluetoothDevice device)", "modifiers": "public", "return": "", "signature": " Bean(BluetoothDevice device)", "full_signature": "public  Bean(BluetoothDevice device)", "class_method_signature": "Bean.Bean(BluetoothDevice device)", "testcase": false, "constructor": true}, {"identifier": "Bean", "parameters": "(BluetoothDevice device, GattClient client, final Handler handler)", "modifiers": "public", "return": "", "signature": " Bean(BluetoothDevice device, GattClient client, final Handler handler)", "full_signature": "public  Bean(BluetoothDevice device, GattClient client, final Handler handler)", "class_method_signature": "Bean.Bean(BluetoothDevice device, GattClient client, final Handler handler)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void init()", "full_signature": "private void init()", "class_method_signature": "Bean.init()", "testcase": false, "constructor": false}, {"identifier": "handleMessage", "parameters": "(byte[] data)", "modifiers": "private", "return": "void", "signature": "void handleMessage(byte[] data)", "full_signature": "private void handleMessage(byte[] data)", "class_method_signature": "Bean.handleMessage(byte[] data)", "testcase": false, "constructor": false}, {"identifier": "handleStatus", "parameters": "(Status status)", "modifiers": "private", "return": "void", "signature": "void handleStatus(Status status)", "full_signature": "private void handleStatus(Status status)", "class_method_signature": "Bean.handleStatus(Status status)", "testcase": false, "constructor": false}, {"identifier": "stopSketchStateTimeout", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void stopSketchStateTimeout()", "full_signature": "private void stopSketchStateTimeout()", "class_method_signature": "Bean.stopSketchStateTimeout()", "testcase": false, "constructor": false}, {"identifier": "stopSketchBlockSendTimeout", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void stopSketchBlockSendTimeout()", "full_signature": "private void stopSketchBlockSendTimeout()", "class_method_signature": "Bean.stopSketchBlockSendTimeout()", "testcase": false, "constructor": false}, {"identifier": "resetSketchStateTimeout", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void resetSketchStateTimeout()", "full_signature": "private void resetSketchStateTimeout()", "class_method_signature": "Bean.resetSketchStateTimeout()", "testcase": false, "constructor": false}, {"identifier": "resetSketchBlockSendTimeout", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void resetSketchBlockSendTimeout()", "full_signature": "private void resetSketchBlockSendTimeout()", "class_method_signature": "Bean.resetSketchBlockSendTimeout()", "testcase": false, "constructor": false}, {"identifier": "sendNextSketchBlock", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void sendNextSketchBlock()", "full_signature": "private void sendNextSketchBlock()", "class_method_signature": "Bean.sendNextSketchBlock()", "testcase": false, "constructor": false}, {"identifier": "resetSketchUploadState", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void resetSketchUploadState()", "full_signature": "private void resetSketchUploadState()", "class_method_signature": "Bean.resetSketchUploadState()", "testcase": false, "constructor": false}, {"identifier": "returnArduinoPowerState", "parameters": "(Buffer buffer)", "modifiers": "private", "return": "void", "signature": "void returnArduinoPowerState(Buffer buffer)", "full_signature": "private void returnArduinoPowerState(Buffer buffer)", "class_method_signature": "Bean.returnArduinoPowerState(Buffer buffer)", "testcase": false, "constructor": false}, {"identifier": "returnAccelerometerRange", "parameters": "(Buffer buffer)", "modifiers": "private", "return": "void", "signature": "void returnAccelerometerRange(Buffer buffer)", "full_signature": "private void returnAccelerometerRange(Buffer buffer)", "class_method_signature": "Bean.returnAccelerometerRange(Buffer buffer)", "testcase": false, "constructor": false}, {"identifier": "returnAcceleration", "parameters": "(Buffer buffer)", "modifiers": "private", "return": "void", "signature": "void returnAcceleration(Buffer buffer)", "full_signature": "private void returnAcceleration(Buffer buffer)", "class_method_signature": "Bean.returnAcceleration(Buffer buffer)", "testcase": false, "constructor": false}, {"identifier": "returnLed", "parameters": "(Buffer buffer)", "modifiers": "private", "return": "void", "signature": "void returnLed(Buffer buffer)", "full_signature": "private void returnLed(Buffer buffer)", "class_method_signature": "Bean.returnLed(Buffer buffer)", "testcase": false, "constructor": false}, {"identifier": "returnScratchData", "parameters": "(Buffer buffer)", "modifiers": "private", "return": "void", "signature": "void returnScratchData(Buffer buffer)", "full_signature": "private void returnScratchData(Buffer buffer)", "class_method_signature": "Bean.returnScratchData(Buffer buffer)", "testcase": false, "constructor": false}, {"identifier": "returnMetadata", "parameters": "(Buffer buffer)", "modifiers": "private", "return": "void", "signature": "void returnMetadata(Buffer buffer)", "full_signature": "private void returnMetadata(Buffer buffer)", "class_method_signature": "Bean.returnMetadata(Buffer buffer)", "testcase": false, "constructor": false}, {"identifier": "returnTemperature", "parameters": "(Buffer buffer)", "modifiers": "private", "return": "void", "signature": "void returnTemperature(Buffer buffer)", "full_signature": "private void returnTemperature(Buffer buffer)", "class_method_signature": "Bean.returnTemperature(Buffer buffer)", "testcase": false, "constructor": false}, {"identifier": "returnConfig", "parameters": "(Buffer buffer)", "modifiers": "private", "return": "void", "signature": "void returnConfig(Buffer buffer)", "full_signature": "private void returnConfig(Buffer buffer)", "class_method_signature": "Bean.returnConfig(Buffer buffer)", "testcase": false, "constructor": false}, {"identifier": "returnError", "parameters": "(BeanError error)", "modifiers": "private", "return": "void", "signature": "void returnError(BeanError error)", "full_signature": "private void returnError(BeanError error)", "class_method_signature": "Bean.returnError(BeanError error)", "testcase": false, "constructor": false}, {"identifier": "returnUploadError", "parameters": "(BeanError error)", "modifiers": "private", "return": "void", "signature": "void returnUploadError(BeanError error)", "full_signature": "private void returnUploadError(BeanError error)", "class_method_signature": "Bean.returnUploadError(BeanError error)", "testcase": false, "constructor": false}, {"identifier": "addCallback", "parameters": "(BeanMessageID type, Callback<?> callback)", "modifiers": "private", "return": "void", "signature": "void addCallback(BeanMessageID type, Callback<?> callback)", "full_signature": "private void addCallback(BeanMessageID type, Callback<?> callback)", "class_method_signature": "Bean.addCallback(BeanMessageID type, Callback<?> callback)", "testcase": false, "constructor": false}, {"identifier": "getFirstCallback", "parameters": "(BeanMessageID type)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "Callback<T>", "signature": "Callback<T> getFirstCallback(BeanMessageID type)", "full_signature": "@SuppressWarnings(\"unchecked\") private Callback<T> getFirstCallback(BeanMessageID type)", "class_method_signature": "Bean.getFirstCallback(BeanMessageID type)", "testcase": false, "constructor": false}, {"identifier": "sendMessage", "parameters": "(BeanMessageID type, Message message)", "modifiers": "private", "return": "void", "signature": "void sendMessage(BeanMessageID type, Message message)", "full_signature": "private void sendMessage(BeanMessageID type, Message message)", "class_method_signature": "Bean.sendMessage(BeanMessageID type, Message message)", "testcase": false, "constructor": false}, {"identifier": "sendMessage", "parameters": "(BeanMessageID type, Buffer payload)", "modifiers": "private", "return": "void", "signature": "void sendMessage(BeanMessageID type, Buffer payload)", "full_signature": "private void sendMessage(BeanMessageID type, Buffer payload)", "class_method_signature": "Bean.sendMessage(BeanMessageID type, Buffer payload)", "testcase": false, "constructor": false}, {"identifier": "sendMessageWithoutPayload", "parameters": "(BeanMessageID type)", "modifiers": "private", "return": "void", "signature": "void sendMessageWithoutPayload(BeanMessageID type)", "full_signature": "private void sendMessageWithoutPayload(BeanMessageID type)", "class_method_signature": "Bean.sendMessageWithoutPayload(BeanMessageID type)", "testcase": false, "constructor": false}, {"identifier": "describe", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String describe()", "full_signature": "public String describe()", "class_method_signature": "Bean.describe()", "testcase": false, "constructor": false}, {"identifier": "isConnected", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isConnected()", "full_signature": "public boolean isConnected()", "class_method_signature": "Bean.isConnected()", "testcase": false, "constructor": false}, {"identifier": "getLastKnownContext", "parameters": "()", "modifiers": "public", "return": "Context", "signature": "Context getLastKnownContext()", "full_signature": "public Context getLastKnownContext()", "class_method_signature": "Bean.getLastKnownContext()", "testcase": false, "constructor": false}, {"identifier": "getBeanListener", "parameters": "()", "modifiers": "public", "return": "BeanListener", "signature": "BeanListener getBeanListener()", "full_signature": "public BeanListener getBeanListener()", "class_method_signature": "Bean.getBeanListener()", "testcase": false, "constructor": false}, {"identifier": "connect", "parameters": "(Context context, BeanListener listener)", "modifiers": "public", "return": "void", "signature": "void connect(Context context, BeanListener listener)", "full_signature": "public void connect(Context context, BeanListener listener)", "class_method_signature": "Bean.connect(Context context, BeanListener listener)", "testcase": false, "constructor": false}, {"identifier": "disconnect", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void disconnect()", "full_signature": "public void disconnect()", "class_method_signature": "Bean.disconnect()", "testcase": false, "constructor": false}, {"identifier": "getDevice", "parameters": "()", "modifiers": "public", "return": "BluetoothDevice", "signature": "BluetoothDevice getDevice()", "full_signature": "public BluetoothDevice getDevice()", "class_method_signature": "Bean.getDevice()", "testcase": false, "constructor": false}, {"identifier": "readRemoteRssi", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void readRemoteRssi()", "full_signature": "public void readRemoteRssi()", "class_method_signature": "Bean.readRemoteRssi()", "testcase": false, "constructor": false}, {"identifier": "readRadioConfig", "parameters": "(Callback<RadioConfig> callback)", "modifiers": "public", "return": "void", "signature": "void readRadioConfig(Callback<RadioConfig> callback)", "full_signature": "public void readRadioConfig(Callback<RadioConfig> callback)", "class_method_signature": "Bean.readRadioConfig(Callback<RadioConfig> callback)", "testcase": false, "constructor": false}, {"identifier": "setLed", "parameters": "(LedColor color)", "modifiers": "public", "return": "void", "signature": "void setLed(LedColor color)", "full_signature": "public void setLed(LedColor color)", "class_method_signature": "Bean.setLed(LedColor color)", "testcase": false, "constructor": false}, {"identifier": "readLed", "parameters": "(Callback<LedColor> callback)", "modifiers": "public", "return": "void", "signature": "void readLed(Callback<LedColor> callback)", "full_signature": "public void readLed(Callback<LedColor> callback)", "class_method_signature": "Bean.readLed(Callback<LedColor> callback)", "testcase": false, "constructor": false}, {"identifier": "setAdvertising", "parameters": "(boolean enable)", "modifiers": "public", "return": "void", "signature": "void setAdvertising(boolean enable)", "full_signature": "public void setAdvertising(boolean enable)", "class_method_signature": "Bean.setAdvertising(boolean enable)", "testcase": false, "constructor": false}, {"identifier": "readTemperature", "parameters": "(Callback<Integer> callback)", "modifiers": "public", "return": "void", "signature": "void readTemperature(Callback<Integer> callback)", "full_signature": "public void readTemperature(Callback<Integer> callback)", "class_method_signature": "Bean.readTemperature(Callback<Integer> callback)", "testcase": false, "constructor": false}, {"identifier": "readAcceleration", "parameters": "(Callback<Acceleration> callback)", "modifiers": "public", "return": "void", "signature": "void readAcceleration(Callback<Acceleration> callback)", "full_signature": "public void readAcceleration(Callback<Acceleration> callback)", "class_method_signature": "Bean.readAcceleration(Callback<Acceleration> callback)", "testcase": false, "constructor": false}, {"identifier": "readSketchMetadata", "parameters": "(Callback<SketchMetadata> callback)", "modifiers": "public", "return": "void", "signature": "void readSketchMetadata(Callback<SketchMetadata> callback)", "full_signature": "public void readSketchMetadata(Callback<SketchMetadata> callback)", "class_method_signature": "Bean.readSketchMetadata(Callback<SketchMetadata> callback)", "testcase": false, "constructor": false}, {"identifier": "readScratchData", "parameters": "(ScratchBank bank, Callback<ScratchData> callback)", "modifiers": "public", "return": "void", "signature": "void readScratchData(ScratchBank bank, Callback<ScratchData> callback)", "full_signature": "public void readScratchData(ScratchBank bank, Callback<ScratchData> callback)", "class_method_signature": "Bean.readScratchData(ScratchBank bank, Callback<ScratchData> callback)", "testcase": false, "constructor": false}, {"identifier": "setAccelerometerRange", "parameters": "(AccelerometerRange range)", "modifiers": "public", "return": "void", "signature": "void setAccelerometerRange(AccelerometerRange range)", "full_signature": "public void setAccelerometerRange(AccelerometerRange range)", "class_method_signature": "Bean.setAccelerometerRange(AccelerometerRange range)", "testcase": false, "constructor": false}, {"identifier": "readAccelerometerRange", "parameters": "(Callback<AccelerometerRange> callback)", "modifiers": "public", "return": "void", "signature": "void readAccelerometerRange(Callback<AccelerometerRange> callback)", "full_signature": "public void readAccelerometerRange(Callback<AccelerometerRange> callback)", "class_method_signature": "Bean.readAccelerometerRange(Callback<AccelerometerRange> callback)", "testcase": false, "constructor": false}, {"identifier": "setScratchData", "parameters": "(ScratchBank bank, byte[] data)", "modifiers": "public", "return": "void", "signature": "void setScratchData(ScratchBank bank, byte[] data)", "full_signature": "public void setScratchData(ScratchBank bank, byte[] data)", "class_method_signature": "Bean.setScratchData(ScratchBank bank, byte[] data)", "testcase": false, "constructor": false}, {"identifier": "setScratchData", "parameters": "(ScratchBank bank, String data)", "modifiers": "public", "return": "void", "signature": "void setScratchData(ScratchBank bank, String data)", "full_signature": "public void setScratchData(ScratchBank bank, String data)", "class_method_signature": "Bean.setScratchData(ScratchBank bank, String data)", "testcase": false, "constructor": false}, {"identifier": "setRadioConfig", "parameters": "(RadioConfig config)", "modifiers": "public", "return": "void", "signature": "void setRadioConfig(RadioConfig config)", "full_signature": "public void setRadioConfig(RadioConfig config)", "class_method_signature": "Bean.setRadioConfig(RadioConfig config)", "testcase": false, "constructor": false}, {"identifier": "setRadioConfig", "parameters": "(RadioConfig config, boolean save)", "modifiers": "public", "return": "void", "signature": "void setRadioConfig(RadioConfig config, boolean save)", "full_signature": "public void setRadioConfig(RadioConfig config, boolean save)", "class_method_signature": "Bean.setRadioConfig(RadioConfig config, boolean save)", "testcase": false, "constructor": false}, {"identifier": "sendSerialMessage", "parameters": "(byte[] value)", "modifiers": "public", "return": "void", "signature": "void sendSerialMessage(byte[] value)", "full_signature": "public void sendSerialMessage(byte[] value)", "class_method_signature": "Bean.sendSerialMessage(byte[] value)", "testcase": false, "constructor": false}, {"identifier": "setPin", "parameters": "(int pin, boolean active)", "modifiers": "public", "return": "void", "signature": "void setPin(int pin, boolean active)", "full_signature": "public void setPin(int pin, boolean active)", "class_method_signature": "Bean.setPin(int pin, boolean active)", "testcase": false, "constructor": false}, {"identifier": "sendSerialMessage", "parameters": "(String value)", "modifiers": "public", "return": "void", "signature": "void sendSerialMessage(String value)", "full_signature": "public void sendSerialMessage(String value)", "class_method_signature": "Bean.sendSerialMessage(String value)", "testcase": false, "constructor": false}, {"identifier": "readDeviceInfo", "parameters": "(final Callback<DeviceInfo> callback)", "modifiers": "public", "return": "void", "signature": "void readDeviceInfo(final Callback<DeviceInfo> callback)", "full_signature": "public void readDeviceInfo(final Callback<DeviceInfo> callback)", "class_method_signature": "Bean.readDeviceInfo(final Callback<DeviceInfo> callback)", "testcase": false, "constructor": false}, {"identifier": "readFirmwareVersion", "parameters": "(final Callback<String> callback)", "modifiers": "public", "return": "void", "signature": "void readFirmwareVersion(final Callback<String> callback)", "full_signature": "public void readFirmwareVersion(final Callback<String> callback)", "class_method_signature": "Bean.readFirmwareVersion(final Callback<String> callback)", "testcase": false, "constructor": false}, {"identifier": "readHardwareVersion", "parameters": "(final Callback<String> callback)", "modifiers": "public", "return": "void", "signature": "void readHardwareVersion(final Callback<String> callback)", "full_signature": "public void readHardwareVersion(final Callback<String> callback)", "class_method_signature": "Bean.readHardwareVersion(final Callback<String> callback)", "testcase": false, "constructor": false}, {"identifier": "setArduinoEnabled", "parameters": "(boolean enable)", "modifiers": "public", "return": "void", "signature": "void setArduinoEnabled(boolean enable)", "full_signature": "public void setArduinoEnabled(boolean enable)", "class_method_signature": "Bean.setArduinoEnabled(boolean enable)", "testcase": false, "constructor": false}, {"identifier": "readArduinoPowerState", "parameters": "(final Callback<Boolean> callback)", "modifiers": "public", "return": "void", "signature": "void readArduinoPowerState(final Callback<Boolean> callback)", "full_signature": "public void readArduinoPowerState(final Callback<Boolean> callback)", "class_method_signature": "Bean.readArduinoPowerState(final Callback<Boolean> callback)", "testcase": false, "constructor": false}, {"identifier": "readBatteryLevel", "parameters": "(final Callback<BatteryLevel> callback)", "modifiers": "public", "return": "void", "signature": "void readBatteryLevel(final Callback<BatteryLevel> callback)", "full_signature": "public void readBatteryLevel(final Callback<BatteryLevel> callback)", "class_method_signature": "Bean.readBatteryLevel(final Callback<BatteryLevel> callback)", "testcase": false, "constructor": false}, {"identifier": "endSerialGate", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void endSerialGate()", "full_signature": "public void endSerialGate()", "class_method_signature": "Bean.endSerialGate()", "testcase": false, "constructor": false}, {"identifier": "programWithSketch", "parameters": "(SketchHex hex, Callback<UploadProgress> onProgress, Runnable onComplete)", "modifiers": "public", "return": "void", "signature": "void programWithSketch(SketchHex hex, Callback<UploadProgress> onProgress, Runnable onComplete)", "full_signature": "public void programWithSketch(SketchHex hex, Callback<UploadProgress> onProgress, Runnable onComplete)", "class_method_signature": "Bean.programWithSketch(SketchHex hex, Callback<UploadProgress> onProgress, Runnable onComplete)", "testcase": false, "constructor": false}, {"identifier": "programWithFirmware", "parameters": "(FirmwareBundle bundle, OADProfile.OADListener listener)", "modifiers": "public", "return": "OADProfile.OADApproval", "signature": "OADProfile.OADApproval programWithFirmware(FirmwareBundle bundle, OADProfile.OADListener listener)", "full_signature": "public OADProfile.OADApproval programWithFirmware(FirmwareBundle bundle, OADProfile.OADListener listener)", "class_method_signature": "Bean.programWithFirmware(FirmwareBundle bundle, OADProfile.OADListener listener)", "testcase": false, "constructor": false}, {"identifier": "firmwareUpdateInProgress", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean firmwareUpdateInProgress()", "full_signature": "public boolean firmwareUpdateInProgress()", "class_method_signature": "Bean.firmwareUpdateInProgress()", "testcase": false, "constructor": false}, {"identifier": "describeContents", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int describeContents()", "full_signature": "@Override public int describeContents()", "class_method_signature": "Bean.describeContents()", "testcase": false, "constructor": false}, {"identifier": "writeToParcel", "parameters": "(Parcel dest, int flags)", "modifiers": "@Override public", "return": "void", "signature": "void writeToParcel(Parcel dest, int flags)", "full_signature": "@Override public void writeToParcel(Parcel dest, int flags)", "class_method_signature": "Bean.writeToParcel(Parcel dest, int flags)", "testcase": false, "constructor": false}], "file": "sdk/src/main/java/com/punchthrough/bean/sdk/Bean.java"}, "focal_method": {"identifier": "connect", "parameters": "(Context context, BeanListener listener)", "modifiers": "public", "return": "void", "body": "public void connect(Context context, BeanListener listener) {\n        lastKnownContext = context;\n        beanListener = listener;\n        gattClient.connect(context, device);\n    }", "signature": "void connect(Context context, BeanListener listener)", "full_signature": "public void connect(Context context, BeanListener listener)", "class_method_signature": "Bean.connect(Context context, BeanListener listener)", "testcase": false, "constructor": false, "invocations": ["connect"]}, "repository": {"repo_id": 33499067, "url": "https://github.com/PunchThrough/bean-sdk-android", "language": "Java", "is_fork": false, "fork_count": 22, "stargazer_count": 55, "size": 2818, "license": "licensed"}}