{"test_class": {"identifier": "StringListTypeTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundles/org.openhab.core/src/test/java/org/openhab/core/library/types/StringListTypeTest.java"}, "test_case": {"identifier": "testEquals", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testEquals() {\n        StringListType a = new StringListType(\"1\", \"2\", \"3\");\n        StringListType b = new StringListType(\"1\", \"2\", \"3\");\n        StringListType c = new StringListType(\"4\", \"5\", \"6\");\n        assertEquals(a, b);\n        assertNotEquals(a, c);\n        assertNotEquals(b, c);\n    }", "signature": "void testEquals()", "full_signature": "@Test public void testEquals()", "class_method_signature": "StringListTypeTest.testEquals()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "assertNotEquals", "assertNotEquals"]}, "focal_class": {"identifier": "StringListType", "superclass": "", "interfaces": "implements Command, State", "fields": [{"original_string": "protected final List<String> typeDetails;", "modifier": "protected final", "type": "List<String>", "declarator": "typeDetails", "var_name": "typeDetails"}, {"original_string": "public static final String DELIMITER = \",\";", "modifier": "public static final", "type": "String", "declarator": "DELIMITER = \",\"", "var_name": "DELIMITER"}, {"original_string": "public static final String ESCAPED_DELIMITER = \"\\\\\" + DELIMITER;", "modifier": "public static final", "type": "String", "declarator": "ESCAPED_DELIMITER = \"\\\\\" + DELIMITER", "var_name": "ESCAPED_DELIMITER"}, {"original_string": "public static final String REGEX_SPLITTER = \"(?<!\\\\\\\\)\" + DELIMITER;", "modifier": "public static final", "type": "String", "declarator": "REGEX_SPLITTER = \"(?<!\\\\\\\\)\" + DELIMITER", "var_name": "REGEX_SPLITTER"}], "methods": [{"identifier": "StringListType", "parameters": "()", "modifiers": "public", "return": "", "signature": " StringListType()", "full_signature": "public  StringListType()", "class_method_signature": "StringListType.StringListType()", "testcase": false, "constructor": true}, {"identifier": "StringListType", "parameters": "(List<String> rows)", "modifiers": "public", "return": "", "signature": " StringListType(List<String> rows)", "full_signature": "public  StringListType(List<String> rows)", "class_method_signature": "StringListType.StringListType(List<String> rows)", "testcase": false, "constructor": true}, {"identifier": "StringListType", "parameters": "(StringType... rows)", "modifiers": "public", "return": "", "signature": " StringListType(StringType... rows)", "full_signature": "public  StringListType(StringType... rows)", "class_method_signature": "StringListType.StringListType(StringType... rows)", "testcase": false, "constructor": true}, {"identifier": "StringListType", "parameters": "(String... rows)", "modifiers": "public", "return": "", "signature": " StringListType(String... rows)", "full_signature": "public  StringListType(String... rows)", "class_method_signature": "StringListType.StringListType(String... rows)", "testcase": false, "constructor": true}, {"identifier": "StringListType", "parameters": "(String serialized)", "modifiers": "public", "return": "", "signature": " StringListType(String serialized)", "full_signature": "public  StringListType(String serialized)", "class_method_signature": "StringListType.StringListType(String serialized)", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "(final int index)", "modifiers": "public", "return": "String", "signature": "String getValue(final int index)", "full_signature": "public String getValue(final int index)", "class_method_signature": "StringListType.getValue(final int index)", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "(String pattern)", "modifiers": "@Override public", "return": "String", "signature": "String format(String pattern)", "full_signature": "@Override public String format(String pattern)", "class_method_signature": "StringListType.format(String pattern)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "StringListType.toString()", "testcase": false, "constructor": false}, {"identifier": "toFullString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toFullString()", "full_signature": "@Override public String toFullString()", "class_method_signature": "StringListType.toFullString()", "testcase": false, "constructor": false}, {"identifier": "valueOf", "parameters": "(String value)", "modifiers": "public static", "return": "StringListType", "signature": "StringListType valueOf(String value)", "full_signature": "public static StringListType valueOf(String value)", "class_method_signature": "StringListType.valueOf(String value)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "StringListType.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(@Nullable Object obj)", "full_signature": "@Override public boolean equals(@Nullable Object obj)", "class_method_signature": "StringListType.equals(@Nullable Object obj)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core/src/main/java/org/openhab/core/library/types/StringListType.java"}, "focal_method": {"identifier": "equals", "parameters": "(@Nullable Object obj)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean equals(@Nullable Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (obj == null) {\n            return false;\n        }\n        if (getClass() != obj.getClass()) {\n            return false;\n        }\n        StringListType other = (StringListType) obj;\n        return typeDetails.equals(other.typeDetails);\n    }", "signature": "boolean equals(@Nullable Object obj)", "full_signature": "@Override public boolean equals(@Nullable Object obj)", "class_method_signature": "StringListType.equals(@Nullable Object obj)", "testcase": false, "constructor": false, "invocations": ["getClass", "getClass", "equals"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}