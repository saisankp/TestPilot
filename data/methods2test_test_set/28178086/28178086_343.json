{"test_class": {"identifier": "AutoRegressiveSpectrumTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private TsData X=data.Data.P.delta(1).delta(12);", "modifier": "private", "type": "TsData", "declarator": "X=data.Data.P.delta(1).delta(12)", "var_name": "X"}], "file": "jtstoolkit/src/test/java/ec/tstoolkit/data/AutoRegressiveSpectrumTest.java"}, "test_case": {"identifier": "testDurbin", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDurbin() {\n        AutoRegressiveSpectrum ar=new AutoRegressiveSpectrum(Method.Durbin);\n        ar.process(X, 30);\n//        System.out.println(ar.getCoefficients());\n//        System.out.println(ar.getSigma());\n    }", "signature": "void testDurbin()", "full_signature": "@Test public void testDurbin()", "class_method_signature": "AutoRegressiveSpectrumTest.testDurbin()", "testcase": true, "constructor": false, "invocations": ["process"]}, "focal_class": {"identifier": "AutoRegressiveSpectrum", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int MAX_AR = 50;", "modifier": "public static final", "type": "int", "declarator": "MAX_AR = 50", "var_name": "MAX_AR"}, {"original_string": "private double[] ar;", "modifier": "private", "type": "double[]", "declarator": "ar", "var_name": "ar"}, {"original_string": "private double sig;", "modifier": "private", "type": "double", "declarator": "sig", "var_name": "sig"}, {"original_string": "private final Method method_;", "modifier": "private final", "type": "Method", "declarator": "method_", "var_name": "method_"}], "methods": [{"identifier": "AutoRegressiveSpectrum", "parameters": "(Method m)", "modifiers": "public", "return": "", "signature": " AutoRegressiveSpectrum(Method m)", "full_signature": "public  AutoRegressiveSpectrum(Method m)", "class_method_signature": "AutoRegressiveSpectrum.AutoRegressiveSpectrum(Method m)", "testcase": false, "constructor": true}, {"identifier": "process", "parameters": "(IReadDataBlock data, final int nar)", "modifiers": "public", "return": "boolean", "signature": "boolean process(IReadDataBlock data, final int nar)", "full_signature": "public boolean process(IReadDataBlock data, final int nar)", "class_method_signature": "AutoRegressiveSpectrum.process(IReadDataBlock data, final int nar)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void clear()", "full_signature": "private void clear()", "class_method_signature": "AutoRegressiveSpectrum.clear()", "testcase": false, "constructor": false}, {"identifier": "computeDurbin", "parameters": "(IReadDataBlock data, int nar)", "modifiers": "private", "return": "void", "signature": "void computeDurbin(IReadDataBlock data, int nar)", "full_signature": "private void computeDurbin(IReadDataBlock data, int nar)", "class_method_signature": "AutoRegressiveSpectrum.computeDurbin(IReadDataBlock data, int nar)", "testcase": false, "constructor": false}, {"identifier": "computeDefaultLags", "parameters": "(int n)", "modifiers": "public static", "return": "int", "signature": "int computeDefaultLags(int n)", "full_signature": "public static int computeDefaultLags(int n)", "class_method_signature": "AutoRegressiveSpectrum.computeDefaultLags(int n)", "testcase": false, "constructor": false}, {"identifier": "computeOls", "parameters": "(IReadDataBlock data, int nar)", "modifiers": "private", "return": "void", "signature": "void computeOls(IReadDataBlock data, int nar)", "full_signature": "private void computeOls(IReadDataBlock data, int nar)", "class_method_signature": "AutoRegressiveSpectrum.computeOls(IReadDataBlock data, int nar)", "testcase": false, "constructor": false}, {"identifier": "value", "parameters": "(double f)", "modifiers": "public", "return": "double", "signature": "double value(double f)", "full_signature": "public double value(double f)", "class_method_signature": "AutoRegressiveSpectrum.value(double f)", "testcase": false, "constructor": false}, {"identifier": "getSigma", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getSigma()", "full_signature": "public double getSigma()", "class_method_signature": "AutoRegressiveSpectrum.getSigma()", "testcase": false, "constructor": false}, {"identifier": "getCoefficients", "parameters": "()", "modifiers": "public", "return": "IReadDataBlock", "signature": "IReadDataBlock getCoefficients()", "full_signature": "public IReadDataBlock getCoefficients()", "class_method_signature": "AutoRegressiveSpectrum.getCoefficients()", "testcase": false, "constructor": false}], "file": "jtstoolkit/src/main/java/ec/tstoolkit/data/AutoRegressiveSpectrum.java"}, "focal_method": {"identifier": "process", "parameters": "(IReadDataBlock data, final int nar)", "modifiers": "public", "return": "boolean", "body": "public boolean process(IReadDataBlock data, final int nar) {\n        clear();\n        int nlags = nar == 0 ? computeDefaultLags(data.getLength()) : nar;\n        if (nlags < 0) {\n            return false;\n        }\n        switch (method_) {\n            case Durbin:\n                computeDurbin(data, nlags);\n                break;\n            case Ols:\n                computeOls(data, nlags);\n        }\n        return ar != null;\n    }", "signature": "boolean process(IReadDataBlock data, final int nar)", "full_signature": "public boolean process(IReadDataBlock data, final int nar)", "class_method_signature": "AutoRegressiveSpectrum.process(IReadDataBlock data, final int nar)", "testcase": false, "constructor": false, "invocations": ["clear", "computeDefaultLags", "getLength", "computeDurbin", "computeOls"]}, "repository": {"repo_id": 28178086, "url": "https://github.com/jdemetra/jdemetra-core", "stars": 24, "created": "12/18/2014 10:00:58 AM +00:00", "updates": "2020-01-17T15:50:24+00:00", "fork": "False", "license": "licensed"}}