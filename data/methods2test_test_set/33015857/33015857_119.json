{"test_class": {"identifier": "IOTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "File testDir;", "modifier": "", "type": "File", "declarator": "testDir", "var_name": "testDir"}, {"original_string": "File testFile;", "modifier": "", "type": "File", "declarator": "testFile", "var_name": "testFile"}], "file": "reflekt/src/test/java/io/advantageous/boon/core/IOTest.java"}, "test_case": {"identifier": "testReadEachLineHttp", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testReadEachLineHttp() throws Exception {\n\n        HttpServer server = HttpServer.create( new InetSocketAddress( 9668 ), 0 );\n        server.createContext( \"/test\", new MyHandler() );\n        server.setExecutor( null ); // creates a default executor\n        server.start();\n\n        Thread.sleep( 10 );\n\n        IO.eachLine( \"http://localhost:9668/test\",\n                new IO.EachLine() {\n                    @Override\n                    public boolean line( String line, int index ) {\n\n                        if ( index == 0 ) {\n\n                            assertEquals(\n                                    \"line 1\", line\n                            );\n\n                        } else if ( index == 3 ) {\n\n\n                            assertEquals(\n                                    \"grapes\", line\n                            );\n                        }\n\n                        return true;\n                    }\n                } );\n\n    }", "signature": "void testReadEachLineHttp()", "full_signature": "@Test public void testReadEachLineHttp()", "class_method_signature": "IOTest.testReadEachLineHttp()", "testcase": true, "constructor": false, "invocations": ["create", "createContext", "setExecutor", "start", "sleep", "eachLine", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "IO", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final static Charset DEFAULT_CHARSET = StandardCharsets.UTF_8;", "modifier": "public final static", "type": "Charset", "declarator": "DEFAULT_CHARSET = StandardCharsets.UTF_8", "var_name": "DEFAULT_CHARSET"}, {"original_string": "public final static String FILE_SCHEMA = \"file\";", "modifier": "public final static", "type": "String", "declarator": "FILE_SCHEMA = \"file\"", "var_name": "FILE_SCHEMA"}, {"original_string": "public final static String JAR_SCHEMA = \"jar\";", "modifier": "public final static", "type": "String", "declarator": "JAR_SCHEMA = \"jar\"", "var_name": "JAR_SCHEMA"}, {"original_string": "public final static String JAR_FILE_SCHEMA = \"jar:file\";", "modifier": "public final static", "type": "String", "declarator": "JAR_FILE_SCHEMA = \"jar:file\"", "var_name": "JAR_FILE_SCHEMA"}, {"original_string": "private static final int DEFAULT_BUFFER_SIZE = 1024 * 4;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_BUFFER_SIZE = 1024 * 4", "var_name": "DEFAULT_BUFFER_SIZE"}, {"original_string": "private static final int EOF = -1;", "modifier": "private static final", "type": "int", "declarator": "EOF = -1", "var_name": "EOF"}, {"original_string": "public static ConvertToPathFunction convertToPathFunction = new ConvertToPathFunction();", "modifier": "public static", "type": "ConvertToPathFunction", "declarator": "convertToPathFunction = new ConvertToPathFunction()", "var_name": "convertToPathFunction"}], "methods": [{"identifier": "zipFileSystem", "parameters": "( URI fileJarURI )", "modifiers": "public static", "return": "FileSystem", "signature": "FileSystem zipFileSystem( URI fileJarURI )", "full_signature": "public static FileSystem zipFileSystem( URI fileJarURI )", "class_method_signature": "IO.zipFileSystem( URI fileJarURI )", "testcase": false, "constructor": false}, {"identifier": "loadFileSystemProvider", "parameters": "(String providerType)", "modifiers": "private static", "return": "FileSystemProvider", "signature": "FileSystemProvider loadFileSystemProvider(String providerType)", "full_signature": "private static FileSystemProvider loadFileSystemProvider(String providerType)", "class_method_signature": "IO.loadFileSystemProvider(String providerType)", "testcase": false, "constructor": false}, {"identifier": "println", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void println()", "full_signature": "public static void println()", "class_method_signature": "IO.println()", "testcase": false, "constructor": false}, {"identifier": "println", "parameters": "(Object message)", "modifiers": "public static", "return": "void", "signature": "void println(Object message)", "full_signature": "public static void println(Object message)", "class_method_signature": "IO.println(Object message)", "testcase": false, "constructor": false}, {"identifier": "print", "parameters": "(String message)", "modifiers": "public static", "return": "void", "signature": "void print(String message)", "full_signature": "public static void print(String message)", "class_method_signature": "IO.print(String message)", "testcase": false, "constructor": false}, {"identifier": "print", "parameters": "(Object message)", "modifiers": "public static", "return": "void", "signature": "void print(Object message)", "full_signature": "public static void print(Object message)", "class_method_signature": "IO.print(Object message)", "testcase": false, "constructor": false}, {"identifier": "puts", "parameters": "(Object... messages)", "modifiers": "public static", "return": "void", "signature": "void puts(Object... messages)", "full_signature": "public static void puts(Object... messages)", "class_method_signature": "IO.puts(Object... messages)", "testcase": false, "constructor": false}, {"identifier": "putl", "parameters": "(Object... messages)", "modifiers": "public static", "return": "void", "signature": "void putl(Object... messages)", "full_signature": "public static void putl(Object... messages)", "class_method_signature": "IO.putl(Object... messages)", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "( final Path path )", "modifiers": "public static", "return": "List<String>", "signature": "List<String> list( final Path path )", "full_signature": "public static List<String> list( final Path path )", "class_method_signature": "IO.list( final Path path )", "testcase": false, "constructor": false}, {"identifier": "listPath", "parameters": "( final Path path )", "modifiers": "public static", "return": "List<Path>", "signature": "List<Path> listPath( final Path path )", "full_signature": "public static List<Path> listPath( final Path path )", "class_method_signature": "IO.listPath( final Path path )", "testcase": false, "constructor": false}, {"identifier": "listByGlob", "parameters": "( final String path, final String glob )", "modifiers": "public static", "return": "List<String>", "signature": "List<String> listByGlob( final String path, final String glob )", "full_signature": "public static List<String> listByGlob( final String path, final String glob )", "class_method_signature": "IO.listByGlob( final String path, final String glob )", "testcase": false, "constructor": false}, {"identifier": "listByGlob", "parameters": "( Path pathFromFileSystem, String glob )", "modifiers": "public static", "return": "List<String>", "signature": "List<String> listByGlob( Path pathFromFileSystem, String glob )", "full_signature": "public static List<String> listByGlob( Path pathFromFileSystem, String glob )", "class_method_signature": "IO.listByGlob( Path pathFromFileSystem, String glob )", "testcase": false, "constructor": false}, {"identifier": "listByFileExtension", "parameters": "( final String path, final String ext )", "modifiers": "public static", "return": "List<String>", "signature": "List<String> listByFileExtension( final String path, final String ext )", "full_signature": "public static List<String> listByFileExtension( final String path, final String ext )", "class_method_signature": "IO.listByFileExtension( final String path, final String ext )", "testcase": false, "constructor": false}, {"identifier": "listByFileExtension", "parameters": "( final Path pathFromFileSystem, final String ext )", "modifiers": "public static", "return": "List<String>", "signature": "List<String> listByFileExtension( final Path pathFromFileSystem, final String ext )", "full_signature": "public static List<String> listByFileExtension( final Path pathFromFileSystem, final String ext )", "class_method_signature": "IO.listByFileExtension( final Path pathFromFileSystem, final String ext )", "testcase": false, "constructor": false}, {"identifier": "listByFileExtensionRecursive", "parameters": "( final String path, final String ext )", "modifiers": "public static", "return": "List<String>", "signature": "List<String> listByFileExtensionRecursive( final String path, final String ext )", "full_signature": "public static List<String> listByFileExtensionRecursive( final String path, final String ext )", "class_method_signature": "IO.listByFileExtensionRecursive( final String path, final String ext )", "testcase": false, "constructor": false}, {"identifier": "listByFileExtensionRecursive", "parameters": "( final Path pathFromFileSystem, final String ext )", "modifiers": "public static", "return": "List<String>", "signature": "List<String> listByFileExtensionRecursive( final Path pathFromFileSystem, final String ext )", "full_signature": "public static List<String> listByFileExtensionRecursive( final Path pathFromFileSystem, final String ext )", "class_method_signature": "IO.listByFileExtensionRecursive( final Path pathFromFileSystem, final String ext )", "testcase": false, "constructor": false}, {"identifier": "doListByFileExtensionRecursive", "parameters": "( final List<String> result,\n                                                                final Path pathFromFileSystem,\n                                                                final String glob )", "modifiers": "private static", "return": "List<String>", "signature": "List<String> doListByFileExtensionRecursive( final List<String> result,\n                                                                final Path pathFromFileSystem,\n                                                                final String glob )", "full_signature": "private static List<String> doListByFileExtensionRecursive( final List<String> result,\n                                                                final Path pathFromFileSystem,\n                                                                final String glob )", "class_method_signature": "IO.doListByFileExtensionRecursive( final List<String> result,\n                                                                final Path pathFromFileSystem,\n                                                                final String glob )", "testcase": false, "constructor": false}, {"identifier": "readChild", "parameters": "( Path parentDir, String childFileName )", "modifiers": "public static", "return": "String", "signature": "String readChild( Path parentDir, String childFileName )", "full_signature": "public static String readChild( Path parentDir, String childFileName )", "class_method_signature": "IO.readChild( Path parentDir, String childFileName )", "testcase": false, "constructor": false}, {"identifier": "readCharBuffer", "parameters": "( Path path )", "modifiers": "public static", "return": "char[]", "signature": "char[] readCharBuffer( Path path )", "full_signature": "public static char[] readCharBuffer( Path path )", "class_method_signature": "IO.readCharBuffer( Path path )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( InputStream inputStream, Charset charset )", "modifiers": "public static", "return": "String", "signature": "String read( InputStream inputStream, Charset charset )", "full_signature": "public static String read( InputStream inputStream, Charset charset )", "class_method_signature": "IO.read( InputStream inputStream, Charset charset )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( InputStream inputStream, String charset )", "modifiers": "public static", "return": "String", "signature": "String read( InputStream inputStream, String charset )", "full_signature": "public static String read( InputStream inputStream, String charset )", "class_method_signature": "IO.read( InputStream inputStream, String charset )", "testcase": false, "constructor": false}, {"identifier": "readCharBuffer", "parameters": "( InputStream inputStream, Charset charset )", "modifiers": "public static", "return": "String", "signature": "String readCharBuffer( InputStream inputStream, Charset charset )", "full_signature": "public static String readCharBuffer( InputStream inputStream, Charset charset )", "class_method_signature": "IO.readCharBuffer( InputStream inputStream, Charset charset )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( InputStream inputStream )", "modifiers": "public static", "return": "String", "signature": "String read( InputStream inputStream )", "full_signature": "public static String read( InputStream inputStream )", "class_method_signature": "IO.read( InputStream inputStream )", "testcase": false, "constructor": false}, {"identifier": "readCharBuffer", "parameters": "( InputStream inputStream )", "modifiers": "public static", "return": "char[]", "signature": "char[] readCharBuffer( InputStream inputStream )", "full_signature": "public static char[] readCharBuffer( InputStream inputStream )", "class_method_signature": "IO.readCharBuffer( InputStream inputStream )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( InputStream inputStream, CharBuf charBuf )", "modifiers": "public static", "return": "CharBuf", "signature": "CharBuf read( InputStream inputStream, CharBuf charBuf )", "full_signature": "public static CharBuf read( InputStream inputStream, CharBuf charBuf )", "class_method_signature": "IO.read( InputStream inputStream, CharBuf charBuf )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( InputStream inputStream, CharBuf charBuf, Charset charset )", "modifiers": "public static", "return": "CharBuf", "signature": "CharBuf read( InputStream inputStream, CharBuf charBuf, Charset charset )", "full_signature": "public static CharBuf read( InputStream inputStream, CharBuf charBuf, Charset charset )", "class_method_signature": "IO.read( InputStream inputStream, CharBuf charBuf, Charset charset )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( InputStream inputStream, CharBuf charBuf, Charset charset, int bufSize, char[] copyBuf )", "modifiers": "public static", "return": "CharBuf", "signature": "CharBuf read( InputStream inputStream, CharBuf charBuf, Charset charset, int bufSize, char[] copyBuf )", "full_signature": "public static CharBuf read( InputStream inputStream, CharBuf charBuf, Charset charset, int bufSize, char[] copyBuf )", "class_method_signature": "IO.read( InputStream inputStream, CharBuf charBuf, Charset charset, int bufSize, char[] copyBuf )", "testcase": false, "constructor": false}, {"identifier": "input", "parameters": "( String fileName )", "modifiers": "public static", "return": "byte[]", "signature": "byte[] input( String fileName )", "full_signature": "public static byte[] input( String fileName )", "class_method_signature": "IO.input( String fileName )", "testcase": false, "constructor": false}, {"identifier": "input", "parameters": "( InputStream inputStream )", "modifiers": "public static", "return": "byte[]", "signature": "byte[] input( InputStream inputStream )", "full_signature": "public static byte[] input( InputStream inputStream )", "class_method_signature": "IO.input( InputStream inputStream )", "testcase": false, "constructor": false}, {"identifier": "copyLarge", "parameters": "( Reader reader, Writer writer )", "modifiers": "public static", "return": "long", "signature": "long copyLarge( Reader reader, Writer writer )", "full_signature": "public static long copyLarge( Reader reader, Writer writer )", "class_method_signature": "IO.copyLarge( Reader reader, Writer writer )", "testcase": false, "constructor": false}, {"identifier": "copyLarge", "parameters": "( Reader reader, Writer writer, char[] buffer )", "modifiers": "public static", "return": "long", "signature": "long copyLarge( Reader reader, Writer writer, char[] buffer )", "full_signature": "public static long copyLarge( Reader reader, Writer writer, char[] buffer )", "class_method_signature": "IO.copyLarge( Reader reader, Writer writer, char[] buffer )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( Reader input )", "modifiers": "public static", "return": "String", "signature": "String read( Reader input )", "full_signature": "public static String read( Reader input )", "class_method_signature": "IO.read( Reader input )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( Reader input, CharBuf charBuf, final int bufSize, char[] copyBuffer )", "modifiers": "public static", "return": "CharBuf", "signature": "CharBuf read( Reader input, CharBuf charBuf, final int bufSize, char[] copyBuffer )", "full_signature": "public static CharBuf read( Reader input, CharBuf charBuf, final int bufSize, char[] copyBuffer )", "class_method_signature": "IO.read( Reader input, CharBuf charBuf, final int bufSize, char[] copyBuffer )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( Reader input, CharBuf charBuf )", "modifiers": "public static", "return": "CharBuf", "signature": "CharBuf read( Reader input, CharBuf charBuf )", "full_signature": "public static CharBuf read( Reader input, CharBuf charBuf )", "class_method_signature": "IO.read( Reader input, CharBuf charBuf )", "testcase": false, "constructor": false}, {"identifier": "readCharBuffer", "parameters": "( Reader input )", "modifiers": "public static", "return": "char[]", "signature": "char[] readCharBuffer( Reader input )", "full_signature": "public static char[] readCharBuffer( Reader input )", "class_method_signature": "IO.readCharBuffer( Reader input )", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "( Reader input, Writer output )", "modifiers": "public static", "return": "int", "signature": "int copy( Reader input, Writer output )", "full_signature": "public static int copy( Reader input, Writer output )", "class_method_signature": "IO.copy( Reader input, Writer output )", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "( Reader input, Writer output, char[] copyBuf )", "modifiers": "public static", "return": "int", "signature": "int copy( Reader input, Writer output, char[] copyBuf )", "full_signature": "public static int copy( Reader input, Writer output, char[] copyBuf )", "class_method_signature": "IO.copy( Reader input, Writer output, char[] copyBuf )", "testcase": false, "constructor": false}, {"identifier": "readCharBuffer", "parameters": "( Reader reader, int size )", "modifiers": "public static", "return": "char[]", "signature": "char[] readCharBuffer( Reader reader, int size )", "full_signature": "public static char[] readCharBuffer( Reader reader, int size )", "class_method_signature": "IO.readCharBuffer( Reader reader, int size )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( File file )", "modifiers": "public static", "return": "String", "signature": "String read( File file )", "full_signature": "public static String read( File file )", "class_method_signature": "IO.read( File file )", "testcase": false, "constructor": false}, {"identifier": "readLines", "parameters": "( Reader reader )", "modifiers": "public static", "return": "List<String>", "signature": "List<String> readLines( Reader reader )", "full_signature": "public static List<String> readLines( Reader reader )", "class_method_signature": "IO.readLines( Reader reader )", "testcase": false, "constructor": false}, {"identifier": "eachLine", "parameters": "( Reader reader, EachLine eachLine )", "modifiers": "public static", "return": "void", "signature": "void eachLine( Reader reader, EachLine eachLine )", "full_signature": "public static void eachLine( Reader reader, EachLine eachLine )", "class_method_signature": "IO.eachLine( Reader reader, EachLine eachLine )", "testcase": false, "constructor": false}, {"identifier": "readLines", "parameters": "( InputStream is )", "modifiers": "public static", "return": "List<String>", "signature": "List<String> readLines( InputStream is )", "full_signature": "public static List<String> readLines( InputStream is )", "class_method_signature": "IO.readLines( InputStream is )", "testcase": false, "constructor": false}, {"identifier": "eachLine", "parameters": "( InputStream is, EachLine eachLine )", "modifiers": "public static", "return": "void", "signature": "void eachLine( InputStream is, EachLine eachLine )", "full_signature": "public static void eachLine( InputStream is, EachLine eachLine )", "class_method_signature": "IO.eachLine( InputStream is, EachLine eachLine )", "testcase": false, "constructor": false}, {"identifier": "readLines", "parameters": "( BufferedReader reader )", "modifiers": "public static", "return": "List<String>", "signature": "List<String> readLines( BufferedReader reader )", "full_signature": "public static List<String> readLines( BufferedReader reader )", "class_method_signature": "IO.readLines( BufferedReader reader )", "testcase": false, "constructor": false}, {"identifier": "eachLine", "parameters": "( BufferedReader reader, EachLine eachLine )", "modifiers": "public static", "return": "void", "signature": "void eachLine( BufferedReader reader, EachLine eachLine )", "full_signature": "public static void eachLine( BufferedReader reader, EachLine eachLine )", "class_method_signature": "IO.eachLine( BufferedReader reader, EachLine eachLine )", "testcase": false, "constructor": false}, {"identifier": "eachLine", "parameters": "( File file, EachLine eachLine )", "modifiers": "public static", "return": "void", "signature": "void eachLine( File file, EachLine eachLine )", "full_signature": "public static void eachLine( File file, EachLine eachLine )", "class_method_signature": "IO.eachLine( File file, EachLine eachLine )", "testcase": false, "constructor": false}, {"identifier": "readLines", "parameters": "( File file )", "modifiers": "public static", "return": "List<String>", "signature": "List<String> readLines( File file )", "full_signature": "public static List<String> readLines( File file )", "class_method_signature": "IO.readLines( File file )", "testcase": false, "constructor": false}, {"identifier": "readLines", "parameters": "( final String location )", "modifiers": "public static", "return": "List<String>", "signature": "List<String> readLines( final String location )", "full_signature": "public static List<String> readLines( final String location )", "class_method_signature": "IO.readLines( final String location )", "testcase": false, "constructor": false}, {"identifier": "createURI", "parameters": "( final String path )", "modifiers": "public static", "return": "URI", "signature": "URI createURI( final String path )", "full_signature": "public static URI createURI( final String path )", "class_method_signature": "IO.createURI( final String path )", "testcase": false, "constructor": false}, {"identifier": "eachLine", "parameters": "( final String location, final EachLine eachLine )", "modifiers": "public static", "return": "void", "signature": "void eachLine( final String location, final EachLine eachLine )", "full_signature": "public static void eachLine( final String location, final EachLine eachLine )", "class_method_signature": "IO.eachLine( final String location, final EachLine eachLine )", "testcase": false, "constructor": false}, {"identifier": "getWindowsPathIfNeeded", "parameters": "( String path )", "modifiers": "public static", "return": "String", "signature": "String getWindowsPathIfNeeded( String path )", "full_signature": "public static String getWindowsPathIfNeeded( String path )", "class_method_signature": "IO.getWindowsPathIfNeeded( String path )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( final Path path )", "modifiers": "public static", "return": "String", "signature": "String read( final Path path )", "full_signature": "public static String read( final Path path )", "class_method_signature": "IO.read( final Path path )", "testcase": false, "constructor": false}, {"identifier": "readPath", "parameters": "( final Path path )", "modifiers": "public static", "return": "String", "signature": "String readPath( final Path path )", "full_signature": "public static String readPath( final Path path )", "class_method_signature": "IO.readPath( final Path path )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( final String location )", "modifiers": "public static", "return": "String", "signature": "String read( final String location )", "full_signature": "public static String read( final String location )", "class_method_signature": "IO.read( final String location )", "testcase": false, "constructor": false}, {"identifier": "readFromFileSchema", "parameters": "( URI uri )", "modifiers": "public static", "return": "String", "signature": "String readFromFileSchema( URI uri )", "full_signature": "public static String readFromFileSchema( URI uri )", "class_method_signature": "IO.readFromFileSchema( URI uri )", "testcase": false, "constructor": false}, {"identifier": "uriToPath", "parameters": "( URI uri )", "modifiers": "public static", "return": "Path", "signature": "Path uriToPath( URI uri )", "full_signature": "public static Path uriToPath( URI uri )", "class_method_signature": "IO.uriToPath( URI uri )", "testcase": false, "constructor": false}, {"identifier": "readLines", "parameters": "( String location, URI uri )", "modifiers": "private static", "return": "List<String>", "signature": "List<String> readLines( String location, URI uri )", "full_signature": "private static List<String> readLines( String location, URI uri )", "class_method_signature": "IO.readLines( String location, URI uri )", "testcase": false, "constructor": false}, {"identifier": "eachLine", "parameters": "( String location, URI uri, EachLine eachLine )", "modifiers": "private static", "return": "void", "signature": "void eachLine( String location, URI uri, EachLine eachLine )", "full_signature": "private static void eachLine( String location, URI uri, EachLine eachLine )", "class_method_signature": "IO.eachLine( String location, URI uri, EachLine eachLine )", "testcase": false, "constructor": false}, {"identifier": "read", "parameters": "( String location, URI uri )", "modifiers": "public static", "return": "String", "signature": "String read( String location, URI uri )", "full_signature": "public static String read( String location, URI uri )", "class_method_signature": "IO.read( String location, URI uri )", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "( OutputStream out, String content, Charset charset )", "modifiers": "public static", "return": "void", "signature": "void write( OutputStream out, String content, Charset charset )", "full_signature": "public static void write( OutputStream out, String content, Charset charset )", "class_method_signature": "IO.write( OutputStream out, String content, Charset charset )", "testcase": false, "constructor": false}, {"identifier": "writeChild", "parameters": "( Path parentDir, String childFileName, String childContents )", "modifiers": "public static", "return": "void", "signature": "void writeChild( Path parentDir, String childFileName, String childContents )", "full_signature": "public static void writeChild( Path parentDir, String childFileName, String childContents )", "class_method_signature": "IO.writeChild( Path parentDir, String childFileName, String childContents )", "testcase": false, "constructor": false}, {"identifier": "createChildDirectory", "parameters": "( Path parentDir, String childDir )", "modifiers": "public static", "return": "Path", "signature": "Path createChildDirectory( Path parentDir, String childDir )", "full_signature": "public static Path createChildDirectory( Path parentDir, String childDir )", "class_method_signature": "IO.createChildDirectory( Path parentDir, String childDir )", "testcase": false, "constructor": false}, {"identifier": "createDirectory", "parameters": "( Path dir )", "modifiers": "public static", "return": "Path", "signature": "Path createDirectory( Path dir )", "full_signature": "public static Path createDirectory( Path dir )", "class_method_signature": "IO.createDirectory( Path dir )", "testcase": false, "constructor": false}, {"identifier": "createDirectory", "parameters": "( String dir )", "modifiers": "public static", "return": "Path", "signature": "Path createDirectory( String dir )", "full_signature": "public static Path createDirectory( String dir )", "class_method_signature": "IO.createDirectory( String dir )", "testcase": false, "constructor": false}, {"identifier": "fileSystem", "parameters": "()", "modifiers": "public static", "return": "FileSystem", "signature": "FileSystem fileSystem()", "full_signature": "public static FileSystem fileSystem()", "class_method_signature": "IO.fileSystem()", "testcase": false, "constructor": false}, {"identifier": "path", "parameters": "( String path, String... more )", "modifiers": "public static", "return": "Path", "signature": "Path path( String path, String... more )", "full_signature": "public static Path path( String path, String... more )", "class_method_signature": "IO.path( String path, String... more )", "testcase": false, "constructor": false}, {"identifier": "path", "parameters": "( Path path, String... more )", "modifiers": "public static", "return": "Path", "signature": "Path path( Path path, String... more )", "full_signature": "public static Path path( Path path, String... more )", "class_method_signature": "IO.path( Path path, String... more )", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "( Path file, String contents )", "modifiers": "public static", "return": "void", "signature": "void write( Path file, String contents )", "full_signature": "public static void write( Path file, String contents )", "class_method_signature": "IO.write( Path file, String contents )", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "( String file, String contents )", "modifiers": "public static", "return": "void", "signature": "void write( String file, String contents )", "full_signature": "public static void write( String file, String contents )", "class_method_signature": "IO.write( String file, String contents )", "testcase": false, "constructor": false}, {"identifier": "output", "parameters": "( String file, byte[] bytes )", "modifiers": "public static", "return": "void", "signature": "void output( String file, byte[] bytes )", "full_signature": "public static void output( String file, byte[] bytes )", "class_method_signature": "IO.output( String file, byte[] bytes )", "testcase": false, "constructor": false}, {"identifier": "output", "parameters": "( Path file, byte[] bytes )", "modifiers": "public static", "return": "void", "signature": "void output( Path file, byte[] bytes )", "full_signature": "public static void output( Path file, byte[] bytes )", "class_method_signature": "IO.output( Path file, byte[] bytes )", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "( String file, byte[] contents )", "modifiers": "public static", "return": "void", "signature": "void write( String file, byte[] contents )", "full_signature": "public static void write( String file, byte[] contents )", "class_method_signature": "IO.write( String file, byte[] contents )", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "( Path file, byte[] contents )", "modifiers": "public static", "return": "void", "signature": "void write( Path file, byte[] contents )", "full_signature": "public static void write( Path file, byte[] contents )", "class_method_signature": "IO.write( Path file, byte[] contents )", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "( OutputStream out, String content )", "modifiers": "public static", "return": "void", "signature": "void write( OutputStream out, String content )", "full_signature": "public static void write( OutputStream out, String content )", "class_method_signature": "IO.write( OutputStream out, String content )", "testcase": false, "constructor": false}, {"identifier": "writeNoClose", "parameters": "( OutputStream out, String content )", "modifiers": "public static", "return": "void", "signature": "void writeNoClose( OutputStream out, String content )", "full_signature": "public static void writeNoClose( OutputStream out, String content )", "class_method_signature": "IO.writeNoClose( OutputStream out, String content )", "testcase": false, "constructor": false}, {"identifier": "inputStream", "parameters": "( String resource )", "modifiers": "public static", "return": "InputStream", "signature": "InputStream inputStream( String resource )", "full_signature": "public static InputStream inputStream( String resource )", "class_method_signature": "IO.inputStream( String resource )", "testcase": false, "constructor": false}, {"identifier": "list", "parameters": "( final String path )", "modifiers": "public static", "return": "List<String>", "signature": "List<String> list( final String path )", "full_signature": "public static List<String> list( final String path )", "class_method_signature": "IO.list( final String path )", "testcase": false, "constructor": false}, {"identifier": "paths", "parameters": "( final String path )", "modifiers": "public static", "return": "List<Path>", "signature": "List<Path> paths( final String path )", "full_signature": "public static List<Path> paths( final String path )", "class_method_signature": "IO.paths( final String path )", "testcase": false, "constructor": false}, {"identifier": "pathsByExt", "parameters": "( final String path, String ext )", "modifiers": "public static", "return": "List<Path>", "signature": "List<Path> pathsByExt( final String path, String ext )", "full_signature": "public static List<Path> pathsByExt( final String path, String ext )", "class_method_signature": "IO.pathsByExt( final String path, String ext )", "testcase": false, "constructor": false}, {"identifier": "paths", "parameters": "( final Path path )", "modifiers": "public static", "return": "List<Path>", "signature": "List<Path> paths( final Path path )", "full_signature": "public static List<Path> paths( final Path path )", "class_method_signature": "IO.paths( final Path path )", "testcase": false, "constructor": false}, {"identifier": "listByExt", "parameters": "( final String path, String ext )", "modifiers": "public static", "return": "List<String>", "signature": "List<String> listByExt( final String path, String ext )", "full_signature": "public static List<String> listByExt( final String path, String ext )", "class_method_signature": "IO.listByExt( final String path, String ext )", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Path path)", "modifiers": "public static", "return": "void", "signature": "void delete(Path path)", "full_signature": "public static void delete(Path path)", "class_method_signature": "IO.delete(Path path)", "testcase": false, "constructor": false}, {"identifier": "createDirectories", "parameters": "(Path path)", "modifiers": "public static", "return": "void", "signature": "void createDirectories(Path path)", "full_signature": "public static void createDirectories(Path path)", "class_method_signature": "IO.createDirectories(Path path)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(String path)", "modifiers": "public static", "return": "void", "signature": "void delete(String path)", "full_signature": "public static void delete(String path)", "class_method_signature": "IO.delete(String path)", "testcase": false, "constructor": false}, {"identifier": "createDirectories", "parameters": "(String path)", "modifiers": "public static", "return": "void", "signature": "void createDirectories(String path)", "full_signature": "public static void createDirectories(String path)", "class_method_signature": "IO.createDirectories(String path)", "testcase": false, "constructor": false}, {"identifier": "path", "parameters": "( String location )", "modifiers": "public static", "return": "Path", "signature": "Path path( String location )", "full_signature": "public static Path path( String location )", "class_method_signature": "IO.path( String location )", "testcase": false, "constructor": false}, {"identifier": "exists", "parameters": "(Path path )", "modifiers": "public static", "return": "boolean", "signature": "boolean exists(Path path )", "full_signature": "public static boolean exists(Path path )", "class_method_signature": "IO.exists(Path path )", "testcase": false, "constructor": false}, {"identifier": "exists", "parameters": "(String path )", "modifiers": "public static", "return": "boolean", "signature": "boolean exists(String path )", "full_signature": "public static boolean exists(String path )", "class_method_signature": "IO.exists(String path )", "testcase": false, "constructor": false}, {"identifier": "move", "parameters": "(Path source, Path target)", "modifiers": "public static", "return": "void", "signature": "void move(Path source, Path target)", "full_signature": "public static void move(Path source, Path target)", "class_method_signature": "IO.move(Path source, Path target)", "testcase": false, "constructor": false}, {"identifier": "pressEnterKey", "parameters": "(String pressEnterKeyMessage)", "modifiers": "public static", "return": "void", "signature": "void pressEnterKey(String pressEnterKeyMessage)", "full_signature": "public static void pressEnterKey(String pressEnterKeyMessage)", "class_method_signature": "IO.pressEnterKey(String pressEnterKeyMessage)", "testcase": false, "constructor": false}, {"identifier": "pressEnterKey", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void pressEnterKey()", "full_signature": "public static void pressEnterKey()", "class_method_signature": "IO.pressEnterKey()", "testcase": false, "constructor": false}, {"identifier": "gets", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String gets()", "full_signature": "public static String gets()", "class_method_signature": "IO.gets()", "testcase": false, "constructor": false}], "file": "reflekt/src/main/java/io/advantageous/boon/core/IO.java"}, "focal_method": {"identifier": "eachLine", "parameters": "( Reader reader, EachLine eachLine )", "modifiers": "public static", "return": "void", "body": "public static void eachLine( Reader reader, EachLine eachLine ) {\n\n        try ( BufferedReader bufferedReader = new BufferedReader( reader ) ) {\n\n            eachLine( bufferedReader, eachLine );\n\n        } catch ( Exception ex ) {\n\n            Exceptions.handle( List.class, ex );\n        }\n    }", "signature": "void eachLine( Reader reader, EachLine eachLine )", "full_signature": "public static void eachLine( Reader reader, EachLine eachLine )", "class_method_signature": "IO.eachLine( Reader reader, EachLine eachLine )", "testcase": false, "constructor": false, "invocations": ["eachLine", "handle"]}, "repository": {"repo_id": 33015857, "url": "https://github.com/advantageous/boon", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 18, "size": 6174, "license": "licensed"}}