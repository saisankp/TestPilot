{"test_class": {"identifier": "ExportOptionsTest", "superclass": "", "interfaces": "", "fields": [], "file": "iidm/iidm-converter-api/src/test/java/com/powsybl/iidm/export/ExportOptionsTest.java"}, "test_case": {"identifier": "exportOptionsTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void exportOptionsTest() {\n        ExportOptions options = new ExportOptions();\n\n        Set<String> extensionsList = Sets.newHashSet(\"loadFoo\", \"loadBar\");\n        options.setExtensions(extensionsList);\n        assertEquals(Boolean.FALSE, options.withNoExtension());\n        assertTrue(options.withExtension(\"loadFoo\"));\n\n        assertFalse(options.withAllExtensions());\n        assertEquals(Boolean.FALSE, options.isAnonymized());\n        assertEquals(Boolean.TRUE, options.isIndent());\n        assertEquals(Boolean.TRUE, options.isWithBranchSV());\n\n        options.addExtension(\"loadTest\");\n        assertEquals(3, (int) options.getExtensions().map(Set::size).orElse(-1));\n    }", "signature": "void exportOptionsTest()", "full_signature": "@Test public void exportOptionsTest()", "class_method_signature": "ExportOptionsTest.exportOptionsTest()", "testcase": true, "constructor": false, "invocations": ["newHashSet", "setExtensions", "assertEquals", "withNoExtension", "assertTrue", "withExtension", "assertFalse", "withAllExtensions", "assertEquals", "isAnonymized", "assertEquals", "isIndent", "assertEquals", "isWithBranchSV", "addExtension", "assertEquals", "orElse", "map", "getExtensions"]}, "focal_class": {"identifier": "ExportOptions", "superclass": "extends AbstractOptions<ExportOptions>", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ExportOptions.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ExportOptions.class)", "var_name": "LOGGER"}, {"original_string": "private boolean withBranchSV = true;", "modifier": "private", "type": "boolean", "declarator": "withBranchSV = true", "var_name": "withBranchSV"}, {"original_string": "private boolean indent = true;", "modifier": "private", "type": "boolean", "declarator": "indent = true", "var_name": "indent"}, {"original_string": "private boolean onlyMainCc = false;", "modifier": "private", "type": "boolean", "declarator": "onlyMainCc = false", "var_name": "onlyMainCc"}, {"original_string": "private boolean anonymized = false;", "modifier": "private", "type": "boolean", "declarator": "anonymized = false", "var_name": "anonymized"}, {"original_string": "private TopologyLevel topologyLevel = TopologyLevel.NODE_BREAKER;", "modifier": "private", "type": "TopologyLevel", "declarator": "topologyLevel = TopologyLevel.NODE_BREAKER", "var_name": "topologyLevel"}, {"original_string": "private boolean throwExceptionIfExtensionNotFound = false;", "modifier": "private", "type": "boolean", "declarator": "throwExceptionIfExtensionNotFound = false", "var_name": "throwExceptionIfExtensionNotFound"}, {"original_string": "private String version;", "modifier": "private", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "private Map<String, String> extensionsVersions = new HashMap<>();", "modifier": "private", "type": "Map<String, String>", "declarator": "extensionsVersions = new HashMap<>()", "var_name": "extensionsVersions"}, {"original_string": "private boolean sorted = false;", "modifier": "private", "type": "boolean", "declarator": "sorted = false", "var_name": "sorted"}], "methods": [{"identifier": "ExportOptions", "parameters": "()", "modifiers": "public", "return": "", "signature": " ExportOptions()", "full_signature": "public  ExportOptions()", "class_method_signature": "ExportOptions.ExportOptions()", "testcase": false, "constructor": true}, {"identifier": "ExportOptions", "parameters": "(boolean withBranchSV, boolean indent, boolean onlyMainCc, TopologyLevel topologyLevel, boolean throwExceptionIfExtensionNotFound)", "modifiers": "public", "return": "", "signature": " ExportOptions(boolean withBranchSV, boolean indent, boolean onlyMainCc, TopologyLevel topologyLevel, boolean throwExceptionIfExtensionNotFound)", "full_signature": "public  ExportOptions(boolean withBranchSV, boolean indent, boolean onlyMainCc, TopologyLevel topologyLevel, boolean throwExceptionIfExtensionNotFound)", "class_method_signature": "ExportOptions.ExportOptions(boolean withBranchSV, boolean indent, boolean onlyMainCc, TopologyLevel topologyLevel, boolean throwExceptionIfExtensionNotFound)", "testcase": false, "constructor": true}, {"identifier": "ExportOptions", "parameters": "(boolean withBranchSV, boolean indent, boolean onlyMainCc, TopologyLevel topologyLevel, boolean throwExceptionIfExtensionNotFound, String version)", "modifiers": "public", "return": "", "signature": " ExportOptions(boolean withBranchSV, boolean indent, boolean onlyMainCc, TopologyLevel topologyLevel, boolean throwExceptionIfExtensionNotFound, String version)", "full_signature": "public  ExportOptions(boolean withBranchSV, boolean indent, boolean onlyMainCc, TopologyLevel topologyLevel, boolean throwExceptionIfExtensionNotFound, String version)", "class_method_signature": "ExportOptions.ExportOptions(boolean withBranchSV, boolean indent, boolean onlyMainCc, TopologyLevel topologyLevel, boolean throwExceptionIfExtensionNotFound, String version)", "testcase": false, "constructor": true}, {"identifier": "addExtension", "parameters": "(String extension)", "modifiers": "@Override public", "return": "ExportOptions", "signature": "ExportOptions addExtension(String extension)", "full_signature": "@Override public ExportOptions addExtension(String extension)", "class_method_signature": "ExportOptions.addExtension(String extension)", "testcase": false, "constructor": false}, {"identifier": "isWithBranchSV", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isWithBranchSV()", "full_signature": "public boolean isWithBranchSV()", "class_method_signature": "ExportOptions.isWithBranchSV()", "testcase": false, "constructor": false}, {"identifier": "setWithBranchSV", "parameters": "(boolean withBranchSV)", "modifiers": "public", "return": "ExportOptions", "signature": "ExportOptions setWithBranchSV(boolean withBranchSV)", "full_signature": "public ExportOptions setWithBranchSV(boolean withBranchSV)", "class_method_signature": "ExportOptions.setWithBranchSV(boolean withBranchSV)", "testcase": false, "constructor": false}, {"identifier": "isIndent", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isIndent()", "full_signature": "public boolean isIndent()", "class_method_signature": "ExportOptions.isIndent()", "testcase": false, "constructor": false}, {"identifier": "setIndent", "parameters": "(boolean indent)", "modifiers": "public", "return": "ExportOptions", "signature": "ExportOptions setIndent(boolean indent)", "full_signature": "public ExportOptions setIndent(boolean indent)", "class_method_signature": "ExportOptions.setIndent(boolean indent)", "testcase": false, "constructor": false}, {"identifier": "isOnlyMainCc", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isOnlyMainCc()", "full_signature": "public boolean isOnlyMainCc()", "class_method_signature": "ExportOptions.isOnlyMainCc()", "testcase": false, "constructor": false}, {"identifier": "setOnlyMainCc", "parameters": "(boolean onlyMainCc)", "modifiers": "public", "return": "ExportOptions", "signature": "ExportOptions setOnlyMainCc(boolean onlyMainCc)", "full_signature": "public ExportOptions setOnlyMainCc(boolean onlyMainCc)", "class_method_signature": "ExportOptions.setOnlyMainCc(boolean onlyMainCc)", "testcase": false, "constructor": false}, {"identifier": "isAnonymized", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isAnonymized()", "full_signature": "public boolean isAnonymized()", "class_method_signature": "ExportOptions.isAnonymized()", "testcase": false, "constructor": false}, {"identifier": "setAnonymized", "parameters": "(boolean anonymized)", "modifiers": "public", "return": "ExportOptions", "signature": "ExportOptions setAnonymized(boolean anonymized)", "full_signature": "public ExportOptions setAnonymized(boolean anonymized)", "class_method_signature": "ExportOptions.setAnonymized(boolean anonymized)", "testcase": false, "constructor": false}, {"identifier": "getTopologyLevel", "parameters": "()", "modifiers": "public", "return": "TopologyLevel", "signature": "TopologyLevel getTopologyLevel()", "full_signature": "public TopologyLevel getTopologyLevel()", "class_method_signature": "ExportOptions.getTopologyLevel()", "testcase": false, "constructor": false}, {"identifier": "setTopologyLevel", "parameters": "(TopologyLevel topologyLevel)", "modifiers": "public", "return": "ExportOptions", "signature": "ExportOptions setTopologyLevel(TopologyLevel topologyLevel)", "full_signature": "public ExportOptions setTopologyLevel(TopologyLevel topologyLevel)", "class_method_signature": "ExportOptions.setTopologyLevel(TopologyLevel topologyLevel)", "testcase": false, "constructor": false}, {"identifier": "setExtensions", "parameters": "(Set<String> extensions)", "modifiers": "@Override public", "return": "ExportOptions", "signature": "ExportOptions setExtensions(Set<String> extensions)", "full_signature": "@Override public ExportOptions setExtensions(Set<String> extensions)", "class_method_signature": "ExportOptions.setExtensions(Set<String> extensions)", "testcase": false, "constructor": false}, {"identifier": "isThrowExceptionIfExtensionNotFound", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isThrowExceptionIfExtensionNotFound()", "full_signature": "public boolean isThrowExceptionIfExtensionNotFound()", "class_method_signature": "ExportOptions.isThrowExceptionIfExtensionNotFound()", "testcase": false, "constructor": false}, {"identifier": "setThrowExceptionIfExtensionNotFound", "parameters": "(boolean throwException)", "modifiers": "public", "return": "ExportOptions", "signature": "ExportOptions setThrowExceptionIfExtensionNotFound(boolean throwException)", "full_signature": "public ExportOptions setThrowExceptionIfExtensionNotFound(boolean throwException)", "class_method_signature": "ExportOptions.setThrowExceptionIfExtensionNotFound(boolean throwException)", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "ExportOptions.getVersion()", "testcase": false, "constructor": false}, {"identifier": "setVersion", "parameters": "(String version)", "modifiers": "public", "return": "ExportOptions", "signature": "ExportOptions setVersion(String version)", "full_signature": "public ExportOptions setVersion(String version)", "class_method_signature": "ExportOptions.setVersion(String version)", "testcase": false, "constructor": false}, {"identifier": "addExtensionVersion", "parameters": "(String extensionName, String extensionVersion)", "modifiers": "public", "return": "ExportOptions", "signature": "ExportOptions addExtensionVersion(String extensionName, String extensionVersion)", "full_signature": "public ExportOptions addExtensionVersion(String extensionName, String extensionVersion)", "class_method_signature": "ExportOptions.addExtensionVersion(String extensionName, String extensionVersion)", "testcase": false, "constructor": false}, {"identifier": "getExtensionVersion", "parameters": "(String extensionName)", "modifiers": "public", "return": "Optional<String>", "signature": "Optional<String> getExtensionVersion(String extensionName)", "full_signature": "public Optional<String> getExtensionVersion(String extensionName)", "class_method_signature": "ExportOptions.getExtensionVersion(String extensionName)", "testcase": false, "constructor": false}, {"identifier": "isSorted", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isSorted()", "full_signature": "public boolean isSorted()", "class_method_signature": "ExportOptions.isSorted()", "testcase": false, "constructor": false}, {"identifier": "setSorted", "parameters": "(boolean sorted)", "modifiers": "public", "return": "ExportOptions", "signature": "ExportOptions setSorted(boolean sorted)", "full_signature": "public ExportOptions setSorted(boolean sorted)", "class_method_signature": "ExportOptions.setSorted(boolean sorted)", "testcase": false, "constructor": false}], "file": "iidm/iidm-converter-api/src/main/java/com/powsybl/iidm/export/ExportOptions.java"}, "focal_method": {"identifier": "ExportOptions", "parameters": "()", "modifiers": "public", "return": "", "body": "public ExportOptions() {\n    }", "signature": " ExportOptions()", "full_signature": "public  ExportOptions()", "class_method_signature": "ExportOptions.ExportOptions()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}