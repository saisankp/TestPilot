{"test_class": {"identifier": "UserFacadeTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/net/adamcin/oakpal/core/jcrfacade/security/user/UserFacadeTest.java"}, "test_case": {"identifier": "testIsDisabled", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIsDisabled() throws Exception {\n        User delegate = mock(User.class);\n        UserFacade facade = getFacade(delegate);\n        when(delegate.isDisabled()).thenReturn(true);\n        assertTrue(\"is true\", facade.isDisabled());\n    }", "signature": "void testIsDisabled()", "full_signature": "@Test public void testIsDisabled()", "class_method_signature": "UserFacadeTest.testIsDisabled()", "testcase": true, "constructor": false, "invocations": ["mock", "getFacade", "thenReturn", "when", "isDisabled", "assertTrue", "isDisabled"]}, "focal_class": {"identifier": "UserFacade", "superclass": "extends AuthorizableFacade<User>", "interfaces": "implements User", "fields": [], "methods": [{"identifier": "UserFacade", "parameters": "(final @NotNull User delegate)", "modifiers": "@SuppressWarnings(\"WeakerAccess\") public", "return": "", "signature": " UserFacade(final @NotNull User delegate)", "full_signature": "@SuppressWarnings(\"WeakerAccess\") public  UserFacade(final @NotNull User delegate)", "class_method_signature": "UserFacade.UserFacade(final @NotNull User delegate)", "testcase": false, "constructor": true}, {"identifier": "isAdmin", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isAdmin()", "full_signature": "@Override public boolean isAdmin()", "class_method_signature": "UserFacade.isAdmin()", "testcase": false, "constructor": false}, {"identifier": "isSystemUser", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSystemUser()", "full_signature": "@Override public boolean isSystemUser()", "class_method_signature": "UserFacade.isSystemUser()", "testcase": false, "constructor": false}, {"identifier": "getCredentials", "parameters": "()", "modifiers": "@Override public", "return": "Credentials", "signature": "Credentials getCredentials()", "full_signature": "@Override public Credentials getCredentials()", "class_method_signature": "UserFacade.getCredentials()", "testcase": false, "constructor": false}, {"identifier": "getImpersonation", "parameters": "()", "modifiers": "@Override public", "return": "Impersonation", "signature": "Impersonation getImpersonation()", "full_signature": "@Override public Impersonation getImpersonation()", "class_method_signature": "UserFacade.getImpersonation()", "testcase": false, "constructor": false}, {"identifier": "isDisabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDisabled()", "full_signature": "@Override public boolean isDisabled()", "class_method_signature": "UserFacade.isDisabled()", "testcase": false, "constructor": false}, {"identifier": "getDisabledReason", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getDisabledReason()", "full_signature": "@Override public String getDisabledReason()", "class_method_signature": "UserFacade.getDisabledReason()", "testcase": false, "constructor": false}, {"identifier": "disable", "parameters": "(final String reason)", "modifiers": "@Override public", "return": "void", "signature": "void disable(final String reason)", "full_signature": "@Override public void disable(final String reason)", "class_method_signature": "UserFacade.disable(final String reason)", "testcase": false, "constructor": false}, {"identifier": "changePassword", "parameters": "(final String password)", "modifiers": "@Override public", "return": "void", "signature": "void changePassword(final String password)", "full_signature": "@Override public void changePassword(final String password)", "class_method_signature": "UserFacade.changePassword(final String password)", "testcase": false, "constructor": false}, {"identifier": "changePassword", "parameters": "(final String password, final String oldPassword)", "modifiers": "@Override public", "return": "void", "signature": "void changePassword(final String password, final String oldPassword)", "full_signature": "@Override public void changePassword(final String password, final String oldPassword)", "class_method_signature": "UserFacade.changePassword(final String password, final String oldPassword)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/jcrfacade/security/user/UserFacade.java"}, "focal_method": {"identifier": "isDisabled", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isDisabled() throws RepositoryException {\n        return delegate.isDisabled();\n    }", "signature": "boolean isDisabled()", "full_signature": "@Override public boolean isDisabled()", "class_method_signature": "UserFacade.isDisabled()", "testcase": false, "constructor": false, "invocations": ["isDisabled"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}