{"test_class": {"identifier": "ExtractorNameTest", "superclass": "", "interfaces": "", "fields": [], "file": "link-move/src/test/java/com/nhl/link/move/extractor/model/ExtractorNameTest.java"}, "test_case": {"identifier": "testHashCode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testHashCode() {\n\n\t\tExtractorName n1 = ExtractorName.create(\"l1\", \"n1\");\n\t\tExtractorName n2 = ExtractorName.create(\"l2\", \"n1\");\n\t\tExtractorName n3 = ExtractorName.create(\"l1\", \"n3\");\n\t\tExtractorName n4 = ExtractorName.create(\"l2\", \"n2\");\n\t\tExtractorName n5 = ExtractorName.create(\"l1\", \"n1\");\n\n\t\tassertNotEquals(n1.hashCode(), n2.hashCode());\n\t\tassertNotEquals(n1.hashCode(), n3.hashCode());\n\t\tassertNotEquals(n1.hashCode(), n4.hashCode());\n\t\tassertEquals(n1.hashCode(), n5.hashCode());\n\t}", "signature": "void testHashCode()", "full_signature": "@Test public void testHashCode()", "class_method_signature": "ExtractorNameTest.testHashCode()", "testcase": true, "constructor": false, "invocations": ["create", "create", "create", "create", "create", "assertNotEquals", "hashCode", "hashCode", "assertNotEquals", "hashCode", "hashCode", "assertNotEquals", "hashCode", "hashCode", "assertEquals", "hashCode", "hashCode"]}, "focal_class": {"identifier": "ExtractorName", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String location;", "modifier": "private final", "type": "String", "declarator": "location", "var_name": "location"}, {"original_string": "private final String name;", "modifier": "private final", "type": "String", "declarator": "name", "var_name": "name"}], "methods": [{"identifier": "create", "parameters": "(String location, String name)", "modifiers": "public static", "return": "ExtractorName", "signature": "ExtractorName create(String location, String name)", "full_signature": "public static ExtractorName create(String location, String name)", "class_method_signature": "ExtractorName.create(String location, String name)", "testcase": false, "constructor": false}, {"identifier": "ExtractorName", "parameters": "(String location, String name)", "modifiers": "private", "return": "", "signature": " ExtractorName(String location, String name)", "full_signature": "private  ExtractorName(String location, String name)", "class_method_signature": "ExtractorName.ExtractorName(String location, String name)", "testcase": false, "constructor": true}, {"identifier": "getLocation", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLocation()", "full_signature": "public String getLocation()", "class_method_signature": "ExtractorName.getLocation()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "ExtractorName.getName()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object object)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object object)", "full_signature": "@Override public boolean equals(Object object)", "class_method_signature": "ExtractorName.equals(Object object)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ExtractorName.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "ExtractorName.toString()", "testcase": false, "constructor": false}], "file": "link-move/src/main/java/com/nhl/link/move/extractor/model/ExtractorName.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n\tpublic int hashCode() {\n\t\tHashCodeBuilder builder = new HashCodeBuilder(13, 19);\n\t\treturn builder.append(location.hashCode()).append(name.hashCode()).toHashCode();\n\t}", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "ExtractorName.hashCode()", "testcase": false, "constructor": false, "invocations": ["toHashCode", "append", "append", "hashCode", "hashCode"]}, "repository": {"repo_id": 22876447, "url": "https://github.com/nhl/link-move", "stars": 25, "created": "8/12/2014 12:27:10 PM +00:00", "updates": "2019-12-01T17:30:35+00:00", "fork": "False", "license": "licensed"}}