{"test_class": {"identifier": "CommandExecutionTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Command command;", "modifier": "private", "type": "Command", "declarator": "command", "var_name": "command"}], "file": "computation/src/test/java/com/powsybl/computation/CommandExecutionTest.java"}, "test_case": {"identifier": "getExecutionVariablesTest3", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getExecutionVariablesTest3() {\n        // variables and overloadedVariables merge\n        Map<String, String> executionVariables = CommandExecution.getExecutionVariables(ImmutableMap.of(\"a\", \"1\", \"b\", \"2\"),\n                                                                                        new CommandExecution(command, 1, 0, null, ImmutableMap.of(\"c\", \"3\")));\n        assertEquals(ImmutableMap.of(\"a\", \"1\", \"b\", \"2\",  \"c\", \"3\"), executionVariables);\n    }", "signature": "void getExecutionVariablesTest3()", "full_signature": "@Test public void getExecutionVariablesTest3()", "class_method_signature": "CommandExecutionTest.getExecutionVariablesTest3()", "testcase": true, "constructor": false, "invocations": ["getExecutionVariables", "of", "of", "assertEquals", "of"]}, "focal_class": {"identifier": "CommandExecution", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Command command;", "modifier": "private final", "type": "Command", "declarator": "command", "var_name": "command"}, {"original_string": "private final int executionCount;", "modifier": "private final", "type": "int", "declarator": "executionCount", "var_name": "executionCount"}, {"original_string": "private final int priority;", "modifier": "private final", "type": "int", "declarator": "priority", "var_name": "priority"}, {"original_string": "private final Map<String, String> tags;", "modifier": "private final", "type": "Map<String, String>", "declarator": "tags", "var_name": "tags"}, {"original_string": "private final Map<String, String> overloadedVariables;", "modifier": "private final", "type": "Map<String, String>", "declarator": "overloadedVariables", "var_name": "overloadedVariables"}], "methods": [{"identifier": "getExecutionVariables", "parameters": "(Map<String, String> variables, CommandExecution commandExecution)", "modifiers": "public static", "return": "Map<String, String>", "signature": "Map<String, String> getExecutionVariables(Map<String, String> variables, CommandExecution commandExecution)", "full_signature": "public static Map<String, String> getExecutionVariables(Map<String, String> variables, CommandExecution commandExecution)", "class_method_signature": "CommandExecution.getExecutionVariables(Map<String, String> variables, CommandExecution commandExecution)", "testcase": false, "constructor": false}, {"identifier": "CommandExecution", "parameters": "(Command command, int executionCount)", "modifiers": "public", "return": "", "signature": " CommandExecution(Command command, int executionCount)", "full_signature": "public  CommandExecution(Command command, int executionCount)", "class_method_signature": "CommandExecution.CommandExecution(Command command, int executionCount)", "testcase": false, "constructor": true}, {"identifier": "CommandExecution", "parameters": "(Command command, int executionCount, int priority)", "modifiers": "public", "return": "", "signature": " CommandExecution(Command command, int executionCount, int priority)", "full_signature": "public  CommandExecution(Command command, int executionCount, int priority)", "class_method_signature": "CommandExecution.CommandExecution(Command command, int executionCount, int priority)", "testcase": false, "constructor": true}, {"identifier": "CommandExecution", "parameters": "(Command command, int executionCount, int priority, Map<String, String> tags)", "modifiers": "public", "return": "", "signature": " CommandExecution(Command command, int executionCount, int priority, Map<String, String> tags)", "full_signature": "public  CommandExecution(Command command, int executionCount, int priority, Map<String, String> tags)", "class_method_signature": "CommandExecution.CommandExecution(Command command, int executionCount, int priority, Map<String, String> tags)", "testcase": false, "constructor": true}, {"identifier": "CommandExecution", "parameters": "(Command command, int executionCount, int priority, Map<String, String> tags, Map<String, String> overloadedVariables)", "modifiers": "public", "return": "", "signature": " CommandExecution(Command command, int executionCount, int priority, Map<String, String> tags, Map<String, String> overloadedVariables)", "full_signature": "public  CommandExecution(Command command, int executionCount, int priority, Map<String, String> tags, Map<String, String> overloadedVariables)", "class_method_signature": "CommandExecution.CommandExecution(Command command, int executionCount, int priority, Map<String, String> tags, Map<String, String> overloadedVariables)", "testcase": false, "constructor": true}, {"identifier": "getCommand", "parameters": "()", "modifiers": "public", "return": "Command", "signature": "Command getCommand()", "full_signature": "public Command getCommand()", "class_method_signature": "CommandExecution.getCommand()", "testcase": false, "constructor": false}, {"identifier": "getExecutionCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getExecutionCount()", "full_signature": "public int getExecutionCount()", "class_method_signature": "CommandExecution.getExecutionCount()", "testcase": false, "constructor": false}, {"identifier": "getPriority", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPriority()", "full_signature": "public int getPriority()", "class_method_signature": "CommandExecution.getPriority()", "testcase": false, "constructor": false}, {"identifier": "getTags", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getTags()", "full_signature": "public Map<String, String> getTags()", "class_method_signature": "CommandExecution.getTags()", "testcase": false, "constructor": false}, {"identifier": "getOverloadedVariables", "parameters": "()", "modifiers": "public", "return": "Map<String, String>", "signature": "Map<String, String> getOverloadedVariables()", "full_signature": "public Map<String, String> getOverloadedVariables()", "class_method_signature": "CommandExecution.getOverloadedVariables()", "testcase": false, "constructor": false}], "file": "computation/src/main/java/com/powsybl/computation/CommandExecution.java"}, "focal_method": {"identifier": "getExecutionVariables", "parameters": "(Map<String, String> variables, CommandExecution commandExecution)", "modifiers": "public static", "return": "Map<String, String>", "body": "public static Map<String, String> getExecutionVariables(Map<String, String> variables, CommandExecution commandExecution) {\n        Objects.requireNonNull(variables);\n        Objects.requireNonNull(commandExecution);\n        if (commandExecution.getOverloadedVariables() != null) {\n            return ImmutableMap.<String, String>builder()\n                    .putAll(variables)\n                    .putAll(commandExecution.getOverloadedVariables())\n                    .build();\n\n        }\n        return variables;\n    }", "signature": "Map<String, String> getExecutionVariables(Map<String, String> variables, CommandExecution commandExecution)", "full_signature": "public static Map<String, String> getExecutionVariables(Map<String, String> variables, CommandExecution commandExecution)", "class_method_signature": "CommandExecution.getExecutionVariables(Map<String, String> variables, CommandExecution commandExecution)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "requireNonNull", "getOverloadedVariables", "build", "putAll", "putAll", "builder", "getOverloadedVariables"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}