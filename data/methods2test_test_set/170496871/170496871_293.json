{"test_class": {"identifier": "IteratorWithConcurrentModificationCheckerTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/ml/src/test/java/org/apache/ignite/ml/dataset/impl/cache/util/IteratorWithConcurrentModificationCheckerTest.java"}, "test_case": {"identifier": "testNextWhenIteratorHasLessElementsThanExpected", "parameters": "()", "modifiers": "@Test(expected = ConcurrentModificationException.class) public", "return": "void", "body": "@Test(expected = ConcurrentModificationException.class)\n    public void testNextWhenIteratorHasLessElementsThanExpected() {\n        List<Integer> list = Arrays.asList(1, 2, 3);\n\n        Iterator<Integer> iter = new IteratorWithConcurrentModificationChecker<>(list.iterator(), 4, \"Exception\");\n\n        assertEquals(Integer.valueOf(1), iter.next());\n        assertEquals(Integer.valueOf(2), iter.next());\n        assertEquals(Integer.valueOf(3), iter.next());\n\n        iter.next(); // Should throw an exception.\n    }", "signature": "void testNextWhenIteratorHasLessElementsThanExpected()", "full_signature": "@Test(expected = ConcurrentModificationException.class) public void testNextWhenIteratorHasLessElementsThanExpected()", "class_method_signature": "IteratorWithConcurrentModificationCheckerTest.testNextWhenIteratorHasLessElementsThanExpected()", "testcase": true, "constructor": false, "invocations": ["asList", "iterator", "assertEquals", "valueOf", "next", "assertEquals", "valueOf", "next", "assertEquals", "valueOf", "next", "next"]}, "focal_class": {"identifier": "IteratorWithConcurrentModificationChecker", "superclass": "", "interfaces": "implements Iterator<T>", "fields": [{"original_string": "private final Iterator<T> delegate;", "modifier": "private final", "type": "Iterator<T>", "declarator": "delegate", "var_name": "delegate"}, {"original_string": "private long expCnt;", "modifier": "private", "type": "long", "declarator": "expCnt", "var_name": "expCnt"}, {"original_string": "private final String eMsg;", "modifier": "private final", "type": "String", "declarator": "eMsg", "var_name": "eMsg"}], "methods": [{"identifier": "IteratorWithConcurrentModificationChecker", "parameters": "(Iterator<T> delegate, long expCnt, String eMsg)", "modifiers": "public", "return": "", "signature": " IteratorWithConcurrentModificationChecker(Iterator<T> delegate, long expCnt, String eMsg)", "full_signature": "public  IteratorWithConcurrentModificationChecker(Iterator<T> delegate, long expCnt, String eMsg)", "class_method_signature": "IteratorWithConcurrentModificationChecker.IteratorWithConcurrentModificationChecker(Iterator<T> delegate, long expCnt, String eMsg)", "testcase": false, "constructor": true}, {"identifier": "hasNext", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasNext()", "full_signature": "@Override public boolean hasNext()", "class_method_signature": "IteratorWithConcurrentModificationChecker.hasNext()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "T", "signature": "T next()", "full_signature": "@Override public T next()", "class_method_signature": "IteratorWithConcurrentModificationChecker.next()", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/dataset/impl/cache/util/IteratorWithConcurrentModificationChecker.java"}, "focal_method": {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "T", "body": "@Override public T next() {\n        try {\n            T next = delegate.next();\n\n            if (expCnt == 0)\n                throw new ConcurrentModificationException(eMsg);\n\n            expCnt--;\n\n            return next;\n        }\n        catch (NoSuchElementException e) {\n            if (expCnt == 0)\n                throw e;\n            else\n                throw new ConcurrentModificationException(eMsg);\n        }\n    }", "signature": "T next()", "full_signature": "@Override public T next()", "class_method_signature": "IteratorWithConcurrentModificationChecker.next()", "testcase": false, "constructor": false, "invocations": ["next"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}