{"test_class": {"identifier": "MetricsHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String URI_METRICS_ROOT = \"/_metrics\";", "modifier": "private static final", "type": "String", "declarator": "URI_METRICS_ROOT = \"/_metrics\"", "var_name": "URI_METRICS_ROOT"}, {"original_string": "private static final String URI_METRICS_DATABASE = \"/foo/_metrics\";", "modifier": "private static final", "type": "String", "declarator": "URI_METRICS_DATABASE = \"/foo/_metrics\"", "var_name": "URI_METRICS_DATABASE"}, {"original_string": "private static final String URI_METRICS_COLLECTION = \"/foo/bar/_metrics\";", "modifier": "private static final", "type": "String", "declarator": "URI_METRICS_COLLECTION = \"/foo/bar/_metrics\"", "var_name": "URI_METRICS_COLLECTION"}, {"original_string": "MetricsHandler handler;", "modifier": "", "type": "MetricsHandler", "declarator": "handler", "var_name": "handler"}], "file": "mongodb/src/test/java/org/restheart/mongodb/handlers/metrics/MetricsHandlerTest.java"}, "test_case": {"identifier": "testMetricsRegistryForRequestToRoot", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMetricsRegistryForRequestToRoot() {\n        var requestContext = createRequest(URI_METRICS_ROOT);\n        handler.getMetricsRegistry(requestContext, ROOT);\n        verify(handler.metrics, times(1)).registry();\n    }", "signature": "void testMetricsRegistryForRequestToRoot()", "full_signature": "@Test public void testMetricsRegistryForRequestToRoot()", "class_method_signature": "MetricsHandlerTest.testMetricsRegistryForRequestToRoot()", "testcase": true, "constructor": false, "invocations": ["createRequest", "getMetricsRegistry", "registry", "verify", "times"]}, "focal_class": {"identifier": "MetricsHandler", "superclass": "extends PipelinedHandler", "interfaces": "", "fields": [{"original_string": "@VisibleForTesting\n    MongoServiceConfiguration configuration = MongoServiceConfiguration.get();", "modifier": "@VisibleForTesting", "type": "MongoServiceConfiguration", "declarator": "configuration = MongoServiceConfiguration.get()", "var_name": "configuration"}, {"original_string": "@VisibleForTesting\n    SharedMetricRegistryProxy metrics = new SharedMetricRegistryProxy();", "modifier": "@VisibleForTesting", "type": "SharedMetricRegistryProxy", "declarator": "metrics = new SharedMetricRegistryProxy()", "var_name": "metrics"}], "methods": [{"identifier": "MetricsHandler", "parameters": "()", "modifiers": "public", "return": "", "signature": " MetricsHandler()", "full_signature": "public  MetricsHandler()", "class_method_signature": "MetricsHandler.MetricsHandler()", "testcase": false, "constructor": true}, {"identifier": "MetricsHandler", "parameters": "(PipelinedHandler next)", "modifiers": "public", "return": "", "signature": " MetricsHandler(PipelinedHandler next)", "full_signature": "public  MetricsHandler(PipelinedHandler next)", "class_method_signature": "MetricsHandler.MetricsHandler(PipelinedHandler next)", "testcase": false, "constructor": true}, {"identifier": "getMetricsLevelForRequest", "parameters": "(MongoRequest request)", "modifiers": "", "return": "METRICS_GATHERING_LEVEL", "signature": "METRICS_GATHERING_LEVEL getMetricsLevelForRequest(MongoRequest request)", "full_signature": " METRICS_GATHERING_LEVEL getMetricsLevelForRequest(MongoRequest request)", "class_method_signature": "MetricsHandler.getMetricsLevelForRequest(MongoRequest request)", "testcase": false, "constructor": false}, {"identifier": "isFilledAndNotMetrics", "parameters": "(String dbOrCollectionName)", "modifiers": "private", "return": "boolean", "signature": "boolean isFilledAndNotMetrics(String dbOrCollectionName)", "full_signature": "private boolean isFilledAndNotMetrics(String dbOrCollectionName)", "class_method_signature": "MetricsHandler.isFilledAndNotMetrics(String dbOrCollectionName)", "testcase": false, "constructor": false}, {"identifier": "getMetricsRegistry", "parameters": "(MongoRequest request, METRICS_GATHERING_LEVEL metricsLevel)", "modifiers": "", "return": "MetricRegistry", "signature": "MetricRegistry getMetricsRegistry(MongoRequest request, METRICS_GATHERING_LEVEL metricsLevel)", "full_signature": " MetricRegistry getMetricsRegistry(MongoRequest request, METRICS_GATHERING_LEVEL metricsLevel)", "class_method_signature": "MetricsHandler.getMetricsRegistry(MongoRequest request, METRICS_GATHERING_LEVEL metricsLevel)", "testcase": false, "constructor": false}, {"identifier": "handleRequest", "parameters": "(HttpServerExchange exchange)", "modifiers": "@Override public", "return": "void", "signature": "void handleRequest(HttpServerExchange exchange)", "full_signature": "@Override public void handleRequest(HttpServerExchange exchange)", "class_method_signature": "MetricsHandler.handleRequest(HttpServerExchange exchange)", "testcase": false, "constructor": false}], "file": "mongodb/src/main/java/org/restheart/mongodb/handlers/metrics/MetricsHandler.java"}, "focal_method": {"identifier": "getMetricsRegistry", "parameters": "(MongoRequest request, METRICS_GATHERING_LEVEL metricsLevel)", "modifiers": "", "return": "MetricRegistry", "body": "MetricRegistry getMetricsRegistry(MongoRequest request, METRICS_GATHERING_LEVEL metricsLevel) {\n        switch (metricsLevel) {\n            case ROOT:\n                return metrics.registry();\n            case DATABASE:\n                return metrics.registry(request.getDBName());\n            case COLLECTION:\n                return metrics.registry(request.getDBName(), request.getCollectionName());\n            default:\n                return null;\n        }\n    }", "signature": "MetricRegistry getMetricsRegistry(MongoRequest request, METRICS_GATHERING_LEVEL metricsLevel)", "full_signature": " MetricRegistry getMetricsRegistry(MongoRequest request, METRICS_GATHERING_LEVEL metricsLevel)", "class_method_signature": "MetricsHandler.getMetricsRegistry(MongoRequest request, METRICS_GATHERING_LEVEL metricsLevel)", "testcase": false, "constructor": false, "invocations": ["registry", "registry", "getDBName", "registry", "getDBName", "getCollectionName"]}, "repository": {"repo_id": 26722690, "url": "https://github.com/SoftInstigate/restheart", "stars": 582, "created": "11/16/2014 6:01:01 PM +00:00", "updates": "2020-01-18T15:31:59+00:00", "fork": "False", "license": "licensed"}}