{"test_class": {"identifier": "FileNameProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String WILMA_MESSAGE_LOGGER_ID = \"wilma_message_logger_id\";", "modifier": "private static final", "type": "String", "declarator": "WILMA_MESSAGE_LOGGER_ID = \"wilma_message_logger_id\"", "var_name": "WILMA_MESSAGE_LOGGER_ID"}, {"original_string": "@Mock(answer = Answers.RETURNS_DEEP_STUBS)\n    private LogFilePathProvider logFilePathProvider;", "modifier": "@Mock(answer = Answers.RETURNS_DEEP_STUBS)\n    private", "type": "LogFilePathProvider", "declarator": "logFilePathProvider", "var_name": "logFilePathProvider"}, {"original_string": "@Mock\n    private WilmaHttpRequest request;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private WilmaHttpResponse response;", "modifier": "@Mock\n    private", "type": "WilmaHttpResponse", "declarator": "response", "var_name": "response"}, {"original_string": "@Mock\n    private Path path;", "modifier": "@Mock\n    private", "type": "Path", "declarator": "path", "var_name": "path"}, {"original_string": "@InjectMocks\n    private FileNameProvider underTest;", "modifier": "@InjectMocks\n    private", "type": "FileNameProvider", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-indexing/src/test/java/com/epam/wilma/indexing/jms/helper/FileNameProviderTest.java"}, "test_case": {"identifier": "testGetFileNameShouldReturnResponseFileName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetFileNameShouldReturnResponseFileName() {\n        //GIVEN\n        given(response.getWilmaMessageLoggerId()).willReturn(WILMA_MESSAGE_LOGGER_ID + \"resp\");\n        //WHEN\n        String actual = underTest.getFileName(response);\n        //THEN\n        assertEquals(actual, \"path/\" + WILMA_MESSAGE_LOGGER_ID + \"resp.txt\");\n    }", "signature": "void testGetFileNameShouldReturnResponseFileName()", "full_signature": "@Test public void testGetFileNameShouldReturnResponseFileName()", "class_method_signature": "FileNameProviderTest.testGetFileNameShouldReturnResponseFileName()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getWilmaMessageLoggerId", "getFileName", "assertEquals"]}, "focal_class": {"identifier": "FileNameProvider", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String NAME_ENDING = \".txt\";", "modifier": "private static final", "type": "String", "declarator": "NAME_ENDING = \".txt\"", "var_name": "NAME_ENDING"}, {"original_string": "@Autowired\n    private LogFilePathProvider logFilePathProvider;", "modifier": "@Autowired\n    private", "type": "LogFilePathProvider", "declarator": "logFilePathProvider", "var_name": "logFilePathProvider"}], "methods": [{"identifier": "getFileName", "parameters": "(final WilmaHttpRequest request)", "modifiers": "public", "return": "String", "signature": "String getFileName(final WilmaHttpRequest request)", "full_signature": "public String getFileName(final WilmaHttpRequest request)", "class_method_signature": "FileNameProvider.getFileName(final WilmaHttpRequest request)", "testcase": false, "constructor": false}, {"identifier": "getFileName", "parameters": "(final WilmaHttpResponse response)", "modifiers": "public", "return": "String", "signature": "String getFileName(final WilmaHttpResponse response)", "full_signature": "public String getFileName(final WilmaHttpResponse response)", "class_method_signature": "FileNameProvider.getFileName(final WilmaHttpResponse response)", "testcase": false, "constructor": false}, {"identifier": "getPath", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getPath()", "full_signature": "private String getPath()", "class_method_signature": "FileNameProvider.getPath()", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-indexing/src/main/java/com/epam/wilma/indexing/jms/helper/FileNameProvider.java"}, "focal_method": {"identifier": "getFileName", "parameters": "(final WilmaHttpRequest request)", "modifiers": "public", "return": "String", "body": "public String getFileName(final WilmaHttpRequest request) {\n        String wilmaMessageLoggerId = request.getWilmaMessageLoggerId();\n        String path = getPath();\n        return path + \"/\" + wilmaMessageLoggerId + NAME_ENDING;\n    }", "signature": "String getFileName(final WilmaHttpRequest request)", "full_signature": "public String getFileName(final WilmaHttpRequest request)", "class_method_signature": "FileNameProvider.getFileName(final WilmaHttpRequest request)", "testcase": false, "constructor": false, "invocations": ["getWilmaMessageLoggerId", "getPath"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}