{"test_class": {"identifier": "MapRepositoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MapRepository<Object> mapRepository;", "modifier": "private", "type": "MapRepository<Object>", "declarator": "mapRepository", "var_name": "mapRepository"}], "file": "smartparam-engine/src/test/java/org/smartparam/engine/core/repository/MapRepositoryTest.java"}, "test_case": {"identifier": "shouldThrowExceptionWhenRegisteringDuplicateEntryUsingRegisterUnique", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldThrowExceptionWhenRegisteringDuplicateEntryUsingRegisterUnique() {\n        // given\n        mapRepository = new MapRepository<Object>(Object.class, new LinkedHashMap<RepositoryObjectKey, Object>());\n        mapRepository.registerUnique(\"TEST\", new Object());\n\n        // when\n        catchException(mapRepository).registerUnique(\"TEST\", new Object());\n\n        /// then\n        assertThat(caughtException()).isInstanceOf(NonUniqueItemRegisteredException.class);\n    }", "signature": "void shouldThrowExceptionWhenRegisteringDuplicateEntryUsingRegisterUnique()", "full_signature": "@Test public void shouldThrowExceptionWhenRegisteringDuplicateEntryUsingRegisterUnique()", "class_method_signature": "MapRepositoryTest.shouldThrowExceptionWhenRegisteringDuplicateEntryUsingRegisterUnique()", "testcase": true, "constructor": false, "invocations": ["registerUnique", "registerUnique", "catchException", "isInstanceOf", "assertThat", "caughtException"]}, "focal_class": {"identifier": "MapRepository", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(MapRepository.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(MapRepository.class)", "var_name": "logger"}, {"original_string": "private final Class<?> containedClass;", "modifier": "private final", "type": "Class<?>", "declarator": "containedClass", "var_name": "containedClass"}, {"original_string": "private final Map<RepositoryObjectKey, V> repositoryMap;", "modifier": "private final", "type": "Map<RepositoryObjectKey, V>", "declarator": "repositoryMap", "var_name": "repositoryMap"}], "methods": [{"identifier": "MapRepository", "parameters": "(Class<?> containedClass)", "modifiers": "public", "return": "", "signature": " MapRepository(Class<?> containedClass)", "full_signature": "public  MapRepository(Class<?> containedClass)", "class_method_signature": "MapRepository.MapRepository(Class<?> containedClass)", "testcase": false, "constructor": true}, {"identifier": "MapRepository", "parameters": "(Class<?> containedClass, Map<RepositoryObjectKey, V> repositoryMapInstance)", "modifiers": "public", "return": "", "signature": " MapRepository(Class<?> containedClass, Map<RepositoryObjectKey, V> repositoryMapInstance)", "full_signature": "public  MapRepository(Class<?> containedClass, Map<RepositoryObjectKey, V> repositoryMapInstance)", "class_method_signature": "MapRepository.MapRepository(Class<?> containedClass, Map<RepositoryObjectKey, V> repositoryMapInstance)", "testcase": false, "constructor": true}, {"identifier": "contains", "parameters": "(RepositoryObjectKey key)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(RepositoryObjectKey key)", "full_signature": "public boolean contains(RepositoryObjectKey key)", "class_method_signature": "MapRepository.contains(RepositoryObjectKey key)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(String key)", "modifiers": "public", "return": "boolean", "signature": "boolean contains(String key)", "full_signature": "public boolean contains(String key)", "class_method_signature": "MapRepository.contains(String key)", "testcase": false, "constructor": false}, {"identifier": "getItem", "parameters": "(RepositoryObjectKey key)", "modifiers": "public", "return": "V", "signature": "V getItem(RepositoryObjectKey key)", "full_signature": "public V getItem(RepositoryObjectKey key)", "class_method_signature": "MapRepository.getItem(RepositoryObjectKey key)", "testcase": false, "constructor": false}, {"identifier": "getItem", "parameters": "(String key)", "modifiers": "public", "return": "V", "signature": "V getItem(String key)", "full_signature": "public V getItem(String key)", "class_method_signature": "MapRepository.getItem(String key)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(RepositoryObjectKey key, V value)", "modifiers": "public", "return": "void", "signature": "void register(RepositoryObjectKey key, V value)", "full_signature": "public void register(RepositoryObjectKey key, V value)", "class_method_signature": "MapRepository.register(RepositoryObjectKey key, V value)", "testcase": false, "constructor": false}, {"identifier": "register", "parameters": "(String key, V value)", "modifiers": "public", "return": "void", "signature": "void register(String key, V value)", "full_signature": "public void register(String key, V value)", "class_method_signature": "MapRepository.register(String key, V value)", "testcase": false, "constructor": false}, {"identifier": "registerUnique", "parameters": "(RepositoryObjectKey key, V value)", "modifiers": "public", "return": "void", "signature": "void registerUnique(RepositoryObjectKey key, V value)", "full_signature": "public void registerUnique(RepositoryObjectKey key, V value)", "class_method_signature": "MapRepository.registerUnique(RepositoryObjectKey key, V value)", "testcase": false, "constructor": false}, {"identifier": "registerUnique", "parameters": "(String key, V value)", "modifiers": "public", "return": "void", "signature": "void registerUnique(String key, V value)", "full_signature": "public void registerUnique(String key, V value)", "class_method_signature": "MapRepository.registerUnique(String key, V value)", "testcase": false, "constructor": false}, {"identifier": "registerAll", "parameters": "(Map<RepositoryObjectKey, V> items)", "modifiers": "public", "return": "void", "signature": "void registerAll(Map<RepositoryObjectKey, V> items)", "full_signature": "public void registerAll(Map<RepositoryObjectKey, V> items)", "class_method_signature": "MapRepository.registerAll(Map<RepositoryObjectKey, V> items)", "testcase": false, "constructor": false}, {"identifier": "registerAllOrdered", "parameters": "(Map<String, V> items)", "modifiers": "public", "return": "void", "signature": "void registerAllOrdered(Map<String, V> items)", "full_signature": "public void registerAllOrdered(Map<String, V> items)", "class_method_signature": "MapRepository.registerAllOrdered(Map<String, V> items)", "testcase": false, "constructor": false}, {"identifier": "registerAllUnordered", "parameters": "(Map<String, V> items)", "modifiers": "public", "return": "void", "signature": "void registerAllUnordered(Map<String, V> items)", "full_signature": "public void registerAllUnordered(Map<String, V> items)", "class_method_signature": "MapRepository.registerAllUnordered(Map<String, V> items)", "testcase": false, "constructor": false}, {"identifier": "getItemsUnordered", "parameters": "()", "modifiers": "public", "return": "Map<String, V>", "signature": "Map<String, V> getItemsUnordered()", "full_signature": "public Map<String, V> getItemsUnordered()", "class_method_signature": "MapRepository.getItemsUnordered()", "testcase": false, "constructor": false}, {"identifier": "getItemsOrdered", "parameters": "()", "modifiers": "public", "return": "Map<String, V>", "signature": "Map<String, V> getItemsOrdered()", "full_signature": "public Map<String, V> getItemsOrdered()", "class_method_signature": "MapRepository.getItemsOrdered()", "testcase": false, "constructor": false}, {"identifier": "injectItemsUnwrapped", "parameters": "(Map<String, V> containerInstance)", "modifiers": "private", "return": "Map<String, V>", "signature": "Map<String, V> injectItemsUnwrapped(Map<String, V> containerInstance)", "full_signature": "private Map<String, V> injectItemsUnwrapped(Map<String, V> containerInstance)", "class_method_signature": "MapRepository.injectItemsUnwrapped(Map<String, V> containerInstance)", "testcase": false, "constructor": false}], "file": "smartparam-engine/src/main/java/org/smartparam/engine/core/repository/MapRepository.java"}, "focal_method": {"identifier": "registerUnique", "parameters": "(RepositoryObjectKey key, V value)", "modifiers": "public", "return": "void", "body": "public void registerUnique(RepositoryObjectKey key, V value) {\n        if (repositoryMap.containsKey(key)) {\n            throw new NonUniqueItemRegisteredException(containedClass, key);\n        }\n        register(key, value);\n    }", "signature": "void registerUnique(RepositoryObjectKey key, V value)", "full_signature": "public void registerUnique(RepositoryObjectKey key, V value)", "class_method_signature": "MapRepository.registerUnique(RepositoryObjectKey key, V value)", "testcase": false, "constructor": false, "invocations": ["containsKey", "register"]}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}