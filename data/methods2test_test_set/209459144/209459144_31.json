{"test_class": {"identifier": "KerberosPrincipalFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FileUtilitiesForTests fileUtils = new FileUtilitiesForTests();", "modifier": "private", "type": "FileUtilitiesForTests", "declarator": "fileUtils = new FileUtilitiesForTests()", "var_name": "fileUtils"}], "file": "submarine-server/server-submitter/submitter-yarnservice/src/test/java/org/apache/submarine/server/submitter/yarnservice/utils/KerberosPrincipalFactoryTest.java"}, "test_case": {"identifier": "testCreatePrincipalEmptyKeyTabString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testCreatePrincipalEmptyKeyTabString() throws IOException {\n    MockClientContext mockClientContext = new MockClientContext(DEFAULT_JOB_NAME);\n\n    RunJobParameters parameters = mock(RunJobParameters.class);\n    when(parameters.getPrincipal()).thenReturn(\"principal\");\n    when(parameters.getKeytab()).thenReturn(\"\");\n\n    FileSystemOperations fsOperations =\n        new FileSystemOperations(mockClientContext);\n    KerberosPrincipal result =\n        KerberosPrincipalFactory.create(fsOperations,\n            mockClientContext.getRemoteDirectoryManager(), parameters);\n\n    assertNull(result);\n  }", "signature": "void testCreatePrincipalEmptyKeyTabString()", "full_signature": "@Test public void testCreatePrincipalEmptyKeyTabString()", "class_method_signature": "KerberosPrincipalFactoryTest.testCreatePrincipalEmptyKeyTabString()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getPrincipal", "thenReturn", "when", "getKeytab", "create", "getRemoteDirectoryManager", "assertNull"]}, "focal_class": {"identifier": "KerberosPrincipalFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG =\n      LoggerFactory.getLogger(KerberosPrincipalFactory.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG =\n      LoggerFactory.getLogger(KerberosPrincipalFactory.class)", "var_name": "LOG"}], "methods": [{"identifier": "KerberosPrincipalFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " KerberosPrincipalFactory()", "full_signature": "private  KerberosPrincipalFactory()", "class_method_signature": "KerberosPrincipalFactory.KerberosPrincipalFactory()", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(FileSystemOperations fsOperations,\n                                         RemoteDirectoryManager remoteDirectoryManager,\n                                         RunJobParameters parameters)", "modifiers": "public static", "return": "KerberosPrincipal", "signature": "KerberosPrincipal create(FileSystemOperations fsOperations,\n                                         RemoteDirectoryManager remoteDirectoryManager,\n                                         RunJobParameters parameters)", "full_signature": "public static KerberosPrincipal create(FileSystemOperations fsOperations,\n                                         RemoteDirectoryManager remoteDirectoryManager,\n                                         RunJobParameters parameters)", "class_method_signature": "KerberosPrincipalFactory.create(FileSystemOperations fsOperations,\n                                         RemoteDirectoryManager remoteDirectoryManager,\n                                         RunJobParameters parameters)", "testcase": false, "constructor": false}, {"identifier": "handleDistributedKeytab", "parameters": "(\n      FileSystemOperations fsOperations,\n      RemoteDirectoryManager remoteDirectoryManager,\n      RunJobParameters parameters, String keytab, String principal)", "modifiers": "private static", "return": "KerberosPrincipal", "signature": "KerberosPrincipal handleDistributedKeytab(\n      FileSystemOperations fsOperations,\n      RemoteDirectoryManager remoteDirectoryManager,\n      RunJobParameters parameters, String keytab, String principal)", "full_signature": "private static KerberosPrincipal handleDistributedKeytab(\n      FileSystemOperations fsOperations,\n      RemoteDirectoryManager remoteDirectoryManager,\n      RunJobParameters parameters, String keytab, String principal)", "class_method_signature": "KerberosPrincipalFactory.handleDistributedKeytab(\n      FileSystemOperations fsOperations,\n      RemoteDirectoryManager remoteDirectoryManager,\n      RunJobParameters parameters, String keytab, String principal)", "testcase": false, "constructor": false}, {"identifier": "handleNormalKeytab", "parameters": "(String keytab, String principal)", "modifiers": "private static", "return": "KerberosPrincipal", "signature": "KerberosPrincipal handleNormalKeytab(String keytab, String principal)", "full_signature": "private static KerberosPrincipal handleNormalKeytab(String keytab, String principal)", "class_method_signature": "KerberosPrincipalFactory.handleNormalKeytab(String keytab, String principal)", "testcase": false, "constructor": false}], "file": "submarine-server/server-submitter/submitter-yarnservice/src/main/java/org/apache/submarine/server/submitter/yarnservice/utils/KerberosPrincipalFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(FileSystemOperations fsOperations,\n                                         RemoteDirectoryManager remoteDirectoryManager,\n                                         RunJobParameters parameters)", "modifiers": "public static", "return": "KerberosPrincipal", "body": "public static KerberosPrincipal create(FileSystemOperations fsOperations,\n                                         RemoteDirectoryManager remoteDirectoryManager,\n                                         RunJobParameters parameters) throws IOException {\n    Objects.requireNonNull(fsOperations,\n        \"FileSystemOperations must not be null!\");\n    Objects.requireNonNull(remoteDirectoryManager,\n        \"RemoteDirectoryManager must not be null!\");\n    Objects.requireNonNull(parameters, \"Parameters must not be null!\");\n\n    if (StringUtils.isNotBlank(parameters.getKeytab()) && StringUtils\n        .isNotBlank(parameters.getPrincipal())) {\n      String keytab = parameters.getKeytab();\n      String principal = parameters.getPrincipal();\n      if (parameters.isDistributeKeytab()) {\n        return handleDistributedKeytab(fsOperations, remoteDirectoryManager,\n            parameters, keytab, principal);\n      } else {\n        return handleNormalKeytab(keytab, principal);\n      }\n    }\n    LOG.debug(\"Principal and keytab was null or empty, \" +\n        \"returning null KerberosPrincipal!\");\n    return null;\n  }", "signature": "KerberosPrincipal create(FileSystemOperations fsOperations,\n                                         RemoteDirectoryManager remoteDirectoryManager,\n                                         RunJobParameters parameters)", "full_signature": "public static KerberosPrincipal create(FileSystemOperations fsOperations,\n                                         RemoteDirectoryManager remoteDirectoryManager,\n                                         RunJobParameters parameters)", "class_method_signature": "KerberosPrincipalFactory.create(FileSystemOperations fsOperations,\n                                         RemoteDirectoryManager remoteDirectoryManager,\n                                         RunJobParameters parameters)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "requireNonNull", "requireNonNull", "isNotBlank", "getKeytab", "isNotBlank", "getPrincipal", "getKeytab", "getPrincipal", "isDistributeKeytab", "handleDistributedKeytab", "handleNormalKeytab", "debug"]}, "repository": {"repo_id": 209459144, "url": "https://github.com/apache/submarine", "stars": 185, "created": "9/19/2019 4:00:17 AM +00:00", "updates": "2020-01-27T15:27:05+00:00", "fork": "False", "license": "licensed"}}