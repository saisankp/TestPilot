{"test_class": {"identifier": "RemoteYangTextSourceProviderImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final SourceIdentifier ID = RevisionSourceIdentifier.create(\"Test\", Revision.of(\"2015-10-30\"));", "modifier": "private static final", "type": "SourceIdentifier", "declarator": "ID = RevisionSourceIdentifier.create(\"Test\", Revision.of(\"2015-10-30\"))", "var_name": "ID"}, {"original_string": "private RemoteYangTextSourceProviderImpl remoteRepository;", "modifier": "private", "type": "RemoteYangTextSourceProviderImpl", "declarator": "remoteRepository", "var_name": "remoteRepository"}, {"original_string": "private SchemaRepository mockedLocalRepository;", "modifier": "private", "type": "SchemaRepository", "declarator": "mockedLocalRepository", "var_name": "mockedLocalRepository"}, {"original_string": "private final Set<SourceIdentifier> providedSources = Collections.singleton(ID);", "modifier": "private final", "type": "Set<SourceIdentifier>", "declarator": "providedSources = Collections.singleton(ID)", "var_name": "providedSources"}], "file": "opendaylight/md-sal/sal-clustering-commons/src/test/java/org/opendaylight/controller/cluster/schema/provider/impl/RemoteYangTextSourceProviderImplTest.java"}, "test_case": {"identifier": "testGetProvidedSources", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetProvidedSources() throws Exception {\n        Set<SourceIdentifier> remoteProvidedSources = Await.result(remoteRepository\n                .getProvidedSources(), FiniteDuration.Zero());\n        assertEquals(providedSources, remoteProvidedSources);\n    }", "signature": "void testGetProvidedSources()", "full_signature": "@Test public void testGetProvidedSources()", "class_method_signature": "RemoteYangTextSourceProviderImplTest.testGetProvidedSources()", "testcase": true, "constructor": false, "invocations": ["result", "getProvidedSources", "Zero", "assertEquals"]}, "focal_class": {"identifier": "RemoteYangTextSourceProviderImpl", "superclass": "", "interfaces": "implements RemoteYangTextSourceProvider", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(RemoteYangTextSourceProviderImpl.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(RemoteYangTextSourceProviderImpl.class)", "var_name": "LOG"}, {"original_string": "private final SchemaRepository repository;", "modifier": "private final", "type": "SchemaRepository", "declarator": "repository", "var_name": "repository"}, {"original_string": "private final Set<SourceIdentifier> providedSources;", "modifier": "private final", "type": "Set<SourceIdentifier>", "declarator": "providedSources", "var_name": "providedSources"}], "methods": [{"identifier": "RemoteYangTextSourceProviderImpl", "parameters": "(final SchemaRepository repository,\n            final Set<SourceIdentifier> providedSources)", "modifiers": "public", "return": "", "signature": " RemoteYangTextSourceProviderImpl(final SchemaRepository repository,\n            final Set<SourceIdentifier> providedSources)", "full_signature": "public  RemoteYangTextSourceProviderImpl(final SchemaRepository repository,\n            final Set<SourceIdentifier> providedSources)", "class_method_signature": "RemoteYangTextSourceProviderImpl.RemoteYangTextSourceProviderImpl(final SchemaRepository repository,\n            final Set<SourceIdentifier> providedSources)", "testcase": false, "constructor": true}, {"identifier": "getProvidedSources", "parameters": "()", "modifiers": "@Override public", "return": "Future<Set<SourceIdentifier>>", "signature": "Future<Set<SourceIdentifier>> getProvidedSources()", "full_signature": "@Override public Future<Set<SourceIdentifier>> getProvidedSources()", "class_method_signature": "RemoteYangTextSourceProviderImpl.getProvidedSources()", "testcase": false, "constructor": false}, {"identifier": "getYangTextSchemaSource", "parameters": "(final SourceIdentifier identifier)", "modifiers": "@Override public", "return": "Future<YangTextSchemaSourceSerializationProxy>", "signature": "Future<YangTextSchemaSourceSerializationProxy> getYangTextSchemaSource(final SourceIdentifier identifier)", "full_signature": "@Override public Future<YangTextSchemaSourceSerializationProxy> getYangTextSchemaSource(final SourceIdentifier identifier)", "class_method_signature": "RemoteYangTextSourceProviderImpl.getYangTextSchemaSource(final SourceIdentifier identifier)", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/sal-clustering-commons/src/main/java/org/opendaylight/controller/cluster/schema/provider/impl/RemoteYangTextSourceProviderImpl.java"}, "focal_method": {"identifier": "getProvidedSources", "parameters": "()", "modifiers": "@Override public", "return": "Future<Set<SourceIdentifier>>", "body": "@Override\n    public Future<Set<SourceIdentifier>> getProvidedSources() {\n        return akka.dispatch.Futures.successful(providedSources);\n    }", "signature": "Future<Set<SourceIdentifier>> getProvidedSources()", "full_signature": "@Override public Future<Set<SourceIdentifier>> getProvidedSources()", "class_method_signature": "RemoteYangTextSourceProviderImpl.getProvidedSources()", "testcase": false, "constructor": false, "invocations": ["successful"]}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}