{"test_class": {"identifier": "AdminControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@MockBean\n\tprivate AdminService adminService;", "modifier": "@MockBean\n\tprivate", "type": "AdminService", "declarator": "adminService", "var_name": "adminService"}, {"original_string": "@Autowired\n\tprivate MockMvc mvc;", "modifier": "@Autowired\n\tprivate", "type": "MockMvc", "declarator": "mvc", "var_name": "mvc"}], "file": "trading-webapp/src/test/java/fr/ymanvieu/trading/webapp/admin/controller/AdminControllerTest.java"}, "test_case": {"identifier": "testAdd", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testAdd() throws Exception {\n\t\t// GIVEN\n\t\tSymbolInfo si = new SymbolInfo(\"code\", \"name\", true, new fr.ymanvieu.trading.common.provider.Quote(\"code\", null, null));\n\n\t\twhen(adminService.add(eq(\"UBI.PA\"), eq(\"YAHOO\"))).thenReturn(si);\n\n\t\t// WHEN\n\t\tmvc.perform(post(\"/api/admin/YAHOO/UBI.PA\"))\n\t\t.andExpect(status().is2xxSuccessful());\n\t}", "signature": "void testAdd()", "full_signature": "@Test public void testAdd()", "class_method_signature": "AdminControllerTest.testAdd()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "add", "eq", "eq", "andExpect", "perform", "post", "is2xxSuccessful", "status"]}, "focal_class": {"identifier": "AdminController", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate MessageSource messageSource;", "modifier": "@Autowired\n\tprivate", "type": "MessageSource", "declarator": "messageSource", "var_name": "messageSource"}, {"original_string": "@Autowired\n\tprivate AdminService adminService;", "modifier": "@Autowired\n\tprivate", "type": "AdminService", "declarator": "adminService", "var_name": "adminService"}], "methods": [{"identifier": "symbols", "parameters": "(String code)", "modifiers": "@GetMapping public", "return": "SearchResult", "signature": "SearchResult symbols(String code)", "full_signature": "@GetMapping public SearchResult symbols(String code)", "class_method_signature": "AdminController.symbols(String code)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Locale l, @PathVariable String code, @PathVariable String provider)", "modifiers": "@PostMapping(\"/{provider}/{code}\") public", "return": "Response", "signature": "Response add(Locale l, @PathVariable String code, @PathVariable String provider)", "full_signature": "@PostMapping(\"/{provider}/{code}\") public Response add(Locale l, @PathVariable String code, @PathVariable String provider)", "class_method_signature": "AdminController.add(Locale l, @PathVariable String code, @PathVariable String provider)", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(Locale l, @PathVariable String symbol, @PathVariable String provider)", "modifiers": "@DeleteMapping(\"/{provider}/{symbol}\") public", "return": "Response", "signature": "Response delete(Locale l, @PathVariable String symbol, @PathVariable String provider)", "full_signature": "@DeleteMapping(\"/{provider}/{symbol}\") public Response delete(Locale l, @PathVariable String symbol, @PathVariable String provider)", "class_method_signature": "AdminController.delete(Locale l, @PathVariable String symbol, @PathVariable String provider)", "testcase": false, "constructor": false}], "file": "trading-webapp/src/main/java/fr/ymanvieu/trading/webapp/admin/controller/AdminController.java"}, "focal_method": {"identifier": "add", "parameters": "(Locale l, @PathVariable String code, @PathVariable String provider)", "modifiers": "@PostMapping(\"/{provider}/{code}\") public", "return": "Response", "body": "@PostMapping(\"/{provider}/{code}\")\n\tpublic Response add(Locale l, @PathVariable String code, @PathVariable String provider) throws IOException {\n\n\t\tResponse response = new Response();\n\n\t\tSymbolInfo si = adminService.add(code, provider);\n\n\t\tObject[] args = { si.getName(), si.getCode(), si.getQuote().getPrice(), si.getQuote().getCurrency(), si.getQuote().getTime() };\n\t\tresponse.setMessage(messageSource.getMessage(\"symbols.success.add\", args, l));\n\t\tresponse.setMessageTitle(messageSource.getMessage(\"success\", null, l));\n\n\t\tif (!si.isHistoryFound()) {\n\t\t\tresponse.setWarningMessage(messageSource.getMessage(\"symbols.warning.no_historical_data\", new Object[] { si.getCode() }, l));\n\t\t}\n\t\t\n\t\treturn response;\n\t}", "signature": "Response add(Locale l, @PathVariable String code, @PathVariable String provider)", "full_signature": "@PostMapping(\"/{provider}/{code}\") public Response add(Locale l, @PathVariable String code, @PathVariable String provider)", "class_method_signature": "AdminController.add(Locale l, @PathVariable String code, @PathVariable String provider)", "testcase": false, "constructor": false, "invocations": ["add", "getName", "getCode", "getPrice", "getQuote", "getCurrency", "getQuote", "getTime", "getQuote", "setMessage", "getMessage", "setMessageTitle", "getMessage", "isHistoryFound", "setWarningMessage", "getMessage", "getCode"]}, "repository": {"repo_id": 51700398, "url": "https://github.com/ymanvieu/trading", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 988, "license": "licensed"}}