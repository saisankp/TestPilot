{"test_class": {"identifier": "DialogDescriptorAttributeParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private Element dialogDescriptor;", "modifier": "@Mock\n    private", "type": "Element", "declarator": "dialogDescriptor", "var_name": "dialogDescriptor"}, {"original_string": "@Mock\n    private CurrentDateProvider currentDateProvider;", "modifier": "@Mock\n    private", "type": "CurrentDateProvider", "declarator": "currentDateProvider", "var_name": "currentDateProvider"}, {"original_string": "@InjectMocks\n    private DialogDescriptorAttributeParser underTest;", "modifier": "@InjectMocks\n    private", "type": "DialogDescriptorAttributeParser", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/test/java/com/epam/wilma/stubconfig/dom/parser/node/DialogDescriptorAttributeParserTest.java"}, "test_case": {"identifier": "testParseWhenUsageIsTimeoutAndValidityValueNotSetShouldThrowException", "parameters": "()", "modifiers": "@Test(expectedExceptions = DescriptorValidationFailedException.class) public", "return": "void", "body": "@Test(expectedExceptions = DescriptorValidationFailedException.class)\n    public void testParseWhenUsageIsTimeoutAndValidityValueNotSetShouldThrowException() {\n        //GIVEN\n        given(dialogDescriptor.getAttribute(\"name\")).willReturn(\"name\");\n        given(dialogDescriptor.getAttribute(\"usage\")).willReturn(\"timeout\");\n        //WHEN\n        underTest.getAttributes(dialogDescriptor);\n        //THEN it should throw exception\n\n    }", "signature": "void testParseWhenUsageIsTimeoutAndValidityValueNotSetShouldThrowException()", "full_signature": "@Test(expectedExceptions = DescriptorValidationFailedException.class) public void testParseWhenUsageIsTimeoutAndValidityValueNotSetShouldThrowException()", "class_method_signature": "DialogDescriptorAttributeParserTest.testParseWhenUsageIsTimeoutAndValidityValueNotSetShouldThrowException()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getAttribute", "willReturn", "given", "getAttribute", "getAttributes"]}, "focal_class": {"identifier": "DialogDescriptorAttributeParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final long MILLISECOND_MULTIPLIER = 60000;", "modifier": "private static final", "type": "long", "declarator": "MILLISECOND_MULTIPLIER = 60000", "var_name": "MILLISECOND_MULTIPLIER"}, {"original_string": "@Autowired\n    private CurrentDateProvider currentDateProvider;", "modifier": "@Autowired\n    private", "type": "CurrentDateProvider", "declarator": "currentDateProvider", "var_name": "currentDateProvider"}], "methods": [{"identifier": "getAttributes", "parameters": "(final Element el)", "modifiers": "public", "return": "DialogDescriptorAttributes", "signature": "DialogDescriptorAttributes getAttributes(final Element el)", "full_signature": "public DialogDescriptorAttributes getAttributes(final Element el)", "class_method_signature": "DialogDescriptorAttributeParser.getAttributes(final Element el)", "testcase": false, "constructor": false}, {"identifier": "createAttributes", "parameters": "(final String name, final DialogDescriptorUsage usage, final long validityValue,\n            final String comment)", "modifiers": "private", "return": "DialogDescriptorAttributes", "signature": "DialogDescriptorAttributes createAttributes(final String name, final DialogDescriptorUsage usage, final long validityValue,\n            final String comment)", "full_signature": "private DialogDescriptorAttributes createAttributes(final String name, final DialogDescriptorUsage usage, final long validityValue,\n            final String comment)", "class_method_signature": "DialogDescriptorAttributeParser.createAttributes(final String name, final DialogDescriptorUsage usage, final long validityValue,\n            final String comment)", "testcase": false, "constructor": false}, {"identifier": "getValidityValue", "parameters": "(final String validityString, final String name, final DialogDescriptorUsage usage)", "modifiers": "private", "return": "long", "signature": "long getValidityValue(final String validityString, final String name, final DialogDescriptorUsage usage)", "full_signature": "private long getValidityValue(final String validityString, final String name, final DialogDescriptorUsage usage)", "class_method_signature": "DialogDescriptorAttributeParser.getValidityValue(final String validityString, final String name, final DialogDescriptorUsage usage)", "testcase": false, "constructor": false}, {"identifier": "setValidityValue", "parameters": "(final DialogDescriptorAttributes attributes, final long validityValue)", "modifiers": "private", "return": "void", "signature": "void setValidityValue(final DialogDescriptorAttributes attributes, final long validityValue)", "full_signature": "private void setValidityValue(final DialogDescriptorAttributes attributes, final long validityValue)", "class_method_signature": "DialogDescriptorAttributeParser.setValidityValue(final DialogDescriptorAttributes attributes, final long validityValue)", "testcase": false, "constructor": false}, {"identifier": "getValidityValue", "parameters": "(final String validityString, final DialogDescriptorUsage usage)", "modifiers": "private", "return": "long", "signature": "long getValidityValue(final String validityString, final DialogDescriptorUsage usage)", "full_signature": "private long getValidityValue(final String validityString, final DialogDescriptorUsage usage)", "class_method_signature": "DialogDescriptorAttributeParser.getValidityValue(final String validityString, final DialogDescriptorUsage usage)", "testcase": false, "constructor": false}, {"identifier": "validateValidityValueVersusUsage", "parameters": "(final String name, final DialogDescriptorUsage usage, final long validityValue)", "modifiers": "private", "return": "void", "signature": "void validateValidityValueVersusUsage(final String name, final DialogDescriptorUsage usage, final long validityValue)", "full_signature": "private void validateValidityValueVersusUsage(final String name, final DialogDescriptorUsage usage, final long validityValue)", "class_method_signature": "DialogDescriptorAttributeParser.validateValidityValueVersusUsage(final String name, final DialogDescriptorUsage usage, final long validityValue)", "testcase": false, "constructor": false}, {"identifier": "getUsage", "parameters": "(final String usage)", "modifiers": "private", "return": "DialogDescriptorUsage", "signature": "DialogDescriptorUsage getUsage(final String usage)", "full_signature": "private DialogDescriptorUsage getUsage(final String usage)", "class_method_signature": "DialogDescriptorAttributeParser.getUsage(final String usage)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-parser/src/main/java/com/epam/wilma/stubconfig/dom/parser/node/DialogDescriptorAttributeParser.java"}, "focal_method": {"identifier": "getAttributes", "parameters": "(final Element el)", "modifiers": "public", "return": "DialogDescriptorAttributes", "body": "public DialogDescriptorAttributes getAttributes(final Element el) {\n        String name = el.getAttribute(\"name\");\n        DialogDescriptorUsage usage = getUsage(el.getAttribute(\"usage\"));\n        long validityValue = getValidityValue(el.getAttribute(\"validityValue\"), name, usage);\n        String comment = el.getAttribute(\"comment\");\n        DialogDescriptorAttributes attributes = createAttributes(name, usage, validityValue, comment);\n        return attributes;\n    }", "signature": "DialogDescriptorAttributes getAttributes(final Element el)", "full_signature": "public DialogDescriptorAttributes getAttributes(final Element el)", "class_method_signature": "DialogDescriptorAttributeParser.getAttributes(final Element el)", "testcase": false, "constructor": false, "invocations": ["getAttribute", "getUsage", "getAttribute", "getValidityValue", "getAttribute", "getAttribute", "createAttributes"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}