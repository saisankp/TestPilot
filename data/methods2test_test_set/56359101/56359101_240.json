{"test_class": {"identifier": "AutonomiccsSystemVmTemplateServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Spy\n    @InjectMocks\n    private AutonomiccsSystemVmTemplateService spy;", "modifier": "@Spy\n    @InjectMocks\n    private", "type": "AutonomiccsSystemVmTemplateService", "declarator": "spy", "var_name": "spy"}, {"original_string": "@Mock\n    private AutonomiccsSystemVmTemplateJdbcDao autonomiccsSystemVmTemplateJdbcDao;", "modifier": "@Mock\n    private", "type": "AutonomiccsSystemVmTemplateJdbcDao", "declarator": "autonomiccsSystemVmTemplateJdbcDao", "var_name": "autonomiccsSystemVmTemplateJdbcDao"}, {"original_string": "@Mock\n    private VMTemplateDao templateDao;", "modifier": "@Mock\n    private", "type": "VMTemplateDao", "declarator": "templateDao", "var_name": "templateDao"}], "file": "autonomic-plugin-common/src/test/java/br/com/autonomiccs/autonomic/plugin/common/services/AutonomiccsSystemVmTemplateServiceTest.java"}, "test_case": {"identifier": "findAutonomiccsSystemVmTemplateTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void findAutonomiccsSystemVmTemplateTest() {\n        VMTemplateVO vmTemplate = Mockito.mock(VMTemplateVO.class);\n        Mockito.doReturn(StringUtils.EMPTY).when(spy).getAutonomiccsSystemVmTemplateName(Mockito.any(HypervisorType.class));\n        Mockito.doReturn(0l).when(autonomiccsSystemVmTemplateJdbcDao).searchAutonomiccsSystemVmTemplateIdForHypervisor(Mockito.anyString());\n        Mockito.doReturn(vmTemplate).when(templateDao).findById(Mockito.anyLong());\n\n        VMTemplateVO result = spy.findAutonomiccsSystemVmTemplate(HypervisorType.Any);\n\n        Mockito.verify(spy).getAutonomiccsSystemVmTemplateName(Mockito.any(HypervisorType.class));\n        Mockito.verify(autonomiccsSystemVmTemplateJdbcDao).searchAutonomiccsSystemVmTemplateIdForHypervisor(Mockito.anyString());\n        Mockito.verify(templateDao).findById(Mockito.anyLong());\n        Assert.assertEquals(vmTemplate, result);\n    }", "signature": "void findAutonomiccsSystemVmTemplateTest()", "full_signature": "@Test public void findAutonomiccsSystemVmTemplateTest()", "class_method_signature": "AutonomiccsSystemVmTemplateServiceTest.findAutonomiccsSystemVmTemplateTest()", "testcase": true, "constructor": false, "invocations": ["mock", "getAutonomiccsSystemVmTemplateName", "when", "doReturn", "any", "searchAutonomiccsSystemVmTemplateIdForHypervisor", "when", "doReturn", "anyString", "findById", "when", "doReturn", "anyLong", "findAutonomiccsSystemVmTemplate", "getAutonomiccsSystemVmTemplateName", "verify", "any", "searchAutonomiccsSystemVmTemplateIdForHypervisor", "verify", "anyString", "findById", "verify", "anyLong", "assertEquals"]}, "focal_class": {"identifier": "AutonomiccsSystemVmTemplateService", "superclass": "", "interfaces": "implements InitializingBean", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(getClass());", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(getClass())", "var_name": "logger"}, {"original_string": "@Autowired\n    protected AutonomiccsSystemVmTemplateJdbcDao autonomiccsSystemVmTemplateJdbcDao;", "modifier": "@Autowired\n    protected", "type": "AutonomiccsSystemVmTemplateJdbcDao", "declarator": "autonomiccsSystemVmTemplateJdbcDao", "var_name": "autonomiccsSystemVmTemplateJdbcDao"}, {"original_string": "@Autowired\n    private VMTemplateDao templateDao;", "modifier": "@Autowired\n    private", "type": "VMTemplateDao", "declarator": "templateDao", "var_name": "templateDao"}, {"original_string": "@Autowired\n    @Qualifier(\"autonomiccsSystemVmsTemplateUrlBase\")\n    protected String autonomiccsSystemVmsTemplateUrlBase;", "modifier": "@Autowired\n    @Qualifier(\"autonomiccsSystemVmsTemplateUrlBase\")\n    protected", "type": "String", "declarator": "autonomiccsSystemVmsTemplateUrlBase", "var_name": "autonomiccsSystemVmsTemplateUrlBase"}, {"original_string": "@Autowired\n    @Qualifier(\"systemVmTemplateVersion\")\n    protected String systemVmTemplateVersion;", "modifier": "@Autowired\n    @Qualifier(\"systemVmTemplateVersion\")\n    protected", "type": "String", "declarator": "systemVmTemplateVersion", "var_name": "systemVmTemplateVersion"}, {"original_string": "protected String autonomiccsSystemVmTemplateDisplayText;", "modifier": "protected", "type": "String", "declarator": "autonomiccsSystemVmTemplateDisplayText", "var_name": "autonomiccsSystemVmTemplateDisplayText"}, {"original_string": "protected String autonomiccsSystemVmTemplateName;", "modifier": "protected", "type": "String", "declarator": "autonomiccsSystemVmTemplateName", "var_name": "autonomiccsSystemVmTemplateName"}], "methods": [{"identifier": "isTemplateRegistered", "parameters": "(String templateName)", "modifiers": "protected", "return": "boolean", "signature": "boolean isTemplateRegistered(String templateName)", "full_signature": "protected boolean isTemplateRegistered(String templateName)", "class_method_signature": "AutonomiccsSystemVmTemplateService.isTemplateRegistered(String templateName)", "testcase": false, "constructor": false}, {"identifier": "isTemplateRegisteredForHypervisor", "parameters": "(HypervisorType hypervisorType)", "modifiers": "public", "return": "boolean", "signature": "boolean isTemplateRegisteredForHypervisor(HypervisorType hypervisorType)", "full_signature": "public boolean isTemplateRegisteredForHypervisor(HypervisorType hypervisorType)", "class_method_signature": "AutonomiccsSystemVmTemplateService.isTemplateRegisteredForHypervisor(HypervisorType hypervisorType)", "testcase": false, "constructor": false}, {"identifier": "getAutonomiccsSystemVmTemplateDisplayText", "parameters": "(HypervisorType hypervisor)", "modifiers": "public", "return": "String", "signature": "String getAutonomiccsSystemVmTemplateDisplayText(HypervisorType hypervisor)", "full_signature": "public String getAutonomiccsSystemVmTemplateDisplayText(HypervisorType hypervisor)", "class_method_signature": "AutonomiccsSystemVmTemplateService.getAutonomiccsSystemVmTemplateDisplayText(HypervisorType hypervisor)", "testcase": false, "constructor": false}, {"identifier": "getAutonomiccsSystemVmTemplateName", "parameters": "(HypervisorType hypervisor)", "modifiers": "public", "return": "String", "signature": "String getAutonomiccsSystemVmTemplateName(HypervisorType hypervisor)", "full_signature": "public String getAutonomiccsSystemVmTemplateName(HypervisorType hypervisor)", "class_method_signature": "AutonomiccsSystemVmTemplateService.getAutonomiccsSystemVmTemplateName(HypervisorType hypervisor)", "testcase": false, "constructor": false}, {"identifier": "constructSystemVmTemplateUrl", "parameters": "(HypervisorType hypervisorType)", "modifiers": "protected", "return": "String", "signature": "String constructSystemVmTemplateUrl(HypervisorType hypervisorType)", "full_signature": "protected String constructSystemVmTemplateUrl(HypervisorType hypervisorType)", "class_method_signature": "AutonomiccsSystemVmTemplateService.constructSystemVmTemplateUrl(HypervisorType hypervisorType)", "testcase": false, "constructor": false}, {"identifier": "getSystemVmTemplateUrl", "parameters": "(HypervisorType hypervisor)", "modifiers": "public", "return": "String", "signature": "String getSystemVmTemplateUrl(HypervisorType hypervisor)", "full_signature": "public String getSystemVmTemplateUrl(HypervisorType hypervisor)", "class_method_signature": "AutonomiccsSystemVmTemplateService.getSystemVmTemplateUrl(HypervisorType hypervisor)", "testcase": false, "constructor": false}, {"identifier": "findAutonomiccsSystemVmTemplate", "parameters": "(HypervisorType hypervisor)", "modifiers": "public", "return": "VMTemplateVO", "signature": "VMTemplateVO findAutonomiccsSystemVmTemplate(HypervisorType hypervisor)", "full_signature": "public VMTemplateVO findAutonomiccsSystemVmTemplate(HypervisorType hypervisor)", "class_method_signature": "AutonomiccsSystemVmTemplateService.findAutonomiccsSystemVmTemplate(HypervisorType hypervisor)", "testcase": false, "constructor": false}, {"identifier": "afterPropertiesSet", "parameters": "()", "modifiers": "@Override /** * This method is executed by Spring framework. * It configures the template's display text and name */ public", "return": "void", "signature": "void afterPropertiesSet()", "full_signature": "@Override /** * This method is executed by Spring framework. * It configures the template's display text and name */ public void afterPropertiesSet()", "class_method_signature": "AutonomiccsSystemVmTemplateService.afterPropertiesSet()", "testcase": false, "constructor": false}, {"identifier": "isTemplateRegisteredAndReadyForHypervisor", "parameters": "(HypervisorType hypervisorType)", "modifiers": "public", "return": "boolean", "signature": "boolean isTemplateRegisteredAndReadyForHypervisor(HypervisorType hypervisorType)", "full_signature": "public boolean isTemplateRegisteredAndReadyForHypervisor(HypervisorType hypervisorType)", "class_method_signature": "AutonomiccsSystemVmTemplateService.isTemplateRegisteredAndReadyForHypervisor(HypervisorType hypervisorType)", "testcase": false, "constructor": false}], "file": "autonomic-plugin-common/src/main/java/br/com/autonomiccs/autonomic/plugin/common/services/AutonomiccsSystemVmTemplateService.java"}, "focal_method": {"identifier": "findAutonomiccsSystemVmTemplate", "parameters": "(HypervisorType hypervisor)", "modifiers": "public", "return": "VMTemplateVO", "body": "public VMTemplateVO findAutonomiccsSystemVmTemplate(HypervisorType hypervisor) {\n        String autonomiccsSystemVmTemplateNameString = getAutonomiccsSystemVmTemplateName(hypervisor);\n        long templateId = autonomiccsSystemVmTemplateJdbcDao.searchAutonomiccsSystemVmTemplateIdForHypervisor(autonomiccsSystemVmTemplateNameString);\n        return templateDao.findById(templateId);\n    }", "signature": "VMTemplateVO findAutonomiccsSystemVmTemplate(HypervisorType hypervisor)", "full_signature": "public VMTemplateVO findAutonomiccsSystemVmTemplate(HypervisorType hypervisor)", "class_method_signature": "AutonomiccsSystemVmTemplateService.findAutonomiccsSystemVmTemplate(HypervisorType hypervisor)", "testcase": false, "constructor": false, "invocations": ["getAutonomiccsSystemVmTemplateName", "searchAutonomiccsSystemVmTemplateIdForHypervisor", "findById"]}, "repository": {"repo_id": 56359101, "url": "https://github.com/Autonomiccs/autonomiccs-platform", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 17, "size": 944, "license": "licensed"}}