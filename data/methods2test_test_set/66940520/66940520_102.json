{"test_class": {"identifier": "MetadataVersionDelegateTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedException = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedException = ExpectedException.none()", "var_name": "expectedException"}, {"original_string": "private MetadataVersionDelegate target;", "modifier": "private", "type": "MetadataVersionDelegate", "declarator": "target", "var_name": "target"}, {"original_string": "@Mock\n    private SynchronizationManager synchronizationManager;", "modifier": "@Mock\n    private", "type": "SynchronizationManager", "declarator": "synchronizationManager", "var_name": "synchronizationManager"}, {"original_string": "@Mock\n    private DefaultMetadataSystemSettingService metadataSystemSettingService;", "modifier": "@Mock\n    private", "type": "DefaultMetadataSystemSettingService", "declarator": "metadataSystemSettingService", "var_name": "metadataSystemSettingService"}, {"original_string": "@Mock\n    private MetadataVersionService metadataVersionService;", "modifier": "@Mock\n    private", "type": "MetadataVersionService", "declarator": "metadataVersionService", "var_name": "metadataVersionService"}, {"original_string": "@Mock\n    private RenderService renderService;", "modifier": "@Mock\n    private", "type": "RenderService", "declarator": "renderService", "var_name": "renderService"}, {"original_string": "@Rule\n    public MockitoRule mockitoRule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = MockitoJUnit.rule()", "var_name": "mockitoRule"}, {"original_string": "private HttpResponse httpResponse;", "modifier": "private", "type": "HttpResponse", "declarator": "httpResponse", "var_name": "httpResponse"}, {"original_string": "private MetadataVersion metadataVersion;", "modifier": "private", "type": "MetadataVersion", "declarator": "metadataVersion", "var_name": "metadataVersion"}, {"original_string": "private int VERSION_TIMEOUT = 120000;", "modifier": "private", "type": "int", "declarator": "VERSION_TIMEOUT = 120000", "var_name": "VERSION_TIMEOUT"}, {"original_string": "private int DOWNLOAD_TIMEOUT = 300000;", "modifier": "private", "type": "int", "declarator": "DOWNLOAD_TIMEOUT = 300000", "var_name": "DOWNLOAD_TIMEOUT"}, {"original_string": "private String username = \"username\";", "modifier": "private", "type": "String", "declarator": "username = \"username\"", "var_name": "username"}, {"original_string": "private String password = \"password\";", "modifier": "private", "type": "String", "declarator": "password = \"password\"", "var_name": "password"}, {"original_string": "private String versionUrl = \"http://localhost:9080/api/metadata/version?versionName=Version_Name\";", "modifier": "private", "type": "String", "declarator": "versionUrl = \"http://localhost:9080/api/metadata/version?versionName=Version_Name\"", "var_name": "versionUrl"}, {"original_string": "private String baselineUrl = \"http://localhost:9080/api/metadata/version/history?baseline=testVersion\";", "modifier": "private", "type": "String", "declarator": "baselineUrl = \"http://localhost:9080/api/metadata/version/history?baseline=testVersion\"", "var_name": "baselineUrl"}, {"original_string": "private String downloadUrl = \"http://localhost:9080/api/metadata/version/testVersion/data.gz\";", "modifier": "private", "type": "String", "declarator": "downloadUrl = \"http://localhost:9080/api/metadata/version/testVersion/data.gz\"", "var_name": "downloadUrl"}, {"original_string": "private String response = \"{\\\"name\\\":\\\"testVersion\\\",\\\"created\\\":\\\"2016-05-26T11:43:59.787+0000\\\",\\\"type\\\":\\\"BEST_EFFORT\\\",\\\"id\\\":\\\"ktwh8PHNwtB\\\",\\\"hashCode\\\":\\\"12wa32d4f2et3tyt5yu6i\\\"}\";", "modifier": "private", "type": "String", "declarator": "response = \"{\\\"name\\\":\\\"testVersion\\\",\\\"created\\\":\\\"2016-05-26T11:43:59.787+0000\\\",\\\"type\\\":\\\"BEST_EFFORT\\\",\\\"id\\\":\\\"ktwh8PHNwtB\\\",\\\"hashCode\\\":\\\"12wa32d4f2et3tyt5yu6i\\\"}\"", "var_name": "response"}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/test/java/org/hisp/dhis/dxf2/metadata/version/MetadataVersionDelegateTest.java"}, "test_case": {"identifier": "testShouldThrowExceptionWhenHTTPRequestFails", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testShouldThrowExceptionWhenHTTPRequestFails()\n        throws Exception\n    {\n        when( metadataSystemSettingService.getRemoteInstanceUserName() ).thenReturn( username );\n        when( metadataSystemSettingService.getRemoteInstancePassword() ).thenReturn( password );\n\n        AvailabilityStatus availabilityStatus = new AvailabilityStatus( true, \"testMessage\", null );\n\n        when( metadataSystemSettingService.getVersionDetailsUrl( \"testVersion\" ) ).thenReturn( versionUrl );\n        when( synchronizationManager.isRemoteServerAvailable() ).thenReturn( availabilityStatus );\n        PowerMockito.when( HttpUtils.httpGET( versionUrl, true, username, password, null, VERSION_TIMEOUT, true ) )\n            .thenThrow( new Exception( \"\" ) );\n\n        expectedException.expect( MetadataVersionServiceException.class );\n        target.getRemoteMetadataVersion( \"testVersion\" );\n    }", "signature": "void testShouldThrowExceptionWhenHTTPRequestFails()", "full_signature": "@Test public void testShouldThrowExceptionWhenHTTPRequestFails()", "class_method_signature": "MetadataVersionDelegateTest.testShouldThrowExceptionWhenHTTPRequestFails()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getRemoteInstanceUserName", "thenReturn", "when", "getRemoteInstancePassword", "thenReturn", "when", "getVersionDetailsUrl", "thenReturn", "when", "isRemoteServerAvailable", "thenThrow", "when", "httpGET", "expect", "getRemoteMetadataVersion"]}, "focal_class": {"identifier": "MetadataVersionDelegate", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DefaultMetadataSystemSettingService metadataSystemSettingService;", "modifier": "private", "type": "DefaultMetadataSystemSettingService", "declarator": "metadataSystemSettingService", "var_name": "metadataSystemSettingService"}, {"original_string": "private SynchronizationManager synchronizationManager;", "modifier": "private", "type": "SynchronizationManager", "declarator": "synchronizationManager", "var_name": "synchronizationManager"}, {"original_string": "private RenderService renderService;", "modifier": "private", "type": "RenderService", "declarator": "renderService", "var_name": "renderService"}, {"original_string": "private MetadataVersionService metadataVersionService;", "modifier": "private", "type": "MetadataVersionService", "declarator": "metadataVersionService", "var_name": "metadataVersionService"}, {"original_string": "private int VERSION_TIMEOUT = 120000;", "modifier": "private", "type": "int", "declarator": "VERSION_TIMEOUT = 120000", "var_name": "VERSION_TIMEOUT"}, {"original_string": "private int DOWNLOAD_TIMEOUT = 300000;", "modifier": "private", "type": "int", "declarator": "DOWNLOAD_TIMEOUT = 300000", "var_name": "DOWNLOAD_TIMEOUT"}], "methods": [{"identifier": "MetadataVersionDelegate", "parameters": "( DefaultMetadataSystemSettingService metadataSystemSettingService,\n        SynchronizationManager synchronizationManager, RenderService renderService,\n        MetadataVersionService metadataVersionService )", "modifiers": "public", "return": "", "signature": " MetadataVersionDelegate( DefaultMetadataSystemSettingService metadataSystemSettingService,\n        SynchronizationManager synchronizationManager, RenderService renderService,\n        MetadataVersionService metadataVersionService )", "full_signature": "public  MetadataVersionDelegate( DefaultMetadataSystemSettingService metadataSystemSettingService,\n        SynchronizationManager synchronizationManager, RenderService renderService,\n        MetadataVersionService metadataVersionService )", "class_method_signature": "MetadataVersionDelegate.MetadataVersionDelegate( DefaultMetadataSystemSettingService metadataSystemSettingService,\n        SynchronizationManager synchronizationManager, RenderService renderService,\n        MetadataVersionService metadataVersionService )", "testcase": false, "constructor": true}, {"identifier": "getRemoteMetadataVersion", "parameters": "( String versionName )", "modifiers": "public", "return": "MetadataVersion", "signature": "MetadataVersion getRemoteMetadataVersion( String versionName )", "full_signature": "public MetadataVersion getRemoteMetadataVersion( String versionName )", "class_method_signature": "MetadataVersionDelegate.getRemoteMetadataVersion( String versionName )", "testcase": false, "constructor": false}, {"identifier": "getMetaDataDifference", "parameters": "( MetadataVersion metadataVersion )", "modifiers": "public", "return": "List<MetadataVersion>", "signature": "List<MetadataVersion> getMetaDataDifference( MetadataVersion metadataVersion )", "full_signature": "public List<MetadataVersion> getMetaDataDifference( MetadataVersion metadataVersion )", "class_method_signature": "MetadataVersionDelegate.getMetaDataDifference( MetadataVersion metadataVersion )", "testcase": false, "constructor": false}, {"identifier": "downloadMetadataVersionSnapshot", "parameters": "(MetadataVersion version )", "modifiers": "public", "return": "String", "signature": "String downloadMetadataVersionSnapshot(MetadataVersion version )", "full_signature": "public String downloadMetadataVersionSnapshot(MetadataVersion version )", "class_method_signature": "MetadataVersionDelegate.downloadMetadataVersionSnapshot(MetadataVersion version )", "testcase": false, "constructor": false}, {"identifier": "addNewMetadataVersion", "parameters": "( MetadataVersion version )", "modifiers": "public synchronized", "return": "void", "signature": "void addNewMetadataVersion( MetadataVersion version )", "full_signature": "public synchronized void addNewMetadataVersion( MetadataVersion version )", "class_method_signature": "MetadataVersionDelegate.addNewMetadataVersion( MetadataVersion version )", "testcase": false, "constructor": false}, {"identifier": "getDhisHttpResponse", "parameters": "( String url, int timeout )", "modifiers": "private", "return": "DhisHttpResponse", "signature": "DhisHttpResponse getDhisHttpResponse( String url, int timeout )", "full_signature": "private DhisHttpResponse getDhisHttpResponse( String url, int timeout )", "class_method_signature": "MetadataVersionDelegate.getDhisHttpResponse( String url, int timeout )", "testcase": false, "constructor": false}, {"identifier": "isValidDhisHttpResponse", "parameters": "( DhisHttpResponse dhisHttpResponse )", "modifiers": "private", "return": "boolean", "signature": "boolean isValidDhisHttpResponse( DhisHttpResponse dhisHttpResponse )", "full_signature": "private boolean isValidDhisHttpResponse( DhisHttpResponse dhisHttpResponse )", "class_method_signature": "MetadataVersionDelegate.isValidDhisHttpResponse( DhisHttpResponse dhisHttpResponse )", "testcase": false, "constructor": false}, {"identifier": "buildErrorMessage", "parameters": "( String errorType, DhisHttpResponse dhisHttpResponse )", "modifiers": "private", "return": "StringBuilder", "signature": "StringBuilder buildErrorMessage( String errorType, DhisHttpResponse dhisHttpResponse )", "full_signature": "private StringBuilder buildErrorMessage( String errorType, DhisHttpResponse dhisHttpResponse )", "class_method_signature": "MetadataVersionDelegate.buildErrorMessage( String errorType, DhisHttpResponse dhisHttpResponse )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-dxf2/src/main/java/org/hisp/dhis/dxf2/metadata/version/MetadataVersionDelegate.java"}, "focal_method": {"identifier": "getRemoteMetadataVersion", "parameters": "( String versionName )", "modifiers": "public", "return": "MetadataVersion", "body": "public MetadataVersion getRemoteMetadataVersion( String versionName )\n    {\n        String versionDetailsUrl = metadataSystemSettingService.getVersionDetailsUrl( versionName );\n        DhisHttpResponse dhisHttpResponse = getDhisHttpResponse( versionDetailsUrl, VERSION_TIMEOUT );\n        MetadataVersion dataVersion = null;\n\n        if ( isValidDhisHttpResponse( dhisHttpResponse ) )\n        {\n            try\n            {\n                dataVersion = renderService.fromJson( dhisHttpResponse.getResponse(), MetadataVersion.class );\n            }\n            catch ( Exception e )\n            {\n                String message = \"Exception occurred while trying to do JSON conversion for metadata version\";\n                log.error( message, e );\n                throw new MetadataVersionServiceException( message, e );\n            }\n        }\n\n        return dataVersion;\n    }", "signature": "MetadataVersion getRemoteMetadataVersion( String versionName )", "full_signature": "public MetadataVersion getRemoteMetadataVersion( String versionName )", "class_method_signature": "MetadataVersionDelegate.getRemoteMetadataVersion( String versionName )", "testcase": false, "constructor": false, "invocations": ["getVersionDetailsUrl", "getDhisHttpResponse", "isValidDhisHttpResponse", "fromJson", "getResponse", "error"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}