{"test_class": {"identifier": "JmxUtilTest", "superclass": "", "interfaces": "implements NotificationListener", "fields": [{"original_string": "private int counter = 0;", "modifier": "private", "type": "int", "declarator": "counter = 0", "var_name": "counter"}], "file": "agent/core/src/test/java/org/jolokia/util/JmxUtilTest.java"}, "test_case": {"identifier": "invalidObjectName", "parameters": "()", "modifiers": "@Test(expectedExceptions = IllegalArgumentException.class, expectedExceptionsMessageRegExp = \".*Invalid.*sogehtsnicht.*\") public", "return": "void", "body": "@Test(expectedExceptions = IllegalArgumentException.class, expectedExceptionsMessageRegExp = \".*Invalid.*sogehtsnicht.*\")\n    public void invalidObjectName() {\n        JmxUtil.newObjectName(\"bla:blub:name=sogehtsnicht\");\n    }", "signature": "void invalidObjectName()", "full_signature": "@Test(expectedExceptions = IllegalArgumentException.class, expectedExceptionsMessageRegExp = \".*Invalid.*sogehtsnicht.*\") public void invalidObjectName()", "class_method_signature": "JmxUtilTest.invalidObjectName()", "testcase": true, "constructor": false, "invocations": ["newObjectName"]}, "focal_class": {"identifier": "JmxUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "JmxUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " JmxUtil()", "full_signature": "private  JmxUtil()", "class_method_signature": "JmxUtil.JmxUtil()", "testcase": false, "constructor": true}, {"identifier": "newObjectName", "parameters": "(String pName)", "modifiers": "public static", "return": "ObjectName", "signature": "ObjectName newObjectName(String pName)", "full_signature": "public static ObjectName newObjectName(String pName)", "class_method_signature": "JmxUtil.newObjectName(String pName)", "testcase": false, "constructor": false}, {"identifier": "addMBeanRegistrationListener", "parameters": "(MBeanServerConnection pServer, NotificationListener pListener,\n                                                    ObjectName pObjectNameToFilter)", "modifiers": "public static", "return": "void", "signature": "void addMBeanRegistrationListener(MBeanServerConnection pServer, NotificationListener pListener,\n                                                    ObjectName pObjectNameToFilter)", "full_signature": "public static void addMBeanRegistrationListener(MBeanServerConnection pServer, NotificationListener pListener,\n                                                    ObjectName pObjectNameToFilter)", "class_method_signature": "JmxUtil.addMBeanRegistrationListener(MBeanServerConnection pServer, NotificationListener pListener,\n                                                    ObjectName pObjectNameToFilter)", "testcase": false, "constructor": false}, {"identifier": "removeMBeanRegistrationListener", "parameters": "(MBeanServerConnection pServer,NotificationListener pListener)", "modifiers": "public static", "return": "void", "signature": "void removeMBeanRegistrationListener(MBeanServerConnection pServer,NotificationListener pListener)", "full_signature": "public static void removeMBeanRegistrationListener(MBeanServerConnection pServer,NotificationListener pListener)", "class_method_signature": "JmxUtil.removeMBeanRegistrationListener(MBeanServerConnection pServer,NotificationListener pListener)", "testcase": false, "constructor": false}, {"identifier": "getMBeanServerDelegateName", "parameters": "()", "modifiers": "private static", "return": "ObjectName", "signature": "ObjectName getMBeanServerDelegateName()", "full_signature": "private static ObjectName getMBeanServerDelegateName()", "class_method_signature": "JmxUtil.getMBeanServerDelegateName()", "testcase": false, "constructor": false}], "file": "agent/core/src/main/java/org/jolokia/util/JmxUtil.java"}, "focal_method": {"identifier": "newObjectName", "parameters": "(String pName)", "modifiers": "public static", "return": "ObjectName", "body": "public static ObjectName newObjectName(String pName) {\n        try {\n            return new ObjectName(pName);\n        } catch (MalformedObjectNameException e) {\n            throw new IllegalArgumentException(\"Invalid object name \" + pName,e);\n        }\n    }", "signature": "ObjectName newObjectName(String pName)", "full_signature": "public static ObjectName newObjectName(String pName)", "class_method_signature": "JmxUtil.newObjectName(String pName)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 777444, "url": "https://github.com/rhuss/jolokia", "language": "Java", "is_fork": false, "fork_count": 187, "stargazer_count": 682, "size": 20451, "license": "licensed"}}