{"test_class": {"identifier": "KiePMMLDescrFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String PACKAGE_NAME = \"package\";", "modifier": "private static final", "type": "String", "declarator": "PACKAGE_NAME = \"package\"", "var_name": "PACKAGE_NAME"}, {"original_string": "private static final String RULE_NAME = \"NAME\";", "modifier": "private static final", "type": "String", "declarator": "RULE_NAME = \"NAME\"", "var_name": "RULE_NAME"}, {"original_string": "private static final String STATUS_TO_SET = \"STATUS_TO_SET\";", "modifier": "private static final", "type": "String", "declarator": "STATUS_TO_SET = \"STATUS_TO_SET\"", "var_name": "STATUS_TO_SET"}, {"original_string": "private static final String PATTERN_TYPE = \"TEMPERATURE\";", "modifier": "private static final", "type": "String", "declarator": "PATTERN_TYPE = \"TEMPERATURE\"", "var_name": "PATTERN_TYPE"}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/test/java/org/kie/pmml/models/drools/commons/factories/KiePMMLDescrFactoryTest.java"}, "test_case": {"identifier": "getBaseDescr", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getBaseDescr() {\n        List<KiePMMLDroolsType> types = new ArrayList<>();\n        types.add(KiePMMLDescrTestUtils.getDroolsType());\n        types.add(KiePMMLDescrTestUtils.getDottedDroolsType());\n        List<KiePMMLFieldOperatorValue> orConstraints = Arrays.asList(new KiePMMLFieldOperatorValue(PATTERN_TYPE, BOOLEAN_OPERATOR.OR, Collections.singletonList(new KiePMMLOperatorValue(OPERATOR.LESS_THAN, 35)), null),\n                                                                      new KiePMMLFieldOperatorValue(PATTERN_TYPE, BOOLEAN_OPERATOR.AND, Collections.singletonList(new KiePMMLOperatorValue(OPERATOR.GREATER_THAN, 85)), null));\n        KiePMMLDroolsRule rule = KiePMMLDroolsRule.builder(RULE_NAME, STATUS_TO_SET, Collections.emptyList())\n                .withOrConstraints(orConstraints)\n                .build();\n        List<KiePMMLDroolsRule> rules = new ArrayList<>();\n        rules.add(rule);\n        KiePMMLDroolsAST drooledAST = new KiePMMLDroolsAST(types, rules);\n        PackageDescr packageDescr = KiePMMLDescrFactory.getBaseDescr(drooledAST, PACKAGE_NAME);\n        assertEquals(PACKAGE_NAME, packageDescr.getName());\n        checkImports(packageDescr.getImports());\n        checkGlobals(packageDescr.getGlobals());\n        checkRules(packageDescr.getRules());\n    }", "signature": "void getBaseDescr()", "full_signature": "@Test public void getBaseDescr()", "class_method_signature": "KiePMMLDescrFactoryTest.getBaseDescr()", "testcase": true, "constructor": false, "invocations": ["add", "getDroolsType", "add", "getDottedDroolsType", "asList", "singletonList", "singletonList", "build", "withOrConstraints", "builder", "emptyList", "add", "getBaseDescr", "assertEquals", "getName", "checkImports", "getImports", "checkGlobals", "getGlobals", "checkRules", "getRules"]}, "focal_class": {"identifier": "KiePMMLDescrFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String PMML4_RESULT = \"PMML4Result\";", "modifier": "public static final", "type": "String", "declarator": "PMML4_RESULT = \"PMML4Result\"", "var_name": "PMML4_RESULT"}, {"original_string": "public static final String PMML4_RESULT_IDENTIFIER = \"$pmml4Result\";", "modifier": "public static final", "type": "String", "declarator": "PMML4_RESULT_IDENTIFIER = \"$pmml4Result\"", "var_name": "PMML4_RESULT_IDENTIFIER"}, {"original_string": "public static final String OUTPUTFIELDS_MAP = \"Map\";", "modifier": "public static final", "type": "String", "declarator": "OUTPUTFIELDS_MAP = \"Map\"", "var_name": "OUTPUTFIELDS_MAP"}, {"original_string": "public static final String OUTPUTFIELDS_MAP_IDENTIFIER = \"$outputFieldsMap\";", "modifier": "public static final", "type": "String", "declarator": "OUTPUTFIELDS_MAP_IDENTIFIER = \"$outputFieldsMap\"", "var_name": "OUTPUTFIELDS_MAP_IDENTIFIER"}, {"original_string": "private static final Logger logger = LoggerFactory.getLogger(KiePMMLDescrFactory.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(KiePMMLDescrFactory.class.getName())", "var_name": "logger"}], "methods": [{"identifier": "KiePMMLDescrFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " KiePMMLDescrFactory()", "full_signature": "private  KiePMMLDescrFactory()", "class_method_signature": "KiePMMLDescrFactory.KiePMMLDescrFactory()", "testcase": false, "constructor": true}, {"identifier": "getBaseDescr", "parameters": "(final KiePMMLDroolsAST kiePMMLDroolsAST, String packageName)", "modifiers": "public static", "return": "PackageDescr", "signature": "PackageDescr getBaseDescr(final KiePMMLDroolsAST kiePMMLDroolsAST, String packageName)", "full_signature": "public static PackageDescr getBaseDescr(final KiePMMLDroolsAST kiePMMLDroolsAST, String packageName)", "class_method_signature": "KiePMMLDescrFactory.getBaseDescr(final KiePMMLDroolsAST kiePMMLDroolsAST, String packageName)", "testcase": false, "constructor": false}], "file": "kie-pmml-trusty/kie-pmml-models/kie-pmml-models-drools/kie-pmml-models-drools-common/src/main/java/org/kie/pmml/models/drools/commons/factories/KiePMMLDescrFactory.java"}, "focal_method": {"identifier": "getBaseDescr", "parameters": "(final KiePMMLDroolsAST kiePMMLDroolsAST, String packageName)", "modifiers": "public static", "return": "PackageDescr", "body": "public static PackageDescr getBaseDescr(final KiePMMLDroolsAST kiePMMLDroolsAST, String packageName) {\n        logger.trace(\"getBaseDescr {} {}\", kiePMMLDroolsAST, packageName);\n        PackageDescrBuilder builder = DescrFactory.newPackage()\n                .name(packageName);\n        builder.newImport().target(KiePMMLStatusHolder.class.getName());\n        builder.newImport().target(SimplePredicate.class.getName());\n        builder.newImport().target(PMML4Result.class.getName());\n        builder.newImport().target(Map.class.getName());\n        builder.newGlobal().identifier(PMML4_RESULT_IDENTIFIER).type(PMML4_RESULT);\n        builder.newGlobal().identifier(OUTPUTFIELDS_MAP_IDENTIFIER).type(OUTPUTFIELDS_MAP);\n        KiePMMLDescrTypesFactory.factory(builder).declareTypes(kiePMMLDroolsAST.getTypes());\n        KiePMMLDescrRulesFactory.factory(builder).declareRules(kiePMMLDroolsAST.getRules());\n        return builder.getDescr();\n    }", "signature": "PackageDescr getBaseDescr(final KiePMMLDroolsAST kiePMMLDroolsAST, String packageName)", "full_signature": "public static PackageDescr getBaseDescr(final KiePMMLDroolsAST kiePMMLDroolsAST, String packageName)", "class_method_signature": "KiePMMLDescrFactory.getBaseDescr(final KiePMMLDroolsAST kiePMMLDroolsAST, String packageName)", "testcase": false, "constructor": false, "invocations": ["trace", "name", "newPackage", "target", "newImport", "getName", "target", "newImport", "getName", "target", "newImport", "getName", "target", "newImport", "getName", "type", "identifier", "newGlobal", "type", "identifier", "newGlobal", "declareTypes", "factory", "getTypes", "declareRules", "factory", "getRules", "getDescr"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}