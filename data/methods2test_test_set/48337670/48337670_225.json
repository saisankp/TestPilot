{"test_class": {"identifier": "ReadyServiceImplTest", "superclass": "", "interfaces": "", "fields": [], "file": "bundles/org.openhab.core/src/test/java/org/openhab/core/internal/service/ReadyServiceImplTest.java"}, "test_case": {"identifier": "testUnregisterTracker", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testUnregisterTracker() {\n        ReadyTracker tracker = mock(ReadyTracker.class);\n        ReadyServiceImpl rs = new ReadyServiceImpl();\n        rs.markReady(new ReadyMarker(\"foo\", \"id\"));\n        rs.registerTracker(tracker, new ReadyMarkerFilter());\n        verify(tracker).onReadyMarkerAdded(isA(ReadyMarker.class));\n        rs.unregisterTracker(tracker);\n        verify(tracker).onReadyMarkerRemoved(isA(ReadyMarker.class));\n        verifyNoMoreInteractions(tracker);\n    }", "signature": "void testUnregisterTracker()", "full_signature": "@Test public void testUnregisterTracker()", "class_method_signature": "ReadyServiceImplTest.testUnregisterTracker()", "testcase": true, "constructor": false, "invocations": ["mock", "markReady", "registerTracker", "onReadyMarkerAdded", "verify", "isA", "unregisterTracker", "onReadyMarkerRemoved", "verify", "isA", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "ReadyServiceImpl", "superclass": "", "interfaces": "implements ReadyService", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(ReadyServiceImpl.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ReadyServiceImpl.class)", "var_name": "logger"}, {"original_string": "private static final ReadyMarkerFilter ANY = new ReadyMarkerFilter();", "modifier": "private static final", "type": "ReadyMarkerFilter", "declarator": "ANY = new ReadyMarkerFilter()", "var_name": "ANY"}, {"original_string": "private final Set<ReadyMarker> markers = Collections.newSetFromMap(new ConcurrentHashMap<>());", "modifier": "private final", "type": "Set<ReadyMarker>", "declarator": "markers = Collections.newSetFromMap(new ConcurrentHashMap<>())", "var_name": "markers"}, {"original_string": "private final Map<ReadyTracker, ReadyMarkerFilter> trackers = new HashMap<>();", "modifier": "private final", "type": "Map<ReadyTracker, ReadyMarkerFilter>", "declarator": "trackers = new HashMap<>()", "var_name": "trackers"}, {"original_string": "private final ReentrantReadWriteLock rwlTrackers = new ReentrantReadWriteLock(true);", "modifier": "private final", "type": "ReentrantReadWriteLock", "declarator": "rwlTrackers = new ReentrantReadWriteLock(true)", "var_name": "rwlTrackers"}], "methods": [{"identifier": "markReady", "parameters": "(ReadyMarker readyMarker)", "modifiers": "@Override public", "return": "void", "signature": "void markReady(ReadyMarker readyMarker)", "full_signature": "@Override public void markReady(ReadyMarker readyMarker)", "class_method_signature": "ReadyServiceImpl.markReady(ReadyMarker readyMarker)", "testcase": false, "constructor": false}, {"identifier": "unmarkReady", "parameters": "(ReadyMarker readyMarker)", "modifiers": "@Override public", "return": "void", "signature": "void unmarkReady(ReadyMarker readyMarker)", "full_signature": "@Override public void unmarkReady(ReadyMarker readyMarker)", "class_method_signature": "ReadyServiceImpl.unmarkReady(ReadyMarker readyMarker)", "testcase": false, "constructor": false}, {"identifier": "notifyTrackers", "parameters": "(ReadyMarker readyMarker, Consumer<ReadyTracker> action)", "modifiers": "private", "return": "void", "signature": "void notifyTrackers(ReadyMarker readyMarker, Consumer<ReadyTracker> action)", "full_signature": "private void notifyTrackers(ReadyMarker readyMarker, Consumer<ReadyTracker> action)", "class_method_signature": "ReadyServiceImpl.notifyTrackers(ReadyMarker readyMarker, Consumer<ReadyTracker> action)", "testcase": false, "constructor": false}, {"identifier": "isReady", "parameters": "(ReadyMarker readyMarker)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isReady(ReadyMarker readyMarker)", "full_signature": "@Override public boolean isReady(ReadyMarker readyMarker)", "class_method_signature": "ReadyServiceImpl.isReady(ReadyMarker readyMarker)", "testcase": false, "constructor": false}, {"identifier": "registerTracker", "parameters": "(ReadyTracker readyTracker)", "modifiers": "@Override public", "return": "void", "signature": "void registerTracker(ReadyTracker readyTracker)", "full_signature": "@Override public void registerTracker(ReadyTracker readyTracker)", "class_method_signature": "ReadyServiceImpl.registerTracker(ReadyTracker readyTracker)", "testcase": false, "constructor": false}, {"identifier": "registerTracker", "parameters": "(ReadyTracker readyTracker, ReadyMarkerFilter filter)", "modifiers": "@Override public", "return": "void", "signature": "void registerTracker(ReadyTracker readyTracker, ReadyMarkerFilter filter)", "full_signature": "@Override public void registerTracker(ReadyTracker readyTracker, ReadyMarkerFilter filter)", "class_method_signature": "ReadyServiceImpl.registerTracker(ReadyTracker readyTracker, ReadyMarkerFilter filter)", "testcase": false, "constructor": false}, {"identifier": "unregisterTracker", "parameters": "(ReadyTracker readyTracker)", "modifiers": "@Override public", "return": "void", "signature": "void unregisterTracker(ReadyTracker readyTracker)", "full_signature": "@Override public void unregisterTracker(ReadyTracker readyTracker)", "class_method_signature": "ReadyServiceImpl.unregisterTracker(ReadyTracker readyTracker)", "testcase": false, "constructor": false}, {"identifier": "notifyTracker", "parameters": "(ReadyTracker readyTracker, Consumer<ReadyMarker> action)", "modifiers": "private", "return": "void", "signature": "void notifyTracker(ReadyTracker readyTracker, Consumer<ReadyMarker> action)", "full_signature": "private void notifyTracker(ReadyTracker readyTracker, Consumer<ReadyMarker> action)", "class_method_signature": "ReadyServiceImpl.notifyTracker(ReadyTracker readyTracker, Consumer<ReadyMarker> action)", "testcase": false, "constructor": false}], "file": "bundles/org.openhab.core/src/main/java/org/openhab/core/internal/service/ReadyServiceImpl.java"}, "focal_method": {"identifier": "unregisterTracker", "parameters": "(ReadyTracker readyTracker)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void unregisterTracker(ReadyTracker readyTracker) {\n        rwlTrackers.writeLock().lock();\n        try {\n            if (trackers.containsKey(readyTracker)) {\n                notifyTracker(readyTracker, marker -> readyTracker.onReadyMarkerRemoved(marker));\n            }\n            trackers.remove(readyTracker);\n        } finally {\n            rwlTrackers.writeLock().unlock();\n        }\n    }", "signature": "void unregisterTracker(ReadyTracker readyTracker)", "full_signature": "@Override public void unregisterTracker(ReadyTracker readyTracker)", "class_method_signature": "ReadyServiceImpl.unregisterTracker(ReadyTracker readyTracker)", "testcase": false, "constructor": false, "invocations": ["lock", "writeLock", "containsKey", "notifyTracker", "onReadyMarkerRemoved", "remove", "unlock", "writeLock"]}, "repository": {"repo_id": 48337670, "url": "https://github.com/openhab/openhab-core", "stars": 241, "created": "12/20/2015 9:23:20 PM +00:00", "updates": "2020-01-27T16:55:53+00:00", "fork": "False", "license": "licensed"}}