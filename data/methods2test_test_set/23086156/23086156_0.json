{"test_class": {"identifier": "FacetRegistryTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/io/nuun/kernel/core/internal/FacetRegistryTest.java"}, "test_case": {"identifier": "get_null_is_accepted", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void get_null_is_accepted()\n    {\n        FacetRegistry registry = new FacetRegistry(new ArrayList<>());\n        Assertions.assertThat((Object)registry.getFacet(null)).isNull();\n    }", "signature": "void get_null_is_accepted()", "full_signature": "@Test public void get_null_is_accepted()", "class_method_signature": "FacetRegistryTest.get_null_is_accepted()", "testcase": true, "constructor": false, "invocations": ["isNull", "assertThat", "getFacet"]}, "focal_class": {"identifier": "FacetRegistry", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final ListMultimap<Class<?>, Plugin> pluginsByFacet = ArrayListMultimap.create();", "modifier": "private final", "type": "ListMultimap<Class<?>, Plugin>", "declarator": "pluginsByFacet = ArrayListMultimap.create()", "var_name": "pluginsByFacet"}, {"original_string": "private final Map<Class<?>, Plugin> pluginsByClass = new HashMap<>();", "modifier": "private final", "type": "Map<Class<?>, Plugin>", "declarator": "pluginsByClass = new HashMap<>()", "var_name": "pluginsByClass"}], "methods": [{"identifier": "FacetRegistry", "parameters": "(final Collection<Plugin> plugins)", "modifiers": "", "return": "", "signature": " FacetRegistry(final Collection<Plugin> plugins)", "full_signature": "  FacetRegistry(final Collection<Plugin> plugins)", "class_method_signature": "FacetRegistry.FacetRegistry(final Collection<Plugin> plugins)", "testcase": false, "constructor": true}, {"identifier": "collectFacets", "parameters": "(Plugin plugin)", "modifiers": "private", "return": "void", "signature": "void collectFacets(Plugin plugin)", "full_signature": "private void collectFacets(Plugin plugin)", "class_method_signature": "FacetRegistry.collectFacets(Plugin plugin)", "testcase": false, "constructor": false}, {"identifier": "getFacet", "parameters": "(@Nullable Class<T> facet)", "modifiers": "", "return": "T", "signature": "T getFacet(@Nullable Class<T> facet)", "full_signature": " T getFacet(@Nullable Class<T> facet)", "class_method_signature": "FacetRegistry.getFacet(@Nullable Class<T> facet)", "testcase": false, "constructor": false}, {"identifier": "getFacets", "parameters": "(@Nullable Class<T> facet)", "modifiers": "@SuppressWarnings(\"unchecked\")", "return": "List<T>", "signature": "List<T> getFacets(@Nullable Class<T> facet)", "full_signature": "@SuppressWarnings(\"unchecked\") List<T> getFacets(@Nullable Class<T> facet)", "class_method_signature": "FacetRegistry.getFacets(@Nullable Class<T> facet)", "testcase": false, "constructor": false}, {"identifier": "isFacet", "parameters": "(Class<?> aClass)", "modifiers": "private", "return": "boolean", "signature": "boolean isFacet(Class<?> aClass)", "full_signature": "private boolean isFacet(Class<?> aClass)", "class_method_signature": "FacetRegistry.isFacet(Class<?> aClass)", "testcase": false, "constructor": false}], "file": "core/src/main/java/io/nuun/kernel/core/internal/FacetRegistry.java"}, "focal_method": {"identifier": "getFacet", "parameters": "(@Nullable Class<T> facet)", "modifiers": "", "return": "T", "body": "<T> T getFacet(@Nullable Class<T> facet) throws IllegalStateException\n    {\n        T plugin = null;\n        if (facet != null)\n        {\n            List<T> plugins = getFacets(facet);\n            if (plugins.size() > 1)\n            {\n                throw new IllegalStateException(String.format(\"One implementation was expected for the %s facet, but found: %s\", facet.getSimpleName(), plugins.toString()));\n            } else if (plugins.size() == 1)\n            {\n                plugin = plugins.get(0);\n            }\n        }\n        return plugin;\n    }", "signature": "T getFacet(@Nullable Class<T> facet)", "full_signature": " T getFacet(@Nullable Class<T> facet)", "class_method_signature": "FacetRegistry.getFacet(@Nullable Class<T> facet)", "testcase": false, "constructor": false, "invocations": ["getFacets", "size", "format", "getSimpleName", "toString", "size", "get"]}, "repository": {"repo_id": 23086156, "url": "https://github.com/nuun-io/kernel", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 7, "size": 1114, "license": "licensed"}}