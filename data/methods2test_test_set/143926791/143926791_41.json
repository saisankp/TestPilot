{"test_class": {"identifier": "CorsHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "CorsHandler handler = new CorsHandler(\"*\");", "modifier": "", "type": "CorsHandler", "declarator": "handler = new CorsHandler(\"*\")", "var_name": "handler"}], "file": "zipkin-server/src/test/java/zipkin2/server/internal/CorsHandlerTest.java"}, "test_case": {"identifier": "validateOrigin_returnsWildcard", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void validateOrigin_returnsWildcard() {\n    boolean valid = validateOrigin(\n      \"get\",\n      ImmutableMap.of(\"Origin\", \"http://foobar.com\"),\n      ImmutableMap.of(\n        \"vary\", \"origin\",\n        \"access-control-allow-origin\", \"*\"\n      )\n    );\n\n    assertThat(valid).isTrue();\n  }", "signature": "void validateOrigin_returnsWildcard()", "full_signature": "@Test public void validateOrigin_returnsWildcard()", "class_method_signature": "CorsHandlerTest.validateOrigin_returnsWildcard()", "testcase": true, "constructor": false, "invocations": ["validateOrigin", "of", "of", "isTrue", "assertThat"]}, "focal_class": {"identifier": "CorsHandler", "superclass": "", "interfaces": "implements HttpHandler, HandlerWrapper", "fields": [{"original_string": "private static Logger logger = Logger.getLogger(CorsHandler.class.getName());", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger(CorsHandler.class.getName())", "var_name": "logger"}, {"original_string": "static final HttpString\n    OPTIONS = HttpString.tryFromString(\"OPTIONS\"),\n    ORIGIN = HttpString.tryFromString(\"origin\"),\n    VARY = HttpString.tryFromString(\"vary\"),\n    ACCESS_CONTROL_ALLOW_METHODS = HttpString.tryFromString(\"access-control-allow-methods\"),\n    ACCESS_CONTROL_ALLOW_HEADERS = HttpString.tryFromString(\"access-control-allow-headers\"),\n    ACCESS_CONTROL_ALLOW_ORIGIN = HttpString.tryFromString(\"access-control-allow-origin\"),\n    ACCESS_CONTROL_REQUEST_METHOD = HttpString.tryFromString(\"access-control-request-method\"),\n    ACCESS_CONTROL_REQUEST_HEADERS = HttpString.tryFromString(\"access-control-request-headers\");", "modifier": "static final", "type": "HttpString", "declarator": "OPTIONS = HttpString.tryFromString(\"OPTIONS\")", "var_name": "OPTIONS"}, {"original_string": "final List<String> allowedOrigins;", "modifier": "final", "type": "List<String>", "declarator": "allowedOrigins", "var_name": "allowedOrigins"}, {"original_string": "final List<String> allowedHeaders;", "modifier": "final", "type": "List<String>", "declarator": "allowedHeaders", "var_name": "allowedHeaders"}, {"original_string": "final boolean wildcardOrigin;", "modifier": "final", "type": "boolean", "declarator": "wildcardOrigin", "var_name": "wildcardOrigin"}, {"original_string": "HttpHandler next;", "modifier": "", "type": "HttpHandler", "declarator": "next", "var_name": "next"}], "methods": [{"identifier": "CorsHandler", "parameters": "(String allowedOrigins)", "modifiers": "", "return": "", "signature": " CorsHandler(String allowedOrigins)", "full_signature": "  CorsHandler(String allowedOrigins)", "class_method_signature": "CorsHandler.CorsHandler(String allowedOrigins)", "testcase": false, "constructor": true}, {"identifier": "handleRequest", "parameters": "(HttpServerExchange exchange)", "modifiers": "@Override public", "return": "void", "signature": "void handleRequest(HttpServerExchange exchange)", "full_signature": "@Override public void handleRequest(HttpServerExchange exchange)", "class_method_signature": "CorsHandler.handleRequest(HttpServerExchange exchange)", "testcase": false, "constructor": false}, {"identifier": "handlePreflight", "parameters": "(HttpServerExchange exchange)", "modifiers": "", "return": "void", "signature": "void handlePreflight(HttpServerExchange exchange)", "full_signature": " void handlePreflight(HttpServerExchange exchange)", "class_method_signature": "CorsHandler.handlePreflight(HttpServerExchange exchange)", "testcase": false, "constructor": false}, {"identifier": "requestedHeadersAllowed", "parameters": "(String requestedHeaders)", "modifiers": "", "return": "boolean", "signature": "boolean requestedHeadersAllowed(String requestedHeaders)", "full_signature": " boolean requestedHeadersAllowed(String requestedHeaders)", "class_method_signature": "CorsHandler.requestedHeadersAllowed(String requestedHeaders)", "testcase": false, "constructor": false}, {"identifier": "validateOrigin", "parameters": "(HttpServerExchange exchange)", "modifiers": "", "return": "boolean", "signature": "boolean validateOrigin(HttpServerExchange exchange)", "full_signature": " boolean validateOrigin(HttpServerExchange exchange)", "class_method_signature": "CorsHandler.validateOrigin(HttpServerExchange exchange)", "testcase": false, "constructor": false}, {"identifier": "isPreflightRequest", "parameters": "(HttpServerExchange exchange)", "modifiers": "private static", "return": "boolean", "signature": "boolean isPreflightRequest(HttpServerExchange exchange)", "full_signature": "private static boolean isPreflightRequest(HttpServerExchange exchange)", "class_method_signature": "CorsHandler.isPreflightRequest(HttpServerExchange exchange)", "testcase": false, "constructor": false}, {"identifier": "setOrigin", "parameters": "(String origin, HeaderMap responseHeaders)", "modifiers": "private", "return": "boolean", "signature": "boolean setOrigin(String origin, HeaderMap responseHeaders)", "full_signature": "private boolean setOrigin(String origin, HeaderMap responseHeaders)", "class_method_signature": "CorsHandler.setOrigin(String origin, HeaderMap responseHeaders)", "testcase": false, "constructor": false}, {"identifier": "wrap", "parameters": "(HttpHandler handler)", "modifiers": "@Override public", "return": "HttpHandler", "signature": "HttpHandler wrap(HttpHandler handler)", "full_signature": "@Override public HttpHandler wrap(HttpHandler handler)", "class_method_signature": "CorsHandler.wrap(HttpHandler handler)", "testcase": false, "constructor": false}], "file": "zipkin-server/src/main/java/zipkin2/server/internal/CorsHandler.java"}, "focal_method": {"identifier": "validateOrigin", "parameters": "(HttpServerExchange exchange)", "modifiers": "", "return": "boolean", "body": "boolean validateOrigin(HttpServerExchange exchange) {\n    HeaderMap responseHeaders = exchange.getResponseHeaders();\n    responseHeaders.put(VARY, \"origin\");\n    String origin = exchange.getRequestHeaders().getFirst(ORIGIN);\n    if (origin == null) return true; // just vary\n    return setOrigin(origin, responseHeaders);\n  }", "signature": "boolean validateOrigin(HttpServerExchange exchange)", "full_signature": " boolean validateOrigin(HttpServerExchange exchange)", "class_method_signature": "CorsHandler.validateOrigin(HttpServerExchange exchange)", "testcase": false, "constructor": false, "invocations": ["getResponseHeaders", "put", "getFirst", "getRequestHeaders", "setOrigin"]}, "repository": {"repo_id": 143926791, "url": "https://github.com/Pivotal-Field-Engineering/pivotal-bank-demo", "language": "Java", "is_fork": false, "fork_count": 48, "stargazer_count": 35, "size": 45556, "license": "licensed"}}