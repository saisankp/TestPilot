{"test_class": {"identifier": "ShardStatsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MBeanServer mbeanServer;", "modifier": "private", "type": "MBeanServer", "declarator": "mbeanServer", "var_name": "mbeanServer"}, {"original_string": "private ShardStats shardStats;", "modifier": "private", "type": "ShardStats", "declarator": "shardStats", "var_name": "shardStats"}, {"original_string": "private ObjectName testMBeanName;", "modifier": "private", "type": "ObjectName", "declarator": "testMBeanName", "var_name": "testMBeanName"}], "file": "opendaylight/md-sal/sal-distributed-datastore/src/test/java/org/opendaylight/controller/cluster/datastore/jmx/mbeans/shard/ShardStatsTest.java"}, "test_case": {"identifier": "testGetFailedReadTransactionsCount", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetFailedReadTransactionsCount() throws Exception {\n        //let us increment FailedReadTransactions count and then check\n        shardStats.incrementFailedReadTransactionsCount();\n        shardStats.incrementFailedReadTransactionsCount();\n\n\n        //now let us get from MBeanServer what is the transaction count.\n        Object attribute =\n            mbeanServer.getAttribute(testMBeanName, \"FailedReadTransactionsCount\");\n        Assert.assertEquals(attribute, 2L);\n    }", "signature": "void testGetFailedReadTransactionsCount()", "full_signature": "@Test public void testGetFailedReadTransactionsCount()", "class_method_signature": "ShardStatsTest.testGetFailedReadTransactionsCount()", "testcase": true, "constructor": false, "invocations": ["incrementFailedReadTransactionsCount", "incrementFailedReadTransactionsCount", "getAttribute", "assertEquals"]}, "focal_class": {"identifier": "ShardStats", "superclass": "extends AbstractMXBean", "interfaces": "implements ShardStatsMXBean", "fields": [{"original_string": "public static final String JMX_CATEGORY_SHARD = \"Shards\";", "modifier": "public static final", "type": "String", "declarator": "JMX_CATEGORY_SHARD = \"Shards\"", "var_name": "JMX_CATEGORY_SHARD"}, {"original_string": "@GuardedBy(\"DATE_FORMAT\")\n    private static final SimpleDateFormat DATE_FORMAT = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS\");", "modifier": "@GuardedBy(\"DATE_FORMAT\")\n    private static final", "type": "SimpleDateFormat", "declarator": "DATE_FORMAT = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS\")", "var_name": "DATE_FORMAT"}, {"original_string": "private static final MapJoiner MAP_JOINER = Joiner.on(\", \").withKeyValueSeparator(\": \");", "modifier": "private static final", "type": "MapJoiner", "declarator": "MAP_JOINER = Joiner.on(\", \").withKeyValueSeparator(\": \")", "var_name": "MAP_JOINER"}, {"original_string": "private final Shard shard;", "modifier": "private final", "type": "Shard", "declarator": "shard", "var_name": "shard"}, {"original_string": "private final OnDemandShardStateCache stateCache;", "modifier": "private final", "type": "OnDemandShardStateCache", "declarator": "stateCache", "var_name": "stateCache"}, {"original_string": "private long committedTransactionsCount;", "modifier": "private", "type": "long", "declarator": "committedTransactionsCount", "var_name": "committedTransactionsCount"}, {"original_string": "private long readOnlyTransactionCount;", "modifier": "private", "type": "long", "declarator": "readOnlyTransactionCount", "var_name": "readOnlyTransactionCount"}, {"original_string": "private long readWriteTransactionCount;", "modifier": "private", "type": "long", "declarator": "readWriteTransactionCount", "var_name": "readWriteTransactionCount"}, {"original_string": "private long lastCommittedTransactionTime;", "modifier": "private", "type": "long", "declarator": "lastCommittedTransactionTime", "var_name": "lastCommittedTransactionTime"}, {"original_string": "private long failedTransactionsCount;", "modifier": "private", "type": "long", "declarator": "failedTransactionsCount", "var_name": "failedTransactionsCount"}, {"original_string": "private final AtomicLong failedReadTransactionsCount = new AtomicLong();", "modifier": "private final", "type": "AtomicLong", "declarator": "failedReadTransactionsCount = new AtomicLong()", "var_name": "failedReadTransactionsCount"}, {"original_string": "private long abortTransactionsCount;", "modifier": "private", "type": "long", "declarator": "abortTransactionsCount", "var_name": "abortTransactionsCount"}, {"original_string": "private boolean followerInitialSyncStatus = false;", "modifier": "private", "type": "boolean", "declarator": "followerInitialSyncStatus = false", "var_name": "followerInitialSyncStatus"}, {"original_string": "private String statRetrievalError;", "modifier": "private", "type": "String", "declarator": "statRetrievalError", "var_name": "statRetrievalError"}, {"original_string": "private long leadershipChangeCount;", "modifier": "private", "type": "long", "declarator": "leadershipChangeCount", "var_name": "leadershipChangeCount"}, {"original_string": "private long lastLeadershipChangeTime;", "modifier": "private", "type": "long", "declarator": "lastLeadershipChangeTime", "var_name": "lastLeadershipChangeTime"}], "methods": [{"identifier": "ShardStats", "parameters": "(final String shardName, final String mxBeanType, final @Nullable Shard shard)", "modifiers": "public", "return": "", "signature": " ShardStats(final String shardName, final String mxBeanType, final @Nullable Shard shard)", "full_signature": "public  ShardStats(final String shardName, final String mxBeanType, final @Nullable Shard shard)", "class_method_signature": "ShardStats.ShardStats(final String shardName, final String mxBeanType, final @Nullable Shard shard)", "testcase": false, "constructor": true}, {"identifier": "getOnDemandRaftState", "parameters": "()", "modifiers": "@SuppressWarnings(\"checkstyle:IllegalCatch\") private", "return": "OnDemandRaftState", "signature": "OnDemandRaftState getOnDemandRaftState()", "full_signature": "@SuppressWarnings(\"checkstyle:IllegalCatch\") private OnDemandRaftState getOnDemandRaftState()", "class_method_signature": "ShardStats.getOnDemandRaftState()", "testcase": false, "constructor": false}, {"identifier": "formatMillis", "parameters": "(final long timeMillis)", "modifiers": "private static", "return": "String", "signature": "String formatMillis(final long timeMillis)", "full_signature": "private static String formatMillis(final long timeMillis)", "class_method_signature": "ShardStats.formatMillis(final long timeMillis)", "testcase": false, "constructor": false}, {"identifier": "getShardName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getShardName()", "full_signature": "@Override public String getShardName()", "class_method_signature": "ShardStats.getShardName()", "testcase": false, "constructor": false}, {"identifier": "getCommittedTransactionsCount", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getCommittedTransactionsCount()", "full_signature": "@Override public long getCommittedTransactionsCount()", "class_method_signature": "ShardStats.getCommittedTransactionsCount()", "testcase": false, "constructor": false}, {"identifier": "getLeader", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getLeader()", "full_signature": "@Override public String getLeader()", "class_method_signature": "ShardStats.getLeader()", "testcase": false, "constructor": false}, {"identifier": "getRaftState", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getRaftState()", "full_signature": "@Override public String getRaftState()", "class_method_signature": "ShardStats.getRaftState()", "testcase": false, "constructor": false}, {"identifier": "getReadOnlyTransactionCount", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getReadOnlyTransactionCount()", "full_signature": "@Override public long getReadOnlyTransactionCount()", "class_method_signature": "ShardStats.getReadOnlyTransactionCount()", "testcase": false, "constructor": false}, {"identifier": "getReadWriteTransactionCount", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getReadWriteTransactionCount()", "full_signature": "@Override public long getReadWriteTransactionCount()", "class_method_signature": "ShardStats.getReadWriteTransactionCount()", "testcase": false, "constructor": false}, {"identifier": "getLastLogIndex", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getLastLogIndex()", "full_signature": "@Override public long getLastLogIndex()", "class_method_signature": "ShardStats.getLastLogIndex()", "testcase": false, "constructor": false}, {"identifier": "getLastLogTerm", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getLastLogTerm()", "full_signature": "@Override public long getLastLogTerm()", "class_method_signature": "ShardStats.getLastLogTerm()", "testcase": false, "constructor": false}, {"identifier": "getCurrentTerm", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getCurrentTerm()", "full_signature": "@Override public long getCurrentTerm()", "class_method_signature": "ShardStats.getCurrentTerm()", "testcase": false, "constructor": false}, {"identifier": "getCommitIndex", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getCommitIndex()", "full_signature": "@Override public long getCommitIndex()", "class_method_signature": "ShardStats.getCommitIndex()", "testcase": false, "constructor": false}, {"identifier": "getLastApplied", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getLastApplied()", "full_signature": "@Override public long getLastApplied()", "class_method_signature": "ShardStats.getLastApplied()", "testcase": false, "constructor": false}, {"identifier": "getLastIndex", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getLastIndex()", "full_signature": "@Override public long getLastIndex()", "class_method_signature": "ShardStats.getLastIndex()", "testcase": false, "constructor": false}, {"identifier": "getLastTerm", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getLastTerm()", "full_signature": "@Override public long getLastTerm()", "class_method_signature": "ShardStats.getLastTerm()", "testcase": false, "constructor": false}, {"identifier": "getSnapshotIndex", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getSnapshotIndex()", "full_signature": "@Override public long getSnapshotIndex()", "class_method_signature": "ShardStats.getSnapshotIndex()", "testcase": false, "constructor": false}, {"identifier": "getSnapshotTerm", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getSnapshotTerm()", "full_signature": "@Override public long getSnapshotTerm()", "class_method_signature": "ShardStats.getSnapshotTerm()", "testcase": false, "constructor": false}, {"identifier": "getReplicatedToAllIndex", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getReplicatedToAllIndex()", "full_signature": "@Override public long getReplicatedToAllIndex()", "class_method_signature": "ShardStats.getReplicatedToAllIndex()", "testcase": false, "constructor": false}, {"identifier": "getVotedFor", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getVotedFor()", "full_signature": "@Override public String getVotedFor()", "class_method_signature": "ShardStats.getVotedFor()", "testcase": false, "constructor": false}, {"identifier": "isVoting", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isVoting()", "full_signature": "@Override public boolean isVoting()", "class_method_signature": "ShardStats.isVoting()", "testcase": false, "constructor": false}, {"identifier": "getPeerVotingStates", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPeerVotingStates()", "full_signature": "@Override public String getPeerVotingStates()", "class_method_signature": "ShardStats.getPeerVotingStates()", "testcase": false, "constructor": false}, {"identifier": "isSnapshotCaptureInitiated", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isSnapshotCaptureInitiated()", "full_signature": "@Override public boolean isSnapshotCaptureInitiated()", "class_method_signature": "ShardStats.isSnapshotCaptureInitiated()", "testcase": false, "constructor": false}, {"identifier": "getLastCommittedTransactionTime", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getLastCommittedTransactionTime()", "full_signature": "@Override public String getLastCommittedTransactionTime()", "class_method_signature": "ShardStats.getLastCommittedTransactionTime()", "testcase": false, "constructor": false}, {"identifier": "getFailedTransactionsCount", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getFailedTransactionsCount()", "full_signature": "@Override public long getFailedTransactionsCount()", "class_method_signature": "ShardStats.getFailedTransactionsCount()", "testcase": false, "constructor": false}, {"identifier": "getFailedReadTransactionsCount", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getFailedReadTransactionsCount()", "full_signature": "@Override public long getFailedReadTransactionsCount()", "class_method_signature": "ShardStats.getFailedReadTransactionsCount()", "testcase": false, "constructor": false}, {"identifier": "getAbortTransactionsCount", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getAbortTransactionsCount()", "full_signature": "@Override public long getAbortTransactionsCount()", "class_method_signature": "ShardStats.getAbortTransactionsCount()", "testcase": false, "constructor": false}, {"identifier": "incrementCommittedTransactionCount", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long incrementCommittedTransactionCount()", "full_signature": "public long incrementCommittedTransactionCount()", "class_method_signature": "ShardStats.incrementCommittedTransactionCount()", "testcase": false, "constructor": false}, {"identifier": "incrementReadOnlyTransactionCount", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long incrementReadOnlyTransactionCount()", "full_signature": "public long incrementReadOnlyTransactionCount()", "class_method_signature": "ShardStats.incrementReadOnlyTransactionCount()", "testcase": false, "constructor": false}, {"identifier": "incrementReadWriteTransactionCount", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long incrementReadWriteTransactionCount()", "full_signature": "public long incrementReadWriteTransactionCount()", "class_method_signature": "ShardStats.incrementReadWriteTransactionCount()", "testcase": false, "constructor": false}, {"identifier": "incrementFailedTransactionsCount", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long incrementFailedTransactionsCount()", "full_signature": "public long incrementFailedTransactionsCount()", "class_method_signature": "ShardStats.incrementFailedTransactionsCount()", "testcase": false, "constructor": false}, {"identifier": "incrementFailedReadTransactionsCount", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long incrementFailedReadTransactionsCount()", "full_signature": "public long incrementFailedReadTransactionsCount()", "class_method_signature": "ShardStats.incrementFailedReadTransactionsCount()", "testcase": false, "constructor": false}, {"identifier": "incrementAbortTransactionsCount", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long incrementAbortTransactionsCount()", "full_signature": "public long incrementAbortTransactionsCount()", "class_method_signature": "ShardStats.incrementAbortTransactionsCount()", "testcase": false, "constructor": false}, {"identifier": "setLastCommittedTransactionTime", "parameters": "(final long lastCommittedTransactionTime)", "modifiers": "public", "return": "void", "signature": "void setLastCommittedTransactionTime(final long lastCommittedTransactionTime)", "full_signature": "public void setLastCommittedTransactionTime(final long lastCommittedTransactionTime)", "class_method_signature": "ShardStats.setLastCommittedTransactionTime(final long lastCommittedTransactionTime)", "testcase": false, "constructor": false}, {"identifier": "getInMemoryJournalDataSize", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getInMemoryJournalDataSize()", "full_signature": "@Override public long getInMemoryJournalDataSize()", "class_method_signature": "ShardStats.getInMemoryJournalDataSize()", "testcase": false, "constructor": false}, {"identifier": "getInMemoryJournalLogSize", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getInMemoryJournalLogSize()", "full_signature": "@Override public long getInMemoryJournalLogSize()", "class_method_signature": "ShardStats.getInMemoryJournalLogSize()", "testcase": false, "constructor": false}, {"identifier": "resetTransactionCounters", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void resetTransactionCounters()", "full_signature": "@Override public void resetTransactionCounters()", "class_method_signature": "ShardStats.resetTransactionCounters()", "testcase": false, "constructor": false}, {"identifier": "setFollowerInitialSyncStatus", "parameters": "(final boolean followerInitialSyncStatus)", "modifiers": "public", "return": "void", "signature": "void setFollowerInitialSyncStatus(final boolean followerInitialSyncStatus)", "full_signature": "public void setFollowerInitialSyncStatus(final boolean followerInitialSyncStatus)", "class_method_signature": "ShardStats.setFollowerInitialSyncStatus(final boolean followerInitialSyncStatus)", "testcase": false, "constructor": false}, {"identifier": "getFollowerInitialSyncStatus", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean getFollowerInitialSyncStatus()", "full_signature": "@Override public boolean getFollowerInitialSyncStatus()", "class_method_signature": "ShardStats.getFollowerInitialSyncStatus()", "testcase": false, "constructor": false}, {"identifier": "getFollowerInfo", "parameters": "()", "modifiers": "@Override public", "return": "List<FollowerInfo>", "signature": "List<FollowerInfo> getFollowerInfo()", "full_signature": "@Override public List<FollowerInfo> getFollowerInfo()", "class_method_signature": "ShardStats.getFollowerInfo()", "testcase": false, "constructor": false}, {"identifier": "getPeerAddresses", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPeerAddresses()", "full_signature": "@Override public String getPeerAddresses()", "class_method_signature": "ShardStats.getPeerAddresses()", "testcase": false, "constructor": false}, {"identifier": "getStatRetrievalTime", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getStatRetrievalTime()", "full_signature": "@Override public String getStatRetrievalTime()", "class_method_signature": "ShardStats.getStatRetrievalTime()", "testcase": false, "constructor": false}, {"identifier": "getStatRetrievalError", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getStatRetrievalError()", "full_signature": "@Override public String getStatRetrievalError()", "class_method_signature": "ShardStats.getStatRetrievalError()", "testcase": false, "constructor": false}, {"identifier": "getLeadershipChangeCount", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getLeadershipChangeCount()", "full_signature": "@Override public long getLeadershipChangeCount()", "class_method_signature": "ShardStats.getLeadershipChangeCount()", "testcase": false, "constructor": false}, {"identifier": "incrementLeadershipChangeCount", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void incrementLeadershipChangeCount()", "full_signature": "public void incrementLeadershipChangeCount()", "class_method_signature": "ShardStats.incrementLeadershipChangeCount()", "testcase": false, "constructor": false}, {"identifier": "getLastLeadershipChangeTime", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getLastLeadershipChangeTime()", "full_signature": "@Override public String getLastLeadershipChangeTime()", "class_method_signature": "ShardStats.getLastLeadershipChangeTime()", "testcase": false, "constructor": false}, {"identifier": "getPendingTxCommitQueueSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getPendingTxCommitQueueSize()", "full_signature": "@Override public int getPendingTxCommitQueueSize()", "class_method_signature": "ShardStats.getPendingTxCommitQueueSize()", "testcase": false, "constructor": false}, {"identifier": "getTxCohortCacheSize", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getTxCohortCacheSize()", "full_signature": "@Override public int getTxCohortCacheSize()", "class_method_signature": "ShardStats.getTxCohortCacheSize()", "testcase": false, "constructor": false}, {"identifier": "captureSnapshot", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void captureSnapshot()", "full_signature": "@Override public void captureSnapshot()", "class_method_signature": "ShardStats.captureSnapshot()", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/sal-distributed-datastore/src/main/java/org/opendaylight/controller/cluster/datastore/jmx/mbeans/shard/ShardStats.java"}, "focal_method": {"identifier": "getFailedReadTransactionsCount", "parameters": "()", "modifiers": "@Override public", "return": "long", "body": "@Override\n    public long getFailedReadTransactionsCount() {\n        return failedReadTransactionsCount.get();\n    }", "signature": "long getFailedReadTransactionsCount()", "full_signature": "@Override public long getFailedReadTransactionsCount()", "class_method_signature": "ShardStats.getFailedReadTransactionsCount()", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}