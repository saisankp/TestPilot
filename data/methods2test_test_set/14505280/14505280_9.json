{"test_class": {"identifier": "GeoToolsLayerBeanFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n\t@Qualifier(\"countries\")\n\tprivate VectorLayer countries;", "modifier": "@Autowired\n\t@Qualifier(\"countries\")\n\tprivate", "type": "VectorLayer", "declarator": "countries", "var_name": "countries"}, {"original_string": "@Autowired\n\t@Qualifier(\"countriesInfo\")\n\tprivate VectorLayerInfo countriesInfo;", "modifier": "@Autowired\n\t@Qualifier(\"countriesInfo\")\n\tprivate", "type": "VectorLayerInfo", "declarator": "countriesInfo", "var_name": "countriesInfo"}, {"original_string": "@Autowired\n\tprivate GeoToolsLayerBeanFactory beanFactory;", "modifier": "@Autowired\n\tprivate", "type": "GeoToolsLayerBeanFactory", "declarator": "beanFactory", "var_name": "beanFactory"}], "file": "plugin/runtimeconfig/runtimeconfig/src/test/java/org/geomajas/plugin/runtimeconfig/service/factory/GeoToolsLayerBeanFactoryTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test() throws RuntimeConfigException, IOException {\n\t\tMap<String, Object> params = new HashMap<String, Object>();\n\t\tparams.put(GeoToolsLayerBeanFactory.BEAN_NAME, \"testLayer\");\n\t\tparams.put(GeoToolsLayerBeanFactory.CLASS_NAME, GeoToolsLayer.class);\n\t\tparams.put(GeoToolsLayerBeanFactory.LAYER_INFO, countriesInfo);\n\t\tparams.put(GeoToolsLayerBeanFactory.STYLE_INFO, countriesInfo.getNamedStyleInfos());\n\t\tList<BeanDefinitionHolder> beans = beanFactory.createBeans(params);\n\t\tSystem.out.println(new BeanDefinitionWriterServiceImpl().toString(beans));\n\t\tAssert.assertEquals(2, beans.size());\n\t}", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "GeoToolsLayerBeanFactoryTest.test()", "testcase": true, "constructor": false, "invocations": ["put", "put", "put", "put", "getNamedStyleInfos", "createBeans", "println", "toString", "assertEquals", "size"]}, "focal_class": {"identifier": "GeoToolsLayerBeanFactory", "superclass": "extends BaseVectorLayerBeanFactory", "interfaces": "", "fields": [{"original_string": "public static final String LOCATION = \"location\";", "modifier": "public static final", "type": "String", "declarator": "LOCATION = \"location\"", "var_name": "LOCATION"}, {"original_string": "public static final String PARAMETERS = \"parameters\";", "modifier": "public static final", "type": "String", "declarator": "PARAMETERS = \"parameters\"", "var_name": "PARAMETERS"}, {"original_string": "public static final String URL = \"url\";", "modifier": "public static final", "type": "String", "declarator": "URL = \"url\"", "var_name": "URL"}, {"original_string": "@Autowired\n\tprivate ResourceService resourceService;", "modifier": "@Autowired\n\tprivate", "type": "ResourceService", "declarator": "resourceService", "var_name": "resourceService"}, {"original_string": "private Random rand = new Random();", "modifier": "private", "type": "Random", "declarator": "rand = new Random()", "var_name": "rand"}, {"original_string": "@Autowired\n\tprivate GeoService geoService;", "modifier": "@Autowired\n\tprivate", "type": "GeoService", "declarator": "geoService", "var_name": "geoService"}], "methods": [{"identifier": "GeoToolsLayerBeanFactory", "parameters": "()", "modifiers": "protected", "return": "", "signature": " GeoToolsLayerBeanFactory()", "full_signature": "protected  GeoToolsLayerBeanFactory()", "class_method_signature": "GeoToolsLayerBeanFactory.GeoToolsLayerBeanFactory()", "testcase": false, "constructor": true}, {"identifier": "getPriority", "parameters": "(Map<String, Object> parameters)", "modifiers": "@Override public", "return": "Priority", "signature": "Priority getPriority(Map<String, Object> parameters)", "full_signature": "@Override public Priority getPriority(Map<String, Object> parameters)", "class_method_signature": "GeoToolsLayerBeanFactory.getPriority(Map<String, Object> parameters)", "testcase": false, "constructor": false}, {"identifier": "createBeans", "parameters": "(Map<String, Object> parameters)", "modifiers": "@Override public", "return": "List<BeanDefinitionHolder>", "signature": "List<BeanDefinitionHolder> createBeans(Map<String, Object> parameters)", "full_signature": "@Override public List<BeanDefinitionHolder> createBeans(Map<String, Object> parameters)", "class_method_signature": "GeoToolsLayerBeanFactory.createBeans(Map<String, Object> parameters)", "testcase": false, "constructor": false}, {"identifier": "generateDefaultInfo", "parameters": "(URL url)", "modifiers": "private", "return": "VectorLayerInfo", "signature": "VectorLayerInfo generateDefaultInfo(URL url)", "full_signature": "private VectorLayerInfo generateDefaultInfo(URL url)", "class_method_signature": "GeoToolsLayerBeanFactory.generateDefaultInfo(URL url)", "testcase": false, "constructor": false}, {"identifier": "setRandomStyle", "parameters": "(VectorLayerInfo info, SimpleFeatureType schema)", "modifiers": "private", "return": "void", "signature": "void setRandomStyle(VectorLayerInfo info, SimpleFeatureType schema)", "full_signature": "private void setRandomStyle(VectorLayerInfo info, SimpleFeatureType schema)", "class_method_signature": "GeoToolsLayerBeanFactory.setRandomStyle(VectorLayerInfo info, SimpleFeatureType schema)", "testcase": false, "constructor": false}, {"identifier": "createRandomLabelStyle", "parameters": "(String attributeName)", "modifiers": "private", "return": "LabelStyleInfo", "signature": "LabelStyleInfo createRandomLabelStyle(String attributeName)", "full_signature": "private LabelStyleInfo createRandomLabelStyle(String attributeName)", "class_method_signature": "GeoToolsLayerBeanFactory.createRandomLabelStyle(String attributeName)", "testcase": false, "constructor": false}, {"identifier": "createRandomPolygonStyle", "parameters": "()", "modifiers": "private", "return": "FeatureStyleInfo", "signature": "FeatureStyleInfo createRandomPolygonStyle()", "full_signature": "private FeatureStyleInfo createRandomPolygonStyle()", "class_method_signature": "GeoToolsLayerBeanFactory.createRandomPolygonStyle()", "testcase": false, "constructor": false}, {"identifier": "createRandomPointStyle", "parameters": "()", "modifiers": "private", "return": "FeatureStyleInfo", "signature": "FeatureStyleInfo createRandomPointStyle()", "full_signature": "private FeatureStyleInfo createRandomPointStyle()", "class_method_signature": "GeoToolsLayerBeanFactory.createRandomPointStyle()", "testcase": false, "constructor": false}, {"identifier": "createRandomLineStyle", "parameters": "()", "modifiers": "private", "return": "FeatureStyleInfo", "signature": "FeatureStyleInfo createRandomLineStyle()", "full_signature": "private FeatureStyleInfo createRandomLineStyle()", "class_method_signature": "GeoToolsLayerBeanFactory.createRandomLineStyle()", "testcase": false, "constructor": false}, {"identifier": "createRandomColor", "parameters": "()", "modifiers": "private", "return": "Color", "signature": "Color createRandomColor()", "full_signature": "private Color createRandomColor()", "class_method_signature": "GeoToolsLayerBeanFactory.createRandomColor()", "testcase": false, "constructor": false}, {"identifier": "toCss", "parameters": "(Color color)", "modifiers": "private", "return": "String", "signature": "String toCss(Color color)", "full_signature": "private String toCss(Color color)", "class_method_signature": "GeoToolsLayerBeanFactory.toCss(Color color)", "testcase": false, "constructor": false}, {"identifier": "setFeatureInfo", "parameters": "(VectorLayerInfo info, SimpleFeatureType schema)", "modifiers": "private", "return": "void", "signature": "void setFeatureInfo(VectorLayerInfo info, SimpleFeatureType schema)", "full_signature": "private void setFeatureInfo(VectorLayerInfo info, SimpleFeatureType schema)", "class_method_signature": "GeoToolsLayerBeanFactory.setFeatureInfo(VectorLayerInfo info, SimpleFeatureType schema)", "testcase": false, "constructor": false}, {"identifier": "setMaxExtent", "parameters": "(VectorLayerInfo info)", "modifiers": "private", "return": "void", "signature": "void setMaxExtent(VectorLayerInfo info)", "full_signature": "private void setMaxExtent(VectorLayerInfo info)", "class_method_signature": "GeoToolsLayerBeanFactory.setMaxExtent(VectorLayerInfo info)", "testcase": false, "constructor": false}, {"identifier": "setCRS", "parameters": "(VectorLayerInfo info, CoordinateReferenceSystem crs)", "modifiers": "private", "return": "void", "signature": "void setCRS(VectorLayerInfo info, CoordinateReferenceSystem crs)", "full_signature": "private void setCRS(VectorLayerInfo info, CoordinateReferenceSystem crs)", "class_method_signature": "GeoToolsLayerBeanFactory.setCRS(VectorLayerInfo info, CoordinateReferenceSystem crs)", "testcase": false, "constructor": false}, {"identifier": "setLayerType", "parameters": "(VectorLayerInfo info, GeometryDescriptor geoType)", "modifiers": "private", "return": "void", "signature": "void setLayerType(VectorLayerInfo info, GeometryDescriptor geoType)", "full_signature": "private void setLayerType(VectorLayerInfo info, GeometryDescriptor geoType)", "class_method_signature": "GeoToolsLayerBeanFactory.setLayerType(VectorLayerInfo info, GeometryDescriptor geoType)", "testcase": false, "constructor": false}], "file": "plugin/runtimeconfig/runtimeconfig/src/main/java/org/geomajas/plugin/runtimeconfig/service/factory/GeoToolsLayerBeanFactory.java"}, "focal_method": {"identifier": "createBeans", "parameters": "(Map<String, Object> parameters)", "modifiers": "@Override public", "return": "List<BeanDefinitionHolder>", "body": "@Override\n\tpublic List<BeanDefinitionHolder> createBeans(Map<String, Object> parameters) throws RuntimeConfigException {\n\t\tResource resource = null;\n\t\tif (checkString(LOCATION, parameters) != Priority.NONE) {\n\t\t\ttry {\n\t\t\t\tresource = resourceService.find((String) parameters.get(LOCATION));\n\t\t\t\tparameters.put(URL, resource.getURL().toExternalForm());\n\t\t\t} catch (Exception e) {\n\t\t\t\tthrow new RuntimeConfigException(RuntimeConfigException.BAD_PARAMETER, LOCATION, e.getMessage());\n\t\t\t}\n\t\t}\n\t\tif (checkClass(LAYER_INFO, VectorLayerInfo.class, parameters) == Priority.NONE) {\n\t\t\t// generate the layer info\n\t\t\ttry {\n\t\t\t\tVectorLayerInfo info = generateDefaultInfo(resource.getURL());\n\t\t\t\tparameters.put(LAYER_INFO, info);\n\t\t\t} catch (Exception e) {\n\t\t\t\tthrow new RuntimeConfigException(RuntimeConfigException.BAD_PARAMETER, LOCATION, e.getMessage());\n\t\t\t}\n\t\t}\n\t\t// add styles or replace them if they were passed to us\n\t\tif (checkCollection(STYLE_INFO, NamedStyleInfo.class, parameters) == Priority.NONE) {\n\t\t\tVectorLayerInfo info = getObject(LAYER_INFO, parameters);\n\t\t\tparameters.put(STYLE_INFO, info.getNamedStyleInfos());\n\t\t} else {\n\t\t\tVectorLayerInfo info = getObject(LAYER_INFO, parameters);\n\t\t\tCollection<NamedStyleInfo> styles = getCollection(STYLE_INFO, parameters);\n\t\t\tinfo.setNamedStyleInfos(new ArrayList<NamedStyleInfo>(styles));\n\t\t}\n\t\treturn super.createBeans(parameters);\n\t}", "signature": "List<BeanDefinitionHolder> createBeans(Map<String, Object> parameters)", "full_signature": "@Override public List<BeanDefinitionHolder> createBeans(Map<String, Object> parameters)", "class_method_signature": "GeoToolsLayerBeanFactory.createBeans(Map<String, Object> parameters)", "testcase": false, "constructor": false, "invocations": ["checkString", "find", "get", "put", "toExternalForm", "getURL", "getMessage", "checkClass", "generateDefaultInfo", "getURL", "put", "getMessage", "checkCollection", "getObject", "put", "getNamedStyleInfos", "getObject", "getCollection", "setNamedStyleInfos", "createBeans"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}