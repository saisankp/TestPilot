{"test_class": {"identifier": "NaiveIndexTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final String tableName = \"dataTable\";", "modifier": "private final", "type": "String", "declarator": "tableName = \"dataTable\"", "var_name": "tableName"}, {"original_string": "private NaiveIndex naiveIndex;", "modifier": "private", "type": "NaiveIndex", "declarator": "naiveIndex", "var_name": "naiveIndex"}, {"original_string": "private final byte[] aaaRowId = \"AAA\".getBytes();", "modifier": "private final", "type": "byte[]", "declarator": "aaaRowId = \"AAA\".getBytes()", "var_name": "aaaRowId"}, {"original_string": "private final byte[] bbbRowId = \"BBB\".getBytes();", "modifier": "private final", "type": "byte[]", "declarator": "bbbRowId = \"BBB\".getBytes()", "var_name": "bbbRowId"}, {"original_string": "private final byte[] cccRowId = \"CCC\".getBytes();", "modifier": "private final", "type": "byte[]", "declarator": "cccRowId = \"CCC\".getBytes()", "var_name": "cccRowId"}, {"original_string": "private final ArrayList<byte[]> rowIdList = new ArrayList<byte[]>();", "modifier": "private final", "type": "ArrayList<byte[]>", "declarator": "rowIdList = new ArrayList<byte[]>()", "var_name": "rowIdList"}, {"original_string": "private final byte[] colFam = \"fam\".getBytes();", "modifier": "private final", "type": "byte[]", "declarator": "colFam = \"fam\".getBytes()", "var_name": "colFam"}, {"original_string": "private final byte[] colQual = \"qual\".getBytes();", "modifier": "private final", "type": "byte[]", "declarator": "colQual = \"qual\".getBytes()", "var_name": "colQual"}, {"original_string": "private final byte[] value = \"value\".getBytes();", "modifier": "private final", "type": "byte[]", "declarator": "value = \"value\".getBytes()", "var_name": "value"}], "file": "culvert-main/src/test/java/com/bah/culvert/data/index/NaiveIndexTest.java"}, "test_case": {"identifier": "testGetRange", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetRange() {\n    SeekingCurrentIterator indexIterator = naiveIndex.handleGet(cccRowId,\n        cccRowId);\n\n    // Test the returned data\n    int count = 0;\n    while (indexIterator.hasNext()) {\n      Result result = indexIterator.next();\n      count++;\n\n      assertTrue(Bytes.compareTo(result.getRecordId(), cccRowId) == 0);\n    }\n\n    // Test if we have the expected number of results\n    assertTrue(count == 1);\n  }", "signature": "void testGetRange()", "full_signature": "@Test public void testGetRange()", "class_method_signature": "NaiveIndexTest.testGetRange()", "testcase": true, "constructor": false, "invocations": ["handleGet", "hasNext", "next", "assertTrue", "compareTo", "getRecordId", "assertTrue"]}, "focal_class": {"identifier": "NaiveIndex", "superclass": "extends Index", "interfaces": "", "fields": [], "methods": [{"identifier": "handlePut", "parameters": "(Put put)", "modifiers": "@Override public", "return": "void", "signature": "void handlePut(Put put)", "full_signature": "@Override public void handlePut(Put put)", "class_method_signature": "NaiveIndex.handlePut(Put put)", "testcase": false, "constructor": false}, {"identifier": "handleGet", "parameters": "(byte[] indexRangeStart,\n      byte[] indexRangeEnd)", "modifiers": "@Override public", "return": "SeekingCurrentIterator", "signature": "SeekingCurrentIterator handleGet(byte[] indexRangeStart,\n      byte[] indexRangeEnd)", "full_signature": "@Override public SeekingCurrentIterator handleGet(byte[] indexRangeStart,\n      byte[] indexRangeEnd)", "class_method_signature": "NaiveIndex.handleGet(byte[] indexRangeStart,\n      byte[] indexRangeEnd)", "testcase": false, "constructor": false}], "file": "culvert-main/src/main/java/com/bah/culvert/data/index/NaiveIndex.java"}, "focal_method": {"identifier": "handleGet", "parameters": "(byte[] indexRangeStart,\n      byte[] indexRangeEnd)", "modifiers": "@Override public", "return": "SeekingCurrentIterator", "body": "@Override\n  public SeekingCurrentIterator handleGet(byte[] indexRangeStart,\n      byte[] indexRangeEnd) {\n\n    TableAdapter dataTable = getIndexTable();\n\n    // Just need to return a SelectRowId on the rowId and use its\n    // getResultsIterator\n    // to return the row IDs\n    KeyOnlyFilter selectRowId = new KeyOnlyFilter(dataTable, new CRange(\n        indexRangeStart, indexRangeEnd));\n    return selectRowId.getResultIterator();\n  }", "signature": "SeekingCurrentIterator handleGet(byte[] indexRangeStart,\n      byte[] indexRangeEnd)", "full_signature": "@Override public SeekingCurrentIterator handleGet(byte[] indexRangeStart,\n      byte[] indexRangeEnd)", "class_method_signature": "NaiveIndex.handleGet(byte[] indexRangeStart,\n      byte[] indexRangeEnd)", "testcase": false, "constructor": false, "invocations": ["getIndexTable", "getResultIterator"]}, "repository": {"repo_id": 1973010, "url": "https://github.com/booz-allen-hamilton/culvert", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 43, "size": 373, "license": "licensed"}}