{"test_class": {"identifier": "SortArrayMapTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "int count = 1000000 ;", "modifier": "", "type": "int", "declarator": "count = 1000000", "var_name": "count"}], "file": "cim-common/src/test/java/com/crossoverjie/cim/common/data/construct/SortArrayMapTest.java"}, "test_case": {"identifier": "add", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void add() {\n        SortArrayMap map = new SortArrayMap() ;\n        for (int i = 0; i < 10; i++) {\n            map.add(Long.valueOf(i) ,\"127.0.0.\" + i);\n        }\n        map.print();\n        System.out.println(map.size());\n    }", "signature": "void add()", "full_signature": "@Test public void add()", "class_method_signature": "SortArrayMapTest.add()", "testcase": true, "constructor": false, "invocations": ["add", "valueOf", "print", "println", "size"]}, "focal_class": {"identifier": "SortArrayMap", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Node[] buckets;", "modifier": "private", "type": "Node[]", "declarator": "buckets", "var_name": "buckets"}, {"original_string": "private static final int DEFAULT_SIZE = 10;", "modifier": "private static final", "type": "int", "declarator": "DEFAULT_SIZE = 10", "var_name": "DEFAULT_SIZE"}, {"original_string": "private int size = 0;", "modifier": "private", "type": "int", "declarator": "size = 0", "var_name": "size"}], "methods": [{"identifier": "SortArrayMap", "parameters": "()", "modifiers": "public", "return": "", "signature": " SortArrayMap()", "full_signature": "public  SortArrayMap()", "class_method_signature": "SortArrayMap.SortArrayMap()", "testcase": false, "constructor": true}, {"identifier": "add", "parameters": "(Long key, String value)", "modifiers": "public", "return": "void", "signature": "void add(Long key, String value)", "full_signature": "public void add(Long key, String value)", "class_method_signature": "SortArrayMap.add(Long key, String value)", "testcase": false, "constructor": false}, {"identifier": "checkSize", "parameters": "(int size)", "modifiers": "private", "return": "void", "signature": "void checkSize(int size)", "full_signature": "private void checkSize(int size)", "class_method_signature": "SortArrayMap.checkSize(int size)", "testcase": false, "constructor": false}, {"identifier": "firstNodeValue", "parameters": "(long key)", "modifiers": "public", "return": "String", "signature": "String firstNodeValue(long key)", "full_signature": "public String firstNodeValue(long key)", "class_method_signature": "SortArrayMap.firstNodeValue(long key)", "testcase": false, "constructor": false}, {"identifier": "sort", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void sort()", "full_signature": "public void sort()", "class_method_signature": "SortArrayMap.sort()", "testcase": false, "constructor": false}, {"identifier": "print", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void print()", "full_signature": "public void print()", "class_method_signature": "SortArrayMap.print()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "SortArrayMap.size()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "SortArrayMap.clear()", "testcase": false, "constructor": false}], "file": "cim-common/src/main/java/com/crossoverjie/cim/common/data/construct/SortArrayMap.java"}, "focal_method": {"identifier": "add", "parameters": "(Long key, String value)", "modifiers": "public", "return": "void", "body": "public void add(Long key, String value) {\n        checkSize(size + 1);\n        Node node = new Node(key, value);\n        buckets[size++] = node;\n    }", "signature": "void add(Long key, String value)", "full_signature": "public void add(Long key, String value)", "class_method_signature": "SortArrayMap.add(Long key, String value)", "testcase": false, "constructor": false, "invocations": ["checkSize"]}, "repository": {"repo_id": 134164777, "url": "https://github.com/crossoverJie/cim", "stars": 4518, "created": "5/20/2018 3:55:56 PM +00:00", "updates": "2020-01-27T13:30:30+00:00", "fork": "False", "license": "licensed"}}