{"test_class": {"identifier": "ByteArrayUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ByteArrayUtilTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ByteArrayUtilTest.class)", "var_name": "logger"}], "file": "ch-commons-util/src/test/java/com/cloudhopper/commons/util/ByteArrayUtilTest.java"}, "test_case": {"identifier": "toUnsignedByte", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void toUnsignedByte() throws Exception {\n        try {\n            ByteArrayUtil.toUnsignedByte(null);\n            Assert.fail();\n        } catch (IllegalArgumentException e) {\n            // correct behavior\n        }\n        Assert.assertEquals((short)0x12, ByteArrayUtil.toUnsignedByte(new byte[] { (byte)0x12 }));\n        Assert.assertEquals((short)0xFF, ByteArrayUtil.toUnsignedByte(new byte[] { (byte)0x12, (byte)0xFF, (byte)0x56 }, 1, 1));\n        Assert.assertEquals((short)240, ByteArrayUtil.toUnsignedByte(new byte[] { (byte)0xF0 }));\n        Assert.assertEquals((short)240, ByteArrayUtil.toUnsignedByte(new byte[] { (byte)0x12, (byte)0xF0 }, 1, 1));\n    }", "signature": "void toUnsignedByte()", "full_signature": "@Test public void toUnsignedByte()", "class_method_signature": "ByteArrayUtilTest.toUnsignedByte()", "testcase": true, "constructor": false, "invocations": ["toUnsignedByte", "fail", "assertEquals", "toUnsignedByte", "assertEquals", "toUnsignedByte", "assertEquals", "toUnsignedByte", "assertEquals", "toUnsignedByte"]}, "focal_class": {"identifier": "ByteArrayUtil", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "checkBytesNotNull", "parameters": "(byte[] bytes)", "modifiers": "protected static", "return": "void", "signature": "void checkBytesNotNull(byte[] bytes)", "full_signature": "protected static void checkBytesNotNull(byte[] bytes)", "class_method_signature": "ByteArrayUtil.checkBytesNotNull(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "checkBytes", "parameters": "(byte[] bytes, int offset, int length, int expectedLength)", "modifiers": "protected static", "return": "void", "signature": "void checkBytes(byte[] bytes, int offset, int length, int expectedLength)", "full_signature": "protected static void checkBytes(byte[] bytes, int offset, int length, int expectedLength)", "class_method_signature": "ByteArrayUtil.checkBytes(byte[] bytes, int offset, int length, int expectedLength)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(byte value)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(byte value)", "full_signature": "public static byte[] toByteArray(byte value)", "class_method_signature": "ByteArrayUtil.toByteArray(byte value)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(short value)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(short value)", "full_signature": "public static byte[] toByteArray(short value)", "class_method_signature": "ByteArrayUtil.toByteArray(short value)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(int value)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(int value)", "full_signature": "public static byte[] toByteArray(int value)", "class_method_signature": "ByteArrayUtil.toByteArray(int value)", "testcase": false, "constructor": false}, {"identifier": "toByteArray", "parameters": "(long value)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] toByteArray(long value)", "full_signature": "public static byte[] toByteArray(long value)", "class_method_signature": "ByteArrayUtil.toByteArray(long value)", "testcase": false, "constructor": false}, {"identifier": "toByte", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "byte", "signature": "byte toByte(byte[] bytes)", "full_signature": "public static byte toByte(byte[] bytes)", "class_method_signature": "ByteArrayUtil.toByte(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "toByte", "parameters": "(byte[] bytes, int offset, int length)", "modifiers": "public static", "return": "byte", "signature": "byte toByte(byte[] bytes, int offset, int length)", "full_signature": "public static byte toByte(byte[] bytes, int offset, int length)", "class_method_signature": "ByteArrayUtil.toByte(byte[] bytes, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "toUnsignedByte", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "short", "signature": "short toUnsignedByte(byte[] bytes)", "full_signature": "public static short toUnsignedByte(byte[] bytes)", "class_method_signature": "ByteArrayUtil.toUnsignedByte(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "toUnsignedByte", "parameters": "(byte[] bytes, int offset, int length)", "modifiers": "public static", "return": "short", "signature": "short toUnsignedByte(byte[] bytes, int offset, int length)", "full_signature": "public static short toUnsignedByte(byte[] bytes, int offset, int length)", "class_method_signature": "ByteArrayUtil.toUnsignedByte(byte[] bytes, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "toShort", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "short", "signature": "short toShort(byte[] bytes)", "full_signature": "public static short toShort(byte[] bytes)", "class_method_signature": "ByteArrayUtil.toShort(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "toShort", "parameters": "(byte[] bytes, int offset, int length)", "modifiers": "public static", "return": "short", "signature": "short toShort(byte[] bytes, int offset, int length)", "full_signature": "public static short toShort(byte[] bytes, int offset, int length)", "class_method_signature": "ByteArrayUtil.toShort(byte[] bytes, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "toUnsignedShort", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "int", "signature": "int toUnsignedShort(byte[] bytes)", "full_signature": "public static int toUnsignedShort(byte[] bytes)", "class_method_signature": "ByteArrayUtil.toUnsignedShort(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "toUnsignedShort", "parameters": "(byte[] bytes, int offset, int length)", "modifiers": "public static", "return": "int", "signature": "int toUnsignedShort(byte[] bytes, int offset, int length)", "full_signature": "public static int toUnsignedShort(byte[] bytes, int offset, int length)", "class_method_signature": "ByteArrayUtil.toUnsignedShort(byte[] bytes, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "toInt", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "int", "signature": "int toInt(byte[] bytes)", "full_signature": "public static int toInt(byte[] bytes)", "class_method_signature": "ByteArrayUtil.toInt(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "toInt", "parameters": "(byte[] bytes, int offset, int length)", "modifiers": "public static", "return": "int", "signature": "int toInt(byte[] bytes, int offset, int length)", "full_signature": "public static int toInt(byte[] bytes, int offset, int length)", "class_method_signature": "ByteArrayUtil.toInt(byte[] bytes, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "toUnsignedInt", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "long", "signature": "long toUnsignedInt(byte[] bytes)", "full_signature": "public static long toUnsignedInt(byte[] bytes)", "class_method_signature": "ByteArrayUtil.toUnsignedInt(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "toUnsignedInt", "parameters": "(byte[] bytes, int offset, int length)", "modifiers": "public static", "return": "long", "signature": "long toUnsignedInt(byte[] bytes, int offset, int length)", "full_signature": "public static long toUnsignedInt(byte[] bytes, int offset, int length)", "class_method_signature": "ByteArrayUtil.toUnsignedInt(byte[] bytes, int offset, int length)", "testcase": false, "constructor": false}, {"identifier": "toLong", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "long", "signature": "long toLong(byte[] bytes)", "full_signature": "public static long toLong(byte[] bytes)", "class_method_signature": "ByteArrayUtil.toLong(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "toLong", "parameters": "(byte[] bytes, int offset, int length)", "modifiers": "public static", "return": "long", "signature": "long toLong(byte[] bytes, int offset, int length)", "full_signature": "public static long toLong(byte[] bytes, int offset, int length)", "class_method_signature": "ByteArrayUtil.toLong(byte[] bytes, int offset, int length)", "testcase": false, "constructor": false}], "file": "ch-commons-util/src/main/java/com/cloudhopper/commons/util/ByteArrayUtil.java"}, "focal_method": {"identifier": "toUnsignedByte", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "short", "body": "public static short toUnsignedByte(byte[] bytes) {\n        checkBytesNotNull(bytes);\n        return toUnsignedByte(bytes, 0, bytes.length);\n    }", "signature": "short toUnsignedByte(byte[] bytes)", "full_signature": "public static short toUnsignedByte(byte[] bytes)", "class_method_signature": "ByteArrayUtil.toUnsignedByte(byte[] bytes)", "testcase": false, "constructor": false, "invocations": ["checkBytesNotNull", "toUnsignedByte"]}, "repository": {"repo_id": 14960307, "url": "https://github.com/twitter/cloudhopper-commons", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 36, "size": 6452, "license": "licensed"}}