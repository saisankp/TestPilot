{"test_class": {"identifier": "MetricTankMetricDataMessagePackSerdeTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MetricTankMetricDataMessagePackSerde serdeUnderTest;", "modifier": "private", "type": "MetricTankMetricDataMessagePackSerde", "declarator": "serdeUnderTest", "var_name": "serdeUnderTest"}, {"original_string": "private MetricData metricData;", "modifier": "private", "type": "MetricData", "declarator": "metricData", "var_name": "metricData"}], "file": "kafka/src/test/java/com/expedia/adaptivealerting/kafka/serde/MetricTankMetricDataMessagePackSerdeTest.java"}, "test_case": {"identifier": "testSerialize_invalidMetricData", "parameters": "()", "modifiers": "@Test(expected = SerializationException.class) public", "return": "void", "body": "@Test(expected = SerializationException.class)\n    public void testSerialize_invalidMetricData() {\n        val invalidMetricDef = new MetricDefinition((String) null);\n        val invalidMetricData = new MetricData(invalidMetricDef, 0.0, Instant.now().getEpochSecond());\n        serdeUnderTest.serializer().serialize(\"some-topic\", invalidMetricData);\n    }", "signature": "void testSerialize_invalidMetricData()", "full_signature": "@Test(expected = SerializationException.class) public void testSerialize_invalidMetricData()", "class_method_signature": "MetricTankMetricDataMessagePackSerdeTest.testSerialize_invalidMetricData()", "testcase": true, "constructor": false, "invocations": ["getEpochSecond", "now", "serialize", "serializer"]}, "focal_class": {"identifier": "MetricTankMetricDataMessagePackSerde", "superclass": "", "interfaces": "implements Serde<MetricData>", "fields": [{"original_string": "public static final int DEFAULT_ORG_ID = 1;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_ORG_ID = 1", "var_name": "DEFAULT_ORG_ID"}, {"original_string": "public static final int DEFAULT_INTERVAL = 60;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_INTERVAL = 60", "var_name": "DEFAULT_INTERVAL"}, {"original_string": "public static final String DEFAULT_UNIT = \"\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_UNIT = \"\"", "var_name": "DEFAULT_UNIT"}, {"original_string": "public static final String DEFAULT_MTYPE = \"gauge\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_MTYPE = \"gauge\"", "var_name": "DEFAULT_MTYPE"}], "methods": [{"identifier": "configure", "parameters": "(Map<String, ?> configs, boolean isKey)", "modifiers": "@Override public", "return": "void", "signature": "void configure(Map<String, ?> configs, boolean isKey)", "full_signature": "@Override public void configure(Map<String, ?> configs, boolean isKey)", "class_method_signature": "MetricTankMetricDataMessagePackSerde.configure(Map<String, ?> configs, boolean isKey)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "MetricTankMetricDataMessagePackSerde.close()", "testcase": false, "constructor": false}, {"identifier": "serializer", "parameters": "()", "modifiers": "@Override public", "return": "Serializer<MetricData>", "signature": "Serializer<MetricData> serializer()", "full_signature": "@Override public Serializer<MetricData> serializer()", "class_method_signature": "MetricTankMetricDataMessagePackSerde.serializer()", "testcase": false, "constructor": false}, {"identifier": "deserializer", "parameters": "()", "modifiers": "@Override public", "return": "Deserializer<MetricData>", "signature": "Deserializer<MetricData> deserializer()", "full_signature": "@Override public Deserializer<MetricData> deserializer()", "class_method_signature": "MetricTankMetricDataMessagePackSerde.deserializer()", "testcase": false, "constructor": false}], "file": "kafka/src/main/java/com/expedia/adaptivealerting/kafka/serde/MetricTankMetricDataMessagePackSerde.java"}, "focal_method": {"identifier": "serializer", "parameters": "()", "modifiers": "@Override public", "return": "Serializer<MetricData>", "body": "@Override\n    public Serializer<MetricData> serializer() {\n        return new Ser();\n    }", "signature": "Serializer<MetricData> serializer()", "full_signature": "@Override public Serializer<MetricData> serializer()", "class_method_signature": "MetricTankMetricDataMessagePackSerde.serializer()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 129125498, "url": "https://github.com/ExpediaDotCom/adaptive-alerting", "stars": 104, "created": "4/11/2018 4:51:18 PM +00:00", "updates": "2020-01-24T16:20:26+00:00", "fork": "False", "license": "licensed"}}