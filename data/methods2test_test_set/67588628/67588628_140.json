{"test_class": {"identifier": "GremlinExecutorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Inject\n    private GraphConverter converter;", "modifier": "@Inject\n    private", "type": "GraphConverter", "declarator": "converter", "var_name": "converter"}, {"original_string": "@Inject\n    private Graph graph;", "modifier": "@Inject\n    private", "type": "Graph", "declarator": "graph", "var_name": "graph"}, {"original_string": "private GremlinExecutor executor;", "modifier": "private", "type": "GremlinExecutor", "declarator": "executor", "var_name": "executor"}], "file": "artemis-graph/src/test/java/org/jnosql/artemis/graph/GremlinExecutorTest.java"}, "test_case": {"identifier": "shouldExecuteQueryProperties", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldExecuteQueryProperties() {\n        List<Object> properties = executor.executeGremlin(graph.traversal(), \"g.V().values()\");\n        assertFalse(properties.isEmpty());\n        assertEquals(4, properties.size());\n        assertThat(properties, containsInAnyOrder(\"Bruce Banner\", 30, 30, \"Natasha Romanoff\"));\n    }", "signature": "void shouldExecuteQueryProperties()", "full_signature": "@Test public void shouldExecuteQueryProperties()", "class_method_signature": "GremlinExecutorTest.shouldExecuteQueryProperties()", "testcase": true, "constructor": false, "invocations": ["executeGremlin", "traversal", "assertFalse", "isEmpty", "assertEquals", "size", "assertThat", "containsInAnyOrder"]}, "focal_class": {"identifier": "GremlinExecutor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final GraphConverter converter;", "modifier": "private final", "type": "GraphConverter", "declarator": "converter", "var_name": "converter"}, {"original_string": "private static final ScriptEngine ENGINE = new GremlinGroovyScriptEngine();", "modifier": "private static final", "type": "ScriptEngine", "declarator": "ENGINE = new GremlinGroovyScriptEngine()", "var_name": "ENGINE"}], "methods": [{"identifier": "GremlinExecutor", "parameters": "(GraphConverter converter)", "modifiers": "", "return": "", "signature": " GremlinExecutor(GraphConverter converter)", "full_signature": "  GremlinExecutor(GraphConverter converter)", "class_method_signature": "GremlinExecutor.GremlinExecutor(GraphConverter converter)", "testcase": false, "constructor": true}, {"identifier": "executeGremlin", "parameters": "(GraphTraversalSource traversalSource, String gremlin)", "modifiers": "", "return": "List<T>", "signature": "List<T> executeGremlin(GraphTraversalSource traversalSource, String gremlin)", "full_signature": " List<T> executeGremlin(GraphTraversalSource traversalSource, String gremlin)", "class_method_signature": "GremlinExecutor.executeGremlin(GraphTraversalSource traversalSource, String gremlin)", "testcase": false, "constructor": false}, {"identifier": "executeGremlin", "parameters": "(GraphTraversalSource traversalSource, String gremlin, Map<String, Object> params)", "modifiers": "", "return": "List<T>", "signature": "List<T> executeGremlin(GraphTraversalSource traversalSource, String gremlin, Map<String, Object> params)", "full_signature": " List<T> executeGremlin(GraphTraversalSource traversalSource, String gremlin, Map<String, Object> params)", "class_method_signature": "GremlinExecutor.executeGremlin(GraphTraversalSource traversalSource, String gremlin, Map<String, Object> params)", "testcase": false, "constructor": false}, {"identifier": "convertToList", "parameters": "(Iterable<?> iterable)", "modifiers": "private", "return": "List<T>", "signature": "List<T> convertToList(Iterable<?> iterable)", "full_signature": "private List<T> convertToList(Iterable<?> iterable)", "class_method_signature": "GremlinExecutor.convertToList(Iterable<?> iterable)", "testcase": false, "constructor": false}, {"identifier": "getElement", "parameters": "(Object entity)", "modifiers": "private", "return": "Object", "signature": "Object getElement(Object entity)", "full_signature": "private Object getElement(Object entity)", "class_method_signature": "GremlinExecutor.getElement(Object entity)", "testcase": false, "constructor": false}], "file": "artemis-graph/src/main/java/org/jnosql/artemis/graph/GremlinExecutor.java"}, "focal_method": {"identifier": "executeGremlin", "parameters": "(GraphTraversalSource traversalSource, String gremlin)", "modifiers": "", "return": "List<T>", "body": "<T> List<T> executeGremlin(GraphTraversalSource traversalSource, String gremlin) {\n        return executeGremlin(traversalSource, gremlin, Collections.emptyMap());\n    }", "signature": "List<T> executeGremlin(GraphTraversalSource traversalSource, String gremlin)", "full_signature": " List<T> executeGremlin(GraphTraversalSource traversalSource, String gremlin)", "class_method_signature": "GremlinExecutor.executeGremlin(GraphTraversalSource traversalSource, String gremlin)", "testcase": false, "constructor": false, "invocations": ["executeGremlin", "emptyMap"]}, "repository": {"repo_id": 67588628, "url": "https://github.com/eclipse/jnosql-artemis", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 43, "size": 2612, "license": "licensed"}}