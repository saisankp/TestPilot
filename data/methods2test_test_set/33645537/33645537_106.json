{"test_class": {"identifier": "SplitArrayTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "SplitArray splitArray;", "modifier": "", "type": "SplitArray", "declarator": "splitArray", "var_name": "splitArray"}], "file": "algs/src/test/java/com/github/pedrovgs/problem8/SplitArrayTest.java"}, "test_case": {"identifier": "shouldNotAcceptNullArraysWithTwoPointersIterative", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n  public void shouldNotAcceptNullArraysWithTwoPointersIterative() {\n    splitArray.splitSwappingIterative(null);\n  }", "signature": "void shouldNotAcceptNullArraysWithTwoPointersIterative()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void shouldNotAcceptNullArraysWithTwoPointersIterative()", "class_method_signature": "SplitArrayTest.shouldNotAcceptNullArraysWithTwoPointersIterative()", "testcase": true, "constructor": false, "invocations": ["splitSwappingIterative"]}, "focal_class": {"identifier": "SplitArray", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "splitSorting", "parameters": "(int[] array)", "modifiers": "public", "return": "void", "signature": "void splitSorting(int[] array)", "full_signature": "public void splitSorting(int[] array)", "class_method_signature": "SplitArray.splitSorting(int[] array)", "testcase": false, "constructor": false}, {"identifier": "splitSwappingIterative", "parameters": "(int[] array)", "modifiers": "public", "return": "void", "signature": "void splitSwappingIterative(int[] array)", "full_signature": "public void splitSwappingIterative(int[] array)", "class_method_signature": "SplitArray.splitSwappingIterative(int[] array)", "testcase": false, "constructor": false}, {"identifier": "splitSwappingRecursive", "parameters": "(int[] array)", "modifiers": "public", "return": "void", "signature": "void splitSwappingRecursive(int[] array)", "full_signature": "public void splitSwappingRecursive(int[] array)", "class_method_signature": "SplitArray.splitSwappingRecursive(int[] array)", "testcase": false, "constructor": false}, {"identifier": "splitSwappingRecursiveInner", "parameters": "(int[] array, int left, int right)", "modifiers": "private", "return": "void", "signature": "void splitSwappingRecursiveInner(int[] array, int left, int right)", "full_signature": "private void splitSwappingRecursiveInner(int[] array, int left, int right)", "class_method_signature": "SplitArray.splitSwappingRecursiveInner(int[] array, int left, int right)", "testcase": false, "constructor": false}, {"identifier": "swap", "parameters": "(int[] array, int left, int right)", "modifiers": "private", "return": "void", "signature": "void swap(int[] array, int left, int right)", "full_signature": "private void swap(int[] array, int left, int right)", "class_method_signature": "SplitArray.swap(int[] array, int left, int right)", "testcase": false, "constructor": false}], "file": "algs/src/main/java/com/github/pedrovgs/problem8/SplitArray.java"}, "focal_method": {"identifier": "splitSwappingIterative", "parameters": "(int[] array)", "modifiers": "public", "return": "void", "body": "public void splitSwappingIterative(int[] array) {\n    if (array == null) {\n      throw new IllegalArgumentException(\"Array passed as parameter can't be null.\");\n    }\n\n    int left = 0;\n    int right = array.length - 1;\n    while (left < right) {\n      boolean shouldChangeLeft = array[left] >= 0;\n      boolean shouldChangeRight = array[right] < 0;\n      if (shouldChangeLeft && shouldChangeRight) {\n        swap(array, left, right);\n        left++;\n        right--;\n      } else {\n        if (!shouldChangeLeft) {\n          left++;\n        } else if (!shouldChangeRight) {\n          right--;\n        }\n      }\n    }\n  }", "signature": "void splitSwappingIterative(int[] array)", "full_signature": "public void splitSwappingIterative(int[] array)", "class_method_signature": "SplitArray.splitSwappingIterative(int[] array)", "testcase": false, "constructor": false, "invocations": ["swap"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}