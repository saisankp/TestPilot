{"test_class": {"identifier": "AmqpTargetTest", "superclass": "", "interfaces": "", "fields": [], "file": "services/connectivity/messaging/src/test/java/org/eclipse/ditto/services/connectivity/messaging/amqp/AmqpTargetTest.java"}, "test_case": {"identifier": "testEmpty", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testEmpty() {\n        AmqpTarget.fromTargetAddress(\"\");\n    }", "signature": "void testEmpty()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testEmpty()", "class_method_signature": "AmqpTargetTest.testEmpty()", "testcase": true, "constructor": false, "invocations": ["fromTargetAddress"]}, "focal_class": {"identifier": "AmqpTarget", "superclass": "", "interfaces": "implements PublishTarget", "fields": [{"original_string": "private static final String TOPIC_PREFIX = \"topic://\";", "modifier": "private static final", "type": "String", "declarator": "TOPIC_PREFIX = \"topic://\"", "var_name": "TOPIC_PREFIX"}, {"original_string": "private static final String QUEUE_PREFIX = \"queue://\";", "modifier": "private static final", "type": "String", "declarator": "QUEUE_PREFIX = \"queue://\"", "var_name": "QUEUE_PREFIX"}, {"original_string": "private static final String EMPTY_STRING = \"\";", "modifier": "private static final", "type": "String", "declarator": "EMPTY_STRING = \"\"", "var_name": "EMPTY_STRING"}, {"original_string": "private final Destination jmsDestination;", "modifier": "private final", "type": "Destination", "declarator": "jmsDestination", "var_name": "jmsDestination"}], "methods": [{"identifier": "AmqpTarget", "parameters": "(final Destination jmsDestination)", "modifiers": "private", "return": "", "signature": " AmqpTarget(final Destination jmsDestination)", "full_signature": "private  AmqpTarget(final Destination jmsDestination)", "class_method_signature": "AmqpTarget.AmqpTarget(final Destination jmsDestination)", "testcase": false, "constructor": true}, {"identifier": "fromTargetAddress", "parameters": "(final String targetAddress)", "modifiers": "static", "return": "AmqpTarget", "signature": "AmqpTarget fromTargetAddress(final String targetAddress)", "full_signature": "static AmqpTarget fromTargetAddress(final String targetAddress)", "class_method_signature": "AmqpTarget.fromTargetAddress(final String targetAddress)", "testcase": false, "constructor": false}, {"identifier": "getJmsDestination", "parameters": "()", "modifiers": "", "return": "Destination", "signature": "Destination getJmsDestination()", "full_signature": " Destination getJmsDestination()", "class_method_signature": "AmqpTarget.getJmsDestination()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(final Object o)", "full_signature": "@Override public boolean equals(final Object o)", "class_method_signature": "AmqpTarget.equals(final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AmqpTarget.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AmqpTarget.toString()", "testcase": false, "constructor": false}], "file": "services/connectivity/messaging/src/main/java/org/eclipse/ditto/services/connectivity/messaging/amqp/AmqpTarget.java"}, "focal_method": {"identifier": "fromTargetAddress", "parameters": "(final String targetAddress)", "modifiers": "static", "return": "AmqpTarget", "body": "static AmqpTarget fromTargetAddress(final String targetAddress) {\n        ConditionChecker.argumentNotEmpty(targetAddress, \"targetAddress\");\n        final Destination destination;\n        if (targetAddress.startsWith(TOPIC_PREFIX)) {\n            destination = new JmsTopic(targetAddress.replace(TOPIC_PREFIX, EMPTY_STRING));\n        } else if (targetAddress.startsWith(QUEUE_PREFIX)) {\n            destination = new JmsQueue(targetAddress.replace(QUEUE_PREFIX, EMPTY_STRING));\n        } else {\n            destination = new JmsQueue(targetAddress);\n        }\n        return new AmqpTarget(destination);\n    }", "signature": "AmqpTarget fromTargetAddress(final String targetAddress)", "full_signature": "static AmqpTarget fromTargetAddress(final String targetAddress)", "class_method_signature": "AmqpTarget.fromTargetAddress(final String targetAddress)", "testcase": false, "constructor": false, "invocations": ["argumentNotEmpty", "startsWith", "replace", "startsWith", "replace"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}