{"test_class": {"identifier": "TruckOptionsPanelTest", "superclass": "extends RobolectricTest", "interfaces": "", "fields": [{"original_string": "private TruckOptionsPanel mTruckOptionsPanel;", "modifier": "private", "type": "TruckOptionsPanel", "declarator": "mTruckOptionsPanel", "var_name": "mTruckOptionsPanel"}, {"original_string": "private boolean mCallbackCalled = false;", "modifier": "private", "type": "boolean", "declarator": "mCallbackCalled = false", "var_name": "mCallbackCalled"}], "file": "MSDKUIKit/MSDKUILib/src/test/java/com/here/msdkui/routing/TruckOptionsPanelTest.java"}, "test_case": {"identifier": "testChangeListener", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testChangeListener() {\n        final MockUtils.MockRouteOptionsBuilder builder = new MockUtils.MockRouteOptionsBuilder();\n        final RouteOptions options = builder.withTruckOptions().build();\n        mTruckOptionsPanel.setRouteOptions(options);\n        mTruckOptionsPanel.setListener(new OptionsPanel.Listener() {\n            @Override\n            public void onOptionCreated(List<OptionItem> item) {\n                mCallbackCalled = false;\n            }\n\n            @Override\n            public void onOptionChanged(OptionItem item) {\n                mCallbackCalled = true;\n            }\n        });\n        // negate one part\n        when(options.getTruckHeight()).thenReturn(2.0f);\n        mTruckOptionsPanel.setRouteOptions(options);\n        assertThat(mCallbackCalled, is(true));\n    }", "signature": "void testChangeListener()", "full_signature": "@Test public void testChangeListener()", "class_method_signature": "TruckOptionsPanelTest.testChangeListener()", "testcase": true, "constructor": false, "invocations": ["build", "withTruckOptions", "setRouteOptions", "setListener", "thenReturn", "when", "getTruckHeight", "setRouteOptions", "assertThat", "is"]}, "focal_class": {"identifier": "TruckOptionsPanel", "superclass": "extends OptionsPanel", "interfaces": "implements OptionItem.OnChangedListener", "fields": [{"original_string": "private RouteOptions mRouteOptions;", "modifier": "private", "type": "RouteOptions", "declarator": "mRouteOptions", "var_name": "mRouteOptions"}, {"original_string": "private Integer[] mResourceKey;", "modifier": "private", "type": "Integer[]", "declarator": "mResourceKey", "var_name": "mResourceKey"}, {"original_string": "private Map<RouteOptions.TruckType, String> mTruckTypeResource;", "modifier": "private", "type": "Map<RouteOptions.TruckType, String>", "declarator": "mTruckTypeResource", "var_name": "mTruckTypeResource"}, {"original_string": "private List<OptionItem> mSubItem;", "modifier": "private", "type": "List<OptionItem>", "declarator": "mSubItem", "var_name": "mSubItem"}], "methods": [{"identifier": "TruckOptionsPanel", "parameters": "(final Context context)", "modifiers": "public", "return": "", "signature": " TruckOptionsPanel(final Context context)", "full_signature": "public  TruckOptionsPanel(final Context context)", "class_method_signature": "TruckOptionsPanel.TruckOptionsPanel(final Context context)", "testcase": false, "constructor": true}, {"identifier": "TruckOptionsPanel", "parameters": "(final Context context, final AttributeSet attrs)", "modifiers": "public", "return": "", "signature": " TruckOptionsPanel(final Context context, final AttributeSet attrs)", "full_signature": "public  TruckOptionsPanel(final Context context, final AttributeSet attrs)", "class_method_signature": "TruckOptionsPanel.TruckOptionsPanel(final Context context, final AttributeSet attrs)", "testcase": false, "constructor": true}, {"identifier": "TruckOptionsPanel", "parameters": "(final Context context, final AttributeSet attrs, final int defStyleAttr)", "modifiers": "public", "return": "", "signature": " TruckOptionsPanel(final Context context, final AttributeSet attrs, final int defStyleAttr)", "full_signature": "public  TruckOptionsPanel(final Context context, final AttributeSet attrs, final int defStyleAttr)", "class_method_signature": "TruckOptionsPanel.TruckOptionsPanel(final Context context, final AttributeSet attrs, final int defStyleAttr)", "testcase": false, "constructor": true}, {"identifier": "TruckOptionsPanel", "parameters": "(final Context context, final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "modifiers": "@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP) public", "return": "", "signature": " TruckOptionsPanel(final Context context, final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "full_signature": "@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP) public  TruckOptionsPanel(final Context context, final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "class_method_signature": "TruckOptionsPanel.TruckOptionsPanel(final Context context, final AttributeSet attrs, final int defStyleAttr, final int defStyleRes)", "testcase": false, "constructor": true}, {"identifier": "populateResources", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void populateResources()", "full_signature": "private void populateResources()", "class_method_signature": "TruckOptionsPanel.populateResources()", "testcase": false, "constructor": false}, {"identifier": "createPanel", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void createPanel()", "full_signature": "private void createPanel()", "class_method_signature": "TruckOptionsPanel.createPanel()", "testcase": false, "constructor": false}, {"identifier": "getTruckTypeOptionItem", "parameters": "()", "modifiers": "private", "return": "OptionItem", "signature": "OptionItem getTruckTypeOptionItem()", "full_signature": "private OptionItem getTruckTypeOptionItem()", "class_method_signature": "TruckOptionsPanel.getTruckTypeOptionItem()", "testcase": false, "constructor": false}, {"identifier": "getRestrictionItem", "parameters": "()", "modifiers": "private", "return": "OptionItem", "signature": "OptionItem getRestrictionItem()", "full_signature": "private OptionItem getRestrictionItem()", "class_method_signature": "TruckOptionsPanel.getRestrictionItem()", "testcase": false, "constructor": false}, {"identifier": "getItem", "parameters": "(Integer id)", "modifiers": "private", "return": "OptionItem", "signature": "OptionItem getItem(Integer id)", "full_signature": "private OptionItem getItem(Integer id)", "class_method_signature": "TruckOptionsPanel.getItem(Integer id)", "testcase": false, "constructor": false}, {"identifier": "getRouteOptions", "parameters": "()", "modifiers": "public", "return": "RouteOptions", "signature": "RouteOptions getRouteOptions()", "full_signature": "public RouteOptions getRouteOptions()", "class_method_signature": "TruckOptionsPanel.getRouteOptions()", "testcase": false, "constructor": false}, {"identifier": "setRouteOptions", "parameters": "(final RouteOptions routeOptions)", "modifiers": "@SuppressWarnings({\"PMD.CyclomaticComplexity\"}) // This function is not complicated. public", "return": "void", "signature": "void setRouteOptions(final RouteOptions routeOptions)", "full_signature": "@SuppressWarnings({\"PMD.CyclomaticComplexity\"}) // This function is not complicated. public void setRouteOptions(final RouteOptions routeOptions)", "class_method_signature": "TruckOptionsPanel.setRouteOptions(final RouteOptions routeOptions)", "testcase": false, "constructor": false}, {"identifier": "setRestriction", "parameters": "(OptionItem item)", "modifiers": "private", "return": "void", "signature": "void setRestriction(OptionItem item)", "full_signature": "private void setRestriction(OptionItem item)", "class_method_signature": "TruckOptionsPanel.setRestriction(OptionItem item)", "testcase": false, "constructor": false}, {"identifier": "onChanged", "parameters": "(OptionItem item)", "modifiers": "@SuppressWarnings({\"PMD.AvoidCatchingGenericException\", \"PMD.NcssCount\", \"PMD.CyclomaticComplexity\", \"PMD.NPathComplexity\"}) @Override public", "return": "void", "signature": "void onChanged(OptionItem item)", "full_signature": "@SuppressWarnings({\"PMD.AvoidCatchingGenericException\", \"PMD.NcssCount\", \"PMD.CyclomaticComplexity\", \"PMD.NPathComplexity\"}) @Override public void onChanged(OptionItem item)", "class_method_signature": "TruckOptionsPanel.onChanged(OptionItem item)", "testcase": false, "constructor": false}, {"identifier": "setTruckType", "parameters": "(String label)", "modifiers": "private", "return": "void", "signature": "void setTruckType(String label)", "full_signature": "private void setTruckType(String label)", "class_method_signature": "TruckOptionsPanel.setTruckType(String label)", "testcase": false, "constructor": false}, {"identifier": "getTruckTypeLabel", "parameters": "(final RouteOptions.TruckType truckType)", "modifiers": "private", "return": "String", "signature": "String getTruckTypeLabel(final RouteOptions.TruckType truckType)", "full_signature": "private String getTruckTypeLabel(final RouteOptions.TruckType truckType)", "class_method_signature": "TruckOptionsPanel.getTruckTypeLabel(final RouteOptions.TruckType truckType)", "testcase": false, "constructor": false}], "file": "MSDKUIKit/MSDKUILib/src/main/java/com/here/msdkui/routing/TruckOptionsPanel.java"}, "focal_method": {"identifier": "setRouteOptions", "parameters": "(final RouteOptions routeOptions)", "modifiers": "@SuppressWarnings({\"PMD.CyclomaticComplexity\"}) // This function is not complicated. public", "return": "void", "body": "@SuppressWarnings({\"PMD.CyclomaticComplexity\"}) // This function is not complicated.\n    public void setRouteOptions(final RouteOptions routeOptions) {\n        if (routeOptions == null) {\n            throw new IllegalArgumentException(getContext().getString(R.string.msdkui_exception_route_options_null));\n        }\n        mRouteOptions = routeOptions;\n        for (final OptionItem item : mSubItem) {\n            if (item.getItemId() == R.string.msdkui_height) {\n                ((NumericOptionItem) item).setValue(mRouteOptions.getTruckHeight());\n            } else if (item.getItemId() == R.string.msdkui_length) {\n                ((NumericOptionItem) item).setValue(mRouteOptions.getTruckLength());\n            } else if (item.getItemId() == R.string.msdkui_width) {\n                ((NumericOptionItem) item).setValue(mRouteOptions.getTruckWidth());\n            } else if (item.getItemId() == R.string.msdkui_limited_weight) {\n                ((NumericOptionItem) item).setValue(mRouteOptions.getTruckLimitedWeight());\n            } else if (item.getItemId() == R.string.msdkui_weight_per_axle) {\n                ((NumericOptionItem) item).setValue(mRouteOptions.getTruckWeightPerAxle());\n            } else if (item.getItemId() == R.string.msdkui_number_of_trailers) {\n                ((NumericOptionItem) item).setInputType(InputType.TYPE_CLASS_NUMBER)\n                        .setValue(mRouteOptions.getTruckTrailersCount());\n            } else if (item.getItemId() == R.string.msdkui_truck_type) {\n                ((SingleChoiceOptionItem) item).selectLabel(getTruckTypeLabel(mRouteOptions.getTruckType()));\n            } else if (item.getItemId() == R.string.msdkui_violate_truck_options) {\n                setRestriction(item);\n            }\n        }\n    }", "signature": "void setRouteOptions(final RouteOptions routeOptions)", "full_signature": "@SuppressWarnings({\"PMD.CyclomaticComplexity\"}) // This function is not complicated. public void setRouteOptions(final RouteOptions routeOptions)", "class_method_signature": "TruckOptionsPanel.setRouteOptions(final RouteOptions routeOptions)", "testcase": false, "constructor": false, "invocations": ["getString", "getContext", "getItemId", "setValue", "getTruckHeight", "getItemId", "setValue", "getTruckLength", "getItemId", "setValue", "getTruckWidth", "getItemId", "setValue", "getTruckLimitedWeight", "getItemId", "setValue", "getTruckWeightPerAxle", "getItemId", "setValue", "setInputType", "getTruckTrailersCount", "getItemId", "selectLabel", "getTruckTypeLabel", "getTruckType", "getItemId", "setRestriction"]}, "repository": {"repo_id": 141680627, "url": "https://github.com/heremaps/msdkui-android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 35, "size": 5559, "license": "licensed"}}