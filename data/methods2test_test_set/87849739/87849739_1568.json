{"test_class": {"identifier": "TrieBasedPolicyEnforcerTest", "superclass": "", "interfaces": "", "fields": [], "file": "model/enforcers/src/test/java/org/eclipse/ditto/model/enforcers/trie/TrieBasedPolicyEnforcerTest.java"}, "test_case": {"identifier": "buildJsonView", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void buildJsonView() {\n        final TrieBasedPolicyEnforcer underTest =\n                TrieBasedPolicyEnforcer.newInstance(defaultPolicy(PolicyId.of(\"namespace\", \"id\")));\n\n        final JsonObject createdJsonView = underTest.buildJsonView(\n                ResourceKey.newInstance(\"foo\", \"bar\"),\n                JsonFactory.nullObject(),\n                AuthorizationContext.newInstance(DittoAuthorizationContextType.UNSPECIFIED,\n                        AuthorizationSubject.newInstance(\"itsMe\")),\n                Permissions.none());\n\n        final JsonObject expectedJsonView = JsonFactory.nullObject();\n\n        assertThat(createdJsonView).isEqualTo(expectedJsonView);\n    }", "signature": "void buildJsonView()", "full_signature": "@Test public void buildJsonView()", "class_method_signature": "TrieBasedPolicyEnforcerTest.buildJsonView()", "testcase": true, "constructor": false, "invocations": ["newInstance", "defaultPolicy", "of", "buildJsonView", "newInstance", "nullObject", "newInstance", "newInstance", "none", "nullObject", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "TrieBasedPolicyEnforcer", "superclass": "", "interfaces": "implements Enforcer", "fields": [{"original_string": "private final PolicyTrie inheritedTrie;", "modifier": "private final", "type": "PolicyTrie", "declarator": "inheritedTrie", "var_name": "inheritedTrie"}, {"original_string": "private final PolicyTrie bottomUpGrantTrie;", "modifier": "private final", "type": "PolicyTrie", "declarator": "bottomUpGrantTrie", "var_name": "bottomUpGrantTrie"}, {"original_string": "private final PolicyTrie bottomUpRevokeTrie;", "modifier": "private final", "type": "PolicyTrie", "declarator": "bottomUpRevokeTrie", "var_name": "bottomUpRevokeTrie"}], "methods": [{"identifier": "TrieBasedPolicyEnforcer", "parameters": "(final Iterable<PolicyEntry> policy)", "modifiers": "private", "return": "", "signature": " TrieBasedPolicyEnforcer(final Iterable<PolicyEntry> policy)", "full_signature": "private  TrieBasedPolicyEnforcer(final Iterable<PolicyEntry> policy)", "class_method_signature": "TrieBasedPolicyEnforcer.TrieBasedPolicyEnforcer(final Iterable<PolicyEntry> policy)", "testcase": false, "constructor": true}, {"identifier": "newInstance", "parameters": "(final Policy policy)", "modifiers": "public static", "return": "TrieBasedPolicyEnforcer", "signature": "TrieBasedPolicyEnforcer newInstance(final Policy policy)", "full_signature": "public static TrieBasedPolicyEnforcer newInstance(final Policy policy)", "class_method_signature": "TrieBasedPolicyEnforcer.newInstance(final Policy policy)", "testcase": false, "constructor": false}, {"identifier": "hasUnrestrictedPermissions", "parameters": "(final ResourceKey resourceKey,\n            final AuthorizationContext authorizationContext, final Permissions permissions)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasUnrestrictedPermissions(final ResourceKey resourceKey,\n            final AuthorizationContext authorizationContext, final Permissions permissions)", "full_signature": "@Override public boolean hasUnrestrictedPermissions(final ResourceKey resourceKey,\n            final AuthorizationContext authorizationContext, final Permissions permissions)", "class_method_signature": "TrieBasedPolicyEnforcer.hasUnrestrictedPermissions(final ResourceKey resourceKey,\n            final AuthorizationContext authorizationContext, final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "hasPartialPermissions", "parameters": "(final ResourceKey resourceKey, final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasPartialPermissions(final ResourceKey resourceKey, final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "full_signature": "@Override public boolean hasPartialPermissions(final ResourceKey resourceKey, final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "class_method_signature": "TrieBasedPolicyEnforcer.hasPartialPermissions(final ResourceKey resourceKey, final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "getSubjectIdsWithPermission", "parameters": "(final ResourceKey resourceKey,\n            final Permissions permissions)", "modifiers": "@Override public", "return": "EffectedSubjectIds", "signature": "EffectedSubjectIds getSubjectIdsWithPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "full_signature": "@Override public EffectedSubjectIds getSubjectIdsWithPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "class_method_signature": "TrieBasedPolicyEnforcer.getSubjectIdsWithPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "getSubjectsWithPermission", "parameters": "(final ResourceKey resourceKey, final Permissions permissions)", "modifiers": "@Override public", "return": "EffectedSubjects", "signature": "EffectedSubjects getSubjectsWithPermission(final ResourceKey resourceKey, final Permissions permissions)", "full_signature": "@Override public EffectedSubjects getSubjectsWithPermission(final ResourceKey resourceKey, final Permissions permissions)", "class_method_signature": "TrieBasedPolicyEnforcer.getSubjectsWithPermission(final ResourceKey resourceKey, final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "checkResourceKey", "parameters": "(final ResourceKey resourceKey)", "modifiers": "private static", "return": "void", "signature": "void checkResourceKey(final ResourceKey resourceKey)", "full_signature": "private static void checkResourceKey(final ResourceKey resourceKey)", "class_method_signature": "TrieBasedPolicyEnforcer.checkResourceKey(final ResourceKey resourceKey)", "testcase": false, "constructor": false}, {"identifier": "checkPermissions", "parameters": "(final Permissions permissions)", "modifiers": "private static", "return": "void", "signature": "void checkPermissions(final Permissions permissions)", "full_signature": "private static void checkPermissions(final Permissions permissions)", "class_method_signature": "TrieBasedPolicyEnforcer.checkPermissions(final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "getSubjectIdsWithPartialPermission", "parameters": "(final ResourceKey resourceKey,\n            final Permissions permissions)", "modifiers": "@Override public", "return": "Set<String>", "signature": "Set<String> getSubjectIdsWithPartialPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "full_signature": "@Override public Set<String> getSubjectIdsWithPartialPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "class_method_signature": "TrieBasedPolicyEnforcer.getSubjectIdsWithPartialPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "getSubjectsWithPartialPermission", "parameters": "(final ResourceKey resourceKey,\n            final Permissions permissions)", "modifiers": "@Override public", "return": "Set<AuthorizationSubject>", "signature": "Set<AuthorizationSubject> getSubjectsWithPartialPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "full_signature": "@Override public Set<AuthorizationSubject> getSubjectsWithPartialPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "class_method_signature": "TrieBasedPolicyEnforcer.getSubjectsWithPartialPermission(final ResourceKey resourceKey,\n            final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "buildJsonView", "parameters": "(final ResourceKey resourceKey,\n            final Iterable<JsonField> jsonFields,\n            final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject buildJsonView(final ResourceKey resourceKey,\n            final Iterable<JsonField> jsonFields,\n            final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "full_signature": "@Override public JsonObject buildJsonView(final ResourceKey resourceKey,\n            final Iterable<JsonField> jsonFields,\n            final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "class_method_signature": "TrieBasedPolicyEnforcer.buildJsonView(final ResourceKey resourceKey,\n            final Iterable<JsonField> jsonFields,\n            final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "testcase": false, "constructor": false}, {"identifier": "seekWithFallback", "parameters": "(final ResourceKey resourceKey, final PolicyTrie firstTry,\n            final PolicyTrie fallback)", "modifiers": "private static", "return": "PolicyTrie", "signature": "PolicyTrie seekWithFallback(final ResourceKey resourceKey, final PolicyTrie firstTry,\n            final PolicyTrie fallback)", "full_signature": "private static PolicyTrie seekWithFallback(final ResourceKey resourceKey, final PolicyTrie firstTry,\n            final PolicyTrie fallback)", "class_method_signature": "TrieBasedPolicyEnforcer.seekWithFallback(final ResourceKey resourceKey, final PolicyTrie firstTry,\n            final PolicyTrie fallback)", "testcase": false, "constructor": false}], "file": "model/enforcers/src/main/java/org/eclipse/ditto/model/enforcers/trie/TrieBasedPolicyEnforcer.java"}, "focal_method": {"identifier": "buildJsonView", "parameters": "(final ResourceKey resourceKey,\n            final Iterable<JsonField> jsonFields,\n            final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "modifiers": "@Override public", "return": "JsonObject", "body": "@Override\n    public JsonObject buildJsonView(final ResourceKey resourceKey,\n            final Iterable<JsonField> jsonFields,\n            final AuthorizationContext authorizationContext,\n            final Permissions permissions) {\n\n        checkResourceKey(resourceKey);\n        checkNotNull(jsonFields, \"JSON fields\");\n        checkPermissions(permissions);\n\n        final JsonKey typeKey = JsonKey.of(resourceKey.getResourceType());\n\n        if (inheritedTrie.hasChild(typeKey)) {\n            final PolicyTrie start = inheritedTrie.seekToLeastAncestor(PolicyTrie.getJsonKeyIterator(resourceKey));\n            return start.buildJsonView(jsonFields, authorizationContext.getAuthorizationSubjectIds(), permissions);\n        } else {\n            return JsonFactory.newObject();\n        }\n    }", "signature": "JsonObject buildJsonView(final ResourceKey resourceKey,\n            final Iterable<JsonField> jsonFields,\n            final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "full_signature": "@Override public JsonObject buildJsonView(final ResourceKey resourceKey,\n            final Iterable<JsonField> jsonFields,\n            final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "class_method_signature": "TrieBasedPolicyEnforcer.buildJsonView(final ResourceKey resourceKey,\n            final Iterable<JsonField> jsonFields,\n            final AuthorizationContext authorizationContext,\n            final Permissions permissions)", "testcase": false, "constructor": false, "invocations": ["checkResourceKey", "checkNotNull", "checkPermissions", "of", "getResourceType", "hasChild", "seekToLeastAncestor", "getJsonKeyIterator", "buildJsonView", "getAuthorizationSubjectIds", "newObject"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}