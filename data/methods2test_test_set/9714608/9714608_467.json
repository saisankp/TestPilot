{"test_class": {"identifier": "ShapeFileIndexWriterTest", "superclass": "extends AbstractIoShapeTest", "interfaces": "", "fields": [{"original_string": "private ShapeFileIndexRecord[] records;", "modifier": "private", "type": "ShapeFileIndexRecord[]", "declarator": "records", "var_name": "records"}, {"original_string": "private ESRIBounds bounds;", "modifier": "private", "type": "ESRIBounds", "declarator": "bounds", "var_name": "bounds"}, {"original_string": "private File outputFile;", "modifier": "private", "type": "File", "declarator": "outputFile", "var_name": "outputFile"}, {"original_string": "private ShapeFileIndexWriter writer;", "modifier": "private", "type": "ShapeFileIndexWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "private int fileSize;", "modifier": "private", "type": "int", "declarator": "fileSize", "var_name": "fileSize"}], "file": "advanced/shapefile/src/test/java/org/arakhne/afc/io/shape/ShapeFileIndexWriterTest.java"}, "test_case": {"identifier": "testGetFileBounds", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testGetFileBounds() {\n\t\tassertSame(this.bounds, this.writer.getFileBounds());\n\t}", "signature": "void testGetFileBounds()", "full_signature": "@Test public void testGetFileBounds()", "class_method_signature": "ShapeFileIndexWriterTest.testGetFileBounds()", "testcase": true, "constructor": false, "invocations": ["assertSame", "getFileBounds"]}, "focal_class": {"identifier": "ShapeFileIndexWriter", "superclass": "extends AbstractCommonShapeFileWriter<ShapeFileIndexRecord>", "interfaces": "", "fields": [{"original_string": "private final ESRIBounds hbounds;", "modifier": "private final", "type": "ESRIBounds", "declarator": "hbounds", "var_name": "hbounds"}, {"original_string": "private int lastOffsetToWrite = HEADER_BYTES;", "modifier": "private", "type": "int", "declarator": "lastOffsetToWrite = HEADER_BYTES", "var_name": "lastOffsetToWrite"}], "methods": [{"identifier": "ShapeFileIndexWriter", "parameters": "(File shapeName, ShapeElementType elementType, ESRIBounds bounds)", "modifiers": "public", "return": "", "signature": " ShapeFileIndexWriter(File shapeName, ShapeElementType elementType, ESRIBounds bounds)", "full_signature": "public  ShapeFileIndexWriter(File shapeName, ShapeElementType elementType, ESRIBounds bounds)", "class_method_signature": "ShapeFileIndexWriter.ShapeFileIndexWriter(File shapeName, ShapeElementType elementType, ESRIBounds bounds)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileIndexWriter", "parameters": "(URL shapeName, ShapeElementType elementType, ESRIBounds bounds)", "modifiers": "public", "return": "", "signature": " ShapeFileIndexWriter(URL shapeName, ShapeElementType elementType, ESRIBounds bounds)", "full_signature": "public  ShapeFileIndexWriter(URL shapeName, ShapeElementType elementType, ESRIBounds bounds)", "class_method_signature": "ShapeFileIndexWriter.ShapeFileIndexWriter(URL shapeName, ShapeElementType elementType, ESRIBounds bounds)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileIndexWriter", "parameters": "(OutputStream stream, ShapeElementType elementType, ESRIBounds bounds)", "modifiers": "public", "return": "", "signature": " ShapeFileIndexWriter(OutputStream stream, ShapeElementType elementType, ESRIBounds bounds)", "full_signature": "public  ShapeFileIndexWriter(OutputStream stream, ShapeElementType elementType, ESRIBounds bounds)", "class_method_signature": "ShapeFileIndexWriter.ShapeFileIndexWriter(OutputStream stream, ShapeElementType elementType, ESRIBounds bounds)", "testcase": false, "constructor": true}, {"identifier": "ShapeFileIndexWriter", "parameters": "(WritableByteChannel channel, ShapeElementType elementType, ESRIBounds bounds)", "modifiers": "public", "return": "", "signature": " ShapeFileIndexWriter(WritableByteChannel channel, ShapeElementType elementType, ESRIBounds bounds)", "full_signature": "public  ShapeFileIndexWriter(WritableByteChannel channel, ShapeElementType elementType, ESRIBounds bounds)", "class_method_signature": "ShapeFileIndexWriter.ShapeFileIndexWriter(WritableByteChannel channel, ShapeElementType elementType, ESRIBounds bounds)", "testcase": false, "constructor": true}, {"identifier": "getFileBounds", "parameters": "()", "modifiers": "@Override protected", "return": "ESRIBounds", "signature": "ESRIBounds getFileBounds()", "full_signature": "@Override protected ESRIBounds getFileBounds()", "class_method_signature": "ShapeFileIndexWriter.getFileBounds()", "testcase": false, "constructor": false}, {"identifier": "writeElement", "parameters": "(int recIndex, ShapeFileIndexRecord element, ShapeElementType type)", "modifiers": "@Override protected", "return": "void", "signature": "void writeElement(int recIndex, ShapeFileIndexRecord element, ShapeElementType type)", "full_signature": "@Override protected void writeElement(int recIndex, ShapeFileIndexRecord element, ShapeElementType type)", "class_method_signature": "ShapeFileIndexWriter.writeElement(int recIndex, ShapeFileIndexRecord element, ShapeElementType type)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(int recordLength)", "modifiers": "public final", "return": "void", "signature": "void write(int recordLength)", "full_signature": "public final void write(int recordLength)", "class_method_signature": "ShapeFileIndexWriter.write(int recordLength)", "testcase": false, "constructor": false}], "file": "advanced/shapefile/src/main/java/org/arakhne/afc/io/shape/ShapeFileIndexWriter.java"}, "focal_method": {"identifier": "getFileBounds", "parameters": "()", "modifiers": "@Override protected", "return": "ESRIBounds", "body": "@Override\n\tprotected ESRIBounds getFileBounds() {\n\t\treturn this.hbounds;\n\t}", "signature": "ESRIBounds getFileBounds()", "full_signature": "@Override protected ESRIBounds getFileBounds()", "class_method_signature": "ShapeFileIndexWriter.getFileBounds()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}