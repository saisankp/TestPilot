{"test_class": {"identifier": "ServiceTypePackageVerifierTest", "superclass": "", "interfaces": "", "fields": [], "file": "servers/sip-presence/sip-event/subscription/sbb/src/test/java/org/mobicents/slee/sipevent/server/subscription/eventlist/ServiceTypePackageVerifierTest.java"}, "test_case": {"identifier": "test", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void test() throws JAXBException, IOException {\n\n\t\t// read rls service xml\n\t\tInputStream is = ServiceTypePackageVerifierTest.class\n\t\t\t\t.getResourceAsStream(\"rls-services-example.xml\");\n\t\tJAXBContext context = JAXBContext.newInstance(\"org.openxdm.xcap.client.appusage.rlsservices.jaxb\");\n\t\tUnmarshaller unmarshaller = context.createUnmarshaller();\n\t\tRlsServices rlsServices = (RlsServices) unmarshaller.unmarshal(is);\t\t\n\t\tis.close();\n\t\tAssert\n\t\t\t\t.assertTrue(new ServiceTypePackageVerifier().hasPackage(rlsServices.getService().get(0), \"presence\"));\n\t\t\n\t}", "signature": "void test()", "full_signature": "@Test public void test()", "class_method_signature": "ServiceTypePackageVerifierTest.test()", "testcase": true, "constructor": false, "invocations": ["getResourceAsStream", "newInstance", "createUnmarshaller", "unmarshal", "close", "assertTrue", "hasPackage", "get", "getService"]}, "focal_class": {"identifier": "ServiceTypePackageVerifier", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "hasPackage", "parameters": "(ServiceType serviceType, String eventPackage)", "modifiers": "public", "return": "boolean", "signature": "boolean hasPackage(ServiceType serviceType, String eventPackage)", "full_signature": "public boolean hasPackage(ServiceType serviceType, String eventPackage)", "class_method_signature": "ServiceTypePackageVerifier.hasPackage(ServiceType serviceType, String eventPackage)", "testcase": false, "constructor": false}], "file": "servers/sip-presence/sip-event/subscription/sbb/src/main/java/org/mobicents/slee/sipevent/server/subscription/eventlist/ServiceTypePackageVerifier.java"}, "focal_method": {"identifier": "hasPackage", "parameters": "(ServiceType serviceType, String eventPackage)", "modifiers": "public", "return": "boolean", "body": "public boolean hasPackage(ServiceType serviceType, String eventPackage) {\t\t\n\t\tfor (Object obj : serviceType.getPackages().getPackageAndAny()) {\n\t\t\tJAXBElement element = (JAXBElement) obj;\n\t\t\tif (element.getName().getLocalPart().equals(\"package\") && element.getValue().equals(eventPackage)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}", "signature": "boolean hasPackage(ServiceType serviceType, String eventPackage)", "full_signature": "public boolean hasPackage(ServiceType serviceType, String eventPackage)", "class_method_signature": "ServiceTypePackageVerifier.hasPackage(ServiceType serviceType, String eventPackage)", "testcase": false, "constructor": false, "invocations": ["getPackageAndAny", "getPackages", "equals", "getLocalPart", "getName", "equals", "getValue"]}, "repository": {"repo_id": 128294, "url": "https://github.com/deruelle/mobicents", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 17, "size": 347121, "license": "licensed"}}