{"test_class": {"identifier": "SiddhiTupleFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/apache/flink/streaming/siddhi/utils/SiddhiTupleFactoryTest.java"}, "test_case": {"identifier": "testConvertTooLongObjectArrayToTuple", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testConvertTooLongObjectArrayToTuple() {\n        Object[] row = new Object[26];\n        SiddhiTupleFactory.newTuple(row);\n    }", "signature": "void testConvertTooLongObjectArrayToTuple()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testConvertTooLongObjectArrayToTuple()", "class_method_signature": "SiddhiTupleFactoryTest.testConvertTooLongObjectArrayToTuple()", "testcase": true, "constructor": false, "invocations": ["newTuple"]}, "focal_class": {"identifier": "SiddhiTupleFactory", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "newTuple", "parameters": "(Object[] row)", "modifiers": "public static", "return": "T", "signature": "T newTuple(Object[] row)", "full_signature": "public static T newTuple(Object[] row)", "class_method_signature": "SiddhiTupleFactory.newTuple(Object[] row)", "testcase": false, "constructor": false}, {"identifier": "setTupleValue", "parameters": "(Tuple tuple, Object[] row)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "T", "signature": "T setTupleValue(Tuple tuple, Object[] row)", "full_signature": "@SuppressWarnings(\"unchecked\") public static T setTupleValue(Tuple tuple, Object[] row)", "class_method_signature": "SiddhiTupleFactory.setTupleValue(Tuple tuple, Object[] row)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/apache/flink/streaming/siddhi/utils/SiddhiTupleFactory.java"}, "focal_method": {"identifier": "newTuple", "parameters": "(Object[] row)", "modifiers": "public static", "return": "T", "body": "public static <T extends Tuple> T newTuple(Object[] row) {\n        Preconditions.checkNotNull(row, \"Tuple row is null\");\n        switch (row.length) {\n            case 0:\n                return setTupleValue(new Tuple0(), row);\n            case 1:\n                return setTupleValue(new Tuple1(), row);\n            case 2:\n                return setTupleValue(new Tuple2(), row);\n            case 3:\n                return setTupleValue(new Tuple3(), row);\n            case 4:\n                return setTupleValue(new Tuple4(), row);\n            case 5:\n                return setTupleValue(new Tuple5(), row);\n            case 6:\n                return setTupleValue(new Tuple6(), row);\n            case 7:\n                return setTupleValue(new Tuple7(), row);\n            case 8:\n                return setTupleValue(new Tuple8(), row);\n            case 9:\n                return setTupleValue(new Tuple9(), row);\n            case 10:\n                return setTupleValue(new Tuple10(), row);\n            case 11:\n                return setTupleValue(new Tuple11(), row);\n            case 12:\n                return setTupleValue(new Tuple12(), row);\n            case 13:\n                return setTupleValue(new Tuple13(), row);\n            case 14:\n                return setTupleValue(new Tuple14(), row);\n            case 15:\n                return setTupleValue(new Tuple15(), row);\n            case 16:\n                return setTupleValue(new Tuple16(), row);\n            case 17:\n                return setTupleValue(new Tuple17(), row);\n            case 18:\n                return setTupleValue(new Tuple18(), row);\n            case 19:\n                return setTupleValue(new Tuple19(), row);\n            case 20:\n                return setTupleValue(new Tuple20(), row);\n            case 21:\n                return setTupleValue(new Tuple21(), row);\n            case 22:\n                return setTupleValue(new Tuple22(), row);\n            case 23:\n                return setTupleValue(new Tuple23(), row);\n            case 24:\n                return setTupleValue(new Tuple24(), row);\n            case 25:\n                return setTupleValue(new Tuple25(), row);\n            default:\n                throw new IllegalArgumentException(\"Too long row: \" + row.length + \", unable to convert to Tuple\");\n        }\n    }", "signature": "T newTuple(Object[] row)", "full_signature": "public static T newTuple(Object[] row)", "class_method_signature": "SiddhiTupleFactory.newTuple(Object[] row)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue", "setTupleValue"]}, "repository": {"repo_id": 67913797, "url": "https://github.com/haoch/flink-siddhi", "language": "Java", "is_fork": false, "fork_count": 72, "stargazer_count": 148, "size": 635, "license": "licensed"}}