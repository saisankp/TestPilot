{"test_class": {"identifier": "JmsResponseBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private WilmaHttpResponse wilmaHttpResponse;", "modifier": "@Mock\n    private", "type": "WilmaHttpResponse", "declarator": "wilmaHttpResponse", "var_name": "wilmaHttpResponse"}, {"original_string": "@Mock\n    private JmsTemplate jmsTemplate;", "modifier": "@Mock\n    private", "type": "JmsTemplate", "declarator": "jmsTemplate", "var_name": "jmsTemplate"}, {"original_string": "@Mock\n    private Queue responseQueue;", "modifier": "@Mock\n    private", "type": "Queue", "declarator": "responseQueue", "var_name": "responseQueue"}, {"original_string": "@Mock\n    private JmsResponseMessageCreator jmsResponseMessageCreator;", "modifier": "@Mock\n    private", "type": "JmsResponseMessageCreator", "declarator": "jmsResponseMessageCreator", "var_name": "jmsResponseMessageCreator"}, {"original_string": "@Mock\n    private JmsResponseMessageCreatorFactory messageCreatorFactory;", "modifier": "@Mock\n    private", "type": "JmsResponseMessageCreatorFactory", "declarator": "messageCreatorFactory", "var_name": "messageCreatorFactory"}, {"original_string": "@InjectMocks\n    private JmsResponseBuilder underTest;", "modifier": "@InjectMocks\n    private", "type": "JmsResponseBuilder", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-core/src/test/java/com/epam/wilma/core/processor/response/jms/JmsResponseBuilderTest.java"}, "test_case": {"identifier": "testBuildResponseShouldSendResponseToJmsQueueWhenHeadersContainsWilmaLoggerId", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBuildResponseShouldSendResponseToJmsQueueWhenHeadersContainsWilmaLoggerId() {\n        //GIVEN\n        given(messageCreatorFactory.create(wilmaHttpResponse, true)).willReturn(jmsResponseMessageCreator);\n        //WHEN\n        underTest.buildResponse(wilmaHttpResponse);\n        //THEN\n        verify(jmsTemplate).send(responseQueue, jmsResponseMessageCreator);\n    }", "signature": "void testBuildResponseShouldSendResponseToJmsQueueWhenHeadersContainsWilmaLoggerId()", "full_signature": "@Test public void testBuildResponseShouldSendResponseToJmsQueueWhenHeadersContainsWilmaLoggerId()", "class_method_signature": "JmsResponseBuilderTest.testBuildResponseShouldSendResponseToJmsQueueWhenHeadersContainsWilmaLoggerId()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "create", "buildResponse", "send", "verify"]}, "focal_class": {"identifier": "JmsResponseBuilder", "superclass": "", "interfaces": "implements ResponseBuilder", "fields": [{"original_string": "@Autowired\n    private JmsTemplate jmsTemplate;", "modifier": "@Autowired\n    private", "type": "JmsTemplate", "declarator": "jmsTemplate", "var_name": "jmsTemplate"}, {"original_string": "@Autowired\n    private Queue responseQueue;", "modifier": "@Autowired\n    private", "type": "Queue", "declarator": "responseQueue", "var_name": "responseQueue"}, {"original_string": "@Autowired\n    private JmsResponseMessageCreatorFactory messageCreatorFactory;", "modifier": "@Autowired\n    private", "type": "JmsResponseMessageCreatorFactory", "declarator": "messageCreatorFactory", "var_name": "messageCreatorFactory"}], "methods": [{"identifier": "buildResponse", "parameters": "(final WilmaHttpEntity entity)", "modifiers": "@Override public", "return": "void", "signature": "void buildResponse(final WilmaHttpEntity entity)", "full_signature": "@Override public void buildResponse(final WilmaHttpEntity entity)", "class_method_signature": "JmsResponseBuilder.buildResponse(final WilmaHttpEntity entity)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-core/src/main/java/com/epam/wilma/core/processor/response/jms/JmsResponseBuilder.java"}, "focal_method": {"identifier": "buildResponse", "parameters": "(final WilmaHttpEntity entity)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void buildResponse(final WilmaHttpEntity entity) {\n        WilmaHttpResponse response = (WilmaHttpResponse) entity;\n        jmsTemplate.send(responseQueue, messageCreatorFactory.create(response, true));\n    }", "signature": "void buildResponse(final WilmaHttpEntity entity)", "full_signature": "@Override public void buildResponse(final WilmaHttpEntity entity)", "class_method_signature": "JmsResponseBuilder.buildResponse(final WilmaHttpEntity entity)", "testcase": false, "constructor": false, "invocations": ["send", "create"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}