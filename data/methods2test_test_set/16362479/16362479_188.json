{"test_class": {"identifier": "RaftActorDelegatingPersistentDataProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Payload PERSISTENT_PAYLOAD = new TestPersistentPayload();", "modifier": "private static final", "type": "Payload", "declarator": "PERSISTENT_PAYLOAD = new TestPersistentPayload()", "var_name": "PERSISTENT_PAYLOAD"}, {"original_string": "private static final Payload NON_PERSISTENT_PAYLOAD = new TestNonPersistentPayload();", "modifier": "private static final", "type": "Payload", "declarator": "NON_PERSISTENT_PAYLOAD = new TestNonPersistentPayload()", "var_name": "NON_PERSISTENT_PAYLOAD"}, {"original_string": "private static final Object OTHER_DATA_OBJECT = new Object();", "modifier": "private static final", "type": "Object", "declarator": "OTHER_DATA_OBJECT = new Object()", "var_name": "OTHER_DATA_OBJECT"}, {"original_string": "@Mock\n    private ReplicatedLogEntry mockPersistentLogEntry;", "modifier": "@Mock\n    private", "type": "ReplicatedLogEntry", "declarator": "mockPersistentLogEntry", "var_name": "mockPersistentLogEntry"}, {"original_string": "@Mock\n    private ReplicatedLogEntry mockNonPersistentLogEntry;", "modifier": "@Mock\n    private", "type": "ReplicatedLogEntry", "declarator": "mockNonPersistentLogEntry", "var_name": "mockNonPersistentLogEntry"}, {"original_string": "@Mock\n    private DataPersistenceProvider mockDelegateProvider;", "modifier": "@Mock\n    private", "type": "DataPersistenceProvider", "declarator": "mockDelegateProvider", "var_name": "mockDelegateProvider"}, {"original_string": "@Mock\n    private PersistentDataProvider mockPersistentProvider;", "modifier": "@Mock\n    private", "type": "PersistentDataProvider", "declarator": "mockPersistentProvider", "var_name": "mockPersistentProvider"}, {"original_string": "@SuppressWarnings(\"rawtypes\")\n    @Mock\n    private Procedure mockProcedure;", "modifier": "@SuppressWarnings(\"rawtypes\")\n    @Mock\n    private", "type": "Procedure", "declarator": "mockProcedure", "var_name": "mockProcedure"}, {"original_string": "private RaftActorDelegatingPersistentDataProvider provider;", "modifier": "private", "type": "RaftActorDelegatingPersistentDataProvider", "declarator": "provider", "var_name": "provider"}], "file": "opendaylight/md-sal/sal-akka-raft/src/test/java/org/opendaylight/controller/cluster/raft/RaftActorDelegatingPersistentDataProviderTest.java"}, "test_case": {"identifier": "testPersistWithPersistenceEnabled", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Test public", "return": "void", "body": "@SuppressWarnings(\"unchecked\")\n    @Test\n    public void testPersistWithPersistenceEnabled() {\n        doReturn(true).when(mockDelegateProvider).isRecoveryApplicable();\n\n        provider.persist(mockPersistentLogEntry, mockProcedure);\n        verify(mockDelegateProvider).persist(mockPersistentLogEntry, mockProcedure);\n\n        provider.persist(mockNonPersistentLogEntry, mockProcedure);\n        verify(mockDelegateProvider).persist(mockNonPersistentLogEntry, mockProcedure);\n\n        provider.persist(OTHER_DATA_OBJECT, mockProcedure);\n        verify(mockDelegateProvider).persist(OTHER_DATA_OBJECT, mockProcedure);\n    }", "signature": "void testPersistWithPersistenceEnabled()", "full_signature": "@SuppressWarnings(\"unchecked\") @Test public void testPersistWithPersistenceEnabled()", "class_method_signature": "RaftActorDelegatingPersistentDataProviderTest.testPersistWithPersistenceEnabled()", "testcase": true, "constructor": false, "invocations": ["isRecoveryApplicable", "when", "doReturn", "persist", "persist", "verify", "persist", "persist", "verify", "persist", "persist", "verify"]}, "focal_class": {"identifier": "RaftActorDelegatingPersistentDataProvider", "superclass": "extends DelegatingPersistentDataProvider", "interfaces": "", "fields": [{"original_string": "private final PersistentDataProvider persistentProvider;", "modifier": "private final", "type": "PersistentDataProvider", "declarator": "persistentProvider", "var_name": "persistentProvider"}], "methods": [{"identifier": "RaftActorDelegatingPersistentDataProvider", "parameters": "(final DataPersistenceProvider delegate,\n            final PersistentDataProvider persistentProvider)", "modifiers": "", "return": "", "signature": " RaftActorDelegatingPersistentDataProvider(final DataPersistenceProvider delegate,\n            final PersistentDataProvider persistentProvider)", "full_signature": "  RaftActorDelegatingPersistentDataProvider(final DataPersistenceProvider delegate,\n            final PersistentDataProvider persistentProvider)", "class_method_signature": "RaftActorDelegatingPersistentDataProvider.RaftActorDelegatingPersistentDataProvider(final DataPersistenceProvider delegate,\n            final PersistentDataProvider persistentProvider)", "testcase": false, "constructor": true}, {"identifier": "persist", "parameters": "(final T entry, final Procedure<T> procedure)", "modifiers": "@Override public", "return": "void", "signature": "void persist(final T entry, final Procedure<T> procedure)", "full_signature": "@Override public void persist(final T entry, final Procedure<T> procedure)", "class_method_signature": "RaftActorDelegatingPersistentDataProvider.persist(final T entry, final Procedure<T> procedure)", "testcase": false, "constructor": false}, {"identifier": "persistAsync", "parameters": "(final T entry, final Procedure<T> procedure)", "modifiers": "@Override public", "return": "void", "signature": "void persistAsync(final T entry, final Procedure<T> procedure)", "full_signature": "@Override public void persistAsync(final T entry, final Procedure<T> procedure)", "class_method_signature": "RaftActorDelegatingPersistentDataProvider.persistAsync(final T entry, final Procedure<T> procedure)", "testcase": false, "constructor": false}, {"identifier": "doPersist", "parameters": "(final T entry, final Procedure<T> procedure, final boolean async)", "modifiers": "private", "return": "void", "signature": "void doPersist(final T entry, final Procedure<T> procedure, final boolean async)", "full_signature": "private void doPersist(final T entry, final Procedure<T> procedure, final boolean async)", "class_method_signature": "RaftActorDelegatingPersistentDataProvider.doPersist(final T entry, final Procedure<T> procedure, final boolean async)", "testcase": false, "constructor": false}, {"identifier": "persistSuper", "parameters": "(final T object, final Procedure<T> procedure, final boolean async)", "modifiers": "private", "return": "void", "signature": "void persistSuper(final T object, final Procedure<T> procedure, final boolean async)", "full_signature": "private void persistSuper(final T object, final Procedure<T> procedure, final boolean async)", "class_method_signature": "RaftActorDelegatingPersistentDataProvider.persistSuper(final T object, final Procedure<T> procedure, final boolean async)", "testcase": false, "constructor": false}], "file": "opendaylight/md-sal/sal-akka-raft/src/main/java/org/opendaylight/controller/cluster/raft/RaftActorDelegatingPersistentDataProvider.java"}, "focal_method": {"identifier": "persist", "parameters": "(final T entry, final Procedure<T> procedure)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public <T> void persist(final T entry, final Procedure<T> procedure) {\n        doPersist(entry, procedure, false);\n    }", "signature": "void persist(final T entry, final Procedure<T> procedure)", "full_signature": "@Override public void persist(final T entry, final Procedure<T> procedure)", "class_method_signature": "RaftActorDelegatingPersistentDataProvider.persist(final T entry, final Procedure<T> procedure)", "testcase": false, "constructor": false, "invocations": ["doPersist"]}, "repository": {"repo_id": 16362479, "url": "https://github.com/opendaylight/controller", "stars": 313, "created": "1/29/2014 11:10:45 PM +00:00", "updates": "2020-01-20T11:02:36+00:00", "fork": "False", "license": "licensed"}}