{"test_class": {"identifier": "XMLSplitterConfigurationBeanBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "taverna-wsdl-activity/src/test/java/org/apache/taverna/activities/wsdl/xmlsplitter/XMLSplitterConfigurationBeanBuilderTest.java"}, "test_case": {"identifier": "testBuildBeanForOutput", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testBuildBeanForOutput() throws Exception {\n\t\tString xml = \"<s:extensions xmlns:s=\\\"http://org.embl.ebi.escience/xscufl/0.1alpha\\\"><s:complextype optional=\\\"false\\\" unbounded=\\\"false\\\" typename=\\\"getPersonResponse\\\" name=\\\"parameters\\\" qname=\\\"{http://testing.org}getPersonResponse\\\"><s:elements><s:complextype optional=\\\"false\\\" unbounded=\\\"false\\\" typename=\\\"Person\\\" name=\\\"getPersonReturn\\\" qname=\\\"{http://testing.org}&gt;getPersonResponse&gt;getPersonReturn\\\"><s:elements><s:complextype optional=\\\"false\\\" unbounded=\\\"false\\\" typename=\\\"Address\\\" name=\\\"address\\\" qname=\\\"{http://testing.org}Person&gt;address\\\"><s:elements><s:basetype optional=\\\"false\\\" unbounded=\\\"false\\\" typename=\\\"string\\\" name=\\\"city\\\" qname=\\\"{http://testing.org}Address&gt;city\\\" /><s:basetype optional=\\\"false\\\" unbounded=\\\"false\\\" typename=\\\"int\\\" name=\\\"number\\\" qname=\\\"{http://testing.org}Address&gt;number\\\" /><s:basetype optional=\\\"false\\\" unbounded=\\\"false\\\" typename=\\\"string\\\" name=\\\"road\\\" qname=\\\"{http://testing.org}Address&gt;road\\\" /></s:elements></s:complextype><s:basetype optional=\\\"false\\\" unbounded=\\\"false\\\" typename=\\\"int\\\" name=\\\"age\\\" qname=\\\"{http://testing.org}Person&gt;age\\\" /><s:basetype optional=\\\"false\\\" unbounded=\\\"false\\\" typename=\\\"string\\\" name=\\\"name\\\" qname=\\\"{http://testing.org}Person&gt;name\\\" /></s:elements></s:complextype></s:elements></s:complextype></s:extensions>\";\n\t\tElement element = new SAXBuilder().build(new StringReader(xml)).getRootElement();\n\t\tJsonNode bean = XMLSplitterConfigurationBeanBuilder.buildBeanForOutput(element);\n\n\t\tassertNotNull(\"The bean should not be null\",bean);\n\n\t\tassertEquals(\"There should be 1 input\",1,bean.get(\"inputPorts\").size());\n\t\tassertEquals(\"There should be 1 output\",1,bean.get(\"outputPorts\").size());\n\n\t\tassertEquals(\"The input should be named input\",\"input\",bean.get(\"inputPorts\").get(0).get(\"name\").textValue());\n\t\tassertEquals(\"The output shouldbe named getPersonResponse\",\"getPersonReturn\",bean.get(\"outputPorts\").get(0).get(\"name\").textValue());\n\n\t\tassertEquals(\"The type xml definition should match\",xml,bean.get(\"wrappedType\").textValue());\n\t}", "signature": "void testBuildBeanForOutput()", "full_signature": "@Test public void testBuildBeanForOutput()", "class_method_signature": "XMLSplitterConfigurationBeanBuilderTest.testBuildBeanForOutput()", "testcase": true, "constructor": false, "invocations": ["getRootElement", "build", "buildBeanForOutput", "assertNotNull", "assertEquals", "size", "get", "assertEquals", "size", "get", "assertEquals", "textValue", "get", "get", "get", "assertEquals", "textValue", "get", "get", "get", "assertEquals", "textValue", "get"]}, "focal_class": {"identifier": "XMLSplitterConfigurationBeanBuilder", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JsonNodeFactory JSON_NODE_FACTORY = JsonNodeFactory.instance;", "modifier": "private static final", "type": "JsonNodeFactory", "declarator": "JSON_NODE_FACTORY = JsonNodeFactory.instance", "var_name": "JSON_NODE_FACTORY"}], "methods": [{"identifier": "buildBeanForInput", "parameters": "(TypeDescriptor descriptor)", "modifiers": "public static", "return": "JsonNode", "signature": "JsonNode buildBeanForInput(TypeDescriptor descriptor)", "full_signature": "public static JsonNode buildBeanForInput(TypeDescriptor descriptor)", "class_method_signature": "XMLSplitterConfigurationBeanBuilder.buildBeanForInput(TypeDescriptor descriptor)", "testcase": false, "constructor": false}, {"identifier": "buildBeanForOutput", "parameters": "(TypeDescriptor descriptor)", "modifiers": "public static", "return": "JsonNode", "signature": "JsonNode buildBeanForOutput(TypeDescriptor descriptor)", "full_signature": "public static JsonNode buildBeanForOutput(TypeDescriptor descriptor)", "class_method_signature": "XMLSplitterConfigurationBeanBuilder.buildBeanForOutput(TypeDescriptor descriptor)", "testcase": false, "constructor": false}, {"identifier": "buildBeanForInput", "parameters": "(Element element)", "modifiers": "public static", "return": "JsonNode", "signature": "JsonNode buildBeanForInput(Element element)", "full_signature": "public static JsonNode buildBeanForInput(Element element)", "class_method_signature": "XMLSplitterConfigurationBeanBuilder.buildBeanForInput(Element element)", "testcase": false, "constructor": false}, {"identifier": "depthForDescriptor", "parameters": "(TypeDescriptor desc)", "modifiers": "private static", "return": "int", "signature": "int depthForDescriptor(TypeDescriptor desc)", "full_signature": "private static int depthForDescriptor(TypeDescriptor desc)", "class_method_signature": "XMLSplitterConfigurationBeanBuilder.depthForDescriptor(TypeDescriptor desc)", "testcase": false, "constructor": false}, {"identifier": "buildBeanForOutput", "parameters": "(Element element)", "modifiers": "public static", "return": "JsonNode", "signature": "JsonNode buildBeanForOutput(Element element)", "full_signature": "public static JsonNode buildBeanForOutput(Element element)", "class_method_signature": "XMLSplitterConfigurationBeanBuilder.buildBeanForOutput(Element element)", "testcase": false, "constructor": false}], "file": "taverna-wsdl-activity/src/main/java/org/apache/taverna/activities/wsdl/xmlsplitter/XMLSplitterConfigurationBeanBuilder.java"}, "focal_method": {"identifier": "buildBeanForOutput", "parameters": "(TypeDescriptor descriptor)", "modifiers": "public static", "return": "JsonNode", "body": "public static JsonNode buildBeanForOutput(TypeDescriptor descriptor) throws JDOMException, IOException {\n\t\tElement element = XMLSplitterSerialisationHelper.typeDescriptorToExtensionXML(descriptor);\n\t\treturn buildBeanForOutput(element);\n\t}", "signature": "JsonNode buildBeanForOutput(TypeDescriptor descriptor)", "full_signature": "public static JsonNode buildBeanForOutput(TypeDescriptor descriptor)", "class_method_signature": "XMLSplitterConfigurationBeanBuilder.buildBeanForOutput(TypeDescriptor descriptor)", "testcase": false, "constructor": false, "invocations": ["typeDescriptorToExtensionXML", "buildBeanForOutput"]}, "repository": {"repo_id": 30956938, "url": "https://github.com/apache/incubator-taverna-common-activities", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 5696, "license": "licensed"}}