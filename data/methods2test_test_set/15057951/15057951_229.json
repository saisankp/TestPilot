{"test_class": {"identifier": "BooleanHolderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "Boolean b1 = false;", "modifier": "", "type": "Boolean", "declarator": "b1 = false", "var_name": "b1"}, {"original_string": "Boolean b2 = true;", "modifier": "", "type": "Boolean", "declarator": "b2 = true", "var_name": "b2"}, {"original_string": "Boolean b3 = null;", "modifier": "", "type": "Boolean", "declarator": "b3 = null", "var_name": "b3"}, {"original_string": "BooleanHolder h1 = new BooleanHolder(b1);", "modifier": "", "type": "BooleanHolder", "declarator": "h1 = new BooleanHolder(b1)", "var_name": "h1"}, {"original_string": "BooleanHolder h2 = new BooleanHolder(b2);", "modifier": "", "type": "BooleanHolder", "declarator": "h2 = new BooleanHolder(b2)", "var_name": "h2"}, {"original_string": "BooleanHolder h3 = new BooleanHolder(b3);", "modifier": "", "type": "BooleanHolder", "declarator": "h3 = new BooleanHolder(b3)", "var_name": "h3"}], "file": "smartparam-engine/src/test/java/org/smartparam/engine/types/bool/BooleanHolderTest.java"}, "test_case": {"identifier": "testGetValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetValue() {\n\n        assertEquals(b1, h1.getValue());\n        assertEquals(b2, h2.getValue());\n        assertNull(h3.getValue());\n    }", "signature": "void testGetValue()", "full_signature": "@Test public void testGetValue()", "class_method_signature": "BooleanHolderTest.testGetValue()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getValue", "assertEquals", "getValue", "assertNull", "getValue"]}, "focal_class": {"identifier": "BooleanHolder", "superclass": "extends AbstractValueHolder", "interfaces": "", "fields": [{"original_string": "private final Boolean value;", "modifier": "private final", "type": "Boolean", "declarator": "value", "var_name": "value"}], "methods": [{"identifier": "BooleanHolder", "parameters": "(Boolean value)", "modifiers": "public", "return": "", "signature": " BooleanHolder(Boolean value)", "full_signature": "public  BooleanHolder(Boolean value)", "class_method_signature": "BooleanHolder.BooleanHolder(Boolean value)", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean getValue()", "full_signature": "@Override public Boolean getValue()", "class_method_signature": "BooleanHolder.getValue()", "testcase": false, "constructor": false}, {"identifier": "booleanValue", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean booleanValue()", "full_signature": "@Override public boolean booleanValue()", "class_method_signature": "BooleanHolder.booleanValue()", "testcase": false, "constructor": false}, {"identifier": "getBoolean", "parameters": "()", "modifiers": "@Override public", "return": "Boolean", "signature": "Boolean getBoolean()", "full_signature": "@Override public Boolean getBoolean()", "class_method_signature": "BooleanHolder.getBoolean()", "testcase": false, "constructor": false}], "file": "smartparam-engine/src/main/java/org/smartparam/engine/types/bool/BooleanHolder.java"}, "focal_method": {"identifier": "getValue", "parameters": "()", "modifiers": "@Override public", "return": "Boolean", "body": "@Override\n    public Boolean getValue() {\n        return value;\n    }", "signature": "Boolean getValue()", "full_signature": "@Override public Boolean getValue()", "class_method_signature": "BooleanHolder.getValue()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}