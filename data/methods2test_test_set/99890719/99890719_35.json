{"test_class": {"identifier": "MissingElementViolationPredicateTest", "superclass": "", "interfaces": "", "fields": [], "file": "mubench/src/test/java/de/tu_darmstadt/stg/mudetect/MissingElementViolationPredicateTest.java"}, "test_case": {"identifier": "fullInstance", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void fullInstance() {\n        Overlap overlap = buildOverlap(buildAUG().withActionNode(\":action:\")).withNode(\":action:\").build();\n\n        ViolationPredicate strategy = new MissingElementViolationPredicate();\n        assertFalse(strategy.apply(overlap).isPresent());\n    }", "signature": "void fullInstance()", "full_signature": "@Test public void fullInstance()", "class_method_signature": "MissingElementViolationPredicateTest.fullInstance()", "testcase": true, "constructor": false, "invocations": ["build", "withNode", "buildOverlap", "withActionNode", "buildAUG", "assertFalse", "isPresent", "apply"]}, "focal_class": {"identifier": "MissingElementViolationPredicate", "superclass": "", "interfaces": "implements ViolationPredicate", "fields": [], "methods": [{"identifier": "apply", "parameters": "(Overlap overlap)", "modifiers": "@Override public", "return": "Optional<Boolean>", "signature": "Optional<Boolean> apply(Overlap overlap)", "full_signature": "@Override public Optional<Boolean> apply(Overlap overlap)", "class_method_signature": "MissingElementViolationPredicate.apply(Overlap overlap)", "testcase": false, "constructor": false}, {"identifier": "isMissingElement", "parameters": "(Overlap overlap)", "modifiers": "private", "return": "boolean", "signature": "boolean isMissingElement(Overlap overlap)", "full_signature": "private boolean isMissingElement(Overlap overlap)", "class_method_signature": "MissingElementViolationPredicate.isMissingElement(Overlap overlap)", "testcase": false, "constructor": false}], "file": "mubench/src/main/java/de/tu_darmstadt/stg/mudetect/MissingElementViolationPredicate.java"}, "focal_method": {"identifier": "apply", "parameters": "(Overlap overlap)", "modifiers": "@Override public", "return": "Optional<Boolean>", "body": "@Override\n    public Optional<Boolean> apply(Overlap overlap) {\n        return isMissingElement(overlap) ? Optional.of(true) : Optional.empty();\n    }", "signature": "Optional<Boolean> apply(Overlap overlap)", "full_signature": "@Override public Optional<Boolean> apply(Overlap overlap)", "class_method_signature": "MissingElementViolationPredicate.apply(Overlap overlap)", "testcase": false, "constructor": false, "invocations": ["isMissingElement", "of", "empty"]}, "repository": {"repo_id": 99890719, "url": "https://github.com/stg-tud/MUDetect", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 5, "size": 11835, "license": "licensed"}}