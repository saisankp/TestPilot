{"test_class": {"identifier": "ConvertTest", "superclass": "", "interfaces": "", "fields": [], "file": "util/src/test/java/org/coniks/util/ConvertTest.java"}, "test_case": {"identifier": "testBytesToHex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testBytesToHex() {\n\n        byte[] rand = new byte[4];\n        new Random().nextBytes(rand);\n\n        String conv = Convert.bytesToHex(rand);\n\n        assertTrue(\"Bad length of hex string\", conv.length() == 8);\n\n        byte[] b = new byte[4];\n\n        try {\n            b[0] = (byte)Integer.parseInt(conv.substring(0, 2), 16);\n            b[1] = (byte)Integer.parseInt(conv.substring(2, 4), 16);\n            b[2] = (byte)Integer.parseInt(conv.substring(4, 6), 16);\n            b[3] = (byte)Integer.parseInt(conv.substring(6, 8), 16);\n        }\n        catch (NumberFormatException e) {\n            fail(\"Conversion of bytes to hex string failed - \"+e.getMessage());\n        }\n\n        assertArrayEquals(\"Conversion of bytes to hex string failed\",\n                          rand, b);\n    }", "signature": "void testBytesToHex()", "full_signature": "@Test public void testBytesToHex()", "class_method_signature": "ConvertTest.testBytesToHex()", "testcase": true, "constructor": false, "invocations": ["nextBytes", "bytesToHex", "assertTrue", "length", "parseInt", "substring", "parseInt", "substring", "parseInt", "substring", "parseInt", "substring", "fail", "getMessage", "assertArrayEquals"]}, "focal_class": {"identifier": "Convert", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final char[] hexArray = \"0123456789ABCDEF\".toCharArray();", "modifier": "private static final", "type": "char[]", "declarator": "hexArray = \"0123456789ABCDEF\".toCharArray()", "var_name": "hexArray"}], "methods": [{"identifier": "bytesToHex", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "String", "signature": "String bytesToHex(byte[] bytes)", "full_signature": "public static String bytesToHex(byte[] bytes)", "class_method_signature": "Convert.bytesToHex(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "strToBytes", "parameters": "(String str)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] strToBytes(String str)", "full_signature": "public static byte[] strToBytes(String str)", "class_method_signature": "Convert.strToBytes(String str)", "testcase": false, "constructor": false}, {"identifier": "longToBytes", "parameters": "(long val)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] longToBytes(long val)", "full_signature": "public static byte[] longToBytes(long val)", "class_method_signature": "Convert.longToBytes(long val)", "testcase": false, "constructor": false}, {"identifier": "getNthBit", "parameters": "(byte[] arr, int offset)", "modifiers": "public static", "return": "boolean", "signature": "boolean getNthBit(byte[] arr, int offset)", "full_signature": "public static boolean getNthBit(byte[] arr, int offset)", "class_method_signature": "Convert.getNthBit(byte[] arr, int offset)", "testcase": false, "constructor": false}, {"identifier": "getPrefixBytes", "parameters": "(byte[] arr)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getPrefixBytes(byte[] arr)", "full_signature": "public static byte[] getPrefixBytes(byte[] arr)", "class_method_signature": "Convert.getPrefixBytes(byte[] arr)", "testcase": false, "constructor": false}], "file": "util/src/main/java/org/coniks/util/Convert.java"}, "focal_method": {"identifier": "bytesToHex", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "String", "body": "public static String bytesToHex(byte[] bytes) {\n        char[] hexChars = new char[bytes.length * 2];\n        for ( int j = 0; j < bytes.length; j++ ) {\n            int v = bytes[j] & 0xFF;\n            hexChars[j * 2] = hexArray[v >>> 4];\n            hexChars[j * 2 + 1] = hexArray[v & 0x0F];\n        }\n        return new String(hexChars);\n    }", "signature": "String bytesToHex(byte[] bytes)", "full_signature": "public static String bytesToHex(byte[] bytes)", "class_method_signature": "Convert.bytesToHex(byte[] bytes)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 34706545, "url": "https://github.com/coniks-sys/coniks-java", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 60, "size": 2990, "license": "licensed"}}