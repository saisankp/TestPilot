{"test_class": {"identifier": "DefaultXMLEntityResolverTest", "superclass": "extends AbstractTestCase", "interfaces": "", "fields": [{"original_string": "private DefaultXMLEntityResolver resolver;", "modifier": "private", "type": "DefaultXMLEntityResolver", "declarator": "resolver", "var_name": "resolver"}], "file": "core/inputoutput/src/test/java/org/arakhne/afc/inputoutput/xml/DefaultXMLEntityResolverTest.java"}, "test_case": {"identifier": "resolveEntityStringString_resourceUrl", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void resolveEntityStringString_resourceUrl() throws Exception {\n\t\tURL resource = Resources.getResource(getClass(), \"xmlResource.txt\"); //$NON-NLS-1$\n\t\tInputSource src = this.resolver.resolveEntity(null, resource.toString());\n\t\tassertNotNull(src);\n\t\tassertNotNull(src.getByteStream());\n\t}", "signature": "void resolveEntityStringString_resourceUrl()", "full_signature": "@Test public void resolveEntityStringString_resourceUrl()", "class_method_signature": "DefaultXMLEntityResolverTest.resolveEntityStringString_resourceUrl()", "testcase": true, "constructor": false, "invocations": ["getResource", "getClass", "resolveEntity", "toString", "assertNotNull", "assertNotNull", "getByteStream"]}, "focal_class": {"identifier": "DefaultXMLEntityResolver", "superclass": "", "interfaces": "implements EntityResolver", "fields": [{"original_string": "private final URL searchPath;", "modifier": "private final", "type": "URL", "declarator": "searchPath", "var_name": "searchPath"}, {"original_string": "private boolean emptyExternalResource;", "modifier": "private", "type": "boolean", "declarator": "emptyExternalResource", "var_name": "emptyExternalResource"}], "methods": [{"identifier": "DefaultXMLEntityResolver", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultXMLEntityResolver()", "full_signature": "public  DefaultXMLEntityResolver()", "class_method_signature": "DefaultXMLEntityResolver.DefaultXMLEntityResolver()", "testcase": false, "constructor": true}, {"identifier": "DefaultXMLEntityResolver", "parameters": "(File searchPath)", "modifiers": "public", "return": "", "signature": " DefaultXMLEntityResolver(File searchPath)", "full_signature": "public  DefaultXMLEntityResolver(File searchPath)", "class_method_signature": "DefaultXMLEntityResolver.DefaultXMLEntityResolver(File searchPath)", "testcase": false, "constructor": true}, {"identifier": "DefaultXMLEntityResolver", "parameters": "(URL searchPath)", "modifiers": "public", "return": "", "signature": " DefaultXMLEntityResolver(URL searchPath)", "full_signature": "public  DefaultXMLEntityResolver(URL searchPath)", "class_method_signature": "DefaultXMLEntityResolver.DefaultXMLEntityResolver(URL searchPath)", "testcase": false, "constructor": true}, {"identifier": "DefaultXMLEntityResolver", "parameters": "(boolean assumeEmptyExternalResource)", "modifiers": "public", "return": "", "signature": " DefaultXMLEntityResolver(boolean assumeEmptyExternalResource)", "full_signature": "public  DefaultXMLEntityResolver(boolean assumeEmptyExternalResource)", "class_method_signature": "DefaultXMLEntityResolver.DefaultXMLEntityResolver(boolean assumeEmptyExternalResource)", "testcase": false, "constructor": true}, {"identifier": "DefaultXMLEntityResolver", "parameters": "(File searchPath, boolean assumeEmptyExternalResource)", "modifiers": "public", "return": "", "signature": " DefaultXMLEntityResolver(File searchPath, boolean assumeEmptyExternalResource)", "full_signature": "public  DefaultXMLEntityResolver(File searchPath, boolean assumeEmptyExternalResource)", "class_method_signature": "DefaultXMLEntityResolver.DefaultXMLEntityResolver(File searchPath, boolean assumeEmptyExternalResource)", "testcase": false, "constructor": true}, {"identifier": "DefaultXMLEntityResolver", "parameters": "(URL searchPath, boolean assumeEmptyExternalResource)", "modifiers": "public", "return": "", "signature": " DefaultXMLEntityResolver(URL searchPath, boolean assumeEmptyExternalResource)", "full_signature": "public  DefaultXMLEntityResolver(URL searchPath, boolean assumeEmptyExternalResource)", "class_method_signature": "DefaultXMLEntityResolver.DefaultXMLEntityResolver(URL searchPath, boolean assumeEmptyExternalResource)", "testcase": false, "constructor": true}, {"identifier": "getInputSourceFromSystemUrl", "parameters": "(URL systemUrl)", "modifiers": "private static", "return": "InputSource", "signature": "InputSource getInputSourceFromSystemUrl(URL systemUrl)", "full_signature": "private static InputSource getInputSourceFromSystemUrl(URL systemUrl)", "class_method_signature": "DefaultXMLEntityResolver.getInputSourceFromSystemUrl(URL systemUrl)", "testcase": false, "constructor": false}, {"identifier": "getInputSourceFromResources", "parameters": "(URL systemUrl, String systemId, URL containerPath)", "modifiers": "private static", "return": "InputSource", "signature": "InputSource getInputSourceFromResources(URL systemUrl, String systemId, URL containerPath)", "full_signature": "private static InputSource getInputSourceFromResources(URL systemUrl, String systemId, URL containerPath)", "class_method_signature": "DefaultXMLEntityResolver.getInputSourceFromResources(URL systemUrl, String systemId, URL containerPath)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(String systemId, URL containerPath)", "modifiers": "private static", "return": "InputSource", "signature": "InputSource search(String systemId, URL containerPath)", "full_signature": "private static InputSource search(String systemId, URL containerPath)", "class_method_signature": "DefaultXMLEntityResolver.search(String systemId, URL containerPath)", "testcase": false, "constructor": false}, {"identifier": "resolveEntity", "parameters": "(String publicId, String systemId)", "modifiers": "@Override public", "return": "InputSource", "signature": "InputSource resolveEntity(String publicId, String systemId)", "full_signature": "@Override public InputSource resolveEntity(String publicId, String systemId)", "class_method_signature": "DefaultXMLEntityResolver.resolveEntity(String publicId, String systemId)", "testcase": false, "constructor": false}], "file": "core/inputoutput/src/main/java/org/arakhne/afc/inputoutput/xml/DefaultXMLEntityResolver.java"}, "focal_method": {"identifier": "resolveEntity", "parameters": "(String publicId, String systemId)", "modifiers": "@Override public", "return": "InputSource", "body": "@Override\n\tpublic InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException {\n\t\tif (systemId != null && !\"\".equals(systemId)) { //$NON-NLS-1$\n\t\t\tInputSource is = search(systemId, null);\n\t\t\tif (is != null) {\n\t\t\t\treturn is;\n\t\t\t}\n\n\t\t\tif (this.searchPath != null) {\n\t\t\t\tis = search(systemId, this.searchPath);\n\t\t\t\tif (is != null) {\n\t\t\t\t\treturn is;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.emptyExternalResource) {\n\t\t\treturn new InputSource(new ByteArrayInputStream(new byte[0]));\n\t\t}\n\n\t\treturn null;\n\t}", "signature": "InputSource resolveEntity(String publicId, String systemId)", "full_signature": "@Override public InputSource resolveEntity(String publicId, String systemId)", "class_method_signature": "DefaultXMLEntityResolver.resolveEntity(String publicId, String systemId)", "testcase": false, "constructor": false, "invocations": ["equals", "search", "search"]}, "repository": {"repo_id": 9714608, "url": "https://github.com/gallandarakhneorg/afc", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 12, "size": 19091, "license": "licensed"}}