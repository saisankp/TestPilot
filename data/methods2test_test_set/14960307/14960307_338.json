{"test_class": {"identifier": "EnvironmentUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(EnvironmentUtilTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(EnvironmentUtilTest.class)", "var_name": "logger"}], "file": "ch-commons-util/src/test/java/com/cloudhopper/commons/util/EnvironmentUtilTest.java"}, "test_case": {"identifier": "splitHostFQDN", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void splitHostFQDN() throws Exception {\n        String[] result = EnvironmentUtil.splitHostFQDN(\"joelauer-02\");\n        Assert.assertEquals(\"joelauer-02\", result[0]);\n        Assert.assertEquals(null, result[1]);\n\n        result = EnvironmentUtil.splitHostFQDN(\"joelauer-02.\");\n        Assert.assertEquals(\"joelauer-02\", result[0]);\n        Assert.assertEquals(null, result[1]);\n\n        result = EnvironmentUtil.splitHostFQDN(\"joelauer-02.c\");\n        Assert.assertEquals(\"joelauer-02\", result[0]);\n        Assert.assertEquals(\"c\", result[1]);\n\n        result = EnvironmentUtil.splitHostFQDN(null);\n        Assert.assertEquals(null, result[0]);\n        Assert.assertEquals(null, result[1]);\n\n        result = EnvironmentUtil.splitHostFQDN(\"\");\n        Assert.assertEquals(null, result[0]);\n        Assert.assertEquals(null, result[1]);\n\n        result = EnvironmentUtil.splitHostFQDN(\".\");\n        Assert.assertEquals(\"\", result[0]);\n        Assert.assertEquals(null, result[1]);\n    }", "signature": "void splitHostFQDN()", "full_signature": "@Test public void splitHostFQDN()", "class_method_signature": "EnvironmentUtilTest.splitHostFQDN()", "testcase": true, "constructor": false, "invocations": ["splitHostFQDN", "assertEquals", "assertEquals", "splitHostFQDN", "assertEquals", "assertEquals", "splitHostFQDN", "assertEquals", "assertEquals", "splitHostFQDN", "assertEquals", "assertEquals", "splitHostFQDN", "assertEquals", "assertEquals", "splitHostFQDN", "assertEquals", "assertEquals"]}, "focal_class": {"identifier": "EnvironmentUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String HOST_NAME = \"HOST_NAME\";", "modifier": "public static final", "type": "String", "declarator": "HOST_NAME = \"HOST_NAME\"", "var_name": "HOST_NAME"}, {"original_string": "public static final String HOST_DOMAIN = \"HOST_DOMAIN\";", "modifier": "public static final", "type": "String", "declarator": "HOST_DOMAIN = \"HOST_DOMAIN\"", "var_name": "HOST_DOMAIN"}, {"original_string": "public static final String HOST_FQDN = \"HOST_FQDN\";", "modifier": "public static final", "type": "String", "declarator": "HOST_FQDN = \"HOST_FQDN\"", "var_name": "HOST_FQDN"}], "methods": [{"identifier": "createCommonSystemProperties", "parameters": "()", "modifiers": "public static", "return": "Properties", "signature": "Properties createCommonSystemProperties()", "full_signature": "public static Properties createCommonSystemProperties()", "class_method_signature": "EnvironmentUtil.createCommonSystemProperties()", "testcase": false, "constructor": false}, {"identifier": "getHostFQDN", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getHostFQDN()", "full_signature": "public static String getHostFQDN()", "class_method_signature": "EnvironmentUtil.getHostFQDN()", "testcase": false, "constructor": false}, {"identifier": "splitHostFQDN", "parameters": "(String fqdn)", "modifiers": "public static", "return": "String[]", "signature": "String[] splitHostFQDN(String fqdn)", "full_signature": "public static String[] splitHostFQDN(String fqdn)", "class_method_signature": "EnvironmentUtil.splitHostFQDN(String fqdn)", "testcase": false, "constructor": false}], "file": "ch-commons-util/src/main/java/com/cloudhopper/commons/util/EnvironmentUtil.java"}, "focal_method": {"identifier": "splitHostFQDN", "parameters": "(String fqdn)", "modifiers": "public static", "return": "String[]", "body": "public static String[] splitHostFQDN(String fqdn) {\n        String[] result = new String[2];\n\n        if (StringUtil.isEmpty(fqdn)) {\n            return result;\n        }\n\n        // try to determine the domain name\n        int pos = fqdn.indexOf('.');\n        if (pos >= 0) {\n            result[0] = fqdn.substring(0, pos);\n            if (pos+1 < fqdn.length()) {\n                result[1] = fqdn.substring(pos+1);\n            }\n        } else {\n            // entire string is the host name\n            result[0] = fqdn;\n        }\n\n        return result;\n    }", "signature": "String[] splitHostFQDN(String fqdn)", "full_signature": "public static String[] splitHostFQDN(String fqdn)", "class_method_signature": "EnvironmentUtil.splitHostFQDN(String fqdn)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "indexOf", "substring", "length", "substring"]}, "repository": {"repo_id": 14960307, "url": "https://github.com/twitter/cloudhopper-commons", "language": "Java", "is_fork": false, "fork_count": 40, "stargazer_count": 36, "size": 6452, "license": "licensed"}}