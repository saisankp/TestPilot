{"test_class": {"identifier": "KeyStoreImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public ExpectedException expectedEx = ExpectedException.none();", "modifier": "@Rule\n    public", "type": "ExpectedException", "declarator": "expectedEx = ExpectedException.none()", "var_name": "expectedEx"}], "file": "kin-sdk/kin-sdk-lib/src/test/java/kin/sdk/KeyStoreImplTest.java"}, "test_case": {"identifier": "deleteAccount", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void deleteAccount() throws Exception {\n        KeyStoreImpl keyStore = new KeyStoreImpl(new FakeStore(), new FakeBackupRestore());\n        KeyPair account1 = keyStore.newAccount();\n        KeyPair keyPair = keyStore.newAccount();\n        keyStore.deleteAccount(keyPair.getAccountId());\n\n        List<KeyPair> accounts = keyStore.loadAccounts();\n        assertEquals(1, accounts.size());\n        assertEquals(String.valueOf(account1.getSecretSeed()), String.valueOf(accounts.get(0).getSecretSeed()));\n    }", "signature": "void deleteAccount()", "full_signature": "@Test public void deleteAccount()", "class_method_signature": "KeyStoreImplTest.deleteAccount()", "testcase": true, "constructor": false, "invocations": ["newAccount", "newAccount", "deleteAccount", "getAccountId", "loadAccounts", "assertEquals", "size", "assertEquals", "valueOf", "getSecretSeed", "valueOf", "getSecretSeed", "get"]}, "focal_class": {"identifier": "KeyStoreImpl", "superclass": "", "interfaces": "implements KeyStore", "fields": [{"original_string": "static final String ENCRYPTION_VERSION_NAME = \"none\";", "modifier": "static final", "type": "String", "declarator": "ENCRYPTION_VERSION_NAME = \"none\"", "var_name": "ENCRYPTION_VERSION_NAME"}, {"original_string": "static final String STORE_KEY_ACCOUNTS = \"accounts\";", "modifier": "static final", "type": "String", "declarator": "STORE_KEY_ACCOUNTS = \"accounts\"", "var_name": "STORE_KEY_ACCOUNTS"}, {"original_string": "static final String VERSION_KEY = \"encryptor_ver\";", "modifier": "static final", "type": "String", "declarator": "VERSION_KEY = \"encryptor_ver\"", "var_name": "VERSION_KEY"}, {"original_string": "private static final String JSON_KEY_ACCOUNTS_ARRAY = \"accounts\";", "modifier": "private static final", "type": "String", "declarator": "JSON_KEY_ACCOUNTS_ARRAY = \"accounts\"", "var_name": "JSON_KEY_ACCOUNTS_ARRAY"}, {"original_string": "private static final String JSON_KEY_PUBLIC_KEY = \"public_key\";", "modifier": "private static final", "type": "String", "declarator": "JSON_KEY_PUBLIC_KEY = \"public_key\"", "var_name": "JSON_KEY_PUBLIC_KEY"}, {"original_string": "private static final String JSON_KEY_ENCRYPTED_SEED = \"seed\";", "modifier": "private static final", "type": "String", "declarator": "JSON_KEY_ENCRYPTED_SEED = \"seed\"", "var_name": "JSON_KEY_ENCRYPTED_SEED"}, {"original_string": "private final Store store;", "modifier": "private final", "type": "Store", "declarator": "store", "var_name": "store"}, {"original_string": "private final BackupRestore backupRestore;", "modifier": "private final", "type": "BackupRestore", "declarator": "backupRestore", "var_name": "backupRestore"}], "methods": [{"identifier": "KeyStoreImpl", "parameters": "(@NonNull Store store, @NonNull BackupRestore backupRestore)", "modifiers": "", "return": "", "signature": " KeyStoreImpl(@NonNull Store store, @NonNull BackupRestore backupRestore)", "full_signature": "  KeyStoreImpl(@NonNull Store store, @NonNull BackupRestore backupRestore)", "class_method_signature": "KeyStoreImpl.KeyStoreImpl(@NonNull Store store, @NonNull BackupRestore backupRestore)", "testcase": false, "constructor": true}, {"identifier": "loadAccounts", "parameters": "()", "modifiers": "@NonNull @Override public", "return": "List<KeyPair>", "signature": "List<KeyPair> loadAccounts()", "full_signature": "@NonNull @Override public List<KeyPair> loadAccounts()", "class_method_signature": "KeyStoreImpl.loadAccounts()", "testcase": false, "constructor": false}, {"identifier": "loadJsonArray", "parameters": "()", "modifiers": "private", "return": "JSONArray", "signature": "JSONArray loadJsonArray()", "full_signature": "private JSONArray loadJsonArray()", "class_method_signature": "KeyStoreImpl.loadJsonArray()", "testcase": false, "constructor": false}, {"identifier": "deleteAccount", "parameters": "(String publicAddress)", "modifiers": "@Override public", "return": "void", "signature": "void deleteAccount(String publicAddress)", "full_signature": "@Override public void deleteAccount(String publicAddress)", "class_method_signature": "KeyStoreImpl.deleteAccount(String publicAddress)", "testcase": false, "constructor": false}, {"identifier": "newAccount", "parameters": "()", "modifiers": "@Override public", "return": "KeyPair", "signature": "KeyPair newAccount()", "full_signature": "@Override public KeyPair newAccount()", "class_method_signature": "KeyStoreImpl.newAccount()", "testcase": false, "constructor": false}, {"identifier": "addKeyPairToStorage", "parameters": "(KeyPair newKeyPair)", "modifiers": "protected", "return": "KeyPair", "signature": "KeyPair addKeyPairToStorage(KeyPair newKeyPair)", "full_signature": "protected KeyPair addKeyPairToStorage(KeyPair newKeyPair)", "class_method_signature": "KeyStoreImpl.addKeyPairToStorage(KeyPair newKeyPair)", "testcase": false, "constructor": false}, {"identifier": "importAccount", "parameters": "(@NonNull String json, @NonNull String passphrase)", "modifiers": "@Override public", "return": "KeyPair", "signature": "KeyPair importAccount(@NonNull String json, @NonNull String passphrase)", "full_signature": "@Override public KeyPair importAccount(@NonNull String json, @NonNull String passphrase)", "class_method_signature": "KeyStoreImpl.importAccount(@NonNull String json, @NonNull String passphrase)", "testcase": false, "constructor": false}, {"identifier": "addKeyPairToAccountsJson", "parameters": "(@NonNull String encryptedSeed, @NonNull String accountId)", "modifiers": "private", "return": "JSONObject", "signature": "JSONObject addKeyPairToAccountsJson(@NonNull String encryptedSeed, @NonNull String accountId)", "full_signature": "private JSONObject addKeyPairToAccountsJson(@NonNull String encryptedSeed, @NonNull String accountId)", "class_method_signature": "KeyStoreImpl.addKeyPairToAccountsJson(@NonNull String encryptedSeed, @NonNull String accountId)", "testcase": false, "constructor": false}, {"identifier": "clearAllAccounts", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void clearAllAccounts()", "full_signature": "@Override public void clearAllAccounts()", "class_method_signature": "KeyStoreImpl.clearAllAccounts()", "testcase": false, "constructor": false}], "file": "kin-sdk/kin-sdk-lib/src/main/java/kin/sdk/KeyStoreImpl.java"}, "focal_method": {"identifier": "deleteAccount", "parameters": "(String publicAddress)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void deleteAccount(String publicAddress) throws DeleteAccountException {\n        JSONObject json = new JSONObject();\n        try {\n            JSONArray jsonArray = loadJsonArray();\n            if (jsonArray != null) {\n                JSONArray newJsonArray = new JSONArray();\n                for (int i = 0; i < jsonArray.length(); i++) {\n                    Object account = jsonArray.get(i);\n                    if (!((JSONObject) account).get(JSON_KEY_PUBLIC_KEY).equals(publicAddress)) {\n                        newJsonArray.put(account);\n                    }\n                }\n                json.put(JSON_KEY_ACCOUNTS_ARRAY, newJsonArray);\n            }\n        } catch (JSONException e) {\n            throw new DeleteAccountException(e);\n        }\n        store.saveString(STORE_KEY_ACCOUNTS, json.toString());\n    }", "signature": "void deleteAccount(String publicAddress)", "full_signature": "@Override public void deleteAccount(String publicAddress)", "class_method_signature": "KeyStoreImpl.deleteAccount(String publicAddress)", "testcase": false, "constructor": false, "invocations": ["loadJsonArray", "length", "get", "equals", "get", "put", "put", "saveString", "toString"]}, "repository": {"repo_id": 156408389, "url": "https://github.com/kinecosystem/kin-sdk-android", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 9, "size": 3232, "license": "licensed"}}