{"test_class": {"identifier": "NotificationColorDecoratorTest", "superclass": "extends BaseNotificationDecoratorTest<NotificationColorDecorator>", "interfaces": "", "fields": [], "file": "sdk-libs/halo-notifications/src/test/java/com/mobgen/halo/android/notifications/decorator/NotificationColorDecoratorTest.java"}, "test_case": {"identifier": "noColorSetTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void noColorSetTest() {\n        final boolean[] marker = new boolean[1];\n        Bundle bundle = BundleTestUtils.builder().build();\n        when(getBuilder().setColor(any(Integer.class))).then(new Answer<Object>() {\n            @Override\n            public Object answer(InvocationOnMock invocation) throws Throwable {\n                marker[0] = true;\n                return null;\n            }\n        });\n        getDecorator().decorate(getBuilder(), bundle);\n        Assert.assertFalse(marker[0]);\n    }", "signature": "void noColorSetTest()", "full_signature": "@Test public void noColorSetTest()", "class_method_signature": "NotificationColorDecoratorTest.noColorSetTest()", "testcase": true, "constructor": false, "invocations": ["build", "builder", "then", "when", "setColor", "getBuilder", "any", "decorate", "getDecorator", "getBuilder", "assertFalse"]}, "focal_class": {"identifier": "NotificationColorDecorator", "superclass": "extends HaloNotificationDecorator", "interfaces": "", "fields": [], "methods": [{"identifier": "NotificationColorDecorator", "parameters": "(HaloNotificationDecorator decorator)", "modifiers": "public", "return": "", "signature": " NotificationColorDecorator(HaloNotificationDecorator decorator)", "full_signature": "public  NotificationColorDecorator(HaloNotificationDecorator decorator)", "class_method_signature": "NotificationColorDecorator.NotificationColorDecorator(HaloNotificationDecorator decorator)", "testcase": false, "constructor": true}, {"identifier": "decorate", "parameters": "(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle)", "modifiers": "@Override public", "return": "NotificationCompat.Builder", "signature": "NotificationCompat.Builder decorate(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle)", "full_signature": "@Override public NotificationCompat.Builder decorate(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle)", "class_method_signature": "NotificationColorDecorator.decorate(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle)", "testcase": false, "constructor": false}], "file": "sdk-libs/halo-notifications/src/main/java/com/mobgen/halo/android/notifications/decorator/NotificationColorDecorator.java"}, "focal_method": {"identifier": "decorate", "parameters": "(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle)", "modifiers": "@Override public", "return": "NotificationCompat.Builder", "body": "@Override\n    public NotificationCompat.Builder decorate(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle) {\n        String color = bundle.getString(\"color\");\n        if (!TextUtils.isEmpty(color)) {\n            builder.setColor(HaloUtils.getArgb(color));\n        }\n        return chain(builder, bundle);\n    }", "signature": "NotificationCompat.Builder decorate(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle)", "full_signature": "@Override public NotificationCompat.Builder decorate(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle)", "class_method_signature": "NotificationColorDecorator.decorate(@NonNull NotificationCompat.Builder builder, @NonNull Bundle bundle)", "testcase": false, "constructor": false, "invocations": ["getString", "isEmpty", "setColor", "getArgb", "chain"]}, "repository": {"repo_id": 72189814, "url": "https://github.com/mobgen/halo-android", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 3343, "license": "licensed"}}