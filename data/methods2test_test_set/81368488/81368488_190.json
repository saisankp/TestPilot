{"test_class": {"identifier": "MediaButtonTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    GazeIndicator progressIndicator;", "modifier": "@Mock", "type": "GazeIndicator", "declarator": "progressIndicator", "var_name": "progressIndicator"}], "file": "gazeplay-games/src/test/java/net/gazeplay/games/mediaPlayer/MediaButtonTest.java"}, "test_case": {"identifier": "shouldSetUpGraphicForMediaButtonWithMediaFileSetUpWithImagePath", "parameters": "()", "modifiers": "@Test", "return": "void", "body": "@Test\n    void shouldSetUpGraphicForMediaButtonWithMediaFileSetUpWithImagePath() {\n        MediaButton mediaButton = new MediaButton(500, 500);\n        MediaFile mediaFile = new MediaFile(\"URL\", \"https://github.com/GazePlay/GazePlay\", \"gazeplayTest\", \"src/test/resources/images/blue/blue.jpg\");\n        mediaButton.setMediaFile(mediaFile);\n        mediaButton.setupImage();\n        ImageView graphicImageView = (ImageView) mediaButton.getButton().getGraphic();\n        Assertions.assertTrue(graphicImageView.getImage().getUrl().contains(\"blue.jpg\"));\n    }", "signature": "void shouldSetUpGraphicForMediaButtonWithMediaFileSetUpWithImagePath()", "full_signature": "@Test void shouldSetUpGraphicForMediaButtonWithMediaFileSetUpWithImagePath()", "class_method_signature": "MediaButtonTest.shouldSetUpGraphicForMediaButtonWithMediaFileSetUpWithImagePath()", "testcase": true, "constructor": false, "invocations": ["setMediaFile", "setupImage", "getGraphic", "getButton", "assertTrue", "contains", "getUrl", "getImage"]}, "focal_class": {"identifier": "MediaButton", "superclass": "extends StackPaneButton", "interfaces": "", "fields": [{"original_string": "public static final EventHandler<Event> emptyEvent = e -> {\n    };", "modifier": "public static final", "type": "EventHandler<Event>", "declarator": "emptyEvent = e -> {\n    }", "var_name": "emptyEvent"}, {"original_string": "@Getter\n    private EventHandler<Event> enterEvent = emptyEvent;", "modifier": "@Getter\n    private", "type": "EventHandler<Event>", "declarator": "enterEvent = emptyEvent", "var_name": "enterEvent"}, {"original_string": "@Getter\n    private EventHandler<Event> exitEvent = emptyEvent;", "modifier": "@Getter\n    private", "type": "EventHandler<Event>", "declarator": "exitEvent = emptyEvent", "var_name": "exitEvent"}, {"original_string": "@Getter\n    private EventHandler<Event> clickEvent = emptyEvent;", "modifier": "@Getter\n    private", "type": "EventHandler<Event>", "declarator": "clickEvent = emptyEvent", "var_name": "clickEvent"}, {"original_string": "@Getter\n    @Setter\n    private MediaFile mediaFile;", "modifier": "@Getter\n    @Setter\n    private", "type": "MediaFile", "declarator": "mediaFile", "var_name": "mediaFile"}], "methods": [{"identifier": "MediaButton", "parameters": "(double width, double height)", "modifiers": "", "return": "", "signature": " MediaButton(double width, double height)", "full_signature": "  MediaButton(double width, double height)", "class_method_signature": "MediaButton.MediaButton(double width, double height)", "testcase": false, "constructor": true}, {"identifier": "setupImage", "parameters": "()", "modifiers": "", "return": "void", "signature": "void setupImage()", "full_signature": " void setupImage()", "class_method_signature": "MediaButton.setupImage()", "testcase": false, "constructor": false}, {"identifier": "setupEvent", "parameters": "(EventHandler<ActionEvent> newMediaEvent, GazeIndicator progressIndicator)", "modifiers": "", "return": "void", "signature": "void setupEvent(EventHandler<ActionEvent> newMediaEvent, GazeIndicator progressIndicator)", "full_signature": " void setupEvent(EventHandler<ActionEvent> newMediaEvent, GazeIndicator progressIndicator)", "class_method_signature": "MediaButton.setupEvent(EventHandler<ActionEvent> newMediaEvent, GazeIndicator progressIndicator)", "testcase": false, "constructor": false}], "file": "gazeplay-games/src/main/java/net/gazeplay/games/mediaPlayer/MediaButton.java"}, "focal_method": {"identifier": "setupImage", "parameters": "()", "modifiers": "", "return": "void", "body": "void setupImage() {\n        if (mediaFile != null && mediaFile.getImagepath() != null) {\n            final File f = new File(mediaFile.getImagepath());\n            final ImageView iv = new ImageView(new Image(f.toURI().toString()));\n            iv.setPreserveRatio(true);\n            iv.fitHeightProperty().bind(this.getButton().heightProperty().multiply(9.0 / 10.0));\n            iv.fitWidthProperty().bind(this.getButton().widthProperty().multiply(9.0 / 10.0));\n            this.getButton().setGraphic(iv);\n        } else {\n            this.getButton().setGraphic(null);\n        }\n    }", "signature": "void setupImage()", "full_signature": " void setupImage()", "class_method_signature": "MediaButton.setupImage()", "testcase": false, "constructor": false, "invocations": ["getImagepath", "getImagepath", "toString", "toURI", "setPreserveRatio", "bind", "fitHeightProperty", "multiply", "heightProperty", "getButton", "bind", "fitWidthProperty", "multiply", "widthProperty", "getButton", "setGraphic", "getButton", "setGraphic", "getButton"]}, "repository": {"repo_id": 81368488, "url": "https://github.com/GazePlay/GazePlay", "stars": 15, "created": "2/8/2017 7:39:08 PM +00:00", "updates": "2020-01-26T16:45:47+00:00", "fork": "False", "license": "licensed"}}