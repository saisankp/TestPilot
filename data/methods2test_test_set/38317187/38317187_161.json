{"test_class": {"identifier": "NamesResultProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String[] NAMES = new String[]{\n            \"management\",\n            \"private\",\n            \"public\",\n            \"unsecure\"\n    };", "modifier": "private static final", "type": "String[]", "declarator": "NAMES = new String[]{\n            \"management\",\n            \"private\",\n            \"public\",\n            \"unsecure\"\n    }", "var_name": "NAMES"}, {"original_string": "private ReadChildrenProcessor resultProcessor;", "modifier": "private", "type": "ReadChildrenProcessor", "declarator": "resultProcessor", "var_name": "resultProcessor"}, {"original_string": "private ModelNode nodes;", "modifier": "private", "type": "ModelNode", "declarator": "nodes", "var_name": "nodes"}], "file": "ballroom/src/test/java/org/jboss/hal/ballroom/autocomplete/NamesResultProcessorTest.java"}, "test_case": {"identifier": "nullQuery", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void nullQuery() throws Exception {\n        List<ReadChildrenResult> results = resultProcessor.processToModel(null, nodes);\n        assertTrue(results.isEmpty());\n    }", "signature": "void nullQuery()", "full_signature": "@Test public void nullQuery()", "class_method_signature": "NamesResultProcessorTest.nullQuery()", "testcase": true, "constructor": false, "invocations": ["processToModel", "assertTrue", "isEmpty"]}, "focal_class": {"identifier": "NamesResultProcessor", "superclass": "extends ReadChildrenProcessor", "interfaces": "implements ResultProcessor", "fields": [], "methods": [{"identifier": "processToModel", "parameters": "(final String query, final ModelNode nodes)", "modifiers": "@Override protected", "return": "List<ReadChildrenResult>", "signature": "List<ReadChildrenResult> processToModel(final String query, final ModelNode nodes)", "full_signature": "@Override protected List<ReadChildrenResult> processToModel(final String query, final ModelNode nodes)", "class_method_signature": "NamesResultProcessor.processToModel(final String query, final ModelNode nodes)", "testcase": false, "constructor": false}, {"identifier": "processToModel", "parameters": "(final String query, final CompositeResult compositeResult)", "modifiers": "@Override protected", "return": "List<ReadChildrenResult>", "signature": "List<ReadChildrenResult> processToModel(final String query, final CompositeResult compositeResult)", "full_signature": "@Override protected List<ReadChildrenResult> processToModel(final String query, final CompositeResult compositeResult)", "class_method_signature": "NamesResultProcessor.processToModel(final String query, final CompositeResult compositeResult)", "testcase": false, "constructor": false}], "file": "ballroom/src/main/java/org/jboss/hal/ballroom/autocomplete/NamesResultProcessor.java"}, "focal_method": {"identifier": "processToModel", "parameters": "(final String query, final ModelNode nodes)", "modifiers": "@Override protected", "return": "List<ReadChildrenResult>", "body": "@Override\n    protected List<ReadChildrenResult> processToModel(final String query, final ModelNode nodes) {\n        return nodes.asList().stream()\n                .map(node -> new ReadChildrenResult(node.asString()))\n                .filter(result -> !isNullOrEmpty(query) &&\n                        (SuggestHandler.SHOW_ALL_VALUE.equals(query) || result.name.contains(query)))\n                .sorted(Comparator.comparing(result -> result.name))\n                .collect(toList());\n    }", "signature": "List<ReadChildrenResult> processToModel(final String query, final ModelNode nodes)", "full_signature": "@Override protected List<ReadChildrenResult> processToModel(final String query, final ModelNode nodes)", "class_method_signature": "NamesResultProcessor.processToModel(final String query, final ModelNode nodes)", "testcase": false, "constructor": false, "invocations": ["collect", "sorted", "filter", "map", "stream", "asList", "asString", "isNullOrEmpty", "equals", "contains", "comparing", "toList"]}, "repository": {"repo_id": 38317187, "url": "https://github.com/hal/console", "stars": 34, "created": "6/30/2015 3:26:19 PM +00:00", "updates": "2020-01-26T16:25:43+00:00", "fork": "False", "license": "licensed"}}