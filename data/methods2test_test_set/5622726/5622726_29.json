{"test_class": {"identifier": "UrlValidatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "inputvalidation/src/test/java/com/switchfly/inputvalidation/validator/UrlValidatorTest.java"}, "test_case": {"identifier": "testExecute", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testExecute() throws Exception {\n\n        UrlValidator validator = new UrlValidator();\n\n        assertEquals(false, validator.execute(\"\"));\n        assertEquals(false, validator.execute(\" \"));\n        assertEquals(false, validator.execute(null));\n        assertEquals(true, validator.execute(\"http://www.foo.com/to/page.cfm?a=1&b=2#bar\"));\n        assertEquals(true, validator.execute(\"https://www.foo.com/to/page.cfm?a=1&b=2#bar\"));\n        assertEquals(true, validator.execute(\"/to/page.cfm?a=1&b=2#bar\"));\n        assertEquals(true, validator.execute(\"/to/page.cfm?a=%00%foo&b=2#bar\"));\n        assertEquals(false, validator.execute(\"/to/page.cfm?a=\u00fc&b=2#bar\"));\n        assertEquals(false, validator.execute(\"https://www.foo.com/to/page.cfm?a=\u00fc&b=2#bar\"));\n        assertEquals(false, validator.execute(\"https://www.foo.com/to/page.cfm?a=\u00fc&b=2#bar\"));\n    }", "signature": "void testExecute()", "full_signature": "@Test public void testExecute()", "class_method_signature": "UrlValidatorTest.testExecute()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute", "assertEquals", "execute"]}, "focal_class": {"identifier": "UrlValidator", "superclass": "extends Validator<String>", "interfaces": "", "fields": [], "methods": [{"identifier": "execute", "parameters": "(String content)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean execute(String content)", "full_signature": "@Override public boolean execute(String content)", "class_method_signature": "UrlValidator.execute(String content)", "testcase": false, "constructor": false}], "file": "inputvalidation/src/main/java/com/switchfly/inputvalidation/validator/UrlValidator.java"}, "focal_method": {"identifier": "execute", "parameters": "(String content)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean execute(String content) {\n        if (StringUtils.isBlank(content)) {\n            return false;\n        }\n        String[] schemes = {\"http\", \"https\"};\n        org.apache.commons.validator.UrlValidator urlValidator =\n            new org.apache.commons.validator.UrlValidator(schemes, org.apache.commons.validator.UrlValidator.ALLOW_2_SLASHES);\n\n        if (content.startsWith(\"http\")) {\n            return urlValidator.isValid(content);\n        }\n\n        return execute(\"http://www.mock.com/\" + content);\n    }", "signature": "boolean execute(String content)", "full_signature": "@Override public boolean execute(String content)", "class_method_signature": "UrlValidator.execute(String content)", "testcase": false, "constructor": false, "invocations": ["isBlank", "startsWith", "isValid", "execute"]}, "repository": {"repo_id": 5622726, "url": "https://github.com/switchfly/switchfly-java", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 5, "size": 752, "license": "licensed"}}