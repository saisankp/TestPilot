{"test_class": {"identifier": "UtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "owner/src/test/java/org/aeonbits/owner/util/UtilTest.java"}, "test_case": {"identifier": "testIgnoreAndReturnNull", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testIgnoreAndReturnNull() {\n        Object result = ignoreAndReturnNull();\n        assertNull(result);\n    }", "signature": "void testIgnoreAndReturnNull()", "full_signature": "@Test public void testIgnoreAndReturnNull()", "class_method_signature": "UtilTest.testIgnoreAndReturnNull()", "testcase": true, "constructor": false, "invocations": ["ignoreAndReturnNull", "assertNull"]}, "focal_class": {"identifier": "Util", "superclass": "", "interfaces": "", "fields": [{"original_string": "static TimeProvider timeProvider = new TimeProvider() {\n        public long getTime() {\n            return System.currentTimeMillis();\n        }\n    };", "modifier": "static", "type": "TimeProvider", "declarator": "timeProvider = new TimeProvider() {\n        public long getTime() {\n            return System.currentTimeMillis();\n        }\n    }", "var_name": "timeProvider"}, {"original_string": "static SystemProvider system = new SystemProvider() {\n        public String getProperty(String key) {\n            return System.getProperty(key);\n        }\n\n        public Map<String, String> getenv() {\n            return System.getenv();\n        }\n\n        public Properties getProperties() {\n            return (Properties) System.getProperties().clone();\n        }\n    };", "modifier": "static", "type": "SystemProvider", "declarator": "system = new SystemProvider() {\n        public String getProperty(String key) {\n            return System.getProperty(key);\n        }\n\n        public Map<String, String> getenv() {\n            return System.getenv();\n        }\n\n        public Properties getProperties() {\n            return (Properties) System.getProperties().clone();\n        }\n    }", "var_name": "system"}], "methods": [{"identifier": "Util", "parameters": "()", "modifiers": "private", "return": "", "signature": " Util()", "full_signature": "private  Util()", "class_method_signature": "Util.Util()", "testcase": false, "constructor": true}, {"identifier": "reverse", "parameters": "(List<T> src)", "modifiers": "public static", "return": "List<T>", "signature": "List<T> reverse(List<T> src)", "full_signature": "public static List<T> reverse(List<T> src)", "class_method_signature": "Util.reverse(List<T> src)", "testcase": false, "constructor": false}, {"identifier": "reverse", "parameters": "(T[] array)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "T[]", "signature": "T[] reverse(T[] array)", "full_signature": "@SuppressWarnings(\"unchecked\") public static T[] reverse(T[] array)", "class_method_signature": "Util.reverse(T[] array)", "testcase": false, "constructor": false}, {"identifier": "expandUserHome", "parameters": "(String text)", "modifiers": "public static", "return": "String", "signature": "String expandUserHome(String text)", "full_signature": "public static String expandUserHome(String text)", "class_method_signature": "Util.expandUserHome(String text)", "testcase": false, "constructor": false}, {"identifier": "getUserHome", "parameters": "()", "modifiers": "private static", "return": "String", "signature": "String getUserHome()", "full_signature": "private static String getUserHome()", "class_method_signature": "Util.getUserHome()", "testcase": false, "constructor": false}, {"identifier": "fixBackslashesToSlashes", "parameters": "(String path)", "modifiers": "public static", "return": "String", "signature": "String fixBackslashesToSlashes(String path)", "full_signature": "public static String fixBackslashesToSlashes(String path)", "class_method_signature": "Util.fixBackslashesToSlashes(String path)", "testcase": false, "constructor": false}, {"identifier": "fixSpacesToPercentTwenty", "parameters": "(String path)", "modifiers": "public static", "return": "String", "signature": "String fixSpacesToPercentTwenty(String path)", "full_signature": "public static String fixSpacesToPercentTwenty(String path)", "class_method_signature": "Util.fixSpacesToPercentTwenty(String path)", "testcase": false, "constructor": false}, {"identifier": "ignoreAndReturnNull", "parameters": "()", "modifiers": "public static", "return": "T", "signature": "T ignoreAndReturnNull()", "full_signature": "public static T ignoreAndReturnNull()", "class_method_signature": "Util.ignoreAndReturnNull()", "testcase": false, "constructor": false}, {"identifier": "ignore", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void ignore()", "full_signature": "public static void ignore()", "class_method_signature": "Util.ignore()", "testcase": false, "constructor": false}, {"identifier": "isFeatureDisabled", "parameters": "(Method method, DisableableFeature feature)", "modifiers": "public static", "return": "boolean", "signature": "boolean isFeatureDisabled(Method method, DisableableFeature feature)", "full_signature": "public static boolean isFeatureDisabled(Method method, DisableableFeature feature)", "class_method_signature": "Util.isFeatureDisabled(Method method, DisableableFeature feature)", "testcase": false, "constructor": false}, {"identifier": "isFeatureDisabled", "parameters": "(DisableableFeature feature, DisableFeature annotation)", "modifiers": "private static", "return": "boolean", "signature": "boolean isFeatureDisabled(DisableableFeature feature, DisableFeature annotation)", "full_signature": "private static boolean isFeatureDisabled(DisableableFeature feature, DisableFeature annotation)", "class_method_signature": "Util.isFeatureDisabled(DisableableFeature feature, DisableFeature annotation)", "testcase": false, "constructor": false}, {"identifier": "unsupported", "parameters": "(Throwable cause, String msg, Object... args)", "modifiers": "public static", "return": "UnsupportedOperationException", "signature": "UnsupportedOperationException unsupported(Throwable cause, String msg, Object... args)", "full_signature": "public static UnsupportedOperationException unsupported(Throwable cause, String msg, Object... args)", "class_method_signature": "Util.unsupported(Throwable cause, String msg, Object... args)", "testcase": false, "constructor": false}, {"identifier": "unsupported", "parameters": "(String msg, Object... args)", "modifiers": "public static", "return": "UnsupportedOperationException", "signature": "UnsupportedOperationException unsupported(String msg, Object... args)", "full_signature": "public static UnsupportedOperationException unsupported(String msg, Object... args)", "class_method_signature": "Util.unsupported(String msg, Object... args)", "testcase": false, "constructor": false}, {"identifier": "unreachableButCompilerNeedsThis", "parameters": "()", "modifiers": "public static", "return": "T", "signature": "T unreachableButCompilerNeedsThis()", "full_signature": "public static T unreachableButCompilerNeedsThis()", "class_method_signature": "Util.unreachableButCompilerNeedsThis()", "testcase": false, "constructor": false}, {"identifier": "asString", "parameters": "(Object result)", "modifiers": "public static", "return": "String", "signature": "String asString(Object result)", "full_signature": "public static String asString(Object result)", "class_method_signature": "Util.asString(Object result)", "testcase": false, "constructor": false}, {"identifier": "now", "parameters": "()", "modifiers": "public static", "return": "long", "signature": "long now()", "full_signature": "public static long now()", "class_method_signature": "Util.now()", "testcase": false, "constructor": false}, {"identifier": "fileFromURI", "parameters": "(URI uri)", "modifiers": "public static", "return": "File", "signature": "File fileFromURI(URI uri)", "full_signature": "public static File fileFromURI(URI uri)", "class_method_signature": "Util.fileFromURI(URI uri)", "testcase": false, "constructor": false}, {"identifier": "fileFromURI", "parameters": "(String uriSpec)", "modifiers": "public static", "return": "File", "signature": "File fileFromURI(String uriSpec)", "full_signature": "public static File fileFromURI(String uriSpec)", "class_method_signature": "Util.fileFromURI(String uriSpec)", "testcase": false, "constructor": false}, {"identifier": "eq", "parameters": "(Object o1, Object o2)", "modifiers": "public static", "return": "boolean", "signature": "boolean eq(Object o1, Object o2)", "full_signature": "public static boolean eq(Object o1, Object o2)", "class_method_signature": "Util.eq(Object o1, Object o2)", "testcase": false, "constructor": false}, {"identifier": "system", "parameters": "()", "modifiers": "public static", "return": "SystemProvider", "signature": "SystemProvider system()", "full_signature": "public static SystemProvider system()", "class_method_signature": "Util.system()", "testcase": false, "constructor": false}, {"identifier": "save", "parameters": "(File target, Properties p)", "modifiers": "public static", "return": "void", "signature": "void save(File target, Properties p)", "full_signature": "public static void save(File target, Properties p)", "class_method_signature": "Util.save(File target, Properties p)", "testcase": false, "constructor": false}, {"identifier": "isWindows", "parameters": "()", "modifiers": "private static", "return": "boolean", "signature": "boolean isWindows()", "full_signature": "private static boolean isWindows()", "class_method_signature": "Util.isWindows()", "testcase": false, "constructor": false}, {"identifier": "delete", "parameters": "(File target)", "modifiers": "public static", "return": "void", "signature": "void delete(File target)", "full_signature": "public static void delete(File target)", "class_method_signature": "Util.delete(File target)", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "(File target, Properties p)", "modifiers": "private static", "return": "void", "signature": "void store(File target, Properties p)", "full_signature": "private static void store(File target, Properties p)", "class_method_signature": "Util.store(File target, Properties p)", "testcase": false, "constructor": false}, {"identifier": "store", "parameters": "(OutputStream out, Properties p)", "modifiers": "private static", "return": "void", "signature": "void store(OutputStream out, Properties p)", "full_signature": "private static void store(OutputStream out, Properties p)", "class_method_signature": "Util.store(OutputStream out, Properties p)", "testcase": false, "constructor": false}, {"identifier": "saveJar", "parameters": "(File target, String entryName, Properties props)", "modifiers": "public static", "return": "void", "signature": "void saveJar(File target, String entryName, Properties props)", "full_signature": "public static void saveJar(File target, String entryName, Properties props)", "class_method_signature": "Util.saveJar(File target, String entryName, Properties props)", "testcase": false, "constructor": false}, {"identifier": "rename", "parameters": "(File source, File target)", "modifiers": "private static", "return": "void", "signature": "void rename(File source, File target)", "full_signature": "private static void rename(File source, File target)", "class_method_signature": "Util.rename(File source, File target)", "testcase": false, "constructor": false}, {"identifier": "storeJar", "parameters": "(File target, String entryName, Properties props)", "modifiers": "private static", "return": "void", "signature": "void storeJar(File target, String entryName, Properties props)", "full_signature": "private static void storeJar(File target, String entryName, Properties props)", "class_method_signature": "Util.storeJar(File target, String entryName, Properties props)", "testcase": false, "constructor": false}, {"identifier": "toBytes", "parameters": "(Properties props)", "modifiers": "private static", "return": "byte[]", "signature": "byte[] toBytes(Properties props)", "full_signature": "private static byte[] toBytes(Properties props)", "class_method_signature": "Util.toBytes(Properties props)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(Class<T> clazz)", "modifiers": "public static", "return": "T", "signature": "T newInstance(Class<T> clazz)", "full_signature": "public static T newInstance(Class<T> clazz)", "class_method_signature": "Util.newInstance(Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(Class<? extends T>[] classes, List<T> result)", "modifiers": "public static", "return": "List<T>", "signature": "List<T> newInstance(Class<? extends T>[] classes, List<T> result)", "full_signature": "public static List<T> newInstance(Class<? extends T>[] classes, List<T> result)", "class_method_signature": "Util.newInstance(Class<? extends T>[] classes, List<T> result)", "testcase": false, "constructor": false}], "file": "owner/src/main/java/org/aeonbits/owner/util/Util.java"}, "focal_method": {"identifier": "ignoreAndReturnNull", "parameters": "()", "modifiers": "public static", "return": "T", "body": "public static <T> T ignoreAndReturnNull() {\n        // the ignoreAndReturnNull method does absolutely nothing, but it helps to shut up warnings by pmd and other reporting tools\n        // complaining about empty catch methods.\n        return null;\n    }", "signature": "T ignoreAndReturnNull()", "full_signature": "public static T ignoreAndReturnNull()", "class_method_signature": "Util.ignoreAndReturnNull()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 7292204, "url": "https://github.com/lviggiano/owner", "stars": 723, "created": "12/23/2012 5:38:31 AM +00:00", "updates": "2020-01-21T03:13:31+00:00", "fork": "False", "license": "licensed"}}