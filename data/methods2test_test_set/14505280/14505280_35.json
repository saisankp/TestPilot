{"test_class": {"identifier": "GeocoderUtilServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final double DELTA = 1e-20;", "modifier": "private static final", "type": "double", "declarator": "DELTA = 1e-20", "var_name": "DELTA"}, {"original_string": "@Autowired\n\tprivate GeoService geoService;", "modifier": "@Autowired\n\tprivate", "type": "GeoService", "declarator": "geoService", "var_name": "geoService"}, {"original_string": "@Autowired\n\tprivate GeocoderUtilService geocoderUtilService;", "modifier": "@Autowired\n\tprivate", "type": "GeocoderUtilService", "declarator": "geocoderUtilService", "var_name": "geocoderUtilService"}], "file": "plugin/geocoder/geocoder/src/test/java/org/geomajas/plugin/geocoder/service/GeocoderUtilServiceTest.java"}, "test_case": {"identifier": "extendPointTest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void extendPointTest() throws Exception {\n\t\tCoordinateReferenceSystem crs;\n\t\tCoordinate coordinate;\n\t\tEnvelope envelope;\n\n\t\tcrs = geoService.getCrs(\"EPSG:900913\");\n\t\tcoordinate = new Coordinate(0, 0);\n\t\tenvelope = geocoderUtilService.extendPoint(coordinate, crs, 200, 100);\n\t\tAssert.assertEquals(-100.00000376900834, envelope.getMinX(), DELTA);\n\t\tAssert.assertEquals(-50.33697512339748, envelope.getMinY(), DELTA);\n\t\tAssert.assertEquals(100.00000376900834, envelope.getMaxX(), DELTA);\n\t\tAssert.assertEquals(50.33697512339748, envelope.getMaxY(), DELTA);\n\n\t\tcoordinate = new Coordinate(10000, 10000);\n\t\tenvelope = geocoderUtilService.extendPoint(coordinate, crs, 200, 100);\n\t\tAssert.assertEquals(9899.999874146251, envelope.getMinX(), DELTA);\n\t\tAssert.assertEquals(9949.6629648107, envelope.getMinY(), DELTA);\n\t\tAssert.assertEquals(10100.000125853749, envelope.getMaxX(), DELTA);\n\t\tAssert.assertEquals(10050.3370351893, envelope.getMaxY(), DELTA);\n\n\t\tcrs = geoService.getCrs(\"EPSG:4326\");\n\t\tcoordinate = new Coordinate(0, 0);\n\t\tenvelope = geocoderUtilService.extendPoint(coordinate, crs, 200, 100);\n\t\tAssert.assertEquals(-8.983152841199021E-4, envelope.getMinX(), DELTA);\n\t\tAssert.assertEquals(-4.5218473391466234E-4, envelope.getMinY(), DELTA);\n\t\tAssert.assertEquals(8.983152841199021E-4, envelope.getMaxX(), DELTA);\n\t\tAssert.assertEquals(4.5218473391466234E-4, envelope.getMaxY(), DELTA);\n\n\t\tcoordinate = new Coordinate(100, 50);\n\t\tenvelope = geocoderUtilService.extendPoint(coordinate, crs, 200, 100);\n\t\tAssert.assertEquals(99.99860521715158, envelope.getMinX(), DELTA);\n\t\tAssert.assertEquals(49.99955048109636, envelope.getMinY(), DELTA);\n\t\tAssert.assertEquals(100.00139478284842, envelope.getMaxX(), DELTA);\n\t\tAssert.assertEquals(50.00044951890364, envelope.getMaxY(), DELTA);\n\t}", "signature": "void extendPointTest()", "full_signature": "@Test public void extendPointTest()", "class_method_signature": "GeocoderUtilServiceTest.extendPointTest()", "testcase": true, "constructor": false, "invocations": ["getCrs", "extendPoint", "assertEquals", "getMinX", "assertEquals", "getMinY", "assertEquals", "getMaxX", "assertEquals", "getMaxY", "extendPoint", "assertEquals", "getMinX", "assertEquals", "getMinY", "assertEquals", "getMaxX", "assertEquals", "getMaxY", "getCrs", "extendPoint", "assertEquals", "getMinX", "assertEquals", "getMinY", "assertEquals", "getMaxX", "assertEquals", "getMaxY", "extendPoint", "assertEquals", "getMinX", "assertEquals", "getMinY", "assertEquals", "getMaxX", "assertEquals", "getMaxY"]}, "focal_class": {"identifier": "GeocoderUtilService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final double EXTEND_MAPUNIT_TEST_LENGTH = .1;", "modifier": "private static final", "type": "double", "declarator": "EXTEND_MAPUNIT_TEST_LENGTH = .1", "var_name": "EXTEND_MAPUNIT_TEST_LENGTH"}, {"original_string": "private static final double DISTANCE_PRECISION = .001;", "modifier": "private static final", "type": "double", "declarator": "DISTANCE_PRECISION = .001", "var_name": "DISTANCE_PRECISION"}, {"original_string": "private static final int EXTEND_MAX_ITERATIONS = 5;", "modifier": "private static final", "type": "int", "declarator": "EXTEND_MAX_ITERATIONS = 5", "var_name": "EXTEND_MAX_ITERATIONS"}, {"original_string": "@Autowired\n\tprivate GeoService geoService;", "modifier": "@Autowired\n\tprivate", "type": "GeoService", "declarator": "geoService", "var_name": "geoService"}], "methods": [{"identifier": "transform", "parameters": "(Envelope source, CoordinateReferenceSystem sourceCrs, CoordinateReferenceSystem targetCrs)", "modifiers": "public", "return": "Envelope", "signature": "Envelope transform(Envelope source, CoordinateReferenceSystem sourceCrs, CoordinateReferenceSystem targetCrs)", "full_signature": "public Envelope transform(Envelope source, CoordinateReferenceSystem sourceCrs, CoordinateReferenceSystem targetCrs)", "class_method_signature": "GeocoderUtilService.transform(Envelope source, CoordinateReferenceSystem sourceCrs, CoordinateReferenceSystem targetCrs)", "testcase": false, "constructor": false}, {"identifier": "extendPoint", "parameters": "(Coordinate coordinate, CoordinateReferenceSystem crs,\n\t\t\t\t\t\t\t\tdouble width, double height)", "modifiers": "public", "return": "Envelope", "signature": "Envelope extendPoint(Coordinate coordinate, CoordinateReferenceSystem crs,\n\t\t\t\t\t\t\t\tdouble width, double height)", "full_signature": "public Envelope extendPoint(Coordinate coordinate, CoordinateReferenceSystem crs,\n\t\t\t\t\t\t\t\tdouble width, double height)", "class_method_signature": "GeocoderUtilService.extendPoint(Coordinate coordinate, CoordinateReferenceSystem crs,\n\t\t\t\t\t\t\t\tdouble width, double height)", "testcase": false, "constructor": false}], "file": "plugin/geocoder/geocoder/src/main/java/org/geomajas/plugin/geocoder/service/GeocoderUtilService.java"}, "focal_method": {"identifier": "extendPoint", "parameters": "(Coordinate coordinate, CoordinateReferenceSystem crs,\n\t\t\t\t\t\t\t\tdouble width, double height)", "modifiers": "public", "return": "Envelope", "body": "public Envelope extendPoint(Coordinate coordinate, CoordinateReferenceSystem crs,\n\t\t\t\t\t\t\t\tdouble width, double height) throws GeomajasException {\n\t\tdouble halfCrsWidth = EXTEND_MAPUNIT_TEST_LENGTH;\n\t\tdouble halfCrsHeight = EXTEND_MAPUNIT_TEST_LENGTH;\n\t\tdouble x = coordinate.x;\n\t\tdouble y = coordinate.y;\n\t\tfor (int i = EXTEND_MAX_ITERATIONS; i > 0; i--) {\n\t\t\ttry {\n\t\t\t\tCoordinate test;\n\t\t\t\ttest = new Coordinate(x + halfCrsWidth, y);\n\t\t\t\tdouble deltaX = JTS.orthodromicDistance(coordinate, test, crs);\n\t\t\t\ttest = new Coordinate(x, y + halfCrsHeight);\n\t\t\t\tdouble deltaY = JTS.orthodromicDistance(coordinate, test, crs);\n\t\t\t\tif (Math.abs(deltaX - width / 2) < DISTANCE_PRECISION &&\n\t\t\t\t\t\tMath.abs(deltaY - height / 2) < DISTANCE_PRECISION) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\thalfCrsWidth = halfCrsWidth / deltaX * width / 2;\n\t\t\t\thalfCrsHeight = halfCrsHeight / deltaY * height / 2;\n\t\t\t} catch (TransformException te) {\n\t\t\t\tthrow new GeomajasException(te, ExceptionCode.GEOMETRY_TRANSFORMATION_FAILED, crs);\n\t\t\t}\n\t\t}\n\t\treturn new Envelope(x - halfCrsWidth, x + halfCrsWidth, y - halfCrsHeight, y + halfCrsHeight);\n\t}", "signature": "Envelope extendPoint(Coordinate coordinate, CoordinateReferenceSystem crs,\n\t\t\t\t\t\t\t\tdouble width, double height)", "full_signature": "public Envelope extendPoint(Coordinate coordinate, CoordinateReferenceSystem crs,\n\t\t\t\t\t\t\t\tdouble width, double height)", "class_method_signature": "GeocoderUtilService.extendPoint(Coordinate coordinate, CoordinateReferenceSystem crs,\n\t\t\t\t\t\t\t\tdouble width, double height)", "testcase": false, "constructor": false, "invocations": ["orthodromicDistance", "orthodromicDistance", "abs", "abs"]}, "repository": {"repo_id": 14505280, "url": "https://github.com/geomajas/geomajas-project-server", "language": "Java", "is_fork": false, "fork_count": 15, "stargazer_count": 13, "size": 124882, "license": "licensed"}}