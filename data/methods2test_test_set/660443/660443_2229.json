{"test_class": {"identifier": "LonePairTest", "superclass": "extends AbstractLonePairTest", "interfaces": "", "fields": [], "file": "base/silent/src/test/java/org/openscience/cdk/silent/LonePairTest.java"}, "test_case": {"identifier": "testLonePair", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testLonePair() {\n        ILonePair lp = new LonePair();\n        Assert.assertNull(lp.getAtom());\n        Assert.assertEquals(2, lp.getElectronCount().intValue());\n    }", "signature": "void testLonePair()", "full_signature": "@Test public void testLonePair()", "class_method_signature": "LonePairTest.testLonePair()", "testcase": true, "constructor": false, "invocations": ["assertNull", "getAtom", "assertEquals", "intValue", "getElectronCount"]}, "focal_class": {"identifier": "LonePair", "superclass": "extends ElectronContainer", "interfaces": "implements Serializable, ILonePair, Cloneable", "fields": [{"original_string": "private static final long serialVersionUID = 51311422004885329L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 51311422004885329L", "var_name": "serialVersionUID"}, {"original_string": "protected final int       electronCount    = 2;", "modifier": "protected final", "type": "int", "declarator": "electronCount    = 2", "var_name": "electronCount"}, {"original_string": "protected IAtom           atom;", "modifier": "protected", "type": "IAtom", "declarator": "atom", "var_name": "atom"}], "methods": [{"identifier": "LonePair", "parameters": "()", "modifiers": "public", "return": "", "signature": " LonePair()", "full_signature": "public  LonePair()", "class_method_signature": "LonePair.LonePair()", "testcase": false, "constructor": true}, {"identifier": "LonePair", "parameters": "(IAtom atom)", "modifiers": "public", "return": "", "signature": " LonePair(IAtom atom)", "full_signature": "public  LonePair(IAtom atom)", "class_method_signature": "LonePair.LonePair(IAtom atom)", "testcase": false, "constructor": true}, {"identifier": "getElectronCount", "parameters": "()", "modifiers": "@Override public", "return": "Integer", "signature": "Integer getElectronCount()", "full_signature": "@Override public Integer getElectronCount()", "class_method_signature": "LonePair.getElectronCount()", "testcase": false, "constructor": false}, {"identifier": "getAtom", "parameters": "()", "modifiers": "@Override public", "return": "IAtom", "signature": "IAtom getAtom()", "full_signature": "@Override public IAtom getAtom()", "class_method_signature": "LonePair.getAtom()", "testcase": false, "constructor": false}, {"identifier": "setAtom", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "void", "signature": "void setAtom(IAtom atom)", "full_signature": "@Override public void setAtom(IAtom atom)", "class_method_signature": "LonePair.setAtom(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "contains", "parameters": "(IAtom atom)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean contains(IAtom atom)", "full_signature": "@Override public boolean contains(IAtom atom)", "class_method_signature": "LonePair.contains(IAtom atom)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object clone()", "full_signature": "@Override public Object clone()", "class_method_signature": "LonePair.clone()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "LonePair.toString()", "testcase": false, "constructor": false}], "file": "base/silent/src/main/java/org/openscience/cdk/silent/LonePair.java"}, "focal_method": {"identifier": "LonePair", "parameters": "()", "modifiers": "public", "return": "", "body": "public LonePair() {\n        this.atom = null;\n    }", "signature": " LonePair()", "full_signature": "public  LonePair()", "class_method_signature": "LonePair.LonePair()", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}