{"test_class": {"identifier": "OptionalPropertyTest", "superclass": "", "interfaces": "", "fields": [], "file": "observable/testSrc/com/android/tools/idea/observable/core/OptionalPropertyTest.java"}, "test_case": {"identifier": "testInitializationByStaticMethodFromNullableWithValue", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testInitializationByStaticMethodFromNullableWithValue() throws Exception {\n    OptionalProperty<String> optStringValue = OptionalValueProperty.fromNullable(\"Test\");\n    assertThat(optStringValue.get().isPresent()).isTrue();\n  }", "signature": "void testInitializationByStaticMethodFromNullableWithValue()", "full_signature": "@Test public void testInitializationByStaticMethodFromNullableWithValue()", "class_method_signature": "OptionalPropertyTest.testInitializationByStaticMethodFromNullableWithValue()", "testcase": true, "constructor": false, "invocations": ["fromNullable", "isTrue", "assertThat", "isPresent", "get"]}, "focal_class": {"identifier": "OptionalProperty", "superclass": "extends AbstractProperty<Optional<T>>", "interfaces": "implements ObservableOptional<T>", "fields": [], "methods": [{"identifier": "setValue", "parameters": "(@NotNull T value)", "modifiers": "public final", "return": "void", "signature": "void setValue(@NotNull T value)", "full_signature": "public final void setValue(@NotNull T value)", "class_method_signature": "OptionalProperty.setValue(@NotNull T value)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void clear()", "full_signature": "public final void clear()", "class_method_signature": "OptionalProperty.clear()", "testcase": false, "constructor": false}, {"identifier": "setNullableValue", "parameters": "(@Nullable T value)", "modifiers": "public final", "return": "void", "signature": "void setNullableValue(@Nullable T value)", "full_signature": "public final void setNullableValue(@Nullable T value)", "class_method_signature": "OptionalProperty.setNullableValue(@Nullable T value)", "testcase": false, "constructor": false}, {"identifier": "isPresent", "parameters": "()", "modifiers": "@NotNull @Override public final", "return": "ObservableBool", "signature": "ObservableBool isPresent()", "full_signature": "@NotNull @Override public final ObservableBool isPresent()", "class_method_signature": "OptionalProperty.isPresent()", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "@Override @NotNull public final", "return": "T", "signature": "T getValue()", "full_signature": "@Override @NotNull public final T getValue()", "class_method_signature": "OptionalProperty.getValue()", "testcase": false, "constructor": false}, {"identifier": "getValueOr", "parameters": "(@NotNull T defaultValue)", "modifiers": "@Override @NotNull public final", "return": "T", "signature": "T getValueOr(@NotNull T defaultValue)", "full_signature": "@Override @NotNull public final T getValueOr(@NotNull T defaultValue)", "class_method_signature": "OptionalProperty.getValueOr(@NotNull T defaultValue)", "testcase": false, "constructor": false}, {"identifier": "getValueOrNull", "parameters": "()", "modifiers": "@Override @Nullable public final", "return": "T", "signature": "T getValueOrNull()", "full_signature": "@Override @Nullable public final T getValueOrNull()", "class_method_signature": "OptionalProperty.getValueOrNull()", "testcase": false, "constructor": false}], "file": "observable/src/com/android/tools/idea/observable/core/OptionalProperty.java"}, "focal_method": {"identifier": "isPresent", "parameters": "()", "modifiers": "@NotNull @Override public final", "return": "ObservableBool", "body": "@NotNull\n  @Override\n  public final ObservableBool isPresent() {\n    return new BooleanExpression(this) {\n      @NotNull\n      @Override\n      public Boolean get() {\n        return OptionalProperty.this.get().isPresent();\n      }\n    };\n  }", "signature": "ObservableBool isPresent()", "full_signature": "@NotNull @Override public final ObservableBool isPresent()", "class_method_signature": "OptionalProperty.isPresent()", "testcase": false, "constructor": false, "invocations": ["isPresent", "get"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}