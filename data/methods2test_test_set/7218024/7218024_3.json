{"test_class": {"identifier": "LocalStreamServiceTest", "superclass": "extends TestMiniClusterUtil", "interfaces": "", "fields": [{"original_string": "private static Logger LOG = Logger.getLogger(LocalStreamServiceTest.class);", "modifier": "private static", "type": "Logger", "declarator": "LOG = Logger.getLogger(LocalStreamServiceTest.class)", "var_name": "LOG"}, {"original_string": "private final static int NUMBER_OF_FILES = 9;", "modifier": "private final static", "type": "int", "declarator": "NUMBER_OF_FILES = 9", "var_name": "NUMBER_OF_FILES"}, {"original_string": "public static final String FS_DEFAULT_NAME_KEY = \"fs.default.name\";", "modifier": "public static final", "type": "String", "declarator": "FS_DEFAULT_NAME_KEY = \"fs.default.name\"", "var_name": "FS_DEFAULT_NAME_KEY"}, {"original_string": "public static final String SRC_FS_DEFAULT_NAME_KEY = \"src.fs.default.name\";", "modifier": "public static final", "type": "String", "declarator": "SRC_FS_DEFAULT_NAME_KEY = \"src.fs.default.name\"", "var_name": "SRC_FS_DEFAULT_NAME_KEY"}, {"original_string": "Set<String> expectedResults = new LinkedHashSet<String>();", "modifier": "", "type": "Set<String>", "declarator": "expectedResults = new LinkedHashSet<String>()", "var_name": "expectedResults"}, {"original_string": "Set<String> expectedTrashPaths = new LinkedHashSet<String>();", "modifier": "", "type": "Set<String>", "declarator": "expectedTrashPaths = new LinkedHashSet<String>()", "var_name": "expectedTrashPaths"}, {"original_string": "Map<String, String> expectedCheckPointPaths = new HashMap<String, String>();", "modifier": "", "type": "Map<String, String>", "declarator": "expectedCheckPointPaths = new HashMap<String, String>()", "var_name": "expectedCheckPointPaths"}], "file": "conduit-worker/src/test/java/com/inmobi/conduit/local/LocalStreamServiceTest.java"}, "test_case": {"identifier": "testPopulateTrashPaths", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testPopulateTrashPaths() throws Exception {\n    FileStatus[] status = new FileStatus[10];\n    String[] expectedstatus = new String[10];\n\n    status[0] = new FileStatus(20, false, 3, 23823, 2438232, new Path(\n        \"/conduit/data/test1/testcluster1/test1-2012-08-29-07-09_00000\"));\n    status[1] = new FileStatus(20, false, 3, 23823, 2438232, new Path(\n        \"/conduit/data/test1/testcluster1/test1-2012-08-29-07-04_00000\"));\n    status[2] = new FileStatus(20, false, 3, 23823, 2438232, new Path(\n        \"/conduit/data/test2/testcluster1/test2-2012-08-29-07-09_00003\"));\n    status[3] = new FileStatus(20, false, 3, 23823, 2438232, new Path(\n        \"/conduit/data/test1/testcluster2/test1-2012-08-13-07-09_00000\"));\n    status[4] = new FileStatus(20, false, 3, 23823, 2438232, new Path(\n        \"/conduit/data/test1/testcluster1/test1-2012-08-29-07-09_00009\"));\n    status[5] = new FileStatus(20, false, 3, 23823, 2438232, new Path(\n        \"/conduit/data/test1/testcluster1/test1-2012-08-29-07-12_00000\"));\n    status[6] = new FileStatus(20, false, 3, 23823, 2438232, new Path(\n        \"/conduit/data/test1/testcluster1/test1-2012-08-29-07-10_00000\"));\n    status[7] = new FileStatus(20, false, 3, 23823, 2438232, new Path(\n        \"/conduit/data/test2/testcluster1/test2-2012-08-29-07-45_00000\"));\n    status[8] = new FileStatus(20, false, 3, 23823, 2438232, new Path(\n        \"/conduit/data/test1/testcluster2/test1-2012-08-29-07-09_00078\"));\n    status[9] = new FileStatus(20, false, 3, 23823, 2438232, new Path(\n        \"/conduit/data/test1/testcluster2/test1-2012-08-29-07-04_00034\"));\n\n    expectedstatus[0] = \"/conduit/data/test1/testcluster1/test1-2012-08-29-07-04_00000\";\n    expectedstatus[1] = \"/conduit/data/test1/testcluster1/test1-2012-08-29-07-09_00000\";\n    expectedstatus[2] = \"/conduit/data/test1/testcluster1/test1-2012-08-29-07-09_00009\";\n    expectedstatus[3] = \"/conduit/data/test1/testcluster1/test1-2012-08-29-07-10_00000\";\n    expectedstatus[4] = \"/conduit/data/test1/testcluster1/test1-2012-08-29-07-12_00000\";\n\n    expectedstatus[5] = \"/conduit/data/test1/testcluster2/test1-2012-08-13-07-09_00000\";\n    expectedstatus[6] = \"/conduit/data/test1/testcluster2/test1-2012-08-29-07-04_00034\";\n    expectedstatus[7] = \"/conduit/data/test1/testcluster2/test1-2012-08-29-07-09_00078\";\n\n    expectedstatus[8] = \"/conduit/data/test2/testcluster1/test2-2012-08-29-07-09_00003\";\n    expectedstatus[9] = \"/conduit/data/test2/testcluster1/test2-2012-08-29-07-45_00000\";\n\n    Set<FileStatus> trashSet = new HashSet<FileStatus>();\n    for (int i = 0; i < 10; ++i) {\n      trashSet.add(status[i]);\n    }\n\n    ConduitConfig conduitConfig = buildTestConduitConfig();\n    Cluster cluster = ClusterTest.buildLocalCluster();\n    Set<String> streamsToProcess = new HashSet<String>();\n    streamsToProcess.addAll(conduitConfig.getSourceStreams().keySet());\n    TestLocalStreamService service = new TestLocalStreamService(\n        conduitConfig, cluster, null, new FSCheckpointProvider(\n            cluster.getCheckpointDir()), streamsToProcess);\n\n    Map<Path, Path> trashCommitPaths = service\n        .populateTrashCommitPaths(trashSet);\n\n    Set<Path> srcPaths = trashCommitPaths.keySet();\n\n    Iterator<Path> it = srcPaths.iterator();\n    int i = 0;\n\n    while (it.hasNext()) {\n      String actualPath = it.next().toString();\n      String expectedPath = expectedstatus[i];\n\n      LOG.debug(\"Comparing Trash Paths Actual [\" + actualPath + \"] Expected [\"\n          + expectedPath + \"]\");\n      Assert.assertEquals(actualPath, expectedPath);\n\n      i++;\n    }\n\n    Assert.assertEquals(ConduitMetrics.<SlidingTimeWindowGauge>getMetric(\"LocalStreamService\",AbstractService.RETRY_MKDIR,\"stream1\").getValue().longValue() , 0);\n    Assert.assertEquals(ConduitMetrics.<SlidingTimeWindowGauge>getMetric(\"LocalStreamService\",AbstractService.RETRY_CHECKPOINT,\"stream1\").getValue().longValue() , 0);\n    Assert.assertEquals(ConduitMetrics.<SlidingTimeWindowGauge>getMetric(\"LocalStreamService\",AbstractService.RETRY_RENAME,\"stream1\").getValue().longValue() , 0);\n    Assert.assertEquals(ConduitMetrics.<SlidingTimeWindowGauge>getMetric(\"LocalStreamService\",AbstractService.FILES_COPIED_COUNT,\"stream1\").getValue().longValue() , 0);\n  }", "signature": "void testPopulateTrashPaths()", "full_signature": "@Test public void testPopulateTrashPaths()", "class_method_signature": "LocalStreamServiceTest.testPopulateTrashPaths()", "testcase": true, "constructor": false, "invocations": ["add", "buildTestConduitConfig", "buildLocalCluster", "addAll", "keySet", "getSourceStreams", "getCheckpointDir", "populateTrashCommitPaths", "keySet", "iterator", "hasNext", "toString", "next", "debug", "assertEquals", "assertEquals", "longValue", "getValue", "getMetric", "assertEquals", "longValue", "getValue", "getMetric", "assertEquals", "longValue", "getValue", "getMetric", "assertEquals", "longValue", "getValue", "getMetric"]}, "focal_class": {"identifier": "LocalStreamService", "superclass": "extends AbstractService", "interfaces": "implements\nConfigConstants", "fields": [{"original_string": "private static final Log LOG = LogFactory.getLog(LocalStreamService.class);", "modifier": "private static final", "type": "Log", "declarator": "LOG = LogFactory.getLog(LocalStreamService.class)", "var_name": "LOG"}, {"original_string": "private final Cluster srcCluster;", "modifier": "private final", "type": "Cluster", "declarator": "srcCluster", "var_name": "srcCluster"}, {"original_string": "private Cluster currentCluster = null;", "modifier": "private", "type": "Cluster", "declarator": "currentCluster = null", "var_name": "currentCluster"}, {"original_string": "private Path tmpPath;", "modifier": "private", "type": "Path", "declarator": "tmpPath", "var_name": "tmpPath"}, {"original_string": "private Path tmpJobInputPath;", "modifier": "private", "type": "Path", "declarator": "tmpJobInputPath", "var_name": "tmpJobInputPath"}, {"original_string": "private Path tmpJobOutputPath;", "modifier": "private", "type": "Path", "declarator": "tmpJobOutputPath", "var_name": "tmpJobOutputPath"}, {"original_string": "private final int FILES_TO_KEEP = 6;", "modifier": "private final", "type": "int", "declarator": "FILES_TO_KEEP = 6", "var_name": "FILES_TO_KEEP"}, {"original_string": "private int filesPerCollector = 10;", "modifier": "private", "type": "int", "declarator": "filesPerCollector = 10", "var_name": "filesPerCollector"}, {"original_string": "private long timeoutToProcessLastCollectorFile = 60;", "modifier": "private", "type": "long", "declarator": "timeoutToProcessLastCollectorFile = 60", "var_name": "timeoutToProcessLastCollectorFile"}, {"original_string": "private boolean processLastFile = false;", "modifier": "private", "type": "boolean", "declarator": "processLastFile = false", "var_name": "processLastFile"}, {"original_string": "private int numberOfFilesProcessed = 0;", "modifier": "private", "type": "int", "declarator": "numberOfFilesProcessed = 0", "var_name": "numberOfFilesProcessed"}, {"original_string": "protected long BYTES_PER_MAPPER = 512 * 1024 * 1024;", "modifier": "protected", "type": "long", "declarator": "BYTES_PER_MAPPER = 512 * 1024 * 1024", "var_name": "BYTES_PER_MAPPER"}, {"original_string": "private final ByteArrayOutputStream buffer = new ByteArrayOutputStream(64);", "modifier": "private final", "type": "ByteArrayOutputStream", "declarator": "buffer = new ByteArrayOutputStream(64)", "var_name": "buffer"}, {"original_string": "private DataInputBuffer in = new DataInputBuffer();", "modifier": "private", "type": "DataInputBuffer", "declarator": "in = new DataInputBuffer()", "var_name": "in"}, {"original_string": "private final Path jarsPath;", "modifier": "private final", "type": "Path", "declarator": "jarsPath", "var_name": "jarsPath"}, {"original_string": "final Path inputFormatJarDestPath;", "modifier": "final", "type": "Path", "declarator": "inputFormatJarDestPath", "var_name": "inputFormatJarDestPath"}, {"original_string": "final Path auditUtilJarDestPath;", "modifier": "final", "type": "Path", "declarator": "auditUtilJarDestPath", "var_name": "auditUtilJarDestPath"}], "methods": [{"identifier": "LocalStreamService", "parameters": "(ConduitConfig config, Cluster srcCluster,\n      Cluster currentCluster, CheckpointProvider provider,\n      Set<String> streamsToProcess)", "modifiers": "public", "return": "", "signature": " LocalStreamService(ConduitConfig config, Cluster srcCluster,\n      Cluster currentCluster, CheckpointProvider provider,\n      Set<String> streamsToProcess)", "full_signature": "public  LocalStreamService(ConduitConfig config, Cluster srcCluster,\n      Cluster currentCluster, CheckpointProvider provider,\n      Set<String> streamsToProcess)", "class_method_signature": "LocalStreamService.LocalStreamService(ConduitConfig config, Cluster srcCluster,\n      Cluster currentCluster, CheckpointProvider provider,\n      Set<String> streamsToProcess)", "testcase": false, "constructor": true}, {"identifier": "cleanUpTmp", "parameters": "(FileSystem fs)", "modifiers": "private", "return": "void", "signature": "void cleanUpTmp(FileSystem fs)", "full_signature": "private void cleanUpTmp(FileSystem fs)", "class_method_signature": "LocalStreamService.cleanUpTmp(FileSystem fs)", "testcase": false, "constructor": false}, {"identifier": "prepareStreamHcatEnableMap", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void prepareStreamHcatEnableMap()", "full_signature": "@Override protected void prepareStreamHcatEnableMap()", "class_method_signature": "LocalStreamService.prepareStreamHcatEnableMap()", "testcase": false, "constructor": false}, {"identifier": "getTimeStampFromHCatPartition", "parameters": "(String lastHcatPartitionLoc,\n      String stream)", "modifiers": "@Override protected", "return": "Date", "signature": "Date getTimeStampFromHCatPartition(String lastHcatPartitionLoc,\n      String stream)", "full_signature": "@Override protected Date getTimeStampFromHCatPartition(String lastHcatPartitionLoc,\n      String stream)", "class_method_signature": "LocalStreamService.getTimeStampFromHCatPartition(String lastHcatPartitionLoc,\n      String stream)", "testcase": false, "constructor": false}, {"identifier": "getTableName", "parameters": "(String streamName)", "modifiers": "protected", "return": "String", "signature": "String getTableName(String streamName)", "full_signature": "protected String getTableName(String streamName)", "class_method_signature": "LocalStreamService.getTableName(String streamName)", "testcase": false, "constructor": false}, {"identifier": "getMSecondsTillNextRun", "parameters": "(long currentTime)", "modifiers": "@Override public", "return": "long", "signature": "long getMSecondsTillNextRun(long currentTime)", "full_signature": "@Override public long getMSecondsTillNextRun(long currentTime)", "class_method_signature": "LocalStreamService.getMSecondsTillNextRun(long currentTime)", "testcase": false, "constructor": false}, {"identifier": "execute", "parameters": "()", "modifiers": "@Override protected", "return": "void", "signature": "void execute()", "full_signature": "@Override protected void execute()", "class_method_signature": "LocalStreamService.execute()", "testcase": false, "constructor": false}, {"identifier": "updatePathsTobeRegisteredWithLatestDir", "parameters": "(long commitTime)", "modifiers": "private", "return": "void", "signature": "void updatePathsTobeRegisteredWithLatestDir(long commitTime)", "full_signature": "private void updatePathsTobeRegisteredWithLatestDir(long commitTime)", "class_method_signature": "LocalStreamService.updatePathsTobeRegisteredWithLatestDir(long commitTime)", "testcase": false, "constructor": false}, {"identifier": "checkPoint", "parameters": "(Table<String, String, String> checkPointPaths)", "modifiers": "private", "return": "void", "signature": "void checkPoint(Table<String, String, String> checkPointPaths)", "full_signature": "private void checkPoint(Table<String, String, String> checkPointPaths)", "class_method_signature": "LocalStreamService.checkPoint(Table<String, String, String> checkPointPaths)", "testcase": false, "constructor": false}, {"identifier": "prepareForCommit", "parameters": "(long commitTime)", "modifiers": "", "return": "Map<Path, Path>", "signature": "Map<Path, Path> prepareForCommit(long commitTime)", "full_signature": " Map<Path, Path> prepareForCommit(long commitTime)", "class_method_signature": "LocalStreamService.prepareForCommit(long commitTime)", "testcase": false, "constructor": false}, {"identifier": "populateTrashCommitPaths", "parameters": "(Set<FileStatus> trashSet)", "modifiers": "", "return": "Map<Path, Path>", "signature": "Map<Path, Path> populateTrashCommitPaths(Set<FileStatus> trashSet)", "full_signature": " Map<Path, Path> populateTrashCommitPaths(Set<FileStatus> trashSet)", "class_method_signature": "LocalStreamService.populateTrashCommitPaths(Set<FileStatus> trashSet)", "testcase": false, "constructor": false}, {"identifier": "commit", "parameters": "(Map<Path, Path> commitPaths, boolean isTrashData, List<AuditMessage> auditMsgList, long commitTime)", "modifiers": "private", "return": "void", "signature": "void commit(Map<Path, Path> commitPaths, boolean isTrashData, List<AuditMessage> auditMsgList, long commitTime)", "full_signature": "private void commit(Map<Path, Path> commitPaths, boolean isTrashData, List<AuditMessage> auditMsgList, long commitTime)", "class_method_signature": "LocalStreamService.commit(Map<Path, Path> commitPaths, boolean isTrashData, List<AuditMessage> auditMsgList, long commitTime)", "testcase": false, "constructor": false}, {"identifier": "createMRInput", "parameters": "(Path inputPath,Map<FileStatus, String> fileListing,\n      Set<FileStatus> trashSet,Table<String, String, String> checkpointPaths)", "modifiers": "protected", "return": "long", "signature": "long createMRInput(Path inputPath,Map<FileStatus, String> fileListing,\n      Set<FileStatus> trashSet,Table<String, String, String> checkpointPaths)", "full_signature": "protected long createMRInput(Path inputPath,Map<FileStatus, String> fileListing,\n      Set<FileStatus> trashSet,Table<String, String, String> checkpointPaths)", "class_method_signature": "LocalStreamService.createMRInput(Path inputPath,Map<FileStatus, String> fileListing,\n      Set<FileStatus> trashSet,Table<String, String, String> checkpointPaths)", "testcase": false, "constructor": false}, {"identifier": "createListing", "parameters": "(FileSystem fs, FileStatus fileStatus,\n      Map<FileStatus, String> results, Set<FileStatus> trashSet,\n      Table<String, String, String> checkpointPaths)", "modifiers": "public", "return": "void", "signature": "void createListing(FileSystem fs, FileStatus fileStatus,\n      Map<FileStatus, String> results, Set<FileStatus> trashSet,\n      Table<String, String, String> checkpointPaths)", "full_signature": "public void createListing(FileSystem fs, FileStatus fileStatus,\n      Map<FileStatus, String> results, Set<FileStatus> trashSet,\n      Table<String, String, String> checkpointPaths)", "class_method_signature": "LocalStreamService.createListing(FileSystem fs, FileStatus fileStatus,\n      Map<FileStatus, String> results, Set<FileStatus> trashSet,\n      Table<String, String, String> checkpointPaths)", "testcase": false, "constructor": false}, {"identifier": "getLastAddedPartTime", "parameters": "(String stream)", "modifiers": "public", "return": "long", "signature": "long getLastAddedPartTime(String stream)", "full_signature": "public long getLastAddedPartTime(String stream)", "class_method_signature": "LocalStreamService.getLastAddedPartTime(String stream)", "testcase": false, "constructor": false}, {"identifier": "processFile", "parameters": "(FileStatus file, String currentFile,\n      String checkPointValue, FileSystem fs, Map<FileStatus, String> results,\n      Map<String, FileStatus> collectorPaths, String stream)", "modifiers": "private", "return": "long", "signature": "long processFile(FileStatus file, String currentFile,\n      String checkPointValue, FileSystem fs, Map<FileStatus, String> results,\n      Map<String, FileStatus> collectorPaths, String stream)", "full_signature": "private long processFile(FileStatus file, String currentFile,\n      String checkPointValue, FileSystem fs, Map<FileStatus, String> results,\n      Map<String, FileStatus> collectorPaths, String stream)", "class_method_signature": "LocalStreamService.processFile(FileStatus file, String currentFile,\n      String checkPointValue, FileSystem fs, Map<FileStatus, String> results,\n      Map<String, FileStatus> collectorPaths, String stream)", "testcase": false, "constructor": false}, {"identifier": "isEmptyFile", "parameters": "(FileStatus fileStatus, FileSystem fs)", "modifiers": "private", "return": "boolean", "signature": "boolean isEmptyFile(FileStatus fileStatus, FileSystem fs)", "full_signature": "private boolean isEmptyFile(FileStatus fileStatus, FileSystem fs)", "class_method_signature": "LocalStreamService.isEmptyFile(FileStatus fileStatus, FileSystem fs)", "testcase": false, "constructor": false}, {"identifier": "populateCheckpointPathForCollector", "parameters": "(\n      Table<String, String, String> checkpointPaths,\n      TreeMap<String, FileStatus> collectorPaths)", "modifiers": "private", "return": "void", "signature": "void populateCheckpointPathForCollector(\n      Table<String, String, String> checkpointPaths,\n      TreeMap<String, FileStatus> collectorPaths)", "full_signature": "private void populateCheckpointPathForCollector(\n      Table<String, String, String> checkpointPaths,\n      TreeMap<String, FileStatus> collectorPaths)", "class_method_signature": "LocalStreamService.populateCheckpointPathForCollector(\n      Table<String, String, String> checkpointPaths,\n      TreeMap<String, FileStatus> collectorPaths)", "testcase": false, "constructor": false}, {"identifier": "populateTrash", "parameters": "(Map<String, FileStatus> collectorPaths,\n      Set<FileStatus> trashSet)", "modifiers": "private", "return": "void", "signature": "void populateTrash(Map<String, FileStatus> collectorPaths,\n      Set<FileStatus> trashSet)", "full_signature": "private void populateTrash(Map<String, FileStatus> collectorPaths,\n      Set<FileStatus> trashSet)", "class_method_signature": "LocalStreamService.populateTrash(Map<String, FileStatus> collectorPaths,\n      Set<FileStatus> trashSet)", "testcase": false, "constructor": false}, {"identifier": "aboveCheckpoint", "parameters": "(String checkPoint, String file)", "modifiers": "private", "return": "boolean", "signature": "boolean aboveCheckpoint(String checkPoint, String file)", "full_signature": "private boolean aboveCheckpoint(String checkPoint, String file)", "class_method_signature": "LocalStreamService.aboveCheckpoint(String checkPoint, String file)", "testcase": false, "constructor": false}, {"identifier": "getCurrentFile", "parameters": "(FileSystem fs, FileStatus[] files,\n      TreeSet<FileStatus> sortedFiles)", "modifiers": "protected", "return": "String", "signature": "String getCurrentFile(FileSystem fs, FileStatus[] files,\n      TreeSet<FileStatus> sortedFiles)", "full_signature": "protected String getCurrentFile(FileSystem fs, FileStatus[] files,\n      TreeSet<FileStatus> sortedFiles)", "class_method_signature": "LocalStreamService.getCurrentFile(FileSystem fs, FileStatus[] files,\n      TreeSet<FileStatus> sortedFiles)", "testcase": false, "constructor": false}, {"identifier": "getCategoryFromSrcPath", "parameters": "(Path src)", "modifiers": "private", "return": "String", "signature": "String getCategoryFromSrcPath(Path src)", "full_signature": "private String getCategoryFromSrcPath(Path src)", "class_method_signature": "LocalStreamService.getCategoryFromSrcPath(Path src)", "testcase": false, "constructor": false}, {"identifier": "getCategoryJobOutTmpPath", "parameters": "(String category)", "modifiers": "private", "return": "Path", "signature": "Path getCategoryJobOutTmpPath(String category)", "full_signature": "private Path getCategoryJobOutTmpPath(String category)", "class_method_signature": "LocalStreamService.getCategoryJobOutTmpPath(String category)", "testcase": false, "constructor": false}, {"identifier": "setBytesPerMapper", "parameters": "(long bytesPerMapper)", "modifiers": "protected", "return": "void", "signature": "void setBytesPerMapper(long bytesPerMapper)", "full_signature": "protected void setBytesPerMapper(long bytesPerMapper)", "class_method_signature": "LocalStreamService.setBytesPerMapper(long bytesPerMapper)", "testcase": false, "constructor": false}, {"identifier": "createJob", "parameters": "(Path inputPath, long totalSize)", "modifiers": "protected", "return": "Job", "signature": "Job createJob(Path inputPath, long totalSize)", "full_signature": "protected Job createJob(Path inputPath, long totalSize)", "class_method_signature": "LocalStreamService.createJob(Path inputPath, long totalSize)", "testcase": false, "constructor": false}, {"identifier": "getNumMapsForJob", "parameters": "(long totalSize)", "modifiers": "private", "return": "int", "signature": "int getNumMapsForJob(long totalSize)", "full_signature": "private int getNumMapsForJob(long totalSize)", "class_method_signature": "LocalStreamService.getNumMapsForJob(long totalSize)", "testcase": false, "constructor": false}, {"identifier": "getMapperClass", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") protected", "return": "Class<? extends Mapper<Text, FileStatus, NullWritable, Text>>", "signature": "Class<? extends Mapper<Text, FileStatus, NullWritable, Text>> getMapperClass()", "full_signature": "@SuppressWarnings(\"unchecked\") protected Class<? extends Mapper<Text, FileStatus, NullWritable, Text>> getMapperClass()", "class_method_signature": "LocalStreamService.getMapperClass()", "testcase": false, "constructor": false}, {"identifier": "getCurrentCluster", "parameters": "()", "modifiers": "public", "return": "Cluster", "signature": "Cluster getCurrentCluster()", "full_signature": "public Cluster getCurrentCluster()", "class_method_signature": "LocalStreamService.getCurrentCluster()", "testcase": false, "constructor": false}, {"identifier": "getTier", "parameters": "()", "modifiers": "protected", "return": "String", "signature": "String getTier()", "full_signature": "protected String getTier()", "class_method_signature": "LocalStreamService.getTier()", "testcase": false, "constructor": false}, {"identifier": "getTopicNameFromDestnPath", "parameters": "(Path destnPath)", "modifiers": "public", "return": "String", "signature": "String getTopicNameFromDestnPath(Path destnPath)", "full_signature": "public String getTopicNameFromDestnPath(Path destnPath)", "class_method_signature": "LocalStreamService.getTopicNameFromDestnPath(Path destnPath)", "testcase": false, "constructor": false}, {"identifier": "getServiceType", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getServiceType()", "full_signature": "@Override public String getServiceType()", "class_method_signature": "LocalStreamService.getServiceType()", "testcase": false, "constructor": false}, {"identifier": "getFinalPath", "parameters": "(long time, String stream)", "modifiers": "protected", "return": "Path", "signature": "Path getFinalPath(long time, String stream)", "full_signature": "protected Path getFinalPath(long time, String stream)", "class_method_signature": "LocalStreamService.getFinalPath(long time, String stream)", "testcase": false, "constructor": false}], "file": "conduit-worker/src/main/java/com/inmobi/conduit/local/LocalStreamService.java"}, "focal_method": {"identifier": "populateTrashCommitPaths", "parameters": "(Set<FileStatus> trashSet)", "modifiers": "", "return": "Map<Path, Path>", "body": "Map<Path, Path> populateTrashCommitPaths(Set<FileStatus> trashSet) {\n    // find trash paths\n    Map<Path, Path> trashPaths = new TreeMap<Path, Path>();\n    Path trash = srcCluster.getTrashPathWithDateHour();\n    Iterator<FileStatus> it = trashSet.iterator();\n    while (it.hasNext()) {\n      FileStatus src = it.next();\n      Path target = null;\n      target = new Path(trash, src.getPath().getParent().getName() + \"-\"\n          + src.getPath().getName());\n      LOG.debug(\"Trashing [\" + src.getPath() + \"] to [\" + target + \"]\");\n      trashPaths.put(src.getPath(), target);\n    }\n    return trashPaths;\n  }", "signature": "Map<Path, Path> populateTrashCommitPaths(Set<FileStatus> trashSet)", "full_signature": " Map<Path, Path> populateTrashCommitPaths(Set<FileStatus> trashSet)", "class_method_signature": "LocalStreamService.populateTrashCommitPaths(Set<FileStatus> trashSet)", "testcase": false, "constructor": false, "invocations": ["getTrashPathWithDateHour", "iterator", "hasNext", "next", "getName", "getParent", "getPath", "getName", "getPath", "debug", "getPath", "put", "getPath"]}, "repository": {"repo_id": 7218024, "url": "https://github.com/InMobi/conduit", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 9, "size": 49400, "license": "licensed"}}