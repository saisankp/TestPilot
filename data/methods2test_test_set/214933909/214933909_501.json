{"test_class": {"identifier": "AppGroupDaoTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Autowired\n    AppGroupDao appGroupDao;", "modifier": "@Autowired", "type": "AppGroupDao", "declarator": "appGroupDao", "var_name": "appGroupDao"}, {"original_string": "AppGroup appGroup;", "modifier": "", "type": "AppGroup", "declarator": "appGroup", "var_name": "appGroup"}, {"original_string": "AppGroup appGroupModel;", "modifier": "", "type": "AppGroup", "declarator": "appGroupModel", "var_name": "appGroupModel"}, {"original_string": "Paging<AppGroup> paging;", "modifier": "", "type": "Paging<AppGroup>", "declarator": "paging", "var_name": "paging"}], "file": "das-console-manager/src/test/java/com/ppdai/das/console/dao/AppGroupDaoTest.java"}, "test_case": {"identifier": "changeServerGroup", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void changeServerGroup() throws Exception {\n        Set<Long> appGroupIds = new HashSet<>();\n        appGroupIds.add(1L);\n        appGroupIds.add(2L);\n        int count = appGroupDao.changeServerGroup(2L, appGroupIds);\n        System.out.println(\"changeServerGroup :-------> \" + count);\n        Assert.assertTrue(count > 0);\n    }", "signature": "void changeServerGroup()", "full_signature": "@Test public void changeServerGroup()", "class_method_signature": "AppGroupDaoTest.changeServerGroup()", "testcase": true, "constructor": false, "invocations": ["add", "add", "changeServerGroup", "println", "assertTrue"]}, "focal_class": {"identifier": "AppGroupDao", "superclass": "extends BaseDao", "interfaces": "", "fields": [], "methods": [{"identifier": "insertAppGroup", "parameters": "(AppGroup appGroup)", "modifiers": "public", "return": "Long", "signature": "Long insertAppGroup(AppGroup appGroup)", "full_signature": "public Long insertAppGroup(AppGroup appGroup)", "class_method_signature": "AppGroupDao.insertAppGroup(AppGroup appGroup)", "testcase": false, "constructor": false}, {"identifier": "getAppGroupById", "parameters": "(Long id)", "modifiers": "public", "return": "AppGroup", "signature": "AppGroup getAppGroupById(Long id)", "full_signature": "public AppGroup getAppGroupById(Long id)", "class_method_signature": "AppGroupDao.getAppGroupById(Long id)", "testcase": false, "constructor": false}, {"identifier": "updateAppGroup", "parameters": "(AppGroup appGroup)", "modifiers": "public", "return": "int", "signature": "int updateAppGroup(AppGroup appGroup)", "full_signature": "public int updateAppGroup(AppGroup appGroup)", "class_method_signature": "AppGroupDao.updateAppGroup(AppGroup appGroup)", "testcase": false, "constructor": false}, {"identifier": "deleteAppGroup", "parameters": "(AppGroup appGroup)", "modifiers": "public", "return": "int", "signature": "int deleteAppGroup(AppGroup appGroup)", "full_signature": "public int deleteAppGroup(AppGroup appGroup)", "class_method_signature": "AppGroupDao.deleteAppGroup(AppGroup appGroup)", "testcase": false, "constructor": false}, {"identifier": "getCountByName", "parameters": "(String name)", "modifiers": "public", "return": "Long", "signature": "Long getCountByName(String name)", "full_signature": "public Long getCountByName(String name)", "class_method_signature": "AppGroupDao.getCountByName(String name)", "testcase": false, "constructor": false}, {"identifier": "getCountByIdAndName", "parameters": "(Long id, String name)", "modifiers": "public", "return": "Long", "signature": "Long getCountByIdAndName(Long id, String name)", "full_signature": "public Long getCountByIdAndName(Long id, String name)", "class_method_signature": "AppGroupDao.getCountByIdAndName(Long id, String name)", "testcase": false, "constructor": false}, {"identifier": "changeServerGroup", "parameters": "(Long newServerGroupId, Set<Long> appGroupIds)", "modifiers": "public", "return": "int", "signature": "int changeServerGroup(Long newServerGroupId, Set<Long> appGroupIds)", "full_signature": "public int changeServerGroup(Long newServerGroupId, Set<Long> appGroupIds)", "class_method_signature": "AppGroupDao.changeServerGroup(Long newServerGroupId, Set<Long> appGroupIds)", "testcase": false, "constructor": false}, {"identifier": "getAppGroupsByServerGroupId", "parameters": "(Long serverGroupId)", "modifiers": "public", "return": "List<AppGroup>", "signature": "List<AppGroup> getAppGroupsByServerGroupId(Long serverGroupId)", "full_signature": "public List<AppGroup> getAppGroupsByServerGroupId(Long serverGroupId)", "class_method_signature": "AppGroupDao.getAppGroupsByServerGroupId(Long serverGroupId)", "testcase": false, "constructor": false}, {"identifier": "getAppGroupTotalCount", "parameters": "(Paging<AppGroup> paging)", "modifiers": "public", "return": "Long", "signature": "Long getAppGroupTotalCount(Paging<AppGroup> paging)", "full_signature": "public Long getAppGroupTotalCount(Paging<AppGroup> paging)", "class_method_signature": "AppGroupDao.getAppGroupTotalCount(Paging<AppGroup> paging)", "testcase": false, "constructor": false}, {"identifier": "findAppGroupPageList", "parameters": "(Paging<AppGroup> paging)", "modifiers": "public", "return": "List<AppGroupView>", "signature": "List<AppGroupView> findAppGroupPageList(Paging<AppGroup> paging)", "full_signature": "public List<AppGroupView> findAppGroupPageList(Paging<AppGroup> paging)", "class_method_signature": "AppGroupDao.findAppGroupPageList(Paging<AppGroup> paging)", "testcase": false, "constructor": false}, {"identifier": "appenWhere", "parameters": "(Paging<AppGroup> paging)", "modifiers": "private", "return": "String", "signature": "String appenWhere(Paging<AppGroup> paging)", "full_signature": "private String appenWhere(Paging<AppGroup> paging)", "class_method_signature": "AppGroupDao.appenWhere(Paging<AppGroup> paging)", "testcase": false, "constructor": false}, {"identifier": "appenCondition", "parameters": "(Paging<AppGroup> paging)", "modifiers": "private", "return": "String", "signature": "String appenCondition(Paging<AppGroup> paging)", "full_signature": "private String appenCondition(Paging<AppGroup> paging)", "class_method_signature": "AppGroupDao.appenCondition(Paging<AppGroup> paging)", "testcase": false, "constructor": false}], "file": "das-console-manager/src/main/java/com/ppdai/das/console/dao/AppGroupDao.java"}, "focal_method": {"identifier": "changeServerGroup", "parameters": "(Long newServerGroupId, Set<Long> appGroupIds)", "modifiers": "public", "return": "int", "body": "public int changeServerGroup(Long newServerGroupId, Set<Long> appGroupIds) throws SQLException {\n        if (CollectionUtils.isEmpty(appGroupIds)) {\n            return 1;\n        }\n        String sql = \"UPDATE app_group SET server_group_id = ? WHERE id in (\" + StringUtil.joinCollectByComma(appGroupIds) + \") \";\n        return this.updataBysql(sql, Parameter.integerOf(StringUtils.EMPTY, newServerGroupId));\n    }", "signature": "int changeServerGroup(Long newServerGroupId, Set<Long> appGroupIds)", "full_signature": "public int changeServerGroup(Long newServerGroupId, Set<Long> appGroupIds)", "class_method_signature": "AppGroupDao.changeServerGroup(Long newServerGroupId, Set<Long> appGroupIds)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "joinCollectByComma", "updataBysql", "integerOf"]}, "repository": {"repo_id": 214933909, "url": "https://github.com/ppdaicorp/das", "stars": 55, "created": "10/14/2019 2:49:17 AM +00:00", "updates": "2020-01-20T09:24:23+00:00", "fork": "False", "license": "licensed"}}