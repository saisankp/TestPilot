{"test_class": {"identifier": "HaloNetworkExceptionResolverTest", "superclass": "extends HaloRobolectricTest", "interfaces": "", "fields": [{"original_string": "private CallbackFlag mCallbackFlag;", "modifier": "private", "type": "CallbackFlag", "declarator": "mCallbackFlag", "var_name": "mCallbackFlag"}, {"original_string": "private HaloNetClient mHaloNetClient;", "modifier": "private", "type": "HaloNetClient", "declarator": "mHaloNetClient", "var_name": "mHaloNetClient"}, {"original_string": "private HaloFramework mFramework;", "modifier": "private", "type": "HaloFramework", "declarator": "mFramework", "var_name": "mFramework"}, {"original_string": "private MockServer mMockServer;", "modifier": "private", "type": "MockServer", "declarator": "mMockServer", "var_name": "mMockServer"}, {"original_string": "private String mEndpointURL;", "modifier": "private", "type": "String", "declarator": "mEndpointURL", "var_name": "mEndpointURL"}], "file": "sdk/halo-framework/src/test/java/com/mobgen/halo/android/framework/network/exceptions/HaloNetworkExceptionResolverTest.java"}, "test_case": {"identifier": "thatHaloServerExceptionIsThrown", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void thatHaloServerExceptionIsThrown() throws IOException {\n        enqueueServerError(mMockServer,500);\n        HaloNetworkApi networkApi = givenAHaloNetWorkApi(mFramework,mEndpointURL);\n        HaloRequest request = givenAGetRequest(networkApi);\n        HaloNetworkExceptionResolver haloNetworkExceptionResolver = new HaloNetworkExceptionResolver();\n        try{\n            haloNetworkExceptionResolver.resolve(request.execute());\n        }\n        catch (HaloServerException haloServerException){\n            assertThat(haloServerException).isNotNull();\n            assertThat(haloServerException.getMessage()).contains(\"500\");\n            assertThat(haloServerException.getErrorCode()).isEqualTo(500);\n            assertThat(haloServerException.toString()).contains(\"500\");\n            assertThat(haloServerException.getBody()).isEqualTo(\"\");\n        }\n    }", "signature": "void thatHaloServerExceptionIsThrown()", "full_signature": "@Test public void thatHaloServerExceptionIsThrown()", "class_method_signature": "HaloNetworkExceptionResolverTest.thatHaloServerExceptionIsThrown()", "testcase": true, "constructor": false, "invocations": ["enqueueServerError", "givenAHaloNetWorkApi", "givenAGetRequest", "resolve", "execute", "isNotNull", "assertThat", "contains", "assertThat", "getMessage", "isEqualTo", "assertThat", "getErrorCode", "contains", "assertThat", "toString", "isEqualTo", "assertThat", "getBody"]}, "focal_class": {"identifier": "HaloNetworkExceptionResolver", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "resolve", "parameters": "(@NonNull Exception exception, @Nullable Request request, boolean isNetworkConnected)", "modifiers": "@NonNull @Api(2.0) public", "return": "HaloNetException", "signature": "HaloNetException resolve(@NonNull Exception exception, @Nullable Request request, boolean isNetworkConnected)", "full_signature": "@NonNull @Api(2.0) public HaloNetException resolve(@NonNull Exception exception, @Nullable Request request, boolean isNetworkConnected)", "class_method_signature": "HaloNetworkExceptionResolver.resolve(@NonNull Exception exception, @Nullable Request request, boolean isNetworkConnected)", "testcase": false, "constructor": false}, {"identifier": "resolve", "parameters": "(@NonNull Response response)", "modifiers": "@NonNull @Api(2.0) public", "return": "HaloNetException", "signature": "HaloNetException resolve(@NonNull Response response)", "full_signature": "@NonNull @Api(2.0) public HaloNetException resolve(@NonNull Response response)", "class_method_signature": "HaloNetworkExceptionResolver.resolve(@NonNull Response response)", "testcase": false, "constructor": false}], "file": "sdk/halo-framework/src/main/java/com/mobgen/halo/android/framework/network/exceptions/HaloNetworkExceptionResolver.java"}, "focal_method": {"identifier": "resolve", "parameters": "(@NonNull Exception exception, @Nullable Request request, boolean isNetworkConnected)", "modifiers": "@NonNull @Api(2.0) public", "return": "HaloNetException", "body": "@NonNull\n    @Api(2.0)\n    public HaloNetException resolve(@NonNull Exception exception, @Nullable Request request, boolean isNetworkConnected) {\n        HaloNetException exceptionMapped;\n        String url = request != null ? request.url().toString() : null;\n        if (!isNetworkConnected) {\n            exceptionMapped = new HaloConnectionException(\"The device has not connectivity to reach the server on \" + url, exception);\n        } else {\n            exceptionMapped = new HaloUnknownServerException(\"An unknown exception has been produced when performing the request: \" + exception.getMessage(), exception);\n        }\n        return exceptionMapped;\n    }", "signature": "HaloNetException resolve(@NonNull Exception exception, @Nullable Request request, boolean isNetworkConnected)", "full_signature": "@NonNull @Api(2.0) public HaloNetException resolve(@NonNull Exception exception, @Nullable Request request, boolean isNetworkConnected)", "class_method_signature": "HaloNetworkExceptionResolver.resolve(@NonNull Exception exception, @Nullable Request request, boolean isNetworkConnected)", "testcase": false, "constructor": false, "invocations": ["toString", "url", "getMessage"]}, "repository": {"repo_id": 72189814, "url": "https://github.com/mobgen/halo-android", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 3343, "license": "licensed"}}