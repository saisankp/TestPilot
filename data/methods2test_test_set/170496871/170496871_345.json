{"test_class": {"identifier": "CovarianceMatricesAggregatorTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/ml/src/test/java/org/apache/ignite/ml/clustering/gmm/CovarianceMatricesAggregatorTest.java"}, "test_case": {"identifier": "testPlus", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPlus() {\n        Vector mean = VectorUtils.of(1, 0);\n\n        CovarianceMatricesAggregator agg1 = new CovarianceMatricesAggregator(mean, identity(2), 1);\n        CovarianceMatricesAggregator agg2 = new CovarianceMatricesAggregator(mean, identity(2).times(2), 3);\n        CovarianceMatricesAggregator res = agg1.plus(agg2);\n\n        assertArrayEquals(mean.asArray(), res.mean().asArray(), 1e-4);\n        assertArrayEquals(identity(2).times(3).getStorage().data(), res.weightedSum().getStorage().data(), 1e-4);\n        assertEquals(4, res.rowCount());\n    }", "signature": "void testPlus()", "full_signature": "@Test public void testPlus()", "class_method_signature": "CovarianceMatricesAggregatorTest.testPlus()", "testcase": true, "constructor": false, "invocations": ["of", "identity", "times", "identity", "plus", "assertArrayEquals", "asArray", "asArray", "mean", "assertArrayEquals", "data", "getStorage", "times", "identity", "data", "getStorage", "weightedSum", "assertEquals", "rowCount"]}, "focal_class": {"identifier": "CovarianceMatricesAggregator", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static final long serialVersionUID = 4163253784526780812L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 4163253784526780812L", "var_name": "serialVersionUID"}, {"original_string": "private final Vector mean;", "modifier": "private final", "type": "Vector", "declarator": "mean", "var_name": "mean"}, {"original_string": "private Matrix weightedSum;", "modifier": "private", "type": "Matrix", "declarator": "weightedSum", "var_name": "weightedSum"}, {"original_string": "private int rowCount;", "modifier": "private", "type": "int", "declarator": "rowCount", "var_name": "rowCount"}], "methods": [{"identifier": "CovarianceMatricesAggregator", "parameters": "(Vector mean)", "modifiers": "", "return": "", "signature": " CovarianceMatricesAggregator(Vector mean)", "full_signature": "  CovarianceMatricesAggregator(Vector mean)", "class_method_signature": "CovarianceMatricesAggregator.CovarianceMatricesAggregator(Vector mean)", "testcase": false, "constructor": true}, {"identifier": "CovarianceMatricesAggregator", "parameters": "(Vector mean, Matrix weightedSum, int rowCount)", "modifiers": "", "return": "", "signature": " CovarianceMatricesAggregator(Vector mean, Matrix weightedSum, int rowCount)", "full_signature": "  CovarianceMatricesAggregator(Vector mean, Matrix weightedSum, int rowCount)", "class_method_signature": "CovarianceMatricesAggregator.CovarianceMatricesAggregator(Vector mean, Matrix weightedSum, int rowCount)", "testcase": false, "constructor": true}, {"identifier": "computeCovariances", "parameters": "(Dataset<EmptyContext, GmmPartitionData> dataset,\n        Vector clusterProbs, Vector[] means)", "modifiers": "static", "return": "List<Matrix>", "signature": "List<Matrix> computeCovariances(Dataset<EmptyContext, GmmPartitionData> dataset,\n        Vector clusterProbs, Vector[] means)", "full_signature": "static List<Matrix> computeCovariances(Dataset<EmptyContext, GmmPartitionData> dataset,\n        Vector clusterProbs, Vector[] means)", "class_method_signature": "CovarianceMatricesAggregator.computeCovariances(Dataset<EmptyContext, GmmPartitionData> dataset,\n        Vector clusterProbs, Vector[] means)", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(Vector x, double pcxi)", "modifiers": "", "return": "void", "signature": "void add(Vector x, double pcxi)", "full_signature": " void add(Vector x, double pcxi)", "class_method_signature": "CovarianceMatricesAggregator.add(Vector x, double pcxi)", "testcase": false, "constructor": false}, {"identifier": "plus", "parameters": "(CovarianceMatricesAggregator other)", "modifiers": "", "return": "CovarianceMatricesAggregator", "signature": "CovarianceMatricesAggregator plus(CovarianceMatricesAggregator other)", "full_signature": " CovarianceMatricesAggregator plus(CovarianceMatricesAggregator other)", "class_method_signature": "CovarianceMatricesAggregator.plus(CovarianceMatricesAggregator other)", "testcase": false, "constructor": false}, {"identifier": "map", "parameters": "(GmmPartitionData data, Vector[] means)", "modifiers": "static", "return": "List<CovarianceMatricesAggregator>", "signature": "List<CovarianceMatricesAggregator> map(GmmPartitionData data, Vector[] means)", "full_signature": "static List<CovarianceMatricesAggregator> map(GmmPartitionData data, Vector[] means)", "class_method_signature": "CovarianceMatricesAggregator.map(GmmPartitionData data, Vector[] means)", "testcase": false, "constructor": false}, {"identifier": "covariance", "parameters": "(double clusterProb)", "modifiers": "private", "return": "Matrix", "signature": "Matrix covariance(double clusterProb)", "full_signature": "private Matrix covariance(double clusterProb)", "class_method_signature": "CovarianceMatricesAggregator.covariance(double clusterProb)", "testcase": false, "constructor": false}, {"identifier": "reduce", "parameters": "(List<CovarianceMatricesAggregator> l,\n        List<CovarianceMatricesAggregator> r)", "modifiers": "static", "return": "List<CovarianceMatricesAggregator>", "signature": "List<CovarianceMatricesAggregator> reduce(List<CovarianceMatricesAggregator> l,\n        List<CovarianceMatricesAggregator> r)", "full_signature": "static List<CovarianceMatricesAggregator> reduce(List<CovarianceMatricesAggregator> l,\n        List<CovarianceMatricesAggregator> r)", "class_method_signature": "CovarianceMatricesAggregator.reduce(List<CovarianceMatricesAggregator> l,\n        List<CovarianceMatricesAggregator> r)", "testcase": false, "constructor": false}, {"identifier": "mean", "parameters": "()", "modifiers": "", "return": "Vector", "signature": "Vector mean()", "full_signature": " Vector mean()", "class_method_signature": "CovarianceMatricesAggregator.mean()", "testcase": false, "constructor": false}, {"identifier": "weightedSum", "parameters": "()", "modifiers": "", "return": "Matrix", "signature": "Matrix weightedSum()", "full_signature": " Matrix weightedSum()", "class_method_signature": "CovarianceMatricesAggregator.weightedSum()", "testcase": false, "constructor": false}, {"identifier": "rowCount", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int rowCount()", "full_signature": "public int rowCount()", "class_method_signature": "CovarianceMatricesAggregator.rowCount()", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/clustering/gmm/CovarianceMatricesAggregator.java"}, "focal_method": {"identifier": "plus", "parameters": "(CovarianceMatricesAggregator other)", "modifiers": "", "return": "CovarianceMatricesAggregator", "body": "CovarianceMatricesAggregator plus(CovarianceMatricesAggregator other) {\n        A.ensure(this.mean.equals(other.mean), \"this.mean == other.mean\");\n\n        return new CovarianceMatricesAggregator(\n            mean,\n            this.weightedSum.plus(other.weightedSum),\n            this.rowCount + other.rowCount\n        );\n    }", "signature": "CovarianceMatricesAggregator plus(CovarianceMatricesAggregator other)", "full_signature": " CovarianceMatricesAggregator plus(CovarianceMatricesAggregator other)", "class_method_signature": "CovarianceMatricesAggregator.plus(CovarianceMatricesAggregator other)", "testcase": false, "constructor": false, "invocations": ["ensure", "equals", "plus"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}