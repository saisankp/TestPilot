{"test_class": {"identifier": "TestSrgsXmlGrammarIdentifier", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SrgsXmlGrammarIdentifier identifier;", "modifier": "private", "type": "SrgsXmlGrammarIdentifier", "declarator": "identifier", "var_name": "identifier"}, {"original_string": "private static final String BASE21 = \"/irp_vxml21/\";", "modifier": "private static final", "type": "String", "declarator": "BASE21 = \"/irp_vxml21/\"", "var_name": "BASE21"}, {"original_string": "private static final String BASE20 = \"/irp_vxml20/\";", "modifier": "private static final", "type": "String", "declarator": "BASE20 = \"/irp_vxml20/\"", "var_name": "BASE20"}], "file": "org.jvoicexml/src/test/java/org/jvoicexml/interpreter/grammar/identifier/TestSrgsXmlGrammarIdentifier.java"}, "test_case": {"identifier": "testValidHeader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testValidHeader() {\n        final GrammarDocument doc = GrammarUtil.getGrammarFromString(\n                \"<?xml version=\\\"1.0\\\" ?>\"\n                + \"<grammar version=\\\"1.0\\\" \"\n                + \"xmlns=\\\"http://www.w3.org/2001/06/grammar\\\" \"\n                + \"></grammar>\");\n\n        final GrammarType type = identifier.identify(doc);\n        Assert.assertEquals(GrammarType.SRGS_XML, type);\n    }", "signature": "void testValidHeader()", "full_signature": "@Test public void testValidHeader()", "class_method_signature": "TestSrgsXmlGrammarIdentifier.testValidHeader()", "testcase": true, "constructor": false, "invocations": ["getGrammarFromString", "identify", "assertEquals"]}, "focal_class": {"identifier": "SrgsXmlGrammarIdentifier", "superclass": "", "interfaces": "implements GrammarIdentifier", "fields": [{"original_string": "private static final Logger LOGGER =\n            LogManager.getLogger(SrgsXmlGrammarIdentifier.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER =\n            LogManager.getLogger(SrgsXmlGrammarIdentifier.class)", "var_name": "LOGGER"}], "methods": [{"identifier": "identify", "parameters": "(final GrammarDocument grammar)", "modifiers": "@Override public", "return": "GrammarType", "signature": "GrammarType identify(final GrammarDocument grammar)", "full_signature": "@Override public GrammarType identify(final GrammarDocument grammar)", "class_method_signature": "SrgsXmlGrammarIdentifier.identify(final GrammarDocument grammar)", "testcase": false, "constructor": false}, {"identifier": "isVersionCompliant", "parameters": "(final Grammar grammar)", "modifiers": "private", "return": "boolean", "signature": "boolean isVersionCompliant(final Grammar grammar)", "full_signature": "private boolean isVersionCompliant(final Grammar grammar)", "class_method_signature": "SrgsXmlGrammarIdentifier.isVersionCompliant(final Grammar grammar)", "testcase": false, "constructor": false}, {"identifier": "isModeCompliant", "parameters": "(final Grammar grammar)", "modifiers": "private", "return": "boolean", "signature": "boolean isModeCompliant(final Grammar grammar)", "full_signature": "private boolean isModeCompliant(final Grammar grammar)", "class_method_signature": "SrgsXmlGrammarIdentifier.isModeCompliant(final Grammar grammar)", "testcase": false, "constructor": false}, {"identifier": "getSupportedType", "parameters": "()", "modifiers": "@Override public", "return": "GrammarType", "signature": "GrammarType getSupportedType()", "full_signature": "@Override public GrammarType getSupportedType()", "class_method_signature": "SrgsXmlGrammarIdentifier.getSupportedType()", "testcase": false, "constructor": false}], "file": "org.jvoicexml/src/main/java/org/jvoicexml/interpreter/grammar/identifier/SrgsXmlGrammarIdentifier.java"}, "focal_method": {"identifier": "identify", "parameters": "(final GrammarDocument grammar)", "modifiers": "@Override public", "return": "GrammarType", "body": "@Override\n    public GrammarType identify(final GrammarDocument grammar) {\n        /* make sure grammar is neither null nor empty */\n        if (grammar == null) {\n            if (LOGGER.isDebugEnabled()) {\n                LOGGER.debug(\"grammar is null or empty\");\n            }\n            return null;\n        }\n\n        final byte[] buffer = grammar.getBuffer();\n        if (buffer == null) {\n            if (LOGGER.isDebugEnabled()) {\n                LOGGER.debug(\"grammar buffer is null or empty\");\n            }\n            return null;\n            \n        }\n        try {\n            final ByteArrayInputStream stream =\n                new ByteArrayInputStream(buffer);\n            final InputSource input = new InputSource(stream);\n            final SrgsXmlDocument srgs = new SrgsXmlDocument(input);\n\n            /* no exception, this must be an XML element */\n            /* Lets test, if it is srgs+xml */\n            final Grammar gr = srgs.getGrammar();\n            if (gr == null) {\n                return null;\n            }\n            if (LOGGER.isDebugEnabled()) {\n                LOGGER.debug(\"Found a SRGS XML grammar header.\");\n            }\n\n            /* Is there a standard compliant version attribute? */\n            if (!isVersionCompliant(gr)) {\n                return null;\n            }\n\n            /* Is there a standard compliant mode attribute? */\n            if (!isModeCompliant(gr)) {\n                return null;\n            }\n        } catch (ParserConfigurationException e) {\n            if (LOGGER.isDebugEnabled()) {\n                LOGGER.debug(e.getMessage(), e);\n            }\n            return null;\n        } catch (SAXException e) {\n            if (LOGGER.isDebugEnabled()) {\n                LOGGER.debug(e.getMessage(), e);\n            }\n            return null;\n        } catch (IOException e) {\n            if (LOGGER.isDebugEnabled()) {\n                LOGGER.debug(e.getMessage(), e);\n            }\n            return null;\n        }\n\n        return GrammarType.SRGS_XML;\n    }", "signature": "GrammarType identify(final GrammarDocument grammar)", "full_signature": "@Override public GrammarType identify(final GrammarDocument grammar)", "class_method_signature": "SrgsXmlGrammarIdentifier.identify(final GrammarDocument grammar)", "testcase": false, "constructor": false, "invocations": ["isDebugEnabled", "debug", "getBuffer", "isDebugEnabled", "debug", "getGrammar", "isDebugEnabled", "debug", "isVersionCompliant", "isModeCompliant", "isDebugEnabled", "debug", "getMessage", "isDebugEnabled", "debug", "getMessage", "isDebugEnabled", "debug", "getMessage"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}