{"test_class": {"identifier": "PrivateKeyEd25519Test", "superclass": "", "interfaces": "", "fields": [], "file": "eddsa/src/test/java/io/moatwel/crypto/eddsa/ed25519/PrivateKeyEd25519Test.java"}, "test_case": {"identifier": "success_SameByteArray_1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void success_SameByteArray_1() {\n        byte[] seed = new byte[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};\n        PrivateKey privateKey1 = PrivateKeyEd25519.fromBytes(seed);\n\n        assertThat(privateKey1.getRaw(), is(seed));\n    }", "signature": "void success_SameByteArray_1()", "full_signature": "@Test public void success_SameByteArray_1()", "class_method_signature": "PrivateKeyEd25519Test.success_SameByteArray_1()", "testcase": true, "constructor": false, "invocations": ["fromBytes", "assertThat", "getRaw", "is"]}, "focal_class": {"identifier": "PrivateKeyEd25519", "superclass": "extends PrivateKey", "interfaces": "", "fields": [], "methods": [{"identifier": "PrivateKeyEd25519", "parameters": "(byte[] value)", "modifiers": "private", "return": "", "signature": " PrivateKeyEd25519(byte[] value)", "full_signature": "private  PrivateKeyEd25519(byte[] value)", "class_method_signature": "PrivateKeyEd25519.PrivateKeyEd25519(byte[] value)", "testcase": false, "constructor": true}, {"identifier": "fromHexString", "parameters": "(String hexString)", "modifiers": "public static", "return": "PrivateKey", "signature": "PrivateKey fromHexString(String hexString)", "full_signature": "public static PrivateKey fromHexString(String hexString)", "class_method_signature": "PrivateKeyEd25519.fromHexString(String hexString)", "testcase": false, "constructor": false}, {"identifier": "fromBytes", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "PrivateKey", "signature": "PrivateKey fromBytes(byte[] bytes)", "full_signature": "public static PrivateKey fromBytes(byte[] bytes)", "class_method_signature": "PrivateKeyEd25519.fromBytes(byte[] bytes)", "testcase": false, "constructor": false}, {"identifier": "random", "parameters": "()", "modifiers": "public static", "return": "PrivateKey", "signature": "PrivateKey random()", "full_signature": "public static PrivateKey random()", "class_method_signature": "PrivateKeyEd25519.random()", "testcase": false, "constructor": false}, {"identifier": "getScalarSeed", "parameters": "(HashDelegate hashDelegate)", "modifiers": "@Override public", "return": "BigInteger", "signature": "BigInteger getScalarSeed(HashDelegate hashDelegate)", "full_signature": "@Override public BigInteger getScalarSeed(HashDelegate hashDelegate)", "class_method_signature": "PrivateKeyEd25519.getScalarSeed(HashDelegate hashDelegate)", "testcase": false, "constructor": false}], "file": "eddsa/src/main/java/io/moatwel/crypto/eddsa/ed25519/PrivateKeyEd25519.java"}, "focal_method": {"identifier": "fromBytes", "parameters": "(byte[] bytes)", "modifiers": "public static", "return": "PrivateKey", "body": "public static PrivateKey fromBytes(byte[] bytes) {\n        return new PrivateKeyEd25519(bytes);\n    }", "signature": "PrivateKey fromBytes(byte[] bytes)", "full_signature": "public static PrivateKey fromBytes(byte[] bytes)", "class_method_signature": "PrivateKeyEd25519.fromBytes(byte[] bytes)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 136564461, "url": "https://github.com/halu5071/edwards", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 626, "license": "licensed"}}