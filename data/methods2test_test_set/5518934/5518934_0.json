{"test_class": {"identifier": "GlacierUploaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "glacieruploader-impl/src/test/java/de/kopis/glacier/GlacierUploaderTest.java"}, "test_case": {"identifier": "canRunGlacierUploader", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void canRunGlacierUploader() {\n        final String[] args = {\"--help\", \"--endpoint\", \"eu-central-1\", \"--credentials\", \"foo.txt\"};\n        GlacierUploader.main(args);\n    }", "signature": "void canRunGlacierUploader()", "full_signature": "@Test public void canRunGlacierUploader()", "class_method_signature": "GlacierUploaderTest.canRunGlacierUploader()", "testcase": true, "constructor": false, "invocations": ["main"]}, "focal_class": {"identifier": "GlacierUploader", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(GlacierUploader.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(GlacierUploader.class)", "var_name": "LOG"}], "methods": [{"identifier": "GlacierUploader", "parameters": "()", "modifiers": "private", "return": "", "signature": " GlacierUploader()", "full_signature": "private  GlacierUploader()", "class_method_signature": "GlacierUploader.GlacierUploader()", "testcase": false, "constructor": true}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "GlacierUploader.main(String[] args)", "testcase": false, "constructor": false}, {"identifier": "setupConfig", "parameters": "()", "modifiers": "public static", "return": "CompositeConfiguration", "signature": "CompositeConfiguration setupConfig()", "full_signature": "public static CompositeConfiguration setupConfig()", "class_method_signature": "GlacierUploader.setupConfig()", "testcase": false, "constructor": false}, {"identifier": "setupConfig", "parameters": "(File configFile)", "modifiers": "public static", "return": "CompositeConfiguration", "signature": "CompositeConfiguration setupConfig(File configFile)", "full_signature": "public static CompositeConfiguration setupConfig(File configFile)", "class_method_signature": "GlacierUploader.setupConfig(File configFile)", "testcase": false, "constructor": false}, {"identifier": "findAndExecCommand", "parameters": "(final String region, OptionSet options, GlacierUploaderOptionParser optionParser)", "modifiers": "private static", "return": "void", "signature": "void findAndExecCommand(final String region, OptionSet options, GlacierUploaderOptionParser optionParser)", "full_signature": "private static void findAndExecCommand(final String region, OptionSet options, GlacierUploaderOptionParser optionParser)", "class_method_signature": "GlacierUploader.findAndExecCommand(final String region, OptionSet options, GlacierUploaderOptionParser optionParser)", "testcase": false, "constructor": false}], "file": "glacieruploader-impl/src/main/java/de/kopis/glacier/GlacierUploader.java"}, "focal_method": {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "body": "public static void main(String[] args) {\n        // Get our options\n        final GlacierUploaderOptionParser optionParser = new GlacierUploaderOptionParser(setupConfig());\n        final OptionSet options;\n\n        // Parse them\n        try {\n            options = optionParser.parse(args);\n        } catch (Exception e) {\n            LOG.error(\"Something went wrong parsing the arguments\", e);\n            return;\n        }\n\n        String region = options.valueOf(optionParser.region);\n        // check deprecated, but supported config parameters\n        if(StringUtils.isBlank(region) && options.has(optionParser.endpoint)) {\n            LOG.warn(\"Option {} is deprecated, please switch to {}\", optionParser.endpoint, optionParser.region);\n            String endpointUrl = options.valueOf(optionParser.endpoint);\n            region = optionParser.parseEndpointToRegion(endpointUrl);\n            LOG.debug(\"Parsed {} from configured endpoint\", region , endpointUrl);\n        }\n\n        // check deprecated config parameters\n        final List<? extends OptionSpec<? extends Serializable>> specs = Arrays.asList(optionParser.credentials);\n        for(OptionSpec spec : specs) {\n            if (options.has(spec)) {\n                LOG.info(\"Option {} is deprecated, will be ignored\", specs);\n            }\n        }\n\n        // last sanity check\n        if(region == null) {\n            LOG.error(\"Region is not configured.\");\n        }\n\n        // Launch\n        findAndExecCommand(region, options, optionParser);\n    }", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "GlacierUploader.main(String[] args)", "testcase": false, "constructor": false, "invocations": ["setupConfig", "parse", "error", "valueOf", "isBlank", "has", "warn", "valueOf", "parseEndpointToRegion", "debug", "asList", "has", "info", "error", "findAndExecCommand"]}, "repository": {"repo_id": 5518934, "url": "https://github.com/MoriTanosuke/glacieruploader", "language": "Java", "is_fork": false, "fork_count": 54, "stargazer_count": 243, "size": 6248, "license": "licensed"}}