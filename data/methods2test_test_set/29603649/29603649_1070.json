{"test_class": {"identifier": "ProxyServerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final int PROXY_TIMEOUT = 60000;", "modifier": "public static final", "type": "int", "declarator": "PROXY_TIMEOUT = 60000", "var_name": "PROXY_TIMEOUT"}, {"original_string": "private final ProxyServer server = new ProxyServer(0);", "modifier": "private final", "type": "ProxyServer", "declarator": "server = new ProxyServer(0)", "var_name": "server"}], "file": "browsermob-proxy/src/test/java/net/lightbody/bmp/proxy/ProxyServerTest.java"}, "test_case": {"identifier": "portAllocation", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void portAllocation() throws Exception {\n        assertThat(server.getPort(), not(equalTo(0)));\n    }", "signature": "void portAllocation()", "full_signature": "@Test public void portAllocation()", "class_method_signature": "ProxyServerTest.portAllocation()", "testcase": true, "constructor": false, "invocations": ["assertThat", "getPort", "not", "equalTo"]}, "focal_class": {"identifier": "ProxyServer", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static int PROXY_TIMEOUT = 240000;", "modifier": "public static", "type": "int", "declarator": "PROXY_TIMEOUT = 240000", "var_name": "PROXY_TIMEOUT"}, {"original_string": "private static final HarNameVersion CREATOR = new HarNameVersion(\"BrowserMob Proxy - for Wilma\", \"2.2\");", "modifier": "private static final", "type": "HarNameVersion", "declarator": "CREATOR = new HarNameVersion(\"BrowserMob Proxy - for Wilma\", \"2.2\")", "var_name": "CREATOR"}, {"original_string": "private static final Log LOG = new Log();", "modifier": "private static final", "type": "Log", "declarator": "LOG = new Log()", "var_name": "LOG"}, {"original_string": "private static Boolean responseVolatile = new Boolean(false);", "modifier": "private static", "type": "Boolean", "declarator": "responseVolatile = new Boolean(false)", "var_name": "responseVolatile"}, {"original_string": "private Server server;", "modifier": "private", "type": "Server", "declarator": "server", "var_name": "server"}, {"original_string": "private int port = -1;", "modifier": "private", "type": "int", "declarator": "port = -1", "var_name": "port"}, {"original_string": "private static Boolean shouldKeepSslConnectionAlive = new Boolean(false);", "modifier": "private static", "type": "Boolean", "declarator": "shouldKeepSslConnectionAlive = new Boolean(false)", "var_name": "shouldKeepSslConnectionAlive"}, {"original_string": "private BrowserMobHttpClient client;", "modifier": "private", "type": "BrowserMobHttpClient", "declarator": "client", "var_name": "client"}, {"original_string": "private StreamManager streamManager;", "modifier": "private", "type": "StreamManager", "declarator": "streamManager", "var_name": "streamManager"}, {"original_string": "private HarPage currentPage;", "modifier": "private", "type": "HarPage", "declarator": "currentPage", "var_name": "currentPage"}, {"original_string": "private BrowserMobProxyHandler handler;", "modifier": "private", "type": "BrowserMobProxyHandler", "declarator": "handler", "var_name": "handler"}, {"original_string": "private int pageCount = 1;", "modifier": "private", "type": "int", "declarator": "pageCount = 1", "var_name": "pageCount"}, {"original_string": "private final AtomicInteger requestCounter = new AtomicInteger(0);", "modifier": "private final", "type": "AtomicInteger", "declarator": "requestCounter = new AtomicInteger(0)", "var_name": "requestCounter"}], "methods": [{"identifier": "ProxyServer", "parameters": "()", "modifiers": "public", "return": "", "signature": " ProxyServer()", "full_signature": "public  ProxyServer()", "class_method_signature": "ProxyServer.ProxyServer()", "testcase": false, "constructor": true}, {"identifier": "ProxyServer", "parameters": "(final int port)", "modifiers": "public", "return": "", "signature": " ProxyServer(final int port)", "full_signature": "public  ProxyServer(final int port)", "class_method_signature": "ProxyServer.ProxyServer(final int port)", "testcase": false, "constructor": true}, {"identifier": "start", "parameters": "(final int requestTimeOut)", "modifiers": "public", "return": "void", "signature": "void start(final int requestTimeOut)", "full_signature": "public void start(final int requestTimeOut)", "class_method_signature": "ProxyServer.start(final int requestTimeOut)", "testcase": false, "constructor": false}, {"identifier": "cleanup", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void cleanup()", "full_signature": "public void cleanup()", "class_method_signature": "ProxyServer.cleanup()", "testcase": false, "constructor": false}, {"identifier": "stop", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void stop()", "full_signature": "public void stop()", "class_method_signature": "ProxyServer.stop()", "testcase": false, "constructor": false}, {"identifier": "getPort", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPort()", "full_signature": "public int getPort()", "class_method_signature": "ProxyServer.getPort()", "testcase": false, "constructor": false}, {"identifier": "setPort", "parameters": "(final int port)", "modifiers": "public", "return": "void", "signature": "void setPort(final int port)", "full_signature": "public void setPort(final int port)", "class_method_signature": "ProxyServer.setPort(final int port)", "testcase": false, "constructor": false}, {"identifier": "getHar", "parameters": "()", "modifiers": "public", "return": "Har", "signature": "Har getHar()", "full_signature": "public Har getHar()", "class_method_signature": "ProxyServer.getHar()", "testcase": false, "constructor": false}, {"identifier": "newHar", "parameters": "(final String initialPageRef)", "modifiers": "public", "return": "Har", "signature": "Har newHar(final String initialPageRef)", "full_signature": "public Har newHar(final String initialPageRef)", "class_method_signature": "ProxyServer.newHar(final String initialPageRef)", "testcase": false, "constructor": false}, {"identifier": "newPage", "parameters": "(String pageRef)", "modifiers": "public", "return": "void", "signature": "void newPage(String pageRef)", "full_signature": "public void newPage(String pageRef)", "class_method_signature": "ProxyServer.newPage(String pageRef)", "testcase": false, "constructor": false}, {"identifier": "endPage", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void endPage()", "full_signature": "public void endPage()", "class_method_signature": "ProxyServer.endPage()", "testcase": false, "constructor": false}, {"identifier": "setRetryCount", "parameters": "(final int count)", "modifiers": "public", "return": "void", "signature": "void setRetryCount(final int count)", "full_signature": "public void setRetryCount(final int count)", "class_method_signature": "ProxyServer.setRetryCount(final int count)", "testcase": false, "constructor": false}, {"identifier": "remapHost", "parameters": "(final String source, final String target)", "modifiers": "public", "return": "void", "signature": "void remapHost(final String source, final String target)", "full_signature": "public void remapHost(final String source, final String target)", "class_method_signature": "ProxyServer.remapHost(final String source, final String target)", "testcase": false, "constructor": false}, {"identifier": "addRequestInterceptor", "parameters": "(final RequestInterceptor interceptor)", "modifiers": "public", "return": "void", "signature": "void addRequestInterceptor(final RequestInterceptor interceptor)", "full_signature": "public void addRequestInterceptor(final RequestInterceptor interceptor)", "class_method_signature": "ProxyServer.addRequestInterceptor(final RequestInterceptor interceptor)", "testcase": false, "constructor": false}, {"identifier": "addResponseInterceptor", "parameters": "(final ResponseInterceptor interceptor)", "modifiers": "public", "return": "void", "signature": "void addResponseInterceptor(final ResponseInterceptor interceptor)", "full_signature": "public void addResponseInterceptor(final ResponseInterceptor interceptor)", "class_method_signature": "ProxyServer.addResponseInterceptor(final ResponseInterceptor interceptor)", "testcase": false, "constructor": false}, {"identifier": "getStreamManager", "parameters": "()", "modifiers": "public", "return": "StreamManager", "signature": "StreamManager getStreamManager()", "full_signature": "public StreamManager getStreamManager()", "class_method_signature": "ProxyServer.getStreamManager()", "testcase": false, "constructor": false}, {"identifier": "setRequestTimeout", "parameters": "(final int requestTimeout)", "modifiers": "public", "return": "void", "signature": "void setRequestTimeout(final int requestTimeout)", "full_signature": "public void setRequestTimeout(final int requestTimeout)", "class_method_signature": "ProxyServer.setRequestTimeout(final int requestTimeout)", "testcase": false, "constructor": false}, {"identifier": "setSocketOperationTimeout", "parameters": "(final int readTimeout)", "modifiers": "public", "return": "void", "signature": "void setSocketOperationTimeout(final int readTimeout)", "full_signature": "public void setSocketOperationTimeout(final int readTimeout)", "class_method_signature": "ProxyServer.setSocketOperationTimeout(final int readTimeout)", "testcase": false, "constructor": false}, {"identifier": "setConnectionTimeout", "parameters": "(final int connectionTimeout)", "modifiers": "public", "return": "void", "signature": "void setConnectionTimeout(final int connectionTimeout)", "full_signature": "public void setConnectionTimeout(final int connectionTimeout)", "class_method_signature": "ProxyServer.setConnectionTimeout(final int connectionTimeout)", "testcase": false, "constructor": false}, {"identifier": "autoBasicAuthorization", "parameters": "(final String domain, final String username, final String password)", "modifiers": "public", "return": "void", "signature": "void autoBasicAuthorization(final String domain, final String username, final String password)", "full_signature": "public void autoBasicAuthorization(final String domain, final String username, final String password)", "class_method_signature": "ProxyServer.autoBasicAuthorization(final String domain, final String username, final String password)", "testcase": false, "constructor": false}, {"identifier": "rewriteUrl", "parameters": "(final String match, final String replace)", "modifiers": "public", "return": "void", "signature": "void rewriteUrl(final String match, final String replace)", "full_signature": "public void rewriteUrl(final String match, final String replace)", "class_method_signature": "ProxyServer.rewriteUrl(final String match, final String replace)", "testcase": false, "constructor": false}, {"identifier": "blacklistRequests", "parameters": "(final String pattern, final int responseCode)", "modifiers": "public", "return": "void", "signature": "void blacklistRequests(final String pattern, final int responseCode)", "full_signature": "public void blacklistRequests(final String pattern, final int responseCode)", "class_method_signature": "ProxyServer.blacklistRequests(final String pattern, final int responseCode)", "testcase": false, "constructor": false}, {"identifier": "whitelistRequests", "parameters": "(final String[] patterns, final int responseCode)", "modifiers": "public", "return": "void", "signature": "void whitelistRequests(final String[] patterns, final int responseCode)", "full_signature": "public void whitelistRequests(final String[] patterns, final int responseCode)", "class_method_signature": "ProxyServer.whitelistRequests(final String[] patterns, final int responseCode)", "testcase": false, "constructor": false}, {"identifier": "addHeader", "parameters": "(final String name, final String value)", "modifiers": "public", "return": "void", "signature": "void addHeader(final String name, final String value)", "full_signature": "public void addHeader(final String name, final String value)", "class_method_signature": "ProxyServer.addHeader(final String name, final String value)", "testcase": false, "constructor": false}, {"identifier": "setCaptureHeaders", "parameters": "(final boolean captureHeaders)", "modifiers": "public", "return": "void", "signature": "void setCaptureHeaders(final boolean captureHeaders)", "full_signature": "public void setCaptureHeaders(final boolean captureHeaders)", "class_method_signature": "ProxyServer.setCaptureHeaders(final boolean captureHeaders)", "testcase": false, "constructor": false}, {"identifier": "setCaptureContent", "parameters": "(final boolean captureContent)", "modifiers": "public", "return": "void", "signature": "void setCaptureContent(final boolean captureContent)", "full_signature": "public void setCaptureContent(final boolean captureContent)", "class_method_signature": "ProxyServer.setCaptureContent(final boolean captureContent)", "testcase": false, "constructor": false}, {"identifier": "setCaptureBinaryContent", "parameters": "(final boolean captureBinaryContent)", "modifiers": "public", "return": "void", "signature": "void setCaptureBinaryContent(final boolean captureBinaryContent)", "full_signature": "public void setCaptureBinaryContent(final boolean captureBinaryContent)", "class_method_signature": "ProxyServer.setCaptureBinaryContent(final boolean captureBinaryContent)", "testcase": false, "constructor": false}, {"identifier": "clearDNSCache", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clearDNSCache()", "full_signature": "public void clearDNSCache()", "class_method_signature": "ProxyServer.clearDNSCache()", "testcase": false, "constructor": false}, {"identifier": "setDNSCacheTimeout", "parameters": "(final int timeout)", "modifiers": "public", "return": "void", "signature": "void setDNSCacheTimeout(final int timeout)", "full_signature": "public void setDNSCacheTimeout(final int timeout)", "class_method_signature": "ProxyServer.setDNSCacheTimeout(final int timeout)", "testcase": false, "constructor": false}, {"identifier": "waitForNetworkTrafficToStop", "parameters": "(final long quietPeriodInMs, final long timeoutInMs)", "modifiers": "public", "return": "void", "signature": "void waitForNetworkTrafficToStop(final long quietPeriodInMs, final long timeoutInMs)", "full_signature": "public void waitForNetworkTrafficToStop(final long quietPeriodInMs, final long timeoutInMs)", "class_method_signature": "ProxyServer.waitForNetworkTrafficToStop(final long quietPeriodInMs, final long timeoutInMs)", "testcase": false, "constructor": false}, {"identifier": "setOptions", "parameters": "(final Map<String, String> options)", "modifiers": "public", "return": "void", "signature": "void setOptions(final Map<String, String> options)", "full_signature": "public void setOptions(final Map<String, String> options)", "class_method_signature": "ProxyServer.setOptions(final Map<String, String> options)", "testcase": false, "constructor": false}, {"identifier": "getResponseVolatile", "parameters": "()", "modifiers": "public static", "return": "Boolean", "signature": "Boolean getResponseVolatile()", "full_signature": "public static Boolean getResponseVolatile()", "class_method_signature": "ProxyServer.getResponseVolatile()", "testcase": false, "constructor": false}, {"identifier": "setResponseVolatile", "parameters": "(Boolean responseVolatile)", "modifiers": "public static", "return": "void", "signature": "void setResponseVolatile(Boolean responseVolatile)", "full_signature": "public static void setResponseVolatile(Boolean responseVolatile)", "class_method_signature": "ProxyServer.setResponseVolatile(Boolean responseVolatile)", "testcase": false, "constructor": false}, {"identifier": "getShouldKeepSslConnectionAlive", "parameters": "()", "modifiers": "public static", "return": "Boolean", "signature": "Boolean getShouldKeepSslConnectionAlive()", "full_signature": "public static Boolean getShouldKeepSslConnectionAlive()", "class_method_signature": "ProxyServer.getShouldKeepSslConnectionAlive()", "testcase": false, "constructor": false}, {"identifier": "setShouldKeepSslConnectionAlive", "parameters": "(Boolean shouldKeepSslConnectionAlive)", "modifiers": "public static", "return": "void", "signature": "void setShouldKeepSslConnectionAlive(Boolean shouldKeepSslConnectionAlive)", "full_signature": "public static void setShouldKeepSslConnectionAlive(Boolean shouldKeepSslConnectionAlive)", "class_method_signature": "ProxyServer.setShouldKeepSslConnectionAlive(Boolean shouldKeepSslConnectionAlive)", "testcase": false, "constructor": false}], "file": "browsermob-proxy/src/main/java/net/lightbody/bmp/proxy/ProxyServer.java"}, "focal_method": {"identifier": "getPort", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int getPort() {\n        return port;\n    }", "signature": "int getPort()", "full_signature": "public int getPort()", "class_method_signature": "ProxyServer.getPort()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}