{"test_class": {"identifier": "FusekiBookTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FusekiBook book;", "modifier": "private", "type": "FusekiBook", "declarator": "book", "var_name": "book"}, {"original_string": "private Board board;", "modifier": "private", "type": "Board", "declarator": "board", "var_name": "board"}, {"original_string": "private CoordinateSystem coords;", "modifier": "private", "type": "CoordinateSystem", "declarator": "coords", "var_name": "coords"}], "file": "src/edu/lclark/orego/book/FusekiBookTest.java"}, "test_case": {"identifier": "testFusekiBook1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testFusekiBook1() {\n\t\tString[] correct;\n\t\tcorrect = new String[] { \"Q4\", \"D16\", \"C4\" };\n\t\tfor (final String move : correct) {\n\t\t\tfinal short m = book.nextMove(board);\n\t\t\tassertEquals(move, coords.toString(m));\n\t\t\tboard.play(m);\n\t\t}\n\t\tboard.play(\"h8\");\n\t\tassertEquals(NO_POINT, book.nextMove(board));\n\t}", "signature": "void testFusekiBook1()", "full_signature": "@Test public void testFusekiBook1()", "class_method_signature": "FusekiBookTest.testFusekiBook1()", "testcase": true, "constructor": false, "invocations": ["nextMove", "assertEquals", "toString", "play", "play", "assertEquals", "nextMove"]}, "focal_class": {"identifier": "FusekiBook", "superclass": "", "interfaces": "implements OpeningBook", "fields": [{"original_string": "private SmallHashMap book;", "modifier": "private", "type": "SmallHashMap", "declarator": "book", "var_name": "book"}, {"original_string": "private int maxMoves;", "modifier": "private", "type": "int", "declarator": "maxMoves", "var_name": "maxMoves"}], "methods": [{"identifier": "FusekiBook", "parameters": "()", "modifiers": "public", "return": "", "signature": " FusekiBook()", "full_signature": "public  FusekiBook()", "class_method_signature": "FusekiBook.FusekiBook()", "testcase": false, "constructor": true}, {"identifier": "FusekiBook", "parameters": "(String directory)", "modifiers": "@SuppressWarnings(\"boxing\") public", "return": "", "signature": " FusekiBook(String directory)", "full_signature": "@SuppressWarnings(\"boxing\") public  FusekiBook(String directory)", "class_method_signature": "FusekiBook.FusekiBook(String directory)", "testcase": false, "constructor": true}, {"identifier": "nextMove", "parameters": "(Board board)", "modifiers": "@Override public", "return": "short", "signature": "short nextMove(Board board)", "full_signature": "@Override public short nextMove(Board board)", "class_method_signature": "FusekiBook.nextMove(Board board)", "testcase": false, "constructor": false}], "file": "src/edu/lclark/orego/book/FusekiBook.java"}, "focal_method": {"identifier": "nextMove", "parameters": "(Board board)", "modifiers": "@Override public", "return": "short", "body": "@Override\n\tpublic short nextMove(Board board) {\n\t\tfinal long fancyHash = board.getFancyHash();\n\t\tif (board.getTurn() < maxMoves) {\n\t\t\tif (book.containsKey(fancyHash)) {\n\t\t\t\tfinal short move = book.get(fancyHash);\n\t\t\t\tif (board.isLegal(move)) {\n\t\t\t\t\treturn move;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn CoordinateSystem.NO_POINT;\n\t}", "signature": "short nextMove(Board board)", "full_signature": "@Override public short nextMove(Board board)", "class_method_signature": "FusekiBook.nextMove(Board board)", "testcase": false, "constructor": false, "invocations": ["getFancyHash", "getTurn", "containsKey", "get", "isLegal"]}, "repository": {"repo_id": 7859424, "url": "https://github.com/Orego/Orego", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 1341444, "license": "licensed"}}