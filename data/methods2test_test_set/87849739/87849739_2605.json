{"test_class": {"identifier": "LiveCommandFactoryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LiveCommandFactory underTest;", "modifier": "private", "type": "LiveCommandFactory", "declarator": "underTest", "var_name": "underTest"}], "file": "signals/commands/live/src/test/java/org/eclipse/ditto/signals/commands/live/LiveCommandFactoryTest.java"}, "test_case": {"identifier": "liveCommandFactoryIsSingleton", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void liveCommandFactoryIsSingleton() {\n        assertThat(underTest).isSameAs(LiveCommandFactory.getInstance());\n    }", "signature": "void liveCommandFactoryIsSingleton()", "full_signature": "@Test public void liveCommandFactoryIsSingleton()", "class_method_signature": "LiveCommandFactoryTest.liveCommandFactoryIsSingleton()", "testcase": true, "constructor": false, "invocations": ["isSameAs", "assertThat", "getInstance"]}, "focal_class": {"identifier": "LiveCommandFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int STRATEGIES_NUMBER = 26;", "modifier": "private static final", "type": "int", "declarator": "STRATEGIES_NUMBER = 26", "var_name": "STRATEGIES_NUMBER"}, {"original_string": "private static final LiveCommandFactory INSTANCE = new LiveCommandFactory();", "modifier": "private static final", "type": "LiveCommandFactory", "declarator": "INSTANCE = new LiveCommandFactory()", "var_name": "INSTANCE"}, {"original_string": "private final Map<String, Function<Command, LiveCommand>> mappingStrategies;", "modifier": "private final", "type": "Map<String, Function<Command, LiveCommand>>", "declarator": "mappingStrategies", "var_name": "mappingStrategies"}], "methods": [{"identifier": "LiveCommandFactory", "parameters": "()", "modifiers": "private", "return": "", "signature": " LiveCommandFactory()", "full_signature": "private  LiveCommandFactory()", "class_method_signature": "LiveCommandFactory.LiveCommandFactory()", "testcase": false, "constructor": true}, {"identifier": "initMappingStrategies", "parameters": "()", "modifiers": "private static", "return": "Map<String, Function<Command, LiveCommand>>", "signature": "Map<String, Function<Command, LiveCommand>> initMappingStrategies()", "full_signature": "private static Map<String, Function<Command, LiveCommand>> initMappingStrategies()", "class_method_signature": "LiveCommandFactory.initMappingStrategies()", "testcase": false, "constructor": false}, {"identifier": "getInstance", "parameters": "()", "modifiers": "@Nonnull public static", "return": "LiveCommandFactory", "signature": "LiveCommandFactory getInstance()", "full_signature": "@Nonnull public static LiveCommandFactory getInstance()", "class_method_signature": "LiveCommandFactory.getInstance()", "testcase": false, "constructor": false}, {"identifier": "getLiveCommand", "parameters": "(@Nonnull final Command<?> command)", "modifiers": "@Nonnull public", "return": "LiveCommand", "signature": "LiveCommand getLiveCommand(@Nonnull final Command<?> command)", "full_signature": "@Nonnull public LiveCommand getLiveCommand(@Nonnull final Command<?> command)", "class_method_signature": "LiveCommandFactory.getLiveCommand(@Nonnull final Command<?> command)", "testcase": false, "constructor": false}], "file": "signals/commands/live/src/main/java/org/eclipse/ditto/signals/commands/live/LiveCommandFactory.java"}, "focal_method": {"identifier": "getInstance", "parameters": "()", "modifiers": "@Nonnull public static", "return": "LiveCommandFactory", "body": "@Nonnull\n    public static LiveCommandFactory getInstance() {\n        return INSTANCE;\n    }", "signature": "LiveCommandFactory getInstance()", "full_signature": "@Nonnull public static LiveCommandFactory getInstance()", "class_method_signature": "LiveCommandFactory.getInstance()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}