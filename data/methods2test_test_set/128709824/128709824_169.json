{"test_class": {"identifier": "AbstractTaskTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/api/src/test/java/com/alipay/sofa/rpc/server/AbstractTaskTest.java"}, "test_case": {"identifier": "compareTo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void compareTo() {\n        TestTask testTask1 = new TestTask();\n        testTask1.setPriority(123);\n        Assert.assertEquals(123, testTask1.getPriority());\n\n        TestTask testTask2 = new TestTask();\n        testTask2.setPriority(234);\n\n        Assert.assertTrue(testTask1.compareTo(testTask2) > 0);\n\n        PriorityQueue<AbstractTask> queue = new PriorityQueue<AbstractTask>();\n        queue.offer(testTask1);\n        queue.offer(testTask2);\n        Assert.assertEquals(queue.poll(), testTask2);\n        Assert.assertEquals(queue.poll(), testTask1);\n    }", "signature": "void compareTo()", "full_signature": "@Test public void compareTo()", "class_method_signature": "AbstractTaskTest.compareTo()", "testcase": true, "constructor": false, "invocations": ["setPriority", "assertEquals", "getPriority", "setPriority", "assertTrue", "compareTo", "offer", "offer", "assertEquals", "poll", "assertEquals", "poll"]}, "focal_class": {"identifier": "AbstractTask", "superclass": "", "interfaces": "implements Runnable, Comparable<AbstractTask>", "fields": [{"original_string": "protected int priority = ThreadPoolUtils.THREAD_PRIORITY_NORMAL;", "modifier": "protected", "type": "int", "declarator": "priority = ThreadPoolUtils.THREAD_PRIORITY_NORMAL", "var_name": "priority"}], "methods": [{"identifier": "run", "parameters": "()", "modifiers": "@Override public abstract", "return": "void", "signature": "void run()", "full_signature": "@Override public abstract void run()", "class_method_signature": "AbstractTask.run()", "testcase": false, "constructor": false}, {"identifier": "compareTo", "parameters": "(AbstractTask o)", "modifiers": "@Override public", "return": "int", "signature": "int compareTo(AbstractTask o)", "full_signature": "@Override public int compareTo(AbstractTask o)", "class_method_signature": "AbstractTask.compareTo(AbstractTask o)", "testcase": false, "constructor": false}, {"identifier": "setPriority", "parameters": "(int priority)", "modifiers": "public", "return": "AbstractTask", "signature": "AbstractTask setPriority(int priority)", "full_signature": "public AbstractTask setPriority(int priority)", "class_method_signature": "AbstractTask.setPriority(int priority)", "testcase": false, "constructor": false}, {"identifier": "getPriority", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getPriority()", "full_signature": "public int getPriority()", "class_method_signature": "AbstractTask.getPriority()", "testcase": false, "constructor": false}], "file": "core/api/src/main/java/com/alipay/sofa/rpc/server/AbstractTask.java"}, "focal_method": {"identifier": "compareTo", "parameters": "(AbstractTask o)", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int compareTo(AbstractTask o) {\n        // \u503c\u8d8a\u5927\u8d8a\u9ad8\n        return o.getPriority() - this.getPriority();\n    }", "signature": "int compareTo(AbstractTask o)", "full_signature": "@Override public int compareTo(AbstractTask o)", "class_method_signature": "AbstractTask.compareTo(AbstractTask o)", "testcase": false, "constructor": false, "invocations": ["getPriority", "getPriority"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}