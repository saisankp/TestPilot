{"test_class": {"identifier": "GuestDataProcessorTest", "superclass": "", "interfaces": "", "fields": [], "file": "guest/src/test/java/org/koenighotze/jee7hotel/guest/business/guestdataimport/GuestDataProcessorTest.java"}, "test_case": {"identifier": "processThrowsExceptionIfInvalidEmail", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void processThrowsExceptionIfInvalidEmail() throws Exception {\n        new GuestDataProcessor().processItem(\"foo bar, invalidemail.de\");\n    }", "signature": "void processThrowsExceptionIfInvalidEmail()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void processThrowsExceptionIfInvalidEmail()", "class_method_signature": "GuestDataProcessorTest.processThrowsExceptionIfInvalidEmail()", "testcase": true, "constructor": false, "invocations": ["processItem"]}, "focal_class": {"identifier": "GuestDataProcessor", "superclass": "", "interfaces": "implements ItemProcessor", "fields": [{"original_string": "private static final Logger LOGGER = Logger.getLogger(GuestDataProcessor.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = Logger.getLogger(GuestDataProcessor.class.getName())", "var_name": "LOGGER"}, {"original_string": "private JobContext jobCtx;", "modifier": "private", "type": "JobContext", "declarator": "jobCtx", "var_name": "jobCtx"}], "methods": [{"identifier": "GuestDataProcessor", "parameters": "()", "modifiers": "public", "return": "", "signature": " GuestDataProcessor()", "full_signature": "public  GuestDataProcessor()", "class_method_signature": "GuestDataProcessor.GuestDataProcessor()", "testcase": false, "constructor": true}, {"identifier": "GuestDataProcessor", "parameters": "(JobContext jobContext)", "modifiers": "@Inject public", "return": "", "signature": " GuestDataProcessor(JobContext jobContext)", "full_signature": "@Inject public  GuestDataProcessor(JobContext jobContext)", "class_method_signature": "GuestDataProcessor.GuestDataProcessor(JobContext jobContext)", "testcase": false, "constructor": true}, {"identifier": "processItem", "parameters": "(Object o)", "modifiers": "@Override public", "return": "Object", "signature": "Object processItem(Object o)", "full_signature": "@Override public Object processItem(Object o)", "class_method_signature": "GuestDataProcessor.processItem(Object o)", "testcase": false, "constructor": false}], "file": "guest/src/main/java/org/koenighotze/jee7hotel/guest/business/guestdataimport/GuestDataProcessor.java"}, "focal_method": {"identifier": "processItem", "parameters": "(Object o)", "modifiers": "@Override public", "return": "Object", "body": "@Override\n    public Object processItem(Object o) throws Exception {\n        LOGGER.info(() -> \"Processing item \" + o);\n\n        String[] split = ((String) o).split(\",\");\n\n        if (split.length != 3) {\n            throw new IllegalArgumentException(\"Unexpected format in \" + o);\n        }\n\n        String publicId = split[0].trim();\n        String name = split[1].trim();\n        String email = split[2].trim();\n\n        if (!email.matches(\"\\\\p{Alnum}+@\\\\p{Alnum}+.\\\\p{Alnum}+\")) {\n            throw new IllegalArgumentException(\"Unexpected email '\" + email + \"'\");\n        }\n\n        return new Guest(publicId, name, email);\n    }", "signature": "Object processItem(Object o)", "full_signature": "@Override public Object processItem(Object o)", "class_method_signature": "GuestDataProcessor.processItem(Object o)", "testcase": false, "constructor": false, "invocations": ["info", "split", "trim", "trim", "trim", "matches"]}, "repository": {"repo_id": 26170170, "url": "https://github.com/koenighotze/Hotel-Reservation-Tool", "language": "Java", "is_fork": false, "fork_count": 1, "stargazer_count": 5, "size": 1659, "license": "licensed"}}