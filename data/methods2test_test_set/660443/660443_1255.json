{"test_class": {"identifier": "PharmacophoreQueryTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private PharmacophoreQuery query;", "modifier": "private", "type": "PharmacophoreQuery", "declarator": "query", "var_name": "query"}], "file": "tool/pcore/src/test/java/org/openscience/cdk/pharmacophore/PharmacophoreQueryTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testToString() {\n        String repr = query.toString();\n        Assert.assertTrue(repr\n                .indexOf(\" #A:3, #EC:3, D, A, A, DC::D [[OX1]]::A [[N]]::[4.0 - 4.5] , DC::D [[OX1]]::A [[N]]::[4.0 - 5.0] , DC::A [[N]]::A [[N]]::[5.4 - 5.8] , )\") > 0);\n    }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "PharmacophoreQueryTest.testToString()", "testcase": true, "constructor": false, "invocations": ["toString", "assertTrue", "indexOf"]}, "focal_class": {"identifier": "PharmacophoreQuery", "superclass": "extends QueryAtomContainer", "interfaces": "", "fields": [{"original_string": "private List<Object> exclusionVolumes;", "modifier": "private", "type": "List<Object>", "declarator": "exclusionVolumes", "var_name": "exclusionVolumes"}], "methods": [{"identifier": "PharmacophoreQuery", "parameters": "()", "modifiers": "public", "return": "", "signature": " PharmacophoreQuery()", "full_signature": "public  PharmacophoreQuery()", "class_method_signature": "PharmacophoreQuery.PharmacophoreQuery()", "testcase": false, "constructor": true}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PharmacophoreQuery.toString()", "testcase": false, "constructor": false}], "file": "tool/pcore/src/main/java/org/openscience/cdk/pharmacophore/PharmacophoreQuery.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n        StringBuilder stringBuilder = new StringBuilder();\n        stringBuilder.append(\"PharmacophoreQuery(\").append(this.hashCode()).append(\", \");\n        stringBuilder.append(\"#A:\").append(getAtomCount()).append(\", \");\n        stringBuilder.append(\"#EC:\").append(getElectronContainerCount()).append(\", \");\n        for (IAtom atom : atoms()) {\n            PharmacophoreQueryAtom qatom = (PharmacophoreQueryAtom) atom;\n            stringBuilder.append(qatom.getSymbol()).append(\", \");\n        }\n        for (IBond bond : bonds()) {\n            stringBuilder.append(bond.toString()).append(\", \");\n        }\n        stringBuilder.append(')');\n        return stringBuilder.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PharmacophoreQuery.toString()", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "hashCode", "append", "append", "append", "getAtomCount", "append", "append", "append", "getElectronContainerCount", "atoms", "append", "append", "getSymbol", "bonds", "append", "append", "toString", "append", "toString"]}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}