{"test_class": {"identifier": "MappersTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/mapstruct/factory/MappersTest.java"}, "test_case": {"identifier": "shouldReturnImplementationClass", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldReturnImplementationClass() {\n\n        Class<? extends Foo> mapperClass = Mappers.getMapperClass( Foo.class );\n        assertThat( mapperClass ).isNotNull();\n        assertThat( mapperClass ).isNotExactlyInstanceOf( Foo.class );\n    }", "signature": "void shouldReturnImplementationClass()", "full_signature": "@Test public void shouldReturnImplementationClass()", "class_method_signature": "MappersTest.shouldReturnImplementationClass()", "testcase": true, "constructor": false, "invocations": ["getMapperClass", "isNotNull", "assertThat", "isNotExactlyInstanceOf", "assertThat"]}, "focal_class": {"identifier": "Mappers", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String IMPLEMENTATION_SUFFIX = \"Impl\";", "modifier": "private static final", "type": "String", "declarator": "IMPLEMENTATION_SUFFIX = \"Impl\"", "var_name": "IMPLEMENTATION_SUFFIX"}], "methods": [{"identifier": "Mappers", "parameters": "()", "modifiers": "private", "return": "", "signature": " Mappers()", "full_signature": "private  Mappers()", "class_method_signature": "Mappers.Mappers()", "testcase": false, "constructor": true}, {"identifier": "getMapper", "parameters": "(Class<T> clazz)", "modifiers": "public static", "return": "T", "signature": "T getMapper(Class<T> clazz)", "full_signature": "public static T getMapper(Class<T> clazz)", "class_method_signature": "Mappers.getMapper(Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "getMapper", "parameters": "(Class<T> mapperType, Iterable<ClassLoader> classLoaders)", "modifiers": "private static", "return": "T", "signature": "T getMapper(Class<T> mapperType, Iterable<ClassLoader> classLoaders)", "full_signature": "private static T getMapper(Class<T> mapperType, Iterable<ClassLoader> classLoaders)", "class_method_signature": "Mappers.getMapper(Class<T> mapperType, Iterable<ClassLoader> classLoaders)", "testcase": false, "constructor": false}, {"identifier": "doGetMapper", "parameters": "(Class<T> clazz, ClassLoader classLoader)", "modifiers": "private static", "return": "T", "signature": "T doGetMapper(Class<T> clazz, ClassLoader classLoader)", "full_signature": "private static T doGetMapper(Class<T> clazz, ClassLoader classLoader)", "class_method_signature": "Mappers.doGetMapper(Class<T> clazz, ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "getMapperClass", "parameters": "(Class<T> clazz)", "modifiers": "public static", "return": "Class<? extends T>", "signature": "Class<? extends T> getMapperClass(Class<T> clazz)", "full_signature": "public static Class<? extends T> getMapperClass(Class<T> clazz)", "class_method_signature": "Mappers.getMapperClass(Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "getMapperClass", "parameters": "(Class<T> mapperType, Iterable<ClassLoader> classLoaders)", "modifiers": "private static", "return": "Class<? extends T>", "signature": "Class<? extends T> getMapperClass(Class<T> mapperType, Iterable<ClassLoader> classLoaders)", "full_signature": "private static Class<? extends T> getMapperClass(Class<T> mapperType, Iterable<ClassLoader> classLoaders)", "class_method_signature": "Mappers.getMapperClass(Class<T> mapperType, Iterable<ClassLoader> classLoaders)", "testcase": false, "constructor": false}, {"identifier": "doGetMapperClass", "parameters": "(Class<T> clazz, ClassLoader classLoader)", "modifiers": "@SuppressWarnings(\"unchecked\") private static", "return": "Class<? extends T>", "signature": "Class<? extends T> doGetMapperClass(Class<T> clazz, ClassLoader classLoader)", "full_signature": "@SuppressWarnings(\"unchecked\") private static Class<? extends T> doGetMapperClass(Class<T> clazz, ClassLoader classLoader)", "class_method_signature": "Mappers.doGetMapperClass(Class<T> clazz, ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "getMapperFromServiceLoader", "parameters": "(Class<T> clazz, ClassLoader classLoader)", "modifiers": "private static", "return": "T", "signature": "T getMapperFromServiceLoader(Class<T> clazz, ClassLoader classLoader)", "full_signature": "private static T getMapperFromServiceLoader(Class<T> clazz, ClassLoader classLoader)", "class_method_signature": "Mappers.getMapperFromServiceLoader(Class<T> clazz, ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "collectClassLoaders", "parameters": "(ClassLoader classLoader)", "modifiers": "private static", "return": "List<ClassLoader>", "signature": "List<ClassLoader> collectClassLoaders(ClassLoader classLoader)", "full_signature": "private static List<ClassLoader> collectClassLoaders(ClassLoader classLoader)", "class_method_signature": "Mappers.collectClassLoaders(ClassLoader classLoader)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/mapstruct/factory/Mappers.java"}, "focal_method": {"identifier": "getMapperClass", "parameters": "(Class<T> clazz)", "modifiers": "public static", "return": "Class<? extends T>", "body": "public static <T> Class<? extends T> getMapperClass(Class<T> clazz) {\n        try {\n            List<ClassLoader> classLoaders = collectClassLoaders( clazz.getClassLoader() );\n\n            return getMapperClass( clazz, classLoaders );\n        }\n        catch ( ClassNotFoundException e ) {\n            throw new RuntimeException( e );\n        }\n    }", "signature": "Class<? extends T> getMapperClass(Class<T> clazz)", "full_signature": "public static Class<? extends T> getMapperClass(Class<T> clazz)", "class_method_signature": "Mappers.getMapperClass(Class<T> clazz)", "testcase": false, "constructor": false, "invocations": ["collectClassLoaders", "getClassLoader", "getMapperClass"]}, "repository": {"repo_id": 4470435, "url": "https://github.com/mapstruct/mapstruct", "stars": 2319, "created": "5/28/2012 12:42:42 PM +00:00", "updates": "2020-01-27T19:16:09+00:00", "fork": "False", "license": "licensed"}}