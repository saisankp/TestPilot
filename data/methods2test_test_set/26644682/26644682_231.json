{"test_class": {"identifier": "DataprepLocaleContextResolverTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TEST_LOCALE = \"vi-VN\";", "modifier": "private static final", "type": "String", "declarator": "TEST_LOCALE = \"vi-VN\"", "var_name": "TEST_LOCALE"}, {"original_string": "@Mock\n    private HttpServletRequest request;", "modifier": "@Mock\n    private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private HttpServletResponse response;", "modifier": "@Mock\n    private", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}], "file": "dataprep-backend-service/src/test/java/org/talend/dataprep/i18n/DataprepLocaleContextResolverTest.java"}, "test_case": {"identifier": "resolveLocaleContextWithNoLocaleThenDefault", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void resolveLocaleContextWithNoLocaleThenDefault() throws Exception {\n        DataprepLocaleContextResolver resolver = new DataprepLocaleContextResolver(null);\n\n        Locale locale = resolver.resolveLocale(request);\n        assertNotNull(locale);\n        assertEquals(Locale.US, locale);\n    }", "signature": "void resolveLocaleContextWithNoLocaleThenDefault()", "full_signature": "@Test public void resolveLocaleContextWithNoLocaleThenDefault()", "class_method_signature": "DataprepLocaleContextResolverTest.resolveLocaleContextWithNoLocaleThenDefault()", "testcase": true, "constructor": false, "invocations": ["resolveLocale", "assertNotNull", "assertEquals"]}, "focal_class": {"identifier": "DataprepLocaleContextResolver", "superclass": "", "interfaces": "implements LocaleContextResolver", "fields": [{"original_string": "private static final Logger LOGGER = getLogger(DataprepLocaleContextResolver.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = getLogger(DataprepLocaleContextResolver.class)", "var_name": "LOGGER"}, {"original_string": "private static final Locale DEFAULT_LOCALE = Locale.US;", "modifier": "private static final", "type": "Locale", "declarator": "DEFAULT_LOCALE = Locale.US", "var_name": "DEFAULT_LOCALE"}, {"original_string": "private final AcceptHeaderLocaleResolver delegate = new AcceptHeaderLocaleResolver();", "modifier": "private final", "type": "AcceptHeaderLocaleResolver", "declarator": "delegate = new AcceptHeaderLocaleResolver()", "var_name": "delegate"}], "methods": [{"identifier": "DataprepLocaleContextResolver", "parameters": "(@Value(\"${dataprep.locale:en-US}\") String configuredLocale)", "modifiers": "public", "return": "", "signature": " DataprepLocaleContextResolver(@Value(\"${dataprep.locale:en-US}\") String configuredLocale)", "full_signature": "public  DataprepLocaleContextResolver(@Value(\"${dataprep.locale:en-US}\") String configuredLocale)", "class_method_signature": "DataprepLocaleContextResolver.DataprepLocaleContextResolver(@Value(\"${dataprep.locale:en-US}\") String configuredLocale)", "testcase": false, "constructor": true}, {"identifier": "resolveApplicationLocale", "parameters": "(String configuredLocale)", "modifiers": "private", "return": "Locale", "signature": "Locale resolveApplicationLocale(String configuredLocale)", "full_signature": "private Locale resolveApplicationLocale(String configuredLocale)", "class_method_signature": "DataprepLocaleContextResolver.resolveApplicationLocale(String configuredLocale)", "testcase": false, "constructor": false}, {"identifier": "resolveLocale", "parameters": "(HttpServletRequest request)", "modifiers": "@Override public", "return": "Locale", "signature": "Locale resolveLocale(HttpServletRequest request)", "full_signature": "@Override public Locale resolveLocale(HttpServletRequest request)", "class_method_signature": "DataprepLocaleContextResolver.resolveLocale(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "setLocale", "parameters": "(HttpServletRequest request, HttpServletResponse response, Locale locale)", "modifiers": "@Override public", "return": "void", "signature": "void setLocale(HttpServletRequest request, HttpServletResponse response, Locale locale)", "full_signature": "@Override public void setLocale(HttpServletRequest request, HttpServletResponse response, Locale locale)", "class_method_signature": "DataprepLocaleContextResolver.setLocale(HttpServletRequest request, HttpServletResponse response, Locale locale)", "testcase": false, "constructor": false}, {"identifier": "resolveLocaleContext", "parameters": "(HttpServletRequest request)", "modifiers": "@Override public", "return": "LocaleContext", "signature": "LocaleContext resolveLocaleContext(HttpServletRequest request)", "full_signature": "@Override public LocaleContext resolveLocaleContext(HttpServletRequest request)", "class_method_signature": "DataprepLocaleContextResolver.resolveLocaleContext(HttpServletRequest request)", "testcase": false, "constructor": false}, {"identifier": "setLocaleContext", "parameters": "(HttpServletRequest request, HttpServletResponse response,\n            LocaleContext localeContext)", "modifiers": "@Override public", "return": "void", "signature": "void setLocaleContext(HttpServletRequest request, HttpServletResponse response,\n            LocaleContext localeContext)", "full_signature": "@Override public void setLocaleContext(HttpServletRequest request, HttpServletResponse response,\n            LocaleContext localeContext)", "class_method_signature": "DataprepLocaleContextResolver.setLocaleContext(HttpServletRequest request, HttpServletResponse response,\n            LocaleContext localeContext)", "testcase": false, "constructor": false}, {"identifier": "getLocale", "parameters": "(HttpServletRequest request)", "modifiers": "private", "return": "Locale", "signature": "Locale getLocale(HttpServletRequest request)", "full_signature": "private Locale getLocale(HttpServletRequest request)", "class_method_signature": "DataprepLocaleContextResolver.getLocale(HttpServletRequest request)", "testcase": false, "constructor": false}], "file": "dataprep-backend-service/src/main/java/org/talend/dataprep/i18n/DataprepLocaleContextResolver.java"}, "focal_method": {"identifier": "resolveLocale", "parameters": "(HttpServletRequest request)", "modifiers": "@Override public", "return": "Locale", "body": "@Override\n    public Locale resolveLocale(HttpServletRequest request) {\n        return getLocale(request);\n    }", "signature": "Locale resolveLocale(HttpServletRequest request)", "full_signature": "@Override public Locale resolveLocale(HttpServletRequest request)", "class_method_signature": "DataprepLocaleContextResolver.resolveLocale(HttpServletRequest request)", "testcase": false, "constructor": false, "invocations": ["getLocale"]}, "repository": {"repo_id": 26644682, "url": "https://github.com/Talend/data-prep", "language": "Java", "is_fork": false, "fork_count": 29, "stargazer_count": 53, "size": 70450, "license": "licensed"}}