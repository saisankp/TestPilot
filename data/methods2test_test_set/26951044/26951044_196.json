{"test_class": {"identifier": "OSGIServiceLoaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "code/core/src/test/java/org/apache/tamaya/core/internal/OSGIServiceLoaderTest.java"}, "test_case": {"identifier": "testGetResourceBundles", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetResourceBundles() throws Exception {\n        MockBundleContext mockBundleContext = new MockBundleContext();\n        MockBundle startedBundle = new MockBundle();\n        startedBundle.setState(Bundle.ACTIVE);\n        startedBundle.setBundleId(1);\n        startedBundle.setBundleContext(mockBundleContext);\n        mockBundleContext.installBundle(startedBundle);\n        OSGIServiceLoader instance = new OSGIServiceLoader(mockBundleContext);\n        Set<Bundle> result = instance.getResourceBundles();\n        assertThat(result).isNotEmpty();\n    }", "signature": "void testGetResourceBundles()", "full_signature": "@Test public void testGetResourceBundles()", "class_method_signature": "OSGIServiceLoaderTest.testGetResourceBundles()", "testcase": true, "constructor": false, "invocations": ["setState", "setBundleId", "setBundleContext", "installBundle", "getResourceBundles", "isNotEmpty", "assertThat"]}, "focal_class": {"identifier": "OSGIServiceLoader", "superclass": "", "interfaces": "implements BundleListener", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(OSGIServiceLoader.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(OSGIServiceLoader.class.getName())", "var_name": "LOG"}, {"original_string": "private static final String META_INF_SERVICES = \"META-INF/services/\";", "modifier": "private static final", "type": "String", "declarator": "META_INF_SERVICES = \"META-INF/services/\"", "var_name": "META_INF_SERVICES"}, {"original_string": "private final BundleContext context;", "modifier": "private final", "type": "BundleContext", "declarator": "context", "var_name": "context"}, {"original_string": "private final Set<Bundle> resourceBundles = Collections.synchronizedSet(new HashSet<>());", "modifier": "private final", "type": "Set<Bundle>", "declarator": "resourceBundles = Collections.synchronizedSet(new HashSet<>())", "var_name": "resourceBundles"}], "methods": [{"identifier": "OSGIServiceLoader", "parameters": "(BundleContext context)", "modifiers": "public", "return": "", "signature": " OSGIServiceLoader(BundleContext context)", "full_signature": "public  OSGIServiceLoader(BundleContext context)", "class_method_signature": "OSGIServiceLoader.OSGIServiceLoader(BundleContext context)", "testcase": false, "constructor": true}, {"identifier": "getBundleContext", "parameters": "()", "modifiers": "public", "return": "BundleContext", "signature": "BundleContext getBundleContext()", "full_signature": "public BundleContext getBundleContext()", "class_method_signature": "OSGIServiceLoader.getBundleContext()", "testcase": false, "constructor": false}, {"identifier": "getResourceBundles", "parameters": "()", "modifiers": "public", "return": "Set<Bundle>", "signature": "Set<Bundle> getResourceBundles()", "full_signature": "public Set<Bundle> getResourceBundles()", "class_method_signature": "OSGIServiceLoader.getResourceBundles()", "testcase": false, "constructor": false}, {"identifier": "bundleChanged", "parameters": "(BundleEvent bundleEvent)", "modifiers": "@Override public", "return": "void", "signature": "void bundleChanged(BundleEvent bundleEvent)", "full_signature": "@Override public void bundleChanged(BundleEvent bundleEvent)", "class_method_signature": "OSGIServiceLoader.bundleChanged(BundleEvent bundleEvent)", "testcase": false, "constructor": false}, {"identifier": "checkAndUnloadBundle", "parameters": "(Bundle bundle)", "modifiers": "private", "return": "void", "signature": "void checkAndUnloadBundle(Bundle bundle)", "full_signature": "private void checkAndUnloadBundle(Bundle bundle)", "class_method_signature": "OSGIServiceLoader.checkAndUnloadBundle(Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "checkAndLoadBundle", "parameters": "(Bundle bundle)", "modifiers": "private", "return": "void", "signature": "void checkAndLoadBundle(Bundle bundle)", "full_signature": "private void checkAndLoadBundle(Bundle bundle)", "class_method_signature": "OSGIServiceLoader.checkAndLoadBundle(Bundle bundle)", "testcase": false, "constructor": false}, {"identifier": "processEntryPath", "parameters": "(Bundle bundle, String entryPath)", "modifiers": "private", "return": "void", "signature": "void processEntryPath(Bundle bundle, String entryPath)", "full_signature": "private void processEntryPath(Bundle bundle, String entryPath)", "class_method_signature": "OSGIServiceLoader.processEntryPath(Bundle bundle, String entryPath)", "testcase": false, "constructor": false}, {"identifier": "removeEntryPath", "parameters": "(Bundle bundle, String entryPath)", "modifiers": "private", "return": "void", "signature": "void removeEntryPath(Bundle bundle, String entryPath)", "full_signature": "private void removeEntryPath(Bundle bundle, String entryPath)", "class_method_signature": "OSGIServiceLoader.removeEntryPath(Bundle bundle, String entryPath)", "testcase": false, "constructor": false}, {"identifier": "getImplClassName", "parameters": "(String line)", "modifiers": "private", "return": "String", "signature": "String getImplClassName(String line)", "full_signature": "private String getImplClassName(String line)", "class_method_signature": "OSGIServiceLoader.getImplClassName(String line)", "testcase": false, "constructor": false}], "file": "code/core/src/main/java/org/apache/tamaya/core/internal/OSGIServiceLoader.java"}, "focal_method": {"identifier": "getResourceBundles", "parameters": "()", "modifiers": "public", "return": "Set<Bundle>", "body": "public Set<Bundle> getResourceBundles() {\n        synchronized (resourceBundles) {\n            return new HashSet<>(resourceBundles);\n        }\n    }", "signature": "Set<Bundle> getResourceBundles()", "full_signature": "public Set<Bundle> getResourceBundles()", "class_method_signature": "OSGIServiceLoader.getResourceBundles()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 26951044, "url": "https://github.com/apache/incubator-tamaya", "language": "Java", "is_fork": false, "fork_count": 33, "stargazer_count": 44, "size": 7630, "license": "licensed"}}