{"test_class": {"identifier": "DefaultNodeConditionControllerTest", "superclass": "", "interfaces": "", "fields": [], "file": "titus-supplementary-component/task-relocation/src/test/java/com/netflix/titus/supplementary/relocation/workflow/DefaultNodeConditionControllerTest.java"}, "test_case": {"identifier": "noTerminationsOnDataStaleness", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void noTerminationsOnDataStaleness() {\n        TitusRuntime titusRuntime = mock(TitusRuntime.class);\n        when(titusRuntime.getRegistry()).thenReturn(new DefaultRegistry());\n\n        RelocationConfiguration configuration = mock(RelocationConfiguration.class);\n        when(configuration.getBadNodeConditionPattern()).thenReturn(\".*Problem\");\n        when(configuration.isTaskTerminationOnBadNodeConditionEnabled()).thenReturn(true);\n        when(configuration.getDataStalenessThresholdMs()).thenReturn(8000L);\n\n        NodeDataResolver nodeDataResolver = mock(NodeDataResolver.class);\n        when(nodeDataResolver.getStalenessMs()).thenReturn(5L);\n\n        JobDataReplicator jobDataReplicator = mock(JobDataReplicator.class);\n        when(jobDataReplicator.getStalenessMs()).thenReturn(10L);\n\n        ReadOnlyJobOperations readOnlyJobOperations = mock(ReadOnlyJobOperations.class);\n\n        JobManagementClient jobManagementClient = mock(JobManagementClient.class);\n        Set<String> terminatedTaskIds = new HashSet<>();\n        when(jobManagementClient.killTask(anyString(), anyBoolean(), any())).thenAnswer(invocation -> {\n            String taskIdToBeTerminated = invocation.getArgument(0);\n            terminatedTaskIds.add(taskIdToBeTerminated);\n            return Mono.empty();\n        });\n\n        DefaultNodeConditionController nodeConditionCtrl = new DefaultNodeConditionController(configuration, nodeDataResolver, jobDataReplicator,\n                readOnlyJobOperations, jobManagementClient, titusRuntime);\n\n        ExecutionContext executionContext = ExecutionContext.newBuilder().withIteration(ExecutionId.initial()).build();\n        StepVerifier.create(nodeConditionCtrl.handleNodesWithBadCondition(executionContext))\n                .verifyComplete();\n\n        // No tasks terminated\n        assertThat(terminatedTaskIds).isEmpty();\n    }", "signature": "void noTerminationsOnDataStaleness()", "full_signature": "@Test public void noTerminationsOnDataStaleness()", "class_method_signature": "DefaultNodeConditionControllerTest.noTerminationsOnDataStaleness()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "getRegistry", "mock", "thenReturn", "when", "getBadNodeConditionPattern", "thenReturn", "when", "isTaskTerminationOnBadNodeConditionEnabled", "thenReturn", "when", "getDataStalenessThresholdMs", "mock", "thenReturn", "when", "getStalenessMs", "mock", "thenReturn", "when", "getStalenessMs", "mock", "mock", "thenAnswer", "when", "killTask", "anyString", "anyBoolean", "any", "getArgument", "add", "empty", "build", "withIteration", "newBuilder", "initial", "verifyComplete", "create", "handleNodesWithBadCondition", "isEmpty", "assertThat"]}, "focal_class": {"identifier": "DefaultNodeConditionController", "superclass": "", "interfaces": "implements NodeConditionController", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(DefaultNodeConditionController.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(DefaultNodeConditionController.class)", "var_name": "logger"}, {"original_string": "private final RelocationConfiguration configuration;", "modifier": "private final", "type": "RelocationConfiguration", "declarator": "configuration", "var_name": "configuration"}, {"original_string": "private final NodeDataResolver nodeDataResolver;", "modifier": "private final", "type": "NodeDataResolver", "declarator": "nodeDataResolver", "var_name": "nodeDataResolver"}, {"original_string": "private final JobDataReplicator jobDataReplicator;", "modifier": "private final", "type": "JobDataReplicator", "declarator": "jobDataReplicator", "var_name": "jobDataReplicator"}, {"original_string": "private final ReadOnlyJobOperations jobOperations;", "modifier": "private final", "type": "ReadOnlyJobOperations", "declarator": "jobOperations", "var_name": "jobOperations"}, {"original_string": "private final JobManagementClient jobManagementClient;", "modifier": "private final", "type": "JobManagementClient", "declarator": "jobManagementClient", "var_name": "jobManagementClient"}, {"original_string": "private final NodeConditionCtrlMetrics metrics;", "modifier": "private final", "type": "NodeConditionCtrlMetrics", "declarator": "metrics", "var_name": "metrics"}, {"original_string": "private final TitusRuntime titusRuntime;", "modifier": "private final", "type": "TitusRuntime", "declarator": "titusRuntime", "var_name": "titusRuntime"}, {"original_string": "private static final CallMetadata CALL_METADATA = buildCallMetadata();", "modifier": "private static final", "type": "CallMetadata", "declarator": "CALL_METADATA = buildCallMetadata()", "var_name": "CALL_METADATA"}, {"original_string": "private static final String CALLER_APP_ID = \"titusrelocation\";", "modifier": "private static final", "type": "String", "declarator": "CALLER_APP_ID = \"titusrelocation\"", "var_name": "CALLER_APP_ID"}, {"original_string": "private static final String CALL_REASON = \"This task was automatically terminated because the underlying host had issues.\";", "modifier": "private static final", "type": "String", "declarator": "CALL_REASON = \"This task was automatically terminated because the underlying host had issues.\"", "var_name": "CALL_REASON"}, {"original_string": "private ScheduleReference scheduleReference;", "modifier": "private", "type": "ScheduleReference", "declarator": "scheduleReference", "var_name": "scheduleReference"}], "methods": [{"identifier": "DefaultNodeConditionController", "parameters": "(RelocationConfiguration relocationConfiguration,\n                                          NodeDataResolver nodeDataResolver,\n                                          JobDataReplicator jobDataReplicator,\n                                          ReadOnlyJobOperations jobOperations,\n                                          JobManagementClient jobManagementClient,\n                                          TitusRuntime titusRuntime)", "modifiers": "public", "return": "", "signature": " DefaultNodeConditionController(RelocationConfiguration relocationConfiguration,\n                                          NodeDataResolver nodeDataResolver,\n                                          JobDataReplicator jobDataReplicator,\n                                          ReadOnlyJobOperations jobOperations,\n                                          JobManagementClient jobManagementClient,\n                                          TitusRuntime titusRuntime)", "full_signature": "public  DefaultNodeConditionController(RelocationConfiguration relocationConfiguration,\n                                          NodeDataResolver nodeDataResolver,\n                                          JobDataReplicator jobDataReplicator,\n                                          ReadOnlyJobOperations jobOperations,\n                                          JobManagementClient jobManagementClient,\n                                          TitusRuntime titusRuntime)", "class_method_signature": "DefaultNodeConditionController.DefaultNodeConditionController(RelocationConfiguration relocationConfiguration,\n                                          NodeDataResolver nodeDataResolver,\n                                          JobDataReplicator jobDataReplicator,\n                                          ReadOnlyJobOperations jobOperations,\n                                          JobManagementClient jobManagementClient,\n                                          TitusRuntime titusRuntime)", "testcase": false, "constructor": true}, {"identifier": "activate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void activate()", "full_signature": "@Override public void activate()", "class_method_signature": "DefaultNodeConditionController.activate()", "testcase": false, "constructor": false}, {"identifier": "deactivate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void deactivate()", "full_signature": "@Override public void deactivate()", "class_method_signature": "DefaultNodeConditionController.deactivate()", "testcase": false, "constructor": false}, {"identifier": "handleNodesWithBadCondition", "parameters": "(ExecutionContext executionContext)", "modifiers": "@VisibleForTesting", "return": "Mono<Void>", "signature": "Mono<Void> handleNodesWithBadCondition(ExecutionContext executionContext)", "full_signature": "@VisibleForTesting Mono<Void> handleNodesWithBadCondition(ExecutionContext executionContext)", "class_method_signature": "DefaultNodeConditionController.handleNodesWithBadCondition(ExecutionContext executionContext)", "testcase": false, "constructor": false}, {"identifier": "hasStaleData", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean hasStaleData()", "full_signature": "private boolean hasStaleData()", "class_method_signature": "DefaultNodeConditionController.hasStaleData()", "testcase": false, "constructor": false}, {"identifier": "getDataStalenessMs", "parameters": "()", "modifiers": "private", "return": "long", "signature": "long getDataStalenessMs()", "full_signature": "private long getDataStalenessMs()", "class_method_signature": "DefaultNodeConditionController.getDataStalenessMs()", "testcase": false, "constructor": false}, {"identifier": "handleNodesWithBadCondition", "parameters": "()", "modifiers": "public", "return": "Mono<Void>", "signature": "Mono<Void> handleNodesWithBadCondition()", "full_signature": "public Mono<Void> handleNodesWithBadCondition()", "class_method_signature": "DefaultNodeConditionController.handleNodesWithBadCondition()", "testcase": false, "constructor": false}, {"identifier": "buildCallMetadata", "parameters": "()", "modifiers": "private static", "return": "CallMetadata", "signature": "CallMetadata buildCallMetadata()", "full_signature": "private static CallMetadata buildCallMetadata()", "class_method_signature": "DefaultNodeConditionController.buildCallMetadata()", "testcase": false, "constructor": false}], "file": "titus-supplementary-component/task-relocation/src/main/java/com/netflix/titus/supplementary/relocation/workflow/DefaultNodeConditionController.java"}, "focal_method": {"identifier": "handleNodesWithBadCondition", "parameters": "(ExecutionContext executionContext)", "modifiers": "@VisibleForTesting", "return": "Mono<Void>", "body": "@VisibleForTesting\n    Mono<Void> handleNodesWithBadCondition(ExecutionContext executionContext) {\n        int iterationCount = executionContext.getExecutionId().getTotal();\n        logger.debug(\"Starting node condition controller iteration {} ...\", iterationCount);\n        if (hasStaleData()) {\n            logger.info(\"Stale data. Skipping the node condition control loop iteration- {} \", iterationCount);\n            return Mono.empty();\n        }\n        return handleNodesWithBadCondition();\n    }", "signature": "Mono<Void> handleNodesWithBadCondition(ExecutionContext executionContext)", "full_signature": "@VisibleForTesting Mono<Void> handleNodesWithBadCondition(ExecutionContext executionContext)", "class_method_signature": "DefaultNodeConditionController.handleNodesWithBadCondition(ExecutionContext executionContext)", "testcase": false, "constructor": false, "invocations": ["getTotal", "getExecutionId", "debug", "hasStaleData", "info", "empty", "handleNodesWithBadCondition"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}