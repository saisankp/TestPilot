{"test_class": {"identifier": "StorageFileHelperTest", "superclass": "extends AbstractServiceTest", "interfaces": "", "fields": [{"original_string": "private static final Path LOCAL_TEMP_PATH = Paths.get(System.getProperty(\"java.io.tmpdir\"), \"herd-helper-test\", RANDOM_SUFFIX);", "modifier": "private static final", "type": "Path", "declarator": "LOCAL_TEMP_PATH = Paths.get(System.getProperty(\"java.io.tmpdir\"), \"herd-helper-test\", RANDOM_SUFFIX)", "var_name": "LOCAL_TEMP_PATH"}], "file": "herd-code/herd-service/src/test/java/org/finra/herd/service/helper/StorageFileHelperTest.java"}, "test_case": {"identifier": "testCreateStorageFileFromEntities", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testCreateStorageFileFromEntities()\n    {\n        // Create a storage file entity.\n        StorageFileEntity storageFileEntity1 = new StorageFileEntity();\n        storageFileEntity1.setStorageUnit(null);\n        storageFileEntity1.setPath(STORAGE_DIRECTORY_PATH + \"/\" + FILE_NAME + \"1\");\n        storageFileEntity1.setFileSizeBytes(FILE_SIZE);\n        storageFileEntity1.setRowCount(ROW_COUNT);\n\n        // Create a storage file entity.\n        StorageFileEntity storageFileEntity2 = new StorageFileEntity();\n        storageFileEntity2.setStorageUnit(null);\n        storageFileEntity2.setPath(STORAGE_DIRECTORY_PATH + \"/\" + FILE_NAME + \"2\");\n        storageFileEntity2.setFileSizeBytes(FILE_SIZE);\n        storageFileEntity2.setRowCount(ROW_COUNT);\n\n        List<StorageFile> storageFiles = null;\n\n        // Create storage files from entity when directory path is not specified\n        storageFiles = storageFileHelper.createStorageFilesFromEntities(Arrays.asList(storageFileEntity1, storageFileEntity2));\n        assertEquals(new StorageFile(STORAGE_DIRECTORY_PATH + \"/\" + FILE_NAME + \"1\", FILE_SIZE, ROW_COUNT), storageFiles.get(0));\n        assertEquals(new StorageFile(STORAGE_DIRECTORY_PATH + \"/\" + FILE_NAME + \"2\", FILE_SIZE, ROW_COUNT), storageFiles.get(1));\n\n        // Create storage files from entity when directory path passed as null\n        storageFiles = storageFileHelper.createStorageFilesFromEntities(Arrays.asList(storageFileEntity1, storageFileEntity2), null);\n        assertEquals(new StorageFile(STORAGE_DIRECTORY_PATH + \"/\" + FILE_NAME + \"1\", FILE_SIZE, ROW_COUNT), storageFiles.get(0));\n        assertEquals(new StorageFile(STORAGE_DIRECTORY_PATH + \"/\" + FILE_NAME + \"2\", FILE_SIZE, ROW_COUNT), storageFiles.get(1));\n\n        // Create storage file from entity when directory path is not matching\n        // the beginning of storage file path and directory path has no '/' trailing character.\n        storageFiles = storageFileHelper.createStorageFilesFromEntities(Arrays.asList(storageFileEntity1, storageFileEntity2), STRING_VALUE);\n        assertEquals(new StorageFile(STRING_VALUE + \"/\" + STORAGE_DIRECTORY_PATH + \"/\" + FILE_NAME + \"1\", FILE_SIZE, ROW_COUNT), storageFiles.get(0));\n        assertEquals(new StorageFile(STRING_VALUE + \"/\" + STORAGE_DIRECTORY_PATH + \"/\" + FILE_NAME + \"2\", FILE_SIZE, ROW_COUNT), storageFiles.get(1));\n    }", "signature": "void testCreateStorageFileFromEntities()", "full_signature": "@Test public void testCreateStorageFileFromEntities()", "class_method_signature": "StorageFileHelperTest.testCreateStorageFileFromEntities()", "testcase": true, "constructor": false, "invocations": ["setStorageUnit", "setPath", "setFileSizeBytes", "setRowCount", "setStorageUnit", "setPath", "setFileSizeBytes", "setRowCount", "createStorageFilesFromEntities", "asList", "assertEquals", "get", "assertEquals", "get", "createStorageFilesFromEntities", "asList", "assertEquals", "get", "assertEquals", "get", "createStorageFilesFromEntities", "asList", "assertEquals", "get", "assertEquals", "get"]}, "focal_class": {"identifier": "StorageFileHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(StorageFileHelper.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(StorageFileHelper.class)", "var_name": "LOGGER"}, {"original_string": "@Autowired\n    private BusinessObjectDataHelper businessObjectDataHelper;", "modifier": "@Autowired\n    private", "type": "BusinessObjectDataHelper", "declarator": "businessObjectDataHelper", "var_name": "businessObjectDataHelper"}, {"original_string": "@Autowired\n    private JsonHelper jsonHelper;", "modifier": "@Autowired\n    private", "type": "JsonHelper", "declarator": "jsonHelper", "var_name": "jsonHelper"}], "methods": [{"identifier": "createStorageFileFromEntity", "parameters": "(StorageFileEntity storageFileEntity, String storageUnitDirectoryPath)", "modifiers": "", "return": "StorageFile", "signature": "StorageFile createStorageFileFromEntity(StorageFileEntity storageFileEntity, String storageUnitDirectoryPath)", "full_signature": " StorageFile createStorageFileFromEntity(StorageFileEntity storageFileEntity, String storageUnitDirectoryPath)", "class_method_signature": "StorageFileHelper.createStorageFileFromEntity(StorageFileEntity storageFileEntity, String storageUnitDirectoryPath)", "testcase": false, "constructor": false}, {"identifier": "createStorageFilesFromEntities", "parameters": "(Collection<StorageFileEntity> storageFileEntities, String storageUnitDirectoryPath)", "modifiers": "public", "return": "List<StorageFile>", "signature": "List<StorageFile> createStorageFilesFromEntities(Collection<StorageFileEntity> storageFileEntities, String storageUnitDirectoryPath)", "full_signature": "public List<StorageFile> createStorageFilesFromEntities(Collection<StorageFileEntity> storageFileEntities, String storageUnitDirectoryPath)", "class_method_signature": "StorageFileHelper.createStorageFilesFromEntities(Collection<StorageFileEntity> storageFileEntities, String storageUnitDirectoryPath)", "testcase": false, "constructor": false}, {"identifier": "createStorageFilesFromEntities", "parameters": "(Collection<StorageFileEntity> storageFileEntities)", "modifiers": "public", "return": "List<StorageFile>", "signature": "List<StorageFile> createStorageFilesFromEntities(Collection<StorageFileEntity> storageFileEntities)", "full_signature": "public List<StorageFile> createStorageFilesFromEntities(Collection<StorageFileEntity> storageFileEntities)", "class_method_signature": "StorageFileHelper.createStorageFilesFromEntities(Collection<StorageFileEntity> storageFileEntities)", "testcase": false, "constructor": false}, {"identifier": "createStorageFilesFromS3ObjectSummaries", "parameters": "(List<S3ObjectSummary> s3ObjectSummaries)", "modifiers": "public", "return": "List<StorageFile>", "signature": "List<StorageFile> createStorageFilesFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "full_signature": "public List<StorageFile> createStorageFilesFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "class_method_signature": "StorageFileHelper.createStorageFilesFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "testcase": false, "constructor": false}, {"identifier": "getAndValidateStorageFiles", "parameters": "(StorageUnitEntity storageUnitEntity, String s3KeyPrefix, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "modifiers": "public", "return": "List<StorageFile>", "signature": "List<StorageFile> getAndValidateStorageFiles(StorageUnitEntity storageUnitEntity, String s3KeyPrefix, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "full_signature": "public List<StorageFile> getAndValidateStorageFiles(StorageUnitEntity storageUnitEntity, String s3KeyPrefix, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "StorageFileHelper.getAndValidateStorageFiles(StorageUnitEntity storageUnitEntity, String s3KeyPrefix, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false}, {"identifier": "getAndValidateStorageFilesIfPresent", "parameters": "(StorageUnitEntity storageUnitEntity, String s3KeyPrefix, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "modifiers": "public", "return": "List<StorageFile>", "signature": "List<StorageFile> getAndValidateStorageFilesIfPresent(StorageUnitEntity storageUnitEntity, String s3KeyPrefix, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "full_signature": "public List<StorageFile> getAndValidateStorageFilesIfPresent(StorageUnitEntity storageUnitEntity, String s3KeyPrefix, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "StorageFileHelper.getAndValidateStorageFilesIfPresent(StorageUnitEntity storageUnitEntity, String s3KeyPrefix, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false}, {"identifier": "getFilePathsFromS3ObjectSummaries", "parameters": "(List<S3ObjectSummary> s3ObjectSummaries)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getFilePathsFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "full_signature": "public List<String> getFilePathsFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "class_method_signature": "StorageFileHelper.getFilePathsFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "testcase": false, "constructor": false}, {"identifier": "getFilePathsFromStorageFiles", "parameters": "(List<StorageFile> storageFiles)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getFilePathsFromStorageFiles(List<StorageFile> storageFiles)", "full_signature": "public List<String> getFilePathsFromStorageFiles(List<StorageFile> storageFiles)", "class_method_signature": "StorageFileHelper.getFilePathsFromStorageFiles(List<StorageFile> storageFiles)", "testcase": false, "constructor": false}, {"identifier": "getFiles", "parameters": "(List<StorageFile> storageFiles)", "modifiers": "public", "return": "List<File>", "signature": "List<File> getFiles(List<StorageFile> storageFiles)", "full_signature": "public List<File> getFiles(List<StorageFile> storageFiles)", "class_method_signature": "StorageFileHelper.getFiles(List<StorageFile> storageFiles)", "testcase": false, "constructor": false}, {"identifier": "getStorageFileEntitiesMap", "parameters": "(Collection<StorageFileEntity> storageFileEntities)", "modifiers": "public", "return": "Map<String, StorageFileEntity>", "signature": "Map<String, StorageFileEntity> getStorageFileEntitiesMap(Collection<StorageFileEntity> storageFileEntities)", "full_signature": "public Map<String, StorageFileEntity> getStorageFileEntitiesMap(Collection<StorageFileEntity> storageFileEntities)", "class_method_signature": "StorageFileHelper.getStorageFileEntitiesMap(Collection<StorageFileEntity> storageFileEntities)", "testcase": false, "constructor": false}, {"identifier": "getStorageFilesMapFromS3ObjectSummaries", "parameters": "(List<S3ObjectSummary> s3ObjectSummaries)", "modifiers": "public", "return": "Map<String, StorageFile>", "signature": "Map<String, StorageFile> getStorageFilesMapFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "full_signature": "public Map<String, StorageFile> getStorageFilesMapFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "class_method_signature": "StorageFileHelper.getStorageFilesMapFromS3ObjectSummaries(List<S3ObjectSummary> s3ObjectSummaries)", "testcase": false, "constructor": false}, {"identifier": "validateCreateRequestStorageFiles", "parameters": "(List<StorageFile> storageFiles)", "modifiers": "public", "return": "void", "signature": "void validateCreateRequestStorageFiles(List<StorageFile> storageFiles)", "full_signature": "public void validateCreateRequestStorageFiles(List<StorageFile> storageFiles)", "class_method_signature": "StorageFileHelper.validateCreateRequestStorageFiles(List<StorageFile> storageFiles)", "testcase": false, "constructor": false}, {"identifier": "validateDownloadedS3Files", "parameters": "(String baseDirectory, String s3KeyPrefix, StorageUnit storageUnit)", "modifiers": "public", "return": "void", "signature": "void validateDownloadedS3Files(String baseDirectory, String s3KeyPrefix, StorageUnit storageUnit)", "full_signature": "public void validateDownloadedS3Files(String baseDirectory, String s3KeyPrefix, StorageUnit storageUnit)", "class_method_signature": "StorageFileHelper.validateDownloadedS3Files(String baseDirectory, String s3KeyPrefix, StorageUnit storageUnit)", "testcase": false, "constructor": false}, {"identifier": "validateDownloadedS3Files", "parameters": "(String baseDirectory, String s3KeyPrefix, List<StorageFile> storageFiles)", "modifiers": "public", "return": "void", "signature": "void validateDownloadedS3Files(String baseDirectory, String s3KeyPrefix, List<StorageFile> storageFiles)", "full_signature": "public void validateDownloadedS3Files(String baseDirectory, String s3KeyPrefix, List<StorageFile> storageFiles)", "class_method_signature": "StorageFileHelper.validateDownloadedS3Files(String baseDirectory, String s3KeyPrefix, List<StorageFile> storageFiles)", "testcase": false, "constructor": false}, {"identifier": "validateRegisteredS3Files", "parameters": "(List<StorageFile> expectedStorageFiles, List<S3ObjectSummary> s3ObjectSummaries, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "modifiers": "public", "return": "void", "signature": "void validateRegisteredS3Files(List<StorageFile> expectedStorageFiles, List<S3ObjectSummary> s3ObjectSummaries, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "full_signature": "public void validateRegisteredS3Files(List<StorageFile> expectedStorageFiles, List<S3ObjectSummary> s3ObjectSummaries, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "class_method_signature": "StorageFileHelper.validateRegisteredS3Files(List<StorageFile> expectedStorageFiles, List<S3ObjectSummary> s3ObjectSummaries, String storageName,\n        BusinessObjectDataKey businessObjectDataKey)", "testcase": false, "constructor": false}, {"identifier": "validateStorageFile", "parameters": "(StorageFile storageFile, String s3BucketName, Map<String, StorageFile> actualS3Keys, boolean validateFileSize)", "modifiers": "public", "return": "void", "signature": "void validateStorageFile(StorageFile storageFile, String s3BucketName, Map<String, StorageFile> actualS3Keys, boolean validateFileSize)", "full_signature": "public void validateStorageFile(StorageFile storageFile, String s3BucketName, Map<String, StorageFile> actualS3Keys, boolean validateFileSize)", "class_method_signature": "StorageFileHelper.validateStorageFile(StorageFile storageFile, String s3BucketName, Map<String, StorageFile> actualS3Keys, boolean validateFileSize)", "testcase": false, "constructor": false}, {"identifier": "validateStorageFileEntity", "parameters": "(StorageFileEntity storageFileEntity, String s3BucketName, Map<String, StorageFile> actualS3Keys,\n        boolean validateFileSize)", "modifiers": "public", "return": "void", "signature": "void validateStorageFileEntity(StorageFileEntity storageFileEntity, String s3BucketName, Map<String, StorageFile> actualS3Keys,\n        boolean validateFileSize)", "full_signature": "public void validateStorageFileEntity(StorageFileEntity storageFileEntity, String s3BucketName, Map<String, StorageFile> actualS3Keys,\n        boolean validateFileSize)", "class_method_signature": "StorageFileHelper.validateStorageFileEntity(StorageFileEntity storageFileEntity, String s3BucketName, Map<String, StorageFile> actualS3Keys,\n        boolean validateFileSize)", "testcase": false, "constructor": false}, {"identifier": "validateStorageFilePaths", "parameters": "(Collection<String> storageFilePaths, String s3KeyPrefix, BusinessObjectDataKey businessObjectDataKey,\n        String storageName)", "modifiers": "public", "return": "void", "signature": "void validateStorageFilePaths(Collection<String> storageFilePaths, String s3KeyPrefix, BusinessObjectDataKey businessObjectDataKey,\n        String storageName)", "full_signature": "public void validateStorageFilePaths(Collection<String> storageFilePaths, String s3KeyPrefix, BusinessObjectDataKey businessObjectDataKey,\n        String storageName)", "class_method_signature": "StorageFileHelper.validateStorageFilePaths(Collection<String> storageFilePaths, String s3KeyPrefix, BusinessObjectDataKey businessObjectDataKey,\n        String storageName)", "testcase": false, "constructor": false}, {"identifier": "validateStorageUnitS3Files", "parameters": "(StorageUnit storageUnit, List<String> actualS3Files, String s3KeyPrefix)", "modifiers": "public", "return": "void", "signature": "void validateStorageUnitS3Files(StorageUnit storageUnit, List<String> actualS3Files, String s3KeyPrefix)", "full_signature": "public void validateStorageUnitS3Files(StorageUnit storageUnit, List<String> actualS3Files, String s3KeyPrefix)", "class_method_signature": "StorageFileHelper.validateStorageUnitS3Files(StorageUnit storageUnit, List<String> actualS3Files, String s3KeyPrefix)", "testcase": false, "constructor": false}], "file": "herd-code/herd-service/src/main/java/org/finra/herd/service/helper/StorageFileHelper.java"}, "focal_method": {"identifier": "createStorageFilesFromEntities", "parameters": "(Collection<StorageFileEntity> storageFileEntities, String storageUnitDirectoryPath)", "modifiers": "public", "return": "List<StorageFile>", "body": "public List<StorageFile> createStorageFilesFromEntities(Collection<StorageFileEntity> storageFileEntities, String storageUnitDirectoryPath)\n    {\n        List<StorageFile> storageFiles = new ArrayList<>();\n\n        for (StorageFileEntity storageFileEntity : storageFileEntities)\n        {\n            storageFiles.add(createStorageFileFromEntity(storageFileEntity, storageUnitDirectoryPath));\n        }\n\n        return storageFiles;\n    }", "signature": "List<StorageFile> createStorageFilesFromEntities(Collection<StorageFileEntity> storageFileEntities, String storageUnitDirectoryPath)", "full_signature": "public List<StorageFile> createStorageFilesFromEntities(Collection<StorageFileEntity> storageFileEntities, String storageUnitDirectoryPath)", "class_method_signature": "StorageFileHelper.createStorageFilesFromEntities(Collection<StorageFileEntity> storageFileEntities, String storageUnitDirectoryPath)", "testcase": false, "constructor": false, "invocations": ["add", "createStorageFileFromEntity"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}