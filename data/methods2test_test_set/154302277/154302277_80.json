{"test_class": {"identifier": "CosemDateConverterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final byte FIRST_BYTE_FOR_YEAR = (byte) 0x07;", "modifier": "private static final", "type": "byte", "declarator": "FIRST_BYTE_FOR_YEAR = (byte) 0x07", "var_name": "FIRST_BYTE_FOR_YEAR"}, {"original_string": "private static final byte SECOND_BYTE_FOR_YEAR = (byte) 0xE0;", "modifier": "private static final", "type": "byte", "declarator": "SECOND_BYTE_FOR_YEAR = (byte) 0xE0", "var_name": "SECOND_BYTE_FOR_YEAR"}, {"original_string": "private static final byte BYTE_FOR_MONTH = 4;", "modifier": "private static final", "type": "byte", "declarator": "BYTE_FOR_MONTH = 4", "var_name": "BYTE_FOR_MONTH"}, {"original_string": "private static final byte BYTE_FOR_DAY_OF_MONTH = 7;", "modifier": "private static final", "type": "byte", "declarator": "BYTE_FOR_DAY_OF_MONTH = 7", "var_name": "BYTE_FOR_DAY_OF_MONTH"}, {"original_string": "private static final byte BYTE_FOR_DAY_OF_WEEK = (byte) 0xFF;", "modifier": "private static final", "type": "byte", "declarator": "BYTE_FOR_DAY_OF_WEEK = (byte) 0xFF", "var_name": "BYTE_FOR_DAY_OF_WEEK"}, {"original_string": "private static final byte[] COSEMDATE_BYTE_ARRAY = { FIRST_BYTE_FOR_YEAR, SECOND_BYTE_FOR_YEAR, BYTE_FOR_MONTH,\n            BYTE_FOR_DAY_OF_MONTH, BYTE_FOR_DAY_OF_WEEK };", "modifier": "private static final", "type": "byte[]", "declarator": "COSEMDATE_BYTE_ARRAY = { FIRST_BYTE_FOR_YEAR, SECOND_BYTE_FOR_YEAR, BYTE_FOR_MONTH,\n            BYTE_FOR_DAY_OF_MONTH, BYTE_FOR_DAY_OF_WEEK }", "var_name": "COSEMDATE_BYTE_ARRAY"}, {"original_string": "private MapperFactory mapperFactory = new DefaultMapperFactory.Builder().build();", "modifier": "private", "type": "MapperFactory", "declarator": "mapperFactory = new DefaultMapperFactory.Builder().build()", "var_name": "mapperFactory"}], "file": "osgp/platform/osgp-adapter-ws-smartmetering/src/test/java/org/opensmartgridplatform/adapter/ws/smartmetering/application/mapping/CosemDateConverterTest.java"}, "test_case": {"identifier": "testWildCards", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWildCards() {\n        byte[] source = new byte[] { (byte) 0x07, (byte) 0xDF, 6, (byte) 0xFF, (byte) 0xFF };\n        final CosemDateConverter converter = new CosemDateConverter();\n        CosemDate date = converter.convert(source, converter.getBType(), null);\n        assertThat(date.getYear()).isEqualTo(2015);\n        assertThat(date.getMonth()).isEqualTo(6);\n        assertThat(date.getDayOfMonth()).isEqualTo(0xFF);\n        assertThat(date.getDayOfWeek()).isEqualTo(0xFF);\n\n        source = new byte[] { (byte) 0xFF, (byte) 0xFF, (byte) 0xFE, (byte) 0xFD, (byte) 0xFF };\n        date = converter.convert(source, converter.getBType(), null);\n        assertThat(date.getYear()).isEqualTo(0xFFFF);\n        assertThat(date.getMonth()).isEqualTo(0xFE);\n        assertThat(date.getDayOfMonth()).isEqualTo(0xFD);\n        assertThat(date.getDayOfWeek()).isEqualTo(0xFF);\n\n        source = new byte[] { (byte) 0xFF, (byte) 0xFF, (byte) 0xFE, 21, 3 };\n        date = converter.convert(source, converter.getBType(), null);\n        assertThat(date.getYear()).isEqualTo(0xFFFF);\n        assertThat(date.getMonth()).isEqualTo(0xFE);\n        assertThat(date.getDayOfMonth()).isEqualTo(21);\n        assertThat(date.getDayOfWeek()).isEqualTo(3);\n    }", "signature": "void testWildCards()", "full_signature": "@Test public void testWildCards()", "class_method_signature": "CosemDateConverterTest.testWildCards()", "testcase": true, "constructor": false, "invocations": ["convert", "getBType", "isEqualTo", "assertThat", "getYear", "isEqualTo", "assertThat", "getMonth", "isEqualTo", "assertThat", "getDayOfMonth", "isEqualTo", "assertThat", "getDayOfWeek", "convert", "getBType", "isEqualTo", "assertThat", "getYear", "isEqualTo", "assertThat", "getMonth", "isEqualTo", "assertThat", "getDayOfMonth", "isEqualTo", "assertThat", "getDayOfWeek", "convert", "getBType", "isEqualTo", "assertThat", "getYear", "isEqualTo", "assertThat", "getMonth", "isEqualTo", "assertThat", "getDayOfMonth", "isEqualTo", "assertThat", "getDayOfWeek"]}, "focal_class": {"identifier": "CosemDateConverter", "superclass": "extends CustomConverter<byte[], CosemDate>", "interfaces": "", "fields": [], "methods": [{"identifier": "convert", "parameters": "(final byte[] source, final Type<? extends CosemDate> destinationType,\n            final MappingContext context)", "modifiers": "@Override public", "return": "CosemDate", "signature": "CosemDate convert(final byte[] source, final Type<? extends CosemDate> destinationType,\n            final MappingContext context)", "full_signature": "@Override public CosemDate convert(final byte[] source, final Type<? extends CosemDate> destinationType,\n            final MappingContext context)", "class_method_signature": "CosemDateConverter.convert(final byte[] source, final Type<? extends CosemDate> destinationType,\n            final MappingContext context)", "testcase": false, "constructor": false}], "file": "osgp/platform/osgp-adapter-ws-smartmetering/src/main/java/org/opensmartgridplatform/adapter/ws/smartmetering/application/mapping/CosemDateConverter.java"}, "focal_method": {"identifier": "convert", "parameters": "(final byte[] source, final Type<? extends CosemDate> destinationType,\n            final MappingContext context)", "modifiers": "@Override public", "return": "CosemDate", "body": "@Override\n    public CosemDate convert(final byte[] source, final Type<? extends CosemDate> destinationType,\n            final MappingContext context) {\n        final ByteBuffer bb = ByteBuffer.wrap(source);\n        final int year = bb.getShort() & 0xFFFF;\n        final int month = bb.get() & 0xFF;\n        final int day = bb.get() & 0xFF;\n        final int weekDay = bb.get() & 0xFF;\n        return new CosemDate(year, month, day, weekDay);\n    }", "signature": "CosemDate convert(final byte[] source, final Type<? extends CosemDate> destinationType,\n            final MappingContext context)", "full_signature": "@Override public CosemDate convert(final byte[] source, final Type<? extends CosemDate> destinationType,\n            final MappingContext context)", "class_method_signature": "CosemDateConverter.convert(final byte[] source, final Type<? extends CosemDate> destinationType,\n            final MappingContext context)", "testcase": false, "constructor": false, "invocations": ["wrap", "getShort", "get", "get", "get"]}, "repository": {"repo_id": 154302277, "url": "https://github.com/OSGP/open-smart-grid-platform", "stars": 30, "created": "10/23/2018 9:41:12 AM +00:00", "updates": "2020-01-26T20:15:09+00:00", "fork": "False", "license": "licensed"}}