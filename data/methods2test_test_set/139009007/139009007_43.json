{"test_class": {"identifier": "FromCompletionStageFactoryTest", "superclass": "extends StageTestBase", "interfaces": "", "fields": [{"original_string": "private final FromCompletionStageFactory factory = new FromCompletionStageFactory();", "modifier": "private final", "type": "FromCompletionStageFactory", "declarator": "factory = new FromCompletionStageFactory()", "var_name": "factory"}], "file": "implementation/src/test/java/io/smallrye/reactive/streams/stages/FromCompletionStageFactoryTest.java"}, "test_case": {"identifier": "createWithNullAsResult", "parameters": "()", "modifiers": "@Test(expected = NullPointerException.class) public", "return": "void", "body": "@Test(expected = NullPointerException.class)\n    public void createWithNullAsResult() {\n        factory.create(null, () -> null).get();\n    }", "signature": "void createWithNullAsResult()", "full_signature": "@Test(expected = NullPointerException.class) public void createWithNullAsResult()", "class_method_signature": "FromCompletionStageFactoryTest.createWithNullAsResult()", "testcase": true, "constructor": false, "invocations": ["get", "create"]}, "focal_class": {"identifier": "FromCompletionStageFactory", "superclass": "", "interfaces": "implements PublisherStageFactory<Stage.FromCompletionStage>", "fields": [], "methods": [{"identifier": "create", "parameters": "(Engine engine, Stage.FromCompletionStage stage)", "modifiers": "@Override public", "return": "PublisherStage<O>", "signature": "PublisherStage<O> create(Engine engine, Stage.FromCompletionStage stage)", "full_signature": "@Override public PublisherStage<O> create(Engine engine, Stage.FromCompletionStage stage)", "class_method_signature": "FromCompletionStageFactory.create(Engine engine, Stage.FromCompletionStage stage)", "testcase": false, "constructor": false}], "file": "implementation/src/main/java/io/smallrye/reactive/streams/stages/FromCompletionStageFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(Engine engine, Stage.FromCompletionStage stage)", "modifiers": "@Override public", "return": "PublisherStage<O>", "body": "@Override\n    public <O> PublisherStage<O> create(Engine engine, Stage.FromCompletionStage stage) {\n        Objects.requireNonNull(stage);\n        return () -> {\n            CompletionStage<O> cs = Casts.cast(Objects.requireNonNull(stage.getCompletionStage()));\n            return Flowable.fromPublisher(fromCompletionStage(cs, false));\n        };\n    }", "signature": "PublisherStage<O> create(Engine engine, Stage.FromCompletionStage stage)", "full_signature": "@Override public PublisherStage<O> create(Engine engine, Stage.FromCompletionStage stage)", "class_method_signature": "FromCompletionStageFactory.create(Engine engine, Stage.FromCompletionStage stage)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "cast", "requireNonNull", "getCompletionStage", "fromPublisher", "fromCompletionStage"]}, "repository": {"repo_id": 139009007, "url": "https://github.com/smallrye/smallrye-reactive-streams-operators", "stars": 14, "created": "6/28/2018 11:27:21 AM +00:00", "updates": "2020-01-20T06:48:19+00:00", "fork": "False", "license": "licensed"}}