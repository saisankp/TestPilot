{"test_class": {"identifier": "MatrixTest", "superclass": "", "interfaces": "", "fields": [], "file": "lib/common/src/test/java/dk/alexandra/fresco/lib/common/collections/MatrixTest.java"}, "test_case": {"identifier": "testToString", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testToString() {\n    IntFunction<ArrayList<Integer>> mockFunction = mock(IntFunction.class);\n    when(mockFunction.apply(any(int.class))).thenReturn(new ArrayList<>());\n    Matrix matrix = new Matrix(1, 2, mockFunction);\n\n    String stringOut = matrix.toString();\n    Assert.assertTrue(stringOut.contains(\"width=2,\"));\n    Assert.assertTrue(stringOut.contains(\"height=1,\"));\n    Assert.assertTrue(stringOut.contains(\"matrix=[[]]\"));\n  }", "signature": "void testToString()", "full_signature": "@Test public void testToString()", "class_method_signature": "MatrixTest.testToString()", "testcase": true, "constructor": false, "invocations": ["mock", "thenReturn", "when", "apply", "any", "toString", "assertTrue", "contains", "assertTrue", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "Matrix", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final int width;", "modifier": "private final", "type": "int", "declarator": "width", "var_name": "width"}, {"original_string": "private final int height;", "modifier": "private final", "type": "int", "declarator": "height", "var_name": "height"}, {"original_string": "private final ArrayList<ArrayList<T>> matrix;", "modifier": "private final", "type": "ArrayList<ArrayList<T>>", "declarator": "matrix", "var_name": "matrix"}], "methods": [{"identifier": "Matrix", "parameters": "(int height, int width, IntFunction<ArrayList<T>> rowBuilder)", "modifiers": "public", "return": "", "signature": " Matrix(int height, int width, IntFunction<ArrayList<T>> rowBuilder)", "full_signature": "public  Matrix(int height, int width, IntFunction<ArrayList<T>> rowBuilder)", "class_method_signature": "Matrix.Matrix(int height, int width, IntFunction<ArrayList<T>> rowBuilder)", "testcase": false, "constructor": true}, {"identifier": "Matrix", "parameters": "(Matrix<T> other)", "modifiers": "public", "return": "", "signature": " Matrix(Matrix<T> other)", "full_signature": "public  Matrix(Matrix<T> other)", "class_method_signature": "Matrix.Matrix(Matrix<T> other)", "testcase": false, "constructor": true}, {"identifier": "Matrix", "parameters": "(int height, int width, ArrayList<ArrayList<T>> matrix)", "modifiers": "public", "return": "", "signature": " Matrix(int height, int width, ArrayList<ArrayList<T>> matrix)", "full_signature": "public  Matrix(int height, int width, ArrayList<ArrayList<T>> matrix)", "class_method_signature": "Matrix.Matrix(int height, int width, ArrayList<ArrayList<T>> matrix)", "testcase": false, "constructor": true}, {"identifier": "getRows", "parameters": "()", "modifiers": "public", "return": "ArrayList<ArrayList<T>>", "signature": "ArrayList<ArrayList<T>> getRows()", "full_signature": "public ArrayList<ArrayList<T>> getRows()", "class_method_signature": "Matrix.getRows()", "testcase": false, "constructor": false}, {"identifier": "getRow", "parameters": "(int i)", "modifiers": "public", "return": "ArrayList<T>", "signature": "ArrayList<T> getRow(int i)", "full_signature": "public ArrayList<T> getRow(int i)", "class_method_signature": "Matrix.getRow(int i)", "testcase": false, "constructor": false}, {"identifier": "setRow", "parameters": "(int i, ArrayList<T> row)", "modifiers": "public", "return": "void", "signature": "void setRow(int i, ArrayList<T> row)", "full_signature": "public void setRow(int i, ArrayList<T> row)", "class_method_signature": "Matrix.setRow(int i, ArrayList<T> row)", "testcase": false, "constructor": false}, {"identifier": "getWidth", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getWidth()", "full_signature": "public int getWidth()", "class_method_signature": "Matrix.getWidth()", "testcase": false, "constructor": false}, {"identifier": "getHeight", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getHeight()", "full_signature": "public int getHeight()", "class_method_signature": "Matrix.getHeight()", "testcase": false, "constructor": false}, {"identifier": "getColumn", "parameters": "(int i)", "modifiers": "public", "return": "List<T>", "signature": "List<T> getColumn(int i)", "full_signature": "public List<T> getColumn(int i)", "class_method_signature": "Matrix.getColumn(int i)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Matrix.toString()", "testcase": false, "constructor": false}], "file": "lib/common/src/main/java/dk/alexandra/fresco/lib/common/collections/Matrix.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n  public String toString() {\n    return \"Matrix{\" + \"width=\" + width + \", height=\" + height + \", matrix=\" + matrix + '}';\n  }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Matrix.toString()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}