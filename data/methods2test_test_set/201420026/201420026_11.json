{"test_class": {"identifier": "LideaMethodDAOTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n    private LideaMethodDAO lideaMethodDAO;", "modifier": "@Resource\n    private", "type": "LideaMethodDAO", "declarator": "lideaMethodDAO", "var_name": "lideaMethodDAO"}], "file": "mmc-lidea-web/src/test/java/com/mmc/flink/lidea/dao/LideaMethodDAOTest.java"}, "test_case": {"identifier": "testGet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGet() {\n\n        LideaMethodReq req = new LideaMethodReq();\n\n        req.setAppName(\"cabinet-base-server\");\n        req.setServiceName(\"com.fcbox.edms.terminal.api.CabinetServiceFacade\");\n        req.setMethodName(\"getCabinetInfo\");\n\n\n        LideaMethodResp resp = lideaMethodDAO.get(req);\n        System.out.println(\"==========================================================================================\");\n        System.out.println(JSON.toJSONString(resp));\n\n    }", "signature": "void testGet()", "full_signature": "@Test public void testGet()", "class_method_signature": "LideaMethodDAOTest.testGet()", "testcase": true, "constructor": false, "invocations": ["setAppName", "setServiceName", "setMethodName", "get", "println", "println", "toJSONString"]}, "focal_class": {"identifier": "LideaMethodDAO", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Resource\n    private HbaseTemplate hbaseTemplate;", "modifier": "@Resource\n    private", "type": "HbaseTemplate", "declarator": "hbaseTemplate", "var_name": "hbaseTemplate"}], "methods": [{"identifier": "put", "parameters": "(LideaMethodBO bo)", "modifiers": "public", "return": "LideaMethodBO", "signature": "LideaMethodBO put(LideaMethodBO bo)", "full_signature": "public LideaMethodBO put(LideaMethodBO bo)", "class_method_signature": "LideaMethodDAO.put(LideaMethodBO bo)", "testcase": false, "constructor": false}, {"identifier": "scan", "parameters": "(LideaMethodReq req)", "modifiers": "public", "return": "List<LideaMethodBO>", "signature": "List<LideaMethodBO> scan(LideaMethodReq req)", "full_signature": "public List<LideaMethodBO> scan(LideaMethodReq req)", "class_method_signature": "LideaMethodDAO.scan(LideaMethodReq req)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(LideaMethodReq req)", "modifiers": "public", "return": "LideaMethodResp", "signature": "LideaMethodResp get(LideaMethodReq req)", "full_signature": "public LideaMethodResp get(LideaMethodReq req)", "class_method_signature": "LideaMethodDAO.get(LideaMethodReq req)", "testcase": false, "constructor": false}], "file": "mmc-lidea-web/src/main/java/com/mmc/flink/lidea/dao/LideaMethodDAO.java"}, "focal_method": {"identifier": "get", "parameters": "(LideaMethodReq req)", "modifiers": "public", "return": "LideaMethodResp", "body": "public LideaMethodResp get(LideaMethodReq req) {\n\n        log.info(\"req : {}\", JSON.toJSONString(req));\n\n        LideaMethodResp resp = new LideaMethodResp();\n        resp.setAppName(req.getAppName());\n        resp.setServiceName(req.getServiceName());\n        resp.setMethodName(req.getMethodName());\n\n        List<LideaMethodBO> data = hbaseTemplate.execute(Const.LIDEA_METHOD_TABLE, (table) -> {\n\n            LideaMethodBO bo = new LideaMethodBO();\n            bo.setAppName(req.getAppName());\n            bo.setServiceName(req.getServiceName());\n            bo.setMethodName(req.getMethodName());\n            byte[] rowKey = LideaMethodEntry.makeRowKey(bo);\n\n            Get get = new Get(rowKey);\n\n            Result result = table.get(get);\n\n            LideaMethodBO lideaMethodBO = LideaMethodEntry.map(result);\n\n            return Collections.singletonList(lideaMethodBO);\n        });\n\n        resp.setData(data);\n\n        return resp;\n    }", "signature": "LideaMethodResp get(LideaMethodReq req)", "full_signature": "public LideaMethodResp get(LideaMethodReq req)", "class_method_signature": "LideaMethodDAO.get(LideaMethodReq req)", "testcase": false, "constructor": false, "invocations": ["info", "toJSONString", "setAppName", "getAppName", "setServiceName", "getServiceName", "setMethodName", "getMethodName", "execute", "setAppName", "getAppName", "setServiceName", "getServiceName", "setMethodName", "getMethodName", "makeRowKey", "get", "map", "singletonList", "setData"]}, "repository": {"repo_id": 201420026, "url": "https://github.com/VIPJoey/Lidea", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 13, "size": 991, "license": "licensed"}}