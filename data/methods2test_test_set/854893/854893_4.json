{"test_class": {"identifier": "ConvertersTest", "superclass": "", "interfaces": "", "fields": [], "file": "preon-el/src/test/java/org/codehaus/preon/el/util/ConvertersTest.java"}, "test_case": {"identifier": "testConversions", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConversions() {\n        assertNull(Converters.get(String.class, Boolean.class));\n        Converter<Byte, Integer> converter1 = Converters.get(Byte.class, Integer.class);\n        assertNotNull(converter1);\n        assertEquals(new Integer(3), converter1.convert(new Byte((byte) 3)));\n        Converter<Short, Integer> converter2 = Converters.get(Short.class, Integer.class);\n        assertNotNull(converter2);\n        assertEquals(new Integer(3), converter2.convert(new Short((byte) 3)));\n        Converter<Long, Integer> converter3 = Converters.get(Long.class, Integer.class);\n        assertNotNull(converter3);\n        assertEquals(new Integer(3), converter3.convert(new Long(3)));\n    }", "signature": "void testConversions()", "full_signature": "@Test public void testConversions()", "class_method_signature": "ConvertersTest.testConversions()", "testcase": true, "constructor": false, "invocations": ["assertNull", "get", "get", "assertNotNull", "assertEquals", "convert", "get", "assertNotNull", "assertEquals", "convert", "get", "assertNotNull", "assertEquals", "convert"]}, "focal_class": {"identifier": "Converters", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static ByteToIntegerConverter byteToInteger = new ByteToIntegerConverter();", "modifier": "private static", "type": "ByteToIntegerConverter", "declarator": "byteToInteger = new ByteToIntegerConverter()", "var_name": "byteToInteger"}, {"original_string": "private static ShortToIntegerConverter shortToInteger = new ShortToIntegerConverter();", "modifier": "private static", "type": "ShortToIntegerConverter", "declarator": "shortToInteger = new ShortToIntegerConverter()", "var_name": "shortToInteger"}, {"original_string": "private static LongToIntegerConverter longToInteger = new LongToIntegerConverter();", "modifier": "private static", "type": "LongToIntegerConverter", "declarator": "longToInteger = new LongToIntegerConverter()", "var_name": "longToInteger"}], "methods": [{"identifier": "get", "parameters": "(Class<T> from, Class<V> to)", "modifiers": "public static", "return": "Converter<T, V>", "signature": "Converter<T, V> get(Class<T> from, Class<V> to)", "full_signature": "public static Converter<T, V> get(Class<T> from, Class<V> to)", "class_method_signature": "Converters.get(Class<T> from, Class<V> to)", "testcase": false, "constructor": false}, {"identifier": "toInt", "parameters": "(T value)", "modifiers": "public static", "return": "int", "signature": "int toInt(T value)", "full_signature": "public static int toInt(T value)", "class_method_signature": "Converters.toInt(T value)", "testcase": false, "constructor": false}], "file": "preon-el/src/main/java/org/codehaus/preon/el/util/Converters.java"}, "focal_method": {"identifier": "get", "parameters": "(Class<T> from, Class<V> to)", "modifiers": "public static", "return": "Converter<T, V>", "body": "public static <T, V> Converter<T, V> get(Class<T> from, Class<V> to) {\n        if (to == Integer.class || to == int.class) {\n            if (from == Byte.class || from == byte.class) {\n                return (Converter<T, V>) byteToInteger;\n            } else if (from == Short.class || from == short.class) {\n                return (Converter<T, V>) shortToInteger;\n            } else if (from == Long.class || from == long.class) {\n                return (Converter<T, V>) longToInteger;\n            } else {\n                return null;\n            }\n        } else {\n            return null;\n        }\n    }", "signature": "Converter<T, V> get(Class<T> from, Class<V> to)", "full_signature": "public static Converter<T, V> get(Class<T> from, Class<V> to)", "class_method_signature": "Converters.get(Class<T> from, Class<V> to)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 854893, "url": "https://github.com/preon/preon", "language": "Java", "is_fork": false, "fork_count": 78, "stargazer_count": 155, "size": 2459, "license": "licensed"}}