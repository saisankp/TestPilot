{"test_class": {"identifier": "AlarmMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final URI DEFAULT_GRAPHITE_URL;", "modifier": "private static final", "type": "URI", "declarator": "DEFAULT_GRAPHITE_URL", "var_name": "DEFAULT_GRAPHITE_URL"}, {"original_string": "private static final URI OTHER_GRAPHITE_URL;", "modifier": "private static final", "type": "URI", "declarator": "OTHER_GRAPHITE_URL", "var_name": "OTHER_GRAPHITE_URL"}, {"original_string": "private static final URI DEFAULT_GRAPHITE_IPPORT;", "modifier": "private static final", "type": "URI", "declarator": "DEFAULT_GRAPHITE_IPPORT", "var_name": "DEFAULT_GRAPHITE_IPPORT"}, {"original_string": "private static final URI OTHER_GRAPHITE_IPPORT;", "modifier": "private static final", "type": "URI", "declarator": "OTHER_GRAPHITE_IPPORT", "var_name": "OTHER_GRAPHITE_IPPORT"}, {"original_string": "@InjectMocks\n    private AlarmMapper alarmMapper = new AlarmMapper();", "modifier": "@InjectMocks\n    private", "type": "AlarmMapper", "declarator": "alarmMapper = new AlarmMapper()", "var_name": "alarmMapper"}, {"original_string": "@Mock\n    private GraphiteSources graphiteSources;", "modifier": "@Mock\n    private", "type": "GraphiteSources", "declarator": "graphiteSources", "var_name": "graphiteSources"}, {"original_string": "@Mock\n    private AlarmValidator alarmValidator;", "modifier": "@Mock\n    private", "type": "AlarmValidator", "declarator": "alarmValidator", "var_name": "alarmValidator"}, {"original_string": "@Mock\n    private SubscriptionMapper subscriptionMapper;", "modifier": "@Mock\n    private", "type": "SubscriptionMapper", "declarator": "subscriptionMapper", "var_name": "subscriptionMapper"}, {"original_string": "private Alarm defaultAlarm;", "modifier": "private", "type": "Alarm", "declarator": "defaultAlarm", "var_name": "defaultAlarm"}], "file": "services/src/test/java/com/vsct/supervision/notification/model/AlarmMapperTest.java"}, "test_case": {"identifier": "testNoFrontendUrlWithNoMapping", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testNoFrontendUrlWithNoMapping() throws Exception {\n\n        Map<URI, URI> emptyMap = new HashMap<>();\n        when(graphiteSources.getIpportsByUrl()).thenReturn(new HashMap<>());\n        when(this.graphiteSources.getSources()).thenReturn(new ArrayList<GraphiteSources.GraphiteSource>());\n\n        Alarm frontendAlarm = TestUtils.getDefaultAlarm();\n        frontendAlarm.setGraphiteBaseUrl(null);\n        Alarm backendAlarm = alarmMapper.mapNewAlarmFormToSeyren(frontendAlarm);\n        assertEquals(null, backendAlarm.getGraphiteBaseUrl());\n    }", "signature": "void testNoFrontendUrlWithNoMapping()", "full_signature": "@Test public void testNoFrontendUrlWithNoMapping()", "class_method_signature": "AlarmMapperTest.testNoFrontendUrlWithNoMapping()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getIpportsByUrl", "thenReturn", "when", "getSources", "getDefaultAlarm", "setGraphiteBaseUrl", "mapNewAlarmFormToSeyren", "assertEquals", "getGraphiteBaseUrl"]}, "focal_class": {"identifier": "AlarmMapper", "superclass": "", "interfaces": "", "fields": [{"original_string": "public static final String DEFAULT_FROM = \"-25min\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_FROM = \"-25min\"", "var_name": "DEFAULT_FROM"}, {"original_string": "public static final String DEFAULT_UNTIL = \"-1min\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_UNTIL = \"-1min\"", "var_name": "DEFAULT_UNTIL"}, {"original_string": "@Autowired\n    private GraphiteSources graphiteSources;", "modifier": "@Autowired\n    private", "type": "GraphiteSources", "declarator": "graphiteSources", "var_name": "graphiteSources"}, {"original_string": "@Autowired\n    private SubscriptionMapper subscriptionMapper;", "modifier": "@Autowired\n    private", "type": "SubscriptionMapper", "declarator": "subscriptionMapper", "var_name": "subscriptionMapper"}, {"original_string": "private AlarmValidator alarmValidator = new AlarmValidator();", "modifier": "private", "type": "AlarmValidator", "declarator": "alarmValidator = new AlarmValidator()", "var_name": "alarmValidator"}], "methods": [{"identifier": "mapToPresentation", "parameters": "(Alarm.Alarms alarms)", "modifiers": "public", "return": "Alarm.Alarms", "signature": "Alarm.Alarms mapToPresentation(Alarm.Alarms alarms)", "full_signature": "public Alarm.Alarms mapToPresentation(Alarm.Alarms alarms)", "class_method_signature": "AlarmMapper.mapToPresentation(Alarm.Alarms alarms)", "testcase": false, "constructor": false}, {"identifier": "mapToPresentation", "parameters": "(final Collection<Alarm> alarms)", "modifiers": "public", "return": "Collection<Alarm>", "signature": "Collection<Alarm> mapToPresentation(final Collection<Alarm> alarms)", "full_signature": "public Collection<Alarm> mapToPresentation(final Collection<Alarm> alarms)", "class_method_signature": "AlarmMapper.mapToPresentation(final Collection<Alarm> alarms)", "testcase": false, "constructor": false}, {"identifier": "mapToPresentation", "parameters": "(Alarm alarm)", "modifiers": "public", "return": "Alarm", "signature": "Alarm mapToPresentation(Alarm alarm)", "full_signature": "public Alarm mapToPresentation(Alarm alarm)", "class_method_signature": "AlarmMapper.mapToPresentation(Alarm alarm)", "testcase": false, "constructor": false}, {"identifier": "mapNewAlarmFormToSeyren", "parameters": "(Alarm newAlarm)", "modifiers": "public", "return": "Alarm", "signature": "Alarm mapNewAlarmFormToSeyren(Alarm newAlarm)", "full_signature": "public Alarm mapNewAlarmFormToSeyren(Alarm newAlarm)", "class_method_signature": "AlarmMapper.mapNewAlarmFormToSeyren(Alarm newAlarm)", "testcase": false, "constructor": false}, {"identifier": "mapUpdateAlarmFormToSeyren", "parameters": "(final Alarm updatedAlarm)", "modifiers": "public", "return": "Alarm", "signature": "Alarm mapUpdateAlarmFormToSeyren(final Alarm updatedAlarm)", "full_signature": "public Alarm mapUpdateAlarmFormToSeyren(final Alarm updatedAlarm)", "class_method_signature": "AlarmMapper.mapUpdateAlarmFormToSeyren(final Alarm updatedAlarm)", "testcase": false, "constructor": false}, {"identifier": "initListSubscription", "parameters": "(final Alarm newAlarm)", "modifiers": "private", "return": "void", "signature": "void initListSubscription(final Alarm newAlarm)", "full_signature": "private void initListSubscription(final Alarm newAlarm)", "class_method_signature": "AlarmMapper.initListSubscription(final Alarm newAlarm)", "testcase": false, "constructor": false}, {"identifier": "updateSourcesToBackend", "parameters": "(final Alarm alarm)", "modifiers": "private", "return": "void", "signature": "void updateSourcesToBackend(final Alarm alarm)", "full_signature": "private void updateSourcesToBackend(final Alarm alarm)", "class_method_signature": "AlarmMapper.updateSourcesToBackend(final Alarm alarm)", "testcase": false, "constructor": false}], "file": "services/src/main/java/com/vsct/supervision/notification/model/AlarmMapper.java"}, "focal_method": {"identifier": "mapNewAlarmFormToSeyren", "parameters": "(Alarm newAlarm)", "modifiers": "public", "return": "Alarm", "body": "public Alarm mapNewAlarmFormToSeyren(Alarm newAlarm) throws CerebroException {\n\n        // Validate required fields\n        alarmValidator.validateAlarm(newAlarm);\n\n        // Reset unwanted fields or enforced default values\n        newAlarm.setId(null);\n        newAlarm.setLastCheck(null);\n\n        if (newAlarm.getFrom() == null || newAlarm.getFrom().isEmpty()) {\n            newAlarm.setFrom(DEFAULT_FROM);\n        }\n\n        if (newAlarm.getUntil() == null || newAlarm.getUntil().isEmpty()) {\n            newAlarm.setUntil(DEFAULT_UNTIL);\n        }\n\n        updateSourcesToBackend(newAlarm);\n\n        initListSubscription(newAlarm);\n\n        return newAlarm;\n    }", "signature": "Alarm mapNewAlarmFormToSeyren(Alarm newAlarm)", "full_signature": "public Alarm mapNewAlarmFormToSeyren(Alarm newAlarm)", "class_method_signature": "AlarmMapper.mapNewAlarmFormToSeyren(Alarm newAlarm)", "testcase": false, "constructor": false, "invocations": ["validateAlarm", "setId", "setLastCheck", "getFrom", "isEmpty", "getFrom", "setFrom", "getUntil", "isEmpty", "getUntil", "setUntil", "updateSourcesToBackend", "initListSubscription"]}, "repository": {"repo_id": 78868092, "url": "https://github.com/voyages-sncf-technologies/cerebro", "language": "Java", "is_fork": false, "fork_count": 14, "stargazer_count": 98, "size": 660, "license": "licensed"}}