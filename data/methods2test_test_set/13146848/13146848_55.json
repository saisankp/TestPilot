{"test_class": {"identifier": "FileValidatorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private File mockFile;", "modifier": "private", "type": "File", "declarator": "mockFile", "var_name": "mockFile"}, {"original_string": "private FileValidator victim = new FileValidator();", "modifier": "private", "type": "FileValidator", "declarator": "victim = new FileValidator()", "var_name": "victim"}], "file": "sejda-model/src/test/java/org/sejda/model/validation/validator/FileValidatorTest.java"}, "test_case": {"identifier": "testPositive", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPositive() {\n        assertTrue(victim.isValid(mockFile, null));\n    }", "signature": "void testPositive()", "full_signature": "@Test public void testPositive()", "class_method_signature": "FileValidatorTest.testPositive()", "testcase": true, "constructor": false, "invocations": ["assertTrue", "isValid"]}, "focal_class": {"identifier": "FileValidator", "superclass": "", "interfaces": "implements ConstraintValidator<IsFile, File>", "fields": [], "methods": [{"identifier": "initialize", "parameters": "(IsFile constraintAnnotation)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(IsFile constraintAnnotation)", "full_signature": "@Override public void initialize(IsFile constraintAnnotation)", "class_method_signature": "FileValidator.initialize(IsFile constraintAnnotation)", "testcase": false, "constructor": false}, {"identifier": "isValid", "parameters": "(File value, ConstraintValidatorContext context)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isValid(File value, ConstraintValidatorContext context)", "full_signature": "@Override public boolean isValid(File value, ConstraintValidatorContext context)", "class_method_signature": "FileValidator.isValid(File value, ConstraintValidatorContext context)", "testcase": false, "constructor": false}], "file": "sejda-model/src/main/java/org/sejda/model/validation/validator/FileValidator.java"}, "focal_method": {"identifier": "isValid", "parameters": "(File value, ConstraintValidatorContext context)", "modifiers": "@Override public", "return": "boolean", "body": "@Override\n    public boolean isValid(File value, ConstraintValidatorContext context) {\n        if (value != null && value.exists()) {\n            return value.isFile();\n        }\n        return true;\n    }", "signature": "boolean isValid(File value, ConstraintValidatorContext context)", "full_signature": "@Override public boolean isValid(File value, ConstraintValidatorContext context)", "class_method_signature": "FileValidator.isValid(File value, ConstraintValidatorContext context)", "testcase": false, "constructor": false, "invocations": ["exists", "isFile"]}, "repository": {"repo_id": 13146848, "url": "https://github.com/torakiki/sejda", "language": "Java", "is_fork": false, "fork_count": 47, "stargazer_count": 316, "size": 59670, "license": "licensed"}}