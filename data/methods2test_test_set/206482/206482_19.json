{"test_class": {"identifier": "AtomDateTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/org/apache/abdera/model/AtomDateTest.java"}, "test_case": {"identifier": "testHashCode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHashCode() {\n        long time = System.currentTimeMillis();\n\n        AtomDate ad1 = new AtomDate(time);\n        assertTrue(ad1.hashCode() == ad1.hashCode());\n\n        AtomDate ad2 = new AtomDate(time + 10);\n        assertFalse(ad1.hashCode() == ad2.hashCode());\n\n    }", "signature": "void testHashCode()", "full_signature": "@Test public void testHashCode()", "class_method_signature": "AtomDateTest.testHashCode()", "testcase": true, "constructor": false, "invocations": ["currentTimeMillis", "assertTrue", "hashCode", "hashCode", "assertFalse", "hashCode", "hashCode"]}, "focal_class": {"identifier": "AtomDate", "superclass": "", "interfaces": "implements Cloneable, Serializable", "fields": [{"original_string": "private static final long serialVersionUID = -7062139688635877771L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = -7062139688635877771L", "var_name": "serialVersionUID"}, {"original_string": "private Date value;", "modifier": "private", "type": "Date", "declarator": "value", "var_name": "value"}, {"original_string": "private static final Pattern PATTERN =\n        Pattern\n            .compile(\"(\\\\d{4})(?:-(\\\\d{2}))?(?:-(\\\\d{2}))?(?:([Tt])?(?:(\\\\d{2}))?(?::(\\\\d{2}))?(?::(\\\\d{2}))?(?:\\\\.(\\\\d{3}))?)?([Zz])?(?:([+-])(\\\\d{2}):(\\\\d{2}))?\");", "modifier": "private static final", "type": "Pattern", "declarator": "PATTERN =\n        Pattern\n            .compile(\"(\\\\d{4})(?:-(\\\\d{2}))?(?:-(\\\\d{2}))?(?:([Tt])?(?:(\\\\d{2}))?(?::(\\\\d{2}))?(?::(\\\\d{2}))?(?:\\\\.(\\\\d{3}))?)?([Zz])?(?:([+-])(\\\\d{2}):(\\\\d{2}))?\")", "var_name": "PATTERN"}], "methods": [{"identifier": "AtomDate", "parameters": "()", "modifiers": "public", "return": "", "signature": " AtomDate()", "full_signature": "public  AtomDate()", "class_method_signature": "AtomDate.AtomDate()", "testcase": false, "constructor": true}, {"identifier": "AtomDate", "parameters": "(String value)", "modifiers": "public", "return": "", "signature": " AtomDate(String value)", "full_signature": "public  AtomDate(String value)", "class_method_signature": "AtomDate.AtomDate(String value)", "testcase": false, "constructor": true}, {"identifier": "AtomDate", "parameters": "(Date value)", "modifiers": "public", "return": "", "signature": " AtomDate(Date value)", "full_signature": "public  AtomDate(Date value)", "class_method_signature": "AtomDate.AtomDate(Date value)", "testcase": false, "constructor": true}, {"identifier": "AtomDate", "parameters": "(Calendar value)", "modifiers": "public", "return": "", "signature": " AtomDate(Calendar value)", "full_signature": "public  AtomDate(Calendar value)", "class_method_signature": "AtomDate.AtomDate(Calendar value)", "testcase": false, "constructor": true}, {"identifier": "AtomDate", "parameters": "(long value)", "modifiers": "public", "return": "", "signature": " AtomDate(long value)", "full_signature": "public  AtomDate(long value)", "class_method_signature": "AtomDate.AtomDate(long value)", "testcase": false, "constructor": true}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getValue()", "full_signature": "public String getValue()", "class_method_signature": "AtomDate.getValue()", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(String value)", "modifiers": "public", "return": "AtomDate", "signature": "AtomDate setValue(String value)", "full_signature": "public AtomDate setValue(String value)", "class_method_signature": "AtomDate.setValue(String value)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(Date date)", "modifiers": "public", "return": "AtomDate", "signature": "AtomDate setValue(Date date)", "full_signature": "public AtomDate setValue(Date date)", "class_method_signature": "AtomDate.setValue(Date date)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(Calendar calendar)", "modifiers": "public", "return": "AtomDate", "signature": "AtomDate setValue(Calendar calendar)", "full_signature": "public AtomDate setValue(Calendar calendar)", "class_method_signature": "AtomDate.setValue(Calendar calendar)", "testcase": false, "constructor": false}, {"identifier": "setValue", "parameters": "(long timestamp)", "modifiers": "public", "return": "AtomDate", "signature": "AtomDate setValue(long timestamp)", "full_signature": "public AtomDate setValue(long timestamp)", "class_method_signature": "AtomDate.setValue(long timestamp)", "testcase": false, "constructor": false}, {"identifier": "getDate", "parameters": "()", "modifiers": "public", "return": "Date", "signature": "Date getDate()", "full_signature": "public Date getDate()", "class_method_signature": "AtomDate.getDate()", "testcase": false, "constructor": false}, {"identifier": "getCalendar", "parameters": "()", "modifiers": "public", "return": "Calendar", "signature": "Calendar getCalendar()", "full_signature": "public Calendar getCalendar()", "class_method_signature": "AtomDate.getCalendar()", "testcase": false, "constructor": false}, {"identifier": "getTime", "parameters": "()", "modifiers": "public", "return": "long", "signature": "long getTime()", "full_signature": "public long getTime()", "class_method_signature": "AtomDate.getTime()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "AtomDate.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AtomDate.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "AtomDate.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "Object", "signature": "Object clone()", "full_signature": "@Override public Object clone()", "class_method_signature": "AtomDate.clone()", "testcase": false, "constructor": false}, {"identifier": "parse", "parameters": "(String date)", "modifiers": "public static", "return": "Date", "signature": "Date parse(String date)", "full_signature": "public static Date parse(String date)", "class_method_signature": "AtomDate.parse(String date)", "testcase": false, "constructor": false}, {"identifier": "format", "parameters": "(Date date)", "modifiers": "public static", "return": "String", "signature": "String format(Date date)", "full_signature": "public static String format(Date date)", "class_method_signature": "AtomDate.format(Date date)", "testcase": false, "constructor": false}, {"identifier": "valueOf", "parameters": "(String value)", "modifiers": "public static", "return": "AtomDate", "signature": "AtomDate valueOf(String value)", "full_signature": "public static AtomDate valueOf(String value)", "class_method_signature": "AtomDate.valueOf(String value)", "testcase": false, "constructor": false}, {"identifier": "valueOf", "parameters": "(Date value)", "modifiers": "public static", "return": "AtomDate", "signature": "AtomDate valueOf(Date value)", "full_signature": "public static AtomDate valueOf(Date value)", "class_method_signature": "AtomDate.valueOf(Date value)", "testcase": false, "constructor": false}, {"identifier": "valueOf", "parameters": "(Calendar value)", "modifiers": "public static", "return": "AtomDate", "signature": "AtomDate valueOf(Calendar value)", "full_signature": "public static AtomDate valueOf(Calendar value)", "class_method_signature": "AtomDate.valueOf(Calendar value)", "testcase": false, "constructor": false}, {"identifier": "valueOf", "parameters": "(long value)", "modifiers": "public static", "return": "AtomDate", "signature": "AtomDate valueOf(long value)", "full_signature": "public static AtomDate valueOf(long value)", "class_method_signature": "AtomDate.valueOf(long value)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/apache/abdera/model/AtomDate.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int hashCode() {\n        final int prime = 31;\n        int result = 1;\n        result = prime * result + value.hashCode();\n        return result;\n    }", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "AtomDate.hashCode()", "testcase": false, "constructor": false, "invocations": ["hashCode"]}, "repository": {"repo_id": 206482, "url": "https://github.com/apache/abdera", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 15, "size": 12255, "license": "licensed"}}