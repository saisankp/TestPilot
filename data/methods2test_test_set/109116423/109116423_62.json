{"test_class": {"identifier": "GlifLayoutTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Context mContext;", "modifier": "private", "type": "Context", "declarator": "mContext", "var_name": "mContext"}], "file": "com/android/setupwizardlib/GlifLayoutTest.java"}, "test_case": {"identifier": "testGetScrollView", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetScrollView() {\n        GlifLayout layout = new GlifLayout(mContext);\n        assertNotNull(\"Get scroll view should not be null with default template\",\n                layout.getScrollView());\n    }", "signature": "void testGetScrollView()", "full_signature": "@Test public void testGetScrollView()", "class_method_signature": "GlifLayoutTest.testGetScrollView()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getScrollView"]}, "focal_class": {"identifier": "GlifLayout", "superclass": "extends TemplateLayout", "interfaces": "", "fields": [{"original_string": "private static final String TAG = \"GlifLayout\";", "modifier": "private static final", "type": "String", "declarator": "TAG = \"GlifLayout\"", "var_name": "TAG"}, {"original_string": "private ColorStateList mPrimaryColor;", "modifier": "private", "type": "ColorStateList", "declarator": "mPrimaryColor", "var_name": "mPrimaryColor"}, {"original_string": "private boolean mBackgroundPatterned = true;", "modifier": "private", "type": "boolean", "declarator": "mBackgroundPatterned = true", "var_name": "mBackgroundPatterned"}, {"original_string": "@Nullable\n    private ColorStateList mBackgroundBaseColor;", "modifier": "@Nullable\n    private", "type": "ColorStateList", "declarator": "mBackgroundBaseColor", "var_name": "mBackgroundBaseColor"}], "methods": [{"identifier": "GlifLayout", "parameters": "(Context context)", "modifiers": "public", "return": "", "signature": " GlifLayout(Context context)", "full_signature": "public  GlifLayout(Context context)", "class_method_signature": "GlifLayout.GlifLayout(Context context)", "testcase": false, "constructor": true}, {"identifier": "GlifLayout", "parameters": "(Context context, int template)", "modifiers": "public", "return": "", "signature": " GlifLayout(Context context, int template)", "full_signature": "public  GlifLayout(Context context, int template)", "class_method_signature": "GlifLayout.GlifLayout(Context context, int template)", "testcase": false, "constructor": true}, {"identifier": "GlifLayout", "parameters": "(Context context, int template, int containerId)", "modifiers": "public", "return": "", "signature": " GlifLayout(Context context, int template, int containerId)", "full_signature": "public  GlifLayout(Context context, int template, int containerId)", "class_method_signature": "GlifLayout.GlifLayout(Context context, int template, int containerId)", "testcase": false, "constructor": true}, {"identifier": "GlifLayout", "parameters": "(Context context, AttributeSet attrs)", "modifiers": "public", "return": "", "signature": " GlifLayout(Context context, AttributeSet attrs)", "full_signature": "public  GlifLayout(Context context, AttributeSet attrs)", "class_method_signature": "GlifLayout.GlifLayout(Context context, AttributeSet attrs)", "testcase": false, "constructor": true}, {"identifier": "GlifLayout", "parameters": "(Context context, AttributeSet attrs, int defStyleAttr)", "modifiers": "@TargetApi(VERSION_CODES.HONEYCOMB) public", "return": "", "signature": " GlifLayout(Context context, AttributeSet attrs, int defStyleAttr)", "full_signature": "@TargetApi(VERSION_CODES.HONEYCOMB) public  GlifLayout(Context context, AttributeSet attrs, int defStyleAttr)", "class_method_signature": "GlifLayout.GlifLayout(Context context, AttributeSet attrs, int defStyleAttr)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "(AttributeSet attrs, int defStyleAttr)", "modifiers": "private", "return": "void", "signature": "void init(AttributeSet attrs, int defStyleAttr)", "full_signature": "private void init(AttributeSet attrs, int defStyleAttr)", "class_method_signature": "GlifLayout.init(AttributeSet attrs, int defStyleAttr)", "testcase": false, "constructor": false}, {"identifier": "onInflateTemplate", "parameters": "(LayoutInflater inflater, @LayoutRes int template)", "modifiers": "@Override protected", "return": "View", "signature": "View onInflateTemplate(LayoutInflater inflater, @LayoutRes int template)", "full_signature": "@Override protected View onInflateTemplate(LayoutInflater inflater, @LayoutRes int template)", "class_method_signature": "GlifLayout.onInflateTemplate(LayoutInflater inflater, @LayoutRes int template)", "testcase": false, "constructor": false}, {"identifier": "findContainer", "parameters": "(int containerId)", "modifiers": "@Override protected", "return": "ViewGroup", "signature": "ViewGroup findContainer(int containerId)", "full_signature": "@Override protected ViewGroup findContainer(int containerId)", "class_method_signature": "GlifLayout.findContainer(int containerId)", "testcase": false, "constructor": false}, {"identifier": "inflateFooter", "parameters": "(@LayoutRes int footer)", "modifiers": "public", "return": "View", "signature": "View inflateFooter(@LayoutRes int footer)", "full_signature": "public View inflateFooter(@LayoutRes int footer)", "class_method_signature": "GlifLayout.inflateFooter(@LayoutRes int footer)", "testcase": false, "constructor": false}, {"identifier": "getScrollView", "parameters": "()", "modifiers": "public", "return": "ScrollView", "signature": "ScrollView getScrollView()", "full_signature": "public ScrollView getScrollView()", "class_method_signature": "GlifLayout.getScrollView()", "testcase": false, "constructor": false}, {"identifier": "getHeaderTextView", "parameters": "()", "modifiers": "public", "return": "TextView", "signature": "TextView getHeaderTextView()", "full_signature": "public TextView getHeaderTextView()", "class_method_signature": "GlifLayout.getHeaderTextView()", "testcase": false, "constructor": false}, {"identifier": "setHeaderText", "parameters": "(int title)", "modifiers": "public", "return": "void", "signature": "void setHeaderText(int title)", "full_signature": "public void setHeaderText(int title)", "class_method_signature": "GlifLayout.setHeaderText(int title)", "testcase": false, "constructor": false}, {"identifier": "setHeaderText", "parameters": "(CharSequence title)", "modifiers": "public", "return": "void", "signature": "void setHeaderText(CharSequence title)", "full_signature": "public void setHeaderText(CharSequence title)", "class_method_signature": "GlifLayout.setHeaderText(CharSequence title)", "testcase": false, "constructor": false}, {"identifier": "getHeaderText", "parameters": "()", "modifiers": "public", "return": "CharSequence", "signature": "CharSequence getHeaderText()", "full_signature": "public CharSequence getHeaderText()", "class_method_signature": "GlifLayout.getHeaderText()", "testcase": false, "constructor": false}, {"identifier": "setHeaderColor", "parameters": "(ColorStateList color)", "modifiers": "public", "return": "void", "signature": "void setHeaderColor(ColorStateList color)", "full_signature": "public void setHeaderColor(ColorStateList color)", "class_method_signature": "GlifLayout.setHeaderColor(ColorStateList color)", "testcase": false, "constructor": false}, {"identifier": "getHeaderColor", "parameters": "()", "modifiers": "public", "return": "ColorStateList", "signature": "ColorStateList getHeaderColor()", "full_signature": "public ColorStateList getHeaderColor()", "class_method_signature": "GlifLayout.getHeaderColor()", "testcase": false, "constructor": false}, {"identifier": "setIcon", "parameters": "(Drawable icon)", "modifiers": "public", "return": "void", "signature": "void setIcon(Drawable icon)", "full_signature": "public void setIcon(Drawable icon)", "class_method_signature": "GlifLayout.setIcon(Drawable icon)", "testcase": false, "constructor": false}, {"identifier": "getIcon", "parameters": "()", "modifiers": "public", "return": "Drawable", "signature": "Drawable getIcon()", "full_signature": "public Drawable getIcon()", "class_method_signature": "GlifLayout.getIcon()", "testcase": false, "constructor": false}, {"identifier": "setPrimaryColor", "parameters": "(@NonNull ColorStateList color)", "modifiers": "public", "return": "void", "signature": "void setPrimaryColor(@NonNull ColorStateList color)", "full_signature": "public void setPrimaryColor(@NonNull ColorStateList color)", "class_method_signature": "GlifLayout.setPrimaryColor(@NonNull ColorStateList color)", "testcase": false, "constructor": false}, {"identifier": "getPrimaryColor", "parameters": "()", "modifiers": "public", "return": "ColorStateList", "signature": "ColorStateList getPrimaryColor()", "full_signature": "public ColorStateList getPrimaryColor()", "class_method_signature": "GlifLayout.getPrimaryColor()", "testcase": false, "constructor": false}, {"identifier": "setBackgroundBaseColor", "parameters": "(@Nullable ColorStateList color)", "modifiers": "public", "return": "void", "signature": "void setBackgroundBaseColor(@Nullable ColorStateList color)", "full_signature": "public void setBackgroundBaseColor(@Nullable ColorStateList color)", "class_method_signature": "GlifLayout.setBackgroundBaseColor(@Nullable ColorStateList color)", "testcase": false, "constructor": false}, {"identifier": "getBackgroundBaseColor", "parameters": "()", "modifiers": "@Nullable public", "return": "ColorStateList", "signature": "ColorStateList getBackgroundBaseColor()", "full_signature": "@Nullable public ColorStateList getBackgroundBaseColor()", "class_method_signature": "GlifLayout.getBackgroundBaseColor()", "testcase": false, "constructor": false}, {"identifier": "setBackgroundPatterned", "parameters": "(boolean patterned)", "modifiers": "public", "return": "void", "signature": "void setBackgroundPatterned(boolean patterned)", "full_signature": "public void setBackgroundPatterned(boolean patterned)", "class_method_signature": "GlifLayout.setBackgroundPatterned(boolean patterned)", "testcase": false, "constructor": false}, {"identifier": "isBackgroundPatterned", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isBackgroundPatterned()", "full_signature": "public boolean isBackgroundPatterned()", "class_method_signature": "GlifLayout.isBackgroundPatterned()", "testcase": false, "constructor": false}, {"identifier": "updateBackground", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void updateBackground()", "full_signature": "private void updateBackground()", "class_method_signature": "GlifLayout.updateBackground()", "testcase": false, "constructor": false}, {"identifier": "isProgressBarShown", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isProgressBarShown()", "full_signature": "public boolean isProgressBarShown()", "class_method_signature": "GlifLayout.isProgressBarShown()", "testcase": false, "constructor": false}, {"identifier": "setProgressBarShown", "parameters": "(boolean shown)", "modifiers": "public", "return": "void", "signature": "void setProgressBarShown(boolean shown)", "full_signature": "public void setProgressBarShown(boolean shown)", "class_method_signature": "GlifLayout.setProgressBarShown(boolean shown)", "testcase": false, "constructor": false}, {"identifier": "peekProgressBar", "parameters": "()", "modifiers": "public", "return": "ProgressBar", "signature": "ProgressBar peekProgressBar()", "full_signature": "public ProgressBar peekProgressBar()", "class_method_signature": "GlifLayout.peekProgressBar()", "testcase": false, "constructor": false}], "file": "com/android/setupwizardlib/GlifLayout.java"}, "focal_method": {"identifier": "getScrollView", "parameters": "()", "modifiers": "public", "return": "ScrollView", "body": "public ScrollView getScrollView() {\n        final View view = findManagedViewById(R.id.suw_scroll_view);\n        return view instanceof ScrollView ? (ScrollView) view : null;\n    }", "signature": "ScrollView getScrollView()", "full_signature": "public ScrollView getScrollView()", "class_method_signature": "GlifLayout.getScrollView()", "testcase": false, "constructor": false, "invocations": ["findManagedViewById"]}, "repository": {"repo_id": 109116423, "url": "https://github.com/AndroidSDKSources/android-sdk-sources-for-api-level-26", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 8, "size": 29147, "license": "licensed"}}