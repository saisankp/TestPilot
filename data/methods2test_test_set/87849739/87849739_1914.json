{"test_class": {"identifier": "AcknowledgementsJsonParserTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n    public final TestName testName = new TestName();", "modifier": "@Rule\n    public final", "type": "TestName", "declarator": "testName = new TestName()", "var_name": "testName"}, {"original_string": "private DittoHeaders dittoHeaders;", "modifier": "private", "type": "DittoHeaders", "declarator": "dittoHeaders", "var_name": "dittoHeaders"}, {"original_string": "private Acknowledgement knownAcknowledgement;", "modifier": "private", "type": "Acknowledgement", "declarator": "knownAcknowledgement", "var_name": "knownAcknowledgement"}, {"original_string": "private Acknowledgements knownAcknowledgements;", "modifier": "private", "type": "Acknowledgements", "declarator": "knownAcknowledgements", "var_name": "knownAcknowledgements"}, {"original_string": "private AcknowledgementsJsonParser<ThingId> underTest;", "modifier": "private", "type": "AcknowledgementsJsonParser<ThingId>", "declarator": "underTest", "var_name": "underTest"}], "file": "signals/acks/base/src/test/java/org/eclipse/ditto/signals/acks/base/AcknowledgementsJsonParserTest.java"}, "test_case": {"identifier": "parseJsonRepresentationWithoutAcknowledgements", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void parseJsonRepresentationWithoutAcknowledgements() {\n        final JsonFieldDefinition<JsonObject> acknowledgementsFieldDefinition =\n                Acknowledgements.JsonFields.ACKNOWLEDGEMENTS;\n        final JsonObject jsonRepresentation = JsonFactory.newObjectBuilder(knownAcknowledgements.toJson())\n                .remove(acknowledgementsFieldDefinition)\n                .build();\n\n        assertThatExceptionOfType(JsonMissingFieldException.class)\n                .isThrownBy(() -> underTest.apply(jsonRepresentation))\n                .withMessageContaining(acknowledgementsFieldDefinition.getPointer().toString())\n                .withNoCause();\n    }", "signature": "void parseJsonRepresentationWithoutAcknowledgements()", "full_signature": "@Test public void parseJsonRepresentationWithoutAcknowledgements()", "class_method_signature": "AcknowledgementsJsonParserTest.parseJsonRepresentationWithoutAcknowledgements()", "testcase": true, "constructor": false, "invocations": ["build", "remove", "newObjectBuilder", "toJson", "withNoCause", "withMessageContaining", "isThrownBy", "assertThatExceptionOfType", "apply", "toString", "getPointer"]}, "focal_class": {"identifier": "AcknowledgementsJsonParser", "superclass": "", "interfaces": "implements Function<JsonObject, Acknowledgements>", "fields": [{"original_string": "private final AcknowledgementJsonParser<I> acknowledgementJsonParser;", "modifier": "private final", "type": "AcknowledgementJsonParser<I>", "declarator": "acknowledgementJsonParser", "var_name": "acknowledgementJsonParser"}], "methods": [{"identifier": "AcknowledgementsJsonParser", "parameters": "(final AcknowledgementJsonParser<I> acknowledgementJsonParser)", "modifiers": "private", "return": "", "signature": " AcknowledgementsJsonParser(final AcknowledgementJsonParser<I> acknowledgementJsonParser)", "full_signature": "private  AcknowledgementsJsonParser(final AcknowledgementJsonParser<I> acknowledgementJsonParser)", "class_method_signature": "AcknowledgementsJsonParser.AcknowledgementsJsonParser(final AcknowledgementJsonParser<I> acknowledgementJsonParser)", "testcase": false, "constructor": true}, {"identifier": "getInstance", "parameters": "(\n            final AcknowledgementJsonParser<I> acknowledgementJsonParser)", "modifiers": "public static", "return": "AcknowledgementsJsonParser<I>", "signature": "AcknowledgementsJsonParser<I> getInstance(\n            final AcknowledgementJsonParser<I> acknowledgementJsonParser)", "full_signature": "public static AcknowledgementsJsonParser<I> getInstance(\n            final AcknowledgementJsonParser<I> acknowledgementJsonParser)", "class_method_signature": "AcknowledgementsJsonParser.getInstance(\n            final AcknowledgementJsonParser<I> acknowledgementJsonParser)", "testcase": false, "constructor": false}, {"identifier": "apply", "parameters": "(final JsonObject jsonObject)", "modifiers": "@Override public", "return": "Acknowledgements", "signature": "Acknowledgements apply(final JsonObject jsonObject)", "full_signature": "@Override public Acknowledgements apply(final JsonObject jsonObject)", "class_method_signature": "AcknowledgementsJsonParser.apply(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "tryToParseJsonObject", "parameters": "(final JsonObject jsonObject)", "modifiers": "private", "return": "Acknowledgements", "signature": "Acknowledgements tryToParseJsonObject(final JsonObject jsonObject)", "full_signature": "private Acknowledgements tryToParseJsonObject(final JsonObject jsonObject)", "class_method_signature": "AcknowledgementsJsonParser.tryToParseJsonObject(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "parseJsonObject", "parameters": "(final JsonObject jsonObject)", "modifiers": "private", "return": "Acknowledgements", "signature": "Acknowledgements parseJsonObject(final JsonObject jsonObject)", "full_signature": "private Acknowledgements parseJsonObject(final JsonObject jsonObject)", "class_method_signature": "AcknowledgementsJsonParser.parseJsonObject(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "getEntityId", "parameters": "(final JsonObject jsonObject)", "modifiers": "private", "return": "I", "signature": "I getEntityId(final JsonObject jsonObject)", "full_signature": "private I getEntityId(final JsonObject jsonObject)", "class_method_signature": "AcknowledgementsJsonParser.getEntityId(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "getEntityType", "parameters": "(final JsonObject jsonObject)", "modifiers": "private static", "return": "EntityType", "signature": "EntityType getEntityType(final JsonObject jsonObject)", "full_signature": "private static EntityType getEntityType(final JsonObject jsonObject)", "class_method_signature": "AcknowledgementsJsonParser.getEntityType(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "getAcknowledgements", "parameters": "(final JsonObject jsonObject, final I expectedEntityId)", "modifiers": "private", "return": "List<Acknowledgement>", "signature": "List<Acknowledgement> getAcknowledgements(final JsonObject jsonObject, final I expectedEntityId)", "full_signature": "private List<Acknowledgement> getAcknowledgements(final JsonObject jsonObject, final I expectedEntityId)", "class_method_signature": "AcknowledgementsJsonParser.getAcknowledgements(final JsonObject jsonObject, final I expectedEntityId)", "testcase": false, "constructor": false}, {"identifier": "parseAcknowledgement", "parameters": "(final JsonField acknowledgementJsonField,\n            final I expectedEntityId)", "modifiers": "private", "return": "Stream<Acknowledgement>", "signature": "Stream<Acknowledgement> parseAcknowledgement(final JsonField acknowledgementJsonField,\n            final I expectedEntityId)", "full_signature": "private Stream<Acknowledgement> parseAcknowledgement(final JsonField acknowledgementJsonField,\n            final I expectedEntityId)", "class_method_signature": "AcknowledgementsJsonParser.parseAcknowledgement(final JsonField acknowledgementJsonField,\n            final I expectedEntityId)", "testcase": false, "constructor": false}, {"identifier": "parseAcknowledgementFromObject", "parameters": "(final JsonValue jsonObject, final I expectedEntityId)", "modifiers": "private", "return": "Acknowledgement", "signature": "Acknowledgement parseAcknowledgementFromObject(final JsonValue jsonObject, final I expectedEntityId)", "full_signature": "private Acknowledgement parseAcknowledgementFromObject(final JsonValue jsonObject, final I expectedEntityId)", "class_method_signature": "AcknowledgementsJsonParser.parseAcknowledgementFromObject(final JsonValue jsonObject, final I expectedEntityId)", "testcase": false, "constructor": false}, {"identifier": "validateEntityId", "parameters": "(final Acknowledgement acknowledgement, final I expected)", "modifiers": "private", "return": "void", "signature": "void validateEntityId(final Acknowledgement acknowledgement, final I expected)", "full_signature": "private void validateEntityId(final Acknowledgement acknowledgement, final I expected)", "class_method_signature": "AcknowledgementsJsonParser.validateEntityId(final Acknowledgement acknowledgement, final I expected)", "testcase": false, "constructor": false}, {"identifier": "getDittoHeaders", "parameters": "(final JsonObject jsonObject)", "modifiers": "private static", "return": "DittoHeaders", "signature": "DittoHeaders getDittoHeaders(final JsonObject jsonObject)", "full_signature": "private static DittoHeaders getDittoHeaders(final JsonObject jsonObject)", "class_method_signature": "AcknowledgementsJsonParser.getDittoHeaders(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "validateEntityType", "parameters": "(final EntityType actual, final EntityType expected)", "modifiers": "private static", "return": "void", "signature": "void validateEntityType(final EntityType actual, final EntityType expected)", "full_signature": "private static void validateEntityType(final EntityType actual, final EntityType expected)", "class_method_signature": "AcknowledgementsJsonParser.validateEntityType(final EntityType actual, final EntityType expected)", "testcase": false, "constructor": false}, {"identifier": "getStatusCode", "parameters": "(final JsonObject jsonObject)", "modifiers": "private static", "return": "HttpStatusCode", "signature": "HttpStatusCode getStatusCode(final JsonObject jsonObject)", "full_signature": "private static HttpStatusCode getStatusCode(final JsonObject jsonObject)", "class_method_signature": "AcknowledgementsJsonParser.getStatusCode(final JsonObject jsonObject)", "testcase": false, "constructor": false}, {"identifier": "validateStatusCode", "parameters": "(final HttpStatusCode actual, final HttpStatusCode expected)", "modifiers": "private static", "return": "void", "signature": "void validateStatusCode(final HttpStatusCode actual, final HttpStatusCode expected)", "full_signature": "private static void validateStatusCode(final HttpStatusCode actual, final HttpStatusCode expected)", "class_method_signature": "AcknowledgementsJsonParser.validateStatusCode(final HttpStatusCode actual, final HttpStatusCode expected)", "testcase": false, "constructor": false}], "file": "signals/acks/base/src/main/java/org/eclipse/ditto/signals/acks/base/AcknowledgementsJsonParser.java"}, "focal_method": {"identifier": "apply", "parameters": "(final JsonObject jsonObject)", "modifiers": "@Override public", "return": "Acknowledgements", "body": "@Override\n    public Acknowledgements apply(final JsonObject jsonObject) {\n        return tryToParseJsonObject(checkNotNull(jsonObject, \"jsonObject\"));\n    }", "signature": "Acknowledgements apply(final JsonObject jsonObject)", "full_signature": "@Override public Acknowledgements apply(final JsonObject jsonObject)", "class_method_signature": "AcknowledgementsJsonParser.apply(final JsonObject jsonObject)", "testcase": false, "constructor": false, "invocations": ["tryToParseJsonObject", "checkNotNull"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}