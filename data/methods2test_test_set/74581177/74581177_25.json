{"test_class": {"identifier": "GlobalAntExecutorTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/com/bbva/kltt/apirest/core/ant/GlobalAntExecutorTest.java"}, "test_case": {"identifier": "launchAntExecutorTest", "parameters": "()", "modifiers": "@Test(expected=APIRestGeneratorException.class) public", "return": "void", "body": "@Test(expected=APIRestGeneratorException.class)\n\tpublic void launchAntExecutorTest() throws APIRestGeneratorException\n\t{\n\t\tfinal GlobalAntExecutor globalAntExecutor = new GlobalAntExecutor(ConstantsTest.PARSER_TYPE, ConstantsTest.TRANSLATOR_TYPE) ;\n\t\tglobalAntExecutor.launchAntExecutor(ConstantsTest.GENERATOR_BUILDER_PATH,\n\t\t\t\t\t\t\t\t\t\t\tConstantsTest.SPECIF_FILE_PATH,\n\t\t\t\t\t\t\t\t\t\t\t\"deliverableFileName\",\n\t\t\t\t\t\t\t\t\t\t\tConstantsTest.TEMPORARY_DIR,\n\t\t\t\t\t\t\t\t\t\t\tSystem.err,\n\t\t\t\t\t\t\t\t\t\t\tSystem.out) ;\n\t}", "signature": "void launchAntExecutorTest()", "full_signature": "@Test(expected=APIRestGeneratorException.class) public void launchAntExecutorTest()", "class_method_signature": "GlobalAntExecutorTest.launchAntExecutorTest()", "testcase": true, "constructor": false, "invocations": ["launchAntExecutor"]}, "focal_class": {"identifier": "GlobalAntExecutor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(GlobalAntExecutor.class) ;", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(GlobalAntExecutor.class)", "var_name": "LOGGER"}, {"original_string": "private final String parserType ;", "modifier": "private final", "type": "String", "declarator": "parserType", "var_name": "parserType"}, {"original_string": "private final String translatorType ;", "modifier": "private final", "type": "String", "declarator": "translatorType", "var_name": "translatorType"}], "methods": [{"identifier": "GlobalAntExecutor", "parameters": "(final String parserType, final String translatorType)", "modifiers": "public", "return": "", "signature": " GlobalAntExecutor(final String parserType, final String translatorType)", "full_signature": "public  GlobalAntExecutor(final String parserType, final String translatorType)", "class_method_signature": "GlobalAntExecutor.GlobalAntExecutor(final String parserType, final String translatorType)", "testcase": false, "constructor": true}, {"identifier": "launchAntExecutor", "parameters": "(final String generatorBuilderPath,\n                                  final String fileName,\n                                  final String deliverableFileName,\n                                  final String temporaryDir,\n                                  final PrintStream errorStreamWrapper,\n                                  final PrintStream outputStreamWrapper)", "modifiers": "public", "return": "void", "signature": "void launchAntExecutor(final String generatorBuilderPath,\n                                  final String fileName,\n                                  final String deliverableFileName,\n                                  final String temporaryDir,\n                                  final PrintStream errorStreamWrapper,\n                                  final PrintStream outputStreamWrapper)", "full_signature": "public void launchAntExecutor(final String generatorBuilderPath,\n                                  final String fileName,\n                                  final String deliverableFileName,\n                                  final String temporaryDir,\n                                  final PrintStream errorStreamWrapper,\n                                  final PrintStream outputStreamWrapper)", "class_method_signature": "GlobalAntExecutor.launchAntExecutor(final String generatorBuilderPath,\n                                  final String fileName,\n                                  final String deliverableFileName,\n                                  final String temporaryDir,\n                                  final PrintStream errorStreamWrapper,\n                                  final PrintStream outputStreamWrapper)", "testcase": false, "constructor": false}, {"identifier": "generateTemporaryOutputDirectory", "parameters": "(final String generatorBuilderPath)", "modifiers": "public", "return": "String", "signature": "String generateTemporaryOutputDirectory(final String generatorBuilderPath)", "full_signature": "public String generateTemporaryOutputDirectory(final String generatorBuilderPath)", "class_method_signature": "GlobalAntExecutor.generateTemporaryOutputDirectory(final String generatorBuilderPath)", "testcase": false, "constructor": false}, {"identifier": "generateFullTemporaryDir", "parameters": "(final String generatorBuilderPath, final String temporaryDir)", "modifiers": "public", "return": "String", "signature": "String generateFullTemporaryDir(final String generatorBuilderPath, final String temporaryDir)", "full_signature": "public String generateFullTemporaryDir(final String generatorBuilderPath, final String temporaryDir)", "class_method_signature": "GlobalAntExecutor.generateFullTemporaryDir(final String generatorBuilderPath, final String temporaryDir)", "testcase": false, "constructor": false}, {"identifier": "removeFullTemporaryDirectory", "parameters": "(final String fullTemporaryDir)", "modifiers": "public", "return": "void", "signature": "void removeFullTemporaryDirectory(final String fullTemporaryDir)", "full_signature": "public void removeFullTemporaryDirectory(final String fullTemporaryDir)", "class_method_signature": "GlobalAntExecutor.removeFullTemporaryDirectory(final String fullTemporaryDir)", "testcase": false, "constructor": false}, {"identifier": "validateFileExtension", "parameters": "(final String fileName)", "modifiers": "public", "return": "void", "signature": "void validateFileExtension(final String fileName)", "full_signature": "public void validateFileExtension(final String fileName)", "class_method_signature": "GlobalAntExecutor.validateFileExtension(final String fileName)", "testcase": false, "constructor": false}, {"identifier": "getDeliverableFileName", "parameters": "(final String fileName, final String translatorType)", "modifiers": "public", "return": "String", "signature": "String getDeliverableFileName(final String fileName, final String translatorType)", "full_signature": "public String getDeliverableFileName(final String fileName, final String translatorType)", "class_method_signature": "GlobalAntExecutor.getDeliverableFileName(final String fileName, final String translatorType)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/bbva/kltt/apirest/core/ant/GlobalAntExecutor.java"}, "focal_method": {"identifier": "launchAntExecutor", "parameters": "(final String generatorBuilderPath,\n                                  final String fileName,\n                                  final String deliverableFileName,\n                                  final String temporaryDir,\n                                  final PrintStream errorStreamWrapper,\n                                  final PrintStream outputStreamWrapper)", "modifiers": "public", "return": "void", "body": "public void launchAntExecutor(final String generatorBuilderPath,\n                                  final String fileName,\n                                  final String deliverableFileName,\n                                  final String temporaryDir,\n                                  final PrintStream errorStreamWrapper,\n                                  final PrintStream outputStreamWrapper) throws APIRestGeneratorException\n    {\n        // Get the full path of the ant executor module\n        String packageName = new StringBuilder(ConstantsOutput.COMMON_GEN_TYPE_PACKAGE)\n\t\t\t\t                                              .append(ConstantsCommon.STRING_DOT)\n\t\t\t\t                                              .append(this.translatorType)\n\t\t\t\t                                              .append(ConstantsCommon.STRING_DOT)\n\t\t\t\t                                              .append(ConstantsAnt.ANT_FOLDER).toString() ;\n        \n        InvokeModule invokeModule       = InvokeModule.initInvokeModule(packageName, ConstantsAnt.ANT_LAUNCHER_CLASS) ;\n\n        if (invokeModule != null)\n        {\n            Object[] constParams        = {generatorBuilderPath, this.parserType, deliverableFileName} ;\n            Class<?>[] consTypeParams   = {String.class, String.class, String.class} ;\n\n            Object executorInstance     = invokeModule.createInstance(constParams, consTypeParams) ;\n\n            Object[] methodParams       = {fileName, errorStreamWrapper, outputStreamWrapper, temporaryDir} ;\n            Class<?>[] methodTypeParams = {String.class, PrintStream.class, PrintStream.class, String.class} ;\n\n            invokeModule.invokeMethod(executorInstance, \"executeAntTask\", methodParams, methodTypeParams) ;\n        }\n    }", "signature": "void launchAntExecutor(final String generatorBuilderPath,\n                                  final String fileName,\n                                  final String deliverableFileName,\n                                  final String temporaryDir,\n                                  final PrintStream errorStreamWrapper,\n                                  final PrintStream outputStreamWrapper)", "full_signature": "public void launchAntExecutor(final String generatorBuilderPath,\n                                  final String fileName,\n                                  final String deliverableFileName,\n                                  final String temporaryDir,\n                                  final PrintStream errorStreamWrapper,\n                                  final PrintStream outputStreamWrapper)", "class_method_signature": "GlobalAntExecutor.launchAntExecutor(final String generatorBuilderPath,\n                                  final String fileName,\n                                  final String deliverableFileName,\n                                  final String temporaryDir,\n                                  final PrintStream errorStreamWrapper,\n                                  final PrintStream outputStreamWrapper)", "testcase": false, "constructor": false, "invocations": ["toString", "append", "append", "append", "append", "initInvokeModule", "createInstance", "invokeMethod"]}, "repository": {"repo_id": 74581177, "url": "https://github.com/BBVA-CIB/APIRestGenerator", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 147303, "license": "licensed"}}