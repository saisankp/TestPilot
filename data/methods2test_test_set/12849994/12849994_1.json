{"test_class": {"identifier": "VersionedOffHeapCacheExampleTest", "superclass": "", "interfaces": "", "fields": [], "file": "imcache-examples/src/test/java/com/cetsoft/imcache/examples/VersionedOffHeapCacheExampleTest.java"}, "test_case": {"identifier": "example", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void example() {\n    VersionedOffHeapCacheExample.example();\n  }", "signature": "void example()", "full_signature": "@Test public void example()", "class_method_signature": "VersionedOffHeapCacheExampleTest.example()", "testcase": true, "constructor": false, "invocations": ["example"]}, "focal_class": {"identifier": "VersionedOffHeapCacheExample", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "example", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void example()", "full_signature": "public static void example()", "class_method_signature": "VersionedOffHeapCacheExample.example()", "testcase": false, "constructor": false}, {"identifier": "getRandomString", "parameters": "()", "modifiers": "private static", "return": "String", "signature": "String getRandomString()", "full_signature": "private static String getRandomString()", "class_method_signature": "VersionedOffHeapCacheExample.getRandomString()", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "VersionedOffHeapCacheExample.main(String[] args)", "testcase": false, "constructor": false}], "file": "imcache-examples/src/main/java/com/cetsoft/imcache/examples/VersionedOffHeapCacheExample.java"}, "focal_method": {"identifier": "example", "parameters": "()", "modifiers": "public static", "return": "void", "body": "public static void example() {\n    OffHeapByteBufferStore bufferStore = new OffHeapByteBufferStore(10000, 10);\n    final Cache<String, VersionedItem<String>> cache = CacheBuilder.versionedOffHeapCache()\n        .storage(bufferStore)\n        .build();\n    ExecutorService service = Executors.newFixedThreadPool(3);\n    for (int i = 0; i < 100000; i++) {\n      service.execute(() -> {\n        try {\n          Thread.sleep(100);\n        } catch (InterruptedException e) {\n          e.printStackTrace();\n        }\n        while (true) {\n          try {\n            VersionedItem<String> value = cache.get(\"apple\");\n            String newValue = getRandomString();\n            if (value == null) {\n              cache.put(\"apple\", new SimpleItem<>(newValue));\n            } else {\n              value = value.update(newValue);\n              cache.put(\"apple\", value);\n            }\n            System.out.println(cache.get(\"apple\").getValue());\n            break;\n          } catch (StaleItemException ex) {\n            ex.printStackTrace();\n          }\n        }\n        VersionedItem<String> item = cache.get(\"apple\");\n        System.out.println(item.getVersion());\n      });\n    }\n  }", "signature": "void example()", "full_signature": "public static void example()", "class_method_signature": "VersionedOffHeapCacheExample.example()", "testcase": false, "constructor": false, "invocations": ["build", "storage", "versionedOffHeapCache", "newFixedThreadPool", "execute", "sleep", "printStackTrace", "get", "getRandomString", "put", "update", "put", "println", "getValue", "get", "printStackTrace", "get", "println", "getVersion"]}, "repository": {"repo_id": 12849994, "url": "https://github.com/Cetsoft/imcache", "language": "Java", "is_fork": false, "fork_count": 38, "stargazer_count": 121, "size": 1599, "license": "licensed"}}