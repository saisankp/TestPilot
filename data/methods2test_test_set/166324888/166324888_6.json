{"test_class": {"identifier": "ReceiveTransactionPresenterTest", "superclass": "extends BaseTestCase", "interfaces": "", "fields": [{"original_string": "private ReceiveTransactionPresenter presenter;", "modifier": "private", "type": "ReceiveTransactionPresenter", "declarator": "presenter", "var_name": "presenter"}, {"original_string": "@Mock\n    private ReceiveTransationContract.View view;", "modifier": "@Mock\n    private", "type": "ReceiveTransationContract.View", "declarator": "view", "var_name": "view"}], "file": "wallet/src/test/java/com/platon/aton/component/ui/presenter/ReceiveTransactionPresenterTest.java"}, "test_case": {"identifier": "copy", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void copy(){\n\n        //\u51c6\u5907\u6570\u636e\u6e90\n        Wallet wallet = new Wallet();\n        wallet.setUuid(\"9eed1da8-58e9-4b10-8bea-2bfdd1cac433\");\n        wallet.setAvatar(\"avatar_3\");\n        wallet.setAddress(\"0x0d395e21b23f8d920f8556cbf573af9ba2ad1a59\");\n        wallet.setChainId(\"101\");\n        wallet.setName(\"Ella\");\n        wallet.setKeystorePath(\"UTC--2020-06-28T06-36-42.751--b1ca4a13ee33ed68d097223f186f65864ecdb98c9b35c664566f096761649aa7d9c9c2bc317785a5c2580b305803e5f29aafce422e49579792623575215675e7.json\");\n        Bech32Address bech32Address = new Bech32Address(\"lat1p5u4ugdj87xeyru92m9l2ua0nw326xjekflsf8\",\"lax1p5u4ugdj87xeyru92m9l2ua0nw326xjeevdl8g\");\n        wallet.setBech32Address(bech32Address);\n\n        presenter.setWalletEntity(wallet);\n\n       // presenter.copy();\n\n    }", "signature": "void copy()", "full_signature": "@Test public void copy()", "class_method_signature": "ReceiveTransactionPresenterTest.copy()", "testcase": true, "constructor": false, "invocations": ["setUuid", "setAvatar", "setAddress", "setChainId", "setName", "setKeystorePath", "setBech32Address", "setWalletEntity"]}, "focal_class": {"identifier": "ReceiveTransactionPresenter", "superclass": "extends BasePresenter<ReceiveTransationContract.View>", "interfaces": "implements ReceiveTransationContract.Presenter", "fields": [{"original_string": "private Wallet walletEntity;", "modifier": "private", "type": "Wallet", "declarator": "walletEntity", "var_name": "walletEntity"}, {"original_string": "private Bitmap mQRCodeBitmap;", "modifier": "private", "type": "Bitmap", "declarator": "mQRCodeBitmap", "var_name": "mQRCodeBitmap"}], "methods": [{"identifier": "getWalletEntity", "parameters": "()", "modifiers": "public", "return": "Wallet", "signature": "Wallet getWalletEntity()", "full_signature": "public Wallet getWalletEntity()", "class_method_signature": "ReceiveTransactionPresenter.getWalletEntity()", "testcase": false, "constructor": false}, {"identifier": "setWalletEntity", "parameters": "(Wallet walletEntity)", "modifiers": "public", "return": "void", "signature": "void setWalletEntity(Wallet walletEntity)", "full_signature": "public void setWalletEntity(Wallet walletEntity)", "class_method_signature": "ReceiveTransactionPresenter.setWalletEntity(Wallet walletEntity)", "testcase": false, "constructor": false}, {"identifier": "getmQRCodeBitmap", "parameters": "()", "modifiers": "public", "return": "Bitmap", "signature": "Bitmap getmQRCodeBitmap()", "full_signature": "public Bitmap getmQRCodeBitmap()", "class_method_signature": "ReceiveTransactionPresenter.getmQRCodeBitmap()", "testcase": false, "constructor": false}, {"identifier": "setmQRCodeBitmap", "parameters": "(Bitmap mQRCodeBitmap)", "modifiers": "public", "return": "void", "signature": "void setmQRCodeBitmap(Bitmap mQRCodeBitmap)", "full_signature": "public void setmQRCodeBitmap(Bitmap mQRCodeBitmap)", "class_method_signature": "ReceiveTransactionPresenter.setmQRCodeBitmap(Bitmap mQRCodeBitmap)", "testcase": false, "constructor": false}, {"identifier": "loadData", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void loadData()", "full_signature": "@Override public void loadData()", "class_method_signature": "ReceiveTransactionPresenter.loadData()", "testcase": false, "constructor": false}, {"identifier": "screenShot", "parameters": "(@NonNull final View decorView)", "modifiers": "private", "return": "Bitmap", "signature": "Bitmap screenShot(@NonNull final View decorView)", "full_signature": "private Bitmap screenShot(@NonNull final View decorView)", "class_method_signature": "ReceiveTransactionPresenter.screenShot(@NonNull final View decorView)", "testcase": false, "constructor": false}, {"identifier": "shareView", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void shareView()", "full_signature": "@Override public void shareView()", "class_method_signature": "ReceiveTransactionPresenter.shareView()", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void copy()", "full_signature": "@Override public void copy()", "class_method_signature": "ReceiveTransactionPresenter.copy()", "testcase": false, "constructor": false}, {"identifier": "getImageName", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getImageName()", "full_signature": "private String getImageName()", "class_method_signature": "ReceiveTransactionPresenter.getImageName()", "testcase": false, "constructor": false}], "file": "wallet/src/main/java/com/platon/aton/component/ui/presenter/ReceiveTransactionPresenter.java"}, "focal_method": {"identifier": "copy", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void copy() {\n        if (walletEntity == null) {\n            return;\n        }\n        String text = walletEntity.getPrefixAddress();\n        CommonUtil.copyTextToClipboard(getContext(), text);\n    }", "signature": "void copy()", "full_signature": "@Override public void copy()", "class_method_signature": "ReceiveTransactionPresenter.copy()", "testcase": false, "constructor": false, "invocations": ["getPrefixAddress", "copyTextToClipboard", "getContext"]}, "repository": {"repo_id": 166324888, "url": "https://github.com/PlatONnetwork/ATON-Android", "language": "Java", "is_fork": false, "fork_count": 13, "stargazer_count": 8, "size": 118901, "license": "licensed"}}