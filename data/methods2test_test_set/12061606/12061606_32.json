{"test_class": {"identifier": "IntSetTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/uk/ac/ebi/beam/IntSetTest.java"}, "test_case": {"identifier": "noneOf", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void noneOf() throws Exception {\n        IntSet one = IntSet.noneOf(0, 1, 3, 5);\n        assertFalse(one.contains(0));\n        assertFalse(one.contains(1));\n        assertTrue(one.contains(2));\n        assertFalse(one.contains(3));\n        assertTrue(one.contains(4));\n        assertFalse(one.contains(5));\n        assertTrue(one.contains(6));\n    }", "signature": "void noneOf()", "full_signature": "@Test public void noneOf()", "class_method_signature": "IntSetTest.noneOf()", "testcase": true, "constructor": false, "invocations": ["noneOf", "assertFalse", "contains", "assertFalse", "contains", "assertTrue", "contains", "assertFalse", "contains", "assertTrue", "contains", "assertFalse", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "IntSet", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final IntSet UNIVERSE = new IntSet() {\n        @Override boolean contains(int x) {\n            return true;\n        }\n    };", "modifier": "private static final", "type": "IntSet", "declarator": "UNIVERSE = new IntSet() {\n        @Override boolean contains(int x) {\n            return true;\n        }\n    }", "var_name": "UNIVERSE"}], "methods": [{"identifier": "contains", "parameters": "(int x)", "modifiers": "abstract", "return": "boolean", "signature": "boolean contains(int x)", "full_signature": "abstract boolean contains(int x)", "class_method_signature": "IntSet.contains(int x)", "testcase": false, "constructor": false}, {"identifier": "universe", "parameters": "()", "modifiers": "static", "return": "IntSet", "signature": "IntSet universe()", "full_signature": "static IntSet universe()", "class_method_signature": "IntSet.universe()", "testcase": false, "constructor": false}, {"identifier": "empty", "parameters": "()", "modifiers": "static", "return": "IntSet", "signature": "IntSet empty()", "full_signature": "static IntSet empty()", "class_method_signature": "IntSet.empty()", "testcase": false, "constructor": false}, {"identifier": "allOf", "parameters": "(int x, int... xs)", "modifiers": "static", "return": "IntSet", "signature": "IntSet allOf(int x, int... xs)", "full_signature": "static IntSet allOf(int x, int... xs)", "class_method_signature": "IntSet.allOf(int x, int... xs)", "testcase": false, "constructor": false}, {"identifier": "noneOf", "parameters": "(int x, int... xs)", "modifiers": "static", "return": "IntSet", "signature": "IntSet noneOf(int x, int... xs)", "full_signature": "static IntSet noneOf(int x, int... xs)", "class_method_signature": "IntSet.noneOf(int x, int... xs)", "testcase": false, "constructor": false}, {"identifier": "fromBitSet", "parameters": "(BitSet s)", "modifiers": "static", "return": "IntSet", "signature": "IntSet fromBitSet(BitSet s)", "full_signature": "static IntSet fromBitSet(BitSet s)", "class_method_signature": "IntSet.fromBitSet(BitSet s)", "testcase": false, "constructor": false}, {"identifier": "complement", "parameters": "(IntSet set)", "modifiers": "private static", "return": "IntSet", "signature": "IntSet complement(IntSet set)", "full_signature": "private static IntSet complement(IntSet set)", "class_method_signature": "IntSet.complement(IntSet set)", "testcase": false, "constructor": false}], "file": "core/src/main/java/uk/ac/ebi/beam/IntSet.java"}, "focal_method": {"identifier": "noneOf", "parameters": "(int x, int... xs)", "modifiers": "static", "return": "IntSet", "body": "static IntSet noneOf(int x, int... xs) {\n        return complement(allOf(x, xs));\n    }", "signature": "IntSet noneOf(int x, int... xs)", "full_signature": "static IntSet noneOf(int x, int... xs)", "class_method_signature": "IntSet.noneOf(int x, int... xs)", "testcase": false, "constructor": false, "invocations": ["complement", "allOf"]}, "repository": {"repo_id": 12061606, "url": "https://github.com/johnmay/beam", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 19, "size": 825, "license": "licensed"}}