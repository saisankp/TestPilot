{"test_class": {"identifier": "EmbeddedUserServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final UUID RANDOM_UUID = UUID.randomUUID();", "modifier": "private static final", "type": "UUID", "declarator": "RANDOM_UUID = UUID.randomUUID()", "var_name": "RANDOM_UUID"}, {"original_string": "private static final UserEntity TEST_USER_ENTITY = new UserEntity(\"test\", \"test\", null);", "modifier": "private static final", "type": "UserEntity", "declarator": "TEST_USER_ENTITY = new UserEntity(\"test\", \"test\", null)", "var_name": "TEST_USER_ENTITY"}, {"original_string": "private static final Long COUNT = 10L;", "modifier": "private static final", "type": "Long", "declarator": "COUNT = 10L", "var_name": "COUNT"}, {"original_string": "private static final String UNENCRYPTED_PASSWORD = \"password\";", "modifier": "private static final", "type": "String", "declarator": "UNENCRYPTED_PASSWORD = \"password\"", "var_name": "UNENCRYPTED_PASSWORD"}, {"original_string": "private static final String ENCRYPTED_PASSWORD = \"$2a$12$OiHAOiHAOiHAOiHAOiHAOek2Bn3t./pRbHo5UYYCAx.Htp/SiLvay\";", "modifier": "private static final", "type": "String", "declarator": "ENCRYPTED_PASSWORD = \"$2a$12$OiHAOiHAOiHAOiHAOiHAOek2Bn3t./pRbHo5UYYCAx.Htp/SiLvay\"", "var_name": "ENCRYPTED_PASSWORD"}, {"original_string": "@Mock\n    private UserRepository mockUserRepository;", "modifier": "@Mock\n    private", "type": "UserRepository", "declarator": "mockUserRepository", "var_name": "mockUserRepository"}, {"original_string": "@Mock\n    private SecureRandom mockSecureRandom;", "modifier": "@Mock\n    private", "type": "SecureRandom", "declarator": "mockSecureRandom", "var_name": "mockSecureRandom"}, {"original_string": "private UserService userService;", "modifier": "private", "type": "UserService", "declarator": "userService", "var_name": "userService"}], "file": "application/confagrid-webapp/src/test/java/com/aleggeup/confagrid/user/EmbeddedUserServiceTest.java"}, "test_case": {"identifier": "testSave", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSave() {\n        userService.save(TEST_USER_ENTITY);\n\n        Mockito.verify(mockUserRepository).save(TEST_USER_ENTITY);\n    }", "signature": "void testSave()", "full_signature": "@Test public void testSave()", "class_method_signature": "EmbeddedUserServiceTest.testSave()", "testcase": true, "constructor": false, "invocations": ["save", "save", "verify"]}, "focal_class": {"identifier": "EmbeddedUserService", "superclass": "", "interfaces": "implements UserService", "fields": [{"original_string": "private static final int BCRYPT_ROUNDS = 12;", "modifier": "private static final", "type": "int", "declarator": "BCRYPT_ROUNDS = 12", "var_name": "BCRYPT_ROUNDS"}, {"original_string": "private final UserRepository userRepository;", "modifier": "private final", "type": "UserRepository", "declarator": "userRepository", "var_name": "userRepository"}, {"original_string": "private final BCryptPasswordEncoder passwordEncoder;", "modifier": "private final", "type": "BCryptPasswordEncoder", "declarator": "passwordEncoder", "var_name": "passwordEncoder"}], "methods": [{"identifier": "EmbeddedUserService", "parameters": "(final UserRepository userRepository, final SecureRandom secureRandom)", "modifiers": "@Autowired public", "return": "", "signature": " EmbeddedUserService(final UserRepository userRepository, final SecureRandom secureRandom)", "full_signature": "@Autowired public  EmbeddedUserService(final UserRepository userRepository, final SecureRandom secureRandom)", "class_method_signature": "EmbeddedUserService.EmbeddedUserService(final UserRepository userRepository, final SecureRandom secureRandom)", "testcase": false, "constructor": true}, {"identifier": "save", "parameters": "(final UserEntity userEntity)", "modifiers": "@Override public", "return": "void", "signature": "void save(final UserEntity userEntity)", "full_signature": "@Override public void save(final UserEntity userEntity)", "class_method_signature": "EmbeddedUserService.save(final UserEntity userEntity)", "testcase": false, "constructor": false}, {"identifier": "getById", "parameters": "(final UUID key)", "modifiers": "@Override public", "return": "UserEntity", "signature": "UserEntity getById(final UUID key)", "full_signature": "@Override public UserEntity getById(final UUID key)", "class_method_signature": "EmbeddedUserService.getById(final UUID key)", "testcase": false, "constructor": false}, {"identifier": "containsKey", "parameters": "(final UUID key)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsKey(final UUID key)", "full_signature": "@Override public boolean containsKey(final UUID key)", "class_method_signature": "EmbeddedUserService.containsKey(final UUID key)", "testcase": false, "constructor": false}, {"identifier": "containsName", "parameters": "(final String name)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean containsName(final String name)", "full_signature": "@Override public boolean containsName(final String name)", "class_method_signature": "EmbeddedUserService.containsName(final String name)", "testcase": false, "constructor": false}, {"identifier": "findByName", "parameters": "(final String name)", "modifiers": "@Override public", "return": "UserEntity", "signature": "UserEntity findByName(final String name)", "full_signature": "@Override public UserEntity findByName(final String name)", "class_method_signature": "EmbeddedUserService.findByName(final String name)", "testcase": false, "constructor": false}, {"identifier": "encrypt", "parameters": "(final String raw)", "modifiers": "@Override public", "return": "String", "signature": "String encrypt(final String raw)", "full_signature": "@Override public String encrypt(final String raw)", "class_method_signature": "EmbeddedUserService.encrypt(final String raw)", "testcase": false, "constructor": false}, {"identifier": "matches", "parameters": "(final String raw, final String encoded)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean matches(final String raw, final String encoded)", "full_signature": "@Override public boolean matches(final String raw, final String encoded)", "class_method_signature": "EmbeddedUserService.matches(final String raw, final String encoded)", "testcase": false, "constructor": false}, {"identifier": "count", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long count()", "full_signature": "@Override public long count()", "class_method_signature": "EmbeddedUserService.count()", "testcase": false, "constructor": false}], "file": "application/confagrid-webapp/src/main/java/com/aleggeup/confagrid/user/EmbeddedUserService.java"}, "focal_method": {"identifier": "save", "parameters": "(final UserEntity userEntity)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void save(final UserEntity userEntity) {\n        userRepository.save(userEntity);\n    }", "signature": "void save(final UserEntity userEntity)", "full_signature": "@Override public void save(final UserEntity userEntity)", "class_method_signature": "EmbeddedUserService.save(final UserEntity userEntity)", "testcase": false, "constructor": false, "invocations": ["save"]}, "repository": {"repo_id": 97776141, "url": "https://github.com/ALeggeUp/confagrid", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 22043, "license": "licensed"}}