{"test_class": {"identifier": "ArtifactUtilTest", "superclass": "", "interfaces": "", "fields": [], "file": "module/com.sandpolis.core.foundation/src/test/java/com/sandpolis/core/foundation/util/ArtifactUtilTest.java"}, "test_case": {"identifier": "download_1", "parameters": "(@TempDir Path temp)", "modifiers": "@Test @DisplayName(\"Check download\")", "return": "void", "body": "@Test\n\t@DisplayName(\"Check download\")\n\tvoid download_1(@TempDir Path temp) throws IOException {\n\t\tdownload(temp, \"javax.measure:unit-api:1.0\");\n\t\tassertTrue(Files.exists(temp.resolve(\"unit-api-1.0.jar\")));\n\t}", "signature": "void download_1(@TempDir Path temp)", "full_signature": "@Test @DisplayName(\"Check download\") void download_1(@TempDir Path temp)", "class_method_signature": "ArtifactUtilTest.download_1(@TempDir Path temp)", "testcase": true, "constructor": false, "invocations": ["download", "assertTrue", "exists", "resolve"]}, "focal_class": {"identifier": "ArtifactUtil", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger log = LoggerFactory.getLogger(ArtifactUtil.class);", "modifier": "private static final", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(ArtifactUtil.class)", "var_name": "log"}, {"original_string": "private static final String MAVEN_HOST = \"https://repo1.maven.org\";", "modifier": "private static final", "type": "String", "declarator": "MAVEN_HOST = \"https://repo1.maven.org\"", "var_name": "MAVEN_HOST"}], "methods": [{"identifier": "getArtifactFile", "parameters": "(Path directory, String coordinates)", "modifiers": "public static", "return": "Path", "signature": "Path getArtifactFile(Path directory, String coordinates)", "full_signature": "public static Path getArtifactFile(Path directory, String coordinates)", "class_method_signature": "ArtifactUtil.getArtifactFile(Path directory, String coordinates)", "testcase": false, "constructor": false}, {"identifier": "findArtifactFile", "parameters": "(Path directory, String artifactId)", "modifiers": "public static", "return": "Stream<Path>", "signature": "Stream<Path> findArtifactFile(Path directory, String artifactId)", "full_signature": "public static Stream<Path> findArtifactFile(Path directory, String artifactId)", "class_method_signature": "ArtifactUtil.findArtifactFile(Path directory, String artifactId)", "testcase": false, "constructor": false}, {"identifier": "download", "parameters": "(Path directory, String gav)", "modifiers": "public static", "return": "Path", "signature": "Path download(Path directory, String gav)", "full_signature": "public static Path download(Path directory, String gav)", "class_method_signature": "ArtifactUtil.download(Path directory, String gav)", "testcase": false, "constructor": false}, {"identifier": "checkHash", "parameters": "(Path directory, String gav)", "modifiers": "@SuppressWarnings(\"deprecation\") public static", "return": "boolean", "signature": "boolean checkHash(Path directory, String gav)", "full_signature": "@SuppressWarnings(\"deprecation\") public static boolean checkHash(Path directory, String gav)", "class_method_signature": "ArtifactUtil.checkHash(Path directory, String gav)", "testcase": false, "constructor": false}, {"identifier": "getLatestVersion", "parameters": "(String gav)", "modifiers": "public static", "return": "String", "signature": "String getLatestVersion(String gav)", "full_signature": "public static String getLatestVersion(String gav)", "class_method_signature": "ArtifactUtil.getLatestVersion(String gav)", "testcase": false, "constructor": false}, {"identifier": "ArtifactUtil", "parameters": "()", "modifiers": "private", "return": "", "signature": " ArtifactUtil()", "full_signature": "private  ArtifactUtil()", "class_method_signature": "ArtifactUtil.ArtifactUtil()", "testcase": false, "constructor": true}], "file": "module/com.sandpolis.core.foundation/src/main/java/com/sandpolis/core/foundation/util/ArtifactUtil.java"}, "focal_method": {"identifier": "download", "parameters": "(Path directory, String gav)", "modifiers": "public static", "return": "Path", "body": "public static Path download(Path directory, String gav) throws IOException {\n\t\tcheckNotNull(directory);\n\t\tcheckNotNull(gav);\n\n\t\tvar coordinate = ParsedCoordinate.fromCoordinate(gav);\n\t\tString url = MAVEN_HOST + \"/maven2/\" // Base URL\n\t\t\t\t+ coordinate.groupId.replaceAll(\"\\\\.\", \"/\") + \"/\"// Group name\n\t\t\t\t+ coordinate.artifactId + \"/\" // Artifact name\n\t\t\t\t+ coordinate.version + \"/\" // Artifact version\n\t\t\t\t+ coordinate.filename; // Artifact filename\n\t\tlog.debug(\"Downloading artifact: {}\", url);\n\n\t\tPath output = directory.resolve(coordinate.filename);\n\t\tNetUtil.download(url, output.toFile());\n\t\treturn output;\n\t}", "signature": "Path download(Path directory, String gav)", "full_signature": "public static Path download(Path directory, String gav)", "class_method_signature": "ArtifactUtil.download(Path directory, String gav)", "testcase": false, "constructor": false, "invocations": ["checkNotNull", "checkNotNull", "fromCoordinate", "replaceAll", "debug", "resolve", "download", "toFile"]}, "repository": {"repo_id": 100069523, "url": "https://github.com/Subterranean-Security/Sandpolis", "stars": 25, "created": "8/11/2017 8:55:30 PM +00:00", "updates": "2020-01-27T01:41:01+00:00", "fork": "False", "license": "licensed"}}