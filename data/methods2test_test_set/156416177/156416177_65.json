{"test_class": {"identifier": "VerifyPinRespParsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final byte[] SW1SW2_KO = ByteArrayUtil.fromHex(\"6A82\");", "modifier": "private static final", "type": "byte[]", "declarator": "SW1SW2_KO = ByteArrayUtil.fromHex(\"6A82\")", "var_name": "SW1SW2_KO"}, {"original_string": "private static final byte[] SW1SW2_OK = ByteArrayUtil.fromHex(\"9000\");", "modifier": "private static final", "type": "byte[]", "declarator": "SW1SW2_OK = ByteArrayUtil.fromHex(\"9000\")", "var_name": "SW1SW2_OK"}, {"original_string": "private static final byte[] ATTEMPTS_1 = ByteArrayUtil.fromHex(\"63C1\");", "modifier": "private static final", "type": "byte[]", "declarator": "ATTEMPTS_1 = ByteArrayUtil.fromHex(\"63C1\")", "var_name": "ATTEMPTS_1"}, {"original_string": "private static final byte[] ATTEMPTS_2 = ByteArrayUtil.fromHex(\"63C2\");", "modifier": "private static final", "type": "byte[]", "declarator": "ATTEMPTS_2 = ByteArrayUtil.fromHex(\"63C2\")", "var_name": "ATTEMPTS_2"}, {"original_string": "private static final byte[] PIN_BLOCKED = ByteArrayUtil.fromHex(\"6983\");", "modifier": "private static final", "type": "byte[]", "declarator": "PIN_BLOCKED = ByteArrayUtil.fromHex(\"6983\")", "var_name": "PIN_BLOCKED"}], "file": "java/component/keyple-calypso/src/test/java/org/eclipse/keyple/calypso/command/po/parser/security/VerifyPinRespParsTest.java"}, "test_case": {"identifier": "verifyPinRespPars_attempts_1", "parameters": "()", "modifiers": "@Test(expected = CalypsoPoPinException.class) public", "return": "void", "body": "@Test(expected = CalypsoPoPinException.class)\n  public void verifyPinRespPars_attempts_1() {\n    VerifyPinRespPars parser = new VerifyPinRespPars(new ApduResponse(ATTEMPTS_1, null), null);\n    assertThat(parser.getRemainingAttemptCounter()).isEqualTo(1);\n    parser.checkStatus();\n    shouldHaveThrown(CalypsoPoPinException.class);\n  }", "signature": "void verifyPinRespPars_attempts_1()", "full_signature": "@Test(expected = CalypsoPoPinException.class) public void verifyPinRespPars_attempts_1()", "class_method_signature": "VerifyPinRespParsTest.verifyPinRespPars_attempts_1()", "testcase": true, "constructor": false, "invocations": ["isEqualTo", "assertThat", "getRemainingAttemptCounter", "checkStatus", "shouldHaveThrown"]}, "focal_class": {"identifier": "VerifyPinRespPars", "superclass": "extends AbstractPoResponseParser", "interfaces": "", "fields": [{"original_string": "private static final Map<Integer, StatusProperties> STATUS_TABLE;", "modifier": "private static final", "type": "Map<Integer, StatusProperties>", "declarator": "STATUS_TABLE", "var_name": "STATUS_TABLE"}], "methods": [{"identifier": "VerifyPinRespPars", "parameters": "(ApduResponse response, VerifyPinCmdBuild builder)", "modifiers": "public", "return": "", "signature": " VerifyPinRespPars(ApduResponse response, VerifyPinCmdBuild builder)", "full_signature": "public  VerifyPinRespPars(ApduResponse response, VerifyPinCmdBuild builder)", "class_method_signature": "VerifyPinRespPars.VerifyPinRespPars(ApduResponse response, VerifyPinCmdBuild builder)", "testcase": false, "constructor": true}, {"identifier": "getRemainingAttemptCounter", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getRemainingAttemptCounter()", "full_signature": "public int getRemainingAttemptCounter()", "class_method_signature": "VerifyPinRespPars.getRemainingAttemptCounter()", "testcase": false, "constructor": false}, {"identifier": "getStatusTable", "parameters": "()", "modifiers": "@Override protected", "return": "Map<Integer, StatusProperties>", "signature": "Map<Integer, StatusProperties> getStatusTable()", "full_signature": "@Override protected Map<Integer, StatusProperties> getStatusTable()", "class_method_signature": "VerifyPinRespPars.getStatusTable()", "testcase": false, "constructor": false}], "file": "java/component/keyple-calypso/src/main/java/org/eclipse/keyple/calypso/command/po/parser/security/VerifyPinRespPars.java"}, "focal_method": {"identifier": "getRemainingAttemptCounter", "parameters": "()", "modifiers": "public", "return": "int", "body": "public int getRemainingAttemptCounter() {\n    int attemptCounter;\n    switch (response.getStatusCode()) {\n      case 0x6983:\n        attemptCounter = 0;\n        break;\n      case 0x63C1:\n        attemptCounter = 1;\n        break;\n      case 0x63C2:\n        attemptCounter = 2;\n        break;\n      case 0x9000:\n        attemptCounter = 3;\n        break;\n      default:\n        throw new IllegalStateException(\n            \"Incorrect status word: \" + String.format(\"0x%04X\", response.getStatusCode()));\n    }\n    return attemptCounter;\n  }", "signature": "int getRemainingAttemptCounter()", "full_signature": "public int getRemainingAttemptCounter()", "class_method_signature": "VerifyPinRespPars.getRemainingAttemptCounter()", "testcase": false, "constructor": false, "invocations": ["getStatusCode", "format", "getStatusCode"]}, "repository": {"repo_id": 156416177, "url": "https://github.com/eclipse/keyple-java", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 10325, "license": "licensed"}}