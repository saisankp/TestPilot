{"test_class": {"identifier": "NameValueFactoryTest", "superclass": "extends BaseValueFactoryTest", "interfaces": "", "fields": [{"original_string": "public static final TextEncoder NO_OP_ENCODER = Path.NO_OP_ENCODER;", "modifier": "public static final", "type": "TextEncoder", "declarator": "NO_OP_ENCODER = Path.NO_OP_ENCODER", "var_name": "NO_OP_ENCODER"}, {"original_string": "private Name name;", "modifier": "private", "type": "Name", "declarator": "name", "var_name": "name"}], "file": "modeshape-jcr/src/test/java/org/modeshape/jcr/value/basic/NameValueFactoryTest.java"}, "test_case": {"identifier": "shouldCreateNameWithBlankUriAndBlankName", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldCreateNameWithBlankUriAndBlankName() {\n        name = nameFactory.create(\"{}\");\n        assertThat(name.getNamespaceUri(), is(\"\"));\n        assertThat(name.getLocalName(), is(\"\"));\n        assertThat(name.getString(NO_OP_ENCODER), is(\"\"));\n    }", "signature": "void shouldCreateNameWithBlankUriAndBlankName()", "full_signature": "@Test public void shouldCreateNameWithBlankUriAndBlankName()", "class_method_signature": "NameValueFactoryTest.shouldCreateNameWithBlankUriAndBlankName()", "testcase": true, "constructor": false, "invocations": ["create", "assertThat", "getNamespaceUri", "is", "assertThat", "getLocalName", "is", "assertThat", "getString", "is"]}, "focal_class": {"identifier": "NameValueFactory", "superclass": "extends AbstractValueFactory<Name>", "interfaces": "implements NameFactory", "fields": [{"original_string": "private static final Name BLANK_NAME = new BasicName(\"\", \"\");", "modifier": "private static final", "type": "Name", "declarator": "BLANK_NAME = new BasicName(\"\", \"\")", "var_name": "BLANK_NAME"}, {"original_string": "private static final Name ANY_NAME = new BasicName(\"\", \"*\");", "modifier": "private static final", "type": "Name", "declarator": "ANY_NAME = new BasicName(\"\", \"*\")", "var_name": "ANY_NAME"}, {"original_string": "private final NamespaceRegistry.Holder namespaceRegistryHolder;", "modifier": "private final", "type": "NamespaceRegistry.Holder", "declarator": "namespaceRegistryHolder", "var_name": "namespaceRegistryHolder"}], "methods": [{"identifier": "NameValueFactory", "parameters": "( NamespaceRegistry.Holder namespaceRegistryHolder,\n                             TextDecoder decoder,\n                             ValueFactories factories )", "modifiers": "public", "return": "", "signature": " NameValueFactory( NamespaceRegistry.Holder namespaceRegistryHolder,\n                             TextDecoder decoder,\n                             ValueFactories factories )", "full_signature": "public  NameValueFactory( NamespaceRegistry.Holder namespaceRegistryHolder,\n                             TextDecoder decoder,\n                             ValueFactories factories )", "class_method_signature": "NameValueFactory.NameValueFactory( NamespaceRegistry.Holder namespaceRegistryHolder,\n                             TextDecoder decoder,\n                             ValueFactories factories )", "testcase": false, "constructor": true}, {"identifier": "with", "parameters": "( ValueFactories valueFactories )", "modifiers": "@Override public", "return": "NameFactory", "signature": "NameFactory with( ValueFactories valueFactories )", "full_signature": "@Override public NameFactory with( ValueFactories valueFactories )", "class_method_signature": "NameValueFactory.with( ValueFactories valueFactories )", "testcase": false, "constructor": false}, {"identifier": "with", "parameters": "( org.modeshape.jcr.value.NamespaceRegistry.Holder namespaceRegistryHolder )", "modifiers": "@Override public", "return": "NameFactory", "signature": "NameFactory with( org.modeshape.jcr.value.NamespaceRegistry.Holder namespaceRegistryHolder )", "full_signature": "@Override public NameFactory with( org.modeshape.jcr.value.NamespaceRegistry.Holder namespaceRegistryHolder )", "class_method_signature": "NameValueFactory.with( org.modeshape.jcr.value.NamespaceRegistry.Holder namespaceRegistryHolder )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( String value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( String value )", "full_signature": "@Override public Name create( String value )", "class_method_signature": "NameValueFactory.create( String value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( String value,\n                        TextDecoder decoder )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( String value,\n                        TextDecoder decoder )", "full_signature": "@Override public Name create( String value,\n                        TextDecoder decoder )", "class_method_signature": "NameValueFactory.create( String value,\n                        TextDecoder decoder )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( String namespaceUri,\n                        String localName )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( String namespaceUri,\n                        String localName )", "full_signature": "@Override public Name create( String namespaceUri,\n                        String localName )", "class_method_signature": "NameValueFactory.create( String namespaceUri,\n                        String localName )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( String namespaceUri,\n                        String localName,\n                        TextDecoder decoder )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( String namespaceUri,\n                        String localName,\n                        TextDecoder decoder )", "full_signature": "@Override public Name create( String namespaceUri,\n                        String localName,\n                        TextDecoder decoder )", "class_method_signature": "NameValueFactory.create( String namespaceUri,\n                        String localName,\n                        TextDecoder decoder )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( int value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( int value )", "full_signature": "@Override public Name create( int value )", "class_method_signature": "NameValueFactory.create( int value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( long value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( long value )", "full_signature": "@Override public Name create( long value )", "class_method_signature": "NameValueFactory.create( long value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( boolean value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( boolean value )", "full_signature": "@Override public Name create( boolean value )", "class_method_signature": "NameValueFactory.create( boolean value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( float value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( float value )", "full_signature": "@Override public Name create( float value )", "class_method_signature": "NameValueFactory.create( float value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( double value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( double value )", "full_signature": "@Override public Name create( double value )", "class_method_signature": "NameValueFactory.create( double value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( BigDecimal value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( BigDecimal value )", "full_signature": "@Override public Name create( BigDecimal value )", "class_method_signature": "NameValueFactory.create( BigDecimal value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Calendar value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( Calendar value )", "full_signature": "@Override public Name create( Calendar value )", "class_method_signature": "NameValueFactory.create( Calendar value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Date value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( Date value )", "full_signature": "@Override public Name create( Date value )", "class_method_signature": "NameValueFactory.create( Date value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( DateTime value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( DateTime value )", "full_signature": "@Override public Name create( DateTime value )", "class_method_signature": "NameValueFactory.create( DateTime value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Name value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( Name value )", "full_signature": "@Override public Name create( Name value )", "class_method_signature": "NameValueFactory.create( Name value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Path value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( Path value )", "full_signature": "@Override public Name create( Path value )", "class_method_signature": "NameValueFactory.create( Path value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Path.Segment segment )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( Path.Segment segment )", "full_signature": "@Override public Name create( Path.Segment segment )", "class_method_signature": "NameValueFactory.create( Path.Segment segment )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( Reference value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( Reference value )", "full_signature": "@Override public Name create( Reference value )", "class_method_signature": "NameValueFactory.create( Reference value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( URI value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( URI value )", "full_signature": "@Override public Name create( URI value )", "class_method_signature": "NameValueFactory.create( URI value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( UUID value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( UUID value )", "full_signature": "@Override public Name create( UUID value )", "class_method_signature": "NameValueFactory.create( UUID value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( NodeKey value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( NodeKey value )", "full_signature": "@Override public Name create( NodeKey value )", "class_method_signature": "NameValueFactory.create( NodeKey value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( byte[] value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( byte[] value )", "full_signature": "@Override public Name create( byte[] value )", "class_method_signature": "NameValueFactory.create( byte[] value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( BinaryValue value )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( BinaryValue value )", "full_signature": "@Override public Name create( BinaryValue value )", "class_method_signature": "NameValueFactory.create( BinaryValue value )", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "( InputStream stream )", "modifiers": "@Override public", "return": "Name", "signature": "Name create( InputStream stream )", "full_signature": "@Override public Name create( InputStream stream )", "class_method_signature": "NameValueFactory.create( InputStream stream )", "testcase": false, "constructor": false}, {"identifier": "getNamespaceRegistry", "parameters": "()", "modifiers": "@Override public", "return": "NamespaceRegistry", "signature": "NamespaceRegistry getNamespaceRegistry()", "full_signature": "@Override public NamespaceRegistry getNamespaceRegistry()", "class_method_signature": "NameValueFactory.getNamespaceRegistry()", "testcase": false, "constructor": false}, {"identifier": "createEmptyArray", "parameters": "( int length )", "modifiers": "@Override public", "return": "Name[]", "signature": "Name[] createEmptyArray( int length )", "full_signature": "@Override public Name[] createEmptyArray( int length )", "class_method_signature": "NameValueFactory.createEmptyArray( int length )", "testcase": false, "constructor": false}], "file": "modeshape-jcr/src/main/java/org/modeshape/jcr/value/basic/NameValueFactory.java"}, "focal_method": {"identifier": "create", "parameters": "( String value )", "modifiers": "@Override public", "return": "Name", "body": "@Override\n    public Name create( String value ) {\n        return create(value, getDecoder());\n    }", "signature": "Name create( String value )", "full_signature": "@Override public Name create( String value )", "class_method_signature": "NameValueFactory.create( String value )", "testcase": false, "constructor": false, "invocations": ["create", "getDecoder"]}, "repository": {"repo_id": 1244027, "url": "https://github.com/ModeShape/modeshape", "language": "Java", "is_fork": false, "fork_count": 213, "stargazer_count": 208, "size": 134266, "license": "licensed"}}