{"test_class": {"identifier": "FileHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static String sampleDir;", "modifier": "private static", "type": "String", "declarator": "sampleDir", "var_name": "sampleDir"}, {"original_string": "private static String testFilePath;", "modifier": "private static", "type": "String", "declarator": "testFilePath", "var_name": "testFilePath"}, {"original_string": "private static final String testFile = \"demo_HUCs\";", "modifier": "private static final", "type": "String", "declarator": "testFile = \"demo_HUCs\"", "var_name": "testFile"}, {"original_string": "private static final String secondTestFile = \"Yahara_River_HRUs_geo_WGS84\";", "modifier": "private static final", "type": "String", "declarator": "secondTestFile = \"Yahara_River_HRUs_geo_WGS84\"", "var_name": "secondTestFile"}, {"original_string": "private String tempDir = \"\";", "modifier": "private", "type": "String", "declarator": "tempDir = \"\"", "var_name": "tempDir"}, {"original_string": "private String seperator = \"\";", "modifier": "private", "type": "String", "declarator": "seperator = \"\"", "var_name": "seperator"}, {"original_string": "private static org.slf4j.Logger log = LoggerFactory.getLogger(FileHelperTest.class);", "modifier": "private static", "type": "org.slf4j.Logger", "declarator": "log = LoggerFactory.getLogger(FileHelperTest.class)", "var_name": "log"}], "file": "gdp-common-utilities/src/test/java/gov/usgs/cida/gdp/utilities/FileHelperTest.java"}, "test_case": {"identifier": "testGetFilesOlderThanWithNullFilePath", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetFilesOlderThanWithNullFilePath() {\n\t\tSystem.out.println(\"Test: \" + \"testGetFilesOlderThanWithNullFilePath\");\n        Collection<File> result = FileHelper.getFilesOlderThan(null, Long.MIN_VALUE, Boolean.TRUE);\n        assertTrue(result.isEmpty());\n    }", "signature": "void testGetFilesOlderThanWithNullFilePath()", "full_signature": "@Test public void testGetFilesOlderThanWithNullFilePath()", "class_method_signature": "FileHelperTest.testGetFilesOlderThanWithNullFilePath()", "testcase": true, "constructor": false, "invocations": ["println", "getFilesOlderThan", "assertTrue", "isEmpty"]}, "focal_class": {"identifier": "FileHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static org.slf4j.Logger log = LoggerFactory.getLogger(FileHelper.class);", "modifier": "private static", "type": "org.slf4j.Logger", "declarator": "log = LoggerFactory.getLogger(FileHelper.class)", "var_name": "log"}, {"original_string": "private static final String SUFFIX_SHP = \".shp\";", "modifier": "private static final", "type": "String", "declarator": "SUFFIX_SHP = \".shp\"", "var_name": "SUFFIX_SHP"}, {"original_string": "private static final String SUFFIX_SHX = \".shx\";", "modifier": "private static final", "type": "String", "declarator": "SUFFIX_SHX = \".shx\"", "var_name": "SUFFIX_SHX"}, {"original_string": "private static final String SUFFIX_PRJ = \".prj\";", "modifier": "private static final", "type": "String", "declarator": "SUFFIX_PRJ = \".prj\"", "var_name": "SUFFIX_PRJ"}, {"original_string": "private static final String SUFFIX_DBF = \".dbf\";", "modifier": "private static final", "type": "String", "declarator": "SUFFIX_DBF = \".dbf\"", "var_name": "SUFFIX_DBF"}], "methods": [{"identifier": "base64Encode", "parameters": "(final File input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] base64Encode(final File input)", "full_signature": "public static byte[] base64Encode(final File input)", "class_method_signature": "FileHelper.base64Encode(final File input)", "testcase": false, "constructor": false}, {"identifier": "base64Encode", "parameters": "(final byte[] input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] base64Encode(final byte[] input)", "full_signature": "public static byte[] base64Encode(final byte[] input)", "class_method_signature": "FileHelper.base64Encode(final byte[] input)", "testcase": false, "constructor": false}, {"identifier": "getByteArrayFromFile", "parameters": "(File file)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] getByteArrayFromFile(File file)", "full_signature": "public static byte[] getByteArrayFromFile(File file)", "class_method_signature": "FileHelper.getByteArrayFromFile(File file)", "testcase": false, "constructor": false}, {"identifier": "renameFile", "parameters": "(final File fromFile, final String toFileName)", "modifiers": "public static", "return": "boolean", "signature": "boolean renameFile(final File fromFile, final String toFileName)", "full_signature": "public static boolean renameFile(final File fromFile, final String toFileName)", "class_method_signature": "FileHelper.renameFile(final File fromFile, final String toFileName)", "testcase": false, "constructor": false}, {"identifier": "copyFileToPath", "parameters": "(final File inFile, final String outFilePath)", "modifiers": "public static", "return": "boolean", "signature": "boolean copyFileToPath(final File inFile, final String outFilePath)", "full_signature": "public static boolean copyFileToPath(final File inFile, final String outFilePath)", "class_method_signature": "FileHelper.copyFileToPath(final File inFile, final String outFilePath)", "testcase": false, "constructor": false}, {"identifier": "copyFileToPath", "parameters": "(final File inFile, final String outPath, boolean deleteOriginalFile)", "modifiers": "public static", "return": "boolean", "signature": "boolean copyFileToPath(final File inFile, final String outPath, boolean deleteOriginalFile)", "full_signature": "public static boolean copyFileToPath(final File inFile, final String outPath, boolean deleteOriginalFile)", "class_method_signature": "FileHelper.copyFileToPath(final File inFile, final String outPath, boolean deleteOriginalFile)", "testcase": false, "constructor": false}, {"identifier": "wipeOldFiles", "parameters": "(File directory, Long cutoffTime, boolean deleteDirectory)", "modifiers": "public static", "return": "Collection<File>", "signature": "Collection<File> wipeOldFiles(File directory, Long cutoffTime, boolean deleteDirectory)", "full_signature": "public static Collection<File> wipeOldFiles(File directory, Long cutoffTime, boolean deleteDirectory)", "class_method_signature": "FileHelper.wipeOldFiles(File directory, Long cutoffTime, boolean deleteDirectory)", "testcase": false, "constructor": false}, {"identifier": "createDir", "parameters": "(File directory)", "modifiers": "public static", "return": "boolean", "signature": "boolean createDir(File directory)", "full_signature": "public static boolean createDir(File directory)", "class_method_signature": "FileHelper.createDir(File directory)", "testcase": false, "constructor": false}, {"identifier": "createDir", "parameters": "(String directory)", "modifiers": "public static", "return": "boolean", "signature": "boolean createDir(String directory)", "full_signature": "public static boolean createDir(String directory)", "class_method_signature": "FileHelper.createDir(String directory)", "testcase": false, "constructor": false}, {"identifier": "deleteDirRecursively", "parameters": "(File directory)", "modifiers": "public static", "return": "boolean", "signature": "boolean deleteDirRecursively(File directory)", "full_signature": "public static boolean deleteDirRecursively(File directory)", "class_method_signature": "FileHelper.deleteDirRecursively(File directory)", "testcase": false, "constructor": false}, {"identifier": "deleteDirRecursively", "parameters": "(String directory)", "modifiers": "public static", "return": "boolean", "signature": "boolean deleteDirRecursively(String directory)", "full_signature": "public static boolean deleteDirRecursively(String directory)", "class_method_signature": "FileHelper.deleteDirRecursively(String directory)", "testcase": false, "constructor": false}, {"identifier": "deleteFileQuietly", "parameters": "(String filePath)", "modifiers": "public static", "return": "boolean", "signature": "boolean deleteFileQuietly(String filePath)", "full_signature": "public static boolean deleteFileQuietly(String filePath)", "class_method_signature": "FileHelper.deleteFileQuietly(String filePath)", "testcase": false, "constructor": false}, {"identifier": "deleteFileQuietly", "parameters": "(File file)", "modifiers": "public static", "return": "boolean", "signature": "boolean deleteFileQuietly(File file)", "full_signature": "public static boolean deleteFileQuietly(File file)", "class_method_signature": "FileHelper.deleteFileQuietly(File file)", "testcase": false, "constructor": false}, {"identifier": "deleteFile", "parameters": "(String filePath)", "modifiers": "public static", "return": "boolean", "signature": "boolean deleteFile(String filePath)", "full_signature": "public static boolean deleteFile(String filePath)", "class_method_signature": "FileHelper.deleteFile(String filePath)", "testcase": false, "constructor": false}, {"identifier": "deleteFile", "parameters": "(File file)", "modifiers": "public static", "return": "boolean", "signature": "boolean deleteFile(File file)", "full_signature": "public static boolean deleteFile(File file)", "class_method_signature": "FileHelper.deleteFile(File file)", "testcase": false, "constructor": false}, {"identifier": "doesDirectoryOrFileExist", "parameters": "(String filePath)", "modifiers": "public static", "return": "boolean", "signature": "boolean doesDirectoryOrFileExist(String filePath)", "full_signature": "public static boolean doesDirectoryOrFileExist(String filePath)", "class_method_signature": "FileHelper.doesDirectoryOrFileExist(String filePath)", "testcase": false, "constructor": false}, {"identifier": "findFile", "parameters": "(String file, String rootPath)", "modifiers": "public static", "return": "File", "signature": "File findFile(String file, String rootPath)", "full_signature": "public static File findFile(String file, String rootPath)", "class_method_signature": "FileHelper.findFile(String file, String rootPath)", "testcase": false, "constructor": false}, {"identifier": "getFileList", "parameters": "(String filePath, boolean recursive)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getFileList(String filePath, boolean recursive)", "full_signature": "public static List<String> getFileList(String filePath, boolean recursive)", "class_method_signature": "FileHelper.getFileList(String filePath, boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "getFileList", "parameters": "(String filePath, String[] extensions, boolean recursive)", "modifiers": "public static", "return": "List<String>", "signature": "List<String> getFileList(String filePath, String[] extensions, boolean recursive)", "full_signature": "public static List<String> getFileList(String filePath, String[] extensions, boolean recursive)", "class_method_signature": "FileHelper.getFileList(String filePath, String[] extensions, boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "getFileCollection", "parameters": "(String filePath, boolean recursive)", "modifiers": "public static", "return": "Collection<File>", "signature": "Collection<File> getFileCollection(String filePath, boolean recursive)", "full_signature": "public static Collection<File> getFileCollection(String filePath, boolean recursive)", "class_method_signature": "FileHelper.getFileCollection(String filePath, boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "getFileCollection", "parameters": "(String filePath, String[] extensions, boolean recursive)", "modifiers": "public static", "return": "Collection<?>", "signature": "Collection<?> getFileCollection(String filePath, String[] extensions, boolean recursive)", "full_signature": "public static Collection<?> getFileCollection(String filePath, String[] extensions, boolean recursive)", "class_method_signature": "FileHelper.getFileCollection(String filePath, String[] extensions, boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "getSystemTemp", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getSystemTemp()", "full_signature": "public static String getSystemTemp()", "class_method_signature": "FileHelper.getSystemTemp()", "testcase": false, "constructor": false}, {"identifier": "zipDirectory", "parameters": "(String inputDirectory, String absoluteFileName)", "modifiers": "public static", "return": "boolean", "signature": "boolean zipDirectory(String inputDirectory, String absoluteFileName)", "full_signature": "public static boolean zipDirectory(String inputDirectory, String absoluteFileName)", "class_method_signature": "FileHelper.zipDirectory(String inputDirectory, String absoluteFileName)", "testcase": false, "constructor": false}, {"identifier": "unzipFile", "parameters": "(String outputDirectory, File zipFile)", "modifiers": "public static", "return": "boolean", "signature": "boolean unzipFile(String outputDirectory, File zipFile)", "full_signature": "public static boolean unzipFile(String outputDirectory, File zipFile)", "class_method_signature": "FileHelper.unzipFile(String outputDirectory, File zipFile)", "testcase": false, "constructor": false}, {"identifier": "createUserDirectory", "parameters": "(String applicationUserSpaceDir)", "modifiers": "public static", "return": "String", "signature": "String createUserDirectory(String applicationUserSpaceDir)", "full_signature": "public static String createUserDirectory(String applicationUserSpaceDir)", "class_method_signature": "FileHelper.createUserDirectory(String applicationUserSpaceDir)", "testcase": false, "constructor": false}, {"identifier": "updateTimestamp", "parameters": "(final String path, final boolean recursive)", "modifiers": "public static", "return": "boolean", "signature": "boolean updateTimestamp(final String path, final boolean recursive)", "full_signature": "public static boolean updateTimestamp(final String path, final boolean recursive)", "class_method_signature": "FileHelper.updateTimestamp(final String path, final boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "getFilesOlderThan", "parameters": "(File filePath, Long age, Boolean recursive)", "modifiers": "static", "return": "Collection<File>", "signature": "Collection<File> getFilesOlderThan(File filePath, Long age, Boolean recursive)", "full_signature": "static Collection<File> getFilesOlderThan(File filePath, Long age, Boolean recursive)", "class_method_signature": "FileHelper.getFilesOlderThan(File filePath, Long age, Boolean recursive)", "testcase": false, "constructor": false}, {"identifier": "validateShapeFile", "parameters": "(final File shapeFile)", "modifiers": "public static", "return": "Boolean", "signature": "Boolean validateShapeFile(final File shapeFile)", "full_signature": "public static Boolean validateShapeFile(final File shapeFile)", "class_method_signature": "FileHelper.validateShapeFile(final File shapeFile)", "testcase": false, "constructor": false}, {"identifier": "validateShapeZIP", "parameters": "(final File shapeZip)", "modifiers": "public static", "return": "Boolean", "signature": "Boolean validateShapeZIP(final File shapeZip)", "full_signature": "public static Boolean validateShapeZIP(final File shapeZip)", "class_method_signature": "FileHelper.validateShapeZIP(final File shapeZip)", "testcase": false, "constructor": false}], "file": "gdp-common-utilities/src/main/java/gov/usgs/cida/gdp/utilities/FileHelper.java"}, "focal_method": {"identifier": "getFilesOlderThan", "parameters": "(File filePath, Long age, Boolean recursive)", "modifiers": "static", "return": "Collection<File>", "body": "static Collection<File> getFilesOlderThan(File filePath, Long age, Boolean recursive) {\n        if (filePath == null || !filePath.exists()) {\n            return new ArrayList<File>();\n        }\n        Iterator<File> files = null;\n\n        if (recursive.booleanValue()) {\n            files = FileUtils.iterateFiles(filePath, TrueFileFilter.INSTANCE, TrueFileFilter.INSTANCE);\n        } else {\n            files = FileUtils.iterateFiles(filePath, TrueFileFilter.INSTANCE, null);\n        }\n\n        Collection<File> result = new ArrayList<File>();\n        Date date = new Date();\n        while (files.hasNext()) {\n            File file = files.next();\n\n            if (file.lastModified() < date.getTime() - age.longValue()) {\n                result.add(file);\n                log.trace(new StringBuilder(\"Added \").append(file.getPath()).append(\" to \\\"old files list\\\".\").toString());\n            }\n        }\n\n        return result;\n    }", "signature": "Collection<File> getFilesOlderThan(File filePath, Long age, Boolean recursive)", "full_signature": "static Collection<File> getFilesOlderThan(File filePath, Long age, Boolean recursive)", "class_method_signature": "FileHelper.getFilesOlderThan(File filePath, Long age, Boolean recursive)", "testcase": false, "constructor": false, "invocations": ["exists", "booleanValue", "iterateFiles", "iterateFiles", "hasNext", "next", "lastModified", "getTime", "longValue", "add", "trace", "toString", "append", "append", "getPath"]}, "repository": {"repo_id": 11799031, "url": "https://github.com/USGS-CIDA/geo-data-portal", "language": "Java", "is_fork": false, "fork_count": 21, "stargazer_count": 9, "size": 178468, "license": "licensed"}}