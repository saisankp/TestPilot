{"test_class": {"identifier": "TestLuceneDocumentIndexService", "superclass": "", "interfaces": "", "fields": [{"original_string": "public long serviceCount = 10;", "modifier": "public", "type": "long", "declarator": "serviceCount = 10", "var_name": "serviceCount"}, {"original_string": "public int updateCount = 10;", "modifier": "public", "type": "int", "declarator": "updateCount = 10", "var_name": "updateCount"}, {"original_string": "public int updatesPerQuery = 10;", "modifier": "public", "type": "int", "declarator": "updatesPerQuery = 10", "var_name": "updatesPerQuery"}, {"original_string": "public int documentCountAtStart = 10;", "modifier": "public", "type": "int", "declarator": "documentCountAtStart = 10", "var_name": "documentCountAtStart"}, {"original_string": "public int iterationCount = 1;", "modifier": "public", "type": "int", "declarator": "iterationCount = 1", "var_name": "iterationCount"}, {"original_string": "public long serviceCacheClearIntervalSeconds = 0;", "modifier": "public", "type": "long", "declarator": "serviceCacheClearIntervalSeconds = 0", "var_name": "serviceCacheClearIntervalSeconds"}, {"original_string": "public int authUserCount = Utils.DEFAULT_THREAD_COUNT;", "modifier": "public", "type": "int", "declarator": "authUserCount = Utils.DEFAULT_THREAD_COUNT", "var_name": "authUserCount"}, {"original_string": "public long testDurationSeconds;", "modifier": "public", "type": "long", "declarator": "testDurationSeconds", "var_name": "testDurationSeconds"}, {"original_string": "public Long retentionLimit = MinimalTestService.DEFAULT_VERSION_RETENTION_LIMIT;", "modifier": "public", "type": "Long", "declarator": "retentionLimit = MinimalTestService.DEFAULT_VERSION_RETENTION_LIMIT", "var_name": "retentionLimit"}, {"original_string": "public Long retentionFloor = MinimalTestService.DEFAULT_VERSION_RETENTION_FLOOR;", "modifier": "public", "type": "Long", "declarator": "retentionFloor = MinimalTestService.DEFAULT_VERSION_RETENTION_FLOOR", "var_name": "retentionFloor"}, {"original_string": "public boolean enableInstrumentation = false;", "modifier": "public", "type": "boolean", "declarator": "enableInstrumentation = false", "var_name": "enableInstrumentation"}, {"original_string": "public Integer expirationSeconds = null;", "modifier": "public", "type": "Integer", "declarator": "expirationSeconds = null", "var_name": "expirationSeconds"}, {"original_string": "private final String EXAMPLES_BODIES_FILE = \"example_bodies.json\";", "modifier": "private final", "type": "String", "declarator": "EXAMPLES_BODIES_FILE = \"example_bodies.json\"", "var_name": "EXAMPLES_BODIES_FILE"}, {"original_string": "private final String INDEX_DIR_NAME = \"lucene650\";", "modifier": "private final", "type": "String", "declarator": "INDEX_DIR_NAME = \"lucene650\"", "var_name": "INDEX_DIR_NAME"}, {"original_string": "private FaultInjectionLuceneDocumentIndexService indexService;", "modifier": "private", "type": "FaultInjectionLuceneDocumentIndexService", "declarator": "indexService", "var_name": "indexService"}, {"original_string": "private VerificationHost host;", "modifier": "private", "type": "VerificationHost", "declarator": "host", "var_name": "host"}, {"original_string": "@Rule\n    public TestResults testResults = new TestResults();", "modifier": "@Rule\n    public", "type": "TestResults", "declarator": "testResults = new TestResults()", "var_name": "testResults"}, {"original_string": "private String indexLink = ServiceUriPaths.CORE_DOCUMENT_INDEX;", "modifier": "private", "type": "String", "declarator": "indexLink = ServiceUriPaths.CORE_DOCUMENT_INDEX", "var_name": "indexLink"}, {"original_string": "private URI inMemoryIndexServiceUri;", "modifier": "private", "type": "URI", "declarator": "inMemoryIndexServiceUri", "var_name": "inMemoryIndexServiceUri"}], "file": "xenon-common/src/test/java/com/vmware/xenon/services/common/TestLuceneDocumentIndexService.java"}, "test_case": {"identifier": "throughputPostWithExpirationLongRunning", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void throughputPostWithExpirationLongRunning() throws Throwable {\n        if (this.serviceCacheClearIntervalSeconds == 0) {\n            // effectively disable ODL stop/start behavior while running throughput tests\n            this.serviceCacheClearIntervalSeconds = TimeUnit.MICROSECONDS.toSeconds(\n                    ServiceHostState.DEFAULT_OPERATION_TIMEOUT_MICROS);\n        }\n\n        // This code path is designed to simulate POST and query throughput under heavy load,\n        // processing queries which match many results.\n        QueryTask queryTask = QueryTask.Builder.createDirectTask()\n                .setQuery(QueryTask.Query.Builder.create()\n                        .addKindFieldClause(ExampleServiceState.class)\n                        .build())\n                .build();\n\n        setUpHost(false);\n\n        // Set the document expiration limit to something low enough that document expiration will\n        // be forced to run in batches.\n        LuceneDocumentIndexService.setExpiredDocumentSearchThreshold(10);\n\n        URI factoryUri = createImmutableFactoryService(this.host);\n        this.indexService.toggleOption(ServiceOption.INSTRUMENTATION, true);\n        this.host.log(\"Starting throughout POST, expiration: %d\", this.expirationSeconds);\n\n        Long expirationMicros = null;\n        if (this.expirationSeconds != null) {\n            expirationMicros = TimeUnit.SECONDS.toMicros(this.expirationSeconds);\n        }\n\n        long testExpiration = Utils.getSystemNowMicrosUtc()\n                + TimeUnit.SECONDS.toMicros(this.testDurationSeconds);\n        do {\n            this.host.log(\"Starting POST test to %s, count:%d\", factoryUri, this.serviceCount);\n            doThroughputPost(true, factoryUri, expirationMicros, queryTask);\n            Map<String, ServiceStat> stats = this.host.getServiceStats(\n                    this.host.getDocumentIndexServiceUri());\n            ServiceStat expiredDocumentStat = stats.get(\n                    LuceneDocumentIndexService.STAT_NAME_DOCUMENT_EXPIRATION_COUNT\n                            + ServiceStats.STAT_NAME_SUFFIX_PER_DAY);\n            if (expiredDocumentStat != null) {\n                this.host.log(\"Expired documents: %f\", expiredDocumentStat.latestValue);\n            }\n\n        } while (this.testDurationSeconds > 0 && Utils.getSystemNowMicrosUtc() < testExpiration);\n\n        Map<String, ServiceStat> indexServiceStats = this.host.getServiceStats(\n                this.host.getDocumentIndexServiceUri());\n        logServiceStatHistogram(indexServiceStats,\n                LuceneDocumentIndexService.STAT_NAME_COMMIT_DURATION_MICROS);\n        logServiceStatHistogram(indexServiceStats,\n                LuceneDocumentIndexService.STAT_NAME_MAINTENANCE_DOCUMENT_EXPIRATION_DURATION_MICROS);\n        logServiceStatHistogram(indexServiceStats,\n                LuceneDocumentIndexService.STAT_NAME_QUERY_DURATION_MICROS);\n        logServiceStatHistogram(indexServiceStats,\n                LuceneDocumentIndexService.STAT_NAME_RESULT_PROCESSING_DURATION_MICROS);\n    }", "signature": "void throughputPostWithExpirationLongRunning()", "full_signature": "@Test public void throughputPostWithExpirationLongRunning()", "class_method_signature": "TestLuceneDocumentIndexService.throughputPostWithExpirationLongRunning()", "testcase": true, "constructor": false, "invocations": ["toSeconds", "build", "setQuery", "createDirectTask", "build", "addKindFieldClause", "create", "setUpHost", "setExpiredDocumentSearchThreshold", "createImmutableFactoryService", "toggleOption", "log", "toMicros", "getSystemNowMicrosUtc", "toMicros", "log", "doThroughputPost", "getServiceStats", "getDocumentIndexServiceUri", "get", "log", "getSystemNowMicrosUtc", "getServiceStats", "getDocumentIndexServiceUri", "logServiceStatHistogram", "logServiceStatHistogram", "logServiceStatHistogram", "logServiceStatHistogram"]}, "focal_class": {"identifier": "LuceneDocumentIndexService", "superclass": "extends StatelessService", "interfaces": "", "fields": [{"original_string": "public static final String SELF_LINK = ServiceUriPaths.CORE_DOCUMENT_INDEX;", "modifier": "public static final", "type": "String", "declarator": "SELF_LINK = ServiceUriPaths.CORE_DOCUMENT_INDEX", "var_name": "SELF_LINK"}, {"original_string": "public static final int QUERY_THREAD_COUNT = XenonConfiguration.integer(\n            LuceneDocumentIndexService.class,\n            \"QUERY_THREAD_COUNT\",\n            Utils.DEFAULT_THREAD_COUNT * 2\n    );", "modifier": "public static final", "type": "int", "declarator": "QUERY_THREAD_COUNT = XenonConfiguration.integer(\n            LuceneDocumentIndexService.class,\n            \"QUERY_THREAD_COUNT\",\n            Utils.DEFAULT_THREAD_COUNT * 2\n    )", "var_name": "QUERY_THREAD_COUNT"}, {"original_string": "public static final int UPDATE_THREAD_COUNT = XenonConfiguration.integer(\n            LuceneDocumentIndexService.class,\n            \"UPDATE_THREAD_COUNT\",\n            Utils.DEFAULT_THREAD_COUNT / 2\n    );", "modifier": "public static final", "type": "int", "declarator": "UPDATE_THREAD_COUNT = XenonConfiguration.integer(\n            LuceneDocumentIndexService.class,\n            \"UPDATE_THREAD_COUNT\",\n            Utils.DEFAULT_THREAD_COUNT / 2\n    )", "var_name": "UPDATE_THREAD_COUNT"}, {"original_string": "public static final int QUERY_QUEUE_DEPTH = XenonConfiguration.integer(\n            LuceneDocumentIndexService.class,\n            \"queryQueueDepth\",\n            10 * Service.OPERATION_QUEUE_DEFAULT_LIMIT\n    );", "modifier": "public static final", "type": "int", "declarator": "QUERY_QUEUE_DEPTH = XenonConfiguration.integer(\n            LuceneDocumentIndexService.class,\n            \"queryQueueDepth\",\n            10 * Service.OPERATION_QUEUE_DEFAULT_LIMIT\n    )", "var_name": "QUERY_QUEUE_DEPTH"}, {"original_string": "public static final int UPDATE_QUEUE_DEPTH = XenonConfiguration.integer(\n            LuceneDocumentIndexService.class,\n            \"updateQueueDepth\",\n            10 * Service.OPERATION_QUEUE_DEFAULT_LIMIT\n    );", "modifier": "public static final", "type": "int", "declarator": "UPDATE_QUEUE_DEPTH = XenonConfiguration.integer(\n            LuceneDocumentIndexService.class,\n            \"updateQueueDepth\",\n            10 * Service.OPERATION_QUEUE_DEFAULT_LIMIT\n    )", "var_name": "UPDATE_QUEUE_DEPTH"}, {"original_string": "public static final String FILE_PATH_LUCENE = \"lucene\";", "modifier": "public static final", "type": "String", "declarator": "FILE_PATH_LUCENE = \"lucene\"", "var_name": "FILE_PATH_LUCENE"}, {"original_string": "public static final int DEFAULT_INDEX_FILE_COUNT_THRESHOLD_FOR_WRITER_REFRESH = 10000;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_INDEX_FILE_COUNT_THRESHOLD_FOR_WRITER_REFRESH = 10000", "var_name": "DEFAULT_INDEX_FILE_COUNT_THRESHOLD_FOR_WRITER_REFRESH"}, {"original_string": "public static final int DEFAULT_INDEX_SEARCHER_COUNT_THRESHOLD = 200;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_INDEX_SEARCHER_COUNT_THRESHOLD = 200", "var_name": "DEFAULT_INDEX_SEARCHER_COUNT_THRESHOLD"}, {"original_string": "public static final int MIN_QUERY_RESULT_LIMIT = 1000;", "modifier": "public static final", "type": "int", "declarator": "MIN_QUERY_RESULT_LIMIT = 1000", "var_name": "MIN_QUERY_RESULT_LIMIT"}, {"original_string": "public static final int DEFAULT_QUERY_RESULT_LIMIT = 10000;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_QUERY_RESULT_LIMIT = 10000", "var_name": "DEFAULT_QUERY_RESULT_LIMIT"}, {"original_string": "public static final int DEFAULT_QUERY_PAGE_RESULT_LIMIT = 10000;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_QUERY_PAGE_RESULT_LIMIT = 10000", "var_name": "DEFAULT_QUERY_PAGE_RESULT_LIMIT"}, {"original_string": "public static final int DEFAULT_EXPIRED_DOCUMENT_SEARCH_THRESHOLD = 10000;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_EXPIRED_DOCUMENT_SEARCH_THRESHOLD = 10000", "var_name": "DEFAULT_EXPIRED_DOCUMENT_SEARCH_THRESHOLD"}, {"original_string": "public static final int DEFAULT_METADATA_UPDATE_MAX_QUEUE_DEPTH = 10000;", "modifier": "public static final", "type": "int", "declarator": "DEFAULT_METADATA_UPDATE_MAX_QUEUE_DEPTH = 10000", "var_name": "DEFAULT_METADATA_UPDATE_MAX_QUEUE_DEPTH"}, {"original_string": "public static final long DEFAULT_PAGINATED_SEARCHER_EXPIRATION_DELAY = TimeUnit.SECONDS.toMicros(1);", "modifier": "public static final", "type": "long", "declarator": "DEFAULT_PAGINATED_SEARCHER_EXPIRATION_DELAY = TimeUnit.SECONDS.toMicros(1)", "var_name": "DEFAULT_PAGINATED_SEARCHER_EXPIRATION_DELAY"}, {"original_string": "private static final String DOCUMENTS_WITHOUT_RESULTS = \"DocumentsWithoutResults\";", "modifier": "private static final", "type": "String", "declarator": "DOCUMENTS_WITHOUT_RESULTS = \"DocumentsWithoutResults\"", "var_name": "DOCUMENTS_WITHOUT_RESULTS"}, {"original_string": "private static final int SEARCHER_REUSE_MAX_ATTEMPTS = 50;", "modifier": "private static final", "type": "int", "declarator": "SEARCHER_REUSE_MAX_ATTEMPTS = 50", "var_name": "SEARCHER_REUSE_MAX_ATTEMPTS"}, {"original_string": "protected String indexDirectory;", "modifier": "protected", "type": "String", "declarator": "indexDirectory", "var_name": "indexDirectory"}, {"original_string": "private static int expiredDocumentSearchThreshold = 1000;", "modifier": "private static", "type": "int", "declarator": "expiredDocumentSearchThreshold = 1000", "var_name": "expiredDocumentSearchThreshold"}, {"original_string": "private static int indexFileCountThresholdForWriterRefresh = DEFAULT_INDEX_FILE_COUNT_THRESHOLD_FOR_WRITER_REFRESH;", "modifier": "private static", "type": "int", "declarator": "indexFileCountThresholdForWriterRefresh = DEFAULT_INDEX_FILE_COUNT_THRESHOLD_FOR_WRITER_REFRESH", "var_name": "indexFileCountThresholdForWriterRefresh"}, {"original_string": "private static int versionRetentionBulkCleanupThreshold = 10000;", "modifier": "private static", "type": "int", "declarator": "versionRetentionBulkCleanupThreshold = 10000", "var_name": "versionRetentionBulkCleanupThreshold"}, {"original_string": "private static int versionRetentionServiceThreshold = 100;", "modifier": "private static", "type": "int", "declarator": "versionRetentionServiceThreshold = 100", "var_name": "versionRetentionServiceThreshold"}, {"original_string": "private static int queryResultLimit = DEFAULT_QUERY_RESULT_LIMIT;", "modifier": "private static", "type": "int", "declarator": "queryResultLimit = DEFAULT_QUERY_RESULT_LIMIT", "var_name": "queryResultLimit"}, {"original_string": "private static int queryPageResultLimit = DEFAULT_QUERY_PAGE_RESULT_LIMIT;", "modifier": "private static", "type": "int", "declarator": "queryPageResultLimit = DEFAULT_QUERY_PAGE_RESULT_LIMIT", "var_name": "queryPageResultLimit"}, {"original_string": "private static long searcherRefreshIntervalMicros = 0;", "modifier": "private static", "type": "long", "declarator": "searcherRefreshIntervalMicros = 0", "var_name": "searcherRefreshIntervalMicros"}, {"original_string": "private static int metadataUpdateMaxQueueDepth = DEFAULT_METADATA_UPDATE_MAX_QUEUE_DEPTH;", "modifier": "private static", "type": "int", "declarator": "metadataUpdateMaxQueueDepth = DEFAULT_METADATA_UPDATE_MAX_QUEUE_DEPTH", "var_name": "metadataUpdateMaxQueueDepth"}, {"original_string": "private final Runnable queryTaskHandler = this::handleQueryRequest;", "modifier": "private final", "type": "Runnable", "declarator": "queryTaskHandler = this::handleQueryRequest", "var_name": "queryTaskHandler"}, {"original_string": "private final Runnable updateRequestHandler = this::handleUpdateRequest;", "modifier": "private final", "type": "Runnable", "declarator": "updateRequestHandler = this::handleUpdateRequest", "var_name": "updateRequestHandler"}, {"original_string": "static final String LUCENE_FIELD_NAME_BINARY_SERIALIZED_STATE = \"binarySerializedState\";", "modifier": "static final", "type": "String", "declarator": "LUCENE_FIELD_NAME_BINARY_SERIALIZED_STATE = \"binarySerializedState\"", "var_name": "LUCENE_FIELD_NAME_BINARY_SERIALIZED_STATE"}, {"original_string": "static final String LUCENE_FIELD_NAME_JSON_SERIALIZED_STATE = \"jsonSerializedState\";", "modifier": "static final", "type": "String", "declarator": "LUCENE_FIELD_NAME_JSON_SERIALIZED_STATE = \"jsonSerializedState\"", "var_name": "LUCENE_FIELD_NAME_JSON_SERIALIZED_STATE"}, {"original_string": "public static final String STAT_NAME_ACTIVE_QUERY_FILTERS = \"activeQueryFilterCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_ACTIVE_QUERY_FILTERS = \"activeQueryFilterCount\"", "var_name": "STAT_NAME_ACTIVE_QUERY_FILTERS"}, {"original_string": "public static final String STAT_NAME_ACTIVE_PAGINATED_QUERIES = \"activePaginatedQueryCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_ACTIVE_PAGINATED_QUERIES = \"activePaginatedQueryCount\"", "var_name": "STAT_NAME_ACTIVE_PAGINATED_QUERIES"}, {"original_string": "public static final String STAT_NAME_COMMIT_COUNT = \"commitCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_COMMIT_COUNT = \"commitCount\"", "var_name": "STAT_NAME_COMMIT_COUNT"}, {"original_string": "public static final String STAT_NAME_INDEX_LOAD_RETRY_COUNT = \"indexLoadRetryCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_INDEX_LOAD_RETRY_COUNT = \"indexLoadRetryCount\"", "var_name": "STAT_NAME_INDEX_LOAD_RETRY_COUNT"}, {"original_string": "public static final String STAT_NAME_COMMIT_DURATION_MICROS = \"commitDurationMicros\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_COMMIT_DURATION_MICROS = \"commitDurationMicros\"", "var_name": "STAT_NAME_COMMIT_DURATION_MICROS"}, {"original_string": "public static final String STAT_NAME_GROUP_QUERY_COUNT = \"groupQueryCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_GROUP_QUERY_COUNT = \"groupQueryCount\"", "var_name": "STAT_NAME_GROUP_QUERY_COUNT"}, {"original_string": "public static final String STAT_NAME_QUERY_DURATION_MICROS = \"queryDurationMicros\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_QUERY_DURATION_MICROS = \"queryDurationMicros\"", "var_name": "STAT_NAME_QUERY_DURATION_MICROS"}, {"original_string": "public static final String STAT_NAME_GROUP_QUERY_DURATION_MICROS = \"groupQueryDurationMicros\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_GROUP_QUERY_DURATION_MICROS = \"groupQueryDurationMicros\"", "var_name": "STAT_NAME_GROUP_QUERY_DURATION_MICROS"}, {"original_string": "public static final String STAT_NAME_QUERY_SINGLE_DURATION_MICROS = \"querySingleDurationMicros\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_QUERY_SINGLE_DURATION_MICROS = \"querySingleDurationMicros\"", "var_name": "STAT_NAME_QUERY_SINGLE_DURATION_MICROS"}, {"original_string": "public static final String STAT_NAME_QUERY_ALL_VERSIONS_DURATION_MICROS = \"queryAllVersionsDurationMicros\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_QUERY_ALL_VERSIONS_DURATION_MICROS = \"queryAllVersionsDurationMicros\"", "var_name": "STAT_NAME_QUERY_ALL_VERSIONS_DURATION_MICROS"}, {"original_string": "public static final String STAT_NAME_RESULT_PROCESSING_DURATION_MICROS = \"resultProcessingDurationMicros\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_RESULT_PROCESSING_DURATION_MICROS = \"resultProcessingDurationMicros\"", "var_name": "STAT_NAME_RESULT_PROCESSING_DURATION_MICROS"}, {"original_string": "public static final String STAT_NAME_INDEXED_FIELD_COUNT = \"indexedFieldCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_INDEXED_FIELD_COUNT = \"indexedFieldCount\"", "var_name": "STAT_NAME_INDEXED_FIELD_COUNT"}, {"original_string": "public static final String STAT_NAME_INDEXED_DOCUMENT_COUNT = \"indexedDocumentCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_INDEXED_DOCUMENT_COUNT = \"indexedDocumentCount\"", "var_name": "STAT_NAME_INDEXED_DOCUMENT_COUNT"}, {"original_string": "public static final String STAT_NAME_FORCED_UPDATE_DOCUMENT_DELETE_COUNT = \"singleVersionDocumentDeleteCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_FORCED_UPDATE_DOCUMENT_DELETE_COUNT = \"singleVersionDocumentDeleteCount\"", "var_name": "STAT_NAME_FORCED_UPDATE_DOCUMENT_DELETE_COUNT"}, {"original_string": "public static final String STAT_NAME_FIELD_COUNT_PER_DOCUMENT = \"fieldCountPerDocument\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_FIELD_COUNT_PER_DOCUMENT = \"fieldCountPerDocument\"", "var_name": "STAT_NAME_FIELD_COUNT_PER_DOCUMENT"}, {"original_string": "public static final String STAT_NAME_INDEXING_DURATION_MICROS = \"indexingDurationMicros\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_INDEXING_DURATION_MICROS = \"indexingDurationMicros\"", "var_name": "STAT_NAME_INDEXING_DURATION_MICROS"}, {"original_string": "public static final String STAT_NAME_SEARCHER_UPDATE_COUNT = \"indexSearcherUpdateCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_SEARCHER_UPDATE_COUNT = \"indexSearcherUpdateCount\"", "var_name": "STAT_NAME_SEARCHER_UPDATE_COUNT"}, {"original_string": "public static final String STAT_NAME_SEARCHER_REUSE_BY_DOCUMENT_KIND_COUNT = \"indexSearcherReuseByDocumentKindCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_SEARCHER_REUSE_BY_DOCUMENT_KIND_COUNT = \"indexSearcherReuseByDocumentKindCount\"", "var_name": "STAT_NAME_SEARCHER_REUSE_BY_DOCUMENT_KIND_COUNT"}, {"original_string": "public static final String STAT_NAME_PAGINATED_SEARCHER_UPDATE_COUNT = \"paginatedIndexSearcherUpdateCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_PAGINATED_SEARCHER_UPDATE_COUNT = \"paginatedIndexSearcherUpdateCount\"", "var_name": "STAT_NAME_PAGINATED_SEARCHER_UPDATE_COUNT"}, {"original_string": "public static final String STAT_NAME_PAGINATED_SEARCHER_FORCE_DELETION_COUNT = \"paginatedIndexSearcherForceDeletionCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_PAGINATED_SEARCHER_FORCE_DELETION_COUNT = \"paginatedIndexSearcherForceDeletionCount\"", "var_name": "STAT_NAME_PAGINATED_SEARCHER_FORCE_DELETION_COUNT"}, {"original_string": "public static final String STAT_NAME_WRITER_ALREADY_CLOSED_EXCEPTION_COUNT = \"indexWriterAlreadyClosedFailureCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_WRITER_ALREADY_CLOSED_EXCEPTION_COUNT = \"indexWriterAlreadyClosedFailureCount\"", "var_name": "STAT_NAME_WRITER_ALREADY_CLOSED_EXCEPTION_COUNT"}, {"original_string": "public static final String STAT_NAME_READER_ALREADY_CLOSED_EXCEPTION_COUNT = \"indexReaderAlreadyClosedFailureCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_READER_ALREADY_CLOSED_EXCEPTION_COUNT = \"indexReaderAlreadyClosedFailureCount\"", "var_name": "STAT_NAME_READER_ALREADY_CLOSED_EXCEPTION_COUNT"}, {"original_string": "public static final String STAT_NAME_SERVICE_DELETE_COUNT = \"serviceDeleteCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_SERVICE_DELETE_COUNT = \"serviceDeleteCount\"", "var_name": "STAT_NAME_SERVICE_DELETE_COUNT"}, {"original_string": "public static final String STAT_NAME_DOCUMENT_EXPIRATION_COUNT = \"expiredDocumentCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_DOCUMENT_EXPIRATION_COUNT = \"expiredDocumentCount\"", "var_name": "STAT_NAME_DOCUMENT_EXPIRATION_COUNT"}, {"original_string": "public static final String STAT_NAME_DOCUMENT_EXPIRATION_FORCED_MAINTENANCE_COUNT = \"expiredDocumentForcedMaintenanceCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_DOCUMENT_EXPIRATION_FORCED_MAINTENANCE_COUNT = \"expiredDocumentForcedMaintenanceCount\"", "var_name": "STAT_NAME_DOCUMENT_EXPIRATION_FORCED_MAINTENANCE_COUNT"}, {"original_string": "public static final String STAT_NAME_METADATA_INDEXING_UPDATE_COUNT = \"metadataIndexingUpdateCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_METADATA_INDEXING_UPDATE_COUNT = \"metadataIndexingUpdateCount\"", "var_name": "STAT_NAME_METADATA_INDEXING_UPDATE_COUNT"}, {"original_string": "public static final String STAT_NAME_VERSION_CACHE_LOOKUP_COUNT = \"versionCacheLookupCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_VERSION_CACHE_LOOKUP_COUNT = \"versionCacheLookupCount\"", "var_name": "STAT_NAME_VERSION_CACHE_LOOKUP_COUNT"}, {"original_string": "public static final String STAT_NAME_VERSION_CACHE_MISS_COUNT = \"versionCacheMissCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_VERSION_CACHE_MISS_COUNT = \"versionCacheMissCount\"", "var_name": "STAT_NAME_VERSION_CACHE_MISS_COUNT"}, {"original_string": "public static final String STAT_NAME_VERSION_CACHE_ENTRY_COUNT = \"versionCacheEntryCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_VERSION_CACHE_ENTRY_COUNT = \"versionCacheEntryCount\"", "var_name": "STAT_NAME_VERSION_CACHE_ENTRY_COUNT"}, {"original_string": "public static final String STAT_NAME_MAINTENANCE_SEARCHER_REFRESH_DURATION_MICROS =\n            \"maintenanceSearcherRefreshDurationMicros\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_MAINTENANCE_SEARCHER_REFRESH_DURATION_MICROS =\n            \"maintenanceSearcherRefreshDurationMicros\"", "var_name": "STAT_NAME_MAINTENANCE_SEARCHER_REFRESH_DURATION_MICROS"}, {"original_string": "public static final String STAT_NAME_MAINTENANCE_DOCUMENT_EXPIRATION_DURATION_MICROS =\n            \"maintenanceDocumentExpirationDurationMicros\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_MAINTENANCE_DOCUMENT_EXPIRATION_DURATION_MICROS =\n            \"maintenanceDocumentExpirationDurationMicros\"", "var_name": "STAT_NAME_MAINTENANCE_DOCUMENT_EXPIRATION_DURATION_MICROS"}, {"original_string": "public static final String STAT_NAME_MAINTENANCE_VERSION_RETENTION_DURATION_MICROS =\n            \"maintenanceVersionRetentionDurationMicros\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_MAINTENANCE_VERSION_RETENTION_DURATION_MICROS =\n            \"maintenanceVersionRetentionDurationMicros\"", "var_name": "STAT_NAME_MAINTENANCE_VERSION_RETENTION_DURATION_MICROS"}, {"original_string": "public static final String STAT_NAME_MAINTENANCE_METADATA_INDEXING_DURATION_MICROS =\n            \"maintenanceMetadataIndexingDurationMicros\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_MAINTENANCE_METADATA_INDEXING_DURATION_MICROS =\n            \"maintenanceMetadataIndexingDurationMicros\"", "var_name": "STAT_NAME_MAINTENANCE_METADATA_INDEXING_DURATION_MICROS"}, {"original_string": "public static final String STAT_NAME_DOCUMENT_KIND_QUERY_COUNT_FORMAT = \"documentKindQueryCount-%s\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_DOCUMENT_KIND_QUERY_COUNT_FORMAT = \"documentKindQueryCount-%s\"", "var_name": "STAT_NAME_DOCUMENT_KIND_QUERY_COUNT_FORMAT"}, {"original_string": "public static final String STAT_NAME_NON_DOCUMENT_KIND_QUERY_COUNT = \"nonDocumentKindQueryCount\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_NON_DOCUMENT_KIND_QUERY_COUNT = \"nonDocumentKindQueryCount\"", "var_name": "STAT_NAME_NON_DOCUMENT_KIND_QUERY_COUNT"}, {"original_string": "public static final String STAT_NAME_SINGLE_QUERY_BY_FACTORY_COUNT_FORMAT = \"singleQueryByFactoryCount-%s\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_SINGLE_QUERY_BY_FACTORY_COUNT_FORMAT = \"singleQueryByFactoryCount-%s\"", "var_name": "STAT_NAME_SINGLE_QUERY_BY_FACTORY_COUNT_FORMAT"}, {"original_string": "public static final String STAT_NAME_PREFIX_UPDATE_QUEUE_DEPTH = \"updateQueueDepth\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_PREFIX_UPDATE_QUEUE_DEPTH = \"updateQueueDepth\"", "var_name": "STAT_NAME_PREFIX_UPDATE_QUEUE_DEPTH"}, {"original_string": "public static final String STAT_NAME_FORMAT_UPDATE_QUEUE_DEPTH = STAT_NAME_PREFIX_UPDATE_QUEUE_DEPTH + \"-%s\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_FORMAT_UPDATE_QUEUE_DEPTH = STAT_NAME_PREFIX_UPDATE_QUEUE_DEPTH + \"-%s\"", "var_name": "STAT_NAME_FORMAT_UPDATE_QUEUE_DEPTH"}, {"original_string": "public static final String STAT_NAME_PREFIX_QUERY_QUEUE_DEPTH = \"queryQueueDepth\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_PREFIX_QUERY_QUEUE_DEPTH = \"queryQueueDepth\"", "var_name": "STAT_NAME_PREFIX_QUERY_QUEUE_DEPTH"}, {"original_string": "public static final String STAT_NAME_FORMAT_QUERY_QUEUE_DEPTH = STAT_NAME_PREFIX_QUERY_QUEUE_DEPTH + \"-%s\";", "modifier": "public static final", "type": "String", "declarator": "STAT_NAME_FORMAT_QUERY_QUEUE_DEPTH = STAT_NAME_PREFIX_QUERY_QUEUE_DEPTH + \"-%s\"", "var_name": "STAT_NAME_FORMAT_QUERY_QUEUE_DEPTH"}, {"original_string": "private static final String STAT_NAME_MAINTENANCE_MEMORY_LIMIT_DURATION_MICROS =\n            \"maintenanceMemoryLimitDurationMicros\";", "modifier": "private static final", "type": "String", "declarator": "STAT_NAME_MAINTENANCE_MEMORY_LIMIT_DURATION_MICROS =\n            \"maintenanceMemoryLimitDurationMicros\"", "var_name": "STAT_NAME_MAINTENANCE_MEMORY_LIMIT_DURATION_MICROS"}, {"original_string": "private static final String STAT_NAME_MAINTENANCE_FILE_LIMIT_REFRESH_DURATION_MICROS =\n            \"maintenanceFileLimitRefreshDurationMicros\";", "modifier": "private static final", "type": "String", "declarator": "STAT_NAME_MAINTENANCE_FILE_LIMIT_REFRESH_DURATION_MICROS =\n            \"maintenanceFileLimitRefreshDurationMicros\"", "var_name": "STAT_NAME_MAINTENANCE_FILE_LIMIT_REFRESH_DURATION_MICROS"}, {"original_string": "static final String STAT_NAME_VERSION_RETENTION_SERVICE_COUNT = \"versionRetentionServiceCount\";", "modifier": "static final", "type": "String", "declarator": "STAT_NAME_VERSION_RETENTION_SERVICE_COUNT = \"versionRetentionServiceCount\"", "var_name": "STAT_NAME_VERSION_RETENTION_SERVICE_COUNT"}, {"original_string": "static final String STAT_NAME_ITERATIONS_PER_QUERY = \"iterationsPerQuery\";", "modifier": "static final", "type": "String", "declarator": "STAT_NAME_ITERATIONS_PER_QUERY = \"iterationsPerQuery\"", "var_name": "STAT_NAME_ITERATIONS_PER_QUERY"}, {"original_string": "private static final EnumSet<AggregationType> AGGREGATION_TYPE_AVG_MAX =\n            EnumSet.of(AggregationType.AVG, AggregationType.MAX);", "modifier": "private static final", "type": "EnumSet<AggregationType>", "declarator": "AGGREGATION_TYPE_AVG_MAX =\n            EnumSet.of(AggregationType.AVG, AggregationType.MAX)", "var_name": "AGGREGATION_TYPE_AVG_MAX"}, {"original_string": "private static final EnumSet<AggregationType> AGGREGATION_TYPE_SUM = EnumSet.of(AggregationType.SUM);", "modifier": "private static final", "type": "EnumSet<AggregationType>", "declarator": "AGGREGATION_TYPE_SUM = EnumSet.of(AggregationType.SUM)", "var_name": "AGGREGATION_TYPE_SUM"}, {"original_string": "protected final Object searchSync = new Object();", "modifier": "protected final", "type": "Object", "declarator": "searchSync = new Object()", "var_name": "searchSync"}, {"original_string": "private final Object metadataUpdateSync = new Object();", "modifier": "private final", "type": "Object", "declarator": "metadataUpdateSync = new Object()", "var_name": "metadataUpdateSync"}, {"original_string": "protected final Semaphore writerSync = new Semaphore(\n            UPDATE_THREAD_COUNT + QUERY_THREAD_COUNT);", "modifier": "protected final", "type": "Semaphore", "declarator": "writerSync = new Semaphore(\n            UPDATE_THREAD_COUNT + QUERY_THREAD_COUNT)", "var_name": "writerSync"}, {"original_string": "protected Map<Long, IndexSearcher> searchers = new HashMap<>();", "modifier": "protected", "type": "Map<Long, IndexSearcher>", "declarator": "searchers = new HashMap<>()", "var_name": "searchers"}, {"original_string": "private ThreadLocal<LuceneIndexDocumentHelper> indexDocumentHelper = ThreadLocal\n            .withInitial(LuceneIndexDocumentHelper::new);", "modifier": "private", "type": "ThreadLocal<LuceneIndexDocumentHelper>", "declarator": "indexDocumentHelper = ThreadLocal\n            .withInitial(LuceneIndexDocumentHelper::new)", "var_name": "indexDocumentHelper"}, {"original_string": "protected Map<Integer, Long> searcherUpdateTimesMicros = new ConcurrentHashMap<>();", "modifier": "protected", "type": "Map<Integer, Long>", "declarator": "searcherUpdateTimesMicros = new ConcurrentHashMap<>()", "var_name": "searcherUpdateTimesMicros"}, {"original_string": "protected PaginatedSearcherManager paginatedSearcherManager = new PaginatedSearcherManager();", "modifier": "protected", "type": "PaginatedSearcherManager", "declarator": "paginatedSearcherManager = new PaginatedSearcherManager()", "var_name": "paginatedSearcherManager"}, {"original_string": "protected IndexWriter writer = null;", "modifier": "protected", "type": "IndexWriter", "declarator": "writer = null", "var_name": "writer"}, {"original_string": "protected Map<String, QueryTask> activeQueries = new ConcurrentHashMap<>();", "modifier": "protected", "type": "Map<String, QueryTask>", "declarator": "activeQueries = new ConcurrentHashMap<>()", "var_name": "activeQueries"}, {"original_string": "private long writerUpdateTimeMicros;", "modifier": "private", "type": "long", "declarator": "writerUpdateTimeMicros", "var_name": "writerUpdateTimeMicros"}, {"original_string": "private long writerCreationTimeMicros;", "modifier": "private", "type": "long", "declarator": "writerCreationTimeMicros", "var_name": "writerCreationTimeMicros"}, {"original_string": "private long serviceRemovalDetectedTimeMicros;", "modifier": "private", "type": "long", "declarator": "serviceRemovalDetectedTimeMicros", "var_name": "serviceRemovalDetectedTimeMicros"}, {"original_string": "private final Map<String, DocumentUpdateInfo> updatesPerLink = new HashMap<>();", "modifier": "private final", "type": "Map<String, DocumentUpdateInfo>", "declarator": "updatesPerLink = new HashMap<>()", "var_name": "updatesPerLink"}, {"original_string": "private final Map<String, Long> liveVersionsPerLink = new HashMap<>();", "modifier": "private final", "type": "Map<String, Long>", "declarator": "liveVersionsPerLink = new HashMap<>()", "var_name": "liveVersionsPerLink"}, {"original_string": "private final Map<String, Long> immutableParentLinks = new HashMap<>();", "modifier": "private final", "type": "Map<String, Long>", "declarator": "immutableParentLinks = new HashMap<>()", "var_name": "immutableParentLinks"}, {"original_string": "private final Map<String, Long> documentKindUpdateInfo = new HashMap<>();", "modifier": "private final", "type": "Map<String, Long>", "declarator": "documentKindUpdateInfo = new HashMap<>()", "var_name": "documentKindUpdateInfo"}, {"original_string": "private final SortedSet<MetadataUpdateInfo> metadataUpdates =\n            new TreeSet<>(Comparator.comparingLong((info) -> info.updateTimeMicros));", "modifier": "private final", "type": "SortedSet<MetadataUpdateInfo>", "declarator": "metadataUpdates =\n            new TreeSet<>(Comparator.comparingLong((info) -> info.updateTimeMicros))", "var_name": "metadataUpdates"}, {"original_string": "private final Map<String, MetadataUpdateInfo> metadataUpdatesPerLink = new HashMap<>();", "modifier": "private final", "type": "Map<String, MetadataUpdateInfo>", "declarator": "metadataUpdatesPerLink = new HashMap<>()", "var_name": "metadataUpdatesPerLink"}, {"original_string": "long updateMapMemoryLimit;", "modifier": "", "type": "long", "declarator": "updateMapMemoryLimit", "var_name": "updateMapMemoryLimit"}, {"original_string": "private Sort versionSort;", "modifier": "private", "type": "Sort", "declarator": "versionSort", "var_name": "versionSort"}, {"original_string": "ExecutorService privateIndexingExecutor;", "modifier": "", "type": "ExecutorService", "declarator": "privateIndexingExecutor", "var_name": "privateIndexingExecutor"}, {"original_string": "ExecutorService privateQueryExecutor;", "modifier": "", "type": "ExecutorService", "declarator": "privateQueryExecutor", "var_name": "privateQueryExecutor"}, {"original_string": "private Set<String> fieldsToLoadIndexingIdLookup;", "modifier": "private", "type": "Set<String>", "declarator": "fieldsToLoadIndexingIdLookup", "var_name": "fieldsToLoadIndexingIdLookup"}, {"original_string": "private Set<String> fieldToLoadVersionLookup;", "modifier": "private", "type": "Set<String>", "declarator": "fieldToLoadVersionLookup", "var_name": "fieldToLoadVersionLookup"}, {"original_string": "private Set<String> fieldsToLoadNoExpand;", "modifier": "private", "type": "Set<String>", "declarator": "fieldsToLoadNoExpand", "var_name": "fieldsToLoadNoExpand"}, {"original_string": "private Set<String> fieldsToLoadWithExpand;", "modifier": "private", "type": "Set<String>", "declarator": "fieldsToLoadWithExpand", "var_name": "fieldsToLoadWithExpand"}, {"original_string": "private final RoundRobinOperationQueue queryQueue = new RoundRobinOperationQueue(\n            \"index-service-query\", QUERY_QUEUE_DEPTH);", "modifier": "private final", "type": "RoundRobinOperationQueue", "declarator": "queryQueue = new RoundRobinOperationQueue(\n            \"index-service-query\", QUERY_QUEUE_DEPTH)", "var_name": "queryQueue"}, {"original_string": "private final RoundRobinOperationQueue updateQueue = new RoundRobinOperationQueue(\n            \"index-service-update\", UPDATE_QUEUE_DEPTH);", "modifier": "private final", "type": "RoundRobinOperationQueue", "declarator": "updateQueue = new RoundRobinOperationQueue(\n            \"index-service-update\", UPDATE_QUEUE_DEPTH)", "var_name": "updateQueue"}, {"original_string": "private URI uri;", "modifier": "private", "type": "URI", "declarator": "uri", "var_name": "uri"}, {"original_string": "private FieldInfoCache fieldInfoCache;", "modifier": "private", "type": "FieldInfoCache", "declarator": "fieldInfoCache", "var_name": "fieldInfoCache"}], "methods": [{"identifier": "setImplicitQueryResultLimit", "parameters": "(int limit)", "modifiers": "public static", "return": "void", "signature": "void setImplicitQueryResultLimit(int limit)", "full_signature": "public static void setImplicitQueryResultLimit(int limit)", "class_method_signature": "LuceneDocumentIndexService.setImplicitQueryResultLimit(int limit)", "testcase": false, "constructor": false}, {"identifier": "getImplicitQueryResultLimit", "parameters": "()", "modifiers": "public static", "return": "int", "signature": "int getImplicitQueryResultLimit()", "full_signature": "public static int getImplicitQueryResultLimit()", "class_method_signature": "LuceneDocumentIndexService.getImplicitQueryResultLimit()", "testcase": false, "constructor": false}, {"identifier": "setImplicitQueryProcessingPageSize", "parameters": "(int limit)", "modifiers": "public static", "return": "void", "signature": "void setImplicitQueryProcessingPageSize(int limit)", "full_signature": "public static void setImplicitQueryProcessingPageSize(int limit)", "class_method_signature": "LuceneDocumentIndexService.setImplicitQueryProcessingPageSize(int limit)", "testcase": false, "constructor": false}, {"identifier": "getImplicitQueryProcessingPageSize", "parameters": "()", "modifiers": "public static", "return": "int", "signature": "int getImplicitQueryProcessingPageSize()", "full_signature": "public static int getImplicitQueryProcessingPageSize()", "class_method_signature": "LuceneDocumentIndexService.getImplicitQueryProcessingPageSize()", "testcase": false, "constructor": false}, {"identifier": "setIndexFileCountThresholdForWriterRefresh", "parameters": "(int count)", "modifiers": "public static", "return": "void", "signature": "void setIndexFileCountThresholdForWriterRefresh(int count)", "full_signature": "public static void setIndexFileCountThresholdForWriterRefresh(int count)", "class_method_signature": "LuceneDocumentIndexService.setIndexFileCountThresholdForWriterRefresh(int count)", "testcase": false, "constructor": false}, {"identifier": "getIndexFileCountThresholdForWriterRefresh", "parameters": "()", "modifiers": "public static", "return": "int", "signature": "int getIndexFileCountThresholdForWriterRefresh()", "full_signature": "public static int getIndexFileCountThresholdForWriterRefresh()", "class_method_signature": "LuceneDocumentIndexService.getIndexFileCountThresholdForWriterRefresh()", "testcase": false, "constructor": false}, {"identifier": "setExpiredDocumentSearchThreshold", "parameters": "(int count)", "modifiers": "public static", "return": "void", "signature": "void setExpiredDocumentSearchThreshold(int count)", "full_signature": "public static void setExpiredDocumentSearchThreshold(int count)", "class_method_signature": "LuceneDocumentIndexService.setExpiredDocumentSearchThreshold(int count)", "testcase": false, "constructor": false}, {"identifier": "getExpiredDocumentSearchThreshold", "parameters": "()", "modifiers": "public static", "return": "int", "signature": "int getExpiredDocumentSearchThreshold()", "full_signature": "public static int getExpiredDocumentSearchThreshold()", "class_method_signature": "LuceneDocumentIndexService.getExpiredDocumentSearchThreshold()", "testcase": false, "constructor": false}, {"identifier": "setVersionRetentionBulkCleanupThreshold", "parameters": "(int count)", "modifiers": "public static", "return": "void", "signature": "void setVersionRetentionBulkCleanupThreshold(int count)", "full_signature": "public static void setVersionRetentionBulkCleanupThreshold(int count)", "class_method_signature": "LuceneDocumentIndexService.setVersionRetentionBulkCleanupThreshold(int count)", "testcase": false, "constructor": false}, {"identifier": "getVersionRetentionBulkCleanupThreshold", "parameters": "()", "modifiers": "public static", "return": "int", "signature": "int getVersionRetentionBulkCleanupThreshold()", "full_signature": "public static int getVersionRetentionBulkCleanupThreshold()", "class_method_signature": "LuceneDocumentIndexService.getVersionRetentionBulkCleanupThreshold()", "testcase": false, "constructor": false}, {"identifier": "setVersionRetentionServiceThreshold", "parameters": "(int count)", "modifiers": "public static", "return": "void", "signature": "void setVersionRetentionServiceThreshold(int count)", "full_signature": "public static void setVersionRetentionServiceThreshold(int count)", "class_method_signature": "LuceneDocumentIndexService.setVersionRetentionServiceThreshold(int count)", "testcase": false, "constructor": false}, {"identifier": "getVersionRetentionServiceThreshold", "parameters": "()", "modifiers": "public static", "return": "int", "signature": "int getVersionRetentionServiceThreshold()", "full_signature": "public static int getVersionRetentionServiceThreshold()", "class_method_signature": "LuceneDocumentIndexService.getVersionRetentionServiceThreshold()", "testcase": false, "constructor": false}, {"identifier": "getSearcherRefreshIntervalMicros", "parameters": "()", "modifiers": "public static", "return": "long", "signature": "long getSearcherRefreshIntervalMicros()", "full_signature": "public static long getSearcherRefreshIntervalMicros()", "class_method_signature": "LuceneDocumentIndexService.getSearcherRefreshIntervalMicros()", "testcase": false, "constructor": false}, {"identifier": "setSearcherRefreshIntervalMicros", "parameters": "(long interval)", "modifiers": "public static", "return": "void", "signature": "void setSearcherRefreshIntervalMicros(long interval)", "full_signature": "public static void setSearcherRefreshIntervalMicros(long interval)", "class_method_signature": "LuceneDocumentIndexService.setSearcherRefreshIntervalMicros(long interval)", "testcase": false, "constructor": false}, {"identifier": "setMetadataUpdateMaxQueueDepth", "parameters": "(int depth)", "modifiers": "public static", "return": "void", "signature": "void setMetadataUpdateMaxQueueDepth(int depth)", "full_signature": "public static void setMetadataUpdateMaxQueueDepth(int depth)", "class_method_signature": "LuceneDocumentIndexService.setMetadataUpdateMaxQueueDepth(int depth)", "testcase": false, "constructor": false}, {"identifier": "getMetadataUpdateMaxQueueDepth", "parameters": "()", "modifiers": "public static", "return": "int", "signature": "int getMetadataUpdateMaxQueueDepth()", "full_signature": "public static int getMetadataUpdateMaxQueueDepth()", "class_method_signature": "LuceneDocumentIndexService.getMetadataUpdateMaxQueueDepth()", "testcase": false, "constructor": false}, {"identifier": "LuceneDocumentIndexService", "parameters": "()", "modifiers": "public", "return": "", "signature": " LuceneDocumentIndexService()", "full_signature": "public  LuceneDocumentIndexService()", "class_method_signature": "LuceneDocumentIndexService.LuceneDocumentIndexService()", "testcase": false, "constructor": true}, {"identifier": "LuceneDocumentIndexService", "parameters": "(String indexDirectory)", "modifiers": "public", "return": "", "signature": " LuceneDocumentIndexService(String indexDirectory)", "full_signature": "public  LuceneDocumentIndexService(String indexDirectory)", "class_method_signature": "LuceneDocumentIndexService.LuceneDocumentIndexService(String indexDirectory)", "testcase": false, "constructor": true}, {"identifier": "isDurable", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean isDurable()", "full_signature": "private boolean isDurable()", "class_method_signature": "LuceneDocumentIndexService.isDurable()", "testcase": false, "constructor": false}, {"identifier": "handleStart", "parameters": "(final Operation post)", "modifiers": "@Override public", "return": "void", "signature": "void handleStart(final Operation post)", "full_signature": "@Override public void handleStart(final Operation post)", "class_method_signature": "LuceneDocumentIndexService.handleStart(final Operation post)", "testcase": false, "constructor": false}, {"identifier": "initializeInstance", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initializeInstance()", "full_signature": "private void initializeInstance()", "class_method_signature": "LuceneDocumentIndexService.initializeInstance()", "testcase": false, "constructor": false}, {"identifier": "initializeStats", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initializeStats()", "full_signature": "private void initializeStats()", "class_method_signature": "LuceneDocumentIndexService.initializeStats()", "testcase": false, "constructor": false}, {"identifier": "setTimeSeriesStat", "parameters": "(String name, EnumSet<AggregationType> type, double v)", "modifiers": "private", "return": "void", "signature": "void setTimeSeriesStat(String name, EnumSet<AggregationType> type, double v)", "full_signature": "private void setTimeSeriesStat(String name, EnumSet<AggregationType> type, double v)", "class_method_signature": "LuceneDocumentIndexService.setTimeSeriesStat(String name, EnumSet<AggregationType> type, double v)", "testcase": false, "constructor": false}, {"identifier": "adjustTimeSeriesStat", "parameters": "(String name, EnumSet<AggregationType> type, double delta)", "modifiers": "private", "return": "void", "signature": "void adjustTimeSeriesStat(String name, EnumSet<AggregationType> type, double delta)", "full_signature": "private void adjustTimeSeriesStat(String name, EnumSet<AggregationType> type, double delta)", "class_method_signature": "LuceneDocumentIndexService.adjustTimeSeriesStat(String name, EnumSet<AggregationType> type, double delta)", "testcase": false, "constructor": false}, {"identifier": "setTimeSeriesHistogramStat", "parameters": "(String name, EnumSet<AggregationType> type, double v)", "modifiers": "private", "return": "void", "signature": "void setTimeSeriesHistogramStat(String name, EnumSet<AggregationType> type, double v)", "full_signature": "private void setTimeSeriesHistogramStat(String name, EnumSet<AggregationType> type, double v)", "class_method_signature": "LuceneDocumentIndexService.setTimeSeriesHistogramStat(String name, EnumSet<AggregationType> type, double v)", "testcase": false, "constructor": false}, {"identifier": "getQueryStatName", "parameters": "(QueryTask.Query query)", "modifiers": "private", "return": "String", "signature": "String getQueryStatName(QueryTask.Query query)", "full_signature": "private String getQueryStatName(QueryTask.Query query)", "class_method_signature": "LuceneDocumentIndexService.getQueryStatName(QueryTask.Query query)", "testcase": false, "constructor": false}, {"identifier": "createWriter", "parameters": "(File directory, boolean doUpgrade)", "modifiers": "public", "return": "IndexWriter", "signature": "IndexWriter createWriter(File directory, boolean doUpgrade)", "full_signature": "public IndexWriter createWriter(File directory, boolean doUpgrade)", "class_method_signature": "LuceneDocumentIndexService.createWriter(File directory, boolean doUpgrade)", "testcase": false, "constructor": false}, {"identifier": "createWriterWithLuceneDirectory", "parameters": "(Directory dir, boolean doUpgrade)", "modifiers": "", "return": "IndexWriter", "signature": "IndexWriter createWriterWithLuceneDirectory(Directory dir, boolean doUpgrade)", "full_signature": " IndexWriter createWriterWithLuceneDirectory(Directory dir, boolean doUpgrade)", "class_method_signature": "LuceneDocumentIndexService.createWriterWithLuceneDirectory(Directory dir, boolean doUpgrade)", "testcase": false, "constructor": false}, {"identifier": "overwriteCodecInSegmentsBeforeInitialCommit", "parameters": "(Codec codec, IndexWriter writer)", "modifiers": "private", "return": "void", "signature": "void overwriteCodecInSegmentsBeforeInitialCommit(Codec codec, IndexWriter writer)", "full_signature": "private void overwriteCodecInSegmentsBeforeInitialCommit(Codec codec, IndexWriter writer)", "class_method_signature": "LuceneDocumentIndexService.overwriteCodecInSegmentsBeforeInitialCommit(Codec codec, IndexWriter writer)", "testcase": false, "constructor": false}, {"identifier": "createCodec", "parameters": "()", "modifiers": "private", "return": "Codec", "signature": "Codec createCodec()", "full_signature": "private Codec createCodec()", "class_method_signature": "LuceneDocumentIndexService.createCodec()", "testcase": false, "constructor": false}, {"identifier": "upgradeIndex", "parameters": "(Directory dir)", "modifiers": "private", "return": "void", "signature": "void upgradeIndex(Directory dir)", "full_signature": "private void upgradeIndex(Directory dir)", "class_method_signature": "LuceneDocumentIndexService.upgradeIndex(Directory dir)", "testcase": false, "constructor": false}, {"identifier": "archiveCorruptIndexFiles", "parameters": "(File directory)", "modifiers": "", "return": "void", "signature": "void archiveCorruptIndexFiles(File directory)", "full_signature": " void archiveCorruptIndexFiles(File directory)", "class_method_signature": "LuceneDocumentIndexService.archiveCorruptIndexFiles(File directory)", "testcase": false, "constructor": false}, {"identifier": "doSelfValidationQuery", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void doSelfValidationQuery()", "full_signature": "private void doSelfValidationQuery()", "class_method_signature": "LuceneDocumentIndexService.doSelfValidationQuery()", "testcase": false, "constructor": false}, {"identifier": "handleDeleteRuntimeContext", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void handleDeleteRuntimeContext(Operation op)", "full_signature": "private void handleDeleteRuntimeContext(Operation op)", "class_method_signature": "LuceneDocumentIndexService.handleDeleteRuntimeContext(Operation op)", "testcase": false, "constructor": false}, {"identifier": "handleBackup", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void handleBackup(Operation op)", "full_signature": "private void handleBackup(Operation op)", "class_method_signature": "LuceneDocumentIndexService.handleBackup(Operation op)", "testcase": false, "constructor": false}, {"identifier": "handleRestore", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void handleRestore(Operation op)", "full_signature": "private void handleRestore(Operation op)", "class_method_signature": "LuceneDocumentIndexService.handleRestore(Operation op)", "testcase": false, "constructor": false}, {"identifier": "authorizeRequest", "parameters": "(Operation op)", "modifiers": "@Override public", "return": "void", "signature": "void authorizeRequest(Operation op)", "full_signature": "@Override public void authorizeRequest(Operation op)", "class_method_signature": "LuceneDocumentIndexService.authorizeRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "handleRequest", "parameters": "(Operation op)", "modifiers": "@Override public", "return": "void", "signature": "void handleRequest(Operation op)", "full_signature": "@Override public void handleRequest(Operation op)", "class_method_signature": "LuceneDocumentIndexService.handleRequest(Operation op)", "testcase": false, "constructor": false}, {"identifier": "handleQueryRequest", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void handleQueryRequest()", "full_signature": "private void handleQueryRequest()", "class_method_signature": "LuceneDocumentIndexService.handleQueryRequest()", "testcase": false, "constructor": false}, {"identifier": "handleUpdateRequest", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void handleUpdateRequest()", "full_signature": "private void handleUpdateRequest()", "class_method_signature": "LuceneDocumentIndexService.handleUpdateRequest()", "testcase": false, "constructor": false}, {"identifier": "handleQueryTaskPatch", "parameters": "(Operation op, QueryTask task)", "modifiers": "private", "return": "void", "signature": "void handleQueryTaskPatch(Operation op, QueryTask task)", "full_signature": "private void handleQueryTaskPatch(Operation op, QueryTask task)", "class_method_signature": "LuceneDocumentIndexService.handleQueryTaskPatch(Operation op, QueryTask task)", "testcase": false, "constructor": false}, {"identifier": "handleContinuousQueryTaskPatch", "parameters": "(Operation op, QueryTask task,\n            QueryTask.QuerySpecification qs)", "modifiers": "private", "return": "boolean", "signature": "boolean handleContinuousQueryTaskPatch(Operation op, QueryTask task,\n            QueryTask.QuerySpecification qs)", "full_signature": "private boolean handleContinuousQueryTaskPatch(Operation op, QueryTask task,\n            QueryTask.QuerySpecification qs)", "class_method_signature": "LuceneDocumentIndexService.handleContinuousQueryTaskPatch(Operation op, QueryTask task,\n            QueryTask.QuerySpecification qs)", "testcase": false, "constructor": false}, {"identifier": "createOrUpdatePaginatedQuerySearcher", "parameters": "(long expirationMicros,\n            IndexWriter w, Set<String> kindScope, EnumSet<QueryOption> queryOptions)", "modifiers": "private", "return": "IndexSearcher", "signature": "IndexSearcher createOrUpdatePaginatedQuerySearcher(long expirationMicros,\n            IndexWriter w, Set<String> kindScope, EnumSet<QueryOption> queryOptions)", "full_signature": "private IndexSearcher createOrUpdatePaginatedQuerySearcher(long expirationMicros,\n            IndexWriter w, Set<String> kindScope, EnumSet<QueryOption> queryOptions)", "class_method_signature": "LuceneDocumentIndexService.createOrUpdatePaginatedQuerySearcher(long expirationMicros,\n            IndexWriter w, Set<String> kindScope, EnumSet<QueryOption> queryOptions)", "testcase": false, "constructor": false}, {"identifier": "getOrUpdateExistingSearcher", "parameters": "(long newExpirationMicros,\n            Set<String> kindScope, boolean doNotRefresh)", "modifiers": "private", "return": "IndexSearcher", "signature": "IndexSearcher getOrUpdateExistingSearcher(long newExpirationMicros,\n            Set<String> kindScope, boolean doNotRefresh)", "full_signature": "private IndexSearcher getOrUpdateExistingSearcher(long newExpirationMicros,\n            Set<String> kindScope, boolean doNotRefresh)", "class_method_signature": "LuceneDocumentIndexService.getOrUpdateExistingSearcher(long newExpirationMicros,\n            Set<String> kindScope, boolean doNotRefresh)", "testcase": false, "constructor": false}, {"identifier": "createPaginatedQuerySearcher", "parameters": "(long expirationMicros, IndexWriter w)", "modifiers": "private", "return": "IndexSearcher", "signature": "IndexSearcher createPaginatedQuerySearcher(long expirationMicros, IndexWriter w)", "full_signature": "private IndexSearcher createPaginatedQuerySearcher(long expirationMicros, IndexWriter w)", "class_method_signature": "LuceneDocumentIndexService.createPaginatedQuerySearcher(long expirationMicros, IndexWriter w)", "testcase": false, "constructor": false}, {"identifier": "handleGetImpl", "parameters": "(Operation get)", "modifiers": "public", "return": "void", "signature": "void handleGetImpl(Operation get)", "full_signature": "public void handleGetImpl(Operation get)", "class_method_signature": "LuceneDocumentIndexService.handleGetImpl(Operation get)", "testcase": false, "constructor": false}, {"identifier": "pollQueryOperation", "parameters": "()", "modifiers": "private", "return": "Operation", "signature": "Operation pollQueryOperation()", "full_signature": "private Operation pollQueryOperation()", "class_method_signature": "LuceneDocumentIndexService.pollQueryOperation()", "testcase": false, "constructor": false}, {"identifier": "pollUpdateOperation", "parameters": "()", "modifiers": "private", "return": "Operation", "signature": "Operation pollUpdateOperation()", "full_signature": "private Operation pollUpdateOperation()", "class_method_signature": "LuceneDocumentIndexService.pollUpdateOperation()", "testcase": false, "constructor": false}, {"identifier": "offerQueryOperation", "parameters": "(Operation op)", "modifiers": "private", "return": "boolean", "signature": "boolean offerQueryOperation(Operation op)", "full_signature": "private boolean offerQueryOperation(Operation op)", "class_method_signature": "LuceneDocumentIndexService.offerQueryOperation(Operation op)", "testcase": false, "constructor": false}, {"identifier": "offerUpdateOperation", "parameters": "(Operation op)", "modifiers": "private", "return": "boolean", "signature": "boolean offerUpdateOperation(Operation op)", "full_signature": "private boolean offerUpdateOperation(Operation op)", "class_method_signature": "LuceneDocumentIndexService.offerUpdateOperation(Operation op)", "testcase": false, "constructor": false}, {"identifier": "getSubject", "parameters": "(Operation op)", "modifiers": "private", "return": "String", "signature": "String getSubject(Operation op)", "full_signature": "private String getSubject(Operation op)", "class_method_signature": "LuceneDocumentIndexService.getSubject(Operation op)", "testcase": false, "constructor": false}, {"identifier": "queryIndex", "parameters": "(\n            IndexSearcher s,\n            Operation op,\n            String selfLinkPrefix,\n            EnumSet<QueryOption> options,\n            Query tq,\n            LuceneQueryPage page,\n            int count,\n            long expiration,\n            String indexLink,\n            String nodeSelectorPath,\n            ServiceDocumentQueryResult rsp,\n            QuerySpecification qs)", "modifiers": "private", "return": "boolean", "signature": "boolean queryIndex(\n            IndexSearcher s,\n            Operation op,\n            String selfLinkPrefix,\n            EnumSet<QueryOption> options,\n            Query tq,\n            LuceneQueryPage page,\n            int count,\n            long expiration,\n            String indexLink,\n            String nodeSelectorPath,\n            ServiceDocumentQueryResult rsp,\n            QuerySpecification qs)", "full_signature": "private boolean queryIndex(\n            IndexSearcher s,\n            Operation op,\n            String selfLinkPrefix,\n            EnumSet<QueryOption> options,\n            Query tq,\n            LuceneQueryPage page,\n            int count,\n            long expiration,\n            String indexLink,\n            String nodeSelectorPath,\n            ServiceDocumentQueryResult rsp,\n            QuerySpecification qs)", "class_method_signature": "LuceneDocumentIndexService.queryIndex(\n            IndexSearcher s,\n            Operation op,\n            String selfLinkPrefix,\n            EnumSet<QueryOption> options,\n            Query tq,\n            LuceneQueryPage page,\n            int count,\n            long expiration,\n            String indexLink,\n            String nodeSelectorPath,\n            ServiceDocumentQueryResult rsp,\n            QuerySpecification qs)", "testcase": false, "constructor": false}, {"identifier": "queryIndexSingle", "parameters": "(String selfLink, Operation op, Long version)", "modifiers": "private", "return": "void", "signature": "void queryIndexSingle(String selfLink, Operation op, Long version)", "full_signature": "private void queryIndexSingle(String selfLink, Operation op, Long version)", "class_method_signature": "LuceneDocumentIndexService.queryIndexSingle(String selfLink, Operation op, Long version)", "testcase": false, "constructor": false}, {"identifier": "getDocumentAtVersion", "parameters": "(String selfLink, Long version)", "modifiers": "private", "return": "ServiceDocument", "signature": "ServiceDocument getDocumentAtVersion(String selfLink, Long version)", "full_signature": "private ServiceDocument getDocumentAtVersion(String selfLink, Long version)", "class_method_signature": "LuceneDocumentIndexService.getDocumentAtVersion(String selfLink, Long version)", "testcase": false, "constructor": false}, {"identifier": "queryIndexForVersion", "parameters": "(String selfLink, IndexSearcher s, Long version, Long documentsUpdatedBeforeInMicros)", "modifiers": "private", "return": "TopDocs", "signature": "TopDocs queryIndexForVersion(String selfLink, IndexSearcher s, Long version, Long documentsUpdatedBeforeInMicros)", "full_signature": "private TopDocs queryIndexForVersion(String selfLink, IndexSearcher s, Long version, Long documentsUpdatedBeforeInMicros)", "class_method_signature": "LuceneDocumentIndexService.queryIndexForVersion(String selfLink, IndexSearcher s, Long version, Long documentsUpdatedBeforeInMicros)", "testcase": false, "constructor": false}, {"identifier": "queryServiceHost", "parameters": "(String selfLink, EnumSet<QueryOption> options, Operation op)", "modifiers": "private", "return": "void", "signature": "void queryServiceHost(String selfLink, EnumSet<QueryOption> options, Operation op)", "full_signature": "private void queryServiceHost(String selfLink, EnumSet<QueryOption> options, Operation op)", "class_method_signature": "LuceneDocumentIndexService.queryServiceHost(String selfLink, EnumSet<QueryOption> options, Operation op)", "testcase": false, "constructor": false}, {"identifier": "updateQuery", "parameters": "(Operation op, QuerySpecification qs, Query tq, long now,\n            EnumSet<QueryOption> queryOptions)", "modifiers": "private", "return": "Query", "signature": "Query updateQuery(Operation op, QuerySpecification qs, Query tq, long now,\n            EnumSet<QueryOption> queryOptions)", "full_signature": "private Query updateQuery(Operation op, QuerySpecification qs, Query tq, long now,\n            EnumSet<QueryOption> queryOptions)", "class_method_signature": "LuceneDocumentIndexService.updateQuery(Operation op, QuerySpecification qs, Query tq, long now,\n            EnumSet<QueryOption> queryOptions)", "testcase": false, "constructor": false}, {"identifier": "handleGroupByQueryTaskPatch", "parameters": "(Operation op, QueryTask task)", "modifiers": "private", "return": "void", "signature": "void handleGroupByQueryTaskPatch(Operation op, QueryTask task)", "full_signature": "private void handleGroupByQueryTaskPatch(Operation op, QueryTask task)", "class_method_signature": "LuceneDocumentIndexService.handleGroupByQueryTaskPatch(Operation op, QueryTask task)", "testcase": false, "constructor": false}, {"identifier": "queryIndexCount", "parameters": "(\n            EnumSet<QueryOption> queryOptions,\n            IndexSearcher searcher,\n            Query termQuery,\n            ServiceDocumentQueryResult response,\n            QuerySpecification querySpec,\n            long queryStartTimeMicros,\n            String nodeSelectorPath)", "modifiers": "private", "return": "ServiceDocumentQueryResult", "signature": "ServiceDocumentQueryResult queryIndexCount(\n            EnumSet<QueryOption> queryOptions,\n            IndexSearcher searcher,\n            Query termQuery,\n            ServiceDocumentQueryResult response,\n            QuerySpecification querySpec,\n            long queryStartTimeMicros,\n            String nodeSelectorPath)", "full_signature": "private ServiceDocumentQueryResult queryIndexCount(\n            EnumSet<QueryOption> queryOptions,\n            IndexSearcher searcher,\n            Query termQuery,\n            ServiceDocumentQueryResult response,\n            QuerySpecification querySpec,\n            long queryStartTimeMicros,\n            String nodeSelectorPath)", "class_method_signature": "LuceneDocumentIndexService.queryIndexCount(\n            EnumSet<QueryOption> queryOptions,\n            IndexSearcher searcher,\n            Query termQuery,\n            ServiceDocumentQueryResult response,\n            QuerySpecification querySpec,\n            long queryStartTimeMicros,\n            String nodeSelectorPath)", "testcase": false, "constructor": false}, {"identifier": "queryIndexPaginated", "parameters": "(Operation op,\n            EnumSet<QueryOption> options,\n            IndexSearcher s,\n            Query tq,\n            LuceneQueryPage page,\n            int count,\n            long expiration,\n            String indexLink,\n            String nodeSelectorPath,\n            ServiceDocumentQueryResult rsp,\n            QuerySpecification qs,\n            long queryStartTimeMicros)", "modifiers": "private", "return": "ServiceDocumentQueryResult", "signature": "ServiceDocumentQueryResult queryIndexPaginated(Operation op,\n            EnumSet<QueryOption> options,\n            IndexSearcher s,\n            Query tq,\n            LuceneQueryPage page,\n            int count,\n            long expiration,\n            String indexLink,\n            String nodeSelectorPath,\n            ServiceDocumentQueryResult rsp,\n            QuerySpecification qs,\n            long queryStartTimeMicros)", "full_signature": "private ServiceDocumentQueryResult queryIndexPaginated(Operation op,\n            EnumSet<QueryOption> options,\n            IndexSearcher s,\n            Query tq,\n            LuceneQueryPage page,\n            int count,\n            long expiration,\n            String indexLink,\n            String nodeSelectorPath,\n            ServiceDocumentQueryResult rsp,\n            QuerySpecification qs,\n            long queryStartTimeMicros)", "class_method_signature": "LuceneDocumentIndexService.queryIndexPaginated(Operation op,\n            EnumSet<QueryOption> options,\n            IndexSearcher s,\n            Query tq,\n            LuceneQueryPage page,\n            int count,\n            long expiration,\n            String indexLink,\n            String nodeSelectorPath,\n            ServiceDocumentQueryResult rsp,\n            QuerySpecification qs,\n            long queryStartTimeMicros)", "testcase": false, "constructor": false}, {"identifier": "checkNextPageHasEntry", "parameters": "(ScoreDoc after,\n            EnumSet<QueryOption> options,\n            IndexSearcher s,\n            Query tq,\n            Sort sort,\n            int count,\n            QuerySpecification qs,\n            long queryStartTimeMicros,\n            String nodeSelectorPath)", "modifiers": "private", "return": "boolean", "signature": "boolean checkNextPageHasEntry(ScoreDoc after,\n            EnumSet<QueryOption> options,\n            IndexSearcher s,\n            Query tq,\n            Sort sort,\n            int count,\n            QuerySpecification qs,\n            long queryStartTimeMicros,\n            String nodeSelectorPath)", "full_signature": "private boolean checkNextPageHasEntry(ScoreDoc after,\n            EnumSet<QueryOption> options,\n            IndexSearcher s,\n            Query tq,\n            Sort sort,\n            int count,\n            QuerySpecification qs,\n            long queryStartTimeMicros,\n            String nodeSelectorPath)", "class_method_signature": "LuceneDocumentIndexService.checkNextPageHasEntry(ScoreDoc after,\n            EnumSet<QueryOption> options,\n            IndexSearcher s,\n            Query tq,\n            Sort sort,\n            int count,\n            QuerySpecification qs,\n            long queryStartTimeMicros,\n            String nodeSelectorPath)", "testcase": false, "constructor": false}, {"identifier": "createNextPage", "parameters": "(Operation op, IndexSearcher s, QuerySpecification qs,\n            Query tq,\n            Sort sort,\n            ScoreDoc after,\n            int offset,\n            Integer groupOffset,\n            long expiration,\n            String indexLink,\n            String nodeSelectorPath,\n            boolean hasPage)", "modifiers": "private", "return": "String", "signature": "String createNextPage(Operation op, IndexSearcher s, QuerySpecification qs,\n            Query tq,\n            Sort sort,\n            ScoreDoc after,\n            int offset,\n            Integer groupOffset,\n            long expiration,\n            String indexLink,\n            String nodeSelectorPath,\n            boolean hasPage)", "full_signature": "private String createNextPage(Operation op, IndexSearcher s, QuerySpecification qs,\n            Query tq,\n            Sort sort,\n            ScoreDoc after,\n            int offset,\n            Integer groupOffset,\n            long expiration,\n            String indexLink,\n            String nodeSelectorPath,\n            boolean hasPage)", "class_method_signature": "LuceneDocumentIndexService.createNextPage(Operation op, IndexSearcher s, QuerySpecification qs,\n            Query tq,\n            Sort sort,\n            ScoreDoc after,\n            int offset,\n            Integer groupOffset,\n            long expiration,\n            String indexLink,\n            String nodeSelectorPath,\n            boolean hasPage)", "testcase": false, "constructor": false}, {"identifier": "processQueryResults", "parameters": "(QuerySpecification qs, EnumSet<QueryOption> options,\n            int resultLimit, IndexSearcher s, ServiceDocumentQueryResult rsp, ScoreDoc[] hits,\n            long queryStartTimeMicros,\n            String nodeSelectorPath,\n            boolean populateResponse)", "modifiers": "private", "return": "ScoreDoc", "signature": "ScoreDoc processQueryResults(QuerySpecification qs, EnumSet<QueryOption> options,\n            int resultLimit, IndexSearcher s, ServiceDocumentQueryResult rsp, ScoreDoc[] hits,\n            long queryStartTimeMicros,\n            String nodeSelectorPath,\n            boolean populateResponse)", "full_signature": "private ScoreDoc processQueryResults(QuerySpecification qs, EnumSet<QueryOption> options,\n            int resultLimit, IndexSearcher s, ServiceDocumentQueryResult rsp, ScoreDoc[] hits,\n            long queryStartTimeMicros,\n            String nodeSelectorPath,\n            boolean populateResponse)", "class_method_signature": "LuceneDocumentIndexService.processQueryResults(QuerySpecification qs, EnumSet<QueryOption> options,\n            int resultLimit, IndexSearcher s, ServiceDocumentQueryResult rsp, ScoreDoc[] hits,\n            long queryStartTimeMicros,\n            String nodeSelectorPath,\n            boolean populateResponse)", "testcase": false, "constructor": false}, {"identifier": "toJsonElement", "parameters": "(ServiceDocument state)", "modifiers": "private", "return": "JsonObject", "signature": "JsonObject toJsonElement(ServiceDocument state)", "full_signature": "private JsonObject toJsonElement(ServiceDocument state)", "class_method_signature": "LuceneDocumentIndexService.toJsonElement(ServiceDocument state)", "testcase": false, "constructor": false}, {"identifier": "loadDoc", "parameters": "(IndexSearcher s, DocumentStoredFieldVisitor visitor, int docId, Set<String> fields)", "modifiers": "private", "return": "void", "signature": "void loadDoc(IndexSearcher s, DocumentStoredFieldVisitor visitor, int docId, Set<String> fields)", "full_signature": "private void loadDoc(IndexSearcher s, DocumentStoredFieldVisitor visitor, int docId, Set<String> fields)", "class_method_signature": "LuceneDocumentIndexService.loadDoc(IndexSearcher s, DocumentStoredFieldVisitor visitor, int docId, Set<String> fields)", "testcase": false, "constructor": false}, {"identifier": "augmentDoc", "parameters": "(IndexSearcher s, DocumentStoredFieldVisitor visitor, int docId, String field)", "modifiers": "private", "return": "void", "signature": "void augmentDoc(IndexSearcher s, DocumentStoredFieldVisitor visitor, int docId, String field)", "full_signature": "private void augmentDoc(IndexSearcher s, DocumentStoredFieldVisitor visitor, int docId, String field)", "class_method_signature": "LuceneDocumentIndexService.augmentDoc(IndexSearcher s, DocumentStoredFieldVisitor visitor, int docId, String field)", "testcase": false, "constructor": false}, {"identifier": "processQueryResultsForOwnerSelection", "parameters": "(String json, ServiceDocument state, String nodeSelectorPath)", "modifiers": "private", "return": "boolean", "signature": "boolean processQueryResultsForOwnerSelection(String json, ServiceDocument state, String nodeSelectorPath)", "full_signature": "private boolean processQueryResultsForOwnerSelection(String json, ServiceDocument state, String nodeSelectorPath)", "class_method_signature": "LuceneDocumentIndexService.processQueryResultsForOwnerSelection(String json, ServiceDocument state, String nodeSelectorPath)", "testcase": false, "constructor": false}, {"identifier": "processQueryResultsForSelectLinks", "parameters": "(IndexSearcher s,\n            QuerySpecification qs, ServiceDocumentQueryResult rsp, DocumentStoredFieldVisitor d, int docId,\n            String link,\n            ServiceDocument state)", "modifiers": "private", "return": "ServiceDocument", "signature": "ServiceDocument processQueryResultsForSelectLinks(IndexSearcher s,\n            QuerySpecification qs, ServiceDocumentQueryResult rsp, DocumentStoredFieldVisitor d, int docId,\n            String link,\n            ServiceDocument state)", "full_signature": "private ServiceDocument processQueryResultsForSelectLinks(IndexSearcher s,\n            QuerySpecification qs, ServiceDocumentQueryResult rsp, DocumentStoredFieldVisitor d, int docId,\n            String link,\n            ServiceDocument state)", "class_method_signature": "LuceneDocumentIndexService.processQueryResultsForSelectLinks(IndexSearcher s,\n            QuerySpecification qs, ServiceDocumentQueryResult rsp, DocumentStoredFieldVisitor d, int docId,\n            String link,\n            ServiceDocument state)", "testcase": false, "constructor": false}, {"identifier": "getStateFromLuceneDocument", "parameters": "(DocumentStoredFieldVisitor doc, String link)", "modifiers": "private", "return": "ServiceDocument", "signature": "ServiceDocument getStateFromLuceneDocument(DocumentStoredFieldVisitor doc, String link)", "full_signature": "private ServiceDocument getStateFromLuceneDocument(DocumentStoredFieldVisitor doc, String link)", "class_method_signature": "LuceneDocumentIndexService.getStateFromLuceneDocument(DocumentStoredFieldVisitor doc, String link)", "testcase": false, "constructor": false}, {"identifier": "getSearcherUpdateTime", "parameters": "(IndexSearcher s, long queryStartTimeMicros)", "modifiers": "private", "return": "long", "signature": "long getSearcherUpdateTime(IndexSearcher s, long queryStartTimeMicros)", "full_signature": "private long getSearcherUpdateTime(IndexSearcher s, long queryStartTimeMicros)", "class_method_signature": "LuceneDocumentIndexService.getSearcherUpdateTime(IndexSearcher s, long queryStartTimeMicros)", "testcase": false, "constructor": false}, {"identifier": "getLatestVersion", "parameters": "(IndexSearcher s,\n            long searcherUpdateTime,\n            String link, long version, long documentsUpdatedBeforeInMicros)", "modifiers": "private", "return": "long", "signature": "long getLatestVersion(IndexSearcher s,\n            long searcherUpdateTime,\n            String link, long version, long documentsUpdatedBeforeInMicros)", "full_signature": "private long getLatestVersion(IndexSearcher s,\n            long searcherUpdateTime,\n            String link, long version, long documentsUpdatedBeforeInMicros)", "class_method_signature": "LuceneDocumentIndexService.getLatestVersion(IndexSearcher s,\n            long searcherUpdateTime,\n            String link, long version, long documentsUpdatedBeforeInMicros)", "testcase": false, "constructor": false}, {"identifier": "expandLinks", "parameters": "(Operation o, Operation get)", "modifiers": "private", "return": "void", "signature": "void expandLinks(Operation o, Operation get)", "full_signature": "private void expandLinks(Operation o, Operation get)", "class_method_signature": "LuceneDocumentIndexService.expandLinks(Operation o, Operation get)", "testcase": false, "constructor": false}, {"identifier": "handleDeleteImpl", "parameters": "(Operation delete)", "modifiers": "public", "return": "void", "signature": "void handleDeleteImpl(Operation delete)", "full_signature": "public void handleDeleteImpl(Operation delete)", "class_method_signature": "LuceneDocumentIndexService.handleDeleteImpl(Operation delete)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "(IndexWriter wr)", "modifiers": "", "return": "void", "signature": "void close(IndexWriter wr)", "full_signature": " void close(IndexWriter wr)", "class_method_signature": "LuceneDocumentIndexService.close(IndexWriter wr)", "testcase": false, "constructor": false}, {"identifier": "updateIndex", "parameters": "(Operation updateOp)", "modifiers": "protected", "return": "void", "signature": "void updateIndex(Operation updateOp)", "full_signature": "protected void updateIndex(Operation updateOp)", "class_method_signature": "LuceneDocumentIndexService.updateIndex(Operation updateOp)", "testcase": false, "constructor": false}, {"identifier": "checkDocumentRetentionLimit", "parameters": "(ServiceDocument state, ServiceDocumentDescription desc)", "modifiers": "private", "return": "void", "signature": "void checkDocumentRetentionLimit(ServiceDocument state, ServiceDocumentDescription desc)", "full_signature": "private void checkDocumentRetentionLimit(ServiceDocument state, ServiceDocumentDescription desc)", "class_method_signature": "LuceneDocumentIndexService.checkDocumentRetentionLimit(ServiceDocument state, ServiceDocumentDescription desc)", "testcase": false, "constructor": false}, {"identifier": "checkFailureAndRecover", "parameters": "(Exception e)", "modifiers": "private", "return": "void", "signature": "void checkFailureAndRecover(Exception e)", "full_signature": "private void checkFailureAndRecover(Exception e)", "class_method_signature": "LuceneDocumentIndexService.checkFailureAndRecover(Exception e)", "testcase": false, "constructor": false}, {"identifier": "deleteAllDocumentsForSelfLinkForcedPost", "parameters": "(IndexWriter wr, ServiceDocument sd)", "modifiers": "private", "return": "void", "signature": "void deleteAllDocumentsForSelfLinkForcedPost(IndexWriter wr, ServiceDocument sd)", "full_signature": "private void deleteAllDocumentsForSelfLinkForcedPost(IndexWriter wr, ServiceDocument sd)", "class_method_signature": "LuceneDocumentIndexService.deleteAllDocumentsForSelfLinkForcedPost(IndexWriter wr, ServiceDocument sd)", "testcase": false, "constructor": false}, {"identifier": "deleteAllDocumentsForSelfLink", "parameters": "(Operation postOrDelete, String link,\n            ServiceDocument state)", "modifiers": "private", "return": "void", "signature": "void deleteAllDocumentsForSelfLink(Operation postOrDelete, String link,\n            ServiceDocument state)", "full_signature": "private void deleteAllDocumentsForSelfLink(Operation postOrDelete, String link,\n            ServiceDocument state)", "class_method_signature": "LuceneDocumentIndexService.deleteAllDocumentsForSelfLink(Operation postOrDelete, String link,\n            ServiceDocument state)", "testcase": false, "constructor": false}, {"identifier": "deleteDocumentsFromIndex", "parameters": "(Operation delete, ServiceDocumentDescription desc, String link, String kind, long oldestVersion,\n            long newestVersion)", "modifiers": "private", "return": "void", "signature": "void deleteDocumentsFromIndex(Operation delete, ServiceDocumentDescription desc, String link, String kind, long oldestVersion,\n            long newestVersion)", "full_signature": "private void deleteDocumentsFromIndex(Operation delete, ServiceDocumentDescription desc, String link, String kind, long oldestVersion,\n            long newestVersion)", "class_method_signature": "LuceneDocumentIndexService.deleteDocumentsFromIndex(Operation delete, ServiceDocumentDescription desc, String link, String kind, long oldestVersion,\n            long newestVersion)", "testcase": false, "constructor": false}, {"identifier": "deleteDocumentFromIndex", "parameters": "(String link, long oldestVersion, long newestVersion,\n            IndexWriter wr)", "modifiers": "private", "return": "void", "signature": "void deleteDocumentFromIndex(String link, long oldestVersion, long newestVersion,\n            IndexWriter wr)", "full_signature": "private void deleteDocumentFromIndex(String link, long oldestVersion, long newestVersion,\n            IndexWriter wr)", "class_method_signature": "LuceneDocumentIndexService.deleteDocumentFromIndex(String link, long oldestVersion, long newestVersion,\n            IndexWriter wr)", "testcase": false, "constructor": false}, {"identifier": "addDocumentToIndex", "parameters": "(IndexWriter wr, Operation op, Document doc, ServiceDocument sd,\n            ServiceDocumentDescription desc)", "modifiers": "private", "return": "void", "signature": "void addDocumentToIndex(IndexWriter wr, Operation op, Document doc, ServiceDocument sd,\n            ServiceDocumentDescription desc)", "full_signature": "private void addDocumentToIndex(IndexWriter wr, Operation op, Document doc, ServiceDocument sd,\n            ServiceDocumentDescription desc)", "class_method_signature": "LuceneDocumentIndexService.addDocumentToIndex(IndexWriter wr, Operation op, Document doc, ServiceDocument sd,\n            ServiceDocumentDescription desc)", "testcase": false, "constructor": false}, {"identifier": "checkDocumentIndexingMetadata", "parameters": "(ServiceDocument sd, ServiceDocumentDescription desc,\n            long updateTimeMicros)", "modifiers": "private", "return": "void", "signature": "void checkDocumentIndexingMetadata(ServiceDocument sd, ServiceDocumentDescription desc,\n            long updateTimeMicros)", "full_signature": "private void checkDocumentIndexingMetadata(ServiceDocument sd, ServiceDocumentDescription desc,\n            long updateTimeMicros)", "class_method_signature": "LuceneDocumentIndexService.checkDocumentIndexingMetadata(ServiceDocument sd, ServiceDocumentDescription desc,\n            long updateTimeMicros)", "testcase": false, "constructor": false}, {"identifier": "updateLinkInfoCache", "parameters": "(ServiceDocumentDescription desc,\n            String link, String kind, long version, long lastAccessTime)", "modifiers": "private", "return": "void", "signature": "void updateLinkInfoCache(ServiceDocumentDescription desc,\n            String link, String kind, long version, long lastAccessTime)", "full_signature": "private void updateLinkInfoCache(ServiceDocumentDescription desc,\n            String link, String kind, long version, long lastAccessTime)", "class_method_signature": "LuceneDocumentIndexService.updateLinkInfoCache(ServiceDocumentDescription desc,\n            String link, String kind, long version, long lastAccessTime)", "testcase": false, "constructor": false}, {"identifier": "updateLinkInfoCacheForMetadataUpdates", "parameters": "(long updateTimeMicros,\n            Collection<MetadataUpdateInfo> entries)", "modifiers": "private", "return": "void", "signature": "void updateLinkInfoCacheForMetadataUpdates(long updateTimeMicros,\n            Collection<MetadataUpdateInfo> entries)", "full_signature": "private void updateLinkInfoCacheForMetadataUpdates(long updateTimeMicros,\n            Collection<MetadataUpdateInfo> entries)", "class_method_signature": "LuceneDocumentIndexService.updateLinkInfoCacheForMetadataUpdates(long updateTimeMicros,\n            Collection<MetadataUpdateInfo> entries)", "testcase": false, "constructor": false}, {"identifier": "createOrRefreshSearcher", "parameters": "(String selfLink, Set<String> kindScope,\n            int resultLimit, IndexWriter w,\n            boolean doNotRefresh)", "modifiers": "private", "return": "IndexSearcher", "signature": "IndexSearcher createOrRefreshSearcher(String selfLink, Set<String> kindScope,\n            int resultLimit, IndexWriter w,\n            boolean doNotRefresh)", "full_signature": "private IndexSearcher createOrRefreshSearcher(String selfLink, Set<String> kindScope,\n            int resultLimit, IndexWriter w,\n            boolean doNotRefresh)", "class_method_signature": "LuceneDocumentIndexService.createOrRefreshSearcher(String selfLink, Set<String> kindScope,\n            int resultLimit, IndexWriter w,\n            boolean doNotRefresh)", "testcase": false, "constructor": false}, {"identifier": "documentNeedsNewSearcher", "parameters": "(String selfLink, Set<String> kindScope,\n            int resultLimit, long searcherUpdateTime, boolean doNotRefresh)", "modifiers": "private", "return": "boolean", "signature": "boolean documentNeedsNewSearcher(String selfLink, Set<String> kindScope,\n            int resultLimit, long searcherUpdateTime, boolean doNotRefresh)", "full_signature": "private boolean documentNeedsNewSearcher(String selfLink, Set<String> kindScope,\n            int resultLimit, long searcherUpdateTime, boolean doNotRefresh)", "class_method_signature": "LuceneDocumentIndexService.documentNeedsNewSearcher(String selfLink, Set<String> kindScope,\n            int resultLimit, long searcherUpdateTime, boolean doNotRefresh)", "testcase": false, "constructor": false}, {"identifier": "getUri", "parameters": "()", "modifiers": "@Override public", "return": "URI", "signature": "URI getUri()", "full_signature": "@Override public URI getUri()", "class_method_signature": "LuceneDocumentIndexService.getUri()", "testcase": false, "constructor": false}, {"identifier": "handleMaintenance", "parameters": "(Operation post)", "modifiers": "@Override public", "return": "void", "signature": "void handleMaintenance(Operation post)", "full_signature": "@Override public void handleMaintenance(Operation post)", "class_method_signature": "LuceneDocumentIndexService.handleMaintenance(Operation post)", "testcase": false, "constructor": false}, {"identifier": "handleMaintenanceImpl", "parameters": "(Operation op)", "modifiers": "private", "return": "void", "signature": "void handleMaintenanceImpl(Operation op)", "full_signature": "private void handleMaintenanceImpl(Operation op)", "class_method_signature": "LuceneDocumentIndexService.handleMaintenanceImpl(Operation op)", "testcase": false, "constructor": false}, {"identifier": "logQueueDepthStat", "parameters": "(RoundRobinOperationQueue queue, String format)", "modifiers": "private", "return": "void", "signature": "void logQueueDepthStat(RoundRobinOperationQueue queue, String format)", "full_signature": "private void logQueueDepthStat(RoundRobinOperationQueue queue, String format)", "class_method_signature": "LuceneDocumentIndexService.logQueueDepthStat(RoundRobinOperationQueue queue, String format)", "testcase": false, "constructor": false}, {"identifier": "applyMetadataIndexingUpdates", "parameters": "(IndexSearcher searcher, long searcherCreationTime,\n            long deadline)", "modifiers": "private", "return": "void", "signature": "void applyMetadataIndexingUpdates(IndexSearcher searcher, long searcherCreationTime,\n            long deadline)", "full_signature": "private void applyMetadataIndexingUpdates(IndexSearcher searcher, long searcherCreationTime,\n            long deadline)", "class_method_signature": "LuceneDocumentIndexService.applyMetadataIndexingUpdates(IndexSearcher searcher, long searcherCreationTime,\n            long deadline)", "testcase": false, "constructor": false}, {"identifier": "applyMetadataIndexingUpdate", "parameters": "(IndexSearcher searcher, IndexWriter wr,\n            MetadataUpdateInfo info)", "modifiers": "private", "return": "long", "signature": "long applyMetadataIndexingUpdate(IndexSearcher searcher, IndexWriter wr,\n            MetadataUpdateInfo info)", "full_signature": "private long applyMetadataIndexingUpdate(IndexSearcher searcher, IndexWriter wr,\n            MetadataUpdateInfo info)", "class_method_signature": "LuceneDocumentIndexService.applyMetadataIndexingUpdate(IndexSearcher searcher, IndexWriter wr,\n            MetadataUpdateInfo info)", "testcase": false, "constructor": false}, {"identifier": "updateTombstoneTime", "parameters": "(IndexWriter wr, String indexingId, long documentUpdateTimeMicros)", "modifiers": "private", "return": "void", "signature": "void updateTombstoneTime(IndexWriter wr, String indexingId, long documentUpdateTimeMicros)", "full_signature": "private void updateTombstoneTime(IndexWriter wr, String indexingId, long documentUpdateTimeMicros)", "class_method_signature": "LuceneDocumentIndexService.updateTombstoneTime(IndexWriter wr, String indexingId, long documentUpdateTimeMicros)", "testcase": false, "constructor": false}, {"identifier": "applyFileLimitRefreshWriter", "parameters": "(boolean force)", "modifiers": "private", "return": "void", "signature": "void applyFileLimitRefreshWriter(boolean force)", "full_signature": "private void applyFileLimitRefreshWriter(boolean force)", "class_method_signature": "LuceneDocumentIndexService.applyFileLimitRefreshWriter(boolean force)", "testcase": false, "constructor": false}, {"identifier": "applyDocumentVersionRetentionPolicy", "parameters": "(long deadline)", "modifiers": "private", "return": "void", "signature": "void applyDocumentVersionRetentionPolicy(long deadline)", "full_signature": "private void applyDocumentVersionRetentionPolicy(long deadline)", "class_method_signature": "LuceneDocumentIndexService.applyDocumentVersionRetentionPolicy(long deadline)", "testcase": false, "constructor": false}, {"identifier": "applyMemoryLimit", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void applyMemoryLimit()", "full_signature": "private void applyMemoryLimit()", "class_method_signature": "LuceneDocumentIndexService.applyMemoryLimit()", "testcase": false, "constructor": false}, {"identifier": "applyMemoryLimitToDocumentUpdateInfo", "parameters": "()", "modifiers": "", "return": "void", "signature": "void applyMemoryLimitToDocumentUpdateInfo()", "full_signature": " void applyMemoryLimitToDocumentUpdateInfo()", "class_method_signature": "LuceneDocumentIndexService.applyMemoryLimitToDocumentUpdateInfo()", "testcase": false, "constructor": false}, {"identifier": "applyDocumentExpirationPolicy", "parameters": "(IndexSearcher s, long deadline)", "modifiers": "private", "return": "void", "signature": "void applyDocumentExpirationPolicy(IndexSearcher s, long deadline)", "full_signature": "private void applyDocumentExpirationPolicy(IndexSearcher s, long deadline)", "class_method_signature": "LuceneDocumentIndexService.applyDocumentExpirationPolicy(IndexSearcher s, long deadline)", "testcase": false, "constructor": false}, {"identifier": "applyActiveQueries", "parameters": "(Operation op, ServiceDocument latestState,\n            ServiceDocumentDescription desc)", "modifiers": "private", "return": "void", "signature": "void applyActiveQueries(Operation op, ServiceDocument latestState,\n            ServiceDocumentDescription desc)", "full_signature": "private void applyActiveQueries(Operation op, ServiceDocument latestState,\n            ServiceDocumentDescription desc)", "class_method_signature": "LuceneDocumentIndexService.applyActiveQueries(Operation op, ServiceDocument latestState,\n            ServiceDocumentDescription desc)", "testcase": false, "constructor": false}, {"identifier": "evaluateQuery", "parameters": "(ServiceDocumentDescription desc, QueryFilter filter, ServiceDocument serviceState)", "modifiers": "private", "return": "boolean", "signature": "boolean evaluateQuery(ServiceDocumentDescription desc, QueryFilter filter, ServiceDocument serviceState)", "full_signature": "private boolean evaluateQuery(ServiceDocumentDescription desc, QueryFilter filter, ServiceDocument serviceState)", "class_method_signature": "LuceneDocumentIndexService.evaluateQuery(ServiceDocumentDescription desc, QueryFilter filter, ServiceDocument serviceState)", "testcase": false, "constructor": false}, {"identifier": "getPreviousStateForDoc", "parameters": "(QueryTask activeTask, ServiceDocument latestState)", "modifiers": "private", "return": "ServiceDocument", "signature": "ServiceDocument getPreviousStateForDoc(QueryTask activeTask, ServiceDocument latestState)", "full_signature": "private ServiceDocument getPreviousStateForDoc(QueryTask activeTask, ServiceDocument latestState)", "class_method_signature": "LuceneDocumentIndexService.getPreviousStateForDoc(QueryTask activeTask, ServiceDocument latestState)", "testcase": false, "constructor": false}, {"identifier": "setWriterUpdateTimeMicros", "parameters": "(long writerUpdateTimeMicros)", "modifiers": "", "return": "void", "signature": "void setWriterUpdateTimeMicros(long writerUpdateTimeMicros)", "full_signature": " void setWriterUpdateTimeMicros(long writerUpdateTimeMicros)", "class_method_signature": "LuceneDocumentIndexService.setWriterUpdateTimeMicros(long writerUpdateTimeMicros)", "testcase": false, "constructor": false}], "file": "xenon-common/src/main/java/com/vmware/xenon/services/common/LuceneDocumentIndexService.java"}, "focal_method": {"identifier": "setExpiredDocumentSearchThreshold", "parameters": "(int count)", "modifiers": "public static", "return": "void", "body": "public static void setExpiredDocumentSearchThreshold(int count) {\n        expiredDocumentSearchThreshold = count;\n    }", "signature": "void setExpiredDocumentSearchThreshold(int count)", "full_signature": "public static void setExpiredDocumentSearchThreshold(int count)", "class_method_signature": "LuceneDocumentIndexService.setExpiredDocumentSearchThreshold(int count)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 45276846, "url": "https://github.com/vmware-archive/xenon", "language": "Java", "is_fork": false, "fork_count": 97, "stargazer_count": 226, "size": 52010, "license": "licensed"}}