{"test_class": {"identifier": "TagParserTest", "superclass": "", "interfaces": "", "fields": [], "file": "src/de/slackspace/openkeepass/parser/TagParserTest.java"}, "test_case": {"identifier": "whenTagStringInputIsNullShouldReturnEmptyList", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void whenTagStringInputIsNullShouldReturnEmptyList() {\n        TagParser parser = createParser();\n        List<String> tags = parser.fromTagString(null);\n\n        assertThat(tags.size(), is(0));\n    }", "signature": "void whenTagStringInputIsNullShouldReturnEmptyList()", "full_signature": "@Test public void whenTagStringInputIsNullShouldReturnEmptyList()", "class_method_signature": "TagParserTest.whenTagStringInputIsNullShouldReturnEmptyList()", "testcase": true, "constructor": false, "invocations": ["createParser", "fromTagString", "assertThat", "size", "is"]}, "focal_class": {"identifier": "TagParser", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TAG_SEPARATOR = \";\";", "modifier": "private static final", "type": "String", "declarator": "TAG_SEPARATOR = \";\"", "var_name": "TAG_SEPARATOR"}], "methods": [{"identifier": "fromTagString", "parameters": "(String tags)", "modifiers": "public", "return": "List<String>", "signature": "List<String> fromTagString(String tags)", "full_signature": "public List<String> fromTagString(String tags)", "class_method_signature": "TagParser.fromTagString(String tags)", "testcase": false, "constructor": false}, {"identifier": "toTagString", "parameters": "(List<String> tags)", "modifiers": "public", "return": "String", "signature": "String toTagString(List<String> tags)", "full_signature": "public String toTagString(List<String> tags)", "class_method_signature": "TagParser.toTagString(List<String> tags)", "testcase": false, "constructor": false}], "file": "src/de/slackspace/openkeepass/parser/TagParser.java"}, "focal_method": {"identifier": "fromTagString", "parameters": "(String tags)", "modifiers": "public", "return": "List<String>", "body": "public List<String> fromTagString(String tags) {\n        if (tags == null) {\n            return new ArrayList<String>();\n        }\n\n        String[] splittedTags = tags.split(TAG_SEPARATOR);\n\n        List<String> result = new ArrayList<String>();\n        if (splittedTags != null) {\n            for (String tag : splittedTags) {\n                result.add(tag);\n            }\n        }\n\n        return result;\n    }", "signature": "List<String> fromTagString(String tags)", "full_signature": "public List<String> fromTagString(String tags)", "class_method_signature": "TagParser.fromTagString(String tags)", "testcase": false, "constructor": false, "invocations": ["split", "add"]}, "repository": {"repo_id": 102137829, "url": "https://github.com/privacyint/ThornSec", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 10, "size": 20604, "license": "licensed"}}