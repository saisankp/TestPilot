{"test_class": {"identifier": "ReceiptRefreshTripPricesListenerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "ReceiptRefreshTripPricesListener mReceiptRefreshTripPricesListener;", "modifier": "", "type": "ReceiptRefreshTripPricesListener", "declarator": "mReceiptRefreshTripPricesListener", "var_name": "mReceiptRefreshTripPricesListener"}, {"original_string": "@Mock\n    TableController<Trip> mTripTableController;", "modifier": "@Mock", "type": "TableController<Trip>", "declarator": "mTripTableController", "var_name": "mTripTableController"}, {"original_string": "@Mock\n    Receipt mReceipt;", "modifier": "@Mock", "type": "Receipt", "declarator": "mReceipt", "var_name": "mReceipt"}, {"original_string": "@Mock\n    Trip mTrip;", "modifier": "@Mock", "type": "Trip", "declarator": "mTrip", "var_name": "mTrip"}], "file": "app/src/test/java/co/smartreceipts/android/persistence/database/controllers/impl/ReceiptRefreshTripPricesListenerTest.java"}, "test_case": {"identifier": "onCopySuccess", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void onCopySuccess() {\n        mReceiptRefreshTripPricesListener.onCopySuccess(mReceipt, mReceipt);\n        verify(mTripTableController).get();\n    }", "signature": "void onCopySuccess()", "full_signature": "@Test public void onCopySuccess()", "class_method_signature": "ReceiptRefreshTripPricesListenerTest.onCopySuccess()", "testcase": true, "constructor": false, "invocations": ["onCopySuccess", "get", "verify"]}, "focal_class": {"identifier": "ReceiptRefreshTripPricesListener", "superclass": "extends RefreshTripPricesListener<Receipt>", "interfaces": "implements ReceiptTableEventsListener", "fields": [], "methods": [{"identifier": "ReceiptRefreshTripPricesListener", "parameters": "(@NonNull TableController<Trip> tripTableController)", "modifiers": "public", "return": "", "signature": " ReceiptRefreshTripPricesListener(@NonNull TableController<Trip> tripTableController)", "full_signature": "public  ReceiptRefreshTripPricesListener(@NonNull TableController<Trip> tripTableController)", "class_method_signature": "ReceiptRefreshTripPricesListener.ReceiptRefreshTripPricesListener(@NonNull TableController<Trip> tripTableController)", "testcase": false, "constructor": true}, {"identifier": "onMoveSuccess", "parameters": "(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt)", "modifiers": "@Override public", "return": "void", "signature": "void onMoveSuccess(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt)", "full_signature": "@Override public void onMoveSuccess(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt)", "class_method_signature": "ReceiptRefreshTripPricesListener.onMoveSuccess(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt)", "testcase": false, "constructor": false}, {"identifier": "onMoveFailure", "parameters": "(@NonNull Receipt oldReceipt, @Nullable Throwable e)", "modifiers": "@Override public", "return": "void", "signature": "void onMoveFailure(@NonNull Receipt oldReceipt, @Nullable Throwable e)", "full_signature": "@Override public void onMoveFailure(@NonNull Receipt oldReceipt, @Nullable Throwable e)", "class_method_signature": "ReceiptRefreshTripPricesListener.onMoveFailure(@NonNull Receipt oldReceipt, @Nullable Throwable e)", "testcase": false, "constructor": false}, {"identifier": "onCopySuccess", "parameters": "(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt)", "modifiers": "@Override public", "return": "void", "signature": "void onCopySuccess(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt)", "full_signature": "@Override public void onCopySuccess(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt)", "class_method_signature": "ReceiptRefreshTripPricesListener.onCopySuccess(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt)", "testcase": false, "constructor": false}, {"identifier": "onCopyFailure", "parameters": "(@NonNull Receipt oldReceipt, @Nullable Throwable e)", "modifiers": "@Override public", "return": "void", "signature": "void onCopyFailure(@NonNull Receipt oldReceipt, @Nullable Throwable e)", "full_signature": "@Override public void onCopyFailure(@NonNull Receipt oldReceipt, @Nullable Throwable e)", "class_method_signature": "ReceiptRefreshTripPricesListener.onCopyFailure(@NonNull Receipt oldReceipt, @Nullable Throwable e)", "testcase": false, "constructor": false}, {"identifier": "onGetSuccess", "parameters": "(@NonNull List<Receipt> list, @NonNull Trip trip)", "modifiers": "@Override public", "return": "void", "signature": "void onGetSuccess(@NonNull List<Receipt> list, @NonNull Trip trip)", "full_signature": "@Override public void onGetSuccess(@NonNull List<Receipt> list, @NonNull Trip trip)", "class_method_signature": "ReceiptRefreshTripPricesListener.onGetSuccess(@NonNull List<Receipt> list, @NonNull Trip trip)", "testcase": false, "constructor": false}, {"identifier": "onGetFailure", "parameters": "(@Nullable Throwable e, @NonNull Trip trip)", "modifiers": "@Override public", "return": "void", "signature": "void onGetFailure(@Nullable Throwable e, @NonNull Trip trip)", "full_signature": "@Override public void onGetFailure(@Nullable Throwable e, @NonNull Trip trip)", "class_method_signature": "ReceiptRefreshTripPricesListener.onGetFailure(@Nullable Throwable e, @NonNull Trip trip)", "testcase": false, "constructor": false}], "file": "app/src/main/java/co/smartreceipts/android/persistence/database/controllers/impl/ReceiptRefreshTripPricesListener.java"}, "focal_method": {"identifier": "onCopySuccess", "parameters": "(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onCopySuccess(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt) {\n        mTripTableController.get();\n    }", "signature": "void onCopySuccess(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt)", "full_signature": "@Override public void onCopySuccess(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt)", "class_method_signature": "ReceiptRefreshTripPricesListener.onCopySuccess(@NonNull Receipt oldReceipt, @NonNull Receipt newReceipt)", "testcase": false, "constructor": false, "invocations": ["get"]}, "repository": {"repo_id": 2684727, "url": "https://github.com/wbaumann/SmartReceiptsLibrary", "stars": 166, "created": "11/1/2011 12:32:39 AM +00:00", "updates": "2020-01-26T22:04:24+00:00", "fork": "False", "license": "licensed"}}