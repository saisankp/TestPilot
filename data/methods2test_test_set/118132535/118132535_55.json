{"test_class": {"identifier": "EventProcessorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private EventProcessor<String, Integer, Long> underTest;", "modifier": "private", "type": "EventProcessor<String, Integer, Long>", "declarator": "underTest", "var_name": "underTest"}, {"original_string": "private RecordingConsumer<Long> effectConsumer;", "modifier": "private", "type": "RecordingConsumer<Long>", "declarator": "effectConsumer", "var_name": "effectConsumer"}, {"original_string": "private RecordingConsumer<String> stateConsumer;", "modifier": "private", "type": "RecordingConsumer<String>", "declarator": "stateConsumer", "var_name": "stateConsumer"}], "file": "mobius-core/src/test/java/com/spotify/mobius/EventProcessorTest.java"}, "test_case": {"identifier": "shouldEmitEffectsWhenStateChanges", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldEmitEffectsWhenStateChanges() throws Exception {\n    effectConsumer.clearValues();\n    underTest.update(3);\n    effectConsumer.assertValuesInAnyOrder(10L, 20L, 30L);\n  }", "signature": "void shouldEmitEffectsWhenStateChanges()", "full_signature": "@Test public void shouldEmitEffectsWhenStateChanges()", "class_method_signature": "EventProcessorTest.shouldEmitEffectsWhenStateChanges()", "testcase": true, "constructor": false, "invocations": ["clearValues", "update", "assertValuesInAnyOrder"]}, "focal_class": {"identifier": "EventProcessor", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final MobiusStore<M, E, F> store;", "modifier": "private final", "type": "MobiusStore<M, E, F>", "declarator": "store", "var_name": "store"}, {"original_string": "private final Consumer<F> effectConsumer;", "modifier": "private final", "type": "Consumer<F>", "declarator": "effectConsumer", "var_name": "effectConsumer"}, {"original_string": "private final Consumer<M> modelConsumer;", "modifier": "private final", "type": "Consumer<M>", "declarator": "modelConsumer", "var_name": "modelConsumer"}], "methods": [{"identifier": "EventProcessor", "parameters": "(\n      MobiusStore<M, E, F> store, Consumer<F> effectConsumer, Consumer<M> modelConsumer)", "modifiers": "", "return": "", "signature": " EventProcessor(\n      MobiusStore<M, E, F> store, Consumer<F> effectConsumer, Consumer<M> modelConsumer)", "full_signature": "  EventProcessor(\n      MobiusStore<M, E, F> store, Consumer<F> effectConsumer, Consumer<M> modelConsumer)", "class_method_signature": "EventProcessor.EventProcessor(\n      MobiusStore<M, E, F> store, Consumer<F> effectConsumer, Consumer<M> modelConsumer)", "testcase": false, "constructor": true}, {"identifier": "update", "parameters": "(E event)", "modifiers": "synchronized", "return": "void", "signature": "void update(E event)", "full_signature": "synchronized void update(E event)", "class_method_signature": "EventProcessor.update(E event)", "testcase": false, "constructor": false}, {"identifier": "dispatchModel", "parameters": "(M model)", "modifiers": "private", "return": "void", "signature": "void dispatchModel(M model)", "full_signature": "private void dispatchModel(M model)", "class_method_signature": "EventProcessor.dispatchModel(M model)", "testcase": false, "constructor": false}, {"identifier": "dispatchEffects", "parameters": "(Iterable<F> effects)", "modifiers": "private", "return": "void", "signature": "void dispatchEffects(Iterable<F> effects)", "full_signature": "private void dispatchEffects(Iterable<F> effects)", "class_method_signature": "EventProcessor.dispatchEffects(Iterable<F> effects)", "testcase": false, "constructor": false}], "file": "mobius-core/src/main/java/com/spotify/mobius/EventProcessor.java"}, "focal_method": {"identifier": "update", "parameters": "(E event)", "modifiers": "synchronized", "return": "void", "body": "synchronized void update(E event) {\n    Next<M, F> next = store.update(event);\n\n    next.ifHasModel(\n        new Consumer<M>() {\n          @Override\n          public void accept(M model) {\n            dispatchModel(model);\n          }\n        });\n    dispatchEffects(next.effects());\n  }", "signature": "void update(E event)", "full_signature": "synchronized void update(E event)", "class_method_signature": "EventProcessor.update(E event)", "testcase": false, "constructor": false, "invocations": ["update", "ifHasModel", "dispatchModel", "dispatchEffects", "effects"]}, "repository": {"repo_id": 118132535, "url": "https://github.com/spotify/mobius", "stars": 663, "created": "1/19/2018 2:07:51 PM +00:00", "updates": "2020-01-27T22:05:43+00:00", "fork": "False", "license": "licensed"}}