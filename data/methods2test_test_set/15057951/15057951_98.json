{"test_class": {"identifier": "NamedParamRepositoryFactoryTest", "superclass": "", "interfaces": "", "fields": [], "file": "smartparam-engine/src/test/java/org/smartparam/engine/config/NamedParamRepositoryFactoryTest.java"}, "test_case": {"identifier": "shouldAutoGenerateRepositoryNameFromClassSimpleNameWhenNoneSpecified", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldAutoGenerateRepositoryNameFromClassSimpleNameWhenNoneSpecified() {\n        // given\n        ParamRepository repository = mock(ParamRepository.class);\n        String repositoryClassName = repository.getClass().getSimpleName();\n        NamedParamRepositoryFactory factory = new NamedParamRepositoryFactory();\n\n        // when\n        NamedParamRepository namedRepository = factory.create(repository);\n\n        // then\n        assertThat(namedRepository).hasName(repositoryClassName);\n    }", "signature": "void shouldAutoGenerateRepositoryNameFromClassSimpleNameWhenNoneSpecified()", "full_signature": "@Test public void shouldAutoGenerateRepositoryNameFromClassSimpleNameWhenNoneSpecified()", "class_method_signature": "NamedParamRepositoryFactoryTest.shouldAutoGenerateRepositoryNameFromClassSimpleNameWhenNoneSpecified()", "testcase": true, "constructor": false, "invocations": ["mock", "getSimpleName", "getClass", "create", "hasName", "assertThat"]}, "focal_class": {"identifier": "NamedParamRepositoryFactory", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Map<Class<? extends ParamRepository>, Integer> defaultNameCounter = new HashMap<Class<? extends ParamRepository>, Integer>();", "modifier": "private final", "type": "Map<Class<? extends ParamRepository>, Integer>", "declarator": "defaultNameCounter = new HashMap<Class<? extends ParamRepository>, Integer>()", "var_name": "defaultNameCounter"}], "methods": [{"identifier": "NamedParamRepositoryFactory", "parameters": "()", "modifiers": "public", "return": "", "signature": " NamedParamRepositoryFactory()", "full_signature": "public  NamedParamRepositoryFactory()", "class_method_signature": "NamedParamRepositoryFactory.NamedParamRepositoryFactory()", "testcase": false, "constructor": true}, {"identifier": "create", "parameters": "(RepositoryName repositoryName, ParamRepository repository)", "modifiers": "public", "return": "NamedParamRepository", "signature": "NamedParamRepository create(RepositoryName repositoryName, ParamRepository repository)", "full_signature": "public NamedParamRepository create(RepositoryName repositoryName, ParamRepository repository)", "class_method_signature": "NamedParamRepositoryFactory.create(RepositoryName repositoryName, ParamRepository repository)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(String repositoryName, ParamRepository repository)", "modifiers": "public", "return": "NamedParamRepository", "signature": "NamedParamRepository create(String repositoryName, ParamRepository repository)", "full_signature": "public NamedParamRepository create(String repositoryName, ParamRepository repository)", "class_method_signature": "NamedParamRepositoryFactory.create(String repositoryName, ParamRepository repository)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(ParamRepository repository)", "modifiers": "public", "return": "NamedParamRepository", "signature": "NamedParamRepository create(ParamRepository repository)", "full_signature": "public NamedParamRepository create(ParamRepository repository)", "class_method_signature": "NamedParamRepositoryFactory.create(ParamRepository repository)", "testcase": false, "constructor": false}, {"identifier": "assignName", "parameters": "(ParamRepository repository)", "modifiers": "private", "return": "RepositoryName", "signature": "RepositoryName assignName(ParamRepository repository)", "full_signature": "private RepositoryName assignName(ParamRepository repository)", "class_method_signature": "NamedParamRepositoryFactory.assignName(ParamRepository repository)", "testcase": false, "constructor": false}], "file": "smartparam-engine/src/main/java/org/smartparam/engine/config/NamedParamRepositoryFactory.java"}, "focal_method": {"identifier": "create", "parameters": "(RepositoryName repositoryName, ParamRepository repository)", "modifiers": "public", "return": "NamedParamRepository", "body": "public NamedParamRepository create(RepositoryName repositoryName, ParamRepository repository) {\n        return new NamedParamRepository(repositoryName, repository);\n    }", "signature": "NamedParamRepository create(RepositoryName repositoryName, ParamRepository repository)", "full_signature": "public NamedParamRepository create(RepositoryName repositoryName, ParamRepository repository)", "class_method_signature": "NamedParamRepositoryFactory.create(RepositoryName repositoryName, ParamRepository repository)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 15057951, "url": "https://github.com/smartparam/smartparam", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 27, "size": 2358, "license": "licensed"}}