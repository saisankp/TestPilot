{"test_class": {"identifier": "BugControllerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MediaType contentType =\n      new MediaType(\n          MediaType.APPLICATION_JSON.getType(),\n          MediaType.APPLICATION_JSON.getSubtype(),\n          Charset.forName(\"utf8\"));", "modifier": "private", "type": "MediaType", "declarator": "contentType =\n      new MediaType(\n          MediaType.APPLICATION_JSON.getType(),\n          MediaType.APPLICATION_JSON.getSubtype(),\n          Charset.forName(\"utf8\"))", "var_name": "contentType"}, {"original_string": "private MockMvc mockMvc;", "modifier": "private", "type": "MockMvc", "declarator": "mockMvc", "var_name": "mockMvc"}, {"original_string": "private HttpMessageConverter<?> mappingJackson2HttpMessageConverter;", "modifier": "private", "type": "HttpMessageConverter<?>", "declarator": "mappingJackson2HttpMessageConverter", "var_name": "mappingJackson2HttpMessageConverter"}, {"original_string": "@Autowired private BugRepository bugRepository;", "modifier": "@Autowired private", "type": "BugRepository", "declarator": "bugRepository", "var_name": "bugRepository"}, {"original_string": "@Autowired private ConstructIdRepository cidRepository;", "modifier": "@Autowired private", "type": "ConstructIdRepository", "declarator": "cidRepository", "var_name": "cidRepository"}, {"original_string": "@Autowired private ConstructChangeRepository ccRepository;", "modifier": "@Autowired private", "type": "ConstructChangeRepository", "declarator": "ccRepository", "var_name": "ccRepository"}, {"original_string": "@Autowired private LibraryRepository libRepository;", "modifier": "@Autowired private", "type": "LibraryRepository", "declarator": "libRepository", "var_name": "libRepository"}, {"original_string": "@Autowired private LibraryIdRepository libIdRepository;", "modifier": "@Autowired private", "type": "LibraryIdRepository", "declarator": "libIdRepository", "var_name": "libIdRepository"}, {"original_string": "@Autowired private AffectedLibraryRepository afflibRepository;", "modifier": "@Autowired private", "type": "AffectedLibraryRepository", "declarator": "afflibRepository", "var_name": "afflibRepository"}, {"original_string": "@Autowired private WebApplicationContext webApplicationContext;", "modifier": "@Autowired private", "type": "WebApplicationContext", "declarator": "webApplicationContext", "var_name": "webApplicationContext"}, {"original_string": "private static final String BUG_JSON =\n      \"{\\\"id\\\":1,\\\"bugId\\\":\\\"CVE-2014-0050\\\",\\\"source\\\":\\\"NVD\\\",\\\"description\\\":\\\"MultipartStream.java\"\n          + \" in Apache Commons FileUpload before 1.3.1, as used in Apache\"\n          + \" [...]\\\",\\\"url\\\":\\\"https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0050\\\",\\\"constructChanges\\\":[{\\\"repo\\\":\\\"svn.apache.org\\\",\\\"commit\\\":\\\"123456\\\",\\\"path\\\":\\\"/branch/1.x/src/main/java/com/acme/Foo.java\\\",\\\"constructId\\\":{\\\"lang\\\":\\\"JAVA\\\",\\\"type\\\":\\\"CLAS\\\",\\\"qname\\\":\\\"com.acme.Foo\\\"},\\\"committedAt\\\":\\\"2016-05-13T14:35:50.274+0000\\\",\\\"changeType\\\":\\\"MOD\\\"},{\\\"repo\\\":\\\"svn.apache.org\\\",\\\"commit\\\":\\\"123456\\\",\\\"path\\\":\\\"/trunk/src/main/java/com/acme/Foo.java\\\",\\\"constructId\\\":{\\\"lang\\\":\\\"JAVA\\\",\\\"type\\\":\\\"CLAS\\\",\\\"qname\\\":\\\"com.acme.Foo\\\"},\\\"committedAt\\\":\\\"2016-05-13T14:35:50.274+0000\\\",\\\"changeType\\\":\\\"MOD\\\"}],\\\"countConstructChanges\\\":2}\";", "modifier": "private static final", "type": "String", "declarator": "BUG_JSON =\n      \"{\\\"id\\\":1,\\\"bugId\\\":\\\"CVE-2014-0050\\\",\\\"source\\\":\\\"NVD\\\",\\\"description\\\":\\\"MultipartStream.java\"\n          + \" in Apache Commons FileUpload before 1.3.1, as used in Apache\"\n          + \" [...]\\\",\\\"url\\\":\\\"https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0050\\\",\\\"constructChanges\\\":[{\\\"repo\\\":\\\"svn.apache.org\\\",\\\"commit\\\":\\\"123456\\\",\\\"path\\\":\\\"/branch/1.x/src/main/java/com/acme/Foo.java\\\",\\\"constructId\\\":{\\\"lang\\\":\\\"JAVA\\\",\\\"type\\\":\\\"CLAS\\\",\\\"qname\\\":\\\"com.acme.Foo\\\"},\\\"committedAt\\\":\\\"2016-05-13T14:35:50.274+0000\\\",\\\"changeType\\\":\\\"MOD\\\"},{\\\"repo\\\":\\\"svn.apache.org\\\",\\\"commit\\\":\\\"123456\\\",\\\"path\\\":\\\"/trunk/src/main/java/com/acme/Foo.java\\\",\\\"constructId\\\":{\\\"lang\\\":\\\"JAVA\\\",\\\"type\\\":\\\"CLAS\\\",\\\"qname\\\":\\\"com.acme.Foo\\\"},\\\"committedAt\\\":\\\"2016-05-13T14:35:50.274+0000\\\",\\\"changeType\\\":\\\"MOD\\\"}],\\\"countConstructChanges\\\":2}\"", "var_name": "BUG_JSON"}, {"original_string": "private static final String BUG_ID = \"CVE-2014-0050\";", "modifier": "private static final", "type": "String", "declarator": "BUG_ID = \"CVE-2014-0050\"", "var_name": "BUG_ID"}, {"original_string": "private static final String BUG_URL1 =\n      \"https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0050\";", "modifier": "private static final", "type": "String", "declarator": "BUG_URL1 =\n      \"https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0050\"", "var_name": "BUG_URL1"}, {"original_string": "private static final String BUG_URL2 = \"http://svn.apache.org/r1565143\";", "modifier": "private static final", "type": "String", "declarator": "BUG_URL2 = \"http://svn.apache.org/r1565143\"", "var_name": "BUG_URL2"}, {"original_string": "private static final String BUG_DESCR =\n      \"MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat,\"\n          + \" JBoss Web, and other products, allows remote attackers to cause a denial of service\"\n          + \" (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses\"\n          + \" a loop&#039;s intended exit conditions.\";", "modifier": "private static final", "type": "String", "declarator": "BUG_DESCR =\n      \"MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat,\"\n          + \" JBoss Web, and other products, allows remote attackers to cause a denial of service\"\n          + \" (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses\"\n          + \" a loop&#039;s intended exit conditions.\"", "var_name": "BUG_DESCR"}], "file": "rest-backend/src/test/java/org/eclipse/steady/backend/rest/BugControllerTest.java"}, "test_case": {"identifier": "testGetBug", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetBug() throws Exception {\n    final Bug bug = this.createExampleBug(BUG_ID, BUG_DESCR);\n    this.bugRepository.customSave(bug, true);\n    mockMvc\n        .perform(get(\"/bugs/\" + bug.getBugId()))\n        .andExpect(status().isOk())\n        .andExpect(content().contentType(contentType))\n        .andExpect(jsonPath(\"$.bugId\", is(BUG_ID)))\n        .andExpect(jsonPath(\"$.reference[0]\", is(BUG_URL1)))\n        .andExpect(jsonPath(\"$.reference[1]\", is(BUG_URL2)))\n        .andExpect(jsonPath(\"$.description\", is(BUG_DESCR)));\n\n    // Repo must contain 1\n    assertEquals(1, this.bugRepository.count());\n  }", "signature": "void testGetBug()", "full_signature": "@Test public void testGetBug()", "class_method_signature": "BugControllerTest.testGetBug()", "testcase": true, "constructor": false, "invocations": ["createExampleBug", "customSave", "andExpect", "andExpect", "andExpect", "andExpect", "andExpect", "andExpect", "perform", "get", "getBugId", "isOk", "status", "contentType", "content", "jsonPath", "is", "jsonPath", "is", "jsonPath", "is", "jsonPath", "is", "assertEquals", "count"]}, "focal_class": {"identifier": "BugController", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger log = LoggerFactory.getLogger(BugController.class);", "modifier": "private static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(BugController.class)", "var_name": "log"}, {"original_string": "private final BugRepository bugRepository;", "modifier": "private final", "type": "BugRepository", "declarator": "bugRepository", "var_name": "bugRepository"}, {"original_string": "private final AffectedLibraryRepository afflibRepository;", "modifier": "private final", "type": "AffectedLibraryRepository", "declarator": "afflibRepository", "var_name": "afflibRepository"}, {"original_string": "private final LibraryRepository libRepository;", "modifier": "private final", "type": "LibraryRepository", "declarator": "libRepository", "var_name": "libRepository"}, {"original_string": "private final TenantRepository tenantRepository;", "modifier": "private final", "type": "TenantRepository", "declarator": "tenantRepository", "var_name": "tenantRepository"}], "methods": [{"identifier": "BugController", "parameters": "(\n      BugRepository bugRepository,\n      AffectedLibraryRepository afflibRepository,\n      LibraryRepository libRepository,\n      TenantRepository tenantRepository)", "modifiers": "@Autowired", "return": "", "signature": " BugController(\n      BugRepository bugRepository,\n      AffectedLibraryRepository afflibRepository,\n      LibraryRepository libRepository,\n      TenantRepository tenantRepository)", "full_signature": "@Autowired  BugController(\n      BugRepository bugRepository,\n      AffectedLibraryRepository afflibRepository,\n      LibraryRepository libRepository,\n      TenantRepository tenantRepository)", "class_method_signature": "BugController.BugController(\n      BugRepository bugRepository,\n      AffectedLibraryRepository afflibRepository,\n      LibraryRepository libRepository,\n      TenantRepository tenantRepository)", "testcase": false, "constructor": true}, {"identifier": "getBugs", "parameters": "(\n      @RequestParam(value = \"lang\", required = false) ProgrammingLanguage lang)", "modifiers": "@RequestMapping( value = \"\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "Iterable<Bug>", "signature": "Iterable<Bug> getBugs(\n      @RequestParam(value = \"lang\", required = false) ProgrammingLanguage lang)", "full_signature": "@RequestMapping( value = \"\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public Iterable<Bug> getBugs(\n      @RequestParam(value = \"lang\", required = false) ProgrammingLanguage lang)", "class_method_signature": "BugController.getBugs(\n      @RequestParam(value = \"lang\", required = false) ProgrammingLanguage lang)", "testcase": false, "constructor": false}, {"identifier": "getBugAffLibIds", "parameters": "()", "modifiers": "@RequestMapping( value = \"/dump\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugDetails.class) public", "return": "Iterable<Bug>", "signature": "Iterable<Bug> getBugAffLibIds()", "full_signature": "@RequestMapping( value = \"/dump\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugDetails.class) public Iterable<Bug> getBugAffLibIds()", "class_method_signature": "BugController.getBugAffLibIds()", "testcase": false, "constructor": false}, {"identifier": "createBug", "parameters": "(@RequestBody Bug bug)", "modifiers": "@RequestMapping( value = \"\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) public", "return": "ResponseEntity<Bug>", "signature": "ResponseEntity<Bug> createBug(@RequestBody Bug bug)", "full_signature": "@RequestMapping( value = \"\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) public ResponseEntity<Bug> createBug(@RequestBody Bug bug)", "class_method_signature": "BugController.createBug(@RequestBody Bug bug)", "testcase": false, "constructor": false}, {"identifier": "createAllBugs", "parameters": "(@RequestBody Bug[] bugs)", "modifiers": "@RequestMapping( value = \"/dump\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugDetails.class) public", "return": "ResponseEntity<Bug[]>", "signature": "ResponseEntity<Bug[]> createAllBugs(@RequestBody Bug[] bugs)", "full_signature": "@RequestMapping( value = \"/dump\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugDetails.class) public ResponseEntity<Bug[]> createAllBugs(@RequestBody Bug[] bugs)", "class_method_signature": "BugController.createAllBugs(@RequestBody Bug[] bugs)", "testcase": false, "constructor": false}, {"identifier": "getBug", "parameters": "(@PathVariable String bugid)", "modifiers": "@RequestMapping( value = \"/{bugid}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugDetails.class) public", "return": "ResponseEntity<Bug>", "signature": "ResponseEntity<Bug> getBug(@PathVariable String bugid)", "full_signature": "@RequestMapping( value = \"/{bugid}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugDetails.class) public ResponseEntity<Bug> getBug(@PathVariable String bugid)", "class_method_signature": "BugController.getBug(@PathVariable String bugid)", "testcase": false, "constructor": false}, {"identifier": "isBugExisting", "parameters": "(@PathVariable String bugid)", "modifiers": "@RequestMapping(value = \"/{bugid}\", method = RequestMethod.OPTIONS) public", "return": "ResponseEntity<Bug>", "signature": "ResponseEntity<Bug> isBugExisting(@PathVariable String bugid)", "full_signature": "@RequestMapping(value = \"/{bugid}\", method = RequestMethod.OPTIONS) public ResponseEntity<Bug> isBugExisting(@PathVariable String bugid)", "class_method_signature": "BugController.isBugExisting(@PathVariable String bugid)", "testcase": false, "constructor": false}, {"identifier": "updateBug", "parameters": "(@PathVariable String bugid, @RequestBody Bug bug)", "modifiers": "@RequestMapping( value = \"/{bugid}\", method = RequestMethod.PUT, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) public", "return": "ResponseEntity<Bug>", "signature": "ResponseEntity<Bug> updateBug(@PathVariable String bugid, @RequestBody Bug bug)", "full_signature": "@RequestMapping( value = \"/{bugid}\", method = RequestMethod.PUT, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) public ResponseEntity<Bug> updateBug(@PathVariable String bugid, @RequestBody Bug bug)", "class_method_signature": "BugController.updateBug(@PathVariable String bugid, @RequestBody Bug bug)", "testcase": false, "constructor": false}, {"identifier": "deleteBug", "parameters": "(@PathVariable String bugid)", "modifiers": "@RequestMapping(value = \"/{bugid}\", method = RequestMethod.DELETE) @CacheEvict(value = \"bug\") public", "return": "ResponseEntity<Resource<Bug>>", "signature": "ResponseEntity<Resource<Bug>> deleteBug(@PathVariable String bugid)", "full_signature": "@RequestMapping(value = \"/{bugid}\", method = RequestMethod.DELETE) @CacheEvict(value = \"bug\") public ResponseEntity<Resource<Bug>> deleteBug(@PathVariable String bugid)", "class_method_signature": "BugController.deleteBug(@PathVariable String bugid)", "testcase": false, "constructor": false}, {"identifier": "createAffectedLibrary", "parameters": "(\n      @PathVariable String bugid,\n      @RequestParam(value = \"source\", required = true) AffectedVersionSource source,\n      @RequestBody AffectedLibrary[] affectedLibraries)", "modifiers": "@RequestMapping( value = \"/{bugid}/affectedLibIds\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugAffLibs.class) public", "return": "ResponseEntity<List<AffectedLibrary>>", "signature": "ResponseEntity<List<AffectedLibrary>> createAffectedLibrary(\n      @PathVariable String bugid,\n      @RequestParam(value = \"source\", required = true) AffectedVersionSource source,\n      @RequestBody AffectedLibrary[] affectedLibraries)", "full_signature": "@RequestMapping( value = \"/{bugid}/affectedLibIds\", method = RequestMethod.POST, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugAffLibs.class) public ResponseEntity<List<AffectedLibrary>> createAffectedLibrary(\n      @PathVariable String bugid,\n      @RequestParam(value = \"source\", required = true) AffectedVersionSource source,\n      @RequestBody AffectedLibrary[] affectedLibraries)", "class_method_signature": "BugController.createAffectedLibrary(\n      @PathVariable String bugid,\n      @RequestParam(value = \"source\", required = true) AffectedVersionSource source,\n      @RequestBody AffectedLibrary[] affectedLibraries)", "testcase": false, "constructor": false}, {"identifier": "addAffectedLibrary", "parameters": "(\n      @PathVariable String bugid,\n      @RequestParam(value = \"source\", required = true) AffectedVersionSource source,\n      @RequestBody AffectedLibrary[] affectedLibraries)", "modifiers": "@RequestMapping( value = \"/{bugid}/affectedLibIds\", method = RequestMethod.PUT, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugAffLibs.class) public", "return": "ResponseEntity<List<AffectedLibrary>>", "signature": "ResponseEntity<List<AffectedLibrary>> addAffectedLibrary(\n      @PathVariable String bugid,\n      @RequestParam(value = \"source\", required = true) AffectedVersionSource source,\n      @RequestBody AffectedLibrary[] affectedLibraries)", "full_signature": "@RequestMapping( value = \"/{bugid}/affectedLibIds\", method = RequestMethod.PUT, consumes = {\"application/json;charset=UTF-8\"}, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugAffLibs.class) public ResponseEntity<List<AffectedLibrary>> addAffectedLibrary(\n      @PathVariable String bugid,\n      @RequestParam(value = \"source\", required = true) AffectedVersionSource source,\n      @RequestBody AffectedLibrary[] affectedLibraries)", "class_method_signature": "BugController.addAffectedLibrary(\n      @PathVariable String bugid,\n      @RequestParam(value = \"source\", required = true) AffectedVersionSource source,\n      @RequestBody AffectedLibrary[] affectedLibraries)", "testcase": false, "constructor": false}, {"identifier": "getAllAffectedLibraries", "parameters": "(\n      @PathVariable String bugid,\n      @RequestParam(value = \"resolved\", required = false, defaultValue = \"false\") Boolean resolved,\n      @RequestParam(value = \"source\", required = false) AffectedVersionSource source,\n      @RequestParam(value = \"onlyWellKnown\", required = false, defaultValue = \"false\")\n          Boolean onlyWellknown)", "modifiers": "@RequestMapping( value = \"/{bugid}/affectedLibIds\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugAffLibs.class) public", "return": "ResponseEntity<List<AffectedLibrary>>", "signature": "ResponseEntity<List<AffectedLibrary>> getAllAffectedLibraries(\n      @PathVariable String bugid,\n      @RequestParam(value = \"resolved\", required = false, defaultValue = \"false\") Boolean resolved,\n      @RequestParam(value = \"source\", required = false) AffectedVersionSource source,\n      @RequestParam(value = \"onlyWellKnown\", required = false, defaultValue = \"false\")\n          Boolean onlyWellknown)", "full_signature": "@RequestMapping( value = \"/{bugid}/affectedLibIds\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugAffLibs.class) public ResponseEntity<List<AffectedLibrary>> getAllAffectedLibraries(\n      @PathVariable String bugid,\n      @RequestParam(value = \"resolved\", required = false, defaultValue = \"false\") Boolean resolved,\n      @RequestParam(value = \"source\", required = false) AffectedVersionSource source,\n      @RequestParam(value = \"onlyWellKnown\", required = false, defaultValue = \"false\")\n          Boolean onlyWellknown)", "class_method_signature": "BugController.getAllAffectedLibraries(\n      @PathVariable String bugid,\n      @RequestParam(value = \"resolved\", required = false, defaultValue = \"false\") Boolean resolved,\n      @RequestParam(value = \"source\", required = false) AffectedVersionSource source,\n      @RequestParam(value = \"onlyWellKnown\", required = false, defaultValue = \"false\")\n          Boolean onlyWellknown)", "testcase": false, "constructor": false}, {"identifier": "getAffectedLibrariesByGA", "parameters": "(\n      @PathVariable String bugid,\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @RequestParam(value = \"source\", required = false) AffectedVersionSource source)", "modifiers": "@RequestMapping( value = \"/{bugid}/affectedLibIds/{mvnGroup:.+}/{artifact:.+}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugAffLibsDetails.class) public", "return": "ResponseEntity<List<AffectedLibrary>>", "signature": "ResponseEntity<List<AffectedLibrary>> getAffectedLibrariesByGA(\n      @PathVariable String bugid,\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @RequestParam(value = \"source\", required = false) AffectedVersionSource source)", "full_signature": "@RequestMapping( value = \"/{bugid}/affectedLibIds/{mvnGroup:.+}/{artifact:.+}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugAffLibsDetails.class) public ResponseEntity<List<AffectedLibrary>> getAffectedLibrariesByGA(\n      @PathVariable String bugid,\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @RequestParam(value = \"source\", required = false) AffectedVersionSource source)", "class_method_signature": "BugController.getAffectedLibrariesByGA(\n      @PathVariable String bugid,\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @RequestParam(value = \"source\", required = false) AffectedVersionSource source)", "testcase": false, "constructor": false}, {"identifier": "getAffectedLibraryDetails", "parameters": "(\n      @PathVariable String bugid,\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"source\", required = false) AffectedVersionSource source)", "modifiers": "@RequestMapping( value = \"/{bugid}/affectedLibIds/{mvnGroup:.+}/{artifact:.+}/{version:.+}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugAffLibsDetails.class) public", "return": "ResponseEntity<List<AffectedLibrary>>", "signature": "ResponseEntity<List<AffectedLibrary>> getAffectedLibraryDetails(\n      @PathVariable String bugid,\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"source\", required = false) AffectedVersionSource source)", "full_signature": "@RequestMapping( value = \"/{bugid}/affectedLibIds/{mvnGroup:.+}/{artifact:.+}/{version:.+}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugAffLibsDetails.class) public ResponseEntity<List<AffectedLibrary>> getAffectedLibraryDetails(\n      @PathVariable String bugid,\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"source\", required = false) AffectedVersionSource source)", "class_method_signature": "BugController.getAffectedLibraryDetails(\n      @PathVariable String bugid,\n      @PathVariable String mvnGroup,\n      @PathVariable String artifact,\n      @PathVariable String version,\n      @RequestParam(value = \"source\", required = false) AffectedVersionSource source)", "testcase": false, "constructor": false}, {"identifier": "areBugAffectedLibrariesExisting", "parameters": "(\n      @PathVariable String bugid,\n      @RequestParam(value = \"source\", required = true) AffectedVersionSource source)", "modifiers": "@RequestMapping(value = \"/{bugid}/affectedLibIds\", method = RequestMethod.OPTIONS) public", "return": "ResponseEntity<List<AffectedLibrary>>", "signature": "ResponseEntity<List<AffectedLibrary>> areBugAffectedLibrariesExisting(\n      @PathVariable String bugid,\n      @RequestParam(value = \"source\", required = true) AffectedVersionSource source)", "full_signature": "@RequestMapping(value = \"/{bugid}/affectedLibIds\", method = RequestMethod.OPTIONS) public ResponseEntity<List<AffectedLibrary>> areBugAffectedLibrariesExisting(\n      @PathVariable String bugid,\n      @RequestParam(value = \"source\", required = true) AffectedVersionSource source)", "class_method_signature": "BugController.areBugAffectedLibrariesExisting(\n      @PathVariable String bugid,\n      @RequestParam(value = \"source\", required = true) AffectedVersionSource source)", "testcase": false, "constructor": false}, {"identifier": "deleteAffectedLibraries", "parameters": "(\n      @PathVariable String bugid,\n      @RequestParam(value = \"source\", required = true) AffectedVersionSource source)", "modifiers": "@RequestMapping( value = \"/{bugid}/affectedLibIds\", method = RequestMethod.DELETE, produces = {\"application/json;charset=UTF-8\"}) public", "return": "ResponseEntity<List<AffectedLibrary>>", "signature": "ResponseEntity<List<AffectedLibrary>> deleteAffectedLibraries(\n      @PathVariable String bugid,\n      @RequestParam(value = \"source\", required = true) AffectedVersionSource source)", "full_signature": "@RequestMapping( value = \"/{bugid}/affectedLibIds\", method = RequestMethod.DELETE, produces = {\"application/json;charset=UTF-8\"}) public ResponseEntity<List<AffectedLibrary>> deleteAffectedLibraries(\n      @PathVariable String bugid,\n      @RequestParam(value = \"source\", required = true) AffectedVersionSource source)", "class_method_signature": "BugController.deleteAffectedLibraries(\n      @PathVariable String bugid,\n      @RequestParam(value = \"source\", required = true) AffectedVersionSource source)", "testcase": false, "constructor": false}, {"identifier": "getAllBugLibraries", "parameters": "(@PathVariable String bugid)", "modifiers": "@RequestMapping( value = \"/{bugid}/libraries\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public", "return": "ResponseEntity<List<Library>>", "signature": "ResponseEntity<List<Library>> getAllBugLibraries(@PathVariable String bugid)", "full_signature": "@RequestMapping( value = \"/{bugid}/libraries\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.Default.class) public ResponseEntity<List<Library>> getAllBugLibraries(@PathVariable String bugid)", "class_method_signature": "BugController.getAllBugLibraries(@PathVariable String bugid)", "testcase": false, "constructor": false}], "file": "rest-backend/src/main/java/org/eclipse/steady/backend/rest/BugController.java"}, "focal_method": {"identifier": "getBug", "parameters": "(@PathVariable String bugid)", "modifiers": "@RequestMapping( value = \"/{bugid}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugDetails.class) public", "return": "ResponseEntity<Bug>", "body": "@RequestMapping(\n      value = \"/{bugid}\",\n      method = RequestMethod.GET,\n      produces = {\"application/json;charset=UTF-8\"})\n  @JsonView(Views.BugDetails.class)\n  public ResponseEntity<Bug> getBug(@PathVariable String bugid) {\n    final StopWatch sw = new StopWatch(\"GET bug [\" + bugid + \"]\").start();\n    try {\n      final Bug b = BugRepository.FILTER.findOne(this.bugRepository.findByBugId(bugid));\n      this.bugRepository.updateCachedCveData(b, false);\n      sw.stop();\n      return new ResponseEntity<Bug>(b, HttpStatus.OK);\n    } catch (EntityNotFoundException enfe) {\n      sw.stop(enfe);\n      return new ResponseEntity<Bug>(HttpStatus.NOT_FOUND);\n    } catch (Exception e) {\n      sw.stop(e);\n      return new ResponseEntity<Bug>(HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }", "signature": "ResponseEntity<Bug> getBug(@PathVariable String bugid)", "full_signature": "@RequestMapping( value = \"/{bugid}\", method = RequestMethod.GET, produces = {\"application/json;charset=UTF-8\"}) @JsonView(Views.BugDetails.class) public ResponseEntity<Bug> getBug(@PathVariable String bugid)", "class_method_signature": "BugController.getBug(@PathVariable String bugid)", "testcase": false, "constructor": false, "invocations": ["start", "findOne", "findByBugId", "updateCachedCveData", "stop", "stop", "stop"]}, "repository": {"repo_id": 145424401, "url": "https://github.com/eclipse/steady", "stars": 353, "created": "8/20/2018 1:54:15 PM +00:00", "updates": "2020-01-25T08:37:00+00:00", "fork": "False", "license": "licensed"}}