{"test_class": {"identifier": "ListenerRegistriesTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private ListenerRegistry<String, String> listenerRegistry;", "modifier": "@Mock\n    private", "type": "ListenerRegistry<String, String>", "declarator": "listenerRegistry", "var_name": "listenerRegistry"}], "file": "registry/src/test/java/ru/hyndo/sightmenu/registry/ListenerRegistriesTest.java"}, "test_case": {"identifier": "copyOfListenerRegistry", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @Test public", "return": "void", "body": "@SuppressWarnings(\"unchecked\")\n    @Test\n    public void copyOfListenerRegistry() {\n        assertNotNull(listenerRegistry);\n        Map<String, ListenerRegistry.RegisteredListener<String, String>> listeners = getListeners();\n        when(listenerRegistry.getRegisteredListeners()).thenReturn(listeners);\n        ListenerRegistry<String, String> copy = ListenerRegistries.copyOf(listenerRegistry, map -> {\n            ListenerRegistry<String, String> registry = mock(ListenerRegistry.class);\n            when(registry.getRegisteredListeners()).thenReturn(map);\n            return registry;\n        });\n        listeners.clear();\n        assertEquals(3, copy.getRegisteredListeners().size());\n\n    }", "signature": "void copyOfListenerRegistry()", "full_signature": "@SuppressWarnings(\"unchecked\") @Test public void copyOfListenerRegistry()", "class_method_signature": "ListenerRegistriesTest.copyOfListenerRegistry()", "testcase": true, "constructor": false, "invocations": ["assertNotNull", "getListeners", "thenReturn", "when", "getRegisteredListeners", "copyOf", "mock", "thenReturn", "when", "getRegisteredListeners", "clear", "assertEquals", "size", "getRegisteredListeners"]}, "focal_class": {"identifier": "ListenerRegistries", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "copyOf", "parameters": "(ListenerRegistry<I, F> registry,\n                                                       Function<Map<I, ListenerRegistry.RegisteredListener<I, F>>, ListenerRegistry<I, F>> registryFactory)", "modifiers": "public static", "return": "ListenerRegistry<I, F>", "signature": "ListenerRegistry<I, F> copyOf(ListenerRegistry<I, F> registry,\n                                                       Function<Map<I, ListenerRegistry.RegisteredListener<I, F>>, ListenerRegistry<I, F>> registryFactory)", "full_signature": "public static ListenerRegistry<I, F> copyOf(ListenerRegistry<I, F> registry,\n                                                       Function<Map<I, ListenerRegistry.RegisteredListener<I, F>>, ListenerRegistry<I, F>> registryFactory)", "class_method_signature": "ListenerRegistries.copyOf(ListenerRegistry<I, F> registry,\n                                                       Function<Map<I, ListenerRegistry.RegisteredListener<I, F>>, ListenerRegistry<I, F>> registryFactory)", "testcase": false, "constructor": false}, {"identifier": "newImmutableRegisteredListener", "parameters": "(I identifier, F listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "modifiers": "public static", "return": "ListenerRegistry.RegisteredListener<I, F>", "signature": "ListenerRegistry.RegisteredListener<I, F> newImmutableRegisteredListener(I identifier, F listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "full_signature": "public static ListenerRegistry.RegisteredListener<I, F> newImmutableRegisteredListener(I identifier, F listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "class_method_signature": "ListenerRegistries.newImmutableRegisteredListener(I identifier, F listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "testcase": false, "constructor": false}, {"identifier": "newImmutableRegisteredListener", "parameters": "(ListenerRegistry.RegisteredListener<I, F> listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "modifiers": "public static", "return": "ListenerRegistry.RegisteredListener<I, F>", "signature": "ListenerRegistry.RegisteredListener<I, F> newImmutableRegisteredListener(ListenerRegistry.RegisteredListener<I, F> listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "full_signature": "public static ListenerRegistry.RegisteredListener<I, F> newImmutableRegisteredListener(ListenerRegistry.RegisteredListener<I, F> listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "class_method_signature": "ListenerRegistries.newImmutableRegisteredListener(ListenerRegistry.RegisteredListener<I, F> listener,\n                                                                                                  ImmutableListenerProvider<I, F> immutableListenerProvider)", "testcase": false, "constructor": false}, {"identifier": "newRegisteredListener", "parameters": "(I id, F listener)", "modifiers": "public static", "return": "ListenerRegistry.RegisteredListener<I, F>", "signature": "ListenerRegistry.RegisteredListener<I, F> newRegisteredListener(I id, F listener)", "full_signature": "public static ListenerRegistry.RegisteredListener<I, F> newRegisteredListener(I id, F listener)", "class_method_signature": "ListenerRegistries.newRegisteredListener(I id, F listener)", "testcase": false, "constructor": false}, {"identifier": "newImmutableRegistry", "parameters": "(ListenerRegistry<I, F> registry)", "modifiers": "public static", "return": "ListenerRegistry<I, F>", "signature": "ListenerRegistry<I, F> newImmutableRegistry(ListenerRegistry<I, F> registry)", "full_signature": "public static ListenerRegistry<I, F> newImmutableRegistry(ListenerRegistry<I, F> registry)", "class_method_signature": "ListenerRegistries.newImmutableRegistry(ListenerRegistry<I, F> registry)", "testcase": false, "constructor": false}], "file": "registry/src/main/java/ru/hyndo/sightmenu/registry/ListenerRegistries.java"}, "focal_method": {"identifier": "copyOf", "parameters": "(ListenerRegistry<I, F> registry,\n                                                       Function<Map<I, ListenerRegistry.RegisteredListener<I, F>>, ListenerRegistry<I, F>> registryFactory)", "modifiers": "public static", "return": "ListenerRegistry<I, F>", "body": "public static <I, F> ListenerRegistry<I, F> copyOf(ListenerRegistry<I, F> registry,\n                                                       Function<Map<I, ListenerRegistry.RegisteredListener<I, F>>, ListenerRegistry<I, F>> registryFactory) {\n        Map<I, ListenerRegistry.RegisteredListener<I, F>> registeredListeners = registry.getRegisteredListeners();\n        Map<I, ListenerRegistry.RegisteredListener<I, F>> copy = new HashMap<>();\n        registeredListeners.forEach((name, register) -> copy.put(name, new SimpleRegisteredListener<>(register.getIdentifier(), register.getListener())));\n        return registryFactory.apply(copy);\n\n    }", "signature": "ListenerRegistry<I, F> copyOf(ListenerRegistry<I, F> registry,\n                                                       Function<Map<I, ListenerRegistry.RegisteredListener<I, F>>, ListenerRegistry<I, F>> registryFactory)", "full_signature": "public static ListenerRegistry<I, F> copyOf(ListenerRegistry<I, F> registry,\n                                                       Function<Map<I, ListenerRegistry.RegisteredListener<I, F>>, ListenerRegistry<I, F>> registryFactory)", "class_method_signature": "ListenerRegistries.copyOf(ListenerRegistry<I, F> registry,\n                                                       Function<Map<I, ListenerRegistry.RegisteredListener<I, F>>, ListenerRegistry<I, F>> registryFactory)", "testcase": false, "constructor": false, "invocations": ["getRegisteredListeners", "forEach", "put", "getIdentifier", "getListener", "apply"]}, "repository": {"repo_id": 128830029, "url": "https://github.com/hyndor/SightMenu", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 5, "size": 130, "license": "licensed"}}