{"test_class": {"identifier": "ModelImplementationProviderFinderImplTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ModelImplementationProviderFinderImpl modelImplementationProviderFinder;", "modifier": "private", "type": "ModelImplementationProviderFinderImpl", "declarator": "modelImplementationProviderFinder", "var_name": "modelImplementationProviderFinder"}], "file": "kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/test/java/org/kie/pmml/compiler/commons/implementations/ModelImplementationProviderFinderImplTest.java"}, "test_case": {"identifier": "getImplementations", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public <T extends Model, E extends KiePMMLModel> void getImplementations() {\n        final List<ModelImplementationProvider<T, E>> retrieved = modelImplementationProviderFinder.getImplementations(false);\n        assertNotNull(retrieved);\n        assertEquals(1, retrieved.size());\n        assertTrue(retrieved.get(0) instanceof TestingModelImplementationProvider);\n    }", "signature": "void getImplementations()", "full_signature": "@Test public void getImplementations()", "class_method_signature": "ModelImplementationProviderFinderImplTest.getImplementations()", "testcase": true, "constructor": false, "invocations": ["getImplementations", "assertNotNull", "assertEquals", "size", "assertTrue", "get"]}, "focal_class": {"identifier": "ModelImplementationProviderFinderImpl", "superclass": "", "interfaces": "implements ModelImplementationProviderFinder", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(ModelImplementationProviderFinderImpl.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(ModelImplementationProviderFinderImpl.class.getName())", "var_name": "logger"}, {"original_string": "private ServiceLoader<ModelImplementationProvider> loader = ServiceLoader.load(ModelImplementationProvider.class);", "modifier": "private", "type": "ServiceLoader<ModelImplementationProvider>", "declarator": "loader = ServiceLoader.load(ModelImplementationProvider.class)", "var_name": "loader"}], "methods": [{"identifier": "getImplementations", "parameters": "(boolean refresh)", "modifiers": "@Override @SuppressWarnings(\"rawtypes\") public", "return": "List<ModelImplementationProvider<T, E>>", "signature": "List<ModelImplementationProvider<T, E>> getImplementations(boolean refresh)", "full_signature": "@Override @SuppressWarnings(\"rawtypes\") public List<ModelImplementationProvider<T, E>> getImplementations(boolean refresh)", "class_method_signature": "ModelImplementationProviderFinderImpl.getImplementations(boolean refresh)", "testcase": false, "constructor": false}, {"identifier": "getProviders", "parameters": "(boolean refresh)", "modifiers": "@SuppressWarnings(\"rawtypes\") private", "return": "Iterator<ModelImplementationProvider>", "signature": "Iterator<ModelImplementationProvider> getProviders(boolean refresh)", "full_signature": "@SuppressWarnings(\"rawtypes\") private Iterator<ModelImplementationProvider> getProviders(boolean refresh)", "class_method_signature": "ModelImplementationProviderFinderImpl.getProviders(boolean refresh)", "testcase": false, "constructor": false}], "file": "kie-pmml-trusty/kie-pmml-compiler/kie-pmml-compiler-commons/src/main/java/org/kie/pmml/compiler/commons/implementations/ModelImplementationProviderFinderImpl.java"}, "focal_method": {"identifier": "getImplementations", "parameters": "(boolean refresh)", "modifiers": "@Override @SuppressWarnings(\"rawtypes\") public", "return": "List<ModelImplementationProvider<T, E>>", "body": "@Override\n    @SuppressWarnings(\"rawtypes\")\n    public <T extends Model, E extends KiePMMLModel> List<ModelImplementationProvider<T, E>> getImplementations(boolean refresh) {\n        logger.debug(\"getImplementations {}\", refresh);\n        List<ModelImplementationProvider<T, E>> toReturn = new ArrayList<>();\n        Iterator<ModelImplementationProvider> providers = getProviders(refresh);\n        providers.forEachRemaining(toReturn::add);\n        logger.debug(\"toReturn {} {}\", toReturn, toReturn.size());\n        if (logger.isTraceEnabled()) {\n            toReturn.forEach(provider -> logger.trace(\"{} : {}\", provider.getPMMLModelType(), provider));\n        }\n        return toReturn;\n    }", "signature": "List<ModelImplementationProvider<T, E>> getImplementations(boolean refresh)", "full_signature": "@Override @SuppressWarnings(\"rawtypes\") public List<ModelImplementationProvider<T, E>> getImplementations(boolean refresh)", "class_method_signature": "ModelImplementationProviderFinderImpl.getImplementations(boolean refresh)", "testcase": false, "constructor": false, "invocations": ["debug", "getProviders", "forEachRemaining", "debug", "size", "isTraceEnabled", "forEach", "trace", "getPMMLModelType"]}, "repository": {"repo_id": 1381673, "url": "https://github.com/kiegroup/drools", "stars": 2733, "created": "2/18/2011 8:37:05 AM +00:00", "updates": "2020-01-27T13:12:15+00:00", "fork": "False", "license": "licensed"}}