{"test_class": {"identifier": "BeanToMapConvertorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final BeanToMapConvertor BEAN_TO_MAP_CONVERTOR = BeanToMapBuilder.newBuilder().build();", "modifier": "private static final", "type": "BeanToMapConvertor", "declarator": "BEAN_TO_MAP_CONVERTOR = BeanToMapBuilder.newBuilder().build()", "var_name": "BEAN_TO_MAP_CONVERTOR"}, {"original_string": "BeanToMapConvertor beanToMapConvertor = BeanToMapBuilder.newBuilder()\n\t\t\t\t\t\t\t\t\t\t \t\t\t\t.enableFieldNameAnnotation()\n//\t\t\t\t\t\t\t\t\t\t \t\t\t\t.enableUnderLineStyle()\n\t\t\t\t\t\t\t\t\t\t \t\t\t\t.build();", "modifier": "", "type": "BeanToMapConvertor", "declarator": "beanToMapConvertor = BeanToMapBuilder.newBuilder()\n\t\t\t\t\t\t\t\t\t\t \t\t\t\t.enableFieldNameAnnotation()\n//\t\t\t\t\t\t\t\t\t\t \t\t\t\t.enableUnderLineStyle()\n\t\t\t\t\t\t\t\t\t\t \t\t\t\t.build()", "var_name": "beanToMapConvertor"}], "file": "core/modules/common/src/test/java/org/onetwo/common/reflect/BeanToMapConvertorTest.java"}, "test_case": {"identifier": "testWithExcludeOnly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testWithExcludeOnly(){\n\t\tUserEntity user = new UserEntity();\n\t\tuser.setId(11L);\n\t\tuser.setUserName(\"testUserName\");\n\t\t\n\t\tMap<String, Object> map = BeanToMapBuilder.newBuilder()\n\t\t\t\t\t\t\t\t \t\t\t\t.enableFieldNameAnnotation()\n\t\t\t\t\t\t\t\t \t\t\t\t.excludeProperties(\"roles\", \"role\")\n\t\t\t\t\t\t\t\t \t\t\t\t.build()\n\t\t\t\t\t\t\t\t \t\t\t\t.toMap(user);\n\t\tSystem.out.println(\"map: \" + map);\n\t\tassertThat(map.toString()).isEqualTo(\"{birthDay=null, id=11, userName=testUserName, age=0, email=null, height=0.0, status=null}\");\n\t}", "signature": "void testWithExcludeOnly()", "full_signature": "@Test public void testWithExcludeOnly()", "class_method_signature": "BeanToMapConvertorTest.testWithExcludeOnly()", "testcase": true, "constructor": false, "invocations": ["setId", "setUserName", "toMap", "build", "excludeProperties", "enableFieldNameAnnotation", "newBuilder", "println", "isEqualTo", "assertThat", "toString"]}, "focal_class": {"identifier": "BeanToMapConvertor", "superclass": "", "interfaces": "implements Cloneable", "fields": [{"original_string": "private static final String GROOVY_META = \"groovy.lang.MetaClass\";", "modifier": "private static final", "type": "String", "declarator": "GROOVY_META = \"groovy.lang.MetaClass\"", "var_name": "GROOVY_META"}, {"original_string": "@SuppressWarnings(\"serial\")\n\tprivate final static Collection<Class<?>> NOT_FLATABLE_VALUE_TYPES = new HashSet<Class<?>>(LangUtils.getSimpleClass()){\n\t\t{\n//\t\t\tadd(Enum.class);\n\t\t\tadd(URL.class);\n\t\t\tadd(URI.class);\n\t\t\tadd(Class.class);\n\t\t\tadd(ClassLoader.class);\n\t\t}\n\t};", "modifier": "@SuppressWarnings(\"serial\")\n\tprivate final static", "type": "Collection<Class<?>>", "declarator": "NOT_FLATABLE_VALUE_TYPES = new HashSet<Class<?>>(LangUtils.getSimpleClass()){\n\t\t{\n//\t\t\tadd(Enum.class);\n\t\t\tadd(URL.class);\n\t\t\tadd(URI.class);\n\t\t\tadd(Class.class);\n\t\t\tadd(ClassLoader.class);\n\t\t}\n\t}", "var_name": "NOT_FLATABLE_VALUE_TYPES"}, {"original_string": "public final static Function<Object, Boolean> DEFAULT_FLATABLE = obj->{\n\t\tClass<?> valueType = obj.getClass();\n\t\tif(NOT_FLATABLE_VALUE_TYPES.contains(valueType)){\n\t\t\treturn false;\n\t\t}else if(Enum.class.isAssignableFrom(valueType)){\n\t\t\t//\u679a\u4e3e\u7c7b\u4e5f\u4e0d\u518d\u6241\u5e73\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};", "modifier": "public final static", "type": "Function<Object, Boolean>", "declarator": "DEFAULT_FLATABLE = obj->{\n\t\tClass<?> valueType = obj.getClass();\n\t\tif(NOT_FLATABLE_VALUE_TYPES.contains(valueType)){\n\t\t\treturn false;\n\t\t}else if(Enum.class.isAssignableFrom(valueType)){\n\t\t\t//\u679a\u4e3e\u7c7b\u4e5f\u4e0d\u518d\u6241\u5e73\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}", "var_name": "DEFAULT_FLATABLE"}, {"original_string": "private String listOpener = \"[\";", "modifier": "private", "type": "String", "declarator": "listOpener = \"[\"", "var_name": "listOpener"}, {"original_string": "private String listCloser = \"]\";", "modifier": "private", "type": "String", "declarator": "listCloser = \"]\"", "var_name": "listCloser"}, {"original_string": "private String propertyAccesor = \".\";", "modifier": "private", "type": "String", "declarator": "propertyAccesor = \".\"", "var_name": "propertyAccesor"}, {"original_string": "private String prefix = \"\";", "modifier": "private", "type": "String", "declarator": "prefix = \"\"", "var_name": "prefix"}, {"original_string": "private PropertyAcceptor propertyAcceptor;", "modifier": "private", "type": "PropertyAcceptor", "declarator": "propertyAcceptor", "var_name": "propertyAcceptor"}, {"original_string": "private PropertyNameConvertor propertyNameConvertor;", "modifier": "private", "type": "PropertyNameConvertor", "declarator": "propertyNameConvertor", "var_name": "propertyNameConvertor"}, {"original_string": "private BiFunction<PropertyDescriptor, Object, Object> valueConvertor;", "modifier": "private", "type": "BiFunction<PropertyDescriptor, Object, Object>", "declarator": "valueConvertor", "var_name": "valueConvertor"}, {"original_string": "private Function<Object, Boolean> flatableObject = DEFAULT_FLATABLE;", "modifier": "private", "type": "Function<Object, Boolean>", "declarator": "flatableObject = DEFAULT_FLATABLE", "var_name": "flatableObject"}], "methods": [{"identifier": "setPropertyAccesor", "parameters": "(String propertyAccesor)", "modifiers": "public", "return": "void", "signature": "void setPropertyAccesor(String propertyAccesor)", "full_signature": "public void setPropertyAccesor(String propertyAccesor)", "class_method_signature": "BeanToMapConvertor.setPropertyAccesor(String propertyAccesor)", "testcase": false, "constructor": false}, {"identifier": "clone", "parameters": "()", "modifiers": "@Override public", "return": "BeanToMapConvertor", "signature": "BeanToMapConvertor clone()", "full_signature": "@Override public BeanToMapConvertor clone()", "class_method_signature": "BeanToMapConvertor.clone()", "testcase": false, "constructor": false}, {"identifier": "setPrefix", "parameters": "(String prefix)", "modifiers": "public", "return": "void", "signature": "void setPrefix(String prefix)", "full_signature": "public void setPrefix(String prefix)", "class_method_signature": "BeanToMapConvertor.setPrefix(String prefix)", "testcase": false, "constructor": false}, {"identifier": "setPropertyAcceptor", "parameters": "(PropertyAcceptor propertyAcceptor)", "modifiers": "public", "return": "void", "signature": "void setPropertyAcceptor(PropertyAcceptor propertyAcceptor)", "full_signature": "public void setPropertyAcceptor(PropertyAcceptor propertyAcceptor)", "class_method_signature": "BeanToMapConvertor.setPropertyAcceptor(PropertyAcceptor propertyAcceptor)", "testcase": false, "constructor": false}, {"identifier": "setValueConvertor", "parameters": "(BiFunction<PropertyDescriptor, Object, Object> valueConvertor)", "modifiers": "public", "return": "void", "signature": "void setValueConvertor(BiFunction<PropertyDescriptor, Object, Object> valueConvertor)", "full_signature": "public void setValueConvertor(BiFunction<PropertyDescriptor, Object, Object> valueConvertor)", "class_method_signature": "BeanToMapConvertor.setValueConvertor(BiFunction<PropertyDescriptor, Object, Object> valueConvertor)", "testcase": false, "constructor": false}, {"identifier": "setFlatableObject", "parameters": "(Function<Object, Boolean> flatableObject)", "modifiers": "public", "return": "void", "signature": "void setFlatableObject(Function<Object, Boolean> flatableObject)", "full_signature": "public void setFlatableObject(Function<Object, Boolean> flatableObject)", "class_method_signature": "BeanToMapConvertor.setFlatableObject(Function<Object, Boolean> flatableObject)", "testcase": false, "constructor": false}, {"identifier": "setPropertyNameConvertor", "parameters": "(PropertyNameConvertor propertyNameConvertor)", "modifiers": "public", "return": "void", "signature": "void setPropertyNameConvertor(PropertyNameConvertor propertyNameConvertor)", "full_signature": "public void setPropertyNameConvertor(PropertyNameConvertor propertyNameConvertor)", "class_method_signature": "BeanToMapConvertor.setPropertyNameConvertor(PropertyNameConvertor propertyNameConvertor)", "testcase": false, "constructor": false}, {"identifier": "setListOpener", "parameters": "(String listOpener)", "modifiers": "public", "return": "void", "signature": "void setListOpener(String listOpener)", "full_signature": "public void setListOpener(String listOpener)", "class_method_signature": "BeanToMapConvertor.setListOpener(String listOpener)", "testcase": false, "constructor": false}, {"identifier": "setListCloser", "parameters": "(String listCloser)", "modifiers": "public", "return": "void", "signature": "void setListCloser(String listCloser)", "full_signature": "public void setListCloser(String listCloser)", "class_method_signature": "BeanToMapConvertor.setListCloser(String listCloser)", "testcase": false, "constructor": false}, {"identifier": "toMap", "parameters": "(final Object obj)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "Map<String, Object>", "signature": "Map<String, Object> toMap(final Object obj)", "full_signature": "@SuppressWarnings(\"unchecked\") public Map<String, Object> toMap(final Object obj)", "class_method_signature": "BeanToMapConvertor.toMap(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "objectWrapper", "parameters": "(Object obj)", "modifiers": "protected", "return": "ObjectWrapper", "signature": "ObjectWrapper objectWrapper(Object obj)", "full_signature": "protected ObjectWrapper objectWrapper(Object obj)", "class_method_signature": "BeanToMapConvertor.objectWrapper(Object obj)", "testcase": false, "constructor": false}, {"identifier": "createPropertyContext", "parameters": "(final Object obj, PropertyDescriptor prop, PropertyContext keyContext)", "modifiers": "protected", "return": "ObjectPropertyContext", "signature": "ObjectPropertyContext createPropertyContext(final Object obj, PropertyDescriptor prop, PropertyContext keyContext)", "full_signature": "protected ObjectPropertyContext createPropertyContext(final Object obj, PropertyDescriptor prop, PropertyContext keyContext)", "class_method_signature": "BeanToMapConvertor.createPropertyContext(final Object obj, PropertyDescriptor prop, PropertyContext keyContext)", "testcase": false, "constructor": false}, {"identifier": "toPropertyName", "parameters": "(String propertyName)", "modifiers": "private", "return": "String", "signature": "String toPropertyName(String propertyName)", "full_signature": "private String toPropertyName(String propertyName)", "class_method_signature": "BeanToMapConvertor.toPropertyName(String propertyName)", "testcase": false, "constructor": false}, {"identifier": "toFlatMap", "parameters": "(final Object obj)", "modifiers": "public", "return": "Map<String, Object>", "signature": "Map<String, Object> toFlatMap(final Object obj)", "full_signature": "public Map<String, Object> toFlatMap(final Object obj)", "class_method_signature": "BeanToMapConvertor.toFlatMap(final Object obj)", "testcase": false, "constructor": false}, {"identifier": "isMappableValue", "parameters": "(Object value)", "modifiers": "public", "return": "boolean", "signature": "boolean isMappableValue(Object value)", "full_signature": "public boolean isMappableValue(Object value)", "class_method_signature": "BeanToMapConvertor.isMappableValue(Object value)", "testcase": false, "constructor": false}, {"identifier": "toFlatMap", "parameters": "(final Map<String, Object> params, final Object obj)", "modifiers": "public", "return": "void", "signature": "void toFlatMap(final Map<String, Object> params, final Object obj)", "full_signature": "public void toFlatMap(final Map<String, Object> params, final Object obj)", "class_method_signature": "BeanToMapConvertor.toFlatMap(final Map<String, Object> params, final Object obj)", "testcase": false, "constructor": false}, {"identifier": "flatObject", "parameters": "(final String prefixName, final Object obj, ValuePutter valuePutter)", "modifiers": "public", "return": "void", "signature": "void flatObject(final String prefixName, final Object obj, ValuePutter valuePutter)", "full_signature": "public void flatObject(final String prefixName, final Object obj, ValuePutter valuePutter)", "class_method_signature": "BeanToMapConvertor.flatObject(final String prefixName, final Object obj, ValuePutter valuePutter)", "testcase": false, "constructor": false}, {"identifier": "isMapObject", "parameters": "(Object obj)", "modifiers": "private", "return": "boolean", "signature": "boolean isMapObject(Object obj)", "full_signature": "private boolean isMapObject(Object obj)", "class_method_signature": "BeanToMapConvertor.isMapObject(Object obj)", "testcase": false, "constructor": false}, {"identifier": "isMultiple", "parameters": "(Object obj)", "modifiers": "private", "return": "boolean", "signature": "boolean isMultiple(Object obj)", "full_signature": "private boolean isMultiple(Object obj)", "class_method_signature": "BeanToMapConvertor.isMultiple(Object obj)", "testcase": false, "constructor": false}, {"identifier": "flatObject", "parameters": "(final String prefixName, final Object obj, ValuePutter valuePutter, PropertyContext keyContext)", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "void", "signature": "void flatObject(final String prefixName, final Object obj, ValuePutter valuePutter, PropertyContext keyContext)", "full_signature": "@SuppressWarnings(\"unchecked\") private void flatObject(final String prefixName, final Object obj, ValuePutter valuePutter, PropertyContext keyContext)", "class_method_signature": "BeanToMapConvertor.flatObject(final String prefixName, final Object obj, ValuePutter valuePutter, PropertyContext keyContext)", "testcase": false, "constructor": false}, {"identifier": "convertValue", "parameters": "(PropertyDescriptor prop, Object val)", "modifiers": "private", "return": "Object", "signature": "Object convertValue(PropertyDescriptor prop, Object val)", "full_signature": "private Object convertValue(PropertyDescriptor prop, Object val)", "class_method_signature": "BeanToMapConvertor.convertValue(PropertyDescriptor prop, Object val)", "testcase": false, "constructor": false}], "file": "core/modules/common/src/main/java/org/onetwo/common/reflect/BeanToMapConvertor.java"}, "focal_method": {"identifier": "toMap", "parameters": "(final Object obj)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "Map<String, Object>", "body": "@SuppressWarnings(\"unchecked\")\n\tpublic Map<String, Object> toMap(final Object obj){\n//\t\treturn ReflectUtils.toMap(obj, propertyAcceptor, valueConvertor);\n\t\tif (obj == null)\n\t\t\treturn Collections.emptyMap();\n\t\t\n\t\tif(obj.getClass().isArray())\n\t\t\treturn CUtils.asMap((Object[])obj);\n\t\t\n\t\tif(obj instanceof Map)\n\t\t\treturn (Map<String, Object>)obj;\n\t\t\n\t\tObjectWrapper objWrapper = objectWrapper(obj);\n\t\tPropertyDescriptor[] props = objWrapper.desribProperties();\n\t\tif (props == null || props.length == 0)\n\t\t\treturn Collections.emptyMap();\n\t\tMap<String, Object> rsMap = new HashMap<>();\n\t\tObject val = null;\n\t\tfor (PropertyDescriptor prop : props) {\n\t\t\tval = objWrapper.getPropertyValue(prop);\n\t\t\tObjectPropertyContext propContext = createPropertyContext(obj, prop, null);\n\t\t\tif (propertyAcceptor==null || propertyAcceptor.apply(propContext, val)){\n\t\t\t\t/*if(valueConvertor!=null){\n\t\t\t\t\tObject newVal = valueConvertor.apply(prop, val);\n\t\t\t\t\tval = (newVal!=null?newVal:val);\n\t\t\t\t}*/\n\t\t\t\tval = convertValue(prop, val);\n//\t\t\t\tPropertyContext propContext = createPropertyContext(obj, prop);\n\t\t\t\trsMap.put(toPropertyName(propContext.getConvertedName()), val);\n\t\t\t}\n\t\t}\n\t\treturn rsMap;\n\t}", "signature": "Map<String, Object> toMap(final Object obj)", "full_signature": "@SuppressWarnings(\"unchecked\") public Map<String, Object> toMap(final Object obj)", "class_method_signature": "BeanToMapConvertor.toMap(final Object obj)", "testcase": false, "constructor": false, "invocations": ["emptyMap", "isArray", "getClass", "asMap", "objectWrapper", "desribProperties", "emptyMap", "getPropertyValue", "createPropertyContext", "apply", "convertValue", "put", "toPropertyName", "getConvertedName"]}, "repository": {"repo_id": 47802308, "url": "https://github.com/wayshall/onetwo", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 16, "size": 57582, "license": "licensed"}}