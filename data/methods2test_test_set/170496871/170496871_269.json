{"test_class": {"identifier": "RegressionMetricsTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/ml/src/test/java/org/apache/ignite/ml/selection/scoring/metric/regression/RegressionMetricsTest.java"}, "test_case": {"identifier": "testDefaultBehaviourForScoreAll", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDefaultBehaviourForScoreAll() {\n        RegressionMetrics scoreCalculator = new RegressionMetrics();\n\n        LabelPairCursor<Double> cursor = new TestLabelPairCursor<>(\n            Arrays.asList(1.0, 1.0, 1.0, 1.0),\n            Arrays.asList(1.0, 1.0, 0.0, 1.0)\n        );\n\n        RegressionMetricValues metricValues = scoreCalculator.scoreAll(cursor.iterator());\n\n        assertEquals(1.0, metricValues.rss(), 1e-12);\n    }", "signature": "void testDefaultBehaviourForScoreAll()", "full_signature": "@Test public void testDefaultBehaviourForScoreAll()", "class_method_signature": "RegressionMetricsTest.testDefaultBehaviourForScoreAll()", "testcase": true, "constructor": false, "invocations": ["asList", "asList", "scoreAll", "iterator", "assertEquals", "rss"]}, "focal_class": {"identifier": "RegressionMetrics", "superclass": "extends AbstractMetrics<RegressionMetricValues>", "interfaces": "", "fields": [{"original_string": "private static final double EPS = 0.00001;", "modifier": "private static final", "type": "double", "declarator": "EPS = 0.00001", "var_name": "EPS"}], "methods": [{"identifier": "scoreAll", "parameters": "(Iterator<LabelPair<Double>> iter)", "modifiers": "@Override public", "return": "RegressionMetricValues", "signature": "RegressionMetricValues scoreAll(Iterator<LabelPair<Double>> iter)", "full_signature": "@Override public RegressionMetricValues scoreAll(Iterator<LabelPair<Double>> iter)", "class_method_signature": "RegressionMetrics.scoreAll(Iterator<LabelPair<Double>> iter)", "testcase": false, "constructor": false}, {"identifier": "name", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String name()", "full_signature": "@Override public String name()", "class_method_signature": "RegressionMetrics.name()", "testcase": false, "constructor": false}], "file": "modules/ml/src/main/java/org/apache/ignite/ml/selection/scoring/metric/regression/RegressionMetrics.java"}, "focal_method": {"identifier": "scoreAll", "parameters": "(Iterator<LabelPair<Double>> iter)", "modifiers": "@Override public", "return": "RegressionMetricValues", "body": "@Override public RegressionMetricValues scoreAll(Iterator<LabelPair<Double>> iter) {\n        int totalAmount = 0;\n        double rss = 0.0;\n        double mae = 0.0;\n\n        double sumOfLbls = 0.0;\n        double sumOfSquaredLbls = 0.0;\n\n        while (iter.hasNext()) {\n            LabelPair<Double> e = iter.next();\n\n            double prediction = e.getPrediction();\n            double truth = e.getTruth();\n\n            rss += Math.pow(prediction - truth, 2.0);\n            mae += Math.abs(prediction - truth);\n\n            totalAmount++;\n            sumOfLbls += truth;\n            sumOfSquaredLbls += Math.pow(truth, 2);\n        }\n\n        double meanOfLbls = sumOfLbls / totalAmount;\n        double meanOfLblSquares = sumOfSquaredLbls / totalAmount;\n        double tss = totalAmount * (meanOfLblSquares - Math.pow(meanOfLbls, 2));\n\n        double r2 = 0.0;\n        if (Math.abs(tss) < EPS) r2 = Math.abs(rss) < EPS ? 1.0 : 0.0;\n        else r2 = 1 - rss / tss;\n\n        mae /= totalAmount;\n\n        return new RegressionMetricValues(totalAmount, rss, mae, r2);\n    }", "signature": "RegressionMetricValues scoreAll(Iterator<LabelPair<Double>> iter)", "full_signature": "@Override public RegressionMetricValues scoreAll(Iterator<LabelPair<Double>> iter)", "class_method_signature": "RegressionMetrics.scoreAll(Iterator<LabelPair<Double>> iter)", "testcase": false, "constructor": false, "invocations": ["hasNext", "next", "getPrediction", "getTruth", "pow", "abs", "pow", "pow", "abs", "abs"]}, "repository": {"repo_id": 170496871, "url": "https://github.com/gridgain/gridgain", "stars": 46, "created": "2/13/2019 11:31:35 AM +00:00", "updates": "2020-01-27T16:02:24+00:00", "fork": "False", "license": "licensed"}}