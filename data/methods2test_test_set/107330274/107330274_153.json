{"test_class": {"identifier": "DefaultReconciliationEngineTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final TestScheduler testScheduler = Schedulers.test();", "modifier": "private final", "type": "TestScheduler", "declarator": "testScheduler = Schedulers.test()", "var_name": "testScheduler"}, {"original_string": "private final Map<Object, Comparator<EntityHolder>> indexComparators = ImmutableMap.<Object, Comparator<EntityHolder>>builder()\n            .put(\"ascending\", Comparator.comparing(EntityHolder::getEntity))\n            .put(\"descending\", Comparator.<EntityHolder, String>comparing(EntityHolder::getEntity).reversed())\n            .build();", "modifier": "private final", "type": "Map<Object, Comparator<EntityHolder>>", "declarator": "indexComparators = ImmutableMap.<Object, Comparator<EntityHolder>>builder()\n            .put(\"ascending\", Comparator.comparing(EntityHolder::getEntity))\n            .put(\"descending\", Comparator.<EntityHolder, String>comparing(EntityHolder::getEntity).reversed())\n            .build()", "var_name": "indexComparators"}, {"original_string": "private final DefaultReconciliationEngine<SimpleReconcilerEvent> engine = new DefaultReconciliationEngine<>(\n            EntityHolder.newRoot(\"myRoot\", \"rootInitial\"),\n            true,\n            this::difference,\n            indexComparators,\n            new SimpleReconcilerEventFactory(),\n            changeAction -> Collections.emptyList(),\n            event -> Collections.emptyList(),\n            TitusRuntimes.test(testScheduler)\n    );", "modifier": "private final", "type": "DefaultReconciliationEngine<SimpleReconcilerEvent>", "declarator": "engine = new DefaultReconciliationEngine<>(\n            EntityHolder.newRoot(\"myRoot\", \"rootInitial\"),\n            true,\n            this::difference,\n            indexComparators,\n            new SimpleReconcilerEventFactory(),\n            changeAction -> Collections.emptyList(),\n            event -> Collections.emptyList(),\n            TitusRuntimes.test(testScheduler)\n    )", "var_name": "engine"}, {"original_string": "private final ExtTestSubscriber<SimpleReconcilerEvent> eventSubscriber = new ExtTestSubscriber<>();", "modifier": "private final", "type": "ExtTestSubscriber<SimpleReconcilerEvent>", "declarator": "eventSubscriber = new ExtTestSubscriber<>()", "var_name": "eventSubscriber"}, {"original_string": "private final Queue<List<ChangeAction>> runtimeReconcileActions = new LinkedBlockingQueue<>();", "modifier": "private final", "type": "Queue<List<ChangeAction>>", "declarator": "runtimeReconcileActions = new LinkedBlockingQueue<>()", "var_name": "runtimeReconcileActions"}], "file": "titus-common/src/test/java/com/netflix/titus/common/framework/reconciler/internal/DefaultReconciliationEngineTest.java"}, "test_case": {"identifier": "testChildAddRemove", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testChildAddRemove() {\n        addChild(\"child1\");\n        assertThat(engine.getReferenceView().getId()).isEqualTo(\"myRoot\");\n        assertThat(engine.getReferenceView().getChildren()).hasSize(1);\n\n        removeChild(\"child1\");\n        assertThat(engine.getReferenceView().getId()).isEqualTo(\"myRoot\");\n        assertThat(engine.getReferenceView().getChildren()).isEmpty();\n    }", "signature": "void testChildAddRemove()", "full_signature": "@Test public void testChildAddRemove()", "class_method_signature": "DefaultReconciliationEngineTest.testChildAddRemove()", "testcase": true, "constructor": false, "invocations": ["addChild", "isEqualTo", "assertThat", "getId", "getReferenceView", "hasSize", "assertThat", "getChildren", "getReferenceView", "removeChild", "isEqualTo", "assertThat", "getId", "getReferenceView", "isEmpty", "assertThat", "getChildren", "getReferenceView"]}, "focal_class": {"identifier": "DefaultReconciliationEngine", "superclass": "", "interfaces": "implements InternalReconciliationEngine<EVENT>", "fields": [{"original_string": "private static final Logger logger = LoggerFactory.getLogger(DefaultReconciliationEngine.class);", "modifier": "private static final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(DefaultReconciliationEngine.class)", "var_name": "logger"}, {"original_string": "private final AtomicLong nextTransactionId = new AtomicLong();", "modifier": "private final", "type": "AtomicLong", "declarator": "nextTransactionId = new AtomicLong()", "var_name": "nextTransactionId"}, {"original_string": "private final DifferenceResolver<EVENT> runningDifferenceResolver;", "modifier": "private final", "type": "DifferenceResolver<EVENT>", "declarator": "runningDifferenceResolver", "var_name": "runningDifferenceResolver"}, {"original_string": "private final ReconcileEventFactory<EVENT> eventFactory;", "modifier": "private final", "type": "ReconcileEventFactory<EVENT>", "declarator": "eventFactory", "var_name": "eventFactory"}, {"original_string": "private volatile ModelHolder modelHolder;", "modifier": "private volatile", "type": "ModelHolder", "declarator": "modelHolder", "var_name": "modelHolder"}, {"original_string": "private final BlockingQueue<EVENT> changeActionEventQueue = new LinkedBlockingQueue<>();", "modifier": "private final", "type": "BlockingQueue<EVENT>", "declarator": "changeActionEventQueue = new LinkedBlockingQueue<>()", "var_name": "changeActionEventQueue"}, {"original_string": "private final BlockingQueue<ChangeActionHolder> referenceChangeActions = new LinkedBlockingQueue<>();", "modifier": "private final", "type": "BlockingQueue<ChangeActionHolder>", "declarator": "referenceChangeActions = new LinkedBlockingQueue<>()", "var_name": "referenceChangeActions"}, {"original_string": "private final ReconciliationEngineMetrics<EVENT> metrics;", "modifier": "private final", "type": "ReconciliationEngineMetrics<EVENT>", "declarator": "metrics", "var_name": "metrics"}, {"original_string": "private final TitusRuntime titusRuntime;", "modifier": "private final", "type": "TitusRuntime", "declarator": "titusRuntime", "var_name": "titusRuntime"}, {"original_string": "private final Clock clock;", "modifier": "private final", "type": "Clock", "declarator": "clock", "var_name": "clock"}, {"original_string": "private IndexSet<EntityHolder> indexSet;", "modifier": "private", "type": "IndexSet<EntityHolder>", "declarator": "indexSet", "var_name": "indexSet"}, {"original_string": "private Transaction pendingTransaction = EmptyTransaction.EMPTY;", "modifier": "private", "type": "Transaction", "declarator": "pendingTransaction = EmptyTransaction.EMPTY", "var_name": "pendingTransaction"}, {"original_string": "private final PublishSubject<EVENT> eventSubject = PublishSubject.create();", "modifier": "private final", "type": "PublishSubject<EVENT>", "declarator": "eventSubject = PublishSubject.create()", "var_name": "eventSubject"}, {"original_string": "private final Observable<EVENT> eventObservable;", "modifier": "private final", "type": "Observable<EVENT>", "declarator": "eventObservable", "var_name": "eventObservable"}, {"original_string": "private boolean firstTrigger;", "modifier": "private", "type": "boolean", "declarator": "firstTrigger", "var_name": "firstTrigger"}], "methods": [{"identifier": "DefaultReconciliationEngine", "parameters": "(EntityHolder bootstrapModel,\n                                       boolean newlyCreated,\n                                       DifferenceResolver<EVENT> runningDifferenceResolver,\n                                       Map<Object, Comparator<EntityHolder>> indexComparators,\n                                       ReconcileEventFactory<EVENT> eventFactory,\n                                       Function<ChangeAction, List<Tag>> extraChangeActionTags,\n                                       Function<EVENT, List<Tag>> extraModelActionTags,\n                                       TitusRuntime titusRuntime)", "modifiers": "public", "return": "", "signature": " DefaultReconciliationEngine(EntityHolder bootstrapModel,\n                                       boolean newlyCreated,\n                                       DifferenceResolver<EVENT> runningDifferenceResolver,\n                                       Map<Object, Comparator<EntityHolder>> indexComparators,\n                                       ReconcileEventFactory<EVENT> eventFactory,\n                                       Function<ChangeAction, List<Tag>> extraChangeActionTags,\n                                       Function<EVENT, List<Tag>> extraModelActionTags,\n                                       TitusRuntime titusRuntime)", "full_signature": "public  DefaultReconciliationEngine(EntityHolder bootstrapModel,\n                                       boolean newlyCreated,\n                                       DifferenceResolver<EVENT> runningDifferenceResolver,\n                                       Map<Object, Comparator<EntityHolder>> indexComparators,\n                                       ReconcileEventFactory<EVENT> eventFactory,\n                                       Function<ChangeAction, List<Tag>> extraChangeActionTags,\n                                       Function<EVENT, List<Tag>> extraModelActionTags,\n                                       TitusRuntime titusRuntime)", "class_method_signature": "DefaultReconciliationEngine.DefaultReconciliationEngine(EntityHolder bootstrapModel,\n                                       boolean newlyCreated,\n                                       DifferenceResolver<EVENT> runningDifferenceResolver,\n                                       Map<Object, Comparator<EntityHolder>> indexComparators,\n                                       ReconcileEventFactory<EVENT> eventFactory,\n                                       Function<ChangeAction, List<Tag>> extraChangeActionTags,\n                                       Function<EVENT, List<Tag>> extraModelActionTags,\n                                       TitusRuntime titusRuntime)", "testcase": false, "constructor": true}, {"identifier": "applyModelUpdates", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean applyModelUpdates()", "full_signature": "@Override public boolean applyModelUpdates()", "class_method_signature": "DefaultReconciliationEngine.applyModelUpdates()", "testcase": false, "constructor": false}, {"identifier": "hasPendingTransactions", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasPendingTransactions()", "full_signature": "@Override public boolean hasPendingTransactions()", "class_method_signature": "DefaultReconciliationEngine.hasPendingTransactions()", "testcase": false, "constructor": false}, {"identifier": "emitEvents", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void emitEvents()", "full_signature": "@Override public void emitEvents()", "class_method_signature": "DefaultReconciliationEngine.emitEvents()", "testcase": false, "constructor": false}, {"identifier": "closeFinishedTransactions", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean closeFinishedTransactions()", "full_signature": "@Override public boolean closeFinishedTransactions()", "class_method_signature": "DefaultReconciliationEngine.closeFinishedTransactions()", "testcase": false, "constructor": false}, {"identifier": "triggerActions", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean triggerActions()", "full_signature": "@Override public boolean triggerActions()", "class_method_signature": "DefaultReconciliationEngine.triggerActions()", "testcase": false, "constructor": false}, {"identifier": "changeReferenceModel", "parameters": "(ChangeAction referenceUpdate)", "modifiers": "@Override public", "return": "Observable<Void>", "signature": "Observable<Void> changeReferenceModel(ChangeAction referenceUpdate)", "full_signature": "@Override public Observable<Void> changeReferenceModel(ChangeAction referenceUpdate)", "class_method_signature": "DefaultReconciliationEngine.changeReferenceModel(ChangeAction referenceUpdate)", "testcase": false, "constructor": false}, {"identifier": "changeReferenceModel", "parameters": "(ChangeAction referenceUpdate, String entityHolderId)", "modifiers": "@Override public", "return": "Observable<Void>", "signature": "Observable<Void> changeReferenceModel(ChangeAction referenceUpdate, String entityHolderId)", "full_signature": "@Override public Observable<Void> changeReferenceModel(ChangeAction referenceUpdate, String entityHolderId)", "class_method_signature": "DefaultReconciliationEngine.changeReferenceModel(ChangeAction referenceUpdate, String entityHolderId)", "testcase": false, "constructor": false}, {"identifier": "getReferenceView", "parameters": "()", "modifiers": "@Override public", "return": "EntityHolder", "signature": "EntityHolder getReferenceView()", "full_signature": "@Override public EntityHolder getReferenceView()", "class_method_signature": "DefaultReconciliationEngine.getReferenceView()", "testcase": false, "constructor": false}, {"identifier": "getRunningView", "parameters": "()", "modifiers": "@Override public", "return": "EntityHolder", "signature": "EntityHolder getRunningView()", "full_signature": "@Override public EntityHolder getRunningView()", "class_method_signature": "DefaultReconciliationEngine.getRunningView()", "testcase": false, "constructor": false}, {"identifier": "getStoreView", "parameters": "()", "modifiers": "@Override public", "return": "EntityHolder", "signature": "EntityHolder getStoreView()", "full_signature": "@Override public EntityHolder getStoreView()", "class_method_signature": "DefaultReconciliationEngine.getStoreView()", "testcase": false, "constructor": false}, {"identifier": "orderedView", "parameters": "(ORDER_BY orderingCriteria)", "modifiers": "@Override public", "return": "List<EntityHolder>", "signature": "List<EntityHolder> orderedView(ORDER_BY orderingCriteria)", "full_signature": "@Override public List<EntityHolder> orderedView(ORDER_BY orderingCriteria)", "class_method_signature": "DefaultReconciliationEngine.orderedView(ORDER_BY orderingCriteria)", "testcase": false, "constructor": false}, {"identifier": "events", "parameters": "()", "modifiers": "@Override public", "return": "Observable<EVENT>", "signature": "Observable<EVENT> events()", "full_signature": "@Override public Observable<EVENT> events()", "class_method_signature": "DefaultReconciliationEngine.events()", "testcase": false, "constructor": false}, {"identifier": "shutdown", "parameters": "()", "modifiers": "", "return": "void", "signature": "void shutdown()", "full_signature": " void shutdown()", "class_method_signature": "DefaultReconciliationEngine.shutdown()", "testcase": false, "constructor": false}, {"identifier": "getEventFactory", "parameters": "()", "modifiers": "", "return": "ReconcileEventFactory<EVENT>", "signature": "ReconcileEventFactory<EVENT> getEventFactory()", "full_signature": " ReconcileEventFactory<EVENT> getEventFactory()", "class_method_signature": "DefaultReconciliationEngine.getEventFactory()", "testcase": false, "constructor": false}, {"identifier": "getEventSubject", "parameters": "()", "modifiers": "", "return": "PublishSubject<EVENT>", "signature": "PublishSubject<EVENT> getEventSubject()", "full_signature": " PublishSubject<EVENT> getEventSubject()", "class_method_signature": "DefaultReconciliationEngine.getEventSubject()", "testcase": false, "constructor": false}, {"identifier": "getMetrics", "parameters": "()", "modifiers": "", "return": "ReconciliationEngineMetrics<EVENT>", "signature": "ReconciliationEngineMetrics<EVENT> getMetrics()", "full_signature": " ReconciliationEngineMetrics<EVENT> getMetrics()", "class_method_signature": "DefaultReconciliationEngine.getMetrics()", "testcase": false, "constructor": false}, {"identifier": "getTitusRuntime", "parameters": "()", "modifiers": "", "return": "TitusRuntime", "signature": "TitusRuntime getTitusRuntime()", "full_signature": " TitusRuntime getTitusRuntime()", "class_method_signature": "DefaultReconciliationEngine.getTitusRuntime()", "testcase": false, "constructor": false}, {"identifier": "startNextReferenceChangeAction", "parameters": "()", "modifiers": "private", "return": "boolean", "signature": "boolean startNextReferenceChangeAction()", "full_signature": "private boolean startNextReferenceChangeAction()", "class_method_signature": "DefaultReconciliationEngine.startNextReferenceChangeAction()", "testcase": false, "constructor": false}, {"identifier": "isOverlapping", "parameters": "(EntityHolder changePoint, List<EntityHolder> changePoints)", "modifiers": "private", "return": "boolean", "signature": "boolean isOverlapping(EntityHolder changePoint, List<EntityHolder> changePoints)", "full_signature": "private boolean isOverlapping(EntityHolder changePoint, List<EntityHolder> changePoints)", "class_method_signature": "DefaultReconciliationEngine.isOverlapping(EntityHolder changePoint, List<EntityHolder> changePoints)", "testcase": false, "constructor": false}, {"identifier": "startReconcileAction", "parameters": "(List<ChangeAction> reconcileActions)", "modifiers": "private", "return": "void", "signature": "void startReconcileAction(List<ChangeAction> reconcileActions)", "full_signature": "private void startReconcileAction(List<ChangeAction> reconcileActions)", "class_method_signature": "DefaultReconciliationEngine.startReconcileAction(List<ChangeAction> reconcileActions)", "testcase": false, "constructor": false}, {"identifier": "indexEntityHolder", "parameters": "(EntityHolder entityHolder)", "modifiers": "private", "return": "void", "signature": "void indexEntityHolder(EntityHolder entityHolder)", "full_signature": "private void indexEntityHolder(EntityHolder entityHolder)", "class_method_signature": "DefaultReconciliationEngine.indexEntityHolder(EntityHolder entityHolder)", "testcase": false, "constructor": false}, {"identifier": "emitEvent", "parameters": "(EVENT event)", "modifiers": "", "return": "void", "signature": "void emitEvent(EVENT event)", "full_signature": " void emitEvent(EVENT event)", "class_method_signature": "DefaultReconciliationEngine.emitEvent(EVENT event)", "testcase": false, "constructor": false}], "file": "titus-common/src/main/java/com/netflix/titus/common/framework/reconciler/internal/DefaultReconciliationEngine.java"}, "focal_method": {"identifier": "getReferenceView", "parameters": "()", "modifiers": "@Override public", "return": "EntityHolder", "body": "@Override\n    public EntityHolder getReferenceView() {\n        return modelHolder.getReference();\n    }", "signature": "EntityHolder getReferenceView()", "full_signature": "@Override public EntityHolder getReferenceView()", "class_method_signature": "DefaultReconciliationEngine.getReferenceView()", "testcase": false, "constructor": false, "invocations": ["getReference"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}