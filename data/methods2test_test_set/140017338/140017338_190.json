{"test_class": {"identifier": "SW360UpdaterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private AntennaContext antennaContextMock;", "modifier": "private", "type": "AntennaContext", "declarator": "antennaContextMock", "var_name": "antennaContextMock"}], "file": "modules/sw360/sw360-workflow/src/test/java/org/eclipse/sw360/antenna/sw360/workflow/generators/SW360UpdaterTest.java"}, "test_case": {"identifier": "testDefaultConnectionFactoryIsCreated", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDefaultConnectionFactoryIsCreated() {\n        SW360Updater updater = new SW360Updater();\n\n        assertThat(updater.getConnectionFactory()).isNotNull();\n    }", "signature": "void testDefaultConnectionFactoryIsCreated()", "full_signature": "@Test public void testDefaultConnectionFactoryIsCreated()", "class_method_signature": "SW360UpdaterTest.testDefaultConnectionFactoryIsCreated()", "testcase": true, "constructor": false, "invocations": ["isNotNull", "assertThat", "getConnectionFactory"]}, "focal_class": {"identifier": "SW360Updater", "superclass": "extends AbstractGenerator", "interfaces": "", "fields": [{"original_string": "private static final String UPDATE_RELEASES = \"update_releases\";", "modifier": "private static final", "type": "String", "declarator": "UPDATE_RELEASES = \"update_releases\"", "var_name": "UPDATE_RELEASES"}, {"original_string": "private static final String UPLOAD_SOURCES = \"upload_sources\";", "modifier": "private static final", "type": "String", "declarator": "UPLOAD_SOURCES = \"upload_sources\"", "var_name": "UPLOAD_SOURCES"}, {"original_string": "private static final String DELETE_OBSOLETE_SOURCES = \"delete_obsolete_sources\";", "modifier": "private static final", "type": "String", "declarator": "DELETE_OBSOLETE_SOURCES = \"delete_obsolete_sources\"", "var_name": "DELETE_OBSOLETE_SOURCES"}, {"original_string": "private final SW360ConnectionConfigurationFactory connectionFactory;", "modifier": "private final", "type": "SW360ConnectionConfigurationFactory", "declarator": "connectionFactory", "var_name": "connectionFactory"}, {"original_string": "private SW360UpdaterImpl updaterImpl;", "modifier": "private", "type": "SW360UpdaterImpl", "declarator": "updaterImpl", "var_name": "updaterImpl"}], "methods": [{"identifier": "SW360Updater", "parameters": "()", "modifiers": "public", "return": "", "signature": " SW360Updater()", "full_signature": "public  SW360Updater()", "class_method_signature": "SW360Updater.SW360Updater()", "testcase": false, "constructor": true}, {"identifier": "SW360Updater", "parameters": "(SW360ConnectionConfigurationFactory factory)", "modifiers": "", "return": "", "signature": " SW360Updater(SW360ConnectionConfigurationFactory factory)", "full_signature": "  SW360Updater(SW360ConnectionConfigurationFactory factory)", "class_method_signature": "SW360Updater.SW360Updater(SW360ConnectionConfigurationFactory factory)", "testcase": false, "constructor": true}, {"identifier": "configure", "parameters": "(Map<String, String> configMap)", "modifiers": "@Override public", "return": "void", "signature": "void configure(Map<String, String> configMap)", "full_signature": "@Override public void configure(Map<String, String> configMap)", "class_method_signature": "SW360Updater.configure(Map<String, String> configMap)", "testcase": false, "constructor": false}, {"identifier": "getProjectVersion", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getProjectVersion()", "full_signature": "private String getProjectVersion()", "class_method_signature": "SW360Updater.getProjectVersion()", "testcase": false, "constructor": false}, {"identifier": "getProjectName", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getProjectName()", "full_signature": "private String getProjectName()", "class_method_signature": "SW360Updater.getProjectName()", "testcase": false, "constructor": false}, {"identifier": "produce", "parameters": "(Collection<Artifact> intermediates)", "modifiers": "@Override public", "return": "Map<String, IAttachable>", "signature": "Map<String, IAttachable> produce(Collection<Artifact> intermediates)", "full_signature": "@Override public Map<String, IAttachable> produce(Collection<Artifact> intermediates)", "class_method_signature": "SW360Updater.produce(Collection<Artifact> intermediates)", "testcase": false, "constructor": false}, {"identifier": "createUpdaterImpl", "parameters": "(Map<String, String> configMap)", "modifiers": "", "return": "SW360UpdaterImpl", "signature": "SW360UpdaterImpl createUpdaterImpl(Map<String, String> configMap)", "full_signature": " SW360UpdaterImpl createUpdaterImpl(Map<String, String> configMap)", "class_method_signature": "SW360Updater.createUpdaterImpl(Map<String, String> configMap)", "testcase": false, "constructor": false}, {"identifier": "getConnectionFactory", "parameters": "()", "modifiers": "", "return": "SW360ConnectionConfigurationFactory", "signature": "SW360ConnectionConfigurationFactory getConnectionFactory()", "full_signature": " SW360ConnectionConfigurationFactory getConnectionFactory()", "class_method_signature": "SW360Updater.getConnectionFactory()", "testcase": false, "constructor": false}], "file": "modules/sw360/sw360-workflow/src/main/java/org/eclipse/sw360/antenna/sw360/workflow/generators/SW360Updater.java"}, "focal_method": {"identifier": "getConnectionFactory", "parameters": "()", "modifiers": "", "return": "SW360ConnectionConfigurationFactory", "body": "SW360ConnectionConfigurationFactory getConnectionFactory() {\n        return connectionFactory;\n    }", "signature": "SW360ConnectionConfigurationFactory getConnectionFactory()", "full_signature": " SW360ConnectionConfigurationFactory getConnectionFactory()", "class_method_signature": "SW360Updater.getConnectionFactory()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}