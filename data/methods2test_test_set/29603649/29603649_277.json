{"test_class": {"identifier": "HeaderUpdateInterceptorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private WilmaHttpRequest request;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private WilmaHttpResponse response;", "modifier": "@Mock\n    private", "type": "WilmaHttpResponse", "declarator": "response", "var_name": "response"}, {"original_string": "@Mock\n    private ParameterList parameterMap;", "modifier": "@Mock\n    private", "type": "ParameterList", "declarator": "parameterMap", "var_name": "parameterMap"}, {"original_string": "private HeaderUpdateInterceptor underTest;", "modifier": "private", "type": "HeaderUpdateInterceptor", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-stub-configuration-support/src/test/java/com/epam/wilma/stubconfig/interceptor/HeaderUpdateInterceptorTest.java"}, "test_case": {"identifier": "testResponseInterceptorMarksHeadersToBeRemoved", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testResponseInterceptorMarksHeadersToBeRemoved() {\n        //GIVEN\n        List<Parameter> parameters = new ArrayList<>();\n        Parameter p = new Parameter(HeaderUpdateInterceptor.REMOVE_HEADER, \"B\");\n        parameters.add(p);\n        given(parameterMap.getAllParameters()).willReturn(parameters);\n        //WHEN\n        underTest.onResponseReceive(response, parameterMap);\n        //THEN\n        verify(response).addHeaderRemove(\"B\");\n    }", "signature": "void testResponseInterceptorMarksHeadersToBeRemoved()", "full_signature": "@Test public void testResponseInterceptorMarksHeadersToBeRemoved()", "class_method_signature": "HeaderUpdateInterceptorTest.testResponseInterceptorMarksHeadersToBeRemoved()", "testcase": true, "constructor": false, "invocations": ["add", "willReturn", "given", "getAllParameters", "onResponseReceive", "addHeaderRemove", "verify"]}, "focal_class": {"identifier": "HeaderUpdateInterceptor", "superclass": "", "interfaces": "implements RequestInterceptor, ResponseInterceptor", "fields": [{"original_string": "public static final String REMOVE_HEADER = \"REMOVE\";", "modifier": "public static final", "type": "String", "declarator": "REMOVE_HEADER = \"REMOVE\"", "var_name": "REMOVE_HEADER"}], "methods": [{"identifier": "onRequestReceive", "parameters": "(final WilmaHttpRequest request, final ParameterList parameters)", "modifiers": "@Override public", "return": "void", "signature": "void onRequestReceive(final WilmaHttpRequest request, final ParameterList parameters)", "full_signature": "@Override public void onRequestReceive(final WilmaHttpRequest request, final ParameterList parameters)", "class_method_signature": "HeaderUpdateInterceptor.onRequestReceive(final WilmaHttpRequest request, final ParameterList parameters)", "testcase": false, "constructor": false}, {"identifier": "onResponseReceive", "parameters": "(final WilmaHttpResponse response, final ParameterList parameters)", "modifiers": "@Override public", "return": "void", "signature": "void onResponseReceive(final WilmaHttpResponse response, final ParameterList parameters)", "full_signature": "@Override public void onResponseReceive(final WilmaHttpResponse response, final ParameterList parameters)", "class_method_signature": "HeaderUpdateInterceptor.onResponseReceive(final WilmaHttpResponse response, final ParameterList parameters)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-stub-configuration-support/src/main/java/com/epam/wilma/stubconfig/interceptor/HeaderUpdateInterceptor.java"}, "focal_method": {"identifier": "onResponseReceive", "parameters": "(final WilmaHttpResponse response, final ParameterList parameters)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onResponseReceive(final WilmaHttpResponse response, final ParameterList parameters) {\n        if (parameters != null && !parameters.isEmpty()) {\n            List<Parameter> parameterList = parameters.getAllParameters();\n            for (Parameter parameter : parameterList) {\n                String name = parameter.getName();\n                String value = parameter.getValue();\n                if (REMOVE_HEADER.equals(name.toUpperCase())) {\n                    // remove header\n                    response.addHeaderRemove(value);\n                } else {\n                    response.addHeaderUpdate(name, value);\n                }\n            }\n        }\n    }", "signature": "void onResponseReceive(final WilmaHttpResponse response, final ParameterList parameters)", "full_signature": "@Override public void onResponseReceive(final WilmaHttpResponse response, final ParameterList parameters)", "class_method_signature": "HeaderUpdateInterceptor.onResponseReceive(final WilmaHttpResponse response, final ParameterList parameters)", "testcase": false, "constructor": false, "invocations": ["isEmpty", "getAllParameters", "getName", "getValue", "equals", "toUpperCase", "addHeaderRemove", "addHeaderUpdate"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}