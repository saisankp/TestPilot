{"test_class": {"identifier": "DefaultIncrementalAttributesMapperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private DefaultIncrementalAttributesMapper tested;", "modifier": "private", "type": "DefaultIncrementalAttributesMapper", "declarator": "tested", "var_name": "tested"}], "file": "core/src/test/java/org/springframework/ldap/core/support/DefaultIncrementalAttributesMapperTest.java"}, "test_case": {"identifier": "testGetAttributesArray", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetAttributesArray() throws Exception {\n        String[] attributes = tested.getAttributesForLookup();\n\n        assertThat(attributes.length).isEqualTo(1);\n        assertThat(attributes[0]).isEqualTo(\"member\");\n\n        tested = new DefaultIncrementalAttributesMapper(10, \"member\");\n\n        attributes = tested.getAttributesForLookup();\n\n        assertThat(attributes.length).isEqualTo(1);\n        assertThat(attributes[0]).isEqualTo(\"member;Range=0-10\");\n    }", "signature": "void testGetAttributesArray()", "full_signature": "@Test public void testGetAttributesArray()", "class_method_signature": "DefaultIncrementalAttributesMapperTest.testGetAttributesArray()", "testcase": true, "constructor": false, "invocations": ["getAttributesForLookup", "isEqualTo", "assertThat", "isEqualTo", "assertThat", "getAttributesForLookup", "isEqualTo", "assertThat", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "DefaultIncrementalAttributesMapper", "superclass": "", "interfaces": "implements IncrementalAttributesMapper<DefaultIncrementalAttributesMapper>", "fields": [{"original_string": "private final static Logger LOG = LoggerFactory.getLogger(DefaultIncrementalAttributesMapper.class);", "modifier": "private final static", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(DefaultIncrementalAttributesMapper.class)", "var_name": "LOG"}, {"original_string": "private Map<String, IncrementalAttributeState> stateMap = new LinkedHashMap<String, IncrementalAttributeState>();", "modifier": "private", "type": "Map<String, IncrementalAttributeState>", "declarator": "stateMap = new LinkedHashMap<String, IncrementalAttributeState>()", "var_name": "stateMap"}, {"original_string": "private Set<String> rangedAttributesInNextIteration = new LinkedHashSet<String>();", "modifier": "private", "type": "Set<String>", "declarator": "rangedAttributesInNextIteration = new LinkedHashSet<String>()", "var_name": "rangedAttributesInNextIteration"}, {"original_string": "private static final IncrementalAttributeState NOT_FOUND_ATTRIBUTE_STATE = new IncrementalAttributeState() {\n        @Override\n        public String getRequestedAttributeName() {\n            throw new UnsupportedOperationException(\"This method should never be called\");\n        }\n\n        @Override\n        public boolean hasMore() {\n            return false;\n        }\n\n        @Override\n        public void calculateNextRange(RangeOption responseRange) {\n            // Nothing to do here\n        }\n\n        @Override\n        public String getAttributeNameForQuery() {\n            throw new UnsupportedOperationException(\"This method should never be called\");\n        }\n\n        @Override\n        public void processValues(Attributes attributes, String attributeName) throws NamingException {\n            // Nothing to do here\n        }\n\n        @Override\n        public List<Object> getValues() {\n            return null;\n        }\n    };", "modifier": "private static final", "type": "IncrementalAttributeState", "declarator": "NOT_FOUND_ATTRIBUTE_STATE = new IncrementalAttributeState() {\n        @Override\n        public String getRequestedAttributeName() {\n            throw new UnsupportedOperationException(\"This method should never be called\");\n        }\n\n        @Override\n        public boolean hasMore() {\n            return false;\n        }\n\n        @Override\n        public void calculateNextRange(RangeOption responseRange) {\n            // Nothing to do here\n        }\n\n        @Override\n        public String getAttributeNameForQuery() {\n            throw new UnsupportedOperationException(\"This method should never be called\");\n        }\n\n        @Override\n        public void processValues(Attributes attributes, String attributeName) throws NamingException {\n            // Nothing to do here\n        }\n\n        @Override\n        public List<Object> getValues() {\n            return null;\n        }\n    }", "var_name": "NOT_FOUND_ATTRIBUTE_STATE"}], "methods": [{"identifier": "DefaultIncrementalAttributesMapper", "parameters": "(String attributeName)", "modifiers": "public", "return": "", "signature": " DefaultIncrementalAttributesMapper(String attributeName)", "full_signature": "public  DefaultIncrementalAttributesMapper(String attributeName)", "class_method_signature": "DefaultIncrementalAttributesMapper.DefaultIncrementalAttributesMapper(String attributeName)", "testcase": false, "constructor": true}, {"identifier": "DefaultIncrementalAttributesMapper", "parameters": "(String[] attributeNames)", "modifiers": "public", "return": "", "signature": " DefaultIncrementalAttributesMapper(String[] attributeNames)", "full_signature": "public  DefaultIncrementalAttributesMapper(String[] attributeNames)", "class_method_signature": "DefaultIncrementalAttributesMapper.DefaultIncrementalAttributesMapper(String[] attributeNames)", "testcase": false, "constructor": true}, {"identifier": "DefaultIncrementalAttributesMapper", "parameters": "(int pageSize, String attributeName)", "modifiers": "public", "return": "", "signature": " DefaultIncrementalAttributesMapper(int pageSize, String attributeName)", "full_signature": "public  DefaultIncrementalAttributesMapper(int pageSize, String attributeName)", "class_method_signature": "DefaultIncrementalAttributesMapper.DefaultIncrementalAttributesMapper(int pageSize, String attributeName)", "testcase": false, "constructor": true}, {"identifier": "DefaultIncrementalAttributesMapper", "parameters": "(int pageSize, String[] attributeNames)", "modifiers": "public", "return": "", "signature": " DefaultIncrementalAttributesMapper(int pageSize, String[] attributeNames)", "full_signature": "public  DefaultIncrementalAttributesMapper(int pageSize, String[] attributeNames)", "class_method_signature": "DefaultIncrementalAttributesMapper.DefaultIncrementalAttributesMapper(int pageSize, String[] attributeNames)", "testcase": false, "constructor": true}, {"identifier": "mapFromAttributes", "parameters": "(Attributes attributes)", "modifiers": "@Override public final", "return": "DefaultIncrementalAttributesMapper", "signature": "DefaultIncrementalAttributesMapper mapFromAttributes(Attributes attributes)", "full_signature": "@Override public final DefaultIncrementalAttributesMapper mapFromAttributes(Attributes attributes)", "class_method_signature": "DefaultIncrementalAttributesMapper.mapFromAttributes(Attributes attributes)", "testcase": false, "constructor": false}, {"identifier": "getState", "parameters": "(String attributeName)", "modifiers": "private", "return": "IncrementalAttributeState", "signature": "IncrementalAttributeState getState(String attributeName)", "full_signature": "private IncrementalAttributeState getState(String attributeName)", "class_method_signature": "DefaultIncrementalAttributesMapper.getState(String attributeName)", "testcase": false, "constructor": false}, {"identifier": "getValues", "parameters": "(String attributeName)", "modifiers": "@Override public final", "return": "List<Object>", "signature": "List<Object> getValues(String attributeName)", "full_signature": "@Override public final List<Object> getValues(String attributeName)", "class_method_signature": "DefaultIncrementalAttributesMapper.getValues(String attributeName)", "testcase": false, "constructor": false}, {"identifier": "getCollectedAttributes", "parameters": "()", "modifiers": "@Override public final", "return": "Attributes", "signature": "Attributes getCollectedAttributes()", "full_signature": "@Override public final Attributes getCollectedAttributes()", "class_method_signature": "DefaultIncrementalAttributesMapper.getCollectedAttributes()", "testcase": false, "constructor": false}, {"identifier": "hasMore", "parameters": "()", "modifiers": "@Override public final", "return": "boolean", "signature": "boolean hasMore()", "full_signature": "@Override public final boolean hasMore()", "class_method_signature": "DefaultIncrementalAttributesMapper.hasMore()", "testcase": false, "constructor": false}, {"identifier": "getAttributesForLookup", "parameters": "()", "modifiers": "@Override public final", "return": "String[]", "signature": "String[] getAttributesForLookup()", "full_signature": "@Override public final String[] getAttributesForLookup()", "class_method_signature": "DefaultIncrementalAttributesMapper.getAttributesForLookup()", "testcase": false, "constructor": false}, {"identifier": "lookupAttributes", "parameters": "(LdapOperations ldapOperations, String dn, String attribute)", "modifiers": "public static", "return": "Attributes", "signature": "Attributes lookupAttributes(LdapOperations ldapOperations, String dn, String attribute)", "full_signature": "public static Attributes lookupAttributes(LdapOperations ldapOperations, String dn, String attribute)", "class_method_signature": "DefaultIncrementalAttributesMapper.lookupAttributes(LdapOperations ldapOperations, String dn, String attribute)", "testcase": false, "constructor": false}, {"identifier": "lookupAttributes", "parameters": "(LdapOperations ldapOperations, String dn, String[] attributes)", "modifiers": "public static", "return": "Attributes", "signature": "Attributes lookupAttributes(LdapOperations ldapOperations, String dn, String[] attributes)", "full_signature": "public static Attributes lookupAttributes(LdapOperations ldapOperations, String dn, String[] attributes)", "class_method_signature": "DefaultIncrementalAttributesMapper.lookupAttributes(LdapOperations ldapOperations, String dn, String[] attributes)", "testcase": false, "constructor": false}, {"identifier": "lookupAttributes", "parameters": "(LdapOperations ldapOperations, Name dn, String attribute)", "modifiers": "public static", "return": "Attributes", "signature": "Attributes lookupAttributes(LdapOperations ldapOperations, Name dn, String attribute)", "full_signature": "public static Attributes lookupAttributes(LdapOperations ldapOperations, Name dn, String attribute)", "class_method_signature": "DefaultIncrementalAttributesMapper.lookupAttributes(LdapOperations ldapOperations, Name dn, String attribute)", "testcase": false, "constructor": false}, {"identifier": "lookupAttributes", "parameters": "(LdapOperations ldapOperations, Name dn, String[] attributes)", "modifiers": "public static", "return": "Attributes", "signature": "Attributes lookupAttributes(LdapOperations ldapOperations, Name dn, String[] attributes)", "full_signature": "public static Attributes lookupAttributes(LdapOperations ldapOperations, Name dn, String[] attributes)", "class_method_signature": "DefaultIncrementalAttributesMapper.lookupAttributes(LdapOperations ldapOperations, Name dn, String[] attributes)", "testcase": false, "constructor": false}, {"identifier": "lookupAttributeValues", "parameters": "(LdapOperations ldapOperations, String dn, String attribute)", "modifiers": "public static", "return": "List<Object>", "signature": "List<Object> lookupAttributeValues(LdapOperations ldapOperations, String dn, String attribute)", "full_signature": "public static List<Object> lookupAttributeValues(LdapOperations ldapOperations, String dn, String attribute)", "class_method_signature": "DefaultIncrementalAttributesMapper.lookupAttributeValues(LdapOperations ldapOperations, String dn, String attribute)", "testcase": false, "constructor": false}, {"identifier": "lookupAttributeValues", "parameters": "(LdapOperations ldapOperations, Name dn, String attribute)", "modifiers": "public static", "return": "List<Object>", "signature": "List<Object> lookupAttributeValues(LdapOperations ldapOperations, Name dn, String attribute)", "full_signature": "public static List<Object> lookupAttributeValues(LdapOperations ldapOperations, Name dn, String attribute)", "class_method_signature": "DefaultIncrementalAttributesMapper.lookupAttributeValues(LdapOperations ldapOperations, Name dn, String attribute)", "testcase": false, "constructor": false}, {"identifier": "loopForAllAttributeValues", "parameters": "(LdapOperations ldapOperations, Name dn, String[] attributes)", "modifiers": "private static", "return": "DefaultIncrementalAttributesMapper", "signature": "DefaultIncrementalAttributesMapper loopForAllAttributeValues(LdapOperations ldapOperations, Name dn, String[] attributes)", "full_signature": "private static DefaultIncrementalAttributesMapper loopForAllAttributeValues(LdapOperations ldapOperations, Name dn, String[] attributes)", "class_method_signature": "DefaultIncrementalAttributesMapper.loopForAllAttributeValues(LdapOperations ldapOperations, Name dn, String[] attributes)", "testcase": false, "constructor": false}], "file": "core/src/main/java/org/springframework/ldap/core/support/DefaultIncrementalAttributesMapper.java"}, "focal_method": {"identifier": "getAttributesForLookup", "parameters": "()", "modifiers": "@Override public final", "return": "String[]", "body": "@Override\n    public final String[] getAttributesForLookup() {\n        String[] result = new String[rangedAttributesInNextIteration.size()];\n        int index = 0;\n        for (String next : rangedAttributesInNextIteration) {\n            IncrementalAttributeState state = stateMap.get(next);\n            result[index++] = state.getAttributeNameForQuery();\n        }\n\n        return result;\n    }", "signature": "String[] getAttributesForLookup()", "full_signature": "@Override public final String[] getAttributesForLookup()", "class_method_signature": "DefaultIncrementalAttributesMapper.getAttributesForLookup()", "testcase": false, "constructor": false, "invocations": ["size", "get", "getAttributeNameForQuery"]}, "repository": {"repo_id": 11136641, "url": "https://github.com/spring-projects/spring-ldap", "language": "Java", "is_fork": false, "fork_count": 433, "stargazer_count": 240, "size": 24447, "license": "licensed"}}