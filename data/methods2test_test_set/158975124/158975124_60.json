{"test_class": {"identifier": "ReadOnlyTsFileTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String FILE_PATH = TsFileGeneratorForTest.outputDataFile;", "modifier": "private static final", "type": "String", "declarator": "FILE_PATH = TsFileGeneratorForTest.outputDataFile", "var_name": "FILE_PATH"}, {"original_string": "private TsFileSequenceReader fileReader;", "modifier": "private", "type": "TsFileSequenceReader", "declarator": "fileReader", "var_name": "fileReader"}, {"original_string": "private ReadOnlyTsFile tsFile;", "modifier": "private", "type": "ReadOnlyTsFile", "declarator": "tsFile", "var_name": "tsFile"}], "file": "tsfile/src/test/java/org/apache/iotdb/tsfile/read/ReadOnlyTsFileTest.java"}, "test_case": {"identifier": "test2", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void test2() throws Exception {\n    int minRowCount = 1000, maxRowCount = 100000;\n    TSFileDescriptor.getInstance().getConfig().setTimeEncoder(\"TS_2DIFF\");\n    TsFileGeneratorForTest.generateFile(minRowCount, maxRowCount, 16 * 1024 * 1024, 10000);\n    fileReader = new TsFileSequenceReader(FILE_PATH);\n    tsFile = new ReadOnlyTsFile(fileReader);\n    queryTest2();\n    queryNonExistPathTest();\n    tsFile.close();\n    TsFileGeneratorForTest.after();\n  }", "signature": "void test2()", "full_signature": "@Test public void test2()", "class_method_signature": "ReadOnlyTsFileTest.test2()", "testcase": true, "constructor": false, "invocations": ["setTimeEncoder", "getConfig", "getInstance", "generateFile", "queryTest2", "queryNonExistPathTest", "close", "after"]}, "focal_class": {"identifier": "ReadOnlyTsFile", "superclass": "", "interfaces": "implements AutoCloseable", "fields": [{"original_string": "private TsFileSequenceReader fileReader;", "modifier": "private", "type": "TsFileSequenceReader", "declarator": "fileReader", "var_name": "fileReader"}, {"original_string": "private IMetadataQuerier metadataQuerier;", "modifier": "private", "type": "IMetadataQuerier", "declarator": "metadataQuerier", "var_name": "metadataQuerier"}, {"original_string": "private IChunkLoader chunkLoader;", "modifier": "private", "type": "IChunkLoader", "declarator": "chunkLoader", "var_name": "chunkLoader"}, {"original_string": "private TsFileExecutor tsFileExecutor;", "modifier": "private", "type": "TsFileExecutor", "declarator": "tsFileExecutor", "var_name": "tsFileExecutor"}], "methods": [{"identifier": "ReadOnlyTsFile", "parameters": "(TsFileSequenceReader fileReader)", "modifiers": "public", "return": "", "signature": " ReadOnlyTsFile(TsFileSequenceReader fileReader)", "full_signature": "public  ReadOnlyTsFile(TsFileSequenceReader fileReader)", "class_method_signature": "ReadOnlyTsFile.ReadOnlyTsFile(TsFileSequenceReader fileReader)", "testcase": false, "constructor": true}, {"identifier": "query", "parameters": "(QueryExpression queryExpression)", "modifiers": "public", "return": "QueryDataSet", "signature": "QueryDataSet query(QueryExpression queryExpression)", "full_signature": "public QueryDataSet query(QueryExpression queryExpression)", "class_method_signature": "ReadOnlyTsFile.query(QueryExpression queryExpression)", "testcase": false, "constructor": false}, {"identifier": "query", "parameters": "(QueryExpression queryExpression, long partitionStartOffset,\n      long partitionEndOffset)", "modifiers": "public", "return": "QueryDataSet", "signature": "QueryDataSet query(QueryExpression queryExpression, long partitionStartOffset,\n      long partitionEndOffset)", "full_signature": "public QueryDataSet query(QueryExpression queryExpression, long partitionStartOffset,\n      long partitionEndOffset)", "class_method_signature": "ReadOnlyTsFile.query(QueryExpression queryExpression, long partitionStartOffset,\n      long partitionEndOffset)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "ReadOnlyTsFile.close()", "testcase": false, "constructor": false}], "file": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/ReadOnlyTsFile.java"}, "focal_method": {"identifier": "close", "parameters": "()", "modifiers": "public", "return": "void", "body": "public void close() throws IOException {\n    fileReader.close();\n  }", "signature": "void close()", "full_signature": "public void close()", "class_method_signature": "ReadOnlyTsFile.close()", "testcase": false, "constructor": false, "invocations": ["close"]}, "repository": {"repo_id": 158975124, "url": "https://github.com/apache/incubator-iotdb", "stars": 449, "created": "11/24/2018 9:29:17 PM +00:00", "updates": "2020-01-21T08:10:15+00:00", "fork": "False", "license": "licensed"}}