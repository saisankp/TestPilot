{"test_class": {"identifier": "BrowserMobRequestInterceptorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String EMPTY_STRING = \"\";", "modifier": "private static final", "type": "String", "declarator": "EMPTY_STRING = \"\"", "var_name": "EMPTY_STRING"}, {"original_string": "@Mock\n    private HttpRequestTransformer httpRequestTransformer;", "modifier": "@Mock\n    private", "type": "HttpRequestTransformer", "declarator": "httpRequestTransformer", "var_name": "httpRequestTransformer"}, {"original_string": "@Mock\n    private BrowserMobHttpRequest bmRequest;", "modifier": "@Mock\n    private", "type": "BrowserMobHttpRequest", "declarator": "bmRequest", "var_name": "bmRequest"}, {"original_string": "@Mock\n    private WilmaHttpRequest wilmaRequest;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequest", "declarator": "wilmaRequest", "var_name": "wilmaRequest"}, {"original_string": "@Mock\n    private Logger logger;", "modifier": "@Mock\n    private", "type": "Logger", "declarator": "logger", "var_name": "logger"}, {"original_string": "@Mock\n    private InputStream inputStream;", "modifier": "@Mock\n    private", "type": "InputStream", "declarator": "inputStream", "var_name": "inputStream"}, {"original_string": "@Mock\n    private WilmaHttpRequestProcessor wilmaHttpRequestHandler;", "modifier": "@Mock\n    private", "type": "WilmaHttpRequestProcessor", "declarator": "wilmaHttpRequestHandler", "var_name": "wilmaHttpRequestHandler"}, {"original_string": "@Mock\n    private BrowserMobRequestUpdater browserMobRequestUpdater;", "modifier": "@Mock\n    private", "type": "BrowserMobRequestUpdater", "declarator": "browserMobRequestUpdater", "var_name": "browserMobRequestUpdater"}, {"original_string": "@InjectMocks\n    private BrowserMobRequestInterceptor underTest;", "modifier": "@InjectMocks\n    private", "type": "BrowserMobRequestInterceptor", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-browsermob-integration/src/test/java/com/epam/wilma/browsermob/interceptor/BrowserMobRequestInterceptorTest.java"}, "test_case": {"identifier": "testProcessShouldReturnProperly", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testProcessShouldReturnProperly() throws ApplicationException {\n        // GIVEN\n        given(httpRequestTransformer.transformRequest(bmRequest)).willReturn(wilmaRequest);\n        // WHEN\n        underTest.process(bmRequest);\n        // THEN\n        verify(wilmaHttpRequestHandler).processRequest(wilmaRequest);\n        verify(browserMobRequestUpdater).updateRequest(bmRequest, wilmaRequest);\n    }", "signature": "void testProcessShouldReturnProperly()", "full_signature": "@Test public void testProcessShouldReturnProperly()", "class_method_signature": "BrowserMobRequestInterceptorTest.testProcessShouldReturnProperly()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "transformRequest", "process", "processRequest", "verify", "updateRequest", "verify"]}, "focal_class": {"identifier": "BrowserMobRequestInterceptor", "superclass": "", "interfaces": "implements RequestInterceptor", "fields": [{"original_string": "private final Logger logger = LoggerFactory.getLogger(BrowserMobRequestInterceptor.class);", "modifier": "private final", "type": "Logger", "declarator": "logger = LoggerFactory.getLogger(BrowserMobRequestInterceptor.class)", "var_name": "logger"}, {"original_string": "@Autowired\n    private HttpRequestTransformer httpRequestTransformer;", "modifier": "@Autowired\n    private", "type": "HttpRequestTransformer", "declarator": "httpRequestTransformer", "var_name": "httpRequestTransformer"}, {"original_string": "@Autowired\n    private BrowserMobRequestUpdater browserMobRequestUpdater;", "modifier": "@Autowired\n    private", "type": "BrowserMobRequestUpdater", "declarator": "browserMobRequestUpdater", "var_name": "browserMobRequestUpdater"}, {"original_string": "@Autowired\n    private WilmaHttpRequestProcessor wilmaHttpRequestProcessor;", "modifier": "@Autowired\n    private", "type": "WilmaHttpRequestProcessor", "declarator": "wilmaHttpRequestProcessor", "var_name": "wilmaHttpRequestProcessor"}], "methods": [{"identifier": "process", "parameters": "(final BrowserMobHttpRequest request)", "modifiers": "@Override public", "return": "void", "signature": "void process(final BrowserMobHttpRequest request)", "full_signature": "@Override public void process(final BrowserMobHttpRequest request)", "class_method_signature": "BrowserMobRequestInterceptor.process(final BrowserMobHttpRequest request)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-browsermob-integration/src/main/java/com/epam/wilma/browsermob/interceptor/BrowserMobRequestInterceptor.java"}, "focal_method": {"identifier": "process", "parameters": "(final BrowserMobHttpRequest request)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void process(final BrowserMobHttpRequest request) {\n        try {\n            WilmaHttpRequest wilmaHttpRequest = httpRequestTransformer.transformRequest(request);\n            wilmaHttpRequestProcessor.processRequest(wilmaHttpRequest);\n            browserMobRequestUpdater.updateRequest(request, wilmaHttpRequest);\n        } catch (ApplicationException e) {\n            logger.error(e.getMessage(), e);\n        }\n    }", "signature": "void process(final BrowserMobHttpRequest request)", "full_signature": "@Override public void process(final BrowserMobHttpRequest request)", "class_method_signature": "BrowserMobRequestInterceptor.process(final BrowserMobHttpRequest request)", "testcase": false, "constructor": false, "invocations": ["transformRequest", "processRequest", "updateRequest", "error", "getMessage"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}