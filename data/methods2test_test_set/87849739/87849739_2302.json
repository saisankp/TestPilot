{"test_class": {"identifier": "PolicyErrorResponseTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final JsonObject KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(PolicyCommandResponse.JsonFields.TYPE, PolicyErrorResponse.TYPE)\n            .set(PolicyCommandResponse.JsonFields.STATUS, HttpStatusCode.NOT_FOUND.toInt())\n            .set(PolicyCommandResponse.JsonFields.JSON_POLICY_ID, TestConstants.Policy.POLICY_ID.toString())\n            .set(PolicyCommandResponse.JsonFields.PAYLOAD,\n                    TestConstants.Policy.POLICY_NOT_ACCESSIBLE_EXCEPTION.toJson(FieldType.regularOrSpecial()))\n            .build();", "modifier": "private static final", "type": "JsonObject", "declarator": "KNOWN_JSON = JsonFactory.newObjectBuilder()\n            .set(PolicyCommandResponse.JsonFields.TYPE, PolicyErrorResponse.TYPE)\n            .set(PolicyCommandResponse.JsonFields.STATUS, HttpStatusCode.NOT_FOUND.toInt())\n            .set(PolicyCommandResponse.JsonFields.JSON_POLICY_ID, TestConstants.Policy.POLICY_ID.toString())\n            .set(PolicyCommandResponse.JsonFields.PAYLOAD,\n                    TestConstants.Policy.POLICY_NOT_ACCESSIBLE_EXCEPTION.toJson(FieldType.regularOrSpecial()))\n            .build()", "var_name": "KNOWN_JSON"}], "file": "signals/commands/policies/src/test/java/org/eclipse/ditto/signals/commands/policies/PolicyErrorResponseTest.java"}, "test_case": {"identifier": "createInstanceFromValidJson", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void createInstanceFromValidJson() {\n        final PolicyErrorResponse underTest =\n                PolicyErrorResponse.fromJson(KNOWN_JSON, TestConstants.EMPTY_DITTO_HEADERS);\n\n        assertThat(underTest).isNotNull();\n    }", "signature": "void createInstanceFromValidJson()", "full_signature": "@Test public void createInstanceFromValidJson()", "class_method_signature": "PolicyErrorResponseTest.createInstanceFromValidJson()", "testcase": true, "constructor": false, "invocations": ["fromJson", "isNotNull", "assertThat"]}, "focal_class": {"identifier": "PolicyErrorResponse", "superclass": "extends AbstractErrorResponse<PolicyErrorResponse>", "interfaces": "implements PolicyCommandResponse<PolicyErrorResponse>", "fields": [{"original_string": "public static final String TYPE = TYPE_PREFIX + \"errorResponse\";", "modifier": "public static final", "type": "String", "declarator": "TYPE = TYPE_PREFIX + \"errorResponse\"", "var_name": "TYPE"}, {"original_string": "private static final GlobalErrorRegistry GLOBAL_ERROR_REGISTRY = GlobalErrorRegistry.getInstance();", "modifier": "private static final", "type": "GlobalErrorRegistry", "declarator": "GLOBAL_ERROR_REGISTRY = GlobalErrorRegistry.getInstance()", "var_name": "GLOBAL_ERROR_REGISTRY"}, {"original_string": "private static final PolicyId FALLBACK_POLICY_ID = PolicyId.of(FALLBACK_ID);", "modifier": "private static final", "type": "PolicyId", "declarator": "FALLBACK_POLICY_ID = PolicyId.of(FALLBACK_ID)", "var_name": "FALLBACK_POLICY_ID"}, {"original_string": "private final PolicyId policyId;", "modifier": "private final", "type": "PolicyId", "declarator": "policyId", "var_name": "policyId"}, {"original_string": "private final DittoRuntimeException dittoRuntimeException;", "modifier": "private final", "type": "DittoRuntimeException", "declarator": "dittoRuntimeException", "var_name": "dittoRuntimeException"}], "methods": [{"identifier": "PolicyErrorResponse", "parameters": "(final PolicyId policyId, final DittoRuntimeException dittoRuntimeException,\n            final DittoHeaders dittoHeaders)", "modifiers": "private", "return": "", "signature": " PolicyErrorResponse(final PolicyId policyId, final DittoRuntimeException dittoRuntimeException,\n            final DittoHeaders dittoHeaders)", "full_signature": "private  PolicyErrorResponse(final PolicyId policyId, final DittoRuntimeException dittoRuntimeException,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "PolicyErrorResponse.PolicyErrorResponse(final PolicyId policyId, final DittoRuntimeException dittoRuntimeException,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": true}, {"identifier": "of", "parameters": "(final DittoRuntimeException dittoRuntimeException)", "modifiers": "public static", "return": "PolicyErrorResponse", "signature": "PolicyErrorResponse of(final DittoRuntimeException dittoRuntimeException)", "full_signature": "public static PolicyErrorResponse of(final DittoRuntimeException dittoRuntimeException)", "class_method_signature": "PolicyErrorResponse.of(final DittoRuntimeException dittoRuntimeException)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final String policyId, final DittoRuntimeException dittoRuntimeException)", "modifiers": "@Deprecated public static", "return": "PolicyErrorResponse", "signature": "PolicyErrorResponse of(final String policyId, final DittoRuntimeException dittoRuntimeException)", "full_signature": "@Deprecated public static PolicyErrorResponse of(final String policyId, final DittoRuntimeException dittoRuntimeException)", "class_method_signature": "PolicyErrorResponse.of(final String policyId, final DittoRuntimeException dittoRuntimeException)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final PolicyId policyId, final DittoRuntimeException dittoRuntimeException)", "modifiers": "public static", "return": "PolicyErrorResponse", "signature": "PolicyErrorResponse of(final PolicyId policyId, final DittoRuntimeException dittoRuntimeException)", "full_signature": "public static PolicyErrorResponse of(final PolicyId policyId, final DittoRuntimeException dittoRuntimeException)", "class_method_signature": "PolicyErrorResponse.of(final PolicyId policyId, final DittoRuntimeException dittoRuntimeException)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final DittoRuntimeException dittoRuntimeException,\n            final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "PolicyErrorResponse", "signature": "PolicyErrorResponse of(final DittoRuntimeException dittoRuntimeException,\n            final DittoHeaders dittoHeaders)", "full_signature": "public static PolicyErrorResponse of(final DittoRuntimeException dittoRuntimeException,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "PolicyErrorResponse.of(final DittoRuntimeException dittoRuntimeException,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final String policyId, final DittoRuntimeException dittoRuntimeException,\n            final DittoHeaders dittoHeaders)", "modifiers": "@Deprecated public static", "return": "PolicyErrorResponse", "signature": "PolicyErrorResponse of(final String policyId, final DittoRuntimeException dittoRuntimeException,\n            final DittoHeaders dittoHeaders)", "full_signature": "@Deprecated public static PolicyErrorResponse of(final String policyId, final DittoRuntimeException dittoRuntimeException,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "PolicyErrorResponse.of(final String policyId, final DittoRuntimeException dittoRuntimeException,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "of", "parameters": "(final PolicyId policyId, final DittoRuntimeException dittoRuntimeException,\n            final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "PolicyErrorResponse", "signature": "PolicyErrorResponse of(final PolicyId policyId, final DittoRuntimeException dittoRuntimeException,\n            final DittoHeaders dittoHeaders)", "full_signature": "public static PolicyErrorResponse of(final PolicyId policyId, final DittoRuntimeException dittoRuntimeException,\n            final DittoHeaders dittoHeaders)", "class_method_signature": "PolicyErrorResponse.of(final PolicyId policyId, final DittoRuntimeException dittoRuntimeException,\n            final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final String jsonString, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "PolicyErrorResponse", "signature": "PolicyErrorResponse fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "full_signature": "public static PolicyErrorResponse fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "class_method_signature": "PolicyErrorResponse.fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "fromJson", "parameters": "(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "PolicyErrorResponse", "signature": "PolicyErrorResponse fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "full_signature": "public static PolicyErrorResponse fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "class_method_signature": "PolicyErrorResponse.fromJson(final JsonObject jsonObject, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "getEntityId", "parameters": "()", "modifiers": "@Override public", "return": "PolicyId", "signature": "PolicyId getEntityId()", "full_signature": "@Override public PolicyId getEntityId()", "class_method_signature": "PolicyErrorResponse.getEntityId()", "testcase": false, "constructor": false}, {"identifier": "getDittoRuntimeException", "parameters": "()", "modifiers": "@Override public", "return": "DittoRuntimeException", "signature": "DittoRuntimeException getDittoRuntimeException()", "full_signature": "@Override public DittoRuntimeException getDittoRuntimeException()", "class_method_signature": "PolicyErrorResponse.getDittoRuntimeException()", "testcase": false, "constructor": false}, {"identifier": "getResourcePath", "parameters": "()", "modifiers": "@Override public", "return": "JsonPointer", "signature": "JsonPointer getResourcePath()", "full_signature": "@Override public JsonPointer getResourcePath()", "class_method_signature": "PolicyErrorResponse.getResourcePath()", "testcase": false, "constructor": false}, {"identifier": "appendPayload", "parameters": "(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "modifiers": "@Override protected", "return": "void", "signature": "void appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "full_signature": "@Override protected void appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "class_method_signature": "PolicyErrorResponse.appendPayload(final JsonObjectBuilder jsonObjectBuilder, final JsonSchemaVersion schemaVersion,\n            final Predicate<JsonField> thePredicate)", "testcase": false, "constructor": false}, {"identifier": "setDittoHeaders", "parameters": "(final DittoHeaders dittoHeaders)", "modifiers": "@Override public", "return": "PolicyErrorResponse", "signature": "PolicyErrorResponse setDittoHeaders(final DittoHeaders dittoHeaders)", "full_signature": "@Override public PolicyErrorResponse setDittoHeaders(final DittoHeaders dittoHeaders)", "class_method_signature": "PolicyErrorResponse.setDittoHeaders(final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false}, {"identifier": "canEqual", "parameters": "(final Object other)", "modifiers": "@Override protected", "return": "boolean", "signature": "boolean canEqual(final Object other)", "full_signature": "@Override protected boolean canEqual(final Object other)", "class_method_signature": "PolicyErrorResponse.canEqual(final Object other)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(@Nullable final Object o)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(@Nullable final Object o)", "full_signature": "@Override public boolean equals(@Nullable final Object o)", "class_method_signature": "PolicyErrorResponse.equals(@Nullable final Object o)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "PolicyErrorResponse.hashCode()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "PolicyErrorResponse.toString()", "testcase": false, "constructor": false}], "file": "signals/commands/policies/src/main/java/org/eclipse/ditto/signals/commands/policies/PolicyErrorResponse.java"}, "focal_method": {"identifier": "fromJson", "parameters": "(final String jsonString, final DittoHeaders dittoHeaders)", "modifiers": "public static", "return": "PolicyErrorResponse", "body": "public static PolicyErrorResponse fromJson(final String jsonString, final DittoHeaders dittoHeaders) {\n        final JsonObject jsonObject =\n                DittoJsonException.wrapJsonRuntimeException(() -> JsonFactory.newObject(jsonString));\n        return fromJson(jsonObject, dittoHeaders);\n    }", "signature": "PolicyErrorResponse fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "full_signature": "public static PolicyErrorResponse fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "class_method_signature": "PolicyErrorResponse.fromJson(final String jsonString, final DittoHeaders dittoHeaders)", "testcase": false, "constructor": false, "invocations": ["wrapJsonRuntimeException", "newObject", "fromJson"]}, "repository": {"repo_id": 87849739, "url": "https://github.com/eclipse/ditto", "stars": 139, "created": "4/10/2017 7:29:57 PM +00:00", "updates": "2020-01-27T14:02:39+00:00", "fork": "False", "license": "licensed"}}