{"test_class": {"identifier": "FlacAudioFileReaderTest", "superclass": "", "interfaces": "", "fields": [], "file": "jflac-codec/src/test/java/org/jflac/sound/spi/FlacAudioFileReaderTest.java"}, "test_case": {"identifier": "testGetAudioFileFormatWithUnbufferedFlacStream", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetAudioFileFormatWithUnbufferedFlacStream() throws IOException, UnsupportedAudioFileException {\n        final FlacAudioFileReader flacAudioFileReader = new FlacAudioFileReader();\n        final File flacTestFile = getFlacTestFile(\"cymbals.flac\");\n\n        InputStream in = null;\n        try {\n            in = new FileInputStream(flacTestFile);\n            assertFalse(\"For this test the stream MUST NOT support mark()\", in.markSupported());\n            flacAudioFileReader.getAudioFileFormat(in);\n            fail(\"Expected an IOException, because the stream didn't support mark. See AudioSystem#getAudioFileFormat(InputStream stream) javadocs for contract\");\n        } catch (IOException e) {\n            // expected this\n        } finally {\n            if (in != null) {\n                try {\n                    in.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }", "signature": "void testGetAudioFileFormatWithUnbufferedFlacStream()", "full_signature": "@Test public void testGetAudioFileFormatWithUnbufferedFlacStream()", "class_method_signature": "FlacAudioFileReaderTest.testGetAudioFileFormatWithUnbufferedFlacStream()", "testcase": true, "constructor": false, "invocations": ["getFlacTestFile", "assertFalse", "markSupported", "getAudioFileFormat", "fail", "close", "printStackTrace"]}, "focal_class": {"identifier": "FlacAudioFileReader", "superclass": "extends AudioFileReader", "interfaces": "", "fields": [{"original_string": "private static final boolean DEBUG = false;", "modifier": "private static final", "type": "boolean", "declarator": "DEBUG = false", "var_name": "DEBUG"}, {"original_string": "public static final String KEY_DURATION = \"duration\";", "modifier": "public static final", "type": "String", "declarator": "KEY_DURATION = \"duration\"", "var_name": "KEY_DURATION"}, {"original_string": "private FLACDecoder decoder;", "modifier": "private", "type": "FLACDecoder", "declarator": "decoder", "var_name": "decoder"}, {"original_string": "private StreamInfo streamInfo;", "modifier": "private", "type": "StreamInfo", "declarator": "streamInfo", "var_name": "streamInfo"}], "methods": [{"identifier": "getAudioFileFormat", "parameters": "(File file)", "modifiers": "public", "return": "AudioFileFormat", "signature": "AudioFileFormat getAudioFileFormat(File file)", "full_signature": "public AudioFileFormat getAudioFileFormat(File file)", "class_method_signature": "FlacAudioFileReader.getAudioFileFormat(File file)", "testcase": false, "constructor": false}, {"identifier": "getAudioFileFormat", "parameters": "(URL url)", "modifiers": "public", "return": "AudioFileFormat", "signature": "AudioFileFormat getAudioFileFormat(URL url)", "full_signature": "public AudioFileFormat getAudioFileFormat(URL url)", "class_method_signature": "FlacAudioFileReader.getAudioFileFormat(URL url)", "testcase": false, "constructor": false}, {"identifier": "getAudioFileFormat", "parameters": "(InputStream stream)", "modifiers": "public", "return": "AudioFileFormat", "signature": "AudioFileFormat getAudioFileFormat(InputStream stream)", "full_signature": "public AudioFileFormat getAudioFileFormat(InputStream stream)", "class_method_signature": "FlacAudioFileReader.getAudioFileFormat(InputStream stream)", "testcase": false, "constructor": false}, {"identifier": "getAudioFileFormat", "parameters": "(InputStream bitStream, int mediaLength)", "modifiers": "protected", "return": "AudioFileFormat", "signature": "AudioFileFormat getAudioFileFormat(InputStream bitStream, int mediaLength)", "full_signature": "protected AudioFileFormat getAudioFileFormat(InputStream bitStream, int mediaLength)", "class_method_signature": "FlacAudioFileReader.getAudioFileFormat(InputStream bitStream, int mediaLength)", "testcase": false, "constructor": false}, {"identifier": "getAudioInputStream", "parameters": "(File file)", "modifiers": "public", "return": "AudioInputStream", "signature": "AudioInputStream getAudioInputStream(File file)", "full_signature": "public AudioInputStream getAudioInputStream(File file)", "class_method_signature": "FlacAudioFileReader.getAudioInputStream(File file)", "testcase": false, "constructor": false}, {"identifier": "getAudioInputStream", "parameters": "(URL url)", "modifiers": "public", "return": "AudioInputStream", "signature": "AudioInputStream getAudioInputStream(URL url)", "full_signature": "public AudioInputStream getAudioInputStream(URL url)", "class_method_signature": "FlacAudioFileReader.getAudioInputStream(URL url)", "testcase": false, "constructor": false}, {"identifier": "getAudioInputStream", "parameters": "(final InputStream stream)", "modifiers": "public", "return": "AudioInputStream", "signature": "AudioInputStream getAudioInputStream(final InputStream stream)", "full_signature": "public AudioInputStream getAudioInputStream(final InputStream stream)", "class_method_signature": "FlacAudioFileReader.getAudioInputStream(final InputStream stream)", "testcase": false, "constructor": false}, {"identifier": "getAudioInputStream", "parameters": "(InputStream inputStream, int medialength)", "modifiers": "protected", "return": "AudioInputStream", "signature": "AudioInputStream getAudioInputStream(InputStream inputStream, int medialength)", "full_signature": "protected AudioInputStream getAudioInputStream(InputStream inputStream, int medialength)", "class_method_signature": "FlacAudioFileReader.getAudioInputStream(InputStream inputStream, int medialength)", "testcase": false, "constructor": false}], "file": "jflac-codec/src/main/java/org/jflac/sound/spi/FlacAudioFileReader.java"}, "focal_method": {"identifier": "getAudioFileFormat", "parameters": "(File file)", "modifiers": "public", "return": "AudioFileFormat", "body": "public AudioFileFormat getAudioFileFormat(File file) throws UnsupportedAudioFileException, IOException {\n        InputStream inputStream = null;\n        try {\n            inputStream = new FileInputStream(file);\n            return getAudioFileFormat(inputStream, (int) file.length());\n        } finally {\n            if (inputStream != null) inputStream.close();\n        }\n    }", "signature": "AudioFileFormat getAudioFileFormat(File file)", "full_signature": "public AudioFileFormat getAudioFileFormat(File file)", "class_method_signature": "FlacAudioFileReader.getAudioFileFormat(File file)", "testcase": false, "constructor": false, "invocations": ["getAudioFileFormat", "length", "close"]}, "repository": {"repo_id": 2017533, "url": "https://github.com/nguillaumin/jflac", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 18, "size": 14787, "license": "licensed"}}