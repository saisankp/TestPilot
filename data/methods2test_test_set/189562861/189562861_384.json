{"test_class": {"identifier": "ConsumerConfigTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-config/dubbo-config-api/src/test/java/com/alibaba/dubbo/config/ConsumerConfigTest.java"}, "test_case": {"identifier": "testTimeout", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testTimeout() throws Exception {\n        try {\n            System.clearProperty(\"sun.rmi.transport.tcp.responseTimeout\");\n            ConsumerConfig consumer = new ConsumerConfig();\n            consumer.setTimeout(10);\n            assertThat(consumer.getTimeout(), is(10));\n            assertThat(System.getProperty(\"sun.rmi.transport.tcp.responseTimeout\"), equalTo(\"10\"));\n        } finally {\n            System.clearProperty(\"sun.rmi.transport.tcp.responseTimeout\");\n        }\n    }", "signature": "void testTimeout()", "full_signature": "@Test public void testTimeout()", "class_method_signature": "ConsumerConfigTest.testTimeout()", "testcase": true, "constructor": false, "invocations": ["clearProperty", "setTimeout", "assertThat", "getTimeout", "is", "assertThat", "getProperty", "equalTo", "clearProperty"]}, "focal_class": {"identifier": "ConsumerConfig", "superclass": "extends AbstractReferenceConfig", "interfaces": "", "fields": [{"original_string": "private static final long serialVersionUID = 2827274711143680600L;", "modifier": "private static final", "type": "long", "declarator": "serialVersionUID = 2827274711143680600L", "var_name": "serialVersionUID"}, {"original_string": "private Boolean isDefault;", "modifier": "private", "type": "Boolean", "declarator": "isDefault", "var_name": "isDefault"}, {"original_string": "private String client;", "modifier": "private", "type": "String", "declarator": "client", "var_name": "client"}, {"original_string": "private String threadpool;", "modifier": "private", "type": "String", "declarator": "threadpool", "var_name": "threadpool"}, {"original_string": "private Integer corethreads;", "modifier": "private", "type": "Integer", "declarator": "corethreads", "var_name": "corethreads"}, {"original_string": "private Integer threads;", "modifier": "private", "type": "Integer", "declarator": "threads", "var_name": "threads"}, {"original_string": "private Integer queues;", "modifier": "private", "type": "Integer", "declarator": "queues", "var_name": "queues"}], "methods": [{"identifier": "setTimeout", "parameters": "(Integer timeout)", "modifiers": "@Override public", "return": "void", "signature": "void setTimeout(Integer timeout)", "full_signature": "@Override public void setTimeout(Integer timeout)", "class_method_signature": "ConsumerConfig.setTimeout(Integer timeout)", "testcase": false, "constructor": false}, {"identifier": "isDefault", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean isDefault()", "full_signature": "public Boolean isDefault()", "class_method_signature": "ConsumerConfig.isDefault()", "testcase": false, "constructor": false}, {"identifier": "setDefault", "parameters": "(Boolean isDefault)", "modifiers": "public", "return": "void", "signature": "void setDefault(Boolean isDefault)", "full_signature": "public void setDefault(Boolean isDefault)", "class_method_signature": "ConsumerConfig.setDefault(Boolean isDefault)", "testcase": false, "constructor": false}, {"identifier": "getClient", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getClient()", "full_signature": "public String getClient()", "class_method_signature": "ConsumerConfig.getClient()", "testcase": false, "constructor": false}, {"identifier": "setClient", "parameters": "(String client)", "modifiers": "public", "return": "void", "signature": "void setClient(String client)", "full_signature": "public void setClient(String client)", "class_method_signature": "ConsumerConfig.setClient(String client)", "testcase": false, "constructor": false}, {"identifier": "getThreadpool", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getThreadpool()", "full_signature": "public String getThreadpool()", "class_method_signature": "ConsumerConfig.getThreadpool()", "testcase": false, "constructor": false}, {"identifier": "setThreadpool", "parameters": "(String threadpool)", "modifiers": "public", "return": "void", "signature": "void setThreadpool(String threadpool)", "full_signature": "public void setThreadpool(String threadpool)", "class_method_signature": "ConsumerConfig.setThreadpool(String threadpool)", "testcase": false, "constructor": false}, {"identifier": "getDefault", "parameters": "()", "modifiers": "public", "return": "Boolean", "signature": "Boolean getDefault()", "full_signature": "public Boolean getDefault()", "class_method_signature": "ConsumerConfig.getDefault()", "testcase": false, "constructor": false}, {"identifier": "getCorethreads", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getCorethreads()", "full_signature": "public Integer getCorethreads()", "class_method_signature": "ConsumerConfig.getCorethreads()", "testcase": false, "constructor": false}, {"identifier": "setCorethreads", "parameters": "(Integer corethreads)", "modifiers": "public", "return": "void", "signature": "void setCorethreads(Integer corethreads)", "full_signature": "public void setCorethreads(Integer corethreads)", "class_method_signature": "ConsumerConfig.setCorethreads(Integer corethreads)", "testcase": false, "constructor": false}, {"identifier": "getThreads", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getThreads()", "full_signature": "public Integer getThreads()", "class_method_signature": "ConsumerConfig.getThreads()", "testcase": false, "constructor": false}, {"identifier": "setThreads", "parameters": "(Integer threads)", "modifiers": "public", "return": "void", "signature": "void setThreads(Integer threads)", "full_signature": "public void setThreads(Integer threads)", "class_method_signature": "ConsumerConfig.setThreads(Integer threads)", "testcase": false, "constructor": false}, {"identifier": "getQueues", "parameters": "()", "modifiers": "public", "return": "Integer", "signature": "Integer getQueues()", "full_signature": "public Integer getQueues()", "class_method_signature": "ConsumerConfig.getQueues()", "testcase": false, "constructor": false}, {"identifier": "setQueues", "parameters": "(Integer queues)", "modifiers": "public", "return": "void", "signature": "void setQueues(Integer queues)", "full_signature": "public void setQueues(Integer queues)", "class_method_signature": "ConsumerConfig.setQueues(Integer queues)", "testcase": false, "constructor": false}], "file": "dubbo-config/dubbo-config-api/src/main/java/com/alibaba/dubbo/config/ConsumerConfig.java"}, "focal_method": {"identifier": "setTimeout", "parameters": "(Integer timeout)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void setTimeout(Integer timeout) {\n        super.setTimeout(timeout);\n        String rmiTimeout = System.getProperty(\"sun.rmi.transport.tcp.responseTimeout\");\n        if (timeout != null && timeout > 0\n                && (rmiTimeout == null || rmiTimeout.length() == 0)) {\n            System.setProperty(\"sun.rmi.transport.tcp.responseTimeout\", String.valueOf(timeout));\n        }\n    }", "signature": "void setTimeout(Integer timeout)", "full_signature": "@Override public void setTimeout(Integer timeout)", "class_method_signature": "ConsumerConfig.setTimeout(Integer timeout)", "testcase": false, "constructor": false, "invocations": ["setTimeout", "getProperty", "length", "setProperty", "valueOf"]}, "repository": {"repo_id": 189562861, "url": "https://github.com/smallFive55/dubbo-dubbo-2.6.6", "language": "Java", "is_fork": false, "fork_count": 11, "stargazer_count": 8, "size": 1428, "license": "licensed"}}