{"test_class": {"identifier": "SqlRequestsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String SQL_QUERY = \"SELECT * FROM test ORDER BY column\";", "modifier": "private static final", "type": "String", "declarator": "SQL_QUERY = \"SELECT * FROM test ORDER BY column\"", "var_name": "SQL_QUERY"}, {"original_string": "private static final String SQL_QUERY_2 = \"SELECT * FROM test2 ORDER BY column\";", "modifier": "private static final", "type": "String", "declarator": "SQL_QUERY_2 = \"SELECT * FROM test2 ORDER BY column\"", "var_name": "SQL_QUERY_2"}, {"original_string": "private static final String TABLE = \"test\";", "modifier": "private static final", "type": "String", "declarator": "TABLE = \"test\"", "var_name": "TABLE"}, {"original_string": "private static final String TABLE_2 = \"test2\";", "modifier": "private static final", "type": "String", "declarator": "TABLE_2 = \"test2\"", "var_name": "TABLE_2"}, {"original_string": "private SqlRequest sqlRequest;", "modifier": "private", "type": "SqlRequest", "declarator": "sqlRequest", "var_name": "sqlRequest"}, {"original_string": "private SqlDeleteRequest sqlDeleteRequest;", "modifier": "private", "type": "SqlDeleteRequest", "declarator": "sqlDeleteRequest", "var_name": "sqlDeleteRequest"}, {"original_string": "private SqlUpdateRequest sqlUpdateRequest;", "modifier": "private", "type": "SqlUpdateRequest", "declarator": "sqlUpdateRequest", "var_name": "sqlUpdateRequest"}, {"original_string": "private SqlInsertRequest sqlInsertRequest;", "modifier": "private", "type": "SqlInsertRequest", "declarator": "sqlInsertRequest", "var_name": "sqlInsertRequest"}, {"original_string": "private SqlRequest sqlRequest2;", "modifier": "private", "type": "SqlRequest", "declarator": "sqlRequest2", "var_name": "sqlRequest2"}, {"original_string": "private SqlDeleteRequest sqlDeleteRequest2;", "modifier": "private", "type": "SqlDeleteRequest", "declarator": "sqlDeleteRequest2", "var_name": "sqlDeleteRequest2"}, {"original_string": "private SqlInsertRequest sqlInsertRequest2;", "modifier": "private", "type": "SqlInsertRequest", "declarator": "sqlInsertRequest2", "var_name": "sqlInsertRequest2"}, {"original_string": "private SqlUpdateRequest sqlUpdateRequest2;", "modifier": "private", "type": "SqlUpdateRequest", "declarator": "sqlUpdateRequest2", "var_name": "sqlUpdateRequest2"}], "file": "extensions/database/src/test/java/com/google/android/agera/database/SqlRequestsTest.java"}, "test_case": {"identifier": "shouldThrowExceptionForReuseOfCompilerOfColumn", "parameters": "()", "modifiers": "@Test(expected = IllegalStateException.class) public", "return": "void", "body": "@Test(expected = IllegalStateException.class)\n  public void shouldThrowExceptionForReuseOfCompilerOfColumn() {\n    final DBColumn<DBColumnConflictCompile<SqlInsertRequest, ?>> incompleteRequest =\n        sqlInsertRequest()\n            .table(TABLE_2);\n    incompleteRequest.column(\"column\", \"value\").compile();\n\n    incompleteRequest.column(\"column\", \"value\");\n  }", "signature": "void shouldThrowExceptionForReuseOfCompilerOfColumn()", "full_signature": "@Test(expected = IllegalStateException.class) public void shouldThrowExceptionForReuseOfCompilerOfColumn()", "class_method_signature": "SqlRequestsTest.shouldThrowExceptionForReuseOfCompilerOfColumn()", "testcase": true, "constructor": false, "invocations": ["table", "sqlInsertRequest", "compile", "column", "column"]}, "focal_class": {"identifier": "SqlRequests", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "sqlRequest", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @NonNull public static", "return": "DBSql<DBArgumentCompile<\n      SqlRequest, DBArgumentCompile<SqlRequest, DBCompile<SqlRequest>>>>", "signature": "DBSql<DBArgumentCompile<\n      SqlRequest, DBArgumentCompile<SqlRequest, DBCompile<SqlRequest>>>> sqlRequest()", "full_signature": "@SuppressWarnings(\"unchecked\") @NonNull public static DBSql<DBArgumentCompile<\n      SqlRequest, DBArgumentCompile<SqlRequest, DBCompile<SqlRequest>>>> sqlRequest()", "class_method_signature": "SqlRequests.sqlRequest()", "testcase": false, "constructor": false}, {"identifier": "sqlDeleteRequest", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @NonNull public static", "return": "DBTable<DBWhereCompile<SqlDeleteRequest, DBArgumentCompile<\n      SqlDeleteRequest, DBCompile<SqlDeleteRequest>>>>", "signature": "DBTable<DBWhereCompile<SqlDeleteRequest, DBArgumentCompile<\n      SqlDeleteRequest, DBCompile<SqlDeleteRequest>>>> sqlDeleteRequest()", "full_signature": "@SuppressWarnings(\"unchecked\") @NonNull public static DBTable<DBWhereCompile<SqlDeleteRequest, DBArgumentCompile<\n      SqlDeleteRequest, DBCompile<SqlDeleteRequest>>>> sqlDeleteRequest()", "class_method_signature": "SqlRequests.sqlDeleteRequest()", "testcase": false, "constructor": false}, {"identifier": "sqlInsertRequest", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @NonNull public static", "return": "DBTable<DBColumn<DBColumnConflictCompile<SqlInsertRequest, ?>>>", "signature": "DBTable<DBColumn<DBColumnConflictCompile<SqlInsertRequest, ?>>> sqlInsertRequest()", "full_signature": "@SuppressWarnings(\"unchecked\") @NonNull public static DBTable<DBColumn<DBColumnConflictCompile<SqlInsertRequest, ?>>> sqlInsertRequest()", "class_method_signature": "SqlRequests.sqlInsertRequest()", "testcase": false, "constructor": false}, {"identifier": "sqlUpdateRequest", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @NonNull public static", "return": "DBTable<DBColumn<DBColumnWhereConflictCompile<SqlUpdateRequest,\n      DBArgumentConflictCompile<SqlUpdateRequest, DBConflictCompile<SqlUpdateRequest>>, ?>>>", "signature": "DBTable<DBColumn<DBColumnWhereConflictCompile<SqlUpdateRequest,\n      DBArgumentConflictCompile<SqlUpdateRequest, DBConflictCompile<SqlUpdateRequest>>, ?>>> sqlUpdateRequest()", "full_signature": "@SuppressWarnings(\"unchecked\") @NonNull public static DBTable<DBColumn<DBColumnWhereConflictCompile<SqlUpdateRequest,\n      DBArgumentConflictCompile<SqlUpdateRequest, DBConflictCompile<SqlUpdateRequest>>, ?>>> sqlUpdateRequest()", "class_method_signature": "SqlRequests.sqlUpdateRequest()", "testcase": false, "constructor": false}, {"identifier": "SqlRequests", "parameters": "()", "modifiers": "private", "return": "", "signature": " SqlRequests()", "full_signature": "private  SqlRequests()", "class_method_signature": "SqlRequests.SqlRequests()", "testcase": false, "constructor": true}], "file": "extensions/database/src/main/java/com/google/android/agera/database/SqlRequests.java"}, "focal_method": {"identifier": "sqlInsertRequest", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") @NonNull public static", "return": "DBTable<DBColumn<DBColumnConflictCompile<SqlInsertRequest, ?>>>", "body": "@SuppressWarnings(\"unchecked\")\n  @NonNull\n  public static DBTable<DBColumn<DBColumnConflictCompile<SqlInsertRequest, ?>>> sqlInsertRequest() {\n    return new SqlRequestCompiler(SQL_INSERT_REQUEST);\n  }", "signature": "DBTable<DBColumn<DBColumnConflictCompile<SqlInsertRequest, ?>>> sqlInsertRequest()", "full_signature": "@SuppressWarnings(\"unchecked\") @NonNull public static DBTable<DBColumn<DBColumnConflictCompile<SqlInsertRequest, ?>>> sqlInsertRequest()", "class_method_signature": "SqlRequests.sqlInsertRequest()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 48175620, "url": "https://github.com/google/agera", "language": "Java", "is_fork": false, "fork_count": 669, "stargazer_count": 7333, "size": 968, "license": "licensed"}}