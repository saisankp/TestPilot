{"test_class": {"identifier": "ClassUtilsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String fileName = \"Configuration.xml\";", "modifier": "private", "type": "String", "declarator": "fileName = \"Configuration.xml\"", "var_name": "fileName"}, {"original_string": "private ClassLoader classLoader = Thread.currentThread().getContextClassLoader();", "modifier": "private", "type": "ClassLoader", "declarator": "classLoader = Thread.currentThread().getContextClassLoader()", "var_name": "classLoader"}, {"original_string": "private String fileContent = \"<test />\";", "modifier": "private", "type": "String", "declarator": "fileContent = \"<test />\"", "var_name": "fileContent"}, {"original_string": "protected final String JAR_FILE = \"/ClassLoader/zip/classLoader-test.zip\";", "modifier": "protected final", "type": "String", "declarator": "JAR_FILE = \"/ClassLoader/zip/classLoader-test.zip\"", "var_name": "JAR_FILE"}, {"original_string": "private ClassLoader nullClassLoader = null;", "modifier": "private", "type": "ClassLoader", "declarator": "nullClassLoader = null", "var_name": "nullClassLoader"}], "file": "core/src/test/java/nl/nn/adapterframework/util/ClassUtilsTest.java"}, "test_case": {"identifier": "bytesClassLoader09UrlWithFileScheme", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void bytesClassLoader09UrlWithFileScheme() throws IOException, ConfigurationException {\n\t\tClassLoader clres = Thread.currentThread().getContextClassLoader();\n\n\t\tString resource=\"/ClassLoader/fileOnlyOnLocalClassPath.txt\";\n\t\tURL url = ClassUtils.getResourceURL(clres, resource);\n\t\tString resourceAsFileUrl=url.toExternalForm();\n\t\tassertThat(resourceAsFileUrl, startsWith(\"file:\"));\n\n\t\tClassLoader cl = getBytesClassLoader();\n\t\ttestUri(cl,resourceAsFileUrl,\"-- /ClassLoader/fileOnlyOnLocalClassPath.txt --\",\"file\");\n\t}", "signature": "void bytesClassLoader09UrlWithFileScheme()", "full_signature": "@Test public void bytesClassLoader09UrlWithFileScheme()", "class_method_signature": "ClassUtilsTest.bytesClassLoader09UrlWithFileScheme()", "testcase": true, "constructor": false, "invocations": ["getContextClassLoader", "currentThread", "getResourceURL", "toExternalForm", "assertThat", "startsWith", "getBytesClassLoader", "testUri"]}, "focal_class": {"identifier": "ClassUtils", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger log = LogUtil.getLogger(ClassUtils.class);", "modifier": "private static", "type": "Logger", "declarator": "log = LogUtil.getLogger(ClassUtils.class)", "var_name": "log"}, {"original_string": "private static final boolean trace=false;", "modifier": "private static final", "type": "boolean", "declarator": "trace=false", "var_name": "trace"}, {"original_string": "private final static String defaultAllowedProtocols = AppConstants.getInstance().getString(\"classloader.allowed.protocols\", null);", "modifier": "private final static", "type": "String", "declarator": "defaultAllowedProtocols = AppConstants.getInstance().getString(\"classloader.allowed.protocols\", null)", "var_name": "defaultAllowedProtocols"}], "methods": [{"identifier": "getClassLoader", "parameters": "()", "modifiers": "private static", "return": "ClassLoader", "signature": "ClassLoader getClassLoader()", "full_signature": "private static ClassLoader getClassLoader()", "class_method_signature": "ClassUtils.getClassLoader()", "testcase": false, "constructor": false}, {"identifier": "getConstructorOnType", "parameters": "(Class clas, Class[] parameterTypes)", "modifiers": "public static", "return": "Constructor", "signature": "Constructor getConstructorOnType(Class clas, Class[] parameterTypes)", "full_signature": "public static Constructor getConstructorOnType(Class clas, Class[] parameterTypes)", "class_method_signature": "ClassUtils.getConstructorOnType(Class clas, Class[] parameterTypes)", "testcase": false, "constructor": false}, {"identifier": "getResourceURL", "parameters": "(Object obj, String resource)", "modifiers": "@Deprecated static public", "return": "URL", "signature": "URL getResourceURL(Object obj, String resource)", "full_signature": "@Deprecated static public URL getResourceURL(Object obj, String resource)", "class_method_signature": "ClassUtils.getResourceURL(Object obj, String resource)", "testcase": false, "constructor": false}, {"identifier": "getResourceURL", "parameters": "(Class clazz, String resource)", "modifiers": "@Deprecated static public", "return": "URL", "signature": "URL getResourceURL(Class clazz, String resource)", "full_signature": "@Deprecated static public URL getResourceURL(Class clazz, String resource)", "class_method_signature": "ClassUtils.getResourceURL(Class clazz, String resource)", "testcase": false, "constructor": false}, {"identifier": "getResourceURL", "parameters": "(ClassLoader classLoader, String resource)", "modifiers": "static public", "return": "URL", "signature": "URL getResourceURL(ClassLoader classLoader, String resource)", "full_signature": "static public URL getResourceURL(ClassLoader classLoader, String resource)", "class_method_signature": "ClassUtils.getResourceURL(ClassLoader classLoader, String resource)", "testcase": false, "constructor": false}, {"identifier": "getResourceURL", "parameters": "(ClassLoader classLoader, String resource, String allowedProtocols)", "modifiers": "static public", "return": "URL", "signature": "URL getResourceURL(ClassLoader classLoader, String resource, String allowedProtocols)", "full_signature": "static public URL getResourceURL(ClassLoader classLoader, String resource, String allowedProtocols)", "class_method_signature": "ClassUtils.getResourceURL(ClassLoader classLoader, String resource, String allowedProtocols)", "testcase": false, "constructor": false}, {"identifier": "urlToStream", "parameters": "(URL url, int timeoutMs)", "modifiers": "public static", "return": "InputStream", "signature": "InputStream urlToStream(URL url, int timeoutMs)", "full_signature": "public static InputStream urlToStream(URL url, int timeoutMs)", "class_method_signature": "ClassUtils.urlToStream(URL url, int timeoutMs)", "testcase": false, "constructor": false}, {"identifier": "urlToReader", "parameters": "(URL url)", "modifiers": "public static", "return": "Reader", "signature": "Reader urlToReader(URL url)", "full_signature": "public static Reader urlToReader(URL url)", "class_method_signature": "ClassUtils.urlToReader(URL url)", "testcase": false, "constructor": false}, {"identifier": "urlToReader", "parameters": "(URL url, int timeoutMs)", "modifiers": "public static", "return": "Reader", "signature": "Reader urlToReader(URL url, int timeoutMs)", "full_signature": "public static Reader urlToReader(URL url, int timeoutMs)", "class_method_signature": "ClassUtils.urlToReader(URL url, int timeoutMs)", "testcase": false, "constructor": false}, {"identifier": "implementsInterface", "parameters": "(Class class1, Class iface)", "modifiers": "public static", "return": "boolean", "signature": "boolean implementsInterface(Class class1, Class iface)", "full_signature": "public static boolean implementsInterface(Class class1, Class iface)", "class_method_signature": "ClassUtils.implementsInterface(Class class1, Class iface)", "testcase": false, "constructor": false}, {"identifier": "implementsInterface", "parameters": "(String className, String iface)", "modifiers": "public static", "return": "boolean", "signature": "boolean implementsInterface(String className, String iface)", "full_signature": "public static boolean implementsInterface(String className, String iface)", "class_method_signature": "ClassUtils.implementsInterface(String className, String iface)", "testcase": false, "constructor": false}, {"identifier": "lastModified", "parameters": "(Class aClass)", "modifiers": "public static", "return": "long", "signature": "long lastModified(Class aClass)", "full_signature": "public static long lastModified(Class aClass)", "class_method_signature": "ClassUtils.lastModified(Class aClass)", "testcase": false, "constructor": false}, {"identifier": "loadClass", "parameters": "(String className)", "modifiers": "public static", "return": "Class", "signature": "Class loadClass(String className)", "full_signature": "public static Class loadClass(String className)", "class_method_signature": "ClassUtils.loadClass(String className)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(String className)", "modifiers": "public static", "return": "Object", "signature": "Object newInstance(String className)", "full_signature": "public static Object newInstance(String className)", "class_method_signature": "ClassUtils.newInstance(String className)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(String className, Class[] parameterClasses, Object[] parameterObjects)", "modifiers": "public static", "return": "Object", "signature": "Object newInstance(String className, Class[] parameterClasses, Object[] parameterObjects)", "full_signature": "public static Object newInstance(String className, Class[] parameterClasses, Object[] parameterObjects)", "class_method_signature": "ClassUtils.newInstance(String className, Class[] parameterClasses, Object[] parameterObjects)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(String className, Object[] parameterObjects)", "modifiers": "public static", "return": "Object", "signature": "Object newInstance(String className, Object[] parameterObjects)", "full_signature": "public static Object newInstance(String className, Object[] parameterObjects)", "class_method_signature": "ClassUtils.newInstance(String className, Object[] parameterObjects)", "testcase": false, "constructor": false}, {"identifier": "which", "parameters": "(Class aClass)", "modifiers": "public static", "return": "String", "signature": "String which(Class aClass)", "full_signature": "public static String which(Class aClass)", "class_method_signature": "ClassUtils.which(Class aClass)", "testcase": false, "constructor": false}, {"identifier": "nameOf", "parameters": "(ClassLoader classLoader)", "modifiers": "public static", "return": "String", "signature": "String nameOf(ClassLoader classLoader)", "full_signature": "public static String nameOf(ClassLoader classLoader)", "class_method_signature": "ClassUtils.nameOf(ClassLoader classLoader)", "testcase": false, "constructor": false}, {"identifier": "nameOf", "parameters": "(Object o)", "modifiers": "public static", "return": "String", "signature": "String nameOf(Object o)", "full_signature": "public static String nameOf(Object o)", "class_method_signature": "ClassUtils.nameOf(Object o)", "testcase": false, "constructor": false}, {"identifier": "invokeSetter", "parameters": "(Object o, String name, Object value)", "modifiers": "public static", "return": "void", "signature": "void invokeSetter(Object o, String name, Object value)", "full_signature": "public static void invokeSetter(Object o, String name, Object value)", "class_method_signature": "ClassUtils.invokeSetter(Object o, String name, Object value)", "testcase": false, "constructor": false}, {"identifier": "invokeSetter", "parameters": "(Object o, String name, Object value, Class clazz)", "modifiers": "public static", "return": "void", "signature": "void invokeSetter(Object o, String name, Object value, Class clazz)", "full_signature": "public static void invokeSetter(Object o, String name, Object value, Class clazz)", "class_method_signature": "ClassUtils.invokeSetter(Object o, String name, Object value, Class clazz)", "testcase": false, "constructor": false}, {"identifier": "invokeGetterSafe", "parameters": "(Object o, String name, boolean forceAccess)", "modifiers": "public static", "return": "Object", "signature": "Object invokeGetterSafe(Object o, String name, boolean forceAccess)", "full_signature": "public static Object invokeGetterSafe(Object o, String name, boolean forceAccess)", "class_method_signature": "ClassUtils.invokeGetterSafe(Object o, String name, boolean forceAccess)", "testcase": false, "constructor": false}, {"identifier": "invokeGetter", "parameters": "(Object o, String name, boolean forceAccess)", "modifiers": "public static", "return": "Object", "signature": "Object invokeGetter(Object o, String name, boolean forceAccess)", "full_signature": "public static Object invokeGetter(Object o, String name, boolean forceAccess)", "class_method_signature": "ClassUtils.invokeGetter(Object o, String name, boolean forceAccess)", "testcase": false, "constructor": false}, {"identifier": "invokeGetter", "parameters": "(Object o, String name)", "modifiers": "public static", "return": "Object", "signature": "Object invokeGetter(Object o, String name)", "full_signature": "public static Object invokeGetter(Object o, String name)", "class_method_signature": "ClassUtils.invokeGetter(Object o, String name)", "testcase": false, "constructor": false}, {"identifier": "invokeStringGetterSafe", "parameters": "(Object o, String name)", "modifiers": "public static", "return": "String", "signature": "String invokeStringGetterSafe(Object o, String name)", "full_signature": "public static String invokeStringGetterSafe(Object o, String name)", "class_method_signature": "ClassUtils.invokeStringGetterSafe(Object o, String name)", "testcase": false, "constructor": false}, {"identifier": "invokeStringGetter", "parameters": "(Object o, String name)", "modifiers": "public static", "return": "String", "signature": "String invokeStringGetter(Object o, String name)", "full_signature": "public static String invokeStringGetter(Object o, String name)", "class_method_signature": "ClassUtils.invokeStringGetter(Object o, String name)", "testcase": false, "constructor": false}, {"identifier": "getFieldValueSafe", "parameters": "(Object o, String name)", "modifiers": "public static", "return": "Object", "signature": "Object getFieldValueSafe(Object o, String name)", "full_signature": "public static Object getFieldValueSafe(Object o, String name)", "class_method_signature": "ClassUtils.getFieldValueSafe(Object o, String name)", "testcase": false, "constructor": false}, {"identifier": "getFieldValue", "parameters": "(Object o, Class c, String name)", "modifiers": "public static", "return": "Object", "signature": "Object getFieldValue(Object o, Class c, String name)", "full_signature": "public static Object getFieldValue(Object o, Class c, String name)", "class_method_signature": "ClassUtils.getFieldValue(Object o, Class c, String name)", "testcase": false, "constructor": false}, {"identifier": "getFieldValue", "parameters": "(Object o, String name)", "modifiers": "public static", "return": "Object", "signature": "Object getFieldValue(Object o, String name)", "full_signature": "public static Object getFieldValue(Object o, String name)", "class_method_signature": "ClassUtils.getFieldValue(Object o, String name)", "testcase": false, "constructor": false}, {"identifier": "getDeclaredFieldValue", "parameters": "(Object o, Class c, String name)", "modifiers": "public static", "return": "Object", "signature": "Object getDeclaredFieldValue(Object o, Class c, String name)", "full_signature": "public static Object getDeclaredFieldValue(Object o, Class c, String name)", "class_method_signature": "ClassUtils.getDeclaredFieldValue(Object o, Class c, String name)", "testcase": false, "constructor": false}, {"identifier": "getDeclaredFieldValue", "parameters": "(Object o, String name)", "modifiers": "public static", "return": "Object", "signature": "Object getDeclaredFieldValue(Object o, String name)", "full_signature": "public static Object getDeclaredFieldValue(Object o, String name)", "class_method_signature": "ClassUtils.getDeclaredFieldValue(Object o, String name)", "testcase": false, "constructor": false}, {"identifier": "appendFieldsAndMethods", "parameters": "(StringBuffer result, Object o, String type, Class c)", "modifiers": "private static", "return": "void", "signature": "void appendFieldsAndMethods(StringBuffer result, Object o, String type, Class c)", "full_signature": "private static void appendFieldsAndMethods(StringBuffer result, Object o, String type, Class c)", "class_method_signature": "ClassUtils.appendFieldsAndMethods(StringBuffer result, Object o, String type, Class c)", "testcase": false, "constructor": false}, {"identifier": "debugObject", "parameters": "(Object o)", "modifiers": "public static", "return": "String", "signature": "String debugObject(Object o)", "full_signature": "public static String debugObject(Object o)", "class_method_signature": "ClassUtils.debugObject(Object o)", "testcase": false, "constructor": false}, {"identifier": "reflectionToString", "parameters": "(final Object o, final String fieldnameEnd)", "modifiers": "public static", "return": "String", "signature": "String reflectionToString(final Object o, final String fieldnameEnd)", "full_signature": "public static String reflectionToString(final Object o, final String fieldnameEnd)", "class_method_signature": "ClassUtils.reflectionToString(final Object o, final String fieldnameEnd)", "testcase": false, "constructor": false}, {"identifier": "getCleanedFilePath", "parameters": "(String path)", "modifiers": "public static", "return": "String", "signature": "String getCleanedFilePath(String path)", "full_signature": "public static String getCleanedFilePath(String path)", "class_method_signature": "ClassUtils.getCleanedFilePath(String path)", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/util/ClassUtils.java"}, "focal_method": {"identifier": "getResourceURL", "parameters": "(Object obj, String resource)", "modifiers": "@Deprecated static public", "return": "URL", "body": "@Deprecated\n\tstatic public URL getResourceURL(Object obj, String resource) {\n\t\treturn getResourceURL(obj.getClass(), resource);\n\t}", "signature": "URL getResourceURL(Object obj, String resource)", "full_signature": "@Deprecated static public URL getResourceURL(Object obj, String resource)", "class_method_signature": "ClassUtils.getResourceURL(Object obj, String resource)", "testcase": false, "constructor": false, "invocations": ["getResourceURL", "getClass"]}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}