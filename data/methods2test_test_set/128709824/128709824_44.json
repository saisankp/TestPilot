{"test_class": {"identifier": "FaultToleranceConfigManagerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private FaultToleranceConfig defaultConfig = new FaultToleranceConfig();", "modifier": "private", "type": "FaultToleranceConfig", "declarator": "defaultConfig = new FaultToleranceConfig()", "var_name": "defaultConfig"}], "file": "fault/fault-tolerance/src/test/java/com/alipay/sofa/rpc/client/aft/FaultToleranceConfigManagerTest.java"}, "test_case": {"identifier": "getLeastCallCount", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void getLeastCallCount() throws Exception {\n        Assert.assertEquals(FaultToleranceConfigManager.getLeastCallCount(null), defaultConfig.getLeastCallCount());\n    }", "signature": "void getLeastCallCount()", "full_signature": "@Test public void getLeastCallCount()", "class_method_signature": "FaultToleranceConfigManagerTest.getLeastCallCount()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getLeastCallCount", "getLeastCallCount"]}, "focal_class": {"identifier": "FaultToleranceConfigManager", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger                                      LOGGER      = LoggerFactory\n                                                                                     .getLogger(FaultToleranceConfigManager.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER      = LoggerFactory\n                                                                                     .getLogger(FaultToleranceConfigManager.class)", "var_name": "LOGGER"}, {"original_string": "private static final ConcurrentMap<String, FaultToleranceConfig> APP_CONFIGS = new ConcurrentHashMap<String, FaultToleranceConfig>();", "modifier": "private static final", "type": "ConcurrentMap<String, FaultToleranceConfig>", "declarator": "APP_CONFIGS = new ConcurrentHashMap<String, FaultToleranceConfig>()", "var_name": "APP_CONFIGS"}, {"original_string": "private static final FaultToleranceConfig                        DEFAULT_CFG = new FaultToleranceConfig();", "modifier": "private static final", "type": "FaultToleranceConfig", "declarator": "DEFAULT_CFG = new FaultToleranceConfig()", "var_name": "DEFAULT_CFG"}, {"original_string": "private static volatile boolean                                  aftEnable   = false;", "modifier": "private static volatile", "type": "boolean", "declarator": "aftEnable   = false", "var_name": "aftEnable"}], "methods": [{"identifier": "putAppConfig", "parameters": "(String appName, FaultToleranceConfig value)", "modifiers": "public static", "return": "void", "signature": "void putAppConfig(String appName, FaultToleranceConfig value)", "full_signature": "public static void putAppConfig(String appName, FaultToleranceConfig value)", "class_method_signature": "FaultToleranceConfigManager.putAppConfig(String appName, FaultToleranceConfig value)", "testcase": false, "constructor": false}, {"identifier": "calcEnable", "parameters": "()", "modifiers": "static", "return": "void", "signature": "void calcEnable()", "full_signature": "static void calcEnable()", "class_method_signature": "FaultToleranceConfigManager.calcEnable()", "testcase": false, "constructor": false}, {"identifier": "isEnable", "parameters": "()", "modifiers": "public static", "return": "boolean", "signature": "boolean isEnable()", "full_signature": "public static boolean isEnable()", "class_method_signature": "FaultToleranceConfigManager.isEnable()", "testcase": false, "constructor": false}, {"identifier": "getConfig", "parameters": "(String appName)", "modifiers": "public static", "return": "FaultToleranceConfig", "signature": "FaultToleranceConfig getConfig(String appName)", "full_signature": "public static FaultToleranceConfig getConfig(String appName)", "class_method_signature": "FaultToleranceConfigManager.getConfig(String appName)", "testcase": false, "constructor": false}, {"identifier": "getTimeWindow", "parameters": "(String appName)", "modifiers": "public static", "return": "long", "signature": "long getTimeWindow(String appName)", "full_signature": "public static long getTimeWindow(String appName)", "class_method_signature": "FaultToleranceConfigManager.getTimeWindow(String appName)", "testcase": false, "constructor": false}, {"identifier": "getLeastCallCount", "parameters": "(String appName)", "modifiers": "public static", "return": "long", "signature": "long getLeastCallCount(String appName)", "full_signature": "public static long getLeastCallCount(String appName)", "class_method_signature": "FaultToleranceConfigManager.getLeastCallCount(String appName)", "testcase": false, "constructor": false}, {"identifier": "getLeastWindowCount", "parameters": "(String appName)", "modifiers": "public static", "return": "long", "signature": "long getLeastWindowCount(String appName)", "full_signature": "public static long getLeastWindowCount(String appName)", "class_method_signature": "FaultToleranceConfigManager.getLeastWindowCount(String appName)", "testcase": false, "constructor": false}, {"identifier": "getLeastWindowExceptionRateMultiple", "parameters": "(String appName)", "modifiers": "public static", "return": "double", "signature": "double getLeastWindowExceptionRateMultiple(String appName)", "full_signature": "public static double getLeastWindowExceptionRateMultiple(String appName)", "class_method_signature": "FaultToleranceConfigManager.getLeastWindowExceptionRateMultiple(String appName)", "testcase": false, "constructor": false}, {"identifier": "getWeightDegradeRate", "parameters": "(String appName)", "modifiers": "public static", "return": "double", "signature": "double getWeightDegradeRate(String appName)", "full_signature": "public static double getWeightDegradeRate(String appName)", "class_method_signature": "FaultToleranceConfigManager.getWeightDegradeRate(String appName)", "testcase": false, "constructor": false}, {"identifier": "isRegulationEffective", "parameters": "(String appName)", "modifiers": "public static", "return": "boolean", "signature": "boolean isRegulationEffective(String appName)", "full_signature": "public static boolean isRegulationEffective(String appName)", "class_method_signature": "FaultToleranceConfigManager.isRegulationEffective(String appName)", "testcase": false, "constructor": false}, {"identifier": "isDegradeEffective", "parameters": "(String appName)", "modifiers": "public static", "return": "boolean", "signature": "boolean isDegradeEffective(String appName)", "full_signature": "public static boolean isDegradeEffective(String appName)", "class_method_signature": "FaultToleranceConfigManager.isDegradeEffective(String appName)", "testcase": false, "constructor": false}, {"identifier": "getDegradeLeastWeight", "parameters": "(String appName)", "modifiers": "public static", "return": "int", "signature": "int getDegradeLeastWeight(String appName)", "full_signature": "public static int getDegradeLeastWeight(String appName)", "class_method_signature": "FaultToleranceConfigManager.getDegradeLeastWeight(String appName)", "testcase": false, "constructor": false}, {"identifier": "getWeightRecoverRate", "parameters": "(String appName)", "modifiers": "public static", "return": "double", "signature": "double getWeightRecoverRate(String appName)", "full_signature": "public static double getWeightRecoverRate(String appName)", "class_method_signature": "FaultToleranceConfigManager.getWeightRecoverRate(String appName)", "testcase": false, "constructor": false}, {"identifier": "getDegradeMaxIpCount", "parameters": "(String appName)", "modifiers": "public static", "return": "int", "signature": "int getDegradeMaxIpCount(String appName)", "full_signature": "public static int getDegradeMaxIpCount(String appName)", "class_method_signature": "FaultToleranceConfigManager.getDegradeMaxIpCount(String appName)", "testcase": false, "constructor": false}], "file": "fault/fault-tolerance/src/main/java/com/alipay/sofa/rpc/client/aft/FaultToleranceConfigManager.java"}, "focal_method": {"identifier": "getLeastCallCount", "parameters": "(String appName)", "modifiers": "public static", "return": "long", "body": "public static long getLeastCallCount(String appName) {\n        FaultToleranceConfig config = getConfig(appName);\n        return config.getLeastCallCount();\n    }", "signature": "long getLeastCallCount(String appName)", "full_signature": "public static long getLeastCallCount(String appName)", "class_method_signature": "FaultToleranceConfigManager.getLeastCallCount(String appName)", "testcase": false, "constructor": false, "invocations": ["getConfig", "getLeastCallCount"]}, "repository": {"repo_id": 128709824, "url": "https://github.com/sofastack/sofa-rpc", "stars": 3001, "created": "4/9/2018 3:32:04 AM +00:00", "updates": "2020-01-22T02:08:51+00:00", "fork": "False", "license": "licensed"}}