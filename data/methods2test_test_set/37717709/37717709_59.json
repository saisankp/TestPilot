{"test_class": {"identifier": "TestClasspathExtractor", "superclass": "", "interfaces": "", "fields": [], "file": "org.jvoicexml.config/src/test/java/org/jvoicexml/config/TestClasspathExtractor.java"}, "test_case": {"identifier": "testGetClasspathEntries", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetClasspathEntries() throws Exception {\n        final TransformerFactory factory = TransformerFactory.newInstance();\n        final Transformer transformer = factory.newTransformer();\n        final Source source =\n            new StreamSource(\"../org.jvoicexml.config/src/test/resources/config/test-implementation.xml\");\n        final ClasspathExtractor extractor = new ClasspathExtractor();\n        final Result result = new SAXResult(extractor);\n        transformer.transform(source, result);\n        final URL[] urls = extractor.getClasspathEntries();\n        Assert.assertEquals(1, urls.length);\n        Assert.assertTrue(urls[0].toString().indexOf(\"src/test/java\") > 0);\n    }", "signature": "void testGetClasspathEntries()", "full_signature": "@Test public void testGetClasspathEntries()", "class_method_signature": "TestClasspathExtractor.testGetClasspathEntries()", "testcase": true, "constructor": false, "invocations": ["newInstance", "newTransformer", "transform", "getClasspathEntries", "assertEquals", "assertTrue", "indexOf", "toString"]}, "focal_class": {"identifier": "ClasspathExtractor", "superclass": "", "interfaces": "implements ContentHandler", "fields": [{"original_string": "private static final Logger LOGGER =\n        LogManager.getLogger(ClasspathExtractor.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER =\n        LogManager.getLogger(ClasspathExtractor.class)", "var_name": "LOGGER"}, {"original_string": "private StringBuilder str;", "modifier": "private", "type": "StringBuilder", "declarator": "str", "var_name": "str"}, {"original_string": "private Collection<URL> entries;", "modifier": "private", "type": "Collection<URL>", "declarator": "entries", "var_name": "entries"}, {"original_string": "private String repository;", "modifier": "private", "type": "String", "declarator": "repository", "var_name": "repository"}], "methods": [{"identifier": "getClasspathEntries", "parameters": "()", "modifiers": "public", "return": "URL[]", "signature": "URL[] getClasspathEntries()", "full_signature": "public URL[] getClasspathEntries()", "class_method_signature": "ClasspathExtractor.getClasspathEntries()", "testcase": false, "constructor": false}, {"identifier": "getLoaderRepostory", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getLoaderRepostory()", "full_signature": "public String getLoaderRepostory()", "class_method_signature": "ClasspathExtractor.getLoaderRepostory()", "testcase": false, "constructor": false}, {"identifier": "startDocument", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void startDocument()", "full_signature": "public void startDocument()", "class_method_signature": "ClasspathExtractor.startDocument()", "testcase": false, "constructor": false}, {"identifier": "characters", "parameters": "(final char[] ch, final int start, final int length)", "modifiers": "public", "return": "void", "signature": "void characters(final char[] ch, final int start, final int length)", "full_signature": "public void characters(final char[] ch, final int start, final int length)", "class_method_signature": "ClasspathExtractor.characters(final char[] ch, final int start, final int length)", "testcase": false, "constructor": false}, {"identifier": "endDocument", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void endDocument()", "full_signature": "public void endDocument()", "class_method_signature": "ClasspathExtractor.endDocument()", "testcase": false, "constructor": false}, {"identifier": "endElement", "parameters": "(final String uri, final String localName,\n            final String name)", "modifiers": "public", "return": "void", "signature": "void endElement(final String uri, final String localName,\n            final String name)", "full_signature": "public void endElement(final String uri, final String localName,\n            final String name)", "class_method_signature": "ClasspathExtractor.endElement(final String uri, final String localName,\n            final String name)", "testcase": false, "constructor": false}, {"identifier": "endPrefixMapping", "parameters": "(final String prefix)", "modifiers": "public", "return": "void", "signature": "void endPrefixMapping(final String prefix)", "full_signature": "public void endPrefixMapping(final String prefix)", "class_method_signature": "ClasspathExtractor.endPrefixMapping(final String prefix)", "testcase": false, "constructor": false}, {"identifier": "ignorableWhitespace", "parameters": "(final char[] ch, final int start,\n            final int length)", "modifiers": "public", "return": "void", "signature": "void ignorableWhitespace(final char[] ch, final int start,\n            final int length)", "full_signature": "public void ignorableWhitespace(final char[] ch, final int start,\n            final int length)", "class_method_signature": "ClasspathExtractor.ignorableWhitespace(final char[] ch, final int start,\n            final int length)", "testcase": false, "constructor": false}, {"identifier": "processingInstruction", "parameters": "(final String target, final String data)", "modifiers": "public", "return": "void", "signature": "void processingInstruction(final String target, final String data)", "full_signature": "public void processingInstruction(final String target, final String data)", "class_method_signature": "ClasspathExtractor.processingInstruction(final String target, final String data)", "testcase": false, "constructor": false}, {"identifier": "setDocumentLocator", "parameters": "(final Locator locator)", "modifiers": "public", "return": "void", "signature": "void setDocumentLocator(final Locator locator)", "full_signature": "public void setDocumentLocator(final Locator locator)", "class_method_signature": "ClasspathExtractor.setDocumentLocator(final Locator locator)", "testcase": false, "constructor": false}, {"identifier": "skippedEntity", "parameters": "(final String name)", "modifiers": "public", "return": "void", "signature": "void skippedEntity(final String name)", "full_signature": "public void skippedEntity(final String name)", "class_method_signature": "ClasspathExtractor.skippedEntity(final String name)", "testcase": false, "constructor": false}, {"identifier": "startElement", "parameters": "(final String uri, final String localName,\n            final String name, final Attributes atts)", "modifiers": "public", "return": "void", "signature": "void startElement(final String uri, final String localName,\n            final String name, final Attributes atts)", "full_signature": "public void startElement(final String uri, final String localName,\n            final String name, final Attributes atts)", "class_method_signature": "ClasspathExtractor.startElement(final String uri, final String localName,\n            final String name, final Attributes atts)", "testcase": false, "constructor": false}, {"identifier": "startPrefixMapping", "parameters": "(final String prefix, final String uri)", "modifiers": "public", "return": "void", "signature": "void startPrefixMapping(final String prefix, final String uri)", "full_signature": "public void startPrefixMapping(final String prefix, final String uri)", "class_method_signature": "ClasspathExtractor.startPrefixMapping(final String prefix, final String uri)", "testcase": false, "constructor": false}], "file": "org.jvoicexml.config/src/main/java/org/jvoicexml/config/ClasspathExtractor.java"}, "focal_method": {"identifier": "getClasspathEntries", "parameters": "()", "modifiers": "public", "return": "URL[]", "body": "public URL[] getClasspathEntries() {\n        final URL[] urls = new URL[entries.size()];\n        return entries.toArray(urls);\n    }", "signature": "URL[] getClasspathEntries()", "full_signature": "public URL[] getClasspathEntries()", "class_method_signature": "ClasspathExtractor.getClasspathEntries()", "testcase": false, "constructor": false, "invocations": ["size", "toArray"]}, "repository": {"repo_id": 37717709, "url": "https://github.com/JVoiceXML/JVoiceXML", "language": "Java", "is_fork": false, "fork_count": 32, "stargazer_count": 50, "size": 436089, "license": "licensed"}}