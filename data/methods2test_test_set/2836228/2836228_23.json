{"test_class": {"identifier": "ConfigurationStoreTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static Logger LOG = Logger.getLogger(ConfigurationStoreTest.class);", "modifier": "private static", "type": "Logger", "declarator": "LOG = Logger.getLogger(ConfigurationStoreTest.class)", "var_name": "LOG"}, {"original_string": "private ConfigurationStore store = ConfigurationStore.get();", "modifier": "private", "type": "ConfigurationStore", "declarator": "store = ConfigurationStore.get()", "var_name": "store"}], "file": "common/src/test/java/org/apache/ivory/entity/store/ConfigurationStoreTest.java"}, "test_case": {"identifier": "testRemove", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testRemove() throws Exception {\n    Process process = new Process();\n    process.setName(\"remove\");\n    store.publish(EntityType.PROCESS, process);\n    Process p = store.get(EntityType.PROCESS, \"remove\");\n    Assert.assertEquals(p, process);\n    store.remove(EntityType.PROCESS, \"remove\");\n    p = store.get(EntityType.PROCESS, \"remove\");\n    Assert.assertNull(p);\n  }", "signature": "void testRemove()", "full_signature": "@Test public void testRemove()", "class_method_signature": "ConfigurationStoreTest.testRemove()", "testcase": true, "constructor": false, "invocations": ["setName", "publish", "get", "assertEquals", "remove", "get", "assertNull"]}, "focal_class": {"identifier": "ConfigurationStore", "superclass": "", "interfaces": "implements IvoryService", "fields": [{"original_string": "private static final Logger LOG = Logger.getLogger(ConfigurationStore.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = Logger.getLogger(ConfigurationStore.class)", "var_name": "LOG"}, {"original_string": "private static final Logger AUDIT = Logger.getLogger(\"AUDIT\");", "modifier": "private static final", "type": "Logger", "declarator": "AUDIT = Logger.getLogger(\"AUDIT\")", "var_name": "AUDIT"}, {"original_string": "private static final String UTF_8 = \"UTF-8\";", "modifier": "private static final", "type": "String", "declarator": "UTF_8 = \"UTF-8\"", "var_name": "UTF_8"}, {"original_string": "private static final ConfigurationStore store = new ConfigurationStore();", "modifier": "private static final", "type": "ConfigurationStore", "declarator": "store = new ConfigurationStore()", "var_name": "store"}, {"original_string": "private Set<ConfigurationChangeListener> listeners = new LinkedHashSet<ConfigurationChangeListener>();", "modifier": "private", "type": "Set<ConfigurationChangeListener>", "declarator": "listeners = new LinkedHashSet<ConfigurationChangeListener>()", "var_name": "listeners"}, {"original_string": "private ThreadLocal<Entity> updatesInProgress = new ThreadLocal<Entity>();", "modifier": "private", "type": "ThreadLocal<Entity>", "declarator": "updatesInProgress = new ThreadLocal<Entity>()", "var_name": "updatesInProgress"}, {"original_string": "private final Map<EntityType, ConcurrentHashMap<String, Entity>> dictionary = new HashMap<EntityType, ConcurrentHashMap<String, Entity>>();", "modifier": "private final", "type": "Map<EntityType, ConcurrentHashMap<String, Entity>>", "declarator": "dictionary = new HashMap<EntityType, ConcurrentHashMap<String, Entity>>()", "var_name": "dictionary"}, {"original_string": "private final FileSystem fs;", "modifier": "private final", "type": "FileSystem", "declarator": "fs", "var_name": "fs"}, {"original_string": "private final Path storePath;", "modifier": "private final", "type": "Path", "declarator": "storePath", "var_name": "storePath"}, {"original_string": "private static final Entity NULL = new Entity() {\n        @Override\n        public String getName() {\n            return \"NULL\";\n        }\n    };", "modifier": "private static final", "type": "Entity", "declarator": "NULL = new Entity() {\n        @Override\n        public String getName() {\n            return \"NULL\";\n        }\n    }", "var_name": "NULL"}], "methods": [{"identifier": "get", "parameters": "()", "modifiers": "public static", "return": "ConfigurationStore", "signature": "ConfigurationStore get()", "full_signature": "public static ConfigurationStore get()", "class_method_signature": "ConfigurationStore.get()", "testcase": false, "constructor": false}, {"identifier": "ConfigurationStore", "parameters": "()", "modifiers": "@SuppressWarnings(\"unchecked\") private", "return": "", "signature": " ConfigurationStore()", "full_signature": "@SuppressWarnings(\"unchecked\") private  ConfigurationStore()", "class_method_signature": "ConfigurationStore.ConfigurationStore()", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void init()", "full_signature": "@Override public void init()", "class_method_signature": "ConfigurationStore.init()", "testcase": false, "constructor": false}, {"identifier": "registerListener", "parameters": "(ConfigurationChangeListener listener)", "modifiers": "public", "return": "void", "signature": "void registerListener(ConfigurationChangeListener listener)", "full_signature": "public void registerListener(ConfigurationChangeListener listener)", "class_method_signature": "ConfigurationStore.registerListener(ConfigurationChangeListener listener)", "testcase": false, "constructor": false}, {"identifier": "publish", "parameters": "(EntityType type, Entity entity)", "modifiers": "public synchronized", "return": "void", "signature": "void publish(EntityType type, Entity entity)", "full_signature": "public synchronized void publish(EntityType type, Entity entity)", "class_method_signature": "ConfigurationStore.publish(EntityType type, Entity entity)", "testcase": false, "constructor": false}, {"identifier": "updateInternal", "parameters": "(EntityType type, Entity entity)", "modifiers": "private synchronized", "return": "void", "signature": "void updateInternal(EntityType type, Entity entity)", "full_signature": "private synchronized void updateInternal(EntityType type, Entity entity)", "class_method_signature": "ConfigurationStore.updateInternal(EntityType type, Entity entity)", "testcase": false, "constructor": false}, {"identifier": "rollbackUpdate", "parameters": "(EntityType type, Entity entity)", "modifiers": "public synchronized", "return": "void", "signature": "void rollbackUpdate(EntityType type, Entity entity)", "full_signature": "public synchronized void rollbackUpdate(EntityType type, Entity entity)", "class_method_signature": "ConfigurationStore.rollbackUpdate(EntityType type, Entity entity)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(EntityType type, Entity entity)", "modifiers": "public synchronized", "return": "void", "signature": "void update(EntityType type, Entity entity)", "full_signature": "public synchronized void update(EntityType type, Entity entity)", "class_method_signature": "ConfigurationStore.update(EntityType type, Entity entity)", "testcase": false, "constructor": false}, {"identifier": "onAdd", "parameters": "(Entity entity)", "modifiers": "private", "return": "void", "signature": "void onAdd(Entity entity)", "full_signature": "private void onAdd(Entity entity)", "class_method_signature": "ConfigurationStore.onAdd(Entity entity)", "testcase": false, "constructor": false}, {"identifier": "onChange", "parameters": "(Entity oldEntity, Entity newEntity)", "modifiers": "private", "return": "void", "signature": "void onChange(Entity oldEntity, Entity newEntity)", "full_signature": "private void onChange(Entity oldEntity, Entity newEntity)", "class_method_signature": "ConfigurationStore.onChange(Entity oldEntity, Entity newEntity)", "testcase": false, "constructor": false}, {"identifier": "initiateUpdate", "parameters": "(Entity entity)", "modifiers": "public synchronized", "return": "void", "signature": "void initiateUpdate(Entity entity)", "full_signature": "public synchronized void initiateUpdate(Entity entity)", "class_method_signature": "ConfigurationStore.initiateUpdate(Entity entity)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(EntityType type, String name)", "modifiers": "@SuppressWarnings(\"unchecked\") public", "return": "T", "signature": "T get(EntityType type, String name)", "full_signature": "@SuppressWarnings(\"unchecked\") public T get(EntityType type, String name)", "class_method_signature": "ConfigurationStore.get(EntityType type, String name)", "testcase": false, "constructor": false}, {"identifier": "getEntities", "parameters": "(EntityType type)", "modifiers": "public", "return": "Collection<String>", "signature": "Collection<String> getEntities(EntityType type)", "full_signature": "public Collection<String> getEntities(EntityType type)", "class_method_signature": "ConfigurationStore.getEntities(EntityType type)", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "(EntityType type, String name)", "modifiers": "public", "return": "boolean", "signature": "boolean remove(EntityType type, String name)", "full_signature": "public boolean remove(EntityType type, String name)", "class_method_signature": "ConfigurationStore.remove(EntityType type, String name)", "testcase": false, "constructor": false}, {"identifier": "onRemove", "parameters": "(Entity entity)", "modifiers": "private", "return": "void", "signature": "void onRemove(Entity entity)", "full_signature": "private void onRemove(Entity entity)", "class_method_signature": "ConfigurationStore.onRemove(Entity entity)", "testcase": false, "constructor": false}, {"identifier": "search", "parameters": "(EntityType type, String... keywords)", "modifiers": "public", "return": "Entity[]", "signature": "Entity[] search(EntityType type, String... keywords)", "full_signature": "public Entity[] search(EntityType type, String... keywords)", "class_method_signature": "ConfigurationStore.search(EntityType type, String... keywords)", "testcase": false, "constructor": false}, {"identifier": "persist", "parameters": "(EntityType type, Entity entity)", "modifiers": "private", "return": "void", "signature": "void persist(EntityType type, Entity entity)", "full_signature": "private void persist(EntityType type, Entity entity)", "class_method_signature": "ConfigurationStore.persist(EntityType type, Entity entity)", "testcase": false, "constructor": false}, {"identifier": "archive", "parameters": "(EntityType type, String name)", "modifiers": "private", "return": "void", "signature": "void archive(EntityType type, String name)", "full_signature": "private void archive(EntityType type, String name)", "class_method_signature": "ConfigurationStore.archive(EntityType type, String name)", "testcase": false, "constructor": false}, {"identifier": "restore", "parameters": "(EntityType type, String name)", "modifiers": "@SuppressWarnings(\"unchecked\") private synchronized", "return": "T", "signature": "T restore(EntityType type, String name)", "full_signature": "@SuppressWarnings(\"unchecked\") private synchronized T restore(EntityType type, String name)", "class_method_signature": "ConfigurationStore.restore(EntityType type, String name)", "testcase": false, "constructor": false}, {"identifier": "cleanupUpdateInit", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void cleanupUpdateInit()", "full_signature": "public void cleanupUpdateInit()", "class_method_signature": "ConfigurationStore.cleanupUpdateInit()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "ConfigurationStore.getName()", "testcase": false, "constructor": false}, {"identifier": "destroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void destroy()", "full_signature": "@Override public void destroy()", "class_method_signature": "ConfigurationStore.destroy()", "testcase": false, "constructor": false}], "file": "common/src/main/java/org/apache/ivory/entity/store/ConfigurationStore.java"}, "focal_method": {"identifier": "remove", "parameters": "(EntityType type, String name)", "modifiers": "public", "return": "boolean", "body": "public boolean remove(EntityType type, String name) throws IvoryException {\n        Map<String, Entity> entityMap = dictionary.get(type);\n        if (entityMap.containsKey(name)) {\n            try {\n                archive(type, name);\n                onRemove(entityMap.remove(name));\n            } catch (IOException e) {\n                throw new StoreAccessException(e);\n            }\n            AUDIT.info(type + \" \" + name + \" is removed from config store\");\n            return true;\n        }\n        return false;\n    }", "signature": "boolean remove(EntityType type, String name)", "full_signature": "public boolean remove(EntityType type, String name)", "class_method_signature": "ConfigurationStore.remove(EntityType type, String name)", "testcase": false, "constructor": false, "invocations": ["get", "containsKey", "archive", "onRemove", "remove", "info"]}, "repository": {"repo_id": 2836228, "url": "https://github.com/sriksun/Ivory", "language": "Java", "is_fork": false, "fork_count": 12, "stargazer_count": 28, "size": 11708, "license": "licensed"}}