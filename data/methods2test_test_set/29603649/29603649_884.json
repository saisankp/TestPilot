{"test_class": {"identifier": "ExternalStubConfigUploadServletTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String FILE_NAME = \"resource file\";", "modifier": "private static final", "type": "String", "declarator": "FILE_NAME = \"resource file\"", "var_name": "FILE_NAME"}, {"original_string": "private static final String EXCEPTION_MESSAGE = \"Could not upload external stub configuration\";", "modifier": "private static final", "type": "String", "declarator": "EXCEPTION_MESSAGE = \"Could not upload external stub configuration\"", "var_name": "EXCEPTION_MESSAGE"}, {"original_string": "@Mock\n    private HttpServletRequest request;", "modifier": "@Mock\n    private", "type": "HttpServletRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock\n    private HttpServletResponse response;", "modifier": "@Mock\n    private", "type": "HttpServletResponse", "declarator": "response", "var_name": "response"}, {"original_string": "@Mock\n    private ServletInputStream inputStream;", "modifier": "@Mock\n    private", "type": "ServletInputStream", "declarator": "inputStream", "var_name": "inputStream"}, {"original_string": "@Mock\n    private PrintWriter writer;", "modifier": "@Mock\n    private", "type": "PrintWriter", "declarator": "writer", "var_name": "writer"}, {"original_string": "@Mock\n    private StubDescriptorJsonFactory stubDescriptorJsonFactory;", "modifier": "@Mock\n    private", "type": "StubDescriptorJsonFactory", "declarator": "stubDescriptorJsonFactory", "var_name": "stubDescriptorJsonFactory"}, {"original_string": "@Mock\n    private RoutingService routingService;", "modifier": "@Mock\n    private", "type": "RoutingService", "declarator": "routingService", "var_name": "routingService"}, {"original_string": "@Mock\n    private ServiceMap serviceMap;", "modifier": "@Mock\n    private", "type": "ServiceMap", "declarator": "serviceMap", "var_name": "serviceMap"}, {"original_string": "@Mock\n    private UrlAccessLogMessageAssembler urlAccessLogMessageAssembler;", "modifier": "@Mock\n    private", "type": "UrlAccessLogMessageAssembler", "declarator": "urlAccessLogMessageAssembler", "var_name": "urlAccessLogMessageAssembler"}, {"original_string": "@Mock\n    private SequenceDescriptorHolder sequenceDescriptorHolder;", "modifier": "@Mock\n    private", "type": "SequenceDescriptorHolder", "declarator": "sequenceDescriptorHolder", "var_name": "sequenceDescriptorHolder"}, {"original_string": "@InjectMocks\n    private ExternalStubConfigUploadServlet underTest;", "modifier": "@InjectMocks\n    private", "type": "ExternalStubConfigUploadServlet", "declarator": "underTest", "var_name": "underTest"}], "file": "wilma-application/modules/wilma-webapp/src/test/java/com/epam/wilma/webapp/config/servlet/stub/upload/ExternalStubConfigUploadServletTest.java"}, "test_case": {"identifier": "testDoPostShouldCallDoGet", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDoPostShouldCallDoGet() throws ServletException, IOException, ClassNotFoundException {\n        //GIVEN\n        given(request.getContentLength()).willReturn(1);\n        //WHEN\n        underTest.doPost(request, response);\n        //THEN\n        verify(routingService).performModification(Mockito.any(NewStubDescriptorCommand.class));\n    }", "signature": "void testDoPostShouldCallDoGet()", "full_signature": "@Test public void testDoPostShouldCallDoGet()", "class_method_signature": "ExternalStubConfigUploadServletTest.testDoPostShouldCallDoGet()", "testcase": true, "constructor": false, "invocations": ["willReturn", "given", "getContentLength", "doPost", "performModification", "verify", "any"]}, "focal_class": {"identifier": "ExternalStubConfigUploadServlet", "superclass": "extends HttpServlet", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ExternalStubConfigUploadServlet.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ExternalStubConfigUploadServlet.class)", "var_name": "LOGGER"}, {"original_string": "private final UrlAccessLogMessageAssembler urlAccessLogMessageAssembler;", "modifier": "private final", "type": "UrlAccessLogMessageAssembler", "declarator": "urlAccessLogMessageAssembler", "var_name": "urlAccessLogMessageAssembler"}, {"original_string": "private final StubDescriptorJsonFactory stubDescriptorJsonFactory;", "modifier": "private final", "type": "StubDescriptorJsonFactory", "declarator": "stubDescriptorJsonFactory", "var_name": "stubDescriptorJsonFactory"}, {"original_string": "private final RoutingService routingService;", "modifier": "private final", "type": "RoutingService", "declarator": "routingService", "var_name": "routingService"}, {"original_string": "private final SequenceDescriptorHolder sequenceDescriptorHolder;", "modifier": "private final", "type": "SequenceDescriptorHolder", "declarator": "sequenceDescriptorHolder", "var_name": "sequenceDescriptorHolder"}, {"original_string": "private final ServiceMap serviceMap;", "modifier": "private final", "type": "ServiceMap", "declarator": "serviceMap", "var_name": "serviceMap"}], "methods": [{"identifier": "ExternalStubConfigUploadServlet", "parameters": "(UrlAccessLogMessageAssembler urlAccessLogMessageAssembler, StubDescriptorJsonFactory stubDescriptorJsonFactory,\n                                           RoutingService routingService, SequenceDescriptorHolder sequenceDescriptorHolder, ServiceMap serviceMap)", "modifiers": "@Autowired public", "return": "", "signature": " ExternalStubConfigUploadServlet(UrlAccessLogMessageAssembler urlAccessLogMessageAssembler, StubDescriptorJsonFactory stubDescriptorJsonFactory,\n                                           RoutingService routingService, SequenceDescriptorHolder sequenceDescriptorHolder, ServiceMap serviceMap)", "full_signature": "@Autowired public  ExternalStubConfigUploadServlet(UrlAccessLogMessageAssembler urlAccessLogMessageAssembler, StubDescriptorJsonFactory stubDescriptorJsonFactory,\n                                           RoutingService routingService, SequenceDescriptorHolder sequenceDescriptorHolder, ServiceMap serviceMap)", "class_method_signature": "ExternalStubConfigUploadServlet.ExternalStubConfigUploadServlet(UrlAccessLogMessageAssembler urlAccessLogMessageAssembler, StubDescriptorJsonFactory stubDescriptorJsonFactory,\n                                           RoutingService routingService, SequenceDescriptorHolder sequenceDescriptorHolder, ServiceMap serviceMap)", "testcase": false, "constructor": true}, {"identifier": "doGet", "parameters": "(final HttpServletRequest request, final HttpServletResponse response)", "modifiers": "@Override protected", "return": "void", "signature": "void doGet(final HttpServletRequest request, final HttpServletResponse response)", "full_signature": "@Override protected void doGet(final HttpServletRequest request, final HttpServletResponse response)", "class_method_signature": "ExternalStubConfigUploadServlet.doGet(final HttpServletRequest request, final HttpServletResponse response)", "testcase": false, "constructor": false}, {"identifier": "doPost", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp)", "modifiers": "@Override protected", "return": "void", "signature": "void doPost(final HttpServletRequest req, final HttpServletResponse resp)", "full_signature": "@Override protected void doPost(final HttpServletRequest req, final HttpServletResponse resp)", "class_method_signature": "ExternalStubConfigUploadServlet.doPost(final HttpServletRequest req, final HttpServletResponse resp)", "testcase": false, "constructor": false}], "file": "wilma-application/modules/wilma-webapp/src/main/java/com/epam/wilma/webapp/config/servlet/stub/upload/ExternalStubConfigUploadServlet.java"}, "focal_method": {"identifier": "doPost", "parameters": "(final HttpServletRequest req, final HttpServletResponse resp)", "modifiers": "@Override protected", "return": "void", "body": "@Override\n    protected void doPost(final HttpServletRequest req, final HttpServletResponse resp) throws ServletException, IOException {\n        doGet(req, resp);\n    }", "signature": "void doPost(final HttpServletRequest req, final HttpServletResponse resp)", "full_signature": "@Override protected void doPost(final HttpServletRequest req, final HttpServletResponse resp)", "class_method_signature": "ExternalStubConfigUploadServlet.doPost(final HttpServletRequest req, final HttpServletResponse resp)", "testcase": false, "constructor": false, "invocations": ["doGet"]}, "repository": {"repo_id": 29603649, "url": "https://github.com/epam/Wilma", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 5732, "license": "licensed"}}