{"test_class": {"identifier": "ReflectionUtilsTest", "superclass": "extends HaloRobolectricTest", "interfaces": "", "fields": [], "file": "sdk/halo-framework/src/test/java/com/mobgen/halo/android/framework/common/utils/ReflectionUtilsTest.java"}, "test_case": {"identifier": "thatCanGetReflectionField", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void thatCanGetReflectionField(){\n        Field [] fields = ReflectionUtils.getFields(PrivateConstructorWithField.class,false);\n        assertThat(fields).isNotNull();\n    }", "signature": "void thatCanGetReflectionField()", "full_signature": "@Test public void thatCanGetReflectionField()", "class_method_signature": "ReflectionUtilsTest.thatCanGetReflectionField()", "testcase": true, "constructor": false, "invocations": ["getFields", "isNotNull", "assertThat"]}, "focal_class": {"identifier": "ReflectionUtils", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "ReflectionUtils", "parameters": "()", "modifiers": "private", "return": "", "signature": " ReflectionUtils()", "full_signature": "private  ReflectionUtils()", "class_method_signature": "ReflectionUtils.ReflectionUtils()", "testcase": false, "constructor": true}, {"identifier": "toClass", "parameters": "(@Nullable String name)", "modifiers": "@Api(2.0) @Nullable public static", "return": "Class<?>", "signature": "Class<?> toClass(@Nullable String name)", "full_signature": "@Api(2.0) @Nullable public static Class<?> toClass(@Nullable String name)", "class_method_signature": "ReflectionUtils.toClass(@Nullable String name)", "testcase": false, "constructor": false}, {"identifier": "newInstance", "parameters": "(@NonNull Class<T> clazz)", "modifiers": "@Api(2.0) @Nullable public static", "return": "T", "signature": "T newInstance(@NonNull Class<T> clazz)", "full_signature": "@Api(2.0) @Nullable public static T newInstance(@NonNull Class<T> clazz)", "class_method_signature": "ReflectionUtils.newInstance(@NonNull Class<T> clazz)", "testcase": false, "constructor": false}, {"identifier": "getConstructor", "parameters": "(@NonNull Class<T> constructedClass, @NonNull Class<D> innerConstructorClass)", "modifiers": "@Api(2.0) @NonNull public static", "return": "Constructor<T>", "signature": "Constructor<T> getConstructor(@NonNull Class<T> constructedClass, @NonNull Class<D> innerConstructorClass)", "full_signature": "@Api(2.0) @NonNull public static Constructor<T> getConstructor(@NonNull Class<T> constructedClass, @NonNull Class<D> innerConstructorClass)", "class_method_signature": "ReflectionUtils.getConstructor(@NonNull Class<T> constructedClass, @NonNull Class<D> innerConstructorClass)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(@NonNull Constructor<T> constructor, @Nullable Object... data)", "modifiers": "@Api(2.0) @NonNull public static", "return": "T", "signature": "T build(@NonNull Constructor<T> constructor, @Nullable Object... data)", "full_signature": "@Api(2.0) @NonNull public static T build(@NonNull Constructor<T> constructor, @Nullable Object... data)", "class_method_signature": "ReflectionUtils.build(@NonNull Constructor<T> constructor, @Nullable Object... data)", "testcase": false, "constructor": false}, {"identifier": "classNameToInnerFilter", "parameters": "(@NonNull String className)", "modifiers": "@Api(2.0) @NonNull public static", "return": "String", "signature": "String classNameToInnerFilter(@NonNull String className)", "full_signature": "@Api(2.0) @NonNull public static String classNameToInnerFilter(@NonNull String className)", "class_method_signature": "ReflectionUtils.classNameToInnerFilter(@NonNull String className)", "testcase": false, "constructor": false}, {"identifier": "getFields", "parameters": "(@NonNull Class clazz, boolean bringParents)", "modifiers": "@Api(2.0) @NonNull public static", "return": "Field[]", "signature": "Field[] getFields(@NonNull Class clazz, boolean bringParents)", "full_signature": "@Api(2.0) @NonNull public static Field[] getFields(@NonNull Class clazz, boolean bringParents)", "class_method_signature": "ReflectionUtils.getFields(@NonNull Class clazz, boolean bringParents)", "testcase": false, "constructor": false}, {"identifier": "valueOf", "parameters": "(Field field, Object reference, Class<T> clazz)", "modifiers": "@Api(2.0) @NonNull public static", "return": "T", "signature": "T valueOf(Field field, Object reference, Class<T> clazz)", "full_signature": "@Api(2.0) @NonNull public static T valueOf(Field field, Object reference, Class<T> clazz)", "class_method_signature": "ReflectionUtils.valueOf(Field field, Object reference, Class<T> clazz)", "testcase": false, "constructor": false}], "file": "sdk/halo-framework/src/main/java/com/mobgen/halo/android/framework/common/utils/ReflectionUtils.java"}, "focal_method": {"identifier": "getFields", "parameters": "(@NonNull Class clazz, boolean bringParents)", "modifiers": "@Api(2.0) @NonNull public static", "return": "Field[]", "body": "@Api(2.0)\n    @NonNull\n    public static Field[] getFields(@NonNull Class clazz, boolean bringParents) {\n        return bringParents ? clazz.getFields() : clazz.getDeclaredFields();\n    }", "signature": "Field[] getFields(@NonNull Class clazz, boolean bringParents)", "full_signature": "@Api(2.0) @NonNull public static Field[] getFields(@NonNull Class clazz, boolean bringParents)", "class_method_signature": "ReflectionUtils.getFields(@NonNull Class clazz, boolean bringParents)", "testcase": false, "constructor": false, "invocations": ["getFields", "getDeclaredFields"]}, "repository": {"repo_id": 72189814, "url": "https://github.com/mobgen/halo-android", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 3343, "license": "licensed"}}