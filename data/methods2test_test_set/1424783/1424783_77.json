{"test_class": {"identifier": "SampledXYSeriesTest", "superclass": "extends AndroidplotTest", "interfaces": "", "fields": [], "file": "androidplot-core/src/test/java/com/androidplot/xy/SampledXYSeriesTest.java"}, "test_case": {"identifier": "testGetZoomIndex", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetZoomIndex() throws Exception {\n        assertEquals(0, SampledXYSeries.getZoomIndex(2, 2));\n        assertEquals(1, SampledXYSeries.getZoomIndex(3, 2));\n        assertEquals(1, SampledXYSeries.getZoomIndex(4, 2));\n        assertEquals(2, SampledXYSeries.getZoomIndex(8, 2));\n        assertEquals(2, SampledXYSeries.getZoomIndex(9, 2));\n        assertEquals(2, SampledXYSeries.getZoomIndex(10, 2));\n        assertEquals(3, SampledXYSeries.getZoomIndex(15, 2));\n        assertEquals(3, SampledXYSeries.getZoomIndex(16, 2));\n        assertEquals(3, SampledXYSeries.getZoomIndex(17, 2));\n        assertEquals(4, SampledXYSeries.getZoomIndex(31, 2));\n        assertEquals(4, SampledXYSeries.getZoomIndex(32, 2));\n\n        assertEquals(0, SampledXYSeries.getZoomIndex(1, 4));\n        assertEquals(0, SampledXYSeries.getZoomIndex(4, 4));\n        assertEquals(1, SampledXYSeries.getZoomIndex(15, 4));\n        assertEquals(1, SampledXYSeries.getZoomIndex(16, 4));\n        assertEquals(1, SampledXYSeries.getZoomIndex(17, 4));\n        assertEquals(2, SampledXYSeries.getZoomIndex(63, 4));\n        assertEquals(2, SampledXYSeries.getZoomIndex(64, 4));\n        assertEquals(2, SampledXYSeries.getZoomIndex(65, 4));\n    }", "signature": "void testGetZoomIndex()", "full_signature": "@Test public void testGetZoomIndex()", "class_method_signature": "SampledXYSeriesTest.testGetZoomIndex()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex", "assertEquals", "getZoomIndex"]}, "focal_class": {"identifier": "SampledXYSeries", "superclass": "", "interfaces": "implements FastXYSeries, OrderedXYSeries", "fields": [{"original_string": "private int threshold;", "modifier": "private", "type": "int", "declarator": "threshold", "var_name": "threshold"}, {"original_string": "private Sampler algorithm = new LTTBSampler();", "modifier": "private", "type": "Sampler", "declarator": "algorithm = new LTTBSampler()", "var_name": "algorithm"}, {"original_string": "private XYSeries rawData;", "modifier": "private", "type": "XYSeries", "declarator": "rawData", "var_name": "rawData"}, {"original_string": "private List<EditableXYSeries> zoomLevels;", "modifier": "private", "type": "List<EditableXYSeries>", "declarator": "zoomLevels", "var_name": "zoomLevels"}, {"original_string": "private XYSeries activeSeries;", "modifier": "private", "type": "XYSeries", "declarator": "activeSeries", "var_name": "activeSeries"}, {"original_string": "private RectRegion bounds;", "modifier": "private", "type": "RectRegion", "declarator": "bounds", "var_name": "bounds"}, {"original_string": "private Exception lastResamplingException;", "modifier": "private", "type": "Exception", "declarator": "lastResamplingException", "var_name": "lastResamplingException"}, {"original_string": "private final XOrder xOrder;", "modifier": "private final", "type": "XOrder", "declarator": "xOrder", "var_name": "xOrder"}, {"original_string": "private float ratio;", "modifier": "private", "type": "float", "declarator": "ratio", "var_name": "ratio"}], "methods": [{"identifier": "SampledXYSeries", "parameters": "(XYSeries rawData, XOrder xOrder, float ratio, int threshold)", "modifiers": "public", "return": "", "signature": " SampledXYSeries(XYSeries rawData, XOrder xOrder, float ratio, int threshold)", "full_signature": "public  SampledXYSeries(XYSeries rawData, XOrder xOrder, float ratio, int threshold)", "class_method_signature": "SampledXYSeries.SampledXYSeries(XYSeries rawData, XOrder xOrder, float ratio, int threshold)", "testcase": false, "constructor": true}, {"identifier": "SampledXYSeries", "parameters": "(XYSeries rawData, float ratio, int threshold)", "modifiers": "public", "return": "", "signature": " SampledXYSeries(XYSeries rawData, float ratio, int threshold)", "full_signature": "public  SampledXYSeries(XYSeries rawData, float ratio, int threshold)", "class_method_signature": "SampledXYSeries.SampledXYSeries(XYSeries rawData, float ratio, int threshold)", "testcase": false, "constructor": true}, {"identifier": "resample", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void resample()", "full_signature": "public void resample()", "class_method_signature": "SampledXYSeries.resample()", "testcase": false, "constructor": false}, {"identifier": "getZoomLevels", "parameters": "()", "modifiers": "protected", "return": "List<EditableXYSeries>", "signature": "List<EditableXYSeries> getZoomLevels()", "full_signature": "protected List<EditableXYSeries> getZoomLevels()", "class_method_signature": "SampledXYSeries.getZoomLevels()", "testcase": false, "constructor": false}, {"identifier": "setZoomFactor", "parameters": "(double factor)", "modifiers": "public", "return": "void", "signature": "void setZoomFactor(double factor)", "full_signature": "public void setZoomFactor(double factor)", "class_method_signature": "SampledXYSeries.setZoomFactor(double factor)", "testcase": false, "constructor": false}, {"identifier": "getZoomIndex", "parameters": "(double zoomFactor, double ratio)", "modifiers": "protected static", "return": "int", "signature": "int getZoomIndex(double zoomFactor, double ratio)", "full_signature": "protected static int getZoomIndex(double zoomFactor, double ratio)", "class_method_signature": "SampledXYSeries.getZoomIndex(double zoomFactor, double ratio)", "testcase": false, "constructor": false}, {"identifier": "getMaxZoomFactor", "parameters": "()", "modifiers": "public", "return": "double", "signature": "double getMaxZoomFactor()", "full_signature": "public double getMaxZoomFactor()", "class_method_signature": "SampledXYSeries.getMaxZoomFactor()", "testcase": false, "constructor": false}, {"identifier": "getAlgorithm", "parameters": "()", "modifiers": "public", "return": "Sampler", "signature": "Sampler getAlgorithm()", "full_signature": "public Sampler getAlgorithm()", "class_method_signature": "SampledXYSeries.getAlgorithm()", "testcase": false, "constructor": false}, {"identifier": "setAlgorithm", "parameters": "(Sampler algorithm)", "modifiers": "public", "return": "void", "signature": "void setAlgorithm(Sampler algorithm)", "full_signature": "public void setAlgorithm(Sampler algorithm)", "class_method_signature": "SampledXYSeries.setAlgorithm(Sampler algorithm)", "testcase": false, "constructor": false}, {"identifier": "getTitle", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getTitle()", "full_signature": "@Override public String getTitle()", "class_method_signature": "SampledXYSeries.getTitle()", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int size()", "full_signature": "@Override public int size()", "class_method_signature": "SampledXYSeries.size()", "testcase": false, "constructor": false}, {"identifier": "getX", "parameters": "(int index)", "modifiers": "@Override public", "return": "Number", "signature": "Number getX(int index)", "full_signature": "@Override public Number getX(int index)", "class_method_signature": "SampledXYSeries.getX(int index)", "testcase": false, "constructor": false}, {"identifier": "getY", "parameters": "(int index)", "modifiers": "@Override public", "return": "Number", "signature": "Number getY(int index)", "full_signature": "@Override public Number getY(int index)", "class_method_signature": "SampledXYSeries.getY(int index)", "testcase": false, "constructor": false}, {"identifier": "getThreshold", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getThreshold()", "full_signature": "public int getThreshold()", "class_method_signature": "SampledXYSeries.getThreshold()", "testcase": false, "constructor": false}, {"identifier": "setThreshold", "parameters": "(int threshold)", "modifiers": "public", "return": "void", "signature": "void setThreshold(int threshold)", "full_signature": "public void setThreshold(int threshold)", "class_method_signature": "SampledXYSeries.setThreshold(int threshold)", "testcase": false, "constructor": false}, {"identifier": "getBounds", "parameters": "()", "modifiers": "public", "return": "RectRegion", "signature": "RectRegion getBounds()", "full_signature": "public RectRegion getBounds()", "class_method_signature": "SampledXYSeries.getBounds()", "testcase": false, "constructor": false}, {"identifier": "setBounds", "parameters": "(RectRegion bounds)", "modifiers": "public", "return": "void", "signature": "void setBounds(RectRegion bounds)", "full_signature": "public void setBounds(RectRegion bounds)", "class_method_signature": "SampledXYSeries.setBounds(RectRegion bounds)", "testcase": false, "constructor": false}, {"identifier": "minMax", "parameters": "()", "modifiers": "@Override public", "return": "RectRegion", "signature": "RectRegion minMax()", "full_signature": "@Override public RectRegion minMax()", "class_method_signature": "SampledXYSeries.minMax()", "testcase": false, "constructor": false}, {"identifier": "getXOrder", "parameters": "()", "modifiers": "@Override public", "return": "XOrder", "signature": "XOrder getXOrder()", "full_signature": "@Override public XOrder getXOrder()", "class_method_signature": "SampledXYSeries.getXOrder()", "testcase": false, "constructor": false}, {"identifier": "getRatio", "parameters": "()", "modifiers": "public", "return": "float", "signature": "float getRatio()", "full_signature": "public float getRatio()", "class_method_signature": "SampledXYSeries.getRatio()", "testcase": false, "constructor": false}, {"identifier": "setRatio", "parameters": "(float ratio)", "modifiers": "public", "return": "void", "signature": "void setRatio(float ratio)", "full_signature": "public void setRatio(float ratio)", "class_method_signature": "SampledXYSeries.setRatio(float ratio)", "testcase": false, "constructor": false}], "file": "androidplot-core/src/main/java/com/androidplot/xy/SampledXYSeries.java"}, "focal_method": {"identifier": "getZoomIndex", "parameters": "(double zoomFactor, double ratio)", "modifiers": "protected static", "return": "int", "body": "protected static int getZoomIndex(double zoomFactor, double ratio) {\n        final double lhs = Math.log(zoomFactor);\n        final double rhs = Math.log(ratio);\n        final double log = lhs / rhs;\n        final int index = (int) Math.round(log);\n        return index > 0 ? index - 1 : 0;\n    }", "signature": "int getZoomIndex(double zoomFactor, double ratio)", "full_signature": "protected static int getZoomIndex(double zoomFactor, double ratio)", "class_method_signature": "SampledXYSeries.getZoomIndex(double zoomFactor, double ratio)", "testcase": false, "constructor": false, "invocations": ["log", "log", "round"]}, "repository": {"repo_id": 1424783, "url": "https://github.com/halfhp/androidplot", "language": "Java", "is_fork": false, "fork_count": 129, "stargazer_count": 369, "size": 7178, "license": "licensed"}}