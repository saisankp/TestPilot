{"test_class": {"identifier": "HashCodeTest", "superclass": "", "interfaces": "", "fields": [], "file": "debezium-core/src/test/java/io/debezium/util/HashCodeTest.java"}, "test_case": {"identifier": "shouldComputeHashCodeForOnePrimitive", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void shouldComputeHashCodeForOnePrimitive() {\n        assertThat(HashCode.compute(1), is(not(0)));\n        assertThat(HashCode.compute((long) 8), is(not(0)));\n        assertThat(HashCode.compute((short) 3), is(not(0)));\n        assertThat(HashCode.compute(1.0f), is(not(0)));\n        assertThat(HashCode.compute(1.0d), is(not(0)));\n        assertThat(HashCode.compute(true), is(not(0)));\n    }", "signature": "void shouldComputeHashCodeForOnePrimitive()", "full_signature": "@Test public void shouldComputeHashCodeForOnePrimitive()", "class_method_signature": "HashCodeTest.shouldComputeHashCodeForOnePrimitive()", "testcase": true, "constructor": false, "invocations": ["assertThat", "compute", "is", "not", "assertThat", "compute", "is", "not", "assertThat", "compute", "is", "not", "assertThat", "compute", "is", "not", "assertThat", "compute", "is", "not", "assertThat", "compute", "is", "not"]}, "focal_class": {"identifier": "HashCode", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final int PRIME = 103;", "modifier": "private static final", "type": "int", "declarator": "PRIME = 103", "var_name": "PRIME"}], "methods": [{"identifier": "compute", "parameters": "(Object... objects)", "modifiers": "public static", "return": "int", "signature": "int compute(Object... objects)", "full_signature": "public static int compute(Object... objects)", "class_method_signature": "HashCode.compute(Object... objects)", "testcase": false, "constructor": false}, {"identifier": "computeHashCode", "parameters": "(int seed,\n                                       Object... objects)", "modifiers": "private static", "return": "int", "signature": "int computeHashCode(int seed,\n                                       Object... objects)", "full_signature": "private static int computeHashCode(int seed,\n                                       Object... objects)", "class_method_signature": "HashCode.computeHashCode(int seed,\n                                       Object... objects)", "testcase": false, "constructor": false}, {"identifier": "HashCode", "parameters": "()", "modifiers": "private", "return": "", "signature": " HashCode()", "full_signature": "private  HashCode()", "class_method_signature": "HashCode.HashCode()", "testcase": false, "constructor": true}], "file": "debezium-core/src/main/java/io/debezium/util/HashCode.java"}, "focal_method": {"identifier": "compute", "parameters": "(Object... objects)", "modifiers": "public static", "return": "int", "body": "public static int compute(Object... objects) {\n        return computeHashCode(0, objects);\n    }", "signature": "int compute(Object... objects)", "full_signature": "public static int compute(Object... objects)", "class_method_signature": "HashCode.compute(Object... objects)", "testcase": false, "constructor": false, "invocations": ["computeHashCode"]}, "repository": {"repo_id": 50205233, "url": "https://github.com/debezium/debezium", "stars": 2686, "created": "1/22/2016 8:17:05 PM +00:00", "updates": "2020-01-27T20:48:54+00:00", "fork": "False", "license": "licensed"}}