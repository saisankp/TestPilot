{"test_class": {"identifier": "ArtistsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final Artists optionalExamples = new Artists(SampleData.getThreeArtists());", "modifier": "private final", "type": "Artists", "declarator": "optionalExamples = new Artists(SampleData.getThreeArtists())", "var_name": "optionalExamples"}], "file": "concurrency/src/test/java/com/insightfullogic/java8/exercises/chapter4/ArtistsTest.java"}, "test_case": {"identifier": "indexOutsideRange", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void indexOutsideRange() {\n        optionalExamples.getArtist(4);\n    }", "signature": "void indexOutsideRange()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void indexOutsideRange()", "class_method_signature": "ArtistsTest.indexOutsideRange()", "testcase": true, "constructor": false, "invocations": ["getArtist"]}, "focal_class": {"identifier": "Artists", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<Artist> artists;", "modifier": "private", "type": "List<Artist>", "declarator": "artists", "var_name": "artists"}], "methods": [{"identifier": "Artists", "parameters": "(List<Artist> artists)", "modifiers": "public", "return": "", "signature": " Artists(List<Artist> artists)", "full_signature": "public  Artists(List<Artist> artists)", "class_method_signature": "Artists.Artists(List<Artist> artists)", "testcase": false, "constructor": true}, {"identifier": "getArtist", "parameters": "(int index)", "modifiers": "public", "return": "Artist", "signature": "Artist getArtist(int index)", "full_signature": "public Artist getArtist(int index)", "class_method_signature": "Artists.getArtist(int index)", "testcase": false, "constructor": false}, {"identifier": "indexException", "parameters": "(int index)", "modifiers": "private", "return": "void", "signature": "void indexException(int index)", "full_signature": "private void indexException(int index)", "class_method_signature": "Artists.indexException(int index)", "testcase": false, "constructor": false}, {"identifier": "getArtistName", "parameters": "(int index)", "modifiers": "public", "return": "String", "signature": "String getArtistName(int index)", "full_signature": "public String getArtistName(int index)", "class_method_signature": "Artists.getArtistName(int index)", "testcase": false, "constructor": false}], "file": "concurrency/src/main/java/com/insightfullogic/java8/exercises/chapter4/Artists.java"}, "focal_method": {"identifier": "getArtist", "parameters": "(int index)", "modifiers": "public", "return": "Artist", "body": "public Artist getArtist(int index) {\n        if (index < 0 || index >= artists.size()) {\n            indexException(index);\n        }\n        return artists.get(index);\n    }", "signature": "Artist getArtist(int index)", "full_signature": "public Artist getArtist(int index)", "class_method_signature": "Artists.getArtist(int index)", "testcase": false, "constructor": false, "invocations": ["size", "indexException", "get"]}, "repository": {"repo_id": 33645537, "url": "https://github.com/zqhxuyuan/tutorials", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 5, "size": 35273, "license": "licensed"}}