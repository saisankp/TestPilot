{"test_class": {"identifier": "SqlDatabaseSupplierTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String DATABASE_NAME = \"database\";", "modifier": "private static final", "type": "String", "declarator": "DATABASE_NAME = \"database\"", "var_name": "DATABASE_NAME"}], "file": "extensions/database/src/test/java/com/google/android/agera/database/SqlDatabaseSupplierTest.java"}, "test_case": {"identifier": "shouldSupplyDatabase", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldSupplyDatabase() throws Throwable {\n    final SqlDatabaseSupplier sqlDatabaseSupplier = new SqlDatabaseSupplier(\n        application.getApplicationContext(), DATABASE_NAME, null, 1) {\n      @Override\n      public void onCreate(final SQLiteDatabase sqLiteDatabase) {}\n\n      @Override\n      public void onUpgrade(final SQLiteDatabase sqLiteDatabase, final int i, final int i1) {}\n    };\n\n    assertThat(sqlDatabaseSupplier.get().get(), instanceOf(SQLiteDatabase.class));\n  }", "signature": "void shouldSupplyDatabase()", "full_signature": "@Test public void shouldSupplyDatabase()", "class_method_signature": "SqlDatabaseSupplierTest.shouldSupplyDatabase()", "testcase": true, "constructor": false, "invocations": ["getApplicationContext", "assertThat", "get", "get", "instanceOf"]}, "focal_class": {"identifier": "SqlDatabaseSupplier", "superclass": "extends SQLiteOpenHelper", "interfaces": "implements Supplier<Result<SQLiteDatabase>>", "fields": [], "methods": [{"identifier": "SqlDatabaseSupplier", "parameters": "(@NonNull final Context context, @NonNull final String path,\n      @Nullable final CursorFactory factory, final int version)", "modifiers": "public", "return": "", "signature": " SqlDatabaseSupplier(@NonNull final Context context, @NonNull final String path,\n      @Nullable final CursorFactory factory, final int version)", "full_signature": "public  SqlDatabaseSupplier(@NonNull final Context context, @NonNull final String path,\n      @Nullable final CursorFactory factory, final int version)", "class_method_signature": "SqlDatabaseSupplier.SqlDatabaseSupplier(@NonNull final Context context, @NonNull final String path,\n      @Nullable final CursorFactory factory, final int version)", "testcase": false, "constructor": true}, {"identifier": "get", "parameters": "()", "modifiers": "@NonNull @Override public final synchronized", "return": "Result<SQLiteDatabase>", "signature": "Result<SQLiteDatabase> get()", "full_signature": "@NonNull @Override public final synchronized Result<SQLiteDatabase> get()", "class_method_signature": "SqlDatabaseSupplier.get()", "testcase": false, "constructor": false}], "file": "extensions/database/src/main/java/com/google/android/agera/database/SqlDatabaseSupplier.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "@NonNull @Override public final synchronized", "return": "Result<SQLiteDatabase>", "body": "@NonNull\n  @Override\n  public final synchronized Result<SQLiteDatabase> get() {\n    try {\n      return absentIfNull(getWritableDatabase());\n    } catch (final SQLException e) {\n      return failure(e);\n    }\n  }", "signature": "Result<SQLiteDatabase> get()", "full_signature": "@NonNull @Override public final synchronized Result<SQLiteDatabase> get()", "class_method_signature": "SqlDatabaseSupplier.get()", "testcase": false, "constructor": false, "invocations": ["absentIfNull", "getWritableDatabase", "failure"]}, "repository": {"repo_id": 48175620, "url": "https://github.com/google/agera", "language": "Java", "is_fork": false, "fork_count": 669, "stargazer_count": 7333, "size": 968, "license": "licensed"}}