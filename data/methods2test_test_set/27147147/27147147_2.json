{"test_class": {"identifier": "PersistentObjectCacheWithMRUSortTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private Bootstrap bootstrap;", "modifier": "private", "type": "Bootstrap", "declarator": "bootstrap", "var_name": "bootstrap"}, {"original_string": "@Inject\n    private PersistentObjectCacheBuilder builder;", "modifier": "@Inject\n    private", "type": "PersistentObjectCacheBuilder", "declarator": "builder", "var_name": "builder"}], "file": "refresher/src/test/java/com/chillenious/common/db/sync/PersistentObjectCacheWithMRUSortTest.java"}, "test_case": {"identifier": "testPromoteOnlyNew", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPromoteOnlyNew() {\n        // test that only new objects that are put in the cache are promoted\n        PersistentObjectCacheWithMRUSort<Bam> cache =\n                builder.withRefresher(new NoopRefresher<Bam>())\n                        .withMruSort().promoteWhenNewOnly().build();\n\n        Bam first = new Bam(1, \"first\");\n        Bam second = new Bam(2, \"second\");\n\n        CurrentTime.freezeAt(1000);\n        cache.put(first);\n        CurrentTime.freezeAt(2000);\n        cache.put(second);\n        CurrentTime.freezeAt(3000);\n        cache.put(first); // this is an update, so second should still be in front\n\n        Assert.assertEquals(second, cache.valuesByMostRecentlyUsed().iterator().next());\n    }", "signature": "void testPromoteOnlyNew()", "full_signature": "@Test public void testPromoteOnlyNew()", "class_method_signature": "PersistentObjectCacheWithMRUSortTest.testPromoteOnlyNew()", "testcase": true, "constructor": false, "invocations": ["build", "promoteWhenNewOnly", "withMruSort", "withRefresher", "freezeAt", "put", "freezeAt", "put", "freezeAt", "put", "assertEquals", "next", "iterator", "valuesByMostRecentlyUsed"]}, "focal_class": {"identifier": "PersistentObjectCacheWithMRUSort", "superclass": "extends PersistentObjectCache<O>", "interfaces": "", "fields": [{"original_string": "public static final String MRU_SORT_ID = \"mru\";", "modifier": "public static final", "type": "String", "declarator": "MRU_SORT_ID = \"mru\"", "var_name": "MRU_SORT_ID"}, {"original_string": "private final Sorter<O> mruSorter;", "modifier": "private final", "type": "Sorter<O>", "declarator": "mruSorter", "var_name": "mruSorter"}], "methods": [{"identifier": "PersistentObjectCacheWithMRUSort", "parameters": "(\n            String name,\n            ShutdownHooks shutdownHooks,\n            boolean recordStats,\n            boolean startWithRefresh,\n            final MruPromotionStrategy<O> mruPromotionStrategy)", "modifiers": "public", "return": "", "signature": " PersistentObjectCacheWithMRUSort(\n            String name,\n            ShutdownHooks shutdownHooks,\n            boolean recordStats,\n            boolean startWithRefresh,\n            final MruPromotionStrategy<O> mruPromotionStrategy)", "full_signature": "public  PersistentObjectCacheWithMRUSort(\n            String name,\n            ShutdownHooks shutdownHooks,\n            boolean recordStats,\n            boolean startWithRefresh,\n            final MruPromotionStrategy<O> mruPromotionStrategy)", "class_method_signature": "PersistentObjectCacheWithMRUSort.PersistentObjectCacheWithMRUSort(\n            String name,\n            ShutdownHooks shutdownHooks,\n            boolean recordStats,\n            boolean startWithRefresh,\n            final MruPromotionStrategy<O> mruPromotionStrategy)", "testcase": false, "constructor": true}, {"identifier": "PersistentObjectCacheWithMRUSort", "parameters": "(\n            String name,\n            ShutdownHooks shutdownHooks,\n            DataRefresher<O> refresher,\n            Duration refreshInterval,\n            boolean recordStats,\n            boolean startWithRefresh,\n            final MruPromotionStrategy<O> mruPromotionStrategy)", "modifiers": "public", "return": "", "signature": " PersistentObjectCacheWithMRUSort(\n            String name,\n            ShutdownHooks shutdownHooks,\n            DataRefresher<O> refresher,\n            Duration refreshInterval,\n            boolean recordStats,\n            boolean startWithRefresh,\n            final MruPromotionStrategy<O> mruPromotionStrategy)", "full_signature": "public  PersistentObjectCacheWithMRUSort(\n            String name,\n            ShutdownHooks shutdownHooks,\n            DataRefresher<O> refresher,\n            Duration refreshInterval,\n            boolean recordStats,\n            boolean startWithRefresh,\n            final MruPromotionStrategy<O> mruPromotionStrategy)", "class_method_signature": "PersistentObjectCacheWithMRUSort.PersistentObjectCacheWithMRUSort(\n            String name,\n            ShutdownHooks shutdownHooks,\n            DataRefresher<O> refresher,\n            Duration refreshInterval,\n            boolean recordStats,\n            boolean startWithRefresh,\n            final MruPromotionStrategy<O> mruPromotionStrategy)", "testcase": false, "constructor": true}, {"identifier": "addSort", "parameters": "(\n            String id, SortKeyFactory<O, T> factory)", "modifiers": "@Override public", "return": "Future<Integer>", "signature": "Future<Integer> addSort(\n            String id, SortKeyFactory<O, T> factory)", "full_signature": "@Override public Future<Integer> addSort(\n            String id, SortKeyFactory<O, T> factory)", "class_method_signature": "PersistentObjectCacheWithMRUSort.addSort(\n            String id, SortKeyFactory<O, T> factory)", "testcase": false, "constructor": false}, {"identifier": "touch", "parameters": "(O object)", "modifiers": "public", "return": "void", "signature": "void touch(O object)", "full_signature": "public void touch(O object)", "class_method_signature": "PersistentObjectCacheWithMRUSort.touch(O object)", "testcase": false, "constructor": false}, {"identifier": "valuesByMostRecentlyUsed", "parameters": "()", "modifiers": "public", "return": "Collection<O>", "signature": "Collection<O> valuesByMostRecentlyUsed()", "full_signature": "public Collection<O> valuesByMostRecentlyUsed()", "class_method_signature": "PersistentObjectCacheWithMRUSort.valuesByMostRecentlyUsed()", "testcase": false, "constructor": false}, {"identifier": "getMruSorter", "parameters": "()", "modifiers": "public", "return": "Sorter<O>", "signature": "Sorter<O> getMruSorter()", "full_signature": "public Sorter<O> getMruSorter()", "class_method_signature": "PersistentObjectCacheWithMRUSort.getMruSorter()", "testcase": false, "constructor": false}], "file": "refresher/src/main/java/com/chillenious/common/db/sync/PersistentObjectCacheWithMRUSort.java"}, "focal_method": {"identifier": "valuesByMostRecentlyUsed", "parameters": "()", "modifiers": "public", "return": "Collection<O>", "body": "public Collection<O> valuesByMostRecentlyUsed() {\n        return mruSorter.values();\n    }", "signature": "Collection<O> valuesByMostRecentlyUsed()", "full_signature": "public Collection<O> valuesByMostRecentlyUsed()", "class_method_signature": "PersistentObjectCacheWithMRUSort.valuesByMostRecentlyUsed()", "testcase": false, "constructor": false, "invocations": ["values"]}, "repository": {"repo_id": 27147147, "url": "https://github.com/chillenious/commons", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 11, "size": 248, "license": "licensed"}}