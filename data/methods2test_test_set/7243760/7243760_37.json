{"test_class": {"identifier": "TestUniBook", "superclass": "", "interfaces": "", "fields": [], "file": "base/src/test/java/com/barchart/feed/base/provider/TestUniBook.java"}, "test_case": {"identifier": "testNullEntryAddDelete", "parameters": "()", "modifiers": "@Test() public", "return": "void", "body": "@Test()\n\tpublic void testNullEntryAddDelete() {\n\t\tfinal SizeValue size = newSize(10);\n\t\tfinal PriceValue priceStep = newPrice(25, -2);\n\t\tfinal UniBook book = new UniBook(Instrument.NULL, \n\t\t\t\tBook.Type.COMBINED, size, priceStep);\n\t\tUniBookResult result;\n\t\tresult = book.make(null);\n\t\tassertEquals(result, ERROR);\n\t\tresult = book.make(null);\n\t\tassertEquals(result, ERROR);\n\t}", "signature": "void testNullEntryAddDelete()", "full_signature": "@Test() public void testNullEntryAddDelete()", "class_method_signature": "TestUniBook.testNullEntryAddDelete()", "testcase": true, "constructor": false, "invocations": ["newSize", "newPrice", "make", "assertEquals", "make", "assertEquals"]}, "focal_class": {"identifier": "UniBook", "superclass": "extends ValueFreezer<V>", "interfaces": "", "fields": [{"original_string": "@SuppressWarnings(\"unused\")\n\tprivate static Logger log = LoggerFactory.getLogger(UniBook.class);", "modifier": "@SuppressWarnings(\"unused\")\n\tprivate static", "type": "Logger", "declarator": "log = LoggerFactory.getLogger(UniBook.class)", "var_name": "log"}, {"original_string": "protected final byte size;", "modifier": "protected final", "type": "byte", "declarator": "size", "var_name": "size"}, {"original_string": "protected final PriceValue step;", "modifier": "protected final", "type": "PriceValue", "declarator": "step", "var_name": "step"}, {"original_string": "protected final UniBookRing bids;", "modifier": "protected final", "type": "UniBookRing", "declarator": "bids", "var_name": "bids"}, {"original_string": "protected final UniBookRing asks;", "modifier": "protected final", "type": "UniBookRing", "declarator": "asks", "var_name": "asks"}, {"original_string": "protected final Instrument instrument;", "modifier": "protected final", "type": "Instrument", "declarator": "instrument", "var_name": "instrument"}, {"original_string": "private byte lastClue;", "modifier": "private", "type": "byte", "declarator": "lastClue", "var_name": "lastClue"}, {"original_string": "private byte lastSide = Book.Side.NULL.ord;", "modifier": "private", "type": "byte", "declarator": "lastSide = Book.Side.NULL.ord", "var_name": "lastSide"}], "methods": [{"identifier": "UniBook", "parameters": "(final Instrument instrument, final Book.Type type, \n\t\t\tfinal SizeValue size, final PriceValue step)", "modifiers": "public", "return": "", "signature": " UniBook(final Instrument instrument, final Book.Type type, \n\t\t\tfinal SizeValue size, final PriceValue step)", "full_signature": "public  UniBook(final Instrument instrument, final Book.Type type, \n\t\t\tfinal SizeValue size, final PriceValue step)", "class_method_signature": "UniBook.UniBook(final Instrument instrument, final Book.Type type, \n\t\t\tfinal SizeValue size, final PriceValue step)", "testcase": false, "constructor": true}, {"identifier": "clear", "parameters": "()", "modifiers": "public final", "return": "void", "signature": "void clear()", "full_signature": "public final void clear()", "class_method_signature": "UniBook.clear()", "testcase": false, "constructor": false}, {"identifier": "ringFor", "parameters": "(final Book.Side side)", "modifiers": "private final", "return": "UniBookRing", "signature": "UniBookRing ringFor(final Book.Side side)", "full_signature": "private final UniBookRing ringFor(final Book.Side side)", "class_method_signature": "UniBook.ringFor(final Book.Side side)", "testcase": false, "constructor": false}, {"identifier": "isTopPlace", "parameters": "(final MarketDoBookEntry entry)", "modifiers": "private final", "return": "boolean", "signature": "boolean isTopPlace(final MarketDoBookEntry entry)", "full_signature": "private final boolean isTopPlace(final MarketDoBookEntry entry)", "class_method_signature": "UniBook.isTopPlace(final MarketDoBookEntry entry)", "testcase": false, "constructor": false}, {"identifier": "isValidEntryEnums", "parameters": "(final MarketDoBookEntry entry)", "modifiers": "private final", "return": "boolean", "signature": "boolean isValidEntryEnums(final MarketDoBookEntry entry)", "full_signature": "private final boolean isValidEntryEnums(final MarketDoBookEntry entry)", "class_method_signature": "UniBook.isValidEntryEnums(final MarketDoBookEntry entry)", "testcase": false, "constructor": false}, {"identifier": "isValidPlace", "parameters": "(final MarketDoBookEntry entry)", "modifiers": "private final", "return": "boolean", "signature": "boolean isValidPlace(final MarketDoBookEntry entry)", "full_signature": "private final boolean isValidPlace(final MarketDoBookEntry entry)", "class_method_signature": "UniBook.isValidPlace(final MarketDoBookEntry entry)", "testcase": false, "constructor": false}, {"identifier": "isValidPrice", "parameters": "(final MarketDoBookEntry entry)", "modifiers": "private final", "return": "boolean", "signature": "boolean isValidPrice(final MarketDoBookEntry entry)", "full_signature": "private final boolean isValidPrice(final MarketDoBookEntry entry)", "class_method_signature": "UniBook.isValidPrice(final MarketDoBookEntry entry)", "testcase": false, "constructor": false}, {"identifier": "isValidSize", "parameters": "(final MarketDoBookEntry entry)", "modifiers": "private final", "return": "boolean", "signature": "boolean isValidSize(final MarketDoBookEntry entry)", "full_signature": "private final boolean isValidSize(final MarketDoBookEntry entry)", "class_method_signature": "UniBook.isValidSize(final MarketDoBookEntry entry)", "testcase": false, "constructor": false}, {"identifier": "saveLastClue", "parameters": "(final int clue)", "modifiers": "private final", "return": "void", "signature": "void saveLastClue(final int clue)", "full_signature": "private final void saveLastClue(final int clue)", "class_method_signature": "UniBook.saveLastClue(final int clue)", "testcase": false, "constructor": false}, {"identifier": "saveLastSide", "parameters": "(final Book.Side side)", "modifiers": "private", "return": "void", "signature": "void saveLastSide(final Book.Side side)", "full_signature": "private void saveLastSide(final Book.Side side)", "class_method_signature": "UniBook.saveLastSide(final Book.Side side)", "testcase": false, "constructor": false}, {"identifier": "lastEntry", "parameters": "()", "modifiers": "protected final", "return": "DefBookEntry", "signature": "DefBookEntry lastEntry()", "full_signature": "protected final DefBookEntry lastEntry()", "class_method_signature": "UniBook.lastEntry()", "testcase": false, "constructor": false}, {"identifier": "make", "parameters": "(final MarketDoBookEntry entry)", "modifiers": "public final", "return": "UniBookResult", "signature": "UniBookResult make(final MarketDoBookEntry entry)", "full_signature": "public final UniBookResult make(final MarketDoBookEntry entry)", "class_method_signature": "UniBook.make(final MarketDoBookEntry entry)", "testcase": false, "constructor": false}, {"identifier": "makeModify", "parameters": "(final MarketDoBookEntry entry)", "modifiers": "private final", "return": "UniBookResult", "signature": "UniBookResult makeModify(final MarketDoBookEntry entry)", "full_signature": "private final UniBookResult makeModify(final MarketDoBookEntry entry)", "class_method_signature": "UniBook.makeModify(final MarketDoBookEntry entry)", "testcase": false, "constructor": false}, {"identifier": "makeRemove", "parameters": "(final MarketDoBookEntry entry)", "modifiers": "private final", "return": "UniBookResult", "signature": "UniBookResult makeRemove(final MarketDoBookEntry entry)", "full_signature": "private final UniBookResult makeRemove(final MarketDoBookEntry entry)", "class_method_signature": "UniBook.makeRemove(final MarketDoBookEntry entry)", "testcase": false, "constructor": false}, {"identifier": "topFor", "parameters": "(final Book.Side side)", "modifiers": "protected final", "return": "MarketDoBookEntry", "signature": "MarketDoBookEntry topFor(final Book.Side side)", "full_signature": "protected final MarketDoBookEntry topFor(final Book.Side side)", "class_method_signature": "UniBook.topFor(final Book.Side side)", "testcase": false, "constructor": false}, {"identifier": "nullEntry", "parameters": "(final int index)", "modifiers": "private final", "return": "DefBookEntry", "signature": "DefBookEntry nullEntry(final int index)", "full_signature": "private final DefBookEntry nullEntry(final int index)", "class_method_signature": "UniBook.nullEntry(final int index)", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "UniBook.toString()", "testcase": false, "constructor": false}, {"identifier": "freeze", "parameters": "()", "modifiers": "@Override public", "return": "V", "signature": "V freeze()", "full_signature": "@Override public V freeze()", "class_method_signature": "UniBook.freeze()", "testcase": false, "constructor": false}, {"identifier": "isFrozen", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isFrozen()", "full_signature": "@Override public boolean isFrozen()", "class_method_signature": "UniBook.isFrozen()", "testcase": false, "constructor": false}, {"identifier": "isEmpty", "parameters": "(final Book.Side side)", "modifiers": "protected final", "return": "boolean", "signature": "boolean isEmpty(final Book.Side side)", "full_signature": "protected final boolean isEmpty(final Book.Side side)", "class_method_signature": "UniBook.isEmpty(final Book.Side side)", "testcase": false, "constructor": false}, {"identifier": "ringGap", "parameters": "()", "modifiers": "@SuppressWarnings(\"unused\") private final", "return": "int", "signature": "int ringGap()", "full_signature": "@SuppressWarnings(\"unused\") private final int ringGap()", "class_method_signature": "UniBook.ringGap()", "testcase": false, "constructor": false}, {"identifier": "entriesFor", "parameters": "(final Book.Side side)", "modifiers": "protected final", "return": "DefBookEntry[]", "signature": "DefBookEntry[] entriesFor(final Book.Side side)", "full_signature": "protected final DefBookEntry[] entriesFor(final Book.Side side)", "class_method_signature": "UniBook.entriesFor(final Book.Side side)", "testcase": false, "constructor": false}, {"identifier": "sizesFor", "parameters": "(final Book.Side side)", "modifiers": "protected final", "return": "SizeValue[]", "signature": "SizeValue[] sizesFor(final Book.Side side)", "full_signature": "protected final SizeValue[] sizesFor(final Book.Side side)", "class_method_signature": "UniBook.sizesFor(final Book.Side side)", "testcase": false, "constructor": false}], "file": "base/src/main/java/com/barchart/feed/base/provider/UniBook.java"}, "focal_method": {"identifier": "make", "parameters": "(final MarketDoBookEntry entry)", "modifiers": "public final", "return": "UniBookResult", "body": "public final UniBookResult make(final MarketDoBookEntry entry) {\n\n\t\tmake: if (isValidEntryEnums(entry)) {\n\n\t\t\tfinal UniBookResult result;\n\n\t\t\tswitch (entry.act()) {\n\t\t\tcase MODIFY:\n\t\t\t\tresult = makeModify(entry);\n\t\t\t\tbreak;\n\t\t\tcase REMOVE:\n\t\t\t\tresult = makeRemove(entry);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak make;\n\t\t\t}\n\n\t\t\tswitch (result) {\n\t\t\tcase TOP:\n\t\t\tcase NORMAL:\n\t\t\t\tsaveLastSide(entry.side());\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\treturn ERROR;\n\n\t}", "signature": "UniBookResult make(final MarketDoBookEntry entry)", "full_signature": "public final UniBookResult make(final MarketDoBookEntry entry)", "class_method_signature": "UniBook.make(final MarketDoBookEntry entry)", "testcase": false, "constructor": false, "invocations": ["isValidEntryEnums", "act", "makeModify", "makeRemove", "saveLastSide", "side"]}, "repository": {"repo_id": 7243760, "url": "https://github.com/barchart/barchart-feed", "language": "Java", "is_fork": false, "fork_count": 3, "stargazer_count": 6, "size": 64172, "license": "licensed"}}