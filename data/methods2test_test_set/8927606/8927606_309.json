{"test_class": {"identifier": "CounterSwitchPipeTest", "superclass": "extends PipeTestBase<CounterSwitchPipe>", "interfaces": "", "fields": [{"original_string": "private IPipeLineSession session = new PipeLineSessionBase();", "modifier": "private", "type": "IPipeLineSession", "declarator": "session = new PipeLineSessionBase()", "var_name": "session"}], "file": "core/src/test/java/nl/nn/adapterframework/pipes/CounterSwitchPipeTest.java"}, "test_case": {"identifier": "testNonExistingForward", "parameters": "()", "modifiers": "@Test(expected = ConfigurationException.class) public", "return": "void", "body": "@Test(expected = ConfigurationException.class)\n    public void testNonExistingForward() throws Exception {\n        pipe.setDivisor(3);\n        configureAndStartPipe();\n    }", "signature": "void testNonExistingForward()", "full_signature": "@Test(expected = ConfigurationException.class) public void testNonExistingForward()", "class_method_signature": "CounterSwitchPipeTest.testNonExistingForward()", "testcase": true, "constructor": false, "invocations": ["setDivisor", "configureAndStartPipe"]}, "focal_class": {"identifier": "CounterSwitchPipe", "superclass": "extends FixedForwardPipe", "interfaces": "", "fields": [{"original_string": "private int divisor = 2;", "modifier": "private", "type": "int", "declarator": "divisor = 2", "var_name": "divisor"}], "methods": [{"identifier": "configure", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void configure()", "full_signature": "@Override public void configure()", "class_method_signature": "CounterSwitchPipe.configure()", "testcase": false, "constructor": false}, {"identifier": "doPipe", "parameters": "(Message message, IPipeLineSession session)", "modifiers": "@Override public", "return": "PipeRunResult", "signature": "PipeRunResult doPipe(Message message, IPipeLineSession session)", "full_signature": "@Override public PipeRunResult doPipe(Message message, IPipeLineSession session)", "class_method_signature": "CounterSwitchPipe.doPipe(Message message, IPipeLineSession session)", "testcase": false, "constructor": false}, {"identifier": "getDivisor", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int getDivisor()", "full_signature": "public int getDivisor()", "class_method_signature": "CounterSwitchPipe.getDivisor()", "testcase": false, "constructor": false}, {"identifier": "setDivisor", "parameters": "(int i)", "modifiers": "@IbisDoc({\" \", \"2\"}) public", "return": "void", "signature": "void setDivisor(int i)", "full_signature": "@IbisDoc({\" \", \"2\"}) public void setDivisor(int i)", "class_method_signature": "CounterSwitchPipe.setDivisor(int i)", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/pipes/CounterSwitchPipe.java"}, "focal_method": {"identifier": "setDivisor", "parameters": "(int i)", "modifiers": "@IbisDoc({\" \", \"2\"}) public", "return": "void", "body": "@IbisDoc({\" \", \"2\"})\n\tpublic void setDivisor(int i) {\n\t\tdivisor = i;\n\t}", "signature": "void setDivisor(int i)", "full_signature": "@IbisDoc({\" \", \"2\"}) public void setDivisor(int i)", "class_method_signature": "CounterSwitchPipe.setDivisor(int i)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}