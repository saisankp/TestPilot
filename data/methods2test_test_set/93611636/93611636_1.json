{"test_class": {"identifier": "PathExtractorTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final RequestContext requestContext = Mockito.mock(RequestContext.class);", "modifier": "private final", "type": "RequestContext", "declarator": "requestContext = Mockito.mock(RequestContext.class)", "var_name": "requestContext"}, {"original_string": "private final HttpServletRequest servletRequest = Mockito.mock(HttpServletRequest.class);", "modifier": "private final", "type": "HttpServletRequest", "declarator": "servletRequest = Mockito.mock(HttpServletRequest.class)", "var_name": "servletRequest"}, {"original_string": "private final Map<String, List<String>> queryParams = new HashMap<>();", "modifier": "private final", "type": "Map<String, List<String>>", "declarator": "queryParams = new HashMap<>()", "var_name": "queryParams"}, {"original_string": "private final PathExtractor extractor = new PathExtractor();", "modifier": "private final", "type": "PathExtractor", "declarator": "extractor = new PathExtractor()", "var_name": "extractor"}], "file": "manager/src/test/java/io/servicecomb/company/manager/filters/PathExtractorTest.java"}, "test_case": {"identifier": "extractsPathWithQueryStringAndPathInfo", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void extractsPathWithQueryStringAndPathInfo() {\n    when(servletRequest.getPathInfo()).thenReturn(\"/id\");\n    when(requestContext.getRequestQueryParams()).thenReturn(queryParams);\n\n    String path = extractor.path(requestContext);\n\n    assertThat(path).isEqualTo(\"/root/path/to/resource/id?n=3&n=5\");\n  }", "signature": "void extractsPathWithQueryStringAndPathInfo()", "full_signature": "@Test public void extractsPathWithQueryStringAndPathInfo()", "class_method_signature": "PathExtractorTest.extractsPathWithQueryStringAndPathInfo()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getPathInfo", "thenReturn", "when", "getRequestQueryParams", "path", "isEqualTo", "assertThat"]}, "focal_class": {"identifier": "PathExtractor", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "path", "parameters": "(RequestContext context)", "modifiers": "", "return": "String", "signature": "String path(RequestContext context)", "full_signature": " String path(RequestContext context)", "class_method_signature": "PathExtractor.path(RequestContext context)", "testcase": false, "constructor": false}, {"identifier": "appendQueryParams", "parameters": "(RequestContext context, StringBuilder builder)", "modifiers": "private", "return": "void", "signature": "void appendQueryParams(RequestContext context, StringBuilder builder)", "full_signature": "private void appendQueryParams(RequestContext context, StringBuilder builder)", "class_method_signature": "PathExtractor.appendQueryParams(RequestContext context, StringBuilder builder)", "testcase": false, "constructor": false}], "file": "manager/src/main/java/io/servicecomb/company/manager/filters/PathExtractor.java"}, "focal_method": {"identifier": "path", "parameters": "(RequestContext context)", "modifiers": "", "return": "String", "body": "String path(RequestContext context) {\n    HttpServletRequest request = context.getRequest();\n    StringBuilder builder = new StringBuilder();\n\n    builder.append(request.getContextPath()).append(request.getServletPath());\n    if (request.getPathInfo() != null) {\n      builder.append(request.getPathInfo());\n    }\n\n    if (context.getRequestQueryParams() != null) {\n      appendQueryParams(context, builder);\n    }\n\n    return builder.toString();\n  }", "signature": "String path(RequestContext context)", "full_signature": " String path(RequestContext context)", "class_method_signature": "PathExtractor.path(RequestContext context)", "testcase": false, "constructor": false, "invocations": ["getRequest", "append", "append", "getContextPath", "getServletPath", "getPathInfo", "append", "getPathInfo", "getRequestQueryParams", "appendQueryParams", "toString"]}, "repository": {"repo_id": 93611636, "url": "https://github.com/huaweicse/ServiceComb-Company-WorkShop", "language": "Java", "is_fork": false, "fork_count": 49, "stargazer_count": 79, "size": 1350, "license": "licensed"}}