{"test_class": {"identifier": "FeatureSetTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private List<EntitySpec> entitySpecs;", "modifier": "private", "type": "List<EntitySpec>", "declarator": "entitySpecs", "var_name": "entitySpecs"}, {"original_string": "private List<FeatureSpec> featureSpecs;", "modifier": "private", "type": "List<FeatureSpec>", "declarator": "featureSpecs", "var_name": "featureSpecs"}], "file": "common/src/test/java/feast/common/models/FeatureSetTest.java"}, "test_case": {"identifier": "shouldReturnFeatureSetStringRef", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void shouldReturnFeatureSetStringRef() {\n    FeatureSetSpec featureSetSpec =\n        FeatureSetSpec.newBuilder()\n            .setProject(\"project1\")\n            .setName(\"featureSetWithConstraints\")\n            .addAllEntities(entitySpecs)\n            .addAllFeatures(featureSpecs)\n            .build();\n\n    FeatureSetReferenceProto.FeatureSetReference featureSetReference =\n        FeatureSetReferenceProto.FeatureSetReference.newBuilder()\n            .setName(featureSetSpec.getName())\n            .setProject(featureSetSpec.getProject())\n            .build();\n\n    String actualFeatureSetStringRef1 = FeatureSet.getFeatureSetStringRef(featureSetSpec);\n    String actualFeatureSetStringRef2 = FeatureSet.getFeatureSetStringRef(featureSetReference);\n    String expectedFeatureSetStringRef = \"project1/featureSetWithConstraints\";\n\n    assertThat(actualFeatureSetStringRef1, equalTo(expectedFeatureSetStringRef));\n    assertThat(actualFeatureSetStringRef2, equalTo(expectedFeatureSetStringRef));\n  }", "signature": "void shouldReturnFeatureSetStringRef()", "full_signature": "@Test public void shouldReturnFeatureSetStringRef()", "class_method_signature": "FeatureSetTest.shouldReturnFeatureSetStringRef()", "testcase": true, "constructor": false, "invocations": ["build", "addAllFeatures", "addAllEntities", "setName", "setProject", "newBuilder", "build", "setProject", "setName", "newBuilder", "getName", "getProject", "getFeatureSetStringRef", "getFeatureSetStringRef", "assertThat", "equalTo", "assertThat", "equalTo"]}, "focal_class": {"identifier": "FeatureSet", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "getFeatureSetStringRef", "parameters": "(FeatureSetSpec featureSetSpec)", "modifiers": "public static", "return": "String", "signature": "String getFeatureSetStringRef(FeatureSetSpec featureSetSpec)", "full_signature": "public static String getFeatureSetStringRef(FeatureSetSpec featureSetSpec)", "class_method_signature": "FeatureSet.getFeatureSetStringRef(FeatureSetSpec featureSetSpec)", "testcase": false, "constructor": false}, {"identifier": "getFeatureSetStringRef", "parameters": "(FeatureSetReference featureSetReference)", "modifiers": "public static", "return": "String", "signature": "String getFeatureSetStringRef(FeatureSetReference featureSetReference)", "full_signature": "public static String getFeatureSetStringRef(FeatureSetReference featureSetReference)", "class_method_signature": "FeatureSet.getFeatureSetStringRef(FeatureSetReference featureSetReference)", "testcase": false, "constructor": false}], "file": "common/src/main/java/feast/common/models/FeatureSet.java"}, "focal_method": {"identifier": "getFeatureSetStringRef", "parameters": "(FeatureSetSpec featureSetSpec)", "modifiers": "public static", "return": "String", "body": "public static String getFeatureSetStringRef(FeatureSetSpec featureSetSpec) {\n    return String.format(\"%s/%s\", featureSetSpec.getProject(), featureSetSpec.getName());\n  }", "signature": "String getFeatureSetStringRef(FeatureSetSpec featureSetSpec)", "full_signature": "public static String getFeatureSetStringRef(FeatureSetSpec featureSetSpec)", "class_method_signature": "FeatureSet.getFeatureSetStringRef(FeatureSetSpec featureSetSpec)", "testcase": false, "constructor": false, "invocations": ["format", "getProject", "getName"]}, "repository": {"repo_id": 161133770, "url": "https://github.com/gojek/feast", "stars": 633, "created": "12/10/2018 7:20:15 AM +00:00", "updates": "2020-01-27T12:39:33+00:00", "fork": "False", "license": "licensed"}}