{"test_class": {"identifier": "GsonRecordReaderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private LongWritable key1 = new LongWritable(0);", "modifier": "private", "type": "LongWritable", "declarator": "key1 = new LongWritable(0)", "var_name": "key1"}, {"original_string": "private LongWritable key2 = new LongWritable(35);", "modifier": "private", "type": "LongWritable", "declarator": "key2 = new LongWritable(35)", "var_name": "key2"}, {"original_string": "private Text value1 = new Text(\"{'title':'Test1','value':'test_1'}\");", "modifier": "private", "type": "Text", "declarator": "value1 = new Text(\"{'title':'Test1','value':'test_1'}\")", "var_name": "value1"}, {"original_string": "private Text value2 = new Text(\"{'title':'Test2','value':'test_2'}\");", "modifier": "private", "type": "Text", "declarator": "value2 = new Text(\"{'title':'Test2','value':'test_2'}\")", "var_name": "value2"}, {"original_string": "private FileSystem ghfs;", "modifier": "private", "type": "FileSystem", "declarator": "ghfs", "var_name": "ghfs"}, {"original_string": "private Configuration config;", "modifier": "private", "type": "Configuration", "declarator": "config", "var_name": "config"}, {"original_string": "private TaskAttemptID testTaskAttemptId = new TaskAttemptID(\n      new TaskID(new JobID(\"\", 1), true /* isMap */, 1), 1);", "modifier": "private", "type": "TaskAttemptID", "declarator": "testTaskAttemptId = new TaskAttemptID(\n      new TaskID(new JobID(\"\", 1), true /* isMap */, 1), 1)", "var_name": "testTaskAttemptId"}], "file": "bigquery/src/test/java/com/google/cloud/hadoop/io/bigquery/GsonRecordReaderTest.java"}, "test_case": {"identifier": "testGetProgress", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testGetProgress() throws Exception {\n    // Load RecordReader with multiple records. Set length of input split to 60 chars.\n    GsonRecordReader multipleRecordReader = getRecordReader(60);\n\n    // Assert RecordReader returns correct progress.\n    assertThat(multipleRecordReader.nextKeyValue()).isTrue();\n    assertThat(multipleRecordReader.getProgress()).isWithin(.01f).of(.58f);\n    assertThat(multipleRecordReader.nextKeyValue()).isTrue();\n    assertThat(multipleRecordReader.getProgress()).isWithin(.01f).of(1);\n    assertThat(multipleRecordReader.nextKeyValue()).isFalse();\n    assertThat(multipleRecordReader.getProgress()).isWithin(.01f).of(1);\n\n    // Close RecordReader.\n    multipleRecordReader.close();\n  }", "signature": "void testGetProgress()", "full_signature": "@Test public void testGetProgress()", "class_method_signature": "GsonRecordReaderTest.testGetProgress()", "testcase": true, "constructor": false, "invocations": ["getRecordReader", "isTrue", "assertThat", "nextKeyValue", "of", "isWithin", "assertThat", "getProgress", "isTrue", "assertThat", "nextKeyValue", "of", "isWithin", "assertThat", "getProgress", "isFalse", "assertThat", "nextKeyValue", "of", "isWithin", "assertThat", "getProgress", "close"]}, "focal_class": {"identifier": "GsonRecordReader", "superclass": "extends RecordReader<LongWritable, JsonObject>", "interfaces": "", "fields": [{"original_string": "private static final GoogleLogger logger = GoogleLogger.forEnclosingClass();", "modifier": "private static final", "type": "GoogleLogger", "declarator": "logger = GoogleLogger.forEnclosingClass()", "var_name": "logger"}, {"original_string": "private LineRecordReader lineReader;", "modifier": "private", "type": "LineRecordReader", "declarator": "lineReader", "var_name": "lineReader"}, {"original_string": "private LongWritable currentKey = new LongWritable(0L);", "modifier": "private", "type": "LongWritable", "declarator": "currentKey = new LongWritable(0L)", "var_name": "currentKey"}, {"original_string": "private JsonObject currentValue;", "modifier": "private", "type": "JsonObject", "declarator": "currentValue", "var_name": "currentValue"}, {"original_string": "private int count;", "modifier": "private", "type": "int", "declarator": "count", "var_name": "count"}, {"original_string": "private JsonParser jsonParser;", "modifier": "private", "type": "JsonParser", "declarator": "jsonParser", "var_name": "jsonParser"}], "methods": [{"identifier": "initialize", "parameters": "(InputSplit genericSplit, TaskAttemptContext context)", "modifiers": "@Override public", "return": "void", "signature": "void initialize(InputSplit genericSplit, TaskAttemptContext context)", "full_signature": "@Override public void initialize(InputSplit genericSplit, TaskAttemptContext context)", "class_method_signature": "GsonRecordReader.initialize(InputSplit genericSplit, TaskAttemptContext context)", "testcase": false, "constructor": false}, {"identifier": "nextKeyValue", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean nextKeyValue()", "full_signature": "@Override public boolean nextKeyValue()", "class_method_signature": "GsonRecordReader.nextKeyValue()", "testcase": false, "constructor": false}, {"identifier": "getCurrentKey", "parameters": "()", "modifiers": "@Override public", "return": "LongWritable", "signature": "LongWritable getCurrentKey()", "full_signature": "@Override public LongWritable getCurrentKey()", "class_method_signature": "GsonRecordReader.getCurrentKey()", "testcase": false, "constructor": false}, {"identifier": "getCurrentValue", "parameters": "()", "modifiers": "@Override public", "return": "JsonObject", "signature": "JsonObject getCurrentValue()", "full_signature": "@Override public JsonObject getCurrentValue()", "class_method_signature": "GsonRecordReader.getCurrentValue()", "testcase": false, "constructor": false}, {"identifier": "getProgress", "parameters": "()", "modifiers": "@Override public", "return": "float", "signature": "float getProgress()", "full_signature": "@Override public float getProgress()", "class_method_signature": "GsonRecordReader.getProgress()", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "GsonRecordReader.close()", "testcase": false, "constructor": false}], "file": "bigquery/src/main/java/com/google/cloud/hadoop/io/bigquery/GsonRecordReader.java"}, "focal_method": {"identifier": "getProgress", "parameters": "()", "modifiers": "@Override public", "return": "float", "body": "@Override\n  public float getProgress()\n      throws IOException {\n    return lineReader.getProgress();\n  }", "signature": "float getProgress()", "full_signature": "@Override public float getProgress()", "class_method_signature": "GsonRecordReader.getProgress()", "testcase": false, "constructor": false, "invocations": ["getProgress"]}, "repository": {"repo_id": 19684359, "url": "https://github.com/GoogleCloudDataproc/bigdata-interop", "stars": 178, "created": "5/12/2014 3:11:55 AM +00:00", "updates": "2020-01-23T23:10:40+00:00", "fork": "False", "license": "licensed"}}