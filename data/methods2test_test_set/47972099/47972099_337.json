{"test_class": {"identifier": "BitSetTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private BitSet bitSet;", "modifier": "private", "type": "BitSet", "declarator": "bitSet", "var_name": "bitSet"}, {"original_string": "int byteSize = 1024;", "modifier": "", "type": "int", "declarator": "byteSize = 1024", "var_name": "byteSize"}, {"original_string": "MemorySegment memorySegment = MemorySegmentFactory.allocateUnpooledSegment(byteSize);", "modifier": "", "type": "MemorySegment", "declarator": "memorySegment = MemorySegmentFactory.allocateUnpooledSegment(byteSize)", "var_name": "memorySegment"}], "file": "flink-runtime/src/test/java/org/apache/flink/runtime/operators/util/BitSetTest.java"}, "test_case": {"identifier": "verifyBitSetSize3", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n\tpublic void verifyBitSetSize3() {\n\t\tbitSet.setMemorySegment(memorySegment, -1);\n\t}", "signature": "void verifyBitSetSize3()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void verifyBitSetSize3()", "class_method_signature": "BitSetTest.verifyBitSetSize3()", "testcase": true, "constructor": false, "invocations": ["setMemorySegment"]}, "focal_class": {"identifier": "BitSet", "superclass": "", "interfaces": "", "fields": [{"original_string": "private MemorySegment memorySegment;", "modifier": "private", "type": "MemorySegment", "declarator": "memorySegment", "var_name": "memorySegment"}, {"original_string": "private int offset;", "modifier": "private", "type": "int", "declarator": "offset", "var_name": "offset"}, {"original_string": "private int byteLength;", "modifier": "private", "type": "int", "declarator": "byteLength", "var_name": "byteLength"}, {"original_string": "private int bitLength;", "modifier": "private", "type": "int", "declarator": "bitLength", "var_name": "bitLength"}, {"original_string": "private final int BYTE_POSITION_MASK = 0xfffffff8;", "modifier": "private final", "type": "int", "declarator": "BYTE_POSITION_MASK = 0xfffffff8", "var_name": "BYTE_POSITION_MASK"}, {"original_string": "private final int BYTE_INDEX_MASK = 0x00000007;", "modifier": "private final", "type": "int", "declarator": "BYTE_INDEX_MASK = 0x00000007", "var_name": "BYTE_INDEX_MASK"}], "methods": [{"identifier": "BitSet", "parameters": "(int byteSize)", "modifiers": "public", "return": "", "signature": " BitSet(int byteSize)", "full_signature": "public  BitSet(int byteSize)", "class_method_signature": "BitSet.BitSet(int byteSize)", "testcase": false, "constructor": true}, {"identifier": "setMemorySegment", "parameters": "(MemorySegment memorySegment, int offset)", "modifiers": "public", "return": "void", "signature": "void setMemorySegment(MemorySegment memorySegment, int offset)", "full_signature": "public void setMemorySegment(MemorySegment memorySegment, int offset)", "class_method_signature": "BitSet.setMemorySegment(MemorySegment memorySegment, int offset)", "testcase": false, "constructor": false}, {"identifier": "set", "parameters": "(int index)", "modifiers": "public", "return": "void", "signature": "void set(int index)", "full_signature": "public void set(int index)", "class_method_signature": "BitSet.set(int index)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "(int index)", "modifiers": "public", "return": "boolean", "signature": "boolean get(int index)", "full_signature": "public boolean get(int index)", "class_method_signature": "BitSet.get(int index)", "testcase": false, "constructor": false}, {"identifier": "bitSize", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int bitSize()", "full_signature": "public int bitSize()", "class_method_signature": "BitSet.bitSize()", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void clear()", "full_signature": "public void clear()", "class_method_signature": "BitSet.clear()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "BitSet.toString()", "testcase": false, "constructor": false}], "file": "flink-runtime/src/main/java/org/apache/flink/runtime/operators/util/BitSet.java"}, "focal_method": {"identifier": "setMemorySegment", "parameters": "(MemorySegment memorySegment, int offset)", "modifiers": "public", "return": "void", "body": "public void setMemorySegment(MemorySegment memorySegment, int offset) {\n\t\tPreconditions.checkArgument(memorySegment != null, \"MemorySegment can not be null.\");\n\t\tPreconditions.checkArgument(offset >= 0, \"Offset should be positive integer.\");\n\t\tPreconditions.checkArgument(offset + byteLength <= memorySegment.size(), \n\t\t\t\"Could not set MemorySegment, the remain buffers is not enough.\");\n\t\tthis.memorySegment = memorySegment;\n\t\tthis.offset = offset;\n\t}", "signature": "void setMemorySegment(MemorySegment memorySegment, int offset)", "full_signature": "public void setMemorySegment(MemorySegment memorySegment, int offset)", "class_method_signature": "BitSet.setMemorySegment(MemorySegment memorySegment, int offset)", "testcase": false, "constructor": false, "invocations": ["checkArgument", "checkArgument", "checkArgument", "size"]}, "repository": {"repo_id": 47972099, "url": "https://github.com/streamline-eu/ML-Pipelines", "language": "Java", "is_fork": false, "fork_count": 7, "stargazer_count": 7, "size": 85537, "license": "licensed"}}