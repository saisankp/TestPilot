{"test_class": {"identifier": "ThreadLocalMillisProviderTest", "superclass": "", "interfaces": "", "fields": [], "file": "restx-common/src/test/java/restx/common/ThreadLocalMillisProviderTest.java"}, "test_case": {"identifier": "should_return_system_time_in_other_thread", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void should_return_system_time_in_other_thread() throws Exception {\n        final long now = System.currentTimeMillis();\n        ThreadLocalMillisProvider.setCurrentMillisFixed(now);\n\n        Thread.sleep(10);\n        final long[] fromOtherThread = new long[1];\n        collectCurrentTimeInThread(fromOtherThread, 0).join();\n        assertThat(fromOtherThread[0]).isNotEqualTo(now).isNotEqualTo(0);\n    }", "signature": "void should_return_system_time_in_other_thread()", "full_signature": "@Test public void should_return_system_time_in_other_thread()", "class_method_signature": "ThreadLocalMillisProviderTest.should_return_system_time_in_other_thread()", "testcase": true, "constructor": false, "invocations": ["currentTimeMillis", "setCurrentMillisFixed", "sleep", "join", "collectCurrentTimeInThread", "isNotEqualTo", "isNotEqualTo", "assertThat"]}, "focal_class": {"identifier": "ThreadLocalMillisProvider", "superclass": "", "interfaces": "implements DateTimeUtils.MillisProvider", "fields": [{"original_string": "private static final DateTimeUtils.MillisProvider systemMillisProvider = new DateTimeUtils.MillisProvider() {\n        @Override\n        public long getMillis() {\n            return System.currentTimeMillis();\n        }\n    };", "modifier": "private static final", "type": "DateTimeUtils.MillisProvider", "declarator": "systemMillisProvider = new DateTimeUtils.MillisProvider() {\n        @Override\n        public long getMillis() {\n            return System.currentTimeMillis();\n        }\n    }", "var_name": "systemMillisProvider"}, {"original_string": "private static final ThreadLocal<DateTimeUtils.MillisProvider> local\n            = new ThreadLocal<DateTimeUtils.MillisProvider>() {\n        @Override\n        protected DateTimeUtils.MillisProvider initialValue() {\n            return systemMillisProvider;\n        }\n    };", "modifier": "private static final", "type": "ThreadLocal<DateTimeUtils.MillisProvider>", "declarator": "local\n            = new ThreadLocal<DateTimeUtils.MillisProvider>() {\n        @Override\n        protected DateTimeUtils.MillisProvider initialValue() {\n            return systemMillisProvider;\n        }\n    }", "var_name": "local"}, {"original_string": "private static final DateTimeUtils.MillisProvider INSTANCE = new ThreadLocalMillisProvider();", "modifier": "private static final", "type": "DateTimeUtils.MillisProvider", "declarator": "INSTANCE = new ThreadLocalMillisProvider()", "var_name": "INSTANCE"}], "methods": [{"identifier": "setCurrentMillisSystem", "parameters": "()", "modifiers": "public static final", "return": "void", "signature": "void setCurrentMillisSystem()", "full_signature": "public static final void setCurrentMillisSystem()", "class_method_signature": "ThreadLocalMillisProvider.setCurrentMillisSystem()", "testcase": false, "constructor": false}, {"identifier": "setCurrentMillisFixed", "parameters": "(long fixedMillis)", "modifiers": "public static final", "return": "void", "signature": "void setCurrentMillisFixed(long fixedMillis)", "full_signature": "public static final void setCurrentMillisFixed(long fixedMillis)", "class_method_signature": "ThreadLocalMillisProvider.setCurrentMillisFixed(long fixedMillis)", "testcase": false, "constructor": false}, {"identifier": "setCurrentMillisOffset", "parameters": "(long offsetMillis)", "modifiers": "public static final", "return": "void", "signature": "void setCurrentMillisOffset(long offsetMillis)", "full_signature": "public static final void setCurrentMillisOffset(long offsetMillis)", "class_method_signature": "ThreadLocalMillisProvider.setCurrentMillisOffset(long offsetMillis)", "testcase": false, "constructor": false}, {"identifier": "setCurrentMillisProvider", "parameters": "(DateTimeUtils.MillisProvider millisProvider)", "modifiers": "public static final", "return": "void", "signature": "void setCurrentMillisProvider(DateTimeUtils.MillisProvider millisProvider)", "full_signature": "public static final void setCurrentMillisProvider(DateTimeUtils.MillisProvider millisProvider)", "class_method_signature": "ThreadLocalMillisProvider.setCurrentMillisProvider(DateTimeUtils.MillisProvider millisProvider)", "testcase": false, "constructor": false}, {"identifier": "clear", "parameters": "()", "modifiers": "public static", "return": "void", "signature": "void clear()", "full_signature": "public static void clear()", "class_method_signature": "ThreadLocalMillisProvider.clear()", "testcase": false, "constructor": false}, {"identifier": "current", "parameters": "()", "modifiers": "public static", "return": "DateTimeUtils.MillisProvider", "signature": "DateTimeUtils.MillisProvider current()", "full_signature": "public static DateTimeUtils.MillisProvider current()", "class_method_signature": "ThreadLocalMillisProvider.current()", "testcase": false, "constructor": false}, {"identifier": "install", "parameters": "()", "modifiers": "private static", "return": "void", "signature": "void install()", "full_signature": "private static void install()", "class_method_signature": "ThreadLocalMillisProvider.install()", "testcase": false, "constructor": false}, {"identifier": "ThreadLocalMillisProvider", "parameters": "()", "modifiers": "private", "return": "", "signature": " ThreadLocalMillisProvider()", "full_signature": "private  ThreadLocalMillisProvider()", "class_method_signature": "ThreadLocalMillisProvider.ThreadLocalMillisProvider()", "testcase": false, "constructor": true}, {"identifier": "getMillis", "parameters": "()", "modifiers": "@Override public", "return": "long", "signature": "long getMillis()", "full_signature": "@Override public long getMillis()", "class_method_signature": "ThreadLocalMillisProvider.getMillis()", "testcase": false, "constructor": false}], "file": "restx-common/src/main/java/restx/common/ThreadLocalMillisProvider.java"}, "focal_method": {"identifier": "setCurrentMillisFixed", "parameters": "(long fixedMillis)", "modifiers": "public static final", "return": "void", "body": "public static final void setCurrentMillisFixed(long fixedMillis) throws SecurityException {\n        install();\n        local.set(new FixedMillisProvider(fixedMillis));\n    }", "signature": "void setCurrentMillisFixed(long fixedMillis)", "full_signature": "public static final void setCurrentMillisFixed(long fixedMillis)", "class_method_signature": "ThreadLocalMillisProvider.setCurrentMillisFixed(long fixedMillis)", "testcase": false, "constructor": false, "invocations": ["install", "set"]}, "repository": {"repo_id": 9836833, "url": "https://github.com/restx/restx", "language": "Java", "is_fork": false, "fork_count": 78, "stargazer_count": 433, "size": 7896, "license": "licensed"}}