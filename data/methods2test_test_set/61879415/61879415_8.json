{"test_class": {"identifier": "IdentityUsernameExportBulkActionTest", "superclass": "extends AbstractBulkActionTest", "interfaces": "", "fields": [{"original_string": "@Autowired\n\tprivate AttachmentManager attachmentManager;", "modifier": "@Autowired\n\tprivate", "type": "AttachmentManager", "declarator": "attachmentManager", "var_name": "attachmentManager"}, {"original_string": "@Autowired\n\tprivate LongRunningTaskManager longRunningTaskManager;", "modifier": "@Autowired\n\tprivate", "type": "LongRunningTaskManager", "declarator": "longRunningTaskManager", "var_name": "longRunningTaskManager"}], "file": "Realization/backend/example/src/test/java/eu/bcvsolutions/idm/example/bulk/action/impl/IdentityUsernameExportBulkActionTest.java"}, "test_case": {"identifier": "processBulkAction", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void processBulkAction() throws IOException {\n\t\tIdmBulkActionDto exampleAction = findBulkAction(IdmIdentity.class, IdentityUsernameExportBulkAction.BULK_ACTION_NAME);\n\t\t\n\t\tassertNotNull(exampleAction);\n\t\t\n\t\tIdmIdentityDto identity = getHelper().createIdentity();\n\t\tIdmIdentityDto identity2 = getHelper().createIdentity();\n\t\tIdmIdentityDto identity3 = getHelper().createIdentity();\n\t\t\n\t\texampleAction.setIdentifiers(Sets.newHashSet(identity.getId(), identity2.getId(), identity3.getId()));\n\t\t\n\t\tIdmBulkActionDto processAction = bulkActionManager.processAction(exampleAction);\n\t\tassertNotNull(processAction.getLongRunningTaskId());\n\t\tIdmLongRunningTaskFilter context = new IdmLongRunningTaskFilter();\n\t\tcontext.setIncludeItemCounts(true);\n\t\tIdmLongRunningTaskDto longRunningTask = longRunningTaskService.get(processAction.getLongRunningTaskId(), context);\n\n\t\tassertEquals(Long.valueOf(3), longRunningTask.getCount());\n\t\tassertEquals(Long.valueOf(3), longRunningTask.getSuccessItemCount());\n\t\tassertEquals(Long.valueOf(0), longRunningTask.getFailedItemCount());\n\t\tassertEquals(Long.valueOf(0), longRunningTask.getWarningItemCount());\n\n\t\tOperationResult result = longRunningTask.getResult();\n\t\tResultModel model = result.getModel();\n\t\tassertNotNull(model);\n\t\tassertEquals(206, model.getStatusCode());\n\t\tassertEquals(CoreResultCode.LONG_RUNNING_TASK_PARTITIAL_DOWNLOAD.getCode(), model.getStatusEnum());\n\n\t\tMap<String, Object> parameters = model.getParameters();\n\t\tassertNotNull(parameters);\n\t\tObject object = parameters.get(AttachableEntity.PARAMETER_ATTACHMENT_ID);\n\t\tassertNotNull(object);\n\t\tUUID fromString = UUID.fromString(object.toString());\n\t\tassertNotNull(fromString);\n\n\t\tIdmAttachmentDto attachmentDto = attachmentManager.get(fromString);\n\t\tassertNotNull(attachmentDto);\n\t\tassertEquals(longRunningTask.getId(), attachmentDto.getOwnerId());\n\n\t\tIdmAttachmentDto attachmentForLongRunningTask = longRunningTaskManager.getAttachment(longRunningTask.getId(), attachmentDto.getId());\n\t\tassertNotNull(attachmentForLongRunningTask);\n\t\tassertEquals(attachmentDto.getId(), attachmentForLongRunningTask.getId());\n\t\t\n\t\tInputStream is = attachmentManager.getAttachmentData(attachmentDto.getId());\n\t\ttry {\n\t\t\tString string = IOUtils.toString(is);\n\t\t\tassertTrue(string.contains(identity.getUsername()));\n\t\t\tassertTrue(string.contains(identity2.getUsername()));\n\t\t\tassertTrue(string.contains(identity3.getUsername()));\n\t\n\t\t\tassertTrue(string.contains(IdmIdentity_.username.getName().toUpperCase()));\n\t\t\tassertTrue(string.contains(IdmIdentity_.externalCode.getName().toUpperCase()));\n\t\t\tassertTrue(string.contains(IdmIdentity_.state.getName().toUpperCase()));\n\t\t} finally {\n\t\t\tIOUtils.closeQuietly(is);\n\t\t}\n\t}", "signature": "void processBulkAction()", "full_signature": "@Test public void processBulkAction()", "class_method_signature": "IdentityUsernameExportBulkActionTest.processBulkAction()", "testcase": true, "constructor": false, "invocations": ["findBulkAction", "assertNotNull", "createIdentity", "getHelper", "createIdentity", "getHelper", "createIdentity", "getHelper", "setIdentifiers", "newHashSet", "getId", "getId", "getId", "processAction", "assertNotNull", "getLongRunningTaskId", "setIncludeItemCounts", "get", "getLongRunningTaskId", "assertEquals", "valueOf", "getCount", "assertEquals", "valueOf", "getSuccessItemCount", "assertEquals", "valueOf", "getFailedItemCount", "assertEquals", "valueOf", "getWarningItemCount", "getResult", "getModel", "assertNotNull", "assertEquals", "getStatusCode", "assertEquals", "getCode", "getStatusEnum", "getParameters", "assertNotNull", "get", "assertNotNull", "fromString", "toString", "assertNotNull", "get", "assertNotNull", "assertEquals", "getId", "getOwnerId", "getAttachment", "getId", "getId", "assertNotNull", "assertEquals", "getId", "getId", "getAttachmentData", "getId", "toString", "assertTrue", "contains", "getUsername", "assertTrue", "contains", "getUsername", "assertTrue", "contains", "getUsername", "assertTrue", "contains", "toUpperCase", "getName", "assertTrue", "contains", "toUpperCase", "getName", "assertTrue", "contains", "toUpperCase", "getName", "closeQuietly"]}, "focal_class": {"identifier": "IdentityUsernameExportBulkAction", "superclass": "extends AbstractBulkAction<IdmIdentityDto, IdmIdentityFilter>", "interfaces": "", "fields": [{"original_string": "public static final String BULK_ACTION_NAME = \"identity-username-export-bulk-action\";", "modifier": "public static final", "type": "String", "declarator": "BULK_ACTION_NAME = \"identity-username-export-bulk-action\"", "var_name": "BULK_ACTION_NAME"}, {"original_string": "private static final String SPLIT_CHARACTER_CODE = \"splitCharacter\";", "modifier": "private static final", "type": "String", "declarator": "SPLIT_CHARACTER_CODE = \"splitCharacter\"", "var_name": "SPLIT_CHARACTER_CODE"}, {"original_string": "private static final String SPLIT_CHARACTER_DEFAULT_VALUE = \";\";", "modifier": "private static final", "type": "String", "declarator": "SPLIT_CHARACTER_DEFAULT_VALUE = \";\"", "var_name": "SPLIT_CHARACTER_DEFAULT_VALUE"}, {"original_string": "private StringBuilder result;", "modifier": "private", "type": "StringBuilder", "declarator": "result", "var_name": "result"}, {"original_string": "@Autowired\n\tprivate IdmIdentityService identityService;", "modifier": "@Autowired\n\tprivate", "type": "IdmIdentityService", "declarator": "identityService", "var_name": "identityService"}, {"original_string": "@Autowired\n\tprivate AttachmentManager attachmentManager;", "modifier": "@Autowired\n\tprivate", "type": "AttachmentManager", "declarator": "attachmentManager", "var_name": "attachmentManager"}], "methods": [{"identifier": "processEntities", "parameters": "(Collection<UUID> entitiesId)", "modifiers": "@Override protected", "return": "OperationResult", "signature": "OperationResult processEntities(Collection<UUID> entitiesId)", "full_signature": "@Override protected OperationResult processEntities(Collection<UUID> entitiesId)", "class_method_signature": "IdentityUsernameExportBulkAction.processEntities(Collection<UUID> entitiesId)", "testcase": false, "constructor": false}, {"identifier": "processDto", "parameters": "(IdmIdentityDto dto)", "modifiers": "@Override protected", "return": "OperationResult", "signature": "OperationResult processDto(IdmIdentityDto dto)", "full_signature": "@Override protected OperationResult processDto(IdmIdentityDto dto)", "class_method_signature": "IdentityUsernameExportBulkAction.processDto(IdmIdentityDto dto)", "testcase": false, "constructor": false}, {"identifier": "end", "parameters": "(OperationResult result, Exception ex)", "modifiers": "@Override protected", "return": "OperationResult", "signature": "OperationResult end(OperationResult result, Exception ex)", "full_signature": "@Override protected OperationResult end(OperationResult result, Exception ex)", "class_method_signature": "IdentityUsernameExportBulkAction.end(OperationResult result, Exception ex)", "testcase": false, "constructor": false}, {"identifier": "getFormAttributes", "parameters": "()", "modifiers": "@Override public", "return": "List<IdmFormAttributeDto>", "signature": "List<IdmFormAttributeDto> getFormAttributes()", "full_signature": "@Override public List<IdmFormAttributeDto> getFormAttributes()", "class_method_signature": "IdentityUsernameExportBulkAction.getFormAttributes()", "testcase": false, "constructor": false}, {"identifier": "getSplitCharacterdAttribute", "parameters": "()", "modifiers": "protected", "return": "IdmFormAttributeDto", "signature": "IdmFormAttributeDto getSplitCharacterdAttribute()", "full_signature": "protected IdmFormAttributeDto getSplitCharacterdAttribute()", "class_method_signature": "IdentityUsernameExportBulkAction.getSplitCharacterdAttribute()", "testcase": false, "constructor": false}, {"identifier": "initStringBuilder", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initStringBuilder()", "full_signature": "private void initStringBuilder()", "class_method_signature": "IdentityUsernameExportBulkAction.initStringBuilder()", "testcase": false, "constructor": false}, {"identifier": "getSplitCharacter", "parameters": "()", "modifiers": "private", "return": "String", "signature": "String getSplitCharacter()", "full_signature": "private String getSplitCharacter()", "class_method_signature": "IdentityUsernameExportBulkAction.getSplitCharacter()", "testcase": false, "constructor": false}, {"identifier": "getOrder", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getOrder()", "full_signature": "@Override public int getOrder()", "class_method_signature": "IdentityUsernameExportBulkAction.getOrder()", "testcase": false, "constructor": false}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "IdentityUsernameExportBulkAction.getName()", "testcase": false, "constructor": false}, {"identifier": "getService", "parameters": "()", "modifiers": "@Override public", "return": "ReadWriteDtoService<IdmIdentityDto, IdmIdentityFilter>", "signature": "ReadWriteDtoService<IdmIdentityDto, IdmIdentityFilter> getService()", "full_signature": "@Override public ReadWriteDtoService<IdmIdentityDto, IdmIdentityFilter> getService()", "class_method_signature": "IdentityUsernameExportBulkAction.getService()", "testcase": false, "constructor": false}, {"identifier": "isRecoverable", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isRecoverable()", "full_signature": "@Override public boolean isRecoverable()", "class_method_signature": "IdentityUsernameExportBulkAction.isRecoverable()", "testcase": false, "constructor": false}], "file": "Realization/backend/example/src/main/java/eu/bcvsolutions/idm/example/bulk/action/impl/IdentityUsernameExportBulkAction.java"}, "focal_method": {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n\tpublic String getName() {\n\t\treturn BULK_ACTION_NAME;\n\t}", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "IdentityUsernameExportBulkAction.getName()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 61879415, "url": "https://github.com/bcvsolutions/CzechIdMng", "stars": 25, "created": "6/24/2016 11:18:23 AM +00:00", "updates": "2020-01-27T15:14:40+00:00", "fork": "False", "license": "licensed"}}