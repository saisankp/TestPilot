{"test_class": {"identifier": "InternalImportOptionsTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final PackageId pid = PackageId.fromString(\"test:name:1.0-SNAPSHOT\");", "modifier": "private static final", "type": "PackageId", "declarator": "pid = PackageId.fromString(\"test:name:1.0-SNAPSHOT\")", "var_name": "pid"}, {"original_string": "private static final ClassLoader pcl = Packaging.class.getClassLoader();", "modifier": "private static final", "type": "ClassLoader", "declarator": "pcl = Packaging.class.getClassLoader()", "var_name": "pcl"}], "file": "core/src/test/java/net/adamcin/oakpal/core/InternalImportOptionsTest.java"}, "test_case": {"identifier": "testSetFilter", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSetFilter() {\n        final ImportOptions delegate = new ImportOptions();\n        final InternalImportOptions options = new InternalImportOptions(pid, delegate, null);\n        final WorkspaceFilter listener1 = mock(WorkspaceFilter.class);\n        final WorkspaceFilter listener2 = mock(WorkspaceFilter.class);\n        delegate.setFilter(listener1);\n        assertSame(\"instance1\", listener1, options.getFilter());\n        delegate.setFilter(listener2);\n        assertSame(\"instance2\", listener2, options.getFilter());\n        options.setFilter(listener1);\n        assertSame(\"instance1\", listener1, delegate.getFilter());\n        options.setFilter(listener2);\n        assertSame(\"instance2\", listener2, delegate.getFilter());\n    }", "signature": "void testSetFilter()", "full_signature": "@Test public void testSetFilter()", "class_method_signature": "InternalImportOptionsTest.testSetFilter()", "testcase": true, "constructor": false, "invocations": ["mock", "mock", "setFilter", "assertSame", "getFilter", "setFilter", "assertSame", "getFilter", "setFilter", "assertSame", "getFilter", "setFilter", "assertSame", "getFilter"]}, "focal_class": {"identifier": "InternalImportOptions", "superclass": "extends ImportOptions", "interfaces": "implements InstallHookProcessorFactory", "fields": [{"original_string": "static final String INSTALL_HOOK_PROCESSOR_IMPL_CLASS =\n            \"org.apache.jackrabbit.vault.packaging.impl.InstallHookProcessorImpl\";", "modifier": "static final", "type": "String", "declarator": "INSTALL_HOOK_PROCESSOR_IMPL_CLASS =\n            \"org.apache.jackrabbit.vault.packaging.impl.InstallHookProcessorImpl\"", "var_name": "INSTALL_HOOK_PROCESSOR_IMPL_CLASS"}, {"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(InternalImportOptions.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(InternalImportOptions.class)", "var_name": "LOGGER"}, {"original_string": "static final InstallHookProcessor NOOP_INSTALL_HOOK_PROCESSOR = new InstallHookProcessor() {\n        @Override\n        public void registerHooks(Archive archive, ClassLoader classLoader) {\n        }\n\n        @Override\n        public void registerHook(VaultInputSource vaultInputSource, ClassLoader classLoader) {\n        }\n\n        @Override\n        public boolean hasHooks() {\n            return false;\n        }\n\n        @Override\n        public boolean execute(InstallContext installContext) {\n            return true;\n        }\n    };", "modifier": "static final", "type": "InstallHookProcessor", "declarator": "NOOP_INSTALL_HOOK_PROCESSOR = new InstallHookProcessor() {\n        @Override\n        public void registerHooks(Archive archive, ClassLoader classLoader) {\n        }\n\n        @Override\n        public void registerHook(VaultInputSource vaultInputSource, ClassLoader classLoader) {\n        }\n\n        @Override\n        public boolean hasHooks() {\n            return false;\n        }\n\n        @Override\n        public boolean execute(InstallContext installContext) {\n            return true;\n        }\n    }", "var_name": "NOOP_INSTALL_HOOK_PROCESSOR"}, {"original_string": "private final PackageId packageId;", "modifier": "private final", "type": "PackageId", "declarator": "packageId", "var_name": "packageId"}, {"original_string": "private final ImportOptions optionsDelegate;", "modifier": "private final", "type": "ImportOptions", "declarator": "optionsDelegate", "var_name": "optionsDelegate"}, {"original_string": "private final Class<? extends InstallHookProcessor> internalInstallHookProcessorClazz;", "modifier": "private final", "type": "Class<? extends InstallHookProcessor>", "declarator": "internalInstallHookProcessorClazz", "var_name": "internalInstallHookProcessorClazz"}, {"original_string": "private InstallHookProcessorFactory installHookProcessorFactoryDelegate;", "modifier": "private", "type": "InstallHookProcessorFactory", "declarator": "installHookProcessorFactoryDelegate", "var_name": "installHookProcessorFactoryDelegate"}, {"original_string": "private InstallHookPolicy installHookPolicy;", "modifier": "private", "type": "InstallHookPolicy", "declarator": "installHookPolicy", "var_name": "installHookPolicy"}, {"original_string": "private ErrorListener violationReporter;", "modifier": "private", "type": "ErrorListener", "declarator": "violationReporter", "var_name": "violationReporter"}], "methods": [{"identifier": "InternalImportOptions", "parameters": "(final @NotNull PackageId packageId, final @NotNull ClassLoader implClassLoader)", "modifiers": "", "return": "", "signature": " InternalImportOptions(final @NotNull PackageId packageId, final @NotNull ClassLoader implClassLoader)", "full_signature": "  InternalImportOptions(final @NotNull PackageId packageId, final @NotNull ClassLoader implClassLoader)", "class_method_signature": "InternalImportOptions.InternalImportOptions(final @NotNull PackageId packageId, final @NotNull ClassLoader implClassLoader)", "testcase": false, "constructor": true}, {"identifier": "InternalImportOptions", "parameters": "(final @NotNull PackageId packageId,\n                          final @Nullable ImportOptions optionsDelegate,\n                          final @Nullable Class<? extends InstallHookProcessor> internalInstallHookProcessorClazz)", "modifiers": "", "return": "", "signature": " InternalImportOptions(final @NotNull PackageId packageId,\n                          final @Nullable ImportOptions optionsDelegate,\n                          final @Nullable Class<? extends InstallHookProcessor> internalInstallHookProcessorClazz)", "full_signature": "  InternalImportOptions(final @NotNull PackageId packageId,\n                          final @Nullable ImportOptions optionsDelegate,\n                          final @Nullable Class<? extends InstallHookProcessor> internalInstallHookProcessorClazz)", "class_method_signature": "InternalImportOptions.InternalImportOptions(final @NotNull PackageId packageId,\n                          final @Nullable ImportOptions optionsDelegate,\n                          final @Nullable Class<? extends InstallHookProcessor> internalInstallHookProcessorClazz)", "testcase": false, "constructor": true}, {"identifier": "createInstallHookProcessor", "parameters": "()", "modifiers": "@Override public", "return": "InstallHookProcessor", "signature": "InstallHookProcessor createInstallHookProcessor()", "full_signature": "@Override public InstallHookProcessor createInstallHookProcessor()", "class_method_signature": "InternalImportOptions.createInstallHookProcessor()", "testcase": false, "constructor": false}, {"identifier": "isSkip", "parameters": "()", "modifiers": "", "return": "boolean", "signature": "boolean isSkip()", "full_signature": " boolean isSkip()", "class_method_signature": "InternalImportOptions.isSkip()", "testcase": false, "constructor": false}, {"identifier": "copy", "parameters": "()", "modifiers": "@Override public", "return": "ImportOptions", "signature": "ImportOptions copy()", "full_signature": "@Override public ImportOptions copy()", "class_method_signature": "InternalImportOptions.copy()", "testcase": false, "constructor": false}, {"identifier": "getInstallHookProcessorFactoryDelegate", "parameters": "()", "modifiers": "public", "return": "InstallHookProcessorFactory", "signature": "InstallHookProcessorFactory getInstallHookProcessorFactoryDelegate()", "full_signature": "public InstallHookProcessorFactory getInstallHookProcessorFactoryDelegate()", "class_method_signature": "InternalImportOptions.getInstallHookProcessorFactoryDelegate()", "testcase": false, "constructor": false}, {"identifier": "setInstallHookProcessorFactoryDelegate", "parameters": "(final InstallHookProcessorFactory installHookProcessorFactoryDelegate)", "modifiers": "public", "return": "void", "signature": "void setInstallHookProcessorFactoryDelegate(final InstallHookProcessorFactory installHookProcessorFactoryDelegate)", "full_signature": "public void setInstallHookProcessorFactoryDelegate(final InstallHookProcessorFactory installHookProcessorFactoryDelegate)", "class_method_signature": "InternalImportOptions.setInstallHookProcessorFactoryDelegate(final InstallHookProcessorFactory installHookProcessorFactoryDelegate)", "testcase": false, "constructor": false}, {"identifier": "getInstallHookPolicy", "parameters": "()", "modifiers": "public", "return": "InstallHookPolicy", "signature": "InstallHookPolicy getInstallHookPolicy()", "full_signature": "public InstallHookPolicy getInstallHookPolicy()", "class_method_signature": "InternalImportOptions.getInstallHookPolicy()", "testcase": false, "constructor": false}, {"identifier": "setInstallHookPolicy", "parameters": "(final InstallHookPolicy installHookPolicy)", "modifiers": "public", "return": "void", "signature": "void setInstallHookPolicy(final InstallHookPolicy installHookPolicy)", "full_signature": "public void setInstallHookPolicy(final InstallHookPolicy installHookPolicy)", "class_method_signature": "InternalImportOptions.setInstallHookPolicy(final InstallHookPolicy installHookPolicy)", "testcase": false, "constructor": false}, {"identifier": "getViolationReporter", "parameters": "()", "modifiers": "public", "return": "ErrorListener", "signature": "ErrorListener getViolationReporter()", "full_signature": "public ErrorListener getViolationReporter()", "class_method_signature": "InternalImportOptions.getViolationReporter()", "testcase": false, "constructor": false}, {"identifier": "setViolationReporter", "parameters": "(final ErrorListener violationReporter)", "modifiers": "public", "return": "void", "signature": "void setViolationReporter(final ErrorListener violationReporter)", "full_signature": "public void setViolationReporter(final ErrorListener violationReporter)", "class_method_signature": "InternalImportOptions.setViolationReporter(final ErrorListener violationReporter)", "testcase": false, "constructor": false}, {"identifier": "isStrict", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isStrict()", "full_signature": "@Override public boolean isStrict()", "class_method_signature": "InternalImportOptions.isStrict()", "testcase": false, "constructor": false}, {"identifier": "setStrict", "parameters": "(final boolean strict)", "modifiers": "@Override public", "return": "void", "signature": "void setStrict(final boolean strict)", "full_signature": "@Override public void setStrict(final boolean strict)", "class_method_signature": "InternalImportOptions.setStrict(final boolean strict)", "testcase": false, "constructor": false}, {"identifier": "getListener", "parameters": "()", "modifiers": "@Override public", "return": "ProgressTrackerListener", "signature": "ProgressTrackerListener getListener()", "full_signature": "@Override public ProgressTrackerListener getListener()", "class_method_signature": "InternalImportOptions.getListener()", "testcase": false, "constructor": false}, {"identifier": "setListener", "parameters": "(final ProgressTrackerListener listener)", "modifiers": "@Override public", "return": "void", "signature": "void setListener(final ProgressTrackerListener listener)", "full_signature": "@Override public void setListener(final ProgressTrackerListener listener)", "class_method_signature": "InternalImportOptions.setListener(final ProgressTrackerListener listener)", "testcase": false, "constructor": false}, {"identifier": "getPatchParentPath", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getPatchParentPath()", "full_signature": "@Override public String getPatchParentPath()", "class_method_signature": "InternalImportOptions.getPatchParentPath()", "testcase": false, "constructor": false}, {"identifier": "setPatchParentPath", "parameters": "(final String patchParentPath)", "modifiers": "@Override public", "return": "void", "signature": "void setPatchParentPath(final String patchParentPath)", "full_signature": "@Override public void setPatchParentPath(final String patchParentPath)", "class_method_signature": "InternalImportOptions.setPatchParentPath(final String patchParentPath)", "testcase": false, "constructor": false}, {"identifier": "getPatchDirectory", "parameters": "()", "modifiers": "@Override public", "return": "File", "signature": "File getPatchDirectory()", "full_signature": "@Override public File getPatchDirectory()", "class_method_signature": "InternalImportOptions.getPatchDirectory()", "testcase": false, "constructor": false}, {"identifier": "setPatchDirectory", "parameters": "(final File patchDirectory)", "modifiers": "@Override public", "return": "void", "signature": "void setPatchDirectory(final File patchDirectory)", "full_signature": "@Override public void setPatchDirectory(final File patchDirectory)", "class_method_signature": "InternalImportOptions.setPatchDirectory(final File patchDirectory)", "testcase": false, "constructor": false}, {"identifier": "isPatchKeepInRepo", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isPatchKeepInRepo()", "full_signature": "@Override public boolean isPatchKeepInRepo()", "class_method_signature": "InternalImportOptions.isPatchKeepInRepo()", "testcase": false, "constructor": false}, {"identifier": "setPatchKeepInRepo", "parameters": "(final boolean patchKeepInRepo)", "modifiers": "@Override public", "return": "void", "signature": "void setPatchKeepInRepo(final boolean patchKeepInRepo)", "full_signature": "@Override public void setPatchKeepInRepo(final boolean patchKeepInRepo)", "class_method_signature": "InternalImportOptions.setPatchKeepInRepo(final boolean patchKeepInRepo)", "testcase": false, "constructor": false}, {"identifier": "getAccessControlHandling", "parameters": "()", "modifiers": "@Override public", "return": "AccessControlHandling", "signature": "AccessControlHandling getAccessControlHandling()", "full_signature": "@Override public AccessControlHandling getAccessControlHandling()", "class_method_signature": "InternalImportOptions.getAccessControlHandling()", "testcase": false, "constructor": false}, {"identifier": "setAccessControlHandling", "parameters": "(final AccessControlHandling acHandling)", "modifiers": "@Override public", "return": "void", "signature": "void setAccessControlHandling(final AccessControlHandling acHandling)", "full_signature": "@Override public void setAccessControlHandling(final AccessControlHandling acHandling)", "class_method_signature": "InternalImportOptions.setAccessControlHandling(final AccessControlHandling acHandling)", "testcase": false, "constructor": false}, {"identifier": "isNonRecursive", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isNonRecursive()", "full_signature": "@Override public boolean isNonRecursive()", "class_method_signature": "InternalImportOptions.isNonRecursive()", "testcase": false, "constructor": false}, {"identifier": "setNonRecursive", "parameters": "(final boolean nonRecursive)", "modifiers": "@Override public", "return": "void", "signature": "void setNonRecursive(final boolean nonRecursive)", "full_signature": "@Override public void setNonRecursive(final boolean nonRecursive)", "class_method_signature": "InternalImportOptions.setNonRecursive(final boolean nonRecursive)", "testcase": false, "constructor": false}, {"identifier": "getCndPattern", "parameters": "()", "modifiers": "@Override public", "return": "Pattern", "signature": "Pattern getCndPattern()", "full_signature": "@Override public Pattern getCndPattern()", "class_method_signature": "InternalImportOptions.getCndPattern()", "testcase": false, "constructor": false}, {"identifier": "setCndPattern", "parameters": "(final String cndPattern)", "modifiers": "@Override public", "return": "void", "signature": "void setCndPattern(final String cndPattern)", "full_signature": "@Override public void setCndPattern(final String cndPattern)", "class_method_signature": "InternalImportOptions.setCndPattern(final String cndPattern)", "testcase": false, "constructor": false}, {"identifier": "isDryRun", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isDryRun()", "full_signature": "@Override public boolean isDryRun()", "class_method_signature": "InternalImportOptions.isDryRun()", "testcase": false, "constructor": false}, {"identifier": "setDryRun", "parameters": "(final boolean dryRun)", "modifiers": "@Override public", "return": "void", "signature": "void setDryRun(final boolean dryRun)", "full_signature": "@Override public void setDryRun(final boolean dryRun)", "class_method_signature": "InternalImportOptions.setDryRun(final boolean dryRun)", "testcase": false, "constructor": false}, {"identifier": "setAutoSaveThreshold", "parameters": "(final int threshold)", "modifiers": "@Override public", "return": "void", "signature": "void setAutoSaveThreshold(final int threshold)", "full_signature": "@Override public void setAutoSaveThreshold(final int threshold)", "class_method_signature": "InternalImportOptions.setAutoSaveThreshold(final int threshold)", "testcase": false, "constructor": false}, {"identifier": "getAutoSaveThreshold", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int getAutoSaveThreshold()", "full_signature": "@Override public int getAutoSaveThreshold()", "class_method_signature": "InternalImportOptions.getAutoSaveThreshold()", "testcase": false, "constructor": false}, {"identifier": "getImportMode", "parameters": "()", "modifiers": "@Override public", "return": "ImportMode", "signature": "ImportMode getImportMode()", "full_signature": "@Override public ImportMode getImportMode()", "class_method_signature": "InternalImportOptions.getImportMode()", "testcase": false, "constructor": false}, {"identifier": "setImportMode", "parameters": "(final ImportMode importMode)", "modifiers": "@Override public", "return": "void", "signature": "void setImportMode(final ImportMode importMode)", "full_signature": "@Override public void setImportMode(final ImportMode importMode)", "class_method_signature": "InternalImportOptions.setImportMode(final ImportMode importMode)", "testcase": false, "constructor": false}, {"identifier": "getFilter", "parameters": "()", "modifiers": "@Override public", "return": "WorkspaceFilter", "signature": "WorkspaceFilter getFilter()", "full_signature": "@Override public WorkspaceFilter getFilter()", "class_method_signature": "InternalImportOptions.getFilter()", "testcase": false, "constructor": false}, {"identifier": "setFilter", "parameters": "(final WorkspaceFilter filter)", "modifiers": "@Override public", "return": "void", "signature": "void setFilter(final WorkspaceFilter filter)", "full_signature": "@Override public void setFilter(final WorkspaceFilter filter)", "class_method_signature": "InternalImportOptions.setFilter(final WorkspaceFilter filter)", "testcase": false, "constructor": false}, {"identifier": "getHookClassLoader", "parameters": "()", "modifiers": "@Override public", "return": "ClassLoader", "signature": "ClassLoader getHookClassLoader()", "full_signature": "@Override public ClassLoader getHookClassLoader()", "class_method_signature": "InternalImportOptions.getHookClassLoader()", "testcase": false, "constructor": false}, {"identifier": "setHookClassLoader", "parameters": "(final ClassLoader hookClassLoader)", "modifiers": "@Override public", "return": "void", "signature": "void setHookClassLoader(final ClassLoader hookClassLoader)", "full_signature": "@Override public void setHookClassLoader(final ClassLoader hookClassLoader)", "class_method_signature": "InternalImportOptions.setHookClassLoader(final ClassLoader hookClassLoader)", "testcase": false, "constructor": false}, {"identifier": "getPathMapping", "parameters": "()", "modifiers": "@Override public", "return": "PathMapping", "signature": "PathMapping getPathMapping()", "full_signature": "@Override public PathMapping getPathMapping()", "class_method_signature": "InternalImportOptions.getPathMapping()", "testcase": false, "constructor": false}, {"identifier": "setPathMapping", "parameters": "(final PathMapping pathMapping)", "modifiers": "@Override public", "return": "void", "signature": "void setPathMapping(final PathMapping pathMapping)", "full_signature": "@Override public void setPathMapping(final PathMapping pathMapping)", "class_method_signature": "InternalImportOptions.setPathMapping(final PathMapping pathMapping)", "testcase": false, "constructor": false}, {"identifier": "getDependencyHandling", "parameters": "()", "modifiers": "@Override public", "return": "DependencyHandling", "signature": "DependencyHandling getDependencyHandling()", "full_signature": "@Override public DependencyHandling getDependencyHandling()", "class_method_signature": "InternalImportOptions.getDependencyHandling()", "testcase": false, "constructor": false}, {"identifier": "setDependencyHandling", "parameters": "(final DependencyHandling dependencyHandling)", "modifiers": "@Override public", "return": "void", "signature": "void setDependencyHandling(final DependencyHandling dependencyHandling)", "full_signature": "@Override public void setDependencyHandling(final DependencyHandling dependencyHandling)", "class_method_signature": "InternalImportOptions.setDependencyHandling(final DependencyHandling dependencyHandling)", "testcase": false, "constructor": false}], "file": "core/src/main/java/net/adamcin/oakpal/core/InternalImportOptions.java"}, "focal_method": {"identifier": "setFilter", "parameters": "(final WorkspaceFilter filter)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void setFilter(final WorkspaceFilter filter) {\n        optionsDelegate.setFilter(filter);\n    }", "signature": "void setFilter(final WorkspaceFilter filter)", "full_signature": "@Override public void setFilter(final WorkspaceFilter filter)", "class_method_signature": "InternalImportOptions.setFilter(final WorkspaceFilter filter)", "testcase": false, "constructor": false, "invocations": ["setFilter"]}, "repository": {"repo_id": 155883728, "url": "https://github.com/adamcin/oakpal", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 6, "size": 13349, "license": "licensed"}}