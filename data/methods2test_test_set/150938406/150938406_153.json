{"test_class": {"identifier": "EvaluationUtilTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Rule\n\tpublic ExpectedException thrown = ExpectedException.none();", "modifier": "@Rule\n\tpublic", "type": "ExpectedException", "declarator": "thrown = ExpectedException.none()", "var_name": "thrown"}], "file": "core/src/test/java/com/alibaba/alink/operator/common/evaluation/EvaluationUtilTest.java"}, "test_case": {"identifier": "testException1", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testException1(){\n\t\tthrown.expect(RuntimeException.class);\n\t\tthrown.expectMessage(\"Fail to deserialize detail column a, b, c!\");\n\t\tEvaluationUtil.extractLabelProbMap(Row.of(null, \"a, b, c\"), Types.LONG);\n\t}", "signature": "void testException1()", "full_signature": "@Test public void testException1()", "class_method_signature": "EvaluationUtilTest.testException1()", "testcase": true, "constructor": false, "invocations": ["expect", "expectMessage", "extractLabelProbMap", "of"]}, "focal_class": {"identifier": "EvaluationUtil", "superclass": "", "interfaces": "implements Serializable", "fields": [{"original_string": "private static double LOG_LOSS_EPS = 1e-15;", "modifier": "private static", "type": "double", "declarator": "LOG_LOSS_EPS = 1e-15", "var_name": "LOG_LOSS_EPS"}, {"original_string": "private static double PROB_SUM_EPS = 0.01;", "modifier": "private static", "type": "double", "declarator": "PROB_SUM_EPS = 0.01", "var_name": "PROB_SUM_EPS"}], "methods": [{"identifier": "labelCompare", "parameters": "(Object label1, Object label2, TypeInformation type)", "modifiers": "public static", "return": "boolean", "signature": "boolean labelCompare(Object label1, Object label2, TypeInformation type)", "full_signature": "public static boolean labelCompare(Object label1, Object label2, TypeInformation type)", "class_method_signature": "EvaluationUtil.labelCompare(Object label1, Object label2, TypeInformation type)", "testcase": false, "constructor": false}, {"identifier": "compare", "parameters": "(Object o1, Object o2)", "modifiers": "public static", "return": "int", "signature": "int compare(Object o1, Object o2)", "full_signature": "public static int compare(Object o1, Object o2)", "class_method_signature": "EvaluationUtil.compare(Object o1, Object o2)", "testcase": false, "constructor": false}, {"identifier": "castTo", "parameters": "(Object x, TypeInformation t)", "modifiers": "public static", "return": "Object", "signature": "Object castTo(Object x, TypeInformation t)", "full_signature": "public static Object castTo(Object x, TypeInformation t)", "class_method_signature": "EvaluationUtil.castTo(Object x, TypeInformation t)", "testcase": false, "constructor": false}, {"identifier": "getDetailStatistics", "parameters": "(Iterable<Row> rows, String positiveValue, boolean binary, TypeInformation labelType)", "modifiers": "public static", "return": "BaseMetricsSummary", "signature": "BaseMetricsSummary getDetailStatistics(Iterable<Row> rows, String positiveValue, boolean binary, TypeInformation labelType)", "full_signature": "public static BaseMetricsSummary getDetailStatistics(Iterable<Row> rows, String positiveValue, boolean binary, TypeInformation labelType)", "class_method_signature": "EvaluationUtil.getDetailStatistics(Iterable<Row> rows, String positiveValue, boolean binary, TypeInformation labelType)", "testcase": false, "constructor": false}, {"identifier": "getDetailStatistics", "parameters": "(Iterable<Row> rows,\n                                                         boolean binary,\n                                                         Tuple2<Map<Object, Integer>, Object[]> labels,\n                                                         TypeInformation labelType)", "modifiers": "public static", "return": "BaseMetricsSummary", "signature": "BaseMetricsSummary getDetailStatistics(Iterable<Row> rows,\n                                                         boolean binary,\n                                                         Tuple2<Map<Object, Integer>, Object[]> labels,\n                                                         TypeInformation labelType)", "full_signature": "public static BaseMetricsSummary getDetailStatistics(Iterable<Row> rows,\n                                                         boolean binary,\n                                                         Tuple2<Map<Object, Integer>, Object[]> labels,\n                                                         TypeInformation labelType)", "class_method_signature": "EvaluationUtil.getDetailStatistics(Iterable<Row> rows,\n                                                         boolean binary,\n                                                         Tuple2<Map<Object, Integer>, Object[]> labels,\n                                                         TypeInformation labelType)", "testcase": false, "constructor": false}, {"identifier": "getDetailStatistics", "parameters": "(Iterable<Row> rows,\n                                                          String positiveValue,\n                                                          boolean binary,\n                                                          Tuple2<Map<Object, Integer>, Object[]> tuple,\n                                                          TypeInformation labelType)", "modifiers": "private static", "return": "BaseMetricsSummary", "signature": "BaseMetricsSummary getDetailStatistics(Iterable<Row> rows,\n                                                          String positiveValue,\n                                                          boolean binary,\n                                                          Tuple2<Map<Object, Integer>, Object[]> tuple,\n                                                          TypeInformation labelType)", "full_signature": "private static BaseMetricsSummary getDetailStatistics(Iterable<Row> rows,\n                                                          String positiveValue,\n                                                          boolean binary,\n                                                          Tuple2<Map<Object, Integer>, Object[]> tuple,\n                                                          TypeInformation labelType)", "class_method_signature": "EvaluationUtil.getDetailStatistics(Iterable<Row> rows,\n                                                          String positiveValue,\n                                                          boolean binary,\n                                                          Tuple2<Map<Object, Integer>, Object[]> tuple,\n                                                          TypeInformation labelType)", "testcase": false, "constructor": false}, {"identifier": "checkRowFieldNotNull", "parameters": "(Row row)", "modifiers": "public static", "return": "boolean", "signature": "boolean checkRowFieldNotNull(Row row)", "full_signature": "public static boolean checkRowFieldNotNull(Row row)", "class_method_signature": "EvaluationUtil.checkRowFieldNotNull(Row row)", "testcase": false, "constructor": false}, {"identifier": "extractLogloss", "parameters": "(TreeMap<Object, Double> labelProbMap, Object label)", "modifiers": "public static", "return": "double", "signature": "double extractLogloss(TreeMap<Object, Double> labelProbMap, Object label)", "full_signature": "public static double extractLogloss(TreeMap<Object, Double> labelProbMap, Object label)", "class_method_signature": "EvaluationUtil.extractLogloss(TreeMap<Object, Double> labelProbMap, Object label)", "testcase": false, "constructor": false}, {"identifier": "extractLabelProbMap", "parameters": "(Row row, TypeInformation labelType)", "modifiers": "public static", "return": "TreeMap<Object, Double>", "signature": "TreeMap<Object, Double> extractLabelProbMap(Row row, TypeInformation labelType)", "full_signature": "public static TreeMap<Object, Double> extractLabelProbMap(Row row, TypeInformation labelType)", "class_method_signature": "EvaluationUtil.extractLabelProbMap(Row row, TypeInformation labelType)", "testcase": false, "constructor": false}, {"identifier": "updateBinaryMetricsSummary", "parameters": "(TreeMap<Object, Double> labelProbMap,\n                                                  Object label,\n                                                  BinaryMetricsSummary binaryMetricsSummary)", "modifiers": "public static", "return": "void", "signature": "void updateBinaryMetricsSummary(TreeMap<Object, Double> labelProbMap,\n                                                  Object label,\n                                                  BinaryMetricsSummary binaryMetricsSummary)", "full_signature": "public static void updateBinaryMetricsSummary(TreeMap<Object, Double> labelProbMap,\n                                                  Object label,\n                                                  BinaryMetricsSummary binaryMetricsSummary)", "class_method_signature": "EvaluationUtil.updateBinaryMetricsSummary(TreeMap<Object, Double> labelProbMap,\n                                                  Object label,\n                                                  BinaryMetricsSummary binaryMetricsSummary)", "testcase": false, "constructor": false}, {"identifier": "updateMultiMetricsSummary", "parameters": "(TreeMap<Object, Double> labelProbMap,\n                                                 Object label,\n                                                 Map<Object, Integer> labels,\n                                                 MultiMetricsSummary multiMetricsSummary)", "modifiers": "public static", "return": "void", "signature": "void updateMultiMetricsSummary(TreeMap<Object, Double> labelProbMap,\n                                                 Object label,\n                                                 Map<Object, Integer> labels,\n                                                 MultiMetricsSummary multiMetricsSummary)", "full_signature": "public static void updateMultiMetricsSummary(TreeMap<Object, Double> labelProbMap,\n                                                 Object label,\n                                                 Map<Object, Integer> labels,\n                                                 MultiMetricsSummary multiMetricsSummary)", "class_method_signature": "EvaluationUtil.updateMultiMetricsSummary(TreeMap<Object, Double> labelProbMap,\n                                                 Object label,\n                                                 Map<Object, Integer> labels,\n                                                 MultiMetricsSummary multiMetricsSummary)", "testcase": false, "constructor": false}, {"identifier": "getRegressionStatistics", "parameters": "(Iterable<Row> rows)", "modifiers": "public static", "return": "RegressionMetricsSummary", "signature": "RegressionMetricsSummary getRegressionStatistics(Iterable<Row> rows)", "full_signature": "public static RegressionMetricsSummary getRegressionStatistics(Iterable<Row> rows)", "class_method_signature": "EvaluationUtil.getRegressionStatistics(Iterable<Row> rows)", "testcase": false, "constructor": false}, {"identifier": "getMultiClassMetrics", "parameters": "(Iterable<Row> rows,\n                                                           Tuple2<Map<Object, Integer>, Object[]>\n                                                               labelIndexLabelArray)", "modifiers": "public static", "return": "MultiMetricsSummary", "signature": "MultiMetricsSummary getMultiClassMetrics(Iterable<Row> rows,\n                                                           Tuple2<Map<Object, Integer>, Object[]>\n                                                               labelIndexLabelArray)", "full_signature": "public static MultiMetricsSummary getMultiClassMetrics(Iterable<Row> rows,\n                                                           Tuple2<Map<Object, Integer>, Object[]>\n                                                               labelIndexLabelArray)", "class_method_signature": "EvaluationUtil.getMultiClassMetrics(Iterable<Row> rows,\n                                                           Tuple2<Map<Object, Integer>, Object[]>\n                                                               labelIndexLabelArray)", "testcase": false, "constructor": false}], "file": "core/src/main/java/com/alibaba/alink/operator/common/evaluation/EvaluationUtil.java"}, "focal_method": {"identifier": "extractLabelProbMap", "parameters": "(Row row, TypeInformation labelType)", "modifiers": "public static", "return": "TreeMap<Object, Double>", "body": "public static TreeMap<Object, Double> extractLabelProbMap(Row row, TypeInformation labelType) {\n        HashMap<String, Double> labelProbMap;\n        final String detailStr = row.getField(1).toString();\n        try {\n            labelProbMap = JsonConverter.fromJson(detailStr,\n                new TypeReference<HashMap<String, Double>>() {}.getType());\n        } catch (Exception e) {\n            throw new RuntimeException(\n                String.format(\"Fail to deserialize detail column %s!\", detailStr));\n        }\n        Collection<Double> probabilities = labelProbMap.values();\n        probabilities.forEach(v ->\n            Preconditions.checkArgument(v <= 1.0 && v >= 0,\n                String.format(\"Probibality in %s not in range [0, 1]!\", detailStr)));\n        Preconditions.checkArgument(\n            Math.abs(probabilities.stream().mapToDouble(Double::doubleValue).sum() - 1.0) < PROB_SUM_EPS,\n            String.format(\"Probability sum in %s not equal to 1.0!\", detailStr));\n        TreeMap<Object, Double> castLabelProbMap = new TreeMap<>();\n        for(Map.Entry<String, Double> entry : labelProbMap.entrySet()){\n            castLabelProbMap.put(castTo(entry.getKey(), labelType), entry.getValue());\n        }\n        return castLabelProbMap;\n    }", "signature": "TreeMap<Object, Double> extractLabelProbMap(Row row, TypeInformation labelType)", "full_signature": "public static TreeMap<Object, Double> extractLabelProbMap(Row row, TypeInformation labelType)", "class_method_signature": "EvaluationUtil.extractLabelProbMap(Row row, TypeInformation labelType)", "testcase": false, "constructor": false, "invocations": ["toString", "getField", "fromJson", "getType", "format", "values", "forEach", "checkArgument", "format", "checkArgument", "abs", "sum", "mapToDouble", "stream", "format", "entrySet", "put", "castTo", "getKey", "getValue"]}, "repository": {"repo_id": 150938406, "url": "https://github.com/alibaba/Alink", "stars": 1923, "created": "9/30/2018 6:36:11 AM +00:00", "updates": "2020-01-27T10:24:34+00:00", "fork": "False", "license": "licensed"}}