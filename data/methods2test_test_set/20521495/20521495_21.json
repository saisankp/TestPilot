{"test_class": {"identifier": "StreamStatusMetricServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(StreamStatusMetricServiceTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(StreamStatusMetricServiceTest.class)", "var_name": "LOGGER"}, {"original_string": "private StreamStatusMetricService service;", "modifier": "private", "type": "StreamStatusMetricService", "declarator": "service", "var_name": "service"}], "file": "engine/src/test/java/com/stratio/decision/service/StreamStatusMetricServiceTest.java"}, "test_case": {"identifier": "testGetStreamNames", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetStreamNames() throws Exception {\n        List<String> listNames= service.getStreamNames();\n\n        assertTrue(\"Expected true not found\", listNames.contains(StreamsHelper.STREAM_NAME));\n        assertTrue(\"Expected true not found\", listNames.contains(StreamsHelper.STREAM_NAME2));\n    }", "signature": "void testGetStreamNames()", "full_signature": "@Test public void testGetStreamNames()", "class_method_signature": "StreamStatusMetricServiceTest.testGetStreamNames()", "testcase": true, "constructor": false, "invocations": ["getStreamNames", "assertTrue", "contains", "assertTrue", "contains"]}, "focal_class": {"identifier": "StreamStatusMetricService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private final StreamStatusDao streamStatusDao;", "modifier": "private final", "type": "StreamStatusDao", "declarator": "streamStatusDao", "var_name": "streamStatusDao"}], "methods": [{"identifier": "StreamStatusMetricService", "parameters": "(StreamStatusDao streamStatusDao)", "modifiers": "public", "return": "", "signature": " StreamStatusMetricService(StreamStatusDao streamStatusDao)", "full_signature": "public  StreamStatusMetricService(StreamStatusDao streamStatusDao)", "class_method_signature": "StreamStatusMetricService.StreamStatusMetricService(StreamStatusDao streamStatusDao)", "testcase": false, "constructor": true}, {"identifier": "getTotalStreams", "parameters": "()", "modifiers": "@CachedGauge(absolute = true, name = \"streams.count\", timeout = 30, timeoutUnit = TimeUnit.SECONDS) public", "return": "int", "signature": "int getTotalStreams()", "full_signature": "@CachedGauge(absolute = true, name = \"streams.count\", timeout = 30, timeoutUnit = TimeUnit.SECONDS) public int getTotalStreams()", "class_method_signature": "StreamStatusMetricService.getTotalStreams()", "testcase": false, "constructor": false}, {"identifier": "getStreamNames", "parameters": "()", "modifiers": "@CachedGauge(absolute = true, name = \"streams.names\", timeout = 30, timeoutUnit = TimeUnit.SECONDS) public", "return": "List<String>", "signature": "List<String> getStreamNames()", "full_signature": "@CachedGauge(absolute = true, name = \"streams.names\", timeout = 30, timeoutUnit = TimeUnit.SECONDS) public List<String> getStreamNames()", "class_method_signature": "StreamStatusMetricService.getStreamNames()", "testcase": false, "constructor": false}, {"identifier": "getStreamActions", "parameters": "()", "modifiers": "@CachedGauge(absolute = true, name = \"streams.actions\", timeout = 30, timeoutUnit = TimeUnit.SECONDS) public", "return": "Map<String, String>", "signature": "Map<String, String> getStreamActions()", "full_signature": "@CachedGauge(absolute = true, name = \"streams.actions\", timeout = 30, timeoutUnit = TimeUnit.SECONDS) public Map<String, String> getStreamActions()", "class_method_signature": "StreamStatusMetricService.getStreamActions()", "testcase": false, "constructor": false}], "file": "engine/src/main/java/com/stratio/decision/service/StreamStatusMetricService.java"}, "focal_method": {"identifier": "getStreamNames", "parameters": "()", "modifiers": "@CachedGauge(absolute = true, name = \"streams.names\", timeout = 30, timeoutUnit = TimeUnit.SECONDS) public", "return": "List<String>", "body": "@CachedGauge(absolute = true, name = \"streams.names\", timeout = 30, timeoutUnit = TimeUnit.SECONDS)\n    public List<String> getStreamNames() {\n        Map<String, StreamStatusDTO> streams = streamStatusDao.getAll();\n        List<String> result = new ArrayList<>();\n        for (StreamStatusDTO stream : streams.values()) {\n            result.add(stream.getStreamName());\n        }\n        return result;\n    }", "signature": "List<String> getStreamNames()", "full_signature": "@CachedGauge(absolute = true, name = \"streams.names\", timeout = 30, timeoutUnit = TimeUnit.SECONDS) public List<String> getStreamNames()", "class_method_signature": "StreamStatusMetricService.getStreamNames()", "testcase": false, "constructor": false, "invocations": ["getAll", "values", "add", "getStreamName"]}, "repository": {"repo_id": 20521495, "url": "https://github.com/Stratio/Decision", "language": "Java", "is_fork": false, "fork_count": 85, "stargazer_count": 305, "size": 41858, "license": "licensed"}}