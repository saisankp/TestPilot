{"test_class": {"identifier": "SpinnerValuePropertyTest", "superclass": "", "interfaces": "", "fields": [], "file": "observable-ui/testSrc/com/android/tools/idea/observable/ui/SpinnerValuePropertyTest.java"}, "test_case": {"identifier": "testSliderValueProperty", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testSliderValueProperty() throws Exception {\n    JBIntSpinner spinner = new JBIntSpinner(111, Integer.MIN_VALUE, Integer.MAX_VALUE);\n    SpinnerValueProperty spinnerValue = new SpinnerValueProperty(spinner);\n    CountListener listener = new CountListener();\n    spinnerValue.addListener(listener);\n\n    assertThat(spinnerValue.get()).isEqualTo(111);\n    assertThat(listener.getCount()).isEqualTo(0);\n\n    spinner.setNumber(222);\n    assertThat(spinnerValue.get()).isEqualTo(222);\n    assertThat(listener.getCount()).isEqualTo(1);\n\n    spinner.setNumber(333);\n    assertThat(spinnerValue.get()).isEqualTo(333);\n    assertThat(listener.getCount()).isEqualTo(2);\n\n    spinnerValue.set(444);\n    assertThat(spinner.getValue()).isEqualTo(444);\n    assertThat(spinner.getNumber()).isEqualTo(444);\n    assertThat(listener.getCount()).isEqualTo(3);\n  }", "signature": "void testSliderValueProperty()", "full_signature": "@Test public void testSliderValueProperty()", "class_method_signature": "SpinnerValuePropertyTest.testSliderValueProperty()", "testcase": true, "constructor": false, "invocations": ["addListener", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "getCount", "setNumber", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "getCount", "setNumber", "isEqualTo", "assertThat", "get", "isEqualTo", "assertThat", "getCount", "set", "isEqualTo", "assertThat", "getValue", "isEqualTo", "assertThat", "getNumber", "isEqualTo", "assertThat", "getCount"]}, "focal_class": {"identifier": "SpinnerValueProperty", "superclass": "extends IntProperty", "interfaces": "implements ChangeListener", "fields": [{"original_string": "@NotNull private final JBIntSpinner mySpinner;", "modifier": "@NotNull private final", "type": "JBIntSpinner", "declarator": "mySpinner", "var_name": "mySpinner"}], "methods": [{"identifier": "SpinnerValueProperty", "parameters": "(@NotNull JBIntSpinner spinner)", "modifiers": "public", "return": "", "signature": " SpinnerValueProperty(@NotNull JBIntSpinner spinner)", "full_signature": "public  SpinnerValueProperty(@NotNull JBIntSpinner spinner)", "class_method_signature": "SpinnerValueProperty.SpinnerValueProperty(@NotNull JBIntSpinner spinner)", "testcase": false, "constructor": true}, {"identifier": "setDirectly", "parameters": "(@NotNull Integer value)", "modifiers": "@Override protected", "return": "void", "signature": "void setDirectly(@NotNull Integer value)", "full_signature": "@Override protected void setDirectly(@NotNull Integer value)", "class_method_signature": "SpinnerValueProperty.setDirectly(@NotNull Integer value)", "testcase": false, "constructor": false}, {"identifier": "stateChanged", "parameters": "(ChangeEvent e)", "modifiers": "@Override public", "return": "void", "signature": "void stateChanged(ChangeEvent e)", "full_signature": "@Override public void stateChanged(ChangeEvent e)", "class_method_signature": "SpinnerValueProperty.stateChanged(ChangeEvent e)", "testcase": false, "constructor": false}, {"identifier": "get", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "Integer", "signature": "Integer get()", "full_signature": "@NotNull @Override public Integer get()", "class_method_signature": "SpinnerValueProperty.get()", "testcase": false, "constructor": false}], "file": "observable-ui/src/com/android/tools/idea/observable/ui/SpinnerValueProperty.java"}, "focal_method": {"identifier": "get", "parameters": "()", "modifiers": "@NotNull @Override public", "return": "Integer", "body": "@NotNull\n  @Override\n  public Integer get() {\n    return mySpinner.getNumber();\n  }", "signature": "Integer get()", "full_signature": "@NotNull @Override public Integer get()", "class_method_signature": "SpinnerValueProperty.get()", "testcase": false, "constructor": false, "invocations": ["getNumber"]}, "repository": {"repo_id": 60701247, "url": "https://github.com/JetBrains/android", "stars": 486, "created": "6/8/2016 1:46:48 PM +00:00", "updates": "2020-01-27T16:45:40+00:00", "fork": "False", "license": "licensed"}}