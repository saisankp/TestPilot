{"test_class": {"identifier": "TracingHttpAsyncClientBuilderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock brave.Span span;", "modifier": "@Mock", "type": "brave.Span", "declarator": "span", "var_name": "span"}], "file": "instrumentation/httpasyncclient/src/test/java/brave/httpasyncclient/TracingHttpAsyncClientBuilderTest.java"}, "test_case": {"identifier": "parseTargetAddress_skipsOnNoop", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void parseTargetAddress_skipsOnNoop() {\n    when(span.isNoop()).thenReturn(true);\n\n    TracingHttpAsyncClientBuilder.parseTargetAddress(null, span);\n\n    verify(span).isNoop();\n    verifyNoMoreInteractions(span);\n  }", "signature": "void parseTargetAddress_skipsOnNoop()", "full_signature": "@Test public void parseTargetAddress_skipsOnNoop()", "class_method_signature": "TracingHttpAsyncClientBuilderTest.parseTargetAddress_skipsOnNoop()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "isNoop", "parseTargetAddress", "isNoop", "verify", "verifyNoMoreInteractions"]}, "focal_class": {"identifier": "TracingHttpAsyncClientBuilder", "superclass": "extends HttpAsyncClientBuilder", "interfaces": "", "fields": [{"original_string": "final CurrentTraceContext currentTraceContext;", "modifier": "final", "type": "CurrentTraceContext", "declarator": "currentTraceContext", "var_name": "currentTraceContext"}, {"original_string": "final HttpClientHandler<HttpClientRequest, HttpClientResponse> handler;", "modifier": "final", "type": "HttpClientHandler<HttpClientRequest, HttpClientResponse>", "declarator": "handler", "var_name": "handler"}], "methods": [{"identifier": "create", "parameters": "(Tracing tracing)", "modifiers": "public static", "return": "HttpAsyncClientBuilder", "signature": "HttpAsyncClientBuilder create(Tracing tracing)", "full_signature": "public static HttpAsyncClientBuilder create(Tracing tracing)", "class_method_signature": "TracingHttpAsyncClientBuilder.create(Tracing tracing)", "testcase": false, "constructor": false}, {"identifier": "create", "parameters": "(HttpTracing httpTracing)", "modifiers": "public static", "return": "HttpAsyncClientBuilder", "signature": "HttpAsyncClientBuilder create(HttpTracing httpTracing)", "full_signature": "public static HttpAsyncClientBuilder create(HttpTracing httpTracing)", "class_method_signature": "TracingHttpAsyncClientBuilder.create(HttpTracing httpTracing)", "testcase": false, "constructor": false}, {"identifier": "TracingHttpAsyncClientBuilder", "parameters": "(HttpTracing httpTracing)", "modifiers": "", "return": "", "signature": " TracingHttpAsyncClientBuilder(HttpTracing httpTracing)", "full_signature": "  TracingHttpAsyncClientBuilder(HttpTracing httpTracing)", "class_method_signature": "TracingHttpAsyncClientBuilder.TracingHttpAsyncClientBuilder(HttpTracing httpTracing)", "testcase": false, "constructor": true}, {"identifier": "build", "parameters": "()", "modifiers": "@Override public", "return": "CloseableHttpAsyncClient", "signature": "CloseableHttpAsyncClient build()", "full_signature": "@Override public CloseableHttpAsyncClient build()", "class_method_signature": "TracingHttpAsyncClientBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "removeScope", "parameters": "(HttpContext context)", "modifiers": "static", "return": "void", "signature": "void removeScope(HttpContext context)", "full_signature": "static void removeScope(HttpContext context)", "class_method_signature": "TracingHttpAsyncClientBuilder.removeScope(HttpContext context)", "testcase": false, "constructor": false}, {"identifier": "parseTargetAddress", "parameters": "(HttpHost target, Span span)", "modifiers": "static", "return": "void", "signature": "void parseTargetAddress(HttpHost target, Span span)", "full_signature": "static void parseTargetAddress(HttpHost target, Span span)", "class_method_signature": "TracingHttpAsyncClientBuilder.parseTargetAddress(HttpHost target, Span span)", "testcase": false, "constructor": false}], "file": "instrumentation/httpasyncclient/src/main/java/brave/httpasyncclient/TracingHttpAsyncClientBuilder.java"}, "focal_method": {"identifier": "parseTargetAddress", "parameters": "(HttpHost target, Span span)", "modifiers": "static", "return": "void", "body": "static void parseTargetAddress(HttpHost target, Span span) {\n    if (span.isNoop()) return;\n    if (target == null) return;\n    InetAddress address = target.getAddress();\n    if (address != null) {\n      if (span.remoteIpAndPort(address.getHostAddress(), target.getPort())) return;\n    }\n    span.remoteIpAndPort(target.getHostName(), target.getPort());\n  }", "signature": "void parseTargetAddress(HttpHost target, Span span)", "full_signature": "static void parseTargetAddress(HttpHost target, Span span)", "class_method_signature": "TracingHttpAsyncClientBuilder.parseTargetAddress(HttpHost target, Span span)", "testcase": false, "constructor": false, "invocations": ["isNoop", "getAddress", "remoteIpAndPort", "getHostAddress", "getPort", "remoteIpAndPort", "getHostName", "getPort"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}