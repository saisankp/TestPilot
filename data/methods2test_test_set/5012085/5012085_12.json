{"test_class": {"identifier": "TimeMillisValuePredicateTest", "superclass": "", "interfaces": "", "fields": [], "file": "netflix-infix/src/test/java/com/netflix/infix/TimeMillisValuePredicateTest.java"}, "test_case": {"identifier": "testInvalidFunctionNameShouldBeRejected", "parameters": "()", "modifiers": "@Test(expected=IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected=IllegalArgumentException.class)\n\tpublic void testInvalidFunctionNameShouldBeRejected() {\n\t\tString valueFormat = \"YYYY-MM-dd HH:mm:ss:SSS\"; \n\t\tlong now = new Date().getTime();\n\t\t\n\t\tnew TimeMillisValuePredicate(valueFormat, toString(now, valueFormat), \"~~\");\n\t}", "signature": "void testInvalidFunctionNameShouldBeRejected()", "full_signature": "@Test(expected=IllegalArgumentException.class) public void testInvalidFunctionNameShouldBeRejected()", "class_method_signature": "TimeMillisValuePredicateTest.testInvalidFunctionNameShouldBeRejected()", "testcase": true, "constructor": false, "invocations": ["getTime", "toString"]}, "focal_class": {"identifier": "TimeMillisValuePredicate", "superclass": "", "interfaces": "implements ValuePredicate<Long>", "fields": [{"original_string": "private String timeFormat;", "modifier": "private", "type": "String", "declarator": "timeFormat", "var_name": "timeFormat"}, {"original_string": "private String value;", "modifier": "private", "type": "String", "declarator": "value", "var_name": "value"}, {"original_string": "private String fnName;", "modifier": "private", "type": "String", "declarator": "fnName", "var_name": "fnName"}, {"original_string": "private NumericValuePredicate longPredicate;", "modifier": "private", "type": "NumericValuePredicate", "declarator": "longPredicate", "var_name": "longPredicate"}], "methods": [{"identifier": "TimeMillisValuePredicate", "parameters": "(String timeFormat, String value, String fnName)", "modifiers": "public", "return": "", "signature": " TimeMillisValuePredicate(String timeFormat, String value, String fnName)", "full_signature": "public  TimeMillisValuePredicate(String timeFormat, String value, String fnName)", "class_method_signature": "TimeMillisValuePredicate.TimeMillisValuePredicate(String timeFormat, String value, String fnName)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(@Nullable Long input)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean apply(@Nullable Long input)", "full_signature": "@Override public boolean apply(@Nullable Long input)", "class_method_signature": "TimeMillisValuePredicate.apply(@Nullable Long input)", "testcase": false, "constructor": false}, {"identifier": "getValue", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getValue()", "full_signature": "public String getValue()", "class_method_signature": "TimeMillisValuePredicate.getValue()", "testcase": false, "constructor": false}, {"identifier": "getTimeFormat", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getTimeFormat()", "full_signature": "public String getTimeFormat()", "class_method_signature": "TimeMillisValuePredicate.getTimeFormat()", "testcase": false, "constructor": false}, {"identifier": "getFnName", "parameters": "()", "modifiers": "", "return": "String", "signature": "String getFnName()", "full_signature": " String getFnName()", "class_method_signature": "TimeMillisValuePredicate.getFnName()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TimeMillisValuePredicate.toString()", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "TimeMillisValuePredicate.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "TimeMillisValuePredicate.equals(Object obj)", "testcase": false, "constructor": false}], "file": "netflix-infix/src/main/java/com/netflix/infix/TimeMillisValuePredicate.java"}, "focal_method": {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String toString() {\n\t    StringBuilder builder = new StringBuilder();\n\t    builder.append(\"TimeMillisValuePredicate [timeFormat=\");\n\t    builder.append(timeFormat);\n\t    builder.append(\", value=\");\n\t    builder.append(value);\n\t    builder.append(\", fnName=\");\n\t    builder.append(fnName);\n\t    builder.append(\", longPredicate=\");\n\t    builder.append(longPredicate);\n\t    builder.append(\"]\");\n\t    return builder.toString();\n    }", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "TimeMillisValuePredicate.toString()", "testcase": false, "constructor": false, "invocations": ["append", "append", "append", "append", "append", "append", "append", "append", "append", "toString"]}, "repository": {"repo_id": 5012085, "url": "https://github.com/Netflix/netflix-commons", "language": "Java", "is_fork": false, "fork_count": 74, "stargazer_count": 145, "size": 404, "license": "licensed"}}