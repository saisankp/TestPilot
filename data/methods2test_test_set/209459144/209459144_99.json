{"test_class": {"identifier": "ParamServiceTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ParamServiceTest.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ParamServiceTest.class)", "var_name": "LOG"}, {"original_string": "ParamService paramService = new ParamService();", "modifier": "", "type": "ParamService", "declarator": "paramService = new ParamService()", "var_name": "paramService"}], "file": "submarine-server/server-core/src/test/java/org/apache/submarine/server/workbench/database/service/ParamServiceTest.java"}, "test_case": {"identifier": "testUpdate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testUpdate() throws Exception {\n    Param param = new Param();\n    param.setId(\"test_application_1234\");\n    param.setKey(\"test_score\");\n    param.setValue(\"100\");\n    param.setWorkerIndex(\"test_worker-2\");\n    boolean result = paramService.insert(param);\n    assertTrue(result);\n\n    param.setKey(\"scoreNew\");\n    param.setValue(\"100\");\n    param.setWorkerIndex(\"worker-New\");\n    boolean editResult = paramService.update(param);\n    assertTrue(editResult);\n\n    Param paramDb2 = paramService.selectByPrimaryKeySelective(param).get(0);\n    compareParams(param, paramDb2);\n  }", "signature": "void testUpdate()", "full_signature": "@Test public void testUpdate()", "class_method_signature": "ParamServiceTest.testUpdate()", "testcase": true, "constructor": false, "invocations": ["setId", "setKey", "setValue", "setWorkerIndex", "insert", "assertTrue", "setKey", "setValue", "setWorkerIndex", "update", "assertTrue", "get", "selectByPrimaryKeySelective", "compareParams"]}, "focal_class": {"identifier": "ParamService", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(ParamService.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(ParamService.class)", "var_name": "LOG"}], "methods": [{"identifier": "selectAll", "parameters": "()", "modifiers": "public", "return": "List<Param>", "signature": "List<Param> selectAll()", "full_signature": "public List<Param> selectAll()", "class_method_signature": "ParamService.selectAll()", "testcase": false, "constructor": false}, {"identifier": "deleteById", "parameters": "(String id)", "modifiers": "public", "return": "boolean", "signature": "boolean deleteById(String id)", "full_signature": "public boolean deleteById(String id)", "class_method_signature": "ParamService.deleteById(String id)", "testcase": false, "constructor": false}, {"identifier": "insert", "parameters": "(Param param)", "modifiers": "public", "return": "boolean", "signature": "boolean insert(Param param)", "full_signature": "public boolean insert(Param param)", "class_method_signature": "ParamService.insert(Param param)", "testcase": false, "constructor": false}, {"identifier": "selectById", "parameters": "(String id)", "modifiers": "public", "return": "Param", "signature": "Param selectById(String id)", "full_signature": "public Param selectById(String id)", "class_method_signature": "ParamService.selectById(String id)", "testcase": false, "constructor": false}, {"identifier": "update", "parameters": "(Param param)", "modifiers": "public", "return": "boolean", "signature": "boolean update(Param param)", "full_signature": "public boolean update(Param param)", "class_method_signature": "ParamService.update(Param param)", "testcase": false, "constructor": false}, {"identifier": "selectByPrimaryKeySelective", "parameters": "(Param param)", "modifiers": "public", "return": "List<Param>", "signature": "List<Param> selectByPrimaryKeySelective(Param param)", "full_signature": "public List<Param> selectByPrimaryKeySelective(Param param)", "class_method_signature": "ParamService.selectByPrimaryKeySelective(Param param)", "testcase": false, "constructor": false}], "file": "submarine-server/server-core/src/main/java/org/apache/submarine/server/workbench/database/service/ParamService.java"}, "focal_method": {"identifier": "update", "parameters": "(Param param)", "modifiers": "public", "return": "boolean", "body": "public boolean update(Param param) throws Exception {\n    LOG.info(\"Param update {}\", param);\n\n    try (SqlSession sqlSession = MyBatisUtil.getSqlSession()) {\n      ParamMapper mapper = sqlSession.getMapper(ParamMapper.class);\n      mapper.update(param);\n      sqlSession.commit();\n    } catch (Exception e) {\n      LOG.error(e.getMessage(), e);\n      throw new Exception(e);\n    }\n    return true;\n  }", "signature": "boolean update(Param param)", "full_signature": "public boolean update(Param param)", "class_method_signature": "ParamService.update(Param param)", "testcase": false, "constructor": false, "invocations": ["info", "getSqlSession", "getMapper", "update", "commit", "error", "getMessage"]}, "repository": {"repo_id": 209459144, "url": "https://github.com/apache/submarine", "stars": 185, "created": "9/19/2019 4:00:17 AM +00:00", "updates": "2020-01-27T15:27:05+00:00", "fork": "False", "license": "licensed"}}