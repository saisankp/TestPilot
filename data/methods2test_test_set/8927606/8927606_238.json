{"test_class": {"identifier": "MiscTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@ClassRule\n    public static TemporaryFolder testFolder = new TemporaryFolder();", "modifier": "@ClassRule\n    public static", "type": "TemporaryFolder", "declarator": "testFolder = new TemporaryFolder()", "var_name": "testFolder"}, {"original_string": "private static String sourceFolderPath;", "modifier": "private static", "type": "String", "declarator": "sourceFolderPath", "var_name": "sourceFolderPath"}, {"original_string": "private static File file;", "modifier": "private static", "type": "File", "declarator": "file", "var_name": "file"}, {"original_string": "private String pathSeperator = File.separator;", "modifier": "private", "type": "String", "declarator": "pathSeperator = File.separator", "var_name": "pathSeperator"}], "file": "core/src/test/java/nl/nn/adapterframework/util/MiscTest.java"}, "test_case": {"identifier": "testHideForStringMode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHideForStringMode() throws Exception {\n        String a = \"test\";\n        String res = Misc.hide(a, 1);\n        assertEquals(\"t**t\", res);\n    }", "signature": "void testHideForStringMode()", "full_signature": "@Test public void testHideForStringMode()", "class_method_signature": "MiscTest.testHideForStringMode()", "testcase": true, "constructor": false, "invocations": ["hide", "assertEquals"]}, "focal_class": {"identifier": "Misc", "superclass": "", "interfaces": "", "fields": [{"original_string": "static Logger log = LogUtil.getLogger(Misc.class);", "modifier": "static", "type": "Logger", "declarator": "log = LogUtil.getLogger(Misc.class)", "var_name": "log"}, {"original_string": "public static final int BUFFERSIZE=20000;", "modifier": "public static final", "type": "int", "declarator": "BUFFERSIZE=20000", "var_name": "BUFFERSIZE"}, {"original_string": "public static final String DEFAULT_INPUT_STREAM_ENCODING=\"UTF-8\";", "modifier": "public static final", "type": "String", "declarator": "DEFAULT_INPUT_STREAM_ENCODING=\"UTF-8\"", "var_name": "DEFAULT_INPUT_STREAM_ENCODING"}, {"original_string": "public static final String MESSAGE_SIZE_WARN_BY_DEFAULT_KEY = \"message.size.warn.default\";", "modifier": "public static final", "type": "String", "declarator": "MESSAGE_SIZE_WARN_BY_DEFAULT_KEY = \"message.size.warn.default\"", "var_name": "MESSAGE_SIZE_WARN_BY_DEFAULT_KEY"}, {"original_string": "public static final String RESPONSE_BODY_SIZE_WARN_BY_DEFAULT_KEY = \"response.body.size.warn.default\";", "modifier": "public static final", "type": "String", "declarator": "RESPONSE_BODY_SIZE_WARN_BY_DEFAULT_KEY = \"response.body.size.warn.default\"", "var_name": "RESPONSE_BODY_SIZE_WARN_BY_DEFAULT_KEY"}, {"original_string": "public static final String FORCE_FIXED_FORWARDING_BY_DEFAULT_KEY = \"force.fixed.forwarding.default\";", "modifier": "public static final", "type": "String", "declarator": "FORCE_FIXED_FORWARDING_BY_DEFAULT_KEY = \"force.fixed.forwarding.default\"", "var_name": "FORCE_FIXED_FORWARDING_BY_DEFAULT_KEY"}, {"original_string": "private static Long messageSizeWarnByDefault = null;", "modifier": "private static", "type": "Long", "declarator": "messageSizeWarnByDefault = null", "var_name": "messageSizeWarnByDefault"}, {"original_string": "private static Long responseBodySizeWarnByDefault = null;", "modifier": "private static", "type": "Long", "declarator": "responseBodySizeWarnByDefault = null", "var_name": "responseBodySizeWarnByDefault"}, {"original_string": "private static Boolean forceFixedForwardingByDefault = null;", "modifier": "private static", "type": "Boolean", "declarator": "forceFixedForwardingByDefault = null", "var_name": "forceFixedForwardingByDefault"}, {"original_string": "private static final char[] HEX_CHARS = \"0123456789abcdef\".toCharArray();", "modifier": "private static final", "type": "char[]", "declarator": "HEX_CHARS = \"0123456789abcdef\".toCharArray()", "var_name": "HEX_CHARS"}], "methods": [{"identifier": "createSimpleUUID", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String createSimpleUUID()", "full_signature": "public static String createSimpleUUID()", "class_method_signature": "Misc.createSimpleUUID()", "testcase": false, "constructor": false}, {"identifier": "createUUID", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String createUUID()", "full_signature": "public static String createUUID()", "class_method_signature": "Misc.createUUID()", "testcase": false, "constructor": false}, {"identifier": "createRandomUUID", "parameters": "(boolean removeDashes)", "modifiers": "public static", "return": "String", "signature": "String createRandomUUID(boolean removeDashes)", "full_signature": "public static String createRandomUUID(boolean removeDashes)", "class_method_signature": "Misc.createRandomUUID(boolean removeDashes)", "testcase": false, "constructor": false}, {"identifier": "createRandomUUID", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String createRandomUUID()", "full_signature": "public static String createRandomUUID()", "class_method_signature": "Misc.createRandomUUID()", "testcase": false, "constructor": false}, {"identifier": "asHex", "parameters": "(byte[] buf)", "modifiers": "public static", "return": "String", "signature": "String asHex(byte[] buf)", "full_signature": "public static String asHex(byte[] buf)", "class_method_signature": "Misc.asHex(byte[] buf)", "testcase": false, "constructor": false}, {"identifier": "getIPAddress", "parameters": "()", "modifiers": "private static", "return": "byte[]", "signature": "byte[] getIPAddress()", "full_signature": "private static byte[] getIPAddress()", "class_method_signature": "Misc.getIPAddress()", "testcase": false, "constructor": false}, {"identifier": "createNumericUUID", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String createNumericUUID()", "full_signature": "public static String createNumericUUID()", "class_method_signature": "Misc.createNumericUUID()", "testcase": false, "constructor": false}, {"identifier": "unsignedByteToInt", "parameters": "(byte b)", "modifiers": "public static", "return": "int", "signature": "int unsignedByteToInt(byte b)", "full_signature": "public static int unsignedByteToInt(byte b)", "class_method_signature": "Misc.unsignedByteToInt(byte b)", "testcase": false, "constructor": false}, {"identifier": "getCurrentTimeMillis", "parameters": "()", "modifiers": "public static synchronized", "return": "long", "signature": "long getCurrentTimeMillis()", "full_signature": "public static synchronized long getCurrentTimeMillis()", "class_method_signature": "Misc.getCurrentTimeMillis()", "testcase": false, "constructor": false}, {"identifier": "fileToWriter", "parameters": "(String filename, Writer writer)", "modifiers": "public static", "return": "void", "signature": "void fileToWriter(String filename, Writer writer)", "full_signature": "public static void fileToWriter(String filename, Writer writer)", "class_method_signature": "Misc.fileToWriter(String filename, Writer writer)", "testcase": false, "constructor": false}, {"identifier": "fileToStream", "parameters": "(String filename, OutputStream output)", "modifiers": "public static", "return": "void", "signature": "void fileToStream(String filename, OutputStream output)", "full_signature": "public static void fileToStream(String filename, OutputStream output)", "class_method_signature": "Misc.fileToStream(String filename, OutputStream output)", "testcase": false, "constructor": false}, {"identifier": "streamToStream", "parameters": "(InputStream input, OutputStream output)", "modifiers": "public static", "return": "void", "signature": "void streamToStream(InputStream input, OutputStream output)", "full_signature": "public static void streamToStream(InputStream input, OutputStream output)", "class_method_signature": "Misc.streamToStream(InputStream input, OutputStream output)", "testcase": false, "constructor": false}, {"identifier": "streamToStream", "parameters": "(InputStream input, OutputStream output, boolean closeInput)", "modifiers": "public static", "return": "void", "signature": "void streamToStream(InputStream input, OutputStream output, boolean closeInput)", "full_signature": "public static void streamToStream(InputStream input, OutputStream output, boolean closeInput)", "class_method_signature": "Misc.streamToStream(InputStream input, OutputStream output, boolean closeInput)", "testcase": false, "constructor": false}, {"identifier": "streamToFile", "parameters": "(InputStream inputStream, File file)", "modifiers": "public static", "return": "void", "signature": "void streamToFile(InputStream inputStream, File file)", "full_signature": "public static void streamToFile(InputStream inputStream, File file)", "class_method_signature": "Misc.streamToFile(InputStream inputStream, File file)", "testcase": false, "constructor": false}, {"identifier": "streamToBytes", "parameters": "(InputStream inputStream)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] streamToBytes(InputStream inputStream)", "full_signature": "public static byte[] streamToBytes(InputStream inputStream)", "class_method_signature": "Misc.streamToBytes(InputStream inputStream)", "testcase": false, "constructor": false}, {"identifier": "readerToWriter", "parameters": "(Reader reader, Writer writer)", "modifiers": "public static", "return": "void", "signature": "void readerToWriter(Reader reader, Writer writer)", "full_signature": "public static void readerToWriter(Reader reader, Writer writer)", "class_method_signature": "Misc.readerToWriter(Reader reader, Writer writer)", "testcase": false, "constructor": false}, {"identifier": "readerToWriter", "parameters": "(Reader reader, Writer writer, boolean closeInput)", "modifiers": "public static", "return": "void", "signature": "void readerToWriter(Reader reader, Writer writer, boolean closeInput)", "full_signature": "public static void readerToWriter(Reader reader, Writer writer, boolean closeInput)", "class_method_signature": "Misc.readerToWriter(Reader reader, Writer writer, boolean closeInput)", "testcase": false, "constructor": false}, {"identifier": "fileToString", "parameters": "(String fileName)", "modifiers": "public static", "return": "String", "signature": "String fileToString(String fileName)", "full_signature": "public static String fileToString(String fileName)", "class_method_signature": "Misc.fileToString(String fileName)", "testcase": false, "constructor": false}, {"identifier": "fileToString", "parameters": "(String fileName, String endOfLineString)", "modifiers": "public static", "return": "String", "signature": "String fileToString(String fileName, String endOfLineString)", "full_signature": "public static String fileToString(String fileName, String endOfLineString)", "class_method_signature": "Misc.fileToString(String fileName, String endOfLineString)", "testcase": false, "constructor": false}, {"identifier": "fileToString", "parameters": "(String fileName, String endOfLineString, boolean xmlEncode)", "modifiers": "public static", "return": "String", "signature": "String fileToString(String fileName, String endOfLineString, boolean xmlEncode)", "full_signature": "public static String fileToString(String fileName, String endOfLineString, boolean xmlEncode)", "class_method_signature": "Misc.fileToString(String fileName, String endOfLineString, boolean xmlEncode)", "testcase": false, "constructor": false}, {"identifier": "readerToString", "parameters": "(Reader reader, String endOfLineString, boolean xmlEncode)", "modifiers": "public static", "return": "String", "signature": "String readerToString(Reader reader, String endOfLineString, boolean xmlEncode)", "full_signature": "public static String readerToString(Reader reader, String endOfLineString, boolean xmlEncode)", "class_method_signature": "Misc.readerToString(Reader reader, String endOfLineString, boolean xmlEncode)", "testcase": false, "constructor": false}, {"identifier": "streamToString", "parameters": "(InputStream stream)", "modifiers": "public static", "return": "String", "signature": "String streamToString(InputStream stream)", "full_signature": "public static String streamToString(InputStream stream)", "class_method_signature": "Misc.streamToString(InputStream stream)", "testcase": false, "constructor": false}, {"identifier": "streamToString", "parameters": "(InputStream stream, String streamEncoding)", "modifiers": "public static", "return": "String", "signature": "String streamToString(InputStream stream, String streamEncoding)", "full_signature": "public static String streamToString(InputStream stream, String streamEncoding)", "class_method_signature": "Misc.streamToString(InputStream stream, String streamEncoding)", "testcase": false, "constructor": false}, {"identifier": "streamToString", "parameters": "(InputStream stream, String endOfLineString, boolean xmlEncode)", "modifiers": "public static", "return": "String", "signature": "String streamToString(InputStream stream, String endOfLineString, boolean xmlEncode)", "full_signature": "public static String streamToString(InputStream stream, String endOfLineString, boolean xmlEncode)", "class_method_signature": "Misc.streamToString(InputStream stream, String endOfLineString, boolean xmlEncode)", "testcase": false, "constructor": false}, {"identifier": "streamToString", "parameters": "(InputStream stream, String endOfLineString, String streamEncoding, boolean xmlEncode)", "modifiers": "public static", "return": "String", "signature": "String streamToString(InputStream stream, String endOfLineString, String streamEncoding, boolean xmlEncode)", "full_signature": "public static String streamToString(InputStream stream, String endOfLineString, String streamEncoding, boolean xmlEncode)", "class_method_signature": "Misc.streamToString(InputStream stream, String endOfLineString, String streamEncoding, boolean xmlEncode)", "testcase": false, "constructor": false}, {"identifier": "resourceToString", "parameters": "(URL resource, String endOfLineString, boolean xmlEncode)", "modifiers": "public static", "return": "String", "signature": "String resourceToString(URL resource, String endOfLineString, boolean xmlEncode)", "full_signature": "public static String resourceToString(URL resource, String endOfLineString, boolean xmlEncode)", "class_method_signature": "Misc.resourceToString(URL resource, String endOfLineString, boolean xmlEncode)", "testcase": false, "constructor": false}, {"identifier": "resourceToString", "parameters": "(URL resource)", "modifiers": "public static", "return": "String", "signature": "String resourceToString(URL resource)", "full_signature": "public static String resourceToString(URL resource)", "class_method_signature": "Misc.resourceToString(URL resource)", "testcase": false, "constructor": false}, {"identifier": "resourceToString", "parameters": "(URL resource, String endOfLineString)", "modifiers": "public static", "return": "String", "signature": "String resourceToString(URL resource, String endOfLineString)", "full_signature": "public static String resourceToString(URL resource, String endOfLineString)", "class_method_signature": "Misc.resourceToString(URL resource, String endOfLineString)", "testcase": false, "constructor": false}, {"identifier": "stringToFile", "parameters": "(String string, String fileName)", "modifiers": "public static", "return": "void", "signature": "void stringToFile(String string, String fileName)", "full_signature": "public static void stringToFile(String string, String fileName)", "class_method_signature": "Misc.stringToFile(String string, String fileName)", "testcase": false, "constructor": false}, {"identifier": "replace", "parameters": "(String source, String from, String to)", "modifiers": "public static", "return": "String", "signature": "String replace(String source, String from, String to)", "full_signature": "public static String replace(String source, String from, String to)", "class_method_signature": "Misc.replace(String source, String from, String to)", "testcase": false, "constructor": false}, {"identifier": "concatStrings", "parameters": "(String part1, String separator, String part2)", "modifiers": "public static", "return": "String", "signature": "String concatStrings(String part1, String separator, String part2)", "full_signature": "public static String concatStrings(String part1, String separator, String part2)", "class_method_signature": "Misc.concatStrings(String part1, String separator, String part2)", "testcase": false, "constructor": false}, {"identifier": "hide", "parameters": "(String string)", "modifiers": "public static", "return": "String", "signature": "String hide(String string)", "full_signature": "public static String hide(String string)", "class_method_signature": "Misc.hide(String string)", "testcase": false, "constructor": false}, {"identifier": "hide", "parameters": "(String string, int mode)", "modifiers": "public static", "return": "String", "signature": "String hide(String string, int mode)", "full_signature": "public static String hide(String string, int mode)", "class_method_signature": "Misc.hide(String string, int mode)", "testcase": false, "constructor": false}, {"identifier": "byteArrayToString", "parameters": "(byte[] input, String endOfLineString, boolean xmlEncode)", "modifiers": "public static", "return": "String", "signature": "String byteArrayToString(byte[] input, String endOfLineString, boolean xmlEncode)", "full_signature": "public static String byteArrayToString(byte[] input, String endOfLineString, boolean xmlEncode)", "class_method_signature": "Misc.byteArrayToString(byte[] input, String endOfLineString, boolean xmlEncode)", "testcase": false, "constructor": false}, {"identifier": "gzip", "parameters": "(String input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] gzip(String input)", "full_signature": "public static byte[] gzip(String input)", "class_method_signature": "Misc.gzip(String input)", "testcase": false, "constructor": false}, {"identifier": "gzip", "parameters": "(byte[] input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] gzip(byte[] input)", "full_signature": "public static byte[] gzip(byte[] input)", "class_method_signature": "Misc.gzip(byte[] input)", "testcase": false, "constructor": false}, {"identifier": "gunzipToString", "parameters": "(byte[] input)", "modifiers": "public static", "return": "String", "signature": "String gunzipToString(byte[] input)", "full_signature": "public static String gunzipToString(byte[] input)", "class_method_signature": "Misc.gunzipToString(byte[] input)", "testcase": false, "constructor": false}, {"identifier": "gunzip", "parameters": "(byte[] input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] gunzip(byte[] input)", "full_signature": "public static byte[] gunzip(byte[] input)", "class_method_signature": "Misc.gunzip(byte[] input)", "testcase": false, "constructor": false}, {"identifier": "compress", "parameters": "(String input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] compress(String input)", "full_signature": "public static byte[] compress(String input)", "class_method_signature": "Misc.compress(String input)", "testcase": false, "constructor": false}, {"identifier": "compress", "parameters": "(byte[] input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] compress(byte[] input)", "full_signature": "public static byte[] compress(byte[] input)", "class_method_signature": "Misc.compress(byte[] input)", "testcase": false, "constructor": false}, {"identifier": "decompressToString", "parameters": "(byte[] input)", "modifiers": "public static", "return": "String", "signature": "String decompressToString(byte[] input)", "full_signature": "public static String decompressToString(byte[] input)", "class_method_signature": "Misc.decompressToString(byte[] input)", "testcase": false, "constructor": false}, {"identifier": "decompress", "parameters": "(byte[] input)", "modifiers": "public static", "return": "byte[]", "signature": "byte[] decompress(byte[] input)", "full_signature": "public static byte[] decompress(byte[] input)", "class_method_signature": "Misc.decompress(byte[] input)", "testcase": false, "constructor": false}, {"identifier": "getEnvironmentVariables", "parameters": "()", "modifiers": "public static", "return": "Properties", "signature": "Properties getEnvironmentVariables()", "full_signature": "public static Properties getEnvironmentVariables()", "class_method_signature": "Misc.getEnvironmentVariables()", "testcase": false, "constructor": false}, {"identifier": "getHostname", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getHostname()", "full_signature": "public static String getHostname()", "class_method_signature": "Misc.getHostname()", "testcase": false, "constructor": false}, {"identifier": "copyContext", "parameters": "(String keys, Map<String,Object> from, Map<String,Object> to)", "modifiers": "public static", "return": "void", "signature": "void copyContext(String keys, Map<String,Object> from, Map<String,Object> to)", "full_signature": "public static void copyContext(String keys, Map<String,Object> from, Map<String,Object> to)", "class_method_signature": "Misc.copyContext(String keys, Map<String,Object> from, Map<String,Object> to)", "testcase": false, "constructor": false}, {"identifier": "getDeployedApplicationBindings", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getDeployedApplicationBindings()", "full_signature": "public static String getDeployedApplicationBindings()", "class_method_signature": "Misc.getDeployedApplicationBindings()", "testcase": false, "constructor": false}, {"identifier": "getApplicationDeploymentDescriptorPath", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getApplicationDeploymentDescriptorPath()", "full_signature": "public static String getApplicationDeploymentDescriptorPath()", "class_method_signature": "Misc.getApplicationDeploymentDescriptorPath()", "testcase": false, "constructor": false}, {"identifier": "getApplicationDeploymentDescriptor", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getApplicationDeploymentDescriptor()", "full_signature": "public static String getApplicationDeploymentDescriptor()", "class_method_signature": "Misc.getApplicationDeploymentDescriptor()", "testcase": false, "constructor": false}, {"identifier": "getConfigurationResources", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getConfigurationResources()", "full_signature": "public static String getConfigurationResources()", "class_method_signature": "Misc.getConfigurationResources()", "testcase": false, "constructor": false}, {"identifier": "getConfigurationServer", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getConfigurationServer()", "full_signature": "public static String getConfigurationServer()", "class_method_signature": "Misc.getConfigurationServer()", "testcase": false, "constructor": false}, {"identifier": "getConnectionPoolProperties", "parameters": "(String confResString,\n\t                                                 String providerType, String jndiName)", "modifiers": "public static", "return": "String", "signature": "String getConnectionPoolProperties(String confResString,\n\t                                                 String providerType, String jndiName)", "full_signature": "public static String getConnectionPoolProperties(String confResString,\n\t                                                 String providerType, String jndiName)", "class_method_signature": "Misc.getConnectionPoolProperties(String confResString,\n\t                                                 String providerType, String jndiName)", "testcase": false, "constructor": false}, {"identifier": "getJmsDestinations", "parameters": "(String confResString)", "modifiers": "public static", "return": "String", "signature": "String getJmsDestinations(String confResString)", "full_signature": "public static String getJmsDestinations(String confResString)", "class_method_signature": "Misc.getJmsDestinations(String confResString)", "testcase": false, "constructor": false}, {"identifier": "toFileSize", "parameters": "(String value, long defaultValue)", "modifiers": "public static", "return": "long", "signature": "long toFileSize(String value, long defaultValue)", "full_signature": "public static long toFileSize(String value, long defaultValue)", "class_method_signature": "Misc.toFileSize(String value, long defaultValue)", "testcase": false, "constructor": false}, {"identifier": "toFileSize", "parameters": "(long value)", "modifiers": "public static", "return": "String", "signature": "String toFileSize(long value)", "full_signature": "public static String toFileSize(long value)", "class_method_signature": "Misc.toFileSize(long value)", "testcase": false, "constructor": false}, {"identifier": "toFileSize", "parameters": "(long value, boolean format)", "modifiers": "public static", "return": "String", "signature": "String toFileSize(long value, boolean format)", "full_signature": "public static String toFileSize(long value, boolean format)", "class_method_signature": "Misc.toFileSize(long value, boolean format)", "testcase": false, "constructor": false}, {"identifier": "toFileSize", "parameters": "(long value, boolean format, boolean floor)", "modifiers": "public static", "return": "String", "signature": "String toFileSize(long value, boolean format, boolean floor)", "full_signature": "public static String toFileSize(long value, boolean format, boolean floor)", "class_method_signature": "Misc.toFileSize(long value, boolean format, boolean floor)", "testcase": false, "constructor": false}, {"identifier": "getMessageSizeWarnByDefault", "parameters": "()", "modifiers": "public static synchronized", "return": "long", "signature": "long getMessageSizeWarnByDefault()", "full_signature": "public static synchronized long getMessageSizeWarnByDefault()", "class_method_signature": "Misc.getMessageSizeWarnByDefault()", "testcase": false, "constructor": false}, {"identifier": "getResponseBodySizeWarnByDefault", "parameters": "()", "modifiers": "public static synchronized", "return": "long", "signature": "long getResponseBodySizeWarnByDefault()", "full_signature": "public static synchronized long getResponseBodySizeWarnByDefault()", "class_method_signature": "Misc.getResponseBodySizeWarnByDefault()", "testcase": false, "constructor": false}, {"identifier": "isForceFixedForwardingByDefault", "parameters": "()", "modifiers": "public static synchronized", "return": "boolean", "signature": "boolean isForceFixedForwardingByDefault()", "full_signature": "public static synchronized boolean isForceFixedForwardingByDefault()", "class_method_signature": "Misc.isForceFixedForwardingByDefault()", "testcase": false, "constructor": false}, {"identifier": "listToString", "parameters": "(List list)", "modifiers": "public static", "return": "String", "signature": "String listToString(List list)", "full_signature": "public static String listToString(List list)", "class_method_signature": "Misc.listToString(List list)", "testcase": false, "constructor": false}, {"identifier": "addItemsToList", "parameters": "(Collection<String> collection, String list, String collectionDescription, boolean lowercase)", "modifiers": "public static", "return": "void", "signature": "void addItemsToList(Collection<String> collection, String list, String collectionDescription, boolean lowercase)", "full_signature": "public static void addItemsToList(Collection<String> collection, String list, String collectionDescription, boolean lowercase)", "class_method_signature": "Misc.addItemsToList(Collection<String> collection, String list, String collectionDescription, boolean lowercase)", "testcase": false, "constructor": false}, {"identifier": "getFileSystemTotalSpace", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getFileSystemTotalSpace()", "full_signature": "public static String getFileSystemTotalSpace()", "class_method_signature": "Misc.getFileSystemTotalSpace()", "testcase": false, "constructor": false}, {"identifier": "getFileSystemFreeSpace", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getFileSystemFreeSpace()", "full_signature": "public static String getFileSystemFreeSpace()", "class_method_signature": "Misc.getFileSystemFreeSpace()", "testcase": false, "constructor": false}, {"identifier": "getTotalTransactionLifetimeTimeout", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getTotalTransactionLifetimeTimeout()", "full_signature": "public static String getTotalTransactionLifetimeTimeout()", "class_method_signature": "Misc.getTotalTransactionLifetimeTimeout()", "testcase": false, "constructor": false}, {"identifier": "getTotalTransactionLifetimeTimeout", "parameters": "(String configServerXml)", "modifiers": "public static", "return": "String", "signature": "String getTotalTransactionLifetimeTimeout(String configServerXml)", "full_signature": "public static String getTotalTransactionLifetimeTimeout(String configServerXml)", "class_method_signature": "Misc.getTotalTransactionLifetimeTimeout(String configServerXml)", "testcase": false, "constructor": false}, {"identifier": "getMaximumTransactionTimeout", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getMaximumTransactionTimeout()", "full_signature": "public static String getMaximumTransactionTimeout()", "class_method_signature": "Misc.getMaximumTransactionTimeout()", "testcase": false, "constructor": false}, {"identifier": "getMaximumTransactionTimeout", "parameters": "(String configServerXml)", "modifiers": "public static", "return": "String", "signature": "String getMaximumTransactionTimeout(String configServerXml)", "full_signature": "public static String getMaximumTransactionTimeout(String configServerXml)", "class_method_signature": "Misc.getMaximumTransactionTimeout(String configServerXml)", "testcase": false, "constructor": false}, {"identifier": "getSystemTransactionTimeout", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getSystemTransactionTimeout()", "full_signature": "public static String getSystemTransactionTimeout()", "class_method_signature": "Misc.getSystemTransactionTimeout()", "testcase": false, "constructor": false}, {"identifier": "getAge", "parameters": "(long value)", "modifiers": "public static", "return": "String", "signature": "String getAge(long value)", "full_signature": "public static String getAge(long value)", "class_method_signature": "Misc.getAge(long value)", "testcase": false, "constructor": false}, {"identifier": "getDurationInMs", "parameters": "(long value)", "modifiers": "public static", "return": "String", "signature": "String getDurationInMs(long value)", "full_signature": "public static String getDurationInMs(long value)", "class_method_signature": "Misc.getDurationInMs(long value)", "testcase": false, "constructor": false}, {"identifier": "parseAge", "parameters": "(String value, long defaultValue)", "modifiers": "public static", "return": "long", "signature": "long parseAge(String value, long defaultValue)", "full_signature": "public static long parseAge(String value, long defaultValue)", "class_method_signature": "Misc.parseAge(String value, long defaultValue)", "testcase": false, "constructor": false}, {"identifier": "cleanseMessage", "parameters": "(String inputString, String regexForHiding, String hideMethod)", "modifiers": "public static", "return": "String", "signature": "String cleanseMessage(String inputString, String regexForHiding, String hideMethod)", "full_signature": "public static String cleanseMessage(String inputString, String regexForHiding, String hideMethod)", "class_method_signature": "Misc.cleanseMessage(String inputString, String regexForHiding, String hideMethod)", "testcase": false, "constructor": false}, {"identifier": "hideFirstHalf", "parameters": "(String inputString, String regex)", "modifiers": "public static", "return": "String", "signature": "String hideFirstHalf(String inputString, String regex)", "full_signature": "public static String hideFirstHalf(String inputString, String regex)", "class_method_signature": "Misc.hideFirstHalf(String inputString, String regex)", "testcase": false, "constructor": false}, {"identifier": "hideAll", "parameters": "(String message, Collection<String> collection)", "modifiers": "public static", "return": "String", "signature": "String hideAll(String message, Collection<String> collection)", "full_signature": "public static String hideAll(String message, Collection<String> collection)", "class_method_signature": "Misc.hideAll(String message, Collection<String> collection)", "testcase": false, "constructor": false}, {"identifier": "hideAll", "parameters": "(String message, Collection<String> collection, int mode)", "modifiers": "public static", "return": "String", "signature": "String hideAll(String message, Collection<String> collection, int mode)", "full_signature": "public static String hideAll(String message, Collection<String> collection, int mode)", "class_method_signature": "Misc.hideAll(String message, Collection<String> collection, int mode)", "testcase": false, "constructor": false}, {"identifier": "hideAll", "parameters": "(String inputString, String regex)", "modifiers": "public static", "return": "String", "signature": "String hideAll(String inputString, String regex)", "full_signature": "public static String hideAll(String inputString, String regex)", "class_method_signature": "Misc.hideAll(String inputString, String regex)", "testcase": false, "constructor": false}, {"identifier": "hideAll", "parameters": "(String inputString, String regex, int mode)", "modifiers": "public static", "return": "String", "signature": "String hideAll(String inputString, String regex, int mode)", "full_signature": "public static String hideAll(String inputString, String regex, int mode)", "class_method_signature": "Misc.hideAll(String inputString, String regex, int mode)", "testcase": false, "constructor": false}, {"identifier": "getBuildOutputDirectory", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getBuildOutputDirectory()", "full_signature": "public static String getBuildOutputDirectory()", "class_method_signature": "Misc.getBuildOutputDirectory()", "testcase": false, "constructor": false}, {"identifier": "getProjectBaseDir", "parameters": "()", "modifiers": "public static", "return": "String", "signature": "String getProjectBaseDir()", "full_signature": "public static String getProjectBaseDir()", "class_method_signature": "Misc.getProjectBaseDir()", "testcase": false, "constructor": false}, {"identifier": "toSortName", "parameters": "(String name)", "modifiers": "public static", "return": "String", "signature": "String toSortName(String name)", "full_signature": "public static String toSortName(String name)", "class_method_signature": "Misc.toSortName(String name)", "testcase": false, "constructor": false}, {"identifier": "countRegex", "parameters": "(String string, String regex)", "modifiers": "public static", "return": "int", "signature": "int countRegex(String string, String regex)", "full_signature": "public static int countRegex(String string, String regex)", "class_method_signature": "Misc.countRegex(String string, String regex)", "testcase": false, "constructor": false}], "file": "core/src/main/java/nl/nn/adapterframework/util/Misc.java"}, "focal_method": {"identifier": "hide", "parameters": "(String string)", "modifiers": "public static", "return": "String", "body": "public static String hide(String string) {\n\t\treturn hide(string, 0);\n\t}", "signature": "String hide(String string)", "full_signature": "public static String hide(String string)", "class_method_signature": "Misc.hide(String string)", "testcase": false, "constructor": false, "invocations": ["hide"]}, "repository": {"repo_id": 8927606, "url": "https://github.com/ibissource/iaf", "stars": 17, "created": "3/21/2013 11:48:24 AM +00:00", "updates": "2020-01-27T15:25:21+00:00", "fork": "False", "license": "licensed"}}