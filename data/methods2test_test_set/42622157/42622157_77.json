{"test_class": {"identifier": "ChefCookbookConfigurationTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ChefCookbookConfiguration cookbookConfiguration = new ChefCookbookConfiguration();", "modifier": "private", "type": "ChefCookbookConfiguration", "declarator": "cookbookConfiguration = new ChefCookbookConfiguration()", "var_name": "cookbookConfiguration"}], "file": "org.eclipse.winery.crawler/src/test/java/org/eclipse/winery/crawler/chefcookbooks/chefcookbook/ChefCookbookConfigurationTest.java"}, "test_case": {"identifier": "setSupports", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setSupports() {\n        Platform platform = new Platform(\"ubuntu\", \"18.04\");\n        cookbookConfiguration.setSupports(platform);\n        assertEquals(\"ubuntu\", cookbookConfiguration.getSupports().getName());\n        assertEquals(\"18.04\", cookbookConfiguration.getSupports().getVersion());\n        assertEquals(platform, cookbookConfiguration.getSupports());\n        assertTrue(cookbookConfiguration.hasPlatform(new HashSet<>(Arrays.asList(\"ubuntu\", \"windows\"))));\n        assertTrue(cookbookConfiguration.hasPlatformFamily(new HashSet<>(Arrays.asList(\"debian\", \"windows\"))));\n    }", "signature": "void setSupports()", "full_signature": "@Test public void setSupports()", "class_method_signature": "ChefCookbookConfigurationTest.setSupports()", "testcase": true, "constructor": false, "invocations": ["setSupports", "assertEquals", "getName", "getSupports", "assertEquals", "getVersion", "getSupports", "assertEquals", "getSupports", "assertTrue", "hasPlatform", "asList", "assertTrue", "hasPlatformFamily", "asList"]}, "focal_class": {"identifier": "ChefCookbookConfiguration", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOGGER = LoggerFactory.getLogger(ChefCookbookConfiguration.class.getName());", "modifier": "private static final", "type": "Logger", "declarator": "LOGGER = LoggerFactory.getLogger(ChefCookbookConfiguration.class.getName())", "var_name": "LOGGER"}, {"original_string": "private String name;", "modifier": "private", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "private String version;", "modifier": "private", "type": "String", "declarator": "version", "var_name": "version"}, {"original_string": "private Platform supports;", "modifier": "private", "type": "Platform", "declarator": "supports", "var_name": "supports"}, {"original_string": "private LinkedHashMap<String, String> depends;", "modifier": "private", "type": "LinkedHashMap<String, String>", "declarator": "depends", "var_name": "depends"}, {"original_string": "private String description;", "modifier": "private", "type": "String", "declarator": "description", "var_name": "description"}, {"original_string": "private HashMap<String, List> attributes;", "modifier": "private", "type": "HashMap<String, List>", "declarator": "attributes", "var_name": "attributes"}, {"original_string": "private LinkedHashMap<String, ChefPackage> installedPackages;", "modifier": "private", "type": "LinkedHashMap<String, ChefPackage>", "declarator": "installedPackages", "var_name": "installedPackages"}, {"original_string": "private LinkedHashMap<String, ChefPackage> requiredPackages;", "modifier": "private", "type": "LinkedHashMap<String, ChefPackage>", "declarator": "requiredPackages", "var_name": "requiredPackages"}, {"original_string": "private HashMap<String, List<String>> dependentRecipes;", "modifier": "private", "type": "HashMap<String, List<String>>", "declarator": "dependentRecipes", "var_name": "dependentRecipes"}, {"original_string": "private List<String> runlist;", "modifier": "private", "type": "List<String>", "declarator": "runlist", "var_name": "runlist"}], "methods": [{"identifier": "ChefCookbookConfiguration", "parameters": "(ChefCookbookConfiguration componentType)", "modifiers": "public", "return": "", "signature": " ChefCookbookConfiguration(ChefCookbookConfiguration componentType)", "full_signature": "public  ChefCookbookConfiguration(ChefCookbookConfiguration componentType)", "class_method_signature": "ChefCookbookConfiguration.ChefCookbookConfiguration(ChefCookbookConfiguration componentType)", "testcase": false, "constructor": true}, {"identifier": "ChefCookbookConfiguration", "parameters": "()", "modifiers": "public", "return": "", "signature": " ChefCookbookConfiguration()", "full_signature": "public  ChefCookbookConfiguration()", "class_method_signature": "ChefCookbookConfiguration.ChefCookbookConfiguration()", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getName()", "full_signature": "public String getName()", "class_method_signature": "ChefCookbookConfiguration.getName()", "testcase": false, "constructor": false}, {"identifier": "setName", "parameters": "(String name)", "modifiers": "public", "return": "void", "signature": "void setName(String name)", "full_signature": "public void setName(String name)", "class_method_signature": "ChefCookbookConfiguration.setName(String name)", "testcase": false, "constructor": false}, {"identifier": "getVersion", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getVersion()", "full_signature": "public String getVersion()", "class_method_signature": "ChefCookbookConfiguration.getVersion()", "testcase": false, "constructor": false}, {"identifier": "setVersion", "parameters": "(String version)", "modifiers": "public", "return": "void", "signature": "void setVersion(String version)", "full_signature": "public void setVersion(String version)", "class_method_signature": "ChefCookbookConfiguration.setVersion(String version)", "testcase": false, "constructor": false}, {"identifier": "getSupports", "parameters": "()", "modifiers": "public", "return": "Platform", "signature": "Platform getSupports()", "full_signature": "public Platform getSupports()", "class_method_signature": "ChefCookbookConfiguration.getSupports()", "testcase": false, "constructor": false}, {"identifier": "setSupports", "parameters": "(Platform supports)", "modifiers": "public", "return": "void", "signature": "void setSupports(Platform supports)", "full_signature": "public void setSupports(Platform supports)", "class_method_signature": "ChefCookbookConfiguration.setSupports(Platform supports)", "testcase": false, "constructor": false}, {"identifier": "getDepends", "parameters": "()", "modifiers": "public", "return": "LinkedHashMap<String, String>", "signature": "LinkedHashMap<String, String> getDepends()", "full_signature": "public LinkedHashMap<String, String> getDepends()", "class_method_signature": "ChefCookbookConfiguration.getDepends()", "testcase": false, "constructor": false}, {"identifier": "setDepends", "parameters": "(LinkedHashMap depends)", "modifiers": "public", "return": "void", "signature": "void setDepends(LinkedHashMap depends)", "full_signature": "public void setDepends(LinkedHashMap depends)", "class_method_signature": "ChefCookbookConfiguration.setDepends(LinkedHashMap depends)", "testcase": false, "constructor": false}, {"identifier": "addDepends", "parameters": "(String depends, String version)", "modifiers": "public", "return": "void", "signature": "void addDepends(String depends, String version)", "full_signature": "public void addDepends(String depends, String version)", "class_method_signature": "ChefCookbookConfiguration.addDepends(String depends, String version)", "testcase": false, "constructor": false}, {"identifier": "getDescription", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getDescription()", "full_signature": "public String getDescription()", "class_method_signature": "ChefCookbookConfiguration.getDescription()", "testcase": false, "constructor": false}, {"identifier": "setDescription", "parameters": "(String description)", "modifiers": "public", "return": "void", "signature": "void setDescription(String description)", "full_signature": "public void setDescription(String description)", "class_method_signature": "ChefCookbookConfiguration.setDescription(String description)", "testcase": false, "constructor": false}, {"identifier": "addInstalledPackage", "parameters": "(ChefPackage installedPackage)", "modifiers": "public", "return": "void", "signature": "void addInstalledPackage(ChefPackage installedPackage)", "full_signature": "public void addInstalledPackage(ChefPackage installedPackage)", "class_method_signature": "ChefCookbookConfiguration.addInstalledPackage(ChefPackage installedPackage)", "testcase": false, "constructor": false}, {"identifier": "getRequiredPackages", "parameters": "()", "modifiers": "public", "return": "LinkedHashMap<String, ChefPackage>", "signature": "LinkedHashMap<String, ChefPackage> getRequiredPackages()", "full_signature": "public LinkedHashMap<String, ChefPackage> getRequiredPackages()", "class_method_signature": "ChefCookbookConfiguration.getRequiredPackages()", "testcase": false, "constructor": false}, {"identifier": "addRequiredPackage", "parameters": "(ChefPackage requiredPackage)", "modifiers": "public", "return": "void", "signature": "void addRequiredPackage(ChefPackage requiredPackage)", "full_signature": "public void addRequiredPackage(ChefPackage requiredPackage)", "class_method_signature": "ChefCookbookConfiguration.addRequiredPackage(ChefPackage requiredPackage)", "testcase": false, "constructor": false}, {"identifier": "getInstalledPackages", "parameters": "()", "modifiers": "public", "return": "LinkedHashMap<String, ChefPackage>", "signature": "LinkedHashMap<String, ChefPackage> getInstalledPackages()", "full_signature": "public LinkedHashMap<String, ChefPackage> getInstalledPackages()", "class_method_signature": "ChefCookbookConfiguration.getInstalledPackages()", "testcase": false, "constructor": false}, {"identifier": "getAttribute", "parameters": "(String key)", "modifiers": "public", "return": "List", "signature": "List getAttribute(String key)", "full_signature": "public List getAttribute(String key)", "class_method_signature": "ChefCookbookConfiguration.getAttribute(String key)", "testcase": false, "constructor": false}, {"identifier": "putAttribute", "parameters": "(String key, List value)", "modifiers": "public", "return": "void", "signature": "void putAttribute(String key, List value)", "full_signature": "public void putAttribute(String key, List value)", "class_method_signature": "ChefCookbookConfiguration.putAttribute(String key, List value)", "testcase": false, "constructor": false}, {"identifier": "getAttributes", "parameters": "()", "modifiers": "public", "return": "HashMap<String, List>", "signature": "HashMap<String, List> getAttributes()", "full_signature": "public HashMap<String, List> getAttributes()", "class_method_signature": "ChefCookbookConfiguration.getAttributes()", "testcase": false, "constructor": false}, {"identifier": "printConfiguration", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void printConfiguration()", "full_signature": "public void printConfiguration()", "class_method_signature": "ChefCookbookConfiguration.printConfiguration()", "testcase": false, "constructor": false}, {"identifier": "setOhaiPlatformAttributes", "parameters": "(String platformName)", "modifiers": "public", "return": "void", "signature": "void setOhaiPlatformAttributes(String platformName)", "full_signature": "public void setOhaiPlatformAttributes(String platformName)", "class_method_signature": "ChefCookbookConfiguration.setOhaiPlatformAttributes(String platformName)", "testcase": false, "constructor": false}, {"identifier": "setOhaiPlatformVersionAttribute", "parameters": "(String platformVersion)", "modifiers": "public", "return": "void", "signature": "void setOhaiPlatformVersionAttribute(String platformVersion)", "full_signature": "public void setOhaiPlatformVersionAttribute(String platformVersion)", "class_method_signature": "ChefCookbookConfiguration.setOhaiPlatformVersionAttribute(String platformVersion)", "testcase": false, "constructor": false}, {"identifier": "hasPlatform", "parameters": "(HashSet platforms)", "modifiers": "public", "return": "boolean", "signature": "boolean hasPlatform(HashSet platforms)", "full_signature": "public boolean hasPlatform(HashSet platforms)", "class_method_signature": "ChefCookbookConfiguration.hasPlatform(HashSet platforms)", "testcase": false, "constructor": false}, {"identifier": "hasPlatformFamily", "parameters": "(HashSet platformFamilies)", "modifiers": "public", "return": "boolean", "signature": "boolean hasPlatformFamily(HashSet platformFamilies)", "full_signature": "public boolean hasPlatformFamily(HashSet platformFamilies)", "class_method_signature": "ChefCookbookConfiguration.hasPlatformFamily(HashSet platformFamilies)", "testcase": false, "constructor": false}, {"identifier": "getPackageByIndex", "parameters": "(LinkedHashMap<String, ChefPackage> hMap, int index)", "modifiers": "public static", "return": "ChefPackage", "signature": "ChefPackage getPackageByIndex(LinkedHashMap<String, ChefPackage> hMap, int index)", "full_signature": "public static ChefPackage getPackageByIndex(LinkedHashMap<String, ChefPackage> hMap, int index)", "class_method_signature": "ChefCookbookConfiguration.getPackageByIndex(LinkedHashMap<String, ChefPackage> hMap, int index)", "testcase": false, "constructor": false}, {"identifier": "getDependentRecipes", "parameters": "(String cookbook)", "modifiers": "public", "return": "List<String>", "signature": "List<String> getDependentRecipes(String cookbook)", "full_signature": "public List<String> getDependentRecipes(String cookbook)", "class_method_signature": "ChefCookbookConfiguration.getDependentRecipes(String cookbook)", "testcase": false, "constructor": false}, {"identifier": "getRunlist", "parameters": "()", "modifiers": "public", "return": "List<String>", "signature": "List<String> getRunlist()", "full_signature": "public List<String> getRunlist()", "class_method_signature": "ChefCookbookConfiguration.getRunlist()", "testcase": false, "constructor": false}, {"identifier": "setRunlist", "parameters": "(List<String> runlist)", "modifiers": "public", "return": "void", "signature": "void setRunlist(List<String> runlist)", "full_signature": "public void setRunlist(List<String> runlist)", "class_method_signature": "ChefCookbookConfiguration.setRunlist(List<String> runlist)", "testcase": false, "constructor": false}, {"identifier": "addDependentRecipes", "parameters": "(String cookbook, String recipe)", "modifiers": "public", "return": "void", "signature": "void addDependentRecipes(String cookbook, String recipe)", "full_signature": "public void addDependentRecipes(String cookbook, String recipe)", "class_method_signature": "ChefCookbookConfiguration.addDependentRecipes(String cookbook, String recipe)", "testcase": false, "constructor": false}, {"identifier": "prepareForDependencie", "parameters": "(String cookbook)", "modifiers": "public", "return": "void", "signature": "void prepareForDependencie(String cookbook)", "full_signature": "public void prepareForDependencie(String cookbook)", "class_method_signature": "ChefCookbookConfiguration.prepareForDependencie(String cookbook)", "testcase": false, "constructor": false}], "file": "org.eclipse.winery.crawler/src/main/java/org/eclipse/winery/crawler/chefcookbooks/chefcookbook/ChefCookbookConfiguration.java"}, "focal_method": {"identifier": "setSupports", "parameters": "(Platform supports)", "modifiers": "public", "return": "void", "body": "public void setSupports(Platform supports) {\n        this.supports = supports;\n        this.setOhaiPlatformAttributes(supports.getName());\n        this.setOhaiPlatformVersionAttribute(supports.getVersion());\n    }", "signature": "void setSupports(Platform supports)", "full_signature": "public void setSupports(Platform supports)", "class_method_signature": "ChefCookbookConfiguration.setSupports(Platform supports)", "testcase": false, "constructor": false, "invocations": ["setOhaiPlatformAttributes", "getName", "setOhaiPlatformVersionAttribute", "getVersion"]}, "repository": {"repo_id": 42622157, "url": "https://github.com/eclipse/winery", "stars": 34, "created": "9/17/2015 12:31:44 AM +00:00", "updates": "2020-01-22T09:32:00+00:00", "fork": "False", "license": "licensed"}}