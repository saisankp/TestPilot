{"test_class": {"identifier": "HashGeneratorMakerTest", "superclass": "", "interfaces": "", "fields": [], "file": "tool/hash/src/test/java/org/openscience/cdk/hash/HashGeneratorMakerTest.java"}, "test_case": {"identifier": "testInvalidDepth", "parameters": "()", "modifiers": "@Test(expected = IllegalArgumentException.class) public", "return": "void", "body": "@Test(expected = IllegalArgumentException.class)\n    public void testInvalidDepth() {\n        new HashGeneratorMaker().depth(-1);\n    }", "signature": "void testInvalidDepth()", "full_signature": "@Test(expected = IllegalArgumentException.class) public void testInvalidDepth()", "class_method_signature": "HashGeneratorMakerTest.testInvalidDepth()", "testcase": true, "constructor": false, "invocations": ["depth"]}, "focal_class": {"identifier": "HashGeneratorMaker", "superclass": "", "interfaces": "", "fields": [{"original_string": "private int                        depth          = -1;", "modifier": "private", "type": "int", "declarator": "depth          = -1", "var_name": "depth"}, {"original_string": "private List<AtomEncoder>          customEncoders = new ArrayList<AtomEncoder>();", "modifier": "private", "type": "List<AtomEncoder>", "declarator": "customEncoders = new ArrayList<AtomEncoder>()", "var_name": "customEncoders"}, {"original_string": "private EnumSet<BasicAtomEncoder>  encoderSet     = EnumSet.noneOf(BasicAtomEncoder.class);", "modifier": "private", "type": "EnumSet<BasicAtomEncoder>", "declarator": "encoderSet     = EnumSet.noneOf(BasicAtomEncoder.class)", "var_name": "encoderSet"}, {"original_string": "private List<StereoEncoderFactory> stereoEncoders = new ArrayList<StereoEncoderFactory>();", "modifier": "private", "type": "List<StereoEncoderFactory>", "declarator": "stereoEncoders = new ArrayList<StereoEncoderFactory>()", "var_name": "stereoEncoders"}, {"original_string": "private EquivalentSetFinder        equivSetFinder = null;", "modifier": "private", "type": "EquivalentSetFinder", "declarator": "equivSetFinder = null", "var_name": "equivSetFinder"}, {"original_string": "private AtomSuppression            suppression    = AtomSuppression.unsuppressed();", "modifier": "private", "type": "AtomSuppression", "declarator": "suppression    = AtomSuppression.unsuppressed()", "var_name": "suppression"}], "methods": [{"identifier": "depth", "parameters": "(int depth)", "modifiers": "public", "return": "HashGeneratorMaker", "signature": "HashGeneratorMaker depth(int depth)", "full_signature": "public HashGeneratorMaker depth(int depth)", "class_method_signature": "HashGeneratorMaker.depth(int depth)", "testcase": false, "constructor": false}, {"identifier": "elemental", "parameters": "()", "modifiers": "public", "return": "HashGeneratorMaker", "signature": "HashGeneratorMaker elemental()", "full_signature": "public HashGeneratorMaker elemental()", "class_method_signature": "HashGeneratorMaker.elemental()", "testcase": false, "constructor": false}, {"identifier": "isotopic", "parameters": "()", "modifiers": "public", "return": "HashGeneratorMaker", "signature": "HashGeneratorMaker isotopic()", "full_signature": "public HashGeneratorMaker isotopic()", "class_method_signature": "HashGeneratorMaker.isotopic()", "testcase": false, "constructor": false}, {"identifier": "charged", "parameters": "()", "modifiers": "public", "return": "HashGeneratorMaker", "signature": "HashGeneratorMaker charged()", "full_signature": "public HashGeneratorMaker charged()", "class_method_signature": "HashGeneratorMaker.charged()", "testcase": false, "constructor": false}, {"identifier": "orbital", "parameters": "()", "modifiers": "public", "return": "HashGeneratorMaker", "signature": "HashGeneratorMaker orbital()", "full_signature": "public HashGeneratorMaker orbital()", "class_method_signature": "HashGeneratorMaker.orbital()", "testcase": false, "constructor": false}, {"identifier": "radical", "parameters": "()", "modifiers": "public", "return": "HashGeneratorMaker", "signature": "HashGeneratorMaker radical()", "full_signature": "public HashGeneratorMaker radical()", "class_method_signature": "HashGeneratorMaker.radical()", "testcase": false, "constructor": false}, {"identifier": "chiral", "parameters": "()", "modifiers": "public", "return": "HashGeneratorMaker", "signature": "HashGeneratorMaker chiral()", "full_signature": "public HashGeneratorMaker chiral()", "class_method_signature": "HashGeneratorMaker.chiral()", "testcase": false, "constructor": false}, {"identifier": "suppressHydrogens", "parameters": "()", "modifiers": "public", "return": "HashGeneratorMaker", "signature": "HashGeneratorMaker suppressHydrogens()", "full_signature": "public HashGeneratorMaker suppressHydrogens()", "class_method_signature": "HashGeneratorMaker.suppressHydrogens()", "testcase": false, "constructor": false}, {"identifier": "perturbed", "parameters": "()", "modifiers": "public", "return": "HashGeneratorMaker", "signature": "HashGeneratorMaker perturbed()", "full_signature": "public HashGeneratorMaker perturbed()", "class_method_signature": "HashGeneratorMaker.perturbed()", "testcase": false, "constructor": false}, {"identifier": "perturbWith", "parameters": "(EquivalentSetFinder equivSetFinder)", "modifiers": "", "return": "HashGeneratorMaker", "signature": "HashGeneratorMaker perturbWith(EquivalentSetFinder equivSetFinder)", "full_signature": " HashGeneratorMaker perturbWith(EquivalentSetFinder equivSetFinder)", "class_method_signature": "HashGeneratorMaker.perturbWith(EquivalentSetFinder equivSetFinder)", "testcase": false, "constructor": false}, {"identifier": "encode", "parameters": "(AtomEncoder encoder)", "modifiers": "public", "return": "HashGeneratorMaker", "signature": "HashGeneratorMaker encode(AtomEncoder encoder)", "full_signature": "public HashGeneratorMaker encode(AtomEncoder encoder)", "class_method_signature": "HashGeneratorMaker.encode(AtomEncoder encoder)", "testcase": false, "constructor": false}, {"identifier": "makeStereoEncoderFactory", "parameters": "()", "modifiers": "private", "return": "StereoEncoderFactory", "signature": "StereoEncoderFactory makeStereoEncoderFactory()", "full_signature": "private StereoEncoderFactory makeStereoEncoderFactory()", "class_method_signature": "HashGeneratorMaker.makeStereoEncoderFactory()", "testcase": false, "constructor": false}, {"identifier": "ensemble", "parameters": "()", "modifiers": "public", "return": "EnsembleHashGenerator", "signature": "EnsembleHashGenerator ensemble()", "full_signature": "public EnsembleHashGenerator ensemble()", "class_method_signature": "HashGeneratorMaker.ensemble()", "testcase": false, "constructor": false}, {"identifier": "molecular", "parameters": "()", "modifiers": "public", "return": "MoleculeHashGenerator", "signature": "MoleculeHashGenerator molecular()", "full_signature": "public MoleculeHashGenerator molecular()", "class_method_signature": "HashGeneratorMaker.molecular()", "testcase": false, "constructor": false}, {"identifier": "atomic", "parameters": "()", "modifiers": "public", "return": "AtomHashGenerator", "signature": "AtomHashGenerator atomic()", "full_signature": "public AtomHashGenerator atomic()", "class_method_signature": "HashGeneratorMaker.atomic()", "testcase": false, "constructor": false}], "file": "tool/hash/src/main/java/org/openscience/cdk/hash/HashGeneratorMaker.java"}, "focal_method": {"identifier": "depth", "parameters": "(int depth)", "modifiers": "public", "return": "HashGeneratorMaker", "body": "public HashGeneratorMaker depth(int depth) {\n        if (depth < 0) throw new IllegalArgumentException(\"depth must not be less than 0\");\n        this.depth = depth;\n        return this;\n    }", "signature": "HashGeneratorMaker depth(int depth)", "full_signature": "public HashGeneratorMaker depth(int depth)", "class_method_signature": "HashGeneratorMaker.depth(int depth)", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 660443, "url": "https://github.com/cdk/cdk", "stars": 220, "created": "5/11/2010 8:30:07 AM +00:00", "updates": "2020-01-27T19:04:04+00:00", "fork": "False", "license": "licensed"}}