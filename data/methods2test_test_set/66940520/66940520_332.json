{"test_class": {"identifier": "RelationshipDeletionHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private RelationshipDeletionHandler relationshipDeletionHandler;", "modifier": "private", "type": "RelationshipDeletionHandler", "declarator": "relationshipDeletionHandler", "var_name": "relationshipDeletionHandler"}, {"original_string": "@Mock\n    private RelationshipService relationshipService;", "modifier": "@Mock\n    private", "type": "RelationshipService", "declarator": "relationshipService", "var_name": "relationshipService"}, {"original_string": "@Rule\n    public MockitoRule mockitoRule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "mockitoRule = MockitoJUnit.rule()", "var_name": "mockitoRule"}, {"original_string": "private RelationshipType relationshipTypeWithData;", "modifier": "private", "type": "RelationshipType", "declarator": "relationshipTypeWithData", "var_name": "relationshipTypeWithData"}, {"original_string": "private RelationshipType relationshipTypeWithoutData;", "modifier": "private", "type": "RelationshipType", "declarator": "relationshipTypeWithoutData", "var_name": "relationshipTypeWithoutData"}], "file": "dhis-2/dhis-services/dhis-service-core/src/test/java/org/hisp/dhis/relationship/RelationshipDeletionHandlerTest.java"}, "test_case": {"identifier": "allowDeleteRelationshipTypeWithoutData", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void allowDeleteRelationshipTypeWithoutData()\n    {\n        Mockito.when( relationshipService.getRelationshipsByRelationshipType( Mockito.any() ) ).thenReturn(\n            Lists.newArrayList() );\n        String res = relationshipDeletionHandler.allowDeleteRelationshipType( relationshipTypeWithData );\n\n        assertNull( res );\n    }", "signature": "void allowDeleteRelationshipTypeWithoutData()", "full_signature": "@Test public void allowDeleteRelationshipTypeWithoutData()", "class_method_signature": "RelationshipDeletionHandlerTest.allowDeleteRelationshipTypeWithoutData()", "testcase": true, "constructor": false, "invocations": ["thenReturn", "when", "getRelationshipsByRelationshipType", "any", "newArrayList", "allowDeleteRelationshipType", "assertNull"]}, "focal_class": {"identifier": "RelationshipDeletionHandler", "superclass": "extends DeletionHandler", "interfaces": "", "fields": [{"original_string": "private final RelationshipService relationshipService;", "modifier": "private final", "type": "RelationshipService", "declarator": "relationshipService", "var_name": "relationshipService"}], "methods": [{"identifier": "RelationshipDeletionHandler", "parameters": "( RelationshipService relationshipService )", "modifiers": "public", "return": "", "signature": " RelationshipDeletionHandler( RelationshipService relationshipService )", "full_signature": "public  RelationshipDeletionHandler( RelationshipService relationshipService )", "class_method_signature": "RelationshipDeletionHandler.RelationshipDeletionHandler( RelationshipService relationshipService )", "testcase": false, "constructor": true}, {"identifier": "getClassName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getClassName()", "full_signature": "@Override public String getClassName()", "class_method_signature": "RelationshipDeletionHandler.getClassName()", "testcase": false, "constructor": false}, {"identifier": "deleteTrackedEntityInstance", "parameters": "( TrackedEntityInstance entityInstance )", "modifiers": "@Override public", "return": "void", "signature": "void deleteTrackedEntityInstance( TrackedEntityInstance entityInstance )", "full_signature": "@Override public void deleteTrackedEntityInstance( TrackedEntityInstance entityInstance )", "class_method_signature": "RelationshipDeletionHandler.deleteTrackedEntityInstance( TrackedEntityInstance entityInstance )", "testcase": false, "constructor": false}, {"identifier": "allowDeleteRelationshipType", "parameters": "( RelationshipType relationshipType )", "modifiers": "@Override public", "return": "String", "signature": "String allowDeleteRelationshipType( RelationshipType relationshipType )", "full_signature": "@Override public String allowDeleteRelationshipType( RelationshipType relationshipType )", "class_method_signature": "RelationshipDeletionHandler.allowDeleteRelationshipType( RelationshipType relationshipType )", "testcase": false, "constructor": false}], "file": "dhis-2/dhis-services/dhis-service-core/src/main/java/org/hisp/dhis/relationship/RelationshipDeletionHandler.java"}, "focal_method": {"identifier": "allowDeleteRelationshipType", "parameters": "( RelationshipType relationshipType )", "modifiers": "@Override public", "return": "String", "body": "@Override\n    public String allowDeleteRelationshipType( RelationshipType relationshipType )\n    {\n        Collection<Relationship> relationships = relationshipService.getRelationshipsByRelationshipType( relationshipType );\n\n        return relationships.isEmpty() ? null : ERROR;\n    }", "signature": "String allowDeleteRelationshipType( RelationshipType relationshipType )", "full_signature": "@Override public String allowDeleteRelationshipType( RelationshipType relationshipType )", "class_method_signature": "RelationshipDeletionHandler.allowDeleteRelationshipType( RelationshipType relationshipType )", "testcase": false, "constructor": false, "invocations": ["getRelationshipsByRelationshipType", "isEmpty"]}, "repository": {"repo_id": 66940520, "url": "https://github.com/dhis2/dhis2-core", "stars": 151, "created": "8/30/2016 12:57:05 PM +00:00", "updates": "2020-01-24T18:06:36+00:00", "fork": "False", "license": "licensed"}}