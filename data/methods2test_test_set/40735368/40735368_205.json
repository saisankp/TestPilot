{"test_class": {"identifier": "StyleBuilderTest", "superclass": "", "interfaces": "", "fields": [], "file": "modules/extension/brewer/src/test/java/org/geotools/styling/builder/StyleBuilderTest.java"}, "test_case": {"identifier": "anchorPoint", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void anchorPoint() {\n        AnchorPointBuilder b = new AnchorPointBuilder();\n\n        AnchorPoint anchor = b.build();\n        assertEquals(0.0, anchor.getAnchorPointX().evaluate(null, Double.class), 0.0);\n        assertEquals(0.0, anchor.getAnchorPointY().evaluate(null, Double.class), 0.0);\n\n        anchor = b.x(0.5).y(0.9).build();\n        assertEquals(0.5, anchor.getAnchorPointX().evaluate(null, Double.class), 0.0);\n        assertEquals(0.9, anchor.getAnchorPointY().evaluate(null, Double.class), 0.0);\n\n    }", "signature": "void anchorPoint()", "full_signature": "@Test public void anchorPoint()", "class_method_signature": "StyleBuilderTest.anchorPoint()", "testcase": true, "constructor": false, "invocations": ["build", "assertEquals", "evaluate", "getAnchorPointX", "assertEquals", "evaluate", "getAnchorPointY", "build", "y", "x", "assertEquals", "evaluate", "getAnchorPointX", "assertEquals", "evaluate", "getAnchorPointY"]}, "focal_class": {"identifier": "StyleBuilder", "superclass": "extends AbstractStyleBuilder<Style>", "interfaces": "", "fields": [{"original_string": "List<FeatureTypeStyleBuilder> fts = new ArrayList<FeatureTypeStyleBuilder>();", "modifier": "", "type": "List<FeatureTypeStyleBuilder>", "declarator": "fts = new ArrayList<FeatureTypeStyleBuilder>()", "var_name": "fts"}, {"original_string": "String name;", "modifier": "", "type": "String", "declarator": "name", "var_name": "name"}, {"original_string": "String styleAbstract;", "modifier": "", "type": "String", "declarator": "styleAbstract", "var_name": "styleAbstract"}, {"original_string": "String title;", "modifier": "", "type": "String", "declarator": "title", "var_name": "title"}, {"original_string": "boolean isDefault;", "modifier": "", "type": "boolean", "declarator": "isDefault", "var_name": "isDefault"}], "methods": [{"identifier": "StyleBuilder", "parameters": "()", "modifiers": "public", "return": "", "signature": " StyleBuilder()", "full_signature": "public  StyleBuilder()", "class_method_signature": "StyleBuilder.StyleBuilder()", "testcase": false, "constructor": true}, {"identifier": "StyleBuilder", "parameters": "(AbstractSLDBuilder<?> parent)", "modifiers": "", "return": "", "signature": " StyleBuilder(AbstractSLDBuilder<?> parent)", "full_signature": "  StyleBuilder(AbstractSLDBuilder<?> parent)", "class_method_signature": "StyleBuilder.StyleBuilder(AbstractSLDBuilder<?> parent)", "testcase": false, "constructor": true}, {"identifier": "name", "parameters": "(String name)", "modifiers": "public", "return": "StyleBuilder", "signature": "StyleBuilder name(String name)", "full_signature": "public StyleBuilder name(String name)", "class_method_signature": "StyleBuilder.name(String name)", "testcase": false, "constructor": false}, {"identifier": "title", "parameters": "(String title)", "modifiers": "public", "return": "StyleBuilder", "signature": "StyleBuilder title(String title)", "full_signature": "public StyleBuilder title(String title)", "class_method_signature": "StyleBuilder.title(String title)", "testcase": false, "constructor": false}, {"identifier": "styleAbstract", "parameters": "(String styleAbstract)", "modifiers": "public", "return": "StyleBuilder", "signature": "StyleBuilder styleAbstract(String styleAbstract)", "full_signature": "public StyleBuilder styleAbstract(String styleAbstract)", "class_method_signature": "StyleBuilder.styleAbstract(String styleAbstract)", "testcase": false, "constructor": false}, {"identifier": "featureTypeStyle", "parameters": "()", "modifiers": "public", "return": "FeatureTypeStyleBuilder", "signature": "FeatureTypeStyleBuilder featureTypeStyle()", "full_signature": "public FeatureTypeStyleBuilder featureTypeStyle()", "class_method_signature": "StyleBuilder.featureTypeStyle()", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "Style", "signature": "Style build()", "full_signature": "public Style build()", "class_method_signature": "StyleBuilder.build()", "testcase": false, "constructor": false}, {"identifier": "unset", "parameters": "()", "modifiers": "public", "return": "StyleBuilder", "signature": "StyleBuilder unset()", "full_signature": "public StyleBuilder unset()", "class_method_signature": "StyleBuilder.unset()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "()", "modifiers": "public", "return": "StyleBuilder", "signature": "StyleBuilder reset()", "full_signature": "public StyleBuilder reset()", "class_method_signature": "StyleBuilder.reset()", "testcase": false, "constructor": false}, {"identifier": "reset", "parameters": "(Style style)", "modifiers": "public", "return": "StyleBuilder", "signature": "StyleBuilder reset(Style style)", "full_signature": "public StyleBuilder reset(Style style)", "class_method_signature": "StyleBuilder.reset(Style style)", "testcase": false, "constructor": false}, {"identifier": "buildStyle", "parameters": "()", "modifiers": "@Override public", "return": "Style", "signature": "Style buildStyle()", "full_signature": "@Override public Style buildStyle()", "class_method_signature": "StyleBuilder.buildStyle()", "testcase": false, "constructor": false}, {"identifier": "buildStyleInternal", "parameters": "(StyleBuilder sb)", "modifiers": "@Override protected", "return": "void", "signature": "void buildStyleInternal(StyleBuilder sb)", "full_signature": "@Override protected void buildStyleInternal(StyleBuilder sb)", "class_method_signature": "StyleBuilder.buildStyleInternal(StyleBuilder sb)", "testcase": false, "constructor": false}], "file": "modules/extension/brewer/src/main/java/org/geotools/styling/builder/StyleBuilder.java"}, "focal_method": {"identifier": "build", "parameters": "()", "modifiers": "public", "return": "Style", "body": "public Style build() {\n        if (unset) {\n            return null;\n        }\n\n        Style s;\n        if (fts.size() == 0) {\n            s = sf.createNamedStyle();\n            s.setName(name);\n        } else {\n            s = sf.createStyle();\n            s.setName(name);\n            if (styleAbstract != null)\n                s.getDescription().setAbstract(new SimpleInternationalString(styleAbstract));\n            if (title != null)\n                s.getDescription().setTitle(new SimpleInternationalString(title));\n            for (FeatureTypeStyleBuilder builder : fts) {\n                s.featureTypeStyles().add(builder.build());\n            }\n            s.setDefault(isDefault);\n        }\n\n        reset();\n        return s;\n    }", "signature": "Style build()", "full_signature": "public Style build()", "class_method_signature": "StyleBuilder.build()", "testcase": false, "constructor": false, "invocations": ["size", "createNamedStyle", "setName", "createStyle", "setName", "setAbstract", "getDescription", "setTitle", "getDescription", "add", "featureTypeStyles", "build", "setDefault", "reset"]}, "repository": {"repo_id": 40735368, "url": "https://github.com/FUNCATE/geotools-android", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 8, "size": 63952, "license": "licensed"}}