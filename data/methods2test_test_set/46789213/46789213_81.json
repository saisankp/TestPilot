{"test_class": {"identifier": "PerformanceLoggerCountingAggregateTest", "superclass": "", "interfaces": "", "fields": [], "file": "core/src/test/java/dk/alexandra/fresco/logging/PerformanceLoggerCountingAggregateTest.java"}, "test_case": {"identifier": "reset", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void reset() {\n    PerformanceLogger logger = mock(PerformanceLogger.class);\n\n    PerformanceLoggerCountingAggregate aggregate = new PerformanceLoggerCountingAggregate();\n    aggregate.add(logger);\n    aggregate.reset();\n\n    verify(logger, times(1)).reset();\n  }", "signature": "void reset()", "full_signature": "@Test public void reset()", "class_method_signature": "PerformanceLoggerCountingAggregateTest.reset()", "testcase": true, "constructor": false, "invocations": ["mock", "add", "reset", "reset", "verify", "times"]}, "focal_class": {"identifier": "PerformanceLoggerCountingAggregate", "superclass": "", "interfaces": "implements PerformanceLogger", "fields": [{"original_string": "private List<PerformanceLogger> performanceLoggers = new ArrayList<>();", "modifier": "private", "type": "List<PerformanceLogger>", "declarator": "performanceLoggers = new ArrayList<>()", "var_name": "performanceLoggers"}], "methods": [{"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "PerformanceLoggerCountingAggregate.reset()", "testcase": false, "constructor": false}, {"identifier": "getLoggedValues", "parameters": "()", "modifiers": "@Override public", "return": "Map<String, Long>", "signature": "Map<String, Long> getLoggedValues()", "full_signature": "@Override public Map<String, Long> getLoggedValues()", "class_method_signature": "PerformanceLoggerCountingAggregate.getLoggedValues()", "testcase": false, "constructor": false}, {"identifier": "add", "parameters": "(PerformanceLogger performanceLogger)", "modifiers": "public", "return": "void", "signature": "void add(PerformanceLogger performanceLogger)", "full_signature": "public void add(PerformanceLogger performanceLogger)", "class_method_signature": "PerformanceLoggerCountingAggregate.add(PerformanceLogger performanceLogger)", "testcase": false, "constructor": false}], "file": "core/src/main/java/dk/alexandra/fresco/logging/PerformanceLoggerCountingAggregate.java"}, "focal_method": {"identifier": "reset", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n  public void reset() {\n    for (PerformanceLogger performanceLogger : performanceLoggers) {\n      performanceLogger.reset();\n    }\n  }", "signature": "void reset()", "full_signature": "@Override public void reset()", "class_method_signature": "PerformanceLoggerCountingAggregate.reset()", "testcase": false, "constructor": false, "invocations": ["reset"]}, "repository": {"repo_id": 46789213, "url": "https://github.com/aicis/fresco", "language": "Java", "is_fork": false, "fork_count": 35, "stargazer_count": 72, "size": 17923, "license": "licensed"}}