{"test_class": {"identifier": "RevealedAttrsAndFactsdDescrGeneratorTest", "superclass": "", "interfaces": "", "fields": [], "file": "Code/core-abce/abce-components/src/test/java/eu/abc4trust/util/RevealedAttrsAndFactsdDescrGeneratorTest.java"}, "test_case": {"identifier": "testFriendlyTokenDescriptionGenerator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testFriendlyTokenDescriptionGenerator() throws Exception {\n\n\t\t//---------------------------------------------------\n\t\t//Store credential specifications\n\t\t//---------------------------------------------------\n\n\t\tMap<URI,CredentialSpecification> uriCredspecs = new HashMap<URI, CredentialSpecification>();\n\n\t\tCredentialSpecification creditCardSpec =\n\t\t\t\t(CredentialSpecification) XmlUtils.getObjectFromXML(this.getClass().getResourceAsStream(\n\t\t\t\t\t\t\"/eu/abc4trust/sampleXml/credspecs/credentialSpecificationCreditcardVisaForFriendlyGenTest.xml\"), true);\n\n\t\tif (creditCardSpec !=null){\n\t\t\turiCredspecs.put(creditCardSpec.getSpecificationUID(), creditCardSpec);\n\t\t}\n\n\t\tCredentialSpecification passportSpec =\n\t\t\t\t(CredentialSpecification) XmlUtils.getObjectFromXML(this.getClass().getResourceAsStream(\n\t\t\t\t\t\t\"/eu/abc4trust/sampleXml/credspecs/credentialSpecificationPassport.xml\"), true);\n\n\t\tif (passportSpec !=null){\n\t\t\turiCredspecs.put(passportSpec.getSpecificationUID(), passportSpec);\n\t\t}\n\n\t\t//---------------------------------------------------\n\t\t//Retrieve presentation tokens\n\t\t//---------------------------------------------------\n\n\t\tPresentationToken ptCard =\n\t\t\t\t(PresentationToken) XmlUtils.getObjectFromXML(this.getClass().getResourceAsStream(\n\t\t\t\t\t\t\"/eu/abc4trust/sampleXml/presentationTokens/presentationTokenCreditCardForFriendlyGenTest.xml\"), true);\n\n\t\tPresentationToken ptHotel =\n\t\t\t\t(PresentationToken) XmlUtils.getObjectFromXML(this.getClass().getResourceAsStream(\n\t\t\t\t\t\t\"/eu/abc4trust/sampleXml/presentationTokens/presentationTokenHotelOption1.xml\"), true);\n\n\n\t\t//---------------------------------------------------\n\t\t//Generate friendly descriptions of revealed facts and attribute values\n\t\t//---------------------------------------------------\n\n\t\tRevealedFactsAndAttributeValues rvs = RevealedAttrsAndFactsdDescrGenerator.generateFriendlyDesciptions(ptCard.getPresentationTokenDescription(),uriCredspecs);\n\t\tprintRevealedAttributes(rvs,\n\t\t\t\tnew String[][] {\n\t\t\t\t{ \"en: The value of Card Type from Visa Credit Card: gold\" }\n\t\t\t\t, {\"sv: V\u00e4rdet av Status fr\u00e5n INGEN V\u00c4NLIG BESKRIVNING: 123123\"\n\t\t\t\t\t, \"en: The value of Status from Visa Credit Card: 123123\" }\n\t\t});\n\t\tprintRevealedFacts(rvs\n\t\t\t\t, new String[][] {\n\t\t\t\t{ \"sv: V\u00e4rdet av Utg\u00e5ngsdatum fr\u00e5n INGEN V\u00c4NLIG BESKRIVNING \u00e4r efter eller lika med 06.01.2012 01:00\"\n\t\t\t\t\t,\"en: The value of Expiration Date from Visa Credit Card is after or on 06.01.2012 01:00\" }\n\t\t\t\t,{\"sv: V\u00e4rdet av Utg\u00e5ngsdatum fr\u00e5n INGEN V\u00c4NLIG BESKRIVNING \u00e4r f\u00f6re eller lika med 06.01.2014 01:00\"\n\t\t\t\t\t, \"en: The value of Expiration Date from Visa Credit Card is before or on 06.01.2014 01:00\"\n\t\t\t\t}});\n\n\t\tRevealedFactsAndAttributeValues rvs2 = RevealedAttrsAndFactsdDescrGenerator.generateFriendlyDesciptions(ptHotel.getPresentationTokenDescription(), uriCredspecs);\n\t\tprintRevealedAttributes(rvs2, new String[][] {{}, {}});\n\t\tprintRevealedFacts(rvs2, new String[][] { \n\t\t\t\t{ \"sv: V\u00e4rdet av Utg\u00e5ngsdatum fr\u00e5n INGEN V\u00c4NLIG BESKRIVNING \u00e4r efter eller lika med 06.01.2012\",\n\t\t\t\t\"en: The value of Expiration Date from Visa Credit Card is after or on 06.01.2012\" }\n\t\t});\n\t}", "signature": "void testFriendlyTokenDescriptionGenerator()", "full_signature": "@Test public void testFriendlyTokenDescriptionGenerator()", "class_method_signature": "RevealedAttrsAndFactsdDescrGeneratorTest.testFriendlyTokenDescriptionGenerator()", "testcase": true, "constructor": false, "invocations": ["getObjectFromXML", "getResourceAsStream", "getClass", "put", "getSpecificationUID", "getObjectFromXML", "getResourceAsStream", "getClass", "put", "getSpecificationUID", "getObjectFromXML", "getResourceAsStream", "getClass", "getObjectFromXML", "getResourceAsStream", "getClass", "generateFriendlyDesciptions", "getPresentationTokenDescription", "printRevealedAttributes", "printRevealedFacts", "generateFriendlyDesciptions", "getPresentationTokenDescription", "printRevealedAttributes", "printRevealedFacts"]}, "focal_class": {"identifier": "RevealedAttrsAndFactsdDescrGenerator", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "generateFriendlyDesciptions", "parameters": "(PresentationTokenDescription ptd, \n\t\t\tMap<URI,CredentialSpecification> credSpecs)", "modifiers": "public static", "return": "RevealedFactsAndAttributeValues", "signature": "RevealedFactsAndAttributeValues generateFriendlyDesciptions(PresentationTokenDescription ptd, \n\t\t\tMap<URI,CredentialSpecification> credSpecs)", "full_signature": "public static RevealedFactsAndAttributeValues generateFriendlyDesciptions(PresentationTokenDescription ptd, \n\t\t\tMap<URI,CredentialSpecification> credSpecs)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.generateFriendlyDesciptions(PresentationTokenDescription ptd, \n\t\t\tMap<URI,CredentialSpecification> credSpecs)", "testcase": false, "constructor": false}, {"identifier": "generateFriendlyDesciptions", "parameters": "(PresentationTokenDescription ptd, \n\t\t\tMap<URI,CredentialSpecification> credSpecs, Map<URI,IssuerParameters> isParams)", "modifiers": "public static", "return": "RevealedFactsAndAttributeValues", "signature": "RevealedFactsAndAttributeValues generateFriendlyDesciptions(PresentationTokenDescription ptd, \n\t\t\tMap<URI,CredentialSpecification> credSpecs, Map<URI,IssuerParameters> isParams)", "full_signature": "public static RevealedFactsAndAttributeValues generateFriendlyDesciptions(PresentationTokenDescription ptd, \n\t\t\tMap<URI,CredentialSpecification> credSpecs, Map<URI,IssuerParameters> isParams)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.generateFriendlyDesciptions(PresentationTokenDescription ptd, \n\t\t\tMap<URI,CredentialSpecification> credSpecs, Map<URI,IssuerParameters> isParams)", "testcase": false, "constructor": false}, {"identifier": "composeFriendlyDescOfRevealedFactsAndAttributeValues", "parameters": "(\n\t\t\tPolicyTranslator policyTranslator, Map<String,IssuerParameters> isParams)", "modifiers": "private static", "return": "RevealedFactsAndAttributeValues", "signature": "RevealedFactsAndAttributeValues composeFriendlyDescOfRevealedFactsAndAttributeValues(\n\t\t\tPolicyTranslator policyTranslator, Map<String,IssuerParameters> isParams)", "full_signature": "private static RevealedFactsAndAttributeValues composeFriendlyDescOfRevealedFactsAndAttributeValues(\n\t\t\tPolicyTranslator policyTranslator, Map<String,IssuerParameters> isParams)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.composeFriendlyDescOfRevealedFactsAndAttributeValues(\n\t\t\tPolicyTranslator policyTranslator, Map<String,IssuerParameters> isParams)", "testcase": false, "constructor": false}, {"identifier": "composeFriendlyFact", "parameters": "(MyPredicate mp, Map<String,List<FriendlyDescription>> credFriendlyDescr, Map<MyAttributeReference,List<FriendlyDescription>> attrFriendlyDescr, Map<String,IssuerParameters> issParams)", "modifiers": "private static", "return": "RevealedFact", "signature": "RevealedFact composeFriendlyFact(MyPredicate mp, Map<String,List<FriendlyDescription>> credFriendlyDescr, Map<MyAttributeReference,List<FriendlyDescription>> attrFriendlyDescr, Map<String,IssuerParameters> issParams)", "full_signature": "private static RevealedFact composeFriendlyFact(MyPredicate mp, Map<String,List<FriendlyDescription>> credFriendlyDescr, Map<MyAttributeReference,List<FriendlyDescription>> attrFriendlyDescr, Map<String,IssuerParameters> issParams)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.composeFriendlyFact(MyPredicate mp, Map<String,List<FriendlyDescription>> credFriendlyDescr, Map<MyAttributeReference,List<FriendlyDescription>> attrFriendlyDescr, Map<String,IssuerParameters> issParams)", "testcase": false, "constructor": false}, {"identifier": "handlePredefinedPredicates", "parameters": "(MyAttributeReference attribute, String constant, GregorianCalendar date, MyPredicate mp, Map<String,FriendlyDescription> credLangDescMap, Map<String,FriendlyDescription> issLangDescMap, String lang)", "modifiers": "private static", "return": "StringBuilder", "signature": "StringBuilder handlePredefinedPredicates(MyAttributeReference attribute, String constant, GregorianCalendar date, MyPredicate mp, Map<String,FriendlyDescription> credLangDescMap, Map<String,FriendlyDescription> issLangDescMap, String lang)", "full_signature": "private static StringBuilder handlePredefinedPredicates(MyAttributeReference attribute, String constant, GregorianCalendar date, MyPredicate mp, Map<String,FriendlyDescription> credLangDescMap, Map<String,FriendlyDescription> issLangDescMap, String lang)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.handlePredefinedPredicates(MyAttributeReference attribute, String constant, GregorianCalendar date, MyPredicate mp, Map<String,FriendlyDescription> credLangDescMap, Map<String,FriendlyDescription> issLangDescMap, String lang)", "testcase": false, "constructor": false}, {"identifier": "composeFriendlyAttributeValue", "parameters": "(List<FriendlyDescription> credentialName, List<FriendlyDescription> attributeName, MyAttributeValue attributeValue)", "modifiers": "private static", "return": "List<FriendlyDescription>", "signature": "List<FriendlyDescription> composeFriendlyAttributeValue(List<FriendlyDescription> credentialName, List<FriendlyDescription> attributeName, MyAttributeValue attributeValue)", "full_signature": "private static List<FriendlyDescription> composeFriendlyAttributeValue(List<FriendlyDescription> credentialName, List<FriendlyDescription> attributeName, MyAttributeValue attributeValue)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.composeFriendlyAttributeValue(List<FriendlyDescription> credentialName, List<FriendlyDescription> attributeName, MyAttributeValue attributeValue)", "testcase": false, "constructor": false}, {"identifier": "translateFromToLang", "parameters": "(String language)", "modifiers": "private static", "return": "String", "signature": "String translateFromToLang(String language)", "full_signature": "private static String translateFromToLang(String language)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.translateFromToLang(String language)", "testcase": false, "constructor": false}, {"identifier": "translateTheValueOfLang", "parameters": "(String language)", "modifiers": "private static", "return": "String", "signature": "String translateTheValueOfLang(String language)", "full_signature": "private static String translateTheValueOfLang(String language)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.translateTheValueOfLang(String language)", "testcase": false, "constructor": false}, {"identifier": "createEmptyFriendlyDescription", "parameters": "()", "modifiers": "private static", "return": "FriendlyDescription", "signature": "FriendlyDescription createEmptyFriendlyDescription()", "full_signature": "private static FriendlyDescription createEmptyFriendlyDescription()", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.createEmptyFriendlyDescription()", "testcase": false, "constructor": false}, {"identifier": "getFriendlyFunction", "parameters": "(OperationType function, String lang, String argumentsType)", "modifiers": "private static", "return": "String", "signature": "String getFriendlyFunction(OperationType function, String lang, String argumentsType)", "full_signature": "private static String getFriendlyFunction(OperationType function, String lang, String argumentsType)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.getFriendlyFunction(OperationType function, String lang, String argumentsType)", "testcase": false, "constructor": false}, {"identifier": "getFriendlyDate", "parameters": "(MyAttributeValue av)", "modifiers": "private static", "return": "String", "signature": "String getFriendlyDate(MyAttributeValue av)", "full_signature": "private static String getFriendlyDate(MyAttributeValue av)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.getFriendlyDate(MyAttributeValue av)", "testcase": false, "constructor": false}, {"identifier": "getDateValue", "parameters": "(MyAttributeValue av)", "modifiers": "private static", "return": "GregorianCalendar", "signature": "GregorianCalendar getDateValue(MyAttributeValue av)", "full_signature": "private static GregorianCalendar getDateValue(MyAttributeValue av)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.getDateValue(MyAttributeValue av)", "testcase": false, "constructor": false}, {"identifier": "getDateTimeValue", "parameters": "(MyAttributeValue av)", "modifiers": "private static", "return": "GregorianCalendar", "signature": "GregorianCalendar getDateTimeValue(MyAttributeValue av)", "full_signature": "private static GregorianCalendar getDateTimeValue(MyAttributeValue av)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.getDateTimeValue(MyAttributeValue av)", "testcase": false, "constructor": false}, {"identifier": "getFriendlyDateTime", "parameters": "(MyAttributeValue av)", "modifiers": "private static", "return": "String", "signature": "String getFriendlyDateTime(MyAttributeValue av)", "full_signature": "private static String getFriendlyDateTime(MyAttributeValue av)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.getFriendlyDateTime(MyAttributeValue av)", "testcase": false, "constructor": false}, {"identifier": "getAliasCredSpecList", "parameters": "(PresentationTokenDescription ptd, Map<URI,CredentialSpecification> credSpecs)", "modifiers": "private static", "return": "Map<String, CredentialSpecification>", "signature": "Map<String, CredentialSpecification> getAliasCredSpecList(PresentationTokenDescription ptd, Map<URI,CredentialSpecification> credSpecs)", "full_signature": "private static Map<String, CredentialSpecification> getAliasCredSpecList(PresentationTokenDescription ptd, Map<URI,CredentialSpecification> credSpecs)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.getAliasCredSpecList(PresentationTokenDescription ptd, Map<URI,CredentialSpecification> credSpecs)", "testcase": false, "constructor": false}, {"identifier": "getAliasIssParamsList", "parameters": "(PresentationTokenDescription ptd, Map<URI,IssuerParameters> issParams)", "modifiers": "private static", "return": "Map<String, IssuerParameters>", "signature": "Map<String, IssuerParameters> getAliasIssParamsList(PresentationTokenDescription ptd, Map<URI,IssuerParameters> issParams)", "full_signature": "private static Map<String, IssuerParameters> getAliasIssParamsList(PresentationTokenDescription ptd, Map<URI,IssuerParameters> issParams)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.getAliasIssParamsList(PresentationTokenDescription ptd, Map<URI,IssuerParameters> issParams)", "testcase": false, "constructor": false}, {"identifier": "removeTime", "parameters": "(GregorianCalendar today)", "modifiers": "private static", "return": "Date", "signature": "Date removeTime(GregorianCalendar today)", "full_signature": "private static Date removeTime(GregorianCalendar today)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.removeTime(GregorianCalendar today)", "testcase": false, "constructor": false}, {"identifier": "removeMilliseconds", "parameters": "(GregorianCalendar today)", "modifiers": "private static", "return": "Date", "signature": "Date removeMilliseconds(GregorianCalendar today)", "full_signature": "private static Date removeMilliseconds(GregorianCalendar today)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.removeMilliseconds(GregorianCalendar today)", "testcase": false, "constructor": false}], "file": "Code/core-abce/abce-components/src/main/java/eu/abc4trust/util/RevealedAttrsAndFactsdDescrGenerator.java"}, "focal_method": {"identifier": "generateFriendlyDesciptions", "parameters": "(PresentationTokenDescription ptd, \n\t\t\tMap<URI,CredentialSpecification> credSpecs)", "modifiers": "public static", "return": "RevealedFactsAndAttributeValues", "body": "public static RevealedFactsAndAttributeValues generateFriendlyDesciptions(PresentationTokenDescription ptd, \n\t\t\tMap<URI,CredentialSpecification> credSpecs){\n\t\tPolicyTranslator pt = new PolicyTranslator(ptd, getAliasCredSpecList(ptd,credSpecs));\n\t\tRevealedFactsAndAttributeValues ret = composeFriendlyDescOfRevealedFactsAndAttributeValues(pt, null);\t\n\t\treturn ret;\n\t}", "signature": "RevealedFactsAndAttributeValues generateFriendlyDesciptions(PresentationTokenDescription ptd, \n\t\t\tMap<URI,CredentialSpecification> credSpecs)", "full_signature": "public static RevealedFactsAndAttributeValues generateFriendlyDesciptions(PresentationTokenDescription ptd, \n\t\t\tMap<URI,CredentialSpecification> credSpecs)", "class_method_signature": "RevealedAttrsAndFactsdDescrGenerator.generateFriendlyDesciptions(PresentationTokenDescription ptd, \n\t\t\tMap<URI,CredentialSpecification> credSpecs)", "testcase": false, "constructor": false, "invocations": ["getAliasCredSpecList", "composeFriendlyDescOfRevealedFactsAndAttributeValues"]}, "repository": {"repo_id": 7687890, "url": "https://github.com/p2abcengine/p2abcengine", "language": "Java", "is_fork": false, "fork_count": 25, "stargazer_count": 71, "size": 11790, "license": "licensed"}}