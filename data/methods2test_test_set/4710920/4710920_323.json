{"test_class": {"identifier": "UnsafeStringWriterTest", "superclass": "", "interfaces": "", "fields": [], "file": "dubbo-common/src/test/java/org/apache/dubbo/common/io/UnsafeStringWriterTest.java"}, "test_case": {"identifier": "testWrite", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWrite() {\n        UnsafeStringWriter writer = new UnsafeStringWriter();\n        writer.write(\"a\");\n        writer.write(\"abc\", 1, 1);\n        writer.write(99);\n        writer.flush();\n        writer.close();\n\n        assertThat(writer.toString(), is(\"abc\"));\n    }", "signature": "void testWrite()", "full_signature": "@Test public void testWrite()", "class_method_signature": "UnsafeStringWriterTest.testWrite()", "testcase": true, "constructor": false, "invocations": ["write", "write", "write", "flush", "close", "assertThat", "toString", "is"]}, "focal_class": {"identifier": "UnsafeStringWriter", "superclass": "extends Writer", "interfaces": "", "fields": [{"original_string": "private StringBuilder mBuffer;", "modifier": "private", "type": "StringBuilder", "declarator": "mBuffer", "var_name": "mBuffer"}], "methods": [{"identifier": "UnsafeStringWriter", "parameters": "()", "modifiers": "public", "return": "", "signature": " UnsafeStringWriter()", "full_signature": "public  UnsafeStringWriter()", "class_method_signature": "UnsafeStringWriter.UnsafeStringWriter()", "testcase": false, "constructor": true}, {"identifier": "UnsafeStringWriter", "parameters": "(int size)", "modifiers": "public", "return": "", "signature": " UnsafeStringWriter(int size)", "full_signature": "public  UnsafeStringWriter(int size)", "class_method_signature": "UnsafeStringWriter.UnsafeStringWriter(int size)", "testcase": false, "constructor": true}, {"identifier": "write", "parameters": "(int c)", "modifiers": "@Override public", "return": "void", "signature": "void write(int c)", "full_signature": "@Override public void write(int c)", "class_method_signature": "UnsafeStringWriter.write(int c)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(char[] cs)", "modifiers": "@Override public", "return": "void", "signature": "void write(char[] cs)", "full_signature": "@Override public void write(char[] cs)", "class_method_signature": "UnsafeStringWriter.write(char[] cs)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(char[] cs, int off, int len)", "modifiers": "@Override public", "return": "void", "signature": "void write(char[] cs, int off, int len)", "full_signature": "@Override public void write(char[] cs, int off, int len)", "class_method_signature": "UnsafeStringWriter.write(char[] cs, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String str)", "modifiers": "@Override public", "return": "void", "signature": "void write(String str)", "full_signature": "@Override public void write(String str)", "class_method_signature": "UnsafeStringWriter.write(String str)", "testcase": false, "constructor": false}, {"identifier": "write", "parameters": "(String str, int off, int len)", "modifiers": "@Override public", "return": "void", "signature": "void write(String str, int off, int len)", "full_signature": "@Override public void write(String str, int off, int len)", "class_method_signature": "UnsafeStringWriter.write(String str, int off, int len)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(CharSequence csq)", "modifiers": "@Override public", "return": "Writer", "signature": "Writer append(CharSequence csq)", "full_signature": "@Override public Writer append(CharSequence csq)", "class_method_signature": "UnsafeStringWriter.append(CharSequence csq)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(CharSequence csq, int start, int end)", "modifiers": "@Override public", "return": "Writer", "signature": "Writer append(CharSequence csq, int start, int end)", "full_signature": "@Override public Writer append(CharSequence csq, int start, int end)", "class_method_signature": "UnsafeStringWriter.append(CharSequence csq, int start, int end)", "testcase": false, "constructor": false}, {"identifier": "append", "parameters": "(char c)", "modifiers": "@Override public", "return": "Writer", "signature": "Writer append(char c)", "full_signature": "@Override public Writer append(char c)", "class_method_signature": "UnsafeStringWriter.append(char c)", "testcase": false, "constructor": false}, {"identifier": "close", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void close()", "full_signature": "@Override public void close()", "class_method_signature": "UnsafeStringWriter.close()", "testcase": false, "constructor": false}, {"identifier": "flush", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void flush()", "full_signature": "@Override public void flush()", "class_method_signature": "UnsafeStringWriter.flush()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "UnsafeStringWriter.toString()", "testcase": false, "constructor": false}], "file": "dubbo-common/src/main/java/org/apache/dubbo/common/io/UnsafeStringWriter.java"}, "focal_method": {"identifier": "write", "parameters": "(int c)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void write(int c) {\n        mBuffer.append((char) c);\n    }", "signature": "void write(int c)", "full_signature": "@Override public void write(int c)", "class_method_signature": "UnsafeStringWriter.write(int c)", "testcase": false, "constructor": false, "invocations": ["append"]}, "repository": {"repo_id": 4710920, "url": "https://github.com/apache/dubbo", "stars": 30960, "created": "6/19/2012 7:56:02 AM +00:00", "updates": "2020-01-27T14:21:03+00:00", "fork": "False", "license": "licensed"}}