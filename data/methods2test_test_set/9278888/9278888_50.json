{"test_class": {"identifier": "RpcClientHandlerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "TraceContext context = TraceContext.newBuilder().traceId(1L).spanId(1L).sampled(true).build();", "modifier": "", "type": "TraceContext", "declarator": "context = TraceContext.newBuilder().traceId(1L).spanId(1L).sampled(true).build()", "var_name": "context"}, {"original_string": "TestSpanHandler spans = new TestSpanHandler();", "modifier": "", "type": "TestSpanHandler", "declarator": "spans = new TestSpanHandler()", "var_name": "spans"}, {"original_string": "RpcTracing httpTracing;", "modifier": "", "type": "RpcTracing", "declarator": "httpTracing", "var_name": "httpTracing"}, {"original_string": "RpcClientHandler handler;", "modifier": "", "type": "RpcClientHandler", "declarator": "handler", "var_name": "handler"}, {"original_string": "@Mock(answer = CALLS_REAL_METHODS) RpcClientRequest request;", "modifier": "@Mock(answer = CALLS_REAL_METHODS)", "type": "RpcClientRequest", "declarator": "request", "var_name": "request"}, {"original_string": "@Mock(answer = CALLS_REAL_METHODS) RpcClientResponse response;", "modifier": "@Mock(answer = CALLS_REAL_METHODS)", "type": "RpcClientResponse", "declarator": "response", "var_name": "response"}], "file": "instrumentation/rpc/src/test/java/brave/rpc/RpcClientHandlerTest.java"}, "test_case": {"identifier": "handleSend_samplerSeesRpcClientRequest", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test public void handleSend_samplerSeesRpcClientRequest() {\n    SamplerFunction<RpcRequest> clientSampler = mock(SamplerFunction.class);\n    init(httpTracingBuilder(tracingBuilder()).clientSampler(clientSampler));\n\n    handler.handleSend(request);\n\n    verify(clientSampler).trySample(request);\n  }", "signature": "void handleSend_samplerSeesRpcClientRequest()", "full_signature": "@Test public void handleSend_samplerSeesRpcClientRequest()", "class_method_signature": "RpcClientHandlerTest.handleSend_samplerSeesRpcClientRequest()", "testcase": true, "constructor": false, "invocations": ["mock", "init", "clientSampler", "httpTracingBuilder", "tracingBuilder", "handleSend", "trySample", "verify"]}, "focal_class": {"identifier": "RpcClientHandler", "superclass": "extends RpcHandler<RpcClientRequest, RpcClientResponse>", "interfaces": "", "fields": [{"original_string": "final Tracer tracer;", "modifier": "final", "type": "Tracer", "declarator": "tracer", "var_name": "tracer"}, {"original_string": "final SamplerFunction<RpcRequest> sampler;", "modifier": "final", "type": "SamplerFunction<RpcRequest>", "declarator": "sampler", "var_name": "sampler"}, {"original_string": "final Injector<RpcClientRequest> injector;", "modifier": "final", "type": "Injector<RpcClientRequest>", "declarator": "injector", "var_name": "injector"}], "methods": [{"identifier": "create", "parameters": "(RpcTracing rpcTracing)", "modifiers": "public static", "return": "RpcClientHandler", "signature": "RpcClientHandler create(RpcTracing rpcTracing)", "full_signature": "public static RpcClientHandler create(RpcTracing rpcTracing)", "class_method_signature": "RpcClientHandler.create(RpcTracing rpcTracing)", "testcase": false, "constructor": false}, {"identifier": "RpcClientHandler", "parameters": "(RpcTracing rpcTracing)", "modifiers": "", "return": "", "signature": " RpcClientHandler(RpcTracing rpcTracing)", "full_signature": "  RpcClientHandler(RpcTracing rpcTracing)", "class_method_signature": "RpcClientHandler.RpcClientHandler(RpcTracing rpcTracing)", "testcase": false, "constructor": true}, {"identifier": "handleSend", "parameters": "(RpcClientRequest request)", "modifiers": "public", "return": "Span", "signature": "Span handleSend(RpcClientRequest request)", "full_signature": "public Span handleSend(RpcClientRequest request)", "class_method_signature": "RpcClientHandler.handleSend(RpcClientRequest request)", "testcase": false, "constructor": false}, {"identifier": "handleSendWithParent", "parameters": "(RpcClientRequest request, @Nullable TraceContext parent)", "modifiers": "public", "return": "Span", "signature": "Span handleSendWithParent(RpcClientRequest request, @Nullable TraceContext parent)", "full_signature": "public Span handleSendWithParent(RpcClientRequest request, @Nullable TraceContext parent)", "class_method_signature": "RpcClientHandler.handleSendWithParent(RpcClientRequest request, @Nullable TraceContext parent)", "testcase": false, "constructor": false}, {"identifier": "handleSend", "parameters": "(RpcClientRequest request, Span span)", "modifiers": "public", "return": "Span", "signature": "Span handleSend(RpcClientRequest request, Span span)", "full_signature": "public Span handleSend(RpcClientRequest request, Span span)", "class_method_signature": "RpcClientHandler.handleSend(RpcClientRequest request, Span span)", "testcase": false, "constructor": false}, {"identifier": "handleReceive", "parameters": "(RpcClientResponse response, Span span)", "modifiers": "public", "return": "void", "signature": "void handleReceive(RpcClientResponse response, Span span)", "full_signature": "public void handleReceive(RpcClientResponse response, Span span)", "class_method_signature": "RpcClientHandler.handleReceive(RpcClientResponse response, Span span)", "testcase": false, "constructor": false}], "file": "instrumentation/rpc/src/main/java/brave/rpc/RpcClientHandler.java"}, "focal_method": {"identifier": "handleSend", "parameters": "(RpcClientRequest request)", "modifiers": "public", "return": "Span", "body": "public Span handleSend(RpcClientRequest request) {\n    if (request == null) throw new NullPointerException(\"request == null\");\n    return handleSend(request, tracer.nextSpan(sampler, request));\n  }", "signature": "Span handleSend(RpcClientRequest request)", "full_signature": "public Span handleSend(RpcClientRequest request)", "class_method_signature": "RpcClientHandler.handleSend(RpcClientRequest request)", "testcase": false, "constructor": false, "invocations": ["handleSend", "nextSpan"]}, "repository": {"repo_id": 9278888, "url": "https://github.com/openzipkin/brave", "stars": 1754, "created": "4/7/2013 3:48:18 PM +00:00", "updates": "2020-01-26T11:52:41+00:00", "fork": "False", "license": "licensed"}}