{"test_class": {"identifier": "SecurityAnalysisResultMergerTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private SecurityAnalysisResult result1;", "modifier": "private", "type": "SecurityAnalysisResult", "declarator": "result1", "var_name": "result1"}, {"original_string": "private SecurityAnalysisResult result2;", "modifier": "private", "type": "SecurityAnalysisResult", "declarator": "result2", "var_name": "result2"}, {"original_string": "private SecurityAnalysisResult failedResult;", "modifier": "private", "type": "SecurityAnalysisResult", "declarator": "failedResult", "var_name": "failedResult"}, {"original_string": "private LimitViolationsResult preContingencyResult;", "modifier": "private", "type": "LimitViolationsResult", "declarator": "preContingencyResult", "var_name": "preContingencyResult"}, {"original_string": "private LimitViolationsResult failedPreContingencyResult;", "modifier": "private", "type": "LimitViolationsResult", "declarator": "failedPreContingencyResult", "var_name": "failedPreContingencyResult"}, {"original_string": "private PostContingencyResult postContingencyResult;", "modifier": "private", "type": "PostContingencyResult", "declarator": "postContingencyResult", "var_name": "postContingencyResult"}, {"original_string": "private PostContingencyResult postContingencyResult2;", "modifier": "private", "type": "PostContingencyResult", "declarator": "postContingencyResult2", "var_name": "postContingencyResult2"}], "file": "security-analysis-api/src/test/java/com/powsybl/security/SecurityAnalysisResultMergerTest.java"}, "test_case": {"identifier": "testMerge", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testMerge() {\n        SecurityAnalysisResult[] results = new SecurityAnalysisResult[]{\n            result1, result2\n        };\n        SecurityAnalysisResult mergedResult = SecurityAnalysisResultMerger.merge(results);\n        assertEquals(preContingencyResult, mergedResult.getPreContingencyResult());\n        assertEquals(Arrays.asList(postContingencyResult, postContingencyResult2), mergedResult.getPostContingencyResults());\n    }", "signature": "void testMerge()", "full_signature": "@Test public void testMerge()", "class_method_signature": "SecurityAnalysisResultMergerTest.testMerge()", "testcase": true, "constructor": false, "invocations": ["merge", "assertEquals", "getPreContingencyResult", "assertEquals", "asList", "getPostContingencyResults"]}, "focal_class": {"identifier": "SecurityAnalysisResultMerger", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final LimitViolationsResult FAILED_N_STATE_RESULT = new LimitViolationsResult(false, Collections.emptyList());", "modifier": "private static final", "type": "LimitViolationsResult", "declarator": "FAILED_N_STATE_RESULT = new LimitViolationsResult(false, Collections.emptyList())", "var_name": "FAILED_N_STATE_RESULT"}, {"original_string": "public static final SecurityAnalysisResult FAILED_SECURITY_ANALYSIS_RESULT = new SecurityAnalysisResult(FAILED_N_STATE_RESULT, Collections.emptyList());", "modifier": "public static final", "type": "SecurityAnalysisResult", "declarator": "FAILED_SECURITY_ANALYSIS_RESULT = new SecurityAnalysisResult(FAILED_N_STATE_RESULT, Collections.emptyList())", "var_name": "FAILED_SECURITY_ANALYSIS_RESULT"}], "methods": [{"identifier": "merge", "parameters": "(SecurityAnalysisResult[] results)", "modifiers": "public static", "return": "SecurityAnalysisResult", "signature": "SecurityAnalysisResult merge(SecurityAnalysisResult[] results)", "full_signature": "public static SecurityAnalysisResult merge(SecurityAnalysisResult[] results)", "class_method_signature": "SecurityAnalysisResultMerger.merge(SecurityAnalysisResult[] results)", "testcase": false, "constructor": false}, {"identifier": "merge", "parameters": "(Collection<SecurityAnalysisResult> results)", "modifiers": "public static", "return": "SecurityAnalysisResult", "signature": "SecurityAnalysisResult merge(Collection<SecurityAnalysisResult> results)", "full_signature": "public static SecurityAnalysisResult merge(Collection<SecurityAnalysisResult> results)", "class_method_signature": "SecurityAnalysisResultMerger.merge(Collection<SecurityAnalysisResult> results)", "testcase": false, "constructor": false}, {"identifier": "SecurityAnalysisResultMerger", "parameters": "()", "modifiers": "private", "return": "", "signature": " SecurityAnalysisResultMerger()", "full_signature": "private  SecurityAnalysisResultMerger()", "class_method_signature": "SecurityAnalysisResultMerger.SecurityAnalysisResultMerger()", "testcase": false, "constructor": true}], "file": "security-analysis-api/src/main/java/com/powsybl/security/SecurityAnalysisResultMerger.java"}, "focal_method": {"identifier": "merge", "parameters": "(SecurityAnalysisResult[] results)", "modifiers": "public static", "return": "SecurityAnalysisResult", "body": "public static SecurityAnalysisResult merge(SecurityAnalysisResult[] results) {\n        //If one of the subtasks has failed, return a failed result\n        Objects.requireNonNull(results);\n        for (SecurityAnalysisResult subResult : results) {\n            if (!subResult.getPreContingencyResult().isComputationOk()) {\n                return FAILED_SECURITY_ANALYSIS_RESULT;\n            }\n        }\n\n        //Else, actually merge results\n        final SecurityAnalysisResult res = new SecurityAnalysisResult(\n                                results[0].getPreContingencyResult(), new ArrayList<>(results[0].getPostContingencyResults()))\n                                .setNetworkMetadata(results[0].getNetworkMetadata());\n        if (results.length > 1) {\n            Arrays.stream(results, 1, results.length).forEach(r -> res.getPostContingencyResults().addAll(r.getPostContingencyResults()));\n        }\n        return res;\n    }", "signature": "SecurityAnalysisResult merge(SecurityAnalysisResult[] results)", "full_signature": "public static SecurityAnalysisResult merge(SecurityAnalysisResult[] results)", "class_method_signature": "SecurityAnalysisResultMerger.merge(SecurityAnalysisResult[] results)", "testcase": false, "constructor": false, "invocations": ["requireNonNull", "isComputationOk", "getPreContingencyResult", "setNetworkMetadata", "getPreContingencyResult", "getPostContingencyResults", "getNetworkMetadata", "forEach", "stream", "addAll", "getPostContingencyResults", "getPostContingencyResults"]}, "repository": {"repo_id": 105284146, "url": "https://github.com/powsybl/powsybl-core", "stars": 53, "created": "9/29/2017 2:51:18 PM +00:00", "updates": "2020-01-27T10:39:13+00:00", "fork": "False", "license": "licensed"}}