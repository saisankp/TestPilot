{"test_class": {"identifier": "SentenceListPresenterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "@Mock\n    private SentenceList.View mView;", "modifier": "@Mock\n    private", "type": "SentenceList.View", "declarator": "mView", "var_name": "mView"}, {"original_string": "private SentenceListViewModel mModel;", "modifier": "private", "type": "SentenceListViewModel", "declarator": "mModel", "var_name": "mModel"}, {"original_string": "@Mock\n    private UseCaseHandler mLoadSentencesUseCaseHandler;", "modifier": "@Mock\n    private", "type": "UseCaseHandler", "declarator": "mLoadSentencesUseCaseHandler", "var_name": "mLoadSentencesUseCaseHandler"}, {"original_string": "@Mock\n    private LoadSentencesUC mLoadSentencesUC;", "modifier": "@Mock\n    private", "type": "LoadSentencesUC", "declarator": "mLoadSentencesUC", "var_name": "mLoadSentencesUC"}, {"original_string": "@Captor\n    private ArgumentCaptor<LoadSentencesUC.LoadSentencesCallback> mLoadSentencesCallbackCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<LoadSentencesUC.LoadSentencesCallback>", "declarator": "mLoadSentencesCallbackCaptor", "var_name": "mLoadSentencesCallbackCaptor"}, {"original_string": "@Captor\n    private ArgumentCaptor<LoadSentencesUC.LoadSentencesRequestParms> mLoadSentencesRequestParmsCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<LoadSentencesUC.LoadSentencesRequestParms>", "declarator": "mLoadSentencesRequestParmsCaptor", "var_name": "mLoadSentencesRequestParmsCaptor"}, {"original_string": "@Mock\n    private UseCaseHandler mUpdateFavoriteSentenceUseCaseHandler;", "modifier": "@Mock\n    private", "type": "UseCaseHandler", "declarator": "mUpdateFavoriteSentenceUseCaseHandler", "var_name": "mUpdateFavoriteSentenceUseCaseHandler"}, {"original_string": "@Mock\n    private UpdateFavoriteSentenceUC mUpdateFavoriteSentenceUC;", "modifier": "@Mock\n    private", "type": "UpdateFavoriteSentenceUC", "declarator": "mUpdateFavoriteSentenceUC", "var_name": "mUpdateFavoriteSentenceUC"}, {"original_string": "@Mock\n    private EventBus mEventBus;", "modifier": "@Mock\n    private", "type": "EventBus", "declarator": "mEventBus", "var_name": "mEventBus"}, {"original_string": "@Captor\n    private ArgumentCaptor<UpdateManualFetchFabEvent> mUpdateManualFetchFabEventCaptor;", "modifier": "@Captor\n    private", "type": "ArgumentCaptor<UpdateManualFetchFabEvent>", "declarator": "mUpdateManualFetchFabEventCaptor", "var_name": "mUpdateManualFetchFabEventCaptor"}, {"original_string": "private SentenceListPresenter mSentenceListPresenter;", "modifier": "private", "type": "SentenceListPresenter", "declarator": "mSentenceListPresenter", "var_name": "mSentenceListPresenter"}, {"original_string": "@Mock\n    private List<? extends Sentence> mSentences;", "modifier": "@Mock\n    private", "type": "List<? extends Sentence>", "declarator": "mSentences", "var_name": "mSentences"}], "file": "app/src/test/java/com/xixicm/de/presentation/presenter/SentenceListPresenterTest.java"}, "test_case": {"identifier": "testOnCreate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testOnCreate() {\n        mSentenceListPresenter.onCreate();\n        // register as event listener\n        verify(mEventBus).register(mSentenceListPresenter);\n    }", "signature": "void testOnCreate()", "full_signature": "@Test public void testOnCreate()", "class_method_signature": "SentenceListPresenterTest.testOnCreate()", "testcase": true, "constructor": false, "invocations": ["onCreate", "register", "verify"]}, "focal_class": {"identifier": "SentenceListPresenter", "superclass": "extends AbstractMvpPresenter<SentenceList.View, SentenceListViewModel>", "interfaces": "implements SentenceList.Presenter<SentenceList.View, SentenceListViewModel>", "fields": [{"original_string": "private UseCaseHandler mLoadSentencesUseCaseHandler;", "modifier": "private", "type": "UseCaseHandler", "declarator": "mLoadSentencesUseCaseHandler", "var_name": "mLoadSentencesUseCaseHandler"}, {"original_string": "private LoadSentencesUC mLoadSentencesUC;", "modifier": "private", "type": "LoadSentencesUC", "declarator": "mLoadSentencesUC", "var_name": "mLoadSentencesUC"}, {"original_string": "private LoadSentencesUC.LoadSentencesCallback mLoadSentenceCallback;", "modifier": "private", "type": "LoadSentencesUC.LoadSentencesCallback", "declarator": "mLoadSentenceCallback", "var_name": "mLoadSentenceCallback"}, {"original_string": "private UseCaseHandler mUpdateFavoriteSentenceUseCaseHandler;", "modifier": "private", "type": "UseCaseHandler", "declarator": "mUpdateFavoriteSentenceUseCaseHandler", "var_name": "mUpdateFavoriteSentenceUseCaseHandler"}, {"original_string": "private UpdateFavoriteSentenceUC mUpdateFavoriteSentenceUC;", "modifier": "private", "type": "UpdateFavoriteSentenceUC", "declarator": "mUpdateFavoriteSentenceUC", "var_name": "mUpdateFavoriteSentenceUC"}], "methods": [{"identifier": "SentenceListPresenter", "parameters": "()", "modifiers": "public", "return": "", "signature": " SentenceListPresenter()", "full_signature": "public  SentenceListPresenter()", "class_method_signature": "SentenceListPresenter.SentenceListPresenter()", "testcase": false, "constructor": true}, {"identifier": "setLoadSentencesUCAndHandler", "parameters": "(LoadSentencesUC loadSentencesUC, UseCaseHandler useCaseHandler)", "modifiers": "public", "return": "void", "signature": "void setLoadSentencesUCAndHandler(LoadSentencesUC loadSentencesUC, UseCaseHandler useCaseHandler)", "full_signature": "public void setLoadSentencesUCAndHandler(LoadSentencesUC loadSentencesUC, UseCaseHandler useCaseHandler)", "class_method_signature": "SentenceListPresenter.setLoadSentencesUCAndHandler(LoadSentencesUC loadSentencesUC, UseCaseHandler useCaseHandler)", "testcase": false, "constructor": false}, {"identifier": "setUpdateFavoriteSentenceUCAndHandler", "parameters": "(UpdateFavoriteSentenceUC updateFavoriteSentenceUC, UseCaseHandler useCaseHandler)", "modifiers": "public", "return": "void", "signature": "void setUpdateFavoriteSentenceUCAndHandler(UpdateFavoriteSentenceUC updateFavoriteSentenceUC, UseCaseHandler useCaseHandler)", "full_signature": "public void setUpdateFavoriteSentenceUCAndHandler(UpdateFavoriteSentenceUC updateFavoriteSentenceUC, UseCaseHandler useCaseHandler)", "class_method_signature": "SentenceListPresenter.setUpdateFavoriteSentenceUCAndHandler(UpdateFavoriteSentenceUC updateFavoriteSentenceUC, UseCaseHandler useCaseHandler)", "testcase": false, "constructor": false}, {"identifier": "createViewModel", "parameters": "()", "modifiers": "@Nullable @Override protected", "return": "SentenceListViewModel", "signature": "SentenceListViewModel createViewModel()", "full_signature": "@Nullable @Override protected SentenceListViewModel createViewModel()", "class_method_signature": "SentenceListPresenter.createViewModel()", "testcase": false, "constructor": false}, {"identifier": "loadSentences", "parameters": "(final boolean firstLoad)", "modifiers": "@Override public", "return": "void", "signature": "void loadSentences(final boolean firstLoad)", "full_signature": "@Override public void loadSentences(final boolean firstLoad)", "class_method_signature": "SentenceListPresenter.loadSentences(final boolean firstLoad)", "testcase": false, "constructor": false}, {"identifier": "findNeedFocusedPosition", "parameters": "(List<? extends Sentence> sentences)", "modifiers": "private", "return": "int", "signature": "int findNeedFocusedPosition(List<? extends Sentence> sentences)", "full_signature": "private int findNeedFocusedPosition(List<? extends Sentence> sentences)", "class_method_signature": "SentenceListPresenter.findNeedFocusedPosition(List<? extends Sentence> sentences)", "testcase": false, "constructor": false}, {"identifier": "openSentence", "parameters": "(long sentenceId)", "modifiers": "@Override public", "return": "void", "signature": "void openSentence(long sentenceId)", "full_signature": "@Override public void openSentence(long sentenceId)", "class_method_signature": "SentenceListPresenter.openSentence(long sentenceId)", "testcase": false, "constructor": false}, {"identifier": "setFavorite", "parameters": "(@NonNull Sentence sentence, boolean favorite)", "modifiers": "@Override public", "return": "void", "signature": "void setFavorite(@NonNull Sentence sentence, boolean favorite)", "full_signature": "@Override public void setFavorite(@NonNull Sentence sentence, boolean favorite)", "class_method_signature": "SentenceListPresenter.setFavorite(@NonNull Sentence sentence, boolean favorite)", "testcase": false, "constructor": false}, {"identifier": "onCreate", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onCreate()", "full_signature": "@Override public void onCreate()", "class_method_signature": "SentenceListPresenter.onCreate()", "testcase": false, "constructor": false}, {"identifier": "onActivityCreated", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onActivityCreated()", "full_signature": "@Override public void onActivityCreated()", "class_method_signature": "SentenceListPresenter.onActivityCreated()", "testcase": false, "constructor": false}, {"identifier": "onSentenceChanged", "parameters": "(SentenceChangedEvent event)", "modifiers": "@Subscribe @Override public", "return": "void", "signature": "void onSentenceChanged(SentenceChangedEvent event)", "full_signature": "@Subscribe @Override public void onSentenceChanged(SentenceChangedEvent event)", "class_method_signature": "SentenceListPresenter.onSentenceChanged(SentenceChangedEvent event)", "testcase": false, "constructor": false}, {"identifier": "setNeedAutoFocused", "parameters": "(boolean needAutoFocused)", "modifiers": "@Override public", "return": "void", "signature": "void setNeedAutoFocused(boolean needAutoFocused)", "full_signature": "@Override public void setNeedAutoFocused(boolean needAutoFocused)", "class_method_signature": "SentenceListPresenter.setNeedAutoFocused(boolean needAutoFocused)", "testcase": false, "constructor": false}, {"identifier": "onDestroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onDestroy()", "full_signature": "@Override public void onDestroy()", "class_method_signature": "SentenceListPresenter.onDestroy()", "testcase": false, "constructor": false}, {"identifier": "getEventBus", "parameters": "()", "modifiers": "@VisibleForTesting public", "return": "EventBus", "signature": "EventBus getEventBus()", "full_signature": "@VisibleForTesting public EventBus getEventBus()", "class_method_signature": "SentenceListPresenter.getEventBus()", "testcase": false, "constructor": false}], "file": "app/src/main/java/com/xixicm/de/presentation/presenter/SentenceListPresenter.java"}, "focal_method": {"identifier": "onCreate", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void onCreate() {\n        // register in onCreate for background SentenceChangedEvent\n        getEventBus().register(this);\n    }", "signature": "void onCreate()", "full_signature": "@Override public void onCreate()", "class_method_signature": "SentenceListPresenter.onCreate()", "testcase": false, "constructor": false, "invocations": ["register", "getEventBus"]}, "repository": {"repo_id": 66622989, "url": "https://github.com/enuoCM/DE-MVP-Clean", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 17, "size": 278, "license": "licensed"}}