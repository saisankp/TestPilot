{"test_class": {"identifier": "DrainCommandHandlerTest", "superclass": "extends TestBase", "interfaces": "", "fields": [], "file": "domain/src/test/java/org/m4m/domain/pipeline/DrainCommandHandlerTest.java"}, "test_case": {"identifier": "encoderShouldNotSwapBuffersIfEof", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void encoderShouldNotSwapBuffersIfEof() {\n        VideoDecoder decoder = create.videoDecoder().construct();\n        ISurface surface = create.surface().construct();\n        Encoder encoder = create.videoEncoder().with(surface).construct();\n\n        decoder.drain(0);\n        decoder.setOutputSurface(surface);\n        encoder.getInputCommandQueue().dequeue();\n        new DrainCommandHandler(encoder).handle();\n\n        verify(surface, never()).awaitNewImage();\n        verify(surface, never()).swapBuffers();\n    }", "signature": "void encoderShouldNotSwapBuffersIfEof()", "full_signature": "@Test public void encoderShouldNotSwapBuffersIfEof()", "class_method_signature": "DrainCommandHandlerTest.encoderShouldNotSwapBuffersIfEof()", "testcase": true, "constructor": false, "invocations": ["construct", "videoDecoder", "construct", "surface", "construct", "with", "videoEncoder", "drain", "setOutputSurface", "dequeue", "getInputCommandQueue", "handle", "awaitNewImage", "verify", "never", "swapBuffers", "verify", "never"]}, "focal_class": {"identifier": "DrainCommandHandler", "superclass": "", "interfaces": "implements ICommandHandler", "fields": [{"original_string": "protected final MediaCodecPlugin plugin;", "modifier": "protected final", "type": "MediaCodecPlugin", "declarator": "plugin", "var_name": "plugin"}], "methods": [{"identifier": "DrainCommandHandler", "parameters": "(MediaCodecPlugin plugin)", "modifiers": "public", "return": "", "signature": " DrainCommandHandler(MediaCodecPlugin plugin)", "full_signature": "public  DrainCommandHandler(MediaCodecPlugin plugin)", "class_method_signature": "DrainCommandHandler.DrainCommandHandler(MediaCodecPlugin plugin)", "testcase": false, "constructor": true}, {"identifier": "handle", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void handle()", "full_signature": "@Override public void handle()", "class_method_signature": "DrainCommandHandler.handle()", "testcase": false, "constructor": false}], "file": "domain/src/main/java/org/m4m/domain/pipeline/DrainCommandHandler.java"}, "focal_method": {"identifier": "handle", "parameters": "()", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void handle() {\n        plugin.drain(0);\n    }", "signature": "void handle()", "full_signature": "@Override public void handle()", "class_method_signature": "DrainCommandHandler.handle()", "testcase": false, "constructor": false, "invocations": ["drain"]}, "repository": {"repo_id": 25040346, "url": "https://github.com/INDExOS/media-for-mobile", "language": "Java", "is_fork": false, "fork_count": 167, "stargazer_count": 416, "size": 619, "license": "licensed"}}