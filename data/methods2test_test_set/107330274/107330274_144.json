{"test_class": {"identifier": "TemplateSanitizerTest", "superclass": "", "interfaces": "", "fields": [], "file": "titus-common/src/test/java/com/netflix/titus/common/model/sanitizer/internal/TemplateSanitizerTest.java"}, "test_case": {"identifier": "testPrimitiveValueTemplate", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testPrimitiveValueTemplate() throws Exception {\n        Root root = new Root(\n                null,\n                new Child(null, 1, 2),\n                null\n        );\n\n        Optional<Object> sanitizedOpt = new TemplateSanitizer(\n                path -> path.equals(\"child.childName\") ? Optional.of(\"ChildGuest\") : Optional.empty(),\n                type -> true\n        ).apply(root);\n        assertThat(sanitizedOpt).isPresent();\n\n        Root sanitized = (Root) sanitizedOpt.get();\n        assertThat(sanitized.getName()).isNull();\n        assertThat(sanitized.getChild().getChildName()).isEqualTo(\"ChildGuest\");\n        assertThat(sanitized.getChild().getMin()).isEqualTo(1);\n        assertThat(sanitized.getChild().getMax()).isEqualTo(2);\n        assertThat(sanitized.getNullableChild()).isNull();\n    }", "signature": "void testPrimitiveValueTemplate()", "full_signature": "@Test public void testPrimitiveValueTemplate()", "class_method_signature": "TemplateSanitizerTest.testPrimitiveValueTemplate()", "testcase": true, "constructor": false, "invocations": ["apply", "equals", "of", "empty", "isPresent", "assertThat", "get", "isNull", "assertThat", "getName", "isEqualTo", "assertThat", "getChildName", "getChild", "isEqualTo", "assertThat", "getMin", "getChild", "isEqualTo", "assertThat", "getMax", "getChild", "isNull", "assertThat", "getNullableChild"]}, "focal_class": {"identifier": "TemplateSanitizer", "superclass": "extends AbstractFieldSanitizer<String>", "interfaces": "", "fields": [{"original_string": "private final Function<String, Optional<Object>> templateResolver;", "modifier": "private final", "type": "Function<String, Optional<Object>>", "declarator": "templateResolver", "var_name": "templateResolver"}, {"original_string": "private final Function<Class<?>, Boolean> innerEntityPredicate;", "modifier": "private final", "type": "Function<Class<?>, Boolean>", "declarator": "innerEntityPredicate", "var_name": "innerEntityPredicate"}], "methods": [{"identifier": "TemplateSanitizer", "parameters": "(Function<String, Optional<Object>> templateResolver,\n                             Function<Class<?>, Boolean> innerEntityPredicate)", "modifiers": "public", "return": "", "signature": " TemplateSanitizer(Function<String, Optional<Object>> templateResolver,\n                             Function<Class<?>, Boolean> innerEntityPredicate)", "full_signature": "public  TemplateSanitizer(Function<String, Optional<Object>> templateResolver,\n                             Function<Class<?>, Boolean> innerEntityPredicate)", "class_method_signature": "TemplateSanitizer.TemplateSanitizer(Function<String, Optional<Object>> templateResolver,\n                             Function<Class<?>, Boolean> innerEntityPredicate)", "testcase": false, "constructor": true}, {"identifier": "apply", "parameters": "(Object entity)", "modifiers": "@Override public", "return": "Optional<Object>", "signature": "Optional<Object> apply(Object entity)", "full_signature": "@Override public Optional<Object> apply(Object entity)", "class_method_signature": "TemplateSanitizer.apply(Object entity)", "testcase": false, "constructor": false}, {"identifier": "sanitizeFieldValue", "parameters": "(Field field, Object value, String path)", "modifiers": "@Override protected", "return": "Optional<Object>", "signature": "Optional<Object> sanitizeFieldValue(Field field, Object value, String path)", "full_signature": "@Override protected Optional<Object> sanitizeFieldValue(Field field, Object value, String path)", "class_method_signature": "TemplateSanitizer.sanitizeFieldValue(Field field, Object value, String path)", "testcase": false, "constructor": false}, {"identifier": "isEnabled", "parameters": "(Field field)", "modifiers": "private static", "return": "boolean", "signature": "boolean isEnabled(Field field)", "full_signature": "private static boolean isEnabled(Field field)", "class_method_signature": "TemplateSanitizer.isEnabled(Field field)", "testcase": false, "constructor": false}, {"identifier": "replaceEmptyValue", "parameters": "(Field field)", "modifiers": "private static", "return": "boolean", "signature": "boolean replaceEmptyValue(Field field)", "full_signature": "private static boolean replaceEmptyValue(Field field)", "class_method_signature": "TemplateSanitizer.replaceEmptyValue(Field field)", "testcase": false, "constructor": false}], "file": "titus-common/src/main/java/com/netflix/titus/common/model/sanitizer/internal/TemplateSanitizer.java"}, "focal_method": {"identifier": "apply", "parameters": "(Object entity)", "modifiers": "@Override public", "return": "Optional<Object>", "body": "@Override\n    public Optional<Object> apply(Object entity) {\n        return entity != null ? apply(entity, \"\") : Optional.empty();\n    }", "signature": "Optional<Object> apply(Object entity)", "full_signature": "@Override public Optional<Object> apply(Object entity)", "class_method_signature": "TemplateSanitizer.apply(Object entity)", "testcase": false, "constructor": false, "invocations": ["apply", "empty"]}, "repository": {"repo_id": 107330274, "url": "https://github.com/Netflix/titus-control-plane", "stars": 241, "created": "10/17/2017 10:20:55 PM +00:00", "updates": "2020-01-25T13:01:05+00:00", "fork": "False", "license": "licensed"}}