{"test_class": {"identifier": "DefaultCredentialsProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private String propertiesPath = \"props.properties\";", "modifier": "private", "type": "String", "declarator": "propertiesPath = \"props.properties\"", "var_name": "propertiesPath"}, {"original_string": "private String userName = \"user\";", "modifier": "private", "type": "String", "declarator": "userName = \"user\"", "var_name": "userName"}, {"original_string": "private String userPassword = \"passwd\";", "modifier": "private", "type": "String", "declarator": "userPassword = \"passwd\"", "var_name": "userPassword"}, {"original_string": "private String userNameSysProp = \"clc.login\";", "modifier": "private", "type": "String", "declarator": "userNameSysProp = \"clc.login\"", "var_name": "userNameSysProp"}, {"original_string": "private String userPasswordSysProp = \"clc.userpasswd\";", "modifier": "private", "type": "String", "declarator": "userPasswordSysProp = \"clc.userpasswd\"", "var_name": "userPasswordSysProp"}], "file": "sdk/src/test/java/com/centurylink/cloud/sdk/core/auth/services/domain/credentials/DefaultCredentialsProviderTest.java"}, "test_case": {"identifier": "testConstructorWithUserParams", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testConstructorWithUserParams() {\n        System.setProperty(userNameSysProp, userName);\n        System.setProperty(userPasswordSysProp, userPassword);\n\n        CredentialsProvider provider = new DefaultCredentialsProvider(userNameSysProp, userPasswordSysProp);\n        Credentials credentials = provider.getCredentials();\n\n        assert userName.equals(credentials.getUsername());\n        assert userPassword.equals(credentials.getPassword());\n\n        System.clearProperty(userNameSysProp);\n        System.clearProperty(userPasswordSysProp);\n    }", "signature": "void testConstructorWithUserParams()", "full_signature": "@Test public void testConstructorWithUserParams()", "class_method_signature": "DefaultCredentialsProviderTest.testConstructorWithUserParams()", "testcase": true, "constructor": false, "invocations": ["setProperty", "setProperty", "getCredentials", "equals", "getUsername", "equals", "getPassword", "clearProperty", "clearProperty"]}, "focal_class": {"identifier": "DefaultCredentialsProvider", "superclass": "", "interfaces": "implements CredentialsProvider", "fields": [{"original_string": "private CredentialsProvider credentialsProvider;", "modifier": "private", "type": "CredentialsProvider", "declarator": "credentialsProvider", "var_name": "credentialsProvider"}], "methods": [{"identifier": "DefaultCredentialsProvider", "parameters": "()", "modifiers": "public", "return": "", "signature": " DefaultCredentialsProvider()", "full_signature": "public  DefaultCredentialsProvider()", "class_method_signature": "DefaultCredentialsProvider.DefaultCredentialsProvider()", "testcase": false, "constructor": true}, {"identifier": "DefaultCredentialsProvider", "parameters": "(String usernameKey, String passwordKey)", "modifiers": "public", "return": "", "signature": " DefaultCredentialsProvider(String usernameKey, String passwordKey)", "full_signature": "public  DefaultCredentialsProvider(String usernameKey, String passwordKey)", "class_method_signature": "DefaultCredentialsProvider.DefaultCredentialsProvider(String usernameKey, String passwordKey)", "testcase": false, "constructor": true}, {"identifier": "DefaultCredentialsProvider", "parameters": "(String filePath)", "modifiers": "public", "return": "", "signature": " DefaultCredentialsProvider(String filePath)", "full_signature": "public  DefaultCredentialsProvider(String filePath)", "class_method_signature": "DefaultCredentialsProvider.DefaultCredentialsProvider(String filePath)", "testcase": false, "constructor": true}, {"identifier": "throwFailedException", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void throwFailedException()", "full_signature": "private void throwFailedException()", "class_method_signature": "DefaultCredentialsProvider.throwFailedException()", "testcase": false, "constructor": false}, {"identifier": "loadFromSystemVariables", "parameters": "(String usernameKey, String passwordKey)", "modifiers": "private", "return": "boolean", "signature": "boolean loadFromSystemVariables(String usernameKey, String passwordKey)", "full_signature": "private boolean loadFromSystemVariables(String usernameKey, String passwordKey)", "class_method_signature": "DefaultCredentialsProvider.loadFromSystemVariables(String usernameKey, String passwordKey)", "testcase": false, "constructor": false}, {"identifier": "loadFromEnvironmentVariables", "parameters": "(String usernameKey, String passwordKey)", "modifiers": "private", "return": "boolean", "signature": "boolean loadFromEnvironmentVariables(String usernameKey, String passwordKey)", "full_signature": "private boolean loadFromEnvironmentVariables(String usernameKey, String passwordKey)", "class_method_signature": "DefaultCredentialsProvider.loadFromEnvironmentVariables(String usernameKey, String passwordKey)", "testcase": false, "constructor": false}, {"identifier": "loadFromPropertiesFile", "parameters": "(String filePath)", "modifiers": "private", "return": "boolean", "signature": "boolean loadFromPropertiesFile(String filePath)", "full_signature": "private boolean loadFromPropertiesFile(String filePath)", "class_method_signature": "DefaultCredentialsProvider.loadFromPropertiesFile(String filePath)", "testcase": false, "constructor": false}, {"identifier": "checkAndSetCredentials", "parameters": "(CredentialsProvider provider)", "modifiers": "private", "return": "boolean", "signature": "boolean checkAndSetCredentials(CredentialsProvider provider)", "full_signature": "private boolean checkAndSetCredentials(CredentialsProvider provider)", "class_method_signature": "DefaultCredentialsProvider.checkAndSetCredentials(CredentialsProvider provider)", "testcase": false, "constructor": false}, {"identifier": "getCredentials", "parameters": "()", "modifiers": "@Override public", "return": "Credentials", "signature": "Credentials getCredentials()", "full_signature": "@Override public Credentials getCredentials()", "class_method_signature": "DefaultCredentialsProvider.getCredentials()", "testcase": false, "constructor": false}, {"identifier": "refresh", "parameters": "()", "modifiers": "@Override public", "return": "CredentialsProvider", "signature": "CredentialsProvider refresh()", "full_signature": "@Override public CredentialsProvider refresh()", "class_method_signature": "DefaultCredentialsProvider.refresh()", "testcase": false, "constructor": false}], "file": "sdk/src/main/java/com/centurylink/cloud/sdk/core/auth/services/domain/credentials/DefaultCredentialsProvider.java"}, "focal_method": {"identifier": "getCredentials", "parameters": "()", "modifiers": "@Override public", "return": "Credentials", "body": "@Override\n    public Credentials getCredentials() {\n        return credentialsProvider.getCredentials();\n    }", "signature": "Credentials getCredentials()", "full_signature": "@Override public Credentials getCredentials()", "class_method_signature": "DefaultCredentialsProvider.getCredentials()", "testcase": false, "constructor": false, "invocations": ["getCredentials"]}, "repository": {"repo_id": 31234709, "url": "https://github.com/CenturyLinkCloud/clc-java-sdk", "language": "Java", "is_fork": false, "fork_count": 4, "stargazer_count": 6, "size": 5036, "license": "licensed"}}