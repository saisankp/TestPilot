{"test_class": {"identifier": "ShapeRaterTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private ShapeRater rater;", "modifier": "private", "type": "ShapeRater", "declarator": "rater", "var_name": "rater"}, {"original_string": "private SearchNode node;", "modifier": "private", "type": "SearchNode", "declarator": "node", "var_name": "node"}, {"original_string": "private Board board;", "modifier": "private", "type": "Board", "declarator": "board", "var_name": "board"}, {"original_string": "private CoordinateSystem coords;", "modifier": "private", "type": "CoordinateSystem", "declarator": "coords", "var_name": "coords"}, {"original_string": "private ShapeTable shapeTable;", "modifier": "private", "type": "ShapeTable", "declarator": "shapeTable", "var_name": "shapeTable"}, {"original_string": "private static final int MIN_STONES = 3;", "modifier": "private static final", "type": "int", "declarator": "MIN_STONES = 3", "var_name": "MIN_STONES"}, {"original_string": "private static final int BIAS = 100;", "modifier": "private static final", "type": "int", "declarator": "BIAS = 100", "var_name": "BIAS"}, {"original_string": "private HistoryObserver history;", "modifier": "private", "type": "HistoryObserver", "declarator": "history", "var_name": "history"}], "file": "src/edu/lclark/orego/feature/ShapeRaterTest.java"}, "test_case": {"identifier": "testUpdateNode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testUpdateNode() {\n\t\tshort p = coords.at(\"a1\");\n\t\tassertEquals(1, node.getWins(p), 0.01);\n\t\tassertEquals(0.5, node.getWinRate(p), 0.01);\n\t\trater.updateNode(node);\n\t\tassertEquals(1.0 + (BIAS * 0.5), node.getWins(p), 0.01);\n\t\tassertEquals((1.0 + (BIAS * 0.5)) / (2.0 + BIAS), node.getWinRate(p), 0.01);\n\t}", "signature": "void testUpdateNode()", "full_signature": "@Test public void testUpdateNode()", "class_method_signature": "ShapeRaterTest.testUpdateNode()", "testcase": true, "constructor": false, "invocations": ["at", "assertEquals", "getWins", "assertEquals", "getWinRate", "updateNode", "assertEquals", "getWins", "assertEquals", "getWinRate"]}, "focal_class": {"identifier": "ShapeRater", "superclass": "", "interfaces": "implements Rater", "fields": [{"original_string": "private final int bias;", "modifier": "private final", "type": "int", "declarator": "bias", "var_name": "bias"}, {"original_string": "private final Board board;", "modifier": "private final", "type": "Board", "declarator": "board", "var_name": "board"}, {"original_string": "private final CoordinateSystem coords;", "modifier": "private final", "type": "CoordinateSystem", "declarator": "coords", "var_name": "coords"}, {"original_string": "private final HistoryObserver history;", "modifier": "private final", "type": "HistoryObserver", "declarator": "history", "var_name": "history"}, {"original_string": "private final int minStones;", "modifier": "private final", "type": "int", "declarator": "minStones", "var_name": "minStones"}, {"original_string": "private ShapeTable shapeTable;", "modifier": "private", "type": "ShapeTable", "declarator": "shapeTable", "var_name": "shapeTable"}], "methods": [{"identifier": "ShapeRater", "parameters": "(Board board, HistoryObserver history,\n\t\t\tShapeTable shapeTable, int bias, int minStones)", "modifiers": "public", "return": "", "signature": " ShapeRater(Board board, HistoryObserver history,\n\t\t\tShapeTable shapeTable, int bias, int minStones)", "full_signature": "public  ShapeRater(Board board, HistoryObserver history,\n\t\t\tShapeTable shapeTable, int bias, int minStones)", "class_method_signature": "ShapeRater.ShapeRater(Board board, HistoryObserver history,\n\t\t\tShapeTable shapeTable, int bias, int minStones)", "testcase": false, "constructor": true}, {"identifier": "setTable", "parameters": "(ShapeTable table)", "modifiers": "public", "return": "void", "signature": "void setTable(ShapeTable table)", "full_signature": "public void setTable(ShapeTable table)", "class_method_signature": "ShapeRater.setTable(ShapeTable table)", "testcase": false, "constructor": false}, {"identifier": "updateNode", "parameters": "(SearchNode node)", "modifiers": "@Override public", "return": "void", "signature": "void updateNode(SearchNode node)", "full_signature": "@Override public void updateNode(SearchNode node)", "class_method_signature": "ShapeRater.updateNode(SearchNode node)", "testcase": false, "constructor": false}], "file": "src/edu/lclark/orego/feature/ShapeRater.java"}, "focal_method": {"identifier": "updateNode", "parameters": "(SearchNode node)", "modifiers": "@Override public", "return": "void", "body": "@Override\n\tpublic void updateNode(SearchNode node) {\n\t\tfor (short p : coords.getAllPointsOnBoard()) {\n\t\t\tif (board.getColorAt(p) == VACANT) {\n\t\t\t\tlong hash = PatternFinder.getHash(board, p, minStones,\n\t\t\t\t\t\thistory.get(board.getTurn() - 1));\n\t\t\t\tnode.update(p, bias, (int) (bias * shapeTable.getWinRate(hash)));\n\t\t\t}\n\t\t}\n\t}", "signature": "void updateNode(SearchNode node)", "full_signature": "@Override public void updateNode(SearchNode node)", "class_method_signature": "ShapeRater.updateNode(SearchNode node)", "testcase": false, "constructor": false, "invocations": ["getAllPointsOnBoard", "getColorAt", "getHash", "get", "getTurn", "update", "getWinRate"]}, "repository": {"repo_id": 7859424, "url": "https://github.com/Orego/Orego", "language": "Java", "is_fork": false, "fork_count": 8, "stargazer_count": 35, "size": 1341444, "license": "licensed"}}