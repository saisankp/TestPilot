{"test_class": {"identifier": "CumulusVlanHelperTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private InputStream interfacesFile;", "modifier": "private", "type": "InputStream", "declarator": "interfacesFile", "var_name": "interfacesFile"}, {"original_string": "private InputStream interfacesFileWithBond;", "modifier": "private", "type": "InputStream", "declarator": "interfacesFileWithBond", "var_name": "interfacesFileWithBond"}], "file": "modules/cumulus-switch/src/test/java/com/vmware/vrack/hms/switches/cumulus/CumulusVlanHelperTest.java"}, "test_case": {"identifier": "testAddVlanToSwitchPort", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testAddVlanToSwitchPort()\n    {\n        Configuration configuration = Configuration.parse( interfacesFile );\n        CumulusVlanHelper helper = new CumulusVlanHelper( null );\n\n        SwitchVlan vlan = new SwitchVlan();\n        vlan.setId( \"1200\" );\n        vlan.setTaggedPorts( new HashSet<String>() );\n        vlan.getTaggedPorts().add( \"swp2\" );\n        vlan.getTaggedPorts().add( \"swp4\" );\n        try\n        {\n            helper.updateVlanConfiguration( vlan, configuration );\n        }\n        catch ( HmsOobNetworkException e )\n        {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n        System.out.println( configuration.getString() );\n    }", "signature": "void testAddVlanToSwitchPort()", "full_signature": "@Test public void testAddVlanToSwitchPort()", "class_method_signature": "CumulusVlanHelperTest.testAddVlanToSwitchPort()", "testcase": true, "constructor": false, "invocations": ["parse", "setId", "setTaggedPorts", "add", "getTaggedPorts", "add", "getTaggedPorts", "updateVlanConfiguration", "printStackTrace", "println", "getString"]}, "focal_class": {"identifier": "CumulusVlanHelper", "superclass": "", "interfaces": "", "fields": [{"original_string": "private CumulusTorSwitchService service;", "modifier": "private", "type": "CumulusTorSwitchService", "declarator": "service", "var_name": "service"}, {"original_string": "private static Logger logger = Logger.getLogger( CumulusVlanHelper.class );", "modifier": "private static", "type": "Logger", "declarator": "logger = Logger.getLogger( CumulusVlanHelper.class )", "var_name": "logger"}, {"original_string": "private CumulusCache<List<SwitchVlan>> vlansBulkCache = new CumulusCache<List<SwitchVlan>>( 300 );", "modifier": "private", "type": "CumulusCache<List<SwitchVlan>>", "declarator": "vlansBulkCache = new CumulusCache<List<SwitchVlan>>( 300 )", "var_name": "vlansBulkCache"}], "methods": [{"identifier": "CumulusVlanHelper", "parameters": "( CumulusTorSwitchService service )", "modifiers": "public", "return": "", "signature": " CumulusVlanHelper( CumulusTorSwitchService service )", "full_signature": "public  CumulusVlanHelper( CumulusTorSwitchService service )", "class_method_signature": "CumulusVlanHelper.CumulusVlanHelper( CumulusTorSwitchService service )", "testcase": false, "constructor": true}, {"identifier": "getSwitchVlans", "parameters": "( SwitchNode switchNode )", "modifiers": "public", "return": "List<String>", "signature": "List<String> getSwitchVlans( SwitchNode switchNode )", "full_signature": "public List<String> getSwitchVlans( SwitchNode switchNode )", "class_method_signature": "CumulusVlanHelper.getSwitchVlans( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "getSwitchVlan", "parameters": "( SwitchNode switchNode, String vlanName )", "modifiers": "public", "return": "SwitchVlan", "signature": "SwitchVlan getSwitchVlan( SwitchNode switchNode, String vlanName )", "full_signature": "public SwitchVlan getSwitchVlan( SwitchNode switchNode, String vlanName )", "class_method_signature": "CumulusVlanHelper.getSwitchVlan( SwitchNode switchNode, String vlanName )", "testcase": false, "constructor": false}, {"identifier": "getSwitchVlansBulk", "parameters": "( SwitchNode switchNode )", "modifiers": "public", "return": "List<SwitchVlan>", "signature": "List<SwitchVlan> getSwitchVlansBulk( SwitchNode switchNode )", "full_signature": "public List<SwitchVlan> getSwitchVlansBulk( SwitchNode switchNode )", "class_method_signature": "CumulusVlanHelper.getSwitchVlansBulk( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "getSwitchVlansBulkPre25", "parameters": "( SwitchNode switchNode )", "modifiers": "@SuppressWarnings( { \"unchecked\", \"unused\" } ) private", "return": "List<SwitchVlan>", "signature": "List<SwitchVlan> getSwitchVlansBulkPre25( SwitchNode switchNode )", "full_signature": "@SuppressWarnings( { \"unchecked\", \"unused\" } ) private List<SwitchVlan> getSwitchVlansBulkPre25( SwitchNode switchNode )", "class_method_signature": "CumulusVlanHelper.getSwitchVlansBulkPre25( SwitchNode switchNode )", "testcase": false, "constructor": false}, {"identifier": "createVlan", "parameters": "( SwitchNode switchNode, SwitchVlan vlan )", "modifiers": "public", "return": "boolean", "signature": "boolean createVlan( SwitchNode switchNode, SwitchVlan vlan )", "full_signature": "public boolean createVlan( SwitchNode switchNode, SwitchVlan vlan )", "class_method_signature": "CumulusVlanHelper.createVlan( SwitchNode switchNode, SwitchVlan vlan )", "testcase": false, "constructor": false}, {"identifier": "updateVlan", "parameters": "( SwitchNode switchNode, String vlanName, SwitchVlan vlan )", "modifiers": "public", "return": "boolean", "signature": "boolean updateVlan( SwitchNode switchNode, String vlanName, SwitchVlan vlan )", "full_signature": "public boolean updateVlan( SwitchNode switchNode, String vlanName, SwitchVlan vlan )", "class_method_signature": "CumulusVlanHelper.updateVlan( SwitchNode switchNode, String vlanName, SwitchVlan vlan )", "testcase": false, "constructor": false}, {"identifier": "createOrUpdateVlan", "parameters": "( SwitchNode switchNode, SwitchVlan vlan )", "modifiers": "private", "return": "boolean", "signature": "boolean createOrUpdateVlan( SwitchNode switchNode, SwitchVlan vlan )", "full_signature": "private boolean createOrUpdateVlan( SwitchNode switchNode, SwitchVlan vlan )", "class_method_signature": "CumulusVlanHelper.createOrUpdateVlan( SwitchNode switchNode, SwitchVlan vlan )", "testcase": false, "constructor": false}, {"identifier": "updateLAGOnSwitchPorts", "parameters": "( SwitchNode switchNode, SwitchLacpGroup lacpGroup )", "modifiers": "public", "return": "boolean", "signature": "boolean updateLAGOnSwitchPorts( SwitchNode switchNode, SwitchLacpGroup lacpGroup )", "full_signature": "public boolean updateLAGOnSwitchPorts( SwitchNode switchNode, SwitchLacpGroup lacpGroup )", "class_method_signature": "CumulusVlanHelper.updateLAGOnSwitchPorts( SwitchNode switchNode, SwitchLacpGroup lacpGroup )", "testcase": false, "constructor": false}, {"identifier": "updateLAGOnSwitchPorts", "parameters": "( SwitchLacpGroup lacpGroup, Configuration configuration )", "modifiers": "protected", "return": "Configuration", "signature": "Configuration updateLAGOnSwitchPorts( SwitchLacpGroup lacpGroup, Configuration configuration )", "full_signature": "protected Configuration updateLAGOnSwitchPorts( SwitchLacpGroup lacpGroup, Configuration configuration )", "class_method_signature": "CumulusVlanHelper.updateLAGOnSwitchPorts( SwitchLacpGroup lacpGroup, Configuration configuration )", "testcase": false, "constructor": false}, {"identifier": "updateVlanConfiguration", "parameters": "( SwitchVlan vlan, Configuration configuration )", "modifiers": "protected", "return": "Configuration", "signature": "Configuration updateVlanConfiguration( SwitchVlan vlan, Configuration configuration )", "full_signature": "protected Configuration updateVlanConfiguration( SwitchVlan vlan, Configuration configuration )", "class_method_signature": "CumulusVlanHelper.updateVlanConfiguration( SwitchVlan vlan, Configuration configuration )", "testcase": false, "constructor": false}, {"identifier": "deletePortFromVlanConfiguration", "parameters": "( SwitchNode switchNode, String vlanId, String port )", "modifiers": "public", "return": "boolean", "signature": "boolean deletePortFromVlanConfiguration( SwitchNode switchNode, String vlanId, String port )", "full_signature": "public boolean deletePortFromVlanConfiguration( SwitchNode switchNode, String vlanId, String port )", "class_method_signature": "CumulusVlanHelper.deletePortFromVlanConfiguration( SwitchNode switchNode, String vlanId, String port )", "testcase": false, "constructor": false}, {"identifier": "deletePortFromVlanConfiguration", "parameters": "( SwitchVlan existingVlan, Configuration configuration,\n                                                             String port )", "modifiers": "protected", "return": "Configuration", "signature": "Configuration deletePortFromVlanConfiguration( SwitchVlan existingVlan, Configuration configuration,\n                                                             String port )", "full_signature": "protected Configuration deletePortFromVlanConfiguration( SwitchVlan existingVlan, Configuration configuration,\n                                                             String port )", "class_method_signature": "CumulusVlanHelper.deletePortFromVlanConfiguration( SwitchVlan existingVlan, Configuration configuration,\n                                                             String port )", "testcase": false, "constructor": false}, {"identifier": "createOrUpdateVlanPre25", "parameters": "( SwitchNode switchNode, SwitchVlan vlan, boolean update )", "modifiers": "private", "return": "boolean", "signature": "boolean createOrUpdateVlanPre25( SwitchNode switchNode, SwitchVlan vlan, boolean update )", "full_signature": "private boolean createOrUpdateVlanPre25( SwitchNode switchNode, SwitchVlan vlan, boolean update )", "class_method_signature": "CumulusVlanHelper.createOrUpdateVlanPre25( SwitchNode switchNode, SwitchVlan vlan, boolean update )", "testcase": false, "constructor": false}, {"identifier": "deleteVlan", "parameters": "( SwitchNode switchNode, String vlanName )", "modifiers": "public", "return": "boolean", "signature": "boolean deleteVlan( SwitchNode switchNode, String vlanName )", "full_signature": "public boolean deleteVlan( SwitchNode switchNode, String vlanName )", "class_method_signature": "CumulusVlanHelper.deleteVlan( SwitchNode switchNode, String vlanName )", "testcase": false, "constructor": false}, {"identifier": "deleteVlan", "parameters": "( SwitchVlan vlan, Configuration configuration )", "modifiers": "public", "return": "Configuration", "signature": "Configuration deleteVlan( SwitchVlan vlan, Configuration configuration )", "full_signature": "public Configuration deleteVlan( SwitchVlan vlan, Configuration configuration )", "class_method_signature": "CumulusVlanHelper.deleteVlan( SwitchVlan vlan, Configuration configuration )", "testcase": false, "constructor": false}, {"identifier": "deleteVlanPre25", "parameters": "( SwitchNode switchNode, String vlanName )", "modifiers": "@SuppressWarnings( \"unused\" ) private", "return": "boolean", "signature": "boolean deleteVlanPre25( SwitchNode switchNode, String vlanName )", "full_signature": "@SuppressWarnings( \"unused\" ) private boolean deleteVlanPre25( SwitchNode switchNode, String vlanName )", "class_method_signature": "CumulusVlanHelper.deleteVlanPre25( SwitchNode switchNode, String vlanName )", "testcase": false, "constructor": false}], "file": "modules/cumulus-switch/src/main/java/com/vmware/vrack/hms/switches/cumulus/CumulusVlanHelper.java"}, "focal_method": {"identifier": "updateVlanConfiguration", "parameters": "( SwitchVlan vlan, Configuration configuration )", "modifiers": "protected", "return": "Configuration", "body": "protected Configuration updateVlanConfiguration( SwitchVlan vlan, Configuration configuration )\n        throws HmsOobNetworkException\n    {\n        Bridge vRackBridge = configuration.bridges.get( 0 );\n\n        List<SwitchPort> taggedPorts = configuration.convertToSwitchPorts( vlan.getTaggedPorts() );\n\n        // TODO: Untagged ports !!!\n        // List<SwitchPort> untaggedPorts = configuration.convertToSwitchPorts(vlan.getUntaggedPorts());\n\n        if ( vRackBridge.vlans == null )\n            vRackBridge.vlans = new ArrayList<>();\n\n        if ( !vRackBridge.vlans.contains( vlan.getId() ) )\n            vRackBridge.vlans.add( vlan.getId() );\n        if ( taggedPorts != null )\n        {\n            for ( SwitchPort taggedPort : taggedPorts )\n            {\n                if ( taggedPort.vlans == null )\n                    taggedPort.vlans = new ArrayList<>();\n\n                if ( !taggedPort.vlans.contains( vlan.getId() ) )\n                    taggedPort.vlans.add( vlan.getId() );\n\n                if ( configuration.getConfigBlock( taggedPort.name ) == null )\n                    configuration.switchPorts.add( taggedPort );\n\n                taggedPort.setParentBridge( vRackBridge );\n\n                if ( !vRackBridge.members.contains( taggedPort ) )\n                    vRackBridge.members.add( taggedPort );\n            }\n        }\n\n        /*****************************************************************\n         * Switch Virtual Interface handling\n         *****************************************************************/\n        CumulusSviHelper.updateVlanInConfiguration( vRackBridge.name, vlan, configuration );\n\n        return configuration;\n    }", "signature": "Configuration updateVlanConfiguration( SwitchVlan vlan, Configuration configuration )", "full_signature": "protected Configuration updateVlanConfiguration( SwitchVlan vlan, Configuration configuration )", "class_method_signature": "CumulusVlanHelper.updateVlanConfiguration( SwitchVlan vlan, Configuration configuration )", "testcase": false, "constructor": false, "invocations": ["get", "convertToSwitchPorts", "getTaggedPorts", "contains", "getId", "add", "getId", "contains", "getId", "add", "getId", "getConfigBlock", "add", "setParentBridge", "contains", "add", "updateVlanInConfiguration"]}, "repository": {"repo_id": 61566208, "url": "https://github.com/vmware-archive/OHMS", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 16092, "license": "licensed"}}