{"test_class": {"identifier": "DeciderIteratorTest", "superclass": "extends AbstractIteratorTest", "interfaces": "", "fields": [], "file": "ontopia-engine/src/test/java/net/ontopia/utils/DeciderIteratorTest.java"}, "test_case": {"identifier": "testDeciderIterator", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n  public void testDeciderIterator() {\n\n    int size = 5;\n    \n    DeciderIF decider = new DeciderIF() {\n      @Override\n      public boolean ok(Object object) {\n        return !\"B\".equals(object);\n      }\n    };\n    \n    Iterator iter = new DeciderIterator(decider, getIterator(size));\n\n    testIterator(iter, size - 1);\n  }", "signature": "void testDeciderIterator()", "full_signature": "@Test public void testDeciderIterator()", "class_method_signature": "DeciderIteratorTest.testDeciderIterator()", "testcase": true, "constructor": false, "invocations": ["equals", "getIterator", "testIterator"]}, "focal_class": {"identifier": "DeciderIterator", "superclass": "", "interfaces": "implements Iterator<T>", "fields": [{"original_string": "protected DeciderIF<T> decider;", "modifier": "protected", "type": "DeciderIF<T>", "declarator": "decider", "var_name": "decider"}, {"original_string": "protected Iterator<T> iterator;", "modifier": "protected", "type": "Iterator<T>", "declarator": "iterator", "var_name": "iterator"}, {"original_string": "protected boolean done;", "modifier": "protected", "type": "boolean", "declarator": "done", "var_name": "done"}, {"original_string": "protected T next;", "modifier": "protected", "type": "T", "declarator": "next", "var_name": "next"}], "methods": [{"identifier": "DeciderIterator", "parameters": "(DeciderIF<T> decider, Iterator<T> iterator)", "modifiers": "public", "return": "", "signature": " DeciderIterator(DeciderIF<T> decider, Iterator<T> iterator)", "full_signature": "public  DeciderIterator(DeciderIF<T> decider, Iterator<T> iterator)", "class_method_signature": "DeciderIterator.DeciderIterator(DeciderIF<T> decider, Iterator<T> iterator)", "testcase": false, "constructor": true}, {"identifier": "findNext", "parameters": "()", "modifiers": "protected", "return": "void", "signature": "void findNext()", "full_signature": "protected void findNext()", "class_method_signature": "DeciderIterator.findNext()", "testcase": false, "constructor": false}, {"identifier": "hasNext", "parameters": "()", "modifiers": "@Override public", "return": "boolean", "signature": "boolean hasNext()", "full_signature": "@Override public boolean hasNext()", "class_method_signature": "DeciderIterator.hasNext()", "testcase": false, "constructor": false}, {"identifier": "next", "parameters": "()", "modifiers": "@Override public", "return": "T", "signature": "T next()", "full_signature": "@Override public T next()", "class_method_signature": "DeciderIterator.next()", "testcase": false, "constructor": false}, {"identifier": "remove", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void remove()", "full_signature": "@Override public void remove()", "class_method_signature": "DeciderIterator.remove()", "testcase": false, "constructor": false}], "file": "ontopia-engine/src/main/java/net/ontopia/utils/DeciderIterator.java"}, "focal_method": {"identifier": "DeciderIterator", "parameters": "(DeciderIF<T> decider, Iterator<T> iterator)", "modifiers": "public", "return": "", "body": "public DeciderIterator(DeciderIF<T> decider, Iterator<T> iterator) {\n    this.decider = decider;\n    this.iterator = iterator;\n\n    // Find the first applicable element.\n    findNext();\n  }", "signature": " DeciderIterator(DeciderIF<T> decider, Iterator<T> iterator)", "full_signature": "public  DeciderIterator(DeciderIF<T> decider, Iterator<T> iterator)", "class_method_signature": "DeciderIterator.DeciderIterator(DeciderIF<T> decider, Iterator<T> iterator)", "testcase": false, "constructor": true, "invocations": []}, "repository": {"repo_id": 32357795, "url": "https://github.com/ontopia/ontopia", "language": "Java", "is_fork": false, "fork_count": 10, "stargazer_count": 35, "size": 68637, "license": "licensed"}}