{"test_class": {"identifier": "AccessTokenProviderTest", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final String TOKEN = \"a_test_access_token\";", "modifier": "private static final", "type": "String", "declarator": "TOKEN = \"a_test_access_token\"", "var_name": "TOKEN"}, {"original_string": "private SW360AuthenticationClient authClient;", "modifier": "private", "type": "SW360AuthenticationClient", "declarator": "authClient", "var_name": "authClient"}, {"original_string": "private AccessTokenProvider tokenProvider;", "modifier": "private", "type": "AccessTokenProvider", "declarator": "tokenProvider", "var_name": "tokenProvider"}], "file": "modules/sw360/sw360-client/src/test/java/org/eclipse/sw360/antenna/sw360/client/auth/AccessTokenProviderTest.java"}, "test_case": {"identifier": "testDoWithTokenFailedAccessToken", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testDoWithTokenFailedAccessToken() {\n        Throwable expException = new IOException(\"Cannot obtain access token\");\n        RuntimeException otherException = new RuntimeException(\"Function failed\");\n        Function<AccessToken, CompletableFuture<Object>> func = token -> {\n            throw otherException;\n        };\n        CompletableFuture<String> tokenFuture = new CompletableFuture<>();\n        tokenFuture.completeExceptionally(expException);\n        expectTokenRequest(tokenFuture);\n\n        try {\n            tokenProvider.doWithToken(func).join();\n            fail(\"No exception thrown!\");\n        } catch (CompletionException ex) {\n            assertThat(ex.getCause()).isEqualTo(expException);\n        }\n    }", "signature": "void testDoWithTokenFailedAccessToken()", "full_signature": "@Test public void testDoWithTokenFailedAccessToken()", "class_method_signature": "AccessTokenProviderTest.testDoWithTokenFailedAccessToken()", "testcase": true, "constructor": false, "invocations": ["completeExceptionally", "expectTokenRequest", "join", "doWithToken", "fail", "isEqualTo", "assertThat", "getCause"]}, "focal_class": {"identifier": "AccessTokenProvider", "superclass": "", "interfaces": "", "fields": [{"original_string": "private static final Logger LOG = LoggerFactory.getLogger(AccessTokenProvider.class);", "modifier": "private static final", "type": "Logger", "declarator": "LOG = LoggerFactory.getLogger(AccessTokenProvider.class)", "var_name": "LOG"}, {"original_string": "private final SW360AuthenticationClient authClient;", "modifier": "private final", "type": "SW360AuthenticationClient", "declarator": "authClient", "var_name": "authClient"}, {"original_string": "private CompletableFuture<AccessToken> tokenFuture;", "modifier": "private", "type": "CompletableFuture<AccessToken>", "declarator": "tokenFuture", "var_name": "tokenFuture"}, {"original_string": "private AccessToken accessToken;", "modifier": "private", "type": "AccessToken", "declarator": "accessToken", "var_name": "accessToken"}], "methods": [{"identifier": "AccessTokenProvider", "parameters": "(SW360AuthenticationClient authClient)", "modifiers": "public", "return": "", "signature": " AccessTokenProvider(SW360AuthenticationClient authClient)", "full_signature": "public  AccessTokenProvider(SW360AuthenticationClient authClient)", "class_method_signature": "AccessTokenProvider.AccessTokenProvider(SW360AuthenticationClient authClient)", "testcase": false, "constructor": true}, {"identifier": "getAuthClient", "parameters": "()", "modifiers": "public", "return": "SW360AuthenticationClient", "signature": "SW360AuthenticationClient getAuthClient()", "full_signature": "public SW360AuthenticationClient getAuthClient()", "class_method_signature": "AccessTokenProvider.getAuthClient()", "testcase": false, "constructor": false}, {"identifier": "doWithToken", "parameters": "(Function<? super AccessToken, ? extends CompletableFuture<T>> func)", "modifiers": "public", "return": "CompletableFuture<T>", "signature": "CompletableFuture<T> doWithToken(Function<? super AccessToken, ? extends CompletableFuture<T>> func)", "full_signature": "public CompletableFuture<T> doWithToken(Function<? super AccessToken, ? extends CompletableFuture<T>> func)", "class_method_signature": "AccessTokenProvider.doWithToken(Function<? super AccessToken, ? extends CompletableFuture<T>> func)", "testcase": false, "constructor": false}, {"identifier": "obtainAccessToken", "parameters": "()", "modifiers": "protected synchronized", "return": "CompletableFuture<AccessToken>", "signature": "CompletableFuture<AccessToken> obtainAccessToken()", "full_signature": "protected synchronized CompletableFuture<AccessToken> obtainAccessToken()", "class_method_signature": "AccessTokenProvider.obtainAccessToken()", "testcase": false, "constructor": false}, {"identifier": "invalidate", "parameters": "(AccessToken token)", "modifiers": "protected synchronized", "return": "void", "signature": "void invalidate(AccessToken token)", "full_signature": "protected synchronized void invalidate(AccessToken token)", "class_method_signature": "AccessTokenProvider.invalidate(AccessToken token)", "testcase": false, "constructor": false}, {"identifier": "handleTokenResult", "parameters": "(AccessToken token, Throwable error)", "modifiers": "private synchronized", "return": "void", "signature": "void handleTokenResult(AccessToken token, Throwable error)", "full_signature": "private synchronized void handleTokenResult(AccessToken token, Throwable error)", "class_method_signature": "AccessTokenProvider.handleTokenResult(AccessToken token, Throwable error)", "testcase": false, "constructor": false}, {"identifier": "onRequestComplete", "parameters": "(AccessToken token, Throwable exception)", "modifiers": "private", "return": "void", "signature": "void onRequestComplete(AccessToken token, Throwable exception)", "full_signature": "private void onRequestComplete(AccessToken token, Throwable exception)", "class_method_signature": "AccessTokenProvider.onRequestComplete(AccessToken token, Throwable exception)", "testcase": false, "constructor": false}, {"identifier": "clearCache", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void clearCache()", "full_signature": "private void clearCache()", "class_method_signature": "AccessTokenProvider.clearCache()", "testcase": false, "constructor": false}], "file": "modules/sw360/sw360-client/src/main/java/org/eclipse/sw360/antenna/sw360/client/auth/AccessTokenProvider.java"}, "focal_method": {"identifier": "doWithToken", "parameters": "(Function<? super AccessToken, ? extends CompletableFuture<T>> func)", "modifiers": "public", "return": "CompletableFuture<T>", "body": "public <T> CompletableFuture<T> doWithToken(Function<? super AccessToken, ? extends CompletableFuture<T>> func) {\n        return obtainAccessToken()\n                .thenCompose(token -> func.apply(token)\n                        .whenComplete((result, exception) -> onRequestComplete(token, exception)));\n    }", "signature": "CompletableFuture<T> doWithToken(Function<? super AccessToken, ? extends CompletableFuture<T>> func)", "full_signature": "public CompletableFuture<T> doWithToken(Function<? super AccessToken, ? extends CompletableFuture<T>> func)", "class_method_signature": "AccessTokenProvider.doWithToken(Function<? super AccessToken, ? extends CompletableFuture<T>> func)", "testcase": false, "constructor": false, "invocations": ["thenCompose", "obtainAccessToken", "whenComplete", "apply", "onRequestComplete"]}, "repository": {"repo_id": 140017338, "url": "https://github.com/eclipse/antenna", "stars": 14, "created": "7/6/2018 6:17:28 PM +00:00", "updates": "2020-01-21T13:15:34+00:00", "fork": "False", "license": "licensed"}}