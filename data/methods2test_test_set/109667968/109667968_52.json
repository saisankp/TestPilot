{"test_class": {"identifier": "KujakuMapViewTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [{"original_string": "@Rule\n    public MockitoRule rule = MockitoJUnit.rule();", "modifier": "@Rule\n    public", "type": "MockitoRule", "declarator": "rule = MockitoJUnit.rule()", "var_name": "rule"}, {"original_string": "@Mock\n    private Style style;", "modifier": "@Mock\n    private", "type": "Style", "declarator": "style", "var_name": "style"}, {"original_string": "private KujakuMapView kujakuMapView;", "modifier": "private", "type": "KujakuMapView", "declarator": "kujakuMapView", "var_name": "kujakuMapView"}], "file": "library/src/test/java/io/ona/kujaku/views/KujakuMapViewTest.java"}, "test_case": {"identifier": "setOnFeatureLongClickListener", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void setOnFeatureLongClickListener() {\n        assertNull(ReflectionHelpers.getField(kujakuMapView,\"onFeatureLongClickListener\"));\n        assertNull(ReflectionHelpers.getField(kujakuMapView,\"featureLongClickLayerIdFilters\"));\n        OnFeatureLongClickListener onFeatureLongClickListenerMock = Mockito.mock(OnFeatureLongClickListener.class);\n        String[] layerIds =  {\"id1\"};\n\n        kujakuMapView.setOnFeatureLongClickListener(onFeatureLongClickListenerMock, layerIds);\n        assertEquals(onFeatureLongClickListenerMock, ReflectionHelpers.getField(kujakuMapView,\"onFeatureLongClickListener\"));\n        assertEquals(layerIds, ReflectionHelpers.getField(kujakuMapView,\"featureLongClickLayerIdFilters\"));\n    }", "signature": "void setOnFeatureLongClickListener()", "full_signature": "@Test public void setOnFeatureLongClickListener()", "class_method_signature": "KujakuMapViewTest.setOnFeatureLongClickListener()", "testcase": true, "constructor": false, "invocations": ["assertNull", "getField", "assertNull", "getField", "mock", "setOnFeatureLongClickListener", "assertEquals", "getField", "assertEquals", "getField"]}, "focal_class": {"identifier": "KujakuMapView", "superclass": "extends MapView", "interfaces": "implements IKujakuMapView, MapboxMap.OnMapClickListener, MapboxMap.OnMapLongClickListener", "fields": [{"original_string": "private static final String TAG = KujakuMapView.class.getName();", "modifier": "private static final", "type": "String", "declarator": "TAG = KujakuMapView.class.getName()", "var_name": "TAG"}, {"original_string": "public static final double LOCATION_FOCUS_ZOOM = 20d;", "modifier": "public static final", "type": "double", "declarator": "LOCATION_FOCUS_ZOOM = 20d", "var_name": "LOCATION_FOCUS_ZOOM"}, {"original_string": "private boolean canAddPoint = false;", "modifier": "private", "type": "boolean", "declarator": "canAddPoint = false", "var_name": "canAddPoint"}, {"original_string": "private ImageView markerLayout;", "modifier": "private", "type": "ImageView", "declarator": "markerLayout", "var_name": "markerLayout"}, {"original_string": "private Button doneAddingPointBtn;", "modifier": "private", "type": "Button", "declarator": "doneAddingPointBtn", "var_name": "doneAddingPointBtn"}, {"original_string": "private ImageButton addPointBtn;", "modifier": "private", "type": "ImageButton", "declarator": "addPointBtn", "var_name": "addPointBtn"}, {"original_string": "private Button cancelAddingPoint;", "modifier": "private", "type": "Button", "declarator": "cancelAddingPoint", "var_name": "cancelAddingPoint"}, {"original_string": "private MapboxMap mapboxMap;", "modifier": "private", "type": "MapboxMap", "declarator": "mapboxMap", "var_name": "mapboxMap"}, {"original_string": "private ImageButton currentLocationBtn;", "modifier": "private", "type": "ImageButton", "declarator": "currentLocationBtn", "var_name": "currentLocationBtn"}, {"original_string": "private ImageView trackingServiceStatusButton;", "modifier": "private", "type": "ImageView", "declarator": "trackingServiceStatusButton", "var_name": "trackingServiceStatusButton"}, {"original_string": "private ILocationClient locationClient;", "modifier": "private", "type": "ILocationClient", "declarator": "locationClient", "var_name": "locationClient"}, {"original_string": "private LinearLayout addPointButtonsLayout;", "modifier": "private", "type": "LinearLayout", "declarator": "addPointButtonsLayout", "var_name": "addPointButtonsLayout"}, {"original_string": "private OnLocationChanged onLocationChangedListener;", "modifier": "private", "type": "OnLocationChanged", "declarator": "onLocationChangedListener", "var_name": "onLocationChangedListener"}, {"original_string": "private static final int ANIMATE_TO_LOCATION_DURATION = 1000;", "modifier": "private static final", "type": "int", "declarator": "ANIMATE_TO_LOCATION_DURATION = 1000", "var_name": "ANIMATE_TO_LOCATION_DURATION"}, {"original_string": "protected Set<io.ona.kujaku.domain.Point> droppedPoints;", "modifier": "protected", "type": "Set<io.ona.kujaku.domain.Point>", "declarator": "droppedPoints", "var_name": "droppedPoints"}, {"original_string": "private LatLng latestLocationCoordinates;", "modifier": "private", "type": "LatLng", "declarator": "latestLocationCoordinates", "var_name": "latestLocationCoordinates"}, {"original_string": "private Location latestLocation;", "modifier": "private", "type": "Location", "declarator": "latestLocation", "var_name": "latestLocation"}, {"original_string": "private MapboxLocationComponentWrapper mapboxLocationComponentWrapper;", "modifier": "private", "type": "MapboxLocationComponentWrapper", "declarator": "mapboxLocationComponentWrapper", "var_name": "mapboxLocationComponentWrapper"}, {"original_string": "private boolean updateUserLocationOnMap = false;", "modifier": "private", "type": "boolean", "declarator": "updateUserLocationOnMap = false", "var_name": "updateUserLocationOnMap"}, {"original_string": "private boolean updateCameraUserLocationOnMap = false;", "modifier": "private", "type": "boolean", "declarator": "updateCameraUserLocationOnMap = false", "var_name": "updateCameraUserLocationOnMap"}, {"original_string": "private int locationRenderMode = RenderMode.NORMAL;", "modifier": "private", "type": "int", "declarator": "locationRenderMode = RenderMode.NORMAL", "var_name": "locationRenderMode"}, {"original_string": "private final float DEFAULT_LOCATION_OUTER_CIRCLE_RADIUS = 25f;", "modifier": "private final", "type": "float", "declarator": "DEFAULT_LOCATION_OUTER_CIRCLE_RADIUS = 25f", "var_name": "DEFAULT_LOCATION_OUTER_CIRCLE_RADIUS"}, {"original_string": "private float locationBufferRadius = DEFAULT_LOCATION_OUTER_CIRCLE_RADIUS;", "modifier": "private", "type": "float", "declarator": "locationBufferRadius = DEFAULT_LOCATION_OUTER_CIRCLE_RADIUS", "var_name": "locationBufferRadius"}, {"original_string": "private Set<WmtsLayer> wmtsLayers;", "modifier": "private", "type": "Set<WmtsLayer>", "declarator": "wmtsLayers", "var_name": "wmtsLayers"}, {"original_string": "private FeatureCollection featureCollection;", "modifier": "private", "type": "FeatureCollection", "declarator": "featureCollection", "var_name": "featureCollection"}, {"original_string": "private Map<String, Integer> featureMap;", "modifier": "private", "type": "Map<String, Integer>", "declarator": "featureMap", "var_name": "featureMap"}, {"original_string": "private Layer primaryLayer;", "modifier": "private", "type": "Layer", "declarator": "primaryLayer", "var_name": "primaryLayer"}, {"original_string": "private GeoJsonSource primaryGeoJsonSource;", "modifier": "private", "type": "GeoJsonSource", "declarator": "primaryGeoJsonSource", "var_name": "primaryGeoJsonSource"}, {"original_string": "private String primaryGeoJsonSourceId;", "modifier": "private", "type": "String", "declarator": "primaryGeoJsonSourceId", "var_name": "primaryGeoJsonSourceId"}, {"original_string": "private String geoJsonSourceString;", "modifier": "private", "type": "String", "declarator": "geoJsonSourceString", "var_name": "geoJsonSourceString"}, {"original_string": "private boolean isFetchSourceFromStyle = false;", "modifier": "private", "type": "boolean", "declarator": "isFetchSourceFromStyle = false", "var_name": "isFetchSourceFromStyle"}, {"original_string": "private CameraPosition cameraPosition = null;", "modifier": "private", "type": "CameraPosition", "declarator": "cameraPosition = null", "var_name": "cameraPosition"}, {"original_string": "private BoundsChangeListener boundsChangeListener;", "modifier": "private", "type": "BoundsChangeListener", "declarator": "boundsChangeListener", "var_name": "boundsChangeListener"}, {"original_string": "private OnFeatureClickListener onFeatureClickListener;", "modifier": "private", "type": "OnFeatureClickListener", "declarator": "onFeatureClickListener", "var_name": "onFeatureClickListener"}, {"original_string": "private OnFeatureLongClickListener onFeatureLongClickListener;", "modifier": "private", "type": "OnFeatureLongClickListener", "declarator": "onFeatureLongClickListener", "var_name": "onFeatureLongClickListener"}, {"original_string": "private String[] featureClickLayerIdFilters;", "modifier": "private", "type": "String[]", "declarator": "featureClickLayerIdFilters", "var_name": "featureClickLayerIdFilters"}, {"original_string": "private Expression featureClickExpressionFilter;", "modifier": "private", "type": "Expression", "declarator": "featureClickExpressionFilter", "var_name": "featureClickExpressionFilter"}, {"original_string": "private String[] featureLongClickLayerIdFilters;", "modifier": "private", "type": "String[]", "declarator": "featureLongClickLayerIdFilters", "var_name": "featureLongClickLayerIdFilters"}, {"original_string": "private Expression featureLongClickExpressionFilter;", "modifier": "private", "type": "Expression", "declarator": "featureLongClickExpressionFilter", "var_name": "featureLongClickExpressionFilter"}, {"original_string": "private OnKujakuLayerClickListener onKujakuLayerClickListener;", "modifier": "private", "type": "OnKujakuLayerClickListener", "declarator": "onKujakuLayerClickListener", "var_name": "onKujakuLayerClickListener"}, {"original_string": "private OnKujakuLayerLongClickListener onKujakuLayerLongClickListener;", "modifier": "private", "type": "OnKujakuLayerLongClickListener", "declarator": "onKujakuLayerLongClickListener", "var_name": "onKujakuLayerLongClickListener"}, {"original_string": "private boolean warmGps = true;", "modifier": "private", "type": "boolean", "declarator": "warmGps = true", "var_name": "warmGps"}, {"original_string": "private boolean hasAlreadyRequestedEnableLocation = false;", "modifier": "private", "type": "boolean", "declarator": "hasAlreadyRequestedEnableLocation = false", "var_name": "hasAlreadyRequestedEnableLocation"}, {"original_string": "private boolean isResumingFromRequestingEnableLocation = false;", "modifier": "private", "type": "boolean", "declarator": "isResumingFromRequestingEnableLocation = false", "var_name": "isResumingFromRequestingEnableLocation"}, {"original_string": "private String locationEnableRejectionDialogTitle;", "modifier": "private", "type": "String", "declarator": "locationEnableRejectionDialogTitle", "var_name": "locationEnableRejectionDialogTitle"}, {"original_string": "private String locationEnableRejectionDialogMessage;", "modifier": "private", "type": "String", "declarator": "locationEnableRejectionDialogMessage", "var_name": "locationEnableRejectionDialogMessage"}, {"original_string": "private OnLocationServicesEnabledCallBack onLocationServicesEnabledCallBack;", "modifier": "private", "type": "OnLocationServicesEnabledCallBack", "declarator": "onLocationServicesEnabledCallBack", "var_name": "onLocationServicesEnabledCallBack"}, {"original_string": "private ArrayList<KujakuLayer> kujakuLayers = new ArrayList<>();", "modifier": "private", "type": "ArrayList<KujakuLayer>", "declarator": "kujakuLayers = new ArrayList<>()", "var_name": "kujakuLayers"}, {"original_string": "private ArrayList<LocationClientStartedCallback> locationClientCallbacks = new ArrayList<>();", "modifier": "private", "type": "ArrayList<LocationClientStartedCallback>", "declarator": "locationClientCallbacks = new ArrayList<>()", "var_name": "locationClientCallbacks"}, {"original_string": "private TrackingService trackingService = null;", "modifier": "private", "type": "TrackingService", "declarator": "trackingService = null", "var_name": "trackingService"}, {"original_string": "private boolean trackingServiceBound = false;", "modifier": "private", "type": "boolean", "declarator": "trackingServiceBound = false", "var_name": "trackingServiceBound"}, {"original_string": "private TrackingServiceListener trackingServiceListener = null;", "modifier": "private", "type": "TrackingServiceListener", "declarator": "trackingServiceListener = null", "var_name": "trackingServiceListener"}, {"original_string": "private TrackingServiceUIConfiguration trackingServiceUIConfiguration = null;", "modifier": "private", "type": "TrackingServiceUIConfiguration", "declarator": "trackingServiceUIConfiguration = null", "var_name": "trackingServiceUIConfiguration"}, {"original_string": "private TrackingServiceOptions trackingServiceOptions = null;", "modifier": "private", "type": "TrackingServiceOptions", "declarator": "trackingServiceOptions = null", "var_name": "trackingServiceOptions"}, {"original_string": "private boolean trackingServiceInitialized = false;", "modifier": "private", "type": "boolean", "declarator": "trackingServiceInitialized = false", "var_name": "trackingServiceInitialized"}, {"original_string": "private int resourceId;", "modifier": "private", "type": "int", "declarator": "resourceId", "var_name": "resourceId"}, {"original_string": "private boolean disableMyLocationOnMapMove = false;", "modifier": "private", "type": "boolean", "declarator": "disableMyLocationOnMapMove = false", "var_name": "disableMyLocationOnMapMove"}, {"original_string": "private boolean useGoogleLocationClientInsteadOfAndroidGpsClient = true;", "modifier": "private", "type": "boolean", "declarator": "useGoogleLocationClientInsteadOfAndroidGpsClient = true", "var_name": "useGoogleLocationClientInsteadOfAndroidGpsClient"}, {"original_string": "private MBTilesHelper mbTilesHelper;", "modifier": "private", "type": "MBTilesHelper", "declarator": "mbTilesHelper", "var_name": "mbTilesHelper"}, {"original_string": "private ServiceConnection connection = new ServiceConnection() {\n        @Override\n        public void onServiceConnected(ComponentName className,\n                                       IBinder service) {\n            // We've bound to TrackingService, cast the IBinder and get TrackingService instance\n            TrackingService.LocalBinder binder = (TrackingService.LocalBinder) service;\n            trackingService = binder.getService();\n            trackingService.registerTrackingServiceListener(trackingServiceListener);\n            trackingServiceBound = true;\n\n            trackingServiceStatusButton.setImageResource(trackingServiceUIConfiguration.getRecordingDrawable());\n\n            ((Activity) getContext()).runOnUiThread(new Runnable() {\n                @Override\n                public void run() {\n                    trackingServiceListener.onServiceConnected(trackingService);\n                }\n            });\n        }\n\n        @Override\n        public void onServiceDisconnected(ComponentName arg0) {\n            if (trackingService != null) {\n                trackingService.unregisterTrackingServiceListener();\n            }\n            trackingServiceBound = false;\n            trackingService = null;\n            trackingServiceStatusButton.setImageResource(trackingServiceUIConfiguration.getStoppedDrawable());\n\n            ((Activity) getContext()).runOnUiThread(new Runnable() {\n                @Override\n                public void run() {\n                    trackingServiceListener.onServiceDisconnected();\n                }\n            });\n        }\n    };", "modifier": "private", "type": "ServiceConnection", "declarator": "connection = new ServiceConnection() {\n        @Override\n        public void onServiceConnected(ComponentName className,\n                                       IBinder service) {\n            // We've bound to TrackingService, cast the IBinder and get TrackingService instance\n            TrackingService.LocalBinder binder = (TrackingService.LocalBinder) service;\n            trackingService = binder.getService();\n            trackingService.registerTrackingServiceListener(trackingServiceListener);\n            trackingServiceBound = true;\n\n            trackingServiceStatusButton.setImageResource(trackingServiceUIConfiguration.getRecordingDrawable());\n\n            ((Activity) getContext()).runOnUiThread(new Runnable() {\n                @Override\n                public void run() {\n                    trackingServiceListener.onServiceConnected(trackingService);\n                }\n            });\n        }\n\n        @Override\n        public void onServiceDisconnected(ComponentName arg0) {\n            if (trackingService != null) {\n                trackingService.unregisterTrackingServiceListener();\n            }\n            trackingServiceBound = false;\n            trackingService = null;\n            trackingServiceStatusButton.setImageResource(trackingServiceUIConfiguration.getStoppedDrawable());\n\n            ((Activity) getContext()).runOnUiThread(new Runnable() {\n                @Override\n                public void run() {\n                    trackingServiceListener.onServiceDisconnected();\n                }\n            });\n        }\n    }", "var_name": "connection"}], "methods": [{"identifier": "KujakuMapView", "parameters": "(@NonNull Context context)", "modifiers": "public", "return": "", "signature": " KujakuMapView(@NonNull Context context)", "full_signature": "public  KujakuMapView(@NonNull Context context)", "class_method_signature": "KujakuMapView.KujakuMapView(@NonNull Context context)", "testcase": false, "constructor": true}, {"identifier": "KujakuMapView", "parameters": "(@NonNull Context context, @Nullable AttributeSet attrs)", "modifiers": "public", "return": "", "signature": " KujakuMapView(@NonNull Context context, @Nullable AttributeSet attrs)", "full_signature": "public  KujakuMapView(@NonNull Context context, @Nullable AttributeSet attrs)", "class_method_signature": "KujakuMapView.KujakuMapView(@NonNull Context context, @Nullable AttributeSet attrs)", "testcase": false, "constructor": true}, {"identifier": "KujakuMapView", "parameters": "(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr)", "modifiers": "public", "return": "", "signature": " KujakuMapView(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr)", "full_signature": "public  KujakuMapView(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr)", "class_method_signature": "KujakuMapView.KujakuMapView(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr)", "testcase": false, "constructor": true}, {"identifier": "KujakuMapView", "parameters": "(@NonNull Context context, @Nullable MapboxMapOptions options)", "modifiers": "public", "return": "", "signature": " KujakuMapView(@NonNull Context context, @Nullable MapboxMapOptions options)", "full_signature": "public  KujakuMapView(@NonNull Context context, @Nullable MapboxMapOptions options)", "class_method_signature": "KujakuMapView.KujakuMapView(@NonNull Context context, @Nullable MapboxMapOptions options)", "testcase": false, "constructor": true}, {"identifier": "init", "parameters": "(@Nullable AttributeSet attributeSet)", "modifiers": "private", "return": "void", "signature": "void init(@Nullable AttributeSet attributeSet)", "full_signature": "private void init(@Nullable AttributeSet attributeSet)", "class_method_signature": "KujakuMapView.init(@Nullable AttributeSet attributeSet)", "testcase": false, "constructor": false}, {"identifier": "showUpdatedUserLocation", "parameters": "(Float radius)", "modifiers": "private", "return": "void", "signature": "void showUpdatedUserLocation(Float radius)", "full_signature": "private void showUpdatedUserLocation(Float radius)", "class_method_signature": "KujakuMapView.showUpdatedUserLocation(Float radius)", "testcase": false, "constructor": false}, {"identifier": "showUpdatedUserLocation", "parameters": "(Float radius, Float distanceMoved)", "modifiers": "private", "return": "void", "signature": "void showUpdatedUserLocation(Float radius, Float distanceMoved)", "full_signature": "private void showUpdatedUserLocation(Float radius, Float distanceMoved)", "class_method_signature": "KujakuMapView.showUpdatedUserLocation(Float radius, Float distanceMoved)", "testcase": false, "constructor": false}, {"identifier": "warmUpLocationServices", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void warmUpLocationServices()", "full_signature": "private void warmUpLocationServices()", "class_method_signature": "KujakuMapView.warmUpLocationServices()", "testcase": false, "constructor": false}, {"identifier": "extractStyleValues", "parameters": "(@Nullable AttributeSet attrs)", "modifiers": "private", "return": "Map<String, Object>", "signature": "Map<String, Object> extractStyleValues(@Nullable AttributeSet attrs)", "full_signature": "private Map<String, Object> extractStyleValues(@Nullable AttributeSet attrs)", "class_method_signature": "KujakuMapView.extractStyleValues(@Nullable AttributeSet attrs)", "testcase": false, "constructor": false}, {"identifier": "addPoint", "parameters": "(boolean useGPS, @NonNull final AddPointCallback addPointCallback)", "modifiers": "@Override public", "return": "void", "signature": "void addPoint(boolean useGPS, @NonNull final AddPointCallback addPointCallback)", "full_signature": "@Override public void addPoint(boolean useGPS, @NonNull final AddPointCallback addPointCallback)", "class_method_signature": "KujakuMapView.addPoint(boolean useGPS, @NonNull final AddPointCallback addPointCallback)", "testcase": false, "constructor": false}, {"identifier": "addPoint", "parameters": "(boolean useGPS, @NonNull AddPointCallback addPointCallback, @Nullable MarkerOptions markerOptions)", "modifiers": "@Override public", "return": "void", "signature": "void addPoint(boolean useGPS, @NonNull AddPointCallback addPointCallback, @Nullable MarkerOptions markerOptions)", "full_signature": "@Override public void addPoint(boolean useGPS, @NonNull AddPointCallback addPointCallback, @Nullable MarkerOptions markerOptions)", "class_method_signature": "KujakuMapView.addPoint(boolean useGPS, @NonNull AddPointCallback addPointCallback, @Nullable MarkerOptions markerOptions)", "testcase": false, "constructor": false}, {"identifier": "showAddPointLayout", "parameters": "(boolean showLayout)", "modifiers": "private", "return": "void", "signature": "void showAddPointLayout(boolean showLayout)", "full_signature": "private void showAddPointLayout(boolean showLayout)", "class_method_signature": "KujakuMapView.showAddPointLayout(boolean showLayout)", "testcase": false, "constructor": false}, {"identifier": "addPoint", "parameters": "(boolean useGPS, @NonNull AddPointCallback addPointCallback, @DrawableRes int markerResourceId)", "modifiers": "@Override public", "return": "void", "signature": "void addPoint(boolean useGPS, @NonNull AddPointCallback addPointCallback, @DrawableRes int markerResourceId)", "full_signature": "@Override public void addPoint(boolean useGPS, @NonNull AddPointCallback addPointCallback, @DrawableRes int markerResourceId)", "class_method_signature": "KujakuMapView.addPoint(boolean useGPS, @NonNull AddPointCallback addPointCallback, @DrawableRes int markerResourceId)", "testcase": false, "constructor": false}, {"identifier": "enableAddPoint", "parameters": "(boolean canAddPoint)", "modifiers": "@Override public", "return": "void", "signature": "void enableAddPoint(boolean canAddPoint)", "full_signature": "@Override public void enableAddPoint(boolean canAddPoint)", "class_method_signature": "KujakuMapView.enableAddPoint(boolean canAddPoint)", "testcase": false, "constructor": false}, {"identifier": "showMarkerLayout", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void showMarkerLayout()", "full_signature": "private void showMarkerLayout()", "class_method_signature": "KujakuMapView.showMarkerLayout()", "testcase": false, "constructor": false}, {"identifier": "hideMarkerLayout", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void hideMarkerLayout()", "full_signature": "private void hideMarkerLayout()", "class_method_signature": "KujakuMapView.hideMarkerLayout()", "testcase": false, "constructor": false}, {"identifier": "setViewVisibility", "parameters": "(View view, boolean isVisible)", "modifiers": "public", "return": "void", "signature": "void setViewVisibility(View view, boolean isVisible)", "full_signature": "public void setViewVisibility(View view, boolean isVisible)", "class_method_signature": "KujakuMapView.setViewVisibility(View view, boolean isVisible)", "testcase": false, "constructor": false}, {"identifier": "enableAddPoint", "parameters": "(boolean canAddPoint, @Nullable final OnLocationChanged onLocationChanged)", "modifiers": "@Override public", "return": "void", "signature": "void enableAddPoint(boolean canAddPoint, @Nullable final OnLocationChanged onLocationChanged)", "full_signature": "@Override public void enableAddPoint(boolean canAddPoint, @Nullable final OnLocationChanged onLocationChanged)", "class_method_signature": "KujakuMapView.enableAddPoint(boolean canAddPoint, @Nullable final OnLocationChanged onLocationChanged)", "testcase": false, "constructor": false}, {"identifier": "updateUserLocation", "parameters": "(Float locationBufferRadius)", "modifiers": "private", "return": "void", "signature": "void updateUserLocation(Float locationBufferRadius)", "full_signature": "private void updateUserLocation(Float locationBufferRadius)", "class_method_signature": "KujakuMapView.updateUserLocation(Float locationBufferRadius)", "testcase": false, "constructor": false}, {"identifier": "dropPoint", "parameters": "()", "modifiers": "@Override public @Nullable", "return": "JSONObject", "signature": "JSONObject dropPoint()", "full_signature": "@Override public @Nullable JSONObject dropPoint()", "class_method_signature": "KujakuMapView.dropPoint()", "testcase": false, "constructor": false}, {"identifier": "dropPoint", "parameters": "(@DrawableRes int markerResourceId)", "modifiers": "@Nullable @Override public", "return": "JSONObject", "signature": "JSONObject dropPoint(@DrawableRes int markerResourceId)", "full_signature": "@Nullable @Override public JSONObject dropPoint(@DrawableRes int markerResourceId)", "class_method_signature": "KujakuMapView.dropPoint(@DrawableRes int markerResourceId)", "testcase": false, "constructor": false}, {"identifier": "dropPoint", "parameters": "(@Nullable LatLng latLng)", "modifiers": "@Override public @Nullable", "return": "JSONObject", "signature": "JSONObject dropPoint(@Nullable LatLng latLng)", "full_signature": "@Override public @Nullable JSONObject dropPoint(@Nullable LatLng latLng)", "class_method_signature": "KujakuMapView.dropPoint(@Nullable LatLng latLng)", "testcase": false, "constructor": false}, {"identifier": "dropPoint", "parameters": "(@Nullable MarkerOptions markerOptions)", "modifiers": "@Nullable @Override public", "return": "JSONObject", "signature": "JSONObject dropPoint(@Nullable MarkerOptions markerOptions)", "full_signature": "@Nullable @Override public JSONObject dropPoint(@Nullable MarkerOptions markerOptions)", "class_method_signature": "KujakuMapView.dropPoint(@Nullable MarkerOptions markerOptions)", "testcase": false, "constructor": false}, {"identifier": "dropPoint", "parameters": "(@Nullable LatLng latLng, @DrawableRes int markerResourceId)", "modifiers": "@Nullable @Override public", "return": "JSONObject", "signature": "JSONObject dropPoint(@Nullable LatLng latLng, @DrawableRes int markerResourceId)", "full_signature": "@Nullable @Override public JSONObject dropPoint(@Nullable LatLng latLng, @DrawableRes int markerResourceId)", "class_method_signature": "KujakuMapView.dropPoint(@Nullable LatLng latLng, @DrawableRes int markerResourceId)", "testcase": false, "constructor": false}, {"identifier": "getMapboxMap", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void getMapboxMap()", "full_signature": "private void getMapboxMap()", "class_method_signature": "KujakuMapView.getMapboxMap()", "testcase": false, "constructor": false}, {"identifier": "afterStyleLoadedOperations", "parameters": "(@NonNull Style style)", "modifiers": "private", "return": "void", "signature": "void afterStyleLoadedOperations(@NonNull Style style)", "full_signature": "private void afterStyleLoadedOperations(@NonNull Style style)", "class_method_signature": "KujakuMapView.afterStyleLoadedOperations(@NonNull Style style)", "testcase": false, "constructor": false}, {"identifier": "addPrimaryGeoJsonSourceAndLayerToStyle", "parameters": "(@NonNull Style style)", "modifiers": "private", "return": "void", "signature": "void addPrimaryGeoJsonSourceAndLayerToStyle(@NonNull Style style)", "full_signature": "private void addPrimaryGeoJsonSourceAndLayerToStyle(@NonNull Style style)", "class_method_signature": "KujakuMapView.addPrimaryGeoJsonSourceAndLayerToStyle(@NonNull Style style)", "testcase": false, "constructor": false}, {"identifier": "getWmtsLayers", "parameters": "()", "modifiers": "public", "return": "Set<WmtsLayer>", "signature": "Set<WmtsLayer> getWmtsLayers()", "full_signature": "public Set<WmtsLayer> getWmtsLayers()", "class_method_signature": "KujakuMapView.getWmtsLayers()", "testcase": false, "constructor": false}, {"identifier": "addWmtsLayer", "parameters": "(@NonNull WmtsCapabilities capabilities)", "modifiers": "@Override public", "return": "void", "signature": "void addWmtsLayer(@NonNull WmtsCapabilities capabilities)", "full_signature": "@Override public void addWmtsLayer(@NonNull WmtsCapabilities capabilities)", "class_method_signature": "KujakuMapView.addWmtsLayer(@NonNull WmtsCapabilities capabilities)", "testcase": false, "constructor": false}, {"identifier": "addWmtsLayer", "parameters": "(@NonNull WmtsCapabilities capabilities, @Nullable String layerIdentifier)", "modifiers": "@Override public", "return": "void", "signature": "void addWmtsLayer(@NonNull WmtsCapabilities capabilities, @Nullable String layerIdentifier)", "full_signature": "@Override public void addWmtsLayer(@NonNull WmtsCapabilities capabilities, @Nullable String layerIdentifier)", "class_method_signature": "KujakuMapView.addWmtsLayer(@NonNull WmtsCapabilities capabilities, @Nullable String layerIdentifier)", "testcase": false, "constructor": false}, {"identifier": "addWmtsLayer", "parameters": "(@NonNull WmtsCapabilities capabilities, @Nullable String layerIdentifier, @Nullable String styleIdentifier)", "modifiers": "@Override public", "return": "void", "signature": "void addWmtsLayer(@NonNull WmtsCapabilities capabilities, @Nullable String layerIdentifier, @Nullable String styleIdentifier)", "full_signature": "@Override public void addWmtsLayer(@NonNull WmtsCapabilities capabilities, @Nullable String layerIdentifier, @Nullable String styleIdentifier)", "class_method_signature": "KujakuMapView.addWmtsLayer(@NonNull WmtsCapabilities capabilities, @Nullable String layerIdentifier, @Nullable String styleIdentifier)", "testcase": false, "constructor": false}, {"identifier": "addWmtsLayer", "parameters": "(@NonNull WmtsCapabilities capabilities, @Nullable String layerIdentifier, @Nullable String styleIdentifier, @Nullable String tileMatrixSetLinkIdentifier)", "modifiers": "@Override public", "return": "void", "signature": "void addWmtsLayer(@NonNull WmtsCapabilities capabilities, @Nullable String layerIdentifier, @Nullable String styleIdentifier, @Nullable String tileMatrixSetLinkIdentifier)", "full_signature": "@Override public void addWmtsLayer(@NonNull WmtsCapabilities capabilities, @Nullable String layerIdentifier, @Nullable String styleIdentifier, @Nullable String tileMatrixSetLinkIdentifier)", "class_method_signature": "KujakuMapView.addWmtsLayer(@NonNull WmtsCapabilities capabilities, @Nullable String layerIdentifier, @Nullable String styleIdentifier, @Nullable String tileMatrixSetLinkIdentifier)", "testcase": false, "constructor": false}, {"identifier": "addMapScrollListenerAndBoundsChangeEmitterToMap", "parameters": "(@NonNull MapboxMap mapboxMap)", "modifiers": "private", "return": "void", "signature": "void addMapScrollListenerAndBoundsChangeEmitterToMap(@NonNull MapboxMap mapboxMap)", "full_signature": "private void addMapScrollListenerAndBoundsChangeEmitterToMap(@NonNull MapboxMap mapboxMap)", "class_method_signature": "KujakuMapView.addMapScrollListenerAndBoundsChangeEmitterToMap(@NonNull MapboxMap mapboxMap)", "testcase": false, "constructor": false}, {"identifier": "callBoundsChangedListeners", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void callBoundsChangedListeners()", "full_signature": "private void callBoundsChangedListeners()", "class_method_signature": "KujakuMapView.callBoundsChangedListeners()", "testcase": false, "constructor": false}, {"identifier": "getCurrentBounds", "parameters": "()", "modifiers": "@VisibleForTesting @Nullable protected", "return": "VisibleRegion", "signature": "VisibleRegion getCurrentBounds()", "full_signature": "@VisibleForTesting @Nullable protected VisibleRegion getCurrentBounds()", "class_method_signature": "KujakuMapView.getCurrentBounds()", "testcase": false, "constructor": false}, {"identifier": "enableFeatureClickListenerEmitter", "parameters": "(@NonNull MapboxMap mapboxMap)", "modifiers": "private", "return": "void", "signature": "void enableFeatureClickListenerEmitter(@NonNull MapboxMap mapboxMap)", "full_signature": "private void enableFeatureClickListenerEmitter(@NonNull MapboxMap mapboxMap)", "class_method_signature": "KujakuMapView.enableFeatureClickListenerEmitter(@NonNull MapboxMap mapboxMap)", "testcase": false, "constructor": false}, {"identifier": "dropPointOnMap", "parameters": "(@NonNull LatLng latLng)", "modifiers": "private", "return": "void", "signature": "void dropPointOnMap(@NonNull LatLng latLng)", "full_signature": "private void dropPointOnMap(@NonNull LatLng latLng)", "class_method_signature": "KujakuMapView.dropPointOnMap(@NonNull LatLng latLng)", "testcase": false, "constructor": false}, {"identifier": "dropPointOnMap", "parameters": "(@NonNull LatLng latLng, @Nullable MarkerOptions markerOptionsParam)", "modifiers": "private", "return": "void", "signature": "void dropPointOnMap(@NonNull LatLng latLng, @Nullable MarkerOptions markerOptionsParam)", "full_signature": "private void dropPointOnMap(@NonNull LatLng latLng, @Nullable MarkerOptions markerOptionsParam)", "class_method_signature": "KujakuMapView.dropPointOnMap(@NonNull LatLng latLng, @Nullable MarkerOptions markerOptionsParam)", "testcase": false, "constructor": false}, {"identifier": "isCanAddPoint", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isCanAddPoint()", "full_signature": "public boolean isCanAddPoint()", "class_method_signature": "KujakuMapView.isCanAddPoint()", "testcase": false, "constructor": false}, {"identifier": "centerMap", "parameters": "(@NonNull LatLng point, int animateToNewTargetDuration, double newZoom)", "modifiers": "public", "return": "void", "signature": "void centerMap(@NonNull LatLng point, int animateToNewTargetDuration, double newZoom)", "full_signature": "public void centerMap(@NonNull LatLng point, int animateToNewTargetDuration, double newZoom)", "class_method_signature": "KujakuMapView.centerMap(@NonNull LatLng point, int animateToNewTargetDuration, double newZoom)", "testcase": false, "constructor": false}, {"identifier": "centerMap", "parameters": "(@NonNull LatLng point, int animateToNewTargetDuration)", "modifiers": "public", "return": "void", "signature": "void centerMap(@NonNull LatLng point, int animateToNewTargetDuration)", "full_signature": "public void centerMap(@NonNull LatLng point, int animateToNewTargetDuration)", "class_method_signature": "KujakuMapView.centerMap(@NonNull LatLng point, int animateToNewTargetDuration)", "testcase": false, "constructor": false}, {"identifier": "getZoomToUse", "parameters": "(@NonNull MapboxMap mapboxMap, double zoomLevel)", "modifiers": "private", "return": "double", "signature": "double getZoomToUse(@NonNull MapboxMap mapboxMap, double zoomLevel)", "full_signature": "private double getZoomToUse(@NonNull MapboxMap mapboxMap, double zoomLevel)", "class_method_signature": "KujakuMapView.getZoomToUse(@NonNull MapboxMap mapboxMap, double zoomLevel)", "testcase": false, "constructor": false}, {"identifier": "onStop", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onStop()", "full_signature": "@Override public void onStop()", "class_method_signature": "KujakuMapView.onStop()", "testcase": false, "constructor": false}, {"identifier": "showCurrentLocationBtn", "parameters": "(boolean isVisible)", "modifiers": "@Override public", "return": "void", "signature": "void showCurrentLocationBtn(boolean isVisible)", "full_signature": "@Override public void showCurrentLocationBtn(boolean isVisible)", "class_method_signature": "KujakuMapView.showCurrentLocationBtn(boolean isVisible)", "testcase": false, "constructor": false}, {"identifier": "setVisibility", "parameters": "(View view, boolean isVisible)", "modifiers": "public", "return": "void", "signature": "void setVisibility(View view, boolean isVisible)", "full_signature": "public void setVisibility(View view, boolean isVisible)", "class_method_signature": "KujakuMapView.setVisibility(View view, boolean isVisible)", "testcase": false, "constructor": false}, {"identifier": "getDroppedPoints", "parameters": "()", "modifiers": "public", "return": "Set<io.ona.kujaku.domain.Point>", "signature": "Set<io.ona.kujaku.domain.Point> getDroppedPoints()", "full_signature": "public Set<io.ona.kujaku.domain.Point> getDroppedPoints()", "class_method_signature": "KujakuMapView.getDroppedPoints()", "testcase": false, "constructor": false}, {"identifier": "updateDroppedPoints", "parameters": "(List<io.ona.kujaku.domain.Point> droppedPoints)", "modifiers": "public", "return": "void", "signature": "void updateDroppedPoints(List<io.ona.kujaku.domain.Point> droppedPoints)", "full_signature": "public void updateDroppedPoints(List<io.ona.kujaku.domain.Point> droppedPoints)", "class_method_signature": "KujakuMapView.updateDroppedPoints(List<io.ona.kujaku.domain.Point> droppedPoints)", "testcase": false, "constructor": false}, {"identifier": "setOnFeatureClickListener", "parameters": "(@NonNull OnFeatureClickListener onFeatureClickListener, @Nullable String... layerIds)", "modifiers": "@Override public", "return": "void", "signature": "void setOnFeatureClickListener(@NonNull OnFeatureClickListener onFeatureClickListener, @Nullable String... layerIds)", "full_signature": "@Override public void setOnFeatureClickListener(@NonNull OnFeatureClickListener onFeatureClickListener, @Nullable String... layerIds)", "class_method_signature": "KujakuMapView.setOnFeatureClickListener(@NonNull OnFeatureClickListener onFeatureClickListener, @Nullable String... layerIds)", "testcase": false, "constructor": false}, {"identifier": "setOnFeatureClickListener", "parameters": "(@NonNull OnFeatureClickListener onFeatureClickListener, @Nullable Expression expressionFilter, @Nullable String... layerIds)", "modifiers": "@Override public", "return": "void", "signature": "void setOnFeatureClickListener(@NonNull OnFeatureClickListener onFeatureClickListener, @Nullable Expression expressionFilter, @Nullable String... layerIds)", "full_signature": "@Override public void setOnFeatureClickListener(@NonNull OnFeatureClickListener onFeatureClickListener, @Nullable Expression expressionFilter, @Nullable String... layerIds)", "class_method_signature": "KujakuMapView.setOnFeatureClickListener(@NonNull OnFeatureClickListener onFeatureClickListener, @Nullable Expression expressionFilter, @Nullable String... layerIds)", "testcase": false, "constructor": false}, {"identifier": "setOnFeatureLongClickListener", "parameters": "(@NonNull OnFeatureLongClickListener onFeatureLongClickListener, @Nullable String... layerIds)", "modifiers": "@Override public", "return": "void", "signature": "void setOnFeatureLongClickListener(@NonNull OnFeatureLongClickListener onFeatureLongClickListener, @Nullable String... layerIds)", "full_signature": "@Override public void setOnFeatureLongClickListener(@NonNull OnFeatureLongClickListener onFeatureLongClickListener, @Nullable String... layerIds)", "class_method_signature": "KujakuMapView.setOnFeatureLongClickListener(@NonNull OnFeatureLongClickListener onFeatureLongClickListener, @Nullable String... layerIds)", "testcase": false, "constructor": false}, {"identifier": "setOnFeatureLongClickListener", "parameters": "(@NonNull OnFeatureLongClickListener onFeatureLongClickListener, @Nullable Expression expressionFilter, @Nullable String... layerIds)", "modifiers": "@Override public", "return": "void", "signature": "void setOnFeatureLongClickListener(@NonNull OnFeatureLongClickListener onFeatureLongClickListener, @Nullable Expression expressionFilter, @Nullable String... layerIds)", "full_signature": "@Override public void setOnFeatureLongClickListener(@NonNull OnFeatureLongClickListener onFeatureLongClickListener, @Nullable Expression expressionFilter, @Nullable String... layerIds)", "class_method_signature": "KujakuMapView.setOnFeatureLongClickListener(@NonNull OnFeatureLongClickListener onFeatureLongClickListener, @Nullable Expression expressionFilter, @Nullable String... layerIds)", "testcase": false, "constructor": false}, {"identifier": "setOnKujakuLayerClickListener", "parameters": "(@NonNull OnKujakuLayerClickListener onKujakuLayerClickListener)", "modifiers": "public", "return": "void", "signature": "void setOnKujakuLayerClickListener(@NonNull OnKujakuLayerClickListener onKujakuLayerClickListener)", "full_signature": "public void setOnKujakuLayerClickListener(@NonNull OnKujakuLayerClickListener onKujakuLayerClickListener)", "class_method_signature": "KujakuMapView.setOnKujakuLayerClickListener(@NonNull OnKujakuLayerClickListener onKujakuLayerClickListener)", "testcase": false, "constructor": false}, {"identifier": "setOnKujakuLayerLongClickListener", "parameters": "(@NonNull OnKujakuLayerLongClickListener onKujakuLayerLongClickListener)", "modifiers": "public", "return": "void", "signature": "void setOnKujakuLayerLongClickListener(@NonNull OnKujakuLayerLongClickListener onKujakuLayerLongClickListener)", "full_signature": "public void setOnKujakuLayerLongClickListener(@NonNull OnKujakuLayerLongClickListener onKujakuLayerLongClickListener)", "class_method_signature": "KujakuMapView.setOnKujakuLayerLongClickListener(@NonNull OnKujakuLayerLongClickListener onKujakuLayerLongClickListener)", "testcase": false, "constructor": false}, {"identifier": "focusOnUserLocation", "parameters": "(boolean focusOnMyLocation)", "modifiers": "@Override public", "return": "void", "signature": "void focusOnUserLocation(boolean focusOnMyLocation)", "full_signature": "@Override public void focusOnUserLocation(boolean focusOnMyLocation)", "class_method_signature": "KujakuMapView.focusOnUserLocation(boolean focusOnMyLocation)", "testcase": false, "constructor": false}, {"identifier": "focusOnUserLocation", "parameters": "(boolean focusOnMyLocation, int renderMode)", "modifiers": "@Override public", "return": "void", "signature": "void focusOnUserLocation(boolean focusOnMyLocation, int renderMode)", "full_signature": "@Override public void focusOnUserLocation(boolean focusOnMyLocation, int renderMode)", "class_method_signature": "KujakuMapView.focusOnUserLocation(boolean focusOnMyLocation, int renderMode)", "testcase": false, "constructor": false}, {"identifier": "focusOnUserLocation", "parameters": "(boolean focusOnMyLocation, Float radius)", "modifiers": "@Override public", "return": "void", "signature": "void focusOnUserLocation(boolean focusOnMyLocation, Float radius)", "full_signature": "@Override public void focusOnUserLocation(boolean focusOnMyLocation, Float radius)", "class_method_signature": "KujakuMapView.focusOnUserLocation(boolean focusOnMyLocation, Float radius)", "testcase": false, "constructor": false}, {"identifier": "focusOnUserLocation", "parameters": "(boolean focusOnMyLocation, Float radius, int renderMode)", "modifiers": "@Override public", "return": "void", "signature": "void focusOnUserLocation(boolean focusOnMyLocation, Float radius, int renderMode)", "full_signature": "@Override public void focusOnUserLocation(boolean focusOnMyLocation, Float radius, int renderMode)", "class_method_signature": "KujakuMapView.focusOnUserLocation(boolean focusOnMyLocation, Float radius, int renderMode)", "testcase": false, "constructor": false}, {"identifier": "setBoundsChangeListener", "parameters": "(@Nullable BoundsChangeListener boundsChangeListener)", "modifiers": "@Override public", "return": "void", "signature": "void setBoundsChangeListener(@Nullable BoundsChangeListener boundsChangeListener)", "full_signature": "@Override public void setBoundsChangeListener(@Nullable BoundsChangeListener boundsChangeListener)", "class_method_signature": "KujakuMapView.setBoundsChangeListener(@Nullable BoundsChangeListener boundsChangeListener)", "testcase": false, "constructor": false}, {"identifier": "changeImageButtonResource", "parameters": "(ImageButton imageButton, int resourceId)", "modifiers": "private", "return": "void", "signature": "void changeImageButtonResource(ImageButton imageButton, int resourceId)", "full_signature": "private void changeImageButtonResource(ImageButton imageButton, int resourceId)", "class_method_signature": "KujakuMapView.changeImageButtonResource(ImageButton imageButton, int resourceId)", "testcase": false, "constructor": false}, {"identifier": "addFeaturePoints", "parameters": "(FeatureCollection featureCollection)", "modifiers": "@Override public", "return": "void", "signature": "void addFeaturePoints(FeatureCollection featureCollection)", "full_signature": "@Override public void addFeaturePoints(FeatureCollection featureCollection)", "class_method_signature": "KujakuMapView.addFeaturePoints(FeatureCollection featureCollection)", "testcase": false, "constructor": false}, {"identifier": "updateFeaturePointProperties", "parameters": "(FeatureCollection featureCollection)", "modifiers": "@Override public", "return": "void", "signature": "void updateFeaturePointProperties(FeatureCollection featureCollection)", "full_signature": "@Override public void updateFeaturePointProperties(FeatureCollection featureCollection)", "class_method_signature": "KujakuMapView.updateFeaturePointProperties(FeatureCollection featureCollection)", "testcase": false, "constructor": false}, {"identifier": "initializePrimaryGeoJsonSource", "parameters": "(String sourceId, boolean isFetchSourceFromStyle, String geoJsonSource)", "modifiers": "public", "return": "void", "signature": "void initializePrimaryGeoJsonSource(String sourceId, boolean isFetchSourceFromStyle, String geoJsonSource)", "full_signature": "public void initializePrimaryGeoJsonSource(String sourceId, boolean isFetchSourceFromStyle, String geoJsonSource)", "class_method_signature": "KujakuMapView.initializePrimaryGeoJsonSource(String sourceId, boolean isFetchSourceFromStyle, String geoJsonSource)", "testcase": false, "constructor": false}, {"identifier": "initializeSourceAndFeatureCollectionFromStyle", "parameters": "(@NonNull Style style)", "modifiers": "private", "return": "void", "signature": "void initializeSourceAndFeatureCollectionFromStyle(@NonNull Style style)", "full_signature": "private void initializeSourceAndFeatureCollectionFromStyle(@NonNull Style style)", "class_method_signature": "KujakuMapView.initializeSourceAndFeatureCollectionFromStyle(@NonNull Style style)", "testcase": false, "constructor": false}, {"identifier": "getCameraPosition", "parameters": "()", "modifiers": "public", "return": "CameraPosition", "signature": "CameraPosition getCameraPosition()", "full_signature": "public CameraPosition getCameraPosition()", "class_method_signature": "KujakuMapView.getCameraPosition()", "testcase": false, "constructor": false}, {"identifier": "setCameraPosition", "parameters": "(CameraPosition cameraPosition)", "modifiers": "public", "return": "void", "signature": "void setCameraPosition(CameraPosition cameraPosition)", "full_signature": "public void setCameraPosition(CameraPosition cameraPosition)", "class_method_signature": "KujakuMapView.setCameraPosition(CameraPosition cameraPosition)", "testcase": false, "constructor": false}, {"identifier": "getPrimaryGeoJsonSource", "parameters": "()", "modifiers": "public", "return": "GeoJsonSource", "signature": "GeoJsonSource getPrimaryGeoJsonSource()", "full_signature": "public GeoJsonSource getPrimaryGeoJsonSource()", "class_method_signature": "KujakuMapView.getPrimaryGeoJsonSource()", "testcase": false, "constructor": false}, {"identifier": "getPrimaryLayer", "parameters": "()", "modifiers": "public", "return": "Layer", "signature": "Layer getPrimaryLayer()", "full_signature": "public Layer getPrimaryLayer()", "class_method_signature": "KujakuMapView.getPrimaryLayer()", "testcase": false, "constructor": false}, {"identifier": "setPrimaryLayer", "parameters": "(Layer layer)", "modifiers": "public", "return": "void", "signature": "void setPrimaryLayer(Layer layer)", "full_signature": "public void setPrimaryLayer(Layer layer)", "class_method_signature": "KujakuMapView.setPrimaryLayer(Layer layer)", "testcase": false, "constructor": false}, {"identifier": "getPrimaryGeoJsonSourceId", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getPrimaryGeoJsonSourceId()", "full_signature": "public String getPrimaryGeoJsonSourceId()", "class_method_signature": "KujakuMapView.getPrimaryGeoJsonSourceId()", "testcase": false, "constructor": false}, {"identifier": "setPrimaryGeoJsonSourceId", "parameters": "(String primaryGeoJsonSourceId)", "modifiers": "public", "return": "void", "signature": "void setPrimaryGeoJsonSourceId(String primaryGeoJsonSourceId)", "full_signature": "public void setPrimaryGeoJsonSourceId(String primaryGeoJsonSourceId)", "class_method_signature": "KujakuMapView.setPrimaryGeoJsonSourceId(String primaryGeoJsonSourceId)", "testcase": false, "constructor": false}, {"identifier": "getGeoJsonSourceString", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String getGeoJsonSourceString()", "full_signature": "public String getGeoJsonSourceString()", "class_method_signature": "KujakuMapView.getGeoJsonSourceString()", "testcase": false, "constructor": false}, {"identifier": "setGeoJsonSourceString", "parameters": "(String geoJsonSourceString)", "modifiers": "public", "return": "void", "signature": "void setGeoJsonSourceString(String geoJsonSourceString)", "full_signature": "public void setGeoJsonSourceString(String geoJsonSourceString)", "class_method_signature": "KujakuMapView.setGeoJsonSourceString(String geoJsonSourceString)", "testcase": false, "constructor": false}, {"identifier": "onPause", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onPause()", "full_signature": "@Override public void onPause()", "class_method_signature": "KujakuMapView.onPause()", "testcase": false, "constructor": false}, {"identifier": "onResume", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onResume()", "full_signature": "@Override public void onResume()", "class_method_signature": "KujakuMapView.onResume()", "testcase": false, "constructor": false}, {"identifier": "checkLocationSettingsAndStartLocationServices", "parameters": "(boolean shouldStartNow, OnLocationServicesEnabledCallBack onLocationServicesEnabledCallBack)", "modifiers": "private", "return": "void", "signature": "void checkLocationSettingsAndStartLocationServices(boolean shouldStartNow, OnLocationServicesEnabledCallBack onLocationServicesEnabledCallBack)", "full_signature": "private void checkLocationSettingsAndStartLocationServices(boolean shouldStartNow, OnLocationServicesEnabledCallBack onLocationServicesEnabledCallBack)", "class_method_signature": "KujakuMapView.checkLocationSettingsAndStartLocationServices(boolean shouldStartNow, OnLocationServicesEnabledCallBack onLocationServicesEnabledCallBack)", "testcase": false, "constructor": false}, {"identifier": "onMapClick", "parameters": "(@NonNull LatLng point)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean onMapClick(@NonNull LatLng point)", "full_signature": "@Override public boolean onMapClick(@NonNull LatLng point)", "class_method_signature": "KujakuMapView.onMapClick(@NonNull LatLng point)", "testcase": false, "constructor": false}, {"identifier": "onMapLongClick", "parameters": "(@NonNull LatLng point)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean onMapLongClick(@NonNull LatLng point)", "full_signature": "@Override public boolean onMapLongClick(@NonNull LatLng point)", "class_method_signature": "KujakuMapView.onMapLongClick(@NonNull LatLng point)", "testcase": false, "constructor": false}, {"identifier": "isWarmGps", "parameters": "()", "modifiers": "public", "return": "boolean", "signature": "boolean isWarmGps()", "full_signature": "public boolean isWarmGps()", "class_method_signature": "KujakuMapView.isWarmGps()", "testcase": false, "constructor": false}, {"identifier": "setWarmGps", "parameters": "(boolean warmGps)", "modifiers": "public", "return": "void", "signature": "void setWarmGps(boolean warmGps)", "full_signature": "public void setWarmGps(boolean warmGps)", "class_method_signature": "KujakuMapView.setWarmGps(boolean warmGps)", "testcase": false, "constructor": false}, {"identifier": "setWarmGps", "parameters": "(boolean warmGps, @Nullable String rejectionDialogTitle, @Nullable String rejectionDialogMessage)", "modifiers": "public", "return": "void", "signature": "void setWarmGps(boolean warmGps, @Nullable String rejectionDialogTitle, @Nullable String rejectionDialogMessage)", "full_signature": "public void setWarmGps(boolean warmGps, @Nullable String rejectionDialogTitle, @Nullable String rejectionDialogMessage)", "class_method_signature": "KujakuMapView.setWarmGps(boolean warmGps, @Nullable String rejectionDialogTitle, @Nullable String rejectionDialogMessage)", "testcase": false, "constructor": false}, {"identifier": "setWarmGps", "parameters": "(boolean warmGps, @Nullable String rejectionDialogTitle, @Nullable String rejectionDialogMessage, OnLocationServicesEnabledCallBack onLocationServicesEnabledCallBack)", "modifiers": "public", "return": "void", "signature": "void setWarmGps(boolean warmGps, @Nullable String rejectionDialogTitle, @Nullable String rejectionDialogMessage, OnLocationServicesEnabledCallBack onLocationServicesEnabledCallBack)", "full_signature": "public void setWarmGps(boolean warmGps, @Nullable String rejectionDialogTitle, @Nullable String rejectionDialogMessage, OnLocationServicesEnabledCallBack onLocationServicesEnabledCallBack)", "class_method_signature": "KujakuMapView.setWarmGps(boolean warmGps, @Nullable String rejectionDialogTitle, @Nullable String rejectionDialogMessage, OnLocationServicesEnabledCallBack onLocationServicesEnabledCallBack)", "testcase": false, "constructor": false}, {"identifier": "getLocationClient", "parameters": "()", "modifiers": "@Nullable @Override public", "return": "ILocationClient", "signature": "ILocationClient getLocationClient()", "full_signature": "@Nullable @Override public ILocationClient getLocationClient()", "class_method_signature": "KujakuMapView.getLocationClient()", "testcase": false, "constructor": false}, {"identifier": "setLocationBufferRadius", "parameters": "(float locationBufferRadius)", "modifiers": "public", "return": "void", "signature": "void setLocationBufferRadius(float locationBufferRadius)", "full_signature": "public void setLocationBufferRadius(float locationBufferRadius)", "class_method_signature": "KujakuMapView.setLocationBufferRadius(float locationBufferRadius)", "testcase": false, "constructor": false}, {"identifier": "getLocationClient", "parameters": "(@Nullable LocationClientStartedCallback locationClientStartedCallback)", "modifiers": "@Override public", "return": "void", "signature": "void getLocationClient(@Nullable LocationClientStartedCallback locationClientStartedCallback)", "full_signature": "@Override public void getLocationClient(@Nullable LocationClientStartedCallback locationClientStartedCallback)", "class_method_signature": "KujakuMapView.getLocationClient(@Nullable LocationClientStartedCallback locationClientStartedCallback)", "testcase": false, "constructor": false}, {"identifier": "addLayer", "parameters": "(@NonNull KujakuLayer kujakuLayer)", "modifiers": "@Override public", "return": "void", "signature": "void addLayer(@NonNull KujakuLayer kujakuLayer)", "full_signature": "@Override public void addLayer(@NonNull KujakuLayer kujakuLayer)", "class_method_signature": "KujakuMapView.addLayer(@NonNull KujakuLayer kujakuLayer)", "testcase": false, "constructor": false}, {"identifier": "disableLayer", "parameters": "(@NonNull KujakuLayer kujakuLayer)", "modifiers": "@Override public", "return": "void", "signature": "void disableLayer(@NonNull KujakuLayer kujakuLayer)", "full_signature": "@Override public void disableLayer(@NonNull KujakuLayer kujakuLayer)", "class_method_signature": "KujakuMapView.disableLayer(@NonNull KujakuLayer kujakuLayer)", "testcase": false, "constructor": false}, {"identifier": "changeLocationUpdates", "parameters": "(long updateInterval, long fastestUpdateInterval, int accuracyLevel)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean changeLocationUpdates(long updateInterval, long fastestUpdateInterval, int accuracyLevel)", "full_signature": "@Override public boolean changeLocationUpdates(long updateInterval, long fastestUpdateInterval, int accuracyLevel)", "class_method_signature": "KujakuMapView.changeLocationUpdates(long updateInterval, long fastestUpdateInterval, int accuracyLevel)", "testcase": false, "constructor": false}, {"identifier": "isKujakuLayerAdded", "parameters": "(@NonNull KujakuLayer kujakuLayer)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean isKujakuLayerAdded(@NonNull KujakuLayer kujakuLayer)", "full_signature": "@Override public boolean isKujakuLayerAdded(@NonNull KujakuLayer kujakuLayer)", "class_method_signature": "KujakuMapView.isKujakuLayerAdded(@NonNull KujakuLayer kujakuLayer)", "testcase": false, "constructor": false}, {"identifier": "removeLayer", "parameters": "(@NonNull KujakuLayer kujakuLayer)", "modifiers": "@Override public", "return": "void", "signature": "void removeLayer(@NonNull KujakuLayer kujakuLayer)", "full_signature": "@Override public void removeLayer(@NonNull KujakuLayer kujakuLayer)", "class_method_signature": "KujakuMapView.removeLayer(@NonNull KujakuLayer kujakuLayer)", "testcase": false, "constructor": false}, {"identifier": "resetRejectionDialogContent", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void resetRejectionDialogContent()", "full_signature": "private void resetRejectionDialogContent()", "class_method_signature": "KujakuMapView.resetRejectionDialogContent()", "testcase": false, "constructor": false}, {"identifier": "getMapboxLocationComponentWrapper", "parameters": "()", "modifiers": "public", "return": "MapboxLocationComponentWrapper", "signature": "MapboxLocationComponentWrapper getMapboxLocationComponentWrapper()", "full_signature": "public MapboxLocationComponentWrapper getMapboxLocationComponentWrapper()", "class_method_signature": "KujakuMapView.getMapboxLocationComponentWrapper()", "testcase": false, "constructor": false}, {"identifier": "initTrackingService", "parameters": "(@NonNull TrackingServiceListener trackingServiceListener,\n                                    TrackingServiceUIConfiguration uiConfiguration,\n                                    TrackingServiceOptions options)", "modifiers": "public", "return": "void", "signature": "void initTrackingService(@NonNull TrackingServiceListener trackingServiceListener,\n                                    TrackingServiceUIConfiguration uiConfiguration,\n                                    TrackingServiceOptions options)", "full_signature": "public void initTrackingService(@NonNull TrackingServiceListener trackingServiceListener,\n                                    TrackingServiceUIConfiguration uiConfiguration,\n                                    TrackingServiceOptions options)", "class_method_signature": "KujakuMapView.initTrackingService(@NonNull TrackingServiceListener trackingServiceListener,\n                                    TrackingServiceUIConfiguration uiConfiguration,\n                                    TrackingServiceOptions options)", "testcase": false, "constructor": false}, {"identifier": "resumeTrackingService", "parameters": "(Context context)", "modifiers": "public", "return": "boolean", "signature": "boolean resumeTrackingService(Context context)", "full_signature": "public boolean resumeTrackingService(Context context)", "class_method_signature": "KujakuMapView.resumeTrackingService(Context context)", "testcase": false, "constructor": false}, {"identifier": "startTrackingService", "parameters": "(@NonNull Context context,\n                                     @NonNull Class<?> cls)", "modifiers": "public", "return": "void", "signature": "void startTrackingService(@NonNull Context context,\n                                     @NonNull Class<?> cls)", "full_signature": "public void startTrackingService(@NonNull Context context,\n                                     @NonNull Class<?> cls)", "class_method_signature": "KujakuMapView.startTrackingService(@NonNull Context context,\n                                     @NonNull Class<?> cls)", "testcase": false, "constructor": false}, {"identifier": "stopTrackingService", "parameters": "(@NonNull Context context)", "modifiers": "public", "return": "List<KujakuLocation>", "signature": "List<KujakuLocation> stopTrackingService(@NonNull Context context)", "full_signature": "public List<KujakuLocation> stopTrackingService(@NonNull Context context)", "class_method_signature": "KujakuMapView.stopTrackingService(@NonNull Context context)", "testcase": false, "constructor": false}, {"identifier": "unBindTrackingService", "parameters": "(@NonNull Context context)", "modifiers": "private", "return": "void", "signature": "void unBindTrackingService(@NonNull Context context)", "full_signature": "private void unBindTrackingService(@NonNull Context context)", "class_method_signature": "KujakuMapView.unBindTrackingService(@NonNull Context context)", "testcase": false, "constructor": false}, {"identifier": "setTag", "parameters": "(long tag)", "modifiers": "public", "return": "boolean", "signature": "boolean setTag(long tag)", "full_signature": "public boolean setTag(long tag)", "class_method_signature": "KujakuMapView.setTag(long tag)", "testcase": false, "constructor": false}, {"identifier": "trackingServiceTakeLocation", "parameters": "(long tag)", "modifiers": "public", "return": "void", "signature": "void trackingServiceTakeLocation(long tag)", "full_signature": "public void trackingServiceTakeLocation(long tag)", "class_method_signature": "KujakuMapView.trackingServiceTakeLocation(long tag)", "testcase": false, "constructor": false}, {"identifier": "trackingServiceTakeLocation", "parameters": "()", "modifiers": "public", "return": "void", "signature": "void trackingServiceTakeLocation()", "full_signature": "public void trackingServiceTakeLocation()", "class_method_signature": "KujakuMapView.trackingServiceTakeLocation()", "testcase": false, "constructor": false}, {"identifier": "getTrackingServiceRecordedKujakuLocations", "parameters": "()", "modifiers": "public", "return": "List<KujakuLocation>", "signature": "List<KujakuLocation> getTrackingServiceRecordedKujakuLocations()", "full_signature": "public List<KujakuLocation> getTrackingServiceRecordedKujakuLocations()", "class_method_signature": "KujakuMapView.getTrackingServiceRecordedKujakuLocations()", "testcase": false, "constructor": false}, {"identifier": "initTrackingServiceIcon", "parameters": "()", "modifiers": "private", "return": "void", "signature": "void initTrackingServiceIcon()", "full_signature": "private void initTrackingServiceIcon()", "class_method_signature": "KujakuMapView.initTrackingServiceIcon()", "testcase": false, "constructor": false}, {"identifier": "setDisableMyLocationOnMapMove", "parameters": "(boolean disableMyLocationOnMapMove)", "modifiers": "@Override public", "return": "void", "signature": "void setDisableMyLocationOnMapMove(boolean disableMyLocationOnMapMove)", "full_signature": "@Override public void setDisableMyLocationOnMapMove(boolean disableMyLocationOnMapMove)", "class_method_signature": "KujakuMapView.setDisableMyLocationOnMapMove(boolean disableMyLocationOnMapMove)", "testcase": false, "constructor": false}, {"identifier": "getMbTilesHelper", "parameters": "()", "modifiers": "public", "return": "MBTilesHelper", "signature": "MBTilesHelper getMbTilesHelper()", "full_signature": "public MBTilesHelper getMbTilesHelper()", "class_method_signature": "KujakuMapView.getMbTilesHelper()", "testcase": false, "constructor": false}, {"identifier": "onDestroy", "parameters": "()", "modifiers": "@Override public", "return": "void", "signature": "void onDestroy()", "full_signature": "@Override public void onDestroy()", "class_method_signature": "KujakuMapView.onDestroy()", "testcase": false, "constructor": false}], "file": "library/src/main/java/io/ona/kujaku/views/KujakuMapView.java"}, "focal_method": {"identifier": "setOnFeatureLongClickListener", "parameters": "(@NonNull OnFeatureLongClickListener onFeatureLongClickListener, @Nullable String... layerIds)", "modifiers": "@Override public", "return": "void", "body": "@Override\n    public void setOnFeatureLongClickListener(@NonNull OnFeatureLongClickListener onFeatureLongClickListener, @Nullable String... layerIds) {\n        this.setOnFeatureLongClickListener(onFeatureLongClickListener, null, layerIds);\n    }", "signature": "void setOnFeatureLongClickListener(@NonNull OnFeatureLongClickListener onFeatureLongClickListener, @Nullable String... layerIds)", "full_signature": "@Override public void setOnFeatureLongClickListener(@NonNull OnFeatureLongClickListener onFeatureLongClickListener, @Nullable String... layerIds)", "class_method_signature": "KujakuMapView.setOnFeatureLongClickListener(@NonNull OnFeatureLongClickListener onFeatureLongClickListener, @Nullable String... layerIds)", "testcase": false, "constructor": false, "invocations": ["setOnFeatureLongClickListener"]}, "repository": {"repo_id": 109667968, "url": "https://github.com/onaio/kujaku", "language": "Java", "is_fork": false, "fork_count": 6, "stargazer_count": 14, "size": 4778, "license": "licensed"}}