{"test_class": {"identifier": "FunctionReturnDecoderTest", "superclass": "", "interfaces": "", "fields": [], "file": "abi/src/test/java/org/web3j/abi/FunctionReturnDecoderTest.java"}, "test_case": {"identifier": "testSimpleFunctionStringResultDecode", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testSimpleFunctionStringResultDecode() {\n        Function function = new Function(\"simple\",\n                Arrays.<Type>asList(),\n                Collections.<TypeReference<?>>singletonList(new TypeReference<Utf8String>() {\n                }));\n\n        List<Type> utf8Strings = FunctionReturnDecoder.decode(\n\n                \"0x0000000000000000000000000000000000000000000000000000000000000020\"\n                        + \"000000000000000000000000000000000000000000000000000000000000000d\"\n                        + \"6f6e65206d6f72652074696d6500000000000000000000000000000000000000\",\n                function.getOutputParameters());\n\n        assertThat((String) utf8Strings.get(0).getValue(), is(\"one more time\"));\n    }", "signature": "void testSimpleFunctionStringResultDecode()", "full_signature": "@Test public void testSimpleFunctionStringResultDecode()", "class_method_signature": "FunctionReturnDecoderTest.testSimpleFunctionStringResultDecode()", "testcase": true, "constructor": false, "invocations": ["asList", "singletonList", "decode", "getOutputParameters", "assertThat", "getValue", "get", "is"]}, "focal_class": {"identifier": "FunctionReturnDecoder", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "FunctionReturnDecoder", "parameters": "()", "modifiers": "private", "return": "", "signature": " FunctionReturnDecoder()", "full_signature": "private  FunctionReturnDecoder()", "class_method_signature": "FunctionReturnDecoder.FunctionReturnDecoder()", "testcase": false, "constructor": true}, {"identifier": "decode", "parameters": "(\n            String rawInput, List<TypeReference<Type>> outputParameters)", "modifiers": "public static", "return": "List<Type>", "signature": "List<Type> decode(\n            String rawInput, List<TypeReference<Type>> outputParameters)", "full_signature": "public static List<Type> decode(\n            String rawInput, List<TypeReference<Type>> outputParameters)", "class_method_signature": "FunctionReturnDecoder.decode(\n            String rawInput, List<TypeReference<Type>> outputParameters)", "testcase": false, "constructor": false}, {"identifier": "decodeIndexedValue", "parameters": "(\n            String rawInput, TypeReference<T> typeReference)", "modifiers": "@SuppressWarnings(\"unchecked\") public static", "return": "Type", "signature": "Type decodeIndexedValue(\n            String rawInput, TypeReference<T> typeReference)", "full_signature": "@SuppressWarnings(\"unchecked\") public static Type decodeIndexedValue(\n            String rawInput, TypeReference<T> typeReference)", "class_method_signature": "FunctionReturnDecoder.decodeIndexedValue(\n            String rawInput, TypeReference<T> typeReference)", "testcase": false, "constructor": false}, {"identifier": "build", "parameters": "(\n            String input, List<TypeReference<Type>> outputParameters)", "modifiers": "private static", "return": "List<Type>", "signature": "List<Type> build(\n            String input, List<TypeReference<Type>> outputParameters)", "full_signature": "private static List<Type> build(\n            String input, List<TypeReference<Type>> outputParameters)", "class_method_signature": "FunctionReturnDecoder.build(\n            String input, List<TypeReference<Type>> outputParameters)", "testcase": false, "constructor": false}, {"identifier": "getDataOffset", "parameters": "(String input, int offset, Class<T> type)", "modifiers": "private static", "return": "int", "signature": "int getDataOffset(String input, int offset, Class<T> type)", "full_signature": "private static int getDataOffset(String input, int offset, Class<T> type)", "class_method_signature": "FunctionReturnDecoder.getDataOffset(String input, int offset, Class<T> type)", "testcase": false, "constructor": false}], "file": "abi/src/main/java/org/web3j/abi/FunctionReturnDecoder.java"}, "focal_method": {"identifier": "decode", "parameters": "(\n            String rawInput, List<TypeReference<Type>> outputParameters)", "modifiers": "public static", "return": "List<Type>", "body": "public static List<Type> decode(\n            String rawInput, List<TypeReference<Type>> outputParameters) {\n        String input = Numeric.cleanHexPrefix(rawInput);\n\n        if (input.isEmpty()) {\n            return Collections.emptyList();\n        } else {\n            return build(input, outputParameters);\n        }\n    }", "signature": "List<Type> decode(\n            String rawInput, List<TypeReference<Type>> outputParameters)", "full_signature": "public static List<Type> decode(\n            String rawInput, List<TypeReference<Type>> outputParameters)", "class_method_signature": "FunctionReturnDecoder.decode(\n            String rawInput, List<TypeReference<Type>> outputParameters)", "testcase": false, "constructor": false, "invocations": ["cleanHexPrefix", "isEmpty", "emptyList", "build"]}, "repository": {"repo_id": 149736342, "url": "https://github.com/BrahmaOS/brahmaos-web3j", "language": "Java", "is_fork": false, "fork_count": 0, "stargazer_count": 5, "size": 1779, "license": "licensed"}}