{"test_class": {"identifier": "TagTypeRestControllerTest", "superclass": "extends AbstractRestTest", "interfaces": "", "fields": [{"original_string": "@InjectMocks\n    private TagTypeRestController tagTypeRestController;", "modifier": "@InjectMocks\n    private", "type": "TagTypeRestController", "declarator": "tagTypeRestController", "var_name": "tagTypeRestController"}, {"original_string": "@Mock\n    private TagTypeService tagTypeService;", "modifier": "@Mock\n    private", "type": "TagTypeService", "declarator": "tagTypeService", "var_name": "tagTypeService"}], "file": "herd-code/herd-rest/src/test/java/org/finra/herd/rest/TagTypeRestControllerTest.java"}, "test_case": {"identifier": "testGetTagTypes", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testGetTagTypes() throws Exception\n    {\n        TagTypeKeys tagTypeKeys = new TagTypeKeys(Arrays.asList(new TagTypeKey(TAG_TYPE)));\n\n        when(tagTypeService.getTagTypes()).thenReturn(tagTypeKeys);\n\n        // Retrieve a list of tag type keys.\n        TagTypeKeys resultTagTypeKeys = tagTypeRestController.getTagTypes();\n\n        // Verify the external calls.\n        verify(tagTypeService).getTagTypes();\n        verifyNoMoreInteractions(tagTypeService);\n\n        // Validate the returned object.\n        assertEquals(tagTypeKeys, resultTagTypeKeys);\n    }", "signature": "void testGetTagTypes()", "full_signature": "@Test public void testGetTagTypes()", "class_method_signature": "TagTypeRestControllerTest.testGetTagTypes()", "testcase": true, "constructor": false, "invocations": ["asList", "thenReturn", "when", "getTagTypes", "getTagTypes", "getTagTypes", "verify", "verifyNoMoreInteractions", "assertEquals"]}, "focal_class": {"identifier": "TagTypeRestController", "superclass": "", "interfaces": "", "fields": [{"original_string": "public final static String TAG_TYPES_URI_PREFIX = \"/tagTypes\";", "modifier": "public final static", "type": "String", "declarator": "TAG_TYPES_URI_PREFIX = \"/tagTypes\"", "var_name": "TAG_TYPES_URI_PREFIX"}, {"original_string": "@Autowired\n    private TagTypeService tagTypeService;", "modifier": "@Autowired\n    private", "type": "TagTypeService", "declarator": "tagTypeService", "var_name": "tagTypeService"}], "methods": [{"identifier": "createTagType", "parameters": "(@RequestBody TagTypeCreateRequest request)", "modifiers": "@RequestMapping(value = TAG_TYPES_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_TAG_TYPES_POST) public", "return": "TagType", "signature": "TagType createTagType(@RequestBody TagTypeCreateRequest request)", "full_signature": "@RequestMapping(value = TAG_TYPES_URI_PREFIX, method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_TAG_TYPES_POST) public TagType createTagType(@RequestBody TagTypeCreateRequest request)", "class_method_signature": "TagTypeRestController.createTagType(@RequestBody TagTypeCreateRequest request)", "testcase": false, "constructor": false}, {"identifier": "deleteTagType", "parameters": "(@PathVariable(\"tagTypeCode\") String tagTypeCode)", "modifiers": "@RequestMapping(value = TAG_TYPES_URI_PREFIX + \"/{tagTypeCode}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_TAG_TYPES_DELETE) public", "return": "TagType", "signature": "TagType deleteTagType(@PathVariable(\"tagTypeCode\") String tagTypeCode)", "full_signature": "@RequestMapping(value = TAG_TYPES_URI_PREFIX + \"/{tagTypeCode}\", method = RequestMethod.DELETE) @Secured(SecurityFunctions.FN_TAG_TYPES_DELETE) public TagType deleteTagType(@PathVariable(\"tagTypeCode\") String tagTypeCode)", "class_method_signature": "TagTypeRestController.deleteTagType(@PathVariable(\"tagTypeCode\") String tagTypeCode)", "testcase": false, "constructor": false}, {"identifier": "getTagType", "parameters": "(@PathVariable(\"tagTypeCode\") String tagTypeCode)", "modifiers": "@RequestMapping(value = TAG_TYPES_URI_PREFIX + \"/{tagTypeCode}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_TAG_TYPES_GET) public", "return": "TagType", "signature": "TagType getTagType(@PathVariable(\"tagTypeCode\") String tagTypeCode)", "full_signature": "@RequestMapping(value = TAG_TYPES_URI_PREFIX + \"/{tagTypeCode}\", method = RequestMethod.GET) @Secured(SecurityFunctions.FN_TAG_TYPES_GET) public TagType getTagType(@PathVariable(\"tagTypeCode\") String tagTypeCode)", "class_method_signature": "TagTypeRestController.getTagType(@PathVariable(\"tagTypeCode\") String tagTypeCode)", "testcase": false, "constructor": false}, {"identifier": "getTagTypes", "parameters": "()", "modifiers": "@RequestMapping(value = TAG_TYPES_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_TAG_TYPES_ALL_GET) public", "return": "TagTypeKeys", "signature": "TagTypeKeys getTagTypes()", "full_signature": "@RequestMapping(value = TAG_TYPES_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_TAG_TYPES_ALL_GET) public TagTypeKeys getTagTypes()", "class_method_signature": "TagTypeRestController.getTagTypes()", "testcase": false, "constructor": false}, {"identifier": "searchTagTypes", "parameters": "(@RequestBody TagTypeSearchRequest request,\n        @RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields)", "modifiers": "@RequestMapping(value = TAG_TYPES_URI_PREFIX + \"/search\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_TAG_TYPES_SEARCH_POST) public", "return": "TagTypeSearchResponse", "signature": "TagTypeSearchResponse searchTagTypes(@RequestBody TagTypeSearchRequest request,\n        @RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields)", "full_signature": "@RequestMapping(value = TAG_TYPES_URI_PREFIX + \"/search\", method = RequestMethod.POST, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_TAG_TYPES_SEARCH_POST) public TagTypeSearchResponse searchTagTypes(@RequestBody TagTypeSearchRequest request,\n        @RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields)", "class_method_signature": "TagTypeRestController.searchTagTypes(@RequestBody TagTypeSearchRequest request,\n        @RequestParam(value = \"fields\", required = false, defaultValue = \"\") Set<String> fields)", "testcase": false, "constructor": false}, {"identifier": "updateTagType", "parameters": "(@PathVariable(\"tagTypeCode\") String tagTypeCode, @RequestBody TagTypeUpdateRequest request)", "modifiers": "@RequestMapping(value = TAG_TYPES_URI_PREFIX + \"/{tagTypeCode}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_TAG_TYPES_PUT) public", "return": "TagType", "signature": "TagType updateTagType(@PathVariable(\"tagTypeCode\") String tagTypeCode, @RequestBody TagTypeUpdateRequest request)", "full_signature": "@RequestMapping(value = TAG_TYPES_URI_PREFIX + \"/{tagTypeCode}\", method = RequestMethod.PUT, consumes = {\"application/xml\", \"application/json\"}) @Secured(SecurityFunctions.FN_TAG_TYPES_PUT) public TagType updateTagType(@PathVariable(\"tagTypeCode\") String tagTypeCode, @RequestBody TagTypeUpdateRequest request)", "class_method_signature": "TagTypeRestController.updateTagType(@PathVariable(\"tagTypeCode\") String tagTypeCode, @RequestBody TagTypeUpdateRequest request)", "testcase": false, "constructor": false}], "file": "herd-code/herd-rest/src/main/java/org/finra/herd/rest/TagTypeRestController.java"}, "focal_method": {"identifier": "getTagTypes", "parameters": "()", "modifiers": "@RequestMapping(value = TAG_TYPES_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_TAG_TYPES_ALL_GET) public", "return": "TagTypeKeys", "body": "@RequestMapping(value = TAG_TYPES_URI_PREFIX, method = RequestMethod.GET)\n    @Secured(SecurityFunctions.FN_TAG_TYPES_ALL_GET)\n    public TagTypeKeys getTagTypes()\n    {\n        return tagTypeService.getTagTypes();\n    }", "signature": "TagTypeKeys getTagTypes()", "full_signature": "@RequestMapping(value = TAG_TYPES_URI_PREFIX, method = RequestMethod.GET) @Secured(SecurityFunctions.FN_TAG_TYPES_ALL_GET) public TagTypeKeys getTagTypes()", "class_method_signature": "TagTypeRestController.getTagTypes()", "testcase": false, "constructor": false, "invocations": ["getTagTypes"]}, "repository": {"repo_id": 42949039, "url": "https://github.com/FINRAOS/herd", "language": "Java", "is_fork": false, "fork_count": 36, "stargazer_count": 120, "size": 205797, "license": "licensed"}}