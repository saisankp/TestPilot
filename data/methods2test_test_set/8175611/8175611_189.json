{"test_class": {"identifier": "DataProviderFrameworkMethodTest", "superclass": "extends BaseTest", "interfaces": "", "fields": [{"original_string": "@Mock\n    private BasePlaceholder placeholder;", "modifier": "@Mock\n    private", "type": "BasePlaceholder", "declarator": "placeholder", "var_name": "placeholder"}, {"original_string": "private final Method method = anyMethod();", "modifier": "private final", "type": "Method", "declarator": "method = anyMethod()", "var_name": "method"}], "file": "junit4/src/test/java/com/tngtech/java/junit/dataprovider/DataProviderFrameworkMethodTest.java"}, "test_case": {"identifier": "testHashCodeShouldBeEqualForEqualObjects", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testHashCodeShouldBeEqualForEqualObjects() {\n        // Given:\n        final Object[] params1 = new Object[] { 4.2, 't', false };\n        final Object[] params2 = new Object[] { 4.2, 't', false };\n\n        DataProviderFrameworkMethod m1 = new DataProviderFrameworkMethod(method, 90, params1, \"%p[90]\");\n        DataProviderFrameworkMethod m2 = new DataProviderFrameworkMethod(method, 90, params2, \"%p[90]\");\n\n        // When:\n        int result = m1.hashCode();\n\n        // Then:\n        assertThat(result).isEqualTo(m2.hashCode());\n    }", "signature": "void testHashCodeShouldBeEqualForEqualObjects()", "full_signature": "@Test public void testHashCodeShouldBeEqualForEqualObjects()", "class_method_signature": "DataProviderFrameworkMethodTest.testHashCodeShouldBeEqualForEqualObjects()", "testcase": true, "constructor": false, "invocations": ["hashCode", "isEqualTo", "assertThat", "hashCode"]}, "focal_class": {"identifier": "DataProviderFrameworkMethod", "superclass": "extends FrameworkMethod", "interfaces": "", "fields": [{"original_string": "final int idx;", "modifier": "final", "type": "int", "declarator": "idx", "var_name": "idx"}, {"original_string": "final Object[] parameters;", "modifier": "final", "type": "Object[]", "declarator": "parameters", "var_name": "parameters"}, {"original_string": "final String nameFormat;", "modifier": "final", "type": "String", "declarator": "nameFormat", "var_name": "nameFormat"}, {"original_string": "final Class<? extends DataProviderTestNameFormatter> nameFormatter;", "modifier": "final", "type": "Class<? extends DataProviderTestNameFormatter>", "declarator": "nameFormatter", "var_name": "nameFormatter"}], "methods": [{"identifier": "DataProviderFrameworkMethod", "parameters": "(Method method, int idx, Object[] parameters, String nameFormat)", "modifiers": "public", "return": "", "signature": " DataProviderFrameworkMethod(Method method, int idx, Object[] parameters, String nameFormat)", "full_signature": "public  DataProviderFrameworkMethod(Method method, int idx, Object[] parameters, String nameFormat)", "class_method_signature": "DataProviderFrameworkMethod.DataProviderFrameworkMethod(Method method, int idx, Object[] parameters, String nameFormat)", "testcase": false, "constructor": true}, {"identifier": "DataProviderFrameworkMethod", "parameters": "(Method method, int idx, Object[] parameters,\n            String nameFormat, Class<? extends DataProviderTestNameFormatter> nameFormatter)", "modifiers": "public", "return": "", "signature": " DataProviderFrameworkMethod(Method method, int idx, Object[] parameters,\n            String nameFormat, Class<? extends DataProviderTestNameFormatter> nameFormatter)", "full_signature": "public  DataProviderFrameworkMethod(Method method, int idx, Object[] parameters,\n            String nameFormat, Class<? extends DataProviderTestNameFormatter> nameFormatter)", "class_method_signature": "DataProviderFrameworkMethod.DataProviderFrameworkMethod(Method method, int idx, Object[] parameters,\n            String nameFormat, Class<? extends DataProviderTestNameFormatter> nameFormatter)", "testcase": false, "constructor": true}, {"identifier": "getName", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String getName()", "full_signature": "@Override public String getName()", "class_method_signature": "DataProviderFrameworkMethod.getName()", "testcase": false, "constructor": false}, {"identifier": "invokeExplosively", "parameters": "(Object target, Object... params)", "modifiers": "@Override public", "return": "Object", "signature": "Object invokeExplosively(Object target, Object... params)", "full_signature": "@Override public Object invokeExplosively(Object target, Object... params)", "class_method_signature": "DataProviderFrameworkMethod.invokeExplosively(Object target, Object... params)", "testcase": false, "constructor": false}, {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DataProviderFrameworkMethod.hashCode()", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "DataProviderFrameworkMethod.equals(Object obj)", "testcase": false, "constructor": false}], "file": "junit4/src/main/java/com/tngtech/java/junit/dataprovider/DataProviderFrameworkMethod.java"}, "focal_method": {"identifier": "hashCode", "parameters": "()", "modifiers": "@Override public", "return": "int", "body": "@Override\n    public int hashCode() {\n        final int prime = 31;\n        int result = super.hashCode();\n        result = prime * result + idx;\n        result = prime * result + ((nameFormat == null) ? 0 : nameFormat.hashCode());\n        result = prime * result + Arrays.hashCode(parameters);\n        return result;\n    }", "signature": "int hashCode()", "full_signature": "@Override public int hashCode()", "class_method_signature": "DataProviderFrameworkMethod.hashCode()", "testcase": false, "constructor": false, "invocations": ["hashCode", "hashCode", "hashCode"]}, "repository": {"repo_id": 8175611, "url": "https://github.com/TNG/junit-dataprovider", "language": "Java", "is_fork": false, "fork_count": 37, "stargazer_count": 215, "size": 1383, "license": "licensed"}}