{"test_class": {"identifier": "HelloWorldTest", "superclass": "", "interfaces": "", "fields": [], "file": "small/src/test/java/com/builddoctor/HelloWorldTest.java"}, "test_case": {"identifier": "testHelloMessage", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n\tpublic void testHelloMessage() {\n\t\tHelloWorld helloWorld = new HelloWorld();\n\t\tassertEquals(helloWorld.helloMessage(), \"Well hi there\");\n\t}", "signature": "void testHelloMessage()", "full_signature": "@Test public void testHelloMessage()", "class_method_signature": "HelloWorldTest.testHelloMessage()", "testcase": true, "constructor": false, "invocations": ["assertEquals", "helloMessage"]}, "focal_class": {"identifier": "HelloWorld", "superclass": "", "interfaces": "", "fields": [], "methods": [{"identifier": "helloMessage", "parameters": "()", "modifiers": "public", "return": "String", "signature": "String helloMessage()", "full_signature": "public String helloMessage()", "class_method_signature": "HelloWorld.helloMessage()", "testcase": false, "constructor": false}, {"identifier": "main", "parameters": "(String[] args)", "modifiers": "public static", "return": "void", "signature": "void main(String[] args)", "full_signature": "public static void main(String[] args)", "class_method_signature": "HelloWorld.main(String[] args)", "testcase": false, "constructor": false}], "file": "small/src/main/java/com/builddoctor/HelloWorld.java"}, "focal_method": {"identifier": "helloMessage", "parameters": "()", "modifiers": "public", "return": "String", "body": "public String helloMessage() { \n    return \"Well hi there\";\n  }", "signature": "String helloMessage()", "full_signature": "public String helloMessage()", "class_method_signature": "HelloWorld.helloMessage()", "testcase": false, "constructor": false, "invocations": []}, "repository": {"repo_id": 2310387, "url": "https://github.com/builddoctor/JavaBuildComparison", "language": "Java", "is_fork": false, "fork_count": 2, "stargazer_count": 6, "size": 14939, "license": "licensed"}}