{"test_class": {"identifier": "IndexTest", "superclass": "", "interfaces": "", "fields": [], "file": "dflib/src/test/java/com/nhl/dflib/IndexTest.java"}, "test_case": {"identifier": "testWithNames_Enum", "parameters": "()", "modifiers": "@Test public", "return": "void", "body": "@Test\n    public void testWithNames_Enum() {\n        Index i = Index.forLabels(E1.class);\n        IndexAsserts.expect(i, \"a\", \"b\", \"c\");\n    }", "signature": "void testWithNames_Enum()", "full_signature": "@Test public void testWithNames_Enum()", "class_method_signature": "IndexTest.testWithNames_Enum()", "testcase": true, "constructor": false, "invocations": ["forLabels", "expect"]}, "focal_class": {"identifier": "Index", "superclass": "", "interfaces": "implements Iterable<String>", "fields": [{"original_string": "protected String[] labels;", "modifier": "protected", "type": "String[]", "declarator": "labels", "var_name": "labels"}, {"original_string": "protected Map<String, Integer> labelPositions;", "modifier": "protected", "type": "Map<String, Integer>", "declarator": "labelPositions", "var_name": "labelPositions"}], "methods": [{"identifier": "Index", "parameters": "(String... labels)", "modifiers": "protected", "return": "", "signature": " Index(String... labels)", "full_signature": "protected  Index(String... labels)", "class_method_signature": "Index.Index(String... labels)", "testcase": false, "constructor": true}, {"identifier": "forLabels", "parameters": "(Class<E> columns)", "modifiers": "public static", "return": "Index", "signature": "Index forLabels(Class<E> columns)", "full_signature": "public static Index forLabels(Class<E> columns)", "class_method_signature": "Index.forLabels(Class<E> columns)", "testcase": false, "constructor": false}, {"identifier": "forLabels", "parameters": "(String... labels)", "modifiers": "public static", "return": "Index", "signature": "Index forLabels(String... labels)", "full_signature": "public static Index forLabels(String... labels)", "class_method_signature": "Index.forLabels(String... labels)", "testcase": false, "constructor": false}, {"identifier": "forLabels", "parameters": "(Series<String> labels)", "modifiers": "public static", "return": "Index", "signature": "Index forLabels(Series<String> labels)", "full_signature": "public static Index forLabels(Series<String> labels)", "class_method_signature": "Index.forLabels(Series<String> labels)", "testcase": false, "constructor": false}, {"identifier": "forLabelsDeduplicate", "parameters": "(String... labels)", "modifiers": "public static", "return": "Index", "signature": "Index forLabelsDeduplicate(String... labels)", "full_signature": "public static Index forLabelsDeduplicate(String... labels)", "class_method_signature": "Index.forLabelsDeduplicate(String... labels)", "testcase": false, "constructor": false}, {"identifier": "iterator", "parameters": "()", "modifiers": "@Override public", "return": "Iterator<String>", "signature": "Iterator<String> iterator()", "full_signature": "@Override public Iterator<String> iterator()", "class_method_signature": "Index.iterator()", "testcase": false, "constructor": false}, {"identifier": "rename", "parameters": "(UnaryOperator<String> renameFunction)", "modifiers": "public", "return": "Index", "signature": "Index rename(UnaryOperator<String> renameFunction)", "full_signature": "public Index rename(UnaryOperator<String> renameFunction)", "class_method_signature": "Index.rename(UnaryOperator<String> renameFunction)", "testcase": false, "constructor": false}, {"identifier": "rename", "parameters": "(Map<String, String> oldToNewLabels)", "modifiers": "public", "return": "Index", "signature": "Index rename(Map<String, String> oldToNewLabels)", "full_signature": "public Index rename(Map<String, String> oldToNewLabels)", "class_method_signature": "Index.rename(Map<String, String> oldToNewLabels)", "testcase": false, "constructor": false}, {"identifier": "rename", "parameters": "(String... newLabels)", "modifiers": "public", "return": "Index", "signature": "Index rename(String... newLabels)", "full_signature": "public Index rename(String... newLabels)", "class_method_signature": "Index.rename(String... newLabels)", "testcase": false, "constructor": false}, {"identifier": "addLabels", "parameters": "(String... extraLabels)", "modifiers": "public", "return": "Index", "signature": "Index addLabels(String... extraLabels)", "full_signature": "public Index addLabels(String... extraLabels)", "class_method_signature": "Index.addLabels(String... extraLabels)", "testcase": false, "constructor": false}, {"identifier": "selectPositions", "parameters": "(IntSeries positions)", "modifiers": "public", "return": "Index", "signature": "Index selectPositions(IntSeries positions)", "full_signature": "public Index selectPositions(IntSeries positions)", "class_method_signature": "Index.selectPositions(IntSeries positions)", "testcase": false, "constructor": false}, {"identifier": "selectPositions", "parameters": "(int... positions)", "modifiers": "public", "return": "Index", "signature": "Index selectPositions(int... positions)", "full_signature": "public Index selectPositions(int... positions)", "class_method_signature": "Index.selectPositions(int... positions)", "testcase": false, "constructor": false}, {"identifier": "rangeOpenClosed", "parameters": "(int fromInclusive, int toExclusive)", "modifiers": "public", "return": "Index", "signature": "Index rangeOpenClosed(int fromInclusive, int toExclusive)", "full_signature": "public Index rangeOpenClosed(int fromInclusive, int toExclusive)", "class_method_signature": "Index.rangeOpenClosed(int fromInclusive, int toExclusive)", "testcase": false, "constructor": false}, {"identifier": "selectLabels", "parameters": "(String... labels)", "modifiers": "public", "return": "Index", "signature": "Index selectLabels(String... labels)", "full_signature": "public Index selectLabels(String... labels)", "class_method_signature": "Index.selectLabels(String... labels)", "testcase": false, "constructor": false}, {"identifier": "selectLabels", "parameters": "(Predicate<String> includeCondition)", "modifiers": "public", "return": "Index", "signature": "Index selectLabels(Predicate<String> includeCondition)", "full_signature": "public Index selectLabels(Predicate<String> includeCondition)", "class_method_signature": "Index.selectLabels(Predicate<String> includeCondition)", "testcase": false, "constructor": false}, {"identifier": "dropLabels", "parameters": "(String... labels)", "modifiers": "public", "return": "Index", "signature": "Index dropLabels(String... labels)", "full_signature": "public Index dropLabels(String... labels)", "class_method_signature": "Index.dropLabels(String... labels)", "testcase": false, "constructor": false}, {"identifier": "dropLabels", "parameters": "(Predicate<String> labelCondition)", "modifiers": "public", "return": "Index", "signature": "Index dropLabels(Predicate<String> labelCondition)", "full_signature": "public Index dropLabels(Predicate<String> labelCondition)", "class_method_signature": "Index.dropLabels(Predicate<String> labelCondition)", "testcase": false, "constructor": false}, {"identifier": "getLabels", "parameters": "()", "modifiers": "public", "return": "String[]", "signature": "String[] getLabels()", "full_signature": "public String[] getLabels()", "class_method_signature": "Index.getLabels()", "testcase": false, "constructor": false}, {"identifier": "getLabel", "parameters": "(int pos)", "modifiers": "public", "return": "String", "signature": "String getLabel(int pos)", "full_signature": "public String getLabel(int pos)", "class_method_signature": "Index.getLabel(int pos)", "testcase": false, "constructor": false}, {"identifier": "size", "parameters": "()", "modifiers": "public", "return": "int", "signature": "int size()", "full_signature": "public int size()", "class_method_signature": "Index.size()", "testcase": false, "constructor": false}, {"identifier": "position", "parameters": "(String label)", "modifiers": "public", "return": "int", "signature": "int position(String label)", "full_signature": "public int position(String label)", "class_method_signature": "Index.position(String label)", "testcase": false, "constructor": false}, {"identifier": "hasLabel", "parameters": "(String label)", "modifiers": "public", "return": "boolean", "signature": "boolean hasLabel(String label)", "full_signature": "public boolean hasLabel(String label)", "class_method_signature": "Index.hasLabel(String label)", "testcase": false, "constructor": false}, {"identifier": "equals", "parameters": "(Object obj)", "modifiers": "@Override public", "return": "boolean", "signature": "boolean equals(Object obj)", "full_signature": "@Override public boolean equals(Object obj)", "class_method_signature": "Index.equals(Object obj)", "testcase": false, "constructor": false}, {"identifier": "sample", "parameters": "(int size)", "modifiers": "public", "return": "Index", "signature": "Index sample(int size)", "full_signature": "public Index sample(int size)", "class_method_signature": "Index.sample(int size)", "testcase": false, "constructor": false}, {"identifier": "sample", "parameters": "(int size, Random random)", "modifiers": "public", "return": "Index", "signature": "Index sample(int size, Random random)", "full_signature": "public Index sample(int size, Random random)", "class_method_signature": "Index.sample(int size, Random random)", "testcase": false, "constructor": false}, {"identifier": "toSeries", "parameters": "()", "modifiers": "public", "return": "Series<String>", "signature": "Series<String> toSeries()", "full_signature": "public Series<String> toSeries()", "class_method_signature": "Index.toSeries()", "testcase": false, "constructor": false}, {"identifier": "toString", "parameters": "()", "modifiers": "@Override public", "return": "String", "signature": "String toString()", "full_signature": "@Override public String toString()", "class_method_signature": "Index.toString()", "testcase": false, "constructor": false}, {"identifier": "computeLabelPositions", "parameters": "()", "modifiers": "private", "return": "Map<String, Integer>", "signature": "Map<String, Integer> computeLabelPositions()", "full_signature": "private Map<String, Integer> computeLabelPositions()", "class_method_signature": "Index.computeLabelPositions()", "testcase": false, "constructor": false}], "file": "dflib/src/main/java/com/nhl/dflib/Index.java"}, "focal_method": {"identifier": "forLabels", "parameters": "(Class<E> columns)", "modifiers": "public static", "return": "Index", "body": "public static <E extends Enum<E>> Index forLabels(Class<E> columns) {\n\n        E[] enumValues = columns.getEnumConstants();\n        String[] labels = new String[enumValues.length];\n        for (int i = 0; i < enumValues.length; i++) {\n            labels[i] = enumValues[i].name();\n        }\n\n        return forLabels(labels);\n    }", "signature": "Index forLabels(Class<E> columns)", "full_signature": "public static Index forLabels(Class<E> columns)", "class_method_signature": "Index.forLabels(Class<E> columns)", "testcase": false, "constructor": false, "invocations": ["getEnumConstants", "name", "forLabels"]}, "repository": {"repo_id": 164392211, "url": "https://github.com/nhl/dflib", "stars": 13, "created": "1/7/2019 7:07:58 AM +00:00", "updates": "2019-12-23T13:26:53+00:00", "fork": "False", "license": "licensed"}}